{"files":[{"patch":"@@ -349,0 +349,3 @@\n+defineProperty(\"icuRepositoryURL\", \"https:\/\/github.com\/unicode-org\/icu\/releases\/\")\n+\n+defineProperty(\"icuVersion\", \"68.2\")\n@@ -1905,0 +1908,15 @@\n+    if (JFX_DEPS_URL == \"\" && IS_COMPILE_WEBKIT) {\n+        def icuReleaseVersion = icuVersion.replaceAll('\\\\.', '-')\n+        repositories {\n+            ivy {\n+                url icuRepositoryURL\n+                metadataSources {\n+                    artifact()\n+                }\n+                patternLayout {\n+                    artifact \"download\/release-$icuReleaseVersion\/[artifact].[ext]\"\n+                }\n+            }\n+        }\n+    }\n+\n@@ -3343,0 +3361,2 @@\n+    getConfigurations().create(\"icu\");\n+\n@@ -3365,0 +3385,3 @@\n+        if (IS_COMPILE_WEBKIT) {\n+            icu name: \"icu4c-${icuVersion}-data-bin-l\", ext: \"zip\"\n+        }\n@@ -3446,1 +3469,8 @@\n-        def compileNativeTask = task(\"compileNative${t.capital}\", dependsOn: [compileJava]) {\n+        def getICUFile = task(\"copyICUFile\", type: Copy) {\n+            enabled = IS_COMPILE_WEBKIT\n+\n+            from configurations.icu.files\n+            into \"$webkitOutputDir\/$webkitConfig\/icu\/data\"\n+        }\n+\n+        def compileNativeTask = task(\"compileNative${t.capital}\", dependsOn: [compileJava, getICUFile]) {\n","filename":"build.gradle","additions":31,"deletions":1,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## IBM International Components for Unicode (ICU4C) v64.2\n+## IBM International Components for Unicode (ICU4C) v68.2\n@@ -8,1 +8,1 @@\n-Copyright © 1991-2019 Unicode, Inc. All rights reserved.\n+Copyright © 1991-2020 Unicode, Inc. All rights reserved.\n@@ -292,3 +292,3 @@\n- # Project: http:\/\/code.google.com\/p\/lao-dictionary\/\n- # Dictionary: http:\/\/lao-dictionary.googlecode.com\/git\/Lao-Dictionary.txt\n- # License: http:\/\/lao-dictionary.googlecode.com\/git\/Lao-Dictionary-LICENSE.txt\n+ # Project: https:\/\/github.com\/veer66\/lao-dictionary\n+ # Dictionary: https:\/\/github.com\/veer66\/lao-dictionary\/blob\/master\/Lao-Dictionary.txt\n+ # License: https:\/\/github.com\/veer66\/lao-dictionary\/blob\/master\/Lao-Dictionary-LICENSE.txt\n","filename":"modules\/javafx.web\/src\/main\/legal\/icu_web.md","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -70,1 +70,0 @@\n-    source\/common\/bytestriebuilder.cpp\n@@ -72,0 +71,1 @@\n+    source\/common\/bytestriebuilder.cpp\n@@ -92,0 +92,2 @@\n+    source\/common\/localematcher.cpp\n+    source\/common\/localeprioritylist.cpp\n@@ -95,0 +97,1 @@\n+    source\/common\/locdistance.cpp\n@@ -98,0 +101,1 @@\n+    source\/common\/loclikelysubtags.cpp\n@@ -101,0 +105,1 @@\n+    source\/common\/lsr.cpp\n@@ -112,1 +117,0 @@\n-    source\/common\/rbbi_cache.cpp\n@@ -114,0 +118,1 @@\n+    source\/common\/rbbi_cache.cpp\n@@ -121,1 +126,0 @@\n-    source\/common\/resbund_cnv.cpp\n@@ -123,0 +127,1 @@\n+    source\/common\/resbund_cnv.cpp\n@@ -124,0 +129,1 @@\n+    source\/common\/restrace.cpp\n@@ -140,1 +146,0 @@\n-    source\/common\/ubidiln.cpp\n@@ -142,0 +147,1 @@\n+    source\/common\/ubidiln.cpp\n@@ -150,1 +156,0 @@\n-    source\/common\/ucharstriebuilder.cpp\n@@ -152,0 +157,1 @@\n+    source\/common\/ucharstriebuilder.cpp\n@@ -156,0 +162,1 @@\n+    source\/common\/ucnv.cpp\n@@ -158,1 +165,0 @@\n-    source\/common\/ucnvbocu.cpp\n@@ -161,1 +167,0 @@\n-    source\/common\/ucnv.cpp\n@@ -163,1 +168,0 @@\n-    source\/common\/ucnvdisp.cpp\n@@ -166,1 +170,0 @@\n-    source\/common\/ucnvhz.cpp\n@@ -168,2 +171,0 @@\n-    source\/common\/ucnvisci.cpp\n-    source\/common\/ucnvlat1.cpp\n@@ -171,3 +172,0 @@\n-    source\/common\/ucnvmbcs.cpp\n-    source\/common\/ucnvscsu.cpp\n-    source\/common\/ucnvsel.cpp\n@@ -179,0 +177,8 @@\n+    source\/common\/ucnvbocu.cpp\n+    source\/common\/ucnvdisp.cpp\n+    source\/common\/ucnvhz.cpp\n+    source\/common\/ucnvisci.cpp\n+    source\/common\/ucnvlat1.cpp\n+    source\/common\/ucnvmbcs.cpp\n+    source\/common\/ucnvscsu.cpp\n+    source\/common\/ucnvsel.cpp\n@@ -204,1 +210,0 @@\n-    source\/common\/uniset_closure.cpp\n@@ -206,0 +211,1 @@\n+    source\/common\/uniset_closure.cpp\n@@ -208,0 +214,1 @@\n+    source\/common\/unistr.cpp\n@@ -211,1 +218,0 @@\n-    source\/common\/unistr.cpp\n@@ -214,1 +220,0 @@\n-    source\/common\/unormcmp.cpp\n@@ -216,0 +221,1 @@\n+    source\/common\/unormcmp.cpp\n@@ -218,1 +224,0 @@\n-    source\/common\/uresbund.cpp\n@@ -220,0 +225,1 @@\n+    source\/common\/uresbund.cpp\n@@ -225,1 +231,0 @@\n-    source\/common\/usetiter.cpp\n@@ -227,0 +232,1 @@\n+    source\/common\/usetiter.cpp\n@@ -230,0 +236,3 @@\n+    source\/common\/ustr_cnv.cpp\n+    source\/common\/ustr_titlecase_brkiter.cpp\n+    source\/common\/ustr_wcs.cpp\n@@ -232,1 +241,0 @@\n-    source\/common\/ustr_cnv.cpp\n@@ -236,1 +244,0 @@\n-    source\/common\/ustr_titlecase_brkiter.cpp\n@@ -238,1 +245,0 @@\n-    source\/common\/ustr_wcs.cpp\n@@ -244,0 +250,2 @@\n+    source\/common\/utrie.cpp\n+    source\/common\/utrie2.cpp\n@@ -246,2 +254,0 @@\n-    source\/common\/utrie2.cpp\n-    source\/common\/utrie.cpp\n@@ -330,1 +336,1 @@\n-    source\/i18n\/double-conversion-diy-fp.cpp\n+    source\/i18n\/double-conversion-double-to-string.cpp\n@@ -332,0 +338,1 @@\n+    source\/i18n\/double-conversion-string-to-double.cpp\n@@ -333,1 +340,0 @@\n-    source\/i18n\/double-conversion.cpp\n@@ -345,0 +351,1 @@\n+    source\/i18n\/formatted_string_builder.cpp\n@@ -362,0 +369,1 @@\n+    source\/i18n\/measunit_extra.cpp\n@@ -369,1 +377,0 @@\n-    source\/i18n\/nounit.cpp\n@@ -394,1 +401,2 @@\n-    source\/i18n\/number_stringbuilder.cpp\n+    source\/i18n\/number_symbolswrapper.cpp\n+    source\/i18n\/number_usageprefs.cpp\n@@ -404,1 +412,0 @@\n-    source\/i18n\/numparse_stringsegment.cpp\n@@ -407,0 +414,1 @@\n+    source\/i18n\/numrange_capi.cpp\n@@ -412,0 +420,1 @@\n+    source\/i18n\/pluralranges.cpp\n@@ -444,0 +453,1 @@\n+    source\/i18n\/string_segment.cpp\n@@ -481,0 +491,4 @@\n+    source\/i18n\/units_data.cpp\n+    source\/i18n\/units_complexconverter.cpp\n+    source\/i18n\/units_converter.cpp\n+    source\/i18n\/units_router.cpp\n@@ -568,2 +582,1 @@\n-file(MAKE_DIRECTORY \"${CMAKE_BINARY_DIR}\/icu\/data\")\n-file(GLOB ICU_DATA_ZIP_FILE \"java\/data\/icudt*l.zip\")\n+file(GLOB ICU_DATA_ZIP_FILE \"${CMAKE_BINARY_DIR}\/icu\/data\/icu4c-*.zip\")\n@@ -571,1 +584,0 @@\n-get_filename_component(ICU_DATA_FILE_NAME ${ICU_DATA_ZIP_FILE} NAME)\n@@ -573,1 +585,1 @@\n-string(REGEX REPLACE \".zip\" \"\" ICU_DATA_FILE_NAME ${ICU_DATA_FILE_NAME})\n+set(ICU_DATA_FILE_NAME \"icudt68l\")\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/CMakeLists.txt","additions":45,"deletions":33,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-Copyright © 1991-2019 Unicode, Inc. All rights reserved.\n+Copyright © 1991-2020 Unicode, Inc. All rights reserved.\n@@ -287,3 +287,3 @@\n- # Project: http:\/\/code.google.com\/p\/lao-dictionary\/\n- # Dictionary: http:\/\/lao-dictionary.googlecode.com\/git\/Lao-Dictionary.txt\n- # License: http:\/\/lao-dictionary.googlecode.com\/git\/Lao-Dictionary-LICENSE.txt\n+ # Project: https:\/\/github.com\/veer66\/lao-dictionary\n+ # Dictionary: https:\/\/github.com\/veer66\/lao-dictionary\/blob\/master\/Lao-Dictionary.txt\n+ # License: https:\/\/github.com\/veer66\/lao-dictionary\/blob\/master\/Lao-Dictionary-LICENSE.txt\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/LICENSE","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,18 @@\n+Updating icu4c in OpenJFX:\n+\n+1) Update the modules\/javafx.web\/src\/main\/legal\/icu_web.md LICENSE file.\n+Update the version at the top. Copy the license from icu4c\/LICENSE.\n+Update modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/LICENSE as well.\n+\n+2) Copy the files from common, i18n, stubdata and tools\/toolutil directories.\n+Remove Makefile.in files.\n+\n+3) Update modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/CMakeLists.txt.\n+Update ICU_*_SOURCES using sources.txt file.\n+Set ICU_DATA_FILE_NAME variable to the correct icudt*l.dat file.\n+\n+4) Update the ICU version in build.gradle.\n+\n+5) Expand tabs and remove trailing white spaces from source files.\n+\n+6) Verification: FX sdk build and all test run, on all supported platforms.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/UPDATING.txt","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"toolutil.h\"\n@@ -42,1 +43,1 @@\n-    writeObjectCode(argv[2], argv[3], argv[4], NULL, NULL, NULL);\n+    writeObjectCode(argv[2], argv[3], argv[4], NULL, NULL, NULL, 0, TRUE);\n@@ -50,1 +51,1 @@\n-    writeAssemblyCode(argv[2], argv[3], argv[4], NULL, NULL);\n+    writeAssemblyCode(argv[2], argv[3], argv[4], NULL, NULL, 0);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/java\/data\/data_as_asm.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/java\/data\/icudt64l.zip","binary":true,"status":"deleted"},{"patch":"@@ -104,1 +104,1 @@\n-    \/* TRUE if contains(U+FFFD). *\/\n+    \/* true if contains(U+FFFD). *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/bmpset.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-    static UMutex gBreakEngineMutex = U_MUTEX_INITIALIZER;\n+    static UMutex gBreakEngineMutex;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/brkeng.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  * @return TRUE if this engine handles the particular character and break\n+  * @return true if this engine handles the particular character and break\n@@ -174,1 +174,1 @@\n-  * @return TRUE if this engine handles the particular character and break\n+  * @return true if this engine handles the particular character and break\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/brkeng.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"utracimp.h\"\n@@ -280,1 +281,1 @@\n-static icu::UInitOnce gInitOnceBrkiter;\n+static icu::UInitOnce gInitOnceBrkiter = U_INITONCE_INITIALIZER;\n@@ -415,1 +416,5 @@\n-        result = BreakIterator::buildInstance(loc, \"grapheme\", status);\n+        {\n+            UTRACE_ENTRY(UTRACE_UBRK_CREATE_CHARACTER);\n+            result = BreakIterator::buildInstance(loc, \"grapheme\", status);\n+            UTRACE_EXIT_STATUS(status);\n+        }\n@@ -418,1 +423,5 @@\n-        result = BreakIterator::buildInstance(loc, \"word\", status);\n+        {\n+            UTRACE_ENTRY(UTRACE_UBRK_CREATE_WORD);\n+            result = BreakIterator::buildInstance(loc, \"word\", status);\n+            UTRACE_EXIT_STATUS(status);\n+        }\n@@ -421,1 +430,0 @@\n-        uprv_strcpy(lbType, \"line\");\n@@ -423,0 +431,2 @@\n+            UTRACE_ENTRY(UTRACE_UBRK_CREATE_LINE);\n+            uprv_strcpy(lbType, \"line\");\n@@ -430,0 +440,4 @@\n+            result = BreakIterator::buildInstance(loc, lbType, status);\n+\n+            UTRACE_DATA1(UTRACE_INFO, \"lb=%s\", lbKeyValue);\n+            UTRACE_EXIT_STATUS(status);\n@@ -431,1 +445,0 @@\n-        result = BreakIterator::buildInstance(loc, lbType, status);\n@@ -434,2 +447,0 @@\n-        result = BreakIterator::buildInstance(loc, \"sentence\", status);\n-#if !UCONFIG_NO_FILTERED_BREAK_ITERATION\n@@ -437,0 +448,3 @@\n+            UTRACE_ENTRY(UTRACE_UBRK_CREATE_SENTENCE);\n+            result = BreakIterator::buildInstance(loc, \"sentence\", status);\n+#if !UCONFIG_NO_FILTERED_BREAK_ITERATION\n@@ -447,1 +461,0 @@\n-        }\n@@ -449,0 +462,2 @@\n+            UTRACE_EXIT_STATUS(status);\n+        }\n@@ -451,1 +466,5 @@\n-        result = BreakIterator::buildInstance(loc, \"title\", status);\n+        {\n+            UTRACE_ENTRY(UTRACE_UBRK_CREATE_TITLE);\n+            result = BreakIterator::buildInstance(loc, \"title\", status);\n+            UTRACE_EXIT_STATUS(status);\n+        }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/brkiter.cpp","additions":28,"deletions":9,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        if (U_FAILURE(errorCode)) { return FALSE; }\n+        if (U_FAILURE(errorCode)) { return false; }\n@@ -50,1 +50,1 @@\n-        return TRUE;\n+        return true;\n@@ -62,1 +62,1 @@\n-class CharStringByteSink : public ByteSink {\n+class U_COMMON_API CharStringByteSink : public ByteSink {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/bytesinkutil.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-    UnicodeSet  *fSet;\n-    UInitOnce    fInitOnce;\n+    UnicodeSet  *fSet = nullptr;\n+    UInitOnce    fInitOnce = U_INITONCE_INITIALIZER;\n@@ -50,4 +50,1 @@\n-icu::UMutex *cpMutex() {\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+icu::UMutex cpMutex;\n@@ -364,1 +361,1 @@\n-    Mutex m(cpMutex());\n+    Mutex m(&cpMutex);\n@@ -380,1 +377,1 @@\n-    Mutex m(cpMutex());\n+    Mutex m(&cpMutex);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/characterproperties.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+#include \"ustr_imp.h\"\n@@ -38,0 +39,24 @@\n+char *CharString::cloneData(UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode)) { return nullptr; }\n+    char *p = static_cast<char *>(uprv_malloc(len + 1));\n+    if (p == nullptr) {\n+        errorCode = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n+    uprv_memcpy(p, buffer.getAlias(), len + 1);\n+    return p;\n+}\n+\n+int32_t CharString::extract(char *dest, int32_t capacity, UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode)) { return len; }\n+    if (capacity < 0 || (capacity > 0 && dest == nullptr)) {\n+        errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+        return len;\n+    }\n+    const char *src = buffer.getAlias();\n+    if (0 < len && len <= capacity && src != dest) {\n+        uprv_memcpy(dest, src, len);\n+    }\n+    return u_terminateChars(dest, capacity, len, &errorCode);\n+}\n+\n@@ -55,0 +80,12 @@\n+bool CharString::contains(StringPiece s) const {\n+    if (s.empty()) { return false; }\n+    const char *p = buffer.getAlias();\n+    int32_t lastStart = len - s.length();\n+    for (int32_t i = 0; i <= lastStart; ++i) {\n+        if (uprv_memcmp(p + i, s.data(), s.length()) == 0) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n@@ -177,1 +214,1 @@\n-        append(U_FILE_SEP_CHAR, errorCode);\n+        append(getDirSepChar(), errorCode);\n@@ -187,1 +224,1 @@\n-        append(U_FILE_SEP_CHAR, errorCode);\n+        append(getDirSepChar(), errorCode);\n@@ -192,0 +229,10 @@\n+char CharString::getDirSepChar() const {\n+    char dirSepChar = U_FILE_SEP_CHAR;\n+#if (U_FILE_SEP_CHAR != U_FILE_ALT_SEP_CHAR)\n+    \/\/ We may need to return a different directory separator when building for Cygwin or MSYS2.\n+    if(len>0 && !uprv_strchr(data(), U_FILE_SEP_CHAR) && uprv_strchr(data(), U_FILE_ALT_SEP_CHAR))\n+        dirSepChar = U_FILE_ALT_SEP_CHAR;\n+#endif\n+    return dirSepChar;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/charstr.cpp","additions":49,"deletions":2,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -85,0 +85,28 @@\n+    \/**\n+     * Allocates length()+1 chars and copies the NUL-terminated data().\n+     * The caller must uprv_free() the result.\n+     *\/\n+    char *cloneData(UErrorCode &errorCode) const;\n+    \/**\n+     * Copies the contents of the string into dest.\n+     * Checks if there is enough space in dest, extracts the entire string if possible,\n+     * and NUL-terminates dest if possible.\n+     *\n+     * If the string fits into dest but cannot be NUL-terminated (length()==capacity),\n+     * then the error code is set to U_STRING_NOT_TERMINATED_WARNING.\n+     * If the string itself does not fit into dest (length()>capacity),\n+     * then the error code is set to U_BUFFER_OVERFLOW_ERROR.\n+     *\n+     * @param dest Destination string buffer.\n+     * @param capacity Size of the dest buffer (number of chars).\n+     * @param errorCode ICU error code.\n+     * @return length()\n+     *\/\n+    int32_t extract(char *dest, int32_t capacity, UErrorCode &errorCode) const;\n+\n+    bool operator==(StringPiece other) const {\n+        return len == other.length() && (len == 0 || uprv_memcmp(data(), other.data(), len) == 0);\n+    }\n+    bool operator!=(StringPiece other) const {\n+        return !operator==(other);\n+    }\n@@ -89,0 +117,2 @@\n+    bool contains(StringPiece s) const;\n+\n@@ -130,1 +160,1 @@\n-     * First appends a U_FILE_SEP_CHAR if necessary.\n+     * First appends a U_FILE_SEP_CHAR or U_FILE_ALT_SEP_CHAR if necessary.\n@@ -136,1 +166,1 @@\n-     * Appends a U_FILE_SEP_CHAR if this string is not empty\n+     * Appends a U_FILE_SEP_CHAR or U_FILE_ALT_SEP_CHAR if this string is not empty\n@@ -149,0 +179,6 @@\n+\n+    \/**\n+     * Returns U_FILE_ALT_SEP_CHAR if found in string, and U_FILE_SEP_CHAR is not found.\n+     * Otherwise returns U_FILE_SEP_CHAR.\n+     *\/\n+    char getDirSepChar() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/charstr.h","additions":38,"deletions":2,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ charstrmap.h\n+\/\/ created: 2020sep01 Frank Yung-Fong Tang\n+\n+#ifndef __CHARSTRMAP_H__\n+#define __CHARSTRMAP_H__\n+\n+#include <utility>\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"uhash.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * Map of const char * keys & values.\n+ * Stores pointers as is: Does not own\/copy\/adopt\/release strings.\n+ *\/\n+class CharStringMap final : public UMemory {\n+public:\n+    \/** Constructs an unusable non-map. *\/\n+    CharStringMap() : map(nullptr) {}\n+    CharStringMap(int32_t size, UErrorCode &errorCode) {\n+        map = uhash_openSize(uhash_hashChars, uhash_compareChars, uhash_compareChars,\n+                             size, &errorCode);\n+    }\n+    CharStringMap(CharStringMap &&other) U_NOEXCEPT : map(other.map) {\n+        other.map = nullptr;\n+    }\n+    CharStringMap(const CharStringMap &other) = delete;\n+    ~CharStringMap() {\n+        uhash_close(map);\n+    }\n+\n+    CharStringMap &operator=(CharStringMap &&other) U_NOEXCEPT {\n+        map = other.map;\n+        other.map = nullptr;\n+        return *this;\n+    }\n+    CharStringMap &operator=(const CharStringMap &other) = delete;\n+\n+    const char *get(const char *key) const { return static_cast<const char *>(uhash_get(map, key)); }\n+    void put(const char *key, const char *value, UErrorCode &errorCode) {\n+        uhash_put(map, const_cast<char *>(key), const_cast<char *>(value), &errorCode);\n+    }\n+\n+private:\n+    UHashtable *map;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/  __CHARSTRMAP_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/charstrmap.h","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -67,10 +67,0 @@\n-\/**\n- * This should align the memory properly on any machine.\n- * This is very useful for the safeClone functions.\n- *\/\n-typedef union {\n-    long    t1;\n-    double  t2;\n-    void   *t3;\n-} UAlignedMemory;\n-\n@@ -82,3 +72,1 @@\n- * ptrdiff_t is the most appropriate integer type to cast to.\n- * size_t should work too, since on most (or all?) platforms it has the same\n- * width as ptrdiff_t.\n+ * uintptr_t is the most appropriate integer type to cast to.\n@@ -86,1 +74,1 @@\n-#define U_POINTER_MASK_LSB(ptr, mask) (((ptrdiff_t)(char *)(ptr)) & (mask))\n+#define U_POINTER_MASK_LSB(ptr, mask) ((uintptr_t)(ptr) & (mask))\n@@ -89,8 +77,17 @@\n- * Get the amount of bytes that a pointer is off by from\n- * the previous UAlignedMemory-aligned pointer.\n- *\/\n-#define U_ALIGNMENT_OFFSET(ptr) U_POINTER_MASK_LSB(ptr, sizeof(UAlignedMemory) - 1)\n-\n-\/**\n- * Get the amount of bytes to add to a pointer\n- * in order to get the next UAlignedMemory-aligned address.\n+ * Create & return an instance of \"type\" in statically allocated storage.\n+ * e.g.\n+ *    static std::mutex *myMutex = STATIC_NEW(std::mutex);\n+ * To destroy an object created in this way, invoke the destructor explicitly, e.g.\n+ *    myMutex->~mutex();\n+ * DO NOT use delete.\n+ * DO NOT use with class UMutex, which has specific support for static instances.\n+ *\n+ * STATIC_NEW is intended for use when\n+ *   - We want a static (or global) object.\n+ *   - We don't want it to ever be destructed, or to explicitly control destruction,\n+ *     to avoid use-after-destruction problems.\n+ *   - We want to avoid an ordinary heap allocated object,\n+ *     to avoid the possibility of memory allocation failures, and\n+ *     to avoid memory leak reports, from valgrind, for example.\n+ * This is defined as a macro rather than a template function because each invocation\n+ * must define distinct static storage for the object being returned.\n@@ -98,1 +95,3 @@\n-#define U_ALIGNMENT_OFFSET_UP(ptr) (sizeof(UAlignedMemory) - U_ALIGNMENT_OFFSET(ptr))\n+#define STATIC_NEW(type) [] () { \\\n+    alignas(type) static char storage[sizeof(type)]; \\\n+    return new(storage) type();} ()\n@@ -278,1 +277,4 @@\n- * destructors, consider LocalArray in localpointer.h or MemoryPool.\n+ * destructors, consider:\n+ *\n+ * - LocalArray in localpointer.h if you know the length ahead of time\n+ * - MaybeStackVector if you know the length at runtime\n@@ -293,1 +295,1 @@\n-    MaybeStackArray() : ptr(stackArray), capacity(stackCapacity), needToRelease(FALSE) {}\n+    MaybeStackArray() : ptr(stackArray), capacity(stackCapacity), needToRelease(false) {}\n@@ -299,2 +301,9 @@\n-    MaybeStackArray(int32_t newCapacity) : MaybeStackArray() {\n-        if (capacity < newCapacity) { resize(newCapacity); }\n+    MaybeStackArray(int32_t newCapacity, UErrorCode status) : MaybeStackArray() {\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        if (capacity < newCapacity) {\n+            if (resize(newCapacity) == nullptr) {\n+                status = U_MEMORY_ALLOCATION_ERROR;\n+            }\n+        }\n@@ -356,1 +365,1 @@\n-            needToRelease=FALSE;\n+            needToRelease=false;\n@@ -381,0 +390,14 @@\n+\n+protected:\n+    \/\/ Resizes the array to the size of src, then copies the contents of src.\n+    void copyFrom(const MaybeStackArray &src, UErrorCode &status) {\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        if (this->resize(src.capacity, 0) == NULL) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+        uprv_memcpy(this->ptr, src.ptr, (size_t)capacity * sizeof(T));\n+    }\n+\n@@ -394,1 +417,1 @@\n-        needToRelease=FALSE;\n+        needToRelease=false;\n@@ -397,2 +420,2 @@\n-    bool operator==(const MaybeStackArray & \/*other*\/) {return FALSE;}\n-    bool operator!=(const MaybeStackArray & \/*other*\/) {return TRUE;}\n+    bool operator==(const MaybeStackArray & \/*other*\/) = delete;\n+    bool operator!=(const MaybeStackArray & \/*other*\/) = delete;\n@@ -400,2 +423,2 @@\n-    MaybeStackArray(const MaybeStackArray & \/*other*\/) {}\n-    void operator=(const MaybeStackArray & \/*other*\/) {}\n+    MaybeStackArray(const MaybeStackArray & \/*other*\/) = delete;\n+    void operator=(const MaybeStackArray & \/*other*\/) = delete;\n@@ -436,1 +459,1 @@\n-      ::fprintf(::stderr,\"MaybeStacArray (resize) alloc %d * %lu\\n\", newCapacity,sizeof(T));\n+        ::fprintf(::stderr, \"MaybeStackArray (resize) alloc %d * %lu\\n\", newCapacity, sizeof(T));\n@@ -452,1 +475,1 @@\n-            needToRelease=TRUE;\n+            needToRelease=true;\n@@ -508,1 +531,1 @@\n-    MaybeStackHeaderAndArray() : ptr(&stackHeader), capacity(stackCapacity), needToRelease(FALSE) {}\n+    MaybeStackHeaderAndArray() : ptr(&stackHeader), capacity(stackCapacity), needToRelease(false) {}\n@@ -557,1 +580,1 @@\n-            needToRelease=FALSE;\n+            needToRelease=false;\n@@ -596,2 +619,2 @@\n-    bool operator==(const MaybeStackHeaderAndArray & \/*other*\/) {return FALSE;}\n-    bool operator!=(const MaybeStackHeaderAndArray & \/*other*\/) {return TRUE;}\n+    bool operator==(const MaybeStackHeaderAndArray & \/*other*\/) {return false;}\n+    bool operator!=(const MaybeStackHeaderAndArray & \/*other*\/) {return true;}\n@@ -626,1 +649,1 @@\n-            needToRelease=TRUE;\n+            needToRelease=true;\n@@ -658,1 +681,1 @@\n-    needToRelease=FALSE;\n+    needToRelease=false;\n@@ -688,1 +711,1 @@\n-    MemoryPool() : count(0), pool() {}\n+    MemoryPool() : fCount(0), fPool() {}\n@@ -691,2 +714,2 @@\n-        for (int32_t i = 0; i < count; ++i) {\n-            delete pool[i];\n+        for (int32_t i = 0; i < fCount; ++i) {\n+            delete fPool[i];\n@@ -699,3 +722,3 @@\n-    MemoryPool(MemoryPool&& other) U_NOEXCEPT : count(other.count),\n-                                                pool(std::move(other.pool)) {\n-        other.count = 0;\n+    MemoryPool(MemoryPool&& other) U_NOEXCEPT : fCount(other.fCount),\n+                                                fPool(std::move(other.fPool)) {\n+        other.fCount = 0;\n@@ -705,3 +728,8 @@\n-        count = other.count;\n-        pool = std::move(other.pool);\n-        other.count = 0;\n+        \/\/ Since `this` may contain instances that need to be deleted, we can't\n+        \/\/ just throw them away and replace them with `other`. The normal way of\n+        \/\/ dealing with this in C++ is to swap `this` and `other`, rather than\n+        \/\/ simply overwrite: the destruction of `other` can then take care of\n+        \/\/ running MemoryPool::~MemoryPool() over the still-to-be-deallocated\n+        \/\/ instances.\n+        std::swap(fCount, other.fCount);\n+        std::swap(fPool, other.fPool);\n@@ -720,4 +748,4 @@\n-        int32_t capacity = pool.getCapacity();\n-        if (count == capacity &&\n-            pool.resize(capacity == stackCapacity ? 4 * capacity : 2 * capacity,\n-                        capacity) == nullptr) {\n+        int32_t capacity = fPool.getCapacity();\n+        if (fCount == capacity &&\n+            fPool.resize(capacity == stackCapacity ? 4 * capacity : 2 * capacity,\n+                         capacity) == nullptr) {\n@@ -726,1 +754,1 @@\n-        return pool[count++] = new T(std::forward<Args>(args)...);\n+        return fPool[fCount++] = new T(std::forward<Args>(args)...);\n@@ -729,3 +757,22 @@\n-private:\n-    int32_t count;\n-    MaybeStackArray<T*, stackCapacity> pool;\n+    template <typename... Args>\n+    T* createAndCheckErrorCode(UErrorCode &status, Args &&... args) {\n+        if (U_FAILURE(status)) {\n+            return nullptr;\n+        }\n+        T *pointer = this->create(args...);\n+        if (U_SUCCESS(status) && pointer == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+        }\n+        return pointer;\n+    }\n+\n+    \/**\n+     * @return Number of elements that have been allocated.\n+     *\/\n+    int32_t count() const {\n+        return fCount;\n+    }\n+\n+protected:\n+    int32_t fCount;\n+    MaybeStackArray<T*, stackCapacity> fPool;\n@@ -734,0 +781,67 @@\n+\/**\n+ * An internal Vector-like implementation based on MemoryPool.\n+ *\n+ * Heap-allocates each element and stores pointers.\n+ *\n+ * To append an item to the vector, use emplaceBack.\n+ *\n+ *     MaybeStackVector<MyType> vector;\n+ *     MyType* element = vector.emplaceBack();\n+ *     if (!element) {\n+ *         status = U_MEMORY_ALLOCATION_ERROR;\n+ *     }\n+ *     \/\/ do stuff with element\n+ *\n+ * To loop over the vector, use a for loop with indices:\n+ *\n+ *     for (int32_t i = 0; i < vector.length(); i++) {\n+ *         MyType* element = vector[i];\n+ *     }\n+ *\/\n+template<typename T, int32_t stackCapacity = 8>\n+class MaybeStackVector : protected MemoryPool<T, stackCapacity> {\n+public:\n+    template<typename... Args>\n+    T* emplaceBack(Args&&... args) {\n+        return this->create(args...);\n+    }\n+\n+    template <typename... Args>\n+    T *emplaceBackAndCheckErrorCode(UErrorCode &status, Args &&... args) {\n+        return this->createAndCheckErrorCode(status, args...);\n+    }\n+\n+    int32_t length() const {\n+        return this->fCount;\n+    }\n+\n+    T** getAlias() {\n+        return this->fPool.getAlias();\n+    }\n+\n+    const T *const *getAlias() const {\n+        return this->fPool.getAlias();\n+    }\n+\n+    \/**\n+     * Array item access (read-only).\n+     * No index bounds check.\n+     * @param i array index\n+     * @return reference to the array item\n+     *\/\n+    const T* operator[](ptrdiff_t i) const {\n+        return this->fPool[i];\n+    }\n+\n+    \/**\n+     * Array item access (writable).\n+     * No index bounds check.\n+     * @param i array index\n+     * @return reference to the array item\n+     *\/\n+    T* operator[](ptrdiff_t i) {\n+        return this->fPool[i];\n+    }\n+};\n+\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/cmemory.h","additions":172,"deletions":58,"binary":false,"changes":230,"status":"modified"},{"patch":"@@ -19,16 +19,0 @@\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n@@ -38,12 +22,8 @@\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\..\\..\\lib\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\Release\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\..\\..\\lib\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\Debug\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\Release\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\Release\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\Debug\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\Debug\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true<\/LinkIncremental>\n+    <OutDir>.\\$(Platform)\\$(Configuration)\\<\/OutDir>\n+    <IntDir>.\\$(Platform)\\$(Configuration)\\<\/IntDir>\n+    <!-- The ICU projects use \"Win32\" to mean \"x86\", so we need to special case it. -->\n+    <OutDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/OutDir>\n+    <IntDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/IntDir>\n+    <!-- Disable Incremental Linking for Release builds as it prevents Link-time Code Generation -->\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Debug'\">true<\/LinkIncremental>\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n@@ -53,0 +33,3 @@\n+    <Midl>\n+      <TypeLibraryName>$(OutDir)\\icuuc.tlb<\/TypeLibraryName>\n+    <\/Midl>\n@@ -57,0 +40,6 @@\n+      <CompileAs>Default<\/CompileAs>\n+      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n+      <PrecompiledHeaderOutputFile>$(OutDir)\/icuuc.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(OutDir)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>$(OutDir)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)\/icuuc.pdb<\/ProgramDataBaseFileName>\n@@ -59,0 +48,1 @@\n+      <!-- The icudt.lib is for U_ICUDATA_ENTRY_POINT -->\n@@ -60,1 +50,1 @@\n-      <BaseAddress>0x4a800000<\/BaseAddress>\n+      <AdditionalLibraryDirectories>.\\..\\..\\$(IcuLibOutputDir);%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n@@ -70,0 +60,5 @@\n+    <Link>\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icuuc68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icuucd.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icuucd.lib<\/ImportLibrary>\n+    <\/Link>\n@@ -77,50 +72,0 @@\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib\\icuuc.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x86\\Release\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\Release\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\Release\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\Release\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin\\icuuc64.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib\\icuuc.pdb<\/ProgramDatabaseFile>\n-      <DataExecutionPrevention>\n-      <\/DataExecutionPrevention>\n-      <ImportLibrary>..\\..\\lib\\icuuc.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib\\icuucd.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x86\\Debug\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\Debug\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\Debug\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\Debug\/<\/ProgramDataBaseFileName>\n-      <DebugInformationFormat>EditAndContinue<\/DebugInformationFormat>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin\\icuuc64d.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib\\icuucd.pdb<\/ProgramDatabaseFile>\n-      <DataExecutionPrevention>\n-      <\/DataExecutionPrevention>\n-      <ImportLibrary>..\\..\\lib\\icuucd.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib64\\icuuc.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x64\\Release\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\Release\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\Release\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\Release\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n@@ -128,22 +73,3 @@\n-      <OutputFile>..\\..\\bin64\\icuuc64.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib64\\icuuc.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib64\\icuuc.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib64\\icuucd.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x64\\Debug\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\Debug\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\Debug\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\Debug\/<\/ProgramDataBaseFileName>\n-      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin64\\icuuc64d.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib64\\icuucd.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib64\\icuucd.lib<\/ImportLibrary>\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icuuc68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icuuc.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icuuc.lib<\/ImportLibrary>\n@@ -241,0 +167,3 @@\n+    <ClCompile Include=\"localebuilder.cpp\" \/>\n+    <ClCompile Include=\"localematcher.cpp\" \/>\n+    <ClCompile Include=\"localeprioritylist.cpp\" \/>\n@@ -244,0 +173,1 @@\n+    <ClCompile Include=\"locdistance.cpp\" \/>\n@@ -247,0 +177,1 @@\n+    <ClCompile Include=\"loclikelysubtags.cpp\" \/>\n@@ -249,0 +180,1 @@\n+    <ClCompile Include=\"lsr.cpp\" \/>\n@@ -259,1 +191,0 @@\n-    <ClCompile Include=\"localebuilder.cpp\" \/>\n@@ -342,0 +273,1 @@\n+    <ClCompile Include=\"restrace.cpp\" \/>\n@@ -409,0 +341,1 @@\n+    <ClInclude Include=\"localeprioritylist.h\" \/>\n@@ -410,0 +343,4 @@\n+    <ClInclude Include=\"locdistance.h\" \/>\n+    <ClInclude Include=\"charstrmap.h\" \/>\n+    <ClInclude Include=\"loclikelysubtags.h\" \/>\n+    <ClInclude Include=\"uniquecharstr.h\" \/>\n@@ -411,0 +348,1 @@\n+    <ClInclude Include=\"lsr.h\" \/>\n@@ -450,1 +388,1 @@\n-    <ClInclude Include=\"unicode\\localebuilder.h\" \/>\n+    <ClInclude Include=\"restrace.h\" \/>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/common.vcxproj","additions":41,"deletions":103,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -316,0 +316,9 @@\n+    <ClCompile Include=\"localebuilder.cpp\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClCompile>\n+    <ClCompile Include=\"localematcher.cpp\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClCompile>\n+    <ClCompile Include=\"localeprioritylist.cpp\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClCompile>\n@@ -325,0 +334,3 @@\n+    <ClCompile Include=\"locdistance.cpp\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClCompile>\n@@ -331,0 +343,3 @@\n+    <ClCompile Include=\"loclikelysubtags.cpp\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClCompile>\n@@ -337,0 +352,3 @@\n+    <ClCompile Include=\"lsr.cpp\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClCompile>\n@@ -364,3 +382,0 @@\n-    <ClCompile Include=\"localebuilder.cpp\">\n-      <Filter>locales &amp; resources<\/Filter>\n-    <\/ClCompile>\n@@ -622,0 +637,3 @@\n+    <ClCompile Include=\"restrace.cpp\">\n+      <Filter>data &amp; memory<\/Filter>\n+    <\/ClCompile>\n@@ -816,0 +834,3 @@\n+    <ClInclude Include=\"localeprioritylist.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClInclude>\n@@ -819,0 +840,12 @@\n+    <ClInclude Include=\"locdistance.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"charstrmap.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"uniquecharstr.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"loclikelysubtags.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClInclude>\n@@ -822,0 +855,3 @@\n+    <ClInclude Include=\"lsr.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/ClInclude>\n@@ -957,1 +993,1 @@\n-    <CustomBuild Include=\"capi_helper.h\">\n+    <ClInclude Include=\"capi_helper.h\">\n@@ -959,1 +995,4 @@\n-    <\/CustomBuild>\n+    <\/ClInclude>\n+    <ClInclude Include=\"restrace.h\">\n+      <Filter>data &amp; memory<\/Filter>\n+    <\/ClInclude>\n@@ -1075,0 +1114,6 @@\n+    <CustomBuild Include=\"unicode\\localebuilder.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/CustomBuild>\n+    <CustomBuild Include=\"unicode\\localematcher.h\">\n+      <Filter>locales &amp; resources<\/Filter>\n+    <\/CustomBuild>\n@@ -1234,3 +1279,0 @@\n-    <CustomBuild Include=\"unicode\\localebuilder.h\">\n-      <Filter>locales &amp; resources<\/Filter>\n-    <\/CustomBuild>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/common.vcxproj.filters","additions":50,"deletions":8,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -16,0 +16,4 @@\n+    <ProjectConfiguration Include=\"Debug|ARM64\">\n+      <Configuration>Debug<\/Configuration>\n+      <Platform>ARM64<\/Platform>\n+    <\/ProjectConfiguration>\n@@ -28,0 +32,4 @@\n+    <ProjectConfiguration Include=\"Release|ARM64\">\n+      <Configuration>Release<\/Configuration>\n+      <Platform>ARM64<\/Platform>\n+    <\/ProjectConfiguration>\n@@ -47,4 +55,0 @@\n-  <ImportGroup Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n@@ -54,13 +58,6 @@\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\ReleaseUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\ReleaseUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\DebugUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\DebugUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\ReleaseUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\ReleaseUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\DebugUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\DebugUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">.\\arm\\ReleaseUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">.\\arm\\ReleaseUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">.\\arm\\DebugUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">.\\arm\\DebugUWP\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n+    <OutDir>.\\$(Platform)\\$(Configuration)UWP\\<\/OutDir>\n+    <IntDir>.\\$(Platform)\\$(Configuration)UWP\\<\/IntDir>\n+    <!-- The ICU projects use \"Win32\" to mean \"x86\", so we need to special case it. -->\n+    <OutDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)UWP\\<\/OutDir>\n+    <IntDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)UWP\\<\/IntDir>\n+    <!-- Disable Incremental Linking for Release builds as it prevents Link-time Code Generation -->\n@@ -68,0 +65,1 @@\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n@@ -74,0 +72,1 @@\n+      <TypeLibraryName>$(OutDir)\\icuuc.tlb<\/TypeLibraryName>\n@@ -92,0 +91,5 @@\n+      <PrecompiledHeaderOutputFile>$(OutDir)\/icuuc.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(OutDir)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>$(OutDir)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)\/icuuc.pdb<\/ProgramDataBaseFileName>\n+      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n@@ -105,1 +109,2 @@\n-      <AdditionalDependencies>onecoreuap.lib<\/AdditionalDependencies>\n+      <!-- The icudt.lib is for U_ICUDATA_ENTRY_POINT -->\n+      <AdditionalDependencies>icudt.lib;onecore.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n@@ -122,1 +127,4 @@\n-      <AdditionalDependencies>vccorlib.lib;WindowsApp.lib;msvcrt.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+      <AdditionalDependencies>vccorlib.lib;msvcrt.lib;vcruntime.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icuuc68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icuuc.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icuuc.lib<\/ImportLibrary>\n@@ -136,1 +144,0 @@\n-      <DebugInformationFormat>EditAndContinue<\/DebugInformationFormat>\n@@ -143,1 +150,4 @@\n-      <AdditionalDependencies>vccorlibd.lib;WindowsApp.lib;msvcrtd.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+      <AdditionalDependencies>vccorlibd.lib;msvcrtd.lib;vcruntimed.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icuuc68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icuucd.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icuucd.lib<\/ImportLibrary>\n@@ -154,0 +164,4 @@\n+    <Link>\n+      <!-- This is so that we can use the existing stubdata icudt.lib and not need a UWP version. -->\n+      <AdditionalLibraryDirectories>.\\..\\..\\lib;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n+    <\/Link>\n@@ -165,0 +179,2 @@\n+      <!-- This is so that we can use the existing stubdata icudt.lib and not need a UWP version. -->\n+      <AdditionalLibraryDirectories>.\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n@@ -177,0 +193,2 @@\n+      <!-- This is so that we can use the existing stubdata icudt.lib and not need a UWP version. -->\n+      <AdditionalLibraryDirectories>.\\..\\..\\libARM;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n@@ -179,34 +197,2 @@\n-  <!-- Options that are specific to a particular configuration -->\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib32uwp\\icuuc.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x86\\ReleaseUWP\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\ReleaseUWP\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\ReleaseUWP\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\ReleaseUWP\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin32uwp\\icuuc64.dll<\/OutputFile>\n-      <ProgramDatabaseFile>.\\..\\..\\lib32uwp\\icuuc.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib32uwp\\icuuc.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib32uwp\\icuucd.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x86\\DebugUWP\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\DebugUWP\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\DebugUWP\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\DebugUWP\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin32uwp\\icuuc64d.dll<\/OutputFile>\n-      <ProgramDatabaseFile>.\\..\\..\\lib32uwp\\icuucd.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib32uwp\\icuucd.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+  <ItemDefinitionGroup Condition=\"'$(Platform)'=='ARM64'\">\n+    <!-- Options that are common to all ARM64 configurations -->\n@@ -214,1 +200,1 @@\n-      <TypeLibraryName>.\\..\\..\\lib64uwp\\icuuc.tlb<\/TypeLibraryName>\n+      <TargetEnvironment>ARM64<\/TargetEnvironment>\n@@ -217,4 +203,1 @@\n-      <PrecompiledHeaderOutputFile>.\\x64\\ReleaseUWP\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\ReleaseUWP\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\ReleaseUWP\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\ReleaseUWP\/<\/ProgramDataBaseFileName>\n+      <PreprocessorDefinitions>ARM64;WIN32;%(PreprocessorDefinitions)<\/PreprocessorDefinitions>\n@@ -223,51 +206,3 @@\n-      <OutputFile>..\\..\\bin64uwp\\icuuc64.dll<\/OutputFile>\n-      <ProgramDatabaseFile>.\\..\\..\\lib64uwp\\icuuc.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib64uwp\\icuuc.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib64uwp\\icuucd.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x64\\DebugUWP\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\DebugUWP\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\DebugUWP\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\DebugUWP\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin64uwp\\icuuc64d.dll<\/OutputFile>\n-      <ProgramDatabaseFile>.\\..\\..\\lib64uwp\\icuucd.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib64uwp\\icuucd.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\libARMuwp\\icuuc.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\ARM\\ReleaseUWP\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\ARM\\ReleaseUWP\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\ARM\\ReleaseUWP\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\ARM\\ReleaseUWP\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\binARMuwp\\icuuc64.dll<\/OutputFile>\n-      <ProgramDatabaseFile>.\\..\\..\\libARMuwp\\icuuc.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\libARMuwp\\icuuc.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\libARMuwp\\icuucd.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\ARM\\DebugUWP\/common.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\ARM\\DebugUWP\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\ARM\\DebugUWP\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\ARM\\DebugUWP\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\binARMuwp\\icuuc64d.dll<\/OutputFile>\n-      <ProgramDatabaseFile>.\\..\\..\\libARMuwp\\icuucd.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\libARMuwp\\icuucd.lib<\/ImportLibrary>\n+      <TargetMachine>MachineARM64<\/TargetMachine>\n+      <!-- This is so that we can use the existing stubdata icudt.lib and not need a UWP version. -->\n+      <AdditionalLibraryDirectories>.\\..\\..\\libARM64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n@@ -320,3 +255,1 @@\n-    <ClCompile Include=\"putil.cpp\">\n-      <CompileAsWinRT>true<\/CompileAsWinRT>\n-    <\/ClCompile>\n+    <ClCompile Include=\"putil.cpp\" \/>\n@@ -368,0 +301,3 @@\n+    <ClCompile Include=\"localebuilder.cpp\" \/>\n+    <ClCompile Include=\"localematcher.cpp\" \/>\n+    <ClCompile Include=\"localeprioritylist.cpp\" \/>\n@@ -371,0 +307,1 @@\n+    <ClCompile Include=\"locdistance.cpp\" \/>\n@@ -374,0 +311,1 @@\n+    <ClCompile Include=\"loclikelysubtags.cpp\" \/>\n@@ -376,0 +314,1 @@\n+    <ClCompile Include=\"lsr.cpp\" \/>\n@@ -386,1 +325,0 @@\n-    <ClCompile Include=\"localebuilder.cpp\" \/>\n@@ -468,0 +406,1 @@\n+    <ClCompile Include=\"restrace.cpp\" \/>\n@@ -537,0 +476,1 @@\n+    <ClInclude Include=\"localeprioritylist.h\" \/>\n@@ -538,0 +478,4 @@\n+    <ClInclude Include=\"locdistance.h\" \/>\n+    <ClInclude Include=\"charstrmap.h\" \/>\n+    <ClInclude Include=\"uniquecharstr.h\" \/>\n+    <ClInclude Include=\"loclikelysubtags.h\" \/>\n@@ -539,0 +483,1 @@\n+    <ClInclude Include=\"lsr.h\" \/>\n@@ -577,1 +522,1 @@\n-    <ClInclude Include=\"unicode\\localebuilder.h\" \/>\n+    <ClInclude Include=\"restrace.h\" \/>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/common_uwp.vcxproj","additions":61,"deletions":116,"binary":false,"changes":177,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+\/\/ NOTE: For u_asciiToUpper that takes a UChar, see ustr_imp.h\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/cstring.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -21,0 +21,1 @@\n+#include \"utracimp.h\"\n@@ -197,0 +198,2 @@\n+    UTRACE_ENTRY(UTRACE_UBRK_CREATE_BREAK_ENGINE);\n+    UTRACE_DATA1(UTRACE_INFO, \"dictbe=%s\", \"Thai\");\n@@ -216,0 +219,1 @@\n+    UTRACE_EXIT_STATUS(status);\n@@ -439,0 +443,2 @@\n+    UTRACE_ENTRY(UTRACE_UBRK_CREATE_BREAK_ENGINE);\n+    UTRACE_DATA1(UTRACE_INFO, \"dictbe=%s\", \"Laoo\");\n@@ -455,0 +461,1 @@\n+    UTRACE_EXIT_STATUS(status);\n@@ -635,0 +642,2 @@\n+    UTRACE_ENTRY(UTRACE_UBRK_CREATE_BREAK_ENGINE);\n+    UTRACE_DATA1(UTRACE_INFO, \"dictbe=%s\", \"Mymr\");\n@@ -648,0 +657,1 @@\n+    UTRACE_EXIT_STATUS(status);\n@@ -828,0 +838,2 @@\n+    UTRACE_ENTRY(UTRACE_UBRK_CREATE_BREAK_ENGINE);\n+    UTRACE_DATA1(UTRACE_INFO, \"dictbe=%s\", \"Khmr\");\n@@ -853,0 +865,1 @@\n+    UTRACE_EXIT_STATUS(status);\n@@ -1048,0 +1061,2 @@\n+    UTRACE_ENTRY(UTRACE_UBRK_CREATE_BREAK_ENGINE);\n+    UTRACE_DATA1(UTRACE_INFO, \"dictbe=%s\", \"Hani\");\n@@ -1069,0 +1084,1 @@\n+    UTRACE_EXIT_STATUS(status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/dictbe.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-   * @return TRUE if this engine handles the particular character and break\n+   * @return true if this engine handles the particular character and break\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/dictbe.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-UBool Edits::copyErrorTo(UErrorCode &outErrorCode) {\n+UBool Edits::copyErrorTo(UErrorCode &outErrorCode) const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/edits.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-  virtual BreakIterator* clone(void) const { return new SimpleFilteredSentenceBreakIterator(*this); }\n+  virtual SimpleFilteredSentenceBreakIterator* clone() const { return new SimpleFilteredSentenceBreakIterator(*this); }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/filteredbrk.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-U_INTERNAL char * U_EXPORT2\n+U_CAPI char * U_EXPORT2\n@@ -164,1 +164,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -212,1 +212,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -510,1 +510,1 @@\n-U_INTERNAL UPlugData* U_EXPORT2\n+U_CAPI UPlugData* U_EXPORT2\n@@ -710,1 +710,1 @@\n-U_INTERNAL const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -785,1 +785,1 @@\n-    uprv_strncpy(plugin_file, pluginFile.data(), sizeof(plugin_file));\n+    pluginFile.extract(plugin_file, sizeof(plugin_file), *status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/icuplug.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -48,1 +48,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -58,1 +58,1 @@\n-U_INTERNAL  char * U_EXPORT2\n+U_CAPI  char * U_EXPORT2\n@@ -72,1 +72,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -79,1 +79,1 @@\n-U_INTERNAL UPlugData* U_EXPORT2\n+U_CAPI UPlugData* U_EXPORT2\n@@ -86,1 +86,1 @@\n-U_INTERNAL const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/icuplugimp.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -160,1 +160,2 @@\n-_copyExtensions(const Locale& from, Locale* to, bool validate, UErrorCode& errorCode)\n+_copyExtensions(const Locale& from, icu::StringEnumeration *keywords,\n+                Locale& to, bool validate, UErrorCode& errorCode)\n@@ -163,2 +164,6 @@\n-    LocalPointer<icu::StringEnumeration> iter(from.createKeywords(errorCode));\n-    if (U_FAILURE(errorCode) || iter.isNull()) { return; }\n+    LocalPointer<icu::StringEnumeration> ownedKeywords;\n+    if (keywords == nullptr) {\n+        ownedKeywords.adoptInstead(from.createKeywords(errorCode));\n+        if (U_FAILURE(errorCode) || ownedKeywords.isNull()) { return; }\n+        keywords = ownedKeywords.getAlias();\n+    }\n@@ -166,1 +171,1 @@\n-    while ((key = iter->next(nullptr, errorCode)) != nullptr) {\n+    while ((key = keywords->next(nullptr, errorCode)) != nullptr) {\n@@ -179,1 +184,1 @@\n-        to->setKeywordValue(key, value.data(), errorCode);\n+        to.setKeywordValue(key, value.data(), errorCode);\n@@ -185,1 +190,1 @@\n-_clearUAttributesAndKeyType(Locale* locale, UErrorCode& errorCode)\n+_clearUAttributesAndKeyType(Locale& locale, UErrorCode& errorCode)\n@@ -188,1 +193,1 @@\n-    locale->setKeywordValue(kAttributeKey, \"\", errorCode);\n+    locale.setKeywordValue(kAttributeKey, \"\", errorCode);\n@@ -191,1 +196,1 @@\n-    LocalPointer<icu::StringEnumeration> iter(locale->createUnicodeKeywords(errorCode));\n+    LocalPointer<icu::StringEnumeration> iter(locale.createUnicodeKeywords(errorCode));\n@@ -195,1 +200,1 @@\n-        locale->setUnicodeKeywordValue(key, nullptr, errorCode);\n+        locale.setUnicodeKeywordValue(key, nullptr, errorCode);\n@@ -200,1 +205,1 @@\n-_setUnicodeExtensions(Locale* locale, const CharString& value, UErrorCode& errorCode)\n+_setUnicodeExtensions(Locale& locale, const CharString& value, UErrorCode& errorCode)\n@@ -206,1 +211,1 @@\n-        Locale::forLanguageTag(locale_str.data(), errorCode),\n+        Locale::forLanguageTag(locale_str.data(), errorCode), nullptr,\n@@ -238,1 +243,1 @@\n-    _clearUAttributesAndKeyType(extensions_, status_);\n+    _clearUAttributesAndKeyType(*extensions_, status_);\n@@ -241,1 +246,1 @@\n-        _setUnicodeExtensions(extensions_, value_str, status_);\n+        _setUnicodeExtensions(*extensions_, value_str, status_);\n@@ -404,0 +409,18 @@\n+void LocaleBuilder::copyExtensionsFrom(const Locale& src, UErrorCode& errorCode)\n+{\n+    if (U_FAILURE(errorCode)) { return; }\n+    LocalPointer<icu::StringEnumeration> keywords(src.createKeywords(errorCode));\n+    if (U_FAILURE(errorCode) || keywords.isNull() || keywords->count(errorCode) == 0) {\n+        \/\/ Error, or no extensions to copy.\n+        return;\n+    }\n+    if (extensions_ == nullptr) {\n+        extensions_ = new Locale();\n+        if (extensions_ == nullptr) {\n+            status_ = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+    }\n+    _copyExtensions(src, keywords.getAlias(), *extensions_, false, errorCode);\n+}\n+\n@@ -428,1 +451,1 @@\n-        _copyExtensions(*extensions_, &product, true, errorCode);\n+        _copyExtensions(*extensions_, nullptr, product, true, errorCode);\n@@ -436,0 +459,9 @@\n+UBool LocaleBuilder::copyErrorTo(UErrorCode &outErrorCode) const {\n+    if (U_FAILURE(outErrorCode)) {\n+        \/\/ Do not overwrite the older error code\n+        return TRUE;\n+    }\n+    outErrorCode = status_;\n+    return U_FAILURE(outErrorCode);\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/localebuilder.cpp","additions":46,"deletions":14,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -0,0 +1,846 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ localematcher.cpp\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/localebuilder.h\"\n+#include \"unicode\/localematcher.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uloc.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"cstring.h\"\n+#include \"localeprioritylist.h\"\n+#include \"loclikelysubtags.h\"\n+#include \"locdistance.h\"\n+#include \"lsr.h\"\n+#include \"uassert.h\"\n+#include \"uhash.h\"\n+#include \"ustr_imp.h\"\n+#include \"uvector.h\"\n+\n+#define UND_LSR LSR(\"und\", \"\", \"\", LSR::EXPLICIT_LSR)\n+\n+\/**\n+ * Indicator for the lifetime of desired-locale objects passed into the LocaleMatcher.\n+ *\n+ * @draft ICU 65\n+ *\/\n+enum ULocMatchLifetime {\n+    \/**\n+     * Locale objects are temporary.\n+     * The matcher will make a copy of a locale that will be used beyond one function call.\n+     *\n+     * @draft ICU 65\n+     *\/\n+    ULOCMATCH_TEMPORARY_LOCALES,\n+    \/**\n+     * Locale objects are stored at least as long as the matcher is used.\n+     * The matcher will keep only a pointer to a locale that will be used beyond one function call,\n+     * avoiding a copy.\n+     *\n+     * @draft ICU 65\n+     *\/\n+    ULOCMATCH_STORED_LOCALES  \/\/ TODO: permanent? cached? clone?\n+};\n+#ifndef U_IN_DOXYGEN\n+typedef enum ULocMatchLifetime ULocMatchLifetime;\n+#endif\n+\n+U_NAMESPACE_BEGIN\n+\n+LocaleMatcher::Result::Result(LocaleMatcher::Result &&src) U_NOEXCEPT :\n+        desiredLocale(src.desiredLocale),\n+        supportedLocale(src.supportedLocale),\n+        desiredIndex(src.desiredIndex),\n+        supportedIndex(src.supportedIndex),\n+        desiredIsOwned(src.desiredIsOwned) {\n+    if (desiredIsOwned) {\n+        src.desiredLocale = nullptr;\n+        src.desiredIndex = -1;\n+        src.desiredIsOwned = FALSE;\n+    }\n+}\n+\n+LocaleMatcher::Result::~Result() {\n+    if (desiredIsOwned) {\n+        delete desiredLocale;\n+    }\n+}\n+\n+LocaleMatcher::Result &LocaleMatcher::Result::operator=(LocaleMatcher::Result &&src) U_NOEXCEPT {\n+    this->~Result();\n+\n+    desiredLocale = src.desiredLocale;\n+    supportedLocale = src.supportedLocale;\n+    desiredIndex = src.desiredIndex;\n+    supportedIndex = src.supportedIndex;\n+    desiredIsOwned = src.desiredIsOwned;\n+\n+    if (desiredIsOwned) {\n+        src.desiredLocale = nullptr;\n+        src.desiredIndex = -1;\n+        src.desiredIsOwned = FALSE;\n+    }\n+    return *this;\n+}\n+\n+Locale LocaleMatcher::Result::makeResolvedLocale(UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode) || supportedLocale == nullptr) {\n+        return Locale::getRoot();\n+    }\n+    const Locale *bestDesired = getDesiredLocale();\n+    if (bestDesired == nullptr || *supportedLocale == *bestDesired) {\n+        return *supportedLocale;\n+    }\n+    LocaleBuilder b;\n+    b.setLocale(*supportedLocale);\n+\n+    \/\/ Copy the region from bestDesired, if there is one.\n+    const char *region = bestDesired->getCountry();\n+    if (*region != 0) {\n+        b.setRegion(region);\n+    }\n+\n+    \/\/ Copy the variants from bestDesired, if there are any.\n+    \/\/ Note that this will override any supportedLocale variants.\n+    \/\/ For example, \"sco-ulster-fonipa\" + \"...-fonupa\" => \"sco-fonupa\" (replacing ulster).\n+    const char *variants = bestDesired->getVariant();\n+    if (*variants != 0) {\n+        b.setVariant(variants);\n+    }\n+\n+    \/\/ Copy the extensions from bestDesired, if there are any.\n+    \/\/ C++ note: The following note, copied from Java, may not be true,\n+    \/\/ as long as C++ copies by legacy ICU keyword, not by extension singleton.\n+    \/\/ Note that this will override any supportedLocale extensions.\n+    \/\/ For example, \"th-u-nu-latn-ca-buddhist\" + \"...-u-nu-native\" => \"th-u-nu-native\"\n+    \/\/ (replacing calendar).\n+    b.copyExtensionsFrom(*bestDesired, errorCode);\n+    return b.build(errorCode);\n+}\n+\n+LocaleMatcher::Builder::Builder(LocaleMatcher::Builder &&src) U_NOEXCEPT :\n+        errorCode_(src.errorCode_),\n+        supportedLocales_(src.supportedLocales_),\n+        thresholdDistance_(src.thresholdDistance_),\n+        demotion_(src.demotion_),\n+        defaultLocale_(src.defaultLocale_),\n+        withDefault_(src.withDefault_),\n+        favor_(src.favor_),\n+        direction_(src.direction_) {\n+    src.supportedLocales_ = nullptr;\n+    src.defaultLocale_ = nullptr;\n+}\n+\n+LocaleMatcher::Builder::~Builder() {\n+    delete supportedLocales_;\n+    delete defaultLocale_;\n+    delete maxDistanceDesired_;\n+    delete maxDistanceSupported_;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::operator=(LocaleMatcher::Builder &&src) U_NOEXCEPT {\n+    this->~Builder();\n+\n+    errorCode_ = src.errorCode_;\n+    supportedLocales_ = src.supportedLocales_;\n+    thresholdDistance_ = src.thresholdDistance_;\n+    demotion_ = src.demotion_;\n+    defaultLocale_ = src.defaultLocale_;\n+    withDefault_ = src.withDefault_,\n+    favor_ = src.favor_;\n+    direction_ = src.direction_;\n+\n+    src.supportedLocales_ = nullptr;\n+    src.defaultLocale_ = nullptr;\n+    return *this;\n+}\n+\n+void LocaleMatcher::Builder::clearSupportedLocales() {\n+    if (supportedLocales_ != nullptr) {\n+        supportedLocales_->removeAllElements();\n+    }\n+}\n+\n+bool LocaleMatcher::Builder::ensureSupportedLocaleVector() {\n+    if (U_FAILURE(errorCode_)) { return false; }\n+    if (supportedLocales_ != nullptr) { return true; }\n+    supportedLocales_ = new UVector(uprv_deleteUObject, nullptr, errorCode_);\n+    if (U_FAILURE(errorCode_)) { return false; }\n+    if (supportedLocales_ == nullptr) {\n+        errorCode_ = U_MEMORY_ALLOCATION_ERROR;\n+        return false;\n+    }\n+    return true;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setSupportedLocalesFromListString(\n+        StringPiece locales) {\n+    LocalePriorityList list(locales, errorCode_);\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    clearSupportedLocales();\n+    if (!ensureSupportedLocaleVector()) { return *this; }\n+    int32_t length = list.getLengthIncludingRemoved();\n+    for (int32_t i = 0; i < length; ++i) {\n+        Locale *locale = list.orphanLocaleAt(i);\n+        if (locale == nullptr) { continue; }\n+        supportedLocales_->addElement(locale, errorCode_);\n+        if (U_FAILURE(errorCode_)) {\n+            delete locale;\n+            break;\n+        }\n+    }\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setSupportedLocales(Locale::Iterator &locales) {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    clearSupportedLocales();\n+    if (!ensureSupportedLocaleVector()) { return *this; }\n+    while (locales.hasNext()) {\n+        const Locale &locale = locales.next();\n+        Locale *clone = locale.clone();\n+        if (clone == nullptr) {\n+            errorCode_ = U_MEMORY_ALLOCATION_ERROR;\n+            break;\n+        }\n+        supportedLocales_->addElement(clone, errorCode_);\n+        if (U_FAILURE(errorCode_)) {\n+            delete clone;\n+            break;\n+        }\n+    }\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::addSupportedLocale(const Locale &locale) {\n+    if (!ensureSupportedLocaleVector()) { return *this; }\n+    Locale *clone = locale.clone();\n+    if (clone == nullptr) {\n+        errorCode_ = U_MEMORY_ALLOCATION_ERROR;\n+        return *this;\n+    }\n+    supportedLocales_->addElement(clone, errorCode_);\n+    if (U_FAILURE(errorCode_)) {\n+        delete clone;\n+    }\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setNoDefaultLocale() {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    delete defaultLocale_;\n+    defaultLocale_ = nullptr;\n+    withDefault_ = false;\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setDefaultLocale(const Locale *defaultLocale) {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    Locale *clone = nullptr;\n+    if (defaultLocale != nullptr) {\n+        clone = defaultLocale->clone();\n+        if (clone == nullptr) {\n+            errorCode_ = U_MEMORY_ALLOCATION_ERROR;\n+            return *this;\n+        }\n+    }\n+    delete defaultLocale_;\n+    defaultLocale_ = clone;\n+    withDefault_ = true;\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setFavorSubtag(ULocMatchFavorSubtag subtag) {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    favor_ = subtag;\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setDemotionPerDesiredLocale(ULocMatchDemotion demotion) {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    demotion_ = demotion;\n+    return *this;\n+}\n+\n+LocaleMatcher::Builder &LocaleMatcher::Builder::setMaxDistance(const Locale &desired,\n+                                                               const Locale &supported) {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    Locale *desiredClone = desired.clone();\n+    Locale *supportedClone = supported.clone();\n+    if (desiredClone == nullptr || supportedClone == nullptr) {\n+        delete desiredClone;  \/\/ in case only one could not be allocated\n+        delete supportedClone;\n+        errorCode_ = U_MEMORY_ALLOCATION_ERROR;\n+        return *this;\n+    }\n+    delete maxDistanceDesired_;\n+    delete maxDistanceSupported_;\n+    maxDistanceDesired_ = desiredClone;\n+    maxDistanceSupported_ = supportedClone;\n+    return *this;\n+}\n+\n+#if 0\n+\/**\n+ * <i>Internal only!<\/i>\n+ *\n+ * @param thresholdDistance the thresholdDistance to set, with -1 = default\n+ * @return this Builder object\n+ * @internal\n+ * @deprecated This API is ICU internal only.\n+ *\/\n+@Deprecated\n+LocaleMatcher::Builder &LocaleMatcher::Builder::internalSetThresholdDistance(int32_t thresholdDistance) {\n+    if (U_FAILURE(errorCode_)) { return *this; }\n+    if (thresholdDistance > 100) {\n+        thresholdDistance = 100;\n+    }\n+    thresholdDistance_ = thresholdDistance;\n+    return *this;\n+}\n+#endif\n+\n+UBool LocaleMatcher::Builder::copyErrorTo(UErrorCode &outErrorCode) const {\n+    if (U_FAILURE(outErrorCode)) { return TRUE; }\n+    if (U_SUCCESS(errorCode_)) { return FALSE; }\n+    outErrorCode = errorCode_;\n+    return TRUE;\n+}\n+\n+LocaleMatcher LocaleMatcher::Builder::build(UErrorCode &errorCode) const {\n+    if (U_SUCCESS(errorCode) && U_FAILURE(errorCode_)) {\n+        errorCode = errorCode_;\n+    }\n+    return LocaleMatcher(*this, errorCode);\n+}\n+\n+namespace {\n+\n+LSR getMaximalLsrOrUnd(const XLikelySubtags &likelySubtags, const Locale &locale,\n+                       UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode) || locale.isBogus() || *locale.getName() == 0 \/* \"und\" *\/) {\n+        return UND_LSR;\n+    } else {\n+        return likelySubtags.makeMaximizedLsrFrom(locale, errorCode);\n+    }\n+}\n+\n+int32_t hashLSR(const UHashTok token) {\n+    const LSR *lsr = static_cast<const LSR *>(token.pointer);\n+    return lsr->hashCode;\n+}\n+\n+UBool compareLSRs(const UHashTok t1, const UHashTok t2) {\n+    const LSR *lsr1 = static_cast<const LSR *>(t1.pointer);\n+    const LSR *lsr2 = static_cast<const LSR *>(t2.pointer);\n+    return *lsr1 == *lsr2;\n+}\n+\n+}  \/\/ namespace\n+\n+int32_t LocaleMatcher::putIfAbsent(const LSR &lsr, int32_t i, int32_t suppLength,\n+                                   UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return suppLength; }\n+    int32_t index = uhash_geti(supportedLsrToIndex, &lsr);\n+    if (index == 0) {\n+        uhash_puti(supportedLsrToIndex, const_cast<LSR *>(&lsr), i + 1, &errorCode);\n+        if (U_SUCCESS(errorCode)) {\n+            supportedLSRs[suppLength] = &lsr;\n+            supportedIndexes[suppLength++] = i;\n+        }\n+    }\n+    return suppLength;\n+}\n+\n+LocaleMatcher::LocaleMatcher(const Builder &builder, UErrorCode &errorCode) :\n+        likelySubtags(*XLikelySubtags::getSingleton(errorCode)),\n+        localeDistance(*LocaleDistance::getSingleton(errorCode)),\n+        thresholdDistance(builder.thresholdDistance_),\n+        demotionPerDesiredLocale(0),\n+        favorSubtag(builder.favor_),\n+        direction(builder.direction_),\n+        supportedLocales(nullptr), lsrs(nullptr), supportedLocalesLength(0),\n+        supportedLsrToIndex(nullptr),\n+        supportedLSRs(nullptr), supportedIndexes(nullptr), supportedLSRsLength(0),\n+        ownedDefaultLocale(nullptr), defaultLocale(nullptr) {\n+    if (U_FAILURE(errorCode)) { return; }\n+    const Locale *def = builder.defaultLocale_;\n+    LSR builderDefaultLSR;\n+    const LSR *defLSR = nullptr;\n+    if (def != nullptr) {\n+        ownedDefaultLocale = def->clone();\n+        if (ownedDefaultLocale == nullptr) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+        def = ownedDefaultLocale;\n+        builderDefaultLSR = getMaximalLsrOrUnd(likelySubtags, *def, errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+        defLSR = &builderDefaultLSR;\n+    }\n+    supportedLocalesLength = builder.supportedLocales_ != nullptr ?\n+        builder.supportedLocales_->size() : 0;\n+    if (supportedLocalesLength > 0) {\n+        \/\/ Store the supported locales in input order,\n+        \/\/ so that when different types are used (e.g., language tag strings)\n+        \/\/ we can return those by parallel index.\n+        supportedLocales = static_cast<const Locale **>(\n+            uprv_malloc(supportedLocalesLength * sizeof(const Locale *)));\n+        \/\/ Supported LRSs in input order.\n+        \/\/ In C++, we store these permanently to simplify ownership management\n+        \/\/ in the hash tables. Duplicate LSRs (if any) are unused overhead.\n+        lsrs = new LSR[supportedLocalesLength];\n+        if (supportedLocales == nullptr || lsrs == nullptr) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+        \/\/ If the constructor fails partway, we need null pointers for destructibility.\n+        uprv_memset(supportedLocales, 0, supportedLocalesLength * sizeof(const Locale *));\n+        for (int32_t i = 0; i < supportedLocalesLength; ++i) {\n+            const Locale &locale = *static_cast<Locale *>(builder.supportedLocales_->elementAt(i));\n+            supportedLocales[i] = locale.clone();\n+            if (supportedLocales[i] == nullptr) {\n+                errorCode = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n+            const Locale &supportedLocale = *supportedLocales[i];\n+            LSR &lsr = lsrs[i] = getMaximalLsrOrUnd(likelySubtags, supportedLocale, errorCode);\n+            lsr.setHashCode();\n+            if (U_FAILURE(errorCode)) { return; }\n+        }\n+\n+        \/\/ We need an unordered map from LSR to first supported locale with that LSR,\n+        \/\/ and an ordered list of (LSR, supported index) for\n+        \/\/ the supported locales in the following order:\n+        \/\/ 1. Default locale, if it is supported.\n+        \/\/ 2. Priority locales (aka \"paradigm locales\") in builder order.\n+        \/\/ 3. Remaining locales in builder order.\n+        supportedLsrToIndex = uhash_openSize(hashLSR, compareLSRs, uhash_compareLong,\n+                                             supportedLocalesLength, &errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+        supportedLSRs = static_cast<const LSR **>(\n+            uprv_malloc(supportedLocalesLength * sizeof(const LSR *)));\n+        supportedIndexes = static_cast<int32_t *>(\n+            uprv_malloc(supportedLocalesLength * sizeof(int32_t)));\n+        if (supportedLSRs == nullptr || supportedIndexes == nullptr) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+        int32_t suppLength = 0;\n+        \/\/ Determine insertion order.\n+        \/\/ Add locales immediately that are equivalent to the default.\n+        MaybeStackArray<int8_t, 100> order(supportedLocalesLength, errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+        int32_t numParadigms = 0;\n+        for (int32_t i = 0; i < supportedLocalesLength; ++i) {\n+            const Locale &locale = *supportedLocales[i];\n+            const LSR &lsr = lsrs[i];\n+            if (defLSR == nullptr && builder.withDefault_) {\n+                \/\/ Implicit default locale = first supported locale, if not turned off.\n+                U_ASSERT(i == 0);\n+                def = &locale;\n+                defLSR = &lsr;\n+                order[i] = 1;\n+                suppLength = putIfAbsent(lsr, 0, suppLength, errorCode);\n+            } else if (defLSR != nullptr && lsr.isEquivalentTo(*defLSR)) {\n+                order[i] = 1;\n+                suppLength = putIfAbsent(lsr, i, suppLength, errorCode);\n+            } else if (localeDistance.isParadigmLSR(lsr)) {\n+                order[i] = 2;\n+                ++numParadigms;\n+            } else {\n+                order[i] = 3;\n+            }\n+            if (U_FAILURE(errorCode)) { return; }\n+        }\n+        \/\/ Add supported paradigm locales.\n+        int32_t paradigmLimit = suppLength + numParadigms;\n+        for (int32_t i = 0; i < supportedLocalesLength && suppLength < paradigmLimit; ++i) {\n+            if (order[i] == 2) {\n+                suppLength = putIfAbsent(lsrs[i], i, suppLength, errorCode);\n+            }\n+        }\n+        \/\/ Add remaining supported locales.\n+        for (int32_t i = 0; i < supportedLocalesLength; ++i) {\n+            if (order[i] == 3) {\n+                suppLength = putIfAbsent(lsrs[i], i, suppLength, errorCode);\n+            }\n+        }\n+        supportedLSRsLength = suppLength;\n+        \/\/ If supportedLSRsLength < supportedLocalesLength then\n+        \/\/ we waste as many array slots as there are duplicate supported LSRs,\n+        \/\/ but the amount of wasted space is small as long as there are few duplicates.\n+    }\n+\n+    defaultLocale = def;\n+\n+    if (builder.demotion_ == ULOCMATCH_DEMOTION_REGION) {\n+        demotionPerDesiredLocale = localeDistance.getDefaultDemotionPerDesiredLocale();\n+    }\n+\n+    if (thresholdDistance >= 0) {\n+        \/\/ already copied\n+    } else if (builder.maxDistanceDesired_ != nullptr) {\n+        LSR suppLSR = getMaximalLsrOrUnd(likelySubtags, *builder.maxDistanceSupported_, errorCode);\n+        const LSR *pSuppLSR = &suppLSR;\n+        int32_t indexAndDistance = localeDistance.getBestIndexAndDistance(\n+                getMaximalLsrOrUnd(likelySubtags, *builder.maxDistanceDesired_, errorCode),\n+                &pSuppLSR, 1,\n+                LocaleDistance::shiftDistance(100), favorSubtag, direction);\n+        if (U_SUCCESS(errorCode)) {\n+            \/\/ +1 for an exclusive threshold from an inclusive max.\n+            thresholdDistance = LocaleDistance::getDistanceFloor(indexAndDistance) + 1;\n+        } else {\n+            thresholdDistance = 0;\n+        }\n+    } else {\n+        thresholdDistance = localeDistance.getDefaultScriptDistance();\n+    }\n+}\n+\n+LocaleMatcher::LocaleMatcher(LocaleMatcher &&src) U_NOEXCEPT :\n+        likelySubtags(src.likelySubtags),\n+        localeDistance(src.localeDistance),\n+        thresholdDistance(src.thresholdDistance),\n+        demotionPerDesiredLocale(src.demotionPerDesiredLocale),\n+        favorSubtag(src.favorSubtag),\n+        direction(src.direction),\n+        supportedLocales(src.supportedLocales), lsrs(src.lsrs),\n+        supportedLocalesLength(src.supportedLocalesLength),\n+        supportedLsrToIndex(src.supportedLsrToIndex),\n+        supportedLSRs(src.supportedLSRs),\n+        supportedIndexes(src.supportedIndexes),\n+        supportedLSRsLength(src.supportedLSRsLength),\n+        ownedDefaultLocale(src.ownedDefaultLocale), defaultLocale(src.defaultLocale) {\n+    src.supportedLocales = nullptr;\n+    src.lsrs = nullptr;\n+    src.supportedLocalesLength = 0;\n+    src.supportedLsrToIndex = nullptr;\n+    src.supportedLSRs = nullptr;\n+    src.supportedIndexes = nullptr;\n+    src.supportedLSRsLength = 0;\n+    src.ownedDefaultLocale = nullptr;\n+    src.defaultLocale = nullptr;\n+}\n+\n+LocaleMatcher::~LocaleMatcher() {\n+    for (int32_t i = 0; i < supportedLocalesLength; ++i) {\n+        delete supportedLocales[i];\n+    }\n+    uprv_free(supportedLocales);\n+    delete[] lsrs;\n+    uhash_close(supportedLsrToIndex);\n+    uprv_free(supportedLSRs);\n+    uprv_free(supportedIndexes);\n+    delete ownedDefaultLocale;\n+}\n+\n+LocaleMatcher &LocaleMatcher::operator=(LocaleMatcher &&src) U_NOEXCEPT {\n+    this->~LocaleMatcher();\n+\n+    thresholdDistance = src.thresholdDistance;\n+    demotionPerDesiredLocale = src.demotionPerDesiredLocale;\n+    favorSubtag = src.favorSubtag;\n+    direction = src.direction;\n+    supportedLocales = src.supportedLocales;\n+    lsrs = src.lsrs;\n+    supportedLocalesLength = src.supportedLocalesLength;\n+    supportedLsrToIndex = src.supportedLsrToIndex;\n+    supportedLSRs = src.supportedLSRs;\n+    supportedIndexes = src.supportedIndexes;\n+    supportedLSRsLength = src.supportedLSRsLength;\n+    ownedDefaultLocale = src.ownedDefaultLocale;\n+    defaultLocale = src.defaultLocale;\n+\n+    src.supportedLocales = nullptr;\n+    src.lsrs = nullptr;\n+    src.supportedLocalesLength = 0;\n+    src.supportedLsrToIndex = nullptr;\n+    src.supportedLSRs = nullptr;\n+    src.supportedIndexes = nullptr;\n+    src.supportedLSRsLength = 0;\n+    src.ownedDefaultLocale = nullptr;\n+    src.defaultLocale = nullptr;\n+    return *this;\n+}\n+\n+class LocaleLsrIterator {\n+public:\n+    LocaleLsrIterator(const XLikelySubtags &likelySubtags, Locale::Iterator &locales,\n+                      ULocMatchLifetime lifetime) :\n+            likelySubtags(likelySubtags), locales(locales), lifetime(lifetime) {}\n+\n+    ~LocaleLsrIterator() {\n+        if (lifetime == ULOCMATCH_TEMPORARY_LOCALES) {\n+            delete remembered;\n+        }\n+    }\n+\n+    bool hasNext() const {\n+        return locales.hasNext();\n+    }\n+\n+    LSR next(UErrorCode &errorCode) {\n+        current = &locales.next();\n+        return getMaximalLsrOrUnd(likelySubtags, *current, errorCode);\n+    }\n+\n+    void rememberCurrent(int32_t desiredIndex, UErrorCode &errorCode) {\n+        if (U_FAILURE(errorCode)) { return; }\n+        bestDesiredIndex = desiredIndex;\n+        if (lifetime == ULOCMATCH_STORED_LOCALES) {\n+            remembered = current;\n+        } else {\n+            \/\/ ULOCMATCH_TEMPORARY_LOCALES\n+            delete remembered;\n+            remembered = new Locale(*current);\n+            if (remembered == nullptr) {\n+                errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            }\n+        }\n+    }\n+\n+    const Locale *orphanRemembered() {\n+        const Locale *rem = remembered;\n+        remembered = nullptr;\n+        return rem;\n+    }\n+\n+    int32_t getBestDesiredIndex() const {\n+        return bestDesiredIndex;\n+    }\n+\n+private:\n+    const XLikelySubtags &likelySubtags;\n+    Locale::Iterator &locales;\n+    ULocMatchLifetime lifetime;\n+    const Locale *current = nullptr, *remembered = nullptr;\n+    int32_t bestDesiredIndex = -1;\n+};\n+\n+const Locale *LocaleMatcher::getBestMatch(const Locale &desiredLocale, UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode)) { return nullptr; }\n+    int32_t suppIndex = getBestSuppIndex(\n+        getMaximalLsrOrUnd(likelySubtags, desiredLocale, errorCode),\n+        nullptr, errorCode);\n+    return U_SUCCESS(errorCode) && suppIndex >= 0 ? supportedLocales[suppIndex] : defaultLocale;\n+}\n+\n+const Locale *LocaleMatcher::getBestMatch(Locale::Iterator &desiredLocales,\n+                                          UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode)) { return nullptr; }\n+    if (!desiredLocales.hasNext()) {\n+        return defaultLocale;\n+    }\n+    LocaleLsrIterator lsrIter(likelySubtags, desiredLocales, ULOCMATCH_TEMPORARY_LOCALES);\n+    int32_t suppIndex = getBestSuppIndex(lsrIter.next(errorCode), &lsrIter, errorCode);\n+    return U_SUCCESS(errorCode) && suppIndex >= 0 ? supportedLocales[suppIndex] : defaultLocale;\n+}\n+\n+const Locale *LocaleMatcher::getBestMatchForListString(\n+        StringPiece desiredLocaleList, UErrorCode &errorCode) const {\n+    LocalePriorityList list(desiredLocaleList, errorCode);\n+    LocalePriorityList::Iterator iter = list.iterator();\n+    return getBestMatch(iter, errorCode);\n+}\n+\n+LocaleMatcher::Result LocaleMatcher::getBestMatchResult(\n+        const Locale &desiredLocale, UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode)) {\n+        return Result(nullptr, defaultLocale, -1, -1, FALSE);\n+    }\n+    int32_t suppIndex = getBestSuppIndex(\n+        getMaximalLsrOrUnd(likelySubtags, desiredLocale, errorCode),\n+        nullptr, errorCode);\n+    if (U_FAILURE(errorCode) || suppIndex < 0) {\n+        return Result(nullptr, defaultLocale, -1, -1, FALSE);\n+    } else {\n+        return Result(&desiredLocale, supportedLocales[suppIndex], 0, suppIndex, FALSE);\n+    }\n+}\n+\n+LocaleMatcher::Result LocaleMatcher::getBestMatchResult(\n+        Locale::Iterator &desiredLocales, UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode) || !desiredLocales.hasNext()) {\n+        return Result(nullptr, defaultLocale, -1, -1, FALSE);\n+    }\n+    LocaleLsrIterator lsrIter(likelySubtags, desiredLocales, ULOCMATCH_TEMPORARY_LOCALES);\n+    int32_t suppIndex = getBestSuppIndex(lsrIter.next(errorCode), &lsrIter, errorCode);\n+    if (U_FAILURE(errorCode) || suppIndex < 0) {\n+        return Result(nullptr, defaultLocale, -1, -1, FALSE);\n+    } else {\n+        return Result(lsrIter.orphanRemembered(), supportedLocales[suppIndex],\n+                      lsrIter.getBestDesiredIndex(), suppIndex, TRUE);\n+    }\n+}\n+\n+int32_t LocaleMatcher::getBestSuppIndex(LSR desiredLSR, LocaleLsrIterator *remainingIter,\n+                                        UErrorCode &errorCode) const {\n+    if (U_FAILURE(errorCode)) { return -1; }\n+    int32_t desiredIndex = 0;\n+    int32_t bestSupportedLsrIndex = -1;\n+    for (int32_t bestShiftedDistance = LocaleDistance::shiftDistance(thresholdDistance);;) {\n+        \/\/ Quick check for exact maximized LSR.\n+        \/\/ Returns suppIndex+1 where 0 means not found.\n+        if (supportedLsrToIndex != nullptr) {\n+            desiredLSR.setHashCode();\n+            int32_t index = uhash_geti(supportedLsrToIndex, &desiredLSR);\n+            if (index != 0) {\n+                int32_t suppIndex = index - 1;\n+                if (remainingIter != nullptr) {\n+                    remainingIter->rememberCurrent(desiredIndex, errorCode);\n+                }\n+                return suppIndex;\n+            }\n+        }\n+        int32_t bestIndexAndDistance = localeDistance.getBestIndexAndDistance(\n+                desiredLSR, supportedLSRs, supportedLSRsLength,\n+                bestShiftedDistance, favorSubtag, direction);\n+        if (bestIndexAndDistance >= 0) {\n+            bestShiftedDistance = LocaleDistance::getShiftedDistance(bestIndexAndDistance);\n+            if (remainingIter != nullptr) {\n+                remainingIter->rememberCurrent(desiredIndex, errorCode);\n+                if (U_FAILURE(errorCode)) { return -1; }\n+            }\n+            bestSupportedLsrIndex = LocaleDistance::getIndex(bestIndexAndDistance);\n+        }\n+        if ((bestShiftedDistance -= LocaleDistance::shiftDistance(demotionPerDesiredLocale)) <= 0) {\n+            break;\n+        }\n+        if (remainingIter == nullptr || !remainingIter->hasNext()) {\n+            break;\n+        }\n+        desiredLSR = remainingIter->next(errorCode);\n+        if (U_FAILURE(errorCode)) { return -1; }\n+        ++desiredIndex;\n+    }\n+    if (bestSupportedLsrIndex < 0) {\n+        \/\/ no good match\n+        return -1;\n+    }\n+    return supportedIndexes[bestSupportedLsrIndex];\n+}\n+\n+UBool LocaleMatcher::isMatch(const Locale &desired, const Locale &supported,\n+                             UErrorCode &errorCode) const {\n+    LSR suppLSR = getMaximalLsrOrUnd(likelySubtags, supported, errorCode);\n+    if (U_FAILURE(errorCode)) { return 0; }\n+    const LSR *pSuppLSR = &suppLSR;\n+    int32_t indexAndDistance = localeDistance.getBestIndexAndDistance(\n+            getMaximalLsrOrUnd(likelySubtags, desired, errorCode),\n+            &pSuppLSR, 1,\n+            LocaleDistance::shiftDistance(thresholdDistance), favorSubtag, direction);\n+    return indexAndDistance >= 0;\n+}\n+\n+double LocaleMatcher::internalMatch(const Locale &desired, const Locale &supported, UErrorCode &errorCode) const {\n+    \/\/ Returns the inverse of the distance: That is, 1-distance(desired, supported).\n+    LSR suppLSR = getMaximalLsrOrUnd(likelySubtags, supported, errorCode);\n+    if (U_FAILURE(errorCode)) { return 0; }\n+    const LSR *pSuppLSR = &suppLSR;\n+    int32_t indexAndDistance = localeDistance.getBestIndexAndDistance(\n+            getMaximalLsrOrUnd(likelySubtags, desired, errorCode),\n+            &pSuppLSR, 1,\n+            LocaleDistance::shiftDistance(thresholdDistance), favorSubtag, direction);\n+    double distance = LocaleDistance::getDistanceDouble(indexAndDistance);\n+    return (100.0 - distance) \/ 100.0;\n+}\n+\n+U_NAMESPACE_END\n+\n+\/\/ uloc_acceptLanguage() --------------------------------------------------- ***\n+\n+U_NAMESPACE_USE\n+\n+namespace {\n+\n+class LocaleFromTag {\n+public:\n+    LocaleFromTag() : locale(Locale::getRoot()) {}\n+    const Locale &operator()(const char *tag) { return locale = Locale(tag); }\n+\n+private:\n+    \/\/ Store the locale in the converter, rather than return a reference to a temporary,\n+    \/\/ or a value which could go out of scope with the caller's reference to it.\n+    Locale locale;\n+};\n+\n+int32_t acceptLanguage(UEnumeration &supportedLocales, Locale::Iterator &desiredLocales,\n+                       char *dest, int32_t capacity, UAcceptResult *acceptResult,\n+                       UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return 0; }\n+    LocaleMatcher::Builder builder;\n+    const char *locString;\n+    while ((locString = uenum_next(&supportedLocales, nullptr, &errorCode)) != nullptr) {\n+        Locale loc(locString);\n+        if (loc.isBogus()) {\n+            errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+            return 0;\n+        }\n+        builder.addSupportedLocale(loc);\n+    }\n+    LocaleMatcher matcher = builder.build(errorCode);\n+    LocaleMatcher::Result result = matcher.getBestMatchResult(desiredLocales, errorCode);\n+    if (U_FAILURE(errorCode)) { return 0; }\n+    if (result.getDesiredIndex() >= 0) {\n+        if (acceptResult != nullptr) {\n+            *acceptResult = *result.getDesiredLocale() == *result.getSupportedLocale() ?\n+                ULOC_ACCEPT_VALID : ULOC_ACCEPT_FALLBACK;\n+        }\n+        const char *bestStr = result.getSupportedLocale()->getName();\n+        int32_t bestLength = (int32_t)uprv_strlen(bestStr);\n+        if (bestLength <= capacity) {\n+            uprv_memcpy(dest, bestStr, bestLength);\n+        }\n+        return u_terminateChars(dest, capacity, bestLength, &errorCode);\n+    } else {\n+        if (acceptResult != nullptr) {\n+            *acceptResult = ULOC_ACCEPT_FAILED;\n+        }\n+        return u_terminateChars(dest, capacity, 0, &errorCode);\n+    }\n+}\n+\n+}  \/\/ namespace\n+\n+U_CAPI int32_t U_EXPORT2\n+uloc_acceptLanguage(char *result, int32_t resultAvailable,\n+                    UAcceptResult *outResult,\n+                    const char **acceptList, int32_t acceptListCount,\n+                    UEnumeration *availableLocales,\n+                    UErrorCode *status) {\n+    if (U_FAILURE(*status)) { return 0; }\n+    if ((result == nullptr ? resultAvailable != 0 : resultAvailable < 0) ||\n+            (acceptList == nullptr ? acceptListCount != 0 : acceptListCount < 0) ||\n+            availableLocales == nullptr) {\n+        *status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return 0;\n+    }\n+    LocaleFromTag converter;\n+    Locale::ConvertingIterator<const char **, LocaleFromTag> desiredLocales(\n+        acceptList, acceptList + acceptListCount, converter);\n+    return acceptLanguage(*availableLocales, desiredLocales,\n+                          result, resultAvailable, outResult, *status);\n+}\n+\n+U_CAPI int32_t U_EXPORT2\n+uloc_acceptLanguageFromHTTP(char *result, int32_t resultAvailable,\n+                            UAcceptResult *outResult,\n+                            const char *httpAcceptLanguage,\n+                            UEnumeration *availableLocales,\n+                            UErrorCode *status) {\n+    if (U_FAILURE(*status)) { return 0; }\n+    if ((result == nullptr ? resultAvailable != 0 : resultAvailable < 0) ||\n+            httpAcceptLanguage == nullptr || availableLocales == nullptr) {\n+        *status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return 0;\n+    }\n+    LocalePriorityList list(httpAcceptLanguage, *status);\n+    LocalePriorityList::Iterator desiredLocales = list.iterator();\n+    return acceptLanguage(*availableLocales, desiredLocales,\n+                          result, resultAvailable, outResult, *status);\n+}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/localematcher.cpp","additions":846,"deletions":0,"binary":false,"changes":846,"status":"added"},{"patch":"@@ -0,0 +1,239 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ localeprioritylist.cpp\n+\/\/ created: 2019jul11 Markus W. Scherer\n+\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/localpointer.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"charstr.h\"\n+#include \"cmemory.h\"\n+#include \"localeprioritylist.h\"\n+#include \"uarrsort.h\"\n+#include \"uassert.h\"\n+#include \"uhash.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+namespace {\n+\n+int32_t hashLocale(const UHashTok token) {\n+    auto *locale = static_cast<const Locale *>(token.pointer);\n+    return locale->hashCode();\n+}\n+\n+UBool compareLocales(const UHashTok t1, const UHashTok t2) {\n+    auto *l1 = static_cast<const Locale *>(t1.pointer);\n+    auto *l2 = static_cast<const Locale *>(t2.pointer);\n+    return *l1 == *l2;\n+}\n+\n+constexpr int32_t WEIGHT_ONE = 1000;\n+\n+struct LocaleAndWeight {\n+    Locale *locale;\n+    int32_t weight;  \/\/ 0..1000 = 0.0..1.0\n+    int32_t index;  \/\/ force stable sort\n+\n+    int32_t compare(const LocaleAndWeight &other) const {\n+        int32_t diff = other.weight - weight;  \/\/ descending: other-this\n+        if (diff != 0) { return diff; }\n+        return index - other.index;\n+    }\n+};\n+\n+int32_t U_CALLCONV\n+compareLocaleAndWeight(const void * \/*context*\/, const void *left, const void *right) {\n+    return static_cast<const LocaleAndWeight *>(left)->\n+        compare(*static_cast<const LocaleAndWeight *>(right));\n+}\n+\n+const char *skipSpaces(const char *p, const char *limit) {\n+    while (p < limit && *p == ' ') { ++p; }\n+    return p;\n+}\n+\n+int32_t findTagLength(const char *p, const char *limit) {\n+    \/\/ Look for accept-language delimiters.\n+    \/\/ Leave other validation up to the Locale constructor.\n+    const char *q;\n+    for (q = p; q < limit; ++q) {\n+        char c = *q;\n+        if (c == ' ' || c == ',' || c == ';') { break; }\n+    }\n+    return static_cast<int32_t>(q - p);\n+}\n+\n+\/**\n+ * Parses and returns a qvalue weight in millis.\n+ * Advances p to after the parsed substring.\n+ * Returns a negative value if parsing fails.\n+ *\/\n+int32_t parseWeight(const char *&p, const char *limit) {\n+    p = skipSpaces(p, limit);\n+    char c;\n+    if (p == limit || ((c = *p) != '0' && c != '1')) { return -1; }\n+    int32_t weight = (c - '0') * 1000;\n+    if (++p == limit || *p != '.') { return weight; }\n+    int32_t multiplier = 100;\n+    while (++p != limit && '0' <= (c = *p) && c <= '9') {\n+        c -= '0';\n+        if (multiplier > 0) {\n+            weight += c * multiplier;\n+            multiplier \/= 10;\n+        } else if (multiplier == 0) {\n+            \/\/ round up\n+            if (c >= 5) { ++weight; }\n+            multiplier = -1;\n+        }  \/\/ else ignore further fraction digits\n+    }\n+    return weight <= WEIGHT_ONE ? weight : -1;  \/\/ bad if > 1.0\n+}\n+\n+}  \/\/ namespace\n+\n+\/**\n+ * Nothing but a wrapper over a MaybeStackArray of LocaleAndWeight.\n+ *\n+ * This wrapper exists (and is not in an anonymous namespace)\n+ * so that we can forward-declare it in the header file and\n+ * don't have to expose the MaybeStackArray specialization and\n+ * the LocaleAndWeight to code (like the test) that #includes localeprioritylist.h.\n+ * Also, otherwise we would have to do a platform-specific\n+ * template export declaration of some kind for the MaybeStackArray specialization\n+ * to be properly exported from the common DLL.\n+ *\/\n+struct LocaleAndWeightArray : public UMemory {\n+    MaybeStackArray<LocaleAndWeight, 20> array;\n+};\n+\n+LocalePriorityList::LocalePriorityList(StringPiece s, UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return; }\n+    list = new LocaleAndWeightArray();\n+    if (list == nullptr) {\n+        errorCode = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    const char *p = s.data();\n+    const char *limit = p + s.length();\n+    while ((p = skipSpaces(p, limit)) != limit) {\n+        if (*p == ',') {  \/\/ empty range field\n+            ++p;\n+            continue;\n+        }\n+        int32_t tagLength = findTagLength(p, limit);\n+        if (tagLength == 0) {\n+            errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+            return;\n+        }\n+        CharString tag(p, tagLength, errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+        Locale locale = Locale(tag.data());\n+        if (locale.isBogus()) {\n+            errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+            return;\n+        }\n+        int32_t weight = WEIGHT_ONE;\n+        if ((p = skipSpaces(p + tagLength, limit)) != limit && *p == ';') {\n+            if ((p = skipSpaces(p + 1, limit)) == limit || *p != 'q' ||\n+                    (p = skipSpaces(p + 1, limit)) == limit || *p != '=' ||\n+                    (++p, (weight = parseWeight(p, limit)) < 0)) {\n+                errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+                return;\n+            }\n+            p = skipSpaces(p, limit);\n+        }\n+        if (p != limit && *p != ',') {  \/\/ trailing junk\n+            errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+            return;\n+        }\n+        add(locale, weight, errorCode);\n+        if (p == limit) { break; }\n+        ++p;\n+    }\n+    sort(errorCode);\n+}\n+\n+LocalePriorityList::~LocalePriorityList() {\n+    if (list != nullptr) {\n+        for (int32_t i = 0; i < listLength; ++i) {\n+            delete list->array[i].locale;\n+        }\n+        delete list;\n+    }\n+    uhash_close(map);\n+}\n+\n+const Locale *LocalePriorityList::localeAt(int32_t i) const {\n+    return list->array[i].locale;\n+}\n+\n+Locale *LocalePriorityList::orphanLocaleAt(int32_t i) {\n+    if (list == nullptr) { return nullptr; }\n+    LocaleAndWeight &lw = list->array[i];\n+    Locale *l = lw.locale;\n+    lw.locale = nullptr;\n+    return l;\n+}\n+\n+bool LocalePriorityList::add(const Locale &locale, int32_t weight, UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return false; }\n+    if (map == nullptr) {\n+        if (weight <= 0) { return true; }  \/\/ do not add q=0\n+        map = uhash_open(hashLocale, compareLocales, uhash_compareLong, &errorCode);\n+        if (U_FAILURE(errorCode)) { return false; }\n+    }\n+    LocalPointer<Locale> clone;\n+    int32_t index = uhash_geti(map, &locale);\n+    if (index != 0) {\n+        \/\/ Duplicate: Remove the old item and append it anew.\n+        LocaleAndWeight &lw = list->array[index - 1];\n+        clone.adoptInstead(lw.locale);\n+        lw.locale = nullptr;\n+        lw.weight = 0;\n+        ++numRemoved;\n+    }\n+    if (weight <= 0) {  \/\/ do not add q=0\n+        if (index != 0) {\n+            \/\/ Not strictly necessary but cleaner.\n+            uhash_removei(map, &locale);\n+        }\n+        return true;\n+    }\n+    if (clone.isNull()) {\n+        clone.adoptInstead(locale.clone());\n+        if (clone.isNull() || (clone->isBogus() && !locale.isBogus())) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            return false;\n+        }\n+    }\n+    if (listLength == list->array.getCapacity()) {\n+        int32_t newCapacity = listLength < 50 ? 100 : 4 * listLength;\n+        if (list->array.resize(newCapacity, listLength) == nullptr) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            return false;\n+        }\n+    }\n+    uhash_puti(map, clone.getAlias(), listLength + 1, &errorCode);\n+    if (U_FAILURE(errorCode)) { return false; }\n+    LocaleAndWeight &lw = list->array[listLength];\n+    lw.locale = clone.orphan();\n+    lw.weight = weight;\n+    lw.index = listLength++;\n+    if (weight < WEIGHT_ONE) { hasWeights = true; }\n+    U_ASSERT(uhash_count(map) == getLength());\n+    return true;\n+}\n+\n+void LocalePriorityList::sort(UErrorCode &errorCode) {\n+    \/\/ Sort by descending weights if there is a mix of weights.\n+    \/\/ The comparator forces a stable sort via the item index.\n+    if (U_FAILURE(errorCode) || getLength() <= 1 || !hasWeights) { return; }\n+    uprv_sortArray(list->array.getAlias(), listLength, sizeof(LocaleAndWeight),\n+                   compareLocaleAndWeight, nullptr, FALSE, &errorCode);\n+}\n+\n+U_NAMESPACE_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/localeprioritylist.cpp","additions":239,"deletions":0,"binary":false,"changes":239,"status":"added"},{"patch":"@@ -0,0 +1,115 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ localeprioritylist.h\n+\/\/ created: 2019jul11 Markus W. Scherer\n+\n+#ifndef __LOCALEPRIORITYLIST_H__\n+#define __LOCALEPRIORITYLIST_H__\n+\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+\n+struct UHashtable;\n+\n+U_NAMESPACE_BEGIN\n+\n+struct LocaleAndWeightArray;\n+\n+\/**\n+ * Parses a list of locales from an accept-language string.\n+ * We are a bit more lenient than the spec:\n+ * We accept extra whitespace in more places, empty range fields,\n+ * and any number of qvalue fraction digits.\n+ *\n+ * https:\/\/tools.ietf.org\/html\/rfc2616#section-14.4\n+ * 14.4 Accept-Language\n+ *\n+ *        Accept-Language = \"Accept-Language\" \":\"\n+ *                          1#( language-range [ \";\" \"q\" \"=\" qvalue ] )\n+ *        language-range  = ( ( 1*8ALPHA *( \"-\" 1*8ALPHA ) ) | \"*\" )\n+ *\n+ *    Each language-range MAY be given an associated quality value which\n+ *    represents an estimate of the user's preference for the languages\n+ *    specified by that range. The quality value defaults to \"q=1\". For\n+ *    example,\n+ *\n+ *        Accept-Language: da, en-gb;q=0.8, en;q=0.7\n+ *\n+ * https:\/\/tools.ietf.org\/html\/rfc2616#section-3.9\n+ * 3.9 Quality Values\n+ *\n+ *    HTTP content negotiation (section 12) uses short \"floating point\"\n+ *    numbers to indicate the relative importance (\"weight\") of various\n+ *    negotiable parameters.  A weight is normalized to a real number in\n+ *    the range 0 through 1, where 0 is the minimum and 1 the maximum\n+ *    value. If a parameter has a quality value of 0, then content with\n+ *    this parameter is `not acceptable' for the client. HTTP\/1.1\n+ *    applications MUST NOT generate more than three digits after the\n+ *    decimal point. User configuration of these values SHOULD also be\n+ *    limited in this fashion.\n+ *\n+ *        qvalue         = ( \"0\" [ \".\" 0*3DIGIT ] )\n+ *                       | ( \"1\" [ \".\" 0*3(\"0\") ] )\n+ *\/\n+class U_COMMON_API LocalePriorityList : public UMemory {\n+public:\n+    class Iterator : public Locale::Iterator {\n+    public:\n+        UBool hasNext() const override { return count < length; }\n+\n+        const Locale &next() override {\n+            for(;;) {\n+                const Locale *locale = list.localeAt(index++);\n+                if (locale != nullptr) {\n+                    ++count;\n+                    return *locale;\n+                }\n+            }\n+        }\n+\n+    private:\n+        friend class LocalePriorityList;\n+\n+        Iterator(const LocalePriorityList &list) : list(list), length(list.getLength()) {}\n+\n+        const LocalePriorityList &list;\n+        int32_t index = 0;\n+        int32_t count = 0;\n+        const int32_t length;\n+    };\n+\n+    LocalePriorityList(StringPiece s, UErrorCode &errorCode);\n+\n+    ~LocalePriorityList();\n+\n+    int32_t getLength() const { return listLength - numRemoved; }\n+\n+    int32_t getLengthIncludingRemoved() const { return listLength; }\n+\n+    Iterator iterator() const { return Iterator(*this); }\n+\n+    const Locale *localeAt(int32_t i) const;\n+\n+    Locale *orphanLocaleAt(int32_t i);\n+\n+private:\n+    LocalePriorityList(const LocalePriorityList &) = delete;\n+    LocalePriorityList &operator=(const LocalePriorityList &) = delete;\n+\n+    bool add(const Locale &locale, int32_t weight, UErrorCode &errorCode);\n+\n+    void sort(UErrorCode &errorCode);\n+\n+    LocaleAndWeightArray *list = nullptr;\n+    int32_t listLength = 0;\n+    int32_t numRemoved = 0;\n+    bool hasWeights = false;  \/\/ other than 1.0\n+    UHashtable *map = nullptr;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ __LOCALEPRIORITYLIST_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/localeprioritylist.h","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -22,0 +22,1 @@\n+#include \"unicode\/errorcode.h\"\n@@ -27,0 +28,1 @@\n+#include \"cstring.h\"\n@@ -98,4 +100,1 @@\n-\/* These strings describe the resources we attempt to load from\n- the locale ResourceBundle data file.*\/\n-static const char _kIndexLocaleName[] = \"res_index\";\n-static const char _kIndexTag[]        = \"InstalledLocales\";\n+namespace {\n@@ -103,3 +102,4 @@\n-static char** _installedLocales = NULL;\n-static int32_t _installedLocalesCount = 0;\n-static icu::UInitOnce _installedLocalesInitOnce;\n+\/\/ Enough capacity for the two lists in the res_index.res file\n+const char** gAvailableLocaleNames[2] = {};\n+int32_t gAvailableLocaleCounts[2] = {};\n+icu::UInitOnce ginstalledLocalesInitOnce = U_INITONCE_INITIALIZER;\n@@ -107,1 +107,34 @@\n-\/* ### Get available **************************************************\/\n+class AvailableLocalesSink : public ResourceSink {\n+  public:\n+    void put(const char *key, ResourceValue &value, UBool \/*noFallback*\/, UErrorCode &status) U_OVERRIDE {\n+        ResourceTable resIndexTable = value.getTable(status);\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        for (int32_t i = 0; resIndexTable.getKeyAndValue(i, key, value); ++i) {\n+            ULocAvailableType type;\n+            if (uprv_strcmp(key, \"InstalledLocales\") == 0) {\n+                type = ULOC_AVAILABLE_DEFAULT;\n+            } else if (uprv_strcmp(key, \"AliasLocales\") == 0) {\n+                type = ULOC_AVAILABLE_ONLY_LEGACY_ALIASES;\n+            } else {\n+                \/\/ CLDRVersion, etc.\n+                continue;\n+            }\n+            ResourceTable availableLocalesTable = value.getTable(status);\n+            if (U_FAILURE(status)) {\n+                return;\n+            }\n+            gAvailableLocaleCounts[type] = availableLocalesTable.getSize();\n+            gAvailableLocaleNames[type] = static_cast<const char**>(\n+                uprv_malloc(gAvailableLocaleCounts[type] * sizeof(const char*)));\n+            if (gAvailableLocaleNames[type] == nullptr) {\n+                status = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n+            for (int32_t j = 0; availableLocalesTable.getKeyAndValue(j, key, value); ++j) {\n+                gAvailableLocaleNames[type][j] = key;\n+            }\n+        }\n+    }\n+};\n@@ -109,2 +142,4 @@\n-static UBool U_CALLCONV uloc_cleanup(void) {\n-    char ** temp;\n+class AvailableLocalesStringEnumeration : public StringEnumeration {\n+  public:\n+    AvailableLocalesStringEnumeration(ULocAvailableType type) : fType(type) {\n+    }\n@@ -112,3 +147,14 @@\n-    if (_installedLocales) {\n-        temp = _installedLocales;\n-        _installedLocales = NULL;\n+    const char* next(int32_t *resultLength, UErrorCode&) override {\n+        ULocAvailableType actualType = fType;\n+        int32_t actualIndex = fIndex++;\n+\n+        \/\/ If the \"combined\" list was requested, resolve that now\n+        if (fType == ULOC_AVAILABLE_WITH_LEGACY_ALIASES) {\n+            int32_t defaultLocalesCount = gAvailableLocaleCounts[ULOC_AVAILABLE_DEFAULT];\n+            if (actualIndex < defaultLocalesCount) {\n+                actualType = ULOC_AVAILABLE_DEFAULT;\n+            } else {\n+                actualIndex -= defaultLocalesCount;\n+                actualType = ULOC_AVAILABLE_ONLY_LEGACY_ALIASES;\n+            }\n+        }\n@@ -116,2 +162,16 @@\n-        _installedLocalesCount = 0;\n-        _installedLocalesInitOnce.reset();\n+        \/\/ Return the requested string\n+        int32_t count = gAvailableLocaleCounts[actualType];\n+        const char* result;\n+        if (actualIndex < count) {\n+            result = gAvailableLocaleNames[actualType][actualIndex];\n+            if (resultLength != nullptr) {\n+                *resultLength = static_cast<int32_t>(uprv_strlen(result));\n+            }\n+        } else {\n+            result = nullptr;\n+            if (resultLength != nullptr) {\n+                *resultLength = 0;\n+            }\n+        }\n+        return result;\n+    }\n@@ -119,1 +179,2 @@\n-        uprv_free(temp);\n+    void reset(UErrorCode&) override {\n+        fIndex = 0;\n@@ -121,2 +182,0 @@\n-    return TRUE;\n-}\n@@ -124,2 +183,8 @@\n-\/\/ Load Installed Locales. This function will be called exactly once\n-\/\/   via the initOnce mechanism.\n+    int32_t count(UErrorCode&) const override {\n+        if (fType == ULOC_AVAILABLE_WITH_LEGACY_ALIASES) {\n+            return gAvailableLocaleCounts[ULOC_AVAILABLE_DEFAULT]\n+                + gAvailableLocaleCounts[ULOC_AVAILABLE_ONLY_LEGACY_ALIASES];\n+        } else {\n+            return gAvailableLocaleCounts[fType];\n+        }\n+    }\n@@ -127,4 +192,4 @@\n-static void U_CALLCONV loadInstalledLocales() {\n-    UErrorCode status = U_ZERO_ERROR;\n-    int32_t i = 0;\n-    int32_t localeCount;\n+  private:\n+    ULocAvailableType fType;\n+    int32_t fIndex = 0;\n+};\n@@ -132,2 +197,1 @@\n-    U_ASSERT(_installedLocales == NULL);\n-    U_ASSERT(_installedLocalesCount == 0);\n+\/* ### Get available **************************************************\/\n@@ -135,1 +199,9 @@\n-    _installedLocalesCount = 0;\n+static UBool U_CALLCONV uloc_cleanup(void) {\n+    for (int32_t i = 0; i < UPRV_LENGTHOF(gAvailableLocaleNames); i++) {\n+        uprv_free(gAvailableLocaleNames[i]);\n+        gAvailableLocaleNames[i] = nullptr;\n+        gAvailableLocaleCounts[i] = 0;\n+    }\n+    ginstalledLocalesInitOnce.reset();\n+    return TRUE;\n+}\n@@ -137,2 +209,2 @@\n-    icu::LocalUResourceBundlePointer indexLocale(ures_openDirect(NULL, _kIndexLocaleName, &status));\n-    icu::StackUResourceBundle installed;\n+\/\/ Load Installed Locales. This function will be called exactly once\n+\/\/   via the initOnce mechanism.\n@@ -140,1 +212,2 @@\n-    ures_getByKey(indexLocale.getAlias(), _kIndexTag, installed.getAlias(), &status);\n+static void U_CALLCONV loadInstalledLocales(UErrorCode& status) {\n+    ucln_common_registerCleanup(UCLN_COMMON_ULOC, uloc_cleanup);\n@@ -142,13 +215,3 @@\n-    if(U_SUCCESS(status)) {\n-        localeCount = ures_getSize(installed.getAlias());\n-        _installedLocales = (char **) uprv_malloc(sizeof(char*) * (localeCount+1));\n-        if (_installedLocales != NULL) {\n-            ures_resetIterator(installed.getAlias());\n-            while(ures_hasNext(installed.getAlias())) {\n-                ures_getNextString(installed.getAlias(), NULL, (const char **)&_installedLocales[i++], &status);\n-            }\n-            _installedLocales[i] = NULL;\n-            _installedLocalesCount = localeCount;\n-            ucln_common_registerCleanup(UCLN_COMMON_ULOC, uloc_cleanup);\n-        }\n-    }\n+    icu::LocalUResourceBundlePointer rb(ures_openDirect(NULL, \"res_index\", &status));\n+    AvailableLocalesSink sink;\n+    ures_getAllItemsWithFallback(rb.getAlias(), \"\", sink, status);\n@@ -157,3 +220,2 @@\n-static void _load_installedLocales()\n-{\n-    umtx_initOnce(_installedLocalesInitOnce, &loadInstalledLocales);\n+void _load_installedLocales(UErrorCode& status) {\n+    umtx_initOnce(ginstalledLocalesInitOnce, &loadInstalledLocales, status);\n@@ -162,5 +224,1 @@\n-U_CAPI const char* U_EXPORT2\n-uloc_getAvailable(int32_t offset)\n-{\n-\n-    _load_installedLocales();\n+} \/\/ namespace\n@@ -168,3 +226,12 @@\n-    if (offset > _installedLocalesCount)\n-        return NULL;\n-    return _installedLocales[offset];\n+U_CAPI const char* U_EXPORT2\n+uloc_getAvailable(int32_t offset) {\n+    icu::ErrorCode status;\n+    _load_installedLocales(status);\n+    if (status.isFailure()) {\n+        return nullptr;\n+    }\n+    if (offset > gAvailableLocaleCounts[0]) {\n+        \/\/ *status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return nullptr;\n+    }\n+    return gAvailableLocaleNames[0][offset];\n@@ -174,4 +241,28 @@\n-uloc_countAvailable()\n-{\n-    _load_installedLocales();\n-    return _installedLocalesCount;\n+uloc_countAvailable() {\n+    icu::ErrorCode status;\n+    _load_installedLocales(status);\n+    if (status.isFailure()) {\n+        return 0;\n+    }\n+    return gAvailableLocaleCounts[0];\n+}\n+\n+U_CAPI UEnumeration* U_EXPORT2\n+uloc_openAvailableByType(ULocAvailableType type, UErrorCode* status) {\n+    if (U_FAILURE(*status)) {\n+        return nullptr;\n+    }\n+    if (type < 0 || type >= ULOC_AVAILABLE_COUNT) {\n+        *status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return nullptr;\n+    }\n+    _load_installedLocales(*status);\n+    if (U_FAILURE(*status)) {\n+        return nullptr;\n+    }\n+    LocalPointer<AvailableLocalesStringEnumeration> result(\n+        new AvailableLocalesStringEnumeration(type), *status);\n+    if (U_FAILURE(*status)) {\n+        return nullptr;\n+    }\n+    return uenum_openFromStringEnumeration(result.orphan(), status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locavailable.cpp","additions":149,"deletions":58,"binary":false,"changes":207,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-  LocaleBased varname((objname).validLocale, (objname).actualLocale);\n+  LocaleBased varname((objname).validLocale, (objname).actualLocale)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locbased.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#include \"bytesinkutil.h\"\n+#include \"charstr.h\"\n@@ -413,0 +415,6 @@\n+    if (destCapacity == 0 && err == U_BUFFER_OVERFLOW_ERROR) {\n+        \/\/ For preflight, return the max of the value and the fallback.\n+        int32_t fallback_res = _getDisplayNameForComponent(locale, displayLocale, dest, destCapacity,\n+                                                           uloc_getScript, _kScripts, pErrorCode);\n+        return (fallback_res > res) ? fallback_res : res;\n+    }\n@@ -415,1 +423,1 @@\n-                    uloc_getScript, _kScripts, pErrorCode);\n+                                           uloc_getScript, _kScripts, pErrorCode);\n@@ -422,1 +430,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+static int32_t\n@@ -730,1 +738,1 @@\n-                    if(length+padLen < destCapacity) {\n+                    if(length+padLen <= destCapacity) {\n@@ -808,4 +816,0 @@\n-    char keywordValue[ULOC_FULLNAME_CAPACITY*4];\n-    int32_t capacity = ULOC_FULLNAME_CAPACITY*4;\n-    int32_t keywordValueLen =0;\n-\n@@ -823,4 +827,5 @@\n-    keywordValue[0]=0;\n-    keywordValueLen = uloc_getKeywordValue(locale, keyword, keywordValue, capacity, status);\n-    if (*status == U_STRING_NOT_TERMINATED_WARNING)\n-      *status = U_BUFFER_OVERFLOW_ERROR;\n+    CharString keywordValue;\n+    {\n+        CharStringByteSink sink(&keywordValue);\n+        ulocimp_getKeywordValue(locale, keyword, sink, status);\n+    }\n@@ -842,1 +847,1 @@\n-                ures_getByKeyWithFallback(currencies.getAlias(), keywordValue, NULL, status));\n+                ures_getByKeyWithFallback(currencies.getAlias(), keywordValue.data(), NULL, status));\n@@ -866,3 +871,3 @@\n-            if(keywordValueLen <= destCapacity){\n-                u_charsToUChars(keywordValue, dest, keywordValueLen);\n-                return u_terminateUChars(dest, destCapacity, keywordValueLen, status);\n+            if(keywordValue.length() <= destCapacity){\n+                u_charsToUChars(keywordValue.data(), dest, keywordValue.length());\n+                return u_terminateUChars(dest, destCapacity, keywordValue.length(), status);\n@@ -871,1 +876,1 @@\n-                return keywordValueLen;\n+                return keywordValue.length();\n@@ -880,2 +885,2 @@\n-                                   keywordValue,\n-                                   keywordValue,\n+                                   keywordValue.data(),\n+                                   keywordValue.data(),\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locdispnames.cpp","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,415 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ locdistance.cpp\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/bytestrie.h\"\n+#include \"unicode\/localematcher.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"unicode\/ures.h\"\n+#include \"cstring.h\"\n+#include \"locdistance.h\"\n+#include \"loclikelysubtags.h\"\n+#include \"uassert.h\"\n+#include \"ucln_cmn.h\"\n+#include \"uinvchar.h\"\n+#include \"umutex.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+namespace {\n+\n+\/**\n+ * Bit flag used on the last character of a subtag in the trie.\n+ * Must be set consistently by the builder and the lookup code.\n+ *\/\n+constexpr int32_t END_OF_SUBTAG = 0x80;\n+\/** Distance value bit flag, set by the builder. *\/\n+constexpr int32_t DISTANCE_SKIP_SCRIPT = 0x80;\n+\/** Distance value bit flag, set by trieNext(). *\/\n+constexpr int32_t DISTANCE_IS_FINAL = 0x100;\n+constexpr int32_t DISTANCE_IS_FINAL_OR_SKIP_SCRIPT = DISTANCE_IS_FINAL | DISTANCE_SKIP_SCRIPT;\n+\n+constexpr int32_t ABOVE_THRESHOLD = 100;\n+\n+\/\/ Indexes into array of distances.\n+enum {\n+    IX_DEF_LANG_DISTANCE,\n+    IX_DEF_SCRIPT_DISTANCE,\n+    IX_DEF_REGION_DISTANCE,\n+    IX_MIN_REGION_DISTANCE,\n+    IX_LIMIT\n+};\n+\n+LocaleDistance *gLocaleDistance = nullptr;\n+UInitOnce gInitOnce = U_INITONCE_INITIALIZER;\n+\n+UBool U_CALLCONV cleanup() {\n+    delete gLocaleDistance;\n+    gLocaleDistance = nullptr;\n+    gInitOnce.reset();\n+    return TRUE;\n+}\n+\n+}  \/\/ namespace\n+\n+void U_CALLCONV LocaleDistance::initLocaleDistance(UErrorCode &errorCode) {\n+    \/\/ This function is invoked only via umtx_initOnce().\n+    U_ASSERT(gLocaleDistance == nullptr);\n+    const XLikelySubtags &likely = *XLikelySubtags::getSingleton(errorCode);\n+    if (U_FAILURE(errorCode)) { return; }\n+    const LocaleDistanceData &data = likely.getDistanceData();\n+    if (data.distanceTrieBytes == nullptr ||\n+            data.regionToPartitions == nullptr || data.partitions == nullptr ||\n+            \/\/ ok if no paradigms\n+            data.distances == nullptr) {\n+        errorCode = U_MISSING_RESOURCE_ERROR;\n+        return;\n+    }\n+    gLocaleDistance = new LocaleDistance(data, likely);\n+    if (gLocaleDistance == nullptr) {\n+        errorCode = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    ucln_common_registerCleanup(UCLN_COMMON_LOCALE_DISTANCE, cleanup);\n+}\n+\n+const LocaleDistance *LocaleDistance::getSingleton(UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return nullptr; }\n+    umtx_initOnce(gInitOnce, &LocaleDistance::initLocaleDistance, errorCode);\n+    return gLocaleDistance;\n+}\n+\n+LocaleDistance::LocaleDistance(const LocaleDistanceData &data, const XLikelySubtags &likely) :\n+        likelySubtags(likely),\n+        trie(data.distanceTrieBytes),\n+        regionToPartitionsIndex(data.regionToPartitions), partitionArrays(data.partitions),\n+        paradigmLSRs(data.paradigms), paradigmLSRsLength(data.paradigmsLength),\n+        defaultLanguageDistance(data.distances[IX_DEF_LANG_DISTANCE]),\n+        defaultScriptDistance(data.distances[IX_DEF_SCRIPT_DISTANCE]),\n+        defaultRegionDistance(data.distances[IX_DEF_REGION_DISTANCE]),\n+        minRegionDistance(data.distances[IX_MIN_REGION_DISTANCE]) {\n+    \/\/ For the default demotion value, use the\n+    \/\/ default region distance between unrelated Englishes.\n+    \/\/ Thus, unless demotion is turned off,\n+    \/\/ a mere region difference for one desired locale\n+    \/\/ is as good as a perfect match for the next following desired locale.\n+    \/\/ As of CLDR 36, we have <languageMatch desired=\"en_*_*\" supported=\"en_*_*\" distance=\"5\"\/>.\n+    LSR en(\"en\", \"Latn\", \"US\", LSR::EXPLICIT_LSR);\n+    LSR enGB(\"en\", \"Latn\", \"GB\", LSR::EXPLICIT_LSR);\n+    const LSR *p_enGB = &enGB;\n+    int32_t indexAndDistance = getBestIndexAndDistance(en, &p_enGB, 1,\n+            shiftDistance(50), ULOCMATCH_FAVOR_LANGUAGE, ULOCMATCH_DIRECTION_WITH_ONE_WAY);\n+    defaultDemotionPerDesiredLocale  = getDistanceFloor(indexAndDistance);\n+}\n+\n+int32_t LocaleDistance::getBestIndexAndDistance(\n+        const LSR &desired,\n+        const LSR **supportedLSRs, int32_t supportedLSRsLength,\n+        int32_t shiftedThreshold,\n+        ULocMatchFavorSubtag favorSubtag, ULocMatchDirection direction) const {\n+    BytesTrie iter(trie);\n+    \/\/ Look up the desired language only once for all supported LSRs.\n+    \/\/ Its \"distance\" is either a match point value of 0, or a non-match negative value.\n+    \/\/ Note: The data builder verifies that there are no <*, supported> or <desired, *> rules.\n+    int32_t desLangDistance = trieNext(iter, desired.language, false);\n+    uint64_t desLangState = desLangDistance >= 0 && supportedLSRsLength > 1 ? iter.getState64() : 0;\n+    \/\/ Index of the supported LSR with the lowest distance.\n+    int32_t bestIndex = -1;\n+    \/\/ Cached lookup info from XLikelySubtags.compareLikely().\n+    int32_t bestLikelyInfo = -1;\n+    for (int32_t slIndex = 0; slIndex < supportedLSRsLength; ++slIndex) {\n+        const LSR &supported = *supportedLSRs[slIndex];\n+        bool star = false;\n+        int32_t distance = desLangDistance;\n+        if (distance >= 0) {\n+            U_ASSERT((distance & DISTANCE_IS_FINAL) == 0);\n+            if (slIndex != 0) {\n+                iter.resetToState64(desLangState);\n+            }\n+            distance = trieNext(iter, supported.language, true);\n+        }\n+        \/\/ Note: The data builder verifies that there are no rules with \"any\" (*) language and\n+        \/\/ real (non *) script or region subtags.\n+        \/\/ This means that if the lookup for either language fails we can use\n+        \/\/ the default distances without further lookups.\n+        int32_t flags;\n+        if (distance >= 0) {\n+            flags = distance & DISTANCE_IS_FINAL_OR_SKIP_SCRIPT;\n+            distance &= ~DISTANCE_IS_FINAL_OR_SKIP_SCRIPT;\n+        } else {  \/\/ <*, *>\n+            if (uprv_strcmp(desired.language, supported.language) == 0) {\n+                distance = 0;\n+            } else {\n+                distance = defaultLanguageDistance;\n+            }\n+            flags = 0;\n+            star = true;\n+        }\n+        U_ASSERT(0 <= distance && distance <= 100);\n+        \/\/ Round up the shifted threshold (if fraction bits are not 0)\n+        \/\/ for comparison with un-shifted distances until we need fraction bits.\n+        \/\/ (If we simply shifted non-zero fraction bits away, then we might ignore a language\n+        \/\/ when it's really still a micro distance below the threshold.)\n+        int32_t roundedThreshold = (shiftedThreshold + DISTANCE_FRACTION_MASK) >> DISTANCE_SHIFT;\n+        \/\/ We implement \"favor subtag\" by reducing the language subtag distance\n+        \/\/ (unscientifically reducing it to a quarter of the normal value),\n+        \/\/ so that the script distance is relatively more important.\n+        \/\/ For example, given a default language distance of 80, we reduce it to 20,\n+        \/\/ which is below the default threshold of 50, which is the default script distance.\n+        if (favorSubtag == ULOCMATCH_FAVOR_SCRIPT) {\n+            distance >>= 2;\n+        }\n+        \/\/ Let distance == roundedThreshold pass until the tie-breaker logic\n+        \/\/ at the end of the loop.\n+        if (distance > roundedThreshold) {\n+            continue;\n+        }\n+\n+        int32_t scriptDistance;\n+        if (star || flags != 0) {\n+            if (uprv_strcmp(desired.script, supported.script) == 0) {\n+                scriptDistance = 0;\n+            } else {\n+                scriptDistance = defaultScriptDistance;\n+            }\n+        } else {\n+            scriptDistance = getDesSuppScriptDistance(iter, iter.getState64(),\n+                    desired.script, supported.script);\n+            flags = scriptDistance & DISTANCE_IS_FINAL;\n+            scriptDistance &= ~DISTANCE_IS_FINAL;\n+        }\n+        distance += scriptDistance;\n+        if (distance > roundedThreshold) {\n+            continue;\n+        }\n+\n+        if (uprv_strcmp(desired.region, supported.region) == 0) {\n+            \/\/ regionDistance = 0\n+        } else if (star || (flags & DISTANCE_IS_FINAL) != 0) {\n+            distance += defaultRegionDistance;\n+        } else {\n+            int32_t remainingThreshold = roundedThreshold - distance;\n+            if (minRegionDistance > remainingThreshold) {\n+                continue;\n+            }\n+\n+            \/\/ From here on we know the regions are not equal.\n+            \/\/ Map each region to zero or more partitions. (zero = one non-matching string)\n+            \/\/ (Each array of single-character partition strings is encoded as one string.)\n+            \/\/ If either side has more than one, then we find the maximum distance.\n+            \/\/ This could be optimized by adding some more structure, but probably not worth it.\n+            distance += getRegionPartitionsDistance(\n+                    iter, iter.getState64(),\n+                    partitionsForRegion(desired),\n+                    partitionsForRegion(supported),\n+                    remainingThreshold);\n+        }\n+        int32_t shiftedDistance = shiftDistance(distance);\n+        if (shiftedDistance == 0) {\n+            \/\/ Distinguish between equivalent but originally unequal locales via an\n+            \/\/ additional micro distance.\n+            shiftedDistance |= (desired.flags ^ supported.flags);\n+            if (shiftedDistance < shiftedThreshold) {\n+                if (direction != ULOCMATCH_DIRECTION_ONLY_TWO_WAY ||\n+                        \/\/ Is there also a match when we swap desired\/supported?\n+                        isMatch(supported, desired, shiftedThreshold, favorSubtag)) {\n+                    if (shiftedDistance == 0) {\n+                        return slIndex << INDEX_SHIFT;\n+                    }\n+                    bestIndex = slIndex;\n+                    shiftedThreshold = shiftedDistance;\n+                    bestLikelyInfo = -1;\n+                }\n+            }\n+        } else {\n+            if (shiftedDistance < shiftedThreshold) {\n+                if (direction != ULOCMATCH_DIRECTION_ONLY_TWO_WAY ||\n+                        \/\/ Is there also a match when we swap desired\/supported?\n+                        isMatch(supported, desired, shiftedThreshold, favorSubtag)) {\n+                    bestIndex = slIndex;\n+                    shiftedThreshold = shiftedDistance;\n+                    bestLikelyInfo = -1;\n+                }\n+            } else if (shiftedDistance == shiftedThreshold && bestIndex >= 0) {\n+                if (direction != ULOCMATCH_DIRECTION_ONLY_TWO_WAY ||\n+                        \/\/ Is there also a match when we swap desired\/supported?\n+                        isMatch(supported, desired, shiftedThreshold, favorSubtag)) {\n+                    bestLikelyInfo = likelySubtags.compareLikely(\n+                            supported, *supportedLSRs[bestIndex], bestLikelyInfo);\n+                    if ((bestLikelyInfo & 1) != 0) {\n+                        \/\/ This supported locale matches as well as the previous best match,\n+                        \/\/ and neither matches perfectly,\n+                        \/\/ but this one is \"more likely\" (has more-default subtags).\n+                        bestIndex = slIndex;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return bestIndex >= 0 ?\n+            (bestIndex << INDEX_SHIFT) | shiftedThreshold :\n+            INDEX_NEG_1 | shiftDistance(ABOVE_THRESHOLD);\n+}\n+\n+int32_t LocaleDistance::getDesSuppScriptDistance(\n+        BytesTrie &iter, uint64_t startState, const char *desired, const char *supported) {\n+    \/\/ Note: The data builder verifies that there are no <*, supported> or <desired, *> rules.\n+    int32_t distance = trieNext(iter, desired, false);\n+    if (distance >= 0) {\n+        distance = trieNext(iter, supported, true);\n+    }\n+    if (distance < 0) {\n+        UStringTrieResult result = iter.resetToState64(startState).next(u'*');  \/\/ <*, *>\n+        U_ASSERT(USTRINGTRIE_HAS_VALUE(result));\n+        if (uprv_strcmp(desired, supported) == 0) {\n+            distance = 0;  \/\/ same script\n+        } else {\n+            distance = iter.getValue();\n+            U_ASSERT(distance >= 0);\n+        }\n+        if (result == USTRINGTRIE_FINAL_VALUE) {\n+            distance |= DISTANCE_IS_FINAL;\n+        }\n+    }\n+    return distance;\n+}\n+\n+int32_t LocaleDistance::getRegionPartitionsDistance(\n+        BytesTrie &iter, uint64_t startState,\n+        const char *desiredPartitions, const char *supportedPartitions, int32_t threshold) {\n+    char desired = *desiredPartitions++;\n+    char supported = *supportedPartitions++;\n+    U_ASSERT(desired != 0 && supported != 0);\n+    \/\/ See if we have single desired\/supported partitions, from NUL-terminated\n+    \/\/ partition strings without explicit length.\n+    bool suppLengthGt1 = *supportedPartitions != 0;  \/\/ gt1: more than 1 character\n+    \/\/ equivalent to: if (desLength == 1 && suppLength == 1)\n+    if (*desiredPartitions == 0 && !suppLengthGt1) {\n+        \/\/ Fastpath for single desired\/supported partitions.\n+        UStringTrieResult result = iter.next(uprv_invCharToAscii(desired) | END_OF_SUBTAG);\n+        if (USTRINGTRIE_HAS_NEXT(result)) {\n+            result = iter.next(uprv_invCharToAscii(supported) | END_OF_SUBTAG);\n+            if (USTRINGTRIE_HAS_VALUE(result)) {\n+                return iter.getValue();\n+            }\n+        }\n+        return getFallbackRegionDistance(iter, startState);\n+    }\n+\n+    const char *supportedStart = supportedPartitions - 1;  \/\/ for restart of inner loop\n+    int32_t regionDistance = 0;\n+    \/\/ Fall back to * only once, not for each pair of partition strings.\n+    bool star = false;\n+    for (;;) {\n+        \/\/ Look up each desired-partition string only once,\n+        \/\/ not for each (desired, supported) pair.\n+        UStringTrieResult result = iter.next(uprv_invCharToAscii(desired) | END_OF_SUBTAG);\n+        if (USTRINGTRIE_HAS_NEXT(result)) {\n+            uint64_t desState = suppLengthGt1 ? iter.getState64() : 0;\n+            for (;;) {\n+                result = iter.next(uprv_invCharToAscii(supported) | END_OF_SUBTAG);\n+                int32_t d;\n+                if (USTRINGTRIE_HAS_VALUE(result)) {\n+                    d = iter.getValue();\n+                } else if (star) {\n+                    d = 0;\n+                } else {\n+                    d = getFallbackRegionDistance(iter, startState);\n+                    star = true;\n+                }\n+                if (d > threshold) {\n+                    return d;\n+                } else if (regionDistance < d) {\n+                    regionDistance = d;\n+                }\n+                if ((supported = *supportedPartitions++) != 0) {\n+                    iter.resetToState64(desState);\n+                } else {\n+                    break;\n+                }\n+            }\n+        } else if (!star) {\n+            int32_t d = getFallbackRegionDistance(iter, startState);\n+            if (d > threshold) {\n+                return d;\n+            } else if (regionDistance < d) {\n+                regionDistance = d;\n+            }\n+            star = true;\n+        }\n+        if ((desired = *desiredPartitions++) != 0) {\n+            iter.resetToState64(startState);\n+            supportedPartitions = supportedStart;\n+            supported = *supportedPartitions++;\n+        } else {\n+            break;\n+        }\n+    }\n+    return regionDistance;\n+}\n+\n+int32_t LocaleDistance::getFallbackRegionDistance(BytesTrie &iter, uint64_t startState) {\n+#if U_DEBUG\n+    UStringTrieResult result =\n+#endif\n+    iter.resetToState64(startState).next(u'*');  \/\/ <*, *>\n+    U_ASSERT(USTRINGTRIE_HAS_VALUE(result));\n+    int32_t distance = iter.getValue();\n+    U_ASSERT(distance >= 0);\n+    return distance;\n+}\n+\n+int32_t LocaleDistance::trieNext(BytesTrie &iter, const char *s, bool wantValue) {\n+    uint8_t c;\n+    if ((c = *s) == 0) {\n+        return -1;  \/\/ no empty subtags in the distance data\n+    }\n+    for (;;) {\n+        c = uprv_invCharToAscii(c);\n+        \/\/ EBCDIC: If *s is not an invariant character,\n+        \/\/ then c is now 0 and will simply not match anything, which is harmless.\n+        uint8_t next = *++s;\n+        if (next != 0) {\n+            if (!USTRINGTRIE_HAS_NEXT(iter.next(c))) {\n+                return -1;\n+            }\n+        } else {\n+            \/\/ last character of this subtag\n+            UStringTrieResult result = iter.next(c | END_OF_SUBTAG);\n+            if (wantValue) {\n+                if (USTRINGTRIE_HAS_VALUE(result)) {\n+                    int32_t value = iter.getValue();\n+                    if (result == USTRINGTRIE_FINAL_VALUE) {\n+                        value |= DISTANCE_IS_FINAL;\n+                    }\n+                    return value;\n+                }\n+            } else {\n+                if (USTRINGTRIE_HAS_NEXT(result)) {\n+                    return 0;\n+                }\n+            }\n+            return -1;\n+        }\n+        c = next;\n+    }\n+}\n+\n+UBool LocaleDistance::isParadigmLSR(const LSR &lsr) const {\n+    \/\/ Linear search for a very short list (length 6 as of 2019),\n+    \/\/ because we look for equivalence not equality, and\n+    \/\/ because it's easy.\n+    \/\/ If there are many paradigm LSRs we should use a hash set\n+    \/\/ with custom comparator and hasher.\n+    U_ASSERT(paradigmLSRsLength <= 15);\n+    for (int32_t i = 0; i < paradigmLSRsLength; ++i) {\n+        if (lsr.isEquivalentTo(paradigmLSRs[i])) { return true; }\n+    }\n+    return false;\n+}\n+\n+U_NAMESPACE_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locdistance.cpp","additions":415,"deletions":0,"binary":false,"changes":415,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ locdistance.h\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#ifndef __LOCDISTANCE_H__\n+#define __LOCDISTANCE_H__\n+\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/bytestrie.h\"\n+#include \"unicode\/localematcher.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"lsr.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+struct LocaleDistanceData;\n+\n+\/**\n+ * Offline-built data for LocaleMatcher.\n+ * Mostly but not only the data for mapping locales to their maximized forms.\n+ *\/\n+class LocaleDistance final : public UMemory {\n+public:\n+    static const LocaleDistance *getSingleton(UErrorCode &errorCode);\n+\n+    static int32_t shiftDistance(int32_t distance) {\n+        return distance << DISTANCE_SHIFT;\n+    }\n+\n+    static int32_t getShiftedDistance(int32_t indexAndDistance) {\n+        return indexAndDistance & DISTANCE_MASK;\n+    }\n+\n+    static double getDistanceDouble(int32_t indexAndDistance) {\n+        double shiftedDistance = getShiftedDistance(indexAndDistance);\n+        return shiftedDistance \/ (1 << DISTANCE_SHIFT);\n+    }\n+\n+    static int32_t getDistanceFloor(int32_t indexAndDistance) {\n+        return (indexAndDistance & DISTANCE_MASK) >> DISTANCE_SHIFT;\n+    }\n+\n+    static int32_t getIndex(int32_t indexAndDistance) {\n+        \/\/ assert indexAndDistance >= 0;\n+        return indexAndDistance >> INDEX_SHIFT;\n+    }\n+\n+    \/**\n+     * Finds the supported LSR with the smallest distance from the desired one.\n+     * Equivalent LSR subtags must be normalized into a canonical form.\n+     *\n+     * <p>Returns the index of the lowest-distance supported LSR in the high bits\n+     * (negative if none has a distance below the threshold),\n+     * and its distance (0..ABOVE_THRESHOLD) in the low bits.\n+     *\/\n+    int32_t getBestIndexAndDistance(const LSR &desired,\n+                                    const LSR **supportedLSRs, int32_t supportedLSRsLength,\n+                                    int32_t shiftedThreshold,\n+                                    ULocMatchFavorSubtag favorSubtag,\n+                                    ULocMatchDirection direction) const;\n+\n+    UBool isParadigmLSR(const LSR &lsr) const;\n+\n+    int32_t getDefaultScriptDistance() const {\n+        return defaultScriptDistance;\n+    }\n+\n+    int32_t getDefaultDemotionPerDesiredLocale() const {\n+        return defaultDemotionPerDesiredLocale;\n+    }\n+\n+private:\n+    \/\/ The distance is shifted left to gain some fraction bits.\n+    static constexpr int32_t DISTANCE_SHIFT = 3;\n+    static constexpr int32_t DISTANCE_FRACTION_MASK = 7;\n+    \/\/ 7 bits for 0..100\n+    static constexpr int32_t DISTANCE_INT_SHIFT = 7;\n+    static constexpr int32_t INDEX_SHIFT = DISTANCE_INT_SHIFT + DISTANCE_SHIFT;\n+    static constexpr int32_t DISTANCE_MASK = 0x3ff;\n+    \/\/ tic constexpr int32_t MAX_INDEX = 0x1fffff;  \/\/ avoids sign bit\n+    static constexpr int32_t INDEX_NEG_1 = 0xfffffc00;\n+\n+    LocaleDistance(const LocaleDistanceData &data, const XLikelySubtags &likely);\n+    LocaleDistance(const LocaleDistance &other) = delete;\n+    LocaleDistance &operator=(const LocaleDistance &other) = delete;\n+\n+    static void initLocaleDistance(UErrorCode &errorCode);\n+\n+    UBool isMatch(const LSR &desired, const LSR &supported,\n+                  int32_t shiftedThreshold, ULocMatchFavorSubtag favorSubtag) const {\n+        const LSR *pSupp = &supported;\n+        return getBestIndexAndDistance(\n+            desired, &pSupp, 1,\n+            shiftedThreshold, favorSubtag, ULOCMATCH_DIRECTION_WITH_ONE_WAY) >= 0;\n+    }\n+\n+    static int32_t getDesSuppScriptDistance(BytesTrie &iter, uint64_t startState,\n+                                            const char *desired, const char *supported);\n+\n+    static int32_t getRegionPartitionsDistance(\n+        BytesTrie &iter, uint64_t startState,\n+        const char *desiredPartitions, const char *supportedPartitions,\n+        int32_t threshold);\n+\n+    static int32_t getFallbackRegionDistance(BytesTrie &iter, uint64_t startState);\n+\n+    static int32_t trieNext(BytesTrie &iter, const char *s, bool wantValue);\n+\n+    const char *partitionsForRegion(const LSR &lsr) const {\n+        \/\/ ill-formed region -> one non-matching string\n+        int32_t pIndex = regionToPartitionsIndex[lsr.regionIndex];\n+        return partitionArrays[pIndex];\n+    }\n+\n+    int32_t getDefaultRegionDistance() const {\n+        return defaultRegionDistance;\n+    }\n+\n+    const XLikelySubtags &likelySubtags;\n+\n+    \/\/ The trie maps each dlang+slang+dscript+sscript+dregion+sregion\n+    \/\/ (encoded in ASCII with bit 7 set on the last character of each subtag) to a distance.\n+    \/\/ There is also a trie value for each subsequence of whole subtags.\n+    \/\/ One '*' is used for a (desired, supported) pair of \"und\", \"Zzzz\"\/\"\", or \"ZZ\"\/\"\".\n+    BytesTrie trie;\n+\n+    \/**\n+     * Maps each region to zero or more single-character partitions.\n+     *\/\n+    const uint8_t *regionToPartitionsIndex;\n+    const char **partitionArrays;\n+\n+    \/**\n+     * Used to get the paradigm region for a cluster, if there is one.\n+     *\/\n+    const LSR *paradigmLSRs;\n+    int32_t paradigmLSRsLength;\n+\n+    int32_t defaultLanguageDistance;\n+    int32_t defaultScriptDistance;\n+    int32_t defaultRegionDistance;\n+    int32_t minRegionDistance;\n+    int32_t defaultDemotionPerDesiredLocale;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ __LOCDISTANCE_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locdistance.h","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -294,0 +294,1 @@\n+    UDisplayContext substitute;\n@@ -340,1 +341,1 @@\n-                                UnicodeString& result) const;\n+                                UnicodeString& result, bool substitute) const;\n@@ -362,0 +363,1 @@\n+    , substitute(UDISPCTX_SUBSTITUTE)\n@@ -374,0 +376,1 @@\n+    , substitute(UDISPCTX_SUBSTITUTE)\n@@ -388,0 +391,3 @@\n+            case UDISPCTX_TYPE_SUBSTITUTE_HANDLING:\n+                substitute = value;\n+                break;\n@@ -538,0 +544,2 @@\n+        case UDISPCTX_TYPE_SUBSTITUTE_HANDLING:\n+            return substitute;\n@@ -552,1 +560,1 @@\n-        static UMutex capitalizationBrkIterLock = U_MUTEX_INITIALIZER;\n+        static UMutex capitalizationBrkIterLock;\n@@ -586,1 +594,1 @@\n-        localeIdName(buffer, resultName);\n+        localeIdName(buffer, resultName, false);\n@@ -595,1 +603,1 @@\n-        localeIdName(buffer, resultName);\n+        localeIdName(buffer, resultName, false);\n@@ -603,1 +611,1 @@\n-        localeIdName(buffer, resultName);\n+        localeIdName(buffer, resultName, false);\n@@ -612,1 +620,5 @@\n-    localeIdName(lang, resultName);\n+    localeIdName(lang, resultName, substitute == UDISPCTX_SUBSTITUTE);\n+    if (resultName.isBogus()) {\n+      result.setToBogus();\n+      return result;\n+    }\n@@ -620,1 +632,6 @@\n-    resultRemainder.append(scriptDisplayName(script, temp, TRUE));\n+    UnicodeString script_str = scriptDisplayName(script, temp, TRUE);\n+    if (script_str.isBogus()) {\n+      result.setToBogus();\n+      return result;\n+    }\n+    resultRemainder.append(script_str);\n@@ -623,1 +640,6 @@\n-    appendWithSep(resultRemainder, regionDisplayName(country, temp, TRUE));\n+    UnicodeString region_str = regionDisplayName(country, temp, TRUE);\n+    if (region_str.isBogus()) {\n+      result.setToBogus();\n+      return result;\n+    }\n+    appendWithSep(resultRemainder, region_str);\n@@ -626,1 +648,6 @@\n-    appendWithSep(resultRemainder, variantDisplayName(variant, temp, TRUE));\n+    UnicodeString variant_str = variantDisplayName(variant, temp, TRUE);\n+    if (variant_str.isBogus()) {\n+      result.setToBogus();\n+      return result;\n+    }\n+    appendWithSep(resultRemainder, variant_str);\n@@ -692,1 +719,1 @@\n-                                     UnicodeString& result) const {\n+                                     UnicodeString& result, bool substitute) const {\n@@ -699,1 +726,5 @@\n-    return langData.getNoFallback(\"Languages\", localeId, result);\n+    if (substitute) {\n+        return langData.get(\"Languages\", localeId, result);\n+    } else {\n+        return langData.getNoFallback(\"Languages\", localeId, result);\n+    }\n@@ -709,1 +740,1 @@\n-        langData.get(\"Languages%short\", lang, result);\n+        langData.getNoFallback(\"Languages%short\", lang, result);\n@@ -714,1 +745,5 @@\n-    langData.get(\"Languages\", lang, result);\n+    if (substitute == UDISPCTX_SUBSTITUTE) {\n+        langData.get(\"Languages\", lang, result);\n+    } else {\n+        langData.getNoFallback(\"Languages\", lang, result);\n+    }\n@@ -723,1 +758,1 @@\n-        langData.get(\"Scripts%short\", script, result);\n+        langData.getNoFallback(\"Scripts%short\", script, result);\n@@ -728,1 +763,5 @@\n-    langData.get(\"Scripts\", script, result);\n+    if (substitute == UDISPCTX_SUBSTITUTE) {\n+        langData.get(\"Scripts\", script, result);\n+    } else {\n+        langData.getNoFallback(\"Scripts\", script, result);\n+    }\n@@ -749,1 +788,1 @@\n-        regionData.get(\"Countries%short\", region, result);\n+         regionData.getNoFallback(\"Countries%short\", region, result);\n@@ -754,1 +793,5 @@\n-    regionData.get(\"Countries\", region, result);\n+    if (substitute == UDISPCTX_SUBSTITUTE) {\n+        regionData.get(\"Countries\", region, result);\n+    } else {\n+        regionData.getNoFallback(\"Countries\", region, result);\n+    }\n@@ -770,1 +813,5 @@\n-    langData.get(\"Variants\", variant, result);\n+    if (substitute == UDISPCTX_SUBSTITUTE) {\n+        langData.get(\"Variants\", variant, result);\n+    } else {\n+        langData.getNoFallback(\"Variants\", variant, result);\n+    }\n@@ -785,1 +832,5 @@\n-    langData.get(\"Keys\", key, result);\n+    if (substitute == UDISPCTX_SUBSTITUTE) {\n+        langData.get(\"Keys\", key, result);\n+    } else {\n+        langData.getNoFallback(\"Keys\", key, result);\n+    }\n@@ -805,1 +856,0 @@\n-        UBool isChoice = FALSE;\n@@ -807,1 +857,1 @@\n-            locale.getBaseName(), UCURR_LONG_NAME, &isChoice, &len, &sts);\n+            locale.getBaseName(), UCURR_LONG_NAME, nullptr \/* isChoiceFormat *\/, &len, &sts);\n@@ -818,1 +868,1 @@\n-        langData.get(\"Types%short\", key, value, result);\n+        langData.getNoFallback(\"Types%short\", key, value, result);\n@@ -823,1 +873,5 @@\n-    langData.get(\"Types\", key, value, result);\n+    if (substitute == UDISPCTX_SUBSTITUTE) {\n+        langData.get(\"Types\", key, value, result);\n+    } else {\n+        langData.getNoFallback(\"Types\", key, value, result);\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locdspnm.cpp","additions":77,"deletions":23,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"unicode\/localebuilder.h\"\n@@ -41,4 +42,5 @@\n-#include \"putilimp.h\"\n-#include \"mutex.h\"\n-#include \"umutex.h\"\n-#include \"uassert.h\"\n+#include \"unicode\/ures.h\"\n+\n+#include \"bytesinkutil.h\"\n+#include \"charstr.h\"\n+#include \"charstrmap.h\"\n@@ -47,0 +49,2 @@\n+#include \"mutex.h\"\n+#include \"putilimp.h\"\n@@ -48,0 +52,1 @@\n+#include \"ucln_cmn.h\"\n@@ -50,1 +55,2 @@\n-#include \"ucln_cmn.h\"\n+#include \"umutex.h\"\n+#include \"uniquecharstr.h\"\n@@ -52,2 +58,1 @@\n-#include \"charstr.h\"\n-#include \"bytesinkutil.h\"\n+#include \"uvector.h\"\n@@ -65,4 +70,1 @@\n-static UMutex *gDefaultLocaleMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gDefaultLocaleMutex;\n@@ -107,7 +109,0 @@\n-U_CFUNC int32_t locale_getKeywords(const char *localeID,\n-            char prev,\n-            char *keywords, int32_t keywordCapacity,\n-            char *values, int32_t valuesCapacity, int32_t *valLen,\n-            UBool valuesToo,\n-            UErrorCode *status);\n-\n@@ -177,1 +172,1 @@\n-    Mutex lock(gDefaultLocaleMutex());\n+    Mutex lock(&gDefaultLocaleMutex);\n@@ -190,6 +185,8 @@\n-    char localeNameBuf[512];\n-\n-    if (canonicalize) {\n-        uloc_canonicalize(id, localeNameBuf, sizeof(localeNameBuf)-1, &status);\n-    } else {\n-        uloc_getName(id, localeNameBuf, sizeof(localeNameBuf)-1, &status);\n+    CharString localeNameBuf;\n+    {\n+        CharStringByteSink sink(&localeNameBuf);\n+        if (canonicalize) {\n+            ulocimp_canonicalize(id, sink, &status);\n+        } else {\n+            ulocimp_getName(id, sink, &status);\n+        }\n@@ -197,4 +194,1 @@\n-    localeNameBuf[sizeof(localeNameBuf)-1] = 0;  \/\/ Force null termination in event of\n-                                                 \/\/   a long name filling the buffer.\n-                                                 \/\/   (long names are truncated.)\n-                                                 \/\/\n+\n@@ -214,1 +208,1 @@\n-    Locale *newDefault = (Locale *)uhash_get(gDefaultLocalesHashT, localeNameBuf);\n+    Locale *newDefault = (Locale *)uhash_get(gDefaultLocalesHashT, localeNameBuf.data());\n@@ -221,1 +215,1 @@\n-        newDefault->init(localeNameBuf, FALSE);\n+        newDefault->init(localeNameBuf.data(), FALSE);\n@@ -259,0 +253,1 @@\n+#define NULL_CHAR '\\0'\n@@ -513,1 +508,1125 @@\n-#define ISASCIIALPHA(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z'))\n+namespace {\n+\n+UInitOnce gKnownCanonicalizedInitOnce = U_INITONCE_INITIALIZER;\n+UHashtable *gKnownCanonicalized = nullptr;\n+\n+static const char* const KNOWN_CANONICALIZED[] = {\n+    \"c\",\n+    \/\/ Commonly used locales known are already canonicalized\n+    \"af\", \"af_ZA\", \"am\", \"am_ET\", \"ar\", \"ar_001\", \"as\", \"as_IN\", \"az\", \"az_AZ\",\n+    \"be\", \"be_BY\", \"bg\", \"bg_BG\", \"bn\", \"bn_IN\", \"bs\", \"bs_BA\", \"ca\", \"ca_ES\",\n+    \"cs\", \"cs_CZ\", \"cy\", \"cy_GB\", \"da\", \"da_DK\", \"de\", \"de_DE\", \"el\", \"el_GR\",\n+    \"en\", \"en_GB\", \"en_US\", \"es\", \"es_419\", \"es_ES\", \"et\", \"et_EE\", \"eu\",\n+    \"eu_ES\", \"fa\", \"fa_IR\", \"fi\", \"fi_FI\", \"fil\", \"fil_PH\", \"fr\", \"fr_FR\",\n+    \"ga\", \"ga_IE\", \"gl\", \"gl_ES\", \"gu\", \"gu_IN\", \"he\", \"he_IL\", \"hi\", \"hi_IN\",\n+    \"hr\", \"hr_HR\", \"hu\", \"hu_HU\", \"hy\", \"hy_AM\", \"id\", \"id_ID\", \"is\", \"is_IS\",\n+    \"it\", \"it_IT\", \"ja\", \"ja_JP\", \"jv\", \"jv_ID\", \"ka\", \"ka_GE\", \"kk\", \"kk_KZ\",\n+    \"km\", \"km_KH\", \"kn\", \"kn_IN\", \"ko\", \"ko_KR\", \"ky\", \"ky_KG\", \"lo\", \"lo_LA\",\n+    \"lt\", \"lt_LT\", \"lv\", \"lv_LV\", \"mk\", \"mk_MK\", \"ml\", \"ml_IN\", \"mn\", \"mn_MN\",\n+    \"mr\", \"mr_IN\", \"ms\", \"ms_MY\", \"my\", \"my_MM\", \"nb\", \"nb_NO\", \"ne\", \"ne_NP\",\n+    \"nl\", \"nl_NL\", \"or\", \"or_IN\", \"pa\", \"pa_IN\", \"pl\", \"pl_PL\", \"ps\", \"ps_AF\",\n+    \"pt\", \"pt_BR\", \"pt_PT\", \"ro\", \"ro_RO\", \"ru\", \"ru_RU\", \"sd\", \"sd_IN\", \"si\",\n+    \"si_LK\", \"sk\", \"sk_SK\", \"sl\", \"sl_SI\", \"so\", \"so_SO\", \"sq\", \"sq_AL\", \"sr\",\n+    \"sr_Cyrl_RS\", \"sr_Latn\", \"sr_RS\", \"sv\", \"sv_SE\", \"sw\", \"sw_TZ\", \"ta\",\n+    \"ta_IN\", \"te\", \"te_IN\", \"th\", \"th_TH\", \"tk\", \"tk_TM\", \"tr\", \"tr_TR\", \"uk\",\n+    \"uk_UA\", \"ur\", \"ur_PK\", \"uz\", \"uz_UZ\", \"vi\", \"vi_VN\", \"yue\", \"yue_Hant\",\n+    \"yue_Hant_HK\", \"yue_HK\", \"zh\", \"zh_CN\", \"zh_Hans\", \"zh_Hans_CN\", \"zh_Hant\",\n+    \"zh_Hant_TW\", \"zh_TW\", \"zu\", \"zu_ZA\"\n+};\n+\n+static UBool U_CALLCONV cleanupKnownCanonicalized() {\n+    gKnownCanonicalizedInitOnce.reset();\n+    if (gKnownCanonicalized) { uhash_close(gKnownCanonicalized); }\n+    return TRUE;\n+}\n+\n+static void U_CALLCONV loadKnownCanonicalized(UErrorCode &status) {\n+    ucln_common_registerCleanup(UCLN_COMMON_LOCALE_KNOWN_CANONICALIZED,\n+                                cleanupKnownCanonicalized);\n+    LocalUHashtablePointer newKnownCanonicalizedMap(\n+        uhash_open(uhash_hashChars, uhash_compareChars, nullptr, &status));\n+    for (int32_t i = 0;\n+            U_SUCCESS(status) && i < UPRV_LENGTHOF(KNOWN_CANONICALIZED);\n+            i++) {\n+        uhash_puti(newKnownCanonicalizedMap.getAlias(),\n+                   (void*)KNOWN_CANONICALIZED[i],\n+                   1, &status);\n+    }\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    gKnownCanonicalized = newKnownCanonicalizedMap.orphan();\n+}\n+\n+class AliasData;\n+\n+\/**\n+ * A Builder class to build the alias data.\n+ *\/\n+class AliasDataBuilder {\n+public:\n+    AliasDataBuilder() {\n+    }\n+\n+    \/\/ Build the AliasData from resource.\n+    AliasData* build(UErrorCode &status);\n+\n+private:\n+    void readAlias(UResourceBundle* alias,\n+                   UniqueCharStrings* strings,\n+                   LocalMemory<const char*>& types,\n+                   LocalMemory<int32_t>& replacementIndexes,\n+                   int32_t &length,\n+                   void (*checkType)(const char* type),\n+                   void (*checkReplacement)(const UnicodeString& replacement),\n+                   UErrorCode &status);\n+\n+    \/\/ Read the languageAlias data from alias to\n+    \/\/ strings+types+replacementIndexes\n+    \/\/ The number of record will be stored into length.\n+    \/\/ Allocate length items for types, to store the type field.\n+    \/\/ Allocate length items for replacementIndexes,\n+    \/\/ to store the index in the strings for the replacement script.\n+    void readLanguageAlias(UResourceBundle* alias,\n+                           UniqueCharStrings* strings,\n+                           LocalMemory<const char*>& types,\n+                           LocalMemory<int32_t>& replacementIndexes,\n+                           int32_t &length,\n+                           UErrorCode &status);\n+\n+    \/\/ Read the scriptAlias data from alias to\n+    \/\/ strings+types+replacementIndexes\n+    \/\/ Allocate length items for types, to store the type field.\n+    \/\/ Allocate length items for replacementIndexes,\n+    \/\/ to store the index in the strings for the replacement script.\n+    void readScriptAlias(UResourceBundle* alias,\n+                         UniqueCharStrings* strings,\n+                         LocalMemory<const char*>& types,\n+                         LocalMemory<int32_t>& replacementIndexes,\n+                         int32_t &length, UErrorCode &status);\n+\n+    \/\/ Read the territoryAlias data from alias to\n+    \/\/ strings+types+replacementIndexes\n+    \/\/ Allocate length items for types, to store the type field.\n+    \/\/ Allocate length items for replacementIndexes,\n+    \/\/ to store the index in the strings for the replacement script.\n+    void readTerritoryAlias(UResourceBundle* alias,\n+                            UniqueCharStrings* strings,\n+                            LocalMemory<const char*>& types,\n+                            LocalMemory<int32_t>& replacementIndexes,\n+                            int32_t &length, UErrorCode &status);\n+\n+    \/\/ Read the variantAlias data from alias to\n+    \/\/ strings+types+replacementIndexes\n+    \/\/ Allocate length items for types, to store the type field.\n+    \/\/ Allocate length items for replacementIndexes,\n+    \/\/ to store the index in the strings for the replacement variant.\n+    void readVariantAlias(UResourceBundle* alias,\n+                          UniqueCharStrings* strings,\n+                          LocalMemory<const char*>& types,\n+                          LocalMemory<int32_t>& replacementIndexes,\n+                          int32_t &length, UErrorCode &status);\n+};\n+\n+\/**\n+ * A class to hold the Alias Data.\n+ *\/\n+class AliasData : public UMemory {\n+public:\n+    static const AliasData* singleton(UErrorCode& status) {\n+        if (U_FAILURE(status)) {\n+            \/\/ Do not get into loadData if the status already has error.\n+            return nullptr;\n+        }\n+        umtx_initOnce(AliasData::gInitOnce, &AliasData::loadData, status);\n+        return gSingleton;\n+    }\n+\n+    const CharStringMap& languageMap() const { return language; }\n+    const CharStringMap& scriptMap() const { return script; }\n+    const CharStringMap& territoryMap() const { return territory; }\n+    const CharStringMap& variantMap() const { return variant; }\n+\n+    static void U_CALLCONV loadData(UErrorCode &status);\n+    static UBool U_CALLCONV cleanup();\n+\n+    static UInitOnce gInitOnce;\n+\n+private:\n+    AliasData(CharStringMap languageMap,\n+              CharStringMap scriptMap,\n+              CharStringMap territoryMap,\n+              CharStringMap variantMap,\n+              CharString* strings)\n+        : language(std::move(languageMap)),\n+          script(std::move(scriptMap)),\n+          territory(std::move(territoryMap)),\n+          variant(std::move(variantMap)),\n+          strings(strings) {\n+    }\n+\n+    ~AliasData() {\n+        delete strings;\n+    }\n+\n+    static const AliasData* gSingleton;\n+\n+    CharStringMap language;\n+    CharStringMap script;\n+    CharStringMap territory;\n+    CharStringMap variant;\n+    CharString* strings;\n+\n+    friend class AliasDataBuilder;\n+};\n+\n+\n+const AliasData* AliasData::gSingleton = nullptr;\n+UInitOnce AliasData::gInitOnce = U_INITONCE_INITIALIZER;\n+\n+UBool U_CALLCONV\n+AliasData::cleanup()\n+{\n+    gInitOnce.reset();\n+    delete gSingleton;\n+    return TRUE;\n+}\n+\n+void\n+AliasDataBuilder::readAlias(\n+        UResourceBundle* alias,\n+        UniqueCharStrings* strings,\n+        LocalMemory<const char*>& types,\n+        LocalMemory<int32_t>& replacementIndexes,\n+        int32_t &length,\n+        void (*checkType)(const char* type),\n+        void (*checkReplacement)(const UnicodeString& replacement),\n+        UErrorCode &status) {\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    length = ures_getSize(alias);\n+    const char** rawTypes = types.allocateInsteadAndCopy(length);\n+    if (rawTypes == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    int32_t* rawIndexes = replacementIndexes.allocateInsteadAndCopy(length);\n+    if (rawIndexes == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    int i = 0;\n+    while (ures_hasNext(alias)) {\n+        LocalUResourceBundlePointer res(\n+            ures_getNextResource(alias, nullptr, &status));\n+        const char* aliasFrom = ures_getKey(res.getAlias());\n+        UnicodeString aliasTo =\n+            ures_getUnicodeStringByKey(res.getAlias(), \"replacement\", &status);\n+\n+        checkType(aliasFrom);\n+        checkReplacement(aliasTo);\n+\n+        rawTypes[i] = aliasFrom;\n+        rawIndexes[i] = strings->add(aliasTo, status);\n+        i++;\n+    }\n+}\n+\n+\/**\n+ * Read the languageAlias data from alias to strings+types+replacementIndexes.\n+ * Allocate length items for types, to store the type field. Allocate length\n+ * items for replacementIndexes, to store the index in the strings for the\n+ * replacement language.\n+ *\/\n+void\n+AliasDataBuilder::readLanguageAlias(\n+        UResourceBundle* alias,\n+        UniqueCharStrings* strings,\n+        LocalMemory<const char*>& types,\n+        LocalMemory<int32_t>& replacementIndexes,\n+        int32_t &length,\n+        UErrorCode &status)\n+{\n+    return readAlias(\n+        alias, strings, types, replacementIndexes, length,\n+#if U_DEBUG\n+        [](const char* type) {\n+            \/\/ Assert the aliasFrom only contains the following possibilties\n+            \/\/ language_REGION_variant\n+            \/\/ language_REGION\n+            \/\/ language_variant\n+            \/\/ language\n+            \/\/ und_variant\n+            Locale test(type);\n+            \/\/ Assert no script in aliasFrom\n+            U_ASSERT(test.getScript()[0] == '\\0');\n+            \/\/ Assert when language is und, no REGION in aliasFrom.\n+            U_ASSERT(test.getLanguage()[0] != '\\0' || test.getCountry()[0] == '\\0');\n+        },\n+#else\n+        [](const char*) {},\n+#endif\n+        [](const UnicodeString&) {}, status);\n+}\n+\n+\/**\n+ * Read the scriptAlias data from alias to strings+types+replacementIndexes.\n+ * Allocate length items for types, to store the type field. Allocate length\n+ * items for replacementIndexes, to store the index in the strings for the\n+ * replacement script.\n+ *\/\n+void\n+AliasDataBuilder::readScriptAlias(\n+        UResourceBundle* alias,\n+        UniqueCharStrings* strings,\n+        LocalMemory<const char*>& types,\n+        LocalMemory<int32_t>& replacementIndexes,\n+        int32_t &length,\n+        UErrorCode &status)\n+{\n+    return readAlias(\n+        alias, strings, types, replacementIndexes, length,\n+#if U_DEBUG\n+        [](const char* type) {\n+            U_ASSERT(uprv_strlen(type) == 4);\n+        },\n+        [](const UnicodeString& replacement) {\n+            U_ASSERT(replacement.length() == 4);\n+        },\n+#else\n+        [](const char*) {},\n+        [](const UnicodeString&) { },\n+#endif\n+        status);\n+}\n+\n+\/**\n+ * Read the territoryAlias data from alias to strings+types+replacementIndexes.\n+ * Allocate length items for types, to store the type field. Allocate length\n+ * items for replacementIndexes, to store the index in the strings for the\n+ * replacement regions.\n+ *\/\n+void\n+AliasDataBuilder::readTerritoryAlias(\n+        UResourceBundle* alias,\n+        UniqueCharStrings* strings,\n+        LocalMemory<const char*>& types,\n+        LocalMemory<int32_t>& replacementIndexes,\n+        int32_t &length,\n+        UErrorCode &status)\n+{\n+    return readAlias(\n+        alias, strings, types, replacementIndexes, length,\n+#if U_DEBUG\n+        [](const char* type) {\n+            U_ASSERT(uprv_strlen(type) == 2 || uprv_strlen(type) == 3);\n+        },\n+#else\n+        [](const char*) {},\n+#endif\n+        [](const UnicodeString&) { },\n+        status);\n+}\n+\n+\/**\n+ * Read the variantAlias data from alias to strings+types+replacementIndexes.\n+ * Allocate length items for types, to store the type field. Allocate length\n+ * items for replacementIndexes, to store the index in the strings for the\n+ * replacement variant.\n+ *\/\n+void\n+AliasDataBuilder::readVariantAlias(\n+        UResourceBundle* alias,\n+        UniqueCharStrings* strings,\n+        LocalMemory<const char*>& types,\n+        LocalMemory<int32_t>& replacementIndexes,\n+        int32_t &length,\n+        UErrorCode &status)\n+{\n+    return readAlias(\n+        alias, strings, types, replacementIndexes, length,\n+#if U_DEBUG\n+        [](const char* type) {\n+            U_ASSERT(uprv_strlen(type) >= 4 && uprv_strlen(type) <= 8);\n+            U_ASSERT(uprv_strlen(type) != 4 ||\n+                     (type[0] >= '0' && type[0] <= '9'));\n+        },\n+        [](const UnicodeString& replacement) {\n+            U_ASSERT(replacement.length() >= 4 && replacement.length() <= 8);\n+            U_ASSERT(replacement.length() != 4 ||\n+                     (replacement.charAt(0) >= u'0' &&\n+                      replacement.charAt(0) <= u'9'));\n+        },\n+#else\n+        [](const char*) {},\n+        [](const UnicodeString&) { },\n+#endif\n+        status);\n+}\n+\n+\/**\n+ * Initializes the alias data from the ICU resource bundles. The alias data\n+ * contains alias of language, country, script and variants.\n+ *\n+ * If the alias data has already loaded, then this method simply returns without\n+ * doing anything meaningful.\n+ *\/\n+void U_CALLCONV\n+AliasData::loadData(UErrorCode &status)\n+{\n+#ifdef LOCALE_CANONICALIZATION_DEBUG\n+    UDate start = uprv_getRawUTCtime();\n+#endif  \/\/ LOCALE_CANONICALIZATION_DEBUG\n+    ucln_common_registerCleanup(UCLN_COMMON_LOCALE_ALIAS, cleanup);\n+    AliasDataBuilder builder;\n+    gSingleton = builder.build(status);\n+#ifdef LOCALE_CANONICALIZATION_DEBUG\n+    UDate end = uprv_getRawUTCtime();\n+    printf(\"AliasData::loadData took total %f ms\\n\", end - start);\n+#endif  \/\/ LOCALE_CANONICALIZATION_DEBUG\n+}\n+\n+\/**\n+ * Build the alias data from resources.\n+ *\/\n+AliasData*\n+AliasDataBuilder::build(UErrorCode &status) {\n+    LocalUResourceBundlePointer metadata(\n+        ures_openDirect(nullptr, \"metadata\", &status));\n+    LocalUResourceBundlePointer metadataAlias(\n+        ures_getByKey(metadata.getAlias(), \"alias\", nullptr, &status));\n+    LocalUResourceBundlePointer languageAlias(\n+        ures_getByKey(metadataAlias.getAlias(), \"language\", nullptr, &status));\n+    LocalUResourceBundlePointer scriptAlias(\n+        ures_getByKey(metadataAlias.getAlias(), \"script\", nullptr, &status));\n+    LocalUResourceBundlePointer territoryAlias(\n+        ures_getByKey(metadataAlias.getAlias(), \"territory\", nullptr, &status));\n+    LocalUResourceBundlePointer variantAlias(\n+        ures_getByKey(metadataAlias.getAlias(), \"variant\", nullptr, &status));\n+\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+    int32_t languagesLength = 0, scriptLength = 0, territoryLength = 0,\n+            variantLength = 0;\n+\n+    \/\/ Read the languageAlias into languageTypes, languageReplacementIndexes\n+    \/\/ and strings\n+    UniqueCharStrings strings(status);\n+    LocalMemory<const char*> languageTypes;\n+    LocalMemory<int32_t> languageReplacementIndexes;\n+    readLanguageAlias(languageAlias.getAlias(),\n+                      &strings,\n+                      languageTypes,\n+                      languageReplacementIndexes,\n+                      languagesLength,\n+                      status);\n+\n+    \/\/ Read the scriptAlias into scriptTypes, scriptReplacementIndexes\n+    \/\/ and strings\n+    LocalMemory<const char*> scriptTypes;\n+    LocalMemory<int32_t> scriptReplacementIndexes;\n+    readScriptAlias(scriptAlias.getAlias(),\n+                    &strings,\n+                    scriptTypes,\n+                    scriptReplacementIndexes,\n+                    scriptLength,\n+                    status);\n+\n+    \/\/ Read the territoryAlias into territoryTypes, territoryReplacementIndexes\n+    \/\/ and strings\n+    LocalMemory<const char*> territoryTypes;\n+    LocalMemory<int32_t> territoryReplacementIndexes;\n+    readTerritoryAlias(territoryAlias.getAlias(),\n+                       &strings,\n+                       territoryTypes,\n+                       territoryReplacementIndexes,\n+                       territoryLength, status);\n+\n+    \/\/ Read the variantAlias into variantTypes, variantReplacementIndexes\n+    \/\/ and strings\n+    LocalMemory<const char*> variantTypes;\n+    LocalMemory<int32_t> variantReplacementIndexes;\n+    readVariantAlias(variantAlias.getAlias(),\n+                     &strings,\n+                     variantTypes,\n+                     variantReplacementIndexes,\n+                     variantLength, status);\n+\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+\n+    \/\/ We can only use strings after freeze it.\n+    strings.freeze();\n+\n+    \/\/ Build the languageMap from languageTypes & languageReplacementIndexes\n+    CharStringMap languageMap(490, status);\n+    for (int32_t i = 0; U_SUCCESS(status) && i < languagesLength; i++) {\n+        languageMap.put(languageTypes[i],\n+                        strings.get(languageReplacementIndexes[i]),\n+                        status);\n+    }\n+\n+    \/\/ Build the scriptMap from scriptTypes & scriptReplacementIndexes\n+    CharStringMap scriptMap(1, status);\n+    for (int32_t i = 0; U_SUCCESS(status) && i < scriptLength; i++) {\n+        scriptMap.put(scriptTypes[i],\n+                      strings.get(scriptReplacementIndexes[i]),\n+                      status);\n+    }\n+\n+    \/\/ Build the territoryMap from territoryTypes & territoryReplacementIndexes\n+    CharStringMap territoryMap(650, status);\n+    for (int32_t i = 0; U_SUCCESS(status) && i < territoryLength; i++) {\n+        territoryMap.put(territoryTypes[i],\n+                         strings.get(territoryReplacementIndexes[i]),\n+                         status);\n+    }\n+\n+    \/\/ Build the variantMap from variantTypes & variantReplacementIndexes.\n+    CharStringMap variantMap(2, status);\n+    for (int32_t i = 0; U_SUCCESS(status) && i < variantLength; i++) {\n+        variantMap.put(variantTypes[i],\n+                       strings.get(variantReplacementIndexes[i]),\n+                       status);\n+    }\n+\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+\n+    \/\/ copy hashtables\n+    auto *data = new AliasData(\n+        std::move(languageMap),\n+        std::move(scriptMap),\n+        std::move(territoryMap),\n+        std::move(variantMap),\n+        strings.orphanCharStrings());\n+\n+    if (data == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+    }\n+    return data;\n+}\n+\n+\/**\n+ * A class that find the replacement values of locale fields by using AliasData.\n+ *\/\n+class AliasReplacer {\n+public:\n+    AliasReplacer(UErrorCode status) :\n+            language(nullptr), script(nullptr), region(nullptr),\n+            extensions(nullptr), variants(status),\n+            data(nullptr) {\n+    }\n+    ~AliasReplacer() {\n+    }\n+\n+    \/\/ Check the fields inside locale, if need to replace fields,\n+    \/\/ place the the replaced locale ID in out and return true.\n+    \/\/ Otherwise return false for no replacement or error.\n+    bool replace(\n+        const Locale& locale, CharString& out, UErrorCode& status);\n+\n+private:\n+    const char* language;\n+    const char* script;\n+    const char* region;\n+    const char* extensions;\n+    UVector variants;\n+\n+    const AliasData* data;\n+\n+    inline bool notEmpty(const char* str) {\n+        return str && str[0] != NULL_CHAR;\n+    }\n+\n+    \/**\n+     * If replacement is neither null nor empty and input is either null or empty,\n+     * return replacement.\n+     * If replacement is neither null nor empty but input is not empty, return input.\n+     * If replacement is either null or empty and type is either null or empty,\n+     * return input.\n+     * Otherwise return null.\n+     *   replacement     input      type        return\n+     *    AAA             nullptr    *           AAA\n+     *    AAA             BBB        *           BBB\n+     *    nullptr || \"\"   CCC        nullptr     CCC\n+     *    nullptr || \"\"   *          DDD         nullptr\n+     *\/\n+    inline const char* deleteOrReplace(\n+            const char* input, const char* type, const char* replacement) {\n+        return notEmpty(replacement) ?\n+            ((input == nullptr) ?  replacement : input) :\n+            ((type == nullptr) ? input  : nullptr);\n+    }\n+\n+    inline bool same(const char* a, const char* b) {\n+        if (a == nullptr && b == nullptr) {\n+            return true;\n+        }\n+        if ((a == nullptr && b != nullptr) ||\n+            (a != nullptr && b == nullptr)) {\n+          return false;\n+        }\n+        return uprv_strcmp(a, b) == 0;\n+    }\n+\n+    \/\/ Gather fields and generate locale ID into out.\n+    CharString& outputToString(CharString& out, UErrorCode status);\n+\n+    \/\/ Generate the lookup key.\n+    CharString& generateKey(const char* language, const char* region,\n+                            const char* variant, CharString& out,\n+                            UErrorCode status);\n+\n+    void parseLanguageReplacement(const char* replacement,\n+                                  const char*& replaceLanguage,\n+                                  const char*& replaceScript,\n+                                  const char*& replaceRegion,\n+                                  const char*& replaceVariant,\n+                                  const char*& replaceExtensions,\n+                                  UVector& toBeFreed,\n+                                  UErrorCode& status);\n+\n+    \/\/ Replace by using languageAlias.\n+    bool replaceLanguage(bool checkLanguage, bool checkRegion,\n+                         bool checkVariants, UVector& toBeFreed,\n+                         UErrorCode& status);\n+\n+    \/\/ Replace by using territoryAlias.\n+    bool replaceTerritory(UVector& toBeFreed, UErrorCode& status);\n+\n+    \/\/ Replace by using scriptAlias.\n+    bool replaceScript(UErrorCode& status);\n+\n+    \/\/ Replace by using variantAlias.\n+    bool replaceVariant(UErrorCode& status);\n+};\n+\n+CharString&\n+AliasReplacer::generateKey(\n+        const char* language, const char* region, const char* variant,\n+        CharString& out, UErrorCode status)\n+{\n+    out.append(language, status);\n+    if (notEmpty(region)) {\n+        out.append(SEP_CHAR, status)\n+            .append(region, status);\n+    }\n+    if (notEmpty(variant)) {\n+       out.append(SEP_CHAR, status)\n+           .append(variant, status);\n+    }\n+    return out;\n+}\n+\n+void\n+AliasReplacer::parseLanguageReplacement(\n+    const char* replacement,\n+    const char*& replacedLanguage,\n+    const char*& replacedScript,\n+    const char*& replacedRegion,\n+    const char*& replacedVariant,\n+    const char*& replacedExtensions,\n+    UVector& toBeFreed,\n+    UErrorCode& status)\n+{\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    replacedScript = replacedRegion = replacedVariant\n+        = replacedExtensions = nullptr;\n+    if (uprv_strchr(replacement, '_') == nullptr) {\n+        replacedLanguage = replacement;\n+        \/\/ reach the end, just return it.\n+        return;\n+    }\n+    \/\/ We have multiple field so we have to allocate and parse\n+    CharString* str = new CharString(\n+        replacement, (int32_t)uprv_strlen(replacement), status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    if (str == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    toBeFreed.addElement(str, status);\n+    char* data = str->data();\n+    replacedLanguage = (const char*) data;\n+    char* endOfField = uprv_strchr(data, '_');\n+    *endOfField = '\\0'; \/\/ null terminiate it.\n+    endOfField++;\n+    const char* start = endOfField;\n+    endOfField = (char*) uprv_strchr(start, '_');\n+    size_t len = 0;\n+    if (endOfField == nullptr) {\n+        len = uprv_strlen(start);\n+    } else {\n+        len = endOfField - start;\n+        *endOfField = '\\0'; \/\/ null terminiate it.\n+    }\n+    if (len == 4 && uprv_isASCIILetter(*start)) {\n+        \/\/ Got a script\n+        replacedScript = start;\n+        if (endOfField == nullptr) {\n+            return;\n+        }\n+        start = endOfField++;\n+        endOfField = (char*)uprv_strchr(start, '_');\n+        if (endOfField == nullptr) {\n+            len = uprv_strlen(start);\n+        } else {\n+            len = endOfField - start;\n+            *endOfField = '\\0'; \/\/ null terminiate it.\n+        }\n+    }\n+    if (len >= 2 && len <= 3) {\n+        \/\/ Got a region\n+        replacedRegion = start;\n+        if (endOfField == nullptr) {\n+            return;\n+        }\n+        start = endOfField++;\n+        endOfField = (char*)uprv_strchr(start, '_');\n+        if (endOfField == nullptr) {\n+            len = uprv_strlen(start);\n+        } else {\n+            len = endOfField - start;\n+            *endOfField = '\\0'; \/\/ null terminiate it.\n+        }\n+    }\n+    if (len >= 4) {\n+        \/\/ Got a variant\n+        replacedVariant = start;\n+        if (endOfField == nullptr) {\n+            return;\n+        }\n+        start = endOfField++;\n+    }\n+    replacedExtensions = start;\n+}\n+\n+bool\n+AliasReplacer::replaceLanguage(\n+        bool checkLanguage, bool checkRegion,\n+        bool checkVariants, UVector& toBeFreed, UErrorCode& status)\n+{\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    if (    (checkRegion && region == nullptr) ||\n+            (checkVariants && variants.size() == 0)) {\n+        \/\/ Nothing to search.\n+        return false;\n+    }\n+    int32_t variant_size = checkVariants ? variants.size() : 1;\n+    \/\/ Since we may have more than one variant, we need to loop through them.\n+    const char* searchLanguage = checkLanguage ? language : \"und\";\n+    const char* searchRegion = checkRegion ? region : nullptr;\n+    const char* searchVariant = nullptr;\n+    for (int32_t variant_index = 0;\n+            variant_index < variant_size;\n+            variant_index++) {\n+        if (checkVariants) {\n+            U_ASSERT(variant_index < variant_size);\n+            searchVariant = (const char*)(variants.elementAt(variant_index));\n+        }\n+\n+        if (searchVariant != nullptr && uprv_strlen(searchVariant) < 4) {\n+            \/\/ Do not consider  ill-formed variant subtag.\n+            searchVariant = nullptr;\n+        }\n+        CharString typeKey;\n+        generateKey(searchLanguage, searchRegion, searchVariant, typeKey,\n+                    status);\n+        if (U_FAILURE(status)) {\n+            return false;\n+        }\n+        const char *replacement = data->languageMap().get(typeKey.data());\n+        if (replacement == nullptr) {\n+            \/\/ Found no replacement data.\n+            continue;\n+        }\n+\n+        const char* replacedLanguage = nullptr;\n+        const char* replacedScript = nullptr;\n+        const char* replacedRegion = nullptr;\n+        const char* replacedVariant = nullptr;\n+        const char* replacedExtensions = nullptr;\n+        parseLanguageReplacement(replacement,\n+                                 replacedLanguage,\n+                                 replacedScript,\n+                                 replacedRegion,\n+                                 replacedVariant,\n+                                 replacedExtensions,\n+                                 toBeFreed,\n+                                 status);\n+        replacedLanguage =\n+            (replacedLanguage != nullptr && uprv_strcmp(replacedLanguage, \"und\") == 0) ?\n+            language : replacedLanguage;\n+        replacedScript = deleteOrReplace(script, nullptr, replacedScript);\n+        replacedRegion = deleteOrReplace(region, searchRegion, replacedRegion);\n+        replacedVariant = deleteOrReplace(\n+            searchVariant, searchVariant, replacedVariant);\n+\n+        if (    same(language, replacedLanguage) &&\n+                same(script, replacedScript) &&\n+                same(region, replacedRegion) &&\n+                same(searchVariant, replacedVariant) &&\n+                replacedExtensions == nullptr) {\n+            \/\/ Replacement produce no changes.\n+            continue;\n+        }\n+\n+        language = replacedLanguage;\n+        region = replacedRegion;\n+        script = replacedScript;\n+        if (searchVariant != nullptr) {\n+            if (notEmpty(replacedVariant)) {\n+                variants.setElementAt((void*)replacedVariant, variant_index);\n+            } else {\n+                variants.removeElementAt(variant_index);\n+            }\n+        }\n+        if (replacedExtensions != nullptr) {\n+            \/\/ TODO(ICU-21292)\n+            \/\/ DO NOTHING\n+            \/\/ UTS35 does not specifiy what should we do if we have extensions in the\n+            \/\/ replacement. Currently we know only the following 4 \"BCP47 LegacyRules\" have\n+            \/\/ extensions in them languageAlias:\n+            \/\/  i_default => en_x_i_default\n+            \/\/  i_enochian => und_x_i_enochian\n+            \/\/  i_mingo => see_x_i_mingo\n+            \/\/  zh_min => nan_x_zh_min\n+            \/\/ But all of them are already changed by code inside ultag_parse() before\n+            \/\/ hitting this code.\n+        }\n+\n+        \/\/ Something changed by language alias data.\n+        return true;\n+    }\n+    \/\/ Nothing changed by language alias data.\n+    return false;\n+}\n+\n+bool\n+AliasReplacer::replaceTerritory(UVector& toBeFreed, UErrorCode& status)\n+{\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    if (region == nullptr) {\n+        \/\/ No region to search.\n+        return false;\n+    }\n+    const char *replacement = data->territoryMap().get(region);\n+    if (replacement == nullptr) {\n+        \/\/ Found no replacement data for this region.\n+        return false;\n+    }\n+    const char* replacedRegion = replacement;\n+    const char* firstSpace = uprv_strchr(replacement, ' ');\n+    if (firstSpace != nullptr) {\n+        \/\/ If there are are more than one region in the replacement.\n+        \/\/ We need to check which one match based on the language.\n+        \/\/ Cannot use nullptr for language because that will construct\n+        \/\/ the default locale, in that case, use \"und\" to get the correct\n+        \/\/ locale.\n+        Locale l = LocaleBuilder()\n+            .setLanguage(language == nullptr ? \"und\" : language)\n+            .setScript(script)\n+            .build(status);\n+        l.addLikelySubtags(status);\n+        const char* likelyRegion = l.getCountry();\n+        LocalPointer<CharString> item;\n+        if (likelyRegion != nullptr && uprv_strlen(likelyRegion) > 0) {\n+            size_t len = uprv_strlen(likelyRegion);\n+            const char* foundInReplacement = uprv_strstr(replacement,\n+                                                         likelyRegion);\n+            if (foundInReplacement != nullptr) {\n+                \/\/ Assuming the case there are no three letter region code in\n+                \/\/ the replacement of territoryAlias\n+                U_ASSERT(foundInReplacement == replacement ||\n+                         *(foundInReplacement-1) == ' ');\n+                U_ASSERT(foundInReplacement[len] == ' ' ||\n+                         foundInReplacement[len] == '\\0');\n+                item.adoptInsteadAndCheckErrorCode(\n+                    new CharString(foundInReplacement, (int32_t)len, status), status);\n+            }\n+        }\n+        if (item.isNull() && U_SUCCESS(status)) {\n+            item.adoptInsteadAndCheckErrorCode(\n+                new CharString(replacement,\n+                               (int32_t)(firstSpace - replacement), status), status);\n+        }\n+        if (U_FAILURE(status)) { return false; }\n+        if (item.isNull()) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return false;\n+        }\n+        replacedRegion = item->data();\n+        toBeFreed.addElement(item.orphan(), status);\n+    }\n+    U_ASSERT(!same(region, replacedRegion));\n+    region = replacedRegion;\n+    \/\/ The region is changed by data in territory alias.\n+    return true;\n+}\n+\n+bool\n+AliasReplacer::replaceScript(UErrorCode& status)\n+{\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    if (script == nullptr) {\n+        \/\/ No script to search.\n+        return false;\n+    }\n+    const char *replacement = data->scriptMap().get(script);\n+    if (replacement == nullptr) {\n+        \/\/ Found no replacement data for this script.\n+        return false;\n+    }\n+    U_ASSERT(!same(script, replacement));\n+    script = replacement;\n+    \/\/ The script is changed by data in script alias.\n+    return true;\n+}\n+\n+bool\n+AliasReplacer::replaceVariant(UErrorCode& status)\n+{\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    \/\/ Since we may have more than one variant, we need to loop through them.\n+    for (int32_t i = 0; i < variants.size(); i++) {\n+        const char *variant = (const char*)(variants.elementAt(i));\n+        const char *replacement = data->variantMap().get(variant);\n+        if (replacement == nullptr) {\n+            \/\/ Found no replacement data for this variant.\n+            continue;\n+        }\n+        U_ASSERT((uprv_strlen(replacement) >= 5  &&\n+                  uprv_strlen(replacement) <= 8) ||\n+                 (uprv_strlen(replacement) == 4 &&\n+                  replacement[0] >= '0' &&\n+                  replacement[0] <= '9'));\n+        if (!same(variant, replacement)) {\n+            variants.setElementAt((void*)replacement, i);\n+            \/\/ Special hack to handle hepburn-heploc => alalc97\n+            if (uprv_strcmp(variant, \"heploc\") == 0) {\n+                for (int32_t j = 0; j < variants.size(); j++) {\n+                     if (uprv_strcmp((const char*)(variants.elementAt(j)),\n+                                     \"hepburn\") == 0) {\n+                         variants.removeElementAt(j);\n+                     }\n+                }\n+            }\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+CharString&\n+AliasReplacer::outputToString(\n+    CharString& out, UErrorCode status)\n+{\n+    out.append(language, status);\n+    if (notEmpty(script)) {\n+        out.append(SEP_CHAR, status)\n+            .append(script, status);\n+    }\n+    if (notEmpty(region)) {\n+        out.append(SEP_CHAR, status)\n+            .append(region, status);\n+    }\n+    if (variants.size() > 0) {\n+        if (!notEmpty(script) && !notEmpty(region)) {\n+          out.append(SEP_CHAR, status);\n+        }\n+        variants.sort([](UElement e1, UElement e2) -> int8_t {\n+            return uprv_strcmp(\n+                (const char*)e1.pointer, (const char*)e2.pointer);\n+        }, status);\n+        int32_t variantsStart = out.length();\n+        for (int32_t i = 0; i < variants.size(); i++) {\n+             out.append(SEP_CHAR, status)\n+                 .append((const char*)(variants.elementAt(i)),\n+                         status);\n+        }\n+        T_CString_toUpperCase(out.data() + variantsStart);\n+    }\n+    if (notEmpty(extensions)) {\n+        CharString tmp(\"und_\", status);\n+        tmp.append(extensions, status);\n+        Locale tmpLocale(tmp.data());\n+        \/\/ only support x extension inside CLDR for now.\n+        U_ASSERT(extensions[0] == 'x');\n+        out.append(tmpLocale.getName() + 1, status);\n+    }\n+    return out;\n+}\n+\n+bool\n+AliasReplacer::replace(const Locale& locale, CharString& out, UErrorCode& status)\n+{\n+    data = AliasData::singleton(status);\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    U_ASSERT(data != nullptr);\n+    out.clear();\n+    language = locale.getLanguage();\n+    if (!notEmpty(language)) {\n+        language = nullptr;\n+    }\n+    script = locale.getScript();\n+    if (!notEmpty(script)) {\n+        script = nullptr;\n+    }\n+    region = locale.getCountry();\n+    if (!notEmpty(region)) {\n+        region = nullptr;\n+    }\n+    const char* variantsStr = locale.getVariant();\n+    const char* extensionsStr = locale_getKeywordsStart(locale.getName());\n+    CharString variantsBuff(variantsStr, -1, status);\n+    if (!variantsBuff.isEmpty()) {\n+        if (U_FAILURE(status)) { return false; }\n+        char* start = variantsBuff.data();\n+        T_CString_toLowerCase(start);\n+        char* end;\n+        while ((end = uprv_strchr(start, SEP_CHAR)) != nullptr &&\n+               U_SUCCESS(status)) {\n+            *end = NULL_CHAR;  \/\/ null terminate inside variantsBuff\n+            variants.addElement(start, status);\n+            start = end + 1;\n+        }\n+        variants.addElement(start, status);\n+    }\n+    if (U_FAILURE(status)) { return false; }\n+\n+    \/\/ Sort the variants\n+    variants.sort([](UElement e1, UElement e2) -> int8_t {\n+        return uprv_strcmp(\n+            (const char*)e1.pointer, (const char*)e2.pointer);\n+    }, status);\n+\n+    \/\/ A changed count to assert when loop too many times.\n+    int changed = 0;\n+    \/\/ A UVector to to hold CharString allocated by the replace* method\n+    \/\/ and freed when out of scope from his function.\n+    UVector stringsToBeFreed([](void *obj){ delete ((CharString*) obj); },\n+                             nullptr, 10, status);\n+    while (U_SUCCESS(status)) {\n+        \/\/ Something wrong with the data cause looping here more than 10 times\n+        \/\/ already.\n+        U_ASSERT(changed < 5);\n+        \/\/ From observation of key in data\/misc\/metadata.txt\n+        \/\/ we know currently we only need to search in the following combination\n+        \/\/ of fields for type in languageAlias:\n+        \/\/ * lang_region_variant\n+        \/\/ * lang_region\n+        \/\/ * lang_variant\n+        \/\/ * lang\n+        \/\/ * und_variant\n+        \/\/ This assumption is ensured by the U_ASSERT in readLanguageAlias\n+        \/\/\n+        \/\/                      lang  REGION variant\n+        if (    replaceLanguage(true, true,  true,  stringsToBeFreed, status) ||\n+                replaceLanguage(true, true,  false, stringsToBeFreed, status) ||\n+                replaceLanguage(true, false, true,  stringsToBeFreed, status) ||\n+                replaceLanguage(true, false, false, stringsToBeFreed, status) ||\n+                replaceLanguage(false,false, true,  stringsToBeFreed, status) ||\n+                replaceTerritory(stringsToBeFreed, status) ||\n+                replaceScript(status) ||\n+                replaceVariant(status)) {\n+            \/\/ Some values in data is changed, try to match from the beginning\n+            \/\/ again.\n+            changed++;\n+            continue;\n+        }\n+        \/\/ Nothing changed. Break out.\n+        break;\n+    }  \/\/ while(1)\n+\n+    if (U_FAILURE(status)) { return false; }\n+    \/\/ Nothing changed and we know the order of the vaiants are not change\n+    \/\/ because we have no variant or only one.\n+    if (changed == 0 && variants.size() <= 1) {\n+        return false;\n+    }\n+    outputToString(out, status);\n+    if (extensionsStr != nullptr) {\n+        out.append(extensionsStr, status);\n+    }\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    \/\/ If the tag is not changed, return.\n+    if (uprv_strcmp(out.data(), locale.getName()) == 0) {\n+        U_ASSERT(changed == 0);\n+        U_ASSERT(variants.size() > 1);\n+        out.clear();\n+        return false;\n+    }\n+    return true;\n+}\n+\n+\/\/ Return true if the locale is changed during canonicalization.\n+\/\/ The replaced value then will be put into out.\n+bool\n+canonicalizeLocale(const Locale& locale, CharString& out, UErrorCode& status)\n+{\n+    AliasReplacer replacer(status);\n+    return replacer.replace(locale, out, status);\n+}\n+\n+\/\/ Function to optimize for known cases without so we can skip the loading\n+\/\/ of resources in the startup time until we really need it.\n+bool\n+isKnownCanonicalizedLocale(const char* locale, UErrorCode& status)\n+{\n+    if (    uprv_strcmp(locale, \"c\") == 0 ||\n+            uprv_strcmp(locale, \"en\") == 0 ||\n+            uprv_strcmp(locale, \"en_US\") == 0) {\n+        return true;\n+    }\n+\n+    \/\/ common well-known Canonicalized.\n+    umtx_initOnce(gKnownCanonicalizedInitOnce,\n+                  &loadKnownCanonicalized, status);\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n+    U_ASSERT(gKnownCanonicalized != nullptr);\n+    return uhash_geti(gKnownCanonicalized, locale) != 0;\n+}\n+\n+}  \/\/ namespace\n+\n+\/\/ Function for testing.\n+U_CAPI const char* const*\n+ulocimp_getKnownCanonicalizedLocaleForTest(int32_t* length)\n+{\n+    *length = UPRV_LENGTHOF(KNOWN_CANONICALIZED);\n+    return KNOWN_CANONICALIZED;\n+}\n+\n+\/\/ Function for testing.\n+U_CAPI bool\n+ulocimp_isCanonicalizedLocaleForTest(const char* localeName)\n+{\n+    Locale l(localeName);\n+    UErrorCode status = U_ZERO_ERROR;\n+    CharString temp;\n+    return !canonicalizeLocale(l, temp, status) && U_SUCCESS(status);\n+}\n@@ -609,3 +1728,3 @@\n-        if (fieldLen[1] == 4 && ISASCIIALPHA(field[1][0]) &&\n-                ISASCIIALPHA(field[1][1]) && ISASCIIALPHA(field[1][2]) &&\n-                ISASCIIALPHA(field[1][3])) {\n+        if (fieldLen[1] == 4 && uprv_isASCIILetter(field[1][0]) &&\n+                uprv_isASCIILetter(field[1][1]) && uprv_isASCIILetter(field[1][2]) &&\n+                uprv_isASCIILetter(field[1][3])) {\n@@ -638,0 +1757,15 @@\n+        if (canonicalize) {\n+            if (!isKnownCanonicalizedLocale(fullName, err)) {\n+                CharString replaced;\n+                \/\/ Not sure it is already canonicalized\n+                if (canonicalizeLocale(*this, replaced, err)) {\n+                    U_ASSERT(U_SUCCESS(err));\n+                    \/\/ If need replacement, call init again.\n+                    init(replaced.data(), false);\n+                }\n+                if (U_FAILURE(err)) {\n+                    break;\n+                }\n+            }\n+        }   \/\/ if (canonicalize) {\n+\n@@ -714,1 +1848,1 @@\n-        Mutex lock(gDefaultLocaleMutex());\n+        Mutex lock(&gDefaultLocaleMutex);\n@@ -784,0 +1918,19 @@\n+void\n+Locale::canonicalize(UErrorCode& status) {\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    if (isBogus()) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return;\n+    }\n+    CharString uncanonicalized(fullName, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    init(uncanonicalized.data(), \/*canonicalize=*\/TRUE);\n+    if (isBogus()) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+    }\n+}\n+\n@@ -793,1 +1946,1 @@\n-    \/\/ If a BCP-47 language tag is passed as the language parameter to the\n+    \/\/ If a BCP 47 language tag is passed as the language parameter to the\n@@ -796,4 +1949,5 @@\n-    \/\/ the string actually is BCP-47. This works well for things like strings\n-    \/\/ using BCP-47 extensions, but it does not at all work for things like\n-    \/\/ BCP-47 grandfathered tags (eg. \"en-GB-oed\") which are possible to also\n-    \/\/ interpret as ICU locale IDs and because of that won't trigger the BCP-47\n+    \/\/ the string actually is BCP 47. This works well for things like strings\n+    \/\/ using BCP 47 extensions, but it does not at all work for things like\n+    \/\/ legacy language tags (marked as “Type: grandfathered” in BCP 47,\n+    \/\/ e.g., \"en-GB-oed\") which are possible to also\n+    \/\/ interpret as ICU locale IDs and because of that won't trigger the BCP 47\n@@ -1183,2 +2337,0 @@\n-    char keywords[256];\n-    int32_t keywordCapacity = sizeof keywords;\n@@ -1195,3 +2347,5 @@\n-            int32_t keyLen = locale_getKeywords(variantStart+1, '@', keywords, keywordCapacity, NULL, 0, NULL, FALSE, &status);\n-            if(U_SUCCESS(status) && keyLen) {\n-                result = new KeywordEnumeration(keywords, keyLen, 0, status);\n+            CharString keywords;\n+            CharStringByteSink sink(&keywords);\n+            ulocimp_getKeywords(variantStart+1, '@', sink, FALSE, &status);\n+            if (U_SUCCESS(status) && !keywords.isEmpty()) {\n+                result = new KeywordEnumeration(keywords.data(), keywords.length(), 0, status);\n@@ -1212,2 +2366,0 @@\n-    char keywords[256];\n-    int32_t keywordCapacity = sizeof keywords;\n@@ -1224,3 +2376,5 @@\n-            int32_t keyLen = locale_getKeywords(variantStart+1, '@', keywords, keywordCapacity, NULL, 0, NULL, FALSE, &status);\n-            if(U_SUCCESS(status) && keyLen) {\n-                result = new UnicodeKeywordEnumeration(keywords, keyLen, 0, status);\n+            CharString keywords;\n+            CharStringByteSink sink(&keywords);\n+            ulocimp_getKeywords(variantStart+1, '@', sink, FALSE, &status);\n+            if (U_SUCCESS(status) && !keywords.isEmpty()) {\n+                result = new UnicodeKeywordEnumeration(keywords.data(), keywords.length(), 0, status);\n@@ -1261,42 +2415,1 @@\n-    LocalMemory<char> scratch;\n-    int32_t scratch_capacity = 16;  \/\/ Arbitrarily chosen default size.\n-\n-    char* buffer;\n-    int32_t result_capacity, reslen;\n-\n-    for (;;) {\n-        if (scratch.allocateInsteadAndReset(scratch_capacity) == nullptr) {\n-            status = U_MEMORY_ALLOCATION_ERROR;\n-            return;\n-        }\n-\n-        buffer = sink.GetAppendBuffer(\n-                \/*min_capacity=*\/scratch_capacity,\n-                \/*desired_capacity_hint=*\/scratch_capacity,\n-                scratch.getAlias(),\n-                scratch_capacity,\n-                &result_capacity);\n-\n-        reslen = uloc_getKeywordValue(\n-                fullName,\n-                keywordName_nul.data(),\n-                buffer,\n-                result_capacity,\n-                &status);\n-\n-        if (status != U_BUFFER_OVERFLOW_ERROR) {\n-            break;\n-        }\n-\n-        scratch_capacity = reslen;\n-        status = U_ZERO_ERROR;\n-    }\n-\n-    if (U_FAILURE(status)) {\n-        return;\n-    }\n-\n-    sink.Append(buffer, reslen);\n-    if (status == U_STRING_NOT_TERMINATED_WARNING) {\n-        status = U_ZERO_ERROR;  \/\/ Terminators not used.\n-    }\n+    ulocimp_getKeywordValue(fullName, keywordName_nul.data(), sink, &status);\n@@ -1346,1 +2459,30 @@\n-    uloc_setKeywordValue(keywordName, keywordValue, fullName, ULOC_FULLNAME_CAPACITY, &status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    if (status == U_STRING_NOT_TERMINATED_WARNING) {\n+        status = U_ZERO_ERROR;\n+    }\n+    int32_t bufferLength = uprv_max((int32_t)(uprv_strlen(fullName) + 1), ULOC_FULLNAME_CAPACITY);\n+    int32_t newLength = uloc_setKeywordValue(keywordName, keywordValue, fullName,\n+                                             bufferLength, &status) + 1;\n+    U_ASSERT(status != U_STRING_NOT_TERMINATED_WARNING);\n+    \/* Handle the case the current buffer is not enough to hold the new id *\/\n+    if (status == U_BUFFER_OVERFLOW_ERROR) {\n+        U_ASSERT(newLength > bufferLength);\n+        char* newFullName = (char *)uprv_malloc(newLength);\n+        if (newFullName == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+        uprv_strcpy(newFullName, fullName);\n+        if (fullName != fullNameBuffer) {\n+            \/\/ if full Name is already on the heap, need to free it.\n+            uprv_free(fullName);\n+        }\n+        fullName = newFullName;\n+        status = U_ZERO_ERROR;\n+        uloc_setKeywordValue(keywordName, keywordValue, fullName, newLength, &status);\n+        U_ASSERT(status != U_STRING_NOT_TERMINATED_WARNING);\n+    } else {\n+        U_ASSERT(newLength <= bufferLength);\n+    }\n@@ -1402,0 +2544,2 @@\n+Locale::Iterator::~Iterator() = default;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locid.cpp","additions":1238,"deletions":94,"binary":false,"changes":1332,"status":"modified"},{"patch":"@@ -467,2 +467,1 @@\n-    subtagLength = ulocimp_getLanguage(position, lang, *langLength, &position);\n-    u_terminateChars(lang, *langLength, subtagLength, err);\n+    subtagLength = ulocimp_getLanguage(position, &position, *err).extract(lang, *langLength, *err);\n@@ -489,2 +488,1 @@\n-    subtagLength = ulocimp_getScript(position, script, *scriptLength, &position);\n-    u_terminateChars(script, *scriptLength, subtagLength, err);\n+    subtagLength = ulocimp_getScript(position, &position, *err).extract(script, *scriptLength, *err);\n@@ -514,2 +512,1 @@\n-    subtagLength = ulocimp_getCountry(position, region, *regionLength, &position);\n-    u_terminateChars(region, *regionLength, subtagLength, err);\n+    subtagLength = ulocimp_getCountry(position, &position, *err).extract(region, *regionLength, *err);\n@@ -810,12 +807,7 @@\n-#define CHECK_TRAILING_VARIANT_SIZE(trailing, trailingLength) \\\n-    {   int32_t count = 0; \\\n-        int32_t i; \\\n-        for (i = 0; i < trailingLength; i++) { \\\n-            if (trailing[i] == '-' || trailing[i] == '_') { \\\n-                count = 0; \\\n-                if (count > 8) { \\\n-                    goto error; \\\n-                } \\\n-            } else if (trailing[i] == '@') { \\\n-                break; \\\n-            } else if (count > 8) { \\\n+#define CHECK_TRAILING_VARIANT_SIZE(trailing, trailingLength) UPRV_BLOCK_MACRO_BEGIN { \\\n+    int32_t count = 0; \\\n+    int32_t i; \\\n+    for (i = 0; i < trailingLength; i++) { \\\n+        if (trailing[i] == '-' || trailing[i] == '_') { \\\n+            count = 0; \\\n+            if (count > 8) { \\\n@@ -823,2 +815,0 @@\n-            } else { \\\n-                count++; \\\n@@ -826,0 +816,6 @@\n+        } else if (trailing[i] == '@') { \\\n+            break; \\\n+        } else if (count > 8) { \\\n+            goto error; \\\n+        } else { \\\n+            count++; \\\n@@ -827,1 +823,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -829,1 +826,1 @@\n-static void\n+static UBool\n@@ -900,1 +897,1 @@\n-    return;\n+    return success;\n@@ -907,0 +904,1 @@\n+    return FALSE;\n@@ -909,0 +907,6 @@\n+\/\/ Add likely subtags to the sink\n+\/\/ return true if the value in the sink is produced by a match during the lookup\n+\/\/ return false if the value in the sink is the same as input because there are\n+\/\/ no match after the lookup.\n+static UBool _ulocimp_addLikelySubtags(const char*, icu::ByteSink&, UErrorCode*);\n+\n@@ -924,0 +928,1 @@\n+    UBool successGetMax = FALSE;\n@@ -964,1 +969,1 @@\n-            icu::CharStringByteSink sink(&base);\n+            icu::CharStringByteSink baseSink(&base);\n@@ -974,1 +979,1 @@\n-                sink,\n+                baseSink,\n@@ -983,2 +988,2 @@\n-            icu::CharStringByteSink sink(&maximizedTagBuffer);\n-            ulocimp_addLikelySubtags(base.data(), sink, err);\n+            icu::CharStringByteSink maxSink(&maximizedTagBuffer);\n+            successGetMax = _ulocimp_addLikelySubtags(base.data(), maxSink, err);\n@@ -992,0 +997,27 @@\n+    if (!successGetMax) {\n+        \/**\n+         * If we got here, return the locale ID parameter unchanged.\n+         **\/\n+        const int32_t localeIDLength = (int32_t)uprv_strlen(localeID);\n+        sink.Append(localeID, localeIDLength);\n+        return;\n+    }\n+\n+    \/\/ In the following, the lang, script, region are referring to those in\n+    \/\/ the maximizedTagBuffer, not the one in the localeID.\n+    langLength = sizeof(lang);\n+    scriptLength = sizeof(script);\n+    regionLength = sizeof(region);\n+    parseTagString(\n+        maximizedTagBuffer.data(),\n+        lang,\n+        &langLength,\n+        script,\n+        &scriptLength,\n+        region,\n+        &regionLength,\n+        err);\n+    if(U_FAILURE(*err)) {\n+        goto error;\n+    }\n+\n@@ -998,1 +1030,1 @@\n-            icu::CharStringByteSink sink(&tagBuffer);\n+            icu::CharStringByteSink tagSink(&tagBuffer);\n@@ -1008,1 +1040,1 @@\n-                sink,\n+                tagSink,\n@@ -1015,1 +1047,2 @@\n-        else if (!tagBuffer.isEmpty() && uprv_strnicmp(\n+        else if (!tagBuffer.isEmpty() &&\n+                 uprv_strnicmp(\n@@ -1042,1 +1075,1 @@\n-            icu::CharStringByteSink sink(&tagBuffer);\n+            icu::CharStringByteSink tagSink(&tagBuffer);\n@@ -1052,1 +1085,1 @@\n-                sink,\n+                tagSink,\n@@ -1059,1 +1092,2 @@\n-        else if (uprv_strnicmp(\n+        else if (!tagBuffer.isEmpty() &&\n+                 uprv_strnicmp(\n@@ -1084,1 +1118,1 @@\n-    if (scriptLength > 0 && regionLength > 0) {\n+    if (scriptLength > 0) {\n@@ -1087,1 +1121,1 @@\n-            icu::CharStringByteSink sink(&tagBuffer);\n+            icu::CharStringByteSink tagSink(&tagBuffer);\n@@ -1097,1 +1131,1 @@\n-                sink,\n+                tagSink,\n@@ -1104,1 +1138,2 @@\n-        else if (uprv_strnicmp(\n+        else if (!tagBuffer.isEmpty() &&\n+                 uprv_strnicmp(\n@@ -1126,1 +1161,1 @@\n-         * If we got here, return the locale ID parameter.\n+         * If we got here, return the max + trail.\n@@ -1128,2 +1163,11 @@\n-        const int32_t localeIDLength = (int32_t)uprv_strlen(localeID);\n-        sink.Append(localeID, localeIDLength);\n+        createTagString(\n+                    lang,\n+                    langLength,\n+                    script,\n+                    scriptLength,\n+                    region,\n+                    regionLength,\n+                    trailing,\n+                    trailingLength,\n+                    sink,\n+                    err);\n@@ -1196,4 +1240,4 @@\n-U_CAPI void U_EXPORT2\n-ulocimp_addLikelySubtags(const char* localeID,\n-                         icu::ByteSink& sink,\n-                         UErrorCode* status) {\n+static UBool\n+_ulocimp_addLikelySubtags(const char* localeID,\n+                          icu::ByteSink& sink,\n+                          UErrorCode* status) {\n@@ -1203,1 +1247,1 @@\n-        _uloc_addLikelySubtags(localeBuffer, sink, status);\n+        return _uloc_addLikelySubtags(localeBuffer, sink, status);\n@@ -1205,0 +1249,8 @@\n+    return FALSE;\n+}\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_addLikelySubtags(const char* localeID,\n+                         icu::ByteSink& sink,\n+                         UErrorCode* status) {\n+    _ulocimp_addLikelySubtags(localeID, sink, status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/loclikely.cpp","additions":97,"deletions":45,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -0,0 +1,682 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ loclikelysubtags.cpp\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#include <utility>\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/bytestrie.h\"\n+#include \"unicode\/localpointer.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"unicode\/ures.h\"\n+#include \"charstr.h\"\n+#include \"cstring.h\"\n+#include \"loclikelysubtags.h\"\n+#include \"lsr.h\"\n+#include \"uassert.h\"\n+#include \"ucln_cmn.h\"\n+#include \"uhash.h\"\n+#include \"uinvchar.h\"\n+#include \"umutex.h\"\n+#include \"uniquecharstr.h\"\n+#include \"uresdata.h\"\n+#include \"uresimp.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+namespace {\n+\n+constexpr char PSEUDO_ACCENTS_PREFIX = '\\'';  \/\/ -XA, -PSACCENT\n+constexpr char PSEUDO_BIDI_PREFIX = '+';  \/\/ -XB, -PSBIDI\n+constexpr char PSEUDO_CRACKED_PREFIX = ',';  \/\/ -XC, -PSCRACK\n+\n+}  \/\/ namespace\n+\n+LocaleDistanceData::LocaleDistanceData(LocaleDistanceData &&data) :\n+        distanceTrieBytes(data.distanceTrieBytes),\n+        regionToPartitions(data.regionToPartitions),\n+        partitions(data.partitions),\n+        paradigms(data.paradigms), paradigmsLength(data.paradigmsLength),\n+        distances(data.distances) {\n+    data.partitions = nullptr;\n+    data.paradigms = nullptr;\n+}\n+\n+LocaleDistanceData::~LocaleDistanceData() {\n+    uprv_free(partitions);\n+    delete[] paradigms;\n+}\n+\n+\/\/ TODO(ICU-20777): Rename to just LikelySubtagsData.\n+struct XLikelySubtagsData {\n+    UResourceBundle *langInfoBundle = nullptr;\n+    UniqueCharStrings strings;\n+    CharStringMap languageAliases;\n+    CharStringMap regionAliases;\n+    const uint8_t *trieBytes = nullptr;\n+    LSR *lsrs = nullptr;\n+    int32_t lsrsLength = 0;\n+\n+    LocaleDistanceData distanceData;\n+\n+    XLikelySubtagsData(UErrorCode &errorCode) : strings(errorCode) {}\n+\n+    ~XLikelySubtagsData() {\n+        ures_close(langInfoBundle);\n+        delete[] lsrs;\n+    }\n+\n+    void load(UErrorCode &errorCode) {\n+        langInfoBundle = ures_openDirect(nullptr, \"langInfo\", &errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+        StackUResourceBundle stackTempBundle;\n+        ResourceDataValue value;\n+        ures_getValueWithFallback(langInfoBundle, \"likely\", stackTempBundle.getAlias(),\n+                                  value, errorCode);\n+        ResourceTable likelyTable = value.getTable(errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+\n+        \/\/ Read all strings in the resource bundle and convert them to invariant char *.\n+        LocalMemory<int32_t> languageIndexes, regionIndexes, lsrSubtagIndexes;\n+        int32_t languagesLength = 0, regionsLength = 0, lsrSubtagsLength = 0;\n+        if (!readStrings(likelyTable, \"languageAliases\", value,\n+                         languageIndexes, languagesLength, errorCode) ||\n+                !readStrings(likelyTable, \"regionAliases\", value,\n+                             regionIndexes, regionsLength, errorCode) ||\n+                !readStrings(likelyTable, \"lsrs\", value,\n+                             lsrSubtagIndexes,lsrSubtagsLength, errorCode)) {\n+            return;\n+        }\n+        if ((languagesLength & 1) != 0 ||\n+                (regionsLength & 1) != 0 ||\n+                (lsrSubtagsLength % 3) != 0) {\n+            errorCode = U_INVALID_FORMAT_ERROR;\n+            return;\n+        }\n+        if (lsrSubtagsLength == 0) {\n+            errorCode = U_MISSING_RESOURCE_ERROR;\n+            return;\n+        }\n+\n+        if (!likelyTable.findValue(\"trie\", value)) {\n+            errorCode = U_MISSING_RESOURCE_ERROR;\n+            return;\n+        }\n+        int32_t length;\n+        trieBytes = value.getBinary(length, errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+\n+        \/\/ Also read distance\/matcher data if available,\n+        \/\/ to open & keep only one resource bundle pointer\n+        \/\/ and to use one single UniqueCharStrings.\n+        UErrorCode matchErrorCode = U_ZERO_ERROR;\n+        ures_getValueWithFallback(langInfoBundle, \"match\", stackTempBundle.getAlias(),\n+                                  value, matchErrorCode);\n+        LocalMemory<int32_t> partitionIndexes, paradigmSubtagIndexes;\n+        int32_t partitionsLength = 0, paradigmSubtagsLength = 0;\n+        if (U_SUCCESS(matchErrorCode)) {\n+            ResourceTable matchTable = value.getTable(errorCode);\n+            if (U_FAILURE(errorCode)) { return; }\n+\n+            if (matchTable.findValue(\"trie\", value)) {\n+                distanceData.distanceTrieBytes = value.getBinary(length, errorCode);\n+                if (U_FAILURE(errorCode)) { return; }\n+            }\n+\n+            if (matchTable.findValue(\"regionToPartitions\", value)) {\n+                distanceData.regionToPartitions = value.getBinary(length, errorCode);\n+                if (U_FAILURE(errorCode)) { return; }\n+                if (length < LSR::REGION_INDEX_LIMIT) {\n+                    errorCode = U_INVALID_FORMAT_ERROR;\n+                    return;\n+                }\n+            }\n+\n+            if (!readStrings(matchTable, \"partitions\", value,\n+                             partitionIndexes, partitionsLength, errorCode) ||\n+                    !readStrings(matchTable, \"paradigms\", value,\n+                                 paradigmSubtagIndexes, paradigmSubtagsLength, errorCode)) {\n+                return;\n+            }\n+            if ((paradigmSubtagsLength % 3) != 0) {\n+                errorCode = U_INVALID_FORMAT_ERROR;\n+                return;\n+            }\n+\n+            if (matchTable.findValue(\"distances\", value)) {\n+                distanceData.distances = value.getIntVector(length, errorCode);\n+                if (U_FAILURE(errorCode)) { return; }\n+                if (length < 4) {  \/\/ LocaleDistance IX_LIMIT\n+                    errorCode = U_INVALID_FORMAT_ERROR;\n+                    return;\n+                }\n+            }\n+        } else if (matchErrorCode == U_MISSING_RESOURCE_ERROR) {\n+            \/\/ ok for likely subtags\n+        } else {  \/\/ error other than missing resource\n+            errorCode = matchErrorCode;\n+            return;\n+        }\n+\n+        \/\/ Fetch & store invariant-character versions of strings\n+        \/\/ only after we have collected and de-duplicated all of them.\n+        strings.freeze();\n+\n+        languageAliases = CharStringMap(languagesLength \/ 2, errorCode);\n+        for (int32_t i = 0; i < languagesLength; i += 2) {\n+            languageAliases.put(strings.get(languageIndexes[i]),\n+                                strings.get(languageIndexes[i + 1]), errorCode);\n+        }\n+\n+        regionAliases = CharStringMap(regionsLength \/ 2, errorCode);\n+        for (int32_t i = 0; i < regionsLength; i += 2) {\n+            regionAliases.put(strings.get(regionIndexes[i]),\n+                              strings.get(regionIndexes[i + 1]), errorCode);\n+        }\n+        if (U_FAILURE(errorCode)) { return; }\n+\n+        lsrsLength = lsrSubtagsLength \/ 3;\n+        lsrs = new LSR[lsrsLength];\n+        if (lsrs == nullptr) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+        for (int32_t i = 0, j = 0; i < lsrSubtagsLength; i += 3, ++j) {\n+            lsrs[j] = LSR(strings.get(lsrSubtagIndexes[i]),\n+                          strings.get(lsrSubtagIndexes[i + 1]),\n+                          strings.get(lsrSubtagIndexes[i + 2]),\n+                          LSR::IMPLICIT_LSR);\n+        }\n+\n+        if (partitionsLength > 0) {\n+            distanceData.partitions = static_cast<const char **>(\n+                uprv_malloc(partitionsLength * sizeof(const char *)));\n+            if (distanceData.partitions == nullptr) {\n+                errorCode = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n+            for (int32_t i = 0; i < partitionsLength; ++i) {\n+                distanceData.partitions[i] = strings.get(partitionIndexes[i]);\n+            }\n+        }\n+\n+        if (paradigmSubtagsLength > 0) {\n+            distanceData.paradigmsLength = paradigmSubtagsLength \/ 3;\n+            LSR *paradigms = new LSR[distanceData.paradigmsLength];\n+            if (paradigms == nullptr) {\n+                errorCode = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n+            for (int32_t i = 0, j = 0; i < paradigmSubtagsLength; i += 3, ++j) {\n+                paradigms[j] = LSR(strings.get(paradigmSubtagIndexes[i]),\n+                                   strings.get(paradigmSubtagIndexes[i + 1]),\n+                                   strings.get(paradigmSubtagIndexes[i + 2]),\n+                                   LSR::DONT_CARE_FLAGS);\n+            }\n+            distanceData.paradigms = paradigms;\n+        }\n+    }\n+\n+private:\n+    bool readStrings(const ResourceTable &table, const char *key, ResourceValue &value,\n+                     LocalMemory<int32_t> &indexes, int32_t &length, UErrorCode &errorCode) {\n+        if (table.findValue(key, value)) {\n+            ResourceArray stringArray = value.getArray(errorCode);\n+            if (U_FAILURE(errorCode)) { return false; }\n+            length = stringArray.getSize();\n+            if (length == 0) { return true; }\n+            int32_t *rawIndexes = indexes.allocateInsteadAndCopy(length);\n+            if (rawIndexes == nullptr) {\n+                errorCode = U_MEMORY_ALLOCATION_ERROR;\n+                return false;\n+            }\n+            for (int i = 0; i < length; ++i) {\n+                stringArray.getValue(i, value);  \/\/ returns TRUE because i < length\n+                rawIndexes[i] = strings.add(value.getUnicodeString(errorCode), errorCode);\n+                if (U_FAILURE(errorCode)) { return false; }\n+            }\n+        }\n+        return true;\n+    }\n+};\n+\n+namespace {\n+\n+XLikelySubtags *gLikelySubtags = nullptr;\n+UInitOnce gInitOnce = U_INITONCE_INITIALIZER;\n+\n+UBool U_CALLCONV cleanup() {\n+    delete gLikelySubtags;\n+    gLikelySubtags = nullptr;\n+    gInitOnce.reset();\n+    return TRUE;\n+}\n+\n+}  \/\/ namespace\n+\n+void U_CALLCONV XLikelySubtags::initLikelySubtags(UErrorCode &errorCode) {\n+    \/\/ This function is invoked only via umtx_initOnce().\n+    U_ASSERT(gLikelySubtags == nullptr);\n+    XLikelySubtagsData data(errorCode);\n+    data.load(errorCode);\n+    if (U_FAILURE(errorCode)) { return; }\n+    gLikelySubtags = new XLikelySubtags(data);\n+    if (gLikelySubtags == nullptr) {\n+        errorCode = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    ucln_common_registerCleanup(UCLN_COMMON_LIKELY_SUBTAGS, cleanup);\n+}\n+\n+const XLikelySubtags *XLikelySubtags::getSingleton(UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return nullptr; }\n+    umtx_initOnce(gInitOnce, &XLikelySubtags::initLikelySubtags, errorCode);\n+    return gLikelySubtags;\n+}\n+\n+XLikelySubtags::XLikelySubtags(XLikelySubtagsData &data) :\n+        langInfoBundle(data.langInfoBundle),\n+        strings(data.strings.orphanCharStrings()),\n+        languageAliases(std::move(data.languageAliases)),\n+        regionAliases(std::move(data.regionAliases)),\n+        trie(data.trieBytes),\n+        lsrs(data.lsrs),\n+#if U_DEBUG\n+        lsrsLength(data.lsrsLength),\n+#endif\n+        distanceData(std::move(data.distanceData)) {\n+    data.langInfoBundle = nullptr;\n+    data.lsrs = nullptr;\n+\n+    \/\/ Cache the result of looking up language=\"und\" encoded as \"*\", and \"und-Zzzz\" (\"**\").\n+    UStringTrieResult result = trie.next(u'*');\n+    U_ASSERT(USTRINGTRIE_HAS_NEXT(result));\n+    trieUndState = trie.getState64();\n+    result = trie.next(u'*');\n+    U_ASSERT(USTRINGTRIE_HAS_NEXT(result));\n+    trieUndZzzzState = trie.getState64();\n+    result = trie.next(u'*');\n+    U_ASSERT(USTRINGTRIE_HAS_VALUE(result));\n+    defaultLsrIndex = trie.getValue();\n+    trie.reset();\n+\n+    for (char16_t c = u'a'; c <= u'z'; ++c) {\n+        result = trie.next(c);\n+        if (result == USTRINGTRIE_NO_VALUE) {\n+            trieFirstLetterStates[c - u'a'] = trie.getState64();\n+        }\n+        trie.reset();\n+    }\n+}\n+\n+XLikelySubtags::~XLikelySubtags() {\n+    ures_close(langInfoBundle);\n+    delete strings;\n+    delete[] lsrs;\n+}\n+\n+LSR XLikelySubtags::makeMaximizedLsrFrom(const Locale &locale, UErrorCode &errorCode) const {\n+    const char *name = locale.getName();\n+    if (uprv_isAtSign(name[0]) && name[1] == 'x' && name[2] == '=') {  \/\/ name.startsWith(\"@x=\")\n+        \/\/ Private use language tag x-subtag-subtag...\n+        return LSR(name, \"\", \"\", LSR::EXPLICIT_LSR);\n+    }\n+    return makeMaximizedLsr(locale.getLanguage(), locale.getScript(), locale.getCountry(),\n+                            locale.getVariant(), errorCode);\n+}\n+\n+namespace {\n+\n+const char *getCanonical(const CharStringMap &aliases, const char *alias) {\n+    const char *canonical = aliases.get(alias);\n+    return canonical == nullptr ? alias : canonical;\n+}\n+\n+}  \/\/ namespace\n+\n+LSR XLikelySubtags::makeMaximizedLsr(const char *language, const char *script, const char *region,\n+                                     const char *variant, UErrorCode &errorCode) const {\n+    \/\/ Handle pseudolocales like en-XA, ar-XB, fr-PSCRACK.\n+    \/\/ They should match only themselves,\n+    \/\/ not other locales with what looks like the same language and script subtags.\n+    char c1;\n+    if (region[0] == 'X' && (c1 = region[1]) != 0 && region[2] == 0) {\n+        switch (c1) {\n+        case 'A':\n+            return LSR(PSEUDO_ACCENTS_PREFIX, language, script, region,\n+                       LSR::EXPLICIT_LSR, errorCode);\n+        case 'B':\n+            return LSR(PSEUDO_BIDI_PREFIX, language, script, region,\n+                       LSR::EXPLICIT_LSR, errorCode);\n+        case 'C':\n+            return LSR(PSEUDO_CRACKED_PREFIX, language, script, region,\n+                       LSR::EXPLICIT_LSR, errorCode);\n+        default:  \/\/ normal locale\n+            break;\n+        }\n+    }\n+\n+    if (variant[0] == 'P' && variant[1] == 'S') {\n+        int32_t lsrFlags = *region == 0 ?\n+            LSR::EXPLICIT_LANGUAGE | LSR::EXPLICIT_SCRIPT : LSR::EXPLICIT_LSR;\n+        if (uprv_strcmp(variant, \"PSACCENT\") == 0) {\n+            return LSR(PSEUDO_ACCENTS_PREFIX, language, script,\n+                       *region == 0 ? \"XA\" : region, lsrFlags, errorCode);\n+        } else if (uprv_strcmp(variant, \"PSBIDI\") == 0) {\n+            return LSR(PSEUDO_BIDI_PREFIX, language, script,\n+                       *region == 0 ? \"XB\" : region, lsrFlags, errorCode);\n+        } else if (uprv_strcmp(variant, \"PSCRACK\") == 0) {\n+            return LSR(PSEUDO_CRACKED_PREFIX, language, script,\n+                       *region == 0 ? \"XC\" : region, lsrFlags, errorCode);\n+        }\n+        \/\/ else normal locale\n+    }\n+\n+    language = getCanonical(languageAliases, language);\n+    \/\/ (We have no script mappings.)\n+    region = getCanonical(regionAliases, region);\n+    return maximize(language, script, region);\n+}\n+\n+LSR XLikelySubtags::maximize(const char *language, const char *script, const char *region) const {\n+    if (uprv_strcmp(language, \"und\") == 0) {\n+        language = \"\";\n+    }\n+    if (uprv_strcmp(script, \"Zzzz\") == 0) {\n+        script = \"\";\n+    }\n+    if (uprv_strcmp(region, \"ZZ\") == 0) {\n+        region = \"\";\n+    }\n+    if (*script != 0 && *region != 0 && *language != 0) {\n+        return LSR(language, script, region, LSR::EXPLICIT_LSR);  \/\/ already maximized\n+    }\n+\n+    uint32_t retainOldMask = 0;\n+    BytesTrie iter(trie);\n+    uint64_t state;\n+    int32_t value;\n+    \/\/ Small optimization: Array lookup for first language letter.\n+    int32_t c0;\n+    if (0 <= (c0 = uprv_lowerOrdinal(language[0])) && c0 <= 25 &&\n+            language[1] != 0 &&  \/\/ language.length() >= 2\n+            (state = trieFirstLetterStates[c0]) != 0) {\n+        value = trieNext(iter.resetToState64(state), language, 1);\n+    } else {\n+        value = trieNext(iter, language, 0);\n+    }\n+    if (value >= 0) {\n+        if (*language != 0) {\n+            retainOldMask |= 4;\n+        }\n+        state = iter.getState64();\n+    } else {\n+        retainOldMask |= 4;\n+        iter.resetToState64(trieUndState);  \/\/ \"und\" (\"*\")\n+        state = 0;\n+    }\n+\n+    if (value > 0) {\n+        \/\/ Intermediate or final value from just language.\n+        if (value == SKIP_SCRIPT) {\n+            value = 0;\n+        }\n+        if (*script != 0) {\n+            retainOldMask |= 2;\n+        }\n+    } else {\n+        value = trieNext(iter, script, 0);\n+        if (value >= 0) {\n+            if (*script != 0) {\n+                retainOldMask |= 2;\n+            }\n+            state = iter.getState64();\n+        } else {\n+            retainOldMask |= 2;\n+            if (state == 0) {\n+                iter.resetToState64(trieUndZzzzState);  \/\/ \"und-Zzzz\" (\"**\")\n+            } else {\n+                iter.resetToState64(state);\n+                value = trieNext(iter, \"\", 0);\n+                U_ASSERT(value >= 0);\n+                state = iter.getState64();\n+            }\n+        }\n+    }\n+\n+    if (value > 0) {\n+        \/\/ Final value from just language or language+script.\n+        if (*region != 0) {\n+            retainOldMask |= 1;\n+        }\n+    } else {\n+        value = trieNext(iter, region, 0);\n+        if (value >= 0) {\n+            if (*region != 0) {\n+                retainOldMask |= 1;\n+            }\n+        } else {\n+            retainOldMask |= 1;\n+            if (state == 0) {\n+                value = defaultLsrIndex;\n+            } else {\n+                iter.resetToState64(state);\n+                value = trieNext(iter, \"\", 0);\n+                U_ASSERT(value > 0);\n+            }\n+        }\n+    }\n+    U_ASSERT(value < lsrsLength);\n+    const LSR &result = lsrs[value];\n+\n+    if (*language == 0) {\n+        language = \"und\";\n+    }\n+\n+    if (retainOldMask == 0) {\n+        \/\/ Quickly return a copy of the lookup-result LSR\n+        \/\/ without new allocation of the subtags.\n+        return LSR(result.language, result.script, result.region, result.flags);\n+    }\n+    if ((retainOldMask & 4) == 0) {\n+        language = result.language;\n+    }\n+    if ((retainOldMask & 2) == 0) {\n+        script = result.script;\n+    }\n+    if ((retainOldMask & 1) == 0) {\n+        region = result.region;\n+    }\n+    \/\/ retainOldMask flags = LSR explicit-subtag flags\n+    return LSR(language, script, region, retainOldMask);\n+}\n+\n+int32_t XLikelySubtags::compareLikely(const LSR &lsr, const LSR &other, int32_t likelyInfo) const {\n+    \/\/ If likelyInfo >= 0:\n+    \/\/ likelyInfo bit 1 is set if the previous comparison with lsr\n+    \/\/ was for equal language and script.\n+    \/\/ Otherwise the scripts differed.\n+    if (uprv_strcmp(lsr.language, other.language) != 0) {\n+        return 0xfffffffc;  \/\/ negative, lsr not better than other\n+    }\n+    if (uprv_strcmp(lsr.script, other.script) != 0) {\n+        int32_t index;\n+        if (likelyInfo >= 0 && (likelyInfo & 2) == 0) {\n+            index = likelyInfo >> 2;\n+        } else {\n+            index = getLikelyIndex(lsr.language, \"\");\n+            likelyInfo = index << 2;\n+        }\n+        const LSR &likely = lsrs[index];\n+        if (uprv_strcmp(lsr.script, likely.script) == 0) {\n+            return likelyInfo | 1;\n+        } else {\n+            return likelyInfo & ~1;\n+        }\n+    }\n+    if (uprv_strcmp(lsr.region, other.region) != 0) {\n+        int32_t index;\n+        if (likelyInfo >= 0 && (likelyInfo & 2) != 0) {\n+            index = likelyInfo >> 2;\n+        } else {\n+            index = getLikelyIndex(lsr.language, lsr.region);\n+            likelyInfo = (index << 2) | 2;\n+        }\n+        const LSR &likely = lsrs[index];\n+        if (uprv_strcmp(lsr.region, likely.region) == 0) {\n+            return likelyInfo | 1;\n+        } else {\n+            return likelyInfo & ~1;\n+        }\n+    }\n+    return likelyInfo & ~1;  \/\/ lsr not better than other\n+}\n+\n+\/\/ Subset of maximize().\n+int32_t XLikelySubtags::getLikelyIndex(const char *language, const char *script) const {\n+    if (uprv_strcmp(language, \"und\") == 0) {\n+        language = \"\";\n+    }\n+    if (uprv_strcmp(script, \"Zzzz\") == 0) {\n+        script = \"\";\n+    }\n+\n+    BytesTrie iter(trie);\n+    uint64_t state;\n+    int32_t value;\n+    \/\/ Small optimization: Array lookup for first language letter.\n+    int32_t c0;\n+    if (0 <= (c0 = uprv_lowerOrdinal(language[0])) && c0 <= 25 &&\n+            language[1] != 0 &&  \/\/ language.length() >= 2\n+            (state = trieFirstLetterStates[c0]) != 0) {\n+        value = trieNext(iter.resetToState64(state), language, 1);\n+    } else {\n+        value = trieNext(iter, language, 0);\n+    }\n+    if (value >= 0) {\n+        state = iter.getState64();\n+    } else {\n+        iter.resetToState64(trieUndState);  \/\/ \"und\" (\"*\")\n+        state = 0;\n+    }\n+\n+    if (value > 0) {\n+        \/\/ Intermediate or final value from just language.\n+        if (value == SKIP_SCRIPT) {\n+            value = 0;\n+        }\n+    } else {\n+        value = trieNext(iter, script, 0);\n+        if (value >= 0) {\n+            state = iter.getState64();\n+        } else {\n+            if (state == 0) {\n+                iter.resetToState64(trieUndZzzzState);  \/\/ \"und-Zzzz\" (\"**\")\n+            } else {\n+                iter.resetToState64(state);\n+                value = trieNext(iter, \"\", 0);\n+                U_ASSERT(value >= 0);\n+                state = iter.getState64();\n+            }\n+        }\n+    }\n+\n+    if (value > 0) {\n+        \/\/ Final value from just language or language+script.\n+    } else {\n+        value = trieNext(iter, \"\", 0);\n+        U_ASSERT(value > 0);\n+    }\n+    U_ASSERT(value < lsrsLength);\n+    return value;\n+}\n+\n+int32_t XLikelySubtags::trieNext(BytesTrie &iter, const char *s, int32_t i) {\n+    UStringTrieResult result;\n+    uint8_t c;\n+    if ((c = s[i]) == 0) {\n+        result = iter.next(u'*');\n+    } else {\n+        for (;;) {\n+            c = uprv_invCharToAscii(c);\n+            \/\/ EBCDIC: If s[i] is not an invariant character,\n+            \/\/ then c is now 0 and will simply not match anything, which is harmless.\n+            uint8_t next = s[++i];\n+            if (next != 0) {\n+                if (!USTRINGTRIE_HAS_NEXT(iter.next(c))) {\n+                    return -1;\n+                }\n+            } else {\n+                \/\/ last character of this subtag\n+                result = iter.next(c | 0x80);\n+                break;\n+            }\n+            c = next;\n+        }\n+    }\n+    switch (result) {\n+    case USTRINGTRIE_NO_MATCH: return -1;\n+    case USTRINGTRIE_NO_VALUE: return 0;\n+    case USTRINGTRIE_INTERMEDIATE_VALUE:\n+        U_ASSERT(iter.getValue() == SKIP_SCRIPT);\n+        return SKIP_SCRIPT;\n+    case USTRINGTRIE_FINAL_VALUE: return iter.getValue();\n+    default: return -1;\n+    }\n+}\n+\n+\/\/ TODO(ICU-20777): Switch Locale\/uloc_ likely-subtags API from the old code\n+\/\/ in loclikely.cpp to this new code, including activating this\n+\/\/ minimizeSubtags() function. The LocaleMatcher does not minimize.\n+#if 0\n+LSR XLikelySubtags::minimizeSubtags(const char *languageIn, const char *scriptIn,\n+                                    const char *regionIn, ULocale.Minimize fieldToFavor,\n+                                    UErrorCode &errorCode) const {\n+    LSR result = maximize(languageIn, scriptIn, regionIn);\n+\n+    \/\/ We could try just a series of checks, like:\n+    \/\/ LSR result2 = addLikelySubtags(languageIn, \"\", \"\");\n+    \/\/ if result.equals(result2) return result2;\n+    \/\/ However, we can optimize 2 of the cases:\n+    \/\/   (languageIn, \"\", \"\")\n+    \/\/   (languageIn, \"\", regionIn)\n+\n+    \/\/ value00 = lookup(result.language, \"\", \"\")\n+    BytesTrie iter = new BytesTrie(trie);\n+    int value = trieNext(iter, result.language, 0);\n+    U_ASSERT(value >= 0);\n+    if (value == 0) {\n+        value = trieNext(iter, \"\", 0);\n+        U_ASSERT(value >= 0);\n+        if (value == 0) {\n+            value = trieNext(iter, \"\", 0);\n+        }\n+    }\n+    U_ASSERT(value > 0);\n+    LSR value00 = lsrs[value];\n+    boolean favorRegionOk = false;\n+    if (result.script.equals(value00.script)) { \/\/script is default\n+        if (result.region.equals(value00.region)) {\n+            return new LSR(result.language, \"\", \"\", LSR.DONT_CARE_FLAGS);\n+        } else if (fieldToFavor == ULocale.Minimize.FAVOR_REGION) {\n+            return new LSR(result.language, \"\", result.region, LSR.DONT_CARE_FLAGS);\n+        } else {\n+            favorRegionOk = true;\n+        }\n+    }\n+\n+    \/\/ The last case is not as easy to optimize.\n+    \/\/ Maybe do later, but for now use the straightforward code.\n+    LSR result2 = maximize(languageIn, scriptIn, \"\");\n+    if (result2.equals(result)) {\n+        return new LSR(result.language, result.script, \"\", LSR.DONT_CARE_FLAGS);\n+    } else if (favorRegionOk) {\n+        return new LSR(result.language, \"\", result.region, LSR.DONT_CARE_FLAGS);\n+    }\n+    return result;\n+}\n+#endif\n+\n+U_NAMESPACE_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/loclikelysubtags.cpp","additions":682,"deletions":0,"binary":false,"changes":682,"status":"added"},{"patch":"@@ -0,0 +1,121 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ loclikelysubtags.h\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#ifndef __LOCLIKELYSUBTAGS_H__\n+#define __LOCLIKELYSUBTAGS_H__\n+\n+#include <utility>\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/bytestrie.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"unicode\/ures.h\"\n+#include \"charstrmap.h\"\n+#include \"lsr.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+struct XLikelySubtagsData;\n+\n+struct LocaleDistanceData {\n+    LocaleDistanceData() = default;\n+    LocaleDistanceData(LocaleDistanceData &&data);\n+    ~LocaleDistanceData();\n+\n+    const uint8_t *distanceTrieBytes = nullptr;\n+    const uint8_t *regionToPartitions = nullptr;\n+    const char **partitions = nullptr;\n+    const LSR *paradigms = nullptr;\n+    int32_t paradigmsLength = 0;\n+    const int32_t *distances = nullptr;\n+\n+private:\n+    LocaleDistanceData &operator=(const LocaleDistanceData &) = delete;\n+};\n+\n+\/\/ TODO(ICU-20777): Rename to just LikelySubtags.\n+class XLikelySubtags final : public UMemory {\n+public:\n+    ~XLikelySubtags();\n+\n+    static constexpr int32_t SKIP_SCRIPT = 1;\n+\n+    \/\/ VisibleForTesting\n+    static const XLikelySubtags *getSingleton(UErrorCode &errorCode);\n+\n+    \/\/ VisibleForTesting\n+    LSR makeMaximizedLsrFrom(const Locale &locale, UErrorCode &errorCode) const;\n+\n+    \/**\n+     * Tests whether lsr is \"more likely\" than other.\n+     * For example, fr-Latn-FR is more likely than fr-Latn-CH because\n+     * FR is the default region for fr-Latn.\n+     *\n+     * The likelyInfo caches lookup information between calls.\n+     * The return value is an updated likelyInfo value,\n+     * with bit 0 set if lsr is \"more likely\".\n+     * The initial value of likelyInfo must be negative.\n+     *\/\n+    int32_t compareLikely(const LSR &lsr, const LSR &other, int32_t likelyInfo) const;\n+\n+    \/\/ TODO(ICU-20777): Switch Locale\/uloc_ likely-subtags API from the old code\n+    \/\/ in loclikely.cpp to this new code, including activating this\n+    \/\/ minimizeSubtags() function. The LocaleMatcher does not minimize.\n+#if 0\n+    LSR minimizeSubtags(const char *languageIn, const char *scriptIn, const char *regionIn,\n+                        ULocale.Minimize fieldToFavor, UErrorCode &errorCode) const;\n+#endif\n+\n+    \/\/ visible for LocaleDistance\n+    const LocaleDistanceData &getDistanceData() const { return distanceData; }\n+\n+private:\n+    XLikelySubtags(XLikelySubtagsData &data);\n+    XLikelySubtags(const XLikelySubtags &other) = delete;\n+    XLikelySubtags &operator=(const XLikelySubtags &other) = delete;\n+\n+    static void initLikelySubtags(UErrorCode &errorCode);\n+\n+    LSR makeMaximizedLsr(const char *language, const char *script, const char *region,\n+                         const char *variant, UErrorCode &errorCode) const;\n+\n+    \/**\n+     * Raw access to addLikelySubtags. Input must be in canonical format, eg \"en\", not \"eng\" or \"EN\".\n+     *\/\n+    LSR maximize(const char *language, const char *script, const char *region) const;\n+\n+    int32_t getLikelyIndex(const char *language, const char *script) const;\n+\n+    static int32_t trieNext(BytesTrie &iter, const char *s, int32_t i);\n+\n+    UResourceBundle *langInfoBundle;\n+    \/\/ We could store the strings by value, except that if there were few enough strings,\n+    \/\/ moving the contents could copy it to a different array,\n+    \/\/ invalidating the pointers stored in the maps.\n+    CharString *strings;\n+    CharStringMap languageAliases;\n+    CharStringMap regionAliases;\n+\n+    \/\/ The trie maps each lang+script+region (encoded in ASCII) to an index into lsrs.\n+    \/\/ There is also a trie value for each intermediate lang and lang+script.\n+    \/\/ '*' is used instead of \"und\", \"Zzzz\"\/\"\" and \"ZZ\"\/\"\".\n+    BytesTrie trie;\n+    uint64_t trieUndState;\n+    uint64_t trieUndZzzzState;\n+    int32_t defaultLsrIndex;\n+    uint64_t trieFirstLetterStates[26];\n+    const LSR *lsrs;\n+#if U_DEBUG\n+    int32_t lsrsLength;\n+#endif\n+\n+    \/\/ distance\/matcher data: see comment in XLikelySubtagsData::load()\n+    LocaleDistanceData distanceData;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ __LOCLIKELYSUBTAGS_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/loclikelysubtags.h","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"bytesinkutil.h\"\n+#include \"charstr.h\"\n@@ -33,0 +35,1 @@\n+#include \"ulocimp.h\"\n@@ -1170,1 +1173,0 @@\n-    char collVal[ULOC_KEYWORDS_CAPACITY] = {};\n@@ -1177,2 +1179,6 @@\n-        len = uloc_getKeywordValue(localeID, \"collation\", collVal, UPRV_LENGTHOF(collVal) - 1, status);\n-        if (U_SUCCESS(*status) && len > 0)\n+        icu::CharString collVal;\n+        {\n+            icu::CharStringByteSink sink(&collVal);\n+            ulocimp_getKeywordValue(localeID, \"collation\", sink, status);\n+        }\n+        if (U_SUCCESS(*status) && !collVal.isEmpty())\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/locmap.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,114 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ lsr.cpp\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#include \"unicode\/utypes.h\"\n+#include \"charstr.h\"\n+#include \"cmemory.h\"\n+#include \"cstring.h\"\n+#include \"lsr.h\"\n+#include \"uinvchar.h\"\n+#include \"ustr_imp.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+LSR::LSR(char prefix, const char *lang, const char *scr, const char *r, int32_t f,\n+         UErrorCode &errorCode) :\n+        language(nullptr), script(nullptr), region(r),\n+        regionIndex(indexForRegion(region)), flags(f) {\n+    if (U_SUCCESS(errorCode)) {\n+        CharString langScript;\n+        langScript.append(prefix, errorCode).append(lang, errorCode).append('\\0', errorCode);\n+        int32_t scriptOffset = langScript.length();\n+        langScript.append(prefix, errorCode).append(scr, errorCode);\n+        owned = langScript.cloneData(errorCode);\n+        if (U_SUCCESS(errorCode)) {\n+            language = owned;\n+            script = owned + scriptOffset;\n+        }\n+    }\n+}\n+\n+LSR::LSR(LSR &&other) U_NOEXCEPT :\n+        language(other.language), script(other.script), region(other.region), owned(other.owned),\n+        regionIndex(other.regionIndex), flags(other.flags),\n+        hashCode(other.hashCode) {\n+    if (owned != nullptr) {\n+        other.language = other.script = \"\";\n+        other.owned = nullptr;\n+        other.hashCode = 0;\n+    }\n+}\n+\n+void LSR::deleteOwned() {\n+    uprv_free(owned);\n+}\n+\n+LSR &LSR::operator=(LSR &&other) U_NOEXCEPT {\n+    this->~LSR();\n+    language = other.language;\n+    script = other.script;\n+    region = other.region;\n+    regionIndex = other.regionIndex;\n+    flags = other.flags;\n+    owned = other.owned;\n+    hashCode = other.hashCode;\n+    if (owned != nullptr) {\n+        other.language = other.script = \"\";\n+        other.owned = nullptr;\n+        other.hashCode = 0;\n+    }\n+    return *this;\n+}\n+\n+UBool LSR::isEquivalentTo(const LSR &other) const {\n+    return\n+        uprv_strcmp(language, other.language) == 0 &&\n+        uprv_strcmp(script, other.script) == 0 &&\n+        regionIndex == other.regionIndex &&\n+        \/\/ Compare regions if both are ill-formed (and their indexes are 0).\n+        (regionIndex > 0 || uprv_strcmp(region, other.region) == 0);\n+}\n+\n+UBool LSR::operator==(const LSR &other) const {\n+    return\n+        uprv_strcmp(language, other.language) == 0 &&\n+        uprv_strcmp(script, other.script) == 0 &&\n+        regionIndex == other.regionIndex &&\n+        \/\/ Compare regions if both are ill-formed (and their indexes are 0).\n+        (regionIndex > 0 || uprv_strcmp(region, other.region) == 0) &&\n+        flags == other.flags;\n+}\n+\n+int32_t LSR::indexForRegion(const char *region) {\n+    int32_t c = region[0];\n+    int32_t a = c - '0';\n+    if (0 <= a && a <= 9) {  \/\/ digits: \"419\"\n+        int32_t b = region[1] - '0';\n+        if (b < 0 || 9 < b) { return 0; }\n+        c = region[2] - '0';\n+        if (c < 0 || 9 < c || region[3] != 0) { return 0; }\n+        return (10 * a + b) * 10 + c + 1;\n+    } else {  \/\/ letters: \"DE\"\n+        a = uprv_upperOrdinal(c);\n+        if (a < 0 || 25 < a) { return 0; }\n+        int32_t b = uprv_upperOrdinal(region[1]);\n+        if (b < 0 || 25 < b || region[2] != 0) { return 0; }\n+        return 26 * a + b + 1001;\n+    }\n+    return 0;\n+}\n+\n+LSR &LSR::setHashCode() {\n+    if (hashCode == 0) {\n+        uint32_t h = ustr_hashCharsN(language, static_cast<int32_t>(uprv_strlen(language)));\n+        h = h * 37 + ustr_hashCharsN(script, static_cast<int32_t>(uprv_strlen(script)));\n+        h = h * 37 + regionIndex;\n+        hashCode = h * 37 + flags;\n+    }\n+    return *this;\n+}\n+\n+U_NAMESPACE_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/lsr.cpp","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ lsr.h\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#ifndef __LSR_H__\n+#define __LSR_H__\n+\n+#include \"unicode\/utypes.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"cstring.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+struct LSR final : public UMemory {\n+    static constexpr int32_t REGION_INDEX_LIMIT = 1001 + 26 * 26;\n+\n+    static constexpr int32_t EXPLICIT_LSR = 7;\n+    static constexpr int32_t EXPLICIT_LANGUAGE = 4;\n+    static constexpr int32_t EXPLICIT_SCRIPT = 2;\n+    static constexpr int32_t EXPLICIT_REGION = 1;\n+    static constexpr int32_t IMPLICIT_LSR = 0;\n+    static constexpr int32_t DONT_CARE_FLAGS = 0;\n+\n+    const char *language;\n+    const char *script;\n+    const char *region;\n+    char *owned = nullptr;\n+    \/** Index for region, 0 if ill-formed. @see indexForRegion *\/\n+    int32_t regionIndex = 0;\n+    int32_t flags = 0;\n+    \/** Only set for LSRs that will be used in a hash table. *\/\n+    int32_t hashCode = 0;\n+\n+    LSR() : language(\"und\"), script(\"\"), region(\"\") {}\n+\n+    \/** Constructor which aliases all subtag pointers. *\/\n+    LSR(const char *lang, const char *scr, const char *r, int32_t f) :\n+            language(lang),  script(scr), region(r),\n+            regionIndex(indexForRegion(region)), flags(f) {}\n+    \/**\n+     * Constructor which prepends the prefix to the language and script,\n+     * copies those into owned memory, and aliases the region.\n+     *\/\n+    LSR(char prefix, const char *lang, const char *scr, const char *r, int32_t f,\n+        UErrorCode &errorCode);\n+    LSR(LSR &&other) U_NOEXCEPT;\n+    LSR(const LSR &other) = delete;\n+    inline ~LSR() {\n+        \/\/ Pure inline code for almost all instances.\n+        if (owned != nullptr) {\n+            deleteOwned();\n+        }\n+    }\n+\n+    LSR &operator=(LSR &&other) U_NOEXCEPT;\n+    LSR &operator=(const LSR &other) = delete;\n+\n+    \/**\n+     * Returns a positive index (>0) for a well-formed region code.\n+     * Do not rely on a particular region->index mapping; it may change.\n+     * Returns 0 for ill-formed strings.\n+     *\/\n+    static int32_t indexForRegion(const char *region);\n+\n+    UBool isEquivalentTo(const LSR &other) const;\n+    UBool operator==(const LSR &other) const;\n+\n+    inline UBool operator!=(const LSR &other) const {\n+        return !operator==(other);\n+    }\n+\n+    LSR &setHashCode();\n+\n+private:\n+    void deleteOwned();\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ __LSR_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/lsr.h","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -36,1 +36,1 @@\n-     * @return TRUE if getApostropheMode()==UMSGPAT_APOS_DOUBLE_REQUIRED\n+     * @return true if getApostropheMode()==UMSGPAT_APOS_DOUBLE_REQUIRED\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/messageimpl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,21 +31,24 @@\n-\/\/----------------------------------------------------------------------------\n-\/\/ Code within that accesses shared static or global data should\n-\/\/ should instantiate a Mutex object while doing so. You should make your own\n-\/\/ private mutex where possible.\n-\n-\/\/ For example:\n-\/\/\n-\/\/ UMutex myMutex = U_MUTEX_INITIALIZER;\n-\/\/\n-\/\/ void Function(int arg1, int arg2)\n-\/\/ {\n-\/\/    static Object* foo;     \/\/ Shared read-write object\n-\/\/    Mutex mutex(&myMutex);  \/\/ or no args for the global lock\n-\/\/    foo->Method();\n-\/\/    \/\/ When 'mutex' goes out of scope and gets destroyed here, the lock is released\n-\/\/ }\n-\/\/\n-\/\/ Note:  Do NOT use the form 'Mutex mutex();' as that merely forward-declares a function\n-\/\/        returning a Mutex. This is a common mistake which silently slips through the\n-\/\/        compiler!!\n-\/\/\n+\/**\n+  * Mutex is a helper class for convenient locking and unlocking of a UMutex.\n+  *\n+  * Creating a local scope Mutex will lock a UMutex, holding the lock until the Mutex\n+  * goes out of scope.\n+  *\n+  *  If no UMutex is specified, the ICU global mutex is implied.\n+  *\n+  *  For example:\n+  *\n+  *  static UMutex myMutex;\n+  *\n+  *  void Function(int arg1, int arg2)\n+  *  {\n+  *     static Object* foo;      \/\/ Shared read-write object\n+  *     Mutex mutex(&myMutex);   \/\/ or no args for the global lock\n+  *     foo->Method();\n+  *     \/\/ When 'mutex' goes out of scope and gets destroyed here, the lock is released\n+  *  }\n+  *\n+  *  Note:  Do NOT use the form 'Mutex mutex();' as that merely forward-declares a function\n+  *         returning a Mutex. This is a common mistake which silently slips through the\n+  *         compiler!!\n+  *\/\n@@ -55,2 +58,6 @@\n-  inline Mutex(UMutex *mutex = NULL);\n-  inline ~Mutex();\n+    Mutex(UMutex *mutex = nullptr) : fMutex(mutex) {\n+        umtx_lock(fMutex);\n+    }\n+    ~Mutex() {\n+        umtx_unlock(fMutex);\n+    }\n@@ -58,2 +65,3 @@\n-private:\n-  UMutex   *fMutex;\n+    Mutex(const Mutex &other) = delete; \/\/ forbid assigning of this class\n+    Mutex &operator=(const Mutex &other) = delete; \/\/ forbid copying of this class\n+    void *operator new(size_t s) = delete;  \/\/ forbid heap allocation. Locals only.\n@@ -61,2 +69,2 @@\n-  Mutex(const Mutex &other); \/\/ forbid copying of this class\n-  Mutex &operator=(const Mutex &other); \/\/ forbid copying of this class\n+private:\n+    UMutex   *fMutex;\n@@ -65,10 +73,0 @@\n-inline Mutex::Mutex(UMutex *mutex)\n-  : fMutex(mutex)\n-{\n-  umtx_lock(fMutex);\n-}\n-\n-inline Mutex::~Mutex()\n-{\n-  umtx_unlock(fMutex);\n-}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/mutex.h","additions":35,"deletions":37,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-static const UVersionInfo norm2_nfc_data_dataVersion={0xc,1,0,0};\n+static const UVersionInfo norm2_nfc_data_dataVersion={0xd,0,0,0};\n@@ -18,2 +18,2 @@\n-0x50,0x4ae0,0x8738,0x8838,0x8838,0x8838,0x8838,0x8838,0xc0,0x300,0xadc,0x29d0,0x3c56,0xfc00,0x1282,0x3b8c,\n-0x3c24,0x3c56,0x300,0\n+0x50,0x4bac,0x8814,0x8914,0x8914,0x8914,0x8914,0x8914,0xc0,0x300,0xae2,0x29e0,0x3c66,0xfc00,0x1288,0x3b9c,\n+0x3c34,0x3c66,0x300,0\n@@ -22,1 +22,1 @@\n-static const uint16_t norm2_nfc_data_trieIndex[1712]={\n+static const uint16_t norm2_nfc_data_trieIndex[1746]={\n@@ -29,3 +29,3 @@\n-0x226,0x226,0xd4e,0x226,0xd78,0x226,0x226,0x226,0xdb4,0xdd4,0xe14,0x226,0xe52,0xe92,0xec6,0xef2,\n-0x808,0x226,0x226,0xf26,0x226,0x226,0x226,0xf66,0xfa6,0xfe6,0x1026,0x1066,0x10a6,0x10e6,0x1126,0x1166,\n-0x11a6,0x226,0x226,0x11d6,0x1207,0x226,0x1237,0x126a,0x12a7,0x12e6,0x1326,0x135c,0x138a,0x226,0x226,0x226,\n+0x226,0x226,0xd4e,0x226,0xd78,0x226,0x226,0x226,0xdb4,0xdd4,0xe14,0xe53,0xe8e,0xece,0xf02,0xf2e,\n+0x808,0x226,0x226,0xf62,0x226,0x226,0x226,0xfa2,0xfe2,0x1022,0x1062,0x10a2,0x10e2,0x1122,0x1162,0x11a2,\n+0x11e2,0x226,0x226,0x1212,0x1243,0x226,0x1273,0x12a6,0x12e3,0x1322,0x1362,0x1398,0x13c6,0x226,0x226,0x226,\n@@ -33,3 +33,3 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x13b5,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0xcbd,0x226,0x13d2,0x226,0x1412,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x1452,0x148c,0x14ca,0x150a,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x13f1,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0xcbd,0x226,0x140e,0x226,0x144e,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x148e,0x14c8,0x1506,0x1546,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n@@ -64,14 +64,14 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1549,0x1587,0x15a7,0x226,0x226,0x226,0x226,\n-0x15e1,0x226,0x226,0x161d,0x164f,0x167d,0x80c,0x1690,0x226,0x226,0x16a0,0x16e0,0x226,0x226,0x226,0x13e4,\n-0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,\n-0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,\n-0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,\n-0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,\n-0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,\n-0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,\n-0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,\n-0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,\n-0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,\n-0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,\n-0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x1734,0x1720,0x1728,0x1730,0x1738,0x1724,0x172c,0x176c,0x226,\n-0x17ac,0x17e7,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1585,0x15c3,0x15e3,0x226,0x226,0x226,0x226,\n+0x161d,0x226,0x226,0x1645,0x1677,0x16a5,0x80c,0x16b8,0x226,0x226,0x16c8,0x1708,0x226,0x226,0x226,0x1420,\n+0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,\n+0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,\n+0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,\n+0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,\n+0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,\n+0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,\n+0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,\n+0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,\n+0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,\n+0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,\n+0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x175c,0x1748,0x1750,0x1758,0x1760,0x174c,0x1754,0x1794,0x226,\n+0x17d4,0x180f,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n@@ -85,3 +85,3 @@\n-0x226,0x226,0x226,0x226,0x1827,0x1867,0x18a7,0x18e7,0x1927,0x1967,0x19a7,0x19e7,0x1a0a,0x1a4a,0x226,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1a6a,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x635,0x644,0x65a,0x679,0x68e,0x68e,0x68e,0x692,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x184f,0x188f,0x18cf,0x190f,0x194f,0x198f,0x19cf,0x1a0f,0x1a32,0x1a72,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1a92,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x655,0x664,0x67c,0x69b,0x6b0,0x6b0,0x6b0,0x6b4,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n@@ -91,1 +91,1 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1a9d,0x226,0x226,0x1aad,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1ac5,0x226,0x226,0x1ad5,0x226,0x226,0x226,0x226,\n@@ -93,10 +93,17 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1abd,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1ac7,0x54f,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x7eb,0x226,0x226,0x9ba,0x226,0x1ad7,\n-0x1ae4,0x1af0,0x226,0x226,0x226,0x226,0x414,0x226,0x1afb,0x1b0b,0x226,0x226,0x226,0x7e0,0x226,0x226,\n-0x226,0x226,0x1b1b,0x226,0x226,0x226,0x1b26,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x226,0x1b2d,0x226,0x226,0x226,0x226,0x1b38,0x1b47,0x8f6,0x1b55,0x412,0x226,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0x1b63,0x798,0x226,0x226,0x226,0x226,0x226,0x1b73,0x1b82,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x8d6,0x1b8a,0x1b9a,0x226,0x226,0x226,0x9ba,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1ba4,0x226,0x226,0x226,0x226,0x226,0x226,0x7e6,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1ba1,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1ae5,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x15d6,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x1aef,0x54f,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x7eb,0x226,0x226,\n+0x9ba,0x226,0x1aff,0x1b0c,0x1b18,0x226,0x226,0x226,0x226,0x414,0x226,0x1b23,0x1b33,0x226,0x226,0x226,\n+0x7e0,0x226,0x226,0x226,0x226,0x1b43,0x226,0x226,0x226,0x1b4e,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x1b55,0x226,0x226,0x226,0x226,0x1b60,0x1b6f,0x8f6,0x1b7d,0x412,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x1b8b,0x798,0x226,0x226,0x226,0x226,0x226,0x1b9b,0x1baa,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x8d6,0x1bb2,0x1bc2,0x226,\n+0x226,0x226,0x9ba,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1bcc,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x7e6,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1bc9,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1bdc,\n+0x7e0,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x84d,0x226,0x226,0x226,0x7ed,0x7ea,\n+0x226,0x226,0x226,0x226,0x7e8,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x9ba,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0xbd4,0x226,0x226,0x226,\n+0x226,0x7ea,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x1bec,0x226,0x226,0x226,0xefb,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n@@ -104,6 +111,1 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x84d,0x226,0x226,0x226,0x7ed,0x7ea,0x226,0x226,0x226,\n-0x226,0x7e8,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x9ba,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0xbd4,0x226,0x226,0x226,0x226,0x7ea,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1bb4,0x226,\n-0x226,0x226,0xebf,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1bb9,\n+0x226,0x226,0x226,0x226,0x226,0x1bfc,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1bfe,\n@@ -111,1 +113,1 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x1bc8,0x1bd8,0x1be6,0x1bf3,0x226,0x1bff,0x1c0d,0x1c1d,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x1c0d,0x1c1d,0x1c2b,0x1c38,0x226,0x1c44,0x1c52,0x1c62,0x226,0x226,\n@@ -113,3 +115,3 @@\n-0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1c2d,0x1c35,\n-0x1c43,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x226,0xebf,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x1c72,0x1c7a,\n+0x1c88,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0xefb,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n@@ -117,4 +119,4 @@\n-0x226,0x226,0x1c53,0x226,0x226,0x226,0x226,0x226,0x226,0x1c5f,0x226,0x226,0x226,0x226,0x226,0x226,\n-0x226,0x226,0x226,0x226,0x226,0x1c6f,0x1c7f,0x1c8f,0x1c9f,0x1caf,0x1cbf,0x1ccf,0x1cdf,0x1cef,0x1cff,0x1d0f,\n-0x1d1f,0x1d2f,0x1d3f,0x1d4f,0x1d5f,0x1d6f,0x1d7f,0x1d8f,0x1d9f,0x1daf,0x1dbf,0x1dcf,0x1ddf,0x1def,0x1dff,0x1e0f,\n-0x1e1f,0x1e2f,0x1e3f,0x1e4f,0x1e5f,0x1e6f,0x1e7f,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x1c98,0x226,0x226,0x226,0x226,0x226,0x226,0x1ca4,0x226,0x226,0x226,0x226,0x226,0x226,\n+0x226,0x226,0x226,0x226,0x226,0x1cb4,0x1cc4,0x1cd4,0x1ce4,0x1cf4,0x1d04,0x1d14,0x1d24,0x1d34,0x1d44,0x1d54,\n+0x1d64,0x1d74,0x1d84,0x1d94,0x1da4,0x1db4,0x1dc4,0x1dd4,0x1de4,0x1df4,0x1e04,0x1e14,0x1e24,0x1e34,0x1e44,0x1e54,\n+0x1e64,0x1e74,0x1e84,0x1e94,0x1ea4,0x1eb4,0x1ec4,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,0x226,\n@@ -122,3 +124,3 @@\n-0x226,0x226,0x226,0x226,0x226,0x408,0x428,0xc4,0xc4,0xc4,0x448,0x457,0x46a,0x486,0x4a3,0x4bf,\n-0x4dc,0x4f9,0x518,0x535,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,\n-0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x54f,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,\n+0x226,0x226,0x226,0x226,0x226,0x408,0x428,0xc4,0xc4,0xc4,0x448,0x457,0x46d,0x489,0x4a6,0x4c2,\n+0x4df,0x4fc,0x51b,0x538,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,\n+0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x552,0xc4,0x566,0xc4,0xc4,0xc4,0xc4,\n@@ -126,2 +128,2 @@\n-0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x566,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,\n-0xc4,0x571,0x58e,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x5ae,0x5c2,0xc4,0xc4,0x5d5,0xc4,0xc4,\n+0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x586,0xc4,0xc4,0xc4,0xc4,0xc4,\n+0xc4,0xc4,0xc4,0x591,0x5ae,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x5ce,0x5e2,0xc4,0xc4,0x5f5,\n@@ -129,1 +131,2 @@\n-0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0x5f5,0x615\n+0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,0xc4,\n+0x615,0x635\n@@ -132,1 +135,1 @@\n-static const uint16_t norm2_nfc_data_trieData[7824]={\n+static const uint16_t norm2_nfc_data_trieData[7892]={\n@@ -144,24 +147,24 @@\n-1,1,1,1,1,1,1,1,1,1,1,0x1284,0x128a,0xade,0x1290,0xaf4,\n-0xafe,0x5f4,0xb08,0x1296,0x129c,0xb12,0x12a2,0x12a8,0x12ae,0x12b4,0xb28,1,0x12ba,0x12c0,0x12c6,0xb32,\n-0xb48,0xb5a,1,0x5fc,0x12cc,0x12d2,0x12d8,0xb64,0x12de,1,1,0x12e4,0x12ea,0xb7a,0x12f0,0xb90,\n-0xb9a,0x600,0xba4,0x12f6,0x12fc,0xbae,0x1302,0x1308,0x130e,0x1314,0xbc4,1,0x131a,0x1320,0x1326,0xbce,\n-0xbe4,0xbf6,1,0x608,0x132c,0x1332,0x1338,0xc00,0x133e,1,0x1344,0x134a,0x1350,0xc16,0xc2c,0x1357,\n-0x135d,0x1362,0x1368,0x136e,0x1374,0x137a,0x1380,0x1386,0x138c,0x1392,0x1398,1,1,0xc42,0xc50,0x139e,\n-0x13a4,0x13aa,0x13b0,0x13b7,0x13bd,0x13c2,0x13c8,0x13ce,0x13d4,0x13da,0x13e0,0x13e6,0x13ec,0x13f3,0x13f9,0x13fe,\n-0x1404,1,1,0x140a,0x1410,0x1416,0x141c,0x1422,0x1428,0x142f,0x1435,0x143a,1,1,1,0x1441,\n-0x1447,0x144d,0x1453,1,0x1458,0x145e,0x1465,0x146b,0x1470,0x1476,1,1,1,0x147c,0x1482,0x1489,\n-0x148f,0x1494,0x149a,1,1,1,0xc5e,0xc6c,0x14a0,0x14a6,0x14ac,0x14b2,1,1,0x14b8,0x14be,\n-0x14c5,0x14cb,0x14d0,0x14d6,0xc7a,0xc84,0x14dc,0x14e2,0x14e9,0x14ef,0xc8e,0xc98,0x14f5,0x14fb,0x1500,0x1506,\n-1,1,0xca2,0xcac,0xcb6,0xcc0,0x150c,0x1512,0x1518,0x151e,0x1524,0x152a,0x1531,0x1537,0x153c,0x1542,\n-0x1548,0x154e,0x1554,0x155a,0x1560,0x1566,0x156c,0x1572,0x1578,0x60c,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0xcca,0xce4,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,0xcfe,0xd18,1,1,1,1,1,\n-1,0x610,1,1,1,1,1,1,1,1,1,1,1,1,1,0x157e,\n-0x1584,0x158a,0x1590,0x1596,0x159c,0x15a2,0x15a8,0x15b0,0x15ba,0x15c4,0x15ce,0x15d8,0x15e2,0x15ec,0x15f6,1,\n-0x1600,0x160a,0x1614,0x161e,0x1627,0x162d,1,1,0x1632,0x1638,0x163e,0x1644,0xd32,0xd3c,0x164d,0x1657,\n-0x165f,0x1665,0x166b,1,1,1,0x1670,0x1676,1,1,0x167c,0x1682,0x168a,0x1694,0x169d,0x16a3,\n-0x16a9,0x16af,0x16b4,0x16ba,0x16c0,0x16c6,0x16cc,0x16d2,0x16d8,0x16de,0x16e4,0x16ea,0x16f0,0x16f6,0x16fc,0x1702,\n-0x1708,0x170e,0x1714,0x171a,0x1720,0x1726,0x172c,0x1732,0x1738,0x173e,0x1744,0x174a,0x1750,0x1756,1,1,\n-0x175c,0x1762,1,1,1,1,1,1,0xd46,0xd50,0xd5a,0xd64,0x176a,0x1774,0x177e,0x1788,\n-0xd6e,0xd78,0x1792,0x179c,0x17a4,0x17aa,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,0x128a,0x1290,0xae4,0x1296,0xafa,\n+0xb04,0x5f4,0xb0e,0x129c,0x12a2,0xb18,0x12a8,0x12ae,0x12b4,0x12ba,0xb2e,1,0x12c0,0x12c6,0x12cc,0xb38,\n+0xb4e,0xb60,1,0x5fc,0x12d2,0x12d8,0x12de,0xb6a,0x12e4,1,1,0x12ea,0x12f0,0xb80,0x12f6,0xb96,\n+0xba0,0x600,0xbaa,0x12fc,0x1302,0xbb4,0x1308,0x130e,0x1314,0x131a,0xbca,1,0x1320,0x1326,0x132c,0xbd4,\n+0xbea,0xbfc,1,0x608,0x1332,0x1338,0x133e,0xc06,0x1344,1,0x134a,0x1350,0x1356,0xc1c,0xc32,0x135d,\n+0x1363,0x1368,0x136e,0x1374,0x137a,0x1380,0x1386,0x138c,0x1392,0x1398,0x139e,1,1,0xc48,0xc56,0x13a4,\n+0x13aa,0x13b0,0x13b6,0x13bd,0x13c3,0x13c8,0x13ce,0x13d4,0x13da,0x13e0,0x13e6,0x13ec,0x13f2,0x13f9,0x13ff,0x1404,\n+0x140a,1,1,0x1410,0x1416,0x141c,0x1422,0x1428,0x142e,0x1435,0x143b,0x1440,1,1,1,0x1447,\n+0x144d,0x1453,0x1459,1,0x145e,0x1464,0x146b,0x1471,0x1476,0x147c,1,1,1,0x1482,0x1488,0x148f,\n+0x1495,0x149a,0x14a0,1,1,1,0xc64,0xc72,0x14a6,0x14ac,0x14b2,0x14b8,1,1,0x14be,0x14c4,\n+0x14cb,0x14d1,0x14d6,0x14dc,0xc80,0xc8a,0x14e2,0x14e8,0x14ef,0x14f5,0xc94,0xc9e,0x14fb,0x1501,0x1506,0x150c,\n+1,1,0xca8,0xcb2,0xcbc,0xcc6,0x1512,0x1518,0x151e,0x1524,0x152a,0x1530,0x1537,0x153d,0x1542,0x1548,\n+0x154e,0x1554,0x155a,0x1560,0x1566,0x156c,0x1572,0x1578,0x157e,0x60c,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,0xcd0,0xcea,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,0xd04,0xd1e,1,1,1,1,1,\n+1,0x610,1,1,1,1,1,1,1,1,1,1,1,1,1,0x1584,\n+0x158a,0x1590,0x1596,0x159c,0x15a2,0x15a8,0x15ae,0x15b6,0x15c0,0x15ca,0x15d4,0x15de,0x15e8,0x15f2,0x15fc,1,\n+0x1606,0x1610,0x161a,0x1624,0x162d,0x1633,1,1,0x1638,0x163e,0x1644,0x164a,0xd38,0xd42,0x1653,0x165d,\n+0x1665,0x166b,0x1671,1,1,1,0x1676,0x167c,1,1,0x1682,0x1688,0x1690,0x169a,0x16a3,0x16a9,\n+0x16af,0x16b5,0x16ba,0x16c0,0x16c6,0x16cc,0x16d2,0x16d8,0x16de,0x16e4,0x16ea,0x16f0,0x16f6,0x16fc,0x1702,0x1708,\n+0x170e,0x1714,0x171a,0x1720,0x1726,0x172c,0x1732,0x1738,0x173e,0x1744,0x174a,0x1750,0x1756,0x175c,1,1,\n+0x1762,0x1768,1,1,1,1,1,1,0xd4c,0xd56,0xd60,0xd6a,0x1770,0x177a,0x1784,0x178e,\n+0xd74,0xd7e,0x1798,0x17a2,0x17aa,0x17b0,1,1,1,1,1,1,1,1,1,1,\n@@ -178,1 +181,1 @@\n-0xffb8,0xffcc,0xffcc,0xffcc,0x3c26,0x3c2c,0xfdcc,0x3c32,0x3c38,0xfde0,0xffcc,0xffb8,0xffb8,0xffb8,0xffcc,0xffcc,\n+0xffb8,0xffcc,0xffcc,0xffcc,0x3c36,0x3c3c,0xfdcc,0x3c42,0x3c48,0xfde0,0xffcc,0xffb8,0xffb8,0xffb8,0xffcc,0xffcc,\n@@ -181,7 +184,7 @@\n-0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,1,0x29d1,1,1,1,1,1,1,1,\n-1,1,0x29d5,1,1,1,1,1,0x17b1,0x17b7,0x29d9,0x17bd,0x17c3,0x17c9,1,0x17cf,\n-1,0x17d5,0x17db,0x17e3,0x618,1,1,1,0x634,1,0x644,1,0x658,1,1,1,\n-1,1,0x674,1,0x684,1,1,1,0x688,1,1,1,0x6a0,0x17eb,0x17f1,0xd82,\n-0x17f7,0xd8c,0x17fd,0x1805,0x6b4,1,1,1,0x6d4,1,0x6e4,1,0x6fc,1,1,1,\n-1,1,0x71c,1,0x72c,1,1,1,0x734,1,1,1,0x754,0xd96,0xda8,0x180d,\n-0x1813,0xdba,1,1,1,0x76c,0x1819,0x181f,1,1,1,1,1,1,1,1,\n+0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,1,0x29e1,1,1,1,1,1,1,1,\n+1,1,0x29e5,1,1,1,1,1,0x17b7,0x17bd,0x29e9,0x17c3,0x17c9,0x17cf,1,0x17d5,\n+1,0x17db,0x17e1,0x17e9,0x618,1,1,1,0x634,1,0x644,1,0x658,1,1,1,\n+1,1,0x674,1,0x684,1,1,1,0x688,1,1,1,0x6a0,0x17f1,0x17f7,0xd88,\n+0x17fd,0xd92,0x1803,0x180b,0x6b4,1,1,1,0x6d4,1,0x6e4,1,0x6fc,1,1,1,\n+1,1,0x71c,1,0x72c,1,1,1,0x734,1,1,1,0x754,0xd9c,0xdae,0x1813,\n+0x1819,0xdc0,1,1,1,0x76c,0x181f,0x1825,1,1,1,1,1,1,1,1,\n@@ -190,2 +193,2 @@\n-1,1,1,0x1825,0x182b,1,0x1831,1,1,0x774,0x1837,1,1,1,1,0x183d,\n-0x1843,0x1849,1,0x778,1,1,0x780,1,0x784,0x790,0x798,0x79c,0x184f,0x7ac,1,1,\n+1,1,1,0x182b,0x1831,1,0x1837,1,1,0x774,0x183d,1,1,1,1,0x1843,\n+0x1849,0x184f,1,0x778,1,1,0x780,1,0x784,0x790,0x798,0x79c,0x1855,0x7ac,1,1,\n@@ -193,1 +196,1 @@\n-0x7cc,1,1,0x7d0,1,1,0x7d8,1,0x7dc,0x7e8,0x7f0,0x7f4,0x1855,0x804,1,1,\n+0x7cc,1,1,0x7d0,1,1,0x7d8,1,0x7dc,0x7e8,0x7f0,0x7f4,0x185b,0x804,1,1,\n@@ -195,3 +198,3 @@\n-1,1,0x185b,0x1861,1,0x1867,1,1,0x828,0x186d,1,1,1,1,0x1873,0x1879,\n-0x187f,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0x82c,0x830,0x1885,0x188b,1,1,1,1,1,1,\n+1,1,0x1861,0x1867,1,0x186d,1,1,0x828,0x1873,1,1,1,1,0x1879,0x187f,\n+0x1885,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,0x82c,0x830,0x188b,0x1891,1,1,1,1,1,1,\n@@ -201,5 +204,5 @@\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x1891,\n-0x1897,1,1,1,1,1,1,1,1,1,1,1,1,1,0x189d,0x18a3,\n-0x18a9,0x18af,1,1,0x18b5,0x18bb,0x834,0x838,0x18c1,0x18c7,0x18cd,0x18d3,0x18d9,0x18df,1,1,\n-0x18e5,0x18eb,0x18f1,0x18f7,0x18fd,0x1903,0x83c,0x840,0x1909,0x190f,0x1915,0x191b,0x1921,0x1927,0x192d,0x1933,\n-0x1939,0x193f,0x1945,0x194b,1,1,0x1951,0x1957,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x1897,\n+0x189d,1,1,1,1,1,1,1,1,1,1,1,1,1,0x18a3,0x18a9,\n+0x18af,0x18b5,1,1,0x18bb,0x18c1,0x834,0x838,0x18c7,0x18cd,0x18d3,0x18d9,0x18df,0x18e5,1,1,\n+0x18eb,0x18f1,0x18f7,0x18fd,0x1903,0x1909,0x83c,0x840,0x190f,0x1915,0x191b,0x1921,0x1927,0x192d,0x1933,0x1939,\n+0x193f,0x1945,0x194b,0x1951,1,1,0x1957,0x195d,1,1,1,1,1,1,1,1,\n@@ -214,1 +217,1 @@\n-0xfe3c,0xfe3e,0xfe40,1,1,1,1,1,1,1,0x195c,0x1962,0x1969,0x196f,0x1975,0x844,\n+0xfe3c,0xfe3e,0xfe40,1,1,1,1,1,1,1,0x1962,0x1968,0x196f,0x1975,0x197b,0x844,\n@@ -220,2 +223,2 @@\n-0x197b,0x858,0x1981,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,0x85c,0x1987,1,0x860,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,0xffcc,\n+0x1981,0x858,0x1987,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0x85c,0x198d,1,0x860,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,0xffcc,\n@@ -244,2 +247,2 @@\n-1,1,1,1,0x864,0x198d,1,1,1,1,1,1,0x868,0x1993,1,0x86c,\n-0x1999,1,1,1,1,1,1,1,0xfc0e,1,1,1,1,1,1,1,\n+1,1,1,1,0x864,0x1993,1,1,1,1,1,1,0x868,0x1999,1,0x86c,\n+0x199f,1,1,1,1,1,1,1,0xfc0e,1,1,1,1,1,1,1,\n@@ -247,1 +250,1 @@\n-1,0x29dc,0x29e2,0x29e8,0x29ee,0x29f4,0x29fa,0x2a00,0x2a06,1,1,1,1,1,1,1,\n+1,0x29ec,0x29f2,0x29f8,0x29fe,0x2a04,0x2a0a,0x2a10,0x2a16,1,1,1,1,1,1,1,\n@@ -252,2 +255,2 @@\n-1,1,1,0x199f,0x19a5,0xfe12,1,1,1,1,1,1,1,1,1,0xfc00,\n-1,1,1,1,0x2a0c,0x2a12,1,0x2a18,1,1,1,1,1,1,1,1,\n+1,1,1,0x19a5,0x19ab,0xfe12,1,1,1,1,1,1,1,1,1,0xfc00,\n+1,1,1,1,0x2a1c,0x2a22,1,0x2a28,1,1,1,1,1,1,1,1,\n@@ -258,1 +261,1 @@\n-1,1,1,1,1,1,1,1,1,1,0x2a1e,1,1,0x2a24,1,1,\n+1,1,1,1,1,1,1,1,1,1,0x2a2e,1,1,0x2a34,1,1,\n@@ -260,2 +263,2 @@\n-1,0xfe12,1,1,1,1,1,1,1,1,1,1,1,0x2a2a,0x2a30,0x2a36,\n-1,1,0x2a3c,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,0xfe12,1,1,1,1,1,1,1,1,1,1,1,0x2a3a,0x2a40,0x2a46,\n+1,1,0x2a4c,1,1,1,1,1,1,1,1,1,1,1,1,1,\n@@ -269,2 +272,2 @@\n-0x878,0x19ab,1,1,0x19b1,0x19b7,0xfe12,1,1,1,1,1,1,1,1,0xfc00,\n-0xfc00,1,1,1,1,0x2a42,0x2a48,1,1,1,1,1,1,1,1,1,\n+0x878,0x19b1,1,1,0x19b7,0x19bd,0xfe12,1,1,1,1,1,1,1,1,0xfc00,\n+0xfc00,1,1,1,1,0x2a52,0x2a58,1,1,1,1,1,1,1,1,1,\n@@ -272,1 +275,1 @@\n-1,1,1,1,1,1,1,1,1,0x884,1,0x19bd,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,0x884,1,0x19c3,1,1,1,1,\n@@ -276,1 +279,1 @@\n-0x19c3,0x19c9,0x19cf,0xfe12,1,1,1,1,1,1,1,1,1,0xfc00,1,1,\n+0x19c9,0x19cf,0x19d5,0xfe12,1,1,1,1,1,1,1,1,1,0xfc00,1,1,\n@@ -279,1 +282,1 @@\n-1,1,1,1,1,1,0x894,1,0x19d5,1,1,1,1,0xfe12,1,1,\n+1,1,1,1,1,1,0x894,1,0x19db,1,1,1,1,0xfe12,1,1,\n@@ -284,2 +287,2 @@\n-1,1,1,0xfe0e,1,1,0x898,0x19db,1,0xfc00,1,1,1,0x89c,0x19e1,0x19e7,\n-1,0xdc4,0x19ef,1,0xfe12,1,1,1,1,1,1,1,0xfc00,0xfc00,1,1,\n+1,1,1,0xfe0e,1,1,0x898,0x19e1,1,0xfc00,1,1,1,0x89c,0x19e7,0x19ed,\n+1,0xdca,0x19f5,1,0xfe12,1,1,1,1,1,1,1,0xfc00,0xfc00,1,1,\n@@ -290,1 +293,1 @@\n-1,1,1,0x8a8,0x8b0,1,1,0x19f7,0x19fd,0x1a03,0xfe12,1,1,1,1,1,\n+1,1,1,0x8a8,0x8b0,1,1,0x19fd,0x1a03,0x1a09,0xfe12,1,1,1,1,1,\n@@ -294,2 +297,2 @@\n-1,1,0xfc00,1,1,1,1,1,1,1,1,1,0x8b4,0x1a09,1,0xdce,\n-0x1a11,0x1a19,0xfc00,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xfc00,1,1,1,1,1,1,1,1,1,0x8b4,0x1a0f,1,0xdd4,\n+0x1a17,0x1a1f,0xfc00,1,1,1,1,1,1,1,1,1,1,1,1,1,\n@@ -309,9 +312,9 @@\n-1,1,0xffb8,1,0xffb8,1,0xffb0,1,1,1,1,1,1,0x2a4f,1,1,\n-1,1,1,1,1,1,1,0x2a55,1,1,1,1,0x2a5b,1,1,1,\n-1,0x2a61,1,1,1,1,0x2a67,1,1,1,1,1,1,1,1,1,\n-1,1,1,0x2a6d,1,1,1,1,1,1,1,0xff02,0xff04,0x3c40,0xff08,0x3c48,\n-0x2a72,1,0x2a78,1,0xff04,0xff04,0xff04,0xff04,1,1,0xff04,0x3c50,0xffcc,0xffcc,0xfe12,1,\n-0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,0x2a7f,1,1,\n-1,1,1,1,1,1,1,0x2a85,1,1,1,1,0x2a8b,1,1,1,\n-1,0x2a91,1,1,1,1,0x2a97,1,1,1,1,1,1,1,1,1,\n-1,1,1,0x2a9d,1,1,1,1,1,1,0xffb8,1,1,1,1,1,\n+1,1,0xffb8,1,0xffb8,1,0xffb0,1,1,1,1,1,1,0x2a5f,1,1,\n+1,1,1,1,1,1,1,0x2a65,1,1,1,1,0x2a6b,1,1,1,\n+1,0x2a71,1,1,1,1,0x2a77,1,1,1,1,1,1,1,1,1,\n+1,1,1,0x2a7d,1,1,1,1,1,1,1,0xff02,0xff04,0x3c50,0xff08,0x3c58,\n+0x2a82,1,0x2a88,1,0xff04,0xff04,0xff04,0xff04,1,1,0xff04,0x3c60,0xffcc,0xffcc,0xfe12,1,\n+0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,0x2a8f,1,1,\n+1,1,1,1,1,1,1,0x2a95,1,1,1,1,0x2a9b,1,1,1,\n+1,0x2aa1,1,1,1,1,0x2aa7,1,1,1,1,1,1,1,1,1,\n+1,1,1,0x2aad,1,1,1,1,1,1,0xffb8,1,1,1,1,1,\n@@ -321,1 +324,1 @@\n-1,1,1,1,0x8c0,0x1a1f,1,1,1,1,1,1,1,0xfc00,1,1,\n+1,1,1,1,0x8c0,0x1a25,1,1,1,1,1,1,1,0xfc00,1,1,\n@@ -362,2 +365,1 @@\n-0xffcc,0xffb8,1,1,1,1,1,0x8c4,0x1a25,0x8c8,0x1a2b,0x8cc,0x1a31,0x8d0,0x1a37,0x8d4,\n-0x1a3d,1,1,0x8d8,0x1a43,1,1,1,1,1,1,1,1,1,1,1,\n+0xffcc,0xffb8,1,0xffb8,1,1,1,1,1,1,1,1,1,1,1,1,\n@@ -365,2 +367,0 @@\n-1,1,1,1,1,1,0xfe0e,0xfc00,1,1,1,1,0x8dc,0x1a49,0x8e0,0x1a4f,\n-0x8e4,0x8e8,0x1a55,0x1a5b,0x8ec,0x1a61,0xfe12,1,1,1,1,1,1,1,1,1,\n@@ -368,2 +368,0 @@\n-1,1,1,1,1,1,1,1,1,1,1,1,1,0xffcc,0xffb8,0xffcc,\n-0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,\n@@ -371,0 +369,10 @@\n+1,1,1,0x8c4,0x1a2b,0x8c8,0x1a31,0x8cc,0x1a37,0x8d0,0x1a3d,0x8d4,0x1a43,1,1,0x8d8,\n+0x1a49,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xfe0e,0xfc00,1,1,1,1,0x8dc,0x1a4f,0x8e0,0x1a55,0x8e4,0x8e8,0x1a5b,0x1a61,\n+0x8ec,0x1a67,0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,0xffcc,0xffb8,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n+0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,0xfe12,0xfe12,1,1,\n@@ -372,1 +380,0 @@\n-0xfe12,0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n@@ -374,7 +381,7 @@\n-1,1,1,1,1,1,1,1,0xfe0e,1,1,1,1,1,1,1,\n-1,1,1,1,0xfe12,0xfe12,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,1,0xfe02,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,\n-0xffcc,0xffcc,0xffb8,0xffb8,0xffb8,0xffb8,0xffcc,1,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,1,\n-1,1,1,0xffb8,1,1,1,1,1,1,0xffcc,1,1,1,0xffcc,0xffcc,\n-1,1,1,1,1,1,0xffcc,0xffcc,0xffb8,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n-0xffb8,0xffcc,0xffcc,0xffd4,0xffac,0xffb8,0xff94,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n+1,1,1,1,0xfe0e,1,1,1,1,1,1,1,1,1,1,1,\n+0xfe12,0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xffcc,0xffcc,0xffcc,1,0xfe02,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffcc,0xffcc,0xffb8,0xffb8,\n+0xffb8,0xffb8,0xffcc,1,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,1,1,1,1,0xffb8,\n+1,1,1,1,1,1,0xffcc,1,1,1,0xffcc,0xffcc,1,1,1,1,\n+1,1,0xffcc,0xffcc,0xffb8,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffb8,0xffcc,0xffcc,0xffd4,\n+0xffac,0xffb8,0xff94,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n@@ -382,75 +389,74 @@\n-0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffd0,0xffc8,0xffc8,0xffb8,\n-1,0xffcc,0xffd2,0xffb8,0xffcc,0xffb8,0x1a66,0x1a6c,0x1a72,0x1a78,0x1a7f,0x1a85,0x1a8b,0x1a91,0x1a99,0x1aa3,\n-0x1aaa,0x1ab0,0x1ab6,0x1abc,0x1ac2,0x1ac8,0x1acf,0x1ad5,0x1ada,0x1ae0,0x1ae8,0x1af2,0x1afc,0x1b06,0x1b0e,0x1b14,\n-0x1b1a,0x1b20,0x1b29,0x1b33,0x1b3b,0x1b41,0x1b46,0x1b4c,0x1b52,0x1b58,0x1b5e,0x1b64,0x1b6a,0x1b70,0x1b77,0x1b7d,\n-0x1b82,0x1b88,0x1b8e,0x1b94,0x1b9c,0x1ba6,0x1bae,0x1bb4,0x1bba,0x1bc0,0x1bc6,0x1bcc,0xdd8,0xde2,0x1bd4,0x1bde,\n-0x1be6,0x1bec,0x1bf2,0x1bf8,0x1bfe,0x1c04,0x1c0a,0x1c10,0x1c17,0x1c1d,0x1c22,0x1c28,0x1c2e,0x1c34,0x1c3a,0x1c40,\n-0x1c46,0x1c4c,0x1c54,0x1c5e,0x1c68,0x1c72,0x1c7c,0x1c86,0x1c90,0x1c9a,0x1ca3,0x1ca9,0x1caf,0x1cb5,0x1cba,0x1cc0,\n-0xdec,0xdf6,0x1cc8,0x1cd2,0x1cda,0x1ce0,0x1ce6,0x1cec,0xe00,0xe0a,0x1cf4,0x1cfe,0x1d08,0x1d12,0x1d1c,0x1d26,\n-0x1d2e,0x1d34,0x1d3a,0x1d40,0x1d46,0x1d4c,0x1d52,0x1d58,0x1d5e,0x1d64,0x1d6a,0x1d70,0x1d76,0x1d7c,0x1d84,0x1d8e,\n-0x1d98,0x1da2,0x1daa,0x1db0,0x1db7,0x1dbd,0x1dc2,0x1dc8,0x1dce,0x1dd4,0x1dda,0x1de0,0x1de6,0x1dec,0x1df3,0x1df9,\n-0x1dff,0x1e05,0x1e0b,0x1e11,0x1e16,0x1e1c,0x1e22,0x1e28,0x1e2f,0x1e35,0x1e3b,0x1e41,0x1e46,0x1e4c,0x1e52,0x1e58,\n-1,0x1e5f,1,1,1,1,0xe14,0xe22,0x1e64,0x1e6a,0x1e72,0x1e7c,0x1e86,0x1e90,0x1e9a,0x1ea4,\n-0x1eae,0x1eb8,0x1ec2,0x1ecc,0x1ed6,0x1ee0,0x1eea,0x1ef4,0x1efe,0x1f08,0x1f12,0x1f1c,0x1f26,0x1f30,0xe30,0xe3a,\n-0x1f38,0x1f3e,0x1f44,0x1f4a,0x1f52,0x1f5c,0x1f66,0x1f70,0x1f7a,0x1f84,0x1f8e,0x1f98,0x1fa2,0x1fac,0x1fb4,0x1fba,\n-0x1fc0,0x1fc6,0xe44,0xe4e,0x1fcc,0x1fd2,0x1fda,0x1fe4,0x1fee,0x1ff8,0x2002,0x200c,0x2016,0x2020,0x202a,0x2034,\n-0x203e,0x2048,0x2052,0x205c,0x2066,0x2070,0x207a,0x2084,0x208e,0x2098,0x20a0,0x20a6,0x20ac,0x20b2,0x20ba,0x20c4,\n-0x20ce,0x20d8,0x20e2,0x20ec,0x20f6,0x2100,0x210a,0x2114,0x211c,0x2122,0x2129,0x212f,0x2134,0x213a,0x2140,0x2146,\n-1,1,1,1,1,1,0xe58,0xe6e,0xe86,0xe94,0xea2,0xeb0,0xebe,0xecc,0xed8,0xeee,\n-0xf06,0xf14,0xf22,0xf30,0xf3e,0xf4c,0xf58,0xf66,0x214f,0x2159,0x2163,0x216d,1,1,0xf74,0xf82,\n-0x2177,0x2181,0x218b,0x2195,1,1,0xf90,0xfa6,0xfbe,0xfcc,0xfda,0xfe8,0xff6,0x1004,0x1010,0x1026,\n-0x103e,0x104c,0x105a,0x1068,0x1076,0x1084,0x1090,0x10a2,0x219f,0x21a9,0x21b3,0x21bd,0x21c7,0x21d1,0x10b4,0x10c6,\n-0x21db,0x21e5,0x21ef,0x21f9,0x2203,0x220d,0x10d8,0x10e6,0x2217,0x2221,0x222b,0x2235,1,1,0x10f4,0x1102,\n-0x223f,0x2249,0x2253,0x225d,1,1,0x1110,0x1122,0x2267,0x2271,0x227b,0x2285,0x228f,0x2299,1,0x1134,\n-1,0x22a3,1,0x22ad,1,0x22b7,0x1146,0x115c,0x1174,0x1182,0x1190,0x119e,0x11ac,0x11ba,0x11c6,0x11dc,\n-0x11f4,0x1202,0x1210,0x121e,0x122c,0x123a,0x1246,0x3b8e,0x22bf,0x3b96,0x1250,0x3b9e,0x22c5,0x3ba6,0x22cb,0x3bae,\n-0x22d1,0x3bb6,0x125a,0x3bbe,1,1,0x22d8,0x22e2,0x22f1,0x2301,0x2311,0x2321,0x2331,0x2341,0x234c,0x2356,\n-0x2365,0x2375,0x2385,0x2395,0x23a5,0x23b5,0x23c0,0x23ca,0x23d9,0x23e9,0x23f9,0x2409,0x2419,0x2429,0x2434,0x243e,\n-0x244d,0x245d,0x246d,0x247d,0x248d,0x249d,0x24a8,0x24b2,0x24c1,0x24d1,0x24e1,0x24f1,0x2501,0x2511,0x251c,0x2526,\n-0x2535,0x2545,0x2555,0x2565,0x2575,0x2585,0x258f,0x2595,0x259d,0x25a4,0x25ad,1,0x1264,0x25b7,0x25bf,0x25c5,\n-0x25cb,0x3bc6,0x25d0,1,0x2aa2,0x8f0,1,0x25d7,0x25df,0x25e6,0x25ef,1,0x126e,0x25f9,0x2601,0x3bce,\n-0x2607,0x3bd6,0x260c,0x2613,0x2619,0x261f,0x2625,0x262b,0x2633,0x3be0,1,1,0x263b,0x2643,0x264b,0x2651,\n-0x2657,0x3bea,1,0x265d,0x2663,0x2669,0x266f,0x2675,0x267d,0x3bf4,0x2685,0x268b,0x2691,0x2699,0x26a1,0x26a7,\n-0x26ad,0x3bfe,0x26b3,0x26b9,0x3c06,0x2aa7,1,1,0x26c1,0x26c8,0x26d1,1,0x1278,0x26db,0x26e3,0x3c0e,\n-0x26e9,0x3c16,0x26ee,0x2aab,0x8fc,1,0xfa09,0xfa09,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0xffcc,0xffcc,0xfe02,0xfe02,0xffcc,0xffcc,0xffcc,0xffcc,0xfe02,0xfe02,\n-0xfe02,0xffcc,0xffcc,1,1,1,1,0xffcc,1,1,1,0xfe02,0xfe02,0xffcc,0xffb8,0xffcc,\n-0xfe02,0xfe02,0xffb8,0xffb8,0xffb8,0xffb8,0xffcc,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,0x2aae,1,1,\n-1,0x2ab2,0x3c1e,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0x908,1,0x90c,1,0x910,1,1,1,1,\n-1,0x26f5,0x26fb,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,0x2701,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0x2707,0x270d,0x2713,0x914,1,0x918,1,0x91c,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0x920,0x2719,1,1,1,0x924,\n-0x271f,1,0x928,0x2725,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0x92c,0x272b,0x930,0x2731,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,0x934,1,1,1,0x2737,1,0x938,0x273d,0x93c,1,0x2743,0x940,0x2749,\n-1,1,1,0x944,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0x274f,0x948,0x2755,1,0x94c,0x950,1,1,1,1,\n-1,1,1,0x275b,0x2761,0x2767,0x276d,0x2773,0x954,0x958,0x2779,0x277f,0x95c,0x960,0x2785,0x278b,\n-0x964,0x968,0x96c,0x970,1,1,0x2791,0x2797,0x974,0x978,0x279d,0x27a3,0x97c,0x980,0x27a9,0x27af,\n-1,1,1,1,1,1,1,0x984,0x988,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,0x98c,1,1,1,1,1,0x990,0x994,\n-1,0x998,0x27b5,0x27bb,0x27c1,0x27c7,1,1,0x99c,0x9a0,0x9a4,0x9a8,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,0x27cd,0x27d3,0x27d9,0x27df,\n-1,1,1,1,1,1,0x27e5,0x27eb,0x27f1,0x27f7,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,0x2ab7,0x2abb,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,0x2abf,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n+0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffd0,0xffc8,0xffc8,0xffb8,1,0xffcc,0xffd2,0xffb8,\n+0xffcc,0xffb8,0x1a6c,0x1a72,0x1a78,0x1a7e,0x1a85,0x1a8b,0x1a91,0x1a97,0x1a9f,0x1aa9,0x1ab0,0x1ab6,0x1abc,0x1ac2,\n+0x1ac8,0x1ace,0x1ad5,0x1adb,0x1ae0,0x1ae6,0x1aee,0x1af8,0x1b02,0x1b0c,0x1b14,0x1b1a,0x1b20,0x1b26,0x1b2f,0x1b39,\n+0x1b41,0x1b47,0x1b4c,0x1b52,0x1b58,0x1b5e,0x1b64,0x1b6a,0x1b70,0x1b76,0x1b7d,0x1b83,0x1b88,0x1b8e,0x1b94,0x1b9a,\n+0x1ba2,0x1bac,0x1bb4,0x1bba,0x1bc0,0x1bc6,0x1bcc,0x1bd2,0xdde,0xde8,0x1bda,0x1be4,0x1bec,0x1bf2,0x1bf8,0x1bfe,\n+0x1c04,0x1c0a,0x1c10,0x1c16,0x1c1d,0x1c23,0x1c28,0x1c2e,0x1c34,0x1c3a,0x1c40,0x1c46,0x1c4c,0x1c52,0x1c5a,0x1c64,\n+0x1c6e,0x1c78,0x1c82,0x1c8c,0x1c96,0x1ca0,0x1ca9,0x1caf,0x1cb5,0x1cbb,0x1cc0,0x1cc6,0xdf2,0xdfc,0x1cce,0x1cd8,\n+0x1ce0,0x1ce6,0x1cec,0x1cf2,0xe06,0xe10,0x1cfa,0x1d04,0x1d0e,0x1d18,0x1d22,0x1d2c,0x1d34,0x1d3a,0x1d40,0x1d46,\n+0x1d4c,0x1d52,0x1d58,0x1d5e,0x1d64,0x1d6a,0x1d70,0x1d76,0x1d7c,0x1d82,0x1d8a,0x1d94,0x1d9e,0x1da8,0x1db0,0x1db6,\n+0x1dbd,0x1dc3,0x1dc8,0x1dce,0x1dd4,0x1dda,0x1de0,0x1de6,0x1dec,0x1df2,0x1df9,0x1dff,0x1e05,0x1e0b,0x1e11,0x1e17,\n+0x1e1c,0x1e22,0x1e28,0x1e2e,0x1e35,0x1e3b,0x1e41,0x1e47,0x1e4c,0x1e52,0x1e58,0x1e5e,1,0x1e65,1,1,\n+1,1,0xe1a,0xe28,0x1e6a,0x1e70,0x1e78,0x1e82,0x1e8c,0x1e96,0x1ea0,0x1eaa,0x1eb4,0x1ebe,0x1ec8,0x1ed2,\n+0x1edc,0x1ee6,0x1ef0,0x1efa,0x1f04,0x1f0e,0x1f18,0x1f22,0x1f2c,0x1f36,0xe36,0xe40,0x1f3e,0x1f44,0x1f4a,0x1f50,\n+0x1f58,0x1f62,0x1f6c,0x1f76,0x1f80,0x1f8a,0x1f94,0x1f9e,0x1fa8,0x1fb2,0x1fba,0x1fc0,0x1fc6,0x1fcc,0xe4a,0xe54,\n+0x1fd2,0x1fd8,0x1fe0,0x1fea,0x1ff4,0x1ffe,0x2008,0x2012,0x201c,0x2026,0x2030,0x203a,0x2044,0x204e,0x2058,0x2062,\n+0x206c,0x2076,0x2080,0x208a,0x2094,0x209e,0x20a6,0x20ac,0x20b2,0x20b8,0x20c0,0x20ca,0x20d4,0x20de,0x20e8,0x20f2,\n+0x20fc,0x2106,0x2110,0x211a,0x2122,0x2128,0x212f,0x2135,0x213a,0x2140,0x2146,0x214c,1,1,1,1,\n+1,1,0xe5e,0xe74,0xe8c,0xe9a,0xea8,0xeb6,0xec4,0xed2,0xede,0xef4,0xf0c,0xf1a,0xf28,0xf36,\n+0xf44,0xf52,0xf5e,0xf6c,0x2155,0x215f,0x2169,0x2173,1,1,0xf7a,0xf88,0x217d,0x2187,0x2191,0x219b,\n+1,1,0xf96,0xfac,0xfc4,0xfd2,0xfe0,0xfee,0xffc,0x100a,0x1016,0x102c,0x1044,0x1052,0x1060,0x106e,\n+0x107c,0x108a,0x1096,0x10a8,0x21a5,0x21af,0x21b9,0x21c3,0x21cd,0x21d7,0x10ba,0x10cc,0x21e1,0x21eb,0x21f5,0x21ff,\n+0x2209,0x2213,0x10de,0x10ec,0x221d,0x2227,0x2231,0x223b,1,1,0x10fa,0x1108,0x2245,0x224f,0x2259,0x2263,\n+1,1,0x1116,0x1128,0x226d,0x2277,0x2281,0x228b,0x2295,0x229f,1,0x113a,1,0x22a9,1,0x22b3,\n+1,0x22bd,0x114c,0x1162,0x117a,0x1188,0x1196,0x11a4,0x11b2,0x11c0,0x11cc,0x11e2,0x11fa,0x1208,0x1216,0x1224,\n+0x1232,0x1240,0x124c,0x3b9e,0x22c5,0x3ba6,0x1256,0x3bae,0x22cb,0x3bb6,0x22d1,0x3bbe,0x22d7,0x3bc6,0x1260,0x3bce,\n+1,1,0x22de,0x22e8,0x22f7,0x2307,0x2317,0x2327,0x2337,0x2347,0x2352,0x235c,0x236b,0x237b,0x238b,0x239b,\n+0x23ab,0x23bb,0x23c6,0x23d0,0x23df,0x23ef,0x23ff,0x240f,0x241f,0x242f,0x243a,0x2444,0x2453,0x2463,0x2473,0x2483,\n+0x2493,0x24a3,0x24ae,0x24b8,0x24c7,0x24d7,0x24e7,0x24f7,0x2507,0x2517,0x2522,0x252c,0x253b,0x254b,0x255b,0x256b,\n+0x257b,0x258b,0x2595,0x259b,0x25a3,0x25aa,0x25b3,1,0x126a,0x25bd,0x25c5,0x25cb,0x25d1,0x3bd6,0x25d6,1,\n+0x2ab2,0x8f0,1,0x25dd,0x25e5,0x25ec,0x25f5,1,0x1274,0x25ff,0x2607,0x3bde,0x260d,0x3be6,0x2612,0x2619,\n+0x261f,0x2625,0x262b,0x2631,0x2639,0x3bf0,1,1,0x2641,0x2649,0x2651,0x2657,0x265d,0x3bfa,1,0x2663,\n+0x2669,0x266f,0x2675,0x267b,0x2683,0x3c04,0x268b,0x2691,0x2697,0x269f,0x26a7,0x26ad,0x26b3,0x3c0e,0x26b9,0x26bf,\n+0x3c16,0x2ab7,1,1,0x26c7,0x26ce,0x26d7,1,0x127e,0x26e1,0x26e9,0x3c1e,0x26ef,0x3c26,0x26f4,0x2abb,\n+0x8fc,1,0xfa09,0xfa09,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xffcc,0xffcc,0xfe02,0xfe02,0xffcc,0xffcc,0xffcc,0xffcc,0xfe02,0xfe02,0xfe02,0xffcc,0xffcc,1,\n+1,1,1,0xffcc,1,1,1,0xfe02,0xfe02,0xffcc,0xffb8,0xffcc,0xfe02,0xfe02,0xffb8,0xffb8,\n+0xffb8,0xffb8,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,0x2abe,1,1,1,0x2ac2,0x3c2e,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,0x908,1,0x90c,1,0x910,1,1,1,1,1,0x26fb,0x2701,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,0x2707,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,0x270d,0x2713,0x2719,0x914,1,0x918,1,0x91c,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,0x920,0x271f,1,1,1,0x924,0x2725,1,0x928,0x272b,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,0x92c,0x2731,0x930,0x2737,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x934,\n+1,1,1,0x273d,1,0x938,0x2743,0x93c,1,0x2749,0x940,0x274f,1,1,1,0x944,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0x2755,0x948,0x275b,1,0x94c,0x950,1,1,1,1,1,1,1,0x2761,\n+0x2767,0x276d,0x2773,0x2779,0x954,0x958,0x277f,0x2785,0x95c,0x960,0x278b,0x2791,0x964,0x968,0x96c,0x970,\n+1,1,0x2797,0x279d,0x974,0x978,0x27a3,0x27a9,0x97c,0x980,0x27af,0x27b5,1,1,1,1,\n+1,1,1,0x984,0x988,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,0x98c,1,1,1,1,1,0x990,0x994,1,0x998,0x27bb,0x27c1,\n+0x27c7,0x27cd,1,1,0x99c,0x9a0,0x9a4,0x9a8,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0x27d3,0x27d9,0x27df,0x27e5,1,1,1,1,\n+1,1,0x27eb,0x27f1,0x27f7,0x27fd,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x2ac7,\n+0x2acb,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,0x2acf,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,0xfe12,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,0xffcc,0xffcc,\n@@ -458,1 +464,21 @@\n-0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0xffb4,0xffc8,0xffd0,0xffbc,0xffc0,0xffc0,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x9ac,1,\n+1,1,1,0x9b0,0x2803,0x9b4,0x2809,0x9b8,0x280f,0x9bc,0x2815,0x9c0,0x281b,0x9c4,0x2821,0x9c8,\n+0x2827,0x9cc,0x282d,0x9d0,0x2833,0x9d4,0x2839,0x9d8,0x283f,0x9dc,0x2845,1,0x9e0,0x284b,0x9e4,0x2851,\n+0x9e8,0x2857,1,1,1,1,1,0x9ec,0x285d,0x2863,0x9f4,0x2869,0x286f,0x9fc,0x2875,0x287b,\n+0xa04,0x2881,0x2887,0xa0c,0x288d,0x2893,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,0x2899,1,1,1,1,0xfc10,\n+0xfc10,1,1,0xa14,0x289f,1,1,1,1,1,1,1,0xa18,1,1,1,\n+1,0xa1c,0x28a5,0xa20,0x28ab,0xa24,0x28b1,0xa28,0x28b7,0xa2c,0x28bd,0xa30,0x28c3,0xa34,0x28c9,0xa38,\n+0x28cf,0xa3c,0x28d5,0xa40,0x28db,0xa44,0x28e1,0xa48,0x28e7,1,0xa4c,0x28ed,0xa50,0x28f3,0xa54,0x28f9,\n+1,1,1,1,1,0xa58,0x28ff,0x2905,0xa60,0x290b,0x2911,0xa68,0x2917,0x291d,0xa70,0x2923,\n+0x2929,0xa78,0x292f,0x2935,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,0xa80,0xa84,0xa88,0xa8c,1,0x293b,1,1,0x2941,0x2947,0x294d,\n+0x2953,1,1,0xa90,0x2959,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,0xffcc,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n+0xffcc,0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,\n@@ -460,17 +486,9 @@\n-1,1,1,1,1,1,1,1,1,1,1,1,0xffb4,0xffc8,0xffd0,0xffbc,\n-0xffc0,0xffc0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,0x9ac,1,1,1,1,0x9b0,0x27fd,0x9b4,0x2803,0x9b8,0x2809,0x9bc,0x280f,0x9c0,\n-0x2815,0x9c4,0x281b,0x9c8,0x2821,0x9cc,0x2827,0x9d0,0x282d,0x9d4,0x2833,0x9d8,0x2839,0x9dc,0x283f,1,\n-0x9e0,0x2845,0x9e4,0x284b,0x9e8,0x2851,1,1,1,1,1,0x9ec,0x2857,0x285d,0x9f4,0x2863,\n-0x2869,0x9fc,0x286f,0x2875,0xa04,0x287b,0x2881,0xa0c,0x2887,0x288d,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x2893,1,\n-1,1,1,0xfc10,0xfc10,1,1,0xa14,0x2899,1,1,1,1,1,1,1,\n-0xa18,1,1,1,1,0xa1c,0x289f,0xa20,0x28a5,0xa24,0x28ab,0xa28,0x28b1,0xa2c,0x28b7,0xa30,\n-0x28bd,0xa34,0x28c3,0xa38,0x28c9,0xa3c,0x28cf,0xa40,0x28d5,0xa44,0x28db,0xa48,0x28e1,1,0xa4c,0x28e7,\n-0xa50,0x28ed,0xa54,0x28f3,1,1,1,1,1,0xa58,0x28f9,0x28ff,0xa60,0x2905,0x290b,0xa68,\n-0x2911,0x2917,0xa70,0x291d,0x2923,0xa78,0x2929,0x292f,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,0xa80,0xa84,0xa88,0xa8c,1,0x2935,1,\n-1,0x293b,0x2941,0x2947,0x294d,1,1,0xa90,0x2953,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,0xffcc,1,1,1,1,0xffcc,0xffcc,0xffcc,\n+1,0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,0xfe12,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n@@ -479,143 +497,133 @@\n-1,1,1,1,1,0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0xffcc,0xffcc,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0xfe12,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,\n-0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0xffb8,0xffb8,0xffb8,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-0xfe12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-0xffcc,1,0xffcc,0xffcc,0xffb8,1,1,0xffcc,0xffcc,1,1,1,1,1,0xffcc,0xffcc,\n-1,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0xfe12,1,1,1,1,1,1,1,1,1,\n-0xadc,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,\n-0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0xadc,0x1283,0x1283,0x1283,\n-0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,\n-0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0xadc,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,\n-0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,\n-0x1283,0x1283,0x1283,0x1283,0xadc,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,\n-0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,0x1283,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,0x3c56,1,0x3c56,0x3c56,\n-0x3c56,0x3c56,0x3c56,0x3c56,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0x3c56,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,0x3c56,1,1,1,1,\n-0x3c56,1,1,1,0x3c56,1,0x3c56,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,0x3b87,1,0x2ac5,0x2ac9,0x2acd,0x2ad1,0x2ad5,0x2ad9,0x2add,0x2ae1,0x2ae1,\n-0x2ae5,0x2ae9,0x2aed,0x2af1,0x2af5,0x2af9,0x2afd,0x2b01,0x2b05,0x2b09,0x2b0d,0x2b11,0x2b15,0x2b19,0x2b1d,0x2b21,\n-0x2b25,0x2b29,0x2b2d,0x2b31,0x2b35,0x2b39,0x2b3d,0x2b41,0x2b45,0x2b49,0x2b4d,0x2b51,0x2b55,0x2b59,0x2b5d,0x2b61,\n-0x2b65,0x2b69,0x2b6d,0x2b71,0x2b75,0x2b79,0x2b7d,0x2b81,0x2b85,0x2b89,0x2b8d,0x2b91,0x2b95,0x2b99,0x2b9d,0x2ba1,\n-0x2ba5,0x2ba9,0x2bad,0x2bb1,0x2bb5,0x2bb9,0x2bbd,0x2bc1,0x2bc5,0x2bc9,0x2bcd,0x2bd1,0x2bd5,0x2bd9,0x2bdd,0x2be1,\n-0x2be5,0x2be9,0x2bed,0x2bf1,0x2bf5,0x2bf9,0x2bfd,0x2c01,0x2c05,0x2c09,0x2c0d,0x2c11,0x2c15,0x2c19,0x2c1d,0x2c21,\n-0x2c25,0x2c29,0x2c2d,0x2b11,0x2c31,0x2c35,0x2c39,0x2c3d,0x2c41,0x2c45,0x2c49,0x2c4d,0x2c51,0x2c55,0x2c59,0x2c5d,\n-0x2c61,0x2c65,0x2c69,0x2c6d,0x2c71,0x2c75,0x2c79,0x2c7d,0x2c81,0x2c85,0x2c89,0x2c8d,0x2c91,0x2c95,0x2c99,0x2c9d,\n-0x2ca1,0x2ca5,0x2ca9,0x2cad,0x2cb1,0x2cb5,0x2cb9,0x2cbd,0x2cc1,0x2cc5,0x2cc9,0x2ccd,0x2cd1,0x2cd5,0x2cd9,0x2cdd,\n-0x2ce1,0x2ce5,0x2ce9,0x2ced,0x2cf1,0x2cf5,0x2cf9,0x2cfd,0x2d01,0x2d05,0x2d09,0x2d0d,0x2d11,0x2d15,0x2d19,0x2d1d,\n-0x2d21,0x2d25,0x2d29,0x2d2d,0x2d31,0x2d35,0x2d39,0x2d3d,0x2c79,0x2d41,0x2d45,0x2d49,0x2d4d,0x2d51,0x2d55,0x2d59,\n-0x2d5d,0x2c39,0x2d61,0x2d65,0x2d69,0x2d6d,0x2d71,0x2d75,0x2d79,0x2d7d,0x2d81,0x2d85,0x2d89,0x2d8d,0x2d91,0x2d95,\n-0x2d99,0x2d9d,0x2da1,0x2da5,0x2da9,0x2dad,0x2b11,0x2db1,0x2db5,0x2db9,0x2dbd,0x2dc1,0x2dc5,0x2dc9,0x2dcd,0x2dd1,\n-0x2dd5,0x2dd9,0x2ddd,0x2de1,0x2de5,0x2de9,0x2ded,0x2df1,0x2df5,0x2df9,0x2dfd,0x2e01,0x2e05,0x2e09,0x2e0d,0x2e11,\n-0x2e15,0x2e19,0x2c41,0x2e1d,0x2e21,0x2e25,0x2e29,0x2e2d,0x2e31,0x2e35,0x2e39,0x2e3d,0x2e41,0x2e45,0x2e49,0x2e4d,\n-0x2e51,0x2e55,0x2e59,0x2e5d,0x2e61,0x2e65,0x2e69,0x2e6d,0x2e71,0x2e75,0x2e79,0x2e7d,0x2e81,0x2e85,0x2e89,0x2e8d,\n-0x2e91,0x2e95,0x2e99,0x2e9d,0x2ea1,0x2ea5,0x2ea9,0x2ead,0x2eb1,0x2eb5,0x2eb9,0x2ebd,0x2ec1,0x2ec5,0x2ec9,0x2ecd,\n-0x2ed1,0x2ed5,0x2ed9,0x2edd,0x2ee1,1,1,0x2ee5,1,0x2ee9,1,1,0x2eed,0x2ef1,0x2ef5,0x2ef9,\n-0x2efd,0x2f01,0x2f05,0x2f09,0x2f0d,0x2f11,1,0x2f15,1,0x2f19,1,1,0x2f1d,0x2f21,1,1,\n-1,0x2f25,0x2f29,0x2f2d,0x2f31,0x2f35,0x2f39,0x2f3d,0x2f41,0x2f45,0x2f49,0x2f4d,0x2f51,0x2f55,0x2f59,0x2f5d,\n-0x2f61,0x2f65,0x2f69,0x2f6d,0x2f71,0x2f75,0x2f79,0x2f7d,0x2f81,0x2f85,0x2f89,0x2f8d,0x2f91,0x2f95,0x2f99,0x2f9d,\n-0x2fa1,0x2fa5,0x2fa9,0x2fad,0x2fb1,0x2fb5,0x2fb9,0x2fbd,0x2fc1,0x2fc5,0x2fc9,0x2fcd,0x2fd1,0x2fd5,0x2d15,0x2fd9,\n-0x2fdd,0x2fe1,0x2fe5,0x2fe9,0x2fed,0x2fed,0x2ff1,0x2ff5,0x2ff9,0x2ffd,0x3001,0x3005,0x3009,0x300d,0x2f1d,0x3011,\n-0x3015,0x3019,0x301d,0x3021,0x3027,1,1,0x302b,0x302f,0x3033,0x3037,0x303b,0x303f,0x3043,0x3047,0x2f55,\n-0x304b,0x304f,0x3053,0x2ee5,0x3057,0x305b,0x305f,0x3063,0x3067,0x306b,0x306f,0x3073,0x3077,0x307b,0x307f,0x3083,\n-0x2f79,0x3087,0x2f7d,0x308b,0x308f,0x3093,0x3097,0x309b,0x2ee9,0x2b65,0x309f,0x30a3,0x30a7,0x2c7d,0x2dd9,0x30ab,\n-0x30af,0x2f99,0x30b3,0x2f9d,0x30b7,0x30bb,0x30bf,0x2ef1,0x30c3,0x30c7,0x30cb,0x30cf,0x30d3,0x2ef5,0x30d7,0x30db,\n-0x30df,0x30e3,0x30e7,0x30eb,0x2fd5,0x30ef,0x30f3,0x2d15,0x30f7,0x2fe5,0x30fb,0x30ff,0x3103,0x3107,0x310b,0x2ff9,\n-0x310f,0x2f19,0x3113,0x2ffd,0x2c31,0x3117,0x3001,0x311b,0x3009,0x311f,0x3123,0x3127,0x312b,0x312f,0x3011,0x2f09,\n-0x3133,0x3015,0x3137,0x3019,0x313b,0x2ae1,0x313f,0x3145,0x314b,0x3151,0x3155,0x3159,0x315d,0x3163,0x3169,0x316f,\n-0x3173,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0x3176,0xfe34,0x317c,1,1,1,1,1,1,\n-1,1,1,1,0x3182,0x3188,0x3190,0x319a,0x31a2,0x31a8,0x31ae,0x31b4,0x31ba,0x31c0,0x31c6,0x31cc,\n-0x31d2,1,0x31d8,0x31de,0x31e4,0x31ea,0x31f0,1,0x31f6,1,0x31fc,0x3202,1,0x3208,0x320e,1,\n-0x3214,0x321a,0x3220,0x3226,0x322c,0x3232,0x3238,0x323e,0x3244,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n-0xffcc,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffcc,0xffcc,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0xffb8,1,0xffcc,1,1,1,\n-1,1,1,1,1,0xffcc,0xfe02,0xffb8,1,1,1,1,0xfe12,1,1,1,\n-1,0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,1,1,1,1,1,0xffb8,0xffb8,0xffcc,\n-0xffcc,0xffcc,0xffb8,0xffcc,0xffb8,0xffb8,0xffb8,1,1,1,1,1,1,1,1,1,\n-0xa94,0x2959,0xa9a,0x2963,1,1,1,1,1,0xaa0,1,1,1,1,1,0x296d,\n-1,1,1,1,1,1,1,1,1,0xfe12,0xfc0e,1,1,1,1,1,\n-1,1,0xfc00,1,1,1,1,1,1,0x2977,0x2981,1,0xaa6,0xaac,0xfe12,0xfe12,\n-1,1,1,1,1,1,1,1,1,1,1,0xfe12,1,1,1,1,\n-1,1,1,1,1,0xfe0e,1,1,1,1,1,0xfe12,0xfe0e,1,1,1,\n-1,1,1,1,1,1,0xfe0e,0xfe12,1,1,1,1,1,1,1,1,\n-1,1,1,0xfe0e,0xfe0e,1,0xfc00,1,1,1,1,1,1,1,0xab2,1,\n-1,1,0x298b,0x2995,0xfe12,1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n-0xffcc,0xffcc,1,1,1,0xfe12,1,1,1,0xfe0e,1,1,1,1,1,1,\n-1,1,1,0xfc00,1,1,1,1,1,1,1,1,0xabe,0xfc00,0x299f,0x29a9,\n-0xfc00,0x29b3,1,1,0xfe12,0xfe0e,1,1,1,1,1,1,1,1,1,1,\n-1,1,0xad0,0xad6,0x29bd,0x29c7,1,1,1,0xfe12,0xfe0e,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,0xfe12,0xfe0e,1,1,1,1,\n-1,1,1,1,0xfe02,0xfe02,0xfe02,0xfe02,0xfe02,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0xfe02,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0x324a,0x3254,0x3268,0x3280,0x3298,0x32b0,0x32c8,0xffb0,0xffb0,0xfe02,\n-0xfe02,0xfe02,1,1,1,0xffc4,0xffb0,0xffb0,0xffb0,1,1,1,1,1,1,1,\n-1,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffb8,0xffb8,1,\n-1,1,1,1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,\n-1,1,1,1,1,1,1,1,0x32d6,0x32e0,0x32f4,0x330c,0x3324,0x333c,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,\n-0xffcc,0xffcc,0xffcc,0xffcc,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,\n-0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,0xffcc,0xffcc,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,\n-1,1,1,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,1,1,1,1,1,1,\n-1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xfe0e,1,1,1,1,1,0x334b,\n-0x334f,0x3353,0x3357,0x335d,0x2f3d,0x3361,0x3365,0x3369,0x336d,0x2f41,0x3371,0x3375,0x3379,0x2f45,0x337f,0x3383,\n-0x3387,0x338b,0x3391,0x3395,0x3399,0x339d,0x33a3,0x33a7,0x33ab,0x33af,0x302f,0x33b3,0x33b9,0x33bd,0x33c1,0x33c5,\n-0x33c9,0x33cd,0x33d1,0x33d5,0x3043,0x2f49,0x2f4d,0x3047,0x33d9,0x33dd,0x2c49,0x33e1,0x2f51,0x33e5,0x33e9,0x33ed,\n-0x33f1,0x33f1,0x33f1,0x33f5,0x33fb,0x33ff,0x3403,0x3407,0x340d,0x3411,0x3415,0x3419,0x341d,0x3421,0x3425,0x3429,\n-0x342d,0x3431,0x3435,0x3439,0x343d,0x343d,0x304f,0x3441,0x3445,0x3449,0x344d,0x2f59,0x3451,0x3455,0x3459,0x2ead,\n-0x345d,0x3461,0x3465,0x3469,0x346d,0x3471,0x3475,0x3479,0x347d,0x3483,0x3487,0x348b,0x348f,0x3493,0x3497,0x349b,\n-0x34a1,0x34a7,0x34ab,0x34af,0x34b3,0x34b7,0x34bb,0x34bf,0x34c3,0x34c7,0x34c7,0x34cb,0x34d1,0x34d5,0x2c39,0x34d9,\n-0x34dd,0x34e3,0x34e7,0x34eb,0x34ef,0x34f3,0x34f7,0x2f6d,0x34fb,0x34ff,0x3503,0x3509,0x350d,0x3513,0x3517,0x351b,\n-0x351f,0x3523,0x3527,0x352b,0x352f,0x3533,0x3537,0x353b,0x353f,0x3545,0x3549,0x354d,0x3551,0x2b61,0x3555,0x355b,\n-0x355f,0x355f,0x3565,0x3569,0x3569,0x356d,0x3571,0x3577,0x357d,0x3581,0x3585,0x3589,0x358d,0x3591,0x3595,0x3599,\n-0x359d,0x35a1,0x2f71,0x35a5,0x35ab,0x35af,0x35b3,0x307f,0x35b3,0x35b7,0x2f79,0x35bb,0x35bf,0x35c3,0x35c7,0x2f7d,\n-0x2af5,0x35cb,0x35cf,0x35d3,0x35d7,0x35db,0x35df,0x35e3,0x35e9,0x35ed,0x35f1,0x35f5,0x35f9,0x35fd,0x3603,0x3607,\n-0x360b,0x360f,0x3613,0x3617,0x361b,0x361f,0x3623,0x2f81,0x3627,0x362b,0x3631,0x3635,0x3639,0x363d,0x2f89,0x3641,\n-0x3645,0x3649,0x364d,0x3651,0x3655,0x3659,0x365d,0x2b65,0x309f,0x3661,0x3665,0x3669,0x366d,0x3673,0x3677,0x367b,\n-0x367f,0x2f8d,0x3683,0x3689,0x368d,0x3691,0x3151,0x3695,0x3699,0x369d,0x36a1,0x36a5,0x36ab,0x36af,0x36b3,0x36b7,\n-0x36bd,0x36c1,0x36c5,0x36c9,0x2c7d,0x36cd,0x36d1,0x36d7,0x36dd,0x36e3,0x36e7,0x36ed,0x36f1,0x36f5,0x36f9,0x36fd,\n-0x2f91,0x2dd9,0x3701,0x3705,0x3709,0x370d,0x3713,0x3717,0x371b,0x371f,0x30af,0x3723,0x3727,0x372d,0x3731,0x3735,\n-0x373b,0x3741,0x3745,0x30b3,0x3749,0x374d,0x3751,0x3755,0x3759,0x375d,0x3761,0x3767,0x376b,0x3771,0x3775,0x377b,\n-0x30bb,0x377f,0x3783,0x3789,0x378d,0x3791,0x3797,0x379d,0x37a1,0x37a5,0x37a9,0x37ad,0x37ad,0x37b1,0x37b5,0x30c3,\n-0x37b9,0x37bd,0x37c1,0x37c5,0x37c9,0x37cf,0x37d3,0x2c45,0x37d9,0x37df,0x37e3,0x37e9,0x37ef,0x37f5,0x37f9,0x30db,\n-0x37fd,0x3803,0x3809,0x380f,0x3815,0x3819,0x3819,0x30df,0x3159,0x381d,0x3821,0x3825,0x3829,0x382f,0x2bad,0x30e7,\n-0x3833,0x3837,0x2fbd,0x383d,0x3843,0x2f05,0x3849,0x384d,0x2fcd,0x3851,0x3855,0x3859,0x385f,0x385f,0x3865,0x3869,\n-0x386d,0x3873,0x3877,0x387b,0x387f,0x3885,0x3889,0x388d,0x3891,0x3895,0x3899,0x389f,0x38a3,0x38a7,0x38ab,0x38af,\n-0x38b3,0x38b7,0x38bd,0x38c3,0x38c7,0x38cd,0x38d1,0x38d7,0x38db,0x2fe5,0x38df,0x38e5,0x38eb,0x38ef,0x38f5,0x38f9,\n-0x38ff,0x3903,0x3907,0x390b,0x390f,0x3913,0x3917,0x391d,0x3923,0x3929,0x3565,0x392f,0x3933,0x3937,0x393b,0x393f,\n-0x3943,0x3947,0x394b,0x394f,0x3953,0x3957,0x395b,0x2c8d,0x3961,0x3965,0x3969,0x396d,0x3971,0x3975,0x2ff1,0x3979,\n-0x397d,0x3981,0x3985,0x3989,0x398f,0x3995,0x399b,0x399f,0x39a3,0x39a7,0x39ab,0x39b1,0x39b5,0x39bb,0x39bf,0x39c3,\n-0x39c9,0x39cf,0x39d3,0x2b99,0x39d7,0x39db,0x39df,0x39e3,0x39e7,0x39eb,0x3103,0x39ef,0x39f3,0x39f7,0x39fb,0x39ff,\n-0x3a03,0x3a07,0x3a0b,0x3a0f,0x3a13,0x3a19,0x3a1d,0x3a21,0x3a25,0x3a29,0x3a2d,0x3a33,0x3a39,0x3a3d,0x3a41,0x3117,\n-0x311b,0x3a45,0x3a49,0x3a4f,0x3a53,0x3a57,0x3a5b,0x3a5f,0x3a65,0x3a6b,0x3a6f,0x3a73,0x3a77,0x3a7d,0x311f,0x3a81,\n-0x3a87,0x3a8d,0x3a91,0x3a95,0x3a99,0x3a9f,0x3aa3,0x3aa7,0x3aab,0x3aaf,0x3ab3,0x3ab7,0x3abb,0x3ac1,0x3ac5,0x3ac9,\n-0x3acd,0x3ad3,0x3ad7,0x3adb,0x3adf,0x3ae3,0x3ae9,0x3aef,0x3af3,0x3af7,0x3afb,0x3b01,0x3b05,0x3137,0x3137,0x3b0b,\n-0x3b0f,0x3b15,0x3b19,0x3b1d,0x3b21,0x3b25,0x3b29,0x3b2d,0x3b31,0x313b,0x3b37,0x3b3b,0x3b3f,0x3b43,0x3b47,0x3b4b,\n-0x3b51,0x3b55,0x3b5b,0x3b61,0x3b67,0x3b6b,0x3b6f,0x3b73,0x3b77,0x3b7b,0x3b7f,0x3b83,0x3b87,1,1,1\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xffb8,0xffb8,0xffb8,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0xfe12,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0xffcc,1,0xffcc,0xffcc,0xffb8,1,1,0xffcc,\n+0xffcc,1,1,1,1,1,0xffcc,0xffcc,1,0xffcc,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,0xfe12,1,\n+1,1,1,1,1,1,1,1,0xae2,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,\n+0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,\n+0x1289,0x1289,0x1289,0x1289,0xae2,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,\n+0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,\n+0xae2,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,\n+0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0xae2,0x1289,0x1289,0x1289,\n+0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,\n+0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,0x1289,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,0x3c66,1,0x3c66,0x3c66,0x3c66,0x3c66,0x3c66,0x3c66,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x3c66,0x3c66,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,0x3c66,1,1,1,1,0x3c66,1,1,1,0x3c66,1,0x3c66,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,0x3b97,1,0x2ad5,\n+0x2ad9,0x2add,0x2ae1,0x2ae5,0x2ae9,0x2aed,0x2af1,0x2af1,0x2af5,0x2af9,0x2afd,0x2b01,0x2b05,0x2b09,0x2b0d,0x2b11,\n+0x2b15,0x2b19,0x2b1d,0x2b21,0x2b25,0x2b29,0x2b2d,0x2b31,0x2b35,0x2b39,0x2b3d,0x2b41,0x2b45,0x2b49,0x2b4d,0x2b51,\n+0x2b55,0x2b59,0x2b5d,0x2b61,0x2b65,0x2b69,0x2b6d,0x2b71,0x2b75,0x2b79,0x2b7d,0x2b81,0x2b85,0x2b89,0x2b8d,0x2b91,\n+0x2b95,0x2b99,0x2b9d,0x2ba1,0x2ba5,0x2ba9,0x2bad,0x2bb1,0x2bb5,0x2bb9,0x2bbd,0x2bc1,0x2bc5,0x2bc9,0x2bcd,0x2bd1,\n+0x2bd5,0x2bd9,0x2bdd,0x2be1,0x2be5,0x2be9,0x2bed,0x2bf1,0x2bf5,0x2bf9,0x2bfd,0x2c01,0x2c05,0x2c09,0x2c0d,0x2c11,\n+0x2c15,0x2c19,0x2c1d,0x2c21,0x2c25,0x2c29,0x2c2d,0x2c31,0x2c35,0x2c39,0x2c3d,0x2b21,0x2c41,0x2c45,0x2c49,0x2c4d,\n+0x2c51,0x2c55,0x2c59,0x2c5d,0x2c61,0x2c65,0x2c69,0x2c6d,0x2c71,0x2c75,0x2c79,0x2c7d,0x2c81,0x2c85,0x2c89,0x2c8d,\n+0x2c91,0x2c95,0x2c99,0x2c9d,0x2ca1,0x2ca5,0x2ca9,0x2cad,0x2cb1,0x2cb5,0x2cb9,0x2cbd,0x2cc1,0x2cc5,0x2cc9,0x2ccd,\n+0x2cd1,0x2cd5,0x2cd9,0x2cdd,0x2ce1,0x2ce5,0x2ce9,0x2ced,0x2cf1,0x2cf5,0x2cf9,0x2cfd,0x2d01,0x2d05,0x2d09,0x2d0d,\n+0x2d11,0x2d15,0x2d19,0x2d1d,0x2d21,0x2d25,0x2d29,0x2d2d,0x2d31,0x2d35,0x2d39,0x2d3d,0x2d41,0x2d45,0x2d49,0x2d4d,\n+0x2c89,0x2d51,0x2d55,0x2d59,0x2d5d,0x2d61,0x2d65,0x2d69,0x2d6d,0x2c49,0x2d71,0x2d75,0x2d79,0x2d7d,0x2d81,0x2d85,\n+0x2d89,0x2d8d,0x2d91,0x2d95,0x2d99,0x2d9d,0x2da1,0x2da5,0x2da9,0x2dad,0x2db1,0x2db5,0x2db9,0x2dbd,0x2b21,0x2dc1,\n+0x2dc5,0x2dc9,0x2dcd,0x2dd1,0x2dd5,0x2dd9,0x2ddd,0x2de1,0x2de5,0x2de9,0x2ded,0x2df1,0x2df5,0x2df9,0x2dfd,0x2e01,\n+0x2e05,0x2e09,0x2e0d,0x2e11,0x2e15,0x2e19,0x2e1d,0x2e21,0x2e25,0x2e29,0x2c51,0x2e2d,0x2e31,0x2e35,0x2e39,0x2e3d,\n+0x2e41,0x2e45,0x2e49,0x2e4d,0x2e51,0x2e55,0x2e59,0x2e5d,0x2e61,0x2e65,0x2e69,0x2e6d,0x2e71,0x2e75,0x2e79,0x2e7d,\n+0x2e81,0x2e85,0x2e89,0x2e8d,0x2e91,0x2e95,0x2e99,0x2e9d,0x2ea1,0x2ea5,0x2ea9,0x2ead,0x2eb1,0x2eb5,0x2eb9,0x2ebd,\n+0x2ec1,0x2ec5,0x2ec9,0x2ecd,0x2ed1,0x2ed5,0x2ed9,0x2edd,0x2ee1,0x2ee5,0x2ee9,0x2eed,0x2ef1,1,1,0x2ef5,\n+1,0x2ef9,1,1,0x2efd,0x2f01,0x2f05,0x2f09,0x2f0d,0x2f11,0x2f15,0x2f19,0x2f1d,0x2f21,1,0x2f25,\n+1,0x2f29,1,1,0x2f2d,0x2f31,1,1,1,0x2f35,0x2f39,0x2f3d,0x2f41,0x2f45,0x2f49,0x2f4d,\n+0x2f51,0x2f55,0x2f59,0x2f5d,0x2f61,0x2f65,0x2f69,0x2f6d,0x2f71,0x2f75,0x2f79,0x2f7d,0x2f81,0x2f85,0x2f89,0x2f8d,\n+0x2f91,0x2f95,0x2f99,0x2f9d,0x2fa1,0x2fa5,0x2fa9,0x2fad,0x2fb1,0x2fb5,0x2fb9,0x2fbd,0x2fc1,0x2fc5,0x2fc9,0x2fcd,\n+0x2fd1,0x2fd5,0x2fd9,0x2fdd,0x2fe1,0x2fe5,0x2d25,0x2fe9,0x2fed,0x2ff1,0x2ff5,0x2ff9,0x2ffd,0x2ffd,0x3001,0x3005,\n+0x3009,0x300d,0x3011,0x3015,0x3019,0x301d,0x2f2d,0x3021,0x3025,0x3029,0x302d,0x3031,0x3037,1,1,0x303b,\n+0x303f,0x3043,0x3047,0x304b,0x304f,0x3053,0x3057,0x2f65,0x305b,0x305f,0x3063,0x2ef5,0x3067,0x306b,0x306f,0x3073,\n+0x3077,0x307b,0x307f,0x3083,0x3087,0x308b,0x308f,0x3093,0x2f89,0x3097,0x2f8d,0x309b,0x309f,0x30a3,0x30a7,0x30ab,\n+0x2ef9,0x2b75,0x30af,0x30b3,0x30b7,0x2c8d,0x2de9,0x30bb,0x30bf,0x2fa9,0x30c3,0x2fad,0x30c7,0x30cb,0x30cf,0x2f01,\n+0x30d3,0x30d7,0x30db,0x30df,0x30e3,0x2f05,0x30e7,0x30eb,0x30ef,0x30f3,0x30f7,0x30fb,0x2fe5,0x30ff,0x3103,0x2d25,\n+0x3107,0x2ff5,0x310b,0x310f,0x3113,0x3117,0x311b,0x3009,0x311f,0x2f29,0x3123,0x300d,0x2c41,0x3127,0x3011,0x312b,\n+0x3019,0x312f,0x3133,0x3137,0x313b,0x313f,0x3021,0x2f19,0x3143,0x3025,0x3147,0x3029,0x314b,0x2af1,0x314f,0x3155,\n+0x315b,0x3161,0x3165,0x3169,0x316d,0x3173,0x3179,0x317f,0x3183,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x3186,\n+0xfe34,0x318c,1,1,1,1,1,1,1,1,1,1,0x3192,0x3198,0x31a0,0x31aa,\n+0x31b2,0x31b8,0x31be,0x31c4,0x31ca,0x31d0,0x31d6,0x31dc,0x31e2,1,0x31e8,0x31ee,0x31f4,0x31fa,0x3200,1,\n+0x3206,1,0x320c,0x3212,1,0x3218,0x321e,1,0x3224,0x322a,0x3230,0x3236,0x323c,0x3242,0x3248,0x324e,\n+0x3254,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,\n+0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xffb8,1,0xffcc,1,1,1,1,1,1,1,1,0xffcc,0xfe02,0xffb8,\n+1,1,1,1,0xfe12,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,\n+1,1,1,1,1,0xffb8,0xffb8,0xffcc,0xffcc,0xffcc,0xffb8,0xffcc,0xffb8,0xffb8,0xffb8,1,\n+1,1,1,1,1,1,1,1,0xa94,0x295f,0xa9a,0x2969,1,1,1,1,\n+1,0xaa0,1,1,1,1,1,0x2973,1,1,1,1,1,1,1,1,\n+1,0xfe12,0xfc0e,1,1,1,1,1,1,1,0xfc00,1,1,1,1,1,\n+1,0x297d,0x2987,1,0xaa6,0xaac,0xfe12,0xfe12,1,1,1,1,1,1,1,1,\n+1,1,1,0xfe12,1,1,1,1,1,1,1,1,1,0xfe0e,1,1,\n+1,1,1,0xfe12,0xfe0e,1,1,1,1,1,1,1,1,1,0xfe0e,0xfe12,\n+1,1,1,1,1,1,1,1,1,1,1,0xfe0e,0xfe0e,1,0xfc00,1,\n+1,1,1,1,1,1,0xab2,1,1,1,0x2991,0x299b,0xfe12,1,1,1,\n+1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,1,1,0xfe12,1,1,\n+1,0xfe0e,1,1,1,1,1,1,1,1,1,0xfc00,1,1,1,1,\n+1,1,1,1,0xabe,0xfc00,0x29a5,0x29af,0xfc00,0x29b9,1,1,0xfe12,0xfe0e,1,1,\n+1,1,1,1,1,1,1,1,1,1,0xad0,0xad6,0x29c3,0x29cd,1,1,\n+1,0xfe12,0xfe0e,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xfe12,0xfe0e,1,1,1,1,1,1,1,1,0xfc00,1,1,1,\n+1,0xadc,1,1,0x29d7,1,1,1,1,0xfe12,0xfe12,1,0xfe02,0xfe02,0xfe02,0xfe02,\n+0xfe02,1,1,1,1,1,1,1,1,1,1,1,0xfe0c,0xfe0c,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,0xfe02,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,0x325a,0x3264,0x3278,0x3290,0x32a8,\n+0x32c0,0x32d8,0xffb0,0xffb0,0xfe02,0xfe02,0xfe02,1,1,1,0xffc4,0xffb0,0xffb0,0xffb0,1,1,\n+1,1,1,1,1,1,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,1,1,0xffcc,0xffcc,0xffcc,\n+0xffcc,0xffcc,0xffb8,0xffb8,1,1,1,1,1,1,1,1,1,1,0xffcc,0xffcc,\n+0xffcc,0xffcc,1,1,1,1,1,1,1,1,1,1,1,0x32e6,0x32f0,0x3304,\n+0x331c,0x3334,0x334c,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,\n+0xffcc,0xffcc,0xffcc,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,1,0xffcc,0xffcc,1,0xffcc,0xffcc,\n+0xffcc,0xffcc,0xffcc,1,1,1,1,1,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,0xffb8,1,\n+1,1,1,1,1,1,1,1,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xffcc,0xfe0e,1,\n+1,1,1,1,0x335b,0x335f,0x3363,0x3367,0x336d,0x2f4d,0x3371,0x3375,0x3379,0x337d,0x2f51,0x3381,\n+0x3385,0x3389,0x2f55,0x338f,0x3393,0x3397,0x339b,0x33a1,0x33a5,0x33a9,0x33ad,0x33b3,0x33b7,0x33bb,0x33bf,0x303f,\n+0x33c3,0x33c9,0x33cd,0x33d1,0x33d5,0x33d9,0x33dd,0x33e1,0x33e5,0x3053,0x2f59,0x2f5d,0x3057,0x33e9,0x33ed,0x2c59,\n+0x33f1,0x2f61,0x33f5,0x33f9,0x33fd,0x3401,0x3401,0x3401,0x3405,0x340b,0x340f,0x3413,0x3417,0x341d,0x3421,0x3425,\n+0x3429,0x342d,0x3431,0x3435,0x3439,0x343d,0x3441,0x3445,0x3449,0x344d,0x344d,0x305f,0x3451,0x3455,0x3459,0x345d,\n+0x2f69,0x3461,0x3465,0x3469,0x2ebd,0x346d,0x3471,0x3475,0x3479,0x347d,0x3481,0x3485,0x3489,0x348d,0x3493,0x3497,\n+0x349b,0x349f,0x34a3,0x34a7,0x34ab,0x34b1,0x34b7,0x34bb,0x34bf,0x34c3,0x34c7,0x34cb,0x34cf,0x34d3,0x34d7,0x34d7,\n+0x34db,0x34e1,0x34e5,0x2c49,0x34e9,0x34ed,0x34f3,0x34f7,0x34fb,0x34ff,0x3503,0x3507,0x2f7d,0x350b,0x350f,0x3513,\n+0x3519,0x351d,0x3523,0x3527,0x352b,0x352f,0x3533,0x3537,0x353b,0x353f,0x3543,0x3547,0x354b,0x354f,0x3555,0x3559,\n+0x355d,0x3561,0x2b71,0x3565,0x356b,0x356f,0x356f,0x3575,0x3579,0x3579,0x357d,0x3581,0x3587,0x358d,0x3591,0x3595,\n+0x3599,0x359d,0x35a1,0x35a5,0x35a9,0x35ad,0x35b1,0x2f81,0x35b5,0x35bb,0x35bf,0x35c3,0x308f,0x35c3,0x35c7,0x2f89,\n+0x35cb,0x35cf,0x35d3,0x35d7,0x2f8d,0x2b05,0x35db,0x35df,0x35e3,0x35e7,0x35eb,0x35ef,0x35f3,0x35f9,0x35fd,0x3601,\n+0x3605,0x3609,0x360d,0x3613,0x3617,0x361b,0x361f,0x3623,0x3627,0x362b,0x362f,0x3633,0x2f91,0x3637,0x363b,0x3641,\n+0x3645,0x3649,0x364d,0x2f99,0x3651,0x3655,0x3659,0x365d,0x3661,0x3665,0x3669,0x366d,0x2b75,0x30af,0x3671,0x3675,\n+0x3679,0x367d,0x3683,0x3687,0x368b,0x368f,0x2f9d,0x3693,0x3699,0x369d,0x36a1,0x3161,0x36a5,0x36a9,0x36ad,0x36b1,\n+0x36b5,0x36bb,0x36bf,0x36c3,0x36c7,0x36cd,0x36d1,0x36d5,0x36d9,0x2c8d,0x36dd,0x36e1,0x36e7,0x36ed,0x36f3,0x36f7,\n+0x36fd,0x3701,0x3705,0x3709,0x370d,0x2fa1,0x2de9,0x3711,0x3715,0x3719,0x371d,0x3723,0x3727,0x372b,0x372f,0x30bf,\n+0x3733,0x3737,0x373d,0x3741,0x3745,0x374b,0x3751,0x3755,0x30c3,0x3759,0x375d,0x3761,0x3765,0x3769,0x376d,0x3771,\n+0x3777,0x377b,0x3781,0x3785,0x378b,0x30cb,0x378f,0x3793,0x3799,0x379d,0x37a1,0x37a7,0x37ad,0x37b1,0x37b5,0x37b9,\n+0x37bd,0x37bd,0x37c1,0x37c5,0x30d3,0x37c9,0x37cd,0x37d1,0x37d5,0x37d9,0x37df,0x37e3,0x2c55,0x37e9,0x37ef,0x37f3,\n+0x37f9,0x37ff,0x3805,0x3809,0x30eb,0x380d,0x3813,0x3819,0x381f,0x3825,0x3829,0x3829,0x30ef,0x3169,0x382d,0x3831,\n+0x3835,0x3839,0x383f,0x2bbd,0x30f7,0x3843,0x3847,0x2fcd,0x384d,0x3853,0x2f15,0x3859,0x385d,0x2fdd,0x3861,0x3865,\n+0x3869,0x386f,0x386f,0x3875,0x3879,0x387d,0x3883,0x3887,0x388b,0x388f,0x3895,0x3899,0x389d,0x38a1,0x38a5,0x38a9,\n+0x38af,0x38b3,0x38b7,0x38bb,0x38bf,0x38c3,0x38c7,0x38cd,0x38d3,0x38d7,0x38dd,0x38e1,0x38e7,0x38eb,0x2ff5,0x38ef,\n+0x38f5,0x38fb,0x38ff,0x3905,0x3909,0x390f,0x3913,0x3917,0x391b,0x391f,0x3923,0x3927,0x392d,0x3933,0x3939,0x3575,\n+0x393f,0x3943,0x3947,0x394b,0x394f,0x3953,0x3957,0x395b,0x395f,0x3963,0x3967,0x396b,0x2c9d,0x3971,0x3975,0x3979,\n+0x397d,0x3981,0x3985,0x3001,0x3989,0x398d,0x3991,0x3995,0x3999,0x399f,0x39a5,0x39ab,0x39af,0x39b3,0x39b7,0x39bb,\n+0x39c1,0x39c5,0x39cb,0x39cf,0x39d3,0x39d9,0x39df,0x39e3,0x2ba9,0x39e7,0x39eb,0x39ef,0x39f3,0x39f7,0x39fb,0x3113,\n+0x39ff,0x3a03,0x3a07,0x3a0b,0x3a0f,0x3a13,0x3a17,0x3a1b,0x3a1f,0x3a23,0x3a29,0x3a2d,0x3a31,0x3a35,0x3a39,0x3a3d,\n+0x3a43,0x3a49,0x3a4d,0x3a51,0x3127,0x312b,0x3a55,0x3a59,0x3a5f,0x3a63,0x3a67,0x3a6b,0x3a6f,0x3a75,0x3a7b,0x3a7f,\n+0x3a83,0x3a87,0x3a8d,0x312f,0x3a91,0x3a97,0x3a9d,0x3aa1,0x3aa5,0x3aa9,0x3aaf,0x3ab3,0x3ab7,0x3abb,0x3abf,0x3ac3,\n+0x3ac7,0x3acb,0x3ad1,0x3ad5,0x3ad9,0x3add,0x3ae3,0x3ae7,0x3aeb,0x3aef,0x3af3,0x3af9,0x3aff,0x3b03,0x3b07,0x3b0b,\n+0x3b11,0x3b15,0x3147,0x3147,0x3b1b,0x3b1f,0x3b25,0x3b29,0x3b2d,0x3b31,0x3b35,0x3b39,0x3b3d,0x3b41,0x314b,0x3b47,\n+0x3b4b,0x3b4f,0x3b53,0x3b57,0x3b5b,0x3b61,0x3b65,0x3b6b,0x3b71,0x3b77,0x3b7b,0x3b7f,0x3b83,0x3b87,0x3b8b,0x3b8f,\n+0x3b93,0x3b97,1,1\n@@ -627,1 +635,1 @@\n-    1712, 7824,\n+    1746, 7892,\n@@ -635,1 +643,1 @@\n-static const uint16_t norm2_nfc_data_extraData[7724]={\n+static const uint16_t norm2_nfc_data_extraData[7732]={\n@@ -722,397 +730,398 @@\n-0x2c02,0x2978,0x348b,0x2e82,0x2976,0xb48b,0x2f42,0x297c,0xb48b,0x6bc2,0x2b74,0xb48b,0x6bc2,0x2b76,2,0xe602,\n-0x41,0x302,0x600,0x3d4c,0x602,0x3d48,0x606,0x3d54,0x8612,0x3d50,0xe602,0x41,0x308,0x8608,0x3bc,0xe602,\n-0x41,0x30a,0x8602,0x3f4,0xca02,0x43,0x327,0x8602,0x3c10,0xe602,0x45,0x302,0x600,0x3d80,0x602,0x3d7c,\n-0x606,0x3d88,0x8612,0x3d84,0xe602,0x49,0x308,0x8602,0x3c5c,0xe602,0x4f,0x302,0x600,0x3da4,0x602,0x3da0,\n-0x606,0x3dac,0x8612,0x3da8,0xe602,0x4f,0x303,0x602,0x3c98,0x608,0x458,0x8610,0x3c9c,0xe602,0x4f,0x308,\n-0x8608,0x454,0xe602,0x55,0x308,0x600,0x3b6,0x602,0x3ae,0x608,0x3aa,0x8618,0x3b2,0xe602,0x61,0x302,\n-0x600,0x3d4e,0x602,0x3d4a,0x606,0x3d56,0x8612,0x3d52,0xe602,0x61,0x308,0x8608,0x3be,0xe602,0x61,0x30a,\n-0x8602,0x3f6,0xca02,0x63,0x327,0x8602,0x3c12,0xe602,0x65,0x302,0x600,0x3d82,0x602,0x3d7e,0x606,0x3d8a,\n-0x8612,0x3d86,0xe602,0x69,0x308,0x8602,0x3c5e,0xe602,0x6f,0x302,0x600,0x3da6,0x602,0x3da2,0x606,0x3dae,\n-0x8612,0x3daa,0xe602,0x6f,0x303,0x602,0x3c9a,0x608,0x45a,0x8610,0x3c9e,0xe602,0x6f,0x308,0x8608,0x456,\n-0xe602,0x75,0x308,0x600,0x3b8,0x602,0x3b0,0x608,0x3ac,0x8618,0x3b4,0xe602,0x41,0x306,0x600,0x3d60,\n-0x602,0x3d5c,0x606,0x3d68,0x8612,0x3d64,0xe602,0x61,0x306,0x600,0x3d62,0x602,0x3d5e,0x606,0x3d6a,0x8612,\n-0x3d66,0xe602,0x45,0x304,0x600,0x3c28,0x8602,0x3c2c,0xe602,0x65,0x304,0x600,0x3c2a,0x8602,0x3c2e,0xe602,\n-0x4f,0x304,0x600,0x3ca0,0x8602,0x3ca4,0xe602,0x6f,0x304,0x600,0x3ca2,0x8602,0x3ca6,0xe602,0x53,0x301,\n-0x860e,0x3cc8,0xe602,0x73,0x301,0x860e,0x3cca,0xe602,0x53,0x30c,0x860e,0x3ccc,0xe602,0x73,0x30c,0x860e,\n-0x3cce,0xe602,0x55,0x303,0x8602,0x3cf0,0xe602,0x75,0x303,0x8602,0x3cf2,0xe602,0x55,0x304,0x8610,0x3cf4,\n-0xe602,0x75,0x304,0x8610,0x3cf6,0xd802,0x4f,0x31b,0x600,0x3db8,0x602,0x3db4,0x606,0x3dc0,0x612,0x3dbc,\n-0x8646,0x3dc4,0xd802,0x6f,0x31b,0x600,0x3dba,0x602,0x3db6,0x606,0x3dc2,0x612,0x3dbe,0x8646,0x3dc6,0xd802,\n-0x55,0x31b,0x600,0x3dd4,0x602,0x3dd0,0x606,0x3ddc,0x612,0x3dd8,0x8646,0x3de0,0xd802,0x75,0x31b,0x600,\n-0x3dd6,0x602,0x3dd2,0x606,0x3dde,0x612,0x3dda,0x8646,0x3de2,0xca02,0x4f,0x328,0x8608,0x3d8,0xca02,0x6f,\n-0x328,0x8608,0x3da,0xe602,0x41,0x307,0x8608,0x3c0,0xe602,0x61,0x307,0x8608,0x3c2,0xca02,0x45,0x327,\n-0x860c,0x3c38,0xca02,0x65,0x327,0x860c,0x3c3a,0xe602,0x4f,0x307,0x8608,0x460,0xe602,0x6f,0x307,0x8608,\n-0x462,0xe602,0x3b1,0x301,0x868a,0x3f68,0xe602,0x3b7,0x301,0x868a,0x3f88,0xe602,0x3b9,0x308,0x600,0x3fa4,\n-0x602,0x720,0x8684,0x3fae,0xe602,0x3c5,0x308,0x600,0x3fc4,0x602,0x760,0x8684,0x3fce,0xe602,0x3c9,0x301,\n-0x868a,0x3fe8,2,0xcc6,0xcc2,0x99aa,0x1996,2,0xdd9,0xdcf,0x9b94,0x1bba,0xdc02,0x4c,0x323,0x8608,\n-0x3c70,0xdc02,0x6c,0x323,0x8608,0x3c72,0xdc02,0x52,0x323,0x8608,0x3cb8,0xdc02,0x72,0x323,0x8608,0x3cba,\n-0xdc02,0x53,0x323,0x860e,0x3cd0,0xdc02,0x73,0x323,0x860e,0x3cd2,0xdc02,0x41,0x323,0x604,0x3d58,0x860c,\n-0x3d6c,0xdc02,0x61,0x323,0x604,0x3d5a,0x860c,0x3d6e,0xdc02,0x45,0x323,0x8604,0x3d8c,0xdc02,0x65,0x323,\n-0x8604,0x3d8e,0xdc02,0x4f,0x323,0x8604,0x3db0,0xdc02,0x6f,0x323,0x8604,0x3db2,0xe602,0x3b1,0x313,0x600,\n-0x3e05,0x602,0x3e09,0x684,0x3e0d,0x868a,0x3f00,0xe602,0x3b1,0x314,0x600,0x3e07,0x602,0x3e0b,0x684,0x3e0f,\n-0x868a,0x3f02,0x1f00,0xe643,0x3b1,0x313,0x300,0x868a,0x3f04,0x1f01,0xe643,0x3b1,0x314,0x300,0x868a,0x3f06,\n-0x1f00,0xe643,0x3b1,0x313,0x301,0x868a,0x3f08,0x1f01,0xe643,0x3b1,0x314,0x301,0x868a,0x3f0a,0x1f00,0xe643,\n-0x3b1,0x313,0x342,0x868a,0x3f0c,0x1f01,0xe643,0x3b1,0x314,0x342,0x868a,0x3f0e,0xe602,0x391,0x313,0x600,\n-0x3e15,0x602,0x3e19,0x684,0x3e1d,0x868a,0x3f10,0xe602,0x391,0x314,0x600,0x3e17,0x602,0x3e1b,0x684,0x3e1f,\n-0x868a,0x3f12,0x1f08,0xe643,0x391,0x313,0x300,0x868a,0x3f14,0x1f09,0xe643,0x391,0x314,0x300,0x868a,0x3f16,\n-0x1f08,0xe643,0x391,0x313,0x301,0x868a,0x3f18,0x1f09,0xe643,0x391,0x314,0x301,0x868a,0x3f1a,0x1f08,0xe643,\n-0x391,0x313,0x342,0x868a,0x3f1c,0x1f09,0xe643,0x391,0x314,0x342,0x868a,0x3f1e,0xe602,0x3b5,0x313,0x600,\n-0x3e24,0x8602,0x3e28,0xe602,0x3b5,0x314,0x600,0x3e26,0x8602,0x3e2a,0xe602,0x395,0x313,0x600,0x3e34,0x8602,\n-0x3e38,0xe602,0x395,0x314,0x600,0x3e36,0x8602,0x3e3a,0xe602,0x3b7,0x313,0x600,0x3e45,0x602,0x3e49,0x684,\n-0x3e4d,0x868a,0x3f20,0xe602,0x3b7,0x314,0x600,0x3e47,0x602,0x3e4b,0x684,0x3e4f,0x868a,0x3f22,0x1f20,0xe643,\n-0x3b7,0x313,0x300,0x868a,0x3f24,0x1f21,0xe643,0x3b7,0x314,0x300,0x868a,0x3f26,0x1f20,0xe643,0x3b7,0x313,\n-0x301,0x868a,0x3f28,0x1f21,0xe643,0x3b7,0x314,0x301,0x868a,0x3f2a,0x1f20,0xe643,0x3b7,0x313,0x342,0x868a,\n-0x3f2c,0x1f21,0xe643,0x3b7,0x314,0x342,0x868a,0x3f2e,0xe602,0x397,0x313,0x600,0x3e55,0x602,0x3e59,0x684,\n-0x3e5d,0x868a,0x3f30,0xe602,0x397,0x314,0x600,0x3e57,0x602,0x3e5b,0x684,0x3e5f,0x868a,0x3f32,0x1f28,0xe643,\n-0x397,0x313,0x300,0x868a,0x3f34,0x1f29,0xe643,0x397,0x314,0x300,0x868a,0x3f36,0x1f28,0xe643,0x397,0x313,\n-0x301,0x868a,0x3f38,0x1f29,0xe643,0x397,0x314,0x301,0x868a,0x3f3a,0x1f28,0xe643,0x397,0x313,0x342,0x868a,\n-0x3f3c,0x1f29,0xe643,0x397,0x314,0x342,0x868a,0x3f3e,0xe602,0x3b9,0x313,0x600,0x3e64,0x602,0x3e68,0x8684,\n-0x3e6c,0xe602,0x3b9,0x314,0x600,0x3e66,0x602,0x3e6a,0x8684,0x3e6e,0xe602,0x399,0x313,0x600,0x3e74,0x602,\n-0x3e78,0x8684,0x3e7c,0xe602,0x399,0x314,0x600,0x3e76,0x602,0x3e7a,0x8684,0x3e7e,0xe602,0x3bf,0x313,0x600,\n-0x3e84,0x8602,0x3e88,0xe602,0x3bf,0x314,0x600,0x3e86,0x8602,0x3e8a,0xe602,0x39f,0x313,0x600,0x3e94,0x8602,\n-0x3e98,0xe602,0x39f,0x314,0x600,0x3e96,0x8602,0x3e9a,0xe602,0x3c5,0x313,0x600,0x3ea4,0x602,0x3ea8,0x8684,\n-0x3eac,0xe602,0x3c5,0x314,0x600,0x3ea6,0x602,0x3eaa,0x8684,0x3eae,0xe602,0x3a5,0x314,0x600,0x3eb6,0x602,\n-0x3eba,0x8684,0x3ebe,0xe602,0x3c9,0x313,0x600,0x3ec5,0x602,0x3ec9,0x684,0x3ecd,0x868a,0x3f40,0xe602,0x3c9,\n-0x314,0x600,0x3ec7,0x602,0x3ecb,0x684,0x3ecf,0x868a,0x3f42,0x1f60,0xe643,0x3c9,0x313,0x300,0x868a,0x3f44,\n-0x1f61,0xe643,0x3c9,0x314,0x300,0x868a,0x3f46,0x1f60,0xe643,0x3c9,0x313,0x301,0x868a,0x3f48,0x1f61,0xe643,\n-0x3c9,0x314,0x301,0x868a,0x3f4a,0x1f60,0xe643,0x3c9,0x313,0x342,0x868a,0x3f4c,0x1f61,0xe643,0x3c9,0x314,\n-0x342,0x868a,0x3f4e,0xe602,0x3a9,0x313,0x600,0x3ed5,0x602,0x3ed9,0x684,0x3edd,0x868a,0x3f50,0xe602,0x3a9,\n-0x314,0x600,0x3ed7,0x602,0x3edb,0x684,0x3edf,0x868a,0x3f52,0x1f68,0xe643,0x3a9,0x313,0x300,0x868a,0x3f54,\n-0x1f69,0xe643,0x3a9,0x314,0x300,0x868a,0x3f56,0x1f68,0xe643,0x3a9,0x313,0x301,0x868a,0x3f58,0x1f69,0xe643,\n-0x3a9,0x314,0x301,0x868a,0x3f5a,0x1f68,0xe643,0x3a9,0x313,0x342,0x868a,0x3f5c,0x1f69,0xe643,0x3a9,0x314,\n-0x342,0x868a,0x3f5e,0xe602,0x3b1,0x300,0x868a,0x3f64,0xe602,0x3b7,0x300,0x868a,0x3f84,0xe602,0x3c9,0x300,\n-0x868a,0x3fe4,0xe602,0x3b1,0x342,0x868a,0x3f6e,0xe602,0x3b7,0x342,0x868a,0x3f8e,0xe602,0x3c9,0x342,0x868a,\n-0x3fee,3,0xe602,0x41,0x300,0xe602,0x41,0x301,0xe602,0x41,0x303,0xe602,0x45,0x300,0xe602,0x45,\n-0x301,0xe602,0x45,0x308,0xe602,0x49,0x300,0xe602,0x49,0x301,0xe602,0x49,0x302,0xe602,0x4e,0x303,\n-0xe602,0x4f,0x300,0xe602,0x4f,0x301,0xe602,0x55,0x300,0xe602,0x55,0x301,0xe602,0x55,0x302,0xe602,\n-0x59,0x301,0xe602,0x61,0x300,0xe602,0x61,0x301,0xe602,0x61,0x303,0xe602,0x65,0x300,0xe602,0x65,\n-0x301,0xe602,0x65,0x308,0xe602,0x69,0x300,0xe602,0x69,0x301,0xe602,0x69,0x302,0xe602,0x6e,0x303,\n-0xe602,0x6f,0x300,0xe602,0x6f,0x301,0xe602,0x75,0x300,0xe602,0x75,0x301,0xe602,0x75,0x302,0xe602,\n-0x79,0x301,0xe602,0x79,0x308,0xe602,0x41,0x304,0xe602,0x61,0x304,0xca02,0x41,0x328,0xca02,0x61,\n-0x328,0xe602,0x43,0x301,0xe602,0x63,0x301,0xe602,0x43,0x302,0xe602,0x63,0x302,0xe602,0x43,0x307,\n-0xe602,0x63,0x307,0xe602,0x43,0x30c,0xe602,0x63,0x30c,0xe602,0x44,0x30c,0xe602,0x64,0x30c,0xe602,\n-0x45,0x306,0xe602,0x65,0x306,0xe602,0x45,0x307,0xe602,0x65,0x307,0xca02,0x45,0x328,0xca02,0x65,\n-0x328,0xe602,0x45,0x30c,0xe602,0x65,0x30c,0xe602,0x47,0x302,0xe602,0x67,0x302,0xe602,0x47,0x306,\n-0xe602,0x67,0x306,0xe602,0x47,0x307,0xe602,0x67,0x307,0xca02,0x47,0x327,0xca02,0x67,0x327,0xe602,\n-0x48,0x302,0xe602,0x68,0x302,0xe602,0x49,0x303,0xe602,0x69,0x303,0xe602,0x49,0x304,0xe602,0x69,\n-0x304,0xe602,0x49,0x306,0xe602,0x69,0x306,0xca02,0x49,0x328,0xca02,0x69,0x328,0xe602,0x49,0x307,\n-0xe602,0x4a,0x302,0xe602,0x6a,0x302,0xca02,0x4b,0x327,0xca02,0x6b,0x327,0xe602,0x4c,0x301,0xe602,\n-0x6c,0x301,0xca02,0x4c,0x327,0xca02,0x6c,0x327,0xe602,0x4c,0x30c,0xe602,0x6c,0x30c,0xe602,0x4e,\n-0x301,0xe602,0x6e,0x301,0xca02,0x4e,0x327,0xca02,0x6e,0x327,0xe602,0x4e,0x30c,0xe602,0x6e,0x30c,\n-0xe602,0x4f,0x306,0xe602,0x6f,0x306,0xe602,0x4f,0x30b,0xe602,0x6f,0x30b,0xe602,0x52,0x301,0xe602,\n-0x72,0x301,0xca02,0x52,0x327,0xca02,0x72,0x327,0xe602,0x52,0x30c,0xe602,0x72,0x30c,0xe602,0x53,\n-0x302,0xe602,0x73,0x302,0xca02,0x53,0x327,0xca02,0x73,0x327,0xca02,0x54,0x327,0xca02,0x74,0x327,\n-0xe602,0x54,0x30c,0xe602,0x74,0x30c,0xe602,0x55,0x306,0xe602,0x75,0x306,0xe602,0x55,0x30a,0xe602,\n-0x75,0x30a,0xe602,0x55,0x30b,0xe602,0x75,0x30b,0xca02,0x55,0x328,0xca02,0x75,0x328,0xe602,0x57,\n-0x302,0xe602,0x77,0x302,0xe602,0x59,0x302,0xe602,0x79,0x302,0xe602,0x59,0x308,0xe602,0x5a,0x301,\n-0xe602,0x7a,0x301,0xe602,0x5a,0x307,0xe602,0x7a,0x307,0xe602,0x5a,0x30c,0xe602,0x7a,0x30c,0xe602,\n-0x41,0x30c,0xe602,0x61,0x30c,0xe602,0x49,0x30c,0xe602,0x69,0x30c,0xe602,0x4f,0x30c,0xe602,0x6f,\n-0x30c,0xe602,0x55,0x30c,0xe602,0x75,0x30c,0xdc,0xe643,0x55,0x308,0x304,0xfc,0xe643,0x75,0x308,\n-0x304,0xdc,0xe643,0x55,0x308,0x301,0xfc,0xe643,0x75,0x308,0x301,0xdc,0xe643,0x55,0x308,0x30c,\n-0xfc,0xe643,0x75,0x308,0x30c,0xdc,0xe643,0x55,0x308,0x300,0xfc,0xe643,0x75,0x308,0x300,0xc4,\n-0xe643,0x41,0x308,0x304,0xe4,0xe643,0x61,0x308,0x304,0x226,0xe643,0x41,0x307,0x304,0x227,0xe643,\n-0x61,0x307,0x304,0xe602,0xc6,0x304,0xe602,0xe6,0x304,0xe602,0x47,0x30c,0xe602,0x67,0x30c,0xe602,\n-0x4b,0x30c,0xe602,0x6b,0x30c,0x1ea,0xe643,0x4f,0x328,0x304,0x1eb,0xe643,0x6f,0x328,0x304,0xe602,\n-0x1b7,0x30c,0xe602,0x292,0x30c,0xe602,0x6a,0x30c,0xe602,0x47,0x301,0xe602,0x67,0x301,0xe602,0x4e,\n-0x300,0xe602,0x6e,0x300,0xc5,0xe643,0x41,0x30a,0x301,0xe5,0xe643,0x61,0x30a,0x301,0xe602,0xc6,\n-0x301,0xe602,0xe6,0x301,0xe602,0xd8,0x301,0xe602,0xf8,0x301,0xe602,0x41,0x30f,0xe602,0x61,0x30f,\n-0xe602,0x41,0x311,0xe602,0x61,0x311,0xe602,0x45,0x30f,0xe602,0x65,0x30f,0xe602,0x45,0x311,0xe602,\n-0x65,0x311,0xe602,0x49,0x30f,0xe602,0x69,0x30f,0xe602,0x49,0x311,0xe602,0x69,0x311,0xe602,0x4f,\n-0x30f,0xe602,0x6f,0x30f,0xe602,0x4f,0x311,0xe602,0x6f,0x311,0xe602,0x52,0x30f,0xe602,0x72,0x30f,\n-0xe602,0x52,0x311,0xe602,0x72,0x311,0xe602,0x55,0x30f,0xe602,0x75,0x30f,0xe602,0x55,0x311,0xe602,\n-0x75,0x311,0xdc02,0x53,0x326,0xdc02,0x73,0x326,0xdc02,0x54,0x326,0xdc02,0x74,0x326,0xe602,0x48,\n-0x30c,0xe602,0x68,0x30c,0xd6,0xe643,0x4f,0x308,0x304,0xf6,0xe643,0x6f,0x308,0x304,0xd5,0xe643,\n-0x4f,0x303,0x304,0xf5,0xe643,0x6f,0x303,0x304,0x22e,0xe643,0x4f,0x307,0x304,0x22f,0xe643,0x6f,\n-0x307,0x304,0xe602,0x59,0x304,0xe602,0x79,0x304,0xe602,0xa8,0x301,0xe602,0x391,0x301,0xe602,0x395,\n-0x301,0xe602,0x397,0x301,0xe602,0x399,0x301,0xe602,0x39f,0x301,0xe602,0x3a5,0x301,0xe602,0x3a9,0x301,\n-0x3ca,0xe643,0x3b9,0x308,0x301,0xe602,0x399,0x308,0xe602,0x3a5,0x308,0xe602,0x3b5,0x301,0xe602,0x3b9,\n-0x301,0x3cb,0xe643,0x3c5,0x308,0x301,0xe602,0x3bf,0x301,0xe602,0x3c5,0x301,0xe602,0x3d2,0x301,0xe602,\n-0x3d2,0x308,0xe602,0x415,0x300,0xe602,0x415,0x308,0xe602,0x413,0x301,0xe602,0x406,0x308,0xe602,0x41a,\n-0x301,0xe602,0x418,0x300,0xe602,0x423,0x306,0xe602,0x418,0x306,0xe602,0x438,0x306,0xe602,0x435,0x300,\n-0xe602,0x435,0x308,0xe602,0x433,0x301,0xe602,0x456,0x308,0xe602,0x43a,0x301,0xe602,0x438,0x300,0xe602,\n-0x443,0x306,0xe602,0x474,0x30f,0xe602,0x475,0x30f,0xe602,0x416,0x306,0xe602,0x436,0x306,0xe602,0x410,\n-0x306,0xe602,0x430,0x306,0xe602,0x410,0x308,0xe602,0x430,0x308,0xe602,0x415,0x306,0xe602,0x435,0x306,\n-0xe602,0x4d8,0x308,0xe602,0x4d9,0x308,0xe602,0x416,0x308,0xe602,0x436,0x308,0xe602,0x417,0x308,0xe602,\n-0x437,0x308,0xe602,0x418,0x304,0xe602,0x438,0x304,0xe602,0x418,0x308,0xe602,0x438,0x308,0xe602,0x41e,\n-0x308,0xe602,0x43e,0x308,0xe602,0x4e8,0x308,0xe602,0x4e9,0x308,0xe602,0x42d,0x308,0xe602,0x44d,0x308,\n-0xe602,0x423,0x304,0xe602,0x443,0x304,0xe602,0x423,0x308,0xe602,0x443,0x308,0xe602,0x423,0x30b,0xe602,\n-0x443,0x30b,0xe602,0x427,0x308,0xe602,0x447,0x308,0xe602,0x42b,0x308,0xe602,0x44b,0x308,0xe602,0x627,\n-0x653,0xe602,0x627,0x654,0xe602,0x648,0x654,0xdc02,0x627,0x655,0xe602,0x64a,0x654,0xe602,0x6d5,0x654,\n-0xe602,0x6c1,0x654,0xe602,0x6d2,0x654,0x702,0x928,0x93c,0x702,0x930,0x93c,0x702,0x933,0x93c,2,\n-0x9c7,0x9be,2,0x9c7,0x9d7,2,0xb47,0xb56,2,0xb47,0xb3e,2,0xb47,0xb57,2,0xb92,\n-0xbd7,2,0xbc6,0xbbe,2,0xbc7,0xbbe,2,0xbc6,0xbd7,0x5b02,0xc46,0xc56,2,0xcbf,0xcd5,\n-2,0xcc6,0xcd5,2,0xcc6,0xcd6,0xcca,0x43,0xcc6,0xcc2,0xcd5,2,0xd46,0xd3e,2,0xd47,\n-0xd3e,2,0xd46,0xd57,0x902,0xdd9,0xdca,0xddc,0x943,0xdd9,0xdcf,0xdca,2,0xdd9,0xddf,2,\n-0x1025,0x102e,2,0x1b05,0x1b35,2,0x1b07,0x1b35,2,0x1b09,0x1b35,2,0x1b0b,0x1b35,2,0x1b0d,\n-0x1b35,2,0x1b11,0x1b35,2,0x1b3a,0x1b35,2,0x1b3c,0x1b35,2,0x1b3e,0x1b35,2,0x1b3f,0x1b35,\n-2,0x1b42,0x1b35,0xdc02,0x41,0x325,0xdc02,0x61,0x325,0xe602,0x42,0x307,0xe602,0x62,0x307,0xdc02,\n-0x42,0x323,0xdc02,0x62,0x323,0xdc02,0x42,0x331,0xdc02,0x62,0x331,0xc7,0xe643,0x43,0x327,0x301,\n-0xe7,0xe643,0x63,0x327,0x301,0xe602,0x44,0x307,0xe602,0x64,0x307,0xdc02,0x44,0x323,0xdc02,0x64,\n-0x323,0xdc02,0x44,0x331,0xdc02,0x64,0x331,0xca02,0x44,0x327,0xca02,0x64,0x327,0xdc02,0x44,0x32d,\n-0xdc02,0x64,0x32d,0x112,0xe643,0x45,0x304,0x300,0x113,0xe643,0x65,0x304,0x300,0x112,0xe643,0x45,\n-0x304,0x301,0x113,0xe643,0x65,0x304,0x301,0xdc02,0x45,0x32d,0xdc02,0x65,0x32d,0xdc02,0x45,0x330,\n-0xdc02,0x65,0x330,0x228,0xe643,0x45,0x327,0x306,0x229,0xe643,0x65,0x327,0x306,0xe602,0x46,0x307,\n-0xe602,0x66,0x307,0xe602,0x47,0x304,0xe602,0x67,0x304,0xe602,0x48,0x307,0xe602,0x68,0x307,0xdc02,\n-0x48,0x323,0xdc02,0x68,0x323,0xe602,0x48,0x308,0xe602,0x68,0x308,0xca02,0x48,0x327,0xca02,0x68,\n-0x327,0xdc02,0x48,0x32e,0xdc02,0x68,0x32e,0xdc02,0x49,0x330,0xdc02,0x69,0x330,0xcf,0xe643,0x49,\n-0x308,0x301,0xef,0xe643,0x69,0x308,0x301,0xe602,0x4b,0x301,0xe602,0x6b,0x301,0xdc02,0x4b,0x323,\n-0xdc02,0x6b,0x323,0xdc02,0x4b,0x331,0xdc02,0x6b,0x331,0x1e36,0xe643,0x4c,0x323,0x304,0x1e37,0xe643,\n-0x6c,0x323,0x304,0xdc02,0x4c,0x331,0xdc02,0x6c,0x331,0xdc02,0x4c,0x32d,0xdc02,0x6c,0x32d,0xe602,\n-0x4d,0x301,0xe602,0x6d,0x301,0xe602,0x4d,0x307,0xe602,0x6d,0x307,0xdc02,0x4d,0x323,0xdc02,0x6d,\n-0x323,0xe602,0x4e,0x307,0xe602,0x6e,0x307,0xdc02,0x4e,0x323,0xdc02,0x6e,0x323,0xdc02,0x4e,0x331,\n-0xdc02,0x6e,0x331,0xdc02,0x4e,0x32d,0xdc02,0x6e,0x32d,0xd5,0xe643,0x4f,0x303,0x301,0xf5,0xe643,\n-0x6f,0x303,0x301,0xd5,0xe643,0x4f,0x303,0x308,0xf5,0xe643,0x6f,0x303,0x308,0x14c,0xe643,0x4f,\n-0x304,0x300,0x14d,0xe643,0x6f,0x304,0x300,0x14c,0xe643,0x4f,0x304,0x301,0x14d,0xe643,0x6f,0x304,\n-0x301,0xe602,0x50,0x301,0xe602,0x70,0x301,0xe602,0x50,0x307,0xe602,0x70,0x307,0xe602,0x52,0x307,\n-0xe602,0x72,0x307,0x1e5a,0xe643,0x52,0x323,0x304,0x1e5b,0xe643,0x72,0x323,0x304,0xdc02,0x52,0x331,\n-0xdc02,0x72,0x331,0xe602,0x53,0x307,0xe602,0x73,0x307,0x15a,0xe643,0x53,0x301,0x307,0x15b,0xe643,\n-0x73,0x301,0x307,0x160,0xe643,0x53,0x30c,0x307,0x161,0xe643,0x73,0x30c,0x307,0x1e62,0xe643,0x53,\n-0x323,0x307,0x1e63,0xe643,0x73,0x323,0x307,0xe602,0x54,0x307,0xe602,0x74,0x307,0xdc02,0x54,0x323,\n-0xdc02,0x74,0x323,0xdc02,0x54,0x331,0xdc02,0x74,0x331,0xdc02,0x54,0x32d,0xdc02,0x74,0x32d,0xdc02,\n-0x55,0x324,0xdc02,0x75,0x324,0xdc02,0x55,0x330,0xdc02,0x75,0x330,0xdc02,0x55,0x32d,0xdc02,0x75,\n-0x32d,0x168,0xe643,0x55,0x303,0x301,0x169,0xe643,0x75,0x303,0x301,0x16a,0xe643,0x55,0x304,0x308,\n-0x16b,0xe643,0x75,0x304,0x308,0xe602,0x56,0x303,0xe602,0x76,0x303,0xdc02,0x56,0x323,0xdc02,0x76,\n-0x323,0xe602,0x57,0x300,0xe602,0x77,0x300,0xe602,0x57,0x301,0xe602,0x77,0x301,0xe602,0x57,0x308,\n-0xe602,0x77,0x308,0xe602,0x57,0x307,0xe602,0x77,0x307,0xdc02,0x57,0x323,0xdc02,0x77,0x323,0xe602,\n-0x58,0x307,0xe602,0x78,0x307,0xe602,0x58,0x308,0xe602,0x78,0x308,0xe602,0x59,0x307,0xe602,0x79,\n-0x307,0xe602,0x5a,0x302,0xe602,0x7a,0x302,0xdc02,0x5a,0x323,0xdc02,0x7a,0x323,0xdc02,0x5a,0x331,\n-0xdc02,0x7a,0x331,0xdc02,0x68,0x331,0xe602,0x74,0x308,0xe602,0x77,0x30a,0xe602,0x79,0x30a,0xe602,\n-0x17f,0x307,0xe602,0x41,0x309,0xe602,0x61,0x309,0xc2,0xe643,0x41,0x302,0x301,0xe2,0xe643,0x61,\n-0x302,0x301,0xc2,0xe643,0x41,0x302,0x300,0xe2,0xe643,0x61,0x302,0x300,0xc2,0xe643,0x41,0x302,\n-0x309,0xe2,0xe643,0x61,0x302,0x309,0xc2,0xe643,0x41,0x302,0x303,0xe2,0xe643,0x61,0x302,0x303,\n-0x1ea0,0xe643,0x41,0x323,0x302,0x1ea1,0xe643,0x61,0x323,0x302,0x102,0xe643,0x41,0x306,0x301,0x103,\n-0xe643,0x61,0x306,0x301,0x102,0xe643,0x41,0x306,0x300,0x103,0xe643,0x61,0x306,0x300,0x102,0xe643,\n-0x41,0x306,0x309,0x103,0xe643,0x61,0x306,0x309,0x102,0xe643,0x41,0x306,0x303,0x103,0xe643,0x61,\n-0x306,0x303,0x1ea0,0xe643,0x41,0x323,0x306,0x1ea1,0xe643,0x61,0x323,0x306,0xe602,0x45,0x309,0xe602,\n-0x65,0x309,0xe602,0x45,0x303,0xe602,0x65,0x303,0xca,0xe643,0x45,0x302,0x301,0xea,0xe643,0x65,\n-0x302,0x301,0xca,0xe643,0x45,0x302,0x300,0xea,0xe643,0x65,0x302,0x300,0xca,0xe643,0x45,0x302,\n-0x309,0xea,0xe643,0x65,0x302,0x309,0xca,0xe643,0x45,0x302,0x303,0xea,0xe643,0x65,0x302,0x303,\n-0x1eb8,0xe643,0x45,0x323,0x302,0x1eb9,0xe643,0x65,0x323,0x302,0xe602,0x49,0x309,0xe602,0x69,0x309,\n-0xdc02,0x49,0x323,0xdc02,0x69,0x323,0xe602,0x4f,0x309,0xe602,0x6f,0x309,0xd4,0xe643,0x4f,0x302,\n-0x301,0xf4,0xe643,0x6f,0x302,0x301,0xd4,0xe643,0x4f,0x302,0x300,0xf4,0xe643,0x6f,0x302,0x300,\n-0xd4,0xe643,0x4f,0x302,0x309,0xf4,0xe643,0x6f,0x302,0x309,0xd4,0xe643,0x4f,0x302,0x303,0xf4,\n-0xe643,0x6f,0x302,0x303,0x1ecc,0xe643,0x4f,0x323,0x302,0x1ecd,0xe643,0x6f,0x323,0x302,0x1a0,0xe643,\n-0x4f,0x31b,0x301,0x1a1,0xe643,0x6f,0x31b,0x301,0x1a0,0xe643,0x4f,0x31b,0x300,0x1a1,0xe643,0x6f,\n-0x31b,0x300,0x1a0,0xe643,0x4f,0x31b,0x309,0x1a1,0xe643,0x6f,0x31b,0x309,0x1a0,0xe643,0x4f,0x31b,\n-0x303,0x1a1,0xe643,0x6f,0x31b,0x303,0x1a0,0xdc43,0x4f,0x31b,0x323,0x1a1,0xdc43,0x6f,0x31b,0x323,\n-0xdc02,0x55,0x323,0xdc02,0x75,0x323,0xe602,0x55,0x309,0xe602,0x75,0x309,0x1af,0xe643,0x55,0x31b,\n-0x301,0x1b0,0xe643,0x75,0x31b,0x301,0x1af,0xe643,0x55,0x31b,0x300,0x1b0,0xe643,0x75,0x31b,0x300,\n-0x1af,0xe643,0x55,0x31b,0x309,0x1b0,0xe643,0x75,0x31b,0x309,0x1af,0xe643,0x55,0x31b,0x303,0x1b0,\n-0xe643,0x75,0x31b,0x303,0x1af,0xdc43,0x55,0x31b,0x323,0x1b0,0xdc43,0x75,0x31b,0x323,0xe602,0x59,\n-0x300,0xe602,0x79,0x300,0xdc02,0x59,0x323,0xdc02,0x79,0x323,0xe602,0x59,0x309,0xe602,0x79,0x309,\n-0xe602,0x59,0x303,0xe602,0x79,0x303,0x1f10,0xe643,0x3b5,0x313,0x300,0x1f11,0xe643,0x3b5,0x314,0x300,\n-0x1f10,0xe643,0x3b5,0x313,0x301,0x1f11,0xe643,0x3b5,0x314,0x301,0x1f18,0xe643,0x395,0x313,0x300,0x1f19,\n-0xe643,0x395,0x314,0x300,0x1f18,0xe643,0x395,0x313,0x301,0x1f19,0xe643,0x395,0x314,0x301,0x1f30,0xe643,\n-0x3b9,0x313,0x300,0x1f31,0xe643,0x3b9,0x314,0x300,0x1f30,0xe643,0x3b9,0x313,0x301,0x1f31,0xe643,0x3b9,\n-0x314,0x301,0x1f30,0xe643,0x3b9,0x313,0x342,0x1f31,0xe643,0x3b9,0x314,0x342,0x1f38,0xe643,0x399,0x313,\n-0x300,0x1f39,0xe643,0x399,0x314,0x300,0x1f38,0xe643,0x399,0x313,0x301,0x1f39,0xe643,0x399,0x314,0x301,\n-0x1f38,0xe643,0x399,0x313,0x342,0x1f39,0xe643,0x399,0x314,0x342,0x1f40,0xe643,0x3bf,0x313,0x300,0x1f41,\n-0xe643,0x3bf,0x314,0x300,0x1f40,0xe643,0x3bf,0x313,0x301,0x1f41,0xe643,0x3bf,0x314,0x301,0x1f48,0xe643,\n-0x39f,0x313,0x300,0x1f49,0xe643,0x39f,0x314,0x300,0x1f48,0xe643,0x39f,0x313,0x301,0x1f49,0xe643,0x39f,\n-0x314,0x301,0x1f50,0xe643,0x3c5,0x313,0x300,0x1f51,0xe643,0x3c5,0x314,0x300,0x1f50,0xe643,0x3c5,0x313,\n-0x301,0x1f51,0xe643,0x3c5,0x314,0x301,0x1f50,0xe643,0x3c5,0x313,0x342,0x1f51,0xe643,0x3c5,0x314,0x342,\n-0x1f59,0xe643,0x3a5,0x314,0x300,0x1f59,0xe643,0x3a5,0x314,0x301,0x1f59,0xe643,0x3a5,0x314,0x342,0xe602,\n-0x3b5,0x300,0xe602,0x3b9,0x300,0xe602,0x3bf,0x300,0xe602,0x3c5,0x300,0x1f00,0xf043,0x3b1,0x313,0x345,\n-0x1f01,0xf043,0x3b1,0x314,0x345,0x1f02,0x345,2,0xf044,0x3b1,0x313,0x300,0x345,0x1f03,0x345,2,\n-0xf044,0x3b1,0x314,0x300,0x345,0x1f04,0x345,2,0xf044,0x3b1,0x313,0x301,0x345,0x1f05,0x345,2,\n-0xf044,0x3b1,0x314,0x301,0x345,0x1f06,0x345,2,0xf044,0x3b1,0x313,0x342,0x345,0x1f07,0x345,2,\n-0xf044,0x3b1,0x314,0x342,0x345,0x1f08,0xf043,0x391,0x313,0x345,0x1f09,0xf043,0x391,0x314,0x345,0x1f0a,\n-0x345,2,0xf044,0x391,0x313,0x300,0x345,0x1f0b,0x345,2,0xf044,0x391,0x314,0x300,0x345,0x1f0c,\n-0x345,2,0xf044,0x391,0x313,0x301,0x345,0x1f0d,0x345,2,0xf044,0x391,0x314,0x301,0x345,0x1f0e,\n-0x345,2,0xf044,0x391,0x313,0x342,0x345,0x1f0f,0x345,2,0xf044,0x391,0x314,0x342,0x345,0x1f20,\n-0xf043,0x3b7,0x313,0x345,0x1f21,0xf043,0x3b7,0x314,0x345,0x1f22,0x345,2,0xf044,0x3b7,0x313,0x300,\n-0x345,0x1f23,0x345,2,0xf044,0x3b7,0x314,0x300,0x345,0x1f24,0x345,2,0xf044,0x3b7,0x313,0x301,\n-0x345,0x1f25,0x345,2,0xf044,0x3b7,0x314,0x301,0x345,0x1f26,0x345,2,0xf044,0x3b7,0x313,0x342,\n-0x345,0x1f27,0x345,2,0xf044,0x3b7,0x314,0x342,0x345,0x1f28,0xf043,0x397,0x313,0x345,0x1f29,0xf043,\n-0x397,0x314,0x345,0x1f2a,0x345,2,0xf044,0x397,0x313,0x300,0x345,0x1f2b,0x345,2,0xf044,0x397,\n-0x314,0x300,0x345,0x1f2c,0x345,2,0xf044,0x397,0x313,0x301,0x345,0x1f2d,0x345,2,0xf044,0x397,\n-0x314,0x301,0x345,0x1f2e,0x345,2,0xf044,0x397,0x313,0x342,0x345,0x1f2f,0x345,2,0xf044,0x397,\n-0x314,0x342,0x345,0x1f60,0xf043,0x3c9,0x313,0x345,0x1f61,0xf043,0x3c9,0x314,0x345,0x1f62,0x345,2,\n-0xf044,0x3c9,0x313,0x300,0x345,0x1f63,0x345,2,0xf044,0x3c9,0x314,0x300,0x345,0x1f64,0x345,2,\n-0xf044,0x3c9,0x313,0x301,0x345,0x1f65,0x345,2,0xf044,0x3c9,0x314,0x301,0x345,0x1f66,0x345,2,\n-0xf044,0x3c9,0x313,0x342,0x345,0x1f67,0x345,2,0xf044,0x3c9,0x314,0x342,0x345,0x1f68,0xf043,0x3a9,\n-0x313,0x345,0x1f69,0xf043,0x3a9,0x314,0x345,0x1f6a,0x345,2,0xf044,0x3a9,0x313,0x300,0x345,0x1f6b,\n-0x345,2,0xf044,0x3a9,0x314,0x300,0x345,0x1f6c,0x345,2,0xf044,0x3a9,0x313,0x301,0x345,0x1f6d,\n-0x345,2,0xf044,0x3a9,0x314,0x301,0x345,0x1f6e,0x345,2,0xf044,0x3a9,0x313,0x342,0x345,0x1f6f,\n-0x345,2,0xf044,0x3a9,0x314,0x342,0x345,0xe602,0x3b1,0x306,0xe602,0x3b1,0x304,0x1f70,0xf043,0x3b1,\n-0x300,0x345,0xf002,0x3b1,0x345,0x3ac,0xf043,0x3b1,0x301,0x345,0x1fb6,0xf043,0x3b1,0x342,0x345,0xe602,\n-0x391,0x306,0xe602,0x391,0x304,0xe602,0x391,0x300,0xf002,0x391,0x345,0xe602,0xa8,0x342,0x1f74,0xf043,\n-0x3b7,0x300,0x345,0xf002,0x3b7,0x345,0x3ae,0xf043,0x3b7,0x301,0x345,0x1fc6,0xf043,0x3b7,0x342,0x345,\n-0xe602,0x395,0x300,0xe602,0x397,0x300,0xf002,0x397,0x345,0xe602,0x1fbf,0x300,0xe602,0x1fbf,0x301,0xe602,\n-0x1fbf,0x342,0xe602,0x3b9,0x306,0xe602,0x3b9,0x304,0x3ca,0xe643,0x3b9,0x308,0x300,0xe602,0x3b9,0x342,\n-0x3ca,0xe643,0x3b9,0x308,0x342,0xe602,0x399,0x306,0xe602,0x399,0x304,0xe602,0x399,0x300,0xe602,0x1ffe,\n-0x300,0xe602,0x1ffe,0x301,0xe602,0x1ffe,0x342,0xe602,0x3c5,0x306,0xe602,0x3c5,0x304,0x3cb,0xe643,0x3c5,\n-0x308,0x300,0xe602,0x3c1,0x313,0xe602,0x3c1,0x314,0xe602,0x3c5,0x342,0x3cb,0xe643,0x3c5,0x308,0x342,\n-0xe602,0x3a5,0x306,0xe602,0x3a5,0x304,0xe602,0x3a5,0x300,0xe602,0x3a1,0x314,0xe602,0xa8,0x300,0x1f7c,\n-0xf043,0x3c9,0x300,0x345,0xf002,0x3c9,0x345,0x3ce,0xf043,0x3c9,0x301,0x345,0x1ff6,0xf043,0x3c9,0x342,\n-0x345,0xe602,0x39f,0x300,0xe602,0x3a9,0x300,0xf002,0x3a9,0x345,0x102,0x2190,0x338,0x102,0x2192,0x338,\n-0x102,0x2194,0x338,0x102,0x21d0,0x338,0x102,0x21d4,0x338,0x102,0x21d2,0x338,0x102,0x2203,0x338,0x102,\n-0x2208,0x338,0x102,0x220b,0x338,0x102,0x2223,0x338,0x102,0x2225,0x338,0x102,0x223c,0x338,0x102,0x2243,\n-0x338,0x102,0x2245,0x338,0x102,0x2248,0x338,0x102,0x3d,0x338,0x102,0x2261,0x338,0x102,0x224d,0x338,\n-0x102,0x3c,0x338,0x102,0x3e,0x338,0x102,0x2264,0x338,0x102,0x2265,0x338,0x102,0x2272,0x338,0x102,\n-0x2273,0x338,0x102,0x2276,0x338,0x102,0x2277,0x338,0x102,0x227a,0x338,0x102,0x227b,0x338,0x102,0x2282,\n-0x338,0x102,0x2283,0x338,0x102,0x2286,0x338,0x102,0x2287,0x338,0x102,0x22a2,0x338,0x102,0x22a8,0x338,\n-0x102,0x22a9,0x338,0x102,0x22ab,0x338,0x102,0x227c,0x338,0x102,0x227d,0x338,0x102,0x2291,0x338,0x102,\n-0x2292,0x338,0x102,0x22b2,0x338,0x102,0x22b3,0x338,0x102,0x22b4,0x338,0x102,0x22b5,0x338,0x802,0x304b,\n-0x3099,0x802,0x304d,0x3099,0x802,0x304f,0x3099,0x802,0x3051,0x3099,0x802,0x3053,0x3099,0x802,0x3055,0x3099,\n-0x802,0x3057,0x3099,0x802,0x3059,0x3099,0x802,0x305b,0x3099,0x802,0x305d,0x3099,0x802,0x305f,0x3099,0x802,\n-0x3061,0x3099,0x802,0x3064,0x3099,0x802,0x3066,0x3099,0x802,0x3068,0x3099,0x802,0x306f,0x3099,0x802,0x306f,\n-0x309a,0x802,0x3072,0x3099,0x802,0x3072,0x309a,0x802,0x3075,0x3099,0x802,0x3075,0x309a,0x802,0x3078,0x3099,\n-0x802,0x3078,0x309a,0x802,0x307b,0x3099,0x802,0x307b,0x309a,0x802,0x3046,0x3099,0x802,0x309d,0x3099,0x802,\n-0x30ab,0x3099,0x802,0x30ad,0x3099,0x802,0x30af,0x3099,0x802,0x30b1,0x3099,0x802,0x30b3,0x3099,0x802,0x30b5,\n-0x3099,0x802,0x30b7,0x3099,0x802,0x30b9,0x3099,0x802,0x30bb,0x3099,0x802,0x30bd,0x3099,0x802,0x30bf,0x3099,\n-0x802,0x30c1,0x3099,0x802,0x30c4,0x3099,0x802,0x30c6,0x3099,0x802,0x30c8,0x3099,0x802,0x30cf,0x3099,0x802,\n-0x30cf,0x309a,0x802,0x30d2,0x3099,0x802,0x30d2,0x309a,0x802,0x30d5,0x3099,0x802,0x30d5,0x309a,0x802,0x30d8,\n-0x3099,0x802,0x30d8,0x309a,0x802,0x30db,0x3099,0x802,0x30db,0x309a,0x802,0x30a6,0x3099,0x802,0x30ef,0x3099,\n-0x802,0x30f0,0x3099,0x802,0x30f1,0x3099,0x802,0x30f2,0x3099,0x802,0x30fd,0x3099,0x704,0xd804,0xdc99,0xd804,\n-0xdcba,0x704,0xd804,0xdc9b,0xd804,0xdcba,0x704,0xd804,0xdca5,0xd804,0xdcba,4,0xd804,0xdd31,0xd804,0xdd27,\n-4,0xd804,0xdd32,0xd804,0xdd27,4,0xd804,0xdf47,0xd804,0xdf3e,4,0xd804,0xdf47,0xd804,0xdf57,4,\n-0xd805,0xdcb9,0xd805,0xdcba,4,0xd805,0xdcb9,0xd805,0xdcb0,4,0xd805,0xdcb9,0xd805,0xdcbd,4,0xd805,\n-0xddb8,0xd805,0xddaf,4,0xd805,0xddb9,0xd805,0xddaf,1,0x2b9,1,0x3b,1,0xb7,0x702,0x915,\n-0x93c,0x702,0x916,0x93c,0x702,0x917,0x93c,0x702,0x91c,0x93c,0x702,0x921,0x93c,0x702,0x922,0x93c,\n-0x702,0x92b,0x93c,0x702,0x92f,0x93c,0x702,0x9a1,0x9bc,0x702,0x9a2,0x9bc,0x702,0x9af,0x9bc,0x702,\n-0xa32,0xa3c,0x702,0xa38,0xa3c,0x702,0xa16,0xa3c,0x702,0xa17,0xa3c,0x702,0xa1c,0xa3c,0x702,0xa2b,\n-0xa3c,0x702,0xb21,0xb3c,0x702,0xb22,0xb3c,2,0xf42,0xfb7,2,0xf4c,0xfb7,2,0xf51,0xfb7,\n-2,0xf56,0xfb7,2,0xf5b,0xfb7,2,0xf40,0xfb5,0x8202,0xfb2,0xf80,0x8202,0xfb3,0xf80,2,\n-0xf92,0xfb7,2,0xf9c,0xfb7,2,0xfa1,0xfb7,2,0xfa6,0xfb7,2,0xfab,0xfb7,2,0xf90,\n-0xfb5,1,0x3b9,1,0x60,1,0xb4,1,0x3a9,1,0x4b,1,0x3008,1,0x3009,0x102,\n-0x2add,0x338,1,0x8c48,1,0x66f4,1,0x8eca,1,0x8cc8,1,0x6ed1,1,0x4e32,1,0x53e5,\n-1,0x9f9c,1,0x5951,1,0x91d1,1,0x5587,1,0x5948,1,0x61f6,1,0x7669,1,0x7f85,\n-1,0x863f,1,0x87ba,1,0x88f8,1,0x908f,1,0x6a02,1,0x6d1b,1,0x70d9,1,0x73de,\n-1,0x843d,1,0x916a,1,0x99f1,1,0x4e82,1,0x5375,1,0x6b04,1,0x721b,1,0x862d,\n-1,0x9e1e,1,0x5d50,1,0x6feb,1,0x85cd,1,0x8964,1,0x62c9,1,0x81d8,1,0x881f,\n-1,0x5eca,1,0x6717,1,0x6d6a,1,0x72fc,1,0x90ce,1,0x4f86,1,0x51b7,1,0x52de,\n-1,0x64c4,1,0x6ad3,1,0x7210,1,0x76e7,1,0x8001,1,0x8606,1,0x865c,1,0x8def,\n-1,0x9732,1,0x9b6f,1,0x9dfa,1,0x788c,1,0x797f,1,0x7da0,1,0x83c9,1,0x9304,\n-1,0x9e7f,1,0x8ad6,1,0x58df,1,0x5f04,1,0x7c60,1,0x807e,1,0x7262,1,0x78ca,\n-1,0x8cc2,1,0x96f7,1,0x58d8,1,0x5c62,1,0x6a13,1,0x6dda,1,0x6f0f,1,0x7d2f,\n-1,0x7e37,1,0x964b,1,0x52d2,1,0x808b,1,0x51dc,1,0x51cc,1,0x7a1c,1,0x7dbe,\n-1,0x83f1,1,0x9675,1,0x8b80,1,0x62cf,1,0x8afe,1,0x4e39,1,0x5be7,1,0x6012,\n-1,0x7387,1,0x7570,1,0x5317,1,0x78fb,1,0x4fbf,1,0x5fa9,1,0x4e0d,1,0x6ccc,\n-1,0x6578,1,0x7d22,1,0x53c3,1,0x585e,1,0x7701,1,0x8449,1,0x8aaa,1,0x6bba,\n-1,0x8fb0,1,0x6c88,1,0x62fe,1,0x82e5,1,0x63a0,1,0x7565,1,0x4eae,1,0x5169,\n-1,0x51c9,1,0x6881,1,0x7ce7,1,0x826f,1,0x8ad2,1,0x91cf,1,0x52f5,1,0x5442,\n-1,0x5973,1,0x5eec,1,0x65c5,1,0x6ffe,1,0x792a,1,0x95ad,1,0x9a6a,1,0x9e97,\n-1,0x9ece,1,0x529b,1,0x66c6,1,0x6b77,1,0x8f62,1,0x5e74,1,0x6190,1,0x6200,\n-1,0x649a,1,0x6f23,1,0x7149,1,0x7489,1,0x79ca,1,0x7df4,1,0x806f,1,0x8f26,\n-1,0x84ee,1,0x9023,1,0x934a,1,0x5217,1,0x52a3,1,0x54bd,1,0x70c8,1,0x88c2,\n-1,0x5ec9,1,0x5ff5,1,0x637b,1,0x6bae,1,0x7c3e,1,0x7375,1,0x4ee4,1,0x56f9,\n-1,0x5dba,1,0x601c,1,0x73b2,1,0x7469,1,0x7f9a,1,0x8046,1,0x9234,1,0x96f6,\n-1,0x9748,1,0x9818,1,0x4f8b,1,0x79ae,1,0x91b4,1,0x96b8,1,0x60e1,1,0x4e86,\n-1,0x50da,1,0x5bee,1,0x5c3f,1,0x6599,1,0x71ce,1,0x7642,1,0x84fc,1,0x907c,\n-1,0x9f8d,1,0x6688,1,0x962e,1,0x5289,1,0x677b,1,0x67f3,1,0x6d41,1,0x6e9c,\n-1,0x7409,1,0x7559,1,0x786b,1,0x7d10,1,0x985e,1,0x516d,1,0x622e,1,0x9678,\n-1,0x502b,1,0x5d19,1,0x6dea,1,0x8f2a,1,0x5f8b,1,0x6144,1,0x6817,1,0x9686,\n-1,0x5229,1,0x540f,1,0x5c65,1,0x6613,1,0x674e,1,0x68a8,1,0x6ce5,1,0x7406,\n-1,0x75e2,1,0x7f79,1,0x88cf,1,0x88e1,1,0x91cc,1,0x96e2,1,0x533f,1,0x6eba,\n-1,0x541d,1,0x71d0,1,0x7498,1,0x85fa,1,0x96a3,1,0x9c57,1,0x9e9f,1,0x6797,\n-1,0x6dcb,1,0x81e8,1,0x7acb,1,0x7b20,1,0x7c92,1,0x72c0,1,0x7099,1,0x8b58,\n-1,0x4ec0,1,0x8336,1,0x523a,1,0x5207,1,0x5ea6,1,0x62d3,1,0x7cd6,1,0x5b85,\n-1,0x6d1e,1,0x66b4,1,0x8f3b,1,0x884c,1,0x964d,1,0x898b,1,0x5ed3,1,0x5140,\n-1,0x55c0,1,0x585a,1,0x6674,1,0x51de,1,0x732a,1,0x76ca,1,0x793c,1,0x795e,\n-1,0x7965,1,0x798f,1,0x9756,1,0x7cbe,1,0x7fbd,1,0x8612,1,0x8af8,1,0x9038,\n-1,0x90fd,1,0x98ef,1,0x98fc,1,0x9928,1,0x9db4,1,0x90de,1,0x96b7,1,0x4fae,\n-1,0x50e7,1,0x514d,1,0x52c9,1,0x52e4,1,0x5351,1,0x559d,1,0x5606,1,0x5668,\n-1,0x5840,1,0x58a8,1,0x5c64,1,0x5c6e,1,0x6094,1,0x6168,1,0x618e,1,0x61f2,\n-1,0x654f,1,0x65e2,1,0x6691,1,0x6885,1,0x6d77,1,0x6e1a,1,0x6f22,1,0x716e,\n-1,0x722b,1,0x7422,1,0x7891,1,0x793e,1,0x7949,1,0x7948,1,0x7950,1,0x7956,\n-1,0x795d,1,0x798d,1,0x798e,1,0x7a40,1,0x7a81,1,0x7bc0,1,0x7e09,1,0x7e41,\n-1,0x7f72,1,0x8005,1,0x81ed,1,0x8279,1,0x8457,1,0x8910,1,0x8996,1,0x8b01,\n-1,0x8b39,1,0x8cd3,1,0x8d08,1,0x8fb6,1,0x96e3,1,0x97ff,1,0x983b,1,0x6075,\n-2,0xd850,0xdeee,1,0x8218,1,0x4e26,1,0x51b5,1,0x5168,1,0x4f80,1,0x5145,1,\n-0x5180,1,0x52c7,1,0x52fa,1,0x5555,1,0x5599,1,0x55e2,1,0x58b3,1,0x5944,1,\n-0x5954,1,0x5a62,1,0x5b28,1,0x5ed2,1,0x5ed9,1,0x5f69,1,0x5fad,1,0x60d8,1,\n-0x614e,1,0x6108,1,0x6160,1,0x6234,1,0x63c4,1,0x641c,1,0x6452,1,0x6556,1,\n-0x671b,1,0x6756,1,0x6b79,1,0x6edb,1,0x6ecb,1,0x701e,1,0x77a7,1,0x7235,1,\n-0x72af,1,0x7471,1,0x7506,1,0x753b,1,0x761d,1,0x761f,1,0x76db,1,0x76f4,1,\n-0x774a,1,0x7740,1,0x78cc,1,0x7ab1,1,0x7c7b,1,0x7d5b,1,0x7f3e,1,0x8352,1,\n-0x83ef,1,0x8779,1,0x8941,1,0x8986,1,0x8abf,1,0x8acb,1,0x8aed,1,0x8b8a,1,\n-0x8f38,1,0x9072,1,0x9199,1,0x9276,1,0x967c,1,0x97db,1,0x980b,1,0x9b12,2,\n-0xd84a,0xdc4a,2,0xd84a,0xdc44,2,0xd84c,0xdfd5,1,0x3b9d,1,0x4018,1,0x4039,2,0xd854,\n-0xde49,2,0xd857,0xdcd0,2,0xd85f,0xded3,1,0x9f43,1,0x9f8e,0xe02,0x5d9,0x5b4,0x1102,0x5f2,\n-0x5b7,0x1802,0x5e9,0x5c1,0x1902,0x5e9,0x5c2,0xfb49,0x1843,0x5e9,0x5bc,0x5c1,0xfb49,0x1943,0x5e9,0x5bc,\n-0x5c2,0x1102,0x5d0,0x5b7,0x1202,0x5d0,0x5b8,0x1502,0x5d0,0x5bc,0x1502,0x5d1,0x5bc,0x1502,0x5d2,0x5bc,\n-0x1502,0x5d3,0x5bc,0x1502,0x5d4,0x5bc,0x1502,0x5d5,0x5bc,0x1502,0x5d6,0x5bc,0x1502,0x5d8,0x5bc,0x1502,\n-0x5d9,0x5bc,0x1502,0x5da,0x5bc,0x1502,0x5db,0x5bc,0x1502,0x5dc,0x5bc,0x1502,0x5de,0x5bc,0x1502,0x5e0,\n-0x5bc,0x1502,0x5e1,0x5bc,0x1502,0x5e3,0x5bc,0x1502,0x5e4,0x5bc,0x1502,0x5e6,0x5bc,0x1502,0x5e7,0x5bc,\n-0x1502,0x5e8,0x5bc,0x1502,0x5e9,0x5bc,0x1502,0x5ea,0x5bc,0x1302,0x5d5,0x5b9,0x1702,0x5d1,0x5bf,0x1702,\n-0x5db,0x5bf,0x1702,0x5e4,0x5bf,0xd804,0xd834,0xdd57,0xd834,0xdd65,0xd804,0xd834,0xdd58,0xd834,0xdd65,0xd834,\n-0xdd5f,0xd834,0xdd6e,4,0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd6e,0xd834,0xdd5f,0xd834,0xdd6f,4,\n-0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd6f,0xd834,0xdd5f,0xd834,0xdd70,4,0xd846,0xd834,0xdd58,0xd834,\n-0xdd65,0xd834,0xdd70,0xd834,0xdd5f,0xd834,0xdd71,4,0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd71,0xd834,\n-0xdd5f,0xd834,0xdd72,4,0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd72,0xd804,0xd834,0xddb9,0xd834,0xdd65,\n-0xd804,0xd834,0xddba,0xd834,0xdd65,0xd834,0xddbb,0xd834,0xdd6e,4,0xd846,0xd834,0xddb9,0xd834,0xdd65,0xd834,\n-0xdd6e,0xd834,0xddbc,0xd834,0xdd6e,4,0xd846,0xd834,0xddba,0xd834,0xdd65,0xd834,0xdd6e,0xd834,0xddbb,0xd834,\n-0xdd6f,4,0xd846,0xd834,0xddb9,0xd834,0xdd65,0xd834,0xdd6f,0xd834,0xddbc,0xd834,0xdd6f,4,0xd846,0xd834,\n-0xddba,0xd834,0xdd65,0xd834,0xdd6f,1,0x4e3d,1,0x4e38,1,0x4e41,2,0xd840,0xdd22,1,0x4f60,\n-1,0x4fbb,1,0x5002,1,0x507a,1,0x5099,1,0x50cf,1,0x349e,2,0xd841,0xde3a,1,\n-0x5154,1,0x5164,1,0x5177,2,0xd841,0xdd1c,1,0x34b9,1,0x5167,1,0x518d,2,0xd841,\n-0xdd4b,1,0x5197,1,0x51a4,1,0x4ecc,1,0x51ac,2,0xd864,0xdddf,1,0x51f5,1,0x5203,\n-1,0x34df,1,0x523b,1,0x5246,1,0x5272,1,0x5277,1,0x3515,1,0x5305,1,0x5306,\n-1,0x5349,1,0x535a,1,0x5373,1,0x537d,1,0x537f,2,0xd842,0xde2c,1,0x7070,1,\n-0x53ca,1,0x53df,2,0xd842,0xdf63,1,0x53eb,1,0x53f1,1,0x5406,1,0x549e,1,0x5438,\n-1,0x5448,1,0x5468,1,0x54a2,1,0x54f6,1,0x5510,1,0x5553,1,0x5563,1,0x5584,\n-1,0x55ab,1,0x55b3,1,0x55c2,1,0x5716,1,0x5717,1,0x5651,1,0x5674,1,0x58ee,\n-1,0x57ce,1,0x57f4,1,0x580d,1,0x578b,1,0x5832,1,0x5831,1,0x58ac,2,0xd845,\n-0xdce4,1,0x58f2,1,0x58f7,1,0x5906,1,0x591a,1,0x5922,1,0x5962,2,0xd845,0xdea8,\n-2,0xd845,0xdeea,1,0x59ec,1,0x5a1b,1,0x5a27,1,0x59d8,1,0x5a66,1,0x36ee,1,\n-0x36fc,1,0x5b08,1,0x5b3e,2,0xd846,0xddc8,1,0x5bc3,1,0x5bd8,1,0x5bf3,2,0xd846,\n-0xdf18,1,0x5bff,1,0x5c06,1,0x5f53,1,0x5c22,1,0x3781,1,0x5c60,1,0x5cc0,1,\n-0x5c8d,2,0xd847,0xdde4,1,0x5d43,2,0xd847,0xdde6,1,0x5d6e,1,0x5d6b,1,0x5d7c,1,\n-0x5de1,1,0x5de2,1,0x382f,1,0x5dfd,1,0x5e28,1,0x5e3d,1,0x5e69,1,0x3862,2,\n-0xd848,0xdd83,1,0x387c,1,0x5eb0,1,0x5eb3,1,0x5eb6,2,0xd868,0xdf92,1,0x5efe,2,\n-0xd848,0xdf31,1,0x8201,1,0x5f22,1,0x38c7,2,0xd84c,0xdeb8,2,0xd858,0xddda,1,0x5f62,\n-1,0x5f6b,1,0x38e3,1,0x5f9a,1,0x5fcd,1,0x5fd7,1,0x5ff9,1,0x6081,1,0x393a,\n-1,0x391c,2,0xd849,0xded4,1,0x60c7,1,0x6148,1,0x614c,1,0x617a,1,0x61b2,1,\n-0x61a4,1,0x61af,1,0x61de,1,0x6210,1,0x621b,1,0x625d,1,0x62b1,1,0x62d4,1,\n-0x6350,2,0xd84a,0xdf0c,1,0x633d,1,0x62fc,1,0x6368,1,0x6383,1,0x63e4,2,0xd84a,\n-0xdff1,1,0x6422,1,0x63c5,1,0x63a9,1,0x3a2e,1,0x6469,1,0x647e,1,0x649d,1,\n-0x6477,1,0x3a6c,1,0x656c,2,0xd84c,0xdc0a,1,0x65e3,1,0x66f8,1,0x6649,1,0x3b19,\n-1,0x3b08,1,0x3ae4,1,0x5192,1,0x5195,1,0x6700,1,0x669c,1,0x80ad,1,0x43d9,\n-1,0x6721,1,0x675e,1,0x6753,2,0xd84c,0xdfc3,1,0x3b49,1,0x67fa,1,0x6785,1,\n-0x6852,2,0xd84d,0xdc6d,1,0x688e,1,0x681f,1,0x6914,1,0x6942,1,0x69a3,1,0x69ea,\n-1,0x6aa8,2,0xd84d,0xdea3,1,0x6adb,1,0x3c18,1,0x6b21,2,0xd84e,0xdca7,1,0x6b54,\n-1,0x3c4e,1,0x6b72,1,0x6b9f,1,0x6bbb,2,0xd84e,0xde8d,2,0xd847,0xdd0b,2,0xd84e,\n-0xdefa,1,0x6c4e,2,0xd84f,0xdcbc,1,0x6cbf,1,0x6ccd,1,0x6c67,1,0x6d16,1,0x6d3e,\n-1,0x6d69,1,0x6d78,1,0x6d85,2,0xd84f,0xdd1e,1,0x6d34,1,0x6e2f,1,0x6e6e,1,\n-0x3d33,1,0x6ec7,2,0xd84f,0xded1,1,0x6df9,1,0x6f6e,2,0xd84f,0xdf5e,2,0xd84f,0xdf8e,\n-1,0x6fc6,1,0x7039,1,0x701b,1,0x3d96,1,0x704a,1,0x707d,1,0x7077,1,0x70ad,\n-2,0xd841,0xdd25,1,0x7145,2,0xd850,0xde63,1,0x719c,2,0xd850,0xdfab,1,0x7228,1,\n-0x7250,2,0xd851,0xde08,1,0x7280,1,0x7295,2,0xd851,0xdf35,2,0xd852,0xdc14,1,0x737a,\n-1,0x738b,1,0x3eac,1,0x73a5,1,0x3eb8,1,0x7447,1,0x745c,1,0x7485,1,0x74ca,\n-1,0x3f1b,1,0x7524,2,0xd853,0xdc36,1,0x753e,2,0xd853,0xdc92,2,0xd848,0xdd9f,1,\n-0x7610,2,0xd853,0xdfa1,2,0xd853,0xdfb8,2,0xd854,0xdc44,1,0x3ffc,1,0x4008,2,0xd854,\n-0xdcf3,2,0xd854,0xdcf2,2,0xd854,0xdd19,2,0xd854,0xdd33,1,0x771e,1,0x771f,1,0x778b,\n-1,0x4046,1,0x4096,2,0xd855,0xdc1d,1,0x784e,1,0x40e3,2,0xd855,0xde26,2,0xd855,\n-0xde9a,2,0xd855,0xdec5,1,0x79eb,1,0x412f,1,0x7a4a,1,0x7a4f,2,0xd856,0xdd7c,2,\n-0xd856,0xdea7,1,0x7aee,1,0x4202,2,0xd856,0xdfab,1,0x7bc6,1,0x7bc9,1,0x4227,2,\n-0xd857,0xdc80,1,0x7cd2,1,0x42a0,1,0x7ce8,1,0x7ce3,1,0x7d00,2,0xd857,0xdf86,1,\n-0x7d63,1,0x4301,1,0x7dc7,1,0x7e02,1,0x7e45,1,0x4334,2,0xd858,0xde28,2,0xd858,\n-0xde47,1,0x4359,2,0xd858,0xded9,1,0x7f7a,2,0xd858,0xdf3e,1,0x7f95,1,0x7ffa,2,\n-0xd859,0xdcda,2,0xd859,0xdd23,1,0x8060,2,0xd859,0xdda8,1,0x8070,2,0xd84c,0xdf5f,1,\n-0x43d5,1,0x80b2,1,0x8103,1,0x440b,1,0x813e,1,0x5ab5,2,0xd859,0xdfa7,2,0xd859,\n-0xdfb5,2,0xd84c,0xdf93,2,0xd84c,0xdf9c,1,0x8204,1,0x8f9e,1,0x446b,1,0x8291,1,\n-0x828b,1,0x829d,1,0x52b3,1,0x82b1,1,0x82b3,1,0x82bd,1,0x82e6,2,0xd85a,0xdf3c,\n-1,0x831d,1,0x8363,1,0x83ad,1,0x8323,1,0x83bd,1,0x83e7,1,0x8353,1,0x83ca,\n-1,0x83cc,1,0x83dc,2,0xd85b,0xdc36,2,0xd85b,0xdd6b,2,0xd85b,0xdcd5,1,0x452b,1,\n-0x84f1,1,0x84f3,1,0x8516,2,0xd85c,0xdfca,1,0x8564,2,0xd85b,0xdf2c,1,0x455d,1,\n-0x4561,2,0xd85b,0xdfb1,2,0xd85c,0xdcd2,1,0x456b,1,0x8650,1,0x8667,1,0x8669,1,\n-0x86a9,1,0x8688,1,0x870e,1,0x86e2,1,0x8728,1,0x876b,1,0x8786,1,0x45d7,1,\n-0x87e1,1,0x8801,1,0x45f9,1,0x8860,1,0x8863,2,0xd85d,0xde67,1,0x88d7,1,0x88de,\n-1,0x4635,1,0x88fa,1,0x34bb,2,0xd85e,0xdcae,2,0xd85e,0xdd66,1,0x46be,1,0x46c7,\n-1,0x8aa0,1,0x8c55,2,0xd85f,0xdca8,1,0x8cab,1,0x8cc1,1,0x8d1b,1,0x8d77,2,\n-0xd85f,0xdf2f,2,0xd842,0xdc04,1,0x8dcb,1,0x8dbc,1,0x8df0,2,0xd842,0xdcde,1,0x8ed4,\n-2,0xd861,0xddd2,2,0xd861,0xdded,1,0x9094,1,0x90f1,1,0x9111,2,0xd861,0xdf2e,1,\n-0x911b,1,0x9238,1,0x92d7,1,0x92d8,1,0x927c,1,0x93f9,1,0x9415,2,0xd862,0xdffa,\n-1,0x958b,1,0x4995,1,0x95b7,2,0xd863,0xdd77,1,0x49e6,1,0x96c3,1,0x5db2,1,\n-0x9723,2,0xd864,0xdd45,2,0xd864,0xde1a,1,0x4a6e,1,0x4a76,1,0x97e0,2,0xd865,0xdc0a,\n-1,0x4ab2,2,0xd865,0xdc96,1,0x9829,2,0xd865,0xddb6,1,0x98e2,1,0x4b33,1,0x9929,\n-1,0x99a7,1,0x99c2,1,0x99fe,1,0x4bce,2,0xd866,0xdf30,1,0x9c40,1,0x9cfd,1,\n-0x4cce,1,0x4ced,1,0x9d67,2,0xd868,0xdcce,1,0x4cf8,2,0xd868,0xdd05,2,0xd868,0xde0e,\n-2,0xd868,0xde91,1,0x9ebb,1,0x4d56,1,0x9ef9,1,0x9efe,1,0x9f05,1,0x9f0f,1,\n-0x9f16,1,0x9f3b,2,0xd869,0xde00,0x3ac,0xe642,0x3b1,0x301,0x3ad,0xe642,0x3b5,0x301,0x3ae,0xe642,\n-0x3b7,0x301,0x3af,0xe642,0x3b9,0x301,0x3cc,0xe642,0x3bf,0x301,0x3cd,0xe642,0x3c5,0x301,0x3ce,0xe642,\n-0x3c9,0x301,0x386,0xe642,0x391,0x301,0x388,0xe642,0x395,0x301,0x389,0xe642,0x397,0x301,0x390,1,\n-0xe643,0x3b9,0x308,0x301,0x38a,0xe642,0x399,0x301,0x3b0,1,0xe643,0x3c5,0x308,0x301,0x38e,0xe642,\n-0x3a5,0x301,0x385,0xe642,0xa8,0x301,0x38c,0xe642,0x39f,0x301,0x38f,0xe642,0x3a9,0x301,0xc5,0xe642,\n-0x41,0x30a,0xe6e6,0xe681,0x300,0xe6e6,0xe681,0x301,0xe6e6,0xe681,0x313,0xe6e6,0xe682,0x308,0x301,0x8100,\n-0x8282,0xf71,0xf72,0x8100,0x8482,0xf71,0xf74,0x8100,0x8282,0xf71,0xf80,0\n+0x2c02,0x2978,0x348b,0x2e82,0x2976,0xb48b,0x2f42,0x297c,0xb48b,0x6bc2,0x2b74,0xb48b,0x6bc2,0x2b76,0xb48d,0x4c02,\n+0x3270,2,0xe602,0x41,0x302,0x600,0x3d4c,0x602,0x3d48,0x606,0x3d54,0x8612,0x3d50,0xe602,0x41,0x308,\n+0x8608,0x3bc,0xe602,0x41,0x30a,0x8602,0x3f4,0xca02,0x43,0x327,0x8602,0x3c10,0xe602,0x45,0x302,0x600,\n+0x3d80,0x602,0x3d7c,0x606,0x3d88,0x8612,0x3d84,0xe602,0x49,0x308,0x8602,0x3c5c,0xe602,0x4f,0x302,0x600,\n+0x3da4,0x602,0x3da0,0x606,0x3dac,0x8612,0x3da8,0xe602,0x4f,0x303,0x602,0x3c98,0x608,0x458,0x8610,0x3c9c,\n+0xe602,0x4f,0x308,0x8608,0x454,0xe602,0x55,0x308,0x600,0x3b6,0x602,0x3ae,0x608,0x3aa,0x8618,0x3b2,\n+0xe602,0x61,0x302,0x600,0x3d4e,0x602,0x3d4a,0x606,0x3d56,0x8612,0x3d52,0xe602,0x61,0x308,0x8608,0x3be,\n+0xe602,0x61,0x30a,0x8602,0x3f6,0xca02,0x63,0x327,0x8602,0x3c12,0xe602,0x65,0x302,0x600,0x3d82,0x602,\n+0x3d7e,0x606,0x3d8a,0x8612,0x3d86,0xe602,0x69,0x308,0x8602,0x3c5e,0xe602,0x6f,0x302,0x600,0x3da6,0x602,\n+0x3da2,0x606,0x3dae,0x8612,0x3daa,0xe602,0x6f,0x303,0x602,0x3c9a,0x608,0x45a,0x8610,0x3c9e,0xe602,0x6f,\n+0x308,0x8608,0x456,0xe602,0x75,0x308,0x600,0x3b8,0x602,0x3b0,0x608,0x3ac,0x8618,0x3b4,0xe602,0x41,\n+0x306,0x600,0x3d60,0x602,0x3d5c,0x606,0x3d68,0x8612,0x3d64,0xe602,0x61,0x306,0x600,0x3d62,0x602,0x3d5e,\n+0x606,0x3d6a,0x8612,0x3d66,0xe602,0x45,0x304,0x600,0x3c28,0x8602,0x3c2c,0xe602,0x65,0x304,0x600,0x3c2a,\n+0x8602,0x3c2e,0xe602,0x4f,0x304,0x600,0x3ca0,0x8602,0x3ca4,0xe602,0x6f,0x304,0x600,0x3ca2,0x8602,0x3ca6,\n+0xe602,0x53,0x301,0x860e,0x3cc8,0xe602,0x73,0x301,0x860e,0x3cca,0xe602,0x53,0x30c,0x860e,0x3ccc,0xe602,\n+0x73,0x30c,0x860e,0x3cce,0xe602,0x55,0x303,0x8602,0x3cf0,0xe602,0x75,0x303,0x8602,0x3cf2,0xe602,0x55,\n+0x304,0x8610,0x3cf4,0xe602,0x75,0x304,0x8610,0x3cf6,0xd802,0x4f,0x31b,0x600,0x3db8,0x602,0x3db4,0x606,\n+0x3dc0,0x612,0x3dbc,0x8646,0x3dc4,0xd802,0x6f,0x31b,0x600,0x3dba,0x602,0x3db6,0x606,0x3dc2,0x612,0x3dbe,\n+0x8646,0x3dc6,0xd802,0x55,0x31b,0x600,0x3dd4,0x602,0x3dd0,0x606,0x3ddc,0x612,0x3dd8,0x8646,0x3de0,0xd802,\n+0x75,0x31b,0x600,0x3dd6,0x602,0x3dd2,0x606,0x3dde,0x612,0x3dda,0x8646,0x3de2,0xca02,0x4f,0x328,0x8608,\n+0x3d8,0xca02,0x6f,0x328,0x8608,0x3da,0xe602,0x41,0x307,0x8608,0x3c0,0xe602,0x61,0x307,0x8608,0x3c2,\n+0xca02,0x45,0x327,0x860c,0x3c38,0xca02,0x65,0x327,0x860c,0x3c3a,0xe602,0x4f,0x307,0x8608,0x460,0xe602,\n+0x6f,0x307,0x8608,0x462,0xe602,0x3b1,0x301,0x868a,0x3f68,0xe602,0x3b7,0x301,0x868a,0x3f88,0xe602,0x3b9,\n+0x308,0x600,0x3fa4,0x602,0x720,0x8684,0x3fae,0xe602,0x3c5,0x308,0x600,0x3fc4,0x602,0x760,0x8684,0x3fce,\n+0xe602,0x3c9,0x301,0x868a,0x3fe8,2,0xcc6,0xcc2,0x99aa,0x1996,2,0xdd9,0xdcf,0x9b94,0x1bba,0xdc02,\n+0x4c,0x323,0x8608,0x3c70,0xdc02,0x6c,0x323,0x8608,0x3c72,0xdc02,0x52,0x323,0x8608,0x3cb8,0xdc02,0x72,\n+0x323,0x8608,0x3cba,0xdc02,0x53,0x323,0x860e,0x3cd0,0xdc02,0x73,0x323,0x860e,0x3cd2,0xdc02,0x41,0x323,\n+0x604,0x3d58,0x860c,0x3d6c,0xdc02,0x61,0x323,0x604,0x3d5a,0x860c,0x3d6e,0xdc02,0x45,0x323,0x8604,0x3d8c,\n+0xdc02,0x65,0x323,0x8604,0x3d8e,0xdc02,0x4f,0x323,0x8604,0x3db0,0xdc02,0x6f,0x323,0x8604,0x3db2,0xe602,\n+0x3b1,0x313,0x600,0x3e05,0x602,0x3e09,0x684,0x3e0d,0x868a,0x3f00,0xe602,0x3b1,0x314,0x600,0x3e07,0x602,\n+0x3e0b,0x684,0x3e0f,0x868a,0x3f02,0x1f00,0xe643,0x3b1,0x313,0x300,0x868a,0x3f04,0x1f01,0xe643,0x3b1,0x314,\n+0x300,0x868a,0x3f06,0x1f00,0xe643,0x3b1,0x313,0x301,0x868a,0x3f08,0x1f01,0xe643,0x3b1,0x314,0x301,0x868a,\n+0x3f0a,0x1f00,0xe643,0x3b1,0x313,0x342,0x868a,0x3f0c,0x1f01,0xe643,0x3b1,0x314,0x342,0x868a,0x3f0e,0xe602,\n+0x391,0x313,0x600,0x3e15,0x602,0x3e19,0x684,0x3e1d,0x868a,0x3f10,0xe602,0x391,0x314,0x600,0x3e17,0x602,\n+0x3e1b,0x684,0x3e1f,0x868a,0x3f12,0x1f08,0xe643,0x391,0x313,0x300,0x868a,0x3f14,0x1f09,0xe643,0x391,0x314,\n+0x300,0x868a,0x3f16,0x1f08,0xe643,0x391,0x313,0x301,0x868a,0x3f18,0x1f09,0xe643,0x391,0x314,0x301,0x868a,\n+0x3f1a,0x1f08,0xe643,0x391,0x313,0x342,0x868a,0x3f1c,0x1f09,0xe643,0x391,0x314,0x342,0x868a,0x3f1e,0xe602,\n+0x3b5,0x313,0x600,0x3e24,0x8602,0x3e28,0xe602,0x3b5,0x314,0x600,0x3e26,0x8602,0x3e2a,0xe602,0x395,0x313,\n+0x600,0x3e34,0x8602,0x3e38,0xe602,0x395,0x314,0x600,0x3e36,0x8602,0x3e3a,0xe602,0x3b7,0x313,0x600,0x3e45,\n+0x602,0x3e49,0x684,0x3e4d,0x868a,0x3f20,0xe602,0x3b7,0x314,0x600,0x3e47,0x602,0x3e4b,0x684,0x3e4f,0x868a,\n+0x3f22,0x1f20,0xe643,0x3b7,0x313,0x300,0x868a,0x3f24,0x1f21,0xe643,0x3b7,0x314,0x300,0x868a,0x3f26,0x1f20,\n+0xe643,0x3b7,0x313,0x301,0x868a,0x3f28,0x1f21,0xe643,0x3b7,0x314,0x301,0x868a,0x3f2a,0x1f20,0xe643,0x3b7,\n+0x313,0x342,0x868a,0x3f2c,0x1f21,0xe643,0x3b7,0x314,0x342,0x868a,0x3f2e,0xe602,0x397,0x313,0x600,0x3e55,\n+0x602,0x3e59,0x684,0x3e5d,0x868a,0x3f30,0xe602,0x397,0x314,0x600,0x3e57,0x602,0x3e5b,0x684,0x3e5f,0x868a,\n+0x3f32,0x1f28,0xe643,0x397,0x313,0x300,0x868a,0x3f34,0x1f29,0xe643,0x397,0x314,0x300,0x868a,0x3f36,0x1f28,\n+0xe643,0x397,0x313,0x301,0x868a,0x3f38,0x1f29,0xe643,0x397,0x314,0x301,0x868a,0x3f3a,0x1f28,0xe643,0x397,\n+0x313,0x342,0x868a,0x3f3c,0x1f29,0xe643,0x397,0x314,0x342,0x868a,0x3f3e,0xe602,0x3b9,0x313,0x600,0x3e64,\n+0x602,0x3e68,0x8684,0x3e6c,0xe602,0x3b9,0x314,0x600,0x3e66,0x602,0x3e6a,0x8684,0x3e6e,0xe602,0x399,0x313,\n+0x600,0x3e74,0x602,0x3e78,0x8684,0x3e7c,0xe602,0x399,0x314,0x600,0x3e76,0x602,0x3e7a,0x8684,0x3e7e,0xe602,\n+0x3bf,0x313,0x600,0x3e84,0x8602,0x3e88,0xe602,0x3bf,0x314,0x600,0x3e86,0x8602,0x3e8a,0xe602,0x39f,0x313,\n+0x600,0x3e94,0x8602,0x3e98,0xe602,0x39f,0x314,0x600,0x3e96,0x8602,0x3e9a,0xe602,0x3c5,0x313,0x600,0x3ea4,\n+0x602,0x3ea8,0x8684,0x3eac,0xe602,0x3c5,0x314,0x600,0x3ea6,0x602,0x3eaa,0x8684,0x3eae,0xe602,0x3a5,0x314,\n+0x600,0x3eb6,0x602,0x3eba,0x8684,0x3ebe,0xe602,0x3c9,0x313,0x600,0x3ec5,0x602,0x3ec9,0x684,0x3ecd,0x868a,\n+0x3f40,0xe602,0x3c9,0x314,0x600,0x3ec7,0x602,0x3ecb,0x684,0x3ecf,0x868a,0x3f42,0x1f60,0xe643,0x3c9,0x313,\n+0x300,0x868a,0x3f44,0x1f61,0xe643,0x3c9,0x314,0x300,0x868a,0x3f46,0x1f60,0xe643,0x3c9,0x313,0x301,0x868a,\n+0x3f48,0x1f61,0xe643,0x3c9,0x314,0x301,0x868a,0x3f4a,0x1f60,0xe643,0x3c9,0x313,0x342,0x868a,0x3f4c,0x1f61,\n+0xe643,0x3c9,0x314,0x342,0x868a,0x3f4e,0xe602,0x3a9,0x313,0x600,0x3ed5,0x602,0x3ed9,0x684,0x3edd,0x868a,\n+0x3f50,0xe602,0x3a9,0x314,0x600,0x3ed7,0x602,0x3edb,0x684,0x3edf,0x868a,0x3f52,0x1f68,0xe643,0x3a9,0x313,\n+0x300,0x868a,0x3f54,0x1f69,0xe643,0x3a9,0x314,0x300,0x868a,0x3f56,0x1f68,0xe643,0x3a9,0x313,0x301,0x868a,\n+0x3f58,0x1f69,0xe643,0x3a9,0x314,0x301,0x868a,0x3f5a,0x1f68,0xe643,0x3a9,0x313,0x342,0x868a,0x3f5c,0x1f69,\n+0xe643,0x3a9,0x314,0x342,0x868a,0x3f5e,0xe602,0x3b1,0x300,0x868a,0x3f64,0xe602,0x3b7,0x300,0x868a,0x3f84,\n+0xe602,0x3c9,0x300,0x868a,0x3fe4,0xe602,0x3b1,0x342,0x868a,0x3f6e,0xe602,0x3b7,0x342,0x868a,0x3f8e,0xe602,\n+0x3c9,0x342,0x868a,0x3fee,3,0xe602,0x41,0x300,0xe602,0x41,0x301,0xe602,0x41,0x303,0xe602,0x45,\n+0x300,0xe602,0x45,0x301,0xe602,0x45,0x308,0xe602,0x49,0x300,0xe602,0x49,0x301,0xe602,0x49,0x302,\n+0xe602,0x4e,0x303,0xe602,0x4f,0x300,0xe602,0x4f,0x301,0xe602,0x55,0x300,0xe602,0x55,0x301,0xe602,\n+0x55,0x302,0xe602,0x59,0x301,0xe602,0x61,0x300,0xe602,0x61,0x301,0xe602,0x61,0x303,0xe602,0x65,\n+0x300,0xe602,0x65,0x301,0xe602,0x65,0x308,0xe602,0x69,0x300,0xe602,0x69,0x301,0xe602,0x69,0x302,\n+0xe602,0x6e,0x303,0xe602,0x6f,0x300,0xe602,0x6f,0x301,0xe602,0x75,0x300,0xe602,0x75,0x301,0xe602,\n+0x75,0x302,0xe602,0x79,0x301,0xe602,0x79,0x308,0xe602,0x41,0x304,0xe602,0x61,0x304,0xca02,0x41,\n+0x328,0xca02,0x61,0x328,0xe602,0x43,0x301,0xe602,0x63,0x301,0xe602,0x43,0x302,0xe602,0x63,0x302,\n+0xe602,0x43,0x307,0xe602,0x63,0x307,0xe602,0x43,0x30c,0xe602,0x63,0x30c,0xe602,0x44,0x30c,0xe602,\n+0x64,0x30c,0xe602,0x45,0x306,0xe602,0x65,0x306,0xe602,0x45,0x307,0xe602,0x65,0x307,0xca02,0x45,\n+0x328,0xca02,0x65,0x328,0xe602,0x45,0x30c,0xe602,0x65,0x30c,0xe602,0x47,0x302,0xe602,0x67,0x302,\n+0xe602,0x47,0x306,0xe602,0x67,0x306,0xe602,0x47,0x307,0xe602,0x67,0x307,0xca02,0x47,0x327,0xca02,\n+0x67,0x327,0xe602,0x48,0x302,0xe602,0x68,0x302,0xe602,0x49,0x303,0xe602,0x69,0x303,0xe602,0x49,\n+0x304,0xe602,0x69,0x304,0xe602,0x49,0x306,0xe602,0x69,0x306,0xca02,0x49,0x328,0xca02,0x69,0x328,\n+0xe602,0x49,0x307,0xe602,0x4a,0x302,0xe602,0x6a,0x302,0xca02,0x4b,0x327,0xca02,0x6b,0x327,0xe602,\n+0x4c,0x301,0xe602,0x6c,0x301,0xca02,0x4c,0x327,0xca02,0x6c,0x327,0xe602,0x4c,0x30c,0xe602,0x6c,\n+0x30c,0xe602,0x4e,0x301,0xe602,0x6e,0x301,0xca02,0x4e,0x327,0xca02,0x6e,0x327,0xe602,0x4e,0x30c,\n+0xe602,0x6e,0x30c,0xe602,0x4f,0x306,0xe602,0x6f,0x306,0xe602,0x4f,0x30b,0xe602,0x6f,0x30b,0xe602,\n+0x52,0x301,0xe602,0x72,0x301,0xca02,0x52,0x327,0xca02,0x72,0x327,0xe602,0x52,0x30c,0xe602,0x72,\n+0x30c,0xe602,0x53,0x302,0xe602,0x73,0x302,0xca02,0x53,0x327,0xca02,0x73,0x327,0xca02,0x54,0x327,\n+0xca02,0x74,0x327,0xe602,0x54,0x30c,0xe602,0x74,0x30c,0xe602,0x55,0x306,0xe602,0x75,0x306,0xe602,\n+0x55,0x30a,0xe602,0x75,0x30a,0xe602,0x55,0x30b,0xe602,0x75,0x30b,0xca02,0x55,0x328,0xca02,0x75,\n+0x328,0xe602,0x57,0x302,0xe602,0x77,0x302,0xe602,0x59,0x302,0xe602,0x79,0x302,0xe602,0x59,0x308,\n+0xe602,0x5a,0x301,0xe602,0x7a,0x301,0xe602,0x5a,0x307,0xe602,0x7a,0x307,0xe602,0x5a,0x30c,0xe602,\n+0x7a,0x30c,0xe602,0x41,0x30c,0xe602,0x61,0x30c,0xe602,0x49,0x30c,0xe602,0x69,0x30c,0xe602,0x4f,\n+0x30c,0xe602,0x6f,0x30c,0xe602,0x55,0x30c,0xe602,0x75,0x30c,0xdc,0xe643,0x55,0x308,0x304,0xfc,\n+0xe643,0x75,0x308,0x304,0xdc,0xe643,0x55,0x308,0x301,0xfc,0xe643,0x75,0x308,0x301,0xdc,0xe643,\n+0x55,0x308,0x30c,0xfc,0xe643,0x75,0x308,0x30c,0xdc,0xe643,0x55,0x308,0x300,0xfc,0xe643,0x75,\n+0x308,0x300,0xc4,0xe643,0x41,0x308,0x304,0xe4,0xe643,0x61,0x308,0x304,0x226,0xe643,0x41,0x307,\n+0x304,0x227,0xe643,0x61,0x307,0x304,0xe602,0xc6,0x304,0xe602,0xe6,0x304,0xe602,0x47,0x30c,0xe602,\n+0x67,0x30c,0xe602,0x4b,0x30c,0xe602,0x6b,0x30c,0x1ea,0xe643,0x4f,0x328,0x304,0x1eb,0xe643,0x6f,\n+0x328,0x304,0xe602,0x1b7,0x30c,0xe602,0x292,0x30c,0xe602,0x6a,0x30c,0xe602,0x47,0x301,0xe602,0x67,\n+0x301,0xe602,0x4e,0x300,0xe602,0x6e,0x300,0xc5,0xe643,0x41,0x30a,0x301,0xe5,0xe643,0x61,0x30a,\n+0x301,0xe602,0xc6,0x301,0xe602,0xe6,0x301,0xe602,0xd8,0x301,0xe602,0xf8,0x301,0xe602,0x41,0x30f,\n+0xe602,0x61,0x30f,0xe602,0x41,0x311,0xe602,0x61,0x311,0xe602,0x45,0x30f,0xe602,0x65,0x30f,0xe602,\n+0x45,0x311,0xe602,0x65,0x311,0xe602,0x49,0x30f,0xe602,0x69,0x30f,0xe602,0x49,0x311,0xe602,0x69,\n+0x311,0xe602,0x4f,0x30f,0xe602,0x6f,0x30f,0xe602,0x4f,0x311,0xe602,0x6f,0x311,0xe602,0x52,0x30f,\n+0xe602,0x72,0x30f,0xe602,0x52,0x311,0xe602,0x72,0x311,0xe602,0x55,0x30f,0xe602,0x75,0x30f,0xe602,\n+0x55,0x311,0xe602,0x75,0x311,0xdc02,0x53,0x326,0xdc02,0x73,0x326,0xdc02,0x54,0x326,0xdc02,0x74,\n+0x326,0xe602,0x48,0x30c,0xe602,0x68,0x30c,0xd6,0xe643,0x4f,0x308,0x304,0xf6,0xe643,0x6f,0x308,\n+0x304,0xd5,0xe643,0x4f,0x303,0x304,0xf5,0xe643,0x6f,0x303,0x304,0x22e,0xe643,0x4f,0x307,0x304,\n+0x22f,0xe643,0x6f,0x307,0x304,0xe602,0x59,0x304,0xe602,0x79,0x304,0xe602,0xa8,0x301,0xe602,0x391,\n+0x301,0xe602,0x395,0x301,0xe602,0x397,0x301,0xe602,0x399,0x301,0xe602,0x39f,0x301,0xe602,0x3a5,0x301,\n+0xe602,0x3a9,0x301,0x3ca,0xe643,0x3b9,0x308,0x301,0xe602,0x399,0x308,0xe602,0x3a5,0x308,0xe602,0x3b5,\n+0x301,0xe602,0x3b9,0x301,0x3cb,0xe643,0x3c5,0x308,0x301,0xe602,0x3bf,0x301,0xe602,0x3c5,0x301,0xe602,\n+0x3d2,0x301,0xe602,0x3d2,0x308,0xe602,0x415,0x300,0xe602,0x415,0x308,0xe602,0x413,0x301,0xe602,0x406,\n+0x308,0xe602,0x41a,0x301,0xe602,0x418,0x300,0xe602,0x423,0x306,0xe602,0x418,0x306,0xe602,0x438,0x306,\n+0xe602,0x435,0x300,0xe602,0x435,0x308,0xe602,0x433,0x301,0xe602,0x456,0x308,0xe602,0x43a,0x301,0xe602,\n+0x438,0x300,0xe602,0x443,0x306,0xe602,0x474,0x30f,0xe602,0x475,0x30f,0xe602,0x416,0x306,0xe602,0x436,\n+0x306,0xe602,0x410,0x306,0xe602,0x430,0x306,0xe602,0x410,0x308,0xe602,0x430,0x308,0xe602,0x415,0x306,\n+0xe602,0x435,0x306,0xe602,0x4d8,0x308,0xe602,0x4d9,0x308,0xe602,0x416,0x308,0xe602,0x436,0x308,0xe602,\n+0x417,0x308,0xe602,0x437,0x308,0xe602,0x418,0x304,0xe602,0x438,0x304,0xe602,0x418,0x308,0xe602,0x438,\n+0x308,0xe602,0x41e,0x308,0xe602,0x43e,0x308,0xe602,0x4e8,0x308,0xe602,0x4e9,0x308,0xe602,0x42d,0x308,\n+0xe602,0x44d,0x308,0xe602,0x423,0x304,0xe602,0x443,0x304,0xe602,0x423,0x308,0xe602,0x443,0x308,0xe602,\n+0x423,0x30b,0xe602,0x443,0x30b,0xe602,0x427,0x308,0xe602,0x447,0x308,0xe602,0x42b,0x308,0xe602,0x44b,\n+0x308,0xe602,0x627,0x653,0xe602,0x627,0x654,0xe602,0x648,0x654,0xdc02,0x627,0x655,0xe602,0x64a,0x654,\n+0xe602,0x6d5,0x654,0xe602,0x6c1,0x654,0xe602,0x6d2,0x654,0x702,0x928,0x93c,0x702,0x930,0x93c,0x702,\n+0x933,0x93c,2,0x9c7,0x9be,2,0x9c7,0x9d7,2,0xb47,0xb56,2,0xb47,0xb3e,2,0xb47,\n+0xb57,2,0xb92,0xbd7,2,0xbc6,0xbbe,2,0xbc7,0xbbe,2,0xbc6,0xbd7,0x5b02,0xc46,0xc56,\n+2,0xcbf,0xcd5,2,0xcc6,0xcd5,2,0xcc6,0xcd6,0xcca,0x43,0xcc6,0xcc2,0xcd5,2,0xd46,\n+0xd3e,2,0xd47,0xd3e,2,0xd46,0xd57,0x902,0xdd9,0xdca,0xddc,0x943,0xdd9,0xdcf,0xdca,2,\n+0xdd9,0xddf,2,0x1025,0x102e,2,0x1b05,0x1b35,2,0x1b07,0x1b35,2,0x1b09,0x1b35,2,0x1b0b,\n+0x1b35,2,0x1b0d,0x1b35,2,0x1b11,0x1b35,2,0x1b3a,0x1b35,2,0x1b3c,0x1b35,2,0x1b3e,0x1b35,\n+2,0x1b3f,0x1b35,2,0x1b42,0x1b35,0xdc02,0x41,0x325,0xdc02,0x61,0x325,0xe602,0x42,0x307,0xe602,\n+0x62,0x307,0xdc02,0x42,0x323,0xdc02,0x62,0x323,0xdc02,0x42,0x331,0xdc02,0x62,0x331,0xc7,0xe643,\n+0x43,0x327,0x301,0xe7,0xe643,0x63,0x327,0x301,0xe602,0x44,0x307,0xe602,0x64,0x307,0xdc02,0x44,\n+0x323,0xdc02,0x64,0x323,0xdc02,0x44,0x331,0xdc02,0x64,0x331,0xca02,0x44,0x327,0xca02,0x64,0x327,\n+0xdc02,0x44,0x32d,0xdc02,0x64,0x32d,0x112,0xe643,0x45,0x304,0x300,0x113,0xe643,0x65,0x304,0x300,\n+0x112,0xe643,0x45,0x304,0x301,0x113,0xe643,0x65,0x304,0x301,0xdc02,0x45,0x32d,0xdc02,0x65,0x32d,\n+0xdc02,0x45,0x330,0xdc02,0x65,0x330,0x228,0xe643,0x45,0x327,0x306,0x229,0xe643,0x65,0x327,0x306,\n+0xe602,0x46,0x307,0xe602,0x66,0x307,0xe602,0x47,0x304,0xe602,0x67,0x304,0xe602,0x48,0x307,0xe602,\n+0x68,0x307,0xdc02,0x48,0x323,0xdc02,0x68,0x323,0xe602,0x48,0x308,0xe602,0x68,0x308,0xca02,0x48,\n+0x327,0xca02,0x68,0x327,0xdc02,0x48,0x32e,0xdc02,0x68,0x32e,0xdc02,0x49,0x330,0xdc02,0x69,0x330,\n+0xcf,0xe643,0x49,0x308,0x301,0xef,0xe643,0x69,0x308,0x301,0xe602,0x4b,0x301,0xe602,0x6b,0x301,\n+0xdc02,0x4b,0x323,0xdc02,0x6b,0x323,0xdc02,0x4b,0x331,0xdc02,0x6b,0x331,0x1e36,0xe643,0x4c,0x323,\n+0x304,0x1e37,0xe643,0x6c,0x323,0x304,0xdc02,0x4c,0x331,0xdc02,0x6c,0x331,0xdc02,0x4c,0x32d,0xdc02,\n+0x6c,0x32d,0xe602,0x4d,0x301,0xe602,0x6d,0x301,0xe602,0x4d,0x307,0xe602,0x6d,0x307,0xdc02,0x4d,\n+0x323,0xdc02,0x6d,0x323,0xe602,0x4e,0x307,0xe602,0x6e,0x307,0xdc02,0x4e,0x323,0xdc02,0x6e,0x323,\n+0xdc02,0x4e,0x331,0xdc02,0x6e,0x331,0xdc02,0x4e,0x32d,0xdc02,0x6e,0x32d,0xd5,0xe643,0x4f,0x303,\n+0x301,0xf5,0xe643,0x6f,0x303,0x301,0xd5,0xe643,0x4f,0x303,0x308,0xf5,0xe643,0x6f,0x303,0x308,\n+0x14c,0xe643,0x4f,0x304,0x300,0x14d,0xe643,0x6f,0x304,0x300,0x14c,0xe643,0x4f,0x304,0x301,0x14d,\n+0xe643,0x6f,0x304,0x301,0xe602,0x50,0x301,0xe602,0x70,0x301,0xe602,0x50,0x307,0xe602,0x70,0x307,\n+0xe602,0x52,0x307,0xe602,0x72,0x307,0x1e5a,0xe643,0x52,0x323,0x304,0x1e5b,0xe643,0x72,0x323,0x304,\n+0xdc02,0x52,0x331,0xdc02,0x72,0x331,0xe602,0x53,0x307,0xe602,0x73,0x307,0x15a,0xe643,0x53,0x301,\n+0x307,0x15b,0xe643,0x73,0x301,0x307,0x160,0xe643,0x53,0x30c,0x307,0x161,0xe643,0x73,0x30c,0x307,\n+0x1e62,0xe643,0x53,0x323,0x307,0x1e63,0xe643,0x73,0x323,0x307,0xe602,0x54,0x307,0xe602,0x74,0x307,\n+0xdc02,0x54,0x323,0xdc02,0x74,0x323,0xdc02,0x54,0x331,0xdc02,0x74,0x331,0xdc02,0x54,0x32d,0xdc02,\n+0x74,0x32d,0xdc02,0x55,0x324,0xdc02,0x75,0x324,0xdc02,0x55,0x330,0xdc02,0x75,0x330,0xdc02,0x55,\n+0x32d,0xdc02,0x75,0x32d,0x168,0xe643,0x55,0x303,0x301,0x169,0xe643,0x75,0x303,0x301,0x16a,0xe643,\n+0x55,0x304,0x308,0x16b,0xe643,0x75,0x304,0x308,0xe602,0x56,0x303,0xe602,0x76,0x303,0xdc02,0x56,\n+0x323,0xdc02,0x76,0x323,0xe602,0x57,0x300,0xe602,0x77,0x300,0xe602,0x57,0x301,0xe602,0x77,0x301,\n+0xe602,0x57,0x308,0xe602,0x77,0x308,0xe602,0x57,0x307,0xe602,0x77,0x307,0xdc02,0x57,0x323,0xdc02,\n+0x77,0x323,0xe602,0x58,0x307,0xe602,0x78,0x307,0xe602,0x58,0x308,0xe602,0x78,0x308,0xe602,0x59,\n+0x307,0xe602,0x79,0x307,0xe602,0x5a,0x302,0xe602,0x7a,0x302,0xdc02,0x5a,0x323,0xdc02,0x7a,0x323,\n+0xdc02,0x5a,0x331,0xdc02,0x7a,0x331,0xdc02,0x68,0x331,0xe602,0x74,0x308,0xe602,0x77,0x30a,0xe602,\n+0x79,0x30a,0xe602,0x17f,0x307,0xe602,0x41,0x309,0xe602,0x61,0x309,0xc2,0xe643,0x41,0x302,0x301,\n+0xe2,0xe643,0x61,0x302,0x301,0xc2,0xe643,0x41,0x302,0x300,0xe2,0xe643,0x61,0x302,0x300,0xc2,\n+0xe643,0x41,0x302,0x309,0xe2,0xe643,0x61,0x302,0x309,0xc2,0xe643,0x41,0x302,0x303,0xe2,0xe643,\n+0x61,0x302,0x303,0x1ea0,0xe643,0x41,0x323,0x302,0x1ea1,0xe643,0x61,0x323,0x302,0x102,0xe643,0x41,\n+0x306,0x301,0x103,0xe643,0x61,0x306,0x301,0x102,0xe643,0x41,0x306,0x300,0x103,0xe643,0x61,0x306,\n+0x300,0x102,0xe643,0x41,0x306,0x309,0x103,0xe643,0x61,0x306,0x309,0x102,0xe643,0x41,0x306,0x303,\n+0x103,0xe643,0x61,0x306,0x303,0x1ea0,0xe643,0x41,0x323,0x306,0x1ea1,0xe643,0x61,0x323,0x306,0xe602,\n+0x45,0x309,0xe602,0x65,0x309,0xe602,0x45,0x303,0xe602,0x65,0x303,0xca,0xe643,0x45,0x302,0x301,\n+0xea,0xe643,0x65,0x302,0x301,0xca,0xe643,0x45,0x302,0x300,0xea,0xe643,0x65,0x302,0x300,0xca,\n+0xe643,0x45,0x302,0x309,0xea,0xe643,0x65,0x302,0x309,0xca,0xe643,0x45,0x302,0x303,0xea,0xe643,\n+0x65,0x302,0x303,0x1eb8,0xe643,0x45,0x323,0x302,0x1eb9,0xe643,0x65,0x323,0x302,0xe602,0x49,0x309,\n+0xe602,0x69,0x309,0xdc02,0x49,0x323,0xdc02,0x69,0x323,0xe602,0x4f,0x309,0xe602,0x6f,0x309,0xd4,\n+0xe643,0x4f,0x302,0x301,0xf4,0xe643,0x6f,0x302,0x301,0xd4,0xe643,0x4f,0x302,0x300,0xf4,0xe643,\n+0x6f,0x302,0x300,0xd4,0xe643,0x4f,0x302,0x309,0xf4,0xe643,0x6f,0x302,0x309,0xd4,0xe643,0x4f,\n+0x302,0x303,0xf4,0xe643,0x6f,0x302,0x303,0x1ecc,0xe643,0x4f,0x323,0x302,0x1ecd,0xe643,0x6f,0x323,\n+0x302,0x1a0,0xe643,0x4f,0x31b,0x301,0x1a1,0xe643,0x6f,0x31b,0x301,0x1a0,0xe643,0x4f,0x31b,0x300,\n+0x1a1,0xe643,0x6f,0x31b,0x300,0x1a0,0xe643,0x4f,0x31b,0x309,0x1a1,0xe643,0x6f,0x31b,0x309,0x1a0,\n+0xe643,0x4f,0x31b,0x303,0x1a1,0xe643,0x6f,0x31b,0x303,0x1a0,0xdc43,0x4f,0x31b,0x323,0x1a1,0xdc43,\n+0x6f,0x31b,0x323,0xdc02,0x55,0x323,0xdc02,0x75,0x323,0xe602,0x55,0x309,0xe602,0x75,0x309,0x1af,\n+0xe643,0x55,0x31b,0x301,0x1b0,0xe643,0x75,0x31b,0x301,0x1af,0xe643,0x55,0x31b,0x300,0x1b0,0xe643,\n+0x75,0x31b,0x300,0x1af,0xe643,0x55,0x31b,0x309,0x1b0,0xe643,0x75,0x31b,0x309,0x1af,0xe643,0x55,\n+0x31b,0x303,0x1b0,0xe643,0x75,0x31b,0x303,0x1af,0xdc43,0x55,0x31b,0x323,0x1b0,0xdc43,0x75,0x31b,\n+0x323,0xe602,0x59,0x300,0xe602,0x79,0x300,0xdc02,0x59,0x323,0xdc02,0x79,0x323,0xe602,0x59,0x309,\n+0xe602,0x79,0x309,0xe602,0x59,0x303,0xe602,0x79,0x303,0x1f10,0xe643,0x3b5,0x313,0x300,0x1f11,0xe643,\n+0x3b5,0x314,0x300,0x1f10,0xe643,0x3b5,0x313,0x301,0x1f11,0xe643,0x3b5,0x314,0x301,0x1f18,0xe643,0x395,\n+0x313,0x300,0x1f19,0xe643,0x395,0x314,0x300,0x1f18,0xe643,0x395,0x313,0x301,0x1f19,0xe643,0x395,0x314,\n+0x301,0x1f30,0xe643,0x3b9,0x313,0x300,0x1f31,0xe643,0x3b9,0x314,0x300,0x1f30,0xe643,0x3b9,0x313,0x301,\n+0x1f31,0xe643,0x3b9,0x314,0x301,0x1f30,0xe643,0x3b9,0x313,0x342,0x1f31,0xe643,0x3b9,0x314,0x342,0x1f38,\n+0xe643,0x399,0x313,0x300,0x1f39,0xe643,0x399,0x314,0x300,0x1f38,0xe643,0x399,0x313,0x301,0x1f39,0xe643,\n+0x399,0x314,0x301,0x1f38,0xe643,0x399,0x313,0x342,0x1f39,0xe643,0x399,0x314,0x342,0x1f40,0xe643,0x3bf,\n+0x313,0x300,0x1f41,0xe643,0x3bf,0x314,0x300,0x1f40,0xe643,0x3bf,0x313,0x301,0x1f41,0xe643,0x3bf,0x314,\n+0x301,0x1f48,0xe643,0x39f,0x313,0x300,0x1f49,0xe643,0x39f,0x314,0x300,0x1f48,0xe643,0x39f,0x313,0x301,\n+0x1f49,0xe643,0x39f,0x314,0x301,0x1f50,0xe643,0x3c5,0x313,0x300,0x1f51,0xe643,0x3c5,0x314,0x300,0x1f50,\n+0xe643,0x3c5,0x313,0x301,0x1f51,0xe643,0x3c5,0x314,0x301,0x1f50,0xe643,0x3c5,0x313,0x342,0x1f51,0xe643,\n+0x3c5,0x314,0x342,0x1f59,0xe643,0x3a5,0x314,0x300,0x1f59,0xe643,0x3a5,0x314,0x301,0x1f59,0xe643,0x3a5,\n+0x314,0x342,0xe602,0x3b5,0x300,0xe602,0x3b9,0x300,0xe602,0x3bf,0x300,0xe602,0x3c5,0x300,0x1f00,0xf043,\n+0x3b1,0x313,0x345,0x1f01,0xf043,0x3b1,0x314,0x345,0x1f02,0x345,2,0xf044,0x3b1,0x313,0x300,0x345,\n+0x1f03,0x345,2,0xf044,0x3b1,0x314,0x300,0x345,0x1f04,0x345,2,0xf044,0x3b1,0x313,0x301,0x345,\n+0x1f05,0x345,2,0xf044,0x3b1,0x314,0x301,0x345,0x1f06,0x345,2,0xf044,0x3b1,0x313,0x342,0x345,\n+0x1f07,0x345,2,0xf044,0x3b1,0x314,0x342,0x345,0x1f08,0xf043,0x391,0x313,0x345,0x1f09,0xf043,0x391,\n+0x314,0x345,0x1f0a,0x345,2,0xf044,0x391,0x313,0x300,0x345,0x1f0b,0x345,2,0xf044,0x391,0x314,\n+0x300,0x345,0x1f0c,0x345,2,0xf044,0x391,0x313,0x301,0x345,0x1f0d,0x345,2,0xf044,0x391,0x314,\n+0x301,0x345,0x1f0e,0x345,2,0xf044,0x391,0x313,0x342,0x345,0x1f0f,0x345,2,0xf044,0x391,0x314,\n+0x342,0x345,0x1f20,0xf043,0x3b7,0x313,0x345,0x1f21,0xf043,0x3b7,0x314,0x345,0x1f22,0x345,2,0xf044,\n+0x3b7,0x313,0x300,0x345,0x1f23,0x345,2,0xf044,0x3b7,0x314,0x300,0x345,0x1f24,0x345,2,0xf044,\n+0x3b7,0x313,0x301,0x345,0x1f25,0x345,2,0xf044,0x3b7,0x314,0x301,0x345,0x1f26,0x345,2,0xf044,\n+0x3b7,0x313,0x342,0x345,0x1f27,0x345,2,0xf044,0x3b7,0x314,0x342,0x345,0x1f28,0xf043,0x397,0x313,\n+0x345,0x1f29,0xf043,0x397,0x314,0x345,0x1f2a,0x345,2,0xf044,0x397,0x313,0x300,0x345,0x1f2b,0x345,\n+2,0xf044,0x397,0x314,0x300,0x345,0x1f2c,0x345,2,0xf044,0x397,0x313,0x301,0x345,0x1f2d,0x345,\n+2,0xf044,0x397,0x314,0x301,0x345,0x1f2e,0x345,2,0xf044,0x397,0x313,0x342,0x345,0x1f2f,0x345,\n+2,0xf044,0x397,0x314,0x342,0x345,0x1f60,0xf043,0x3c9,0x313,0x345,0x1f61,0xf043,0x3c9,0x314,0x345,\n+0x1f62,0x345,2,0xf044,0x3c9,0x313,0x300,0x345,0x1f63,0x345,2,0xf044,0x3c9,0x314,0x300,0x345,\n+0x1f64,0x345,2,0xf044,0x3c9,0x313,0x301,0x345,0x1f65,0x345,2,0xf044,0x3c9,0x314,0x301,0x345,\n+0x1f66,0x345,2,0xf044,0x3c9,0x313,0x342,0x345,0x1f67,0x345,2,0xf044,0x3c9,0x314,0x342,0x345,\n+0x1f68,0xf043,0x3a9,0x313,0x345,0x1f69,0xf043,0x3a9,0x314,0x345,0x1f6a,0x345,2,0xf044,0x3a9,0x313,\n+0x300,0x345,0x1f6b,0x345,2,0xf044,0x3a9,0x314,0x300,0x345,0x1f6c,0x345,2,0xf044,0x3a9,0x313,\n+0x301,0x345,0x1f6d,0x345,2,0xf044,0x3a9,0x314,0x301,0x345,0x1f6e,0x345,2,0xf044,0x3a9,0x313,\n+0x342,0x345,0x1f6f,0x345,2,0xf044,0x3a9,0x314,0x342,0x345,0xe602,0x3b1,0x306,0xe602,0x3b1,0x304,\n+0x1f70,0xf043,0x3b1,0x300,0x345,0xf002,0x3b1,0x345,0x3ac,0xf043,0x3b1,0x301,0x345,0x1fb6,0xf043,0x3b1,\n+0x342,0x345,0xe602,0x391,0x306,0xe602,0x391,0x304,0xe602,0x391,0x300,0xf002,0x391,0x345,0xe602,0xa8,\n+0x342,0x1f74,0xf043,0x3b7,0x300,0x345,0xf002,0x3b7,0x345,0x3ae,0xf043,0x3b7,0x301,0x345,0x1fc6,0xf043,\n+0x3b7,0x342,0x345,0xe602,0x395,0x300,0xe602,0x397,0x300,0xf002,0x397,0x345,0xe602,0x1fbf,0x300,0xe602,\n+0x1fbf,0x301,0xe602,0x1fbf,0x342,0xe602,0x3b9,0x306,0xe602,0x3b9,0x304,0x3ca,0xe643,0x3b9,0x308,0x300,\n+0xe602,0x3b9,0x342,0x3ca,0xe643,0x3b9,0x308,0x342,0xe602,0x399,0x306,0xe602,0x399,0x304,0xe602,0x399,\n+0x300,0xe602,0x1ffe,0x300,0xe602,0x1ffe,0x301,0xe602,0x1ffe,0x342,0xe602,0x3c5,0x306,0xe602,0x3c5,0x304,\n+0x3cb,0xe643,0x3c5,0x308,0x300,0xe602,0x3c1,0x313,0xe602,0x3c1,0x314,0xe602,0x3c5,0x342,0x3cb,0xe643,\n+0x3c5,0x308,0x342,0xe602,0x3a5,0x306,0xe602,0x3a5,0x304,0xe602,0x3a5,0x300,0xe602,0x3a1,0x314,0xe602,\n+0xa8,0x300,0x1f7c,0xf043,0x3c9,0x300,0x345,0xf002,0x3c9,0x345,0x3ce,0xf043,0x3c9,0x301,0x345,0x1ff6,\n+0xf043,0x3c9,0x342,0x345,0xe602,0x39f,0x300,0xe602,0x3a9,0x300,0xf002,0x3a9,0x345,0x102,0x2190,0x338,\n+0x102,0x2192,0x338,0x102,0x2194,0x338,0x102,0x21d0,0x338,0x102,0x21d4,0x338,0x102,0x21d2,0x338,0x102,\n+0x2203,0x338,0x102,0x2208,0x338,0x102,0x220b,0x338,0x102,0x2223,0x338,0x102,0x2225,0x338,0x102,0x223c,\n+0x338,0x102,0x2243,0x338,0x102,0x2245,0x338,0x102,0x2248,0x338,0x102,0x3d,0x338,0x102,0x2261,0x338,\n+0x102,0x224d,0x338,0x102,0x3c,0x338,0x102,0x3e,0x338,0x102,0x2264,0x338,0x102,0x2265,0x338,0x102,\n+0x2272,0x338,0x102,0x2273,0x338,0x102,0x2276,0x338,0x102,0x2277,0x338,0x102,0x227a,0x338,0x102,0x227b,\n+0x338,0x102,0x2282,0x338,0x102,0x2283,0x338,0x102,0x2286,0x338,0x102,0x2287,0x338,0x102,0x22a2,0x338,\n+0x102,0x22a8,0x338,0x102,0x22a9,0x338,0x102,0x22ab,0x338,0x102,0x227c,0x338,0x102,0x227d,0x338,0x102,\n+0x2291,0x338,0x102,0x2292,0x338,0x102,0x22b2,0x338,0x102,0x22b3,0x338,0x102,0x22b4,0x338,0x102,0x22b5,\n+0x338,0x802,0x304b,0x3099,0x802,0x304d,0x3099,0x802,0x304f,0x3099,0x802,0x3051,0x3099,0x802,0x3053,0x3099,\n+0x802,0x3055,0x3099,0x802,0x3057,0x3099,0x802,0x3059,0x3099,0x802,0x305b,0x3099,0x802,0x305d,0x3099,0x802,\n+0x305f,0x3099,0x802,0x3061,0x3099,0x802,0x3064,0x3099,0x802,0x3066,0x3099,0x802,0x3068,0x3099,0x802,0x306f,\n+0x3099,0x802,0x306f,0x309a,0x802,0x3072,0x3099,0x802,0x3072,0x309a,0x802,0x3075,0x3099,0x802,0x3075,0x309a,\n+0x802,0x3078,0x3099,0x802,0x3078,0x309a,0x802,0x307b,0x3099,0x802,0x307b,0x309a,0x802,0x3046,0x3099,0x802,\n+0x309d,0x3099,0x802,0x30ab,0x3099,0x802,0x30ad,0x3099,0x802,0x30af,0x3099,0x802,0x30b1,0x3099,0x802,0x30b3,\n+0x3099,0x802,0x30b5,0x3099,0x802,0x30b7,0x3099,0x802,0x30b9,0x3099,0x802,0x30bb,0x3099,0x802,0x30bd,0x3099,\n+0x802,0x30bf,0x3099,0x802,0x30c1,0x3099,0x802,0x30c4,0x3099,0x802,0x30c6,0x3099,0x802,0x30c8,0x3099,0x802,\n+0x30cf,0x3099,0x802,0x30cf,0x309a,0x802,0x30d2,0x3099,0x802,0x30d2,0x309a,0x802,0x30d5,0x3099,0x802,0x30d5,\n+0x309a,0x802,0x30d8,0x3099,0x802,0x30d8,0x309a,0x802,0x30db,0x3099,0x802,0x30db,0x309a,0x802,0x30a6,0x3099,\n+0x802,0x30ef,0x3099,0x802,0x30f0,0x3099,0x802,0x30f1,0x3099,0x802,0x30f2,0x3099,0x802,0x30fd,0x3099,0x704,\n+0xd804,0xdc99,0xd804,0xdcba,0x704,0xd804,0xdc9b,0xd804,0xdcba,0x704,0xd804,0xdca5,0xd804,0xdcba,4,0xd804,\n+0xdd31,0xd804,0xdd27,4,0xd804,0xdd32,0xd804,0xdd27,4,0xd804,0xdf47,0xd804,0xdf3e,4,0xd804,0xdf47,\n+0xd804,0xdf57,4,0xd805,0xdcb9,0xd805,0xdcba,4,0xd805,0xdcb9,0xd805,0xdcb0,4,0xd805,0xdcb9,0xd805,\n+0xdcbd,4,0xd805,0xddb8,0xd805,0xddaf,4,0xd805,0xddb9,0xd805,0xddaf,4,0xd806,0xdd35,0xd806,0xdd30,\n+1,0x2b9,1,0x3b,1,0xb7,0x702,0x915,0x93c,0x702,0x916,0x93c,0x702,0x917,0x93c,0x702,\n+0x91c,0x93c,0x702,0x921,0x93c,0x702,0x922,0x93c,0x702,0x92b,0x93c,0x702,0x92f,0x93c,0x702,0x9a1,\n+0x9bc,0x702,0x9a2,0x9bc,0x702,0x9af,0x9bc,0x702,0xa32,0xa3c,0x702,0xa38,0xa3c,0x702,0xa16,0xa3c,\n+0x702,0xa17,0xa3c,0x702,0xa1c,0xa3c,0x702,0xa2b,0xa3c,0x702,0xb21,0xb3c,0x702,0xb22,0xb3c,2,\n+0xf42,0xfb7,2,0xf4c,0xfb7,2,0xf51,0xfb7,2,0xf56,0xfb7,2,0xf5b,0xfb7,2,0xf40,\n+0xfb5,0x8202,0xfb2,0xf80,0x8202,0xfb3,0xf80,2,0xf92,0xfb7,2,0xf9c,0xfb7,2,0xfa1,0xfb7,\n+2,0xfa6,0xfb7,2,0xfab,0xfb7,2,0xf90,0xfb5,1,0x3b9,1,0x60,1,0xb4,1,\n+0x3a9,1,0x4b,1,0x3008,1,0x3009,0x102,0x2add,0x338,1,0x8c48,1,0x66f4,1,0x8eca,\n+1,0x8cc8,1,0x6ed1,1,0x4e32,1,0x53e5,1,0x9f9c,1,0x5951,1,0x91d1,1,0x5587,\n+1,0x5948,1,0x61f6,1,0x7669,1,0x7f85,1,0x863f,1,0x87ba,1,0x88f8,1,0x908f,\n+1,0x6a02,1,0x6d1b,1,0x70d9,1,0x73de,1,0x843d,1,0x916a,1,0x99f1,1,0x4e82,\n+1,0x5375,1,0x6b04,1,0x721b,1,0x862d,1,0x9e1e,1,0x5d50,1,0x6feb,1,0x85cd,\n+1,0x8964,1,0x62c9,1,0x81d8,1,0x881f,1,0x5eca,1,0x6717,1,0x6d6a,1,0x72fc,\n+1,0x90ce,1,0x4f86,1,0x51b7,1,0x52de,1,0x64c4,1,0x6ad3,1,0x7210,1,0x76e7,\n+1,0x8001,1,0x8606,1,0x865c,1,0x8def,1,0x9732,1,0x9b6f,1,0x9dfa,1,0x788c,\n+1,0x797f,1,0x7da0,1,0x83c9,1,0x9304,1,0x9e7f,1,0x8ad6,1,0x58df,1,0x5f04,\n+1,0x7c60,1,0x807e,1,0x7262,1,0x78ca,1,0x8cc2,1,0x96f7,1,0x58d8,1,0x5c62,\n+1,0x6a13,1,0x6dda,1,0x6f0f,1,0x7d2f,1,0x7e37,1,0x964b,1,0x52d2,1,0x808b,\n+1,0x51dc,1,0x51cc,1,0x7a1c,1,0x7dbe,1,0x83f1,1,0x9675,1,0x8b80,1,0x62cf,\n+1,0x8afe,1,0x4e39,1,0x5be7,1,0x6012,1,0x7387,1,0x7570,1,0x5317,1,0x78fb,\n+1,0x4fbf,1,0x5fa9,1,0x4e0d,1,0x6ccc,1,0x6578,1,0x7d22,1,0x53c3,1,0x585e,\n+1,0x7701,1,0x8449,1,0x8aaa,1,0x6bba,1,0x8fb0,1,0x6c88,1,0x62fe,1,0x82e5,\n+1,0x63a0,1,0x7565,1,0x4eae,1,0x5169,1,0x51c9,1,0x6881,1,0x7ce7,1,0x826f,\n+1,0x8ad2,1,0x91cf,1,0x52f5,1,0x5442,1,0x5973,1,0x5eec,1,0x65c5,1,0x6ffe,\n+1,0x792a,1,0x95ad,1,0x9a6a,1,0x9e97,1,0x9ece,1,0x529b,1,0x66c6,1,0x6b77,\n+1,0x8f62,1,0x5e74,1,0x6190,1,0x6200,1,0x649a,1,0x6f23,1,0x7149,1,0x7489,\n+1,0x79ca,1,0x7df4,1,0x806f,1,0x8f26,1,0x84ee,1,0x9023,1,0x934a,1,0x5217,\n+1,0x52a3,1,0x54bd,1,0x70c8,1,0x88c2,1,0x5ec9,1,0x5ff5,1,0x637b,1,0x6bae,\n+1,0x7c3e,1,0x7375,1,0x4ee4,1,0x56f9,1,0x5dba,1,0x601c,1,0x73b2,1,0x7469,\n+1,0x7f9a,1,0x8046,1,0x9234,1,0x96f6,1,0x9748,1,0x9818,1,0x4f8b,1,0x79ae,\n+1,0x91b4,1,0x96b8,1,0x60e1,1,0x4e86,1,0x50da,1,0x5bee,1,0x5c3f,1,0x6599,\n+1,0x71ce,1,0x7642,1,0x84fc,1,0x907c,1,0x9f8d,1,0x6688,1,0x962e,1,0x5289,\n+1,0x677b,1,0x67f3,1,0x6d41,1,0x6e9c,1,0x7409,1,0x7559,1,0x786b,1,0x7d10,\n+1,0x985e,1,0x516d,1,0x622e,1,0x9678,1,0x502b,1,0x5d19,1,0x6dea,1,0x8f2a,\n+1,0x5f8b,1,0x6144,1,0x6817,1,0x9686,1,0x5229,1,0x540f,1,0x5c65,1,0x6613,\n+1,0x674e,1,0x68a8,1,0x6ce5,1,0x7406,1,0x75e2,1,0x7f79,1,0x88cf,1,0x88e1,\n+1,0x91cc,1,0x96e2,1,0x533f,1,0x6eba,1,0x541d,1,0x71d0,1,0x7498,1,0x85fa,\n+1,0x96a3,1,0x9c57,1,0x9e9f,1,0x6797,1,0x6dcb,1,0x81e8,1,0x7acb,1,0x7b20,\n+1,0x7c92,1,0x72c0,1,0x7099,1,0x8b58,1,0x4ec0,1,0x8336,1,0x523a,1,0x5207,\n+1,0x5ea6,1,0x62d3,1,0x7cd6,1,0x5b85,1,0x6d1e,1,0x66b4,1,0x8f3b,1,0x884c,\n+1,0x964d,1,0x898b,1,0x5ed3,1,0x5140,1,0x55c0,1,0x585a,1,0x6674,1,0x51de,\n+1,0x732a,1,0x76ca,1,0x793c,1,0x795e,1,0x7965,1,0x798f,1,0x9756,1,0x7cbe,\n+1,0x7fbd,1,0x8612,1,0x8af8,1,0x9038,1,0x90fd,1,0x98ef,1,0x98fc,1,0x9928,\n+1,0x9db4,1,0x90de,1,0x96b7,1,0x4fae,1,0x50e7,1,0x514d,1,0x52c9,1,0x52e4,\n+1,0x5351,1,0x559d,1,0x5606,1,0x5668,1,0x5840,1,0x58a8,1,0x5c64,1,0x5c6e,\n+1,0x6094,1,0x6168,1,0x618e,1,0x61f2,1,0x654f,1,0x65e2,1,0x6691,1,0x6885,\n+1,0x6d77,1,0x6e1a,1,0x6f22,1,0x716e,1,0x722b,1,0x7422,1,0x7891,1,0x793e,\n+1,0x7949,1,0x7948,1,0x7950,1,0x7956,1,0x795d,1,0x798d,1,0x798e,1,0x7a40,\n+1,0x7a81,1,0x7bc0,1,0x7e09,1,0x7e41,1,0x7f72,1,0x8005,1,0x81ed,1,0x8279,\n+1,0x8457,1,0x8910,1,0x8996,1,0x8b01,1,0x8b39,1,0x8cd3,1,0x8d08,1,0x8fb6,\n+1,0x96e3,1,0x97ff,1,0x983b,1,0x6075,2,0xd850,0xdeee,1,0x8218,1,0x4e26,1,\n+0x51b5,1,0x5168,1,0x4f80,1,0x5145,1,0x5180,1,0x52c7,1,0x52fa,1,0x5555,1,\n+0x5599,1,0x55e2,1,0x58b3,1,0x5944,1,0x5954,1,0x5a62,1,0x5b28,1,0x5ed2,1,\n+0x5ed9,1,0x5f69,1,0x5fad,1,0x60d8,1,0x614e,1,0x6108,1,0x6160,1,0x6234,1,\n+0x63c4,1,0x641c,1,0x6452,1,0x6556,1,0x671b,1,0x6756,1,0x6b79,1,0x6edb,1,\n+0x6ecb,1,0x701e,1,0x77a7,1,0x7235,1,0x72af,1,0x7471,1,0x7506,1,0x753b,1,\n+0x761d,1,0x761f,1,0x76db,1,0x76f4,1,0x774a,1,0x7740,1,0x78cc,1,0x7ab1,1,\n+0x7c7b,1,0x7d5b,1,0x7f3e,1,0x8352,1,0x83ef,1,0x8779,1,0x8941,1,0x8986,1,\n+0x8abf,1,0x8acb,1,0x8aed,1,0x8b8a,1,0x8f38,1,0x9072,1,0x9199,1,0x9276,1,\n+0x967c,1,0x97db,1,0x980b,1,0x9b12,2,0xd84a,0xdc4a,2,0xd84a,0xdc44,2,0xd84c,0xdfd5,\n+1,0x3b9d,1,0x4018,1,0x4039,2,0xd854,0xde49,2,0xd857,0xdcd0,2,0xd85f,0xded3,1,\n+0x9f43,1,0x9f8e,0xe02,0x5d9,0x5b4,0x1102,0x5f2,0x5b7,0x1802,0x5e9,0x5c1,0x1902,0x5e9,0x5c2,0xfb49,\n+0x1843,0x5e9,0x5bc,0x5c1,0xfb49,0x1943,0x5e9,0x5bc,0x5c2,0x1102,0x5d0,0x5b7,0x1202,0x5d0,0x5b8,0x1502,\n+0x5d0,0x5bc,0x1502,0x5d1,0x5bc,0x1502,0x5d2,0x5bc,0x1502,0x5d3,0x5bc,0x1502,0x5d4,0x5bc,0x1502,0x5d5,\n+0x5bc,0x1502,0x5d6,0x5bc,0x1502,0x5d8,0x5bc,0x1502,0x5d9,0x5bc,0x1502,0x5da,0x5bc,0x1502,0x5db,0x5bc,\n+0x1502,0x5dc,0x5bc,0x1502,0x5de,0x5bc,0x1502,0x5e0,0x5bc,0x1502,0x5e1,0x5bc,0x1502,0x5e3,0x5bc,0x1502,\n+0x5e4,0x5bc,0x1502,0x5e6,0x5bc,0x1502,0x5e7,0x5bc,0x1502,0x5e8,0x5bc,0x1502,0x5e9,0x5bc,0x1502,0x5ea,\n+0x5bc,0x1302,0x5d5,0x5b9,0x1702,0x5d1,0x5bf,0x1702,0x5db,0x5bf,0x1702,0x5e4,0x5bf,0xd804,0xd834,0xdd57,\n+0xd834,0xdd65,0xd804,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd5f,0xd834,0xdd6e,4,0xd846,0xd834,0xdd58,0xd834,\n+0xdd65,0xd834,0xdd6e,0xd834,0xdd5f,0xd834,0xdd6f,4,0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd6f,0xd834,\n+0xdd5f,0xd834,0xdd70,4,0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd70,0xd834,0xdd5f,0xd834,0xdd71,4,\n+0xd846,0xd834,0xdd58,0xd834,0xdd65,0xd834,0xdd71,0xd834,0xdd5f,0xd834,0xdd72,4,0xd846,0xd834,0xdd58,0xd834,\n+0xdd65,0xd834,0xdd72,0xd804,0xd834,0xddb9,0xd834,0xdd65,0xd804,0xd834,0xddba,0xd834,0xdd65,0xd834,0xddbb,0xd834,\n+0xdd6e,4,0xd846,0xd834,0xddb9,0xd834,0xdd65,0xd834,0xdd6e,0xd834,0xddbc,0xd834,0xdd6e,4,0xd846,0xd834,\n+0xddba,0xd834,0xdd65,0xd834,0xdd6e,0xd834,0xddbb,0xd834,0xdd6f,4,0xd846,0xd834,0xddb9,0xd834,0xdd65,0xd834,\n+0xdd6f,0xd834,0xddbc,0xd834,0xdd6f,4,0xd846,0xd834,0xddba,0xd834,0xdd65,0xd834,0xdd6f,1,0x4e3d,1,\n+0x4e38,1,0x4e41,2,0xd840,0xdd22,1,0x4f60,1,0x4fbb,1,0x5002,1,0x507a,1,0x5099,\n+1,0x50cf,1,0x349e,2,0xd841,0xde3a,1,0x5154,1,0x5164,1,0x5177,2,0xd841,0xdd1c,\n+1,0x34b9,1,0x5167,1,0x518d,2,0xd841,0xdd4b,1,0x5197,1,0x51a4,1,0x4ecc,1,\n+0x51ac,2,0xd864,0xdddf,1,0x51f5,1,0x5203,1,0x34df,1,0x523b,1,0x5246,1,0x5272,\n+1,0x5277,1,0x3515,1,0x5305,1,0x5306,1,0x5349,1,0x535a,1,0x5373,1,0x537d,\n+1,0x537f,2,0xd842,0xde2c,1,0x7070,1,0x53ca,1,0x53df,2,0xd842,0xdf63,1,0x53eb,\n+1,0x53f1,1,0x5406,1,0x549e,1,0x5438,1,0x5448,1,0x5468,1,0x54a2,1,0x54f6,\n+1,0x5510,1,0x5553,1,0x5563,1,0x5584,1,0x55ab,1,0x55b3,1,0x55c2,1,0x5716,\n+1,0x5717,1,0x5651,1,0x5674,1,0x58ee,1,0x57ce,1,0x57f4,1,0x580d,1,0x578b,\n+1,0x5832,1,0x5831,1,0x58ac,2,0xd845,0xdce4,1,0x58f2,1,0x58f7,1,0x5906,1,\n+0x591a,1,0x5922,1,0x5962,2,0xd845,0xdea8,2,0xd845,0xdeea,1,0x59ec,1,0x5a1b,1,\n+0x5a27,1,0x59d8,1,0x5a66,1,0x36ee,1,0x36fc,1,0x5b08,1,0x5b3e,2,0xd846,0xddc8,\n+1,0x5bc3,1,0x5bd8,1,0x5bf3,2,0xd846,0xdf18,1,0x5bff,1,0x5c06,1,0x5f53,1,\n+0x5c22,1,0x3781,1,0x5c60,1,0x5cc0,1,0x5c8d,2,0xd847,0xdde4,1,0x5d43,2,0xd847,\n+0xdde6,1,0x5d6e,1,0x5d6b,1,0x5d7c,1,0x5de1,1,0x5de2,1,0x382f,1,0x5dfd,1,\n+0x5e28,1,0x5e3d,1,0x5e69,1,0x3862,2,0xd848,0xdd83,1,0x387c,1,0x5eb0,1,0x5eb3,\n+1,0x5eb6,2,0xd868,0xdf92,1,0x5efe,2,0xd848,0xdf31,1,0x8201,1,0x5f22,1,0x38c7,\n+2,0xd84c,0xdeb8,2,0xd858,0xddda,1,0x5f62,1,0x5f6b,1,0x38e3,1,0x5f9a,1,0x5fcd,\n+1,0x5fd7,1,0x5ff9,1,0x6081,1,0x393a,1,0x391c,2,0xd849,0xded4,1,0x60c7,1,\n+0x6148,1,0x614c,1,0x617a,1,0x61b2,1,0x61a4,1,0x61af,1,0x61de,1,0x6210,1,\n+0x621b,1,0x625d,1,0x62b1,1,0x62d4,1,0x6350,2,0xd84a,0xdf0c,1,0x633d,1,0x62fc,\n+1,0x6368,1,0x6383,1,0x63e4,2,0xd84a,0xdff1,1,0x6422,1,0x63c5,1,0x63a9,1,\n+0x3a2e,1,0x6469,1,0x647e,1,0x649d,1,0x6477,1,0x3a6c,1,0x656c,2,0xd84c,0xdc0a,\n+1,0x65e3,1,0x66f8,1,0x6649,1,0x3b19,1,0x3b08,1,0x3ae4,1,0x5192,1,0x5195,\n+1,0x6700,1,0x669c,1,0x80ad,1,0x43d9,1,0x6721,1,0x675e,1,0x6753,2,0xd84c,\n+0xdfc3,1,0x3b49,1,0x67fa,1,0x6785,1,0x6852,2,0xd84d,0xdc6d,1,0x688e,1,0x681f,\n+1,0x6914,1,0x6942,1,0x69a3,1,0x69ea,1,0x6aa8,2,0xd84d,0xdea3,1,0x6adb,1,\n+0x3c18,1,0x6b21,2,0xd84e,0xdca7,1,0x6b54,1,0x3c4e,1,0x6b72,1,0x6b9f,1,0x6bbb,\n+2,0xd84e,0xde8d,2,0xd847,0xdd0b,2,0xd84e,0xdefa,1,0x6c4e,2,0xd84f,0xdcbc,1,0x6cbf,\n+1,0x6ccd,1,0x6c67,1,0x6d16,1,0x6d3e,1,0x6d69,1,0x6d78,1,0x6d85,2,0xd84f,\n+0xdd1e,1,0x6d34,1,0x6e2f,1,0x6e6e,1,0x3d33,1,0x6ec7,2,0xd84f,0xded1,1,0x6df9,\n+1,0x6f6e,2,0xd84f,0xdf5e,2,0xd84f,0xdf8e,1,0x6fc6,1,0x7039,1,0x701b,1,0x3d96,\n+1,0x704a,1,0x707d,1,0x7077,1,0x70ad,2,0xd841,0xdd25,1,0x7145,2,0xd850,0xde63,\n+1,0x719c,2,0xd850,0xdfab,1,0x7228,1,0x7250,2,0xd851,0xde08,1,0x7280,1,0x7295,\n+2,0xd851,0xdf35,2,0xd852,0xdc14,1,0x737a,1,0x738b,1,0x3eac,1,0x73a5,1,0x3eb8,\n+1,0x7447,1,0x745c,1,0x7485,1,0x74ca,1,0x3f1b,1,0x7524,2,0xd853,0xdc36,1,\n+0x753e,2,0xd853,0xdc92,2,0xd848,0xdd9f,1,0x7610,2,0xd853,0xdfa1,2,0xd853,0xdfb8,2,\n+0xd854,0xdc44,1,0x3ffc,1,0x4008,2,0xd854,0xdcf3,2,0xd854,0xdcf2,2,0xd854,0xdd19,2,\n+0xd854,0xdd33,1,0x771e,1,0x771f,1,0x778b,1,0x4046,1,0x4096,2,0xd855,0xdc1d,1,\n+0x784e,1,0x40e3,2,0xd855,0xde26,2,0xd855,0xde9a,2,0xd855,0xdec5,1,0x79eb,1,0x412f,\n+1,0x7a4a,1,0x7a4f,2,0xd856,0xdd7c,2,0xd856,0xdea7,1,0x7aee,1,0x4202,2,0xd856,\n+0xdfab,1,0x7bc6,1,0x7bc9,1,0x4227,2,0xd857,0xdc80,1,0x7cd2,1,0x42a0,1,0x7ce8,\n+1,0x7ce3,1,0x7d00,2,0xd857,0xdf86,1,0x7d63,1,0x4301,1,0x7dc7,1,0x7e02,1,\n+0x7e45,1,0x4334,2,0xd858,0xde28,2,0xd858,0xde47,1,0x4359,2,0xd858,0xded9,1,0x7f7a,\n+2,0xd858,0xdf3e,1,0x7f95,1,0x7ffa,2,0xd859,0xdcda,2,0xd859,0xdd23,1,0x8060,2,\n+0xd859,0xdda8,1,0x8070,2,0xd84c,0xdf5f,1,0x43d5,1,0x80b2,1,0x8103,1,0x440b,1,\n+0x813e,1,0x5ab5,2,0xd859,0xdfa7,2,0xd859,0xdfb5,2,0xd84c,0xdf93,2,0xd84c,0xdf9c,1,\n+0x8204,1,0x8f9e,1,0x446b,1,0x8291,1,0x828b,1,0x829d,1,0x52b3,1,0x82b1,1,\n+0x82b3,1,0x82bd,1,0x82e6,2,0xd85a,0xdf3c,1,0x831d,1,0x8363,1,0x83ad,1,0x8323,\n+1,0x83bd,1,0x83e7,1,0x8353,1,0x83ca,1,0x83cc,1,0x83dc,2,0xd85b,0xdc36,2,\n+0xd85b,0xdd6b,2,0xd85b,0xdcd5,1,0x452b,1,0x84f1,1,0x84f3,1,0x8516,2,0xd85c,0xdfca,\n+1,0x8564,2,0xd85b,0xdf2c,1,0x455d,1,0x4561,2,0xd85b,0xdfb1,2,0xd85c,0xdcd2,1,\n+0x456b,1,0x8650,1,0x8667,1,0x8669,1,0x86a9,1,0x8688,1,0x870e,1,0x86e2,1,\n+0x8728,1,0x876b,1,0x8786,1,0x45d7,1,0x87e1,1,0x8801,1,0x45f9,1,0x8860,1,\n+0x8863,2,0xd85d,0xde67,1,0x88d7,1,0x88de,1,0x4635,1,0x88fa,1,0x34bb,2,0xd85e,\n+0xdcae,2,0xd85e,0xdd66,1,0x46be,1,0x46c7,1,0x8aa0,1,0x8c55,2,0xd85f,0xdca8,1,\n+0x8cab,1,0x8cc1,1,0x8d1b,1,0x8d77,2,0xd85f,0xdf2f,2,0xd842,0xdc04,1,0x8dcb,1,\n+0x8dbc,1,0x8df0,2,0xd842,0xdcde,1,0x8ed4,2,0xd861,0xddd2,2,0xd861,0xdded,1,0x9094,\n+1,0x90f1,1,0x9111,2,0xd861,0xdf2e,1,0x911b,1,0x9238,1,0x92d7,1,0x92d8,1,\n+0x927c,1,0x93f9,1,0x9415,2,0xd862,0xdffa,1,0x958b,1,0x4995,1,0x95b7,2,0xd863,\n+0xdd77,1,0x49e6,1,0x96c3,1,0x5db2,1,0x9723,2,0xd864,0xdd45,2,0xd864,0xde1a,1,\n+0x4a6e,1,0x4a76,1,0x97e0,2,0xd865,0xdc0a,1,0x4ab2,2,0xd865,0xdc96,1,0x9829,2,\n+0xd865,0xddb6,1,0x98e2,1,0x4b33,1,0x9929,1,0x99a7,1,0x99c2,1,0x99fe,1,0x4bce,\n+2,0xd866,0xdf30,1,0x9c40,1,0x9cfd,1,0x4cce,1,0x4ced,1,0x9d67,2,0xd868,0xdcce,\n+1,0x4cf8,2,0xd868,0xdd05,2,0xd868,0xde0e,2,0xd868,0xde91,1,0x9ebb,1,0x4d56,1,\n+0x9ef9,1,0x9efe,1,0x9f05,1,0x9f0f,1,0x9f16,1,0x9f3b,2,0xd869,0xde00,0x3ac,0xe642,\n+0x3b1,0x301,0x3ad,0xe642,0x3b5,0x301,0x3ae,0xe642,0x3b7,0x301,0x3af,0xe642,0x3b9,0x301,0x3cc,0xe642,\n+0x3bf,0x301,0x3cd,0xe642,0x3c5,0x301,0x3ce,0xe642,0x3c9,0x301,0x386,0xe642,0x391,0x301,0x388,0xe642,\n+0x395,0x301,0x389,0xe642,0x397,0x301,0x390,1,0xe643,0x3b9,0x308,0x301,0x38a,0xe642,0x399,0x301,\n+0x3b0,1,0xe643,0x3c5,0x308,0x301,0x38e,0xe642,0x3a5,0x301,0x385,0xe642,0xa8,0x301,0x38c,0xe642,\n+0x39f,0x301,0x38f,0xe642,0x3a9,0x301,0xc5,0xe642,0x41,0x30a,0xe6e6,0xe681,0x300,0xe6e6,0xe681,0x301,\n+0xe6e6,0xe681,0x313,0xe6e6,0xe682,0x308,0x301,0x8100,0x8282,0xf71,0xf72,0x8100,0x8482,0xf71,0xf74,0x8100,\n+0x8282,0xf71,0xf80,0\n@@ -1123,1 +1132,1 @@\n-0x12,0,0,4,0,0,0,0x43,0x20,2,0x29,0xae,0xc2,0xc0,0xff,0xff,\n+0x12,0,0,4,0,0,0,0x43,0x20,2,0x69,0xae,0xc2,0xc0,0xff,0xff,\n@@ -1132,1 +1141,1 @@\n-0,0,0,0,0,0,0x98,0,0xc1,0x66,0xe0,0x80,0,0,0,0,\n+0,0,0,0,0,0,0x98,0,0xc3,0x66,0xe0,0x80,0,0,0,0,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/norm2_nfc_data.h","additions":793,"deletions":784,"binary":false,"changes":1577,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        return normalizeSecondAndAppend(first, second, TRUE, errorCode);\n+        return normalizeSecondAndAppend(first, second, true, errorCode);\n@@ -74,1 +74,1 @@\n-        return normalizeSecondAndAppend(first, second, FALSE, errorCode);\n+        return normalizeSecondAndAppend(first, second, false, errorCode);\n@@ -115,1 +115,1 @@\n-            return FALSE;\n+            return false;\n@@ -120,1 +120,1 @@\n-            decomposition.setTo(FALSE, d, length);  \/\/ read-only alias\n+            decomposition.setTo(false, d, length);  \/\/ read-only alias\n@@ -122,1 +122,1 @@\n-        return TRUE;\n+        return true;\n@@ -130,1 +130,1 @@\n-            return FALSE;\n+            return false;\n@@ -135,1 +135,1 @@\n-            decomposition.setTo(FALSE, d, length);  \/\/ read-only alias\n+            decomposition.setTo(false, d, length);  \/\/ read-only alias\n@@ -137,1 +137,1 @@\n-        return TRUE;\n+        return true;\n@@ -153,1 +153,1 @@\n-            return FALSE;\n+            return false;\n@@ -158,1 +158,1 @@\n-            return FALSE;\n+            return false;\n@@ -230,1 +230,1 @@\n-        impl.compose(src, limit, onlyContiguous, TRUE, buffer, errorCode);\n+        impl.compose(src, limit, onlyContiguous, true, buffer, errorCode);\n@@ -259,1 +259,1 @@\n-            return FALSE;\n+            return false;\n@@ -264,1 +264,1 @@\n-            return FALSE;\n+            return false;\n@@ -269,1 +269,1 @@\n-            return FALSE;\n+            return false;\n@@ -271,1 +271,1 @@\n-        return impl.compose(sArray, sArray+s.length(), onlyContiguous, FALSE, buffer, errorCode);\n+        return impl.compose(sArray, sArray+s.length(), onlyContiguous, false, buffer, errorCode);\n@@ -276,1 +276,1 @@\n-            return FALSE;\n+            return false;\n@@ -346,1 +346,1 @@\n-            : impl(i), comp(*i, FALSE), decomp(*i), fcd(*i), fcc(*i, TRUE) {}\n+            : impl(i), comp(*i, false), decomp(*i), fcd(*i), fcc(*i, true) {}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/norm2allmodes.h","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2091,0 +2091,7 @@\n+\/\/ Ticket 20907 - The optimizer in MSVC\/Visual Studio versions below 16.4 has trouble with this\n+\/\/ function on Windows ARM64. As a work-around, we disable optimizations for this function.\n+\/\/ This work-around could\/should be removed once the following versions of Visual Studio are no\n+\/\/ longer supported: All versions of VS2017, and versions of VS2019 below 16.4.\n+#if (defined(_MSC_VER) && (defined(_M_ARM64)) && (_MSC_VER < 1924))\n+#pragma optimize( \"\", off )\n+#endif\n@@ -2124,0 +2131,3 @@\n+#if (defined(_MSC_VER) && (defined(_M_ARM64)) && (_MSC_VER < 1924))\n+#pragma optimize( \"\", on )\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/normalizer2impl.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-            return FALSE;\n+            return false;\n@@ -186,1 +186,1 @@\n-        return TRUE;\n+        return true;\n@@ -248,3 +248,1 @@\n-    Normalizer2Impl() : normTrie(NULL), fCanonIterData(NULL) {\n-        fCanonIterDataInitOnce.reset();\n-    }\n+    Normalizer2Impl() : normTrie(NULL), fCanonIterData(NULL) { }\n@@ -364,1 +362,1 @@\n-    \/** Returns TRUE if the single-or-lead code unit c might have non-zero FCD data. *\/\n+    \/** Returns true if the single-or-lead code unit c might have non-zero FCD data. *\/\n@@ -402,2 +400,2 @@\n-        JAMO_L=2,  \/\/ offset=1 hasCompBoundaryAfter=FALSE\n-        INERT=1,  \/\/ offset=0 hasCompBoundaryAfter=TRUE\n+        JAMO_L=2,  \/\/ offset=1 hasCompBoundaryAfter=false\n+        INERT=1,  \/\/ offset=0 hasCompBoundaryAfter=true\n@@ -726,1 +724,1 @@\n-    UInitOnce       fCanonIterDataInitOnce;\n+    UInitOnce       fCanonIterDataInitOnce = U_INITONCE_INITIALIZER;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/normalizer2impl.h","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-     * @return TRUE if c is a Pattern_Syntax code point.\n+     * @return true if c is a Pattern_Syntax code point.\n@@ -52,1 +52,1 @@\n-     * @return TRUE if c is a Pattern_Syntax or Pattern_White_Space code point.\n+     * @return true if c is a Pattern_Syntax or Pattern_White_Space code point.\n@@ -57,1 +57,1 @@\n-     * @return TRUE if c is a Pattern_White_Space character.\n+     * @return true if c is a Pattern_White_Space character.\n@@ -81,1 +81,1 @@\n-     * @return TRUE if there are no Pattern_White_Space or Pattern_Syntax characters in s.\n+     * @return true if there are no Pattern_White_Space or Pattern_Syntax characters in s.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/patternprops.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-     * Returns TRUE if this object equals rhs.\n+     * Returns true if this object equals rhs.\n@@ -247,1 +247,1 @@\n-                return FALSE;\n+                return false;\n@@ -250,1 +250,1 @@\n-                return FALSE;\n+                return false;\n@@ -253,1 +253,1 @@\n-        return TRUE;\n+        return true;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/pluralmap.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -16,1 +16,1 @@\n-const int32_t PropNameData::indexes[8]={0x20,0x157c,0x4f32,0xa3ee,0xa3ee,0xa3ee,0x2f,0};\n+const int32_t PropNameData::indexes[8]={0x20,0x15b8,0x5048,0xa69a,0xa69a,0xa69a,0x2f,0};\n@@ -18,87 +18,88 @@\n-const int32_t PropNameData::valueMaps[1367]={\n-6,0,0x41,0,0xe3,0x356,0xe3,0x36c,0xe3,0x381,0xe3,0x397,0xe3,0x3a2,0xe3,0x3c3,\n-0xe3,0x3d3,0xe3,0x3e2,0xe3,0x3f0,0xe3,0x414,0xe3,0x42b,0xe3,0x443,0xe3,0x45a,0xe3,0x469,\n-0xe3,0x478,0xe3,0x489,0xe3,0x497,0xe3,0x4a9,0xe3,0x4c3,0xe3,0x4de,0xe3,0x4f3,0xe3,0x510,\n-0xe3,0x521,0xe3,0x52c,0xe3,0x54b,0xe3,0x561,0xe3,0x572,0xe3,0x582,0xe3,0x59d,0xe3,0x5b6,\n-0xe3,0x5c7,0xe3,0x5e1,0xe3,0x5f4,0xe3,0x604,0xe3,0x61e,0xe3,0x637,0xe3,0x64e,0xe3,0x662,\n-0xe3,0x678,0xe3,0x68c,0xe3,0x6a2,0xe3,0x6bc,0xe3,0x6d4,0xe3,0x6f0,0xe3,0x6f8,0xe3,0x700,\n-0xe3,0x708,0xe3,0x710,0xe3,0x719,0xe3,0x726,0xe3,0x739,0xe3,0x756,0xe3,0x773,0xe3,0x790,\n-0xe3,0x7ae,0xe3,0x7cc,0xe3,0x7f0,0xe3,0x7fd,0xe3,0x817,0xe3,0x82c,0xe3,0x847,0xe3,0x85e,\n-0xe3,0x875,0xe3,0x897,0xe3,0x1000,0x1019,0x8b6,0x15d,0xad6,0x178,0x2df6,0xe9,0x2e15,0x2a9,0x2f53,\n-0x2bf,0x2fad,0x2c9,0x320a,0x2eb,0x3b05,0x355,0x3b75,0x35f,0x3e0f,0x38e,0x3e4d,0x396,0x48f6,0x457,0x4974,\n-0x461,0x4999,0x467,0x49b3,0x46d,0x49d4,0x474,0x49ee,0xe9,0x4a13,0xe9,0x4a39,0x47b,0x4ae3,0x491,0x4b5c,\n-0x4a4,0x4c0e,0x4bf,0x4c45,0x4c6,0x4df4,0x4d9,0x5274,0x501,0x2000,0x2001,0x52d3,0x509,0x3000,0x3001,0x535f,\n-0,0x4000,0x400e,0x5371,0,0x537a,0,0x5394,0,0x53a5,0,0x53b6,0,0x53cc,0,0x53d5,\n-0,0x53f2,0,0x5410,0,0x542e,0,0x544c,0,0x5462,0,0x5476,0,0x548c,0,0x7000,\n-0x7001,0x54a5,0,0x7d6,0x12,0,1,0x12,0x20,0x7f4,0x49,0,1,7,8,9,\n-0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,\n-0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,0x21,0x22,0x23,0x24,0x54,0x5b,0x67,0x6b,0x76,\n-0x7a,0x81,0x82,0x84,0x85,0xc8,0xca,0xd6,0xd8,0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,\n-0xe8,0xe9,0xea,0xf0,0x2e,0x40,0x4c,0x56,0x67,0x72,0x7f,0x8c,0x99,0xa6,0xb3,0xc0,\n-0xcd,0xda,0xe7,0xf4,0x101,0x10e,0x11b,0x128,0x135,0x142,0x14f,0x15c,0x169,0x176,0x183,0x190,\n-0x19d,0x1aa,0x1b7,0x1c4,0x1d1,0x1de,0x1eb,0x1fa,0x209,0x218,0x227,0x236,0x245,0x254,0x263,0x27d,\n-0x291,0x2a5,0x2c0,0x2cf,0x2d8,0x2e8,0x2f0,0x2f9,0x308,0x311,0x321,0x332,0x343,0x986,1,0,\n-0x17,0x8c5,0x8d6,0x8e7,0x8fb,0x912,0x92a,0x93c,0x951,0x968,0x97d,0x98d,0x99f,0x9bc,0x9d8,0x9ea,\n-0xa07,0xa23,0xa3f,0xa54,0xa69,0xa83,0xa9e,0xab9,0xb28,1,0,0x12d,0xae1,0xaee,0xb01,0xb29,\n-0xb47,0xb65,0xb7d,0xba8,0xbd2,0xbea,0xbfd,0xc10,0xc1f,0xc2e,0xc3d,0xc4c,0xc63,0xc74,0xc87,0xc9a,\n-0xca7,0xcb4,0xcc3,0xcd4,0xce9,0xcfa,0xd05,0xd0e,0xd1f,0xd30,0xd43,0xd55,0xd68,0xd7b,0xdba,0xdc7,\n-0xdd4,0xde1,0xdf6,0xe26,0xe40,0xe61,0xe8c,0xeaf,0xf0d,0xf34,0xf4f,0xf5e,0xf85,0xfad,0xfd0,0xff3,\n-0x101d,0x1036,0x1055,0x1078,0x109c,0x10af,0x10c9,0x10f3,0x110b,0x1133,0x115c,0x116f,0x1182,0x1195,0x11bc,0x11cb,\n-0x11eb,0x1219,0x1237,0x1265,0x1281,0x129c,0x12b5,0x12ce,0x12ef,0x131f,0x133e,0x1360,0x1394,0x13c1,0x1406,0x1427,\n-0x1451,0x1472,0x149b,0x14ae,0x14e1,0x14f8,0x1507,0x1518,0x1543,0x155a,0x158b,0x15b9,0x15fc,0x1607,0x1640,0x1651,\n-0x1662,0x166f,0x1682,0x16bc,0x16e0,0x1704,0x173e,0x1776,0x17a1,0x17b9,0x17e5,0x1811,0x181e,0x182d,0x184a,0x186c,\n-0x189a,0x18ba,0x18e1,0x1908,0x1927,0x193a,0x194b,0x195c,0x1981,0x19a6,0x19cd,0x1a01,0x1a2e,0x1a4c,0x1a5f,0x1a78,\n-0x1ab1,0x1ac0,0x1ae0,0x1b02,0x1b24,0x1b3b,0x1b52,0x1b7f,0x1b98,0x1bb1,0x1be2,0x1c0c,0x1c27,0x1c3a,0x1c59,0x1c62,\n-0x1c75,0x1c93,0x1cb1,0x1cc4,0x1cdb,0x1cf0,0x1d25,0x1d49,0x1d5e,0x1d6d,0x1d80,0x1da4,0x1dad,0x1dd1,0x1de8,0x1dfb,\n-0x1e0a,0x1e15,0x1e36,0x1e4e,0x1e5d,0x1e6c,0x1e7b,0x1e92,0x1ea7,0x1ebc,0x1ef5,0x1f08,0x1f24,0x1f2f,0x1f3c,0x1f6a,\n-0x1f8e,0x1fb1,0x1fc4,0x1fe6,0x1ff9,0x2014,0x2037,0x205a,0x207f,0x2090,0x20bf,0x20ec,0x2103,0x211e,0x212d,0x2158,\n-0x2190,0x21ca,0x21f8,0x2209,0x2216,0x223a,0x2249,0x2265,0x227f,0x229c,0x22d4,0x22e9,0x2316,0x2335,0x2363,0x2383,\n-0x23b7,0x23c6,0x23f0,0x2413,0x243e,0x2449,0x245a,0x2475,0x2499,0x24a6,0x24bb,0x24e2,0x250d,0x2544,0x2557,0x2568,\n-0x2598,0x25a9,0x25b8,0x25cd,0x25eb,0x25fe,0x2611,0x2628,0x2645,0x2650,0x2659,0x267b,0x2690,0x26b5,0x26cc,0x26f5,\n-0x2710,0x2725,0x273e,0x275f,0x2794,0x27a5,0x27d6,0x27fa,0x280b,0x2824,0x282f,0x285c,0x287e,0x28ac,0x28df,0x28ee,\n-0x28ff,0x291c,0x295e,0x2985,0x2992,0x29a7,0x29cb,0x29f1,0x2a2a,0x2a3b,0x2a5f,0x2a6a,0x2a77,0x2a86,0x2aab,0x2ad9,\n-0x2af5,0x2b12,0x2b1f,0x2b30,0x2b4e,0x2b71,0x2b8e,0x2b9b,0x2bbb,0x2bd8,0x2bf9,0x2c22,0x2c33,0x2c52,0x2c6b,0x2c84,\n-0x2c95,0x2cde,0x2cef,0x2d08,0x2d37,0x2d64,0x2d89,0x2dcb,0x2de7,0x1e00,1,0,0x12,0x2e2c,0x2e3c,0x2e4f,\n-0x2e5f,0x2e6f,0x2e7e,0x2e8e,0x2ea0,0x2eb3,0x2ec5,0x2ed5,0x2ee5,0x2ef4,0x2f03,0x2f13,0x2f20,0x2f2f,0x2f43,0x1ebe,\n-1,0,6,0x2f68,0x2f73,0x2f80,0x2f8d,0x2f9a,0x2fa5,0x1f02,1,0,0x1e,0x2fc2,0x2fd1,0x2fe6,\n-0x2ffb,0x3010,0x3024,0x3035,0x3049,0x305c,0x306d,0x3086,0x3098,0x30a9,0x30bd,0x30d0,0x30e8,0x30fa,0x3105,0x3115,\n-0x3123,0x3138,0x314d,0x3163,0x317d,0x3193,0x31a3,0x31b7,0x31cb,0x31dc,0x31f4,0x212d,1,0,0x66,0x321c,\n-0x323f,0x3248,0x3255,0x3260,0x3269,0x3274,0x327d,0x3296,0x329b,0x32a4,0x32c1,0x32ca,0x32d7,0x32e0,0x3304,0x330b,\n-0x3314,0x3327,0x3332,0x333b,0x3346,0x335f,0x3368,0x3377,0x3382,0x338b,0x3396,0x339f,0x33a6,0x33af,0x33ba,0x33c3,\n-0x33dc,0x33e5,0x33f2,0x33fd,0x340e,0x3419,0x342e,0x3445,0x344e,0x3457,0x3470,0x347b,0x3484,0x348d,0x34a4,0x34c1,\n-0x34cc,0x34dd,0x34e8,0x34ef,0x34fc,0x3509,0x3536,0x354b,0x3554,0x356f,0x3592,0x35b3,0x35d4,0x35f9,0x3620,0x3641,\n-0x3664,0x3685,0x36ac,0x36cd,0x36f2,0x3711,0x3730,0x374f,0x376c,0x378d,0x37ae,0x37d1,0x37f6,0x3815,0x3834,0x3855,\n-0x387c,0x38a1,0x38c0,0x38e1,0x3904,0x391f,0x3938,0x3953,0x396c,0x3989,0x39a4,0x39c1,0x39e0,0x39fd,0x3a1a,0x3a39,\n-0x3a56,0x3a71,0x3a8e,0x3aab,0x3ade,0x2472,1,0,6,0x3b16,0x3b25,0x3b35,0x3b45,0x3b55,0x3b66,0x24d0,\n-1,0,0x2b,0x3b84,0x3b90,0x3b9e,0x3bad,0x3bbc,0x3bcc,0x3bdd,0x3bf1,0x3c06,0x3c1c,0x3c2f,0x3c43,0x3c53,\n-0x3c5c,0x3c67,0x3c77,0x3c93,0x3ca5,0x3cb3,0x3cc2,0x3cce,0x3ce3,0x3cf7,0x3d0a,0x3d18,0x3d2c,0x3d3a,0x3d44,0x3d56,\n-0x3d62,0x3d70,0x3d80,0x3d87,0x3d8e,0x3d95,0x3d9c,0x3da3,0x3db9,0x3dda,0x85e,0x3dec,0x3df7,0x3e06,0x2729,1,\n-0,4,0x3e20,0x3e2b,0x3e37,0x3e41,0x274f,1,0,0xbd,0x3e58,0x3e65,0x3e7a,0x3e87,0x3e96,0x3ea4,\n-0x3eb3,0x3ec2,0x3ed4,0x3ee3,0x3ef1,0x3f02,0x3f11,0x3f20,0x3f2d,0x3f39,0x3f48,0x3f57,0x3f61,0x3f6e,0x3f7b,0x3f8a,\n-0x3f98,0x3fa7,0x3fb3,0x3fbd,0x3fc9,0x3fd9,0x3fe9,0x3ff7,0x4003,0x4014,0x4020,0x402c,0x403a,0x4047,0x4053,0x4060,\n-0xcfa,0x406d,0x407b,0x4095,0x409e,0x40ac,0x40ba,0x40c6,0x40d5,0x40e3,0x40f1,0x40fd,0x410c,0x411a,0x4128,0x4135,\n-0x4144,0x415f,0x416e,0x417f,0x4190,0x41a3,0x41b5,0x41c4,0x41d6,0x41e5,0x41f1,0x41fc,0x1e0a,0x4209,0x4214,0x421f,\n-0x422a,0x4235,0x4250,0x425b,0x4266,0x4271,0x4284,0x4298,0x42a3,0x42b2,0x42c1,0x42cc,0x42d7,0x42e4,0x42f3,0x4301,\n-0x430c,0x4327,0x4331,0x4342,0x4353,0x4362,0x4373,0x437e,0x4389,0x4394,0x439f,0x43aa,0x43b5,0x43c0,0x43ca,0x43d5,\n-0x43e5,0x43f0,0x43fe,0x440b,0x4416,0x4425,0x4432,0x443f,0x444e,0x445b,0x446c,0x447e,0x448e,0x4499,0x44ac,0x44c3,\n-0x44d1,0x44de,0x44e9,0x44f6,0x4507,0x4523,0x4539,0x4544,0x4561,0x4571,0x4580,0x458b,0x4596,0x1f24,0x45a2,0x45ad,\n-0x45c5,0x45d5,0x45e4,0x45f2,0x4600,0x460b,0x4616,0x462a,0x4641,0x4659,0x4669,0x4679,0x4689,0x469b,0x46a6,0x46b1,\n-0x46bb,0x46c7,0x46d5,0x46e8,0x46f4,0x4701,0x470c,0x4728,0x4735,0x4743,0x475c,0x2824,0x476b,0x2645,0x4778,0x4786,\n-0x4798,0x47a6,0x47b2,0x47c2,0x2a5f,0x47d0,0x47dc,0x47e7,0x47f2,0x47fd,0x4811,0x481f,0x4836,0x4842,0x4856,0x4864,\n-0x4876,0x488c,0x489a,0x48ac,0x48ba,0x48d7,0x48e9,0x30fb,1,0,6,0x4910,0x4923,0x4933,0x4941,0x4952,\n-0x4962,0x3157,0x12,0,1,0x498c,0x4992,0x3164,0x12,0,1,0x498c,0x4992,0x3171,1,0,\n-3,0x498c,0x4992,0x49cb,0x3187,1,0,3,0x498c,0x4992,0x49cb,0x319d,1,0,0x12,0x4a55,\n-0x4a5f,0x4a6b,0x4a72,0x4a7d,0x4a82,0x4a89,0x4a90,0x4a99,0x4a9e,0x4aa3,0x4ab3,0x85e,0x3dec,0x4abf,0x3df7,0x4acf,\n-0x3e06,0x3246,1,0,0xf,0x4a55,0x4af6,0x4b00,0x4b0a,0x4b15,0x3cc2,0x4b1f,0x4b2b,0x4b33,0x4b3a,0x4b44,\n-0x4a6b,0x4a72,0x4a82,0x4b4e,0x32cd,1,0,0x17,0x4a55,0x4b6b,0x4b0a,0x4b77,0x4b84,0x4b92,0x3cc2,0x4b9d,\n-0x4a6b,0x4bae,0x4a82,0x4bbd,0x4bcb,0x85e,0x3dda,0x4bd7,0x4be8,0x3dec,0x4abf,0x3df7,0x4acf,0x3e06,0x4bf9,0x33ea,\n-1,0,3,0x4c2c,0x4c34,0x4c3c,0x3403,1,0,0xf,0x4c65,0x4c6c,0x4c7b,0x4c9c,0x4cbf,0x4cca,\n-0x4ce9,0x4d00,0x4d0d,0x4d16,0x4d35,0x4d68,0x4d83,0x4db2,0x4dcf,0x3493,1,0,0x24,0x4e12,0x4e1f,0x4e32,\n-0x4e3f,0x4e6c,0x4e91,0x4ea6,0x4ec5,0x4ee6,0x4f13,0x4f4c,0x4f6f,0x4f92,0x4fbf,0x4ff4,0x501b,0x5044,0x507b,0x50aa,\n-0x50cb,0x50f0,0x50ff,0x5122,0x5139,0x5146,0x5155,0x5172,0x518b,0x51ae,0x51d3,0x51ec,0x5201,0x5210,0x5221,0x522e,\n-0x524f,0x3663,1,0,4,0x528d,0x5298,0x52b0,0x52c8,0x369f,0x36,1,2,4,8,0xe,\n-0x10,0x20,0x3e,0x40,0x80,0x100,0x1c0,0x200,0x400,0x800,0xe00,0x1000,0x2000,0x4000,0x7000,0x8000,\n-0x10000,0x20000,0x40000,0x78001,0x80000,0x100000,0x200000,0x400000,0x800000,0x1000000,0x2000000,0x4000000,0x8000000,0xf000000,0x10000000,0x20000000,\n-0x30f80000,0x2fc2,0x2fd1,0x2fe6,0x2ffb,0x5301,0x3010,0x3024,0x52f7,0x3035,0x3049,0x305c,0x5312,0x306d,0x3086,0x3098,\n-0x5329,0x30a9,0x30bd,0x30d0,0x5352,0x30e8,0x30fa,0x3105,0x3115,0x52ee,0x3123,0x3138,0x314d,0x3163,0x317d,0x3193,\n-0x31a3,0x31b7,0x31cb,0x5348,0x31dc,0x31f4,0x5333\n+const int32_t PropNameData::valueMaps[1382]={\n+6,0,0x41,0,0xe3,0x368,0xe3,0x37e,0xe3,0x393,0xe3,0x3a9,0xe3,0x3b4,0xe3,0x3d5,\n+0xe3,0x3e5,0xe3,0x3f4,0xe3,0x402,0xe3,0x426,0xe3,0x43d,0xe3,0x455,0xe3,0x46c,0xe3,0x47b,\n+0xe3,0x48a,0xe3,0x49b,0xe3,0x4a9,0xe3,0x4bb,0xe3,0x4d5,0xe3,0x4f0,0xe3,0x505,0xe3,0x522,\n+0xe3,0x533,0xe3,0x53e,0xe3,0x55d,0xe3,0x573,0xe3,0x584,0xe3,0x594,0xe3,0x5af,0xe3,0x5c8,\n+0xe3,0x5d9,0xe3,0x5f3,0xe3,0x606,0xe3,0x616,0xe3,0x630,0xe3,0x649,0xe3,0x660,0xe3,0x674,\n+0xe3,0x68a,0xe3,0x69e,0xe3,0x6b4,0xe3,0x6ce,0xe3,0x6e6,0xe3,0x702,0xe3,0x70a,0xe3,0x712,\n+0xe3,0x71a,0xe3,0x722,0xe3,0x72b,0xe3,0x738,0xe3,0x74b,0xe3,0x768,0xe3,0x785,0xe3,0x7a2,\n+0xe3,0x7c0,0xe3,0x7de,0xe3,0x802,0xe3,0x80f,0xe3,0x829,0xe3,0x83e,0xe3,0x859,0xe3,0x870,\n+0xe3,0x887,0xe3,0x8a9,0xe3,0x1000,0x1019,0x8c8,0x15f,0xae8,0x17a,0x2f11,0xe9,0x2f30,0x2b3,0x306e,\n+0x2c9,0x30c8,0x2d3,0x3325,0x2f5,0x3c20,0x35f,0x3c90,0x369,0x3f2a,0x398,0x3f68,0x3a0,0x4a5b,0x465,0x4ad9,\n+0x46f,0x4afe,0x475,0x4b18,0x47b,0x4b39,0x482,0x4b53,0xe9,0x4b78,0xe9,0x4b9e,0x489,0x4c48,0x49f,0x4cc1,\n+0x4b2,0x4d73,0x4cd,0x4daa,0x4d4,0x4f8a,0x4e8,0x540a,0x510,0x2000,0x2001,0x5469,0x518,0x3000,0x3001,0x54f5,\n+0,0x4000,0x400e,0x5507,0,0x5510,0,0x552a,0,0x553b,0,0x554c,0,0x5562,0,0x556b,\n+0,0x5588,0,0x55a6,0,0x55c4,0,0x55e2,0,0x55f8,0,0x560c,0,0x5622,0,0x7000,\n+0x7001,0x563b,0,0x7d6,0x12,0,1,0x12,0x20,0x7f4,0x4a,0,1,6,7,8,\n+9,0xa,0xb,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,\n+0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,0x21,0x22,0x23,0x24,0x54,0x5b,0x67,0x6b,\n+0x76,0x7a,0x81,0x82,0x84,0x85,0xc8,0xca,0xd6,0xd8,0xda,0xdc,0xde,0xe0,0xe2,0xe4,\n+0xe6,0xe8,0xe9,0xea,0xf0,0x2e,0x40,0x4c,0x5e,0x68,0x79,0x84,0x91,0x9e,0xab,0xb8,\n+0xc5,0xd2,0xdf,0xec,0xf9,0x106,0x113,0x120,0x12d,0x13a,0x147,0x154,0x161,0x16e,0x17b,0x188,\n+0x195,0x1a2,0x1af,0x1bc,0x1c9,0x1d6,0x1e3,0x1f0,0x1fd,0x20c,0x21b,0x22a,0x239,0x248,0x257,0x266,\n+0x275,0x28f,0x2a3,0x2b7,0x2d2,0x2e1,0x2ea,0x2fa,0x302,0x30b,0x31a,0x323,0x333,0x344,0x355,0x995,\n+1,0,0x17,0x8d7,0x8e8,0x8f9,0x90d,0x924,0x93c,0x94e,0x963,0x97a,0x98f,0x99f,0x9b1,0x9ce,\n+0x9ea,0x9fc,0xa19,0xa35,0xa51,0xa66,0xa7b,0xa95,0xab0,0xacb,0xb37,1,0,0x135,0xaf3,0xb00,\n+0xb13,0xb3b,0xb59,0xb77,0xb8f,0xbba,0xbe4,0xbfc,0xc0f,0xc22,0xc31,0xc40,0xc4f,0xc5e,0xc75,0xc86,\n+0xc99,0xcac,0xcb9,0xcc6,0xcd5,0xce6,0xcfb,0xd0c,0xd17,0xd20,0xd31,0xd42,0xd55,0xd67,0xd7a,0xd8d,\n+0xdcc,0xdd9,0xde6,0xdf3,0xe08,0xe38,0xe52,0xe73,0xe9e,0xec1,0xf1f,0xf46,0xf61,0xf70,0xf97,0xfbf,\n+0xfe2,0x1005,0x102f,0x1048,0x1067,0x108a,0x10ae,0x10c1,0x10db,0x1105,0x111d,0x1145,0x116e,0x1181,0x1194,0x11a7,\n+0x11ce,0x11dd,0x11fd,0x122b,0x1249,0x1277,0x1293,0x12ae,0x12c7,0x12e0,0x1301,0x1331,0x1350,0x1372,0x13a6,0x13d3,\n+0x1418,0x1439,0x1463,0x1484,0x14ad,0x14c0,0x14f3,0x150a,0x1519,0x152a,0x1555,0x156c,0x159d,0x15cb,0x160e,0x1619,\n+0x1652,0x1663,0x1674,0x1681,0x1694,0x16ce,0x16f2,0x1716,0x1750,0x1788,0x17b3,0x17cb,0x17f7,0x1823,0x1830,0x183f,\n+0x185c,0x187e,0x18ac,0x18cc,0x18f3,0x191a,0x1939,0x194c,0x195d,0x196e,0x1993,0x19b8,0x19df,0x1a13,0x1a40,0x1a5e,\n+0x1a71,0x1a8a,0x1ac3,0x1ad2,0x1af2,0x1b14,0x1b36,0x1b4d,0x1b64,0x1b91,0x1baa,0x1bc3,0x1bf4,0x1c1e,0x1c39,0x1c4c,\n+0x1c6b,0x1c74,0x1c87,0x1ca5,0x1cc3,0x1cd6,0x1ced,0x1d02,0x1d37,0x1d5b,0x1d70,0x1d7f,0x1d92,0x1db6,0x1dbf,0x1de3,\n+0x1dfa,0x1e0d,0x1e1c,0x1e27,0x1e48,0x1e60,0x1e6f,0x1e7e,0x1e8d,0x1ea4,0x1eb9,0x1ece,0x1f07,0x1f1a,0x1f36,0x1f41,\n+0x1f4e,0x1f7c,0x1fa0,0x1fc3,0x1fd6,0x1ff8,0x200b,0x2026,0x2049,0x206c,0x2091,0x20a2,0x20d1,0x20fe,0x2115,0x2130,\n+0x213f,0x216a,0x21a2,0x21dc,0x220a,0x221b,0x2228,0x224c,0x225b,0x2277,0x2291,0x22ae,0x22e6,0x22fb,0x2328,0x2347,\n+0x2375,0x2395,0x23c9,0x23d8,0x2402,0x2425,0x2450,0x245b,0x246c,0x2487,0x24ab,0x24b8,0x24cd,0x24f4,0x251f,0x2556,\n+0x2569,0x257a,0x25aa,0x25bb,0x25ca,0x25df,0x25fd,0x2610,0x2623,0x263a,0x2657,0x2662,0x266b,0x268d,0x26a2,0x26c7,\n+0x26de,0x2707,0x2722,0x2737,0x2750,0x2771,0x27a6,0x27b7,0x27e8,0x280c,0x281d,0x2836,0x2841,0x286e,0x2890,0x28be,\n+0x28f1,0x2900,0x2911,0x292e,0x2970,0x2997,0x29a4,0x29b9,0x29dd,0x2a03,0x2a3c,0x2a4d,0x2a71,0x2a7c,0x2a89,0x2a98,\n+0x2abd,0x2aeb,0x2b07,0x2b24,0x2b31,0x2b42,0x2b60,0x2b83,0x2ba0,0x2bad,0x2bcd,0x2bea,0x2c0b,0x2c34,0x2c45,0x2c64,\n+0x2c7d,0x2c96,0x2ca7,0x2cf0,0x2d01,0x2d1a,0x2d49,0x2d76,0x2d9b,0x2ddd,0x2df9,0x2e08,0x2e1f,0x2e4d,0x2e66,0x2e8f,\n+0x2ea9,0x2ee4,0x2f02,0x1e85,1,0,0x12,0x2f47,0x2f57,0x2f6a,0x2f7a,0x2f8a,0x2f99,0x2fa9,0x2fbb,0x2fce,\n+0x2fe0,0x2ff0,0x3000,0x300f,0x301e,0x302e,0x303b,0x304a,0x305e,0x1f43,1,0,6,0x3083,0x308e,0x309b,\n+0x30a8,0x30b5,0x30c0,0x1f87,1,0,0x1e,0x30dd,0x30ec,0x3101,0x3116,0x312b,0x313f,0x3150,0x3164,0x3177,\n+0x3188,0x31a1,0x31b3,0x31c4,0x31d8,0x31eb,0x3203,0x3215,0x3220,0x3230,0x323e,0x3253,0x3268,0x327e,0x3298,0x32ae,\n+0x32be,0x32d2,0x32e6,0x32f7,0x330f,0x21b2,1,0,0x66,0x3337,0x335a,0x3363,0x3370,0x337b,0x3384,0x338f,\n+0x3398,0x33b1,0x33b6,0x33bf,0x33dc,0x33e5,0x33f2,0x33fb,0x341f,0x3426,0x342f,0x3442,0x344d,0x3456,0x3461,0x347a,\n+0x3483,0x3492,0x349d,0x34a6,0x34b1,0x34ba,0x34c1,0x34ca,0x34d5,0x34de,0x34f7,0x3500,0x350d,0x3518,0x3529,0x3534,\n+0x3549,0x3560,0x3569,0x3572,0x358b,0x3596,0x359f,0x35a8,0x35bf,0x35dc,0x35e7,0x35f8,0x3603,0x360a,0x3617,0x3624,\n+0x3651,0x3666,0x366f,0x368a,0x36ad,0x36ce,0x36ef,0x3714,0x373b,0x375c,0x377f,0x37a0,0x37c7,0x37e8,0x380d,0x382c,\n+0x384b,0x386a,0x3887,0x38a8,0x38c9,0x38ec,0x3911,0x3930,0x394f,0x3970,0x3997,0x39bc,0x39db,0x39fc,0x3a1f,0x3a3a,\n+0x3a53,0x3a6e,0x3a87,0x3aa4,0x3abf,0x3adc,0x3afb,0x3b18,0x3b35,0x3b54,0x3b71,0x3b8c,0x3ba9,0x3bc6,0x3bf9,0x24f7,\n+1,0,6,0x3c31,0x3c40,0x3c50,0x3c60,0x3c70,0x3c81,0x2555,1,0,0x2b,0x3c9f,0x3cab,0x3cb9,\n+0x3cc8,0x3cd7,0x3ce7,0x3cf8,0x3d0c,0x3d21,0x3d37,0x3d4a,0x3d5e,0x3d6e,0x3d77,0x3d82,0x3d92,0x3dae,0x3dc0,0x3dce,\n+0x3ddd,0x3de9,0x3dfe,0x3e12,0x3e25,0x3e33,0x3e47,0x3e55,0x3e5f,0x3e71,0x3e7d,0x3e8b,0x3e9b,0x3ea2,0x3ea9,0x3eb0,\n+0x3eb7,0x3ebe,0x3ed4,0x3ef5,0x870,0x3f07,0x3f12,0x3f21,0x27ae,1,0,4,0x3f3b,0x3f46,0x3f52,0x3f5c,\n+0x27d4,1,0,0xc1,0x3f73,0x3f80,0x3f95,0x3fa2,0x3fb1,0x3fbf,0x3fce,0x3fdd,0x3fef,0x3ffe,0x400c,0x401d,\n+0x402c,0x403b,0x4048,0x4054,0x4063,0x4072,0x407c,0x4089,0x4096,0x40a5,0x40b3,0x40c2,0x40ce,0x40d8,0x40e4,0x40f4,\n+0x4104,0x4112,0x411e,0x412f,0x413b,0x4147,0x4155,0x4162,0x416e,0x417b,0xd0c,0x4188,0x4196,0x41b0,0x41b9,0x41c7,\n+0x41d5,0x41e1,0x41f0,0x41fe,0x420c,0x4218,0x4227,0x4235,0x4243,0x4250,0x425f,0x427a,0x4289,0x429a,0x42ab,0x42be,\n+0x42d0,0x42df,0x42f1,0x4300,0x430c,0x4317,0x1e1c,0x4324,0x432f,0x433a,0x4345,0x4350,0x436b,0x4376,0x4381,0x438c,\n+0x439f,0x43b3,0x43be,0x43cd,0x43dc,0x43e7,0x43f2,0x43ff,0x440e,0x441c,0x4427,0x4442,0x444c,0x445d,0x446e,0x447d,\n+0x448e,0x4499,0x44a4,0x44af,0x44ba,0x44c5,0x44d0,0x44db,0x44e5,0x44f0,0x4500,0x450b,0x4519,0x4526,0x4531,0x4540,\n+0x454d,0x455a,0x4569,0x4576,0x4587,0x4599,0x45a9,0x45b4,0x45c7,0x45de,0x45ec,0x45f9,0x4604,0x4611,0x4622,0x463e,\n+0x4654,0x465f,0x467c,0x468c,0x469b,0x46a6,0x46b1,0x1f36,0x46bd,0x46c8,0x46e0,0x46f0,0x46ff,0x470d,0x471b,0x4726,\n+0x4731,0x4745,0x475c,0x4774,0x4784,0x4794,0x47a4,0x47b6,0x47c1,0x47cc,0x47d6,0x47e2,0x47f0,0x4803,0x480f,0x481c,\n+0x4827,0x4843,0x4850,0x485e,0x4877,0x2836,0x4886,0x2657,0x4893,0x48a1,0x48b3,0x48c1,0x48cd,0x48dd,0x2a71,0x48eb,\n+0x48f7,0x4902,0x490d,0x4918,0x492c,0x493a,0x4951,0x495d,0x4971,0x497f,0x4991,0x49a7,0x49b5,0x49c7,0x49d5,0x49f2,\n+0x4a04,0x4a11,0x4a22,0x4a34,0x4a4e,0x31cc,1,0,6,0x4a75,0x4a88,0x4a98,0x4aa6,0x4ab7,0x4ac7,0x3228,\n+0x12,0,1,0x4af1,0x4af7,0x3235,0x12,0,1,0x4af1,0x4af7,0x3242,1,0,3,0x4af1,\n+0x4af7,0x4b30,0x3258,1,0,3,0x4af1,0x4af7,0x4b30,0x326e,1,0,0x12,0x4bba,0x4bc4,0x4bd0,\n+0x4bd7,0x4be2,0x4be7,0x4bee,0x4bf5,0x4bfe,0x4c03,0x4c08,0x4c18,0x870,0x3f07,0x4c24,0x3f12,0x4c34,0x3f21,0x3317,\n+1,0,0xf,0x4bba,0x4c5b,0x4c65,0x4c6f,0x4c7a,0x3ddd,0x4c84,0x4c90,0x4c98,0x4c9f,0x4ca9,0x4bd0,0x4bd7,\n+0x4be7,0x4cb3,0x339e,1,0,0x17,0x4bba,0x4cd0,0x4c6f,0x4cdc,0x4ce9,0x4cf7,0x3ddd,0x4d02,0x4bd0,0x4d13,\n+0x4be7,0x4d22,0x4d30,0x870,0x3ef5,0x4d3c,0x4d4d,0x3f07,0x4c24,0x3f12,0x4c34,0x3f21,0x4d5e,0x34bb,1,0,\n+3,0x4d91,0x4d99,0x4da1,0x34d4,1,0,0x10,0x4dca,0x4dd1,0x4de0,0x4e01,0x4e24,0x4e2f,0x4e4e,0x4e65,\n+0x4e72,0x4e7b,0x4e9a,0x4ecd,0x4ee8,0x4f17,0x4f34,0x4f59,0x356d,1,0,0x24,0x4fa8,0x4fb5,0x4fc8,0x4fd5,\n+0x5002,0x5027,0x503c,0x505b,0x507c,0x50a9,0x50e2,0x5105,0x5128,0x5155,0x518a,0x51b1,0x51da,0x5211,0x5240,0x5261,\n+0x5286,0x5295,0x52b8,0x52cf,0x52dc,0x52eb,0x5308,0x5321,0x5344,0x5369,0x5382,0x5397,0x53a6,0x53b7,0x53c4,0x53e5,\n+0x373d,1,0,4,0x5423,0x542e,0x5446,0x545e,0x3779,0x36,1,2,4,8,0xe,0x10,\n+0x20,0x3e,0x40,0x80,0x100,0x1c0,0x200,0x400,0x800,0xe00,0x1000,0x2000,0x4000,0x7000,0x8000,0x10000,\n+0x20000,0x40000,0x78001,0x80000,0x100000,0x200000,0x400000,0x800000,0x1000000,0x2000000,0x4000000,0x8000000,0xf000000,0x10000000,0x20000000,0x30f80000,\n+0x30dd,0x30ec,0x3101,0x3116,0x5497,0x312b,0x313f,0x548d,0x3150,0x3164,0x3177,0x54a8,0x3188,0x31a1,0x31b3,0x54bf,\n+0x31c4,0x31d8,0x31eb,0x54e8,0x3203,0x3215,0x3220,0x3230,0x5484,0x323e,0x3253,0x3268,0x327e,0x3298,0x32ae,0x32be,\n+0x32d2,0x32e6,0x54de,0x32f7,0x330f,0x54c9\n@@ -107,1 +108,1 @@\n-const uint8_t PropNameData::bytesTries[14774]={\n+const uint8_t PropNameData::bytesTries[14992]={\n@@ -235,1 +236,1 @@\n-0x72,0x75,0x65,0x23,0xa,0x6b,0x5b,0x6f,0x23,0x6f,0x3c,0x72,0x4c,0x76,1,0x69,\n+0x72,0x75,0x65,0x23,0xb,0x6b,0x5b,0x6f,0x23,0x6f,0x3c,0x72,0x4c,0x76,1,0x69,\n@@ -241,10 +242,5 @@\n-0xa3,0xe0,0x61,0x5c,0x62,0xa2,0x77,0x63,0xa2,0x96,0x64,0xa4,0xa,0x69,1,0x6f,\n-0x26,0x73,0xa3,0xf0,0x1a,0x74,0x61,0x73,0x75,0x62,0x73,0x63,0x72,0x69,0x70,0x74,\n-0xa3,0xf0,0xa2,0xe6,3,0x62,0xa0,0x6c,0xa3,0xe4,0x72,0xa3,0xe8,0x74,2,0x61,\n-0x74,0x62,0x7c,0x74,0x14,0x61,0x63,0x68,0x65,0x64,1,0x61,0x3e,0x62,0x13,0x65,\n-0x6c,0x6f,0x77,0xa2,0xca,0x13,0x6c,0x65,0x66,0x74,0xa3,0xc8,0x13,0x62,0x6f,0x76,\n-0x65,0xa2,0xd6,0x14,0x72,0x69,0x67,0x68,0x74,0xa3,0xd8,0xa2,0xd6,0x10,0x72,0xa3,\n-0xd8,0xa2,0xca,0x10,0x6c,0xa3,0xc8,0x12,0x6f,0x76,0x65,0xa2,0xe6,1,0x6c,0x30,\n-0x72,0x13,0x69,0x67,0x68,0x74,0xa3,0xe8,0x12,0x65,0x66,0x74,0xa3,0xe4,0xa2,0xdc,\n-2,0x65,0x2c,0x6c,0xa3,0xda,0x72,0xa3,0xde,0x12,0x6c,0x6f,0x77,0xa2,0xdc,1,\n-0x6c,0x30,0x72,0x13,0x69,0x67,0x68,0x74,0xa3,0xde,0x12,0x65,0x66,0x74,0xa3,0xda,\n+0xa3,0xe0,0x64,0x45,0x64,0x4e,0x68,0x88,0x69,1,0x6f,0x26,0x73,0xa3,0xf0,0x1a,\n+0x74,0x61,0x73,0x75,0x62,0x73,0x63,0x72,0x69,0x70,0x74,0xa3,0xf0,2,0x61,0xa3,\n+0xea,0x62,0xa3,0xe9,0x6f,0x13,0x75,0x62,0x6c,0x65,1,0x61,0x30,0x62,0x13,0x65,\n+0x6c,0x6f,0x77,0xa3,0xe9,0x13,0x62,0x6f,0x76,0x65,0xa3,0xea,0x12,0x61,0x6e,0x72,\n+0x2c,0x15,0x65,0x61,0x64,0x69,0x6e,0x67,0x2d,0x61,0xa2,0x7b,0x62,0xa2,0xd4,0x63,\n@@ -258,774 +254,792 @@\n-0x5f,0x32,0x61,0x10,0x34,0xa3,0x54,2,0x61,0xa3,0xea,0x62,0xa3,0xe9,0x6f,0x13,\n-0x75,0x62,0x6c,0x65,1,0x61,0x30,0x62,0x13,0x65,0x6c,0x6f,0x77,0xa3,0xe9,0x13,\n-0x62,0x6f,0x76,0x65,0xa3,0xea,0xb,0x6e,0xc0,0xca,0x72,0x5f,0x72,0x46,0x73,0xa2,\n-0x48,0x77,1,0x68,0x24,0x73,0x33,0x17,0x69,0x74,0x65,0x73,0x70,0x61,0x63,0x65,\n-0x33,0x22,1,0x69,0x30,0x6c,2,0x65,0x3d,0x69,0x4b,0x6f,0x3f,0x18,0x67,0x68,\n-0x74,0x74,0x6f,0x6c,0x65,0x66,0x74,0x22,2,0x65,0x38,0x69,0x48,0x6f,0x16,0x76,\n-0x65,0x72,0x72,0x69,0x64,0x65,0x3f,0x17,0x6d,0x62,0x65,0x64,0x64,0x69,0x6e,0x67,\n-0x3d,0x15,0x73,0x6f,0x6c,0x61,0x74,0x65,0x4b,0x30,0x1e,0x65,0x67,0x6d,0x65,0x6e,\n-0x74,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0x31,0x6e,0xa2,0x41,0x6f,0xa2,\n-0x53,0x70,2,0x61,0x66,0x64,0x86,0x6f,0x1b,0x70,0x64,0x69,0x72,0x65,0x63,0x74,\n-0x69,0x6f,0x6e,0x61,0x6c,1,0x66,0x32,0x69,0x15,0x73,0x6f,0x6c,0x61,0x74,0x65,\n-0x4d,0x14,0x6f,0x72,0x6d,0x61,0x74,0x41,0x1f,0x72,0x61,0x67,0x72,0x61,0x70,0x68,\n-0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0x2f,1,0x66,0x41,0x69,0x4d,1,\n-0x6f,0x28,0x73,0x10,0x6d,0x43,0x1b,0x6e,0x73,0x70,0x61,0x63,0x69,0x6e,0x67,0x6d,\n-0x61,0x72,0x6b,0x43,1,0x6e,0x35,0x74,0x19,0x68,0x65,0x72,0x6e,0x65,0x75,0x74,\n-0x72,0x61,0x6c,0x35,0x65,0x88,0x65,0x98,0x66,0xa2,0x6a,0x6c,0x20,1,0x65,0x30,\n-0x72,2,0x65,0x37,0x69,0x49,0x6f,0x39,0x18,0x66,0x74,0x74,0x6f,0x72,0x69,0x67,\n-0x68,0x74,0x20,2,0x65,0x38,0x69,0x48,0x6f,0x16,0x76,0x65,0x72,0x72,0x69,0x64,\n-0x65,0x39,0x17,0x6d,0x62,0x65,0x64,0x64,0x69,0x6e,0x67,0x37,0x15,0x73,0x6f,0x6c,\n-0x61,0x74,0x65,0x49,3,0x6e,0x25,0x73,0x27,0x74,0x29,0x75,0x15,0x72,0x6f,0x70,\n-0x65,0x61,0x6e,2,0x6e,0x3c,0x73,0x46,0x74,0x18,0x65,0x72,0x6d,0x69,0x6e,0x61,\n-0x74,0x6f,0x72,0x29,0x14,0x75,0x6d,0x62,0x65,0x72,0x25,0x17,0x65,0x70,0x61,0x72,\n-0x61,0x74,0x6f,0x72,0x27,1,0x69,0x28,0x73,0x10,0x69,0x47,0x1f,0x72,0x73,0x74,\n-0x73,0x74,0x72,0x6f,0x6e,0x67,0x69,0x73,0x6f,0x6c,0x61,0x74,0x65,0x47,0x61,0x4e,\n-0x62,0x84,0x63,1,0x6f,0x24,0x73,0x2d,0x1c,0x6d,0x6d,0x6f,0x6e,0x73,0x65,0x70,\n-0x61,0x72,0x61,0x74,0x6f,0x72,0x2d,2,0x6c,0x3b,0x6e,0x2b,0x72,0x13,0x61,0x62,\n-0x69,0x63,1,0x6c,0x30,0x6e,0x14,0x75,0x6d,0x62,0x65,0x72,0x2b,0x14,0x65,0x74,\n-0x74,0x65,0x72,0x3b,0x2e,1,0x6e,0x45,0x6f,0x1c,0x75,0x6e,0x64,0x61,0x72,0x79,\n-0x6e,0x65,0x75,0x74,0x72,0x61,0x6c,0x45,0,0x16,0x6d,0xc8,0x94,0x74,0xc1,0xd2,\n-0x77,0x61,0x77,0x48,0x79,0x70,0x7a,0x1d,0x61,0x6e,0x61,0x62,0x61,0x7a,0x61,0x72,\n-0x73,0x71,0x75,0x61,0x72,0x65,0xa5,0x18,0x10,0x61,1,0x6e,0x36,0x72,0x16,0x61,\n-0x6e,0x67,0x63,0x69,0x74,0x69,0xa3,0xfc,0x12,0x63,0x68,0x6f,0xa5,0x2c,0x10,0x69,\n-2,0x6a,0x3c,0x72,0x68,0x73,0x17,0x79,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x73,0xa3,\n-0x48,0x12,0x69,0x6e,0x67,0xa2,0x74,0x1e,0x68,0x65,0x78,0x61,0x67,0x72,0x61,0x6d,\n-0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x74,0x16,0x61,0x64,0x69,0x63,0x61,0x6c,\n-0x73,0xa3,0x49,0x74,0xa2,0x59,0x75,0xa4,0x22,0x76,2,0x61,0x36,0x65,0x7a,0x73,\n-0xa2,0x6c,0x12,0x73,0x75,0x70,0xa3,0x7d,1,0x69,0xa3,0x9f,0x72,0x1e,0x69,0x61,\n-0x74,0x69,0x6f,0x6e,0x73,0x65,0x6c,0x65,0x63,0x74,0x6f,0x72,0x73,0xa2,0x6c,0x19,\n-0x73,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x7d,1,0x64,0x3c,0x72,\n-0x19,0x74,0x69,0x63,0x61,0x6c,0x66,0x6f,0x72,0x6d,0x73,0xa3,0x91,0x14,0x69,0x63,\n-0x65,0x78,0x74,0xa2,0xaf,0x16,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x73,0xa3,0xaf,4,\n-0x61,0x68,0x65,0xa2,0x9a,0x68,0xa2,0x9d,0x69,0xa2,0xa5,0x72,0x1c,0x61,0x6e,0x73,\n-0x70,0x6f,0x72,0x74,0x61,0x6e,0x64,0x6d,0x61,0x70,0xa2,0xcf,0x16,0x73,0x79,0x6d,\n-0x62,0x6f,0x6c,0x73,0xa3,0xcf,4,0x67,0x58,0x69,0x7e,0x6b,0xa2,0x58,0x6d,0xa2,\n-0x5a,0x6e,0x12,0x67,0x75,0x74,0xa4,0x10,0x19,0x63,0x6f,0x6d,0x70,0x6f,0x6e,0x65,\n-0x6e,0x74,0x73,0xa5,0x11,2,0x61,0x2a,0x62,0x32,0x73,0xa3,0x60,0x12,0x6c,0x6f,\n-0x67,0xa3,0x62,0x13,0x61,0x6e,0x77,0x61,0xa3,0x65,3,0x6c,0x52,0x74,0x56,0x76,\n-0x5e,0x78,0x16,0x75,0x61,0x6e,0x6a,0x69,0x6e,0x67,0xa2,0x7c,0x16,0x73,0x79,0x6d,\n-0x62,0x6f,0x6c,0x73,0xa3,0x7c,0x10,0x65,0xa3,0x70,0x12,0x68,0x61,0x6d,0xa3,0xae,\n-0x12,0x69,0x65,0x74,0xa3,0xb7,0x11,0x72,0x69,0xa3,0xdc,0x11,0x69,0x6c,0x48,0x12,\n-0x73,0x75,0x70,0xa4,0x2b,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0x2b,0x13,\n-0x6c,0x75,0x67,0x75,0x4b,0x10,0x61,1,0x61,0x24,0x69,0x53,0x11,0x6e,0x61,0x3d,\n-2,0x62,0x34,0x66,0x3c,0x72,0x13,0x68,0x75,0x74,0x61,0xa3,0xfb,0x13,0x65,0x74,\n-0x61,0x6e,0x57,0x14,0x69,0x6e,0x61,0x67,0x68,0xa3,0x90,2,0x63,0x82,0x67,0x92,\n-0x6e,0x1f,0x69,0x66,0x69,0x65,0x64,0x63,0x61,0x6e,0x61,0x64,0x69,0x61,0x6e,0x61,\n-0x62,0x6f,0x1f,0x72,0x69,0x67,0x69,0x6e,0x61,0x6c,0x73,0x79,0x6c,0x6c,0x61,0x62,\n-0x69,0x63,0x73,0x62,0x17,0x65,0x78,0x74,0x65,0x6e,0x64,0x65,0x64,0xa3,0xad,0x11,\n-0x61,0x73,0x62,0x12,0x65,0x78,0x74,0xa3,0xad,0x15,0x61,0x72,0x69,0x74,0x69,0x63,\n-0xa3,0x78,0x70,0xc3,0x33,0x70,0xa6,0x49,0x72,0xa8,5,0x73,7,0x6f,0xc1,0xa6,\n-0x6f,0xa2,0x51,0x70,0xa2,0x6d,0x75,0xa2,0x8c,0x79,2,0x6c,0x50,0x6d,0x62,0x72,\n-0x12,0x69,0x61,0x63,0x3a,0x12,0x73,0x75,0x70,0xa4,0x17,0x16,0x70,0x6c,0x65,0x6d,\n-0x65,0x6e,0x74,0xa5,0x17,0x17,0x6f,0x74,0x69,0x6e,0x61,0x67,0x72,0x69,0xa3,0x8f,\n-0x14,0x62,0x6f,0x6c,0x73,0x61,0x1f,0x6e,0x64,0x70,0x69,0x63,0x74,0x6f,0x67,0x72,\n-0x61,0x70,0x68,0x73,0x65,0x78,0x74,1,0x61,0xa5,0x2a,0x65,0x14,0x6e,0x64,0x65,\n-0x64,0x61,0xa5,0x2a,2,0x67,0x34,0x72,0x3e,0x79,0x13,0x6f,0x6d,0x62,0x6f,0xa5,\n-0x16,0x13,0x64,0x69,0x61,0x6e,0xa5,0x23,0x17,0x61,0x73,0x6f,0x6d,0x70,0x65,0x6e,\n-0x67,0xa3,0xda,1,0x61,0x32,0x65,0x14,0x63,0x69,0x61,0x6c,0x73,0xa3,0x56,0x12,\n-0x63,0x69,0x6e,0x1f,0x67,0x6d,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,0x6c,0x65,0x74,\n-0x74,0x65,0x72,0x73,0x2d,2,0x6e,0x48,0x70,0x76,0x74,0x1d,0x74,0x6f,0x6e,0x73,\n-0x69,0x67,0x6e,0x77,0x72,0x69,0x74,0x69,0x6e,0x67,0xa5,6,0x15,0x64,0x61,0x6e,\n-0x65,0x73,0x65,0xa2,0x9b,0x12,0x73,0x75,0x70,0xa2,0xdb,0x16,0x70,0x6c,0x65,0x6d,\n-0x65,0x6e,0x74,0xa3,0xdb,4,0x61,0xa2,0xa8,0x65,0x5c,0x6d,0x9e,0x70,0xa2,0x4b,\n-0x73,0x13,0x79,0x6d,0x62,0x6f,0x1f,0x6c,0x73,0x61,0x6e,0x64,0x70,0x69,0x63,0x74,\n-0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa5,5,0x10,0x72,1,0x61,0x4e,0x73,0x12,\n-0x63,0x72,0x69,0x1f,0x70,0x74,0x73,0x61,0x6e,0x64,0x73,0x75,0x62,0x73,0x63,0x72,\n-0x69,0x70,0x74,0x73,0x73,0x14,0x6e,0x64,0x73,0x75,0x62,0x73,0x1b,0x61,0x74,0x68,\n-0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x73,0xa3,0x6a,1,0x6c,0x40,0x75,1,\n-0x61,0x6e,0x6e,0x17,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xa3,0x8e,0x15,0x65,\n-0x6d,0x65,0x6e,0x74,0x61,1,0x6c,0x50,0x72,0x1e,0x79,0x70,0x72,0x69,0x76,0x61,\n-0x74,0x65,0x75,0x73,0x65,0x61,0x72,0x65,0x61,1,0x61,0xa3,0x6d,0x62,0xa3,0x6e,\n-3,0x61,0x5c,0x6d,0x78,0x70,0xa2,0x41,0x73,0x13,0x79,0x6d,0x62,0x6f,0x1f,0x6c,\n-0x73,0x61,0x6e,0x64,0x70,0x69,0x63,0x74,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa5,\n-5,0x14,0x72,0x72,0x6f,0x77,0x73,2,0x61,0xa3,0x67,0x62,0xa3,0x68,0x63,0xa3,\n-0xfa,0x13,0x61,0x74,0x68,0x65,0x1f,0x6d,0x61,0x74,0x69,0x63,0x61,0x6c,0x6f,0x70,\n-0x65,0x72,0x61,0x74,0x6f,0x72,0x73,0xa3,0x6a,0x19,0x75,0x6e,0x63,0x74,0x75,0x61,\n-0x74,0x69,0x6f,0x6e,0xa3,0x8e,0x61,0x88,0x68,0xa2,0x48,0x69,0xa2,0x71,0x6d,0x12,\n-0x61,0x6c,0x6c,1,0x66,0x46,0x6b,0x15,0x61,0x6e,0x61,0x65,0x78,0x74,0xa4,0x29,\n-0x15,0x65,0x6e,0x73,0x69,0x6f,0x6e,0xa5,0x29,0x12,0x6f,0x72,0x6d,1,0x73,0xa3,\n-0x54,0x76,0x16,0x61,0x72,0x69,0x61,0x6e,0x74,0x73,0xa3,0x54,1,0x6d,0x36,0x75,\n-0x16,0x72,0x61,0x73,0x68,0x74,0x72,0x61,0xa3,0xa1,0x15,0x61,0x72,0x69,0x74,0x61,\n-0x6e,0xa3,0xac,1,0x61,0x52,0x6f,0x13,0x72,0x74,0x68,0x61,0x1f,0x6e,0x64,0x66,\n-0x6f,0x72,0x6d,0x61,0x74,0x63,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x73,0xa3,0xf7,1,\n-0x72,0x2e,0x76,0x12,0x69,0x61,0x6e,0xa3,0x79,0x12,0x61,0x64,0x61,0xa3,0xd9,1,\n-0x64,0x50,0x6e,0x13,0x68,0x61,0x6c,0x61,0x50,0x1d,0x61,0x72,0x63,0x68,0x61,0x69,\n-0x63,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa3,0xf9,0x13,0x64,0x68,0x61,0x6d,0xa3,\n-0xf8,5,0x72,0x35,0x72,0x44,0x73,0x64,0x75,1,0x61,0xa3,0x4e,0x6e,0x17,0x63,\n-0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x71,0x17,0x69,0x76,0x61,0x74,0x65,0x75,0x73,\n-0x65,0xa2,0x4e,0x13,0x61,0x72,0x65,0x61,0xa3,0x4e,0x1b,0x61,0x6c,0x74,0x65,0x72,\n-0x70,0x61,0x68,0x6c,0x61,0x76,0x69,0xa3,0xf6,0x61,0x40,0x68,0x82,0x6c,0x19,0x61,\n-0x79,0x69,0x6e,0x67,0x63,0x61,0x72,0x64,0x73,0xa3,0xcc,2,0x68,0x38,0x6c,0x4a,\n-0x75,0x15,0x63,0x69,0x6e,0x68,0x61,0x75,0xa3,0xf5,0x17,0x61,0x77,0x68,0x68,0x6d,\n-0x6f,0x6e,0x67,0xa3,0xf3,0x15,0x6d,0x79,0x72,0x65,0x6e,0x65,0xa3,0xf4,1,0x61,\n-0x8e,0x6f,1,0x65,0x74,0x6e,0x16,0x65,0x74,0x69,0x63,0x65,0x78,0x74,0xa2,0x72,\n-1,0x65,0x2c,0x73,0x11,0x75,0x70,0xa3,0x8d,0x15,0x6e,0x73,0x69,0x6f,0x6e,0x73,\n-0xa2,0x72,0x19,0x73,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x8d,0x15,\n-0x6e,0x69,0x63,0x69,0x61,0x6e,0xa3,0x97,1,0x67,0x3e,0x69,0x13,0x73,0x74,0x6f,\n-0x73,0xa2,0xa6,0x13,0x64,0x69,0x73,0x63,0xa3,0xa6,0x12,0x73,0x70,0x61,0xa3,0x96,\n-1,0x65,0x5c,0x75,1,0x6d,0x2a,0x6e,0x11,0x69,0x63,0x67,0x10,0x69,0xa2,0xc0,\n-0x1d,0x6e,0x75,0x6d,0x65,0x72,0x61,0x6c,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,\n-0xc0,0x13,0x6a,0x61,0x6e,0x67,0xa3,0xa3,0x6d,0xa2,0xe6,0x6e,0xa8,0x19,0x6f,6,\n-0x70,0x63,0x70,0x56,0x72,0x8a,0x73,0xa2,0x4c,0x74,0x10,0x74,0x1f,0x6f,0x6d,0x61,\n-0x6e,0x73,0x69,0x79,0x61,0x71,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa5,0x28,0x18,\n-0x74,0x69,0x63,0x61,0x6c,0x63,0x68,0x61,0x72,0x1f,0x61,0x63,0x74,0x65,0x72,0x72,\n-0x65,0x63,0x6f,0x67,0x6e,0x69,0x74,0x69,0x6f,0x6e,0x85,1,0x69,0x46,0x6e,0x1e,\n-0x61,0x6d,0x65,0x6e,0x74,0x61,0x6c,0x64,0x69,0x6e,0x67,0x62,0x61,0x74,0x73,0xa3,\n-0xf2,0x11,0x79,0x61,0x47,1,0x61,0x30,0x6d,0x13,0x61,0x6e,0x79,0x61,0xa3,0x7a,\n-0x11,0x67,0x65,0xa5,0xf,0x63,0xa2,0x71,0x67,0xa2,0x71,0x6c,1,0x63,0xa2,0x62,\n-0x64,5,0x70,0x38,0x70,0x36,0x73,0x56,0x74,0x14,0x75,0x72,0x6b,0x69,0x63,0xa3,\n-0xbf,0x11,0x65,0x72,1,0x6d,0x2e,0x73,0x12,0x69,0x61,0x6e,0xa3,0x8c,0x11,0x69,\n-0x63,0xa3,0xf1,0x10,0x6f,1,0x67,0x3a,0x75,0x18,0x74,0x68,0x61,0x72,0x61,0x62,\n-0x69,0x61,0x6e,0xa3,0xbb,0x13,0x64,0x69,0x61,0x6e,0xa5,0x22,0x68,0x42,0x69,0x54,\n-0x6e,0x1a,0x6f,0x72,0x74,0x68,0x61,0x72,0x61,0x62,0x69,0x61,0x6e,0xa3,0xf0,0x17,\n-0x75,0x6e,0x67,0x61,0x72,0x69,0x61,0x6e,0xa5,4,0x14,0x74,0x61,0x6c,0x69,0x63,\n-0xa3,0x58,0x13,0x68,0x69,0x6b,0x69,0xa3,0x9d,0x10,0x72,0x85,0x12,0x68,0x61,0x6d,\n-0x65,6,0x6f,0x86,0x6f,0x6c,0x72,0xa2,0x61,0x75,0xa2,0x62,0x79,0x14,0x61,0x6e,\n-0x6d,0x61,0x72,0x58,0x12,0x65,0x78,0x74,2,0x61,0xa3,0xb6,0x62,0xa3,0xee,0x65,\n-0x13,0x6e,0x64,0x65,0x64,1,0x61,0xa3,0xb6,0x62,0xa3,0xee,1,0x64,0x52,0x6e,\n-0x15,0x67,0x6f,0x6c,0x69,0x61,0x6e,0x6a,0x12,0x73,0x75,0x70,0xa4,0xd,0x16,0x70,\n-0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0xd,0x10,0x69,0xa2,0xec,0x13,0x66,0x69,0x65,\n-0x72,1,0x6c,0x3c,0x74,0x19,0x6f,0x6e,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x73,\n-0xa3,0x8a,0x15,0x65,0x74,0x74,0x65,0x72,0x73,0x2d,0x10,0x6f,0xa3,0xed,1,0x6c,\n-0x44,0x73,0x11,0x69,0x63,0xa2,0x5c,0x18,0x61,0x6c,0x73,0x79,0x6d,0x62,0x6f,0x6c,\n-0x73,0xa3,0x5c,0x13,0x74,0x61,0x6e,0x69,0xa5,3,0x61,0xa2,0x9b,0x65,0xa4,0x4c,\n-0x69,1,0x61,0xa2,0x8f,0x73,0x10,0x63,5,0x70,0x18,0x70,0xa2,0x71,0x73,0x36,\n-0x74,0x17,0x65,0x63,0x68,0x6e,0x69,0x63,0x61,0x6c,0x81,0x15,0x79,0x6d,0x62,0x6f,\n-0x6c,0x73,0x8f,0x61,0xa2,0x66,0x65,0x46,0x6d,0x19,0x61,0x74,0x68,0x73,0x79,0x6d,\n-0x62,0x6f,0x6c,0x73,1,0x61,0xa3,0x66,0x62,0xa3,0x69,0x17,0x6c,0x6c,0x61,0x6e,\n-0x65,0x6f,0x75,0x73,2,0x6d,0x3a,0x73,0x6c,0x74,0x17,0x65,0x63,0x68,0x6e,0x69,\n-0x63,0x61,0x6c,0x81,0x11,0x61,0x74,0x1f,0x68,0x65,0x6d,0x61,0x74,0x69,0x63,0x61,\n-0x6c,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,1,0x61,0xa3,0x66,0x62,0xa3,0x69,0x15,\n-0x79,0x6d,0x62,0x6f,0x6c,0x73,0x8e,0x12,0x61,0x6e,0x64,1,0x61,0x3c,0x70,0x19,\n-0x69,0x63,0x74,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa3,0xcd,0x14,0x72,0x72,0x6f,\n-0x77,0x73,0xa3,0x73,0x10,0x6f,0xa3,0xd8,7,0x72,0x6f,0x72,0x44,0x73,0x4e,0x74,\n-0x62,0x79,0x19,0x61,0x6e,0x6e,0x75,0x6d,0x65,0x72,0x61,0x6c,0x73,0xa5,0x20,0x13,\n-0x63,0x68,0x65,0x6e,0xa5,0xc,0x18,0x61,0x72,0x61,0x6d,0x67,0x6f,0x6e,0x64,0x69,\n-0xa5,0x14,0x10,0x68,2,0x61,0x3a,0x65,0x4a,0x6f,0x17,0x70,0x65,0x72,0x61,0x74,\n-0x6f,0x72,0x73,0x7f,0x16,0x6c,0x70,0x68,0x61,0x6e,0x75,0x6d,0xa3,0x5d,0x16,0x6d,\n-0x61,0x74,0x69,0x63,0x61,0x6c,1,0x61,0x36,0x6f,0x17,0x70,0x65,0x72,0x61,0x74,\n-0x6f,0x72,0x73,0x7f,0x11,0x6c,0x70,0x1f,0x68,0x61,0x6e,0x75,0x6d,0x65,0x72,0x69,\n-0x63,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x5d,0x68,0x50,0x6b,0x7e,0x6c,0x88,\n-0x6e,1,0x64,0x34,0x69,0x15,0x63,0x68,0x61,0x65,0x61,0x6e,0xa3,0xea,0x12,0x61,\n-0x69,0x63,0xa3,0xc6,1,0x61,0x3e,0x6a,0x12,0x6f,0x6e,0x67,0xa2,0xaa,0x14,0x74,\n-0x69,0x6c,0x65,0x73,0xa3,0xaa,0x13,0x6a,0x61,0x6e,0x69,0xa3,0xe9,0x13,0x61,0x73,\n-0x61,0x72,0xa5,0x1f,0x15,0x61,0x79,0x61,0x6c,0x61,0x6d,0x4f,3,0x64,0x6c,0x65,\n-0x7e,0x6e,0xa2,0x47,0x72,0x14,0x6f,0x69,0x74,0x69,0x63,1,0x63,0x3c,0x68,0x19,\n-0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0xd7,0x15,0x75,0x72,0x73,\n-0x69,0x76,0x65,0xa3,0xd6,0x17,0x65,0x66,0x61,0x69,0x64,0x72,0x69,0x6e,0xa5,0x21,\n-0x17,0x74,0x65,0x69,0x6d,0x61,0x79,0x65,0x6b,0xa2,0xb8,0x12,0x65,0x78,0x74,0xa2,\n-0xd5,0x16,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x73,0xa3,0xd5,0x18,0x64,0x65,0x6b,0x69,\n-0x6b,0x61,0x6b,0x75,0x69,0xa3,0xeb,6,0x6b,0x3b,0x6b,0x56,0x6f,0x5a,0x75,0x64,\n-0x79,0x11,0x69,0x61,0x1f,0x6b,0x65,0x6e,0x67,0x70,0x75,0x61,0x63,0x68,0x75,0x65,\n-0x68,0x6d,0x6f,0x6e,0x67,0xa5,0x27,0x10,0x6f,0xa3,0x92,0x14,0x62,0x6c,0x6f,0x63,\n-0x6b,0x21,1,0x6d,0x2c,0x73,0x11,0x68,0x75,0xa5,0x15,0x17,0x62,0x65,0x72,0x66,\n-0x6f,0x72,0x6d,0x73,0x7b,0x61,0x44,0x62,0x21,0x65,0x10,0x77,1,0x61,0xa5,0xe,\n-0x74,0x14,0x61,0x69,0x6c,0x75,0x65,0xa3,0x8b,1,0x62,0x38,0x6e,0x17,0x64,0x69,\n-0x6e,0x61,0x67,0x61,0x72,0x69,0xa5,0x26,0x15,0x61,0x74,0x61,0x65,0x61,0x6e,0xa3,\n-0xef,0x67,0xc4,0xe,0x6a,0xc1,0x95,0x6a,0xa2,0xc5,0x6b,0xa2,0xde,0x6c,4,0x61,\n-0x54,0x65,0xa2,0x61,0x69,0xa2,0x78,0x6f,0xa2,0xa7,0x79,1,0x63,0x2e,0x64,0x12,\n-0x69,0x61,0x6e,0xa3,0xa9,0x12,0x69,0x61,0x6e,0xa3,0xa7,1,0x6f,0x55,0x74,0x11,\n-0x69,0x6e,1,0x31,0x82,0x65,0x11,0x78,0x74,4,0x61,0x5c,0x62,0x29,0x63,0xa3,\n-0x94,0x64,0xa3,0x95,0x65,0xa2,0xe7,0x13,0x6e,0x64,0x65,0x64,4,0x61,0x36,0x62,\n-0x29,0x63,0xa3,0x94,0x64,0xa3,0x95,0x65,0xa3,0xe7,0x26,0x18,0x64,0x64,0x69,0x74,\n-0x69,0x6f,0x6e,0x61,0x6c,0x6d,0x24,0x12,0x73,0x75,0x70,0x24,0x16,0x70,0x6c,0x65,\n-0x6d,0x65,0x6e,0x74,0x25,1,0x70,0x42,0x74,0x1d,0x74,0x65,0x72,0x6c,0x69,0x6b,\n-0x65,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x79,0x12,0x63,0x68,0x61,0xa3,0x9c,2,\n-0x6d,0x2e,0x6e,0x34,0x73,0x10,0x75,0xa3,0xb0,0x11,0x62,0x75,0xa3,0x6f,0x12,0x65,\n-0x61,0x72,1,0x61,0xa3,0xe8,0x62,1,0x69,0x38,0x73,0x17,0x79,0x6c,0x6c,0x61,\n-0x62,0x61,0x72,0x79,0xa3,0x75,0x17,0x64,0x65,0x6f,0x67,0x72,0x61,0x6d,0x73,0xa3,\n-0x76,0x1a,0x77,0x73,0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x73,0xa3,0x4d,0x10,\n-0x61,1,0x6d,0x32,0x76,0x14,0x61,0x6e,0x65,0x73,0x65,0xa3,0xb5,0x10,0x6f,0x5c,\n-0x12,0x65,0x78,0x74,1,0x61,0xa3,0xb4,0x62,0xa3,0xb9,1,0x61,0x80,0x68,3,\n-0x61,0x3c,0x6d,0x4c,0x6f,0x64,0x75,0x15,0x64,0x61,0x77,0x61,0x64,0x69,0xa3,0xe6,\n-0x16,0x72,0x6f,0x73,0x68,0x74,0x68,0x69,0xa3,0x89,0x11,0x65,0x72,0x68,0x16,0x73,\n-0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x71,0x12,0x6a,0x6b,0x69,0xa3,0xe5,3,0x69,\n-0x3a,0x6e,0x42,0x74,0xa2,0x51,0x79,0x13,0x61,0x68,0x6c,0x69,0xa3,0xa2,0x12,0x74,\n-0x68,0x69,0xa3,0xc1,3,0x61,0x34,0x62,0x76,0x67,0x7c,0x6e,0x12,0x61,0x64,0x61,\n-0x4d,1,0x65,0x40,0x73,0x11,0x75,0x70,0xa2,0xcb,0x16,0x70,0x6c,0x65,0x6d,0x65,\n-0x6e,0x74,0xa3,0xcb,0x11,0x78,0x74,1,0x61,0xa5,0x13,0x65,0x14,0x6e,0x64,0x65,\n-0x64,0x61,0xa5,0x13,0x11,0x75,0x6e,0xa3,0x42,0x11,0x78,0x69,0x96,0x17,0x72,0x61,\n-0x64,0x69,0x63,0x61,0x6c,0x73,0x97,0x14,0x61,0x6b,0x61,0x6e,0x61,0x9e,1,0x65,\n-0x4c,0x70,0x10,0x68,0x1f,0x6f,0x6e,0x65,0x74,0x69,0x63,0x65,0x78,0x74,0x65,0x6e,\n-0x73,0x69,0x6f,0x6e,0x73,0xa3,0x6b,0x11,0x78,0x74,0xa3,0x6b,0x67,0xa2,0xb5,0x68,\n-0xa4,0x84,0x69,3,0x64,0x4c,0x6d,0xa2,0x55,0x6e,0xa2,0x62,0x70,0x13,0x61,0x65,\n-0x78,0x74,0x2a,0x16,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x73,0x2b,1,0x63,0x99,0x65,\n-0x17,0x6f,0x67,0x72,0x61,0x70,0x68,0x69,0x63,1,0x64,0x56,0x73,0x15,0x79,0x6d,\n-0x62,0x6f,0x6c,0x73,0xa4,0xb,0x1d,0x61,0x6e,0x64,0x70,0x75,0x6e,0x63,0x74,0x75,\n-0x61,0x74,0x69,0x6f,0x6e,0xa5,0xb,0x13,0x65,0x73,0x63,0x72,0x1f,0x69,0x70,0x74,\n-0x69,0x6f,0x6e,0x63,0x68,0x61,0x72,0x61,0x63,0x74,0x65,0x72,0x73,0x99,0x1c,0x70,\n-0x65,0x72,0x69,0x61,0x6c,0x61,0x72,0x61,0x6d,0x61,0x69,0x63,0xa3,0xba,1,0x64,\n-0x62,0x73,0x1b,0x63,0x72,0x69,0x70,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x70,0x61,1,\n-0x68,0x32,0x72,0x14,0x74,0x68,0x69,0x61,0x6e,0xa3,0xbd,0x13,0x6c,0x61,0x76,0x69,\n-0xa3,0xbe,0x11,0x69,0x63,1,0x6e,0x3e,0x73,0x1a,0x69,0x79,0x61,0x71,0x6e,0x75,\n-0x6d,0x62,0x65,0x72,0x73,0xa5,0x1e,0x19,0x75,0x6d,0x62,0x65,0x72,0x66,0x6f,0x72,\n-0x6d,0x73,0xa3,0xb2,4,0x65,0x74,0x6c,0xa2,0x82,0x6f,0xa2,0x9a,0x72,0xa2,0x9e,\n-0x75,2,0x6a,0x34,0x6e,0x3e,0x72,0x14,0x6d,0x75,0x6b,0x68,0x69,0x43,0x14,0x61,\n-0x72,0x61,0x74,0x69,0x45,0x18,0x6a,0x61,0x6c,0x61,0x67,0x6f,0x6e,0x64,0x69,0xa5,\n-0x1c,1,0x6e,0xa2,0x46,0x6f,1,0x6d,0x6e,0x72,0x13,0x67,0x69,0x61,0x6e,0x5a,\n-1,0x65,0x40,0x73,0x11,0x75,0x70,0xa2,0x87,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,\n-0x74,0xa3,0x87,0x11,0x78,0x74,0xa4,0x1b,0x14,0x65,0x6e,0x64,0x65,0x64,0xa5,0x1b,\n-0x1a,0x65,0x74,0x72,0x69,0x63,0x73,0x68,0x61,0x70,0x65,0x73,0x8c,0x12,0x65,0x78,\n-0x74,0xa2,0xe3,0x14,0x65,0x6e,0x64,0x65,0x64,0xa3,0xe3,0x1e,0x65,0x72,0x61,0x6c,\n-0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x71,0x17,0x61,0x67,0x6f,\n-0x6c,0x69,0x74,0x69,0x63,0xa2,0x88,0x12,0x73,0x75,0x70,0xa4,0xa,0x16,0x70,0x6c,\n-0x65,0x6d,0x65,0x6e,0x74,0xa5,0xa,0x13,0x74,0x68,0x69,0x63,0xa3,0x59,1,0x61,\n-0x5c,0x65,0x11,0x65,0x6b,0x30,1,0x61,0x38,0x65,0x11,0x78,0x74,0x6e,0x14,0x65,\n-0x6e,0x64,0x65,0x64,0x6f,0x17,0x6e,0x64,0x63,0x6f,0x70,0x74,0x69,0x63,0x31,0x13,\n-0x6e,0x74,0x68,0x61,0xa3,0xe4,2,0x61,0xa2,0x48,0x65,0xa2,0xdf,0x69,1,0x67,\n-0x30,0x72,0x14,0x61,0x67,0x61,0x6e,0x61,0x9d,0x10,0x68,1,0x70,0x3a,0x73,0x18,\n-0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x73,0xa3,0x4b,1,0x72,0x3c,0x75,0x19,\n-0x73,0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x73,0xa3,0x4c,0x11,0x69,0x76,0x1f,\n-0x61,0x74,0x65,0x75,0x73,0x65,0x73,0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x73,\n-0xa3,0x4c,2,0x6c,0x32,0x6e,0x9a,0x74,0x12,0x72,0x61,0x6e,0xa5,2,0x10,0x66,\n-2,0x61,0x58,0x6d,0x70,0x77,0x14,0x69,0x64,0x74,0x68,0x61,0x1f,0x6e,0x64,0x66,\n-0x75,0x6c,0x6c,0x77,0x69,0x64,0x74,0x68,0x66,0x6f,0x72,0x6d,0x73,0xa3,0x57,0x1a,\n-0x6e,0x64,0x66,0x75,0x6c,0x6c,0x66,0x6f,0x72,0x6d,0x73,0xa3,0x57,0x13,0x61,0x72,\n-0x6b,0x73,0xa3,0x52,2,0x67,0x34,0x69,0xa2,0x45,0x75,0x12,0x6e,0x6f,0x6f,0xa3,\n-0x63,0x11,0x75,0x6c,0xa2,0x4a,2,0x63,0x3c,0x6a,0x5e,0x73,0x17,0x79,0x6c,0x6c,\n-0x61,0x62,0x6c,0x65,0x73,0xa3,0x4a,0x1f,0x6f,0x6d,0x70,0x61,0x74,0x69,0x62,0x69,\n-0x6c,0x69,0x74,0x79,0x6a,0x61,0x6d,0x6f,0xa3,0x41,0x12,0x61,0x6d,0x6f,0x5c,0x17,\n-0x65,0x78,0x74,0x65,0x6e,0x64,0x65,0x64,1,0x61,0xa3,0xb4,0x62,0xa3,0xb9,0x19,\n-0x66,0x69,0x72,0x6f,0x68,0x69,0x6e,0x67,0x79,0x61,0xa5,0x1d,0x13,0x62,0x72,0x65,\n-0x77,0x37,0x61,0xa4,5,0x62,0xa6,0x45,0x63,0xa8,0x1a,0x64,0xac,0xa6,0x65,5,\n-0x6d,0xa2,0x6d,0x86,0x6e,0x96,0x74,0x15,0x68,0x69,0x6f,0x70,0x69,0x63,0x5e,1,\n-0x65,0x40,0x73,0x11,0x75,0x70,0xa2,0x86,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,\n-0xa3,0x86,0x11,0x78,0x74,0xa2,0x85,1,0x61,0xa3,0xc8,0x65,0x13,0x6e,0x64,0x65,\n-0x64,0xa2,0x85,0x10,0x61,0xa3,0xc8,0x16,0x6f,0x74,0x69,0x63,0x6f,0x6e,0x73,0xa3,\n-0xce,0x15,0x63,0x6c,0x6f,0x73,0x65,0x64,2,0x61,0x5a,0x63,0x9e,0x69,0x1c,0x64,\n-0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x69,0x63,0x73,0x75,0x70,0xa2,0xc4,0x16,0x70,\n-0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xc4,0x16,0x6c,0x70,0x68,0x61,0x6e,0x75,0x6d,\n-0x86,1,0x65,0x2c,0x73,0x11,0x75,0x70,0xa3,0xc3,0x13,0x72,0x69,0x63,0x73,0x86,\n-0x18,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xc3,0x11,0x6a,0x6b,0xa2,\n-0x44,0x1f,0x6c,0x65,0x74,0x74,0x65,0x72,0x73,0x61,0x6e,0x64,0x6d,0x6f,0x6e,0x74,\n-0x68,0x73,0xa3,0x44,0x61,0x4a,0x67,0x76,0x6c,1,0x62,0x30,0x79,0x13,0x6d,0x61,\n-0x69,0x63,0xa5,0x25,0x13,0x61,0x73,0x61,0x6e,0xa3,0xe2,0x13,0x72,0x6c,0x79,0x64,\n-0x1f,0x79,0x6e,0x61,0x73,0x74,0x69,0x63,0x63,0x75,0x6e,0x65,0x69,0x66,0x6f,0x72,\n-0x6d,0xa5,1,0x1f,0x79,0x70,0x74,0x69,0x61,0x6e,0x68,0x69,0x65,0x72,0x6f,0x67,\n-0x6c,0x79,0x70,0x68,1,0x66,0x26,0x73,0xa3,0xc2,0x1c,0x6f,0x72,0x6d,0x61,0x74,\n-0x63,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x73,0xa5,0x24,7,0x6e,0xc0,0xe5,0x6e,0x3e,\n-0x72,0xa2,0x5d,0x73,0xa2,0xd8,0x76,0x14,0x65,0x73,0x74,0x61,0x6e,0xa3,0xbc,1,\n-0x61,0x92,0x63,0x13,0x69,0x65,0x6e,0x74,1,0x67,0x34,0x73,0x15,0x79,0x6d,0x62,\n-0x6f,0x6c,0x73,0xa3,0xa5,0x13,0x72,0x65,0x65,0x6b,1,0x6d,0x34,0x6e,0x15,0x75,\n-0x6d,0x62,0x65,0x72,0x73,0xa3,0x7f,0x13,0x75,0x73,0x69,0x63,0xa2,0x7e,0x19,0x61,\n-0x6c,0x6e,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0xa3,0x7e,0x10,0x74,0x1f,0x6f,0x6c,\n-0x69,0x61,0x6e,0x68,0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0xfe,\n-2,0x61,0x32,0x6d,0xa2,0x71,0x72,0x12,0x6f,0x77,0x73,0x7d,0x12,0x62,0x69,0x63,\n-0x38,3,0x65,0x4a,0x6d,0x66,0x70,0xa2,0x43,0x73,0x11,0x75,0x70,0xa2,0x80,0x16,\n-0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x80,0x11,0x78,0x74,1,0x61,0xa3,0xd2,\n-0x65,0x14,0x6e,0x64,0x65,0x64,0x61,0xa3,0xd2,0x12,0x61,0x74,0x68,0xa2,0xd3,0x18,\n-0x65,0x6d,0x61,0x74,0x69,0x63,0x61,0x6c,0x61,0x1f,0x6c,0x70,0x68,0x61,0x62,0x65,\n-0x74,0x69,0x63,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0xd3,1,0x66,0x42,0x72,\n-0x1e,0x65,0x73,0x65,0x6e,0x74,0x61,0x74,0x69,0x6f,0x6e,0x66,0x6f,0x72,0x6d,0x73,\n-1,0x61,0xa3,0x51,0x62,0xa3,0x55,0x14,0x65,0x6e,0x69,0x61,0x6e,0x35,0x12,0x63,\n-0x69,0x69,0x23,0x64,0x9e,0x65,0xa2,0x42,0x68,0xa2,0x4d,0x6c,1,0x63,0x62,0x70,\n-0x17,0x68,0x61,0x62,0x65,0x74,0x69,0x63,0x70,1,0x66,0xa3,0x50,0x72,0x1e,0x65,\n-0x73,0x65,0x6e,0x74,0x61,0x74,0x69,0x6f,0x6e,0x66,0x6f,0x72,0x6d,0x73,0xa3,0x50,\n-0x16,0x68,0x65,0x6d,0x69,0x63,0x61,0x6c,0xa2,0xd0,0x16,0x73,0x79,0x6d,0x62,0x6f,\n-0x6c,0x73,0xa3,0xd0,0x12,0x6c,0x61,0x6d,0xa5,7,0x1a,0x67,0x65,0x61,0x6e,0x6e,\n-0x75,0x6d,0x62,0x65,0x72,0x73,0xa3,0x77,0x11,0x6f,0x6d,0xa3,0xfd,7,0x6f,0x71,\n-0x6f,0x64,0x72,0xa2,0x41,0x75,0xa2,0x58,0x79,0x1b,0x7a,0x61,0x6e,0x74,0x69,0x6e,\n-0x65,0x6d,0x75,0x73,0x69,0x63,0xa2,0x5b,0x18,0x61,0x6c,0x73,0x79,0x6d,0x62,0x6f,\n-0x6c,0x73,0xa3,0x5b,1,0x70,0x34,0x78,0x16,0x64,0x72,0x61,0x77,0x69,0x6e,0x67,\n-0x89,0x14,0x6f,0x6d,0x6f,0x66,0x6f,0xa0,0x12,0x65,0x78,0x74,0xa2,0x43,0x14,0x65,\n-0x6e,0x64,0x65,0x64,0xa3,0x43,0x10,0x61,1,0x68,0x40,0x69,0x12,0x6c,0x6c,0x65,\n-0x92,0x17,0x70,0x61,0x74,0x74,0x65,0x72,0x6e,0x73,0x93,0x11,0x6d,0x69,0xa3,0xc9,\n-1,0x67,0x2c,0x68,0x11,0x69,0x64,0xa3,0x64,0x14,0x69,0x6e,0x65,0x73,0x65,0xa3,\n-0x81,0x61,0x48,0x65,0xa2,0x4e,0x68,0xa2,0x52,0x6c,0x1a,0x6f,0x63,0x6b,0x65,0x6c,\n-0x65,0x6d,0x65,0x6e,0x74,0x73,0x8b,3,0x6c,0x34,0x6d,0x40,0x73,0x66,0x74,0x11,\n-0x61,0x6b,0xa3,0xc7,0x14,0x69,0x6e,0x65,0x73,0x65,0xa3,0x93,0x11,0x75,0x6d,0xa2,\n-0xb1,0x12,0x73,0x75,0x70,0xa2,0xca,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,\n-0xca,1,0x69,0x30,0x73,0x13,0x61,0x76,0x61,0x68,0xa3,0xdd,0x15,0x63,0x6c,0x61,\n-0x74,0x69,0x6e,0x23,0x14,0x6e,0x67,0x61,0x6c,0x69,0x41,0x16,0x61,0x69,0x6b,0x73,\n-0x75,0x6b,0x69,0xa5,8,5,0x6f,0xc1,0x4c,0x6f,0xa2,0x55,0x75,0xa4,0x10,0x79,\n-1,0x70,0x9c,0x72,0x14,0x69,0x6c,0x6c,0x69,0x63,0x32,1,0x65,0x4c,0x73,0x11,\n-0x75,0x70,0xa2,0x61,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa2,0x61,0x12,0x61,\n-0x72,0x79,0xa3,0x61,0x11,0x78,0x74,3,0x61,0xa3,0x9e,0x62,0xa3,0xa0,0x63,0xa5,\n-9,0x65,0x13,0x6e,0x64,0x65,0x64,2,0x61,0xa3,0x9e,0x62,0xa3,0xa0,0x63,0xa5,\n-9,0x1c,0x72,0x69,0x6f,0x74,0x73,0x79,0x6c,0x6c,0x61,0x62,0x61,0x72,0x79,0xa3,\n-0x7b,3,0x6d,0x5a,0x6e,0xa2,0x95,0x70,0xa2,0xa0,0x75,0x17,0x6e,0x74,0x69,0x6e,\n-0x67,0x72,0x6f,0x64,0xa2,0x9a,0x17,0x6e,0x75,0x6d,0x65,0x72,0x61,0x6c,0x73,0xa3,\n-0x9a,2,0x62,0x3a,0x6d,0xa2,0x5f,0x70,0x15,0x61,0x74,0x6a,0x61,0x6d,0x6f,0xa3,\n-0x41,0x14,0x69,0x6e,0x69,0x6e,0x67,2,0x64,0x46,0x68,0x9e,0x6d,0x1d,0x61,0x72,\n-0x6b,0x73,0x66,0x6f,0x72,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x77,0x1e,0x69,0x61,\n-0x63,0x72,0x69,0x74,0x69,0x63,0x61,0x6c,0x6d,0x61,0x72,0x6b,0x73,0x2e,2,0x65,\n-0x40,0x66,0xa6,0x2a,0x73,0x18,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,\n-0x83,0x16,0x78,0x74,0x65,0x6e,0x64,0x65,0x64,0xa3,0xe0,0x17,0x61,0x6c,0x66,0x6d,\n-0x61,0x72,0x6b,0x73,0xa3,0x52,0x11,0x6f,0x6e,0x1f,0x69,0x6e,0x64,0x69,0x63,0x6e,\n-0x75,0x6d,0x62,0x65,0x72,0x66,0x6f,0x72,0x6d,0x73,0xa3,0xb2,0x1b,0x74,0x72,0x6f,\n-0x6c,0x70,0x69,0x63,0x74,0x75,0x72,0x65,0x73,0x83,0x12,0x74,0x69,0x63,0xa2,0x84,\n-0x1b,0x65,0x70,0x61,0x63,0x74,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa3,0xdf,1,\n-0x6e,0x3e,0x72,0x1b,0x72,0x65,0x6e,0x63,0x79,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,\n-0x75,0x15,0x65,0x69,0x66,0x6f,0x72,0x6d,0xa2,0x98,0x16,0x6e,0x75,0x6d,0x62,0x65,\n-0x72,0x73,0xa2,0x99,0x1d,0x61,0x6e,0x64,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,\n-0x69,0x6f,0x6e,0xa3,0x99,0x61,0xa2,0xdb,0x68,0xa4,5,0x6a,0x10,0x6b,0xa2,0x47,\n-4,0x63,0x86,0x65,0xa2,0x7d,0x72,0xa2,0x92,0x73,0xa2,0xa4,0x75,0x1f,0x6e,0x69,\n-0x66,0x69,0x65,0x64,0x69,0x64,0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa2,0x47,\n-0x18,0x65,0x78,0x74,0x65,0x6e,0x73,0x69,0x6f,0x6e,5,0x64,0x65,0x64,0xa3,0xd1,\n-0x65,0xa5,0,0x66,0xa5,0x12,0x14,0x6f,0x6d,0x70,0x61,0x74,0xa2,0x45,1,0x66,\n-0x96,0x69,1,0x62,0x44,0x64,0x17,0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa2,\n-0x4f,0x12,0x73,0x75,0x70,0xa3,0x5f,0x14,0x69,0x6c,0x69,0x74,0x79,0xa2,0x45,1,\n-0x66,0x54,0x69,0x18,0x64,0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa2,0x4f,0x19,\n-0x73,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x5f,0x13,0x6f,0x72,0x6d,\n-0x73,0xa3,0x53,0x11,0x78,0x74,5,0x64,9,0x64,0xa3,0xd1,0x65,0xa5,0,0x66,\n-0xa5,0x12,0x61,0xa3,0x46,0x62,0xa3,0x5e,0x63,0xa3,0xc5,0x19,0x61,0x64,0x69,0x63,\n-0x61,0x6c,0x73,0x73,0x75,0x70,0x94,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x95,\n-1,0x74,0x50,0x79,0x14,0x6d,0x62,0x6f,0x6c,0x73,0x9a,0x1d,0x61,0x6e,0x64,0x70,\n-0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x9b,0x14,0x72,0x6f,0x6b,0x65,\n-0x73,0xa3,0x82,2,0x6e,0x48,0x72,0x64,0x75,0x1d,0x63,0x61,0x73,0x69,0x61,0x6e,\n-0x61,0x6c,0x62,0x61,0x6e,0x69,0x61,0x6e,0xa3,0xde,0x1d,0x61,0x64,0x69,0x61,0x6e,\n-0x73,0x79,0x6c,0x6c,0x61,0x62,0x69,0x63,0x73,0x63,0x12,0x69,0x61,0x6e,0xa3,0xa8,\n-1,0x61,0x6c,0x65,1,0x72,0x38,0x73,0x17,0x73,0x73,0x79,0x6d,0x62,0x6f,0x6c,\n-0x73,0xa5,0x19,0x13,0x6f,0x6b,0x65,0x65,0x60,0x12,0x73,0x75,0x70,0xa2,0xff,0x16,\n-0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xff,1,0x6b,0x26,0x6d,0xa3,0xa4,0x11,\n-0x6d,0x61,0xa3,0xd4,3,0x65,0x3e,0x69,0x7e,0x6f,0xa2,0x5d,0x75,0x15,0x70,0x6c,\n-0x6f,0x79,0x61,0x6e,0xa3,0xe1,1,0x73,0x50,0x76,0x16,0x61,0x6e,0x61,0x67,0x61,\n-0x72,0x69,0x3e,0x12,0x65,0x78,0x74,0xa2,0xb3,0x14,0x65,0x6e,0x64,0x65,0x64,0xa3,\n-0xb3,0x13,0x65,0x72,0x65,0x74,0xa3,0x5a,1,0x61,0x30,0x6e,0x14,0x67,0x62,0x61,\n-0x74,0x73,0x91,0x18,0x63,0x72,0x69,0x74,0x69,0x63,0x61,0x6c,0x73,0x2e,2,0x65,\n-0x30,0x66,0x36,0x73,0x11,0x75,0x70,0xa3,0x83,0x11,0x78,0x74,0xa3,0xe0,0x18,0x6f,\n-0x72,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x77,1,0x67,0x3e,0x6d,0x12,0x69,0x6e,\n-0x6f,0xa2,0xab,0x14,0x74,0x69,0x6c,0x65,0x73,0xa3,0xab,0x11,0x72,0x61,0xa5,0x1a,\n-8,0x6d,0x5f,0x6d,0x3a,0x6e,0x48,0x73,0x7a,0x76,0xa2,0x4b,0x77,0x12,0x69,0x64,\n-0x65,0x43,0x11,0x65,0x64,0x32,0x12,0x69,0x61,0x6c,0x33,2,0x61,0x40,0x62,0x37,\n-0x6f,1,0x62,0x28,0x6e,0x10,0x65,0x21,0x13,0x72,0x65,0x61,0x6b,0x37,0x10,0x72,\n-0x34,0x12,0x72,0x6f,0x77,0x35,2,0x6d,0x38,0x71,0x46,0x75,1,0x62,0x3d,0x70,\n-0x3e,0x11,0x65,0x72,0x3f,1,0x61,0x24,0x6c,0x39,0x11,0x6c,0x6c,0x39,1,0x72,\n-0x3b,0x75,0x12,0x61,0x72,0x65,0x3b,0x12,0x65,0x72,0x74,0x40,0x13,0x69,0x63,0x61,\n-0x6c,0x41,0x63,0x58,0x65,0x92,0x66,0x96,0x69,1,0x6e,0x36,0x73,0x10,0x6f,0x30,\n-0x14,0x6c,0x61,0x74,0x65,0x64,0x31,0x11,0x69,0x74,0x2e,0x12,0x69,0x61,0x6c,0x2f,\n-2,0x61,0x36,0x69,0x48,0x6f,0x10,0x6d,0x24,0x12,0x70,0x61,0x74,0x25,0x10,0x6e,\n-0x22,0x15,0x6f,0x6e,0x69,0x63,0x61,0x6c,0x23,0x13,0x72,0x63,0x6c,0x65,0x27,0x11,\n-0x6e,0x63,0x27,2,0x69,0x3a,0x6f,0x44,0x72,0x10,0x61,0x2c,0x14,0x63,0x74,0x69,\n-0x6f,0x6e,0x2d,0x10,0x6e,0x28,0x11,0x61,0x6c,0x29,0x11,0x6e,0x74,0x2b,4,0x61,\n-0x3a,0x66,0x4c,0x68,0x5e,0x6e,0x70,0x77,0x2a,0x12,0x69,0x64,0x65,0x2b,0x22,0x17,\n-0x6d,0x62,0x69,0x67,0x75,0x6f,0x75,0x73,0x23,0x26,0x17,0x75,0x6c,0x6c,0x77,0x69,\n-0x64,0x74,0x68,0x27,0x24,0x17,0x61,0x6c,0x66,0x77,0x69,0x64,0x74,0x68,0x25,0x20,\n-1,0x61,0x30,0x65,0x14,0x75,0x74,0x72,0x61,0x6c,0x21,0x28,0x13,0x72,0x72,0x6f,\n-0x77,0x29,0xd,0x6e,0xc0,0xfb,0x73,0x6d,0x73,0x3a,0x74,0x98,0x75,0xa2,0x49,0x7a,\n-2,0x6c,0x3b,0x70,0x3d,0x73,0x39,5,0x6f,0x28,0x6f,0x57,0x70,0x34,0x75,0x16,\n-0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x45,0x11,0x61,0x63,1,0x65,0x32,0x69,0x15,\n-0x6e,0x67,0x6d,0x61,0x72,0x6b,0x31,0x18,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,\n-0x72,0x39,0x63,0x53,0x6b,0x55,0x6d,0x51,0x1d,0x69,0x74,0x6c,0x65,0x63,0x61,0x73,\n-0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x27,1,0x6e,0x40,0x70,0x1c,0x70,0x65,0x72,\n-0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x23,0x17,0x61,0x73,0x73,0x69,\n-0x67,0x6e,0x65,0x64,0x21,0x6e,0x8a,0x6f,0xa2,0x47,0x70,8,0x66,0x14,0x66,0x5b,\n-0x69,0x59,0x6f,0x4f,0x72,0x24,0x73,0x49,0x17,0x69,0x76,0x61,0x74,0x65,0x75,0x73,\n-0x65,0x43,0x61,0x2c,0x63,0x4d,0x64,0x47,0x65,0x4b,0x1f,0x72,0x61,0x67,0x72,0x61,\n-0x70,0x68,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0x3d,2,0x64,0x33,0x6c,\n-0x35,0x6f,0x36,0x1b,0x6e,0x73,0x70,0x61,0x63,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,\n-0x2d,1,0x70,0x7c,0x74,0x12,0x68,0x65,0x72,3,0x6c,0x38,0x6e,0x42,0x70,0x4c,\n-0x73,0x14,0x79,0x6d,0x62,0x6f,0x6c,0x57,0x14,0x65,0x74,0x74,0x65,0x72,0x2b,0x14,\n-0x75,0x6d,0x62,0x65,0x72,0x37,0x19,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,\n-0x6e,0x4f,0x1c,0x65,0x6e,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,\n-0x49,0x66,0x9e,0x66,0x88,0x69,0xa2,0x4b,0x6c,0xa2,0x5c,0x6d,4,0x61,0x60,0x63,\n-0x31,0x65,0x2f,0x6e,0x2d,0x6f,0x15,0x64,0x69,0x66,0x69,0x65,0x72,1,0x6c,0x30,\n-0x73,0x14,0x79,0x6d,0x62,0x6f,0x6c,0x55,0x14,0x65,0x74,0x74,0x65,0x72,0x29,0x17,\n-0x74,0x68,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x51,1,0x69,0x2e,0x6f,0x13,0x72,0x6d,\n-0x61,0x74,0x41,0x1d,0x6e,0x61,0x6c,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,\n-0x6f,0x6e,0x5b,0x10,0x6e,0x1f,0x69,0x74,0x69,0x61,0x6c,0x70,0x75,0x6e,0x63,0x74,\n-0x75,0x61,0x74,0x69,0x6f,0x6e,0x59,6,0x6d,0x18,0x6d,0x29,0x6f,0x28,0x74,0x27,\n-0x75,0x23,0x2a,0x1c,0x77,0x65,0x72,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,\n-0x72,0x25,0x65,0x28,0x69,0x3c,0x6c,0x25,0x19,0x74,0x74,0x65,0x72,0x6e,0x75,0x6d,\n-0x62,0x65,0x72,0x35,0x1a,0x6e,0x65,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,\n-0x3b,0x63,0x44,0x64,0xa2,0x60,0x65,0x1b,0x6e,0x63,0x6c,0x6f,0x73,0x69,0x6e,0x67,\n-0x6d,0x61,0x72,0x6b,0x2f,6,0x6e,0x39,0x6e,0x46,0x6f,0x4e,0x73,0x45,0x75,0x1b,\n-0x72,0x72,0x65,0x6e,0x63,0x79,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x53,0x20,0x12,0x74,\n-0x72,0x6c,0x3f,0x42,0x10,0x6e,1,0x6e,0x2c,0x74,0x12,0x72,0x6f,0x6c,0x3f,0x1f,\n-0x65,0x63,0x74,0x6f,0x72,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,\n-0x4d,0x63,0x3f,0x66,0x41,0x6c,0x1d,0x6f,0x73,0x65,0x70,0x75,0x6e,0x63,0x74,0x75,\n-0x61,0x74,0x69,0x6f,0x6e,0x4b,2,0x61,0x30,0x65,0x4a,0x69,0x12,0x67,0x69,0x74,\n-0x33,0x1c,0x73,0x68,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x47,\n-0x1a,0x63,0x69,0x6d,0x61,0x6c,0x6e,0x75,0x6d,0x62,0x65,0x72,0x33,0,0x12,0x6d,\n-0xc2,0x3f,0x73,0xa1,0x73,0x4e,0x74,0xa2,0x56,0x77,0xa2,0x72,0x79,0xa2,0x73,0x7a,\n-1,0x61,0x2c,0x68,0x12,0x61,0x69,0x6e,0x8b,0x11,0x69,0x6e,0x85,5,0x74,0x22,\n-0x74,0x38,0x77,0x4c,0x79,0x16,0x72,0x69,0x61,0x63,0x77,0x61,0x77,0x6f,0x18,0x72,\n-0x61,0x69,0x67,0x68,0x74,0x77,0x61,0x77,0xa3,0x55,0x15,0x61,0x73,0x68,0x6b,0x61,\n-0x66,0x6d,0x61,0x2e,0x65,0x38,0x68,0x11,0x69,0x6e,0x6b,0x10,0x64,0x62,0x11,0x68,\n-0x65,0x65,1,0x65,0x2e,0x6d,0x13,0x6b,0x61,0x74,0x68,0x69,0x10,0x6e,0x67,1,\n-0x61,0x4e,0x65,1,0x68,0x28,0x74,0x10,0x68,0x77,0x16,0x6d,0x61,0x72,0x62,0x75,\n-0x74,0x61,0x74,0x13,0x67,0x6f,0x61,0x6c,0x3d,1,0x68,0x71,0x77,0x73,0x11,0x61,\n-0x77,0x79,1,0x65,0x32,0x75,0x11,0x64,0x68,0x80,0x11,0x68,0x65,0x83,0x10,0x68,\n-0x7a,1,0x62,0x34,0x77,0x16,0x69,0x74,0x68,0x74,0x61,0x69,0x6c,0x7f,0x14,0x61,\n-0x72,0x72,0x65,0x65,0x7d,0x6d,0x6c,0x6e,0xa4,0x6b,0x70,0xa4,0x88,0x71,0xa4,0x88,\n-0x72,1,0x65,0x38,0x6f,0x18,0x68,0x69,0x6e,0x67,0x79,0x61,0x79,0x65,0x68,0x93,\n-1,0x68,0x5f,0x76,0x16,0x65,0x72,0x73,0x65,0x64,0x70,0x65,0x61,2,0x61,0x2e,\n-0x65,0xa4,0x3e,0x69,0x10,0x6d,0x53,1,0x6c,0xa2,0xe7,0x6e,0x16,0x69,0x63,0x68,\n-0x61,0x65,0x61,0x6e,0,0x12,0x6e,0x76,0x73,0x51,0x73,0x3e,0x74,0x5c,0x77,0xa0,\n-0x79,0xa2,0x42,0x7a,0x13,0x61,0x79,0x69,0x6e,0xa3,0x54,0x10,0x61,1,0x64,0x2e,\n-0x6d,0x12,0x65,0x6b,0x68,0xa3,0x4c,0x11,0x68,0x65,0xa3,0x4b,3,0x61,0x38,0x65,\n-0x3c,0x68,0x4a,0x77,0x13,0x65,0x6e,0x74,0x79,0xa3,0x51,0x10,0x77,0xa3,0x4d,1,\n-0x6e,0xa3,0x4e,0x74,0x10,0x68,0xa3,0x4f,0x14,0x61,0x6d,0x65,0x64,0x68,0xa3,0x50,\n-0x11,0x61,0x77,0xa3,0x52,0x12,0x6f,0x64,0x68,0xa3,0x53,0x6e,0x3a,0x6f,0x40,0x70,\n-0x46,0x71,0x4a,0x72,0x12,0x65,0x73,0x68,0xa3,0x4a,0x11,0x75,0x6e,0xa3,0x46,0x11,\n-0x6e,0x65,0xa3,0x47,0x10,0x65,0xa3,0x48,0x12,0x6f,0x70,0x68,0xa3,0x49,0x67,0x33,\n-0x67,0x38,0x68,0x40,0x6b,0x5e,0x6c,0x66,0x6d,0x11,0x65,0x6d,0xa3,0x45,0x13,0x69,\n-0x6d,0x65,0x6c,0xa1,1,0x65,0x32,0x75,0x14,0x6e,0x64,0x72,0x65,0x64,0xa3,0x42,\n-0x11,0x74,0x68,0xa3,0x41,0x12,0x61,0x70,0x68,0xa3,0x43,0x14,0x61,0x6d,0x65,0x64,\n-0x68,0xa3,0x44,0x61,0x34,0x62,0x4a,0x64,0x50,0x66,0x12,0x69,0x76,0x65,0x9f,1,\n-0x6c,0x2a,0x79,0x11,0x69,0x6e,0x97,0x12,0x65,0x70,0x68,0x95,0x12,0x65,0x74,0x68,\n-0x99,1,0x61,0x30,0x68,0x14,0x61,0x6d,0x65,0x64,0x68,0x9d,0x13,0x6c,0x65,0x74,\n-0x68,0x9b,0x15,0x61,0x79,0x61,0x6c,0x61,0x6d,6,0x6e,0x2c,0x6e,0x34,0x72,0x5e,\n-0x73,0x62,0x74,0x11,0x74,0x61,0xa3,0x63,2,0x67,0x2e,0x6e,0x32,0x79,0x10,0x61,\n-0xa3,0x60,0x10,0x61,0xa3,0x5d,1,0x61,0xa3,0x5e,0x6e,0x10,0x61,0xa3,0x5f,0x10,\n-0x61,0xa3,0x61,0x11,0x73,0x61,0xa3,0x62,0x62,0x3c,0x6a,0x42,0x6c,0x10,0x6c,1,\n-0x61,0xa3,0x5b,0x6c,0x10,0x61,0xa3,0x5c,0x11,0x68,0x61,0xa3,0x59,0x10,0x61,0xa3,\n-0x5a,0x11,0x65,0x6d,0x51,2,0x6f,0x2c,0x75,0x50,0x79,0x10,0x61,0x91,1,0x6a,\n-0x28,0x6f,0x10,0x6e,0x55,0x1a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x67,0x72,0x6f,0x75,\n-0x70,0x21,0x10,0x6e,0x57,0x10,0x65,0x59,0x10,0x61,1,0x66,0x5b,0x70,0x10,0x68,\n-0x5d,0x66,0x9a,0x66,0x42,0x67,0x7a,0x68,0x8a,0x6b,0xa2,0x75,0x6c,0x11,0x61,0x6d,\n-0x4c,0x12,0x61,0x64,0x68,0x4f,2,0x61,0x3e,0x65,0x4a,0x69,0x19,0x6e,0x61,0x6c,\n-0x73,0x65,0x6d,0x6b,0x61,0x74,0x68,0x35,0x15,0x72,0x73,0x69,0x79,0x65,0x68,0x8f,\n-0x86,0x10,0x68,0x33,0x10,0x61,1,0x66,0x37,0x6d,0x11,0x61,0x6c,0x39,1,0x61,\n-0x40,0x65,0x3e,1,0x68,0x28,0x74,0x10,0x68,0x45,0x40,0x13,0x67,0x6f,0x61,0x6c,\n-0x43,2,0x68,0x3b,0x6d,0x5c,0x6e,0x1a,0x69,0x66,0x69,0x72,0x6f,0x68,0x69,0x6e,\n-0x67,0x79,0x61,1,0x6b,0x2a,0x70,0x10,0x61,0xa3,0x65,0x15,0x69,0x6e,0x6e,0x61,\n-0x79,0x61,0xa3,0x64,0x1a,0x7a,0x61,0x6f,0x6e,0x68,0x65,0x68,0x67,0x6f,0x61,0x6c,\n-0x3d,2,0x61,0x3a,0x68,0x44,0x6e,0x17,0x6f,0x74,0x74,0x65,0x64,0x68,0x65,0x68,\n-0x4b,1,0x66,0x47,0x70,0x10,0x68,0x49,0x12,0x61,0x70,0x68,0x89,0x61,0x2e,0x62,\n-0x8a,0x64,0xa2,0x51,0x65,0x31,2,0x66,0x3c,0x69,0x70,0x6c,1,0x61,0x28,0x65,\n-0x10,0x66,0x27,0x11,0x70,0x68,0x25,0x14,0x72,0x69,0x63,0x61,0x6e,2,0x66,0x30,\n-0x6e,0x36,0x71,0x11,0x61,0x66,0xa3,0x58,0x11,0x65,0x68,0xa3,0x56,0x12,0x6f,0x6f,\n-0x6e,0xa3,0x57,0x10,0x6e,0x23,1,0x65,0x4a,0x75,0x10,0x72,0x1f,0x75,0x73,0x68,\n-0x61,0x73,0x6b,0x69,0x79,0x65,0x68,0x62,0x61,0x72,0x72,0x65,0x65,0x8d,1,0x68,\n-0x29,0x74,0x10,0x68,0x2b,0x11,0x61,0x6c,0x2c,0x16,0x61,0x74,0x68,0x72,0x69,0x73,\n-0x68,0x2f,7,0x6e,0x2e,0x6e,0x2c,0x72,0x3e,0x74,0x56,0x75,0x21,0x18,0x6f,0x6e,\n-0x6a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x21,0x28,0x1a,0x69,0x67,0x68,0x74,0x6a,0x6f,\n-0x69,0x6e,0x69,0x6e,0x67,0x29,0x2a,0x19,0x72,0x61,0x6e,0x73,0x70,0x61,0x72,0x65,\n-0x6e,0x74,0x2b,0x63,0x23,0x64,0x40,0x6a,0x56,0x6c,0x26,0x19,0x65,0x66,0x74,0x6a,\n-0x6f,0x69,0x6e,0x69,0x6e,0x67,0x27,0x24,0x19,0x75,0x61,0x6c,0x6a,0x6f,0x69,0x6e,\n-0x69,0x6e,0x67,0x25,0x19,0x6f,0x69,0x6e,0x63,0x61,0x75,0x73,0x69,0x6e,0x67,0x23,\n-0,0x13,0x6e,0xc0,0xd0,0x73,0x49,0x73,0x48,0x75,0x78,0x77,0x84,0x78,0x9c,0x7a,\n-0x10,0x77,0x58,1,0x6a,0x75,0x73,0x13,0x70,0x61,0x63,0x65,0x59,4,0x61,0x51,\n-0x67,0x53,0x70,0x28,0x75,0x30,0x79,0x57,0x54,0x12,0x61,0x63,0x65,0x55,0x16,0x72,\n-0x72,0x6f,0x67,0x61,0x74,0x65,0x53,0x15,0x6e,0x6b,0x6e,0x6f,0x77,0x6e,0x21,1,\n-0x6a,0x5d,0x6f,0x17,0x72,0x64,0x6a,0x6f,0x69,0x6e,0x65,0x72,0x5d,0x10,0x78,0x21,\n-0x6e,0x60,0x6f,0xa2,0x41,0x70,0xa2,0x50,0x71,0xa2,0x6e,0x72,1,0x65,0x24,0x69,\n-0x6f,0x1e,0x67,0x69,0x6f,0x6e,0x61,0x6c,0x69,0x6e,0x64,0x69,0x63,0x61,0x74,0x6f,\n-0x72,0x6f,4,0x65,0x3e,0x6c,0x5b,0x6f,0x46,0x73,0x45,0x75,0x46,0x14,0x6d,0x65,\n-0x72,0x69,0x63,0x47,0x15,0x78,0x74,0x6c,0x69,0x6e,0x65,0x5b,0x17,0x6e,0x73,0x74,\n-0x61,0x72,0x74,0x65,0x72,0x45,0x10,0x70,0x48,0x1c,0x65,0x6e,0x70,0x75,0x6e,0x63,\n-0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x49,1,0x6f,0x3e,0x72,0x4c,0x1a,0x65,0x66,\n-0x69,0x78,0x6e,0x75,0x6d,0x65,0x72,0x69,0x63,0x4d,0x4a,0x1b,0x73,0x74,0x66,0x69,\n-0x78,0x6e,0x75,0x6d,0x65,0x72,0x69,0x63,0x4b,0x10,0x75,0x4e,0x16,0x6f,0x74,0x61,\n-0x74,0x69,0x6f,0x6e,0x4f,0x68,0x7b,0x68,0x50,0x69,0x86,0x6a,0xa2,0x61,0x6c,0xa2,\n-0x65,0x6d,0x1c,0x61,0x6e,0x64,0x61,0x74,0x6f,0x72,0x79,0x62,0x72,0x65,0x61,0x6b,\n-0x2d,4,0x32,0x5f,0x33,0x61,0x65,0x34,0x6c,0x6d,0x79,0x3a,0x13,0x70,0x68,0x65,\n-0x6e,0x3b,0x19,0x62,0x72,0x65,0x77,0x6c,0x65,0x74,0x74,0x65,0x72,0x6d,2,0x64,\n-0x28,0x6e,0x3c,0x73,0x41,0x3c,0x18,0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x69,0x63,\n-0x3d,0x3e,1,0x66,0x3e,0x73,0x11,0x65,0x70,1,0x61,0x22,0x65,0x14,0x72,0x61,\n-0x62,0x6c,0x65,0x3f,0x18,0x69,0x78,0x6e,0x75,0x6d,0x65,0x72,0x69,0x63,0x41,2,\n-0x6c,0x63,0x74,0x65,0x76,0x67,1,0x66,0x43,0x69,0x15,0x6e,0x65,0x66,0x65,0x65,\n-0x64,0x43,0x61,0x40,0x62,0x70,0x63,0xa2,0x55,0x65,0xa2,0xdb,0x67,0x10,0x6c,0x38,\n-0x11,0x75,0x65,0x39,2,0x69,0x23,0x6c,0x34,0x6d,0x16,0x62,0x69,0x67,0x75,0x6f,\n-0x75,0x73,0x23,0x24,0x17,0x70,0x68,0x61,0x62,0x65,0x74,0x69,0x63,0x25,4,0x32,\n-0x27,0x61,0x29,0x62,0x2b,0x6b,0x2d,0x72,0x12,0x65,0x61,0x6b,2,0x61,0x36,0x62,\n-0x3e,0x73,0x15,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x57,0x13,0x66,0x74,0x65,0x72,0x29,\n-1,0x65,0x2a,0x6f,0x11,0x74,0x68,0x27,0x13,0x66,0x6f,0x72,0x65,0x2b,7,0x6d,\n-0x51,0x6d,0x33,0x6f,0x28,0x70,0x69,0x72,0x35,1,0x6d,0x76,0x6e,1,0x64,0x3c,\n-0x74,0x1a,0x69,0x6e,0x67,0x65,0x6e,0x74,0x62,0x72,0x65,0x61,0x6b,0x2f,0x15,0x69,\n-0x74,0x69,0x6f,0x6e,0x61,0x1f,0x6c,0x6a,0x61,0x70,0x61,0x6e,0x65,0x73,0x65,0x73,\n-0x74,0x61,0x72,0x74,0x65,0x72,0x6b,1,0x62,0x3a,0x70,0x19,0x6c,0x65,0x78,0x63,\n-0x6f,0x6e,0x74,0x65,0x78,0x74,0x51,0x18,0x69,0x6e,0x69,0x6e,0x67,0x6d,0x61,0x72,\n-0x6b,0x33,0x61,0x6a,0x62,0x2f,0x6a,0x6b,0x6c,0x30,0x13,0x6f,0x73,0x65,0x70,1,\n-0x61,0x38,0x75,0x18,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x31,0x18,0x72,\n-0x65,0x6e,0x74,0x68,0x65,0x73,0x69,0x73,0x69,0x1b,0x72,0x72,0x69,0x61,0x67,0x65,\n-0x72,0x65,0x74,0x75,0x72,0x6e,0x35,2,0x62,0x3e,0x6d,0x46,0x78,0x36,0x18,0x63,\n-0x6c,0x61,0x6d,0x61,0x74,0x69,0x6f,0x6e,0x37,0x70,0x12,0x61,0x73,0x65,0x71,0x72,\n-0x16,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,0x73,1,0x64,0x42,0x6e,1,0x6f,0x32,\n-0x75,0x26,0x14,0x6d,0x65,0x72,0x69,0x63,0x27,0x11,0x6e,0x65,0x21,1,0x65,0x2e,\n-0x69,0x24,0x12,0x67,0x69,0x74,0x25,0x22,0x14,0x63,0x69,0x6d,0x61,0x6c,0x23,0,\n-0x18,0x6e,0xc4,0x1e,0x74,0xc1,0x61,0x77,0x8a,0x77,0xa2,0x4c,0x78,0xa2,0x70,0x79,\n-0xa2,0x7a,0x7a,6,0x73,0x1e,0x73,0x34,0x78,0x42,0x79,0x48,0x7a,0x11,0x7a,0x7a,\n-0xa3,0x67,0x10,0x79,1,0x65,0xa3,0xae,0x6d,0xa3,0x81,0x11,0x78,0x78,0xa3,0x66,\n-0x11,0x79,0x79,0x21,0x61,0x30,0x69,0x58,0x6d,0x11,0x74,0x68,0xa3,0x80,0x10,0x6e,\n-1,0x61,0x26,0x62,0xa3,0xb1,0x1a,0x62,0x61,0x7a,0x61,0x72,0x73,0x71,0x75,0x61,\n-0x72,0x65,0xa3,0xb1,0x11,0x6e,0x68,0x23,2,0x61,0x30,0x63,0x5a,0x6f,0x11,0x6c,\n-0x65,0xa3,0x9b,1,0x6e,0x3c,0x72,0x10,0x61,0xa2,0x92,0x15,0x6e,0x67,0x63,0x69,\n-0x74,0x69,0xa3,0x92,0x12,0x63,0x68,0x6f,0xa3,0xbc,0x11,0x68,0x6f,0xa3,0xbc,1,\n-0x70,0x2c,0x73,0x11,0x75,0x78,0xa3,0x65,0x11,0x65,0x6f,0x9b,0x10,0x69,0x72,0x11,\n-0x69,0x69,0x73,0x74,0x4a,0x75,0xa2,0xba,0x76,1,0x61,0x2c,0x69,0x11,0x73,0x70,\n-0xa3,0x64,0x10,0x69,0xa2,0x63,0x10,0x69,0xa3,0x63,5,0x67,0x36,0x67,0x68,0x68,\n-0x6c,0x69,2,0x62,0x3a,0x66,0x4a,0x72,0x10,0x68,0xa2,0x9e,0x12,0x75,0x74,0x61,\n-0xa3,0x9e,1,0x65,0x24,0x74,0x6f,0x12,0x74,0x61,0x6e,0x6f,0x14,0x69,0x6e,0x61,\n-0x67,0x68,0x99,0x11,0x6c,0x67,0x75,0x10,0x61,1,0x61,0x24,0x69,0x6d,0x6a,0x11,\n-0x6e,0x61,0x6b,0x61,0x30,0x65,0xa2,0x5b,0x66,0x11,0x6e,0x67,0x99,6,0x6c,0x21,\n-0x6c,0x32,0x6d,0x38,0x6e,0x44,0x76,0x10,0x74,0xa3,0x7f,1,0x65,0x89,0x75,0x97,\n-1,0x69,0x24,0x6c,0x67,0x10,0x6c,0x67,0x10,0x67,0xa2,0x9a,0x11,0x75,0x74,0xa3,\n-0x9a,0x67,0x36,0x69,0x52,0x6b,0x10,0x72,0xa2,0x99,0x10,0x69,0xa3,0x99,1,0x61,\n-0x30,0x62,0x7a,0x13,0x61,0x6e,0x77,0x61,0x7b,0x12,0x6c,0x6f,0x67,0x75,2,0x6c,\n-0x32,0x74,0x34,0x76,0x12,0x69,0x65,0x74,0xa3,0x7f,0x10,0x65,0x89,0x12,0x68,0x61,\n-0x6d,0xa3,0x6a,1,0x6c,0x2a,0x6e,0x10,0x67,0xa3,0x62,0x10,0x75,0x68,0x11,0x67,\n-0x75,0x69,1,0x67,0x32,0x6e,0x14,0x6b,0x6e,0x6f,0x77,0x6e,0xa3,0x67,0x11,0x61,\n-0x72,0x8a,0x13,0x69,0x74,0x69,0x63,0x8b,0x71,0xc1,0x13,0x71,0xa2,0xde,0x72,0xa2,\n-0xe3,0x73,6,0x69,0x8a,0x69,0x72,0x6f,0xa2,0x4c,0x75,0xa2,0x75,0x79,1,0x6c,\n-0x46,0x72,4,0x63,0x65,0x65,0xa3,0x5f,0x69,0x2c,0x6a,0xa3,0x60,0x6e,0xa3,0x61,\n-0x11,0x61,0x63,0x65,0x10,0x6f,0x94,0x16,0x74,0x69,0x6e,0x61,0x67,0x72,0x69,0x95,\n-2,0x64,0x3c,0x67,0x4c,0x6e,1,0x64,0xa3,0x91,0x68,0x62,0x12,0x61,0x6c,0x61,\n-0x63,0x10,0x64,0xa2,0xa6,0x12,0x68,0x61,0x6d,0xa3,0xa6,0x17,0x6e,0x77,0x72,0x69,\n-0x74,0x69,0x6e,0x67,0xa3,0x70,2,0x67,0x3a,0x72,0x52,0x79,0x10,0x6f,0xa2,0xb0,\n-0x12,0x6d,0x62,0x6f,0xa3,0xb0,1,0x64,0x26,0x6f,0xa3,0xb8,0xa2,0xb7,0x12,0x69,\n-0x61,0x6e,0xa3,0xb7,0x10,0x61,0xa2,0x98,0x16,0x73,0x6f,0x6d,0x70,0x65,0x6e,0x67,\n-0xa3,0x98,0x11,0x6e,0x64,0xa2,0x71,0x14,0x61,0x6e,0x65,0x73,0x65,0xa3,0x71,0x61,\n-0x5c,0x67,0xa2,0x43,0x68,1,0x61,0x2a,0x72,0x10,0x64,0xa3,0x97,2,0x72,0x28,\n-0x76,0x30,0x77,0x87,0x12,0x61,0x64,0x61,0xa3,0x97,0x12,0x69,0x61,0x6e,0x87,2,\n-0x6d,0x40,0x72,0x58,0x75,0x10,0x72,0xa2,0x6f,0x15,0x61,0x73,0x68,0x74,0x72,0x61,\n-0xa3,0x6f,1,0x61,0x26,0x72,0xa3,0x7e,0x14,0x72,0x69,0x74,0x61,0x6e,0xa3,0x7e,\n-1,0x61,0xa3,0x5e,0x62,0xa3,0x85,0x11,0x6e,0x77,0xa3,0x70,0x11,0x61,0x61,1,\n-0x63,0x2f,0x69,0x23,3,0x65,0x3e,0x6a,0x48,0x6f,0x4e,0x75,0x10,0x6e,1,0x69,\n-0x24,0x72,0x61,0x10,0x63,0x61,0x13,0x6a,0x61,0x6e,0x67,0xa3,0x6e,0x11,0x6e,0x67,\n-0xa3,0x6e,1,0x68,0x2a,0x72,0x10,0x6f,0xa3,0x5d,0x10,0x67,0xa3,0xb6,0x6e,0xa2,\n-0x83,0x6f,0xa2,0xf2,0x70,5,0x6c,0x1e,0x6c,0x44,0x72,0x4a,0x73,0x1b,0x61,0x6c,\n-0x74,0x65,0x72,0x70,0x61,0x68,0x6c,0x61,0x76,0x69,0xa3,0x7b,0x11,0x72,0x64,0xa3,\n-0x5c,0x11,0x74,0x69,0xa3,0x7d,0x61,0x7c,0x65,0xa2,0x54,0x68,3,0x61,0x3e,0x6c,\n-0x4e,0x6e,0x5e,0x6f,0x16,0x65,0x6e,0x69,0x63,0x69,0x61,0x6e,0xa3,0x5b,0x10,0x67,\n-0xa2,0x5a,0x12,0x73,0x70,0x61,0xa3,0x5a,2,0x69,0xa3,0x7a,0x70,0xa3,0x7b,0x76,\n-0xa3,0x7c,0x10,0x78,0xa3,0x5b,2,0x68,0x3e,0x6c,0x50,0x75,0x10,0x63,0xa2,0xa5,\n-0x14,0x69,0x6e,0x68,0x61,0x75,0xa3,0xa5,0x17,0x61,0x77,0x68,0x68,0x6d,0x6f,0x6e,\n-0x67,0xa3,0x4b,0x10,0x6d,0xa2,0x90,0x14,0x79,0x72,0x65,0x6e,0x65,0xa3,0x90,0x11,\n-0x72,0x6d,0xa3,0x59,6,0x6b,0x36,0x6b,0x56,0x73,0x6e,0x75,0x74,0x79,0x11,0x69,\n-0x61,0x1f,0x6b,0x65,0x6e,0x67,0x70,0x75,0x61,0x63,0x68,0x75,0x65,0x68,0x6d,0x6f,\n-0x6e,0x67,0xa3,0xba,1,0x67,0x2e,0x6f,0xa2,0x57,0x10,0x6f,0xa3,0x57,0x10,0x62,\n-0xa3,0x84,0x11,0x68,0x75,0xa3,0x96,0x12,0x73,0x68,0x75,0xa3,0x96,0x61,0x42,0x62,\n-0x80,0x65,0x10,0x77,1,0x61,0xa3,0xaa,0x74,0x14,0x61,0x69,0x6c,0x75,0x65,0x97,\n-2,0x62,0x2e,0x6e,0x3c,0x72,0x10,0x62,0xa3,0x8e,0x15,0x61,0x74,0x61,0x65,0x61,\n-0x6e,0xa3,0x8f,0x10,0x64,0xa2,0xbb,0x16,0x69,0x6e,0x61,0x67,0x61,0x72,0x69,0xa3,\n-0xbb,0x11,0x61,0x74,0xa3,0x8f,3,0x67,0x5a,0x6c,0x6c,0x72,0xa2,0x93,0x73,2,\n-0x61,0x36,0x67,0x3c,0x6d,0x10,0x61,0x84,0x12,0x6e,0x79,0x61,0x85,0x11,0x67,0x65,\n-0xa3,0xab,0x10,0x65,0xa3,0xab,1,0x61,0x2a,0x68,0x11,0x61,0x6d,0x5b,0x10,0x6d,\n-0x5b,1,0x63,0xa2,0x60,0x64,5,0x70,0x37,0x70,0x36,0x73,0x54,0x74,0x14,0x75,\n-0x72,0x6b,0x69,0x63,0xa3,0x58,0x11,0x65,0x72,1,0x6d,0x2c,0x73,0x12,0x69,0x61,\n-0x6e,0x9b,0x11,0x69,0x63,0xa3,0x59,0x10,0x6f,1,0x67,0x3a,0x75,0x18,0x74,0x68,\n-0x61,0x72,0x61,0x62,0x69,0x61,0x6e,0xa3,0x85,0x13,0x64,0x69,0x61,0x6e,0xa3,0xb8,\n-0x68,0x42,0x69,0x54,0x6e,0x1a,0x6f,0x72,0x74,0x68,0x61,0x72,0x61,0x62,0x69,0x61,\n-0x6e,0xa3,0x8e,0x17,0x75,0x6e,0x67,0x61,0x72,0x69,0x61,0x6e,0xa3,0x4c,0x14,0x74,\n-0x61,0x6c,0x69,0x63,0x5d,1,0x68,0x26,0x6b,0xa3,0x6d,0x12,0x69,0x6b,0x69,0xa3,\n-0x6d,2,0x69,0x2c,0x6b,0x30,0x79,0x10,0x61,0x5f,0x11,0x79,0x61,0x5f,0x10,0x68,\n-0xa3,0x58,0x68,0xc2,0xf3,0x6b,0xc2,0xa,0x6b,0xa4,0x17,0x6c,0xa4,0x98,0x6d,8,\n-0x6f,0x46,0x6f,0x48,0x72,0x74,0x74,0x80,0x75,0x86,0x79,1,0x61,0x28,0x6d,0x10,\n-0x72,0x59,0x13,0x6e,0x6d,0x61,0x72,0x59,2,0x64,0x2e,0x6e,0x32,0x6f,0x10,0x6e,\n-0xa3,0x72,0x10,0x69,0xa3,0xa3,0x10,0x67,0x56,0x14,0x6f,0x6c,0x69,0x61,0x6e,0x57,\n-0x10,0x6f,0xa2,0x95,0x10,0x6f,0xa3,0x95,0x11,0x65,0x69,0xa3,0x73,0x11,0x6c,0x74,\n-0xa2,0xa4,0x12,0x61,0x6e,0x69,0xa3,0xa4,0x61,0x36,0x65,0xa2,0x67,0x69,0xa2,0xbd,\n-0x6c,0x11,0x79,0x6d,0x55,6,0x6e,0x38,0x6e,0x32,0x72,0x5c,0x73,0x6c,0x79,0x10,\n-0x61,0xa3,0x55,1,0x64,0x38,0x69,0xa2,0x79,0x15,0x63,0x68,0x61,0x65,0x61,0x6e,\n-0xa3,0x79,0xa2,0x54,0x12,0x61,0x69,0x63,0xa3,0x54,0x10,0x63,0xa2,0xa9,0x12,0x68,\n-0x65,0x6e,0xa3,0xa9,0x18,0x61,0x72,0x61,0x6d,0x67,0x6f,0x6e,0x64,0x69,0xa3,0xaf,\n-0x68,0x36,0x6b,0x4c,0x6c,0x15,0x61,0x79,0x61,0x6c,0x61,0x6d,0x55,1,0x61,0x26,\n-0x6a,0xa3,0xa0,0x13,0x6a,0x61,0x6e,0x69,0xa3,0xa0,0x10,0x61,0xa2,0xb4,0x12,0x73,\n-0x61,0x72,0xa3,0xb4,3,0x64,0x78,0x65,0x94,0x6e,0xa2,0x42,0x72,1,0x63,0xa3,\n-0x8d,0x6f,0xa2,0x56,0x13,0x69,0x74,0x69,0x63,1,0x63,0x3c,0x68,0x19,0x69,0x65,\n-0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0x56,0x15,0x75,0x72,0x73,0x69,0x76,\n-0x65,0xa3,0x8d,1,0x65,0x26,0x66,0xa3,0xb5,0x16,0x66,0x61,0x69,0x64,0x72,0x69,\n-0x6e,0xa3,0xb5,0x17,0x74,0x65,0x69,0x6d,0x61,0x79,0x65,0x6b,0xa3,0x73,0x10,0x64,\n-0xa2,0x8c,0x17,0x65,0x6b,0x69,0x6b,0x61,0x6b,0x75,0x69,0xa3,0x8c,0x11,0x61,0x6f,\n-0xa3,0x5c,5,0x6f,0x14,0x6f,0x30,0x70,0x36,0x74,0x11,0x68,0x69,0xa3,0x78,0x11,\n-0x72,0x65,0xa3,0x77,0x11,0x65,0x6c,0xa3,0x8a,0x61,0x2e,0x68,0x98,0x6e,0x11,0x64,\n-0x61,0x4b,4,0x69,0x3c,0x6c,0x44,0x6e,0x48,0x74,0x56,0x79,0x13,0x61,0x68,0x6c,\n-0x69,0xa3,0x4f,0x12,0x74,0x68,0x69,0xa3,0x78,0x10,0x69,0xa3,0x4f,1,0x61,0x4d,\n-0x6e,0x12,0x61,0x64,0x61,0x4b,0x14,0x61,0x6b,0x61,0x6e,0x61,0x4c,0x19,0x6f,0x72,\n-0x68,0x69,0x72,0x61,0x67,0x61,0x6e,0x61,0x8d,3,0x61,0x3c,0x6d,0x4e,0x6f,0x5a,\n-0x75,0x15,0x64,0x61,0x77,0x61,0x64,0x69,0xa3,0x91,0x10,0x72,0x92,0x15,0x6f,0x73,\n-0x68,0x74,0x68,0x69,0x93,1,0x65,0x24,0x72,0x4f,0x10,0x72,0x4f,0x10,0x6a,0xa2,\n-0x9d,0x11,0x6b,0x69,0xa3,0x9d,4,0x61,0x5c,0x65,0x90,0x69,0xa0,0x6f,0xa2,0x5d,\n-0x79,1,0x63,0x34,0x64,0x10,0x69,0xa2,0x6c,0x11,0x61,0x6e,0xa3,0x6c,0x10,0x69,\n-0xa2,0x6b,0x11,0x61,0x6e,0xa3,0x6b,2,0x6e,0x42,0x6f,0x46,0x74,3,0x66,0xa3,\n-0x50,0x67,0xa3,0x51,0x69,0x24,0x6e,0x53,0x10,0x6e,0x53,0x10,0x61,0xa3,0x6a,0x50,\n-0x10,0x6f,0x51,0x11,0x70,0x63,0xa2,0x52,0x11,0x68,0x61,0xa3,0x52,2,0x6d,0x2e,\n-0x6e,0x36,0x73,0x10,0x75,0xa3,0x83,0x10,0x62,0x80,0x10,0x75,0x81,2,0x61,0xa3,\n-0x53,0x62,0x83,0x65,0x11,0x61,0x72,1,0x61,0xa3,0x53,0x62,0x83,0x11,0x6d,0x61,\n-0xa3,0x8b,0x68,0x6e,0x69,0xa2,0x95,0x6a,2,0x61,0x30,0x70,0x52,0x75,0x11,0x72,\n-0x63,0xa3,0x94,1,0x6d,0x38,0x76,0x10,0x61,0xa2,0x4e,0x13,0x6e,0x65,0x73,0x65,\n-0xa3,0x4e,0x10,0x6f,0xa3,0xad,0x11,0x61,0x6e,0xa3,0x69,6,0x6c,0x1e,0x6c,0x34,\n-0x6d,0x3a,0x72,0x48,0x75,0x11,0x6e,0x67,0xa3,0x4c,0x11,0x75,0x77,0xa3,0x9c,0x10,\n-0x6e,1,0x67,0xa3,0x4b,0x70,0xa3,0xba,0x11,0x6b,0x74,0x8d,0x61,0x3c,0x65,0xa2,\n-0x43,0x69,0x11,0x72,0x61,0x48,0x13,0x67,0x61,0x6e,0x61,0x49,1,0x6e,0x34,0x74,\n-0x10,0x72,0xa2,0xa2,0x11,0x61,0x6e,0xa3,0xa2,0x42,6,0x6f,0xe,0x6f,0x77,0x73,\n-0xa3,0x49,0x74,0xa3,0x4a,0x75,0x12,0x6e,0x6f,0x6f,0x77,0x62,0xa3,0xac,0x67,0x3e,\n-0x69,0x42,0x19,0x66,0x69,0x72,0x6f,0x68,0x69,0x6e,0x67,0x79,0x61,0xa3,0xb6,0x44,\n-0x11,0x75,0x6c,0x45,0x11,0x62,0x72,0x46,0x11,0x65,0x77,0x47,2,0x6d,0x2e,0x6e,\n-0x4a,0x74,0x11,0x61,0x6c,0x5d,0x1c,0x70,0x65,0x72,0x69,0x61,0x6c,0x61,0x72,0x61,\n-0x6d,0x61,0x69,0x63,0xa3,0x74,2,0x64,0x66,0x68,0x6a,0x73,0x1b,0x63,0x72,0x69,\n-0x70,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x70,0x61,1,0x68,0x32,0x72,0x14,0x74,0x68,\n-0x69,0x61,0x6e,0xa3,0x7d,0x13,0x6c,0x61,0x76,0x69,0xa3,0x7a,0x10,0x73,0xa3,0x4d,\n-0x15,0x65,0x72,0x69,0x74,0x65,0x64,0x23,0x64,0xc0,0xf9,0x64,0xa2,0x7a,0x65,0xa2,\n-0xad,0x67,4,0x65,0x82,0x6c,0x9a,0x6f,0xa2,0x46,0x72,0xa2,0x55,0x75,2,0x6a,\n-0x3c,0x6e,0x4e,0x72,1,0x6d,0x24,0x75,0x41,0x13,0x75,0x6b,0x68,0x69,0x41,1,\n-0x61,0x24,0x72,0x3f,0x13,0x72,0x61,0x74,0x69,0x3f,0x18,0x6a,0x61,0x6c,0x61,0x67,\n-0x6f,0x6e,0x64,0x69,0xa3,0xb3,0x10,0x6f,1,0x6b,0xa3,0x48,0x72,0x38,0x13,0x67,\n-0x69,0x61,0x6e,0x39,0x11,0x61,0x67,0x90,0x15,0x6f,0x6c,0x69,0x74,0x69,0x63,0x91,\n-1,0x6e,0x30,0x74,0x10,0x68,0x3a,0x11,0x69,0x63,0x3b,1,0x67,0xa3,0xb3,0x6d,\n-0xa3,0xaf,1,0x61,0x32,0x65,1,0x65,0x24,0x6b,0x3d,0x10,0x6b,0x3d,0x10,0x6e,\n-0xa2,0x89,0x12,0x74,0x68,0x61,0xa3,0x89,3,0x65,0x42,0x6f,0x68,0x73,0x76,0x75,\n-0x11,0x70,0x6c,0xa2,0x87,0x13,0x6f,0x79,0x61,0x6e,0xa3,0x87,1,0x73,0x38,0x76,\n-0x10,0x61,0x34,0x15,0x6e,0x61,0x67,0x61,0x72,0x69,0x35,0x13,0x65,0x72,0x65,0x74,\n-0x33,0x11,0x67,0x72,0xa2,0xb2,0x10,0x61,0xa3,0xb2,0x11,0x72,0x74,0x33,2,0x67,\n-0x3a,0x6c,0x72,0x74,0x11,0x68,0x69,0x36,0x13,0x6f,0x70,0x69,0x63,0x37,0x10,0x79,\n-2,0x64,0xa3,0x45,0x68,0xa3,0x46,0x70,0xa2,0x47,0x1e,0x74,0x69,0x61,0x6e,0x68,\n-0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0x47,1,0x62,0x36,0x79,\n-0x10,0x6d,0xa2,0xb9,0x12,0x61,0x69,0x63,0xa3,0xb9,0x10,0x61,0xa2,0x88,0x12,0x73,\n-0x61,0x6e,0xa3,0x88,0x61,0xa2,0xa2,0x62,0xa4,7,0x63,6,0x6f,0x3d,0x6f,0x5a,\n-0x70,0x76,0x75,0x7a,0x79,1,0x70,0x3e,0x72,2,0x69,0x2a,0x6c,0x31,0x73,0xa3,\n-0x44,0x13,0x6c,0x6c,0x69,0x63,0x31,0x13,0x72,0x69,0x6f,0x74,0x7f,1,0x6d,0x30,\n-0x70,0x10,0x74,0x2e,0x11,0x69,0x63,0x2f,0x12,0x6d,0x6f,0x6e,0x21,0x11,0x72,0x74,\n-0x7f,0x16,0x6e,0x65,0x69,0x66,0x6f,0x72,0x6d,0xa3,0x65,0x61,0x32,0x68,0xa2,0x41,\n-0x69,0x11,0x72,0x74,0xa3,0x43,3,0x6b,0x4c,0x6e,0x50,0x72,0x76,0x75,0x1d,0x63,\n-0x61,0x73,0x69,0x61,0x6e,0x61,0x6c,0x62,0x61,0x6e,0x69,0x61,0x6e,0xa3,0x9f,0x10,\n-0x6d,0xa3,0x76,1,0x61,0x24,0x73,0x71,0x1d,0x64,0x69,0x61,0x6e,0x61,0x62,0x6f,\n-0x72,0x69,0x67,0x69,0x6e,0x61,0x6c,0x71,0x10,0x69,0xa2,0x68,0x11,0x61,0x6e,0xa3,\n-0x68,1,0x61,0x34,0x65,0x10,0x72,0x2c,0x13,0x6f,0x6b,0x65,0x65,0x2d,1,0x6b,\n-0x26,0x6d,0xa3,0x42,0x11,0x6d,0x61,0xa3,0x76,6,0x68,0x4a,0x68,0x48,0x6e,0x4e,\n-0x72,0x76,0x76,1,0x65,0x2a,0x73,0x10,0x74,0xa3,0x75,0x13,0x73,0x74,0x61,0x6e,\n-0xa3,0x75,0x11,0x6f,0x6d,0xa3,0xa1,0x11,0x61,0x74,0x1f,0x6f,0x6c,0x69,0x61,0x6e,\n-0x68,0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0x9c,1,0x61,0x3e,\n-0x6d,2,0x65,0x2a,0x69,0xa3,0x74,0x6e,0x27,0x13,0x6e,0x69,0x61,0x6e,0x27,0x10,\n-0x62,0x24,0x11,0x69,0x63,0x25,0x64,0x30,0x66,0x44,0x67,0x11,0x68,0x62,0xa3,0x9f,\n-0x10,0x6c,1,0x61,0x26,0x6d,0xa3,0xa7,0x10,0x6d,0xa3,0xa7,0x11,0x61,0x6b,0xa3,\n-0x93,6,0x6c,0x3c,0x6c,0x52,0x6f,0x56,0x72,0x66,0x75,1,0x67,0x30,0x68,1,\n-0x64,0x79,0x69,0x10,0x64,0x79,0x10,0x69,0x8e,0x13,0x6e,0x65,0x73,0x65,0x8f,0x11,\n-0x69,0x73,0xa1,0x11,0x70,0x6f,0x2a,0x13,0x6d,0x6f,0x66,0x6f,0x2b,0x10,0x61,1,\n-0x68,0x2e,0x69,0x7c,0x12,0x6c,0x6c,0x65,0x7d,0xa2,0x41,0x11,0x6d,0x69,0xa3,0x41,\n-0x61,0x48,0x65,0x9c,0x68,1,0x61,0x2a,0x6b,0x10,0x73,0xa3,0xa8,0x15,0x69,0x6b,\n-0x73,0x75,0x6b,0x69,0xa3,0xa8,3,0x6c,0x3a,0x6d,0x48,0x73,0x54,0x74,1,0x61,\n-0x24,0x6b,0x9f,0x10,0x6b,0x9f,0x10,0x69,0x9c,0x13,0x6e,0x65,0x73,0x65,0x9d,0x10,\n-0x75,0xa2,0x82,0x10,0x6d,0xa3,0x82,0x10,0x73,0xa2,0x86,0x13,0x61,0x76,0x61,0x68,\n-0xa3,0x86,0x11,0x6e,0x67,0x28,0x12,0x61,0x6c,0x69,0x29,3,0x6c,0x42,0x6e,0x90,\n-0x74,0xa2,0x46,0x76,0x24,0x17,0x6f,0x77,0x65,0x6c,0x6a,0x61,0x6d,0x6f,0x25,0x22,\n-1,0x65,0x54,0x76,0x28,1,0x73,0x38,0x74,0x2a,0x17,0x73,0x79,0x6c,0x6c,0x61,\n-0x62,0x6c,0x65,0x2b,0x16,0x79,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x29,0x18,0x61,0x64,\n-0x69,0x6e,0x67,0x6a,0x61,0x6d,0x6f,0x23,1,0x61,0x21,0x6f,0x1a,0x74,0x61,0x70,\n-0x70,0x6c,0x69,0x63,0x61,0x62,0x6c,0x65,0x21,0x26,0x1a,0x72,0x61,0x69,0x6c,0x69,\n-0x6e,0x67,0x6a,0x61,0x6d,0x6f,0x27,1,0x6e,0x2c,0x79,0x22,0x11,0x65,0x73,0x23,\n-0x20,0x10,0x6f,0x21,1,0x6e,0x2c,0x79,0x22,0x11,0x65,0x73,0x23,0x20,0x10,0x6f,\n-0x21,2,0x6d,0x30,0x6e,0x3a,0x79,0x22,0x11,0x65,0x73,0x23,0x24,0x13,0x61,0x79,\n-0x62,0x65,0x25,0x20,0x10,0x6f,0x21,2,0x6d,0x30,0x6e,0x3a,0x79,0x22,0x11,0x65,\n-0x73,0x23,0x24,0x13,0x61,0x79,0x62,0x65,0x25,0x20,0x10,0x6f,0x21,0xb,0x72,0x39,\n-0x76,0xc,0x76,0x33,0x78,0x2a,0x7a,0x11,0x77,0x6a,0x43,0x10,0x78,0x21,0x72,0x28,\n-0x73,0x50,0x74,0x31,1,0x65,0x24,0x69,0x39,0x1e,0x67,0x69,0x6f,0x6e,0x61,0x6c,\n-0x69,0x6e,0x64,0x69,0x63,0x61,0x74,0x6f,0x72,0x39,1,0x6d,0x35,0x70,0x18,0x61,\n-0x63,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,0x35,0x6c,0x1f,0x6c,0x3c,0x6f,0x4a,0x70,\n-1,0x70,0x37,0x72,0x14,0x65,0x70,0x65,0x6e,0x64,0x37,0x28,1,0x66,0x2b,0x76,\n-0x2c,0x10,0x74,0x2f,0x13,0x74,0x68,0x65,0x72,0x21,0x63,0x4c,0x65,0x64,0x67,1,\n-0x61,0x3a,0x6c,0x19,0x75,0x65,0x61,0x66,0x74,0x65,0x72,0x7a,0x77,0x6a,0x41,0x10,\n-0x7a,0x41,2,0x6e,0x23,0x6f,0x24,0x72,0x25,0x14,0x6e,0x74,0x72,0x6f,0x6c,0x23,\n-2,0x62,0x34,0x6d,0x4e,0x78,0x26,0x13,0x74,0x65,0x6e,0x64,0x27,0x3a,1,0x61,\n-0x24,0x67,0x3d,0x11,0x73,0x65,0x3a,0x12,0x67,0x61,0x7a,0x3d,0x3e,0x16,0x6f,0x64,\n-0x69,0x66,0x69,0x65,0x72,0x3f,9,0x6e,0x4a,0x6e,0x34,0x6f,0x44,0x73,0x60,0x75,\n-0x94,0x78,0x10,0x78,0x21,0x10,0x75,0x2a,0x14,0x6d,0x65,0x72,0x69,0x63,0x2b,1,\n-0x6c,0x2c,0x74,0x12,0x68,0x65,0x72,0x21,0x14,0x65,0x74,0x74,0x65,0x72,0x2d,3,\n-0x63,0x36,0x65,0x46,0x70,0x31,0x74,0x32,0x12,0x65,0x72,0x6d,0x33,0x3c,0x16,0x6f,\n-0x6e,0x74,0x69,0x6e,0x75,0x65,0x3d,0x2e,0x10,0x70,0x2f,0x10,0x70,0x34,0x12,0x70,\n-0x65,0x72,0x35,0x61,0x46,0x63,0x52,0x65,0x64,0x66,0x72,0x6c,2,0x65,0x2d,0x66,\n-0x3b,0x6f,0x28,0x12,0x77,0x65,0x72,0x29,0x10,0x74,0x22,0x12,0x65,0x72,0x6d,0x23,\n-1,0x6c,0x24,0x72,0x37,0x24,0x12,0x6f,0x73,0x65,0x25,0x10,0x78,0x38,0x13,0x74,\n-0x65,0x6e,0x64,0x39,0x10,0x6f,0x26,0x13,0x72,0x6d,0x61,0x74,0x27,0,0x10,0x6c,\n-0x88,0x72,0x40,0x72,0x36,0x73,0x5e,0x77,0x7a,0x78,0x8a,0x7a,0x11,0x77,0x6a,0x4b,\n-1,0x65,0x24,0x69,0x3b,0x1e,0x67,0x69,0x6f,0x6e,0x61,0x6c,0x69,0x6e,0x64,0x69,\n-0x63,0x61,0x74,0x6f,0x72,0x3b,1,0x69,0x24,0x71,0x3f,0x18,0x6e,0x67,0x6c,0x65,\n-0x71,0x75,0x6f,0x74,0x65,0x3f,0x17,0x73,0x65,0x67,0x73,0x70,0x61,0x63,0x65,0x4d,\n-0x10,0x78,0x21,0x6c,0x36,0x6d,0x3c,0x6e,0x76,0x6f,0x13,0x74,0x68,0x65,0x72,0x21,\n-1,0x65,0x23,0x66,0x35,3,0x62,0x37,0x69,0x28,0x6c,0x29,0x6e,0x2b,0x10,0x64,\n-1,0x6c,0x34,0x6e,0x11,0x75,0x6d,0x2a,0x12,0x6c,0x65,0x74,0x37,0x14,0x65,0x74,\n-0x74,0x65,0x72,0x29,2,0x65,0x36,0x6c,0x39,0x75,0x2c,0x14,0x6d,0x65,0x72,0x69,\n-0x63,0x2d,0x14,0x77,0x6c,0x69,0x6e,0x65,0x39,0x66,0x3f,0x66,0x40,0x67,0x4e,0x68,\n-0x70,0x6b,0x10,0x61,0x26,0x15,0x74,0x61,0x6b,0x61,0x6e,0x61,0x27,0x10,0x6f,0x24,\n-0x13,0x72,0x6d,0x61,0x74,0x25,1,0x61,0x3a,0x6c,0x19,0x75,0x65,0x61,0x66,0x74,\n-0x65,0x72,0x7a,0x77,0x6a,0x49,0x10,0x7a,0x49,1,0x65,0x24,0x6c,0x3d,0x19,0x62,\n-0x72,0x65,0x77,0x6c,0x65,0x74,0x74,0x65,0x72,0x3d,0x61,0x86,0x63,0x92,0x64,0x94,\n-0x65,2,0x62,0x44,0x6d,0x5e,0x78,0x2e,0x13,0x74,0x65,0x6e,0x64,0x32,0x15,0x6e,\n-0x75,0x6d,0x6c,0x65,0x74,0x2f,0x42,1,0x61,0x24,0x67,0x45,0x11,0x73,0x65,0x42,\n-0x12,0x67,0x61,0x7a,0x45,0x46,0x16,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,0x47,0x15,\n-0x6c,0x65,0x74,0x74,0x65,0x72,0x23,0x10,0x72,0x31,1,0x6f,0x24,0x71,0x41,0x18,\n-0x75,0x62,0x6c,0x65,0x71,0x75,0x6f,0x74,0x65,0x41,2,0x63,0x32,0x6e,0x3c,0x6f,\n-0x22,0x12,0x70,0x65,0x6e,0x23,0x24,0x13,0x6c,0x6f,0x73,0x65,0x25,0x20,0x12,0x6f,\n-0x6e,0x65,0x21,6,0x6f,0x5c,0x6f,0x4a,0x72,0x5c,0x74,0x64,0x76,0x1d,0x69,0x73,\n-0x75,0x61,0x6c,0x6f,0x72,0x64,0x65,0x72,0x6c,0x65,0x66,0x74,0x3d,0x18,0x76,0x65,\n-0x72,0x73,0x74,0x72,0x75,0x63,0x6b,0x2d,0x13,0x69,0x67,0x68,0x74,0x2f,0x11,0x6f,\n-0x70,0x30,0x12,0x61,0x6e,0x64,2,0x62,0x32,0x6c,0x50,0x72,0x13,0x69,0x67,0x68,\n-0x74,0x3b,0x14,0x6f,0x74,0x74,0x6f,0x6d,0x32,0x17,0x61,0x6e,0x64,0x72,0x69,0x67,\n-0x68,0x74,0x35,0x12,0x65,0x66,0x74,0x36,0x17,0x61,0x6e,0x64,0x72,0x69,0x67,0x68,\n-0x74,0x39,0x62,0x2c,0x6c,0x5c,0x6e,0x10,0x61,0x21,0x14,0x6f,0x74,0x74,0x6f,0x6d,\n-0x22,0x12,0x61,0x6e,0x64,1,0x6c,0x2e,0x72,0x13,0x69,0x67,0x68,0x74,0x27,0x12,\n-0x65,0x66,0x74,0x25,0x12,0x65,0x66,0x74,0x28,0x17,0x61,0x6e,0x64,0x72,0x69,0x67,\n-0x68,0x74,0x2b,0xd,0x6e,0xaa,0x72,0x70,0x72,0x92,0x73,0xa2,0x46,0x74,0xa2,0x54,\n-0x76,1,0x69,0x60,0x6f,0x12,0x77,0x65,0x6c,0x62,1,0x64,0x3a,0x69,0x19,0x6e,\n-0x64,0x65,0x70,0x65,0x6e,0x64,0x65,0x6e,0x74,0x67,0x17,0x65,0x70,0x65,0x6e,0x64,\n-0x65,0x6e,0x74,0x65,1,0x72,0x2e,0x73,0x13,0x61,0x72,0x67,0x61,0x61,0x12,0x61,\n-0x6d,0x61,0x5f,0x1d,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x73,0x68,0x69,0x66,0x74,\n-0x65,0x72,0x57,0x1e,0x79,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x6d,0x6f,0x64,0x69,0x66,\n-0x69,0x65,0x72,0x59,0x12,0x6f,0x6e,0x65,1,0x6c,0x2c,0x6d,0x12,0x61,0x72,0x6b,\n-0x5d,0x14,0x65,0x74,0x74,0x65,0x72,0x5b,0x6e,0x3c,0x6f,0x7c,0x70,0x18,0x75,0x72,\n-0x65,0x6b,0x69,0x6c,0x6c,0x65,0x72,0x55,1,0x6f,0x4c,0x75,1,0x6b,0x3c,0x6d,\n-0x12,0x62,0x65,0x72,0x50,0x15,0x6a,0x6f,0x69,0x6e,0x65,0x72,0x53,0x11,0x74,0x61,\n-0x4f,0x16,0x6e,0x6a,0x6f,0x69,0x6e,0x65,0x72,0x4d,0x13,0x74,0x68,0x65,0x72,0x21,\n-0x67,0x3e,0x67,0x4a,0x69,0x64,0x6a,0x82,0x6d,0x1d,0x6f,0x64,0x69,0x66,0x79,0x69,\n-0x6e,0x67,0x6c,0x65,0x74,0x74,0x65,0x72,0x4b,0x1c,0x65,0x6d,0x69,0x6e,0x61,0x74,\n-0x69,0x6f,0x6e,0x6d,0x61,0x72,0x6b,0x45,0x1e,0x6e,0x76,0x69,0x73,0x69,0x62,0x6c,\n-0x65,0x73,0x74,0x61,0x63,0x6b,0x65,0x72,0x47,0x14,0x6f,0x69,0x6e,0x65,0x72,0x49,\n-0x61,0xa2,0xba,0x62,0xa2,0xc0,0x63,1,0x61,0xa2,0xa2,0x6f,0x16,0x6e,0x73,0x6f,\n-0x6e,0x61,0x6e,0x74,0x2a,8,0x6b,0x67,0x6b,0x48,0x6d,0x52,0x70,0x5c,0x73,0xa2,\n-0x42,0x77,0x19,0x69,0x74,0x68,0x73,0x74,0x61,0x63,0x6b,0x65,0x72,0x43,0x14,0x69,\n-0x6c,0x6c,0x65,0x72,0x35,0x14,0x65,0x64,0x69,0x61,0x6c,0x37,1,0x6c,0x52,0x72,\n-0x10,0x65,1,0x63,0x2e,0x66,0x13,0x69,0x78,0x65,0x64,0x3d,0x19,0x65,0x64,0x69,\n-0x6e,0x67,0x72,0x65,0x70,0x68,0x61,0x3b,0x18,0x61,0x63,0x65,0x68,0x6f,0x6c,0x64,\n-0x65,0x72,0x39,0x10,0x75,1,0x62,0x3e,0x63,0x1b,0x63,0x65,0x65,0x64,0x69,0x6e,\n-0x67,0x72,0x65,0x70,0x68,0x61,0x41,0x15,0x6a,0x6f,0x69,0x6e,0x65,0x64,0x3f,0x64,\n-0x4c,0x66,0x52,0x68,0x5a,0x69,0x1e,0x6e,0x69,0x74,0x69,0x61,0x6c,0x70,0x6f,0x73,\n-0x74,0x66,0x69,0x78,0x65,0x64,0x33,0x12,0x65,0x61,0x64,0x2d,0x13,0x69,0x6e,0x61,\n-0x6c,0x2f,0x18,0x65,0x61,0x64,0x6c,0x65,0x74,0x74,0x65,0x72,0x31,0x1d,0x6e,0x74,\n-0x69,0x6c,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x6d,0x61,0x72,0x6b,0x29,0x16,0x76,0x61,\n-0x67,0x72,0x61,0x68,0x61,0x23,1,0x69,0x4a,0x72,0x10,0x61,0x1f,0x68,0x6d,0x69,\n-0x6a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x6e,0x75,0x6d,0x62,0x65,0x72,0x27,0x12,0x6e,\n-0x64,0x75,0x25,2,0x72,0x38,0x74,0x46,0x75,0x26,0x15,0x70,0x72,0x69,0x67,0x68,\n-0x74,0x27,0x20,0x15,0x6f,0x74,0x61,0x74,0x65,0x64,0x21,1,0x72,0x24,0x75,0x25,\n-0x22,0x18,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,1,0x72,0x32,0x75,0x15,\n-0x70,0x72,0x69,0x67,0x68,0x74,0x25,0x15,0x6f,0x74,0x61,0x74,0x65,0x64,0x23,0xd,\n-0x6e,0xc1,0x86,0x73,0xa8,0x73,0x4c,0x74,0xa2,0x76,0x75,0xa2,0x83,0x7a,0xd8,0x70,\n-0,2,0x6c,0xd9,0x20,0,0x70,0xd9,0x40,0,0x73,0xc3,0,0xfe,0xf,0,\n-0,0,7,0x6f,0x3c,0x6f,0xff,8,0,0,0,0x70,0x3a,0x75,0x6e,0x79,\n-0x13,0x6d,0x62,0x6f,0x6c,0xff,0xf,0,0,0,0x11,0x61,0x63,1,0x65,0x34,\n-0x69,0x15,0x6e,0x67,0x6d,0x61,0x72,0x6b,0xa5,0,0x18,0x73,0x65,0x70,0x61,0x72,\n-0x61,0x74,0x6f,0x72,0xc3,0,0x16,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0xe1,0,\n-0,0x63,0xff,2,0,0,0,0x65,0x38,0x6b,0xff,4,0,0,0,0x6d,\n-0xff,1,0,0,0,0x16,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0xd9,0x70,0,\n-0x1d,0x69,0x74,0x6c,0x65,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x31,\n-1,0x6e,0x40,0x70,0x1c,0x70,0x65,0x72,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,\n-0x65,0x72,0x25,0x17,0x61,0x73,0x73,0x69,0x67,0x6e,0x65,0x64,0x23,0x6e,0xa2,0x69,\n-0x6f,0xa2,0x89,0x70,0xfe,0x30,0xf8,0,0,9,0x69,0x33,0x69,0xff,0x10,0,\n-0,0,0x6f,0xfd,0x80,0,0,0x72,0x54,0x73,0xf9,0,0,0x75,0x12,0x6e,\n-0x63,0x74,0xfe,0x30,0xf8,0,0,0x15,0x75,0x61,0x74,0x69,0x6f,0x6e,0xff,0x30,\n-0xf8,0,0,0x17,0x69,0x76,0x61,0x74,0x65,0x75,0x73,0x65,0xdd,0,0,0x61,\n-0x48,0x63,0xfd,0x40,0,0,0x64,0xe9,0,0,0x65,0xfd,0x20,0,0,0x66,\n-0xff,0x20,0,0,0,0x1f,0x72,0x61,0x67,0x72,0x61,0x70,0x68,0x73,0x65,0x70,\n-0x61,0x72,0x61,0x74,0x6f,0x72,0xd9,0x40,0,0xbe,0,3,0x64,0xa7,0,0x6c,\n-0xab,0,0x6f,0x30,0x75,0x13,0x6d,0x62,0x65,0x72,0xbf,0,0xb2,0,0x1b,0x6e,\n-0x73,0x70,0x61,0x63,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,0xa1,1,0x70,0x92,0x74,\n-0x12,0x68,0x65,0x72,0xe6,0x80,1,3,0x6c,0x40,0x6e,0x4a,0x70,0x56,0x73,0x14,\n-0x79,0x6d,0x62,0x6f,0x6c,0xff,8,0,0,0,0x14,0x65,0x74,0x74,0x65,0x72,\n-0x61,0x14,0x75,0x6d,0x62,0x65,0x72,0xb3,0,0x19,0x75,0x6e,0x63,0x74,0x75,0x61,\n-0x74,0x69,0x6f,0x6e,0xfd,0x80,0,0,0x1c,0x65,0x6e,0x70,0x75,0x6e,0x63,0x74,\n-0x75,0x61,0x74,0x69,0x6f,0x6e,0xf9,0,0,0x66,0xc0,0xc4,0x66,0xa2,0x47,0x69,\n-0xa2,0x64,0x6c,0xa2,0x79,0x6d,0xa4,0xc0,4,0x61,0x6c,0x63,0xa5,0,0x65,0xa3,\n-0x80,0x6e,0xa1,0x6f,0x15,0x64,0x69,0x66,0x69,0x65,0x72,1,0x6c,0x38,0x73,0x14,\n-0x79,0x6d,0x62,0x6f,0x6c,0xff,4,0,0,0,0x14,0x65,0x74,0x74,0x65,0x72,\n-0x41,1,0x72,0x3c,0x74,0x16,0x68,0x73,0x79,0x6d,0x62,0x6f,0x6c,0xff,1,0,\n-0,0,0x10,0x6b,0xa5,0xc0,1,0x69,0x32,0x6f,0x13,0x72,0x6d,0x61,0x74,0xdb,\n-0,0,0x1d,0x6e,0x61,0x6c,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,\n-0x6e,0xff,0x20,0,0,0,0x10,0x6e,0x1f,0x69,0x74,0x69,0x61,0x6c,0x70,0x75,\n-0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xff,0x10,0,0,0,0x9c,7,\n-0x6d,0x18,0x6d,0x41,0x6f,0x28,0x74,0x31,0x75,0x25,0x60,0x1c,0x77,0x65,0x72,0x63,\n-0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x29,0x63,0x3d,0x65,0x28,0x69,0x42,\n-0x6c,0x29,0x13,0x74,0x74,0x65,0x72,0x9c,0x15,0x6e,0x75,0x6d,0x62,0x65,0x72,0xab,\n-0,0x1a,0x6e,0x65,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0xd9,0x20,0,\n-0x63,0x46,0x64,0xa2,0x96,0x65,0x1b,0x6e,0x63,0x6c,0x6f,0x73,0x69,0x6e,0x67,0x6d,\n-0x61,0x72,0x6b,0xa3,0x80,0xe6,0x80,1,7,0x6e,0x57,0x6e,0x52,0x6f,0x5e,0x73,\n-0xe1,0,0,0x75,0x1b,0x72,0x72,0x65,0x6e,0x63,0x79,0x73,0x79,0x6d,0x62,0x6f,\n-0x6c,0xff,2,0,0,0,0x22,0x12,0x74,0x72,0x6c,0xd9,0x80,0,0xdc,0,\n-0,1,0x6d,0x62,0x6e,1,0x6e,0x30,0x74,0x12,0x72,0x6f,0x6c,0xd9,0x80,0,\n-0x1f,0x65,0x63,0x74,0x6f,0x72,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,\n-0x6e,0xfd,0x40,0,0,0x19,0x62,0x69,0x6e,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,\n-0xa5,0xc0,0x61,0x58,0x63,0xd9,0x80,0,0x66,0xdb,0,0,0x6c,0x1d,0x6f,0x73,\n-0x65,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xfd,0x20,0,0,\n-0x18,0x73,0x65,0x64,0x6c,0x65,0x74,0x74,0x65,0x72,0x3d,2,0x61,0x32,0x65,0x50,\n-0x69,0x12,0x67,0x69,0x74,0xa7,0,0x1c,0x73,0x68,0x70,0x75,0x6e,0x63,0x74,0x75,\n-0x61,0x74,0x69,0x6f,0x6e,0xe9,0,0,0x1a,0x63,0x69,0x6d,0x61,0x6c,0x6e,0x75,\n-0x6d,0x62,0x65,0x72,0xa7,0\n+0x5f,0x32,0x61,0x10,0x34,0xa3,0x54,0xa2,0xe6,3,0x62,0xa0,0x6c,0xa3,0xe4,0x72,\n+0xa3,0xe8,0x74,2,0x61,0x74,0x62,0x7c,0x74,0x14,0x61,0x63,0x68,0x65,0x64,1,\n+0x61,0x3e,0x62,0x13,0x65,0x6c,0x6f,0x77,0xa2,0xca,0x13,0x6c,0x65,0x66,0x74,0xa3,\n+0xc8,0x13,0x62,0x6f,0x76,0x65,0xa2,0xd6,0x14,0x72,0x69,0x67,0x68,0x74,0xa3,0xd8,\n+0xa2,0xd6,0x10,0x72,0xa3,0xd8,0xa2,0xca,0x10,0x6c,0xa3,0xc8,0x12,0x6f,0x76,0x65,\n+0xa2,0xe6,1,0x6c,0x30,0x72,0x13,0x69,0x67,0x68,0x74,0xa3,0xe8,0x12,0x65,0x66,\n+0x74,0xa3,0xe4,0xa2,0xdc,2,0x65,0x2c,0x6c,0xa3,0xda,0x72,0xa3,0xde,0x12,0x6c,\n+0x6f,0x77,0xa2,0xdc,1,0x6c,0x30,0x72,0x13,0x69,0x67,0x68,0x74,0xa3,0xde,0x12,\n+0x65,0x66,0x74,0xa3,0xda,0xb,0x6e,0xc0,0xca,0x72,0x5f,0x72,0x46,0x73,0xa2,0x48,\n+0x77,1,0x68,0x24,0x73,0x33,0x17,0x69,0x74,0x65,0x73,0x70,0x61,0x63,0x65,0x33,\n+0x22,1,0x69,0x30,0x6c,2,0x65,0x3d,0x69,0x4b,0x6f,0x3f,0x18,0x67,0x68,0x74,\n+0x74,0x6f,0x6c,0x65,0x66,0x74,0x22,2,0x65,0x38,0x69,0x48,0x6f,0x16,0x76,0x65,\n+0x72,0x72,0x69,0x64,0x65,0x3f,0x17,0x6d,0x62,0x65,0x64,0x64,0x69,0x6e,0x67,0x3d,\n+0x15,0x73,0x6f,0x6c,0x61,0x74,0x65,0x4b,0x30,0x1e,0x65,0x67,0x6d,0x65,0x6e,0x74,\n+0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0x31,0x6e,0xa2,0x41,0x6f,0xa2,0x53,\n+0x70,2,0x61,0x66,0x64,0x86,0x6f,0x1b,0x70,0x64,0x69,0x72,0x65,0x63,0x74,0x69,\n+0x6f,0x6e,0x61,0x6c,1,0x66,0x32,0x69,0x15,0x73,0x6f,0x6c,0x61,0x74,0x65,0x4d,\n+0x14,0x6f,0x72,0x6d,0x61,0x74,0x41,0x1f,0x72,0x61,0x67,0x72,0x61,0x70,0x68,0x73,\n+0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0x2f,1,0x66,0x41,0x69,0x4d,1,0x6f,\n+0x28,0x73,0x10,0x6d,0x43,0x1b,0x6e,0x73,0x70,0x61,0x63,0x69,0x6e,0x67,0x6d,0x61,\n+0x72,0x6b,0x43,1,0x6e,0x35,0x74,0x19,0x68,0x65,0x72,0x6e,0x65,0x75,0x74,0x72,\n+0x61,0x6c,0x35,0x65,0x88,0x65,0x98,0x66,0xa2,0x6a,0x6c,0x20,1,0x65,0x30,0x72,\n+2,0x65,0x37,0x69,0x49,0x6f,0x39,0x18,0x66,0x74,0x74,0x6f,0x72,0x69,0x67,0x68,\n+0x74,0x20,2,0x65,0x38,0x69,0x48,0x6f,0x16,0x76,0x65,0x72,0x72,0x69,0x64,0x65,\n+0x39,0x17,0x6d,0x62,0x65,0x64,0x64,0x69,0x6e,0x67,0x37,0x15,0x73,0x6f,0x6c,0x61,\n+0x74,0x65,0x49,3,0x6e,0x25,0x73,0x27,0x74,0x29,0x75,0x15,0x72,0x6f,0x70,0x65,\n+0x61,0x6e,2,0x6e,0x3c,0x73,0x46,0x74,0x18,0x65,0x72,0x6d,0x69,0x6e,0x61,0x74,\n+0x6f,0x72,0x29,0x14,0x75,0x6d,0x62,0x65,0x72,0x25,0x17,0x65,0x70,0x61,0x72,0x61,\n+0x74,0x6f,0x72,0x27,1,0x69,0x28,0x73,0x10,0x69,0x47,0x1f,0x72,0x73,0x74,0x73,\n+0x74,0x72,0x6f,0x6e,0x67,0x69,0x73,0x6f,0x6c,0x61,0x74,0x65,0x47,0x61,0x4e,0x62,\n+0x84,0x63,1,0x6f,0x24,0x73,0x2d,0x1c,0x6d,0x6d,0x6f,0x6e,0x73,0x65,0x70,0x61,\n+0x72,0x61,0x74,0x6f,0x72,0x2d,2,0x6c,0x3b,0x6e,0x2b,0x72,0x13,0x61,0x62,0x69,\n+0x63,1,0x6c,0x30,0x6e,0x14,0x75,0x6d,0x62,0x65,0x72,0x2b,0x14,0x65,0x74,0x74,\n+0x65,0x72,0x3b,0x2e,1,0x6e,0x45,0x6f,0x1c,0x75,0x6e,0x64,0x61,0x72,0x79,0x6e,\n+0x65,0x75,0x74,0x72,0x61,0x6c,0x45,0,0x16,0x6d,0xc8,0xc8,0x74,0xc1,0xee,0x77,\n+0x6a,0x77,0x48,0x79,0x70,0x7a,0x1d,0x61,0x6e,0x61,0x62,0x61,0x7a,0x61,0x72,0x73,\n+0x71,0x75,0x61,0x72,0x65,0xa5,0x18,0x10,0x61,1,0x6e,0x36,0x72,0x16,0x61,0x6e,\n+0x67,0x63,0x69,0x74,0x69,0xa3,0xfc,0x12,0x63,0x68,0x6f,0xa5,0x2c,1,0x65,0x88,\n+0x69,2,0x6a,0x3c,0x72,0x68,0x73,0x17,0x79,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x73,\n+0xa3,0x48,0x12,0x69,0x6e,0x67,0xa2,0x74,0x1e,0x68,0x65,0x78,0x61,0x67,0x72,0x61,\n+0x6d,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x74,0x16,0x61,0x64,0x69,0x63,0x61,\n+0x6c,0x73,0xa3,0x49,0x13,0x7a,0x69,0x64,0x69,0xa5,0x34,0x74,0xa2,0x59,0x75,0xa4,\n+0x35,0x76,2,0x61,0x36,0x65,0x7a,0x73,0xa2,0x6c,0x12,0x73,0x75,0x70,0xa3,0x7d,\n+1,0x69,0xa3,0x9f,0x72,0x1e,0x69,0x61,0x74,0x69,0x6f,0x6e,0x73,0x65,0x6c,0x65,\n+0x63,0x74,0x6f,0x72,0x73,0xa2,0x6c,0x19,0x73,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,\n+0x6e,0x74,0xa3,0x7d,1,0x64,0x3c,0x72,0x19,0x74,0x69,0x63,0x61,0x6c,0x66,0x6f,\n+0x72,0x6d,0x73,0xa3,0x91,0x14,0x69,0x63,0x65,0x78,0x74,0xa2,0xaf,0x16,0x65,0x6e,\n+0x73,0x69,0x6f,0x6e,0x73,0xa3,0xaf,4,0x61,0x68,0x65,0xa2,0xad,0x68,0xa2,0xb0,\n+0x69,0xa2,0xb8,0x72,0x1c,0x61,0x6e,0x73,0x70,0x6f,0x72,0x74,0x61,0x6e,0x64,0x6d,\n+0x61,0x70,0xa2,0xcf,0x16,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0xcf,4,0x67,\n+0x7e,0x69,0xa2,0x41,0x6b,0xa2,0x6a,0x6d,0xa2,0x6c,0x6e,0x12,0x67,0x75,0x74,0xa4,\n+0x10,1,0x63,0x40,0x73,0x11,0x75,0x70,0xa4,0x33,0x16,0x70,0x6c,0x65,0x6d,0x65,\n+0x6e,0x74,0xa5,0x33,0x18,0x6f,0x6d,0x70,0x6f,0x6e,0x65,0x6e,0x74,0x73,0xa5,0x11,\n+2,0x61,0x2a,0x62,0x32,0x73,0xa3,0x60,0x12,0x6c,0x6f,0x67,0xa3,0x62,0x13,0x61,\n+0x6e,0x77,0x61,0xa3,0x65,3,0x6c,0x52,0x74,0x56,0x76,0x5e,0x78,0x16,0x75,0x61,\n+0x6e,0x6a,0x69,0x6e,0x67,0xa2,0x7c,0x16,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,\n+0x7c,0x10,0x65,0xa3,0x70,0x12,0x68,0x61,0x6d,0xa3,0xae,0x12,0x69,0x65,0x74,0xa3,\n+0xb7,0x11,0x72,0x69,0xa3,0xdc,0x11,0x69,0x6c,0x48,0x12,0x73,0x75,0x70,0xa4,0x2b,\n+0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0x2b,0x13,0x6c,0x75,0x67,0x75,0x4b,\n+0x10,0x61,1,0x61,0x24,0x69,0x53,0x11,0x6e,0x61,0x3d,2,0x62,0x34,0x66,0x3c,\n+0x72,0x13,0x68,0x75,0x74,0x61,0xa3,0xfb,0x13,0x65,0x74,0x61,0x6e,0x57,0x14,0x69,\n+0x6e,0x61,0x67,0x68,0xa3,0x90,2,0x63,0x82,0x67,0x92,0x6e,0x1f,0x69,0x66,0x69,\n+0x65,0x64,0x63,0x61,0x6e,0x61,0x64,0x69,0x61,0x6e,0x61,0x62,0x6f,0x1f,0x72,0x69,\n+0x67,0x69,0x6e,0x61,0x6c,0x73,0x79,0x6c,0x6c,0x61,0x62,0x69,0x63,0x73,0x62,0x17,\n+0x65,0x78,0x74,0x65,0x6e,0x64,0x65,0x64,0xa3,0xad,0x11,0x61,0x73,0x62,0x12,0x65,\n+0x78,0x74,0xa3,0xad,0x15,0x61,0x72,0x69,0x74,0x69,0x63,0xa3,0x78,0x70,0xc3,0x4b,\n+0x70,0xa6,0x61,0x72,0xa8,0x1d,0x73,7,0x6f,0xc1,0xbe,0x6f,0xa2,0x69,0x70,0xa2,\n+0x85,0x75,0xa2,0xa4,0x79,2,0x6c,0x50,0x6d,0x62,0x72,0x12,0x69,0x61,0x63,0x3a,\n+0x12,0x73,0x75,0x70,0xa4,0x17,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0x17,\n+0x17,0x6f,0x74,0x69,0x6e,0x61,0x67,0x72,0x69,0xa3,0x8f,0x13,0x62,0x6f,0x6c,0x73,\n+1,0x61,0x4c,0x66,0x10,0x6f,0x1f,0x72,0x6c,0x65,0x67,0x61,0x63,0x79,0x63,0x6f,\n+0x6d,0x70,0x75,0x74,0x69,0x6e,0x67,0xa5,0x32,0x1f,0x6e,0x64,0x70,0x69,0x63,0x74,\n+0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0x65,0x78,0x74,1,0x61,0xa5,0x2a,0x65,0x14,\n+0x6e,0x64,0x65,0x64,0x61,0xa5,0x2a,2,0x67,0x34,0x72,0x3e,0x79,0x13,0x6f,0x6d,\n+0x62,0x6f,0xa5,0x16,0x13,0x64,0x69,0x61,0x6e,0xa5,0x23,0x17,0x61,0x73,0x6f,0x6d,\n+0x70,0x65,0x6e,0x67,0xa3,0xda,1,0x61,0x32,0x65,0x14,0x63,0x69,0x61,0x6c,0x73,\n+0xa3,0x56,0x12,0x63,0x69,0x6e,0x1f,0x67,0x6d,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,\n+0x6c,0x65,0x74,0x74,0x65,0x72,0x73,0x2d,2,0x6e,0x48,0x70,0x76,0x74,0x1d,0x74,\n+0x6f,0x6e,0x73,0x69,0x67,0x6e,0x77,0x72,0x69,0x74,0x69,0x6e,0x67,0xa5,6,0x15,\n+0x64,0x61,0x6e,0x65,0x73,0x65,0xa2,0x9b,0x12,0x73,0x75,0x70,0xa2,0xdb,0x16,0x70,\n+0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xdb,4,0x61,0xa2,0xa8,0x65,0x5c,0x6d,0x9e,\n+0x70,0xa2,0x4b,0x73,0x13,0x79,0x6d,0x62,0x6f,0x1f,0x6c,0x73,0x61,0x6e,0x64,0x70,\n+0x69,0x63,0x74,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa5,5,0x10,0x72,1,0x61,\n+0x4e,0x73,0x12,0x63,0x72,0x69,0x1f,0x70,0x74,0x73,0x61,0x6e,0x64,0x73,0x75,0x62,\n+0x73,0x63,0x72,0x69,0x70,0x74,0x73,0x73,0x14,0x6e,0x64,0x73,0x75,0x62,0x73,0x1b,\n+0x61,0x74,0x68,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x73,0xa3,0x6a,1,0x6c,\n+0x40,0x75,1,0x61,0x6e,0x6e,0x17,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xa3,\n+0x8e,0x15,0x65,0x6d,0x65,0x6e,0x74,0x61,1,0x6c,0x50,0x72,0x1e,0x79,0x70,0x72,\n+0x69,0x76,0x61,0x74,0x65,0x75,0x73,0x65,0x61,0x72,0x65,0x61,1,0x61,0xa3,0x6d,\n+0x62,0xa3,0x6e,3,0x61,0x5c,0x6d,0x78,0x70,0xa2,0x41,0x73,0x13,0x79,0x6d,0x62,\n+0x6f,0x1f,0x6c,0x73,0x61,0x6e,0x64,0x70,0x69,0x63,0x74,0x6f,0x67,0x72,0x61,0x70,\n+0x68,0x73,0xa5,5,0x14,0x72,0x72,0x6f,0x77,0x73,2,0x61,0xa3,0x67,0x62,0xa3,\n+0x68,0x63,0xa3,0xfa,0x13,0x61,0x74,0x68,0x65,0x1f,0x6d,0x61,0x74,0x69,0x63,0x61,\n+0x6c,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x73,0xa3,0x6a,0x19,0x75,0x6e,0x63,\n+0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xa3,0x8e,0x61,0x88,0x68,0xa2,0x48,0x69,0xa2,\n+0x71,0x6d,0x12,0x61,0x6c,0x6c,1,0x66,0x46,0x6b,0x15,0x61,0x6e,0x61,0x65,0x78,\n+0x74,0xa4,0x29,0x15,0x65,0x6e,0x73,0x69,0x6f,0x6e,0xa5,0x29,0x12,0x6f,0x72,0x6d,\n+1,0x73,0xa3,0x54,0x76,0x16,0x61,0x72,0x69,0x61,0x6e,0x74,0x73,0xa3,0x54,1,\n+0x6d,0x36,0x75,0x16,0x72,0x61,0x73,0x68,0x74,0x72,0x61,0xa3,0xa1,0x15,0x61,0x72,\n+0x69,0x74,0x61,0x6e,0xa3,0xac,1,0x61,0x52,0x6f,0x13,0x72,0x74,0x68,0x61,0x1f,\n+0x6e,0x64,0x66,0x6f,0x72,0x6d,0x61,0x74,0x63,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x73,\n+0xa3,0xf7,1,0x72,0x2e,0x76,0x12,0x69,0x61,0x6e,0xa3,0x79,0x12,0x61,0x64,0x61,\n+0xa3,0xd9,1,0x64,0x50,0x6e,0x13,0x68,0x61,0x6c,0x61,0x50,0x1d,0x61,0x72,0x63,\n+0x68,0x61,0x69,0x63,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa3,0xf9,0x13,0x64,0x68,\n+0x61,0x6d,0xa3,0xf8,5,0x72,0x35,0x72,0x44,0x73,0x64,0x75,1,0x61,0xa3,0x4e,\n+0x6e,0x17,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x71,0x17,0x69,0x76,0x61,0x74,\n+0x65,0x75,0x73,0x65,0xa2,0x4e,0x13,0x61,0x72,0x65,0x61,0xa3,0x4e,0x1b,0x61,0x6c,\n+0x74,0x65,0x72,0x70,0x61,0x68,0x6c,0x61,0x76,0x69,0xa3,0xf6,0x61,0x40,0x68,0x82,\n+0x6c,0x19,0x61,0x79,0x69,0x6e,0x67,0x63,0x61,0x72,0x64,0x73,0xa3,0xcc,2,0x68,\n+0x38,0x6c,0x4a,0x75,0x15,0x63,0x69,0x6e,0x68,0x61,0x75,0xa3,0xf5,0x17,0x61,0x77,\n+0x68,0x68,0x6d,0x6f,0x6e,0x67,0xa3,0xf3,0x15,0x6d,0x79,0x72,0x65,0x6e,0x65,0xa3,\n+0xf4,1,0x61,0x8e,0x6f,1,0x65,0x74,0x6e,0x16,0x65,0x74,0x69,0x63,0x65,0x78,\n+0x74,0xa2,0x72,1,0x65,0x2c,0x73,0x11,0x75,0x70,0xa3,0x8d,0x15,0x6e,0x73,0x69,\n+0x6f,0x6e,0x73,0xa2,0x72,0x19,0x73,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,\n+0xa3,0x8d,0x15,0x6e,0x69,0x63,0x69,0x61,0x6e,0xa3,0x97,1,0x67,0x3e,0x69,0x13,\n+0x73,0x74,0x6f,0x73,0xa2,0xa6,0x13,0x64,0x69,0x73,0x63,0xa3,0xa6,0x12,0x73,0x70,\n+0x61,0xa3,0x96,1,0x65,0x5c,0x75,1,0x6d,0x2a,0x6e,0x11,0x69,0x63,0x67,0x10,\n+0x69,0xa2,0xc0,0x1d,0x6e,0x75,0x6d,0x65,0x72,0x61,0x6c,0x73,0x79,0x6d,0x62,0x6f,\n+0x6c,0x73,0xa3,0xc0,0x13,0x6a,0x61,0x6e,0x67,0xa3,0xa3,0x6d,0xa2,0xe6,0x6e,0xa8,\n+0x19,0x6f,6,0x70,0x63,0x70,0x56,0x72,0x8a,0x73,0xa2,0x4c,0x74,0x10,0x74,0x1f,\n+0x6f,0x6d,0x61,0x6e,0x73,0x69,0x79,0x61,0x71,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,\n+0xa5,0x28,0x18,0x74,0x69,0x63,0x61,0x6c,0x63,0x68,0x61,0x72,0x1f,0x61,0x63,0x74,\n+0x65,0x72,0x72,0x65,0x63,0x6f,0x67,0x6e,0x69,0x74,0x69,0x6f,0x6e,0x85,1,0x69,\n+0x46,0x6e,0x1e,0x61,0x6d,0x65,0x6e,0x74,0x61,0x6c,0x64,0x69,0x6e,0x67,0x62,0x61,\n+0x74,0x73,0xa3,0xf2,0x11,0x79,0x61,0x47,1,0x61,0x30,0x6d,0x13,0x61,0x6e,0x79,\n+0x61,0xa3,0x7a,0x11,0x67,0x65,0xa5,0xf,0x63,0xa2,0x71,0x67,0xa2,0x71,0x6c,1,\n+0x63,0xa2,0x62,0x64,5,0x70,0x38,0x70,0x36,0x73,0x56,0x74,0x14,0x75,0x72,0x6b,\n+0x69,0x63,0xa3,0xbf,0x11,0x65,0x72,1,0x6d,0x2e,0x73,0x12,0x69,0x61,0x6e,0xa3,\n+0x8c,0x11,0x69,0x63,0xa3,0xf1,0x10,0x6f,1,0x67,0x3a,0x75,0x18,0x74,0x68,0x61,\n+0x72,0x61,0x62,0x69,0x61,0x6e,0xa3,0xbb,0x13,0x64,0x69,0x61,0x6e,0xa5,0x22,0x68,\n+0x42,0x69,0x54,0x6e,0x1a,0x6f,0x72,0x74,0x68,0x61,0x72,0x61,0x62,0x69,0x61,0x6e,\n+0xa3,0xf0,0x17,0x75,0x6e,0x67,0x61,0x72,0x69,0x61,0x6e,0xa5,4,0x14,0x74,0x61,\n+0x6c,0x69,0x63,0xa3,0x58,0x13,0x68,0x69,0x6b,0x69,0xa3,0x9d,0x10,0x72,0x85,0x12,\n+0x68,0x61,0x6d,0x65,6,0x6f,0x86,0x6f,0x6c,0x72,0xa2,0x61,0x75,0xa2,0x62,0x79,\n+0x14,0x61,0x6e,0x6d,0x61,0x72,0x58,0x12,0x65,0x78,0x74,2,0x61,0xa3,0xb6,0x62,\n+0xa3,0xee,0x65,0x13,0x6e,0x64,0x65,0x64,1,0x61,0xa3,0xb6,0x62,0xa3,0xee,1,\n+0x64,0x52,0x6e,0x15,0x67,0x6f,0x6c,0x69,0x61,0x6e,0x6a,0x12,0x73,0x75,0x70,0xa4,\n+0xd,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0xd,0x10,0x69,0xa2,0xec,0x13,\n+0x66,0x69,0x65,0x72,1,0x6c,0x3c,0x74,0x19,0x6f,0x6e,0x65,0x6c,0x65,0x74,0x74,\n+0x65,0x72,0x73,0xa3,0x8a,0x15,0x65,0x74,0x74,0x65,0x72,0x73,0x2d,0x10,0x6f,0xa3,\n+0xed,1,0x6c,0x44,0x73,0x11,0x69,0x63,0xa2,0x5c,0x18,0x61,0x6c,0x73,0x79,0x6d,\n+0x62,0x6f,0x6c,0x73,0xa3,0x5c,0x13,0x74,0x61,0x6e,0x69,0xa5,3,0x61,0xa2,0x9b,\n+0x65,0xa4,0x4c,0x69,1,0x61,0xa2,0x8f,0x73,0x10,0x63,5,0x70,0x18,0x70,0xa2,\n+0x71,0x73,0x36,0x74,0x17,0x65,0x63,0x68,0x6e,0x69,0x63,0x61,0x6c,0x81,0x15,0x79,\n+0x6d,0x62,0x6f,0x6c,0x73,0x8f,0x61,0xa2,0x66,0x65,0x46,0x6d,0x19,0x61,0x74,0x68,\n+0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,1,0x61,0xa3,0x66,0x62,0xa3,0x69,0x17,0x6c,\n+0x6c,0x61,0x6e,0x65,0x6f,0x75,0x73,2,0x6d,0x3a,0x73,0x6c,0x74,0x17,0x65,0x63,\n+0x68,0x6e,0x69,0x63,0x61,0x6c,0x81,0x11,0x61,0x74,0x1f,0x68,0x65,0x6d,0x61,0x74,\n+0x69,0x63,0x61,0x6c,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,1,0x61,0xa3,0x66,0x62,\n+0xa3,0x69,0x15,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x8e,0x12,0x61,0x6e,0x64,1,0x61,\n+0x3c,0x70,0x19,0x69,0x63,0x74,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa3,0xcd,0x14,\n+0x72,0x72,0x6f,0x77,0x73,0xa3,0x73,0x10,0x6f,0xa3,0xd8,7,0x72,0x6f,0x72,0x44,\n+0x73,0x4e,0x74,0x62,0x79,0x19,0x61,0x6e,0x6e,0x75,0x6d,0x65,0x72,0x61,0x6c,0x73,\n+0xa5,0x20,0x13,0x63,0x68,0x65,0x6e,0xa5,0xc,0x18,0x61,0x72,0x61,0x6d,0x67,0x6f,\n+0x6e,0x64,0x69,0xa5,0x14,0x10,0x68,2,0x61,0x3a,0x65,0x4a,0x6f,0x17,0x70,0x65,\n+0x72,0x61,0x74,0x6f,0x72,0x73,0x7f,0x16,0x6c,0x70,0x68,0x61,0x6e,0x75,0x6d,0xa3,\n+0x5d,0x16,0x6d,0x61,0x74,0x69,0x63,0x61,0x6c,1,0x61,0x36,0x6f,0x17,0x70,0x65,\n+0x72,0x61,0x74,0x6f,0x72,0x73,0x7f,0x11,0x6c,0x70,0x1f,0x68,0x61,0x6e,0x75,0x6d,\n+0x65,0x72,0x69,0x63,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x5d,0x68,0x50,0x6b,\n+0x7e,0x6c,0x88,0x6e,1,0x64,0x34,0x69,0x15,0x63,0x68,0x61,0x65,0x61,0x6e,0xa3,\n+0xea,0x12,0x61,0x69,0x63,0xa3,0xc6,1,0x61,0x3e,0x6a,0x12,0x6f,0x6e,0x67,0xa2,\n+0xaa,0x14,0x74,0x69,0x6c,0x65,0x73,0xa3,0xaa,0x13,0x6a,0x61,0x6e,0x69,0xa3,0xe9,\n+0x13,0x61,0x73,0x61,0x72,0xa5,0x1f,0x15,0x61,0x79,0x61,0x6c,0x61,0x6d,0x4f,3,\n+0x64,0x6c,0x65,0x7e,0x6e,0xa2,0x47,0x72,0x14,0x6f,0x69,0x74,0x69,0x63,1,0x63,\n+0x3c,0x68,0x19,0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0xd7,0x15,\n+0x75,0x72,0x73,0x69,0x76,0x65,0xa3,0xd6,0x17,0x65,0x66,0x61,0x69,0x64,0x72,0x69,\n+0x6e,0xa5,0x21,0x17,0x74,0x65,0x69,0x6d,0x61,0x79,0x65,0x6b,0xa2,0xb8,0x12,0x65,\n+0x78,0x74,0xa2,0xd5,0x16,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x73,0xa3,0xd5,0x18,0x64,\n+0x65,0x6b,0x69,0x6b,0x61,0x6b,0x75,0x69,0xa3,0xeb,6,0x6b,0x3b,0x6b,0x56,0x6f,\n+0x5a,0x75,0x64,0x79,0x11,0x69,0x61,0x1f,0x6b,0x65,0x6e,0x67,0x70,0x75,0x61,0x63,\n+0x68,0x75,0x65,0x68,0x6d,0x6f,0x6e,0x67,0xa5,0x27,0x10,0x6f,0xa3,0x92,0x14,0x62,\n+0x6c,0x6f,0x63,0x6b,0x21,1,0x6d,0x2c,0x73,0x11,0x68,0x75,0xa5,0x15,0x17,0x62,\n+0x65,0x72,0x66,0x6f,0x72,0x6d,0x73,0x7b,0x61,0x44,0x62,0x21,0x65,0x10,0x77,1,\n+0x61,0xa5,0xe,0x74,0x14,0x61,0x69,0x6c,0x75,0x65,0xa3,0x8b,1,0x62,0x38,0x6e,\n+0x17,0x64,0x69,0x6e,0x61,0x67,0x61,0x72,0x69,0xa5,0x26,0x15,0x61,0x74,0x61,0x65,\n+0x61,0x6e,0xa3,0xef,0x67,0xc4,0x32,0x6a,0xc1,0xb9,0x6a,0xa2,0xd5,0x6b,0xa2,0xee,\n+0x6c,4,0x61,0x54,0x65,0xa2,0x61,0x69,0xa2,0x78,0x6f,0xa2,0xb7,0x79,1,0x63,\n+0x2e,0x64,0x12,0x69,0x61,0x6e,0xa3,0xa9,0x12,0x69,0x61,0x6e,0xa3,0xa7,1,0x6f,\n+0x55,0x74,0x11,0x69,0x6e,1,0x31,0x82,0x65,0x11,0x78,0x74,4,0x61,0x5c,0x62,\n+0x29,0x63,0xa3,0x94,0x64,0xa3,0x95,0x65,0xa2,0xe7,0x13,0x6e,0x64,0x65,0x64,4,\n+0x61,0x36,0x62,0x29,0x63,0xa3,0x94,0x64,0xa3,0x95,0x65,0xa3,0xe7,0x26,0x18,0x64,\n+0x64,0x69,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x6d,0x24,0x12,0x73,0x75,0x70,0x24,0x16,\n+0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x25,1,0x70,0x42,0x74,0x1d,0x74,0x65,0x72,\n+0x6c,0x69,0x6b,0x65,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x79,0x12,0x63,0x68,0x61,\n+0xa3,0x9c,2,0x6d,0x4e,0x6e,0x54,0x73,0x10,0x75,0xa2,0xb0,0x12,0x73,0x75,0x70,\n+0xa4,0x31,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0x31,0x11,0x62,0x75,0xa3,\n+0x6f,0x12,0x65,0x61,0x72,1,0x61,0xa3,0xe8,0x62,1,0x69,0x38,0x73,0x17,0x79,\n+0x6c,0x6c,0x61,0x62,0x61,0x72,0x79,0xa3,0x75,0x17,0x64,0x65,0x6f,0x67,0x72,0x61,\n+0x6d,0x73,0xa3,0x76,0x1a,0x77,0x73,0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x73,\n+0xa3,0x4d,0x10,0x61,1,0x6d,0x32,0x76,0x14,0x61,0x6e,0x65,0x73,0x65,0xa3,0xb5,\n+0x10,0x6f,0x5c,0x12,0x65,0x78,0x74,1,0x61,0xa3,0xb4,0x62,0xa3,0xb9,1,0x61,\n+0xa2,0x43,0x68,4,0x61,0x40,0x69,0x50,0x6d,0x6e,0x6f,0x86,0x75,0x15,0x64,0x61,\n+0x77,0x61,0x64,0x69,0xa3,0xe6,0x16,0x72,0x6f,0x73,0x68,0x74,0x68,0x69,0xa3,0x89,\n+0x1d,0x74,0x61,0x6e,0x73,0x6d,0x61,0x6c,0x6c,0x73,0x63,0x72,0x69,0x70,0x74,0xa5,\n+0x30,0x11,0x65,0x72,0x68,0x16,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x71,0x12,\n+0x6a,0x6b,0x69,0xa3,0xe5,3,0x69,0x3a,0x6e,0x42,0x74,0xa2,0x51,0x79,0x13,0x61,\n+0x68,0x6c,0x69,0xa3,0xa2,0x12,0x74,0x68,0x69,0xa3,0xc1,3,0x61,0x34,0x62,0x76,\n+0x67,0x7c,0x6e,0x12,0x61,0x64,0x61,0x4d,1,0x65,0x40,0x73,0x11,0x75,0x70,0xa2,\n+0xcb,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xcb,0x11,0x78,0x74,1,0x61,\n+0xa5,0x13,0x65,0x14,0x6e,0x64,0x65,0x64,0x61,0xa5,0x13,0x11,0x75,0x6e,0xa3,0x42,\n+0x11,0x78,0x69,0x96,0x17,0x72,0x61,0x64,0x69,0x63,0x61,0x6c,0x73,0x97,0x14,0x61,\n+0x6b,0x61,0x6e,0x61,0x9e,1,0x65,0x4c,0x70,0x10,0x68,0x1f,0x6f,0x6e,0x65,0x74,\n+0x69,0x63,0x65,0x78,0x74,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x73,0xa3,0x6b,0x11,0x78,\n+0x74,0xa3,0x6b,0x67,0xa2,0xb5,0x68,0xa4,0x84,0x69,3,0x64,0x4c,0x6d,0xa2,0x55,\n+0x6e,0xa2,0x62,0x70,0x13,0x61,0x65,0x78,0x74,0x2a,0x16,0x65,0x6e,0x73,0x69,0x6f,\n+0x6e,0x73,0x2b,1,0x63,0x99,0x65,0x17,0x6f,0x67,0x72,0x61,0x70,0x68,0x69,0x63,\n+1,0x64,0x56,0x73,0x15,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa4,0xb,0x1d,0x61,0x6e,\n+0x64,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xa5,0xb,0x13,0x65,\n+0x73,0x63,0x72,0x1f,0x69,0x70,0x74,0x69,0x6f,0x6e,0x63,0x68,0x61,0x72,0x61,0x63,\n+0x74,0x65,0x72,0x73,0x99,0x1c,0x70,0x65,0x72,0x69,0x61,0x6c,0x61,0x72,0x61,0x6d,\n+0x61,0x69,0x63,0xa3,0xba,1,0x64,0x62,0x73,0x1b,0x63,0x72,0x69,0x70,0x74,0x69,\n+0x6f,0x6e,0x61,0x6c,0x70,0x61,1,0x68,0x32,0x72,0x14,0x74,0x68,0x69,0x61,0x6e,\n+0xa3,0xbd,0x13,0x6c,0x61,0x76,0x69,0xa3,0xbe,0x11,0x69,0x63,1,0x6e,0x3e,0x73,\n+0x1a,0x69,0x79,0x61,0x71,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa5,0x1e,0x19,0x75,\n+0x6d,0x62,0x65,0x72,0x66,0x6f,0x72,0x6d,0x73,0xa3,0xb2,4,0x65,0x74,0x6c,0xa2,\n+0x82,0x6f,0xa2,0x9a,0x72,0xa2,0x9e,0x75,2,0x6a,0x34,0x6e,0x3e,0x72,0x14,0x6d,\n+0x75,0x6b,0x68,0x69,0x43,0x14,0x61,0x72,0x61,0x74,0x69,0x45,0x18,0x6a,0x61,0x6c,\n+0x61,0x67,0x6f,0x6e,0x64,0x69,0xa5,0x1c,1,0x6e,0xa2,0x46,0x6f,1,0x6d,0x6e,\n+0x72,0x13,0x67,0x69,0x61,0x6e,0x5a,1,0x65,0x40,0x73,0x11,0x75,0x70,0xa2,0x87,\n+0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x87,0x11,0x78,0x74,0xa4,0x1b,0x14,\n+0x65,0x6e,0x64,0x65,0x64,0xa5,0x1b,0x1a,0x65,0x74,0x72,0x69,0x63,0x73,0x68,0x61,\n+0x70,0x65,0x73,0x8c,0x12,0x65,0x78,0x74,0xa2,0xe3,0x14,0x65,0x6e,0x64,0x65,0x64,\n+0xa3,0xe3,0x1e,0x65,0x72,0x61,0x6c,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,\n+0x6f,0x6e,0x71,0x17,0x61,0x67,0x6f,0x6c,0x69,0x74,0x69,0x63,0xa2,0x88,0x12,0x73,\n+0x75,0x70,0xa4,0xa,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa5,0xa,0x13,0x74,\n+0x68,0x69,0x63,0xa3,0x59,1,0x61,0x5c,0x65,0x11,0x65,0x6b,0x30,1,0x61,0x38,\n+0x65,0x11,0x78,0x74,0x6e,0x14,0x65,0x6e,0x64,0x65,0x64,0x6f,0x17,0x6e,0x64,0x63,\n+0x6f,0x70,0x74,0x69,0x63,0x31,0x13,0x6e,0x74,0x68,0x61,0xa3,0xe4,2,0x61,0xa2,\n+0x48,0x65,0xa2,0xdf,0x69,1,0x67,0x30,0x72,0x14,0x61,0x67,0x61,0x6e,0x61,0x9d,\n+0x10,0x68,1,0x70,0x3a,0x73,0x18,0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x73,\n+0xa3,0x4b,1,0x72,0x3c,0x75,0x19,0x73,0x75,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,\n+0x73,0xa3,0x4c,0x11,0x69,0x76,0x1f,0x61,0x74,0x65,0x75,0x73,0x65,0x73,0x75,0x72,\n+0x72,0x6f,0x67,0x61,0x74,0x65,0x73,0xa3,0x4c,2,0x6c,0x32,0x6e,0x9a,0x74,0x12,\n+0x72,0x61,0x6e,0xa5,2,0x10,0x66,2,0x61,0x58,0x6d,0x70,0x77,0x14,0x69,0x64,\n+0x74,0x68,0x61,0x1f,0x6e,0x64,0x66,0x75,0x6c,0x6c,0x77,0x69,0x64,0x74,0x68,0x66,\n+0x6f,0x72,0x6d,0x73,0xa3,0x57,0x1a,0x6e,0x64,0x66,0x75,0x6c,0x6c,0x66,0x6f,0x72,\n+0x6d,0x73,0xa3,0x57,0x13,0x61,0x72,0x6b,0x73,0xa3,0x52,2,0x67,0x34,0x69,0xa2,\n+0x45,0x75,0x12,0x6e,0x6f,0x6f,0xa3,0x63,0x11,0x75,0x6c,0xa2,0x4a,2,0x63,0x3c,\n+0x6a,0x5e,0x73,0x17,0x79,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x73,0xa3,0x4a,0x1f,0x6f,\n+0x6d,0x70,0x61,0x74,0x69,0x62,0x69,0x6c,0x69,0x74,0x79,0x6a,0x61,0x6d,0x6f,0xa3,\n+0x41,0x12,0x61,0x6d,0x6f,0x5c,0x17,0x65,0x78,0x74,0x65,0x6e,0x64,0x65,0x64,1,\n+0x61,0xa3,0xb4,0x62,0xa3,0xb9,0x19,0x66,0x69,0x72,0x6f,0x68,0x69,0x6e,0x67,0x79,\n+0x61,0xa5,0x1d,0x13,0x62,0x72,0x65,0x77,0x37,0x61,0xa4,5,0x62,0xa6,0x45,0x63,\n+0xa8,0x1a,0x64,0xac,0xb8,0x65,5,0x6d,0xa2,0x6d,0x86,0x6e,0x96,0x74,0x15,0x68,\n+0x69,0x6f,0x70,0x69,0x63,0x5e,1,0x65,0x40,0x73,0x11,0x75,0x70,0xa2,0x86,0x16,\n+0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x86,0x11,0x78,0x74,0xa2,0x85,1,0x61,\n+0xa3,0xc8,0x65,0x13,0x6e,0x64,0x65,0x64,0xa2,0x85,0x10,0x61,0xa3,0xc8,0x16,0x6f,\n+0x74,0x69,0x63,0x6f,0x6e,0x73,0xa3,0xce,0x15,0x63,0x6c,0x6f,0x73,0x65,0x64,2,\n+0x61,0x5a,0x63,0x9e,0x69,0x1c,0x64,0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x69,0x63,\n+0x73,0x75,0x70,0xa2,0xc4,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xc4,0x16,\n+0x6c,0x70,0x68,0x61,0x6e,0x75,0x6d,0x86,1,0x65,0x2c,0x73,0x11,0x75,0x70,0xa3,\n+0xc3,0x13,0x72,0x69,0x63,0x73,0x86,0x18,0x75,0x70,0x70,0x6c,0x65,0x6d,0x65,0x6e,\n+0x74,0xa3,0xc3,0x11,0x6a,0x6b,0xa2,0x44,0x1f,0x6c,0x65,0x74,0x74,0x65,0x72,0x73,\n+0x61,0x6e,0x64,0x6d,0x6f,0x6e,0x74,0x68,0x73,0xa3,0x44,0x61,0x4a,0x67,0x76,0x6c,\n+1,0x62,0x30,0x79,0x13,0x6d,0x61,0x69,0x63,0xa5,0x25,0x13,0x61,0x73,0x61,0x6e,\n+0xa3,0xe2,0x13,0x72,0x6c,0x79,0x64,0x1f,0x79,0x6e,0x61,0x73,0x74,0x69,0x63,0x63,\n+0x75,0x6e,0x65,0x69,0x66,0x6f,0x72,0x6d,0xa5,1,0x1f,0x79,0x70,0x74,0x69,0x61,\n+0x6e,0x68,0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,1,0x66,0x26,0x73,0xa3,\n+0xc2,0x1c,0x6f,0x72,0x6d,0x61,0x74,0x63,0x6f,0x6e,0x74,0x72,0x6f,0x6c,0x73,0xa5,\n+0x24,7,0x6e,0xc0,0xe5,0x6e,0x3e,0x72,0xa2,0x5d,0x73,0xa2,0xd8,0x76,0x14,0x65,\n+0x73,0x74,0x61,0x6e,0xa3,0xbc,1,0x61,0x92,0x63,0x13,0x69,0x65,0x6e,0x74,1,\n+0x67,0x34,0x73,0x15,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0xa5,0x13,0x72,0x65,0x65,\n+0x6b,1,0x6d,0x34,0x6e,0x15,0x75,0x6d,0x62,0x65,0x72,0x73,0xa3,0x7f,0x13,0x75,\n+0x73,0x69,0x63,0xa2,0x7e,0x19,0x61,0x6c,0x6e,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,\n+0xa3,0x7e,0x10,0x74,0x1f,0x6f,0x6c,0x69,0x61,0x6e,0x68,0x69,0x65,0x72,0x6f,0x67,\n+0x6c,0x79,0x70,0x68,0x73,0xa3,0xfe,2,0x61,0x32,0x6d,0xa2,0x71,0x72,0x12,0x6f,\n+0x77,0x73,0x7d,0x12,0x62,0x69,0x63,0x38,3,0x65,0x4a,0x6d,0x66,0x70,0xa2,0x43,\n+0x73,0x11,0x75,0x70,0xa2,0x80,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x80,\n+0x11,0x78,0x74,1,0x61,0xa3,0xd2,0x65,0x14,0x6e,0x64,0x65,0x64,0x61,0xa3,0xd2,\n+0x12,0x61,0x74,0x68,0xa2,0xd3,0x18,0x65,0x6d,0x61,0x74,0x69,0x63,0x61,0x6c,0x61,\n+0x1f,0x6c,0x70,0x68,0x61,0x62,0x65,0x74,0x69,0x63,0x73,0x79,0x6d,0x62,0x6f,0x6c,\n+0x73,0xa3,0xd3,1,0x66,0x42,0x72,0x1e,0x65,0x73,0x65,0x6e,0x74,0x61,0x74,0x69,\n+0x6f,0x6e,0x66,0x6f,0x72,0x6d,0x73,1,0x61,0xa3,0x51,0x62,0xa3,0x55,0x14,0x65,\n+0x6e,0x69,0x61,0x6e,0x35,0x12,0x63,0x69,0x69,0x23,0x64,0x9e,0x65,0xa2,0x42,0x68,\n+0xa2,0x4d,0x6c,1,0x63,0x62,0x70,0x17,0x68,0x61,0x62,0x65,0x74,0x69,0x63,0x70,\n+1,0x66,0xa3,0x50,0x72,0x1e,0x65,0x73,0x65,0x6e,0x74,0x61,0x74,0x69,0x6f,0x6e,\n+0x66,0x6f,0x72,0x6d,0x73,0xa3,0x50,0x16,0x68,0x65,0x6d,0x69,0x63,0x61,0x6c,0xa2,\n+0xd0,0x16,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0xd0,0x12,0x6c,0x61,0x6d,0xa5,\n+7,0x1a,0x67,0x65,0x61,0x6e,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa3,0x77,0x11,\n+0x6f,0x6d,0xa3,0xfd,7,0x6f,0x71,0x6f,0x64,0x72,0xa2,0x41,0x75,0xa2,0x58,0x79,\n+0x1b,0x7a,0x61,0x6e,0x74,0x69,0x6e,0x65,0x6d,0x75,0x73,0x69,0x63,0xa2,0x5b,0x18,\n+0x61,0x6c,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0xa3,0x5b,1,0x70,0x34,0x78,0x16,\n+0x64,0x72,0x61,0x77,0x69,0x6e,0x67,0x89,0x14,0x6f,0x6d,0x6f,0x66,0x6f,0xa0,0x12,\n+0x65,0x78,0x74,0xa2,0x43,0x14,0x65,0x6e,0x64,0x65,0x64,0xa3,0x43,0x10,0x61,1,\n+0x68,0x40,0x69,0x12,0x6c,0x6c,0x65,0x92,0x17,0x70,0x61,0x74,0x74,0x65,0x72,0x6e,\n+0x73,0x93,0x11,0x6d,0x69,0xa3,0xc9,1,0x67,0x2c,0x68,0x11,0x69,0x64,0xa3,0x64,\n+0x14,0x69,0x6e,0x65,0x73,0x65,0xa3,0x81,0x61,0x48,0x65,0xa2,0x4e,0x68,0xa2,0x52,\n+0x6c,0x1a,0x6f,0x63,0x6b,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x8b,3,0x6c,\n+0x34,0x6d,0x40,0x73,0x66,0x74,0x11,0x61,0x6b,0xa3,0xc7,0x14,0x69,0x6e,0x65,0x73,\n+0x65,0xa3,0x93,0x11,0x75,0x6d,0xa2,0xb1,0x12,0x73,0x75,0x70,0xa2,0xca,0x16,0x70,\n+0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xca,1,0x69,0x30,0x73,0x13,0x61,0x76,0x61,\n+0x68,0xa3,0xdd,0x15,0x63,0x6c,0x61,0x74,0x69,0x6e,0x23,0x14,0x6e,0x67,0x61,0x6c,\n+0x69,0x41,0x16,0x61,0x69,0x6b,0x73,0x75,0x6b,0x69,0xa5,8,5,0x6f,0xc1,0x4c,\n+0x6f,0xa2,0x55,0x75,0xa4,0x10,0x79,1,0x70,0x9c,0x72,0x14,0x69,0x6c,0x6c,0x69,\n+0x63,0x32,1,0x65,0x4c,0x73,0x11,0x75,0x70,0xa2,0x61,0x16,0x70,0x6c,0x65,0x6d,\n+0x65,0x6e,0x74,0xa2,0x61,0x12,0x61,0x72,0x79,0xa3,0x61,0x11,0x78,0x74,3,0x61,\n+0xa3,0x9e,0x62,0xa3,0xa0,0x63,0xa5,9,0x65,0x13,0x6e,0x64,0x65,0x64,2,0x61,\n+0xa3,0x9e,0x62,0xa3,0xa0,0x63,0xa5,9,0x1c,0x72,0x69,0x6f,0x74,0x73,0x79,0x6c,\n+0x6c,0x61,0x62,0x61,0x72,0x79,0xa3,0x7b,3,0x6d,0x5a,0x6e,0xa2,0x95,0x70,0xa2,\n+0xa0,0x75,0x17,0x6e,0x74,0x69,0x6e,0x67,0x72,0x6f,0x64,0xa2,0x9a,0x17,0x6e,0x75,\n+0x6d,0x65,0x72,0x61,0x6c,0x73,0xa3,0x9a,2,0x62,0x3a,0x6d,0xa2,0x5f,0x70,0x15,\n+0x61,0x74,0x6a,0x61,0x6d,0x6f,0xa3,0x41,0x14,0x69,0x6e,0x69,0x6e,0x67,2,0x64,\n+0x46,0x68,0x9e,0x6d,0x1d,0x61,0x72,0x6b,0x73,0x66,0x6f,0x72,0x73,0x79,0x6d,0x62,\n+0x6f,0x6c,0x73,0x77,0x1e,0x69,0x61,0x63,0x72,0x69,0x74,0x69,0x63,0x61,0x6c,0x6d,\n+0x61,0x72,0x6b,0x73,0x2e,2,0x65,0x40,0x66,0xa6,0x41,0x73,0x18,0x75,0x70,0x70,\n+0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0x83,0x16,0x78,0x74,0x65,0x6e,0x64,0x65,0x64,\n+0xa3,0xe0,0x17,0x61,0x6c,0x66,0x6d,0x61,0x72,0x6b,0x73,0xa3,0x52,0x11,0x6f,0x6e,\n+0x1f,0x69,0x6e,0x64,0x69,0x63,0x6e,0x75,0x6d,0x62,0x65,0x72,0x66,0x6f,0x72,0x6d,\n+0x73,0xa3,0xb2,0x1b,0x74,0x72,0x6f,0x6c,0x70,0x69,0x63,0x74,0x75,0x72,0x65,0x73,\n+0x83,0x12,0x74,0x69,0x63,0xa2,0x84,0x1b,0x65,0x70,0x61,0x63,0x74,0x6e,0x75,0x6d,\n+0x62,0x65,0x72,0x73,0xa3,0xdf,1,0x6e,0x3e,0x72,0x1b,0x72,0x65,0x6e,0x63,0x79,\n+0x73,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x75,0x15,0x65,0x69,0x66,0x6f,0x72,0x6d,0xa2,\n+0x98,0x16,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0xa2,0x99,0x1d,0x61,0x6e,0x64,0x70,\n+0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xa3,0x99,0x61,0xa2,0xe1,0x68,\n+0xa4,0xb,0x6a,0x10,0x6b,0xa2,0x47,4,0x63,0x8c,0x65,0xa2,0x80,0x72,0xa2,0x98,\n+0x73,0xa2,0xaa,0x75,0x1f,0x6e,0x69,0x66,0x69,0x65,0x64,0x69,0x64,0x65,0x6f,0x67,\n+0x72,0x61,0x70,0x68,0x73,0xa2,0x47,0x18,0x65,0x78,0x74,0x65,0x6e,0x73,0x69,0x6f,\n+0x6e,6,0x64,0x6b,0x64,0xa3,0xd1,0x65,0xa5,0,0x66,0xa5,0x12,0x67,0xa5,0x2e,\n+0x14,0x6f,0x6d,0x70,0x61,0x74,0xa2,0x45,1,0x66,0x96,0x69,1,0x62,0x44,0x64,\n+0x17,0x65,0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa2,0x4f,0x12,0x73,0x75,0x70,0xa3,\n+0x5f,0x14,0x69,0x6c,0x69,0x74,0x79,0xa2,0x45,1,0x66,0x54,0x69,0x18,0x64,0x65,\n+0x6f,0x67,0x72,0x61,0x70,0x68,0x73,0xa2,0x4f,0x19,0x73,0x75,0x70,0x70,0x6c,0x65,\n+0x6d,0x65,0x6e,0x74,0xa3,0x5f,0x13,0x6f,0x72,0x6d,0x73,0xa3,0x53,0x11,0x78,0x74,\n+6,0x64,0xc,0x64,0xa3,0xd1,0x65,0xa5,0,0x66,0xa5,0x12,0x67,0xa5,0x2e,0x61,\n+0xa3,0x46,0x62,0xa3,0x5e,0x63,0xa3,0xc5,0x19,0x61,0x64,0x69,0x63,0x61,0x6c,0x73,\n+0x73,0x75,0x70,0x94,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x95,1,0x74,0x50,\n+0x79,0x14,0x6d,0x62,0x6f,0x6c,0x73,0x9a,0x1d,0x61,0x6e,0x64,0x70,0x75,0x6e,0x63,\n+0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x9b,0x14,0x72,0x6f,0x6b,0x65,0x73,0xa3,0x82,\n+2,0x6e,0x48,0x72,0x64,0x75,0x1d,0x63,0x61,0x73,0x69,0x61,0x6e,0x61,0x6c,0x62,\n+0x61,0x6e,0x69,0x61,0x6e,0xa3,0xde,0x1d,0x61,0x64,0x69,0x61,0x6e,0x73,0x79,0x6c,\n+0x6c,0x61,0x62,0x69,0x63,0x73,0x63,0x12,0x69,0x61,0x6e,0xa3,0xa8,2,0x61,0x3a,\n+0x65,0x4c,0x6f,0x16,0x72,0x61,0x73,0x6d,0x69,0x61,0x6e,0xa5,0x2d,1,0x6b,0x26,\n+0x6d,0xa3,0xa4,0x11,0x6d,0x61,0xa3,0xd4,1,0x72,0x38,0x73,0x17,0x73,0x73,0x79,\n+0x6d,0x62,0x6f,0x6c,0x73,0xa5,0x19,0x13,0x6f,0x6b,0x65,0x65,0x60,0x12,0x73,0x75,\n+0x70,0xa2,0xff,0x16,0x70,0x6c,0x65,0x6d,0x65,0x6e,0x74,0xa3,0xff,3,0x65,0x3e,\n+0x69,0x7e,0x6f,0xa2,0x69,0x75,0x15,0x70,0x6c,0x6f,0x79,0x61,0x6e,0xa3,0xe1,1,\n+0x73,0x50,0x76,0x16,0x61,0x6e,0x61,0x67,0x61,0x72,0x69,0x3e,0x12,0x65,0x78,0x74,\n+0xa2,0xb3,0x14,0x65,0x6e,0x64,0x65,0x64,0xa3,0xb3,0x13,0x65,0x72,0x65,0x74,0xa3,\n+0x5a,2,0x61,0x3a,0x6e,0x82,0x76,0x16,0x65,0x73,0x61,0x6b,0x75,0x72,0x75,0xa5,\n+0x2f,0x18,0x63,0x72,0x69,0x74,0x69,0x63,0x61,0x6c,0x73,0x2e,2,0x65,0x30,0x66,\n+0x36,0x73,0x11,0x75,0x70,0xa3,0x83,0x11,0x78,0x74,0xa3,0xe0,0x18,0x6f,0x72,0x73,\n+0x79,0x6d,0x62,0x6f,0x6c,0x73,0x77,0x14,0x67,0x62,0x61,0x74,0x73,0x91,1,0x67,\n+0x3e,0x6d,0x12,0x69,0x6e,0x6f,0xa2,0xab,0x14,0x74,0x69,0x6c,0x65,0x73,0xa3,0xab,\n+0x11,0x72,0x61,0xa5,0x1a,8,0x6d,0x5f,0x6d,0x3a,0x6e,0x48,0x73,0x7a,0x76,0xa2,\n+0x4b,0x77,0x12,0x69,0x64,0x65,0x43,0x11,0x65,0x64,0x32,0x12,0x69,0x61,0x6c,0x33,\n+2,0x61,0x40,0x62,0x37,0x6f,1,0x62,0x28,0x6e,0x10,0x65,0x21,0x13,0x72,0x65,\n+0x61,0x6b,0x37,0x10,0x72,0x34,0x12,0x72,0x6f,0x77,0x35,2,0x6d,0x38,0x71,0x46,\n+0x75,1,0x62,0x3d,0x70,0x3e,0x11,0x65,0x72,0x3f,1,0x61,0x24,0x6c,0x39,0x11,\n+0x6c,0x6c,0x39,1,0x72,0x3b,0x75,0x12,0x61,0x72,0x65,0x3b,0x12,0x65,0x72,0x74,\n+0x40,0x13,0x69,0x63,0x61,0x6c,0x41,0x63,0x58,0x65,0x92,0x66,0x96,0x69,1,0x6e,\n+0x36,0x73,0x10,0x6f,0x30,0x14,0x6c,0x61,0x74,0x65,0x64,0x31,0x11,0x69,0x74,0x2e,\n+0x12,0x69,0x61,0x6c,0x2f,2,0x61,0x36,0x69,0x48,0x6f,0x10,0x6d,0x24,0x12,0x70,\n+0x61,0x74,0x25,0x10,0x6e,0x22,0x15,0x6f,0x6e,0x69,0x63,0x61,0x6c,0x23,0x13,0x72,\n+0x63,0x6c,0x65,0x27,0x11,0x6e,0x63,0x27,2,0x69,0x3a,0x6f,0x44,0x72,0x10,0x61,\n+0x2c,0x14,0x63,0x74,0x69,0x6f,0x6e,0x2d,0x10,0x6e,0x28,0x11,0x61,0x6c,0x29,0x11,\n+0x6e,0x74,0x2b,4,0x61,0x3a,0x66,0x4c,0x68,0x5e,0x6e,0x70,0x77,0x2a,0x12,0x69,\n+0x64,0x65,0x2b,0x22,0x17,0x6d,0x62,0x69,0x67,0x75,0x6f,0x75,0x73,0x23,0x26,0x17,\n+0x75,0x6c,0x6c,0x77,0x69,0x64,0x74,0x68,0x27,0x24,0x17,0x61,0x6c,0x66,0x77,0x69,\n+0x64,0x74,0x68,0x25,0x20,1,0x61,0x30,0x65,0x14,0x75,0x74,0x72,0x61,0x6c,0x21,\n+0x28,0x13,0x72,0x72,0x6f,0x77,0x29,0xd,0x6e,0xc0,0xfb,0x73,0x6d,0x73,0x3a,0x74,\n+0x98,0x75,0xa2,0x49,0x7a,2,0x6c,0x3b,0x70,0x3d,0x73,0x39,5,0x6f,0x28,0x6f,\n+0x57,0x70,0x34,0x75,0x16,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x45,0x11,0x61,0x63,\n+1,0x65,0x32,0x69,0x15,0x6e,0x67,0x6d,0x61,0x72,0x6b,0x31,0x18,0x73,0x65,0x70,\n+0x61,0x72,0x61,0x74,0x6f,0x72,0x39,0x63,0x53,0x6b,0x55,0x6d,0x51,0x1d,0x69,0x74,\n+0x6c,0x65,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x27,1,0x6e,0x40,\n+0x70,0x1c,0x70,0x65,0x72,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x23,\n+0x17,0x61,0x73,0x73,0x69,0x67,0x6e,0x65,0x64,0x21,0x6e,0x8a,0x6f,0xa2,0x47,0x70,\n+8,0x66,0x14,0x66,0x5b,0x69,0x59,0x6f,0x4f,0x72,0x24,0x73,0x49,0x17,0x69,0x76,\n+0x61,0x74,0x65,0x75,0x73,0x65,0x43,0x61,0x2c,0x63,0x4d,0x64,0x47,0x65,0x4b,0x1f,\n+0x72,0x61,0x67,0x72,0x61,0x70,0x68,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,\n+0x3d,2,0x64,0x33,0x6c,0x35,0x6f,0x36,0x1b,0x6e,0x73,0x70,0x61,0x63,0x69,0x6e,\n+0x67,0x6d,0x61,0x72,0x6b,0x2d,1,0x70,0x7c,0x74,0x12,0x68,0x65,0x72,3,0x6c,\n+0x38,0x6e,0x42,0x70,0x4c,0x73,0x14,0x79,0x6d,0x62,0x6f,0x6c,0x57,0x14,0x65,0x74,\n+0x74,0x65,0x72,0x2b,0x14,0x75,0x6d,0x62,0x65,0x72,0x37,0x19,0x75,0x6e,0x63,0x74,\n+0x75,0x61,0x74,0x69,0x6f,0x6e,0x4f,0x1c,0x65,0x6e,0x70,0x75,0x6e,0x63,0x74,0x75,\n+0x61,0x74,0x69,0x6f,0x6e,0x49,0x66,0x9e,0x66,0x88,0x69,0xa2,0x4b,0x6c,0xa2,0x5c,\n+0x6d,4,0x61,0x60,0x63,0x31,0x65,0x2f,0x6e,0x2d,0x6f,0x15,0x64,0x69,0x66,0x69,\n+0x65,0x72,1,0x6c,0x30,0x73,0x14,0x79,0x6d,0x62,0x6f,0x6c,0x55,0x14,0x65,0x74,\n+0x74,0x65,0x72,0x29,0x17,0x74,0x68,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x51,1,0x69,\n+0x2e,0x6f,0x13,0x72,0x6d,0x61,0x74,0x41,0x1d,0x6e,0x61,0x6c,0x70,0x75,0x6e,0x63,\n+0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x5b,0x10,0x6e,0x1f,0x69,0x74,0x69,0x61,0x6c,\n+0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x59,6,0x6d,0x18,0x6d,\n+0x29,0x6f,0x28,0x74,0x27,0x75,0x23,0x2a,0x1c,0x77,0x65,0x72,0x63,0x61,0x73,0x65,\n+0x6c,0x65,0x74,0x74,0x65,0x72,0x25,0x65,0x28,0x69,0x3c,0x6c,0x25,0x19,0x74,0x74,\n+0x65,0x72,0x6e,0x75,0x6d,0x62,0x65,0x72,0x35,0x1a,0x6e,0x65,0x73,0x65,0x70,0x61,\n+0x72,0x61,0x74,0x6f,0x72,0x3b,0x63,0x44,0x64,0xa2,0x60,0x65,0x1b,0x6e,0x63,0x6c,\n+0x6f,0x73,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,0x2f,6,0x6e,0x39,0x6e,0x46,0x6f,\n+0x4e,0x73,0x45,0x75,0x1b,0x72,0x72,0x65,0x6e,0x63,0x79,0x73,0x79,0x6d,0x62,0x6f,\n+0x6c,0x53,0x20,0x12,0x74,0x72,0x6c,0x3f,0x42,0x10,0x6e,1,0x6e,0x2c,0x74,0x12,\n+0x72,0x6f,0x6c,0x3f,0x1f,0x65,0x63,0x74,0x6f,0x72,0x70,0x75,0x6e,0x63,0x74,0x75,\n+0x61,0x74,0x69,0x6f,0x6e,0x4d,0x63,0x3f,0x66,0x41,0x6c,0x1d,0x6f,0x73,0x65,0x70,\n+0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x4b,2,0x61,0x30,0x65,0x4a,\n+0x69,0x12,0x67,0x69,0x74,0x33,0x1c,0x73,0x68,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,\n+0x74,0x69,0x6f,0x6e,0x47,0x1a,0x63,0x69,0x6d,0x61,0x6c,0x6e,0x75,0x6d,0x62,0x65,\n+0x72,0x33,0,0x12,0x6d,0xc2,0x3f,0x73,0xa1,0x73,0x4e,0x74,0xa2,0x56,0x77,0xa2,\n+0x72,0x79,0xa2,0x73,0x7a,1,0x61,0x2c,0x68,0x12,0x61,0x69,0x6e,0x8b,0x11,0x69,\n+0x6e,0x85,5,0x74,0x22,0x74,0x38,0x77,0x4c,0x79,0x16,0x72,0x69,0x61,0x63,0x77,\n+0x61,0x77,0x6f,0x18,0x72,0x61,0x69,0x67,0x68,0x74,0x77,0x61,0x77,0xa3,0x55,0x15,\n+0x61,0x73,0x68,0x6b,0x61,0x66,0x6d,0x61,0x2e,0x65,0x38,0x68,0x11,0x69,0x6e,0x6b,\n+0x10,0x64,0x62,0x11,0x68,0x65,0x65,1,0x65,0x2e,0x6d,0x13,0x6b,0x61,0x74,0x68,\n+0x69,0x10,0x6e,0x67,1,0x61,0x4e,0x65,1,0x68,0x28,0x74,0x10,0x68,0x77,0x16,\n+0x6d,0x61,0x72,0x62,0x75,0x74,0x61,0x74,0x13,0x67,0x6f,0x61,0x6c,0x3d,1,0x68,\n+0x71,0x77,0x73,0x11,0x61,0x77,0x79,1,0x65,0x32,0x75,0x11,0x64,0x68,0x80,0x11,\n+0x68,0x65,0x83,0x10,0x68,0x7a,1,0x62,0x34,0x77,0x16,0x69,0x74,0x68,0x74,0x61,\n+0x69,0x6c,0x7f,0x14,0x61,0x72,0x72,0x65,0x65,0x7d,0x6d,0x6c,0x6e,0xa4,0x6b,0x70,\n+0xa4,0x88,0x71,0xa4,0x88,0x72,1,0x65,0x38,0x6f,0x18,0x68,0x69,0x6e,0x67,0x79,\n+0x61,0x79,0x65,0x68,0x93,1,0x68,0x5f,0x76,0x16,0x65,0x72,0x73,0x65,0x64,0x70,\n+0x65,0x61,2,0x61,0x2e,0x65,0xa4,0x3e,0x69,0x10,0x6d,0x53,1,0x6c,0xa2,0xe7,\n+0x6e,0x16,0x69,0x63,0x68,0x61,0x65,0x61,0x6e,0,0x12,0x6e,0x76,0x73,0x51,0x73,\n+0x3e,0x74,0x5c,0x77,0xa0,0x79,0xa2,0x42,0x7a,0x13,0x61,0x79,0x69,0x6e,0xa3,0x54,\n+0x10,0x61,1,0x64,0x2e,0x6d,0x12,0x65,0x6b,0x68,0xa3,0x4c,0x11,0x68,0x65,0xa3,\n+0x4b,3,0x61,0x38,0x65,0x3c,0x68,0x4a,0x77,0x13,0x65,0x6e,0x74,0x79,0xa3,0x51,\n+0x10,0x77,0xa3,0x4d,1,0x6e,0xa3,0x4e,0x74,0x10,0x68,0xa3,0x4f,0x14,0x61,0x6d,\n+0x65,0x64,0x68,0xa3,0x50,0x11,0x61,0x77,0xa3,0x52,0x12,0x6f,0x64,0x68,0xa3,0x53,\n+0x6e,0x3a,0x6f,0x40,0x70,0x46,0x71,0x4a,0x72,0x12,0x65,0x73,0x68,0xa3,0x4a,0x11,\n+0x75,0x6e,0xa3,0x46,0x11,0x6e,0x65,0xa3,0x47,0x10,0x65,0xa3,0x48,0x12,0x6f,0x70,\n+0x68,0xa3,0x49,0x67,0x33,0x67,0x38,0x68,0x40,0x6b,0x5e,0x6c,0x66,0x6d,0x11,0x65,\n+0x6d,0xa3,0x45,0x13,0x69,0x6d,0x65,0x6c,0xa1,1,0x65,0x32,0x75,0x14,0x6e,0x64,\n+0x72,0x65,0x64,0xa3,0x42,0x11,0x74,0x68,0xa3,0x41,0x12,0x61,0x70,0x68,0xa3,0x43,\n+0x14,0x61,0x6d,0x65,0x64,0x68,0xa3,0x44,0x61,0x34,0x62,0x4a,0x64,0x50,0x66,0x12,\n+0x69,0x76,0x65,0x9f,1,0x6c,0x2a,0x79,0x11,0x69,0x6e,0x97,0x12,0x65,0x70,0x68,\n+0x95,0x12,0x65,0x74,0x68,0x99,1,0x61,0x30,0x68,0x14,0x61,0x6d,0x65,0x64,0x68,\n+0x9d,0x13,0x6c,0x65,0x74,0x68,0x9b,0x15,0x61,0x79,0x61,0x6c,0x61,0x6d,6,0x6e,\n+0x2c,0x6e,0x34,0x72,0x5e,0x73,0x62,0x74,0x11,0x74,0x61,0xa3,0x63,2,0x67,0x2e,\n+0x6e,0x32,0x79,0x10,0x61,0xa3,0x60,0x10,0x61,0xa3,0x5d,1,0x61,0xa3,0x5e,0x6e,\n+0x10,0x61,0xa3,0x5f,0x10,0x61,0xa3,0x61,0x11,0x73,0x61,0xa3,0x62,0x62,0x3c,0x6a,\n+0x42,0x6c,0x10,0x6c,1,0x61,0xa3,0x5b,0x6c,0x10,0x61,0xa3,0x5c,0x11,0x68,0x61,\n+0xa3,0x59,0x10,0x61,0xa3,0x5a,0x11,0x65,0x6d,0x51,2,0x6f,0x2c,0x75,0x50,0x79,\n+0x10,0x61,0x91,1,0x6a,0x28,0x6f,0x10,0x6e,0x55,0x1a,0x6f,0x69,0x6e,0x69,0x6e,\n+0x67,0x67,0x72,0x6f,0x75,0x70,0x21,0x10,0x6e,0x57,0x10,0x65,0x59,0x10,0x61,1,\n+0x66,0x5b,0x70,0x10,0x68,0x5d,0x66,0x9a,0x66,0x42,0x67,0x7a,0x68,0x8a,0x6b,0xa2,\n+0x75,0x6c,0x11,0x61,0x6d,0x4c,0x12,0x61,0x64,0x68,0x4f,2,0x61,0x3e,0x65,0x4a,\n+0x69,0x19,0x6e,0x61,0x6c,0x73,0x65,0x6d,0x6b,0x61,0x74,0x68,0x35,0x15,0x72,0x73,\n+0x69,0x79,0x65,0x68,0x8f,0x86,0x10,0x68,0x33,0x10,0x61,1,0x66,0x37,0x6d,0x11,\n+0x61,0x6c,0x39,1,0x61,0x40,0x65,0x3e,1,0x68,0x28,0x74,0x10,0x68,0x45,0x40,\n+0x13,0x67,0x6f,0x61,0x6c,0x43,2,0x68,0x3b,0x6d,0x5c,0x6e,0x1a,0x69,0x66,0x69,\n+0x72,0x6f,0x68,0x69,0x6e,0x67,0x79,0x61,1,0x6b,0x2a,0x70,0x10,0x61,0xa3,0x65,\n+0x15,0x69,0x6e,0x6e,0x61,0x79,0x61,0xa3,0x64,0x1a,0x7a,0x61,0x6f,0x6e,0x68,0x65,\n+0x68,0x67,0x6f,0x61,0x6c,0x3d,2,0x61,0x3a,0x68,0x44,0x6e,0x17,0x6f,0x74,0x74,\n+0x65,0x64,0x68,0x65,0x68,0x4b,1,0x66,0x47,0x70,0x10,0x68,0x49,0x12,0x61,0x70,\n+0x68,0x89,0x61,0x2e,0x62,0x8a,0x64,0xa2,0x51,0x65,0x31,2,0x66,0x3c,0x69,0x70,\n+0x6c,1,0x61,0x28,0x65,0x10,0x66,0x27,0x11,0x70,0x68,0x25,0x14,0x72,0x69,0x63,\n+0x61,0x6e,2,0x66,0x30,0x6e,0x36,0x71,0x11,0x61,0x66,0xa3,0x58,0x11,0x65,0x68,\n+0xa3,0x56,0x12,0x6f,0x6f,0x6e,0xa3,0x57,0x10,0x6e,0x23,1,0x65,0x4a,0x75,0x10,\n+0x72,0x1f,0x75,0x73,0x68,0x61,0x73,0x6b,0x69,0x79,0x65,0x68,0x62,0x61,0x72,0x72,\n+0x65,0x65,0x8d,1,0x68,0x29,0x74,0x10,0x68,0x2b,0x11,0x61,0x6c,0x2c,0x16,0x61,\n+0x74,0x68,0x72,0x69,0x73,0x68,0x2f,7,0x6e,0x2e,0x6e,0x2c,0x72,0x3e,0x74,0x56,\n+0x75,0x21,0x18,0x6f,0x6e,0x6a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x21,0x28,0x1a,0x69,\n+0x67,0x68,0x74,0x6a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x29,0x2a,0x19,0x72,0x61,0x6e,\n+0x73,0x70,0x61,0x72,0x65,0x6e,0x74,0x2b,0x63,0x23,0x64,0x40,0x6a,0x56,0x6c,0x26,\n+0x19,0x65,0x66,0x74,0x6a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x27,0x24,0x19,0x75,0x61,\n+0x6c,0x6a,0x6f,0x69,0x6e,0x69,0x6e,0x67,0x25,0x19,0x6f,0x69,0x6e,0x63,0x61,0x75,\n+0x73,0x69,0x6e,0x67,0x23,0,0x13,0x6e,0xc0,0xd0,0x73,0x49,0x73,0x48,0x75,0x78,\n+0x77,0x84,0x78,0x9c,0x7a,0x10,0x77,0x58,1,0x6a,0x75,0x73,0x13,0x70,0x61,0x63,\n+0x65,0x59,4,0x61,0x51,0x67,0x53,0x70,0x28,0x75,0x30,0x79,0x57,0x54,0x12,0x61,\n+0x63,0x65,0x55,0x16,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0x53,0x15,0x6e,0x6b,0x6e,\n+0x6f,0x77,0x6e,0x21,1,0x6a,0x5d,0x6f,0x17,0x72,0x64,0x6a,0x6f,0x69,0x6e,0x65,\n+0x72,0x5d,0x10,0x78,0x21,0x6e,0x60,0x6f,0xa2,0x41,0x70,0xa2,0x50,0x71,0xa2,0x6e,\n+0x72,1,0x65,0x24,0x69,0x6f,0x1e,0x67,0x69,0x6f,0x6e,0x61,0x6c,0x69,0x6e,0x64,\n+0x69,0x63,0x61,0x74,0x6f,0x72,0x6f,4,0x65,0x3e,0x6c,0x5b,0x6f,0x46,0x73,0x45,\n+0x75,0x46,0x14,0x6d,0x65,0x72,0x69,0x63,0x47,0x15,0x78,0x74,0x6c,0x69,0x6e,0x65,\n+0x5b,0x17,0x6e,0x73,0x74,0x61,0x72,0x74,0x65,0x72,0x45,0x10,0x70,0x48,0x1c,0x65,\n+0x6e,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0x49,1,0x6f,0x3e,\n+0x72,0x4c,0x1a,0x65,0x66,0x69,0x78,0x6e,0x75,0x6d,0x65,0x72,0x69,0x63,0x4d,0x4a,\n+0x1b,0x73,0x74,0x66,0x69,0x78,0x6e,0x75,0x6d,0x65,0x72,0x69,0x63,0x4b,0x10,0x75,\n+0x4e,0x16,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x4f,0x68,0x7b,0x68,0x50,0x69,0x86,\n+0x6a,0xa2,0x61,0x6c,0xa2,0x65,0x6d,0x1c,0x61,0x6e,0x64,0x61,0x74,0x6f,0x72,0x79,\n+0x62,0x72,0x65,0x61,0x6b,0x2d,4,0x32,0x5f,0x33,0x61,0x65,0x34,0x6c,0x6d,0x79,\n+0x3a,0x13,0x70,0x68,0x65,0x6e,0x3b,0x19,0x62,0x72,0x65,0x77,0x6c,0x65,0x74,0x74,\n+0x65,0x72,0x6d,2,0x64,0x28,0x6e,0x3c,0x73,0x41,0x3c,0x18,0x65,0x6f,0x67,0x72,\n+0x61,0x70,0x68,0x69,0x63,0x3d,0x3e,1,0x66,0x3e,0x73,0x11,0x65,0x70,1,0x61,\n+0x22,0x65,0x14,0x72,0x61,0x62,0x6c,0x65,0x3f,0x18,0x69,0x78,0x6e,0x75,0x6d,0x65,\n+0x72,0x69,0x63,0x41,2,0x6c,0x63,0x74,0x65,0x76,0x67,1,0x66,0x43,0x69,0x15,\n+0x6e,0x65,0x66,0x65,0x65,0x64,0x43,0x61,0x40,0x62,0x70,0x63,0xa2,0x55,0x65,0xa2,\n+0xdb,0x67,0x10,0x6c,0x38,0x11,0x75,0x65,0x39,2,0x69,0x23,0x6c,0x34,0x6d,0x16,\n+0x62,0x69,0x67,0x75,0x6f,0x75,0x73,0x23,0x24,0x17,0x70,0x68,0x61,0x62,0x65,0x74,\n+0x69,0x63,0x25,4,0x32,0x27,0x61,0x29,0x62,0x2b,0x6b,0x2d,0x72,0x12,0x65,0x61,\n+0x6b,2,0x61,0x36,0x62,0x3e,0x73,0x15,0x79,0x6d,0x62,0x6f,0x6c,0x73,0x57,0x13,\n+0x66,0x74,0x65,0x72,0x29,1,0x65,0x2a,0x6f,0x11,0x74,0x68,0x27,0x13,0x66,0x6f,\n+0x72,0x65,0x2b,7,0x6d,0x51,0x6d,0x33,0x6f,0x28,0x70,0x69,0x72,0x35,1,0x6d,\n+0x76,0x6e,1,0x64,0x3c,0x74,0x1a,0x69,0x6e,0x67,0x65,0x6e,0x74,0x62,0x72,0x65,\n+0x61,0x6b,0x2f,0x15,0x69,0x74,0x69,0x6f,0x6e,0x61,0x1f,0x6c,0x6a,0x61,0x70,0x61,\n+0x6e,0x65,0x73,0x65,0x73,0x74,0x61,0x72,0x74,0x65,0x72,0x6b,1,0x62,0x3a,0x70,\n+0x19,0x6c,0x65,0x78,0x63,0x6f,0x6e,0x74,0x65,0x78,0x74,0x51,0x18,0x69,0x6e,0x69,\n+0x6e,0x67,0x6d,0x61,0x72,0x6b,0x33,0x61,0x6a,0x62,0x2f,0x6a,0x6b,0x6c,0x30,0x13,\n+0x6f,0x73,0x65,0x70,1,0x61,0x38,0x75,0x18,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,\n+0x6f,0x6e,0x31,0x18,0x72,0x65,0x6e,0x74,0x68,0x65,0x73,0x69,0x73,0x69,0x1b,0x72,\n+0x72,0x69,0x61,0x67,0x65,0x72,0x65,0x74,0x75,0x72,0x6e,0x35,2,0x62,0x3e,0x6d,\n+0x46,0x78,0x36,0x18,0x63,0x6c,0x61,0x6d,0x61,0x74,0x69,0x6f,0x6e,0x37,0x70,0x12,\n+0x61,0x73,0x65,0x71,0x72,0x16,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,0x73,1,0x64,\n+0x42,0x6e,1,0x6f,0x32,0x75,0x26,0x14,0x6d,0x65,0x72,0x69,0x63,0x27,0x11,0x6e,\n+0x65,0x21,1,0x65,0x2e,0x69,0x24,0x12,0x67,0x69,0x74,0x25,0x22,0x14,0x63,0x69,\n+0x6d,0x61,0x6c,0x23,0,0x18,0x6e,0xc4,0x2a,0x74,0xc1,0x6d,0x77,0x96,0x77,0xa2,\n+0x4c,0x78,0xa2,0x70,0x79,0xa2,0x7a,0x7a,6,0x73,0x1e,0x73,0x34,0x78,0x42,0x79,\n+0x48,0x7a,0x11,0x7a,0x7a,0xa3,0x67,0x10,0x79,1,0x65,0xa3,0xae,0x6d,0xa3,0x81,\n+0x11,0x78,0x78,0xa3,0x66,0x11,0x79,0x79,0x21,0x61,0x30,0x69,0x58,0x6d,0x11,0x74,\n+0x68,0xa3,0x80,0x10,0x6e,1,0x61,0x26,0x62,0xa3,0xb1,0x1a,0x62,0x61,0x7a,0x61,\n+0x72,0x73,0x71,0x75,0x61,0x72,0x65,0xa3,0xb1,0x11,0x6e,0x68,0x23,2,0x61,0x30,\n+0x63,0x5a,0x6f,0x11,0x6c,0x65,0xa3,0x9b,1,0x6e,0x3c,0x72,0x10,0x61,0xa2,0x92,\n+0x15,0x6e,0x67,0x63,0x69,0x74,0x69,0xa3,0x92,0x12,0x63,0x68,0x6f,0xa3,0xbc,0x11,\n+0x68,0x6f,0xa3,0xbc,1,0x70,0x2c,0x73,0x11,0x75,0x78,0xa3,0x65,0x11,0x65,0x6f,\n+0x9b,1,0x65,0x2c,0x69,0x72,0x11,0x69,0x69,0x73,0x11,0x7a,0x69,0xa2,0xc0,0x11,\n+0x64,0x69,0xa3,0xc0,0x74,0x4a,0x75,0xa2,0xba,0x76,1,0x61,0x2c,0x69,0x11,0x73,\n+0x70,0xa3,0x64,0x10,0x69,0xa2,0x63,0x10,0x69,0xa3,0x63,5,0x67,0x36,0x67,0x68,\n+0x68,0x6c,0x69,2,0x62,0x3a,0x66,0x4a,0x72,0x10,0x68,0xa2,0x9e,0x12,0x75,0x74,\n+0x61,0xa3,0x9e,1,0x65,0x24,0x74,0x6f,0x12,0x74,0x61,0x6e,0x6f,0x14,0x69,0x6e,\n+0x61,0x67,0x68,0x99,0x11,0x6c,0x67,0x75,0x10,0x61,1,0x61,0x24,0x69,0x6d,0x6a,\n+0x11,0x6e,0x61,0x6b,0x61,0x30,0x65,0xa2,0x5b,0x66,0x11,0x6e,0x67,0x99,6,0x6c,\n+0x21,0x6c,0x32,0x6d,0x38,0x6e,0x44,0x76,0x10,0x74,0xa3,0x7f,1,0x65,0x89,0x75,\n+0x97,1,0x69,0x24,0x6c,0x67,0x10,0x6c,0x67,0x10,0x67,0xa2,0x9a,0x11,0x75,0x74,\n+0xa3,0x9a,0x67,0x36,0x69,0x52,0x6b,0x10,0x72,0xa2,0x99,0x10,0x69,0xa3,0x99,1,\n+0x61,0x30,0x62,0x7a,0x13,0x61,0x6e,0x77,0x61,0x7b,0x12,0x6c,0x6f,0x67,0x75,2,\n+0x6c,0x32,0x74,0x34,0x76,0x12,0x69,0x65,0x74,0xa3,0x7f,0x10,0x65,0x89,0x12,0x68,\n+0x61,0x6d,0xa3,0x6a,1,0x6c,0x2a,0x6e,0x10,0x67,0xa3,0x62,0x10,0x75,0x68,0x11,\n+0x67,0x75,0x69,1,0x67,0x32,0x6e,0x14,0x6b,0x6e,0x6f,0x77,0x6e,0xa3,0x67,0x11,\n+0x61,0x72,0x8a,0x13,0x69,0x74,0x69,0x63,0x8b,0x71,0xc1,0x13,0x71,0xa2,0xde,0x72,\n+0xa2,0xe3,0x73,6,0x69,0x8a,0x69,0x72,0x6f,0xa2,0x4c,0x75,0xa2,0x75,0x79,1,\n+0x6c,0x46,0x72,4,0x63,0x65,0x65,0xa3,0x5f,0x69,0x2c,0x6a,0xa3,0x60,0x6e,0xa3,\n+0x61,0x11,0x61,0x63,0x65,0x10,0x6f,0x94,0x16,0x74,0x69,0x6e,0x61,0x67,0x72,0x69,\n+0x95,2,0x64,0x3c,0x67,0x4c,0x6e,1,0x64,0xa3,0x91,0x68,0x62,0x12,0x61,0x6c,\n+0x61,0x63,0x10,0x64,0xa2,0xa6,0x12,0x68,0x61,0x6d,0xa3,0xa6,0x17,0x6e,0x77,0x72,\n+0x69,0x74,0x69,0x6e,0x67,0xa3,0x70,2,0x67,0x3a,0x72,0x52,0x79,0x10,0x6f,0xa2,\n+0xb0,0x12,0x6d,0x62,0x6f,0xa3,0xb0,1,0x64,0x26,0x6f,0xa3,0xb8,0xa2,0xb7,0x12,\n+0x69,0x61,0x6e,0xa3,0xb7,0x10,0x61,0xa2,0x98,0x16,0x73,0x6f,0x6d,0x70,0x65,0x6e,\n+0x67,0xa3,0x98,0x11,0x6e,0x64,0xa2,0x71,0x14,0x61,0x6e,0x65,0x73,0x65,0xa3,0x71,\n+0x61,0x5c,0x67,0xa2,0x43,0x68,1,0x61,0x2a,0x72,0x10,0x64,0xa3,0x97,2,0x72,\n+0x28,0x76,0x30,0x77,0x87,0x12,0x61,0x64,0x61,0xa3,0x97,0x12,0x69,0x61,0x6e,0x87,\n+2,0x6d,0x40,0x72,0x58,0x75,0x10,0x72,0xa2,0x6f,0x15,0x61,0x73,0x68,0x74,0x72,\n+0x61,0xa3,0x6f,1,0x61,0x26,0x72,0xa3,0x7e,0x14,0x72,0x69,0x74,0x61,0x6e,0xa3,\n+0x7e,1,0x61,0xa3,0x5e,0x62,0xa3,0x85,0x11,0x6e,0x77,0xa3,0x70,0x11,0x61,0x61,\n+1,0x63,0x2f,0x69,0x23,3,0x65,0x3e,0x6a,0x48,0x6f,0x4e,0x75,0x10,0x6e,1,\n+0x69,0x24,0x72,0x61,0x10,0x63,0x61,0x13,0x6a,0x61,0x6e,0x67,0xa3,0x6e,0x11,0x6e,\n+0x67,0xa3,0x6e,1,0x68,0x2a,0x72,0x10,0x6f,0xa3,0x5d,0x10,0x67,0xa3,0xb6,0x6e,\n+0xa2,0x83,0x6f,0xa2,0xf2,0x70,5,0x6c,0x1e,0x6c,0x44,0x72,0x4a,0x73,0x1b,0x61,\n+0x6c,0x74,0x65,0x72,0x70,0x61,0x68,0x6c,0x61,0x76,0x69,0xa3,0x7b,0x11,0x72,0x64,\n+0xa3,0x5c,0x11,0x74,0x69,0xa3,0x7d,0x61,0x7c,0x65,0xa2,0x54,0x68,3,0x61,0x3e,\n+0x6c,0x4e,0x6e,0x5e,0x6f,0x16,0x65,0x6e,0x69,0x63,0x69,0x61,0x6e,0xa3,0x5b,0x10,\n+0x67,0xa2,0x5a,0x12,0x73,0x70,0x61,0xa3,0x5a,2,0x69,0xa3,0x7a,0x70,0xa3,0x7b,\n+0x76,0xa3,0x7c,0x10,0x78,0xa3,0x5b,2,0x68,0x3e,0x6c,0x50,0x75,0x10,0x63,0xa2,\n+0xa5,0x14,0x69,0x6e,0x68,0x61,0x75,0xa3,0xa5,0x17,0x61,0x77,0x68,0x68,0x6d,0x6f,\n+0x6e,0x67,0xa3,0x4b,0x10,0x6d,0xa2,0x90,0x14,0x79,0x72,0x65,0x6e,0x65,0xa3,0x90,\n+0x11,0x72,0x6d,0xa3,0x59,6,0x6b,0x36,0x6b,0x56,0x73,0x6e,0x75,0x74,0x79,0x11,\n+0x69,0x61,0x1f,0x6b,0x65,0x6e,0x67,0x70,0x75,0x61,0x63,0x68,0x75,0x65,0x68,0x6d,\n+0x6f,0x6e,0x67,0xa3,0xba,1,0x67,0x2e,0x6f,0xa2,0x57,0x10,0x6f,0xa3,0x57,0x10,\n+0x62,0xa3,0x84,0x11,0x68,0x75,0xa3,0x96,0x12,0x73,0x68,0x75,0xa3,0x96,0x61,0x42,\n+0x62,0x80,0x65,0x10,0x77,1,0x61,0xa3,0xaa,0x74,0x14,0x61,0x69,0x6c,0x75,0x65,\n+0x97,2,0x62,0x2e,0x6e,0x3c,0x72,0x10,0x62,0xa3,0x8e,0x15,0x61,0x74,0x61,0x65,\n+0x61,0x6e,0xa3,0x8f,0x10,0x64,0xa2,0xbb,0x16,0x69,0x6e,0x61,0x67,0x61,0x72,0x69,\n+0xa3,0xbb,0x11,0x61,0x74,0xa3,0x8f,3,0x67,0x5a,0x6c,0x6c,0x72,0xa2,0x93,0x73,\n+2,0x61,0x36,0x67,0x3c,0x6d,0x10,0x61,0x84,0x12,0x6e,0x79,0x61,0x85,0x11,0x67,\n+0x65,0xa3,0xab,0x10,0x65,0xa3,0xab,1,0x61,0x2a,0x68,0x11,0x61,0x6d,0x5b,0x10,\n+0x6d,0x5b,1,0x63,0xa2,0x60,0x64,5,0x70,0x37,0x70,0x36,0x73,0x54,0x74,0x14,\n+0x75,0x72,0x6b,0x69,0x63,0xa3,0x58,0x11,0x65,0x72,1,0x6d,0x2c,0x73,0x12,0x69,\n+0x61,0x6e,0x9b,0x11,0x69,0x63,0xa3,0x59,0x10,0x6f,1,0x67,0x3a,0x75,0x18,0x74,\n+0x68,0x61,0x72,0x61,0x62,0x69,0x61,0x6e,0xa3,0x85,0x13,0x64,0x69,0x61,0x6e,0xa3,\n+0xb8,0x68,0x42,0x69,0x54,0x6e,0x1a,0x6f,0x72,0x74,0x68,0x61,0x72,0x61,0x62,0x69,\n+0x61,0x6e,0xa3,0x8e,0x17,0x75,0x6e,0x67,0x61,0x72,0x69,0x61,0x6e,0xa3,0x4c,0x14,\n+0x74,0x61,0x6c,0x69,0x63,0x5d,1,0x68,0x26,0x6b,0xa3,0x6d,0x12,0x69,0x6b,0x69,\n+0xa3,0x6d,2,0x69,0x2c,0x6b,0x30,0x79,0x10,0x61,0x5f,0x11,0x79,0x61,0x5f,0x10,\n+0x68,0xa3,0x58,0x68,0xc3,0xd,0x6b,0xc2,0x24,0x6b,0xa4,0x17,0x6c,0xa4,0xb2,0x6d,\n+8,0x6f,0x46,0x6f,0x48,0x72,0x74,0x74,0x80,0x75,0x86,0x79,1,0x61,0x28,0x6d,\n+0x10,0x72,0x59,0x13,0x6e,0x6d,0x61,0x72,0x59,2,0x64,0x2e,0x6e,0x32,0x6f,0x10,\n+0x6e,0xa3,0x72,0x10,0x69,0xa3,0xa3,0x10,0x67,0x56,0x14,0x6f,0x6c,0x69,0x61,0x6e,\n+0x57,0x10,0x6f,0xa2,0x95,0x10,0x6f,0xa3,0x95,0x11,0x65,0x69,0xa3,0x73,0x11,0x6c,\n+0x74,0xa2,0xa4,0x12,0x61,0x6e,0x69,0xa3,0xa4,0x61,0x36,0x65,0xa2,0x67,0x69,0xa2,\n+0xbd,0x6c,0x11,0x79,0x6d,0x55,6,0x6e,0x38,0x6e,0x32,0x72,0x5c,0x73,0x6c,0x79,\n+0x10,0x61,0xa3,0x55,1,0x64,0x38,0x69,0xa2,0x79,0x15,0x63,0x68,0x61,0x65,0x61,\n+0x6e,0xa3,0x79,0xa2,0x54,0x12,0x61,0x69,0x63,0xa3,0x54,0x10,0x63,0xa2,0xa9,0x12,\n+0x68,0x65,0x6e,0xa3,0xa9,0x18,0x61,0x72,0x61,0x6d,0x67,0x6f,0x6e,0x64,0x69,0xa3,\n+0xaf,0x68,0x36,0x6b,0x4c,0x6c,0x15,0x61,0x79,0x61,0x6c,0x61,0x6d,0x55,1,0x61,\n+0x26,0x6a,0xa3,0xa0,0x13,0x6a,0x61,0x6e,0x69,0xa3,0xa0,0x10,0x61,0xa2,0xb4,0x12,\n+0x73,0x61,0x72,0xa3,0xb4,3,0x64,0x78,0x65,0x94,0x6e,0xa2,0x42,0x72,1,0x63,\n+0xa3,0x8d,0x6f,0xa2,0x56,0x13,0x69,0x74,0x69,0x63,1,0x63,0x3c,0x68,0x19,0x69,\n+0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0x56,0x15,0x75,0x72,0x73,0x69,\n+0x76,0x65,0xa3,0x8d,1,0x65,0x26,0x66,0xa3,0xb5,0x16,0x66,0x61,0x69,0x64,0x72,\n+0x69,0x6e,0xa3,0xb5,0x17,0x74,0x65,0x69,0x6d,0x61,0x79,0x65,0x6b,0xa3,0x73,0x10,\n+0x64,0xa2,0x8c,0x17,0x65,0x6b,0x69,0x6b,0x61,0x6b,0x75,0x69,0xa3,0x8c,0x11,0x61,\n+0x6f,0xa3,0x5c,6,0x6e,0x1a,0x6e,0x34,0x6f,0x38,0x70,0x3e,0x74,0x11,0x68,0x69,\n+0xa3,0x78,0x11,0x64,0x61,0x4b,0x11,0x72,0x65,0xa3,0x77,0x11,0x65,0x6c,0xa3,0x8a,\n+0x61,0x30,0x68,0x9a,0x69,0x11,0x74,0x73,0xa3,0xbf,4,0x69,0x3c,0x6c,0x44,0x6e,\n+0x48,0x74,0x56,0x79,0x13,0x61,0x68,0x6c,0x69,0xa3,0x4f,0x12,0x74,0x68,0x69,0xa3,\n+0x78,0x10,0x69,0xa3,0x4f,1,0x61,0x4d,0x6e,0x12,0x61,0x64,0x61,0x4b,0x14,0x61,\n+0x6b,0x61,0x6e,0x61,0x4c,0x19,0x6f,0x72,0x68,0x69,0x72,0x61,0x67,0x61,0x6e,0x61,\n+0x8d,4,0x61,0x40,0x69,0x52,0x6d,0x70,0x6f,0x7c,0x75,0x15,0x64,0x61,0x77,0x61,\n+0x64,0x69,0xa3,0x91,0x10,0x72,0x92,0x15,0x6f,0x73,0x68,0x74,0x68,0x69,0x93,0x1d,\n+0x74,0x61,0x6e,0x73,0x6d,0x61,0x6c,0x6c,0x73,0x63,0x72,0x69,0x70,0x74,0xa3,0xbf,\n+1,0x65,0x24,0x72,0x4f,0x10,0x72,0x4f,0x10,0x6a,0xa2,0x9d,0x11,0x6b,0x69,0xa3,\n+0x9d,4,0x61,0x5c,0x65,0x90,0x69,0xa0,0x6f,0xa2,0x5d,0x79,1,0x63,0x34,0x64,\n+0x10,0x69,0xa2,0x6c,0x11,0x61,0x6e,0xa3,0x6c,0x10,0x69,0xa2,0x6b,0x11,0x61,0x6e,\n+0xa3,0x6b,2,0x6e,0x42,0x6f,0x46,0x74,3,0x66,0xa3,0x50,0x67,0xa3,0x51,0x69,\n+0x24,0x6e,0x53,0x10,0x6e,0x53,0x10,0x61,0xa3,0x6a,0x50,0x10,0x6f,0x51,0x11,0x70,\n+0x63,0xa2,0x52,0x11,0x68,0x61,0xa3,0x52,2,0x6d,0x2e,0x6e,0x36,0x73,0x10,0x75,\n+0xa3,0x83,0x10,0x62,0x80,0x10,0x75,0x81,2,0x61,0xa3,0x53,0x62,0x83,0x65,0x11,\n+0x61,0x72,1,0x61,0xa3,0x53,0x62,0x83,0x11,0x6d,0x61,0xa3,0x8b,0x68,0x6e,0x69,\n+0xa2,0x95,0x6a,2,0x61,0x30,0x70,0x52,0x75,0x11,0x72,0x63,0xa3,0x94,1,0x6d,\n+0x38,0x76,0x10,0x61,0xa2,0x4e,0x13,0x6e,0x65,0x73,0x65,0xa3,0x4e,0x10,0x6f,0xa3,\n+0xad,0x11,0x61,0x6e,0xa3,0x69,6,0x6c,0x1e,0x6c,0x34,0x6d,0x3a,0x72,0x48,0x75,\n+0x11,0x6e,0x67,0xa3,0x4c,0x11,0x75,0x77,0xa3,0x9c,0x10,0x6e,1,0x67,0xa3,0x4b,\n+0x70,0xa3,0xba,0x11,0x6b,0x74,0x8d,0x61,0x3c,0x65,0xa2,0x43,0x69,0x11,0x72,0x61,\n+0x48,0x13,0x67,0x61,0x6e,0x61,0x49,1,0x6e,0x34,0x74,0x10,0x72,0xa2,0xa2,0x11,\n+0x61,0x6e,0xa3,0xa2,0x42,6,0x6f,0xe,0x6f,0x77,0x73,0xa3,0x49,0x74,0xa3,0x4a,\n+0x75,0x12,0x6e,0x6f,0x6f,0x77,0x62,0xa3,0xac,0x67,0x3e,0x69,0x42,0x19,0x66,0x69,\n+0x72,0x6f,0x68,0x69,0x6e,0x67,0x79,0x61,0xa3,0xb6,0x44,0x11,0x75,0x6c,0x45,0x11,\n+0x62,0x72,0x46,0x11,0x65,0x77,0x47,2,0x6d,0x2e,0x6e,0x4a,0x74,0x11,0x61,0x6c,\n+0x5d,0x1c,0x70,0x65,0x72,0x69,0x61,0x6c,0x61,0x72,0x61,0x6d,0x61,0x69,0x63,0xa3,\n+0x74,2,0x64,0x66,0x68,0x6a,0x73,0x1b,0x63,0x72,0x69,0x70,0x74,0x69,0x6f,0x6e,\n+0x61,0x6c,0x70,0x61,1,0x68,0x32,0x72,0x14,0x74,0x68,0x69,0x61,0x6e,0xa3,0x7d,\n+0x13,0x6c,0x61,0x76,0x69,0xa3,0x7a,0x10,0x73,0xa3,0x4d,0x15,0x65,0x72,0x69,0x74,\n+0x65,0x64,0x23,0x64,0xc1,0xd,0x64,0xa2,0x7a,0x65,0xa2,0xc1,0x67,4,0x65,0x82,\n+0x6c,0x9a,0x6f,0xa2,0x46,0x72,0xa2,0x55,0x75,2,0x6a,0x3c,0x6e,0x4e,0x72,1,\n+0x6d,0x24,0x75,0x41,0x13,0x75,0x6b,0x68,0x69,0x41,1,0x61,0x24,0x72,0x3f,0x13,\n+0x72,0x61,0x74,0x69,0x3f,0x18,0x6a,0x61,0x6c,0x61,0x67,0x6f,0x6e,0x64,0x69,0xa3,\n+0xb3,0x10,0x6f,1,0x6b,0xa3,0x48,0x72,0x38,0x13,0x67,0x69,0x61,0x6e,0x39,0x11,\n+0x61,0x67,0x90,0x15,0x6f,0x6c,0x69,0x74,0x69,0x63,0x91,1,0x6e,0x30,0x74,0x10,\n+0x68,0x3a,0x11,0x69,0x63,0x3b,1,0x67,0xa3,0xb3,0x6d,0xa3,0xaf,1,0x61,0x32,\n+0x65,1,0x65,0x24,0x6b,0x3d,0x10,0x6b,0x3d,0x10,0x6e,0xa2,0x89,0x12,0x74,0x68,\n+0x61,0xa3,0x89,4,0x65,0x46,0x69,0x6c,0x6f,0x8c,0x73,0x9a,0x75,0x11,0x70,0x6c,\n+0xa2,0x87,0x13,0x6f,0x79,0x61,0x6e,0xa3,0x87,1,0x73,0x38,0x76,0x10,0x61,0x34,\n+0x15,0x6e,0x61,0x67,0x61,0x72,0x69,0x35,0x13,0x65,0x72,0x65,0x74,0x33,1,0x61,\n+0x36,0x76,0x16,0x65,0x73,0x61,0x6b,0x75,0x72,0x75,0xa3,0xbe,0x10,0x6b,0xa3,0xbe,\n+0x11,0x67,0x72,0xa2,0xb2,0x10,0x61,0xa3,0xb2,0x11,0x72,0x74,0x33,2,0x67,0x3a,\n+0x6c,0x72,0x74,0x11,0x68,0x69,0x36,0x13,0x6f,0x70,0x69,0x63,0x37,0x10,0x79,2,\n+0x64,0xa3,0x45,0x68,0xa3,0x46,0x70,0xa2,0x47,0x1e,0x74,0x69,0x61,0x6e,0x68,0x69,\n+0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0x47,1,0x62,0x36,0x79,0x10,\n+0x6d,0xa2,0xb9,0x12,0x61,0x69,0x63,0xa3,0xb9,0x10,0x61,0xa2,0x88,0x12,0x73,0x61,\n+0x6e,0xa3,0x88,0x61,0xa2,0xb4,0x62,0xa4,0x19,0x63,6,0x6f,0x3d,0x6f,0x5a,0x70,\n+0x76,0x75,0x7a,0x79,1,0x70,0x3e,0x72,2,0x69,0x2a,0x6c,0x31,0x73,0xa3,0x44,\n+0x13,0x6c,0x6c,0x69,0x63,0x31,0x13,0x72,0x69,0x6f,0x74,0x7f,1,0x6d,0x30,0x70,\n+0x10,0x74,0x2e,0x11,0x69,0x63,0x2f,0x12,0x6d,0x6f,0x6e,0x21,0x11,0x72,0x74,0x7f,\n+0x16,0x6e,0x65,0x69,0x66,0x6f,0x72,0x6d,0xa3,0x65,0x61,0x32,0x68,0xa2,0x41,0x69,\n+0x11,0x72,0x74,0xa3,0x43,3,0x6b,0x4c,0x6e,0x50,0x72,0x76,0x75,0x1d,0x63,0x61,\n+0x73,0x69,0x61,0x6e,0x61,0x6c,0x62,0x61,0x6e,0x69,0x61,0x6e,0xa3,0x9f,0x10,0x6d,\n+0xa3,0x76,1,0x61,0x24,0x73,0x71,0x1d,0x64,0x69,0x61,0x6e,0x61,0x62,0x6f,0x72,\n+0x69,0x67,0x69,0x6e,0x61,0x6c,0x71,0x10,0x69,0xa2,0x68,0x11,0x61,0x6e,0xa3,0x68,\n+3,0x61,0x32,0x65,0x44,0x6f,0x52,0x72,0x10,0x73,0xa3,0xbd,1,0x6b,0x26,0x6d,\n+0xa3,0x42,0x11,0x6d,0x61,0xa3,0x76,0x10,0x72,0x2c,0x13,0x6f,0x6b,0x65,0x65,0x2d,\n+0x16,0x72,0x61,0x73,0x6d,0x69,0x61,0x6e,0xa3,0xbd,6,0x68,0x4a,0x68,0x48,0x6e,\n+0x4e,0x72,0x76,0x76,1,0x65,0x2a,0x73,0x10,0x74,0xa3,0x75,0x13,0x73,0x74,0x61,\n+0x6e,0xa3,0x75,0x11,0x6f,0x6d,0xa3,0xa1,0x11,0x61,0x74,0x1f,0x6f,0x6c,0x69,0x61,\n+0x6e,0x68,0x69,0x65,0x72,0x6f,0x67,0x6c,0x79,0x70,0x68,0x73,0xa3,0x9c,1,0x61,\n+0x3e,0x6d,2,0x65,0x2a,0x69,0xa3,0x74,0x6e,0x27,0x13,0x6e,0x69,0x61,0x6e,0x27,\n+0x10,0x62,0x24,0x11,0x69,0x63,0x25,0x64,0x30,0x66,0x44,0x67,0x11,0x68,0x62,0xa3,\n+0x9f,0x10,0x6c,1,0x61,0x26,0x6d,0xa3,0xa7,0x10,0x6d,0xa3,0xa7,0x11,0x61,0x6b,\n+0xa3,0x93,6,0x6c,0x3c,0x6c,0x52,0x6f,0x56,0x72,0x66,0x75,1,0x67,0x30,0x68,\n+1,0x64,0x79,0x69,0x10,0x64,0x79,0x10,0x69,0x8e,0x13,0x6e,0x65,0x73,0x65,0x8f,\n+0x11,0x69,0x73,0xa1,0x11,0x70,0x6f,0x2a,0x13,0x6d,0x6f,0x66,0x6f,0x2b,0x10,0x61,\n+1,0x68,0x2e,0x69,0x7c,0x12,0x6c,0x6c,0x65,0x7d,0xa2,0x41,0x11,0x6d,0x69,0xa3,\n+0x41,0x61,0x48,0x65,0x9c,0x68,1,0x61,0x2a,0x6b,0x10,0x73,0xa3,0xa8,0x15,0x69,\n+0x6b,0x73,0x75,0x6b,0x69,0xa3,0xa8,3,0x6c,0x3a,0x6d,0x48,0x73,0x54,0x74,1,\n+0x61,0x24,0x6b,0x9f,0x10,0x6b,0x9f,0x10,0x69,0x9c,0x13,0x6e,0x65,0x73,0x65,0x9d,\n+0x10,0x75,0xa2,0x82,0x10,0x6d,0xa3,0x82,0x10,0x73,0xa2,0x86,0x13,0x61,0x76,0x61,\n+0x68,0xa3,0x86,0x11,0x6e,0x67,0x28,0x12,0x61,0x6c,0x69,0x29,3,0x6c,0x42,0x6e,\n+0x90,0x74,0xa2,0x46,0x76,0x24,0x17,0x6f,0x77,0x65,0x6c,0x6a,0x61,0x6d,0x6f,0x25,\n+0x22,1,0x65,0x54,0x76,0x28,1,0x73,0x38,0x74,0x2a,0x17,0x73,0x79,0x6c,0x6c,\n+0x61,0x62,0x6c,0x65,0x2b,0x16,0x79,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x29,0x18,0x61,\n+0x64,0x69,0x6e,0x67,0x6a,0x61,0x6d,0x6f,0x23,1,0x61,0x21,0x6f,0x1a,0x74,0x61,\n+0x70,0x70,0x6c,0x69,0x63,0x61,0x62,0x6c,0x65,0x21,0x26,0x1a,0x72,0x61,0x69,0x6c,\n+0x69,0x6e,0x67,0x6a,0x61,0x6d,0x6f,0x27,1,0x6e,0x2c,0x79,0x22,0x11,0x65,0x73,\n+0x23,0x20,0x10,0x6f,0x21,1,0x6e,0x2c,0x79,0x22,0x11,0x65,0x73,0x23,0x20,0x10,\n+0x6f,0x21,2,0x6d,0x30,0x6e,0x3a,0x79,0x22,0x11,0x65,0x73,0x23,0x24,0x13,0x61,\n+0x79,0x62,0x65,0x25,0x20,0x10,0x6f,0x21,2,0x6d,0x30,0x6e,0x3a,0x79,0x22,0x11,\n+0x65,0x73,0x23,0x24,0x13,0x61,0x79,0x62,0x65,0x25,0x20,0x10,0x6f,0x21,0xb,0x72,\n+0x39,0x76,0xc,0x76,0x33,0x78,0x2a,0x7a,0x11,0x77,0x6a,0x43,0x10,0x78,0x21,0x72,\n+0x28,0x73,0x50,0x74,0x31,1,0x65,0x24,0x69,0x39,0x1e,0x67,0x69,0x6f,0x6e,0x61,\n+0x6c,0x69,0x6e,0x64,0x69,0x63,0x61,0x74,0x6f,0x72,0x39,1,0x6d,0x35,0x70,0x18,\n+0x61,0x63,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,0x35,0x6c,0x1f,0x6c,0x3c,0x6f,0x4a,\n+0x70,1,0x70,0x37,0x72,0x14,0x65,0x70,0x65,0x6e,0x64,0x37,0x28,1,0x66,0x2b,\n+0x76,0x2c,0x10,0x74,0x2f,0x13,0x74,0x68,0x65,0x72,0x21,0x63,0x4c,0x65,0x64,0x67,\n+1,0x61,0x3a,0x6c,0x19,0x75,0x65,0x61,0x66,0x74,0x65,0x72,0x7a,0x77,0x6a,0x41,\n+0x10,0x7a,0x41,2,0x6e,0x23,0x6f,0x24,0x72,0x25,0x14,0x6e,0x74,0x72,0x6f,0x6c,\n+0x23,2,0x62,0x34,0x6d,0x4e,0x78,0x26,0x13,0x74,0x65,0x6e,0x64,0x27,0x3a,1,\n+0x61,0x24,0x67,0x3d,0x11,0x73,0x65,0x3a,0x12,0x67,0x61,0x7a,0x3d,0x3e,0x16,0x6f,\n+0x64,0x69,0x66,0x69,0x65,0x72,0x3f,9,0x6e,0x4a,0x6e,0x34,0x6f,0x44,0x73,0x60,\n+0x75,0x94,0x78,0x10,0x78,0x21,0x10,0x75,0x2a,0x14,0x6d,0x65,0x72,0x69,0x63,0x2b,\n+1,0x6c,0x2c,0x74,0x12,0x68,0x65,0x72,0x21,0x14,0x65,0x74,0x74,0x65,0x72,0x2d,\n+3,0x63,0x36,0x65,0x46,0x70,0x31,0x74,0x32,0x12,0x65,0x72,0x6d,0x33,0x3c,0x16,\n+0x6f,0x6e,0x74,0x69,0x6e,0x75,0x65,0x3d,0x2e,0x10,0x70,0x2f,0x10,0x70,0x34,0x12,\n+0x70,0x65,0x72,0x35,0x61,0x46,0x63,0x52,0x65,0x64,0x66,0x72,0x6c,2,0x65,0x2d,\n+0x66,0x3b,0x6f,0x28,0x12,0x77,0x65,0x72,0x29,0x10,0x74,0x22,0x12,0x65,0x72,0x6d,\n+0x23,1,0x6c,0x24,0x72,0x37,0x24,0x12,0x6f,0x73,0x65,0x25,0x10,0x78,0x38,0x13,\n+0x74,0x65,0x6e,0x64,0x39,0x10,0x6f,0x26,0x13,0x72,0x6d,0x61,0x74,0x27,0,0x10,\n+0x6c,0x88,0x72,0x40,0x72,0x36,0x73,0x5e,0x77,0x7a,0x78,0x8a,0x7a,0x11,0x77,0x6a,\n+0x4b,1,0x65,0x24,0x69,0x3b,0x1e,0x67,0x69,0x6f,0x6e,0x61,0x6c,0x69,0x6e,0x64,\n+0x69,0x63,0x61,0x74,0x6f,0x72,0x3b,1,0x69,0x24,0x71,0x3f,0x18,0x6e,0x67,0x6c,\n+0x65,0x71,0x75,0x6f,0x74,0x65,0x3f,0x17,0x73,0x65,0x67,0x73,0x70,0x61,0x63,0x65,\n+0x4d,0x10,0x78,0x21,0x6c,0x36,0x6d,0x3c,0x6e,0x76,0x6f,0x13,0x74,0x68,0x65,0x72,\n+0x21,1,0x65,0x23,0x66,0x35,3,0x62,0x37,0x69,0x28,0x6c,0x29,0x6e,0x2b,0x10,\n+0x64,1,0x6c,0x34,0x6e,0x11,0x75,0x6d,0x2a,0x12,0x6c,0x65,0x74,0x37,0x14,0x65,\n+0x74,0x74,0x65,0x72,0x29,2,0x65,0x36,0x6c,0x39,0x75,0x2c,0x14,0x6d,0x65,0x72,\n+0x69,0x63,0x2d,0x14,0x77,0x6c,0x69,0x6e,0x65,0x39,0x66,0x3f,0x66,0x40,0x67,0x4e,\n+0x68,0x70,0x6b,0x10,0x61,0x26,0x15,0x74,0x61,0x6b,0x61,0x6e,0x61,0x27,0x10,0x6f,\n+0x24,0x13,0x72,0x6d,0x61,0x74,0x25,1,0x61,0x3a,0x6c,0x19,0x75,0x65,0x61,0x66,\n+0x74,0x65,0x72,0x7a,0x77,0x6a,0x49,0x10,0x7a,0x49,1,0x65,0x24,0x6c,0x3d,0x19,\n+0x62,0x72,0x65,0x77,0x6c,0x65,0x74,0x74,0x65,0x72,0x3d,0x61,0x86,0x63,0x92,0x64,\n+0x94,0x65,2,0x62,0x44,0x6d,0x5e,0x78,0x2e,0x13,0x74,0x65,0x6e,0x64,0x32,0x15,\n+0x6e,0x75,0x6d,0x6c,0x65,0x74,0x2f,0x42,1,0x61,0x24,0x67,0x45,0x11,0x73,0x65,\n+0x42,0x12,0x67,0x61,0x7a,0x45,0x46,0x16,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,0x47,\n+0x15,0x6c,0x65,0x74,0x74,0x65,0x72,0x23,0x10,0x72,0x31,1,0x6f,0x24,0x71,0x41,\n+0x18,0x75,0x62,0x6c,0x65,0x71,0x75,0x6f,0x74,0x65,0x41,2,0x63,0x32,0x6e,0x3c,\n+0x6f,0x22,0x12,0x70,0x65,0x6e,0x23,0x24,0x13,0x6c,0x6f,0x73,0x65,0x25,0x20,0x12,\n+0x6f,0x6e,0x65,0x21,6,0x6f,0x65,0x6f,0x4a,0x72,0x5c,0x74,0x64,0x76,0x1d,0x69,\n+0x73,0x75,0x61,0x6c,0x6f,0x72,0x64,0x65,0x72,0x6c,0x65,0x66,0x74,0x3d,0x18,0x76,\n+0x65,0x72,0x73,0x74,0x72,0x75,0x63,0x6b,0x2d,0x13,0x69,0x67,0x68,0x74,0x2f,0x11,\n+0x6f,0x70,0x30,0x12,0x61,0x6e,0x64,2,0x62,0x32,0x6c,0x62,0x72,0x13,0x69,0x67,\n+0x68,0x74,0x3b,0x14,0x6f,0x74,0x74,0x6f,0x6d,0x32,0x12,0x61,0x6e,0x64,1,0x6c,\n+0x2e,0x72,0x13,0x69,0x67,0x68,0x74,0x35,0x12,0x65,0x66,0x74,0x3f,0x12,0x65,0x66,\n+0x74,0x36,0x17,0x61,0x6e,0x64,0x72,0x69,0x67,0x68,0x74,0x39,0x62,0x2c,0x6c,0x5c,\n+0x6e,0x10,0x61,0x21,0x14,0x6f,0x74,0x74,0x6f,0x6d,0x22,0x12,0x61,0x6e,0x64,1,\n+0x6c,0x2e,0x72,0x13,0x69,0x67,0x68,0x74,0x27,0x12,0x65,0x66,0x74,0x25,0x12,0x65,\n+0x66,0x74,0x28,0x17,0x61,0x6e,0x64,0x72,0x69,0x67,0x68,0x74,0x2b,0xd,0x6e,0xaa,\n+0x72,0x70,0x72,0x92,0x73,0xa2,0x46,0x74,0xa2,0x54,0x76,1,0x69,0x60,0x6f,0x12,\n+0x77,0x65,0x6c,0x62,1,0x64,0x3a,0x69,0x19,0x6e,0x64,0x65,0x70,0x65,0x6e,0x64,\n+0x65,0x6e,0x74,0x67,0x17,0x65,0x70,0x65,0x6e,0x64,0x65,0x6e,0x74,0x65,1,0x72,\n+0x2e,0x73,0x13,0x61,0x72,0x67,0x61,0x61,0x12,0x61,0x6d,0x61,0x5f,0x1d,0x65,0x67,\n+0x69,0x73,0x74,0x65,0x72,0x73,0x68,0x69,0x66,0x74,0x65,0x72,0x57,0x1e,0x79,0x6c,\n+0x6c,0x61,0x62,0x6c,0x65,0x6d,0x6f,0x64,0x69,0x66,0x69,0x65,0x72,0x59,0x12,0x6f,\n+0x6e,0x65,1,0x6c,0x2c,0x6d,0x12,0x61,0x72,0x6b,0x5d,0x14,0x65,0x74,0x74,0x65,\n+0x72,0x5b,0x6e,0x3c,0x6f,0x7c,0x70,0x18,0x75,0x72,0x65,0x6b,0x69,0x6c,0x6c,0x65,\n+0x72,0x55,1,0x6f,0x4c,0x75,1,0x6b,0x3c,0x6d,0x12,0x62,0x65,0x72,0x50,0x15,\n+0x6a,0x6f,0x69,0x6e,0x65,0x72,0x53,0x11,0x74,0x61,0x4f,0x16,0x6e,0x6a,0x6f,0x69,\n+0x6e,0x65,0x72,0x4d,0x13,0x74,0x68,0x65,0x72,0x21,0x67,0x3e,0x67,0x4a,0x69,0x64,\n+0x6a,0x82,0x6d,0x1d,0x6f,0x64,0x69,0x66,0x79,0x69,0x6e,0x67,0x6c,0x65,0x74,0x74,\n+0x65,0x72,0x4b,0x1c,0x65,0x6d,0x69,0x6e,0x61,0x74,0x69,0x6f,0x6e,0x6d,0x61,0x72,\n+0x6b,0x45,0x1e,0x6e,0x76,0x69,0x73,0x69,0x62,0x6c,0x65,0x73,0x74,0x61,0x63,0x6b,\n+0x65,0x72,0x47,0x14,0x6f,0x69,0x6e,0x65,0x72,0x49,0x61,0xa2,0xba,0x62,0xa2,0xc0,\n+0x63,1,0x61,0xa2,0xa2,0x6f,0x16,0x6e,0x73,0x6f,0x6e,0x61,0x6e,0x74,0x2a,8,\n+0x6b,0x67,0x6b,0x48,0x6d,0x52,0x70,0x5c,0x73,0xa2,0x42,0x77,0x19,0x69,0x74,0x68,\n+0x73,0x74,0x61,0x63,0x6b,0x65,0x72,0x43,0x14,0x69,0x6c,0x6c,0x65,0x72,0x35,0x14,\n+0x65,0x64,0x69,0x61,0x6c,0x37,1,0x6c,0x52,0x72,0x10,0x65,1,0x63,0x2e,0x66,\n+0x13,0x69,0x78,0x65,0x64,0x3d,0x19,0x65,0x64,0x69,0x6e,0x67,0x72,0x65,0x70,0x68,\n+0x61,0x3b,0x18,0x61,0x63,0x65,0x68,0x6f,0x6c,0x64,0x65,0x72,0x39,0x10,0x75,1,\n+0x62,0x3e,0x63,0x1b,0x63,0x65,0x65,0x64,0x69,0x6e,0x67,0x72,0x65,0x70,0x68,0x61,\n+0x41,0x15,0x6a,0x6f,0x69,0x6e,0x65,0x64,0x3f,0x64,0x4c,0x66,0x52,0x68,0x5a,0x69,\n+0x1e,0x6e,0x69,0x74,0x69,0x61,0x6c,0x70,0x6f,0x73,0x74,0x66,0x69,0x78,0x65,0x64,\n+0x33,0x12,0x65,0x61,0x64,0x2d,0x13,0x69,0x6e,0x61,0x6c,0x2f,0x18,0x65,0x61,0x64,\n+0x6c,0x65,0x74,0x74,0x65,0x72,0x31,0x1d,0x6e,0x74,0x69,0x6c,0x6c,0x61,0x74,0x69,\n+0x6f,0x6e,0x6d,0x61,0x72,0x6b,0x29,0x16,0x76,0x61,0x67,0x72,0x61,0x68,0x61,0x23,\n+1,0x69,0x4a,0x72,0x10,0x61,0x1f,0x68,0x6d,0x69,0x6a,0x6f,0x69,0x6e,0x69,0x6e,\n+0x67,0x6e,0x75,0x6d,0x62,0x65,0x72,0x27,0x12,0x6e,0x64,0x75,0x25,2,0x72,0x38,\n+0x74,0x46,0x75,0x26,0x15,0x70,0x72,0x69,0x67,0x68,0x74,0x27,0x20,0x15,0x6f,0x74,\n+0x61,0x74,0x65,0x64,0x21,1,0x72,0x24,0x75,0x25,0x22,0x18,0x61,0x6e,0x73,0x66,\n+0x6f,0x72,0x6d,0x65,0x64,1,0x72,0x32,0x75,0x15,0x70,0x72,0x69,0x67,0x68,0x74,\n+0x25,0x15,0x6f,0x74,0x61,0x74,0x65,0x64,0x23,0xd,0x6e,0xc1,0x86,0x73,0xa8,0x73,\n+0x4c,0x74,0xa2,0x76,0x75,0xa2,0x83,0x7a,0xd8,0x70,0,2,0x6c,0xd9,0x20,0,\n+0x70,0xd9,0x40,0,0x73,0xc3,0,0xfe,0xf,0,0,0,7,0x6f,0x3c,0x6f,\n+0xff,8,0,0,0,0x70,0x3a,0x75,0x6e,0x79,0x13,0x6d,0x62,0x6f,0x6c,0xff,\n+0xf,0,0,0,0x11,0x61,0x63,1,0x65,0x34,0x69,0x15,0x6e,0x67,0x6d,0x61,\n+0x72,0x6b,0xa5,0,0x18,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0xc3,0,\n+0x16,0x72,0x72,0x6f,0x67,0x61,0x74,0x65,0xe1,0,0,0x63,0xff,2,0,0,\n+0,0x65,0x38,0x6b,0xff,4,0,0,0,0x6d,0xff,1,0,0,0,0x16,\n+0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0xd9,0x70,0,0x1d,0x69,0x74,0x6c,0x65,0x63,\n+0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x31,1,0x6e,0x40,0x70,0x1c,0x70,\n+0x65,0x72,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,0x74,0x65,0x72,0x25,0x17,0x61,0x73,\n+0x73,0x69,0x67,0x6e,0x65,0x64,0x23,0x6e,0xa2,0x69,0x6f,0xa2,0x89,0x70,0xfe,0x30,\n+0xf8,0,0,9,0x69,0x33,0x69,0xff,0x10,0,0,0,0x6f,0xfd,0x80,0,\n+0,0x72,0x54,0x73,0xf9,0,0,0x75,0x12,0x6e,0x63,0x74,0xfe,0x30,0xf8,0,\n+0,0x15,0x75,0x61,0x74,0x69,0x6f,0x6e,0xff,0x30,0xf8,0,0,0x17,0x69,0x76,\n+0x61,0x74,0x65,0x75,0x73,0x65,0xdd,0,0,0x61,0x48,0x63,0xfd,0x40,0,0,\n+0x64,0xe9,0,0,0x65,0xfd,0x20,0,0,0x66,0xff,0x20,0,0,0,0x1f,\n+0x72,0x61,0x67,0x72,0x61,0x70,0x68,0x73,0x65,0x70,0x61,0x72,0x61,0x74,0x6f,0x72,\n+0xd9,0x40,0,0xbe,0,3,0x64,0xa7,0,0x6c,0xab,0,0x6f,0x30,0x75,0x13,\n+0x6d,0x62,0x65,0x72,0xbf,0,0xb2,0,0x1b,0x6e,0x73,0x70,0x61,0x63,0x69,0x6e,\n+0x67,0x6d,0x61,0x72,0x6b,0xa1,1,0x70,0x92,0x74,0x12,0x68,0x65,0x72,0xe6,0x80,\n+1,3,0x6c,0x40,0x6e,0x4a,0x70,0x56,0x73,0x14,0x79,0x6d,0x62,0x6f,0x6c,0xff,\n+8,0,0,0,0x14,0x65,0x74,0x74,0x65,0x72,0x61,0x14,0x75,0x6d,0x62,0x65,\n+0x72,0xb3,0,0x19,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xfd,0x80,\n+0,0,0x1c,0x65,0x6e,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,\n+0xf9,0,0,0x66,0xc0,0xc4,0x66,0xa2,0x47,0x69,0xa2,0x64,0x6c,0xa2,0x79,0x6d,\n+0xa4,0xc0,4,0x61,0x6c,0x63,0xa5,0,0x65,0xa3,0x80,0x6e,0xa1,0x6f,0x15,0x64,\n+0x69,0x66,0x69,0x65,0x72,1,0x6c,0x38,0x73,0x14,0x79,0x6d,0x62,0x6f,0x6c,0xff,\n+4,0,0,0,0x14,0x65,0x74,0x74,0x65,0x72,0x41,1,0x72,0x3c,0x74,0x16,\n+0x68,0x73,0x79,0x6d,0x62,0x6f,0x6c,0xff,1,0,0,0,0x10,0x6b,0xa5,0xc0,\n+1,0x69,0x32,0x6f,0x13,0x72,0x6d,0x61,0x74,0xdb,0,0,0x1d,0x6e,0x61,0x6c,\n+0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xff,0x20,0,0,0,\n+0x10,0x6e,0x1f,0x69,0x74,0x69,0x61,0x6c,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,\n+0x69,0x6f,0x6e,0xff,0x10,0,0,0,0x9c,7,0x6d,0x18,0x6d,0x41,0x6f,0x28,\n+0x74,0x31,0x75,0x25,0x60,0x1c,0x77,0x65,0x72,0x63,0x61,0x73,0x65,0x6c,0x65,0x74,\n+0x74,0x65,0x72,0x29,0x63,0x3d,0x65,0x28,0x69,0x42,0x6c,0x29,0x13,0x74,0x74,0x65,\n+0x72,0x9c,0x15,0x6e,0x75,0x6d,0x62,0x65,0x72,0xab,0,0x1a,0x6e,0x65,0x73,0x65,\n+0x70,0x61,0x72,0x61,0x74,0x6f,0x72,0xd9,0x20,0,0x63,0x46,0x64,0xa2,0x96,0x65,\n+0x1b,0x6e,0x63,0x6c,0x6f,0x73,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,0xa3,0x80,0xe6,\n+0x80,1,7,0x6e,0x57,0x6e,0x52,0x6f,0x5e,0x73,0xe1,0,0,0x75,0x1b,0x72,\n+0x72,0x65,0x6e,0x63,0x79,0x73,0x79,0x6d,0x62,0x6f,0x6c,0xff,2,0,0,0,\n+0x22,0x12,0x74,0x72,0x6c,0xd9,0x80,0,0xdc,0,0,1,0x6d,0x62,0x6e,1,\n+0x6e,0x30,0x74,0x12,0x72,0x6f,0x6c,0xd9,0x80,0,0x1f,0x65,0x63,0x74,0x6f,0x72,\n+0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xfd,0x40,0,0,0x19,\n+0x62,0x69,0x6e,0x69,0x6e,0x67,0x6d,0x61,0x72,0x6b,0xa5,0xc0,0x61,0x58,0x63,0xd9,\n+0x80,0,0x66,0xdb,0,0,0x6c,0x1d,0x6f,0x73,0x65,0x70,0x75,0x6e,0x63,0x74,\n+0x75,0x61,0x74,0x69,0x6f,0x6e,0xfd,0x20,0,0,0x18,0x73,0x65,0x64,0x6c,0x65,\n+0x74,0x74,0x65,0x72,0x3d,2,0x61,0x32,0x65,0x50,0x69,0x12,0x67,0x69,0x74,0xa7,\n+0,0x1c,0x73,0x68,0x70,0x75,0x6e,0x63,0x74,0x75,0x61,0x74,0x69,0x6f,0x6e,0xe9,\n+0,0,0x1a,0x63,0x69,0x6d,0x61,0x6c,0x6e,0x75,0x6d,0x62,0x65,0x72,0xa7,0\n@@ -1034,1 +1048,1 @@\n-const char PropNameData::nameGroups[21692]={\n+const char PropNameData::nameGroups[22098]={\n@@ -1038,2 +1052,2 @@\n-2,'O','V',0,'O','v','e','r','l','a','y',0,2,'N','K',0,'N','u','k','t','a',0,\n-2,'K','V',0,'K','a','n','a','_','V','o','i','c','i','n','g',0,\n+2,'O','V',0,'O','v','e','r','l','a','y',0,2,'H','A','N','R',0,'H','a','n','_','R','e','a','d','i','n','g',0,\n+2,'N','K',0,'N','u','k','t','a',0,2,'K','V',0,'K','a','n','a','_','V','o','i','c','i','n','g',0,\n@@ -1489,1 +1503,10 @@\n-2,'W','a','n','c','h','o',0,'W','a','n','c','h','o',0,2,'c','c','c',0,'C','a','n','o','n','i','c','a','l','_','C','o',\n+2,'W','a','n','c','h','o',0,'W','a','n','c','h','o',0,2,'C','h','o','r','a','s','m','i','a','n',0,\n+'C','h','o','r','a','s','m','i','a','n',0,2,'C','J','K','_','E','x','t','_','G',0,'C','J','K','_','U','n','i','f','i','e',\n+'d','_','I','d','e','o','g','r','a','p','h','s','_','E','x','t','e','n','s','i','o','n','_','G',0,\n+2,'D','i','v','e','s','_','A','k','u','r','u',0,'D','i','v','e','s','_','A','k','u','r','u',0,\n+2,'K','h','i','t','a','n','_','S','m','a','l','l','_','S','c','r','i','p','t',0,'K','h','i','t','a','n','_','S','m','a','l',\n+'l','_','S','c','r','i','p','t',0,2,'L','i','s','u','_','S','u','p',0,'L','i','s','u','_','S','u','p','p','l','e','m','e',\n+'n','t',0,2,'S','y','m','b','o','l','s','_','F','o','r','_','L','e','g','a','c','y','_','C','o','m','p','u','t','i','n','g',\n+0,'S','y','m','b','o','l','s','_','F','o','r','_','L','e','g','a','c','y','_','C','o','m','p','u','t','i','n','g',0,\n+2,'T','a','n','g','u','t','_','S','u','p',0,'T','a','n','g','u','t','_','S','u','p','p','l','e','m','e','n','t',0,\n+2,'Y','e','z','i','d','i',0,'Y','e','z','i','d','i',0,2,'c','c','c',0,'C','a','n','o','n','i','c','a','l','_','C','o',\n@@ -1772,1 +1795,4 @@\n-2,'W','c','h','o',0,'W','a','n','c','h','o',0,2,'h','s','t',0,'H','a','n','g','u','l','_','S','y','l','l','a','b','l',\n+2,'W','c','h','o',0,'W','a','n','c','h','o',0,2,'C','h','r','s',0,'C','h','o','r','a','s','m','i','a','n',0,\n+2,'D','i','a','k',0,'D','i','v','e','s','_','A','k','u','r','u',0,\n+2,'K','i','t','s',0,'K','h','i','t','a','n','_','S','m','a','l','l','_','S','c','r','i','p','t',0,\n+2,'Y','e','z','i',0,'Y','e','z','i','d','i',0,2,'h','s','t',0,'H','a','n','g','u','l','_','S','y','l','l','a','b','l',\n@@ -1823,3 +1849,4 @@\n-'L','e','f','t',0,2,'I','n','S','C',0,'I','n','d','i','c','_','S','y','l','l','a','b','i','c','_','C','a','t','e','g','o',\n-'r','y',0,2,'O','t','h','e','r',0,'O','t','h','e','r',0,\n-2,'A','v','a','g','r','a','h','a',0,'A','v','a','g','r','a','h','a',0,\n+'L','e','f','t',0,2,'T','o','p','_','A','n','d','_','B','o','t','t','o','m','_','A','n','d','_','L','e','f','t',0,\n+'T','o','p','_','A','n','d','_','B','o','t','t','o','m','_','A','n','d','_','L','e','f','t',0,\n+2,'I','n','S','C',0,'I','n','d','i','c','_','S','y','l','l','a','b','i','c','_','C','a','t','e','g','o','r','y',0,\n+2,'O','t','h','e','r',0,'O','t','h','e','r',0,2,'A','v','a','g','r','a','h','a',0,'A','v','a','g','r','a','h','a',0,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/propname_data.h","additions":909,"deletions":882,"binary":false,"changes":1791,"status":"modified"},{"patch":"@@ -110,3 +110,2 @@\n- * basicToDigit[] contains the numeric value of a basic code\n- * point (for use in representing integers) in the range 0 to\n- * BASE-1, or -1 if b is does not represent a value.\n+ * @return the numeric value of a basic code point (for use in representing integers)\n+ *         in the range 0 to BASE-1, or a negative value if cp is invalid.\n@@ -114,26 +113,17 @@\n-static const int8_t\n-basicToDigit[256]={\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-    26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1, -1,\n-\n-    -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n-    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n-\n-    -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n-    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n-\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\n-};\n+static int32_t decodeDigit(int32_t cp) {\n+    if(cp<=u'Z') {\n+        if(cp<=u'9') {\n+            if(cp<u'0') {\n+                return -1;\n+            } else {\n+                return cp-u'0'+26;  \/\/ 0..9 -> 26..35\n+            }\n+        } else {\n+            return cp-u'A';  \/\/ A-Z -> 0..25\n+        }\n+    } else if(cp<=u'z') {\n+        return cp-'a';  \/\/ a..z -> 0..25\n+    } else {\n+        return -1;\n+    }\n+}\n@@ -181,1 +171,1 @@\n-#define MAX_CP_COUNT    200\n+namespace {\n@@ -183,1 +173,9 @@\n-U_CFUNC int32_t\n+\/\/ ICU-13727: Limit input length for n^2 algorithm\n+\/\/ where well-formed strings are at most 59 characters long.\n+constexpr int32_t ENCODE_MAX_CODE_UNITS=1000;\n+constexpr int32_t DECODE_MAX_CHARS=2000;\n+\n+}  \/\/ namespace\n+\n+\/\/ encode\n+U_CAPI int32_t\n@@ -189,1 +187,1 @@\n-    int32_t cpBuffer[MAX_CP_COUNT];\n+    int32_t cpBuffer[ENCODE_MAX_CODE_UNITS];\n@@ -202,0 +200,4 @@\n+    if (srcLength>ENCODE_MAX_CODE_UNITS) {\n+        *pErrorCode=U_INPUT_TOO_LONG_ERROR;\n+        return 0;\n+    }\n@@ -214,3 +216,2 @@\n-            if(srcCPCount==MAX_CP_COUNT) {\n-                \/* too many input code points *\/\n-                *pErrorCode=U_INDEX_OUTOFBOUNDS_ERROR;\n+            if(j>=ENCODE_MAX_CODE_UNITS) {\n+                *pErrorCode=U_INPUT_TOO_LONG_ERROR;\n@@ -246,5 +247,0 @@\n-            if(srcCPCount==MAX_CP_COUNT) {\n-                \/* too many input code points *\/\n-                *pErrorCode=U_INDEX_OUTOFBOUNDS_ERROR;\n-                return 0;\n-            }\n@@ -315,1 +311,1 @@\n-        if(m-n>(0x7fffffff-MAX_CP_COUNT-delta)\/(handledCPCount+1)) {\n+        if(m-n>(0x7fffffff-handledCPCount-delta)\/(handledCPCount+1)) {\n@@ -376,1 +372,2 @@\n-U_CFUNC int32_t\n+\/\/ decode\n+U_CAPI int32_t\n@@ -398,0 +395,4 @@\n+    if (srcLength>DECODE_MAX_CHARS) {\n+        *pErrorCode=U_INPUT_TOO_LONG_ERROR;\n+        return 0;\n+    }\n@@ -458,1 +459,1 @@\n-            digit=basicToDigit[(uint8_t)src[in++]];\n+            digit=decodeDigit(src[in++]);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/punycode.cpp","additions":44,"deletions":43,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- *                  uppercasing (TRUE) or lowercasing (FALSE)\n+ *                  uppercasing (true) or lowercasing (false)\n@@ -68,1 +68,1 @@\n-U_CFUNC int32_t\n+U_CAPI int32_t\n@@ -86,1 +86,1 @@\n- *                  The caller should uppercase (TRUE) or lowercase (FASLE)\n+ *                  The caller should uppercase (true) or lowercase (FASLE)\n@@ -89,1 +89,1 @@\n- *                  is marked, and FALSE is stored for the trail surrogate.\n+ *                  is marked, and false is stored for the trail surrogate.\n@@ -103,1 +103,1 @@\n-U_CFUNC int32_t\n+U_CAPI int32_t\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/punycode.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-#error U_COMMON_IMPLEMENTATION not set - must be set for all ICU source files in common\/ - see http:\/\/userguide.icu-project.org\/howtouseicu\n+#error U_COMMON_IMPLEMENTATION not set - must be set for all ICU source files in common\/ - see https:\/\/unicode-org.github.io\/icu\/userguide\/howtouseicu\n@@ -121,0 +121,3 @@\n+#   elif U_PLATFORM == U_PF_ANDROID\n+#       include <sys\/system_properties.h>\n+#       include <dlfcn.h>\n@@ -126,0 +129,1 @@\n+\n@@ -252,1 +256,1 @@\n-    static UMutex fakeClockMutex = U_MUTEX_INTIALIZER;\n+    static UMutex fakeClockMutex;\n@@ -1046,0 +1050,17 @@\n+#if U_PLATFORM == U_PF_ANDROID\n+typedef int(system_property_read_callback)(const prop_info* info,\n+                                           void (*callback)(void* cookie,\n+                                                            const char* name,\n+                                                            const char* value,\n+                                                            uint32_t serial),\n+                                           void* cookie);\n+typedef int(system_property_get)(const char*, char*);\n+\n+static char gAndroidTimeZone[PROP_VALUE_MAX] = { '\\0' };\n+\n+static void u_property_read(void* cookie, const char* name, const char* value,\n+                            uint32_t serial) {\n+    uprv_strcpy((char* )cookie, value);\n+}\n+#endif\n+\n@@ -1047,1 +1068,1 @@\n-uprv_tzname_clear_cache()\n+uprv_tzname_clear_cache(void)\n@@ -1049,0 +1070,27 @@\n+#if U_PLATFORM == U_PF_ANDROID\n+    \/* Android's timezone is stored in system property. *\/\n+    gAndroidTimeZone[0] = '\\0';\n+    void* libc = dlopen(\"libc.so\", RTLD_NOLOAD);\n+    if (libc) {\n+        \/* Android API 26+ has new API to get system property and old API\n+         * (__system_property_get) is deprecated *\/\n+        system_property_read_callback* property_read_callback =\n+            (system_property_read_callback*)dlsym(\n+                libc, \"__system_property_read_callback\");\n+        if (property_read_callback) {\n+            const prop_info* info =\n+                __system_property_find(\"persist.sys.timezone\");\n+            if (info) {\n+                property_read_callback(info, &u_property_read, gAndroidTimeZone);\n+            }\n+        } else {\n+            system_property_get* property_get =\n+                (system_property_get*)dlsym(libc, \"__system_property_get\");\n+            if (property_get) {\n+                property_get(\"persist.sys.timezone\", gAndroidTimeZone);\n+            }\n+        }\n+        dlclose(libc);\n+    }\n+#endif\n+\n@@ -1087,0 +1135,3 @@\n+#if U_PLATFORM == U_PF_ANDROID\n+    tzid = gAndroidTimeZone;\n+#else\n@@ -1088,0 +1139,1 @@\n+#endif\n@@ -1318,1 +1370,1 @@\n-#if U_PLATFORM_HAS_WINUWP_API != 0\n+#if defined(ICU_DATA_DIR_WINDOWS)\n@@ -1322,1 +1374,0 @@\n-#if defined(ICU_DATA_DIR_WINDOWS)\n@@ -1349,1 +1400,0 @@\n-#endif\n@@ -1383,1 +1433,1 @@\n-#       if U_PLATFORM_HAS_WINUWP_API == 0  \/\/ Windows UWP does not support getenv\n+#     if U_PLATFORM_HAS_WINUWP_API == 0  \/\/ Windows UWP does not support getenv\n@@ -1385,1 +1435,1 @@\n-#       endif\n+#     endif\n@@ -1414,1 +1464,1 @@\n-#if U_PLATFORM_HAS_WINUWP_API != 0  && defined(ICU_DATA_DIR_WINDOWS)\n+#if defined(ICU_DATA_DIR_WINDOWS)\n@@ -1464,2 +1514,10 @@\n-#if U_PLATFORM_HAS_WINUWP_API != 0\n-    \/\/ The UWP version does not support the environment variable setting, but can possibly pick them up from the Windows directory.\n+#if defined(ICU_TIMEZONE_FILES_DIR_PREFIX_ENV_VAR)\n+    char timezonefilesdir_path_buffer[PATH_MAX];\n+    const char *prefix = getenv(ICU_TIMEZONE_FILES_DIR_PREFIX_ENV_VAR);\n+#endif\n+\n+#if U_PLATFORM_HAS_WINUWP_API == 1\n+\/\/ The UWP version does not support the environment variable setting.\n+\n+# if defined(ICU_DATA_DIR_WINDOWS)\n+    \/\/ When using the Windows system data, we can possibly pick up time zone data from the Windows directory.\n@@ -1470,0 +1528,2 @@\n+# endif\n+\n@@ -1485,0 +1545,7 @@\n+#if defined(ICU_TIMEZONE_FILES_DIR_PREFIX_ENV_VAR)\n+    if (prefix != NULL) {\n+        snprintf(timezonefilesdir_path_buffer, PATH_MAX, \"%s%s\", prefix, dir);\n+        dir = timezonefilesdir_path_buffer;\n+    }\n+#endif\n+\n@@ -1563,0 +1630,4 @@\n+        \/\/ Note: this test will not catch 'C.UTF-8',\n+        \/\/ that will be handled in uprv_getDefaultLocaleID().\n+        \/\/ Leave this mapping here for the uprv_getPOSIXIDForDefaultCodepage()\n+        \/\/ caller which expects to see \"en_US_POSIX\" in many branches.\n@@ -1634,2 +1705,2 @@\n-    \/\/ Over-allocate in case we replace \"@\" with \"__\".\n-    char *correctedPOSIXLocale = static_cast<char *>(uprv_malloc(uprv_strlen(posixID) + 1 + 1));\n+    \/\/ Over-allocate in case we replace \"C\" with \"en_US_POSIX\" (+10), + null termination\n+    char *correctedPOSIXLocale = static_cast<char *>(uprv_malloc(uprv_strlen(posixID) + 10 + 1));\n@@ -1644,3 +1715,10 @@\n-        if ((limit = uprv_strchr(correctedPOSIXLocale, '@')) != nullptr) {\n-            *limit = 0;\n-        }\n+    }\n+    if ((limit = uprv_strchr(correctedPOSIXLocale, '@')) != nullptr) {\n+        *limit = 0;\n+    }\n+\n+    if ((uprv_strcmp(\"C\", correctedPOSIXLocale) == 0) \/\/ no @ variant\n+        || (uprv_strcmp(\"POSIX\", correctedPOSIXLocale) == 0)) {\n+      \/\/ Raw input was C.* or POSIX.*, Give it a nice POSIX default value.\n+      \/\/ (The \"C\"\/\"POSIX\" case is handled in uprv_getPOSIXIDForCategory())\n+      uprv_strcpy(correctedPOSIXLocale, \"en_US_POSIX\");\n@@ -1671,1 +1749,1 @@\n-            uprv_strncat(correctedPOSIXLocale, p, q-p);\n+            uprv_strncat(correctedPOSIXLocale, p, q-p); \/\/ do not include charset\n@@ -2056,1 +2134,1 @@\n-#if U_PLATFORM_HAS_WINUWP_API > 0\n+#if U_PLATFORM_HAS_WINUWP_API == 1\n@@ -2276,1 +2354,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -2290,1 +2368,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2296,1 +2374,1 @@\n-U_INTERNAL UVoidFunction* U_EXPORT2\n+U_CAPI UVoidFunction* U_EXPORT2\n@@ -2319,1 +2397,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -2334,1 +2412,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2344,1 +2422,1 @@\n-U_INTERNAL UVoidFunction* U_EXPORT2\n+U_CAPI UVoidFunction* U_EXPORT2\n@@ -2369,1 +2447,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -2377,1 +2455,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2385,1 +2463,1 @@\n-U_INTERNAL UVoidFunction* U_EXPORT2\n+U_CAPI UVoidFunction* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/putil.cpp","additions":105,"deletions":27,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -181,70 +181,0 @@\n-\/*===========================================================================*\/\n-\/** @{ GCC built in functions for atomic memory operations                   *\/\n-\/*===========================================================================*\/\n-\n-\/**\n- * \\def U_HAVE_GCC_ATOMICS\n- * @internal\n- *\/\n-#ifdef U_HAVE_GCC_ATOMICS\n-    \/* Use the predefined value. *\/\n-#elif U_PLATFORM == U_PF_MINGW\n-    #define U_HAVE_GCC_ATOMICS 0\n-#elif U_GCC_MAJOR_MINOR >= 404 || defined(__clang__)\n-    \/* TODO: Intel icc and IBM xlc on AIX also support gcc atomics.  (Intel originated them.)\n-     *       Add them for these compilers.\n-     * Note: Clang sets __GNUC__ defines for version 4.2, so misses the 4.4 test here.\n-     *\/\n-#   define U_HAVE_GCC_ATOMICS 1\n-#else\n-#   define U_HAVE_GCC_ATOMICS 0\n-#endif\n-\n-\/** @} *\/\n-\n-\/**\n- * \\def U_HAVE_STD_ATOMICS\n- * Defines whether to use the C++11 std::atomic functions.\n- * If false, ICU will fall back to compiler or platform specific alternatives.\n- * Note: support for these fall back options for atomics will be removed in a future version\n- *       of ICU, and the use of C++ 11 atomics will be required.\n- * @internal\n- *\/\n-#ifdef U_HAVE_STD_ATOMICS\n-    \/* Use the predefined value. *\/\n-#else\n-#    define U_HAVE_STD_ATOMICS 1\n-#endif\n-\n-\/**\n- *  \\def U_HAVE_CLANG_ATOMICS\n- *  Defines whether Clang c11 style built-in atomics are available.\n- *  These are used in preference to gcc atomics when both are available.\n- *\/\n-#ifdef U_HAVE_CLANG_ATOMICS\n-    \/* Use the predefined value. *\/\n-#elif __has_builtin(__c11_atomic_load) && \\\n-    __has_builtin(__c11_atomic_store) && \\\n-    __has_builtin(__c11_atomic_fetch_add) && \\\n-    __has_builtin(__c11_atomic_fetch_sub)\n-#    define U_HAVE_CLANG_ATOMICS 1\n-#else\n-#    define U_HAVE_CLANG_ATOMICS 0\n-#endif\n-\n-\n-\/**\n- * \\def U_HAVE_STD_MUTEX\n- * Defines whether to use the C++11 std::mutex functions.\n- * If false, ICU will fall back to compiler or platform specific alternatives.\n- * std::mutex is preferred, and used by default unless this setting is overridden.\n- * Note: support for other options for mutexes will be removed in a future version\n- *       of ICU, and the use of std::mutex will be required.\n- * @internal\n- *\/\n-#ifdef U_HAVE_STD_MUTEX\n-    \/* Use the predefined value. *\/\n-#else\n-#    define U_HAVE_STD_MUTEX 1\n-#endif\n-\n@@ -283,1 +213,1 @@\n-U_INTERNAL UBool   U_EXPORT2 uprv_isNaN(double d);\n+U_CAPI UBool   U_EXPORT2 uprv_isNaN(double d);\n@@ -288,1 +218,1 @@\n-U_INTERNAL UBool   U_EXPORT2 uprv_isInfinite(double d);\n+U_CAPI UBool   U_EXPORT2 uprv_isInfinite(double d);\n@@ -293,1 +223,1 @@\n-U_INTERNAL UBool   U_EXPORT2 uprv_isPositiveInfinity(double d);\n+U_CAPI UBool   U_EXPORT2 uprv_isPositiveInfinity(double d);\n@@ -298,1 +228,1 @@\n-U_INTERNAL UBool   U_EXPORT2 uprv_isNegativeInfinity(double d);\n+U_CAPI UBool   U_EXPORT2 uprv_isNegativeInfinity(double d);\n@@ -303,1 +233,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_getNaN(void);\n+U_CAPI double  U_EXPORT2 uprv_getNaN(void);\n@@ -308,1 +238,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_getInfinity(void);\n+U_CAPI double  U_EXPORT2 uprv_getInfinity(void);\n@@ -314,1 +244,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_trunc(double d);\n+U_CAPI double  U_EXPORT2 uprv_trunc(double d);\n@@ -319,1 +249,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_floor(double d);\n+U_CAPI double  U_EXPORT2 uprv_floor(double d);\n@@ -324,1 +254,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_ceil(double d);\n+U_CAPI double  U_EXPORT2 uprv_ceil(double d);\n@@ -329,1 +259,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_fabs(double d);\n+U_CAPI double  U_EXPORT2 uprv_fabs(double d);\n@@ -334,1 +264,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_modf(double d, double* pinteger);\n+U_CAPI double  U_EXPORT2 uprv_modf(double d, double* pinteger);\n@@ -339,1 +269,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_fmod(double d, double y);\n+U_CAPI double  U_EXPORT2 uprv_fmod(double d, double y);\n@@ -344,1 +274,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_pow(double d, double exponent);\n+U_CAPI double  U_EXPORT2 uprv_pow(double d, double exponent);\n@@ -349,1 +279,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_pow10(int32_t exponent);\n+U_CAPI double  U_EXPORT2 uprv_pow10(int32_t exponent);\n@@ -354,1 +284,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_fmax(double d, double y);\n+U_CAPI double  U_EXPORT2 uprv_fmax(double d, double y);\n@@ -359,1 +289,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_fmin(double d, double y);\n+U_CAPI double  U_EXPORT2 uprv_fmin(double d, double y);\n@@ -364,1 +294,1 @@\n-U_INTERNAL int32_t U_EXPORT2 uprv_max(int32_t d, int32_t y);\n+U_CAPI int32_t U_EXPORT2 uprv_max(int32_t d, int32_t y);\n@@ -369,1 +299,1 @@\n-U_INTERNAL int32_t U_EXPORT2 uprv_min(int32_t d, int32_t y);\n+U_CAPI int32_t U_EXPORT2 uprv_min(int32_t d, int32_t y);\n@@ -382,1 +312,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_maxMantissa(void);\n+U_CAPI double  U_EXPORT2 uprv_maxMantissa(void);\n@@ -388,1 +318,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_log(double d);\n+U_CAPI double  U_EXPORT2 uprv_log(double d);\n@@ -396,1 +326,1 @@\n-U_INTERNAL double  U_EXPORT2 uprv_round(double x);\n+U_CAPI double  U_EXPORT2 uprv_round(double x);\n@@ -409,1 +339,1 @@\n-U_INTERNAL UBool U_EXPORT2 uprv_add32_overflow(int32_t a, int32_t b, int32_t* res);\n+U_CAPI UBool U_EXPORT2 uprv_add32_overflow(int32_t a, int32_t b, int32_t* res);\n@@ -422,1 +352,1 @@\n-U_INTERNAL UBool U_EXPORT2 uprv_mul32_overflow(int32_t a, int32_t b, int32_t* res);\n+U_CAPI UBool U_EXPORT2 uprv_mul32_overflow(int32_t a, int32_t b, int32_t* res);\n@@ -432,1 +362,1 @@\n-\/*U_INTERNAL int32_t  U_EXPORT2 uprv_digitsAfterDecimal(double x);*\/\n+\/*U_CAPI int32_t  U_EXPORT2 uprv_digitsAfterDecimal(double x);*\/\n@@ -444,1 +374,1 @@\n-U_INTERNAL const char*  U_EXPORT2 uprv_getDefaultCodepage(void);\n+U_CAPI const char*  U_EXPORT2 uprv_getDefaultCodepage(void);\n@@ -456,1 +386,1 @@\n-U_INTERNAL const char*  U_EXPORT2 uprv_getDefaultLocaleID(void);\n+U_CAPI const char*  U_EXPORT2 uprv_getDefaultLocaleID(void);\n@@ -490,1 +420,1 @@\n-U_INTERNAL void     U_EXPORT2 uprv_tzset(void);\n+U_CAPI void     U_EXPORT2 uprv_tzset(void);\n@@ -498,1 +428,1 @@\n-U_INTERNAL int32_t  U_EXPORT2 uprv_timezone(void);\n+U_CAPI int32_t  U_EXPORT2 uprv_timezone(void);\n@@ -508,1 +438,1 @@\n-U_INTERNAL const char* U_EXPORT2 uprv_tzname(int n);\n+U_CAPI const char* U_EXPORT2 uprv_tzname(int n);\n@@ -514,1 +444,1 @@\n-U_INTERNAL void uprv_tzname_clear_cache();\n+U_CAPI void uprv_tzname_clear_cache(void);\n@@ -522,1 +452,1 @@\n-U_INTERNAL UDate U_EXPORT2 uprv_getUTCtime(void);\n+U_CAPI UDate U_EXPORT2 uprv_getUTCtime(void);\n@@ -531,1 +461,1 @@\n-U_INTERNAL UDate U_EXPORT2 uprv_getRawUTCtime(void);\n+U_CAPI UDate U_EXPORT2 uprv_getRawUTCtime(void);\n@@ -536,1 +466,1 @@\n- * @return TRUE if the path is absolute\n+ * @return true if the path is absolute\n@@ -539,1 +469,1 @@\n-U_INTERNAL UBool U_EXPORT2 uprv_pathIsAbsolute(const char *path);\n+U_CAPI UBool U_EXPORT2 uprv_pathIsAbsolute(const char *path);\n@@ -547,1 +477,1 @@\n-U_INTERNAL void * U_EXPORT2 uprv_maximumPtr(void *base);\n+U_CAPI void * U_EXPORT2 uprv_maximumPtr(void *base);\n@@ -645,1 +575,1 @@\n-U_INTERNAL void * U_EXPORT2 uprv_dl_open(const char *libName, UErrorCode *status);\n+U_CAPI void * U_EXPORT2 uprv_dl_open(const char *libName, UErrorCode *status);\n@@ -651,1 +581,1 @@\n-U_INTERNAL void U_EXPORT2 uprv_dl_close( void *lib, UErrorCode *status);\n+U_CAPI void U_EXPORT2 uprv_dl_close( void *lib, UErrorCode *status);\n@@ -657,1 +587,1 @@\n-U_INTERNAL UVoidFunction* U_EXPORT2 uprv_dlsym_func( void *lib, const char *symbolName, UErrorCode *status);\n+U_CAPI UVoidFunction* U_EXPORT2 uprv_dlsym_func( void *lib, const char *symbolName, UErrorCode *status);\n@@ -664,1 +594,1 @@\n-\/* U_INTERNAL void * U_EXPORT2 uprv_dlsym_data( void *lib, const char *symbolName, UErrorCode *status); *\/\n+\/* U_CAPI void * U_EXPORT2 uprv_dlsym_data( void *lib, const char *symbolName, UErrorCode *status); *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/putilimp.h","additions":39,"deletions":109,"binary":false,"changes":148,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    if(fData == 0) {\n+    if(fData == nullptr) {\n@@ -75,0 +75,8 @@\n+    if (fData->fForwardTable->fLookAheadResultsSize > 0) {\n+        fLookAheadMatches = static_cast<int32_t *>(\n+            uprv_malloc(fData->fForwardTable->fLookAheadResultsSize * sizeof(int32_t)));\n+        if (fLookAheadMatches == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+    }\n@@ -101,1 +109,1 @@\n-    if(fData == 0) {\n+    if(fData == nullptr) {\n@@ -105,0 +113,8 @@\n+    if (fData->fForwardTable->fLookAheadResultsSize > 0) {\n+        fLookAheadMatches = static_cast<int32_t *>(\n+            uprv_malloc(fData->fForwardTable->fLookAheadResultsSize * sizeof(int32_t)));\n+        if (fLookAheadMatches == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+    }\n@@ -120,1 +136,1 @@\n-    if(fData == 0) {\n+    if(fData == nullptr) {\n@@ -124,0 +140,8 @@\n+    if (fData->fForwardTable->fLookAheadResultsSize > 0) {\n+        fLookAheadMatches = static_cast<int32_t *>(\n+            uprv_malloc(fData->fForwardTable->fLookAheadResultsSize * sizeof(int32_t)));\n+        if (fLookAheadMatches == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+    }\n@@ -191,1 +215,1 @@\n-    fCharIter = NULL;\n+    fCharIter = nullptr;\n@@ -195,1 +219,1 @@\n-    if (fData != NULL) {\n+    if (fData != nullptr) {\n@@ -197,1 +221,1 @@\n-        fData = NULL;\n+        fData = nullptr;\n@@ -200,1 +224,1 @@\n-    fBreakCache = NULL;\n+    fBreakCache = nullptr;\n@@ -203,1 +227,1 @@\n-    fDictionaryCache = NULL;\n+    fDictionaryCache = nullptr;\n@@ -206,1 +230,1 @@\n-    fLanguageBreakEngines = NULL;\n+    fLanguageBreakEngines = nullptr;\n@@ -209,1 +233,4 @@\n-    fUnhandledBreakEngine = NULL;\n+    fUnhandledBreakEngine = nullptr;\n+\n+    uprv_free(fLookAheadMatches);\n+    fLookAheadMatches = nullptr;\n@@ -215,0 +242,1 @@\n+ * TODO: needs better handling of memory allocation errors.\n@@ -255,0 +283,8 @@\n+    uprv_free(fLookAheadMatches);\n+    fLookAheadMatches = nullptr;\n+    if (fData && fData->fForwardTable->fLookAheadResultsSize > 0) {\n+        fLookAheadMatches = static_cast<int32_t *>(\n+            uprv_malloc(fData->fForwardTable->fLookAheadResultsSize * sizeof(int32_t)));\n+    }\n+\n+\n@@ -278,2 +314,2 @@\n-    fCharIter             = NULL;\n-    fData                 = NULL;\n+    fCharIter             = nullptr;\n+    fData                 = nullptr;\n@@ -284,4 +320,5 @@\n-    fLanguageBreakEngines = NULL;\n-    fUnhandledBreakEngine = NULL;\n-    fBreakCache           = NULL;\n-    fDictionaryCache      = NULL;\n+    fLanguageBreakEngines = nullptr;\n+    fUnhandledBreakEngine = nullptr;\n+    fBreakCache           = nullptr;\n+    fDictionaryCache      = nullptr;\n+    fLookAheadMatches     = nullptr;\n@@ -326,2 +363,2 @@\n-BreakIterator*\n-RuleBasedBreakIterator::clone(void) const {\n+RuleBasedBreakIterator*\n+RuleBasedBreakIterator::clone() const {\n@@ -355,1 +392,1 @@\n-    };\n+    }\n@@ -703,2 +740,2 @@\n-\/\/ Map from look-ahead break states (corresponds to rules) to boundary positions.\n-\/\/ Allows multiple lookahead break rules to be in flight at the same time.\n+\/\/ Wrapper functions to select the appropriate handleNext() or handleSafePrevious()\n+\/\/ instantiation, based on whether an 8 or 16 bit table is required.\n@@ -706,12 +743,4 @@\n-\/\/ This is a temporary approach for ICU 57. A better fix is to make the look-ahead numbers\n-\/\/ in the state table be sequential, then we can just index an array. And the\n-\/\/ table could also tell us in advance how big that array needs to be.\n-\/\/\n-\/\/ Before ICU 57 there was just a single simple variable for a look-ahead match that\n-\/\/ was in progress. Two rules at once did not work.\n-\n-static const int32_t kMaxLookaheads = 8;\n-struct LookAheadResults {\n-    int32_t    fUsedSlotLimit;\n-    int32_t    fPositions[8];\n-    int16_t    fKeys[8];\n+\/\/ These Trie access functions will be inlined within the handleNext()\/Previous() instantions.\n+static inline uint16_t TrieFunc8(const UCPTrie *trie, UChar32 c) {\n+    return UCPTRIE_FAST_GET(trie, UCPTRIE_8, c);\n+}\n@@ -719,1 +748,3 @@\n-    LookAheadResults() : fUsedSlotLimit(0), fPositions(), fKeys() {}\n+static inline uint16_t TrieFunc16(const UCPTrie *trie, UChar32 c) {\n+    return UCPTRIE_FAST_GET(trie, UCPTRIE_16, c);\n+}\n@@ -721,5 +752,14 @@\n-    int32_t getPosition(int16_t key) {\n-        for (int32_t i=0; i<fUsedSlotLimit; ++i) {\n-            if (fKeys[i] == key) {\n-                return fPositions[i];\n-            }\n+int32_t RuleBasedBreakIterator::handleNext() {\n+    const RBBIStateTable *statetable = fData->fForwardTable;\n+    bool use8BitsTrie = ucptrie_getValueWidth(fData->fTrie) == UCPTRIE_VALUE_BITS_8;\n+    if (statetable->fFlags & RBBI_8BITS_ROWS) {\n+        if (use8BitsTrie) {\n+            return handleNext<RBBIStateTableRow8, TrieFunc8>();\n+        } else {\n+            return handleNext<RBBIStateTableRow8, TrieFunc16>();\n+        }\n+    } else {\n+        if (use8BitsTrie) {\n+            return handleNext<RBBIStateTableRow16, TrieFunc8>();\n+        } else {\n+            return handleNext<RBBIStateTableRow16, TrieFunc16>();\n@@ -727,1 +767,0 @@\n-        UPRV_UNREACHABLE;\n@@ -729,0 +768,1 @@\n+}\n@@ -730,7 +770,8 @@\n-    void setPosition(int16_t key, int32_t position) {\n-        int32_t i;\n-        for (i=0; i<fUsedSlotLimit; ++i) {\n-            if (fKeys[i] == key) {\n-                fPositions[i] = position;\n-                return;\n-            }\n+int32_t RuleBasedBreakIterator::handleSafePrevious(int32_t fromPosition) {\n+    const RBBIStateTable *statetable = fData->fReverseTable;\n+    bool use8BitsTrie = ucptrie_getValueWidth(fData->fTrie) == UCPTRIE_VALUE_BITS_8;\n+    if (statetable->fFlags & RBBI_8BITS_ROWS) {\n+        if (use8BitsTrie) {\n+            return handleSafePrevious<RBBIStateTableRow8, TrieFunc8>(fromPosition);\n+        } else {\n+            return handleSafePrevious<RBBIStateTableRow8, TrieFunc16>(fromPosition);\n@@ -738,2 +779,5 @@\n-        if (i >= kMaxLookaheads) {\n-            UPRV_UNREACHABLE;\n+    } else {\n+        if (use8BitsTrie) {\n+            return handleSafePrevious<RBBIStateTableRow16, TrieFunc8>(fromPosition);\n+        } else {\n+            return handleSafePrevious<RBBIStateTableRow16, TrieFunc16>(fromPosition);\n@@ -741,4 +785,0 @@\n-        fKeys[i] = key;\n-        fPositions[i] = position;\n-        U_ASSERT(fUsedSlotLimit == i);\n-        fUsedSlotLimit = i + 1;\n@@ -746,1 +786,1 @@\n-};\n+}\n@@ -755,0 +795,1 @@\n+template <typename RowType, RuleBasedBreakIterator::PTrieFunc trieFunc>\n@@ -760,1 +801,1 @@\n-    RBBIStateTableRow  *row;\n+    RowType             *row;\n@@ -762,1 +803,0 @@\n-    LookAheadResults    lookAheadMatches;\n@@ -768,0 +808,1 @@\n+    uint32_t            dictStart          = statetable->fDictCategoriesStart;\n@@ -792,1 +833,1 @@\n-    row = (RBBIStateTableRow *)\n+    row = (RowType *)\n@@ -828,15 +869,2 @@\n-            \/\/ Note:  the 16 in UTRIE_GET16 refers to the size of the data being returned,\n-            \/\/        not the size of the character going in, which is a UChar32.\n-            \/\/\n-            category = UTRIE2_GET16(fData->fTrie, c);\n-\n-            \/\/ Check the dictionary bit in the character's category.\n-            \/\/    Counter is only used by dictionary based iteration.\n-            \/\/    Chars that need to be handled by a dictionary have a flag bit set\n-            \/\/    in their category values.\n-            \/\/\n-            if ((category & 0x4000) != 0)  {\n-                fDictionaryCharCount++;\n-                \/\/  And off the dictionary flag bit.\n-                category &= ~0x4000;\n-            }\n+            category = trieFunc(fData->fTrie, c);\n+            fDictionaryCharCount += (category >= dictStart);\n@@ -863,1 +891,1 @@\n-        row = (RBBIStateTableRow *)\n+        row = (RowType *)\n@@ -868,1 +896,2 @@\n-        if (row->fAccepting == -1) {\n+        uint16_t accepting = row->fAccepting;\n+        if (accepting == ACCEPTING_UNCONDITIONAL) {\n@@ -873,5 +902,2 @@\n-            fRuleStatusIndex = row->fTagIdx;   \/\/ Remember the break status (tag) values.\n-        }\n-\n-        int16_t completedRule = row->fAccepting;\n-        if (completedRule > 0) {\n+            fRuleStatusIndex = row->fTagsIdx;   \/\/ Remember the break status (tag) values.\n+        } else if (accepting > ACCEPTING_UNCONDITIONAL) {\n@@ -879,1 +905,2 @@\n-            int32_t lookaheadResult = lookAheadMatches.getPosition(completedRule);\n+            U_ASSERT(accepting < fData->fForwardTable->fLookAheadResultsSize);\n+            int32_t lookaheadResult = fLookAheadMatches[accepting];\n@@ -881,1 +908,1 @@\n-                fRuleStatusIndex = row->fTagIdx;\n+                fRuleStatusIndex = row->fTagsIdx;\n@@ -886,3 +913,11 @@\n-        int16_t rule = row->fLookAhead;\n-        if (rule != 0) {\n-            \/\/ At the position of a '\/' in a look-ahead match. Record it.\n+\n+        \/\/ If we are at the position of the '\/' in a look-ahead (hard break) rule;\n+        \/\/ record the current position, to be returned later, if the full rule matches.\n+        \/\/ TODO: Move this check before the previous check of fAccepting.\n+        \/\/       This would enable hard-break rules with no following context.\n+        \/\/       But there are line break test failures when trying this. Investigate.\n+        \/\/       Issue ICU-20837\n+        uint16_t rule = row->fLookAhead;\n+        U_ASSERT(rule == 0 || rule > ACCEPTING_UNCONDITIONAL);\n+        U_ASSERT(rule == 0 || rule < fData->fForwardTable->fLookAheadResultsSize);\n+        if (rule > ACCEPTING_UNCONDITIONAL) {\n@@ -890,1 +925,1 @@\n-            lookAheadMatches.setPosition(rule, pos);\n+            fLookAheadMatches[rule] = pos;\n@@ -945,0 +980,1 @@\n+template <typename RowType, RuleBasedBreakIterator::PTrieFunc trieFunc>\n@@ -946,0 +982,1 @@\n+\n@@ -948,1 +985,1 @@\n-    RBBIStateTableRow  *row;\n+    RowType            *row;\n@@ -968,1 +1005,1 @@\n-    row = (RBBIStateTableRow *)\n+    row = (RowType *)\n@@ -977,2 +1014,0 @@\n-        \/\/ Note:  the 16 in UTRIE_GET16 refers to the size of the data being returned,\n-        \/\/        not the size of the character going in, which is a UChar32.\n@@ -980,3 +1015,2 @@\n-        \/\/  And off the dictionary flag bit. For reverse iteration it is not used.\n-        category = UTRIE2_GET16(fData->fTrie, c);\n-        category &= ~0x4000;\n+        \/\/  Off the dictionary flag bit. For reverse iteration it is not used.\n+        category = trieFunc(fData->fTrie, c);\n@@ -1001,1 +1035,1 @@\n-        row = (RBBIStateTableRow *)\n+        row = (RowType *)\n@@ -1021,0 +1055,1 @@\n+\n@@ -1082,4 +1117,2 @@\n-BreakIterator *  RuleBasedBreakIterator::createBufferClone(void * \/*stackBuffer*\/,\n-                                   int32_t &bufferSize,\n-                                   UErrorCode &status)\n-{\n+RuleBasedBreakIterator *RuleBasedBreakIterator::createBufferClone(\n+        void * \/*stackBuffer*\/, int32_t &bufferSize, UErrorCode &status) {\n@@ -1116,1 +1149,1 @@\n-static UBool U_CALLCONV rbbi_cleanup(void) {\n+UBool U_CALLCONV rbbi_cleanup(void) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbi.cpp","additions":131,"deletions":98,"binary":false,"changes":229,"status":"modified"},{"patch":"@@ -145,1 +145,2 @@\n-    category = UTRIE2_GET16(fBI->fData->fTrie, c);\n+    category = ucptrie_get(fBI->fData->fTrie, c);\n+    uint32_t dictStart = fBI->fData->fForwardTable->fDictCategoriesStart;\n@@ -148,1 +149,2 @@\n-        while((current = (int32_t)UTEXT_GETNATIVEINDEX(text)) < rangeEnd && (category & 0x4000) == 0) {\n+        while((current = (int32_t)UTEXT_GETNATIVEINDEX(text)) < rangeEnd\n+                && (category < dictStart)) {\n@@ -151,1 +153,1 @@\n-            category = UTRIE2_GET16(fBI->fData->fTrie, c);\n+            category = ucptrie_get(fBI->fData->fTrie, c);\n@@ -169,1 +171,1 @@\n-        category = UTRIE2_GET16(fBI->fData->fTrie, c);\n+        category = ucptrie_get(fBI->fData->fTrie, c);\n@@ -522,1 +524,1 @@\n-            };\n+            }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbi_cache.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-     * Return FALSE if the operation failed.\n+     * Return false if the operation failed.\n@@ -135,1 +135,1 @@\n-     *  Return FALSE if at the end of the text, and no more boundaries can be added.\n+     *  Return false if at the end of the text, and no more boundaries can be added.\n@@ -173,1 +173,1 @@\n-     *  Return TRUE if successful, FALSE if the specified position is after\n+     *  Return true if successful, false if the specified position is after\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbi_cache.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-#   License & terms of use: http:\/\/www.unicode.org\/copyright.html#License\n+#   License & terms of use: http:\/\/www.unicode.org\/copyright.html\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbicst.pl","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -14,0 +14,1 @@\n+#include \"unicode\/ucptrie.h\"\n@@ -17,1 +18,0 @@\n-#include \"utrie2.h\"\n@@ -113,5 +113,6 @@\n-    fTrie = utrie2_openFromSerialized(UTRIE2_16_VALUE_BITS,\n-                                      (uint8_t *)data + fHeader->fTrie,\n-                                      fHeader->fTrieLen,\n-                                      NULL,           \/\/ *actual length\n-                                      &status);\n+    fTrie = ucptrie_openFromBinary(UCPTRIE_TYPE_FAST,\n+                                   UCPTRIE_VALUE_BITS_ANY,\n+                                   (uint8_t *)data + fHeader->fTrie,\n+                                   fHeader->fTrieLen,\n+                                   nullptr,           \/\/ *actual length\n+                                   &status);\n@@ -122,2 +123,8 @@\n-    fRuleSource   = (UChar *)((char *)data + fHeader->fRuleSource);\n-    fRuleString.setTo(TRUE, fRuleSource, -1);\n+    UCPTrieValueWidth width = ucptrie_getValueWidth(fTrie);\n+    if (!(width == UCPTRIE_VALUE_BITS_8 || width == UCPTRIE_VALUE_BITS_16)) {\n+        status = U_INVALID_FORMAT_ERROR;\n+        return;\n+    }\n+\n+    fRuleSource   = ((char *)data + fHeader->fRuleSource);\n+    fRuleString = UnicodeString::fromUTF8(StringPiece(fRuleSource, fHeader->fRuleSourceLen));\n@@ -145,2 +152,2 @@\n-    utrie2_close(fTrie);\n-    fTrie = NULL;\n+    ucptrie_close(fTrie);\n+    fTrie = nullptr;\n@@ -226,1 +233,1 @@\n-    RBBIDebugPrintf(\"   %s\\n\", heading);\n+    RBBIDebugPrintf(\"%s\\n\", heading);\n@@ -228,1 +235,8 @@\n-    RBBIDebugPrintf(\"State |  Acc  LA TagIx\");\n+    RBBIDebugPrintf(\"   fDictCategoriesStart: %d\\n\", table->fDictCategoriesStart);\n+    RBBIDebugPrintf(\"   fLookAheadResultsSize: %d\\n\", table->fLookAheadResultsSize);\n+    RBBIDebugPrintf(\"   Flags: %4x RBBI_LOOKAHEAD_HARD_BREAK=%s RBBI_BOF_REQUIRED=%s  RBBI_8BITS_ROWS=%s\\n\",\n+                    table->fFlags,\n+                    table->fFlags & RBBI_LOOKAHEAD_HARD_BREAK ? \"T\" : \"F\",\n+                    table->fFlags & RBBI_BOF_REQUIRED ? \"T\" : \"F\",\n+                    table->fFlags & RBBI_8BITS_ROWS ? \"T\" : \"F\");\n+    RBBIDebugPrintf(\"\\nState |  Acc  LA TagIx\");\n@@ -239,0 +253,1 @@\n+    UBool use8Bits = table->fFlags & RBBI_8BITS_ROWS;\n@@ -242,3 +257,10 @@\n-        RBBIDebugPrintf(\"%4d  |  %3d %3d %3d \", s, row->fAccepting, row->fLookAhead, row->fTagIdx);\n-        for (c=0; c<fHeader->fCatCount; c++)  {\n-            RBBIDebugPrintf(\"%3d \", row->fNextState[c]);\n+        if (use8Bits) {\n+            RBBIDebugPrintf(\"%4d  |  %3d %3d %3d \", s, row->r8.fAccepting, row->r8.fLookAhead, row->r8.fTagsIdx);\n+            for (c=0; c<fHeader->fCatCount; c++)  {\n+                RBBIDebugPrintf(\"%3d \", row->r8.fNextState[c]);\n+            }\n+        } else {\n+            RBBIDebugPrintf(\"%4d  |  %3d %3d %3d \", s, row->r16.fAccepting, row->r16.fLookAhead, row->r16.fTagsIdx);\n+            for (c=0; c<fHeader->fCatCount; c++)  {\n+                RBBIDebugPrintf(\"%3d \", row->r16.fNextState[c]);\n+            }\n@@ -385,0 +407,3 @@\n+        RBBIStateTable *rbbiST = (RBBIStateTable *)(inBytes+tableStartOffset);\n+        UBool use8Bits = ds->readUInt32(rbbiST->fFlags) & RBBI_8BITS_ROWS;\n+\n@@ -387,2 +412,12 @@\n-        ds->swapArray16(ds, inBytes+tableStartOffset+topSize, tableLength-topSize,\n-                            outBytes+tableStartOffset+topSize, status);\n+\n+        \/\/ Swap the state table if the table is in 16 bits.\n+        if (use8Bits) {\n+            if (outBytes != inBytes) {\n+                uprv_memmove(outBytes+tableStartOffset+topSize,\n+                             inBytes+tableStartOffset+topSize,\n+                             tableLength-topSize);\n+            }\n+        } else {\n+            ds->swapArray16(ds, inBytes+tableStartOffset+topSize, tableLength-topSize,\n+                                outBytes+tableStartOffset+topSize, status);\n+        }\n@@ -396,0 +431,3 @@\n+        RBBIStateTable *rbbiST = (RBBIStateTable *)(inBytes+tableStartOffset);\n+        UBool use8Bits = ds->readUInt32(rbbiST->fFlags) & RBBI_8BITS_ROWS;\n+\n@@ -398,2 +436,12 @@\n-        ds->swapArray16(ds, inBytes+tableStartOffset+topSize, tableLength-topSize,\n-                            outBytes+tableStartOffset+topSize, status);\n+\n+        \/\/ Swap the state table if the table is in 16 bits.\n+        if (use8Bits) {\n+            if (outBytes != inBytes) {\n+                uprv_memmove(outBytes+tableStartOffset+topSize,\n+                             inBytes+tableStartOffset+topSize,\n+                             tableLength-topSize);\n+            }\n+        } else {\n+            ds->swapArray16(ds, inBytes+tableStartOffset+topSize, tableLength-topSize,\n+                                outBytes+tableStartOffset+topSize, status);\n+        }\n@@ -403,6 +451,9 @@\n-    utrie2_swap(ds, inBytes+ds->readUInt32(rbbiDH->fTrie), ds->readUInt32(rbbiDH->fTrieLen),\n-                    outBytes+ds->readUInt32(rbbiDH->fTrie), status);\n-\n-    \/\/ Source Rules Text.  It's UChar data\n-    ds->swapArray16(ds, inBytes+ds->readUInt32(rbbiDH->fRuleSource), ds->readUInt32(rbbiDH->fRuleSourceLen),\n-                        outBytes+ds->readUInt32(rbbiDH->fRuleSource), status);\n+    ucptrie_swap(ds, inBytes+ds->readUInt32(rbbiDH->fTrie), ds->readUInt32(rbbiDH->fTrieLen),\n+                     outBytes+ds->readUInt32(rbbiDH->fTrie), status);\n+\n+    \/\/ Source Rules Text.  It's UTF8 data\n+    if (outBytes != inBytes) {\n+        uprv_memmove(outBytes+ds->readUInt32(rbbiDH->fRuleSource),\n+                     inBytes+ds->readUInt32(rbbiDH->fRuleSource),\n+                     ds->readUInt32(rbbiDH->fRuleSourceLen));\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbidata.cpp","additions":76,"deletions":25,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include \"unicode\/ucptrie.h\"\n@@ -56,1 +57,1 @@\n-#include \"utrie2.h\"\n+\n@@ -61,1 +62,1 @@\n-static const uint8_t RBBI_DATA_FORMAT_VERSION[] = {5, 0, 0, 0};\n+static const uint8_t RBBI_DATA_FORMAT_VERSION[] = {6, 0, 0, 0};\n@@ -97,24 +98,24 @@\n-struct  RBBIStateTableRow {\n-    int16_t          fAccepting;    \/*  Non-zero if this row is for an accepting state.   *\/\n-                                    \/*  Value 0: not an accepting state.                  *\/\n-                                    \/*       -1: Unconditional Accepting state.           *\/\n-                                    \/*    positive:  Look-ahead match has completed.      *\/\n-                                    \/*           Actual boundary position happened earlier *\/\n-                                    \/*           Value here == fLookAhead in earlier      *\/\n-                                    \/*              state, at actual boundary pos.        *\/\n-    int16_t          fLookAhead;    \/*  Non-zero if this row is for a state that          *\/\n-                                    \/*    corresponds to a '\/' in the rule source.        *\/\n-                                    \/*    Value is the same as the fAccepting             *\/\n-                                    \/*      value for the rule (which will appear         *\/\n-                                    \/*      in a different state.                         *\/\n-    int16_t          fTagIdx;       \/*  Non-zero if this row covers a {tagged} position   *\/\n-                                    \/*     from a rule.  Value is the index in the        *\/\n-                                    \/*     StatusTable of the set of matching             *\/\n-                                    \/*     tags (rule status values)                      *\/\n-    int16_t          fReserved;\n-    uint16_t         fNextState[1]; \/*  Next State, indexed by char category.             *\/\n-                                    \/*    Variable-length array declared with length 1    *\/\n-                                    \/*    to disable bounds checkers.                     *\/\n-                                    \/*    Array Size is actually fData->fHeader->fCatCount*\/\n-                                    \/*    CAUTION:  see RBBITableBuilder::getTableSize()  *\/\n-                                    \/*              before changing anything here.        *\/\n+template <typename T>\n+struct RBBIStateTableRowT {\n+    T               fAccepting;    \/\/  Non-zero if this row is for an accepting state.\n+                                   \/\/  Value 0: not an accepting state.\n+                                   \/\/        1: (ACCEPTING_UNCONDITIONAL) Unconditional Accepting state.\n+                                   \/\/       >1: Look-ahead match has completed.\n+                                   \/\/           Actual boundary position happened earlier.\n+                                   \/\/           Value here == fLookAhead in earlier\n+                                   \/\/           state, at actual boundary pos.\n+    T               fLookAhead;    \/\/  Non-zero if this row is for a state that\n+                                   \/\/    corresponds to a '\/' in the rule source.\n+                                   \/\/    Value is the same as the fAccepting\n+                                   \/\/    value for the rule (which will appear\n+                                   \/\/    in a different state.\n+    T               fTagsIdx;      \/\/  Non-zero if this row covers a {tagged} position\n+                                   \/\/    from a rule.  Value is the index in the\n+                                   \/\/    StatusTable of the set of matching\n+                                   \/\/    tags (rule status values)\n+    T               fNextState[1]; \/\/  Next State, indexed by char category.\n+                                   \/\/    Variable-length array declared with length 1\n+                                   \/\/    to disable bounds checkers.\n+                                   \/\/    Array Size is actually fData->fHeader->fCatCount\n+                                   \/\/    CAUTION:  see RBBITableBuilder::getTableSize()\n+                                   \/\/              before changing anything here.\n@@ -123,0 +124,9 @@\n+typedef RBBIStateTableRowT<uint8_t> RBBIStateTableRow8;\n+typedef RBBIStateTableRowT<uint16_t> RBBIStateTableRow16;\n+\n+constexpr uint16_t ACCEPTING_UNCONDITIONAL = 1;   \/\/ Value constant for RBBIStateTableRow::fAccepting\n+\n+union RBBIStateTableRow {\n+  RBBIStateTableRow16 r16;\n+  RBBIStateTableRow8 r8;\n+};\n@@ -125,9 +135,13 @@\n-    uint32_t         fNumStates;    \/*  Number of states.                                 *\/\n-    uint32_t         fRowLen;       \/*  Length of a state table row, in bytes.            *\/\n-    uint32_t         fFlags;        \/*  Option Flags for this state table                 *\/\n-    uint32_t         fReserved;     \/*  reserved                                          *\/\n-    char             fTableData[1]; \/*  First RBBIStateTableRow begins here.              *\/\n-                                    \/*    Variable-length array declared with length 1    *\/\n-                                    \/*    to disable bounds checkers.                     *\/\n-                                    \/*    (making it char[] simplifies ugly address       *\/\n-                                    \/*     arithmetic for indexing variable length rows.) *\/\n+    uint32_t         fNumStates;            \/\/ Number of states.\n+    uint32_t         fRowLen;               \/\/ Length of a state table row, in bytes.\n+    uint32_t         fDictCategoriesStart;  \/\/ Char category number of the first dictionary\n+                                            \/\/   char class, or the the largest category number + 1\n+                                            \/\/   if there are no dictionary categories.\n+    uint32_t         fLookAheadResultsSize; \/\/ Size of run-time array required for holding\n+                                            \/\/   look-ahead results. Indexed by row.fLookAhead.\n+    uint32_t         fFlags;                \/\/ Option Flags for this state table.\n+    char             fTableData[1];         \/\/ First RBBIStateTableRow begins here.\n+                                            \/\/   Variable-length array declared with length 1\n+                                            \/\/   to disable bounds checkers.\n+                                            \/\/   (making it char[] simplifies ugly address\n+                                            \/\/   arithmetic for indexing variable length rows.)\n@@ -136,4 +150,3 @@\n-typedef enum {\n-    RBBI_LOOKAHEAD_HARD_BREAK = 1,\n-    RBBI_BOF_REQUIRED = 2\n-} RBBIStateTableFlags;\n+constexpr uint32_t RBBI_LOOKAHEAD_HARD_BREAK = 1;\n+constexpr uint32_t RBBI_BOF_REQUIRED = 2;\n+constexpr uint32_t RBBI_8BITS_ROWS = 4;\n@@ -173,1 +186,1 @@\n-    const UChar              *fRuleSource;\n+    const char               *fRuleSource;\n@@ -179,1 +192,1 @@\n-    UTrie2             *fTrie;\n+    UCPTrie             *fTrie;\n@@ -187,2 +200,2 @@\n-    RBBIDataWrapper(const RBBIDataWrapper &other); \/*  forbid copying of this class *\/\n-    RBBIDataWrapper &operator=(const RBBIDataWrapper &other); \/*  forbid copying of this class *\/\n+    RBBIDataWrapper(const RBBIDataWrapper &other) = delete; \/*  forbid copying of this class *\/\n+    RBBIDataWrapper &operator=(const RBBIDataWrapper &other) = delete; \/*  forbid copying of this class *\/\n@@ -195,0 +208,2 @@\n+U_CFUNC UBool rbbi_cleanup(void);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbidata.h","additions":58,"deletions":43,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-        UBool         fLookAheadEnd;        \/\/ For endMark nodes, set TRUE if\n+        UBool         fLookAheadEnd;        \/\/ For endMark nodes, set true if\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbinode.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"unicode\/ustring.h\"\n@@ -157,1 +158,8 @@\n-    int32_t rulesSize         = align8((fStrippedRules.length()+1) * sizeof(UChar));\n+\n+    int32_t rulesLengthInUTF8 = 0;\n+    u_strToUTF8WithSub(0, 0, &rulesLengthInUTF8,\n+                       fStrippedRules.getBuffer(), fStrippedRules.length(),\n+                       0xfffd, nullptr, fStatus);\n+    *fStatus = U_ZERO_ERROR;\n+\n+    int32_t rulesSize         = align8((rulesLengthInUTF8+1));\n@@ -164,0 +172,13 @@\n+#ifdef RBBI_DEBUG\n+    if (fDebugEnv && uprv_strstr(fDebugEnv, \"size\")) {\n+        RBBIDebugPrintf(\"Header Size:        %8d\\n\", headerSize);\n+        RBBIDebugPrintf(\"Forward Table Size: %8d\\n\", forwardTableSize);\n+        RBBIDebugPrintf(\"Reverse Table Size: %8d\\n\", reverseTableSize);\n+        RBBIDebugPrintf(\"Trie Size:          %8d\\n\", trieSize);\n+        RBBIDebugPrintf(\"Status Table Size:  %8d\\n\", statusTableSize);\n+        RBBIDebugPrintf(\"Rules Size:         %8d\\n\", rulesSize);\n+        RBBIDebugPrintf(\"-----------------------------\\n\");\n+        RBBIDebugPrintf(\"Total Size:         %8d\\n\", totalSize);\n+    }\n+#endif\n+\n@@ -187,2 +208,2 @@\n-    data->fTrieLen       = fSetBuilder->getTrieSize();\n-    data->fStatusTable   = data->fTrie    + trieSize;\n+    data->fTrieLen       = trieSize;\n+    data->fStatusTable   = data->fTrie    + data->fTrieLen;\n@@ -191,1 +212,1 @@\n-    data->fRuleSourceLen = fStrippedRules.length() * sizeof(UChar);\n+    data->fRuleSourceLen = rulesLengthInUTF8;\n@@ -204,1 +225,6 @@\n-    fStrippedRules.extract((UChar *)((uint8_t *)data+data->fRuleSource), rulesSize\/2+1, *fStatus);\n+    u_strToUTF8WithSub((char *)data+data->fRuleSource, rulesSize, &rulesLengthInUTF8,\n+                       fStrippedRules.getBuffer(), fStrippedRules.length(),\n+                       0xfffd, nullptr, fStatus);\n+    if (U_FAILURE(*fStatus)) {\n+        return NULL;\n+    }\n@@ -264,3 +290,1 @@\n-    \/\/    Munge the Unicode Sets to create a set of character categories.\n-    \/\/    Generate the mapping tables (TRIE) from input code points to\n-    \/\/    the character categories.\n+    \/\/    Munge the Unicode Sets to create an initial set of character categories.\n@@ -280,0 +304,6 @@\n+\n+    \/\/ State table and character category optimization.\n+    \/\/ Merge equivalent rows and columns.\n+    \/\/ Note that this process alters the initial set of character categories,\n+    \/\/ causing the representation of UnicodeSets in the parse tree to become invalid.\n+\n@@ -292,0 +322,3 @@\n+    \/\/    Generate the mapping tables (TRIE) from input code points to\n+    \/\/    the character categories.\n+    \/\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbirb.cpp","additions":41,"deletions":8,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-#   License & terms of use: http:\/\/www.unicode.org\/copyright.html#License\n+#   License & terms of use: http:\/\/www.unicode.org\/copyright.html\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbirpt.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -832,1 +832,0 @@\n-    bool skippingSpaces = false;\n@@ -837,1 +836,1 @@\n-        if (skippingSpaces && whiteSpace) {\n+        if (whiteSpace) {\n@@ -841,1 +840,0 @@\n-        skippingSpaces = whiteSpace;\n@@ -1277,0 +1275,4 @@\n+int32_t RBBIRuleScanner::numRules() {\n+    return fRuleNum;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbiscan.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        RBBIRuleChar() : fChar(0), fEscaped(FALSE) {}\n+        RBBIRuleChar() : fChar(0), fEscaped(false) {}\n@@ -76,0 +76,2 @@\n+    int32_t     numRules();                         \/\/ Return the number of rules that have been seen.\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbiscan.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-\/\/                      set of input uniocde sets.\n+\/\/                      set of input unicode sets.\n@@ -38,1 +38,0 @@\n-#include \"utrie2.h\"\n@@ -49,0 +48,1 @@\n+const int32_t kMaxCharCategoriesFor8BitsTrie = 255;\n@@ -58,2 +58,3 @@\n-    fRangeList      = 0;\n-    fTrie           = 0;\n+    fRangeList      = nullptr;\n+    fMutableTrie    = nullptr;\n+    fTrie           = nullptr;\n@@ -62,1 +63,1 @@\n-    fSawBOF         = FALSE;\n+    fSawBOF         = false;\n@@ -82,1 +83,2 @@\n-    utrie2_close(fTrie);\n+    ucptrie_close(fTrie);\n+    umutablecptrie_close(fMutableTrie);\n@@ -197,1 +199,1 @@\n-    \/\/               # 2  is reserved - table column 2 is for beginning-in-input\n+    \/\/               # 2  is reserved - table column 2 is for beginning-of-input\n@@ -201,1 +203,3 @@\n-    for (rlRange = fRangeList; rlRange!=0; rlRange=rlRange->fNext) {\n+    int32_t dictGroupCount = 0;\n+\n+    for (rlRange = fRangeList; rlRange!=nullptr; rlRange=rlRange->fNext) {\n@@ -205,0 +209,1 @@\n+                rlRange->fIncludesDict = rlSearchRange->fIncludesDict;\n@@ -209,4 +214,22 @@\n-            fGroupCount ++;\n-            rlRange->fNum = fGroupCount+2;\n-            rlRange->setDictionaryFlag();\n-            addValToSets(rlRange->fIncludesSets, fGroupCount+2);\n+            rlRange->fFirstInGroup = true;\n+            if (rlRange->isDictionaryRange()) {\n+                rlRange->fNum = ++dictGroupCount;\n+                rlRange->fIncludesDict = true;\n+            } else {\n+                fGroupCount++;\n+                rlRange->fNum = fGroupCount+2;\n+                addValToSets(rlRange->fIncludesSets, rlRange->fNum);\n+            }\n+        }\n+    }\n+\n+    \/\/ Move the character category numbers for any dictionary ranges up, so that they\n+    \/\/ immediately follow the non-dictionary ranges.\n+\n+    fDictCategoriesStart = fGroupCount + 3;\n+    for (rlRange = fRangeList; rlRange!=nullptr; rlRange=rlRange->fNext) {\n+        if (rlRange->fIncludesDict) {\n+            rlRange->fNum += fDictCategoriesStart - 1;\n+            if (rlRange->fFirstInGroup) {\n+                addValToSets(rlRange->fIncludesSets, rlRange->fNum);\n+            }\n@@ -215,0 +238,2 @@\n+    fGroupCount += dictGroupCount;\n+\n@@ -223,4 +248,2 @@\n-    \/\/   Because {bof} and {eof} are not a characters in the normal sense,\n-    \/\/   they doesn't affect the computation of ranges or TRIE.\n-    static const UChar eofUString[] = {0x65, 0x6f, 0x66, 0};\n-    static const UChar bofUString[] = {0x62, 0x6f, 0x66, 0};\n+    \/\/   Because {bof} and {eof} are not characters in the normal sense,\n+    \/\/   they don't affect the computation of the ranges or TRIE.\n@@ -228,2 +251,2 @@\n-    UnicodeString eofString(eofUString);\n-    UnicodeString bofString(bofUString);\n+    UnicodeString eofString(u\"eof\");\n+    UnicodeString bofString(u\"bof\");\n@@ -256,3 +279,2 @@\n-    RangeDescriptor *rlRange;\n-\n-    fTrie = utrie2_open(0,       \/\/  Initial value for all code points.\n+    fMutableTrie = umutablecptrie_open(\n+                        0,       \/\/  Initial value for all code points.\n@@ -262,7 +284,6 @@\n-    for (rlRange = fRangeList; rlRange!=0 && U_SUCCESS(*fStatus); rlRange=rlRange->fNext) {\n-        utrie2_setRange32(fTrie,\n-                          rlRange->fStartChar,     \/\/ Range start\n-                          rlRange->fEndChar,       \/\/ Range end (inclusive)\n-                          rlRange->fNum,           \/\/ value for range\n-                          TRUE,                    \/\/ Overwrite previously written values\n-                          fStatus);\n+    for (RangeDescriptor *range = fRangeList; range!=nullptr && U_SUCCESS(*fStatus); range=range->fNext) {\n+        umutablecptrie_setRange(fMutableTrie,\n+                                range->fStartChar,     \/\/ Range start\n+                                range->fEndChar,       \/\/ Range end (inclusive)\n+                                range->fNum,           \/\/ value for range\n+                                fStatus);\n@@ -276,0 +297,3 @@\n+    U_ASSERT((categories.first <  fDictCategoriesStart && categories.second <  fDictCategoriesStart) ||\n+             (categories.first >= fDictCategoriesStart && categories.second >= fDictCategoriesStart));\n+\n@@ -277,2 +301,1 @@\n-        int32_t rangeNum = rd->fNum & ~DICT_BIT;\n-        int32_t rangeDict = rd->fNum & DICT_BIT;\n+        int32_t rangeNum = rd->fNum;\n@@ -280,1 +303,1 @@\n-            rd->fNum = categories.first | rangeDict;\n+            rd->fNum = categories.first;\n@@ -286,0 +309,3 @@\n+    if (categories.second <= fDictCategoriesStart) {\n+        --fDictCategoriesStart;\n+    }\n@@ -298,7 +324,11 @@\n-    utrie2_freeze(fTrie, UTRIE2_16_VALUE_BITS, fStatus);\n-    fTrieSize  = utrie2_serialize(fTrie,\n-                                  NULL,                \/\/ Buffer\n-                                  0,                   \/\/ Capacity\n-                                  fStatus);\n-    if (*fStatus == U_BUFFER_OVERFLOW_ERROR) {\n-        *fStatus = U_ZERO_ERROR;\n+    if (fTrie == nullptr) {\n+        bool use8Bits = getNumCharCategories() <= kMaxCharCategoriesFor8BitsTrie;\n+        fTrie = umutablecptrie_buildImmutable(\n+            fMutableTrie,\n+            UCPTRIE_TYPE_FAST,\n+            use8Bits ? UCPTRIE_VALUE_BITS_8 : UCPTRIE_VALUE_BITS_16,\n+            fStatus);\n+        fTrieSize = ucptrie_toBinary(fTrie, nullptr, 0, fStatus);\n+        if (*fStatus == U_BUFFER_OVERFLOW_ERROR) {\n+            *fStatus = U_ZERO_ERROR;\n+        }\n@@ -306,1 +336,0 @@\n-    \/\/ RBBIDebugPrintf(\"Trie table size is %d\\n\", trieSize);\n@@ -319,3 +348,3 @@\n-    utrie2_serialize(fTrie,\n-                     where,                   \/\/ Buffer\n-                     fTrieSize,               \/\/ Capacity\n+    ucptrie_toBinary(fTrie,\n+                     where,                \/\/ Buffer\n+                     fTrieSize,            \/\/ Capacity\n@@ -387,0 +416,10 @@\n+\/\/------------------------------------------------------------------------\n+\/\/\n+\/\/   getDictCategoriesStart\n+\/\/\n+\/\/------------------------------------------------------------------------\n+int32_t  RBBISetBuilder::getDictCategoriesStart() const {\n+    return fDictCategoriesStart;\n+}\n+\n+\n@@ -406,1 +445,1 @@\n-    for (rlRange = fRangeList; rlRange!=0; rlRange=rlRange->fNext) {\n+    for (rlRange = fRangeList; rlRange!=nullptr; rlRange=rlRange->fNext) {\n@@ -416,1 +455,0 @@\n-\n@@ -429,2 +467,2 @@\n-    for (rlRange = fRangeList; rlRange!=0; rlRange=rlRange->fNext) {\n-        RBBIDebugPrintf(\"%2i  %4x-%4x  \", rlRange->fNum, rlRange->fStartChar, rlRange->fEndChar);\n+    for (rlRange = fRangeList; rlRange!=nullptr; rlRange=rlRange->fNext) {\n+        RBBIDebugPrintf(\"%4x-%4x  \", rlRange->fStartChar, rlRange->fEndChar);\n@@ -434,1 +472,1 @@\n-            UnicodeString   setName = UNICODE_STRING(\"anon\", 4);\n+            UnicodeString   setName {u\"anon\"};\n@@ -436,1 +474,1 @@\n-            if (setRef != NULL) {\n+            if (setRef != nullptr) {\n@@ -438,1 +476,1 @@\n-                if (varRef != NULL  &&  varRef->fType == RBBINode::varRef) {\n+                if (varRef != nullptr  &&  varRef->fType == RBBINode::varRef) {\n@@ -458,2 +496,0 @@\n-    RangeDescriptor       *rlRange;\n-    RangeDescriptor       *tRange;\n@@ -461,1 +497,0 @@\n-    int                    lastPrintedGroupNum = 0;\n@@ -464,4 +499,3 @@\n-    for (rlRange = fRangeList; rlRange!=0; rlRange=rlRange->fNext) {\n-        int groupNum = rlRange->fNum & 0xbfff;\n-        if (groupNum > lastPrintedGroupNum) {\n-            lastPrintedGroupNum = groupNum;\n+    for (RangeDescriptor *rlRange = fRangeList; rlRange!=nullptr; rlRange=rlRange->fNext) {\n+        if (rlRange->fFirstInGroup) {\n+            int groupNum = rlRange->fNum;\n@@ -470,1 +504,1 @@\n-            if (rlRange->fNum & DICT_BIT) { RBBIDebugPrintf(\" <DICT> \");}\n+            if (groupNum >= fDictCategoriesStart) { RBBIDebugPrintf(\" <DICT> \");}\n@@ -486,1 +520,1 @@\n-            for (tRange = rlRange; tRange != 0; tRange = tRange->fNext) {\n+            for (RangeDescriptor *tRange = rlRange; tRange != nullptr; tRange = tRange->fNext) {\n@@ -553,12 +587,4 @@\n-RangeDescriptor::RangeDescriptor(const RangeDescriptor &other, UErrorCode &status) {\n-    int  i;\n-\n-    this->fStartChar    = other.fStartChar;\n-    this->fEndChar      = other.fEndChar;\n-    this->fNum          = other.fNum;\n-    this->fNext         = NULL;\n-    UErrorCode oldstatus = status;\n-    this->fIncludesSets = new UVector(status);\n-    if (U_FAILURE(oldstatus)) {\n-        status = oldstatus;\n-    }\n+RangeDescriptor::RangeDescriptor(const RangeDescriptor &other, UErrorCode &status) :\n+        fStartChar(other.fStartChar), fEndChar {other.fEndChar}, fNum {other.fNum},\n+        fIncludesDict{other.fIncludesDict}, fFirstInGroup{other.fFirstInGroup} {\n+\n@@ -568,2 +594,2 @@\n-    \/* test for NULL *\/\n-    if (this->fIncludesSets == 0) {\n+    fIncludesSets = new UVector(status);\n+    if (this->fIncludesSets == nullptr) {\n@@ -571,0 +597,2 @@\n+    }\n+    if (U_FAILURE(status)) {\n@@ -574,1 +602,1 @@\n-    for (i=0; i<other.fIncludesSets->size(); i++) {\n+    for (int32_t i=0; i<other.fIncludesSets->size(); i++) {\n@@ -586,9 +614,0 @@\n-    this->fStartChar    = 0;\n-    this->fEndChar      = 0;\n-    this->fNum          = 0;\n-    this->fNext         = NULL;\n-    UErrorCode oldstatus = status;\n-    this->fIncludesSets = new UVector(status);\n-    if (U_FAILURE(oldstatus)) {\n-        status = oldstatus;\n-    }\n@@ -598,2 +617,2 @@\n-    \/* test for NULL *\/\n-    if(this->fIncludesSets == 0) {\n+    fIncludesSets = new UVector(status);\n+    if (fIncludesSets == nullptr) {\n@@ -601,1 +620,0 @@\n-        return;\n@@ -603,1 +621,0 @@\n-\n@@ -614,1 +631,1 @@\n-    fIncludesSets = NULL;\n+    fIncludesSets = nullptr;\n@@ -625,1 +642,1 @@\n-    if(nr == 0) {\n+    if(nr == nullptr) {\n@@ -644,1 +661,1 @@\n-\/\/   RangeDescriptor::setDictionaryFlag\n+\/\/   RangeDescriptor::isDictionaryRange\n@@ -646,4 +663,2 @@\n-\/\/            Character Category Numbers that include characters from\n-\/\/            the original Unicode Set named \"dictionary\" have bit 14\n-\/\/            set to 1.  The RBBI runtime engine uses this to trigger\n-\/\/            use of the word dictionary.\n+\/\/            Test whether this range includes characters from\n+\/\/            the original Unicode Set named \"dictionary\".\n@@ -651,3 +666,2 @@\n-\/\/            This function looks through the Unicode Sets that it\n-\/\/            (the range) includes, and sets the bit in fNum when\n-\/\/            \"dictionary\" is among them.\n+\/\/            This function looks through the Unicode Sets that\n+\/\/            the range includes, checking for one named \"dictionary\"\n@@ -660,3 +674,1 @@\n-void RangeDescriptor::setDictionaryFlag() {\n-    int i;\n-\n+bool RangeDescriptor::isDictionaryRange() {\n@@ -664,1 +676,1 @@\n-    for (i=0; i<fIncludesSets->size(); i++) {\n+    for (int32_t i=0; i<fIncludesSets->size(); i++) {\n@@ -672,2 +684,1 @@\n-                    fNum |= RBBISetBuilder::DICT_BIT;\n-                    break;\n+                    return true;\n@@ -678,0 +689,1 @@\n+    return false;\n@@ -680,2 +692,0 @@\n-\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbisetb.cpp","additions":114,"deletions":104,"binary":false,"changes":218,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#include \"unicode\/ucptrie.h\"\n+#include \"unicode\/umutablecptrie.h\"\n@@ -21,1 +23,0 @@\n-#include \"utrie2.h\"\n@@ -43,7 +44,9 @@\n-    UChar32            fStartChar;      \/\/ Start of range, unicode 32 bit value.\n-    UChar32            fEndChar;        \/\/ End of range, unicode 32 bit value.\n-    int32_t            fNum;            \/\/ runtime-mapped input value for this range.\n-    UVector           *fIncludesSets;   \/\/ vector of the the original\n-                                        \/\/   Unicode sets that include this range.\n-                                        \/\/    (Contains ptrs to uset nodes)\n-    RangeDescriptor   *fNext;           \/\/ Next RangeDescriptor in the linked list.\n+    UChar32            fStartChar {};            \/\/ Start of range, unicode 32 bit value.\n+    UChar32            fEndChar {};              \/\/ End of range, unicode 32 bit value.\n+    int32_t            fNum {0};                 \/\/ runtime-mapped input value for this range.\n+    bool               fIncludesDict {false};    \/\/ True if the range includes $dictionary.\n+    bool               fFirstInGroup {false};    \/\/ True if first range in a group with the same fNum.\n+    UVector           *fIncludesSets {nullptr};  \/\/ vector of the the original\n+                                                 \/\/   Unicode sets that include this range.\n+                                                 \/\/    (Contains ptrs to uset nodes)\n+    RangeDescriptor   *fNext {nullptr};          \/\/ Next RangeDescriptor in the linked list.\n@@ -56,1 +59,1 @@\n-    void setDictionaryFlag();           \/\/ Check whether this range appears as part of\n+    bool isDictionaryRange();           \/\/ Check whether this range appears as part of\n@@ -59,3 +62,2 @@\n-private:\n-    RangeDescriptor(const RangeDescriptor &other); \/\/ forbid copying of this class\n-    RangeDescriptor &operator=(const RangeDescriptor &other); \/\/ forbid copying of this class\n+    RangeDescriptor(const RangeDescriptor &other) = delete; \/\/ forbid default copying of this class\n+    RangeDescriptor &operator=(const RangeDescriptor &other) = delete; \/\/ forbid assigning of this class\n@@ -92,0 +94,2 @@\n+    int32_t  getDictCategoriesStart() const; \/\/ First char category that includes $dictionary, or\n+                                             \/\/ last category + 1 if there are no dictionary categories.\n@@ -104,2 +108,0 @@\n-    static constexpr int32_t DICT_BIT = 0x4000;\n-\n@@ -117,2 +119,0 @@\n-    void           numberSets();\n-\n@@ -124,2 +124,3 @@\n-    UTrie2                *fTrie;           \/\/ The mapping TRIE that is the end result of processing\n-    uint32_t               fTrieSize;       \/\/  the Unicode Sets.\n+    UMutableCPTrie        *fMutableTrie;    \/\/ The mapping TRIE that is the end result of processing\n+    UCPTrie               *fTrie;           \/\/  the Unicode Sets.\n+    uint32_t               fTrieSize;\n@@ -127,6 +128,1 @@\n-    \/\/ Groups correspond to character categories -\n-    \/\/       groups of ranges that are in the same original UnicodeSets.\n-    \/\/       fGroupCount is the index of the last used group.\n-    \/\/       fGroupCount+1 is also the number of columns in the RBBI state table being compiled.\n-    \/\/       State table column 0 is not used.  Column 1 is for end-of-input.\n-    \/\/       column 2 is for group 0.  Funny counting.\n+    \/\/ Number of range groups, which are groups of ranges that are in the same original UnicodeSets.\n@@ -135,0 +131,4 @@\n+    \/\/ The number of the first dictionary char category.\n+    \/\/ If there are no Dictionary categories, set to the last category + 1.\n+    int32_t               fDictCategoriesStart;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbisetb.h","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -21,0 +21,1 @@\n+#include \"rbbiscan.h\"\n@@ -30,0 +31,2 @@\n+const int32_t kMaxStateFor8BitsTable = 255;\n+\n@@ -55,0 +58,1 @@\n+    delete fLookAheadRuleMap;\n@@ -124,1 +128,1 @@\n-    cn->fRightChild = new RBBINode(RBBINode::endMark);\n+    RBBINode *endMarkerNode = cn->fRightChild = new RBBINode(RBBINode::endMark);\n@@ -167,1 +171,1 @@\n-        calcChainedFollowPos(fTree);\n+        calcChainedFollowPos(fTree, endMarkerNode);\n@@ -181,0 +185,1 @@\n+    mapLookAheadRules();\n@@ -404,1 +409,1 @@\n-void RBBITableBuilder::calcChainedFollowPos(RBBINode *tree) {\n+void RBBITableBuilder::calcChainedFollowPos(RBBINode *tree, RBBINode *endMarkNode) {\n@@ -406,1 +411,0 @@\n-    UVector         endMarkerNodes(*fStatus);\n@@ -408,2 +412,0 @@\n-    int32_t         i;\n-\n@@ -414,3 +416,0 @@\n-    \/\/ get a list of all endmarker nodes.\n-    tree->findNodes(&endMarkerNodes, RBBINode::endMark, *fStatus);\n-\n@@ -445,2 +444,1 @@\n-        RBBINode *tNode   = (RBBINode *)leafNodes.elementAt(endNodeIx);\n-        RBBINode *endNode = NULL;\n+        RBBINode *endNode   = (RBBINode *)leafNodes.elementAt(endNodeIx);\n@@ -449,9 +447,8 @@\n-        \/\/   These include an endMarkerNode in their followPos sets.\n-        for (i=0; i<endMarkerNodes.size(); i++) {\n-            if (tNode->fFollowPos->contains(endMarkerNodes.elementAt(i))) {\n-                endNode = tNode;\n-                break;\n-            }\n-        }\n-        if (endNode == NULL) {\n-            \/\/ node wasn't an end node.  Try again with the next.\n+        \/\/ These include the endMarkNode in their followPos sets.\n+        \/\/\n+        \/\/ Note: do not consider other end marker nodes, those that are added to\n+        \/\/       look-ahead rules. These can't chain; a match immediately stops\n+        \/\/       further matching. This leaves exactly one end marker node, the one\n+        \/\/       at the end of the complete tree.\n+\n+        if (!endNode->fFollowPos->contains(endMarkNode)) {\n@@ -463,4 +460,4 @@\n-        \/\/ Line Break Specific hack:  If this node's val correspond to the $CM char class,\n-        \/\/                            don't chain from it.\n-        \/\/ TODO:  Add rule syntax for this behavior, get specifics out of here and\n-        \/\/        into the rule file.\n+        \/\/ !!LBCMNoChain implementation:  If this node's val correspond to\n+        \/\/ the Line Break $CM char class, don't chain from it.\n+        \/\/ TODO:  Remove this. !!LBCMNoChain is deprecated, and is not used\n+        \/\/        by any of the standard ICU rules.\n@@ -478,1 +475,0 @@\n-\n@@ -708,0 +704,70 @@\n+\/**\n+ * mapLookAheadRules\n+ *\n+ *\/\n+void RBBITableBuilder::mapLookAheadRules() {\n+    fLookAheadRuleMap =  new UVector32(fRB->fScanner->numRules() + 1, *fStatus);\n+    if (fLookAheadRuleMap == nullptr) {\n+        *fStatus = U_MEMORY_ALLOCATION_ERROR;\n+    }\n+    if (U_FAILURE(*fStatus)) {\n+        return;\n+    }\n+    fLookAheadRuleMap->setSize(fRB->fScanner->numRules() + 1);\n+\n+    for (int32_t n=0; n<fDStates->size(); n++) {\n+        RBBIStateDescriptor *sd = (RBBIStateDescriptor *)fDStates->elementAt(n);\n+        int32_t laSlotForState = 0;\n+\n+        \/\/ Establish the look-ahead slot for this state, if the state covers\n+        \/\/ any look-ahead nodes - corresponding to the '\/' in look-ahead rules.\n+\n+        \/\/ If any of the look-ahead nodes already have a slot assigned, use it,\n+        \/\/ otherwise assign a new one.\n+\n+        bool sawLookAheadNode = false;\n+        for (int32_t ipos=0; ipos<sd->fPositions->size(); ++ipos) {\n+            RBBINode *node = static_cast<RBBINode *>(sd->fPositions->elementAt(ipos));\n+            if (node->fType != RBBINode::NodeType::lookAhead) {\n+                continue;\n+            }\n+            sawLookAheadNode = true;\n+            int32_t ruleNum = node->fVal;     \/\/ Set when rule was originally parsed.\n+            U_ASSERT(ruleNum < fLookAheadRuleMap->size());\n+            U_ASSERT(ruleNum > 0);\n+            int32_t laSlot = fLookAheadRuleMap->elementAti(ruleNum);\n+            if (laSlot != 0) {\n+                if (laSlotForState == 0) {\n+                    laSlotForState = laSlot;\n+                } else {\n+                    \/\/ TODO: figure out if this can fail, change to setting an error code if so.\n+                    U_ASSERT(laSlot == laSlotForState);\n+                }\n+            }\n+        }\n+        if (!sawLookAheadNode) {\n+            continue;\n+        }\n+\n+        if (laSlotForState == 0) {\n+            laSlotForState = ++fLASlotsInUse;\n+        }\n+\n+        \/\/ For each look ahead node covered by this state,\n+        \/\/ set the mapping from the node's rule number to the look ahead slot.\n+        \/\/ There can be multiple nodes\/rule numbers going to the same la slot.\n+\n+        for (int32_t ipos=0; ipos<sd->fPositions->size(); ++ipos) {\n+            RBBINode *node = static_cast<RBBINode *>(sd->fPositions->elementAt(ipos));\n+            if (node->fType != RBBINode::NodeType::lookAhead) {\n+                continue;\n+            }\n+            int32_t ruleNum = node->fVal;     \/\/ Set when rule was originally parsed.\n+            int32_t existingVal = fLookAheadRuleMap->elementAti(ruleNum);\n+            (void)existingVal;\n+            U_ASSERT(existingVal == 0 || existingVal == laSlotForState);\n+            fLookAheadRuleMap->setElementAt(laSlotForState, ruleNum);\n+        }\n+    }\n+\n+}\n@@ -743,1 +809,1 @@\n-                \/\/ If no other value was specified, force it to -1.\n+                \/\/ If no other value was specified, force it to ACCEPTING_UNCONDITIONAL (1).\n@@ -747,1 +813,1 @@\n-                    sd->fAccepting = endMarker->fVal;\n+                    sd->fAccepting = fLookAheadRuleMap->elementAti(endMarker->fVal);\n@@ -749,1 +815,1 @@\n-                        sd->fAccepting = -1;\n+                        sd->fAccepting = ACCEPTING_UNCONDITIONAL;\n@@ -752,1 +818,1 @@\n-                if (sd->fAccepting==-1 && endMarker->fVal != 0) {\n+                if (sd->fAccepting==ACCEPTING_UNCONDITIONAL && endMarker->fVal != 0) {\n@@ -754,3 +820,3 @@\n-                    \/\/ Favor the look-ahead.  Expedient for line break.\n-                    \/\/ TODO:  need a more elegant resolution for conflicting rules.\n-                    sd->fAccepting = endMarker->fVal;\n+                    \/\/ Favor the look-ahead, because a look-ahead match needs to\n+                    \/\/ immediately stop the run-time engine. First match, not longest.\n+                    sd->fAccepting = fLookAheadRuleMap->elementAti(endMarker->fVal);\n@@ -759,10 +825,1 @@\n-                \/\/ if sd->fAccepting already had a value other than 0 or -1, leave it be.\n-\n-                \/\/ If the end marker node is from a look-ahead rule, set\n-                \/\/   the fLookAhead field for this state also.\n-                if (endMarker->fLookAheadEnd) {\n-                    \/\/ TODO:  don't change value if already set?\n-                    \/\/ TODO:  allow for more than one active look-ahead rule in engine.\n-                    \/\/        Make value here an index to a side array in engine?\n-                    sd->fLookAhead = sd->fAccepting;\n-                }\n+                \/\/ if sd->fAccepting already had a value other than 0 or 1, leave it be.\n@@ -795,0 +852,1 @@\n+        U_ASSERT(lookAheadNode->fType == RBBINode::NodeType::lookAhead);\n@@ -798,2 +856,10 @@\n-            if (sd->fPositions->indexOf(lookAheadNode) >= 0) {\n-                sd->fLookAhead = lookAheadNode->fVal;\n+            int32_t positionsIdx = sd->fPositions->indexOf(lookAheadNode);\n+            if (positionsIdx >= 0) {\n+                U_ASSERT(lookAheadNode == sd->fPositions->elementAt(positionsIdx));\n+                uint32_t lookaheadSlot = fLookAheadRuleMap->elementAti(lookAheadNode->fVal);\n+                U_ASSERT(sd->fLookAhead == 0 || sd->fLookAhead == lookaheadSlot);\n+                \/\/ if (sd->fLookAhead != 0 && sd->fLookAhead != lookaheadSlot) {\n+                \/\/     printf(\"%s:%d Bingo. sd->fLookAhead:%d   lookaheadSlot:%d\\n\",\n+                \/\/            __FILE__, __LINE__, sd->fLookAhead, lookaheadSlot);\n+                \/\/ }\n+                sd->fLookAhead = lookaheadSlot;\n@@ -1086,1 +1152,7 @@\n-        for (categories->second=categories->first+1; categories->second < numCols; categories->second++) {\n+        \/\/ Note: dictionary & non-dictionary columns cannot be merged.\n+        \/\/       The limitSecond value prevents considering mixed pairs.\n+        \/\/       Dictionary categories are >= DictCategoriesStart.\n+        \/\/       Non dict categories are   <  DictCategoriesStart.\n+        int limitSecond = categories->first < fRB->fSetBuilder->getDictCategoriesStart() ?\n+            fRB->fSetBuilder->getDictCategoriesStart() : numCols;\n+        for (categories->second=categories->first+1; categories->second < limitSecond; categories->second++) {\n@@ -1207,10 +1279,0 @@\n-        if (sd->fAccepting == duplState) {\n-            sd->fAccepting = keepState;\n-        } else if (sd->fAccepting > duplState) {\n-            sd->fAccepting--;\n-        }\n-        if (sd->fLookAhead == duplState) {\n-            sd->fLookAhead = keepState;\n-        } else if (sd->fLookAhead > duplState) {\n-            sd->fLookAhead--;\n-        }\n@@ -1283,1 +1345,5 @@\n-    rowSize = offsetof(RBBIStateTableRow, fNextState) + sizeof(uint16_t)*numCols;\n+    if (use8BitsForTable()) {\n+        rowSize = offsetof(RBBIStateTableRow8, fNextState) + sizeof(int8_t)*numCols;\n+    } else {\n+        rowSize = offsetof(RBBIStateTableRow16, fNextState) + sizeof(int16_t)*numCols;\n+    }\n@@ -1288,0 +1354,3 @@\n+bool RBBITableBuilder::use8BitsForTable() const {\n+    return fDStates->size() <= kMaxStateFor8BitsTable;\n+}\n@@ -1312,1 +1381,0 @@\n-    table->fRowLen    = offsetof(RBBIStateTableRow, fNextState) + sizeof(uint16_t) * catCount;\n@@ -1314,0 +1382,2 @@\n+    table->fDictCategoriesStart = fRB->fSetBuilder->getDictCategoriesStart();\n+    table->fLookAheadResultsSize = fLASlotsInUse == ACCEPTING_UNCONDITIONAL ? 0 : fLASlotsInUse + 1;\n@@ -1315,0 +1385,6 @@\n+    if (use8BitsForTable()) {\n+        table->fRowLen    = offsetof(RBBIStateTableRow8, fNextState) + sizeof(uint8_t) * catCount;\n+        table->fFlags  |= RBBI_8BITS_ROWS;\n+    } else {\n+        table->fRowLen    = offsetof(RBBIStateTableRow16, fNextState) + sizeof(int16_t) * catCount;\n+    }\n@@ -1321,1 +1397,0 @@\n-    table->fReserved  = 0;\n@@ -1326,7 +1401,22 @@\n-        U_ASSERT (-32768 < sd->fAccepting && sd->fAccepting <= 32767);\n-        U_ASSERT (-32768 < sd->fLookAhead && sd->fLookAhead <= 32767);\n-        row->fAccepting = (int16_t)sd->fAccepting;\n-        row->fLookAhead = (int16_t)sd->fLookAhead;\n-        row->fTagIdx    = (int16_t)sd->fTagsIdx;\n-        for (col=0; col<catCount; col++) {\n-            row->fNextState[col] = (uint16_t)sd->fDtran->elementAti(col);\n+        if (use8BitsForTable()) {\n+            U_ASSERT (sd->fAccepting <= 255);\n+            U_ASSERT (sd->fLookAhead <= 255);\n+            U_ASSERT (0 <= sd->fTagsIdx && sd->fTagsIdx <= 255);\n+            RBBIStateTableRow8 *r8 = (RBBIStateTableRow8*)row;\n+            r8->fAccepting = sd->fAccepting;\n+            r8->fLookAhead = sd->fLookAhead;\n+            r8->fTagsIdx   = sd->fTagsIdx;\n+            for (col=0; col<catCount; col++) {\n+                U_ASSERT (sd->fDtran->elementAti(col) <= kMaxStateFor8BitsTable);\n+                r8->fNextState[col] = sd->fDtran->elementAti(col);\n+            }\n+        } else {\n+            U_ASSERT (sd->fAccepting <= 0xffff);\n+            U_ASSERT (sd->fLookAhead <= 0xffff);\n+            U_ASSERT (0 <= sd->fTagsIdx && sd->fTagsIdx <= 0xffff);\n+            row->r16.fAccepting = sd->fAccepting;\n+            row->r16.fLookAhead = sd->fLookAhead;\n+            row->r16.fTagsIdx   = sd->fTagsIdx;\n+            for (col=0; col<catCount; col++) {\n+                row->r16.fNextState[col] = sd->fDtran->elementAti(col);\n+            }\n@@ -1468,1 +1558,5 @@\n-    rowSize = offsetof(RBBIStateTableRow, fNextState) + sizeof(uint16_t)*numCols;\n+    if (use8BitsForSafeTable()) {\n+        rowSize = offsetof(RBBIStateTableRow8, fNextState) + sizeof(int8_t)*numCols;\n+    } else {\n+        rowSize = offsetof(RBBIStateTableRow16, fNextState) + sizeof(int16_t)*numCols;\n+    }\n@@ -1473,0 +1567,3 @@\n+bool RBBITableBuilder::use8BitsForSafeTable() const {\n+    return fSafeTable->size() <= kMaxStateFor8BitsTable;\n+}\n@@ -1497,1 +1594,0 @@\n-    table->fRowLen    = offsetof(RBBIStateTableRow, fNextState) + sizeof(uint16_t) * catCount;\n@@ -1500,1 +1596,6 @@\n-    table->fReserved  = 0;\n+    if (use8BitsForSafeTable()) {\n+        table->fRowLen    = offsetof(RBBIStateTableRow8, fNextState) + sizeof(uint8_t) * catCount;\n+        table->fFlags  |= RBBI_8BITS_ROWS;\n+    } else {\n+        table->fRowLen    = offsetof(RBBIStateTableRow16, fNextState) + sizeof(int16_t) * catCount;\n+    }\n@@ -1505,6 +1606,16 @@\n-        row->fAccepting = 0;\n-        row->fLookAhead = 0;\n-        row->fTagIdx    = 0;\n-        row->fReserved  = 0;\n-        for (col=0; col<catCount; col++) {\n-            row->fNextState[col] = rowString->charAt(col);\n+        if (use8BitsForSafeTable()) {\n+            RBBIStateTableRow8 *r8 = (RBBIStateTableRow8*)row;\n+            r8->fAccepting = 0;\n+            r8->fLookAhead = 0;\n+            r8->fTagsIdx    = 0;\n+            for (col=0; col<catCount; col++) {\n+                U_ASSERT(rowString->charAt(col) <= kMaxStateFor8BitsTable);\n+                r8->fNextState[col] = static_cast<uint8_t>(rowString->charAt(col));\n+            }\n+        } else {\n+            row->r16.fAccepting = 0;\n+            row->r16.fLookAhead = 0;\n+            row->r16.fTagsIdx    = 0;\n+            for (col=0; col<catCount; col++) {\n+                row->r16.fNextState[col] = rowString->charAt(col);\n+            }\n@@ -1548,1 +1659,1 @@\n-        RBBIDebugPrintf(\" %2d\", c);\n+        RBBIDebugPrintf(\" %3d\", c);\n@@ -1553,1 +1664,1 @@\n-        RBBIDebugPrintf(\"---\");\n+        RBBIDebugPrintf(\"----\");\n@@ -1562,1 +1673,1 @@\n-            RBBIDebugPrintf(\" %2d\", sd->fDtran->elementAti(c));\n+            RBBIDebugPrintf(\" %3d\", sd->fDtran->elementAti(c));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbitblb.cpp","additions":188,"deletions":77,"binary":false,"changes":265,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+#include \"rbbidata.h\"\n@@ -56,0 +57,3 @@\n+    \/** Use 8 bits to encode the forward table *\/\n+    bool     use8BitsForTable() const;\n+\n@@ -88,0 +92,2 @@\n+    \/** Use 8 bits to encode the safe reverse table *\/\n+    bool     use8BitsForSafeTable() const;\n@@ -94,1 +100,1 @@\n-    void     calcChainedFollowPos(RBBINode *n);\n+    void     calcChainedFollowPos(RBBINode *n, RBBINode *endMarkNode);\n@@ -97,0 +103,1 @@\n+    void     mapLookAheadRules();\n@@ -178,0 +185,9 @@\n+    \/** Map from rule number (fVal in look ahead nodes) to sequential lookahead index. *\/\n+    UVector32        *fLookAheadRuleMap = nullptr;\n+\n+    \/* Counter used when assigning lookahead rule numbers.\n+     * Contains the last look-ahead number already in use.\n+     * The first look-ahead number is 2; Number 1 (ACCEPTING_UNCONDITIONAL) is reserved\n+     * for non-lookahead accepting states. See the declarations of RBBIStateTableRowT.   *\/\n+    int32_t          fLASlotsInUse = ACCEPTING_UNCONDITIONAL;\n+\n@@ -179,2 +195,2 @@\n-    RBBITableBuilder(const RBBITableBuilder &other); \/\/ forbid copying of this class\n-    RBBITableBuilder &operator=(const RBBITableBuilder &other); \/\/ forbid copying of this class\n+    RBBITableBuilder(const RBBITableBuilder &other) = delete; \/\/ forbid copying of this class\n+    RBBITableBuilder &operator=(const RBBITableBuilder &other) = delete; \/\/ forbid copying of this class\n@@ -189,2 +205,2 @@\n-    int32_t          fAccepting;\n-    int32_t          fLookAhead;\n+    uint32_t         fAccepting;\n+    uint32_t         fLookAhead;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/rbbitblb.h","additions":21,"deletions":5,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+#include \"cmemory.h\"\n@@ -380,1 +381,1 @@\n-    static UMutex gLocaleLock = U_MUTEX_INITIALIZER;\n+    static UMutex gLocaleLock;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/resbund.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"restrace.h\"\n@@ -50,2 +51,4 @@\n-    ResourceArray(const uint16_t *i16, const uint32_t *i32, int32_t len) :\n-            items16(i16), items32(i32), length(len) {}\n+    ResourceArray(const uint16_t *i16, const uint32_t *i32, int32_t len,\n+                  const ResourceTracer& traceInfo) :\n+            items16(i16), items32(i32), length(len),\n+            fTraceInfo(traceInfo) {}\n@@ -60,1 +63,1 @@\n-     * @return TRUE if i is non-negative and less than getSize().\n+     * @return true if i is non-negative and less than getSize().\n@@ -71,0 +74,1 @@\n+    ResourceTracer fTraceInfo;\n@@ -83,2 +87,4 @@\n-                  const uint16_t *i16, const uint32_t *i32, int32_t len) :\n-            keys16(k16), keys32(k32), items16(i16), items32(i32), length(len) {}\n+                  const uint16_t *i16, const uint32_t *i32, int32_t len,\n+                  const ResourceTracer& traceInfo) :\n+            keys16(k16), keys32(k32), items16(i16), items32(i32), length(len),\n+            fTraceInfo(traceInfo) {}\n@@ -91,1 +97,1 @@\n-     * @param i Array item index.\n+     * @param i Table item index.\n@@ -94,1 +100,1 @@\n-     * @return TRUE if i is non-negative and less than getSize().\n+     * @return true if i is non-negative and less than getSize().\n@@ -98,0 +104,7 @@\n+    \/**\n+     * @param key Key string to find in the table.\n+     * @param value Output-only, receives the value of the item with that key.\n+     * @return true if the table contains the key.\n+     *\/\n+    UBool findValue(const char *key, ResourceValue &value) const;\n+\n@@ -104,0 +117,1 @@\n+    ResourceTracer fTraceInfo;\n@@ -130,1 +144,1 @@\n-        return UnicodeString(TRUE, r, len);\n+        return UnicodeString(true, r, len);\n@@ -141,1 +155,1 @@\n-        return UnicodeString(TRUE, r, len);\n+        return UnicodeString(true, r, len);\n@@ -188,1 +202,1 @@\n-     * @return TRUE if this is a no-inheritance marker string\n+     * @return true if this is a no-inheritance marker string\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/resource.h","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -0,0 +1,130 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if U_ENABLE_TRACING\n+\n+#include \"restrace.h\"\n+#include \"charstr.h\"\n+#include \"cstring.h\"\n+#include \"utracimp.h\"\n+#include \"uresimp.h\"\n+#include \"uassert.h\"\n+#include \"util.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+ResourceTracer::~ResourceTracer() = default;\n+\n+void ResourceTracer::trace(const char* resType) const {\n+    U_ASSERT(fResB || fParent);\n+    UTRACE_ENTRY(UTRACE_UDATA_RESOURCE);\n+    UErrorCode status = U_ZERO_ERROR;\n+\n+    CharString filePath;\n+    getFilePath(filePath, status);\n+\n+    CharString resPath;\n+    getResPath(resPath, status);\n+\n+    \/\/ The longest type (\"intvector\") is 9 chars\n+    const char kSpaces[] = \"         \";\n+    CharString format;\n+    format.append(kSpaces, sizeof(kSpaces) - 1 - uprv_strlen(resType), status);\n+    format.append(\"(%s) %s @ %s\", status);\n+\n+    UTRACE_DATA3(UTRACE_VERBOSE,\n+        format.data(),\n+        resType,\n+        filePath.data(),\n+        resPath.data());\n+    UTRACE_EXIT_STATUS(status);\n+}\n+\n+void ResourceTracer::traceOpen() const {\n+    U_ASSERT(fResB);\n+    UTRACE_ENTRY(UTRACE_UDATA_BUNDLE);\n+    UErrorCode status = U_ZERO_ERROR;\n+\n+    CharString filePath;\n+    UTRACE_DATA1(UTRACE_VERBOSE, \"%s\", getFilePath(filePath, status).data());\n+    UTRACE_EXIT_STATUS(status);\n+}\n+\n+CharString& ResourceTracer::getFilePath(CharString& output, UErrorCode& status) const {\n+    if (fResB) {\n+        output.append(fResB->fData->fPath, status);\n+        output.append('\/', status);\n+        output.append(fResB->fData->fName, status);\n+        output.append(\".res\", status);\n+    } else {\n+        fParent->getFilePath(output, status);\n+    }\n+    return output;\n+}\n+\n+CharString& ResourceTracer::getResPath(CharString& output, UErrorCode& status) const {\n+    if (fResB) {\n+        output.append('\/', status);\n+        output.append(fResB->fResPath, status);\n+        \/\/ removing the trailing \/\n+        U_ASSERT(output[output.length()-1] == '\/');\n+        output.truncate(output.length()-1);\n+    } else {\n+        fParent->getResPath(output, status);\n+    }\n+    if (fKey) {\n+        output.append('\/', status);\n+        output.append(fKey, status);\n+    }\n+    if (fIndex != -1) {\n+        output.append('[', status);\n+        UnicodeString indexString;\n+        ICU_Utility::appendNumber(indexString, fIndex);\n+        output.appendInvariantChars(indexString, status);\n+        output.append(']', status);\n+    }\n+    return output;\n+}\n+\n+void FileTracer::traceOpen(const char* path, const char* type, const char* name) {\n+    if (uprv_strcmp(type, \"res\") == 0) {\n+        traceOpenResFile(path, name);\n+    } else {\n+        traceOpenDataFile(path, type, name);\n+    }\n+}\n+\n+void FileTracer::traceOpenDataFile(const char* path, const char* type, const char* name) {\n+    UTRACE_ENTRY(UTRACE_UDATA_DATA_FILE);\n+    UErrorCode status = U_ZERO_ERROR;\n+\n+    CharString filePath;\n+    filePath.append(path, status);\n+    filePath.append('\/', status);\n+    filePath.append(name, status);\n+    filePath.append('.', status);\n+    filePath.append(type, status);\n+\n+    UTRACE_DATA1(UTRACE_VERBOSE, \"%s\", filePath.data());\n+    UTRACE_EXIT_STATUS(status);\n+}\n+\n+void FileTracer::traceOpenResFile(const char* path, const char* name) {\n+    UTRACE_ENTRY(UTRACE_UDATA_RES_FILE);\n+    UErrorCode status = U_ZERO_ERROR;\n+\n+    CharString filePath;\n+    filePath.append(path, status);\n+    filePath.append('\/', status);\n+    filePath.append(name, status);\n+    filePath.append(\".res\", status);\n+\n+    UTRACE_DATA1(UTRACE_VERBOSE, \"%s\", filePath.data());\n+    UTRACE_EXIT_STATUS(status);\n+}\n+\n+U_NAMESPACE_END\n+\n+#endif \/\/ U_ENABLE_TRACING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/restrace.cpp","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -0,0 +1,147 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#ifndef __RESTRACE_H__\n+#define __RESTRACE_H__\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if U_ENABLE_TRACING\n+\n+struct UResourceBundle;\n+\n+U_NAMESPACE_BEGIN\n+\n+class CharString;\n+\n+\/**\n+ * Instances of this class store information used to trace reads from resource\n+ * bundles when ICU is built with --enable-tracing.\n+ *\n+ * All arguments of type const UResourceBundle*, const char*, and\n+ * const ResourceTracer& are stored as pointers. The caller must retain\n+ * ownership for the lifetime of this ResourceTracer.\n+ *\n+ * Exported as U_COMMON_API for Windows because it is a value field\n+ * in other exported types.\n+ *\/\n+class U_COMMON_API ResourceTracer {\n+public:\n+    ResourceTracer() :\n+        fResB(nullptr),\n+        fParent(nullptr),\n+        fKey(nullptr),\n+        fIndex(-1) {}\n+\n+    ResourceTracer(const UResourceBundle* resB) :\n+        fResB(resB),\n+        fParent(nullptr),\n+        fKey(nullptr),\n+        fIndex(-1) {}\n+\n+    ResourceTracer(const UResourceBundle* resB, const char* key) :\n+        fResB(resB),\n+        fParent(nullptr),\n+        fKey(key),\n+        fIndex(-1) {}\n+\n+    ResourceTracer(const UResourceBundle* resB, int32_t index) :\n+        fResB(resB),\n+        fParent(nullptr),\n+        fKey(nullptr),\n+        fIndex(index) {}\n+\n+    ResourceTracer(const ResourceTracer& parent, const char* key) :\n+        fResB(nullptr),\n+        fParent(&parent),\n+        fKey(key),\n+        fIndex(-1) {}\n+\n+    ResourceTracer(const ResourceTracer& parent, int32_t index) :\n+        fResB(nullptr),\n+        fParent(&parent),\n+        fKey(nullptr),\n+        fIndex(index) {}\n+\n+    ~ResourceTracer();\n+\n+    void trace(const char* type) const;\n+    void traceOpen() const;\n+\n+    \/**\n+     * Calls trace() if the resB or parent provided to the constructor was\n+     * non-null; otherwise, does nothing.\n+     *\/\n+    void maybeTrace(const char* type) const {\n+        if (fResB || fParent) {\n+            trace(type);\n+        }\n+    }\n+\n+private:\n+    const UResourceBundle* fResB;\n+    const ResourceTracer* fParent;\n+    const char* fKey;\n+    int32_t fIndex;\n+\n+    CharString& getFilePath(CharString& output, UErrorCode& status) const;\n+\n+    CharString& getResPath(CharString& output, UErrorCode& status) const;\n+};\n+\n+\/**\n+ * This class provides methods to trace data file reads when ICU is built\n+ * with --enable-tracing.\n+ *\/\n+class FileTracer {\n+public:\n+    static void traceOpen(const char* path, const char* type, const char* name);\n+\n+private:\n+    static void traceOpenDataFile(const char* path, const char* type, const char* name);\n+    static void traceOpenResFile(const char* path, const char* name);\n+};\n+\n+U_NAMESPACE_END\n+\n+#else \/\/ U_ENABLE_TRACING\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * Default trivial implementation when --enable-tracing is not used.\n+ *\/\n+class U_COMMON_API ResourceTracer {\n+public:\n+    ResourceTracer() {}\n+\n+    ResourceTracer(const void*) {}\n+\n+    ResourceTracer(const void*, const char*) {}\n+\n+    ResourceTracer(const void*, int32_t) {}\n+\n+    ResourceTracer(const ResourceTracer&, const char*) {}\n+\n+    ResourceTracer(const ResourceTracer&, int32_t) {}\n+\n+    void trace(const char*) const {}\n+\n+    void traceOpen() const {}\n+\n+    void maybeTrace(const char*) const {}\n+};\n+\n+\/**\n+ * Default trivial implementation when --enable-tracing is not used.\n+ *\/\n+class FileTracer {\n+public:\n+    static void traceOpen(const char*, const char*, const char*) {}\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif \/\/ U_ENABLE_TRACING\n+\n+#endif \/\/__RESTRACE_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/restrace.h","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -117,1 +117,1 @@\n-     * @param isEscaped output parameter set to TRUE if the character\n+     * @param isEscaped output parameter set to true if the character\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ruleiter.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-CharacterIterator*\n+StringCharacterIterator*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/schriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -336,4 +336,1 @@\n-static UMutex *lock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex lock;\n@@ -364,1 +361,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n@@ -455,1 +452,1 @@\n-        XMutex mutex(lock(), factory != NULL);\n+        XMutex mutex(&lock, factory != NULL);\n@@ -621,1 +618,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n@@ -698,1 +695,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n@@ -750,1 +747,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n@@ -855,1 +852,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n@@ -886,1 +883,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n@@ -906,1 +903,1 @@\n-        Mutex mutex(lock());\n+        Mutex mutex(&lock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/serv.cpp","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-  * @return TRUE if the ICUServiceKey changed to a valid fallback value.\n+  * @return true if the ICUServiceKey changed to a valid fallback value.\n@@ -146,1 +146,1 @@\n-  * <p>Return TRUE if a key created from id matches, or would eventually\n+  * <p>Return true if a key created from id matches, or would eventually\n@@ -150,1 +150,1 @@\n-  * @return TRUE if this ICUServiceKey's canonical ID is a fallback of id.\n+  * @return true if this ICUServiceKey's canonical ID is a fallback of id.\n@@ -294,1 +294,1 @@\n-   * service instance.  If visible is TRUE, the ID will be visible.\n+   * service instance.  If visible is true, the ID will be visible.\n@@ -300,1 +300,1 @@\n-   * @param visible if TRUE, the ID will be visible.\n+   * @param visible if true, the ID will be visible.\n@@ -302,1 +302,1 @@\n-  SimpleFactory(UObject* instanceToAdopt, const UnicodeString& id, UBool visible = TRUE);\n+  SimpleFactory(UObject* instanceToAdopt, const UnicodeString& id, UBool visible = true);\n@@ -321,1 +321,1 @@\n-   * <p>This implementation adds a mapping from ID -> this to result if visible is TRUE,\n+   * <p>This implementation adds a mapping from ID -> this to result if visible is true,\n@@ -330,1 +330,1 @@\n-   * <p>This implementation returns the factory ID if it equals id and visible is TRUE,\n+   * <p>This implementation returns the factory ID if it equals id and visible is true,\n@@ -430,2 +430,2 @@\n-   * <p>Return TRUE if either string of the pair is bogus.<\/p>\n-   * @return TRUE if either string of the pair is bogus.\n+   * <p>Return true if either string of the pair is bogus.<\/p>\n+   * @return true if either string of the pair is bogus.\n@@ -764,1 +764,1 @@\n-     * that defaults visible to TRUE.<\/p>\n+     * that defaults visible to true.<\/p>\n@@ -777,1 +777,1 @@\n-     * getVisibleIDs if visible is TRUE.  The service instance will be adopted and\n+     * getVisibleIDs if visible is true.  The service instance will be adopted and\n@@ -787,1 +787,1 @@\n-     * @param visible TRUE if getVisibleIDs is to return this ID.\n+     * @param visible true if getVisibleIDs is to return this ID.\n@@ -823,1 +823,1 @@\n-     * @return TRUE if the call successfully unregistered the factory.\n+     * @return true if the call successfully unregistered the factory.\n@@ -836,1 +836,1 @@\n-     * <p>Return TRUE if the service is in its default state.<\/p>\n+     * <p>Return true if the service is in its default state.<\/p>\n@@ -838,1 +838,1 @@\n-     * <p>The default implementation returns TRUE if there are no\n+     * <p>The default implementation returns true if there are no\n@@ -880,1 +880,1 @@\n-     * @param visible if TRUE, the ID will be visible.\n+     * @param visible if true, the ID will be visible.\n@@ -888,1 +888,1 @@\n-     * must return TRUE.<\/p>\n+     * must return true.<\/p>\n@@ -931,1 +931,1 @@\n-     * @return TRUE if the service accepts the listener.\n+     * @return true if the service accepts the listener.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/serv.h","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-    static UMutex llock = U_MUTEX_INITIALIZER;\n+    static UMutex llock;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/servls.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,4 +24,1 @@\n-static UMutex *notifyLock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex notifyLock;\n@@ -36,1 +33,1 @@\n-        Mutex lmx(notifyLock());\n+        Mutex lmx(&notifyLock);\n@@ -53,1 +50,1 @@\n-            Mutex lmx(notifyLock());\n+            Mutex lmx(&notifyLock);\n@@ -86,1 +83,1 @@\n-            Mutex lmx(notifyLock());\n+            Mutex lmx(&notifyLock);\n@@ -109,1 +106,1 @@\n-        Mutex lmx(notifyLock());\n+        Mutex lmx(&notifyLock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/servnotf.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-     * Subclasses implement this to return TRUE if the listener is\n+     * Subclasses implement this to return true if the listener is\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/servnotf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-     * If noHardReferences() == TRUE then this object has no hard references.\n+     * If noHardReferences() == true then this object has no hard references.\n@@ -99,1 +99,1 @@\n-     * If hasHardReferences() == TRUE then this object has hard references.\n+     * If hasHardReferences() == true then this object has hard references.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/sharedobject.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -266,0 +266,2 @@\n+            \/\/ TODO(ICU-20406): This does not distinguish between \"{0}{1}\" and \"{1}{0}\".\n+            \/\/ Consider removing this function and replacing it with an iterator interface.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/simpleformatter.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,196 @@\n+appendable.cpp\n+bmpset.cpp\n+brkeng.cpp\n+brkiter.cpp\n+bytesinkutil.cpp\n+bytestream.cpp\n+bytestrie.cpp\n+bytestriebuilder.cpp\n+bytestrieiterator.cpp\n+caniter.cpp\n+characterproperties.cpp\n+chariter.cpp\n+charstr.cpp\n+cmemory.cpp\n+cstr.cpp\n+cstring.cpp\n+cwchar.cpp\n+dictbe.cpp\n+dictionarydata.cpp\n+dtintrv.cpp\n+edits.cpp\n+errorcode.cpp\n+filteredbrk.cpp\n+filterednormalizer2.cpp\n+icudataver.cpp\n+icuplug.cpp\n+loadednormalizer2impl.cpp\n+localebuilder.cpp\n+localematcher.cpp\n+localeprioritylist.cpp\n+locavailable.cpp\n+locbased.cpp\n+locdispnames.cpp\n+locdistance.cpp\n+locdspnm.cpp\n+locid.cpp\n+loclikely.cpp\n+loclikelysubtags.cpp\n+locmap.cpp\n+locresdata.cpp\n+locutil.cpp\n+lsr.cpp\n+messagepattern.cpp\n+normalizer2.cpp\n+normalizer2impl.cpp\n+normlzr.cpp\n+parsepos.cpp\n+patternprops.cpp\n+pluralmap.cpp\n+propname.cpp\n+propsvec.cpp\n+punycode.cpp\n+putil.cpp\n+rbbi.cpp\n+rbbi_cache.cpp\n+rbbidata.cpp\n+rbbinode.cpp\n+rbbirb.cpp\n+rbbiscan.cpp\n+rbbisetb.cpp\n+rbbistbl.cpp\n+rbbitblb.cpp\n+resbund.cpp\n+resbund_cnv.cpp\n+resource.cpp\n+restrace.cpp\n+ruleiter.cpp\n+schriter.cpp\n+serv.cpp\n+servlk.cpp\n+servlkf.cpp\n+servls.cpp\n+servnotf.cpp\n+servrbf.cpp\n+servslkf.cpp\n+sharedobject.cpp\n+simpleformatter.cpp\n+static_unicode_sets.cpp\n+stringpiece.cpp\n+stringtriebuilder.cpp\n+uarrsort.cpp\n+ubidi.cpp\n+ubidi_props.cpp\n+ubidiln.cpp\n+ubiditransform.cpp\n+ubidiwrt.cpp\n+ubrk.cpp\n+ucase.cpp\n+ucasemap.cpp\n+ucasemap_titlecase_brkiter.cpp\n+ucat.cpp\n+uchar.cpp\n+ucharstrie.cpp\n+ucharstriebuilder.cpp\n+ucharstrieiterator.cpp\n+uchriter.cpp\n+ucln_cmn.cpp\n+ucmndata.cpp\n+ucnv.cpp\n+ucnv2022.cpp\n+ucnv_bld.cpp\n+ucnv_cb.cpp\n+ucnv_cnv.cpp\n+ucnv_ct.cpp\n+ucnv_err.cpp\n+ucnv_ext.cpp\n+ucnv_io.cpp\n+ucnv_lmb.cpp\n+ucnv_set.cpp\n+ucnv_u16.cpp\n+ucnv_u32.cpp\n+ucnv_u7.cpp\n+ucnv_u8.cpp\n+ucnvbocu.cpp\n+ucnvdisp.cpp\n+ucnvhz.cpp\n+ucnvisci.cpp\n+ucnvlat1.cpp\n+ucnvmbcs.cpp\n+ucnvscsu.cpp\n+ucnvsel.cpp\n+ucol_swp.cpp\n+ucptrie.cpp\n+ucurr.cpp\n+udata.cpp\n+udatamem.cpp\n+udataswp.cpp\n+uenum.cpp\n+uhash.cpp\n+uhash_us.cpp\n+uidna.cpp\n+uinit.cpp\n+uinvchar.cpp\n+uiter.cpp\n+ulist.cpp\n+uloc.cpp\n+uloc_keytype.cpp\n+uloc_tag.cpp\n+umapfile.cpp\n+umath.cpp\n+umutablecptrie.cpp\n+umutex.cpp\n+unames.cpp\n+unifiedcache.cpp\n+unifilt.cpp\n+unifunct.cpp\n+uniset.cpp\n+uniset_closure.cpp\n+uniset_props.cpp\n+unisetspan.cpp\n+unistr.cpp\n+unistr_case.cpp\n+unistr_case_locale.cpp\n+unistr_cnv.cpp\n+unistr_props.cpp\n+unistr_titlecase_brkiter.cpp\n+unorm.cpp\n+unormcmp.cpp\n+uobject.cpp\n+uprops.cpp\n+ures_cnv.cpp\n+uresbund.cpp\n+uresdata.cpp\n+usc_impl.cpp\n+uscript.cpp\n+uscript_props.cpp\n+uset.cpp\n+uset_props.cpp\n+usetiter.cpp\n+ushape.cpp\n+usprep.cpp\n+ustack.cpp\n+ustr_cnv.cpp\n+ustr_titlecase_brkiter.cpp\n+ustr_wcs.cpp\n+ustrcase.cpp\n+ustrcase_locale.cpp\n+ustrenum.cpp\n+ustrfmt.cpp\n+ustring.cpp\n+ustrtrns.cpp\n+utext.cpp\n+utf_impl.cpp\n+util.cpp\n+util_props.cpp\n+utrace.cpp\n+utrie.cpp\n+utrie2.cpp\n+utrie2_builder.cpp\n+utrie_swap.cpp\n+uts46.cpp\n+utypes.cpp\n+uvector.cpp\n+uvectr32.cpp\n+uvectr64.cpp\n+wintz.cpp\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/sources.txt","additions":196,"deletions":0,"binary":false,"changes":196,"status":"added"},{"patch":"@@ -54,0 +54,41 @@\n+int32_t StringPiece::find(StringPiece needle, int32_t offset) {\n+  if (length() == 0 && needle.length() == 0) {\n+    return 0;\n+  }\n+  \/\/ TODO: Improve to be better than O(N^2)?\n+  for (int32_t i = offset; i < length(); i++) {\n+    int32_t j = 0;\n+    for (; j < needle.length(); i++, j++) {\n+      if (data()[i] != needle.data()[j]) {\n+        i -= j;\n+        goto outer_end;\n+      }\n+    }\n+    return i - j;\n+    outer_end: void();\n+  }\n+  return -1;\n+}\n+\n+int32_t StringPiece::compare(StringPiece other) {\n+  int32_t i = 0;\n+  for (; i < length(); i++) {\n+    if (i == other.length()) {\n+      \/\/ this is longer\n+      return 1;\n+    }\n+    char a = data()[i];\n+    char b = other.data()[i];\n+    if (a < b) {\n+      return -1;\n+    } else if (a > b) {\n+      return 1;\n+    }\n+  }\n+  if (i < other.length()) {\n+    \/\/ other is longer\n+    return -1;\n+  }\n+  return 0;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/stringpiece.cpp","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -21,0 +21,2 @@\n+#include <cstddef>\n+\n@@ -37,0 +39,4 @@\n+static constexpr int32_t sizeInMaxAlignTs(int32_t sizeInBytes) {\n+    return (sizeInBytes + sizeof(std::max_align_t) - 1) \/ sizeof(std::max_align_t);\n+}\n+\n@@ -137,2 +143,0 @@\n-    UAlignedMemory v[STACK_ITEM_SIZE\/sizeof(UAlignedMemory)+1];\n-    void *pv;\n@@ -140,9 +144,5 @@\n-    \/* allocate an intermediate item variable (v) *\/\n-    if(itemSize<=STACK_ITEM_SIZE) {\n-        pv=v;\n-    } else {\n-        pv=uprv_malloc(itemSize);\n-        if(pv==NULL) {\n-            *pErrorCode=U_MEMORY_ALLOCATION_ERROR;\n-            return;\n-        }\n+    icu::MaybeStackArray<std::max_align_t, sizeInMaxAlignTs(STACK_ITEM_SIZE)> v;\n+    if (sizeInMaxAlignTs(itemSize) > v.getCapacity() &&\n+            v.resize(sizeInMaxAlignTs(itemSize)) == nullptr) {\n+        *pErrorCode = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n@@ -151,5 +151,1 @@\n-    doInsertionSort(array, length, itemSize, cmp, context, pv);\n-\n-    if(pv!=v) {\n-        uprv_free(pv);\n-    }\n+    doInsertionSort(array, length, itemSize, cmp, context, v.getAlias());\n@@ -241,3 +237,0 @@\n-    UAlignedMemory xw[(2*STACK_ITEM_SIZE)\/sizeof(UAlignedMemory)+1];\n-    void *p;\n-\n@@ -245,8 +238,5 @@\n-    if(itemSize<=STACK_ITEM_SIZE) {\n-        p=xw;\n-    } else {\n-        p=uprv_malloc(2*itemSize);\n-        if(p==NULL) {\n-            *pErrorCode=U_MEMORY_ALLOCATION_ERROR;\n-            return;\n-        }\n+    icu::MaybeStackArray<std::max_align_t, sizeInMaxAlignTs(STACK_ITEM_SIZE) * 2> xw;\n+    if(sizeInMaxAlignTs(itemSize)*2 > xw.getCapacity() &&\n+            xw.resize(sizeInMaxAlignTs(itemSize) * 2) == nullptr) {\n+        *pErrorCode=U_MEMORY_ALLOCATION_ERROR;\n+        return;\n@@ -255,6 +245,2 @@\n-    subQuickSort(array, 0, length, itemSize,\n-                 cmp, context, p, (char *)p+itemSize);\n-\n-    if(p!=xw) {\n-        uprv_free(p);\n-    }\n+    subQuickSort(array, 0, length, itemSize, cmp, context,\n+                 xw.getAlias(), xw.getAlias() + sizeInMaxAlignTs(itemSize));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uarrsort.cpp","additions":19,"deletions":33,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#elif U_CPLUSPLUS_VERSION\n+#   define U_ASSERT(exp) (void)0\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uassert.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ubidi_props.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-static const UVersionInfo ubidi_props_dataVersion={0xc,1,0,0};\n+static const UVersionInfo ubidi_props_dataVersion={0xd,0,0,0};\n@@ -16,1 +16,1 @@\n-static const int32_t ubidi_props_indexes[UBIDI_IX_TOP]={0x10,0x663c,0x6058,0x28,0x620,0x8c0,0x10ac0,0x10d24,0,0,0,0,0,0,0,0x6502b6};\n+static const int32_t ubidi_props_indexes[UBIDI_IX_TOP]={0x10,0x67ec,0x6200,0x28,0x620,0x8c8,0x10ac0,0x10d24,0,0,0,0,0,0,0,0x6502b6};\n@@ -18,1 +18,1 @@\n-static const uint16_t ubidi_props_trieIndex[12324]={\n+static const uint16_t ubidi_props_trieIndex[12536]={\n@@ -23,22 +23,22 @@\n-0x4bf,0x4bb,0x4c7,0x4cf,0x431,0x4df,0x4e7,0x4d7,0x4ef,0x4f1,0x4f9,0x501,0x509,0x50a,0x512,0x51a,\n-0x522,0x50a,0x52a,0x52f,0x522,0x50a,0x537,0x53f,0x509,0x547,0x54f,0x501,0x554,0x39c,0x55c,0x560,\n-0x568,0x56a,0x572,0x57a,0x509,0x582,0x58a,0x501,0x413,0x58e,0x512,0x501,0x39c,0x39c,0x596,0x39c,\n-0x39c,0x59c,0x5a4,0x39c,0x39c,0x5a8,0x5b0,0x39c,0x5b4,0x5bb,0x39c,0x5c3,0x5cb,0x5d2,0x553,0x39c,\n-0x39c,0x5da,0x5e2,0x5ea,0x5f2,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x5fa,0x39c,0x602,0x39c,0x39c,0x39c,\n-0x60a,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0x612,0x39c,0x39c,0x39c,0x61a,0x61a,0x516,0x516,0x39c,0x620,0x628,0x602,\n-0x63e,0x630,0x630,0x646,0x64d,0x636,0x39c,0x39c,0x39c,0x655,0x65d,0x39c,0x39c,0x39c,0x65f,0x667,\n-0x66f,0x39c,0x676,0x67e,0x39c,0x686,0x39c,0x39c,0x546,0x68e,0x554,0x696,0x413,0x69e,0x39c,0x6a5,\n-0x39c,0x6aa,0x39c,0x39c,0x39c,0x39c,0x6b0,0x6b8,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x3ea,0x6c0,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x6c8,0x6d0,0x6d4,\n-0x6ec,0x6f2,0x6dc,0x6e4,0x6fa,0x702,0x706,0x5d5,0x70e,0x716,0x71e,0x39c,0x726,0x667,0x667,0x667,\n-0x736,0x73e,0x746,0x74e,0x753,0x75b,0x763,0x72e,0x76b,0x773,0x39c,0x779,0x780,0x667,0x667,0x667,\n-0x667,0x580,0x786,0x667,0x78e,0x39c,0x39c,0x664,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,\n-0x667,0x667,0x667,0x667,0x667,0x796,0x667,0x667,0x667,0x667,0x667,0x79c,0x667,0x667,0x7a4,0x7ac,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x667,0x667,0x667,0x667,0x7bc,0x7c4,0x7cc,0x7b4,\n-0x7dc,0x7e4,0x7ec,0x7f3,0x7fa,0x802,0x806,0x7d4,0x667,0x667,0x667,0x80e,0x814,0x667,0x667,0x81a,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x822,0x39c,0x39c,0x39c,0x82a,0x39c,0x39c,0x39c,0x3ea,\n-0x832,0x83a,0x66b,0x39c,0x83d,0x667,0x667,0x66a,0x667,0x667,0x667,0x667,0x667,0x667,0x844,0x84a,\n-0x85a,0x852,0x39c,0x39c,0x862,0x60a,0x39c,0x3c3,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x667,0x829,\n-0x3d1,0x39c,0x86a,0x872,0x39c,0x87a,0x882,0x39c,0x39c,0x39c,0x39c,0x886,0x39c,0x39c,0x65f,0x3c2,\n+0x4bf,0x4bb,0x4c7,0x4cf,0x431,0x4df,0x4e6,0x4d7,0x4ee,0x4f0,0x4f8,0x500,0x508,0x509,0x511,0x519,\n+0x521,0x509,0x529,0x52e,0x521,0x509,0x536,0x53e,0x508,0x546,0x54e,0x500,0x556,0x39c,0x55e,0x562,\n+0x56a,0x56c,0x574,0x57c,0x508,0x584,0x58c,0x500,0x413,0x590,0x511,0x500,0x508,0x39c,0x598,0x39c,\n+0x39c,0x59e,0x5a6,0x39c,0x39c,0x5aa,0x5b2,0x39c,0x5b6,0x5bd,0x39c,0x5c5,0x5cd,0x5d4,0x555,0x39c,\n+0x39c,0x5dc,0x5e4,0x5ec,0x5f4,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x5fc,0x39c,0x604,0x39c,0x39c,0x39c,\n+0x60c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x614,0x39c,0x39c,0x39c,0x61c,0x61c,0x515,0x515,0x39c,0x622,0x62a,0x604,\n+0x640,0x632,0x632,0x648,0x64f,0x638,0x39c,0x39c,0x39c,0x657,0x65f,0x39c,0x39c,0x39c,0x661,0x669,\n+0x671,0x39c,0x678,0x680,0x39c,0x688,0x56b,0x39c,0x545,0x690,0x556,0x698,0x413,0x6a0,0x39c,0x6a7,\n+0x39c,0x6ac,0x39c,0x39c,0x39c,0x39c,0x6b2,0x6ba,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x3ea,0x6c2,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x6ca,0x6d2,0x6d6,\n+0x6ee,0x6f4,0x6de,0x6e6,0x6fc,0x704,0x708,0x5d7,0x710,0x718,0x720,0x39c,0x728,0x669,0x669,0x669,\n+0x738,0x740,0x748,0x750,0x755,0x75d,0x765,0x730,0x76d,0x775,0x39c,0x77b,0x782,0x669,0x669,0x669,\n+0x669,0x582,0x788,0x669,0x790,0x39c,0x39c,0x666,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,\n+0x669,0x669,0x669,0x669,0x669,0x798,0x669,0x669,0x669,0x669,0x669,0x79e,0x669,0x669,0x7a6,0x7ae,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x669,0x669,0x669,0x669,0x7be,0x7c6,0x7ce,0x7b6,\n+0x7de,0x7e6,0x7ee,0x7f5,0x7fc,0x804,0x808,0x7d6,0x669,0x669,0x669,0x810,0x816,0x669,0x669,0x81c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x824,0x39c,0x39c,0x39c,0x82c,0x39c,0x39c,0x39c,0x3ea,\n+0x834,0x83c,0x840,0x39c,0x848,0x669,0x669,0x66c,0x669,0x669,0x669,0x669,0x669,0x669,0x84f,0x855,\n+0x865,0x85d,0x39c,0x39c,0x86d,0x60c,0x39c,0x3c3,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x669,0x82b,\n+0x3d1,0x39c,0x875,0x87d,0x39c,0x885,0x88d,0x39c,0x39c,0x39c,0x39c,0x891,0x39c,0x39c,0x661,0x3c2,\n@@ -57,1 +57,1 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x667,0x667,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x669,0x669,\n@@ -101,4 +101,4 @@\n-0x39c,0x39c,0x39c,0x39c,0x86a,0x667,0x580,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0x88d,0x39c,0x39c,0x892,0x56a,0x39c,0x39c,0x5b6,0x667,0x65e,0x39c,0x39c,0x89a,0x39c,0x39c,0x39c,\n-0x8a2,0x8a9,0x630,0x8b1,0x39c,0x39c,0x58c,0x8b9,0x39c,0x8c1,0x8c8,0x39c,0x4ef,0x8cd,0x39c,0x508,\n-0x39c,0x8d5,0x8dd,0x50a,0x39c,0x8e1,0x509,0x8e9,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x8f0,\n+0x39c,0x39c,0x39c,0x39c,0x875,0x669,0x582,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x898,0x39c,0x39c,0x89d,0x56c,0x39c,0x39c,0x5b8,0x669,0x660,0x39c,0x39c,0x8a5,0x39c,0x39c,0x39c,\n+0x8ad,0x8b4,0x632,0x8bc,0x39c,0x39c,0x58e,0x8c4,0x39c,0x8cc,0x8d3,0x39c,0x4ee,0x8d8,0x39c,0x507,\n+0x39c,0x8e0,0x8e8,0x509,0x39c,0x8ec,0x508,0x8f4,0x39c,0x39c,0x39c,0x8fa,0x39c,0x39c,0x39c,0x901,\n@@ -144,3 +144,3 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x904,0x8f8,0x8fc,0x49b,0x49b,0x49b,0x49b,0x49b,\n-0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x90c,0x49b,0x49b,0x49b,0x49b,0x914,0x918,\n-0x920,0x928,0x92c,0x934,0x49b,0x49b,0x49b,0x938,0x940,0x38c,0x948,0x950,0x39c,0x39c,0x39c,0x958,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x915,0x909,0x90d,0x49b,0x49b,0x49b,0x49b,0x49b,\n+0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x49b,0x91d,0x49b,0x49b,0x49b,0x49b,0x925,0x929,\n+0x931,0x939,0x93d,0x945,0x49b,0x49b,0x49b,0x949,0x951,0x38c,0x959,0x961,0x39c,0x39c,0x39c,0x969,\n@@ -183,2 +183,2 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x960,0x39c,0x667,0x667,0x968,0x60a,0x39c,0x502,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x970,0x39c,0x39c,0x39c,0x977,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x971,0x39c,0x669,0x669,0x979,0x60c,0x39c,0x501,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x981,0x39c,0x39c,0x39c,0x988,0x39c,0x39c,0x39c,0x39c,\n@@ -187,12 +187,12 @@\n-0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x97f,0x431,0x431,0x431,0x431,0x431,0x431,0x431,\n-0x987,0x98b,0x431,0x431,0x431,0x431,0x99b,0x993,0x431,0x9a3,0x431,0x431,0x9ab,0x9b1,0x431,0x431,\n-0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x9c1,0x9b9,0x431,0x431,0x431,0x431,0x431,0x431,\n-0x431,0x431,0x431,0x9c9,0x431,0x431,0x431,0x431,0x431,0x9d1,0x9d8,0x9de,0x431,0x431,0x431,0x431,\n-0x509,0x9e6,0x9ed,0x9f4,0x413,0x9f7,0x39c,0x39c,0x4ef,0x9fe,0x39c,0xa04,0x413,0xa09,0xa11,0x39c,\n-0x39c,0xa16,0x39c,0x39c,0x39c,0x39c,0x82a,0xa1e,0x413,0x58e,0x569,0xa25,0x39c,0x39c,0x39c,0x39c,\n-0x39c,0x9e6,0xa2d,0x39c,0x39c,0xa35,0xa3d,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xa41,0xa49,0x39c,\n-0x39c,0xa51,0x569,0xa59,0x39c,0xa5f,0x39c,0x39c,0x5fa,0xa67,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0xa6c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xa73,0x569,0xa7b,\n-0xa7f,0xa87,0x39c,0xa8e,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0xa95,0x39c,0x39c,0xaa3,0xa9d,0x39c,0x39c,0x39c,0xaab,0xab3,0x39c,0xab7,0x39c,0x39c,0x39c,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x590,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xac4,0xabf,0x39c,\n+0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x990,0x431,0x431,0x431,0x431,0x431,0x431,0x431,\n+0x998,0x99c,0x431,0x431,0x431,0x431,0x9ac,0x9a4,0x431,0x9b4,0x431,0x431,0x9bc,0x9c2,0x431,0x431,\n+0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x9d2,0x9ca,0x431,0x431,0x431,0x431,0x431,0x431,\n+0x431,0x431,0x431,0x9da,0x431,0x9e2,0x431,0x431,0x431,0x9e6,0x9ed,0x9f3,0x431,0x9f7,0x9ff,0x431,\n+0x508,0xa07,0xa0e,0xa15,0x413,0xa18,0x39c,0x39c,0x4ee,0xa1f,0x39c,0xa25,0x413,0xa2a,0xa32,0x39c,\n+0x39c,0xa37,0x39c,0x39c,0x39c,0x39c,0x82c,0xa3f,0x413,0x590,0x56b,0xa46,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0xa07,0xa4e,0x39c,0x39c,0xa56,0xa5e,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xa62,0xa6a,0x39c,\n+0x39c,0xa72,0x56b,0xa7a,0x39c,0xa80,0x39c,0x39c,0x5fc,0xa88,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0xa8d,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xa94,0xa9c,0x39c,0x39c,0x39c,0xa9f,0x56b,0xaa7,\n+0xaab,0xab3,0x39c,0xaba,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0xac1,0x39c,0x39c,0xacf,0xac9,0x39c,0x39c,0x39c,0xad7,0xadf,0x39c,0xae3,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x592,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xaf0,0xaeb,0x39c,\n@@ -201,3 +201,3 @@\n-0xacc,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xad3,\n-0x39c,0xad9,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0xaf8,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xaff,\n+0x39c,0xb05,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n@@ -205,1 +205,1 @@\n-0x39c,0x39c,0xa05,0x39c,0xadf,0x39c,0x39c,0xae7,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0xa26,0x39c,0xb0b,0x39c,0x39c,0xb13,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n@@ -207,1 +207,1 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x523,0xaef,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x522,0xb1b,0x39c,0x39c,\n@@ -209,2 +209,2 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xaf6,0xafe,0xb04,0x39c,0x39c,0x667,0x667,0xb0c,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x667,0x667,0xb14,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xb22,0xb2a,0xb30,0x39c,0x39c,0x669,0x669,0xb38,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x669,0x669,0x83f,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n@@ -212,3 +212,3 @@\n-0x39c,0x39c,0x39c,0xb1a,0x39c,0xb21,0x39c,0xb1d,0x39c,0xb24,0x39c,0xb2c,0xb30,0x39c,0x39c,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x3ea,0xb38,0x3ea,\n-0xb3f,0xb46,0xb4e,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0xb3a,0x39c,0xb41,0x39c,0xb3d,0x39c,0xb44,0x39c,0xb4c,0xb50,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x3ea,0xb58,0x3ea,\n+0xb5f,0xb66,0xb6e,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n@@ -216,3 +216,3 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xb56,0xb5e,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xad9,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0x39c,0x39c,0x39c,0x39c,0xb63,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xb76,0xb7e,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xb05,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0xb83,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n@@ -221,1 +221,1 @@\n-0x431,0x431,0x431,0xb6b,0x431,0xb73,0xb73,0xb7a,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,\n+0x431,0x431,0x431,0xb8b,0x431,0xb93,0xb93,0xb9a,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,\n@@ -223,8 +223,8 @@\n-0x8fc,0x49b,0x49b,0x431,0x431,0x49b,0x49b,0x9de,0x431,0x431,0x431,0x431,0x431,0x49b,0x49b,0x49b,\n-0x49b,0x49b,0x49b,0x49b,0xb82,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x667,0xb8a,0x667,\n-0x667,0x66a,0xb8f,0xb93,0x844,0xb9b,0x3be,0x39c,0xba1,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n-0x777,0x39c,0x39c,0x39c,0x39c,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,\n-0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,0x667,\n-0x667,0x667,0x667,0x844,0xba9,0x667,0x667,0x667,0x66a,0x667,0x667,0xbb1,0x66c,0xb8a,0x667,0xbb9,\n-0x667,0xbc1,0x846,0x39c,0x39c,0x796,0x667,0x667,0xbc5,0x667,0xbcd,0xbd3,0x667,0x667,0x667,0x66a,\n-0xbd8,0xbe7,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x90d,0x49b,0x49b,0x431,0x431,0x49b,0x49b,0x9f3,0x431,0x431,0x431,0x431,0x431,0x49b,0x49b,0x49b,\n+0x49b,0x49b,0x49b,0x49b,0xba2,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x431,0x669,0xbaa,0x669,\n+0x669,0x66c,0xbaf,0xbb3,0x84f,0xbbb,0x3be,0x39c,0xbc1,0x39c,0xbc6,0x39c,0x39c,0x39c,0x39c,0x39c,\n+0x779,0x39c,0x39c,0x39c,0x39c,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,\n+0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,0x669,\n+0x669,0x669,0x669,0x66b,0x979,0x669,0x669,0x669,0x66c,0x669,0x669,0xbce,0x66e,0xbaa,0x669,0xbd6,\n+0x669,0xbde,0xbe3,0x39c,0x39c,0x669,0x669,0x669,0xbeb,0x669,0x669,0x798,0x669,0x669,0x669,0x66c,\n+0xbf2,0xbfa,0xc00,0xc05,0x39c,0x669,0x669,0x669,0x669,0xc0d,0x669,0x788,0xc15,0x39c,0x39c,0x39c,\n@@ -232,1 +232,1 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xbdf,0x39c,0x39c,0x39c,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xc1c,0x39c,0x39c,0x39c,\n@@ -236,6 +236,6 @@\n-0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xbdf,0xbf7,0xbef,0xbef,\n-0xbef,0xbf8,0xbf8,0xbf8,0xbf8,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0xc00,0xbf8,0xbf8,0xbf8,\n-0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,\n-0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,\n-0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,\n-0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0xbf8,0x37b,0x37b,0x37b,\n+0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0x39c,0xc1c,0xc2c,0xc24,0xc24,\n+0xc24,0xc2d,0xc2d,0xc2d,0xc2d,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0xc35,0xc2d,0xc2d,0xc2d,\n+0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,\n+0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,\n+0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,\n+0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0x37b,0x37b,0x37b,\n@@ -326,1 +326,1 @@\n-0x81,0x41,1,1,1,0xb1,0xb1,0xb1,1,1,1,1,0x4d,0xd,0x4d,0x4d,\n+0x81,0x41,0x81,0x81,0x81,0xb1,0xb1,0xb1,1,1,1,1,0x4d,0xd,0x4d,0x4d,\n@@ -332,3 +332,3 @@\n-0x4d,0xd,0x4d,0x4d,0x4d,0x8d,0x4d,0x4d,0x4d,0x4d,0xd,0xd,0xd,0xd,0xd,0xd,\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,\n+0x4d,0xd,0x4d,0x4d,0x4d,0x8d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,\n+0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,\n@@ -336,4 +336,4 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0,\n-0xb1,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,\n-0,0xb1,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,\n-0,0,0,0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0xb1,0,0xb1,0,0,0,\n+0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0xb1,0,0,\n+0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -341,1 +341,1 @@\n-0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -343,2 +343,11 @@\n-0,0,0,0,0xb1,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,0,\n-0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0xb1,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,\n+0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,4,\n+0,0,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xb1,0xb1,0,0,0,0,0xb1,0xb1,0,0,0xb1,\n+0xb1,0xb1,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,\n+0xb1,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n@@ -346,2 +355,2 @@\n-0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,\n-0,0,0,4,0,0,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,\n+0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,\n@@ -349,8 +358,3 @@\n-0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0,0,0xb1,\n-0xb1,0,0,0xb1,0xb1,0xb1,0,0,0,0xb1,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,\n-0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,0xb1,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,\n-0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,\n+0,0,0,0,0xb1,0,0,0xb1,0,0xb1,0xb1,0xb1,0xb1,0,0,0,\n+0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0xb1,0xb1,0,\n+0,0,0,0,0,0,0,0,0,0,0xb1,0,0,0,0,0,\n@@ -358,3 +362,4 @@\n-0,0,0,0,0,0,0,0,0xb1,0,0,0xb1,0,0xb1,0xb1,0xb1,\n-0xb1,0,0,0,0,0,0,0,0,0xb1,0,0,0,0,0,0,\n-0,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0xb1,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,\n+0xa,4,0xa,0,0,0,0,0,0xb1,0,0,0,0xb1,0,0,0,\n@@ -362,1 +367,5 @@\n-0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,\n+0xb1,0,0,0,0,0,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0,0,\n+0,0,0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,\n@@ -364,2 +373,2 @@\n-0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,4,0xa,0,0,0,0,0,\n-0xb1,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0,0,0xa0,\n+0,0,0,0,0,0,0xa0,0,0,0,0,0,0xb1,0xb1,0,0,\n@@ -367,3 +376,9 @@\n-0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0,0,0,0,0xb1,0xb1,\n-0xb1,0,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0xb1,0xb1,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0xb1,0,0,0,0,0,\n+0,0,0xb1,0xb1,0xb1,0,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0,0,0,0,4,0,0,0,0,0,0,0,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,\n@@ -371,1 +386,10 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,\n+0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0xb1,0,0xb1,0,0xb1,0x310a,0xf20a,\n+0x310a,0xf20a,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,\n+0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n+0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0,0,0xb1,0xb1,0,\n@@ -373,2 +397,5 @@\n-0,0,0,0,0xb1,0,0,0xa0,0,0,0,0,0,0,0xa0,0,\n-0,0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0,0,0xb1,0xb1,\n+0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0,0,\n@@ -376,2 +403,1 @@\n-0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0xb1,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0xb1,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n@@ -379,2 +405,2 @@\n-0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,4,\n-0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,\n+0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -382,2 +408,2 @@\n-0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,\n-0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,\n+9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0x310a,0xf20a,0,0,0,\n@@ -385,1 +411,7 @@\n-0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0,0,0,0,\n+0,0,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0xb1,0,\n+0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,\n+0,0,0,4,0,0xb1,0,0,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n+0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n+0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0xb1,0x40,0,0,0,0,0,\n@@ -387,9 +419,1 @@\n-0,0xb1,0,0xb1,0,0xb1,0x310a,0xf20a,0x310a,0xf20a,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0,0xb1,0xb1,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x4a,0xa,0xa,0x2a,0xb1,0xb1,0xb1,0x12,0,\n@@ -397,5 +421,7 @@\n-0xb1,0xb1,0,0,0,0,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0,0,0xb1,0xb1,0,\n-0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n+0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0,0,0,0,0,0,0,\n+0,0xb1,0xb1,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n+0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0xb1,0xb1,0xb1,0,\n+0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0xb1,0,\n+0,0,0,0,0,0xb1,0xb1,0xb1,0,0,0,0,0xa,0,0,0,\n+0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -403,3 +429,4 @@\n-0,0,0,0,0,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0,0,0,0,0,0,0xa,0,0,0,0,0,0,0,\n+0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,0xb1,\n@@ -407,1 +434,3 @@\n-0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,\n+0xb1,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,\n+0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,\n@@ -409,2 +438,1 @@\n-0,0,0,0x310a,0xf20a,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0,0,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n@@ -412,15 +440,4 @@\n-0,0,0,0,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,\n-0,0,0,0,0,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,4,0,0xb1,0,0,\n-0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n-0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n-0x40,0xb1,0x40,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x4a,\n-0xa,0xa,0x2a,0xb1,0xb1,0xb1,0x12,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n-0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n-0x40,0,0,0,0,0,0,0,0,0xb1,0xb1,0x40,0x40,0x40,0x40,0x40,\n-0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n-0x40,0x40,0x40,0x40,0xb1,0xb1,0xb1,0,0,0,0,0xb1,0xb1,0,0,0,\n-0,0,0,0,0,0,0xb1,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n-0,0,0,0,0xa,0,0,0,0xa,0xa,0,0,0,0,0,0,\n+0,0,0,0,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0xb1,0xb1,0xb1,0,0,\n@@ -428,23 +445,7 @@\n-0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0xb1,0xb1,0,0,0xb1,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0,0xb1,0,0,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,\n-0xb1,0xb1,0,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0,0xb1,0xb1,0,0,\n-0,0xb1,0,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0xb1,0,0,\n-0,0,0,0,0xb1,0,0,0,0xb1,0xb1,0,0,0,0,0,0,\n+0,0,0xb1,0,0xb1,0xb1,0,0,0,0xb1,0,0xb1,0xb1,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0,0,0,0,0xb1,0,0,0,0,0,0,0xb1,0,0,0,\n+0xb1,0xb1,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n@@ -452,1 +453,1 @@\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,\n@@ -454,9 +455,4 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0xa,0,0xa,\n-0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0,\n-0xa,0xa,0xa,0xa,6,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,9,\n-0xb2,0xb2,0xb2,0xb2,0xb2,0x12,0x814,0x815,0x813,0x816,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,\n-2,0,0,0,2,2,2,2,2,2,3,3,0xa,0x310a,0xf20a,0,\n-9,9,9,9,9,9,9,9,9,9,9,0xb2,0x412,0x432,0x8a0,0x8a1,\n+0,0,0,0,0,0xa,0,0xa,0xa,0xa,0,0,0,0,0,0,\n+0,0,0,0,0,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xa,0xa,0,0xa,0xa,0xa,0xa,6,0x310a,0xf20a,0xa,\n@@ -464,4 +460,8 @@\n-9,7,0x8ab,0x8ae,0x8b0,0x8ac,0x8af,6,4,4,4,4,4,0xa,0xa,0xa,\n-0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,2,2,2,2,2,2,2,2,\n-2,2,3,3,0xa,0x310a,0xf20a,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,9,0xb2,0xb2,0xb2,0xb2,0xb2,0x12,0x814,0x815,\n+0x813,0x816,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,2,0,0,0,2,2,2,2,\n+2,2,3,3,0xa,0x310a,0xf20a,0,9,9,9,9,9,9,9,9,\n+9,9,9,0xb2,0x412,0x432,0x8a0,0x8a1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,9,7,0x8ab,0x8ae,0x8b0,0x8ac,0x8af,6,\n+4,4,4,4,4,0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,\n+2,2,2,2,2,2,2,2,2,2,3,3,0xa,0x310a,0xf20a,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -469,30 +469,7 @@\n-4,4,4,4,4,4,4,4,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xa,0xa,0,0xa,0xa,0xa,0xa,0,\n-0xa,0xa,0,0,0,0,0,0,0,0,0,0,0xa,0,0xa,0xa,\n-0xa,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0,0xa,0,0xa,\n-0,0xa,0,0,0,0,4,0,0,0,0,0,0,0,0,0,\n-0,0,0xa,0xa,0,0,0,0,0x100a,0xa,0xa,0xa,0xa,0,0,0,\n-0,0,0xa,0xa,0xa,0xa,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n-0,0xa,0xa,0xa,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,\n-0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0x300a,0xf00a,0x900a,0x900a,0x900a,0x100a,0x900a,0x900a,\n-0x100a,0x100a,0x900a,0x900a,0x900a,0x900a,0x900a,0x100a,0xa,0x100a,0x100a,0x100a,0x100a,0xa,0xa,0xa,\n-0x700a,0x700a,0x700a,0xb00a,0xb00a,0xb00a,0xa,0xa,0xa,0x100a,3,4,0xa,0x900a,0x100a,0xa,\n-0xa,0xa,0x100a,0x100a,0x100a,0x100a,0xa,0x900a,0x900a,0x900a,0x900a,0xa,0x900a,0xa,0x100a,0xa,\n-0xa,0xa,0xa,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0xa,0xa,0xa,0xa,\n-0xa,0x100a,0xa,0x100a,0x300a,0xf00a,0x100a,0x100a,0x100a,0x100a,0x100a,0x900a,0x100a,0x900a,0x100a,0x100a,\n-0x100a,0x100a,0x100a,0x100a,0x900a,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0x100a,0xa,0x100a,0xa,0x300a,0xf00a,0x300a,0xf00a,\n-0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,\n-0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x100a,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,\n-0xa,0xa,0xa,0xa,0x900a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,\n-0xa,0xa,0x900a,0x100a,0x900a,0x900a,0x100a,0x900a,0x100a,0x100a,0x100a,0x100a,0x300a,0xf00a,0x300a,0xf00a,\n-0x300a,0xf00a,0x300a,0xf00a,0x900a,0xa,0xa,0xa,0xa,0xa,0x100a,0x100a,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x900a,0xa,0xa,0x300a,0xf00a,0xa,0xa,\n-0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0x100a,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xa,\n+4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xa,0xa,0,0xa,0xa,0xa,0xa,0,0xa,0xa,0,0,0,0,0,0,\n+0,0,0,0,0xa,0,0xa,0xa,0xa,0,0,0,0,0,0xa,0xa,\n+0xa,0xa,0xa,0xa,0,0xa,0,0xa,0,0xa,0,0,0,0,4,0,\n+0,0,0,0,0,0,0,0,0,0,0xa,0xa,0,0,0,0,\n+0x100a,0xa,0xa,0xa,0xa,0,0,0,0,0,0xa,0xa,0xa,0xa,0,0,\n@@ -500,11 +477,1 @@\n-0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,\n-0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0x100a,0xa,0xa,0x300a,0xf00a,0x310a,0xf20a,0xa,0x300a,0xf00a,0xa,0x500a,0x100a,0xd00a,0xa,0xa,\n-0xa,0xa,0xa,0x100a,0x100a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0x900a,0x300a,0xf00a,0xa,\n-0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,\n+0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0,0,0,0,\n@@ -512,14 +479,16 @@\n-0xa,0x100a,0xa,0x100a,0x100a,0x100a,0xa,0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0x100a,0x900a,0x100a,0x100a,0x300a,0xf00a,0xa,0xa,0x310a,0xf20a,0xa,0xa,\n-0xa,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x710a,0x320a,0xf10a,\n-0xb20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0x900a,0x100a,0x100a,0x100a,0x100a,\n-0x900a,0xa,0x100a,0x900a,0x300a,0xf00a,0x100a,0x100a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x900a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0x300a,0xf00a,0x100a,0x100a,0x300a,0xf00a,0xa,0xa,0xa,0x100a,0xa,0xa,0xa,0xa,0x100a,0x300a,\n-0xf00a,0x300a,0xf00a,0xa,0x300a,0xf00a,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0x100a,0xa,0xa,0xa,\n-0xa,0xa,0x100a,0x900a,0x900a,0x900a,0x100a,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x900a,0xa,\n-0xa,0xa,0xa,0x100a,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x100a,0xa,0x100a,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,\n-0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0xa,0x100a,0x100a,\n-0x100a,0x100a,0xa,0xa,0x100a,0xa,0x100a,0xa,0xa,0x100a,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,\n-0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x100a,0xa,\n+0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,\n+0x300a,0xf00a,0x900a,0x900a,0x900a,0x100a,0x900a,0x900a,0x100a,0x100a,0x900a,0x900a,0x900a,0x900a,0x900a,0x100a,\n+0xa,0x100a,0x100a,0x100a,0x100a,0xa,0xa,0xa,0x700a,0x700a,0x700a,0xb00a,0xb00a,0xb00a,0xa,0xa,\n+0xa,0x100a,3,4,0xa,0x900a,0x100a,0xa,0xa,0xa,0x100a,0x100a,0x100a,0x100a,0xa,0x900a,\n+0x900a,0x900a,0x900a,0xa,0x900a,0xa,0x100a,0xa,0xa,0xa,0xa,0x100a,0x100a,0x100a,0x100a,0x100a,\n+0x100a,0x100a,0x100a,0x100a,0xa,0xa,0xa,0xa,0xa,0x100a,0xa,0x100a,0x300a,0xf00a,0x100a,0x100a,\n+0x100a,0x100a,0x100a,0x900a,0x100a,0x900a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x900a,0xa,0xa,0xa,\n+0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,\n+0x100a,0xa,0x100a,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0x300a,0xf00a,\n+0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,\n+0x100a,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0x900a,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,0x900a,0x100a,0x900a,0x900a,0x100a,0x900a,\n+0x100a,0x100a,0x100a,0x100a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x900a,0xa,0xa,0xa,\n+0xa,0xa,0x100a,0x100a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,\n+0xf00a,0x900a,0xa,0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,\n+0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,\n@@ -527,9 +496,10 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0x100a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0x300a,0xf00a,0xa,0xa,0xa,0xa,0x100a,0x100a,0x100a,0x100a,0xa,0x100a,0x100a,0xa,0xa,0x100a,\n-0x100a,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,\n-0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,\n-0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x100a,0xa,0xa,0x300a,0xf00a,\n-0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,\n-0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,\n-0xa,0xa,0xa,0xa,0x100a,0xa,0x900a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0xa,0xa,\n+0xa,0xa,0xa,0xa,0x100a,0x100a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x310a,0xf20a,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,\n@@ -537,1 +507,28 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0xa,0xa,0x300a,0xf00a,0x310a,0xf20a,0xa,\n+0x300a,0xf00a,0xa,0x500a,0x100a,0xd00a,0xa,0xa,0xa,0xa,0xa,0x100a,0x100a,0x300a,0xf00a,0xa,\n+0xa,0xa,0xa,0xa,0x900a,0x300a,0xf00a,0xa,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x310a,0xf20a,\n+0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0xa,0x100a,0x100a,0x100a,0xa,0xa,\n+0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,0x900a,0x100a,0x100a,\n+0x300a,0xf00a,0xa,0xa,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0x310a,\n+0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x710a,0x320a,0xf10a,0xb20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,\n+0xf20a,0xa,0xa,0x900a,0x100a,0x100a,0x100a,0x100a,0x900a,0xa,0x100a,0x900a,0x300a,0xf00a,0x100a,0x100a,\n+0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0x900a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x100a,0x100a,0x300a,0xf00a,0xa,0xa,\n+0xa,0x100a,0xa,0xa,0xa,0xa,0x100a,0x300a,0xf00a,0x300a,0xf00a,0xa,0x300a,0xf00a,0xa,0xa,\n+0x310a,0xf20a,0x310a,0xf20a,0x100a,0xa,0xa,0xa,0xa,0xa,0x100a,0x900a,0x900a,0x900a,0x100a,0xa,\n+0xa,0xa,0xa,0xa,0x300a,0xf00a,0x900a,0xa,0xa,0xa,0xa,0x100a,0xa,0xa,0xa,0x300a,\n+0xf00a,0x300a,0xf00a,0x100a,0xa,0x100a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,0x100a,\n+0x100a,0x100a,0x100a,0x100a,0x100a,0xa,0x100a,0x100a,0x100a,0x100a,0xa,0xa,0x100a,0xa,0x100a,0xa,\n+0xa,0x100a,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,\n+0xa,0xa,0xa,0xa,0x300a,0xf00a,0x100a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x100a,\n+0x100a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0x100a,0x100a,\n+0x100a,0x100a,0xa,0x100a,0x100a,0xa,0xa,0x100a,0x100a,0xa,0xa,0xa,0xa,0x300a,0xf00a,0x300a,\n+0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,\n+0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,\n+0xf00a,0x300a,0xf00a,0x100a,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0x300a,\n+0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,\n+0xf00a,0x300a,0xf00a,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0x100a,0xa,0x900a,0xa,\n@@ -539,8 +536,1 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0x900a,0xa,0,0,0,0,0,0xa,0xa,0xa,\n-0xa,0xa,0xa,0,0,0,0,0xb1,0xb1,0xb1,0,0,0,0,0,0,\n-0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,\n-0xa,0x300a,0xf00a,0xa,0x300a,0xf00a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,0x300a,0xf00a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,\n-0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n@@ -549,11 +539,3 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0,0,0,0,0xa,0,0,0,0,0,0,0,\n-0,0,0xb1,0xb1,0xb1,0xb1,0,0,0xa,0,0,0,0,0,0xa,0xa,\n-0,0,0,0,0,0xa,0xa,0xa,9,0xa,0xa,0xa,0xa,0,0,0,\n-0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,\n-0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0xb1,0xb1,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x900a,0xa,\n+0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0xb1,\n+0xb1,0xb1,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n@@ -561,5 +543,5 @@\n-0,0,0,0,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n-0,0,0,0,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xa,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,\n+0xa,0xa,0x300a,0xf00a,0x300a,0xf00a,0xa,0xa,0xa,0x300a,0xf00a,0xa,0x300a,0xf00a,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x300a,0xf00a,0xa,0xa,\n+0x300a,0xf00a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n@@ -567,3 +549,11 @@\n-0,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xa,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xa,0xa,0,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0,0,0,0,0xa,0,0,0,0,0,0,0,0,0,0xb1,0xb1,\n+0xb1,0xb1,0,0,0xa,0,0,0,0,0,0xa,0xa,0,0,0,0,\n+0,0xa,0xa,0xa,9,0xa,0xa,0xa,0xa,0,0,0,0x310a,0xf20a,0x310a,0xf20a,\n+0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xa,\n@@ -571,21 +561,12 @@\n-0,0,0,0,0,0,0,0,0,0,0xb1,0,0,0,0xb1,0,\n-0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0xa,0xa,0xa,0xa,\n-0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,\n-0,0,0,0,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n-0x40,0x40,0x40,0x40,0x40,0x40,0x60,0,0xa,0xa,0xa,0xa,0,0,0,0,\n-0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0xb1,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,0,0,\n-0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,\n-0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0xb1,0,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,\n-0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n-0xb1,0xb1,0,0,0,0,0,0,0,0,0xb1,0,0,0,0,0,\n-0,0,0,0,0,0xb1,0,0,0xb1,0,0,0,0,0xb1,0,0,\n+0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0xb1,0xb1,0xb1,0xb1,0xa,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xa,0xa,0,0,0,0,0,0,0,0,0xa,0,0,0,\n@@ -593,1 +574,24 @@\n-1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,\n+0,0,0,0,0,0,0xb1,0,0,0,0xb1,0,0,0,0,0xb1,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xb1,0xb1,0,0xa,0xa,0xa,0xa,0xb1,0,0,0,\n+0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,\n+0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,\n+0x40,0x40,0x60,0,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,\n+0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,\n+0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,\n+0,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0,0xb1,0,0,0,0,0,0,0,0,0xb1,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xb1,0,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0xb1,0xb1,\n+0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0,\n+0,0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0xb1,0,0,0xb1,0,0,0,\n+0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,1,1,1,1,1,1,1,1,1,3,1,1,\n@@ -595,1 +599,2 @@\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n+1,1,1,1,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n+0xd,0xd,0xd,0xd,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -597,3 +602,1 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,0,1,0xb1,1,\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xa,0xa,\n+0,1,0xb1,1,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n@@ -601,8 +604,10 @@\n-0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xa,0xd,0xd,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-6,0xa,6,0,0xa,6,0xa,0xa,0xa,0x310a,0xf20a,0x310a,0xf20a,0x310a,0xf20a,4,\n-0xa,0xa,3,3,0x300a,0xf00a,0xa,0,0xa,4,4,0xa,0,0,0,0,\n+0xd,0xd,0xa,0xa,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n+0xd,0xd,0xd,0xd,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n+0x12,0x12,0x12,0x12,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n+0xd,0xa,0xd,0xd,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,\n+0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,6,0xa,6,0,0xa,6,0xa,0xa,0xa,0x310a,0xf20a,0x310a,\n+0xf20a,0x310a,0xf20a,4,0xa,0xa,3,3,0x300a,0xf00a,0xa,0,0xa,4,4,0xa,\n+0,0,0,0,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n@@ -610,6 +615,5 @@\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xb2,\n-0,0xa,0xa,4,4,4,0xa,0xa,0x310a,0xf20a,0xa,3,6,3,6,6,\n-2,2,2,2,2,2,2,2,2,2,6,0xa,0x500a,0xa,0xd00a,0xa,\n-0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0x510a,0xa,0xd20a,0xa,0x310a,\n-0xf20a,0xa,0x310a,0xf20a,0xa,0xa,0,0,0,0,0,0,0,0,0,0,\n+0xd,0xd,0xd,0xb2,0,0xa,0xa,4,4,4,0xa,0xa,0x310a,0xf20a,0xa,3,\n+6,3,6,6,2,2,2,2,2,2,2,2,2,2,6,0xa,\n+0x500a,0xa,0xd00a,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x510a,\n+0xa,0xd20a,0xa,0x310a,0xf20a,0xa,0x310a,0xf20a,0xa,0xa,0,0,0,0,0,0,\n@@ -617,3 +621,3 @@\n-4,4,0xa,0xa,0xa,4,4,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,\n-0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0xaa,0xaa,0xaa,0xa,0xa,0x12,0x12,\n-0,0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,4,4,0xa,0xa,0xa,4,4,0,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0xaa,0xaa,0xaa,\n+0xa,0xa,0x12,0x12,0,0xa,0,0,0,0,0,0,0,0,0,0,\n@@ -621,4 +625,4 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,\n-0xb1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,\n+0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0,0,0,0xb1,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n@@ -626,1 +630,4 @@\n-0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,1,1,1,1,\n+0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0xa,\n+1,0xb1,0xb1,0xb1,1,0xb1,0xb1,1,1,1,1,1,0xb1,0xb1,0xb1,0xb1,\n@@ -628,2 +635,2 @@\n-1,1,1,1,1,1,1,1,1,1,1,0xa,1,0xb1,0xb1,0xb1,\n-1,0xb1,0xb1,1,1,1,1,1,0xb1,0xb1,0xb1,0xb1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0xb1,0xb1,0xb1,1,1,1,1,0xb1,\n+0x41,0x81,1,1,0x81,0xb1,0xb1,1,1,1,1,0x41,0x41,0x41,0x41,0x81,\n@@ -631,5 +638,2 @@\n-1,1,1,1,0xb1,0xb1,0xb1,1,1,1,1,0xb1,0x41,0x81,1,1,\n-0x81,0xb1,0xb1,1,1,1,1,0x41,0x41,0x41,0x41,0x81,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,0x41,0x41,0x41,0x41,\n-0x41,0x81,1,0x81,1,0x81,0x81,1,1,0x61,0x81,0x81,0x81,0x81,0x81,0x41,\n-0x41,0x41,0x41,0x61,0x41,0x41,0x41,0x41,0x41,0x81,0x41,0x41,1,1,1,1,\n+0x41,0x41,0x41,0x41,0x41,0x81,1,0x81,1,0x81,0x81,1,1,0x61,0x81,0x81,\n+0x81,0x81,0x81,0x41,0x41,0x41,0x41,0x61,0x41,0x41,0x41,0x41,0x41,0x81,0x41,0x41,\n@@ -637,7 +641,7 @@\n-1,1,1,1,1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0x41,0x81,0x41,0x81,\n-0x81,0x81,0x41,0x41,0x41,0x81,0x41,0x41,0x81,0x41,0x81,0x81,0x41,0x81,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,0x81,0x81,0x81,\n-0x81,0x41,0x41,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,0x4d,0x4d,0x8d,0x4d,0xb1,0xb1,0xb1,0xb1,0xd,0xd,0xd,0xd,\n-0xd,0xd,0xd,0xd,5,5,5,5,5,5,5,5,5,5,0xd,0xd,\n-0xd,0xd,0xd,0xd,0x6d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,\n+1,1,1,1,1,1,1,1,1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0x41,0x81,0x41,0x81,0x81,0x81,0x41,0x41,0x41,0x81,0x41,0x41,0x81,0x41,0x81,0x81,\n+0x41,0x81,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,0x81,0x81,0x81,0x81,0x41,0x41,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0x4d,0x4d,0x8d,0x4d,0xb1,0xb1,0xb1,0xb1,\n+0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,5,5,5,5,5,5,5,5,\n+5,5,0xd,0xd,0xd,0xd,0xd,0xd,0x6d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,\n@@ -645,1 +649,1 @@\n-0x4d,0x4d,0x4d,0x4d,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,5,5,5,5,5,5,5,5,\n@@ -647,6 +651,10 @@\n-5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,0x4d,0x4d,0x4d,0x8d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,\n-0x4d,0x4d,0x4d,0x4d,0x4d,0xd,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0x4d,0x4d,0x4d,0x8d,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n-0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,\n+5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,\n+1,1,1,0xb1,0xb1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,0x4d,0x4d,0x4d,0x8d,0x4d,0x4d,0x4d,0x4d,\n+0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0x4d,0xd,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0x4d,0x4d,0x4d,0x8d,0xd,0xd,0xd,0xd,0xd,0xd,0xd,\n+0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,0x41,1,0x41,0x41,\n+0x81,0x81,0x81,1,0x41,0x81,0x81,0x41,0x41,0x81,0x41,0x41,1,0x41,0x81,0x81,\n+0x41,1,1,1,1,0x81,0x41,0x61,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,\n@@ -654,6 +662,3 @@\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,\n-0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,\n-0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,\n+0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,\n+0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,\n@@ -661,3 +666,2 @@\n-0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,\n+0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0xb1,0,0,0,0,0,\n+0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n@@ -665,6 +669,10 @@\n-0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0,0xb1,0,0xb1,0xb1,\n-0,0,0,0,0,0,0xb1,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0xb1,0,0,0,0,0,\n+0,0,0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0xb1,0xb1,0xb1,0xb1,0,0,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0,\n+0xb1,0,0xb1,0xb1,0,0,0,0,0,0,0xb1,0,0,0,0,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0,0xb1,0,\n@@ -672,3 +680,3 @@\n-0,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0,\n-0,0,0,0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0xb1,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0,0xb1,0,0,0,0,0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,\n@@ -676,2 +684,2 @@\n-0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,\n-0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0,0,\n+0,0,0,0,0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,0,0,0,\n@@ -679,9 +687,12 @@\n-0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,\n-0,0xb1,0,0xb1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0xb1,0,0xb1,0,0,0xb1,0xb1,0xb1,0xb1,\n-0xb1,0xb1,0,0xb1,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,\n-0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0xb1,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0,0,0,0,0,\n+0,0,0,0,0xb1,0xb1,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0,0,0xb1,0,0xb1,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0,0xb1,0,0,\n+0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0,0,0,0,0,0,0,0,\n+0,0,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0xb1,0xb1,0xb1,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0,0xb1,0xb1,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0xb1,0xb1,0,0xb1,0,\n+0,0,0,0xb1,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -717,1 +728,1 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xb1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -728,3 +739,0 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -762,1 +770,1 @@\n-2,2,2,2,2,2,2,0xa,0xa,0,0,0,0,0,0,0,\n+2,2,2,2,2,2,2,0xa,0xa,0xa,0xa,0xa,0,0,0,0,\n@@ -764,8 +772,18 @@\n-0xa,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,\n-0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,\n-0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,\n-0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,\n-0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0xa,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0xa,0xa,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0,0,0xa,0xa,0xa,0xa,0xa,0,0,0,\n+0xa,0xa,0xa,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,\n+0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0,0,0,\n@@ -773,6 +791,3 @@\n-0xa,0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,0xa,0,0,0,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0,\n-0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n-0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0,\n-0xa,0xa,0xa,0xa,0,0,0,0,0xa,0xa,0xa,0,0,0,0,0,\n+0xa,0xa,0xa,0xa,0xa,0xa,0xa,0,0xa,0xa,0xa,0xa,0xa,0xa,0xa,0xa,\n+0xa,0xa,0xa,0xa,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,\n@@ -780,3 +795,1 @@\n-0,0,0,0,0,0,0,0,0,0,0x12,0x12,0xa,0xa,0xa,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0xa,0xa,0xa,0xa,\n-0xa,0xa,0,0,0,0,0,0,0,0,0,0,0xb2,0xb2,0xb2,0xb2,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x12,0x12,\n@@ -784,4 +797,2 @@\n-0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0x12,0xb2,0x12,0x12,\n-0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n-0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n-0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,0xb2,\n+0x12,0xb2,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n@@ -789,1 +800,3 @@\n-0,0,0,0\n+0x12,0x12,0x12,0x12,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n+0x12,0x12,0x12,0x12,0,0,0,0\n@@ -798,1 +811,1 @@\n-static const uint8_t ubidi_props_jgArray[672]={\n+static const uint8_t ubidi_props_jgArray[680]={\n@@ -840,1 +853,2 @@\n-0xb,0x55,0x1f,1,0x13,0,4,4,4,0x1f,0x2d,0x56,0x58,0x57,0,0\n+0xb,0x55,0x1f,1,0x13,0,4,4,4,0x1f,0x2d,0x56,0x58,0x57,4,4,\n+4,0xd,0xb,1,0x58,0xd,0xd,0x16\n@@ -896,1 +910,1 @@\n-    8756,\n+    8968,\n@@ -902,1 +916,1 @@\n-    0x3020,\n+    0x30f4,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ubidi_props_data.h","additions":423,"deletions":409,"binary":false,"changes":832,"status":"modified"},{"patch":"@@ -29,0 +29,8 @@\n+\/\/ ICU-20853=ICU-20935 Solaris #defines CS and ES in sys\/regset.h\n+#ifdef CS\n+#   undef CS\n+#endif\n+#ifdef ES\n+#   undef ES\n+#endif\n+\n@@ -201,2 +209,2 @@\n-#define MAKE_INDEX_ODD_PAIR(index, level) ((index)|((int32_t)(level)<<31))\n-#define ADD_ODD_BIT_FROM_LEVEL(x, level)  ((x)|=((int32_t)(level)<<31))\n+#define MAKE_INDEX_ODD_PAIR(index, level) ((index)|((int32_t)((level)&1)<<31))\n+#define ADD_ODD_BIT_FROM_LEVEL(x, level)  ((x)|=((int32_t)((level)&1)<<31))\n@@ -390,35 +398,43 @@\n-#define RETURN_IF_NULL_OR_FAILING_ERRCODE(pErrcode, retvalue)   \\\n-        if((pErrcode)==NULL || U_FAILURE(*pErrcode)) return retvalue\n-#define RETURN_IF_NOT_VALID_PARA(bidi, errcode, retvalue)   \\\n-        if(!IS_VALID_PARA(bidi)) {  \\\n-            errcode=U_INVALID_STATE_ERROR;  \\\n-            return retvalue;                \\\n-        }\n-#define RETURN_IF_NOT_VALID_PARA_OR_LINE(bidi, errcode, retvalue)   \\\n-        if(!IS_VALID_PARA_OR_LINE(bidi)) {  \\\n-            errcode=U_INVALID_STATE_ERROR;  \\\n-            return retvalue;                \\\n-        }\n-#define RETURN_IF_BAD_RANGE(arg, start, limit, errcode, retvalue)   \\\n-        if((arg)<(start) || (arg)>=(limit)) {       \\\n-            (errcode)=U_ILLEGAL_ARGUMENT_ERROR;     \\\n-            return retvalue;                        \\\n-        }\n-\n-#define RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE(pErrcode)   \\\n-        if((pErrcode)==NULL || U_FAILURE(*pErrcode)) return\n-#define RETURN_VOID_IF_NOT_VALID_PARA(bidi, errcode)   \\\n-        if(!IS_VALID_PARA(bidi)) {  \\\n-            errcode=U_INVALID_STATE_ERROR;  \\\n-            return;                \\\n-        }\n-#define RETURN_VOID_IF_NOT_VALID_PARA_OR_LINE(bidi, errcode)   \\\n-        if(!IS_VALID_PARA_OR_LINE(bidi)) {  \\\n-            errcode=U_INVALID_STATE_ERROR;  \\\n-            return;                \\\n-        }\n-#define RETURN_VOID_IF_BAD_RANGE(arg, start, limit, errcode)   \\\n-        if((arg)<(start) || (arg)>=(limit)) {       \\\n-            (errcode)=U_ILLEGAL_ARGUMENT_ERROR;     \\\n-            return;                        \\\n-        }\n+#define RETURN_IF_NULL_OR_FAILING_ERRCODE(pErrcode, retvalue) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if((pErrcode)==NULL || U_FAILURE(*pErrcode)) return retvalue; \\\n+} UPRV_BLOCK_MACRO_END\n+#define RETURN_IF_NOT_VALID_PARA(bidi, errcode, retvalue) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(!IS_VALID_PARA(bidi)) { \\\n+        errcode=U_INVALID_STATE_ERROR; \\\n+        return retvalue; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+#define RETURN_IF_NOT_VALID_PARA_OR_LINE(bidi, errcode, retvalue) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(!IS_VALID_PARA_OR_LINE(bidi)) { \\\n+        errcode=U_INVALID_STATE_ERROR; \\\n+        return retvalue; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+#define RETURN_IF_BAD_RANGE(arg, start, limit, errcode, retvalue) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if((arg)<(start) || (arg)>=(limit)) { \\\n+        (errcode)=U_ILLEGAL_ARGUMENT_ERROR; \\\n+        return retvalue; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+\n+#define RETURN_VOID_IF_NULL_OR_FAILING_ERRCODE(pErrcode) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if((pErrcode)==NULL || U_FAILURE(*pErrcode)) return; \\\n+} UPRV_BLOCK_MACRO_END\n+#define RETURN_VOID_IF_NOT_VALID_PARA(bidi, errcode) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(!IS_VALID_PARA(bidi)) { \\\n+        errcode=U_INVALID_STATE_ERROR; \\\n+        return; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+#define RETURN_VOID_IF_NOT_VALID_PARA_OR_LINE(bidi, errcode) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(!IS_VALID_PARA_OR_LINE(bidi)) { \\\n+        errcode=U_INVALID_STATE_ERROR; \\\n+        return; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+#define RETURN_VOID_IF_BAD_RANGE(arg, start, limit, errcode) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if((arg)<(start) || (arg)>=(limit)) { \\\n+        (errcode)=U_ILLEGAL_ARGUMENT_ERROR; \\\n+        return; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -446,1 +462,1 @@\n-                        TRUE, (length))\n+                        true, (length))\n@@ -450,1 +466,1 @@\n-                        TRUE, (length))\n+                        true, (length))\n@@ -454,1 +470,1 @@\n-                        TRUE, (length)*sizeof(Opening))\n+                        true, (length)*sizeof(Opening))\n@@ -458,1 +474,1 @@\n-                        TRUE, (length)*sizeof(Para))\n+                        true, (length)*sizeof(Para))\n@@ -462,1 +478,1 @@\n-                        TRUE, (length)*sizeof(Run))\n+                        true, (length)*sizeof(Run))\n@@ -466,1 +482,1 @@\n-                        TRUE, (length)*sizeof(Isolate))\n+                        true, (length)*sizeof(Isolate))\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ubidiimp.h","additions":59,"deletions":43,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -34,5 +34,5 @@\n-#define CHECK_LEN(STR, LEN, ERROR) { \\\n-        if (LEN == 0) return 0; \\\n-        if (LEN < -1) { *(ERROR) = U_ILLEGAL_ARGUMENT_ERROR; return 0; } \\\n-        if (LEN == -1) LEN = u_strlen(STR); \\\n-    }\n+#define CHECK_LEN(STR, LEN, ERROR) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if (LEN == 0) return 0; \\\n+    if (LEN < -1) { *(ERROR) = U_ILLEGAL_ARGUMENT_ERROR; return 0; } \\\n+    if (LEN == -1) LEN = u_strlen(STR); \\\n+} UPRV_BLOCK_MACRO_END\n@@ -92,1 +92,1 @@\n-U_DRAFT UBiDiTransform* U_EXPORT2\n+U_CAPI UBiDiTransform* U_EXPORT2\n@@ -105,1 +105,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -437,1 +437,1 @@\n-U_DRAFT uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ubiditransform.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -349,0 +349,7 @@\n+\/\/ Ticket 20907 - The optimizer in MSVC\/Visual Studio versions below 16.4 has trouble with this\n+\/\/ function on Windows ARM64. As a work-around, we disable optimizations for this function.\n+\/\/ This work-around could\/should be removed once the following versions of Visual Studio are no\n+\/\/ longer supported: All versions of VS2017, and versions of VS2019 below 16.4.\n+#if (defined(_MSC_VER) && (defined(_M_ARM64)) && (_MSC_VER < 1924))\n+#pragma optimize( \"\", off )\n+#endif\n@@ -641,0 +648,3 @@\n+#if (defined(_MSC_VER) && (defined(_M_ARM64)) && (_MSC_VER < 1924))\n+#pragma optimize( \"\", on )\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ubidiwrt.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-#define GET_SLOT_VALUE(excWord, idx, pExc16, value) \\\n+#define GET_SLOT_VALUE(excWord, idx, pExc16, value) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -127,1 +127,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -709,0 +710,1 @@\n+#define is_y(c) ((c)=='y' || (c)=='Y')\n@@ -806,0 +808,12 @@\n+        } else if(c=='h') {\n+            \/* hy or hye? *not* hyw *\/\n+            c=*locale++;\n+            if(is_y(c)) {\n+                c=*locale++;\n+                if(is_e(c)) {\n+                    c=*locale;\n+                }\n+                if(is_sep(c)) {\n+                    return UCASE_LOC_ARMENIAN;\n+                }\n+            }\n@@ -870,0 +884,12 @@\n+        } else if(c=='H') {\n+            \/* hy or hye? *not* hyw *\/\n+            c=*locale++;\n+            if(is_y(c)) {\n+                c=*locale++;\n+                if(is_e(c)) {\n+                    c=*locale;\n+                }\n+                if(is_sep(c)) {\n+                    return UCASE_LOC_ARMENIAN;\n+                }\n+            }\n@@ -1231,0 +1257,11 @@\n+            } else if(c==0x0587) {\n+                \/\/ See ICU-13416:\n+                \/\/ և ligature ech-yiwn\n+                \/\/ uppercases to ԵՒ=ech+yiwn by default and in Western Armenian,\n+                \/\/ but to ԵՎ=ech+vew in Eastern Armenian.\n+                if(loc==UCASE_LOC_ARMENIAN) {\n+                    *pString=upperNotTitle ? u\"ԵՎ\" : u\"Եվ\";\n+                } else {\n+                    *pString=upperNotTitle ? u\"ԵՒ\" : u\"Եւ\";\n+                }\n+                return 2;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucase.cpp","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -59,1 +59,2 @@\n-    UCASE_LOC_DUTCH\n+    UCASE_LOC_DUTCH,\n+    UCASE_LOC_ARMENIAN\n@@ -120,1 +121,1 @@\n- * @return TRUE if the string was found\n+ * @return true if the string was found\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucase.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-static const UVersionInfo ucase_props_dataVersion={0xc,1,0,0};\n+static const UVersionInfo ucase_props_dataVersion={0xd,0,0,0};\n@@ -16,1 +16,1 @@\n-static const int32_t ucase_props_indexes[UCASE_IX_TOP]={0x10,0x6fea,0x5fb8,0x687,0x172,0,0,0,0,0,0,0,0,0,0,3};\n+static const int32_t ucase_props_indexes[UCASE_IX_TOP]={0x10,0x70c2,0x6098,0x683,0x172,0,0,0,0,0,0,0,0,0,0,3};\n@@ -18,1 +18,1 @@\n-static const uint16_t ucase_props_trieIndex[12244]={\n+static const uint16_t ucase_props_trieIndex[12356]={\n@@ -23,6 +23,6 @@\n-0x507,0x50e,0x512,0x355,0x355,0x336,0x522,0x51a,0x52a,0x52c,0x534,0x53c,0x540,0x541,0x549,0x551,\n-0x559,0x541,0x561,0x566,0x559,0x541,0x56e,0x576,0x540,0x57e,0x586,0x58e,0x596,0x355,0x59e,0x355,\n-0x5a6,0x4ec,0x5ae,0x58e,0x540,0x57e,0x5b5,0x58e,0x5bd,0x5bf,0x549,0x58e,0x355,0x355,0x5c7,0x355,\n-0x355,0x5cd,0x5d4,0x355,0x355,0x5d8,0x5e0,0x355,0x5e4,0x5eb,0x355,0x5f2,0x5fa,0x601,0x609,0x355,\n-0x355,0x60e,0x616,0x61e,0x626,0x62e,0x635,0x63d,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x645,0x355,0x355,0x655,0x655,0x64d,\n+0x507,0x50e,0x512,0x355,0x355,0x355,0x519,0x521,0x529,0x52b,0x533,0x53b,0x53f,0x540,0x548,0x550,\n+0x558,0x540,0x560,0x565,0x558,0x540,0x56d,0x575,0x53f,0x57d,0x585,0x58d,0x595,0x355,0x59d,0x355,\n+0x5a5,0x4ec,0x5ad,0x58d,0x53f,0x57d,0x5b4,0x58d,0x5bc,0x5be,0x548,0x58d,0x53f,0x355,0x5c6,0x355,\n+0x355,0x5cc,0x5d3,0x355,0x355,0x5d7,0x5df,0x355,0x5e3,0x5ea,0x355,0x5f1,0x5f9,0x600,0x608,0x355,\n+0x355,0x60d,0x615,0x61d,0x625,0x62d,0x634,0x63c,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x644,0x355,0x355,0x654,0x654,0x64c,\n@@ -30,6 +30,6 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x65d,0x65d,0x54d,0x54d,0x355,0x663,0x66b,0x355,\n-0x673,0x355,0x67b,0x355,0x682,0x688,0x355,0x355,0x355,0x690,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x697,0x355,0x69e,0x6a6,0x355,0x6ae,0x355,0x355,0x57d,0x6b6,0x6be,0x6c4,0x5bd,0x6cc,0x355,0x6d3,\n-0x355,0x6d8,0x355,0x6de,0x6e6,0x6ea,0x6f2,0x6fa,0x702,0x707,0x70a,0x712,0x722,0x71a,0x732,0x72a,\n-0x37c,0x73a,0x37c,0x742,0x745,0x37c,0x74d,0x37c,0x755,0x75d,0x765,0x76d,0x775,0x77d,0x785,0x78d,\n-0x795,0x79c,0x355,0x7a4,0x7ac,0x355,0x7b4,0x7bc,0x7c4,0x7cc,0x7d4,0x7dc,0x7e4,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x65c,0x65c,0x54c,0x54c,0x355,0x662,0x66a,0x355,\n+0x672,0x355,0x67a,0x355,0x681,0x687,0x355,0x355,0x355,0x68f,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x696,0x355,0x69d,0x6a5,0x355,0x6ad,0x6b5,0x355,0x57c,0x6b8,0x6c0,0x6c6,0x5bc,0x6ce,0x355,0x6d5,\n+0x355,0x6da,0x355,0x6e0,0x6e8,0x6ec,0x6f4,0x6fc,0x704,0x709,0x70c,0x714,0x724,0x71c,0x734,0x72c,\n+0x37c,0x73c,0x37c,0x744,0x747,0x37c,0x74f,0x37c,0x757,0x75f,0x767,0x76f,0x777,0x77f,0x787,0x78f,\n+0x797,0x79e,0x355,0x7a6,0x7ae,0x355,0x7b6,0x7be,0x7c6,0x7ce,0x7d6,0x7de,0x7e6,0x355,0x355,0x355,\n@@ -37,1 +37,1 @@\n-0x355,0x355,0x355,0x355,0x355,0x7e7,0x7ed,0x7f3,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x7e9,0x7ef,0x7f5,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -41,3 +41,3 @@\n-0x7fb,0x800,0x804,0x80c,0x37c,0x37c,0x37c,0x814,0x81c,0x823,0x355,0x828,0x355,0x355,0x355,0x830,\n-0x355,0x678,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x53f,0x838,0x355,0x355,0x83f,0x355,0x355,0x847,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x7fd,0x802,0x806,0x80e,0x37c,0x37c,0x37c,0x816,0x81e,0x825,0x355,0x82a,0x355,0x355,0x355,0x832,\n+0x355,0x677,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x53e,0x83a,0x355,0x355,0x841,0x355,0x355,0x849,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -99,1 +99,1 @@\n-0x84f,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x851,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -101,4 +101,4 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x6de,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x855,0x355,0x85d,0x862,0x86a,0x355,0x355,0x872,0x87a,0x882,0x37c,0x887,0x88f,0x895,0x89d,0x89f,\n-0x8a7,0x682,0x355,0x355,0x355,0x355,0x8ae,0x8b6,0x355,0x8be,0x8c5,0x355,0x52a,0x8ca,0x8d2,0x682,\n-0x355,0x8d8,0x8e0,0x8e4,0x355,0x8ec,0x8f4,0x8fc,0x355,0x902,0x906,0x90e,0x91e,0x916,0x355,0x926,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x6e0,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x857,0x355,0x85f,0x864,0x86c,0x355,0x355,0x874,0x87c,0x884,0x37c,0x889,0x891,0x897,0x89f,0x8a2,\n+0x8aa,0x8b1,0x355,0x355,0x355,0x355,0x8b8,0x8c0,0x355,0x8c8,0x8cf,0x355,0x529,0x8d4,0x8dc,0x681,\n+0x355,0x8e2,0x8ea,0x8ee,0x355,0x8f6,0x8fe,0x906,0x355,0x90c,0x910,0x918,0x928,0x920,0x355,0x930,\n@@ -144,1 +144,1 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x92e,0x355,0x355,0x355,0x355,0x936,0x5bd,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x938,0x355,0x355,0x355,0x355,0x940,0x5bc,0x355,\n@@ -146,1 +146,1 @@\n-0x93b,0x943,0x947,0x355,0x355,0x355,0x355,0x338,0x33e,0x94f,0x957,0x95e,0x4ec,0x355,0x355,0x966,\n+0x945,0x94d,0x951,0x355,0x355,0x355,0x355,0x338,0x33e,0x959,0x961,0x968,0x4ec,0x355,0x355,0x970,\n@@ -178,2 +178,2 @@\n-0x96d,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x975,0x355,0x355,0x355,0x978,0x355,0x355,0x355,\n-0x355,0x980,0x986,0x98a,0x355,0x355,0x98e,0x992,0x998,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x977,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x6b5,0x355,0x355,0x355,0x97f,0x355,0x355,0x355,\n+0x355,0x987,0x98d,0x991,0x355,0x355,0x995,0x999,0x99f,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -181,11 +181,11 @@\n-0x355,0x9a0,0x9a4,0x355,0x355,0x355,0x355,0x355,0x9ac,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x9b4,0x9b8,0x9c0,0x9c4,0x355,0x9cb,0x355,0x355,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x9d2,0x355,0x355,0x355,0x355,\n-0x355,0x540,0x9d7,0x9de,0x5be,0x5bd,0x9e2,0x53d,0x355,0x9ea,0x9f1,0x355,0x9f7,0x5bd,0x9fc,0xa04,\n-0x355,0x355,0xa09,0x355,0x355,0x355,0x355,0x338,0xa11,0x5bd,0x5bf,0xa19,0xa20,0x355,0x355,0x355,\n-0x355,0x355,0x9d7,0xa28,0x355,0x355,0xa30,0xa38,0x355,0x355,0x355,0x355,0x355,0x355,0xa3c,0xa44,\n-0x355,0x355,0xa4c,0x4b0,0x355,0x355,0xa54,0x355,0x355,0xa5a,0xa62,0x355,0x355,0x355,0x355,0x355,\n-0x355,0xa67,0x355,0x355,0x355,0xa6f,0xa77,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xa7f,0x975,\n-0xa87,0xa8b,0xa93,0x355,0xa9a,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x355,0xaa1,0x355,0x355,0x936,0xaa9,0x355,0x355,0x355,0xaaf,0xab7,0x355,0xabb,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xac1,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x9a7,0x9ab,0x355,0x355,0x355,0x355,0x355,0x9b3,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x9bb,0x9bf,0x9c7,0x9cb,0x355,0x9d2,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x9d8,0x355,0x355,0x355,0x355,0x9df,0x355,0x355,0x355,0x355,\n+0x355,0x53f,0x9e4,0x9eb,0x5bd,0x5bc,0x9ef,0x53c,0x355,0x9f7,0x9fe,0x355,0xa04,0x5bc,0xa09,0xa11,\n+0x355,0x355,0xa16,0x355,0x355,0x355,0x355,0x338,0xa1e,0x5bc,0x5be,0xa26,0xa2d,0x355,0x355,0x355,\n+0x355,0x355,0x9e4,0xa35,0x355,0x355,0xa3d,0xa45,0x355,0x355,0x355,0x355,0x355,0x355,0xa49,0xa51,\n+0x355,0x355,0xa59,0x4b0,0x355,0x355,0xa61,0x355,0x355,0xa67,0xa6f,0x355,0x355,0x355,0x355,0x355,\n+0x355,0xa74,0x355,0x355,0x355,0xa7c,0xa84,0x355,0x355,0xa8c,0xa94,0x355,0x355,0x355,0xa97,0x6b5,\n+0xa9f,0xaa3,0xaab,0x355,0xab2,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0xab9,0x355,0x355,0x940,0xac1,0x355,0x355,0x355,0xac7,0xacf,0x355,0xad3,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xad9,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -193,1 +193,1 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xac7,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xadf,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -195,1 +195,1 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xace,0x355,0xad4,0x57d,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xae6,0x355,0xaec,0x57c,0x355,0x355,0x355,0x355,\n@@ -197,2 +197,2 @@\n-0x355,0x355,0x355,0xa6f,0xa77,0x355,0x355,0x355,0x355,0x355,0x355,0x678,0x355,0xada,0x355,0x355,\n-0xae2,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0xa7c,0xa84,0x355,0x355,0x355,0x355,0x355,0x355,0x677,0x355,0xaf2,0x355,0x355,\n+0xafa,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -200,1 +200,1 @@\n-0x355,0x355,0x355,0x355,0x355,0xae3,0x57d,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0xaff,0x57c,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -202,5 +202,5 @@\n-0x355,0xaeb,0xaf3,0xaf9,0x355,0x355,0x355,0x355,0xb01,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x355,0xb09,0xb11,0xb16,0xb1c,0xb24,0xb2c,0xb34,0xb0d,0xb3c,0xb44,\n-0xb4c,0xb53,0xb0e,0xb09,0xb11,0xb0c,0xb1c,0xb0f,0xb0a,0xb5b,0xb0d,0xb63,0xb6b,0xb73,0xb7a,0xb66,\n-0xb6e,0xb76,0xb7d,0xb69,0xb85,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x87a,0xb8d,0x87a,0xb94,0xb9b,0xba3,0x355,0x355,0x355,0x355,0x355,\n+0x355,0xb07,0xb0f,0xb15,0x355,0x355,0x355,0x355,0xb1d,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0xb25,0xb2d,0xb32,0xb38,0xb40,0xb48,0xb50,0xb29,0xb58,0xb60,\n+0xb68,0xb6f,0xb2a,0xb25,0xb2d,0xb28,0xb38,0xb2b,0xb26,0xb77,0xb29,0xb7f,0xb87,0xb8f,0xb96,0xb82,\n+0xb8a,0xb92,0xb99,0xb85,0xba1,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x87c,0xba9,0x87c,0xbb0,0xbb7,0xbbf,0x355,0x355,0x355,0x355,0x355,\n@@ -209,2 +209,2 @@\n-0x355,0x355,0x355,0x355,0x355,0xbab,0xbb3,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xbb7,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x9c9,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0xbc7,0xbcf,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xbd3,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x9d0,0x355,0x355,0x355,\n@@ -213,1 +213,1 @@\n-0x355,0x355,0x355,0x355,0x355,0xbbf,0x355,0xbc7,0xbcf,0xbd6,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0xbdb,0x355,0xbe3,0xbeb,0xbf2,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -216,3 +216,3 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xb05,\n-0xbde,0xbde,0xbe4,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n-0x355,0x355,0x355,0x355,0x355,0x9ec,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0xb21,\n+0xbfa,0xbfa,0xc00,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x9f9,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -220,2 +220,2 @@\n-0x355,0x355,0x355,0x355,0x355,0x355,0x540,0x87a,0x87a,0x87a,0x355,0x355,0x355,0x355,0x87a,0x87a,\n-0x87a,0x87a,0x87a,0x87a,0x87a,0xbec,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n+0x355,0x355,0x355,0x355,0x355,0x355,0x53f,0x87c,0x87c,0x87c,0x355,0x355,0x355,0x355,0x87c,0x87c,\n+0x87c,0x87c,0x87c,0x87c,0x87c,0xc08,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,0x355,\n@@ -307,1 +307,1 @@\n-0,4,0,0,0,0,0,0,1,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,\n+0,4,0,0,0,0,0,4,1,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,\n@@ -345,5 +345,13 @@\n-0,0x64,0x64,0x64,0,0,0,0,0x44,0x44,4,0x64,0x44,0x44,0x64,0x44,\n-0x44,0x64,0x44,0x44,0x44,0x64,0x64,0x64,0x64,0x64,0x64,0x44,0x44,0x44,0x64,0x44,\n-0x44,0x64,0x64,0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0x64,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,4,4,4,0,0,0,0,0,\n+0,0x64,0x64,0x64,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0x64,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n+0x44,0x44,0x44,0x44,0x44,0x44,4,0x64,0x44,0x44,0x64,0x44,0x44,0x64,0x44,0x44,\n+0x44,0x64,0x64,0x64,0x64,0x64,0x64,0x44,0x44,0x44,0x64,0x44,0x44,0x64,0x64,0x44,\n+0x44,0x44,0x44,0x44,4,4,4,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,4,0,0x64,0,0,0,0,4,4,4,\n+4,4,4,4,4,0,0,0,0,0x64,0,0,0,0x44,0x64,0x44,\n+0x44,4,4,4,0,0,0,0,0,0,0,0,0,0,4,4,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x64,0,0,0,\n+0,4,4,4,4,0,0,0,0,0,0,0,0,0x64,0,0,\n@@ -351,3 +359,0 @@\n-0,0,0,0,0,0,0,0,0,0,4,0,0x64,0,0,0,\n-0,4,4,4,4,4,4,4,4,0,0,0,0,0x64,0,0,\n-0,0x44,0x64,0x44,0x44,4,4,4,0,0,0,0,0,0,0,0,\n@@ -355,1 +360,2 @@\n-0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x44,0,\n+0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -357,1 +363,4 @@\n-0x64,0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,\n+0,4,4,0,0,0,0,4,4,0,0,4,4,0x64,0,0,\n+0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,4,4,0,0,0,4,0,0,0,0,0,0,\n+0,0,0,0,0,4,4,4,4,4,0,4,4,0,0,0,\n@@ -360,0 +369,2 @@\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,\n+4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -361,14 +372,3 @@\n-0,0,0x44,0,0,4,4,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,4,4,0,0,0,0,4,4,0,0,4,\n-4,0x64,0,0,0,4,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,4,4,0,0,0,4,0,0,\n-0,0,0,0,0,0,0,0,0,4,4,4,4,4,0,4,\n-4,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,4,4,4,4,4,4,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x64,0,0,4,0,4,4,4,4,0,0,0,\n-0,0,0,0,0,0x64,0,0,0,0,0,0,0,0,4,0,\n-0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,\n+0x64,0,0,4,0,4,4,4,4,0,0,0,0,0,0,0,\n+0,0x64,0,0,0,0,0,0,0,4,4,0,0,0,0,0,\n+0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,\n@@ -376,1 +376,1 @@\n-0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,\n+0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,\n@@ -378,3 +378,3 @@\n-0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,\n-0,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,\n+0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,\n+0,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,\n@@ -382,5 +382,3 @@\n-0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,4,\n-4,0,4,4,4,0x64,0,0,0,0,0,0,0,0x64,0x64,0,\n-0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,\n-4,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,4,0,0,0,0,0,4,4,4,0,4,4,\n+4,0x64,0,0,0,0,0,0,0,0x64,0x64,0,0,0,0,0,\n+0,0,0,0,0,0,4,0,0,0,0,0,4,0x64,0,0,\n@@ -388,5 +386,1 @@\n-0,0,0,0,0,0,0,0x64,0x64,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0x64,0,0,0,0,0,0,0,4,4,\n-4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,4,0,0,4,4,4,4,0x64,0x64,0x64,0,\n-0,0,0,0,0,0,4,4,0x64,0x64,0x64,0x64,4,4,4,0,\n+4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -394,2 +388,2 @@\n-0,4,0,0,4,4,4,4,0x64,0x64,0x64,4,4,0,0,0,\n-0,0,0,0,0,0,4,0,0x64,0x64,0x64,0x64,4,4,0,0,\n+0,0,0,0x64,0x64,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0x64,0,0,0,0,0,0,0,4,4,4,0,4,0,\n@@ -397,1 +391,5 @@\n-0,0,0,0,0,0,0,0,0x64,0x64,0,0,0,0,0,0,\n+0,4,0,0,4,4,4,4,0x64,0x64,0x64,0,0,0,0,0,\n+0,0,4,4,0x64,0x64,0x64,0x64,4,4,4,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,\n+4,4,4,4,0x64,0x64,0x64,4,4,0,0,0,0,0,0,0,\n+0,0,4,0,0x64,0x64,0x64,0x64,4,4,0,0,0,0,0,0,\n@@ -399,5 +397,6 @@\n-0,0x64,0,0x64,0,0x64,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0x64,0x64,4,0x64,4,4,4,\n-4,4,0x64,0x64,0x64,0x64,4,0,0x64,4,0x44,0x44,0x64,0,0x44,0x44,\n-0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,\n-0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n+0,0,0,0,0x64,0x64,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0x64,0,0x64,\n+0,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0x64,0x64,4,0x64,4,4,4,4,4,0x64,0x64,\n+0x64,0x64,4,0,0x64,4,0x44,0x44,0x64,0,0x44,0x44,0,0,0,0,\n+0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,\n@@ -405,36 +404,2 @@\n-4,0,0,0,0,0,0,0,0,0,0x64,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,4,4,4,4,0,4,4,4,4,4,0x64,\n-0,0x64,0x64,0,0,4,4,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-4,4,0,0,0,0,4,4,4,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,4,0,0,4,4,0,\n-0,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,4,0,0,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,\n-0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,\n-0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0,0x179a,0,0,0,0,\n-0,0x179a,0,0,0x17b9,0x17e9,0x1819,0x1849,0x1879,0x18a9,0x18d9,0x1909,0x1939,0x1969,0x1999,0x19c9,\n-0x19f9,0x1a29,0x1a59,0x1a89,0x1ab9,0x1ae9,0x1b19,0x1b49,0x1b79,0x1ba9,0x1bd9,0x1c09,0x1c39,0x1c69,0x1c99,0x1cc9,\n-0x1cf9,0x1d29,0x1d59,0x1d89,0x1db9,0x1de9,0x1e19,0x1e49,0x1e79,0x1ea9,0x1ed9,0x1f09,0x1f39,0x1f69,0x1f99,0,\n-4,0x1fc9,0x1ff9,0x2029,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0x44,0x44,0x44,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,\n-0x205a,0x205a,0x205a,0x205a,0x207a,0x207a,0x207a,0x207a,0x207a,0x207a,0,0,0x2099,0x20c9,0x20f9,0x2129,\n-0x2159,0x2189,0,0,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,\n-0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,0x205a,\n-0x205a,0x205a,0x205a,0x205a,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,4,4,0x64,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-4,4,0,4,4,4,4,4,4,4,0,0,0,0,0,0,\n-0,0,4,0,0,4,4,4,4,4,4,4,4,4,0x64,4,\n-0,0,0,4,0,0,0,0,0,0x44,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0x64,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-4,4,4,0,0,0,0,4,4,0,0,0,0,0,0,0,\n-0,0,4,0,0,0,0,0,0,0x64,0x44,0x64,0,0,0,0,\n+4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,\n+0,0,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,\n@@ -442,9 +407,27 @@\n-0,0,0,0x44,0x64,0,0,4,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,\n-4,4,4,4,4,4,4,0,0x64,0,4,0,0,4,4,4,\n-4,4,4,4,4,0,0,0,0,0,0,4,4,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0x44,0,0,0x64,0,0,0,0,0,0,0,4,\n-0,0,0,0,0,0,0,0,0x44,0x44,0x44,0x44,0x44,0x64,0x64,0x64,\n-0x64,0x64,0x64,0x44,0x44,0x64,4,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x64,0,4,4,\n-4,4,4,0,4,0,0,0,0,0,4,0,0x60,0,0,0,\n+0,4,4,4,4,0,4,4,4,4,4,0x64,0,0x64,0x64,0,\n+0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,\n+0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,4,0,0,4,4,0,0,0,0,0,\n+0,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,4,0,0,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,\n+0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,\n+0x175a,0x175a,0x175a,0x175a,0x175a,0x175a,0,0x175a,0,0,0,0,0,0x175a,0,0,\n+0x1779,0x17a9,0x17d9,0x1809,0x1839,0x1869,0x1899,0x18c9,0x18f9,0x1929,0x1959,0x1989,0x19b9,0x19e9,0x1a19,0x1a49,\n+0x1a79,0x1aa9,0x1ad9,0x1b09,0x1b39,0x1b69,0x1b99,0x1bc9,0x1bf9,0x1c29,0x1c59,0x1c89,0x1cb9,0x1ce9,0x1d19,0x1d49,\n+0x1d79,0x1da9,0x1dd9,0x1e09,0x1e39,0x1e69,0x1e99,0x1ec9,0x1ef9,0x1f29,0x1f59,0,4,0x1f89,0x1fb9,0x1fe9,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0x44,0x44,0x44,\n+0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,\n+0x203a,0x203a,0x203a,0x203a,0x203a,0x203a,0,0,0x2059,0x2089,0x20b9,0x20e9,0x2119,0x2149,0,0,\n+0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,\n+0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,0x201a,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,4,4,0x64,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,4,\n+4,4,4,4,4,4,0,0,0,0,0,0,0,0,4,0,\n+0,4,4,4,4,4,4,4,4,4,0x64,4,0,0,0,4,\n+0,0,0,0,0,0x44,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,\n@@ -452,3 +435,1 @@\n-0,0,0,0,0,0,0,0,0,0,0,0x44,0x64,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,4,4,4,4,0,0,4,4,0x60,0x64,4,4,0,0,\n+0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,\n@@ -456,12 +437,32 @@\n-0,0,0x64,0,4,4,0,0,0,4,0,4,4,4,0x60,0x60,\n-0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,\n-4,4,4,4,0,0,4,0x64,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-4,4,4,4,4,4,0,0,0x21b9,0x21e9,0x2219,0x2249,0x2279,0x22c9,0x2319,0x2349,\n-0x2379,0,0,0,0,0,0,0,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,\n-0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,0x23aa,\n-0x23aa,0x23aa,0x23aa,0,0,0x23aa,0x23aa,0x23aa,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x44,0x44,0x44,0,0x64,0x64,0x64,0x64,\n-0x64,0x64,0x44,0x44,0x64,0x64,0x64,0x64,0x44,0,0x64,0x64,0x64,0x64,0x64,0x64,\n-0x64,0,0,0,0,0x64,0,0,0,0,0,0,0x44,0,0,0,\n-0x44,0x44,0,0,0,0,0,0,1,1,1,1,1,1,1,1,\n+0,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,\n+0,0,0,4,4,0,0,0,0,0,0,0,0,0,4,0,\n+0,0,0,0,0,0x64,0x44,0x64,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x44,\n+0x64,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,4,0,4,4,4,4,\n+4,4,4,0,0x64,0,4,0,0,4,4,4,4,4,4,4,\n+4,0,0,0,0,0,0,4,4,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n+0x44,0,0,0x64,0,0,0,0,0,0,0,4,0,0,0,0,\n+0,0,0,0,0x44,0x44,0x44,0x44,0x44,0x64,0x64,0x64,0x64,0x64,0x64,0x44,\n+0x44,0x64,4,0x64,0x64,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x64,0,4,4,4,4,4,0,4,0,0,0,\n+0,0,4,0,0x60,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0x44,0x64,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,\n+4,4,0x60,0x64,4,4,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0x64,0,4,4,0,0,\n+0,4,0,4,4,4,0x60,0x60,0,0,0,0,0,0,0,0,\n+0,0,0,0,4,4,4,4,4,4,4,4,0,0,4,0x64,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,4,4,4,4,4,4,0,0,\n+0x2179,0x21a9,0x21d9,0x2209,0x2239,0x2289,0x22d9,0x2309,0x2339,0,0,0,0,0,0,0,\n+0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,\n+0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0x236a,0,0,0x236a,0x236a,0x236a,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x44,0x44,0x44,0,0x64,0x64,0x64,0x64,0x64,0x64,0x44,0x44,0x64,0x64,0x64,0x64,\n+0x44,0,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0,0,0,0,0x64,0,0,\n+0,0,0,0,0x44,0,0,0,0x44,0x44,0,0,0,0,0,0,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n@@ -469,1 +470,0 @@\n-1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,\n@@ -471,13 +471,12 @@\n-5,5,5,5,5,5,5,5,5,5,0x25,5,5,5,5,5,\n-5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-5,0x23c9,1,1,1,0x23e9,1,1,5,5,5,5,0x25,5,5,5,\n-0x25,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,0x2409,1,1,1,1,1,1,1,0x21,1,\n-1,1,1,5,5,5,5,5,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x64,0x64,\n-0x64,0x64,0,0x44,0x64,0x64,0x44,0x64,0x44,0x44,0x64,0x44,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x64,0x44,0x44,0x64,0x64,0x64,0x64,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0x92,0xffb1,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x242a,0x2469,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,0x25,5,5,5,5,5,5,5,5,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,5,0x2389,1,1,1,0x23a9,1,1,\n+5,5,5,5,0x25,5,5,5,0x25,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,0x23c9,1,\n+1,1,1,1,1,1,0x21,1,1,1,1,5,5,5,5,5,\n+0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n+0x44,0x44,0x44,0x44,0x44,0x44,0x64,0x64,0x64,0x64,0,0x44,0x64,0x64,0x44,0x64,\n+0x44,0x44,0x64,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x64,0x44,0x44,0x64,0x64,0x64,\n+0x64,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xffb1,0x92,0xff91,\n@@ -485,2 +484,1 @@\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x24a9,0x2529,0x25a9,0x2629,0x26a9,0x2729,\n-1,1,0x275a,1,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xffb1,\n+0x23ea,0x2429,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n@@ -488,42 +486,45 @@\n-0x92,0xff91,0x92,0xff91,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,\n-0xfc12,0xfc12,0xfc12,0xfc12,0x411,0x411,0x411,0x411,0x411,0x411,0,0,0xfc12,0xfc12,0xfc12,0xfc12,\n-0xfc12,0xfc12,0,0,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,\n-0xfc12,0xfc12,0xfc12,0xfc12,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,\n-0xfc12,0xfc12,0xfc12,0xfc12,0x411,0x411,0x411,0x411,0x411,0x411,0,0,0xfc12,0xfc12,0xfc12,0xfc12,\n-0xfc12,0xfc12,0,0,0x27a9,0x411,0x2829,0x411,0x28d9,0x411,0x2989,0x411,0,0xfc12,0,0xfc12,\n-0,0xfc12,0,0xfc12,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,\n-0xfc12,0xfc12,0xfc12,0xfc12,0x2511,0x2511,0x2b11,0x2b11,0x2b11,0x2b11,0x3211,0x3211,0x4011,0x4011,0x3811,0x3811,\n-0x3f11,0x3f11,0,0,0x2a39,0x2aa9,0x2b19,0x2b89,0x2bf9,0x2c69,0x2cd9,0x2d49,0x2dbb,0x2e2b,0x2e9b,0x2f0b,\n-0x2f7b,0x2feb,0x305b,0x30cb,0x3139,0x31a9,0x3219,0x3289,0x32f9,0x3369,0x33d9,0x3449,0x34bb,0x352b,0x359b,0x360b,\n-0x367b,0x36eb,0x375b,0x37cb,0x3839,0x38a9,0x3919,0x3989,0x39f9,0x3a69,0x3ad9,0x3b49,0x3bbb,0x3c2b,0x3c9b,0x3d0b,\n-0x3d7b,0x3deb,0x3e5b,0x3ecb,0x411,0x411,0x3f39,0x3fb9,0x4029,0,0x40a9,0x4129,0xfc12,0xfc12,0xdb12,0xdb12,\n-0x41db,4,0x4249,4,4,4,0x4299,0x4319,0x4389,0,0x4409,0x4489,0xd512,0xd512,0xd512,0xd512,\n-0x453b,4,4,4,0x411,0x411,0x45a9,0x4659,0,0,0x4729,0x47a9,0xfc12,0xfc12,0xce12,0xce12,\n-0,4,4,4,0x411,0x411,0x4859,0x4909,0x49d9,0x391,0x4a59,0x4ad9,0xfc12,0xfc12,0xc812,0xc812,\n-0xfc92,4,4,4,0,0,0x4b89,0x4c09,0x4c79,0,0x4cf9,0x4d79,0xc012,0xc012,0xc112,0xc112,\n-0x4e2b,4,4,0,0,0,0,0,0,0,0,0,0,0,0,4,\n-4,4,4,4,0,0,0,0,0,0,0,0,4,4,0,0,\n-0,0,0,0,4,0,0,4,0,0,4,4,4,4,4,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,\n-0,0x25,0,0,0,0,0,0,0,0,0,0,0,0,0,5,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0x44,0x44,0x64,0x64,0x44,0x44,0x44,0x44,0x64,0x64,0x64,0x44,0x44,4,4,4,\n-4,0x44,4,4,4,0x64,0x64,0x44,0x64,0x44,0x64,0x64,0x64,0x64,0x64,0x64,\n-0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,2,0,0,0,0,2,0,0,1,2,2,2,1,1,\n-2,2,2,1,0,2,0,0,0,2,2,2,2,2,0,0,\n-0,0,0,0,2,0,0x4e9a,0,2,0,0x4eda,0x4f1a,2,2,0,1,\n-2,2,0xe12,2,1,0,0,0,0,1,0,0,1,1,2,2,\n-0,0,0,0,0,2,1,1,0x21,0x21,0,0,0,0,0xf211,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,\n-0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,\n-0,0,0,0x92,0xff91,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,\n-0xd12,0xd12,0xd12,0xd12,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,\n-0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x1812,0x1812,0x1812,0x1812,\n+0x92,0xff91,0x2469,0x24e9,0x2569,0x25e9,0x2669,0x26e9,1,1,0x271a,1,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xffb1,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x411,0x411,0x411,0x411,\n+0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0x411,0x411,0x411,0x411,\n+0x411,0x411,0,0,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0,0,0x411,0x411,0x411,0x411,\n+0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0x411,0x411,0x411,0x411,\n+0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0x411,0x411,0x411,0x411,\n+0x411,0x411,0,0,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0,0,0x2769,0x411,0x27e9,0x411,\n+0x2899,0x411,0x2949,0x411,0,0xfc12,0,0xfc12,0,0xfc12,0,0xfc12,0x411,0x411,0x411,0x411,\n+0x411,0x411,0x411,0x411,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0xfc12,0x2511,0x2511,0x2b11,0x2b11,\n+0x2b11,0x2b11,0x3211,0x3211,0x4011,0x4011,0x3811,0x3811,0x3f11,0x3f11,0,0,0x29f9,0x2a69,0x2ad9,0x2b49,\n+0x2bb9,0x2c29,0x2c99,0x2d09,0x2d7b,0x2deb,0x2e5b,0x2ecb,0x2f3b,0x2fab,0x301b,0x308b,0x30f9,0x3169,0x31d9,0x3249,\n+0x32b9,0x3329,0x3399,0x3409,0x347b,0x34eb,0x355b,0x35cb,0x363b,0x36ab,0x371b,0x378b,0x37f9,0x3869,0x38d9,0x3949,\n+0x39b9,0x3a29,0x3a99,0x3b09,0x3b7b,0x3beb,0x3c5b,0x3ccb,0x3d3b,0x3dab,0x3e1b,0x3e8b,0x411,0x411,0x3ef9,0x3f79,\n+0x3fe9,0,0x4069,0x40e9,0xfc12,0xfc12,0xdb12,0xdb12,0x419b,4,0x4209,4,4,4,0x4259,0x42d9,\n+0x4349,0,0x43c9,0x4449,0xd512,0xd512,0xd512,0xd512,0x44fb,4,4,4,0x411,0x411,0x4569,0x4619,\n+0,0,0x46e9,0x4769,0xfc12,0xfc12,0xce12,0xce12,0,4,4,4,0x411,0x411,0x4819,0x48c9,\n+0x4999,0x391,0x4a19,0x4a99,0xfc12,0xfc12,0xc812,0xc812,0xfc92,4,4,4,0,0,0x4b49,0x4bc9,\n+0x4c39,0,0x4cb9,0x4d39,0xc012,0xc012,0xc112,0xc112,0x4deb,4,4,0,0,0,0,0,\n+0,0,0,0,0,0,0,4,4,4,4,4,0,0,0,0,\n+0,0,0,0,4,4,0,0,0,0,0,0,4,0,0,4,\n+0,0,4,4,4,4,4,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,4,4,4,4,4,0,4,4,\n+4,4,4,4,4,4,4,4,0,0x25,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x44,0x44,0x64,0x64,0x44,0x44,0x44,0x44,\n+0x64,0x64,0x64,0x44,0x44,4,4,4,4,0x44,4,4,4,0x64,0x64,0x44,\n+0x64,0x44,0x64,0x64,0x64,0x64,0x64,0x64,0x44,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,\n+0,0,1,2,2,2,1,1,2,2,2,1,0,2,0,0,\n+0,2,2,2,2,2,0,0,0,0,0,0,2,0,0x4e5a,0,\n+2,0,0x4e9a,0x4eda,2,2,0,1,2,2,0xe12,2,1,0,0,0,\n+0,1,0,0,1,1,2,2,0,0,0,0,0,2,1,1,\n+0x21,0x21,0,0,0,0,0xf211,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,\n+0x812,0x812,0x812,0x812,0x812,0x812,0x812,0x812,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,\n+0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0xf811,0,0,0,0x92,0xff91,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,\n+0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xd12,0xf311,0xf311,0xf311,0xf311,\n+0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0xf311,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,\n@@ -531,1 +532,1 @@\n-0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0,\n+0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,\n@@ -533,11 +534,10 @@\n-0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0,\n-0x92,0xff91,0x4f5a,0x4f7a,0x4f9a,0x4fb9,0x4fd9,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x4ffa,0x501a,0x503a,\n-0x505a,1,0x92,0xff91,1,0x92,0xff91,1,1,1,1,1,0x25,5,0x507a,0x507a,\n-0x92,0xff91,0x92,0xff91,1,0,0,0,0,0,0,0x92,0xff91,0x92,0xff91,0x44,\n-0x44,0x44,0x92,0xff91,0,0,0,0,0,0,0,0,0,0,0,0,\n-0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,\n-0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,0x5099,\n-0x5099,0x5099,0,0x5099,0,0,0,0,0,0x5099,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x64,\n-0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n+0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0xe811,0,0x92,0xff91,0x4f1a,0x4f3a,0x4f5a,0x4f79,0x4f99,0x92,\n+0xff91,0x92,0xff91,0x92,0xff91,0x4fba,0x4fda,0x4ffa,0x501a,1,0x92,0xff91,1,0x92,0xff91,1,\n+1,1,1,1,0x25,5,0x503a,0x503a,0x92,0xff91,0x92,0xff91,1,0,0,0,\n+0,0,0,0x92,0xff91,0x92,0xff91,0x44,0x44,0x44,0x92,0xff91,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,\n+0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,\n+0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0x5059,0,0x5059,0,0,0,0,\n+0,0x5059,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0x64,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n@@ -545,2 +545,15 @@\n-0,0,0,0,0,0,0,0,0,0,0x64,0x64,0x64,0x64,0x60,0x60,\n-0,4,4,4,4,4,0,0,0,0,0,4,0,0,0,0,\n+0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,0,0,0,\n+0,0,0x64,0x64,0x64,0x64,0x60,0x60,0,4,4,4,4,4,0,0,\n+0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0x64,0x64,4,\n+4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x507a,0x50b9,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0,0x44,\n+4,4,4,0,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0,4,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,5,5,0x44,0x44,\n@@ -548,1 +561,17 @@\n-0,0,0,0,0,0x64,0x64,4,4,4,4,0,0,0,0,0,\n+0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n+4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n+4,4,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+1,1,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,5,1,1,1,1,1,1,1,1,0x92,0xff91,0x92,\n+0xff91,0x50fa,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,4,4,4,0x92,\n+0xff91,0x511a,1,0,0x92,0xff91,0x92,0xff91,0x1811,1,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x513a,0x515a,0x517a,0x519a,0x513a,1,0x51ba,0x51da,0x51fa,0x521a,\n+0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0,0,0x92,0xff91,\n+0xe812,0x523a,0x525a,0x92,0xff91,0x92,0xff91,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0x92,0xff91,0,\n+5,5,1,0,0,0,0,0,0,0,4,0,0,0,0x64,0,\n+0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,\n+0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x64,4,0,0,0,0,0,0,0,0,0,0,\n@@ -550,1 +579,3 @@\n-0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,0,\n+0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n+0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n+0,0,0,0,0,0,4,4,4,4,4,0x64,0x64,0x64,0,0,\n@@ -552,36 +583,1 @@\n-0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x50ba,0x50f9,\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0,0x44,4,4,4,0,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0x44,0x44,0,4,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,5,5,0x44,0x44,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x44,0x44,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,\n-4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n-4,4,4,4,4,4,4,4,4,4,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,1,1,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,5,1,1,1,\n-1,1,1,1,1,0x92,0xff91,0x92,0xff91,0x513a,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,4,4,4,0x92,0xff91,0x515a,1,0,0x92,0xff91,0x92,0xff91,\n-0x1811,1,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x517a,0x519a,\n-0x51ba,0x51da,0x517a,1,0x51fa,0x521a,0x523a,0x525a,0x92,0xff91,0x92,0xff91,0x92,0xff91,0x92,0xff91,\n-0x92,0xff91,0x92,0xff91,0,0,0x92,0xff91,0xe812,0x527a,0x529a,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,5,5,1,0,0,0,0,0,0,0,4,0,\n-0,0,0x64,0,0,0,0,4,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x64,4,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,4,0,0,0,0,0,0,4,4,\n-4,4,4,0x64,0x64,0x64,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,\n-4,4,4,4,4,4,0,0x60,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0x64,0,0,4,4,\n-4,4,0,0,4,4,0,0,0x60,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,0,\n-0,4,4,0,0,4,4,0,0,0,0,0,0,0,0,0,\n-0,0,0,4,0,0,0,0,0,0,0,0,4,0,0,0,\n+0,0,0,4,4,4,4,4,4,4,4,4,4,4,0,0x60,\n@@ -589,1 +585,2 @@\n-4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,\n+0,0,0,0x64,0,0,4,4,4,4,0,0,4,4,0,0,\n+0x60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n@@ -591,29 +588,1 @@\n-0x44,0,0x44,0x44,0x64,0,0,0x44,0x44,0,0,0,0,0,0x44,0x44,\n-0,0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,\n-0,0,0,4,4,0,0x64,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,0x52b9,1,1,1,1,\n-1,1,1,4,5,5,5,5,1,1,1,1,1,1,1,1,\n-0,0,0,0,0,0,0,0,0x52d9,0x5309,0x5339,0x5369,0x5399,0x53c9,0x53f9,0x5429,\n-0x5459,0x5489,0x54b9,0x54e9,0x5519,0x5549,0x5579,0x55a9,0x5bd9,0x5c09,0x5c39,0x5c69,0x5c99,0x5cc9,0x5cf9,0x5d29,\n-0x5d59,0x5d89,0x5db9,0x5de9,0x5e19,0x5e49,0x5e79,0x5ea9,0x5ed9,0x5f09,0x5f39,0x5f69,0x5f99,0x5fc9,0x5ff9,0x6029,\n-0x6059,0x6089,0x60b9,0x60e9,0x6119,0x6149,0x6179,0x61a9,0x55d9,0x5609,0x5639,0x5669,0x5699,0x56c9,0x56f9,0x5729,\n-0x5759,0x5789,0x57b9,0x57e9,0x5819,0x5849,0x5879,0x58a9,0x58d9,0x5909,0x5939,0x5969,0x5999,0x59c9,0x59f9,0x5a29,\n-0x5a59,0x5a89,0x5ab9,0x5ae9,0x5b19,0x5b49,0x5b79,0x5ba9,0,0,0,0,0,4,0,0,\n-4,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x61d9,0x6259,0x62d9,0x6359,0x6409,0x64b9,0x6559,0,\n-0,0,0,0,0,0,0,0,0,0,0,0x65f9,0x6679,0x66f9,0x6779,0x67f9,\n-0,0,0,0,0,0,0x64,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,\n-4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,4,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x44,0x44,0x44,0x44,\n-0x44,0x44,0x44,0x64,0x64,0x64,0x64,0x64,0x64,0x64,0x44,0x44,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,\n-0,4,0,0,0,0,0,0,0,0,0,0,0,0x1012,0x1012,0x1012,\n-0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,\n-0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0,0,0,4,0,4,0xf011,0xf011,0xf011,\n-0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,\n-0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,\n+0,4,4,4,4,4,4,0,0,4,4,0,0,4,4,0,\n@@ -621,0 +590,8 @@\n+0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,\n+0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x44,0,0x44,0x44,0x64,0,0,0x44,\n+0x44,0,0,0,0,0,0x44,0x44,0,0x44,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,4,4,0,0,0,0,0,4,4,0,0x64,0,\n@@ -622,1 +599,22 @@\n-0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,0x5279,1,1,1,1,1,1,1,4,5,5,5,5,\n+1,1,1,1,1,1,1,1,1,4,4,4,0,0,0,0,\n+0x5299,0x52c9,0x52f9,0x5329,0x5359,0x5389,0x53b9,0x53e9,0x5419,0x5449,0x5479,0x54a9,0x54d9,0x5509,0x5539,0x5569,\n+0x5b99,0x5bc9,0x5bf9,0x5c29,0x5c59,0x5c89,0x5cb9,0x5ce9,0x5d19,0x5d49,0x5d79,0x5da9,0x5dd9,0x5e09,0x5e39,0x5e69,\n+0x5e99,0x5ec9,0x5ef9,0x5f29,0x5f59,0x5f89,0x5fb9,0x5fe9,0x6019,0x6049,0x6079,0x60a9,0x60d9,0x6109,0x6139,0x6169,\n+0x5599,0x55c9,0x55f9,0x5629,0x5659,0x5689,0x56b9,0x56e9,0x5719,0x5749,0x5779,0x57a9,0x57d9,0x5809,0x5839,0x5869,\n+0x5899,0x58c9,0x58f9,0x5929,0x5959,0x5989,0x59b9,0x59e9,0x5a19,0x5a49,0x5a79,0x5aa9,0x5ad9,0x5b09,0x5b39,0x5b69,\n+0,0,0,0,0,4,0,0,4,0,0,0,0,0x64,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x6199,0x6219,0x6299,0x6319,0x63c9,0x6479,0x6519,0,0,0,0,0,0,0,0,0,\n+0,0,0,0x65b9,0x6639,0x66b9,0x6739,0x67b9,0,0,0,0,0,0,0x64,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n+4,4,4,4,0,0,0,4,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x64,0x64,0x64,0x64,0x64,\n+0x64,0x64,0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,0,\n+0,0,0,0,0,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,\n+0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0,\n+0,0,4,0,4,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,\n+0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0,\n@@ -624,1 +622,3 @@\n-0,0x64,0,0,0x64,0,0,0,0,0,0,0,0,0,0,0,\n+4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,4,4,4,0,0,0,0,\n@@ -626,2 +626,3 @@\n-0,0,0,0,0,0,0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,\n-0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,\n+0,0,0,0,0,0,0,0,0,0x64,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,0x1412,0x1412,0x1412,0x1412,\n@@ -629,0 +630,1 @@\n+0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0xec11,0xec11,0xec11,0xec11,\n@@ -630,3 +632,3 @@\n-0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,\n-0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0,0,0,0,\n+0xec11,0xec11,0xec11,0xec11,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,\n+0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0x1412,0,0,0,0,0xec11,0xec11,0xec11,0xec11,\n@@ -634,5 +636,2 @@\n-0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0,0,0,0,\n-0,4,4,4,0,4,4,0,0,0,0,0,4,0x64,4,0x44,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x44,0x64,0x64,0,0,0,0,0x64,\n-0,0,0,0,0,0x44,0x64,0,0,0,0,0,0,0,0,0,\n+0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0xec11,0,0,0,0,0,4,4,4,\n+0,4,4,0,0,0,0,0,4,0x64,4,0x44,0,0,0,0,\n@@ -640,0 +639,3 @@\n+0,0,0,0,0x44,0x64,0x64,0,0,0,0,0x64,0,0,0,0,\n+0,0x44,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x2012,0x2012,0x2012,0x2012,\n@@ -641,3 +643,2 @@\n-0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,\n-0x2012,0x2012,0x2012,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,\n+0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0x2012,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0xe011,0xe011,0xe011,0xe011,\n@@ -645,6 +646,2 @@\n-0xe011,0xe011,0xe011,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0x44,0x44,0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x64,0x64,\n-0x44,0x44,0x44,0x64,0x44,0x64,0x64,0x64,0x64,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,4,4,4,4,4,4,4,4,4,4,0x64,0,\n+0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0xe011,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x44,0x44,0x44,0x44,\n@@ -652,2 +649,1 @@\n-0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,\n-0,0x64,0x64,0,0,4,0,0,0x44,0x44,0x44,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0x44,0x44,0,0,0,\n@@ -655,3 +651,1 @@\n-0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,\n-0,4,4,4,4,4,4,0x64,0x64,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x64,\n+0,0,0x64,0x64,0x44,0x44,0x44,0x64,0x44,0x64,0x64,0x64,0x64,0,0,0,\n@@ -659,2 +653,4 @@\n-0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,0,\n-0x60,0,0,0,0,0,0,0,0,4,0x64,4,4,0,0,0,\n+0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,\n+4,4,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n+4,4,4,0,0,0x64,0x64,0,0,4,0,0,0x44,0x44,0x44,0,\n@@ -662,2 +658,2 @@\n-0,0,0,4,4,4,0,0,4,0x60,0x64,4,0,0,0,0,\n-0,0,4,0,0,0,0,4,4,4,4,4,4,0x64,0x64,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n+4,4,4,4,0,4,4,4,4,4,4,0x64,0x64,0,0,0,\n@@ -665,6 +661,12 @@\n-0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,\n-0,0x60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0,0,0,\n-0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0x64,4,4,0,0x64,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x44,0,\n+0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,\n+4,4,4,0,0x60,0,0,0,0,0,0,0,0,4,0x64,4,\n+4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,4,4,4,0,0,4,0x60,0x64,4,\n+0,0,0,0,0,0,4,0,0,0,0,4,4,4,4,4,\n+4,0x64,0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,\n+0,0,0,0,0,0x60,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0x44,0x44,0x44,0x44,0x44,0x44,\n+0x44,0,0,0,0x44,0x44,0x44,0x44,0x44,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0x64,4,4,0,0x64,0,0,0,0,0,\n@@ -672,2 +674,3 @@\n-0,0,0,4,4,4,4,4,4,0,4,0,0,0,0,4,\n-4,0,0x64,0x64,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0x44,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,4,4,4,4,4,4,0,4,0,\n+0,0,0,4,4,0,0x64,0x64,0,0,0,0,0,0,0,0,\n@@ -675,3 +678,2 @@\n-0,0,4,4,4,4,0,0,0,0,0,0,4,4,0,0x64,\n-0x64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,\n+0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,\n+4,4,0,0x64,0x64,0,0,0,0,0,0,0,0,0,0,0,\n@@ -679,3 +681,4 @@\n-0,0,0,4,4,4,4,4,4,4,4,0,0,4,0,0x64,\n-0,0,0,0,0,0,0,0,0,0,0,4,0,4,0,0,\n-4,4,4,4,4,4,0x60,0x64,0,0,0,0,0,0,0,0,\n+4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,0,\n+0,4,0,0x64,0,0,0,0,0,0,0,0,0,0,0,4,\n+0,4,0,0,4,4,4,4,4,4,0x60,0x64,0,0,0,0,\n@@ -683,4 +686,5 @@\n-0,0,0,0,0,4,4,4,0,0,4,4,4,4,0,4,\n-4,4,4,0x64,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,\n-4,4,4,4,0,0x64,0x64,0,0,0,0,0,0x1012,0x1012,0x1012,0x1012,\n+0,0,0,0,0,0,0,0,0,4,4,4,0,0,4,4,\n+4,4,0,4,4,4,4,0x64,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,\n+4,4,4,4,4,4,4,4,0,0x64,0x64,0,0,0,0,0,\n+0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,\n@@ -688,1 +692,0 @@\n-0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0x1012,0xf011,0xf011,0xf011,0xf011,\n@@ -690,1 +693,4 @@\n-0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0,0,0,0,\n+0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,0xf011,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,4,4,0x60,0x64,0,\n+0,0,0,0x64,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -715,1 +721,2 @@\n-4,4,4,4,4,4,4,4,4,4,0,4,0,0,0,0,\n+4,4,4,4,4,4,4,4,4,4,0,4,4,0,0,0,\n+0,0,0,0,0,0,0,0,0x60,0x60,0,0,0,0,0,0,\n@@ -787,1 +794,1 @@\n-static const uint16_t ucase_props_exceptions[1671]={\n+static const uint16_t ucase_props_exceptions[1667]={\n@@ -811,82 +818,82 @@\n-0x1c87,0x880,0x2220,0x565,0x582,0x535,0x552,0x535,0x582,0x810,0x1c60,0x80c,0x1c90,0x10d0,0x80c,0x1c91,\n-0x10d1,0x80c,0x1c92,0x10d2,0x80c,0x1c93,0x10d3,0x80c,0x1c94,0x10d4,0x80c,0x1c95,0x10d5,0x80c,0x1c96,0x10d6,\n-0x80c,0x1c97,0x10d7,0x80c,0x1c98,0x10d8,0x80c,0x1c99,0x10d9,0x80c,0x1c9a,0x10da,0x80c,0x1c9b,0x10db,0x80c,\n-0x1c9c,0x10dc,0x80c,0x1c9d,0x10dd,0x80c,0x1c9e,0x10de,0x80c,0x1c9f,0x10df,0x80c,0x1ca0,0x10e0,0x80c,0x1ca1,\n-0x10e1,0x80c,0x1ca2,0x10e2,0x80c,0x1ca3,0x10e3,0x80c,0x1ca4,0x10e4,0x80c,0x1ca5,0x10e5,0x80c,0x1ca6,0x10e6,\n-0x80c,0x1ca7,0x10e7,0x80c,0x1ca8,0x10e8,0x80c,0x1ca9,0x10e9,0x80c,0x1caa,0x10ea,0x80c,0x1cab,0x10eb,0x80c,\n-0x1cac,0x10ec,0x80c,0x1cad,0x10ed,0x80c,0x1cae,0x10ee,0x80c,0x1caf,0x10ef,0x80c,0x1cb0,0x10f0,0x80c,0x1cb1,\n-0x10f1,0x80c,0x1cb2,0x10f2,0x80c,0x1cb3,0x10f3,0x80c,0x1cb4,0x10f4,0x80c,0x1cb5,0x10f5,0x80c,0x1cb6,0x10f6,\n-0x80c,0x1cb7,0x10f7,0x80c,0x1cb8,0x10f8,0x80c,0x1cb9,0x10f9,0x80c,0x1cba,0x10fa,0x80c,0x1cbd,0x10fd,0x80c,\n-0x1cbe,0x10fe,0x80c,0x1cbf,0x10ff,0xa10,0x97d0,0xa10,8,0x806,0x13f0,0x13f0,0x806,0x13f1,0x13f1,0x806,\n-0x13f2,0x13f2,0x806,0x13f3,0x13f3,0x806,0x13f4,0x13f4,0x806,0x13f5,0x13f5,0x806,0x432,0x412,0x806,0x434,\n-0x414,0x806,0x43e,0x41e,0x806,0x441,0x421,0x846,0x442,0x422,1,0x1c85,0x846,0x442,0x422,1,\n-0x1c84,0x806,0x44a,0x42a,0x806,0x463,0x462,0x806,0xa64b,0xa64a,0xc10,0xbc0,0x810,0x8a04,0x810,0xee6,\n-0x810,0x8a38,0x841,0x1e61,1,0x1e9b,0x844,0x1e60,1,0x1e9b,0x880,0x2220,0x68,0x331,0x48,0x331,\n-0x48,0x331,0x880,0x2220,0x74,0x308,0x54,0x308,0x54,0x308,0x880,0x2220,0x77,0x30a,0x57,0x30a,\n-0x57,0x30a,0x880,0x2220,0x79,0x30a,0x59,0x30a,0x59,0x30a,0x880,0x2220,0x61,0x2be,0x41,0x2be,\n-0x41,0x2be,0x806,0x1e61,0x1e60,0xc90,0x1dbf,0x20,0x73,0x73,0x880,0x2220,0x3c5,0x313,0x3a5,0x313,\n-0x3a5,0x313,0x880,0x3330,0x3c5,0x313,0x300,0x3a5,0x313,0x300,0x3a5,0x313,0x300,0x880,0x3330,0x3c5,\n-0x313,0x301,0x3a5,0x313,0x301,0x3a5,0x313,0x301,0x880,0x3330,0x3c5,0x313,0x342,0x3a5,0x313,0x342,\n-0x3a5,0x313,0x342,0x890,8,0x220,0x1f00,0x3b9,0x1f08,0x399,0x890,8,0x220,0x1f01,0x3b9,0x1f09,\n-0x399,0x890,8,0x220,0x1f02,0x3b9,0x1f0a,0x399,0x890,8,0x220,0x1f03,0x3b9,0x1f0b,0x399,0x890,\n-8,0x220,0x1f04,0x3b9,0x1f0c,0x399,0x890,8,0x220,0x1f05,0x3b9,0x1f0d,0x399,0x890,8,0x220,\n-0x1f06,0x3b9,0x1f0e,0x399,0x890,8,0x220,0x1f07,0x3b9,0x1f0f,0x399,0xc90,8,0x220,0x1f00,0x3b9,\n-0x1f08,0x399,0xc90,8,0x220,0x1f01,0x3b9,0x1f09,0x399,0xc90,8,0x220,0x1f02,0x3b9,0x1f0a,0x399,\n-0xc90,8,0x220,0x1f03,0x3b9,0x1f0b,0x399,0xc90,8,0x220,0x1f04,0x3b9,0x1f0c,0x399,0xc90,8,\n-0x220,0x1f05,0x3b9,0x1f0d,0x399,0xc90,8,0x220,0x1f06,0x3b9,0x1f0e,0x399,0xc90,8,0x220,0x1f07,\n-0x3b9,0x1f0f,0x399,0x890,8,0x220,0x1f20,0x3b9,0x1f28,0x399,0x890,8,0x220,0x1f21,0x3b9,0x1f29,\n-0x399,0x890,8,0x220,0x1f22,0x3b9,0x1f2a,0x399,0x890,8,0x220,0x1f23,0x3b9,0x1f2b,0x399,0x890,\n-8,0x220,0x1f24,0x3b9,0x1f2c,0x399,0x890,8,0x220,0x1f25,0x3b9,0x1f2d,0x399,0x890,8,0x220,\n-0x1f26,0x3b9,0x1f2e,0x399,0x890,8,0x220,0x1f27,0x3b9,0x1f2f,0x399,0xc90,8,0x220,0x1f20,0x3b9,\n-0x1f28,0x399,0xc90,8,0x220,0x1f21,0x3b9,0x1f29,0x399,0xc90,8,0x220,0x1f22,0x3b9,0x1f2a,0x399,\n-0xc90,8,0x220,0x1f23,0x3b9,0x1f2b,0x399,0xc90,8,0x220,0x1f24,0x3b9,0x1f2c,0x399,0xc90,8,\n-0x220,0x1f25,0x3b9,0x1f2d,0x399,0xc90,8,0x220,0x1f26,0x3b9,0x1f2e,0x399,0xc90,8,0x220,0x1f27,\n-0x3b9,0x1f2f,0x399,0x890,8,0x220,0x1f60,0x3b9,0x1f68,0x399,0x890,8,0x220,0x1f61,0x3b9,0x1f69,\n-0x399,0x890,8,0x220,0x1f62,0x3b9,0x1f6a,0x399,0x890,8,0x220,0x1f63,0x3b9,0x1f6b,0x399,0x890,\n-8,0x220,0x1f64,0x3b9,0x1f6c,0x399,0x890,8,0x220,0x1f65,0x3b9,0x1f6d,0x399,0x890,8,0x220,\n-0x1f66,0x3b9,0x1f6e,0x399,0x890,8,0x220,0x1f67,0x3b9,0x1f6f,0x399,0xc90,8,0x220,0x1f60,0x3b9,\n-0x1f68,0x399,0xc90,8,0x220,0x1f61,0x3b9,0x1f69,0x399,0xc90,8,0x220,0x1f62,0x3b9,0x1f6a,0x399,\n-0xc90,8,0x220,0x1f63,0x3b9,0x1f6b,0x399,0xc90,8,0x220,0x1f64,0x3b9,0x1f6c,0x399,0xc90,8,\n-0x220,0x1f65,0x3b9,0x1f6d,0x399,0xc90,8,0x220,0x1f66,0x3b9,0x1f6e,0x399,0xc90,8,0x220,0x1f67,\n-0x3b9,0x1f6f,0x399,0x880,0x2220,0x1f70,0x3b9,0x1fba,0x399,0x1fba,0x345,0x890,9,0x220,0x3b1,0x3b9,\n-0x391,0x399,0x880,0x2220,0x3ac,0x3b9,0x386,0x399,0x386,0x345,0x880,0x2220,0x3b1,0x342,0x391,0x342,\n-0x391,0x342,0x880,0x3330,0x3b1,0x342,0x3b9,0x391,0x342,0x399,0x391,0x342,0x345,0xc90,9,0x220,\n-0x3b1,0x3b9,0x391,0x399,0x846,0x3b9,0x399,1,0x345,0x880,0x2220,0x1f74,0x3b9,0x1fca,0x399,0x1fca,\n-0x345,0x890,9,0x220,0x3b7,0x3b9,0x397,0x399,0x880,0x2220,0x3ae,0x3b9,0x389,0x399,0x389,0x345,\n-0x880,0x2220,0x3b7,0x342,0x397,0x342,0x397,0x342,0x880,0x3330,0x3b7,0x342,0x3b9,0x397,0x342,0x399,\n-0x397,0x342,0x345,0xc90,9,0x220,0x3b7,0x3b9,0x397,0x399,0x880,0x3330,0x3b9,0x308,0x300,0x399,\n-0x308,0x300,0x399,0x308,0x300,0x8c0,1,0x3330,0x3b9,0x308,0x301,0x399,0x308,0x301,0x399,0x308,\n-0x301,0x390,0x880,0x2220,0x3b9,0x342,0x399,0x342,0x399,0x342,0x880,0x3330,0x3b9,0x308,0x342,0x399,\n-0x308,0x342,0x399,0x308,0x342,0x880,0x3330,0x3c5,0x308,0x300,0x3a5,0x308,0x300,0x3a5,0x308,0x300,\n-0x8c0,1,0x3330,0x3c5,0x308,0x301,0x3a5,0x308,0x301,0x3a5,0x308,0x301,0x3b0,0x880,0x2220,0x3c1,\n-0x313,0x3a1,0x313,0x3a1,0x313,0x880,0x2220,0x3c5,0x342,0x3a5,0x342,0x3a5,0x342,0x880,0x3330,0x3c5,\n-0x308,0x342,0x3a5,0x308,0x342,0x3a5,0x308,0x342,0x880,0x2220,0x1f7c,0x3b9,0x1ffa,0x399,0x1ffa,0x345,\n-0x890,9,0x220,0x3c9,0x3b9,0x3a9,0x399,0x880,0x2220,0x3ce,0x3b9,0x38f,0x399,0x38f,0x345,0x880,\n-0x2220,0x3c9,0x342,0x3a9,0x342,0x3a9,0x342,0x880,0x3330,0x3c9,0x342,0x3b9,0x3a9,0x342,0x399,0x3a9,\n-0x342,0x345,0xc90,9,0x220,0x3c9,0x3b9,0x3a9,0x399,0xc50,0x1d5d,1,0x3a9,0xc50,0x20bf,1,\n-0x4b,0xc50,0x2046,1,0xc5,0xc10,0x29f7,0xc10,0xee6,0xc10,0x29e7,0xc10,0x2a2b,0xc10,0x2a28,0xc10,\n-0x2a1c,0xc10,0x29fd,0xc10,0x2a1f,0xc10,0x2a1e,0xc10,0x2a3f,0xc10,0x1c60,0x841,0xa64b,1,0x1c88,0x844,\n-0xa64a,1,0x1c88,0xc10,0x8a04,0xc10,0xa528,0xc10,0xa544,0xc10,0xa54f,0xc10,0xa54b,0xc10,0xa541,0xc10,\n-0xa512,0xc10,0xa52a,0xc10,0xa515,0x810,0x3a0,0xc10,0xa543,0xc10,0x8a38,0xc10,0x3a0,0x806,0x13a0,0x13a0,\n-0x806,0x13a1,0x13a1,0x806,0x13a2,0x13a2,0x806,0x13a3,0x13a3,0x806,0x13a4,0x13a4,0x806,0x13a5,0x13a5,0x806,\n-0x13a6,0x13a6,0x806,0x13a7,0x13a7,0x806,0x13a8,0x13a8,0x806,0x13a9,0x13a9,0x806,0x13aa,0x13aa,0x806,0x13ab,\n-0x13ab,0x806,0x13ac,0x13ac,0x806,0x13ad,0x13ad,0x806,0x13ae,0x13ae,0x806,0x13af,0x13af,0x806,0x13b0,0x13b0,\n-0x806,0x13b1,0x13b1,0x806,0x13b2,0x13b2,0x806,0x13b3,0x13b3,0x806,0x13b4,0x13b4,0x806,0x13b5,0x13b5,0x806,\n-0x13b6,0x13b6,0x806,0x13b7,0x13b7,0x806,0x13b8,0x13b8,0x806,0x13b9,0x13b9,0x806,0x13ba,0x13ba,0x806,0x13bb,\n-0x13bb,0x806,0x13bc,0x13bc,0x806,0x13bd,0x13bd,0x806,0x13be,0x13be,0x806,0x13bf,0x13bf,0x806,0x13c0,0x13c0,\n-0x806,0x13c1,0x13c1,0x806,0x13c2,0x13c2,0x806,0x13c3,0x13c3,0x806,0x13c4,0x13c4,0x806,0x13c5,0x13c5,0x806,\n-0x13c6,0x13c6,0x806,0x13c7,0x13c7,0x806,0x13c8,0x13c8,0x806,0x13c9,0x13c9,0x806,0x13ca,0x13ca,0x806,0x13cb,\n-0x13cb,0x806,0x13cc,0x13cc,0x806,0x13cd,0x13cd,0x806,0x13ce,0x13ce,0x806,0x13cf,0x13cf,0x806,0x13d0,0x13d0,\n-0x806,0x13d1,0x13d1,0x806,0x13d2,0x13d2,0x806,0x13d3,0x13d3,0x806,0x13d4,0x13d4,0x806,0x13d5,0x13d5,0x806,\n-0x13d6,0x13d6,0x806,0x13d7,0x13d7,0x806,0x13d8,0x13d8,0x806,0x13d9,0x13d9,0x806,0x13da,0x13da,0x806,0x13db,\n-0x13db,0x806,0x13dc,0x13dc,0x806,0x13dd,0x13dd,0x806,0x13de,0x13de,0x806,0x13df,0x13df,0x806,0x13e0,0x13e0,\n-0x806,0x13e1,0x13e1,0x806,0x13e2,0x13e2,0x806,0x13e3,0x13e3,0x806,0x13e4,0x13e4,0x806,0x13e5,0x13e5,0x806,\n-0x13e6,0x13e6,0x806,0x13e7,0x13e7,0x806,0x13e8,0x13e8,0x806,0x13e9,0x13e9,0x806,0x13ea,0x13ea,0x806,0x13eb,\n-0x13eb,0x806,0x13ec,0x13ec,0x806,0x13ed,0x13ed,0x806,0x13ee,0x13ee,0x806,0x13ef,0x13ef,0x880,0x2220,0x66,\n-0x66,0x46,0x46,0x46,0x66,0x880,0x2220,0x66,0x69,0x46,0x49,0x46,0x69,0x880,0x2220,0x66,\n-0x6c,0x46,0x4c,0x46,0x6c,0x880,0x3330,0x66,0x66,0x69,0x46,0x46,0x49,0x46,0x66,0x69,\n-0x880,0x3330,0x66,0x66,0x6c,0x46,0x46,0x4c,0x46,0x66,0x6c,0x8c0,1,0x2220,0x73,0x74,\n-0x53,0x54,0x53,0x74,0xfb06,0x8c0,1,0x2220,0x73,0x74,0x53,0x54,0x53,0x74,0xfb05,0x880,\n-0x2220,0x574,0x576,0x544,0x546,0x544,0x576,0x880,0x2220,0x574,0x565,0x544,0x535,0x544,0x565,0x880,\n-0x2220,0x574,0x56b,0x544,0x53b,0x544,0x56b,0x880,0x2220,0x57e,0x576,0x54e,0x546,0x54e,0x576,0x880,\n-0x2220,0x574,0x56d,0x544,0x53d,0x544,0x56d\n+0x1c87,0x4880,0x20,0x565,0x582,0x810,0x1c60,0x80c,0x1c90,0x10d0,0x80c,0x1c91,0x10d1,0x80c,0x1c92,0x10d2,\n+0x80c,0x1c93,0x10d3,0x80c,0x1c94,0x10d4,0x80c,0x1c95,0x10d5,0x80c,0x1c96,0x10d6,0x80c,0x1c97,0x10d7,0x80c,\n+0x1c98,0x10d8,0x80c,0x1c99,0x10d9,0x80c,0x1c9a,0x10da,0x80c,0x1c9b,0x10db,0x80c,0x1c9c,0x10dc,0x80c,0x1c9d,\n+0x10dd,0x80c,0x1c9e,0x10de,0x80c,0x1c9f,0x10df,0x80c,0x1ca0,0x10e0,0x80c,0x1ca1,0x10e1,0x80c,0x1ca2,0x10e2,\n+0x80c,0x1ca3,0x10e3,0x80c,0x1ca4,0x10e4,0x80c,0x1ca5,0x10e5,0x80c,0x1ca6,0x10e6,0x80c,0x1ca7,0x10e7,0x80c,\n+0x1ca8,0x10e8,0x80c,0x1ca9,0x10e9,0x80c,0x1caa,0x10ea,0x80c,0x1cab,0x10eb,0x80c,0x1cac,0x10ec,0x80c,0x1cad,\n+0x10ed,0x80c,0x1cae,0x10ee,0x80c,0x1caf,0x10ef,0x80c,0x1cb0,0x10f0,0x80c,0x1cb1,0x10f1,0x80c,0x1cb2,0x10f2,\n+0x80c,0x1cb3,0x10f3,0x80c,0x1cb4,0x10f4,0x80c,0x1cb5,0x10f5,0x80c,0x1cb6,0x10f6,0x80c,0x1cb7,0x10f7,0x80c,\n+0x1cb8,0x10f8,0x80c,0x1cb9,0x10f9,0x80c,0x1cba,0x10fa,0x80c,0x1cbd,0x10fd,0x80c,0x1cbe,0x10fe,0x80c,0x1cbf,\n+0x10ff,0xa10,0x97d0,0xa10,8,0x806,0x13f0,0x13f0,0x806,0x13f1,0x13f1,0x806,0x13f2,0x13f2,0x806,0x13f3,\n+0x13f3,0x806,0x13f4,0x13f4,0x806,0x13f5,0x13f5,0x806,0x432,0x412,0x806,0x434,0x414,0x806,0x43e,0x41e,\n+0x806,0x441,0x421,0x846,0x442,0x422,1,0x1c85,0x846,0x442,0x422,1,0x1c84,0x806,0x44a,0x42a,\n+0x806,0x463,0x462,0x806,0xa64b,0xa64a,0xc10,0xbc0,0x810,0x8a04,0x810,0xee6,0x810,0x8a38,0x841,0x1e61,\n+1,0x1e9b,0x844,0x1e60,1,0x1e9b,0x880,0x2220,0x68,0x331,0x48,0x331,0x48,0x331,0x880,0x2220,\n+0x74,0x308,0x54,0x308,0x54,0x308,0x880,0x2220,0x77,0x30a,0x57,0x30a,0x57,0x30a,0x880,0x2220,\n+0x79,0x30a,0x59,0x30a,0x59,0x30a,0x880,0x2220,0x61,0x2be,0x41,0x2be,0x41,0x2be,0x806,0x1e61,\n+0x1e60,0xc90,0x1dbf,0x20,0x73,0x73,0x880,0x2220,0x3c5,0x313,0x3a5,0x313,0x3a5,0x313,0x880,0x3330,\n+0x3c5,0x313,0x300,0x3a5,0x313,0x300,0x3a5,0x313,0x300,0x880,0x3330,0x3c5,0x313,0x301,0x3a5,0x313,\n+0x301,0x3a5,0x313,0x301,0x880,0x3330,0x3c5,0x313,0x342,0x3a5,0x313,0x342,0x3a5,0x313,0x342,0x890,\n+8,0x220,0x1f00,0x3b9,0x1f08,0x399,0x890,8,0x220,0x1f01,0x3b9,0x1f09,0x399,0x890,8,0x220,\n+0x1f02,0x3b9,0x1f0a,0x399,0x890,8,0x220,0x1f03,0x3b9,0x1f0b,0x399,0x890,8,0x220,0x1f04,0x3b9,\n+0x1f0c,0x399,0x890,8,0x220,0x1f05,0x3b9,0x1f0d,0x399,0x890,8,0x220,0x1f06,0x3b9,0x1f0e,0x399,\n+0x890,8,0x220,0x1f07,0x3b9,0x1f0f,0x399,0xc90,8,0x220,0x1f00,0x3b9,0x1f08,0x399,0xc90,8,\n+0x220,0x1f01,0x3b9,0x1f09,0x399,0xc90,8,0x220,0x1f02,0x3b9,0x1f0a,0x399,0xc90,8,0x220,0x1f03,\n+0x3b9,0x1f0b,0x399,0xc90,8,0x220,0x1f04,0x3b9,0x1f0c,0x399,0xc90,8,0x220,0x1f05,0x3b9,0x1f0d,\n+0x399,0xc90,8,0x220,0x1f06,0x3b9,0x1f0e,0x399,0xc90,8,0x220,0x1f07,0x3b9,0x1f0f,0x399,0x890,\n+8,0x220,0x1f20,0x3b9,0x1f28,0x399,0x890,8,0x220,0x1f21,0x3b9,0x1f29,0x399,0x890,8,0x220,\n+0x1f22,0x3b9,0x1f2a,0x399,0x890,8,0x220,0x1f23,0x3b9,0x1f2b,0x399,0x890,8,0x220,0x1f24,0x3b9,\n+0x1f2c,0x399,0x890,8,0x220,0x1f25,0x3b9,0x1f2d,0x399,0x890,8,0x220,0x1f26,0x3b9,0x1f2e,0x399,\n+0x890,8,0x220,0x1f27,0x3b9,0x1f2f,0x399,0xc90,8,0x220,0x1f20,0x3b9,0x1f28,0x399,0xc90,8,\n+0x220,0x1f21,0x3b9,0x1f29,0x399,0xc90,8,0x220,0x1f22,0x3b9,0x1f2a,0x399,0xc90,8,0x220,0x1f23,\n+0x3b9,0x1f2b,0x399,0xc90,8,0x220,0x1f24,0x3b9,0x1f2c,0x399,0xc90,8,0x220,0x1f25,0x3b9,0x1f2d,\n+0x399,0xc90,8,0x220,0x1f26,0x3b9,0x1f2e,0x399,0xc90,8,0x220,0x1f27,0x3b9,0x1f2f,0x399,0x890,\n+8,0x220,0x1f60,0x3b9,0x1f68,0x399,0x890,8,0x220,0x1f61,0x3b9,0x1f69,0x399,0x890,8,0x220,\n+0x1f62,0x3b9,0x1f6a,0x399,0x890,8,0x220,0x1f63,0x3b9,0x1f6b,0x399,0x890,8,0x220,0x1f64,0x3b9,\n+0x1f6c,0x399,0x890,8,0x220,0x1f65,0x3b9,0x1f6d,0x399,0x890,8,0x220,0x1f66,0x3b9,0x1f6e,0x399,\n+0x890,8,0x220,0x1f67,0x3b9,0x1f6f,0x399,0xc90,8,0x220,0x1f60,0x3b9,0x1f68,0x399,0xc90,8,\n+0x220,0x1f61,0x3b9,0x1f69,0x399,0xc90,8,0x220,0x1f62,0x3b9,0x1f6a,0x399,0xc90,8,0x220,0x1f63,\n+0x3b9,0x1f6b,0x399,0xc90,8,0x220,0x1f64,0x3b9,0x1f6c,0x399,0xc90,8,0x220,0x1f65,0x3b9,0x1f6d,\n+0x399,0xc90,8,0x220,0x1f66,0x3b9,0x1f6e,0x399,0xc90,8,0x220,0x1f67,0x3b9,0x1f6f,0x399,0x880,\n+0x2220,0x1f70,0x3b9,0x1fba,0x399,0x1fba,0x345,0x890,9,0x220,0x3b1,0x3b9,0x391,0x399,0x880,0x2220,\n+0x3ac,0x3b9,0x386,0x399,0x386,0x345,0x880,0x2220,0x3b1,0x342,0x391,0x342,0x391,0x342,0x880,0x3330,\n+0x3b1,0x342,0x3b9,0x391,0x342,0x399,0x391,0x342,0x345,0xc90,9,0x220,0x3b1,0x3b9,0x391,0x399,\n+0x846,0x3b9,0x399,1,0x345,0x880,0x2220,0x1f74,0x3b9,0x1fca,0x399,0x1fca,0x345,0x890,9,0x220,\n+0x3b7,0x3b9,0x397,0x399,0x880,0x2220,0x3ae,0x3b9,0x389,0x399,0x389,0x345,0x880,0x2220,0x3b7,0x342,\n+0x397,0x342,0x397,0x342,0x880,0x3330,0x3b7,0x342,0x3b9,0x397,0x342,0x399,0x397,0x342,0x345,0xc90,\n+9,0x220,0x3b7,0x3b9,0x397,0x399,0x880,0x3330,0x3b9,0x308,0x300,0x399,0x308,0x300,0x399,0x308,\n+0x300,0x8c0,1,0x3330,0x3b9,0x308,0x301,0x399,0x308,0x301,0x399,0x308,0x301,0x390,0x880,0x2220,\n+0x3b9,0x342,0x399,0x342,0x399,0x342,0x880,0x3330,0x3b9,0x308,0x342,0x399,0x308,0x342,0x399,0x308,\n+0x342,0x880,0x3330,0x3c5,0x308,0x300,0x3a5,0x308,0x300,0x3a5,0x308,0x300,0x8c0,1,0x3330,0x3c5,\n+0x308,0x301,0x3a5,0x308,0x301,0x3a5,0x308,0x301,0x3b0,0x880,0x2220,0x3c1,0x313,0x3a1,0x313,0x3a1,\n+0x313,0x880,0x2220,0x3c5,0x342,0x3a5,0x342,0x3a5,0x342,0x880,0x3330,0x3c5,0x308,0x342,0x3a5,0x308,\n+0x342,0x3a5,0x308,0x342,0x880,0x2220,0x1f7c,0x3b9,0x1ffa,0x399,0x1ffa,0x345,0x890,9,0x220,0x3c9,\n+0x3b9,0x3a9,0x399,0x880,0x2220,0x3ce,0x3b9,0x38f,0x399,0x38f,0x345,0x880,0x2220,0x3c9,0x342,0x3a9,\n+0x342,0x3a9,0x342,0x880,0x3330,0x3c9,0x342,0x3b9,0x3a9,0x342,0x399,0x3a9,0x342,0x345,0xc90,9,\n+0x220,0x3c9,0x3b9,0x3a9,0x399,0xc50,0x1d5d,1,0x3a9,0xc50,0x20bf,1,0x4b,0xc50,0x2046,1,\n+0xc5,0xc10,0x29f7,0xc10,0xee6,0xc10,0x29e7,0xc10,0x2a2b,0xc10,0x2a28,0xc10,0x2a1c,0xc10,0x29fd,0xc10,\n+0x2a1f,0xc10,0x2a1e,0xc10,0x2a3f,0xc10,0x1c60,0x841,0xa64b,1,0x1c88,0x844,0xa64a,1,0x1c88,0xc10,\n+0x8a04,0xc10,0xa528,0xc10,0xa544,0xc10,0xa54f,0xc10,0xa54b,0xc10,0xa541,0xc10,0xa512,0xc10,0xa52a,0xc10,\n+0xa515,0x810,0x3a0,0xc10,0xa543,0xc10,0x8a38,0xc10,0x3a0,0x806,0x13a0,0x13a0,0x806,0x13a1,0x13a1,0x806,\n+0x13a2,0x13a2,0x806,0x13a3,0x13a3,0x806,0x13a4,0x13a4,0x806,0x13a5,0x13a5,0x806,0x13a6,0x13a6,0x806,0x13a7,\n+0x13a7,0x806,0x13a8,0x13a8,0x806,0x13a9,0x13a9,0x806,0x13aa,0x13aa,0x806,0x13ab,0x13ab,0x806,0x13ac,0x13ac,\n+0x806,0x13ad,0x13ad,0x806,0x13ae,0x13ae,0x806,0x13af,0x13af,0x806,0x13b0,0x13b0,0x806,0x13b1,0x13b1,0x806,\n+0x13b2,0x13b2,0x806,0x13b3,0x13b3,0x806,0x13b4,0x13b4,0x806,0x13b5,0x13b5,0x806,0x13b6,0x13b6,0x806,0x13b7,\n+0x13b7,0x806,0x13b8,0x13b8,0x806,0x13b9,0x13b9,0x806,0x13ba,0x13ba,0x806,0x13bb,0x13bb,0x806,0x13bc,0x13bc,\n+0x806,0x13bd,0x13bd,0x806,0x13be,0x13be,0x806,0x13bf,0x13bf,0x806,0x13c0,0x13c0,0x806,0x13c1,0x13c1,0x806,\n+0x13c2,0x13c2,0x806,0x13c3,0x13c3,0x806,0x13c4,0x13c4,0x806,0x13c5,0x13c5,0x806,0x13c6,0x13c6,0x806,0x13c7,\n+0x13c7,0x806,0x13c8,0x13c8,0x806,0x13c9,0x13c9,0x806,0x13ca,0x13ca,0x806,0x13cb,0x13cb,0x806,0x13cc,0x13cc,\n+0x806,0x13cd,0x13cd,0x806,0x13ce,0x13ce,0x806,0x13cf,0x13cf,0x806,0x13d0,0x13d0,0x806,0x13d1,0x13d1,0x806,\n+0x13d2,0x13d2,0x806,0x13d3,0x13d3,0x806,0x13d4,0x13d4,0x806,0x13d5,0x13d5,0x806,0x13d6,0x13d6,0x806,0x13d7,\n+0x13d7,0x806,0x13d8,0x13d8,0x806,0x13d9,0x13d9,0x806,0x13da,0x13da,0x806,0x13db,0x13db,0x806,0x13dc,0x13dc,\n+0x806,0x13dd,0x13dd,0x806,0x13de,0x13de,0x806,0x13df,0x13df,0x806,0x13e0,0x13e0,0x806,0x13e1,0x13e1,0x806,\n+0x13e2,0x13e2,0x806,0x13e3,0x13e3,0x806,0x13e4,0x13e4,0x806,0x13e5,0x13e5,0x806,0x13e6,0x13e6,0x806,0x13e7,\n+0x13e7,0x806,0x13e8,0x13e8,0x806,0x13e9,0x13e9,0x806,0x13ea,0x13ea,0x806,0x13eb,0x13eb,0x806,0x13ec,0x13ec,\n+0x806,0x13ed,0x13ed,0x806,0x13ee,0x13ee,0x806,0x13ef,0x13ef,0x880,0x2220,0x66,0x66,0x46,0x46,0x46,\n+0x66,0x880,0x2220,0x66,0x69,0x46,0x49,0x46,0x69,0x880,0x2220,0x66,0x6c,0x46,0x4c,0x46,\n+0x6c,0x880,0x3330,0x66,0x66,0x69,0x46,0x46,0x49,0x46,0x66,0x69,0x880,0x3330,0x66,0x66,\n+0x6c,0x46,0x46,0x4c,0x46,0x66,0x6c,0x8c0,1,0x2220,0x73,0x74,0x53,0x54,0x53,0x74,\n+0xfb06,0x8c0,1,0x2220,0x73,0x74,0x53,0x54,0x53,0x74,0xfb05,0x880,0x2220,0x574,0x576,0x544,\n+0x546,0x544,0x576,0x880,0x2220,0x574,0x565,0x544,0x535,0x544,0x565,0x880,0x2220,0x574,0x56b,0x544,\n+0x53b,0x544,0x56b,0x880,0x2220,0x57e,0x576,0x54e,0x546,0x54e,0x576,0x880,0x2220,0x574,0x56d,0x544,\n+0x53d,0x544,0x56d\n@@ -932,1 +939,1 @@\n-    8956,\n+    9068,\n@@ -938,1 +945,1 @@\n-    0x2fd0,\n+    0x3040,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucase_props_data.h","additions":447,"deletions":440,"binary":false,"changes":887,"status":"modified"},{"patch":"@@ -690,1 +690,1 @@\n-                    sink.Append(u8\"\\u0308\", 2);  \/\/ restore or add a dialytika\n+                    sink.AppendU8(u8\"\\u0308\", 2);  \/\/ restore or add a dialytika\n@@ -693,1 +693,1 @@\n-                    sink.Append(u8\"\\u0301\", 2);\n+                    sink.AppendU8(u8\"\\u0301\", 2);\n@@ -696,1 +696,1 @@\n-                    sink.Append(u8\"\\u0399\", 2);\n+                    sink.AppendU8(u8\"\\u0399\", 2);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucasemap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-\/** Returns TRUE if the options are valid. Otherwise FALSE, and sets an error. *\/\n+\/** Returns true if the options are valid. Otherwise false, and sets an error. *\/\n@@ -73,1 +73,1 @@\n-    if (U_FAILURE(errorCode)) { return FALSE; }\n+    if (U_FAILURE(errorCode)) { return false; }\n@@ -77,1 +77,1 @@\n-        return FALSE;\n+        return false;\n@@ -79,1 +79,1 @@\n-    return TRUE;\n+    return true;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucasemap_imp.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-#define GET_PROPS(c, result) ((result)=UTRIE2_GET16(&propsTrie, c));\n+#define GET_PROPS(c, result) ((result)=UTRIE2_GET16(&propsTrie, c))\n@@ -559,1 +559,0 @@\n-    uint32_t scriptX;\n@@ -567,1 +566,2 @@\n-    scriptX=u_getUnicodeProperties(c, 0)&UPROPS_SCRIPT_X_MASK;\n+    uint32_t scriptX=u_getUnicodeProperties(c, 0)&UPROPS_SCRIPT_X_MASK;\n+    uint32_t codeOrIndex=uprops_mergeScriptCodeOrIndex(scriptX);\n@@ -569,1 +569,1 @@\n-        return (UScriptCode)scriptX;\n+        return (UScriptCode)codeOrIndex;\n@@ -575,1 +575,1 @@\n-        return (UScriptCode)scriptExtensions[scriptX&UPROPS_SCRIPT_MASK];\n+        return (UScriptCode)scriptExtensions[codeOrIndex];\n@@ -581,1 +581,0 @@\n-    const uint16_t *scx;\n@@ -583,0 +582,1 @@\n+    uint32_t codeOrIndex=uprops_mergeScriptCodeOrIndex(scriptX);\n@@ -584,1 +584,1 @@\n-        return sc==(UScriptCode)scriptX;\n+        return sc==(UScriptCode)codeOrIndex;\n@@ -587,1 +587,1 @@\n-    scx=scriptExtensions+(scriptX&UPROPS_SCRIPT_MASK);\n+    const uint16_t *scx=scriptExtensions+codeOrIndex;\n@@ -591,1 +591,2 @@\n-    if(sc>=USCRIPT_CODE_LIMIT) {\n+    uint32_t sc32=sc;\n+    if(sc32>0x7fff) {\n@@ -595,1 +596,1 @@\n-    while(sc>*scx) {\n+    while(sc32>*scx) {\n@@ -598,1 +599,1 @@\n-    return sc==(*scx&0x7fff);\n+    return sc32==(*scx&0x7fff);\n@@ -605,4 +606,0 @@\n-    uint32_t scriptX;\n-    int32_t length;\n-    const uint16_t *scx;\n-    uint16_t sx;\n@@ -616,1 +613,2 @@\n-    scriptX=u_getUnicodeProperties(c, 0)&UPROPS_SCRIPT_X_MASK;\n+    uint32_t scriptX=u_getUnicodeProperties(c, 0)&UPROPS_SCRIPT_X_MASK;\n+    uint32_t codeOrIndex=uprops_mergeScriptCodeOrIndex(scriptX);\n@@ -621,1 +619,1 @@\n-            scripts[0]=(UScriptCode)scriptX;\n+            scripts[0]=(UScriptCode)codeOrIndex;\n@@ -626,1 +624,1 @@\n-    scx=scriptExtensions+(scriptX&UPROPS_SCRIPT_MASK);\n+    const uint16_t *scx=scriptExtensions+codeOrIndex;\n@@ -630,1 +628,2 @@\n-    length=0;\n+    int32_t length=0;\n+    uint16_t sx;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uchar.cpp","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-static const UVersionInfo dataVersion={0xc,1,0,0};\n+static const UVersionInfo dataVersion={0xd,0,0,0};\n@@ -16,133 +16,133 @@\n-static const uint16_t propsTrie_index[21968]={\n-0x45d,0x465,0x46d,0x475,0x48d,0x495,0x49d,0x4a5,0x4ad,0x4b5,0x4bb,0x4c3,0x4cb,0x4d3,0x4db,0x4e3,\n-0x4e9,0x4f1,0x4f9,0x501,0x504,0x50c,0x514,0x51c,0x524,0x52c,0x528,0x530,0x538,0x540,0x545,0x54d,\n-0x555,0x55d,0x561,0x569,0x571,0x579,0x581,0x589,0x585,0x58d,0x592,0x59a,0x5a0,0x5a8,0x5b0,0x5b8,\n-0x5c0,0x5c8,0x5d0,0x5d8,0x5dd,0x5e5,0x5e8,0x5f0,0x5f8,0x600,0x606,0x60e,0x60d,0x615,0x61d,0x625,\n-0x635,0x62d,0x63d,0x645,0x47d,0x655,0x65d,0x64d,0x66d,0x66f,0x677,0x665,0x687,0x68d,0x695,0x67f,\n-0x6a5,0x6ab,0x6b3,0x69d,0x6c3,0x6c9,0x6d1,0x6bb,0x6e1,0x6e7,0x6ef,0x6d9,0x6ff,0x707,0x70f,0x6f7,\n-0x71f,0x725,0x72d,0x717,0x73d,0x743,0x74b,0x735,0x75b,0x760,0x768,0x753,0x778,0x77f,0x787,0x770,\n-0x609,0x78f,0x797,0x47d,0x79f,0x7a6,0x7ae,0x47d,0x7b6,0x7be,0x7c6,0x7cb,0x7d3,0x7da,0x7e2,0x47d,\n-0x5c8,0x7ea,0x7f2,0x7fa,0x802,0x555,0x812,0x80a,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x81a,0x5c8,0x822,0x826,0x82e,0x5c8,0x834,0x5c8,0x83a,0x842,0x84a,0x555,0x555,0x852,\n-0x85a,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x85f,0x867,0x5c8,0x5c8,0x86f,0x877,0x87f,0x887,0x88f,0x5c8,0x897,0x89f,0x8a7,\n-0x8b7,0x5c8,0x8bf,0x8c1,0x8c9,0x8af,0x5c8,0x8cc,0x8e0,0x8d4,0x8dc,0x8e8,0x5c8,0x8f0,0x8f6,0x8fe,\n-0x906,0x5c8,0x916,0x91e,0x926,0x90e,0x47d,0x47d,0x936,0x939,0x941,0x92e,0x951,0x949,0x5c8,0x958,\n-0x5c8,0x967,0x960,0x96f,0x977,0x97b,0x983,0x98b,0x4fd,0x993,0x996,0x99c,0x9a3,0x996,0x524,0x9ab,\n-0x4ad,0x4ad,0x4ad,0x4ad,0x9b3,0x4ad,0x4ad,0x4ad,0x9c3,0x9cb,0x9d3,0x9db,0x9e3,0x9e7,0x9ef,0x9bb,\n-0xa07,0xa0f,0x9f7,0x9ff,0xa17,0xa1f,0xa27,0xa2f,0xa47,0xa37,0xa3f,0xa4f,0xa57,0xa66,0xa6b,0xa5e,\n-0xa73,0xa73,0xa73,0xa73,0xa73,0xa73,0xa73,0xa73,0xa7b,0xa83,0x8fe,0xa86,0xa8e,0xa95,0xa9a,0xaa2,\n-0x8fe,0xaa9,0xaa8,0xab9,0xabc,0x8fe,0x8fe,0xab1,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0xacb,0xad3,0xac3,\n-0x8fe,0x8fe,0x8fe,0xad8,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0xade,0xae6,0x8fe,0xaee,0xaf5,\n-0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0xa73,0xa73,0xa73,0xa73,0xafd,0xa73,0xb04,0xb0b,\n-0xa73,0xa73,0xa73,0xa73,0xa73,0xa73,0xa73,0xa73,0x8fe,0xb13,0xb1a,0xb1e,0xb24,0x8fe,0x8fe,0x8fe,\n-0x555,0xb34,0xb2c,0xb3c,0x4ad,0x4ad,0x4ad,0xb44,0x4fd,0xb4c,0x5c8,0xb52,0xb62,0xb5a,0xb5a,0x524,\n-0xb6a,0xb72,0xb7a,0x47d,0xb82,0x8fe,0x8fe,0xb89,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0xb91,0xb97,\n-0xba7,0xb9f,0x609,0x5c8,0xbaf,0x85a,0x5c8,0xbb7,0xbbf,0xbc3,0x5c8,0x5c8,0xbc8,0xbd0,0x8fe,0xbd8,\n-0xaa3,0xbe0,0xbe6,0x8fe,0xbe0,0xbee,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,\n-0xbf6,0x5c8,0x5c8,0x5c8,0xbfe,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0xc04,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc09,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x8cc,0x8fe,0x8fe,\n-0xc11,0x5c8,0xc14,0x5c8,0xc1c,0xc22,0xc2a,0xc32,0xc37,0x5c8,0x5c8,0xc3b,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc42,0x5c8,0xc49,0xc4f,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc57,0x5c8,0x5c8,0x5c8,0xc5f,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc61,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc68,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0xc6f,0x5c8,0x5c8,0x5c8,0xc76,0xc7e,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc83,0x5c8,0x5c8,0xc8b,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc8f,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc92,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xc95,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0xc9b,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0xca3,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0xca8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xcad,0x5c8,0x5c8,0x5c8,0xcb2,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0xcba,0xcc1,0xcc5,0x5c8,0x5c8,0x5c8,0xccc,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xcd2,\n-0xce2,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0xcda,0x8fe,0xcea,0x96f,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0xcef,0xcf7,0x4ad,0xd07,0xcff,0x5c8,0x5c8,0xd0f,0xd17,0xd27,0x4ad,0xd2c,0xd34,0xd3a,0xd42,0xd1f,\n-0xd4a,0xd52,0x5c8,0xd5a,0xd6a,0xd6d,0xd62,0xd75,0x61d,0xd7d,0xd84,0x8c0,0x66d,0xd94,0xd8c,0xd9c,\n-0x5c8,0xda4,0xdac,0xdb4,0x5c8,0xdbc,0xdc4,0xdcc,0xdd4,0xddc,0xde0,0xde8,0x4fd,0x4fd,0x5c8,0xdf0,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xdf8,0xe04,0xdfc,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,\n-0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0x5c8,0x5c8,0x5c8,0xe1c,0x5c8,0xccd,0xe23,0xe28,\n-0x5c8,0x5c8,0x5c8,0xe30,0x5c8,0x5c8,0x8cb,0x47d,0xe46,0xe36,0xe3e,0x5c8,0x5c8,0xe4e,0xe56,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xe5b,0xe63,0x5c8,0xe67,0x5c8,0xe6d,0xe71,\n-0xe79,0xe81,0xe88,0xe90,0x5c8,0x5c8,0x5c8,0xe96,0xeae,0x46d,0xeb6,0xebe,0xec3,0x8e0,0xe9e,0xea6,\n-0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,\n-0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,0xe0c,\n-0x11f4,0x11f4,0x1234,0x1274,0x12b4,0x12ec,0x132c,0x136c,0x13a4,0x13e4,0x1410,0x1450,0x1490,0x14a0,0x14e0,0x1514,\n-0x1554,0x1584,0x15c4,0x1604,0x1614,0x1648,0x1680,0x16c0,0x1700,0x1740,0x1774,0x17a0,0x17e0,0x1818,0x1834,0x1874,\n+static const uint16_t propsTrie_index[22276]={\n+0x46d,0x475,0x47d,0x485,0x49d,0x4a5,0x4ad,0x4b5,0x4bd,0x4c5,0x4cb,0x4d3,0x4db,0x4e3,0x4eb,0x4f3,\n+0x4f9,0x501,0x509,0x511,0x514,0x51c,0x524,0x52c,0x534,0x53c,0x538,0x540,0x548,0x550,0x555,0x55d,\n+0x565,0x56d,0x571,0x579,0x581,0x589,0x591,0x599,0x595,0x59d,0x5a2,0x5aa,0x5b0,0x5b8,0x5c0,0x5c8,\n+0x5d0,0x5d8,0x5e0,0x5e8,0x5ed,0x5f5,0x5f8,0x600,0x608,0x610,0x616,0x61e,0x61d,0x625,0x62d,0x635,\n+0x645,0x63d,0x64d,0x655,0x48d,0x665,0x66b,0x65d,0x67b,0x67d,0x685,0x673,0x695,0x69b,0x6a3,0x68d,\n+0x6b3,0x6b9,0x6c1,0x6ab,0x6d1,0x6d7,0x6df,0x6c9,0x6ef,0x6f5,0x6fd,0x6e7,0x70d,0x715,0x71d,0x705,\n+0x72d,0x733,0x73b,0x725,0x74b,0x751,0x759,0x743,0x769,0x76e,0x776,0x761,0x786,0x78d,0x795,0x77e,\n+0x619,0x79d,0x7a5,0x48d,0x7ad,0x7b4,0x7bc,0x48d,0x7c4,0x7cc,0x7d4,0x7d9,0x7e1,0x7e8,0x7f0,0x48d,\n+0x5d8,0x7f8,0x800,0x808,0x810,0x565,0x820,0x818,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x828,0x5d8,0x830,0x834,0x83c,0x5d8,0x842,0x5d8,0x848,0x850,0x858,0x565,0x565,0x860,\n+0x868,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x86d,0x875,0x5d8,0x5d8,0x87d,0x885,0x88d,0x895,0x89d,0x5d8,0x8a5,0x8ad,0x8b5,\n+0x8c5,0x5d8,0x8cd,0x8cf,0x8d7,0x8bd,0x5d8,0x8da,0x8ee,0x8e2,0x8ea,0x8f6,0x5d8,0x8fe,0x904,0x90c,\n+0x914,0x5d8,0x924,0x92c,0x934,0x91c,0x944,0x48d,0x94c,0x94f,0x957,0x93c,0x967,0x95f,0x5d8,0x96e,\n+0x5d8,0x97d,0x976,0x985,0x98d,0x991,0x999,0x9a1,0x50d,0x9a9,0x9ac,0x9b2,0x9b9,0x9ac,0x534,0x9c1,\n+0x4bd,0x4bd,0x4bd,0x4bd,0x9c9,0x4bd,0x4bd,0x4bd,0x9d9,0x9e1,0x9e9,0x9f1,0x9f9,0x9fd,0xa05,0x9d1,\n+0xa1d,0xa25,0xa0d,0xa15,0xa2d,0xa35,0xa3d,0xa45,0xa5d,0xa4d,0xa55,0xa65,0xa6d,0xa7c,0xa81,0xa74,\n+0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa91,0xa99,0x90c,0xa9c,0xaa4,0xaab,0xab0,0xab8,\n+0x90c,0xabf,0xabe,0xacf,0xad2,0x90c,0x90c,0xac7,0x90c,0x90c,0x90c,0x90c,0x90c,0xae1,0xae9,0xad9,\n+0x90c,0x90c,0x90c,0xaee,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0xaf4,0xafc,0x90c,0xb04,0xb0b,\n+0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0xa89,0xa89,0xa89,0xa89,0xb13,0xa89,0xb1a,0xb21,\n+0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0x90c,0xb29,0xb30,0xb34,0xb3a,0x90c,0x90c,0x90c,\n+0x565,0xb4a,0xb42,0xb52,0x4bd,0x4bd,0x4bd,0xb5a,0x50d,0xb62,0x5d8,0xb68,0xb78,0xb70,0xb70,0x534,\n+0xb80,0xb88,0xb90,0x48d,0xb98,0x90c,0x90c,0xb9f,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0xba7,0xbad,\n+0xbbd,0xbb5,0x619,0x5d8,0xbc5,0x868,0x5d8,0xbcd,0xbd5,0xbd9,0x5d8,0x5d8,0xbde,0x5d8,0x90c,0xbe5,\n+0xab9,0xbed,0xbf3,0x90c,0xbed,0xbfb,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,\n+0xc03,0x5d8,0x5d8,0x5d8,0xc0b,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0xc11,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc16,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x90c,0x90c,\n+0xc1e,0x5d8,0xc21,0x5d8,0xc29,0xc2f,0xc37,0xc3f,0xc44,0x5d8,0x5d8,0xc48,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc4f,0x5d8,0xc56,0xc5c,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc64,0x5d8,0x5d8,0x5d8,0xc6c,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc6e,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc75,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0xc7c,0x5d8,0x5d8,0x5d8,0xc83,0xc8b,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc90,0x5d8,0x5d8,0xc98,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc9c,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xc9f,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xca2,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0xca8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0xcb0,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0xcb5,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xcba,0x5d8,0x5d8,0x5d8,0xcbf,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0xcc7,0xcce,0xcd2,0x5d8,0x5d8,0x5d8,0xcd9,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x8ce,\n+0xce7,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0xcdf,0x90c,0xcef,0x985,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0xcf4,0xcfc,0x4bd,0xd0c,0xd04,0x5d8,0x5d8,0xd14,0xd1c,0xd2c,0x4bd,0xd31,0xd39,0xd3f,0xd47,0xd24,\n+0xd4f,0xd57,0x5d8,0xd5f,0xd6f,0xd72,0xd67,0xd7a,0x62d,0xd82,0xd89,0x8ce,0x67b,0xd99,0xd91,0xda1,\n+0x5d8,0xda9,0xdb1,0xdb9,0x5d8,0xdc1,0xdc9,0xdd1,0xdd9,0xde1,0xde5,0xded,0x50d,0x50d,0x5d8,0xdf5,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xdfd,0xe09,0xe01,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,\n+0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0x5d8,0x5d8,0x5d8,0xe21,0x5d8,0xcda,0xe28,0xe2d,\n+0x5d8,0x5d8,0x5d8,0xe35,0x5d8,0x5d8,0x8d9,0x48d,0xe4b,0xe3b,0xe43,0x5d8,0x5d8,0xe53,0xe5b,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xe60,0xe68,0x5d8,0xe6c,0x5d8,0xe72,0xe76,\n+0xe7e,0xe86,0xe8d,0xe95,0x5d8,0x5d8,0x5d8,0xe9b,0xeb3,0x47d,0xebb,0xec3,0xec8,0x8ee,0xea3,0xeab,\n+0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,\n+0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,0xe11,\n+0x1234,0x1234,0x1274,0x12b4,0x12f4,0x132c,0x136c,0x13ac,0x13e4,0x1424,0x1450,0x1490,0x14d0,0x14e0,0x1520,0x1554,\n+0x1594,0x15c4,0x1604,0x1644,0x1654,0x1688,0x16c0,0x1700,0x1740,0x1780,0x17b4,0x17e0,0x1820,0x1858,0x1874,0x18b4,\n@@ -153,0 +153,1 @@\n+0x1db,0x1db,0x10f3,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,\n@@ -174,2 +175,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,\n-0x10f3,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,\n+0x1133,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,\n@@ -178,1 +178,1 @@\n-0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x1133,\n+0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x1173,\n@@ -180,117 +180,121 @@\n-0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x1133,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0xecb,0xed2,0xeda,0x47d,0x5c8,0x5c8,0x5c8,0xbd0,0xeea,0xee2,0xf01,0xef2,0xef9,0xf09,0xb7e,0xf11,\n-0x47d,0x47d,0x47d,0x47d,0x8c0,0x5c8,0xf19,0xf21,0x5c8,0xf29,0xf31,0xf35,0xf3d,0x5c8,0xf45,0x47d,\n-0x555,0x55f,0xf4d,0x5c8,0xf51,0xf59,0xf69,0xf61,0x5c8,0xf71,0x5c8,0xf78,0x47d,0x47d,0x47d,0x47d,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xb62,0x8cc,0xe6d,0x47d,0x47d,0x47d,0x47d,\n-0xf88,0xf80,0xf8b,0xf93,0x8e0,0xf9b,0x47d,0xfa3,0xfab,0xfb3,0x47d,0x47d,0x5c8,0xfc3,0xfcb,0xfbb,\n-0xfdb,0xfe2,0xfd3,0xfea,0xff2,0x47d,0x1002,0xffa,0x5c8,0x1005,0x100d,0x1015,0x101d,0x1025,0x47d,0x47d,\n-0x5c8,0x5c8,0x102d,0x47d,0x555,0x1035,0x4fd,0x103d,0x5c8,0x1045,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x104d,0x47d,0x47d,0x47d,0x47d,0x1055,0x105d,0x1064,0x47d,0x47d,0x47d,0x47d,0xb62,\n-0x1074,0x5fe,0x107c,0x106c,0x951,0x1084,0x108c,0x1092,0x10aa,0x109a,0x10a2,0x10ae,0x951,0x10be,0x10b6,0x10c6,\n-0x10d6,0x10ce,0x47d,0x47d,0x10dd,0x10e5,0x620,0x10ed,0x10fd,0x1103,0x110b,0x10f5,0x47d,0x47d,0x47d,0x47d,\n-0x5c8,0x1113,0x111b,0x47d,0x5c8,0x1123,0x112b,0x47d,0x47d,0x47d,0x47d,0x47d,0x5c8,0x1133,0x113b,0x47d,\n-0x5c8,0x1143,0x114b,0x1153,0x5c8,0x1163,0x115b,0x47d,0x83a,0x116b,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x5c8,0x1173,0x47d,0x47d,0x47d,0x555,0x4fd,0x117b,0x47d,0x47d,0x47d,0x47d,0x47d,0x118b,0x118f,0x1183,\n-0x11a7,0x1197,0x119f,0x5c8,0x11b7,0x11af,0x5c8,0x8c1,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x11cd,0x11d2,0x11bf,0x11c7,0x11e2,0x11da,0x47d,0x47d,0x11f1,0x11f5,0x11e9,0x1205,0x11fd,0x115b,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x1209,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x1219,0x1211,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x8cb,0x47d,0x47d,0x47d,\n-0x1229,0x1231,0x1239,0x1221,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x1241,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x1249,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x1251,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x8c1,0x8e0,0x1259,0x47d,0x47d,0xe63,0x1261,0x5c8,0x1269,0x1271,0x1279,0xcd2,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x555,0x4fd,0x1281,0x47d,0x47d,0x47d,0x5c8,0x5c8,0x1289,0x128e,0x1294,0x47d,\n-0x47d,0x129c,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x12a4,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x12ac,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x8e0,0x47d,0x12b1,0x12b8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xdfc,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x5c8,0x5c8,0x5c8,0x12be,0x12c3,0x12cb,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0xb91,0x8fe,0x12d3,0x8fe,0x12da,0x12e2,0x12e8,\n-0x8fe,0x12ee,0x8fe,0x8fe,0x12f6,0x47d,0x47d,0x47d,0x47d,0x12fe,0x8fe,0x8fe,0xaa5,0x1306,0x47d,0x47d,\n-0x47d,0x47d,0x1316,0x131d,0x1322,0x1328,0x1330,0x1338,0x1340,0x131a,0x1348,0x1350,0x1358,0x135d,0x132f,0x1316,\n-0x131d,0x1319,0x1328,0x1365,0x1317,0x1368,0x131a,0x1370,0x1378,0x1380,0x1387,0x1373,0x137b,0x1383,0x138a,0x1376,\n-0x1392,0x130e,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,\n-0x8fe,0x8fe,0x524,0x13a2,0x524,0x13a9,0x13b0,0x139a,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x13b7,0x13bf,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x5c8,0x13cf,0x13c7,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x5c8,0x13d7,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x13df,0x47d,0x555,0x13ef,0x13e7,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x13f7,0x1407,0x13ff,0x47d,0x47d,0x1417,0x140f,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x1427,0x142f,0x1437,0x143f,0x1447,0x144f,0x47d,0x141f,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x8fe,0x1457,0x8fe,0x8fe,0xb89,0x145c,0x1460,0xb91,0x1468,0x8fe,0x8fe,0x146d,0x8fe,0x12ed,\n-0x47d,0x1475,0x147d,0x1481,0x1489,0x1491,0x47d,0x47d,0x47d,0x47d,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,\n-0x8fe,0x1499,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,\n-0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0x8fe,0xb91,0x14a1,0x8fe,0x8fe,0x8fe,0xb89,0x8fe,0x8fe,\n-0x14a9,0x14b1,0x1457,0x8fe,0x14b9,0x8fe,0x14c1,0xb93,0x47d,0x47d,0x14c6,0x8fe,0x8fe,0x14ca,0x8fe,0x14d2,\n-0x14d8,0x8fe,0x8fe,0x8fe,0xb89,0x14dd,0x14e3,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x14eb,0x5c8,0x5c8,0x14f2,0x5c8,0x5c8,0x5c8,0x14fa,0x5c8,0x1502,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0xc73,0x5c8,0x5c8,0x150a,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x1512,0x151a,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0xcb2,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x1521,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x1528,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x152f,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0xb62,0x47d,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x1533,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0xf51,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x153b,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x1543,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x5c8,0x5c8,0x5c8,0x5c8,0x154b,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,0x5c8,\n-0x5c8,0x5c8,0x5c8,0xf51,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x155b,0x1553,0x1553,0x1553,0x47d,0x47d,0x47d,0x47d,0x524,0x524,0x524,0x524,0x524,\n-0x524,0x524,0x1563,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,0xe14,\n-0xe14,0xe14,0x156b,0x45c,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,\n+0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x700,0x1173,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0xed0,0xed7,0xedf,0x48d,0x5d8,0x5d8,0x5d8,0xee7,0xef7,0xeef,0xf0e,0xeff,0xf06,0xf16,0xf1a,0xf1e,\n+0x48d,0x48d,0x48d,0x48d,0x8ce,0x5d8,0xf26,0xf2e,0x5d8,0xf36,0xf3e,0xf42,0xf4a,0x5d8,0xf52,0x48d,\n+0x565,0x56f,0xf5a,0x5d8,0xf5e,0xf66,0xf76,0xf6e,0x5d8,0xf7e,0x5d8,0xf85,0x48d,0x48d,0x48d,0x48d,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xb78,0x8da,0xe72,0x48d,0x48d,0x48d,0x48d,\n+0xf95,0xf8d,0xf98,0xfa0,0x8ee,0xfa8,0x48d,0xfb0,0xfb8,0xfc0,0x48d,0x48d,0x5d8,0xfd0,0xfd8,0xfc8,\n+0xfe8,0xfef,0xfe0,0xff7,0xfff,0x48d,0x100f,0x1007,0x5d8,0x1012,0x101a,0x1022,0x102a,0x1032,0x48d,0x48d,\n+0x5d8,0x5d8,0x103a,0x48d,0x565,0x1042,0x50d,0x104a,0x5d8,0x1052,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x105a,0x5d8,0x1062,0x48d,0x48d,0x106a,0x1072,0x1079,0x48d,0x48d,0xe68,0x1081,0xb78,\n+0x1091,0x60e,0x1099,0x1089,0x967,0x10a1,0x10a9,0x10af,0x10c7,0x10b7,0x10bf,0x10cb,0x967,0x10db,0x10d3,0x10e3,\n+0x10f3,0x10eb,0x48d,0x48d,0x10fa,0x1102,0x630,0x110a,0x111a,0x1120,0x1128,0x1112,0x48d,0x48d,0x48d,0x48d,\n+0x5d8,0x1130,0x1138,0x1140,0x5d8,0x1148,0x1150,0x48d,0x48d,0x48d,0x48d,0x48d,0x5d8,0x1158,0x1160,0x48d,\n+0x5d8,0x1168,0x1170,0x1178,0x5d8,0x1188,0x1180,0x48d,0x848,0x1190,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x5d8,0x1198,0x48d,0x48d,0x48d,0x565,0x50d,0x11a0,0x11b0,0x11b6,0x11a8,0x48d,0x48d,0x11c6,0x11ca,0x11be,\n+0x11e2,0x11d2,0x11da,0x5d8,0x11f2,0x11ea,0x5d8,0x8cf,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x1208,0x120d,0x11fa,0x1202,0x121d,0x1215,0x48d,0x48d,0x122c,0x1230,0x1224,0x1240,0x1238,0x1180,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x1244,0x48d,0x48d,0x48d,0x48d,0x48d,0x124b,0x125b,0x1253,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x8d9,0x48d,0x48d,0x48d,\n+0x126b,0x1273,0x127b,0x1263,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x1283,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x128b,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x1293,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x8cf,0x8ee,0x129b,0x48d,0x48d,0xe68,0x12a3,0x5d8,0x12b3,0x12bb,0x12c3,0x12ab,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x565,0x50d,0x12cb,0x48d,0x48d,0x48d,0x5d8,0x5d8,0x12d3,0x12d8,0x12de,0x48d,\n+0x48d,0x12e6,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x12ee,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x8da,0x48d,0x103a,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x8ee,0x48d,0x12f4,0x12fb,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xe01,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x1301,0x1306,0x130e,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0xba7,0x90c,0x1316,0x90c,0x131d,0x1325,0x132b,\n+0x90c,0x1331,0x90c,0x90c,0x1339,0x48d,0x48d,0x48d,0x48d,0x1341,0x90c,0x90c,0xabb,0x1349,0x48d,0x48d,\n+0x48d,0x48d,0x1359,0x1360,0x1365,0x136b,0x1373,0x137b,0x1383,0x135d,0x138b,0x1393,0x139b,0x13a0,0x1372,0x1359,\n+0x1360,0x135c,0x136b,0x13a8,0x135a,0x13ab,0x135d,0x13b3,0x13bb,0x13c3,0x13ca,0x13b6,0x13be,0x13c6,0x13cd,0x13b9,\n+0x13d5,0x1351,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,\n+0x90c,0x90c,0x534,0x13e5,0x534,0x13ec,0x13f3,0x13dd,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x13fa,0x1402,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x5d8,0x1412,0x140a,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x5d8,0x141a,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x1422,0x48d,0x565,0x1432,0x142a,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x143a,0x144a,0x1442,0x48d,0x48d,0x145a,0x1452,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x146a,0x1472,0x147a,0x1482,0x148a,0x1492,0x48d,0x1462,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x90c,0x149a,0x90c,0x90c,0xb9f,0x149f,0x14a3,0xba7,0x14ab,0x90c,0x90c,0x90c,0x90c,0xba9,\n+0x48d,0x14b3,0x14bb,0x14bf,0x14c7,0x14cf,0x48d,0x48d,0x48d,0x48d,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,\n+0x90c,0x14d7,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,\n+0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x90c,0x14df,0x14e7,0x90c,0x90c,0x90c,0xb9f,0x90c,0x90c,\n+0x14ef,0x14f7,0x149a,0x90c,0x14ff,0x90c,0x1507,0x150c,0x48d,0x48d,0x90c,0x90c,0x90c,0x1514,0x90c,0x90c,\n+0x151b,0x90c,0x90c,0x90c,0xb9f,0x1520,0x1528,0x152e,0x1533,0x48d,0x90c,0x90c,0x90c,0x90c,0x153b,0x90c,\n+0xabe,0x117c,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x1543,0x5d8,0x5d8,0x154a,0x5d8,0x5d8,0x5d8,0x1552,0x5d8,0x155a,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0xc80,0x5d8,0x5d8,0x1562,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x156a,0x1572,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0xcbf,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x1579,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x1580,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x1587,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0xf5e,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x158b,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0xf5e,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x1066,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x1590,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x1598,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0xf5e,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,\n+0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x5d8,0x655,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x15a8,0x15a0,0x15a0,0x15a0,0x48d,0x48d,0x48d,0x48d,0x534,0x534,0x534,0x534,0x534,\n+0x534,0x534,0x15b0,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,0x48d,\n+0x48d,0x48d,0x48d,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,0xe19,\n+0xe19,0xe19,0x15b8,0x46c,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,\n@@ -424,12 +428,19 @@\n-5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,\n-6,6,6,6,5,5,6,6,0x17,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,\n-0x1c9,0x209,0x249,0x289,0x17,4,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,6,6,6,8,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,6,8,6,5,8,8,8,6,6,6,\n-6,6,6,6,6,8,8,8,8,6,8,8,5,6,6,6,\n-6,6,6,6,5,5,5,5,5,5,5,5,5,5,6,6,\n-0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,0x19,0x19,\n-0x37cb,0x35cb,0x3fcb,0x34cb,0x3ccb,0x94b,0x1b,0x19,5,0x17,6,0,5,6,8,8,\n-0,5,5,5,5,5,5,5,5,0,0,5,5,0,0,5,\n+5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,6,\n+6,6,6,6,6,6,6,6,6,6,6,6,5,5,6,6,\n+0x17,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,4,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,8,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,\n+6,5,8,8,8,6,6,6,6,6,6,6,6,8,8,8,\n+8,6,8,8,5,6,6,6,6,6,6,6,5,5,5,5,\n+5,5,5,5,5,5,6,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,\n+0x1c9,0x209,0x249,0x289,5,5,0x19,0x19,0x37cb,0x35cb,0x3fcb,0x34cb,0x3ccb,0x94b,0x1b,0x19,\n+5,0x17,6,0,5,6,8,8,0,5,5,5,5,5,5,5,\n+5,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,0,\n+0,0,5,5,5,5,0,0,6,5,8,8,8,6,6,6,\n+6,0,0,8,8,0,0,8,8,6,5,0,0,0,0,0,\n+0,0,0,8,0,0,0,0,5,5,0,5,0,0,0,0,\n+0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,6,6,5,5,\n+5,6,0x17,0,0,0,0,0,0,0,0,0,0,6,6,8,\n+0,5,5,5,5,5,5,0,0,0,0,5,5,0,0,5,\n@@ -437,7 +448,7 @@\n-5,5,5,5,5,0,5,0,0,0,5,5,5,5,0,0,\n-6,5,8,8,8,6,6,6,6,0,0,8,8,0,0,8,\n-8,6,5,0,0,0,0,0,0,0,0,8,0,0,0,0,\n-5,5,0,5,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,\n-0x1c9,0x209,0x249,0x289,6,6,5,5,5,6,0x17,0,0,0,0,0,\n-0,0,0,0,0,6,6,8,0,5,5,5,5,5,5,0,\n-0,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0,5,5,0,5,5,0,5,5,0,0,\n+6,0,8,8,8,6,6,0,0,0,0,6,6,0,0,6,\n+6,6,0,0,0,6,0,0,0,0,0,0,0,5,5,5,\n+5,0,5,0,5,5,6,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,\n+0x1c9,0x209,0x249,0x289,0x17,0x19,0,0,0,0,0,0,0,5,6,6,\n+6,6,6,6,0,6,6,8,0,5,5,5,5,5,5,5,\n+5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,\n@@ -445,6 +456,6 @@\n-0,5,5,0,5,5,0,0,6,0,8,8,8,6,6,0,\n-0,0,0,6,6,0,0,6,6,6,0,0,0,6,0,0,\n-0,0,0,0,0,5,5,5,5,0,5,0,5,5,6,6,\n-0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x19,0,0,\n-0,0,0,0,0,5,6,6,6,6,6,6,0,6,6,8,\n-0,5,5,5,5,5,5,5,5,5,0,5,5,5,0,5,\n+0,5,5,5,5,5,0,0,6,5,8,8,8,6,6,6,\n+6,6,0,6,6,8,0,8,8,6,0,0,5,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,6,\n+0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x1b,5,0x34cb,0x344b,\n+0x3ccb,0x37cb,0x35cb,0x3fcb,0,0,0,0,0,0,0,0,0,6,8,8,\n+0,5,5,5,5,5,5,5,5,0,0,5,5,0,0,5,\n@@ -453,25 +464,10 @@\n-6,5,8,8,8,6,6,6,6,6,0,6,6,8,0,8,\n-8,6,0,0,5,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,5,5,6,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,\n-0x1c9,0x209,0x249,0x289,0x1b,5,0x34cb,0x344b,0x3ccb,0x37cb,0x35cb,0x3fcb,0,0,0,0,\n-0,0,0,0,0,6,8,8,0,5,5,5,5,5,5,5,\n-5,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,\n-0,5,5,5,5,5,0,0,6,5,8,6,8,6,6,6,\n-6,0,0,8,8,0,0,8,8,6,0,0,0,0,0,0,\n-0,0,6,8,0,0,0,0,5,5,0,5,0,0,0,0,\n-0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x7cb,0x1e4b,0x784b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x19,0x1b,0,0,0,0,0,0,0,6,5,\n-0,5,5,5,5,5,5,0,0,0,5,5,5,0,5,5,\n-5,5,0,0,0,5,5,0,5,0,5,5,0,0,0,5,\n-5,0,0,0,5,5,5,0,0,0,5,5,5,5,5,5,\n-5,5,5,5,5,5,0,0,0,0,8,8,6,8,8,0,\n-0,0,8,8,8,0,8,8,8,6,0,0,5,0,0,0,\n-0,0,0,8,0,0,0,0,0,0,0,0,5,5,6,6,\n-0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,\n-0,0,0,0x17,0x54b,0x58b,0x5cb,0x60b,0x58b,0x5cb,0x60b,0x1b,6,8,8,8,\n-6,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,\n-0,5,6,6,6,8,8,8,8,0,6,6,6,0,6,6,\n-6,6,0,0,0,0,0,0,0,6,6,0,5,5,5,0,\n+6,5,8,6,8,6,6,6,6,0,0,8,8,0,0,8,\n+8,6,0,0,0,0,0,0,0,6,6,8,0,0,0,0,\n+5,5,0,5,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,\n+0x1c9,0x209,0x249,0x289,0x7cb,0x1e4b,0x784b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x19,0x1b,0,\n+0,0,0,0,0,0,6,5,0,5,5,5,5,5,5,0,\n+0,0,5,5,5,0,5,5,5,5,0,0,0,5,5,0,\n+5,0,5,5,0,0,0,5,5,0,0,0,5,5,5,0,\n+0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,\n+0,0,8,8,6,8,8,0,0,0,8,8,8,0,8,8,\n+8,6,0,0,5,0,0,0,0,0,0,8,0,0,0,0,\n@@ -479,2 +475,2 @@\n-0x1c9,0x209,0x249,0x289,0,5,5,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,5,6,8,8,0x17,5,5,5,5,5,5,5,\n+0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,0,0x17,0x54b,0x58b,0x5cb,0x60b,\n+0x58b,0x5cb,0x60b,0x1b,6,8,8,8,6,5,5,5,5,5,5,5,\n@@ -483,37 +479,44 @@\n-0,5,5,5,5,5,0,0,6,5,8,6,8,8,8,8,\n-8,0,6,8,8,0,8,8,6,6,0,0,0,0,0,0,\n-0,8,8,0,0,0,0,0,0,0,5,0,5,5,6,6,\n-0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x7cb,0x1e4b,0x784b,0x34cb,\n-0x344b,0x3ccb,0x37cb,0x35cb,0x3fcb,0x1b,5,5,5,5,5,5,6,6,8,8,\n-0,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,6,6,5,8,8,\n-8,6,6,6,6,0,8,8,8,0,8,8,8,6,5,0x1b,\n-0,0,0,0,5,5,5,8,0xcc0b,0xca0b,0xcb4b,0xc90b,0x364b,0xc94b,0x350b,5,\n-0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,\n-0,0,8,8,0x17,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,8,8,0,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,\n-5,5,5,5,5,5,5,5,0,5,0,0,5,5,5,5,\n-5,5,5,0,0,0,6,0,0,0,0,8,8,8,6,6,\n-6,0,6,0,8,8,8,8,8,8,8,8,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,5,\n-6,6,6,6,6,6,6,0,0,0,0,0x19,5,5,5,5,\n-5,5,4,6,6,6,6,6,6,6,6,0x17,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0,0,0,0,0,5,5,0,\n-5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0,5,0,5,\n-5,5,5,5,5,5,5,5,5,6,5,5,6,6,6,6,\n-6,6,6,6,6,5,0,0,5,5,5,5,5,0,4,0,\n-6,6,6,6,6,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0,0,5,5,5,5,5,0x1b,0x1b,0x1b,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x1b,0x17,0x1b,0x1b,0x1b,\n-6,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0x344b,0x3c4b,0x444b,0x4c4b,0x544b,0x5c4b,0x644b,0x6c4b,0x744b,0x2c4b,0x1b,6,0x1b,6,\n-0x1b,6,0x14,0x15,0x14,0x15,8,8,5,5,5,5,5,5,5,5,\n-0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,0,0,0,0,6,6,6,\n-6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,\n-6,0x17,6,6,5,5,5,5,5,6,6,6,6,6,6,6,\n-6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,\n+5,5,5,5,5,5,0,0,0,5,6,6,6,8,8,8,\n+8,0,6,6,6,0,6,6,6,6,0,0,0,0,0,0,\n+0,6,6,0,5,5,5,0,0,0,0,0,5,5,6,6,\n+0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,5,5,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,6,8,8,\n+0x17,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,\n+5,5,5,5,5,5,5,5,0,5,5,5,5,5,0,0,\n+6,5,8,6,8,8,8,8,8,0,6,8,8,0,8,8,\n+6,6,0,0,0,0,0,0,0,8,8,0,0,0,0,0,\n+0,0,5,0,5,5,6,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,\n+0x1c9,0x209,0x249,0x289,0x7cb,0x1e4b,0x784b,0x34cb,0x344b,0x3ccb,0x37cb,0x35cb,0x3fcb,0x1b,5,5,\n+5,5,5,5,6,6,8,8,5,5,5,5,5,5,5,5,\n+5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,6,6,5,8,8,8,6,6,6,6,0,8,8,\n+8,0,8,8,8,6,5,0x1b,0,0,0,0,5,5,5,8,\n+0xcc0b,0xca0b,0xcb4b,0xc90b,0x364b,0xc94b,0x350b,5,0,0,0,0,0,0,0x49,0x89,\n+0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,8,8,0x17,0,0,0,\n+0,0,0,0,0,0,0,0,0,6,8,8,0,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n+0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,\n+0,5,0,0,5,5,5,5,5,5,5,0,0,0,6,0,\n+0,0,0,8,8,8,6,6,6,0,6,0,8,8,8,8,\n+8,8,8,8,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,6,5,5,6,6,6,6,6,6,6,0,\n+0,0,0,0x19,5,5,5,5,5,5,4,6,6,6,6,6,\n+6,6,6,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,\n+0,0,0,0,0,5,5,0,5,0,5,5,5,5,5,0,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0,5,0,5,5,5,5,5,5,5,5,5,\n+5,6,5,5,6,6,6,6,6,6,6,6,6,5,0,0,\n+5,5,5,5,5,0,4,0,6,6,6,6,6,6,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,5,5,5,5,\n+5,0x1b,0x1b,0x1b,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n+0x17,0x17,0x17,0x1b,0x17,0x1b,0x1b,0x1b,6,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x344b,0x3c4b,0x444b,0x4c4b,0x544b,0x5c4b,\n+0x644b,0x6c4b,0x744b,0x2c4b,0x1b,6,0x1b,6,0x1b,6,0x14,0x15,0x14,0x15,8,8,\n+5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,\n+6,6,6,8,6,6,6,6,6,0x17,6,6,5,5,5,5,\n+5,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,\n@@ -521,11 +524,14 @@\n-6,6,6,6,6,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,6,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x17,0x17,0x17,0x17,0x17,0x1b,0x1b,0x1b,\n-0x1b,0x17,0x17,0,0,0,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,8,8,6,6,6,6,8,6,6,6,6,6,6,\n-8,6,6,8,8,6,6,5,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0x17,0x17,0x17,0x17,0x17,0x17,5,5,5,5,5,5,8,8,\n-6,6,5,5,5,5,6,6,6,5,8,8,8,5,5,8,\n-8,8,8,8,8,8,5,5,5,6,6,6,6,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,6,8,8,6,6,8,\n-8,8,8,8,8,6,5,8,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,8,8,8,6,0x1b,0x1b,2,2,2,2,2,2,2,2,\n+6,6,6,6,6,6,6,6,6,6,6,6,6,0,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,\n+0x17,0x17,0x17,0x17,0x17,0x1b,0x1b,0x1b,0x1b,0x17,0x17,0,0,0,0,0,\n+5,5,5,5,5,5,5,5,5,5,5,8,8,6,6,6,\n+6,8,6,6,6,6,6,6,8,6,6,8,8,6,6,5,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0x17,0x17,0x17,0x17,\n+5,5,5,5,5,5,8,8,6,6,5,5,5,5,6,6,\n+6,5,8,8,8,5,5,8,8,8,8,8,8,8,5,5,\n+5,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,6,8,8,6,6,8,8,8,8,8,8,6,5,8,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,8,8,8,6,0x1b,0x1b,\n+2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,0x17,4,2,2,2,\n+1,1,1,1,1,1,0,1,0,0,0,0,0,1,0,0,\n@@ -533,6 +539,0 @@\n-2,2,2,0x17,4,2,2,2,1,1,1,1,1,1,0,1,\n-0,0,0,0,0,1,0,0,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,\n-5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,0,\n-5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,\n-5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,\n@@ -541,1 +541,1 @@\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n+5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,\n@@ -543,0 +543,1 @@\n+5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,0,\n@@ -544,0 +545,2 @@\n+5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,\n@@ -545,7 +548,3 @@\n-5,5,5,0,0,6,6,6,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n-0x17,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,\n-0x16cb,0x194b,0x1bcb,0x1e4b,0x788b,0,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0,0,0,0,0,0,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,\n-2,2,2,2,2,2,0,0,0x13,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,\n+0x4cb,0x50b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x788b,0,0,0,\n@@ -553,2 +552,29 @@\n-5,5,5,5,5,5,5,5,5,0x1b,0x17,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0xc,5,5,5,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,0,0,2,2,2,2,2,2,0,0,\n+0x13,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0x1b,0x17,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0xc,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x14,\n+0x15,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0x17,\n+0x17,0x17,0x98a,0x9ca,0xa0a,5,5,5,5,5,5,5,5,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0,5,5,5,5,6,6,6,0,0,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,6,6,6,0x17,0x17,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,6,6,0,0,0,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0,5,5,5,0,6,6,0,0,0,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,6,6,8,6,6,6,6,6,\n+6,6,8,8,8,8,8,8,8,8,6,8,8,6,6,6,\n+6,6,6,6,6,6,6,6,0x17,0x17,0x17,4,0x17,0x17,0x17,0x19,\n+5,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n+0,0,0,0,0x54b,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,6,5,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0x17,0x17,0x17,0x17,0x17,0x17,0x13,0x17,0x17,0x17,0x17,6,\n+6,6,0x10,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n+0,0,0,0,5,5,5,4,5,5,5,5,5,5,5,5,\n@@ -556,2 +582,0 @@\n-5,5,5,5,5,5,5,0x14,0x15,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,0x17,0x17,0x17,0x98a,0x9ca,0xa0a,5,5,5,\n@@ -559,28 +583,1 @@\n-5,5,5,5,5,5,5,5,5,0,5,5,5,5,6,6,\n-6,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,\n-6,0x17,0x17,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,0,5,5,5,0,6,6,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-6,6,8,6,6,6,6,6,6,6,8,8,8,8,8,8,\n-8,8,6,8,8,6,6,6,6,6,6,6,6,6,6,6,\n-0x17,0x17,0x17,4,0x17,0x17,0x17,0x19,5,6,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,0x54b,0x58b,0x5cb,0x60b,\n-0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,6,5,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x13,0x17,0x17,0x17,0x17,6,6,6,0x10,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,5,5,5,4,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,\n-0,0,0,0,5,5,5,5,5,6,6,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,\n-6,6,6,8,8,8,8,6,6,8,8,8,0,0,0,0,\n-8,8,6,8,8,8,8,8,8,6,6,6,0,0,0,0,\n-0x1b,0,0,0,0x17,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n+5,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,\n@@ -588,2 +585,4 @@\n-5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,\n+0,0,0,0,0,0,0,0,6,6,6,8,8,8,8,6,\n+6,8,8,8,0,0,0,0,8,8,6,8,8,8,8,8,\n+8,6,6,6,0,0,0,0,0x1b,0,0,0,0x17,0x17,0x49,0x89,\n+0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,5,5,5,5,5,5,\n@@ -591,2 +590,7 @@\n-5,5,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0x30b,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,0,0,5,5,5,5,5,0,0,0,\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x30b,0,0,0,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n@@ -594,27 +598,0 @@\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,\n-6,8,8,6,0,0,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,4,\n-0x17,0x17,0x17,0x17,0x17,0x17,0,0,6,6,6,6,6,6,6,6,\n-6,6,6,6,6,6,7,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,8,6,8,\n-6,6,6,6,6,6,6,0,6,8,6,8,8,6,6,6,\n-6,6,6,6,6,8,8,8,8,8,8,6,6,6,6,6,\n-6,6,6,6,6,0,0,6,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0,0,0,0,0,0,0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,6,6,6,6,6,6,6,6,6,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,6,6,6,6,8,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,6,8,6,6,6,6,6,8,\n-6,8,8,8,8,8,6,8,8,5,5,5,5,5,5,5,\n-0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,\n-0x17,0x17,0x17,0x17,5,8,6,6,6,6,8,8,6,6,8,6,\n-6,6,5,5,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,\n-5,5,5,5,6,6,8,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,6,8,6,6,8,8,8,6,8,6,\n-6,6,8,8,0,0,0,0,0,0,0,0,0x17,0x17,0x17,0x17,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,5,5,5,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,5,5,5,5,\n-8,8,8,8,8,8,8,8,6,6,6,6,6,6,6,6,\n-8,8,6,6,0,0,0,0x17,0x17,0x17,0x17,0x17,5,5,5,5,\n@@ -622,9 +599,37 @@\n-5,5,5,5,4,4,4,4,4,4,0x17,0x17,2,2,2,2,\n-2,2,2,2,2,0,0,0,0,0,0,0,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0,0,1,1,1,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,6,6,6,0x17,\n-6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,\n-6,6,6,6,6,5,5,5,5,6,5,5,5,5,5,5,\n-6,5,5,8,6,6,5,0,0,0,0,0,2,2,2,2,\n-2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,\n+5,5,5,5,5,5,5,6,6,8,8,6,0,0,0x17,0x17,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,4,0x17,0x17,0x17,0x17,0x17,0x17,0,0,\n+6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,8,6,8,6,6,6,6,6,6,6,0,\n+6,8,6,8,8,6,6,6,6,6,6,6,6,8,8,8,\n+8,8,8,6,6,6,6,6,6,6,6,6,6,0,0,6,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+0x17,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,6,6,6,6,6,\n+6,6,6,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,\n+6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+6,6,6,6,8,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+6,8,6,6,6,6,6,8,6,8,8,8,8,8,6,8,\n+8,5,5,5,5,5,5,5,0,0,0,0,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0x17,0x17,0x17,0x17,5,8,6,6,\n+6,6,8,8,6,6,8,6,6,6,5,5,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,5,5,5,5,6,6,8,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,\n+6,6,8,8,8,6,8,6,6,6,8,8,0,0,0,0,\n+0,0,0,0,0x17,0x17,0x17,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,5,5,5,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,5,5,5,5,5,5,8,8,8,8,8,8,8,8,\n+6,6,6,6,6,6,6,6,8,8,6,6,0,0,0,0x17,\n+0x17,0x17,0x17,0x17,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,\n+4,4,0x17,0x17,2,2,2,2,2,2,2,2,2,0,0,0,\n+0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,\n+0,1,1,1,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,0,0,0,\n+0,0,0,0,6,6,6,0x17,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,8,6,6,6,6,6,6,6,5,5,5,\n+5,6,5,5,5,5,5,5,6,5,5,8,6,6,5,0,\n+0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,\n@@ -632,33 +637,34 @@\n-4,4,4,4,4,4,4,4,4,4,4,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,4,4,4,4,4,6,6,6,6,\n-6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n-6,6,6,6,6,6,0,6,6,6,6,6,1,2,1,2,\n-1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,\n-1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,\n-2,2,2,2,1,1,1,1,1,0x1a,0x1a,0x1a,0,0,2,2,\n-2,0,2,2,1,1,1,1,3,0x1a,0x1a,0,2,2,2,2,\n-2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,\n-2,2,0,0,1,1,1,1,1,1,0,0,2,2,2,2,\n-2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,\n-2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,\n-2,2,0,0,1,1,1,1,1,1,0,0,2,2,2,2,\n-2,2,2,2,0,1,0,1,0,1,0,1,2,2,2,2,\n-2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,\n-2,2,2,2,3,3,3,3,3,3,3,3,2,2,2,2,\n-2,2,2,2,3,3,3,3,3,3,3,3,2,2,2,2,\n-2,0,2,2,1,1,1,1,3,0x1a,2,0x1a,0x1a,0x1a,2,2,\n-2,0,2,2,1,1,1,1,3,0x1a,0x1a,0x1a,2,2,2,2,\n-0,0,2,2,1,1,1,1,0,0x1a,0x1a,0x1a,0x16,0x17,0x17,0x17,\n-0x18,0x14,0x15,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x18,0x17,\n-0x16,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0xc,0x10,0x10,0x10,0x10,\n-0x10,0,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x2cb,4,0,0,\n-0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x18,0x18,0x18,0x14,0x15,4,0xc,0xc,0xc,0xc,\n-0xc,0xc,0xc,0xc,0xc,0xc,0xc,0x10,0x10,0x10,0x10,0x10,0x13,0x13,0x13,0x13,\n-0x13,0x13,0x17,0x17,0x1c,0x1d,0x14,0x1c,0x1c,0x1d,0x14,0x1c,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0xd,0xe,0x10,0x10,0x10,0x10,0x10,0xc,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0x17,0x1c,0x1d,0x17,0x17,0x17,0x17,0x16,0x2cb,0x30b,0x34b,0x38b,\n-0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x18,0x18,0x18,0x14,0x15,0,4,4,4,4,\n-4,4,4,4,4,4,4,4,4,0,0,0,0x19,0x19,0x19,0x19,\n+4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n+4,4,4,2,2,2,2,2,2,2,2,2,2,2,2,2,\n+4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,\n+4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,\n+6,6,6,6,1,2,1,2,1,2,1,2,1,2,1,2,\n+1,2,1,2,1,2,1,2,1,2,2,2,2,2,2,2,\n+2,2,1,2,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,0x1a,0x1a,0x1a,0,0,2,2,2,0,2,2,1,1,1,1,\n+3,0x1a,0x1a,0,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,1,1,1,2,2,2,2,2,2,0,0,1,1,1,1,\n+1,1,0,0,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,1,1,1,2,2,2,2,2,2,0,0,1,1,1,1,\n+1,1,0,0,2,2,2,2,2,2,2,2,0,1,0,1,\n+0,1,0,1,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,0,0,2,2,2,2,2,2,2,2,3,3,3,3,\n+3,3,3,3,2,2,2,2,2,2,2,2,3,3,3,3,\n+3,3,3,3,2,2,2,2,2,0,2,2,1,1,1,1,\n+3,0x1a,2,0x1a,0x1a,0x1a,2,2,2,0,2,2,1,1,1,1,\n+3,0x1a,0x1a,0x1a,2,2,2,2,0,0,2,2,1,1,1,1,\n+0,0x1a,0x1a,0x1a,0x16,0x17,0x17,0x17,0x18,0x14,0x15,0x17,0x17,0x17,0x17,0x17,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x18,0x17,0x16,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n+0x17,0x17,0x17,0xc,0x10,0x10,0x10,0x10,0x10,0,0x10,0x10,0x10,0x10,0x10,0x10,\n+0x10,0x10,0x10,0x10,0x2cb,4,0,0,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x18,0x18,\n+0x18,0x14,0x15,4,0xc,0xc,0xc,0xc,0xc,0xc,0xc,0xc,0xc,0xc,0xc,0x10,\n+0x10,0x10,0x10,0x10,0x13,0x13,0x13,0x13,0x13,0x13,0x17,0x17,0x1c,0x1d,0x14,0x1c,\n+0x1c,0x1d,0x14,0x1c,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0xd,0xe,0x10,0x10,\n+0x10,0x10,0x10,0xc,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x1c,0x1d,0x17,\n+0x17,0x17,0x17,0x16,0x2cb,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x18,0x18,\n+0x18,0x14,0x15,0,4,4,4,4,4,4,4,4,4,4,4,4,\n+4,0,0,0,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,\n@@ -666,25 +672,14 @@\n-0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0x19,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,\n-6,6,6,6,6,6,6,6,6,7,7,7,7,6,7,7,\n-7,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n-1,0x1b,1,0x1b,1,0x1b,1,1,1,1,0x1b,2,1,1,1,1,\n-2,5,5,5,5,2,0x1b,0x1b,2,2,1,1,0x18,0x18,0x18,0x18,\n-0x18,1,2,2,2,2,0x1b,0x18,0x1b,0x1b,2,0x1b,0x358b,0x360b,0x364b,0x348b,\n-0x388b,0x350b,0x390b,0x3d0b,0x410b,0x354b,0x454b,0x35cb,0x3dcb,0x45cb,0x4dcb,0x58b,0x1b,0x1b,1,0x1b,\n-0x1b,0x1b,0x1b,1,0x1b,0x1b,2,1,1,1,2,2,1,1,1,2,\n-0x1b,1,0x1b,0x1b,0x18,1,1,1,1,1,0x1b,0x1b,0x58a,0x5ca,0x60a,0x64a,\n-0x68a,0x6ca,0x70a,0x74a,0x78a,0x7ca,0x80a,0x84a,0x11ca,0x1e4a,0x980a,0x784a,0x58a,0x5ca,0x60a,0x64a,\n-0x68a,0x6ca,0x70a,0x74a,0x78a,0x7ca,0x80a,0x84a,0x11ca,0x1e4a,0x980a,0x784a,0x784a,0x984a,0x788a,1,\n-2,0x6ca,0x11ca,0x988a,0x78ca,0x54b,0x1b,0x1b,0,0,0,0,0x18,0x18,0x18,0x18,\n-0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x18,0x1b,0x1b,0x18,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x1b,0x1b,0x18,0x1b,\n-0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x14,0x15,0x14,0x15,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x14,0x15,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x19,0x19,0x19,0x19,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,\n+6,7,7,7,7,6,7,7,7,6,6,6,6,6,6,6,\n+6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x1b,0x1b,0x1b,0x1b,1,0x1b,1,0x1b,1,0x1b,1,1,\n+1,1,0x1b,2,1,1,1,1,2,5,5,5,5,2,0x1b,0x1b,\n+2,2,1,1,0x18,0x18,0x18,0x18,0x18,1,2,2,2,2,0x1b,0x18,\n+0x1b,0x1b,2,0x1b,0x358b,0x360b,0x364b,0x348b,0x388b,0x350b,0x390b,0x3d0b,0x410b,0x354b,0x454b,0x35cb,\n+0x3dcb,0x45cb,0x4dcb,0x58b,0x1b,0x1b,1,0x1b,0x1b,0x1b,0x1b,1,0x1b,0x1b,2,1,\n+1,1,2,2,1,1,1,2,0x1b,1,0x1b,0x1b,0x18,1,1,1,\n+1,1,0x1b,0x1b,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x7ca,0x80a,0x84a,\n+0x11ca,0x1e4a,0x980a,0x784a,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x7ca,0x80a,0x84a,\n+0x11ca,0x1e4a,0x980a,0x784a,0x784a,0x984a,0x788a,1,2,0x6ca,0x11ca,0x988a,0x78ca,0x54b,0x1b,0x1b,\n+0,0,0,0,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,\n@@ -692,1 +687,2 @@\n-0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n+0x18,0x1b,0x1b,0x18,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,\n@@ -694,2 +690,4 @@\n-0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x18,0x18,0x1b,0x1b,0x18,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x14,0x15,0x14,0x15,\n@@ -697,1 +695,1 @@\n-0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x14,0x15,0x1b,\n@@ -699,7 +697,1 @@\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x2cb,0x80b,\n-0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0xa4b,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,\n-0x4cb,0x50b,0x7cb,0x2cb,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x80b,0x84b,\n-0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0xa4b,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,\n-0x50b,0x7cb,0x80b,0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0xa4b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,\n@@ -707,1 +699,2 @@\n-0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n@@ -709,1 +702,2 @@\n-0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n@@ -711,1 +705,11 @@\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,\n+0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x2cb,0x80b,0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,\n+0xa4b,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x2cb,0x30b,0x34b,0x38b,0x3cb,\n+0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x80b,0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0xa4b,\n+0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x80b,0x84b,0x88b,0x8cb,0x90b,0x94b,\n+0x98b,0x9cb,0xa0b,0xa4b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n@@ -713,4 +717,6 @@\n-0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x30b,0x34b,\n-0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,\n-0x50b,0x7cb,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x14,0x15,0x18,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,\n+0x14,0x15,0x14,0x15,0x14,0x15,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,\n+0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,\n+0x48b,0x4cb,0x50b,0x7cb,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x18,0x18,0x18,0x18,0x18,0x14,0x15,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n@@ -718,4 +724,4 @@\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x14,0x15,0x14,0x15,0x14,0x15,\n-0x14,0x15,0x14,0x15,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,\n-0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x18,0x18,0x18,\n+0x18,0x18,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x14,\n+0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,\n+0x15,0x14,0x15,0x14,0x15,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n@@ -723,1 +729,1 @@\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x14,0x15,0x14,0x15,0x18,0x18,0x18,0x18,\n+0x14,0x15,0x14,0x15,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n@@ -725,5 +731,3 @@\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x14,0x15,0x18,0x18,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0x1b,0x1b,\n+0x14,0x15,0x18,0x18,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n+0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x18,0x18,0x18,0x18,0x18,0x18,0x1b,0x1b,0x1b,\n@@ -731,4 +735,3 @@\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,\n+0x1b,0x1b,0x1b,0x1b,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,2,2,2,2,2,2,2,2,\n@@ -736,8 +739,10 @@\n-1,2,1,1,1,2,2,1,2,1,2,1,2,1,1,1,\n-1,2,1,2,2,1,2,2,2,2,2,2,4,4,1,1,\n-1,2,1,2,2,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,1,2,1,2,6,\n-6,6,1,2,0,0,0,0,0,0x17,0x17,0x17,0x17,0x344b,0x17,0x17,\n-2,2,2,2,2,2,0,2,0,0,0,0,0,2,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-0,0,0,0,0,0,0,4,0x17,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,6,5,5,5,5,5,5,5,0,\n+2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,1,2,1,1,1,2,2,1,\n+2,1,2,1,2,1,1,1,1,2,1,2,2,1,2,2,\n+2,2,2,2,4,4,1,1,1,2,1,2,2,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,1,2,1,2,6,6,6,1,2,0,0,0,0,\n+0,0x17,0x17,0x17,0x17,0x344b,0x17,0x17,2,2,2,2,2,2,0,2,\n+0,0,0,0,0,2,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,4,\n+0x17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,\n@@ -745,9 +750,11 @@\n-5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n-0,0,0,0,0,0,0,0,0x17,0x17,0x1c,0x1d,0x1c,0x1d,0x17,0x17,\n-0x17,0x1c,0x1d,0x17,0x1c,0x1d,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x13,\n-0x17,0x17,0x13,0x17,0x1c,0x1d,0x17,0x17,0x1c,0x1d,0x14,0x15,0x14,0x15,0x14,0x15,\n-0x14,0x15,0x17,0x17,0x17,0x17,0x17,4,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x13,0x13,0x17,0x17,0x17,0x17,0x13,0x17,0x14,0x17,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,\n+0x17,0x17,0x1c,0x1d,0x1c,0x1d,0x17,0x17,0x17,0x1c,0x1d,0x17,0x1c,0x1d,0x17,0x17,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x13,0x17,0x17,0x13,0x17,0x1c,0x1d,0x17,0x17,\n+0x1c,0x1d,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x17,0x17,0x17,0x17,0x17,4,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x13,0x13,0x17,0x17,0x17,0x17,\n+0x13,0x17,0x14,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n+0x1b,0x1b,0x17,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,\n@@ -755,4 +762,0 @@\n-0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,\n@@ -760,5 +763,25 @@\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0x1b,0x58a,0x5ca,0x60a,\n-0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,6,6,6,6,8,8,0x13,4,4,4,\n-4,4,0x1b,0x1b,0x7ca,0xa4a,0xcca,4,5,0x17,0x1b,0x1b,0xc,0x17,0x17,0x17,\n-0x1b,4,5,0x54a,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x1b,0x1b,\n-0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x13,0x14,0x15,0x15,5,5,5,5,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0,0,0,0,0x1b,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,6,6,\n+6,6,8,8,0x13,4,4,4,4,4,0x1b,0x1b,0x7ca,0xa4a,0xcca,4,\n+5,0x17,0x1b,0x1b,0xc,0x17,0x17,0x17,0x1b,4,5,0x54a,0x14,0x15,0x14,0x15,\n+0x14,0x15,0x14,0x15,0x14,0x15,0x1b,0x1b,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,\n+0x13,0x14,0x15,0x15,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,0x1a,\n+0x1a,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x17,\n+4,4,4,5,0,0,0,0,0,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,0,0x1b,0x1b,0x58b,0x5cb,0x60b,0x64b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1b,0xa8b,0xacb,0xb0b,\n+0xb4b,0xb8b,0xbcb,0xc0b,0xc4b,0xc8b,0xccb,0xd0b,0xd4b,0xd8b,0xdcb,0xe0b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0xe4b,0xe8b,0xecb,\n+0xf0b,0xf4b,0xf8b,0xfcb,0x100b,0x104b,0x108b,0x10cb,0x110b,0x114b,0x118b,0x11cb,5,5,5,5,\n+5,0x685,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x5c5,\n@@ -766,1 +789,1 @@\n-5,5,5,0,0,6,6,0x1a,0x1a,4,4,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x685,5,\n@@ -768,5 +791,3 @@\n-5,5,5,5,5,5,5,0x17,4,4,4,5,0,0,0,0,\n-0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n-0x1b,0x1b,0x58b,0x5cb,0x60b,0x64b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+5,5,5,5,5,0x705,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,0x585,5,5,0x705,5,5,5,0x7885,\n+5,0x605,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n@@ -774,2 +795,2 @@\n-5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,\n-0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,0,0,\n+5,0x785,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x5c5,5,5,5,5,5,5,5,0x685,5,0x645,5,5,5,5,5,\n@@ -777,6 +798,1 @@\n-0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1b,0xa8b,0xacb,0xb0b,0xb4b,0xb8b,0xbcb,0xc0b,\n-0xc4b,0xc8b,0xccb,0xd0b,0xd4b,0xd8b,0xdcb,0xe0b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0xe4b,0xe8b,0xecb,0xf0b,0xf4b,0xf8b,0xfcb,\n-0x100b,0x104b,0x108b,0x10cb,0x110b,0x114b,0x118b,0x11cb,5,5,5,5,5,0x685,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,0x7985,0x7c5,5,5,5,\n@@ -784,1 +800,3 @@\n-5,5,5,5,5,5,5,5,5,5,5,0x5c5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,0x7845,5,5,5,5,\n+5,5,5,5,0x605,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,0x685,5,5,\n@@ -786,4 +804,3 @@\n-5,5,5,5,5,5,5,5,5,5,0x685,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,0x705,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,0x585,5,5,0x705,5,5,5,0x7885,5,0x605,5,5,\n+0x1e45,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x7985,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x7a85,5,\n@@ -791,3 +808,1 @@\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0x785,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x5c5,5,5,5,\n-5,5,5,5,0x685,5,0x645,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0x5c5,5,0x745,5,0x6c5,5,5,\n@@ -795,1 +810,1 @@\n-5,5,5,5,5,5,5,0x7985,0x7c5,5,5,5,5,5,5,5,\n+5,0x7c5,5,0x7845,0xa45,0xcc5,5,5,5,5,5,5,0xf45,5,5,5,\n@@ -797,5 +812,1 @@\n-5,5,5,5,5,5,5,0x7845,5,5,5,5,5,5,5,5,\n-0x605,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,0x685,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x1e45,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x7985,5,5,5,\n+5,0x605,0x605,0x605,0x605,5,5,5,5,5,5,5,5,5,5,5,\n@@ -803,1 +814,2 @@\n-5,5,5,5,5,5,5,5,5,5,0x7a85,5,5,5,5,5,\n+5,5,5,0x645,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0x585,5,5,5,5,5,5,5,0x585,5,5,\n@@ -805,6 +817,1 @@\n-5,5,5,5,5,0x5c5,5,0x745,5,0x6c5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0x7c5,5,0x7845,\n-0xa45,0xcc5,5,5,5,5,5,5,0xf45,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0x605,0x605,0x605,\n-0x605,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x645,\n+5,5,5,5,5,5,5,5,5,5,0x585,5,5,5,5,5,\n@@ -812,1 +819,2 @@\n-5,0x585,5,5,5,5,5,5,5,0x585,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0x785,0xa45,5,5,5,5,\n+5,5,5,5,5,5,5,5,0x585,0x5c5,0x605,5,0x5c5,5,5,5,\n@@ -814,1 +822,2 @@\n-5,5,5,5,5,5,0x585,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x7c5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,0x745,5,5,5,\n@@ -816,2 +825,2 @@\n-5,5,5,5,5,5,0x785,0xa45,5,5,5,5,5,5,5,5,\n-5,5,5,5,0x585,0x5c5,0x605,5,0x5c5,5,5,5,5,5,5,5,\n+5,5,0x705,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x785,5,\n@@ -819,3 +828,2 @@\n-5,5,5,5,5,5,5,5,5,5,0x7c5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0x745,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x705,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x1e45,5,\n+5,5,5,5,5,5,0x645,5,5,5,5,5,5,5,5,5,\n@@ -823,1 +831,4 @@\n-5,5,5,5,5,5,5,5,5,5,0x785,5,5,5,5,5,\n+0x7885,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,0x5c5,5,5,5,5,0x5c5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,0x5c5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,0x7845,5,5,\n@@ -825,3 +836,2 @@\n-5,5,5,5,5,5,5,5,5,5,0x1e45,5,5,5,5,5,\n-5,5,0x645,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x7885,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x6c5,5,\n+5,5,5,5,0x1e45,5,5,5,5,5,5,5,5,5,5,5,\n@@ -829,3 +839,4 @@\n-5,5,0x5c5,5,5,5,5,0x5c5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0x5c5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,0x7845,5,5,5,5,5,5,\n+0x6c5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0x545,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,5,5,5,5,\n@@ -833,3 +844,3 @@\n-5,5,5,5,5,5,5,5,5,5,0x6c5,5,5,5,5,5,\n-0x1e45,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x6c5,5,5,5,\n+5,4,5,5,5,5,5,5,5,5,5,5,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,4,0x17,0x17,0x17,\n@@ -837,20 +848,1 @@\n-5,5,5,5,5,5,0x545,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,\n-5,5,5,5,5,5,5,5,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,\n-0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,4,0x17,0x17,0x17,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,\n-1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,\n-1,2,1,2,1,2,1,2,4,4,6,6,1,2,1,2,\n-1,2,1,2,1,2,1,2,1,2,5,6,7,7,7,0x17,\n-6,6,6,6,6,6,6,6,6,6,0x17,4,5,5,5,5,\n-5,5,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x54a,6,6,0x17,0x17,\n-0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,0x1a,0x1a,0x1a,0x1a,\n-0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,\n-0x1a,0x1a,0x1a,4,4,4,4,4,4,4,4,4,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,0,0,0,0,\n@@ -858,2 +850,0 @@\n-0,0,0,5,4,4,2,5,5,5,5,5,0x1a,0x1a,1,2,\n-1,2,1,2,1,2,1,2,1,2,1,2,2,2,1,2,\n@@ -861,5 +851,7 @@\n-4,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,\n-1,2,1,2,1,2,1,2,4,0x1a,0x1a,1,2,1,2,5,\n-1,2,1,2,2,2,1,2,1,2,1,2,1,2,1,2,\n-1,2,1,1,1,1,1,2,1,1,1,1,1,2,1,2,\n-1,2,1,2,1,2,1,2,0,0,1,2,1,1,1,0,\n+1,2,1,2,1,2,1,2,1,2,1,2,4,4,6,6,\n+1,2,1,2,1,2,1,2,1,2,1,2,1,2,5,6,\n+7,7,7,0x17,6,6,6,6,6,6,6,6,6,6,0x17,4,\n+5,5,5,5,5,5,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x54a,\n+6,6,0x17,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,\n+0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,\n+0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,4,4,4,4,4,4,4,4,4,\n@@ -867,45 +859,55 @@\n-0,0,0,0,0,0,0,0,5,5,6,5,5,5,6,5,\n-5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,8,8,6,6,8,\n-0x1b,0x1b,0x1b,0x1b,0,0,0,0,0x34cb,0x344b,0x3ccb,0x37cb,0x35cb,0x3fcb,0x1b,0x1b,\n-0x19,0x1b,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x17,0x17,0x17,0x17,\n-0,0,0,0,0,0,0,0,8,8,8,8,6,6,0,0,\n-0,0,0,0,0,0,0x17,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0,0,0,0,0,0,8,8,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,8,8,8,8,8,8,8,8,\n-8,8,8,8,6,6,6,6,6,6,6,6,6,6,6,6,\n-6,6,6,6,6,6,5,5,5,5,5,5,0x17,0x17,0x17,5,\n-0x17,5,5,6,5,5,5,5,5,5,6,6,6,6,6,6,\n-6,6,0x17,0x17,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,\n-6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0x17,\n-8,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,4,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0x17,0x17,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,6,8,8,6,6,6,6,8,8,6,6,8,8,\n-5,5,5,5,5,6,4,5,5,5,5,5,5,5,5,5,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,5,5,5,0,\n-5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,8,\n-8,6,6,8,8,6,6,0,0,0,0,0,0,0,0,0,\n-5,5,5,6,5,5,5,5,5,5,5,5,6,8,0,0,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0x17,0x17,0x17,0x17,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-4,5,5,5,5,5,5,0x1b,0x1b,0x1b,5,8,6,8,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-6,5,6,6,6,5,5,6,6,5,5,5,5,5,6,6,\n-5,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,5,5,4,0x17,0x17,\n-5,5,5,5,5,5,5,5,5,5,5,8,6,6,8,8,\n-0x17,0x17,5,4,4,8,6,0,0,0,0,0,0,0,0,0,\n-0,5,5,5,5,5,5,0,0,5,5,5,5,5,5,0,\n-0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,\n-5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,\n-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,2,0x1a,4,4,4,4,\n-2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,\n-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-5,5,5,8,8,6,8,8,6,8,8,0x17,8,6,0,0,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n-5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,1,2,5,4,4,2,5,5,5,5,5,\n+0x1a,0x1a,1,2,1,2,1,2,1,2,1,2,1,2,1,2,\n+2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,\n+1,2,1,2,4,2,2,2,2,2,2,2,2,1,2,1,\n+2,1,1,2,1,2,1,2,1,2,1,2,4,0x1a,0x1a,1,\n+2,1,2,5,1,2,1,2,2,2,1,2,1,2,1,2,\n+1,2,1,2,1,2,1,1,1,1,1,2,1,1,1,1,\n+1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,\n+1,1,1,1,2,1,2,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,5,\n+5,5,6,5,5,5,5,6,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,\n+8,6,6,8,0x1b,0x1b,0x1b,0x1b,6,0,0,0,0x34cb,0x344b,0x3ccb,0x37cb,\n+0x35cb,0x3fcb,0x1b,0x1b,0x19,0x1b,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,8,8,8,8,\n+6,6,0,0,0,0,0,0,0,0,0x17,0x17,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,8,8,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,\n+8,8,8,8,8,8,8,8,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,\n+0x17,0x17,0x17,5,0x17,5,5,6,5,5,5,5,5,5,6,6,\n+6,6,6,6,6,6,0x17,0x17,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,\n+6,6,6,6,6,6,8,8,0,0,0,0,0,0,0,0,\n+0,0,0,0x17,8,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n+0x17,0x17,0,4,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n+0,0,0x17,0x17,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,6,8,8,6,6,6,6,8,8,\n+6,6,8,8,5,5,5,5,5,6,4,5,5,5,5,5,\n+5,5,5,5,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,5,5,\n+5,5,5,0,5,5,5,5,5,5,5,5,5,6,6,6,\n+6,6,6,8,8,6,6,8,8,6,6,0,0,0,0,0,\n+0,0,0,0,5,5,5,6,5,5,5,5,5,5,5,5,\n+6,8,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n+0x17,0x17,0x17,0x17,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,4,5,5,5,5,5,5,0x1b,0x1b,0x1b,5,8,\n+6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,6,5,6,6,6,5,5,6,6,5,5,5,\n+5,5,6,6,5,6,5,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,\n+5,4,0x17,0x17,5,5,5,5,5,5,5,5,5,5,5,8,\n+6,6,8,8,0x17,0x17,5,4,4,8,6,0,0,0,0,0,\n+0,0,0,0,0,5,5,5,5,5,5,0,0,5,5,5,\n+5,5,5,0,0,5,5,5,5,5,5,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,0,5,5,5,5,\n+5,5,5,0,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0x1a,\n+4,4,4,4,2,2,2,2,2,2,2,2,2,4,0x1a,0x1a,\n+0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,5,5,5,8,8,6,8,8,6,8,8,0x17,\n+8,6,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n+0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n@@ -913,2 +915,1 @@\n-5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,\n-5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,\n+0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,5,\n@@ -916,0 +917,1 @@\n+5,5,5,5,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n@@ -917,2 +919,1 @@\n-0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,0x12,\n-0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,\n+0x12,0x12,0x12,0x12,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,\n@@ -920,21 +921,18 @@\n-5,5,5,5,5,5,5,5,5,5,5,0x605,5,5,5,5,\n-5,5,5,0x7c5,5,5,5,5,0x5c5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0x6c5,5,0x6c5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0x7c5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,0x18,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n-5,5,5,5,5,0,5,0,5,5,0,5,5,0,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,0,\n-0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,\n-0,0,0,0,0,5,6,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,\n-0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,0x15,0x14,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,\n+0x11,0x11,0x11,0x11,5,5,5,5,5,5,5,5,5,5,5,0x605,\n+5,5,5,5,5,5,5,0x7c5,5,5,5,5,0x5c5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0x6c5,5,0x6c5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0x7c5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0x18,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,0,5,5,5,5,5,0,5,0,5,5,0,5,\n+5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,\n+2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,\n+2,2,2,2,0,0,0,0,0,5,6,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x1a,0x1a,\n+0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0x1a,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0x15,0x14,\n@@ -942,9 +940,0 @@\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-0x19,0x1b,0,0,6,6,6,6,6,6,6,6,6,6,6,6,\n-6,6,6,6,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x14,0x15,0x17,0,0,\n-0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,\n-6,6,6,6,0x17,0x13,0x13,0x16,0x16,0x14,0x15,0x14,0x15,0x14,0x15,0x14,\n-0x15,0x14,0x15,0x14,0x15,0x17,0x17,0x14,0x15,0x17,0x17,0x17,0x17,0x16,0x16,0x16,\n-0x17,0x17,0x17,0,0x17,0x17,0x17,0x17,0x13,0x14,0x15,0x14,0x15,0x14,0x15,0x17,\n-0x17,0x17,0x18,0x13,0x18,0x18,0x18,0,0x17,0x19,0x17,0x17,0,0,0,0,\n-5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,\n@@ -952,7 +941,19 @@\n-5,5,5,5,5,0,0,0x10,0,0,5,5,5,5,5,5,\n-0,0,5,5,5,5,5,5,0,0,5,5,5,5,5,5,\n-0,0,5,5,5,0,0,0,0x19,0x19,0x18,0x1a,0x1b,0x19,0x19,0,\n-0x1b,0x18,0x18,0x18,0x18,0x1b,0x1b,0,0,0,0,0,0,0,0,0,\n-0,0x10,0x10,0x10,0x1b,0x1b,0,0,0,0x17,0x17,0x17,0x19,0x17,0x17,0x17,\n-0x14,0x15,0x17,0x18,0x17,0x13,0x17,0x17,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0x17,0x17,0x18,0x18,0x18,0x17,0x1a,2,2,2,2,2,2,2,\n+0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,0x19,0x1b,0,0,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,6,6,6,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x14,\n+0x15,0x17,0,0,0,0,0,0,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,6,6,6,0x17,0x13,0x13,0x16,0x16,0x14,0x15,0x14,\n+0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x14,0x15,0x17,0x17,0x14,0x15,0x17,0x17,0x17,\n+0x17,0x16,0x16,0x16,0x17,0x17,0x17,0,0x17,0x17,0x17,0x17,0x13,0x14,0x15,0x14,\n+0x15,0x14,0x15,0x17,0x17,0x17,0x18,0x13,0x18,0x18,0x18,0,0x17,0x19,0x17,0x17,\n+0,0,0,0,5,5,5,5,5,0,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0,0,0x10,0,0,5,5,\n+5,5,5,5,0,0,5,5,5,5,5,5,0,0,5,5,\n+5,5,5,5,0,0,5,5,5,0,0,0,0x19,0x19,0x18,0x1a,\n+0x1b,0x19,0x19,0,0x1b,0x18,0x18,0x18,0x18,0x1b,0x1b,0,0,0,0,0,\n+0,0,0,0,0,0x10,0x10,0x10,0x1b,0x1b,0,0,0,0x17,0x17,0x17,\n+0x19,0x17,0x17,0x17,0x14,0x15,0x17,0x18,0x17,0x13,0x17,0x17,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0x18,0x18,0x18,0x17,0x1a,2,2,2,\n@@ -960,2 +961,2 @@\n-2,2,2,0x14,0x18,0x15,0x18,0x14,0x15,0x17,0x14,0x15,0x17,0x17,5,5,\n-5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,\n+2,2,2,2,2,2,2,0x14,0x18,0x15,0x18,0x14,0x15,0x17,0x14,0x15,\n+0x17,0x17,5,5,5,5,5,5,5,5,5,5,4,5,5,5,\n@@ -963,3 +964,2 @@\n-5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,\n-5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,\n+5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,\n@@ -967,13 +967,16 @@\n-5,5,5,0,5,5,0,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,0,0,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0x984b,0xa04b,\n-0xa84b,0xb04b,0xb84b,0x788b,0x808b,0x888b,0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0,0,0,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x17,0x17,0,0,0,0,0x58b,\n-0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,\n-0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0x7ca,0x7ca,0x7ca,0x7ca,0x7ca,0xcca,0x11ca,0x11ca,\n-0x11ca,0x11ca,0x1e4a,0x880a,0x980a,0x980a,0x980a,0x980a,0x980a,0x784a,0x984a,0x68a,0x11ca,0x344b,0x344b,0x388b,\n-0x3ccb,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x54b,0x34cb,\n-0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0,0,0,0,0x34ca,0x344a,0x58a,0x68a,0x11ca,0x980a,0x984a,0x988a,0x68a,0x7ca,0x11ca,0x1e4a,\n-0x980a,0x784a,0x984a,0x68a,0x7ca,0x11ca,0x1e4a,0x980a,0x784a,0x788a,0x988a,0x7ca,0x58a,0x58a,0x58a,0x5ca,\n-0x5ca,0x5ca,0x5ca,0x68a,0x1b,0,0,0,0,0,0,0,0,0,0,0,\n+5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,0,0,0,0,0,0xb00b,0xb80b,0x784b,0x804b,\n+0x884b,0x904b,0x984b,0xa04b,0xa84b,0xb04b,0xb84b,0x788b,0x808b,0x888b,0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,\n+0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x17,0x17,0x17,0,\n+0,0,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,\n+0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0x7ca,0x7ca,0x7ca,0x7ca,\n+0x7ca,0xcca,0x11ca,0x11ca,0x11ca,0x11ca,0x1e4a,0x880a,0x980a,0x980a,0x980a,0x980a,0x980a,0x784a,0x984a,0x68a,\n+0x11ca,0x344b,0x344b,0x388b,0x3ccb,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x54b,0x34cb,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0x34ca,0x344a,0x58a,0x68a,0x11ca,0x980a,0x984a,0x988a,\n+0x68a,0x7ca,0x11ca,0x1e4a,0x980a,0x784a,0x984a,0x68a,0x7ca,0x11ca,0x1e4a,0x980a,0x784a,0x788a,0x988a,0x7ca,\n+0x58a,0x58a,0x58a,0x5ca,0x5ca,0x5ca,0x5ca,0x68a,0x1b,0,0,0,0,0,0,0,\n@@ -981,1 +984,1 @@\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n@@ -983,10 +986,10 @@\n-0x1b,6,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,6,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,\n-0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0xb00b,0xb80b,\n-0,0,0,0,0x58b,0x68b,0x7cb,0x11cb,0,0,0,0,0,0,0,0,\n-0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,0x1bca,5,5,5,5,5,5,5,5,0xb80a,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x1b,0x1b,0x1b,0x1b,0x1b,6,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,6,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,\n+0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,\n+0xa00b,0xa80b,0xb00b,0xb80b,0,0,0,0,0x58b,0x68b,0x7cb,0x11cb,0,0,0,0,\n+0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0x1bca,5,5,5,5,5,5,\n+5,5,0xb80a,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,\n+6,6,6,0,0,0,0,0,5,5,5,5,5,5,5,5,\n@@ -994,4 +997,4 @@\n-5,5,0,0x17,5,5,5,5,0,0,0,0,5,5,5,5,\n-5,5,5,5,0x17,0x58a,0x5ca,0x7ca,0xa4a,0x1e4a,0,0,0,0,0,0,\n-0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,0,0x17,5,5,5,5,0,0,0,0,\n+5,5,5,5,5,5,5,5,0x17,0x58a,0x5ca,0x7ca,0xa4a,0x1e4a,0,0,\n+0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,\n@@ -999,3 +1002,3 @@\n-5,5,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n-0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,\n+5,5,5,5,5,5,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,0,0,0,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,\n@@ -1003,3 +1006,6 @@\n-0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,0,0,0,0,2,2,2,2,\n-2,2,2,2,5,5,5,5,5,5,5,5,0,0,0,0,\n+2,2,2,2,0,0,0,0,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,\n+2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,\n+0,0,0,0x17,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -1007,2 +1013,2 @@\n-5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0x17,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+5,5,5,5,5,5,5,5,5,5,0,5,5,0,0,0,\n+5,0,0,5,5,5,5,5,5,5,0,0,5,0,5,5,\n@@ -1010,2 +1016,1 @@\n-5,5,5,5,5,5,0,5,5,0,0,0,5,0,0,5,\n-5,5,5,5,5,5,0,0,5,0,5,5,5,5,5,5,\n+5,5,5,5,5,5,0,0x17,0x58b,0x5cb,0x60b,0x7cb,0xa4b,0x1e4b,0x784b,0x788b,\n@@ -1013,1 +1018,3 @@\n-5,5,0,0x17,0x58b,0x5cb,0x60b,0x7cb,0xa4b,0x1e4b,0x784b,0x788b,5,5,5,5,\n+5,5,5,5,5,5,5,0x1b,0x1b,0x58b,0x5cb,0x60b,0x64b,0x68b,0x7cb,0xa4b,\n+0,0,0,0,0,0,0,0x58b,0x5cb,0x60b,0x64b,0x64b,0x68b,0x7cb,0xa4b,0x1e4b,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -1015,5 +1022,1 @@\n-5,5,5,0x1b,0x1b,0x58b,0x5cb,0x60b,0x64b,0x68b,0x7cb,0xa4b,0,0,0,0,\n-0,0,0,0x58b,0x5cb,0x60b,0x64b,0x64b,0x68b,0x7cb,0xa4b,0x1e4b,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n-5,5,0,0,0,0,0,0x58b,0x68b,0x7cb,0xa4b,0x1e4b,5,5,5,5,\n+5,5,5,0,5,5,0,0,0,0,0,0x58b,0x68b,0x7cb,0xa4b,0x1e4b,\n@@ -1021,1 +1024,1 @@\n-5,5,0x58b,0x7cb,0xa4b,0x1e4b,0x5cb,0x60b,0,0,0,0x17,5,5,5,5,\n+5,5,5,5,5,5,0x58b,0x7cb,0xa4b,0x1e4b,0x5cb,0x60b,0,0,0,0x17,\n@@ -1023,3 +1026,3 @@\n-5,5,5,5,5,5,0,0,0,0,0,0x17,0xa04b,0xa84b,0xb04b,0xb84b,\n-0x788b,0x808b,0x888b,0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0x78cb,0x80cb,0x88cb,0x90cb,0x98cb,0xa0cb,0xa8cb,\n-0xb0cb,0xb8cb,0x36cb,0x354b,0x34cb,0x348b,0x46cb,0x344b,0x4ecb,0x388b,0x3ccb,0x454b,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0x17,\n+0xa04b,0xa84b,0xb04b,0xb84b,0x788b,0x808b,0x888b,0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0x78cb,0x80cb,0x88cb,\n+0x90cb,0x98cb,0xa0cb,0xa8cb,0xb0cb,0xb8cb,0x36cb,0x354b,0x34cb,0x348b,0x46cb,0x344b,0x4ecb,0x388b,0x3ccb,0x454b,\n@@ -1027,9 +1030,9 @@\n-5,5,5,5,0,0,0,0,0x5ecb,0x344b,5,5,0x58b,0x5cb,0x60b,0x64b,\n-0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0,0,0x1e4b,0x800b,\n-0x880b,0x900b,0x980b,0xa00b,0xa80b,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0x984b,0x30b,0x34b,0x38b,0x3cb,\n-0x7cb,0xa4b,0x1e4b,0x784b,0x344b,0,0,0,0,0,0,0,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,5,6,6,6,\n-0,6,6,0,0,0,0,0,6,6,6,6,5,5,5,5,\n-0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,\n-6,6,6,0,0,0,0,6,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,0,0,0,0,0x5ecb,0x344b,5,5,\n+0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,\n+0,0,0x1e4b,0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0x984b,\n+0x30b,0x34b,0x38b,0x3cb,0x7cb,0xa4b,0x1e4b,0x784b,0x344b,0,0,0,0,0,0,0,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,\n+5,6,6,6,0,6,6,0,0,0,0,0,6,6,6,6,\n+5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,0,0,6,6,6,0,0,0,0,6,5,5,5,5,\n@@ -1037,1 +1040,1 @@\n-5,5,5,5,5,0x58b,0x11cb,0x17,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0x58b,0x11cb,0x17,5,5,5,5,\n@@ -1039,2 +1042,13 @@\n-5,5,5,5,5,0x58b,0x7cb,0xa4b,5,5,5,5,5,6,6,0,\n-0,0,0,0x58b,0x68b,0x7cb,0xa4b,0x1e4b,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,\n+5,5,5,5,5,5,5,5,5,0x58b,0x7cb,0xa4b,5,5,5,5,\n+5,6,6,0,0,0,0,0x58b,0x68b,0x7cb,0xa4b,0x1e4b,0x17,0x17,0x17,0x17,\n+0x17,0x17,0x17,0,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,0x1b,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,\n+0,0x17,0x17,0x17,0x17,0x17,0x17,0x17,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,\n+0x58b,0x5cb,0x60b,0x64b,0x7cb,0xa4b,0x1e4b,0x784b,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,\n+0x58b,0x5cb,0x60b,0x64b,0x7cb,0xa4b,0x1e4b,0x784b,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,\n+0,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,0,0,0,\n+0,0x58b,0x5cb,0x60b,0x64b,0x7cb,0xa4b,0x1e4b,0,0,0,0,0,0,0,0,\n@@ -1042,40 +1056,11 @@\n-0x1b,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,0,0,0,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,0,0,0x58b,0x5cb,0x60b,0x64b,\n-0x7cb,0xa4b,0x1e4b,0x784b,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,0,0,0,0,0,0x58b,0x5cb,0x60b,0x64b,\n-0x7cb,0xa4b,0x1e4b,0x784b,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,0,0,0,0,0,0,0,0x17,0x17,0x17,\n-0x17,0,0,0,0,0,0,0,0,0,0,0,0,0x58b,0x5cb,0x60b,\n-0x64b,0x7cb,0xa4b,0x1e4b,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,0,0,0,0,0,0,0,0x58b,0x68b,\n-0x7cb,0x11cb,0x1e4b,0x784b,5,5,5,5,6,6,6,6,0,0,0,0,\n-0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n-0,0,0,0,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0xa4b,0xccb,\n-0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0xb00b,0xb80b,0x344b,\n-0x34cb,0x348b,0x388b,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,0x58b,0x5cb,0x60b,0x64b,0x68b,0x7cb,0xa4b,0xccb,0x1e4b,0x344b,5,0,0,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,\n-6,0x58b,0x7cb,0xa4b,0x1e4b,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,\n-0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x784b,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,\n-8,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-6,6,6,6,6,6,6,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,0,\n-0,0,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-8,8,8,6,6,6,6,8,8,6,6,0x17,0x17,0x10,0x17,0x17,\n-0x17,0x17,0,0,0,0,0,0,0,0,0,0,0,0x10,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,0,0,0,0,0,0,5,5,5,5,5,5,5,6,\n-6,6,6,6,8,6,6,6,6,6,6,6,6,0,0x49,0x89,\n-0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0x17,0x17,5,8,8,0,\n+5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,\n+0,0,0x58b,0x68b,0x7cb,0x11cb,0x1e4b,0x784b,5,5,5,5,6,6,6,6,\n+0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,0,0,0,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,\n+0x50b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,0xa00b,\n+0xa80b,0xb00b,0xb80b,0x344b,0x34cb,0x348b,0x388b,0,5,5,5,5,5,5,5,5,\n+5,5,0,6,6,0x13,0,0,5,5,0,0,0,0,0,0,\n@@ -1083,9 +1068,2 @@\n-5,5,5,5,5,5,5,5,6,6,6,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,6,0x17,0x17,5,0,\n-0,0,0,0,0,0,0,0,8,5,5,5,5,0x17,0x17,0x17,\n-0x17,6,6,6,6,0x17,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n-0x249,0x289,5,0x17,5,0x17,0x17,0x17,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,8,8,8,6,6,\n-6,6,6,6,6,6,6,8,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,\n-0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x784b,0,0,0,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0x58b,0x5cb,0x60b,0x64b,0x68b,0x7cb,0xa4b,0xccb,0x1e4b,0x344b,5,\n@@ -1093,17 +1071,7 @@\n-5,5,5,5,8,8,8,6,6,6,8,8,6,8,6,6,\n-0x17,0x17,0x17,0x17,0x17,0x17,6,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,0,5,0,5,5,\n-5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,0,5,5,5,5,5,5,5,5,5,5,0x17,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,8,8,8,6,6,6,6,6,6,6,6,0,\n-0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n-0,0,0,0,5,5,8,8,0,0,6,6,6,6,6,6,\n-6,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0,\n-0,0,0,0,6,6,8,8,0,5,5,5,5,5,5,5,\n-5,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,\n-0,5,5,5,5,5,0,6,6,5,8,8,6,8,8,8,\n-8,0,0,8,8,0,0,8,8,8,0,0,5,0,0,0,\n-0,0,0,8,0,0,0,0,0,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,\n+6,6,6,6,6,0x58b,0x7cb,0xa4b,0x1e4b,0x17,0x17,0x17,0x17,0x17,0,0,\n+0,0,0,0,5,5,5,5,5,0x58b,0x5cb,0x60b,0x64b,0x7cb,0xa4b,0x1e4b,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x784b,0x49,0x89,0xc9,0x109,0x149,0x189,\n+0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,6,8,6,8,5,5,5,5,5,5,5,5,5,\n@@ -1111,6 +1079,7 @@\n-5,8,8,8,6,6,6,6,6,6,6,6,8,8,6,6,\n-6,8,6,5,5,5,5,0x17,0x17,0x17,0x17,0x17,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0x17,0,0x17,6,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,6,\n-6,6,6,6,6,8,6,8,8,8,8,6,6,8,6,6,\n-5,5,0x17,5,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n+5,5,5,5,6,6,6,6,6,6,6,0x17,0x17,0x17,0x17,0x17,\n+0x17,0x17,0,0,0,0,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x7cb,\n+0xa4b,0xccb,0xf4b,0x11cb,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,8,8,8,6,6,6,6,8,8,6,6,0x17,\n+0x17,0x10,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,0,0,\n+0,0x10,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n@@ -1118,25 +1087,5 @@\n-5,5,5,5,5,5,5,5,5,5,5,8,8,8,6,6,\n-6,6,0,0,8,8,8,8,6,6,8,6,6,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,5,5,5,5,6,6,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,6,\n-6,6,6,6,6,6,6,8,8,6,8,6,6,0x17,0x17,0x17,\n-5,0,0,0,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,6,8,6,8,8,6,6,6,6,\n-6,6,8,6,5,0,0,0,0,0,0,0,8,8,6,6,\n-6,6,8,6,6,6,6,6,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0x7cb,0xa4b,0x17,0x17,0x17,0x1b,5,5,5,5,\n-5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,6,\n-6,6,6,6,8,6,6,0x17,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0,\n-0,0,0,0,0,0,0,0,0,0,0,5,6,5,0x17,5,\n-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,\n-6,6,6,6,0,0,6,6,8,8,8,8,5,5,5,5,\n+5,5,5,6,6,6,6,6,8,6,6,6,6,6,6,6,\n+6,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0x17,0x17,\n+5,8,8,5,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n@@ -1144,5 +1093,29 @@\n-6,6,6,6,6,8,5,6,6,6,6,0x17,0x17,0x17,0x17,0x17,\n-0x17,0x17,0x17,6,0,0,0,0,0,0,0,0,5,6,6,6,\n-6,6,6,8,8,6,6,6,5,5,5,5,5,6,6,6,\n-6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x17,0x17,0x17,0,\n+0x17,0x17,5,0,0,0,0,0,0,0,0,0,8,5,5,5,\n+5,0x17,0x17,0x17,0x17,6,6,6,6,0x17,8,6,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,5,0x17,5,0x17,0x17,0x17,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,\n+8,8,6,6,6,6,6,6,6,6,6,8,0,0x58b,0x5cb,0x60b,\n+0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,\n+0x784b,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,8,8,8,6,6,6,8,8,\n+6,8,6,6,0x17,0x17,0x17,0x17,0x17,0x17,6,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n+5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,\n+5,0x17,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,6,\n+6,6,6,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,0,0,0,5,5,8,8,0,0,6,6,\n+6,6,6,6,6,0,0,0,6,6,6,6,6,0,0,0,\n+0,0,0,0,0,0,0,0,6,6,8,8,0,5,5,5,\n+5,5,5,5,5,0,0,5,5,0,0,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,\n+5,0,5,5,0,5,5,5,5,5,0,6,6,5,8,8,\n+6,8,8,8,8,0,0,8,8,0,0,8,8,8,0,0,\n+5,0,0,0,0,0,0,8,0,0,0,0,0,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,8,8,8,6,6,6,6,6,6,6,6,\n+8,8,6,6,6,8,6,5,5,5,5,0x17,0x17,0x17,0x17,0x17,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x17,0x17,0,0x17,6,5,\n+5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -1150,7 +1123,0 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,\n-6,6,6,8,6,6,0x17,0x17,0x17,5,0x17,0x17,5,0x17,0x17,0x17,\n-0x17,0x17,0,0,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,\n-0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0,0,0,0x17,0x17,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,\n@@ -1158,3 +1124,30 @@\n-5,5,5,5,5,5,5,8,6,6,6,6,6,6,6,0,\n-6,6,6,6,6,6,8,6,6,6,6,6,6,6,6,6,\n-0,8,6,6,6,6,6,6,6,8,6,6,8,6,6,0,\n+8,8,8,6,6,6,6,6,6,8,6,8,8,8,8,6,\n+6,8,6,6,5,5,0x17,5,0,0,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,\n+8,8,6,6,6,6,0,0,8,8,8,8,6,6,8,6,\n+6,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,5,5,5,5,6,6,0,0,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+8,8,8,6,6,6,6,6,6,6,6,8,8,6,8,6,\n+6,0x17,0x17,0x17,5,0,0,0,0,0,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+5,5,5,5,5,5,5,5,5,5,5,6,8,6,8,8,\n+6,6,6,6,6,6,8,6,5,0,0,0,0,0,0,0,\n+8,8,6,6,6,6,8,6,6,6,6,6,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x7cb,0xa4b,0x17,0x17,0x17,0x1b,\n+5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,6,\n+6,6,6,6,6,6,6,6,8,6,6,0x17,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,\n+0x16cb,0x194b,0x1bcb,0,0,0,0,0,0,0,0,0,0,0,0,5,\n+8,5,8,6,0x17,0x17,0x17,0,0,0,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+5,5,5,5,5,5,5,0,0,5,0,0,5,5,5,5,\n+5,5,5,5,0,5,5,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,8,8,8,8,8,8,0,8,\n+8,0,0,6,6,8,6,5,6,5,0x17,5,8,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -1162,24 +1155,9 @@\n-5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,\n-6,6,6,6,6,6,6,6,6,6,5,6,0,0,0,0,\n-0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,0,5,5,0,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,6,6,6,6,6,6,0,0,0,6,0,\n-6,6,0,6,5,5,5,5,5,5,5,5,5,5,8,8,\n-8,8,8,0,6,6,0,8,8,6,8,6,5,0,0,0,\n-0,0,0,0,5,5,5,5,5,5,0,5,5,0,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,6,6,8,8,0x17,0x17,0,0,0,\n-0,0,0,0,0x19,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0x17,0xcd0b,0xcc0b,0xcb0b,0xd00b,0xca0b,0xcf0b,0xcb4b,0xd04b,0xc90b,0x37cb,0x37cb,0x364b,\n-0x35cb,0xc94b,0x3fcb,0x350b,0x34cb,0x344b,0x344b,0x3ccb,0xcd0b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x19,0x19,0x19,0x34ca,0x354a,0x34ca,0x34ca,0x344a,0x348a,0x388a,0xf4a,0x11ca,0x64a,0x68a,0x6ca,\n-0x70a,0x74a,0x78a,0,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,\n-0,0,0,0,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x60a,0x64a,0x68a,0x6ca,\n-0x70a,0x74a,0x78a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,\n-0x74a,0x78a,0x58a,0x5ca,0x60a,0x64a,0x68a,0x5ca,0x60a,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,\n-0x58a,0x5ca,0x60a,0x60a,0x64a,0x68a,0xc08a,0xc18a,0x58a,0x5ca,0x60a,0x60a,0x64a,0x68a,0x60a,0x60a,\n-0x64a,0x64a,0x64a,0x64a,0x6ca,0x70a,0x70a,0x70a,0x74a,0x74a,0x78a,0x78a,0x78a,0x78a,0x5ca,0x60a,\n-0x64a,0x68a,0x6ca,0x58a,0x5ca,0x60a,0x64a,0x64a,0x68a,0x68a,0x5ca,0x60a,0x58a,0x5ca,0x348a,0x388a,\n-0x454a,0x348a,0x388a,0x35ca,5,5,5,5,0,0,0,0,0,0,0,0,\n+0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,\n+0,0,6,6,8,8,8,8,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,\n+6,8,5,6,6,6,6,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,6,\n+0,0,0,0,0,0,0,0,5,6,6,6,6,6,6,8,\n+8,6,6,6,5,5,5,5,5,6,6,6,6,6,6,6,\n+6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,0x17,0x17,0x17,0,0,0,0,0,\n@@ -1187,0 +1165,11 @@\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,8,\n+6,6,0x17,0x17,0x17,5,0x17,0x17,5,0x17,0x17,0x17,0x17,0x17,0,0,\n+0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,\n+0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0,0,0,0x17,0x17,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,8,6,6,6,6,6,6,6,0,6,6,6,6,\n+6,6,8,6,6,6,6,6,6,6,6,6,0,8,6,6,\n+6,6,6,6,6,8,6,6,8,6,6,0,0,0,0,0,\n@@ -1188,2 +1177,25 @@\n-5,5,5,0,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,\n+5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,6,5,6,0,0,0,0,0,0,0,0,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0,\n+5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,6,6,6,6,6,6,0,0,0,6,0,6,6,0,6,\n+5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,0,\n+6,6,0,8,8,6,8,6,5,0,0,0,0,0,0,0,\n+5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,6,6,8,8,0x17,0x17,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x19,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0x17,0xcd0b,0xcc0b,0xcb0b,0xd00b,\n+0xca0b,0xcf0b,0xcb4b,0xd04b,0xc90b,0x37cb,0x37cb,0x364b,0x35cb,0xc94b,0x3fcb,0x350b,0x34cb,0x344b,0x344b,0x3ccb,\n+0xcd0b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x19,0x19,0x19,0x34ca,0x354a,0x34ca,0x34ca,\n+0x344a,0x348a,0x388a,0xf4a,0x11ca,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0,0x17,0x17,0x17,0x17,\n+0x17,0,0,0,0,0,0,0,0,0,0,0,0x5ca,0x60a,0x64a,0x68a,\n+0x6ca,0x70a,0x74a,0x78a,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x64a,0x68a,0x6ca,0x70a,0x74a,\n+0x78a,0x58a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x58a,0x5ca,0x60a,0x64a,0x68a,0x5ca,\n+0x60a,0x60a,0x64a,0x68a,0x6ca,0x70a,0x74a,0x78a,0x58a,0x5ca,0x60a,0x60a,0x64a,0x68a,0xc08a,0xc18a,\n+0x58a,0x5ca,0x60a,0x60a,0x64a,0x68a,0x60a,0x60a,0x64a,0x64a,0x64a,0x64a,0x6ca,0x70a,0x70a,0x70a,\n+0x74a,0x74a,0x78a,0x78a,0x78a,0x78a,0x5ca,0x60a,0x64a,0x68a,0x6ca,0x58a,0x5ca,0x60a,0x64a,0x64a,\n+0x68a,0x68a,0x5ca,0x60a,0x58a,0x5ca,0x348a,0x388a,0x454a,0x348a,0x388a,0x35ca,5,5,5,5,\n@@ -1191,9 +1203,9 @@\n-0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,\n-0,0,0x17,0x17,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,0,0,6,6,6,6,6,0x17,0,0,0,0,0,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,6,6,6,6,6,6,6,0x17,0x17,0x17,0x17,0x17,\n-0x1b,0x1b,0x1b,0x1b,4,4,4,4,0x17,0x1b,0,0,0,0,0,0,\n-0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0,0x7cb,\n-0x1e4b,0x788b,0x790b,0x798b,0x7a0b,0x7a8b,0,5,5,5,5,5,5,5,5,5,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,0,0x10,0x10,0x10,0x10,\n+0x10,0x10,0x10,0x10,0x10,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0x17,0x17,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,\n+6,0x17,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n@@ -1201,4 +1213,10 @@\n-0,5,5,5,0x54b,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0x80b,\n-0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0x58b,0x5cb,0x60b,0x17,0x17,0x17,0x17,0,\n-0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,\n-0,0,0,6,5,8,8,8,8,8,8,8,8,8,8,8,\n+0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,\n+6,6,6,0x17,0x17,0x17,0x17,0x17,0x1b,0x1b,0x1b,0x1b,4,4,4,4,\n+0x17,0x1b,0,0,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0x249,0x289,0,0x7cb,0x1e4b,0x788b,0x790b,0x798b,0x7a0b,0x7a8b,0,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0,0,0,0,0,5,5,5,0x54b,0x58b,0x5cb,0x60b,\n+0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0x80b,0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,\n+0x58b,0x5cb,0x60b,0x17,0x17,0x17,0x17,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,0,0,0,0,6,5,8,8,8,\n@@ -1206,6 +1224,5 @@\n-8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,6,\n-6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,\n-4,4,0x17,4,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,\n+8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,\n+0,0,0,0,0,0,0,6,6,6,6,4,4,4,4,4,\n+4,4,4,4,4,4,4,4,4,4,0x17,4,6,0,0,0,\n+0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n@@ -1213,0 +1230,1 @@\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -1214,6 +1232,5 @@\n-0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,0,0,0x1b,6,6,0x17,0x10,0x10,0x10,0x10,\n+5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,\n+0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,0,0,0x1b,6,6,0x17,0x10,0x10,0x10,0x10,0,0,0,0,\n@@ -1221,7 +1238,5 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,8,8,6,\n-6,6,0x1b,0x1b,0x1b,8,8,8,8,8,8,0x10,0x10,0x10,0x10,0x10,\n-0x10,0x10,0x10,6,6,6,6,6,6,6,6,0x1b,0x1b,6,6,6,\n-6,6,6,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,6,6,6,6,0x1b,0x1b,\n+0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,\n+0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,8,8,6,6,6,0x1b,0x1b,\n+0x1b,8,8,8,8,8,8,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,6,\n+6,6,6,6,6,6,6,0x1b,0x1b,6,6,6,6,6,6,6,\n@@ -1229,2 +1244,2 @@\n-0x1b,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1b,0x1b,6,6,6,0x1b,0,0,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,6,6,6,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,\n@@ -1232,21 +1247,10 @@\n-0,0,0,0,0,0,0,0,0x54b,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,\n-0x74b,0x78b,0x7cb,0x80b,0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,\n-0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x58b,0x5cb,0x60b,0x64b,0x68b,0x58b,\n-0x68b,0,0,0,0,0,0,0,0x249,0x289,0x49,0x89,0xc9,0x109,0x149,0x189,\n-0x1c9,0x209,0x249,0x289,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x49,0x89,\n-0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,2,2,2,2,2,2,2,0,2,2,\n-2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,1,\n-0,0,1,0,0,1,1,0,0,1,1,1,1,0,1,1,\n-1,1,1,1,1,1,2,2,2,2,0,2,0,2,2,2,\n-2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-2,2,2,2,1,1,0,1,1,1,1,0,0,1,1,1,\n-1,1,1,1,1,0,1,1,1,1,1,1,1,0,2,2,\n+0,0,0,0,0x1b,0x1b,6,6,6,0x1b,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x54b,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0x80b,\n+0x84b,0x88b,0x8cb,0x90b,0x94b,0x98b,0x9cb,0xa0b,0,0,0,0,0,0,0,0,\n+0,0,0,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,\n+0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x58b,0x5cb,0x60b,0x64b,0x68b,0x58b,0x68b,0,0,0,\n+0,0,0,0,0x249,0x289,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,\n+0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x49,0x89,0xc9,0x109,0x149,0x189,\n+0x1c9,0x209,0x249,0x289,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,\n@@ -1254,5 +1258,4 @@\n-2,2,2,2,2,2,2,2,1,1,0,1,1,1,1,0,\n-1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,\n-1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,2,2,2,2,2,2,2,0,2,2,2,2,2,2,\n+2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,\n@@ -1260,0 +1263,11 @@\n+2,2,2,2,2,2,2,2,1,0,1,1,0,0,1,0,\n+0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,\n+1,1,2,2,2,2,0,2,0,2,2,2,2,2,2,2,\n+0,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,\n+1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,\n+1,0,1,1,1,1,1,1,1,0,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,1,1,0,1,1,1,1,0,1,1,1,1,\n+1,0,1,0,0,0,1,1,1,1,1,1,1,0,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,\n@@ -1261,6 +1275,5 @@\n-2,2,2,2,2,2,0,0,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,0x18,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n-2,2,2,2,2,2,2,2,2,2,2,0x18,2,2,2,2,\n-2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,1,1,1,0x18,2,2,2,2,\n+1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,\n+2,2,0,0,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,0x18,2,2,\n@@ -1268,25 +1281,29 @@\n-2,0x18,2,2,2,2,2,2,1,1,1,1,1,1,1,1,\n-1,1,1,1,1,1,1,1,2,2,2,0x18,2,2,2,2,\n-2,2,1,2,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,\n-0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0,6,6,6,6,6,6,6,\n-6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,\n-6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0x1b,\n-0x1b,0x1b,0x1b,6,6,6,6,6,6,6,6,6,6,6,6,6,\n-6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,6,0x1b,0x1b,0x17,0x17,0x17,0x17,0x17,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,\n-6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,\n-6,6,6,6,6,0,0,6,6,6,6,6,6,6,0,6,\n-6,0,6,6,6,6,6,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,5,0x1b,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,0,0,0,6,6,6,6,\n-6,6,6,4,4,4,4,4,4,4,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,6,6,6,6,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0,0x19,5,5,5,5,\n-5,0,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,6,6,6,6,\n-6,6,6,0,0,0,0,0,0,0,0,0,2,2,2,2,\n-6,6,6,6,6,6,6,4,0,0,0,0,0x49,0x89,0xc9,0x109,\n-0x149,0x189,0x1c9,0x209,0x249,0x289,0,0,0,0,0x17,0x17,1,1,2,2,\n+2,2,2,2,2,2,2,0x18,2,2,2,2,2,2,1,1,\n+1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,1,1,1,0x18,2,2,2,2,2,2,2,2,\n+2,2,2,2,2,2,2,2,2,2,2,2,2,0x18,2,2,\n+2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,\n+1,1,1,1,2,2,2,0x18,2,2,2,2,2,2,1,2,\n+0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,0x249,0x289,0x49,0x89,0xc9,0x109,\n+0x149,0x189,0x1c9,0x209,0,6,6,6,6,6,6,6,6,6,6,6,\n+6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,\n+6,6,6,6,6,6,6,6,6,6,6,0x1b,0x1b,0x1b,0x1b,6,\n+6,6,6,6,6,6,6,6,6,6,6,6,6,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,6,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+6,0x1b,0x1b,0x17,0x17,0x17,0x17,0x17,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,0,\n+6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n+6,0,0,6,6,6,6,6,6,6,0,6,6,0,6,6,\n+6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,0,5,0x1b,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,0,0,0,6,6,6,6,6,6,6,4,\n+4,4,4,4,4,4,0,0,5,5,5,5,5,5,5,5,\n+5,5,5,5,6,6,6,6,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,0,0,0x19,5,5,5,5,5,0,0,0x58b,\n+0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,6,6,6,6,6,6,6,0,\n+0,0,0,0,0,0,0,0,2,2,2,2,6,6,6,6,\n+6,6,6,4,0,0,0,0,0x49,0x89,0xc9,0x109,0x149,0x189,0x1c9,0x209,\n+0x249,0x289,0,0,0,0,0x17,0x17,1,1,2,2,2,2,2,2,\n@@ -1294,26 +1311,32 @@\n-2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0x58b,0x5cb,0x60b,\n-0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x78cb,0x794b,0x814b,0x58b,\n-0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x1b,0x34cb,0x344b,0x3ccb,0x19,0x58b,0x5cb,0x788b,\n-0x78cb,0,0,0,0,0,0,0,0,0,0,0,0x16cb,0x194b,0x1bcb,0x1e4b,\n-0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0x984b,0xa04b,0xa84b,0xb04b,\n-0xb84b,0x788b,0x808b,0x888b,0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0x78cb,0x80cb,0x984b,0xa04b,0xa84b,0xb04b,\n-0xb84b,0x788b,0x808b,0x888b,0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0x1b,0x5cb,0x60b,0x64b,0x68b,0x6cb,\n-0x70b,0x74b,0x78b,0x7cb,0x900b,0xa00b,0x804b,0x788b,0x344b,0x354b,0,0,0,0x58b,0x5cb,0x60b,\n-0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,\n-0x800b,0x880b,0x900b,0x980b,0xa00b,0xa80b,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x18,0x18,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,\n-5,0,0,5,0,5,5,5,5,5,5,5,5,5,5,0,\n-5,5,5,5,0,5,0,5,0,0,0,0,0,0,5,0,\n-0,0,0,5,0,5,0,5,0,5,5,5,0,5,5,0,\n-5,0,0,5,0,5,0,5,0,5,0,5,0,5,5,0,\n-5,0,0,5,5,5,5,0,5,5,5,5,5,5,5,0,\n-5,5,5,5,0,5,5,5,5,0,5,0,5,5,5,5,\n-5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,\n-0,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,\n-5,5,5,5,5,5,5,5,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,\n+0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x78cb,0x794b,0x814b,0x58b,0x5cb,0x60b,0x64b,0x68b,\n+0x6cb,0x70b,0x74b,0x78b,0x1b,0x34cb,0x344b,0x3ccb,0x19,0x58b,0x5cb,0x788b,0x78cb,0,0,0,\n+0,0,0,0,0,0,0,0,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,\n+0xa00b,0xa80b,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0x984b,0xa04b,0xa84b,0xb04b,0xb84b,0x788b,0x808b,0x888b,\n+0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0x78cb,0x80cb,0x984b,0xa04b,0xa84b,0xb04b,0xb84b,0x788b,0x808b,0x888b,\n+0x908b,0x988b,0xa08b,0xa88b,0xb08b,0xb88b,0x1b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,0x74b,0x78b,0x7cb,\n+0x900b,0xa00b,0x804b,0x788b,0x344b,0x354b,0,0,0,0x58b,0x5cb,0x60b,0x64b,0x68b,0x6cb,0x70b,\n+0x74b,0x78b,0x7cb,0xa4b,0xccb,0xf4b,0x11cb,0x144b,0x16cb,0x194b,0x1bcb,0x1e4b,0x800b,0x880b,0x900b,0x980b,\n+0xa00b,0xa80b,0xb00b,0xb80b,0x784b,0x804b,0x884b,0x904b,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x18,0x18,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,5,5,5,5,0,5,5,5,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,5,5,5,5,0,5,5,0,5,0,0,5,\n+0,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,\n+0,5,0,5,0,0,0,0,0,0,5,0,0,0,0,5,\n+0,5,0,5,0,5,5,5,0,5,5,0,5,0,0,5,\n+0,5,0,5,0,5,0,5,0,5,5,0,5,0,0,5,\n+5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,\n+0,5,5,5,5,0,5,0,5,5,5,5,5,5,5,5,\n+5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0,0,0,0,0,5,5,5,0,5,5,5,\n+5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+5,5,5,5,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x2cb,0x2cb,0x30b,0x34b,\n+0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x54b,0x54b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,\n+0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n@@ -1321,3 +1344,1 @@\n-0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x2cb,0x2cb,0x30b,0x34b,0x38b,0x3cb,0x40b,0x44b,0x48b,0x4cb,0x50b,0x54b,0x54b,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n@@ -1325,2 +1346,5 @@\n-0x1b,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0x1b,0x1b,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n@@ -1328,2 +1352,1 @@\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1a,0x1a,0x1a,0x1a,0x1a,0x1b,0x1b,0x1b,0x1b,\n@@ -1331,21 +1354,18 @@\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,\n-0,0,0,0,0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1a,\n-0x1a,0x1a,0x1a,0x1a,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,\n-0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0,\n-0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n-0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,\n+0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0x1b,0x1b,0x1b,0,0,0,0,0,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,\n@@ -1353,1 +1373,1 @@\n-0x1b,0x1b,0,0,0x1b,0x1b,0x1b,0x1b,0,0,0,0,0x1b,0x1b,0x1b,0,\n+0x1b,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,\n@@ -1355,1 +1375,3 @@\n-0x1b,0x1b,0,0,0,0,0,0,0,0,0,0,5,0x705,5,5,\n+0x1b,0x1b,0x1b,0,0,0,0,0,0,0,0,0,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0,\n+0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,5,0x705,5,5,\n@@ -1375,3 +1397,1 @@\n-5,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,\n+5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -1379,3 +1399,3 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x785,5,5,5,\n-5,5,5,5,5,5,5,5,5,5,5,5,0x10,0x10,0x10,0x10,\n+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x785,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,\n+0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,\n@@ -1383,1 +1403,3 @@\n-0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0,0x10,0,0,\n+0,0x10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,\n@@ -1385,3 +1407,0 @@\n-0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,\n-6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,\n-0,0,0,0,0,0,0,0,0,0,0,0,0x11,0x11,0x11,0x11,\n@@ -1389,1 +1408,2 @@\n-0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0,0,0,0,0,0\n+0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0,0,\n+0,0,0,0\n@@ -1394,1 +1414,1 @@\n-    propsTrie_index+4468,\n+    propsTrie_index+4532,\n@@ -1396,2 +1416,2 @@\n-    4468,\n-    17500,\n+    4532,\n+    17744,\n@@ -1399,1 +1419,1 @@\n-    0x11f4,\n+    0x1234,\n@@ -1403,1 +1423,1 @@\n-    0x55cc,\n+    0x5700,\n@@ -1407,139 +1427,139 @@\n-static const uint16_t propsVectorsTrie_index[30588]={\n-0x4d6,0x4de,0x4e6,0x4ee,0x506,0x50e,0x516,0x51e,0x526,0x52e,0x536,0x53e,0x546,0x54e,0x556,0x55e,\n-0x565,0x56d,0x575,0x57d,0x580,0x588,0x590,0x598,0x5a0,0x5a8,0x5b0,0x5b8,0x5c0,0x5c8,0x5d0,0x5d8,\n-0x5e0,0x5e8,0x5ef,0x5f7,0x5ff,0x607,0x60f,0x617,0x61f,0x627,0x62c,0x634,0x63b,0x643,0x64b,0x653,\n-0x65b,0x663,0x66b,0x673,0x67a,0x682,0x68a,0x692,0x69a,0x6a2,0x6aa,0x6b2,0x6ba,0x6c2,0x6ca,0x6d2,\n-0x19e4,0xd43,0xe2a,0x6da,0x4f6,0xe91,0xe99,0x1b8e,0x12b7,0x12c7,0x12af,0x12bf,0x7a3,0x7a9,0x7b1,0x7b9,\n-0x7c1,0x7c7,0x7cf,0x7d7,0x7df,0x7e5,0x7ed,0x7f5,0x7fd,0x803,0x80b,0x813,0x81b,0x823,0x82b,0x832,\n-0x83a,0x840,0x848,0x850,0x858,0x85e,0x866,0x86e,0x876,0x12cf,0x87e,0x886,0x88e,0x895,0x89d,0x8a5,\n-0x8ad,0x8b1,0x8b9,0x8c0,0x8c8,0x8d0,0x8d8,0x8e0,0x15e3,0x15eb,0x8e8,0x8f0,0x8f8,0x900,0x908,0x90f,\n-0x1649,0x1639,0x1641,0x191f,0x1927,0x12df,0x917,0x12d7,0x1529,0x1529,0x152b,0x12f3,0x12f4,0x12e7,0x12e9,0x12eb,\n-0x1651,0x1653,0x91f,0x1653,0x927,0x92c,0x934,0x1658,0x93a,0x1653,0x940,0x948,0xc1f,0x1660,0x1660,0x950,\n-0x1670,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,\n-0x1671,0x1671,0x1671,0x1668,0x958,0x1679,0x1679,0x960,0xb3f,0xb47,0xb4f,0xb57,0x1689,0x1681,0x968,0x970,\n-0x978,0x1693,0x169b,0x980,0x1691,0x988,0x19ec,0xd4b,0xb5f,0xb67,0xb6f,0xb74,0x188d,0xc52,0xc59,0x17f5,\n-0xbef,0x19f4,0xd53,0xd5b,0xd63,0xd6b,0xf44,0xf44,0x18e5,0x18ea,0xc8d,0xc95,0x195b,0x1963,0x1aad,0xe32,\n-0x196b,0xcd7,0xcdf,0x1973,0x1101,0x11a9,0xf24,0xd73,0x1815,0x17fd,0x180d,0x1805,0x18a5,0x189d,0x1865,0xbff,\n-0x12fc,0x12fc,0x12fc,0x12fc,0x12ff,0x12fc,0x12fc,0x1307,0x990,0x130f,0x994,0x99c,0x130f,0x9a4,0x9ac,0x9b4,\n-0x131f,0x1317,0x1327,0x9bc,0x9c4,0x132f,0x9cc,0x9d4,0x1337,0x133f,0x1347,0x134f,0x9dc,0x1357,0x135e,0x1366,\n-0x136e,0x1376,0x137e,0x1386,0x138e,0x1395,0x139d,0x13a5,0x13ad,0x13b5,0x13b8,0x13ba,0x16a3,0x1788,0x178e,0x18d5,\n-0x13c2,0x9e4,0x9ec,0x14dc,0x14e1,0x14e4,0x14ec,0x13ca,0x14f4,0x14f4,0x13da,0x13d2,0x13e2,0x13ea,0x13f2,0x13fa,\n-0x1402,0x140a,0x1412,0x141a,0x1796,0x17ed,0x192f,0x1a85,0x142a,0x1431,0x1439,0x1441,0x1422,0x1449,0x179e,0x17a5,\n-0x16ab,0x16ab,0x16ab,0x16ab,0x16ab,0x16ab,0x16ab,0x16ab,0x17ad,0x17b0,0x17ad,0x17ad,0x17b8,0x17bf,0x17c1,0x17c8,\n-0x17d0,0x17d4,0x17d4,0x17d7,0x17d4,0x17d4,0x17dd,0x17d4,0x181d,0x18dd,0x1937,0xb7c,0xb82,0x1bca,0x1bd2,0x1ca9,\n-0x187d,0xc2f,0xc33,0x18f2,0x186d,0x186d,0x186d,0xc07,0x1875,0xc27,0x18bd,0xc7d,0xc0f,0xc17,0xc17,0x197b,\n-0x18ad,0x193f,0xc69,0xc6d,0x9f4,0x16b3,0x16b3,0x9fc,0x16bb,0x16bb,0x16bb,0x16bb,0x16bb,0x16bb,0xa04,0x6de,\n-0x1511,0x1533,0xa0c,0x153b,0xa14,0x1543,0x154b,0x1553,0xa1c,0xa21,0x155b,0x1562,0xa26,0xa2e,0x18cd,0xbf7,\n-0xa36,0x15bd,0x15c4,0x156a,0x15cc,0x15d3,0x1572,0x1576,0x158f,0x158f,0x1591,0x157e,0x1586,0x1586,0x1587,0x15db,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,\n-0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x16c3,0x1264,0x1825,0x1825,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,\n-0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x15a0,0x19dc,0x126c,\n-0x16cb,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,\n-0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,0x16d1,\n-0x16d1,0x16d1,0x16d1,0x16d1,0xa3e,0x16d9,0xa46,0x19fc,0x1987,0x1987,0x1987,0x1987,0x1987,0x1987,0x1987,0x1987,\n-0x1983,0xce7,0x1997,0x198f,0x1999,0x1a04,0x1a04,0xd7b,0x1885,0x18fa,0x194f,0x1953,0x1947,0x1aa5,0xc9d,0xca0,\n-0x18b5,0xc75,0x1902,0xca8,0x19a1,0x19a4,0xcef,0x1a0c,0x19b4,0x19ac,0xcf7,0xd83,0x1a14,0x1a18,0xd8b,0xfec,\n-0x19bc,0xcff,0xd07,0x1a20,0x1a30,0x1a28,0xd93,0xeec,0xe3a,0xe42,0x1c19,0xfa4,0x1cc6,0x1cc6,0x1a38,0xd9b,\n-0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,\n-0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,\n-0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,\n-0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,\n-0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,\n-0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,\n-0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,\n-0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,\n-0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,\n-0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,\n-0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,\n-0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,\n-0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,\n-0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,\n-0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,\n-0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,\n-0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,\n-0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,\n-0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,\n-0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,\n-0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,\n-0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0x1631,0x162b,0x162c,0x162d,0x162e,0x162f,0x1630,0xa4e,0xda3,0xda6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,\n-0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,0x1603,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,\n-0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x14fc,0x15a8,0x15a8,0x15a8,0x15a8,0x15a8,0x15a8,0x15a8,0x15a8,\n-0x15ad,0x15b5,0x17e5,0x1274,0x18c5,0x18c5,0x1278,0x127f,0xa56,0xa5e,0xa66,0x1469,0x1470,0x1478,0xa6e,0x1480,\n-0x14b1,0x14b1,0x1459,0x1461,0x1488,0x14a8,0x14a9,0x14b9,0x1490,0x1451,0xa76,0x1498,0xa7e,0x14a0,0xa86,0xa8a,\n-0xc85,0x14c1,0xa92,0xa9a,0x14c9,0x14cf,0x14d4,0xaa2,0xab2,0x1519,0x1521,0x1504,0x1509,0xaba,0xac2,0xaaa,\n-0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,\n-0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15fb,0x15fb,0x15fb,0x15fb,\n-0x13d8,0x13d8,0x1418,0x1458,0x1498,0x14d8,0x1518,0x1558,0x1594,0x15d4,0x1600,0x1640,0x1680,0x16c0,0x1700,0x1740,\n-0x1780,0x17bc,0x17fc,0x183c,0x187c,0x18b0,0x18ec,0x192c,0x196c,0x19ac,0x19e8,0x1a28,0x1a68,0x1aa8,0x1ae8,0x1b28,\n-0xa80,0xac0,0xb00,0xb40,0xb80,0xa40,0xe48,0xa40,0xe6a,0xa40,0xa40,0xa40,0xa40,0xbc0,0x12d5,0x12d5,\n-0xeaa,0xeea,0xa40,0xa40,0xa40,0xa40,0xf2a,0xc00,0xa40,0xa40,0xc40,0xc80,0xcc0,0xd00,0xe08,0xd78,\n-0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,0x1215,\n-0x1215,0x1215,0x1215,0x1215,0xf6a,0x1255,0x108a,0x10ca,0x1295,0x10d5,0x1315,0x1315,0x1315,0xfaa,0xfca,0x100a,\n-0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,\n-0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0xfca,0x104a,\n+static const uint16_t propsVectorsTrie_index[31228]={\n+0x4e8,0x4f0,0x4f8,0x500,0x518,0x520,0x528,0x530,0x538,0x540,0x548,0x550,0x558,0x560,0x568,0x570,\n+0x577,0x57f,0x587,0x58f,0x592,0x59a,0x5a2,0x5aa,0x5b2,0x5ba,0x5c2,0x5ca,0x5d2,0x5da,0x5e2,0x5ea,\n+0x5f2,0x5fa,0x601,0x609,0x611,0x619,0x621,0x629,0x631,0x639,0x63e,0x646,0x64d,0x655,0x65d,0x665,\n+0x66d,0x675,0x67d,0x685,0x68c,0x694,0x69c,0x6a4,0x6ac,0x6b4,0x6bc,0x6c4,0x6cc,0x6d4,0x6dc,0x6e4,\n+0x1a38,0xd5e,0xe35,0x6ec,0x508,0xe9c,0xea4,0x1bf2,0x1300,0x1310,0x12f8,0x1308,0x7c5,0x7cb,0x7d3,0x7db,\n+0x7e3,0x7e9,0x7f1,0x7f9,0x801,0x807,0x80f,0x817,0x81f,0x825,0x82d,0x835,0x83d,0x845,0x84d,0x854,\n+0x85c,0x862,0x86a,0x872,0x87a,0x880,0x888,0x890,0x898,0x1318,0x8a0,0x8a8,0x8b0,0x8b7,0x8bf,0x8c7,\n+0x8cf,0x8d3,0x8db,0x8e2,0x8ea,0x8f2,0x8fa,0x902,0x162c,0x1634,0x90a,0x912,0x91a,0x922,0x92a,0x931,\n+0x1692,0x1682,0x168a,0x1973,0x197b,0x1328,0x939,0x1320,0x1572,0x1572,0x1574,0x133c,0x133d,0x1330,0x1332,0x1334,\n+0x169a,0x169c,0x941,0x169c,0x949,0x94e,0x956,0x16a1,0x95c,0x169c,0x962,0x96a,0xc39,0x16a9,0x16a9,0x972,\n+0x16b9,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,0x16ba,\n+0x16ba,0x16ba,0x16ba,0x16b1,0x97a,0x16c2,0x16c2,0x982,0xb59,0xb61,0xb69,0xb71,0x16d2,0x16ca,0x98a,0x992,\n+0x99a,0x16dc,0x16e4,0x9a2,0x16da,0x9aa,0x1a40,0xd66,0xb79,0xb81,0xb89,0xb8e,0x18e1,0xc6c,0xc73,0x1849,\n+0xc09,0x1a48,0xd6e,0xd76,0xd7e,0xd86,0xf47,0xf48,0x1939,0x193e,0xca8,0xcb0,0x19af,0x19b7,0x1b11,0xe3d,\n+0x19bf,0xcf2,0xcfa,0x19c7,0x10f6,0x1196,0xf27,0xd8e,0x1869,0x1851,0x1861,0x1859,0x18f9,0x18f1,0x18b9,0xc19,\n+0x1345,0x1345,0x1345,0x1345,0x1348,0x1345,0x1345,0x1350,0x9b2,0x1358,0x9b6,0x9be,0x1358,0x9c6,0x9ce,0x9d6,\n+0x1368,0x1360,0x1370,0x9de,0x9e6,0x1378,0x9ee,0x9f6,0x1380,0x1388,0x1390,0x1398,0x9fe,0x13a0,0x13a7,0x13af,\n+0x13b7,0x13bf,0x13c7,0x13cf,0x13d7,0x13de,0x13e6,0x13ee,0x13f6,0x13fe,0x1401,0x1403,0x16ec,0x17dc,0x17e2,0x1929,\n+0x140b,0xa06,0xa0e,0x1525,0x152a,0x152d,0x1535,0x1413,0x153d,0x153d,0x1423,0x141b,0x142b,0x1433,0x143b,0x1443,\n+0x144b,0x1453,0x145b,0x1463,0x17ea,0x1841,0x1983,0x1ad9,0x1473,0x147a,0x1482,0x148a,0x146b,0x1492,0x17f2,0x17f9,\n+0x16f4,0x16f4,0x16f4,0x16f4,0x16f4,0x16f4,0x16f4,0x16f4,0x1801,0x1804,0x1801,0x1801,0x180c,0x1813,0x1815,0x181c,\n+0x1824,0x1828,0x1828,0x182b,0x1828,0x1828,0x1831,0x1828,0x1871,0x1931,0x198b,0xb96,0xb9c,0x1c36,0x1c3e,0x1d15,\n+0x18d1,0xc49,0xc4d,0x1946,0x18c1,0x18c1,0x18c1,0xc21,0x18c9,0xc41,0x1911,0xc98,0xc29,0xc31,0xc31,0x19cf,\n+0x1901,0x1993,0xc83,0xc88,0xa16,0x16fc,0x16fc,0xa1e,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0xa26,0x6f0,\n+0x155a,0x157c,0xa2e,0x1584,0xa36,0x158c,0x1594,0x159c,0xa3e,0xa43,0x15a4,0x15ab,0xa48,0x170c,0x1921,0xc11,\n+0xa50,0x1606,0x160d,0x15b3,0x1615,0x161c,0x15bb,0x15bf,0x15d8,0x15d8,0x15da,0x15c7,0x15cf,0x15cf,0x15d0,0x1624,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,\n+0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1714,0x1717,0x1879,0x1879,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,\n+0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e2,0x15e9,0x1a30,0x12b5,\n+0x171f,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,\n+0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,0x1725,\n+0x1725,0x1725,0x1725,0x1725,0xa58,0x172d,0xa60,0x1a50,0x19db,0x19db,0x19db,0x19db,0x19db,0x19db,0x19db,0x19db,\n+0x19d7,0xd02,0x19eb,0x19e3,0x19ed,0x1a58,0x1a58,0xd96,0x18d9,0x194e,0x19a3,0x19a7,0x199b,0x1b09,0xcb8,0xcbb,\n+0x1909,0xc90,0x1956,0xcc3,0x19f5,0x19f8,0xd0a,0x1a60,0x1a08,0x1a00,0xd12,0xd9e,0x1a68,0x1a6c,0xda6,0xff0,\n+0x1a10,0xd1a,0xd22,0x1a74,0x1a84,0x1a7c,0xdae,0xef7,0xe45,0xe4d,0x1c85,0xfa8,0x1d32,0x1d32,0x1a8c,0xdb6,\n+0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,\n+0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,\n+0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,\n+0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,\n+0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,\n+0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,\n+0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,\n+0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,\n+0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,\n+0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,\n+0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,\n+0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,\n+0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,\n+0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,\n+0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,\n+0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,\n+0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,\n+0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,\n+0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,\n+0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,\n+0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,\n+0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0x167a,0x1674,0x1675,0x1676,0x1677,0x1678,0x1679,0xa68,0xdbe,0xdc1,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,\n+0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,0x164c,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,\n+0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x1545,0x15f1,0x15f1,0x15f1,0x15f1,0x15f1,0x15f1,0x15f1,0x15f1,\n+0x15f6,0x15fe,0x1839,0x12bd,0x1919,0x1919,0x12c1,0x12c8,0xa70,0xa78,0xa80,0x14b2,0x14b9,0x14c1,0xa88,0x14c9,\n+0x14fa,0x14fa,0x14a2,0x14aa,0x14d1,0x14f1,0x14f2,0x1502,0x14d9,0x149a,0xa90,0x14e1,0xa98,0x14e9,0xaa0,0xaa4,\n+0xca0,0x150a,0xaac,0xab4,0x1512,0x1518,0x151d,0xabc,0xacc,0x1562,0x156a,0x154d,0x1552,0xad4,0xadc,0xac4,\n+0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,\n+0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x163c,0x1644,0x1644,0x1644,0x1644,\n+0x1420,0x1420,0x1460,0x14a0,0x14e0,0x1520,0x1560,0x15a0,0x15dc,0x161c,0x1648,0x1688,0x16c8,0x1708,0x1748,0x1788,\n+0x17c8,0x1804,0x1844,0x1884,0x18c4,0x18f8,0x1934,0x1974,0x19b4,0x19f4,0x1a30,0x1a70,0x1ab0,0x1af0,0x1b30,0x1b70,\n+0xa80,0xac0,0xb00,0xb40,0xb80,0xa40,0xe75,0xa40,0xe97,0xa40,0xa40,0xa40,0xa40,0xbc0,0x12dd,0x12dd,\n+0xed7,0xc00,0xa40,0xa40,0xa40,0xa40,0xf17,0xc2d,0xa40,0xa40,0xc6d,0xcad,0xced,0xd2d,0xe35,0xda5,\n+0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,0x121d,\n+0x121d,0x121d,0x121d,0x121d,0xf57,0x125d,0x1092,0x10d2,0x129d,0x10dd,0x131d,0x131d,0x131d,0xf97,0xfb7,0xff7,\n+0x135d,0x135d,0x1037,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,\n+0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0xfb7,0x1052,\n@@ -1547,1 +1567,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1549,1 +1569,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1551,1 +1571,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1553,1 +1573,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1555,1 +1575,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1557,1 +1577,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1559,1 +1579,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1561,1 +1581,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1563,1 +1583,1 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n@@ -1565,161 +1585,165 @@\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n-0xdb8,0xdc8,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,\n-0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd38,\n-0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,\n-0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1195,0x1115,\n-0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,\n-0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x11d5,0x1155,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0xb8a,0xb91,0xb99,0xba1,0x182d,0x182d,0x182d,0xba9,0xbb1,0xbb4,0x185d,0x1855,0xbe7,0xd0f,0xd13,0xd17,\n-0x4f6,0x4f6,0x4f6,0x4f6,0xd1f,0x19c4,0xd27,0xf3c,0x16e1,0xaca,0xad0,0xffc,0xbbc,0x1895,0xc61,0x4f6,\n-0x16f6,0x16e9,0x16ee,0x1835,0xbc4,0xbcc,0x113f,0x1145,0x1c01,0xf59,0x1bf1,0x6e6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0xfac,0xfb4,0xfbc,0x4f6,0x4f6,0x4f6,0x4f6,\n-0xbd4,0xbd7,0xdae,0x1c69,0xff4,0x6ee,0x4f6,0x108d,0xcb0,0xd2f,0x4f6,0x4f6,0x1b9e,0xef4,0xefc,0x1cb1,\n-0xc3b,0xc42,0xc4a,0x1a40,0x1c49,0x4f6,0x1c29,0xfcc,0x1a48,0xdb6,0xdbe,0xdc6,0x101c,0x6f6,0x4f6,0x4f6,\n-0x1a50,0x1a50,0x6fe,0x4f6,0x1cde,0x10a5,0x1cd6,0x10ad,0x1d96,0x11bf,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0xdce,0x4f6,0x4f6,0x4f6,0x4f6,0x1db6,0x11e7,0x11ee,0x706,0x4f6,0x4f6,0x4f6,0x11f6,\n-0x1ab5,0x1ab7,0xe4a,0xe51,0x1a58,0x1a60,0xdd6,0xf1c,0x1b96,0xedc,0xee4,0xfc4,0x1bb6,0x1bba,0xf14,0x103c,\n-0xf8f,0xf94,0x70e,0x4f6,0x1095,0x109d,0x1c11,0xf9c,0xf71,0xf77,0xf7f,0xf87,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1d26,0x1d1e,0x112f,0x1137,0x1c91,0x1c89,0x1063,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1c79,0x1024,0x102c,0x1034,\n-0x1c41,0x1c39,0xfdc,0x1127,0x1bc2,0xf2c,0x716,0x4f6,0x1073,0x107b,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1d8e,0x11a1,0x71e,0x4f6,0x4f6,0x1ca1,0x1c99,0x106b,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x11fe,0x1202,0x120a,\n-0x1d66,0x1d5e,0x1189,0x1d56,0x1d4e,0x726,0x1c71,0x1014,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x10e5,0x10ea,0x10f2,0x10f9,0x1119,0x111f,0x4f6,0x4f6,0x116d,0x1171,0x1179,0x11b1,0x11b7,0x72e,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x11cf,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1dce,0x1240,\n-0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,\n-0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190a,0x190f,0xcb8,0xcbf,0xcbf,0xcbf,\n-0x1917,0x1917,0x1917,0xcc7,0x1cce,0x1cce,0x1cce,0x1cce,0x1cce,0x1cce,0x736,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,0x1abf,\n-0x1abf,0xe59,0xfe4,0x73e,0x4f6,0x4f6,0x742,0xf34,0x1c61,0x1c59,0x1004,0x100c,0x74a,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x1dae,0x1da6,0x11df,0x4f6,0x4f6,0x4f6,0x1bae,0x1bae,0xf04,0x1ba6,0xf0c,0x4f6,0x4f6,0x1111,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1bf9,0x1bf9,0x1bf9,0xf4c,0xf51,0x752,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0xad8,0x170e,0xae0,0x170f,0x1706,0x1717,0x171d,0x1725,0xae8,\n-0x184d,0x184d,0x75a,0x4f6,0x4f6,0x4f6,0x4f6,0x11d7,0x183d,0x183d,0xbdf,0xccf,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1756,0x175d,0xaf0,0x1760,0xaf8,0xb00,0xb08,0x175a,0xb10,0xb18,0xb20,0x175f,0x1767,0x1756,0x175d,0x1759,\n-0x1760,0x1768,0x1757,0x175e,0x175a,0xb27,0x172d,0x1735,0x173c,0x1743,0x1730,0x1738,0x173f,0x1746,0xb2f,0x174e,\n-0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,0x1cf6,\n-0x1ce6,0x1ce9,0x1ce6,0x1cf0,0x10d5,0x762,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1109,0x76a,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1dc6,0x1212,0x772,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1dd6,0x1248,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x1c31,0x1c31,0x1c31,0x1c31,0x1c31,0x1c31,0xfd4,0x4f6,0x1d16,0x1d0e,0x10dd,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x776,0x1d9e,0x11c7,0x4f6,0x4f6,0x121a,0x121b,0x77e,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0xea1,0xea9,0xeb1,0xeb9,0xec1,0xec9,0xed0,0xed4,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x782,0x1044,0x1c81,0x104a,0x1c81,0x1052,0x1057,0x105b,0x105b,\n-0x10b5,0x1d2e,0x1d36,0x10bd,0x1d06,0x10c5,0x10cd,0x1d76,0x1dbe,0x1dbe,0x1191,0x1199,0x1232,0x1238,0x1238,0x1238,\n-0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,\n-0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,\n-0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78a,0x78b,0xb37,0x1770,0x1770,0x1770,0x793,0x793,0x793,0x793,\n-0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x79b,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,\n-0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,\n-0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,\n-0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,\n-0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x793,0x19cc,0xd37,0x19d4,0x19d4,0xd3b,0xe61,0xe69,0xe71,\n-0xde6,0x1a7d,0x1a95,0xdee,0x1a8d,0xdf6,0xdfa,0xe01,0xe09,0xe10,0xe18,0xe20,0xe22,0xe22,0xe22,0xe22,\n-0x1af6,0x1afe,0x1af6,0x1b04,0x1b0c,0x1ad7,0x1b14,0x1b1c,0x1af6,0x1b24,0x1b2c,0x1b33,0x1b3b,0x1adf,0x1af6,0x1b40,\n-0x1ae7,0x1aee,0x1b48,0x1b4e,0x1be2,0x1be9,0x1bda,0x1b56,0x1b5e,0x1b66,0x1b6e,0x1c51,0x1b76,0x1b7e,0xe79,0xe81,\n-0x1ac7,0x1ac7,0x1ac7,0xe89,0x1c09,0x1c09,0xf61,0xf69,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,\n-0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0x1a6a,0x1a68,0x1a72,0x1a68,0x1a68,0x1a68,\n-0x1a68,0x1a68,0x1a68,0x1a75,0x1a68,0x1a68,0x1a68,0x1a68,0x1a68,0xdde,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cb9,\n-0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cb9,0x1cbe,0x1cb9,0x1cb9,0x1cb9,0x1083,0x1085,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x114d,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,\n-0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,0x1d46,\n-0x1d46,0x1155,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1acf,0x1d6e,0x1d6e,0x1d6e,0x1d6e,0x1d6e,\n-0x1d6e,0x1d6e,0x115d,0x1165,0x1223,0x122a,0x1d86,0x1d86,0x1d86,0x1d86,0x1d86,0x1d86,0x1d86,0x1d86,0x1d86,0x1d86,\n-0x1d86,0x1181,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,\n-0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x4f6,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1287,0x1250,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1258,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1780,0x1780,0x1780,0x1780,0x1780,0x1780,\n-0x1780,0x1780,0x1780,0x1780,0x1780,0x1780,0x1780,0x1780,0x1780,0x1780,0x128f,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x125c,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,\n-0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x1250,0x125c,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1297,0x1b86,0x1b86,0x1b86,0x1b86,0x1b86,0x1b86,0x129f,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x12a7,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x160b,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1613,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,0x161b,\n-0x161b,0x161b,0x161b,0x161b,0x161b,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n-0x1623,0x1623,0x1623,0x1623,0x1623,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,0x1778,\n-0x1778,0x1778,0x1778,0x1778,0x1778,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,\n-0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1a9d,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,\n-0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1cfe,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,\n-0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d3e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,\n-0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x1d7e,0x4d5,0x4d5,0x4d5,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,\n-0x2bb,0x2be,0x2c7,0x2c1,0x2c1,0x2c4,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,\n-0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x2bb,0x7ef,0x7e9,0x7ce,0x7c5,0x7bc,0x7b9,0x7b0,0x7cb,\n-0x7b6,0x7c2,0x7c5,0x7e0,0x7d7,0x7c8,0x7ec,0x7bf,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,\n-0x7ad,0x7ad,0x7d4,0x7d1,0x7da,0x7da,0x7da,0x7e9,0x7b0,0x7fb,0x7fb,0x7fb,0x7fb,0x7fb,0x7fb,0x7f5,\n-0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,0x7f5,\n-0x7f5,0x7f5,0x7f5,0x7b6,0x7bc,0x7c2,0x7e6,0x7aa,0x7e3,0x7f8,0x7f8,0x7f8,0x7f8,0x7f8,0x7f8,0x7f2,\n-0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,0x7f2,\n-0x7f2,0x7f2,0x7f2,0x7b6,0x7dd,0x7b3,0x7da,0x2bb,0,0,0,0,0,0,0,0,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n+0xde5,0xdf5,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,\n+0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xa40,0xd65,\n+0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,\n+0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x119d,0x111d,\n+0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,\n+0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x11dd,0x115d,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0xba4,0xbab,0xbb3,0xbbb,0x1881,0x1881,0x1881,0xbc3,0xbcb,0xbce,0x18b1,0x18a9,0xc01,0xd2a,0xd2e,0xd32,\n+0x508,0x508,0x508,0x508,0xd3a,0x1a18,0xd42,0xf3f,0x1735,0xae4,0xaea,0x1000,0xbd6,0x18e9,0xc7b,0x508,\n+0x174a,0x173d,0x1742,0x1889,0xbde,0xbe6,0x1134,0x113a,0x1c6d,0xf5d,0x1c5d,0x6f8,0x508,0x508,0x508,0x508,\n+0x1c8d,0x1c8d,0x1c8d,0x1c8d,0x1c8d,0x1c8d,0x1c8d,0x1c8d,0x1c8d,0xfb0,0xfb8,0xfc0,0x508,0x508,0x508,0x508,\n+0xbee,0xbf1,0xdc9,0x1cd5,0xff8,0x700,0x508,0x1092,0xccb,0xd4a,0x508,0x508,0x1c02,0xeff,0xf07,0x1d1d,\n+0xc55,0xc5c,0xc64,0x1a94,0x1cb5,0x508,0x1c95,0xfd0,0x1a9c,0xdd1,0xdd9,0xde1,0x1020,0x708,0x508,0x508,\n+0x1aa4,0x1aa4,0x710,0x508,0x1d4a,0x10aa,0x1d42,0x10b2,0x1e0e,0x11ac,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0xde9,0x1e66,0x1291,0x508,0x508,0x1e2e,0x11d4,0x11db,0x718,0x508,0x71c,0x1248,0x11e3,\n+0x1b19,0x1b1b,0xe55,0xe5c,0x1aac,0x1ab4,0xdf1,0xf1f,0x1bfa,0xee7,0xeef,0xfc8,0x1c1a,0x1c1e,0x1c26,0x1040,\n+0xf93,0xf98,0x724,0x508,0x109a,0x10a2,0x1c7d,0xfa0,0xf75,0xf7b,0xf83,0xf8b,0x508,0x508,0x508,0x508,\n+0x1daa,0x1da2,0x1124,0x112c,0x1cfd,0x1cf5,0x1068,0x508,0x508,0x508,0x508,0x508,0x1ce5,0x1028,0x1030,0x1038,\n+0x1cad,0x1ca5,0xfe0,0x111c,0x1c2e,0xf2f,0x72c,0x508,0x1078,0x1080,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x1e06,0x118e,0x734,0x508,0x508,0x1d0d,0x1d05,0x1070,0x1250,0x1256,0x125e,0x508,0x508,0x11eb,0x11ef,0x11f7,\n+0x1dde,0x1dd6,0x1176,0x1dce,0x1dc6,0x73c,0x1cdd,0x1018,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x10da,0x10df,0x10e7,0x10ee,0x110e,0x1114,0x508,0x508,0x115a,0x115e,0x1166,0x119e,0x11a4,0x744,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x11bc,0x508,0x508,0x508,0x508,0x508,0x748,0x1e4e,0x1238,\n+0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,\n+0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x195e,0x1963,0xcd3,0xcda,0xcda,0xcda,\n+0x196b,0x196b,0x196b,0xce2,0x1d3a,0x1d3a,0x1d3a,0x1d3a,0x1d3a,0x1d3a,0x750,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,0x1b23,\n+0x1b23,0xe64,0xfe8,0x758,0x508,0x508,0x75c,0xf37,0x1ccd,0x1cc5,0x1008,0x1010,0x764,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x1e26,0x1e1e,0x11cc,0x508,0x508,0x508,0x1c12,0x1c12,0xf0f,0x1c0a,0xf17,0x508,0x508,0x1106,\n+0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,\n+0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dba,0x1dbe,0x1e76,0x1e76,0x1e76,0x1e76,0x1e76,0x1e76,0x1e76,0x1e76,\n+0x1e76,0x1e76,0x1e76,0x1e76,0x1e76,0x1e76,0x1266,0x126c,0x1286,0x1289,0x1289,0x1289,0x76c,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x1c65,0x1c65,0x1c65,\n+0xf50,0xf55,0x774,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x1752,0x1752,0x1752,\n+0x1752,0x1752,0x1752,0x1752,0xaf2,0x1762,0xafa,0x1763,0x175a,0x176b,0x1771,0x1779,0xb02,0x18a1,0x18a1,0x77c,\n+0x508,0x508,0x508,0x508,0x11c4,0x1891,0x1891,0xbf9,0xcea,0x508,0x508,0x508,0x508,0x17aa,0x17b1,0xb0a,\n+0x17b4,0xb12,0xb1a,0xb22,0x17ae,0xb2a,0xb32,0xb3a,0x17b3,0x17bb,0x17aa,0x17b1,0x17ad,0x17b4,0x17bc,0x17ab,\n+0x17b2,0x17ae,0xb41,0x1781,0x1789,0x1790,0x1797,0x1784,0x178c,0x1793,0x179a,0xb49,0x17a2,0x1d62,0x1d62,0x1d62,\n+0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d62,0x1d52,0x1d55,0x1d52,\n+0x1d5c,0x10ca,0x784,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x10fe,0x78c,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x1e46,0x11ff,0x794,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x1e56,0x1240,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x1c9d,0x1c9d,0x1c9d,\n+0x1c9d,0x1c9d,0x1c9d,0xfd8,0x508,0x1d9a,0x1d92,0x10d2,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x798,0x1e16,0x11b4,0x508,0x508,0x1207,0x1208,0x7a0,0x508,0x508,0x508,0x508,0x508,0xeac,0xeb4,0xebc,\n+0xec4,0xecc,0xed4,0xedb,0xedf,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x7a4,0x1048,0x1ced,0x104e,0x1ced,0x1056,0x105b,0x1060,0x1060,0x1d72,0x1d82,0x1d8a,\n+0x10ba,0x1d7a,0x1e36,0x10c2,0x1dee,0x1e3e,0x1e3e,0x117e,0x1186,0x121f,0x1225,0x122a,0x1230,0x1e5e,0x1e5e,0x1e5e,\n+0x1e5e,0x1274,0x1e5e,0x127a,0x127e,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,\n+0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,0x7ac,\n+0x7ac,0x7ac,0x7ac,0x7ac,0x7ad,0xb51,0x17c4,0x17c4,0x17c4,0x7b5,0x7b5,0x7b5,0x7b5,0x1899,0x1899,0x1899,\n+0x1899,0x1899,0x1899,0x1899,0x7bd,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,\n+0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,\n+0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,\n+0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,\n+0x7b5,0x7b5,0x7b5,0x7b5,0x7b5,0x1a20,0xd52,0x1a28,0x1a28,0xd56,0xe6c,0xe74,0xe7c,0x1ae9,0x1ad1,0x1af1,\n+0x1af9,0x1ae1,0xe01,0xe05,0xe0c,0xe14,0xe1b,0xe23,0xe2b,0xe2d,0xe2d,0xe2d,0xe2d,0x1b5a,0x1b62,0x1b5a,\n+0x1b68,0x1b70,0x1b3b,0x1b78,0x1b80,0x1b5a,0x1b88,0x1b90,0x1b97,0x1b9f,0x1b43,0x1b5a,0x1ba4,0x1b4b,0x1b52,0x1bac,\n+0x1bb2,0x1c4e,0x1c55,0x1c46,0x1bba,0x1bc2,0x1bca,0x1bd2,0x1cbd,0x1bda,0x1be2,0xe84,0xe8c,0x1b2b,0x1b2b,0x1b2b,\n+0xe94,0x1c75,0x1c75,0xf65,0xf6d,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,\n+0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abe,0x1abc,0x1ac6,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,\n+0x1ac9,0x1abc,0x1abc,0x1abc,0x1abc,0x1abc,0xdf9,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x1d25,0x1d25,0x1d25,0x1d25,0x1d25,0x1d25,0x1d25,0x1d25,0x1d25,\n+0x1d25,0x1d25,0x1d25,0x1d25,0x1d25,0x1d2a,0x1d25,0x1d25,0x1d25,0x1088,0x108a,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1142,0x1b33,0x1de6,0x1de6,0x1de6,0x1de6,0x1de6,0x1de6,0x1de6,0x114a,\n+0x1152,0x1210,0x1217,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x1dfe,0x116e,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x508,\n+0x508,0x508,0x508,0x508,0x508,0x508,0x508,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x12d0,0x1299,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,\n+0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,\n+0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x12a1,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,\n+0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x17d4,0x12d8,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x12a5,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,\n+0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,\n+0x1e6e,0x12ad,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,0x1299,\n+0x1299,0x12a5,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x12e0,0x1bea,0x1bea,0x1bea,0x1bea,\n+0x1bea,0x1bea,0x12e8,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x12f0,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1654,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x165c,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,\n+0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x1664,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,\n+0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x166c,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,\n+0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x17cc,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,\n+0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1b01,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,\n+0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1d6a,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,\n+0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1db2,0x1df6,0x1df6,0x1df6,\n+0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,\n+0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,\n+0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,\n+0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1df6,0x1e6e,0x1e6e,0x1e6e,\n+0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,\n+0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,\n+0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,\n+0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x1e6e,0x4e7,0x4e7,0x4e7,\n+0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2ca,0x2d3,0x2cd,0x2cd,0x2d0,0x2c7,0x2c7,\n+0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,0x2c7,\n+0x7fb,0x7f5,0x7da,0x7d1,0x7c8,0x7c5,0x7bc,0x7d7,0x7c2,0x7ce,0x7d1,0x7ec,0x7e3,0x7d4,0x7f8,0x7cb,\n+0x7b9,0x7b9,0x7b9,0x7b9,0x7b9,0x7b9,0x7b9,0x7b9,0x7b9,0x7b9,0x7e0,0x7dd,0x7e6,0x7e6,0x7e6,0x7f5,\n+0x7bc,0x807,0x807,0x807,0x807,0x807,0x807,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,\n+0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x7c2,0x7c8,0x7ce,0x7f2,0x7b6,\n+0x7ef,0x804,0x804,0x804,0x804,0x804,0x804,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,\n+0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7fe,0x7c2,0x7e9,0x7bf,0x7e6,0x2c7,\n@@ -1729,103 +1753,105 @@\n-0,0,0,0,0,0,0,0,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2d9,0x2ca,0x2ca,\n-0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,\n-0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2ca,0x2cd,0x645,0x804,0x807,0x64b,0x807,0x801,0x642,\n-0x639,0x2d3,0x657,0x2d6,0x80a,0x630,0x64e,0x7fe,0x648,0x654,0x636,0x636,0x63c,0x2d0,0x642,0x63f,\n-0x639,0x636,0x657,0x2d6,0x633,0x633,0x633,0x645,0x2df,0x2df,0x2df,0x2df,0x2df,0x2df,0x660,0x2df,\n-0x2df,0x2df,0x2df,0x2df,0x2df,0x2df,0x2df,0x2df,0x660,0x2df,0x2df,0x2df,0x2df,0x2df,0x2df,0x651,\n-0x660,0x2df,0x2df,0x2df,0x2df,0x2df,0x660,0x65a,0x65d,0x65d,0x2dc,0x2dc,0x2dc,0x2dc,0x65a,0x2dc,\n-0x65d,0x65d,0x65d,0x2dc,0x65d,0x65d,0x2dc,0x2dc,0x65a,0x2dc,0x65d,0x65d,0x2dc,0x2dc,0x2dc,0x651,\n-0x65a,0x65d,0x65d,0x2dc,0x65d,0x2dc,0x65a,0x2dc,0x2eb,0x666,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,\n-0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2e8,0x663,0x2eb,0x666,0x2eb,0x2e2,0x2eb,0x2e2,\n-0x2eb,0x2e2,0x2eb,0x666,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x66c,0x663,\n-0x2eb,0x2e2,0x2eb,0x666,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x663,0x66f,0x669,0x2eb,0x2e2,0x2eb,0x2e2,\n-0x663,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x66f,0x669,0x66c,0x663,0x2eb,0x666,0x2eb,0x2e2,0x2eb,\n-0x666,0x672,0x66c,0x663,0x2eb,0x666,0x2eb,0x2e2,0x2eb,0x2e2,0x66c,0x663,0x2eb,0x2e2,0x2eb,0x2e2,\n-0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x66c,0x663,\n-0x2eb,0x2e2,0x2eb,0x666,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,\n-0x2eb,0x2eb,0x2e2,0x2eb,0x2e2,0x2eb,0x2e2,0x2e5,0x2ee,0x2fa,0x2fa,0x2ee,0x2fa,0x2ee,0x2fa,0x2fa,\n-0x2ee,0x2fa,0x2fa,0x2fa,0x2ee,0x2ee,0x2fa,0x2fa,0x2fa,0x2fa,0x2ee,0x2fa,0x2fa,0x2ee,0x2fa,0x2fa,\n-0x2fa,0x2ee,0x2ee,0x2ee,0x2fa,0x2fa,0x2ee,0x2fa,0x2fd,0x2f1,0x2fa,0x2ee,0x2fa,0x2ee,0x2fa,0x2fa,\n-0x2ee,0x2fa,0x2ee,0x2ee,0x2fa,0x2ee,0x2fa,0x2fd,0x2f1,0x2fa,0x2fa,0x2fa,0x2ee,0x2fa,0x2ee,0x2fa,\n-0x2fa,0x2ee,0x2ee,0x2f7,0x2fa,0x2ee,0x2ee,0x2ee,0x2f7,0x2f7,0x2f7,0x2f7,0x300,0x300,0x2f4,0x300,\n-0x300,0x2f4,0x300,0x300,0x2f4,0x2fd,0x675,0x2fd,0x675,0x2fd,0x675,0x2fd,0x675,0x2fd,0x675,0x2fd,\n-0x675,0x2fd,0x675,0x2fd,0x675,0x2ee,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fa,0x2ee,0x2fd,0x2f1,\n-0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2f1,0x300,0x300,0x2f4,0x2fd,0x2f1,0x9e1,0x9e1,\n-0x9e4,0x9de,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,\n-0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x2fd,0x2f1,0x9e4,0x9de,0x9e4,0x9de,\n-0x9e1,0x9db,0x9e4,0x9de,0xba6,0xcae,0x9e1,0x9db,0x9e1,0x9db,0x9e4,0x9de,0x9e4,0x9de,0x9e4,0x9de,\n-0x9e4,0x9de,0x9e4,0x9de,0x9e4,0x9de,0x9e4,0x9de,0xcae,0xcae,0xcae,0xdad,0xdad,0xdad,0xdb0,0xdb0,\n-0xdad,0xdb0,0xdb0,0xdad,0xdad,0xdb0,0xeee,0xef1,0xef1,0xef1,0xef1,0xeee,0xef1,0xeee,0xef1,0xeee,\n-0xef1,0xeee,0xef1,0xeee,0x303,0x678,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,\n-0x303,0x303,0x303,0x303,0x303,0x678,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,\n-0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,\n-0x303,0x303,0x303,0x303,0x306,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,\n-0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x303,0x9e7,0x9e7,0x9e7,0x9e7,0x9e7,0xcb1,0xcb1,\n-0x31e,0x31e,0x31e,0x31e,0x31e,0x31e,0x31e,0x31e,0x31e,0x315,0x315,0x315,0x315,0x315,0x315,0x315,\n-0x312,0x312,0x30f,0x30f,0x67e,0x30f,0x315,0x681,0x318,0x681,0x681,0x681,0x318,0x681,0x315,0x315,\n-0x684,0x31b,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x67b,0x67b,0x67b,0x67b,0x30c,0x67b,0x30f,0xb1c,\n-0x31e,0x31e,0x31e,0x31e,0x31e,0x309,0x309,0x309,0x309,0x309,0x9f0,0x9f0,0x9ed,0x9ea,0x9ed,0xcb4,\n-0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,\n-0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,\n-0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,\n-0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,\n-0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,0x687,\n-0x68a,0x68a,0x942,0x68a,0x68a,0x945,0xb1f,0xb1f,0xb1f,0xb1f,0xb1f,0xb1f,0xb1f,0xb1f,0xb1f,0xc63,\n-0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xeb5,0xeb5,0xeb5,0xeb5,0xeb8,0xd7d,0xd7d,0xd7d,\n-0x68d,0x68d,0xb22,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,0xcab,\n-0xf9c,0xf99,0xf9c,0xf99,0x32a,0x333,0xf9c,0xf99,9,9,0x339,0xef4,0xef4,0xef4,0x321,0x14f1,\n-9,9,9,9,0x336,0x324,0x348,0x327,0x348,0x348,0x348,9,0x348,9,0x348,0x348,\n-0x33f,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,\n-0x693,0x693,9,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x348,0x348,0x33f,0x33f,0x33f,0x33f,\n-0x33f,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x690,\n-0x690,0x690,0x33c,0x690,0x690,0x690,0x690,0x690,0x690,0x690,0x33f,0x33f,0x33f,0x33f,0x33f,0xf9c,\n-0x34b,0x34b,0x34e,0x348,0x348,0x34b,0x342,0x9f3,0xbaf,0xbac,0x345,0x9f3,0x345,0x9f3,0x345,0x9f3,\n-0x345,0x9f3,0x330,0x32d,0x330,0x32d,0x330,0x32d,0x330,0x32d,0x330,0x32d,0x330,0x32d,0x330,0x32d,\n-0x34b,0x34b,0x342,0x33c,0xb5e,0xb5b,0xba9,0xcba,0xcb7,0xcbd,0xcba,0xcb7,0xdb3,0xdb6,0xdb6,0xdb6,\n-0xa02,0x69f,0x35a,0x35d,0x35a,0x35a,0x35a,0x35d,0x35a,0x35a,0x35a,0x35a,0x35d,0xa02,0x35d,0x35a,\n-0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69f,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,\n-0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,\n-0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x699,0x696,0x696,0x696,0x696,0x696,0x696,\n-0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x696,0x9fc,0x699,0x354,0x357,\n-0x354,0x354,0x354,0x357,0x354,0x354,0x354,0x354,0x357,0x9fc,0x357,0x354,0x35a,0x354,0x35a,0x354,\n-0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,\n-0x35a,0x354,0x35d,0x357,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x351,0x94e,\n-0x951,0x933,0x933,0x1143,0x9f6,0x9f6,0xbb5,0xbb2,0x9ff,0x9f9,0x9ff,0x9f9,0x35a,0x354,0x35a,0x354,\n-0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,\n-0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,\n-0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x354,0x35a,0x35d,0x357,0x35a,\n-0x354,0xbb5,0xbb2,0x35a,0x354,0xbb5,0xbb2,0x35a,0x354,0xbb5,0xbb2,0xef7,0x35d,0x357,0x35d,0x357,\n-0x35a,0x354,0x35d,0x357,0x35a,0x354,0x35d,0x357,0x35d,0x357,0x35d,0x357,0x35a,0x354,0x35d,0x357,\n-0x35d,0x357,0x35d,0x357,0x35a,0x354,0x35d,0x357,0xa02,0x9fc,0x35d,0x357,0x35d,0x357,0x35d,0x357,\n-0x35d,0x357,0xdbc,0xdb9,0x35d,0x357,0xefa,0xef7,0xefa,0xef7,0xefa,0xef7,0xc24,0xc21,0xc24,0xc21,\n-0xc24,0xc21,0xc24,0xc21,0xc24,0xc21,0xc24,0xc21,0xc24,0xc21,0xc24,0xc21,0xf27,0xf24,0xf27,0xf24,\n-0x1017,0x1014,0x1017,0x1014,0x1017,0x1014,0x1017,0x1014,0x1017,0x1014,0x1017,0x1014,0x1017,0x1014,0x1017,0x1014,\n-0x117c,0x1179,0x1365,0x1362,0x152a,0x1527,0x152a,0x1527,0x152a,0x1527,0x152a,0x1527,0xc,0x36f,0x36f,0x36f,\n-0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,\n-0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0x36f,0xc,0xc,0x372,0x360,0x363,0x363,0x366,0x363,0x360,\n-0x1932,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,\n-0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,0x369,\n-0x369,0x369,0x369,0x36c,0x1932,0x8b8,0xa05,0xc,0xc,0x14f4,0x14f4,0x1410,0xf,0x975,0x975,0x975,\n-0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0xdbf,0x975,\n-0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x375,0x375,0x375,0x375,\n-0x375,0x375,0x375,0x375,0x375,0x375,0xefd,0x375,0x375,0x375,0x381,0x375,0x378,0x375,0x375,0x384,\n-0x978,0xdc2,0xdc5,0xdc2,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x387,0x387,0x387,0x387,\n-0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,0x387,\n-0x387,0x387,0x387,0x387,0x387,0x387,0x387,0xf,0xf,0xf,0xf,0x1935,0x387,0x387,0x387,0x37e,\n-0x37b,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xcd2,0xcd2,0xcd2,0xcd2,\n-0x1413,0x14f7,0xfa5,0xfa5,0xfa5,0xfa2,0xfa2,0xdcb,0x8be,0xccc,0xcc9,0xcc9,0xcc0,0xcc0,0xcc0,0xcc0,\n-0xcc0,0xcc0,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0x8bb,0x14ee,0x12,0xdce,0x8c1,0x132c,0x3a2,0x3a5,0x3a5,\n-0x3a5,0x3a5,0x3a5,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,\n-0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0xfa8,0xfa8,0xfa8,0xfa8,0xfa8,0x8c4,0x3a2,0x3a2,0x3a2,\n-0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x939,0x939,0x939,0x939,0x939,0x939,0x939,0x939,0xb55,\n-0xb55,0xb55,0xcc0,0xcc6,0xcc3,0xdc8,0xdc8,0xdc8,0xdc8,0xdc8,0xdc8,0x1329,0x954,0x954,0x954,0x954,\n-0x954,0x954,0x954,0x954,0x954,0x954,0x39c,0x399,0x396,0x393,0xbb8,0xbb8,0x936,0x3a2,0x3a2,0x3ae,\n-0x3a2,0x3a8,0x3a8,0x3a8,0x3a8,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,\n-0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,\n-0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,\n-0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,\n-0xa0b,0xa0b,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0xa0b,0x3a5,0x3a2,0x3a5,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,\n-0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0x3a2,0xa0b,0x3a2,0x3a2,0x3a2,0x3a5,0x957,0x3a2,0x38d,0x38d,\n-0x38d,0x38d,0x38d,0x38d,0x38d,0x38a,0x393,0x390,0x390,0x38d,0x38d,0x38d,0x38d,0x3ab,0x3ab,0x38d,\n-0x38d,0x393,0x390,0x390,0x390,0x38d,0xccf,0xccf,0x39f,0x39f,0x39f,0x39f,0x39f,0x39f,0x39f,0x39f,\n-0x39f,0x39f,0xa0b,0xa0b,0xa0b,0xa08,0xa08,0xccf,0xa20,0xa20,0xa20,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,\n-0xa1a,0xa1a,0xa1a,0xa17,0xa1a,0xa17,0x15,0xa23,0xa1d,0xa0e,0xa1d,0xa1d,0xa1d,0xa1d,0xa1d,0xa1d,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2e5,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,\n+0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,0x2d6,\n+0x2d9,0x651,0x810,0x813,0x657,0x813,0x80d,0x64e,0x645,0x2df,0x663,0x2e2,0x816,0x63c,0x65a,0x80a,\n+0x654,0x660,0x642,0x642,0x648,0x2dc,0x64e,0x64b,0x645,0x642,0x663,0x2e2,0x63f,0x63f,0x63f,0x651,\n+0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x66c,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,\n+0x66c,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x65d,0x66c,0x2eb,0x2eb,0x2eb,0x2eb,0x2eb,0x66c,0x666,\n+0x669,0x669,0x2e8,0x2e8,0x2e8,0x2e8,0x666,0x2e8,0x669,0x669,0x669,0x2e8,0x669,0x669,0x2e8,0x2e8,\n+0x666,0x2e8,0x669,0x669,0x2e8,0x2e8,0x2e8,0x65d,0x666,0x669,0x669,0x2e8,0x669,0x2e8,0x666,0x2e8,\n+0x2f7,0x672,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,\n+0x2f4,0x66f,0x2f7,0x672,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x672,0x2f7,0x2ee,0x2f7,0x2ee,\n+0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x678,0x66f,0x2f7,0x2ee,0x2f7,0x672,0x2f7,0x2ee,0x2f7,0x2ee,\n+0x2f7,0x66f,0x67b,0x675,0x2f7,0x2ee,0x2f7,0x2ee,0x66f,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x67b,\n+0x675,0x678,0x66f,0x2f7,0x672,0x2f7,0x2ee,0x2f7,0x672,0x67e,0x678,0x66f,0x2f7,0x672,0x2f7,0x2ee,\n+0x2f7,0x2ee,0x678,0x66f,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,\n+0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x678,0x66f,0x2f7,0x2ee,0x2f7,0x672,0x2f7,0x2ee,0x2f7,0x2ee,\n+0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2f7,0x2ee,0x2f7,0x2ee,0x2f7,0x2ee,0x2f1,\n+0x2fa,0x306,0x306,0x2fa,0x306,0x2fa,0x306,0x306,0x2fa,0x306,0x306,0x306,0x2fa,0x2fa,0x306,0x306,\n+0x306,0x306,0x2fa,0x306,0x306,0x2fa,0x306,0x306,0x306,0x2fa,0x2fa,0x2fa,0x306,0x306,0x2fa,0x306,\n+0x309,0x2fd,0x306,0x2fa,0x306,0x2fa,0x306,0x306,0x2fa,0x306,0x2fa,0x2fa,0x306,0x2fa,0x306,0x309,\n+0x2fd,0x306,0x306,0x306,0x2fa,0x306,0x2fa,0x306,0x306,0x2fa,0x2fa,0x303,0x306,0x2fa,0x2fa,0x2fa,\n+0x303,0x303,0x303,0x303,0x30c,0x30c,0x300,0x30c,0x30c,0x300,0x30c,0x30c,0x300,0x309,0x681,0x309,\n+0x681,0x309,0x681,0x309,0x681,0x309,0x681,0x309,0x681,0x309,0x681,0x309,0x681,0x2fa,0x309,0x2fd,\n+0x309,0x2fd,0x309,0x2fd,0x306,0x2fa,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,\n+0x2fd,0x30c,0x30c,0x300,0x309,0x2fd,0x9ea,0x9ea,0x9ed,0x9e7,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,\n+0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,0x309,0x2fd,\n+0x309,0x2fd,0x309,0x2fd,0x9ed,0x9e7,0x9ed,0x9e7,0x9ea,0x9e4,0x9ed,0x9e7,0xbaf,0xcb7,0x9ea,0x9e4,\n+0x9ea,0x9e4,0x9ed,0x9e7,0x9ed,0x9e7,0x9ed,0x9e7,0x9ed,0x9e7,0x9ed,0x9e7,0x9ed,0x9e7,0x9ed,0x9e7,\n+0xcb7,0xcb7,0xcb7,0xdb6,0xdb6,0xdb6,0xdb9,0xdb9,0xdb6,0xdb9,0xdb9,0xdb6,0xdb6,0xdb9,0xefa,0xefd,\n+0xefd,0xefd,0xefd,0xefa,0xefd,0xefa,0xefd,0xefa,0xefd,0xefa,0xefd,0xefa,0x30f,0x684,0x30f,0x30f,\n+0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x684,0x30f,0x30f,\n+0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,\n+0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x312,0x30f,0x30f,0x30f,\n+0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,0x30f,\n+0x30f,0x9f0,0x9f0,0x9f0,0x9f0,0x9f0,0xcba,0xcba,0x327,0x327,0x327,0x327,0x327,0x327,0x327,0x327,\n+0x327,0x31e,0x31e,0x31e,0x31e,0x31e,0x31e,0x31e,0x31b,0x31b,0x318,0x318,0x68a,0x318,0x31e,0x68d,\n+0x321,0x68d,0x68d,0x68d,0x321,0x68d,0x31e,0x31e,0x690,0x324,0x318,0x318,0x318,0x318,0x318,0x318,\n+0x687,0x687,0x687,0x687,0x315,0x687,0x318,0xb25,0x327,0x327,0x327,0x327,0x327,0x318,0x318,0x318,\n+0x318,0x318,0x9f9,0x9f9,0x9f6,0x9f3,0x9f6,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,\n+0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0xcbd,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,\n+0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,\n+0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,\n+0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,\n+0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x693,0x696,0x696,0x94b,0x696,0x696,0x94e,0xb28,0xb28,\n+0xb28,0xb28,0xb28,0xb28,0xb28,0xb28,0xb28,0xc6c,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,\n+0xebe,0xebe,0xebe,0xebe,0xec1,0xd86,0xd86,0xd86,0x699,0x699,0xb2b,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,\n+0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xcb4,0xfa8,0xfa5,0xfa8,0xfa5,0x333,0x33c,0xfa8,0xfa5,\n+9,9,0x342,0xf00,0xf00,0xf00,0x32a,0x14fd,9,9,9,9,0x33f,0x32d,0x351,0x330,\n+0x351,0x351,0x351,9,0x351,9,0x351,0x351,0x348,0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,\n+0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,0x69f,9,0x69f,0x69f,0x69f,0x69f,0x69f,\n+0x69f,0x69f,0x351,0x351,0x348,0x348,0x348,0x348,0x348,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,\n+0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x69c,0x345,0x69c,0x69c,0x69c,0x69c,0x69c,\n+0x69c,0x69c,0x348,0x348,0x348,0x348,0x348,0xfa8,0x354,0x354,0x357,0x351,0x351,0x354,0x34b,0x9fc,\n+0xbb8,0xbb5,0x34e,0x9fc,0x34e,0x9fc,0x34e,0x9fc,0x34e,0x9fc,0x339,0x336,0x339,0x336,0x339,0x336,\n+0x339,0x336,0x339,0x336,0x339,0x336,0x339,0x336,0x354,0x354,0x34b,0x345,0xb67,0xb64,0xbb2,0xcc3,\n+0xcc0,0xcc6,0xcc3,0xcc0,0xdbc,0xdbf,0xdbf,0xdbf,0xa0b,0x6ab,0x363,0x366,0x363,0x363,0x363,0x366,\n+0x363,0x363,0x363,0x363,0x366,0xa0b,0x366,0x363,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,\n+0x6a8,0x6ab,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,\n+0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a8,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,\n+0x6a2,0x6a5,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,0x6a2,\n+0x6a2,0x6a2,0x6a2,0x6a2,0xa05,0x6a5,0x35d,0x360,0x35d,0x35d,0x35d,0x360,0x35d,0x35d,0x35d,0x35d,\n+0x360,0xa05,0x360,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,\n+0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x366,0x360,0x363,0x35d,0x363,0x35d,\n+0x363,0x35d,0x363,0x35d,0x363,0x35d,0x35a,0x957,0x95a,0x93c,0x93c,0x114f,0x9ff,0x9ff,0xbbe,0xbbb,\n+0xa08,0xa02,0xa08,0xa02,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,\n+0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,\n+0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,0x363,0x35d,\n+0x363,0x35d,0x363,0x35d,0x363,0x366,0x360,0x363,0x35d,0xbbe,0xbbb,0x363,0x35d,0xbbe,0xbbb,0x363,\n+0x35d,0xbbe,0xbbb,0xf03,0x366,0x360,0x366,0x360,0x363,0x35d,0x366,0x360,0x363,0x35d,0x366,0x360,\n+0x366,0x360,0x366,0x360,0x363,0x35d,0x366,0x360,0x366,0x360,0x366,0x360,0x363,0x35d,0x366,0x360,\n+0xa0b,0xa05,0x366,0x360,0x366,0x360,0x366,0x360,0x366,0x360,0xdc5,0xdc2,0x366,0x360,0xf06,0xf03,\n+0xf06,0xf03,0xf06,0xf03,0xc2d,0xc2a,0xc2d,0xc2a,0xc2d,0xc2a,0xc2d,0xc2a,0xc2d,0xc2a,0xc2d,0xc2a,\n+0xc2d,0xc2a,0xc2d,0xc2a,0xf33,0xf30,0xf33,0xf30,0x1023,0x1020,0x1023,0x1020,0x1023,0x1020,0x1023,0x1020,\n+0x1023,0x1020,0x1023,0x1020,0x1023,0x1020,0x1023,0x1020,0x1188,0x1185,0x1371,0x136e,0x1536,0x1533,0x1536,0x1533,\n+0x1536,0x1533,0x1536,0x1533,0xc,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,\n+0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0x378,0xc,\n+0xc,0x37b,0x369,0x369,0x369,0x36f,0x369,0x36c,0x1941,0x372,0x372,0x372,0x372,0x372,0x372,0x372,\n+0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,\n+0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x372,0x375,0x1941,0x37e,0xa0e,0xc,\n+0xc,0x1500,0x1500,0x141c,0xf,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,\n+0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0xdc8,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,0x97e,\n+0x97e,0x97e,0x97e,0x97e,0x381,0x381,0x381,0x381,0x381,0x381,0x381,0x381,0x381,0x381,0xf09,0x381,\n+0x381,0x381,0x38d,0x381,0x384,0x381,0x381,0x390,0x981,0xdcb,0xdce,0xdcb,0xf,0xf,0xf,0xf,\n+0xf,0xf,0xf,0xf,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,\n+0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0x393,0xf,\n+0xf,0xf,0xf,0x1944,0x393,0x393,0x393,0x38a,0x387,0xf,0xf,0xf,0xf,0xf,0xf,0xf,\n+0xf,0xf,0xf,0xf,0xcdb,0xcdb,0xcdb,0xcdb,0x141f,0x1503,0xfb1,0xfb1,0xfb1,0xfae,0xfae,0xdd4,\n+0x8c7,0xcd5,0xcd2,0xcd2,0xcc9,0xcc9,0xcc9,0xcc9,0xcc9,0xcc9,0xfab,0xfab,0xfab,0xfab,0xfab,0x8c4,\n+0x14fa,0x12,0xdd7,0x8ca,0x1338,0x3ae,0x3b1,0x3b1,0x3b1,0x3b1,0x3b1,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,\n+0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0xfb4,\n+0xfb4,0xfb4,0xfb4,0xfb4,0x8cd,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x942,\n+0x942,0x942,0x942,0x942,0x942,0x942,0x942,0xb5e,0xb5e,0xb5e,0xcc9,0xccf,0xccc,0xdd1,0xdd1,0xdd1,\n+0xdd1,0xdd1,0xdd1,0x1335,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x3a8,0x3a5,\n+0x3a2,0x39f,0xbc1,0xbc1,0x93f,0x3ae,0x3ae,0x3ba,0x3ae,0x3b4,0x3b4,0x3b4,0x3b4,0x3ae,0x3ae,0x3ae,\n+0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,\n+0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,\n+0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,\n+0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0xa14,0xa14,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0xa14,\n+0x3b1,0x3ae,0x3b1,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0x3ae,0xa14,\n+0x3ae,0x3ae,0x3ae,0x3b1,0x95d,0x3ae,0x399,0x399,0x399,0x399,0x399,0x399,0x399,0x396,0x39f,0x39c,\n+0x39c,0x399,0x399,0x399,0x399,0x3b7,0x3b7,0x399,0x399,0x39f,0x39c,0x39c,0x39c,0x399,0xcd8,0xcd8,\n+0x3ab,0x3ab,0x3ab,0x3ab,0x3ab,0x3ab,0x3ab,0x3ab,0x3ab,0x3ab,0xa14,0xa14,0xa14,0xa11,0xa11,0xcd8,\n+0xa29,0xa29,0xa29,0xa23,0xa23,0xa23,0xa23,0xa23,0xa23,0xa23,0xa23,0xa20,0xa23,0xa20,0x15,0xa2c,\n+0xa26,0xa17,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,\n+0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xcde,0xcde,0xcde,\n@@ -1833,56 +1859,53 @@\n-0xa1d,0xa1d,0xa1d,0xa1d,0xa1d,0xcd5,0xcd5,0xcd5,0xa14,0xa14,0xa14,0xa14,0xa14,0xa14,0xa14,0xa14,\n-0xa14,0xa14,0xa14,0xa14,0xa14,0xa14,0xa14,0xa14,0xa11,0xa11,0xa11,0xa11,0xa11,0xa11,0xa11,0xa11,\n-0xa11,0xa11,0xa11,0x15,0x15,0xcd5,0xcd5,0xcd5,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,\n-0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,\n-0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,\n-0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0x1029,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,\n-0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,\n-0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa29,0xa26,0xa26,\n-0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xa26,0xbbb,0x18,0x18,0x18,0x18,0x18,0x18,\n-0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0xf3f,0xf3f,0xf3f,0xf3f,0xf3f,0xf3f,0xf3f,0xf3f,\n-0xf3f,0xf3f,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,\n-0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,0xf42,\n-0xf42,0xf42,0xf42,0xf36,0xf36,0xf36,0xf36,0xf36,0xf36,0xf36,0xf36,0xf36,0xf45,0xf45,0xf39,0xf39,\n-0xf3c,0xf4b,0xf48,0x10e,0x10e,0x1959,0x195c,0x195c,0x18ed,0x18ed,0x18ed,0x18ed,0x18ed,0x18ed,0x18ed,0x18ed,\n-0x18ed,0x18ed,0x18ed,0x25b,0x25b,0x25b,0x25b,0x25b,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xb2e,0xb2e,0xb31,0xb31,0xb2e,0xb2e,0xb2e,0xb2e,\n-0xb2e,0xb2e,0xb2e,0xb2e,0x72,0x72,0x72,0x72,0x15ae,0x15ae,0x15ae,0x15ae,0x1c2,0x1c2,0x1c2,0x1c2,\n-0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x15ab,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1668,\n-0x1668,0x1668,0x1668,0x1668,0x1668,0x1668,0x1668,0x1668,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,\n-0x201,0x16a1,0x16a1,0x16a1,0x16a1,0x16a1,0x16a1,0x16a1,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,\n-0x126f,0x177,0x177,0x177,0x177,0x177,0x177,0x177,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,\n-0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,\n-0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0x1d7,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,\n-0x14ca,0x14ca,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x264,0x264,0x264,0x264,0x264,0x264,0x264,0x264,\n-0x264,0x264,0x264,0x264,0x264,0x264,0x264,0x264,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x18db,0x18de,0x18de,0x258,0x258,0x258,0x258,0x258,\n-0x258,0x258,0x258,0x258,0x258,0x258,0x258,0x258,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x19a7,0x19a7,0x19a7,0x19a7,0x19a7,0x19a7,0x19a7,0x19a7,\n-0x19a7,0x19a7,0x26a,0x26a,0x26a,0x26a,0x26a,0x26a,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x179d,0x179d,0x179d,0x179d,0x21c,0x21c,0x21c,0x21c,\n-0x21c,0x21c,0x21c,0x21c,0x21c,0x21c,0x21c,0x21c,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,\n-0x1653,0x1653,0x1ef,0x1ef,0x1ef,0x1ef,0x1659,0x1659,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,\n-0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,\n-0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1707,0x1707,0x1707,0x1707,0x204,0x204,0x204,0x204,\n-0x204,0x204,0x204,0x204,0x204,0x204,0x204,0x204,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0xe25,0xe25,0xe22,0xe22,0xe22,0xe25,0xdb,0xdb,\n-0xdb,0xdb,0xdb,0xdb,0xdb,0xdb,0xdb,0xdb,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x22b,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,\n-0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1836,0x1836,0x237,0x1836,0x1836,0x237,0x1836,0x1836,\n-0x1836,0x1836,0x1836,0x237,0x237,0x237,0x237,0x237,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x1a5e,0x1a5e,0x1a5e,0x1a5e,0x1a5e,0x1a5e,0x1a5e,0x1a5e,\n-0x1a5e,0x1a5e,0x28b,0x28b,0x28b,0x28b,0x1a61,0x1a5b,0,0,0,0,0,0,0,0,\n-0,0,0,0,0,0,0,0,0x270,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,\n-0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,\n-0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0,0,0,0,0,0,0,0,\n+0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0xa1a,0x15,0x15,0xcde,0xcde,0xcde,\n+0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,\n+0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0xe37,0x1035,0x1035,\n+0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,0x1035,\n+0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,\n+0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,\n+0xa32,0xa32,0xa32,0xa32,0xa32,0xa32,0xa2f,0xa2f,0xa2f,0xa2f,0xa2f,0xa2f,0xa2f,0xa2f,0xa2f,0xa2f,\n+0xa2f,0xbc4,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,\n+0xf4b,0xf4b,0xf4b,0xf4b,0xf4b,0xf4b,0xf4b,0xf4b,0xf4b,0xf4b,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,\n+0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,\n+0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf4e,0xf42,0xf42,0xf42,0xf42,0xf42,\n+0xf42,0xf42,0xf42,0xf42,0xf51,0xf51,0xf45,0xf45,0xf48,0xf57,0xf54,0x10b,0x10b,0x1968,0x196b,0x196b,\n+0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x18f9,0x252,0x252,0x252,0x252,0x252,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xb37,0xb37,0xb3a,0xb3a,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0x72,0x72,0x72,0x72,\n+0x15ba,0x15ba,0x15ba,0x15ba,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x15b7,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1ef,0x1ef,0x1ef,0x1ef,0x1ef,0x1ef,0x1ef,0x1674,0x1674,0x1674,0x1674,0x1674,0x1674,0x1674,0x1674,0x1674,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x16ad,0x16ad,0x16ad,0x16ad,0x16ad,0x16ad,0x16ad,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x174,0x174,0x174,0x174,0x174,0x174,0x174,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,\n+0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x14d6,0x14d6,0x14d6,0x14d6,0x14d6,0x14d6,0x14d6,0x14d6,0x14d6,0x14d6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,0x25b,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x18e7,0x18ea,0x18ea,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x261,0x261,0x261,0x261,0x261,0x261,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1b1b,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,\n+0x17a9,0x17a9,0x17a9,0x17a9,0x216,0x216,0x216,0x216,0x216,0x216,0x216,0x216,0x216,0x216,0x216,0x216,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x1e9,0x1e9,0x1e9,0x1e9,0x1665,0x1665,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,\n+0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1713,0x1713,0x1713,0x1713,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0xe2e,0xe2e,0xe2b,0xe2b,0xe2b,0xe2e,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x225,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x1845,0x1845,0x231,0x1845,0x1845,0x231,0x1845,0x1845,0x1845,0x1845,0x1845,0x231,0x231,0x231,0x231,0x231,\n@@ -1890,1 +1913,7 @@\n-0,0,0,0,0,0,0x972,0x972,3,3,3,3,3,3,3,3,\n+0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x1a6d,0x282,0x282,0x282,0x282,0x1a70,0x1a6a,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x267,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,\n+0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0x97b,0x97b,\n+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,\n@@ -1892,1 +1921,1 @@\n-3,3,3,3,3,3,3,3,3,3,0x972,0x972,6,6,6,6,\n+3,3,0x97b,0x97b,6,6,6,6,6,6,6,6,6,6,6,6,\n@@ -1894,74 +1923,74 @@\n-6,6,6,6,6,6,6,6,6,6,6,6,0xd83,0xd83,0xd83,0xd83,\n-0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,6,6,6,6,\n-6,6,6,6,6,6,6,6,6,6,6,6,0x14fd,0x3c9,0x3d8,0x3d8,\n-0x1b,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x1b,0x1b,0x3de,0x3de,0x1b,0x1b,0x3de,\n-0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x3de,0x1b,0x3de,0x3de,\n-0x3de,0x3de,0x3de,0x3de,0x3de,0x1b,0x3de,0x1b,0x1b,0x1b,0x3de,0x3de,0x3de,0x3de,0x1b,0x1b,\n-0x3cc,0xcdb,0x3c9,0x3d8,0x3d8,0x3c9,0x3c9,0x3c9,0x3c9,0x1b,0x1b,0x3d8,0x3d8,0x1b,0x1b,0x3db,\n-0x3db,0x3cf,0xdd4,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x1b,0x3c9,0x1b,0x1b,0x1b,0x1b,\n-0x3e1,0x3e1,0x1b,0x3e1,0x3de,0x3de,0x3c9,0x3c9,0x1b,0x1b,0x95d,0x95d,0x95d,0x95d,0x95d,0x95d,\n-0x95d,0x95d,0x95d,0x95d,0x3de,0x3de,0x3d5,0x3d5,0x3d2,0x3d2,0x3d2,0x3d2,0x3d2,0x3d5,0x3d2,0x1152,\n-0x1896,0x1893,0x1938,0x1b,0x1e,0xcde,0x3e4,0xce1,0x1e,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x1e,\n-0x1e,0x1e,0x1e,0x3f0,0x3f0,0x1e,0x1e,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,\n-0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x1e,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x3f0,0x1e,0x3f0,0x3f3,\n-0x1e,0x3f0,0x3f3,0x1e,0x3f0,0x3f0,0x1e,0x1e,0x3e7,0x1e,0x3ed,0x3ed,0x3ed,0x3e4,0x3e4,0x1e,\n-0x1e,0x1e,0x1e,0x3e4,0x3e4,0x1e,0x1e,0x3e4,0x3e4,0x3ea,0x1e,0x1e,0x1e,0xfb1,0x1e,0x1e,\n-0x1e,0x1e,0x1e,0x1e,0x1e,0x3f3,0x3f3,0x3f3,0x3f0,0x1e,0x3f3,0x1e,0x1e,0x1e,0x1e,0x1e,\n-0x1e,0x1e,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x960,0x3e4,0x3e4,0x3f0,0x3f0,\n-0x3f0,0xfb1,0x193b,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x21,0x3f6,0x3f6,0x3ff,\n-0x21,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0xcea,0x402,0x21,0x402,0x402,0x402,0x21,0x402,\n-0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x402,0x21,0x402,0x402,\n-0x402,0x402,0x402,0x402,0x402,0x21,0x402,0x402,0x21,0x402,0x402,0x402,0x402,0x402,0x21,0x21,\n-0x3f9,0x402,0x3ff,0x3ff,0x3ff,0x3f6,0x3f6,0x3f6,0x3f6,0x3f6,0x21,0x3f6,0x3f6,0x3ff,0x21,0x3ff,\n-0x3ff,0x3fc,0x21,0x21,0x402,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,\n-0x21,0x21,0x21,0x21,0x402,0xcea,0xce4,0xce4,0x21,0x21,0x963,0x963,0x963,0x963,0x963,0x963,\n-0x963,0x963,0x963,0x963,0x1416,0xce7,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x1719,0x1899,0x1899,\n-0x1899,0x189c,0x189c,0x189c,0x24,0x405,0x414,0x414,0x24,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,\n-0x41a,0x24,0x24,0x41a,0x41a,0x24,0x24,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,\n-0x41a,0x41a,0x41a,0x41a,0x41a,0x24,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,0x41a,0x24,0x41a,0x41a,\n-0x24,0xced,0x41a,0x41a,0x41a,0x41a,0x24,0x24,0x408,0x41a,0x405,0x405,0x414,0x405,0x405,0x405,\n-0xfb4,0x24,0x24,0x414,0x417,0x24,0x24,0x417,0x417,0x40b,0x24,0x24,0x24,0x24,0x24,0x24,\n-0x24,0x24,0x405,0x405,0x24,0x24,0x24,0x24,0x41d,0x41d,0x24,0x41a,0x41a,0x41a,0xfb4,0xfb4,\n-0x24,0x24,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x411,0x40e,0xced,0x1338,0x1338,\n-0x1338,0x1338,0x1338,0x1338,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x27,0x27,0x420,0x42c,\n-0x27,0x42c,0x42c,0x42c,0x42c,0x42c,0x42c,0x27,0x27,0x27,0x42c,0x42c,0x42c,0x27,0x42c,0x42c,\n-0x42f,0x42c,0x27,0x27,0x27,0x42c,0x42c,0x27,0x42c,0x27,0x42c,0x42c,0x27,0x27,0x27,0x42c,\n-0x42c,0x27,0x27,0x27,0x42c,0x42c,0x42c,0x27,0x27,0x27,0x42c,0x42c,0x42c,0x42c,0x42c,0x42c,\n-0x42c,0x42c,0xdd7,0x42c,0x42c,0x42c,0x27,0x27,0x27,0x27,0x420,0x426,0x420,0x426,0x426,0x27,\n-0x27,0x27,0x426,0x426,0x426,0x27,0x429,0x429,0x429,0x423,0x27,0x27,0xfb7,0x27,0x27,0x27,\n-0x27,0x27,0x27,0x420,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0xeeb,0x969,\n-0x969,0x969,0x969,0x969,0x969,0x969,0x969,0x969,0x966,0x966,0x966,0xda7,0xcf0,0xcf0,0xcf0,0xcf0,\n-0xcf0,0xcf3,0xcf0,0x27,0x27,0x27,0x27,0x27,0x1500,0x43e,0x43e,0x43e,0x193e,0x441,0x441,0x441,\n-0x441,0x441,0x441,0x441,0x441,0x2a,0x441,0x441,0x441,0x2a,0x441,0x441,0x441,0x441,0x441,0x441,\n-0x441,0x441,0x441,0x441,0x441,0x441,0x441,0x441,0x441,0x2a,0x441,0x441,0x441,0x441,0x441,0x441,\n-0x441,0x441,0x441,0x441,0x1503,0x441,0x441,0x441,0x441,0x441,0x2a,0x2a,0x2a,0xfc0,0x432,0x432,\n-0x432,0x43e,0x43e,0x43e,0x43e,0x2a,0x432,0x432,0x435,0x2a,0x432,0x432,0x432,0x438,0x2a,0x2a,\n-0x2a,0x2a,0x2a,0x2a,0x2a,0x432,0x432,0x2a,0xfc0,0xfc0,0x171c,0x2a,0x2a,0x2a,0x2a,0x2a,\n-0x441,0x441,0xfba,0xfba,0x2a,0x2a,0x43b,0x43b,0x43b,0x43b,0x43b,0x43b,0x43b,0x43b,0x43b,0x43b,\n-0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x1a0a,0xfbd,0xfbd,0xfbd,0xfbd,0xfbd,0xfbd,0xfbd,0xfbd,\n-0x17d9,0x1506,0x44a,0x44a,0x1941,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x2d,0x450,0x450,\n-0x450,0x2d,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,\n-0x450,0x2d,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x450,0x2d,0x450,0x450,0x450,\n-0x450,0x450,0x2d,0x2d,0xcf6,0xcf9,0x44a,0x444,0x44d,0x44a,0x444,0x44a,0x44a,0x2d,0x444,0x44d,\n-0x44d,0x2d,0x44d,0x44d,0x444,0x447,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x444,0x444,0x2d,\n-0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x450,0x2d,0x450,0x450,0xf03,0xf03,0x2d,0x2d,0x96c,0x96c,\n-0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x2d,0xf06,0xf06,0x2d,0x2d,0x2d,0x2d,0x2d,\n-0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x189f,0x1509,0x45c,0x45c,0x30,0x462,0x462,0x462,\n-0x462,0x462,0x462,0x462,0x462,0x30,0x462,0x462,0x462,0x30,0x462,0x462,0x462,0x462,0x462,0x462,\n-0x462,0x462,0x462,0x462,0x462,0x462,0x462,0x462,0x45c,0x453,0x453,0x453,0xfc3,0x30,0x45c,0x45c,\n-0x45c,0x30,0x45f,0x45f,0x45f,0x456,0x133e,0x17dc,0x30,0x30,0x30,0x30,0x17df,0x17df,0x17df,0x453,\n-0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x171f,0x462,0x462,0xfc3,0xfc3,0x30,0x30,0x459,0x459,\n-0x459,0x459,0x459,0x459,0x459,0x459,0x459,0x459,0xfc6,0xfc6,0xfc6,0xfc6,0xfc6,0xfc6,0x17dc,0x17dc,\n-0x17dc,0xfc9,0xfcc,0xfcc,0xfcc,0xfcc,0xfcc,0xfcc,0x33,0x33,0xa35,0xa35,0x33,0xa3b,0xa3b,0xa3b,\n-0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0x33,\n-0x33,0x33,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,\n-0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0x33,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,\n-0x33,0xa3b,0x33,0x33,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0xa3b,0x33,0x33,0x33,0xa2f,0x33,\n-0x33,0x33,0x33,0xa2c,0xa35,0xa35,0xa2c,0xa2c,0xa2c,0x33,0xa2c,0x33,0xa35,0xa35,0xa38,0xa35,\n-0xa38,0xa38,0xa38,0xa2c,0x33,0x33,0x33,0x33,0x33,0x33,0x150c,0x150c,0x150c,0x150c,0x150c,0x150c,\n-0x150c,0x150c,0x150c,0x150c,0x33,0x33,0xa35,0xa35,0xa32,0x33,0x33,0x33,0x33,0x33,0x33,0x33,\n-0x33,0x33,0x33,0x33,0x36,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,0x47d,\n-0x47d,0x47d,0x47d,0x47d,0x47d,0x468,0x47d,0x47a,0x468,0x468,0x468,0x468,0x468,0x468,0x46e,0x36,\n-0x36,0x36,0x36,0x465,0x483,0x483,0x483,0x483,0x483,0x47d,0x480,0x46b,0x46b,0x46b,0x46b,0x46b,\n-0x46b,0x468,0x46b,0x471,0x477,0x477,0x477,0x477,0x477,0x477,0x477,0x477,0x477,0x477,0x474,0x474,\n+6,6,6,6,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,\n+0xd8c,0xd8c,0xd8c,0xd8c,6,6,6,6,6,6,6,6,6,6,6,6,\n+6,6,6,6,0x1509,0x3d5,0x3e4,0x3e4,0x1b,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,\n+0x3ea,0x1b,0x1b,0x3ea,0x3ea,0x1b,0x1b,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,\n+0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x1b,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x3ea,0x1b,0x3ea,0x1b,\n+0x1b,0x1b,0x3ea,0x3ea,0x3ea,0x3ea,0x1b,0x1b,0x3d8,0xce4,0x3d5,0x3e4,0x3e4,0x3d5,0x3d5,0x3d5,\n+0x3d5,0x1b,0x1b,0x3e4,0x3e4,0x1b,0x1b,0x3e7,0x3e7,0x3db,0xddd,0x1b,0x1b,0x1b,0x1b,0x1b,\n+0x1b,0x1b,0x1b,0x3d5,0x1b,0x1b,0x1b,0x1b,0x3ed,0x3ed,0x1b,0x3ed,0x3ea,0x3ea,0x3d5,0x3d5,\n+0x1b,0x1b,0x966,0x966,0x966,0x966,0x966,0x966,0x966,0x966,0x966,0x966,0x3ea,0x3ea,0x3e1,0x3e1,\n+0x3de,0x3de,0x3de,0x3de,0x3de,0x3e1,0x3de,0x115e,0x18a2,0x189f,0x1947,0x1b,0x1e,0xce7,0x3f0,0xcea,\n+0x1e,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x1e,0x1e,0x1e,0x1e,0x3fc,0x3fc,0x1e,0x1e,0x3fc,\n+0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x1e,0x3fc,0x3fc,\n+0x3fc,0x3fc,0x3fc,0x3fc,0x3fc,0x1e,0x3fc,0x3ff,0x1e,0x3fc,0x3ff,0x1e,0x3fc,0x3fc,0x1e,0x1e,\n+0x3f3,0x1e,0x3f9,0x3f9,0x3f9,0x3f0,0x3f0,0x1e,0x1e,0x1e,0x1e,0x3f0,0x3f0,0x1e,0x1e,0x3f0,\n+0x3f0,0x3f6,0x1e,0x1e,0x1e,0xfbd,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x3ff,0x3ff,0x3ff,\n+0x3fc,0x1e,0x3ff,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x1e,0x969,0x969,0x969,0x969,0x969,0x969,\n+0x969,0x969,0x969,0x969,0x3f0,0x3f0,0x3fc,0x3fc,0x3fc,0xfbd,0x194a,0x1e,0x1e,0x1e,0x1e,0x1e,\n+0x1e,0x1e,0x1e,0x1e,0x21,0x402,0x402,0x40b,0x21,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,\n+0xcf3,0x40e,0x21,0x40e,0x40e,0x40e,0x21,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,\n+0x40e,0x40e,0x40e,0x40e,0x40e,0x21,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,0x40e,0x21,0x40e,0x40e,\n+0x21,0x40e,0x40e,0x40e,0x40e,0x40e,0x21,0x21,0x405,0x40e,0x40b,0x40b,0x40b,0x402,0x402,0x402,\n+0x402,0x402,0x21,0x402,0x402,0x40b,0x21,0x40b,0x40b,0x408,0x21,0x21,0x40e,0x21,0x21,0x21,\n+0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x40e,0xcf3,0xced,0xced,\n+0x21,0x21,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x96c,0x1422,0xcf0,0x21,0x21,\n+0x21,0x21,0x21,0x21,0x21,0x1725,0x18a5,0x18a5,0x18a5,0x18a8,0x18a8,0x18a8,0x24,0x411,0x420,0x420,\n+0x24,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x24,0x24,0x426,0x426,0x24,0x24,0x426,\n+0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x426,0x24,0x426,0x426,\n+0x426,0x426,0x426,0x426,0x426,0x24,0x426,0x426,0x24,0xcf6,0x426,0x426,0x426,0x426,0x24,0x24,\n+0x414,0x426,0x411,0x411,0x420,0x411,0x411,0x411,0xfc0,0x24,0x24,0x420,0x423,0x24,0x24,0x423,\n+0x423,0x417,0x24,0x24,0x24,0x24,0x24,0x24,0x24,0x1ab5,0x411,0x411,0x24,0x24,0x24,0x24,\n+0x429,0x429,0x24,0x426,0x426,0x426,0xfc0,0xfc0,0x24,0x24,0x41d,0x41d,0x41d,0x41d,0x41d,0x41d,\n+0x41d,0x41d,0x41d,0x41d,0x41a,0xcf6,0x1344,0x1344,0x1344,0x1344,0x1344,0x1344,0x24,0x24,0x24,0x24,\n+0x24,0x24,0x24,0x24,0x27,0x27,0x42c,0x438,0x27,0x438,0x438,0x438,0x438,0x438,0x438,0x27,\n+0x27,0x27,0x438,0x438,0x438,0x27,0x438,0x438,0x43b,0x438,0x27,0x27,0x27,0x438,0x438,0x27,\n+0x438,0x27,0x438,0x438,0x27,0x27,0x27,0x438,0x438,0x27,0x27,0x27,0x438,0x438,0x438,0x27,\n+0x27,0x27,0x438,0x438,0x438,0x438,0x438,0x438,0x438,0x438,0xde0,0x438,0x438,0x438,0x27,0x27,\n+0x27,0x27,0x42c,0x432,0x42c,0x432,0x432,0x27,0x27,0x27,0x432,0x432,0x432,0x27,0x435,0x435,\n+0x435,0x42f,0x27,0x27,0xfc3,0x27,0x27,0x27,0x27,0x27,0x27,0x42c,0x27,0x27,0x27,0x27,\n+0x27,0x27,0x27,0x27,0x27,0x27,0xef7,0x972,0x972,0x972,0x972,0x972,0x972,0x972,0x972,0x972,\n+0x96f,0x96f,0x96f,0xdb0,0xcf9,0xcf9,0xcf9,0xcf9,0xcf9,0xcfc,0xcf9,0x27,0x27,0x27,0x27,0x27,\n+0x150c,0x44a,0x44a,0x44a,0x194d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x2a,0x44d,0x44d,\n+0x44d,0x2a,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,\n+0x44d,0x2a,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x44d,0x150f,0x44d,0x44d,0x44d,\n+0x44d,0x44d,0x2a,0x2a,0x2a,0xfcc,0x43e,0x43e,0x43e,0x44a,0x44a,0x44a,0x44a,0x2a,0x43e,0x43e,\n+0x441,0x2a,0x43e,0x43e,0x43e,0x444,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x43e,0x43e,0x2a,\n+0xfcc,0xfcc,0x1728,0x2a,0x2a,0x2a,0x2a,0x2a,0x44d,0x44d,0xfc6,0xfc6,0x2a,0x2a,0x447,0x447,\n+0x447,0x447,0x447,0x447,0x447,0x447,0x447,0x447,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x1a19,\n+0xfc9,0xfc9,0xfc9,0xfc9,0xfc9,0xfc9,0xfc9,0xfc9,0x17e5,0x1512,0x456,0x456,0x1950,0x45c,0x45c,0x45c,\n+0x45c,0x45c,0x45c,0x45c,0x45c,0x2d,0x45c,0x45c,0x45c,0x2d,0x45c,0x45c,0x45c,0x45c,0x45c,0x45c,\n+0x45c,0x45c,0x45c,0x45c,0x45c,0x45c,0x45c,0x45c,0x45c,0x2d,0x45c,0x45c,0x45c,0x45c,0x45c,0x45c,\n+0x45c,0x45c,0x45c,0x45c,0x2d,0x45c,0x45c,0x45c,0x45c,0x45c,0x2d,0x2d,0xcff,0xd02,0x456,0x450,\n+0x459,0x456,0x450,0x456,0x456,0x2d,0x450,0x459,0x459,0x2d,0x459,0x459,0x450,0x453,0x2d,0x2d,\n+0x2d,0x2d,0x2d,0x2d,0x2d,0x450,0x450,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x45c,0x2d,\n+0x45c,0x45c,0xf0f,0xf0f,0x2d,0x2d,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,0x975,\n+0x2d,0xf12,0xf12,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,\n+0x18ab,0x1515,0x468,0x468,0x1ab8,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x30,0x46e,0x46e,\n+0x46e,0x30,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,\n+0x468,0x45f,0x45f,0x45f,0xfcf,0x30,0x468,0x468,0x468,0x30,0x46b,0x46b,0x46b,0x462,0x134a,0x17e8,\n+0x30,0x30,0x30,0x30,0x17eb,0x17eb,0x17eb,0x45f,0x17e8,0x17e8,0x17e8,0x17e8,0x17e8,0x17e8,0x17e8,0x172b,\n+0x46e,0x46e,0xfcf,0xfcf,0x30,0x30,0x465,0x465,0x465,0x465,0x465,0x465,0x465,0x465,0x465,0x465,\n+0xfd2,0xfd2,0xfd2,0xfd2,0xfd2,0xfd2,0x17e8,0x17e8,0x17e8,0xfd5,0xfd8,0xfd8,0xfd8,0xfd8,0xfd8,0xfd8,\n+0x33,0x1abb,0xa3e,0xa3e,0x33,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,\n+0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0x33,0x33,0x33,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,\n+0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0x33,0xa44,\n+0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0x33,0xa44,0x33,0x33,0xa44,0xa44,0xa44,0xa44,\n+0xa44,0xa44,0xa44,0x33,0x33,0x33,0xa38,0x33,0x33,0x33,0x33,0xa35,0xa3e,0xa3e,0xa35,0xa35,\n+0xa35,0x33,0xa35,0x33,0xa3e,0xa3e,0xa41,0xa3e,0xa41,0xa41,0xa41,0xa35,0x33,0x33,0x33,0x33,\n+0x33,0x33,0x1518,0x1518,0x1518,0x1518,0x1518,0x1518,0x1518,0x1518,0x1518,0x1518,0x33,0x33,0xa3e,0xa3e,\n+0xa3b,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x36,0x489,0x489,0x489,\n+0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,\n+0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x489,0x474,0x489,0x486,\n+0x474,0x474,0x474,0x474,0x474,0x474,0x47a,0x36,0x36,0x36,0x36,0x471,0x48f,0x48f,0x48f,0x48f,\n+0x48f,0x489,0x48c,0x477,0x477,0x477,0x477,0x477,0x477,0x474,0x477,0x47d,0x483,0x483,0x483,0x483,\n+0x483,0x483,0x483,0x483,0x483,0x483,0x480,0x480,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,\n@@ -1969,8 +1998,7 @@\n-0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,\n-0x39,0x492,0x492,0x39,0x492,0x39,0x1a10,0x492,0x492,0x1a10,0x492,0x39,0x1a10,0x492,0x1a10,0x1a10,\n-0x1a10,0x1a10,0x1a10,0x1a10,0x492,0x492,0x492,0x492,0x1a10,0x492,0x492,0x492,0x492,0x492,0x492,0x492,\n-0x1a10,0x492,0x492,0x492,0x39,0x492,0x39,0x492,0x1a10,0x1a10,0x492,0x492,0x1a10,0x492,0x492,0x492,\n-0x492,0x486,0x492,0x48f,0x486,0x486,0x486,0x486,0x486,0x486,0x1a0d,0x486,0x486,0x492,0x39,0x39,\n-0x49b,0x49b,0x49b,0x49b,0x49b,0x39,0x498,0x39,0x489,0x489,0x489,0x489,0x489,0x486,0x39,0x39,\n-0x48c,0x48c,0x48c,0x48c,0x48c,0x48c,0x48c,0x48c,0x48c,0x48c,0x39,0x39,0x495,0x495,0x1419,0x1419,\n-0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,\n+0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x39,0x49e,0x49e,0x39,0x49e,0x39,0x1a1f,0x49e,\n+0x49e,0x1a1f,0x49e,0x39,0x1a1f,0x49e,0x1a1f,0x1a1f,0x1a1f,0x1a1f,0x1a1f,0x1a1f,0x49e,0x49e,0x49e,0x49e,\n+0x1a1f,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x1a1f,0x49e,0x49e,0x49e,0x39,0x49e,0x39,0x49e,\n+0x1a1f,0x1a1f,0x49e,0x49e,0x1a1f,0x49e,0x49e,0x49e,0x49e,0x492,0x49e,0x49b,0x492,0x492,0x492,0x492,\n+0x492,0x492,0x1a1c,0x492,0x492,0x49e,0x39,0x39,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x39,0x4a4,0x39,\n+0x495,0x495,0x495,0x495,0x495,0x492,0x39,0x39,0x498,0x498,0x498,0x498,0x498,0x498,0x498,0x498,\n+0x498,0x498,0x39,0x39,0x4a1,0x4a1,0x1425,0x1425,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,\n@@ -1978,10 +2006,11 @@\n-0x9ae,0x9ae,0x9ae,0x9b1,0x9ae,0x9ae,0x9ae,0x9ae,0x3c,0x9ae,0x9ae,0x9ae,0x9ae,0x9b1,0x9ae,0x9ae,\n-0x9ae,0x9ae,0x9b1,0x9ae,0x9ae,0x9ae,0x9ae,0x9b1,0x9ae,0x9ae,0x9ae,0x9ae,0x9b1,0x9ae,0x9ae,0x9ae,\n-0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9b1,0xa4a,0xfd8,0xfd8,0x3c,0x3c,0x3c,\n-0x3c,0x97b,0x97b,0x97e,0x97b,0x97e,0x97e,0x987,0x97e,0x987,0x97b,0x97b,0x97b,0x97b,0x97b,0x9a8,\n-0x97b,0x97e,0x981,0x981,0x984,0x98d,0x981,0x981,0x9ae,0x9ae,0x9ae,0x9ae,0x1347,0x1341,0x1341,0x1341,\n-0x97b,0x97b,0x97b,0x97e,0x97b,0x97b,0xa3e,0x97b,0x3c,0x97b,0x97b,0x97b,0x97b,0x97e,0x97b,0x97b,\n-0x97b,0x97b,0x97e,0x97b,0x97b,0x97b,0x97b,0x97e,0x97b,0x97b,0x97b,0x97b,0x97e,0x97b,0xa3e,0xa3e,\n-0xa3e,0x97b,0x97b,0x97b,0x97b,0x97b,0x97b,0x97b,0xa3e,0x97e,0xa3e,0xa3e,0xa3e,0x3c,0xa47,0xa47,\n-0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0xa41,0xa44,0xa44,0xa44,0xa44,0xa44,0xa44,0x3c,0xfcf,0xa44,\n-0xdda,0xdda,0xfd2,0xfd5,0xfcf,0x1155,0x1155,0x1155,0x1155,0x1344,0x1344,0x3c,0x3c,0x3c,0x3c,0x3c,\n+0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x9b7,0x9b7,0x9b7,0x9ba,0x9b7,0x9b7,0x9b7,0x9b7,\n+0x3c,0x9b7,0x9b7,0x9b7,0x9b7,0x9ba,0x9b7,0x9b7,0x9b7,0x9b7,0x9ba,0x9b7,0x9b7,0x9b7,0x9b7,0x9ba,\n+0x9b7,0x9b7,0x9b7,0x9b7,0x9ba,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,0x9b7,\n+0x9b7,0x9ba,0xa53,0xfe4,0xfe4,0x3c,0x3c,0x3c,0x3c,0x984,0x984,0x987,0x984,0x987,0x987,0x990,\n+0x987,0x990,0x984,0x984,0x984,0x984,0x984,0x9b1,0x984,0x987,0x98a,0x98a,0x98d,0x996,0x98a,0x98a,\n+0x9b7,0x9b7,0x9b7,0x9b7,0x1353,0x134d,0x134d,0x134d,0x984,0x984,0x984,0x987,0x984,0x984,0xa47,0x984,\n+0x3c,0x984,0x984,0x984,0x984,0x987,0x984,0x984,0x984,0x984,0x987,0x984,0x984,0x984,0x984,0x987,\n+0x984,0x984,0x984,0x984,0x987,0x984,0xa47,0xa47,0xa47,0x984,0x984,0x984,0x984,0x984,0x984,0x984,\n+0xa47,0x987,0xa47,0xa47,0xa47,0x3c,0xa50,0xa50,0xa4d,0xa4d,0xa4d,0xa4d,0xa4d,0xa4d,0xa4a,0xa4d,\n+0xa4d,0xa4d,0xa4d,0xa4d,0xa4d,0x3c,0xfdb,0xa4d,0xde3,0xde3,0xfde,0xfe1,0xfdb,0x1161,0x1161,0x1161,\n+0x1161,0x1350,0x1350,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,\n@@ -1989,53 +2018,52 @@\n-0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x3c,0x4a1,0x4a1,0x4a1,0x4a1,\n-0x4a1,0x4a1,0x3f,0x141f,0x3f,0x3f,0x3f,0x3f,0x3f,0x141f,0x3f,0x3f,0x49e,0x49e,0x49e,0x49e,\n-0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xde9,0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0x42,0x42,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0x42,0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0x42,0x42,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xde9,0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0x42,0x42,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xde9,\n-0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0x42,0x42,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0x42,\n-0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0x42,0x42,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xde9,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xde9,0xa74,0x42,0xa74,0xa74,0xa74,0xa74,0x42,0x42,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xde9,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0x42,0x42,0x134a,0x134a,0xde3,\n-0xde6,0xa6e,0xa77,0xa6b,0xa6b,0xa6b,0xa6b,0xa77,0xa77,0xa71,0xa71,0xa71,0xa71,0xa71,0xa71,0xa71,\n-0xa71,0xa71,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0x42,0x42,0x42,\n-0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,\n-0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0x1725,0x45,0x45,0x1722,0x1722,0x1722,0x1722,0x1722,0x1722,0x45,0x45,\n-0xa8c,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,\n-0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa8f,0xa89,0xa86,0x48,0x48,0x48,\n-0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa92,0xa92,0xa92,0xa95,0xa95,\n-0xa95,0x150f,0x150f,0x150f,0x150f,0x150f,0x150f,0x150f,0x150f,0x4b,0x4b,0x4b,0x4b,0x4b,0x4b,0x4b,\n-0xab6,0xab6,0xab6,0xab6,0xab6,0xab6,0xa98,0xab6,0xab6,0xa9b,0xa9b,0xa9b,0xa9b,0xa9b,0xa9b,0xa9b,\n-0xa9b,0xa9b,0xa9e,0xa9b,0xaad,0xaad,0xab0,0xab9,0xaa7,0xaa4,0xaad,0xaaa,0xab9,0xcfc,0x4e,0x4e,\n-0xab3,0xab3,0xab3,0xab3,0xab3,0xab3,0xab3,0xab3,0xab3,0xab3,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,\n-0xcff,0xcff,0xcff,0xcff,0xcff,0xcff,0xcff,0xcff,0xcff,0xcff,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,\n-0xac8,0xac8,0xb49,0xb4c,0xace,0xb46,0xacb,0xac8,0xad1,0xae0,0xad4,0xae3,0xae3,0xae3,0xabf,0x51,\n-0xad7,0xad7,0xad7,0xad7,0xad7,0xad7,0xad7,0xad7,0xad7,0xad7,0x51,0x51,0x51,0x51,0x51,0x51,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0x1944,0x51,0x51,0x51,0x51,0x51,0x51,0x51,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xac2,0xff6,0x51,0x51,0x51,0x51,0x51,\n-0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x54,0x54,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x54,0x54,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x54,0x4c2,0x54,0x4c2,0x54,0x4c2,0x54,0x4c2,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x54,0x54,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x54,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4b9,0x4bf,0x4b9,\n-0x4b9,0x4b6,0x4bf,0x4bf,0x4bf,0x54,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4b6,0x4b6,0x4b6,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x54,0x54,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x54,0x4b6,0x4b6,0x4b6,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4b6,0x4b6,0x4b6,\n-0x54,0x54,0x4bf,0x4bf,0x4bf,0x54,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4bc,0x4b9,0x54,\n-0xbc1,0xbc4,0xbc4,0xbc4,0xfff,0x57,0x14eb,0x14eb,0x14eb,0x14eb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n-0x516,0xbd6,0x5a,0x5a,0x6d5,0x516,0x516,0x516,0x516,0x516,0x51c,0x52e,0x51c,0x528,0x522,0x6d8,\n-0x513,0x6d2,0x6d2,0x6d2,0x6d2,0x513,0x513,0x513,0x513,0x513,0x519,0x52b,0x519,0x525,0x51f,0x5a,\n-0xdf2,0xdf2,0xdf2,0xdf2,0xdf2,0x134d,0x134d,0x134d,0x134d,0x134d,0x134d,0x134d,0x134d,0x5a,0x5a,0x5a,\n-0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,\n-0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53d,0x53a,0x53a,0x53a,\n-0x53a,0x53d,0xaf2,0xaf5,0xbdc,0xbe2,0xbe2,0xbdf,0xbdf,0xbdf,0xbdf,0xdf8,0xf09,0xf09,0xf09,0xf09,\n-0x1140,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,\n-0x56d,0x56d,0x56d,0xafe,0xf12,0x1005,0x1005,0x1005,0x1005,0x129f,0x172b,0x172b,0x63,0x63,0x63,0x63,\n-0x6ff,0x6ff,0x6ff,0x6ff,0x702,0x702,0x702,0x702,0x702,0x702,0x579,0x579,0x576,0x576,0x576,0x576,\n-0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0xb0a,0xb0a,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x66,\n+0x3c,0x3c,0x3c,0x3c,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x3f,0x142b,0x3f,0x3f,0x3f,0x3f,\n+0x3f,0x142b,0x3f,0x3f,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,\n+0x4aa,0x4aa,0x4aa,0x4aa,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,0xa7d,0x42,0xa7d,0xa7d,\n+0xa7d,0xa7d,0x42,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0x42,0xa7d,0x42,0xa7d,0xa7d,\n+0xa7d,0xa7d,0x42,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,0xa7d,0x42,0xa7d,0xa7d,\n+0xa7d,0xa7d,0x42,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,0xa7d,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0x42,0x42,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0x42,0xa7d,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0x42,0x42,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0x42,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,\n+0xa7d,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0x42,0x42,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,\n+0xa7d,0xa7d,0xa7d,0x42,0x42,0x1356,0x1356,0xdec,0xdef,0xa77,0xa80,0xa74,0xa74,0xa74,0xa74,0xa80,\n+0xa80,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa71,0xa71,0xa71,0xa71,0xa71,0xa71,\n+0xa71,0xa71,0xa71,0xa71,0xa71,0x42,0x42,0x42,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,\n+0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0x1731,0x45,0x45,\n+0x172e,0x172e,0x172e,0x172e,0x172e,0x172e,0x45,0x45,0xa95,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,\n+0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,0xa98,\n+0xa98,0xa98,0xa98,0xa92,0xa8f,0x48,0x48,0x48,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,\n+0xa9e,0xa9e,0xa9e,0xa9b,0xa9b,0xa9b,0xa9e,0xa9e,0xa9e,0x151b,0x151b,0x151b,0x151b,0x151b,0x151b,0x151b,\n+0x151b,0x4b,0x4b,0x4b,0x4b,0x4b,0x4b,0x4b,0xabf,0xabf,0xabf,0xabf,0xabf,0xabf,0xaa1,0xabf,\n+0xabf,0xaa4,0xaa4,0xaa4,0xaa4,0xaa4,0xaa4,0xaa4,0xaa4,0xaa4,0xaa7,0xaa4,0xab6,0xab6,0xab9,0xac2,\n+0xab0,0xaad,0xab6,0xab3,0xac2,0xd05,0x4e,0x4e,0xabc,0xabc,0xabc,0xabc,0xabc,0xabc,0xabc,0xabc,\n+0xabc,0xabc,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0xd08,0xd08,0xd08,0xd08,0xd08,0xd08,0xd08,0xd08,\n+0xd08,0xd08,0x4e,0x4e,0x4e,0x4e,0x4e,0x4e,0xad1,0xad1,0xb52,0xb55,0xad7,0xb4f,0xad4,0xad1,\n+0xada,0xae9,0xadd,0xaec,0xaec,0xaec,0xac8,0x51,0xae0,0xae0,0xae0,0xae0,0xae0,0xae0,0xae0,0xae0,\n+0xae0,0xae0,0x51,0x51,0x51,0x51,0x51,0x51,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0x1953,0x51,0x51,0x51,0x51,0x51,0x51,0x51,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0xae3,0xacb,0x1002,0x51,0x51,0x51,0x51,0x51,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,\n+0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x54,0x54,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x54,0x54,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n+0x54,0x4ce,0x54,0x4ce,0x54,0x4ce,0x54,0x4ce,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n+0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x54,0x54,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x54,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4c5,0x4cb,0x4c5,0x4c5,0x4c2,0x4cb,0x4cb,0x4cb,0x54,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4c2,0x4c2,0x4c2,0x4cb,0x4cb,0x4cb,0x4cb,0x54,0x54,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x54,0x4c2,0x4c2,0x4c2,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4c2,0x4c2,0x4c2,0x54,0x54,0x4cb,0x4cb,0x4cb,0x54,0x4cb,0x4cb,\n+0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4c8,0x4c5,0x54,0xbca,0xbcd,0xbcd,0xbcd,0x100b,0x57,0x14f7,0x14f7,\n+0x14f7,0x14f7,0x4d7,0x4d7,0x4d7,0x4d7,0x4d7,0x4d7,0x522,0xbdf,0x5a,0x5a,0x6e1,0x522,0x522,0x522,\n+0x522,0x522,0x528,0x53a,0x528,0x534,0x52e,0x6e4,0x51f,0x6de,0x6de,0x6de,0x6de,0x51f,0x51f,0x51f,\n+0x51f,0x51f,0x525,0x537,0x525,0x531,0x52b,0x5a,0xdfb,0xdfb,0xdfb,0xdfb,0xdfb,0x1359,0x1359,0x1359,\n+0x1359,0x1359,0x1359,0x1359,0x1359,0x5a,0x5a,0x5a,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,\n+0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x5d,0x549,0x549,0x549,0x549,0x549,0x549,0x549,0x549,\n+0x549,0x549,0x549,0x549,0x549,0x546,0x546,0x546,0x546,0x549,0xafb,0xafe,0xbe5,0xbeb,0xbeb,0xbe8,\n+0xbe8,0xbe8,0xbe8,0xe01,0xf15,0xf15,0xf15,0xf15,0x114c,0x60,0x60,0x60,0x60,0x60,0x60,0x60,\n+0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x579,0x579,0x579,0xb07,0xf1e,0x1011,0x1011,0x1011,\n+0x1011,0x12ab,0x1737,0x1737,0x63,0x63,0x63,0x63,0x70b,0x70b,0x70b,0x70b,0x70e,0x70e,0x70e,0x70e,\n+0x70e,0x70e,0x585,0x585,0x582,0x582,0x582,0x582,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0xb13,0xb13,0x66,\n@@ -2043,19 +2071,13 @@\n-0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x5a3,0x69,0x69,0x69,0x69,0x69,\n-0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,\n-0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,\n-0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0x6c,0xb25,0xb25,0xb25,0xb25,0xb28,\n-0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,\n-0xb25,0xb25,0xb25,0xb28,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,\n-0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,\n-0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,\n-0x75,0x837,0x831,0x837,0x831,0x837,0x831,0x837,0x831,0x837,0x831,0x831,0x834,0x831,0x834,0x831,\n-0x834,0x831,0x834,0x831,0x834,0x831,0x834,0x831,0x834,0x831,0x834,0x831,0x834,0x831,0x834,0x831,\n-0x831,0x831,0x831,0x837,0x831,0x837,0x831,0x837,0x831,0x831,0x831,0x831,0x831,0x831,0x837,0x831,\n-0x831,0x831,0x831,0x831,0x834,0xc8a,0xc8a,0x75,0x75,0x94b,0x94b,0x915,0x915,0x83a,0x83d,0xc87,\n-0x78,0x78,0x78,0x78,0x78,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,\n-0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,0x84f,\n-0x84f,0x112e,0x190e,0x19f2,0x7b,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,\n-0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x7b,0x91e,0x91e,0x921,0x921,0x921,0x921,0x921,0x921,\n-0x921,0x921,0x921,0x921,0x921,0x921,0x921,0x921,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,\n-0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,0xb37,\n-0x13e0,0x13e0,0x13e0,0x7e,0x7e,0x7e,0x7e,0x7e,0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,\n+0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x5af,0x5af,0x5af,0x5af,0x5af,0x5af,0x5af,0x5af,\n+0x5af,0x5af,0x5af,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,\n+0x69,0x69,0x69,0x69,0x69,0x69,0x69,0x69,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,\n+0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,\n+0xb2e,0xb2e,0x6c,0xb2e,0xb2e,0xb2e,0xb2e,0xb31,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,\n+0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb31,0x6c,0x6c,0x6c,0x6c,\n+0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0x6c,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,\n+0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0x6f,0x6f,\n+0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x6f,0x75,0x843,0x83d,0x843,0x83d,0x843,0x83d,0x843,\n+0x83d,0x843,0x83d,0x83d,0x840,0x83d,0x840,0x83d,0x840,0x83d,0x840,0x83d,0x840,0x83d,0x840,0x83d,\n+0x840,0x83d,0x840,0x83d,0x840,0x83d,0x840,0x83d,0x83d,0x83d,0x83d,0x843,0x83d,0x843,0x83d,0x843,\n+0x83d,0x83d,0x83d,0x83d,0x83d,0x83d,0x843,0x83d,0x83d,0x83d,0x83d,0x83d,0x840,0xc93,0xc93,0x75,\n+0x75,0x954,0x954,0x91e,0x91e,0x846,0x849,0xc90,0x78,0x78,0x78,0x78,0x78,0x85b,0x85b,0x85b,\n@@ -2063,39 +2085,41 @@\n-0x85b,0x85b,0x85b,0x85b,0x85b,0xd8f,0xd8f,0x81,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,\n-0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0x84,0x84,0x84,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,\n-0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xc93,0xb43,0xb43,0xb43,0xc93,0xb43,0x87,\n-0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,\n-0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x9d2,0x9d2,0x9d2,0x9d2,0x8a,0x8a,0x8a,0x8a,\n-0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,0x1248,0x1248,0x1248,0x1248,0x1248,0x1248,0x1248,0x1248,\n-0x1248,0x1248,0x1248,0x1248,0x1248,0x1248,0x1248,0x1248,0x600,0x600,0x600,0x600,0x600,0x600,0x600,0x8d,\n-0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x5ee,0x5ee,0x5ee,0x5ee,0x5ee,\n-0x8d,0x8d,0x8d,0x8d,0x8d,0xb16,0x5f1,0x5f7,0x5fd,0x5fd,0x5fd,0x5fd,0x5fd,0x5fd,0x5fd,0x5fd,\n-0x5fd,0x5f4,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x8d,\n-0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x8d,0x5f7,0x8d,0x5f7,0x5f7,0x8d,0x5f7,0x5f7,0x8d,0x5f7,0x5f7,\n-0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5f7,0x5fa,0x612,0x60c,0x612,0x60c,0x60f,0x615,0x612,0x60c,\n-0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x135f,0x135f,0x90,0x90,0x90,0x90,0x90,0x90,\n-0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x612,0x60c,0x60f,0x615,0x612,\n-0x60c,0x612,0x60c,0x612,0x60c,0x612,0x612,0x60c,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,\n-0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x60f,0x60c,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,\n-0x60c,0x60f,0x60c,0x60c,0x60f,0x60f,0x60c,0x60c,0x60c,0x60c,0x60c,0x60f,0x60c,0x60c,0x60f,0x60c,\n-0x60f,0x60f,0x60f,0x60c,0x60f,0x60f,0x60f,0x60f,0x90,0x90,0x60f,0x60f,0x60f,0x60f,0x60c,0x60c,\n-0x60f,0x60c,0x60c,0x60c,0x60c,0x60f,0x60c,0x60c,0x60c,0x60c,0x60c,0x60f,0x60f,0x60f,0x60c,0x60c,\n-0x90,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,\n-0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0x612,0x612,0x96f,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x612,0x609,0x609,0xc1b,0xdaa,0x90,0x90,0x873,0x885,0x882,0x885,0x882,0xca8,0xca8,0xd9b,\n-0xd98,0x876,0x876,0x876,0x876,0x888,0x888,0x888,0x8a0,0x8a3,0x8b2,0x93,0x8a6,0x8a9,0x8b5,0x8b5,\n-0x89d,0x894,0x88e,0x894,0x88e,0x894,0x88e,0x891,0x891,0x8ac,0x8ac,0x8af,0x8ac,0x8ac,0x8ac,0x93,\n-0x8ac,0x89a,0x897,0x891,0x93,0x93,0x93,0x93,0x61e,0x62a,0x61e,0xc1e,0x61e,0x96,0x61e,0x62a,\n-0x61e,0x62a,0x61e,0x62a,0x61e,0x62a,0x61e,0x62a,0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,\n-0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x627,0x621,0x627,0x621,0x624,0x62a,0x627,0x621,0x627,\n-0x621,0x627,0x621,0x627,0x621,0x96,0x96,0x61b,0x771,0x774,0x789,0x78c,0x76b,0x774,0x774,0x9c,\n-0x753,0x756,0x756,0x756,0x756,0x753,0x753,0x9c,0x99,0x99,0x99,0x99,0x99,0x99,0x99,0x99,\n-0x99,0xb19,0xb19,0xb19,0x9d5,0x74d,0x62d,0x62d,0x9c,0x79b,0x77a,0x76b,0x774,0x771,0x76b,0x77d,\n-0x76e,0x768,0x76b,0x789,0x780,0x777,0x798,0x76b,0x795,0x795,0x795,0x795,0x795,0x795,0x795,0x795,\n-0x795,0x795,0x786,0x783,0x789,0x789,0x789,0x79b,0x75c,0x759,0x759,0x759,0x759,0x759,0x759,0x759,\n-0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x759,\n-0x759,0x759,0x759,0x759,0x759,0x759,0x759,0x9c,0x9c,0x9c,0x759,0x759,0x759,0x759,0x759,0x759,\n-0x9c,0x9c,0x759,0x759,0x759,0x759,0x759,0x759,0x9c,0x9c,0x759,0x759,0x759,0x759,0x759,0x759,\n-0x9c,0x9c,0x759,0x759,0x759,0x9c,0x9c,0x9c,0xb64,0xb64,0xb64,0xb64,0x9f,0x9f,0x9f,0x9f,\n-0x9f,0x9f,0x9f,0x9f,0x9f,0x18ab,0x18ab,0x18ab,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,\n-0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xa2,0xa2,0xa2,0xa2,0xa2,\n-0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,\n+0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,0x85b,0x113a,0x191a,0x1a01,0x7b,0x85e,0x85e,0x85e,\n+0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x7b,\n+0x927,0x927,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,0x92a,\n+0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,\n+0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0xd98,0xd98,0x7e,\n+0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0x81,0x81,0x81,\n+0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,\n+0xb4c,0xc9c,0xb4c,0xb4c,0xb4c,0xc9c,0xb4c,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,\n+0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,\n+0x9db,0x9db,0x9db,0x9db,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x87,0x87,\n+0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,\n+0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,0x8a,\n+0x8a,0x8a,0x8a,0x5fa,0x5fa,0x5fa,0x5fa,0x5fa,0x8a,0x8a,0x8a,0x8a,0x8a,0xb1f,0x5fd,0x603,\n+0x609,0x609,0x609,0x609,0x609,0x609,0x609,0x609,0x609,0x600,0x603,0x603,0x603,0x603,0x603,0x603,\n+0x603,0x603,0x603,0x603,0x603,0x603,0x603,0x8a,0x603,0x603,0x603,0x603,0x603,0x8a,0x603,0x8a,\n+0x603,0x603,0x8a,0x603,0x603,0x8a,0x603,0x603,0x603,0x603,0x603,0x603,0x603,0x603,0x603,0x606,\n+0x61e,0x618,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,\n+0x136b,0x136b,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,\n+0x8d,0x8d,0x8d,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61e,0x61e,0x618,\n+0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,\n+0x61b,0x618,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x618,0x61b,0x618,0x618,0x61b,0x61b,0x618,0x618,\n+0x618,0x618,0x618,0x61b,0x618,0x618,0x61b,0x618,0x61b,0x61b,0x61b,0x618,0x61b,0x61b,0x61b,0x61b,\n+0x8d,0x8d,0x61b,0x61b,0x61b,0x61b,0x618,0x618,0x61b,0x618,0x618,0x618,0x618,0x61b,0x618,0x618,\n+0x618,0x618,0x618,0x61b,0x61b,0x61b,0x618,0x618,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,0x8d,\n+0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,0xb6a,\n+0x61e,0x61e,0x978,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x615,0x615,0xc24,0xdb3,0x8d,0x8d,\n+0x87f,0x891,0x88e,0x891,0x88e,0xcb1,0xcb1,0xda4,0xda1,0x882,0x882,0x882,0x882,0x894,0x894,0x894,\n+0x8ac,0x8af,0x8be,0x90,0x8b2,0x8b5,0x8c1,0x8c1,0x8a9,0x8a0,0x89a,0x8a0,0x89a,0x8a0,0x89a,0x89d,\n+0x89d,0x8b8,0x8b8,0x8bb,0x8b8,0x8b8,0x8b8,0x90,0x8b8,0x8a6,0x8a3,0x89d,0x90,0x90,0x90,0x90,\n+0x62a,0x636,0x62a,0xc27,0x62a,0x93,0x62a,0x636,0x62a,0x636,0x62a,0x636,0x62a,0x636,0x62a,0x636,\n+0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x633,\n+0x62d,0x633,0x62d,0x630,0x636,0x633,0x62d,0x633,0x62d,0x633,0x62d,0x633,0x62d,0x93,0x93,0x627,\n+0x77d,0x780,0x795,0x798,0x777,0x780,0x780,0x99,0x75f,0x762,0x762,0x762,0x762,0x75f,0x75f,0x99,\n+0x96,0x96,0x96,0x96,0x96,0x96,0x96,0x96,0x96,0xb22,0xb22,0xb22,0x9de,0x759,0x639,0x639,\n+0x99,0x7a7,0x786,0x777,0x780,0x77d,0x777,0x789,0x77a,0x774,0x777,0x795,0x78c,0x783,0x7a4,0x777,\n+0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x792,0x78f,0x795,0x795,0x795,0x7a7,\n+0x768,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,\n+0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x765,0x99,\n+0x99,0x99,0x765,0x765,0x765,0x765,0x765,0x765,0x99,0x99,0x765,0x765,0x765,0x765,0x765,0x765,\n+0x99,0x99,0x765,0x765,0x765,0x765,0x765,0x765,0x99,0x99,0x765,0x765,0x765,0x99,0x99,0x99,\n+0xb6d,0xb6d,0xb6d,0xb6d,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x9c,0x18b7,0x18b7,0x18b7,\n@@ -2103,56 +2127,47 @@\n-0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,\n-0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xa8,0xa8,0x1011,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0x1731,0x1731,0x1731,0x1731,0x1731,0x1731,0x1731,0x1731,0x1731,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,\n-0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xab,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb97,0xb97,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb97,0xab,0xb97,0xb97,\n-0xab,0xab,0xb97,0xab,0xab,0xb97,0xb97,0xab,0xab,0xb97,0xb97,0xb97,0xb97,0xab,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb94,0xb94,0xb94,0xb94,0xab,0xb94,0xab,0xb94,0xb94,0xb94,\n-0xb94,0xd20,0xb94,0xb94,0xab,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb94,0xb94,0xb94,0xb94,0xb97,0xb97,0xab,0xb97,0xb97,0xb97,0xb97,0xab,0xab,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xab,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xab,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb97,0xb97,0xab,0xb97,0xb97,0xb97,0xb97,0xab,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xab,0xb97,0xab,0xab,0xab,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xab,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xe0d,0xe0d,0xab,0xab,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb94,0xb94,0xb94,0xb8e,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xf21,0xf1e,0xab,0xab,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,\n-0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xae,0xb9d,0xae,0xae,\n-0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,\n-0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xae,0xc2d,0xc2d,0xc2d,0xc2d,\n-0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xc2d,0xb1,0xc2d,0xc2d,0xc2d,0xc2d,0xc27,0xc27,\n-0xc2a,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xb1,0xc36,0xc36,0xc36,0xc36,\n-0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc30,0xc30,\n-0xc33,0xc9c,0xc9c,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,0xc3c,0xc3c,0xc3c,0xc3c,\n-0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc3c,0xc39,0xc39,\n-0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xc42,0xc42,0xc42,0xc42,\n-0xc42,0xc42,0xc42,0xc42,0xc42,0xc42,0xc42,0xc42,0xc42,0xba,0xc42,0xc42,0xc42,0xba,0xc3f,0xc3f,\n-0xba,0xba,0xba,0xba,0xba,0xba,0xba,0xba,0xba,0xba,0xba,0xba,0xd32,0xd32,0xd32,0xd32,\n-0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,\n-0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0xd32,0x152d,0x152d,0xbd,0xd23,0xd23,0xd23,0xd2f,\n-0xd2f,0xd2f,0xd2f,0xd23,0xd23,0xd2f,0xd2f,0xd2f,0xbd,0xbd,0xbd,0xbd,0xd2f,0xd2f,0xd23,0xd2f,\n-0xd2f,0xd2f,0xd2f,0xd2f,0xd2f,0xd26,0xd26,0xd26,0xbd,0xbd,0xbd,0xbd,0xd29,0xbd,0xbd,0xbd,\n-0xd35,0xd35,0xd2c,0xd2c,0xd2c,0xd2c,0xd2c,0xd2c,0xd2c,0xd2c,0xd2c,0xd2c,0xd38,0xd38,0xd38,0xd38,\n-0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xc0,0xc0,\n-0xd38,0xd38,0xd38,0xd38,0xd38,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,\n-0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,\n-0x1530,0x1530,0x1530,0x1530,0xc3,0xc3,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,\n-0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0xc3,0xc3,\n-0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,\n-0xd5f,0xd5f,0xd5f,0xd5f,0xc6,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,\n-0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xc6,0xd5f,0xd5f,0xd5f,0xd5f,\n-0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xc6,\n-0xd5f,0xd5f,0xc6,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,\n-0xd5f,0xd5f,0xc6,0xc6,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,\n-0xd5f,0xd5f,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,\n-0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,\n-0xc6,0xc6,0xc6,0xc6,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,\n-0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xc9,\n-0xc9,0xc9,0xc9,0xc9,0xda4,0xda4,0xda4,0xcc,0xcc,0xcc,0xcc,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,\n-0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,0xd9e,\n-0xd9e,0xd9e,0xd9e,0xd9e,0xcc,0xcc,0xcc,0xda1,0xda1,0xda1,0xda1,0xda1,0xda1,0xda1,0xda1,0xda1,\n+0xb73,0xb73,0xb73,0x9f,0x9f,0x9f,0x9f,0x9f,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,\n+0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,\n+0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xa2,0xa2,\n+0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xa2,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xa5,\n+0xa5,0x101d,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,\n+0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0x173d,0x173d,0x173d,0x173d,0x173d,0x173d,0x173d,0x173d,\n+0x173d,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,\n+0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xa5,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xa8,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xa8,0xba0,0xba0,0xa8,0xa8,0xba0,0xa8,0xa8,0xba0,0xba0,0xa8,\n+0xa8,0xba0,0xba0,0xba0,0xba0,0xa8,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xa8,0xb9d,0xa8,0xb9d,0xb9d,0xb9d,0xb9d,0xd29,0xb9d,0xb9d,0xa8,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xa8,0xba0,\n+0xba0,0xba0,0xba0,0xa8,0xa8,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xa8,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xba0,0xa8,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xba0,0xba0,0xa8,0xba0,0xba0,0xba0,0xba0,0xa8,0xba0,0xba0,0xba0,0xba0,0xba0,0xa8,0xba0,0xa8,\n+0xa8,0xa8,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xa8,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xe16,0xe16,0xa8,0xa8,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xb9d,0xb9d,0xb9d,0xb97,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xf2d,0xf2a,\n+0xa8,0xa8,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,\n+0xb9a,0xb9a,0xb9a,0xb9a,0xab,0xba6,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,\n+0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,0xab,\n+0xab,0xab,0xab,0xab,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,0xc36,\n+0xc36,0xae,0xc36,0xc36,0xc36,0xc36,0xc30,0xc30,0xc33,0xae,0xae,0xae,0xae,0xae,0xae,0xae,\n+0xae,0xae,0xae,0xae,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,\n+0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc3f,0xc39,0xc39,0xc3c,0xca5,0xca5,0xb1,0xb1,0xb1,0xb1,0xb1,\n+0xb1,0xb1,0xb1,0xb1,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,\n+0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc42,0xc42,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,0xb4,\n+0xb4,0xb4,0xb4,0xb4,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,\n+0xc4b,0xb7,0xc4b,0xc4b,0xc4b,0xb7,0xc48,0xc48,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,0xb7,\n+0xb7,0xb7,0xb7,0xb7,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,\n+0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,\n+0xd3b,0x1539,0x1539,0xba,0xd2c,0xd2c,0xd2c,0xd38,0xd38,0xd38,0xd38,0xd2c,0xd2c,0xd38,0xd38,0xd38,\n+0xba,0xba,0xba,0xba,0xd38,0xd38,0xd2c,0xd38,0xd38,0xd38,0xd38,0xd38,0xd38,0xd2f,0xd2f,0xd2f,\n+0xba,0xba,0xba,0xba,0xd32,0xba,0xba,0xba,0xd3e,0xd3e,0xd35,0xd35,0xd35,0xd35,0xd35,0xd35,\n+0xd35,0xd35,0xd35,0xd35,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,\n+0xd41,0xd41,0xd41,0xd41,0xd41,0xd41,0xbd,0xbd,0xd41,0xd41,0xd41,0xd41,0xd41,0xbd,0xbd,0xbd,\n+0xbd,0xbd,0xbd,0xbd,0xbd,0xbd,0xbd,0xbd,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,\n+0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0xc0,0xc0,0x153c,0x153c,\n+0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,\n+0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0xc0,0x1abe,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,\n+0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xc3,0xd68,0xd68,0xd68,\n@@ -2160,1 +2175,11 @@\n-0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xcf,0xd65,\n+0xd68,0xd68,0xd68,0xc3,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,\n+0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xc3,0xd68,0xd68,0xc3,0xd68,0xd68,0xd68,0xd68,0xd68,\n+0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xc3,0xc3,0xd68,0xd68,0xd68,0xd68,\n+0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xd68,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,\n+0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,\n+0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xc3,0xd6b,0xd6b,0xd6b,0xd6b,\n+0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,\n+0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xc6,0xc6,0xc6,0xc6,0xc6,0xdad,0xdad,0xdad,0xc9,\n+0xc9,0xc9,0xc9,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,\n+0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xda7,0xc9,0xc9,0xc9,0xdaa,\n+0xdaa,0xdaa,0xdaa,0xdaa,0xdaa,0xdaa,0xdaa,0xdaa,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,\n@@ -2162,58 +2187,58 @@\n-0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xd2,0xd2,\n-0xd6e,0xd6e,0xd6e,0xd6e,0xd6e,0xd6e,0xd6e,0xd6e,0xd6e,0xd6e,0xd2,0xd2,0xd2,0xd2,0xd2,0xd2,\n-0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,\n-0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd5,0xd5,0xd74,0xd5,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,\n-0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,\n-0xd74,0xd74,0xd5,0xd74,0xd74,0xd5,0xd5,0xd5,0xd74,0xd5,0xd5,0xd74,0xd77,0xd77,0xd77,0xd77,\n-0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,\n-0xd77,0xd77,0xd77,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xd8,0xe28,0xe28,0xe28,0xe28,\n-0xe28,0xe28,0xe28,0xe28,0xe28,0xe28,0xe28,0x1533,0x1533,0x17e5,0x17e5,0xde,0x110d,0x110d,0x110d,0x110d,\n-0x110d,0x110d,0x110d,0x110d,0x110d,0x110d,0x110d,0x110d,0x135,0x135,0x135,0x135,0xe3a,0xe3a,0xe3a,0xe3a,\n-0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,0xe3a,\n-0xe3a,0xe3a,0xe3a,0xe31,0xe31,0xe37,0xe37,0xe31,0xe1,0xe1,0xe34,0xe34,0x113d,0x113d,0x113d,0x113d,\n-0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xe4,0xc99,0xc99,0xc99,0xc99,\n-0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0x102c,0x102c,0x102c,0x102c,\n-0x102c,0x102c,0x102c,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,0x1536,\n-0x1536,0x1539,0x18b1,0x18b1,0x18b1,0x18b1,0xe7,0x17e8,0x136b,0x117f,0xf30,0xf30,0xe4c,0xe49,0xe4c,0xe49,\n-0xe49,0xe40,0xe40,0xe40,0xe40,0xe40,0xe40,0x1188,0x1185,0x1188,0x1185,0x1182,0x1182,0x1182,0x1428,0x1425,\n-0xea,0xea,0xea,0xea,0xea,0xe46,0xe43,0xe43,0xe43,0xe40,0xe46,0xe43,0xe4f,0xe4f,0xe4f,0xe4f,\n-0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,\n-0xe4f,0xe4f,0xe4f,0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xed,0xe4f,0xe4f,0xe4f,0xe4f,\n-0xe4f,0xe4f,0xe4f,0xed,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xed,0xe4f,0xe4f,0xe4f,0xe4f,\n-0xe4f,0xe4f,0xe4f,0xed,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xe4f,0xed,0xe55,0xe55,0xe55,0xe55,\n-0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe55,0xe52,0xe52,0xe52,0xe52,\n-0xe52,0xe52,0xe52,0xe52,0xe52,0xe52,0xf0,0xf0,0xf0,0xf0,0xf0,0xf0,0xe58,0xe58,0xe58,0xe58,\n-0xe58,0xe58,0xf3,0x142b,0xf3,0xf3,0xf3,0xf3,0xf3,0x142b,0xf3,0xf3,0xeaf,0xeaf,0xeaf,0xeaf,\n-0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xe5e,0xe5e,0xe5e,0xe5e,\n-0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xf6,0xe5b,0xe5b,0xe5b,0xe5b,\n-0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,\n-0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xf6,0xe70,0xe64,0xe64,0xe64,\n-0xf9,0xe64,0xe64,0xf9,0xf9,0xf9,0xf9,0xf9,0xe64,0xe64,0xe64,0xe64,0xe70,0xe70,0xe70,0xe70,\n-0xf9,0xe70,0xe70,0xe70,0xf9,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,\n-0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0xe70,0x194d,0x194d,0xf9,0xf9,\n-0xe61,0xe61,0xe61,0xf9,0xf9,0xf9,0xf9,0xe67,0xe6a,0xe6a,0xe6a,0xe6a,0xe6a,0xe6a,0xe6a,0xe6a,\n-0x194a,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xe6d,0xe6d,0xe6d,0xe6d,0xe6d,0xe6d,0xe73,0xe73,\n-0xe6a,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,\n-0xe7f,0xe7f,0x118e,0x118e,0xfc,0xfc,0xfc,0xfc,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe82,0xe82,0xe82,\n-0xe7f,0xe7f,0xe82,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xfc,0xfc,\n-0xfc,0xfc,0xfc,0xfc,0xe7c,0xe7c,0xe7c,0xe7c,0xe7c,0xe7c,0xe7c,0xe7c,0xe7c,0xe7c,0x118b,0xfc,\n-0xfc,0xfc,0xe79,0xe79,0xe88,0xe88,0xe88,0xe88,0xff,0xff,0xff,0xff,0xe88,0xe88,0xe88,0xe88,\n-0xe88,0xe88,0xe88,0xe88,0xe85,0xe88,0xe88,0xe88,0xe88,0xe88,0xff,0xff,0xff,0xff,0xff,0xff,\n-0xff,0xff,0xff,0xff,0x1542,0x1548,0x1545,0x1890,0x17eb,0x18b4,0x18b4,0x18b4,0x18b4,0x18b4,0x1953,0x1950,\n-0x1956,0x1950,0x1956,0x1a16,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,\n-0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,0x102,\n-0x102,0x102,0x102,0x102,0xeac,0xeac,0xeac,0xea9,0xea9,0xea0,0xea0,0xea9,0xea6,0xea6,0xea6,0xea6,\n-0x105,0x105,0x105,0x105,0x1308,0x1308,0x1308,0x130b,0x130b,0x130b,0x1302,0x1302,0x1305,0x1302,0x159,0x159,\n-0x159,0x159,0x159,0x159,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0x1437,0x1437,0x108,0x108,0x108,0x108,\n-0x108,0x108,0x108,0xeb2,0x1371,0x108,0x108,0x108,0x108,0x108,0x108,0x108,0x108,0x108,0x108,0x108,\n-0x108,0x108,0x108,0x136e,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,0xc69,\n-0xc69,0xc69,0xc69,0xc6c,0xedf,0xed0,0xeca,0xedc,0xed9,0xed3,0xed3,0xee2,0xecd,0xed6,0x10b,0x10b,\n-0x10b,0x10b,0x10b,0x10b,0xf63,0xf63,0xf4e,0xf63,0xf66,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,\n-0x111,0x111,0x111,0x111,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,0xf6f,0xf6f,\n-0xf54,0xf5a,0xf6f,0xf6f,0xf57,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf51,\n-0xf51,0xf51,0xf51,0xf51,0xf51,0xf51,0xf51,0xf51,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,0xf54,\n-0xf54,0x111,0x111,0x111,0x114,0x114,0x1a1c,0x1a19,0x1a1c,0x1a1c,0x1a1c,0x114,0x114,0x114,0x114,0x114,\n-0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,\n-0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x1551,0x1440,0x1440,0x1374,0x1068,0x1068,0x1068,0x1068,0x1068,\n-0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,\n-0xf7e,0xf7e,0xf7e,0xf7e,0xf7b,0xf7b,0xf81,0xf81,0x117,0x117,0x117,0x117,0x117,0x117,0x117,0x117,\n+0xd71,0xd71,0xd71,0xd71,0xd71,0xd71,0xcc,0xd6e,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,\n+0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,\n+0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xd7a,0xcf,0xcf,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,\n+0xd77,0xd77,0xcf,0xcf,0xcf,0xcf,0xcf,0xcf,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,\n+0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd2,0xd2,\n+0xd7d,0xd2,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,\n+0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd7d,0xd2,0xd7d,0xd7d,0xd2,0xd2,0xd2,\n+0xd7d,0xd2,0xd2,0xd7d,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,\n+0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd5,0xd5,0xd5,0xd5,0xd5,\n+0xd5,0xd5,0xd5,0xd5,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0x153f,\n+0x153f,0x17f1,0x17f1,0xdb,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,\n+0x1acd,0x132,0x132,0x132,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,\n+0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe43,0xe3a,0xe3a,0xe40,0xe40,0xe3a,\n+0xde,0xde,0xe3d,0xe3d,0x1149,0x1149,0x1149,0x1149,0xe1,0xe1,0xe1,0xe1,0xe1,0xe1,0xe1,0xe1,\n+0xe1,0xe1,0xe1,0xe1,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,0xca2,\n+0xca2,0xca2,0xca2,0xca2,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1542,0x1542,0x1542,0x1542,0x1542,\n+0x1542,0x1542,0x1542,0x1542,0x1542,0x1542,0x1542,0x1542,0x1542,0x1545,0x18bd,0x18bd,0x193e,0x18bd,0xe4,0x17f4,\n+0x1377,0x118b,0xf3c,0xf3c,0xe55,0xe52,0xe55,0xe52,0xe52,0xe49,0xe49,0xe49,0xe49,0xe49,0xe49,0x1194,\n+0x1191,0x1194,0x1191,0x118e,0x118e,0x118e,0x1434,0x1431,0xe7,0xe7,0xe7,0xe7,0xe7,0xe4f,0xe4c,0xe4c,\n+0xe4c,0xe49,0xe4f,0xe4c,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,\n+0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xea,0xea,0xea,0xea,0xea,\n+0xea,0xea,0xea,0xea,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xea,0xe58,0xe58,0xe58,0xe58,\n+0xe58,0xe58,0xe58,0xea,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xea,0xe58,0xe58,0xe58,0xe58,\n+0xe58,0xe58,0xe58,0xea,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,\n+0xe5e,0xe5e,0xe5e,0xe5e,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xe5b,0xed,0xed,\n+0xed,0xed,0xed,0xed,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xf0,0x1437,0xf0,0xf0,0xf0,0xf0,\n+0xf0,0x1437,0xf0,0xf0,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,\n+0xeb8,0xeb8,0xeb8,0xeb8,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,\n+0xe67,0xe67,0xe67,0xf3,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,\n+0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,0xe64,\n+0xe64,0xe64,0xe64,0xf3,0xe79,0xe6d,0xe6d,0xe6d,0xf6,0xe6d,0xe6d,0xf6,0xf6,0xf6,0xf6,0xf6,\n+0xe6d,0xe6d,0xe6d,0xe6d,0xe79,0xe79,0xe79,0xe79,0xf6,0xe79,0xe79,0xe79,0xf6,0xe79,0xe79,0xe79,\n+0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,0xe79,\n+0xe79,0xe79,0xe79,0xe79,0x195c,0x195c,0xf6,0xf6,0xe6a,0xe6a,0xe6a,0xf6,0xf6,0xf6,0xf6,0xe70,\n+0xe73,0xe73,0xe73,0xe73,0xe73,0xe73,0xe73,0xe73,0x1959,0xf6,0xf6,0xf6,0xf6,0xf6,0xf6,0xf6,\n+0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe7c,0xe7c,0xe73,0xf6,0xf6,0xf6,0xf6,0xf6,0xf6,0xf6,\n+0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0x119a,0x119a,0xf9,0xf9,0xf9,0xf9,\n+0xe88,0xe88,0xe88,0xe88,0xe88,0xe8b,0xe8b,0xe8b,0xe88,0xe88,0xe8b,0xe88,0xe88,0xe88,0xe88,0xe88,\n+0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xf9,0xf9,0xf9,0xf9,0xf9,0xf9,0xe85,0xe85,0xe85,0xe85,\n+0xe85,0xe85,0xe85,0xe85,0xe85,0xe85,0x1197,0xf9,0xf9,0xf9,0xe82,0xe82,0xe91,0xe91,0xe91,0xe91,\n+0xfc,0xfc,0xfc,0xfc,0xe91,0xe91,0xe91,0xe91,0xe91,0xe91,0xe91,0xe91,0xe8e,0xe91,0xe91,0xe91,\n+0xe91,0xe91,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0xfc,0x154e,0x1554,0x1551,0x189c,\n+0x17f7,0x18c0,0x18c0,0x18c0,0x18c0,0x18c0,0x1962,0x195f,0x1965,0x195f,0x1965,0x1a25,0x1ac1,0x1ac1,0x1ac1,0xff,\n+0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,\n+0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,\n+0xeb5,0xeb5,0xeb5,0xeb2,0xeb2,0xea9,0xea9,0xeb2,0xeaf,0xeaf,0xeaf,0xeaf,0x1ac4,0x102,0x102,0x102,\n+0x1314,0x1314,0x1314,0x1317,0x1317,0x1317,0x130e,0x130e,0x1311,0x130e,0x156,0x156,0x156,0x156,0x156,0x156,\n+0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0x1443,0x1443,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0xebb,\n+0x137d,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x105,0x137a,\n+0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc72,0xc75,\n+0xee8,0xed9,0xed3,0xee5,0xee2,0xedc,0xedc,0xeeb,0xed6,0xedf,0x108,0x108,0x108,0x108,0x108,0x108,\n+0xf6f,0xf6f,0xf5a,0xf6f,0xf72,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0x10e,0x10e,0x10e,0x10e,\n+0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf7b,0xf7b,0xf60,0xf66,0xf7b,0xf7b,\n+0xf63,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf5d,0xf5d,0xf5d,0xf5d,0xf5d,\n+0xf5d,0xf5d,0xf5d,0xf5d,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0xf60,0x10e,0x10e,0x10e,\n+0x111,0x111,0x1a2b,0x1a28,0x1a2b,0x1a2b,0x1a2b,0x1aca,0x1ac7,0x1aca,0x1ac7,0x111,0x111,0x111,0x111,0x111,\n+0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,0x111,\n+0x111,0x1aca,0x1ac7,0x155d,0x144c,0x144c,0x1380,0x1074,0x1074,0x1074,0x1074,0x1074,0xf8a,0xf8a,0xf8a,0xf8a,\n@@ -2221,82 +2246,90 @@\n-0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf84,0xf84,0xf84,0xf84,0x1197,0x1197,0x11a,0x11a,0x11a,0xf87,\n-0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,\n-0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1740,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,\n-0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,\n-0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0xf93,0xf93,0xf93,0x155d,\n-0x155d,0x155d,0x155d,0x155d,0x155d,0x155d,0x155d,0x155d,0x155d,0x155d,0x155d,0x120,0xf90,0xf90,0xf90,0xf90,\n-0x155a,0x120,0x120,0x120,0x120,0x120,0x120,0x120,0x120,0x120,0x120,0x120,0xf96,0xf96,0xf96,0xf96,\n-0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0x1965,0x1965,\n-0x1965,0x1965,0x1965,0x1965,0x1965,0x123,0x123,0x123,0x123,0x123,0x123,0x123,0x108f,0x108f,0x108f,0x108f,\n-0x108c,0x108c,0x108c,0x108c,0x108c,0x108c,0x108c,0x108c,0x107d,0x107d,0x107d,0x107d,0x107d,0x107d,0x107d,0x107d,\n-0x108c,0x108c,0x1083,0x1080,0x126,0x126,0x126,0x1092,0x1092,0x1086,0x1086,0x1086,0x1089,0x1089,0x1089,0x1089,\n-0x1089,0x1089,0x1089,0x1089,0x1089,0x1089,0x126,0x126,0x126,0x108f,0x108f,0x108f,0x1095,0x1095,0x1095,0x1095,\n-0x1095,0x1095,0x1095,0x1095,0x1095,0x1095,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x10aa,0x10aa,0x10aa,0x10aa,\n-0x10aa,0x10aa,0x10aa,0x10aa,0x10aa,0x10aa,0x10ad,0x10ad,0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x129,\n-0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x129,0x10d4,0x10d4,0x10d4,0x10d4,\n-0x10ce,0x17f1,0x12c,0x12c,0x12c,0x12c,0x12c,0x12c,0x12c,0x12c,0x10da,0x10da,0x10d1,0x10d1,0x10d1,0x10d1,\n-0x10d1,0x10d1,0x10d1,0x10d1,0x10d1,0x10d1,0x12c,0x12c,0x12c,0x12c,0x12c,0x12c,0x10f8,0x10f8,0x10f8,0x10f8,\n-0x10f8,0x10f8,0x10f8,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10ec,0x10f2,0x10f5,\n-0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x10ef,0x1107,0x1107,0x1107,0x1107,\n-0x1107,0x1107,0x1107,0x1107,0x1107,0x10fb,0x10fb,0x10fb,0x10fb,0x10fb,0x10fb,0x1104,0x1104,0x10fb,0x10fb,0x1104,\n-0x1104,0x10fb,0x10fb,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x1107,0x1107,0x1107,0x10fb,\n-0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x10fb,0x1104,0x132,0x132,0x1101,0x1101,0x1101,0x1101,\n-0x1101,0x1101,0x1101,0x1101,0x1101,0x1101,0x132,0x132,0x10fe,0x110a,0x110a,0x110a,0x1569,0x135,0x135,0x135,\n-0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,\n-0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x135,0x1110,0x1110,0x1110,0x1110,\n-0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,\n-0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1110,0x1113,0x138,0x138,0x1116,0x1116,0x1116,0x1116,\n-0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,\n-0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x1116,0x13b,0x13b,0x13b,0x1119,0x1119,0x1119,0x1119,\n-0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x13e,0x13e,0x13e,\n-0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x13e,0x111f,0x111f,0x111f,0x111f,\n-0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,\n-0x111f,0x111f,0x111f,0x111f,0x111f,0x111f,0x141,0x141,0x141,0x141,0x141,0x111c,0x1122,0x1122,0x1122,0x1122,\n-0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x144,0x144,0x144,0x144,0x1125,0x1125,0x1125,0x1125,\n-0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,\n-0x147,0x147,0x147,0x147,0x147,0x147,0x147,0x147,0x147,0x147,0x147,0x147,0x119d,0x119d,0x119d,0x119d,\n-0x11a6,0x119d,0x119d,0x119d,0x11a6,0x119d,0x119d,0x119d,0x119d,0x119a,0x14a,0x14a,0x11a3,0x11a3,0x11a3,0x11a3,\n-0x11a3,0x11a3,0x11a3,0x11a9,0x11a3,0x11a9,0x11a3,0x11a3,0x11a3,0x11a9,0x11a9,0x14a,0x11ac,0x11ac,0x11ac,0x11ac,\n-0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,\n-0x11ac,0x11ac,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x11c7,0x11c7,0x11c7,0x11c7,\n-0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,\n-0x11c7,0x11c4,0x11af,0x11c4,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x150,0x11b8,0x11c1,0x11af,0x11c1,\n-0x11c1,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x11c4,0x11c4,0x11c4,0x11c4,0x11c4,0x11c4,0x11af,\n-0x11af,0x11b5,0x11b5,0x11b5,0x11b5,0x11b5,0x11b5,0x11b5,0x11b5,0x150,0x150,0x11b2,0x11be,0x11be,0x11be,0x11be,\n-0x11be,0x11be,0x11be,0x11be,0x11be,0x11be,0x150,0x150,0x150,0x150,0x150,0x150,0x11be,0x11be,0x11be,0x11be,\n-0x11be,0x11be,0x11be,0x11be,0x11be,0x11be,0x150,0x150,0x150,0x150,0x150,0x150,0x11bb,0x11bb,0x11bb,0x11bb,\n-0x11bb,0x11bb,0x11bb,0x11ca,0x11cd,0x11cd,0x11cd,0x11cd,0x11bb,0x11bb,0x150,0x150,0x15b4,0x15b4,0x15b4,0x15b4,\n-0x15b4,0x15b4,0x15b4,0x15b4,0x15b4,0x15b4,0x15b4,0x15b4,0x15b4,0x15b4,0x15b1,0x1c8,0x131d,0x12f6,0x1314,0x1314,\n-0x1314,0x1314,0x1314,0x1314,0x1314,0x12fc,0x12f9,0x12f0,0x12f0,0x131a,0x12f0,0x12f0,0x12f0,0x12f0,0x12ff,0x14df,\n-0x14e5,0x14e2,0x14e2,0x192f,0x170a,0x170a,0x1a9d,0x153,0x153,0x153,0x153,0x153,0x11e2,0x11e2,0x11e2,0x11e2,\n-0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11d9,0x11d9,0x11dc,0x11e5,\n-0x11df,0x11df,0x11df,0x11e5,0x156,0x156,0x156,0x156,0x156,0x156,0x156,0x156,0x12de,0x12de,0x12de,0x12de,\n-0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,\n-0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x12de,0x15c,0x15c,0x15c,0x1203,0x11f7,0x11f7,0x11f7,\n-0x11f7,0x11f7,0x11f7,0x11fa,0x1209,0x1209,0x11f7,0x11f7,0x11f7,0x11f7,0x15f,0x130e,0x11fd,0x11fd,0x11fd,0x11fd,\n-0x11fd,0x11fd,0x11fd,0x11fd,0x11fd,0x11fd,0x15f,0x15f,0x15f,0x15f,0x11f7,0x11f7,0x1227,0x121b,0x1227,0x162,\n-0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x162,\n-0x162,0x162,0x162,0x162,0x162,0x162,0x162,0x1224,0x1224,0x122a,0x121e,0x1221,0x123f,0x123f,0x123f,0x1239,\n-0x1239,0x1230,0x1239,0x1239,0x1230,0x1239,0x1239,0x1242,0x123c,0x1233,0x165,0x165,0x1236,0x1236,0x1236,0x1236,\n-0x1236,0x1236,0x1236,0x1236,0x1236,0x1236,0x165,0x165,0x165,0x165,0x165,0x165,0x1248,0x1248,0x1248,0x1248,\n-0x1248,0x1248,0x1248,0x168,0x168,0x168,0x168,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,\n-0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,0x1245,\n-0x1245,0x1245,0x1245,0x1245,0x168,0x168,0x168,0x168,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,\n-0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x16b,0x124e,\n-0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,\n-0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x16e,0x16e,\n-0x16e,0x125a,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,\n-0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x1266,0x171,0x171,\n-0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,\n-0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x174,0x174,0x174,0x174,0x174,\n-0x1269,0x1269,0x1269,0x1269,0x1269,0x1269,0x1269,0x1269,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,\n-0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,\n-0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x17a,0x128d,0x128d,0x17d,0x17d,0x17d,0x17d,0x17d,0x17d,\n-0x17d,0x17d,0x17d,0x17d,0x17d,0x196e,0x17d,0x17d,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,\n-0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,\n-0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x180,0x1a40,0x1a40,0x1a40,0x1a40,0x1a40,0x1a40,0x1a40,0x1a43,\n-0x1a3d,0x282,0x282,0x282,0x282,0x282,0x282,0x282,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,\n-0x12ba,0x12ba,0x12ba,0x1575,0x1575,0x183,0x183,0x183,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,\n-0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,\n-0x13c8,0x13c8,0x144f,0x144f,0x1a1f,0x183,0x183,0x183,0x13ce,0x13ce,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,\n-0x13c8,0x12c3,0x13c8,0x12c3,0x12c3,0x13c8,0x13ce,0x12c9,0x186f,0x186f,0x186f,0x186f,0x186f,0x186f,0x186f,0x186f,\n-0x186f,0x186f,0x186f,0x186f,0x186f,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,\n+0xf87,0xf87,0xf8d,0xf8d,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0x114,0xf96,0xf96,0xf96,0xf96,\n+0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,0xf96,\n+0xf96,0xf96,0xf90,0xf90,0xf90,0xf90,0x11a3,0x11a3,0x117,0x117,0x117,0xf93,0x1563,0x1563,0x1563,0x1563,\n+0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,\n+0x1563,0x1563,0x1563,0x1563,0x1563,0x174c,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,\n+0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,\n+0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0x11a,0xf9f,0xf9f,0xf9f,0x1569,0x1569,0x1569,0x1569,0x1569,\n+0x1569,0x1569,0x1569,0x1569,0x1569,0x1569,0x1569,0x11d,0xf9c,0xf9c,0xf9c,0xf9c,0x1566,0x11d,0x11d,0x11d,\n+0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0x11d,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,\n+0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0xfa2,0x1974,0x1974,0x1974,0x1974,0x1974,0x1974,\n+0x1974,0x120,0x120,0x120,0x120,0x120,0x120,0x120,0x109b,0x109b,0x109b,0x109b,0x1098,0x1098,0x1098,0x1098,\n+0x1098,0x1098,0x1098,0x1098,0x1089,0x1089,0x1089,0x1089,0x1089,0x1089,0x1089,0x1089,0x1098,0x1098,0x108f,0x108c,\n+0x123,0x123,0x123,0x109e,0x109e,0x1092,0x1092,0x1092,0x1095,0x1095,0x1095,0x1095,0x1095,0x1095,0x1095,0x1095,\n+0x1095,0x1095,0x123,0x123,0x123,0x109b,0x109b,0x109b,0x10a1,0x10a1,0x10a1,0x10a1,0x10a1,0x10a1,0x10a1,0x10a1,\n+0x10a1,0x10a1,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10b6,0x10b6,0x10b6,0x10b6,0x10b6,0x10b6,0x10b6,0x10b6,\n+0x10b6,0x10b6,0x10b9,0x10b9,0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x126,\n+0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x126,0x10e0,0x10e0,0x10e0,0x10e0,0x10da,0x17fd,0x129,0x129,\n+0x129,0x129,0x129,0x129,0x129,0x129,0x10e6,0x10e6,0x10dd,0x10dd,0x10dd,0x10dd,0x10dd,0x10dd,0x10dd,0x10dd,\n+0x10dd,0x10dd,0x129,0x129,0x129,0x129,0x129,0x129,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x10f8,\n+0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10fe,0x1101,0x12c,0x12c,0x12c,0x12c,\n+0x12c,0x12c,0x12c,0x12c,0x12c,0x12c,0x12c,0x10fb,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,\n+0x1113,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1110,0x1110,0x1107,0x1107,0x1110,0x1110,0x1107,0x1107,0x12f,\n+0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x12f,0x1113,0x1113,0x1113,0x1107,0x1113,0x1113,0x1113,0x1113,\n+0x1113,0x1113,0x1113,0x1113,0x1107,0x1110,0x12f,0x12f,0x110d,0x110d,0x110d,0x110d,0x110d,0x110d,0x110d,0x110d,\n+0x110d,0x110d,0x12f,0x12f,0x110a,0x1116,0x1116,0x1116,0x1575,0x132,0x132,0x132,0x132,0x132,0x132,0x132,\n+0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,\n+0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x132,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,\n+0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,0x111c,\n+0x111c,0x111c,0x111c,0x111c,0x111c,0x111f,0x135,0x135,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,\n+0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,\n+0x1122,0x1122,0x1122,0x1122,0x1122,0x138,0x138,0x138,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,\n+0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x1125,0x13b,0x13b,0x13b,0x13b,0x13b,0x13b,0x13b,\n+0x13b,0x13b,0x13b,0x13b,0x13b,0x13b,0x13b,0x13b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,\n+0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,0x112b,\n+0x112b,0x112b,0x13e,0x13e,0x13e,0x13e,0x13e,0x1128,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,\n+0x112e,0x112e,0x112e,0x112e,0x141,0x141,0x141,0x141,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,\n+0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x144,0x144,0x144,0x144,\n+0x144,0x144,0x144,0x144,0x144,0x144,0x144,0x144,0x11a9,0x11a9,0x11a9,0x11a9,0x11b2,0x11a9,0x11a9,0x11a9,\n+0x11b2,0x11a9,0x11a9,0x11a9,0x11a9,0x11a6,0x147,0x147,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x11af,0x11b5,\n+0x11af,0x11b5,0x11af,0x11af,0x11af,0x11b5,0x11b5,0x147,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,\n+0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x14a,0x14a,\n+0x14a,0x14a,0x14a,0x14a,0x14a,0x14a,0x14a,0x14a,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,\n+0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d0,0x11bb,0x11d0,\n+0x11bb,0x11bb,0x11bb,0x11bb,0x11bb,0x11bb,0x11bb,0x14d,0x11c4,0x11cd,0x11bb,0x11cd,0x11cd,0x11bb,0x11bb,0x11bb,\n+0x11bb,0x11bb,0x11bb,0x11bb,0x11bb,0x11d0,0x11d0,0x11d0,0x11d0,0x11d0,0x11d0,0x11bb,0x11bb,0x11c1,0x11c1,0x11c1,\n+0x11c1,0x11c1,0x11c1,0x11c1,0x11c1,0x14d,0x14d,0x11be,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,\n+0x11ca,0x11ca,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,0x11ca,\n+0x11ca,0x11ca,0x14d,0x14d,0x14d,0x14d,0x14d,0x14d,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11d6,\n+0x11d9,0x11d9,0x11d9,0x11d9,0x11c7,0x11c7,0x14d,0x14d,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,\n+0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15bd,0x1adf,0x1329,0x1302,0x1320,0x1320,0x1320,0x1320,0x1320,0x1320,\n+0x1320,0x1308,0x1305,0x12fc,0x12fc,0x1326,0x12fc,0x12fc,0x12fc,0x12fc,0x130b,0x14eb,0x14f1,0x14ee,0x14ee,0x193b,\n+0x1716,0x1716,0x1aac,0x150,0x150,0x150,0x150,0x150,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,\n+0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11e5,0x11e5,0x11e8,0x11f1,0x11eb,0x11eb,0x11eb,0x11f1,\n+0x153,0x153,0x153,0x153,0x153,0x153,0x153,0x153,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,\n+0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,\n+0x12ea,0x12ea,0x12ea,0x12ea,0x12ea,0x159,0x159,0x159,0x120f,0x1203,0x1203,0x1203,0x1203,0x1203,0x1203,0x1206,\n+0x1215,0x1215,0x1203,0x1203,0x1203,0x1203,0x15c,0x131a,0x1209,0x1209,0x1209,0x1209,0x1209,0x1209,0x1209,0x1209,\n+0x1209,0x1209,0x15c,0x15c,0x15c,0x15c,0x1203,0x1203,0x1233,0x1227,0x1233,0x15f,0x15f,0x15f,0x15f,0x15f,\n+0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,0x15f,\n+0x15f,0x15f,0x15f,0x1230,0x1230,0x1236,0x122a,0x122d,0x124b,0x124b,0x124b,0x1245,0x1245,0x123c,0x1245,0x1245,\n+0x123c,0x1245,0x1245,0x124e,0x1248,0x123f,0x162,0x162,0x1242,0x1242,0x1242,0x1242,0x1242,0x1242,0x1242,0x1242,\n+0x1242,0x1242,0x162,0x162,0x162,0x162,0x162,0x162,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x1254,0x165,\n+0x165,0x165,0x165,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,\n+0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,0x1251,\n+0x165,0x165,0x165,0x165,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,\n+0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x125d,0x168,0x125a,0x1257,0x1257,0x1257,0x1257,\n+0x1257,0x1257,0x1257,0x1257,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,\n+0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x16b,0x16b,0x16b,0x1266,0x1269,0x1269,\n+0x1269,0x1269,0x1269,0x1269,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,\n+0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x1272,0x16e,0x16e,0x126f,0x126f,0x126f,0x126f,\n+0x126f,0x126f,0x126f,0x126f,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,\n+0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x1278,0x171,0x171,0x171,0x171,0x171,0x1275,0x1275,0x1275,0x1275,\n+0x1275,0x1275,0x1275,0x1275,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,\n+0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,0x127e,\n+0x127e,0x127e,0x127e,0x177,0x1299,0x1299,0x17a,0x17a,0x17a,0x17a,0x17a,0x17a,0x17a,0x17a,0x17a,0x17a,\n+0x17a,0x197d,0x17a,0x17a,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,\n+0x14ca,0x14ca,0x14ca,0x14ca,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,\n+0x129f,0x129f,0x129f,0x17d,0x1a4f,0x1a4f,0x1a4f,0x1a4f,0x1a4f,0x1a4f,0x1a4f,0x1a52,0x1a4c,0x279,0x279,0x279,\n+0x279,0x279,0x279,0x279,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,0x187e,\n+0x187e,0x1ad0,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,\n+0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,0x180,\n+0x180,0x180,0x180,0x180,0x180,0x180,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,\n+0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,0x138c,\n+0x12f6,0x13f5,0x13f2,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,\n+0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f3,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,\n+0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f0,0x12f3,0x12f0,0x12f0,0x13f5,0x13f5,\n+0x13f5,0x13f5,0x13f5,0x13f2,0x13f5,0x13f5,0x13f5,0x1881,0x183,0x183,0x183,0x183,0x12ed,0x12ed,0x12ed,0x12ed,\n+0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x1419,0x1419,0x183,0x183,\n+0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x1920,0x1920,0x1920,0x1920,\n+0x1920,0x1920,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,\n@@ -2304,58 +2337,95 @@\n-0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x183,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,\n-0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,0x1380,\n-0x1380,0x1380,0x1380,0x1380,0x12ea,0x13e9,0x13e6,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,\n-0x186,0x186,0x186,0x186,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e7,0x12e4,\n-0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e4,0x12e7,\n-0x12e4,0x12e4,0x13e9,0x13e9,0x13e9,0x13e9,0x13e9,0x13e6,0x13e9,0x13e9,0x13e9,0x1872,0x186,0x186,0x186,0x186,\n-0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x186,0x186,0x186,0x186,0x186,0x186,0x186,\n-0x140d,0x140d,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,\n-0x1914,0x1914,0x1914,0x1914,0x1914,0x1914,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,\n-0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,\n-0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x186,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,\n-0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,0x1389,\n-0x1389,0x1383,0x1383,0x1383,0x189,0x189,0x1386,0x189,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x138c,0x1395,\n-0x138f,0x138f,0x1395,0x1395,0x1395,0x138f,0x1395,0x138f,0x138f,0x138f,0x1398,0x1398,0x18c,0x18c,0x18c,0x18c,\n-0x18c,0x18c,0x18c,0x18c,0x1392,0x1392,0x1392,0x1392,0x18f,0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x18f,\n-0x18f,0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x18f,0x18f,0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x18f,\n-0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x18f,\n-0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x139e,0x18f,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,\n-0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x13a1,0x13a1,0x13a1,0x13a1,0x13a1,0x13a1,0x13a4,0x13b6,\n-0x13b6,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x192,0x192,0x192,0x192,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,\n-0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,\n-0x13ad,0x13ad,0x13ad,0x13ad,0x192,0x192,0x192,0x192,0x192,0x192,0x192,0x192,0x192,0x192,0x192,0x192,\n-0x192,0x192,0x192,0x1578,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,\n-0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x195,0x195,0x195,\n-0x195,0x195,0x195,0x195,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,\n-0x13bc,0x13bc,0x13bc,0x198,0x198,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,\n-0x13bc,0x13bc,0x13bc,0x157b,0x198,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,\n-0x13bc,0x13bc,0x13bc,0x13f2,0x198,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,0x13bc,\n-0x13bc,0x13bc,0x13bc,0x13bc,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,\n-0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x157b,0x198,0x198,0x198,0x198,0x198,0x198,\n-0x198,0x198,0x198,0x198,0x1407,0x1404,0x1404,0x1404,0x1404,0x1404,0x1590,0x1590,0x1590,0x1590,0x1590,0x1593,\n-0x1701,0x1593,0x1593,0x1593,0x17cd,0x187b,0x187b,0x18b7,0x18b7,0x1a7f,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,\n-0x19b,0x19b,0x19b,0x19b,0x1593,0x1593,0x1593,0x1593,0x1593,0x1593,0x1590,0x1590,0x1590,0x1593,0x1590,0x16fe,\n-0x16fe,0x19b,0x19b,0x19b,0x1593,0x1590,0x1590,0x1593,0x187b,0x187b,0x187b,0x191a,0x191a,0x19f8,0x1a7f,0x19b,\n-0x19b,0x19b,0x19b,0x19b,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,\n-0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x19e,0x19e,0x19e,0x19e,0x19e,0x19e,0x19e,0x19e,\n-0x19e,0x19e,0x19e,0x19e,0x145b,0x1599,0x145b,0x145b,0x145b,0x145b,0x145b,0x145b,0x145b,0x145b,0x145b,0x145b,\n-0x145b,0x1599,0x1599,0x1599,0x1599,0x1599,0x1599,0x1752,0x1752,0x1a1,0x17fd,0x17fd,0x17fd,0x17fd,0x17fd,0x17fd,\n-0x17fd,0x17fd,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,\n-0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1974,0x17fa,0x17fa,0x17fa,0x17fa,0x17fa,0x17fa,0x17fa,0x17fa,\n-0x17fa,0x17fa,0x17fa,0x17fa,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,\n-0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,\n-0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1a4,0x1461,0x1a4,0x1a4,0x1461,0x1a4,0x1461,0x1461,0x1461,\n-0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1a4,0x1461,\n-0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1461,0x1a4,0x1a4,0x1a4,0x1a4,0x1461,0x1a4,0x1461,0x1a4,0x1461,\n-0x1a4,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1a4,0x1461,0x1a4,0x1a4,0x1461,0x1a4,0x1461,0x1a4,0x1461,\n-0x1a4,0x1461,0x1a4,0x1461,0x1a4,0x1461,0x1461,0x1a4,0x1461,0x1a4,0x1a4,0x1461,0x1461,0x1461,0x1461,0x1a4,\n-0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1461,\n-0x1461,0x1a4,0x1461,0x1a4,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,\n-0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,\n-0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1461,0x1461,0x1461,0x1a4,0x1461,0x1461,0x1461,0x1461,0x1461,0x1a4,0x1461,\n-0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,\n-0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,\n-0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,\n-0x145e,0x145e,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,\n-0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1464,0x1464,0x1464,0x1464,0x1464,0x1473,0x1464,0x1467,0x1467,\n-0x1464,0x1464,0x1464,0x146a,0x146a,0x1a7,0x1470,0x1470,0x1470,0x1470,0x1470,0x1470,0x1470,0x1470,0x1470,0x1470,\n-0x146d,0x1479,0x1479,0x1479,0x197a,0x1977,0x1977,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,\n+0x183,0x183,0x183,0x183,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,\n+0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x1395,0x138f,0x138f,0x138f,\n+0x186,0x186,0x1392,0x186,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x1398,0x13a1,0x139b,0x139b,0x13a1,0x13a1,\n+0x13a1,0x139b,0x13a1,0x139b,0x139b,0x139b,0x13a4,0x13a4,0x189,0x189,0x189,0x189,0x189,0x189,0x189,0x189,\n+0x139e,0x139e,0x139e,0x139e,0x18c,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x18c,0x18c,0x13aa,0x13aa,0x13aa,\n+0x13aa,0x13aa,0x13aa,0x18c,0x18c,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x18c,0x18c,0x18c,0x18c,0x18c,\n+0x18c,0x18c,0x18c,0x18c,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x13aa,0x18c,0x13aa,0x13aa,0x13aa,0x13aa,\n+0x13aa,0x13aa,0x13aa,0x18c,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,\n+0x161d,0x161d,0x161d,0x161d,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13b0,0x13c2,0x13c2,0x13b6,0x13b6,0x13b6,\n+0x13b6,0x13b6,0x18f,0x18f,0x18f,0x18f,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,\n+0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,\n+0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x18f,0x1584,\n+0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,\n+0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x192,0x192,0x192,0x192,0x192,0x192,0x192,\n+0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x195,\n+0x195,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x1587,\n+0x195,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13fe,\n+0x195,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,\n+0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,\n+0x1587,0x1587,0x1587,0x1587,0x1587,0x1587,0x195,0x195,0x195,0x195,0x195,0x195,0x195,0x195,0x195,0x195,\n+0x1413,0x1410,0x1410,0x1410,0x1410,0x1410,0x159c,0x159c,0x159c,0x159c,0x159c,0x159f,0x170d,0x159f,0x159f,0x159f,\n+0x17d9,0x188a,0x188a,0x18c3,0x18c3,0x1a8e,0x1b39,0x1b39,0x198,0x198,0x198,0x198,0x198,0x198,0x198,0x198,\n+0x159f,0x159f,0x159f,0x159f,0x159f,0x159f,0x159c,0x159c,0x159c,0x159f,0x159c,0x170a,0x170a,0x198,0x198,0x198,\n+0x159f,0x159c,0x159c,0x159f,0x188a,0x188a,0x188a,0x1926,0x1926,0x1a07,0x1a8e,0x1b39,0x1b39,0x198,0x198,0x198,\n+0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,\n+0x13cb,0x13cb,0x13cb,0x13cb,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,0x19b,\n+0x1467,0x15a5,0x1467,0x1467,0x1467,0x1467,0x1467,0x1467,0x1467,0x1467,0x1467,0x1467,0x1467,0x15a5,0x15a5,0x15a5,\n+0x15a5,0x15a5,0x15a5,0x175e,0x175e,0x19e,0x1809,0x1809,0x1809,0x1809,0x1809,0x1809,0x1809,0x1809,0x1ad3,0x1ad3,\n+0x1ad3,0x1ad3,0x1ad3,0x1ad3,0x1ad3,0x1ad3,0x1ad3,0x1ad3,0x19e,0x19e,0x19e,0x19e,0x19e,0x19e,0x19e,0x19e,\n+0x19e,0x19e,0x19e,0x1983,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,0x1806,\n+0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,\n+0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,\n+0x1a1,0x146d,0x146d,0x1a1,0x146d,0x1a1,0x1a1,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,\n+0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x1a1,0x146d,0x1a1,0x1a1,0x1a1,0x1a1,\n+0x1a1,0x1a1,0x146d,0x1a1,0x1a1,0x1a1,0x1a1,0x146d,0x1a1,0x146d,0x1a1,0x146d,0x1a1,0x146d,0x146d,0x146d,\n+0x1a1,0x146d,0x146d,0x1a1,0x146d,0x1a1,0x1a1,0x146d,0x1a1,0x146d,0x1a1,0x146d,0x1a1,0x146d,0x1a1,0x146d,\n+0x1a1,0x146d,0x146d,0x1a1,0x146d,0x1a1,0x1a1,0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,\n+0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x1a1,\n+0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x146d,\n+0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x1a1,0x1a1,0x1a1,0x1a1,\n+0x1a1,0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x146d,0x1a1,0x146d,0x146d,0x146d,0x146d,0x146d,\n+0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x146d,0x1a1,0x1a1,0x1a1,0x1a1,\n+0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,\n+0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x146a,0x146a,0x1a1,0x1a1,\n+0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1a1,0x1482,0x1482,0x1482,0x1482,\n+0x1482,0x1482,0x1482,0x1470,0x1470,0x1470,0x1470,0x1470,0x147f,0x1470,0x1473,0x1473,0x1470,0x1470,0x1470,0x1476,\n+0x1476,0x1a4,0x147c,0x147c,0x147c,0x147c,0x147c,0x147c,0x147c,0x147c,0x147c,0x147c,0x1479,0x1485,0x1485,0x1485,\n+0x1989,0x1986,0x1986,0x1ad6,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x1a4,0x162f,0x162f,0x162f,0x162f,\n+0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x1491,0x1491,0x1491,0x1491,\n+0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x148e,0x1488,0x1488,0x148e,0x148e,0x1497,0x1497,0x1491,0x1494,\n+0x1494,0x148e,0x148b,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x1a7,0x149a,0x149a,0x149a,0x149a,\n+0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,\n+0x149a,0x149a,0x149a,0x149a,0x1aa,0x1aa,0x1aa,0x1aa,0x1761,0x1761,0x149a,0x149a,0x1761,0x1761,0x1761,0x1761,\n+0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1aa,0x1aa,0x1761,0x1761,\n+0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x14a6,0x14a6,0x14a6,0x14a6,\n+0x14a6,0x1a37,0x1a37,0x1a37,0x1a37,0x1a37,0x1a37,0x1ad,0x1ad,0x1ad,0x1ad,0x1a31,0x14a6,0x14a3,0x14a3,0x14a3,\n+0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x1a34,0x1a34,0x1a34,0x1a34,\n+0x1a34,0x1a34,0x1a34,0x1a34,0x1ad,0x1ad,0x1ad,0x1ad,0x1ad,0x1ad,0x1ad,0x14a0,0x14a0,0x14a0,0x14a0,0x14a9,\n+0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14ca,0x14ca,0x14ca,0x14ca,\n+0x14ca,0x14ca,0x14ca,0x14ca,0x14ca,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x14c7,0x14c7,0x14c7,0x14c7,\n+0x14c7,0x14c7,0x14c7,0x14c7,0x14c7,0x14c7,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x14cd,0x14cd,0x14cd,0x14cd,\n+0x14cd,0x14cd,0x14cd,0x14cd,0x1b3,0x1b3,0x1b3,0x1b3,0x1b3,0x1b3,0x1b3,0x1b3,0x1323,0x1320,0x1323,0x12ff,\n+0x1320,0x1326,0x1326,0x1329,0x1326,0x1329,0x132c,0x1320,0x1329,0x1329,0x1320,0x1320,0x14df,0x14df,0x14df,0x14df,\n+0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14d0,0x14d9,0x14d0,0x14d9,0x14d9,0x14d0,0x14d0,0x14d0,0x14d0,\n+0x14d0,0x14d0,0x14dc,0x14d3,0x1a3a,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x15b1,0x15b1,0x15b1,0x15b1,\n+0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x15b1,0x1b9,0x1b9,0x15ae,0x15ae,0x15ae,0x15ae,\n+0x15ae,0x15b4,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1719,0x1710,0x1710,0x1710,\n+0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,\n+0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1710,0x1bf,0x1bf,0x1bf,0x1bf,0x1adf,0x1c2,0x1c2,0x1c2,\n+0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,\n+0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,0x1c2,\n+0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x1c5,0x1c5,0x1c5,0x1c5,0x1c5,\n+0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x1c5,0x1c5,0x1c5,\n+0x1c5,0x1c5,0x1c5,0x1c5,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x1c5,0x1c5,\n+0x15c9,0x15c3,0x15c6,0x15cf,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x1c8,0x1c8,0x1c8,0x1c8,\n+0x1c8,0x1c8,0x1c8,0x1c8,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,\n+0x15ba,0x15ba,0x15ba,0x15ba,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,\n+0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x198c,0x198c,0x198c,0x198c,0x1cb,0x1cb,0x1cb,\n+0x1cb,0x1cb,0x1cb,0x1cb,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,\n+0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,\n+0x1cb,0x1cb,0x1cb,0x1cb,0x1776,0x171c,0x15de,0x1722,0x1ce,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,\n+0x15e7,0x1ce,0x1ce,0x15e7,0x15e7,0x1ce,0x1ce,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,\n+0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x1ce,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x1ce,0x15e7,0x15e7,\n+0x1ce,0x15e7,0x15e7,0x15e7,0x15e7,0x15e7,0x1ce,0x1a16,0x171f,0x15e7,0x15d8,0x15de,0x15d8,0x15de,0x15de,0x15de,\n+0x15de,0x1ce,0x1ce,0x15de,0x15de,0x1ce,0x1ce,0x15e1,0x15e1,0x15e4,0x1ce,0x1ce,0x1779,0x1ce,0x1ce,0x1ce,\n+0x1ce,0x1ce,0x1ce,0x15d8,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x15ea,0x15e7,0x15e7,0x15e7,0x15e7,0x15de,0x15de,\n+0x1ce,0x1ce,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x1ce,0x1ce,0x1ce,0x15db,0x15db,0x15db,0x15db,\n+0x15db,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x1ce,0x15ff,0x15ff,0x15ff,0x15ff,\n+0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x1d1,0x15ff,\n+0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15ff,0x15f9,0x15f9,0x15f9,0x15ed,\n+0x15ed,0x15ed,0x15f9,0x15f9,0x15ed,0x15fc,0x15f0,0x15ed,0x1602,0x1602,0x15f6,0x1602,0x1602,0x15f3,0x180c,0x1d1,\n+0x1611,0x1611,0x1611,0x1605,0x1605,0x1605,0x1605,0x1605,0x1605,0x1608,0x160b,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,\n+0x160e,0x160e,0x160e,0x160e,0x160e,0x160e,0x160e,0x160e,0x160e,0x160e,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,\n+0x177c,0x177c,0x177c,0x177c,0x161d,0x161a,0x1a3d,0x1a3d,0x1ae5,0x1ae8,0x1ae2,0x1ae2,0x1d7,0x1d7,0x1d7,0x1d7,\n+0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,\n@@ -2363,54 +2433,1 @@\n-0x1485,0x1485,0x1485,0x1485,0x1485,0x1485,0x1485,0x1485,0x1485,0x1485,0x1485,0x1482,0x147c,0x147c,0x1482,0x1482,\n-0x148b,0x148b,0x1485,0x1488,0x1488,0x1482,0x147f,0x1aa,0x1aa,0x1aa,0x1aa,0x1aa,0x1aa,0x1aa,0x1aa,0x1aa,\n-0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,\n-0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x148e,0x1ad,0x1ad,0x1ad,0x1ad,0x1755,0x1755,0x148e,0x148e,\n-0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,\n-0x1ad,0x1ad,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,\n-0x149a,0x149a,0x149a,0x149a,0x149a,0x1a28,0x1a28,0x1a28,0x1a28,0x1a28,0x1a28,0x1b0,0x1b0,0x1b0,0x1b0,0x1a22,\n-0x149a,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,\n-0x1a25,0x1a25,0x1a25,0x1a25,0x1a25,0x1a25,0x1a25,0x1a25,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x1b0,0x1494,\n-0x1494,0x1494,0x1494,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,\n-0x14af,0x14b2,0x14b5,0x14b5,0x14b2,0x14b8,0x14b8,0x14a3,0x14a6,0x1758,0x175b,0x175b,0x175b,0x159f,0x1b3,0x1b3,\n-0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x14a9,0x159c,0x1761,0x1764,0x175e,0x1767,0x1767,\n-0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,\n-0x14bb,0x14bb,0x14bb,0x14bb,0x14bb,0x14bb,0x14bb,0x14bb,0x14bb,0x14bb,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,0x1b6,\n-0x14c1,0x14c1,0x14c1,0x14c1,0x14c1,0x14c1,0x14c1,0x14c1,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,0x1b9,\n-0x1317,0x1314,0x1317,0x12f3,0x1314,0x131a,0x131a,0x131d,0x131a,0x131d,0x1320,0x1314,0x131d,0x131d,0x1314,0x1314,\n-0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14c4,0x14cd,0x14c4,0x14cd,0x14cd,\n-0x14c4,0x14c4,0x14c4,0x14c4,0x14c4,0x14c4,0x14d0,0x14c7,0x1a2b,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,0x1bc,\n-0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x15a5,0x1bf,0x1bf,\n-0x15a2,0x15a2,0x15a2,0x15a2,0x15a2,0x15a8,0x1bf,0x1bf,0x1bf,0x1bf,0x1bf,0x1bf,0x1bf,0x1bf,0x1bf,0x1bf,\n-0x170d,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,\n-0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1704,0x1c5,0x1c5,0x1c5,0x1c5,\n-0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,\n-0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,0x1c8,\n-0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x1cb,0x1cb,0x1cb,0x1cb,0x1cb,\n-0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x1cb,0x1cb,0x1cb,\n-0x1cb,0x1cb,0x1cb,0x1cb,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x1cb,0x1cb,\n-0x15bd,0x15b7,0x15ba,0x15c3,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x1ce,0x1ce,0x1ce,0x1ce,\n-0x1ce,0x1ce,0x1ce,0x1ce,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,\n-0x15ae,0x15ae,0x15ae,0x15ae,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,\n-0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x197d,0x197d,0x197d,0x197d,0x1d1,0x1d1,0x1d1,\n-0x1d1,0x1d1,0x1d1,0x1d1,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,0x1a82,\n-0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,0x1d1,\n-0x1d1,0x1d1,0x1d1,0x1d1,0x176a,0x1710,0x15d2,0x1716,0x1d4,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,\n-0x15db,0x1d4,0x1d4,0x15db,0x15db,0x1d4,0x1d4,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,\n-0x15db,0x15db,0x15db,0x15db,0x15db,0x1d4,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x15db,0x1d4,0x15db,0x15db,\n-0x1d4,0x15db,0x15db,0x15db,0x15db,0x15db,0x1d4,0x1a07,0x1713,0x15db,0x15cc,0x15d2,0x15cc,0x15d2,0x15d2,0x15d2,\n-0x15d2,0x1d4,0x1d4,0x15d2,0x15d2,0x1d4,0x1d4,0x15d5,0x15d5,0x15d8,0x1d4,0x1d4,0x176d,0x1d4,0x1d4,0x1d4,\n-0x1d4,0x1d4,0x1d4,0x15cc,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x15de,0x15db,0x15db,0x15db,0x15db,0x15d2,0x15d2,\n-0x1d4,0x1d4,0x15cf,0x15cf,0x15cf,0x15cf,0x15cf,0x15cf,0x15cf,0x1d4,0x1d4,0x1d4,0x15cf,0x15cf,0x15cf,0x15cf,\n-0x15cf,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x1d4,0x15f3,0x15f3,0x15f3,0x15f3,\n-0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x1d7,0x15f3,\n-0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15f3,0x15ed,0x15ed,0x15ed,0x15e1,\n-0x15e1,0x15e1,0x15ed,0x15ed,0x15e1,0x15f0,0x15e4,0x15e1,0x15f6,0x15f6,0x15ea,0x15f6,0x15f6,0x15e7,0x1800,0x1d7,\n-0x1605,0x1605,0x1605,0x15f9,0x15f9,0x15f9,0x15f9,0x15f9,0x15f9,0x15fc,0x15ff,0x1da,0x1da,0x1da,0x1da,0x1da,\n-0x1602,0x1602,0x1602,0x1602,0x1602,0x1602,0x1602,0x1602,0x1602,0x1602,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,\n-0x1770,0x1770,0x1770,0x1770,0x1611,0x160e,0x1a2e,0x1a2e,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,\n-0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,\n-0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,\n-0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,\n-0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,\n-0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,\n-0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,\n-0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,\n+0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,\n@@ -2418,13 +2435,15 @@\n-0x1623,0x1623,0x1623,0x161a,0x161d,0x1620,0x1623,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,\n-0x1632,0x1632,0x1632,0x1632,0x1632,0x1626,0x1626,0x1e6,0x1e6,0x1e6,0x1e6,0x1629,0x1629,0x1629,0x1629,0x1629,\n-0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162c,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,\n-0x163b,0x163b,0x163b,0x163b,0x163b,0x1e9,0x1e9,0x1638,0x1638,0x1638,0x1638,0x1638,0x1638,0x1638,0x1638,0x1638,\n-0x1635,0x1635,0x1635,0x1635,0x1635,0x1635,0x1635,0x1e9,0x1e9,0x1e9,0x1e9,0x1e9,0x1e9,0x1e9,0x1e9,0x1e9,\n-0x163e,0x1650,0x1650,0x1644,0x164d,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,\n-0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,0x1ec,\n-0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,\n-0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1656,0x1ef,\n-0x1662,0x1662,0x1662,0x1662,0x1662,0x165c,0x1665,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,\n-0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x165f,0x1662,0x1662,0x1662,0x1662,0x1662,0x1f2,\n-0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,\n-0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x1f5,\n+0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,\n+0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,\n+0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,0x1da,\n+0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,0x162f,\n+0x162f,0x162f,0x162f,0x1626,0x1629,0x162c,0x162f,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,0x1dd,\n+0x163e,0x163e,0x163e,0x163e,0x163e,0x1632,0x1632,0x1e0,0x1e0,0x1e0,0x1e0,0x1635,0x1635,0x1635,0x1635,0x1635,\n+0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x1638,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,0x1e0,\n+0x1647,0x1647,0x1647,0x1647,0x1647,0x1e3,0x1e3,0x1644,0x1644,0x1644,0x1644,0x1644,0x1644,0x1644,0x1644,0x1644,\n+0x1641,0x1641,0x1641,0x1641,0x1641,0x1641,0x1641,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,0x1e3,\n+0x164a,0x165c,0x165c,0x1650,0x1659,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,\n+0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1653,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,0x1e6,\n+0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,\n+0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1662,0x1e9,\n+0x166e,0x166e,0x166e,0x166e,0x166e,0x1668,0x1671,0x166e,0x166e,0x166e,0x166e,0x166e,0x166e,0x166e,0x166e,0x166e,\n+0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166b,0x166e,0x166e,0x166e,0x166e,0x166e,0x1ec,\n@@ -2432,13 +2451,25 @@\n-0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1674,0x1674,0x1674,0x1674,0x1674,0x1f8,0x1f8,0x1f8,0x1f8,0x1f8,\n-0x168f,0x168f,0x1692,0x1692,0x1695,0x1686,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,\n-0x168c,0x168c,0x168c,0x168c,0x168c,0x168c,0x168c,0x168c,0x168c,0x168c,0x1fb,0x1686,0x1686,0x1686,0x1686,0x1686,\n-0x1686,0x1686,0x1fb,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,\n-0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x168f,0x168f,0x168f,\n-0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,\n-0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,0x1fe,\n-0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,\n-0x16a7,0x16a7,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x16a4,0x16a4,0x16a4,0x16a4,0x201,0x201,0x201,\n-0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16aa,\n-0x16bc,0x16bc,0x16aa,0x16aa,0x16aa,0x16aa,0x207,0x207,0x16bc,0x16bc,0x16bf,0x16bf,0x16aa,0x16aa,0x16bc,0x16b0,\n-0x16ad,0x16b3,0x16c5,0x16c5,0x16b6,0x16b6,0x16b9,0x16b9,0x16b9,0x16c5,0x1779,0x1779,0x1779,0x1779,0x1779,0x1779,\n-0x1779,0x1779,0x1779,0x1779,0x1779,0x1779,0x1779,0x1779,0x1776,0x1776,0x1776,0x1776,0x1773,0x1773,0x207,0x207,\n+0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1677,0x1ef,\n+0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,\n+0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1680,0x1680,0x1680,0x1680,0x1680,0x1f2,0x1f2,0x1f2,0x1f2,0x1f2,\n+0x169b,0x169b,0x169e,0x169e,0x16a1,0x1692,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,\n+0x1698,0x1698,0x1698,0x1698,0x1698,0x1698,0x1698,0x1698,0x1698,0x1698,0x1f5,0x1692,0x1692,0x1692,0x1692,0x1692,\n+0x1692,0x1692,0x1f5,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,\n+0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x1f5,0x1f5,0x1f5,0x1f5,0x1f5,0x169b,0x169b,0x169b,\n+0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,\n+0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x1f8,0x1f8,0x1f8,0x1f8,0x1f8,0x1f8,0x1f8,\n+0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,0x16b3,\n+0x16b3,0x16b3,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x1fb,0x16b0,0x16b0,0x16b0,0x16b0,0x1fb,0x1fb,0x1fb,\n+0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16b6,\n+0x16c8,0x16c8,0x16b6,0x16b6,0x16b6,0x16b6,0x201,0x201,0x16c8,0x16c8,0x16cb,0x16cb,0x16b6,0x16b6,0x16c8,0x16bc,\n+0x16b9,0x16bf,0x16d1,0x16d1,0x16c2,0x16c2,0x16c5,0x16c5,0x16c5,0x16d1,0x1785,0x1785,0x1785,0x1785,0x1785,0x1785,\n+0x1785,0x1785,0x1785,0x1785,0x1785,0x1785,0x1785,0x1785,0x1782,0x1782,0x1782,0x1782,0x177f,0x177f,0x201,0x201,\n+0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,\n+0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,0x201,\n+0x204,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,\n+0x16d4,0x16d4,0x16d4,0x16d4,0x16d4,0x204,0x204,0x204,0x204,0x204,0x204,0x204,0x204,0x204,0x204,0x204,\n+0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x207,0x207,0x207,0x207,\n+0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,\n+0x207,0x207,0x207,0x207,0x207,0x207,0x207,0x207,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,\n+0x16d7,0x16d7,0x207,0x207,0x207,0x207,0x207,0x207,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,\n+0x207,0x207,0x207,0x207,0x207,0x207,0x207,0x207,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,\n+0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x207,0x207,0x1aeb,0x1aeb,0x207,0x207,\n@@ -2447,54 +2478,46 @@\n-0x20a,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,\n-0x16c8,0x16c8,0x16c8,0x16c8,0x16c8,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,\n-0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x20d,0x20d,0x20d,0x20d,\n-0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,\n-0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,\n-0x16cb,0x16cb,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,\n-0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,\n-0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,\n-0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,\n-0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x16ce,0x16dd,0x16d4,0x16d1,\n-0x16e3,0x16e3,0x16d7,0x16e3,0x210,0x210,0x210,0x210,0x210,0x210,0x210,0x210,0x16da,0x16da,0x16da,0x16da,\n-0x16da,0x16da,0x16da,0x16da,0x16da,0x16da,0x210,0x210,0x210,0x210,0x210,0x210,0x16e9,0x16e9,0x16e9,0x16e9,\n-0x16e9,0x16e9,0x16e9,0x16e9,0x16e9,0x16e9,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x213,\n-0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x16ef,0x178b,0x178b,0x178b,0x178b,\n-0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,\n-0x178b,0x178b,0x178b,0x178b,0x178b,0x178b,0x1980,0x216,0x216,0x177c,0x177c,0x177c,0x1788,0x1788,0x177c,0x177c,\n-0x177c,0x177c,0x1788,0x177c,0x177c,0x177c,0x177c,0x177f,0x216,0x216,0x216,0x216,0x1785,0x1785,0x1785,0x1785,\n-0x1785,0x1785,0x1785,0x1785,0x1785,0x1785,0x1782,0x1782,0x178e,0x178e,0x178e,0x1782,0x1791,0x1791,0x1791,0x1791,\n-0x1791,0x1791,0x1791,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,\n-0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,0x219,\n-0x219,0x219,0x219,0x219,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,\n-0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x17a3,0x21f,0x17a3,0x17a3,0x21f,0x21f,0x21f,0x21f,0x21f,0x17a0,\n-0x17a0,0x17a0,0x17a0,0x17a0,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x222,0x17a6,0x222,0x17a6,0x17a6,\n-0x17a6,0x17a6,0x222,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,\n-0x17a6,0x17a6,0x222,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a9,0x222,0x222,\n-0x222,0x222,0x222,0x222,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,\n-0x1608,0x1608,0x1608,0x1608,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,\n-0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,\n-0x225,0x225,0x225,0x225,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,\n-0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x17ac,0x17ac,\n-0x17ac,0x17ac,0x17ac,0x17ac,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,0x18ba,\n-0x228,0x1a85,0x1a85,0x1a88,0x17d3,0x17d3,0x17d3,0x17d3,0x17d3,0x17d3,0x17d3,0x17d3,0x17d6,0x1884,0x1884,0x1884,\n-0x1884,0x1884,0x1884,0x1920,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,\n-0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x1a85,0x228,0x19fb,0x19fb,0x19fb,0x19fb,0x228,0x228,0x228,0x19fb,0x1a85,\n-0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x228,0x228,0x1a85,0x1a85,0x1a85,0x1a85,0x1a85,0x1a85,0x228,\n-0x228,0x228,0x1a85,0x1a85,0x19fe,0x19fe,0x19fe,0x19fe,0x19fb,0x1a01,0x1a01,0x19fb,0x1a01,0x1a01,0x1a85,0x1a88,\n-0x1a85,0x1a85,0x1a85,0x1a85,0x17d3,0x19fb,0x19fb,0x1a85,0x1a85,0x1a85,0x1a85,0x1a85,0x1a85,0x1a85,0x1a85,0x228,\n-0x228,0x1a88,0x1a88,0x1a88,0x191d,0x1920,0x1920,0x1920,0x1920,0x1920,0x1920,0x1920,0x1920,0x1920,0x1920,0x1920,\n-0x1920,0x1920,0x191d,0x191d,0x17b8,0x17b8,0x17b8,0x17b8,0x17b5,0x17b8,0x17b8,0x17bb,0x17be,0x17bb,0x17bb,0x17b8,\n-0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x17b5,\n-0x17b5,0x17b5,0x17b5,0x17b5,0x1812,0x1812,0x1812,0x1812,0x1809,0x1809,0x1809,0x1803,0x1806,0x1806,0x1806,0x1a31,\n-0x22e,0x22e,0x22e,0x22e,0x180f,0x180f,0x180f,0x180f,0x180f,0x180f,0x180f,0x180f,0x180f,0x180f,0x22e,0x22e,\n-0x22e,0x22e,0x180c,0x180c,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x231,0x182d,0x182d,\n-0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,\n-0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182a,0x1818,0x1818,0x1818,0x1818,0x1818,0x1818,0x1818,0x231,\n-0x1818,0x1818,0x1818,0x1818,0x1818,0x1818,0x182a,0x181b,0x182d,0x1830,0x1830,0x1824,0x1821,0x1821,0x231,0x231,\n-0x231,0x231,0x231,0x231,0x231,0x231,0x231,0x231,0x1827,0x1827,0x1827,0x1827,0x1827,0x1827,0x1827,0x1827,\n-0x1827,0x1827,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,\n-0x181e,0x231,0x231,0x231,0x183c,0x183f,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,\n-0x1845,0x1845,0x1845,0x1845,0x1833,0x1833,0x1833,0x1833,0x1833,0x1833,0x1833,0x1833,0x1833,0x234,0x234,0x234,\n-0x234,0x234,0x234,0x234,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,\n-0x199e,0x199e,0x199e,0x199e,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x237,0x1836,0x1836,0x1836,0x1836,\n-0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x237,0x237,0x1836,\n-0x1836,0x1836,0x1836,0x1836,0x1887,0x1923,0x1a8b,0x1a8e,0x23a,0x23a,0x23a,0x23a,0x23a,0x23a,0x23a,0x23a,\n+0x16da,0x16e9,0x16e0,0x16dd,0x16ef,0x16ef,0x16e3,0x16ef,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,\n+0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x16e6,0x20a,0x20a,0x20a,0x20a,0x20a,0x20a,\n+0x16f5,0x16f5,0x16f5,0x16f5,0x16f5,0x16f5,0x16f5,0x16f5,0x16f5,0x16f5,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,\n+0x16f2,0x16f2,0x16f2,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x20d,0x16fb,\n+0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,\n+0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x1797,0x198f,0x210,0x210,0x1788,0x1788,0x1788,\n+0x1794,0x1794,0x1788,0x1788,0x1788,0x1788,0x1794,0x1788,0x1788,0x1788,0x1788,0x178b,0x210,0x210,0x210,0x210,\n+0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x178e,0x178e,0x179a,0x179a,0x179a,0x178e,\n+0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,\n+0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,\n+0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x213,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,\n+0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x219,0x17af,0x17af,0x219,0x219,\n+0x219,0x219,0x219,0x17ac,0x17ac,0x17ac,0x17ac,0x17ac,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x21c,\n+0x17b2,0x21c,0x17b2,0x17b2,0x17b2,0x17b2,0x21c,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,\n+0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x21c,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,\n+0x17b2,0x17b5,0x21c,0x21c,0x21c,0x21c,0x21c,0x21c,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,\n+0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,\n+0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x21f,0x21f,0x21f,0x21f,0x21f,\n+0x21f,0x21f,0x21f,0x21f,0x21f,0x21f,0x21f,0x21f,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,\n+0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x21f,0x21f,0x21f,0x21f,0x21f,\n+0x21f,0x21f,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,\n+0x1929,0x1929,0x1929,0x1929,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a94,0x1b3c,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1b3f,\n+0x1b3c,0x222,0x1a0a,0x1a94,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x17df,0x1a0a,0x1a0a,0x1a94,0x1a94,0x1a94,0x1a94,0x1a94,\n+0x1a94,0x1a94,0x1a94,0x1b3c,0x222,0x1a97,0x1a97,0x1a97,0x1929,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,\n+0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x1929,0x1929,0x17c4,0x17c4,0x17c4,0x17c4,0x17c1,0x17c4,0x17c4,0x17c7,\n+0x17ca,0x17c7,0x17c7,0x17c4,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,0x225,\n+0x225,0x225,0x225,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x1821,0x1821,0x1821,0x1821,0x1818,0x1818,0x1818,0x1812,\n+0x1815,0x1815,0x1815,0x1a40,0x228,0x228,0x228,0x228,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,0x181e,\n+0x181e,0x181e,0x228,0x228,0x228,0x228,0x181b,0x181b,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,\n+0x183c,0x22b,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,\n+0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x183c,0x1839,0x1827,0x1827,0x1827,0x1827,\n+0x1827,0x1827,0x1827,0x22b,0x1827,0x1827,0x1827,0x1827,0x1827,0x1827,0x1839,0x182a,0x183c,0x183f,0x183f,0x1833,\n+0x1830,0x1830,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x22b,0x1836,0x1836,0x1836,0x1836,\n+0x1836,0x1836,0x1836,0x1836,0x1836,0x1836,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,0x182d,\n+0x182d,0x182d,0x182d,0x182d,0x182d,0x22b,0x22b,0x22b,0x184b,0x184e,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,\n+0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1842,0x1842,0x1842,0x1842,0x1842,0x1842,0x1842,0x1842,\n+0x1842,0x22e,0x22e,0x22e,0x22e,0x22e,0x22e,0x22e,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,\n+0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x231,\n+0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,\n+0x1845,0x231,0x231,0x1845,0x1845,0x1845,0x1845,0x1845,0x1893,0x192f,0x1a9a,0x1a9d,0x1b45,0x234,0x234,0x234,\n+0x234,0x234,0x234,0x234,0x234,0x234,0x234,0x234,0x1b42,0x1b42,0x234,0x234,0x234,0x234,0x234,0x234,\n+0x234,0x234,0x234,0x234,0x234,0x234,0x234,0x234,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,\n+0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x1854,0x237,0x237,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,\n+0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x237,0x1851,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,\n+0x1848,0x1851,0x1848,0x1848,0x1851,0x1848,0x1848,0x237,0x237,0x237,0x237,0x237,0x237,0x237,0x237,0x237,\n+0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x1857,0x23a,0x23a,0x23a,\n@@ -2502,39 +2525,29 @@\n-0x23a,0x23a,0x23a,0x23a,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,0x1845,\n-0x1845,0x1845,0x1845,0x1845,0x23d,0x23d,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,\n-0x1839,0x1839,0x1839,0x1839,0x23d,0x1842,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,0x1839,0x1842,0x1839,0x1839,\n-0x1842,0x1839,0x1839,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x1848,0x1848,0x1848,0x1848,\n-0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x1848,0x240,0x240,0x240,0x240,0x240,0x240,0x240,\n-0x240,0x240,0x240,0x240,0x240,0x240,0x240,0x240,0x240,0x240,0x240,0x240,0x1860,0x1860,0x1851,0x184b,\n-0x184b,0x1860,0x184e,0x1863,0x1863,0x1863,0x1863,0x1866,0x1866,0x185a,0x1857,0x1854,0x185d,0x185d,0x185d,0x185d,\n-0x185d,0x185d,0x185d,0x185d,0x185d,0x185d,0x243,0x185a,0x243,0x1854,0x1983,0x1a34,0x243,0x243,0x243,0x243,\n-0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,\n-0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x186c,0x186c,0x186c,0x186c,\n-0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,\n-0x246,0x246,0x246,0x246,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,\n-0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,0x1869,\n-0x246,0x246,0x246,0x246,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,\n-0x188a,0x1a04,0x1a04,0x1a04,0x1a04,0x1a04,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x1a91,0x249,0x249,0x249,0x249,\n-0x249,0x249,0x249,0x249,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,\n-0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x24c,0x24c,0x24c,0x24c,0x24c,0x24c,0x24c,0x24c,0x24c,\n-0x24c,0x24c,0x24c,0x24c,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,\n-0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,\n-0x1929,0x1929,0x1929,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,0x24f,\n-0x24f,0x24f,0x24f,0x24f,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,\n-0x291,0x291,0x291,0x291,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x252,0x18c9,0x18c9,0x252,0x18c9,\n-0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,\n-0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18bd,0x18bd,0x18bd,0x18bd,0x18bd,0x18bd,0x252,0x252,0x252,0x18bd,0x252,\n-0x18bd,0x18bd,0x252,0x18bd,0x18bd,0x18bd,0x18c0,0x18bd,0x18c3,0x18c3,0x18cc,0x18bd,0x252,0x252,0x252,0x252,\n-0x252,0x252,0x252,0x252,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x252,0x252,\n-0x252,0x252,0x252,0x252,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,\n-0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,\n-0x255,0x255,0x255,0x255,0x18f9,0x18fc,0x190b,0x190b,0x18fc,0x18ff,0x18f9,0x18f6,0x25e,0x25e,0x25e,0x25e,\n-0x25e,0x25e,0x25e,0x25e,0x18e4,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18e1,0x18e1,0x18cf,0x18cf,0x18cf,\n-0x18e4,0x18e4,0x18e4,0x18e4,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,\n-0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x261,0x261,0x261,0x261,0x261,0x261,0x261,0x261,\n-0x261,0x261,0x261,0x261,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,0x1989,\n-0x1989,0x1989,0x261,0x261,0x1a9a,0x1a9a,0x1a9a,0x1a9a,0x294,0x294,0x294,0x294,0x1a9a,0x1a9a,0x1a9a,0x294,\n-0x294,0x294,0x294,0x294,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,\n-0x1998,0x1998,0x1998,0x198c,0x198c,0x198c,0x198c,0x198c,0x198c,0x198c,0x198c,0x198c,0x1998,0x1992,0x198f,0x1995,\n-0x264,0x264,0x264,0x264,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,\n-0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x199e,0x267,\n-0x267,0x199e,0x199e,0x199e,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x26a,0x19ad,0x19ad,0x26a,0x19ad,0x19ad,\n+0x186f,0x186f,0x1860,0x185a,0x185a,0x186f,0x185d,0x1872,0x1872,0x1872,0x1872,0x1875,0x1875,0x1869,0x1866,0x1863,\n+0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x186c,0x1aee,0x1869,0x23d,0x1863,0x1992,0x1a43,\n+0x1af1,0x1af1,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,\n+0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,0x23d,\n+0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,0x187b,\n+0x187b,0x187b,0x187b,0x187b,0x240,0x240,0x240,0x240,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,\n+0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,0x1878,\n+0x1878,0x1878,0x1878,0x1878,0x240,0x240,0x240,0x240,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,\n+0x1896,0x1896,0x1896,0x1896,0x1896,0x1a13,0x1a13,0x1a13,0x1a13,0x1a13,0x1aa0,0x1aa0,0x1aa0,0x1aa0,0x1aa0,0x1aa0,\n+0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x243,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,\n+0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,\n+0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x1935,0x246,0x246,0x246,0x246,0x246,0x246,0x246,0x246,0x246,\n+0x246,0x246,0x246,0x246,0x246,0x246,0x246,0x246,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,\n+0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x249,\n+0x18d5,0x18d5,0x249,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,\n+0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18d5,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x18c9,0x249,\n+0x249,0x249,0x18c9,0x249,0x18c9,0x18c9,0x249,0x18c9,0x18c9,0x18c9,0x18cc,0x18c9,0x18cf,0x18cf,0x18d8,0x18c9,\n+0x249,0x249,0x249,0x249,0x249,0x249,0x249,0x249,0x18d2,0x18d2,0x18d2,0x18d2,0x18d2,0x18d2,0x18d2,0x18d2,\n+0x18d2,0x18d2,0x249,0x249,0x249,0x249,0x249,0x249,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,\n+0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,\n+0x1938,0x1938,0x1938,0x1938,0x24c,0x24c,0x24c,0x24c,0x1905,0x1908,0x1917,0x1917,0x1908,0x190b,0x1905,0x1902,\n+0x255,0x255,0x255,0x255,0x255,0x255,0x255,0x255,0x18f0,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18ed,\n+0x18ed,0x18db,0x18db,0x18db,0x18f0,0x18f0,0x18f0,0x18f0,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,\n+0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x258,0x258,0x258,0x258,\n+0x258,0x258,0x258,0x258,0x258,0x258,0x258,0x258,0x1998,0x1998,0x1998,0x1998,0x1998,0x1998,0x1998,0x1998,\n+0x1998,0x1998,0x1998,0x1998,0x1998,0x1998,0x258,0x258,0x1aa9,0x1aa9,0x1aa9,0x1aa9,0x1b4b,0x28b,0x28b,0x28b,\n+0x1aa9,0x1aa9,0x1aa9,0x28b,0x28b,0x28b,0x28b,0x28b,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,\n+0x19aa,0x19aa,0x19aa,0x19aa,0x19a7,0x19a7,0x19a7,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,\n+0x19a7,0x19a1,0x199e,0x19a4,0x25b,0x25b,0x25b,0x25b,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,\n@@ -2542,21 +2555,29 @@\n-0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19ad,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x26a,0x19a1,0x19a1,0x26a,0x19aa,\n-0x19aa,0x19a1,0x19aa,0x19a4,0x19ad,0x26a,0x26a,0x26a,0x26a,0x26a,0x26a,0x26a,0x19b6,0x19b6,0x19b9,0x19b9,\n-0x19b0,0x19b0,0x19b0,0x19b0,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x19b3,0x19b3,0x19b3,0x19b3,\n-0x19b3,0x19b3,0x19b3,0x19b3,0x19b3,0x19b3,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x19bc,0x19bc,0x19bc,0x19bc,\n-0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bf,0x19bc,0x19bc,0x19bc,0x19bf,0x19bc,0x19bc,0x19bc,\n-0x19bc,0x270,0x270,0x270,0x270,0x270,0x270,0x270,0x270,0x270,0x270,0x270,0x19c8,0x19c8,0x19c8,0x19c8,\n-0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c8,0x19c2,\n-0x19c2,0x19c5,0x19c5,0x19cb,0x19cb,0x273,0x273,0x273,0x273,0x273,0x273,0x273,0x19ce,0x19ce,0x19ce,0x19ce,\n-0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,0x19ce,\n-0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x276,0x19d1,0x19d1,0x19d1,0x19d1,\n-0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,0x19d1,\n-0x19d1,0x19d1,0x19d1,0x19d4,0x19dd,0x19d1,0x19d1,0x279,0x279,0x279,0x279,0x279,0x19e0,0x19e0,0x19e0,0x19e0,\n-0x19e0,0x19e0,0x19e0,0x19e3,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x19ec,0x19ec,0x19ec,0x19ec,\n-0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19ec,0x19e6,0x19e6,\n-0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e9,0x19e9,0x19e9,0x19e9,0x19ef,0x19ef,0x19ef,\n-0x19ef,0x19ef,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,\n-0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x1a46,0x285,\n-0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x285,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,\n-0x288,0x288,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,\n-0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a52,0x1a52,0x1a52,0x1a49,0x1a49,0x1a49,0x1a49,\n-0x288,0x288,0x1a49,0x1a49,0x1a52,0x1a52,0x1a52,0x1a52,0x1a4c,0x1a55,0x1a4f,0x1a55,0x1a52,0x288,0x288,0x288,\n+0x19ad,0x19ad,0x19ad,0x25e,0x25e,0x19ad,0x19ad,0x19ad,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x261,0x19bc,\n+0x19bc,0x261,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,\n+0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19b9,0x19b9,0x19b9,0x19b9,0x19b9,0x261,\n+0x19b0,0x19b0,0x261,0x19b9,0x19b9,0x19b0,0x19b9,0x19b3,0x19bc,0x261,0x261,0x261,0x261,0x261,0x261,0x261,\n+0x19c5,0x19c5,0x19c8,0x19c8,0x19bf,0x19bf,0x19bf,0x19bf,0x264,0x264,0x264,0x264,0x264,0x264,0x264,0x264,\n+0x19c2,0x19c2,0x19c2,0x19c2,0x19c2,0x19c2,0x19c2,0x19c2,0x19c2,0x19c2,0x264,0x264,0x264,0x264,0x264,0x264,\n+0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19ce,0x19cb,0x19cb,0x19cb,\n+0x19ce,0x19cb,0x19cb,0x19cb,0x19cb,0x267,0x267,0x267,0x267,0x267,0x267,0x267,0x267,0x267,0x267,0x267,\n+0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,\n+0x19d7,0x19d7,0x19d7,0x19d1,0x19d1,0x19d4,0x19d4,0x19da,0x19da,0x26a,0x26a,0x26a,0x26a,0x26a,0x26a,0x26a,\n+0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,0x19dd,\n+0x19dd,0x19dd,0x19dd,0x19dd,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,0x26d,\n+0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,\n+0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e0,0x19e3,0x19ec,0x19e0,0x19e0,0x270,0x270,0x270,0x270,0x270,\n+0x19ef,0x19ef,0x19ef,0x19ef,0x19ef,0x19ef,0x19ef,0x19f2,0x273,0x273,0x273,0x273,0x273,0x273,0x273,0x273,\n+0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,\n+0x19fb,0x19fb,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,0x19f8,0x19f8,0x19f8,\n+0x19f8,0x19fe,0x19fe,0x19fe,0x19fe,0x19fe,0x276,0x276,0x276,0x276,0x276,0x276,0x1a55,0x1a55,0x1a55,0x1a55,\n+0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,0x1a55,\n+0x1a55,0x1a55,0x1a55,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x27c,0x1a64,0x1a64,0x1a64,0x1a64,\n+0x1a64,0x1a64,0x1a64,0x1a64,0x27f,0x27f,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,\n+0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a64,0x1a61,0x1a61,0x1a61,\n+0x1a58,0x1a58,0x1a58,0x1a58,0x27f,0x27f,0x1a58,0x1a58,0x1a61,0x1a61,0x1a61,0x1a61,0x1a5b,0x1a64,0x1a5e,0x1a64,\n+0x1a61,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,\n+0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x27f,0x1a70,0x1a70,0x1a70,0x1a70,\n+0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x282,0x282,0x282,0x1a67,0x1a67,0x1a67,0x1a67,\n+0x1a67,0x1a67,0x1a67,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a73,0x1a73,0x282,0x282,0x285,0x1a76,0x1a76,0x1a76,\n+0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,\n+0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x1a76,0x285,0x285,\n@@ -2564,10 +2585,14 @@\n-0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,\n-0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x28b,0x28b,0x28b,0x1a58,0x1a58,0x1a58,0x1a58,0x1a58,0x1a58,0x1a58,0x1a61,\n-0x1a61,0x1a61,0x1a61,0x1a61,0x1a64,0x1a64,0x28b,0x28b,0x28e,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,\n-0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,\n-0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x1a67,0x28e,0x28e,0x291,0x291,0x291,0x291,\n-0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x1a94,0x1a94,0x1a94,0x291,\n-0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x1a97,0x1a97,0x1a97,0x1a97,\n-0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x291,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,\n-0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x1a9a,0x1a9a,0x1a9a,0x294,0x294,0x294,0x294,0x294,\n-0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x1a9a,0x1a9a,0x1a9a,0x1a9a,0x1a9a,0x1a9a,0x294,0x294,\n+0x1aa3,0x1aa3,0x1aa3,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,\n+0x1aa6,0x1aa6,0x1aa6,0x1aa6,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x288,0x1938,0x1938,0x1938,0x1938,\n+0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1aa9,0x1aa9,0x1aa9,0x1b4b,\n+0x1b4b,0x1b4b,0x1b4b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x1aa9,0x1aa9,0x1aa9,0x1aa9,\n+0x1aa9,0x1aa9,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x28b,0x28b,0x28b,\n+0x28b,0x28b,0x28b,0x28b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x28b,0x28b,0x28b,0x28b,0x28b,\n+0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x1b4b,0x28b,\n+0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,\n+0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,0x28b,\n+0x1a7f,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,\n+0x1a79,0x1a79,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x28e,0x1a7c,\n+0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a82,0x1a82,0x1a82,0x1a82,\n+0x1a88,0x1a88,0x1a88,0x1a88,0x1a88,0x1a88,0x1a88,0x1a88,0x1a88,0x1a88,0x291,0x291,0x291,0x291,0x291,0x1a85,\n+0x1af7,0x1af7,0x1af7,0x1af7,0x1af7,0x1af4,0x1af4,0x1af4,0x1af4,0x1af4,0x1af4,0x1af4,0x294,0x294,0x294,0x294,\n@@ -2575,13 +2600,15 @@\n-0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,0x294,\n-0x1a70,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,\n-0x1a6a,0x1a6a,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x1a6d,\n-0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a73,0x1a73,0x1a73,0x1a73,\n-0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x29a,0x29a,0x29a,0x29a,0x29a,0x1a76,\n-0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,\n-0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,\n-0x1926,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,\n-0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,\n-0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x29d,0x972,0x972,\n-0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,\n-0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,\n-0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x19f5,0x19f5,0x19f5,0x19f5,0x19f5,\n+0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x297,0x297,0x1b12,0x297,0x297,0x1b12,0x1b12,0x1b12,0x1b12,\n+0x1b12,0x1b12,0x1b12,0x1b12,0x297,0x1b12,0x1b12,0x297,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,\n+0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1b12,0x1afa,0x1b09,0x1b09,0x1b09,0x1b09,0x1b09,0x297,0x1b09,\n+0x1b0c,0x297,0x297,0x1afa,0x1afa,0x1b0f,0x1b00,0x1b15,0x1b09,0x1b15,0x1b09,0x1afd,0x1b18,0x1b03,0x1b18,0x297,\n+0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x297,0x1b06,0x1b06,0x1b06,0x1b06,0x1b06,0x1b06,0x1b06,0x1b06,\n+0x1b06,0x1b06,0x297,0x297,0x297,0x297,0x297,0x297,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,\n+0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x29a,0x29a,\n+0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,\n+0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,0x29a,\n+0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,\n+0x1b1e,0x1b1e,0x1b1e,0x2a0,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,\n+0x1b1e,0x1b1e,0x1b1e,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,\n+0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x1b21,0x1b21,0x1b21,0x1b21,0x1b21,0x1b21,0x1b21,0x1b21,\n+0x1b21,0x1b21,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x2a0,0x1b54,0x1b54,0x1b54,0x1b54,0x1b54,0x1b54,0x1b54,0x1b54,\n+0x1b54,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,0x2a3,\n@@ -2589,190 +2616,197 @@\n-0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0x12d8,0x12d8,0x12d8,0x2a6,0x2a6,\n-0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,\n-0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,\n-0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,\n-0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0xba0,0xba0,0xba0,0xba0,\n-0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n-0xba0,0xba0,0xba0,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0xba3,0xba3,0xba3,0xba3,\n-0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,\n-0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0xba3,0x2ac,0x2ac,0x12ed,0x12ed,0x12ed,0x12ed,\n-0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,\n-0x12ed,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x140a,0x140a,0x140a,0x140a,\n-0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,\n-0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x2b2,0x2b2,0x17d0,0x17d0,0x2b5,0x2b5,\n-0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x2b5,0x1926,0x1926,0x1926,0x1926,\n-0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x3c0,0x3b4,0x3b4,0x3b4,\n-0x3b4,0x3b4,0x3b4,0x3b4,0x3b4,0x3c0,0x3c0,0x3c0,0x3c0,0x3ba,0x114c,0x1332,0x3c3,0x93c,0x93f,0x3b1,\n-0x3b1,0x1149,0x132f,0x132f,0x3c6,0x3c6,0x3c6,0x3c6,0x3c6,0x3c6,0x3c6,0x3c6,0x1149,0x3b4,0x3b4,0x3c0,\n-0xcd8,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,\n-0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3b4,0x3b4,\n-0x8c7,0x8ca,0x95a,0x95a,0x95a,0x95a,0x95a,0x95a,0x95a,0x95a,0x95a,0x95a,0x3bd,0xfae,0xfab,0x1335,\n-0x1335,0x1335,0x1335,0x1335,0x14fa,0x114f,0x114f,0xf00,0xf00,0xdd1,0xf00,0xf00,0x3c3,0x3c3,0x3c3,0x3c3,\n-0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c6,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x3c6,0x3c3,0x3c3,\n-0x3c6,0x3c3,0x3c3,0x3c3,0x3c3,0x3c3,0x132f,0x1332,0x3b7,0x3c3,0x3c0,0x3c0,0x462,0x462,0x462,0x462,\n-0x462,0x462,0x462,0x462,0x462,0x133b,0x462,0x462,0x462,0x462,0x462,0x462,0x462,0x462,0x462,0x462,\n-0x462,0x462,0x462,0x462,0x462,0x462,0x133b,0x18a2,0x18a2,0xfcc,0x453,0x45c,0x49e,0x49e,0x49e,0x49e,\n-0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,0x49e,\n-0x49e,0x49e,0x49e,0xbbe,0xbbe,0xddd,0xddd,0x8cd,0xde0,0x141c,0x141c,0x141c,0x4a1,0x4a1,0x4a1,0x4a1,\n-0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,\n-0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a1,0x4a7,0x4a7,0x4a7,0x1164,\n-0x1164,0x1164,0x1164,0x1164,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,\n-0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,\n-0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x4a4,0x1161,0x1161,0x1161,0x1161,0x1161,0x1161,0x4aa,0x4a7,0x4a7,0x4a7,\n-0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,\n-0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,0x4a7,\n-0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,\n-0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,\n-0x4b3,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4b0,0x9b4,0xff9,0xff9,0xffc,0xff9,0x4b3,0x4ad,0x4b3,0x4ad,\n-0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,\n-0x4b3,0x4ad,0x4b3,0x4ad,0x4b3,0x4ad,0xffc,0xff9,0xffc,0xff9,0xffc,0xff9,0x4bf,0x4bf,0x4bf,0x4bf,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4bf,0x4bf,0x4bf,0x4bf,\n-0x4bf,0x4bf,0x4bf,0x4bf,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x4c2,0x6a2,0x6a2,0x6a5,0x4dd,\n-0x6b1,0x6ae,0x6ae,0x6ab,0x507,0x507,0x4c5,0x4c5,0x4c5,0x4c5,0x4c5,0xb4f,0x6b4,0x4e9,0x6cc,0x6cf,\n-0x4fe,0x6b4,0x4ec,0x4ec,0x4dd,0x4f8,0x4f8,0x6a2,0x504,0x501,0x6a8,0x4d7,0x4ce,0x4ce,0x4d1,0x4d1,\n-0x4d1,0x4d1,0x4d1,0x4d4,0x4d1,0x4d1,0x4d1,0x4c8,0x510,0x50d,0x50a,0x50a,0x6c0,0x4f2,0x4ef,0x6bd,\n-0x6ba,0x6b7,0x6c9,0x4e0,0x6c6,0x6c6,0x4f5,0x4f8,0x6c3,0x6c3,0x4f5,0x4f8,0x4da,0x4dd,0x4dd,0x4dd,\n-0x4fb,0x4e6,0x4e3,0xbd3,0xae9,0xaec,0xae6,0xae6,0xae6,0xae6,0xbca,0xbca,0xbca,0xbca,0xbd0,0xd05,\n-0xd02,0xdec,0xdef,0xbcd,0xdef,0xdef,0xdef,0xdef,0xdec,0xdef,0xdef,0xbc7,0x534,0x534,0x534,0x534,\n-0x534,0x534,0x534,0x531,0x537,0x750,0x534,0x9b7,0x9d8,0xaef,0xaef,0xaef,0xbd9,0xbd9,0xdf5,0xdf5,\n-0xdf5,0xdf5,0x116d,0x1170,0x1170,0x1350,0x14e8,0x1512,0x1515,0x1515,0x1728,0x18a5,0x543,0x543,0x55b,0x6de,\n-0x540,0x6db,0x543,0x558,0x540,0x6de,0x552,0x55b,0x55b,0x55b,0x552,0x552,0x55b,0x55b,0x55b,0x6e7,\n-0x540,0x55b,0x6e1,0x540,0x54f,0x55b,0x55b,0x55b,0x55b,0x55b,0x540,0x540,0x546,0x6db,0x6e4,0x540,\n-0x55b,0x540,0x6ea,0x540,0x55b,0x549,0x561,0x6ed,0x55b,0x55b,0x54c,0x552,0x55b,0x55b,0x55e,0x55b,\n-0x552,0x555,0x555,0x555,0x555,0xafb,0xaf8,0xd08,0xdfe,0xbee,0xbf1,0xbf1,0xbeb,0xbe8,0xbe8,0xbe8,\n-0xbe8,0xbf1,0xbee,0xbee,0xbee,0xbee,0xbe5,0xbe8,0xdfb,0xf0c,0xf0f,0x1002,0x1173,0x1173,0x1173,0x6f3,\n-0x6f0,0x564,0x567,0x567,0x567,0x567,0x567,0x6f0,0x6f3,0x6f3,0x6f0,0x567,0x6f9,0x6f9,0x6f9,0x6f9,\n-0x6f9,0x6f9,0x6f9,0x6f9,0x6f9,0x6f9,0x6f9,0x6f9,0x570,0x570,0x570,0x570,0x6f6,0x6f6,0x6f6,0x6f6,\n-0x6f6,0x6f6,0x6f6,0x6f6,0x6f6,0x6f6,0x56a,0x56a,0x56a,0x56a,0x56a,0x56a,0x576,0x576,0x576,0x576,\n-0x576,0x576,0x576,0x576,0x573,0x57c,0x57c,0x576,0x576,0x576,0x579,0x573,0x576,0x576,0x573,0x573,\n-0x573,0x573,0x576,0x576,0x6fc,0x6fc,0x573,0x573,0x576,0x576,0x576,0x576,0x576,0x576,0x576,0x576,\n-0x576,0x576,0x576,0x576,0x576,0x579,0x579,0x579,0x576,0x576,0x6ff,0x576,0x6ff,0x576,0x576,0x576,\n-0x576,0x576,0x576,0x576,0x573,0x576,0x573,0x573,0x573,0x573,0x573,0x573,0x576,0x576,0x573,0x6fc,\n-0x573,0x573,0x573,0xb01,0xb01,0xb01,0xb01,0xb01,0xb01,0xb01,0xb01,0xb01,0xbf4,0xbf4,0xbf4,0xbf4,\n-0xbf4,0xbf4,0xbf4,0xbf4,0xbf4,0xbf4,0xbf4,0xbf4,0x705,0x57f,0x705,0x705,0x582,0x57f,0x57f,0x705,\n-0x705,0x582,0x57f,0x705,0x582,0x57f,0x57f,0x705,0x57f,0x705,0x58e,0x58b,0x57f,0x705,0x57f,0x57f,\n-0x57f,0x57f,0x705,0x57f,0x57f,0x705,0x705,0x705,0x705,0x57f,0x57f,0x705,0x582,0x705,0x582,0x705,\n-0x705,0x705,0x705,0x705,0x70b,0x585,0x705,0x585,0x585,0x57f,0x57f,0x57f,0x705,0x705,0x705,0x705,\n-0x57f,0x57f,0x57f,0x57f,0x705,0x705,0x57f,0x57f,0x57f,0x582,0x57f,0x57f,0x582,0x57f,0x57f,0x582,\n-0x705,0x582,0x57f,0x57f,0x705,0x57f,0x57f,0x57f,0x57f,0x57f,0x705,0x57f,0x57f,0x57f,0x57f,0x57f,\n-0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x708,0x705,0x582,0x57f,0x705,0x705,0x705,0x705,\n-0x57f,0x57f,0x705,0x705,0x57f,0x582,0x708,0x708,0x582,0x582,0x57f,0x57f,0x582,0x582,0x57f,0x57f,\n-0x582,0x582,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x582,0x582,0x705,0x705,0x582,0x582,0x705,0x705,\n-0x582,0x582,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x705,0x57f,0x57f,\n-0x57f,0x705,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x705,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,\n-0x582,0x582,0x582,0x582,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,\n-0x57f,0x57f,0x57f,0x705,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,\n-0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,\n-0x57f,0x57f,0x57f,0x57f,0x582,0x582,0x582,0x582,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,0x582,0x582,\n-0x582,0x582,0x57f,0x588,0x57f,0x57f,0xbf7,0xbf7,0xbf7,0xbf7,0xbf7,0xbf7,0xbf7,0xbf7,0xbf7,0xbf7,\n-0xbf7,0xbf7,0xbf7,0xbf7,0x591,0xb04,0x591,0x591,0x591,0x591,0x591,0x591,0x59d,0x59a,0x59d,0x59a,\n-0x591,0x591,0x591,0x591,0x591,0x591,0x70e,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x813,0x813,\n-0x591,0x591,0x591,0x591,0x597,0x597,0x591,0x591,0x591,0x591,0x591,0x591,0x594,0x819,0x816,0x591,\n-0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,\n-0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,0x591,\n-0x591,0x591,0x591,0xb04,0xbfd,0xb04,0xb04,0xb04,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,\n-0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,\n-0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x5a0,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,\n-0x717,0x717,0x5a6,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,\n-0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xc66,0xd80,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,\n-0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x5a9,0x5ac,0x5ac,0x5ac,\n-0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,\n-0x720,0x720,0x720,0x720,0x5ac,0x5ac,0x5ac,0x5ac,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,\n-0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,\n-0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x5af,0x5af,0x723,0x723,0x723,0x723,0xc00,0xc00,\n-0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0x729,0x729,0x5b2,0x726,0x726,0x726,0x726,0x726,\n-0x726,0x726,0x5b5,0x5b5,0x5b2,0x5b2,0x5b8,0x5b8,0x5b8,0x5b8,0x729,0x729,0x5b8,0x5b8,0x72c,0x729,\n-0x5b2,0x5b2,0x5b2,0x5b2,0x729,0x729,0x5b8,0x5b8,0x72c,0x729,0x5b2,0x5b2,0x5b2,0x5b2,0x729,0x729,\n-0x726,0x5b2,0x5b8,0x729,0x5b2,0x5b2,0x726,0x729,0x729,0x729,0x5b8,0x5b8,0x5b2,0x5b2,0x5b2,0x5b2,\n-0x5b2,0x5b2,0x5b2,0x5b2,0x5b2,0x5b2,0x5b2,0x5b2,0x5b2,0x5b2,0x729,0x726,0x729,0x726,0x5b2,0x5b8,\n-0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b2,0x5b2,0x726,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,\n-0xc03,0xc03,0xc03,0xc06,0xc06,0xc81,0xc81,0xc03,0x5c7,0x5c7,0x5c7,0x5c7,0x5c4,0x73e,0x73b,0x5be,\n-0x5be,0x72f,0x5be,0x5be,0x5be,0x5be,0x735,0x72f,0x5be,0x5c4,0x5be,0x5bb,0xd89,0xd89,0xc0c,0xc0c,\n-0xe0a,0xb10,0x5c1,0x5c1,0x732,0x5ca,0x732,0x5c1,0x5c4,0x5be,0x5c4,0x5c4,0x5be,0x5be,0x5c4,0x5be,\n-0x5be,0x5be,0x5c4,0x5be,0x5be,0x5be,0x5c4,0x5c4,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,\n-0x5c4,0x5c7,0x5c7,0x5c1,0x5be,0x5be,0x5be,0x5be,0x741,0x5be,0x741,0x5be,0x5be,0x5be,0x5be,0x5be,\n-0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x81c,0x5be,0x5be,0x5be,0x5be,\n-0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5c4,0x741,0x73e,0x5cd,0x741,0x72f,0x735,0x5c4,0x72f,\n-0x738,0x72f,0x72f,0x5be,0x72f,0x73e,0x5cd,0x73e,0xb10,0xb10,0xc0f,0xc0f,0xc0f,0xc0f,0xc0f,0xc0f,\n-0xc0f,0xc0f,0xc0f,0xc12,0xc0f,0xc0f,0xe07,0xebe,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,\n-0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d0,0x5d3,0x13da,0x13da,0x13da,\n-0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x151e,0x5df,0x5e8,0x5df,0x5df,0x13da,0x5d3,0x5d3,\n-0x5e8,0x5e8,0x13dd,0x13dd,0x5eb,0x5eb,0x5dc,0x5e2,0x5dc,0x5dc,0x5e2,0x5d3,0x5e2,0x5d3,0x5e2,0x5d3,\n-0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5e2,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x13da,0x5d3,0x5d3,0x5d3,\n-0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5e2,0x5e2,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,\n-0x5d3,0x747,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5e2,0x5d3,0x5d3,0x5e2,0x5d3,0x5d3,0x5d3,0x5d3,\n-0x13da,0x5d3,0x13da,0x5d3,0x5d3,0x5d3,0x5d3,0x13da,0x13da,0x13da,0x5d3,0x12d2,0x5d3,0x5d3,0x5d3,0x5d9,\n-0x5d9,0x5d9,0x5d9,0x135c,0x135c,0x5d3,0x5d6,0x5e5,0x5e8,0x5dc,0x5dc,0x5dc,0xc18,0xc15,0xc18,0xc15,\n-0xc18,0xc15,0xc18,0xc15,0xc18,0xc15,0xc18,0xc15,0xc18,0xc15,0x744,0x744,0x744,0x744,0x744,0x744,\n-0x744,0x744,0x744,0x744,0x5d3,0x5e2,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,\n-0x5d3,0x5d3,0x5d3,0x5d3,0x13da,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,0x5d3,\n-0x5d3,0x5d3,0x5d3,0x13da,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60c,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,\n-0x60c,0x612,0x603,0x606,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x612,0x609,0x609,0x609,0x609,0x609,0x609,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60c,0x60c,0x60c,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,\n-0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,\n-0x60f,0x615,0x612,0x60c,0x612,0x60c,0x612,0x60c,0x612,0x60c,0x612,0x60c,0x612,0x60c,0x612,0x60c,\n-0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,\n-0x612,0x60c,0x60f,0x615,0x612,0x60c,0x612,0x60c,0x60f,0x615,0x612,0x60c,0x60f,0x615,0x612,0x60c,\n-0x612,0x60c,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,0x135f,\n-0x612,0x60c,0x612,0x60c,0x612,0x60c,0x60f,0x615,0x60f,0x615,0x612,0x60c,0x612,0x60c,0x612,0x60c,\n-0x612,0x60c,0x612,0x60c,0x612,0x60c,0x612,0x60c,0x60f,0x612,0x60c,0x60f,0x612,0x60c,0x60f,0x615,\n-0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,\n-0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60f,0x60f,0x60c,0x60f,0x60c,0x60f,0x60c,0x60c,0x60f,0x60c,0x60c,0x60f,0x60c,0x60f,0x60c,0x60c,\n-0x60f,0x60c,0x60f,0x60f,0x60c,0x60c,0x60c,0x60f,0x60c,0x60c,0x60c,0x60c,0x60c,0x60f,0x60c,0x60c,\n-0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60c,0x60c,0x60c,0x60c,0x60f,0x60f,0x60c,0x60c,0x60f,0x60c,0x60f,0x60c,0x60c,0x60c,0x60c,0x60c,\n-0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,\n-0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,0x60f,\n-0x60f,0x60f,0x60f,0x615,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x612,0x612,0x612,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,\n-0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x615,0x612,0x612,0x612,0x612,0x612,0x612,0x612,\n-0x612,0x612,0x612,0x612,0x618,0x618,0x618,0x618,0x100e,0x100e,0x100e,0x1521,0x1521,0x1521,0x1521,0x1521,\n-0x1521,0x1521,0x172e,0x172e,0x879,0x87f,0x87f,0x88b,0x88b,0x87c,0x873,0x87c,0x873,0x87c,0x873,0x87c,\n-0x873,0x87c,0x873,0x87c,0x627,0x627,0x621,0x627,0x621,0x627,0x621,0x627,0x621,0x627,0x621,0x624,\n-0x62a,0x627,0x621,0x627,0x621,0x624,0x62a,0x627,0x621,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,\n-0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x627,0x621,0x627,0x621,0x627,0x621,0x627,0x621,0x624,\n-0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,\n-0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,0x62a,0x627,0x621,0x624,\n-0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,0x714,\n-0x714,0x714,0x714,0x714,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,\n-0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,0x711,\n-0x711,0x711,0x711,0x711,0x711,0x711,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,\n-0x71a,0x71a,0x71d,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,0x71a,\n-0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,0x717,\n-0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,\n-0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,\n-0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,\n-0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,0x74a,\n-0xc6f,0x8df,0x8d9,0x8d6,0x8dc,0x8d3,0x75f,0x762,0x762,0x762,0x762,0x762,0x762,0x762,0x762,0x762,\n-0x8e5,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,\n-0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,0x75f,\n-0x75f,0x75f,0x8e2,0x8e2,0x765,0x8f4,0x8f7,0x8fd,0x81f,0x82b,0x912,0x828,0x8eb,0x8e8,0x8eb,0x8e8,\n-0x8f1,0x8ee,0x8f1,0x8ee,0x8eb,0x8e8,0x825,0x8fd,0x8eb,0x8e8,0x8eb,0x8e8,0x8eb,0x8e8,0x8eb,0x8e8,\n-0x900,0x909,0x906,0x906,0x76b,0x7a7,0x7a7,0x7a7,0x7a7,0x7a7,0x7a7,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,\n-0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x7a1,0x76e,\n-0x789,0x768,0x78f,0x792,0x78c,0x7a4,0x7a4,0x7a4,0x7a4,0x7a4,0x7a4,0x79e,0x79e,0x79e,0x79e,0x79e,\n-0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x79e,0x76e,\n-0x789,0x768,0x789,0xc72,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,\n-0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,\n-0x80d,0x80d,0x80d,0x80d,0x80d,0x80d,0x12cc,0x12cc,0x12cc,0x12cc,0x12cc,0x810,0x825,0x828,0x828,0x828,\n-0x828,0x828,0x828,0x828,0x828,0x828,0x948,0x948,0x948,0x948,0x82e,0x82e,0x903,0x90f,0x90f,0x90f,\n-0x90f,0x90c,0x822,0x8fa,0xb34,0xb34,0xb34,0xc84,0xca2,0xc9f,0xb52,0x8d0,0x834,0x831,0x834,0x837,\n-0x831,0x834,0x831,0x834,0x831,0x834,0x831,0x831,0x831,0x831,0x831,0x831,0x834,0x834,0x831,0x834,\n-0x834,0x831,0x834,0x834,0x831,0x834,0x834,0x831,0x834,0x834,0x831,0x831,0xca5,0x846,0x840,0x846,\n-0x840,0x846,0x840,0x846,0x840,0x846,0x840,0x840,0x843,0x840,0x843,0x840,0x843,0x840,0x843,0x840,\n-0x843,0x840,0x843,0x840,0x843,0x840,0x843,0x840,0x843,0x840,0x843,0x840,0x843,0x840,0x843,0x846,\n-0x840,0x843,0x840,0x843,0x840,0x843,0x840,0x840,0x840,0x840,0x840,0x840,0x843,0x843,0x840,0x843,\n-0x843,0x840,0x843,0x843,0x840,0x843,0x843,0x840,0x843,0x843,0x840,0x840,0x840,0x840,0x840,0x846,\n-0x840,0x846,0x840,0x846,0x840,0x840,0x840,0x840,0x840,0x840,0x846,0x840,0x840,0x840,0x840,0x840,\n-0x843,0x846,0x846,0x843,0x843,0x843,0x843,0x918,0x91b,0x849,0x84c,0xc8d,0x852,0x852,0x852,0x852,\n-0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,\n-0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x855,0x852,0x852,0x852,\n-0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,\n-0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x852,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,\n+0x2a3,0x2a3,0x2a3,0x2a3,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x2a6,0x1b24,\n+0x1b24,0x1b27,0x2a6,0x2a6,0x1b2a,0x1b2a,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,0x2a6,\n+0x2a6,0x2a6,0x2a6,0x2a6,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,\n+0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,\n+0x2a9,0x2a9,0x2a9,0x2a9,0x1932,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,0x2c1,\n+0x2c1,0x2c1,0x2c1,0x2c1,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,\n+0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,\n+0x2a9,0x2a9,0x97b,0x97b,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x2c4,\n+0x2c4,0x2c4,0x2c4,0x2c4,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,0x2a9,\n+0x2a9,0x2a9,0x2a9,0x2a9,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x1a04,\n+0x1a04,0x1a04,0x1a04,0x1a04,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,0x1b33,\n+0x1b33,0x2ac,0x2ac,0x2ac,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0x12e4,\n+0x12e4,0x12e4,0x2af,0x2af,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,\n+0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0x2af,0x2af,\n+0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,\n+0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,0x2af,\n+0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,\n+0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0x1b36,0x1b36,0x1b36,0x1b36,0x1b36,0x1b36,0x1b36,0x2b2,0x2b2,\n+0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,\n+0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0x2b5,0x2b5,\n+0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,\n+0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,0x2b8,\n+0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,\n+0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x2bb,0x2bb,\n+0x17dc,0x17dc,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,0x2be,\n+0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,\n+0x3cc,0x3c0,0x3c0,0x3c0,0x3c0,0x3c0,0x3c0,0x3c0,0x3c0,0x3cc,0x3cc,0x3cc,0x3cc,0x3c6,0x1158,0x133e,\n+0x3cf,0x945,0x948,0x3bd,0x3bd,0x1155,0x133b,0x133b,0x3d2,0x3d2,0x3d2,0x3d2,0x3d2,0x3d2,0x3d2,0x3d2,\n+0x1155,0x3c0,0x3c0,0x3cc,0xce1,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,\n+0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,\n+0x3cf,0x3cf,0x3c0,0x3c0,0x8d0,0x8d3,0x963,0x963,0x963,0x963,0x963,0x963,0x963,0x963,0x963,0x963,\n+0x3c9,0xfba,0xfb7,0x1341,0x1341,0x1341,0x1341,0x1341,0x1506,0x115b,0x115b,0xf0c,0xf0c,0xdda,0xf0c,0xf0c,\n+0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3d2,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,\n+0x3cf,0x3d2,0x3cf,0x3cf,0x3d2,0x3cf,0x3cf,0x3cf,0x3cf,0x3cf,0x133b,0x133e,0x3c3,0x3cf,0x3cc,0x3cc,\n+0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x1347,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,\n+0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x46e,0x1347,0x18ae,0x18ae,0xfd8,0x45f,0x468,\n+0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,\n+0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0x4aa,0xbc7,0xbc7,0xde6,0xde6,0x8d6,0xde9,0x1428,0x1428,0x1428,\n+0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,\n+0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,0x4ad,\n+0x4b3,0x4b3,0x4b3,0x1170,0x1170,0x1170,0x1170,0x1170,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,\n+0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,\n+0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x4b0,0x116d,0x116d,0x116d,0x116d,0x116d,0x116d,\n+0x4b6,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,\n+0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,0x4b3,\n+0x4b3,0x4b3,0x4b3,0x4b3,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,\n+0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,\n+0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4b9,0x4b9,0x4b9,0x4b9,0x4bc,0x9bd,0x1005,0x1005,0x1008,0x1005,\n+0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,\n+0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x4bf,0x4b9,0x1008,0x1005,0x1008,0x1005,0x1008,0x1005,\n+0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,\n+0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4cb,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,0x4ce,\n+0x6ae,0x6ae,0x6b1,0x4e9,0x6bd,0x6ba,0x6ba,0x6b7,0x513,0x513,0x4d1,0x4d1,0x4d1,0x4d1,0x4d1,0xb58,\n+0x6c0,0x4f5,0x6d8,0x6db,0x50a,0x6c0,0x4f8,0x4f8,0x4e9,0x504,0x504,0x6ae,0x510,0x50d,0x6b4,0x4e3,\n+0x4da,0x4da,0x4dd,0x4dd,0x4dd,0x4dd,0x4dd,0x4e0,0x4dd,0x4dd,0x4dd,0x4d4,0x51c,0x519,0x516,0x516,\n+0x6cc,0x4fe,0x4fb,0x6c9,0x6c6,0x6c3,0x6d5,0x4ec,0x6d2,0x6d2,0x501,0x504,0x6cf,0x6cf,0x501,0x504,\n+0x4e6,0x4e9,0x4e9,0x4e9,0x507,0x4f2,0x4ef,0xbdc,0xaf2,0xaf5,0xaef,0xaef,0xaef,0xaef,0xbd3,0xbd3,\n+0xbd3,0xbd3,0xbd9,0xd0e,0xd0b,0xdf5,0xdf8,0xbd6,0xdf8,0xdf8,0xdf8,0xdf8,0xdf5,0xdf8,0xdf8,0xbd0,\n+0x540,0x540,0x540,0x540,0x540,0x540,0x540,0x53d,0x543,0x75c,0x540,0x9c0,0x9e1,0xaf8,0xaf8,0xaf8,\n+0xbe2,0xbe2,0xdfe,0xdfe,0xdfe,0xdfe,0x1179,0x117c,0x117c,0x135c,0x14f4,0x151e,0x1521,0x1521,0x1734,0x18b1,\n+0x54f,0x54f,0x567,0x6ea,0x54c,0x6e7,0x54f,0x564,0x54c,0x6ea,0x55e,0x567,0x567,0x567,0x55e,0x55e,\n+0x567,0x567,0x567,0x6f3,0x54c,0x567,0x6ed,0x54c,0x55b,0x567,0x567,0x567,0x567,0x567,0x54c,0x54c,\n+0x552,0x6e7,0x6f0,0x54c,0x567,0x54c,0x6f6,0x54c,0x567,0x555,0x56d,0x6f9,0x567,0x567,0x558,0x55e,\n+0x567,0x567,0x56a,0x567,0x55e,0x561,0x561,0x561,0x561,0xb04,0xb01,0xd11,0xe07,0xbf7,0xbfa,0xbfa,\n+0xbf4,0xbf1,0xbf1,0xbf1,0xbf1,0xbfa,0xbf7,0xbf7,0xbf7,0xbf7,0xbee,0xbf1,0xe04,0xf18,0xf1b,0x100e,\n+0x117f,0x117f,0x117f,0x6ff,0x6fc,0x570,0x573,0x573,0x573,0x573,0x573,0x6fc,0x6ff,0x6ff,0x6fc,0x573,\n+0x705,0x705,0x705,0x705,0x705,0x705,0x705,0x705,0x705,0x705,0x705,0x705,0x57c,0x57c,0x57c,0x57c,\n+0x702,0x702,0x702,0x702,0x702,0x702,0x702,0x702,0x702,0x702,0x576,0x576,0x576,0x576,0x576,0x576,\n+0x582,0x582,0x582,0x582,0x582,0x582,0x582,0x582,0x57f,0x588,0x588,0x582,0x582,0x582,0x585,0x57f,\n+0x582,0x582,0x57f,0x57f,0x57f,0x57f,0x582,0x582,0x708,0x708,0x57f,0x57f,0x582,0x582,0x582,0x582,\n+0x582,0x582,0x582,0x582,0x582,0x582,0x582,0x582,0x582,0x585,0x585,0x585,0x582,0x582,0x70b,0x582,\n+0x70b,0x582,0x582,0x582,0x582,0x582,0x582,0x582,0x57f,0x582,0x57f,0x57f,0x57f,0x57f,0x57f,0x57f,\n+0x582,0x582,0x57f,0x708,0x57f,0x57f,0x57f,0xb0a,0xb0a,0xb0a,0xb0a,0xb0a,0xb0a,0xb0a,0xb0a,0xb0a,\n+0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0x711,0x58b,0x711,0x711,\n+0x58e,0x58b,0x58b,0x711,0x711,0x58e,0x58b,0x711,0x58e,0x58b,0x58b,0x711,0x58b,0x711,0x59a,0x597,\n+0x58b,0x711,0x58b,0x58b,0x58b,0x58b,0x711,0x58b,0x58b,0x711,0x711,0x711,0x711,0x58b,0x58b,0x711,\n+0x58e,0x711,0x58e,0x711,0x711,0x711,0x711,0x711,0x717,0x591,0x711,0x591,0x591,0x58b,0x58b,0x58b,\n+0x711,0x711,0x711,0x711,0x58b,0x58b,0x58b,0x58b,0x711,0x711,0x58b,0x58b,0x58b,0x58e,0x58b,0x58b,\n+0x58e,0x58b,0x58b,0x58e,0x711,0x58e,0x58b,0x58b,0x711,0x58b,0x58b,0x58b,0x58b,0x58b,0x711,0x58b,\n+0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x714,0x711,0x58e,0x58b,\n+0x711,0x711,0x711,0x711,0x58b,0x58b,0x711,0x711,0x58b,0x58e,0x714,0x714,0x58e,0x58e,0x58b,0x58b,\n+0x58e,0x58e,0x58b,0x58b,0x58e,0x58e,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58e,0x58e,0x711,0x711,\n+0x58e,0x58e,0x711,0x711,0x58e,0x58e,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,\n+0x58b,0x711,0x58b,0x58b,0x58b,0x711,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x711,0x58b,0x58b,\n+0x58b,0x58b,0x58b,0x58b,0x58e,0x58e,0x58e,0x58e,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,\n+0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x711,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,\n+0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,\n+0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58b,0x58e,0x58e,0x58e,0x58e,0x58b,0x58b,0x58b,0x58b,\n+0x58b,0x58b,0x58e,0x58e,0x58e,0x58e,0x58b,0x594,0x58b,0x58b,0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,\n+0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0x59d,0xb0d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,\n+0x5a9,0x5a6,0x5a9,0x5a6,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x71a,0x59d,0x59d,0x59d,0x59d,0x59d,\n+0x59d,0x59d,0x81f,0x81f,0x59d,0x59d,0x59d,0x59d,0x5a3,0x5a3,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,\n+0x5a0,0x825,0x822,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,\n+0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,\n+0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0x59d,0xb0d,0xc06,0xb0d,0xb0d,0xb0d,0x5ac,0x5ac,0x5ac,0x5ac,\n+0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,\n+0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x5ac,0x723,0x723,0x723,0x723,\n+0x723,0x723,0x723,0x723,0x723,0x723,0x5b2,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,\n+0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xc6f,0xd89,0x72c,0x72c,0x72c,0x72c,\n+0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,\n+0x5b5,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x5b8,0x72c,0x72c,0x72c,0x72c,\n+0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x5b8,0x5b8,0x5b8,0x5b8,0x72c,0x72c,0x72c,0x72c,\n+0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72f,0x72f,0x72f,0x72f,\n+0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x72f,0x5bb,0x5bb,0x72f,0x72f,\n+0x72f,0x72f,0xc09,0xc09,0xc09,0xc09,0xc09,0xc09,0xc09,0xc09,0xc09,0xc09,0x735,0x735,0x5be,0x732,\n+0x732,0x732,0x732,0x732,0x732,0x732,0x5c1,0x5c1,0x5be,0x5be,0x5c4,0x5c4,0x5c4,0x5c4,0x735,0x735,\n+0x5c4,0x5c4,0x738,0x735,0x5be,0x5be,0x5be,0x5be,0x735,0x735,0x5c4,0x5c4,0x738,0x735,0x5be,0x5be,\n+0x5be,0x5be,0x735,0x735,0x732,0x5be,0x5c4,0x735,0x5be,0x5be,0x732,0x735,0x735,0x735,0x5c4,0x5c4,\n+0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x5be,0x735,0x732,\n+0x735,0x732,0x5be,0x5c4,0x5c4,0x5c4,0x5c4,0x5c4,0x5c4,0x5be,0x5be,0x732,0xb16,0xb16,0xb16,0xb16,\n+0xb16,0xb16,0xb16,0xb16,0xc0c,0xc0c,0xc0c,0xc0f,0xc0f,0xc8a,0xc8a,0xc0c,0x5d3,0x5d3,0x5d3,0x5d3,\n+0x5d0,0x74a,0x747,0x5ca,0x5ca,0x73b,0x5ca,0x5ca,0x5ca,0x5ca,0x741,0x73b,0x5ca,0x5d0,0x5ca,0x5c7,\n+0xd92,0xd92,0xc15,0xc15,0xe13,0xb19,0x5cd,0x5cd,0x73e,0x5d6,0x73e,0x5cd,0x5d0,0x5ca,0x5d0,0x5d0,\n+0x5ca,0x5ca,0x5d0,0x5ca,0x5ca,0x5ca,0x5d0,0x5ca,0x5ca,0x5ca,0x5d0,0x5d0,0x5ca,0x5ca,0x5ca,0x5ca,\n+0x5ca,0x5ca,0x5ca,0x5ca,0x5d0,0x5d3,0x5d3,0x5cd,0x5ca,0x5ca,0x5ca,0x5ca,0x74d,0x5ca,0x74d,0x5ca,\n+0x5ca,0x5ca,0x5ca,0x5ca,0x828,0x828,0x828,0x828,0x828,0x828,0x828,0x828,0x828,0x828,0x828,0x828,\n+0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5ca,0x5d0,0x74d,0x74a,0x5d9,0x74d,\n+0x73b,0x741,0x5d0,0x73b,0x744,0x73b,0x73b,0x5ca,0x73b,0x74a,0x5d9,0x74a,0xb19,0xb19,0xc18,0xc18,\n+0xc18,0xc18,0xc18,0xc18,0xc18,0xc18,0xc18,0xc1b,0xc18,0xc18,0xe10,0xec7,0x5dc,0x5dc,0x5dc,0x5dc,\n+0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,0x5dc,\n+0x5df,0x13e6,0x13e6,0x13e6,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x152a,0x5eb,0x5f4,0x5eb,\n+0x5eb,0x13e6,0x5df,0x5df,0x5f4,0x5f4,0x13e9,0x13e9,0x5f7,0x5f7,0x5e8,0x5ee,0x5e8,0x5e8,0x5ee,0x5df,\n+0x5ee,0x5df,0x5ee,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5ee,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,\n+0x13e6,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5ee,0x5ee,0x5df,0x5df,0x5df,\n+0x5df,0x5df,0x5df,0x5df,0x5df,0x753,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5ee,0x5df,0x5df,0x5ee,\n+0x5df,0x5df,0x5df,0x5df,0x13e6,0x5df,0x13e6,0x5df,0x5df,0x5df,0x5df,0x13e6,0x13e6,0x13e6,0x5df,0x12de,\n+0x5df,0x5df,0x5df,0x5e5,0x5e5,0x5e5,0x5e5,0x1368,0x1368,0x5df,0x5e2,0x5f1,0x5f4,0x5e8,0x5e8,0x5e8,\n+0xc21,0xc1e,0xc21,0xc1e,0xc21,0xc1e,0xc21,0xc1e,0xc21,0xc1e,0xc21,0xc1e,0xc21,0xc1e,0x750,0x750,\n+0x750,0x750,0x750,0x750,0x750,0x750,0x750,0x750,0x5df,0x5ee,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,\n+0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x13e6,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,\n+0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x5df,0x13e6,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,\n+0x618,0x618,0x618,0x618,0x618,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x621,0x621,0x621,0x621,\n+0x621,0x621,0x621,0x621,0x618,0x61e,0x60f,0x612,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,\n+0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,\n+0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x615,0x615,0x615,0x615,0x615,0x615,0x618,0x618,0x618,0x618,\n+0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,\n+0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,\n+0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,\n+0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61e,0x618,\n+0x61e,0x618,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61b,0x621,0x61e,0x618,\n+0x61b,0x621,0x61e,0x618,0x61e,0x618,0x61b,0x621,0x61e,0x618,0x61e,0x618,0x61b,0x621,0x61e,0x618,\n+0x61b,0x621,0x61e,0x618,0x61e,0x618,0x136b,0x136b,0x136b,0x136b,0x136b,0x136b,0x136b,0x136b,0x136b,0x136b,\n+0x136b,0x136b,0x136b,0x136b,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61b,0x621,0x61b,0x621,0x61e,0x618,\n+0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61e,0x618,0x61b,0x61e,0x618,0x61b,\n+0x61e,0x618,0x61b,0x621,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,\n+0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x61b,0x61b,0x61b,0x61b,0x61b,\n+0x61b,0x61b,0x61b,0x61b,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,\n+0x61e,0x61e,0x61e,0x61e,0x61e,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,\n+0x618,0x618,0x618,0x618,0x61b,0x61b,0x618,0x61b,0x618,0x61b,0x618,0x618,0x61b,0x618,0x618,0x61b,\n+0x618,0x61b,0x618,0x618,0x61b,0x618,0x61b,0x61b,0x618,0x618,0x618,0x61b,0x618,0x618,0x618,0x618,\n+0x618,0x61b,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,\n+0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x618,0x61b,0x61b,0x618,0x618,0x61b,0x618,0x61b,0x618,\n+0x618,0x618,0x618,0x618,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,\n+0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,\n+0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x61b,0x621,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,\n+0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,\n+0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,\n+0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x621,0x61e,0x61e,0x61e,\n+0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x61e,0x624,0x624,0x624,0x624,0x101a,0x101a,0x101a,0x152d,\n+0x152d,0x152d,0x152d,0x152d,0x152d,0x152d,0x173a,0x173a,0x885,0x88b,0x88b,0x897,0x897,0x888,0x87f,0x888,\n+0x87f,0x888,0x87f,0x888,0x87f,0x888,0x87f,0x888,0x633,0x633,0x62d,0x633,0x62d,0x633,0x62d,0x633,\n+0x62d,0x633,0x62d,0x630,0x636,0x633,0x62d,0x633,0x62d,0x630,0x636,0x633,0x62d,0x633,0x62d,0x630,\n+0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x633,0x62d,0x633,0x62d,0x633,\n+0x62d,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,\n+0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,0x636,0x633,0x62d,0x630,\n+0x636,0x633,0x62d,0x630,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,\n+0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x720,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,\n+0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,\n+0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x71d,0x726,0x726,0x726,0x726,0x726,0x726,\n+0x726,0x726,0x726,0x726,0x726,0x726,0x729,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,0x726,\n+0x726,0x726,0x726,0x726,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,0x723,\n+0x723,0x723,0x723,0x723,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,\n+0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,0x72c,\n+0x72c,0x72c,0x72c,0x72c,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,\n+0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,0x756,\n+0x756,0x756,0x756,0x756,0xc78,0x8e8,0x8e2,0x8df,0x8e5,0x8dc,0x76b,0x76e,0x76e,0x76e,0x76e,0x76e,\n+0x76e,0x76e,0x76e,0x76e,0x8ee,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,\n+0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,\n+0x76b,0x76b,0x76b,0x76b,0x76b,0x76b,0x8eb,0x8eb,0x771,0x8fd,0x900,0x906,0x82b,0x837,0x91b,0x834,\n+0x8f4,0x8f1,0x8f4,0x8f1,0x8fa,0x8f7,0x8fa,0x8f7,0x8f4,0x8f1,0x831,0x906,0x8f4,0x8f1,0x8f4,0x8f1,\n+0x8f4,0x8f1,0x8f4,0x8f1,0x909,0x912,0x90f,0x90f,0x777,0x7b3,0x7b3,0x7b3,0x7b3,0x7b3,0x7b3,0x7ad,\n+0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,0x7ad,\n+0x7ad,0x7ad,0x7ad,0x77a,0x795,0x774,0x79b,0x79e,0x798,0x7b0,0x7b0,0x7b0,0x7b0,0x7b0,0x7b0,0x7aa,\n+0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,0x7aa,\n+0x7aa,0x7aa,0x7aa,0x77a,0x795,0x774,0x795,0xc7b,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,\n+0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,\n+0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x819,0x12d8,0x12d8,0x12d8,0x12d8,0x12d8,0x81c,\n+0x831,0x834,0x834,0x834,0x834,0x834,0x834,0x834,0x834,0x834,0x951,0x951,0x951,0x951,0x83a,0x83a,\n+0x90c,0x918,0x918,0x918,0x918,0x915,0x82e,0x903,0xb3d,0xb3d,0xb3d,0xc8d,0xcab,0xca8,0xb5b,0x8d9,\n+0x840,0x83d,0x840,0x843,0x83d,0x840,0x83d,0x840,0x83d,0x840,0x83d,0x83d,0x83d,0x83d,0x83d,0x83d,\n+0x840,0x840,0x83d,0x840,0x840,0x83d,0x840,0x840,0x83d,0x840,0x840,0x83d,0x840,0x840,0x83d,0x83d,\n+0xcae,0x852,0x84c,0x852,0x84c,0x852,0x84c,0x852,0x84c,0x852,0x84c,0x84c,0x84f,0x84c,0x84f,0x84c,\n+0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,\n+0x84f,0x84c,0x84f,0x852,0x84c,0x84f,0x84c,0x84f,0x84c,0x84f,0x84c,0x84c,0x84c,0x84c,0x84c,0x84c,\n+0x84f,0x84f,0x84c,0x84f,0x84f,0x84c,0x84f,0x84f,0x84c,0x84f,0x84f,0x84c,0x84f,0x84f,0x84c,0x84c,\n+0x84c,0x84c,0x84c,0x852,0x84c,0x852,0x84c,0x852,0x84c,0x84c,0x84c,0x84c,0x84c,0x84c,0x852,0x84c,\n+0x84c,0x84c,0x84c,0x84c,0x84f,0x852,0x852,0x84f,0x84f,0x84f,0x84f,0x921,0x924,0x855,0x858,0xc96,\n@@ -2780,11 +2814,3 @@\n-0x85e,0x85e,0x85e,0x85e,0xd92,0xd92,0xec1,0x858,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,\n-0x924,0x924,0x924,0x924,0xd8c,0xd8c,0xd8c,0xd8c,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,\n-0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x861,\n-0x861,0x861,0x861,0x861,0x861,0x861,0x861,0x1aa3,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,\n-0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x864,0x864,0x864,0x864,0x864,0x864,0xd95,\n-0xd95,0xd95,0xd95,0x930,0x930,0x930,0x930,0x930,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,\n-0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,\n-0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0x864,0xd95,0xd95,0x867,0x867,0x867,0x867,\n-0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,\n-0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x867,0x92d,0x92d,0x92d,0x92d,\n-0x92d,0x92d,0x92d,0x92d,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,\n+0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,\n+0x861,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,\n+0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x85e,0x86a,0x86a,0x86a,0x86a,\n@@ -2792,2 +2818,2 @@\n-0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,\n-0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0xec4,0x1131,0x1131,0x1131,0x1131,\n+0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0x86a,0xd9b,0xd9b,0xeca,0x864,0x92d,0x92d,0x92d,0x92d,\n+0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0xd95,0xd95,0xd95,0xd95,0x86d,0x86d,0x86d,0x86d,\n@@ -2795,12 +2821,17 @@\n-0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,\n-0x86d,0x86d,0x870,0x870,0x86d,0x870,0x86d,0x870,0x870,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,\n-0x86d,0x86d,0x86d,0x870,0x86d,0x870,0x86d,0x870,0x870,0x86d,0x86d,0x870,0x870,0x870,0x86d,0x86d,\n-0x86d,0x86d,0x14d9,0x14d9,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,\n-0xc96,0xc96,0xc96,0xc96,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,\n-0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,0x924,\n-0x924,0x924,0x924,0x924,0x1311,0x1311,0x1311,0x1311,0x12b1,0x12b1,0x12b1,0x12b1,0x12b1,0x12b1,0x12b1,0x12b1,\n-0xd8c,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,\n-0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,\n-0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x92a,0x927,0x92a,0x927,0x927,0x927,0x927,0x927,0x927,\n-0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0x927,0xc90,0xc90,0xc90,\n-0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0xc90,0x92d,0x92d,0x92d,0x92d,\n+0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x86d,0x1ab2,0x936,0x936,0x936,0x936,\n+0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x870,0x870,0x870,\n+0x870,0x870,0x870,0xd9e,0xd9e,0xd9e,0xd9e,0x939,0x939,0x939,0x939,0x939,0x870,0x870,0x870,0x870,\n+0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,\n+0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0x870,0xd9e,0xd9e,\n+0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,\n+0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,0x873,\n+0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,\n+0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,\n+0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0x876,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,\n+0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,0xecd,\n+0x113d,0x113d,0x113d,0x113d,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,\n+0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x879,\n+0x879,0x879,0x879,0x879,0x879,0x879,0x87c,0x87c,0x879,0x87c,0x879,0x87c,0x87c,0x879,0x879,0x879,\n+0x879,0x879,0x879,0x879,0x879,0x879,0x879,0x87c,0x879,0x87c,0x879,0x87c,0x87c,0x879,0x879,0x87c,\n+0x87c,0x87c,0x879,0x879,0x879,0x879,0x14e5,0x14e5,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,\n+0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,\n@@ -2808,11 +2839,16 @@\n-0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0xd95,0x9ae,0x990,0x990,0x990,\n-0x990,0x98a,0x990,0x990,0x9a2,0x990,0x990,0x98d,0x999,0x99f,0x99f,0x99f,0x99f,0x99f,0x9a2,0x98a,\n-0x996,0x98a,0x98a,0x98a,0x981,0x981,0x98a,0x98a,0x98a,0x98a,0x98a,0x98a,0x9a5,0x9a5,0x9a5,0x9a5,\n-0x9a5,0x9a5,0x9a5,0x9a5,0x9a5,0x9a5,0x98a,0x98a,0x98a,0x98a,0x98a,0x98a,0x98a,0x98a,0x98a,0x98a,\n-0x98d,0x981,0x98a,0x981,0x98a,0x981,0x99c,0x993,0x99c,0x993,0x9ab,0x9ab,0x9ba,0x9ba,0x9ba,0x9ba,\n-0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,\n-0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9ba,0x9bd,0x9bd,0x9bd,0x9bd,\n-0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,\n-0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9bd,0x9c0,0x9c0,0x9c0,0x9c0,\n-0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,\n-0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c0,0x9c9,0x9c9,0x9c9,0x9c9,\n+0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x92d,0x131d,0x131d,0x131d,0x131d,0x12bd,0x12bd,0x12bd,0x12bd,\n+0x12bd,0x12bd,0x12bd,0x12bd,0xd95,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,\n+0xc99,0xc99,0xc99,0xc99,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,\n+0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x933,0x930,0x933,0x930,0x930,\n+0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,0x930,\n+0x930,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,0xc99,\n+0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,\n+0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0x936,0xd9e,\n+0x9b7,0x999,0x999,0x999,0x999,0x993,0x999,0x999,0x9ab,0x999,0x999,0x996,0x9a2,0x9a8,0x9a8,0x9a8,\n+0x9a8,0x9a8,0x9ab,0x993,0x99f,0x993,0x993,0x993,0x98a,0x98a,0x993,0x993,0x993,0x993,0x993,0x993,\n+0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x9ae,0x993,0x993,0x993,0x993,0x993,0x993,\n+0x993,0x993,0x993,0x993,0x996,0x98a,0x993,0x98a,0x993,0x98a,0x9a5,0x99c,0x9a5,0x99c,0x9b4,0x9b4,\n+0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,\n+0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,0x9c3,\n+0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,\n+0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,0x9c6,\n@@ -2820,3 +2856,0 @@\n-0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c3,0x9c3,0x9cc,0x9cc,0x9cc,0x9cc,\n-0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,\n-0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9c6,0x9c6,0x9c9,0x9c9,0x9c9,0x9c9,\n@@ -2824,3 +2857,0 @@\n-0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9c9,0x9cc,0x9cc,0x9cc,0x9cc,\n-0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,\n-0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cc,0x9cf,0x9d2,0x9d2,0x9d2,\n@@ -2828,1 +2858,4 @@\n-0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9cf,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,\n+0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9cc,0x9cc,\n+0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,\n+0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9cf,0x9cf,\n+0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,0x9d2,\n@@ -2830,48 +2863,51 @@\n-0x9d2,0x9d2,0x9d2,0x9d2,0xa5f,0xa5f,0xff3,0xa5f,0xa5f,0xa5f,0xa62,0xa5f,0xff3,0xa5f,0xa5f,0xfea,\n-0xa59,0xa4d,0xa4d,0xa4d,0xa4d,0xa5c,0xa4d,0xfdb,0xfdb,0xfdb,0xa4d,0xa50,0xa59,0xa53,0xfe1,0xfed,\n-0xfed,0xfdb,0xfdb,0xff3,0xb58,0xb58,0xb58,0xb58,0xb58,0xb58,0xb58,0xb58,0xb58,0xb58,0xa65,0xa65,\n-0xa56,0xa56,0xa56,0xa56,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5c,0xa5c,0xa4d,0xa4d,0xff3,0xff3,\n-0xff3,0xff3,0xfdb,0xfdb,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,\n-0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,0xa5f,\n-0xa5f,0xa5f,0xa5f,0xa5f,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xde9,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xde9,\n-0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,0xa74,\n-0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,\n-0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,0xa7a,\n-0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa7d,0xa83,0xa80,\n-0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0x116a,0x116a,0x116a,0x116a,0x116a,0x116a,0x116a,0x116a,0x116a,\n-0x1167,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,\n-0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,0xa80,\n-0xa80,0xa80,0xa80,0xa80,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,\n-0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,0xa95,\n-0xa95,0xa95,0xa95,0xa95,0xab9,0xab9,0xab9,0xabc,0xabc,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,\n-0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xaa1,0xaa1,0xab6,0xa98,0xa98,0xa98,0xa98,0xa98,\n-0xa98,0xa98,0xab6,0xab6,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,\n-0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,0xab9,\n-0xab9,0xab9,0xab9,0xab9,0xada,0xada,0xada,0xada,0xada,0xac5,0xac5,0xada,0xada,0xada,0xada,0xada,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xadd,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,\n-0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xada,0xb04,0xb04,0xb04,0xb04,\n-0xb04,0xb04,0xb04,0xb04,0xb07,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,\n-0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xb04,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xb13,0xb13,0xb13,0xb13,\n-0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,\n-0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb13,0xb25,0xb25,0xb25,0xb25,\n-0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,\n-0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb25,0xb2b,0xb2b,0xb2b,0xb2b,\n-0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,\n-0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb2b,0xb3a,0xb3a,0xb3a,0xb3a,\n-0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,\n-0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3a,0xb3d,0xb3d,0xb3d,0xb3d,\n-0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,\n-0xb3d,0xb40,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,\n-0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,0xb3d,\n-0xb3d,0xb3d,0xb3d,0xb3d,0xb43,0xb43,0xc93,0xc93,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,\n-0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xc93,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,\n-0xb43,0xb43,0xb43,0xb43,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,\n-0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,0xb67,\n-0xb67,0xb67,0xb67,0x1524,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xd1d,0xd1d,0xb6d,0xb6d,0xb6d,0xb6d,\n-0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,\n-0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xb6d,0xd1a,0xd1a,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,\n-0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,\n+0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,\n+0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,0x9d5,\n+0x9d8,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,\n+0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9d8,0x9db,0x9db,0x9db,\n+0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,\n+0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0x9db,0xa68,0xa68,0xfff,0xa68,0xa68,0xa68,0xa6b,0xa68,\n+0xfff,0xa68,0xa68,0xff6,0xa62,0xa56,0xa56,0xa56,0xa56,0xa65,0xa56,0xfe7,0xfe7,0xfe7,0xa56,0xa59,\n+0xa62,0xa5c,0xfed,0xff9,0xff9,0xfe7,0xfe7,0xfff,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,0xb61,\n+0xb61,0xb61,0xa6e,0xa6e,0xa5f,0xa5f,0xa5f,0xa5f,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa65,0xa65,\n+0xa56,0xa56,0xfff,0xfff,0xfff,0xfff,0xfe7,0xfe7,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,\n+0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,\n+0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa68,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xdf2,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,\n+0xa7d,0xa7d,0xa7d,0xdf2,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,0xa7d,\n+0xa7d,0xa7d,0xa7d,0xa7d,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,\n+0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,0xa83,\n+0xa83,0xa83,0xa83,0xa83,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,\n+0xa89,0xa86,0xa8c,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0x1176,0x1176,0x1176,0x1176,0x1176,\n+0x1176,0x1176,0x1176,0x1176,0x1173,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,\n+0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,\n+0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa89,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,\n+0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,\n+0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xa9e,0xac2,0xac2,0xac2,0xac5,0xac5,0xac2,0xac2,0xac2,\n+0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xaaa,0xaaa,0xabf,0xaa1,\n+0xaa1,0xaa1,0xaa1,0xaa1,0xaa1,0xaa1,0xabf,0xabf,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,\n+0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,\n+0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xac2,0xae3,0xae3,0xae3,0xae3,0xae3,0xace,0xace,0xae3,\n+0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0xae3,0xae3,0xae3,0xae6,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,0xae3,\n+0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb10,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,\n+0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xb0d,0xc06,0xc06,0xc06,0xc06,0xc06,\n+0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,\n+0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,0xb1c,\n+0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,\n+0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,0xb2e,\n+0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,\n+0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,0xb34,\n+0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,\n+0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0xb40,0x13ec,0x13ec,0x13ec,0x1b2d,0x1b2d,0x1b2d,0x1b2d,0x1b2d,\n+0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,\n+0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,0xb43,\n+0xb43,0xb43,0x1b30,0x1b30,0x1b30,0x1b30,0x1b30,0x1b30,0x1b30,0x1b30,0x1b30,0x1b30,0xb46,0xb46,0xb46,0xb46,\n+0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,\n+0xb46,0xb49,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,\n+0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,0xb46,\n+0xb46,0xb46,0xb46,0xb46,0xb4c,0xb4c,0xc9c,0xc9c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,\n+0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xc9c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,0xb4c,\n+0xb4c,0xb4c,0xb4c,0xb4c,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,\n@@ -2879,30 +2915,26 @@\n-0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb70,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,\n-0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,\n-0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb73,0xb82,0xb82,0xb82,0xb82,0xb82,0xb79,0xb85,0xb8b,\n-0xb8b,0xb8b,0xb7f,0xb7f,0xb7f,0xb88,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb76,0xb76,0xb76,0xb76,0xb76,\n-0xb76,0xb76,0xb76,0xb8b,0xb8b,0xb8b,0xb8b,0xb8b,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb82,0xb82,0xb8b,0xb8b,0xb8b,0xb7f,\n-0xb7f,0xb8b,0xb8b,0xb8b,0xb8b,0xb8b,0xb8b,0xb8b,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb8b,0xb8b,\n-0xb8b,0xb8b,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb82,\n-0xb82,0xb82,0xb82,0xb82,0xb82,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n-0xb7f,0xb7f,0x1731,0x1731,0xb97,0xb8e,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb8e,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb8e,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb8e,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb8e,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,\n-0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,\n-0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb91,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,0xb97,\n-0xb97,0xb97,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,\n-0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb97,0xb97,0xb97,0xb97,\n-0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,\n+0xb70,0xb70,0xb70,0x1530,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xd26,0xd26,0xb76,0xb76,0xb76,0xb76,\n+0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,\n+0xb76,0xb76,0xb76,0xb76,0xb76,0xb76,0xd23,0xd23,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,\n+0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,\n+0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,\n+0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb79,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,\n+0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,\n+0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb7c,0xb8b,0xb8b,0xb8b,0xb8b,0xb8b,0xb82,0xb8e,0xb94,\n+0xb94,0xb94,0xb88,0xb88,0xb88,0xb91,0xb85,0xb85,0xb85,0xb85,0xb85,0xb7f,0xb7f,0xb7f,0xb7f,0xb7f,\n+0xb7f,0xb7f,0xb7f,0xb94,0xb94,0xb94,0xb94,0xb94,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,\n+0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,\n+0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb8b,0xb8b,0xb94,0xb94,0xb94,0xb88,\n+0xb88,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb94,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,\n+0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb94,0xb94,\n+0xb94,0xb94,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb8b,\n+0xb8b,0xb8b,0xb8b,0xb8b,0xb8b,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,\n+0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,0xb88,\n+0xb88,0xb88,0x173d,0x173d,0xba0,0xb97,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb97,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xb97,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb97,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n+0xba0,0xb97,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,\n@@ -2910,0 +2942,1 @@\n+0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xb9a,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n@@ -2911,0 +2944,2 @@\n+0xba0,0xba0,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,0xba0,\n@@ -2912,0 +2947,2 @@\n+0xba0,0xba0,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,\n+0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xb9d,0xba0,0xba0,0xba0,0xba0,\n@@ -2914,20 +2951,18 @@\n-0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,\n-0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfd,0xbfa,0xbfd,0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,\n-0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,0xbfa,0xd0b,0xd0e,0xe01,0xe01,0xe01,0xe01,0xe01,0xe01,0xe01,\n-0xe01,0xe01,0xe01,0xe01,0xf18,0xf18,0xf18,0xf18,0xc0f,0xc0f,0xc0f,0xc0f,0xc0f,0xc0f,0xc09,0xc09,\n-0xc09,0xc09,0xd11,0xd11,0xd11,0xd11,0xd11,0xd11,0xd14,0xd14,0xe07,0xebb,0xe07,0xe07,0xe07,0xe07,\n-0xe04,0xe07,0xe04,0xe07,0xe07,0x1008,0x12a2,0x12a2,0xe10,0xe10,0xe10,0xe10,0xe10,0xe16,0xe13,0xf2a,\n-0xf2a,0xf2a,0xf2a,0x1422,0x101a,0x1422,0x1368,0x1368,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,\n-0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc45,0xc78,0xc75,0xc78,0xc75,0xc78,0xc75,\n-0x112b,0x1128,0x1020,0x101d,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,0xc48,\n-0xc48,0xc48,0xc48,0xc48,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,\n-0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,\n-0xc4b,0xc4b,0xc4b,0xc4b,0xc4e,0xc4e,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,0xc4b,\n-0xc51,0xc51,0xc51,0xc57,0xc54,0xc7e,0xc7b,0xc57,0xc54,0xc57,0xc54,0xc57,0xc54,0xc57,0xc54,0xc57,\n-0xc54,0xc57,0xc54,0xc57,0xc54,0xc57,0xc54,0xc57,0xc54,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,\n-0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,\n-0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc57,0xc54,0xc57,0xc54,\n-0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,\n-0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc57,0xc54,0xc51,0xc51,\n-0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc60,0xc5a,0xc5a,0xc5a,\n-0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,\n+0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,\n+0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,0xba9,\n+0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,\n+0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,0xbac,\n+0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,\n+0xc06,0xc06,0xc06,0xc06,0xc06,0xc06,0xc03,0xc06,0xc03,0xc03,0xc03,0xc03,0xc03,0xc03,0xc03,0xc03,\n+0xc03,0xc03,0xc03,0xc03,0xc03,0xc03,0xc03,0xd14,0xd17,0xe0a,0xe0a,0xe0a,0xe0a,0xe0a,0xe0a,0xe0a,\n+0xe0a,0xe0a,0xe0a,0xe0a,0xf24,0xf24,0xf24,0xf24,0xc18,0xc18,0xc18,0xc18,0xc18,0xc18,0xc12,0xc12,\n+0xc12,0xc12,0xd1a,0xd1a,0xd1a,0xd1a,0xd1a,0xd1a,0xd1d,0xd1d,0xe10,0xec4,0xe10,0xe10,0xe10,0xe10,\n+0xe0d,0xe10,0xe0d,0xe10,0xe10,0x1014,0x12ae,0x12ae,0xe19,0xe19,0xe19,0xe19,0xe19,0xe1f,0xe1c,0xf36,\n+0xf36,0xf36,0xf36,0x142e,0x1026,0x142e,0x1374,0x1374,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,\n+0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc4e,0xc81,0xc7e,0xc81,0xc7e,0xc81,0xc7e,\n+0x1137,0x1134,0x102c,0x1029,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,0xc51,\n+0xc51,0xc51,0xc51,0xc51,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,\n+0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,\n+0xc54,0xc54,0xc54,0xc54,0xc57,0xc57,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,0xc54,\n+0xc5a,0xc5a,0xc5a,0xc60,0xc5d,0xc87,0xc84,0xc60,0xc5d,0xc60,0xc5d,0xc60,0xc5d,0xc60,0xc5d,0xc60,\n+0xc5d,0xc60,0xc5d,0xc60,0xc5d,0xc60,0xc5d,0xc60,0xc5d,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,\n@@ -2935,1 +2970,1 @@\n-0xc60,0xc60,0xc60,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,\n+0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc60,0xc5d,0xc60,0xc5d,\n@@ -2937,21 +2972,25 @@\n-0xc5d,0xc5a,0xc5a,0xc5a,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,\n-0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,0xc96,\n-0xc96,0xc96,0xc96,0xc96,0xd17,0xd86,0xe04,0xe04,0xe04,0xe04,0xe04,0xe04,0xe04,0xe04,0xebb,0xebb,\n-0xe04,0xe04,0xe04,0xe04,0xe07,0xe07,0xf1b,0x1008,0x1008,0x1008,0x1008,0x1008,0x1008,0x1008,0x1008,0x1008,\n-0x1008,0x12cf,0x12cf,0x12a5,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,\n-0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,0xd3b,\n-0xd3b,0xd3b,0xd3b,0xd3b,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd41,0xd41,0xd41,0xd41,0xd41,0xd3e,\n-0xd53,0xd53,0xd53,0xd4d,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd4d,\n-0xd53,0xd53,0xd53,0xd53,0xd47,0xd47,0xd50,0xd50,0xd50,0xd50,0xd44,0xd44,0xd44,0xd44,0xd44,0xd4a,\n-0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe1c,0xe19,0xe1c,0xe1c,0xe1c,\n-0xe1c,0xe1c,0xe1c,0xe1c,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,\n-0xd53,0xd53,0xd4d,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,\n-0xd53,0xd47,0xd47,0xd47,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,\n-0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,\n-0xd4a,0xd4a,0xd4a,0xd4a,0xd56,0xd56,0xd56,0xd56,0xd56,0xd59,0xd59,0xd59,0xd56,0xd56,0xd56,0xd56,\n-0xd56,0xd56,0xe1f,0xe1f,0xe1f,0xe1f,0xe1f,0xe1f,0xf2d,0xf2d,0xf2d,0xf2d,0xf2d,0xf2d,0xf2d,0x1134,\n-0x1134,0x1023,0x1023,0x1023,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,\n-0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,\n-0xd5c,0xd5c,0xd5c,0xd5c,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,\n-0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,0xd62,\n-0xd62,0xd62,0xd62,0xd62,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,\n+0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc5a,0xc60,0xc5d,0xc5a,0xc5a,\n+0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc69,0xc63,0xc63,0xc63,\n+0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,\n+0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,\n+0xc69,0xc69,0xc69,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,\n+0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,0xc63,\n+0xc66,0xc63,0xc63,0xc63,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,\n+0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,0xc9f,\n+0xc9f,0xc9f,0xc9f,0xc9f,0xd20,0xd8f,0xe0d,0xe0d,0xe0d,0xe0d,0xe0d,0xe10,0xe0d,0xe0d,0xec4,0xec4,\n+0xe0d,0xe0d,0xe0d,0xe0d,0xe10,0xe10,0xf27,0x1014,0x1014,0x1014,0x1014,0x1014,0x1014,0x1014,0x1014,0x1014,\n+0x1014,0x12db,0x12db,0x12b1,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,\n+0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,0xd44,\n+0xd44,0xd44,0xd44,0xd44,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd4a,0xd4a,0xd4a,0xd4a,0xd4a,0xd47,\n+0xd5c,0xd5c,0xd5c,0xd56,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd56,\n+0xd5c,0xd5c,0xd5c,0xd5c,0xd50,0xd50,0xd59,0xd59,0xd59,0xd59,0xd4d,0xd4d,0xd4d,0xd4d,0xd4d,0xd53,\n+0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe22,0xe25,0xe25,0xe25,\n+0xe25,0xe25,0xe25,0xe25,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,\n+0xd5c,0xd5c,0xd56,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,0xd5c,\n+0xd5c,0xd50,0xd50,0xd50,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,\n+0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,0xd53,\n+0xd53,0xd53,0xd53,0xd53,0xd5f,0xd5f,0xd5f,0xd5f,0xd5f,0xd62,0xd62,0xd62,0xd5f,0xd5f,0xd5f,0xd5f,\n+0xd5f,0xd5f,0xe28,0xe28,0xe28,0xe28,0xe28,0xe28,0xf39,0xf39,0xf39,0xf39,0xf39,0xf39,0xf39,0x1140,\n+0x1140,0x102f,0x102f,0x102f,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,\n+0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,0xd65,\n+0xd65,0xd65,0xd65,0xd65,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,0xd6b,\n@@ -2959,23 +2998,23 @@\n-0xd6b,0xd6b,0xd6b,0xd6b,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,\n-0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,0xd77,\n-0xd77,0xd77,0xd77,0xd77,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,\n-0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,0xd83,\n-0xd83,0xd83,0xd83,0xd83,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,\n-0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,0xe25,\n-0xe25,0xe25,0xe25,0xe25,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,\n-0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe28,0xe28,0xe28,0xe28,0xe28,0xe28,0xe28,\n-0xe28,0xe28,0xe28,0xe28,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,\n-0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,0xe2b,\n-0xe2b,0xe2b,0xe2b,0xe2b,0xee8,0xee8,0xe3d,0xe3d,0xf30,0xf30,0xf30,0xf30,0xf30,0xf30,0xf30,0x102f,\n-0x102f,0x102f,0x102f,0x102f,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,0x102c,\n-0x102c,0x102c,0x102c,0x102c,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,\n-0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,0xe4c,0xe49,\n-0xe4c,0xe49,0xe4c,0xe49,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,\n-0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,0xe58,\n-0xe58,0xe58,0xe58,0xe58,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,\n-0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,0xe5e,\n-0xe5e,0xe5e,0xe5e,0xe5e,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,\n-0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xe76,0xf33,0xf33,0xf33,0xf33,0x1032,\n-0x1032,0x1032,0x1032,0x1032,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,\n-0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,\n-0xe7f,0xe7f,0xe7f,0xe7f,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,\n+0xd6b,0xd6b,0xd6b,0xd6b,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,\n+0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,0xd74,\n+0xd74,0xd74,0xd74,0xd74,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,\n+0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,0xd80,\n+0xd80,0xd80,0xd80,0xd80,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,\n+0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,0xd8c,\n+0xd8c,0xd8c,0xd8c,0xd8c,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,\n+0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,0xe2e,\n+0xe2e,0xe2e,0xe2e,0xe2e,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,\n+0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,0xe31,\n+0xe31,0xe31,0xe31,0xe31,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,\n+0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,0xe34,\n+0xe34,0xe34,0xe34,0xe34,0xef4,0xef4,0xe46,0xe46,0xf3c,0xf3c,0xf3c,0xf3c,0xf3c,0xf3c,0xf3c,0x103b,\n+0x103b,0x103b,0x103b,0x103b,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,0x1038,\n+0x1038,0x1038,0x1038,0x1038,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,\n+0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,0xe55,0xe52,\n+0xe55,0xe52,0xe55,0xe52,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,\n+0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,0xe61,\n+0xe61,0xe61,0xe61,0xe61,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,\n+0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,0xe67,\n+0xe67,0xe67,0xe67,0xe67,0xeee,0xeee,0xeee,0xeee,0xeee,0xeee,0xeee,0xeee,0xe7f,0xe7f,0xe7f,0xe7f,\n+0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xe7f,0xf3f,0xf3f,0xf3f,0xf3f,0x103e,\n+0x103e,0x103e,0x103e,0x103e,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,0xe88,\n@@ -2985,2 +3024,0 @@\n-0xe91,0xe91,0xe91,0xe8b,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,\n-0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe8e,0xe91,\n@@ -2988,51 +3025,53 @@\n-0xe9a,0xe9a,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe94,0xe9d,0x103e,0x1038,0x1047,0x1035,\n-0xe9a,0xe9a,0x1035,0x1035,0xeac,0xeac,0xea0,0xeac,0xeac,0xeac,0xea3,0xeac,0xeac,0xeac,0xeac,0xea0,\n-0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,0xeac,\n-0xeac,0xeac,0xeac,0xeac,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,\n-0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,0xeaf,\n-0xeaf,0xeaf,0xeaf,0xeaf,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,\n-0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,0xec7,\n-0xec7,0xec7,0xec7,0xec7,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,0xee5,\n-0xee5,0xee5,0xee5,0xee5,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,0x113d,\n-0x113d,0x113d,0x113d,0x113d,0xf18,0xf18,0xf18,0xf15,0xf15,0xf15,0xf15,0xf15,0x1176,0x13d1,0x13d1,0x13d1,\n-0x13d1,0x1353,0x1353,0x1353,0x13d4,0x1356,0x1356,0x13d4,0x1518,0x1518,0x1518,0x1518,0x151b,0x151b,0x151b,0x17e2,\n-0x17e2,0x17e2,0x17e2,0x18a8,0xf2d,0xf2d,0xf2d,0xf2d,0x1023,0x1023,0x1023,0x1023,0x1023,0x1023,0x1023,0x1023,\n-0x1023,0x1023,0x1023,0x1023,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,\n-0x1026,0x1026,0x1026,0x1026,0xf4e,0xf4e,0xf4e,0xf4e,0xf60,0xf69,0xf6c,0xf69,0xf6c,0xf69,0xf6c,0xf69,\n-0xf6c,0xf69,0xf6c,0xf69,0xf69,0xf69,0xf6c,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,\n-0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf69,0xf51,0xf4e,0xf4e,0xf4e,\n-0xf4e,0xf4e,0xf4e,0xf63,0xf4e,0xf63,0xf60,0xf60,0xf75,0xf72,0xf75,0xf75,0xf75,0xf72,0xf72,0xf75,\n-0xf72,0xf75,0xf72,0xf75,0xf72,0x1059,0x1059,0x1059,0x1194,0x1050,0x1059,0x1050,0xf72,0xf75,0xf72,0xf72,\n-0x1050,0x1050,0x1050,0x1050,0x1053,0x1056,0x1194,0x1194,0xf78,0xf78,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,\n-0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x1062,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,\n-0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,\n-0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,\n-0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf7e,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,\n-0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,\n-0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0xf8d,0x1557,0x1557,0x1557,0x1557,0x1557,\n-0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0x1557,0xf93,0xf93,0xf93,0xf93,\n-0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,\n-0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xf93,0xfdb,0xff3,0xfea,0xff0,\n-0xff0,0xff3,0xff3,0xfea,0xfea,0xff0,0xff0,0xff0,0xff0,0xff0,0xff3,0xff3,0xff3,0xfdb,0xfdb,0xfdb,\n-0xfdb,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0xfdb,0xfea,\n-0xfed,0xfdb,0xfdb,0xff0,0xff0,0xff0,0xff0,0xff0,0xff0,0xfde,0xff3,0xff0,0xfe7,0xfe7,0xfe7,0xfe7,\n-0xfe7,0xfe7,0xfe7,0xfe7,0xfe7,0xfe7,0x115e,0x115e,0x115b,0x1158,0xfe4,0xfe4,0x100b,0x100b,0x100b,0x100b,\n-0x12cf,0x12cf,0x12a5,0x12a5,0x12ab,0x12a2,0x12a2,0x12a2,0x12a2,0x12a5,0x13d7,0x12ab,0x12a5,0x12ab,0x12a2,0x12ab,\n-0x12cf,0x12a2,0x12a2,0x12a2,0x12a5,0x12a5,0x12a2,0x12a2,0x12a5,0x12a2,0x12a2,0x12a5,0x1026,0x1026,0x1026,0x1026,\n-0x1026,0x1023,0x1023,0x1026,0x1026,0x1026,0x1026,0x1026,0x1026,0x1530,0x1530,0x1530,0x1134,0x1023,0x1023,0x1023,\n-0x1023,0x12db,0x12b4,0x12b4,0x12b4,0x12b4,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1044,0x1044,0x1041,0x103b,\n-0x1041,0x103b,0x1041,0x103b,0x1041,0x103b,0x1038,0x1038,0x1038,0x1038,0x104d,0x104a,0x1038,0x1191,0x142e,0x1431,\n-0x1431,0x142e,0x142e,0x142e,0x142e,0x142e,0x1434,0x1434,0x154b,0x153f,0x153f,0x153c,0x106b,0x1062,0x106b,0x1062,\n-0x106b,0x1062,0x106b,0x1062,0x105f,0x105c,0x105c,0x106b,0x1062,0x1377,0x1374,0x173a,0x1377,0x1374,0x143d,0x143a,\n-0x154e,0x154e,0x1554,0x154e,0x1554,0x154e,0x1554,0x154e,0x1554,0x154e,0x1554,0x154e,0x106b,0x1062,0x106b,0x1062,\n-0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,\n-0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x1062,0x1065,0x1062,0x1062,0x1062,\n-0x1062,0x1062,0x1062,0x1062,0x1062,0x106b,0x1062,0x106b,0x1062,0x106b,0x106b,0x1062,0x106e,0x106e,0x1074,0x107a,\n-0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,\n-0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x107a,0x1074,0x106e,0x106e,\n-0x106e,0x106e,0x1074,0x1074,0x106e,0x106e,0x1077,0x1446,0x1443,0x1443,0x107a,0x107a,0x1071,0x1071,0x1071,0x1071,\n-0x1071,0x1071,0x1071,0x1071,0x1071,0x1071,0x1449,0x1449,0x1449,0x1449,0x1449,0x1449,0x108f,0x108f,0x108f,0x108f,\n-0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,\n-0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x108f,0x1098,0x1098,0x1098,0x1098,\n-0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,0x1098,\n-0x1098,0x1098,0x1098,0x1098,0x109b,0x109b,0x109b,0x109e,0x109b,0x109b,0x10a1,0x10a1,0x10a4,0x10a4,0x10a4,0x10a4,\n+0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,0xe9a,\n+0xe9a,0xe9a,0xe9a,0xe94,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,\n+0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe97,0xe9a,\n+0xe9a,0xe9a,0xe9a,0xe9a,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,0xea3,\n+0xea3,0xea3,0xea0,0xea0,0xea0,0xea0,0xea0,0xea0,0xea0,0xea0,0xe9d,0xea6,0x104a,0x1044,0x1053,0x1041,\n+0xea3,0xea3,0x1041,0x1041,0xeb5,0xeb5,0xea9,0xeb5,0xeb5,0xeb5,0xeac,0xeb5,0xeb5,0xeb5,0xeb5,0xea9,\n+0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,0xeb5,\n+0xeb5,0xeb5,0xeb5,0xeb5,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,\n+0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,0xeb8,\n+0xeb8,0xeb8,0xeb8,0xeb8,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,\n+0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,0xed0,\n+0xed0,0xed0,0xed0,0xed0,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,0xef1,\n+0xef1,0xef1,0xef1,0xef1,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,0x1149,\n+0x1149,0x1149,0x1149,0x1149,0xf24,0xf24,0xf24,0xf21,0xf21,0xf21,0xf21,0xf21,0x1182,0x13dd,0x13dd,0x13dd,\n+0x13dd,0x135f,0x135f,0x135f,0x13e0,0x1362,0x1362,0x13e0,0x1524,0x1524,0x1524,0x1524,0x1527,0x1527,0x1527,0x17ee,\n+0x17ee,0x17ee,0x17ee,0x18b4,0xf39,0xf39,0xf39,0xf39,0x102f,0x102f,0x102f,0x102f,0x102f,0x102f,0x102f,0x102f,\n+0x102f,0x102f,0x102f,0x102f,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,\n+0x1032,0x1032,0x1032,0x1032,0xf5a,0xf5a,0xf5a,0xf5a,0xf6c,0xf75,0xf78,0xf75,0xf78,0xf75,0xf78,0xf75,\n+0xf78,0xf75,0xf78,0xf75,0xf75,0xf75,0xf78,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,\n+0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf75,0xf5d,0xf5a,0xf5a,0xf5a,\n+0xf5a,0xf5a,0xf5a,0xf6f,0xf5a,0xf6f,0xf6c,0xf6c,0xf81,0xf7e,0xf81,0xf81,0xf81,0xf7e,0xf7e,0xf81,\n+0xf7e,0xf81,0xf7e,0xf81,0xf7e,0x1065,0x1065,0x1065,0x11a0,0x105c,0x1065,0x105c,0xf7e,0xf81,0xf7e,0xf7e,\n+0x105c,0x105c,0x105c,0x105c,0x105f,0x1062,0x11a0,0x11a0,0xf84,0xf84,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,\n+0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x106e,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,\n+0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,\n+0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,\n+0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf8a,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,\n+0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,\n+0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0xf99,0x1563,0x1563,0x1563,0x1563,0x1563,\n+0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0x1563,0xf9f,0xf9f,0xf9f,0xf9f,\n+0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,\n+0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xf9f,0xfe7,0xfff,0xff6,0xffc,\n+0xffc,0xfff,0xfff,0xff6,0xff6,0xffc,0xffc,0xffc,0xffc,0xffc,0xfff,0xfff,0xfff,0xfe7,0xfe7,0xfe7,\n+0xfe7,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfff,0xfe7,0xff6,\n+0xff9,0xfe7,0xfe7,0xffc,0xffc,0xffc,0xffc,0xffc,0xffc,0xfea,0xfff,0xffc,0xff3,0xff3,0xff3,0xff3,\n+0xff3,0xff3,0xff3,0xff3,0xff3,0xff3,0x116a,0x116a,0x1167,0x1164,0xff0,0xff0,0x1017,0x1017,0x1017,0x1017,\n+0x12db,0x12db,0x12b1,0x12b1,0x12b7,0x12ae,0x12ae,0x12ae,0x12ae,0x12b1,0x13e3,0x12b7,0x12b1,0x12b7,0x12ae,0x12b7,\n+0x12db,0x12ae,0x12ae,0x12ae,0x12b1,0x12b1,0x12ae,0x12ae,0x12b1,0x12ae,0x12ae,0x12b1,0x1032,0x1032,0x1032,0x1032,\n+0x1032,0x102f,0x102f,0x1032,0x1032,0x1032,0x1032,0x1032,0x1032,0x153c,0x153c,0x153c,0x1140,0x102f,0x102f,0x102f,\n+0x102f,0x12e7,0x12c0,0x12c0,0x12c0,0x12c0,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x1050,0x1050,0x104d,0x1047,\n+0x104d,0x1047,0x104d,0x1047,0x104d,0x1047,0x1044,0x1044,0x1044,0x1044,0x1059,0x1056,0x1044,0x119d,0x143a,0x143d,\n+0x143d,0x143a,0x143a,0x143a,0x143a,0x143a,0x1440,0x1440,0x1557,0x154b,0x154b,0x1548,0x1077,0x106e,0x1077,0x106e,\n+0x1077,0x106e,0x1077,0x106e,0x106b,0x1068,0x1068,0x1077,0x106e,0x1383,0x1380,0x1746,0x1383,0x1380,0x1449,0x1446,\n+0x155a,0x155a,0x1560,0x155a,0x1560,0x155a,0x1560,0x155a,0x1560,0x155a,0x1560,0x155a,0x1077,0x106e,0x1077,0x106e,\n+0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,\n+0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x106e,0x1071,0x106e,0x106e,0x106e,\n+0x106e,0x106e,0x106e,0x106e,0x106e,0x1077,0x106e,0x1077,0x106e,0x1077,0x1077,0x106e,0x107a,0x107a,0x1080,0x1086,\n+0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,\n+0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1086,0x1080,0x107a,0x107a,\n+0x107a,0x107a,0x1080,0x1080,0x107a,0x107a,0x1083,0x1452,0x144f,0x144f,0x1086,0x1086,0x107d,0x107d,0x107d,0x107d,\n+0x107d,0x107d,0x107d,0x107d,0x107d,0x107d,0x1455,0x1455,0x1455,0x1455,0x1455,0x1455,0x109b,0x109b,0x109b,0x109b,\n+0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,\n+0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x109b,0x10a4,0x10a4,0x10a4,0x10a4,\n@@ -3040,21 +3079,19 @@\n-0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10a4,0x10ad,0x10ad,0x10ad,0x10ad,\n-0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10b0,0x10a7,0x10b6,0x10b3,0x10ad,0x10ad,0x10ad,0x10ad,\n-0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,\n-0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x10ad,0x137d,0x137a,0x10c8,0x10c2,\n-0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c5,0x1146,0x10b9,0x10b9,0x10b9,0x10bf,\n-0x144c,0x144c,0x144c,0x144c,0x144c,0x144c,0x144c,0x144c,0x10bc,0x10bc,0x10bf,0x10cb,0x10c8,0x10c2,0x10c8,0x10c2,\n-0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,\n-0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x10c8,0x10c2,0x1563,0x1560,0x1563,0x1560,\n-0x1566,0x1566,0x1743,0x144c,0x10d4,0x10d4,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,\n-0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,0x10d7,\n-0x10d7,0x10d7,0x10d7,0x10d7,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,0x10d4,\n-0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10dd,0x10dd,0x10dd,0x10dd,0x10dd,0x10e0,0x10e0,0x10e0,0x113a,0x10e9,\n-0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,0x10f8,\n-0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,\n-0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,0x10e6,\n-0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,\n-0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,0x1107,\n-0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,\n-0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,0x1119,\n-0x1122,0x1122,0x1122,0x1122,0x1137,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,\n-0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,0x1122,\n+0x10a4,0x10a4,0x10a4,0x10a4,0x10a7,0x10a7,0x10a7,0x10aa,0x10a7,0x10a7,0x10ad,0x10ad,0x10b0,0x10b0,0x10b0,0x10b0,\n+0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,\n+0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b0,0x10b9,0x10b9,0x10b9,0x10b9,\n+0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10bc,0x10b3,0x10c2,0x10bf,0x10b9,0x10b9,0x10b9,0x10b9,\n+0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,\n+0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x10b9,0x1389,0x1386,0x10d4,0x10ce,\n+0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d1,0x1152,0x10c5,0x10c5,0x10c5,0x10cb,\n+0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x10c8,0x10c8,0x10cb,0x10d7,0x10d4,0x10ce,0x10d4,0x10ce,\n+0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,\n+0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x10d4,0x10ce,0x156f,0x156c,0x156f,0x156c,\n+0x1572,0x1572,0x174f,0x1458,0x10e0,0x10e0,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,\n+0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,0x10e3,\n+0x10e3,0x10e3,0x10e3,0x10e3,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,0x10e0,\n+0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10e9,0x10e9,0x10e9,0x10e9,0x10e9,0x10ec,0x10ec,0x10ec,0x1146,0x10f5,\n+0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,0x1104,\n+0x10ef,0x10ef,0x10ef,0x10ef,0x10ef,0x10ef,0x10ef,0x10ef,0x10ef,0x10ef,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,\n+0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,0x10f2,\n+0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,\n+0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,0x1113,\n@@ -3063,8 +3100,10 @@\n-0x1131,0x1131,0x1131,0x1131,0x12d5,0x12d5,0x12d5,0x12d5,0x12d5,0x12d5,0x12d5,0x12d5,0x14d6,0x17c1,0x17c1,0x17c1,\n-0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,\n-0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,\n-0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x11a6,0x119d,0x119d,0x11a0,0x11a0,0x11a6,0x119d,0x119d,0x119d,0x119d,0x119d,\n-0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,\n-0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,0x11ac,\n-0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,\n-0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,0x11c7,\n+0x112e,0x112e,0x112e,0x112e,0x1143,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,\n+0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,0x112e,\n+0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,\n+0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,0x1131,\n+0x113d,0x113d,0x113d,0x113d,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x12e1,0x14e2,0x17cd,0x17cd,0x17cd,\n+0x17cd,0x17cd,0x17cd,0x17cd,0x17cd,0x17cd,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,\n+0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,\n+0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11b2,0x11a9,0x11a9,0x11ac,0x11ac,0x11b2,0x11a9,0x11a9,0x11a9,0x11a9,0x11a9,\n+0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,\n+0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,0x11b8,\n@@ -3072,8 +3111,8 @@\n-0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d0,0x11d6,\n-0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,\n-0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,0x11e2,\n-0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,0x11e8,\n-0x11e8,0x1323,0x11ee,0x1326,0x11ee,0x11ee,0x11ee,0x11ee,0x11eb,0x11eb,0x11eb,0x11ee,0x1746,0x1749,0x196b,0x1968,\n-0x11f1,0x11f1,0x11f1,0x1200,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,\n-0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,0x1206,\n-0x1206,0x1206,0x1206,0x11f4,0x1200,0x1200,0x11f1,0x11f1,0x11f1,0x11f1,0x1200,0x1200,0x11f1,0x11f1,0x1200,0x1200,\n+0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,0x11d3,\n+0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,\n+0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11df,0x11dc,0x11e2,\n+0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,\n+0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,0x11ee,\n+0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,0x11f4,\n+0x11f4,0x132f,0x11fa,0x1332,0x11fa,0x11fa,0x11fa,0x11fa,0x11f7,0x11f7,0x11f7,0x11fa,0x1752,0x1755,0x197a,0x1977,\n+0x11fd,0x11fd,0x11fd,0x120c,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,\n@@ -3081,41 +3120,43 @@\n-0x1215,0x1212,0x1212,0x1212,0x1212,0x1212,0x1212,0x120c,0x120c,0x120c,0x1212,0x120f,0x156c,0x156f,0x1572,0x1572,\n-0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,\n-0x1218,0x1224,0x1218,0x1218,0x1218,0x122d,0x122d,0x1218,0x1218,0x122d,0x1224,0x122d,0x122d,0x1224,0x1218,0x121b,\n-0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,\n-0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,0x1224,\n-0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,\n-0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,0x123f,\n-0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,\n-0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1257,0x1254,0x1254,0x1254,\n-0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,\n-0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,0x1260,\n-0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,\n-0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,0x126f,\n-0x1275,0x1275,0x1284,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,\n-0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x128a,0x1287,0x128a,0x1287,0x1287,0x1287,\n-0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x1287,0x128a,0x1287,0x1287,0x1287,0x1287,\n-0x1284,0x1284,0x1284,0x1278,0x1278,0x1278,0x1278,0x1284,0x1284,0x127e,0x127b,0x1281,0x1281,0x1290,0x128d,0x128d,\n-0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,\n-0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,\n-0x1299,0x1299,0x1299,0x1296,0x1296,0x1296,0x1293,0x1293,0x1293,0x1293,0x1296,0x1293,0x1293,0x1293,0x1299,0x1296,\n-0x1299,0x1296,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,\n-0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1299,0x1296,0x1296,\n-0x1293,0x1293,0x1293,0x1293,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12ba,0x12bd,\n-0x12bd,0x12bd,0x129c,0x1971,0x13cb,0x12c6,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,\n-0x13cb,0x12c6,0x13cb,0x12c6,0x12a5,0x12a5,0x1359,0x12a2,0x1359,0x1359,0x1359,0x1359,0x12a2,0x12a8,0x12cf,0x12a2,\n-0x12a2,0x12a2,0x12a2,0x12a2,0x12a8,0x12ab,0x12cf,0x12cf,0x12ab,0x12cf,0x12a2,0x12ab,0x12ab,0x12ae,0x12cf,0x12a2,\n-0x12a2,0x12cf,0x12a5,0x12a5,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x12b7,0x12b7,\n-0x12b7,0x12b7,0x13e3,0x13c2,0x12c0,0x13e3,0x13e3,0x13e3,0x13e3,0x13e3,0x13e3,0x13e3,0x13e3,0x13e3,0x13e3,0x186f,\n-0x186f,0x186f,0x186f,0x186f,0x13cb,0x13cb,0x12c6,0x13cb,0x13cb,0x13cb,0x12c6,0x13cb,0x13cb,0x13cb,0x12c0,0x12c0,\n-0x12c0,0x12c0,0x12c0,0x13c5,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x13c8,0x12c3,0x13c8,0x13c8,0x13c8,0x13c8,\n-0x13c8,0x13c8,0x13c8,0x12c3,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,\n-0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,0x12ed,\n-0x12ed,0x12ed,0x12ed,0x12ed,0x1377,0x1374,0x1377,0x1374,0x1377,0x1374,0x1377,0x1374,0x1377,0x1374,0x143d,0x1554,\n-0x1554,0x1554,0x17ee,0x195f,0x1554,0x1554,0x173d,0x173d,0x173d,0x1737,0x173d,0x1737,0x1962,0x195f,0x1a1c,0x1a19,\n-0x1a1c,0x1a19,0x1a1c,0x1a19,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,\n-0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,0x139b,\n-0x139b,0x139b,0x139b,0x139b,0x13b0,0x13a1,0x13b0,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,\n-0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,0x13b3,\n-0x13b3,0x13b3,0x13b3,0x13b3,0x13a1,0x13a1,0x13a1,0x13a1,0x13a1,0x13a1,0x13a1,0x13a1,0x13b9,0x13b9,0x13b9,0x13b9,\n-0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,\n-0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13b9,0x13bf,0x13bf,0x13bf,0x13bf,\n+0x1212,0x1212,0x1212,0x1200,0x120c,0x120c,0x11fd,0x11fd,0x11fd,0x11fd,0x120c,0x120c,0x11fd,0x11fd,0x120c,0x120c,\n+0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,\n+0x1221,0x121e,0x121e,0x121e,0x121e,0x121e,0x121e,0x1218,0x1218,0x1218,0x121e,0x121b,0x1578,0x157b,0x157e,0x157e,\n+0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,\n+0x1224,0x1230,0x1224,0x1224,0x1224,0x1239,0x1239,0x1224,0x1224,0x1239,0x1230,0x1239,0x1239,0x1230,0x1224,0x1227,\n+0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,\n+0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,0x1230,\n+0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,\n+0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,0x124b,\n+0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,\n+0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1263,0x1260,0x1260,0x1260,\n+0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,\n+0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,0x126c,\n+0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,\n+0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,0x127b,\n+0x1281,0x1281,0x1290,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,\n+0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1296,0x1293,0x1296,0x1293,0x1293,0x1293,\n+0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1293,0x1296,0x1293,0x1293,0x1293,0x1293,\n+0x1290,0x1290,0x1290,0x1284,0x1284,0x1284,0x1284,0x1290,0x1290,0x128a,0x1287,0x128d,0x128d,0x129c,0x1299,0x1299,\n+0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,\n+0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,\n+0x12a5,0x12a5,0x12a5,0x12a2,0x12a2,0x12a2,0x129f,0x129f,0x129f,0x129f,0x12a2,0x129f,0x129f,0x129f,0x12a5,0x12a2,\n+0x12a5,0x12a2,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,\n+0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x129f,0x12a5,0x12a2,0x12a2,\n+0x129f,0x129f,0x129f,0x129f,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c9,\n+0x12c9,0x12c9,0x12a8,0x1980,0x13d7,0x12d2,0x13d7,0x13d7,0x13d7,0x13d7,0x13d7,0x13d7,0x13d7,0x13d7,0x13d7,0x13d7,\n+0x13d7,0x12d2,0x13d7,0x12d2,0x12b1,0x12b1,0x1365,0x12ae,0x1365,0x1365,0x1365,0x1365,0x12ae,0x12b4,0x12db,0x12ae,\n+0x12ae,0x12ae,0x12ae,0x12ae,0x12b4,0x12b7,0x12db,0x12db,0x12b7,0x12db,0x12ae,0x12b7,0x12b7,0x12ba,0x12db,0x12ae,\n+0x12ae,0x12db,0x12b1,0x12b1,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x12c3,0x12c3,\n+0x12c3,0x12c3,0x13ef,0x13ce,0x12cc,0x13ef,0x13ef,0x13ef,0x13ef,0x13ef,0x13ef,0x13ef,0x13ef,0x13ef,0x13ef,0x187e,\n+0x187e,0x187e,0x187e,0x187e,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x1581,\n+0x1581,0x1ad0,0x1ad0,0x1ad0,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,0x12c6,\n+0x12c6,0x12c6,0x12c6,0x12c6,0x13d7,0x13d7,0x12d2,0x13d7,0x13d7,0x13d7,0x12d2,0x13d7,0x13d7,0x13d7,0x12cc,0x12cc,\n+0x12cc,0x12cc,0x12cc,0x13d1,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x12cf,0x13d4,0x13d4,0x13d4,0x13d4,\n+0x13d4,0x13d4,0x13d4,0x12cf,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x145b,0x145b,\n+0x1a2e,0x1ad0,0x1ad0,0x1ad0,0x13da,0x13da,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x13d4,0x12cf,0x13d4,0x12cf,\n+0x12cf,0x13d4,0x13da,0x12d5,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,\n+0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,0x12f9,\n+0x12f9,0x12f9,0x12f9,0x12f9,0x1383,0x1380,0x1383,0x1380,0x1383,0x1380,0x1383,0x1380,0x1383,0x1380,0x1449,0x1560,\n+0x1560,0x1560,0x17fa,0x196e,0x1560,0x1560,0x1749,0x1749,0x1749,0x1743,0x1749,0x1743,0x1971,0x196e,0x1a2b,0x1a28,\n+0x1a2b,0x1a28,0x1a2b,0x1a28,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,\n+0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,0x13a7,\n+0x13a7,0x13a7,0x13a7,0x13a7,0x13bc,0x13ad,0x13bc,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,\n@@ -3123,43 +3164,7 @@\n-0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13bf,0x13ef,0x13ec,0x1917,0x1917,\n-0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,\n-0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f5,0x13f5,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f5,0x13f8,0x13f8,0x13f8,0x13f5,0x13f8,0x13f5,0x13f8,\n-0x13f5,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13fb,0x13f8,0x13f8,0x13f8,0x13f8,0x13f5,0x13f8,0x13f5,0x13f5,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f5,0x13f5,0x13f5,0x13f5,\n-0x13f5,0x13f5,0x13f5,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,\n-0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x13f5,0x157e,0x157e,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x158a,0x1584,0x1584,0x158a,0x158a,0x158a,0x158a,\n-0x158a,0x158a,0x158a,0x158a,0x158a,0x17c4,0x17c4,0x17c4,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x158a,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x158a,0x17c4,0x17c4,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13fb,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x1584,0x1584,0x158a,0x158a,0x1584,0x158a,0x158a,0x158a,0x1581,0x1581,0x158a,0x158a,\n-0x13f8,0x13f8,0x13fb,0x13fb,0x13fb,0x16f5,0x13f8,0x13fb,0x13f8,0x13f8,0x13fb,0x158d,0x158d,0x158a,0x158a,0x17c4,\n-0x17c4,0x17c4,0x17c4,0x17c4,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,0x158a,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x1584,0x1584,0x158a,0x16f5,0x158a,0x1584,0x158a,0x17c4,0x17c4,0x17c4,0x17c7,0x17c7,0x17c7,0x17c7,0x17c7,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x158a,\n-0x13f8,0x158a,0x13fb,0x13fb,0x13f8,0x13f8,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,\n-0x13fb,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,\n-0x13fb,0x13fb,0x13fb,0x13fb,0x13fb,0x13f8,0x13f8,0x13f8,0x13fb,0x13f8,0x13f8,0x13f8,0x13f8,0x13fb,0x13fb,0x13fb,\n-0x13f8,0x13fb,0x13fb,0x13fb,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13fb,0x13f8,0x13fb,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x16f5,0x13f8,0x13f8,0x13f8,0x13f8,0x158a,0x1584,0x17c4,\n-0x1452,0x1452,0x1452,0x1452,0x157e,0x157e,0x1581,0x1581,0x1581,0x1587,0x158a,0x17c4,0x17c4,0x17c4,0x17c4,0x174c,\n-0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,\n-0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x158a,0x158a,0x1584,0x1584,0x158a,0x158d,0x158d,0x158a,0x158a,\n-0x158a,0x158a,0x1878,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x158a,0x1584,0x158a,0x1584,0x1584,0x1584,0x1584,\n-0x158a,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x158a,0x1584,0x1584,0x1584,0x158a,0x1581,0x1581,0x1581,0x1581,\n-0x1581,0x1581,0x158a,0x13f8,0x13f8,0x13f8,0x13f8,0x13f8,0x14dc,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,\n-0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x14dc,0x13fe,0x13fe,0x13fe,0x14dc,0x13fe,0x14dc,\n-0x13fe,0x14dc,0x13fe,0x14dc,0x13fe,0x13fe,0x13fe,0x14dc,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x14dc,0x14dc,\n-0x13fe,0x13fe,0x13fe,0x13fe,0x14dc,0x13fe,0x14dc,0x14dc,0x13fe,0x13fe,0x13fe,0x13fe,0x14dc,0x13fe,0x13fe,0x13fe,\n-0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x13fe,0x16fb,0x16fb,0x17ca,0x17ca,0x1401,0x1401,0x1401,\n-0x13fe,0x13fe,0x13fe,0x1401,0x1401,0x1401,0x1401,0x1401,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,\n-0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x13bf,0x13bf,0x13bf,0x13bf,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13ad,0x13c5,0x13c5,0x13c5,0x13c5,\n+0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,\n+0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13c5,0x13cb,0x13cb,0x13cb,0x13cb,\n+0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,\n+0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13cb,0x13fb,0x13f8,0x1923,0x1923,\n+0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,\n+0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1404,0x1404,0x1404,0x1404,\n@@ -3167,85 +3172,122 @@\n-0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1407,0x1404,0x1404,0x1404,0x1404,\n-0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1407,0x1407,0x1407,0x1404,\n-0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,\n-0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,\n-0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x17f7,0x17f7,0x17f4,0x174f,0x1458,0x1458,0x1458,0x1458,\n-0x1458,0x1458,0x1455,0x1455,0x1455,0x1455,0x1455,0x1455,0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,\n-0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x1458,0x1596,0x1464,0x1464,0x1464,0x1476,0x1476,0x1476,0x1476,0x1476,\n-0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,\n-0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1476,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,\n-0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,\n-0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1491,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,\n-0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,\n-0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1497,0x1a25,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,\n-0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,\n-0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x149a,0x14a0,0x14a0,0x14ac,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,\n-0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,\n-0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14b2,0x14ac,0x14ac,0x14ac,0x14a0,0x14a0,\n-0x14a0,0x14a0,0x14a0,0x14a0,0x14a0,0x14a0,0x14a0,0x14ac,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,\n-0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,\n-0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x14d3,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,\n-0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,\n-0x1530,0x1530,0x1947,0x1947,0x1947,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,\n-0x1530,0x1a13,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x1530,0x18ae,0x1947,0x1947,0x1947,0x1947,0x1947,\n-0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1584,0x1584,0x158a,0x158a,0x158a,0x1584,0x1584,0x1584,\n-0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x158a,0x158a,0x158a,0x1581,0x1581,0x1581,0x1581,\n-0x1581,0x1581,0x1581,0x1581,0x158a,0x158a,0x158a,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x158a,\n-0x1584,0x1584,0x158a,0x158a,0x158a,0x158a,0x1584,0x1584,0x158d,0x1584,0x1584,0x1584,0x1584,0x16f8,0x16f8,0x1584,\n-0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1875,0x158a,0x1584,0x1584,0x158a,0x1584,0x1584,0x1584,\n-0x1584,0x1584,0x1584,0x1584,0x1584,0x158a,0x158a,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,0x1584,\n-0x158a,0x1584,0x1584,0x1584,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,\n-0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,0x15ae,\n-0x15ae,0x15ae,0x15ae,0x15ae,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,\n-0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,0x15c0,\n-0x15c0,0x15c0,0x15c0,0x15c0,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,\n-0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,0x15c6,\n-0x15c6,0x15c6,0x15c6,0x15c6,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,\n-0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,0x15c9,\n-0x15c9,0x15c9,0x15c9,0x15c9,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,\n-0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,0x1608,\n-0x1608,0x1608,0x1608,0x15f9,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,\n-0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x1611,0x160b,\n-0x1614,0x1614,0x1614,0x1614,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,\n-0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,0x1617,\n-0x1617,0x1617,0x1617,0x1617,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1629,0x1632,0x1632,0x1632,\n-0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,0x1632,\n-0x1632,0x1632,0x1632,0x1632,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,\n-0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,0x163b,\n-0x163b,0x163b,0x163b,0x163b,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,\n-0x164d,0x164d,0x164d,0x164d,0x164a,0x164a,0x164a,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x164a,\n-0x164a,0x163e,0x164a,0x1641,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,\n-0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,0x164d,\n-0x164d,0x164d,0x164d,0x164d,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,\n-0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,0x1671,\n-0x1671,0x166e,0x166e,0x166e,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,\n-0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x167a,0x1680,0x1680,0x1680,0x167d,0x167d,0x167d,\n-0x167a,0x167a,0x167a,0x167a,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,\n-0x168f,0x168f,0x168f,0x168f,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1683,0x1695,0x1695,0x1689,0x1686,0x1686,\n-0x1686,0x1686,0x1686,0x1686,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,\n-0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,\n-0x168f,0x168f,0x168f,0x168f,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,\n-0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x1698,0x1698,0x1698,0x1698,0x1698,\n-0x1698,0x1698,0x1698,0x1698,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,\n-0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,0x169e,\n-0x169e,0x169e,0x169e,0x169e,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,\n-0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,0x16c2,\n-0x16c2,0x16c2,0x16c2,0x16c2,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,\n-0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,0x16cb,\n-0x16cb,0x16cb,0x16cb,0x16cb,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,\n-0x16e3,0x16e3,0x16e3,0x16e3,0x16ce,0x16dd,0x16dd,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16dd,0x16ce,0x16e0,\n-0x16e0,0x16ce,0x16e0,0x16ce,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,\n-0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,0x16e3,\n-0x16e3,0x16e3,0x16e3,0x16e3,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,\n-0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,0x16ec,\n-0x16ec,0x16ec,0x16ec,0x16ec,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,\n-0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,0x16f2,\n-0x16f2,0x16f2,0x16f2,0x16f2,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,\n-0x1734,0x1734,0x1734,0x1734,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,0x1947,\n-0x1947,0x1947,0x1947,0x1a13,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,\n-0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,0x1755,\n-0x1755,0x1755,0x1755,0x1755,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,\n-0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,\n-0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1797,0x1794,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,\n-0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x1791,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,\n-0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,\n-0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179a,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,\n+0x1404,0x1401,0x1401,0x1404,0x1404,0x1404,0x1404,0x1404,0x1401,0x1404,0x1404,0x1404,0x1401,0x1404,0x1401,0x1404,\n+0x1401,0x1404,0x1404,0x1404,0x1404,0x1404,0x1407,0x1404,0x1404,0x1404,0x1404,0x1401,0x1404,0x1401,0x1401,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1401,0x1401,0x1401,0x1401,\n+0x1401,0x1401,0x1401,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,\n+0x1401,0x1401,0x1401,0x1401,0x1401,0x1401,0x158a,0x158a,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1596,0x1590,0x1590,0x1596,0x1596,0x1596,0x1596,\n+0x1596,0x1596,0x1596,0x1596,0x1596,0x17d0,0x17d0,0x17d0,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1596,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1596,0x17d0,0x17d0,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1407,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1590,0x1590,0x1596,0x1596,0x1590,0x1596,0x1596,0x1596,0x158d,0x158d,0x1596,0x1596,\n+0x1404,0x1404,0x1407,0x1407,0x1407,0x1701,0x1404,0x1407,0x1404,0x1404,0x1407,0x1599,0x1599,0x1596,0x1596,0x17d0,\n+0x17d0,0x17d0,0x17d0,0x17d0,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,0x1596,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1590,0x1590,0x1596,0x1701,0x1596,0x1590,0x1596,0x17d0,0x17d0,0x17d0,0x17d3,0x17d3,0x17d3,0x17d3,0x17d3,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1596,\n+0x1404,0x1596,0x1407,0x1407,0x1404,0x1404,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,\n+0x1407,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,0x1407,\n+0x1407,0x1407,0x1407,0x1407,0x1407,0x1404,0x1404,0x1404,0x1407,0x1404,0x1404,0x1404,0x1404,0x1407,0x1407,0x1407,\n+0x1404,0x1407,0x1407,0x1407,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1407,0x1404,0x1407,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1701,0x1404,0x1404,0x1404,0x1404,0x1596,0x1590,0x17d0,\n+0x145e,0x145e,0x145e,0x145e,0x158a,0x158a,0x158d,0x158d,0x158d,0x1593,0x1596,0x17d0,0x17d0,0x17d0,0x17d0,0x1758,\n+0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,\n+0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1596,0x1596,0x1590,0x1590,0x1596,0x1599,0x1599,0x1596,0x1596,\n+0x1596,0x1596,0x1887,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1596,0x1590,0x1596,0x1590,0x1590,0x1590,0x1590,\n+0x1596,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1596,0x1590,0x1590,0x1590,0x1596,0x158d,0x158d,0x158d,0x158d,\n+0x158d,0x158d,0x1596,0x1404,0x1404,0x1404,0x1404,0x1404,0x14e8,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,\n+0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x14e8,0x140a,0x140a,0x140a,0x14e8,0x140a,0x14e8,\n+0x140a,0x14e8,0x140a,0x14e8,0x140a,0x140a,0x140a,0x14e8,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x14e8,0x14e8,\n+0x140a,0x140a,0x140a,0x140a,0x14e8,0x140a,0x14e8,0x14e8,0x140a,0x140a,0x140a,0x140a,0x14e8,0x140a,0x140a,0x140a,\n+0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x1707,0x1707,0x17d6,0x17d6,0x140d,0x140d,0x140d,\n+0x140a,0x140a,0x140a,0x140d,0x140d,0x140d,0x140d,0x140d,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,\n+0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,\n+0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,\n+0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1413,0x1410,0x1410,0x1410,0x1410,\n+0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1413,0x1413,0x1413,0x1410,\n+0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1410,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,\n+0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,\n+0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1803,0x1803,0x1800,0x175b,0x1464,0x1464,0x1464,0x1464,\n+0x1464,0x1464,0x1461,0x1461,0x1461,0x1461,0x1461,0x1461,0x1464,0x1464,0x1464,0x1464,0x1464,0x1464,0x1464,0x1464,\n+0x1464,0x1464,0x1464,0x1464,0x1464,0x1464,0x1464,0x15a2,0x1470,0x1470,0x1470,0x1482,0x1482,0x1482,0x1482,0x1482,\n+0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,\n+0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x1482,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,\n+0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,\n+0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x149d,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,\n+0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,\n+0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x14a3,0x1a34,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,\n+0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,\n+0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14a6,0x14ac,0x14ac,0x14b8,0x14be,0x14be,0x14be,0x14be,0x14be,\n+0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,\n+0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14be,0x14b8,0x14b8,0x14b8,0x14ac,0x14ac,\n+0x14ac,0x14ac,0x14ac,0x14ac,0x14ac,0x14ac,0x14ac,0x14b8,0x14bb,0x14be,0x14c1,0x14c1,0x14be,0x14c4,0x14c4,0x14af,\n+0x14b2,0x1764,0x1767,0x1767,0x1767,0x15ab,0x1adc,0x1ad9,0x14b5,0x14b5,0x14b5,0x14b5,0x14b5,0x14b5,0x14b5,0x14b5,\n+0x14b5,0x14b5,0x15a8,0x176d,0x1770,0x176a,0x1773,0x1773,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,\n+0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,\n+0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x14df,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,\n+0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,\n+0x153c,0x153c,0x1956,0x1956,0x1956,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,\n+0x153c,0x1a22,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x153c,0x18ba,0x1956,0x1956,0x1956,0x1956,0x1956,\n+0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1590,0x1590,0x1596,0x1596,0x1596,0x1590,0x1590,0x1590,\n+0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1596,0x1596,0x1596,0x158d,0x158d,0x158d,0x158d,\n+0x158d,0x158d,0x158d,0x158d,0x1596,0x1596,0x1596,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1596,\n+0x1590,0x1590,0x1596,0x1596,0x1596,0x1596,0x1590,0x1590,0x1599,0x1590,0x1590,0x1590,0x1590,0x1704,0x1704,0x1590,\n+0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1884,0x1596,0x1590,0x1590,0x1596,0x1590,0x1590,0x1590,\n+0x1590,0x1590,0x1590,0x1590,0x1590,0x1596,0x1596,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,0x1590,\n+0x1596,0x1590,0x1590,0x1590,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,\n+0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,0x15ba,\n+0x15ba,0x15ba,0x15ba,0x15ba,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,\n+0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,0x15cc,\n+0x15cc,0x15cc,0x15cc,0x15cc,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,\n+0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,0x15d2,\n+0x15d2,0x15d2,0x15d2,0x15d2,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,\n+0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,0x15d5,\n+0x15d5,0x15d5,0x15d5,0x15d5,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,\n+0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,0x1614,\n+0x1614,0x1614,0x1614,0x1605,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,\n+0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x161d,0x1617,\n+0x1620,0x1620,0x1620,0x1620,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n+0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,0x1623,\n+0x1623,0x1623,0x1623,0x1623,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x1635,0x163e,0x163e,0x163e,\n+0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,0x163e,\n+0x163e,0x163e,0x163e,0x163e,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,\n+0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,0x1647,\n+0x1647,0x1647,0x1647,0x1647,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,\n+0x1659,0x1659,0x1659,0x1659,0x1656,0x1656,0x1656,0x164a,0x164a,0x164a,0x164a,0x164a,0x164a,0x164a,0x164a,0x1656,\n+0x1656,0x164a,0x1656,0x164d,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,\n+0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,0x1659,\n+0x1659,0x1659,0x1659,0x1659,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,\n+0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,0x167d,\n+0x167d,0x167a,0x167a,0x167a,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,\n+0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x1686,0x168c,0x168c,0x168c,0x1689,0x1689,0x1689,\n+0x1686,0x1686,0x1686,0x1686,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,\n+0x169b,0x169b,0x169b,0x169b,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x168f,0x16a1,0x16a1,0x1695,0x1692,0x1692,\n+0x1692,0x1692,0x1692,0x1692,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,\n+0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,0x169b,\n+0x169b,0x169b,0x169b,0x169b,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,\n+0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a7,0x16a4,0x16a4,0x16a4,0x16a4,0x16a4,\n+0x16a4,0x16a4,0x16a4,0x16a4,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,\n+0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,0x16aa,\n+0x16aa,0x16aa,0x16aa,0x16aa,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,\n+0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,0x16ce,\n+0x16ce,0x16ce,0x16ce,0x16ce,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,\n+0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,0x16d7,\n+0x16d7,0x16d7,0x16d7,0x16d7,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,\n+0x16ef,0x16ef,0x16ef,0x16ef,0x16da,0x16e9,0x16e9,0x16da,0x16da,0x16da,0x16da,0x16da,0x16da,0x16e9,0x16da,0x16ec,\n+0x16ec,0x16da,0x16ec,0x16da,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,\n+0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,0x16ef,\n+0x16ef,0x16ef,0x16ef,0x16ef,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,\n+0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,0x16f8,\n+0x16f8,0x16f8,0x16f8,0x16f8,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,\n+0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,0x16fe,\n+0x16fe,0x16fe,0x16fe,0x16fe,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,\n+0x1740,0x1740,0x1740,0x1740,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,0x1956,\n+0x1956,0x1956,0x1956,0x1a22,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,\n+0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,0x1761,\n+0x1761,0x1761,0x1761,0x1761,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,\n@@ -3253,67 +3295,85 @@\n-0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,\n-0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,\n-0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17af,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,\n-0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,\n-0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b2,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,\n-0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,\n-0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b8,0x17b8,0x17b8,0x17b8,0x17b5,\n-0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b5,0x17b8,0x17b8,0x17b8,\n-0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b5,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,\n-0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,\n-0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17b8,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,\n-0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,\n-0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d0,0x17d3,0x17d3,0x17d3,0x17d3,0x17d3,0x1881,0x1881,0x1881,\n-0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,\n-0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x1815,0x1815,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,\n-0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,\n-0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1812,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,\n-0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,\n-0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1815,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,\n-0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1860,0x1860,0x1860,\n-0x184b,0x184b,0x184b,0x184b,0x184b,0x184b,0x184b,0x184b,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,\n-0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,\n-0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1863,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1884,0x1881,\n-0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x1884,0x1920,0x1920,0x1884,0x1884,0x1884,0x1884,0x1884,\n-0x1884,0x1884,0x1881,0x187e,0x1884,0x1884,0x1884,0x1a85,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x187e,0x1881,\n-0x1881,0x1881,0x1881,0x1881,0x191d,0x19fb,0x19fb,0x19fb,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,\n-0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x1881,0x191d,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,\n-0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,\n-0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188a,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,\n-0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,\n-0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x18e4,0x18e4,0x18e4,0x18e4,0x1a37,0x1a37,0x18e7,0x18e7,\n-0x18e7,0x18e7,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18cf,0x18e1,\n-0x18d2,0x18d5,0x18d8,0x18ea,0x18ea,0x1986,0x18db,0x18db,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,\n-0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,\n-0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x18e4,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,\n-0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x18f0,0x18f6,0x18f3,0x18f3,0x18f3,\n-0x18f3,0x1902,0x1908,0x18f3,0x18f3,0x18f3,0x18f3,0x18ff,0x1905,0x18f3,0x18f3,0x18f3,0x18f3,0x18f3,0x18f3,0x18f3,\n-0x18f3,0x18f3,0x18f3,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,\n-0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1905,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,\n-0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,\n-0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x1917,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x191d,0x19fb,\n-0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,\n-0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x19fb,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,\n-0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,\n-0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x1926,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,\n-0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,\n-0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x192c,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,\n-0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,\n-0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x199b,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,\n-0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,\n-0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19b6,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,\n-0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,\n-0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19bc,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,\n-0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,\n-0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19d7,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,\n-0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,\n-0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19da,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,\n-0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,\n-0x19e3,0x19e3,0x19e3,0x19e3,0x19e3,0x19e0,0x19e0,0x19e0,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,\n-0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,\n-0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a3a,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,\n-0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,\n-0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a61,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,\n-0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1aa0,0x1aa0,0x1a6a,0x1aa0,0x1a6a,0x1a6a,0x1a6a,0x1a6a,\n-0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a6a,0x1a70,0x1a70,0x1a70,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,\n-0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,\n-0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0x1a7c,0,0,0,0\n+0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x17a3,0x17a0,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,\n+0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x179d,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,\n+0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,\n+0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a6,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,\n+0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,\n+0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17a9,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,\n+0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,\n+0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17bb,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,\n+0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,\n+0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17be,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,\n+0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,\n+0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c4,0x17c4,0x17c4,0x17c4,0x17c1,\n+0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c1,0x17c4,0x17c4,0x17c4,\n+0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c1,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,\n+0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,\n+0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17c4,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,\n+0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,\n+0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x17dc,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,0x18c6,\n+0x18c6,0x18c6,0x18c6,0x18c6,0x1b3f,0x1a94,0x1a94,0x1a97,0x17df,0x17df,0x17df,0x17df,0x17df,0x17df,0x17df,0x17df,\n+0x17e2,0x1890,0x1890,0x1890,0x1890,0x1890,0x1890,0x192c,0x17df,0x17df,0x17df,0x17df,0x17df,0x188d,0x188d,0x188d,\n+0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,\n+0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x1890,0x188d,\n+0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1890,0x192c,0x192c,0x1890,0x1890,0x1890,0x1890,0x1890,\n+0x1890,0x1890,0x188d,0x180f,0x1890,0x1890,0x1890,0x1a94,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x180f,0x188d,\n+0x188d,0x188d,0x188d,0x188d,0x1929,0x1a0a,0x1a0a,0x1a0a,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,\n+0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x188d,0x1929,0x1824,0x1824,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,\n+0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,\n+0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1821,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,\n+0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,\n+0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1824,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,\n+0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x186f,0x186f,0x186f,\n+0x185a,0x185a,0x185a,0x185a,0x185a,0x185a,0x185a,0x185a,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,\n+0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,\n+0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1872,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,\n+0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,\n+0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1896,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,\n+0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,\n+0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1899,0x1b48,0x1b48,0x1b48,0x1b48,0x1b48,\n+0x1b48,0x1b48,0x1b48,0x1b48,0x1b48,0x1b48,0x1b48,0x1b48,0x18f0,0x18f0,0x18f0,0x18f0,0x1a46,0x1a46,0x18f3,0x18f3,\n+0x18f3,0x18f3,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18db,0x18ed,\n+0x18de,0x18e1,0x18e4,0x18f6,0x18f6,0x1995,0x18e7,0x18e7,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,\n+0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,\n+0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x18f0,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,\n+0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x18fc,0x1902,0x18ff,0x18ff,0x18ff,\n+0x18ff,0x190e,0x1914,0x18ff,0x18ff,0x18ff,0x18ff,0x190b,0x1911,0x18ff,0x18ff,0x18ff,0x18ff,0x18ff,0x18ff,0x18ff,\n+0x18ff,0x18ff,0x18ff,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,\n+0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1911,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,\n+0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,\n+0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1923,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1929,0x1a0a,\n+0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,\n+0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1a0a,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,\n+0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,\n+0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1932,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,\n+0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,\n+0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x1938,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,\n+0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,\n+0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19aa,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,\n+0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,\n+0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19c5,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,\n+0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,\n+0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19cb,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,\n+0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,\n+0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e6,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,\n+0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,\n+0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19e9,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,\n+0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,\n+0x19f2,0x19f2,0x19f2,0x19f2,0x19f2,0x19ef,0x19ef,0x19ef,0x1a0a,0x1a0a,0x1a0a,0x1b3c,0x1b3c,0x1a94,0x1a94,0x1a94,\n+0x1a94,0x1a94,0x1a94,0x1b3c,0x1b3c,0x1b3c,0x1a94,0x1a94,0x1a0d,0x1a0d,0x1a0d,0x1a0d,0x1a0a,0x1a10,0x1a10,0x1a0a,\n+0x1a10,0x1a10,0x1a94,0x1a97,0x1a94,0x1a94,0x1a94,0x1a94,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,\n+0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,\n+0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a49,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,\n+0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,\n+0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a70,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,\n+0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1aaf,0x1aaf,0x1a79,0x1aaf,0x1a79,0x1a79,0x1a79,0x1a79,\n+0x1a79,0x1a79,0x1a79,0x1a79,0x1a79,0x1a7f,0x1a7f,0x1a7f,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,\n+0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,\n+0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1a8b,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,\n+0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,\n+0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b1e,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,\n+0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,\n+0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b2a,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,\n+0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,\n+0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b4e,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,\n+0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,\n+0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0x1b51,0,0,0,0\n@@ -3324,1 +3384,1 @@\n-    propsVectorsTrie_index+4952,\n+    propsVectorsTrie_index+5024,\n@@ -3326,2 +3386,2 @@\n-    4952,\n-    25636,\n+    5024,\n+    26204,\n@@ -3329,1 +3389,1 @@\n-    0x13d8,\n+    0x1420,\n@@ -3333,1 +3393,1 @@\n-    0x7778,\n+    0x79f8,\n@@ -3337,1 +3397,1 @@\n-static const uint32_t propsVectors[6822]={\n+static const uint32_t propsVectors[6999]={\n@@ -3345,420 +3405,431 @@\n-0,0,0x3c67,0,0,0x3e67,0,0,0x4067,0,0,0x4167,0,0,0x4367,0,\n-0,0x4467,0,0,0x4867,0,0,0x4967,0,0,0x4a67,0,0,0x5067,0,0,\n-0x5167,0,0,0x5467,0,0,0x5567,0,0,0x5667,0x80000,0x20,0x5767,0,0,0x5867,\n-0,0,0x5967,0,0,0x5b67,0,0,0x5c67,0,0,0x5d67,0,0,0x6067,0x80000,\n-0x20,0x6267,0,0,0x6367,0,0,0x6467,0,0,0x6567,0,0,0x6f67,0,0,\n-0x7067,0,0,0x7367,0x20000000,0,0x7567,0,0,0x7667,0,0,0x7767,0,0,0x7867,\n-0,0,0x7a67,0,0,0x7b67,0,0,0x7c67,0,0,0x7e67,0,0,0x7f67,0,\n-0,0x8167,0,0,0x8267,0,0,0x8367,0,0,0x8467,0,0,0x8567,0,0,\n-0x8667,0,0,0x8767,0,0,0x8867,0,0,0x8967,0,0,0x8b67,0,0,0x8c67,\n-0,0,0x8e67,0x20000000,0,0x8f67,0,0,0x9067,0,0,0x9167,0,0,0x9267,0,\n-0,0x9367,0,0,0x9567,0,0,0x9667,0,0,0x9767,0,0,0x9867,0,0,\n-0x9967,0,0,0x9a67,0,0,0x9c67,0,0,0x9f67,0,0,0xa167,0,0,0xa367,\n-0,0,0xa467,0,0,0xa567,0,0,0xa667,0,0,0xa767,0,0,0xa867,0,\n-0,0xa967,0,0,0xaa67,0,0x4e00000,0xab67,0,0x4e00000,0xac67,0,0,0xad67,0,0,\n-0xae67,0,0,0xaf67,0,0,0xb167,0,0,0xb267,0,0,0xb467,0,0,0xb567,\n-0,0,0xb767,0,0,0xb867,0,0,0xb967,0,0,0xba67,0,0,0xbc67,0,\n-0,0xbd67,0,0,0xbe67,0,0,0xbf67,0,0,0xc067,0,0,0xc167,0,0,\n-0xc267,0,0,0xc367,0,0x4e00000,0xc467,0,0x4e00000,0xc667,0,0,0xc767,0,0,0xc867,\n-0,0,0xc967,0,0,0xca67,0,0,0xcc67,0,0x4e00000,0xcf67,0,0x4e00000,0xd067,0,\n-0x4e00000,0xd267,0,0,0xd367,0,0,0xd467,0,0,0xd567,0,0,0xd667,0,0,\n-0xd867,0,0,0xd967,0,0,0xda67,0,0,0xdb67,0,0,0xdc67,0,0,0xdd67,\n-0,0,0xde67,0,0,0xdf67,0,0,0xe067,0,0,0xe167,0,0,0xe267,0,\n-0,0xe367,0,0x4e00000,0xe467,0,0,0xe567,0,0,0xe667,0,0,0xe767,0,0,\n-0xe867,0,0,0xe967,0,0,0xea67,0,0,0xeb67,0,0,0xec67,0,0,0xed67,\n-0,0,0xee67,0,0,0xef67,0,0,0xf167,0,0,0xf367,0,0,0xf567,0,\n-0,0xf667,0,0,0xf767,0,0,0xf867,0,0,0xf967,0,0,0xfa67,0,0x4e00000,\n-0xfb67,0,0,0xfc67,0,0,0xfd67,0,0,0xfe67,0,0,0x10167,0,0,0x10267,\n-0,0,0x10367,0,0,0x10467,0,0,0x10567,0,0x4e00000,0x10667,0,0,0x10767,0,\n-0,0x10867,0,0,0x10967,0,0,0x10a67,0,0,0x10b67,0,0,0x10c67,0,0,\n-0x10d67,0,0,0x10e67,0,0,0x10f67,0,0,0x11067,0,0,0x11167,0,0,0x11367,\n-0,0,0x11467,0,0,0x11567,0,0,0x11667,0,0,0x11767,0,0,0x11867,0,\n-0,0x11967,0,0x4e00000,0x11a67,0,0,0x11b67,0,0,0x11c67,0,0,0x11d67,0,0,\n-0x11e67,0,0,0x11f67,0,0,0x12067,0,0,0x12167,0,0,0x12267,0,0,0x12367,\n-0,0,0x12467,0,0,0x12567,0,0,0x12667,0,0,0x12767,0,0,0x12867,0,\n-0,0x12967,0,0,0x12a67,0,0x4e00000,0x12b67,0,0,0x12c67,0,0,0xa0067,0,0xe00000,\n-0xa4667,0,0xe00000,0xa4767,0,0xe00000,0xa4f67,0,0xe00000,0xa5e67,0,0xe00000,0xa5f67,0,0xe00000,0xac567,\n-0,0xe00000,0xad167,0,0xe00000,0xb0067,0,0xe00000,0xb1267,0,0xe00000,0x11000100,0,0x900020,0x11000100,0x40000001,\n-0x440020,0x11000100,0x40000001,0x643020,0x11000100,0x40000001,0xa5a040,0x11000100,0x40000001,0x116a8a0,0x11000200,0,0x900020,0x11000200,0x4000001,0xc4000b,\n-0x11000200,0x7c00100,0x220402,0x11000200,0x24000000,0x14200000,0x11000200,0x24000008,0x1710000,0x11000200,0x40000001,0x1d3b020,0x11000219,0x7c00100,0x220401,0x11000219,\n-0x7c00100,0x250401,0x11000319,0x7c00100,0x220401,0x11000319,0x7c00100,0x220402,0x11000319,0x7c00100,0x250400,0x11000319,0x7c00100,0x250401,0x11000419,0x7c00100,\n-0x220400,0x11000419,0x7c00100,0x220401,0x11000419,0x7c00100,0x220402,0x11000419,0x7c00100,0x230400,0x11000419,0x7c00100,0x250400,0x11000419,0x7c00100,0x250401,\n-0x11000419,0x7c00100,0x250402,0x11000519,0x7c00100,0x220400,0x11000519,0x7c00100,0x230400,0x11000600,0x4000400,0x200000,0x11000600,0x4000400,0x200002,0x11000600,\n-0x4000400,0x200400,0x11000600,0x7c00500,0x220400,0x11000600,0x7c00500,0x230400,0x11000600,0x7c00500,0x530400,0x11000600,0x7c00d00,0x230400,0x11000619,0x7c00500,\n-0x22040f,0x11000800,0x4000010,0x1001401,0x11000800,0x4000400,0x200001,0x11000800,0x6800010,0x201001,0x11000800,0x7c00500,0x230401,0x11000807,0x7c00100,0x220400,\n-0x11000807,0x7c00100,0x250400,0x1100080e,0x4000400,0x200000,0x1100080e,0x4000400,0x200002,0x1100080e,0x7000500,0x220402,0x1100080e,0x7c00100,0x220400,0x1100080e,\n-0x7c00100,0x220401,0x1100080e,0x7c00100,0x220402,0x1100080e,0x7c00100,0x250400,0x1100080e,0x7c00100,0x250401,0x1100080e,0x7c00120,0x220402,0x1100080e,0x7c00120,\n-0x250402,0x11000908,0x4000000,0x200000,0x11000908,0x7c00100,0x220400,0x11000908,0x7c00100,0x220401,0x11000908,0x7c00100,0x250400,0x11000908,0x7c00100,0x250401,\n-0x11000a03,0x4000000,0x200000,0x11000a03,0x4000000,0x200400,0x11000a03,0x4000000,0x270000,0x11000a03,0x7c00100,0x220400,0x11000a03,0x7c00100,0x220402,0x11000a03,\n-0x7c00100,0x250400,0x11000a03,0x7c00500,0x230400,0x11000b13,0x2802500,0x962460,0x11000b13,0x4000000,0x200000,0x11000b13,0x4000000,0x201000,0x11000b13,0x4000000,\n-0x230400,0x11000b13,0x4000002,0x400000,0x11000b13,0x4000010,0x200000,0x11000b13,0x7c00100,0x2633800,0x11000c00,0x80000000,0x218960,0x11000c02,0x2802100,0x962460,\n-0x11000c02,0x2802400,0x962460,0x11000c02,0x4000000,0x200000,0x11000c02,0x4000000,0x1329400,0x11000c02,0x4000000,0x1329800,0x11000c02,0x4000000,0x1500000,0x11000c02,\n-0x6800000,0x1329800,0x11000c02,0x7c00100,0x230400,0x11000c02,0x7c00100,0x230401,0x11000c02,0x7c00100,0x230402,0x11000c02,0x7c00500,0x230400,0x11000c02,0x7d00100,\n-0x230400,0x11000f01,0x2802400,0x962460,0x11000f0a,0x2802100,0x962460,0x11000f0a,0x2802400,0x962460,0x11000f0a,0x2806400,0x962460,0x11000f0a,0x4000000,0x200000,\n-0x11000f0a,0x6800100,0x962540,0x11000f0a,0x7c00100,0x230400,0x11000f0a,0x7c00100,0x230401,0x11001004,0x2802100,0x962460,0x11001004,0x2802400,0x962460,0x11001004,\n-0x2806400,0x962460,0x11001004,0x4000000,0x200000,0x11001004,0x4000000,0x1500000,0x11001004,0x6800100,0x962540,0x11001004,0x6800100,0x962541,0x11001004,0x7c00100,\n-0x230400,0x11001004,0x7c00100,0x230401,0x11001110,0x2802100,0x962460,0x11001110,0x2802400,0x962460,0x11001110,0x2806400,0x962460,0x11001110,0x6800100,0x962540,\n-0x11001110,0x7c00100,0x230400,0x11001110,0x7c00100,0x230401,0x1100120f,0x2802100,0x962460,0x1100120f,0x2802400,0x962460,0x1100120f,0x2806400,0x962460,0x1100120f,\n-0x6800100,0x962540,0x1100120f,0x7c00100,0x230400,0x1100131f,0x2802100,0x962460,0x1100131f,0x2802400,0x962460,0x1100131f,0x2806400,0x962460,0x1100131f,0x4000000,\n-0x200000,0x1100131f,0x6800000,0x1329800,0x1100131f,0x6800100,0x962540,0x1100131f,0x6800100,0x962541,0x1100131f,0x7c00100,0x230400,0x1100131f,0x7c00100,0x230401,\n-0x11001423,0x2802100,0x962460,0x11001423,0x2806400,0x962460,0x11001423,0x6800100,0x962540,0x11001423,0x6800100,0x962541,0x11001423,0x7c00100,0x230400,0x11001423,\n-0x7c00100,0x230401,0x11001524,0x2802100,0x962460,0x11001524,0x2802100,0x962461,0x11001524,0x2806400,0x962460,0x11001524,0x6800000,0x1329800,0x11001524,0x6800100,\n-0x962540,0x11001524,0x7c00100,0x230400,0x11001615,0x2802100,0x962460,0x11001615,0x2806400,0x962460,0x11001615,0x6800100,0x962540,0x11001615,0x6800100,0x962541,\n-0x11001615,0x7c00100,0x230400,0x1100171a,0x2802100,0x962460,0x1100171a,0x2806400,0x962460,0x1100171a,0x6800000,0x1329800,0x1100171a,0x6800100,0x962540,0x1100171a,\n-0x6800100,0x962541,0x1100171a,0x7c00100,0x230400,0x11001900,0x4000000,0x1600000,0x11001926,0x2802100,0x1862460,0x11001926,0x2802400,0x1862460,0x11001926,0x2806100,\n-0x1862460,0x11001926,0x4000000,0x200000,0x11001926,0x4000010,0x400000,0x11001926,0x6800000,0x1329800,0x11001926,0x7800100,0x1830142,0x11001926,0x7c00100,0x1830000,\n-0x11001926,0x7c00900,0x1830000,0x11001926,0x7e00100,0x1830000,0x11001a18,0x2802100,0x1862460,0x11001a18,0x2802400,0x1862460,0x11001a18,0x6800000,0x1329800,0x11001a18,\n-0x7800100,0x1830142,0x11001a18,0x7c00100,0x1830000,0x11001a18,0x7c00100,0x1830002,0x11001a18,0x7c00900,0x1830000,0x11001a18,0x7e00100,0x1830000,0x11001d0c,0x7c00100,\n-0x230400,0x11001d0c,0x7c00100,0x250400,0x11001e12,0x7c00100,0x2230500,0x11001e12,0x7c00100,0x2330520,0x11001e12,0x7c80100,0x2330520,0x11002619,0x7c00100,0x220401,\n-0x11002619,0x7c00100,0x220402,0x11002619,0x7c00100,0x250401,0x1100270e,0x4000400,0x200001,0x1100270e,0x4000400,0x200002,0x1100270e,0x4000400,0x500001,0x1100270e,\n-0x7c00100,0x220401,0x1100270e,0x7c00100,0x250401,0x11002800,0x80000,0x918820,0x11002800,0x80000,0x1c18020,0x11002800,0x180000,0x918820,0x11002800,0x4000001,\n-0x445801,0x11002800,0x4000001,0x445802,0x11002800,0x4000001,0xc4000b,0x11002800,0x6800000,0x201c00,0x11002800,0x6800020,0x201c00,0x11002800,0x24000000,0x200000,\n-0x11002800,0x24000000,0x200002,0x11002800,0x24000000,0x810000,0x11002800,0x24000000,0x1410000,0x11002800,0x24000000,0x1500000,0x11002800,0x24000000,0x1500002,0x11002800,\n-0x24000002,0x400000,0x11002800,0x24000006,0xc0000b,0x11002800,0x24000008,0x1410000,0x11002800,0x24000008,0x1710000,0x11002800,0x24000020,0x1001400,0x11002800,0x24000020,\n-0x1500002,0x11002800,0x2c000010,0x1248000,0x11002800,0x2c000010,0x15248002,0x11002800,0x40000001,0x63b020,0x11002800,0x40080000,0x918820,0x11002801,0x80000,0xaa65620,\n-0x11002801,0x82000,0x962460,0x11002900,0x4000000,0x20000e,0x11002900,0x4000000,0x20000f,0x11002900,0x4000020,0x20000e,0x11002900,0x4000020,0x20000f,0x11002900,\n-0x4000020,0x81000e,0x11002900,0x4000020,0x81000f,0x11002900,0x4000020,0x141000e,0x11002900,0x4000020,0x141000f,0x11002900,0x4000022,0x20000e,0x11002900,0x4000022,\n-0x20000f,0x11002a00,0x4000000,0x1500000,0x11002a00,0x4000000,0x1600000,0x11002a00,0x4000000,0x1600002,0x11002b01,0x2000,0x962460,0x11002b01,0x2802020,0x962460,\n-0x11002c00,0x4000000,0x200000,0x11002c00,0x4000000,0x200002,0x11002c00,0x4000000,0x20000f,0x11002c00,0x4000020,0x200000,0x11002c00,0x7c00000,0x200000,0x11002c00,\n-0x7c00020,0x200000,0x11002c00,0x7c00120,0x220405,0x11002c00,0x7c00120,0x230402,0x11002c00,0x7c00120,0x250402,0x11002c00,0x7c00120,0x250405,0x11002c19,0x7c00100,\n-0x250400,0x11002c19,0x7c00100,0x250401,0x11002d00,0x4000000,0x100006,0x11002d00,0x4000000,0x200006,0x11002d19,0x7c00100,0x220402,0x11002d19,0x7c00100,0x230400,\n-0x11002d19,0x7c00100,0x250402,0x11002e00,0x24000000,0x200000,0x11002e00,0x24000020,0x200000,0x11002e00,0x24000020,0x200001,0x11002e00,0x24000020,0x14200000,0x11002f00,\n-0x24000020,0x200000,0x11002f00,0x24000020,0x200001,0x11002f00,0x24000020,0x200002,0x11002f00,0x24000020,0xf00000,0x11002f00,0x24000020,0x1600000,0x11002f00,0x24000022,\n-0x1600000,0x11003000,0x24000000,0x200000,0x11003000,0x24000000,0x14200000,0x11003000,0x24000020,0x200000,0x11003000,0x24000020,0x810000,0x11003000,0x24000020,0x1410000,\n-0x11003100,0x24000000,0x200000,0x11003200,0x24000000,0x200000,0x11003300,0x4000000,0x100003,0x11003400,0x24000000,0x100000,0x11003400,0x24000000,0x200000,0x11003500,\n-0x24000000,0x200000,0x11003600,0x24000000,0x200000,0x11003600,0x24000000,0x14200000,0x11003600,0x24000020,0x200000,0x11003700,0x24000000,0x200000,0x11003700,0x24000000,\n-0x4200000,0x11003700,0x24000000,0x4e00000,0x11003700,0x24000000,0x14200000,0x11003700,0x24000000,0x14e00000,0x11003700,0x24000000,0x96800000,0x11003700,0x24000020,0x4200000,\n-0x11003800,0x4000000,0x100000,0x11003800,0x24000000,0x200000,0x11003800,0x24000000,0xb00000,0x11003800,0x24000000,0x1710000,0x11003800,0x24000000,0x4200000,0x11003800,\n-0x24000000,0x4e00000,0x11003800,0x24000000,0x14200000,0x11003800,0x24000000,0x14b00000,0x11003800,0x24000000,0x14e00000,0x11003800,0x24000000,0x96800000,0x11005003,0x7c00100,\n-0x220402,0x11005013,0x2802500,0x962460,0x11005013,0x4000020,0x200005,0x11005013,0x7c00100,0x2633801,0x11005013,0x7c00100,0x2633802,0x11005013,0x7c00100,0x2633805,\n-0x11005019,0x7c00100,0x220402,0x11005100,0x24000000,0x810000,0x11005100,0x24000000,0x1410000,0x11005102,0x7000100,0x230408,0x11005102,0x7c00100,0x230404,0x11005102,\n-0x7c00100,0x230407,0x11005102,0x7c00100,0x230408,0x11005102,0x7c00100,0x230409,0x11005201,0x2802400,0x962460,0x11005500,0x80000,0x1e18820,0x11005502,0x7000100,\n-0x230408,0x11005502,0x7c00100,0x230404,0x11005502,0x7c00100,0x230407,0x11005502,0x7c00100,0x230408,0x11005502,0x7c00100,0x230409,0x11005667,0x1000,0,\n-0x11020200,0x80004,0x418820,0x11020200,0x4000000,0x100006,0x11020200,0x4000000,0x10000f,0x11020200,0x4000400,0x100002,0x11020200,0x4000400,0x500002,0x11020200,\n-0x6800c00,0x101000,0x11020200,0x24000000,0x100000,0x11020200,0x24000000,0x1400000,0x11020200,0x24000000,0x1500000,0x11020200,0x24000000,0x1600000,0x11020200,0x24000000,\n-0x14200000,0x11020200,0x24000020,0x100000,0x11020200,0x24000020,0x1600000,0x11020219,0x7c00100,0x12040f,0x11020219,0x7c00100,0x220400,0x11020219,0x7c00100,0x220401,\n-0x11020219,0x7c00100,0x250400,0x11020319,0x7c00100,0x220400,0x11020319,0x7c00100,0x220401,0x11020319,0x7c00100,0x220402,0x11020319,0x7c00100,0x250400,0x11020319,\n-0x7c00100,0x250402,0x11020319,0x7d00100,0x220402,0x11020419,0x7c00100,0x220401,0x11020519,0x7c00100,0x220400,0x11020600,0x4000400,0x100002,0x11020600,0x4000400,\n-0x200400,0x11020600,0x7c00500,0x130400,0x11020600,0x7c00d00,0x130400,0x11020701,0x2802400,0x962460,0x11020701,0x2802400,0x962461,0x11020701,0x2802400,0xc62460,\n-0x1102080e,0x7c00100,0x220400,0x1102080e,0x7c00100,0x250400,0x11020908,0x7c00100,0x220400,0x11020908,0x7c00100,0x220401,0x11020908,0x7c00100,0x250400,0x11020908,\n-0x7c00100,0x250401,0x11022800,0x24000000,0x100000,0x11022800,0x24000000,0x200000,0x11022800,0x24000000,0x200002,0x11022800,0x24000000,0x401000,0x11022800,0x24000000,\n-0xf00002,0x11022800,0x24000000,0xf0ac02,0x11022800,0x24000000,0x1500000,0x11022800,0x24000002,0x100000,0x11022800,0x24000002,0x370000,0x11022800,0x24000002,0x470000,\n-0x11022800,0x24000006,0x400000,0x11022800,0x24000008,0x1710000,0x11022800,0x24000008,0x1712c00,0x11022800,0x24000020,0x100000,0x11022800,0x24000020,0x1500000,0x11022800,\n-0x24000020,0x1500002,0x11022900,0x4000000,0x10000e,0x11022900,0x4000000,0x10000f,0x11022919,0x7c00100,0x12040f,0x11022c00,0x4000000,0x100002,0x11022c00,0x4000000,\n-0x1500002,0x11022c00,0x4000000,0x1600002,0x11022c00,0x4000000,0x1410000f,0x11022c00,0x7c00120,0x120405,0x11022c0e,0x7c00100,0x250401,0x11022c19,0x7c00100,0x150401,\n-0x11022d00,0x4000000,0x100006,0x11022d00,0x4000000,0x200006,0x11022d19,0x7c00100,0x120402,0x11022d19,0x7c00100,0x150402,0x11022e00,0x24000000,0x200000,0x11022e00,\n-0x24000020,0x100000,0x11022e00,0x24000020,0x14100000,0x11022f00,0x24000020,0x100000,0x11022f00,0x24000020,0x100001,0x11022f00,0x24000020,0x100002,0x11023000,0x24000000,\n-0x100000,0x11023300,0x4000000,0x100002,0x11023300,0x4000000,0x100003,0x11023300,0x4000100,0x120403,0x11023300,0x4000100,0x150403,0x11023300,0x4000100,0x14150403,\n-0x11023400,0x24000000,0x100000,0x11023500,0x24000000,0x100000,0x11023600,0x24000000,0x100000,0x11023600,0x24000020,0x100000,0x11023600,0x24000020,0x14100000,0x11023700,\n-0x24000000,0x4100000,0x11023700,0x24000000,0x4e00000,0x11023700,0x24000000,0x14100000,0x11023700,0x24000000,0x14e00000,0x11023700,0x24000020,0x100000,0x11023700,0x24000020,\n-0x4100000,0x11023700,0x24000020,0x14100000,0x11023800,0x4000000,0x100000,0x11023800,0x24000000,0x200000,0x11024e67,0,0,0x11025600,0x4000000,0x100000,\n-0x11042a00,0x4000000,0x1600000,0x11045700,0x4000000,0x20000a,0x11045700,0x4000020,0x20000a,0x11045712,0x7c00100,0xe3040a,0x11045712,0x7c80100,0xe3040a,0x11045716,\n-0x7c00100,0xe30c0a,0x11045716,0x7c00100,0x2530c0a,0x11063d00,0x4000001,0x445811,0x11065700,0x4000000,0x810011,0x11065700,0x4000000,0xe00011,0x11065700,0x4000000,\n-0x1410011,0x11065700,0x4000000,0x1500011,0x11065700,0x4000000,0x1600011,0x11065700,0x4000006,0xe70011,0x11065700,0x4000008,0xe00011,0x11065700,0x4000008,0xe02c11,\n-0x11065700,0x4000010,0x871411,0x11065700,0x4000010,0x1201411,0x11065700,0x4000010,0x1271011,0x11065700,0x4000020,0xe00011,0x11065700,0x4000400,0xe00011,0x11065700,\n-0x4000420,0xe00011,0x11065700,0x6800000,0xe01c11,0x11065700,0x6800040,0xe29811,0x11065700,0xc000010,0x80ac11,0x11065700,0xc000010,0xb48011,0x11065719,0x7c00100,\n-0xe20411,0x11065719,0x7c00100,0xe50411,0x11065719,0x7c00140,0xe20411,0x11065719,0x7c00140,0xe50411,0x11080100,0x6800000,0x201c00,0x11080100,0x68000c0,0x19329800,\n-0x11080100,0x24000000,0x200000,0x11080100,0x24000000,0x810000,0x11080100,0x24000000,0x1410000,0x11080100,0x24000000,0x1500000,0x11080100,0x24000000,0x1600000,0x11080100,\n-0x24000000,0x1b00000,0x11080100,0x24000000,0x2410000,0x11080100,0x24000000,0x18200000,0x11080100,0x24000006,0xd70000,0x11080100,0x24000008,0x1713c00,0x11080100,0x24000008,\n-0x1714000,0x11080100,0x24000010,0x1001400,0x11080100,0x24000010,0x1071000,0x11080100,0x24000010,0x1071400,0x11080100,0x24000020,0x200000,0x11080100,0x24000020,0x400000,\n-0x11080100,0x24000020,0x1600000,0x11080100,0x24000400,0x200000,0x11080100,0x24000420,0x200000,0x11080100,0x2c000010,0xb48000,0x11080100,0x2c000010,0x100ac00,0x11080100,\n-0x44000001,0x1a45800,0x11080119,0x7c00100,0x220400,0x11080119,0x7c00100,0x250400,0x11080119,0x7c001c0,0x220400,0x11080119,0x7c001c0,0x250400,0x11080200,0x4000400,\n-0x200002,0x11080200,0x24000000,0x200000,0x11080200,0x24000000,0x1500000,0x11080200,0x24000000,0x1600000,0x11080200,0x24000020,0x200000,0x110a1e12,0x7c00100,0x2130480,\n-0x110a1e12,0x7c80100,0x2130480,0x110a3000,0x24000000,0x34e00000,0x110a3000,0x24100000,0x810001,0x110a3000,0x24100000,0x1410001,0x110a3700,0x24000000,0x34200000,0x110a3d00,\n-0x4000000,0xe00000,0x110a3d00,0x4000000,0xe00002,0x110a3d00,0x24000000,0xe00000,0x110a3d11,0x7c00300,0xe30000,0x110a3d11,0x7c00900,0x1230400,0x110a3d12,0x2802400,\n-0x962460,0x110a3e14,0x7c00100,0xe30000,0x110a3e14,0x7c00100,0xe30001,0x110a3e14,0x7c00100,0x2530000,0x110a3e14,0x7c00900,0x1230000,0x110a3e14,0x7c00900,0x1230001,\n-0x110a3f16,0x7c00100,0xe30c00,0x110a3f16,0x7c00100,0xe30c01,0x110a3f16,0x7c00100,0x2530c00,0x110a3f16,0x7c00900,0x1230c00,0x110a3f16,0x7c00900,0x1230c01,0x110a4005,\n-0x7c00100,0xe30400,0x110a4112,0x7c00100,0xe30402,0x110a4112,0x7c80100,0xe30402,0x110a4400,0x4000000,0xe00000,0x110a4412,0x4000000,0xe00002,0x110a4412,0x4000000,\n-0xe00003,0x110a4416,0x4000000,0xe00c03,0x110a4500,0x4000000,0xe0000d,0x110a4516,0x4000000,0xe00c0d,0x110a4711,0x7c40300,0xe30000,0x110a4f11,0x7c00300,0xe30001,\n-0x110a4f11,0x7c40300,0xe30000,0x110a5300,0x4000000,0x810010,0x110a5300,0x4000000,0xe00002,0x110a5300,0x4000000,0xe00010,0x110a5300,0x4000000,0x1410010,0x110a5300,\n-0x4000002,0xe70010,0x110a5300,0x4000008,0x810010,0x110a5300,0x4000008,0x1410010,0x110a5300,0x6800000,0xe01c02,0x110a5300,0x6800000,0xe01c10,0x110a5400,0x4000000,\n-0x81000c,0x110a5400,0x4000000,0xe0000c,0x110a5400,0x4000000,0x141000c,0x110a5400,0x4000000,0x150000c,0x110a5400,0x4000000,0x160000c,0x110a5400,0x4000002,0xe7000c,\n-0x110a5400,0x4000010,0x87140c,0x110a5400,0x4000010,0xe7000c,0x110a5400,0x4000010,0x120140c,0x110a5400,0x4000010,0x127100c,0x110a5400,0x4000020,0xe0000c,0x110a5400,\n-0x4000026,0xe7000c,0x110a5400,0xc000010,0x80ac0c,0x110a5400,0xc000010,0xb4800c,0x11400a0c,0xc000010,0x1049400,0x11400c0e,0x4000010,0xb00000,0x11400c0e,0x4000010,\n-0x1071400,0x11400c0e,0xc000010,0xb48000,0x11400c17,0x7c00900,0x230400,0x11400f42,0xc000010,0x448000,0x11400f56,0xc000010,0x448000,0x11401d8b,0x4000000,0x200000,\n-0x11403dbf,0x4000000,0xe00000,0x114457b4,0x4000004,0x120000a,0x114457b4,0x4000008,0x81000a,0x114457b4,0x4000008,0x141000a,0x114457b4,0x4000010,0x87000a,0x114457b4,\n-0xc000010,0x84800a,0x114457bd,0x3802500,0x126246a,0x114457bd,0x7c00d00,0x2530c0a,0x114a3db4,0x24000000,0x810000,0x114a3db4,0x24000000,0x1410000,0x114a3db4,0x24000008,\n-0x810000,0x114a3db4,0x24000008,0x1410000,0x114a3db4,0x24000010,0x870000,0x114a3db4,0x2c000010,0x848000,0x114a3dba,0x4000000,0xe00000,0x114a3dba,0x24000000,0xe00000,\n-0x114a3dba,0x24000002,0x1200000,0x114a3dba,0x24000002,0x14e00000,0x114a3dba,0x24000008,0x810000,0x114a3dba,0x24000008,0x1410000,0x114a3dbd,0x7c00900,0x930c00,0x114a3dbd,\n-0x7c00900,0xe30c00,0x114a3dbf,0x7c00300,0xe30000,0x114a3ebd,0x7000400,0x1200c02,0x114a3fb4,0x4000004,0x1200000,0x114a3fbd,0x7c00d00,0x2530c00,0x114a42bf,0x4000000,\n-0xe00000,0x114a42bf,0x4000000,0xe0000f,0x114a44bf,0x4000000,0xe00002,0x114a44bf,0x4000000,0xe00003,0x114a44bf,0x4000000,0x14e00003,0x114a45bf,0x4000000,0xe00002,\n-0x114a45bf,0x4000000,0xe0000d,0x1180090a,0x2802400,0x962460,0x11800c1f,0x2802100,0x962460,0x11800c1f,0x2802500,0x962460,0x11800f29,0x2802400,0x962460,0x11800f36,\n-0x2802400,0x962460,0x11820700,0x2802400,0x962460,0x11820700,0x2802500,0x962460,0x118a3dc0,0x2802400,0x962460,0x118a3ebd,0x2802400,0x962460,0x11c00904,0x2802400,\n-0x962460,0x11c00908,0x2802400,0x962460,0x11c00c23,0x6800000,0x1329800,0x11c00c27,0xc000010,0xb48000,0x11c00f6f,0x6800000,0x1329800,0x11c01074,0x6800000,0x1329800,\n-0x11c01178,0x6800000,0x1329800,0x11c0127c,0x6800000,0x1329800,0x11c01480,0x4000000,0x200000,0x11c01480,0x6800000,0x1329800,0x11c01684,0x6800000,0x1329800,0x11c05123,\n-0x7c00100,0x230408,0x20000067,0x1000,0,0x20000b13,0x2802400,0x962460,0x20000b13,0x2802500,0x962460,0x20001b27,0x2802100,0x962460,0x20001b27,0x2802100,\n-0x962461,0x20001b27,0x2802400,0x962460,0x20001b27,0x2806400,0x962460,0x20001b27,0x2902100,0x962462,0x20001b27,0x4000000,0x200000,0x20001b27,0x4000000,0x400000,\n-0x20001b27,0x4000000,0x500000,0x20001b27,0x4000000,0x810000,0x20001b27,0x4000000,0xb00000,0x20001b27,0x4000000,0xc0000b,0x20001b27,0x4000000,0x1410000,0x20001b27,\n-0x4000010,0xb00000,0x20001b27,0x4000010,0xc00000,0x20001b27,0x6800000,0x1329800,0x20001b27,0x6800100,0x462540,0x20001b27,0x6800400,0x962540,0x20001b27,0x7c00100,\n-0x230400,0x20001b27,0x7c00100,0x230401,0x20002619,0x7c00100,0x220401,0x20002a00,0x4000000,0x1600000,0x20004b67,0,0x1900000,0x20004c67,0,0x1900000,\n-0x20004d67,0,0x1900000,0x20006d67,0x1000,0,0x20006e67,0x1000,0,0x20026d67,0,0,0x20026e67,0,0,0x200a4a12,\n-0x7c00100,0x1f304c1,0x200a4a12,0x7c00100,0x20304e1,0x21005600,0x4000000,0x700000,0x21022a00,0x4000000,0x1600000,0x30000419,0x7c00100,0x220400,0x30000419,0x7c00100,\n-0x220401,0x30000419,0x7c00100,0x250400,0x30000419,0x7c00100,0x250401,0x30000519,0x7c00100,0x220400,0x30000600,0x4000400,0x200400,0x30000600,0x7c00500,0x230400,\n-0x30000605,0x4000400,0x200000,0x3000080e,0x7c00100,0x220400,0x30000908,0x2000,0x962460,0x30000908,0x7c00100,0x220400,0x30000908,0x7c00100,0x220401,0x30000908,\n-0x7c00100,0x250400,0x30000908,0x7c00100,0x250401,0x30000a03,0x4000006,0x400000,0x30000c02,0x4000000,0x200000,0x30000c02,0x7c00100,0x230400,0x30000d22,0x2802100,\n-0x962460,0x30000d22,0x2802400,0x962460,0x30000d22,0x2802500,0x962460,0x30000d22,0x4000000,0x200000,0x30000d22,0x4000010,0x200000,0x30000d22,0x7c00100,0x230400,\n-0x30000d22,0xc000010,0x248000,0x30000d22,0x80000000,0x218960,0x30000e25,0x2802500,0x962460,0x30000e25,0x7c00100,0x230400,0x30001821,0x2802100,0x962460,0x30001821,\n-0x2806400,0x962460,0x30001821,0x4000000,0x200000,0x30001821,0x6800100,0x962540,0x30001821,0x6800100,0x962541,0x30001821,0x7c00100,0x230400,0x30001b27,0x2802100,\n-0x962460,0x30001b27,0x2802400,0x962460,0x30001b27,0x4000000,0x200000,0x30001b27,0x4000000,0x400000,0x30001b27,0x7c00100,0x230400,0x30001c1c,0x2802100,0x1862460,\n-0x30001c1c,0x2802400,0x1862460,0x30001c1c,0x2806400,0x1862460,0x30001c1c,0x4000000,0x200000,0x30001c1c,0x6800100,0x1862400,0x30001c1c,0x6800100,0x1862540,0x30001c1c,\n-0x7c00100,0x1830000,0x30001c1c,0x7c00100,0x1830001,0x30001c1c,0xc000010,0x448000,0x30001f0b,0x4000000,0x200000,0x30001f0b,0x4000010,0x200000,0x30001f0b,0x4000010,\n-0x400000,0x30001f0b,0x6800000,0x200000,0x30001f0b,0x7c00100,0x230400,0x30001f0b,0xc000010,0x248000,0x30002006,0x7c00100,0x250400,0x30002128,0x4000000,0x200000,\n-0x30002128,0x7c00100,0x230400,0x30002128,0xc000010,0x248000,0x3000221d,0x4000000,0x810000,0x3000221d,0x4000000,0x1410000,0x3000221d,0x4000001,0x445800,0x3000221d,\n-0x7c00100,0x230400,0x30002300,0x4000010,0x400000,0x30002320,0x7c00100,0x230400,0x30002417,0x2802100,0x1862460,0x30002417,0x2802400,0x1862460,0x30002417,0x2806400,\n-0x1862460,0x30002417,0x2882000,0x1862460,0x30002417,0x4000000,0x200000,0x30002417,0x4000000,0x400000,0x30002417,0x4000000,0x1600000,0x30002417,0x4000010,0x400000,\n-0x30002417,0x4000010,0x1200000,0x30002417,0x6800000,0x1329800,0x30002417,0x6800100,0x1862540,0x30002417,0x7c00100,0x1830000,0x30002417,0x7d00100,0x1830000,0x3000251b,\n-0x80000,0xc18820,0x3000251b,0x2802100,0x962460,0x3000251b,0x3c02100,0x962460,0x3000251b,0x4000000,0x200000,0x3000251b,0x4000006,0x500000,0x3000251b,0x4000010,\n-0x400000,0x3000251b,0x4000010,0xb70000,0x3000251b,0x4000800,0x200000,0x3000251b,0x6800000,0x1329800,0x3000251b,0x7c00100,0x230400,0x3000251b,0x7c00900,0x230400,\n-0x3000251b,0xc000010,0xb48000,0x3000251b,0x12882000,0x962460,0x30002800,0x24000000,0x200000,0x30002800,0x2c000010,0x1248002,0x30002800,0x2c000010,0x15248002,0x30002a00,\n-0x4000000,0x1600000,0x30002b01,0x2000,0x962460,0x30002b01,0x2000,0x8962460,0x30002c00,0x4000000,0x200000,0x30002c00,0x7c00100,0x14220405,0x30002d19,0x7c00100,\n-0x250400,0x30002e00,0x24000000,0x200000,0x30003000,0x24000000,0x200000,0x30003000,0x24000000,0x4200000,0x30003100,0x24000000,0x200000,0x30003600,0x24000000,0x200000,\n-0x30003700,0x24000000,0x4200000,0x3000392e,0x24000000,0x200000,0x30005013,0x7c00100,0x2633801,0x30005600,0,0x918820,0x30020600,0x4000400,0x500400,0x30020701,\n-0x2802400,0x962460,0x30020701,0x2802400,0xc62460,0x300a3a11,0x4020000,0xe00000,0x300a3a11,0x4020000,0xe00002,0x300a3b11,0x4020000,0xe00002,0x300a3c00,0x4008000,\n-0xe00000,0x300a3c00,0x4010000,0xe00000,0x300a3d11,0x7c00300,0xe30002,0x300a4305,0x7c00100,0xe30400,0x300a4611,0x7c40300,0xe30000,0x300a4829,0x7c00100,0xe30400,\n-0x300a4829,0x7c00900,0x1230400,0x300a4929,0x4000000,0xe00000,0x30402591,0x4000010,0x400000,0x30402591,0x4000010,0xb70000,0x30402591,0xc000010,0xb48000,0x304028af,\n-0x4000001,0xc41c0b,0x304a3dbf,0x4000000,0xe00000,0x30800c1f,0x2802100,0x962460,0x30c01c89,0x6800000,0x1329800,0x3100080e,0x7c00120,0x220402,0x3100080e,0x7c00120,\n-0x250402,0x31005167,0x1000,0,0x3100581e,0x4000000,0x200000,0x3100581e,0x7c00100,0x230400,0x3100590d,0x7c00100,0x230400,0x31005a09,0x7c00100,0x220400,\n-0x31005a09,0x7c00100,0x250400,0x31005b00,0x4000000,0x200000,0x31005c00,0x80000,0x918820,0x31005c00,0x2802000,0x962460,0x31005c00,0x2802400,0x962460,0x31005c00,\n-0x4000000,0x200000,0x31005c00,0x4000000,0x200001,0x31005c00,0x6800000,0x962540,0x31005c00,0x6800400,0x962540,0x31005c01,0x2802400,0x962460,0x31005d00,0x4000020,\n-0x200005,0x31005d00,0x6800020,0x1329805,0x31005d00,0x7c00120,0x220405,0x31005d00,0x7c00120,0x250405,0x31006000,0x82000,0x8962460,0x31006000,0x180000,0x918820,\n-0x310a5e11,0x7c40300,0xe30000,0x310a5f11,0x7c00300,0xe30001,0x32000419,0x7c00100,0x250400,0x3200080e,0x4000020,0x200000,0x3200080e,0x7c00100,0x220400,0x3200080e,\n-0x7c00100,0x250400,0x32000908,0x7c00100,0x220400,0x32000908,0x7c00100,0x250400,0x32000c02,0x7c00100,0x230400,0x32000e25,0x7c00100,0x230400,0x32001d0c,0x7c00100,\n-0x230400,0x32002800,0x80000,0x1e18820,0x32002800,0x80020,0x218820,0x32002800,0x4000001,0x445802,0x32002800,0x24000000,0x200000,0x32002800,0x24000000,0x200002,\n-0x32002800,0x24000020,0x200000,0x32002800,0x2c000010,0x1248002,0x32002919,0x7c00100,0x22040f,0x32002a00,0x4000000,0x1600000,0x32002b01,0x2000,0x962460,0x32002b01,\n-0x2802000,0x962460,0x32002b01,0x2802020,0x962460,0x32002c00,0x4000000,0x200000,0x32002c00,0x4000020,0x200000,0x32002c00,0x4000020,0x200005,0x32002c00,0x7c00120,\n-0x220405,0x32002c00,0x7c00120,0x250405,0x32002e00,0x24000020,0x200000,0x32002f00,0x24000020,0x200000,0x32003000,0x24000000,0x200000,0x32003000,0x24000020,0x200000,\n-0x32003500,0x24000000,0x200000,0x32003600,0x24000020,0x200000,0x32003600,0x24000020,0x14200000,0x32003700,0x24000000,0x200000,0x32003700,0x24000000,0x4100000,0x32003700,\n-0x24000000,0x4200000,0x32003700,0x24000000,0x14200000,0x32003800,0x24000000,0x810000,0x32003800,0x24000000,0x1410000,0x32005102,0x4000000,0x1500008,0x32005502,0x7c00100,\n-0x230400,0x32006108,0x7c00100,0x220400,0x32006108,0x7c00100,0x250400,0x3200622a,0x2802100,0x962460,0x3200622a,0x2806000,0x962460,0x3200622a,0x7c00100,0x230400,\n-0x3200632b,0x2802100,0x962460,0x3200632b,0x2806000,0x962460,0x3200632b,0x7c00100,0x230400,0x3200642c,0x2802100,0x962460,0x3200642c,0x7c00100,0x230400,0x3200652d,\n-0x2802100,0x962460,0x3200652d,0x7c00100,0x230400,0x32006600,0x24000020,0x200000,0x32006700,0x24000020,0x200000,0x32006800,0x24000020,0x200000,0x32006800,0x24000020,\n-0x14200000,0x32006900,0x24000020,0x200000,0x32006900,0x24000020,0x810000,0x32006900,0x24000020,0x1410000,0x32006a00,0x24000020,0x200000,0x32006a00,0x24000020,0x200001,\n-0x32006a00,0x24000020,0x200002,0x32020701,0x2882000,0xc62460,0x32023300,0x4000000,0x100000,0x32026c01,0x12882000,0x962460,0x32026c01,0x12882000,0x8962460,0x32065700,\n-0x4000000,0x810011,0x32065700,0x4000000,0x1410011,0x32086600,0x24000020,0x810000,0x32086600,0x24000020,0x1410000,0x32086900,0x24000020,0x810000,0x32086900,0x24000020,\n-0x1410000,0x320a3600,0x24000020,0x34200000,0x320a3d11,0x7c00100,0x1230400,0x320a3e14,0x7c00100,0xe30010,0x320a3e14,0x7c00100,0x2530000,0x320a3f16,0x7c00100,0xe30c10,\n-0x320a4400,0x4000000,0xe00003,0x320a4929,0x4000000,0xe00000,0x320a4f11,0x7c00300,0xe30001,0x320a6b16,0x7c00100,0x2530c00,0x3240638d,0xc000010,0x448000,0x324a3dc2,\n-0x4000000,0x14e00000,0x324a3dc2,0x7c00100,0x1230400,0x324a3fbd,0x4000002,0x1200c00,0x324a53ba,0x24000000,0xe00000,0x32820701,0x2802000,0x962460,0x40000419,0x7c00100,\n-0x220400,0x40000519,0x7c00100,0x220400,0x40000600,0x4000400,0x200400,0x4000080e,0x7c00100,0x220400,0x4000080e,0x7c00100,0x250400,0x4000080e,0x7c00100,0x250402,\n-0x40000c02,0x2802100,0x962460,0x40000c02,0x2802400,0x962460,0x40000c02,0x2802500,0x962460,0x40000c02,0x4000000,0x200000,0x40000c02,0x4000000,0x1071400,0x40000c02,\n-0x7c00100,0x230400,0x40000c02,0x80000000,0x218960,0x40000d22,0x7c00100,0x230400,0x40000f0a,0x7c00100,0x230400,0x40001004,0x7c00100,0x230400,0x40001110,0x2802100,\n-0x962460,0x40001110,0x6800100,0x962540,0x4000120f,0x2802100,0x962460,0x4000120f,0x4000000,0x1600000,0x4000120f,0x7c00100,0x230400,0x4000131f,0x7c00100,0x230400,\n-0x40001423,0x4000000,0x200000,0x40001423,0x4000000,0x1600000,0x40001615,0x2802400,0x962460,0x40001615,0x7c00100,0x230400,0x40002417,0x2802400,0x1862460,0x40002417,\n-0x4000000,0x200000,0x40002800,0x6800000,0x201c00,0x40002800,0x24000002,0x200000,0x40002c00,0x4000000,0x200002,0x40003000,0x24000000,0x14200000,0x40003000,0x24000020,\n-0x200000,0x40003700,0x24000000,0x200000,0x40003700,0x24000000,0x4200000,0x40003700,0x24000000,0x14200000,0x40005a09,0x7c00100,0x220400,0x40005a09,0x7c00100,0x250400,\n-0x40005d00,0x7c00120,0x220405,0x40006f30,0x2802100,0x962460,0x40006f30,0x2802400,0x962460,0x40006f30,0x4000000,0x200000,0x40006f30,0x6800000,0x1329800,0x40006f30,\n-0x6800100,0x962540,0x40006f30,0x7c00100,0x230400,0x40006f30,0xc000010,0xb48000,0x40007034,0x7c00100,0x1830000,0x40007117,0x4000000,0x200000,0x40007208,0x7c00100,\n-0x220400,0x4000720e,0x7c00100,0x220400,0x4000720e,0x7c00500,0x22040e,0x4000720e,0x7c00500,0x22040f,0x40007219,0x7c00100,0x220400,0x40007219,0x7c00500,0x220400,\n-0x40007219,0x7c00500,0x22040e,0x40007219,0x7c00500,0x22040f,0x40007300,0x24000000,0x200000,0x40007300,0x24000000,0x14200000,0x40007400,0x4000000,0x200000,0x40007531,\n-0x7c00100,0x230400,0x40007631,0x7c00100,0x230400,0x40007835,0x4000010,0x400000,0x40007835,0x7c00100,0x230400,0x40007933,0x7c00100,0x230400,0x40007a32,0x6800000,\n-0x1329800,0x40007a32,0x7c00100,0x230400,0x40007b2f,0x7c00100,0x230400,0x40007c00,0x4000000,0x200000,0x40020701,0x2802400,0x962460,0x40020701,0x2802400,0xc62460,\n-0x40023300,0x4000000,0x200000,0x40027d01,0x12882000,0x962460,0x400a3700,0x24000000,0x34200000,0x400a3700,0x24000000,0x34e00000,0x400a4400,0x4000000,0xe0000d,0x400a4412,\n-0x4000000,0xe00002,0x400a4412,0x4000000,0xe00003,0x400a4500,0x4000000,0xe0000d,0x400a5300,0x4000000,0x810010,0x400a5300,0x4000000,0x1410010,0x404077f6,0x4000000,\n-0x200000,0x404077f9,0x4000000,0x200000,0x404077f9,0x4000000,0x400000,0x40c01480,0x4000000,0x200000,0x40c05123,0x4000000,0x200000,0x41000419,0x7c00100,0x220400,\n-0x41000419,0x7c00100,0x250400,0x4100080e,0x7c00100,0x220400,0x4100080e,0x7c00100,0x250400,0x41000908,0x7c00100,0x220400,0x41000908,0x7c00100,0x250400,0x41000b13,\n-0x2802000,0x962460,0x41000b13,0x2802100,0x962460,0x41000b13,0x4000000,0xb00000,0x41000c02,0x2802100,0x962460,0x41000c02,0x4000000,0x1500000,0x41000c02,0xc000010,\n-0xb48000,0x41000f0a,0x7c00100,0x230400,0x41001004,0x7c00100,0x230400,0x41001423,0x7c00100,0x230400,0x41001b27,0x4000000,0x500000,0x41001d0c,0x7c00100,0x230400,\n-0x41001d0c,0x7c00100,0x23040f,0x41001f0b,0x2802400,0x962460,0x41001f0b,0x4000000,0x200000,0x41001f0b,0x7c00100,0x230400,0x41002800,0x24000000,0x200000,0x41002800,\n-0x24000000,0x400000,0x41002919,0x7c00100,0x22040e,0x41002a00,0x4000000,0x1600000,0x41002b01,0x2802020,0x962460,0x41002c00,0x4000000,0x200000,0x41002c00,0x7c00120,\n-0x220405,0x41003000,0x24000000,0x200000,0x41003700,0x24000000,0x4200000,0x41003700,0x24000000,0x14200000,0x41003700,0x24000000,0x14e00000,0x41005d00,0x7c00120,0x220405,\n-0x41006600,0x24000020,0x200000,0x41006600,0x24000020,0x810000,0x41006600,0x24000020,0x1410000,0x41007208,0x7c00100,0x22040f,0x41007219,0x7c00100,0x220400,0x41007300,\n-0x24000000,0x200000,0x41007e0e,0x2802000,0x962460,0x41007e0e,0x4000000,0x200000,0x41007f0e,0x4000000,0x200000,0x41007f0e,0x7c00100,0x230400,0x41008002,0x7c00100,\n-0x230400,0x41008137,0x2802100,0x962460,0x41008137,0x4000000,0x200000,0x41008137,0x6800100,0x962540,0x41008137,0x7c00100,0x230400,0x41008301,0x2802000,0x962460,\n-0x41008407,0x4000000,0x200000,0x41008407,0x4000000,0x400000,0x41008407,0x4000000,0xb00000,0x41008407,0x7c00100,0x220400,0x41008407,0x7c00100,0x250400,0x4100850b,\n-0x7c00100,0x230400,0x4100860b,0x4000000,0x200000,0x4100860b,0x7c00100,0x230400,0x4100870c,0x7c00100,0x220400,0x41008838,0x7c00100,0x220400,0x41008838,0x7c00100,\n-0x250400,0x41008939,0x2802000,0x962460,0x41008939,0x2802100,0x962460,0x41008939,0x2806000,0x962460,0x41008939,0x4000000,0x200000,0x41008939,0x4000000,0x400000,\n-0x41008939,0x7c00100,0x230400,0x41008939,0xc000010,0x448000,0x41008a00,0x4000400,0x200000,0x41008b3b,0x4000000,0x1800000,0x41008b3b,0x6800000,0x1329800,0x41008b3b,\n-0x7c00100,0x1830000,0x41008b3b,0x7e00100,0x1830000,0x41008c3d,0x4000010,0x400000,0x41008c3d,0x7c00100,0x230400,0x41008d0e,0x7c00100,0x22040f,0x41008d19,0x7c00100,\n-0x220400,0x41008d19,0x7c00100,0x22040f,0x41008e00,0x24000000,0x200000,0x41008e00,0x24000000,0x400000,0x41008e00,0x24000000,0x1710000,0x41008e00,0x24000006,0x400000,\n-0x41008f3a,0x2802100,0x962460,0x41008f3a,0x2806000,0x962460,0x41008f3a,0x4000000,0x200000,0x41008f3a,0x6800100,0x962540,0x41008f3a,0x7c00100,0x230400,0x4100903c,\n-0x7c00100,0x230400,0x4100903c,0x7c00100,0x23040f,0x41020701,0x2802000,0x962460,0x41020701,0x2802000,0xc62460,0x410a3700,0x24000000,0x34200000,0x410a3700,0x24000000,\n-0x34e00000,0x410a4412,0x4000000,0xe00003,0x410a4711,0x7c40300,0xe30000,0x410a4f11,0x7c00300,0xe30001,0x410a9100,0x4000000,0x800010,0x410a9100,0x4000000,0x810010,\n-0x410a9100,0x4000000,0x870010,0x410a9100,0x4000000,0xb00010,0x410a9100,0x4000000,0xf00010,0x410a9100,0x4000000,0x1001410,0x410a9100,0x4000000,0x1071010,0x410a9100,\n-0x4000000,0x1071410,0x410a9100,0x4000000,0x1410010,0x414a82bf,0x4000000,0xe00000,0x41808300,0x2802000,0x962460,0x41c01480,0x6800000,0x1329800,0x50000419,0x7c00100,\n-0x220400,0x50000419,0x7c00100,0x250400,0x5000080e,0x7c00100,0x220400,0x50000908,0x7c00100,0x220400,0x50000908,0x7c00100,0x250400,0x50000b13,0x2802500,0x962460,\n-0x50000f0a,0x7c00100,0x230400,0x50001615,0x2802100,0x962460,0x50001615,0x7c00100,0x230400,0x50002b01,0x2802020,0x962460,0x50002c00,0x4000000,0x200000,0x50002c19,\n-0x7c00100,0x220400,0x50002d19,0x7c00100,0x220400,0x50003000,0x24000000,0x200000,0x50003000,0x24000020,0x200000,0x50003700,0x24000000,0x4200000,0x50005d00,0x7c00120,\n-0x220405,0x50005d00,0x7c00120,0x250405,0x50006108,0x7c00100,0x220400,0x50006108,0x7c00100,0x250400,0x50006600,0x24000020,0x200000,0x50007300,0x24000000,0x200000,\n-0x50008301,0x2802400,0x962460,0x50008a00,0x7c00500,0x230400,0x50009257,0x2802400,0x962460,0x50009257,0x4000000,0x200000,0x50009257,0x4000010,0x1071400,0x50009257,\n-0x6800000,0x1329800,0x50009257,0x7c00100,0x230400,0x50009257,0x7c00500,0x230400,0x50009257,0x7c00900,0x230400,0x50009257,0xc000010,0xb48000,0x5000933e,0x2802100,\n-0x962460,0x5000933e,0x2802400,0x962460,0x5000933e,0x4000000,0x200000,0x5000933e,0x4000000,0x400000,0x5000933e,0x4000010,0x400000,0x5000933e,0x6800000,0x1329800,\n-0x5000933e,0x6800100,0x962540,0x5000933e,0x6800100,0x962541,0x5000933e,0x6804400,0x962540,0x5000933e,0x7c00100,0x230400,0x5000933e,0x7c00100,0x230401,0x5000933e,\n-0xc000010,0x448000,0x50009419,0x7c00100,0x220400,0x50009419,0x7c00100,0x250400,0x50009500,0x4000400,0x200400,0x5000965a,0x4000000,0x500000,0x5000965a,0x7c00100,\n-0x230400,0x5000965a,0xc000010,0xb48000,0x5000975b,0x4000000,0x200000,0x5000975b,0x4000010,0x400000,0x5000975b,0x7c00100,0x230400,0x50009865,0x7c00100,0x230400,\n-0x50009965,0x4000010,0x400000,0x50009965,0x7c00100,0x230400,0x50409abf,0x4000000,0x200000,0x5100080e,0x7c00100,0x220400,0x5100080e,0x7c00100,0x250400,0x51000c02,\n-0x2802100,0x962460,0x51000c02,0x4000000,0x1500000,0x51000c02,0x4000020,0x200000,0x51000c02,0x7c00100,0x230400,0x51000f0a,0x7c00100,0x230400,0x51000f0a,0x7c00500,\n-0x230400,0x51001110,0x2802100,0x962460,0x5100131f,0x2802100,0x962460,0x51001423,0x7c00100,0x230400,0x51001524,0x2802100,0x962460,0x51001524,0x4000000,0x200000,\n-0x51001524,0x7c00100,0x230400,0x5100171a,0x2802100,0x962460,0x5100171a,0x4000000,0x200000,0x5100171a,0x4000000,0x1500000,0x5100171a,0x7c00100,0x230400,0x51001b27,\n-0x4000000,0x200000,0x51001b27,0x4000000,0x400000,0x51001b27,0x4000000,0x500000,0x51001b27,0x7c00100,0x230400,0x51001c1c,0x2802100,0x1862460,0x51001c1c,0x2802500,\n-0x1862460,0x51001c1c,0x2806400,0x1862460,0x51001c1c,0x4000000,0x1800000,0x51001c1c,0x6800000,0x1329800,0x51001c1c,0x6800100,0x1862400,0x51001c1c,0x6800100,0x1862540,\n-0x51001c1c,0x6800500,0x1862400,0x51001c1c,0x7c00100,0x1830000,0x5100251b,0x7c00100,0x230400,0x51002619,0x7c00100,0x220400,0x51002619,0x7c00100,0x250400,0x51002800,\n-0x80020,0x218820,0x51002c00,0x4000000,0x200000,0x51002d19,0x7c00100,0x230400,0x51003700,0x24000000,0x4200000,0x51003700,0x24000000,0x4e00000,0x51005201,0x2802400,\n-0x962460,0x51005c00,0x4000000,0x200000,0x51006108,0x7c00100,0x220400,0x51006108,0x7c00100,0x250400,0x51006600,0x24000020,0x200000,0x51006600,0x24000020,0x810000,\n-0x51006600,0x24000020,0x1410000,0x51007300,0x24000000,0x200000,0x51007300,0x24000020,0x200000,0x51008002,0x7c00100,0x230400,0x51008301,0x2802000,0x962460,0x51008301,\n-0x2802400,0x962460,0x51008a00,0x7c00500,0x230400,0x51008e00,0x24000000,0x200000,0x51008e00,0x24000000,0x400000,0x51008e00,0x24000000,0x810000,0x51008e00,0x24000000,\n-0x1400000,0x51008e00,0x24000000,0x1410000,0x51008e00,0x24000000,0x1710000,0x51008e00,0x24000002,0x200000,0x51008e00,0x24000500,0x230400,0x51008e00,0x2c000010,0xb48000,\n-0x51009419,0x7c00100,0x220400,0x51009419,0x7c00100,0x22040e,0x51009419,0x7c00100,0x22040f,0x51009419,0x7c00100,0x250400,0x51009500,0x4000400,0x200400,0x51009500,\n-0x7c00500,0x230400,0x51009519,0x7c00100,0x220400,0x51009519,0x7c00100,0x22040f,0x51009519,0x7c00100,0x230400,0x51009519,0x7c00100,0x250400,0x51009b71,0x2802100,\n-0x962460,0x51009b71,0x6800000,0x1329800,0x51009b71,0x6800100,0x962540,0x51009b71,0x6804400,0x962540,0x51009b71,0x7c00100,0x230400,0x51009c52,0x2802100,0x962460,\n-0x51009c52,0x2802400,0x962460,0x51009c52,0x2802d00,0x962460,0x51009c52,0x4000010,0x400000,0x51009c52,0x6800000,0x1329800,0x51009c52,0x6800100,0x962540,0x51009c52,\n-0x7c00100,0x230400,0x51009c52,0xc000010,0x448000,0x51009d6d,0x6800000,0x1329800,0x51009d6d,0x7c00100,0x230400,0x51009d6d,0x7c00500,0x230400,0x51009d6d,0x7c00d00,\n-0x230400,0x51009d6d,0xc000010,0x448000,0x51009e08,0x2802100,0x962460,0x51009f63,0x4000010,0x400000,0x51009f63,0x6800000,0x1329800,0x51009f63,0x7c00100,0x230400,\n-0x51009f63,0x7c00900,0x230400,0x51009f63,0xc000010,0x448000,0x51009f63,0xc000010,0xb48000,0x5100a008,0x2000,0x962460,0x5100a008,0x2802400,0x962460,0x5100a008,\n-0x4000000,0x200000,0x5100a008,0x7c00100,0x220400,0x5100a008,0x7c00100,0x230400,0x5100a008,0x7c00100,0x250400,0x5100a008,0x7c00500,0x230400,0x5100a16f,0x2806400,\n-0x962460,0x5100a16f,0x6800000,0x1329800,0x5100a16f,0x6800100,0x962540,0x5100a16f,0x7c00100,0x230400,0x5100a16f,0xc000010,0x448000,0x5100a24f,0x2802100,0x962460,\n-0x5100a24f,0x2802400,0x962460,0x5100a24f,0x6800000,0x1329800,0x5100a24f,0x7c00100,0x230400,0x5100a24f,0xc000010,0x448000,0x5100a36e,0x2802100,0x962460,0x5100a36e,\n-0x4000000,0x200000,0x5100a36e,0x6800100,0x962540,0x5100a36e,0x6804400,0x962540,0x5100a36e,0x7c00100,0x230400,0x5100a442,0x2802100,0x962460,0x5100a442,0x4000000,\n-0x200000,0x5100a442,0x6800000,0x1329800,0x5100a442,0x6800100,0x962540,0x5100a442,0x7c00100,0x230400,0x5100a442,0xc000010,0x448000,0x5100a500,0x4000000,0x200000,\n-0x5100a600,0x4000000,0x200000,0x5100a601,0x2802000,0x962460,0x5100a76b,0x7c00100,0x230400,0x5100a868,0x7c00100,0x230400,0x5100a96c,0x4000000,0x200000,0x5100a96c,\n-0x7c00100,0x230400,0x5100aa00,0x4000000,0x4e00000,0x5100ab00,0x4000000,0x4e00000,0x51086600,0x24000020,0x810000,0x51086600,0x24000020,0x1410000,0x510a4005,0x7c00100,\n-0xe30400,0x510a4711,0x7c40300,0xe30000,0x510a7300,0x24000000,0x34200000,0x510aaa00,0x4000000,0x34e00000,0x5140a2f1,0x4000400,0x400000,0x514a82bf,0x4000000,0xe00000,\n-0x51802bb1,0x2802000,0x962460,0x51c00908,0x2802400,0x962460,0x51c0a008,0x2802400,0x962460,0x52000f0a,0x2802100,0x962460,0x52000f0a,0x6800100,0x962540,0x52000f0a,\n-0x7c00100,0x230400,0x52001004,0x4000000,0x1600000,0x52001b00,0x4000000,0x200000,0x52001c1c,0x2802100,0x1862460,0x52001c1c,0x6800100,0x1862400,0x52001c1c,0x6800500,\n-0x1862400,0x52001e12,0x7c00100,0x2230500,0x52001e12,0x7c00100,0x2330520,0x52002128,0x4000002,0x400000,0x52002128,0x7c00100,0x230400,0x52002a00,0x4000000,0x1500000,\n-0x52002a00,0x4000000,0x1600000,0x52002d00,0x4000000,0x200006,0x52003000,0x24000000,0x200000,0x52006108,0x7c00100,0x220400,0x52006108,0x7c00100,0x250400,0x52008301,\n-0x2802400,0x962460,0x52008407,0x2802400,0x962460,0x52008407,0x7c00100,0x220400,0x52008407,0x7c00100,0x250400,0x52008b3b,0x6800000,0x1800000,0x52008b3b,0x7c00100,\n-0x1830000,0x52008e00,0x24000000,0x400000,0x52009419,0x7c00100,0x250400,0x5200975b,0x4000000,0x200000,0x5200ac7e,0x2802000,0x962460,0x5200ac7e,0x2802100,0x962460,\n-0x5200ac7e,0x2802400,0x962460,0x5200ac7e,0x4000010,0x200000,0x5200ac7e,0x7c00100,0x230400,0x5200ac7e,0xc000010,0x248000,0x5200ad28,0x7c00100,0x230400,0x5200ae6a,\n-0x2802100,0x1862460,0x5200ae6a,0x2802400,0x962460,0x5200ae6a,0x2802400,0x1862460,0x5200ae6a,0x2806000,0x1862460,0x5200ae6a,0x4000000,0x1800000,0x5200ae6a,0x6800000,\n-0x1329800,0x5200ae6a,0x6800100,0x1862400,0x5200ae6a,0x6800100,0x1862540,0x5200ae6a,0x7c00100,0x1830000,0x5200ae6a,0x7c00900,0x1830000,0x5200ae6a,0xc000010,0x1848000,\n-0x5200b083,0x4000010,0x400000,0x5200b083,0x7c00100,0x230400,0x5200b083,0xc000010,0x448000,0x5200b182,0x2802400,0x962460,0x5200b182,0x4000000,0x200000,0x5200b182,\n-0x4000010,0x400000,0x5200b182,0x7c00100,0x230400,0x5200b182,0xc000010,0x448000,0x5200b30a,0x2802400,0x962460,0x5200b30a,0x4000000,0x200000,0x5200b30a,0x7c00100,\n-0x230400,0x5200b54e,0x2802100,0x962460,0x5200b54e,0x2802400,0x962460,0x5200b54e,0x4000000,0x200000,0x5200b54e,0x4000010,0x400000,0x5200b54e,0x6800000,0x1329800,\n-0x5200b54e,0x6800100,0x962540,0x5200b54e,0x6804400,0x962540,0x5200b54e,0x7c00100,0x230400,0x5200b54e,0xc000010,0x448000,0x5200b61c,0x4000000,0x1800000,0x5200b61c,\n-0x6800500,0x1862400,0x5200b61c,0x7c00100,0x1830000,0x5200b61c,0x7c00900,0x1830000,0x5200b77f,0x2802100,0x1862460,0x5200b77f,0x2802400,0x1862460,0x5200b77f,0x4000000,\n-0x1800000,0x5200b77f,0x4000010,0x1800000,0x5200b77f,0x7c00100,0x1830000,0x5200b77f,0x7c00500,0x1830000,0x5200b77f,0x7c00900,0x1830000,0x5200b77f,0x7e00100,0x1830000,\n-0x5200b873,0x2802100,0x962460,0x5200b873,0x2806400,0x962460,0x5200b873,0x6800000,0x1329800,0x5200b873,0x6800100,0x962540,0x5200b873,0x6800400,0x962540,0x5200b873,\n-0x7c00100,0x230400,0x5200b873,0xc000010,0x448000,0x5200b912,0x7c00100,0x2230500,0x5200b912,0x7c00100,0x2330520,0x5200ba74,0x4000000,0x200000,0x5200ba74,0x4000010,\n-0x400000,0x5200ba74,0x7c00100,0x230400,0x5200bb85,0x4000000,0x200000,0x5200bb85,0x7c00100,0x230400,0x5200bc75,0x4000000,0x400000,0x5200bc75,0x4000010,0x400000,\n-0x5200bc75,0x7c00100,0x230400,0x5200bd7d,0x4000000,0x200000,0x5200bd7d,0x7c00100,0x230400,0x5200be7a,0x4000000,0x200000,0x5200be7a,0x7c00100,0x230400,0x5200bf58,\n-0x7c00100,0x230400,0x5200c002,0x4000000,0x200000,0x5200c178,0x2802000,0x962460,0x5200c178,0x2802100,0x962460,0x5200c178,0x2802400,0x962460,0x5200c178,0x2806400,\n-0x962460,0x5200c178,0x4000000,0x200000,0x5200c178,0x6800100,0x962540,0x5200c178,0x7c00100,0x230400,0x5200c178,0x7c00100,0x230401,0x5200c178,0xc000010,0x448000,\n-0x5200c178,0x80000000,0x218960,0x5200c247,0x7c00100,0x230400,0x5200c247,0x7c00100,0x830400,0x5200c247,0x7c00100,0x1430400,0x5200c300,0x4000000,0x200003,0x52022d00,\n-0x4000000,0x100006,0x52023700,0x24000000,0x4100000,0x52023700,0x24000000,0x4e00000,0x52023700,0x24000000,0x14100000,0x52023700,0x24000000,0x14e00000,0x52023700,0x24000000,\n-0x96800000,0x52024400,0x4000000,0x100000,0x52027300,0x24000000,0x100000,0x5202c300,0x4000000,0x100000,0x5202c300,0x4000000,0x100002,0x5202c300,0x4000000,0x100003,\n-0x5202c300,0x4000000,0x10000d,0x5202c300,0x4000100,0x150400,0x5202c300,0x4000100,0x15040d,0x5202c300,0x4000100,0x14150400,0x520a1e12,0x7c00100,0x2130480,0x520a3700,\n-0x24000000,0x34e00000,0x520a3800,0x24000000,0x34100000,0x520a4711,0x7c40300,0xe30000,0x520a4f11,0x7c00300,0xe30001,0x520a7300,0x24000000,0x34100000,0x520ab412,0x7c00100,\n-0x2130480,0x520ac400,0x4000000,0xe00002,0x520ac400,0x4000000,0xe0000d,0x520ac400,0x4000000,0x34e0000d,0x520ac414,0x4000000,0xe0000d,0x520ac511,0x7c40300,0xe30000,\n-0x5240af93,0x7c00100,0x230400,0x5240af98,0x4000400,0x200000,0x5240af9a,0x6800400,0x962540,0x5240af9a,0x7c00100,0x230400,0x5240afa4,0x7c00100,0x230400,0x5240afa6,\n-0x7c00100,0x230400,0x5240b2c5,0x4000000,0x200000,0x5240b2c5,0x4000000,0x1500000,0x5240b2d0,0x4000000,0x200000,0x5240b2de,0x4000000,0x200000,0x5240b5f4,0x7c00900,\n-0x230400,0x524a44bf,0x4000000,0xe00003,0x5280af93,0x2802400,0x962460,0x5280af94,0x2802400,0x962460,0x5280af9a,0x2802400,0x962460,0x5280af9c,0x2802400,0x962460,\n-0x5280af9e,0x2802400,0x962460,0x52c0b3eb,0x2802400,0x962460,0x52c0b3ef,0x7c00100,0x230400,0x60000c02,0x2802100,0x962460,0x60000c02,0x7c00100,0x230400,0x60000f0a,\n-0x2802100,0x962460,0x60000f0a,0x6800100,0x962540,0x60000f0a,0x7c00100,0x230400,0x6000131f,0x4000000,0x200000,0x6000171a,0x7c00100,0x230400,0x6000171a,0x7c00100,\n-0x230560,0x60001b27,0x2802100,0x962460,0x60001b27,0x4000000,0xc00000,0x60001b27,0x7c00100,0x230400,0x60001f0b,0x2802400,0x962460,0x60002919,0x7c00100,0x22040e,\n-0x60002a00,0x4000000,0x1600000,0x60003000,0x24000000,0x14200000,0x60003000,0x24000000,0x14e00000,0x60003700,0x24000000,0x4200000,0x60003800,0x24000000,0x1710000,0x60005102,\n-0x4000000,0x200000,0x60006108,0x7c00100,0x220400,0x60006108,0x7c00100,0x250400,0x60006600,0x24000020,0x200000,0x60008301,0x2802000,0x962460,0x6000903c,0x2806000,\n-0x962460,0x6000903c,0x4000000,0x400000,0x60009519,0x7c00100,0x220400,0x60009519,0x7c00100,0x250400,0x6000a008,0x7c00100,0x220400,0x6000a008,0x7c00100,0x250400,\n-0x6000c300,0x4000000,0x3a703580,0x6000c654,0x2802000,0x962460,0x6000c654,0x4000010,0x200000,0x6000c654,0x7c00100,0x230400,0x6000c73f,0x2802000,0x962460,0x6000c73f,\n-0x2802100,0x962460,0x6000c73f,0x4000000,0x200000,0x6000c73f,0x6800100,0x962540,0x6000c73f,0x6804000,0x962540,0x6000c73f,0x7c00100,0x230400,0x6000c80b,0x7c00100,\n-0x230400,0x6000c941,0x2802100,0x962460,0x6000c941,0x2806000,0x962460,0x6000c941,0x4000000,0x200000,0x6000c941,0x4000010,0x200000,0x6000c941,0x6800000,0x1329800,\n-0x6000c941,0x6800100,0x962540,0x6000c941,0x7c00100,0x230400,0x6000c941,0xc000010,0x448000,0x6000ca82,0x7c00100,0x230400,0x6000cc00,0x4000000,0x4e00000,0x6000d000,\n-0x4000000,0x200000,0x6002c300,0x4000000,0x100000,0x6002c300,0x4000000,0x10000d,0x6002c300,0x4000100,0x150400,0x6002c300,0x4000100,0x15040d,0x6002c300,0x4000100,\n-0x14150400,0x600a3000,0x24000000,0x34200000,0x600a3000,0x24000000,0x34e00000,0x600a3700,0x24000000,0x34200000,0x600a3800,0x24000000,0x34200000,0x600a3800,0x24000000,0xb6800000,\n-0x600a4305,0x7c00100,0xe30400,0x600ac300,0x4000000,0x34100000,0x600ac400,0x4000000,0x14e0000d,0x600ac400,0x4000000,0x34e0000d,0x600acb14,0x7c00100,0xe30000,0x600acb16,\n-0x7c00100,0xe30c00,0x600acc00,0x4000000,0x34e00000,0x600acd00,0x4000000,0x34200000,0x600acd00,0x4000000,0x34e00000,0x600acd00,0x4000000,0xb6800000,0x600ace00,0x4000000,\n-0x34e00000,0x600ace00,0x4000000,0xb6800000,0x600acf00,0x4000000,0x34e00000,0x600acf00,0x4000000,0xb6800000,0x600ad111,0x7c40300,0xe30000,0x604ac4bf,0x4000000,0x34e00003,\n-0x61000a03,0x4000000,0x1600000,0x61000c02,0x80000000,0x218960,0x6100120f,0x4000000,0x200000,0x61001a18,0x7c00100,0x1830000,0x61001d0c,0x7c00100,0x230400,0x61001d0c,\n-0x7c00100,0x250400,0x61006600,0x24000020,0x200000,0x61008407,0x7c00100,0x220400,0x61008407,0x7c00100,0x250400,0x6100870c,0x7c00100,0x220400,0x61008e00,0x24000000,\n-0x200000,0x61008e00,0x24000000,0x400000,0x61008e00,0x24000002,0x300000,0x6100903c,0x7c00100,0x230400,0x61009519,0x7c00100,0x220400,0x61009519,0x7c00100,0x250400,\n-0x61009519,0x7c00500,0x22040f,0x61009b71,0x2802100,0x962460,0x61009b71,0x2806400,0x962460,0x61009b71,0x7c00100,0x230400,0x6100a008,0x2802100,0x962460,0x6100c300,\n-0x4000000,0x20000f,0x6100cd00,0x4000000,0x200000,0x6100d202,0x2802400,0x962460,0x6100d202,0x2802500,0x962460,0x6100d202,0x7c00100,0x230400,0x6100d302,0x4000020,\n-0x200000,0x6100d302,0x7c00120,0x230405,0x6100d476,0x2802100,0x962460,0x6100d476,0x2802100,0x962461,0x6100d476,0x2806400,0x962460,0x6100d476,0x4000000,0x400000,\n-0x6100d476,0x6800000,0x1329800,0x6100d476,0x6800100,0x962540,0x6100d476,0x7c00100,0x230400,0x6100d476,0xc000010,0x448000,0x6100d573,0x2802100,0x962460,0x6100d573,\n-0x2806400,0x962460,0x6100d573,0x6800100,0x962540,0x6100d573,0x7c00100,0x230400,0x6100d573,0x7c00900,0x230400,0x6100d573,0xc000010,0x448000,0x6100d68d,0x7c00100,\n-0x230400,0x6100d756,0x7c00100,0x230400,0x6100d85c,0x2802500,0x962460,0x6100d85c,0x6800100,0x962540,0x6100d85c,0x7c00100,0x230400,0x6100d85c,0x7c00500,0x230400,\n-0x6100d997,0x2802100,0x962460,0x6100d997,0x4000000,0x200000,0x6100d997,0x4000000,0x400000,0x6100d997,0x6800000,0x1329800,0x6100d997,0x6800100,0x962540,0x6100d997,\n-0x6804400,0x962540,0x6100d997,0x7c00100,0x230400,0x6100d997,0x7c00100,0x230560,0x6100d997,0xc000010,0x448000,0x6100da98,0x6800000,0x1329800,0x6100da98,0x7c00100,\n-0x230400,0x6100db71,0x4000000,0x200000,0x6100dc99,0x2802100,0x962460,0x6100dc99,0x2802400,0x962460,0x6100dc99,0x6800000,0x1329800,0x6100dc99,0x6800100,0x962540,\n-0x6100dc99,0x6804400,0x962540,0x6100dc99,0x7c00100,0x230400,0x610a4711,0x7c40300,0xe30000,0x610a4f11,0x7c00300,0xe30001,0x610ace00,0x4000000,0x34e00000,0x6140af98,\n-0x7c00100,0x230400,0x6140af9a,0x7c00100,0x230400,0x6180af95,0x2802400,0x962460,0x62002a00,0x4000000,0x1600000,0x63002800,0x80000,0x918820,0x63c00c15,0x80000,\n-0x918820,0x7000080e,0x7c00100,0x250400,0x70000a03,0x4000000,0x200000,0x70000c00,0x80000000,0x218960,0x70000f0a,0x7c00100,0x230400,0x70001004,0x7c00100,0x230400,\n-0x70001524,0x2802100,0x962460,0x70001524,0x7c00100,0x230400,0x70001615,0x2802100,0x962460,0x7000171a,0x2802100,0x962460,0x70001821,0x6800000,0x1329800,0x70002320,\n-0x7c00100,0x230400,0x70002a00,0x4000000,0x1500000,0x70002a00,0x4000000,0x1600000,0x70003000,0x24000000,0x200000,0x70003000,0x24000000,0x14200000,0x70003800,0x24000000,\n-0x4e00000,0x70005201,0x2802400,0x962460,0x7000581e,0x7c00100,0x230400,0x70006108,0x7c00100,0x220400,0x70006108,0x7c00100,0x250400,0x70006f30,0x7c00100,0x230400,\n-0x70007300,0x24000000,0x200000,0x70007f0e,0x4000000,0x200000,0x70008301,0x2802100,0x962460,0x70008301,0x2802400,0x962460,0x70008e00,0x24000000,0x200000,0x70008e00,\n-0x24000000,0x400000,0x70008e00,0x24000002,0x400000,0x70008e00,0x24000008,0x1410000,0x70008e00,0x24000010,0x400000,0x70008e00,0x2c000010,0x448000,0x70009519,0x7c00100,\n-0x220400,0x70009519,0x7c00100,0x230400,0x70009519,0x7c00100,0x250400,0x70009865,0x7c00100,0x230400,0x70009965,0x4000010,0x400000,0x70009965,0x7c00100,0x230400,\n-0x7000a008,0x7c00100,0x220400,0x7000a008,0x7c00100,0x250400,0x7000a008,0x7c00500,0x22040f,0x7000a50e,0x4000000,0x200000,0x7000b61c,0x2802500,0x1862460,0x7000b61c,\n-0x6800500,0x1862400,0x7000b61c,0x7c00100,0x1830000,0x7000c300,0x4000000,0x100000,0x7000c941,0x2806000,0x962460,0x7000cc00,0x4000000,0x4e00000,0x7000cd00,0x4000000,\n-0x200000,0x7000cd00,0x4000000,0x4200000,0x7000cd00,0x4000000,0x4e00000,0x7000cd00,0x4000000,0x14200000,0x7000cd00,0x4000000,0x14e00000,0x7000cd00,0x4000000,0x96800000,\n-0x7000cf00,0x4000000,0x4e00000,0x7000cf00,0x4000000,0x14e00000,0x7000d202,0x2802100,0x962460,0x7000d202,0x7c00100,0x230400,0x7000d997,0x7c00100,0x230400,0x7000d997,\n-0xc000010,0x248000,0x7000dd86,0x2802400,0x962460,0x7000dd86,0x7c00100,0x230400,0x7000dd86,0xc000010,0x448000,0x7000de9f,0x4000000,0x200000,0x7000de9f,0x7c00100,\n-0x230400,0x7000e001,0x2000,0x962460,0x7000e001,0x2802400,0x962460,0x7000e187,0x2802000,0x962460,0x7000e187,0x2802100,0x962460,0x7000e187,0x4000000,0x200000,\n-0x7000e187,0x7c00100,0x230400,0x7000e187,0xc000010,0x448000,0x7000e288,0x7c00100,0x230400,0x7000e300,0x4000000,0x200000,0x7000e489,0x2802100,0x962460,0x7000e489,\n-0x2802400,0x962460,0x7000e489,0x6800100,0x962540,0x7000e489,0x6800100,0x962541,0x7000e489,0x6804400,0x962540,0x7000e489,0x7c00100,0x230400,0x7000e489,0x7c00900,\n-0x230400,0x7000e59d,0x2802100,0x962460,0x7000e59d,0x2802400,0x962460,0x7000e59d,0x4000000,0x200000,0x7000e59d,0x4000010,0x200000,0x7000e59d,0x6800100,0x962540,\n-0x7000e59d,0x6804400,0x962540,0x7000e59d,0x7c00100,0x230400,0x7000e59d,0xc000010,0x448000,0x7000e691,0x2802100,0x962460,0x7000e691,0x2802400,0x962460,0x7000e691,\n-0x2806400,0x962460,0x7000e691,0x6800000,0x1329800,0x7000e691,0x6800100,0x962540,0x7000e691,0x7c00100,0x230400,0x7000e700,0x4000400,0x200400,0x7000e70e,0x7c00100,\n-0x220400,0x7000e719,0x7c00100,0x220400,0x7000e719,0x7c00500,0x22040f,0x7000e853,0x7c00100,0x230400,0x7000e9a0,0x2802400,0x962460,0x7000e9a0,0x4000000,0x200000,\n-0x7000e9a0,0x4000000,0x500000,0x7000e9a0,0x7c00100,0x230400,0x7000ea79,0x2802400,0x962460,0x7000ea79,0x4000000,0x200000,0x7000ea79,0x4000000,0xf00000,0x7000ea79,\n-0x4000010,0x400000,0x7000ea79,0x7c00100,0x230400,0x7000eb8c,0x2802400,0x962460,0x7000eb8c,0x4000000,0x200000,0x7000eb8c,0x7c00100,0x230400,0x7000eca3,0x2802100,\n-0x962460,0x7000eca3,0x2806400,0x962460,0x7000eca3,0x4000000,0x200000,0x7000eca3,0x6800000,0x1329800,0x7000eca3,0x6800100,0x962540,0x7000eca3,0x7c00100,0x230400,\n-0x7000eca3,0xc000010,0x448000,0x7000ed95,0x6800000,0x1329800,0x7000ed95,0x7c00100,0x230400,0x7000ed95,0xc000010,0x448000,0x7000ee1c,0x2802500,0x1862460,0x7000ee1c,\n-0x6800000,0x1329800,0x7000ee1c,0x7c00100,0x1830000,0x7000ee1c,0x7c00900,0x1830000,0x7000ef8f,0x4000000,0x200000,0x7000ef8f,0x7c00100,0x230400,0x7000f08e,0x4000000,\n-0x200000,0x7000f08e,0x7c00100,0x230400,0x7000f159,0x2802100,0x962460,0x7000f159,0x7c00100,0x230400,0x7000f200,0x4000000,0x200000,0x7000f200,0x4000000,0x1200000,\n-0x7000f200,0x4000000,0x1710000,0x7000f34b,0x2802400,0x962460,0x7000f34b,0x4000000,0x200000,0x7000f34b,0x4000010,0x400000,0x7000f34b,0x6800000,0x1329800,0x7000f34b,\n-0x7c00100,0x230400,0x7000f34b,0x7c00900,0x230400,0x7000f34b,0xc000010,0x448000,0x7000f490,0x4000000,0x200000,0x7000f490,0x7c00100,0x230400,0x7000f5a5,0x7c00100,\n-0x230400,0x7000f67b,0x4000000,0x200000,0x7000f67b,0x4000010,0x200000,0x7000f67b,0x7c00100,0x230400,0x7000f8a6,0x2802100,0x962460,0x7000f8a6,0x2802400,0x962460,\n-0x7000f8a6,0x2806400,0x962460,0x7000f8a6,0x4000000,0x500000,0x7000f8a6,0x4000010,0xb00000,0x7000f8a6,0x4000800,0x200000,0x7000f8a6,0x6800100,0x962540,0x7000f8a6,\n-0x6800100,0x962541,0x7000f8a6,0x7c00100,0x230400,0x7000f8a6,0xc000010,0x448000,0x7000f921,0x4000000,0x200000,0x7000fa00,0x4000000,0x200000,0x7000fb9e,0x2802100,\n-0x962460,0x7000fb9e,0x2802400,0x962460,0x7000fb9e,0x2806400,0x962460,0x7000fb9e,0x4000000,0x200000,0x7000fb9e,0x6800000,0x1329800,0x7000fb9e,0x6800100,0x962540,\n-0x7000fb9e,0x6800100,0x962541,0x7000fb9e,0x7c00100,0x230400,0x7000fc92,0x4000000,0x200000,0x7000fc92,0x6800000,0x1329800,0x7000fc92,0x7c00100,0x220400,0x7000fc92,\n-0x7c00100,0x230400,0x7000fc92,0x7c00100,0x250400,0x700acd00,0x4000000,0x34e00000,0x700acd00,0x4000000,0xb6800000,0x700ace00,0x4000000,0x34e00000,0x700acf00,0x4000000,\n-0x34e00000,0x700acf00,0x4000000,0xb6800000,0x7040dffb,0x4000000,0x200000,0x7040f7ff,0x80000,0x918820,0x7080af98,0x2802400,0x962460,0x7080dffb,0x2802400,0x962460,\n-0x70c0e4fd,0x2802100,0x962460,0x70c0e4fd,0x2802400,0x962460,0x70c0e4fd,0x6800100,0x962540,0x8000120f,0x7c00100,0x230400,0x80001524,0x7c00100,0x230400,0x8000171a,\n-0x7c00100,0x230400,0x80002006,0x7c00100,0x220400,0x80002006,0x7c00100,0x250400,0x80002a00,0x4000000,0x1500000,0x80002d00,0x4000000,0x200000,0x80005208,0x2802400,\n-0x962460,0x80005c00,0x4000000,0x200000,0x80007300,0x24000000,0x200000,0x80009519,0x7c00100,0x220400,0x80009519,0x7c00100,0x230400,0x80009519,0x7c00100,0x250400,\n-0x80009865,0x7c00100,0x230400,0x8000a008,0x2802100,0x962460,0x8000b30a,0x4000000,0x500000,0x8000b30a,0x7c00100,0x230400,0x8000cd00,0x4000000,0x4e00000,0x8000d202,\n-0x2802500,0x962460,0x8000d202,0x7c00100,0x230400,0x8000d68d,0x4000000,0x200000,0x8000d997,0x2802000,0x962460,0x8000d997,0x2802400,0x962460,0x8000d997,0x4000000,\n-0x400000,0x8000d997,0x4000000,0x500000,0x8000d997,0x7c00100,0x230400,0x8000d997,0xc000010,0x448000,0x8000e489,0x2802100,0x962460,0x8000e489,0x7c00100,0x230400,\n-0x8000e719,0x7c00100,0x220400,0x8000f8a6,0x2802100,0x962460,0x8000f8a6,0x7c00100,0x230400,0x8000f8a6,0xc000010,0x448000,0x8000fda1,0x2802100,0x1862460,0x8000fda1,\n-0x2806400,0x1862460,0x8000fda1,0x4000000,0x1800000,0x8000fda1,0x6800000,0x1329800,0x8000fda1,0x6800100,0x1862540,0x8000fda1,0x7c00100,0x1830000,0x8000fda1,0xc000010,\n-0x448000,0x8000fe9c,0x7c00100,0x230400,0x8000fe9c,0x7c00100,0x830400,0x8000fe9c,0x7c00100,0x1430400,0x8000ff06,0x7c00100,0x220400,0x80010165,0x7c00100,0x230400,\n-0x800102a2,0x4000000,0x200000,0x800102a2,0x7c00100,0x230400,0x800103a4,0x7c00100,0x230400,0x800103a4,0xc000010,0x448000,0x8001044c,0x4000000,0x200000,0x8001044c,\n-0x7c00100,0x220400,0x8001044c,0x7c00100,0x250400,0x80010670,0x2802000,0x962460,0x80010670,0x4000000,0x200000,0x80010670,0x4000010,0x400000,0x80010670,0xc000010,\n-0x448000,0x800a4711,0x7c40300,0xe30000,0x800acd00,0x4000000,0x34e00000,0x800acd00,0x4000000,0x7a902460,0x800ace00,0x4000000,0x34e00000,0x800acf00,0x4000000,0x34e00000,\n-0x800b0011,0x7c40300,0xe30000,0x800b0500,0x4000000,0x34e00000,0x800b0500,0x4000000,0xb6800000,0x90001615,0x7c00100,0x230400,0x9000171a,0x4000000,0x200000,0x9000171a,\n-0x7c00100,0x230400,0x90003000,0x24000000,0x200000,0x90007f0e,0x4000000,0x200000,0x90008301,0x2802000,0x962460,0x90008e00,0x24000000,0x400000,0x90009519,0x7c00100,\n-0x250400,0x9000a16f,0x2802100,0x962460,0x9000d200,0x80000000,0x218960,0x9000d202,0x2802000,0x962460,0x9000d202,0x2802100,0x962460,0x9000d202,0x7c00100,0x230400,\n-0x9000e59d,0x2802100,0x962460,0x900107a7,0x2802100,0x962460,0x900107a7,0x2802400,0x962460,0x900107a7,0x2802c00,0x962460,0x900107a7,0x4000000,0x1400000,0x900107a7,\n-0x6800000,0x1329800,0x900107a7,0x7c00100,0x220400,0x900107a7,0x7c00100,0x250400,0x900108a8,0x2802100,0x962460,0x900108a8,0x2806400,0x962460,0x900108a8,0x4000000,\n-0x200000,0x900108a8,0x4000000,0x400000,0x900108a8,0x4000010,0x400000,0x900108a8,0x6800000,0x1329800,0x900108a8,0x6800100,0x962540,0x900108a8,0x7c00100,0x230400,\n-0x900108a8,0xc000010,0x448000,0x90010908,0x7c00100,0x220400,0x90010a38,0x2802100,0x962460,0x90010ca9,0x2802100,0x962460,0x90010ca9,0x4000000,0x500000,0x90010ca9,\n-0x4000010,0xb00000,0x90010ca9,0x6800100,0x962540,0x90010ca9,0x7c00100,0x230400,0x90010d1b,0x4000000,0x500000,0x90010eaa,0x2802100,0x962460,0x90010eaa,0x2802400,\n-0x962460,0x90010eaa,0x2806400,0x962460,0x90010eaa,0x4000000,0x200000,0x90010eaa,0x4000000,0x400000,0x90010eaa,0x4000010,0x400000,0x90010eaa,0x6800000,0x1329800,\n-0x90010eaa,0x6800100,0x962540,0x90010eaa,0x7c00100,0x230400,0x90010eaa,0xc000010,0x448000,0x90010fab,0x7c00100,0x220400,0x90010fab,0x7c00100,0x250400,0x9002c300,\n-0x4000000,0x100000,0x900ac400,0x4000000,0xe0000d,0x900acd00,0x4000000,0x34e00000,0x900acd00,0x4000000,0xb6800000,0x900acf00,0x4000000,0x34e00000,0x900b0500,0x4000000,\n-0xe00000,0x900b0500,0x4000000,0x34e00000,0x900b0500,0x4000000,0xb6800000,0x900b0b9a,0x7c00900,0x1230400,0x900b109a,0x7c00300,0xe30000,0x900b119a,0x7c00300,0xe30000,\n-0x90408e06,0x24000000,0x400000,0xa0001004,0x4000000,0x200000,0xa0001004,0x7c00100,0x230400,0xa000120f,0x2802100,0x962460,0xa000120f,0x2802400,0x962460,0xa000171a,\n-0x2802100,0x962460,0xa000171a,0x2806400,0x962460,0xa0002a00,0x4000000,0x1600000,0xa0003000,0x24000000,0x200000,0xa000581e,0x7c00100,0x230400,0xa0007300,0x24000000,\n-0x200000,0xa0008301,0x2802400,0x962460,0xa0008e00,0x24000000,0x400000,0xa000cf00,0x4000000,0x4e00000,0xa0010500,0x4000000,0x200000,0xa00114af,0x2802100,0x962460,\n-0xa00114af,0x2802400,0x962460,0xa00114af,0x2806400,0x962460,0xa00114af,0x6800000,0x1329800,0xa00114af,0x7c00100,0x230400,0xa00114af,0x7c00100,0x230560,0xa00116b0,\n-0x2802100,0x962460,0xa00116b0,0x2802800,0x962460,0xa00116b0,0x2806400,0x962460,0xa00116b0,0x4000000,0x400000,0xa00116b0,0x4000000,0x500000,0xa00116b0,0x4000010,\n-0x400000,0xa00116b0,0x6800100,0x962540,0xa00116b0,0x7c00100,0x230400,0xa00116b0,0x7c00100,0x230560,0xa00116b0,0xc000010,0x448000,0xa0011722,0x7c00100,0x230400,\n-0xa00118b1,0x2802000,0x962460,0xa00118b1,0x2802100,0x962460,0xa00118b1,0x2806400,0x962460,0xa00118b1,0x4000000,0x200000,0xa00118b1,0x4000000,0x400000,0xa00118b1,\n-0x4000000,0x500000,0xa00118b1,0x6800100,0x962540,0xa00118b1,0x7c00100,0x230400,0xa00118b1,0x7c00100,0x230560,0xa00118b1,0xc000010,0x448000,0xa00a4005,0x7c00100,\n-0xe30400,0xa00a4711,0x7c40300,0xe30000,0xa00ac400,0x4000000,0x4e00000,0xa00acb14,0x7c00100,0xe30000,0xa00acf00,0x4000000,0x34e00000,0xa00b0500,0x4000000,0x34e00000,\n-0xa00b0500,0x4000000,0xb6800000,0xa00b0b96,0x7c00900,0x1230400,0xa00b1211,0x7c40300,0xe30000,0xa00b1314,0x7c00100,0xe30000,0xa00b1596,0x7c00300,0xe30000,0xa040afae,\n-0x6800400,0x962540,0xb0000a03,0x7c00100,0x220400,0xb0000b13,0x7c00100,0x2633800,0xb0001004,0x2802000,0x962460,0xb0001110,0x4000000,0x200000,0xb0001524,0x2802000,\n-0x962460,0xb0001615,0x4000000,0x500000,0xb000251b,0x7c00100,0x230400,0xb0007300,0x24000000,0x200000,0xb0008939,0x4000000,0x200000,0xb0008939,0x7c00100,0x230400,\n-0xb0008e00,0x24000000,0x200000,0xb0008e00,0x24000000,0x400000,0xb0008e00,0x24000010,0x400000,0xb0009257,0x2802000,0x962460,0xb0009257,0x4000000,0x1600000,0xb0009519,\n-0x7c00100,0x220400,0xb0009519,0x7c00100,0x250400,0xb0009a00,0x4000000,0x200000,0xb000b30a,0x2802100,0x962460,0xb000b30a,0x7c00100,0x230400,0xb000c178,0x80000000,\n-0x218960,0xb000c300,0x4000000,0x4200000,0xb000d202,0x2802000,0x962460,0xb000d476,0x6800100,0x962540,0xb000d476,0x7c00100,0x230400,0xb000e300,0x4000000,0x4e00000,\n-0xb000fda1,0x7c00100,0x1830000,0xb0010eaa,0x2802000,0x962460,0xb00116b0,0x7c00100,0x230400,0xb0011900,0x4000000,0x4e00000,0xb0011ab2,0x2802100,0x962460,0xb0011ab2,\n-0x2802400,0x962460,0xb0011ab2,0x2806400,0x962460,0xb0011ab2,0x4000000,0x200000,0xb0011ab2,0x6800100,0x962540,0xb0011ab2,0x7c00100,0x230400,0xb0011b0c,0x7c00100,\n-0x230400,0xb0011cb3,0x2802100,0x962460,0xb0011cb3,0x2806400,0x962460,0xb0011cb3,0x6800000,0x1329800,0xb0011cb3,0x6800100,0x962540,0xb0011cb3,0x7c00100,0x230400,\n-0xb0011db6,0x2802500,0x962460,0xb0011db6,0x6800000,0x1329800,0xb0011db6,0x7c00100,0x230400,0xb0011db6,0x7c00500,0x230400,0xb0011e00,0x4000000,0x200000,0xb0011e00,\n-0x4000000,0x1500000,0xb0011fb4,0x2802100,0x962460,0xb0011fb4,0x6800100,0x962540,0xb0011fb4,0x7c00100,0x230400,0xb0011fb4,0xc000010,0x248000,0xb0012000,0x4000000,\n-0x200000,0xb00121b5,0x4000000,0x200000,0xb00121b5,0x4000010,0x400000,0xb00121b5,0x7c00100,0x220400,0xb00121b5,0x7c00100,0x250400,0xb00121b5,0xc000010,0x448000,\n-0xb00122b8,0x4000000,0x200000,0xb00122b8,0x7c00100,0x230400,0xb00123b7,0x2802400,0x962460,0xb00123b7,0x4000000,0x200000,0xb00123b7,0x7c00100,0x230400,0xb00123b7,\n-0xc000010,0x248000,0xb00a4005,0x7c00100,0xe30400,0xb00a4711,0x7c40300,0xe30000,0xb00acf00,0x4000000,0x34e00000,0xb00b0500,0x4000000,0x34e00000,0xb00b0500,0x4000000,\n-0x3ce00000,0xb00b0500,0x4000000,0xb6800000,0xb00b109a,0x7c00300,0xe30000,0xb080e47e,0x2802000,0x962460,0xc0001524,0x4000000,0x500000,0xc0001a18,0x2806400,0x1862460,\n-0xc0001a18,0x7c00100,0x1830000,0xc0007300,0x24000000,0x200000,0xc0008e00,0x24000010,0x400000,0xc0009519,0x7c00100,0x220400,0xc0009519,0x7c00100,0x250400,0xc000c300,\n-0x4000000,0x420000f,0xc000d85c,0x2802100,0x962460,0xc000d85c,0x6800100,0x962540,0xc000d85c,0x7c00100,0x230400,0xc000dc99,0x7c00100,0x230400,0xc000e719,0x7c00100,\n-0x220400,0xc00107a7,0x7c00100,0x230400,0xc0010eaa,0x7c00100,0x230400,0xc00116b0,0x7c00100,0x230560,0xc0011900,0x4000000,0x4200000,0xc0012447,0,0x818820,\n-0xc0012447,0,0xc18820,0xc0012447,0,0x1418820,0xc00125b9,0x7c00100,0x230400,0xc00126bb,0x2802100,0x962460,0xc00126bb,0x2806400,0x962460,0xc00126bb,\n-0x4000000,0x500000,0xc00126bb,0x6800100,0x962540,0xc00126bb,0x7c00100,0x230400,0xc00127ba,0x2802400,0x962460,0xc00127ba,0x4000000,0x200000,0xc00127ba,0x6800000,\n-0x1329800,0xc00127ba,0x7c00100,0x230400,0xc00127ba,0x7c00900,0x230400,0xc0012800,0x4000000,0x200000,0xc0012b23,0x4000000,0x200000,0xc0012b23,0x4000000,0x400000,\n-0xc0012b23,0x4000000,0x1500000,0xc0012cbc,0x2802400,0x962460,0xc0012cbc,0x4000000,0x1600000,0xc0012cbc,0x6800000,0x1329800,0xc0012cbc,0x7c00100,0x230400,0xc00acf00,\n-0x4000000,0x34e00000,0xc00ae300,0x4000000,0x34e00000,0xc00b0500,0x4000000,0x34e00000,0xc00b0500,0x4000000,0xb6800000,0xc00b0b00,0x4000000,0x1200000,0xc00b0b00,0x7c00900,\n-0x1230400,0xc00b109a,0x7c00300,0xe30000,0xc00b2914,0x7c00100,0x2530000,0xc00b2916,0x7c00100,0x2530c00,0xc00b2a00,0x4000000,0x34e00000,0xc040af55,0x7c00100,0x230400,\n-0xc0c12b80,0x4000000,0x200000,0xc14a44bf,0x4000000,0xe0000d};\n+0,0,0x3c67,0,0,0x3e67,0,0,0x4067,0,0,0x4167,0,0,0x4467,0,\n+0,0x4867,0,0,0x4967,0,0,0x4a67,0,0,0x5067,0,0,0x5167,0,0,\n+0x5467,0,0,0x5567,0,0,0x5667,0x80000,0x20,0x5767,0,0,0x5867,0,0,0x5967,\n+0,0,0x5b67,0,0,0x5c67,0,0,0x5d67,0,0,0x6067,0x80000,0x20,0x6267,0,\n+0,0x6367,0,0,0x6467,0,0,0x6567,0,0,0x6f67,0,0,0x7067,0,0,\n+0x7367,0x20000000,0,0x7567,0,0,0x7667,0,0,0x7767,0,0,0x7867,0,0,0x7a67,\n+0,0,0x7b67,0,0,0x7c67,0,0,0x7e67,0,0,0x7f67,0,0,0x8167,0,\n+0,0x8267,0,0,0x8367,0,0,0x8467,0,0,0x8567,0,0,0x8667,0,0,\n+0x8767,0,0,0x8867,0,0,0x8967,0,0,0x8b67,0,0,0x8c67,0,0,0x8e67,\n+0x20000000,0,0x8f67,0,0,0x9067,0,0,0x9167,0,0,0x9267,0,0,0x9367,0,\n+0,0x9567,0,0,0x9667,0,0,0x9767,0,0,0x9867,0,0,0x9967,0,0,\n+0x9a67,0,0,0x9c67,0,0,0x9f67,0,0,0xa167,0,0,0xa367,0,0,0xa467,\n+0,0,0xa567,0,0,0xa667,0,0,0xa767,0,0,0xa867,0,0,0xa967,0,\n+0,0xaa67,0,0x4e00000,0xab67,0,0x4e00000,0xac67,0,0,0xad67,0,0,0xae67,0,0,\n+0xaf67,0,0,0xb167,0,0,0xb267,0,0,0xb467,0,0,0xb567,0,0,0xb767,\n+0,0,0xb867,0,0,0xb967,0,0,0xba67,0,0,0xbc67,0,0,0xbd67,0,\n+0,0xbe67,0,0,0xbf67,0,0,0xc067,0,0,0xc167,0,0,0xc267,0,0,\n+0xc367,0,0x4e00000,0xc467,0,0x4e00000,0xc667,0,0,0xc767,0,0,0xc867,0,0,0xc967,\n+0,0,0xca67,0,0,0xcc67,0,0x4e00000,0xcf67,0,0x4e00000,0xd067,0,0x4e00000,0xd267,0,\n+0,0xd367,0,0,0xd467,0,0,0xd567,0,0,0xd667,0,0,0xd867,0,0,\n+0xda67,0,0,0xdb67,0,0,0xdc67,0,0,0xdd67,0,0,0xde67,0,0,0xdf67,\n+0,0,0xe067,0,0,0xe167,0,0,0xe267,0,0,0xe367,0,0x4e00000,0xe467,0,\n+0,0xe567,0,0,0xe667,0,0,0xe767,0,0,0xe867,0,0,0xe967,0,0,\n+0xea67,0,0,0xeb67,0,0,0xec67,0,0,0xed67,0,0,0xee67,0,0,0xef67,\n+0,0,0xf167,0,0,0xf367,0,0,0xf567,0,0,0xf667,0,0,0xf767,0,\n+0,0xf867,0,0,0xf967,0,0,0xfa67,0,0x4e00000,0xfb67,0,0,0xfc67,0,0,\n+0xfd67,0,0,0xfe67,0,0,0x10167,0,0,0x10267,0,0,0x10367,0,0,0x10467,\n+0,0,0x10567,0,0x4e00000,0x10667,0,0,0x10767,0,0,0x10867,0,0,0x10967,0,\n+0,0x10a67,0,0,0x10b67,0,0,0x10c67,0,0,0x10d67,0,0,0x10e67,0,0,\n+0x10f67,0,0,0x11067,0,0,0x11367,0,0,0x11467,0,0,0x11567,0,0,0x11667,\n+0,0,0x11767,0,0,0x11867,0,0,0x11967,0,0x4e00000,0x11a67,0,0,0x11b67,0,\n+0,0x11c67,0,0,0x11d67,0,0,0x11e67,0,0,0x11f67,0,0,0x12067,0,0,\n+0x12167,0,0,0x12267,0,0,0x12367,0,0,0x12467,0,0,0x12567,0,0,0x12667,\n+0,0,0x12767,0,0,0x12867,0,0,0x12967,0,0,0x12a67,0,0x4e00000,0x12b67,0,\n+0,0x12c67,0,0,0x12d67,0,0,0x12f67,0,0,0x13067,0,0,0x13167,0,0,\n+0x13267,0,0,0x13367,0,0,0x13467,0,0,0xa0067,0,0xe00000,0xa4767,0,0xe00000,0xa4f67,\n+0,0xe00000,0xa5e67,0,0xe00000,0xa5f67,0,0xe00000,0xac567,0,0xe00000,0xad167,0,0xe00000,0xb0067,0,\n+0xe00000,0xb1267,0,0xe00000,0xb2e67,0,0xe00000,0x11000100,0,0x900020,0x11000100,0x40000001,0x440020,0x11000100,0x40000001,0x643020,\n+0x11000100,0x40000001,0xa5a040,0x11000100,0x40000001,0x116a8a0,0x11000200,0,0x900020,0x11000200,0x4000001,0xc4000b,0x11000200,0x7c00100,0x220402,0x11000200,\n+0x24000000,0x14200000,0x11000200,0x24000008,0x1710000,0x11000200,0x40000001,0x1d3b020,0x11000219,0x7c00100,0x220401,0x11000219,0x7c00100,0x250401,0x11000319,0x7c00100,\n+0x220401,0x11000319,0x7c00100,0x220402,0x11000319,0x7c00100,0x250400,0x11000319,0x7c00100,0x250401,0x11000419,0x7c00100,0x220400,0x11000419,0x7c00100,0x220401,\n+0x11000419,0x7c00100,0x220402,0x11000419,0x7c00100,0x230400,0x11000419,0x7c00100,0x250400,0x11000419,0x7c00100,0x250401,0x11000419,0x7c00100,0x250402,0x11000519,\n+0x7c00100,0x220400,0x11000519,0x7c00100,0x230400,0x11000600,0x4000400,0x200002,0x11000600,0x4000400,0x200400,0x11000600,0x7c00500,0x220400,0x11000600,0x7c00500,\n+0x230400,0x11000600,0x7c00500,0x530400,0x11000600,0x7c00d00,0x230400,0x11000619,0x7c00500,0x22040f,0x11000800,0x4000010,0x1001401,0x11000800,0x4000400,0x200001,\n+0x11000800,0x6800010,0x201001,0x11000800,0x7c00500,0x230401,0x11000807,0x7c00100,0x220400,0x11000807,0x7c00100,0x250400,0x1100080e,0x4000400,0x200000,0x1100080e,\n+0x4000400,0x200002,0x1100080e,0x7000500,0x220402,0x1100080e,0x7c00100,0x220400,0x1100080e,0x7c00100,0x220401,0x1100080e,0x7c00100,0x220402,0x1100080e,0x7c00100,\n+0x250400,0x1100080e,0x7c00100,0x250401,0x1100080e,0x7c00120,0x220402,0x1100080e,0x7c00120,0x250402,0x11000908,0x4000000,0x200000,0x11000908,0x7c00100,0x220400,\n+0x11000908,0x7c00100,0x220401,0x11000908,0x7c00100,0x250400,0x11000908,0x7c00100,0x250401,0x11000a03,0x4000000,0x200400,0x11000a03,0x4000000,0x201000,0x11000a03,\n+0x4000000,0x270000,0x11000a03,0x7c00100,0x220400,0x11000a03,0x7c00100,0x220402,0x11000a03,0x7c00100,0x250400,0x11000a03,0x7c00500,0x230400,0x11000a03,0xc000010,\n+0x1049400,0x11000b13,0x2802500,0x962460,0x11000b13,0x4000000,0x200000,0x11000b13,0x4000000,0x201000,0x11000b13,0x4000000,0x230400,0x11000b13,0x4000002,0x400000,\n+0x11000b13,0x4000010,0x200000,0x11000b13,0x7c00100,0x2633800,0x11000c00,0x80000000,0x218960,0x11000c02,0x2802100,0x962460,0x11000c02,0x2802400,0x962460,0x11000c02,\n+0x4000000,0x200000,0x11000c02,0x4000000,0x1329400,0x11000c02,0x4000000,0x1329800,0x11000c02,0x4000000,0x1500000,0x11000c02,0x6800000,0x1329800,0x11000c02,0x7c00100,\n+0x230400,0x11000c02,0x7c00100,0x230401,0x11000c02,0x7c00100,0x230402,0x11000c02,0x7c00500,0x230400,0x11000c02,0x7d00100,0x230400,0x11000f01,0x2802400,0x962460,\n+0x11000f0a,0x2802100,0x962460,0x11000f0a,0x2802400,0x962460,0x11000f0a,0x2806400,0x962460,0x11000f0a,0x4000000,0x200000,0x11000f0a,0x6800100,0x962540,0x11000f0a,\n+0x7c00100,0x230400,0x11000f0a,0x7c00100,0x230401,0x11001004,0x2802100,0x962460,0x11001004,0x2802400,0x962460,0x11001004,0x2806400,0x962460,0x11001004,0x4000000,\n+0x200000,0x11001004,0x4000000,0x1500000,0x11001004,0x6800100,0x962540,0x11001004,0x6800100,0x962541,0x11001004,0x7c00100,0x230400,0x11001004,0x7c00100,0x230401,\n+0x11001110,0x2802100,0x962460,0x11001110,0x2802400,0x962460,0x11001110,0x2806400,0x962460,0x11001110,0x6800100,0x962540,0x11001110,0x7c00100,0x230400,0x11001110,\n+0x7c00100,0x230401,0x1100120f,0x2802100,0x962460,0x1100120f,0x2802400,0x962460,0x1100120f,0x2806400,0x962460,0x1100120f,0x6800100,0x962540,0x1100120f,0x7c00100,\n+0x230400,0x1100131f,0x2802100,0x962460,0x1100131f,0x2802400,0x962460,0x1100131f,0x2806400,0x962460,0x1100131f,0x4000000,0x200000,0x1100131f,0x6800000,0x1329800,\n+0x1100131f,0x6800100,0x962540,0x1100131f,0x6800100,0x962541,0x1100131f,0x7c00100,0x230400,0x1100131f,0x7c00100,0x230401,0x11001423,0x2802100,0x962460,0x11001423,\n+0x2806400,0x962460,0x11001423,0x6800100,0x962540,0x11001423,0x6800100,0x962541,0x11001423,0x7c00100,0x230400,0x11001423,0x7c00100,0x230401,0x11001524,0x2802100,\n+0x962460,0x11001524,0x2802100,0x962461,0x11001524,0x2806400,0x962460,0x11001524,0x6800000,0x1329800,0x11001524,0x6800100,0x962540,0x11001524,0x7c00100,0x230400,\n+0x11001615,0x2802100,0x962460,0x11001615,0x2806400,0x962460,0x11001615,0x6800100,0x962540,0x11001615,0x6800100,0x962541,0x11001615,0x7c00100,0x230400,0x1100171a,\n+0x2802100,0x962460,0x1100171a,0x2806400,0x962460,0x1100171a,0x6800000,0x1329800,0x1100171a,0x6800100,0x962540,0x1100171a,0x6800100,0x962541,0x1100171a,0x7c00100,\n+0x230400,0x11001900,0x4000000,0x1600000,0x11001926,0x2802100,0x1862460,0x11001926,0x2802400,0x1862460,0x11001926,0x2806100,0x1862460,0x11001926,0x4000000,0x200000,\n+0x11001926,0x4000010,0x400000,0x11001926,0x6800000,0x1329800,0x11001926,0x7800100,0x1830142,0x11001926,0x7c00100,0x1830000,0x11001926,0x7c00900,0x1830000,0x11001926,\n+0x7e00100,0x1830000,0x11001a18,0x2802100,0x1862460,0x11001a18,0x2802400,0x1862460,0x11001a18,0x6800000,0x1329800,0x11001a18,0x7800100,0x1830142,0x11001a18,0x7c00100,\n+0x1830000,0x11001a18,0x7c00100,0x1830002,0x11001a18,0x7c00900,0x1830000,0x11001a18,0x7e00100,0x1830000,0x11001d0c,0x7c00100,0x230400,0x11001d0c,0x7c00100,0x250400,\n+0x11001e12,0x7c00100,0x2230500,0x11001e12,0x7c00100,0x2330520,0x11001e12,0x7c80100,0x2330520,0x11002619,0x7c00100,0x220401,0x11002619,0x7c00100,0x220402,0x11002619,\n+0x7c00100,0x250401,0x1100270e,0x4000400,0x200001,0x1100270e,0x4000400,0x200002,0x1100270e,0x4000400,0x500001,0x1100270e,0x7c00100,0x220401,0x1100270e,0x7c00100,\n+0x250401,0x11002800,0x80000,0x918820,0x11002800,0x80000,0x1c18020,0x11002800,0x180000,0x918820,0x11002800,0x4000001,0x445801,0x11002800,0x4000001,0x445802,\n+0x11002800,0x4000001,0xc4000b,0x11002800,0x6800000,0x201c00,0x11002800,0x6800020,0x201c00,0x11002800,0x24000000,0x200000,0x11002800,0x24000000,0x200002,0x11002800,\n+0x24000000,0x810000,0x11002800,0x24000000,0x1410000,0x11002800,0x24000000,0x1500000,0x11002800,0x24000000,0x1500002,0x11002800,0x24000002,0x400000,0x11002800,0x24000006,\n+0xc0000b,0x11002800,0x24000008,0x1410000,0x11002800,0x24000008,0x1710000,0x11002800,0x24000020,0x1001400,0x11002800,0x24000020,0x1500002,0x11002800,0x2c000010,0x1248000,\n+0x11002800,0x2c000010,0x15248002,0x11002800,0x40000001,0x63b020,0x11002800,0x40080000,0x918820,0x11002801,0x80000,0xaa65620,0x11002801,0x82000,0x962460,0x11002900,\n+0x4000000,0x20000e,0x11002900,0x4000000,0x20000f,0x11002900,0x4000020,0x20000e,0x11002900,0x4000020,0x20000f,0x11002900,0x4000020,0x81000e,0x11002900,0x4000020,\n+0x81000f,0x11002900,0x4000020,0x141000e,0x11002900,0x4000020,0x141000f,0x11002900,0x4000022,0x20000e,0x11002900,0x4000022,0x20000f,0x11002a00,0x4000000,0x1500000,\n+0x11002a00,0x4000000,0x1600000,0x11002a00,0x4000000,0x1600002,0x11002b01,0x2000,0x962460,0x11002b01,0x2802020,0x962460,0x11002c00,0x4000000,0x200000,0x11002c00,\n+0x4000000,0x200002,0x11002c00,0x4000000,0x20000f,0x11002c00,0x4000020,0x200000,0x11002c00,0x7c00000,0x200000,0x11002c00,0x7c00020,0x200000,0x11002c00,0x7c00120,\n+0x220405,0x11002c00,0x7c00120,0x230402,0x11002c00,0x7c00120,0x250402,0x11002c00,0x7c00120,0x250405,0x11002c19,0x7c00100,0x250400,0x11002c19,0x7c00100,0x250401,\n+0x11002d00,0x4000000,0x100006,0x11002d00,0x4000000,0x200006,0x11002d19,0x7c00100,0x220402,0x11002d19,0x7c00100,0x230400,0x11002d19,0x7c00100,0x250402,0x11002e00,\n+0x24000000,0x200000,0x11002e00,0x24000020,0x200000,0x11002e00,0x24000020,0x200001,0x11002e00,0x24000020,0x14200000,0x11002f00,0x24000020,0x200000,0x11002f00,0x24000020,\n+0x200001,0x11002f00,0x24000020,0x200002,0x11002f00,0x24000020,0xf00000,0x11002f00,0x24000020,0x1600000,0x11002f00,0x24000022,0x1600000,0x11003000,0x24000000,0x200000,\n+0x11003000,0x24000000,0x14200000,0x11003000,0x24000020,0x200000,0x11003000,0x24000020,0x810000,0x11003000,0x24000020,0x1410000,0x11003100,0x24000000,0x200000,0x11003200,\n+0x24000000,0x200000,0x11003300,0x4000000,0x100003,0x11003400,0x24000000,0x100000,0x11003400,0x24000000,0x200000,0x11003500,0x24000000,0x200000,0x11003600,0x24000000,\n+0x200000,0x11003600,0x24000000,0x14200000,0x11003600,0x24000020,0x200000,0x11003700,0x24000000,0x200000,0x11003700,0x24000000,0x4200000,0x11003700,0x24000000,0x4e00000,\n+0x11003700,0x24000000,0x14200000,0x11003700,0x24000000,0x14e00000,0x11003700,0x24000000,0x96800000,0x11003700,0x24000020,0x4200000,0x11003800,0x4000000,0x100000,0x11003800,\n+0x24000000,0x200000,0x11003800,0x24000000,0xb00000,0x11003800,0x24000000,0x1710000,0x11003800,0x24000000,0x4200000,0x11003800,0x24000000,0x4e00000,0x11003800,0x24000000,\n+0x14200000,0x11003800,0x24000000,0x14b00000,0x11003800,0x24000000,0x14e00000,0x11003800,0x24000000,0x96800000,0x11005003,0x7c00100,0x220402,0x11005013,0x2802500,0x962460,\n+0x11005013,0x4000020,0x200005,0x11005013,0x7c00100,0x2633801,0x11005013,0x7c00100,0x2633802,0x11005013,0x7c00100,0x2633805,0x11005019,0x7c00100,0x220402,0x11005100,\n+0x24000000,0x810000,0x11005100,0x24000000,0x1410000,0x11005102,0x7000100,0x230408,0x11005102,0x7c00100,0x230404,0x11005102,0x7c00100,0x230407,0x11005102,0x7c00100,\n+0x230408,0x11005102,0x7c00100,0x230409,0x11005201,0x2802400,0x962460,0x11005500,0x80000,0x1e18820,0x11005502,0x7000100,0x230408,0x11005502,0x7c00100,0x230404,\n+0x11005502,0x7c00100,0x230407,0x11005502,0x7c00100,0x230408,0x11005502,0x7c00100,0x230409,0x11005667,0x1000,0,0x11020200,0x80004,0x418820,0x11020200,\n+0x4000000,0x100006,0x11020200,0x4000000,0x10000f,0x11020200,0x4000400,0x100002,0x11020200,0x4000400,0x500002,0x11020200,0x6800c00,0x101000,0x11020200,0x24000000,\n+0x100000,0x11020200,0x24000000,0x1400000,0x11020200,0x24000000,0x1500000,0x11020200,0x24000000,0x1600000,0x11020200,0x24000000,0x14200000,0x11020200,0x24000020,0x100000,\n+0x11020200,0x24000020,0x1600000,0x11020219,0x7c00100,0x12040f,0x11020219,0x7c00100,0x220400,0x11020219,0x7c00100,0x220401,0x11020219,0x7c00100,0x250400,0x11020319,\n+0x7c00100,0x220400,0x11020319,0x7c00100,0x220401,0x11020319,0x7c00100,0x220402,0x11020319,0x7c00100,0x250400,0x11020319,0x7c00100,0x250402,0x11020319,0x7d00100,\n+0x220402,0x11020419,0x7c00100,0x220401,0x11020519,0x7c00100,0x220400,0x11020600,0x4000400,0x100002,0x11020600,0x4000400,0x200400,0x11020600,0x7c00500,0x130400,\n+0x11020600,0x7c00d00,0x130400,0x11020701,0x2802400,0x962460,0x11020701,0x2802400,0x962461,0x11020701,0x2802400,0xc62460,0x1102080e,0x7c00100,0x220400,0x1102080e,\n+0x7c00100,0x250400,0x11020908,0x7c00100,0x220400,0x11020908,0x7c00100,0x220401,0x11020908,0x7c00100,0x250400,0x11020908,0x7c00100,0x250401,0x11022800,0x24000000,\n+0x100000,0x11022800,0x24000000,0x200000,0x11022800,0x24000000,0x200002,0x11022800,0x24000000,0x401000,0x11022800,0x24000000,0xf00002,0x11022800,0x24000000,0xf0ac02,\n+0x11022800,0x24000000,0x1500000,0x11022800,0x24000002,0x100000,0x11022800,0x24000002,0x370000,0x11022800,0x24000002,0x470000,0x11022800,0x24000006,0x400000,0x11022800,\n+0x24000008,0x1710000,0x11022800,0x24000008,0x1712c00,0x11022800,0x24000020,0x100000,0x11022800,0x24000020,0x1500000,0x11022800,0x24000020,0x1500002,0x11022900,0x4000000,\n+0x10000e,0x11022900,0x4000000,0x10000f,0x11022919,0x7c00100,0x12040f,0x11022c00,0x4000000,0x100002,0x11022c00,0x4000000,0x1500002,0x11022c00,0x4000000,0x1600002,\n+0x11022c00,0x4000000,0x1410000f,0x11022c00,0x7c00120,0x120405,0x11022c0e,0x7c00100,0x250401,0x11022c19,0x7c00100,0x150401,0x11022d00,0x4000000,0x100006,0x11022d00,\n+0x4000000,0x200006,0x11022d19,0x7c00100,0x120402,0x11022d19,0x7c00100,0x150402,0x11022e00,0x24000000,0x200000,0x11022e00,0x24000020,0x100000,0x11022e00,0x24000020,\n+0x14100000,0x11022f00,0x24000020,0x100000,0x11022f00,0x24000020,0x100001,0x11022f00,0x24000020,0x100002,0x11023000,0x24000000,0x100000,0x11023300,0x4000000,0x100002,\n+0x11023300,0x4000000,0x100003,0x11023300,0x4000100,0x120403,0x11023300,0x4000100,0x150403,0x11023300,0x4000100,0x14150403,0x11023400,0x24000000,0x100000,0x11023500,\n+0x24000000,0x100000,0x11023600,0x24000000,0x100000,0x11023600,0x24000020,0x100000,0x11023600,0x24000020,0x14100000,0x11023700,0x24000000,0x4100000,0x11023700,0x24000000,\n+0x4e00000,0x11023700,0x24000000,0x14100000,0x11023700,0x24000000,0x14e00000,0x11023700,0x24000020,0x100000,0x11023700,0x24000020,0x4100000,0x11023700,0x24000020,0x14100000,\n+0x11023800,0x4000000,0x100000,0x11023800,0x24000000,0x200000,0x11024e67,0,0,0x11025600,0x4000000,0x100000,0x11042a00,0x4000000,0x1600000,0x11045700,\n+0x4000000,0x20000a,0x11045700,0x4000020,0x20000a,0x11045712,0x7c00100,0xe3040a,0x11045712,0x7c80100,0xe3040a,0x11045716,0x7c00100,0xe30c0a,0x11045716,0x7c00100,\n+0x2530c0a,0x11063d00,0x4000001,0x445811,0x11065700,0x4000000,0x810011,0x11065700,0x4000000,0xe00011,0x11065700,0x4000000,0x1410011,0x11065700,0x4000000,0x1500011,\n+0x11065700,0x4000000,0x1600011,0x11065700,0x4000006,0xe70011,0x11065700,0x4000008,0xe00011,0x11065700,0x4000008,0xe02c11,0x11065700,0x4000010,0x871411,0x11065700,\n+0x4000010,0x1201411,0x11065700,0x4000010,0x1271011,0x11065700,0x4000020,0xe00011,0x11065700,0x4000400,0xe00011,0x11065700,0x4000420,0xe00011,0x11065700,0x6800000,\n+0xe01c11,0x11065700,0x6800040,0xe29811,0x11065700,0xc000010,0x80ac11,0x11065700,0xc000010,0xb48011,0x11065719,0x7c00100,0xe20411,0x11065719,0x7c00100,0xe50411,\n+0x11065719,0x7c00140,0xe20411,0x11065719,0x7c00140,0xe50411,0x11080100,0x6800000,0x201c00,0x11080100,0x68000c0,0x19329800,0x11080100,0x24000000,0x200000,0x11080100,\n+0x24000000,0x810000,0x11080100,0x24000000,0x1410000,0x11080100,0x24000000,0x1500000,0x11080100,0x24000000,0x1600000,0x11080100,0x24000000,0x1b00000,0x11080100,0x24000000,\n+0x2410000,0x11080100,0x24000000,0x18200000,0x11080100,0x24000006,0xd70000,0x11080100,0x24000008,0x1713c00,0x11080100,0x24000008,0x1714000,0x11080100,0x24000010,0x1001400,\n+0x11080100,0x24000010,0x1071000,0x11080100,0x24000010,0x1071400,0x11080100,0x24000020,0x200000,0x11080100,0x24000020,0x400000,0x11080100,0x24000020,0x1600000,0x11080100,\n+0x24000400,0x200000,0x11080100,0x24000420,0x200000,0x11080100,0x2c000010,0xb48000,0x11080100,0x2c000010,0x100ac00,0x11080100,0x44000001,0x1a45800,0x11080119,0x7c00100,\n+0x220400,0x11080119,0x7c00100,0x250400,0x11080119,0x7c001c0,0x220400,0x11080119,0x7c001c0,0x250400,0x11080200,0x4000400,0x200002,0x11080200,0x24000000,0x200000,\n+0x11080200,0x24000000,0x1500000,0x11080200,0x24000000,0x1600000,0x11080200,0x24000020,0x200000,0x110a1e12,0x7c00100,0x2130480,0x110a1e12,0x7c80100,0x2130480,0x110a3000,\n+0x24000000,0x34e00000,0x110a3000,0x24100000,0x810001,0x110a3000,0x24100000,0x1410001,0x110a3700,0x24000000,0x34200000,0x110a3d00,0x4000000,0xe00000,0x110a3d00,0x4000000,\n+0xe00002,0x110a3d00,0x24000000,0xe00000,0x110a3d11,0x7c00300,0xe30000,0x110a3d11,0x7c00900,0x1230400,0x110a3d12,0x2802400,0x962460,0x110a3e14,0x7c00100,0xe30000,\n+0x110a3e14,0x7c00100,0xe30001,0x110a3e14,0x7c00100,0x2530000,0x110a3e14,0x7c00900,0x1230000,0x110a3e14,0x7c00900,0x1230001,0x110a3f16,0x7c00100,0xe30c00,0x110a3f16,\n+0x7c00100,0xe30c01,0x110a3f16,0x7c00100,0x2530c00,0x110a3f16,0x7c00900,0x1230c00,0x110a3f16,0x7c00900,0x1230c01,0x110a4005,0x7c00100,0xe30400,0x110a4112,0x7c00100,\n+0xe30402,0x110a4112,0x7c80100,0xe30402,0x110a4400,0x4000000,0xe00000,0x110a4412,0x4000000,0xe00002,0x110a4412,0x4000000,0xe00003,0x110a4416,0x4000000,0xe00c03,\n+0x110a4500,0x4000000,0xe0000d,0x110a4516,0x4000000,0xe00c0d,0x110a4711,0x7c40300,0xe30000,0x110a4f11,0x7c00300,0xe30001,0x110a4f11,0x7c40300,0xe30000,0x110a5300,\n+0x4000000,0x810010,0x110a5300,0x4000000,0xe00002,0x110a5300,0x4000000,0xe00010,0x110a5300,0x4000000,0x1410010,0x110a5300,0x4000002,0xe70010,0x110a5300,0x4000008,\n+0x810010,0x110a5300,0x4000008,0x1410010,0x110a5300,0x6800000,0xe01c02,0x110a5300,0x6800000,0xe01c10,0x110a5400,0x4000000,0x81000c,0x110a5400,0x4000000,0xe0000c,\n+0x110a5400,0x4000000,0x141000c,0x110a5400,0x4000000,0x150000c,0x110a5400,0x4000000,0x160000c,0x110a5400,0x4000002,0xe7000c,0x110a5400,0x4000010,0x87140c,0x110a5400,\n+0x4000010,0xe7000c,0x110a5400,0x4000010,0x120140c,0x110a5400,0x4000010,0x127100c,0x110a5400,0x4000020,0xe0000c,0x110a5400,0x4000026,0xe7000c,0x110a5400,0xc000010,\n+0x80ac0c,0x110a5400,0xc000010,0xb4800c,0x11400c0c,0x4000010,0xb00000,0x11400c0c,0x4000010,0x1071400,0x11400c0c,0xc000010,0xb48000,0x11400c16,0x7c00900,0x230400,\n+0x11400f40,0xc000010,0x448000,0x11400f54,0xc000010,0x448000,0x11401d89,0x4000000,0x200000,0x11403dbf,0x4000000,0xe00000,0x114457b4,0x4000004,0x120000a,0x114457b4,\n+0x4000008,0x81000a,0x114457b4,0x4000008,0x141000a,0x114457b4,0x4000010,0x87000a,0x114457b4,0xc000010,0x84800a,0x114457bd,0x3802500,0x126246a,0x114457bd,0x7c00d00,\n+0x2530c0a,0x114a3db4,0x24000000,0x810000,0x114a3db4,0x24000000,0x1410000,0x114a3db4,0x24000008,0x810000,0x114a3db4,0x24000008,0x1410000,0x114a3db4,0x24000010,0x870000,\n+0x114a3db4,0x2c000010,0x848000,0x114a3dba,0x4000000,0xe00000,0x114a3dba,0x24000000,0xe00000,0x114a3dba,0x24000002,0x1200000,0x114a3dba,0x24000002,0x14e00000,0x114a3dba,\n+0x24000008,0x810000,0x114a3dba,0x24000008,0x1410000,0x114a3dbd,0x7c00900,0x930c00,0x114a3dbd,0x7c00900,0xe30c00,0x114a3dbf,0x7c00300,0xe30000,0x114a3ebd,0x7000400,\n+0x1200c02,0x114a3fb4,0x4000004,0x1200000,0x114a3fbd,0x7c00d00,0x2530c00,0x114a42bf,0x4000000,0xe00000,0x114a42bf,0x4000000,0xe0000f,0x114a44bf,0x4000000,0xe00002,\n+0x114a44bf,0x4000000,0xe00003,0x114a44bf,0x4000000,0x14e00003,0x114a45bf,0x4000000,0xe00002,0x114a45bf,0x4000000,0xe0000d,0x1180090a,0x2802400,0x962460,0x11800c1e,\n+0x2802100,0x962460,0x11800c1e,0x2802500,0x962460,0x11800f27,0x2802400,0x962460,0x11800f34,0x2802400,0x962460,0x11820700,0x2802400,0x962460,0x11820700,0x2802500,\n+0x962460,0x118a3dc0,0x2802400,0x962460,0x118a3ebd,0x2802400,0x962460,0x11c00904,0x2802400,0x962460,0x11c00908,0x2802400,0x962460,0x11c00c20,0xc000010,0xb48000,\n+0x11c00c23,0x6800000,0x1329800,0x11c00f6d,0x6800000,0x1329800,0x11c01072,0x6800000,0x1329800,0x11c01176,0x6800000,0x1329800,0x11c0127a,0x6800000,0x1329800,0x11c0147e,\n+0x4000000,0x200000,0x11c0147e,0x6800000,0x1329800,0x11c01682,0x6800000,0x1329800,0x11c051fa,0x7c00100,0x230408,0x20000067,0x1000,0,0x20000b13,0x2802400,\n+0x962460,0x20000b13,0x2802500,0x962460,0x20001b27,0x2802100,0x962460,0x20001b27,0x2802100,0x962461,0x20001b27,0x2802400,0x962460,0x20001b27,0x2806400,0x962460,\n+0x20001b27,0x2902100,0x962462,0x20001b27,0x4000000,0x200000,0x20001b27,0x4000000,0x400000,0x20001b27,0x4000000,0x500000,0x20001b27,0x4000000,0x810000,0x20001b27,\n+0x4000000,0xb00000,0x20001b27,0x4000000,0xc0000b,0x20001b27,0x4000000,0x1410000,0x20001b27,0x4000010,0xb00000,0x20001b27,0x4000010,0xc00000,0x20001b27,0x6800000,\n+0x1329800,0x20001b27,0x6800100,0x462540,0x20001b27,0x6800400,0x962540,0x20001b27,0x7c00100,0x230400,0x20001b27,0x7c00100,0x230401,0x20002619,0x7c00100,0x220401,\n+0x20002a00,0x4000000,0x1600000,0x20004b67,0,0x1900000,0x20004c67,0,0x1900000,0x20004d67,0,0x1900000,0x20006d67,0x1000,0,0x20006e67,\n+0x1000,0,0x20026d67,0,0,0x20026e67,0,0,0x200a4a12,0x7c00100,0x1f304c1,0x200a4a12,0x7c00100,0x20304e1,0x21005600,0x4000000,\n+0x700000,0x21022a00,0x4000000,0x1600000,0x30000419,0x7c00100,0x220400,0x30000419,0x7c00100,0x220401,0x30000419,0x7c00100,0x250400,0x30000419,0x7c00100,0x250401,\n+0x30000519,0x7c00100,0x220400,0x30000600,0x4000400,0x200400,0x30000600,0x7c00500,0x230400,0x30000605,0x4000400,0x200400,0x3000080e,0x7c00100,0x220400,0x30000908,\n+0x2000,0x962460,0x30000908,0x7c00100,0x220400,0x30000908,0x7c00100,0x220401,0x30000908,0x7c00100,0x250400,0x30000908,0x7c00100,0x250401,0x30000a03,0x4000006,\n+0x400400,0x30000c02,0x4000000,0x200000,0x30000c02,0x7c00100,0x230400,0x30000d22,0x2802100,0x962460,0x30000d22,0x2802400,0x962460,0x30000d22,0x2802500,0x962460,\n+0x30000d22,0x4000000,0x200000,0x30000d22,0x4000010,0x200000,0x30000d22,0x7c00100,0x230400,0x30000d22,0xc000010,0x248000,0x30000d22,0x80000000,0x218960,0x30000e25,\n+0x2802500,0x962460,0x30000e25,0x7c00100,0x230400,0x30001821,0x2802100,0x962460,0x30001821,0x2806400,0x962460,0x30001821,0x4000000,0x200000,0x30001821,0x6800100,\n+0x962540,0x30001821,0x6800100,0x962541,0x30001821,0x7c00100,0x230400,0x30001b27,0x2802100,0x962460,0x30001b27,0x2802400,0x962460,0x30001b27,0x4000000,0x200000,\n+0x30001b27,0x4000000,0x400000,0x30001b27,0x7c00100,0x230400,0x30001c1c,0x2802100,0x1862460,0x30001c1c,0x2802400,0x1862460,0x30001c1c,0x2806400,0x1862460,0x30001c1c,\n+0x4000000,0x200000,0x30001c1c,0x6800100,0x1862400,0x30001c1c,0x6800100,0x1862540,0x30001c1c,0x7c00100,0x1830000,0x30001c1c,0x7c00100,0x1830001,0x30001c1c,0xc000010,\n+0x448000,0x30001f0b,0x4000000,0x200000,0x30001f0b,0x4000010,0x200000,0x30001f0b,0x4000010,0x400000,0x30001f0b,0x6800000,0x200000,0x30001f0b,0x7c00100,0x230400,\n+0x30001f0b,0xc000010,0x248000,0x30002006,0x7c00100,0x250400,0x30002128,0x4000000,0x200000,0x30002128,0x7c00100,0x230400,0x30002128,0xc000010,0x248000,0x3000221d,\n+0x4000000,0x810000,0x3000221d,0x4000000,0x1410000,0x3000221d,0x4000001,0x445800,0x3000221d,0x7c00100,0x230400,0x30002300,0x4000010,0x400000,0x30002320,0x7c00100,\n+0x230400,0x30002417,0x2802100,0x1862460,0x30002417,0x2802400,0x1862460,0x30002417,0x2806400,0x1862460,0x30002417,0x2882000,0x1862460,0x30002417,0x4000000,0x200000,\n+0x30002417,0x4000000,0x400000,0x30002417,0x4000000,0x1600000,0x30002417,0x4000010,0x400000,0x30002417,0x4000010,0x1200000,0x30002417,0x6800000,0x1329800,0x30002417,\n+0x6800100,0x1862540,0x30002417,0x7c00100,0x1830000,0x30002417,0x7d00100,0x1830000,0x3000251b,0x80000,0xc18820,0x3000251b,0x2802100,0x962460,0x3000251b,0x3c02100,\n+0x962460,0x3000251b,0x4000000,0x200000,0x3000251b,0x4000006,0x500000,0x3000251b,0x4000010,0x400000,0x3000251b,0x4000010,0xb70000,0x3000251b,0x4000800,0x200000,\n+0x3000251b,0x6800000,0x1329800,0x3000251b,0x7c00100,0x230400,0x3000251b,0x7c00900,0x230400,0x3000251b,0xc000010,0xb48000,0x3000251b,0x12882000,0x962460,0x30002800,\n+0x24000000,0x200000,0x30002800,0x2c000010,0x1248002,0x30002800,0x2c000010,0x15248002,0x30002a00,0x4000000,0x1600000,0x30002b01,0x2000,0x962460,0x30002b01,0x2000,\n+0x8962460,0x30002c00,0x4000000,0x200000,0x30002c00,0x7c00100,0x14220405,0x30002d19,0x7c00100,0x250400,0x30002e00,0x24000000,0x200000,0x30003000,0x24000000,0x200000,\n+0x30003000,0x24000000,0x4200000,0x30003100,0x24000000,0x200000,0x30003600,0x24000000,0x200000,0x30003700,0x24000000,0x4200000,0x3000392e,0x24000000,0x200000,0x30005013,\n+0x7c00100,0x2633801,0x30005600,0,0x918820,0x30020600,0x4000400,0x500400,0x30020701,0x2802400,0x962460,0x30020701,0x2802400,0xc62460,0x300a3a11,0x4020000,\n+0xe00000,0x300a3a11,0x4020000,0xe00002,0x300a3b11,0x4020000,0xe00002,0x300a3c00,0x4008000,0xe00000,0x300a3c00,0x4010000,0xe00000,0x300a3d11,0x7c00300,0xe30002,\n+0x300a4305,0x7c00100,0xe30400,0x300a4611,0x7c40300,0xe30000,0x300a4829,0x7c00100,0xe30400,0x300a4829,0x7c00900,0x1230400,0x300a4929,0x4000000,0xe00000,0x3040258f,\n+0x4000010,0x400000,0x3040258f,0x4000010,0xb70000,0x3040258f,0xc000010,0xb48000,0x304028af,0x4000001,0xc41c0b,0x304a3dbf,0x4000000,0xe00000,0x30800c1e,0x2802100,\n+0x962460,0x30c01c87,0x6800000,0x1329800,0x3100080e,0x7c00120,0x220402,0x3100080e,0x7c00120,0x250402,0x31005167,0x1000,0,0x3100581e,0x4000000,0x200000,\n+0x3100581e,0x7c00100,0x230400,0x3100590d,0x7c00100,0x230400,0x31005a09,0x7c00100,0x220400,0x31005a09,0x7c00100,0x250400,0x31005b00,0x4000000,0x200000,0x31005c00,\n+0x80000,0x918820,0x31005c00,0x2802000,0x962460,0x31005c00,0x2802400,0x962460,0x31005c00,0x4000000,0x200000,0x31005c00,0x4000000,0x200001,0x31005c00,0x6800000,\n+0x962540,0x31005c00,0x6800400,0x962540,0x31005c01,0x2802400,0x962460,0x31005d00,0x4000020,0x200005,0x31005d00,0x6800020,0x1329805,0x31005d00,0x7c00120,0x220405,\n+0x31005d00,0x7c00120,0x250405,0x31006000,0x82000,0x8962460,0x31006000,0x180000,0x918820,0x310a5e11,0x7c40300,0xe30000,0x310a5f11,0x7c00300,0xe30001,0x32000419,\n+0x7c00100,0x250400,0x3200080e,0x4000020,0x200000,0x3200080e,0x7c00100,0x220400,0x3200080e,0x7c00100,0x250400,0x32000908,0x7c00100,0x220400,0x32000908,0x7c00100,\n+0x250400,0x32000c02,0x7c00100,0x230400,0x32000e25,0x7c00100,0x230400,0x32001d0c,0x7c00100,0x230400,0x32002800,0x80000,0x1e18820,0x32002800,0x80020,0x218820,\n+0x32002800,0x4000001,0x445802,0x32002800,0x24000000,0x200000,0x32002800,0x24000000,0x200002,0x32002800,0x24000020,0x200000,0x32002800,0x2c000010,0x1248002,0x32002919,\n+0x7c00100,0x22040f,0x32002a00,0x4000000,0x1600000,0x32002b01,0x2000,0x962460,0x32002b01,0x2802000,0x962460,0x32002b01,0x2802020,0x962460,0x32002c00,0x4000000,\n+0x200000,0x32002c00,0x4000020,0x200000,0x32002c00,0x4000020,0x200005,0x32002c00,0x7c00120,0x220405,0x32002c00,0x7c00120,0x250405,0x32002e00,0x24000020,0x200000,\n+0x32002f00,0x24000020,0x200000,0x32003000,0x24000000,0x200000,0x32003000,0x24000020,0x200000,0x32003500,0x24000000,0x200000,0x32003600,0x24000020,0x200000,0x32003600,\n+0x24000020,0x14200000,0x32003700,0x24000000,0x200000,0x32003700,0x24000000,0x4100000,0x32003700,0x24000000,0x4200000,0x32003700,0x24000000,0x14200000,0x32003800,0x24000000,\n+0x810000,0x32003800,0x24000000,0x1410000,0x32005102,0x4000000,0x1500008,0x32005502,0x7c00100,0x230400,0x32006108,0x7c00100,0x220400,0x32006108,0x7c00100,0x250400,\n+0x3200622a,0x2802100,0x962460,0x3200622a,0x2806000,0x962460,0x3200622a,0x7c00100,0x230400,0x3200632b,0x2802100,0x962460,0x3200632b,0x2806000,0x962460,0x3200632b,\n+0x7c00100,0x230400,0x3200642c,0x2802100,0x962460,0x3200642c,0x7c00100,0x230400,0x3200652d,0x2802100,0x962460,0x3200652d,0x7c00100,0x230400,0x32006600,0x24000020,\n+0x200000,0x32006700,0x24000020,0x200000,0x32006800,0x24000020,0x200000,0x32006800,0x24000020,0x14200000,0x32006900,0x24000020,0x200000,0x32006900,0x24000020,0x810000,\n+0x32006900,0x24000020,0x1410000,0x32006a00,0x24000020,0x200000,0x32006a00,0x24000020,0x200001,0x32006a00,0x24000020,0x200002,0x32020701,0x2882000,0xc62460,0x32023300,\n+0x4000000,0x100000,0x32026c01,0x12882000,0x962460,0x32026c01,0x12882000,0x8962460,0x32065700,0x4000000,0x810011,0x32065700,0x4000000,0x1410011,0x32086600,0x24000020,\n+0x810000,0x32086600,0x24000020,0x1410000,0x32086900,0x24000020,0x810000,0x32086900,0x24000020,0x1410000,0x320a3600,0x24000020,0x34200000,0x320a3d11,0x7c00100,0x1230400,\n+0x320a3e14,0x7c00100,0xe30010,0x320a3e14,0x7c00100,0x2530000,0x320a3f16,0x7c00100,0xe30c10,0x320a4400,0x4000000,0xe00003,0x320a4929,0x4000000,0xe00000,0x320a4f11,\n+0x7c00300,0xe30001,0x320a6b16,0x7c00100,0x2530c00,0x3240638b,0xc000010,0x448000,0x324a3dc2,0x4000000,0x14e00000,0x324a3dc2,0x7c00100,0x1230400,0x324a3fbd,0x4000002,\n+0x1200c00,0x324a53ba,0x24000000,0xe00000,0x32820701,0x2802000,0x962460,0x40000419,0x7c00100,0x220400,0x40000519,0x7c00100,0x220400,0x40000600,0x4000400,0x200400,\n+0x4000080e,0x7c00100,0x220400,0x4000080e,0x7c00100,0x250400,0x4000080e,0x7c00100,0x250402,0x40000c02,0x2802100,0x962460,0x40000c02,0x2802400,0x962460,0x40000c02,\n+0x2802500,0x962460,0x40000c02,0x4000000,0x200000,0x40000c02,0x4000000,0x1071400,0x40000c02,0x7c00100,0x230400,0x40000c02,0x80000000,0x218960,0x40000d22,0x7c00100,\n+0x230400,0x40000f0a,0x7c00100,0x230400,0x40001004,0x7c00100,0x230400,0x40001110,0x2802100,0x962460,0x40001110,0x6800100,0x962540,0x4000120f,0x2802100,0x962460,\n+0x4000120f,0x4000000,0x1600000,0x4000120f,0x7c00100,0x230400,0x4000131f,0x7c00100,0x230400,0x40001423,0x4000000,0x200000,0x40001423,0x4000000,0x1600000,0x40001615,\n+0x2802400,0x962460,0x40001615,0x7c00100,0x230400,0x40002417,0x2802400,0x1862460,0x40002417,0x4000000,0x200000,0x40002800,0x6800000,0x201c00,0x40002800,0x24000002,\n+0x200000,0x40002c00,0x4000000,0x200002,0x40003000,0x24000000,0x14200000,0x40003000,0x24000020,0x200000,0x40003700,0x24000000,0x200000,0x40003700,0x24000000,0x4200000,\n+0x40003700,0x24000000,0x14200000,0x40005a09,0x7c00100,0x220400,0x40005a09,0x7c00100,0x250400,0x40005d00,0x7c00120,0x220405,0x40006f30,0x2802100,0x962460,0x40006f30,\n+0x2802400,0x962460,0x40006f30,0x4000000,0x200000,0x40006f30,0x6800000,0x1329800,0x40006f30,0x6800100,0x962540,0x40006f30,0x7c00100,0x230400,0x40006f30,0xc000010,\n+0xb48000,0x40007034,0x7c00100,0x1830000,0x40007117,0x4000000,0x200000,0x40007208,0x7c00100,0x220400,0x4000720e,0x7c00100,0x220400,0x4000720e,0x7c00500,0x22040e,\n+0x4000720e,0x7c00500,0x22040f,0x40007219,0x7c00100,0x220400,0x40007219,0x7c00500,0x220400,0x40007219,0x7c00500,0x22040e,0x40007219,0x7c00500,0x22040f,0x40007300,\n+0x24000000,0x200000,0x40007300,0x24000000,0x14200000,0x40007400,0x4000000,0x200000,0x40007531,0x7c00100,0x230400,0x40007631,0x7c00100,0x230400,0x40007835,0x4000010,\n+0x400000,0x40007835,0x7c00100,0x230400,0x40007933,0x7c00100,0x230400,0x40007a32,0x6800000,0x1329800,0x40007a32,0x7c00100,0x230400,0x40007b2f,0x7c00100,0x230400,\n+0x40007c00,0x4000000,0x200000,0x40020701,0x2802400,0x962460,0x40020701,0x2802400,0xc62460,0x40023300,0x4000000,0x200000,0x40027d01,0x12882000,0x962460,0x400a3700,\n+0x24000000,0x34200000,0x400a3700,0x24000000,0x34e00000,0x400a4400,0x4000000,0xe0000d,0x400a4412,0x4000000,0xe00002,0x400a4412,0x4000000,0xe00003,0x400a4500,0x4000000,\n+0xe0000d,0x400a5300,0x4000000,0x810010,0x400a5300,0x4000000,0x1410010,0x404077fc,0x4000000,0x200000,0x404077ff,0x4000000,0x200000,0x404077ff,0x4000000,0x400000,\n+0x40c0147e,0x4000000,0x200000,0x40c051fa,0x4000000,0x200000,0x41000419,0x7c00100,0x220400,0x41000419,0x7c00100,0x250400,0x4100080e,0x7c00100,0x220400,0x4100080e,\n+0x7c00100,0x250400,0x41000908,0x7c00100,0x220400,0x41000908,0x7c00100,0x250400,0x41000b13,0x2802000,0x962460,0x41000b13,0x2802100,0x962460,0x41000b13,0x4000000,\n+0xb00000,0x41000c02,0x2802100,0x962460,0x41000c02,0x4000000,0x1500000,0x41000c02,0xc000010,0xb48000,0x41000f0a,0x7c00100,0x230400,0x41001004,0x7c00100,0x230400,\n+0x41001423,0x7c00100,0x230400,0x41001b27,0x4000000,0x500000,0x41001d0c,0x7c00100,0x230400,0x41001d0c,0x7c00100,0x23040f,0x41001f0b,0x2802400,0x962460,0x41001f0b,\n+0x4000000,0x200000,0x41001f0b,0x7c00100,0x230400,0x41002800,0x24000000,0x200000,0x41002800,0x24000000,0x400000,0x41002919,0x7c00100,0x22040e,0x41002a00,0x4000000,\n+0x1600000,0x41002b01,0x2802020,0x962460,0x41002c00,0x4000000,0x200000,0x41002c00,0x7c00120,0x220405,0x41003000,0x24000000,0x200000,0x41003700,0x24000000,0x4200000,\n+0x41003700,0x24000000,0x14200000,0x41003700,0x24000000,0x14e00000,0x41005d00,0x7c00120,0x220405,0x41006600,0x24000020,0x200000,0x41006600,0x24000020,0x810000,0x41006600,\n+0x24000020,0x1410000,0x41007208,0x7c00100,0x22040f,0x41007219,0x7c00100,0x220400,0x41007300,0x24000000,0x200000,0x41007e0e,0x2802000,0x962460,0x41007e0e,0x4000000,\n+0x200000,0x41007f0e,0x4000000,0x200000,0x41007f0e,0x7c00100,0x230400,0x41008002,0x7c00100,0x230400,0x41008137,0x2802100,0x962460,0x41008137,0x4000000,0x200000,\n+0x41008137,0x6800100,0x962540,0x41008137,0x7c00100,0x230400,0x41008301,0x2802000,0x962460,0x41008407,0x4000000,0x200000,0x41008407,0x4000000,0x400000,0x41008407,\n+0x4000000,0xb00000,0x41008407,0x7c00100,0x220400,0x41008407,0x7c00100,0x250400,0x4100850b,0x7c00100,0x230400,0x4100860b,0x4000000,0x200000,0x4100860b,0x7c00100,\n+0x230400,0x4100870c,0x7c00100,0x220400,0x41008838,0x7c00100,0x220400,0x41008838,0x7c00100,0x250400,0x41008939,0x2802000,0x962460,0x41008939,0x2802100,0x962460,\n+0x41008939,0x2806000,0x962460,0x41008939,0x4000000,0x200000,0x41008939,0x4000000,0x400000,0x41008939,0x7c00100,0x230400,0x41008939,0xc000010,0x448000,0x41008a00,\n+0x4000400,0x200400,0x41008b3b,0x4000000,0x1800000,0x41008b3b,0x6800000,0x1329800,0x41008b3b,0x7c00100,0x1830000,0x41008b3b,0x7e00100,0x1830000,0x41008c3d,0x4000010,\n+0x400000,0x41008c3d,0x7c00100,0x230400,0x41008d0e,0x7c00100,0x22040f,0x41008d19,0x7c00100,0x220400,0x41008d19,0x7c00100,0x22040f,0x41008e00,0x24000000,0x200000,\n+0x41008e00,0x24000000,0x400000,0x41008e00,0x24000000,0x1710000,0x41008e00,0x24000006,0x400000,0x41008f3a,0x2802100,0x962460,0x41008f3a,0x2806000,0x962460,0x41008f3a,\n+0x4000000,0x200000,0x41008f3a,0x6800100,0x962540,0x41008f3a,0x7c00100,0x230400,0x4100903c,0x7c00100,0x230400,0x4100903c,0x7c00100,0x23040f,0x41020701,0x2802000,\n+0x962460,0x41020701,0x2802000,0xc62460,0x410a3700,0x24000000,0x34200000,0x410a3700,0x24000000,0x34e00000,0x410a4412,0x4000000,0xe00003,0x410a4711,0x7c40300,0xe30000,\n+0x410a4f11,0x7c00300,0xe30001,0x410a9100,0x4000000,0x800010,0x410a9100,0x4000000,0x810010,0x410a9100,0x4000000,0x870010,0x410a9100,0x4000000,0xb00010,0x410a9100,\n+0x4000000,0xf00010,0x410a9100,0x4000000,0x1001410,0x410a9100,0x4000000,0x1071010,0x410a9100,0x4000000,0x1071410,0x410a9100,0x4000000,0x1410010,0x41408ac5,0x4000400,\n+0x200000,0x414a82bf,0x4000000,0xe00000,0x41808300,0x2802000,0x962460,0x41c0147e,0x6800000,0x1329800,0x50000419,0x7c00100,0x220400,0x50000419,0x7c00100,0x250400,\n+0x5000080e,0x7c00100,0x220400,0x50000908,0x7c00100,0x220400,0x50000908,0x7c00100,0x250400,0x50000b13,0x2802500,0x962460,0x50000f0a,0x7c00100,0x230400,0x50001615,\n+0x2802100,0x962460,0x50001615,0x7c00100,0x230400,0x50002b01,0x2802020,0x962460,0x50002c00,0x4000000,0x200000,0x50002c19,0x7c00100,0x220400,0x50002d19,0x7c00100,\n+0x220400,0x50003000,0x24000000,0x200000,0x50003000,0x24000020,0x200000,0x50003700,0x24000000,0x4200000,0x50005d00,0x7c00120,0x220405,0x50005d00,0x7c00120,0x250405,\n+0x50006108,0x7c00100,0x220400,0x50006108,0x7c00100,0x250400,0x50006600,0x24000020,0x200000,0x50007300,0x24000000,0x200000,0x50008301,0x2802400,0x962460,0x50008a00,\n+0x7c00500,0x230400,0x50009257,0x2802400,0x962460,0x50009257,0x4000000,0x200000,0x50009257,0x4000010,0x1071400,0x50009257,0x6800000,0x1329800,0x50009257,0x7c00100,\n+0x230400,0x50009257,0x7c00500,0x230400,0x50009257,0x7c00900,0x230400,0x50009257,0xc000010,0xb48000,0x5000933e,0x2802100,0x962460,0x5000933e,0x2802400,0x962460,\n+0x5000933e,0x4000000,0x200000,0x5000933e,0x4000000,0x400000,0x5000933e,0x4000010,0x400000,0x5000933e,0x6800000,0x1329800,0x5000933e,0x6800100,0x962540,0x5000933e,\n+0x6800100,0x962541,0x5000933e,0x6804400,0x962540,0x5000933e,0x7c00100,0x230400,0x5000933e,0x7c00100,0x230401,0x5000933e,0xc000010,0x448000,0x50009419,0x7c00100,\n+0x220400,0x50009419,0x7c00100,0x250400,0x50009500,0x4000400,0x200400,0x5000965a,0x4000000,0x500000,0x5000965a,0x7c00100,0x230400,0x5000965a,0xc000010,0xb48000,\n+0x5000975b,0x4000000,0x200000,0x5000975b,0x4000010,0x400000,0x5000975b,0x7c00100,0x230400,0x50009865,0x7c00100,0x230400,0x50009965,0x4000010,0x400000,0x50009965,\n+0x7c00100,0x230400,0x50409abf,0x4000000,0x200000,0x5100080e,0x7c00100,0x220400,0x5100080e,0x7c00100,0x250400,0x51000c02,0x2802100,0x962460,0x51000c02,0x4000000,\n+0x1500000,0x51000c02,0x4000020,0x200000,0x51000c02,0x7c00100,0x230400,0x51000f0a,0x7c00100,0x230400,0x51000f0a,0x7c00500,0x230400,0x51001110,0x2802100,0x962460,\n+0x5100131f,0x2802100,0x962460,0x51001423,0x7c00100,0x230400,0x51001524,0x2802100,0x962460,0x51001524,0x4000000,0x200000,0x51001524,0x7c00100,0x230400,0x5100171a,\n+0x2802100,0x962460,0x5100171a,0x4000000,0x200000,0x5100171a,0x4000000,0x1500000,0x5100171a,0x7c00100,0x230400,0x51001b27,0x4000000,0x200000,0x51001b27,0x4000000,\n+0x400000,0x51001b27,0x4000000,0x500000,0x51001b27,0x7c00100,0x230400,0x51001c1c,0x2802100,0x1862460,0x51001c1c,0x2802500,0x1862460,0x51001c1c,0x2806400,0x1862460,\n+0x51001c1c,0x4000000,0x1800000,0x51001c1c,0x6800000,0x1329800,0x51001c1c,0x6800100,0x1862400,0x51001c1c,0x6800100,0x1862540,0x51001c1c,0x6800500,0x1862400,0x51001c1c,\n+0x7c00100,0x1830000,0x5100251b,0x7c00100,0x230400,0x51002619,0x7c00100,0x220400,0x51002619,0x7c00100,0x250400,0x51002800,0x80020,0x218820,0x51002c00,0x4000000,\n+0x200000,0x51002d19,0x7c00100,0x230400,0x51003700,0x24000000,0x4200000,0x51003700,0x24000000,0x4e00000,0x51005201,0x2802400,0x962460,0x51005c00,0x4000000,0x200000,\n+0x51006108,0x7c00100,0x220400,0x51006108,0x7c00100,0x250400,0x51006600,0x24000020,0x200000,0x51006600,0x24000020,0x810000,0x51006600,0x24000020,0x1410000,0x51007300,\n+0x24000000,0x200000,0x51007300,0x24000020,0x200000,0x51008002,0x7c00100,0x230400,0x51008301,0x2802000,0x962460,0x51008301,0x2802400,0x962460,0x51008a00,0x7c00500,\n+0x230400,0x51008e00,0x24000000,0x200000,0x51008e00,0x24000000,0x400000,0x51008e00,0x24000000,0x810000,0x51008e00,0x24000000,0x1400000,0x51008e00,0x24000000,0x1410000,\n+0x51008e00,0x24000000,0x1710000,0x51008e00,0x24000002,0x200000,0x51008e00,0x24000500,0x230400,0x51008e00,0x2c000010,0xb48000,0x51009419,0x7c00100,0x220400,0x51009419,\n+0x7c00100,0x22040e,0x51009419,0x7c00100,0x22040f,0x51009419,0x7c00100,0x250400,0x51009500,0x4000400,0x200400,0x51009500,0x7c00500,0x230400,0x51009519,0x7c00100,\n+0x220400,0x51009519,0x7c00100,0x22040f,0x51009519,0x7c00100,0x230400,0x51009519,0x7c00100,0x250400,0x51009b71,0x2802100,0x962460,0x51009b71,0x6800000,0x1329800,\n+0x51009b71,0x6800100,0x962540,0x51009b71,0x6804400,0x962540,0x51009b71,0x7c00100,0x230400,0x51009c52,0x2802100,0x962460,0x51009c52,0x2802400,0x962460,0x51009c52,\n+0x2802d00,0x962460,0x51009c52,0x4000010,0x400000,0x51009c52,0x6800000,0x1329800,0x51009c52,0x6800100,0x962540,0x51009c52,0x7c00100,0x230400,0x51009c52,0xc000010,\n+0x448000,0x51009d6d,0x6800000,0x1329800,0x51009d6d,0x7c00100,0x230400,0x51009d6d,0x7c00500,0x230400,0x51009d6d,0x7c00d00,0x230400,0x51009d6d,0xc000010,0x448000,\n+0x51009e08,0x2802100,0x962460,0x51009f63,0x4000010,0x400000,0x51009f63,0x6800000,0x1329800,0x51009f63,0x7c00100,0x230400,0x51009f63,0x7c00900,0x230400,0x51009f63,\n+0xc000010,0x448000,0x51009f63,0xc000010,0xb48000,0x5100a008,0x2000,0x962460,0x5100a008,0x2802400,0x962460,0x5100a008,0x4000000,0x200000,0x5100a008,0x7c00100,\n+0x220400,0x5100a008,0x7c00100,0x230400,0x5100a008,0x7c00100,0x250400,0x5100a008,0x7c00500,0x230400,0x5100a16f,0x2806400,0x962460,0x5100a16f,0x6800000,0x1329800,\n+0x5100a16f,0x6800100,0x962540,0x5100a16f,0x7c00100,0x230400,0x5100a16f,0xc000010,0x448000,0x5100a24f,0x2802100,0x962460,0x5100a24f,0x2802400,0x962460,0x5100a24f,\n+0x6800000,0x1329800,0x5100a24f,0x7c00100,0x230400,0x5100a24f,0xc000010,0x448000,0x5100a36e,0x2802100,0x962460,0x5100a36e,0x4000000,0x200000,0x5100a36e,0x6800100,\n+0x962540,0x5100a36e,0x6804400,0x962540,0x5100a36e,0x7c00100,0x230400,0x5100a442,0x2802100,0x962460,0x5100a442,0x4000000,0x200000,0x5100a442,0x6800000,0x1329800,\n+0x5100a442,0x6800100,0x962540,0x5100a442,0x7c00100,0x230400,0x5100a442,0xc000010,0x448000,0x5100a500,0x4000000,0x200000,0x5100a600,0x4000000,0x200000,0x5100a601,\n+0x2802000,0x962460,0x5100a76b,0x7c00100,0x230400,0x5100a868,0x7c00100,0x230400,0x5100a96c,0x4000000,0x200000,0x5100a96c,0x7c00100,0x230400,0x5100aa00,0x4000000,\n+0x4e00000,0x5100ab00,0x4000000,0x4e00000,0x51086600,0x24000020,0x810000,0x51086600,0x24000020,0x1410000,0x510a4005,0x7c00100,0xe30400,0x510a4711,0x7c40300,0xe30000,\n+0x510a7300,0x24000000,0x34200000,0x510aaa00,0x4000000,0x34e00000,0x5140a2f3,0x4000400,0x400000,0x514a82bf,0x4000000,0xe00000,0x51802bb1,0x2802000,0x962460,0x51c00908,\n+0x2802400,0x962460,0x51c0a008,0x2802400,0x962460,0x52000f0a,0x2802100,0x962460,0x52000f0a,0x6800100,0x962540,0x52000f0a,0x7c00100,0x230400,0x52001004,0x4000000,\n+0x1600000,0x52001b00,0x4000000,0x200000,0x52001c1c,0x2802100,0x1862460,0x52001c1c,0x6800100,0x1862400,0x52001c1c,0x6800500,0x1862400,0x52001e12,0x7c00100,0x2230500,\n+0x52001e12,0x7c00100,0x2330520,0x52002128,0x4000002,0x400000,0x52002128,0x7c00100,0x230400,0x52002a00,0x4000000,0x1500000,0x52002a00,0x4000000,0x1600000,0x52002d00,\n+0x4000000,0x200006,0x52003000,0x24000000,0x200000,0x52006108,0x7c00100,0x220400,0x52006108,0x7c00100,0x250400,0x52008301,0x2802400,0x962460,0x52008407,0x2802400,\n+0x962460,0x52008407,0x7c00100,0x220400,0x52008407,0x7c00100,0x250400,0x52008b3b,0x6800000,0x1800000,0x52008b3b,0x7c00100,0x1830000,0x52008e00,0x24000000,0x400000,\n+0x52009419,0x7c00100,0x250400,0x5200975b,0x4000000,0x200000,0x5200ac7e,0x2802000,0x962460,0x5200ac7e,0x2802100,0x962460,0x5200ac7e,0x2802400,0x962460,0x5200ac7e,\n+0x4000010,0x200000,0x5200ac7e,0x7c00100,0x230400,0x5200ac7e,0xc000010,0x248000,0x5200ad28,0x7c00100,0x230400,0x5200ae6a,0x2802100,0x1862460,0x5200ae6a,0x2802400,\n+0x962460,0x5200ae6a,0x2802400,0x1862460,0x5200ae6a,0x2806000,0x1862460,0x5200ae6a,0x4000000,0x1800000,0x5200ae6a,0x6800000,0x1329800,0x5200ae6a,0x6800100,0x1862400,\n+0x5200ae6a,0x6800100,0x1862540,0x5200ae6a,0x7c00100,0x1830000,0x5200ae6a,0x7c00900,0x1830000,0x5200ae6a,0xc000010,0x1848000,0x5200b083,0x4000010,0x400000,0x5200b083,\n+0x7c00100,0x230400,0x5200b083,0xc000010,0x448000,0x5200b182,0x2802400,0x962460,0x5200b182,0x4000000,0x200000,0x5200b182,0x4000010,0x400000,0x5200b182,0x7c00100,\n+0x230400,0x5200b182,0xc000010,0x448000,0x5200b30a,0x2802400,0x962460,0x5200b30a,0x4000000,0x200000,0x5200b30a,0x7c00100,0x230400,0x5200b54e,0x2802100,0x962460,\n+0x5200b54e,0x2802400,0x962460,0x5200b54e,0x4000000,0x200000,0x5200b54e,0x4000010,0x400000,0x5200b54e,0x6800000,0x1329800,0x5200b54e,0x6800100,0x962540,0x5200b54e,\n+0x6804400,0x962540,0x5200b54e,0x7c00100,0x230400,0x5200b54e,0xc000010,0x448000,0x5200b61c,0x4000000,0x1800000,0x5200b61c,0x6800500,0x1862400,0x5200b61c,0x7c00100,\n+0x1830000,0x5200b61c,0x7c00900,0x1830000,0x5200b77f,0x2802100,0x1862460,0x5200b77f,0x2802400,0x1862460,0x5200b77f,0x4000000,0x1800000,0x5200b77f,0x4000010,0x1800000,\n+0x5200b77f,0x7c00100,0x1830000,0x5200b77f,0x7c00500,0x1830000,0x5200b77f,0x7c00900,0x1830000,0x5200b77f,0x7e00100,0x1830000,0x5200b873,0x2802100,0x962460,0x5200b873,\n+0x2806400,0x962460,0x5200b873,0x6800000,0x1329800,0x5200b873,0x6800100,0x962540,0x5200b873,0x6800400,0x962540,0x5200b873,0x7c00100,0x230400,0x5200b873,0xc000010,\n+0x448000,0x5200b912,0x7c00100,0x2230500,0x5200b912,0x7c00100,0x2330520,0x5200ba74,0x4000000,0x200000,0x5200ba74,0x4000010,0x400000,0x5200ba74,0x7c00100,0x230400,\n+0x5200bb85,0x4000000,0x200000,0x5200bb85,0x7c00100,0x230400,0x5200bc75,0x4000000,0x400000,0x5200bc75,0x4000010,0x400000,0x5200bc75,0x7c00100,0x230400,0x5200bd7d,\n+0x4000000,0x200000,0x5200bd7d,0x7c00100,0x230400,0x5200be7a,0x4000000,0x200000,0x5200be7a,0x7c00100,0x230400,0x5200bf58,0x7c00100,0x230400,0x5200c002,0x4000000,\n+0x200000,0x5200c178,0x2802000,0x962460,0x5200c178,0x2802100,0x962460,0x5200c178,0x2802400,0x962460,0x5200c178,0x2806400,0x962460,0x5200c178,0x4000000,0x200000,\n+0x5200c178,0x6800100,0x962540,0x5200c178,0x7c00100,0x230400,0x5200c178,0x7c00100,0x230401,0x5200c178,0xc000010,0x448000,0x5200c178,0x80000000,0x218960,0x5200c247,\n+0x7c00100,0x230400,0x5200c247,0x7c00100,0x830400,0x5200c247,0x7c00100,0x1430400,0x5200c300,0x4000000,0x200003,0x52022d00,0x4000000,0x100006,0x52023700,0x24000000,\n+0x4100000,0x52023700,0x24000000,0x4e00000,0x52023700,0x24000000,0x14100000,0x52023700,0x24000000,0x14e00000,0x52023700,0x24000000,0x96800000,0x52024400,0x4000000,0x100000,\n+0x52027300,0x24000000,0x100000,0x5202c300,0x4000000,0x100000,0x5202c300,0x4000000,0x100002,0x5202c300,0x4000000,0x100003,0x5202c300,0x4000000,0x10000d,0x5202c300,\n+0x4000100,0x150400,0x5202c300,0x4000100,0x15040d,0x5202c300,0x4000100,0x14150400,0x520a1e12,0x7c00100,0x2130480,0x520a3700,0x24000000,0x34e00000,0x520a3800,0x24000000,\n+0x34100000,0x520a4711,0x7c40300,0xe30000,0x520a4f11,0x7c00300,0xe30001,0x520a7300,0x24000000,0x34100000,0x520ab412,0x7c00100,0x2130480,0x520ac400,0x4000000,0xe00002,\n+0x520ac400,0x4000000,0xe0000d,0x520ac400,0x4000000,0x34e0000d,0x520ac414,0x4000000,0xe0000d,0x520ac511,0x7c40300,0xe30000,0x5240af91,0x7c00100,0x230400,0x5240af96,\n+0x4000400,0x200000,0x5240af98,0x6800400,0x962540,0x5240af98,0x7c00100,0x230400,0x5240afa2,0x7c00100,0x230400,0x5240afa4,0x7c00100,0x230400,0x5240b2c7,0x4000000,\n+0x200000,0x5240b2c7,0x4000000,0x1500000,0x5240b2d2,0x4000000,0x200000,0x5240b2e0,0x4000000,0x200000,0x5240b5f6,0x7c00900,0x230400,0x524a44bf,0x4000000,0xe00003,\n+0x5280af91,0x2802400,0x962460,0x5280af92,0x2802400,0x962460,0x5280af98,0x2802400,0x962460,0x5280af9a,0x2802400,0x962460,0x5280af9c,0x2802400,0x962460,0x52c0b3ed,\n+0x2802400,0x962460,0x52c0b3f1,0x7c00100,0x230400,0x60000c02,0x2802100,0x962460,0x60000c02,0x7c00100,0x230400,0x60000f0a,0x2802100,0x962460,0x60000f0a,0x6800100,\n+0x962540,0x60000f0a,0x7c00100,0x230400,0x6000131f,0x4000000,0x200000,0x6000171a,0x7c00100,0x230400,0x6000171a,0x7c00100,0x230560,0x60001b27,0x2802100,0x962460,\n+0x60001b27,0x4000000,0xc00000,0x60001b27,0x7c00100,0x230400,0x60001f0b,0x2802400,0x962460,0x60002919,0x7c00100,0x22040e,0x60002a00,0x4000000,0x1600000,0x60003000,\n+0x24000000,0x14200000,0x60003000,0x24000000,0x14e00000,0x60003700,0x24000000,0x4200000,0x60003800,0x24000000,0x1710000,0x60005102,0x4000000,0x200000,0x60006108,0x7c00100,\n+0x220400,0x60006108,0x7c00100,0x250400,0x60006600,0x24000020,0x200000,0x60008301,0x2802000,0x962460,0x6000903c,0x2806000,0x962460,0x6000903c,0x4000000,0x400000,\n+0x60009519,0x7c00100,0x220400,0x60009519,0x7c00100,0x250400,0x6000a008,0x7c00100,0x220400,0x6000a008,0x7c00100,0x250400,0x6000c300,0x4000000,0x3a703580,0x6000c654,\n+0x2802000,0x962460,0x6000c654,0x4000010,0x200000,0x6000c654,0x7c00100,0x230400,0x6000c73f,0x2802000,0x962460,0x6000c73f,0x2802100,0x962460,0x6000c73f,0x4000000,\n+0x200000,0x6000c73f,0x6800100,0x962540,0x6000c73f,0x6804000,0x962540,0x6000c73f,0x7c00100,0x230400,0x6000c80b,0x7c00100,0x230400,0x6000c941,0x2802100,0x962460,\n+0x6000c941,0x2806000,0x962460,0x6000c941,0x4000000,0x200000,0x6000c941,0x4000010,0x200000,0x6000c941,0x6800000,0x1329800,0x6000c941,0x6800100,0x962540,0x6000c941,\n+0x7c00100,0x230400,0x6000c941,0xc000010,0x448000,0x6000ca82,0x7c00100,0x230400,0x6000cc00,0x4000000,0x4e00000,0x6000d000,0x4000000,0x200000,0x6002c300,0x4000000,\n+0x100000,0x6002c300,0x4000000,0x10000d,0x6002c300,0x4000100,0x150400,0x6002c300,0x4000100,0x15040d,0x6002c300,0x4000100,0x14150400,0x600a3000,0x24000000,0x34200000,\n+0x600a3000,0x24000000,0x34e00000,0x600a3700,0x24000000,0x34200000,0x600a3800,0x24000000,0x34200000,0x600a3800,0x24000000,0xb6800000,0x600a4305,0x7c00100,0xe30400,0x600ac300,\n+0x4000000,0x34100000,0x600ac400,0x4000000,0x14e0000d,0x600ac400,0x4000000,0x34e0000d,0x600acb14,0x7c00100,0xe30000,0x600acb16,0x7c00100,0xe30c00,0x600acc00,0x4000000,\n+0x34e00000,0x600acd00,0x4000000,0x34200000,0x600acd00,0x4000000,0x34e00000,0x600acd00,0x4000000,0xb6800000,0x600ace00,0x4000000,0x34e00000,0x600ace00,0x4000000,0xb6800000,\n+0x600acf00,0x4000000,0x34e00000,0x600acf00,0x4000000,0xb6800000,0x600ad111,0x7c40300,0xe30000,0x604ac4bf,0x4000000,0x34e00003,0x61000a03,0x4000000,0x1600000,0x61000c02,\n+0x80000000,0x218960,0x6100120f,0x4000000,0x200000,0x61001a18,0x7c00100,0x1830000,0x61001d0c,0x7c00100,0x230400,0x61001d0c,0x7c00100,0x250400,0x61006600,0x24000020,\n+0x200000,0x61008407,0x7c00100,0x220400,0x61008407,0x7c00100,0x250400,0x6100870c,0x7c00100,0x220400,0x61008e00,0x24000000,0x200000,0x61008e00,0x24000000,0x400000,\n+0x61008e00,0x24000002,0x300000,0x6100903c,0x7c00100,0x230400,0x61009519,0x7c00100,0x220400,0x61009519,0x7c00100,0x250400,0x61009519,0x7c00500,0x22040f,0x61009b71,\n+0x2802100,0x962460,0x61009b71,0x2806400,0x962460,0x61009b71,0x7c00100,0x230400,0x6100a008,0x2802100,0x962460,0x6100c300,0x4000000,0x20000f,0x6100cd00,0x4000000,\n+0x200000,0x6100d202,0x2802400,0x962460,0x6100d202,0x2802500,0x962460,0x6100d202,0x7c00100,0x230400,0x6100d302,0x4000020,0x200000,0x6100d302,0x7c00120,0x230405,\n+0x6100d476,0x2802100,0x962460,0x6100d476,0x2802100,0x962461,0x6100d476,0x2806400,0x962460,0x6100d476,0x4000000,0x400000,0x6100d476,0x6800000,0x1329800,0x6100d476,\n+0x6800100,0x962540,0x6100d476,0x7c00100,0x230400,0x6100d476,0xc000010,0x448000,0x6100d573,0x2802100,0x962460,0x6100d573,0x2806400,0x962460,0x6100d573,0x6800100,\n+0x962540,0x6100d573,0x7c00100,0x230400,0x6100d573,0x7c00900,0x230400,0x6100d573,0xc000010,0x448000,0x6100d68d,0x7c00100,0x230400,0x6100d756,0x7c00100,0x230400,\n+0x6100d85c,0x2802500,0x962460,0x6100d85c,0x6800100,0x962540,0x6100d85c,0x7c00100,0x230400,0x6100d85c,0x7c00500,0x230400,0x6100d997,0x2802100,0x962460,0x6100d997,\n+0x4000000,0x200000,0x6100d997,0x4000000,0x400000,0x6100d997,0x6800000,0x1329800,0x6100d997,0x6800100,0x962540,0x6100d997,0x6804400,0x962540,0x6100d997,0x7c00100,\n+0x230400,0x6100d997,0x7c00100,0x230560,0x6100d997,0xc000010,0x448000,0x6100da98,0x6800000,0x1329800,0x6100da98,0x7c00100,0x230400,0x6100db71,0x4000000,0x200000,\n+0x6100dc99,0x2802100,0x962460,0x6100dc99,0x2802400,0x962460,0x6100dc99,0x6800000,0x1329800,0x6100dc99,0x6800100,0x962540,0x6100dc99,0x6804400,0x962540,0x6100dc99,\n+0x7c00100,0x230400,0x610a4711,0x7c40300,0xe30000,0x610a4f11,0x7c00300,0xe30001,0x610ace00,0x4000000,0x34e00000,0x6140af96,0x7c00100,0x230400,0x6140af98,0x7c00100,\n+0x230400,0x6180af93,0x2802400,0x962460,0x62002a00,0x4000000,0x1600000,0x63002800,0x80000,0x918820,0x63c00c14,0x80000,0x918820,0x7000080e,0x7c00100,0x250400,\n+0x70000a03,0x4000000,0x200000,0x70000c00,0x80000000,0x218960,0x70000f0a,0x7c00100,0x230400,0x70001004,0x7c00100,0x230400,0x70001524,0x2802100,0x962460,0x70001524,\n+0x7c00100,0x230400,0x70001615,0x2802100,0x962460,0x7000171a,0x2802100,0x962460,0x70001821,0x6800000,0x1329800,0x70002320,0x7c00100,0x230400,0x70002a00,0x4000000,\n+0x1500000,0x70002a00,0x4000000,0x1600000,0x70003000,0x24000000,0x200000,0x70003000,0x24000000,0x14200000,0x70003800,0x24000000,0x4e00000,0x70005201,0x2802400,0x962460,\n+0x7000581e,0x7c00100,0x230400,0x70006108,0x7c00100,0x220400,0x70006108,0x7c00100,0x250400,0x70006f30,0x7c00100,0x230400,0x70007300,0x24000000,0x200000,0x70007f0e,\n+0x4000000,0x200000,0x70008301,0x2802100,0x962460,0x70008301,0x2802400,0x962460,0x70008e00,0x24000000,0x200000,0x70008e00,0x24000000,0x400000,0x70008e00,0x24000002,\n+0x400000,0x70008e00,0x24000008,0x1410000,0x70008e00,0x24000010,0x400000,0x70008e00,0x2c000010,0x448000,0x70009519,0x7c00100,0x220400,0x70009519,0x7c00100,0x230400,\n+0x70009519,0x7c00100,0x250400,0x70009865,0x7c00100,0x230400,0x70009965,0x4000010,0x400000,0x70009965,0x7c00100,0x230400,0x7000a008,0x7c00100,0x220400,0x7000a008,\n+0x7c00100,0x250400,0x7000a008,0x7c00500,0x22040f,0x7000a50e,0x4000000,0x200000,0x7000b61c,0x2802500,0x1862460,0x7000b61c,0x6800500,0x1862400,0x7000b61c,0x7c00100,\n+0x1830000,0x7000c300,0x4000000,0x100000,0x7000c941,0x2806000,0x962460,0x7000cc00,0x4000000,0x4e00000,0x7000cd00,0x4000000,0x200000,0x7000cd00,0x4000000,0x4200000,\n+0x7000cd00,0x4000000,0x4e00000,0x7000cd00,0x4000000,0x14200000,0x7000cd00,0x4000000,0x14e00000,0x7000cd00,0x4000000,0x96800000,0x7000cf00,0x4000000,0x4e00000,0x7000cf00,\n+0x4000000,0x14e00000,0x7000d202,0x2802100,0x962460,0x7000d202,0x7c00100,0x230400,0x7000d997,0x7c00100,0x230400,0x7000d997,0xc000010,0x248000,0x7000dd86,0x2802400,\n+0x962460,0x7000dd86,0x7c00100,0x230400,0x7000dd86,0xc000010,0x448000,0x7000de9f,0x4000000,0x200000,0x7000de9f,0x7c00100,0x230400,0x7000e001,0x2000,0x962460,\n+0x7000e001,0x2802400,0x962460,0x7000e187,0x2802000,0x962460,0x7000e187,0x2802100,0x962460,0x7000e187,0x4000000,0x200000,0x7000e187,0x7c00100,0x230400,0x7000e187,\n+0xc000010,0x448000,0x7000e288,0x7c00100,0x230400,0x7000e300,0x4000000,0x200000,0x7000e489,0x2802100,0x962460,0x7000e489,0x2802400,0x962460,0x7000e489,0x6800100,\n+0x962540,0x7000e489,0x6800100,0x962541,0x7000e489,0x6804400,0x962540,0x7000e489,0x7c00100,0x230400,0x7000e489,0x7c00900,0x230400,0x7000e59d,0x2802100,0x962460,\n+0x7000e59d,0x2802400,0x962460,0x7000e59d,0x4000000,0x200000,0x7000e59d,0x4000010,0x200000,0x7000e59d,0x6800100,0x962540,0x7000e59d,0x6804400,0x962540,0x7000e59d,\n+0x7c00100,0x230400,0x7000e59d,0xc000010,0x448000,0x7000e691,0x2802100,0x962460,0x7000e691,0x2802400,0x962460,0x7000e691,0x2806400,0x962460,0x7000e691,0x6800000,\n+0x1329800,0x7000e691,0x6800100,0x962540,0x7000e691,0x7c00100,0x230400,0x7000e700,0x4000400,0x200400,0x7000e70e,0x7c00100,0x220400,0x7000e719,0x7c00100,0x220400,\n+0x7000e719,0x7c00500,0x22040f,0x7000e853,0x7c00100,0x230400,0x7000e9a0,0x2802400,0x962460,0x7000e9a0,0x4000000,0x200000,0x7000e9a0,0x4000000,0x500000,0x7000e9a0,\n+0x7c00100,0x230400,0x7000ea79,0x2802400,0x962460,0x7000ea79,0x4000000,0x200000,0x7000ea79,0x4000000,0xf00000,0x7000ea79,0x4000010,0x400000,0x7000ea79,0x7c00100,\n+0x230400,0x7000eb8c,0x2802400,0x962460,0x7000eb8c,0x4000000,0x200000,0x7000eb8c,0x7c00100,0x230400,0x7000eca3,0x2802100,0x962460,0x7000eca3,0x2806400,0x962460,\n+0x7000eca3,0x4000000,0x200000,0x7000eca3,0x6800000,0x1329800,0x7000eca3,0x6800100,0x962540,0x7000eca3,0x7c00100,0x230400,0x7000eca3,0xc000010,0x448000,0x7000ed95,\n+0x6800000,0x1329800,0x7000ed95,0x7c00100,0x230400,0x7000ed95,0xc000010,0x448000,0x7000ee1c,0x2802500,0x1862460,0x7000ee1c,0x6800000,0x1329800,0x7000ee1c,0x7c00100,\n+0x1830000,0x7000ee1c,0x7c00900,0x1830000,0x7000ef8f,0x4000000,0x200000,0x7000ef8f,0x7c00100,0x230400,0x7000f08e,0x4000000,0x200000,0x7000f08e,0x7c00100,0x230400,\n+0x7000f159,0x2802100,0x962460,0x7000f159,0x7c00100,0x230400,0x7000f200,0x4000000,0x200000,0x7000f200,0x4000000,0x1200000,0x7000f200,0x4000000,0x1710000,0x7000f34b,\n+0x2802400,0x962460,0x7000f34b,0x4000000,0x200000,0x7000f34b,0x4000010,0x400000,0x7000f34b,0x6800000,0x1329800,0x7000f34b,0x7c00100,0x230400,0x7000f34b,0x7c00900,\n+0x230400,0x7000f34b,0xc000010,0x448000,0x7000f490,0x4000000,0x200000,0x7000f490,0x7c00100,0x230400,0x7000f5a5,0x7c00100,0x230400,0x7000f67b,0x4000000,0x200000,\n+0x7000f67b,0x4000010,0x200000,0x7000f67b,0x7c00100,0x230400,0x7000f8a6,0x2802100,0x962460,0x7000f8a6,0x2802400,0x962460,0x7000f8a6,0x2806400,0x962460,0x7000f8a6,\n+0x4000000,0x500000,0x7000f8a6,0x4000010,0xb00000,0x7000f8a6,0x4000800,0x200000,0x7000f8a6,0x6800100,0x962540,0x7000f8a6,0x6800100,0x962541,0x7000f8a6,0x7c00100,\n+0x230400,0x7000f8a6,0xc000010,0x448000,0x7000f921,0x4000000,0x200000,0x7000fa00,0x4000000,0x200000,0x7000fb9e,0x2802100,0x962460,0x7000fb9e,0x2802400,0x962460,\n+0x7000fb9e,0x2806400,0x962460,0x7000fb9e,0x4000000,0x200000,0x7000fb9e,0x6800000,0x1329800,0x7000fb9e,0x6800100,0x962540,0x7000fb9e,0x6800100,0x962541,0x7000fb9e,\n+0x7c00100,0x230400,0x7000fc92,0x4000000,0x200000,0x7000fc92,0x6800000,0x1329800,0x7000fc92,0x7c00100,0x220400,0x7000fc92,0x7c00100,0x230400,0x7000fc92,0x7c00100,\n+0x250400,0x700acd00,0x4000000,0x34e00000,0x700acd00,0x4000000,0xb6800000,0x700ace00,0x4000000,0x34e00000,0x700acf00,0x4000000,0x34e00000,0x700acf00,0x4000000,0xb6800000,\n+0x7050df01,0x4000000,0x200000,0x7050f705,0x80000,0x918820,0x7080af96,0x2802400,0x962460,0x7090df01,0x2802400,0x962460,0x70d0e403,0x2802100,0x962460,0x70d0e403,\n+0x2802400,0x962460,0x70d0e403,0x6800100,0x962540,0x8000120f,0x7c00100,0x230400,0x80001524,0x7c00100,0x230400,0x8000171a,0x7c00100,0x230400,0x80002006,0x7c00100,\n+0x220400,0x80002006,0x7c00100,0x250400,0x80002a00,0x4000000,0x1500000,0x80002d00,0x4000000,0x200000,0x80005208,0x2802400,0x962460,0x80005c00,0x4000000,0x200000,\n+0x80007300,0x24000000,0x200000,0x80009519,0x7c00100,0x220400,0x80009519,0x7c00100,0x230400,0x80009519,0x7c00100,0x250400,0x80009865,0x7c00100,0x230400,0x8000a008,\n+0x2802100,0x962460,0x8000b30a,0x4000000,0x500000,0x8000b30a,0x7c00100,0x230400,0x8000cd00,0x4000000,0x4e00000,0x8000d202,0x2802500,0x962460,0x8000d202,0x7c00100,\n+0x230400,0x8000d68d,0x4000000,0x200000,0x8000d997,0x2802000,0x962460,0x8000d997,0x2802400,0x962460,0x8000d997,0x4000000,0x400000,0x8000d997,0x4000000,0x500000,\n+0x8000d997,0x7c00100,0x230400,0x8000d997,0xc000010,0x448000,0x8000e489,0x2802100,0x962460,0x8000e489,0x7c00100,0x230400,0x8000e719,0x7c00100,0x220400,0x8000f8a6,\n+0x2802100,0x962460,0x8000f8a6,0x7c00100,0x230400,0x8000f8a6,0xc000010,0x448000,0x8000fda1,0x2802100,0x1862460,0x8000fda1,0x2806400,0x1862460,0x8000fda1,0x4000000,\n+0x1800000,0x8000fda1,0x6800000,0x1329800,0x8000fda1,0x6800100,0x1862540,0x8000fda1,0x7c00100,0x1830000,0x8000fda1,0xc000010,0x448000,0x8000fe9c,0x7c00100,0x230400,\n+0x8000fe9c,0x7c00100,0x830400,0x8000fe9c,0x7c00100,0x1430400,0x8000ff06,0x7c00100,0x220400,0x80010165,0x7c00100,0x230400,0x800102a2,0x4000000,0x200000,0x800102a2,\n+0x7c00100,0x230400,0x800103a4,0x7c00100,0x230400,0x800103a4,0xc000010,0x448000,0x8001044c,0x4000000,0x200000,0x8001044c,0x7c00100,0x220400,0x8001044c,0x7c00100,\n+0x250400,0x80010670,0x2802000,0x962460,0x80010670,0x4000000,0x200000,0x80010670,0x4000010,0x400000,0x80010670,0xc000010,0x448000,0x800a4711,0x7c40300,0xe30000,\n+0x800acd00,0x4000000,0x34e00000,0x800acd00,0x4000000,0x7a902460,0x800ace00,0x4000000,0x34e00000,0x800acf00,0x4000000,0x34e00000,0x800b0011,0x7c40300,0xe30000,0x800b0500,\n+0x4000000,0x34e00000,0x800b0500,0x4000000,0xb6800000,0x90001615,0x7c00100,0x230400,0x9000171a,0x4000000,0x200000,0x9000171a,0x7c00100,0x230400,0x90003000,0x24000000,\n+0x200000,0x90007f0e,0x4000000,0x200000,0x90008301,0x2802000,0x962460,0x90008e00,0x24000000,0x400000,0x90009519,0x7c00100,0x250400,0x9000a16f,0x2802100,0x962460,\n+0x9000d200,0x80000000,0x218960,0x9000d202,0x2802000,0x962460,0x9000d202,0x2802100,0x962460,0x9000d202,0x7c00100,0x230400,0x9000e59d,0x2802100,0x962460,0x90010500,\n+0x4000000,0xe00000,0x900107a7,0x2802100,0x962460,0x900107a7,0x2802400,0x962460,0x900107a7,0x2802c00,0x962460,0x900107a7,0x4000000,0x1400000,0x900107a7,0x6800000,\n+0x1329800,0x900107a7,0x7c00100,0x220400,0x900107a7,0x7c00100,0x250400,0x900108a8,0x2802100,0x962460,0x900108a8,0x2806400,0x962460,0x900108a8,0x4000000,0x200000,\n+0x900108a8,0x4000000,0x400000,0x900108a8,0x4000010,0x400000,0x900108a8,0x6800000,0x1329800,0x900108a8,0x6800100,0x962540,0x900108a8,0x7c00100,0x230400,0x900108a8,\n+0xc000010,0x448000,0x90010908,0x7c00100,0x220400,0x90010a38,0x2802100,0x962460,0x90010ca9,0x2802100,0x962460,0x90010ca9,0x4000000,0x500000,0x90010ca9,0x4000010,\n+0xb00000,0x90010ca9,0x6800100,0x962540,0x90010ca9,0x7c00100,0x230400,0x90010d1b,0x4000000,0x500000,0x90010eaa,0x2802100,0x962460,0x90010eaa,0x2802400,0x962460,\n+0x90010eaa,0x2806400,0x962460,0x90010eaa,0x4000000,0x200000,0x90010eaa,0x4000000,0x400000,0x90010eaa,0x4000010,0x400000,0x90010eaa,0x6800000,0x1329800,0x90010eaa,\n+0x6800100,0x962540,0x90010eaa,0x7c00100,0x230400,0x90010eaa,0xc000010,0x448000,0x90010fab,0x7c00100,0x220400,0x90010fab,0x7c00100,0x250400,0x9002c300,0x4000000,\n+0x100000,0x900ac400,0x4000000,0xe0000d,0x900acd00,0x4000000,0x34e00000,0x900acd00,0x4000000,0xb6800000,0x900acf00,0x4000000,0x34e00000,0x900b0500,0x4000000,0x34e00000,\n+0x900b0500,0x4000000,0xb6800000,0x900b0b9a,0x7c00900,0x1230400,0x900b109a,0x7c00300,0xe30000,0x900b119a,0x7c00300,0xe30000,0x90408e06,0x24000000,0x400000,0xa0001004,\n+0x4000000,0x200000,0xa0001004,0x7c00100,0x230400,0xa000120f,0x2802100,0x962460,0xa000120f,0x2802400,0x962460,0xa000171a,0x2802100,0x962460,0xa000171a,0x2806400,\n+0x962460,0xa0002a00,0x4000000,0x1600000,0xa0003000,0x24000000,0x200000,0xa000581e,0x7c00100,0x230400,0xa0007300,0x24000000,0x200000,0xa0008301,0x2802400,0x962460,\n+0xa0008e00,0x24000000,0x400000,0xa000cf00,0x4000000,0x4e00000,0xa0010500,0x4000000,0x200000,0xa00114af,0x2802100,0x962460,0xa00114af,0x2802400,0x962460,0xa00114af,\n+0x2806400,0x962460,0xa00114af,0x6800000,0x1329800,0xa00114af,0x7c00100,0x230400,0xa00114af,0x7c00100,0x230560,0xa00116b0,0x2802100,0x962460,0xa00116b0,0x2802800,\n+0x962460,0xa00116b0,0x2806400,0x962460,0xa00116b0,0x4000000,0x400000,0xa00116b0,0x4000000,0x500000,0xa00116b0,0x4000010,0x400000,0xa00116b0,0x6800100,0x962540,\n+0xa00116b0,0x7c00100,0x230400,0xa00116b0,0x7c00100,0x230560,0xa00116b0,0xc000010,0x448000,0xa0011722,0x7c00100,0x230400,0xa00118b1,0x2802000,0x962460,0xa00118b1,\n+0x2802100,0x962460,0xa00118b1,0x2806400,0x962460,0xa00118b1,0x4000000,0x200000,0xa00118b1,0x4000000,0x400000,0xa00118b1,0x4000000,0x500000,0xa00118b1,0x6800100,\n+0x962540,0xa00118b1,0x7c00100,0x230400,0xa00118b1,0x7c00100,0x230560,0xa00118b1,0xc000010,0x448000,0xa00a4005,0x7c00100,0xe30400,0xa00a4711,0x7c40300,0xe30000,\n+0xa00ac400,0x4000000,0x4e00000,0xa00acb14,0x7c00100,0xe30000,0xa00acf00,0x4000000,0x34e00000,0xa00b0500,0x4000000,0x34e00000,0xa00b0500,0x4000000,0xb6800000,0xa00b0b96,\n+0x7c00900,0x1230400,0xa00b1211,0x7c40300,0xe30000,0xa00b1314,0x7c00100,0xe30000,0xa00b1596,0x7c00300,0xe30000,0xa040afac,0x6800400,0x962540,0xa08083ad,0x2802400,\n+0x962460,0xb0000a03,0x7c00100,0x220400,0xb0000b13,0x7c00100,0x2633800,0xb0001004,0x2802000,0x962460,0xb0001110,0x4000000,0x200000,0xb0001524,0x2802000,0x962460,\n+0xb0001615,0x4000000,0x500000,0xb000251b,0x7c00100,0x230400,0xb0007300,0x24000000,0x200000,0xb0008939,0x4000000,0x200000,0xb0008939,0x7c00100,0x230400,0xb0008e00,\n+0x24000000,0x200000,0xb0008e00,0x24000000,0x400000,0xb0008e00,0x24000010,0x400000,0xb0009257,0x2802000,0x962460,0xb0009257,0x4000000,0x1600000,0xb0009519,0x7c00100,\n+0x220400,0xb0009519,0x7c00100,0x250400,0xb0009a00,0x4000000,0x200000,0xb000b30a,0x2802100,0x962460,0xb000b30a,0x7c00100,0x230400,0xb000c178,0x80000000,0x218960,\n+0xb000c300,0x4000000,0x4200000,0xb000d202,0x2802000,0x962460,0xb000d476,0x6800100,0x962540,0xb000d476,0x7c00100,0x230400,0xb000e300,0x4000000,0x4e00000,0xb000fda1,\n+0x7c00100,0x1830000,0xb0010eaa,0x2802000,0x962460,0xb00116b0,0x7c00100,0x230400,0xb0011900,0x4000000,0x4e00000,0xb0011ab2,0x2802100,0x962460,0xb0011ab2,0x2802400,\n+0x962460,0xb0011ab2,0x2806400,0x962460,0xb0011ab2,0x4000000,0x200000,0xb0011ab2,0x6800100,0x962540,0xb0011ab2,0x7c00100,0x230400,0xb0011b0c,0x7c00100,0x230400,\n+0xb0011cb3,0x2802100,0x962460,0xb0011cb3,0x2806400,0x962460,0xb0011cb3,0x6800000,0x1329800,0xb0011cb3,0x6800100,0x962540,0xb0011cb3,0x7c00100,0x230400,0xb0011db6,\n+0x2802500,0x962460,0xb0011db6,0x6800000,0x1329800,0xb0011db6,0x7c00100,0x230400,0xb0011db6,0x7c00500,0x230400,0xb0011e00,0x4000000,0x200000,0xb0011e00,0x4000000,\n+0x1500000,0xb0011fb4,0x2802100,0x962460,0xb0011fb4,0x6800100,0x962540,0xb0011fb4,0x7c00100,0x230400,0xb0011fb4,0xc000010,0x248000,0xb0012000,0x4000000,0x200000,\n+0xb00121b5,0x4000000,0x200000,0xb00121b5,0x4000010,0x400000,0xb00121b5,0x7c00100,0x220400,0xb00121b5,0x7c00100,0x250400,0xb00121b5,0xc000010,0x448000,0xb00122b8,\n+0x4000000,0x200000,0xb00122b8,0x7c00100,0x230400,0xb00123b7,0x2802400,0x962460,0xb00123b7,0x4000000,0x200000,0xb00123b7,0x7c00100,0x230400,0xb00123b7,0xc000010,\n+0x248000,0xb00a4005,0x7c00100,0xe30400,0xb00a4711,0x7c40300,0xe30000,0xb00acf00,0x4000000,0x34e00000,0xb00b0500,0x4000000,0x34e00000,0xb00b0500,0x4000000,0x3ce00000,\n+0xb00b0500,0x4000000,0xb6800000,0xb00b109a,0x7c00300,0xe30000,0xb080e47c,0x2802000,0x962460,0xc0001524,0x4000000,0x500000,0xc0001a18,0x2806400,0x1862460,0xc0001a18,\n+0x7c00100,0x1830000,0xc0007300,0x24000000,0x200000,0xc0008e00,0x24000010,0x400000,0xc0009519,0x7c00100,0x220400,0xc0009519,0x7c00100,0x250400,0xc000c300,0x4000000,\n+0x420000f,0xc000d85c,0x2802100,0x962460,0xc000d85c,0x6800100,0x962540,0xc000d85c,0x7c00100,0x230400,0xc000dc99,0x7c00100,0x230400,0xc000e719,0x7c00100,0x220400,\n+0xc00107a7,0x7c00100,0x230400,0xc0010eaa,0x7c00100,0x230400,0xc00116b0,0x7c00100,0x230560,0xc0011900,0x4000000,0x4200000,0xc0012447,0,0x818820,0xc0012447,\n+0,0xc18820,0xc0012447,0,0x1418820,0xc00125b9,0x7c00100,0x230400,0xc00126bb,0x2802100,0x962460,0xc00126bb,0x2806400,0x962460,0xc00126bb,0x4000000,\n+0x500000,0xc00126bb,0x6800100,0x962540,0xc00126bb,0x7c00100,0x230400,0xc00127ba,0x2802400,0x962460,0xc00127ba,0x4000000,0x200000,0xc00127ba,0x6800000,0x1329800,\n+0xc00127ba,0x7c00100,0x230400,0xc00127ba,0x7c00900,0x230400,0xc0012800,0x4000000,0x200000,0xc0012b23,0x4000000,0x200000,0xc0012b23,0x4000000,0x400000,0xc0012b23,\n+0x4000000,0x1500000,0xc0012cbc,0x2802400,0x962460,0xc0012cbc,0x4000000,0x1600000,0xc0012cbc,0x6800000,0x1329800,0xc0012cbc,0x7c00100,0x230400,0xc00acf00,0x4000000,\n+0x34e00000,0xc00ae300,0x4000000,0x34e00000,0xc00b0500,0x4000000,0x34e00000,0xc00b0500,0x4000000,0xb6800000,0xc00b0b00,0x4000000,0x1200000,0xc00b0b00,0x7c00900,0x1230400,\n+0xc00b109a,0x7c00300,0xe30000,0xc00b2914,0x7c00100,0x2530000,0xc00b2916,0x7c00100,0x2530c00,0xc00b2a00,0x4000000,0x34e00000,0xc040af53,0x7c00100,0x230400,0xc0c12b7e,\n+0x4000000,0x200000,0xc14a44bf,0x4000000,0xe0000d,0xd000131f,0x2802c00,0x962460,0xd000171a,0x7c00100,0x230400,0xd0001821,0x2802100,0x962460,0xd0007300,0x24000000,\n+0x200000,0xd0008e00,0x24000000,0x200000,0xd0008f3a,0x2806000,0x962460,0xd0009519,0x7c00100,0x220400,0xd0009519,0x7c00100,0x250400,0xd000a500,0x4000000,0x200000,\n+0xd000c300,0x4000000,0x4e00000,0xd000d202,0x7c00100,0x230400,0xd000d476,0x7c00100,0x230400,0xd000d997,0x2802100,0x962460,0xd000d997,0x6800100,0x962540,0xd000e001,\n+0x2802100,0x962460,0xd000e700,0x4000400,0x200000,0xd000e719,0x7c00100,0x220400,0xd000e719,0x7c00500,0x23040f,0xd000fa00,0x4000000,0x4e00000,0xd0010eaa,0x4000010,\n+0x400000,0xd0010eaa,0x7c00100,0x230400,0xd0012dbd,0x4000000,0x200000,0xd0012dbd,0x7c00100,0x230400,0xd0012fbe,0x2802100,0x962460,0xd0012fbe,0x2802400,0x962460,\n+0xd0012fbe,0x2806400,0x962460,0xd0012fbe,0x4000000,0x400000,0xd0012fbe,0x6800000,0x1329800,0xd0012fbe,0x6800100,0x962540,0xd0012fbe,0x6800100,0x962541,0xd0012fbe,\n+0x6804400,0x962540,0xd0012fbe,0x7c00100,0x230400,0xd0012fbe,0x7c00100,0x230560,0xd0012fbe,0xc000010,0x448000,0xd0013183,0x7c00100,0x230400,0xd0013200,0x4000000,\n+0x200000,0xd0013200,0x6800000,0x1329805,0xd00134c0,0x2802100,0x962460,0xd00134c0,0x4000002,0x400000,0xd00134c0,0x7c00100,0x230400,0xd00a4305,0x7c00100,0xe30400,\n+0xd00a4611,0x7c40300,0xe30000,0xd00a4711,0x7c40300,0xe30000,0xd00a5e11,0x7c40300,0xe30000,0xd00acf00,0x4000000,0x34e00000,0xd00b0500,0x4000000,0x34e00000,0xd00b0500,\n+0x4000000,0xb6800000,0xd00b0b11,0x6800500,0x962540,0xd00b0bbf,0x2802200,0xc62460,0xd00b119a,0x7c00300,0xe30000,0xd00b2a00,0x4000000,0x34e00000,0xd00b2e11,0x7c40300,\n+0xe30000,0xd00b30bf,0x7c00300,0x230000,0xd00b339a,0x7c00300,0xe30000};\n@@ -3766,1 +3837,1 @@\n-static const int32_t countPropsVectors=6822;\n+static const int32_t countPropsVectors=6999;\n@@ -3768,12 +3839,12 @@\n-static const uint16_t scriptExtensions[256]={\n-0x800e,0x8019,8,0x8059,8,2,8,0x8038,8,6,8,0x8019,3,0x800c,2,0x22,\n-0x25,0x80b6,2,0x22,0x8025,2,0x12,2,0x22,0x54,0x79,0x7b,0xa7,0xb6,0x80b7,2,\n-0x8022,2,0x8025,2,0x21,2,0x80b6,2,0x25,4,0xa,0xf,0x10,0x15,0x19,0x1a,\n-0x1f,0x23,0x24,0x89,0x97,0x809e,4,0xa,0xf,0x10,0x15,0x19,0x1a,0x1f,0x23,0x24,\n-0x89,0x809e,4,0xa,0xf,0x10,0x15,0x1a,0x1f,0x21,0x23,0x24,0x3a,0x89,0x91,0x99,\n-0x9e,0xa0,0xaf,0xb2,0xb3,0x80bb,4,0xa,0xf,0x10,0x15,0x1a,0x1f,0x21,0x23,0x24,\n-0x30,0x3a,0x89,0x91,0x99,0x9e,0xa0,0xaf,0xb2,0xb3,0x80bb,0xa,0x78,0xa0,0x80b2,0xa,\n-0x6b,4,0x3a,0x8076,4,0x71,0x10,0x80a4,0x10,0x76,0xf,0x809d,0xf,0x7a,0x23,0x8089,\n-0x23,0x7e,0x15,0x80bb,0x15,0x82,0x1c,0x34,0x8076,0x1c,0x86,0xc,0x8019,0x2a,0x2b,0x2c,\n-0x802d,0x1b,0x805a,0x800a,4,0xa,0x15,0x8089,0xa,0x8089,4,0x800a,0xa,0x8097,0xa,0x15,\n-0x1a,0x1f,0x23,0x8024,0xa,0x80bb,4,0xa,0x15,0x1f,0x24,0x89,0x9e,0x80bb,0x8004,0x19,\n+static const uint16_t scriptExtensions[262]={\n+0x800e,0x8019,8,0x8059,8,2,8,0x8038,8,6,8,0x8019,2,0x22,0x25,0xb6,\n+0x80c0,2,0x22,0x8025,2,0x11,2,0x22,0x54,0x79,0x7b,0xa7,0xb6,0x80b7,2,0x8022,\n+2,0x25,0x80c0,2,0x20,2,0x80b6,4,0xa,0xf,0x10,0x15,0x19,0x1a,0x1f,0x23,\n+0x24,0x89,0x97,0x809e,4,0xa,0xf,0x10,0x15,0x19,0x1a,0x1f,0x23,0x24,0x89,0x809e,\n+4,0xa,0xf,0x10,0x15,0x1a,0x1f,0x21,0x23,0x24,0x3a,0x89,0x91,0x99,0x9e,0xa0,\n+0xaf,0xb2,0xb3,0x80bb,4,0xa,0xf,0x10,0x15,0x1a,0x1f,0x21,0x23,0x24,0x30,0x3a,\n+0x89,0x91,0x99,0x9e,0xa0,0xaf,0xb2,0xb3,0x80bb,0xa,0x78,0xa0,0x80b2,0xa,0x69,4,\n+0x3a,0x8076,4,0x6f,0x10,0x80a4,0x10,0x74,0xf,0x809d,0xf,0x78,0x23,0x8089,0x23,0x7c,\n+0x15,0x80bb,0x15,0x80,0x1c,0x34,0x8076,0x1c,0x84,0xc,0x8019,0x2a,0x2b,0x2c,0x802d,0x1b,\n+0x805a,0x800a,4,0xa,0x15,0x8089,0xa,0x8089,4,0x800a,0xa,0x8097,0xa,0x15,0x1a,0x1f,\n+0x23,0x8024,0xa,0x80bb,4,0xa,0x15,0x1f,0x24,0x89,0x9e,0x80bb,0x8004,8,0x8022,0x19,\n@@ -3781,4 +3852,5 @@\n-5,0x8011,0x11,0x14,0x8016,0xa,0xf,0x10,0x78,0x91,0x99,0x9d,0x9e,0xa0,0xa3,0x80b2,\n-0xa,0xf,0x10,0x15,0x1a,0x78,0x91,0x99,0x9d,0x9e,0xa0,0xa3,0xb2,0x80bb,0xa,0xf,\n-0x10,0x15,0x78,0x91,0x99,0x9d,0x9e,0xa0,0xa3,0xb2,0x80bb,0xa,0x9a,0xa,0x8023,0xa,\n-0xed,0x19,0x1c,0x804f,0x37,0x804e,0x2f,0x31,0x8053,0x2f,0x8031,2,0x8007,0x89,0x7e,0x8087};\n+5,0x8011,0x11,0x14,0x8016,0x11,0x8019,0xa,0xf,0x10,0x78,0x91,0x99,0x9d,0x9e,0xa0,\n+0xa3,0x80b2,0xa,0xf,0x10,0x15,0x1a,0x78,0x91,0x99,0x9d,0x9e,0xa0,0xa3,0xb2,0x80bb,\n+0xa,0xf,0x10,0x15,0x78,0x91,0x99,0x9d,0x9e,0xa0,0xa3,0xb2,0x80bb,0xa,0x98,0xa,\n+0x8023,0xa,0xef,0x19,0x1c,0x804f,0x37,0x804e,2,0x8025,2,0xf8,0x2f,0x31,0x8053,0x2f,\n+0x8031,2,0x8007,0x89,0x7c,0x8087};\n@@ -3786,1 +3858,1 @@\n-static const int32_t indexes[UPROPS_INDEX_COUNT]={0x2afc,0x2afc,0x2afc,0x2afc,0x66be,3,0x8164,0x81e4,0x81e4,0x81e4,0xb2cbc,0x2a75a31,0,0,0,0};\n+static const int32_t indexes[UPROPS_INDEX_COUNT]={0x2b96,0x2b96,0x2b96,0x2b96,0x6898,3,0x83ef,0x8472,0x8472,0x8472,0xb34c0,0x2a75a31,0,0,0,0};\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uchar_props_data.h","additions":3450,"deletions":3378,"binary":false,"changes":6828,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-CharacterIterator*\n+UCharCharacterIterator*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uchriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,10 @@\n+    \/\/ Thread safety messiness: From ticket 10295, calls to registerCleanup() may occur\n+    \/\/ concurrently. Although such cases should be storing the same value, they raise errors\n+    \/\/ from the thread sanity checker. Doing the store within a mutex avoids those.\n+    \/\/ BUT that can trigger a recursive entry into std::call_once() in umutex.cpp when this code,\n+    \/\/ running from the call_once function, tries to grab the ICU global mutex, which\n+    \/\/ re-enters the mutex init path. So, work-around by special casing UCLN_COMMON_MUTEX, not\n+    \/\/ using the ICU global mutex for it.\n+    \/\/\n+    \/\/ No other point in ICU uses std::call_once().\n+\n@@ -69,2 +79,3 @@\n-    if (UCLN_COMMON_START < type && type < UCLN_COMMON_COUNT)\n-    {\n+    if (type == UCLN_COMMON_MUTEX) {\n+        gCommonCleanupFunctions[type] = func;\n+    } else if (UCLN_COMMON_START < type && type < UCLN_COMMON_COUNT)  {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucln_cmn.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -25,2 +25,0 @@\n-U_CFUNC UBool umtx_cleanup(void);\n-\n@@ -43,0 +41,2 @@\n+    UCLN_COMMON_LOCALE_ALIAS,\n+    UCLN_COMMON_LOCALE_KNOWN_CANONICALIZED,\n@@ -44,0 +44,2 @@\n+    UCLN_COMMON_LIKELY_SUBTAGS,\n+    UCLN_COMMON_LOCALE_DISTANCE,\n@@ -65,0 +67,1 @@\n+    UCLN_COMMON_MUTEX,    \/\/ Mutexes should be the last to be cleaned up.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucln_cmn.h","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-static UBool gAutoCleanRegistered = FALSE;\n+static UBool gAutoCleanRegistered = false;\n@@ -91,1 +91,1 @@\n-        gAutoCleanRegistered = TRUE;\n+        gAutoCleanRegistered = true;\n@@ -138,1 +138,1 @@\n-    BOOL status = TRUE;\n+    BOOL status = true;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucln_imp.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#include <memory>\n+\n@@ -161,1 +163,0 @@\n-    char *stackBufferChars = (char *)stackBuffer;\n@@ -227,3 +228,2 @@\n-\n-    \/* Pointers on 64-bit platforms need to be aligned\n-     * on a 64-bit boundary in memory.\n+    \/* Adjust (if necessary) the stackBuffer pointer to be aligned correctly for a UConverter.\n+     * TODO(Jira ICU-20736) Redo this using std::align() once g++4.9 compatibility is no longer needed.\n@@ -231,5 +231,7 @@\n-    if (U_ALIGNMENT_OFFSET(stackBuffer) != 0) {\n-        int32_t offsetUp = (int32_t)U_ALIGNMENT_OFFSET_UP(stackBufferChars);\n-        if(stackBufferSize > offsetUp) {\n-            stackBufferSize -= offsetUp;\n-            stackBufferChars += offsetUp;\n+    if (stackBuffer) {\n+        uintptr_t p = reinterpret_cast<uintptr_t>(stackBuffer);\n+        uintptr_t aligned_p = (p + alignof(UConverter) - 1) & ~(alignof(UConverter) - 1);\n+        ptrdiff_t pointerAdjustment = aligned_p - p;\n+        if (bufferSizeNeeded + pointerAdjustment <= stackBufferSize) {\n+            stackBuffer = reinterpret_cast<void *>(aligned_p);\n+            stackBufferSize -= static_cast<int32_t>(pointerAdjustment);\n@@ -242,2 +244,0 @@\n-    stackBuffer = (void *)stackBufferChars;\n-\n@@ -478,1 +478,1 @@\n-    UAlignedMemory cloneBuffer[U_CNV_SAFECLONE_BUFFERSIZE \/ sizeof(UAlignedMemory) + 1];\n+    alignas(UConverter) char cloneBuffer[U_CNV_SAFECLONE_BUFFERSIZE];\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -481,1 +481,1 @@\n-    char myLocale[6]={' ',' ',' ',' ',' ',' '};\n+    char myLocale[7]={' ',' ',' ',' ',' ',' ', '\\0'};\n@@ -496,1 +496,1 @@\n-            uprv_strncpy(myLocale, pArgs->locale, sizeof(myLocale));\n+            uprv_strncpy(myLocale, pArgs->locale, sizeof(myLocale)-1);\n@@ -3574,8 +3574,0 @@\n- * ucnv_safeClone() of the converter will align the entire cloneStruct,\n- * and then ucnv_safeClone() of the sub-converter may additionally align\n- * currentConverter inside the cloneStruct, for which we need the deadSpace\n- * after currentConverter.\n- * This is because UAlignedMemory may be larger than the actually\n- * necessary alignment size for the platform.\n- * The other cloneStruct fields will not be moved around,\n- * and are aligned properly with cloneStruct's alignment.\n@@ -3587,1 +3579,0 @@\n-    UAlignedMemory deadSpace;\n@@ -3605,0 +3596,4 @@\n+    if (U_FAILURE(*status)){\n+        return nullptr;\n+    }\n+\n@@ -3622,1 +3617,1 @@\n-        size = (int32_t)(sizeof(UConverter) + sizeof(UAlignedMemory)); \/* include size of padding *\/\n+        size = (int32_t)sizeof(UConverter);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv2022.cpp","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -197,4 +197,1 @@\n-static icu::UMutex *cnvCacheMutex() {                 \/* Mutex for synchronizing cnv cache access. *\/\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static icu::UMutex cnvCacheMutex;\n@@ -268,1 +265,1 @@\n-ucnv_enableCleanup() {\n+ucnv_enableCleanup(void) {\n@@ -605,1 +602,1 @@\n-        umtx_lock(cnvCacheMutex());\n+        umtx_lock(&cnvCacheMutex);\n@@ -607,1 +604,1 @@\n-        umtx_unlock(cnvCacheMutex());\n+        umtx_unlock(&cnvCacheMutex);\n@@ -615,1 +612,1 @@\n-        umtx_lock(cnvCacheMutex());\n+        umtx_lock(&cnvCacheMutex);\n@@ -617,1 +614,1 @@\n-        umtx_unlock(cnvCacheMutex());\n+        umtx_unlock(&cnvCacheMutex);\n@@ -818,1 +815,1 @@\n-        umtx_lock(cnvCacheMutex());\n+        umtx_lock(&cnvCacheMutex);\n@@ -820,1 +817,1 @@\n-        umtx_unlock(cnvCacheMutex());\n+        umtx_unlock(&cnvCacheMutex);\n@@ -1067,1 +1064,1 @@\n-    umtx_lock(cnvCacheMutex());\n+    umtx_lock(&cnvCacheMutex);\n@@ -1096,1 +1093,1 @@\n-    umtx_unlock(cnvCacheMutex());\n+    umtx_unlock(&cnvCacheMutex);\n@@ -1202,1 +1199,1 @@\n-    umtx_lock(cnvCacheMutex());\n+    umtx_lock(&cnvCacheMutex);\n@@ -1218,1 +1215,1 @@\n-    umtx_unlock(cnvCacheMutex());\n+    umtx_unlock(&cnvCacheMutex);\n@@ -1243,1 +1240,1 @@\n-        icu::Mutex lock(cnvCacheMutex());\n+        icu::Mutex lock(&cnvCacheMutex);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv_bld.cpp","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-    UBool                sharedDataCached;   \/* TRUE:  shared data is in cache, don't destroy on ucnv_close() if 0 ref.  FALSE: shared data isn't in the cache, do attempt to clean it up if the ref is 0 *\/\n-    \/** If FALSE, then referenceCounter is not used. Must not change after initialization. *\/\n+    UBool                sharedDataCached;   \/* true:  shared data is in cache, don't destroy on ucnv_close() if 0 ref.  false: shared data isn't in the cache, do attempt to clean it up if the ref is 0 *\/\n+    \/** If false, then referenceCounter is not used. Must not change after initialization. *\/\n@@ -131,1 +131,1 @@\n-        NULL, pStaticData, FALSE, FALSE, pImpl, \\\n+        NULL, pStaticData, false, false, pImpl, \\\n@@ -184,3 +184,3 @@\n-    UBool sharedDataIsCached;  \/* TRUE:  shared data is in cache, don't destroy on ucnv_close() if 0 ref.  FALSE: shared data isn't in the cache, do attempt to clean it up if the ref is 0 *\/\n-    UBool isCopyLocal;  \/* TRUE if UConverter is not owned and not released in ucnv_close() (stack-allocated, safeClone(), etc.) *\/\n-    UBool isExtraLocal; \/* TRUE if extraInfo is not owned and not released in ucnv_close() (stack-allocated, safeClone(), etc.) *\/\n+    UBool sharedDataIsCached;  \/* true:  shared data is in cache, don't destroy on ucnv_close() if 0 ref.  false: shared data isn't in the cache, do attempt to clean it up if the ref is 0 *\/\n+    UBool isCopyLocal;  \/* true if UConverter is not owned and not released in ucnv_close() (stack-allocated, safeClone(), etc.) *\/\n+    UBool isExtraLocal; \/* true if extraInfo is not owned and not released in ucnv_close() (stack-allocated, safeClone(), etc.) *\/\n@@ -292,1 +292,1 @@\n-ucnv_enableCleanup();\n+ucnv_enableCleanup(void);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv_bld.h","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    { (int32_t)sizeof(UConverterLoadArgs), 0, FALSE, FALSE, 0, 0, NULL, NULL, NULL }\n+    { (int32_t)sizeof(UConverterLoadArgs), 0, false, false, 0, 0, NULL, NULL, NULL }\n@@ -270,2 +270,2 @@\n-#define TO_U_USE_FALLBACK(useFallback) TRUE\n-#define UCNV_TO_U_USE_FALLBACK(cnv) TRUE\n+#define TO_U_USE_FALLBACK(useFallback) true\n+#define UCNV_TO_U_USE_FALLBACK(cnv) true\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv_cnv.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1110,5 +1110,7 @@\n-#define CHECK_SOURCE_LIMIT(index) \\\n-     if (args->source+index > args->sourceLimit){\\\n-         *err = U_TRUNCATED_CHAR_FOUND;\\\n-         args->source = args->sourceLimit;\\\n-         return 0xffff;}\n+#define CHECK_SOURCE_LIMIT(index) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if (args->source+index > args->sourceLimit) { \\\n+        *err = U_TRUNCATED_CHAR_FOUND; \\\n+        args->source = args->sourceLimit; \\\n+        return 0xffff; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv_lmb.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -710,1 +710,1 @@\n-        int32_t length=count-toULimit;\n+        int32_t length=count-toULength;\n@@ -712,1 +712,1 @@\n-        count=toULimit+length;\n+        count=toULength+length;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnv_u8.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-#define NEGDIVMOD(n, d, m) { \\\n+#define NEGDIVMOD(n, d, m) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -212,1 +212,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnvbocu.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-#define CONCAT_ESCAPE_MACRO( args, targetIndex,targetLength,strToAppend, err, len,sourceIndex){                             \\\n+#define CONCAT_ESCAPE_MACRO(args, targetIndex,targetLength,strToAppend, err, len,sourceIndex) UPRV_BLOCK_MACRO_BEGIN {      \\\n@@ -56,1 +56,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -521,7 +521,0 @@\n- * ucnv_safeClone() of the HZ converter will align the entire cloneHZStruct,\n- * and then ucnv_safeClone() of the sub-converter may additionally align\n- * subCnv inside the cloneHZStruct, for which we need the deadSpace after\n- * subCnv. This is because UAlignedMemory may be larger than the actually\n- * necessary alignment size for the platform.\n- * The other cloneHZStruct fields will not be moved around,\n- * and are aligned properly with cloneHZStruct's alignment.\n@@ -533,1 +526,0 @@\n-    UAlignedMemory deadSpace;\n@@ -548,1 +540,1 @@\n-        return 0;\n+        return nullptr;\n@@ -553,1 +545,1 @@\n-        return 0;\n+        return nullptr;\n@@ -564,1 +556,1 @@\n-    size = (int32_t)(sizeof(UConverter) + sizeof(UAlignedMemory)); \/* include size of padding *\/\n+    size = (int32_t)sizeof(UConverter);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnvhz.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -834,1 +834,1 @@\n-#define WRITE_TO_TARGET_FROM_U(args,offsets,source,target,targetLimit,targetByteUnit,err){      \\\n+#define WRITE_TO_TARGET_FROM_U(args,offsets,source,target,targetLimit,targetByteUnit,err) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -887,1 +887,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -1122,1 +1122,1 @@\n-#define WRITE_TO_TARGET_TO_U(args,source,target,offsets,offset,targetUniChar,delta, err){\\\n+#define WRITE_TO_TARGET_TO_U(args,source,target,offsets,offset,targetUniChar,delta, err) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -1143,1 +1143,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -1145,1 +1145,1 @@\n-#define GET_MAPPING(sourceChar,targetUniChar,data){                                      \\\n+#define GET_MAPPING(sourceChar,targetUniChar,data) UPRV_BLOCK_MACRO_BEGIN {              \\\n@@ -1156,1 +1156,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnvisci.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-    FALSE, \\\n+    false, \\\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnvmbcs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -694,1 +694,2 @@\n-                                   uint32_t *mask, UErrorCode *status) {\n+                                   uint32_t *theMask, UErrorCode *status) {\n+  LocalMemory<uint32_t> mask(theMask);\n@@ -697,3 +698,2 @@\n-  struct Enumerator* result = (Enumerator*)uprv_malloc(sizeof(Enumerator));\n-  if (result == NULL) {\n-    uprv_free(mask);\n+  LocalMemory<Enumerator> result(static_cast<Enumerator *>(uprv_malloc(sizeof(Enumerator))));\n+  if (result.isNull()) {\n@@ -701,1 +701,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -703,1 +703,1 @@\n-  result->index = NULL;  \/\/ this will be allocated later!\n+  result->index = nullptr;  \/\/ this will be allocated later!\n@@ -707,2 +707,2 @@\n-  UEnumeration *en = (UEnumeration *)uprv_malloc(sizeof(UEnumeration));\n-  if (en == NULL) {\n+  LocalMemory<UEnumeration> en(static_cast<UEnumeration *>(uprv_malloc(sizeof(UEnumeration))));\n+  if (en.isNull()) {\n@@ -710,2 +710,0 @@\n-    uprv_free(mask);\n-    uprv_free(result);\n@@ -713,1 +711,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -715,2 +713,1 @@\n-  memcpy(en, &defaultEncodings, sizeof(UEnumeration));\n-  en->context = result;\n+  memcpy(en.getAlias(), &defaultEncodings, sizeof(UEnumeration));\n@@ -719,1 +716,1 @@\n-  int16_t numOnes = countOnes(mask, columns);\n+  int16_t numOnes = countOnes(mask.getAlias(), columns);\n@@ -722,2 +719,5 @@\n-    result->index = (int16_t*) uprv_malloc(numOnes * sizeof(int16_t));\n-\n+    result->index = static_cast<int16_t*>(uprv_malloc(numOnes * sizeof(int16_t)));\n+    if (result->index == nullptr) {\n+      *status = U_MEMORY_ALLOCATION_ERROR;\n+      return nullptr;\n+    }\n@@ -737,2 +737,2 @@\n-  uprv_free(mask);\n-  return en;\n+  en->context = result.orphan();\n+  return en.orphan();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucnvsel.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucol_swp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-    uint32_t trieValue, value;\n+    uint32_t trieValue, value = nullValue;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucptrie.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,0 +94,2 @@\n+static const char CURRENCIES_FORMAL[] = \"Currencies%formal\";\n+static const char CURRENCIES_VARIANT[] = \"Currencies%variant\";\n@@ -368,4 +370,1 @@\n-static UMutex *gCRegLock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gCRegLock;\n@@ -397,1 +396,1 @@\n-                umtx_lock(gCRegLock());\n+                umtx_lock(&gCRegLock);\n@@ -404,1 +403,1 @@\n-                umtx_unlock(gCRegLock());\n+                umtx_unlock(&gCRegLock);\n@@ -414,1 +413,1 @@\n-        umtx_lock(gCRegLock());\n+        umtx_lock(&gCRegLock);\n@@ -427,1 +426,1 @@\n-        umtx_unlock(gCRegLock());\n+        umtx_unlock(&gCRegLock);\n@@ -433,1 +432,1 @@\n-        umtx_lock(gCRegLock());\n+        umtx_lock(&gCRegLock);\n@@ -445,1 +444,1 @@\n-        umtx_unlock(gCRegLock());\n+        umtx_unlock(&gCRegLock);\n@@ -655,1 +654,1 @@\n-    if (choice < 0 || choice > 2) {\n+    if (choice < 0 || choice > 4) {\n@@ -690,1 +689,1 @@\n-    if (nameStyle == UCURR_NARROW_SYMBOL_NAME) {\n+    if (nameStyle == UCURR_NARROW_SYMBOL_NAME || nameStyle == UCURR_FORMAL_SYMBOL_NAME || nameStyle == UCURR_VARIANT_SYMBOL_NAME) {\n@@ -692,1 +691,14 @@\n-        key.append(CURRENCIES_NARROW, ec2);\n+        switch (nameStyle) {\n+        case UCURR_NARROW_SYMBOL_NAME:\n+            key.append(CURRENCIES_NARROW, ec2);\n+            break;\n+        case UCURR_FORMAL_SYMBOL_NAME:\n+            key.append(CURRENCIES_FORMAL, ec2);\n+            break;\n+        case UCURR_VARIANT_SYMBOL_NAME:\n+            key.append(CURRENCIES_VARIANT, ec2);\n+            break;\n+        default:\n+            *ec = U_UNSUPPORTED_ERROR;\n+            return 0;\n+        }\n@@ -719,1 +731,3 @@\n-    *isChoiceFormat = FALSE;\n+    if (isChoiceFormat != NULL) {\n+        *isChoiceFormat = FALSE;\n+    }\n@@ -870,1 +884,1 @@\n-    char locale[ULOC_FULLNAME_CAPACITY];\n+    char locale[ULOC_FULLNAME_CAPACITY] = \"\";\n@@ -945,1 +959,1 @@\n-    char loc[ULOC_FULLNAME_CAPACITY];\n+    char loc[ULOC_FULLNAME_CAPACITY] = \"\";\n@@ -1359,4 +1373,1 @@\n-static UMutex *gCurrencyCacheMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gCurrencyCacheMutex;\n@@ -1411,1 +1422,1 @@\n-    umtx_lock(gCurrencyCacheMutex());\n+    umtx_lock(&gCurrencyCacheMutex);\n@@ -1426,1 +1437,1 @@\n-    umtx_unlock(gCurrencyCacheMutex());\n+    umtx_unlock(&gCurrencyCacheMutex);\n@@ -1432,1 +1443,1 @@\n-        umtx_lock(gCurrencyCacheMutex());\n+        umtx_lock(&gCurrencyCacheMutex);\n@@ -1471,1 +1482,1 @@\n-        umtx_unlock(gCurrencyCacheMutex());\n+        umtx_unlock(&gCurrencyCacheMutex);\n@@ -1478,1 +1489,1 @@\n-    umtx_lock(gCurrencyCacheMutex());\n+    umtx_lock(&gCurrencyCacheMutex);\n@@ -1483,1 +1494,1 @@\n-    umtx_unlock(gCurrencyCacheMutex());\n+    umtx_unlock(&gCurrencyCacheMutex);\n@@ -1604,1 +1615,0 @@\n-    UBool isChoiceFormat;\n@@ -1607,1 +1617,1 @@\n-                                          &isChoiceFormat, &len, &ec);\n+                                          nullptr \/* isChoiceFormat *\/, &len, &ec);\n@@ -1618,1 +1628,1 @@\n-U_DRAFT int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1641,1 +1651,1 @@\n-U_DRAFT double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -2267,1 +2277,0 @@\n-        uloc_getKeywordValue(locale, \"currency\", id, ULOC_FULLNAME_CAPACITY, &localStatus);\n@@ -2383,1 +2392,0 @@\n-            resLen = uloc_getKeywordValue(locale, \"currency\", id, ULOC_FULLNAME_CAPACITY, &localStatus);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ucurr.cpp","additions":40,"deletions":32,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"restrace.h\"\n@@ -113,1 +114,1 @@\n-#if U_PLATFORM_HAS_WINUWP_API == 0\n+#if !defined(ICU_DATA_DIR_WINDOWS)\n@@ -117,1 +118,2 @@\n-static UDataFileAccess  gDataFileAccess = UDATA_NO_FILES;        \/\/ Windows UWP looks in one spot explicitly\n+\/\/ If we are using the Windows data directory, then look in one spot only.\n+static UDataFileAccess  gDataFileAccess = UDATA_NO_FILES;\n@@ -209,1 +211,1 @@\n-#if U_PLATFORM_HAS_WINUWP_API == 0\n+#if !defined(ICU_DATA_DIR_WINDOWS)\n@@ -323,1 +325,1 @@\n-    fprintf(stderr, \"Cache: [%s] -> %p\\n\", baseName, retVal);\n+    fprintf(stderr, \"Cache: [%s] -> %p\\n\", baseName, (void*) retVal);\n@@ -386,1 +388,1 @@\n-    newElement->item, u_errorName(subErr), newElement->item->vFuncs);\n+    (void*) newElement->item, u_errorName(subErr), (void*) newElement->item->vFuncs);\n@@ -480,1 +482,1 @@\n-    fprintf(stderr, \"SUFFIX=%s [%p]\\n\", inSuffix, inSuffix);\n+    fprintf(stderr, \"SUFFIX=%s [%p]\\n\", inSuffix, (void*) inSuffix);\n@@ -495,2 +497,1 @@\n-    fprintf(stderr, \"%p: init %s -> [path=%s], [base=%s], [suff=%s], [itempath=%s], [nextpath=%s], [checklast4=%s]\\n\",\n-            iter,\n+    fprintf(stderr, \"0: init %s -> [path=%s], [base=%s], [suff=%s], [itempath=%s], [nextpath=%s], [checklast4=%s]\\n\",\n@@ -500,1 +501,1 @@\n-            suffix,\n+            suffix.data(),\n@@ -556,1 +557,1 @@\n-            uint32_t qqq;\n+            int32_t qqq;\n@@ -577,1 +578,1 @@\n-            fprintf(stderr, \"Have %s file on the path: %s\\n\", suffix, pathBuffer.data());\n+            fprintf(stderr, \"Have %s file on the path: %s\\n\", suffix.data(), pathBuffer.data());\n@@ -643,1 +644,2 @@\n-#if U_PLATFORM_HAS_WINUWP_API == 0 \/\/ Windows UWP Platform does not support dll icu data at this time\n+#if !defined(ICU_DATA_DIR_WINDOWS)\n+\/\/ When using the Windows system data, we expect only a single data file.\n@@ -693,1 +695,2 @@\n-#if U_PLATFORM_HAS_WINUWP_API == 0 \/\/ Windows UWP Platform does not support dll icu data at this time\n+#if !defined(ICU_DATA_DIR_WINDOWS)\n+\/\/ When using the Windows system data, we expect only a single data file.\n@@ -717,1 +720,2 @@\n-#if U_PLATFORM_HAS_WINUWP_API == 0 \/\/ Windows UWP Platform does not support dll icu data at this time\n+#if !defined(ICU_DATA_DIR_WINDOWS)\n+\/\/ When using the Windows system data, we expect only a single data file.\n@@ -834,1 +838,1 @@\n-    static UMutex extendICUDataMutex = U_MUTEX_INITIALIZER;\n+    static UMutex extendICUDataMutex;\n@@ -1073,1 +1077,1 @@\n-            fprintf(stderr, \"%s: pHeader=%p - %s\\n\", tocEntryName, pHeader, u_errorName(*subErrorCode));\n+            fprintf(stderr, \"%s: pHeader=%p - %s\\n\", tocEntryName, (void*) pHeader, u_errorName(*subErrorCode));\n@@ -1079,1 +1083,1 @@\n-                fprintf(stderr, \"pEntryData=%p\\n\", pEntryData);\n+                fprintf(stderr, \"pEntryData=%p\\n\", (void*) pEntryData);\n@@ -1171,0 +1175,3 @@\n+    FileTracer::traceOpen(path, type, name);\n+\n+\n@@ -1279,1 +1286,1 @@\n-#if U_PLATFORM_HAS_WINUWP_API == 0 \/\/ Windows UWP Platform does not support dll icu data at this time\n+#if !defined(ICU_DATA_DIR_WINDOWS)\n@@ -1284,1 +1291,1 @@\n-    \/\/ Windows UWP expects only a single data file.\n+    \/\/ When using the Windows system data, we expects only a single data file.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/udata.cpp","additions":26,"deletions":19,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * @return TRUE if the two elements are equal.\n+ * @return true if the two elements are equal.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uelement.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,7 +122,8 @@\n-#define HASH_DELETE_KEY_VALUE(hash, keypointer, valuepointer) \\\n-            if (hash->keyDeleter != NULL && keypointer != NULL) { \\\n-                (*hash->keyDeleter)(keypointer); \\\n-            } \\\n-            if (hash->valueDeleter != NULL && valuepointer != NULL) { \\\n-                (*hash->valueDeleter)(valuepointer); \\\n-            }\n+#define HASH_DELETE_KEY_VALUE(hash, keypointer, valuepointer) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if (hash->keyDeleter != NULL && keypointer != NULL) { \\\n+        (*hash->keyDeleter)(keypointer); \\\n+    } \\\n+    if (hash->valueDeleter != NULL && valuepointer != NULL) { \\\n+        (*hash->valueDeleter)(valuepointer); \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uhash.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-    UBool startsWithPrefix = TRUE;\n-\n@@ -68,1 +66,1 @@\n-            startsWithPrefix = FALSE;\n+            return FALSE;\n@@ -71,1 +69,1 @@\n-    return startsWithPrefix;\n+    return TRUE;\n@@ -444,0 +442,1 @@\n+                break;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uidna.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -210,1 +210,2 @@\n-            UPRV_UNREACHABLE; \/* Variant characters were used. These are not portable in ICU. *\/\n+            U_ASSERT(FALSE); \/* Variant characters were used. These are not portable in ICU. *\/\n+            u=0;\n@@ -448,0 +449,7 @@\n+U_CFUNC UBool\n+uprv_isEbcdicAtSign(char c) {\n+    static const uint8_t ebcdicAtSigns[] = {\n+        0x7C, 0x44, 0x66, 0x80, 0xAC, 0xAE, 0xAF, 0xB5, 0xEC, 0xEF, 0x00 };\n+    return c != 0 && uprv_strchr((const char *)ebcdicAtSigns, c) != nullptr;\n+}\n+\n@@ -564,0 +572,5 @@\n+U_CAPI char U_EXPORT2\n+uprv_ebcdicToAscii(char c) {\n+    return (char)asciiFromEbcdic[(uint8_t)c];\n+}\n+\n@@ -569,1 +582,1 @@\n-U_INTERNAL uint8_t* U_EXPORT2\n+U_CAPI uint8_t* U_EXPORT2\n@@ -590,1 +603,1 @@\n-U_INTERNAL uint8_t* U_EXPORT2\n+U_CAPI uint8_t* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uinvchar.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @return TRUE if s contains only invariant characters.\n+ * @return true if s contains only invariant characters.\n@@ -40,1 +40,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -49,1 +49,1 @@\n- * @return TRUE if s contains only invariant characters.\n+ * @return true if s contains only invariant characters.\n@@ -53,1 +53,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -71,0 +71,69 @@\n+#ifdef __cplusplus\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * Like U_UPPER_ORDINAL(x) but with validation.\n+ * Returns 0..25 for A..Z else a value outside 0..25.\n+ *\/\n+inline int32_t uprv_upperOrdinal(int32_t c) {\n+#if U_CHARSET_FAMILY==U_ASCII_FAMILY\n+    return c - 'A';\n+#elif U_CHARSET_FAMILY==U_EBCDIC_FAMILY\n+    \/\/ EBCDIC: A-Z (26 letters) is split into three ranges A-I (9 letters), J-R (9), S-Z (8).\n+    \/\/ https:\/\/en.wikipedia.org\/wiki\/EBCDIC_037#Codepage_layout\n+    if (c <= 'I') { return c - 'A'; }  \/\/ A-I --> 0-8\n+    if (c < 'J') { return -1; }\n+    if (c <= 'R') { return c - 'J' + 9; }  \/\/ J-R --> 9..17\n+    if (c < 'S') { return -1; }\n+    return c - 'S' + 18;  \/\/ S-Z --> 18..25\n+#else\n+#   error Unknown charset family!\n+#endif\n+}\n+\n+\/\/ Like U_UPPER_ORDINAL(x) but for lowercase and with validation.\n+\/\/ Returns 0..25 for a..z else a value outside 0..25.\n+inline int32_t uprv_lowerOrdinal(int32_t c) {\n+#if U_CHARSET_FAMILY==U_ASCII_FAMILY\n+    return c - 'a';\n+#elif U_CHARSET_FAMILY==U_EBCDIC_FAMILY\n+    \/\/ EBCDIC: a-z (26 letters) is split into three ranges a-i (9 letters), j-r (9), s-z (8).\n+    \/\/ https:\/\/en.wikipedia.org\/wiki\/EBCDIC_037#Codepage_layout\n+    if (c <= 'i') { return c - 'a'; }  \/\/ a-i --> 0-8\n+    if (c < 'j') { return -1; }\n+    if (c <= 'r') { return c - 'j' + 9; }  \/\/ j-r --> 9..17\n+    if (c < 's') { return -1; }\n+    return c - 's' + 18;  \/\/ s-z --> 18..25\n+#else\n+#   error Unknown charset family!\n+#endif\n+}\n+\n+U_NAMESPACE_END\n+\n+#endif\n+\n+\/**\n+ * Returns true if c == '@' is possible.\n+ * The @ sign is variant, and the @ sign used on one\n+ * EBCDIC machine won't be compiled the same way on other EBCDIC based machines.\n+ * @internal\n+ *\/\n+U_CFUNC UBool\n+uprv_isEbcdicAtSign(char c);\n+\n+\/**\n+ * \\def uprv_isAtSign\n+ * Returns true if c == '@' is possible.\n+ * For ASCII, checks for exactly '@'. For EBCDIC, calls uprv_isEbcdicAtSign().\n+ * @internal\n+ *\/\n+#if U_CHARSET_FAMILY==U_ASCII_FAMILY\n+#   define uprv_isAtSign(c) ((c)=='@')\n+#elif U_CHARSET_FAMILY==U_EBCDIC_FAMILY\n+#   define uprv_isAtSign(c) uprv_isEbcdicAtSign(c)\n+#else\n+#   error Unknown charset family!\n+#endif\n+\n@@ -75,1 +144,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -91,0 +160,20 @@\n+\/**\n+ * Converts an EBCDIC invariant character to ASCII.\n+ * @internal\n+ *\/\n+U_CAPI char U_EXPORT2\n+uprv_ebcdicToAscii(char c);\n+\n+\/**\n+ * \\def uprv_invCharToAscii\n+ * Converts an invariant character to ASCII.\n+ * @internal\n+ *\/\n+#if U_CHARSET_FAMILY==U_ASCII_FAMILY\n+#   define uprv_invCharToAscii(c) (c)\n+#elif U_CHARSET_FAMILY==U_EBCDIC_FAMILY\n+#   define uprv_invCharToAscii(c) uprv_ebcdicToAscii(c)\n+#else\n+#   error Unknown charset family!\n+#endif\n+\n@@ -95,1 +184,1 @@\n-U_INTERNAL char U_EXPORT2\n+U_CAPI char U_EXPORT2\n@@ -116,1 +205,1 @@\n-U_INTERNAL uint8_t* U_EXPORT2\n+U_CAPI uint8_t* U_EXPORT2\n@@ -125,1 +214,1 @@\n-U_INTERNAL uint8_t* U_EXPORT2\n+U_CAPI uint8_t* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uinvchar.h","additions":97,"deletions":8,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -33,0 +33,3 @@\n+#include \"unicode\/bytestream.h\"\n+#include \"unicode\/errorcode.h\"\n+#include \"unicode\/stringpiece.h\"\n@@ -37,0 +40,1 @@\n+#include \"bytesinkutil.h\"\n@@ -49,2 +53,0 @@\n-#include <stdio.h> \/* for sprintf *\/\n-\n@@ -58,7 +60,0 @@\n-U_CFUNC int32_t\n-locale_getKeywords(const char *localeID,\n-            char prev,\n-            char *keywords, int32_t keywordCapacity,\n-            char *values, int32_t valuesCapacity, int32_t *valLen,\n-            UBool valuesToo,\n-            UErrorCode *status);\n@@ -151,1 +146,2 @@\n-    \"ml\",  \"mn\",  \"mnc\", \"mni\", \"moh\", \"mos\", \"mr\",  \"mrj\",\n+    \"ml\",  \"mn\",  \"mnc\", \"mni\", \"mo\",\n+    \"moh\", \"mos\", \"mr\",  \"mrj\",\n@@ -159,1 +155,1 @@\n-    \"pa\",  \"pag\", \"pal\", \"pam\", \"pap\", \"pau\", \"pcd\", \"pdc\",\n+    \"pa\",  \"pag\", \"pal\", \"pam\", \"pap\", \"pau\", \"pcd\", \"pcm\", \"pdc\",\n@@ -267,1 +263,2 @@\n-    \"mal\", \"mon\", \"mnc\", \"mni\", \"moh\", \"mos\", \"mar\", \"mrj\",\n+    \"mal\", \"mon\", \"mnc\", \"mni\", \"mol\",\n+    \"moh\", \"mos\", \"mar\", \"mrj\",\n@@ -275,1 +272,1 @@\n-    \"pan\", \"pag\", \"pal\", \"pam\", \"pap\", \"pau\", \"pcd\", \"pdc\",\n+    \"pan\", \"pag\", \"pal\", \"pam\", \"pap\", \"pau\", \"pcd\", \"pcm\", \"pdc\",\n@@ -467,1 +464,1 @@\n-    { \"art_LOJBAN\",     \"jbo\" }, \/* registered name *\/\n+    { \"art__LOJBAN\",    \"jbo\" }, \/* registered name *\/\n@@ -470,0 +467,4 @@\n+    { \"zh__GUOYU\",      \"zh\" }, \/* registered name *\/\n+    { \"zh__HAKKA\",      \"hak\" }, \/* registered name *\/\n+    { \"zh__XIANG\",      \"hsn\" }, \/* registered name *\/\n+    \/\/ subtags with 3 chars won't be treated as variants.\n@@ -471,2 +472,0 @@\n-    { \"zh_GUOYU\",       \"zh\" }, \/* registered name *\/\n-    { \"zh_HAKKA\",       \"hak\" }, \/* registered name *\/\n@@ -475,1 +474,0 @@\n-    { \"zh_XIANG\",       \"hsn\" }, \/* registered name *\/\n@@ -483,8 +481,9 @@\n-#define _ConvertBCP47(finalID, id, buffer, length,err) \\\n-        if (uloc_forLanguageTag(id, buffer, length, NULL, err) <= 0 ||  \\\n-                U_FAILURE(*err) || *err == U_STRING_NOT_TERMINATED_WARNING) { \\\n-            finalID=id; \\\n-            if (*err == U_STRING_NOT_TERMINATED_WARNING) { *err = U_BUFFER_OVERFLOW_ERROR; } \\\n-        } else { \\\n-            finalID=buffer; \\\n-        }\n+#define _ConvertBCP47(finalID, id, buffer, length,err) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if (uloc_forLanguageTag(id, buffer, length, NULL, err) <= 0 || \\\n+            U_FAILURE(*err) || *err == U_STRING_NOT_TERMINATED_WARNING) { \\\n+        finalID=id; \\\n+        if (*err == U_STRING_NOT_TERMINATED_WARNING) { *err = U_BUFFER_OVERFLOW_ERROR; } \\\n+    } else { \\\n+        finalID=buffer; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -596,7 +595,6 @@\n-static int32_t\n-_getKeywords(const char *localeID,\n-             char prev,\n-             char *keywords, int32_t keywordCapacity,\n-             char *values, int32_t valuesCapacity, int32_t *valLen,\n-             UBool valuesToo,\n-             UErrorCode *status)\n+U_CFUNC void\n+ulocimp_getKeywords(const char *localeID,\n+                    char prev,\n+                    ByteSink& sink,\n+                    UBool valuesToo,\n+                    UErrorCode *status)\n@@ -612,2 +610,0 @@\n-    int32_t keywordsLen = 0;\n-    int32_t valuesLen = 0;\n@@ -628,1 +624,1 @@\n-                return 0;\n+                return;\n@@ -636,1 +632,1 @@\n-                return 0;\n+                return;\n@@ -642,1 +638,1 @@\n-                return 0;\n+                return;\n@@ -653,1 +649,1 @@\n-                return 0;\n+                return;\n@@ -668,1 +664,1 @@\n-                return 0;\n+                return;\n@@ -706,9 +702,1 @@\n-            if(keywordsLen + keywordList[i].keywordLen + 1< keywordCapacity) {\n-                uprv_strcpy(keywords+keywordsLen, keywordList[i].keyword);\n-                if(valuesToo) {\n-                    keywords[keywordsLen + keywordList[i].keywordLen] = '=';\n-                } else {\n-                    keywords[keywordsLen + keywordList[i].keywordLen] = 0;\n-                }\n-            }\n-            keywordsLen += keywordList[i].keywordLen + 1;\n+            sink.Append(keywordList[i].keyword, keywordList[i].keywordLen);\n@@ -716,5 +704,2 @@\n-                if(keywordsLen + keywordList[i].valueLen <= keywordCapacity) {\n-                    uprv_strncpy(keywords+keywordsLen, keywordList[i].valueStart, keywordList[i].valueLen);\n-                }\n-                keywordsLen += keywordList[i].valueLen;\n-\n+                sink.Append(\"=\", 1);\n+                sink.Append(keywordList[i].valueStart, keywordList[i].valueLen);\n@@ -722,10 +707,1 @@\n-                    if(keywordsLen < keywordCapacity) {\n-                        keywords[keywordsLen] = ';';\n-                    }\n-                    keywordsLen++;\n-                }\n-            }\n-            if(values) {\n-                if(valuesLen + keywordList[i].valueLen + 1< valuesCapacity) {\n-                    uprv_strcpy(values+valuesLen, keywordList[i].valueStart);\n-                    values[valuesLen + keywordList[i].valueLen] = 0;\n+                    sink.Append(\";\", 1);\n@@ -733,7 +709,2 @@\n-                valuesLen += keywordList[i].valueLen + 1;\n-            }\n-        }\n-        if(values) {\n-            values[valuesLen] = 0;\n-            if(valLen) {\n-                *valLen = valuesLen;\n+            } else {\n+                sink.Append(\"\\0\", 1);\n@@ -742,3 +713,0 @@\n-        return u_terminateChars(keywords, keywordCapacity, keywordsLen, status);\n-    } else {\n-        return 0;\n@@ -748,12 +716,0 @@\n-U_CFUNC int32_t\n-locale_getKeywords(const char *localeID,\n-                   char prev,\n-                   char *keywords, int32_t keywordCapacity,\n-                   char *values, int32_t valuesCapacity, int32_t *valLen,\n-                   UBool valuesToo,\n-                   UErrorCode *status) {\n-    return _getKeywords(localeID, prev, keywords, keywordCapacity,\n-                        values, valuesCapacity, valLen, valuesToo,\n-                        status);\n-}\n-\n@@ -765,0 +721,28 @@\n+{\n+    if (U_FAILURE(*status)) {\n+        return 0;\n+    }\n+\n+    CheckedArrayByteSink sink(buffer, bufferCapacity);\n+    ulocimp_getKeywordValue(localeID, keywordName, sink, status);\n+\n+    int32_t reslen = sink.NumberOfBytesAppended();\n+\n+    if (U_FAILURE(*status)) {\n+        return reslen;\n+    }\n+\n+    if (sink.Overflowed()) {\n+        *status = U_BUFFER_OVERFLOW_ERROR;\n+    } else {\n+        u_terminateChars(buffer, bufferCapacity, reslen, status);\n+    }\n+\n+    return reslen;\n+}\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_getKeywordValue(const char* localeID,\n+                        const char* keywordName,\n+                        icu::ByteSink& sink,\n+                        UErrorCode* status)\n@@ -770,1 +754,0 @@\n-    int32_t result = 0;\n@@ -778,1 +761,1 @@\n-        return 0;\n+        return;\n@@ -783,1 +766,1 @@\n-        return 0;\n+        return;\n@@ -795,1 +778,1 @@\n-          return 0;\n+          return;\n@@ -807,1 +790,1 @@\n-              return 0;\n+              return;\n@@ -821,1 +804,1 @@\n-              return 0;\n+              return;\n@@ -827,1 +810,1 @@\n-              return 0;\n+              return;\n@@ -834,1 +817,1 @@\n-              return 0;\n+              return;\n@@ -855,1 +838,1 @@\n-                return 0;\n+                return;\n@@ -857,1 +840,0 @@\n-              keyValueLen = 0;\n@@ -861,8 +843,1 @@\n-                  return 0;\n-                }\n-                if (keyValueLen < bufferCapacity) {\n-                  \/* Should we lowercase value to return here? Tests expect as-is. *\/\n-                  buffer[keyValueLen++] = *nextSeparator++;\n-                } else { \/* keep advancing so we return correct length in case of overflow *\/\n-                  keyValueLen++;\n-                  nextSeparator++;\n+                  return;\n@@ -870,0 +845,2 @@\n+                \/* Should we lowercase value to return here? Tests expect as-is. *\/\n+                sink.Append(nextSeparator++, 1);\n@@ -871,2 +848,1 @@\n-              result = u_terminateChars(buffer, bufferCapacity, keyValueLen, status);\n-              return result;\n+              return;\n@@ -876,1 +852,0 @@\n-    return 0;\n@@ -899,1 +874,0 @@\n-    int32_t updatedKeysAndValuesLen;\n@@ -906,0 +880,3 @@\n+    if (*status == U_STRING_NOT_TERMINATED_WARNING) {\n+        *status = U_ZERO_ERROR;\n+    }\n@@ -943,0 +920,1 @@\n+            U_ASSERT(*status != U_STRING_NOT_TERMINATED_WARNING);\n@@ -962,0 +940,1 @@\n+        U_ASSERT(*status != U_STRING_NOT_TERMINATED_WARNING);\n@@ -1076,0 +1055,1 @@\n+        U_ASSERT(*status != U_STRING_NOT_TERMINATED_WARNING);\n@@ -1079,4 +1059,10 @@\n-    updatedKeysAndValuesLen = updatedKeysAndValues.length();\n-    \/* needLen = length of the part before '@' + length of updated key-value part including '@' *\/\n-    needLen = (int32_t)(startSearchHere - buffer) + updatedKeysAndValuesLen;\n-    if(needLen >= bufferCapacity) {\n+    \/\/ needLen = length of the part before '@'\n+    needLen = (int32_t)(startSearchHere - buffer);\n+    \/\/ Check to see can we fit the startSearchHere, if not, return\n+    \/\/ U_BUFFER_OVERFLOW_ERROR without copy updatedKeysAndValues into it.\n+    \/\/ We do this because this API function does not behave like most others:\n+    \/\/ It promises never to set a U_STRING_NOT_TERMINATED_WARNING.\n+    \/\/ When the contents fits but without the terminating NUL, in this case we need to not change\n+    \/\/ the buffer contents and return with a buffer overflow error.\n+    int32_t appendLength = updatedKeysAndValues.length();\n+    if (appendLength >= bufferCapacity - needLen) {\n@@ -1084,1 +1070,1 @@\n-        return needLen; \/* no change *\/\n+        return needLen + appendLength;\n@@ -1086,4 +1072,3 @@\n-    if (updatedKeysAndValuesLen > 0) {\n-        uprv_strncpy(startSearchHere, updatedKeysAndValues.data(), updatedKeysAndValuesLen);\n-    }\n-    buffer[needLen]=0;\n+    needLen += updatedKeysAndValues.extract(\n+                         startSearchHere, bufferCapacity - needLen, *status);\n+    U_ASSERT(*status != U_STRING_NOT_TERMINATED_WARNING);\n@@ -1131,20 +1116,0 @@\n-\/* count the length of src while copying it to dest; return strlen(src) *\/\n-static inline int32_t\n-_copyCount(char *dest, int32_t destCapacity, const char *src) {\n-    const char *anchor;\n-    char c;\n-\n-    anchor=src;\n-    for(;;) {\n-        if((c=*src)==0) {\n-            return (int32_t)(src-anchor);\n-        }\n-        if(destCapacity<=0) {\n-            return (int32_t)((src-anchor)+uprv_strlen(src));\n-        }\n-        ++src;\n-        *dest++=c;\n-        --destCapacity;\n-    }\n-}\n-\n@@ -1175,1 +1140,1 @@\n-U_CFUNC int32_t\n+CharString U_EXPORT2\n@@ -1177,5 +1142,3 @@\n-                    char *language, int32_t languageCapacity,\n-                    const char **pEnd) {\n-    int32_t i=0;\n-    int32_t offset;\n-    char lang[4]={ 0, 0, 0, 0 }; \/* temporary buffer to hold language code for searching *\/\n+                    const char **pEnd,\n+                    UErrorCode &status) {\n+    CharString result;\n@@ -1195,7 +1158,2 @@\n-        if(i<languageCapacity) {\n-            language[i]=(char)uprv_tolower(*localeID);\n-        }\n-        if(i<languageCapacity) {\n-            language[i+1]='-';\n-        }\n-        i+=2;\n+        result.append((char)uprv_tolower(*localeID), status);\n+        result.append('-', status);\n@@ -1207,8 +1165,1 @@\n-        if(i<languageCapacity) {\n-            language[i]=(char)uprv_tolower(*localeID);\n-        }\n-        if(i<3) {\n-            U_ASSERT(i>=0);\n-            lang[i]=(char)uprv_tolower(*localeID);\n-        }\n-        i++;\n+        result.append((char)uprv_tolower(*localeID), status);\n@@ -1218,1 +1169,1 @@\n-    if(i==3) {\n+    if(result.length()==3) {\n@@ -1220,1 +1171,1 @@\n-        offset=_findIndex(LANGUAGES_3, lang);\n+        int32_t offset = _findIndex(LANGUAGES_3, result.data());\n@@ -1222,1 +1173,2 @@\n-            i=_copyCount(language, languageCapacity, LANGUAGES[offset]);\n+            result.clear();\n+            result.append(LANGUAGES[offset], status);\n@@ -1229,1 +1181,2 @@\n-    return i;\n+\n+    return result;\n@@ -1232,1 +1185,1 @@\n-U_CFUNC int32_t\n+CharString U_EXPORT2\n@@ -1234,3 +1187,3 @@\n-                  char *script, int32_t scriptCapacity,\n-                  const char **pEnd)\n-{\n+                  const char **pEnd,\n+                  UErrorCode &status) {\n+    CharString result;\n@@ -1255,3 +1208,0 @@\n-        if(idLen > scriptCapacity) {\n-            idLen = scriptCapacity;\n-        }\n@@ -1259,1 +1209,1 @@\n-            script[0]=(char)uprv_toupper(*(localeID++));\n+            result.append((char)uprv_toupper(*(localeID++)), status);\n@@ -1262,1 +1212,1 @@\n-            script[i]=(char)uprv_tolower(*(localeID++));\n+            result.append((char)uprv_tolower(*(localeID++)), status);\n@@ -1265,4 +1215,2 @@\n-    else {\n-        idLen = 0;\n-    }\n-    return idLen;\n+\n+    return result;\n@@ -1271,1 +1219,1 @@\n-U_CFUNC int32_t\n+CharString U_EXPORT2\n@@ -1273,3 +1221,3 @@\n-                   char *country, int32_t countryCapacity,\n-                   const char **pEnd)\n-{\n+                   const char **pEnd,\n+                   UErrorCode &status) {\n+    CharString result;\n@@ -1277,2 +1225,0 @@\n-    char cnty[ULOC_COUNTRY_CAPACITY]={ 0, 0, 0, 0 };\n-    int32_t offset;\n@@ -1282,3 +1228,1 @@\n-        if(idLen<(ULOC_COUNTRY_CAPACITY-1)) {   \/*CWB*\/\n-            cnty[idLen]=(char)uprv_toupper(localeID[idLen]);\n-        }\n+        result.append((char)uprv_toupper(localeID[idLen]), status);\n@@ -1290,1 +1234,0 @@\n-        UBool gotCountry = FALSE;\n@@ -1293,1 +1236,1 @@\n-            offset=_findIndex(COUNTRIES_3, cnty);\n+            int32_t offset = _findIndex(COUNTRIES_3, result.data());\n@@ -1295,10 +1238,2 @@\n-                idLen=_copyCount(country, countryCapacity, COUNTRIES[offset]);\n-                gotCountry = TRUE;\n-            }\n-        }\n-        if (!gotCountry) {\n-            int32_t i = 0;\n-            for (i = 0; i < idLen; i++) {\n-                if (i < countryCapacity) {\n-                    country[i]=(char)uprv_toupper(localeID[i]);\n-                }\n+                result.clear();\n+                result.append(COUNTRIES[offset], status);\n@@ -1309,1 +1244,1 @@\n-        idLen = 0;\n+        result.clear();\n@@ -1316,1 +1251,1 @@\n-    return idLen;\n+    return result;\n@@ -1323,6 +1258,6 @@\n-static int32_t\n-_getVariantEx(const char *localeID,\n-              char prev,\n-              char *variant, int32_t variantCapacity,\n-              UBool needSeparator) {\n-    int32_t i=0;\n+static void\n+_getVariant(const char *localeID,\n+            char prev,\n+            ByteSink& sink,\n+            UBool needSeparator) {\n+    UBool hasVariant = FALSE;\n@@ -1335,4 +1270,1 @@\n-                if (i<variantCapacity) {\n-                    variant[i] = '_';\n-                }\n-                ++i;\n+                sink.Append(\"_\", 1);\n@@ -1341,7 +1273,4 @@\n-            if(i<variantCapacity) {\n-                variant[i]=(char)uprv_toupper(*localeID);\n-                if(variant[i]=='-') {\n-                    variant[i]='_';\n-                }\n-            }\n-            i++;\n+            char c = (char)uprv_toupper(*localeID);\n+            if (c == '-') c = '_';\n+            sink.Append(&c, 1);\n+            hasVariant = TRUE;\n@@ -1353,1 +1282,1 @@\n-    if(i==0) {\n+    if(!hasVariant) {\n@@ -1359,1 +1288,1 @@\n-            return 0;\n+            return;\n@@ -1363,4 +1292,1 @@\n-                if (i<variantCapacity) {\n-                    variant[i] = '_';\n-                }\n-                ++i;\n+                sink.Append(\"_\", 1);\n@@ -1369,7 +1295,3 @@\n-            if(i<variantCapacity) {\n-                variant[i]=(char)uprv_toupper(*localeID);\n-                if(variant[i]=='-' || variant[i]==',') {\n-                    variant[i]='_';\n-                }\n-            }\n-            i++;\n+            char c = (char)uprv_toupper(*localeID);\n+            if (c == '-' || c == ',') c = '_';\n+            sink.Append(&c, 1);\n@@ -1379,9 +1301,0 @@\n-\n-    return i;\n-}\n-\n-static int32_t\n-_getVariant(const char *localeID,\n-            char prev,\n-            char *variant, int32_t variantCapacity) {\n-    return _getVariantEx(localeID, prev, variant, variantCapacity, FALSE);\n@@ -1457,2 +1370,2 @@\n-    UKeywordsContext *myContext = NULL;\n-    UEnumeration *result = NULL;\n+    LocalMemory<UKeywordsContext> myContext;\n+    LocalMemory<UEnumeration> result;\n@@ -1460,2 +1373,2 @@\n-    if(U_FAILURE(*status)) {\n-        return NULL;\n+    if (U_FAILURE(*status)) {\n+        return nullptr;\n@@ -1463,3 +1376,3 @@\n-    result = (UEnumeration *)uprv_malloc(sizeof(UEnumeration));\n-    \/* Null pointer test *\/\n-    if (result == NULL) {\n+    myContext.adoptInstead(static_cast<UKeywordsContext *>(uprv_malloc(sizeof(UKeywordsContext))));\n+    result.adoptInstead(static_cast<UEnumeration *>(uprv_malloc(sizeof(UEnumeration))));\n+    if (myContext.isNull() || result.isNull()) {\n@@ -1467,1 +1380,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -1469,3 +1382,3 @@\n-    uprv_memcpy(result, &gKeywordsEnum, sizeof(UEnumeration));\n-    myContext = static_cast<UKeywordsContext *>(uprv_malloc(sizeof(UKeywordsContext)));\n-    if (myContext == NULL) {\n+    uprv_memcpy(result.getAlias(), &gKeywordsEnum, sizeof(UEnumeration));\n+    myContext->keywords = static_cast<char *>(uprv_malloc(keywordListSize+1));\n+    if (myContext->keywords == nullptr) {\n@@ -1473,2 +1386,1 @@\n-        uprv_free(result);\n-        return NULL;\n+        return nullptr;\n@@ -1476,1 +1388,0 @@\n-    myContext->keywords = (char *)uprv_malloc(keywordListSize+1);\n@@ -1480,2 +1391,2 @@\n-    result->context = myContext;\n-    return result;\n+    result->context = myContext.orphan();\n+    return result.orphan();\n@@ -1488,3 +1399,0 @@\n-    int32_t i=0;\n-    char keywords[256];\n-    int32_t keywordsCapacity = 256;\n@@ -1508,1 +1416,5 @@\n-    ulocimp_getLanguage(tmpLocaleID, NULL, 0, &tmpLocaleID);\n+    ulocimp_getLanguage(tmpLocaleID, &tmpLocaleID, *status);\n+    if (U_FAILURE(*status)) {\n+        return 0;\n+    }\n+\n@@ -1512,1 +1424,4 @@\n-        ulocimp_getScript(tmpLocaleID+1, NULL, 0, &scriptID);\n+        ulocimp_getScript(tmpLocaleID+1, &scriptID, *status);\n+        if (U_FAILURE(*status)) {\n+            return 0;\n+        }\n@@ -1519,3 +1434,3 @@\n-            ulocimp_getCountry(tmpLocaleID+1, NULL, 0, &tmpLocaleID);\n-            if(_isIDSeparator(*tmpLocaleID)) {\n-                _getVariant(tmpLocaleID+1, *tmpLocaleID, NULL, 0);\n+            ulocimp_getCountry(tmpLocaleID+1, &tmpLocaleID, *status);\n+            if (U_FAILURE(*status)) {\n+                return 0;\n@@ -1528,7 +1443,7 @@\n-        i=locale_getKeywords(tmpLocaleID+1, '@', keywords, keywordsCapacity, NULL, 0, NULL, FALSE, status);\n-    }\n-\n-    if(i) {\n-        return uloc_openKeywordList(keywords, i, status);\n-    } else {\n-        return NULL;\n+        CharString keywords;\n+        CharStringByteSink sink(&keywords);\n+        ulocimp_getKeywords(tmpLocaleID+1, '@', sink, FALSE, status);\n+        if (U_FAILURE(*status)) {\n+            return NULL;\n+        }\n+        return uloc_openKeywordList(keywords.data(), keywords.length(), status);\n@@ -1536,0 +1451,1 @@\n+    return NULL;\n@@ -1555,1 +1471,1 @@\n-static int32_t\n+static void\n@@ -1557,2 +1473,1 @@\n-              char* result,\n-              int32_t resultCapacity,\n+              ByteSink& sink,\n@@ -1561,2 +1476,1 @@\n-    int32_t j, len, fieldCount=0, scriptSize=0, variantSize=0, nameCapacity;\n-    char localeBuffer[ULOC_FULLNAME_CAPACITY];\n+    int32_t j, fieldCount=0, scriptSize=0, variantSize=0;\n@@ -1568,2 +1482,0 @@\n-    char* name;\n-    char* variant = NULL; \/* pointer into name, or NULL *\/\n@@ -1572,1 +1484,1 @@\n-        return 0;\n+        return;\n@@ -1586,11 +1498,0 @@\n-    \/* if we are doing a full canonicalization, then put results in\n-       localeBuffer, if necessary; otherwise send them to result. *\/\n-    if (\/*OPTION_SET(options, _ULOC_CANONICALIZE) &&*\/\n-        (result == NULL || resultCapacity < (int32_t)sizeof(localeBuffer))) {\n-        name = localeBuffer;\n-        nameCapacity = (int32_t)sizeof(localeBuffer);\n-    } else {\n-        name = result;\n-        nameCapacity = resultCapacity;\n-    }\n-\n@@ -1598,4 +1499,1 @@\n-    len=ulocimp_getLanguage(tmpLocaleID, name, nameCapacity, &tmpLocaleID);\n-\n-    if(len == I_DEFAULT_LENGTH && uprv_strncmp(origLocaleID, i_default, len) == 0) {\n-        const char *d = uloc_getDefault();\n+    CharString tag = ulocimp_getLanguage(tmpLocaleID, &tmpLocaleID, *err);\n@@ -1603,5 +1501,4 @@\n-        len = (int32_t)uprv_strlen(d);\n-\n-        if (name != NULL) {\n-            uprv_memcpy(name, d, len);\n-        }\n+    if (tag.length() == I_DEFAULT_LENGTH &&\n+            uprv_strncmp(origLocaleID, i_default, I_DEFAULT_LENGTH) == 0) {\n+        tag.clear();\n+        tag.append(uloc_getDefault(), *err);\n@@ -1612,4 +1509,1 @@\n-        if(len<nameCapacity) {\n-            name[len]='_';\n-        }\n-        ++len;\n+        tag.append('_', *err);\n@@ -1617,2 +1511,3 @@\n-        scriptSize=ulocimp_getScript(tmpLocaleID+1,\n-            (len<nameCapacity ? name+len : NULL), nameCapacity-len, &scriptID);\n+        CharString script = ulocimp_getScript(tmpLocaleID+1, &scriptID, *err);\n+        tag.append(script, *err);\n+        scriptSize = script.length();\n@@ -1623,1 +1518,0 @@\n-            len+=scriptSize;\n@@ -1626,4 +1520,1 @@\n-                if(len<nameCapacity) {\n-                    name[len]='_';\n-                }\n-                ++len;\n+                tag.append('_', *err);\n@@ -1635,3 +1526,4 @@\n-            int32_t cntrySize = ulocimp_getCountry(tmpLocaleID+1,\n-                (len<nameCapacity ? name+len : NULL), nameCapacity-len, &cntryID);\n-            if (cntrySize > 0) {\n+\n+            CharString country = ulocimp_getCountry(tmpLocaleID+1, &cntryID, *err);\n+            tag.append(country, *err);\n+            if (!country.isEmpty()) {\n@@ -1640,1 +1532,0 @@\n-                len+=cntrySize;\n@@ -1644,1 +1535,1 @@\n-                if (cntrySize >= 0 && ! _isIDSeparator(*(tmpLocaleID+1)) ) {\n+                if (!_isIDSeparator(*(tmpLocaleID+1))) {\n@@ -1646,4 +1537,1 @@\n-                    if(len<nameCapacity) {\n-                        name[len]='_';\n-                    }\n-                    ++len;\n+                    tag.append('_', *err);\n@@ -1652,2 +1540,6 @@\n-                variantSize = _getVariant(tmpLocaleID+1, *tmpLocaleID,\n-                    (len<nameCapacity ? name+len : NULL), nameCapacity-len);\n+                variantSize = -tag.length();\n+                {\n+                    CharStringByteSink s(&tag);\n+                    _getVariant(tmpLocaleID+1, *tmpLocaleID, s, FALSE);\n+                }\n+                variantSize += tag.length();\n@@ -1655,2 +1547,0 @@\n-                    variant = len<nameCapacity ? name+len : NULL;\n-                    len += variantSize;\n@@ -1674,4 +1564,1 @@\n-                if (len<nameCapacity) {\n-                    name[len] = c;\n-                }\n-                ++len;\n+                tag.append(c, *err);\n@@ -1699,4 +1586,1 @@\n-            if (len<nameCapacity) {\n-                name[len] = c;\n-            }\n-            ++len;\n+            tag.append(c, *err);\n@@ -1710,1 +1594,0 @@\n-            int32_t posixVariantSize;\n@@ -1714,4 +1597,1 @@\n-                    if(len<nameCapacity) {\n-                        name[len]='_';\n-                    }\n-                    ++len;\n+                    tag.append('_', *err);\n@@ -1721,2 +1601,7 @@\n-            posixVariantSize = _getVariantEx(tmpLocaleID+1, '@', name+len, nameCapacity-len,\n-                                             (UBool)(variantSize > 0));\n+\n+            int32_t posixVariantSize = -tag.length();\n+            {\n+                CharStringByteSink s(&tag);\n+                _getVariant(tmpLocaleID+1, '@', s, (UBool)(variantSize > 0));\n+            }\n+            posixVariantSize += tag.length();\n@@ -1724,4 +1609,0 @@\n-                if (variant == NULL) {\n-                    variant = name+len;\n-                }\n-                len += posixVariantSize;\n@@ -1734,4 +1615,3 @@\n-            const char* id = CANONICALIZE_MAP[j].id;\n-            int32_t n = (int32_t)uprv_strlen(id);\n-            if (len == n && uprv_strncmp(name, id, n) == 0) {\n-                if (n == 0 && tmpLocaleID != NULL) {\n+            StringPiece id(CANONICALIZE_MAP[j].id);\n+            if (tag == id) {\n+                if (id.empty() && tmpLocaleID != NULL) {\n@@ -1740,1 +1620,2 @@\n-                len = _copyCount(name, nameCapacity, CANONICALIZE_MAP[j].canonicalID);\n+                tag.clear();\n+                tag.append(CANONICALIZE_MAP[j].canonicalID, *err);\n@@ -1746,0 +1627,2 @@\n+    sink.Append(tag.data(), tag.length());\n+\n@@ -1749,4 +1632,1 @@\n-            if(len<nameCapacity) {\n-                name[len]='@';\n-            }\n-            ++len;\n+            sink.Append(\"@\", 1);\n@@ -1754,2 +1634,1 @@\n-            len += _getKeywords(tmpLocaleID+1, '@', (len<nameCapacity ? name+len : NULL), nameCapacity-len,\n-                                NULL, 0, NULL, TRUE, err);\n+            ulocimp_getKeywords(tmpLocaleID+1, '@', sink, TRUE, err);\n@@ -1758,6 +1637,0 @@\n-\n-    if (U_SUCCESS(*err) && result != NULL && name == localeBuffer) {\n-        uprv_strncpy(result, localeBuffer, (len > resultCapacity) ? resultCapacity : len);\n-    }\n-\n-    return u_terminateChars(result, resultCapacity, len, err);\n@@ -1810,1 +1683,0 @@\n-    int32_t i=0;\n@@ -1820,2 +1692,1 @@\n-    i=ulocimp_getLanguage(localeID, language, languageCapacity, NULL);\n-    return u_terminateChars(language, languageCapacity, i, err);\n+    return ulocimp_getLanguage(localeID, NULL, *err).extract(language, languageCapacity, *err);\n@@ -1830,2 +1701,0 @@\n-    int32_t i=0;\n-\n@@ -1841,1 +1710,5 @@\n-    ulocimp_getLanguage(localeID, NULL, 0, &localeID);\n+    ulocimp_getLanguage(localeID, &localeID, *err);\n+    if (U_FAILURE(*err)) {\n+        return 0;\n+    }\n+\n@@ -1843,1 +1716,1 @@\n-        i=ulocimp_getScript(localeID+1, script, scriptCapacity, NULL);\n+        return ulocimp_getScript(localeID+1, NULL, *err).extract(script, scriptCapacity, *err);\n@@ -1845,1 +1718,1 @@\n-    return u_terminateChars(script, scriptCapacity, i, err);\n+    return u_terminateChars(script, scriptCapacity, 0, err);\n@@ -1854,2 +1727,0 @@\n-    int32_t i=0;\n-\n@@ -1865,1 +1736,5 @@\n-    ulocimp_getLanguage(localeID, NULL, 0, &localeID);\n+    ulocimp_getLanguage(localeID, &localeID, *err);\n+    if (U_FAILURE(*err)) {\n+        return 0;\n+    }\n+\n@@ -1869,1 +1744,4 @@\n-        ulocimp_getScript(localeID+1, NULL, 0, &scriptID);\n+        ulocimp_getScript(localeID+1, &scriptID, *err);\n+        if (U_FAILURE(*err)) {\n+            return 0;\n+        }\n@@ -1875,1 +1753,1 @@\n-            i=ulocimp_getCountry(localeID+1, country, countryCapacity, NULL);\n+            return ulocimp_getCountry(localeID+1, NULL, *err).extract(country, countryCapacity, *err);\n@@ -1878,1 +1756,1 @@\n-    return u_terminateChars(country, countryCapacity, i, err);\n+    return u_terminateChars(country, countryCapacity, 0, err);\n@@ -1905,1 +1783,5 @@\n-    ulocimp_getLanguage(tmpLocaleID, NULL, 0, &tmpLocaleID);\n+    ulocimp_getLanguage(tmpLocaleID, &tmpLocaleID, *err);\n+    if (U_FAILURE(*err)) {\n+        return 0;\n+    }\n+\n@@ -1909,1 +1791,4 @@\n-        ulocimp_getScript(tmpLocaleID+1, NULL, 0, &scriptID);\n+        ulocimp_getScript(tmpLocaleID+1, &scriptID, *err);\n+        if (U_FAILURE(*err)) {\n+            return 0;\n+        }\n@@ -1917,1 +1802,4 @@\n-            ulocimp_getCountry(tmpLocaleID+1, NULL, 0, &cntryID);\n+            ulocimp_getCountry(tmpLocaleID+1, &cntryID, *err);\n+            if (U_FAILURE(*err)) {\n+                return 0;\n+            }\n@@ -1927,1 +1815,14 @@\n-                i=_getVariant(tmpLocaleID+1, *tmpLocaleID, variant, variantCapacity);\n+\n+                CheckedArrayByteSink sink(variant, variantCapacity);\n+                _getVariant(tmpLocaleID+1, *tmpLocaleID, sink, FALSE);\n+\n+                i = sink.NumberOfBytesAppended();\n+\n+                if (U_FAILURE(*err)) {\n+                    return i;\n+                }\n+\n+                if (sink.Overflowed()) {\n+                    *err = U_BUFFER_OVERFLOW_ERROR;\n+                    return i;\n+                }\n@@ -1932,7 +1833,0 @@\n-    \/* removed by weiv. We don't want to handle POSIX variants anymore. Use canonicalization function *\/\n-    \/* if we do not have a variant tag yet then try a POSIX variant after '@' *\/\n-\/*\n-    if(!haveVariant && (localeID=uprv_strrchr(localeID, '@'))!=NULL) {\n-        i=_getVariant(localeID+1, '@', variant, variantCapacity);\n-    }\n-*\/\n@@ -1948,1 +1842,28 @@\n-    return _canonicalize(localeID, name, nameCapacity, 0, err);\n+    if (U_FAILURE(*err)) {\n+        return 0;\n+    }\n+\n+    CheckedArrayByteSink sink(name, nameCapacity);\n+    ulocimp_getName(localeID, sink, err);\n+\n+    int32_t reslen = sink.NumberOfBytesAppended();\n+\n+    if (U_FAILURE(*err)) {\n+        return reslen;\n+    }\n+\n+    if (sink.Overflowed()) {\n+        *err = U_BUFFER_OVERFLOW_ERROR;\n+    } else {\n+        u_terminateChars(name, nameCapacity, reslen, err);\n+    }\n+\n+    return reslen;\n+}\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_getName(const char* localeID,\n+                ByteSink& sink,\n+                UErrorCode* err)\n+{\n+    _canonicalize(localeID, sink, 0, err);\n@@ -1957,1 +1878,28 @@\n-    return _canonicalize(localeID, name, nameCapacity, _ULOC_STRIP_KEYWORDS, err);\n+    if (U_FAILURE(*err)) {\n+        return 0;\n+    }\n+\n+    CheckedArrayByteSink sink(name, nameCapacity);\n+    ulocimp_getBaseName(localeID, sink, err);\n+\n+    int32_t reslen = sink.NumberOfBytesAppended();\n+\n+    if (U_FAILURE(*err)) {\n+        return reslen;\n+    }\n+\n+    if (sink.Overflowed()) {\n+        *err = U_BUFFER_OVERFLOW_ERROR;\n+    } else {\n+        u_terminateChars(name, nameCapacity, reslen, err);\n+    }\n+\n+    return reslen;\n+}\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_getBaseName(const char* localeID,\n+                    ByteSink& sink,\n+                    UErrorCode* err)\n+{\n+    _canonicalize(localeID, sink, _ULOC_STRIP_KEYWORDS, err);\n@@ -1966,1 +1914,28 @@\n-    return _canonicalize(localeID, name, nameCapacity, _ULOC_CANONICALIZE, err);\n+    if (U_FAILURE(*err)) {\n+        return 0;\n+    }\n+\n+    CheckedArrayByteSink sink(name, nameCapacity);\n+    ulocimp_canonicalize(localeID, sink, err);\n+\n+    int32_t reslen = sink.NumberOfBytesAppended();\n+\n+    if (U_FAILURE(*err)) {\n+        return reslen;\n+    }\n+\n+    if (sink.Overflowed()) {\n+        *err = U_BUFFER_OVERFLOW_ERROR;\n+    } else {\n+        u_terminateChars(name, nameCapacity, reslen, err);\n+    }\n+\n+    return reslen;\n+}\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_canonicalize(const char* localeID,\n+                     ByteSink& sink,\n+                     UErrorCode* err)\n+{\n+    _canonicalize(localeID, sink, _ULOC_CANONICALIZE, err);\n@@ -2042,1 +2017,0 @@\n-        char collVal[ULOC_KEYWORDS_CAPACITY];\n@@ -2045,5 +2019,5 @@\n-        len = uloc_getKeywordValue(localeID, \"collation\", collVal,\n-            UPRV_LENGTHOF(collVal) - 1, &status);\n-\n-        if (U_SUCCESS(status) && len > 0) {\n-            collVal[len] = 0;\n+        CharString collVal;\n+        {\n+            CharStringByteSink sink(&collVal);\n+            ulocimp_getKeywordValue(localeID, \"collation\", sink, &status);\n+        }\n@@ -2051,0 +2025,1 @@\n+        if (U_SUCCESS(status) && !collVal.isEmpty()) {\n@@ -2057,1 +2032,1 @@\n-                len = uloc_setKeywordValue(\"collation\", collVal, tmpLocaleID,\n+                len = uloc_setKeywordValue(\"collation\", collVal.data(), tmpLocaleID,\n@@ -2125,295 +2100,0 @@\n-\n-\/* this function to be moved into cstring.c later *\/\n-static char gDecimal = 0;\n-\n-static \/* U_CAPI *\/\n-double\n-\/* U_EXPORT2 *\/\n-_uloc_strtod(const char *start, char **end) {\n-    char *decimal;\n-    char *myEnd;\n-    char buf[30];\n-    double rv;\n-    if (!gDecimal) {\n-        char rep[5];\n-        \/* For machines that decide to change the decimal on you,\n-        and try to be too smart with localization.\n-        This normally should be just a '.'. *\/\n-        sprintf(rep, \"%+1.1f\", 1.0);\n-        gDecimal = rep[2];\n-    }\n-\n-    if(gDecimal == '.') {\n-        return uprv_strtod(start, end); \/* fall through to OS *\/\n-    } else {\n-        uprv_strncpy(buf, start, 29);\n-        buf[29]=0;\n-        decimal = uprv_strchr(buf, '.');\n-        if(decimal) {\n-            *decimal = gDecimal;\n-        } else {\n-            return uprv_strtod(start, end); \/* no decimal point *\/\n-        }\n-        rv = uprv_strtod(buf, &myEnd);\n-        if(end) {\n-            *end = (char*)(start+(myEnd-buf)); \/* cast away const (to follow uprv_strtod API.) *\/\n-        }\n-        return rv;\n-    }\n-}\n-\n-typedef struct {\n-    float q;\n-    int32_t dummy;  \/* to avoid uninitialized memory copy from qsort *\/\n-    char locale[ULOC_FULLNAME_CAPACITY+1];\n-} _acceptLangItem;\n-\n-static int32_t U_CALLCONV\n-uloc_acceptLanguageCompare(const void * \/*context*\/, const void *a, const void *b)\n-{\n-    const _acceptLangItem *aa = (const _acceptLangItem*)a;\n-    const _acceptLangItem *bb = (const _acceptLangItem*)b;\n-\n-    int32_t rc = 0;\n-    if(bb->q < aa->q) {\n-        rc = -1;  \/* A > B *\/\n-    } else if(bb->q > aa->q) {\n-        rc = 1;   \/* A < B *\/\n-    } else {\n-        rc = 0;   \/* A = B *\/\n-    }\n-\n-    if(rc==0) {\n-        rc = uprv_stricmp(aa->locale, bb->locale);\n-    }\n-\n-#if defined(ULOC_DEBUG)\n-    \/*  fprintf(stderr, \"a:[%s:%g], b:[%s:%g] -> %d\\n\",\n-    aa->locale, aa->q,\n-    bb->locale, bb->q,\n-    rc);*\/\n-#endif\n-\n-    return rc;\n-}\n-\n-\/*\n-mt-mt, ja;q=0.76, en-us;q=0.95, en;q=0.92, en-gb;q=0.89, fr;q=0.87, iu-ca;q=0.84, iu;q=0.82, ja-jp;q=0.79, mt;q=0.97, de-de;q=0.74, de;q=0.71, es;q=0.68, it-it;q=0.66, it;q=0.63, vi-vn;q=0.61, vi;q=0.58, nl-nl;q=0.55, nl;q=0.53\n-*\/\n-\n-U_CAPI int32_t U_EXPORT2\n-uloc_acceptLanguageFromHTTP(char *result, int32_t resultAvailable, UAcceptResult *outResult,\n-                            const char *httpAcceptLanguage,\n-                            UEnumeration* availableLocales,\n-                            UErrorCode *status)\n-{\n-  MaybeStackArray<_acceptLangItem, 4> items; \/\/ Struct for collecting items.\n-    char tmp[ULOC_FULLNAME_CAPACITY +1];\n-    int32_t n = 0;\n-    const char *itemEnd;\n-    const char *paramEnd;\n-    const char *s;\n-    const char *t;\n-    int32_t res;\n-    int32_t i;\n-    int32_t l = (int32_t)uprv_strlen(httpAcceptLanguage);\n-\n-    if(U_FAILURE(*status)) {\n-        return -1;\n-    }\n-\n-    for(s=httpAcceptLanguage;s&&*s;) {\n-        while(isspace(*s)) \/* eat space at the beginning *\/\n-            s++;\n-        itemEnd=uprv_strchr(s,',');\n-        paramEnd=uprv_strchr(s,';');\n-        if(!itemEnd) {\n-            itemEnd = httpAcceptLanguage+l; \/* end of string *\/\n-        }\n-        if(paramEnd && paramEnd<itemEnd) {\n-            \/* semicolon (;) is closer than end (,) *\/\n-            t = paramEnd+1;\n-            if(*t=='q') {\n-                t++;\n-            }\n-            while(isspace(*t)) {\n-                t++;\n-            }\n-            if(*t=='=') {\n-                t++;\n-            }\n-            while(isspace(*t)) {\n-                t++;\n-            }\n-            items[n].q = (float)_uloc_strtod(t,NULL);\n-        } else {\n-            \/* no semicolon - it's 1.0 *\/\n-            items[n].q = 1.0f;\n-            paramEnd = itemEnd;\n-        }\n-        items[n].dummy=0;\n-        \/* eat spaces prior to semi *\/\n-        for(t=(paramEnd-1);(paramEnd>s)&&isspace(*t);t--)\n-            ;\n-        int32_t slen = static_cast<int32_t>(((t+1)-s));\n-        if(slen > ULOC_FULLNAME_CAPACITY) {\n-          *status = U_BUFFER_OVERFLOW_ERROR;\n-          return -1; \/\/ too big\n-        }\n-        uprv_strncpy(items[n].locale, s, slen);\n-        items[n].locale[slen]=0; \/\/ terminate\n-        int32_t clen = uloc_canonicalize(items[n].locale, tmp, UPRV_LENGTHOF(tmp)-1, status);\n-        if(U_FAILURE(*status)) return -1;\n-        if((clen!=slen) || (uprv_strncmp(items[n].locale, tmp, slen))) {\n-            \/\/ canonicalization had an effect- copy back\n-            uprv_strncpy(items[n].locale, tmp, clen);\n-            items[n].locale[clen] = 0; \/\/ terminate\n-        }\n-#if defined(ULOC_DEBUG)\n-        \/*fprintf(stderr,\"%d: s <%s> q <%g>\\n\", n, j[n].locale, j[n].q);*\/\n-#endif\n-        n++;\n-        s = itemEnd;\n-        while(*s==',') { \/* eat duplicate commas *\/\n-            s++;\n-        }\n-        if(n>=items.getCapacity()) { \/\/ If we need more items\n-          if(NULL == items.resize(items.getCapacity()*2, items.getCapacity())) {\n-              *status = U_MEMORY_ALLOCATION_ERROR;\n-              return -1;\n-          }\n-#if defined(ULOC_DEBUG)\n-          fprintf(stderr,\"malloced at size %d\\n\", items.getCapacity());\n-#endif\n-        }\n-    }\n-    uprv_sortArray(items.getAlias(), n, sizeof(items[0]), uloc_acceptLanguageCompare, NULL, TRUE, status);\n-    if (U_FAILURE(*status)) {\n-        return -1;\n-    }\n-    LocalMemory<const char*> strs(NULL);\n-    if (strs.allocateInsteadAndReset(n) == NULL) {\n-        *status = U_MEMORY_ALLOCATION_ERROR;\n-        return -1;\n-    }\n-    for(i=0;i<n;i++) {\n-#if defined(ULOC_DEBUG)\n-        \/*fprintf(stderr,\"%d: s <%s> q <%g>\\n\", i, j[i].locale, j[i].q);*\/\n-#endif\n-        strs[i]=items[i].locale;\n-    }\n-    res =  uloc_acceptLanguage(result, resultAvailable, outResult,\n-                               strs.getAlias(), n, availableLocales, status);\n-    return res;\n-}\n-\n-\n-U_CAPI int32_t U_EXPORT2\n-uloc_acceptLanguage(char *result, int32_t resultAvailable,\n-                    UAcceptResult *outResult, const char **acceptList,\n-                    int32_t acceptListCount,\n-                    UEnumeration* availableLocales,\n-                    UErrorCode *status)\n-{\n-    int32_t i,j;\n-    int32_t len;\n-    int32_t maxLen=0;\n-    char tmp[ULOC_FULLNAME_CAPACITY+1];\n-    const char *l;\n-    char **fallbackList;\n-    if(U_FAILURE(*status)) {\n-        return -1;\n-    }\n-    fallbackList = static_cast<char **>(uprv_malloc((size_t)(sizeof(fallbackList[0])*acceptListCount)));\n-    if(fallbackList==NULL) {\n-        *status = U_MEMORY_ALLOCATION_ERROR;\n-        return -1;\n-    }\n-    for(i=0;i<acceptListCount;i++) {\n-#if defined(ULOC_DEBUG)\n-        fprintf(stderr,\"%02d: %s\\n\", i, acceptList[i]);\n-#endif\n-        while((l=uenum_next(availableLocales, NULL, status)) != NULL) {\n-#if defined(ULOC_DEBUG)\n-            fprintf(stderr,\"  %s\\n\", l);\n-#endif\n-            len = (int32_t)uprv_strlen(l);\n-            if(!uprv_strcmp(acceptList[i], l)) {\n-                if(outResult) {\n-                    *outResult = ULOC_ACCEPT_VALID;\n-                }\n-#if defined(ULOC_DEBUG)\n-                fprintf(stderr, \"MATCH! %s\\n\", l);\n-#endif\n-                if(len>0) {\n-                    uprv_strncpy(result, l, uprv_min(len, resultAvailable));\n-                }\n-                for(j=0;j<i;j++) {\n-                    uprv_free(fallbackList[j]);\n-                }\n-                uprv_free(fallbackList);\n-                return u_terminateChars(result, resultAvailable, len, status);\n-            }\n-            if(len>maxLen) {\n-                maxLen = len;\n-            }\n-        }\n-        uenum_reset(availableLocales, status);\n-        \/* save off parent info *\/\n-        if(uloc_getParent(acceptList[i], tmp, UPRV_LENGTHOF(tmp), status)!=0) {\n-            fallbackList[i] = uprv_strdup(tmp);\n-        } else {\n-            fallbackList[i]=0;\n-        }\n-    }\n-\n-    for(maxLen--;maxLen>0;maxLen--) {\n-        for(i=0;i<acceptListCount;i++) {\n-            if(fallbackList[i] && ((int32_t)uprv_strlen(fallbackList[i])==maxLen)) {\n-#if defined(ULOC_DEBUG)\n-                fprintf(stderr,\"Try: [%s]\", fallbackList[i]);\n-#endif\n-                while((l=uenum_next(availableLocales, NULL, status)) != NULL) {\n-#if defined(ULOC_DEBUG)\n-                    fprintf(stderr,\"  %s\\n\", l);\n-#endif\n-                    len = (int32_t)uprv_strlen(l);\n-                    if(!uprv_strcmp(fallbackList[i], l)) {\n-                        if(outResult) {\n-                            *outResult = ULOC_ACCEPT_FALLBACK;\n-                        }\n-#if defined(ULOC_DEBUG)\n-                        fprintf(stderr, \"fallback MATCH! %s\\n\", l);\n-#endif\n-                        if(len>0) {\n-                            uprv_strncpy(result, l, uprv_min(len, resultAvailable));\n-                        }\n-                        for(j=0;j<acceptListCount;j++) {\n-                            uprv_free(fallbackList[j]);\n-                        }\n-                        uprv_free(fallbackList);\n-                        return u_terminateChars(result, resultAvailable, len, status);\n-                    }\n-                }\n-                uenum_reset(availableLocales, status);\n-\n-                if(uloc_getParent(fallbackList[i], tmp, UPRV_LENGTHOF(tmp), status)!=0) {\n-                    uprv_free(fallbackList[i]);\n-                    fallbackList[i] = uprv_strdup(tmp);\n-                } else {\n-                    uprv_free(fallbackList[i]);\n-                    fallbackList[i]=0;\n-                }\n-            }\n-        }\n-        if(outResult) {\n-            *outResult = ULOC_ACCEPT_FAILED;\n-        }\n-    }\n-    for(i=0;i<acceptListCount;i++) {\n-        uprv_free(fallbackList[i]);\n-    }\n-    uprv_free(fallbackList);\n-    return -1;\n-}\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uloc.cpp","additions":365,"deletions":685,"binary":false,"changes":1050,"status":"modified"},{"patch":"@@ -18,0 +18,1 @@\n+#include \"bytesinkutil.h\"\n@@ -56,1 +57,1 @@\n-    const char          *grandfathered;\n+    const char          *legacy;\n@@ -88,2 +89,3 @@\n- This table has 2 parts. The parts for Grandfathered tags is generated by the\n- following scripts from the IANA language tag registry.\n+ This table has 2 parts. The part for\n+ legacy language tags (marked as “Type: grandfathered” in BCP 47)\n+ is generated by the following scripts from the IANA language tag registry.\n@@ -103,2 +105,2 @@\n-static const char* const GRANDFATHERED[] = {\n-\/*  grandfathered   preferred *\/\n+static const char* const LEGACY[] = {\n+\/*  legacy          preferred *\/\n@@ -127,1 +129,1 @@\n-    \/\/ Grandfathered tags with no preferred value in the IANA\n+    \/\/ Legacy tags with no preferred value in the IANA\n@@ -349,1 +351,1 @@\n-ultag_getGrandfathered(const ULanguageTag* langtag);\n+ultag_getLegacy(const ULanguageTag* langtag);\n@@ -989,1 +991,1 @@\n-    langtag->grandfathered = EMPTY;\n+    langtag->legacy = EMPTY;\n@@ -1113,0 +1115,13 @@\n+static void _sortVariants(VariantListEntry* first) {\n+    for (VariantListEntry* var1 = first; var1 != NULL; var1 = var1->next) {\n+        for (VariantListEntry* var2 = var1->next; var2 != NULL; var2 = var2->next) {\n+            \/\/ Swap var1->variant and var2->variant.\n+            if (uprv_compareInvCharsAsAscii(var1->variant, var2->variant) > 0) {\n+                const char* temp = var1->variant;\n+                var1->variant = var2->variant;\n+                var2->variant = temp;\n+            }\n+        }\n+    }\n+}\n+\n@@ -1202,0 +1217,3 @@\n+                \/* per UTS35, we should sort the variants *\/\n+                _sortVariants(varFirst);\n+\n@@ -1255,1 +1273,0 @@\n-            icu::CharString buf;\n@@ -1260,13 +1277,0 @@\n-            char* buffer;\n-            int32_t resultCapacity = ULOC_KEYWORD_AND_VALUES_CAPACITY;\n-\n-            for (;;) {\n-                buffer = buf.getAppendBuffer(\n-                        \/*minCapacity=*\/resultCapacity,\n-                        \/*desiredCapacityHint=*\/resultCapacity,\n-                        resultCapacity,\n-                        tmpStatus);\n-\n-                if (U_FAILURE(tmpStatus)) {\n-                    break;\n-                }\n@@ -1274,9 +1278,4 @@\n-                len = uloc_getKeywordValue(\n-                        localeID, key, buffer, resultCapacity, &tmpStatus);\n-\n-                if (tmpStatus != U_BUFFER_OVERFLOW_ERROR) {\n-                    break;\n-                }\n-\n-                resultCapacity = len;\n-                tmpStatus = U_ZERO_ERROR;\n+            icu::CharString buf;\n+            {\n+                icu::CharStringByteSink sink(&buf);\n+                ulocimp_getKeywordValue(localeID, key, sink, &tmpStatus);\n@@ -1284,0 +1283,1 @@\n+            len = buf.length();\n@@ -1299,5 +1299,0 @@\n-            buf.append(buffer, len, tmpStatus);\n-            if (tmpStatus == U_STRING_NOT_TERMINATED_WARNING) {\n-                tmpStatus = U_ZERO_ERROR;  \/\/ Terminators provided by CharString.\n-            }\n-\n@@ -1382,1 +1377,2 @@\n-                    icu::CharString* extBuf = extBufPool.create();\n+                    icu::CharString* extBuf = extBufPool.create(buf, tmpStatus);\n+\n@@ -1387,16 +1383,0 @@\n-                    int32_t bcpValueLen = static_cast<int32_t>(uprv_strlen(bcpValue));\n-                    int32_t resultCapacity;\n-                    char* pExtBuf = extBuf->getAppendBuffer(\n-                            \/*minCapacity=*\/bcpValueLen,\n-                            \/*desiredCapacityHint=*\/bcpValueLen,\n-                            resultCapacity,\n-                            tmpStatus);\n-                    if (U_FAILURE(tmpStatus)) {\n-                        *status = tmpStatus;\n-                        break;\n-                    }\n-\n-                    uprv_strcpy(pExtBuf, bcpValue);\n-                    T_CString_toLowerCase(pExtBuf);\n-\n-                    extBuf->append(pExtBuf, bcpValueLen, tmpStatus);\n@@ -1408,0 +1388,1 @@\n+                    T_CString_toLowerCase(extBuf->data());\n@@ -1495,2 +1476,5 @@\n-                    sink.Append(\"-\", 1);\n-                    sink.Append(ext->value, static_cast<int32_t>(uprv_strlen(ext->value)));\n+                    if (uprv_strcmp(ext->value, \"true\") != 0 &&\n+                        uprv_strcmp(ext->value, \"yes\") != 0) {\n+                      sink.Append(\"-\", 1);\n+                      sink.Append(ext->value, static_cast<int32_t>(uprv_strlen(ext->value)));\n+                    }\n@@ -1561,4 +1545,2 @@\n-            if (!_addAttributeToList(&attrFirst, attr)) {\n-                *status = U_ILLEGAL_ARGUMENT_ERROR;\n-                return;\n-            }\n+            \/\/ duplicate attribute is ignored, causes no error.\n+            _addAttributeToList(&attrFirst, attr);\n@@ -1667,1 +1649,1 @@\n-                char bcpKeyBuf[9];          \/* BCP key length is always 2 for now *\/\n+                char bcpKeyBuf[3];          \/* BCP key length is always 2 for now *\/\n@@ -1676,0 +1658,1 @@\n+                U_ASSERT(bcpKeyLen <= 2);\n@@ -2008,3 +1991,4 @@\n- * Ticket #12705 - Visual Studio 2015 Update 3 contains a new code optimizer which has problems optimizing\n- * this function. (See https:\/\/blogs.msdn.microsoft.com\/vcblog\/2016\/05\/04\/new-code-optimizer\/ )\n- * As a workaround, we will turn off optimization just for this function on VS2015 Update 3 and above.\n+ * Ticket #12705 - The optimizer in Visual Studio 2015 Update 3 has problems optimizing this function.\n+ * As a work-around, optimization is disabled for this function on VS2015 and VS2017.\n+ * This work-around should be removed once the following versions of Visual Studio are no\n+ * longer supported: All versions of VS2015\/VS2017, and versions of VS2019 below 16.4.\n@@ -2012,1 +1996,1 @@\n-#if (defined(_MSC_VER) && (_MSC_VER >= 1900) && defined(_MSC_FULL_VER) && (_MSC_FULL_VER >= 190024210))\n+#if defined(_MSC_VER) && (_MSC_VER >= 1900) && (_MSC_VER < 1924)\n@@ -2027,1 +2011,1 @@\n-    int32_t grandfatheredLen = 0;\n+    int32_t legacyLen = 0;\n@@ -2067,1 +2051,1 @@\n-    \/\/ Grandfathered tag will be consider together. Grandfathered tag with intervening\n+    \/\/ Legacy tag will be consider together. Legacy tag with intervening\n@@ -2070,4 +2054,4 @@\n-    \/* check if the tag is grandfathered *\/\n-    for (i = 0; i < UPRV_LENGTHOF(GRANDFATHERED); i += 2) {\n-        int32_t checkGrandfatheredLen = static_cast<int32_t>(uprv_strlen(GRANDFATHERED[i]));\n-        if (tagLen < checkGrandfatheredLen) {\n+    \/* check if the tag is legacy *\/\n+    for (i = 0; i < UPRV_LENGTHOF(LEGACY); i += 2) {\n+        int32_t checkLegacyLen = static_cast<int32_t>(uprv_strlen(LEGACY[i]));\n+        if (tagLen < checkLegacyLen) {\n@@ -2076,1 +2060,1 @@\n-        if (tagLen > checkGrandfatheredLen && tagBuf[checkGrandfatheredLen] != '-') {\n+        if (tagLen > checkLegacyLen && tagBuf[checkLegacyLen] != '-') {\n@@ -2080,1 +2064,1 @@\n-        if (uprv_strnicmp(GRANDFATHERED[i], tagBuf, checkGrandfatheredLen) == 0) {\n+        if (uprv_strnicmp(LEGACY[i], tagBuf, checkLegacyLen) == 0) {\n@@ -2083,3 +2067,3 @@\n-            grandfatheredLen = checkGrandfatheredLen;  \/* back up for output parsedLen *\/\n-            int32_t replacementLen = static_cast<int32_t>(uprv_strlen(GRANDFATHERED[i+1]));\n-            newTagLength = replacementLen + tagLen - checkGrandfatheredLen;\n+            legacyLen = checkLegacyLen;  \/* back up for output parsedLen *\/\n+            int32_t replacementLen = static_cast<int32_t>(uprv_strlen(LEGACY[i+1]));\n+            newTagLength = replacementLen + tagLen - checkLegacyLen;\n@@ -2096,4 +2080,4 @@\n-            parsedLenDelta = checkGrandfatheredLen - replacementLen;\n-            uprv_strcpy(t->buf, GRANDFATHERED[i + 1]);\n-            if (checkGrandfatheredLen != tagLen) {\n-                uprv_strcpy(t->buf + replacementLen, tag + checkGrandfatheredLen);\n+            parsedLenDelta = checkLegacyLen - replacementLen;\n+            uprv_strcpy(t->buf, LEGACY[i + 1]);\n+            if (checkLegacyLen != tagLen) {\n+                uprv_strcpy(t->buf + replacementLen, tag + checkLegacyLen);\n@@ -2105,1 +2089,1 @@\n-    if (grandfatheredLen == 0) {\n+    if (legacyLen == 0) {\n@@ -2425,4 +2409,2 @@\n-\/**\n-* Ticket #12705 - Turn optimization back on.\n-*\/\n-#if (defined(_MSC_VER) && (_MSC_VER >= 1900) && defined(_MSC_FULL_VER) && (_MSC_FULL_VER >= 190024210))\n+\/\/ Ticket #12705 - Turn optimization back on.\n+#if defined(_MSC_VER) && (_MSC_VER >= 1900) && (_MSC_VER < 1924)\n@@ -2593,2 +2575,2 @@\n-ultag_getGrandfathered(const ULanguageTag* langtag) {\n-    return langtag->grandfathered;\n+ultag_getLegacy(const ULanguageTag* langtag) {\n+    return langtag->legacy;\n@@ -2705,4 +2687,5 @@\n-                    char buf[ULOC_KEYWORD_AND_VALUES_CAPACITY];\n-                    buf[0] = PRIVATEUSE;\n-                    buf[1] = SEP;\n-                    len = uloc_getKeywordValue(localeID, key, &buf[2], sizeof(buf) - 2, &tmpStatus);\n+                    icu::CharString buf;\n+                    {\n+                        icu::CharStringByteSink sink(&buf);\n+                        ulocimp_getKeywordValue(localeID, key, sink, &tmpStatus);\n+                    }\n@@ -2710,1 +2693,1 @@\n-                        if (ultag_isPrivateuseValueSubtags(&buf[2], len)) {\n+                        if (ultag_isPrivateuseValueSubtags(buf.data(), buf.length())) {\n@@ -2712,1 +2695,3 @@\n-                            sink.Append(buf, len + 2);\n+                            static const char PREFIX[] = { PRIVATEUSE, SEP };\n+                            sink.Append(PREFIX, sizeof(PREFIX));\n+                            sink.Append(buf.data(), buf.length());\n@@ -2827,0 +2812,1 @@\n+    _sortVariants(lt.getAlias()->variants);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uloc_tag.cpp","additions":78,"deletions":92,"binary":false,"changes":170,"status":"modified"},{"patch":"@@ -16,0 +16,2 @@\n+#include \"charstr.h\"\n+\n@@ -41,1 +43,1 @@\n-\/*returns TRUE if a is an ID separator FALSE otherwise*\/\n+\/*returns true if a is an ID separator false otherwise*\/\n@@ -50,1 +52,8 @@\n-U_CFUNC int32_t\n+U_CFUNC void\n+ulocimp_getKeywords(const char *localeID,\n+             char prev,\n+             icu::ByteSink& sink,\n+             UBool valuesToo,\n+             UErrorCode *status);\n+\n+icu::CharString U_EXPORT2\n@@ -52,2 +61,2 @@\n-                    char *language, int32_t languageCapacity,\n-                    const char **pEnd);\n+                    const char **pEnd,\n+                    UErrorCode &status);\n@@ -55,1 +64,1 @@\n-U_CFUNC int32_t\n+icu::CharString U_EXPORT2\n@@ -57,2 +66,2 @@\n-                   char *script, int32_t scriptCapacity,\n-                   const char **pEnd);\n+                  const char **pEnd,\n+                  UErrorCode &status);\n@@ -60,1 +69,1 @@\n-U_CFUNC int32_t\n+icu::CharString U_EXPORT2\n@@ -62,2 +71,23 @@\n-                   char *country, int32_t countryCapacity,\n-                   const char **pEnd);\n+                   const char **pEnd,\n+                   UErrorCode &status);\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_getName(const char* localeID,\n+                icu::ByteSink& sink,\n+                UErrorCode* err);\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_getBaseName(const char* localeID,\n+                    icu::ByteSink& sink,\n+                    UErrorCode* err);\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_canonicalize(const char* localeID,\n+                     icu::ByteSink& sink,\n+                     UErrorCode* err);\n+\n+U_CAPI void U_EXPORT2\n+ulocimp_getKeywordValue(const char* localeID,\n+                        const char* keywordName,\n+                        icu::ByteSink& sink,\n+                        UErrorCode* status);\n@@ -68,1 +98,1 @@\n- * **Note**: When `strict` is FALSE, any locale fields which do not satisfy the\n+ * **Note**: When `strict` is false, any locale fields which do not satisfy the\n@@ -70,1 +100,1 @@\n- * TRUE, this function sets U_ILLEGAL_ARGUMENT_ERROR to the `err` if any locale\n+ * true, this function sets U_ILLEGAL_ARGUMENT_ERROR to the `err` if any locale\n@@ -84,1 +114,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -95,6 +125,9 @@\n- * This implements the 'Language-Tag' production of BCP47, and so\n- * supports grandfathered (regular and irregular) as well as private\n- * use language tags.  Private use tags are represented as 'x-whatever',\n- * and grandfathered tags are converted to their canonical replacements\n- * where they exist.  Note that a few grandfathered tags have no modern\n- * replacement, these will be converted using the fallback described in\n+ * This implements the 'Language-Tag' production of BCP 47, and so\n+ * supports legacy language tags (marked as “Type: grandfathered” in BCP 47)\n+ * (regular and irregular) as well as private use language tags.\n+ *\n+ * Private use tags are represented as 'x-whatever',\n+ * and legacy tags are converted to their canonical replacements where they exist.\n+ *\n+ * Note that a few legacy tags have no modern replacement;\n+ * these will be converted using the fallback described in\n@@ -102,0 +135,1 @@\n+ *\n@@ -123,1 +157,1 @@\n- * (3) if inferRegion is TRUE, the region suggested by\n+ * (3) if inferRegion is true, the region suggested by\n@@ -131,1 +165,1 @@\n- *     If TRUE, will try to infer region from localeID if\n+ *     If true, will try to infer region from localeID if\n@@ -177,1 +211,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -211,1 +245,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -267,0 +301,6 @@\n+\/* Function for testing purpose *\/\n+U_CAPI const char* const* ulocimp_getKnownCanonicalizedLocaleForTest(int32_t* length);\n+\n+\/\/ Return true if the value is already canonicalized.\n+U_CAPI bool ulocimp_isCanonicalizedLocaleForTest(const char* localeName);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ulocimp.h","additions":63,"deletions":23,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"ucln_cmn.h\"\n@@ -38,0 +39,1 @@\n+\n@@ -44,5 +46,3 @@\n-\/\/ The ICU global mutex. Used when ICU implementation code passes NULL for the mutex pointer.\n-static UMutex *globalMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+namespace {\n+std::mutex *initMutex;\n+std::condition_variable *initCondition;\n@@ -50,7 +50,3 @@\n-U_CAPI void  U_EXPORT2\n-umtx_lock(UMutex *mutex) {\n-    if (mutex == nullptr) {\n-        mutex = globalMutex();\n-    }\n-    mutex->fMutex.lock();\n-}\n+\/\/ The ICU global mutex.\n+\/\/ Used when ICU implementation code passes nullptr for the mutex pointer.\n+UMutex globalMutex;\n@@ -58,0 +54,2 @@\n+std::once_flag initFlag;\n+std::once_flag *pInitFlag = &initFlag;\n@@ -59,8 +57,1 @@\n-U_CAPI void  U_EXPORT2\n-umtx_unlock(UMutex* mutex)\n-{\n-    if (mutex == nullptr) {\n-        mutex = globalMutex();\n-    }\n-    mutex->fMutex.unlock();\n-}\n+}  \/\/ Anonymous namespace\n@@ -68,1 +59,11 @@\n-UConditionVar::UConditionVar() : fCV() {\n+U_CDECL_BEGIN\n+static UBool U_CALLCONV umtx_cleanup() {\n+    initMutex->~mutex();\n+    initCondition->~condition_variable();\n+    UMutex::cleanup();\n+\n+    \/\/ Reset the once_flag, by destructing it and creating a fresh one in its place.\n+    \/\/ Do not use this trick anywhere else in ICU; use umtx_initOnce, not std::call_once().\n+    pInitFlag->~once_flag();\n+    pInitFlag = new(&initFlag) std::once_flag();\n+    return true;\n@@ -71,1 +72,23 @@\n-UConditionVar::~UConditionVar() {\n+static void U_CALLCONV umtx_init() {\n+    initMutex = STATIC_NEW(std::mutex);\n+    initCondition = STATIC_NEW(std::condition_variable);\n+    ucln_common_registerCleanup(UCLN_COMMON_MUTEX, umtx_cleanup);\n+}\n+U_CDECL_END\n+\n+\n+std::mutex *UMutex::getMutex() {\n+    std::mutex *retPtr = fMutex.load(std::memory_order_acquire);\n+    if (retPtr == nullptr) {\n+        std::call_once(*pInitFlag, umtx_init);\n+        std::lock_guard<std::mutex> guard(*initMutex);\n+        retPtr = fMutex.load(std::memory_order_acquire);\n+        if (retPtr == nullptr) {\n+            fMutex = new(fStorage) std::mutex();\n+            retPtr = fMutex;\n+            fListLink = gListHead;\n+            gListHead = this;\n+        }\n+    }\n+    U_ASSERT(retPtr != nullptr);\n+    return retPtr;\n@@ -74,4 +97,9 @@\n-U_CAPI void U_EXPORT2\n-umtx_condWait(UConditionVar *cond, UMutex *mutex) {\n-    if (mutex == nullptr) {\n-        mutex = globalMutex();\n+UMutex *UMutex::gListHead = nullptr;\n+\n+void UMutex::cleanup() {\n+    UMutex *next = nullptr;\n+    for (UMutex *m = gListHead; m != nullptr; m = next) {\n+        (*m->fMutex).~mutex();\n+        m->fMutex = nullptr;\n+        next = m->fListLink;\n+        m->fListLink = nullptr;\n@@ -79,1 +107,1 @@\n-    cond->fCV.wait(mutex->fMutex);\n+    gListHead = nullptr;\n@@ -83,3 +111,6 @@\n-U_CAPI void U_EXPORT2\n-umtx_condBroadcast(UConditionVar *cond) {\n-    cond->fCV.notify_all();\n+U_CAPI void  U_EXPORT2\n+umtx_lock(UMutex *mutex) {\n+    if (mutex == nullptr) {\n+        mutex = &globalMutex;\n+    }\n+    mutex->lock();\n@@ -89,3 +120,7 @@\n-U_CAPI void U_EXPORT2\n-umtx_condSignal(UConditionVar *cond) {\n-    cond->fCV.notify_one();\n+U_CAPI void  U_EXPORT2\n+umtx_unlock(UMutex* mutex)\n+{\n+    if (mutex == nullptr) {\n+        mutex = &globalMutex;\n+    }\n+    mutex->unlock();\n@@ -101,11 +136,0 @@\n-static std::mutex &initMutex() {\n-    static std::mutex m;\n-    return m;\n-}\n-\n-static std::condition_variable &initCondition() {\n-    static std::condition_variable cv;\n-    return cv;\n-}\n-\n-\n@@ -122,2 +146,2 @@\n-    std::unique_lock<std::mutex> lock(initMutex());\n-\n+    std::call_once(*pInitFlag, umtx_init);\n+    std::unique_lock<std::mutex> lock(*initMutex);\n@@ -131,1 +155,1 @@\n-            initCondition().wait(lock);\n+            initCondition->wait(lock);\n@@ -148,1 +172,1 @@\n-        std::unique_lock<std::mutex> lock(initMutex());\n+        std::unique_lock<std::mutex> lock(*initMutex);\n@@ -151,1 +175,1 @@\n-    initCondition().notify_all();\n+    initCondition->notify_all();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/umutex.cpp","additions":73,"deletions":49,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include <type_traits>\n@@ -39,1 +40,0 @@\n-\n@@ -43,0 +43,2 @@\n+\/\/\n+\/\/ Similar story for std::atomic<std::mutex *>, and the exported UMutex class.\n@@ -51,0 +53,1 @@\n+template struct U_COMMON_API std::atomic<std::mutex *>;\n@@ -57,0 +60,1 @@\n+template struct std::atomic<std::mutex *>;\n@@ -183,0 +187,10 @@\n+\/\/ UMutex should be constexpr-constructible, so that no initialization code\n+\/\/ is run during startup.\n+\/\/ This works on all C++ libraries except MS VS before VS2019.\n+#if (defined(_CPPLIB_VER) && !defined(_MSVC_STL_VERSION)) || \\\n+    (defined(_MSVC_STL_VERSION) && _MSVC_STL_VERSION < 142)\n+    \/\/ (VS std lib older than VS2017) || (VS std lib version < VS2019)\n+#   define UMUTEX_CONSTEXPR\n+#else\n+#   define UMUTEX_CONSTEXPR constexpr\n+#endif\n@@ -184,1 +198,2 @@\n-\/*************************************************************************************************\n+\/**\n+ * UMutex - ICU Mutex class.\n@@ -186,3 +201,6 @@\n- * ICU Mutex wrappers.  Originally wrapped operating system mutexes, giving the rest of ICU a\n- * platform independent set of mutex operations.  Now vestigial, wrapping std::mutex only.\n- * For internal ICU use only.\n+ * This is the preferred Mutex class for use within ICU implementation code.\n+ * It is a thin wrapper over C++ std::mutex, with these additions:\n+ *    - Static instances are safe, not triggering static construction or destruction,\n+ *      and the associated order of construction or destruction issues.\n+ *    - Plumbed into u_cleanup() for destructing the underlying std::mutex,\n+ *      which frees any OS level resources they may be holding.\n@@ -190,1 +208,14 @@\n- *************************************************************************************************\/\n+ * Limitations:\n+ *    - Static or global instances only. Cannot be heap allocated. Cannot appear as a\n+ *      member of another class.\n+ *    - No condition variables or other advanced features. If needed, you will need to use\n+ *      std::mutex and std::condition_variable directly. For an example, see unifiedcache.cpp\n+ *\n+ * Typical Usage:\n+ *    static UMutex myMutex;\n+ *\n+ *    {\n+ *       Mutex lock(myMutex);\n+ *       ...    \/\/ Do stuff that is protected by myMutex;\n+ *    }         \/\/ myMutex is released when lock goes out of scope.\n+ *\/\n@@ -192,2 +223,3 @@\n-struct UMutex : public icu::UMemory {\n-    UMutex() = default;\n+class U_COMMON_API UMutex {\n+public:\n+    UMUTEX_CONSTEXPR UMutex() {}\n@@ -195,0 +227,1 @@\n+\n@@ -197,0 +230,1 @@\n+    void *operator new(size_t) = delete;\n@@ -198,3 +232,7 @@\n-    std::mutex   fMutex = {};    \/\/ Note: struct - pubic members - because most access is from\n-    \/\/                           \/\/       plain C style functions (umtx_lock(), etc.)\n-};\n+    \/\/ requirements for C++ BasicLockable, allows UMutex to work with std::lock_guard\n+    void lock() {\n+        std::mutex *m = fMutex.load(std::memory_order_acquire);\n+        if (m == nullptr) { m = getMutex(); }\n+        m->lock();\n+    }\n+    void unlock() { fMutex.load(std::memory_order_relaxed)->unlock(); }\n@@ -202,0 +240,1 @@\n+    static void cleanup();\n@@ -203,5 +242,3 @@\n-struct UConditionVar : public icu::UMemory {\n-    U_COMMON_API UConditionVar();\n-    U_COMMON_API ~UConditionVar();\n-    UConditionVar(const UConditionVar &other) = delete;\n-    UConditionVar &operator =(const UConditionVar &other) = delete;\n+private:\n+    alignas(std::mutex) char fStorage[sizeof(std::mutex)] {};\n+    std::atomic<std::mutex *> fMutex { nullptr };\n@@ -209,2 +246,5 @@\n-    std::condition_variable_any fCV;\n-};\n+    \/** All initialized UMutexes are kept in a linked list, so that they can be found,\n+     * and the underlying std::mutex destructed, by u_cleanup().\n+     *\/\n+    UMutex *fListLink { nullptr };\n+    static UMutex *gListHead;\n@@ -212,2 +252,6 @@\n-#define U_MUTEX_INITIALIZER {}\n-#define U_CONDITION_INITIALIZER {}\n+    \/** Out-of-line function to lazily initialize a UMutex on first use.\n+     * Initial fast check is inline, in lock().  The returned value may never\n+     * be nullptr.\n+     *\/\n+    std::mutex *getMutex();\n+};\n@@ -215,11 +259,0 @@\n-\/\/ Implementation notes for UConditionVar:\n-\/\/\n-\/\/ Use an out-of-line constructor to reduce problems with the ICU dependency checker.\n-\/\/ On Linux, the default constructor of std::condition_variable_any\n-\/\/ produces an in-line reference to global operator new(), which the\n-\/\/ dependency checker flags for any file that declares a UConditionVar. With\n-\/\/ an out-of-line constructor, the dependency is constrained to umutex.o\n-\/\/\n-\/\/ Do not export (U_COMMON_API) the entire class, but only the constructor\n-\/\/ and destructor, to avoid Windows build problems with attempting to export the\n-\/\/ std::condition_variable_any.\n@@ -232,1 +265,1 @@\n-U_INTERNAL void U_EXPORT2 umtx_lock(UMutex* mutex);\n+U_CAPI void U_EXPORT2 umtx_lock(UMutex* mutex);\n@@ -238,25 +271,1 @@\n-U_INTERNAL void U_EXPORT2 umtx_unlock (UMutex* mutex);\n-\n-\/*\n- * Wait on a condition variable.\n- * The calling thread will unlock the mutex and wait on the condition variable.\n- * The mutex must be locked by the calling thread when invoking this function.\n- *\n- * @param cond the condition variable to wait on.\n- * @param mutex the associated mutex.\n- *\/\n-\n-U_INTERNAL void U_EXPORT2 umtx_condWait(UConditionVar *cond, UMutex *mutex);\n-\n-\n-\/*\n- * Broadcast wakeup of all threads waiting on a Condition.\n- *\n- * @param cond the condition variable.\n- *\/\n-U_INTERNAL void U_EXPORT2 umtx_condBroadcast(UConditionVar *cond);\n-\n-\/*\n- * Signal a condition variable, waking up one waiting thread.\n- *\/\n-U_INTERNAL void U_EXPORT2 umtx_condSignal(UConditionVar *cond);\n+U_CAPI void U_EXPORT2 umtx_unlock (UMutex* mutex);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/umutex.h","additions":66,"deletions":57,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-#define WRITE_CHAR(buffer, bufferLength, bufferPos, c) { \\\n+#define WRITE_CHAR(buffer, bufferLength, bufferPos, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -221,1 +221,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -1522,1 +1522,2 @@\n-    char upper[120], lower[120];\n+    char upper[120] = {0};\n+    char lower[120] = {0};\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unames.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -45,1 +48,1 @@\n- * in addition to returning FALSE from failing operations,\n+ * in addition to returning false from failing operations,\n@@ -62,1 +65,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -71,1 +74,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -81,1 +84,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -90,1 +93,1 @@\n-     * The default implementation does nothing. (It always returns TRUE.)\n+     * The default implementation does nothing. (It always returns true.)\n@@ -92,1 +95,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -171,1 +174,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -179,1 +182,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -188,1 +191,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -197,1 +200,1 @@\n-     * @return TRUE if the operation succeeded\n+     * @return true if the operation succeeded\n@@ -234,0 +237,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/appendable.h","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -32,0 +32,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -138,1 +142,1 @@\n-    virtual BreakIterator* clone(void) const = 0;\n+    virtual BreakIterator* clone() const = 0;\n@@ -496,0 +500,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -518,0 +523,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -561,1 +567,1 @@\n-     * @return TRUE if the iterator for the key was successfully unregistered\n+     * @return true if the iterator for the key was successfully unregistered\n@@ -652,1 +658,1 @@\n-    return FALSE;\n+    return false;\n@@ -661,0 +667,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/brkiter.h","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -41,0 +41,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -71,0 +74,34 @@\n+#ifndef U_HIDE_DRAFT_API\n+  \/**\n+   * Appends n bytes to this. Same as Append().\n+   * Call AppendU8() with u8\"string literals\" which are const char * in C++11\n+   * but const char8_t * in C++20.\n+   * If the compiler does support char8_t as a distinct type,\n+   * then an AppendU8() overload for that is defined and will be chosen.\n+   *\n+   * @param bytes the pointer to the bytes\n+   * @param n the number of bytes; must be non-negative\n+   * @draft ICU 67\n+   *\/\n+  inline void AppendU8(const char* bytes, int32_t n) {\n+    Append(bytes, n);\n+  }\n+\n+#if defined(__cpp_char8_t) || defined(U_IN_DOXYGEN)\n+  \/**\n+   * Appends n bytes to this. Same as Append() but for a const char8_t * pointer.\n+   * Call AppendU8() with u8\"string literals\" which are const char * in C++11\n+   * but const char8_t * in C++20.\n+   * If the compiler does support char8_t as a distinct type,\n+   * then this AppendU8() overload for that is defined and will be chosen.\n+   *\n+   * @param bytes the pointer to the bytes\n+   * @param n the number of bytes; must be non-negative\n+   * @draft ICU 67\n+   *\/\n+  inline void AppendU8(const char8_t* bytes, int32_t n) {\n+    Append(reinterpret_cast<const char*>(bytes), n);\n+  }\n+#endif\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -163,1 +200,1 @@\n-   * and Overflowed()=FALSE.\n+   * and Overflowed()=false.\n@@ -202,1 +239,1 @@\n-   * @return TRUE if more than 'capacity' bytes were Append()ed\n+   * @return true if more than 'capacity' bytes were Append()ed\n@@ -270,0 +307,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/bytestream.h","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -97,0 +100,33 @@\n+    \/**\n+     * Returns the state of this trie as a 64-bit integer.\n+     * The state value is never 0.\n+     *\n+     * @return opaque state value\n+     * @see resetToState64\n+     * @stable ICU 65\n+     *\/\n+    uint64_t getState64() const {\n+        return (static_cast<uint64_t>(remainingMatchLength_ + 2) << kState64RemainingShift) |\n+            (uint64_t)(pos_ - bytes_);\n+    }\n+\n+    \/**\n+     * Resets this trie to the saved state.\n+     * Unlike resetToState(State), the 64-bit state value\n+     * must be from getState64() from the same trie object or\n+     * from one initialized the exact same way.\n+     * Because of no validation, this method is faster.\n+     *\n+     * @param state The opaque trie state value from getState64().\n+     * @return *this\n+     * @see getState64\n+     * @see resetToState\n+     * @see reset\n+     * @stable ICU 65\n+     *\/\n+    BytesTrie &resetToState64(uint64_t state) {\n+        remainingMatchLength_ = static_cast<int32_t>(state >> kState64RemainingShift) - 2;\n+        pos_ = bytes_ + (state & kState64PosMask);\n+        return *this;\n+    }\n+\n@@ -218,1 +254,1 @@\n-     * @param uniqueValue Receives the unique value, if this function returns TRUE.\n+     * @param uniqueValue Receives the unique value, if this function returns true.\n@@ -220,1 +256,1 @@\n-     * @return TRUE if all byte sequences reachable from the current state\n+     * @return true if all byte sequences reachable from the current state\n@@ -227,1 +263,1 @@\n-        return pos!=NULL && findUniqueValue(pos+remainingMatchLength_+1, FALSE, uniqueValue);\n+        return pos!=NULL && findUniqueValue(pos+remainingMatchLength_+1, false, uniqueValue);\n@@ -286,1 +322,1 @@\n-         * @return TRUE if there are more elements.\n+         * @return true if there are more elements.\n@@ -302,1 +338,1 @@\n-         * @return TRUE if there is another element.\n+         * @return true if there is another element.\n@@ -505,0 +541,7 @@\n+    \/\/ For getState64():\n+    \/\/ The remainingMatchLength_ is -1..14=(kMaxLinearMatchLength=0x10)-2\n+    \/\/ so we need at least 5 bits for that.\n+    \/\/ We add 2 to store it as a positive value 1..16=kMaxLinearMatchLength.\n+    static constexpr int32_t kState64RemainingShift = 59;\n+    static constexpr uint64_t kState64PosMask = (UINT64_C(1) << kState64RemainingShift) - 1;\n+\n@@ -520,0 +563,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/bytestrie.h","additions":50,"deletions":5,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -101,3 +104,4 @@\n-     * re-serialized into a new array.\n-     * If build() is called after buildStringPiece(), the trie object will become\n-     * the owner of the previously returned array.\n+     * re-serialized into a new array (because build() passes on ownership).\n+     * If build() is called after buildStringPiece(), the trie object returned\n+     * by build() will become the owner of the underlying string for the\n+     * previously returned StringPiece.\n@@ -139,1 +143,1 @@\n-    virtual UBool matchNodesCanHaveValues() const { return FALSE; }\n+    virtual UBool matchNodesCanHaveValues() const { return false; }\n@@ -182,0 +186,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/bytestriebuilder.h","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -15,0 +15,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -26,1 +28,1 @@\n- *  Should be either TRUE or FALSE. This is a compile time option\n+ *  Should be either true or false. This is a compile time option\n@@ -30,1 +32,1 @@\n-#define CANITER_SKIP_ZEROES TRUE\n+#define CANITER_SKIP_ZEROES true\n@@ -210,0 +212,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/caniter.h","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -11,0 +11,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -492,0 +495,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/casemap.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -10,1 +10,0 @@\n-#include <cstddef>\n@@ -13,0 +12,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n+#include <cstddef>\n+\n@@ -308,0 +311,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/char16ptr.h","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -16,0 +16,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -65,1 +68,1 @@\n- * <li>The hasNext() function returns FALSE.<\/li>\n+ * <li>The hasNext() function returns false.<\/li>\n@@ -165,1 +168,1 @@\n-     * Returns FALSE if there are no more code units or code points\n+     * Returns false if there are no more code units or code points\n@@ -169,1 +172,1 @@\n-     * @returns FALSE if there are no more code units or code points\n+     * @returns false if there are no more code units or code points\n@@ -380,1 +383,1 @@\n-    virtual CharacterIterator* clone(void) const = 0;\n+    virtual CharacterIterator* clone() const = 0;\n@@ -535,1 +538,1 @@\n-     * Returns FALSE if there are no more code units or code points\n+     * Returns false if there are no more code units or code points\n@@ -539,2 +542,2 @@\n-     * @return FALSE if there are no more code units or code points\n-     * before the current position in the iteration range, return TRUE otherwise.\n+     * @return false if there are no more code units or code points\n+     * before the current position in the iteration range, return true otherwise.\n@@ -728,0 +731,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/chariter.h","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -16,0 +16,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -42,0 +46,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/dbbi.h","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,4 +56,4 @@\n- *   <li><a href=\"http:\/\/userguide.icu-project.org\/\">Introduction<\/a><\/li>\n- *   <li><a href=\"http:\/\/userguide.icu-project.org\/i18n\">Internationalization<\/a><\/li>\n- *   <li><a href=\"http:\/\/userguide.icu-project.org\/design\">Locale Model, Multithreading, Error Handling, etc.<\/a><\/li>\n- *   <li><a href=\"http:\/\/userguide.icu-project.org\/conversion\">Conversion<\/a><\/li>\n+ *   <li><a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/\">Introduction<\/a><\/li>\n+ *   <li><a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/i18n\">Internationalization<\/a><\/li>\n+ *   <li><a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/design\">Locale Model, Multithreading, Error Handling, etc.<\/a><\/li>\n+ *   <li><a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/conversion\">Conversion<\/a><\/li>\n@@ -102,1 +102,1 @@\n- *     <td>ucnv.h, ucnvsel.hb<\/td>\n+ *     <td>ucnv.h, ucnvsel.h<\/td>\n@@ -118,1 +118,1 @@\n- *     <td>icu::Locale, icu::LocaleBuilder<\/td>\n+ *     <td>icu::Locale, icu::LocaleBuilder, icu::LocaleMatcher<\/td>\n@@ -146,0 +146,5 @@\n+ *     <td>List Formatting<\/td>\n+ *     <td>ulistformatter.h<\/td>\n+ *     <td>icu::ListFormatter<\/td>\n+ *   <\/tr>\n+ *   <tr>\n@@ -152,1 +157,1 @@\n- *     <td>(no C API)<\/td>\n+ *     <td>unumberrangeformatter.h<\/td>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/docmain.h","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -18,0 +18,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -25,1 +28,0 @@\n-\n@@ -107,1 +109,1 @@\n-     * @return TRUE if the two DateIntervals are the same\n+     * @return true if the two DateIntervals are the same\n@@ -114,1 +116,1 @@\n-     * @return TRUE if the two DateIntervals are not the same\n+     * @return true if the two DateIntervals are not the same\n@@ -160,0 +162,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/dtintrv.h","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -11,0 +11,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -159,1 +162,1 @@\n-     * @return TRUE if U_FAILURE(outErrorCode)\n+     * @return true if U_FAILURE(outErrorCode)\n@@ -162,1 +165,1 @@\n-    UBool copyErrorTo(UErrorCode &outErrorCode);\n+    UBool copyErrorTo(UErrorCode &outErrorCode) const;\n@@ -171,1 +174,1 @@\n-     * @return TRUE if there are any change edits\n+     * @return true if there are any change edits\n@@ -207,2 +210,2 @@\n-                remaining(0), onlyChanges_(FALSE), coarse(FALSE),\n-                dir(0), changed(FALSE), oldLength_(0), newLength_(0),\n+                remaining(0), onlyChanges_(false), coarse(false),\n+                dir(0), changed(false), oldLength_(0), newLength_(0),\n@@ -226,1 +229,1 @@\n-         * @return TRUE if there is another edit\n+         * @return true if there is another edit\n@@ -247,1 +250,1 @@\n-         * @return TRUE if the edit for the source index was found\n+         * @return true if the edit for the source index was found\n@@ -251,1 +254,1 @@\n-            return findIndex(i, TRUE, errorCode) == 0;\n+            return findIndex(i, true, errorCode) == 0;\n@@ -270,1 +273,1 @@\n-         * @return TRUE if the edit for the destination index was found\n+         * @return true if the edit for the destination index was found\n@@ -274,1 +277,1 @@\n-            return findIndex(i, FALSE, errorCode) == 0;\n+            return findIndex(i, false, errorCode) == 0;\n@@ -328,2 +331,2 @@\n-         * @return TRUE if this edit replaces oldLength() units with newLength() different ones.\n-         *         FALSE if oldLength units remain unchanged.\n+         * @return true if this edit replaces oldLength() units with newLength() different ones.\n+         *         false if oldLength units remain unchanged.\n@@ -347,2 +350,2 @@\n-         * @return the number of units in the modified string, if hasChange() is TRUE.\n-         *         Same as oldLength if hasChange() is FALSE.\n+         * @return the number of units in the modified string, if hasChange() is true.\n+         *         Same as oldLength if hasChange() is false.\n@@ -436,1 +439,1 @@\n-        return Iterator(array, length, TRUE, TRUE);\n+        return Iterator(array, length, true, true);\n@@ -448,1 +451,1 @@\n-        return Iterator(array, length, FALSE, TRUE);\n+        return Iterator(array, length, false, true);\n@@ -460,1 +463,1 @@\n-        return Iterator(array, length, TRUE, FALSE);\n+        return Iterator(array, length, true, false);\n@@ -471,1 +474,1 @@\n-        return Iterator(array, length, FALSE, FALSE);\n+        return Iterator(array, length, false, false);\n@@ -526,0 +529,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/edits.h","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -29,0 +29,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -139,0 +142,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/errorcode.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -14,0 +14,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -85,2 +88,2 @@\n-   * @return returns TRUE if the string was not present and now added,\n-   * FALSE if the call was a no-op because the string was already being suppressed.\n+   * @return returns true if the string was not present and now added,\n+   * false if the call was a no-op because the string was already being suppressed.\n@@ -98,2 +101,2 @@\n-   * @return returns TRUE if the string was present and now removed,\n-   * FALSE if the call was a no-op because the string was not being suppressed.\n+   * @return returns true if the string was present and now removed,\n+   * false if the call was a no-op because the string was not being suppressed.\n@@ -104,0 +107,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -114,0 +118,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -145,0 +150,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/filteredbrk.h","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-U_STABLE void U_EXPORT2 u_getDataVersion(UVersionInfo dataVersionFillin, UErrorCode *status);\n+U_CAPI void U_EXPORT2 u_getDataVersion(UVersionInfo dataVersionFillin, UErrorCode *status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/icudataver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -220,1 +220,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -229,1 +229,1 @@\n-U_INTERNAL UPlugLevel U_EXPORT2\n+U_CAPI UPlugLevel U_EXPORT2\n@@ -239,1 +239,1 @@\n-U_INTERNAL UPlugLevel U_EXPORT2\n+U_CAPI UPlugLevel U_EXPORT2\n@@ -248,1 +248,1 @@\n-U_INTERNAL UErrorCode U_EXPORT2\n+U_CAPI UErrorCode U_EXPORT2\n@@ -257,1 +257,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -266,1 +266,1 @@\n-U_INTERNAL const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -275,1 +275,1 @@\n-U_INTERNAL const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -285,1 +285,1 @@\n-U_INTERNAL const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -295,1 +295,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -304,1 +304,1 @@\n-U_INTERNAL void * U_EXPORT2\n+U_CAPI void * U_EXPORT2\n@@ -313,1 +313,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -324,1 +324,1 @@\n-U_INTERNAL const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -342,1 +342,1 @@\n-U_INTERNAL UPlugData* U_EXPORT2\n+U_CAPI UPlugData* U_EXPORT2\n@@ -357,1 +357,1 @@\n-U_INTERNAL UPlugData* U_EXPORT2\n+U_CAPI UPlugData* U_EXPORT2\n@@ -371,1 +371,1 @@\n-U_INTERNAL UPlugData* U_EXPORT2\n+U_CAPI UPlugData* U_EXPORT2\n@@ -381,1 +381,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/icuplug.h","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -96,1 +98,1 @@\n-     * If any processing step fails, then info.hasErrors() will be TRUE and\n+     * If any processing step fails, then info.hasErrors() will be true and\n@@ -120,1 +122,1 @@\n-     * If any processing step fails, then info.hasErrors() will be TRUE.\n+     * If any processing step fails, then info.hasErrors() will be true.\n@@ -142,1 +144,1 @@\n-     * If any processing step fails, then info.hasErrors() will be TRUE and\n+     * If any processing step fails, then info.hasErrors() will be true and\n@@ -166,1 +168,1 @@\n-     * If any processing step fails, then info.hasErrors() will be TRUE.\n+     * If any processing step fails, then info.hasErrors() will be true.\n@@ -274,1 +276,1 @@\n-    IDNAInfo() : errors(0), labelErrors(0), isTransDiff(FALSE), isBiDi(FALSE), isOkBiDi(TRUE) {}\n+    IDNAInfo() : errors(0), labelErrors(0), isTransDiff(false), isBiDi(false), isOkBiDi(true) {}\n@@ -277,1 +279,1 @@\n-     * @return TRUE if there were processing errors\n+     * @return true if there were processing errors\n@@ -289,1 +291,1 @@\n-     * Returns TRUE if transitional and nontransitional processing produce different results.\n+     * Returns true if transitional and nontransitional processing produce different results.\n@@ -298,1 +300,1 @@\n-     * @return TRUE if transitional and nontransitional processing produce different results\n+     * @return true if transitional and nontransitional processing produce different results\n@@ -311,3 +313,3 @@\n-        isTransDiff=FALSE;\n-        isBiDi=FALSE;\n-        isOkBiDi=TRUE;\n+        isTransDiff=false;\n+        isBiDi=false;\n+        isOkBiDi=true;\n@@ -325,0 +327,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/idna.h","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html#License\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n@@ -6,0 +6,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -7,0 +11,1 @@\n+#include \"unicode\/localematcher.h\"\n@@ -9,2 +14,0 @@\n-#include \"unicode\/utypes.h\"\n-\n@@ -12,1 +15,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -57,1 +59,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -66,1 +68,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -72,1 +74,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -86,1 +88,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -93,5 +95,6 @@\n-     * Discards the existing state. the empty string cause the builder to be\n-     * reset, like {@link #clear}.  Grandfathered tags are converted to their\n-     * canonical form before being processed.  Otherwise, the <code>language\n-     * tag<\/code> must be well-formed, or else the build() method will later\n-     * report an U_ILLEGAL_ARGUMENT_ERROR.\n+     * Discards the existing state.\n+     * The empty string causes the builder to be reset, like {@link #clear}.\n+     * Legacy language tags (marked as “Type: grandfathered” in BCP 47)\n+     * are converted to their canonical form before being processed.\n+     * Otherwise, the <code>language tag<\/code> must be well-formed,\n+     * or else the build() method will later report an U_ILLEGAL_ARGUMENT_ERROR.\n@@ -104,1 +107,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -119,1 +122,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -135,1 +138,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -154,1 +157,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -175,1 +178,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -196,1 +199,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -216,1 +219,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -229,1 +232,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -242,1 +245,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -251,1 +254,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -260,1 +263,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -275,1 +278,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -279,0 +282,11 @@\n+    \/**\n+     * Sets the UErrorCode if an error occurred while recording sets.\n+     * Preserves older error codes in the outErrorCode.\n+     * @param outErrorCode Set to an error code that occurred while setting subtags.\n+     *                  Unchanged if there is no such error or if outErrorCode\n+     *                  already contained an error.\n+     * @return true if U_FAILURE(outErrorCode)\n+     * @stable ICU 65\n+     *\/\n+    UBool copyErrorTo(UErrorCode &outErrorCode) const;\n+\n@@ -280,0 +294,4 @@\n+    friend class LocaleMatcher::Result;\n+\n+    void copyExtensionsFrom(const Locale& src, UErrorCode& errorCode);\n+\n@@ -291,1 +309,2 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/localebuilder.h","additions":45,"deletions":26,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -0,0 +1,720 @@\n+\/\/ © 2019 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ localematcher.h\n+\/\/ created: 2019may08 Markus W. Scherer\n+\n+#ifndef __LOCALEMATCHER_H__\n+#define __LOCALEMATCHER_H__\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+\n+\/**\n+ * \\file\n+ * \\brief C++ API: Locale matcher: User's desired locales vs. application's supported locales.\n+ *\/\n+\n+\/**\n+ * Builder option for whether the language subtag or the script subtag is most important.\n+ *\n+ * @see LocaleMatcher::Builder#setFavorSubtag(ULocMatchFavorSubtag)\n+ * @stable ICU 65\n+ *\/\n+enum ULocMatchFavorSubtag {\n+    \/**\n+     * Language differences are most important, then script differences, then region differences.\n+     * (This is the default behavior.)\n+     *\n+     * @stable ICU 65\n+     *\/\n+    ULOCMATCH_FAVOR_LANGUAGE,\n+    \/**\n+     * Makes script differences matter relatively more than language differences.\n+     *\n+     * @stable ICU 65\n+     *\/\n+    ULOCMATCH_FAVOR_SCRIPT\n+};\n+#ifndef U_IN_DOXYGEN\n+typedef enum ULocMatchFavorSubtag ULocMatchFavorSubtag;\n+#endif\n+\n+\/**\n+ * Builder option for whether all desired locales are treated equally or\n+ * earlier ones are preferred.\n+ *\n+ * @see LocaleMatcher::Builder#setDemotionPerDesiredLocale(ULocMatchDemotion)\n+ * @stable ICU 65\n+ *\/\n+enum ULocMatchDemotion {\n+    \/**\n+     * All desired locales are treated equally.\n+     *\n+     * @stable ICU 65\n+     *\/\n+    ULOCMATCH_DEMOTION_NONE,\n+    \/**\n+     * Earlier desired locales are preferred.\n+     *\n+     * <p>From each desired locale to the next,\n+     * the distance to any supported locale is increased by an additional amount\n+     * which is at least as large as most region mismatches.\n+     * A later desired locale has to have a better match with some supported locale\n+     * due to more than merely having the same region subtag.\n+     *\n+     * <p>For example: <code>Supported={en, sv}  desired=[en-GB, sv]<\/code>\n+     * yields <code>Result(en-GB, en)<\/code> because\n+     * with the demotion of sv its perfect match is no better than\n+     * the region distance between the earlier desired locale en-GB and en=en-US.\n+     *\n+     * <p>Notes:\n+     * <ul>\n+     *   <li>In some cases, language and\/or script differences can be as small as\n+     *       the typical region difference. (Example: sr-Latn vs. sr-Cyrl)\n+     *   <li>It is possible for certain region differences to be larger than usual,\n+     *       and larger than the demotion.\n+     *       (As of CLDR 35 there is no such case, but\n+     *        this is possible in future versions of the data.)\n+     * <\/ul>\n+     *\n+     * @stable ICU 65\n+     *\/\n+    ULOCMATCH_DEMOTION_REGION\n+};\n+#ifndef U_IN_DOXYGEN\n+typedef enum ULocMatchDemotion ULocMatchDemotion;\n+#endif\n+\n+#ifndef U_FORCE_HIDE_DRAFT_API\n+\n+\/**\n+ * Builder option for whether to include or ignore one-way (fallback) match data.\n+ * The LocaleMatcher uses CLDR languageMatch data which includes fallback (oneway=true) entries.\n+ * Sometimes it is desirable to ignore those.\n+ *\n+ * <p>For example, consider a web application with the UI in a given language,\n+ * with a link to another, related web app.\n+ * The link should include the UI language, and the target server may also use\n+ * the client’s Accept-Language header data.\n+ * The target server has its own list of supported languages.\n+ * One may want to favor UI language consistency, that is,\n+ * if there is a decent match for the original UI language, we want to use it,\n+ * but not if it is merely a fallback.\n+ *\n+ * @see LocaleMatcher::Builder#setDirection(ULocMatchDirection)\n+ * @draft ICU 67\n+ *\/\n+enum ULocMatchDirection {\n+    \/**\n+     * Locale matching includes one-way matches such as Breton→French. (default)\n+     *\n+     * @draft ICU 67\n+     *\/\n+    ULOCMATCH_DIRECTION_WITH_ONE_WAY,\n+    \/**\n+     * Locale matching limited to two-way matches including e.g. Danish↔Norwegian\n+     * but ignoring one-way matches.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    ULOCMATCH_DIRECTION_ONLY_TWO_WAY\n+};\n+#ifndef U_IN_DOXYGEN\n+typedef enum ULocMatchDirection ULocMatchDirection;\n+#endif\n+\n+#endif  \/\/ U_FORCE_HIDE_DRAFT_API\n+\n+struct UHashtable;\n+\n+U_NAMESPACE_BEGIN\n+\n+struct LSR;\n+\n+class LocaleDistance;\n+class LocaleLsrIterator;\n+class UVector;\n+class XLikelySubtags;\n+\n+\/**\n+ * Immutable class that picks the best match between a user's desired locales and\n+ * an application's supported locales.\n+ * Movable but not copyable.\n+ *\n+ * <p>Example:\n+ * <pre>\n+ * UErrorCode errorCode = U_ZERO_ERROR;\n+ * LocaleMatcher matcher = LocaleMatcher::Builder().setSupportedLocales(\"fr, en-GB, en\").build(errorCode);\n+ * Locale *bestSupported = matcher.getBestLocale(Locale.US, errorCode);  \/\/ \"en\"\n+ * <\/pre>\n+ *\n+ * <p>A matcher takes into account when languages are close to one another,\n+ * such as Danish and Norwegian,\n+ * and when regional variants are close, like en-GB and en-AU as opposed to en-US.\n+ *\n+ * <p>If there are multiple supported locales with the same (language, script, region)\n+ * likely subtags, then the current implementation returns the first of those locales.\n+ * It ignores variant subtags (except for pseudolocale variants) and extensions.\n+ * This may change in future versions.\n+ *\n+ * <p>For example, the current implementation does not distinguish between\n+ * de, de-DE, de-Latn, de-1901, de-u-co-phonebk.\n+ *\n+ * <p>If you prefer one equivalent locale over another, then provide only the preferred one,\n+ * or place it earlier in the list of supported locales.\n+ *\n+ * <p>Otherwise, the order of supported locales may have no effect on the best-match results.\n+ * The current implementation compares each desired locale with supported locales\n+ * in the following order:\n+ * 1. Default locale, if supported;\n+ * 2. CLDR \"paradigm locales\" like en-GB and es-419;\n+ * 3. other supported locales.\n+ * This may change in future versions.\n+ *\n+ * <p>Often a product will just need one matcher instance, built with the languages\n+ * that it supports. However, it may want multiple instances with different\n+ * default languages based on additional information, such as the domain.\n+ *\n+ * <p>This class is not intended for public subclassing.\n+ *\n+ * @stable ICU 65\n+ *\/\n+class U_COMMON_API LocaleMatcher : public UMemory {\n+public:\n+    \/**\n+     * Data for the best-matching pair of a desired and a supported locale.\n+     * Movable but not copyable.\n+     *\n+     * @stable ICU 65\n+     *\/\n+    class U_COMMON_API Result : public UMemory {\n+    public:\n+        \/**\n+         * Move constructor; might modify the source.\n+         * This object will have the same contents that the source object had.\n+         *\n+         * @param src Result to move contents from.\n+         * @stable ICU 65\n+         *\/\n+        Result(Result &&src) U_NOEXCEPT;\n+\n+        \/**\n+         * Destructor.\n+         *\n+         * @stable ICU 65\n+         *\/\n+        ~Result();\n+\n+        \/**\n+         * Move assignment; might modify the source.\n+         * This object will have the same contents that the source object had.\n+         *\n+         * @param src Result to move contents from.\n+         * @stable ICU 65\n+         *\/\n+        Result &operator=(Result &&src) U_NOEXCEPT;\n+\n+        \/**\n+         * Returns the best-matching desired locale.\n+         * nullptr if the list of desired locales is empty or if none matched well enough.\n+         *\n+         * @return the best-matching desired locale, or nullptr.\n+         * @stable ICU 65\n+         *\/\n+        inline const Locale *getDesiredLocale() const { return desiredLocale; }\n+\n+        \/**\n+         * Returns the best-matching supported locale.\n+         * If none matched well enough, this is the default locale.\n+         * The default locale is nullptr if Builder::setNoDefaultLocale() was called,\n+         * or if the list of supported locales is empty and no explicit default locale is set.\n+         *\n+         * @return the best-matching supported locale, or nullptr.\n+         * @stable ICU 65\n+         *\/\n+        inline const Locale *getSupportedLocale() const { return supportedLocale; }\n+\n+        \/**\n+         * Returns the index of the best-matching desired locale in the input Iterable order.\n+         * -1 if the list of desired locales is empty or if none matched well enough.\n+         *\n+         * @return the index of the best-matching desired locale, or -1.\n+         * @stable ICU 65\n+         *\/\n+        inline int32_t getDesiredIndex() const { return desiredIndex; }\n+\n+        \/**\n+         * Returns the index of the best-matching supported locale in the\n+         * constructor’s or builder’s input order (“set” Collection plus “added” locales).\n+         * If the matcher was built from a locale list string, then the iteration order is that\n+         * of a LocalePriorityList built from the same string.\n+         * -1 if the list of supported locales is empty or if none matched well enough.\n+         *\n+         * @return the index of the best-matching supported locale, or -1.\n+         * @stable ICU 65\n+         *\/\n+        inline int32_t getSupportedIndex() const { return supportedIndex; }\n+\n+        \/**\n+         * Takes the best-matching supported locale and adds relevant fields of the\n+         * best-matching desired locale, such as the -t- and -u- extensions.\n+         * May replace some fields of the supported locale.\n+         * The result is the locale that should be used for date and number formatting, collation, etc.\n+         * Returns the root locale if getSupportedLocale() returns nullptr.\n+         *\n+         * <p>Example: desired=ar-SA-u-nu-latn, supported=ar-EG, resolved locale=ar-SA-u-nu-latn\n+         *\n+         * @return a locale combining the best-matching desired and supported locales.\n+         * @stable ICU 65\n+         *\/\n+        Locale makeResolvedLocale(UErrorCode &errorCode) const;\n+\n+    private:\n+        Result(const Locale *desired, const Locale *supported,\n+               int32_t desIndex, int32_t suppIndex, UBool owned) :\n+                desiredLocale(desired), supportedLocale(supported),\n+                desiredIndex(desIndex), supportedIndex(suppIndex),\n+                desiredIsOwned(owned) {}\n+\n+        Result(const Result &other) = delete;\n+        Result &operator=(const Result &other) = delete;\n+\n+        const Locale *desiredLocale;\n+        const Locale *supportedLocale;\n+        int32_t desiredIndex;\n+        int32_t supportedIndex;\n+        UBool desiredIsOwned;\n+\n+        friend class LocaleMatcher;\n+    };\n+\n+    \/**\n+     * LocaleMatcher builder.\n+     * Movable but not copyable.\n+     *\n+     * @stable ICU 65\n+     *\/\n+    class U_COMMON_API Builder : public UMemory {\n+    public:\n+        \/**\n+         * Constructs a builder used in chaining parameters for building a LocaleMatcher.\n+         *\n+         * @return a new Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder() {}\n+\n+        \/**\n+         * Move constructor; might modify the source.\n+         * This builder will have the same contents that the source builder had.\n+         *\n+         * @param src Builder to move contents from.\n+         * @stable ICU 65\n+         *\/\n+        Builder(Builder &&src) U_NOEXCEPT;\n+\n+        \/**\n+         * Destructor.\n+         *\n+         * @stable ICU 65\n+         *\/\n+        ~Builder();\n+\n+        \/**\n+         * Move assignment; might modify the source.\n+         * This builder will have the same contents that the source builder had.\n+         *\n+         * @param src Builder to move contents from.\n+         * @stable ICU 65\n+         *\/\n+        Builder &operator=(Builder &&src) U_NOEXCEPT;\n+\n+        \/**\n+         * Parses an Accept-Language string\n+         * (<a href=\"https:\/\/tools.ietf.org\/html\/rfc2616#section-14.4\">RFC 2616 Section 14.4<\/a>),\n+         * such as \"af, en, fr;q=0.9\", and sets the supported locales accordingly.\n+         * Allows whitespace in more places but does not allow \"*\".\n+         * Clears any previously set\/added supported locales first.\n+         *\n+         * @param locales the Accept-Language string of locales to set\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder &setSupportedLocalesFromListString(StringPiece locales);\n+\n+        \/**\n+         * Copies the supported locales, preserving iteration order.\n+         * Clears any previously set\/added supported locales first.\n+         * Duplicates are allowed, and are not removed.\n+         *\n+         * @param locales the list of locale\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder &setSupportedLocales(Locale::Iterator &locales);\n+\n+        \/**\n+         * Copies the supported locales from the begin\/end range, preserving iteration order.\n+         * Clears any previously set\/added supported locales first.\n+         * Duplicates are allowed, and are not removed.\n+         *\n+         * Each of the iterator parameter values must be an\n+         * input iterator whose value is convertible to const Locale &.\n+         *\n+         * @param begin Start of range.\n+         * @param end Exclusive end of range.\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        template<typename Iter>\n+        Builder &setSupportedLocales(Iter begin, Iter end) {\n+            if (U_FAILURE(errorCode_)) { return *this; }\n+            clearSupportedLocales();\n+            while (begin != end) {\n+                addSupportedLocale(*begin++);\n+            }\n+            return *this;\n+        }\n+\n+        \/**\n+         * Copies the supported locales from the begin\/end range, preserving iteration order.\n+         * Calls the converter to convert each *begin to a Locale or const Locale &.\n+         * Clears any previously set\/added supported locales first.\n+         * Duplicates are allowed, and are not removed.\n+         *\n+         * Each of the iterator parameter values must be an\n+         * input iterator whose value is convertible to const Locale &.\n+         *\n+         * @param begin Start of range.\n+         * @param end Exclusive end of range.\n+         * @param converter Converter from *begin to const Locale & or compatible.\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        template<typename Iter, typename Conv>\n+        Builder &setSupportedLocalesViaConverter(Iter begin, Iter end, Conv converter) {\n+            if (U_FAILURE(errorCode_)) { return *this; }\n+            clearSupportedLocales();\n+            while (begin != end) {\n+                addSupportedLocale(converter(*begin++));\n+            }\n+            return *this;\n+        }\n+\n+        \/**\n+         * Adds another supported locale.\n+         * Duplicates are allowed, and are not removed.\n+         *\n+         * @param locale another locale\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder &addSupportedLocale(const Locale &locale);\n+\n+#ifndef U_HIDE_DRAFT_API\n+        \/**\n+         * Sets no default locale.\n+         * There will be no explicit or implicit default locale.\n+         * If there is no good match, then the matcher will return nullptr for the\n+         * best supported locale.\n+         *\n+         * @draft ICU 68\n+         *\/\n+        Builder &setNoDefaultLocale();\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n+        \/**\n+         * Sets the default locale; if nullptr, or if it is not set explicitly,\n+         * then the first supported locale is used as the default locale.\n+         * There is no default locale at all (nullptr will be returned instead)\n+         * if setNoDefaultLocale() is called.\n+         *\n+         * @param defaultLocale the default locale (will be copied)\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder &setDefaultLocale(const Locale *defaultLocale);\n+\n+        \/**\n+         * If ULOCMATCH_FAVOR_SCRIPT, then the language differences are smaller than script\n+         * differences.\n+         * This is used in situations (such as maps) where\n+         * it is better to fall back to the same script than a similar language.\n+         *\n+         * @param subtag the subtag to favor\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder &setFavorSubtag(ULocMatchFavorSubtag subtag);\n+\n+        \/**\n+         * Option for whether all desired locales are treated equally or\n+         * earlier ones are preferred (this is the default).\n+         *\n+         * @param demotion the demotion per desired locale to set.\n+         * @return this Builder object\n+         * @stable ICU 65\n+         *\/\n+        Builder &setDemotionPerDesiredLocale(ULocMatchDemotion demotion);\n+\n+#ifndef U_HIDE_DRAFT_API\n+        \/**\n+         * Option for whether to include or ignore one-way (fallback) match data.\n+         * By default, they are included.\n+         *\n+         * @param direction the match direction to set.\n+         * @return this Builder object\n+         * @draft ICU 67\n+         *\/\n+        Builder &setDirection(ULocMatchDirection direction) {\n+            if (U_SUCCESS(errorCode_)) {\n+                direction_ = direction;\n+            }\n+            return *this;\n+        }\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n+#ifndef U_HIDE_DRAFT_API\n+        \/**\n+         * Sets the maximum distance for an acceptable match.\n+         * The matcher will return a match for a pair of locales only if\n+         * they match at least as well as the pair given here.\n+         *\n+         * For example, setMaxDistance(en-US, en-GB) limits matches to ones where the\n+         * (desired, support) locales have a distance no greater than a region subtag difference.\n+         * This is much stricter than the CLDR default.\n+         *\n+         * The details of locale matching are subject to changes in\n+         * CLDR data and in the algorithm.\n+         * Specifying a maximum distance in relative terms via a sample pair of locales\n+         * insulates from changes that affect all distance metrics similarly,\n+         * but some changes will necessarily affect relative distances between\n+         * different pairs of locales.\n+         *\n+         * @param desired the desired locale for distance comparison.\n+         * @param supported the supported locale for distance comparison.\n+         * @return this Builder object\n+         * @draft ICU 68\n+         *\/\n+        Builder &setMaxDistance(const Locale &desired, const Locale &supported);\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n+        \/**\n+         * Sets the UErrorCode if an error occurred while setting parameters.\n+         * Preserves older error codes in the outErrorCode.\n+         *\n+         * @param outErrorCode Set to an error code if it does not contain one already\n+         *                  and an error occurred while setting parameters.\n+         *                  Otherwise unchanged.\n+         * @return true if U_FAILURE(outErrorCode)\n+         * @stable ICU 65\n+         *\/\n+        UBool copyErrorTo(UErrorCode &outErrorCode) const;\n+\n+        \/**\n+         * Builds and returns a new locale matcher.\n+         * This builder can continue to be used.\n+         *\n+         * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+         *                  or else the function returns immediately. Check for U_FAILURE()\n+         *                  on output or use with function chaining. (See User Guide for details.)\n+         * @return LocaleMatcher\n+         * @stable ICU 65\n+         *\/\n+        LocaleMatcher build(UErrorCode &errorCode) const;\n+\n+    private:\n+        friend class LocaleMatcher;\n+\n+        Builder(const Builder &other) = delete;\n+        Builder &operator=(const Builder &other) = delete;\n+\n+        void clearSupportedLocales();\n+        bool ensureSupportedLocaleVector();\n+\n+        UErrorCode errorCode_ = U_ZERO_ERROR;\n+        UVector *supportedLocales_ = nullptr;\n+        int32_t thresholdDistance_ = -1;\n+        ULocMatchDemotion demotion_ = ULOCMATCH_DEMOTION_REGION;\n+        Locale *defaultLocale_ = nullptr;\n+        bool withDefault_ = true;\n+        ULocMatchFavorSubtag favor_ = ULOCMATCH_FAVOR_LANGUAGE;\n+        ULocMatchDirection direction_ = ULOCMATCH_DIRECTION_WITH_ONE_WAY;\n+        Locale *maxDistanceDesired_ = nullptr;\n+        Locale *maxDistanceSupported_ = nullptr;\n+    };\n+\n+    \/\/ FYI No public LocaleMatcher constructors in C++; use the Builder.\n+\n+    \/**\n+     * Move copy constructor; might modify the source.\n+     * This matcher will have the same settings that the source matcher had.\n+     * @param src source matcher\n+     * @stable ICU 65\n+     *\/\n+    LocaleMatcher(LocaleMatcher &&src) U_NOEXCEPT;\n+\n+    \/**\n+     * Destructor.\n+     * @stable ICU 65\n+     *\/\n+    ~LocaleMatcher();\n+\n+    \/**\n+     * Move assignment operator; might modify the source.\n+     * This matcher will have the same settings that the source matcher had.\n+     * The behavior is undefined if *this and src are the same object.\n+     * @param src source matcher\n+     * @return *this\n+     * @stable ICU 65\n+     *\/\n+    LocaleMatcher &operator=(LocaleMatcher &&src) U_NOEXCEPT;\n+\n+    \/**\n+     * Returns the supported locale which best matches the desired locale.\n+     *\n+     * @param desiredLocale Typically a user's language.\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return the best-matching supported locale.\n+     * @stable ICU 65\n+     *\/\n+    const Locale *getBestMatch(const Locale &desiredLocale, UErrorCode &errorCode) const;\n+\n+    \/**\n+     * Returns the supported locale which best matches one of the desired locales.\n+     *\n+     * @param desiredLocales Typically a user's languages, in order of preference (descending).\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return the best-matching supported locale.\n+     * @stable ICU 65\n+     *\/\n+    const Locale *getBestMatch(Locale::Iterator &desiredLocales, UErrorCode &errorCode) const;\n+\n+    \/**\n+     * Parses an Accept-Language string\n+     * (<a href=\"https:\/\/tools.ietf.org\/html\/rfc2616#section-14.4\">RFC 2616 Section 14.4<\/a>),\n+     * such as \"af, en, fr;q=0.9\",\n+     * and returns the supported locale which best matches one of the desired locales.\n+     * Allows whitespace in more places but does not allow \"*\".\n+     *\n+     * @param desiredLocaleList Typically a user's languages, as an Accept-Language string.\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return the best-matching supported locale.\n+     * @stable ICU 65\n+     *\/\n+    const Locale *getBestMatchForListString(StringPiece desiredLocaleList, UErrorCode &errorCode) const;\n+\n+    \/**\n+     * Returns the best match between the desired locale and the supported locales.\n+     * If the result's desired locale is not nullptr, then it is the address of the input locale.\n+     * It has not been cloned.\n+     *\n+     * @param desiredLocale Typically a user's language.\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return the best-matching pair of the desired and a supported locale.\n+     * @stable ICU 65\n+     *\/\n+    Result getBestMatchResult(const Locale &desiredLocale, UErrorCode &errorCode) const;\n+\n+    \/**\n+     * Returns the best match between the desired and supported locales.\n+     * If the result's desired locale is not nullptr, then it is a clone of\n+     * the best-matching desired locale. The Result object owns the clone.\n+     *\n+     * @param desiredLocales Typically a user's languages, in order of preference (descending).\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return the best-matching pair of a desired and a supported locale.\n+     * @stable ICU 65\n+     *\/\n+    Result getBestMatchResult(Locale::Iterator &desiredLocales, UErrorCode &errorCode) const;\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns true if the pair of locales matches acceptably.\n+     * This is influenced by Builder options such as setDirection(), setFavorSubtag(),\n+     * and setMaxDistance().\n+     *\n+     * @param desired The desired locale.\n+     * @param supported The supported locale.\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return true if the pair of locales matches acceptably.\n+     * @draft ICU 68\n+     *\/\n+    UBool isMatch(const Locale &desired, const Locale &supported, UErrorCode &errorCode) const;\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n+#ifndef U_HIDE_INTERNAL_API\n+    \/**\n+     * Returns a fraction between 0 and 1, where 1 means that the languages are a\n+     * perfect match, and 0 means that they are completely different.\n+     *\n+     * <p>This is mostly an implementation detail, and the precise values may change over time.\n+     * The implementation may use either the maximized forms or the others ones, or both.\n+     * The implementation may or may not rely on the forms to be consistent with each other.\n+     *\n+     * <p>Callers should construct and use a matcher rather than match pairs of locales directly.\n+     *\n+     * @param desired Desired locale.\n+     * @param supported Supported locale.\n+     * @param errorCode ICU error code. Its input value must pass the U_SUCCESS() test,\n+     *                  or else the function returns immediately. Check for U_FAILURE()\n+     *                  on output or use with function chaining. (See User Guide for details.)\n+     * @return value between 0 and 1, inclusive.\n+     * @internal (has a known user)\n+     *\/\n+    double internalMatch(const Locale &desired, const Locale &supported, UErrorCode &errorCode) const;\n+#endif  \/\/ U_HIDE_INTERNAL_API\n+\n+private:\n+    LocaleMatcher(const Builder &builder, UErrorCode &errorCode);\n+    LocaleMatcher(const LocaleMatcher &other) = delete;\n+    LocaleMatcher &operator=(const LocaleMatcher &other) = delete;\n+\n+    int32_t putIfAbsent(const LSR &lsr, int32_t i, int32_t suppLength, UErrorCode &errorCode);\n+\n+    int32_t getBestSuppIndex(LSR desiredLSR, LocaleLsrIterator *remainingIter, UErrorCode &errorCode) const;\n+\n+    const XLikelySubtags &likelySubtags;\n+    const LocaleDistance &localeDistance;\n+    int32_t thresholdDistance;\n+    int32_t demotionPerDesiredLocale;\n+    ULocMatchFavorSubtag favorSubtag;\n+    ULocMatchDirection direction;\n+\n+    \/\/ These are in input order.\n+    const Locale ** supportedLocales;\n+    LSR *lsrs;\n+    int32_t supportedLocalesLength;\n+    \/\/ These are in preference order: 1. Default locale 2. paradigm locales 3. others.\n+    UHashtable *supportedLsrToIndex;  \/\/ Map<LSR, Integer> stores index+1 because 0 is \"not found\"\n+    \/\/ Array versions of the supportedLsrToIndex keys and values.\n+    \/\/ The distance lookup loops over the supportedLSRs and returns the index of the best match.\n+    const LSR **supportedLSRs;\n+    int32_t *supportedIndexes;\n+    int32_t supportedLSRsLength;\n+    Locale *ownedDefaultLocale;\n+    const Locale *defaultLocale;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ U_SHOW_CPLUSPLUS_API\n+#endif  \/\/ __LOCALEMATCHER_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/localematcher.h","additions":720,"deletions":0,"binary":false,"changes":720,"status":"added"},{"patch":"@@ -91,1 +91,1 @@\n-     * @return TRUE if ==NULL\n+     * @return true if ==NULL\n@@ -97,1 +97,1 @@\n-     * @return TRUE if !=NULL\n+     * @return true if !=NULL\n@@ -228,1 +228,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -237,1 +236,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -241,1 +240,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -264,1 +262,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -271,1 +268,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -277,1 +274,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -335,1 +331,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -345,1 +340,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -350,1 +345,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -409,1 +403,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -418,1 +411,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -422,1 +415,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -445,1 +437,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -452,1 +443,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -458,1 +449,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -524,1 +514,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -534,1 +523,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -539,1 +528,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/localpointer.h","additions":8,"deletions":20,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -15,0 +15,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -207,0 +209,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/locdspnm.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -38,1 +42,0 @@\n-#include \"unicode\/utypes.h\"\n@@ -253,1 +256,1 @@\n-     * (isBogus() will return TRUE).\n+     * (isBogus() will return true).\n@@ -287,1 +290,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -293,1 +295,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -296,1 +298,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -313,1 +314,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -321,1 +321,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -324,1 +324,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -392,1 +391,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -398,6 +396,9 @@\n-     * This implements the 'Language-Tag' production of BCP47, and so\n-     * supports grandfathered (regular and irregular) as well as private\n-     * use language tags.  Private use tags are represented as 'x-whatever',\n-     * and grandfathered tags are converted to their canonical replacements\n-     * where they exist.  Note that a few grandfathered tags have no modern\n-     * replacement, these will be converted using the fallback described in\n+     * This implements the 'Language-Tag' production of BCP 47, and so\n+     * supports legacy language tags (marked as “Type: grandfathered” in BCP 47)\n+     * (regular and irregular) as well as private use language tags.\n+     *\n+     * Private use tags are represented as 'x-whatever',\n+     * and legacy tags are converted to their canonical replacements where they exist.\n+     *\n+     * Note that a few legacy tags have no modern replacement;\n+     * these will be converted using the fallback described in\n@@ -405,0 +406,1 @@\n+     *\n@@ -408,1 +410,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -423,1 +425,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -435,1 +437,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -439,1 +441,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -454,1 +455,1 @@\n-     * the string by calling uloc_canonicalize().\n+     * the string according to CLDR by calling uloc_canonicalize().\n@@ -511,1 +512,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -539,1 +539,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -570,1 +570,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -573,0 +573,9 @@\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Canonicalize the locale ID of this object according to CLDR.\n+     * @param status the status code\n+     * @draft ICU 67\n+     * @see createCanonical\n+     *\/\n+    void canonicalize(UErrorCode& status);\n@@ -586,2 +595,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -595,1 +602,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -608,1 +615,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -622,1 +629,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -627,2 +634,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n-\n@@ -647,1 +652,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -659,1 +663,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -674,1 +678,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -690,1 +694,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -705,1 +709,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -709,1 +713,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -732,1 +735,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -749,1 +751,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -769,1 +771,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -772,1 +774,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -801,1 +802,1 @@\n-     * If no likely script is known, then FALSE is returned.\n+     * If no likely script is known, then false is returned.\n@@ -806,1 +807,1 @@\n-     * Returns TRUE for \"ar\" and \"en-Hebr\", FALSE for \"zh\" and \"fa-Cyrl\".\n+     * Returns true for \"ar\" and \"en-Hebr\", false for \"zh\" and \"fa-Cyrl\".\n@@ -808,1 +809,1 @@\n-     * @return TRUE if the locale's script is written right-to-left\n+     * @return true if the locale's script is written right-to-left\n@@ -962,1 +963,1 @@\n-     * @return FALSE if it is a real locale, TRUE if it is a bogus locale\n+     * @return false if it is a real locale, true if it is a bogus locale\n@@ -1011,0 +1012,96 @@\n+    \/**\n+     * A Locale iterator interface similar to a Java Iterator<Locale>.\n+     * @stable ICU 65\n+     *\/\n+    class U_COMMON_API Iterator \/* not : public UObject because this is an interface\/mixin class *\/ {\n+    public:\n+        \/** @stable ICU 65 *\/\n+        virtual ~Iterator();\n+\n+        \/**\n+         * @return true if next() can be called again.\n+         * @stable ICU 65\n+         *\/\n+        virtual UBool hasNext() const = 0;\n+\n+        \/**\n+         * @return the next locale.\n+         * @stable ICU 65\n+         *\/\n+        virtual const Locale &next() = 0;\n+    };\n+\n+    \/**\n+     * A generic Locale iterator implementation over Locale input iterators.\n+     * @stable ICU 65\n+     *\/\n+    template<typename Iter>\n+    class RangeIterator : public Iterator, public UMemory {\n+    public:\n+        \/**\n+         * Constructs an iterator from a begin\/end range.\n+         * Each of the iterator parameter values must be an\n+         * input iterator whose value is convertible to const Locale &.\n+         *\n+         * @param begin Start of range.\n+         * @param end Exclusive end of range.\n+         * @stable ICU 65\n+         *\/\n+        RangeIterator(Iter begin, Iter end) : it_(begin), end_(end) {}\n+\n+        \/**\n+         * @return true if next() can be called again.\n+         * @stable ICU 65\n+         *\/\n+        UBool hasNext() const override { return it_ != end_; }\n+\n+        \/**\n+         * @return the next locale.\n+         * @stable ICU 65\n+         *\/\n+        const Locale &next() override { return *it_++; }\n+\n+    private:\n+        Iter it_;\n+        const Iter end_;\n+    };\n+\n+    \/**\n+     * A generic Locale iterator implementation over Locale input iterators.\n+     * Calls the converter to convert each *begin to a const Locale &.\n+     * @stable ICU 65\n+     *\/\n+    template<typename Iter, typename Conv>\n+    class ConvertingIterator : public Iterator, public UMemory {\n+    public:\n+        \/**\n+         * Constructs an iterator from a begin\/end range.\n+         * Each of the iterator parameter values must be an\n+         * input iterator whose value the converter converts to const Locale &.\n+         *\n+         * @param begin Start of range.\n+         * @param end Exclusive end of range.\n+         * @param converter Converter from *begin to const Locale & or compatible.\n+         * @stable ICU 65\n+         *\/\n+        ConvertingIterator(Iter begin, Iter end, Conv converter) :\n+                it_(begin), end_(end), converter_(converter) {}\n+\n+        \/**\n+         * @return true if next() can be called again.\n+         * @stable ICU 65\n+         *\/\n+        UBool hasNext() const override { return it_ != end_; }\n+\n+        \/**\n+         * @return the next locale.\n+         * @stable ICU 65\n+         *\/\n+        const Locale &next() override { return converter_(*it_++); }\n+\n+    private:\n+        Iter it_;\n+        const Iter end_;\n+        Conv converter_;\n+    };\n+\n@@ -1077,1 +1174,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1086,1 +1182,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -1118,2 +1213,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -1124,1 +1217,1 @@\n-    if (U_FAILURE(status)) {\n+    if (U_FAILURE(status) || keys.isNull()) {\n@@ -1141,1 +1234,1 @@\n-    if (U_FAILURE(status)) {\n+    if (U_FAILURE(status) || keys.isNull()) {\n@@ -1172,2 +1265,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n-\n@@ -1181,0 +1272,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/locid.h","additions":145,"deletions":52,"binary":false,"changes":197,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -266,1 +268,1 @@\n- * Returns TRUE if the argument type has a plural style part sequence and semantics,\n+ * Returns true if the argument type has a plural style part sequence and semantics,\n@@ -524,1 +526,1 @@\n-     * @return TRUE if this object is equivalent to the other one.\n+     * @return true if this object is equivalent to the other one.\n@@ -531,1 +533,1 @@\n-     * @return FALSE if this object is equivalent to the other one.\n+     * @return false if this object is equivalent to the other one.\n@@ -565,1 +567,1 @@\n-     * @return TRUE if the parsed pattern has at least one named argument.\n+     * @return true if the parsed pattern has at least one named argument.\n@@ -574,1 +576,1 @@\n-     * @return TRUE if the parsed pattern has at least one numbered argument.\n+     * @return true if the parsed pattern has at least one numbered argument.\n@@ -665,1 +667,1 @@\n-     * @return TRUE if getSubstring(part).equals(s).\n+     * @return true if getSubstring(part).equals(s).\n@@ -786,1 +788,1 @@\n-         * @return TRUE if the Part type has a numeric value.\n+         * @return true if the Part type has a numeric value.\n@@ -795,1 +797,1 @@\n-         * @return TRUE if this object is equivalent to the other one.\n+         * @return true if this object is equivalent to the other one.\n@@ -802,1 +804,1 @@\n-         * @return FALSE if this object is equivalent to the other one.\n+         * @return false if this object is equivalent to the other one.\n@@ -870,1 +872,1 @@\n-     * @param allowInfinity TRUE if U+221E is allowed (for ChoiceFormat)\n+     * @param allowInfinity true if U+221E is allowed (for ChoiceFormat)\n@@ -901,1 +903,1 @@\n-     * @return TRUE if we are inside a MessageFormat (sub-)pattern,\n+     * @return true if we are inside a MessageFormat (sub-)pattern,\n@@ -907,1 +909,1 @@\n-     * @return TRUE if we are in a MessageFormat sub-pattern\n+     * @return true if we are in a MessageFormat sub-pattern\n@@ -945,0 +947,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/messagepattern.h","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -291,1 +293,1 @@\n-     * returns FALSE and does not write a string\n+     * returns false and does not write a string\n@@ -297,1 +299,1 @@\n-     * @return TRUE if c has a decomposition, otherwise FALSE\n+     * @return true if c has a decomposition, otherwise false\n@@ -320,1 +322,1 @@\n-     * The default implementation returns FALSE.\n+     * The default implementation returns false.\n@@ -324,1 +326,1 @@\n-     * @return TRUE if c has a decomposition, otherwise FALSE\n+     * @return true if c has a decomposition, otherwise false\n@@ -370,1 +372,1 @@\n-     * @return TRUE if s is normalized\n+     * @return true if s is normalized\n@@ -393,1 +395,1 @@\n-     * @return TRUE if s is normalized\n+     * @return true if s is normalized\n@@ -453,1 +455,1 @@\n-     * @return TRUE if c has a normalization boundary before it\n+     * @return true if c has a normalization boundary before it\n@@ -469,1 +471,1 @@\n-     * @return TRUE if c has a normalization boundary after it\n+     * @return true if c has a normalization boundary after it\n@@ -484,1 +486,1 @@\n-     * @return TRUE if c is normalization-inert\n+     * @return true if c is normalization-inert\n@@ -613,1 +615,1 @@\n-     * @return TRUE if c has a decomposition, otherwise FALSE\n+     * @return true if c has a decomposition, otherwise false\n@@ -627,1 +629,1 @@\n-     * @return TRUE if c has a decomposition, otherwise FALSE\n+     * @return true if c has a decomposition, otherwise false\n@@ -665,1 +667,1 @@\n-     * @return TRUE if s is normalized\n+     * @return true if s is normalized\n@@ -688,1 +690,1 @@\n-     * @return TRUE if s is normalized\n+     * @return true if s is normalized\n@@ -725,1 +727,1 @@\n-     * @return TRUE if c has a normalization boundary before it\n+     * @return true if c has a normalization boundary before it\n@@ -735,1 +737,1 @@\n-     * @return TRUE if c has a normalization boundary after it\n+     * @return true if c has a normalization boundary after it\n@@ -744,1 +746,1 @@\n-     * @return TRUE if c is normalization-inert\n+     * @return true if c is normalization-inert\n@@ -774,0 +776,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/normalizer2.h","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -16,0 +16,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -186,0 +188,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -198,1 +201,1 @@\n-\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -234,1 +237,1 @@\n-   *                  If this argument is <code>FALSE<\/code>, only canonical\n+   *                  If this argument is <code>false<\/code>, only canonical\n@@ -256,1 +259,1 @@\n-   *                  If this argument is <code>FALSE<\/code>, only canonical\n+   *                  If this argument is <code>false<\/code>, only canonical\n@@ -315,1 +318,1 @@\n-   * perform further tests to arrive at a TRUE\/FALSE result.\n+   * perform further tests to arrive at a true\/false result.\n@@ -577,1 +580,1 @@\n-   * Returns TRUE when both iterators refer to the same character in the same\n+   * Returns true when both iterators refer to the same character in the same\n@@ -587,1 +590,1 @@\n-   * Returns FALSE when both iterators refer to the same character in the same\n+   * Returns false when both iterators refer to the same character in the same\n@@ -602,1 +605,1 @@\n-  Normalizer*        clone(void) const;\n+  Normalizer*        clone() const;\n@@ -655,2 +658,2 @@\n-   * @param   value   the new setting for the option.  Use <code>TRUE<\/code> to\n-   *                  turn the option(s) on and <code>FALSE<\/code> to turn it\/them off.\n+   * @param   value   the new setting for the option.  Use <code>true<\/code> to\n+   *                  turn the option(s) on and <code>false<\/code> to turn it\/them off.\n@@ -666,1 +669,1 @@\n-   * If multiple options are specified, then the result is TRUE if any\n+   * If multiple options are specified, then the result is true if any\n@@ -670,1 +673,1 @@\n-   * @return TRUE if any of the option(s) are set\n+   * @return true if any of the option(s) are set\n@@ -726,0 +729,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -732,0 +736,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -810,0 +815,2 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/normlzr.h","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -22,0 +22,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -97,1 +100,1 @@\n-     * @return TRUE if the two parse positions are equal, FALSE otherwise.\n+     * @return true if the two parse positions are equal, false otherwise.\n@@ -104,1 +107,1 @@\n-     * @return TRUE if the two parse positions are not equal, FALSE otherwise.\n+     * @return true if the two parse positions are not equal, false otherwise.\n@@ -196,1 +199,1 @@\n-  return FALSE;\n+  return false;\n@@ -198,1 +201,1 @@\n-  return TRUE;\n+  return true;\n@@ -232,0 +235,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/parsepos.h","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -138,0 +138,8 @@\n+\/**\n+ * Emscripten is a C++ transpiler for the Web that can target asm.js or\n+ * WebAssembly. It provides some POSIX-compatible wrappers and stubs and\n+ * some Linux-like functionality, but is not fully compatible with\n+ * either.\n+ * @internal\n+ *\/\n+#define U_PF_EMSCRIPTEN 5010\n@@ -195,0 +203,2 @@\n+#elif defined(__EMSCRIPTEN__)\n+#   define U_PLATFORM U_PF_EMSCRIPTEN\n@@ -417,2 +427,4 @@\n-#ifndef __has_attribute\n-#    define __has_attribute(x) 0\n+#ifdef __has_attribute\n+#   define UPRV_HAS_ATTRIBUTE(x) __has_attribute(x)\n+#else\n+#   define UPRV_HAS_ATTRIBUTE(x) 0\n@@ -420,2 +432,4 @@\n-#ifndef __has_cpp_attribute\n-#    define __has_cpp_attribute(x) 0\n+#ifdef __has_cpp_attribute\n+#   define UPRV_HAS_CPP_ATTRIBUTE(x) __has_cpp_attribute(x)\n+#else\n+#   define UPRV_HAS_CPP_ATTRIBUTE(x) 0\n@@ -423,2 +437,4 @@\n-#ifndef __has_declspec_attribute\n-#    define __has_declspec_attribute(x) 0\n+#ifdef __has_declspec_attribute\n+#   define UPRV_HAS_DECLSPEC_ATTRIBUTE(x) __has_declspec_attribute(x)\n+#else\n+#   define UPRV_HAS_DECLSPEC_ATTRIBUTE(x) 0\n@@ -426,2 +442,4 @@\n-#ifndef __has_builtin\n-#    define __has_builtin(x) 0\n+#ifdef __has_builtin\n+#   define UPRV_HAS_BUILTIN(x) __has_builtin(x)\n+#else\n+#   define UPRV_HAS_BUILTIN(x) 0\n@@ -429,2 +447,4 @@\n-#ifndef __has_feature\n-#    define __has_feature(x) 0\n+#ifdef __has_feature\n+#   define UPRV_HAS_FEATURE(x) __has_feature(x)\n+#else\n+#   define UPRV_HAS_FEATURE(x) 0\n@@ -432,2 +452,4 @@\n-#ifndef __has_extension\n-#    define __has_extension(x) 0\n+#ifdef __has_extension\n+#   define UPRV_HAS_EXTENSION(x) __has_extension(x)\n+#else\n+#   define UPRV_HAS_EXTENSION(x) 0\n@@ -435,2 +457,4 @@\n-#ifndef __has_warning\n-#    define __has_warning(x) 0\n+#ifdef __has_warning\n+#   define UPRV_HAS_WARNING(x) __has_warning(x)\n+#else\n+#   define UPRV_HAS_WARNING(x) 0\n@@ -455,1 +479,3 @@\n-#if (defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))) || __has_attribute(alloc_size)\n+#if (defined(__GNUC__) &&                                            \\\n+        (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))) || \\\n+        UPRV_HAS_ATTRIBUTE(alloc_size)\n@@ -519,2 +545,3 @@\n-#   if __has_cpp_attribute(clang::fallthrough) || \\\n-            (__has_feature(cxx_attributes) && __has_warning(\"-Wimplicit-fallthrough\"))\n+#    if UPRV_HAS_CPP_ATTRIBUTE(clang::fallthrough) || \\\n+             (UPRV_HAS_FEATURE(cxx_attributes) &&     \\\n+             UPRV_HAS_WARNING(\"-Wimplicit-fallthrough\"))\n@@ -623,1 +650,2 @@\n-#elif U_PLATFORM_IS_LINUX_BASED || U_PLATFORM_IS_DARWIN_BASED\n+#elif U_PLATFORM_IS_LINUX_BASED || U_PLATFORM_IS_DARWIN_BASED || \\\n+        U_PLATFORM == U_PF_EMSCRIPTEN\n@@ -710,1 +738,1 @@\n-#else\n+#   else\n@@ -789,1 +817,2 @@\n-#elif defined(_MSC_VER) || (__has_declspec_attribute(dllexport) && __has_declspec_attribute(dllimport))\n+#elif defined(_MSC_VER) || (UPRV_HAS_DECLSPEC_ATTRIBUTE(dllexport) && \\\n+                            UPRV_HAS_DECLSPEC_ATTRIBUTE(dllimport))\n@@ -802,1 +831,1 @@\n-\/* U_CALLCONV is releated to U_EXPORT2 *\/\n+\/* U_CALLCONV is related to U_EXPORT2 *\/\n@@ -813,1 +842,2 @@\n-#elif defined(_MSC_VER) || (__has_declspec_attribute(dllexport) && __has_declspec_attribute(dllimport))\n+#elif defined(_MSC_VER) || (UPRV_HAS_DECLSPEC_ATTRIBUTE(dllexport) && \\\n+                            UPRV_HAS_DECLSPEC_ATTRIBUTE(dllimport))\n@@ -855,1 +885,1 @@\n-#endif\n+#endif  \/\/ _PLATFORM_H\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/platform.h","additions":53,"deletions":23,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-U_STABLE const char* U_EXPORT2 u_getDataDirectory(void);\n+U_CAPI const char* U_EXPORT2 u_getDataDirectory(void);\n@@ -91,1 +91,1 @@\n-U_STABLE void U_EXPORT2 u_setDataDirectory(const char *directory);\n+U_CAPI void U_EXPORT2 u_setDataDirectory(const char *directory);\n@@ -102,1 +102,1 @@\n-U_INTERNAL const char * U_EXPORT2 u_getTimeZoneFilesDirectory(UErrorCode *status);\n+U_CAPI const char * U_EXPORT2 u_getTimeZoneFilesDirectory(UErrorCode *status);\n@@ -112,1 +112,1 @@\n-U_INTERNAL void U_EXPORT2 u_setTimeZoneFilesDirectory(const char *path, UErrorCode *status);\n+U_CAPI void U_EXPORT2 u_setTimeZoneFilesDirectory(const char *path, UErrorCode *status);\n@@ -158,1 +158,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -180,1 +180,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/putil.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -21,0 +21,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -33,0 +35,2 @@\n+struct UCPTrie;\n+\n@@ -141,0 +145,5 @@\n+    \/**\n+     *  Array of look-ahead tentative results.\n+     *\/\n+    int32_t *fLookAheadMatches;\n+\n@@ -247,1 +256,1 @@\n-     * Equality operator.  Returns TRUE if both BreakIterators are of the\n+     * Equality operator.  Returns true if both BreakIterators are of the\n@@ -250,1 +259,1 @@\n-     * @return TRUE if both BreakIterators are of the\n+     * @return true if both BreakIterators are of the\n@@ -257,1 +266,1 @@\n-     * Not-equal operator.  If operator== returns TRUE, this returns FALSE,\n+     * Not-equal operator.  If operator== returns true, this returns false,\n@@ -260,1 +269,1 @@\n-     * @return TRUE if both BreakIterators are not same.\n+     * @return true if both BreakIterators are not same.\n@@ -275,1 +284,1 @@\n-    virtual BreakIterator* clone() const;\n+    virtual RuleBasedBreakIterator* clone() const;\n@@ -539,0 +548,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -565,4 +575,4 @@\n-    virtual BreakIterator *  createBufferClone(void *stackBuffer,\n-                                               int32_t &BufferSize,\n-                                               UErrorCode &status);\n-\n+    virtual RuleBasedBreakIterator *createBufferClone(void *stackBuffer,\n+                                                      int32_t &BufferSize,\n+                                                      UErrorCode &status);\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -659,0 +669,22 @@\n+    \/*\n+     * Templatized version of handleNext() and handleSafePrevious().\n+     *\n+     * There will be exactly four instantiations, two each for 8 and 16 bit tables,\n+     * two each for 8 and 16 bit trie.\n+     * Having separate instantiations for the table types keeps conditional tests of\n+     * the table type out of the inner loops, at the expense of replicated code.\n+     *\n+     * The template parameter for the Trie access function is a value, not a type.\n+     * Doing it this way, the compiler will inline the Trie function in the\n+     * expanded functions. (Both the 8 and 16 bit access functions have the same type\n+     * signature)\n+     *\/\n+\n+    typedef uint16_t (*PTrieFunc)(const UCPTrie *, UChar32);\n+\n+    template<typename RowType, PTrieFunc trieFunc>\n+    int32_t handleSafePrevious(int32_t fromPosition);\n+\n+    template<typename RowType, PTrieFunc trieFunc>\n+    int32_t handleNext();\n+\n@@ -681,1 +713,0 @@\n-\n@@ -699,0 +730,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/rbbi.h","additions":43,"deletions":10,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -19,0 +19,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -192,3 +196,0 @@\n-     * The clone functions in all subclasses return a pointer to a Replaceable\n-     * because some compilers do not support covariant (same-as-this)\n-     * return types; cast to the appropriate subclass if necessary.\n@@ -263,0 +264,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/rep.h","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -52,0 +52,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -286,1 +289,1 @@\n-     * @return TRUE if there are more elements, FALSE if there is no more elements\n+     * @return true if there are more elements, false if there is no more elements\n@@ -492,0 +495,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/resbund.h","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,0 +24,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -133,1 +136,1 @@\n-  virtual CharacterIterator* clone(void) const;\n+  virtual StringCharacterIterator* clone() const;\n@@ -189,0 +192,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/schriter.h","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -20,0 +20,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -125,1 +128,1 @@\n-     * @return TRUE if U_SUCCESS(errorCode).\n+     * @return true if U_SUCCESS(errorCode).\n@@ -144,1 +147,1 @@\n-     * @return TRUE if U_SUCCESS(errorCode).\n+     * @return true if U_SUCCESS(errorCode).\n@@ -336,0 +339,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/simpleformatter.h","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -37,0 +39,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/std_string.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -15,0 +15,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -70,3 +74,0 @@\n-     * The clone functions in all subclasses return a base class pointer\n-     * because some compilers do not support covariant (same-as-this)\n-     * return types; cast to the appropriate subclass if necessary.\n@@ -198,1 +199,1 @@\n-     * @return TRUE if the enumerations are equal. FALSE if not.\n+     * @return true if the enumerations are equal. false if not.\n@@ -206,1 +207,1 @@\n-     * @return TRUE if the enumerations are equal. FALSE if not.\n+     * @return true if the enumerations are equal. false if not.\n@@ -277,0 +278,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/strenum.h","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,0 +31,6 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n+#include <cstddef>\n+#include <type_traits>\n+\n@@ -64,1 +70,2 @@\n-  StringPiece() : ptr_(NULL), length_(0) { }\n+  StringPiece() : ptr_(nullptr), length_(0) { }\n+\n@@ -71,0 +78,18 @@\n+#ifndef U_HIDE_DRAFT_API\n+#if defined(__cpp_char8_t) || defined(U_IN_DOXYGEN)\n+  \/**\n+   * Constructs from a NUL-terminated const char8_t * pointer.\n+   * @param str a NUL-terminated const char8_t * pointer\n+   * @draft ICU 67\n+   *\/\n+  StringPiece(const char8_t* str) : StringPiece(reinterpret_cast<const char*>(str)) {}\n+#endif\n+  \/**\n+   * Constructs an empty StringPiece.\n+   * Needed for type disambiguation from multiple other overloads.\n+   * @param p nullptr\n+   * @draft ICU 67\n+   *\/\n+  StringPiece(std::nullptr_t p) : ptr_(p), length_(0) {}\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -77,0 +102,46 @@\n+#ifndef U_HIDE_DRAFT_API\n+#if defined(__cpp_lib_char8_t) || defined(U_IN_DOXYGEN)\n+  \/**\n+   * Constructs from a std::u8string.\n+   * @draft ICU 67\n+   *\/\n+  StringPiece(const std::u8string& str)\n+    : ptr_(reinterpret_cast<const char*>(str.data())),\n+      length_(static_cast<int32_t>(str.size())) { }\n+#endif\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n+  \/**\n+   * Constructs from some other implementation of a string piece class, from any\n+   * C++ record type that has these two methods:\n+   *\n+   * \\code{.cpp}\n+   *\n+   *   struct OtherStringPieceClass {\n+   *     const char* data();  \/\/ or const char8_t*\n+   *     size_t size();\n+   *   };\n+   *\n+   * \\endcode\n+   *\n+   * The other string piece class will typically be std::string_view from C++17\n+   * or absl::string_view from Abseil.\n+   *\n+   * Starting with C++20, data() may also return a const char8_t* pointer,\n+   * as from std::u8string_view.\n+   *\n+   * @param str the other string piece\n+   * @stable ICU 65\n+   *\/\n+  template <typename T,\n+            typename = typename std::enable_if<\n+                (std::is_same<decltype(T().data()), const char*>::value\n+#if defined(__cpp_char8_t)\n+                    || std::is_same<decltype(T().data()), const char8_t*>::value\n+#endif\n+                ) &&\n+                std::is_same<decltype(T().size()), size_t>::value>::type>\n+  StringPiece(T str)\n+      : ptr_(reinterpret_cast<const char*>(str.data())),\n+        length_(static_cast<int32_t>(str.size())) {}\n+\n@@ -84,0 +155,13 @@\n+#ifndef U_HIDE_DRAFT_API\n+#if defined(__cpp_char8_t) || defined(U_IN_DOXYGEN)\n+  \/**\n+   * Constructs from a const char8_t * pointer and a specified length.\n+   * @param str a const char8_t * pointer (need not be terminated)\n+   * @param len the length of the string; must be non-negative\n+   * @draft ICU 67\n+   *\/\n+  StringPiece(const char8_t* str, int32_t len) :\n+      StringPiece(reinterpret_cast<const char*>(str), len) {}\n+#endif\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -102,1 +186,1 @@\n-   * Returns the string pointer. May be NULL if it is empty.\n+   * Returns the string pointer. May be nullptr if it is empty.\n@@ -126,1 +210,1 @@\n-   * @return TRUE if the string is empty\n+   * @return true if the string is empty\n@@ -135,1 +219,1 @@\n-  void clear() { ptr_ = NULL; length_ = 0; }\n+  void clear() { ptr_ = nullptr; length_ = 0; }\n@@ -152,0 +236,23 @@\n+#ifndef U_HIDE_DRAFT_API\n+#if defined(__cpp_char8_t) || defined(U_IN_DOXYGEN)\n+  \/**\n+   * Resets the stringpiece to refer to new data.\n+   * @param xdata pointer the new string data. Need not be NUL-terminated.\n+   * @param len the length of the new data\n+   * @draft ICU 67\n+   *\/\n+  inline void set(const char8_t* xdata, int32_t len) {\n+      set(reinterpret_cast<const char*>(xdata), len);\n+  }\n+\n+  \/**\n+   * Resets the stringpiece to refer to new data.\n+   * @param str a pointer to a NUL-terminated string.\n+   * @draft ICU 67\n+   *\/\n+  inline void set(const char8_t* str) {\n+      set(reinterpret_cast<const char*>(str));\n+  }\n+#endif\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -182,0 +289,20 @@\n+#ifndef U_HIDE_DRAFT_API\n+  \/**\n+   * Searches the StringPiece for the given search string (needle);\n+   * @param needle The string for which to search.\n+   * @param offset Where to start searching within this string (haystack).\n+   * @return The offset of needle in haystack, or -1 if not found.\n+   * @draft ICU 67\n+   *\/\n+  int32_t find(StringPiece needle, int32_t offset);\n+\n+  \/**\n+   * Compares this StringPiece with the other StringPiece, with semantics\n+   * similar to std::string::compare().\n+   * @param other The string to compare to.\n+   * @return below zero if this < other; above zero if this > other; 0 if this == other.\n+   * @draft ICU 67\n+   *\/\n+  int32_t compare(StringPiece other);\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -205,1 +332,1 @@\n- * @return TRUE if the string data is equal\n+ * @return true if the string data is equal\n@@ -215,1 +342,1 @@\n- * @return TRUE if the string data is not equal\n+ * @return true if the string data is not equal\n@@ -224,0 +351,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/stringpiece.h","additions":135,"deletions":6,"binary":false,"changes":141,"status":"modified"},{"patch":"@@ -21,0 +21,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -279,1 +282,1 @@\n-        ValueNode(int32_t initialHash) : Node(initialHash), hasValue(FALSE), value(0) {}\n+        ValueNode(int32_t initialHash) : Node(initialHash), hasValue(false), value(0) {}\n@@ -282,1 +285,1 @@\n-            hasValue=TRUE;\n+            hasValue=true;\n@@ -421,0 +424,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/stringtriebuilder.h","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -16,0 +16,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -114,0 +117,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/symtable.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -25,0 +27,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -499,1 +502,1 @@\n-U_STABLE UBiDi * U_EXPORT2\n+U_CAPI UBiDi * U_EXPORT2\n@@ -536,1 +539,1 @@\n-U_STABLE UBiDi * U_EXPORT2\n+U_CAPI UBiDi * U_EXPORT2\n@@ -559,1 +562,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -597,1 +600,1 @@\n- * <p>With <code>isInverse<\/code> set to <code>TRUE<\/code>,\n+ * <p>With <code>isInverse<\/code> set to <code>true<\/code>,\n@@ -610,1 +613,1 @@\n- * <code>TRUE<\/code> is equivalent to calling\n+ * <code>true<\/code> is equivalent to calling\n@@ -615,1 +618,1 @@\n- * <code>FALSE<\/code> is equivalent to calling\n+ * <code>false<\/code> is equivalent to calling\n@@ -629,1 +632,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -635,1 +638,1 @@\n- * <code>ubidi_setReorderingMode<\/code> will return <code>TRUE<\/code> if the\n+ * <code>ubidi_setReorderingMode<\/code> will return <code>true<\/code> if the\n@@ -637,1 +640,1 @@\n- * <code>FALSE<\/code> for all other values.<\/p>\n+ * <code>false<\/code> for all other values.<\/p>\n@@ -640,1 +643,1 @@\n- * @return TRUE if the Bidi object is set to perform the inverse Bidi algorithm\n+ * @return true if the Bidi object is set to perform the inverse Bidi algorithm\n@@ -648,1 +651,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -671,1 +674,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -679,1 +682,1 @@\n- * @return TRUE if the Bidi object is set to allocate level 0 to block\n+ * @return true if the Bidi object is set to allocate level 0 to block\n@@ -685,1 +688,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -717,1 +720,1 @@\n-      * (same algorithm as selected by <code>ubidi_setInverse(TRUE)<\/code>.\n+      * (same algorithm as selected by <code>ubidi_setInverse(true)<\/code>.\n@@ -836,1 +839,1 @@\n- * argument <code>isInverse<\/code> set to <code>TRUE<\/code>.<\/li>\n+ * argument <code>isInverse<\/code> set to <code>true<\/code>.<\/li>\n@@ -889,1 +892,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -900,1 +903,1 @@\n-U_STABLE UBiDiReorderingMode U_EXPORT2\n+U_CAPI UBiDiReorderingMode U_EXPORT2\n@@ -938,1 +941,1 @@\n-     * <code>ubidi_setInverse(TRUE)<\/code>, it implies\n+     * <code>ubidi_setInverse(true)<\/code>, it implies\n@@ -1019,1 +1022,1 @@\n-     * argument <code>orderParagraphsLTR<\/code> set to <code>TRUE<\/code> before\n+     * argument <code>orderParagraphsLTR<\/code> set to <code>true<\/code> before\n@@ -1045,1 +1048,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1056,1 +1059,1 @@\n-U_STABLE uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n@@ -1143,1 +1146,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1231,1 +1234,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1282,1 +1285,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1303,1 +1306,1 @@\n-U_STABLE UBiDiDirection U_EXPORT2\n+U_CAPI UBiDiDirection U_EXPORT2\n@@ -1333,1 +1336,1 @@\n-U_STABLE UBiDiDirection U_EXPORT2\n+U_CAPI UBiDiDirection U_EXPORT2\n@@ -1347,1 +1350,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -1358,1 +1361,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1376,1 +1379,1 @@\n-U_STABLE UBiDiLevel U_EXPORT2\n+U_CAPI UBiDiLevel U_EXPORT2\n@@ -1387,1 +1390,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1424,1 +1427,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1456,1 +1459,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1476,1 +1479,1 @@\n-U_STABLE UBiDiLevel U_EXPORT2\n+U_CAPI UBiDiLevel U_EXPORT2\n@@ -1497,1 +1500,1 @@\n-U_STABLE const UBiDiLevel * U_EXPORT2\n+U_CAPI const UBiDiLevel * U_EXPORT2\n@@ -1524,1 +1527,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1543,1 +1546,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1602,1 +1605,1 @@\n-U_STABLE UBiDiDirection U_EXPORT2\n+U_CAPI UBiDiDirection U_EXPORT2\n@@ -1643,1 +1646,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1678,1 +1681,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1721,1 +1724,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1757,1 +1760,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1780,1 +1783,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1803,1 +1806,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1838,1 +1841,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1943,1 +1946,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1973,1 +1976,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2031,1 +2034,1 @@\n-U_STABLE UCharDirection U_EXPORT2\n+U_CAPI UCharDirection U_EXPORT2\n@@ -2061,1 +2064,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2078,1 +2081,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2146,1 +2149,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2198,1 +2201,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ubidi.h","additions":55,"deletions":52,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -25,0 +27,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -150,1 +153,1 @@\n- * calling <code>ubidi_setInverse(UBiDi*, TRUE)<\/code> and then\n+ * calling <code>ubidi_setInverse(UBiDi*, true)<\/code> and then\n@@ -153,1 +156,1 @@\n- * calling <code>ubidi_setInverse(UBiDi*, TRUE)<\/code> and then\n+ * calling <code>ubidi_setInverse(UBiDi*, true)<\/code> and then\n@@ -248,1 +251,1 @@\n-U_STABLE uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n@@ -294,1 +297,1 @@\n-U_STABLE UBiDiTransform* U_EXPORT2\n+U_CAPI UBiDiTransform* U_EXPORT2\n@@ -301,1 +304,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ubiditransform.h","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -16,0 +16,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -17,0 +19,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -241,1 +244,1 @@\n-U_STABLE UBreakIterator* U_EXPORT2\n+U_CAPI UBreakIterator* U_EXPORT2\n@@ -263,1 +266,1 @@\n-U_STABLE UBreakIterator* U_EXPORT2\n+U_CAPI UBreakIterator* U_EXPORT2\n@@ -291,1 +294,1 @@\n-U_STABLE UBreakIterator* U_EXPORT2\n+U_CAPI UBreakIterator* U_EXPORT2\n@@ -314,1 +317,1 @@\n-U_STABLE UBreakIterator * U_EXPORT2\n+U_CAPI UBreakIterator * U_EXPORT2\n@@ -337,1 +340,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -371,1 +374,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -395,1 +398,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -410,1 +413,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -422,1 +425,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -434,1 +437,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -444,1 +447,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -456,1 +459,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -468,1 +471,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -481,1 +484,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -494,1 +497,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -505,1 +508,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -518,1 +521,1 @@\n-U_STABLE  UBool U_EXPORT2\n+U_CAPI  UBool U_EXPORT2\n@@ -530,1 +533,1 @@\n-U_STABLE  int32_t U_EXPORT2\n+U_CAPI  int32_t U_EXPORT2\n@@ -550,1 +553,1 @@\n-U_STABLE  int32_t U_EXPORT2\n+U_CAPI  int32_t U_EXPORT2\n@@ -562,1 +565,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -590,1 +593,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -621,1 +624,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ubrk.h","additions":25,"deletions":22,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -29,0 +28,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -72,1 +75,1 @@\n-U_STABLE UCaseMap * U_EXPORT2\n+U_CAPI UCaseMap * U_EXPORT2\n@@ -80,1 +83,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -108,1 +111,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -117,1 +120,1 @@\n-U_STABLE uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n@@ -131,1 +134,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -145,1 +148,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -157,1 +160,1 @@\n-U_STABLE const UBreakIterator * U_EXPORT2\n+U_CAPI const UBreakIterator * U_EXPORT2\n@@ -180,1 +183,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -229,1 +232,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -260,1 +263,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -289,1 +292,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -341,1 +344,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -379,1 +382,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucasemap.h","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-U_STABLE u_nl_catd U_EXPORT2\n+U_CAPI u_nl_catd U_EXPORT2\n@@ -117,1 +117,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -152,1 +152,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucat.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-#define U_UNICODE_VERSION \"12.1\"\n+#define U_UNICODE_VERSION \"13.0\"\n@@ -83,1 +83,1 @@\n- * - u_hasBinaryProperty() returns a binary value (TRUE\/FALSE) per property and code point.\n+ * - u_hasBinaryProperty() returns a binary value (true\/false) per property and code point.\n@@ -1791,0 +1791,19 @@\n+    \/\/ New blocks in Unicode 13.0\n+\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_CHORASMIAN = 301, \/*[10FB0]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G = 302, \/*[30000]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_DIVES_AKURU = 303, \/*[11900]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_KHITAN_SMALL_SCRIPT = 304, \/*[18B00]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_LISU_SUPPLEMENT = 305, \/*[11FB0]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_SYMBOLS_FOR_LEGACY_COMPUTING = 306, \/*[1FB00]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_TANGUT_SUPPLEMENT = 307, \/*[18D00]*\/\n+    \/** @stable ICU 66 *\/\n+    UBLOCK_YEZIDI = 308, \/*[10E80]*\/\n+\n@@ -1798,1 +1817,1 @@\n-    UBLOCK_COUNT = 301,\n+    UBLOCK_COUNT = 309,\n@@ -2439,0 +2458,2 @@\n+    \/** @stable ICU 66 *\/\n+    U_INPC_TOP_AND_BOTTOM_AND_LEFT,\n@@ -2568,2 +2589,2 @@\n- * @return TRUE or FALSE according to the binary Unicode property value for c.\n- *         Also FALSE if 'which' is out of bounds or if the Unicode version\n+ * @return true or false according to the binary Unicode property value for c.\n+ *         Also false if 'which' is out of bounds or if the Unicode version\n@@ -2578,1 +2599,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2581,2 +2602,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -2596,1 +2615,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -2601,2 +2620,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n-\n@@ -2615,1 +2632,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2630,1 +2647,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2645,1 +2662,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2666,1 +2683,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2694,1 +2711,1 @@\n- *         Returns 0 or 1 (for FALSE\/TRUE) for binary Unicode properties.\n+ *         Returns 0 or 1 (for false\/true) for binary Unicode properties.\n@@ -2707,1 +2724,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2728,1 +2745,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2740,1 +2757,1 @@\n- * - UCHAR_IDEOGRAPHIC:   0\/1  (FALSE\/TRUE)\n+ * - UCHAR_IDEOGRAPHIC:   0\/1  (false\/true)\n@@ -2757,1 +2774,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2760,2 +2777,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -2775,1 +2790,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -2780,2 +2795,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n-\n@@ -2804,1 +2817,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -2832,1 +2845,1 @@\n- * @return TRUE if the code point is an Ll lowercase letter\n+ * @return true if the code point is an Ll lowercase letter\n@@ -2839,1 +2852,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2858,1 +2871,1 @@\n- * @return TRUE if the code point is an Lu uppercase letter\n+ * @return true if the code point is an Lu uppercase letter\n@@ -2866,1 +2879,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2876,1 +2889,1 @@\n- * @return TRUE if the code point is an Lt titlecase letter\n+ * @return true if the code point is an Lt titlecase letter\n@@ -2883,1 +2896,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2900,1 +2913,1 @@\n- * @return TRUE if the code point is a digit character according to Character.isDigit()\n+ * @return true if the code point is a digit character according to Character.isDigit()\n@@ -2904,1 +2917,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2919,1 +2932,1 @@\n- * @return TRUE if the code point is a letter character\n+ * @return true if the code point is a letter character\n@@ -2925,1 +2938,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2942,1 +2955,1 @@\n- * @return TRUE if the code point is an alphanumeric character according to Character.isLetterOrDigit()\n+ * @return true if the code point is an alphanumeric character according to Character.isLetterOrDigit()\n@@ -2946,1 +2959,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2965,1 +2978,1 @@\n- * @return TRUE if the code point is a hexadecimal digit\n+ * @return true if the code point is a hexadecimal digit\n@@ -2969,1 +2982,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2981,1 +2994,1 @@\n- * @return TRUE if the code point is a punctuation character\n+ * @return true if the code point is a punctuation character\n@@ -2985,1 +2998,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -2991,1 +3004,1 @@\n- * TRUE for all characters except those with general categories\n+ * true for all characters except those with general categories\n@@ -3000,1 +3013,1 @@\n- * @return TRUE if the code point is a \"graphic\" character\n+ * @return true if the code point is a \"graphic\" character\n@@ -3004,1 +3017,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3012,1 +3025,1 @@\n- * TRUE for Unicode White_Space characters except for \"vertical space controls\"\n+ * true for Unicode White_Space characters except for \"vertical space controls\"\n@@ -3018,1 +3031,1 @@\n- * TRUE for U+0009 (TAB) and characters with general category \"Zs\" (space separators).\n+ * true for U+0009 (TAB) and characters with general category \"Zs\" (space separators).\n@@ -3028,1 +3041,1 @@\n- * @return TRUE if the code point is a \"blank\"\n+ * @return true if the code point is a \"blank\"\n@@ -3032,1 +3045,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3047,1 +3060,1 @@\n- * @return TRUE if the code point is assigned a character\n+ * @return true if the code point is assigned a character\n@@ -3057,1 +3070,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3078,1 +3091,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3092,1 +3105,1 @@\n- * @return TRUE if the code point is a space character according to Character.isSpaceChar()\n+ * @return true if the code point is a space character according to Character.isSpaceChar()\n@@ -3099,1 +3112,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3132,1 +3145,1 @@\n- * @return TRUE if the code point is a whitespace character according to Java\/ICU\n+ * @return true if the code point is a whitespace character according to Java\/ICU\n@@ -3139,1 +3152,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3157,1 +3170,1 @@\n- * @return TRUE if the code point is a control character\n+ * @return true if the code point is a control character\n@@ -3163,1 +3176,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3173,1 +3186,1 @@\n- * @return TRUE if the code point is an ISO control code\n+ * @return true if the code point is an ISO control code\n@@ -3178,1 +3191,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3190,1 +3203,1 @@\n- * @return TRUE if the code point is a printable character\n+ * @return true if the code point is a printable character\n@@ -3196,1 +3209,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3200,1 +3213,1 @@\n- * Determines whether the specified code point is a base character.\n+ * Non-standard: Determines whether the specified code point is a base character.\n@@ -3204,5 +3217,4 @@\n- * Note that this is different from the Unicode definition in\n- * chapter 3.5, conformance clause D13,\n- * which defines base characters to be all characters (not Cn)\n- * that do not graphically combine with preceding characters (M)\n- * and that are neither control (Cc) or format (Cf) characters.\n+ * Note that this is different from the Unicode Standard definition in\n+ * chapter 3.6, conformance clause D51 “Base character”,\n+ * which defines base characters as the code points with general categories\n+ * Letter (L), Number (N), Punctuation (P), Symbol (S), or Space Separator (Zs).\n@@ -3211,1 +3223,1 @@\n- * @return TRUE if the code point is a base character according to this function\n+ * @return true if the code point is a base character according to this function\n@@ -3217,1 +3229,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3236,1 +3248,1 @@\n-U_STABLE UCharDirection U_EXPORT2\n+U_CAPI UCharDirection U_EXPORT2\n@@ -3249,1 +3261,1 @@\n- * @return TRUE if the character has the Bidi_Mirrored property\n+ * @return true if the character has the Bidi_Mirrored property\n@@ -3254,1 +3266,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3276,1 +3288,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3295,1 +3307,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3309,1 +3321,1 @@\n-U_STABLE int8_t U_EXPORT2\n+U_CAPI int8_t U_EXPORT2\n@@ -3332,1 +3344,1 @@\n- * The callback function can stop the enumeration by returning FALSE.\n+ * The callback function can stop the enumeration by returning false.\n@@ -3338,1 +3350,1 @@\n- * @return FALSE to stop the enumeration\n+ * @return false to stop the enumeration\n@@ -3366,1 +3378,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -3378,1 +3390,1 @@\n-U_STABLE uint8_t U_EXPORT2\n+U_CAPI uint8_t U_EXPORT2\n@@ -3406,1 +3418,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -3418,1 +3430,1 @@\n-U_STABLE UBlockCode U_EXPORT2\n+U_CAPI UBlockCode U_EXPORT2\n@@ -3453,1 +3465,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -3503,1 +3515,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3512,1 +3524,1 @@\n- * If such a function returns FALSE, then the enumeration is stopped.\n+ * If such a function returns false, then the enumeration is stopped.\n@@ -3519,1 +3531,1 @@\n- * @return TRUE if the enumeration should continue, FALSE to stop it.\n+ * @return true if the enumeration should continue, false to stop it.\n@@ -3552,1 +3564,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -3590,1 +3602,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -3613,1 +3625,1 @@\n-U_STABLE UProperty U_EXPORT2\n+U_CAPI UProperty U_EXPORT2\n@@ -3663,1 +3675,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -3699,1 +3711,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -3713,1 +3725,1 @@\n- * @return TRUE if the code point may start an identifier\n+ * @return true if the code point may start an identifier\n@@ -3720,1 +3732,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3737,1 +3749,1 @@\n- * @return TRUE if the code point may occur in an identifier according to Java\n+ * @return true if the code point may occur in an identifier according to Java\n@@ -3744,1 +3756,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3760,1 +3772,1 @@\n- * @return TRUE if the code point is ignorable in identifiers according to Java\n+ * @return true if the code point is ignorable in identifiers according to Java\n@@ -3767,1 +3779,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3779,1 +3791,1 @@\n- * @return TRUE if the code point may start a Java identifier\n+ * @return true if the code point may start a Java identifier\n@@ -3786,1 +3798,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3798,1 +3810,1 @@\n- * @return TRUE if the code point may occur in a Java identifier\n+ * @return true if the code point may occur in a Java identifier\n@@ -3807,1 +3819,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3832,1 +3844,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3857,1 +3869,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3882,1 +3894,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3907,1 +3919,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3948,1 +3960,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -3979,1 +3991,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -3996,1 +4008,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -4010,1 +4022,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -4035,1 +4047,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uchar.h","additions":122,"deletions":110,"binary":false,"changes":232,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -97,0 +100,33 @@\n+    \/**\n+     * Returns the state of this trie as a 64-bit integer.\n+     * The state value is never 0.\n+     *\n+     * @return opaque state value\n+     * @see resetToState64\n+     * @stable ICU 65\n+     *\/\n+    uint64_t getState64() const {\n+        return (static_cast<uint64_t>(remainingMatchLength_ + 2) << kState64RemainingShift) |\n+            (uint64_t)(pos_ - uchars_);\n+    }\n+\n+    \/**\n+     * Resets this trie to the saved state.\n+     * Unlike resetToState(State), the 64-bit state value\n+     * must be from getState64() from the same trie object or\n+     * from one initialized the exact same way.\n+     * Because of no validation, this method is faster.\n+     *\n+     * @param state The opaque trie state value from getState64().\n+     * @return *this\n+     * @see getState64\n+     * @see resetToState\n+     * @see reset\n+     * @stable ICU 65\n+     *\/\n+    UCharsTrie &resetToState64(uint64_t state) {\n+        remainingMatchLength_ = static_cast<int32_t>(state >> kState64RemainingShift) - 2;\n+        pos_ = uchars_ + (state & kState64PosMask);\n+        return *this;\n+    }\n+\n@@ -233,1 +269,1 @@\n-     * @param uniqueValue Receives the unique value, if this function returns TRUE.\n+     * @param uniqueValue Receives the unique value, if this function returns true.\n@@ -235,1 +271,1 @@\n-     * @return TRUE if all strings reachable from the current state\n+     * @return true if all strings reachable from the current state\n@@ -242,1 +278,1 @@\n-        return pos!=NULL && findUniqueValue(pos+remainingMatchLength_+1, FALSE, uniqueValue);\n+        return pos!=NULL && findUniqueValue(pos+remainingMatchLength_+1, false, uniqueValue);\n@@ -300,1 +336,1 @@\n-         * @return TRUE if there are more elements.\n+         * @return true if there are more elements.\n@@ -316,1 +352,1 @@\n-         * @return TRUE if there is another element.\n+         * @return true if there is another element.\n@@ -336,1 +372,1 @@\n-            return TRUE;\n+            return true;\n@@ -563,0 +599,7 @@\n+    \/\/ For getState64():\n+    \/\/ The remainingMatchLength_ is -1..14=(kMaxLinearMatchLength=0x10)-2\n+    \/\/ so we need at least 5 bits for that.\n+    \/\/ We add 2 to store it as a positive value 1..16=kMaxLinearMatchLength.\n+    static constexpr int32_t kState64RemainingShift = 59;\n+    static constexpr uint64_t kState64PosMask = (UINT64_C(1) << kState64RemainingShift) - 1;\n+\n@@ -578,0 +621,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucharstrie.h","additions":51,"deletions":6,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -21,0 +21,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -101,3 +104,4 @@\n-     * re-serialized into a new array.\n-     * If build() is called after buildUnicodeString(), the trie object will become\n-     * the owner of the previously returned array.\n+     * re-serialized into a new array (because build() passes on ownership).\n+     * If build() is called after buildUnicodeString(), the trie object returned\n+     * by build() will become the owner of the underlying data for the\n+     * previously returned UnicodeString.\n@@ -147,1 +151,1 @@\n-    virtual UBool matchNodesCanHaveValues() const { return TRUE; }\n+    virtual UBool matchNodesCanHaveValues() const { return true; }\n@@ -187,0 +191,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucharstriebuilder.h","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -14,0 +14,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -135,1 +138,1 @@\n-  virtual CharacterIterator* clone(void) const;\n+  virtual UCharCharacterIterator* clone() const;\n@@ -274,1 +277,1 @@\n-   * Returns FALSE if there are no more code units or code points\n+   * Returns false if there are no more code units or code points\n@@ -278,1 +281,1 @@\n-   * @return FALSE if there are no more code units or code points\n+   * @return false if there are no more code units or code points\n@@ -303,1 +306,1 @@\n-   * Returns FALSE if there are no more code units or code points\n+   * Returns false if there are no more code units or code points\n@@ -307,1 +310,1 @@\n-   * @return FALSE if there are no more code units or code points\n+   * @return false if there are no more code units or code points\n@@ -387,0 +390,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uchriter.h","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -101,1 +101,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -151,1 +151,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uclean.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,0 +54,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -55,0 +57,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -311,1 +314,1 @@\n-U_STABLE int U_EXPORT2\n+U_CAPI int U_EXPORT2\n@@ -365,1 +368,1 @@\n-U_STABLE UConverter* U_EXPORT2\n+U_CAPI UConverter* U_EXPORT2\n@@ -395,1 +398,1 @@\n-U_STABLE UConverter* U_EXPORT2\n+U_CAPI UConverter* U_EXPORT2\n@@ -463,1 +466,1 @@\n-U_STABLE UConverter* U_EXPORT2\n+U_CAPI UConverter* U_EXPORT2\n@@ -479,1 +482,1 @@\n- * 'master' converter.<\/p>\n+ * 'primary' converter.<\/p>\n@@ -498,1 +501,1 @@\n-U_STABLE UConverter* U_EXPORT2\n+U_CAPI UConverter* U_EXPORT2\n@@ -540,1 +543,1 @@\n-U_STABLE UConverter * U_EXPORT2\n+U_CAPI UConverter * U_EXPORT2\n@@ -569,1 +572,1 @@\n-U_STABLE void  U_EXPORT2\n+U_CAPI void  U_EXPORT2\n@@ -608,1 +611,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -633,1 +636,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -666,1 +669,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -685,1 +688,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -704,1 +707,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -717,1 +720,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -728,1 +731,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -739,1 +742,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -792,1 +795,1 @@\n-U_STABLE int8_t U_EXPORT2\n+U_CAPI int8_t U_EXPORT2\n@@ -825,1 +828,1 @@\n-U_STABLE int8_t U_EXPORT2\n+U_CAPI int8_t U_EXPORT2\n@@ -842,1 +845,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -859,1 +862,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -885,1 +888,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -899,1 +902,1 @@\n-U_STABLE UConverterPlatform U_EXPORT2\n+U_CAPI UConverterPlatform U_EXPORT2\n@@ -911,1 +914,1 @@\n-U_STABLE UConverterType U_EXPORT2\n+U_CAPI UConverterType U_EXPORT2\n@@ -918,1 +921,1 @@\n- * as offset to the array. For example, if (starters[0x20] == TRUE) at return,\n+ * as offset to the array. For example, if (starters[0x20] == true) at return,\n@@ -929,1 +932,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1000,1 +1003,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1017,1 +1020,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1033,1 +1036,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1053,1 +1056,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1076,1 +1079,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1103,1 +1106,1 @@\n- * At the end of the stream (flush==TRUE), the input is completely consumed\n+ * At the end of the stream (flush==true), the input is completely consumed\n@@ -1128,3 +1131,3 @@\n- * @param flush set to <TT>TRUE<\/TT> if the current source buffer is the last available\n- * chunk of the source, <TT>FALSE<\/TT> otherwise. Note that if a failing status is returned,\n- * this function may have to be called multiple times with flush set to <TT>TRUE<\/TT> until\n+ * @param flush set to <TT>true<\/TT> if the current source buffer is the last available\n+ * chunk of the source, <TT>false<\/TT> otherwise. Note that if a failing status is returned,\n+ * this function may have to be called multiple times with flush set to <TT>true<\/TT> until\n@@ -1142,1 +1145,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1172,1 +1175,1 @@\n- * At the end of the stream (flush==TRUE), the input is completely consumed\n+ * At the end of the stream (flush==true), the input is completely consumed\n@@ -1196,3 +1199,3 @@\n- * @param flush set to <TT>TRUE<\/TT> if the current source buffer is the last available\n- * chunk of the source, <TT>FALSE<\/TT> otherwise. Note that if a failing status is returned,\n- * this function may have to be called multiple times with flush set to <TT>TRUE<\/TT> until\n+ * @param flush set to <TT>true<\/TT> if the current source buffer is the last available\n+ * chunk of the source, <TT>false<\/TT> otherwise. Note that if a failing status is returned,\n+ * this function may have to be called multiple times with flush set to <TT>true<\/TT> until\n@@ -1211,1 +1214,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1248,1 +1251,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1280,1 +1283,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1298,1 +1301,1 @@\n- * - Always assumes flush=TRUE.\n+ * - Always assumes flush=true.\n@@ -1309,1 +1312,1 @@\n- * stopped in the middle of a character sequence (with flush=FALSE),\n+ * stopped in the middle of a character sequence (with flush=false),\n@@ -1356,1 +1359,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -1388,1 +1391,1 @@\n- *   (if reset==TRUE, see parameters;\n+ *   (if reset==true, see parameters;\n@@ -1445,1 +1448,1 @@\n- *                    TRUE, TRUE,\n+ *                    true, true,\n@@ -1477,1 +1480,1 @@\n- * @param reset         If TRUE, then ucnv_resetToUnicode(sourceCnv) and\n+ * @param reset         If true, then ucnv_resetToUnicode(sourceCnv) and\n@@ -1500,1 +1503,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1564,1 +1567,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1618,1 +1621,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1670,1 +1673,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1684,1 +1687,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1694,1 +1697,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1707,1 +1710,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -1722,1 +1725,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -1735,1 +1738,1 @@\n-U_STABLE uint16_t U_EXPORT2\n+U_CAPI uint16_t U_EXPORT2\n@@ -1750,1 +1753,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1766,1 +1769,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1792,1 +1795,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -1802,1 +1805,1 @@\n-U_STABLE uint16_t U_EXPORT2\n+U_CAPI uint16_t U_EXPORT2\n@@ -1812,1 +1815,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1834,1 +1837,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1856,1 +1859,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1873,1 +1876,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1893,1 +1896,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1914,1 +1917,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1921,2 +1924,2 @@\n- * @return TRUE if the converter contains ambiguous mapping of the same\n- * character, FALSE otherwise.\n+ * @return true if the converter contains ambiguous mapping of the same\n+ * character, false otherwise.\n@@ -1925,1 +1928,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1938,2 +1941,2 @@\n- * @param usesFallback TRUE if the user wants the converter to take advantage of the fallback\n- * mapping, FALSE otherwise.\n+ * @param usesFallback true if the user wants the converter to take advantage of the fallback\n+ * mapping, false otherwise.\n@@ -1943,1 +1946,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1951,1 +1954,1 @@\n- * @return TRUE if the converter uses fallback, FALSE otherwise.\n+ * @return true if the converter uses fallback, false otherwise.\n@@ -1955,1 +1958,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1987,1 +1990,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -2004,1 +2007,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2018,1 +2021,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -2030,1 +2033,1 @@\n- * FALSE is returned with the UErrorCode if error occurs or cnv is NULL.\n+ * false is returned with the UErrorCode if error occurs or cnv is NULL.\n@@ -2033,1 +2036,1 @@\n- * @return TRUE if the converter is fixed-width\n+ * @return true if the converter is fixed-width\n@@ -2036,1 +2039,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucnv.h","additions":84,"deletions":81,"binary":false,"changes":165,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -107,1 +107,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -124,1 +124,1 @@\n-U_STABLE void U_EXPORT2 ucnv_cbFromUWriteUChars(UConverterFromUnicodeArgs *args,\n+U_CAPI void U_EXPORT2 ucnv_cbFromUWriteUChars(UConverterFromUnicodeArgs *args,\n@@ -143,1 +143,1 @@\n-U_STABLE void U_EXPORT2 ucnv_cbToUWriteUChars (UConverterToUnicodeArgs *args,\n+U_CAPI void U_EXPORT2 ucnv_cbToUWriteUChars (UConverterToUnicodeArgs *args,\n@@ -159,1 +159,1 @@\n-U_STABLE void U_EXPORT2 ucnv_cbToUWriteSub (UConverterToUnicodeArgs *args,\n+U_CAPI void U_EXPORT2 ucnv_cbToUWriteSub (UConverterToUnicodeArgs *args,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucnv_cb.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-    UBool flush;                \/**< The internal state of converter will be reset and data flushed if set to TRUE. @stable ICU 2.0    *\/\n+    UBool flush;                \/**< The internal state of converter will be reset and data flushed if set to true. @stable ICU 2.0    *\/\n@@ -212,1 +212,1 @@\n-    UBool flush;                \/**< The internal state of converter will be reset and data flushed if set to TRUE. @stable ICU 2.0   *\/\n+    UBool flush;                \/**< The internal state of converter will be reset and data flushed if set to true. @stable ICU 2.0   *\/\n@@ -236,1 +236,1 @@\n-U_STABLE void U_EXPORT2 UCNV_FROM_U_CALLBACK_STOP (\n+U_CAPI void U_EXPORT2 UCNV_FROM_U_CALLBACK_STOP (\n@@ -260,1 +260,1 @@\n-U_STABLE void U_EXPORT2 UCNV_TO_U_CALLBACK_STOP (\n+U_CAPI void U_EXPORT2 UCNV_TO_U_CALLBACK_STOP (\n@@ -287,1 +287,1 @@\n-U_STABLE void U_EXPORT2 UCNV_FROM_U_CALLBACK_SKIP (\n+U_CAPI void U_EXPORT2 UCNV_FROM_U_CALLBACK_SKIP (\n@@ -317,1 +317,1 @@\n-U_STABLE void U_EXPORT2 UCNV_FROM_U_CALLBACK_SUBSTITUTE (\n+U_CAPI void U_EXPORT2 UCNV_FROM_U_CALLBACK_SUBSTITUTE (\n@@ -373,1 +373,1 @@\n-U_STABLE void U_EXPORT2 UCNV_FROM_U_CALLBACK_ESCAPE (\n+U_CAPI void U_EXPORT2 UCNV_FROM_U_CALLBACK_ESCAPE (\n@@ -401,1 +401,1 @@\n-U_STABLE void U_EXPORT2 UCNV_TO_U_CALLBACK_SKIP (\n+U_CAPI void U_EXPORT2 UCNV_TO_U_CALLBACK_SKIP (\n@@ -427,1 +427,1 @@\n-U_STABLE void U_EXPORT2 UCNV_TO_U_CALLBACK_SUBSTITUTE (\n+U_CAPI void U_EXPORT2 UCNV_TO_U_CALLBACK_SUBSTITUTE (\n@@ -453,1 +453,1 @@\n-U_STABLE void U_EXPORT2 UCNV_TO_U_CALLBACK_ESCAPE (\n+U_CAPI void U_EXPORT2 UCNV_TO_U_CALLBACK_ESCAPE (\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucnv_err.h","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -33,0 +35,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -75,1 +78,1 @@\n-U_STABLE UConverterSelector* U_EXPORT2\n+U_CAPI UConverterSelector* U_EXPORT2\n@@ -93,1 +96,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -130,1 +133,1 @@\n-U_STABLE UConverterSelector* U_EXPORT2\n+U_CAPI UConverterSelector* U_EXPORT2\n@@ -147,1 +150,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -165,1 +168,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -183,1 +186,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucnvsel.h","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-#endif\n+#endif  \/\/ __UCONFIG_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uconfig.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,2 +12,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -31,1 +29,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -42,1 +40,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -48,1 +46,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -64,1 +62,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -80,1 +78,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -96,1 +94,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -113,1 +111,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -152,1 +150,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -161,1 +159,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucpmap.h","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -11,4 +11,0 @@\n-\n-#ifndef U_HIDE_DRAFT_API\n-\n-#include \"unicode\/localpointer.h\"\n@@ -18,0 +14,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -58,1 +58,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -118,1 +118,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -124,1 +124,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -129,1 +129,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -134,1 +134,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -148,1 +148,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -154,1 +154,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -160,1 +160,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -165,1 +165,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -171,1 +171,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -203,1 +203,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -214,1 +214,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -219,19 +219,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\n-U_NAMESPACE_BEGIN\n-\n-\/**\n- * \\class LocalUCPTriePointer\n- * \"Smart pointer\" class, closes a UCPTrie via ucptrie_close().\n- * For most methods see the LocalPointerBase base class.\n- *\n- * @see LocalPointerBase\n- * @see LocalPointer\n- * @draft ICU 63\n- *\/\n-U_DEFINE_LOCAL_OPEN_POINTER(LocalUCPTriePointer, UCPTrie, ucptrie_close);\n-\n-U_NAMESPACE_END\n-\n-#endif\n-\n@@ -245,1 +226,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -257,1 +238,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -274,1 +255,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -313,1 +294,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -333,1 +314,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -344,1 +325,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -354,1 +335,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -364,1 +345,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -376,1 +357,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -388,1 +369,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -404,1 +385,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -406,1 +387,1 @@\n-#define UCPTRIE_FAST_U16_NEXT(trie, dataAccess, src, limit, c, result) { \\\n+#define UCPTRIE_FAST_U16_NEXT(trie, dataAccess, src, limit, c, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -422,1 +403,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -435,1 +416,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -437,1 +418,1 @@\n-#define UCPTRIE_FAST_U16_PREV(trie, dataAccess, start, src, c, result) { \\\n+#define UCPTRIE_FAST_U16_PREV(trie, dataAccess, start, src, c, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -453,1 +434,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -469,1 +450,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -471,1 +452,1 @@\n-#define UCPTRIE_FAST_U8_NEXT(trie, dataAccess, src, limit, result) { \\\n+#define UCPTRIE_FAST_U8_NEXT(trie, dataAccess, src, limit, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -499,1 +480,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -515,1 +496,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -517,1 +498,1 @@\n-#define UCPTRIE_FAST_U8_PREV(trie, dataAccess, start, src, result) { \\\n+#define UCPTRIE_FAST_U8_PREV(trie, dataAccess, start, src, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -526,1 +507,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -535,1 +516,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -548,1 +529,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -560,1 +541,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -604,1 +585,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -608,1 +589,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -616,1 +597,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -645,1 +626,20 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * \\class LocalUCPTriePointer\n+ * \"Smart pointer\" class, closes a UCPTrie via ucptrie_close().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @stable ICU 63\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUCPTriePointer, UCPTrie, ucptrie_close);\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ U_SHOW_CPLUSPLUS_API\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucptrie.h","additions":64,"deletions":64,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -116,1 +116,23 @@\n-    UCURR_NARROW_SYMBOL_NAME\n+    UCURR_NARROW_SYMBOL_NAME,\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Selector for getName() indicating the formal currency symbol.\n+     * The formal currency symbol is similar to the regular currency\n+     * symbol, but it always takes the form used in formal settings\n+     * such as banking; for example, \"NT$\" instead of \"$\" for TWD in zh-TW.\n+     *\n+     * @draft ICU 68\n+     *\/\n+    UCURR_FORMAL_SYMBOL_NAME,\n+\n+    \/**\n+     * Selector for getName() indicating the variant currency symbol.\n+     * The variant symbol for a currency is an alternative symbol\n+     * that is not necessarily as widely used as the regular symbol.\n+     *\n+     * @draft ICU 68\n+     *\/\n+    UCURR_VARIANT_SYMBOL_NAME\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -136,1 +158,1 @@\n-U_STABLE UCurrRegistryKey U_EXPORT2\n+U_CAPI UCurrRegistryKey U_EXPORT2\n@@ -148,1 +170,1 @@\n- * @return TRUE if the currency for this key was successfully unregistered\n+ * @return true if the currency for this key was successfully unregistered\n@@ -151,1 +173,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -162,2 +184,3 @@\n- * @param isChoiceFormat fill-in set to TRUE if the returned value\n- * is a ChoiceFormat pattern; otherwise it is a static string\n+ * @param isChoiceFormat always set to false, or can be NULL;\n+ *     display names are static strings;\n+ *     since ICU 4.4, ChoiceFormat patterns are no longer supported\n@@ -168,2 +191,1 @@\n- * returned.  If *isChoiceFormat is TRUE, then the result is a\n- * ChoiceFormat pattern.  Otherwise it is a static string.\n+ * returned.\n@@ -172,1 +194,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -186,2 +208,3 @@\n- * @param isChoiceFormat fill-in set to TRUE if the returned value\n- * is a ChoiceFormat pattern; otherwise it is a static string\n+ * @param isChoiceFormat always set to false, or can be NULL;\n+ *     display names are static strings;\n+ *     since ICU 4.4, ChoiceFormat patterns are no longer supported\n@@ -196,1 +219,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -221,1 +244,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -242,1 +265,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -257,1 +280,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -271,1 +294,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -323,1 +346,1 @@\n- *      currencies. Most people will want to use the (UCURR_CURRENCY|UCURR_NON_DEPRECATED) value to\n+ *      currencies. Most people will want to use the (UCURR_COMMON|UCURR_NON_DEPRECATED) value to\n@@ -328,1 +351,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -353,1 +376,1 @@\n-  * @return TRUE if the given ISO 4217 3-letter code is supported on the specified date range.\n+  * @return true if the given ISO 4217 3-letter code is supported on the specified date range.\n@@ -357,1 +380,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -377,1 +400,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -401,1 +424,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -425,1 +448,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -440,1 +463,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ucurr.h","additions":48,"deletions":25,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -23,0 +23,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -24,0 +26,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -169,2 +172,2 @@\n- *              returns <code>TRUE<\/code>.\n- * @return TRUE if the current data memory is acceptable\n+ *              returns <code>true<\/code>.\n+ * @return true if the current data memory is acceptable\n@@ -200,1 +203,1 @@\n-U_STABLE UDataMemory * U_EXPORT2\n+U_CAPI UDataMemory * U_EXPORT2\n@@ -242,1 +245,1 @@\n- *                     is useful for the client code. If it returns FALSE\n+ *                     is useful for the client code. If it returns false\n@@ -252,1 +255,1 @@\n-U_STABLE UDataMemory * U_EXPORT2\n+U_CAPI UDataMemory * U_EXPORT2\n@@ -264,1 +267,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -267,19 +270,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\n-U_NAMESPACE_BEGIN\n-\n-\/**\n- * \\class LocalUDataMemoryPointer\n- * \"Smart pointer\" class, closes a UDataMemory via udata_close().\n- * For most methods see the LocalPointerBase base class.\n- *\n- * @see LocalPointerBase\n- * @see LocalPointer\n- * @stable ICU 4.4\n- *\/\n-U_DEFINE_LOCAL_OPEN_POINTER(LocalUDataMemoryPointer, UDataMemory, udata_close);\n-\n-U_NAMESPACE_END\n-\n-#endif\n-\n@@ -295,1 +279,1 @@\n-U_STABLE const void * U_EXPORT2\n+U_CAPI const void * U_EXPORT2\n@@ -316,1 +300,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -325,1 +309,1 @@\n- * See http:\/\/userguide.icu-project.org\/icudata\n+ * See https:\/\/unicode-org.github.io\/icu\/userguide\/icudata\n@@ -362,1 +346,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -372,1 +356,1 @@\n- * See http:\/\/userguide.icu-project.org\/icudata\n+ * See https:\/\/unicode-org.github.io\/icu\/userguide\/icudata\n@@ -393,1 +377,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -432,1 +416,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -437,0 +421,19 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * \\class LocalUDataMemoryPointer\n+ * \"Smart pointer\" class, closes a UDataMemory via udata_close().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @stable ICU 4.4\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUDataMemoryPointer, UDataMemory, udata_close);\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ U_SHOW_CPLUSPLUS_API\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/udata.h","additions":35,"deletions":32,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -159,1 +159,2 @@\n-     * Returns a null value when no data is available.\n+     * Returns a null value with error code set to U_ILLEGAL_ARGUMENT_ERROR when no\n+     * data is available.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/udisplaycontext.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -26,0 +25,2 @@\n+#include \"unicode\/localpointer.h\"\n+\n@@ -29,1 +30,1 @@\n-#endif\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -52,1 +53,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -88,1 +89,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -112,1 +113,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -145,1 +146,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -159,1 +160,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -173,1 +174,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -189,1 +190,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -204,1 +205,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uenum.h","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"unicode\/localpointer.h\"\n+#include <stdbool.h>\n@@ -29,0 +29,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -141,1 +145,1 @@\n-U_STABLE UIDNA * U_EXPORT2\n+U_CAPI UIDNA * U_EXPORT2\n@@ -149,1 +153,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -185,1 +189,1 @@\n-     * Set to TRUE if transitional and nontransitional processing produce different results.\n+     * Set to true if transitional and nontransitional processing produce different results.\n@@ -207,1 +211,1 @@\n-    FALSE, FALSE, \\\n+    false, false, \\\n@@ -233,1 +237,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -260,1 +264,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -289,1 +293,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -316,1 +320,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -341,1 +345,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -364,1 +368,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -387,1 +391,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -410,1 +414,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uidna.h","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -495,1 +495,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -512,1 +512,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -529,1 +529,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -550,1 +550,1 @@\n-U_STABLE uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n@@ -568,1 +568,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -593,1 +593,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -616,1 +616,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -652,1 +652,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -677,1 +677,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -702,1 +702,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uiter.h","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -23,0 +22,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -68,1 +71,1 @@\n-U_STABLE ULocaleDisplayNames * U_EXPORT2\n+U_CAPI ULocaleDisplayNames * U_EXPORT2\n@@ -78,1 +81,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -109,1 +112,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -118,1 +121,1 @@\n-U_STABLE UDialectHandling U_EXPORT2\n+U_CAPI UDialectHandling U_EXPORT2\n@@ -134,1 +137,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -154,1 +157,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -172,1 +175,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -190,1 +193,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -208,1 +211,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -226,1 +229,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -244,1 +247,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -263,1 +266,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -285,1 +288,1 @@\n-U_STABLE ULocaleDisplayNames * U_EXPORT2\n+U_CAPI ULocaleDisplayNames * U_EXPORT2\n@@ -299,1 +302,1 @@\n-U_STABLE UDisplayContext U_EXPORT2\n+U_CAPI UDisplayContext U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uldnames.h","additions":18,"deletions":15,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -394,1 +394,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -411,1 +411,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -429,1 +429,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -447,1 +447,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -465,1 +465,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -488,1 +488,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -511,1 +511,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -524,1 +524,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -535,1 +535,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -549,1 +549,1 @@\n-U_STABLE uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n@@ -556,4 +556,5 @@\n- * @param displayLocale Specifies the locale to be used to display the name.  In other words,\n- *                 if the locale's language code is \"en\", passing Locale::getFrench() for\n- *                 inLocale would result in \"Anglais\", while passing Locale::getGerman()\n- *                 for inLocale would result in \"Englisch\".\n+ * @param displayLocale Specifies the locale to be used to display the name. In\n+ *                 other words, if the locale's language code is \"en\", passing\n+ *                 Locale::getFrench() for inLocale would result in \"Anglais\",\n+ *                 while passing Locale::getGerman() for inLocale would result\n+ *                 in \"Englisch\".\n@@ -562,4 +563,8 @@\n- * displayable language code with\n- * @param status error information if retrieving the displayable language code failed\n- * @return the actual buffer size needed for the displayable language code.  If it's greater\n- * than languageCapacity, the returned language code will be truncated.\n+ *                 displayable language code with.\n+ * @param status error information if retrieving the displayable language code\n+ *                 failed. U_USING_DEFAULT_WARNING indicates that no data was\n+ *                 found from the locale resources and a case canonicalized\n+ *                 language code is placed into language as fallback.\n+ * @return the actual buffer size needed for the displayable language code. If\n+ *                 it's greater than languageCapacity, the returned language\n+ *                 code will be truncated.\n@@ -568,1 +573,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -578,11 +583,17 @@\n- * @param locale the locale to get the displayable script code with. NULL may be used to specify the default.\n- * @param displayLocale Specifies the locale to be used to display the name.  In other words,\n- *                 if the locale's language code is \"en\", passing Locale::getFrench() for\n- *                 inLocale would result in \"\", while passing Locale::getGerman()\n- *                 for inLocale would result in \"\". NULL may be used to specify the default.\n- * @param script the displayable script for the localeID\n- * @param scriptCapacity the size of the script buffer to store the\n- * displayable script code with\n- * @param status error information if retrieving the displayable script code failed\n- * @return the actual buffer size needed for the displayable script code.  If it's greater\n- * than scriptCapacity, the returned displayable script code will be truncated.\n+ * @param locale the locale to get the displayable script code with. NULL may be\n+ *                 used to specify the default.\n+ * @param displayLocale Specifies the locale to be used to display the name. In\n+ *                 other words, if the locale's language code is \"en\", passing\n+ *                 Locale::getFrench() for inLocale would result in \"\", while\n+ *                 passing Locale::getGerman() for inLocale would result in \"\".\n+ *                 NULL may be used to specify the default.\n+ * @param script the displayable script for the localeID.\n+ * @param scriptCapacity the size of the script buffer to store the displayable\n+ *                 script code with.\n+ * @param status error information if retrieving the displayable script code\n+ *                 failed. U_USING_DEFAULT_WARNING indicates that no data was\n+ *                 found from the locale resources and a case canonicalized\n+ *                 script code is placed into script as fallback.\n+ * @return the actual buffer size needed for the displayable script code. If\n+ *                 it's greater than scriptCapacity, the returned displayable\n+ *                 script code will be truncated.\n@@ -591,1 +602,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -600,9 +611,12 @@\n- * Warning: this is for the region part of a valid locale ID; it cannot just be the region code (like \"FR\").\n- * To get the display name for a region alone, or for other options, use ULocaleDisplayNames instead.\n- *\n- * @param locale the locale to get the displayable country code with. NULL may be used to specify the default.\n- * @param displayLocale Specifies the locale to be used to display the name.  In other words,\n- *                 if the locale's language code is \"en\", passing Locale::getFrench() for\n- *                 inLocale would result in \"Anglais\", while passing Locale::getGerman()\n- *                 for inLocale would result in \"Englisch\". NULL may be used to specify the default.\n- * @param country the displayable country code for localeID\n+ * Warning: this is for the region part of a valid locale ID; it cannot just be\n+ * the region code (like \"FR\"). To get the display name for a region alone, or\n+ * for other options, use ULocaleDisplayNames instead.\n+ *\n+ * @param locale the locale to get the displayable country code with. NULL may\n+ *                 be used to specify the default.\n+ * @param displayLocale Specifies the locale to be used to display the name. In\n+ *                 other words, if the locale's language code is \"en\", passing\n+ *                 Locale::getFrench() for inLocale would result in \"Anglais\",\n+ *                 while passing Locale::getGerman() for inLocale would result\n+ *                 in \"Englisch\". NULL may be used to specify the default.\n+ * @param country the displayable country code for localeID.\n@@ -610,4 +624,8 @@\n- * displayable country code with\n- * @param status error information if retrieving the displayable country code failed\n- * @return the actual buffer size needed for the displayable country code.  If it's greater\n- * than countryCapacity, the returned displayable country code will be truncated.\n+ *                 displayable country code with.\n+ * @param status error information if retrieving the displayable country code\n+ *                 failed. U_USING_DEFAULT_WARNING indicates that no data was\n+ *                 found from the locale resources and a case canonicalized\n+ *                 country code is placed into country as fallback.\n+ * @return the actual buffer size needed for the displayable country code. If\n+ *                 it's greater than countryCapacity, the returned displayable\n+ *                 country code will be truncated.\n@@ -616,1 +634,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -627,6 +645,8 @@\n- * @param locale the locale to get the displayable variant code with. NULL may be used to specify the default.\n- * @param displayLocale Specifies the locale to be used to display the name.  In other words,\n- *                 if the locale's language code is \"en\", passing Locale::getFrench() for\n- *                 inLocale would result in \"Anglais\", while passing Locale::getGerman()\n- *                 for inLocale would result in \"Englisch\". NULL may be used to specify the default.\n- * @param variant the displayable variant code for localeID\n+ * @param locale the locale to get the displayable variant code with. NULL may\n+ *                 be used to specify the default.\n+ * @param displayLocale Specifies the locale to be used to display the name. In\n+ *                 other words, if the locale's language code is \"en\", passing\n+ *                 Locale::getFrench() for inLocale would result in \"Anglais\",\n+ *                 while passing Locale::getGerman() for inLocale would result\n+ *                 in \"Englisch\". NULL may be used to specify the default.\n+ * @param variant the displayable variant code for localeID.\n@@ -634,4 +654,8 @@\n- * displayable variant code with\n- * @param status error information if retrieving the displayable variant code failed\n- * @return the actual buffer size needed for the displayable variant code.  If it's greater\n- * than variantCapacity, the returned displayable variant code will be truncated.\n+ *                 displayable variant code with.\n+ * @param status error information if retrieving the displayable variant code\n+ *                 failed. U_USING_DEFAULT_WARNING indicates that no data was\n+ *                 found from the locale resources and a case canonicalized\n+ *                 variant code is placed into variant as fallback.\n+ * @return the actual buffer size needed for the displayable variant code. If\n+ *                 it's greater than variantCapacity, the returned displayable\n+ *                 variant code will be truncated.\n@@ -640,1 +664,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -648,2 +672,2 @@\n- * Gets the keyword name suitable for display for the specified locale.\n- * E.g: for the locale string de_DE\\@collation=PHONEBOOK, this API gets the display\n+ * Gets the keyword name suitable for display for the specified locale. E.g:\n+ * for the locale string de_DE\\@collation=PHONEBOOK, this API gets the display\n@@ -683,0 +707,2 @@\n+ *                          U_USING_DEFAULT_WARNING indicates that no data was found from the locale\n+ *                          resources and the keyword is placed into dest as fallback.\n@@ -687,1 +713,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -710,0 +736,2 @@\n+ *                          U_USING_DEFAULT_WARNING indicates that no data was found from the locale\n+ *                          resources and the value of the keyword is placed into dest as fallback.\n@@ -713,1 +741,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -736,1 +764,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -745,6 +773,12 @@\n- * Gets the specified locale from a list of all available locales.\n- * The return value is a pointer to an item of\n- * a locale name array.  Both this array and the pointers\n- * it contains are owned by ICU and should not be deleted or written through\n- * by the caller.  The locale name is terminated by a null pointer.\n- * @param n the specific locale name index of the available locale list\n+ * Gets the specified locale from a list of available locales.\n+ *\n+ * This method corresponds to uloc_openAvailableByType called with the\n+ * ULOC_AVAILABLE_DEFAULT type argument.\n+ *\n+ * The return value is a pointer to an item of a locale name array. Both this\n+ * array and the pointers it contains are owned by ICU and should not be\n+ * deleted or written through by the caller. The locale name is terminated by\n+ * a null pointer.\n+ *\n+ * @param n the specific locale name index of the available locale list;\n+ *     should not exceed the number returned by uloc_countAvailable.\n@@ -754,1 +788,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -763,1 +797,63 @@\n-U_STABLE int32_t U_EXPORT2 uloc_countAvailable(void);\n+U_CAPI int32_t U_EXPORT2 uloc_countAvailable(void);\n+\n+\/**\n+ * Types for uloc_getAvailableByType and uloc_countAvailableByType.\n+ *\n+ * @stable ICU 65\n+ *\/\n+typedef enum ULocAvailableType {\n+  \/**\n+   * Locales that return data when passed to ICU APIs,\n+   * but not including legacy or alias locales.\n+   *\n+   * @stable ICU 65\n+   *\/\n+  ULOC_AVAILABLE_DEFAULT,\n+\n+  \/**\n+   * Legacy or alias locales that return data when passed to ICU APIs.\n+   * Examples of supported legacy or alias locales:\n+   *\n+   * - iw (alias to he)\n+   * - mo (alias to ro)\n+   * - zh_CN (alias to zh_Hans_CN)\n+   * - sr_BA (alias to sr_Cyrl_BA)\n+   * - ars (alias to ar_SA)\n+   *\n+   * The locales in this set are disjoint from the ones in\n+   * ULOC_AVAILABLE_DEFAULT. To get both sets at the same time, use\n+   * ULOC_AVAILABLE_WITH_LEGACY_ALIASES.\n+   *\n+   * @stable ICU 65\n+   *\/\n+  ULOC_AVAILABLE_ONLY_LEGACY_ALIASES,\n+\n+  \/**\n+   * The union of the locales in ULOC_AVAILABLE_DEFAULT and\n+   * ULOC_AVAILABLE_ONLY_LEGACY_ALIAS.\n+   *\n+   * @stable ICU 65\n+   *\/\n+  ULOC_AVAILABLE_WITH_LEGACY_ALIASES,\n+\n+#ifndef U_HIDE_INTERNAL_API\n+  \/**\n+   * @internal\n+   *\/\n+  ULOC_AVAILABLE_COUNT\n+#endif\n+} ULocAvailableType;\n+\n+\/**\n+ * Gets a list of available locales according to the type argument, allowing\n+ * the user to access different sets of supported locales in ICU.\n+ *\n+ * The returned UEnumeration must be closed by the caller.\n+ *\n+ * @param type Type choice from ULocAvailableType.\n+ * @param status Set if an error occurred.\n+ * @return a UEnumeration owned by the caller, or nullptr on failure.\n+ * @stable ICU 65\n+ *\/\n+U_CAPI UEnumeration* U_EXPORT2\n+uloc_openAvailableByType(ULocAvailableType type, UErrorCode* status);\n@@ -776,1 +872,1 @@\n-U_STABLE const char* const* U_EXPORT2\n+U_CAPI const char* const* U_EXPORT2\n@@ -788,1 +884,1 @@\n-U_STABLE const char* const* U_EXPORT2\n+U_CAPI const char* const* U_EXPORT2\n@@ -804,1 +900,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -835,1 +931,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -850,1 +946,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -867,1 +963,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -904,1 +1000,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -913,1 +1009,1 @@\n- * If no likely script is known, then FALSE is returned.\n+ * If no likely script is known, then false is returned.\n@@ -918,1 +1014,1 @@\n- * Returns TRUE for \"ar\" and \"en-Hebr\", FALSE for \"zh\" and \"fa-Cyrl\".\n+ * Returns true for \"ar\" and \"en-Hebr\", false for \"zh\" and \"fa-Cyrl\".\n@@ -921,1 +1017,1 @@\n- * @return TRUE if the locale's script is written right-to-left\n+ * @return true if the locale's script is written right-to-left\n@@ -924,1 +1020,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -948,1 +1044,1 @@\n-U_STABLE ULayoutType U_EXPORT2\n+U_CAPI ULayoutType U_EXPORT2\n@@ -960,1 +1056,1 @@\n-U_STABLE ULayoutType U_EXPORT2\n+U_CAPI ULayoutType U_EXPORT2\n@@ -965,1 +1061,2 @@\n- * enums for the 'outResult' parameter return value\n+ * Output values which uloc_acceptLanguage() writes to the 'outResult' parameter.\n+ *\n@@ -971,5 +1068,16 @@\n-  ULOC_ACCEPT_FAILED   = 0,  \/* No exact match was found. *\/\n-  ULOC_ACCEPT_VALID    = 1,  \/* An exact match was found. *\/\n-  ULOC_ACCEPT_FALLBACK = 2   \/* A fallback was found, for example,\n-                                Accept list contained 'ja_JP'\n-                                which matched available locale 'ja'. *\/\n+    \/**\n+     * No exact match was found.\n+     * @stable ICU 3.2\n+     *\/\n+    ULOC_ACCEPT_FAILED   = 0,\n+    \/**\n+     * An exact match was found.\n+     * @stable ICU 3.2\n+     *\/\n+    ULOC_ACCEPT_VALID    = 1,\n+    \/**\n+     * A fallback was found. For example, the Accept-Language list includes 'ja_JP'\n+     * and is matched with available locale 'ja'.\n+     * @stable ICU 3.2\n+     *\/\n+    ULOC_ACCEPT_FALLBACK = 2   \/*  *\/\n@@ -978,1 +1086,0 @@\n-\n@@ -982,0 +1089,3 @@\n+ *\n+ * This is a thin wrapper over C++ class LocaleMatcher.\n+ *\n@@ -987,1 +1097,3 @@\n- * @param status Error status, may be BUFFER_OVERFLOW_ERROR\n+ * @param status ICU error code. Its input value must pass the U_SUCCESS() test,\n+ *               or else the function returns immediately. Check for U_FAILURE()\n+ *               on output or use with function chaining. (See User Guide for details.)\n@@ -991,1 +1103,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1001,0 +1113,3 @@\n+ *\n+ * This is a thin wrapper over C++ class LocaleMatcher.\n+ *\n@@ -1007,1 +1122,3 @@\n- * @param status Error status, may be BUFFER_OVERFLOW_ERROR\n+ * @param status ICU error code. Its input value must pass the U_SUCCESS() test,\n+ *               or else the function returns immediately. Check for U_FAILURE()\n+ *               on output or use with function chaining. (See User Guide for details.)\n@@ -1011,1 +1128,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1031,1 +1148,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1069,1 +1186,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1109,1 +1226,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1120,6 +1237,9 @@\n- * This implements the 'Language-Tag' production of BCP47, and so\n- * supports grandfathered (regular and irregular) as well as private\n- * use language tags.  Private use tags are represented as 'x-whatever',\n- * and grandfathered tags are converted to their canonical replacements\n- * where they exist.  Note that a few grandfathered tags have no modern\n- * replacement, these will be converted using the fallback described in\n+ * This implements the 'Language-Tag' production of BCP 47, and so\n+ * supports legacy language tags (marked as “Type: grandfathered” in BCP 47)\n+ * (regular and irregular) as well as private use language tags.\n+ *\n+ * Private use tags are represented as 'x-whatever',\n+ * and legacy tags are converted to their canonical replacements where they exist.\n+ *\n+ * Note that a few legacy tags have no modern replacement;\n+ * these will be converted using the fallback described in\n@@ -1127,0 +1247,1 @@\n+ *\n@@ -1138,1 +1259,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1148,1 +1269,1 @@\n- * <b>Note<\/b>: When <code>strict<\/code> is FALSE, any locale\n+ * <b>Note<\/b>: When <code>strict<\/code> is false, any locale\n@@ -1151,1 +1272,1 @@\n- * TRUE, this function sets U_ILLEGAL_ARGUMENT_ERROR to the\n+ * true, this function sets U_ILLEGAL_ARGUMENT_ERROR to the\n@@ -1166,1 +1287,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1194,1 +1315,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -1225,1 +1346,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -1240,1 +1361,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -1269,1 +1390,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uloc.h","additions":232,"deletions":111,"binary":false,"changes":343,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include <stdbool.h>\n@@ -55,1 +56,1 @@\n-\/* For C wrappers, we use the symbol U_STABLE.                                *\/\n+\/* For C wrappers, we use the symbol U_CAPI.                                *\/\n@@ -57,1 +58,1 @@\n-\/* Functions are declared   U_STABLE return-type U_EXPORT2 function-name()... *\/\n+\/* Functions are declared   U_CAPI return-type U_EXPORT2 function-name()... *\/\n@@ -110,1 +111,1 @@\n-\/** This is used to declare a function as a stable public ICU C API*\/\n+\/** Obsolete\/same as U_CAPI; was used to declare a function as a stable public ICU C API*\/\n@@ -112,1 +113,1 @@\n-\/** This is used to declare a function as a draft public ICU C API  *\/\n+\/** Obsolete\/same as U_CAPI; was used to declare a function as a draft public ICU C API  *\/\n@@ -116,1 +117,1 @@\n-\/** This is used to declare a function as an obsolete public ICU C API  *\/\n+\/** Obsolete\/same as U_CAPI; was used to declare a function as an obsolete public ICU C API  *\/\n@@ -118,1 +119,1 @@\n-\/** This is used to declare a function as an internal ICU C API  *\/\n+\/** Obsolete\/same as U_CAPI; was used to declare a function as an internal ICU C API  *\/\n@@ -143,0 +144,36 @@\n+\/\/ Before ICU 65, function-like, multi-statement ICU macros were just defined as\n+\/\/ series of statements wrapped in { } blocks and the caller could choose to\n+\/\/ either treat them as if they were actual functions and end the invocation\n+\/\/ with a trailing ; creating an empty statement after the block or else omit\n+\/\/ this trailing ; using the knowledge that the macro would expand to { }.\n+\/\/\n+\/\/ But doing so doesn't work well with macros that look like functions and\n+\/\/ compiler warnings about empty statements (ICU-20601) and ICU 65 therefore\n+\/\/ switches to the standard solution of wrapping such macros in do { } while.\n+\/\/\n+\/\/ This will however break existing code that depends on being able to invoke\n+\/\/ these macros without a trailing ; so to be able to remain compatible with\n+\/\/ such code the wrapper is itself defined as macros so that it's possible to\n+\/\/ build ICU 65 and later with the old macro behaviour, like this:\n+\/\/\n+\/\/ export CPPFLAGS='-DUPRV_BLOCK_MACRO_BEGIN=\"\" -DUPRV_BLOCK_MACRO_END=\"\"'\n+\/\/ runConfigureICU ...\n+\/\/\n+\n+\/**\n+ * \\def UPRV_BLOCK_MACRO_BEGIN\n+ * Defined as the \"do\" keyword by default.\n+ * @internal\n+ *\/\n+#ifndef UPRV_BLOCK_MACRO_BEGIN\n+#define UPRV_BLOCK_MACRO_BEGIN do\n+#endif\n+\n+\/**\n+ * \\def UPRV_BLOCK_MACRO_END\n+ * Defined as \"while (false)\" by default.\n+ * @internal\n+ *\/\n+#ifndef UPRV_BLOCK_MACRO_END\n+#define UPRV_BLOCK_MACRO_END while (false)\n+#endif\n@@ -224,1 +261,8 @@\n-\/** The ICU boolean type @stable ICU 2.0 *\/\n+\/**\n+ * The ICU boolean type, a signed-byte integer.\n+ * ICU-specific for historical reasons: The C and C++ standards used to not define type bool.\n+ * Also provides a fixed type definition, as opposed to\n+ * type bool whose details (e.g., sizeof) may vary by compiler and between C and C++.\n+ *\n+ * @stable ICU 2.0\n+ *\/\n@@ -227,0 +271,26 @@\n+\/**\n+ * \\def U_DEFINE_FALSE_AND_TRUE\n+ * Normally turns off defining macros FALSE=0 & TRUE=1 in public ICU headers.\n+ * These obsolete macros sometimes break compilation of other code that\n+ * defines enum constants or similar with these names.\n+ * C++ has long defined bool\/false\/true.\n+ * C99 also added definitions for these, although as macros; see stdbool.h.\n+ *\n+ * You may transitionally define U_DEFINE_FALSE_AND_TRUE=1 if you need time to migrate code.\n+ *\n+ * @internal ICU 68\n+ *\/\n+#ifdef U_DEFINE_FALSE_AND_TRUE\n+    \/\/ Use the predefined value.\n+#elif defined(U_COMBINED_IMPLEMENTATION) || \\\n+        defined(U_COMMON_IMPLEMENTATION) || defined(U_I18N_IMPLEMENTATION) || \\\n+        defined(U_IO_IMPLEMENTATION) || defined(U_LAYOUTEX_IMPLEMENTATION) || \\\n+        defined(U_TOOLUTIL_IMPLEMENTATION)\n+    \/\/ Inside ICU: Keep FALSE & TRUE available.\n+#   define U_DEFINE_FALSE_AND_TRUE 1\n+#else\n+    \/\/ Outside ICU: Avoid collision with non-macro definitions of FALSE & TRUE.\n+#   define U_DEFINE_FALSE_AND_TRUE 0\n+#endif\n+\n+#if U_DEFINE_FALSE_AND_TRUE || defined(U_IN_DOXYGEN)\n@@ -228,1 +298,5 @@\n-\/** The TRUE value of a UBool @stable ICU 2.0 *\/\n+\/**\n+ * The TRUE value of a UBool.\n+ *\n+ * @deprecated ICU 68 Use standard \"true\" instead.\n+ *\/\n@@ -232,1 +306,5 @@\n-\/** The FALSE value of a UBool @stable ICU 2.0 *\/\n+\/**\n+ * The FALSE value of a UBool.\n+ *\n+ * @deprecated ICU 68 Use standard \"false\" instead.\n+ *\/\n@@ -235,1 +313,1 @@\n-\n+#endif  \/\/ U_DEFINE_FALSE_AND_TRUE\n@@ -339,1 +417,1 @@\n-#elif defined(__cplusplus)\n+#elif (U_CPLUSPLUS_VERSION >= 11)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/umachine.h","additions":89,"deletions":11,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -12,3 +12,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n-#include \"unicode\/localpointer.h\"\n@@ -19,0 +16,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -47,1 +48,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -62,1 +63,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -74,1 +75,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -83,1 +84,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -88,19 +89,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\n-U_NAMESPACE_BEGIN\n-\n-\/**\n- * \\class LocalUMutableCPTriePointer\n- * \"Smart pointer\" class, closes a UMutableCPTrie via umutablecptrie_close().\n- * For most methods see the LocalPointerBase base class.\n- *\n- * @see LocalPointerBase\n- * @see LocalPointer\n- * @draft ICU 63\n- *\/\n-U_DEFINE_LOCAL_OPEN_POINTER(LocalUMutableCPTriePointer, UMutableCPTrie, umutablecptrie_close);\n-\n-U_NAMESPACE_END\n-\n-#endif\n-\n@@ -114,1 +96,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -126,1 +108,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -137,1 +119,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -169,1 +151,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -183,1 +165,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -197,1 +179,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -232,1 +214,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -240,1 +222,19 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n+#if U_SHOW_CPLUSPLUS_API\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * \\class LocalUMutableCPTriePointer\n+ * \"Smart pointer\" class, closes a UMutableCPTrie via umutablecptrie_close().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @stable ICU 63\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUMutableCPTriePointer, UMutableCPTrie, umutablecptrie_close);\n+\n+U_NAMESPACE_END\n+\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/umutablecptrie.h","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -15,0 +15,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -70,0 +74,8 @@\n+    \/**\n+     * Clones this object polymorphically.\n+     * The caller owns the result and should delete it when done.\n+     * @return clone, or nullptr if an error occurred\n+     * @stable ICU 2.4\n+     *\/\n+    virtual UnicodeFilter* clone() const = 0;\n+\n@@ -122,0 +134,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/unifilt.h","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -16,0 +16,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -127,0 +130,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/unifunct.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -20,0 +20,1 @@\n+#if U_SHOW_CPLUSPLUS_API\n@@ -117,1 +118,1 @@\n-     * @param incremental if TRUE, then assume further characters may\n+     * @param incremental if true, then assume further characters may\n@@ -121,1 +122,1 @@\n-     * match, or a mismatch.  If incremental is FALSE then\n+     * match, or a mismatch.  If incremental is false then\n@@ -136,1 +137,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n@@ -143,1 +144,1 @@\n-                                     UBool escapeUnprintable = FALSE) const = 0;\n+                                     UBool escapeUnprintable = false) const = 0;\n@@ -146,1 +147,1 @@\n-     * Returns TRUE if this matcher will match a character c, where c\n+     * Returns true if this matcher will match a character c, where c\n@@ -165,0 +166,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/unimatch.h","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -16,0 +16,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -324,1 +328,1 @@\n-     * @return TRUE if the set is bogus\/invalid, FALSE otherwise\n+     * @return true if the set is bogus\/invalid, false otherwise\n@@ -332,1 +336,1 @@\n-     * The string will test TRUE with isBogus().\n+     * The string will test true with isBogus().\n@@ -504,1 +508,1 @@\n-    virtual UnicodeFunctor* clone() const;\n+    virtual UnicodeSet* clone() const;\n@@ -562,1 +566,1 @@\n-     * @return TRUE\/FALSE for whether the set has been frozen\n+     * @return true\/false for whether the set has been frozen\n@@ -582,1 +586,1 @@\n-    UnicodeFunctor *freeze();\n+    UnicodeSet *freeze();\n@@ -592,1 +596,1 @@\n-    UnicodeFunctor *cloneAsThawed() const;\n+    UnicodeSet *cloneAsThawed() const;\n@@ -699,1 +703,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n@@ -706,1 +710,1 @@\n-                             UBool escapeUnprintable = FALSE) const;\n+                                     UBool escapeUnprintable = false) const;\n@@ -1635,1 +1639,1 @@\n-     * A filter that returns TRUE if the given code point should be\n+     * A filter that returns true if the given code point should be\n@@ -1654,1 +1658,1 @@\n-#ifndef U_HIDE_DRAFT_API   \/\/ Skipped: ucpmap.h is draft only.\n+    \/\/ UCPMap is now stable ICU 63\n@@ -1658,1 +1662,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1739,0 +1742,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uniset.h","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include <cstddef>\n@@ -33,0 +32,4 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n+#include <cstddef>\n@@ -45,1 +48,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -113,1 +116,1 @@\n-# define UNICODE_STRING(cs, _length) icu::UnicodeString(TRUE, u ## cs, _length)\n+# define UNICODE_STRING(cs, _length) icu::UnicodeString(true, u ## cs, _length)\n@@ -115,1 +118,1 @@\n-# define UNICODE_STRING(cs, _length) icu::UnicodeString(TRUE, (const char16_t*)u ## cs, _length)\n+# define UNICODE_STRING(cs, _length) icu::UnicodeString(true, (const char16_t*)u ## cs, _length)\n@@ -212,1 +215,3 @@\n- * A UnicodeString may also \"alias\" an external array of characters\n+ * The UnicodeString equivalent of std::string’s clear() is remove().\n+ *\n+ * A UnicodeString may \"alias\" an external array of characters\n@@ -225,1 +230,1 @@\n- * [User Guide Strings chapter](http:\/\/userguide.icu-project.org\/strings#TOC-Strings-in-C-C-).\n+ * [User Guide Strings chapter](https:\/\/unicode-org.github.io\/icu\/userguide\/strings#strings-in-cc).\n@@ -283,1 +288,1 @@\n- * [User Guide Strings chapter](http:\/\/userguide.icu-project.org\/strings#TOC-Maximizing-Performance-with-the-UnicodeString-Storage-Model).\n+ * [User Guide Strings chapter](https:\/\/unicode-org.github.io\/icu\/userguide\/strings#maximizing-performance-with-the-unicodestring-storage-model).\n@@ -318,2 +323,2 @@\n-   * @return TRUE if `text` contains the same characters as this one,\n-   * FALSE otherwise.\n+   * @return true if `text` contains the same characters as this one,\n+   * false otherwise.\n@@ -327,2 +332,2 @@\n-   * @return FALSE if `text` contains the same characters as this one,\n-   * TRUE otherwise.\n+   * @return false if `text` contains the same characters as this one,\n+   * true otherwise.\n@@ -336,2 +341,2 @@\n-   * @return TRUE if the characters in this are bitwise\n-   * greater than the characters in `text`, FALSE otherwise\n+   * @return true if the characters in this are bitwise\n+   * greater than the characters in `text`, false otherwise\n@@ -345,2 +350,2 @@\n-   * @return TRUE if the characters in this are bitwise\n-   * less than the characters in `text`, FALSE otherwise\n+   * @return true if the characters in this are bitwise\n+   * less than the characters in `text`, false otherwise\n@@ -354,2 +359,2 @@\n-   * @return TRUE if the characters in this are bitwise\n-   * greater than or equal to the characters in `text`, FALSE otherwise\n+   * @return true if the characters in this are bitwise\n+   * greater than or equal to the characters in `text`, false otherwise\n@@ -363,2 +368,2 @@\n-   * @return TRUE if the characters in this are bitwise\n-   * less than or equal to the characters in `text`, FALSE otherwise\n+   * @return true if the characters in this are bitwise\n+   * less than or equal to the characters in `text`, false otherwise\n@@ -853,2 +858,2 @@\n-   * @return TRUE if this starts with the characters in `text`,\n-   * FALSE otherwise\n+   * @return true if this starts with the characters in `text`,\n+   * false otherwise\n@@ -865,2 +870,2 @@\n-   * @return TRUE if this starts with the characters in `text`,\n-   * FALSE otherwise\n+   * @return true if this starts with the characters in `text`,\n+   * false otherwise\n@@ -877,2 +882,2 @@\n-   * @return TRUE if this starts with the characters in `srcChars`,\n-   * FALSE otherwise\n+   * @return true if this starts with the characters in `srcChars`,\n+   * false otherwise\n@@ -890,1 +895,1 @@\n-   * @return TRUE if this ends with the characters in `srcChars`, FALSE otherwise\n+   * @return true if this ends with the characters in `srcChars`, false otherwise\n@@ -900,2 +905,2 @@\n-   * @return TRUE if this ends with the characters in `text`,\n-   * FALSE otherwise\n+   * @return true if this ends with the characters in `text`,\n+   * false otherwise\n@@ -912,2 +917,2 @@\n-   * @return TRUE if this ends with the characters in `text`,\n-   * FALSE otherwise\n+   * @return true if this ends with the characters in `text`,\n+   * false otherwise\n@@ -924,2 +929,2 @@\n-   * @return TRUE if this ends with the characters in `srcChars`,\n-   * FALSE otherwise\n+   * @return true if this ends with the characters in `srcChars`,\n+   * false otherwise\n@@ -937,2 +942,2 @@\n-   * @return TRUE if this ends with the characters in `srcChars`,\n-   * FALSE otherwise\n+   * @return true if this ends with the characters in `srcChars`,\n+   * false otherwise\n@@ -1802,1 +1807,1 @@\n-   * @return TRUE if this string contains 0 characters, FALSE otherwise.\n+   * @return true if this string contains 0 characters, false otherwise.\n@@ -1830,1 +1835,1 @@\n-   * although in both cases isEmpty() returns TRUE and length() returns 0.\n+   * although in both cases isEmpty() returns true and length() returns 0.\n@@ -1835,1 +1840,1 @@\n-   * @return TRUE if the string is bogus\/invalid, FALSE otherwise\n+   * @return true if the string is bogus\/invalid, false otherwise\n@@ -2065,1 +2070,1 @@\n-   * The string will test TRUE with isBogus().\n+   * The string will test true with isBogus().\n@@ -2095,2 +2100,1 @@\n-   *   static const char16_t nul=0;\n-   *   s.setTo(&nul, 0);     \/\/ set to an empty C Unicode string\n+   *   s.setTo(u\"\", 0);      \/\/ set to an empty C Unicode string\n@@ -2458,1 +2462,1 @@\n-   * @return TRUE if it has MetaData\n+   * @return true if it has MetaData\n@@ -2537,1 +2541,3 @@\n-   * Remove all characters from the UnicodeString object.\n+   * Removes all characters from the UnicodeString object and clears the bogus flag.\n+   * This is the UnicodeString equivalent of std::string’s clear().\n+   *\n@@ -2539,0 +2545,1 @@\n+   * @see setToBogus\n@@ -2541,1 +2548,1 @@\n-  inline UnicodeString& remove(void);\n+  inline UnicodeString& remove();\n@@ -2586,1 +2593,1 @@\n-   * @return TRUE if the text was padded, FALSE otherwise.\n+   * @return true if the text was padded, false otherwise.\n@@ -2600,1 +2607,1 @@\n-   * @return TRUE if the text was padded, FALSE otherwise.\n+   * @return true if the text was padded, false otherwise.\n@@ -2609,1 +2616,1 @@\n-   * @return TRUE if the text was truncated, FALSE otherwise\n+   * @return true if the text was truncated, false otherwise\n@@ -3037,1 +3044,1 @@\n-   * @param length string length\n+   * @param textLength string length\n@@ -3040,2 +3047,2 @@\n-  UnicodeString(const uint16_t *text, int32_t length) :\n-      UnicodeString(ConstChar16Ptr(text), length) {}\n+  UnicodeString(const uint16_t *text, int32_t textLength) :\n+      UnicodeString(ConstChar16Ptr(text), textLength) {}\n@@ -3050,1 +3057,1 @@\n-   * @param length string length\n+   * @param textLength string length\n@@ -3053,2 +3060,2 @@\n-  UnicodeString(const wchar_t *text, int32_t length) :\n-      UnicodeString(ConstChar16Ptr(text), length) {}\n+  UnicodeString(const wchar_t *text, int32_t textLength) :\n+      UnicodeString(ConstChar16Ptr(text), textLength) {}\n@@ -3061,1 +3068,1 @@\n-   * @param length ignored\n+   * @param textLength ignored\n@@ -3064,1 +3071,1 @@\n-  inline UnicodeString(const std::nullptr_t text, int32_t length);\n+  inline UnicodeString(const std::nullptr_t text, int32_t textLength);\n@@ -3269,1 +3276,1 @@\n-   * @param length Length of src, or -1 if NUL-terminated.\n+   * @param textLength Length of src, or -1 if NUL-terminated.\n@@ -3275,1 +3282,1 @@\n-  UnicodeString(const char *src, int32_t length, enum EInvariant inv);\n+  UnicodeString(const char *src, int32_t textLength, enum EInvariant inv);\n@@ -3326,3 +3333,0 @@\n-   * The clone functions in all subclasses return a pointer to a Replaceable\n-   * because some compilers do not support covariant (same-as-this)\n-   * return types; cast to the appropriate subclass if necessary.\n@@ -3337,1 +3341,1 @@\n-  virtual Replaceable *clone() const;\n+  virtual UnicodeString *clone() const;\n@@ -3614,1 +3618,1 @@\n-  UnicodeString &copyFrom(const UnicodeString &src, UBool fastCopy=FALSE);\n+  UnicodeString &copyFrom(const UnicodeString &src, UBool fastCopy=false);\n@@ -3667,1 +3671,1 @@\n-   * Return FALSE if memory could not be allocated.\n+   * Return false if memory could not be allocated.\n@@ -3671,1 +3675,1 @@\n-                            UBool doCopyArray = TRUE,\n+                            UBool doCopyArray = true,\n@@ -3673,1 +3677,1 @@\n-                            UBool forceClone = FALSE);\n+                            UBool forceClone = false);\n@@ -4731,1 +4735,1 @@\n-    return FALSE;\n+    return false;\n@@ -4734,1 +4738,1 @@\n-    return TRUE;\n+    return true;\n@@ -4736,1 +4740,1 @@\n-    return FALSE;\n+    return false;\n@@ -4751,0 +4755,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/unistr.h","additions":73,"deletions":67,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -134,0 +134,2 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n+\n@@ -158,0 +160,2 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n+\n@@ -273,1 +277,1 @@\n- * perform further tests to arrive at a TRUE\/FALSE result.\n+ * perform further tests to arrive at a true\/false result.\n@@ -357,1 +361,1 @@\n- * If doNormalize==TRUE and pNeededToNormalize!=NULL then *pNeeded... is set TRUE\n+ * If doNormalize==true and pNeededToNormalize!=NULL then *pNeeded... is set true\n@@ -360,1 +364,1 @@\n- * If doNormalize==FALSE then *pNeededToNormalize will be set to FALSE.\n+ * If doNormalize==false then *pNeededToNormalize will be set to false.\n@@ -372,1 +376,1 @@\n- *                    is to be normalized (TRUE) or just copied (FALSE).\n+ *                    is to be normalized (true) or just copied (false).\n@@ -376,1 +380,1 @@\n- *                           Always FALSE if !doNormalize.\n+ *                           Always false if !doNormalize.\n@@ -405,1 +409,1 @@\n- *                    is to be normalized (TRUE) or just copied (FALSE).\n+ *                    is to be normalized (true) or just copied (false).\n@@ -409,1 +413,1 @@\n- *                           Always FALSE if !doNormalize.\n+ *                           Always false if !doNormalize.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/unorm.h","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -38,0 +37,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -135,1 +138,1 @@\n-U_STABLE const UNormalizer2 * U_EXPORT2\n+U_CAPI const UNormalizer2 * U_EXPORT2\n@@ -149,1 +152,1 @@\n-U_STABLE const UNormalizer2 * U_EXPORT2\n+U_CAPI const UNormalizer2 * U_EXPORT2\n@@ -163,1 +166,1 @@\n-U_STABLE const UNormalizer2 * U_EXPORT2\n+U_CAPI const UNormalizer2 * U_EXPORT2\n@@ -177,1 +180,1 @@\n-U_STABLE const UNormalizer2 * U_EXPORT2\n+U_CAPI const UNormalizer2 * U_EXPORT2\n@@ -191,1 +194,1 @@\n-U_STABLE const UNormalizer2 * U_EXPORT2\n+U_CAPI const UNormalizer2 * U_EXPORT2\n@@ -215,1 +218,1 @@\n-U_STABLE const UNormalizer2 * U_EXPORT2\n+U_CAPI const UNormalizer2 * U_EXPORT2\n@@ -236,1 +239,1 @@\n-U_STABLE UNormalizer2 * U_EXPORT2\n+U_CAPI UNormalizer2 * U_EXPORT2\n@@ -245,1 +248,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -283,1 +286,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -306,1 +309,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -329,1 +332,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -354,1 +357,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -388,1 +391,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -408,1 +411,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -420,1 +423,1 @@\n-U_STABLE uint8_t U_EXPORT2\n+U_CAPI uint8_t U_EXPORT2\n@@ -436,1 +439,1 @@\n- * @return TRUE if s is normalized\n+ * @return true if s is normalized\n@@ -439,1 +442,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -461,1 +464,1 @@\n-U_STABLE UNormalizationCheckResult U_EXPORT2\n+U_CAPI UNormalizationCheckResult U_EXPORT2\n@@ -490,1 +493,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -501,1 +504,1 @@\n- * @return TRUE if c has a normalization boundary before it\n+ * @return true if c has a normalization boundary before it\n@@ -504,1 +507,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -513,1 +516,1 @@\n- * @return TRUE if c has a normalization boundary after it\n+ * @return true if c has a normalization boundary after it\n@@ -516,1 +519,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -524,1 +527,1 @@\n- * @return TRUE if c is normalization-inert\n+ * @return true if c is normalization-inert\n@@ -527,1 +530,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -596,1 +599,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/unorm2.h","additions":30,"deletions":27,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -23,0 +23,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -46,1 +49,1 @@\n-#define U_NO_THROW throw()\n+#define U_NO_THROW U_NOEXCEPT\n@@ -215,2 +218,1 @@\n- * defined on the service's C++ base class, and all subclasses within that\n- * service class tree return a pointer to the service base class\n+ * defined on the service's C++ base class\n@@ -218,2 +220,0 @@\n- * This is because some compilers do not support covariant (same-as-this)\n- * return types; cast to the appropriate subclass if necessary.\n@@ -322,0 +322,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uobject.h","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -133,1 +133,0 @@\n-#define locale_getKeywords U_ICU_ENTRY_POINT_RENAME(locale_getKeywords)\n@@ -138,0 +137,1 @@\n+#define rbbi_cleanup U_ICU_ENTRY_POINT_RENAME(rbbi_cleanup)\n@@ -195,2 +195,2 @@\n-#define res_getBinary U_ICU_ENTRY_POINT_RENAME(res_getBinary)\n-#define res_getIntVector U_ICU_ENTRY_POINT_RENAME(res_getIntVector)\n+#define res_getBinaryNoTrace U_ICU_ENTRY_POINT_RENAME(res_getBinaryNoTrace)\n+#define res_getIntVectorNoTrace U_ICU_ENTRY_POINT_RENAME(res_getIntVectorNoTrace)\n@@ -199,1 +199,1 @@\n-#define res_getString U_ICU_ENTRY_POINT_RENAME(res_getString)\n+#define res_getStringNoTrace U_ICU_ENTRY_POINT_RENAME(res_getStringNoTrace)\n@@ -206,0 +206,1 @@\n+#define u_asciiToUpper U_ICU_ENTRY_POINT_RENAME(u_asciiToUpper)\n@@ -526,0 +527,1 @@\n+#define ucal_getHostTimeZone U_ICU_ENTRY_POINT_RENAME(ucal_getHostTimeZone)\n@@ -578,1 +580,0 @@\n-#define ucasemap_mapUTF8 U_ICU_ENTRY_POINT_RENAME(ucasemap_mapUTF8)\n@@ -899,0 +900,1 @@\n+#define udatpg_getDefaultHourCycle U_ICU_ENTRY_POINT_RENAME(udatpg_getDefaultHourCycle)\n@@ -916,0 +918,1 @@\n+#define udtitvfmt_formatCalendarToResult U_ICU_ENTRY_POINT_RENAME(udtitvfmt_formatCalendarToResult)\n@@ -917,0 +920,1 @@\n+#define udtitvfmt_getContext U_ICU_ENTRY_POINT_RENAME(udtitvfmt_getContext)\n@@ -920,0 +924,1 @@\n+#define udtitvfmt_setContext U_ICU_ENTRY_POINT_RENAME(udtitvfmt_setContext)\n@@ -933,4 +938,0 @@\n-#define ufile_close_translit U_ICU_ENTRY_POINT_RENAME(ufile_close_translit)\n-#define ufile_fill_uchar_buffer U_ICU_ENTRY_POINT_RENAME(ufile_fill_uchar_buffer)\n-#define ufile_flush_io U_ICU_ENTRY_POINT_RENAME(ufile_flush_io)\n-#define ufile_flush_translit U_ICU_ENTRY_POINT_RENAME(ufile_flush_translit)\n@@ -939,1 +940,0 @@\n-#define ufmt_64tou U_ICU_ENTRY_POINT_RENAME(ufmt_64tou)\n@@ -941,2 +941,0 @@\n-#define ufmt_defaultCPToUnicode U_ICU_ENTRY_POINT_RENAME(ufmt_defaultCPToUnicode)\n-#define ufmt_digitvalue U_ICU_ENTRY_POINT_RENAME(ufmt_digitvalue)\n@@ -954,1 +952,0 @@\n-#define ufmt_isdigit U_ICU_ENTRY_POINT_RENAME(ufmt_isdigit)\n@@ -956,3 +953,0 @@\n-#define ufmt_ptou U_ICU_ENTRY_POINT_RENAME(ufmt_ptou)\n-#define ufmt_uto64 U_ICU_ENTRY_POINT_RENAME(ufmt_uto64)\n-#define ufmt_utop U_ICU_ENTRY_POINT_RENAME(ufmt_utop)\n@@ -1067,0 +1061,1 @@\n+#define ulistfmt_openForType U_ICU_ENTRY_POINT_RENAME(ulistfmt_openForType)\n@@ -1088,1 +1083,0 @@\n-#define uloc_getDisplayScriptInContext U_ICU_ENTRY_POINT_RENAME(uloc_getDisplayScriptInContext)\n@@ -1106,0 +1100,1 @@\n+#define uloc_openAvailableByType U_ICU_ENTRY_POINT_RENAME(uloc_openAvailableByType)\n@@ -1127,0 +1122,1 @@\n+#define ulocimp_canonicalize U_ICU_ENTRY_POINT_RENAME(ulocimp_canonicalize)\n@@ -1128,0 +1124,1 @@\n+#define ulocimp_getBaseName U_ICU_ENTRY_POINT_RENAME(ulocimp_getBaseName)\n@@ -1129,0 +1126,3 @@\n+#define ulocimp_getKeywordValue U_ICU_ENTRY_POINT_RENAME(ulocimp_getKeywordValue)\n+#define ulocimp_getKeywords U_ICU_ENTRY_POINT_RENAME(ulocimp_getKeywords)\n+#define ulocimp_getKnownCanonicalizedLocaleForTest U_ICU_ENTRY_POINT_RENAME(ulocimp_getKnownCanonicalizedLocaleForTest)\n@@ -1130,0 +1130,1 @@\n+#define ulocimp_getName U_ICU_ENTRY_POINT_RENAME(ulocimp_getName)\n@@ -1132,0 +1133,1 @@\n+#define ulocimp_isCanonicalizedLocaleForTest U_ICU_ENTRY_POINT_RENAME(ulocimp_isCanonicalizedLocaleForTest)\n@@ -1138,0 +1140,1 @@\n+#define ultag_getTKeyStart U_ICU_ENTRY_POINT_RENAME(ultag_getTKeyStart)\n@@ -1162,3 +1165,0 @@\n-#define umtx_condBroadcast U_ICU_ENTRY_POINT_RENAME(umtx_condBroadcast)\n-#define umtx_condSignal U_ICU_ENTRY_POINT_RENAME(umtx_condSignal)\n-#define umtx_condWait U_ICU_ENTRY_POINT_RENAME(umtx_condWait)\n@@ -1253,0 +1253,1 @@\n+#define unumf_resultToDecimalNumber U_ICU_ENTRY_POINT_RENAME(unumf_resultToDecimalNumber)\n@@ -1254,0 +1255,10 @@\n+#define unumrf_close U_ICU_ENTRY_POINT_RENAME(unumrf_close)\n+#define unumrf_closeResult U_ICU_ENTRY_POINT_RENAME(unumrf_closeResult)\n+#define unumrf_formatDecimalRange U_ICU_ENTRY_POINT_RENAME(unumrf_formatDecimalRange)\n+#define unumrf_formatDoubleRange U_ICU_ENTRY_POINT_RENAME(unumrf_formatDoubleRange)\n+#define unumrf_openForSkeletonWithCollapseAndIdentityFallback U_ICU_ENTRY_POINT_RENAME(unumrf_openForSkeletonWithCollapseAndIdentityFallback)\n+#define unumrf_openResult U_ICU_ENTRY_POINT_RENAME(unumrf_openResult)\n+#define unumrf_resultAsValue U_ICU_ENTRY_POINT_RENAME(unumrf_resultAsValue)\n+#define unumrf_resultGetFirstDecimalNumber U_ICU_ENTRY_POINT_RENAME(unumrf_resultGetFirstDecimalNumber)\n+#define unumrf_resultGetIdentityResult U_ICU_ENTRY_POINT_RENAME(unumrf_resultGetIdentityResult)\n+#define unumrf_resultGetSecondDecimalNumber U_ICU_ENTRY_POINT_RENAME(unumrf_resultGetSecondDecimalNumber)\n@@ -1267,0 +1278,1 @@\n+#define uplrules_selectForRange U_ICU_ENTRY_POINT_RENAME(uplrules_selectForRange)\n@@ -1311,1 +1323,0 @@\n-#define uprv_currencyLeads U_ICU_ENTRY_POINT_RENAME(uprv_currencyLeads)\n@@ -1330,1 +1341,0 @@\n-#define uprv_decNumberClass U_ICU_ENTRY_POINT_RENAME(uprv_decNumberClass)\n@@ -1396,0 +1406,1 @@\n+#define uprv_ebcdicToAscii U_ICU_ENTRY_POINT_RENAME(uprv_ebcdicToAscii)\n@@ -1415,0 +1426,1 @@\n+#define uprv_isEbcdicAtSign U_ICU_ENTRY_POINT_RENAME(uprv_isEbcdicAtSign)\n@@ -1582,0 +1594,1 @@\n+#define ures_getValueWithFallback U_ICU_ENTRY_POINT_RENAME(ures_getValueWithFallback)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/urename.h","additions":35,"deletions":22,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -31,0 +33,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -166,1 +169,1 @@\n-U_STABLE UResourceBundle*  U_EXPORT2\n+U_CAPI UResourceBundle*  U_EXPORT2\n@@ -189,1 +192,1 @@\n-U_STABLE UResourceBundle* U_EXPORT2\n+U_CAPI UResourceBundle* U_EXPORT2\n@@ -212,1 +215,1 @@\n-U_STABLE UResourceBundle* U_EXPORT2\n+U_CAPI UResourceBundle* U_EXPORT2\n@@ -248,1 +251,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -294,1 +297,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -328,1 +331,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -351,1 +354,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -375,1 +378,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -386,1 +389,1 @@\n- * If forceCopy==TRUE, then the string is always written to the dest buffer\n+ * If forceCopy==true, then the string is always written to the dest buffer\n@@ -389,1 +392,1 @@\n- * If forceCopy==FALSE, then the string is returned as a pointer if possible,\n+ * If forceCopy==false, then the string is returned as a pointer if possible,\n@@ -407,1 +410,1 @@\n- * @param forceCopy If TRUE, then the output string will always be written to\n+ * @param forceCopy If true, then the output string will always be written to\n@@ -410,1 +413,1 @@\n- *                  If FALSE, then the dest buffer may or may not contain a\n+ *                  If false, then the dest buffer may or may not contain a\n@@ -427,1 +430,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -450,1 +453,1 @@\n-U_STABLE const uint8_t* U_EXPORT2\n+U_CAPI const uint8_t* U_EXPORT2\n@@ -472,1 +475,1 @@\n-U_STABLE const int32_t* U_EXPORT2\n+U_CAPI const int32_t* U_EXPORT2\n@@ -493,1 +496,1 @@\n-U_STABLE uint32_t U_EXPORT2\n+U_CAPI uint32_t U_EXPORT2\n@@ -513,1 +516,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -527,1 +530,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -538,1 +541,1 @@\n-U_STABLE UResType U_EXPORT2\n+U_CAPI UResType U_EXPORT2\n@@ -549,1 +552,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -562,1 +565,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -569,1 +572,1 @@\n- * @return TRUE if there are more elements, FALSE if there is no more elements\n+ * @return true if there are more elements, false if there is no more elements\n@@ -572,1 +575,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -587,1 +590,1 @@\n-U_STABLE UResourceBundle* U_EXPORT2\n+U_CAPI UResourceBundle* U_EXPORT2\n@@ -604,1 +607,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -622,1 +625,1 @@\n-U_STABLE UResourceBundle* U_EXPORT2\n+U_CAPI UResourceBundle* U_EXPORT2\n@@ -639,1 +642,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -651,1 +654,1 @@\n- * If forceCopy==TRUE, then the string is always written to the dest buffer\n+ * If forceCopy==true, then the string is always written to the dest buffer\n@@ -654,1 +657,1 @@\n- * If forceCopy==FALSE, then the string is returned as a pointer if possible,\n+ * If forceCopy==false, then the string is returned as a pointer if possible,\n@@ -673,1 +676,1 @@\n- * @param forceCopy If TRUE, then the output string will always be written to\n+ * @param forceCopy If true, then the output string will always be written to\n@@ -676,1 +679,1 @@\n- *                  If FALSE, then the dest buffer may or may not contain a\n+ *                  If false, then the dest buffer may or may not contain a\n@@ -693,1 +696,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -712,1 +715,1 @@\n-U_STABLE UResourceBundle* U_EXPORT2\n+U_CAPI UResourceBundle* U_EXPORT2\n@@ -730,1 +733,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -744,1 +747,1 @@\n- * If forceCopy==TRUE, then the string is always written to the dest buffer\n+ * If forceCopy==true, then the string is always written to the dest buffer\n@@ -747,1 +750,1 @@\n- * If forceCopy==FALSE, then the string is returned as a pointer if possible,\n+ * If forceCopy==false, then the string is returned as a pointer if possible,\n@@ -766,1 +769,1 @@\n- * @param forceCopy If TRUE, then the output string will always be written to\n+ * @param forceCopy If true, then the output string will always be written to\n@@ -769,1 +772,1 @@\n- *                  If FALSE, then the dest buffer may or may not contain a\n+ *                  If false, then the dest buffer may or may not contain a\n@@ -786,1 +789,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -814,1 +817,1 @@\n-        result.setTo(TRUE, r, len);\n+        result.setTo(true, r, len);\n@@ -839,1 +842,1 @@\n-        result.setTo(TRUE, r, len);\n+        result.setTo(true, r, len);\n@@ -861,1 +864,1 @@\n-        result.setTo(TRUE, r, len);\n+        result.setTo(true, r, len);\n@@ -884,1 +887,1 @@\n-        result.setTo(TRUE, r, len);\n+        result.setTo(true, r, len);\n@@ -903,1 +906,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ures.h","additions":47,"deletions":44,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -478,0 +478,9 @@\n+      \/** @stable ICU 66 *\/\n+      USCRIPT_CHORASMIAN                    = 189,\/* Chrs *\/\n+      \/** @stable ICU 66 *\/\n+      USCRIPT_DIVES_AKURU                   = 190,\/* Diak *\/\n+      \/** @stable ICU 66 *\/\n+      USCRIPT_KHITAN_SMALL_SCRIPT           = 191,\/* Kits *\/\n+      \/** @stable ICU 66 *\/\n+      USCRIPT_YEZIDI                        = 192,\/* Yezi *\/\n+\n@@ -485,1 +494,1 @@\n-    USCRIPT_CODE_LIMIT    = 189\n+    USCRIPT_CODE_LIMIT    = 193\n@@ -508,1 +517,1 @@\n-U_STABLE int32_t  U_EXPORT2\n+U_CAPI int32_t  U_EXPORT2\n@@ -521,1 +530,1 @@\n-U_STABLE const char*  U_EXPORT2\n+U_CAPI const char*  U_EXPORT2\n@@ -533,1 +542,1 @@\n-U_STABLE const char*  U_EXPORT2\n+U_CAPI const char*  U_EXPORT2\n@@ -544,1 +553,1 @@\n-U_STABLE UScriptCode  U_EXPORT2\n+U_CAPI UScriptCode  U_EXPORT2\n@@ -556,1 +565,1 @@\n- * @return TRUE if sc is in Script_Extensions(c)\n+ * @return true if sc is in Script_Extensions(c)\n@@ -559,1 +568,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -591,1 +600,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -630,1 +639,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -662,1 +671,1 @@\n-U_STABLE UScriptUsage U_EXPORT2\n+U_CAPI UScriptUsage U_EXPORT2\n@@ -666,1 +675,1 @@\n- * Returns TRUE if the script is written right-to-left.\n+ * Returns true if the script is written right-to-left.\n@@ -670,1 +679,1 @@\n- * @return TRUE if the script is right-to-left\n+ * @return true if the script is right-to-left\n@@ -673,1 +682,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -677,1 +686,1 @@\n- * Returns TRUE if the script allows line breaks between letters (excluding hyphenation).\n+ * Returns true if the script allows line breaks between letters (excluding hyphenation).\n@@ -682,1 +691,1 @@\n- * @return TRUE if the script allows line breaks between letters\n+ * @return true if the script allows line breaks between letters\n@@ -685,1 +694,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -689,1 +698,1 @@\n- * Returns TRUE if in modern (or most recent) usage of the script case distinctions are customary.\n+ * Returns true if in modern (or most recent) usage of the script case distinctions are customary.\n@@ -693,1 +702,1 @@\n- * @return TRUE if the script is cased\n+ * @return true if the script is cased\n@@ -696,1 +705,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uscript.h","additions":28,"deletions":19,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -35,0 +37,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -161,1 +164,1 @@\n-     * (For code points only, this is like while contains(current)==FALSE).\n+     * (For code points only, this is like while contains(current)==false).\n@@ -172,1 +175,1 @@\n-     * (For characters only, this is like while contains(current)==TRUE).\n+     * (For characters only, this is like while contains(current)==true).\n@@ -188,1 +191,1 @@\n-     * (For characters only, this is like while contains(current)==TRUE).\n+     * (For characters only, this is like while contains(current)==true).\n@@ -263,1 +266,1 @@\n-U_STABLE USet* U_EXPORT2\n+U_CAPI USet* U_EXPORT2\n@@ -276,1 +279,1 @@\n-U_STABLE USet* U_EXPORT2\n+U_CAPI USet* U_EXPORT2\n@@ -288,1 +291,1 @@\n-U_STABLE USet* U_EXPORT2\n+U_CAPI USet* U_EXPORT2\n@@ -303,1 +306,1 @@\n-U_STABLE USet* U_EXPORT2\n+U_CAPI USet* U_EXPORT2\n@@ -314,1 +317,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -345,1 +348,1 @@\n-U_STABLE USet * U_EXPORT2\n+U_CAPI USet * U_EXPORT2\n@@ -352,1 +355,1 @@\n- * @return TRUE\/FALSE for whether the set has been frozen\n+ * @return true\/false for whether the set has been frozen\n@@ -357,1 +360,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -374,1 +377,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -387,1 +390,1 @@\n-U_STABLE USet * U_EXPORT2\n+U_CAPI USet * U_EXPORT2\n@@ -399,1 +402,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -424,1 +427,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -452,1 +455,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -491,1 +494,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -506,1 +509,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -517,1 +520,1 @@\n- * @param escapeUnprintable if TRUE then convert unprintable\n+ * @param escapeUnprintable if true then convert unprintable\n@@ -525,1 +528,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -533,1 +536,1 @@\n- * uset_contains(set, c) will return TRUE.\n+ * uset_contains(set, c) will return true.\n@@ -539,1 +542,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -554,1 +557,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -559,1 +562,1 @@\n- * uset_contains(set, start, end) will return TRUE.\n+ * uset_contains(set, start, end) will return true.\n@@ -566,1 +569,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -571,1 +574,1 @@\n- * uset_containsString(set, str, strLen) will return TRUE.\n+ * uset_containsString(set, str, strLen) will return true.\n@@ -578,1 +581,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -590,1 +593,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -595,1 +598,1 @@\n- * uset_contains(set, c) will return FALSE.\n+ * uset_contains(set, c) will return false.\n@@ -601,1 +604,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -606,1 +609,1 @@\n- * uset_contains(set, start, end) will return FALSE.\n+ * uset_contains(set, start, end) will return false.\n@@ -613,1 +616,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -618,1 +621,1 @@\n- * uset_containsString(set, str, strLen) will return FALSE.\n+ * uset_containsString(set, str, strLen) will return false.\n@@ -625,1 +628,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -639,1 +642,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -656,1 +659,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -671,1 +674,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -682,1 +685,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -693,1 +696,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -707,1 +710,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -717,1 +720,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -746,1 +749,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -755,1 +758,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -759,1 +762,1 @@\n- * Returns TRUE if the given USet contains no characters and no\n+ * Returns true if the given USet contains no characters and no\n@@ -765,1 +768,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -769,1 +772,1 @@\n- * Returns TRUE if the given USet contains the given character.\n+ * Returns true if the given USet contains the given character.\n@@ -776,1 +779,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -780,1 +783,1 @@\n- * Returns TRUE if the given USet contains all characters c\n+ * Returns true if the given USet contains all characters c\n@@ -785,1 +788,1 @@\n- * @return TRUE if set contains the range\n+ * @return true if set contains the range\n@@ -788,1 +791,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -792,1 +795,1 @@\n- * Returns TRUE if the given USet contains the given string.\n+ * Returns true if the given USet contains the given string.\n@@ -799,1 +802,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -812,1 +815,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -825,1 +828,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -836,1 +839,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -847,1 +850,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -868,1 +871,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -882,1 +885,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -895,1 +898,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -906,1 +909,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -917,1 +920,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -939,1 +942,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -960,1 +963,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -982,1 +985,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1003,1 +1006,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1014,1 +1017,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1070,1 +1073,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1081,1 +1084,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1091,1 +1094,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1095,1 +1098,1 @@\n- * Returns TRUE if the given USerializedSet contains the given\n+ * Returns true if the given USerializedSet contains the given\n@@ -1102,1 +1105,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1114,1 +1117,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1130,1 +1133,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uset.h","additions":76,"deletions":73,"binary":false,"changes":149,"status":"modified"},{"patch":"@@ -13,0 +13,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -176,1 +179,1 @@\n-     * If <tt>isString() == TRUE<\/tt>, the value is a\n+     * If <tt>isString() == true<\/tt>, the value is a\n@@ -197,1 +200,1 @@\n-     * false.  If <tt>isString() == TRUE<\/tt>, the value is a\n+     * false.  If <tt>isString() == true<\/tt>, the value is a\n@@ -205,1 +208,1 @@\n-     * is undefined unless <tt>isString() == TRUE<\/tt>.  Do not mix calls to\n+     * is undefined unless <tt>isString() == true<\/tt>.  Do not mix calls to\n@@ -320,0 +323,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/usetiter.h","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ushape.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -29,0 +31,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -184,1 +187,1 @@\n-U_STABLE UStringPrepProfile* U_EXPORT2\n+U_CAPI UStringPrepProfile* U_EXPORT2\n@@ -200,1 +203,1 @@\n-U_STABLE UStringPrepProfile* U_EXPORT2\n+U_CAPI UStringPrepProfile* U_EXPORT2\n@@ -209,1 +212,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -260,1 +263,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/usprep.h","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -109,1 +109,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -130,1 +130,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -143,1 +143,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -161,1 +161,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -186,1 +186,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -210,1 +210,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -230,1 +230,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -250,1 +250,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -273,1 +273,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -297,1 +297,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -317,1 +317,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -337,1 +337,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -352,1 +352,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -368,1 +368,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -384,1 +384,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -412,1 +412,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -427,1 +427,1 @@\n-U_STABLE int32_t  U_EXPORT2\n+U_CAPI int32_t  U_EXPORT2\n@@ -442,1 +442,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -465,2 +465,2 @@\n- * @param codePointOrder Choose between code unit order (FALSE)\n- *                       and code point order (TRUE).\n+ * @param codePointOrder Choose between code unit order (false)\n+ *                       and code point order (true).\n@@ -472,1 +472,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -488,2 +488,2 @@\n- * @param codePointOrder Choose between code unit order (FALSE)\n- *                       and code point order (TRUE).\n+ * @param codePointOrder Choose between code unit order (false)\n+ *                       and code point order (true).\n@@ -497,1 +497,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -540,1 +540,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -558,1 +558,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -576,1 +576,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -598,1 +598,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -622,1 +622,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -646,1 +646,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -657,1 +657,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -672,1 +672,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -689,1 +689,1 @@\n-U_STABLE UChar* U_EXPORT2 u_uastrcpy(UChar *dst,\n+U_CAPI UChar* U_EXPORT2 u_uastrcpy(UChar *dst,\n@@ -704,1 +704,1 @@\n-U_STABLE UChar* U_EXPORT2 u_uastrncpy(UChar *dst,\n+U_CAPI UChar* U_EXPORT2 u_uastrncpy(UChar *dst,\n@@ -718,1 +718,1 @@\n-U_STABLE char* U_EXPORT2 u_austrcpy(char *dst,\n+U_CAPI char* U_EXPORT2 u_austrcpy(char *dst,\n@@ -733,1 +733,1 @@\n-U_STABLE char* U_EXPORT2 u_austrncpy(char *dst,\n+U_CAPI char* U_EXPORT2 u_austrncpy(char *dst,\n@@ -747,1 +747,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -758,1 +758,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -770,1 +770,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -784,1 +784,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -800,1 +800,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -820,1 +820,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -840,1 +840,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -860,1 +860,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -880,1 +880,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -906,1 +906,1 @@\n- *     static UBool didInit=FALSE;\n+ *     static UBool didInit=false;\n@@ -912,1 +912,1 @@\n- *             didInit=TRUE;\n+ *             didInit=true;\n@@ -995,1 +995,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1043,1 +1043,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -1069,1 +1069,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1095,1 +1095,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1141,1 +1141,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1174,1 +1174,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1203,1 +1203,1 @@\n-U_STABLE wchar_t* U_EXPORT2\n+U_CAPI wchar_t* U_EXPORT2\n@@ -1232,1 +1232,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -1263,1 +1263,1 @@\n-U_STABLE char* U_EXPORT2\n+U_CAPI char* U_EXPORT2\n@@ -1293,1 +1293,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -1336,1 +1336,1 @@\n-U_STABLE char* U_EXPORT2\n+U_CAPI char* U_EXPORT2\n@@ -1381,1 +1381,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -1441,1 +1441,1 @@\n-U_STABLE UChar * U_EXPORT2\n+U_CAPI UChar * U_EXPORT2\n@@ -1471,1 +1471,1 @@\n-U_STABLE UChar32* U_EXPORT2\n+U_CAPI UChar32* U_EXPORT2\n@@ -1501,1 +1501,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -1544,1 +1544,1 @@\n-U_STABLE UChar32* U_EXPORT2\n+U_CAPI UChar32* U_EXPORT2\n@@ -1588,1 +1588,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n@@ -1629,1 +1629,1 @@\n-U_STABLE char* U_EXPORT2\n+U_CAPI char* U_EXPORT2\n@@ -1679,1 +1679,1 @@\n-U_STABLE UChar* U_EXPORT2\n+U_CAPI UChar* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/ustring.h","additions":67,"deletions":67,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -186,19 +186,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\n-U_NAMESPACE_BEGIN\n-\n-\/**\n- * \\class LocalUTextPointer\n- * \"Smart pointer\" class, closes a UText via utext_close().\n- * For most methods see the LocalPointerBase base class.\n- *\n- * @see LocalPointerBase\n- * @see LocalPointer\n- * @stable ICU 4.4\n- *\/\n-U_DEFINE_LOCAL_OPEN_POINTER(LocalUTextPointer, UText, utext_close);\n-\n-U_NAMESPACE_END\n-\n-#endif\n-\n@@ -226,1 +207,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -244,1 +225,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -261,1 +242,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -277,1 +258,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -293,1 +274,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -308,1 +289,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -345,1 +326,1 @@\n-  *  A shallow clone made with the readOnly parameter == FALSE will preserve the\n+  *  A shallow clone made with the readOnly parameter == false will preserve the\n@@ -361,2 +342,2 @@\n-  *  @param deep   TRUE to request a deep clone, FALSE for a shallow clone.\n-  *  @param readOnly TRUE to request that the cloned UText have read only access to the\n+  *  @param deep   true to request a deep clone, false for a shallow clone.\n+  *  @param readOnly true to request that the cloned UText have read only access to the\n@@ -371,1 +352,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -379,1 +360,1 @@\n-  *    If either or both of the parameters are NULL, the comparison is FALSE.\n+  *    If either or both of the parameters are NULL, the comparison is false.\n@@ -383,1 +364,1 @@\n-  *  @return    TRUE if the two UTexts are equal.\n+  *  @return    true if the two UTexts are equal.\n@@ -386,1 +367,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -407,1 +388,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -411,1 +392,1 @@\n- *  Return TRUE if calculating the length of the text could be expensive.\n+ *  Return true if calculating the length of the text could be expensive.\n@@ -420,1 +401,1 @@\n- * @return TRUE if determining the length of the text could be time consuming.\n+ * @return true if determining the length of the text could be time consuming.\n@@ -423,1 +404,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -451,1 +432,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -465,1 +446,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -487,1 +468,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -508,1 +489,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -530,1 +511,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -550,1 +531,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -565,1 +546,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -591,1 +572,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -606,1 +587,1 @@\n- * @return TRUE if the position could be moved the requested number of positions while\n+ * @return true if the position could be moved the requested number of positions while\n@@ -610,1 +591,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -635,1 +616,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -673,1 +654,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -769,6 +750,8 @@\n-#define UTEXT_SETNATIVEINDEX(ut, ix)                       \\\n-    { int64_t __offset = (ix) - (ut)->chunkNativeStart; \\\n-      if (__offset>=0 && __offset<(int64_t)(ut)->nativeIndexingLimit && (ut)->chunkContents[__offset]<0xdc00) { \\\n-          (ut)->chunkOffset=(int32_t)__offset; \\\n-      } else { \\\n-          utext_setNativeIndex((ut), (ix)); } }\n+#define UTEXT_SETNATIVEINDEX(ut, ix) UPRV_BLOCK_MACRO_BEGIN { \\\n+    int64_t __offset = (ix) - (ut)->chunkNativeStart; \\\n+    if (__offset>=0 && __offset<(int64_t)(ut)->nativeIndexingLimit && (ut)->chunkContents[__offset]<0xdc00) { \\\n+        (ut)->chunkOffset=(int32_t)__offset; \\\n+    } else { \\\n+        utext_setNativeIndex((ut), (ix)); \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -788,1 +771,1 @@\n- *  Return TRUE if the text can be written (modified) with utext_replace() or\n+ *  Return true if the text can be written (modified) with utext_replace() or\n@@ -792,1 +775,1 @@\n- *  Attempting to modify text when utext_isWriteable() is FALSE will fail -\n+ *  Attempting to modify text when utext_isWriteable() is false will fail -\n@@ -797,1 +780,1 @@\n- * @return TRUE if the text is modifiable.\n+ * @return true if the text is modifiable.\n@@ -805,1 +788,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -814,1 +797,1 @@\n-  * @return TRUE if the underlying text includes meta data.\n+  * @return true if the underlying text includes meta data.\n@@ -817,1 +800,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -828,1 +811,1 @@\n- * that is, ones where utext_isWritable() returns TRUE.\n+ * that is, ones where utext_isWritable() returns true.\n@@ -848,1 +831,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -870,1 +853,1 @@\n- * that is, ones where utext_isWritable() returns TRUE.\n+ * that is, ones where utext_isWritable() returns true.\n@@ -883,1 +866,1 @@\n- * @param move         If TRUE, then the substring is moved, not copied\/duplicated.\n+ * @param move         If true, then the substring is moved, not copied\/duplicated.\n@@ -888,1 +871,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -917,1 +900,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -992,1 +975,1 @@\n-  *  @param deep   TRUE to request a deep clone, FALSE for a shallow clone.\n+  *  @param deep   true to request a deep clone, false for a shallow clone.\n@@ -1028,1 +1011,1 @@\n- * @param forward     If TRUE, then the returned chunk must contain text\n+ * @param forward     If true, then the returned chunk must contain text\n@@ -1030,1 +1013,1 @@\n- *                    If FALSE, then the returned chunk must contain text\n+ *                    If false, then the returned chunk must contain text\n@@ -1134,1 +1117,1 @@\n- * @param move         If TRUE, then the substring is moved, not copied\/duplicated.\n+ * @param move         If true, then the substring is moved, not copied\/duplicated.\n@@ -1555,1 +1538,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -1600,0 +1583,19 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * \\class LocalUTextPointer\n+ * \"Smart pointer\" class, closes a UText via utext_close().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @stable ICU 4.4\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUTextPointer, UText, utext_close);\n+\n+U_NAMESPACE_END\n+\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utext.h","additions":74,"deletions":72,"binary":false,"changes":146,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n- * (http:\/\/userguide.icu-project.org\/strings).\n+ * (https:\/\/unicode-org.github.io\/icu\/userguide\/strings).\n@@ -127,1 +127,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -148,1 +148,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -158,1 +158,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -166,1 +166,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -174,1 +174,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -182,1 +182,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -190,1 +190,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -199,1 +199,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -208,1 +208,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utf.h","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * (http:\/\/userguide.icu-project.org\/strings).\n+ * (https:\/\/unicode-org.github.io\/icu\/userguide\/strings).\n@@ -37,0 +37,1 @@\n+#include <stdbool.h>\n@@ -47,1 +48,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -55,1 +56,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -63,1 +64,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -71,1 +72,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -80,1 +81,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -89,1 +90,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -166,1 +167,1 @@\n-#define U16_GET_UNSAFE(s, i, c) { \\\n+#define U16_GET_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -175,1 +176,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -200,1 +201,1 @@\n-#define U16_GET(s, start, i, length, c) { \\\n+#define U16_GET(s, start, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -214,1 +215,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -239,1 +240,1 @@\n-#define U16_GET_OR_FFFD(s, start, i, length, c) { \\\n+#define U16_GET_OR_FFFD(s, start, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -257,1 +258,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -280,1 +281,1 @@\n-#define U16_NEXT_UNSAFE(s, i, c) { \\\n+#define U16_NEXT_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -285,1 +286,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -308,1 +309,1 @@\n-#define U16_NEXT(s, i, length, c) { \\\n+#define U16_NEXT(s, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -317,1 +318,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -340,1 +341,1 @@\n-#define U16_NEXT_OR_FFFD(s, i, length, c) { \\\n+#define U16_NEXT_OR_FFFD(s, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -351,1 +352,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -366,1 +367,1 @@\n-#define U16_APPEND_UNSAFE(s, i, c) { \\\n+#define U16_APPEND_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -373,1 +374,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -382,1 +383,1 @@\n- * then isError is set to TRUE.\n+ * then isError is set to true.\n@@ -388,1 +389,1 @@\n- * @param isError output UBool set to TRUE if an error occurs, otherwise not modified\n+ * @param isError output UBool set to true if an error occurs, otherwise not modified\n@@ -392,1 +393,1 @@\n-#define U16_APPEND(s, i, capacity, c, isError) { \\\n+#define U16_APPEND(s, i, capacity, c, isError) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -399,1 +400,1 @@\n-        (isError)=TRUE; \\\n+        (isError)=true; \\\n@@ -401,1 +402,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -413,1 +414,1 @@\n-#define U16_FWD_1_UNSAFE(s, i) { \\\n+#define U16_FWD_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -417,1 +418,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -432,1 +433,1 @@\n-#define U16_FWD_1(s, i, length) { \\\n+#define U16_FWD_1(s, i, length) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -436,1 +437,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -450,1 +451,1 @@\n-#define U16_FWD_N_UNSAFE(s, i, n) { \\\n+#define U16_FWD_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -456,1 +457,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -473,1 +474,1 @@\n-#define U16_FWD_N(s, i, length, n) { \\\n+#define U16_FWD_N(s, i, length, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -479,1 +480,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -494,1 +495,1 @@\n-#define U16_SET_CP_START_UNSAFE(s, i) { \\\n+#define U16_SET_CP_START_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -498,1 +499,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -514,1 +515,1 @@\n-#define U16_SET_CP_START(s, start, i) { \\\n+#define U16_SET_CP_START(s, start, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -518,1 +519,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -542,1 +543,1 @@\n-#define U16_PREV_UNSAFE(s, i, c) { \\\n+#define U16_PREV_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -547,1 +548,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -569,1 +570,1 @@\n-#define U16_PREV(s, start, i, c) { \\\n+#define U16_PREV(s, start, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -578,1 +579,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -600,1 +601,1 @@\n-#define U16_PREV_OR_FFFD(s, start, i, c) { \\\n+#define U16_PREV_OR_FFFD(s, start, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -611,1 +612,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -624,1 +625,1 @@\n-#define U16_BACK_1_UNSAFE(s, i) { \\\n+#define U16_BACK_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -628,1 +629,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -642,1 +643,1 @@\n-#define U16_BACK_1(s, start, i) { \\\n+#define U16_BACK_1(s, start, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -646,1 +647,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -661,1 +662,1 @@\n-#define U16_BACK_N_UNSAFE(s, i, n) { \\\n+#define U16_BACK_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -667,1 +668,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -683,1 +684,1 @@\n-#define U16_BACK_N(s, start, i, n) { \\\n+#define U16_BACK_N(s, start, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -689,1 +690,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -704,1 +705,1 @@\n-#define U16_SET_CP_LIMIT_UNSAFE(s, i) { \\\n+#define U16_SET_CP_LIMIT_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -708,1 +709,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -727,1 +728,1 @@\n-#define U16_SET_CP_LIMIT(s, start, i, length) { \\\n+#define U16_SET_CP_LIMIT(s, start, i, length) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -731,1 +732,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utf16.h","additions":57,"deletions":56,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * (http:\/\/userguide.icu-project.org\/strings).\n+ * (https:\/\/unicode-org.github.io\/icu\/userguide\/strings).\n@@ -37,0 +37,1 @@\n+#include <stdbool.h>\n@@ -120,1 +121,1 @@\n- * however it is U_STABLE (not U_INTERNAL) since it is called by public macros in this\n+ * however it is called by public macros in this\n@@ -125,1 +126,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -132,1 +133,1 @@\n- * however it is U_STABLE (not U_INTERNAL) since it is called by public macros in this\n+ * however it is called by public macros in this\n@@ -137,1 +138,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -144,1 +145,1 @@\n- * however it is U_STABLE (not U_INTERNAL) since it is called by public macros in this\n+ * however it is called by public macros in this\n@@ -149,1 +150,1 @@\n-U_STABLE UChar32 U_EXPORT2\n+U_CAPI UChar32 U_EXPORT2\n@@ -156,1 +157,1 @@\n- * however it is U_STABLE (not U_INTERNAL) since it is called by public macros in this\n+ * however it is called by public macros in this\n@@ -161,1 +162,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -169,1 +170,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -177,1 +178,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -186,1 +187,1 @@\n- * @return TRUE or FALSE\n+ * @return true or false\n@@ -232,1 +233,1 @@\n-#define U8_GET_UNSAFE(s, i, c) { \\\n+#define U8_GET_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -236,1 +237,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -259,1 +260,1 @@\n-#define U8_GET(s, start, i, length, c) { \\\n+#define U8_GET(s, start, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -263,1 +264,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -290,1 +291,1 @@\n-#define U8_GET_OR_FFFD(s, start, i, length, c) { \\\n+#define U8_GET_OR_FFFD(s, start, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -294,1 +295,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -315,1 +316,1 @@\n-#define U8_NEXT_UNSAFE(s, i, c) { \\\n+#define U8_NEXT_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -329,1 +330,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -380,1 +381,1 @@\n-#define U8_INTERNAL_NEXT_OR_SUB(s, i, length, c, sub) { \\\n+#define U8_INTERNAL_NEXT_OR_SUB(s, i, length, c, sub) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -406,1 +407,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -421,1 +422,1 @@\n-#define U8_APPEND_UNSAFE(s, i, c) { \\\n+#define U8_APPEND_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -439,1 +440,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -448,1 +449,1 @@\n- * then isError is set to TRUE.\n+ * then isError is set to true.\n@@ -454,1 +455,1 @@\n- * @param isError output UBool set to TRUE if an error occurs, otherwise not modified\n+ * @param isError output UBool set to true if an error occurs, otherwise not modified\n@@ -458,1 +459,1 @@\n-#define U8_APPEND(s, i, capacity, c, isError) { \\\n+#define U8_APPEND(s, i, capacity, c, isError) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -475,1 +476,1 @@\n-        (isError)=TRUE; \\\n+        (isError)=true; \\\n@@ -477,1 +478,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -489,1 +490,1 @@\n-#define U8_FWD_1_UNSAFE(s, i) { \\\n+#define U8_FWD_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -491,1 +492,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -506,1 +507,1 @@\n-#define U8_FWD_1(s, i, length) { \\\n+#define U8_FWD_1(s, i, length) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -527,1 +528,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -541,1 +542,1 @@\n-#define U8_FWD_N_UNSAFE(s, i, n) { \\\n+#define U8_FWD_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -547,1 +548,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -564,1 +565,1 @@\n-#define U8_FWD_N(s, i, length, n) { \\\n+#define U8_FWD_N(s, i, length, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -570,1 +571,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -585,1 +586,1 @@\n-#define U8_SET_CP_START_UNSAFE(s, i) { \\\n+#define U8_SET_CP_START_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -587,1 +588,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -606,1 +607,1 @@\n-#define U8_SET_CP_START(s, start, i) { \\\n+#define U8_SET_CP_START(s, start, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -610,1 +611,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -638,1 +639,1 @@\n-#define U8_TRUNCATE_IF_INCOMPLETE(s, start, length) \\\n+#define U8_TRUNCATE_IF_INCOMPLETE(s, start, length) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -659,1 +660,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -682,1 +684,1 @@\n-#define U8_PREV_UNSAFE(s, i, c) { \\\n+#define U8_PREV_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -702,1 +704,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -724,1 +726,1 @@\n-#define U8_PREV(s, start, i, c) { \\\n+#define U8_PREV(s, start, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -729,1 +731,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -755,1 +757,1 @@\n-#define U8_PREV_OR_FFFD(s, start, i, c) { \\\n+#define U8_PREV_OR_FFFD(s, start, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -760,1 +762,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -773,1 +775,1 @@\n-#define U8_BACK_1_UNSAFE(s, i) { \\\n+#define U8_BACK_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -775,1 +777,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -789,1 +791,1 @@\n-#define U8_BACK_1(s, start, i) { \\\n+#define U8_BACK_1(s, start, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -793,1 +795,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -808,1 +810,1 @@\n-#define U8_BACK_N_UNSAFE(s, i, n) { \\\n+#define U8_BACK_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -814,1 +816,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -830,1 +832,1 @@\n-#define U8_BACK_N(s, start, i, n) { \\\n+#define U8_BACK_N(s, start, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -836,1 +838,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -851,1 +853,1 @@\n-#define U8_SET_CP_LIMIT_UNSAFE(s, i) { \\\n+#define U8_SET_CP_LIMIT_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -854,1 +856,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -873,1 +875,1 @@\n-#define U8_SET_CP_LIMIT(s, start, i, length) { \\\n+#define U8_SET_CP_LIMIT(s, start, i, length) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -878,1 +880,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utf8.h","additions":63,"deletions":61,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -22,3 +22,0 @@\n- *\/\n-\n-\/**\n@@ -115,1 +112,1 @@\n- * parameter \"strict\". If strict is FALSE, then only illegal sequences are detected.\n+ * parameter \"strict\". If strict is false, then only illegal sequences are detected.\n@@ -142,1 +139,1 @@\n- * @deprecated ICU 2.4. Use the macros in utf.h, utf16.h, utf8.h instead.\n+ * Deprecated ICU 2.4. Use the macros in utf.h, utf16.h, utf8.h instead.\n@@ -148,0 +145,4 @@\n+#include \"unicode\/utf.h\"\n+#include \"unicode\/utf8.h\"\n+#include \"unicode\/utf16.h\"\n+\n@@ -165,4 +166,0 @@\n-#include \"unicode\/utf.h\"\n-#include \"unicode\/utf8.h\"\n-#include \"unicode\/utf16.h\"\n-\n@@ -187,1 +184,1 @@\n- * with strict=FALSE.\n+ * with strict=false.\n@@ -368,1 +365,1 @@\n-#define UTF8_GET_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF8_GET_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -372,1 +369,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -375,1 +372,1 @@\n-#define UTF8_GET_CHAR_SAFE(s, start, i, length, c, strict) { \\\n+#define UTF8_GET_CHAR_SAFE(s, start, i, length, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -379,1 +376,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -382,1 +379,1 @@\n-#define UTF8_NEXT_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF8_NEXT_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -399,1 +396,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -402,1 +399,1 @@\n-#define UTF8_APPEND_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF8_APPEND_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -419,1 +416,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -422,1 +419,1 @@\n-#define UTF8_FWD_1_UNSAFE(s, i) { \\\n+#define UTF8_FWD_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -424,1 +421,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -427,1 +424,1 @@\n-#define UTF8_FWD_N_UNSAFE(s, i, n) { \\\n+#define UTF8_FWD_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -433,1 +430,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -436,1 +433,1 @@\n-#define UTF8_SET_CHAR_START_UNSAFE(s, i) { \\\n+#define UTF8_SET_CHAR_START_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -438,1 +435,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -441,1 +438,1 @@\n-#define UTF8_NEXT_CHAR_SAFE(s, i, length, c, strict) { \\\n+#define UTF8_NEXT_CHAR_SAFE(s, i, length, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -450,1 +447,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -453,1 +450,1 @@\n-#define UTF8_APPEND_CHAR_SAFE(s, i, length, c)  { \\\n+#define UTF8_APPEND_CHAR_SAFE(s, i, length, c)  UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -459,1 +456,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -471,1 +468,1 @@\n-#define UTF8_PREV_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF8_PREV_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -491,1 +488,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -494,1 +491,1 @@\n-#define UTF8_BACK_1_UNSAFE(s, i) { \\\n+#define UTF8_BACK_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -496,1 +493,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -499,1 +496,1 @@\n-#define UTF8_BACK_N_UNSAFE(s, i, n) { \\\n+#define UTF8_BACK_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -505,1 +502,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -508,1 +505,1 @@\n-#define UTF8_SET_CHAR_LIMIT_UNSAFE(s, i) { \\\n+#define UTF8_SET_CHAR_LIMIT_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -511,1 +508,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -514,1 +511,1 @@\n-#define UTF8_PREV_CHAR_SAFE(s, start, i, c, strict) { \\\n+#define UTF8_PREV_CHAR_SAFE(s, start, i, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -523,1 +520,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -596,1 +593,1 @@\n-#define UTF16_GET_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF16_GET_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -605,1 +602,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -608,1 +605,1 @@\n-#define UTF16_GET_CHAR_SAFE(s, start, i, length, c, strict) { \\\n+#define UTF16_GET_CHAR_SAFE(s, start, i, length, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -632,1 +629,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -635,1 +632,1 @@\n-#define UTF16_NEXT_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF16_NEXT_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -640,1 +637,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -643,1 +640,1 @@\n-#define UTF16_APPEND_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF16_APPEND_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -650,1 +647,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -653,1 +650,1 @@\n-#define UTF16_FWD_1_UNSAFE(s, i) { \\\n+#define UTF16_FWD_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -657,1 +654,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -660,1 +657,1 @@\n-#define UTF16_FWD_N_UNSAFE(s, i, n) { \\\n+#define UTF16_FWD_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -666,1 +663,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -669,1 +666,1 @@\n-#define UTF16_SET_CHAR_START_UNSAFE(s, i) { \\\n+#define UTF16_SET_CHAR_START_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -673,1 +670,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -676,1 +673,1 @@\n-#define UTF16_NEXT_CHAR_SAFE(s, i, length, c, strict) { \\\n+#define UTF16_NEXT_CHAR_SAFE(s, i, length, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -692,1 +689,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -695,1 +692,1 @@\n-#define UTF16_APPEND_CHAR_SAFE(s, i, length, c) { \\\n+#define UTF16_APPEND_CHAR_SAFE(s, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -708,1 +705,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -720,1 +717,1 @@\n-#define UTF16_PREV_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF16_PREV_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -725,1 +722,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -728,1 +725,1 @@\n-#define UTF16_BACK_1_UNSAFE(s, i) { \\\n+#define UTF16_BACK_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -732,1 +729,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -735,1 +732,1 @@\n-#define UTF16_BACK_N_UNSAFE(s, i, n) { \\\n+#define UTF16_BACK_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -741,1 +738,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -744,1 +741,1 @@\n-#define UTF16_SET_CHAR_LIMIT_UNSAFE(s, i) { \\\n+#define UTF16_SET_CHAR_LIMIT_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -748,1 +745,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -751,1 +748,1 @@\n-#define UTF16_PREV_CHAR_SAFE(s, start, i, c, strict) { \\\n+#define UTF16_PREV_CHAR_SAFE(s, start, i, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -767,1 +764,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -833,1 +830,1 @@\n-#define UTF32_GET_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF32_GET_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -835,1 +832,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -838,1 +835,1 @@\n-#define UTF32_GET_CHAR_SAFE(s, start, i, length, c, strict) { \\\n+#define UTF32_GET_CHAR_SAFE(s, start, i, length, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -843,1 +840,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -848,1 +845,1 @@\n-#define UTF32_NEXT_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF32_NEXT_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -850,1 +847,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -853,1 +850,1 @@\n-#define UTF32_APPEND_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF32_APPEND_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -855,1 +852,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -858,1 +855,1 @@\n-#define UTF32_FWD_1_UNSAFE(s, i) { \\\n+#define UTF32_FWD_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -860,1 +857,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -863,1 +860,1 @@\n-#define UTF32_FWD_N_UNSAFE(s, i, n) { \\\n+#define UTF32_FWD_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -865,1 +862,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -868,2 +865,2 @@\n-#define UTF32_SET_CHAR_START_UNSAFE(s, i) { \\\n-}\n+#define UTF32_SET_CHAR_START_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n+} UPRV_BLOCK_MACRO_END\n@@ -872,1 +869,1 @@\n-#define UTF32_NEXT_CHAR_SAFE(s, i, length, c, strict) { \\\n+#define UTF32_NEXT_CHAR_SAFE(s, i, length, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -877,1 +874,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -880,1 +877,1 @@\n-#define UTF32_APPEND_CHAR_SAFE(s, i, length, c) { \\\n+#define UTF32_APPEND_CHAR_SAFE(s, i, length, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -886,1 +883,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -889,1 +886,1 @@\n-#define UTF32_FWD_1_SAFE(s, i, length) { \\\n+#define UTF32_FWD_1_SAFE(s, i, length) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -891,1 +888,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -894,1 +891,1 @@\n-#define UTF32_FWD_N_SAFE(s, i, length, n) { \\\n+#define UTF32_FWD_N_SAFE(s, i, length, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -898,1 +895,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -901,2 +898,2 @@\n-#define UTF32_SET_CHAR_START_SAFE(s, start, i) { \\\n-}\n+#define UTF32_SET_CHAR_START_SAFE(s, start, i) UPRV_BLOCK_MACRO_BEGIN { \\\n+} UPRV_BLOCK_MACRO_END\n@@ -907,1 +904,1 @@\n-#define UTF32_PREV_CHAR_UNSAFE(s, i, c) { \\\n+#define UTF32_PREV_CHAR_UNSAFE(s, i, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -909,1 +906,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -912,1 +909,1 @@\n-#define UTF32_BACK_1_UNSAFE(s, i) { \\\n+#define UTF32_BACK_1_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -914,1 +911,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -917,1 +914,1 @@\n-#define UTF32_BACK_N_UNSAFE(s, i, n) { \\\n+#define UTF32_BACK_N_UNSAFE(s, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -919,1 +916,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -922,2 +919,2 @@\n-#define UTF32_SET_CHAR_LIMIT_UNSAFE(s, i) { \\\n-}\n+#define UTF32_SET_CHAR_LIMIT_UNSAFE(s, i) UPRV_BLOCK_MACRO_BEGIN { \\\n+} UPRV_BLOCK_MACRO_END\n@@ -926,1 +923,1 @@\n-#define UTF32_PREV_CHAR_SAFE(s, start, i, c, strict) { \\\n+#define UTF32_PREV_CHAR_SAFE(s, start, i, c, strict) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -931,1 +928,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -934,1 +931,1 @@\n-#define UTF32_BACK_1_SAFE(s, start, i) { \\\n+#define UTF32_BACK_1_SAFE(s, start, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -936,1 +933,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -939,1 +936,1 @@\n-#define UTF32_BACK_N_SAFE(s, start, i, n) { \\\n+#define UTF32_BACK_N_SAFE(s, start, i, n) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -944,1 +941,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -947,2 +944,2 @@\n-#define UTF32_SET_CHAR_LIMIT_SAFE(s, i, length) { \\\n-}\n+#define UTF32_SET_CHAR_LIMIT_SAFE(s, i, length) UPRV_BLOCK_MACRO_BEGIN { \\\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utf_old.h","additions":103,"deletions":106,"binary":false,"changes":209,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+\n@@ -86,0 +87,1 @@\n+\n@@ -104,0 +106,1 @@\n+\n@@ -109,1 +112,1 @@\n-    UTRACE_COLLATION_LIMIT\n+    UTRACE_COLLATION_LIMIT,\n@@ -111,0 +114,127 @@\n+\n+    \/**\n+     * The lowest resource\/data location.\n+     * @stable ICU 65\n+     *\/\n+    UTRACE_UDATA_START=0x3000,\n+\n+    \/**\n+     * Indicates that a value was read from a resource bundle. Provides three\n+     * C-style strings to UTraceData: type, file name, and resource path. The\n+     * possible types are:\n+     *\n+     * - \"string\" (a string value was accessed)\n+     * - \"binary\" (a binary value was accessed)\n+     * - \"intvector\" (a integer vector value was accessed)\n+     * - \"int\" (a signed integer value was accessed)\n+     * - \"uint\" (a unsigned integer value was accessed)\n+     * - \"get\" (a path was loaded, but the value was not accessed)\n+     * - \"getalias\" (a path was loaded, and an alias was resolved)\n+     *\n+     * @stable ICU 65\n+     *\/\n+    UTRACE_UDATA_RESOURCE=UTRACE_UDATA_START,\n+\n+    \/**\n+     * Indicates that a resource bundle was opened.\n+     *\n+     * Provides one C-style string to UTraceData: file name.\n+     * @stable ICU 65\n+     *\/\n+    UTRACE_UDATA_BUNDLE,\n+\n+    \/**\n+     * Indicates that a data file was opened, but not *.res files.\n+     *\n+     * Provides one C-style string to UTraceData: file name.\n+     *\n+     * @stable ICU 65\n+     *\/\n+    UTRACE_UDATA_DATA_FILE,\n+\n+    \/**\n+     * Indicates that a *.res file was opened.\n+     *\n+     * This differs from UTRACE_UDATA_BUNDLE because a res file is typically\n+     * opened only once per application runtime, but the bundle corresponding\n+     * to that res file may be opened many times.\n+     *\n+     * Provides one C-style string to UTraceData: file name.\n+     *\n+     * @stable ICU 65\n+     *\/\n+    UTRACE_UDATA_RES_FILE,\n+\n+#ifndef U_HIDE_INTERNAL_API\n+    \/**\n+     * One more than the highest normal resource\/data trace location.\n+     * @internal The numeric value may change over time, see ICU ticket #12420.\n+     *\/\n+    UTRACE_RES_DATA_LIMIT,\n+#endif  \/\/ U_HIDE_INTERNAL_API\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * The lowest break iterator location.\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_START=0x4000,\n+\n+    \/**\n+     * Indicates that a character instance of break iterator was created.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_CREATE_CHARACTER = UTRACE_UBRK_START,\n+\n+    \/**\n+     * Indicates that a word instance of break iterator was created.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_CREATE_WORD,\n+\n+    \/**\n+     * Indicates that a line instance of break iterator was created.\n+     *\n+     * Provides one C-style string to UTraceData: the lb value (\"\",\n+     * \"loose\", \"strict\", or \"normal\").\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_CREATE_LINE,\n+\n+    \/**\n+     * Indicates that a sentence instance of break iterator was created.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_CREATE_SENTENCE,\n+\n+    \/**\n+     * Indicates that a title instance of break iterator was created.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_CREATE_TITLE,\n+\n+    \/**\n+     * Indicates that an internal dictionary break engine was created.\n+     *\n+     * Provides one C-style string to UTraceData: the script code of what\n+     * the break engine cover (\"Hani\", \"Khmr\", \"Laoo\", \"Mymr\", or \"Thai\").\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UTRACE_UBRK_CREATE_BREAK_ENGINE,\n+\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n+#ifndef U_HIDE_INTERNAL_API\n+    \/**\n+     * One more than the highest normal break iterator trace location.\n+     * @internal The numeric value may change over time, see ICU ticket #12420.\n+     *\/\n+    UTRACE_UBRK_LIMIT,\n+#endif  \/\/ U_HIDE_INTERNAL_API\n+\n@@ -118,1 +248,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -126,1 +256,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -200,1 +330,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -214,1 +344,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -336,1 +466,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -357,1 +487,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -374,1 +504,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utrace.h","additions":138,"deletions":8,"binary":false,"changes":146,"status":"modified"},{"patch":"@@ -388,2 +388,21 @@\n- * Error code to replace exception handling, so that the code is compatible with all C++ compilers,\n- * and to use the same mechanism for C and C++.\n+ * Standard ICU4C error code type, a substitute for exceptions.\n+ *\n+ * Initialize the UErrorCode with U_ZERO_ERROR, and check for success or\n+ * failure using U_SUCCESS() or U_FAILURE():\n+ *\n+ *     UErrorCode errorCode = U_ZERO_ERROR;\n+ *     \/\/ call ICU API that needs an error code parameter.\n+ *     if (U_FAILURE(errorCode)) {\n+ *         \/\/ An error occurred. Handle it here.\n+ *     }\n+ *\n+ * C++ code should use icu::ErrorCode, available in unicode\/errorcode.h, or a\n+ * suitable subclass.\n+ *\n+ * For more information, see:\n+ * http:\/\/icu-project.org\/userguide\/conventions\n+ *\n+ * Note: By convention, ICU functions that take a reference (C++) or a pointer\n+ * (C) to a UErrorCode first test:\n+ *\n+ *     if (U_FAILURE(errorCode)) { return immediately; }\n@@ -391,3 +410,0 @@\n- * \\par\n- * ICU functions that take a reference (C++) or a pointer (C) to a UErrorCode\n- * first test if(U_FAILURE(errorCode)) { return immediately; }\n@@ -397,2 +413,0 @@\n- * \\par\n- * Error codes should be tested using U_FAILURE() and U_SUCCESS().\n@@ -468,0 +482,10 @@\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * The input is impractically long for an operation.\n+     * It is rejected because it may lead to problems such as excessive\n+     * processing time, stack depth, or heap memory requirements.\n+     *\n+     * @draft ICU 68\n+     *\/\n+    U_INPUT_TOO_LONG_ERROR = 31,\n+#endif  \/\/ U_HIDE_DRAFT_API\n@@ -474,1 +498,1 @@\n-    U_STANDARD_ERROR_LIMIT,\n+    U_STANDARD_ERROR_LIMIT = 32,\n@@ -704,1 +728,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/utypes.h","additions":33,"deletions":9,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-#define U_ICU_VERSION_MAJOR_NUM 64\n+#define U_ICU_VERSION_MAJOR_NUM 68\n@@ -89,1 +89,1 @@\n-#define U_ICU_VERSION_SUFFIX _64\n+#define U_ICU_VERSION_SUFFIX _68\n@@ -142,1 +142,1 @@\n-#define U_ICU_VERSION \"64.2\"\n+#define U_ICU_VERSION \"68.2\"\n@@ -151,1 +151,1 @@\n- * See http:\/\/userguide.icu-project.org\/design#TOC-Version-Numbers-in-ICU\n+ * See https:\/\/unicode-org.github.io\/icu\/userguide\/design#version-numbers-in-icu\n@@ -155,1 +155,1 @@\n-#define U_ICU_VERSION_SHORT \"64\"\n+#define U_ICU_VERSION_SHORT \"68\"\n@@ -161,1 +161,1 @@\n-#define U_ICU_DATA_VERSION \"64.2\"\n+#define U_ICU_DATA_VERSION \"68.2\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uvernum.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -65,0 +65,3 @@\n+\/* Define C++ namespace symbols. *\/\n+#ifdef __cplusplus\n+\n@@ -67,5 +70,2 @@\n- * This is used to begin a declaration of a public ICU C++ API.\n- * When not compiling for C++, it does nothing.\n- * When compiling for C++, it begins an extern \"C++\" linkage block (to protect\n- * against cases in which an external client includes ICU header files inside\n- * an extern \"C\" linkage block).\n+ * This is used to begin a declaration of a public ICU C++ API within\n+ * versioned-ICU-namespace block.\n@@ -73,1 +73,0 @@\n- * It also begins a versioned-ICU-namespace block.\n@@ -80,3 +79,1 @@\n- * When not compiling for C++, it does nothing.\n- * When compiling for C++, it ends the extern \"C++\" block begun by\n- * U_NAMESPACE_BEGIN.\n+ * It ends the versioned-ICU-namespace block begun by U_NAMESPACE_BEGIN.\n@@ -84,1 +81,0 @@\n- * It also ends the versioned-ICU-namespace block begun by U_NAMESPACE_BEGIN.\n@@ -92,3 +88,0 @@\n- * This is invoked by default; we recommend that you turn it off:\n- * See the \"Recommended Build Options\" section of the ICU4C readme\n- * (http:\/\/source.icu-project.org\/repos\/icu\/icu\/trunk\/readme.html#RecBuild)\n@@ -108,2 +101,0 @@\n-\/* Define C++ namespace symbols. *\/\n-#ifdef __cplusplus\n@@ -119,2 +110,2 @@\n-#   define U_NAMESPACE_BEGIN extern \"C++\" { namespace U_ICU_NAMESPACE {\n-#   define U_NAMESPACE_END } }\n+#   define U_NAMESPACE_BEGIN namespace U_ICU_NAMESPACE {\n+#   define U_NAMESPACE_END }\n@@ -136,6 +127,1 @@\n-#else\n-#   define U_NAMESPACE_BEGIN\n-#   define U_NAMESPACE_END\n-#   define U_NAMESPACE_USE\n-#   define U_NAMESPACE_QUALIFIER\n-#endif\n+#endif \/* __cplusplus *\/\n@@ -158,1 +144,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -172,1 +158,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -188,1 +174,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -199,1 +185,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unicode\/uversion.h","additions":13,"deletions":27,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -16,0 +16,1 @@\n+#include <mutex>\n@@ -17,1 +18,0 @@\n-#include \"mutex.h\"\n@@ -21,1 +21,0 @@\n-#include \"umutex.h\"\n@@ -24,8 +23,2 @@\n-static icu::UMutex *gCacheMutex() {\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n-static icu::UConditionVar *gInProgressValueAddedCond() {\n-    static icu::UConditionVar cv = U_CONDITION_INITIALIZER;\n-    return &cv;\n-}\n+static std::mutex *gCacheMutex = nullptr;\n+static std::condition_variable *gInProgressValueAddedCond;\n@@ -42,4 +35,6 @@\n-    if (gCache) {\n-        delete gCache;\n-        gCache = NULL;\n-    }\n+    delete gCache;\n+    gCache = nullptr;\n+    gCacheMutex->~mutex();\n+    gCacheMutex = nullptr;\n+    gInProgressValueAddedCond->~condition_variable();\n+    gInProgressValueAddedCond = nullptr;\n@@ -80,0 +75,2 @@\n+    gCacheMutex = STATIC_NEW(std::mutex);\n+    gInProgressValueAddedCond = STATIC_NEW(std::condition_variable);\n@@ -141,1 +138,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -147,1 +144,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -152,1 +149,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -157,1 +154,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -162,1 +159,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -171,1 +168,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -190,1 +187,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -230,1 +227,1 @@\n-        Mutex lock(gCacheMutex());\n+        std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -317,1 +314,1 @@\n-        _registerMaster(keyToAdopt, value);\n+        _registerPrimary(keyToAdopt, value);\n@@ -331,1 +328,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::lock_guard<std::mutex> lock(*gCacheMutex);\n@@ -344,1 +341,1 @@\n-    \/\/ Run an eviction slice. This will run even if we added a master entry\n+    \/\/ Run an eviction slice. This will run even if we added a primary entry\n@@ -356,1 +353,1 @@\n-    Mutex lock(gCacheMutex());\n+    std::unique_lock<std::mutex> lock(*gCacheMutex);\n@@ -363,2 +360,2 @@\n-        umtx_condWait(gInProgressValueAddedCond(), gCacheMutex());\n-        element = uhash_find(fHashtable, &key);\n+         gInProgressValueAddedCond->wait(lock);\n+         element = uhash_find(fHashtable, &key);\n@@ -409,1 +406,1 @@\n-void UnifiedCache::_registerMaster(\n+void UnifiedCache::_registerPrimary(\n@@ -411,1 +408,1 @@\n-    theKey->fIsMaster = true;\n+    theKey->fIsPrimary = true;\n@@ -426,1 +423,1 @@\n-        _registerMaster(theKey, value);\n+        _registerPrimary(theKey, value);\n@@ -436,1 +433,1 @@\n-    umtx_condBroadcast(gInProgressValueAddedCond());\n+    gInProgressValueAddedCond->notify_all();\n@@ -480,1 +477,1 @@\n-    \/\/ We can evict entries that are either not a master or have just\n+    \/\/ We can evict entries that are either not a primary or have just\n@@ -482,1 +479,1 @@\n-    return (!theKey->fIsMaster || (theValue->softRefCount == 1 && theValue->noHardReferences()));\n+    return (!theKey->fIsPrimary || (theValue->softRefCount == 1 && theValue->noHardReferences()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unifiedcache.cpp","additions":31,"deletions":34,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-   CacheKeyBase() : fCreationStatus(U_ZERO_ERROR), fIsMaster(FALSE) {}\n+   CacheKeyBase() : fCreationStatus(U_ZERO_ERROR), fIsPrimary(false) {}\n@@ -43,1 +43,1 @@\n-           : UObject(other), fCreationStatus(other.fCreationStatus), fIsMaster(FALSE) { }\n+           : UObject(other), fCreationStatus(other.fCreationStatus), fIsPrimary(false) { }\n@@ -91,1 +91,1 @@\n-   mutable UBool fIsMaster;\n+   mutable UBool fIsPrimary;\n@@ -150,1 +150,1 @@\n-           return TRUE;\n+           return true;\n@@ -153,1 +153,1 @@\n-           return FALSE;\n+           return false;\n@@ -362,1 +362,1 @@\n-    * cache values then _flush should be called in a loop until it returns FALSE.\n+    * cache values then _flush should be called in a loop until it returns false.\n@@ -373,1 +373,1 @@\n-    *   @return TRUE if any value in cache was flushed or FALSE otherwise.\n+    *   @return true if any value in cache was flushed or false otherwise.\n@@ -398,2 +398,2 @@\n-     * On exit, either returns FALSE (In this\n-     * case caller should try to create the object) or returns TRUE with value\n+     * On exit, either returns false (In this\n+     * case caller should try to create the object) or returns true with value\n@@ -401,2 +401,2 @@\n-     * FALSE is returned status may be set to failure if an in progress hash\n-     * entry could not be made but value will remain unchanged. When TRUE is\n+     * false is returned status may be set to failure if an in progress hash\n+     * entry could not be made but value will remain unchanged. When true is\n@@ -466,1 +466,1 @@\n-    * Register a master cache entry. A master key is the first key to create\n+    * Register a primary cache entry. A primary key is the first key to create\n@@ -468,1 +468,1 @@\n-    * produce referneces to an already existing SharedObject are not masters -\n+    * produce referneces to an already existing SharedObject are not primary -\n@@ -472,1 +472,1 @@\n-    * On exit, items in use count incremented, entry is marked as a master\n+    * On exit, items in use count incremented, entry is marked as a primary\n@@ -476,1 +476,1 @@\n-   void _registerMaster(const CacheKeyBase *theKey, const SharedObject *value) const;\n+   void _registerPrimary(const CacheKeyBase *theKey, const SharedObject *value) const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unifiedcache.h","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ uniquecharstr.h\n+\/\/ created: 2020sep01 Frank Yung-Fong Tang\n+\n+#ifndef __UNIQUECHARSTR_H__\n+#define __UNIQUECHARSTR_H__\n+\n+#include \"charstr.h\"\n+#include \"uassert.h\"\n+#include \"uhash.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * Stores NUL-terminated strings with duplicate elimination.\n+ * Checks for unique UTF-16 string pointers and converts to invariant characters.\n+ *\n+ * Intended to be stack-allocated. Add strings, get a unique number for each,\n+ * freeze the object, get a char * pointer for each string,\n+ * call orphanCharStrings() to capture the string storage, and let this object go out of scope.\n+ *\/\n+class UniqueCharStrings {\n+public:\n+    UniqueCharStrings(UErrorCode &errorCode) : strings(nullptr) {\n+        \/\/ Note: We hash on string contents but store stable char16_t * pointers.\n+        \/\/ If the strings are stored in resource bundles which should be built with\n+        \/\/ duplicate elimination, then we should be able to hash on just the pointer values.\n+        uhash_init(&map, uhash_hashUChars, uhash_compareUChars, uhash_compareLong, &errorCode);\n+        if (U_FAILURE(errorCode)) { return; }\n+        strings = new CharString();\n+        if (strings == nullptr) {\n+            errorCode = U_MEMORY_ALLOCATION_ERROR;\n+        }\n+    }\n+    ~UniqueCharStrings() {\n+        uhash_close(&map);\n+        delete strings;\n+    }\n+\n+    \/** Returns\/orphans the CharString that contains all strings. *\/\n+    CharString *orphanCharStrings() {\n+        CharString *result = strings;\n+        strings = nullptr;\n+        return result;\n+    }\n+\n+    \/**\n+     * Adds a string and returns a unique number for it.\n+     * The string's buffer contents must not change, nor move around in memory,\n+     * while this UniqueCharStrings is in use.\n+     * The string contents must be NUL-terminated exactly at s.length().\n+     *\n+     * Best used with read-only-alias UnicodeString objects that point to\n+     * stable storage, such as strings returned by resource bundle functions.\n+     *\/\n+    int32_t add(const UnicodeString &s, UErrorCode &errorCode) {\n+        if (U_FAILURE(errorCode)) { return 0; }\n+        if (isFrozen) {\n+            errorCode = U_NO_WRITE_PERMISSION;\n+            return 0;\n+        }\n+        \/\/ The string points into the resource bundle.\n+        const char16_t *p = s.getBuffer();\n+        int32_t oldIndex = uhash_geti(&map, p);\n+        if (oldIndex != 0) {  \/\/ found duplicate\n+            return oldIndex;\n+        }\n+        \/\/ Explicit NUL terminator for the previous string.\n+        \/\/ The strings object is also terminated with one implicit NUL.\n+        strings->append(0, errorCode);\n+        int32_t newIndex = strings->length();\n+        strings->appendInvariantChars(s, errorCode);\n+        uhash_puti(&map, const_cast<char16_t *>(p), newIndex, &errorCode);\n+        return newIndex;\n+    }\n+\n+    void freeze() { isFrozen = true; }\n+\n+    \/**\n+     * Returns a string pointer for its unique number, if this object is frozen.\n+     * Otherwise nullptr.\n+     *\/\n+    const char *get(int32_t i) const {\n+        U_ASSERT(isFrozen);\n+        return isFrozen && i > 0 ? strings->data() + i : nullptr;\n+    }\n+\n+private:\n+    UHashtable map;\n+    CharString *strings;\n+    bool isFrozen = false;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif  \/\/ __UNIQUECHARSTR_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uniquecharstr.h","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -281,1 +281,1 @@\n-UnicodeFunctor* UnicodeSet::clone() const {\n+UnicodeSet* UnicodeSet::clone() const {\n@@ -285,1 +285,1 @@\n-UnicodeFunctor *UnicodeSet::cloneAsThawed() const {\n+UnicodeSet *UnicodeSet::cloneAsThawed() const {\n@@ -2175,1 +2175,1 @@\n-UnicodeFunctor *UnicodeSet::freeze() {\n+UnicodeSet *UnicodeSet::freeze() {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uniset.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -805,1 +805,4 @@\n-#define FAIL(ec) {ec=U_ILLEGAL_ARGUMENT_ERROR; return *this;}\n+#define FAIL(ec) UPRV_BLOCK_MACRO_BEGIN { \\\n+    ec=U_ILLEGAL_ARGUMENT_ERROR; \\\n+    return *this; \\\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uniset_props.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -403,1 +403,1 @@\n-        pSpanNotSet=(UnicodeSet *)otherStringSpan.pSpanNotSet->clone();\n+        pSpanNotSet=otherStringSpan.pSpanNotSet->clone();\n@@ -439,1 +439,1 @@\n-        UnicodeSet *newSet=(UnicodeSet *)spanSet.cloneAsThawed();\n+        UnicodeSet *newSet=spanSet.cloneAsThawed();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unisetspan.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,2 +68,2 @@\n-     * @return TRUE if strings need to be checked (call span() here),\n-     *         FALSE if not (use a BMPSet for best performance).\n+     * @return true if strings need to be checked (call span() here),\n+     *         false if not (use a BMPSet for best performance).\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unisetspan.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-Replaceable *\n+UnicodeString *\n@@ -1566,1 +1566,5 @@\n-  int32_t newLength = oldLength + srcLength;\n+  int32_t newLength;\n+  if (uprv_add32_overflow(oldLength, srcLength, &newLength)) {\n+    setToBogus();\n+    return *this;\n+  }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unistr.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -421,1 +421,1 @@\n- * This bit is only valid after (a)..(e) test FALSE; test NFD_NO before (f) as well.\n+ * This bit is only valid after (a)..(e) test false; test NFD_NO before (f) as well.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/unormimp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,0 +71,6 @@\n+#if !defined _POSIX_C_SOURCE && \\\n+    defined(__APPLE__) && defined(__MACH__) && !defined(__clang__)\n+\/\/ Needed to prevent EOWNERDEAD issues with GCC on Mac\n+#define _POSIX_C_SOURCE 200809L\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uposixdefs.h","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -483,0 +483,5 @@\n+static int32_t scriptGetMaxValue(const IntProperty &\/*prop*\/, UProperty \/*which*\/) {\n+    uint32_t scriptX=uprv_getMaxValues(0)&UPROPS_SCRIPT_X_MASK;\n+    return uprops_mergeScriptCodeOrIndex(scriptX);\n+}\n+\n@@ -589,1 +594,1 @@\n-    { 0,                UPROPS_SCRIPT_MASK, 0,              getScript, defaultGetMaxValue },\n+    { UPROPS_SRC_PROPSVEC, 0, 0,                            getScript, scriptGetMaxValue },\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uprops.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n- * 23..22   3..1: Bits 7..0 = Script_Extensions index\n+ * 23..22   3..1: Bits 21..20 & 7..0 = Script_Extensions index\n@@ -128,2 +128,2 @@\n- *             0: Script=bits 7..0\n- * 21..20   reserved\n+ *             0: Script=bits 21..20 & 7..0\n+ * 21..20   Bits 9..8 of the UScriptCode, or index to Script_Extensions\n@@ -140,1 +140,1 @@\n-#define UPROPS_SCRIPT_X_MASK    0x00c000ff\n+#define UPROPS_SCRIPT_X_MASK    0x00f000ff\n@@ -143,0 +143,7 @@\n+\/\/ The UScriptCode or Script_Extensions index is split across two bit fields.\n+\/\/ (Starting with Unicode 13\/ICU 66\/2019 due to more varied Script_Extensions.)\n+\/\/ Shift the high bits right by 12 to assemble the full value.\n+#define UPROPS_SCRIPT_HIGH_MASK    0x00300000\n+#define UPROPS_SCRIPT_HIGH_SHIFT   12\n+#define UPROPS_MAX_SCRIPT          0x3ff\n+\n@@ -149,1 +156,1 @@\n-#define UPROPS_SCRIPT_MASK      0x000000ff\n+#define UPROPS_SCRIPT_LOW_MASK  0x000000ff\n@@ -156,0 +163,14 @@\n+#ifdef __cplusplus\n+\n+namespace {\n+\n+inline uint32_t uprops_mergeScriptCodeOrIndex(uint32_t scriptX) {\n+    return\n+        ((scriptX & UPROPS_SCRIPT_HIGH_MASK) >> UPROPS_SCRIPT_HIGH_SHIFT) |\n+        (scriptX & UPROPS_SCRIPT_LOW_MASK);\n+}\n+\n+}  \/\/ namespace\n+\n+#endif  \/\/ __cplusplus\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uprops.h","additions":26,"deletions":5,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"mutex.h\"\n@@ -41,0 +42,1 @@\n+#include \"uresdata.h\"\n@@ -50,1 +52,1 @@\n-static icu::UInitOnce gCacheInitOnce;\n+static icu::UInitOnce gCacheInitOnce = U_INITONCE_INITIALIZER;\n@@ -52,4 +54,1 @@\n-static UMutex *resbMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex resbMutex;\n@@ -99,1 +98,1 @@\n-    umtx_lock(resbMutex());\n+    Mutex lock(&resbMutex);\n@@ -105,1 +104,0 @@\n-    umtx_unlock(resbMutex());\n@@ -187,1 +185,1 @@\n-    umtx_lock(resbMutex());\n+    Mutex lock(&resbMutex);\n@@ -189,1 +187,0 @@\n-        umtx_unlock(resbMutex());\n@@ -221,1 +218,0 @@\n-    umtx_unlock(resbMutex());\n@@ -235,1 +231,1 @@\n-    umtx_lock(resbMutex());\n+    Mutex lock(&resbMutex);\n@@ -237,1 +233,0 @@\n-      umtx_unlock(resbMutex());\n@@ -256,3 +251,0 @@\n-\n-    umtx_unlock(resbMutex());\n-\n@@ -404,1 +396,2 @@\n-                    const UChar *alias = res_getString(&(r->fData), aliasres, &aliasLen);\n+                    \/\/ No tracing: called during initial data loading\n+                    const UChar *alias = res_getStringNoTrace(&(r->fData), aliasres, &aliasLen);\n@@ -545,1 +538,2 @@\n-            const UChar *parentLocaleName = res_getString(&(t1->fData), parentRes, &parentLocaleLen);\n+            \/\/ No tracing: called during initial data loading\n+            const UChar *parentLocaleName = res_getStringNoTrace(&(t1->fData), parentRes, &parentLocaleLen);\n@@ -669,4 +663,38 @@\n-    umtx_lock(resbMutex());\n-    { \/* umtx_lock *\/\n-        \/* We're going to skip all the locales that do not have any data *\/\n-        r = findFirstExisting(path, name, &isRoot, &hasChopped, &isDefault, &intStatus);\n+    Mutex lock(&resbMutex);    \/\/ Lock resbMutex until the end of this function.\n+\n+    \/* We're going to skip all the locales that do not have any data *\/\n+    r = findFirstExisting(path, name, &isRoot, &hasChopped, &isDefault, &intStatus);\n+\n+    \/\/ If we failed due to out-of-memory, report the failure and exit early.\n+    if (intStatus == U_MEMORY_ALLOCATION_ERROR) {\n+        *status = intStatus;\n+        goto finish;\n+    }\n+\n+    if(r != NULL) { \/* if there is one real locale, we can look for parents. *\/\n+        t1 = r;\n+        hasRealData = TRUE;\n+        if ( usingUSRData ) {  \/* This code inserts user override data into the inheritance chain *\/\n+            UErrorCode usrStatus = U_ZERO_ERROR;\n+            UResourceDataEntry *u1 = init_entry(t1->fName, usrDataPath, &usrStatus);\n+            \/\/ If we failed due to out-of-memory, report the failure and exit early.\n+            if (intStatus == U_MEMORY_ALLOCATION_ERROR) {\n+                *status = intStatus;\n+                goto finish;\n+            }\n+            if ( u1 != NULL ) {\n+                if(u1->fBogus == U_ZERO_ERROR) {\n+                    u1->fParent = t1;\n+                    r = u1;\n+                } else {\n+                    \/* the USR override data wasn't found, set it to be deleted *\/\n+                    u1->fCountExisting = 0;\n+                }\n+            }\n+        }\n+        if (hasChopped && !isRoot) {\n+            if (!loadParentsExceptRoot(t1, name, UPRV_LENGTHOF(name), usingUSRData, usrDataPath, status)) {\n+                goto finish;\n+            }\n+        }\n+    }\n@@ -674,0 +702,6 @@\n+    \/* we could have reached this point without having any real data *\/\n+    \/* if that is the case, we need to chain in the default locale   *\/\n+    if(r==NULL && openType == URES_OPEN_LOCALE_DEFAULT_ROOT && !isDefault && !isRoot) {\n+        \/* insert default locale *\/\n+        uprv_strcpy(name, uloc_getDefault());\n+        r = findFirstExisting(path, name, &isRoot, &hasChopped, &isDefault, &intStatus);\n@@ -677,1 +711,1 @@\n-            goto finishUnlock;\n+            goto finish;\n@@ -679,2 +713,2 @@\n-\n-        if(r != NULL) { \/* if there is one real locale, we can look for parents. *\/\n+        intStatus = U_USING_DEFAULT_WARNING;\n+        if(r != NULL) { \/* the default locale exists *\/\n@@ -683,18 +717,2 @@\n-            if ( usingUSRData ) {  \/* This code inserts user override data into the inheritance chain *\/\n-                UErrorCode usrStatus = U_ZERO_ERROR;\n-                UResourceDataEntry *u1 = init_entry(t1->fName, usrDataPath, &usrStatus);\n-                \/\/ If we failed due to out-of-memory, report the failure and exit early.\n-                if (intStatus == U_MEMORY_ALLOCATION_ERROR) {\n-                    *status = intStatus;\n-                    goto finishUnlock;\n-                }\n-                if ( u1 != NULL ) {\n-                    if(u1->fBogus == U_ZERO_ERROR) {\n-                        u1->fParent = t1;\n-                        r = u1;\n-                    } else {\n-                        \/* the USR override data wasn't found, set it to be deleted *\/\n-                        u1->fCountExisting = 0;\n-                    }\n-                }\n-            }\n+            isDefault = TRUE;\n+            \/\/ TODO: Why not if (usingUSRData) { ... } like in the non-default-locale code path?\n@@ -703,1 +721,1 @@\n-                    goto finishUnlock;\n+                    goto finish;\n@@ -707,0 +725,1 @@\n+    }\n@@ -708,11 +727,12 @@\n-        \/* we could have reached this point without having any real data *\/\n-        \/* if that is the case, we need to chain in the default locale   *\/\n-        if(r==NULL && openType == URES_OPEN_LOCALE_DEFAULT_ROOT && !isDefault && !isRoot) {\n-            \/* insert default locale *\/\n-            uprv_strcpy(name, uloc_getDefault());\n-            r = findFirstExisting(path, name, &isRoot, &hasChopped, &isDefault, &intStatus);\n-            \/\/ If we failed due to out-of-memory, report the failure and exit early.\n-            if (intStatus == U_MEMORY_ALLOCATION_ERROR) {\n-                *status = intStatus;\n-                goto finishUnlock;\n-            }\n+    \/* we could still have r == NULL at this point - maybe even default locale is not *\/\n+    \/* present *\/\n+    if(r == NULL) {\n+        uprv_strcpy(name, kRootLocaleName);\n+        r = findFirstExisting(path, name, &isRoot, &hasChopped, &isDefault, &intStatus);\n+        \/\/ If we failed due to out-of-memory, report the failure and exit early.\n+        if (intStatus == U_MEMORY_ALLOCATION_ERROR) {\n+            *status = intStatus;\n+            goto finish;\n+        }\n+        if(r != NULL) {\n+            t1 = r;\n@@ -720,11 +740,4 @@\n-            if(r != NULL) { \/* the default locale exists *\/\n-                t1 = r;\n-                hasRealData = TRUE;\n-                isDefault = TRUE;\n-                \/\/ TODO: Why not if (usingUSRData) { ... } like in the non-default-locale code path?\n-                if (hasChopped && !isRoot) {\n-                    if (!loadParentsExceptRoot(t1, name, UPRV_LENGTHOF(name), usingUSRData, usrDataPath, status)) {\n-                        goto finishUnlock;\n-                    }\n-                }\n-            }\n+            hasRealData = TRUE;\n+        } else { \/* we don't even have the root locale *\/\n+            *status = U_MISSING_RESOURCE_ERROR;\n+            goto finish;\n@@ -732,27 +745,4 @@\n-\n-        \/* we could still have r == NULL at this point - maybe even default locale is not *\/\n-        \/* present *\/\n-        if(r == NULL) {\n-            uprv_strcpy(name, kRootLocaleName);\n-            r = findFirstExisting(path, name, &isRoot, &hasChopped, &isDefault, &intStatus);\n-            \/\/ If we failed due to out-of-memory, report the failure and exit early.\n-            if (intStatus == U_MEMORY_ALLOCATION_ERROR) {\n-                *status = intStatus;\n-                goto finishUnlock;\n-            }\n-            if(r != NULL) {\n-                t1 = r;\n-                intStatus = U_USING_DEFAULT_WARNING;\n-                hasRealData = TRUE;\n-            } else { \/* we don't even have the root locale *\/\n-                *status = U_MISSING_RESOURCE_ERROR;\n-                goto finishUnlock;\n-            }\n-        } else if(!isRoot && uprv_strcmp(t1->fName, kRootLocaleName) != 0 &&\n-                t1->fParent == NULL && !r->fData.noFallback) {\n-            if (!insertRootBundle(t1, status)) {\n-                goto finishUnlock;\n-            }\n-            if(!hasRealData) {\n-                r->fBogus = U_USING_DEFAULT_WARNING;\n-            }\n+    } else if(!isRoot && uprv_strcmp(t1->fName, kRootLocaleName) != 0 &&\n+            t1->fParent == NULL && !r->fData.noFallback) {\n+        if (!insertRootBundle(t1, status)) {\n+            goto finish;\n@@ -760,5 +750,2 @@\n-\n-        \/\/ TODO: Does this ever loop?\n-        while(r != NULL && !isRoot && t1->fParent != NULL) {\n-            t1->fParent->fCountExisting++;\n-            t1 = t1->fParent;\n+        if(!hasRealData) {\n+            r->fBogus = U_USING_DEFAULT_WARNING;\n@@ -766,3 +753,1 @@\n-    } \/* umtx_lock *\/\n-finishUnlock:\n-    umtx_unlock(resbMutex());\n+    }\n@@ -770,0 +755,7 @@\n+    \/\/ TODO: Does this ever loop?\n+    while(r != NULL && !isRoot && t1->fParent != NULL) {\n+        t1->fParent->fCountExisting++;\n+        t1 = t1->fParent;\n+    }\n+\n+finish:\n@@ -793,1 +785,1 @@\n-    umtx_lock(resbMutex());\n+    Mutex lock(&resbMutex);\n@@ -831,1 +823,0 @@\n-    umtx_unlock(resbMutex());\n@@ -874,1 +865,1 @@\n-  umtx_lock(resbMutex());\n+  Mutex lock(&resbMutex);\n@@ -876,1 +867,0 @@\n-  umtx_unlock(resbMutex());\n@@ -1180,0 +1170,1 @@\n+                    ResourceTracer(resB).maybeTrace(\"getalias\");\n@@ -1259,0 +1250,1 @@\n+    ResourceTracer(resB).trace(\"get\");\n@@ -1307,1 +1299,1 @@\n-    s = res_getString(&(resB->fResData), resB->fRes, len);\n+    s = res_getString({resB}, &(resB->fResData), resB->fRes, len);\n@@ -1396,1 +1388,1 @@\n-  p = res_getBinary(&(resB->fResData), resB->fRes, len);\n+  p = res_getBinary({resB}, &(resB->fResData), resB->fRes, len);\n@@ -1413,1 +1405,1 @@\n-  p = res_getIntVector(&(resB->fResData), resB->fRes, len);\n+  p = res_getIntVector({resB}, &(resB->fResData), resB->fRes, len);\n@@ -1434,1 +1426,1 @@\n-  return RES_GET_INT(resB->fRes);\n+  return res_getInt({resB}, resB->fRes);\n@@ -1449,1 +1441,1 @@\n-  return RES_GET_UINT(resB->fRes);\n+  return res_getUInt({resB}, resB->fRes);\n@@ -1460,0 +1452,9 @@\n+  \/\/\n+  \/\/ TODO: Trace ures_getKey? I guess not usually.\n+  \/\/\n+  \/\/ We usually get the key string to decide whether we want the value, or to\n+  \/\/ make a key-value pair. Tracing the value should suffice.\n+  \/\/\n+  \/\/ However, I believe we have some data (e.g., in res_index) where the key\n+  \/\/ strings are the data. Tracing the enclosing table should suffice.\n+  \/\/\n@@ -1463,1 +1464,0 @@\n-\n@@ -1483,1 +1483,1 @@\n-    return res_getString(&(resB->fResData), r, len);\n+    return res_getString({resB, sIndex}, &(resB->fResData), r, len);\n@@ -1519,1 +1519,1 @@\n-      return res_getString(&(resB->fResData), resB->fRes, len);\n+      return res_getString({resB}, &(resB->fResData), resB->fRes, len);\n@@ -1664,1 +1664,1 @@\n-            return res_getString(&(resB->fResData), resB->fRes, len);\n+            return res_getString({resB}, &(resB->fResData), resB->fRes, len);\n@@ -1795,1 +1795,1 @@\n-U_INTERNAL const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -1956,1 +1956,1 @@\n-    value.pResData = &bundle->fResData;\n+    value.setData(&bundle->fResData);\n@@ -1959,1 +1959,1 @@\n-    value.setResource(bundle->fRes);\n+    value.setResource(bundle->fRes, ResourceTracer(bundle));\n@@ -2004,0 +2004,32 @@\n+\/\/ Requires a ResourceDataValue fill-in, so that we need not cast from a ResourceValue.\n+\/\/ Unfortunately, the caller must know which subclass to make and pass in.\n+\/\/ Alternatively, we could make it as polymorphic as in Java by\n+\/\/ returning a ResourceValue pointer (possibly wrapped into a LocalPointer)\n+\/\/ that the caller then owns.\n+\/\/\n+\/\/ Also requires a UResourceBundle fill-in, so that the value's ResourceTracer\n+\/\/ can point to a non-local bundle.\n+\/\/ Without tracing, the child bundle could be a function-local object.\n+U_CAPI void U_EXPORT2\n+ures_getValueWithFallback(const UResourceBundle *bundle, const char *path,\n+                          UResourceBundle *tempFillIn,\n+                          ResourceDataValue &value, UErrorCode &errorCode) {\n+    if (U_FAILURE(errorCode)) { return; }\n+    if (path == nullptr) {\n+        errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+        return;\n+    }\n+    const UResourceBundle *rb;\n+    if (*path == 0) {\n+        \/\/ empty path\n+        rb = bundle;\n+    } else {\n+        rb = ures_getByKeyWithFallback(bundle, path, tempFillIn, &errorCode);\n+        if (U_FAILURE(errorCode)) {\n+            return;\n+        }\n+    }\n+    value.setData(&rb->fResData);\n+    value.setResource(rb->fRes, ResourceTracer(rb));\n+}\n+\n@@ -2008,1 +2040,1 @@\n-    if (path == NULL) {\n+    if (path == nullptr) {\n@@ -2012,2 +2044,1 @@\n-    UResourceBundle stackBundle;\n-    ures_initStackObject(&stackBundle);\n+    StackUResourceBundle stackBundle;\n@@ -2019,1 +2050,1 @@\n-        rb = ures_getByKeyWithFallback(bundle, path, &stackBundle, &errorCode);\n+        rb = ures_getByKeyWithFallback(bundle, path, stackBundle.getAlias(), &errorCode);\n@@ -2021,1 +2052,0 @@\n-            ures_close(&stackBundle);\n@@ -2028,1 +2058,0 @@\n-    ures_close(&stackBundle);\n@@ -2111,1 +2140,1 @@\n-                        return res_getString(rd, res, len);\n+                        return res_getString({resB, key}, rd, res, len);\n@@ -2133,1 +2162,1 @@\n-                return res_getString(&(resB->fResData), res, len);\n+                return res_getString({resB, key}, &(resB->fResData), res, len);\n@@ -2154,0 +2183,1 @@\n+            \/\/ TODO: Tracing\n@@ -2183,1 +2213,1 @@\n-U_INTERNAL const char*  U_EXPORT2\n+U_CAPI const char*  U_EXPORT2\n@@ -2299,0 +2329,2 @@\n+    ResourceTracer(r).traceOpen();\n+\n@@ -2328,1 +2360,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2341,1 +2373,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -2391,1 +2423,1 @@\n-U_INTERNAL const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -2582,2 +2614,2 @@\n-    char found[1024];\n-    char parent[1024];\n+    char found[1024] = \"\";\n+    char parent[1024] = \"\";\n@@ -2987,1 +3019,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -3023,1 +3055,1 @@\n-U_INTERNAL UResourceBundle* U_EXPORT2\n+U_CAPI UResourceBundle* U_EXPORT2\n@@ -3039,1 +3071,1 @@\n-U_INTERNAL const UResourceBundle* U_EXPORT2\n+U_CAPI const UResourceBundle* U_EXPORT2\n@@ -3048,1 +3080,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uresbund.cpp","additions":166,"deletions":134,"binary":false,"changes":300,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"utracimp.h\"\n@@ -310,1 +311,1 @@\n-res_getString(const ResourceData *pResData, Resource res, int32_t *pLength) {\n+res_getStringNoTrace(const ResourceData *pResData, Resource res, int32_t *pLength) {\n@@ -405,1 +406,2 @@\n-        const UChar *s = res_getString(pResData, array.internalGetResource(pResData, i), &sLength);\n+        \/\/ No tracing: handled by the caller\n+        const UChar *s = res_getStringNoTrace(pResData, array.internalGetResource(pResData, i), &sLength);\n@@ -437,1 +439,1 @@\n-res_getBinary(const ResourceData *pResData, Resource res, int32_t *pLength) {\n+res_getBinaryNoTrace(const ResourceData *pResData, Resource res, int32_t *pLength) {\n@@ -457,1 +459,1 @@\n-res_getIntVector(const ResourceData *pResData, Resource res, int32_t *pLength) {\n+res_getIntVectorNoTrace(const ResourceData *pResData, Resource res, int32_t *pLength) {\n@@ -510,1 +512,1 @@\n-    const UChar *s = res_getString(pResData, res, &length);\n+    const UChar *s = res_getString(fTraceInfo, &getData(), res, &length);\n@@ -521,1 +523,1 @@\n-    const UChar *s = res_getAlias(pResData, res, &length);\n+    const UChar *s = res_getAlias(&getData(), res, &length);\n@@ -535,1 +537,1 @@\n-    return RES_GET_INT(res);\n+    return res_getInt(fTraceInfo, res);\n@@ -545,1 +547,1 @@\n-    return RES_GET_UINT(res);\n+    return res_getUInt(fTraceInfo, res);\n@@ -552,1 +554,1 @@\n-    const int32_t *iv = res_getIntVector(pResData, res, &length);\n+    const int32_t *iv = res_getIntVector(fTraceInfo, &getData(), res, &length);\n@@ -563,1 +565,1 @@\n-    const uint8_t *b = res_getBinary(pResData, res, &length);\n+    const uint8_t *b = res_getBinary(fTraceInfo, &getData(), res, &length);\n@@ -581,1 +583,1 @@\n-            items32 = (const Resource *)pResData->pRoot+offset;\n+            items32 = (const Resource *)getData().pRoot+offset;\n@@ -586,1 +588,1 @@\n-        items16 = pResData->p16BitUnits+offset;\n+        items16 = getData().p16BitUnits+offset;\n@@ -593,1 +595,1 @@\n-    return ResourceArray(items16, items32, length);\n+    return ResourceArray(items16, items32, length, fTraceInfo);\n@@ -609,1 +611,1 @@\n-            keys16 = (const uint16_t *)(pResData->pRoot+offset);\n+            keys16 = (const uint16_t *)(getData().pRoot+offset);\n@@ -615,1 +617,1 @@\n-        keys16 = pResData->p16BitUnits+offset;\n+        keys16 = getData().p16BitUnits+offset;\n@@ -621,1 +623,1 @@\n-            keys32 = pResData->pRoot+offset;\n+            keys32 = getData().pRoot+offset;\n@@ -630,1 +632,1 @@\n-    return ResourceTable(keys16, keys32, items16, items32, length);\n+    return ResourceTable(keys16, keys32, items16, items32, length, fTraceInfo);\n@@ -634,1 +636,1 @@\n-    return ::isNoInheritanceMarker(pResData, res);\n+    return ::isNoInheritanceMarker(&getData(), res);\n@@ -639,1 +641,1 @@\n-    return ::getStringArray(pResData, getArray(errorCode), dest, capacity, errorCode);\n+    return ::getStringArray(&getData(), getArray(errorCode), dest, capacity, errorCode);\n@@ -645,1 +647,1 @@\n-        return ::getStringArray(pResData, getArray(errorCode), dest, capacity, errorCode);\n+        return ::getStringArray(&getData(), getArray(errorCode), dest, capacity, errorCode);\n@@ -659,1 +661,1 @@\n-    const UChar *s = res_getString(pResData, res, &sLength);\n+    const UChar *s = res_getString(fTraceInfo, &getData(), res, &sLength);\n@@ -674,1 +676,1 @@\n-    const UChar *s = res_getString(pResData, res, &sLength);\n+    const UChar *s = res_getString(fTraceInfo, &getData(), res, &sLength);\n@@ -684,1 +686,2 @@\n-        s = res_getString(pResData, array.internalGetResource(pResData, 0), &sLength);\n+        \/\/ Tracing is already performed above (unimportant for trace that this is an array)\n+        s = res_getStringNoTrace(&getData(), array.internalGetResource(&getData(), 0), &sLength);\n@@ -821,2 +824,2 @@\n-        if (keys16 != NULL) {\n-            key = RES_GET_KEY16(rdValue.pResData, keys16[i]);\n+        if (keys16 != nullptr) {\n+            key = RES_GET_KEY16(&rdValue.getData(), keys16[i]);\n@@ -824,1 +827,1 @@\n-            key = RES_GET_KEY32(rdValue.pResData, keys32[i]);\n+            key = RES_GET_KEY32(&rdValue.getData(), keys32[i]);\n@@ -827,2 +830,2 @@\n-        if (items16 != NULL) {\n-            res = makeResourceFrom16(rdValue.pResData, items16[i]);\n+        if (items16 != nullptr) {\n+            res = makeResourceFrom16(&rdValue.getData(), items16[i]);\n@@ -832,1 +835,28 @@\n-        rdValue.setResource(res);\n+        \/\/ Note: the ResourceTracer keeps a reference to the field of this\n+        \/\/ ResourceTable. This is OK because the ResourceTable should remain\n+        \/\/ alive for the duration that fields are being read from it\n+        \/\/ (including nested fields).\n+        rdValue.setResource(res, ResourceTracer(fTraceInfo, key));\n+        return TRUE;\n+    }\n+    return FALSE;\n+}\n+\n+UBool icu::ResourceTable::findValue(const char *key, ResourceValue &value) const {\n+    icu::ResourceDataValue &rdValue = static_cast<icu::ResourceDataValue &>(value);\n+    const char *realKey = nullptr;\n+    int32_t i;\n+    if (keys16 != nullptr) {\n+        i = _res_findTableItem(&rdValue.getData(), keys16, length, key, &realKey);\n+    } else {\n+        i = _res_findTable32Item(&rdValue.getData(), keys32, length, key, &realKey);\n+    }\n+    if (i >= 0) {\n+        Resource res;\n+        if (items16 != nullptr) {\n+            res = makeResourceFrom16(&rdValue.getData(), items16[i]);\n+        } else {\n+            res = items32[i];\n+        }\n+        \/\/ Same note about lifetime as in getKeyAndValue().\n+        rdValue.setResource(res, ResourceTracer(fTraceInfo, key));\n@@ -878,1 +908,7 @@\n-        rdValue.setResource(internalGetResource(rdValue.pResData, i));\n+        \/\/ Note: the ResourceTracer keeps a reference to the field of this\n+        \/\/ ResourceArray. This is OK because the ResourceArray should remain\n+        \/\/ alive for the duration that fields are being read from it\n+        \/\/ (including nested fields).\n+        rdValue.setResource(\n+            internalGetResource(&rdValue.getData(), i),\n+            ResourceTracer(fTraceInfo, i));\n@@ -930,1 +966,1 @@\n-        if(indexR >= 0 && *closeIndex == 0) {\n+        if(indexR >= 0 && *closeIndex == 0 && (*pathP != '0' || closeIndex - pathP == 1)) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uresdata.cpp","additions":67,"deletions":31,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -72,1 +72,3 @@\n-\/* get signed and unsigned integer values directly from the Resource handle *\/\n+\/* get signed and unsigned integer values directly from the Resource handle\n+ * NOTE: For proper logging, please use the res_getInt() constexpr\n+ *\/\n@@ -74,1 +76,1 @@\n-#   define RES_GET_INT(res) (((int32_t)((res)<<4L))>>4L)\n+#   define RES_GET_INT_NO_TRACE(res) (((int32_t)((res)<<4L))>>4L)\n@@ -76,1 +78,1 @@\n-#   define RES_GET_INT(res) (int32_t)(((res)&0x08000000) ? (res)|0xf0000000 : (res)&0x07ffffff)\n+#   define RES_GET_INT_NO_TRACE(res) (int32_t)(((res)&0x08000000) ? (res)|0xf0000000 : (res)&0x07ffffff)\n@@ -79,1 +81,1 @@\n-#define RES_GET_UINT(res) ((res)&0x0fffffff)\n+#define RES_GET_UINT_NO_TRACE(res) ((res)&0x0fffffff)\n@@ -403,1 +405,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -423,1 +425,1 @@\n-U_INTERNAL UResType U_EXPORT2\n+U_CAPI UResType U_EXPORT2\n@@ -426,0 +428,4 @@\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\/\/ To enable tracing, use the inline versions of the res_get* functions. \/\/\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n@@ -431,2 +437,2 @@\n-U_INTERNAL const UChar * U_EXPORT2\n-res_getString(const ResourceData *pResData, Resource res, int32_t *pLength);\n+U_CAPI const UChar * U_EXPORT2\n+res_getStringNoTrace(const ResourceData *pResData, Resource res, int32_t *pLength);\n@@ -434,2 +440,2 @@\n-U_INTERNAL const UChar * U_EXPORT2\n-res_getAlias(const ResourceData *pResData, Resource res, int32_t *pLength);\n+U_CAPI const uint8_t * U_EXPORT2\n+res_getBinaryNoTrace(const ResourceData *pResData, Resource res, int32_t *pLength);\n@@ -437,2 +443,2 @@\n-U_INTERNAL const uint8_t * U_EXPORT2\n-res_getBinary(const ResourceData *pResData, Resource res, int32_t *pLength);\n+U_CAPI const int32_t * U_EXPORT2\n+res_getIntVectorNoTrace(const ResourceData *pResData, Resource res, int32_t *pLength);\n@@ -440,2 +446,2 @@\n-U_INTERNAL const int32_t * U_EXPORT2\n-res_getIntVector(const ResourceData *pResData, Resource res, int32_t *pLength);\n+U_CAPI const UChar * U_EXPORT2\n+res_getAlias(const ResourceData *pResData, Resource res, int32_t *pLength);\n@@ -443,1 +449,1 @@\n-U_INTERNAL Resource U_EXPORT2\n+U_CAPI Resource U_EXPORT2\n@@ -446,1 +452,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -449,1 +455,1 @@\n-U_INTERNAL Resource U_EXPORT2\n+U_CAPI Resource U_EXPORT2\n@@ -452,1 +458,1 @@\n-U_INTERNAL Resource U_EXPORT2\n+U_CAPI Resource U_EXPORT2\n@@ -455,1 +461,1 @@\n-U_INTERNAL Resource U_EXPORT2\n+U_CAPI Resource U_EXPORT2\n@@ -473,0 +479,1 @@\n+#include \"restrace.h\"\n@@ -476,0 +483,28 @@\n+inline const UChar* res_getString(const ResourceTracer& traceInfo,\n+        const ResourceData *pResData, Resource res, int32_t *pLength) {\n+    traceInfo.trace(\"string\");\n+    return res_getStringNoTrace(pResData, res, pLength);\n+}\n+\n+inline const uint8_t* res_getBinary(const ResourceTracer& traceInfo,\n+        const ResourceData *pResData, Resource res, int32_t *pLength) {\n+    traceInfo.trace(\"binary\");\n+    return res_getBinaryNoTrace(pResData, res, pLength);\n+}\n+\n+inline const int32_t* res_getIntVector(const ResourceTracer& traceInfo,\n+        const ResourceData *pResData, Resource res, int32_t *pLength) {\n+    traceInfo.trace(\"intvector\");\n+    return res_getIntVectorNoTrace(pResData, res, pLength);\n+}\n+\n+inline int32_t res_getInt(const ResourceTracer& traceInfo, Resource res) {\n+    traceInfo.trace(\"int\");\n+    return RES_GET_INT_NO_TRACE(res);\n+}\n+\n+inline uint32_t res_getUInt(const ResourceTracer& traceInfo, Resource res) {\n+    traceInfo.trace(\"uint\");\n+    return RES_GET_UINT_NO_TRACE(res);\n+}\n+\n@@ -478,1 +513,3 @@\n-    ResourceDataValue() : pResData(NULL), res(static_cast<Resource>(URES_NONE)) {}\n+    ResourceDataValue() :\n+        res(static_cast<Resource>(URES_NONE)),\n+        fTraceInfo() {}\n@@ -481,2 +518,3 @@\n-    void setData(const ResourceData *data) { pResData = data; }\n-    void setResource(Resource r) { res = r; }\n+    void setData(const ResourceData *data) {\n+        resData = *data;\n+    }\n@@ -484,0 +522,6 @@\n+    void setResource(Resource r, ResourceTracer&& traceInfo) {\n+        res = r;\n+        fTraceInfo = traceInfo;\n+    }\n+\n+    const ResourceData &getData() const { return resData; }\n@@ -500,2 +544,0 @@\n-    const ResourceData *pResData;\n-\n@@ -503,0 +545,3 @@\n+    \/\/ TODO(ICU-20769): If UResourceBundle.fResData becomes a pointer,\n+    \/\/ then remove this value field again and just store a pResData pointer.\n+    ResourceData resData;\n@@ -504,0 +549,1 @@\n+    ResourceTracer fTraceInfo;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uresdata.h","additions":70,"deletions":24,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -70,0 +70,3 @@\n+    \/\/ TODO(ICU-20769): Try to change the by-value fResData into a pointer,\n+    \/\/ with the struct in only one place for each bundle.\n+    \/\/ Also replace class ResourceDataValue.resData with a pResData pointer again.\n@@ -157,1 +160,1 @@\n- * @return TRUE if there was anything into the cache\n+ * @return true if there was anything into the cache\n@@ -218,1 +221,1 @@\n- * @param omitDefault if TRUE, omit keyword and value if default. 'de_DE\\@collation=standard' -> 'de_DE'\n+ * @param omitDefault if true, omit keyword and value if default. 'de_DE\\@collation=standard' -> 'de_DE'\n@@ -284,0 +287,5 @@\n+U_CAPI void U_EXPORT2\n+ures_getValueWithFallback(const UResourceBundle *bundle, const char *path,\n+                          UResourceBundle *tempFillIn,\n+                          icu::ResourceDataValue &value, UErrorCode &errorCode);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uresimp.h","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-    char lang[8];\n-    char script[8];\n+    char lang[8] = {0};\n+    char script[8] = {0};\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uscript.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -236,0 +236,4 @@\n+    0x10FBF | EXCLUSION | RTL,  \/\/ Chrs\n+    0x1190C | EXCLUSION,  \/\/ Diak\n+    0x18C65 | EXCLUSION | LB_LETTERS,  \/\/ Kits\n+    0x10E88 | EXCLUSION | RTL,  \/\/ Yezi\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uscript_props.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,6 +48,1 @@\n-static icu::UInitOnce gSharedDataInitOnce;\n-\n-static UMutex *usprepMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static icu::UInitOnce gSharedDataInitOnce = U_INITONCE_INITIALIZER;\n@@ -55,0 +50,1 @@\n+static UMutex usprepMutex;\n@@ -154,1 +150,1 @@\n-    umtx_lock(usprepMutex());\n+    umtx_lock(&usprepMutex);\n@@ -156,1 +152,1 @@\n-        umtx_unlock(usprepMutex());\n+        umtx_unlock(&usprepMutex);\n@@ -187,1 +183,1 @@\n-    umtx_unlock(usprepMutex());\n+    umtx_unlock(&usprepMutex);\n@@ -265,1 +261,1 @@\n-    umtx_lock(usprepMutex());\n+    umtx_lock(&usprepMutex);\n@@ -274,1 +270,1 @@\n-    umtx_unlock(usprepMutex());\n+    umtx_unlock(&usprepMutex);\n@@ -331,1 +327,1 @@\n-    umtx_lock(usprepMutex());\n+    umtx_lock(&usprepMutex);\n@@ -336,1 +332,1 @@\n-    umtx_unlock(usprepMutex());\n+    umtx_unlock(&usprepMutex);\n@@ -368,1 +364,1 @@\n-        umtx_lock(usprepMutex());\n+        umtx_lock(&usprepMutex);\n@@ -389,1 +385,1 @@\n-        umtx_unlock(usprepMutex());\n+        umtx_unlock(&usprepMutex);\n@@ -428,1 +424,1 @@\n-    umtx_lock(usprepMutex());\n+    umtx_lock(&usprepMutex);\n@@ -433,1 +429,1 @@\n-    umtx_unlock(usprepMutex());\n+    umtx_unlock(&usprepMutex);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/usprep.cpp","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * strncmp style (lengths equal and >=0, flag TRUE),\n+ * strncmp style (lengths equal and >=0, flag true),\n@@ -49,0 +49,12 @@\n+\/**\n+ * Convert an ASCII-range lowercase character to uppercase.\n+ *\n+ * @param c A UChar.\n+ * @return If UChar is a lowercase ASCII character, returns the uppercase version.\n+ *         Otherwise, returns the input character.\n+ *\/\n+U_CAPI UChar U_EXPORT2\n+u_asciiToUpper(UChar c);\n+\n+\/\/ TODO: Add u_asciiToLower if\/when there is a need for it.\n+\n@@ -124,1 +136,1 @@\n-     * @return TRUE if t is a valid trail byte in this context.\n+     * @return true if t is a valid trail byte in this context.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ustr_imp.h","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    BreakIterator *clone() const U_OVERRIDE;\n+    WholeStringBreakIterator *clone() const U_OVERRIDE;\n@@ -65,3 +65,3 @@\n-    BreakIterator *createBufferClone(void *stackBuffer, int32_t &BufferSize,\n-                                     UErrorCode &errorCode) U_OVERRIDE;\n-    BreakIterator &refreshInputText(UText *input, UErrorCode &errorCode) U_OVERRIDE;\n+    WholeStringBreakIterator *createBufferClone(void *stackBuffer, int32_t &BufferSize,\n+                                                UErrorCode &errorCode) U_OVERRIDE;\n+    WholeStringBreakIterator &refreshInputText(UText *input, UErrorCode &errorCode) U_OVERRIDE;\n@@ -77,1 +77,1 @@\n-BreakIterator *WholeStringBreakIterator::clone() const { return nullptr; }\n+WholeStringBreakIterator *WholeStringBreakIterator::clone() const { return nullptr; }\n@@ -116,1 +116,1 @@\n-BreakIterator *WholeStringBreakIterator::createBufferClone(\n+WholeStringBreakIterator *WholeStringBreakIterator::createBufferClone(\n@@ -123,1 +123,1 @@\n-BreakIterator &WholeStringBreakIterator::refreshInputText(\n+WholeStringBreakIterator &WholeStringBreakIterator::refreshInputText(\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ustr_titlecase_brkiter.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    if(U16_IS_LEAD(*(matchLimit-1)) && match!=limit && U16_IS_TRAIL(*matchLimit)) {\n+    if(U16_IS_LEAD(*(matchLimit-1)) && matchLimit!=limit && U16_IS_TRAIL(*matchLimit)) {\n@@ -1297,1 +1297,9 @@\n-                c = (UChar) u_unescapeAt(charAt, &ahead, length, context);\n+                \/\/ Calling u_unescapeAt recursively may cause a stack overflow if\n+                \/\/ we have repeated surrogate lead after that. Limit the\n+                \/\/ length to 5 ('u' and 4 hex) after ahead.\n+                int32_t tailLimit = ahead + 5;\n+                if (tailLimit > length) {\n+                    tailLimit = length;\n+                }\n+                c = (UChar) u_unescapeAt(charAt, &ahead, tailLimit,\n+                                         context);\n@@ -1431,1 +1439,1 @@\n-#define __TERMINATE_STRING(dest, destCapacity, length, pErrorCode)      \\\n+#define __TERMINATE_STRING(dest, destCapacity, length, pErrorCode) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -1451,0 +1459,7 @@\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+\n+U_CAPI UChar U_EXPORT2\n+u_asciiToUpper(UChar c) {\n+    if (u'a' <= c && c <= u'z') {\n+        c = c + u'A' - u'a';\n@@ -1452,0 +1467,2 @@\n+    return c;\n+}\n@@ -1491,1 +1508,1 @@\n-#define STRING_HASH(TYPE, STR, STRLEN, DEREF) \\\n+#define STRING_HASH(TYPE, STR, STRLEN, DEREF) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -1503,1 +1520,2 @@\n-    return static_cast<int32_t>(hash)\n+    return static_cast<int32_t>(hash);        \\\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/ustring.cpp","additions":23,"deletions":5,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#include <cstddef>\n+\n@@ -569,2 +571,2 @@\n-    UText          ut;\n-    UAlignedMemory extension;\n+    UText               ut;\n+    std::max_align_t    extension;\n@@ -585,1 +587,1 @@\n-            spaceRequired = sizeof(ExtendedUText) + extraSpace - sizeof(UAlignedMemory);\n+            spaceRequired = sizeof(ExtendedUText) + extraSpace - sizeof(std::max_align_t);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utext.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -279,0 +279,10 @@\n+int32_t ICU_Utility::parseAsciiInteger(const UnicodeString& str, int32_t& pos) {\n+    int32_t result = 0;\n+    UChar c;\n+    while (pos < str.length() && (c = str.charAt(pos)) >= u'0' && c <= u'9') {\n+        result = result * 10 + (c - u'0');\n+        pos++;\n+    }\n+    return result;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/util.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -67,2 +67,2 @@\n-     * printable ASCII, then do nothing and return FALSE.  Otherwise,\n-     * append the escaped notation and return TRUE.\n+     * printable ASCII, then do nothing and return false.  Otherwise,\n+     * append the escaped notation and return true.\n@@ -98,1 +98,1 @@\n-                                  UBool advance = FALSE);\n+                                  UBool advance = false);\n@@ -182,3 +182,3 @@\n-     * @param pos INPUT-OUTPUT parameter.  On input, the first\n-     * character to parse.  On output, the character after the last\n-     * parsed character.\n+     * @param pos INPUT-OUTPUT parameter.  On input, the index of the first\n+     * character to parse.  On output, the index of the character after the\n+     * last parsed character.\n@@ -188,0 +188,9 @@\n+    \/**\n+     * Parse an integer at pos using only ASCII digits.\n+     * Base 10 only.\n+     * @param pos INPUT-OUTPUT parameter.  On input, the index of the first\n+     * character to parse.  On output, the index of the character after the\n+     * last parsed character.\n+     *\/\n+    static int32_t parseAsciiInteger(const UnicodeString& str, int32_t& pos);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/util.h","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -480,0 +480,10 @@\n+static const char* const\n+trResDataNames[] = {\n+    \"resc\",\n+    \"bundle-open\",\n+    \"file-open\",\n+    \"res-open\",\n+    NULL\n+};\n+\n+\n@@ -488,0 +498,2 @@\n+    } else if(UTRACE_UDATA_START <= fnNumber && fnNumber < UTRACE_RES_DATA_LIMIT){\n+        return trResDataNames[fnNumber - UTRACE_UDATA_START];\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utrace.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -147,0 +147,1 @@\n+UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -150,1 +151,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -165,0 +167,1 @@\n+UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -168,1 +171,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -182,2 +186,2 @@\n-#define UTRACE_EXIT() \\\n-    {if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n+#define UTRACE_EXIT() UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n@@ -185,1 +189,2 @@\n-    }}\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -195,2 +200,2 @@\n-#define UTRACE_EXIT_VALUE(val) \\\n-    {if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n+#define UTRACE_EXIT_VALUE(val) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n@@ -198,1 +203,2 @@\n-    }}\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -200,2 +206,2 @@\n-#define UTRACE_EXIT_STATUS(status) \\\n-    {if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n+#define UTRACE_EXIT_STATUS(status) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n@@ -203,1 +209,2 @@\n-    }}\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -205,2 +212,2 @@\n-#define UTRACE_EXIT_VALUE_STATUS(val, status) \\\n-    {if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n+#define UTRACE_EXIT_VALUE_STATUS(val, status) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n@@ -208,1 +215,2 @@\n-    }}\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -210,2 +218,2 @@\n-#define UTRACE_EXIT_PTR_STATUS(ptr, status) \\\n-    {if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n+#define UTRACE_EXIT_PTR_STATUS(ptr, status) UPRV_BLOCK_MACRO_BEGIN { \\\n+    if(utraceFnNumber & UTRACE_TRACED_ENTRY) { \\\n@@ -213,1 +221,2 @@\n-    }}\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -223,1 +232,1 @@\n-#define UTRACE_DATA0(level, fmt) \\\n+#define UTRACE_DATA0(level, fmt) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -226,1 +235,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -236,1 +246,1 @@\n-#define UTRACE_DATA1(level, fmt, a) \\\n+#define UTRACE_DATA1(level, fmt, a) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -239,1 +249,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -249,1 +260,1 @@\n-#define UTRACE_DATA2(level, fmt, a, b) \\\n+#define UTRACE_DATA2(level, fmt, a, b) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -252,1 +263,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -262,1 +274,1 @@\n-#define UTRACE_DATA3(level, fmt, a, b, c) \\\n+#define UTRACE_DATA3(level, fmt, a, b, c) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -265,1 +277,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -275,1 +288,1 @@\n-#define UTRACE_DATA4(level, fmt, a, b, c, d) \\\n+#define UTRACE_DATA4(level, fmt, a, b, c, d) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -278,1 +291,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -288,1 +302,1 @@\n-#define UTRACE_DATA5(level, fmt, a, b, c, d, e) \\\n+#define UTRACE_DATA5(level, fmt, a, b, c, d, e) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -291,1 +305,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -301,1 +316,1 @@\n-#define UTRACE_DATA6(level, fmt, a, b, c, d, e, f) \\\n+#define UTRACE_DATA6(level, fmt, a, b, c, d, e, f) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -304,1 +319,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -314,1 +330,1 @@\n-#define UTRACE_DATA7(level, fmt, a, b, c, d, e, f, g) \\\n+#define UTRACE_DATA7(level, fmt, a, b, c, d, e, f, g) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -317,1 +333,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -327,1 +344,1 @@\n-#define UTRACE_DATA8(level, fmt, a, b, c, d, e, f, g, h) \\\n+#define UTRACE_DATA8(level, fmt, a, b, c, d, e, f, g, h) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -330,1 +347,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -340,1 +358,1 @@\n-#define UTRACE_DATA9(level, fmt, a, b, c, d, e, f, g, h, i) \\\n+#define UTRACE_DATA9(level, fmt, a, b, c, d, e, f, g, h, i) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -343,1 +361,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utracimp.h","additions":56,"deletions":37,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-#define _UTRIE_GET_FROM_PAIR(trie, data, c, c2, result, resultType) { \\\n+#define _UTRIE_GET_FROM_PAIR(trie, data, c, c2, result, resultType) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -198,1 +198,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -202,1 +202,1 @@\n-    _UTRIE_GET_RAW(trie, data, 0xd800<=(c16) && (c16)<=0xdbff ? UTRIE_LEAD_INDEX_DISP : 0, c16);\n+    _UTRIE_GET_RAW(trie, data, 0xd800<=(c16) && (c16)<=0xdbff ? UTRIE_LEAD_INDEX_DISP : 0, c16)\n@@ -209,1 +209,1 @@\n-#define _UTRIE_GET(trie, data, c32, result, resultType) \\\n+#define _UTRIE_GET(trie, data, c32, result, resultType) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -220,1 +220,2 @@\n-    }\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n@@ -223,1 +224,1 @@\n-#define _UTRIE_NEXT(trie, data, src, limit, c, c2, result, resultType) { \\\n+#define _UTRIE_NEXT(trie, data, src, limit, c, c2, result, resultType) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -236,1 +237,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -239,1 +240,1 @@\n-#define _UTRIE_PREVIOUS(trie, data, start, src, c, c2, result, resultType) { \\\n+#define _UTRIE_PREVIOUS(trie, data, start, src, c, c2, result, resultType) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -260,1 +261,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -462,1 +463,1 @@\n- * The callback function can stop the enumeration by returning FALSE.\n+ * The callback function can stop the enumeration by returning false.\n@@ -468,1 +469,1 @@\n- * @return FALSE to stop the enumeration\n+ * @return false to stop the enumeration\n@@ -669,1 +670,1 @@\n- * @return FALSE if a failure occurred (illegal argument or data array overrun)\n+ * @return false if a failure occurred (illegal argument or data array overrun)\n@@ -679,1 +680,1 @@\n- * @param pInBlockZero if not NULL, then *pInBlockZero is set to TRUE\n+ * @param pInBlockZero if not NULL, then *pInBlockZero is set to true\n@@ -690,1 +691,1 @@\n- * overwrite is TRUE or if the old value is 0.\n+ * overwrite is true or if the old value is 0.\n@@ -697,1 +698,1 @@\n- * @return FALSE if a failure occurred (illegal argument or data array overrun)\n+ * @return false if a failure occurred (illegal argument or data array overrun)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utrie.h","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n- * The callback function can stop the enumeration by returning FALSE.\n+ * The callback function can stop the enumeration by returning false.\n@@ -170,1 +170,1 @@\n- * @return FALSE to stop the enumeration\n+ * @return false to stop the enumeration\n@@ -259,1 +259,1 @@\n- * overwrite is TRUE or if the old value is the initial value.\n+ * overwrite is true or if the old value is the initial value.\n@@ -301,1 +301,1 @@\n- * @return TRUE if the trie is frozen, that is, immutable, ready for serialization\n+ * @return true if the trie is frozen, that is, immutable, ready for serialization\n@@ -673,1 +673,1 @@\n-    UBool isMemoryOwned;    \/* TRUE if the trie owns the memory *\/\n+    UBool isMemoryOwned;    \/* true if the trie owns the memory *\/\n@@ -799,1 +799,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -808,1 +808,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -874,1 +874,1 @@\n-#define _UTRIE2_U16_NEXT(trie, data, src, limit, c, result) { \\\n+#define _UTRIE2_U16_NEXT(trie, data, src, limit, c, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -888,1 +888,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -891,1 +891,1 @@\n-#define _UTRIE2_U16_PREV(trie, data, start, src, c, result) { \\\n+#define _UTRIE2_U16_PREV(trie, data, start, src, c, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -903,1 +903,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -906,1 +906,1 @@\n-#define _UTRIE2_U8_NEXT(trie, ascii, data, src, limit, result) { \\\n+#define _UTRIE2_U8_NEXT(trie, ascii, data, src, limit, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -938,1 +938,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -941,1 +941,1 @@\n-#define _UTRIE2_U8_PREV(trie, ascii, data, start, src, result) { \\\n+#define _UTRIE2_U8_PREV(trie, ascii, data, start, src, result) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -951,1 +951,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utrie2.h","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -259,1 +259,8 @@\n-        \/* swap the index and the data *\/\n+        \/* swap the index *\/\n+        const uint16_t *inIndex=reinterpret_cast<const uint16_t *>(inTrie+1);\n+        uint16_t *outIndex=reinterpret_cast<uint16_t *>(outTrie+1);\n+        ds->swapArray16(ds, inIndex, trie.indexLength*2, outIndex, pErrorCode);\n+\n+        \/* swap the data *\/\n+        const uint16_t *inData=inIndex+trie.indexLength;\n+        uint16_t *outData=outIndex+trie.indexLength;\n@@ -262,1 +269,1 @@\n-            ds->swapArray16(ds, inTrie+1, (trie.indexLength+dataLength)*2, outTrie+1, pErrorCode);\n+            ds->swapArray16(ds, inData, dataLength*2, outData, pErrorCode);\n@@ -265,3 +272,1 @@\n-            ds->swapArray16(ds, inTrie+1, trie.indexLength*2, outTrie+1, pErrorCode);\n-            ds->swapArray32(ds, (const uint16_t *)(inTrie+1)+trie.indexLength, dataLength*4,\n-                                     (uint16_t *)(outTrie+1)+trie.indexLength, pErrorCode);\n+            ds->swapArray32(ds, inData, dataLength*4, outData, pErrorCode);\n@@ -270,1 +275,0 @@\n-            ds->swapArray16(ds, inTrie+1, trie.indexLength*2, outTrie+1, pErrorCode);\n@@ -272,1 +276,1 @@\n-                uprv_memmove((outTrie+1)+trie.indexLength, (inTrie+1)+trie.indexLength, dataLength);\n+                uprv_memmove(outData, inData, dataLength);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utrie_swap.cpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -717,0 +717,10 @@\n+        \/\/ In IDNA2008, labels like \"xn--\" (decodes to an empty string) and\n+        \/\/ \"xn--ASCII-\" (decodes to just \"ASCII\") fail the round-trip validation from\n+        \/\/ comparing the ToUnicode input with the back-to-ToASCII output.\n+        \/\/ They are alternate encodings of the respective ASCII labels.\n+        \/\/ Ignore \"xn---\" here: It will fail Punycode.decode() which logically comes before\n+        \/\/ the round-trip verification.\n+        if(labelLength==4 || (labelLength>5 && label[labelLength-1]==u'-')) {\n+            info.labelErrors|=UIDNA_ERROR_INVALID_ACE_LABEL;\n+            return markBadACELabel(dest, labelStart, labelLength, toASCII, info, errorCode);\n+        }\n@@ -928,2 +938,0 @@\n-    \/\/ Ok to cast away const because we own the UnicodeString.\n-    UChar *s=(UChar *)label+4;  \/\/ After the initial \"xn--\".\n@@ -931,1 +939,3 @@\n-    do {\n+    \/\/ Start after the initial \"xn--\".\n+    \/\/ Ok to cast away const because we own the UnicodeString.\n+    for(UChar *s=const_cast<UChar *>(label+4); s<limit; ++s) {\n@@ -948,1 +958,1 @@\n-    } while(++s<limit);\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uts46.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -107,1 +107,2 @@\n-    \"U_NO_WRITE_PERMISSION\"\n+    \"U_NO_WRITE_PERMISSION\",\n+    \"U_INPUT_TOO_LONG_ERROR\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/utypes.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n- * -1, contains() will always return FALSE, etc.\n+ * -1, contains() will always return false, etc.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uvector.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-        return TRUE;\n+        return true;\n@@ -236,1 +236,1 @@\n-    if (ensureCapacity(count+size, status) == FALSE) {\n+    if (ensureCapacity(count+size, status) == false) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uvectr32.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-        return TRUE;\n+        return true;\n@@ -225,1 +225,1 @@\n-    if (ensureCapacity(count+size, status) == FALSE) {\n+    if (ensureCapacity(count+size, status) == false) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/uvectr64.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,0 +19,1 @@\n+#include \"charstr.h\"\n@@ -23,1 +24,1 @@\n-#include \"unicode\/ustring.h\"\n+#include \"unicode\/unistr.h\"\n@@ -38,2 +39,23 @@\n-\/\/ The max size of TimeZoneKeyName is 128, defined in DYNAMIC_TIME_ZONE_INFORMATION\n-#define MAX_TIMEZONE_ID_LENGTH 128\n+\/\/ Note these constants and the struct are only used when dealing with the fallback path for RDP sesssions.\n+\n+\/\/ This is the location of the time zones in the registry on Vista+ systems.\n+\/\/ See: https:\/\/docs.microsoft.com\/windows\/win32\/api\/timezoneapi\/ns-timezoneapi-dynamic_time_zone_information\n+#define WINDOWS_TIMEZONES_REG_KEY_PATH L\"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Time Zones\"\n+\n+\/\/ Max length for a registry key is 255. +1 for null.\n+\/\/ See: https:\/\/docs.microsoft.com\/windows\/win32\/sysinfo\/registry-element-size-limits\n+#define WINDOWS_MAX_REG_KEY_LENGTH 256\n+\n+#if U_PLATFORM_HAS_WINUWP_API == 0\n+\n+\/\/ This is the layout of the TZI binary value in the registry.\n+\/\/ See: https:\/\/docs.microsoft.com\/windows\/win32\/api\/timezoneapi\/ns-timezoneapi-time_zone_information\n+typedef struct _REG_TZI_FORMAT {\n+    LONG Bias;\n+    LONG StandardBias;\n+    LONG DaylightBias;\n+    SYSTEMTIME StandardDate;\n+    SYSTEMTIME DaylightDate;\n+} REG_TZI_FORMAT;\n+\n+#endif \/\/ U_PLATFORM_HAS_WINUWP_API\n@@ -42,4 +64,22 @@\n-* Main Windows time zone detection function.\n-* Returns the Windows time zone converted to an ICU time zone as a heap-allocated buffer, or nullptr upon failure.\n-* Note: We use the Win32 API GetDynamicTimeZoneInformation to get the current time zone info.\n-* This API returns a non-localized time zone name, which we can then map to an ICU time zone name.\n+* This is main Windows time zone detection function.\n+*\n+* It returns the Windows time zone converted to an ICU time zone as a heap-allocated buffer, or nullptr upon failure.\n+*\n+* We use the Win32 API GetDynamicTimeZoneInformation (which is available since Vista) to get the current time zone info,\n+* as this API returns a non-localized time zone name which can be then mapped to an ICU time zone.\n+*\n+* However, in some RDP\/terminal services situations, this struct isn't always fully complete, and the TimeZoneKeyName\n+* field of the struct might be NULL. This can happen with some 3rd party RDP clients, and also when using older versions\n+* of the RDP protocol, which don't send the newer TimeZoneKeyNamei information and only send the StandardName and DaylightName.\n+*\n+* Since these 3rd party clients and older RDP clients only send the pre-Vista time zone information to the server, this means that we\n+* need to fallback on using the pre-Vista methods to determine the time zone. This unfortunately requires examining the registry directly\n+* in order to try and determine the current time zone.\n+*\n+* Note that this can however still fail in some cases though if the client and server are using different languages, as the StandardName\n+* that is sent by client is localized in the client's language. However, we must compare this to the names that are on the server, which\n+* are localized in registry using the server's language. Despite that, this is the best we can do.\n+*\n+* Note: This fallback method won't work for the UWP version though, as we can't use the registry APIs in UWP.\n+*\n+* Once we have the current Windows time zone, then we can then map it to an ICU time zone ID (~ Olsen ID).\n@@ -47,1 +87,1 @@\n-U_INTERNAL const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -50,10 +90,1 @@\n-    UErrorCode status = U_ZERO_ERROR;\n-    char* icuid = nullptr;\n-    char dynamicTZKeyName[MAX_TIMEZONE_ID_LENGTH];\n-    char tmpid[MAX_TIMEZONE_ID_LENGTH];\n-    int32_t len;\n-    int id = GEOID_NOT_AVAILABLE;\n-    int errorCode;\n-    wchar_t ISOcodeW[3] = {}; \/* 2 letter ISO code in UTF-16 *\/\n-    char ISOcode[3] = {}; \/* 2 letter ISO code in UTF-8 *\/\n-\n+    \/\/ We first try to obtain the time zone directly by using the TimeZoneKeyName field of the DYNAMIC_TIME_ZONE_INFORMATION struct.\n@@ -62,2 +93,2 @@\n-    uprv_memset(dynamicTZKeyName, 0, sizeof(dynamicTZKeyName));\n-    uprv_memset(tmpid, 0, sizeof(tmpid));\n+    SYSTEMTIME systemTimeAllZero;\n+    uprv_memset(&systemTimeAllZero, 0, sizeof(systemTimeAllZero));\n@@ -65,2 +96,1 @@\n-    \/* Obtain TIME_ZONE_INFORMATION from the API and get the non-localized time zone name. *\/\n-    if (TIME_ZONE_ID_INVALID == GetDynamicTimeZoneInformation(&dynamicTZI)) {\n+    if (GetDynamicTimeZoneInformation(&dynamicTZI) == TIME_ZONE_ID_INVALID) {\n@@ -70,2 +100,23 @@\n-    id = GetUserGeoID(GEOCLASS_NATION);\n-    errorCode = GetGeoInfoW(id, GEO_ISO2, ISOcodeW, 3, 0);\n+    \/\/ If the DST setting has been turned off in the Control Panel, then return \"Etc\/GMT<offset>\".\n+    \/\/\n+    \/\/ Note: This logic is based on how the Control Panel itself determines if DST is 'off' on Windows.\n+    \/\/ The code is somewhat convoluted; in a sort of pseudo-code it looks like this:\n+    \/\/\n+    \/\/   IF (GetDynamicTimeZoneInformation != TIME_ZONE_ID_INVALID) && (DynamicDaylightTimeDisabled != 0) &&\n+    \/\/      (StandardDate == DaylightDate) &&\n+    \/\/      (\n+    \/\/       (TimeZoneKeyName != Empty && StandardDate == 0) ||\n+    \/\/       (TimeZoneKeyName == Empty && StandardDate != 0)\n+    \/\/      )\n+    \/\/   THEN\n+    \/\/     DST setting is \"Disabled\".\n+    \/\/\n+    if (dynamicTZI.DynamicDaylightTimeDisabled != 0 &&\n+        uprv_memcmp(&dynamicTZI.StandardDate, &dynamicTZI.DaylightDate, sizeof(dynamicTZI.StandardDate)) == 0 &&\n+        ((dynamicTZI.TimeZoneKeyName[0] != L'\\0' && uprv_memcmp(&dynamicTZI.StandardDate, &systemTimeAllZero, sizeof(systemTimeAllZero)) == 0) ||\n+         (dynamicTZI.TimeZoneKeyName[0] == L'\\0' && uprv_memcmp(&dynamicTZI.StandardDate, &systemTimeAllZero, sizeof(systemTimeAllZero)) != 0)))\n+    {\n+        LONG utcOffsetMins = dynamicTZI.Bias;\n+        if (utcOffsetMins == 0) {\n+            return uprv_strdup(\"Etc\/UTC\");\n+        }\n@@ -73,3 +124,12 @@\n-    \/\/ convert from wchar_t* (UTF-16 on Windows) to char* (UTF-8).\n-    u_strToUTF8(ISOcode, UPRV_LENGTHOF(ISOcode), nullptr,\n-        reinterpret_cast<const UChar*>(ISOcodeW), UPRV_LENGTHOF(ISOcodeW), &status);\n+        \/\/ No way to support when DST is turned off and the offset in minutes is not a multiple of 60.\n+        if (utcOffsetMins % 60 == 0) {\n+            char gmtOffsetTz[11] = {}; \/\/ \"Etc\/GMT+dd\" is 11-char long with a terminal null.\n+            \/\/ Note '-' before 'utcOffsetMin'. The timezone ID's sign convention\n+            \/\/ is that a timezone ahead of UTC is Etc\/GMT-<offset> and a timezone\n+            \/\/ behind UTC is Etc\/GMT+<offset>.\n+            int ret = snprintf(gmtOffsetTz, UPRV_LENGTHOF(gmtOffsetTz), \"Etc\/GMT%+ld\", -utcOffsetMins \/ 60);\n+            if (ret > 0 && ret < UPRV_LENGTHOF(gmtOffsetTz)) {\n+                return uprv_strdup(gmtOffsetTz);\n+            }\n+        }\n+    }\n@@ -77,2 +137,13 @@\n-    LocalUResourceBundlePointer bundle(ures_openDirect(nullptr, \"windowsZones\", &status));\n-    ures_getByKey(bundle.getAlias(), \"mapTimezones\", bundle.getAlias(), &status);\n+    \/\/ If DST is NOT disabled, but the TimeZoneKeyName field of the struct is NULL, then we may be dealing with a\n+    \/\/ RDP\/terminal services session where the 'Time Zone Redirection' feature is enabled. However, either the RDP\n+    \/\/ client sent the server incomplete info (some 3rd party RDP clients only send the StandardName and  DaylightName,\n+    \/\/ but do not send the important TimeZoneKeyName), or if the RDP server has not appropriately populated the struct correctly.\n+    \/\/\n+    \/\/ In this case we unfortunately have no choice but to fallback to using the pre-Vista method of determining the\n+    \/\/ time zone, which requires examining the registry directly.\n+    \/\/\n+    \/\/ Note that this can however still fail though if the client and server are using different languages, as the StandardName\n+    \/\/ that is sent by client is *localized* in the client's language. However, we must compare this to the names that are\n+    \/\/ on the server, which are *localized* in registry using the server's language.\n+    \/\/\n+    \/\/ One other note is that this fallback method doesn't work for the UWP version, as we can't use the registry APIs.\n@@ -80,3 +151,3 @@\n-    \/\/ convert from wchar_t* (UTF-16 on Windows) to char* (UTF-8).\n-    u_strToUTF8(dynamicTZKeyName, UPRV_LENGTHOF(dynamicTZKeyName), nullptr,\n-        reinterpret_cast<const UChar*>(dynamicTZI.TimeZoneKeyName), -1, &status);\n+    \/\/ windowsTimeZoneName will point at timezoneSubKeyName if we had to fallback to using the registry, and we found a match.\n+    WCHAR timezoneSubKeyName[WINDOWS_MAX_REG_KEY_LENGTH];\n+    WCHAR *windowsTimeZoneName = dynamicTZI.TimeZoneKeyName;\n@@ -84,1 +155,5 @@\n-    if (U_FAILURE(status)) {\n+    if (dynamicTZI.TimeZoneKeyName[0] == 0) {\n+\n+\/\/ We can't use the registry APIs in the UWP version.\n+#if U_PLATFORM_HAS_WINUWP_API == 1\n+        (void)timezoneSubKeyName; \/\/ suppress unused variable warnings.\n@@ -86,1 +161,30 @@\n-    }\n+#else\n+        \/\/ Open the path to the time zones in the Windows registry.\n+        LONG ret;\n+        HKEY hKeyAllTimeZones = nullptr;\n+        ret = RegOpenKeyExW(HKEY_LOCAL_MACHINE, WINDOWS_TIMEZONES_REG_KEY_PATH, 0, KEY_READ,\n+                            reinterpret_cast<PHKEY>(&hKeyAllTimeZones));\n+\n+        if (ret != ERROR_SUCCESS) {\n+            \/\/ If we can't open the key, then we can't do much, so fail.\n+            return nullptr;\n+        }\n+\n+        \/\/ Read the number of subkeys under the time zone registry path.\n+        DWORD numTimeZoneSubKeys;\n+        ret = RegQueryInfoKeyW(hKeyAllTimeZones, nullptr, nullptr, nullptr, &numTimeZoneSubKeys,\n+                               nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr);\n+\n+        if (ret != ERROR_SUCCESS) {\n+            RegCloseKey(hKeyAllTimeZones);\n+            return nullptr;\n+        }\n+\n+        \/\/ Examine each of the subkeys to try and find a match for the localized standard name (\"Std\").\n+        \/\/\n+        \/\/ Note: The name of the time zone subkey itself is not localized, but the \"Std\" name is localized. This means\n+        \/\/ that we could fail to find a match if the RDP client and RDP server are using different languages, but unfortunately\n+        \/\/ there isn't much we can do about it.\n+        HKEY hKeyTimeZoneSubKey = nullptr;\n+        ULONG registryValueType;\n+        WCHAR registryStandardName[WINDOWS_MAX_REG_KEY_LENGTH];\n@@ -88,3 +192,4 @@\n-    if (dynamicTZI.TimeZoneKeyName[0] != 0) {\n-        StackUResourceBundle winTZ;\n-        ures_getByKey(bundle.getAlias(), dynamicTZKeyName, winTZ.getAlias(), &status);\n+        for (DWORD i = 0; i < numTimeZoneSubKeys; i++) {\n+            \/\/ Note: RegEnumKeyExW wants the size of the buffer in characters.\n+            DWORD size = UPRV_LENGTHOF(timezoneSubKeyName);\n+            ret = RegEnumKeyExW(hKeyAllTimeZones, i, timezoneSubKeyName, &size, nullptr, nullptr, nullptr, nullptr);\n@@ -92,4 +197,3 @@\n-        if (U_SUCCESS(status)) {\n-            const UChar* icuTZ = nullptr;\n-            if (errorCode != 0) {\n-                icuTZ = ures_getStringByKey(winTZ.getAlias(), ISOcode, &len, &status);\n+            if (ret != ERROR_SUCCESS) {\n+                RegCloseKey(hKeyAllTimeZones);\n+                return nullptr;\n@@ -97,4 +201,18 @@\n-            if (errorCode == 0 || icuTZ == nullptr) {\n-                \/* fallback to default \"001\" and reset status *\/\n-                status = U_ZERO_ERROR;\n-                icuTZ = ures_getStringByKey(winTZ.getAlias(), \"001\", &len, &status);\n+\n+            ret = RegOpenKeyExW(hKeyAllTimeZones, timezoneSubKeyName, 0, KEY_READ,\n+                                reinterpret_cast<PHKEY>(&hKeyTimeZoneSubKey));\n+\n+            if (ret != ERROR_SUCCESS) {\n+                RegCloseKey(hKeyAllTimeZones);\n+                return nullptr;\n+            }\n+\n+            \/\/ Note: RegQueryValueExW wants the size of the buffer in bytes.\n+            size = sizeof(registryStandardName);\n+            ret = RegQueryValueExW(hKeyTimeZoneSubKey, L\"Std\", nullptr, &registryValueType,\n+                                   reinterpret_cast<LPBYTE>(registryStandardName), &size);\n+\n+            if (ret != ERROR_SUCCESS || registryValueType != REG_SZ) {\n+                RegCloseKey(hKeyTimeZoneSubKey);\n+                RegCloseKey(hKeyAllTimeZones);\n+                return nullptr;\n@@ -103,2 +221,8 @@\n-            if (U_SUCCESS(status)) {\n-                int index = 0;\n+            \/\/ Note: wcscmp does an ordinal (byte) comparison.\n+            if (wcscmp(reinterpret_cast<WCHAR *>(registryStandardName), dynamicTZI.StandardName) == 0) {\n+                \/\/ Since we are comparing the *localized* time zone name, it's possible that some languages might use\n+                \/\/ the same string for more than one time zone. Thus we need to examine the TZI data in the registry to\n+                \/\/ compare the GMT offset (the bias), and the DST transition dates, to ensure it's the same time zone\n+                \/\/ as the currently reported one.\n+                REG_TZI_FORMAT registryTziValue;\n+                uprv_memset(&registryTziValue, 0, sizeof(registryTziValue));\n@@ -106,3 +230,14 @@\n-                while (!(*icuTZ == '\\0' || *icuTZ == ' ')) {\n-                    \/\/ time zone IDs only contain ASCII invariant characters.\n-                    tmpid[index++] = (char)(*icuTZ++);\n+                \/\/ Note: RegQueryValueExW wants the size of the buffer in bytes.\n+                DWORD timezoneTziValueSize = sizeof(registryTziValue);\n+                ret = RegQueryValueExW(hKeyTimeZoneSubKey, L\"TZI\", nullptr, &registryValueType,\n+                                     reinterpret_cast<LPBYTE>(&registryTziValue), &timezoneTziValueSize);\n+\n+                if (ret == ERROR_SUCCESS) {\n+                    if ((dynamicTZI.Bias == registryTziValue.Bias) &&\n+                        (memcmp((const void *)&dynamicTZI.StandardDate, (const void *)&registryTziValue.StandardDate, sizeof(SYSTEMTIME)) == 0) &&\n+                        (memcmp((const void *)&dynamicTZI.DaylightDate, (const void *)&registryTziValue.DaylightDate, sizeof(SYSTEMTIME)) == 0))\n+                    {\n+                        \/\/ We found a matching time zone.\n+                        windowsTimeZoneName = timezoneSubKeyName;\n+                        break;\n+                    }\n@@ -110,1 +245,0 @@\n-                tmpid[index] = '\\0';\n@@ -112,0 +246,6 @@\n+            RegCloseKey(hKeyTimeZoneSubKey);\n+            hKeyTimeZoneSubKey = nullptr;\n+        }\n+\n+        if (hKeyTimeZoneSubKey != nullptr) {\n+            RegCloseKey(hKeyTimeZoneSubKey);\n@@ -113,0 +253,4 @@\n+        if (hKeyAllTimeZones != nullptr) {\n+            RegCloseKey(hKeyAllTimeZones);\n+        }\n+#endif \/\/ U_PLATFORM_HAS_WINUWP_API\n@@ -115,3 +259,47 @@\n-    \/\/ Copy the timezone ID to icuid to be returned.\n-    if (tmpid[0] != 0) {\n-        icuid = uprv_strdup(tmpid);\n+    CharString winTZ;\n+    UErrorCode status = U_ZERO_ERROR;\n+    winTZ.appendInvariantChars(UnicodeString(TRUE, windowsTimeZoneName, -1), status);\n+\n+    \/\/ Map Windows Timezone name (non-localized) to ICU timezone ID (~ Olson timezone id).\n+    StackUResourceBundle winTZBundle;\n+    ures_openDirectFillIn(winTZBundle.getAlias(), nullptr, \"windowsZones\", &status);\n+    ures_getByKey(winTZBundle.getAlias(), \"mapTimezones\", winTZBundle.getAlias(), &status);\n+    ures_getByKey(winTZBundle.getAlias(), winTZ.data(), winTZBundle.getAlias(), &status);\n+\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+\n+    \/\/ Note: Since the ISO 3166 country\/region codes are all invariant ASCII chars, we can\n+    \/\/ directly downcast from wchar_t to do the conversion.\n+    \/\/ We could call the A version of the GetGeoInfo API, but that would be slightly slower than calling the W API,\n+    \/\/ as the A version of the API will end up calling MultiByteToWideChar anyways internally.\n+    wchar_t regionCodeW[3] = {};\n+    char regionCode[3] = {}; \/\/ 2 letter ISO 3166 country\/region code made entirely of invariant chars.\n+    int geoId = GetUserGeoID(GEOCLASS_NATION);\n+    int regionCodeLen = GetGeoInfoW(geoId, GEO_ISO2, regionCodeW, UPRV_LENGTHOF(regionCodeW), 0);\n+\n+    const UChar *icuTZ16 = nullptr;\n+    int32_t tzListLen = 0;\n+\n+    if (regionCodeLen != 0) {\n+        for (int i = 0; i < UPRV_LENGTHOF(regionCodeW); i++) {\n+            regionCode[i] = static_cast<char>(regionCodeW[i]);\n+        }\n+        icuTZ16 = ures_getStringByKey(winTZBundle.getAlias(), regionCode, &tzListLen, &status);\n+    }\n+    if (regionCodeLen == 0 || U_FAILURE(status)) {\n+        \/\/ fallback to default \"001\" (world)\n+        status = U_ZERO_ERROR;\n+        icuTZ16 = ures_getStringByKey(winTZBundle.getAlias(), \"001\", &tzListLen, &status);\n+    }\n+\n+    \/\/ Note: We want the first entry in the string returned by ures_getStringByKey.\n+    \/\/ However this string can be a space delimited list of timezones:\n+    \/\/  Ex: \"America\/New_York America\/Detroit America\/Indiana\/Petersburg ...\"\n+    \/\/ We need to stop at the first space, so we pass tzLen (instead of tzListLen) to appendInvariantChars below.\n+    int32_t tzLen = 0;\n+    if (tzListLen > 0) {\n+        while (!(icuTZ16[tzLen] == u'\\0' || icuTZ16[tzLen] == u' ')) {\n+            tzLen++;\n+        }\n@@ -120,1 +308,4 @@\n-    return icuid;\n+    \/\/ Note: cloneData returns nullptr if the status is a failure, so this\n+    \/\/ will return nullptr if the above look-up fails.\n+    CharString icuTZStr;\n+    return icuTZStr.appendInvariantChars(icuTZ16, tzLen, status).cloneData(status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/wintz.cpp","additions":246,"deletions":55,"binary":false,"changes":301,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-U_INTERNAL const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/common\/wintz.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -263,2 +263,1 @@\n-    LocalPointer<RuleBasedCollator> coll(\n-        static_cast<RuleBasedCollator *>(collatorPrimaryOnly_->clone()));\n+    LocalPointer<RuleBasedCollator> coll(collatorPrimaryOnly_->clone());\n@@ -910,1 +909,1 @@\n-    collatorPrimaryOnly_ = static_cast<RuleBasedCollator *>(collator_->clone());\n+    collatorPrimaryOnly_ = collator_->clone();\n@@ -961,1 +960,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/alphaindex.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-Transliterator* AnyTransliterator::clone() const {\n+AnyTransliterator* AnyTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/anytrans.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    virtual Transliterator* clone() const;\n+    virtual AnyTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/anytrans.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,4 +68,1 @@\n-static icu::UMutex *ccLock() {\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static icu::UMutex ccLock;\n@@ -1555,1 +1552,1 @@\n-    umtx_lock(ccLock());\n+    umtx_lock(&ccLock);\n@@ -1560,1 +1557,1 @@\n-            umtx_unlock(ccLock());\n+            umtx_unlock(&ccLock);\n@@ -1568,1 +1565,1 @@\n-    umtx_unlock(ccLock());\n+    umtx_unlock(&ccLock);\n@@ -1576,1 +1573,1 @@\n-    umtx_lock(ccLock());\n+    umtx_lock(&ccLock);\n@@ -1581,1 +1578,1 @@\n-            umtx_unlock(ccLock());\n+            umtx_unlock(&ccLock);\n@@ -1589,1 +1586,1 @@\n-    umtx_unlock(ccLock());\n+    umtx_unlock(&ccLock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/astro.cpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-#define NEGDIVMOD(n, d, m) { \\\n+#define NEGDIVMOD(n, d, m) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -154,1 +154,1 @@\n-}\n+} UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/bocsu.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-Transliterator* BreakTransliterator::clone(void) const {\n+BreakTransliterator* BreakTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/brktrans.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual BreakTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/brktrans.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-Calendar* BuddhistCalendar::clone(void) const\n+BuddhistCalendar* BuddhistCalendar::clone() const\n@@ -136,1 +136,1 @@\n-static icu::UInitOnce gBCInitOnce;\n+static icu::UInitOnce gBCInitOnce = U_INITONCE_INITIALIZER;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/buddhcal.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-    virtual Calendar* clone(void) const;\n+    virtual BuddhistCalendar* clone() const;\n@@ -177,1 +177,1 @@\n-     * Returns TRUE because the Buddhist Calendar does have a default century\n+     * Returns true because the Buddhist Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/buddhcal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-    \/\/ canonicalize, so grandfathered variant will be transformed to keywords\n+    \/\/ Canonicalize, so that an old-style variant will be transformed to keywords.\n@@ -271,0 +271,2 @@\n+    \/\/ NOTE: Since ICU-20187, ja_JP_TRADITIONAL no longer canonicalizes, and\n+    \/\/ the Gregorian calendar is returned instead.\n@@ -751,0 +753,1 @@\n+        delete zone;\n@@ -870,1 +873,1 @@\n-    return createInstance(TimeZone::createDefault(), aLocale, success);\n+    return createInstance(TimeZone::forLocaleOrDefault(aLocale), aLocale, success);\n@@ -958,1 +961,1 @@\n-        char keyword[ULOC_FULLNAME_CAPACITY];\n+        char keyword[ULOC_FULLNAME_CAPACITY] = \"\";\n@@ -2595,1 +2598,1 @@\n-    Calendar *work = (Calendar*)this->clone();\n+    Calendar *work = this->clone();\n@@ -2755,1 +2758,1 @@\n-    Calendar *work = (Calendar*)this->clone();\n+    Calendar *work = this->clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/calendar.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-\/*Transliterator* CaseMapTransliterator::clone(void) const {\n+\/*CaseMapTransliterator* CaseMapTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/casetrn.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    virtual Transliterator* clone(void) const = 0;\n+    virtual CaseMapTransliterator* clone() const = 0;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/casetrn.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-:   Calendar(TimeZone::createDefault(), aLocale, success)\n+:   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/cecal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-     * Returns TRUE because Coptic\/Ethiopic Calendar does have a default century\n+     * Returns true because Coptic\/Ethiopic Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/cecal.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,4 +54,1 @@\n-static icu::UMutex *astroLock() {  \/\/ Protects access to gChineseCalendarAstro.\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static icu::UMutex astroLock;\n@@ -124,1 +121,1 @@\n-Calendar* ChineseCalendar::clone() const {\n+ChineseCalendar* ChineseCalendar::clone() const {\n@@ -129,1 +126,1 @@\n-:   Calendar(TimeZone::createDefault(), aLocale, success),\n+:   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success),\n@@ -139,1 +136,1 @@\n-:   Calendar(TimeZone::createDefault(), aLocale, success),\n+:   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success),\n@@ -541,1 +538,1 @@\n-        umtx_lock(astroLock());\n+        umtx_lock(&astroLock);\n@@ -548,1 +545,1 @@\n-        umtx_unlock(astroLock());\n+        umtx_unlock(&astroLock);\n@@ -571,1 +568,1 @@\n-    umtx_lock(astroLock());\n+    umtx_lock(&astroLock);\n@@ -578,1 +575,1 @@\n-    umtx_unlock(astroLock());\n+    umtx_unlock(&astroLock);\n@@ -603,1 +600,1 @@\n-    umtx_lock(astroLock());\n+    umtx_lock(&astroLock);\n@@ -610,1 +607,1 @@\n-    umtx_unlock(astroLock());\n+    umtx_unlock(&astroLock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/chnsecal.cpp","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-  virtual Calendar* clone() const;\n+  virtual ChineseCalendar* clone() const;\n@@ -245,1 +245,1 @@\n-   * Returns TRUE because the Islamic Calendar does have a default century\n+   * Returns true because the Islamic Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/chnsecal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -566,1 +566,1 @@\n-Format*\n+ChoiceFormat*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/choicfmt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-static icu::UInitOnce gAvailableLocaleListInitOnce;\n+static icu::UInitOnce gAvailableLocaleListInitOnce = U_INITONCE_INITIALIZER;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/coll.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-     * @return TRUE if the ce32 yields one or more CEs without further data lookups\n+     * @return true if the ce32 yields one or more CEs without further data lookups\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collation.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    void disableFastLatin() { fastLatinEnabled = FALSE; }\n+    void disableFastLatin() { fastLatinEnabled = false; }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationbuilder.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-     * @return TRUE if this builder has mappings (e.g., add() has been called)\n+     * @return true if this builder has mappings (e.g., add() has been called)\n@@ -81,1 +81,1 @@\n-     * @return TRUE if c has CEs in this builder\n+     * @return true if c has CEs in this builder\n@@ -121,1 +121,1 @@\n-     * @return TRUE if an OFFSET_TAG range was used for start..end\n+     * @return true if an OFFSET_TAG range was used for start..end\n@@ -153,1 +153,1 @@\n-    void enableFastLatin() { fastLatinEnabled = TRUE; }\n+    void enableFastLatin() { fastLatinEnabled = true; }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationdatabuilder.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n-0x29,0,0,0x2a,0,0x2b,0,0,0,0x26,0x2c,0x2d,0,0x2e,0,0x2f,\n-0,0x30,0,0,0,0,0x31,0x32,0,0,0,0,0,0,1,0x33,\n+0x29,0,0,0x2a,0,0x2b,0x2c,0,0,0x26,0x2d,0x2e,0,0x2f,0,0x30,\n+0,0x31,0,0,0,0,0x32,0x33,0,0,0,0,0,0,1,0x34,\n@@ -37,1 +37,1 @@\n-0,0,0,0,0,0,0x34,0x35,0,0,0,0,0,0,0,0,\n+0,0,0,0,0,0,0x35,0x36,0,0,0,0,0,0,0,0,\n@@ -43,1 +43,1 @@\n-0,0,0,0,0,0,0,0x36,0,0,0,0x37,0,0,0,1,\n+0,0,0,0,0,0,0,0x37,0,0,0,0x38,0,0,0,1,\n@@ -45,1 +45,1 @@\n-0,0x38,0,0,0x39,0,0,0,0,0,0,0,0,0,0,0,\n+0,0x39,0,0,0x3a,0,0,0,0,0,0,0,0,0,0,0,\n@@ -104,3 +104,3 @@\n-0,0,0,0x3a,0x3b,0,0,0x3c,0,0,0,0,0,0,0,0,\n-0x23,0,0,0,0,0,0x2c,0x3d,0,0x3e,0x3f,0,0,0x3f,0x40,0,\n-0,0,0,0,0,0x41,0x42,0x43,0,0,0,0,0,0,0,0x18,\n+0,0,0,0x3b,0x3c,0,0,0x3d,0,0,0,0,0,0,0,0,\n+0x23,0x3e,0,0,0,0,0x2d,0x3f,0,0x40,0x41,0,0,0x41,0x2c,0,\n+0,0,0,0,0,0x42,0x43,0x44,0,0,0,0,0,0,0,0x18,\n@@ -129,1 +129,1 @@\n-0x44,0x45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x45,0x46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -151,1 +151,1 @@\n-const uint32_t CollationFCD::lcccBits[70]={\n+const uint32_t CollationFCD::lcccBits[71]={\n@@ -154,3 +154,3 @@\n-0x2a00000,0x3c3e0000,0xdf,0x40,0x6800000,0xe0000000,0x100000,0x20040000,0x200,0x1800000,0x9fe00001,0x3fff0000,0x10,0xff800,0xc00,0xc0040,\n-0x800000,0xfff70000,0x31021fd,0xfbffffff,0x1fff0000,0x1ffe2,0x38000,0x80000000,0xfc00,0x6000000,0x3ff08000,0xc0000000,0x30000,0x3ffff,0x3800,0x80000,\n-1,0xc19d0000,2,0x400000,0x40000fd,0x5108000\n+0x2a00000,0x3c3e0000,0xdf,0x40,0x6800000,0xe0000000,0x100000,0x20040000,0x200,0x1800000,0x9fe00001,0xbfff0000,1,0x10,0xff800,0xc00,\n+0xc0040,0x800000,0xfff70000,0x31021fd,0xfbffffff,0x1fff0000,0x1ffe2,0x38000,0x80000000,0xfc00,0x6000000,0x3ff08000,0xc0000000,0x30000,0x1000,0x3ffff,\n+0x3800,0x80000,0xc19d0000,2,0x400000,0xc0000fd,0x5108000\n@@ -173,5 +173,5 @@\n-0x43,0,0,0x44,0,0x45,0,0,0,0x40,0x46,0x47,0,0x48,0,0x49,\n-0,0x4a,0,0,0,0,0x4b,0x4c,0,0,0,0,0,0,1,0x4d,\n-1,1,1,1,0x4e,1,1,0x4f,0x50,1,0x51,0x52,1,0x53,0x54,0x55,\n-0,0,0,0,0,0,0x56,0x57,0,0x58,0,0,0x59,0x5a,0x5b,0,\n-0x5c,0x5d,0x5e,0x5f,0x60,0x61,0,0x62,0,0,0,0,0,0,0,0,\n+0x43,0,0,0x44,0,0x45,0x46,0,0,0x40,0x47,0x48,0,0x49,0,0x4a,\n+0,0x4b,0,0,0,0,0x4c,0x4d,0,0,0,0,0,0,1,0x4e,\n+1,1,1,1,0x4f,1,1,0x50,0x51,1,0x52,0x53,1,0x54,0x55,0x56,\n+0,0,0,0,0,0,0x57,0x58,0,0x59,0,0,0x5a,0x5b,0x5c,0,\n+0x5d,0x5e,0x5f,0x60,0x61,0x62,0,0x63,0,0,0,0,0,0,0,0,\n@@ -182,1 +182,1 @@\n-0,0,0,0,0,0,0,0x63,0,0,0,0x64,0,0,0,1,\n+0,0,0,0,0,0,0,0x64,0,0,0,0x65,0,0,0,1,\n@@ -184,1 +184,1 @@\n-0,0x65,0x66,0x67,0x68,0x66,0x67,0x69,0,0,0,0,0,0,0,0,\n+0,0x66,0x67,0x68,0x69,0x67,0x68,0x6a,0,0,0,0,0,0,0,0,\n@@ -243,3 +243,3 @@\n-0,0,0,0x6a,0x6b,0,0,0x6c,0,0,0,0,0,0,0,0,\n-0x3d,0,0,0,0,0,0x46,0x6d,0,0x6e,0x6f,0,0,0x6f,0x70,0,\n-0,0,0,0,0,0x71,0x72,0x73,0,0,0,0,0,0,0,0x32,\n+0,0,0,0x6b,0x6c,0,0,0x6d,0,0,0,0,0,0,0,0,\n+0x3d,0x6e,0,0,0,0,0x47,0x6f,0,0x70,0x71,0,0,0x71,0x46,0,\n+0,0,0,0,0,0x72,0x73,0x74,0,0,0,0,0,0,0,0x32,\n@@ -268,1 +268,1 @@\n-0x74,0x75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n+0x75,0x76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n@@ -285,1 +285,1 @@\n-0,0,0,0,0,0,0,0,0x3f,0x76,0x77,0,0,0,0,0,\n+0,0,0,0,0,0,0,0,0x3f,0x77,0x78,0,0,0,0,0,\n@@ -290,1 +290,1 @@\n-const uint32_t CollationFCD::tcccBits[120]={\n+const uint32_t CollationFCD::tcccBits[121]={\n@@ -295,4 +295,4 @@\n-0x100000,0x20040000,0x200,0x1800000,0x9fe00001,0x3fff0000,0x10,0xff800,0xc00,0xc0040,0x800000,0xfff70000,0x31021fd,0xfbffffff,0xbffffff,0x3ffffff,\n-0x3f3fffff,0xaaff3f3f,0x3fffffff,0x1fdfffff,0xefcfffde,0x1fdc7fff,0x1fff0000,0x1ffe2,0x800,0xc000000,0x4000,0xe000,0x1210,0x50,0x292,0x333e005,\n-0x333,0xf000,0x3c0f,0x38000,0x80000000,0xfc00,0x55555000,0x36db02a5,0x46100000,0x47900000,0x3ff08000,0xc0000000,0x30000,0x3ffff,0x3800,0x80000,\n-1,0xc19d0000,2,0x400000,0x40000fd,0x5108000,0x5f7ffc00,0x7fdb\n+0x100000,0x20040000,0x200,0x1800000,0x9fe00001,0xbfff0000,1,0x10,0xff800,0xc00,0xc0040,0x800000,0xfff70000,0x31021fd,0xfbffffff,0xbffffff,\n+0x3ffffff,0x3f3fffff,0xaaff3f3f,0x3fffffff,0x1fdfffff,0xefcfffde,0x1fdc7fff,0x1fff0000,0x1ffe2,0x800,0xc000000,0x4000,0xe000,0x1210,0x50,0x292,\n+0x333e005,0x333,0xf000,0x3c0f,0x38000,0x80000000,0xfc00,0x55555000,0x36db02a5,0x46100000,0x47900000,0x3ff08000,0xc0000000,0x30000,0x1000,0x3ffff,\n+0x3800,0x80000,0xc19d0000,2,0x400000,0xc0000fd,0x5108000,0x5f7ffc00,0x7fdb\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationfcd.cpp","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        if(c < 0x300) { return FALSE; }\n+        if(c < 0x300) { return false; }\n@@ -104,1 +104,1 @@\n-     * @return TRUE if c is U+0F73, U+0F75 or U+0F81 or one of several other Tibetan characters\n+     * @return true if c is U+0F73, U+0F75 or U+0F81 or one of several other Tibetan characters\n@@ -119,1 +119,1 @@\n-     * @return TRUE if fcd16 is from U+0F73, U+0F75 or U+0F81\n+     * @return true if fcd16 is from U+0F73, U+0F75 or U+0F81\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationfcd.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -875,1 +875,1 @@\n-            };\n+            }\n@@ -935,1 +935,1 @@\n-        };\n+        }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationiterator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                return TRUE;\n+                return true;\n@@ -81,1 +81,1 @@\n-                return FALSE;\n+                return false;\n@@ -254,1 +254,1 @@\n-     * @return FALSE if surrogate code points U+D800..U+DFFF\n+     * @return false if surrogate code points U+D800..U+DFFF\n@@ -256,1 +256,1 @@\n-     *         or TRUE if they map to CE(U+FFFD) (for UTF-8)\n+     *         or true if they map to CE(U+FFFD) (for UTF-8)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationiterator.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    \/** @return FALSE if memory allocation failed *\/\n+    \/** @return false if memory allocation failed *\/\n@@ -97,2 +97,2 @@\n-         * @return TRUE if the level is to be written\n-         *         (the base class implementation always returns TRUE)\n+         * @return true if the level is to be written\n+         *         (the base class implementation always returns true)\n@@ -106,1 +106,1 @@\n-     * Stops writing levels when callback.needToWrite(level) returns FALSE.\n+     * Stops writing levels when callback.needToWrite(level) returns false.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationkeys.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-     * Returns TRUE if the constructor could not initialize properly.\n+     * Returns true if the constructor could not initialize properly.\n@@ -95,1 +95,1 @@\n-struct CollationCacheEntry : public SharedObject {\n+struct U_I18N_API CollationCacheEntry : public SharedObject {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationtailoring.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-     * @return TRUE if it is possible to fit n elements between the limits\n+     * @return true if it is possible to fit n elements between the limits\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/collationweights.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,3 +33,3 @@\n-    fields->properties->compactStyle = style;\n-    fields->properties->groupingSize = -2; \/\/ do not forward grouping information\n-    fields->properties->minimumGroupingDigits = 2;\n+    fields->properties.compactStyle = style;\n+    fields->properties.groupingSize = -2; \/\/ do not forward grouping information\n+    fields->properties.minimumGroupingDigits = 2;\n@@ -48,1 +48,1 @@\n-Format* CompactDecimalFormat::clone() const {\n+CompactDecimalFormat* CompactDecimalFormat::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/compactdecimalformat.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-Calendar*\n+CopticCalendar*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/coptccal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-    virtual Calendar* clone(void) const;\n+    virtual CopticCalendar* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/coptccal.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-Transliterator* CompoundTransliterator::clone(void) const {\n+CompoundTransliterator* CompoundTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/cpdtrans.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual CompoundTransliterator* clone() const;\n@@ -134,1 +134,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/cpdtrans.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-static icu::UInitOnce gCSRecognizersInitOnce;\n+static icu::UInitOnce gCSRecognizersInitOnce = U_INITONCE_INITIALIZER;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/csdetect.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-     * Return TRUE if the the input bytes are a potential match, and\n-     * FALSE if the input data is not compatible with, or illegal in this charset.\n+     * Return true if the the input bytes are a potential match, and\n+     * false if the input data is not compatible with, or illegal in this charset.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/csrecog.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-UObject* CurrencyAmount::clone() const {\n+CurrencyAmount* CurrencyAmount::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/curramt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-Format* CurrencyFormat::clone() const {\n+CurrencyFormat* CurrencyFormat::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/currfmt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    virtual Format* clone() const;\n+    virtual CurrencyFormat* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/currfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -19,0 +19,1 @@\n+#include \"unicode\/uchar.h\"\n@@ -22,3 +23,2 @@\n-\n-static constexpr char16_t kDefaultCurrency[] = u\"XXX\";\n-static constexpr char kDefaultCurrency8[] = \"XXX\";\n+#include \"ustr_imp.h\"\n+#include \"measunit_impl.h\"\n@@ -34,1 +34,1 @@\n-    const char16_t* isoCodeToUse;\n+    bool useDefault = false;\n@@ -36,1 +36,1 @@\n-        isoCodeToUse = kDefaultCurrency;\n+        useDefault = true;\n@@ -38,1 +38,1 @@\n-        isoCodeToUse = kDefaultCurrency;\n+        useDefault = true;\n@@ -42,1 +42,1 @@\n-        isoCodeToUse = kDefaultCurrency;\n+        useDefault = true;\n@@ -45,1 +45,7 @@\n-        isoCodeToUse = _isoCode;\n+        for (int32_t i=0; i<3; i++) {\n+            isoCode[i] = u_asciiToUpper(_isoCode[i]);\n+        }\n+        isoCode[3] = 0;\n+    }\n+    if (useDefault) {\n+        uprv_memcpy(isoCode, kDefaultCurrency, sizeof(UChar) * 4);\n@@ -47,3 +53,0 @@\n-    \/\/ TODO: Perform uppercasing here like in ICU4J Currency.getInstance()?\n-    uprv_memcpy(isoCode, isoCodeToUse, sizeof(UChar) * 3);\n-    isoCode[3] = 0;\n@@ -69,1 +72,3 @@\n-        uprv_strncpy(isoCodeBuffer, _isoCode.data(), 3);\n+        for (int32_t i=0; i<3; i++) {\n+            isoCodeBuffer[i] = uprv_toupper(_isoCode.data()[i]);\n+        }\n@@ -73,3 +78,1 @@\n-    \/\/ TODO: Perform uppercasing here like in ICU4J Currency.getInstance()?\n-    u_charsToUChars(isoCodeToUse, isoCode, 3);\n-    isoCode[3] = 0;\n+    u_charsToUChars(isoCodeToUse, isoCode, 4);\n@@ -112,1 +115,1 @@\n-UObject* CurrencyUnit::clone() const {\n+CurrencyUnit* CurrencyUnit::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/currunit.cpp","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-Calendar*\n+DangiCalendar*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dangical.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-  virtual Calendar* clone() const;\n+  virtual DangiCalendar* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dangical.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-          fNumberFormat = (NumberFormat*)other.fNumberFormat->clone();\n+          fNumberFormat = other.fNumberFormat->clone();\n@@ -601,1 +601,1 @@\n-    NumberFormat* newNumFmtClone = (NumberFormat*)newNumberFormat.clone();\n+    NumberFormat* newNumFmtClone = newNumberFormat.clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/datefmt.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    \/\/ Returns TRUE if for all i, DayPeriodForHour[i] has a type other than UNKNOWN.\n+    \/\/ Returns true if for all i, DayPeriodForHour[i] has a type other than UNKNOWN.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dayperiodrules.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,0 +170,1 @@\n+        currPattern = rhs.currPattern;\n@@ -456,3 +457,1 @@\n-    \/\/ Obtain currency data from the currency API.  This is strictly\n-    \/\/ for backward compatibility; we don't use DecimalFormatSymbols\n-    \/\/ for currency data anymore.\n+    \/\/ Get the default currency from the currency API.\n@@ -464,42 +463,3 @@\n-        uprv_getStaticCurrencyName(curriso, locStr, tempStr, internalStatus);\n-        if (U_SUCCESS(internalStatus)) {\n-            fSymbols[kIntlCurrencySymbol].setTo(curriso, currisoLength);\n-            fSymbols[kCurrencySymbol] = tempStr;\n-        }\n-    }\n-    \/* else use the default values. *\/\n-\n-    \/\/load the currency data\n-    UChar ucc[4]={0}; \/\/Currency Codes are always 3 chars long\n-    int32_t uccLen = 4;\n-    const char* locName = loc.getName();\n-    UErrorCode localStatus = U_ZERO_ERROR;\n-    uccLen = ucurr_forLocale(locName, ucc, uccLen, &localStatus);\n-\n-    \/\/ TODO: Currency pattern data loading is duplicated in number_formatimpl.cpp\n-    if(U_SUCCESS(localStatus) && uccLen > 0) {\n-        char cc[4]={0};\n-        u_UCharsToChars(ucc, cc, uccLen);\n-        \/* An explicit currency was requested *\/\n-        LocalUResourceBundlePointer currencyResource(ures_open(U_ICUDATA_CURR, locStr, &localStatus));\n-        LocalUResourceBundlePointer currency(\n-            ures_getByKeyWithFallback(currencyResource.getAlias(), \"Currencies\", NULL, &localStatus));\n-        ures_getByKeyWithFallback(currency.getAlias(), cc, currency.getAlias(), &localStatus);\n-        if(U_SUCCESS(localStatus) && ures_getSize(currency.getAlias())>2) { \/\/ the length is 3 if more data is present\n-            ures_getByIndex(currency.getAlias(), 2, currency.getAlias(), &localStatus);\n-            int32_t currPatternLen = 0;\n-            currPattern =\n-                ures_getStringByIndex(currency.getAlias(), (int32_t)0, &currPatternLen, &localStatus);\n-            UnicodeString decimalSep =\n-                ures_getUnicodeStringByIndex(currency.getAlias(), (int32_t)1, &localStatus);\n-            UnicodeString groupingSep =\n-                ures_getUnicodeStringByIndex(currency.getAlias(), (int32_t)2, &localStatus);\n-            if(U_SUCCESS(localStatus)){\n-                fSymbols[kMonetaryGroupingSeparatorSymbol] = groupingSep;\n-                fSymbols[kMonetarySeparatorSymbol] = decimalSep;\n-                \/\/pattern.setTo(TRUE, currPattern, currPatternLen);\n-                status = localStatus;\n-            }\n-        }\n-        \/* else An explicit currency was requested and is unknown or locale data is malformed. *\/\n-        \/* ucurr_* API will get the correct value later on. *\/\n+        setCurrency(curriso, status);\n+    } else {\n+        setCurrency(nullptr, status);\n@@ -507,1 +467,0 @@\n-        \/\/ else ignore the error if no currency\n@@ -556,0 +515,1 @@\n+    currPattern = nullptr;\n@@ -559,0 +519,44 @@\n+void DecimalFormatSymbols::setCurrency(const UChar* currency, UErrorCode& status) {\n+    \/\/ TODO: If this method is made public:\n+    \/\/ - Adopt ICU4J behavior of not allowing currency to be null.\n+    \/\/ - Also verify that the length of currency is 3.\n+    if (!currency) {\n+        return;\n+    }\n+\n+    UnicodeString tempStr;\n+    uprv_getStaticCurrencyName(currency, locale.getName(), tempStr, status);\n+    if (U_SUCCESS(status)) {\n+        fSymbols[kIntlCurrencySymbol].setTo(currency, 3);\n+        fSymbols[kCurrencySymbol] = tempStr;\n+    }\n+\n+    char cc[4]={0};\n+    u_UCharsToChars(currency, cc, 3);\n+\n+    \/* An explicit currency was requested *\/\n+    \/\/ TODO(ICU-13297): Move this data loading logic into a centralized place\n+    UErrorCode localStatus = U_ZERO_ERROR;\n+    LocalUResourceBundlePointer rbTop(ures_open(U_ICUDATA_CURR, locale.getName(), &localStatus));\n+    LocalUResourceBundlePointer rb(\n+        ures_getByKeyWithFallback(rbTop.getAlias(), \"Currencies\", NULL, &localStatus));\n+    ures_getByKeyWithFallback(rb.getAlias(), cc, rb.getAlias(), &localStatus);\n+    if(U_SUCCESS(localStatus) && ures_getSize(rb.getAlias())>2) { \/\/ the length is 3 if more data is present\n+        ures_getByIndex(rb.getAlias(), 2, rb.getAlias(), &localStatus);\n+        int32_t currPatternLen = 0;\n+        currPattern =\n+            ures_getStringByIndex(rb.getAlias(), (int32_t)0, &currPatternLen, &localStatus);\n+        UnicodeString decimalSep =\n+            ures_getUnicodeStringByIndex(rb.getAlias(), (int32_t)1, &localStatus);\n+        UnicodeString groupingSep =\n+            ures_getUnicodeStringByIndex(rb.getAlias(), (int32_t)2, &localStatus);\n+        if(U_SUCCESS(localStatus)){\n+            fSymbols[kMonetaryGroupingSeparatorSymbol] = groupingSep;\n+            fSymbols[kMonetarySeparatorSymbol] = decimalSep;\n+            \/\/pattern.setTo(TRUE, currPattern, currPatternLen);\n+        }\n+    }\n+    \/* else An explicit currency was requested and is unknown or locale data is malformed. *\/\n+    \/* ucurr_* API will get the correct value later on. *\/\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dcfmtsym.cpp","additions":50,"deletions":46,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -253,16 +253,16 @@\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextClearStatus(decContext *, uint32_t);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextDefault(decContext *, int32_t);\n-  U_INTERNAL enum rounding U_EXPORT2 uprv_decContextGetRounding(decContext *);\n-  U_INTERNAL uint32_t      U_EXPORT2 uprv_decContextGetStatus(decContext *);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextRestoreStatus(decContext *, uint32_t, uint32_t);\n-  U_INTERNAL uint32_t      U_EXPORT2 uprv_decContextSaveStatus(decContext *, uint32_t);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextSetRounding(decContext *, enum rounding);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextSetStatus(decContext *, uint32_t);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextSetStatusFromString(decContext *, const char *);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextSetStatusFromStringQuiet(decContext *, const char *);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextSetStatusQuiet(decContext *, uint32_t);\n-  U_INTERNAL const char  * U_EXPORT2 uprv_decContextStatusToString(const decContext *);\n-  U_INTERNAL int32_t       U_EXPORT2 uprv_decContextTestEndian(uint8_t);\n-  U_INTERNAL uint32_t      U_EXPORT2 uprv_decContextTestSavedStatus(uint32_t, uint32_t);\n-  U_INTERNAL uint32_t      U_EXPORT2 uprv_decContextTestStatus(decContext *, uint32_t);\n-  U_INTERNAL decContext  * U_EXPORT2 uprv_decContextZeroStatus(decContext *);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextClearStatus(decContext *, uint32_t);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextDefault(decContext *, int32_t);\n+  U_CAPI enum rounding U_EXPORT2 uprv_decContextGetRounding(decContext *);\n+  U_CAPI uint32_t      U_EXPORT2 uprv_decContextGetStatus(decContext *);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextRestoreStatus(decContext *, uint32_t, uint32_t);\n+  U_CAPI uint32_t      U_EXPORT2 uprv_decContextSaveStatus(decContext *, uint32_t);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextSetRounding(decContext *, enum rounding);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextSetStatus(decContext *, uint32_t);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextSetStatusFromString(decContext *, const char *);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextSetStatusFromStringQuiet(decContext *, const char *);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextSetStatusQuiet(decContext *, uint32_t);\n+  U_CAPI const char  * U_EXPORT2 uprv_decContextStatusToString(const decContext *);\n+  U_CAPI int32_t       U_EXPORT2 uprv_decContextTestEndian(uint8_t);\n+  U_CAPI uint32_t      U_EXPORT2 uprv_decContextTestSavedStatus(uint32_t, uint32_t);\n+  U_CAPI uint32_t      U_EXPORT2 uprv_decContextTestStatus(decContext *, uint32_t);\n+  U_CAPI decContext  * U_EXPORT2 uprv_decContextZeroStatus(decContext *);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/decContext.h","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -115,9 +115,9 @@\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberFromInt32(decNumber *, int32_t);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberFromUInt32(decNumber *, uint32_t);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberFromString(decNumber *, const char *, decContext *);\n-  U_INTERNAL char      * U_EXPORT2 uprv_decNumberToString(const decNumber *, char *);\n-  U_INTERNAL char      * U_EXPORT2 uprv_decNumberToEngString(const decNumber *, char *);\n-  U_INTERNAL uint32_t    U_EXPORT2 uprv_decNumberToUInt32(const decNumber *, decContext *);\n-  U_INTERNAL int32_t     U_EXPORT2 uprv_decNumberToInt32(const decNumber *, decContext *);\n-  U_INTERNAL uint8_t   * U_EXPORT2 uprv_decNumberGetBCD(const decNumber *, uint8_t *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberSetBCD(decNumber *, const uint8_t *, uint32_t);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberFromInt32(decNumber *, int32_t);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberFromUInt32(decNumber *, uint32_t);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberFromString(decNumber *, const char *, decContext *);\n+  U_CAPI char      * U_EXPORT2 uprv_decNumberToString(const decNumber *, char *);\n+  U_CAPI char      * U_EXPORT2 uprv_decNumberToEngString(const decNumber *, char *);\n+  U_CAPI uint32_t    U_EXPORT2 uprv_decNumberToUInt32(const decNumber *, decContext *);\n+  U_CAPI int32_t     U_EXPORT2 uprv_decNumberToInt32(const decNumber *, decContext *);\n+  U_CAPI uint8_t   * U_EXPORT2 uprv_decNumberGetBCD(const decNumber *, uint8_t *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberSetBCD(decNumber *, const uint8_t *, uint32_t);\n@@ -126,39 +126,39 @@\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberAbs(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberAdd(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberAnd(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberCompare(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberCompareSignal(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberCompareTotal(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberCompareTotalMag(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberDivide(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberDivideInteger(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberExp(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberFMA(decNumber *, const decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberInvert(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberLn(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberLogB(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberLog10(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberMax(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberMaxMag(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberMin(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberMinMag(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberMinus(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberMultiply(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberNormalize(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberOr(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberPlus(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberPower(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberQuantize(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberReduce(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberRemainder(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberRemainderNear(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberRescale(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberRotate(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberSameQuantum(decNumber *, const decNumber *, const decNumber *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberScaleB(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberShift(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberSquareRoot(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberSubtract(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberToIntegralExact(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberToIntegralValue(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber * U_EXPORT2 uprv_decNumberXor(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberAbs(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberAdd(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberAnd(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberCompare(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberCompareSignal(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberCompareTotal(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberCompareTotalMag(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberDivide(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberDivideInteger(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberExp(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberFMA(decNumber *, const decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberInvert(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberLn(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberLogB(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberLog10(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberMax(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberMaxMag(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberMin(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberMinMag(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberMinus(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberMultiply(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberNormalize(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberOr(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberPlus(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberPower(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberQuantize(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberReduce(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberRemainder(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberRemainderNear(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberRescale(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberRotate(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberSameQuantum(decNumber *, const decNumber *, const decNumber *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberScaleB(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberShift(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberSquareRoot(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberSubtract(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberToIntegralExact(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberToIntegralValue(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber * U_EXPORT2 uprv_decNumberXor(decNumber *, const decNumber *, const decNumber *, decContext *);\n@@ -168,11 +168,11 @@\n-  U_INTERNAL const char * U_EXPORT2 uprv_decNumberClassToString(enum decClass);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberCopy(decNumber *, const decNumber *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberCopyAbs(decNumber *, const decNumber *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberCopyNegate(decNumber *, const decNumber *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberCopySign(decNumber *, const decNumber *, const decNumber *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberNextMinus(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberNextPlus(decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberNextToward(decNumber *, const decNumber *, const decNumber *, decContext *);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberTrim(decNumber *);\n-  U_INTERNAL const char * U_EXPORT2 uprv_decNumberVersion(void);\n-  U_INTERNAL decNumber  * U_EXPORT2 uprv_decNumberZero(decNumber *);\n+  U_CAPI const char * U_EXPORT2 uprv_decNumberClassToString(enum decClass);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberCopy(decNumber *, const decNumber *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberCopyAbs(decNumber *, const decNumber *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberCopyNegate(decNumber *, const decNumber *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberCopySign(decNumber *, const decNumber *, const decNumber *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberNextMinus(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberNextPlus(decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberNextToward(decNumber *, const decNumber *, const decNumber *, decContext *);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberTrim(decNumber *);\n+  U_CAPI const char * U_EXPORT2 uprv_decNumberVersion(void);\n+  U_CAPI decNumber  * U_EXPORT2 uprv_decNumberZero(decNumber *);\n@@ -181,2 +181,2 @@\n-  U_INTERNAL int32_t U_EXPORT2 uprv_decNumberIsNormal(const decNumber *, decContext *);\n-  U_INTERNAL int32_t U_EXPORT2 uprv_decNumberIsSubnormal(const decNumber *, decContext *);\n+  U_CAPI int32_t U_EXPORT2 uprv_decNumberIsNormal(const decNumber *, decContext *);\n+  U_CAPI int32_t U_EXPORT2 uprv_decNumberIsSubnormal(const decNumber *, decContext *);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/decNumber.h","additions":61,"deletions":61,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-  #define TODIGIT(u, cut, c, pow) {       \\\n+  #define TODIGIT(u, cut, c, pow) UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -275,1 +275,1 @@\n-    }\n+    } UPRV_BLOCK_MACRO_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/decNumberLocal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-        fields->properties->currencyPluralInfo.fPtr.adoptInstead(cpi.orphan());\n+        fields->properties.currencyPluralInfo.fPtr.adoptInstead(cpi.orphan());\n@@ -114,3 +114,0 @@\n-    fields->formatter.adoptInsteadAndCheckErrorCode(new LocalizedNumberFormatter(), status);\n-    fields->properties.adoptInsteadAndCheckErrorCode(new DecimalFormatProperties(), status);\n-    fields->exportedProperties.adoptInsteadAndCheckErrorCode(new DecimalFormatProperties(), status);\n@@ -122,4 +119,1 @@\n-    \/\/ In order to simplify error handling logic in the various getters\/setters\/etc, we do not allow\n-    \/\/ any partially populated DecimalFormatFields object. We must have a fully complete fields object\n-    \/\/ or else we set it to nullptr.\n-    if (fields->formatter.isNull() || fields->properties.isNull() || fields->exportedProperties.isNull() || fields->symbols.isNull()) {\n+    if (U_FAILURE(status)) {\n@@ -128,1 +122,0 @@\n-        status = U_MEMORY_ALLOCATION_ERROR;\n@@ -136,2 +129,2 @@\n-    if (value == fields->properties->parseAllInput) { return; }\n-    fields->properties->parseAllInput = value;\n+    if (value == fields->properties.parseAllInput) { return; }\n+    fields->properties.parseAllInput = value;\n@@ -382,1 +375,1 @@\n-    if (UBOOL_TO_BOOL(enabled) == fields->properties->groupingUsed) { return; }\n+    if (UBOOL_TO_BOOL(enabled) == fields->properties.groupingUsed) { return; }\n@@ -384,1 +377,1 @@\n-    fields->properties->groupingUsed = enabled;\n+    fields->properties.groupingUsed = enabled;\n@@ -392,1 +385,1 @@\n-    if (UBOOL_TO_BOOL(value) == fields->properties->parseIntegerOnly) { return; }\n+    if (UBOOL_TO_BOOL(value) == fields->properties.parseIntegerOnly) { return; }\n@@ -394,1 +387,1 @@\n-    fields->properties->parseIntegerOnly = value;\n+    fields->properties.parseIntegerOnly = value;\n@@ -403,1 +396,1 @@\n-    if (!fields->properties->parseMode.isNull() && mode == fields->properties->parseMode.getNoError()) { return; }\n+    if (!fields->properties.parseMode.isNull() && mode == fields->properties.parseMode.getNoError()) { return; }\n@@ -405,1 +398,1 @@\n-    fields->properties->parseMode = mode;\n+    fields->properties.parseMode = mode;\n@@ -444,1 +437,1 @@\n-    fields = new DecimalFormatFields();\n+    fields = new DecimalFormatFields(source.fields->properties);\n@@ -449,2 +442,0 @@\n-    fields->formatter.adoptInsteadAndCheckErrorCode(new LocalizedNumberFormatter(), status);\n-    fields->properties.adoptInsteadAndCheckErrorCode(new DecimalFormatProperties(*source.fields->properties), status);\n@@ -452,1 +443,0 @@\n-    fields->exportedProperties.adoptInsteadAndCheckErrorCode(new DecimalFormatProperties(), status);\n@@ -456,1 +446,1 @@\n-    if (fields->formatter.isNull() || fields->properties.isNull() || fields->exportedProperties.isNull() || fields->symbols.isNull()) {\n+    if (U_FAILURE(status)) {\n@@ -473,2 +463,2 @@\n-    *fields->properties = *rhs.fields->properties;\n-    fields->exportedProperties->clear();\n+    fields->properties = rhs.fields->properties;\n+    fields->exportedProperties.clear();\n@@ -498,1 +488,1 @@\n-Format* DecimalFormat::clone() const {\n+DecimalFormat* DecimalFormat::clone() const {\n@@ -520,1 +510,1 @@\n-    return *fields->properties == *otherDF->fields->properties && *fields->symbols == *otherDF->fields->symbols;\n+    return fields->properties == otherDF->fields->properties && *fields->symbols == *otherDF->fields->symbols;\n@@ -532,1 +522,3 @@\n-    FormattedNumber output = fields->formatter->formatDouble(number, localStatus);\n+    UFormattedNumberData output;\n+    output.quantity.setToDouble(number);\n+    fields->formatter.formatImpl(&output, localStatus);\n@@ -553,1 +545,3 @@\n-    FormattedNumber output = fields->formatter->formatDouble(number, status);\n+    UFormattedNumberData output;\n+    output.quantity.setToDouble(number);\n+    fields->formatter.formatImpl(&output, status);\n@@ -575,1 +569,3 @@\n-    FormattedNumber output = fields->formatter->formatDouble(number, status);\n+    UFormattedNumberData output;\n+    output.quantity.setToDouble(number);\n+    fields->formatter.formatImpl(&output, status);\n@@ -606,1 +602,3 @@\n-    FormattedNumber output = fields->formatter->formatInt(number, localStatus);\n+    UFormattedNumberData output;\n+    output.quantity.setToLong(number);\n+    fields->formatter.formatImpl(&output, localStatus);\n@@ -627,1 +625,3 @@\n-    FormattedNumber output = fields->formatter->formatInt(number, status);\n+    UFormattedNumberData output;\n+    output.quantity.setToLong(number);\n+    fields->formatter.formatImpl(&output, status);\n@@ -649,1 +649,3 @@\n-    FormattedNumber output = fields->formatter->formatInt(number, status);\n+    UFormattedNumberData output;\n+    output.quantity.setToLong(number);\n+    fields->formatter.formatImpl(&output, status);\n@@ -668,1 +670,3 @@\n-    FormattedNumber output = fields->formatter->formatDecimal(number, status);\n+    UFormattedNumberData output;\n+    output.quantity.setToDecNumber(number, status);\n+    fields->formatter.formatImpl(&output, status);\n@@ -686,1 +690,3 @@\n-    FormattedNumber output = fields->formatter->formatDecimalQuantity(number, status);\n+    UFormattedNumberData output;\n+    output.quantity = number;\n+    fields->formatter.formatImpl(&output, status);\n@@ -705,1 +711,3 @@\n-    FormattedNumber output = fields->formatter->formatDecimalQuantity(number, status);\n+    UFormattedNumberData output;\n+    output.quantity = number;\n+    fields->formatter.formatImpl(&output, status);\n@@ -826,1 +834,1 @@\n-    return fields->properties->currencyPluralInfo.fPtr.getAlias();\n+    return fields->properties.currencyPluralInfo.fPtr.getAlias();\n@@ -836,1 +844,1 @@\n-    fields->properties->currencyPluralInfo.fPtr.adoptInstead(cpi.orphan());\n+    fields->properties.currencyPluralInfo.fPtr.adoptInstead(cpi.orphan());\n@@ -844,1 +852,1 @@\n-    if (fields->properties->currencyPluralInfo.fPtr.isNull()) {\n+    if (fields->properties.currencyPluralInfo.fPtr.isNull()) {\n@@ -846,1 +854,1 @@\n-        fields->properties->currencyPluralInfo.fPtr.adoptInstead(info.clone());\n+        fields->properties.currencyPluralInfo.fPtr.adoptInstead(info.clone());\n@@ -848,1 +856,1 @@\n-        *fields->properties->currencyPluralInfo.fPtr = info; \/\/ copy-assignment operator\n+        *fields->properties.currencyPluralInfo.fPtr = info; \/\/ copy-assignment operator\n@@ -859,1 +867,1 @@\n-    fields->formatter->getAffixImpl(true, false, result, status);\n+    fields->formatter.getAffixImpl(true, false, result, status);\n@@ -868,2 +876,2 @@\n-    if (newValue == fields->properties->positivePrefix) { return; }\n-    fields->properties->positivePrefix = newValue;\n+    if (newValue == fields->properties.positivePrefix) { return; }\n+    fields->properties.positivePrefix = newValue;\n@@ -879,1 +887,1 @@\n-    fields->formatter->getAffixImpl(true, true, result, status);\n+    fields->formatter.getAffixImpl(true, true, result, status);\n@@ -888,2 +896,2 @@\n-    if (newValue == fields->properties->negativePrefix) { return; }\n-    fields->properties->negativePrefix = newValue;\n+    if (newValue == fields->properties.negativePrefix) { return; }\n+    fields->properties.negativePrefix = newValue;\n@@ -899,1 +907,1 @@\n-    fields->formatter->getAffixImpl(false, false, result, status);\n+    fields->formatter.getAffixImpl(false, false, result, status);\n@@ -908,2 +916,2 @@\n-    if (newValue == fields->properties->positiveSuffix) { return; }\n-    fields->properties->positiveSuffix = newValue;\n+    if (newValue == fields->properties.positiveSuffix) { return; }\n+    fields->properties.positiveSuffix = newValue;\n@@ -919,1 +927,1 @@\n-    fields->formatter->getAffixImpl(false, true, result, status);\n+    fields->formatter.getAffixImpl(false, true, result, status);\n@@ -928,2 +936,2 @@\n-    if (newValue == fields->properties->negativeSuffix) { return; }\n-    fields->properties->negativeSuffix = newValue;\n+    if (newValue == fields->properties.negativeSuffix) { return; }\n+    fields->properties.negativeSuffix = newValue;\n@@ -938,1 +946,1 @@\n-    return fields->properties->signAlwaysShown;\n+    return fields->properties.signAlwaysShown;\n@@ -943,2 +951,2 @@\n-    if (UBOOL_TO_BOOL(value) == fields->properties->signAlwaysShown) { return; }\n-    fields->properties->signAlwaysShown = value;\n+    if (UBOOL_TO_BOOL(value) == fields->properties.signAlwaysShown) { return; }\n+    fields->properties.signAlwaysShown = value;\n@@ -955,1 +963,1 @@\n-        dfp = fields->properties.getAlias();\n+        dfp = &fields->properties;\n@@ -987,2 +995,2 @@\n-        fields->properties->magnitudeMultiplier = delta;\n-        fields->properties->multiplier = 1;\n+        fields->properties.magnitudeMultiplier = delta;\n+        fields->properties.multiplier = 1;\n@@ -990,2 +998,2 @@\n-        fields->properties->magnitudeMultiplier = 0;\n-        fields->properties->multiplier = multiplier;\n+        fields->properties.magnitudeMultiplier = 0;\n+        fields->properties.multiplier = multiplier;\n@@ -1002,1 +1010,1 @@\n-    return fields->properties->multiplierScale;\n+    return fields->properties.multiplierScale;\n@@ -1007,2 +1015,2 @@\n-    if (newValue == fields->properties->multiplierScale) { return; }\n-    fields->properties->multiplierScale = newValue;\n+    if (newValue == fields->properties.multiplierScale) { return; }\n+    fields->properties.multiplierScale = newValue;\n@@ -1018,1 +1026,1 @@\n-    return fields->exportedProperties->roundingIncrement;\n+    return fields->exportedProperties.roundingIncrement;\n@@ -1023,2 +1031,2 @@\n-    if (newValue == fields->properties->roundingIncrement) { return; }\n-    fields->properties->roundingIncrement = newValue;\n+    if (newValue == fields->properties.roundingIncrement) { return; }\n+    fields->properties.roundingIncrement = newValue;\n@@ -1035,1 +1043,1 @@\n-    return static_cast<ERoundingMode>(fields->exportedProperties->roundingMode.getNoError());\n+    return static_cast<ERoundingMode>(fields->exportedProperties.roundingMode.getNoError());\n@@ -1041,1 +1049,1 @@\n-    if (!fields->properties->roundingMode.isNull() && uRoundingMode == fields->properties->roundingMode.getNoError()) {\n+    if (!fields->properties.roundingMode.isNull() && uRoundingMode == fields->properties.roundingMode.getNoError()) {\n@@ -1045,1 +1053,1 @@\n-    fields->properties->roundingMode = uRoundingMode;\n+    fields->properties.roundingMode = uRoundingMode;\n@@ -1055,1 +1063,1 @@\n-    return fields->properties->formatWidth;\n+    return fields->properties.formatWidth;\n@@ -1060,2 +1068,2 @@\n-    if (width == fields->properties->formatWidth) { return; }\n-    fields->properties->formatWidth = width;\n+    if (width == fields->properties.formatWidth) { return; }\n+    fields->properties.formatWidth = width;\n@@ -1066,1 +1074,1 @@\n-    if (fields == nullptr || fields->properties->padString.isBogus()) {\n+    if (fields == nullptr || fields->properties.padString.isBogus()) {\n@@ -1070,1 +1078,1 @@\n-        return fields->properties->padString;\n+        return fields->properties.padString;\n@@ -1076,1 +1084,1 @@\n-    if (padChar == fields->properties->padString) { return; }\n+    if (padChar == fields->properties.padString) { return; }\n@@ -1078,1 +1086,1 @@\n-        fields->properties->padString = UnicodeString(padChar.char32At(0));\n+        fields->properties.padString = UnicodeString(padChar.char32At(0));\n@@ -1080,1 +1088,1 @@\n-        fields->properties->padString.setToBogus();\n+        fields->properties.padString.setToBogus();\n@@ -1086,1 +1094,1 @@\n-    if (fields == nullptr || fields->properties->padPosition.isNull()) {\n+    if (fields == nullptr || fields->properties.padPosition.isNull()) {\n@@ -1090,1 +1098,1 @@\n-        return static_cast<EPadPosition>(fields->properties->padPosition.getNoError());\n+        return static_cast<EPadPosition>(fields->properties.padPosition.getNoError());\n@@ -1097,1 +1105,1 @@\n-    if (!fields->properties->padPosition.isNull() && uPadPos == fields->properties->padPosition.getNoError()) {\n+    if (!fields->properties.padPosition.isNull() && uPadPos == fields->properties.padPosition.getNoError()) {\n@@ -1100,1 +1108,1 @@\n-    fields->properties->padPosition = uPadPos;\n+    fields->properties.padPosition = uPadPos;\n@@ -1110,1 +1118,1 @@\n-    return (fields->properties->minimumExponentDigits != -1);\n+    return (fields->properties.minimumExponentDigits != -1);\n@@ -1116,1 +1124,1 @@\n-    if (fields->properties->minimumExponentDigits == minExp) { return; }\n+    if (fields->properties.minimumExponentDigits == minExp) { return; }\n@@ -1118,1 +1126,1 @@\n-        fields->properties->minimumExponentDigits = 1;\n+        fields->properties.minimumExponentDigits = 1;\n@@ -1120,1 +1128,1 @@\n-        fields->properties->minimumExponentDigits = -1;\n+        fields->properties.minimumExponentDigits = -1;\n@@ -1131,1 +1139,1 @@\n-    return static_cast<int8_t>(fields->properties->minimumExponentDigits);\n+    return static_cast<int8_t>(fields->properties.minimumExponentDigits);\n@@ -1136,2 +1144,2 @@\n-    if (minExpDig == fields->properties->minimumExponentDigits) { return; }\n-    fields->properties->minimumExponentDigits = minExpDig;\n+    if (minExpDig == fields->properties.minimumExponentDigits) { return; }\n+    fields->properties.minimumExponentDigits = minExpDig;\n@@ -1147,1 +1155,1 @@\n-    return fields->properties->exponentSignAlwaysShown;\n+    return fields->properties.exponentSignAlwaysShown;\n@@ -1152,2 +1160,2 @@\n-    if (UBOOL_TO_BOOL(expSignAlways) == fields->properties->exponentSignAlwaysShown) { return; }\n-    fields->properties->exponentSignAlwaysShown = expSignAlways;\n+    if (UBOOL_TO_BOOL(expSignAlways) == fields->properties.exponentSignAlwaysShown) { return; }\n+    fields->properties.exponentSignAlwaysShown = expSignAlways;\n@@ -1164,1 +1172,1 @@\n-        groupingSize = fields->properties->groupingSize;\n+        groupingSize = fields->properties.groupingSize;\n@@ -1174,2 +1182,2 @@\n-    if (newValue == fields->properties->groupingSize) { return; }\n-    fields->properties->groupingSize = newValue;\n+    if (newValue == fields->properties.groupingSize) { return; }\n+    fields->properties.groupingSize = newValue;\n@@ -1186,1 +1194,1 @@\n-        grouping2 = fields->properties->secondaryGroupingSize;\n+        grouping2 = fields->properties.secondaryGroupingSize;\n@@ -1196,2 +1204,2 @@\n-    if (newValue == fields->properties->secondaryGroupingSize) { return; }\n-    fields->properties->secondaryGroupingSize = newValue;\n+    if (newValue == fields->properties.secondaryGroupingSize) { return; }\n+    fields->properties.secondaryGroupingSize = newValue;\n@@ -1207,1 +1215,1 @@\n-    return fields->properties->minimumGroupingDigits;\n+    return fields->properties.minimumGroupingDigits;\n@@ -1212,2 +1220,2 @@\n-    if (newValue == fields->properties->minimumGroupingDigits) { return; }\n-    fields->properties->minimumGroupingDigits = newValue;\n+    if (newValue == fields->properties.minimumGroupingDigits) { return; }\n+    fields->properties.minimumGroupingDigits = newValue;\n@@ -1223,1 +1231,1 @@\n-    return fields->properties->decimalSeparatorAlwaysShown;\n+    return fields->properties.decimalSeparatorAlwaysShown;\n@@ -1228,2 +1236,2 @@\n-    if (UBOOL_TO_BOOL(newValue) == fields->properties->decimalSeparatorAlwaysShown) { return; }\n-    fields->properties->decimalSeparatorAlwaysShown = newValue;\n+    if (UBOOL_TO_BOOL(newValue) == fields->properties.decimalSeparatorAlwaysShown) { return; }\n+    fields->properties.decimalSeparatorAlwaysShown = newValue;\n@@ -1239,1 +1247,1 @@\n-    return fields->properties->decimalPatternMatchRequired;\n+    return fields->properties.decimalPatternMatchRequired;\n@@ -1244,2 +1252,2 @@\n-    if (UBOOL_TO_BOOL(newValue) == fields->properties->decimalPatternMatchRequired) { return; }\n-    fields->properties->decimalPatternMatchRequired = newValue;\n+    if (UBOOL_TO_BOOL(newValue) == fields->properties.decimalPatternMatchRequired) { return; }\n+    fields->properties.decimalPatternMatchRequired = newValue;\n@@ -1255,1 +1263,1 @@\n-    return fields->properties->parseNoExponent;\n+    return fields->properties.parseNoExponent;\n@@ -1260,2 +1268,2 @@\n-    if (UBOOL_TO_BOOL(value) == fields->properties->parseNoExponent) { return; }\n-    fields->properties->parseNoExponent = value;\n+    if (UBOOL_TO_BOOL(value) == fields->properties.parseNoExponent) { return; }\n+    fields->properties.parseNoExponent = value;\n@@ -1271,1 +1279,1 @@\n-    return fields->properties->parseCaseSensitive;\n+    return fields->properties.parseCaseSensitive;\n@@ -1276,2 +1284,2 @@\n-    if (UBOOL_TO_BOOL(value) == fields->properties->parseCaseSensitive) { return; }\n-    fields->properties->parseCaseSensitive = value;\n+    if (UBOOL_TO_BOOL(value) == fields->properties.parseCaseSensitive) { return; }\n+    fields->properties.parseCaseSensitive = value;\n@@ -1287,1 +1295,1 @@\n-    return fields->properties->formatFailIfMoreThanMaxDigits;\n+    return fields->properties.formatFailIfMoreThanMaxDigits;\n@@ -1292,2 +1300,2 @@\n-    if (UBOOL_TO_BOOL(value) == fields->properties->formatFailIfMoreThanMaxDigits) { return; }\n-    fields->properties->formatFailIfMoreThanMaxDigits = value;\n+    if (UBOOL_TO_BOOL(value) == fields->properties.formatFailIfMoreThanMaxDigits) { return; }\n+    fields->properties.formatFailIfMoreThanMaxDigits = value;\n@@ -1308,1 +1316,1 @@\n-    DecimalFormatProperties tprops(*fields->properties);\n+    DecimalFormatProperties tprops(fields->properties);\n@@ -1318,3 +1326,3 @@\n-        tprops.minimumFractionDigits = fields->exportedProperties->minimumFractionDigits;\n-        tprops.maximumFractionDigits = fields->exportedProperties->maximumFractionDigits;\n-        tprops.roundingIncrement = fields->exportedProperties->roundingIncrement;\n+        tprops.minimumFractionDigits = fields->exportedProperties.minimumFractionDigits;\n+        tprops.maximumFractionDigits = fields->exportedProperties.maximumFractionDigits;\n+        tprops.roundingIncrement = fields->exportedProperties.roundingIncrement;\n@@ -1376,1 +1384,1 @@\n-    if (newValue == fields->properties->maximumIntegerDigits) { return; }\n+    if (newValue == fields->properties.maximumIntegerDigits) { return; }\n@@ -1378,1 +1386,1 @@\n-    int32_t min = fields->properties->minimumIntegerDigits;\n+    int32_t min = fields->properties.minimumIntegerDigits;\n@@ -1380,1 +1388,1 @@\n-        fields->properties->minimumIntegerDigits = newValue;\n+        fields->properties.minimumIntegerDigits = newValue;\n@@ -1382,1 +1390,1 @@\n-    fields->properties->maximumIntegerDigits = newValue;\n+    fields->properties.maximumIntegerDigits = newValue;\n@@ -1388,1 +1396,1 @@\n-    if (newValue == fields->properties->minimumIntegerDigits) { return; }\n+    if (newValue == fields->properties.minimumIntegerDigits) { return; }\n@@ -1390,1 +1398,1 @@\n-    int32_t max = fields->properties->maximumIntegerDigits;\n+    int32_t max = fields->properties.maximumIntegerDigits;\n@@ -1392,1 +1400,1 @@\n-        fields->properties->maximumIntegerDigits = newValue;\n+        fields->properties.maximumIntegerDigits = newValue;\n@@ -1394,1 +1402,1 @@\n-    fields->properties->minimumIntegerDigits = newValue;\n+    fields->properties.minimumIntegerDigits = newValue;\n@@ -1400,1 +1408,5 @@\n-    if (newValue == fields->properties->maximumFractionDigits) { return; }\n+    if (newValue == fields->properties.maximumFractionDigits) { return; }\n+    \/\/ cap for backward compatibility, formerly 340, now 999\n+    if (newValue > kMaxIntFracSig) {\n+        newValue = kMaxIntFracSig;\n+    }\n@@ -1402,1 +1414,1 @@\n-    int32_t min = fields->properties->minimumFractionDigits;\n+    int32_t min = fields->properties.minimumFractionDigits;\n@@ -1404,1 +1416,1 @@\n-        fields->properties->minimumFractionDigits = newValue;\n+        fields->properties.minimumFractionDigits = newValue;\n@@ -1406,1 +1418,1 @@\n-    fields->properties->maximumFractionDigits = newValue;\n+    fields->properties.maximumFractionDigits = newValue;\n@@ -1412,1 +1424,1 @@\n-    if (newValue == fields->properties->minimumFractionDigits) { return; }\n+    if (newValue == fields->properties.minimumFractionDigits) { return; }\n@@ -1414,1 +1426,1 @@\n-    int32_t max = fields->properties->maximumFractionDigits;\n+    int32_t max = fields->properties.maximumFractionDigits;\n@@ -1416,1 +1428,1 @@\n-        fields->properties->maximumFractionDigits = newValue;\n+        fields->properties.maximumFractionDigits = newValue;\n@@ -1418,1 +1430,1 @@\n-    fields->properties->minimumFractionDigits = newValue;\n+    fields->properties.minimumFractionDigits = newValue;\n@@ -1428,1 +1440,1 @@\n-    return fields->exportedProperties->minimumSignificantDigits;\n+    return fields->exportedProperties.minimumSignificantDigits;\n@@ -1437,1 +1449,1 @@\n-    return fields->exportedProperties->maximumSignificantDigits;\n+    return fields->exportedProperties.maximumSignificantDigits;\n@@ -1442,2 +1454,2 @@\n-    if (value == fields->properties->minimumSignificantDigits) { return; }\n-    int32_t max = fields->properties->maximumSignificantDigits;\n+    if (value == fields->properties.minimumSignificantDigits) { return; }\n+    int32_t max = fields->properties.maximumSignificantDigits;\n@@ -1445,1 +1457,1 @@\n-        fields->properties->maximumSignificantDigits = value;\n+        fields->properties.maximumSignificantDigits = value;\n@@ -1447,1 +1459,1 @@\n-    fields->properties->minimumSignificantDigits = value;\n+    fields->properties.minimumSignificantDigits = value;\n@@ -1453,2 +1465,2 @@\n-    if (value == fields->properties->maximumSignificantDigits) { return; }\n-    int32_t min = fields->properties->minimumSignificantDigits;\n+    if (value == fields->properties.maximumSignificantDigits) { return; }\n+    int32_t min = fields->properties.minimumSignificantDigits;\n@@ -1456,1 +1468,1 @@\n-        fields->properties->minimumSignificantDigits = value;\n+        fields->properties.minimumSignificantDigits = value;\n@@ -1458,1 +1470,1 @@\n-    fields->properties->maximumSignificantDigits = value;\n+    fields->properties.maximumSignificantDigits = value;\n@@ -1469,1 +1481,1 @@\n-        dfp = fields->properties.getAlias();\n+        dfp = &fields->properties;\n@@ -1479,2 +1491,2 @@\n-        if (fields->properties->minimumSignificantDigits != -1 ||\n-            fields->properties->maximumSignificantDigits != -1) {\n+        if (fields->properties.minimumSignificantDigits != -1 ||\n+            fields->properties.maximumSignificantDigits != -1) {\n@@ -1484,2 +1496,2 @@\n-        if (fields->properties->minimumSignificantDigits == -1 &&\n-            fields->properties->maximumSignificantDigits == -1) {\n+        if (fields->properties.minimumSignificantDigits == -1 &&\n+            fields->properties.maximumSignificantDigits == -1) {\n@@ -1491,2 +1503,2 @@\n-    fields->properties->minimumSignificantDigits = minSig;\n-    fields->properties->maximumSignificantDigits = maxSig;\n+    fields->properties.minimumSignificantDigits = minSig;\n+    fields->properties.maximumSignificantDigits = maxSig;\n@@ -1506,1 +1518,1 @@\n-    if (!fields->properties->currency.isNull() && fields->properties->currency.getNoError() == currencyUnit) {\n+    if (!fields->properties.currency.isNull() && fields->properties.currency.getNoError() == currencyUnit) {\n@@ -1510,3 +1522,6 @@\n-    fields->properties->currency = currencyUnit;\n-    \/\/ TODO: Set values in fields->symbols, too?\n-    touchNoError();\n+    fields->properties.currency = currencyUnit;\n+    \/\/ In Java, the DecimalFormatSymbols is mutable. Why not in C++?\n+    LocalPointer<DecimalFormatSymbols> newSymbols(new DecimalFormatSymbols(*fields->symbols), ec);\n+    newSymbols->setCurrency(currencyUnit.getISOCurrency(), ec);\n+    fields->symbols.adoptInsteadAndCheckErrorCode(newSymbols.orphan(), ec);\n+    touch(ec);\n@@ -1528,1 +1543,1 @@\n-    if (!fields->properties->currencyUsage.isNull() && newUsage == fields->properties->currencyUsage.getNoError()) {\n+    if (!fields->properties.currencyUsage.isNull() && newUsage == fields->properties.currencyUsage.getNoError()) {\n@@ -1531,1 +1546,1 @@\n-    fields->properties->currencyUsage = newUsage;\n+    fields->properties.currencyUsage = newUsage;\n@@ -1538,1 +1553,1 @@\n-    if (fields == nullptr || fields->properties->currencyUsage.isNull()) {\n+    if (fields == nullptr || fields->properties.currencyUsage.isNull()) {\n@@ -1541,1 +1556,1 @@\n-    return fields->properties->currencyUsage.getNoError();\n+    return fields->properties.currencyUsage.getNoError();\n@@ -1553,1 +1568,1 @@\n-    fields->formatter->formatDouble(number, status).getDecimalQuantity(output, status);\n+    fields->formatter.formatDouble(number, status).getDecimalQuantity(output, status);\n@@ -1567,1 +1582,1 @@\n-    fields->formatter->formatImpl(&obj, status);\n+    fields->formatter.formatImpl(&obj, status);\n@@ -1579,6 +1594,1 @@\n-    return &*fields->formatter;\n-}\n-\n-const number::LocalizedNumberFormatter& DecimalFormat::toNumberFormatter() const {\n-    UErrorCode localStatus = U_ZERO_ERROR;\n-    return *toNumberFormatter(localStatus);\n+    return &fields->formatter;\n@@ -1611,3 +1621,3 @@\n-    *fields->formatter = NumberPropertyMapper::create(\n-        *fields->properties, *fields->symbols, fields->warehouse, *fields->exportedProperties, status).locale(\n-            locale);\n+    fields->formatter = NumberPropertyMapper::create(\n+        fields->properties, *fields->symbols, fields->warehouse, fields->exportedProperties, status\n+    ).locale(locale);\n@@ -1623,5 +1633,5 @@\n-    NumberFormat::setCurrency(fields->exportedProperties->currency.get(status).getISOCurrency(), status);\n-    NumberFormat::setMaximumIntegerDigits(fields->exportedProperties->maximumIntegerDigits);\n-    NumberFormat::setMinimumIntegerDigits(fields->exportedProperties->minimumIntegerDigits);\n-    NumberFormat::setMaximumFractionDigits(fields->exportedProperties->maximumFractionDigits);\n-    NumberFormat::setMinimumFractionDigits(fields->exportedProperties->minimumFractionDigits);\n+    NumberFormat::setCurrency(fields->exportedProperties.currency.get(status).getISOCurrency(), status);\n+    NumberFormat::setMaximumIntegerDigits(fields->exportedProperties.maximumIntegerDigits);\n+    NumberFormat::setMinimumIntegerDigits(fields->exportedProperties.minimumIntegerDigits);\n+    NumberFormat::setMaximumFractionDigits(fields->exportedProperties.maximumFractionDigits);\n+    NumberFormat::setMinimumFractionDigits(fields->exportedProperties.minimumFractionDigits);\n@@ -1629,1 +1639,1 @@\n-    NumberFormat::setGroupingUsed(fields->properties->groupingUsed);\n+    NumberFormat::setGroupingUsed(fields->properties.groupingUsed);\n@@ -1642,1 +1652,1 @@\n-        PatternParser::parseToExistingProperties(pattern, *fields->properties,  actualIgnoreRounding, status);\n+        PatternParser::parseToExistingProperties(pattern, fields->properties,  actualIgnoreRounding, status);\n@@ -1661,1 +1671,1 @@\n-    auto* temp = NumberParserImpl::createParserFromProperties(*fields->properties, *fields->symbols, false, status);\n+    auto* temp = NumberParserImpl::createParserFromProperties(fields->properties, *fields->symbols, false, status);\n@@ -1694,1 +1704,1 @@\n-    auto* temp = NumberParserImpl::createParserFromProperties(*fields->properties, *fields->symbols, true, status);\n+    auto* temp = NumberParserImpl::createParserFromProperties(fields->properties, *fields->symbols, true, status);\n@@ -1714,2 +1724,5 @@\n-DecimalFormat::fieldPositionHelper(const number::FormattedNumber& formatted, FieldPosition& fieldPosition,\n-                                   int32_t offset, UErrorCode& status) {\n+DecimalFormat::fieldPositionHelper(\n+        const UFormattedNumberData& formatted,\n+        FieldPosition& fieldPosition,\n+        int32_t offset,\n+        UErrorCode& status) {\n@@ -1728,2 +1741,5 @@\n-DecimalFormat::fieldPositionIteratorHelper(const number::FormattedNumber& formatted, FieldPositionIterator* fpi,\n-                                           int32_t offset, UErrorCode& status) {\n+DecimalFormat::fieldPositionIteratorHelper(\n+        const UFormattedNumberData& formatted,\n+        FieldPositionIterator* fpi,\n+        int32_t offset,\n+        UErrorCode& status) {\n@@ -1733,1 +1749,1 @@\n-        formatted.getAllFieldPositionsImpl(fpih, status);\n+        formatted.getAllFieldPositions(fpih, status);\n@@ -1742,1 +1758,1 @@\n-    if (!fields->properties->equalsDefaultExceptFastFormat()) {\n+    if (!fields->properties.equalsDefaultExceptFastFormat()) {\n@@ -1750,6 +1766,6 @@\n-    UBool trivialPP = fields->properties->positivePrefixPattern.isEmpty();\n-    UBool trivialPS = fields->properties->positiveSuffixPattern.isEmpty();\n-    UBool trivialNP = fields->properties->negativePrefixPattern.isBogus() || (\n-            fields->properties->negativePrefixPattern.length() == 1 &&\n-            fields->properties->negativePrefixPattern.charAt(0) == u'-');\n-    UBool trivialNS = fields->properties->negativeSuffixPattern.isEmpty();\n+    UBool trivialPP = fields->properties.positivePrefixPattern.isEmpty();\n+    UBool trivialPS = fields->properties.positiveSuffixPattern.isEmpty();\n+    UBool trivialNP = fields->properties.negativePrefixPattern.isBogus() || (\n+            fields->properties.negativePrefixPattern.length() == 1 &&\n+            fields->properties.negativePrefixPattern.charAt(0) == u'-');\n+    UBool trivialNS = fields->properties.negativeSuffixPattern.isEmpty();\n@@ -1763,2 +1779,2 @@\n-    bool groupingUsed = fields->properties->groupingUsed;\n-    int32_t groupingSize = fields->properties->groupingSize;\n+    bool groupingUsed = fields->properties.groupingUsed;\n+    int32_t groupingSize = fields->properties.groupingSize;\n@@ -1774,2 +1790,2 @@\n-    int32_t minInt = fields->exportedProperties->minimumIntegerDigits;\n-    int32_t maxInt = fields->exportedProperties->maximumIntegerDigits;\n+    int32_t minInt = fields->exportedProperties.minimumIntegerDigits;\n+    int32_t maxInt = fields->exportedProperties.maximumIntegerDigits;\n@@ -1784,1 +1800,1 @@\n-    int32_t minFrac = fields->exportedProperties->minimumFractionDigits;\n+    int32_t minFrac = fields->exportedProperties.minimumFractionDigits;\n@@ -1815,1 +1831,1 @@\n-            || std::trunc(input) != input\n+            || uprv_trunc(input) != input\n@@ -1848,1 +1864,2 @@\n-    for (int8_t i = 0; i < fields->fastData.maxInt && (input != 0 || i < fields->fastData.minInt); i++) {\n+    int8_t minInt = (fields->fastData.minInt < 1)? 1: fields->fastData.minInt;\n+    for (int8_t i = 0; i < fields->fastData.maxInt && (input != 0 || i < minInt); i++) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/decimfmt.cpp","additions":216,"deletions":199,"binary":false,"changes":415,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  ASSERT(significand != 0);\n+  DOUBLE_CONVERSION_ASSERT(significand != 0);\n@@ -93,1 +93,1 @@\n-                          Vector<char>(buffer), int* length);\n+                          Vector<char> buffer, int* length);\n@@ -100,1 +100,1 @@\n-                                  Vector<char>(buffer), int* length);\n+                                  Vector<char> buffer, int* length);\n@@ -105,2 +105,2 @@\n-  ASSERT(v > 0);\n-  ASSERT(!Double(v).IsSpecial());\n+  DOUBLE_CONVERSION_ASSERT(v > 0);\n+  DOUBLE_CONVERSION_ASSERT(!Double(v).IsSpecial());\n@@ -112,1 +112,1 @@\n-    ASSERT(f == v);\n+    DOUBLE_CONVERSION_ASSERT(f == v);\n@@ -151,1 +151,1 @@\n-  ASSERT(Bignum::kMaxSignificantBits >= 324*4);\n+  DOUBLE_CONVERSION_ASSERT(Bignum::kMaxSignificantBits >= 324*4);\n@@ -180,1 +180,1 @@\n-      UNREACHABLE();\n+      DOUBLE_CONVERSION_UNREACHABLE();\n@@ -212,1 +212,1 @@\n-    ASSERT(digit <= 9);  \/\/ digit is a uint16_t and therefore always positive.\n+    DOUBLE_CONVERSION_ASSERT(digit <= 9);  \/\/ digit is a uint16_t and therefore always positive.\n@@ -258,1 +258,1 @@\n-        ASSERT(buffer[(*length) - 1] != '9');\n+        DOUBLE_CONVERSION_ASSERT(buffer[(*length) - 1] != '9');\n@@ -269,1 +269,1 @@\n-          ASSERT(buffer[(*length) - 1] != '9');\n+          DOUBLE_CONVERSION_ASSERT(buffer[(*length) - 1] != '9');\n@@ -281,1 +281,1 @@\n-      \/\/ We still have an ASSERT here, in case the preconditions were not\n+      \/\/ We still have an DOUBLE_CONVERSION_ASSERT here, in case the preconditions were not\n@@ -283,1 +283,1 @@\n-      ASSERT(buffer[(*length) -1] != '9');\n+      DOUBLE_CONVERSION_ASSERT(buffer[(*length) -1] != '9');\n@@ -300,1 +300,1 @@\n-  ASSERT(count >= 0);\n+  DOUBLE_CONVERSION_ASSERT(count >= 0);\n@@ -304,1 +304,1 @@\n-    ASSERT(digit <= 9);  \/\/ digit is a uint16_t and therefore always positive.\n+    DOUBLE_CONVERSION_ASSERT(digit <= 9);  \/\/ digit is a uint16_t and therefore always positive.\n@@ -317,1 +317,1 @@\n-  ASSERT(digit <= 10);\n+  DOUBLE_CONVERSION_ASSERT(digit <= 10);\n@@ -342,1 +342,1 @@\n-                          Vector<char>(buffer), int* length) {\n+                          Vector<char> buffer, int* length) {\n@@ -358,1 +358,1 @@\n-    ASSERT(*decimal_point == -requested_digits);\n+    DOUBLE_CONVERSION_ASSERT(*decimal_point == -requested_digits);\n@@ -437,1 +437,1 @@\n-  ASSERT(estimated_power >= 0);\n+  DOUBLE_CONVERSION_ASSERT(estimated_power >= 0);\n@@ -523,1 +523,1 @@\n-  ASSERT(numerator == power_ten);\n+  DOUBLE_CONVERSION_ASSERT(numerator == power_ten);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-bignum-dtoa.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+#include <algorithm>\n+#include <cstring>\n+\n@@ -47,5 +50,9 @@\n-Bignum::Bignum()\n-    : bigits_buffer_(), bigits_(bigits_buffer_, kBigitCapacity), used_digits_(0), exponent_(0) {\n-  for (int i = 0; i < kBigitCapacity; ++i) {\n-    bigits_[i] = 0;\n-  }\n+Bignum::Chunk& Bignum::RawBigit(const int index) {\n+  DOUBLE_CONVERSION_ASSERT(static_cast<unsigned>(index) < kBigitCapacity);\n+  return bigits_buffer_[index];\n+}\n+\n+\n+const Bignum::Chunk& Bignum::RawBigit(const int index) const {\n+  DOUBLE_CONVERSION_ASSERT(static_cast<unsigned>(index) < kBigitCapacity);\n+  return bigits_buffer_[index];\n@@ -56,1 +63,1 @@\n-static int BitSize(S value) {\n+static int BitSize(const S value) {\n@@ -62,2 +69,2 @@\n-void Bignum::AssignUInt16(uint16_t value) {\n-  ASSERT(kBigitSize >= BitSize(value));\n+void Bignum::AssignUInt16(const uint16_t value) {\n+  DOUBLE_CONVERSION_ASSERT(kBigitSize >= BitSize(value));\n@@ -65,5 +72,4 @@\n-  if (value == 0) return;\n-\n-  EnsureCapacity(1);\n-  bigits_[0] = value;\n-  used_digits_ = 1;\n+  if (value > 0) {\n+    RawBigit(0) = value;\n+    used_bigits_ = 1;\n+  }\n@@ -74,2 +80,0 @@\n-  const int kUInt64Size = 64;\n-\n@@ -77,7 +81,4 @@\n-  if (value == 0) return;\n-\n-  int needed_bigits = kUInt64Size \/ kBigitSize + 1;\n-  EnsureCapacity(needed_bigits);\n-  for (int i = 0; i < needed_bigits; ++i) {\n-    bigits_[i] = value & kBigitMask;\n-    value = value >> kBigitSize;\n+  for(int i = 0; value > 0; ++i) {\n+    RawBigit(i) = value & kBigitMask;\n+    value >>= kBigitSize;\n+    ++used_bigits_;\n@@ -85,2 +86,0 @@\n-  used_digits_ = needed_bigits;\n-  Clamp();\n@@ -92,2 +91,2 @@\n-  for (int i = 0; i < other.used_digits_; ++i) {\n-    bigits_[i] = other.bigits_[i];\n+  for (int i = 0; i < other.used_bigits_; ++i) {\n+    RawBigit(i) = other.RawBigit(i);\n@@ -95,5 +94,1 @@\n-  \/\/ Clear the excess digits (if there were any).\n-  for (int i = other.used_digits_; i < used_digits_; ++i) {\n-    bigits_[i] = 0;\n-  }\n-  used_digits_ = other.used_digits_;\n+  used_bigits_ = other.used_bigits_;\n@@ -103,3 +98,3 @@\n-static uint64_t ReadUInt64(Vector<const char> buffer,\n-                           int from,\n-                           int digits_to_read) {\n+static uint64_t ReadUInt64(const Vector<const char> buffer,\n+                           const int from,\n+                           const int digits_to_read) {\n@@ -108,2 +103,2 @@\n-    int digit = buffer[i] - '0';\n-    ASSERT(0 <= digit && digit <= 9);\n+    const int digit = buffer[i] - '0';\n+    DOUBLE_CONVERSION_ASSERT(0 <= digit && digit <= 9);\n@@ -116,1 +111,1 @@\n-void Bignum::AssignDecimalString(Vector<const char> value) {\n+void Bignum::AssignDecimalString(const Vector<const char> value) {\n@@ -118,1 +113,1 @@\n-  const int kMaxUint64DecimalDigits = 19;\n+  static const int kMaxUint64DecimalDigits = 19;\n@@ -121,1 +116,1 @@\n-  unsigned int pos = 0;\n+  unsigned pos = 0;\n@@ -124,1 +119,1 @@\n-    uint64_t digits = ReadUInt64(value, pos, kMaxUint64DecimalDigits);\n+    const uint64_t digits = ReadUInt64(value, pos, kMaxUint64DecimalDigits);\n@@ -130,1 +125,1 @@\n-  uint64_t digits = ReadUInt64(value, pos, length);\n+  const uint64_t digits = ReadUInt64(value, pos, length);\n@@ -137,4 +132,8 @@\n-static int HexCharValue(char c) {\n-  if ('0' <= c && c <= '9') return c - '0';\n-  if ('a' <= c && c <= 'f') return 10 + c - 'a';\n-  ASSERT('A' <= c && c <= 'F');\n+static uint64_t HexCharValue(const int c) {\n+  if ('0' <= c && c <= '9') {\n+    return c - '0';\n+  }\n+  if ('a' <= c && c <= 'f') {\n+    return 10 + c - 'a';\n+  }\n+  DOUBLE_CONVERSION_ASSERT('A' <= c && c <= 'F');\n@@ -145,0 +144,2 @@\n+\/\/ Unlike AssignDecimalString(), this function is \"only\" used\n+\/\/ for unit-tests and therefore not performance critical.\n@@ -147,10 +148,12 @@\n-  int length = value.length();\n-\n-  int needed_bigits = length * 4 \/ kBigitSize + 1;\n-  EnsureCapacity(needed_bigits);\n-  int string_index = length - 1;\n-  for (int i = 0; i < needed_bigits - 1; ++i) {\n-    \/\/ These bigits are guaranteed to be \"full\".\n-    Chunk current_bigit = 0;\n-    for (int j = 0; j < kBigitSize \/ 4; j++) {\n-      current_bigit += HexCharValue(value[string_index--]) << (j * 4);\n+  \/\/ Required capacity could be reduced by ignoring leading zeros.\n+  EnsureCapacity(((value.length() * 4) + kBigitSize - 1) \/ kBigitSize);\n+  DOUBLE_CONVERSION_ASSERT(sizeof(uint64_t) * 8 >= kBigitSize + 4);  \/\/ TODO: static_assert\n+  \/\/ Accumulates converted hex digits until at least kBigitSize bits.\n+  \/\/ Works with non-factor-of-four kBigitSizes.\n+  uint64_t tmp = 0;  \/\/ Accumulates converted hex digits until at least\n+  for (int cnt = 0; !value.is_empty(); value.pop_back()) {\n+    tmp |= (HexCharValue(value.last()) << cnt);\n+    if ((cnt += 4) >= kBigitSize) {\n+      RawBigit(used_bigits_++) = (tmp & kBigitMask);\n+      cnt -= kBigitSize;\n+      tmp >>= kBigitSize;\n@@ -158,8 +161,0 @@\n-    bigits_[i] = current_bigit;\n-  }\n-  used_digits_ = needed_bigits - 1;\n-\n-  Chunk most_significant_bigit = 0;  \/\/ Could be = 0;\n-  for (int j = 0; j <= string_index; ++j) {\n-    most_significant_bigit <<= 4;\n-    most_significant_bigit += HexCharValue(value[j]);\n@@ -167,3 +162,2 @@\n-  if (most_significant_bigit != 0) {\n-    bigits_[used_digits_] = most_significant_bigit;\n-    used_digits_++;\n+  if (tmp > 0) {\n+    RawBigit(used_bigits_++) = tmp;\n@@ -175,2 +169,4 @@\n-void Bignum::AddUInt64(uint64_t operand) {\n-  if (operand == 0) return;\n+void Bignum::AddUInt64(const uint64_t operand) {\n+  if (operand == 0) {\n+    return;\n+  }\n@@ -184,2 +180,2 @@\n-  ASSERT(IsClamped());\n-  ASSERT(other.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(other.IsClamped());\n@@ -203,1 +199,1 @@\n-  EnsureCapacity(1 + Max(BigitLength(), other.BigitLength()) - exponent_);\n+  EnsureCapacity(1 + (std::max)(BigitLength(), other.BigitLength()) - exponent_);\n@@ -206,4 +202,8 @@\n-  ASSERT(bigit_pos >= 0);\n-  for (int i = 0; i < other.used_digits_; ++i) {\n-    Chunk sum = bigits_[bigit_pos] + other.bigits_[i] + carry;\n-    bigits_[bigit_pos] = sum & kBigitMask;\n+  DOUBLE_CONVERSION_ASSERT(bigit_pos >= 0);\n+  for (int i = used_bigits_; i < bigit_pos; ++i) {\n+    RawBigit(i) = 0;\n+  }\n+  for (int i = 0; i < other.used_bigits_; ++i) {\n+    const Chunk my = (bigit_pos < used_bigits_) ? RawBigit(bigit_pos) : 0;\n+    const Chunk sum = my + other.RawBigit(i) + carry;\n+    RawBigit(bigit_pos) = sum & kBigitMask;\n@@ -211,1 +211,1 @@\n-    bigit_pos++;\n+    ++bigit_pos;\n@@ -213,1 +213,0 @@\n-\n@@ -215,2 +214,3 @@\n-    Chunk sum = bigits_[bigit_pos] + carry;\n-    bigits_[bigit_pos] = sum & kBigitMask;\n+    const Chunk my = (bigit_pos < used_bigits_) ? RawBigit(bigit_pos) : 0;\n+    const Chunk sum = my + carry;\n+    RawBigit(bigit_pos) = sum & kBigitMask;\n@@ -218,1 +218,1 @@\n-    bigit_pos++;\n+    ++bigit_pos;\n@@ -220,2 +220,2 @@\n-  used_digits_ = Max(bigit_pos, used_digits_);\n-  ASSERT(IsClamped());\n+  used_bigits_ = (std::max)(bigit_pos, static_cast<int>(used_bigits_));\n+  DOUBLE_CONVERSION_ASSERT(IsClamped());\n@@ -226,2 +226,2 @@\n-  ASSERT(IsClamped());\n-  ASSERT(other.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(other.IsClamped());\n@@ -229,1 +229,1 @@\n-  ASSERT(LessEqual(other, *this));\n+  DOUBLE_CONVERSION_ASSERT(LessEqual(other, *this));\n@@ -233,1 +233,1 @@\n-  int offset = other.exponent_ - exponent_;\n+  const int offset = other.exponent_ - exponent_;\n@@ -236,4 +236,4 @@\n-  for (i = 0; i < other.used_digits_; ++i) {\n-    ASSERT((borrow == 0) || (borrow == 1));\n-    Chunk difference = bigits_[i + offset] - other.bigits_[i] - borrow;\n-    bigits_[i + offset] = difference & kBigitMask;\n+  for (i = 0; i < other.used_bigits_; ++i) {\n+    DOUBLE_CONVERSION_ASSERT((borrow == 0) || (borrow == 1));\n+    const Chunk difference = RawBigit(i + offset) - other.RawBigit(i) - borrow;\n+    RawBigit(i + offset) = difference & kBigitMask;\n@@ -243,2 +243,2 @@\n-    Chunk difference = bigits_[i + offset] - borrow;\n-    bigits_[i + offset] = difference & kBigitMask;\n+    const Chunk difference = RawBigit(i + offset) - borrow;\n+    RawBigit(i + offset) = difference & kBigitMask;\n@@ -252,5 +252,7 @@\n-void Bignum::ShiftLeft(int shift_amount) {\n-  if (used_digits_ == 0) return;\n-  exponent_ += shift_amount \/ kBigitSize;\n-  int local_shift = shift_amount % kBigitSize;\n-  EnsureCapacity(used_digits_ + 1);\n+void Bignum::ShiftLeft(const int shift_amount) {\n+  if (used_bigits_ == 0) {\n+    return;\n+  }\n+  exponent_ += (shift_amount \/ kBigitSize);\n+  const int local_shift = shift_amount % kBigitSize;\n+  EnsureCapacity(used_bigits_ + 1);\n@@ -261,2 +263,4 @@\n-void Bignum::MultiplyByUInt32(uint32_t factor) {\n-  if (factor == 1) return;\n+void Bignum::MultiplyByUInt32(const uint32_t factor) {\n+  if (factor == 1) {\n+    return;\n+  }\n@@ -267,2 +271,3 @@\n-  if (used_digits_ == 0) return;\n-\n+  if (used_bigits_ == 0) {\n+    return;\n+  }\n@@ -271,1 +276,1 @@\n-  ASSERT(kDoubleChunkSize >= kBigitSize + 32 + 1);\n+  DOUBLE_CONVERSION_ASSERT(kDoubleChunkSize >= kBigitSize + 32 + 1);\n@@ -273,3 +278,3 @@\n-  for (int i = 0; i < used_digits_; ++i) {\n-    DoubleChunk product = static_cast<DoubleChunk>(factor) * bigits_[i] + carry;\n-    bigits_[i] = static_cast<Chunk>(product & kBigitMask);\n+  for (int i = 0; i < used_bigits_; ++i) {\n+    const DoubleChunk product = static_cast<DoubleChunk>(factor) * RawBigit(i) + carry;\n+    RawBigit(i) = static_cast<Chunk>(product & kBigitMask);\n@@ -279,3 +284,3 @@\n-    EnsureCapacity(used_digits_ + 1);\n-    bigits_[used_digits_] = carry & kBigitMask;\n-    used_digits_++;\n+    EnsureCapacity(used_bigits_ + 1);\n+    RawBigit(used_bigits_) = carry & kBigitMask;\n+    used_bigits_++;\n@@ -287,2 +292,4 @@\n-void Bignum::MultiplyByUInt64(uint64_t factor) {\n-  if (factor == 1) return;\n+void Bignum::MultiplyByUInt64(const uint64_t factor) {\n+  if (factor == 1) {\n+    return;\n+  }\n@@ -293,1 +300,4 @@\n-  ASSERT(kBigitSize < 32);\n+  if (used_bigits_ == 0) {\n+    return;\n+  }\n+  DOUBLE_CONVERSION_ASSERT(kBigitSize < 32);\n@@ -295,7 +305,7 @@\n-  uint64_t low = factor & 0xFFFFFFFF;\n-  uint64_t high = factor >> 32;\n-  for (int i = 0; i < used_digits_; ++i) {\n-    uint64_t product_low = low * bigits_[i];\n-    uint64_t product_high = high * bigits_[i];\n-    uint64_t tmp = (carry & kBigitMask) + product_low;\n-    bigits_[i] = tmp & kBigitMask;\n+  const uint64_t low = factor & 0xFFFFFFFF;\n+  const uint64_t high = factor >> 32;\n+  for (int i = 0; i < used_bigits_; ++i) {\n+    const uint64_t product_low = low * RawBigit(i);\n+    const uint64_t product_high = high * RawBigit(i);\n+    const uint64_t tmp = (carry & kBigitMask) + product_low;\n+    RawBigit(i) = tmp & kBigitMask;\n@@ -306,3 +316,3 @@\n-    EnsureCapacity(used_digits_ + 1);\n-    bigits_[used_digits_] = carry & kBigitMask;\n-    used_digits_++;\n+    EnsureCapacity(used_bigits_ + 1);\n+    RawBigit(used_bigits_) = carry & kBigitMask;\n+    used_bigits_++;\n@@ -314,16 +324,16 @@\n-void Bignum::MultiplyByPowerOfTen(int exponent) {\n-  const uint64_t kFive27 = UINT64_2PART_C(0x6765c793, fa10079d);\n-  const uint16_t kFive1 = 5;\n-  const uint16_t kFive2 = kFive1 * 5;\n-  const uint16_t kFive3 = kFive2 * 5;\n-  const uint16_t kFive4 = kFive3 * 5;\n-  const uint16_t kFive5 = kFive4 * 5;\n-  const uint16_t kFive6 = kFive5 * 5;\n-  const uint32_t kFive7 = kFive6 * 5;\n-  const uint32_t kFive8 = kFive7 * 5;\n-  const uint32_t kFive9 = kFive8 * 5;\n-  const uint32_t kFive10 = kFive9 * 5;\n-  const uint32_t kFive11 = kFive10 * 5;\n-  const uint32_t kFive12 = kFive11 * 5;\n-  const uint32_t kFive13 = kFive12 * 5;\n-  const uint32_t kFive1_to_12[] =\n+void Bignum::MultiplyByPowerOfTen(const int exponent) {\n+  static const uint64_t kFive27 = DOUBLE_CONVERSION_UINT64_2PART_C(0x6765c793, fa10079d);\n+  static const uint16_t kFive1 = 5;\n+  static const uint16_t kFive2 = kFive1 * 5;\n+  static const uint16_t kFive3 = kFive2 * 5;\n+  static const uint16_t kFive4 = kFive3 * 5;\n+  static const uint16_t kFive5 = kFive4 * 5;\n+  static const uint16_t kFive6 = kFive5 * 5;\n+  static const uint32_t kFive7 = kFive6 * 5;\n+  static const uint32_t kFive8 = kFive7 * 5;\n+  static const uint32_t kFive9 = kFive8 * 5;\n+  static const uint32_t kFive10 = kFive9 * 5;\n+  static const uint32_t kFive11 = kFive10 * 5;\n+  static const uint32_t kFive12 = kFive11 * 5;\n+  static const uint32_t kFive13 = kFive12 * 5;\n+  static const uint32_t kFive1_to_12[] =\n@@ -333,3 +343,1 @@\n-  ASSERT(exponent >= 0);\n-  if (exponent == 0) return;\n-  if (used_digits_ == 0) return;\n+  DOUBLE_CONVERSION_ASSERT(exponent >= 0);\n@@ -337,0 +345,6 @@\n+  if (exponent == 0) {\n+    return;\n+  }\n+  if (used_bigits_ == 0) {\n+    return;\n+  }\n@@ -355,2 +369,2 @@\n-  ASSERT(IsClamped());\n-  int product_length = 2 * used_digits_;\n+  DOUBLE_CONVERSION_ASSERT(IsClamped());\n+  const int product_length = 2 * used_bigits_;\n@@ -371,2 +385,2 @@\n-  if ((1 << (2 * (kChunkSize - kBigitSize))) <= used_digits_) {\n-    UNIMPLEMENTED();\n+  if ((1 << (2 * (kChunkSize - kBigitSize))) <= used_bigits_) {\n+    DOUBLE_CONVERSION_UNIMPLEMENTED();\n@@ -376,3 +390,3 @@\n-  int copy_offset = used_digits_;\n-  for (int i = 0; i < used_digits_; ++i) {\n-    bigits_[copy_offset + i] = bigits_[i];\n+  const int copy_offset = used_bigits_;\n+  for (int i = 0; i < used_bigits_; ++i) {\n+    RawBigit(copy_offset + i) = RawBigit(i);\n@@ -381,1 +395,1 @@\n-  for (int i = 0; i < used_digits_; ++i) {\n+  for (int i = 0; i < used_bigits_; ++i) {\n@@ -388,2 +402,2 @@\n-      Chunk chunk1 = bigits_[copy_offset + bigit_index1];\n-      Chunk chunk2 = bigits_[copy_offset + bigit_index2];\n+      const Chunk chunk1 = RawBigit(copy_offset + bigit_index1);\n+      const Chunk chunk2 = RawBigit(copy_offset + bigit_index2);\n@@ -394,1 +408,1 @@\n-    bigits_[i] = static_cast<Chunk>(accumulator) & kBigitMask;\n+    RawBigit(i) = static_cast<Chunk>(accumulator) & kBigitMask;\n@@ -397,2 +411,2 @@\n-  for (int i = used_digits_; i < product_length; ++i) {\n-    int bigit_index1 = used_digits_ - 1;\n+  for (int i = used_bigits_; i < product_length; ++i) {\n+    int bigit_index1 = used_bigits_ - 1;\n@@ -402,3 +416,3 @@\n-    while (bigit_index2 < used_digits_) {\n-      Chunk chunk1 = bigits_[copy_offset + bigit_index1];\n-      Chunk chunk2 = bigits_[copy_offset + bigit_index2];\n+    while (bigit_index2 < used_bigits_) {\n+      const Chunk chunk1 = RawBigit(copy_offset + bigit_index1);\n+      const Chunk chunk2 = RawBigit(copy_offset + bigit_index2);\n@@ -409,1 +423,1 @@\n-    \/\/ The overwritten bigits_[i] will never be read in further loop iterations,\n+    \/\/ The overwritten RawBigit(i) will never be read in further loop iterations,\n@@ -411,2 +425,2 @@\n-    \/\/ than i - used_digits_.\n-    bigits_[i] = static_cast<Chunk>(accumulator) & kBigitMask;\n+    \/\/ than i - used_bigits_.\n+    RawBigit(i) = static_cast<Chunk>(accumulator) & kBigitMask;\n@@ -417,1 +431,1 @@\n-  ASSERT(accumulator == 0);\n+  DOUBLE_CONVERSION_ASSERT(accumulator == 0);\n@@ -420,1 +434,1 @@\n-  used_digits_ = product_length;\n+  used_bigits_ = product_length;\n@@ -426,3 +440,3 @@\n-void Bignum::AssignPowerUInt16(uint16_t base, int power_exponent) {\n-  ASSERT(base != 0);\n-  ASSERT(power_exponent >= 0);\n+void Bignum::AssignPowerUInt16(uint16_t base, const int power_exponent) {\n+  DOUBLE_CONVERSION_ASSERT(base != 0);\n+  DOUBLE_CONVERSION_ASSERT(power_exponent >= 0);\n@@ -448,1 +462,1 @@\n-  int final_size = bit_size * power_exponent;\n+  const int final_size = bit_size * power_exponent;\n@@ -469,4 +483,4 @@\n-      ASSERT(bit_size > 0);\n-      uint64_t base_bits_mask =\n-          ~((static_cast<uint64_t>(1) << (64 - bit_size)) - 1);\n-      bool high_bits_zero = (this_value & base_bits_mask) == 0;\n+      DOUBLE_CONVERSION_ASSERT(bit_size > 0);\n+      const uint64_t base_bits_mask =\n+        ~((static_cast<uint64_t>(1) << (64 - bit_size)) - 1);\n+      const bool high_bits_zero = (this_value & base_bits_mask) == 0;\n@@ -502,3 +516,3 @@\n-  ASSERT(IsClamped());\n-  ASSERT(other.IsClamped());\n-  ASSERT(other.used_digits_ > 0);\n+  DOUBLE_CONVERSION_ASSERT(IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(other.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(other.used_bigits_ > 0);\n@@ -522,2 +536,2 @@\n-    ASSERT(other.bigits_[other.used_digits_ - 1] >= ((1 << kBigitSize) \/ 16));\n-    ASSERT(bigits_[used_digits_ - 1] < 0x10000);\n+    DOUBLE_CONVERSION_ASSERT(other.RawBigit(other.used_bigits_ - 1) >= ((1 << kBigitSize) \/ 16));\n+    DOUBLE_CONVERSION_ASSERT(RawBigit(used_bigits_ - 1) < 0x10000);\n@@ -526,2 +540,2 @@\n-    result += static_cast<uint16_t>(bigits_[used_digits_ - 1]);\n-    SubtractTimes(other, bigits_[used_digits_ - 1]);\n+    result += static_cast<uint16_t>(RawBigit(used_bigits_ - 1));\n+    SubtractTimes(other, RawBigit(used_bigits_ - 1));\n@@ -530,1 +544,1 @@\n-  ASSERT(BigitLength() == other.BigitLength());\n+  DOUBLE_CONVERSION_ASSERT(BigitLength() == other.BigitLength());\n@@ -534,3 +548,3 @@\n-  \/\/ bigits_[used_digits_ - 1] is safe.\n-  Chunk this_bigit = bigits_[used_digits_ - 1];\n-  Chunk other_bigit = other.bigits_[other.used_digits_ - 1];\n+  \/\/ RawBigit(used_bigits_ - 1) is safe.\n+  const Chunk this_bigit = RawBigit(used_bigits_ - 1);\n+  const Chunk other_bigit = other.RawBigit(other.used_bigits_ - 1);\n@@ -538,1 +552,1 @@\n-  if (other.used_digits_ == 1) {\n+  if (other.used_bigits_ == 1) {\n@@ -541,2 +555,2 @@\n-    bigits_[used_digits_ - 1] = this_bigit - other_bigit * quotient;\n-    ASSERT(quotient < 0x10000);\n+    RawBigit(used_bigits_ - 1) = this_bigit - other_bigit * quotient;\n+    DOUBLE_CONVERSION_ASSERT(quotient < 0x10000);\n@@ -548,2 +562,2 @@\n-  int division_estimate = this_bigit \/ (other_bigit + 1);\n-  ASSERT(division_estimate < 0x10000);\n+  const int division_estimate = this_bigit \/ (other_bigit + 1);\n+  DOUBLE_CONVERSION_ASSERT(division_estimate < 0x10000);\n@@ -569,1 +583,1 @@\n-  ASSERT(number > 0);\n+  DOUBLE_CONVERSION_ASSERT(number > 0);\n@@ -579,3 +593,5 @@\n-static char HexCharOfValue(int value) {\n-  ASSERT(0 <= value && value <= 16);\n-  if (value < 10) return static_cast<char>(value + '0');\n+static char HexCharOfValue(const int value) {\n+  DOUBLE_CONVERSION_ASSERT(0 <= value && value <= 16);\n+  if (value < 10) {\n+    return static_cast<char>(value + '0');\n+  }\n@@ -586,2 +602,2 @@\n-bool Bignum::ToHexString(char* buffer, int buffer_size) const {\n-  ASSERT(IsClamped());\n+bool Bignum::ToHexString(char* buffer, const int buffer_size) const {\n+  DOUBLE_CONVERSION_ASSERT(IsClamped());\n@@ -589,2 +605,2 @@\n-  ASSERT(kBigitSize % 4 == 0);\n-  const int kHexCharsPerBigit = kBigitSize \/ 4;\n+  DOUBLE_CONVERSION_ASSERT(kBigitSize % 4 == 0);\n+  static const int kHexCharsPerBigit = kBigitSize \/ 4;\n@@ -592,2 +608,4 @@\n-  if (used_digits_ == 0) {\n-    if (buffer_size < 2) return false;\n+  if (used_bigits_ == 0) {\n+    if (buffer_size < 2) {\n+      return false;\n+    }\n@@ -599,3 +617,5 @@\n-  int needed_chars = (BigitLength() - 1) * kHexCharsPerBigit +\n-      SizeInHexChars(bigits_[used_digits_ - 1]) + 1;\n-  if (needed_chars > buffer_size) return false;\n+  const int needed_chars = (BigitLength() - 1) * kHexCharsPerBigit +\n+    SizeInHexChars(RawBigit(used_bigits_ - 1)) + 1;\n+  if (needed_chars > buffer_size) {\n+    return false;\n+  }\n@@ -609,2 +629,2 @@\n-  for (int i = 0; i < used_digits_ - 1; ++i) {\n-    Chunk current_bigit = bigits_[i];\n+  for (int i = 0; i < used_bigits_ - 1; ++i) {\n+    Chunk current_bigit = RawBigit(i);\n@@ -617,1 +637,1 @@\n-  Chunk most_significant_bigit = bigits_[used_digits_ - 1];\n+  Chunk most_significant_bigit = RawBigit(used_bigits_ - 1);\n@@ -626,4 +646,8 @@\n-Bignum::Chunk Bignum::BigitAt(int index) const {\n-  if (index >= BigitLength()) return 0;\n-  if (index < exponent_) return 0;\n-  return bigits_[index - exponent_];\n+Bignum::Chunk Bignum::BigitOrZero(const int index) const {\n+  if (index >= BigitLength()) {\n+    return 0;\n+  }\n+  if (index < exponent_) {\n+    return 0;\n+  }\n+  return RawBigit(index - exponent_);\n@@ -634,11 +658,19 @@\n-  ASSERT(a.IsClamped());\n-  ASSERT(b.IsClamped());\n-  int bigit_length_a = a.BigitLength();\n-  int bigit_length_b = b.BigitLength();\n-  if (bigit_length_a < bigit_length_b) return -1;\n-  if (bigit_length_a > bigit_length_b) return +1;\n-  for (int i = bigit_length_a - 1; i >= Min(a.exponent_, b.exponent_); --i) {\n-    Chunk bigit_a = a.BigitAt(i);\n-    Chunk bigit_b = b.BigitAt(i);\n-    if (bigit_a < bigit_b) return -1;\n-    if (bigit_a > bigit_b) return +1;\n+  DOUBLE_CONVERSION_ASSERT(a.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(b.IsClamped());\n+  const int bigit_length_a = a.BigitLength();\n+  const int bigit_length_b = b.BigitLength();\n+  if (bigit_length_a < bigit_length_b) {\n+    return -1;\n+  }\n+  if (bigit_length_a > bigit_length_b) {\n+    return +1;\n+  }\n+  for (int i = bigit_length_a - 1; i >= (std::min)(a.exponent_, b.exponent_); --i) {\n+    const Chunk bigit_a = a.BigitOrZero(i);\n+    const Chunk bigit_b = b.BigitOrZero(i);\n+    if (bigit_a < bigit_b) {\n+      return -1;\n+    }\n+    if (bigit_a > bigit_b) {\n+      return +1;\n+    }\n@@ -652,3 +684,3 @@\n-  ASSERT(a.IsClamped());\n-  ASSERT(b.IsClamped());\n-  ASSERT(c.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(a.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(b.IsClamped());\n+  DOUBLE_CONVERSION_ASSERT(c.IsClamped());\n@@ -658,2 +690,6 @@\n-  if (a.BigitLength() + 1 < c.BigitLength()) return -1;\n-  if (a.BigitLength() > c.BigitLength()) return +1;\n+  if (a.BigitLength() + 1 < c.BigitLength()) {\n+    return -1;\n+  }\n+  if (a.BigitLength() > c.BigitLength()) {\n+    return +1;\n+  }\n@@ -669,1 +705,1 @@\n-  int min_exponent = Min(Min(a.exponent_, b.exponent_), c.exponent_);\n+  const int min_exponent = (std::min)((std::min)(a.exponent_, b.exponent_), c.exponent_);\n@@ -671,4 +707,4 @@\n-    Chunk chunk_a = a.BigitAt(i);\n-    Chunk chunk_b = b.BigitAt(i);\n-    Chunk chunk_c = c.BigitAt(i);\n-    Chunk sum = chunk_a + chunk_b;\n+    const Chunk chunk_a = a.BigitOrZero(i);\n+    const Chunk chunk_b = b.BigitOrZero(i);\n+    const Chunk chunk_c = c.BigitOrZero(i);\n+    const Chunk sum = chunk_a + chunk_b;\n@@ -679,1 +715,3 @@\n-      if (borrow > 1) return -1;\n+      if (borrow > 1) {\n+        return -1;\n+      }\n@@ -683,1 +721,3 @@\n-  if (borrow == 0) return 0;\n+  if (borrow == 0) {\n+    return 0;\n+  }\n@@ -689,2 +729,2 @@\n-  while (used_digits_ > 0 && bigits_[used_digits_ - 1] == 0) {\n-    used_digits_--;\n+  while (used_bigits_ > 0 && RawBigit(used_bigits_ - 1) == 0) {\n+    used_bigits_--;\n@@ -692,1 +732,1 @@\n-  if (used_digits_ == 0) {\n+  if (used_bigits_ == 0) {\n@@ -699,14 +739,0 @@\n-bool Bignum::IsClamped() const {\n-  return used_digits_ == 0 || bigits_[used_digits_ - 1] != 0;\n-}\n-\n-\n-void Bignum::Zero() {\n-  for (int i = 0; i < used_digits_; ++i) {\n-    bigits_[i] = 0;\n-  }\n-  used_digits_ = 0;\n-  exponent_ = 0;\n-}\n-\n-\n@@ -715,1 +741,1 @@\n-    \/\/ If \"X\" represents a \"hidden\" digit (by the exponent) then we are in the\n+    \/\/ If \"X\" represents a \"hidden\" bigit (by the exponent) then we are in the\n@@ -721,4 +747,4 @@\n-    int zero_digits = exponent_ - other.exponent_;\n-    EnsureCapacity(used_digits_ + zero_digits);\n-    for (int i = used_digits_ - 1; i >= 0; --i) {\n-      bigits_[i + zero_digits] = bigits_[i];\n+    const int zero_bigits = exponent_ - other.exponent_;\n+    EnsureCapacity(used_bigits_ + zero_bigits);\n+    for (int i = used_bigits_ - 1; i >= 0; --i) {\n+      RawBigit(i + zero_bigits) = RawBigit(i);\n@@ -726,2 +752,2 @@\n-    for (int i = 0; i < zero_digits; ++i) {\n-      bigits_[i] = 0;\n+    for (int i = 0; i < zero_bigits; ++i) {\n+      RawBigit(i) = 0;\n@@ -729,4 +755,5 @@\n-    used_digits_ += zero_digits;\n-    exponent_ -= zero_digits;\n-    ASSERT(used_digits_ >= 0);\n-    ASSERT(exponent_ >= 0);\n+    used_bigits_ += zero_bigits;\n+    exponent_ -= zero_bigits;\n+\n+    DOUBLE_CONVERSION_ASSERT(used_bigits_ >= 0);\n+    DOUBLE_CONVERSION_ASSERT(exponent_ >= 0);\n@@ -737,3 +764,3 @@\n-void Bignum::BigitsShiftLeft(int shift_amount) {\n-  ASSERT(shift_amount < kBigitSize);\n-  ASSERT(shift_amount >= 0);\n+void Bignum::BigitsShiftLeft(const int shift_amount) {\n+  DOUBLE_CONVERSION_ASSERT(shift_amount < kBigitSize);\n+  DOUBLE_CONVERSION_ASSERT(shift_amount >= 0);\n@@ -741,3 +768,3 @@\n-  for (int i = 0; i < used_digits_; ++i) {\n-    Chunk new_carry = bigits_[i] >> (kBigitSize - shift_amount);\n-    bigits_[i] = ((bigits_[i] << shift_amount) + carry) & kBigitMask;\n+  for (int i = 0; i < used_bigits_; ++i) {\n+    const Chunk new_carry = RawBigit(i) >> (kBigitSize - shift_amount);\n+    RawBigit(i) = ((RawBigit(i) << shift_amount) + carry) & kBigitMask;\n@@ -747,2 +774,2 @@\n-    bigits_[used_digits_] = carry;\n-    used_digits_++;\n+    RawBigit(used_bigits_) = carry;\n+    used_bigits_++;\n@@ -753,2 +780,2 @@\n-void Bignum::SubtractTimes(const Bignum& other, int factor) {\n-  ASSERT(exponent_ <= other.exponent_);\n+void Bignum::SubtractTimes(const Bignum& other, const int factor) {\n+  DOUBLE_CONVERSION_ASSERT(exponent_ <= other.exponent_);\n@@ -762,6 +789,6 @@\n-  int exponent_diff = other.exponent_ - exponent_;\n-  for (int i = 0; i < other.used_digits_; ++i) {\n-    DoubleChunk product = static_cast<DoubleChunk>(factor) * other.bigits_[i];\n-    DoubleChunk remove = borrow + product;\n-    Chunk difference = bigits_[i + exponent_diff] - (remove & kBigitMask);\n-    bigits_[i + exponent_diff] = difference & kBigitMask;\n+  const int exponent_diff = other.exponent_ - exponent_;\n+  for (int i = 0; i < other.used_bigits_; ++i) {\n+    const DoubleChunk product = static_cast<DoubleChunk>(factor) * other.RawBigit(i);\n+    const DoubleChunk remove = borrow + product;\n+    const Chunk difference = RawBigit(i + exponent_diff) - (remove & kBigitMask);\n+    RawBigit(i + exponent_diff) = difference & kBigitMask;\n@@ -771,4 +798,6 @@\n-  for (int i = other.used_digits_ + exponent_diff; i < used_digits_; ++i) {\n-    if (borrow == 0) return;\n-    Chunk difference = bigits_[i] - borrow;\n-    bigits_[i] = difference & kBigitMask;\n+  for (int i = other.used_bigits_ + exponent_diff; i < used_bigits_; ++i) {\n+    if (borrow == 0) {\n+      return;\n+    }\n+    const Chunk difference = RawBigit(i) - borrow;\n+    RawBigit(i) = difference & kBigitMask;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-bignum.cpp","additions":305,"deletions":276,"binary":false,"changes":581,"status":"modified"},{"patch":"@@ -56,2 +56,3 @@\n-  Bignum();\n-  void AssignUInt16(uint16_t value);\n+  Bignum() : used_bigits_(0), exponent_(0) {}\n+\n+  void AssignUInt16(const uint16_t value);\n@@ -61,2 +62,2 @@\n-  void AssignDecimalString(Vector<const char> value);\n-  void AssignHexString(Vector<const char> value);\n+  void AssignDecimalString(const Vector<const char> value);\n+  void AssignHexString(const Vector<const char> value);\n@@ -64,1 +65,1 @@\n-  void AssignPowerUInt16(uint16_t base, int exponent);\n+  void AssignPowerUInt16(uint16_t base, const int exponent);\n@@ -66,1 +67,1 @@\n-  void AddUInt64(uint64_t operand);\n+  void AddUInt64(const uint64_t operand);\n@@ -72,4 +73,4 @@\n-  void ShiftLeft(int shift_amount);\n-  void MultiplyByUInt32(uint32_t factor);\n-  void MultiplyByUInt64(uint64_t factor);\n-  void MultiplyByPowerOfTen(int exponent);\n+  void ShiftLeft(const int shift_amount);\n+  void MultiplyByUInt32(const uint32_t factor);\n+  void MultiplyByUInt64(const uint64_t factor);\n+  void MultiplyByPowerOfTen(const int exponent);\n@@ -83,1 +84,1 @@\n-  bool ToHexString(char* buffer, int buffer_size) const;\n+  bool ToHexString(char* buffer, const int buffer_size) const;\n@@ -127,1 +128,1 @@\n-  void EnsureCapacity(int size) {\n+  static void EnsureCapacity(const int size) {\n@@ -129,1 +130,1 @@\n-      UNREACHABLE();\n+      DOUBLE_CONVERSION_UNREACHABLE();\n@@ -134,2 +135,7 @@\n-  bool IsClamped() const;\n-  void Zero();\n+  bool IsClamped() const {\n+    return used_bigits_ == 0 || RawBigit(used_bigits_ - 1) != 0;\n+  }\n+  void Zero() {\n+    used_bigits_ = 0;\n+    exponent_ = 0;\n+  }\n@@ -137,1 +143,1 @@\n-  \/\/ Updates used_digits_ if necessary.\n+  \/\/ Updates used_bigits_ if necessary.\n@@ -139,6 +145,14 @@\n-  void BigitsShiftLeft(int shift_amount);\n-  \/\/ BigitLength includes the \"hidden\" digits encoded in the exponent.\n-  int BigitLength() const { return used_digits_ + exponent_; }\n-  Chunk BigitAt(int index) const;\n-  void SubtractTimes(const Bignum& other, int factor);\n-\n+  void BigitsShiftLeft(const int shift_amount);\n+  \/\/ BigitLength includes the \"hidden\" bigits encoded in the exponent.\n+  int BigitLength() const { return used_bigits_ + exponent_; }\n+  Chunk& RawBigit(const int index);\n+  const Chunk& RawBigit(const int index) const;\n+  Chunk BigitOrZero(const int index) const;\n+  void SubtractTimes(const Bignum& other, const int factor);\n+\n+  \/\/ The Bignum's value is value(bigits_buffer_) * 2^(exponent_ * kBigitSize),\n+  \/\/ where the value of the buffer consists of the lower kBigitSize bits of\n+  \/\/ the first used_bigits_ Chunks in bigits_buffer_, first chunk has lowest\n+  \/\/ significant bits.\n+  int16_t used_bigits_;\n+  int16_t exponent_;\n@@ -146,8 +160,2 @@\n-  \/\/ A vector backed by bigits_buffer_. This way accesses to the array are\n-  \/\/ checked for out-of-bounds errors.\n-  Vector<Chunk> bigits_;\n-  int used_digits_;\n-  \/\/ The Bignum's value equals value(bigits_) * 2^(exponent_ * kBigitSize).\n-  int exponent_;\n-\n-  DC_DISALLOW_COPY_AND_ASSIGN(Bignum);\n+\n+  DOUBLE_CONVERSION_DISALLOW_COPY_AND_ASSIGN(Bignum);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-bignum.h","additions":38,"deletions":30,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -52,0 +52,2 @@\n+namespace PowersOfTenCache {\n+\n@@ -59,87 +61,87 @@\n-  {UINT64_2PART_C(0xfa8fd5a0, 081c0288), -1220, -348},\n-  {UINT64_2PART_C(0xbaaee17f, a23ebf76), -1193, -340},\n-  {UINT64_2PART_C(0x8b16fb20, 3055ac76), -1166, -332},\n-  {UINT64_2PART_C(0xcf42894a, 5dce35ea), -1140, -324},\n-  {UINT64_2PART_C(0x9a6bb0aa, 55653b2d), -1113, -316},\n-  {UINT64_2PART_C(0xe61acf03, 3d1a45df), -1087, -308},\n-  {UINT64_2PART_C(0xab70fe17, c79ac6ca), -1060, -300},\n-  {UINT64_2PART_C(0xff77b1fc, bebcdc4f), -1034, -292},\n-  {UINT64_2PART_C(0xbe5691ef, 416bd60c), -1007, -284},\n-  {UINT64_2PART_C(0x8dd01fad, 907ffc3c), -980, -276},\n-  {UINT64_2PART_C(0xd3515c28, 31559a83), -954, -268},\n-  {UINT64_2PART_C(0x9d71ac8f, ada6c9b5), -927, -260},\n-  {UINT64_2PART_C(0xea9c2277, 23ee8bcb), -901, -252},\n-  {UINT64_2PART_C(0xaecc4991, 4078536d), -874, -244},\n-  {UINT64_2PART_C(0x823c1279, 5db6ce57), -847, -236},\n-  {UINT64_2PART_C(0xc2109436, 4dfb5637), -821, -228},\n-  {UINT64_2PART_C(0x9096ea6f, 3848984f), -794, -220},\n-  {UINT64_2PART_C(0xd77485cb, 25823ac7), -768, -212},\n-  {UINT64_2PART_C(0xa086cfcd, 97bf97f4), -741, -204},\n-  {UINT64_2PART_C(0xef340a98, 172aace5), -715, -196},\n-  {UINT64_2PART_C(0xb23867fb, 2a35b28e), -688, -188},\n-  {UINT64_2PART_C(0x84c8d4df, d2c63f3b), -661, -180},\n-  {UINT64_2PART_C(0xc5dd4427, 1ad3cdba), -635, -172},\n-  {UINT64_2PART_C(0x936b9fce, bb25c996), -608, -164},\n-  {UINT64_2PART_C(0xdbac6c24, 7d62a584), -582, -156},\n-  {UINT64_2PART_C(0xa3ab6658, 0d5fdaf6), -555, -148},\n-  {UINT64_2PART_C(0xf3e2f893, dec3f126), -529, -140},\n-  {UINT64_2PART_C(0xb5b5ada8, aaff80b8), -502, -132},\n-  {UINT64_2PART_C(0x87625f05, 6c7c4a8b), -475, -124},\n-  {UINT64_2PART_C(0xc9bcff60, 34c13053), -449, -116},\n-  {UINT64_2PART_C(0x964e858c, 91ba2655), -422, -108},\n-  {UINT64_2PART_C(0xdff97724, 70297ebd), -396, -100},\n-  {UINT64_2PART_C(0xa6dfbd9f, b8e5b88f), -369, -92},\n-  {UINT64_2PART_C(0xf8a95fcf, 88747d94), -343, -84},\n-  {UINT64_2PART_C(0xb9447093, 8fa89bcf), -316, -76},\n-  {UINT64_2PART_C(0x8a08f0f8, bf0f156b), -289, -68},\n-  {UINT64_2PART_C(0xcdb02555, 653131b6), -263, -60},\n-  {UINT64_2PART_C(0x993fe2c6, d07b7fac), -236, -52},\n-  {UINT64_2PART_C(0xe45c10c4, 2a2b3b06), -210, -44},\n-  {UINT64_2PART_C(0xaa242499, 697392d3), -183, -36},\n-  {UINT64_2PART_C(0xfd87b5f2, 8300ca0e), -157, -28},\n-  {UINT64_2PART_C(0xbce50864, 92111aeb), -130, -20},\n-  {UINT64_2PART_C(0x8cbccc09, 6f5088cc), -103, -12},\n-  {UINT64_2PART_C(0xd1b71758, e219652c), -77, -4},\n-  {UINT64_2PART_C(0x9c400000, 00000000), -50, 4},\n-  {UINT64_2PART_C(0xe8d4a510, 00000000), -24, 12},\n-  {UINT64_2PART_C(0xad78ebc5, ac620000), 3, 20},\n-  {UINT64_2PART_C(0x813f3978, f8940984), 30, 28},\n-  {UINT64_2PART_C(0xc097ce7b, c90715b3), 56, 36},\n-  {UINT64_2PART_C(0x8f7e32ce, 7bea5c70), 83, 44},\n-  {UINT64_2PART_C(0xd5d238a4, abe98068), 109, 52},\n-  {UINT64_2PART_C(0x9f4f2726, 179a2245), 136, 60},\n-  {UINT64_2PART_C(0xed63a231, d4c4fb27), 162, 68},\n-  {UINT64_2PART_C(0xb0de6538, 8cc8ada8), 189, 76},\n-  {UINT64_2PART_C(0x83c7088e, 1aab65db), 216, 84},\n-  {UINT64_2PART_C(0xc45d1df9, 42711d9a), 242, 92},\n-  {UINT64_2PART_C(0x924d692c, a61be758), 269, 100},\n-  {UINT64_2PART_C(0xda01ee64, 1a708dea), 295, 108},\n-  {UINT64_2PART_C(0xa26da399, 9aef774a), 322, 116},\n-  {UINT64_2PART_C(0xf209787b, b47d6b85), 348, 124},\n-  {UINT64_2PART_C(0xb454e4a1, 79dd1877), 375, 132},\n-  {UINT64_2PART_C(0x865b8692, 5b9bc5c2), 402, 140},\n-  {UINT64_2PART_C(0xc83553c5, c8965d3d), 428, 148},\n-  {UINT64_2PART_C(0x952ab45c, fa97a0b3), 455, 156},\n-  {UINT64_2PART_C(0xde469fbd, 99a05fe3), 481, 164},\n-  {UINT64_2PART_C(0xa59bc234, db398c25), 508, 172},\n-  {UINT64_2PART_C(0xf6c69a72, a3989f5c), 534, 180},\n-  {UINT64_2PART_C(0xb7dcbf53, 54e9bece), 561, 188},\n-  {UINT64_2PART_C(0x88fcf317, f22241e2), 588, 196},\n-  {UINT64_2PART_C(0xcc20ce9b, d35c78a5), 614, 204},\n-  {UINT64_2PART_C(0x98165af3, 7b2153df), 641, 212},\n-  {UINT64_2PART_C(0xe2a0b5dc, 971f303a), 667, 220},\n-  {UINT64_2PART_C(0xa8d9d153, 5ce3b396), 694, 228},\n-  {UINT64_2PART_C(0xfb9b7cd9, a4a7443c), 720, 236},\n-  {UINT64_2PART_C(0xbb764c4c, a7a44410), 747, 244},\n-  {UINT64_2PART_C(0x8bab8eef, b6409c1a), 774, 252},\n-  {UINT64_2PART_C(0xd01fef10, a657842c), 800, 260},\n-  {UINT64_2PART_C(0x9b10a4e5, e9913129), 827, 268},\n-  {UINT64_2PART_C(0xe7109bfb, a19c0c9d), 853, 276},\n-  {UINT64_2PART_C(0xac2820d9, 623bf429), 880, 284},\n-  {UINT64_2PART_C(0x80444b5e, 7aa7cf85), 907, 292},\n-  {UINT64_2PART_C(0xbf21e440, 03acdd2d), 933, 300},\n-  {UINT64_2PART_C(0x8e679c2f, 5e44ff8f), 960, 308},\n-  {UINT64_2PART_C(0xd433179d, 9c8cb841), 986, 316},\n-  {UINT64_2PART_C(0x9e19db92, b4e31ba9), 1013, 324},\n-  {UINT64_2PART_C(0xeb96bf6e, badf77d9), 1039, 332},\n-  {UINT64_2PART_C(0xaf87023b, 9bf0ee6b), 1066, 340},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xfa8fd5a0, 081c0288), -1220, -348},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xbaaee17f, a23ebf76), -1193, -340},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8b16fb20, 3055ac76), -1166, -332},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xcf42894a, 5dce35ea), -1140, -324},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9a6bb0aa, 55653b2d), -1113, -316},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xe61acf03, 3d1a45df), -1087, -308},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xab70fe17, c79ac6ca), -1060, -300},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xff77b1fc, bebcdc4f), -1034, -292},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xbe5691ef, 416bd60c), -1007, -284},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8dd01fad, 907ffc3c), -980, -276},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xd3515c28, 31559a83), -954, -268},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9d71ac8f, ada6c9b5), -927, -260},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xea9c2277, 23ee8bcb), -901, -252},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xaecc4991, 4078536d), -874, -244},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x823c1279, 5db6ce57), -847, -236},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xc2109436, 4dfb5637), -821, -228},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9096ea6f, 3848984f), -794, -220},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xd77485cb, 25823ac7), -768, -212},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xa086cfcd, 97bf97f4), -741, -204},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xef340a98, 172aace5), -715, -196},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xb23867fb, 2a35b28e), -688, -188},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x84c8d4df, d2c63f3b), -661, -180},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xc5dd4427, 1ad3cdba), -635, -172},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x936b9fce, bb25c996), -608, -164},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xdbac6c24, 7d62a584), -582, -156},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xa3ab6658, 0d5fdaf6), -555, -148},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xf3e2f893, dec3f126), -529, -140},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xb5b5ada8, aaff80b8), -502, -132},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x87625f05, 6c7c4a8b), -475, -124},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xc9bcff60, 34c13053), -449, -116},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x964e858c, 91ba2655), -422, -108},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xdff97724, 70297ebd), -396, -100},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xa6dfbd9f, b8e5b88f), -369, -92},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xf8a95fcf, 88747d94), -343, -84},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xb9447093, 8fa89bcf), -316, -76},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8a08f0f8, bf0f156b), -289, -68},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xcdb02555, 653131b6), -263, -60},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x993fe2c6, d07b7fac), -236, -52},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xe45c10c4, 2a2b3b06), -210, -44},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xaa242499, 697392d3), -183, -36},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xfd87b5f2, 8300ca0e), -157, -28},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xbce50864, 92111aeb), -130, -20},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8cbccc09, 6f5088cc), -103, -12},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xd1b71758, e219652c), -77, -4},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9c400000, 00000000), -50, 4},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xe8d4a510, 00000000), -24, 12},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xad78ebc5, ac620000), 3, 20},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x813f3978, f8940984), 30, 28},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xc097ce7b, c90715b3), 56, 36},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8f7e32ce, 7bea5c70), 83, 44},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xd5d238a4, abe98068), 109, 52},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9f4f2726, 179a2245), 136, 60},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xed63a231, d4c4fb27), 162, 68},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xb0de6538, 8cc8ada8), 189, 76},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x83c7088e, 1aab65db), 216, 84},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xc45d1df9, 42711d9a), 242, 92},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x924d692c, a61be758), 269, 100},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xda01ee64, 1a708dea), 295, 108},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xa26da399, 9aef774a), 322, 116},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xf209787b, b47d6b85), 348, 124},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xb454e4a1, 79dd1877), 375, 132},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x865b8692, 5b9bc5c2), 402, 140},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xc83553c5, c8965d3d), 428, 148},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x952ab45c, fa97a0b3), 455, 156},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xde469fbd, 99a05fe3), 481, 164},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xa59bc234, db398c25), 508, 172},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xf6c69a72, a3989f5c), 534, 180},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xb7dcbf53, 54e9bece), 561, 188},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x88fcf317, f22241e2), 588, 196},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xcc20ce9b, d35c78a5), 614, 204},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x98165af3, 7b2153df), 641, 212},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xe2a0b5dc, 971f303a), 667, 220},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xa8d9d153, 5ce3b396), 694, 228},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xfb9b7cd9, a4a7443c), 720, 236},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xbb764c4c, a7a44410), 747, 244},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8bab8eef, b6409c1a), 774, 252},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xd01fef10, a657842c), 800, 260},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9b10a4e5, e9913129), 827, 268},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xe7109bfb, a19c0c9d), 853, 276},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xac2820d9, 623bf429), 880, 284},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x80444b5e, 7aa7cf85), 907, 292},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xbf21e440, 03acdd2d), 933, 300},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x8e679c2f, 5e44ff8f), 960, 308},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xd433179d, 9c8cb841), 986, 316},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0x9e19db92, b4e31ba9), 1013, 324},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xeb96bf6e, badf77d9), 1039, 332},\n+  {DOUBLE_CONVERSION_UINT64_2PART_C(0xaf87023b, 9bf0ee6b), 1066, 340},\n@@ -150,4 +152,0 @@\n-\/\/ Difference between the decimal exponents in the table above.\n-const int PowersOfTenCache::kDecimalExponentDistance = 8;\n-const int PowersOfTenCache::kMinDecimalExponent = -348;\n-const int PowersOfTenCache::kMaxDecimalExponent = 340;\n@@ -155,1 +153,1 @@\n-void PowersOfTenCache::GetCachedPowerForBinaryExponentRange(\n+void GetCachedPowerForBinaryExponentRange(\n@@ -165,1 +163,1 @@\n-  ASSERT(0 <= index && index < static_cast<int>(ARRAY_SIZE(kCachedPowers)));\n+  DOUBLE_CONVERSION_ASSERT(0 <= index && index < static_cast<int>(DOUBLE_CONVERSION_ARRAY_SIZE(kCachedPowers)));\n@@ -167,1 +165,1 @@\n-  ASSERT(min_exponent <= cached_power.binary_exponent);\n+  DOUBLE_CONVERSION_ASSERT(min_exponent <= cached_power.binary_exponent);\n@@ -169,1 +167,1 @@\n-  ASSERT(cached_power.binary_exponent <= max_exponent);\n+  DOUBLE_CONVERSION_ASSERT(cached_power.binary_exponent <= max_exponent);\n@@ -175,5 +173,5 @@\n-void PowersOfTenCache::GetCachedPowerForDecimalExponent(int requested_exponent,\n-                                                        DiyFp* power,\n-                                                        int* found_exponent) {\n-  ASSERT(kMinDecimalExponent <= requested_exponent);\n-  ASSERT(requested_exponent < kMaxDecimalExponent + kDecimalExponentDistance);\n+void GetCachedPowerForDecimalExponent(int requested_exponent,\n+                                      DiyFp* power,\n+                                      int* found_exponent) {\n+  DOUBLE_CONVERSION_ASSERT(kMinDecimalExponent <= requested_exponent);\n+  DOUBLE_CONVERSION_ASSERT(requested_exponent < kMaxDecimalExponent + kDecimalExponentDistance);\n@@ -185,2 +183,2 @@\n-  ASSERT(*found_exponent <= requested_exponent);\n-  ASSERT(requested_exponent < *found_exponent + kDecimalExponentDistance);\n+  DOUBLE_CONVERSION_ASSERT(*found_exponent <= requested_exponent);\n+  DOUBLE_CONVERSION_ASSERT(requested_exponent < *found_exponent + kDecimalExponentDistance);\n@@ -189,0 +187,2 @@\n+}  \/\/ namespace PowersOfTenCache\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-cached-powers.cpp","additions":102,"deletions":102,"binary":false,"changes":204,"status":"modified"},{"patch":"@@ -49,2 +49,1 @@\n-class PowersOfTenCache {\n- public:\n+namespace PowersOfTenCache {\n@@ -54,1 +53,1 @@\n-  static const int kDecimalExponentDistance;\n+  static const int kDecimalExponentDistance = 8;\n@@ -56,2 +55,2 @@\n-  static const int kMinDecimalExponent;\n-  static const int kMaxDecimalExponent;\n+  static const int kMinDecimalExponent = -348;\n+  static const int kMaxDecimalExponent = 340;\n@@ -61,4 +60,4 @@\n-  static void GetCachedPowerForBinaryExponentRange(int min_exponent,\n-                                                   int max_exponent,\n-                                                   DiyFp* power,\n-                                                   int* decimal_exponent);\n+  void GetCachedPowerForBinaryExponentRange(int min_exponent,\n+                                            int max_exponent,\n+                                            DiyFp* power,\n+                                            int* decimal_exponent);\n@@ -71,4 +70,5 @@\n-  static void GetCachedPowerForDecimalExponent(int requested_exponent,\n-                                               DiyFp* power,\n-                                               int* found_exponent);\n-};\n+  void GetCachedPowerForDecimalExponent(int requested_exponent,\n+                                        DiyFp* power,\n+                                        int* found_exponent);\n+\n+}  \/\/ namespace PowersOfTenCache\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-cached-powers.h","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1,74 +0,0 @@\n-\/\/ © 2018 and later: Unicode, Inc. and others.\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n-\/\/\n-\/\/ From the double-conversion library. Original license:\n-\/\/\n-\/\/ Copyright 2010 the V8 project authors. All rights reserved.\n-\/\/ Redistribution and use in source and binary forms, with or without\n-\/\/ modification, are permitted provided that the following conditions are\n-\/\/ met:\n-\/\/\n-\/\/     * Redistributions of source code must retain the above copyright\n-\/\/       notice, this list of conditions and the following disclaimer.\n-\/\/     * Redistributions in binary form must reproduce the above\n-\/\/       copyright notice, this list of conditions and the following\n-\/\/       disclaimer in the documentation and\/or other materials provided\n-\/\/       with the distribution.\n-\/\/     * Neither the name of Google Inc. nor the names of its\n-\/\/       contributors may be used to endorse or promote products derived\n-\/\/       from this software without specific prior written permission.\n-\/\/\n-\/\/ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\/\/ \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-\/\/ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-\/\/ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-\/\/ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-\/\/ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-\/\/ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-\/\/ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-\/\/ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-\/\/ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-\/\/ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-\/\/ ICU PATCH: ifdef around UCONFIG_NO_FORMATTING\n-#include \"unicode\/utypes.h\"\n-#if !UCONFIG_NO_FORMATTING\n-\n-\/\/ ICU PATCH: Customize header file paths for ICU.\n-\n-#include \"double-conversion-diy-fp.h\"\n-#include \"double-conversion-utils.h\"\n-\n-\/\/ ICU PATCH: Wrap in ICU namespace\n-U_NAMESPACE_BEGIN\n-\n-namespace double_conversion {\n-\n-void DiyFp::Multiply(const DiyFp& other) {\n-  \/\/ Simply \"emulates\" a 128 bit multiplication.\n-  \/\/ However: the resulting number only contains 64 bits. The least\n-  \/\/ significant 64 bits are only used for rounding the most significant 64\n-  \/\/ bits.\n-  const uint64_t kM32 = 0xFFFFFFFFU;\n-  uint64_t a = f_ >> 32;\n-  uint64_t b = f_ & kM32;\n-  uint64_t c = other.f_ >> 32;\n-  uint64_t d = other.f_ & kM32;\n-  uint64_t ac = a * c;\n-  uint64_t bc = b * c;\n-  uint64_t ad = a * d;\n-  uint64_t bd = b * d;\n-  uint64_t tmp = (bd >> 32) + (ad & kM32) + (bc & kM32);\n-  \/\/ By adding 1U << 31 to tmp we round the final result.\n-  \/\/ Halfway cases will be round up.\n-  tmp += 1U << 31;\n-  uint64_t result_f = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n-  e_ += other.e_ + 64;\n-  f_ = result_f;\n-}\n-\n-}  \/\/ namespace double_conversion\n-\n-\/\/ ICU PATCH: Close ICU namespace\n-U_NAMESPACE_END\n-#endif \/\/ ICU PATCH: close #if !UCONFIG_NO_FORMATTING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-diy-fp.cpp","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -53,1 +53,2 @@\n-\/\/ DiyFp are not designed to contain special doubles (NaN and Infinity).\n+\/\/ DiyFp store only non-negative numbers and are not designed to contain special\n+\/\/ doubles (NaN and Infinity).\n@@ -59,1 +60,1 @@\n-  DiyFp(uint64_t significand, int exponent) : f_(significand), e_(exponent) {}\n+  DiyFp(const uint64_t significand, const int32_t exponent) : f_(significand), e_(exponent) {}\n@@ -61,1 +62,1 @@\n-  \/\/ this = this - other.\n+  \/\/ this -= other.\n@@ -63,1 +64,1 @@\n-  \/\/ must be bigger than the significand of other.\n+  \/\/ must be greater or equal than the significand of other.\n@@ -66,2 +67,2 @@\n-    ASSERT(e_ == other.e_);\n-    ASSERT(f_ >= other.f_);\n+    DOUBLE_CONVERSION_ASSERT(e_ == other.e_);\n+    DOUBLE_CONVERSION_ASSERT(f_ >= other.f_);\n@@ -72,2 +73,2 @@\n-  \/\/ The exponents of both numbers must be the same and this must be bigger\n-  \/\/ than other. The result will not be normalized.\n+  \/\/ The exponents of both numbers must be the same and a must be greater\n+  \/\/ or equal than b. The result will not be normalized.\n@@ -80,3 +81,21 @@\n-\n-  \/\/ this = this * other.\n-  void Multiply(const DiyFp& other);\n+  \/\/ this *= other.\n+  void Multiply(const DiyFp& other) {\n+    \/\/ Simply \"emulates\" a 128 bit multiplication.\n+    \/\/ However: the resulting number only contains 64 bits. The least\n+    \/\/ significant 64 bits are only used for rounding the most significant 64\n+    \/\/ bits.\n+    const uint64_t kM32 = 0xFFFFFFFFU;\n+    const uint64_t a = f_ >> 32;\n+    const uint64_t b = f_ & kM32;\n+    const uint64_t c = other.f_ >> 32;\n+    const uint64_t d = other.f_ & kM32;\n+    const uint64_t ac = a * c;\n+    const uint64_t bc = b * c;\n+    const uint64_t ad = a * d;\n+    const uint64_t bd = b * d;\n+    \/\/ By adding 1U << 31 to tmp we round the final result.\n+    \/\/ Halfway cases will be rounded up.\n+    const uint64_t tmp = (bd >> 32) + (ad & kM32) + (bc & kM32) + (1U << 31);\n+    e_ += other.e_ + 64;\n+    f_ = ac + (ad >> 32) + (bc >> 32) + (tmp >> 32);\n+  }\n@@ -92,1 +111,1 @@\n-    ASSERT(f_ != 0);\n+    DOUBLE_CONVERSION_ASSERT(f_ != 0);\n@@ -94,1 +113,1 @@\n-    int exponent = e_;\n+    int32_t exponent = e_;\n@@ -96,3 +115,3 @@\n-    \/\/ This method is mainly called for normalizing boundaries. In general\n-    \/\/ boundaries need to be shifted by 10 bits. We thus optimize for this case.\n-    const uint64_t k10MSBits = UINT64_2PART_C(0xFFC00000, 00000000);\n+    \/\/ This method is mainly called for normalizing boundaries. In general,\n+    \/\/ boundaries need to be shifted by 10 bits, and we optimize for this case.\n+    const uint64_t k10MSBits = DOUBLE_CONVERSION_UINT64_2PART_C(0xFFC00000, 00000000);\n@@ -118,1 +137,1 @@\n-  int e() const { return e_; }\n+  int32_t e() const { return e_; }\n@@ -121,1 +140,1 @@\n-  void set_e(int new_value) { e_ = new_value; }\n+  void set_e(int32_t new_value) { e_ = new_value; }\n@@ -124,1 +143,1 @@\n-  static const uint64_t kUint64MSB = UINT64_2PART_C(0x80000000, 00000000);\n+  static const uint64_t kUint64MSB = DOUBLE_CONVERSION_UINT64_2PART_C(0x80000000, 00000000);\n@@ -127,1 +146,1 @@\n-  int e_;\n+  int32_t e_;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-diy-fp.h","additions":39,"deletions":20,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -0,0 +1,450 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\/\/\n+\/\/ From the double-conversion library. Original license:\n+\/\/\n+\/\/ Copyright 2010 the V8 project authors. All rights reserved.\n+\/\/ Redistribution and use in source and binary forms, with or without\n+\/\/ modification, are permitted provided that the following conditions are\n+\/\/ met:\n+\/\/\n+\/\/     * Redistributions of source code must retain the above copyright\n+\/\/       notice, this list of conditions and the following disclaimer.\n+\/\/     * Redistributions in binary form must reproduce the above\n+\/\/       copyright notice, this list of conditions and the following\n+\/\/       disclaimer in the documentation and\/or other materials provided\n+\/\/       with the distribution.\n+\/\/     * Neither the name of Google Inc. nor the names of its\n+\/\/       contributors may be used to endorse or promote products derived\n+\/\/       from this software without specific prior written permission.\n+\/\/\n+\/\/ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+\/\/ \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+\/\/ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+\/\/ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+\/\/ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+\/\/ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+\/\/ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+\/\/ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+\/\/ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+\/\/ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+\/\/ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\/\/ ICU PATCH: ifdef around UCONFIG_NO_FORMATTING\n+#include \"unicode\/utypes.h\"\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include <algorithm>\n+#include <climits>\n+#include <cmath>\n+\n+\/\/ ICU PATCH: Customize header file paths for ICU.\n+\/\/ The file fixed-dtoa.h is not needed.\n+\n+#include \"double-conversion-double-to-string.h\"\n+\n+#include \"double-conversion-bignum-dtoa.h\"\n+#include \"double-conversion-fast-dtoa.h\"\n+#include \"double-conversion-ieee.h\"\n+#include \"double-conversion-utils.h\"\n+\n+\/\/ ICU PATCH: Wrap in ICU namespace\n+U_NAMESPACE_BEGIN\n+\n+namespace double_conversion {\n+\n+#if 0  \/\/ not needed for ICU\n+const DoubleToStringConverter& DoubleToStringConverter::EcmaScriptConverter() {\n+  int flags = UNIQUE_ZERO | EMIT_POSITIVE_EXPONENT_SIGN;\n+  static DoubleToStringConverter converter(flags,\n+                                           \"Infinity\",\n+                                           \"NaN\",\n+                                           'e',\n+                                           -6, 21,\n+                                           6, 0);\n+  return converter;\n+}\n+\n+\n+bool DoubleToStringConverter::HandleSpecialValues(\n+    double value,\n+    StringBuilder* result_builder) const {\n+  Double double_inspect(value);\n+  if (double_inspect.IsInfinite()) {\n+    if (infinity_symbol_ == NULL) return false;\n+    if (value < 0) {\n+      result_builder->AddCharacter('-');\n+    }\n+    result_builder->AddString(infinity_symbol_);\n+    return true;\n+  }\n+  if (double_inspect.IsNan()) {\n+    if (nan_symbol_ == NULL) return false;\n+    result_builder->AddString(nan_symbol_);\n+    return true;\n+  }\n+  return false;\n+}\n+\n+\n+void DoubleToStringConverter::CreateExponentialRepresentation(\n+    const char* decimal_digits,\n+    int length,\n+    int exponent,\n+    StringBuilder* result_builder) const {\n+  DOUBLE_CONVERSION_ASSERT(length != 0);\n+  result_builder->AddCharacter(decimal_digits[0]);\n+  if (length != 1) {\n+    result_builder->AddCharacter('.');\n+    result_builder->AddSubstring(&decimal_digits[1], length-1);\n+  }\n+  result_builder->AddCharacter(exponent_character_);\n+  if (exponent < 0) {\n+    result_builder->AddCharacter('-');\n+    exponent = -exponent;\n+  } else {\n+    if ((flags_ & EMIT_POSITIVE_EXPONENT_SIGN) != 0) {\n+      result_builder->AddCharacter('+');\n+    }\n+  }\n+  if (exponent == 0) {\n+    result_builder->AddCharacter('0');\n+    return;\n+  }\n+  DOUBLE_CONVERSION_ASSERT(exponent < 1e4);\n+  \/\/ Changing this constant requires updating the comment of DoubleToStringConverter constructor\n+  const int kMaxExponentLength = 5;\n+  char buffer[kMaxExponentLength + 1];\n+  buffer[kMaxExponentLength] = '\\0';\n+  int first_char_pos = kMaxExponentLength;\n+  while (exponent > 0) {\n+    buffer[--first_char_pos] = '0' + (exponent % 10);\n+    exponent \/= 10;\n+  }\n+  \/\/ Add prefix '0' to make exponent width >= min(min_exponent_with_, kMaxExponentLength)\n+  \/\/ For example: convert 1e+9 -> 1e+09, if min_exponent_with_ is set to 2\n+  while(kMaxExponentLength - first_char_pos < std::min(min_exponent_width_, kMaxExponentLength)) {\n+    buffer[--first_char_pos] = '0';\n+  }\n+  result_builder->AddSubstring(&buffer[first_char_pos],\n+                               kMaxExponentLength - first_char_pos);\n+}\n+\n+\n+void DoubleToStringConverter::CreateDecimalRepresentation(\n+    const char* decimal_digits,\n+    int length,\n+    int decimal_point,\n+    int digits_after_point,\n+    StringBuilder* result_builder) const {\n+  \/\/ Create a representation that is padded with zeros if needed.\n+  if (decimal_point <= 0) {\n+      \/\/ \"0.00000decimal_rep\" or \"0.000decimal_rep00\".\n+    result_builder->AddCharacter('0');\n+    if (digits_after_point > 0) {\n+      result_builder->AddCharacter('.');\n+      result_builder->AddPadding('0', -decimal_point);\n+      DOUBLE_CONVERSION_ASSERT(length <= digits_after_point - (-decimal_point));\n+      result_builder->AddSubstring(decimal_digits, length);\n+      int remaining_digits = digits_after_point - (-decimal_point) - length;\n+      result_builder->AddPadding('0', remaining_digits);\n+    }\n+  } else if (decimal_point >= length) {\n+    \/\/ \"decimal_rep0000.00000\" or \"decimal_rep.0000\".\n+    result_builder->AddSubstring(decimal_digits, length);\n+    result_builder->AddPadding('0', decimal_point - length);\n+    if (digits_after_point > 0) {\n+      result_builder->AddCharacter('.');\n+      result_builder->AddPadding('0', digits_after_point);\n+    }\n+  } else {\n+    \/\/ \"decima.l_rep000\".\n+    DOUBLE_CONVERSION_ASSERT(digits_after_point > 0);\n+    result_builder->AddSubstring(decimal_digits, decimal_point);\n+    result_builder->AddCharacter('.');\n+    DOUBLE_CONVERSION_ASSERT(length - decimal_point <= digits_after_point);\n+    result_builder->AddSubstring(&decimal_digits[decimal_point],\n+                                 length - decimal_point);\n+    int remaining_digits = digits_after_point - (length - decimal_point);\n+    result_builder->AddPadding('0', remaining_digits);\n+  }\n+  if (digits_after_point == 0) {\n+    if ((flags_ & EMIT_TRAILING_DECIMAL_POINT) != 0) {\n+      result_builder->AddCharacter('.');\n+    }\n+    if ((flags_ & EMIT_TRAILING_ZERO_AFTER_POINT) != 0) {\n+      result_builder->AddCharacter('0');\n+    }\n+  }\n+}\n+\n+\n+bool DoubleToStringConverter::ToShortestIeeeNumber(\n+    double value,\n+    StringBuilder* result_builder,\n+    DoubleToStringConverter::DtoaMode mode) const {\n+  DOUBLE_CONVERSION_ASSERT(mode == SHORTEST || mode == SHORTEST_SINGLE);\n+  if (Double(value).IsSpecial()) {\n+    return HandleSpecialValues(value, result_builder);\n+  }\n+\n+  int decimal_point;\n+  bool sign;\n+  const int kDecimalRepCapacity = kBase10MaximalLength + 1;\n+  char decimal_rep[kDecimalRepCapacity];\n+  int decimal_rep_length;\n+\n+  DoubleToAscii(value, mode, 0, decimal_rep, kDecimalRepCapacity,\n+                &sign, &decimal_rep_length, &decimal_point);\n+\n+  bool unique_zero = (flags_ & UNIQUE_ZERO) != 0;\n+  if (sign && (value != 0.0 || !unique_zero)) {\n+    result_builder->AddCharacter('-');\n+  }\n+\n+  int exponent = decimal_point - 1;\n+  if ((decimal_in_shortest_low_ <= exponent) &&\n+      (exponent < decimal_in_shortest_high_)) {\n+    CreateDecimalRepresentation(decimal_rep, decimal_rep_length,\n+                                decimal_point,\n+                                (std::max)(0, decimal_rep_length - decimal_point),\n+                                result_builder);\n+  } else {\n+    CreateExponentialRepresentation(decimal_rep, decimal_rep_length, exponent,\n+                                    result_builder);\n+  }\n+  return true;\n+}\n+\n+\n+bool DoubleToStringConverter::ToFixed(double value,\n+                                      int requested_digits,\n+                                      StringBuilder* result_builder) const {\n+  DOUBLE_CONVERSION_ASSERT(kMaxFixedDigitsBeforePoint == 60);\n+  const double kFirstNonFixed = 1e60;\n+\n+  if (Double(value).IsSpecial()) {\n+    return HandleSpecialValues(value, result_builder);\n+  }\n+\n+  if (requested_digits > kMaxFixedDigitsAfterPoint) return false;\n+  if (value >= kFirstNonFixed || value <= -kFirstNonFixed) return false;\n+\n+  \/\/ Find a sufficiently precise decimal representation of n.\n+  int decimal_point;\n+  bool sign;\n+  \/\/ Add space for the '\\0' byte.\n+  const int kDecimalRepCapacity =\n+      kMaxFixedDigitsBeforePoint + kMaxFixedDigitsAfterPoint + 1;\n+  char decimal_rep[kDecimalRepCapacity];\n+  int decimal_rep_length;\n+  DoubleToAscii(value, FIXED, requested_digits,\n+                decimal_rep, kDecimalRepCapacity,\n+                &sign, &decimal_rep_length, &decimal_point);\n+\n+  bool unique_zero = ((flags_ & UNIQUE_ZERO) != 0);\n+  if (sign && (value != 0.0 || !unique_zero)) {\n+    result_builder->AddCharacter('-');\n+  }\n+\n+  CreateDecimalRepresentation(decimal_rep, decimal_rep_length, decimal_point,\n+                              requested_digits, result_builder);\n+  return true;\n+}\n+\n+\n+bool DoubleToStringConverter::ToExponential(\n+    double value,\n+    int requested_digits,\n+    StringBuilder* result_builder) const {\n+  if (Double(value).IsSpecial()) {\n+    return HandleSpecialValues(value, result_builder);\n+  }\n+\n+  if (requested_digits < -1) return false;\n+  if (requested_digits > kMaxExponentialDigits) return false;\n+\n+  int decimal_point;\n+  bool sign;\n+  \/\/ Add space for digit before the decimal point and the '\\0' character.\n+  const int kDecimalRepCapacity = kMaxExponentialDigits + 2;\n+  DOUBLE_CONVERSION_ASSERT(kDecimalRepCapacity > kBase10MaximalLength);\n+  char decimal_rep[kDecimalRepCapacity];\n+#ifndef NDEBUG\n+  \/\/ Problem: there is an assert in StringBuilder::AddSubstring() that\n+  \/\/ will pass this buffer to strlen(), and this buffer is not generally\n+  \/\/ null-terminated.\n+  memset(decimal_rep, 0, sizeof(decimal_rep));\n+#endif\n+  int decimal_rep_length;\n+\n+  if (requested_digits == -1) {\n+    DoubleToAscii(value, SHORTEST, 0,\n+                  decimal_rep, kDecimalRepCapacity,\n+                  &sign, &decimal_rep_length, &decimal_point);\n+  } else {\n+    DoubleToAscii(value, PRECISION, requested_digits + 1,\n+                  decimal_rep, kDecimalRepCapacity,\n+                  &sign, &decimal_rep_length, &decimal_point);\n+    DOUBLE_CONVERSION_ASSERT(decimal_rep_length <= requested_digits + 1);\n+\n+    for (int i = decimal_rep_length; i < requested_digits + 1; ++i) {\n+      decimal_rep[i] = '0';\n+    }\n+    decimal_rep_length = requested_digits + 1;\n+  }\n+\n+  bool unique_zero = ((flags_ & UNIQUE_ZERO) != 0);\n+  if (sign && (value != 0.0 || !unique_zero)) {\n+    result_builder->AddCharacter('-');\n+  }\n+\n+  int exponent = decimal_point - 1;\n+  CreateExponentialRepresentation(decimal_rep,\n+                                  decimal_rep_length,\n+                                  exponent,\n+                                  result_builder);\n+  return true;\n+}\n+\n+\n+bool DoubleToStringConverter::ToPrecision(double value,\n+                                          int precision,\n+                                          StringBuilder* result_builder) const {\n+  if (Double(value).IsSpecial()) {\n+    return HandleSpecialValues(value, result_builder);\n+  }\n+\n+  if (precision < kMinPrecisionDigits || precision > kMaxPrecisionDigits) {\n+    return false;\n+  }\n+\n+  \/\/ Find a sufficiently precise decimal representation of n.\n+  int decimal_point;\n+  bool sign;\n+  \/\/ Add one for the terminating null character.\n+  const int kDecimalRepCapacity = kMaxPrecisionDigits + 1;\n+  char decimal_rep[kDecimalRepCapacity];\n+  int decimal_rep_length;\n+\n+  DoubleToAscii(value, PRECISION, precision,\n+                decimal_rep, kDecimalRepCapacity,\n+                &sign, &decimal_rep_length, &decimal_point);\n+  DOUBLE_CONVERSION_ASSERT(decimal_rep_length <= precision);\n+\n+  bool unique_zero = ((flags_ & UNIQUE_ZERO) != 0);\n+  if (sign && (value != 0.0 || !unique_zero)) {\n+    result_builder->AddCharacter('-');\n+  }\n+\n+  \/\/ The exponent if we print the number as x.xxeyyy. That is with the\n+  \/\/ decimal point after the first digit.\n+  int exponent = decimal_point - 1;\n+\n+  int extra_zero = ((flags_ & EMIT_TRAILING_ZERO_AFTER_POINT) != 0) ? 1 : 0;\n+  if ((-decimal_point + 1 > max_leading_padding_zeroes_in_precision_mode_) ||\n+      (decimal_point - precision + extra_zero >\n+       max_trailing_padding_zeroes_in_precision_mode_)) {\n+    \/\/ Fill buffer to contain 'precision' digits.\n+    \/\/ Usually the buffer is already at the correct length, but 'DoubleToAscii'\n+    \/\/ is allowed to return less characters.\n+    for (int i = decimal_rep_length; i < precision; ++i) {\n+      decimal_rep[i] = '0';\n+    }\n+\n+    CreateExponentialRepresentation(decimal_rep,\n+                                    precision,\n+                                    exponent,\n+                                    result_builder);\n+  } else {\n+    CreateDecimalRepresentation(decimal_rep, decimal_rep_length, decimal_point,\n+                                (std::max)(0, precision - decimal_point),\n+                                result_builder);\n+  }\n+  return true;\n+}\n+#endif \/\/ not needed for ICU\n+\n+\n+static BignumDtoaMode DtoaToBignumDtoaMode(\n+    DoubleToStringConverter::DtoaMode dtoa_mode) {\n+  switch (dtoa_mode) {\n+    case DoubleToStringConverter::SHORTEST:  return BIGNUM_DTOA_SHORTEST;\n+    case DoubleToStringConverter::SHORTEST_SINGLE:\n+        return BIGNUM_DTOA_SHORTEST_SINGLE;\n+    case DoubleToStringConverter::FIXED:     return BIGNUM_DTOA_FIXED;\n+    case DoubleToStringConverter::PRECISION: return BIGNUM_DTOA_PRECISION;\n+    default:\n+      DOUBLE_CONVERSION_UNREACHABLE();\n+  }\n+}\n+\n+\n+void DoubleToStringConverter::DoubleToAscii(double v,\n+                                            DtoaMode mode,\n+                                            int requested_digits,\n+                                            char* buffer,\n+                                            int buffer_length,\n+                                            bool* sign,\n+                                            int* length,\n+                                            int* point) {\n+  Vector<char> vector(buffer, buffer_length);\n+  DOUBLE_CONVERSION_ASSERT(!Double(v).IsSpecial());\n+  DOUBLE_CONVERSION_ASSERT(mode == SHORTEST || mode == SHORTEST_SINGLE || requested_digits >= 0);\n+\n+  if (Double(v).Sign() < 0) {\n+    *sign = true;\n+    v = -v;\n+  } else {\n+    *sign = false;\n+  }\n+\n+  if (mode == PRECISION && requested_digits == 0) {\n+    vector[0] = '\\0';\n+    *length = 0;\n+    return;\n+  }\n+\n+  if (v == 0) {\n+    vector[0] = '0';\n+    vector[1] = '\\0';\n+    *length = 1;\n+    *point = 1;\n+    return;\n+  }\n+\n+  bool fast_worked;\n+  switch (mode) {\n+    case SHORTEST:\n+      fast_worked = FastDtoa(v, FAST_DTOA_SHORTEST, 0, vector, length, point);\n+      break;\n+#if 0 \/\/ not needed for ICU\n+    case SHORTEST_SINGLE:\n+      fast_worked = FastDtoa(v, FAST_DTOA_SHORTEST_SINGLE, 0,\n+                             vector, length, point);\n+      break;\n+    case FIXED:\n+      fast_worked = FastFixedDtoa(v, requested_digits, vector, length, point);\n+      break;\n+    case PRECISION:\n+      fast_worked = FastDtoa(v, FAST_DTOA_PRECISION, requested_digits,\n+                             vector, length, point);\n+      break;\n+#endif \/\/ not needed for ICU\n+    default:\n+      fast_worked = false;\n+      DOUBLE_CONVERSION_UNREACHABLE();\n+  }\n+  if (fast_worked) return;\n+\n+  \/\/ If the fast dtoa didn't succeed use the slower bignum version.\n+  BignumDtoaMode bignum_mode = DtoaToBignumDtoaMode(mode);\n+  BignumDtoa(v, bignum_mode, requested_digits, vector, length, point);\n+  vector[*length] = '\\0';\n+}\n+\n+}  \/\/ namespace double_conversion\n+\n+\/\/ ICU PATCH: Close ICU namespace\n+U_NAMESPACE_END\n+#endif \/\/ ICU PATCH: close #if !UCONFIG_NO_FORMATTING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-double-to-string.cpp","additions":450,"deletions":0,"binary":false,"changes":450,"status":"added"},{"patch":"@@ -0,0 +1,419 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\/\/\n+\/\/ From the double-conversion library. Original license:\n+\/\/\n+\/\/ Copyright 2012 the V8 project authors. All rights reserved.\n+\/\/ Redistribution and use in source and binary forms, with or without\n+\/\/ modification, are permitted provided that the following conditions are\n+\/\/ met:\n+\/\/\n+\/\/     * Redistributions of source code must retain the above copyright\n+\/\/       notice, this list of conditions and the following disclaimer.\n+\/\/     * Redistributions in binary form must reproduce the above\n+\/\/       copyright notice, this list of conditions and the following\n+\/\/       disclaimer in the documentation and\/or other materials provided\n+\/\/       with the distribution.\n+\/\/     * Neither the name of Google Inc. nor the names of its\n+\/\/       contributors may be used to endorse or promote products derived\n+\/\/       from this software without specific prior written permission.\n+\/\/\n+\/\/ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+\/\/ \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+\/\/ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+\/\/ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+\/\/ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+\/\/ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+\/\/ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+\/\/ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+\/\/ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+\/\/ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+\/\/ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\/\/ ICU PATCH: ifdef around UCONFIG_NO_FORMATTING\n+#include \"unicode\/utypes.h\"\n+#if !UCONFIG_NO_FORMATTING\n+\n+#ifndef DOUBLE_CONVERSION_DOUBLE_TO_STRING_H_\n+#define DOUBLE_CONVERSION_DOUBLE_TO_STRING_H_\n+\n+\/\/ ICU PATCH: Customize header file paths for ICU.\n+\n+#include \"double-conversion-utils.h\"\n+\n+\/\/ ICU PATCH: Wrap in ICU namespace\n+U_NAMESPACE_BEGIN\n+\n+namespace double_conversion {\n+\n+class DoubleToStringConverter {\n+ public:\n+#if 0 \/\/ not needed for ICU\n+  \/\/ When calling ToFixed with a double > 10^kMaxFixedDigitsBeforePoint\n+  \/\/ or a requested_digits parameter > kMaxFixedDigitsAfterPoint then the\n+  \/\/ function returns false.\n+  static const int kMaxFixedDigitsBeforePoint = 60;\n+  static const int kMaxFixedDigitsAfterPoint = 60;\n+\n+  \/\/ When calling ToExponential with a requested_digits\n+  \/\/ parameter > kMaxExponentialDigits then the function returns false.\n+  static const int kMaxExponentialDigits = 120;\n+\n+  \/\/ When calling ToPrecision with a requested_digits\n+  \/\/ parameter < kMinPrecisionDigits or requested_digits > kMaxPrecisionDigits\n+  \/\/ then the function returns false.\n+  static const int kMinPrecisionDigits = 1;\n+  static const int kMaxPrecisionDigits = 120;\n+\n+  enum Flags {\n+    NO_FLAGS = 0,\n+    EMIT_POSITIVE_EXPONENT_SIGN = 1,\n+    EMIT_TRAILING_DECIMAL_POINT = 2,\n+    EMIT_TRAILING_ZERO_AFTER_POINT = 4,\n+    UNIQUE_ZERO = 8\n+  };\n+\n+  \/\/ Flags should be a bit-or combination of the possible Flags-enum.\n+  \/\/  - NO_FLAGS: no special flags.\n+  \/\/  - EMIT_POSITIVE_EXPONENT_SIGN: when the number is converted into exponent\n+  \/\/    form, emits a '+' for positive exponents. Example: 1.2e+2.\n+  \/\/  - EMIT_TRAILING_DECIMAL_POINT: when the input number is an integer and is\n+  \/\/    converted into decimal format then a trailing decimal point is appended.\n+  \/\/    Example: 2345.0 is converted to \"2345.\".\n+  \/\/  - EMIT_TRAILING_ZERO_AFTER_POINT: in addition to a trailing decimal point\n+  \/\/    emits a trailing '0'-character. This flag requires the\n+  \/\/    EXMIT_TRAILING_DECIMAL_POINT flag.\n+  \/\/    Example: 2345.0 is converted to \"2345.0\".\n+  \/\/  - UNIQUE_ZERO: \"-0.0\" is converted to \"0.0\".\n+  \/\/\n+  \/\/ Infinity symbol and nan_symbol provide the string representation for these\n+  \/\/ special values. If the string is NULL and the special value is encountered\n+  \/\/ then the conversion functions return false.\n+  \/\/\n+  \/\/ The exponent_character is used in exponential representations. It is\n+  \/\/ usually 'e' or 'E'.\n+  \/\/\n+  \/\/ When converting to the shortest representation the converter will\n+  \/\/ represent input numbers in decimal format if they are in the interval\n+  \/\/ [10^decimal_in_shortest_low; 10^decimal_in_shortest_high[\n+  \/\/    (lower boundary included, greater boundary excluded).\n+  \/\/ Example: with decimal_in_shortest_low = -6 and\n+  \/\/               decimal_in_shortest_high = 21:\n+  \/\/   ToShortest(0.000001)  -> \"0.000001\"\n+  \/\/   ToShortest(0.0000001) -> \"1e-7\"\n+  \/\/   ToShortest(111111111111111111111.0)  -> \"111111111111111110000\"\n+  \/\/   ToShortest(100000000000000000000.0)  -> \"100000000000000000000\"\n+  \/\/   ToShortest(1111111111111111111111.0) -> \"1.1111111111111111e+21\"\n+  \/\/\n+  \/\/ When converting to precision mode the converter may add\n+  \/\/ max_leading_padding_zeroes before returning the number in exponential\n+  \/\/ format.\n+  \/\/ Example with max_leading_padding_zeroes_in_precision_mode = 6.\n+  \/\/   ToPrecision(0.0000012345, 2) -> \"0.0000012\"\n+  \/\/   ToPrecision(0.00000012345, 2) -> \"1.2e-7\"\n+  \/\/ Similarily the converter may add up to\n+  \/\/ max_trailing_padding_zeroes_in_precision_mode in precision mode to avoid\n+  \/\/ returning an exponential representation. A zero added by the\n+  \/\/ EMIT_TRAILING_ZERO_AFTER_POINT flag is counted for this limit.\n+  \/\/ Examples for max_trailing_padding_zeroes_in_precision_mode = 1:\n+  \/\/   ToPrecision(230.0, 2) -> \"230\"\n+  \/\/   ToPrecision(230.0, 2) -> \"230.\"  with EMIT_TRAILING_DECIMAL_POINT.\n+  \/\/   ToPrecision(230.0, 2) -> \"2.3e2\" with EMIT_TRAILING_ZERO_AFTER_POINT.\n+  \/\/\n+  \/\/ The min_exponent_width is used for exponential representations.\n+  \/\/ The converter adds leading '0's to the exponent until the exponent\n+  \/\/ is at least min_exponent_width digits long.\n+  \/\/ The min_exponent_width is clamped to 5.\n+  \/\/ As such, the exponent may never have more than 5 digits in total.\n+  DoubleToStringConverter(int flags,\n+                          const char* infinity_symbol,\n+                          const char* nan_symbol,\n+                          char exponent_character,\n+                          int decimal_in_shortest_low,\n+                          int decimal_in_shortest_high,\n+                          int max_leading_padding_zeroes_in_precision_mode,\n+                          int max_trailing_padding_zeroes_in_precision_mode,\n+                          int min_exponent_width = 0)\n+      : flags_(flags),\n+        infinity_symbol_(infinity_symbol),\n+        nan_symbol_(nan_symbol),\n+        exponent_character_(exponent_character),\n+        decimal_in_shortest_low_(decimal_in_shortest_low),\n+        decimal_in_shortest_high_(decimal_in_shortest_high),\n+        max_leading_padding_zeroes_in_precision_mode_(\n+            max_leading_padding_zeroes_in_precision_mode),\n+        max_trailing_padding_zeroes_in_precision_mode_(\n+            max_trailing_padding_zeroes_in_precision_mode),\n+        min_exponent_width_(min_exponent_width) {\n+    \/\/ When 'trailing zero after the point' is set, then 'trailing point'\n+    \/\/ must be set too.\n+    DOUBLE_CONVERSION_ASSERT(((flags & EMIT_TRAILING_DECIMAL_POINT) != 0) ||\n+        !((flags & EMIT_TRAILING_ZERO_AFTER_POINT) != 0));\n+  }\n+\n+  \/\/ Returns a converter following the EcmaScript specification.\n+  static const DoubleToStringConverter& EcmaScriptConverter();\n+\n+  \/\/ Computes the shortest string of digits that correctly represent the input\n+  \/\/ number. Depending on decimal_in_shortest_low and decimal_in_shortest_high\n+  \/\/ (see constructor) it then either returns a decimal representation, or an\n+  \/\/ exponential representation.\n+  \/\/ Example with decimal_in_shortest_low = -6,\n+  \/\/              decimal_in_shortest_high = 21,\n+  \/\/              EMIT_POSITIVE_EXPONENT_SIGN activated, and\n+  \/\/              EMIT_TRAILING_DECIMAL_POINT deactived:\n+  \/\/   ToShortest(0.000001)  -> \"0.000001\"\n+  \/\/   ToShortest(0.0000001) -> \"1e-7\"\n+  \/\/   ToShortest(111111111111111111111.0)  -> \"111111111111111110000\"\n+  \/\/   ToShortest(100000000000000000000.0)  -> \"100000000000000000000\"\n+  \/\/   ToShortest(1111111111111111111111.0) -> \"1.1111111111111111e+21\"\n+  \/\/\n+  \/\/ Note: the conversion may round the output if the returned string\n+  \/\/ is accurate enough to uniquely identify the input-number.\n+  \/\/ For example the most precise representation of the double 9e59 equals\n+  \/\/ \"899999999999999918767229449717619953810131273674690656206848\", but\n+  \/\/ the converter will return the shorter (but still correct) \"9e59\".\n+  \/\/\n+  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n+  \/\/ except when the input value is special and no infinity_symbol or\n+  \/\/ nan_symbol has been given to the constructor.\n+  bool ToShortest(double value, StringBuilder* result_builder) const {\n+    return ToShortestIeeeNumber(value, result_builder, SHORTEST);\n+  }\n+\n+  \/\/ Same as ToShortest, but for single-precision floats.\n+  bool ToShortestSingle(float value, StringBuilder* result_builder) const {\n+    return ToShortestIeeeNumber(value, result_builder, SHORTEST_SINGLE);\n+  }\n+\n+\n+  \/\/ Computes a decimal representation with a fixed number of digits after the\n+  \/\/ decimal point. The last emitted digit is rounded.\n+  \/\/\n+  \/\/ Examples:\n+  \/\/   ToFixed(3.12, 1) -> \"3.1\"\n+  \/\/   ToFixed(3.1415, 3) -> \"3.142\"\n+  \/\/   ToFixed(1234.56789, 4) -> \"1234.5679\"\n+  \/\/   ToFixed(1.23, 5) -> \"1.23000\"\n+  \/\/   ToFixed(0.1, 4) -> \"0.1000\"\n+  \/\/   ToFixed(1e30, 2) -> \"1000000000000000019884624838656.00\"\n+  \/\/   ToFixed(0.1, 30) -> \"0.100000000000000005551115123126\"\n+  \/\/   ToFixed(0.1, 17) -> \"0.10000000000000001\"\n+  \/\/\n+  \/\/ If requested_digits equals 0, then the tail of the result depends on\n+  \/\/ the EMIT_TRAILING_DECIMAL_POINT and EMIT_TRAILING_ZERO_AFTER_POINT.\n+  \/\/ Examples, for requested_digits == 0,\n+  \/\/   let EMIT_TRAILING_DECIMAL_POINT and EMIT_TRAILING_ZERO_AFTER_POINT be\n+  \/\/    - false and false: then 123.45 -> 123\n+  \/\/                             0.678 -> 1\n+  \/\/    - true and false: then 123.45 -> 123.\n+  \/\/                            0.678 -> 1.\n+  \/\/    - true and true: then 123.45 -> 123.0\n+  \/\/                           0.678 -> 1.0\n+  \/\/\n+  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n+  \/\/ except for the following cases:\n+  \/\/   - the input value is special and no infinity_symbol or nan_symbol has\n+  \/\/     been provided to the constructor,\n+  \/\/   - 'value' > 10^kMaxFixedDigitsBeforePoint, or\n+  \/\/   - 'requested_digits' > kMaxFixedDigitsAfterPoint.\n+  \/\/ The last two conditions imply that the result will never contain more than\n+  \/\/ 1 + kMaxFixedDigitsBeforePoint + 1 + kMaxFixedDigitsAfterPoint characters\n+  \/\/ (one additional character for the sign, and one for the decimal point).\n+  bool ToFixed(double value,\n+               int requested_digits,\n+               StringBuilder* result_builder) const;\n+\n+  \/\/ Computes a representation in exponential format with requested_digits\n+  \/\/ after the decimal point. The last emitted digit is rounded.\n+  \/\/ If requested_digits equals -1, then the shortest exponential representation\n+  \/\/ is computed.\n+  \/\/\n+  \/\/ Examples with EMIT_POSITIVE_EXPONENT_SIGN deactivated, and\n+  \/\/               exponent_character set to 'e'.\n+  \/\/   ToExponential(3.12, 1) -> \"3.1e0\"\n+  \/\/   ToExponential(5.0, 3) -> \"5.000e0\"\n+  \/\/   ToExponential(0.001, 2) -> \"1.00e-3\"\n+  \/\/   ToExponential(3.1415, -1) -> \"3.1415e0\"\n+  \/\/   ToExponential(3.1415, 4) -> \"3.1415e0\"\n+  \/\/   ToExponential(3.1415, 3) -> \"3.142e0\"\n+  \/\/   ToExponential(123456789000000, 3) -> \"1.235e14\"\n+  \/\/   ToExponential(1000000000000000019884624838656.0, -1) -> \"1e30\"\n+  \/\/   ToExponential(1000000000000000019884624838656.0, 32) ->\n+  \/\/                     \"1.00000000000000001988462483865600e30\"\n+  \/\/   ToExponential(1234, 0) -> \"1e3\"\n+  \/\/\n+  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n+  \/\/ except for the following cases:\n+  \/\/   - the input value is special and no infinity_symbol or nan_symbol has\n+  \/\/     been provided to the constructor,\n+  \/\/   - 'requested_digits' > kMaxExponentialDigits.\n+  \/\/ The last condition implies that the result will never contain more than\n+  \/\/ kMaxExponentialDigits + 8 characters (the sign, the digit before the\n+  \/\/ decimal point, the decimal point, the exponent character, the\n+  \/\/ exponent's sign, and at most 3 exponent digits).\n+  bool ToExponential(double value,\n+                     int requested_digits,\n+                     StringBuilder* result_builder) const;\n+\n+  \/\/ Computes 'precision' leading digits of the given 'value' and returns them\n+  \/\/ either in exponential or decimal format, depending on\n+  \/\/ max_{leading|trailing}_padding_zeroes_in_precision_mode (given to the\n+  \/\/ constructor).\n+  \/\/ The last computed digit is rounded.\n+  \/\/\n+  \/\/ Example with max_leading_padding_zeroes_in_precision_mode = 6.\n+  \/\/   ToPrecision(0.0000012345, 2) -> \"0.0000012\"\n+  \/\/   ToPrecision(0.00000012345, 2) -> \"1.2e-7\"\n+  \/\/ Similarily the converter may add up to\n+  \/\/ max_trailing_padding_zeroes_in_precision_mode in precision mode to avoid\n+  \/\/ returning an exponential representation. A zero added by the\n+  \/\/ EMIT_TRAILING_ZERO_AFTER_POINT flag is counted for this limit.\n+  \/\/ Examples for max_trailing_padding_zeroes_in_precision_mode = 1:\n+  \/\/   ToPrecision(230.0, 2) -> \"230\"\n+  \/\/   ToPrecision(230.0, 2) -> \"230.\"  with EMIT_TRAILING_DECIMAL_POINT.\n+  \/\/   ToPrecision(230.0, 2) -> \"2.3e2\" with EMIT_TRAILING_ZERO_AFTER_POINT.\n+  \/\/ Examples for max_trailing_padding_zeroes_in_precision_mode = 3, and no\n+  \/\/    EMIT_TRAILING_ZERO_AFTER_POINT:\n+  \/\/   ToPrecision(123450.0, 6) -> \"123450\"\n+  \/\/   ToPrecision(123450.0, 5) -> \"123450\"\n+  \/\/   ToPrecision(123450.0, 4) -> \"123500\"\n+  \/\/   ToPrecision(123450.0, 3) -> \"123000\"\n+  \/\/   ToPrecision(123450.0, 2) -> \"1.2e5\"\n+  \/\/\n+  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n+  \/\/ except for the following cases:\n+  \/\/   - the input value is special and no infinity_symbol or nan_symbol has\n+  \/\/     been provided to the constructor,\n+  \/\/   - precision < kMinPericisionDigits\n+  \/\/   - precision > kMaxPrecisionDigits\n+  \/\/ The last condition implies that the result will never contain more than\n+  \/\/ kMaxPrecisionDigits + 7 characters (the sign, the decimal point, the\n+  \/\/ exponent character, the exponent's sign, and at most 3 exponent digits).\n+  bool ToPrecision(double value,\n+                   int precision,\n+                   StringBuilder* result_builder) const;\n+#endif \/\/ not needed for ICU\n+\n+  enum DtoaMode {\n+    \/\/ Produce the shortest correct representation.\n+    \/\/ For example the output of 0.299999999999999988897 is (the less accurate\n+    \/\/ but correct) 0.3.\n+    SHORTEST,\n+    \/\/ Same as SHORTEST, but for single-precision floats.\n+    SHORTEST_SINGLE,\n+    \/\/ Produce a fixed number of digits after the decimal point.\n+    \/\/ For instance fixed(0.1, 4) becomes 0.1000\n+    \/\/ If the input number is big, the output will be big.\n+    FIXED,\n+    \/\/ Fixed number of digits (independent of the decimal point).\n+    PRECISION\n+  };\n+\n+  \/\/ The maximal number of digits that are needed to emit a double in base 10.\n+  \/\/ A higher precision can be achieved by using more digits, but the shortest\n+  \/\/ accurate representation of any double will never use more digits than\n+  \/\/ kBase10MaximalLength.\n+  \/\/ Note that DoubleToAscii null-terminates its input. So the given buffer\n+  \/\/ should be at least kBase10MaximalLength + 1 characters long.\n+  static const int kBase10MaximalLength = 17;\n+\n+  \/\/ Converts the given double 'v' to digit characters. 'v' must not be NaN,\n+  \/\/ +Infinity, or -Infinity. In SHORTEST_SINGLE-mode this restriction also\n+  \/\/ applies to 'v' after it has been casted to a single-precision float. That\n+  \/\/ is, in this mode static_cast<float>(v) must not be NaN, +Infinity or\n+  \/\/ -Infinity.\n+  \/\/\n+  \/\/ The result should be interpreted as buffer * 10^(point-length).\n+  \/\/\n+  \/\/ The digits are written to the buffer in the platform's charset, which is\n+  \/\/ often UTF-8 (with ASCII-range digits) but may be another charset, such\n+  \/\/ as EBCDIC.\n+  \/\/\n+  \/\/ The output depends on the given mode:\n+  \/\/  - SHORTEST: produce the least amount of digits for which the internal\n+  \/\/   identity requirement is still satisfied. If the digits are printed\n+  \/\/   (together with the correct exponent) then reading this number will give\n+  \/\/   'v' again. The buffer will choose the representation that is closest to\n+  \/\/   'v'. If there are two at the same distance, than the one farther away\n+  \/\/   from 0 is chosen (halfway cases - ending with 5 - are rounded up).\n+  \/\/   In this mode the 'requested_digits' parameter is ignored.\n+  \/\/  - SHORTEST_SINGLE: same as SHORTEST but with single-precision.\n+  \/\/  - FIXED: produces digits necessary to print a given number with\n+  \/\/   'requested_digits' digits after the decimal point. The produced digits\n+  \/\/   might be too short in which case the caller has to fill the remainder\n+  \/\/   with '0's.\n+  \/\/   Example: toFixed(0.001, 5) is allowed to return buffer=\"1\", point=-2.\n+  \/\/   Halfway cases are rounded towards +\/-Infinity (away from 0). The call\n+  \/\/   toFixed(0.15, 2) thus returns buffer=\"2\", point=0.\n+  \/\/   The returned buffer may contain digits that would be truncated from the\n+  \/\/   shortest representation of the input.\n+  \/\/  - PRECISION: produces 'requested_digits' where the first digit is not '0'.\n+  \/\/   Even though the length of produced digits usually equals\n+  \/\/   'requested_digits', the function is allowed to return fewer digits, in\n+  \/\/   which case the caller has to fill the missing digits with '0's.\n+  \/\/   Halfway cases are again rounded away from 0.\n+  \/\/ DoubleToAscii expects the given buffer to be big enough to hold all\n+  \/\/ digits and a terminating null-character. In SHORTEST-mode it expects a\n+  \/\/ buffer of at least kBase10MaximalLength + 1. In all other modes the\n+  \/\/ requested_digits parameter and the padding-zeroes limit the size of the\n+  \/\/ output. Don't forget the decimal point, the exponent character and the\n+  \/\/ terminating null-character when computing the maximal output size.\n+  \/\/ The given length is only used in debug mode to ensure the buffer is big\n+  \/\/ enough.\n+  \/\/ ICU PATCH: Export this as U_I18N_API for unit tests.\n+  static void U_I18N_API DoubleToAscii(double v,\n+                            DtoaMode mode,\n+                            int requested_digits,\n+                            char* buffer,\n+                            int buffer_length,\n+                            bool* sign,\n+                            int* length,\n+                            int* point);\n+\n+#if 0 \/\/ not needed for ICU\n+ private:\n+  \/\/ Implementation for ToShortest and ToShortestSingle.\n+  bool ToShortestIeeeNumber(double value,\n+                            StringBuilder* result_builder,\n+                            DtoaMode mode) const;\n+\n+  \/\/ If the value is a special value (NaN or Infinity) constructs the\n+  \/\/ corresponding string using the configured infinity\/nan-symbol.\n+  \/\/ If either of them is NULL or the value is not special then the\n+  \/\/ function returns false.\n+  bool HandleSpecialValues(double value, StringBuilder* result_builder) const;\n+  \/\/ Constructs an exponential representation (i.e. 1.234e56).\n+  \/\/ The given exponent assumes a decimal point after the first decimal digit.\n+  void CreateExponentialRepresentation(const char* decimal_digits,\n+                                       int length,\n+                                       int exponent,\n+                                       StringBuilder* result_builder) const;\n+  \/\/ Creates a decimal representation (i.e 1234.5678).\n+  void CreateDecimalRepresentation(const char* decimal_digits,\n+                                   int length,\n+                                   int decimal_point,\n+                                   int digits_after_point,\n+                                   StringBuilder* result_builder) const;\n+\n+  const int flags_;\n+  const char* const infinity_symbol_;\n+  const char* const nan_symbol_;\n+  const char exponent_character_;\n+  const int decimal_in_shortest_low_;\n+  const int decimal_in_shortest_high_;\n+  const int max_leading_padding_zeroes_in_precision_mode_;\n+  const int max_trailing_padding_zeroes_in_precision_mode_;\n+  const int min_exponent_width_;\n+#endif \/\/ not needed for ICU\n+\n+  DOUBLE_CONVERSION_DISALLOW_IMPLICIT_CONSTRUCTORS(DoubleToStringConverter);\n+};\n+\n+}  \/\/ namespace double_conversion\n+\n+\/\/ ICU PATCH: Close ICU namespace\n+U_NAMESPACE_END\n+\n+#endif  \/\/ DOUBLE_CONVERSION_DOUBLE_TO_STRING_H_\n+#endif \/\/ ICU PATCH: close #if !UCONFIG_NO_FORMATTING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-double-to-string.h","additions":419,"deletions":0,"binary":false,"changes":419,"status":"added"},{"patch":"@@ -155,1 +155,1 @@\n-  ASSERT(rest <= unsafe_interval);\n+  DOUBLE_CONVERSION_ASSERT(rest <= unsafe_interval);\n@@ -201,1 +201,1 @@\n-  ASSERT(rest < ten_kappa);\n+  DOUBLE_CONVERSION_ASSERT(rest < ten_kappa);\n@@ -258,1 +258,1 @@\n-  ASSERT(number < (1u << (number_bits + 1)));\n+  DOUBLE_CONVERSION_ASSERT(number < (1u << (number_bits + 1)));\n@@ -320,3 +320,3 @@\n-  ASSERT(low.e() == w.e() && w.e() == high.e());\n-  ASSERT(low.f() + 1 <= high.f() - 1);\n-  ASSERT(kMinimalTargetExponent <= w.e() && w.e() <= kMaximalTargetExponent);\n+  DOUBLE_CONVERSION_ASSERT(low.e() == w.e() && w.e() == high.e());\n+  DOUBLE_CONVERSION_ASSERT(low.f() + 1 <= high.f() - 1);\n+  DOUBLE_CONVERSION_ASSERT(kMinimalTargetExponent <= w.e() && w.e() <= kMaximalTargetExponent);\n@@ -364,1 +364,1 @@\n-    ASSERT(digit <= 9);\n+    DOUBLE_CONVERSION_ASSERT(digit <= 9);\n@@ -391,3 +391,3 @@\n-  ASSERT(one.e() >= -60);\n-  ASSERT(fractionals < one.f());\n-  ASSERT(UINT64_2PART_C(0xFFFFFFFF, FFFFFFFF) \/ 10 >= one.f());\n+  DOUBLE_CONVERSION_ASSERT(one.e() >= -60);\n+  DOUBLE_CONVERSION_ASSERT(fractionals < one.f());\n+  DOUBLE_CONVERSION_ASSERT(DOUBLE_CONVERSION_UINT64_2PART_C(0xFFFFFFFF, FFFFFFFF) \/ 10 >= one.f());\n@@ -400,1 +400,1 @@\n-    ASSERT(digit <= 9);\n+    DOUBLE_CONVERSION_ASSERT(digit <= 9);\n@@ -447,3 +447,3 @@\n-  ASSERT(kMinimalTargetExponent <= w.e() && w.e() <= kMaximalTargetExponent);\n-  ASSERT(kMinimalTargetExponent >= -60);\n-  ASSERT(kMaximalTargetExponent <= -32);\n+  DOUBLE_CONVERSION_ASSERT(kMinimalTargetExponent <= w.e() && w.e() <= kMaximalTargetExponent);\n+  DOUBLE_CONVERSION_ASSERT(kMinimalTargetExponent >= -60);\n+  DOUBLE_CONVERSION_ASSERT(kMaximalTargetExponent <= -32);\n@@ -475,1 +475,1 @@\n-    ASSERT(digit <= 9);\n+    DOUBLE_CONVERSION_ASSERT(digit <= 9);\n@@ -501,3 +501,3 @@\n-  ASSERT(one.e() >= -60);\n-  ASSERT(fractionals < one.f());\n-  ASSERT(UINT64_2PART_C(0xFFFFFFFF, FFFFFFFF) \/ 10 >= one.f());\n+  DOUBLE_CONVERSION_ASSERT(one.e() >= -60);\n+  DOUBLE_CONVERSION_ASSERT(fractionals < one.f());\n+  DOUBLE_CONVERSION_ASSERT(DOUBLE_CONVERSION_UINT64_2PART_C(0xFFFFFFFF, FFFFFFFF) \/ 10 >= one.f());\n@@ -509,1 +509,1 @@\n-    ASSERT(digit <= 9);\n+    DOUBLE_CONVERSION_ASSERT(digit <= 9);\n@@ -547,1 +547,1 @@\n-    ASSERT(mode == FAST_DTOA_SHORTEST_SINGLE);\n+    DOUBLE_CONVERSION_ASSERT(mode == FAST_DTOA_SHORTEST_SINGLE);\n@@ -551,1 +551,1 @@\n-  ASSERT(boundary_plus.e() == w.e());\n+  DOUBLE_CONVERSION_ASSERT(boundary_plus.e() == w.e());\n@@ -562,1 +562,1 @@\n-  ASSERT((kMinimalTargetExponent <= w.e() + ten_mk.e() +\n+  DOUBLE_CONVERSION_ASSERT((kMinimalTargetExponent <= w.e() + ten_mk.e() +\n@@ -576,1 +576,1 @@\n-  ASSERT(scaled_w.e() ==\n+  DOUBLE_CONVERSION_ASSERT(scaled_w.e() ==\n@@ -621,1 +621,1 @@\n-  ASSERT((kMinimalTargetExponent <= w.e() + ten_mk.e() +\n+  DOUBLE_CONVERSION_ASSERT((kMinimalTargetExponent <= w.e() + ten_mk.e() +\n@@ -655,2 +655,2 @@\n-  ASSERT(v > 0);\n-  ASSERT(!Double(v).IsSpecial());\n+  DOUBLE_CONVERSION_ASSERT(v > 0);\n+  DOUBLE_CONVERSION_ASSERT(!Double(v).IsSpecial());\n@@ -670,1 +670,1 @@\n-      UNREACHABLE();\n+      DOUBLE_CONVERSION_UNREACHABLE();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-fast-dtoa.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -58,4 +58,5 @@\n-  static const uint64_t kSignMask = UINT64_2PART_C(0x80000000, 00000000);\n-  static const uint64_t kExponentMask = UINT64_2PART_C(0x7FF00000, 00000000);\n-  static const uint64_t kSignificandMask = UINT64_2PART_C(0x000FFFFF, FFFFFFFF);\n-  static const uint64_t kHiddenBit = UINT64_2PART_C(0x00100000, 00000000);\n+  static const uint64_t kSignMask = DOUBLE_CONVERSION_UINT64_2PART_C(0x80000000, 00000000);\n+  static const uint64_t kExponentMask = DOUBLE_CONVERSION_UINT64_2PART_C(0x7FF00000, 00000000);\n+  static const uint64_t kSignificandMask = DOUBLE_CONVERSION_UINT64_2PART_C(0x000FFFFF, FFFFFFFF);\n+  static const uint64_t kHiddenBit = DOUBLE_CONVERSION_UINT64_2PART_C(0x00100000, 00000000);\n+  static const uint64_t kQuietNanBit = DOUBLE_CONVERSION_UINT64_2PART_C(0x00080000, 00000000);\n@@ -64,0 +65,2 @@\n+  static const int kExponentBias = 0x3FF + kPhysicalSignificandSize;\n+  static const int kMaxExponent = 0x7FF - kExponentBias;\n@@ -74,2 +77,2 @@\n-    ASSERT(Sign() > 0);\n-    ASSERT(!IsSpecial());\n+    DOUBLE_CONVERSION_ASSERT(Sign() > 0);\n+    DOUBLE_CONVERSION_ASSERT(!IsSpecial());\n@@ -81,1 +84,1 @@\n-    ASSERT(value() > 0.0);\n+    DOUBLE_CONVERSION_ASSERT(value() > 0.0);\n@@ -163,0 +166,9 @@\n+  bool IsQuietNan() const {\n+    return IsNan() && ((AsUint64() & kQuietNanBit) != 0);\n+  }\n+\n+  bool IsSignalingNan() const {\n+    return IsNan() && ((AsUint64() & kQuietNanBit) == 0);\n+  }\n+\n+\n@@ -177,1 +189,1 @@\n-    ASSERT(Sign() > 0);\n+    DOUBLE_CONVERSION_ASSERT(Sign() > 0);\n@@ -186,1 +198,1 @@\n-    ASSERT(value() > 0.0);\n+    DOUBLE_CONVERSION_ASSERT(value() > 0.0);\n@@ -239,1 +251,0 @@\n-  static const int kExponentBias = 0x3FF + kPhysicalSignificandSize;\n@@ -241,3 +252,2 @@\n-  static const int kMaxExponent = 0x7FF - kExponentBias;\n-  static const uint64_t kInfinity = UINT64_2PART_C(0x7FF00000, 00000000);\n-  static const uint64_t kNaN = UINT64_2PART_C(0x7FF80000, 00000000);\n+  static const uint64_t kInfinity = DOUBLE_CONVERSION_UINT64_2PART_C(0x7FF00000, 00000000);\n+  static const uint64_t kNaN = DOUBLE_CONVERSION_UINT64_2PART_C(0x7FF80000, 00000000);\n@@ -274,1 +284,1 @@\n-  DC_DISALLOW_COPY_AND_ASSIGN(Double);\n+  DOUBLE_CONVERSION_DISALLOW_COPY_AND_ASSIGN(Double);\n@@ -283,0 +293,1 @@\n+  static const uint32_t kQuietNanBit = 0x00400000;\n@@ -293,2 +304,2 @@\n-    ASSERT(Sign() > 0);\n-    ASSERT(!IsSpecial());\n+    DOUBLE_CONVERSION_ASSERT(Sign() > 0);\n+    DOUBLE_CONVERSION_ASSERT(!IsSpecial());\n@@ -341,0 +352,9 @@\n+  bool IsQuietNan() const {\n+    return IsNan() && ((AsUint32() & kQuietNanBit) != 0);\n+  }\n+\n+  bool IsSignalingNan() const {\n+    return IsNan() && ((AsUint32() & kQuietNanBit) == 0);\n+  }\n+\n+\n@@ -357,1 +377,1 @@\n-    ASSERT(value() > 0.0);\n+    DOUBLE_CONVERSION_ASSERT(value() > 0.0);\n@@ -375,1 +395,1 @@\n-    ASSERT(Sign() > 0);\n+    DOUBLE_CONVERSION_ASSERT(Sign() > 0);\n@@ -411,1 +431,1 @@\n-  DC_DISALLOW_COPY_AND_ASSIGN(Single);\n+  DOUBLE_CONVERSION_DISALLOW_COPY_AND_ASSIGN(Single);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-ieee.h","additions":39,"deletions":19,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -0,0 +1,789 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\/\/\n+\/\/ From the double-conversion library. Original license:\n+\/\/\n+\/\/ Copyright 2010 the V8 project authors. All rights reserved.\n+\/\/ Redistribution and use in source and binary forms, with or without\n+\/\/ modification, are permitted provided that the following conditions are\n+\/\/ met:\n+\/\/\n+\/\/     * Redistributions of source code must retain the above copyright\n+\/\/       notice, this list of conditions and the following disclaimer.\n+\/\/     * Redistributions in binary form must reproduce the above\n+\/\/       copyright notice, this list of conditions and the following\n+\/\/       disclaimer in the documentation and\/or other materials provided\n+\/\/       with the distribution.\n+\/\/     * Neither the name of Google Inc. nor the names of its\n+\/\/       contributors may be used to endorse or promote products derived\n+\/\/       from this software without specific prior written permission.\n+\/\/\n+\/\/ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+\/\/ \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+\/\/ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+\/\/ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+\/\/ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+\/\/ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+\/\/ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+\/\/ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+\/\/ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+\/\/ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+\/\/ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\/\/ ICU PATCH: ifdef around UCONFIG_NO_FORMATTING\n+#include \"unicode\/utypes.h\"\n+#if !UCONFIG_NO_FORMATTING\n+\n+\/\/ ICU PATCH: Do not include std::locale.\n+\n+#include <climits>\n+\/\/ #include <locale>\n+#include <cmath>\n+\n+\/\/ ICU PATCH: Customize header file paths for ICU.\n+\n+#include \"double-conversion-string-to-double.h\"\n+\n+#include \"double-conversion-ieee.h\"\n+#include \"double-conversion-strtod.h\"\n+#include \"double-conversion-utils.h\"\n+\n+\/\/ ICU PATCH: Wrap in ICU namespace\n+U_NAMESPACE_BEGIN\n+\n+namespace double_conversion {\n+\n+namespace {\n+\n+inline char ToLower(char ch) {\n+#if 0  \/\/ do not include std::locale in ICU\n+  static const std::ctype<char>& cType =\n+      std::use_facet<std::ctype<char> >(std::locale::classic());\n+  return cType.tolower(ch);\n+#else\n+  (void)ch;\n+  DOUBLE_CONVERSION_UNREACHABLE();\n+#endif\n+}\n+\n+inline char Pass(char ch) {\n+  return ch;\n+}\n+\n+template <class Iterator, class Converter>\n+static inline bool ConsumeSubStringImpl(Iterator* current,\n+                                        Iterator end,\n+                                        const char* substring,\n+                                        Converter converter) {\n+  DOUBLE_CONVERSION_ASSERT(converter(**current) == *substring);\n+  for (substring++; *substring != '\\0'; substring++) {\n+    ++*current;\n+    if (*current == end || converter(**current) != *substring) {\n+      return false;\n+    }\n+  }\n+  ++*current;\n+  return true;\n+}\n+\n+\/\/ Consumes the given substring from the iterator.\n+\/\/ Returns false, if the substring does not match.\n+template <class Iterator>\n+static bool ConsumeSubString(Iterator* current,\n+                             Iterator end,\n+                             const char* substring,\n+                             bool allow_case_insensitivity) {\n+  if (allow_case_insensitivity) {\n+    return ConsumeSubStringImpl(current, end, substring, ToLower);\n+  } else {\n+    return ConsumeSubStringImpl(current, end, substring, Pass);\n+  }\n+}\n+\n+\/\/ Consumes first character of the str is equal to ch\n+inline bool ConsumeFirstCharacter(char ch,\n+                                         const char* str,\n+                                         bool case_insensitivity) {\n+  return case_insensitivity ? ToLower(ch) == str[0] : ch == str[0];\n+}\n+}  \/\/ namespace\n+\n+\/\/ Maximum number of significant digits in decimal representation.\n+\/\/ The longest possible double in decimal representation is\n+\/\/ (2^53 - 1) * 2 ^ -1074 that is (2 ^ 53 - 1) * 5 ^ 1074 \/ 10 ^ 1074\n+\/\/ (768 digits). If we parse a number whose first digits are equal to a\n+\/\/ mean of 2 adjacent doubles (that could have up to 769 digits) the result\n+\/\/ must be rounded to the bigger one unless the tail consists of zeros, so\n+\/\/ we don't need to preserve all the digits.\n+const int kMaxSignificantDigits = 772;\n+\n+\n+static const char kWhitespaceTable7[] = { 32, 13, 10, 9, 11, 12 };\n+static const int kWhitespaceTable7Length = DOUBLE_CONVERSION_ARRAY_SIZE(kWhitespaceTable7);\n+\n+\n+static const uc16 kWhitespaceTable16[] = {\n+  160, 8232, 8233, 5760, 6158, 8192, 8193, 8194, 8195,\n+  8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279\n+};\n+static const int kWhitespaceTable16Length = DOUBLE_CONVERSION_ARRAY_SIZE(kWhitespaceTable16);\n+\n+\n+static bool isWhitespace(int x) {\n+  if (x < 128) {\n+    for (int i = 0; i < kWhitespaceTable7Length; i++) {\n+      if (kWhitespaceTable7[i] == x) return true;\n+    }\n+  } else {\n+    for (int i = 0; i < kWhitespaceTable16Length; i++) {\n+      if (kWhitespaceTable16[i] == x) return true;\n+    }\n+  }\n+  return false;\n+}\n+\n+\n+\/\/ Returns true if a nonspace found and false if the end has reached.\n+template <class Iterator>\n+static inline bool AdvanceToNonspace(Iterator* current, Iterator end) {\n+  while (*current != end) {\n+    if (!isWhitespace(**current)) return true;\n+    ++*current;\n+  }\n+  return false;\n+}\n+\n+\n+static bool isDigit(int x, int radix) {\n+  return (x >= '0' && x <= '9' && x < '0' + radix)\n+      || (radix > 10 && x >= 'a' && x < 'a' + radix - 10)\n+      || (radix > 10 && x >= 'A' && x < 'A' + radix - 10);\n+}\n+\n+\n+static double SignedZero(bool sign) {\n+  return sign ? -0.0 : 0.0;\n+}\n+\n+\n+\/\/ Returns true if 'c' is a decimal digit that is valid for the given radix.\n+\/\/\n+\/\/ The function is small and could be inlined, but VS2012 emitted a warning\n+\/\/ because it constant-propagated the radix and concluded that the last\n+\/\/ condition was always true. By moving it into a separate function the\n+\/\/ compiler wouldn't warn anymore.\n+#ifdef _MSC_VER\n+#pragma optimize(\"\",off)\n+static bool IsDecimalDigitForRadix(int c, int radix) {\n+  return '0' <= c && c <= '9' && (c - '0') < radix;\n+}\n+#pragma optimize(\"\",on)\n+#else\n+static bool inline IsDecimalDigitForRadix(int c, int radix) {\n+  return '0' <= c && c <= '9' && (c - '0') < radix;\n+}\n+#endif\n+\/\/ Returns true if 'c' is a character digit that is valid for the given radix.\n+\/\/ The 'a_character' should be 'a' or 'A'.\n+\/\/\n+\/\/ The function is small and could be inlined, but VS2012 emitted a warning\n+\/\/ because it constant-propagated the radix and concluded that the first\n+\/\/ condition was always false. By moving it into a separate function the\n+\/\/ compiler wouldn't warn anymore.\n+static bool IsCharacterDigitForRadix(int c, int radix, char a_character) {\n+  return radix > 10 && c >= a_character && c < a_character + radix - 10;\n+}\n+\n+\/\/ Returns true, when the iterator is equal to end.\n+template<class Iterator>\n+static bool Advance (Iterator* it, uc16 separator, int base, Iterator& end) {\n+  if (separator == StringToDoubleConverter::kNoSeparator) {\n+    ++(*it);\n+    return *it == end;\n+  }\n+  if (!isDigit(**it, base)) {\n+    ++(*it);\n+    return *it == end;\n+  }\n+  ++(*it);\n+  if (*it == end) return true;\n+  if (*it + 1 == end) return false;\n+  if (**it == separator && isDigit(*(*it + 1), base)) {\n+    ++(*it);\n+  }\n+  return *it == end;\n+}\n+\n+\/\/ Checks whether the string in the range start-end is a hex-float string.\n+\/\/ This function assumes that the leading '0x'\/'0X' is already consumed.\n+\/\/\n+\/\/ Hex float strings are of one of the following forms:\n+\/\/   - hex_digits+ 'p' ('+'|'-')? exponent_digits+\n+\/\/   - hex_digits* '.' hex_digits+ 'p' ('+'|'-')? exponent_digits+\n+\/\/   - hex_digits+ '.' 'p' ('+'|'-')? exponent_digits+\n+template<class Iterator>\n+static bool IsHexFloatString(Iterator start,\n+                             Iterator end,\n+                             uc16 separator,\n+                             bool allow_trailing_junk) {\n+  DOUBLE_CONVERSION_ASSERT(start != end);\n+\n+  Iterator current = start;\n+\n+  bool saw_digit = false;\n+  while (isDigit(*current, 16)) {\n+    saw_digit = true;\n+    if (Advance(&current, separator, 16, end)) return false;\n+  }\n+  if (*current == '.') {\n+    if (Advance(&current, separator, 16, end)) return false;\n+    while (isDigit(*current, 16)) {\n+      saw_digit = true;\n+      if (Advance(&current, separator, 16, end)) return false;\n+    }\n+  }\n+  if (!saw_digit) return false;\n+  if (*current != 'p' && *current != 'P') return false;\n+  if (Advance(&current, separator, 16, end)) return false;\n+  if (*current == '+' || *current == '-') {\n+    if (Advance(&current, separator, 16, end)) return false;\n+  }\n+  if (!isDigit(*current, 10)) return false;\n+  if (Advance(&current, separator, 16, end)) return true;\n+  while (isDigit(*current, 10)) {\n+    if (Advance(&current, separator, 16, end)) return true;\n+  }\n+  return allow_trailing_junk || !AdvanceToNonspace(&current, end);\n+}\n+\n+\n+\/\/ Parsing integers with radix 2, 4, 8, 16, 32. Assumes current != end.\n+\/\/\n+\/\/ If parse_as_hex_float is true, then the string must be a valid\n+\/\/ hex-float.\n+template <int radix_log_2, class Iterator>\n+static double RadixStringToIeee(Iterator* current,\n+                                Iterator end,\n+                                bool sign,\n+                                uc16 separator,\n+                                bool parse_as_hex_float,\n+                                bool allow_trailing_junk,\n+                                double junk_string_value,\n+                                bool read_as_double,\n+                                bool* result_is_junk) {\n+  DOUBLE_CONVERSION_ASSERT(*current != end);\n+  DOUBLE_CONVERSION_ASSERT(!parse_as_hex_float ||\n+      IsHexFloatString(*current, end, separator, allow_trailing_junk));\n+\n+  const int kDoubleSize = Double::kSignificandSize;\n+  const int kSingleSize = Single::kSignificandSize;\n+  const int kSignificandSize = read_as_double? kDoubleSize: kSingleSize;\n+\n+  *result_is_junk = true;\n+\n+  int64_t number = 0;\n+  int exponent = 0;\n+  const int radix = (1 << radix_log_2);\n+  \/\/ Whether we have encountered a '.' and are parsing the decimal digits.\n+  \/\/ Only relevant if parse_as_hex_float is true.\n+  bool post_decimal = false;\n+\n+  \/\/ Skip leading 0s.\n+  while (**current == '0') {\n+    if (Advance(current, separator, radix, end)) {\n+      *result_is_junk = false;\n+      return SignedZero(sign);\n+    }\n+  }\n+\n+  while (true) {\n+    int digit;\n+    if (IsDecimalDigitForRadix(**current, radix)) {\n+      digit = static_cast<char>(**current) - '0';\n+      if (post_decimal) exponent -= radix_log_2;\n+    } else if (IsCharacterDigitForRadix(**current, radix, 'a')) {\n+      digit = static_cast<char>(**current) - 'a' + 10;\n+      if (post_decimal) exponent -= radix_log_2;\n+    } else if (IsCharacterDigitForRadix(**current, radix, 'A')) {\n+      digit = static_cast<char>(**current) - 'A' + 10;\n+      if (post_decimal) exponent -= radix_log_2;\n+    } else if (parse_as_hex_float && **current == '.') {\n+      post_decimal = true;\n+      Advance(current, separator, radix, end);\n+      DOUBLE_CONVERSION_ASSERT(*current != end);\n+      continue;\n+    } else if (parse_as_hex_float && (**current == 'p' || **current == 'P')) {\n+      break;\n+    } else {\n+      if (allow_trailing_junk || !AdvanceToNonspace(current, end)) {\n+        break;\n+      } else {\n+        return junk_string_value;\n+      }\n+    }\n+\n+    number = number * radix + digit;\n+    int overflow = static_cast<int>(number >> kSignificandSize);\n+    if (overflow != 0) {\n+      \/\/ Overflow occurred. Need to determine which direction to round the\n+      \/\/ result.\n+      int overflow_bits_count = 1;\n+      while (overflow > 1) {\n+        overflow_bits_count++;\n+        overflow >>= 1;\n+      }\n+\n+      int dropped_bits_mask = ((1 << overflow_bits_count) - 1);\n+      int dropped_bits = static_cast<int>(number) & dropped_bits_mask;\n+      number >>= overflow_bits_count;\n+      exponent += overflow_bits_count;\n+\n+      bool zero_tail = true;\n+      for (;;) {\n+        if (Advance(current, separator, radix, end)) break;\n+        if (parse_as_hex_float && **current == '.') {\n+          \/\/ Just run over the '.'. We are just trying to see whether there is\n+          \/\/ a non-zero digit somewhere.\n+          Advance(current, separator, radix, end);\n+          DOUBLE_CONVERSION_ASSERT(*current != end);\n+          post_decimal = true;\n+        }\n+        if (!isDigit(**current, radix)) break;\n+        zero_tail = zero_tail && **current == '0';\n+        if (!post_decimal) exponent += radix_log_2;\n+      }\n+\n+      if (!parse_as_hex_float &&\n+          !allow_trailing_junk &&\n+          AdvanceToNonspace(current, end)) {\n+        return junk_string_value;\n+      }\n+\n+      int middle_value = (1 << (overflow_bits_count - 1));\n+      if (dropped_bits > middle_value) {\n+        number++;  \/\/ Rounding up.\n+      } else if (dropped_bits == middle_value) {\n+        \/\/ Rounding to even to consistency with decimals: half-way case rounds\n+        \/\/ up if significant part is odd and down otherwise.\n+        if ((number & 1) != 0 || !zero_tail) {\n+          number++;  \/\/ Rounding up.\n+        }\n+      }\n+\n+      \/\/ Rounding up may cause overflow.\n+      if ((number & ((int64_t)1 << kSignificandSize)) != 0) {\n+        exponent++;\n+        number >>= 1;\n+      }\n+      break;\n+    }\n+    if (Advance(current, separator, radix, end)) break;\n+  }\n+\n+  DOUBLE_CONVERSION_ASSERT(number < ((int64_t)1 << kSignificandSize));\n+  DOUBLE_CONVERSION_ASSERT(static_cast<int64_t>(static_cast<double>(number)) == number);\n+\n+  *result_is_junk = false;\n+\n+  if (parse_as_hex_float) {\n+    DOUBLE_CONVERSION_ASSERT(**current == 'p' || **current == 'P');\n+    Advance(current, separator, radix, end);\n+    DOUBLE_CONVERSION_ASSERT(*current != end);\n+    bool is_negative = false;\n+    if (**current == '+') {\n+      Advance(current, separator, radix, end);\n+      DOUBLE_CONVERSION_ASSERT(*current != end);\n+    } else if (**current == '-') {\n+      is_negative = true;\n+      Advance(current, separator, radix, end);\n+      DOUBLE_CONVERSION_ASSERT(*current != end);\n+    }\n+    int written_exponent = 0;\n+    while (IsDecimalDigitForRadix(**current, 10)) {\n+      \/\/ No need to read exponents if they are too big. That could potentially overflow\n+      \/\/ the `written_exponent` variable.\n+      if (abs(written_exponent) <= 100 * Double::kMaxExponent) {\n+        written_exponent = 10 * written_exponent + **current - '0';\n+      }\n+      if (Advance(current, separator, radix, end)) break;\n+    }\n+    if (is_negative) written_exponent = -written_exponent;\n+    exponent += written_exponent;\n+  }\n+\n+  if (exponent == 0 || number == 0) {\n+    if (sign) {\n+      if (number == 0) return -0.0;\n+      number = -number;\n+    }\n+    return static_cast<double>(number);\n+  }\n+\n+  DOUBLE_CONVERSION_ASSERT(number != 0);\n+  double result = Double(DiyFp(number, exponent)).value();\n+  return sign ? -result : result;\n+}\n+\n+template <class Iterator>\n+double StringToDoubleConverter::StringToIeee(\n+    Iterator input,\n+    int length,\n+    bool read_as_double,\n+    int* processed_characters_count) const {\n+  Iterator current = input;\n+  Iterator end = input + length;\n+\n+  *processed_characters_count = 0;\n+\n+  const bool allow_trailing_junk = (flags_ & ALLOW_TRAILING_JUNK) != 0;\n+  const bool allow_leading_spaces = (flags_ & ALLOW_LEADING_SPACES) != 0;\n+  const bool allow_trailing_spaces = (flags_ & ALLOW_TRAILING_SPACES) != 0;\n+  const bool allow_spaces_after_sign = (flags_ & ALLOW_SPACES_AFTER_SIGN) != 0;\n+  const bool allow_case_insensitivity = (flags_ & ALLOW_CASE_INSENSITIVITY) != 0;\n+\n+  \/\/ To make sure that iterator dereferencing is valid the following\n+  \/\/ convention is used:\n+  \/\/ 1. Each '++current' statement is followed by check for equality to 'end'.\n+  \/\/ 2. If AdvanceToNonspace returned false then current == end.\n+  \/\/ 3. If 'current' becomes equal to 'end' the function returns or goes to\n+  \/\/ 'parsing_done'.\n+  \/\/ 4. 'current' is not dereferenced after the 'parsing_done' label.\n+  \/\/ 5. Code before 'parsing_done' may rely on 'current != end'.\n+  if (current == end) return empty_string_value_;\n+\n+  if (allow_leading_spaces || allow_trailing_spaces) {\n+    if (!AdvanceToNonspace(&current, end)) {\n+      *processed_characters_count = static_cast<int>(current - input);\n+      return empty_string_value_;\n+    }\n+    if (!allow_leading_spaces && (input != current)) {\n+      \/\/ No leading spaces allowed, but AdvanceToNonspace moved forward.\n+      return junk_string_value_;\n+    }\n+  }\n+\n+  \/\/ Exponent will be adjusted if insignificant digits of the integer part\n+  \/\/ or insignificant leading zeros of the fractional part are dropped.\n+  int exponent = 0;\n+  int significant_digits = 0;\n+  int insignificant_digits = 0;\n+  bool nonzero_digit_dropped = false;\n+\n+  bool sign = false;\n+\n+  if (*current == '+' || *current == '-') {\n+    sign = (*current == '-');\n+    ++current;\n+    Iterator next_non_space = current;\n+    \/\/ Skip following spaces (if allowed).\n+    if (!AdvanceToNonspace(&next_non_space, end)) return junk_string_value_;\n+    if (!allow_spaces_after_sign && (current != next_non_space)) {\n+      return junk_string_value_;\n+    }\n+    current = next_non_space;\n+  }\n+\n+  if (infinity_symbol_ != NULL) {\n+    if (ConsumeFirstCharacter(*current, infinity_symbol_, allow_case_insensitivity)) {\n+      if (!ConsumeSubString(&current, end, infinity_symbol_, allow_case_insensitivity)) {\n+        return junk_string_value_;\n+      }\n+\n+      if (!(allow_trailing_spaces || allow_trailing_junk) && (current != end)) {\n+        return junk_string_value_;\n+      }\n+      if (!allow_trailing_junk && AdvanceToNonspace(&current, end)) {\n+        return junk_string_value_;\n+      }\n+\n+      *processed_characters_count = static_cast<int>(current - input);\n+      return sign ? -Double::Infinity() : Double::Infinity();\n+    }\n+  }\n+\n+  if (nan_symbol_ != NULL) {\n+    if (ConsumeFirstCharacter(*current, nan_symbol_, allow_case_insensitivity)) {\n+      if (!ConsumeSubString(&current, end, nan_symbol_, allow_case_insensitivity)) {\n+        return junk_string_value_;\n+      }\n+\n+      if (!(allow_trailing_spaces || allow_trailing_junk) && (current != end)) {\n+        return junk_string_value_;\n+      }\n+      if (!allow_trailing_junk && AdvanceToNonspace(&current, end)) {\n+        return junk_string_value_;\n+      }\n+\n+      *processed_characters_count = static_cast<int>(current - input);\n+      return sign ? -Double::NaN() : Double::NaN();\n+    }\n+  }\n+\n+  bool leading_zero = false;\n+  if (*current == '0') {\n+    if (Advance(&current, separator_, 10, end)) {\n+      *processed_characters_count = static_cast<int>(current - input);\n+      return SignedZero(sign);\n+    }\n+\n+    leading_zero = true;\n+\n+    \/\/ It could be hexadecimal value.\n+    if (((flags_ & ALLOW_HEX) || (flags_ & ALLOW_HEX_FLOATS)) &&\n+        (*current == 'x' || *current == 'X')) {\n+      ++current;\n+\n+      if (current == end) return junk_string_value_;  \/\/ \"0x\"\n+\n+      bool parse_as_hex_float = (flags_ & ALLOW_HEX_FLOATS) &&\n+                IsHexFloatString(current, end, separator_, allow_trailing_junk);\n+\n+      if (!parse_as_hex_float && !isDigit(*current, 16)) {\n+        return junk_string_value_;\n+      }\n+\n+      bool result_is_junk;\n+      double result = RadixStringToIeee<4>(&current,\n+                                           end,\n+                                           sign,\n+                                           separator_,\n+                                           parse_as_hex_float,\n+                                           allow_trailing_junk,\n+                                           junk_string_value_,\n+                                           read_as_double,\n+                                           &result_is_junk);\n+      if (!result_is_junk) {\n+        if (allow_trailing_spaces) AdvanceToNonspace(&current, end);\n+        *processed_characters_count = static_cast<int>(current - input);\n+      }\n+      return result;\n+    }\n+\n+    \/\/ Ignore leading zeros in the integer part.\n+    while (*current == '0') {\n+      if (Advance(&current, separator_, 10, end)) {\n+        *processed_characters_count = static_cast<int>(current - input);\n+        return SignedZero(sign);\n+      }\n+    }\n+  }\n+\n+  bool octal = leading_zero && (flags_ & ALLOW_OCTALS) != 0;\n+\n+  \/\/ The longest form of simplified number is: \"-<significant digits>.1eXXX\\0\".\n+  const int kBufferSize = kMaxSignificantDigits + 10;\n+  DOUBLE_CONVERSION_STACK_UNINITIALIZED char\n+      buffer[kBufferSize];  \/\/ NOLINT: size is known at compile time.\n+  int buffer_pos = 0;\n+\n+  \/\/ Copy significant digits of the integer part (if any) to the buffer.\n+  while (*current >= '0' && *current <= '9') {\n+    if (significant_digits < kMaxSignificantDigits) {\n+      DOUBLE_CONVERSION_ASSERT(buffer_pos < kBufferSize);\n+      buffer[buffer_pos++] = static_cast<char>(*current);\n+      significant_digits++;\n+      \/\/ Will later check if it's an octal in the buffer.\n+    } else {\n+      insignificant_digits++;  \/\/ Move the digit into the exponential part.\n+      nonzero_digit_dropped = nonzero_digit_dropped || *current != '0';\n+    }\n+    octal = octal && *current < '8';\n+    if (Advance(&current, separator_, 10, end)) goto parsing_done;\n+  }\n+\n+  if (significant_digits == 0) {\n+    octal = false;\n+  }\n+\n+  if (*current == '.') {\n+    if (octal && !allow_trailing_junk) return junk_string_value_;\n+    if (octal) goto parsing_done;\n+\n+    if (Advance(&current, separator_, 10, end)) {\n+      if (significant_digits == 0 && !leading_zero) {\n+        return junk_string_value_;\n+      } else {\n+        goto parsing_done;\n+      }\n+    }\n+\n+    if (significant_digits == 0) {\n+      \/\/ octal = false;\n+      \/\/ Integer part consists of 0 or is absent. Significant digits start after\n+      \/\/ leading zeros (if any).\n+      while (*current == '0') {\n+        if (Advance(&current, separator_, 10, end)) {\n+          *processed_characters_count = static_cast<int>(current - input);\n+          return SignedZero(sign);\n+        }\n+        exponent--;  \/\/ Move this 0 into the exponent.\n+      }\n+    }\n+\n+    \/\/ There is a fractional part.\n+    \/\/ We don't emit a '.', but adjust the exponent instead.\n+    while (*current >= '0' && *current <= '9') {\n+      if (significant_digits < kMaxSignificantDigits) {\n+        DOUBLE_CONVERSION_ASSERT(buffer_pos < kBufferSize);\n+        buffer[buffer_pos++] = static_cast<char>(*current);\n+        significant_digits++;\n+        exponent--;\n+      } else {\n+        \/\/ Ignore insignificant digits in the fractional part.\n+        nonzero_digit_dropped = nonzero_digit_dropped || *current != '0';\n+      }\n+      if (Advance(&current, separator_, 10, end)) goto parsing_done;\n+    }\n+  }\n+\n+  if (!leading_zero && exponent == 0 && significant_digits == 0) {\n+    \/\/ If leading_zeros is true then the string contains zeros.\n+    \/\/ If exponent < 0 then string was [+-]\\.0*...\n+    \/\/ If significant_digits != 0 the string is not equal to 0.\n+    \/\/ Otherwise there are no digits in the string.\n+    return junk_string_value_;\n+  }\n+\n+  \/\/ Parse exponential part.\n+  if (*current == 'e' || *current == 'E') {\n+    if (octal && !allow_trailing_junk) return junk_string_value_;\n+    if (octal) goto parsing_done;\n+    Iterator junk_begin = current;\n+    ++current;\n+    if (current == end) {\n+      if (allow_trailing_junk) {\n+        current = junk_begin;\n+        goto parsing_done;\n+      } else {\n+        return junk_string_value_;\n+      }\n+    }\n+    char exponen_sign = '+';\n+    if (*current == '+' || *current == '-') {\n+      exponen_sign = static_cast<char>(*current);\n+      ++current;\n+      if (current == end) {\n+        if (allow_trailing_junk) {\n+          current = junk_begin;\n+          goto parsing_done;\n+        } else {\n+          return junk_string_value_;\n+        }\n+      }\n+    }\n+\n+    if (current == end || *current < '0' || *current > '9') {\n+      if (allow_trailing_junk) {\n+        current = junk_begin;\n+        goto parsing_done;\n+      } else {\n+        return junk_string_value_;\n+      }\n+    }\n+\n+    const int max_exponent = INT_MAX \/ 2;\n+    DOUBLE_CONVERSION_ASSERT(-max_exponent \/ 2 <= exponent && exponent <= max_exponent \/ 2);\n+    int num = 0;\n+    do {\n+      \/\/ Check overflow.\n+      int digit = *current - '0';\n+      if (num >= max_exponent \/ 10\n+          && !(num == max_exponent \/ 10 && digit <= max_exponent % 10)) {\n+        num = max_exponent;\n+      } else {\n+        num = num * 10 + digit;\n+      }\n+      ++current;\n+    } while (current != end && *current >= '0' && *current <= '9');\n+\n+    exponent += (exponen_sign == '-' ? -num : num);\n+  }\n+\n+  if (!(allow_trailing_spaces || allow_trailing_junk) && (current != end)) {\n+    return junk_string_value_;\n+  }\n+  if (!allow_trailing_junk && AdvanceToNonspace(&current, end)) {\n+    return junk_string_value_;\n+  }\n+  if (allow_trailing_spaces) {\n+    AdvanceToNonspace(&current, end);\n+  }\n+\n+  parsing_done:\n+  exponent += insignificant_digits;\n+\n+  if (octal) {\n+    double result;\n+    bool result_is_junk;\n+    char* start = buffer;\n+    result = RadixStringToIeee<3>(&start,\n+                                  buffer + buffer_pos,\n+                                  sign,\n+                                  separator_,\n+                                  false, \/\/ Don't parse as hex_float.\n+                                  allow_trailing_junk,\n+                                  junk_string_value_,\n+                                  read_as_double,\n+                                  &result_is_junk);\n+    DOUBLE_CONVERSION_ASSERT(!result_is_junk);\n+    *processed_characters_count = static_cast<int>(current - input);\n+    return result;\n+  }\n+\n+  if (nonzero_digit_dropped) {\n+    buffer[buffer_pos++] = '1';\n+    exponent--;\n+  }\n+\n+  DOUBLE_CONVERSION_ASSERT(buffer_pos < kBufferSize);\n+  buffer[buffer_pos] = '\\0';\n+\n+  double converted;\n+  if (read_as_double) {\n+    converted = Strtod(Vector<const char>(buffer, buffer_pos), exponent);\n+  } else {\n+    converted = Strtof(Vector<const char>(buffer, buffer_pos), exponent);\n+  }\n+  *processed_characters_count = static_cast<int>(current - input);\n+  return sign? -converted: converted;\n+}\n+\n+\n+double StringToDoubleConverter::StringToDouble(\n+    const char* buffer,\n+    int length,\n+    int* processed_characters_count) const {\n+  return StringToIeee(buffer, length, true, processed_characters_count);\n+}\n+\n+\n+double StringToDoubleConverter::StringToDouble(\n+    const uc16* buffer,\n+    int length,\n+    int* processed_characters_count) const {\n+  return StringToIeee(buffer, length, true, processed_characters_count);\n+}\n+\n+\n+float StringToDoubleConverter::StringToFloat(\n+    const char* buffer,\n+    int length,\n+    int* processed_characters_count) const {\n+  return static_cast<float>(StringToIeee(buffer, length, false,\n+                                         processed_characters_count));\n+}\n+\n+\n+float StringToDoubleConverter::StringToFloat(\n+    const uc16* buffer,\n+    int length,\n+    int* processed_characters_count) const {\n+  return static_cast<float>(StringToIeee(buffer, length, false,\n+                                         processed_characters_count));\n+}\n+\n+}  \/\/ namespace double_conversion\n+\n+\/\/ ICU PATCH: Close ICU namespace\n+U_NAMESPACE_END\n+#endif \/\/ ICU PATCH: close #if !UCONFIG_NO_FORMATTING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-string-to-double.cpp","additions":789,"deletions":0,"binary":false,"changes":789,"status":"added"},{"patch":"@@ -0,0 +1,244 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\/\/\n+\/\/ From the double-conversion library. Original license:\n+\/\/\n+\/\/ Copyright 2012 the V8 project authors. All rights reserved.\n+\/\/ Redistribution and use in source and binary forms, with or without\n+\/\/ modification, are permitted provided that the following conditions are\n+\/\/ met:\n+\/\/\n+\/\/     * Redistributions of source code must retain the above copyright\n+\/\/       notice, this list of conditions and the following disclaimer.\n+\/\/     * Redistributions in binary form must reproduce the above\n+\/\/       copyright notice, this list of conditions and the following\n+\/\/       disclaimer in the documentation and\/or other materials provided\n+\/\/       with the distribution.\n+\/\/     * Neither the name of Google Inc. nor the names of its\n+\/\/       contributors may be used to endorse or promote products derived\n+\/\/       from this software without specific prior written permission.\n+\/\/\n+\/\/ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+\/\/ \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+\/\/ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+\/\/ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+\/\/ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+\/\/ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+\/\/ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+\/\/ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+\/\/ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+\/\/ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+\/\/ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\/\/ ICU PATCH: ifdef around UCONFIG_NO_FORMATTING\n+#include \"unicode\/utypes.h\"\n+#if !UCONFIG_NO_FORMATTING\n+\n+#ifndef DOUBLE_CONVERSION_STRING_TO_DOUBLE_H_\n+#define DOUBLE_CONVERSION_STRING_TO_DOUBLE_H_\n+\n+\/\/ ICU PATCH: Customize header file paths for ICU.\n+\n+#include \"double-conversion-utils.h\"\n+\n+\/\/ ICU PATCH: Wrap in ICU namespace\n+U_NAMESPACE_BEGIN\n+\n+namespace double_conversion {\n+\n+class StringToDoubleConverter {\n+ public:\n+  \/\/ Enumeration for allowing octals and ignoring junk when converting\n+  \/\/ strings to numbers.\n+  enum Flags {\n+    NO_FLAGS = 0,\n+    ALLOW_HEX = 1,\n+    ALLOW_OCTALS = 2,\n+    ALLOW_TRAILING_JUNK = 4,\n+    ALLOW_LEADING_SPACES = 8,\n+    ALLOW_TRAILING_SPACES = 16,\n+    ALLOW_SPACES_AFTER_SIGN = 32,\n+    ALLOW_CASE_INSENSITIVITY = 64,\n+    ALLOW_CASE_INSENSIBILITY = 64,  \/\/ Deprecated\n+    ALLOW_HEX_FLOATS = 128,\n+  };\n+\n+  static const uc16 kNoSeparator = '\\0';\n+\n+  \/\/ Flags should be a bit-or combination of the possible Flags-enum.\n+  \/\/  - NO_FLAGS: no special flags.\n+  \/\/  - ALLOW_HEX: recognizes the prefix \"0x\". Hex numbers may only be integers.\n+  \/\/      Ex: StringToDouble(\"0x1234\") -> 4660.0\n+  \/\/          In StringToDouble(\"0x1234.56\") the characters \".56\" are trailing\n+  \/\/          junk. The result of the call is hence dependent on\n+  \/\/          the ALLOW_TRAILING_JUNK flag and\/or the junk value.\n+  \/\/      With this flag \"0x\" is a junk-string. Even with ALLOW_TRAILING_JUNK,\n+  \/\/      the string will not be parsed as \"0\" followed by junk.\n+  \/\/\n+  \/\/  - ALLOW_OCTALS: recognizes the prefix \"0\" for octals:\n+  \/\/      If a sequence of octal digits starts with '0', then the number is\n+  \/\/      read as octal integer. Octal numbers may only be integers.\n+  \/\/      Ex: StringToDouble(\"01234\") -> 668.0\n+  \/\/          StringToDouble(\"012349\") -> 12349.0  \/\/ Not a sequence of octal\n+  \/\/                                               \/\/ digits.\n+  \/\/          In StringToDouble(\"01234.56\") the characters \".56\" are trailing\n+  \/\/          junk. The result of the call is hence dependent on\n+  \/\/          the ALLOW_TRAILING_JUNK flag and\/or the junk value.\n+  \/\/          In StringToDouble(\"01234e56\") the characters \"e56\" are trailing\n+  \/\/          junk, too.\n+  \/\/  - ALLOW_TRAILING_JUNK: ignore trailing characters that are not part of\n+  \/\/      a double literal.\n+  \/\/  - ALLOW_LEADING_SPACES: skip over leading whitespace, including spaces,\n+  \/\/                          new-lines, and tabs.\n+  \/\/  - ALLOW_TRAILING_SPACES: ignore trailing whitespace.\n+  \/\/  - ALLOW_SPACES_AFTER_SIGN: ignore whitespace after the sign.\n+  \/\/       Ex: StringToDouble(\"-   123.2\") -> -123.2.\n+  \/\/           StringToDouble(\"+   123.2\") -> 123.2\n+  \/\/  - ALLOW_CASE_INSENSITIVITY: ignore case of characters for special values:\n+  \/\/      infinity and nan.\n+  \/\/  - ALLOW_HEX_FLOATS: allows hexadecimal float literals.\n+  \/\/      This *must* start with \"0x\" and separate the exponent with \"p\".\n+  \/\/      Examples: 0x1.2p3 == 9.0\n+  \/\/                0x10.1p0 == 16.0625\n+  \/\/      ALLOW_HEX and ALLOW_HEX_FLOATS are indendent.\n+  \/\/\n+  \/\/ empty_string_value is returned when an empty string is given as input.\n+  \/\/ If ALLOW_LEADING_SPACES or ALLOW_TRAILING_SPACES are set, then a string\n+  \/\/ containing only spaces is converted to the 'empty_string_value', too.\n+  \/\/\n+  \/\/ junk_string_value is returned when\n+  \/\/  a) ALLOW_TRAILING_JUNK is not set, and a junk character (a character not\n+  \/\/     part of a double-literal) is found.\n+  \/\/  b) ALLOW_TRAILING_JUNK is set, but the string does not start with a\n+  \/\/     double literal.\n+  \/\/\n+  \/\/ infinity_symbol and nan_symbol are strings that are used to detect\n+  \/\/ inputs that represent infinity and NaN. They can be null, in which case\n+  \/\/ they are ignored.\n+  \/\/ The conversion routine first reads any possible signs. Then it compares the\n+  \/\/ following character of the input-string with the first character of\n+  \/\/ the infinity, and nan-symbol. If either matches, the function assumes, that\n+  \/\/ a match has been found, and expects the following input characters to match\n+  \/\/ the remaining characters of the special-value symbol.\n+  \/\/ This means that the following restrictions apply to special-value symbols:\n+  \/\/  - they must not start with signs ('+', or '-'),\n+  \/\/  - they must not have the same first character.\n+  \/\/  - they must not start with digits.\n+  \/\/\n+  \/\/ If the separator character is not kNoSeparator, then that specific\n+  \/\/ character is ignored when in between two valid digits of the significant.\n+  \/\/ It is not allowed to appear in the exponent.\n+  \/\/ It is not allowed to lead or trail the number.\n+  \/\/ It is not allowed to appear twice next to each other.\n+  \/\/\n+  \/\/ Examples:\n+  \/\/  flags = ALLOW_HEX | ALLOW_TRAILING_JUNK,\n+  \/\/  empty_string_value = 0.0,\n+  \/\/  junk_string_value = NaN,\n+  \/\/  infinity_symbol = \"infinity\",\n+  \/\/  nan_symbol = \"nan\":\n+  \/\/    StringToDouble(\"0x1234\") -> 4660.0.\n+  \/\/    StringToDouble(\"0x1234K\") -> 4660.0.\n+  \/\/    StringToDouble(\"\") -> 0.0  \/\/ empty_string_value.\n+  \/\/    StringToDouble(\" \") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\" 1\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"0x\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"-123.45\") -> -123.45.\n+  \/\/    StringToDouble(\"--123.45\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"123e45\") -> 123e45.\n+  \/\/    StringToDouble(\"123E45\") -> 123e45.\n+  \/\/    StringToDouble(\"123e+45\") -> 123e45.\n+  \/\/    StringToDouble(\"123E-45\") -> 123e-45.\n+  \/\/    StringToDouble(\"123e\") -> 123.0  \/\/ trailing junk ignored.\n+  \/\/    StringToDouble(\"123e-\") -> 123.0  \/\/ trailing junk ignored.\n+  \/\/    StringToDouble(\"+NaN\") -> NaN  \/\/ NaN string literal.\n+  \/\/    StringToDouble(\"-infinity\") -> -inf.  \/\/ infinity literal.\n+  \/\/    StringToDouble(\"Infinity\") -> NaN  \/\/ junk_string_value.\n+  \/\/\n+  \/\/  flags = ALLOW_OCTAL | ALLOW_LEADING_SPACES,\n+  \/\/  empty_string_value = 0.0,\n+  \/\/  junk_string_value = NaN,\n+  \/\/  infinity_symbol = NULL,\n+  \/\/  nan_symbol = NULL:\n+  \/\/    StringToDouble(\"0x1234\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"01234\") -> 668.0.\n+  \/\/    StringToDouble(\"\") -> 0.0  \/\/ empty_string_value.\n+  \/\/    StringToDouble(\" \") -> 0.0  \/\/ empty_string_value.\n+  \/\/    StringToDouble(\" 1\") -> 1.0\n+  \/\/    StringToDouble(\"0x\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"0123e45\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"01239E45\") -> 1239e45.\n+  \/\/    StringToDouble(\"-infinity\") -> NaN  \/\/ junk_string_value.\n+  \/\/    StringToDouble(\"NaN\") -> NaN  \/\/ junk_string_value.\n+  \/\/\n+  \/\/  flags = NO_FLAGS,\n+  \/\/  separator = ' ':\n+  \/\/    StringToDouble(\"1 2 3 4\") -> 1234.0\n+  \/\/    StringToDouble(\"1  2\") -> NaN \/\/ junk_string_value\n+  \/\/    StringToDouble(\"1 000 000.0\") -> 1000000.0\n+  \/\/    StringToDouble(\"1.000 000\") -> 1.0\n+  \/\/    StringToDouble(\"1.0e1 000\") -> NaN \/\/ junk_string_value\n+  StringToDoubleConverter(int flags,\n+                          double empty_string_value,\n+                          double junk_string_value,\n+                          const char* infinity_symbol,\n+                          const char* nan_symbol,\n+                          uc16 separator = kNoSeparator)\n+      : flags_(flags),\n+        empty_string_value_(empty_string_value),\n+        junk_string_value_(junk_string_value),\n+        infinity_symbol_(infinity_symbol),\n+        nan_symbol_(nan_symbol),\n+        separator_(separator) {\n+  }\n+\n+  \/\/ Performs the conversion.\n+  \/\/ The output parameter 'processed_characters_count' is set to the number\n+  \/\/ of characters that have been processed to read the number.\n+  \/\/ Spaces than are processed with ALLOW_{LEADING|TRAILING}_SPACES are included\n+  \/\/ in the 'processed_characters_count'. Trailing junk is never included.\n+  double StringToDouble(const char* buffer,\n+                        int length,\n+                        int* processed_characters_count) const;\n+\n+  \/\/ Same as StringToDouble above but for 16 bit characters.\n+  double StringToDouble(const uc16* buffer,\n+                        int length,\n+                        int* processed_characters_count) const;\n+\n+  \/\/ Same as StringToDouble but reads a float.\n+  \/\/ Note that this is not equivalent to static_cast<float>(StringToDouble(...))\n+  \/\/ due to potential double-rounding.\n+  float StringToFloat(const char* buffer,\n+                      int length,\n+                      int* processed_characters_count) const;\n+\n+  \/\/ Same as StringToFloat above but for 16 bit characters.\n+  float StringToFloat(const uc16* buffer,\n+                      int length,\n+                      int* processed_characters_count) const;\n+\n+ private:\n+  const int flags_;\n+  const double empty_string_value_;\n+  const double junk_string_value_;\n+  const char* const infinity_symbol_;\n+  const char* const nan_symbol_;\n+  const uc16 separator_;\n+\n+  template <class Iterator>\n+  double StringToIeee(Iterator start_pointer,\n+                      int length,\n+                      bool read_as_double,\n+                      int* processed_characters_count) const;\n+\n+  DOUBLE_CONVERSION_DISALLOW_IMPLICIT_CONSTRUCTORS(StringToDoubleConverter);\n+};\n+\n+}  \/\/ namespace double_conversion\n+\n+\/\/ ICU PATCH: Close ICU namespace\n+U_NAMESPACE_END\n+\n+#endif  \/\/ DOUBLE_CONVERSION_STRING_TO_DOUBLE_H_\n+#endif \/\/ ICU PATCH: close #if !UCONFIG_NO_FORMATTING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-string-to-double.h","additions":244,"deletions":0,"binary":false,"changes":244,"status":"added"},{"patch":"@@ -37,2 +37,2 @@\n-#include <stdarg.h>\n-#include <limits.h>\n+#include <climits>\n+#include <cstdarg>\n@@ -41,1 +41,0 @@\n-\/\/ The file fixed-dtoa.h is not needed.\n@@ -43,1 +42,0 @@\n-#include \"double-conversion-strtod.h\"\n@@ -47,0 +45,1 @@\n+#include \"double-conversion-strtod.h\"\n@@ -53,0 +52,1 @@\n+#if defined(DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS)\n@@ -57,0 +57,1 @@\n+#endif \/\/ #if defined(DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS)\n@@ -70,1 +71,1 @@\n-static const uint64_t kMaxUint64 = UINT64_2PART_C(0xFFFFFFFF, FFFFFFFF);\n+static const uint64_t kMaxUint64 = DOUBLE_CONVERSION_UINT64_2PART_C(0xFFFFFFFF, FFFFFFFF);\n@@ -73,0 +74,1 @@\n+#if defined(DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS)\n@@ -99,1 +101,2 @@\n-static const int kExactPowersOfTenSize = ARRAY_SIZE(exact_powers_of_ten);\n+static const int kExactPowersOfTenSize = DOUBLE_CONVERSION_ARRAY_SIZE(exact_powers_of_ten);\n+#endif \/\/ #if defined(DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS)\n@@ -135,1 +138,1 @@\n-  ASSERT(buffer[buffer.length() - 1] != '0');\n+  DOUBLE_CONVERSION_ASSERT(buffer[buffer.length() - 1] != '0');\n@@ -156,1 +159,1 @@\n-    ASSERT(space_size >= kMaxSignificantDecimalDigits);\n+    DOUBLE_CONVERSION_ASSERT(space_size >= kMaxSignificantDecimalDigits);\n@@ -179,1 +182,1 @@\n-    ASSERT(0 <= digit && digit <= 9);\n+    DOUBLE_CONVERSION_ASSERT(0 <= digit && digit <= 9);\n@@ -223,1 +226,1 @@\n-#endif\n+#else\n@@ -235,1 +238,1 @@\n-      ASSERT(read_digits == trimmed.length());\n+      DOUBLE_CONVERSION_ASSERT(read_digits == trimmed.length());\n@@ -242,1 +245,1 @@\n-      ASSERT(read_digits == trimmed.length());\n+      DOUBLE_CONVERSION_ASSERT(read_digits == trimmed.length());\n@@ -254,1 +257,1 @@\n-      ASSERT(read_digits == trimmed.length());\n+      DOUBLE_CONVERSION_ASSERT(read_digits == trimmed.length());\n@@ -261,0 +264,1 @@\n+#endif\n@@ -267,2 +271,2 @@\n-  ASSERT(0 < exponent);\n-  ASSERT(exponent < PowersOfTenCache::kDecimalExponentDistance);\n+  DOUBLE_CONVERSION_ASSERT(0 < exponent);\n+  DOUBLE_CONVERSION_ASSERT(exponent < PowersOfTenCache::kDecimalExponentDistance);\n@@ -271,1 +275,1 @@\n-  ASSERT(PowersOfTenCache::kDecimalExponentDistance == 8);\n+  DOUBLE_CONVERSION_ASSERT(PowersOfTenCache::kDecimalExponentDistance == 8);\n@@ -273,7 +277,7 @@\n-    case 1: return DiyFp(UINT64_2PART_C(0xa0000000, 00000000), -60);\n-    case 2: return DiyFp(UINT64_2PART_C(0xc8000000, 00000000), -57);\n-    case 3: return DiyFp(UINT64_2PART_C(0xfa000000, 00000000), -54);\n-    case 4: return DiyFp(UINT64_2PART_C(0x9c400000, 00000000), -50);\n-    case 5: return DiyFp(UINT64_2PART_C(0xc3500000, 00000000), -47);\n-    case 6: return DiyFp(UINT64_2PART_C(0xf4240000, 00000000), -44);\n-    case 7: return DiyFp(UINT64_2PART_C(0x98968000, 00000000), -40);\n+    case 1: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0xa0000000, 00000000), -60);\n+    case 2: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0xc8000000, 00000000), -57);\n+    case 3: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0xfa000000, 00000000), -54);\n+    case 4: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0x9c400000, 00000000), -50);\n+    case 5: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0xc3500000, 00000000), -47);\n+    case 6: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0xf4240000, 00000000), -44);\n+    case 7: return DiyFp(DOUBLE_CONVERSION_UINT64_2PART_C(0x98968000, 00000000), -40);\n@@ -281,1 +285,1 @@\n-      UNREACHABLE();\n+      DOUBLE_CONVERSION_UNREACHABLE();\n@@ -310,1 +314,1 @@\n-  ASSERT(exponent <= PowersOfTenCache::kMaxDecimalExponent);\n+  DOUBLE_CONVERSION_ASSERT(exponent <= PowersOfTenCache::kMaxDecimalExponent);\n@@ -328,1 +332,1 @@\n-      ASSERT(DiyFp::kSignificandSize == 64);\n+      DOUBLE_CONVERSION_ASSERT(DiyFp::kSignificandSize == 64);\n@@ -370,2 +374,2 @@\n-  ASSERT(DiyFp::kSignificandSize == 64);\n-  ASSERT(precision_digits_count < 64);\n+  DOUBLE_CONVERSION_ASSERT(DiyFp::kSignificandSize == 64);\n+  DOUBLE_CONVERSION_ASSERT(precision_digits_count < 64);\n@@ -410,3 +414,3 @@\n-  ASSERT(buffer.length() + exponent <= kMaxDecimalPower + 1);\n-  ASSERT(buffer.length() + exponent > kMinDecimalPower);\n-  ASSERT(buffer.length() <= kMaxSignificantDecimalDigits);\n+  DOUBLE_CONVERSION_ASSERT(buffer.length() + exponent <= kMaxDecimalPower + 1);\n+  DOUBLE_CONVERSION_ASSERT(buffer.length() + exponent > kMinDecimalPower);\n+  DOUBLE_CONVERSION_ASSERT(buffer.length() <= kMaxSignificantDecimalDigits);\n@@ -417,1 +421,1 @@\n-  ASSERT(((kMaxDecimalPower + 1) * 333 \/ 100) < Bignum::kMaxSignificantBits);\n+  DOUBLE_CONVERSION_ASSERT(((kMaxDecimalPower + 1) * 333 \/ 100) < Bignum::kMaxSignificantBits);\n@@ -463,7 +467,4 @@\n-double Strtod(Vector<const char> buffer, int exponent) {\n-  char copy_buffer[kMaxSignificantDecimalDigits];\n-  Vector<const char> trimmed;\n-  int updated_exponent;\n-  TrimAndCut(buffer, exponent, copy_buffer, kMaxSignificantDecimalDigits,\n-             &trimmed, &updated_exponent);\n-  exponent = updated_exponent;\n+#if U_DEBUG \/\/ needed for ICU only in debug mode\n+static bool IsDigit(const char d) {\n+  return ('0' <= d) && (d <= '9');\n+}\n@@ -471,3 +472,13 @@\n-  double guess;\n-  bool is_correct = ComputeGuess(trimmed, exponent, &guess);\n-  if (is_correct) return guess;\n+static bool IsNonZeroDigit(const char d) {\n+  return ('1' <= d) && (d <= '9');\n+}\n+\n+static bool AssertTrimmedDigits(const Vector<const char>& buffer) {\n+  for(int i = 0; i < buffer.length(); ++i) {\n+    if(!IsDigit(buffer[i])) {\n+      return false;\n+    }\n+  }\n+  return (buffer.length() == 0) || (IsNonZeroDigit(buffer[0]) && IsNonZeroDigit(buffer[buffer.length()-1]));\n+}\n+#endif \/\/ needed for ICU only in debug mode\n@@ -475,0 +486,8 @@\n+double StrtodTrimmed(Vector<const char> trimmed, int exponent) {\n+  DOUBLE_CONVERSION_ASSERT(trimmed.length() <= kMaxSignificantDecimalDigits);\n+  DOUBLE_CONVERSION_ASSERT(AssertTrimmedDigits(trimmed));\n+  double guess;\n+  const bool is_correct = ComputeGuess(trimmed, exponent, &guess);\n+  if (is_correct) {\n+    return guess;\n+  }\n@@ -489,0 +508,33 @@\n+double Strtod(Vector<const char> buffer, int exponent) {\n+  char copy_buffer[kMaxSignificantDecimalDigits];\n+  Vector<const char> trimmed;\n+  int updated_exponent;\n+  TrimAndCut(buffer, exponent, copy_buffer, kMaxSignificantDecimalDigits,\n+             &trimmed, &updated_exponent);\n+  return StrtodTrimmed(trimmed, updated_exponent);\n+}\n+\n+static float SanitizedDoubletof(double d) {\n+  DOUBLE_CONVERSION_ASSERT(d >= 0.0);\n+  \/\/ ASAN has a sanitize check that disallows casting doubles to floats if\n+  \/\/ they are too big.\n+  \/\/ https:\/\/clang.llvm.org\/docs\/UndefinedBehaviorSanitizer.html#available-checks\n+  \/\/ The behavior should be covered by IEEE 754, but some projects use this\n+  \/\/ flag, so work around it.\n+  float max_finite = 3.4028234663852885981170418348451692544e+38;\n+  \/\/ The half-way point between the max-finite and infinity value.\n+  \/\/ Since infinity has an even significand everything equal or greater than\n+  \/\/ this value should become infinity.\n+  double half_max_finite_infinity =\n+      3.40282356779733661637539395458142568448e+38;\n+  if (d >= max_finite) {\n+    if (d >= half_max_finite_infinity) {\n+      return Single::Infinity();\n+    } else {\n+      return max_finite;\n+    }\n+  } else {\n+    return static_cast<float>(d);\n+  }\n+}\n+\n@@ -500,1 +552,1 @@\n-  float float_guess = static_cast<float>(double_guess);\n+  float float_guess = SanitizedDoubletof(double_guess);\n@@ -523,1 +575,1 @@\n-  float f1 = static_cast<float>(double_previous);\n+  float f1 = SanitizedDoubletof(double_previous);\n@@ -525,1 +577,1 @@\n-  float f3 = static_cast<float>(double_next);\n+  float f3 = SanitizedDoubletof(double_next);\n@@ -531,1 +583,1 @@\n-    f4 = static_cast<float>(double_next2);\n+    f4 = SanitizedDoubletof(double_next2);\n@@ -534,1 +586,1 @@\n-  ASSERT(f1 <= f2 && f2 <= f3 && f3 <= f4);\n+  DOUBLE_CONVERSION_ASSERT(f1 <= f2 && f2 <= f3 && f3 <= f4);\n@@ -542,1 +594,1 @@\n-  ASSERT((f1 != f2 && f2 == f3 && f3 == f4) ||\n+  DOUBLE_CONVERSION_ASSERT((f1 != f2 && f2 == f3 && f3 == f4) ||\n@@ -546,1 +598,1 @@\n-  \/\/ guess and next are the two possible canditates (in the same way that\n+  \/\/ guess and next are the two possible candidates (in the same way that\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-strtod.cpp","additions":101,"deletions":49,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -57,0 +57,5 @@\n+\/\/ For special use cases, the heart of the Strtod() function is also available\n+\/\/ separately, it assumes that 'trimmed' is as produced by TrimAndCut(), i.e.\n+\/\/ no leading or trailing zeros, also no lone zero, and not 'too many' digits.\n+double StrtodTrimmed(Vector<const char> trimmed, int exponent);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-strtod.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -45,4 +45,6 @@\n-#define ASSERT U_ASSERT\n-\n-#ifndef UNIMPLEMENTED\n-#define UNIMPLEMENTED() (abort())\n+#ifndef DOUBLE_CONVERSION_ASSERT\n+#define DOUBLE_CONVERSION_ASSERT(condition)         \\\n+    U_ASSERT(condition);\n+#endif\n+#ifndef DOUBLE_CONVERSION_UNIMPLEMENTED\n+#define DOUBLE_CONVERSION_UNIMPLEMENTED() (abort())\n@@ -57,1 +59,1 @@\n-#ifndef UNREACHABLE\n+#ifndef DOUBLE_CONVERSION_UNREACHABLE\n@@ -61,1 +63,1 @@\n-#define UNREACHABLE()   (abort_noreturn())\n+#define DOUBLE_CONVERSION_UNREACHABLE()   (abort_noreturn())\n@@ -63,1 +65,2 @@\n-#define UNREACHABLE()   (abort())\n+#define DOUBLE_CONVERSION_UNREACHABLE()   (abort())\n+#endif\n@@ -65,0 +68,7 @@\n+\n+\/\/ Not all compilers support __has_attribute and combining a check for both\n+\/\/ ifdef and __has_attribute on the same preprocessor line isn't portable.\n+#ifdef __has_attribute\n+#   define DOUBLE_CONVERSION_HAS_ATTRIBUTE(x) __has_attribute(x)\n+#else\n+#   define DOUBLE_CONVERSION_HAS_ATTRIBUTE(x) 0\n@@ -67,0 +77,13 @@\n+#ifndef DOUBLE_CONVERSION_UNUSED\n+#if DOUBLE_CONVERSION_HAS_ATTRIBUTE(unused)\n+#define DOUBLE_CONVERSION_UNUSED __attribute__((unused))\n+#else\n+#define DOUBLE_CONVERSION_UNUSED\n+#endif\n+#endif\n+\n+#if DOUBLE_CONVERSION_HAS_ATTRIBUTE(uninitialized)\n+#define DOUBLE_CONVERSION_STACK_UNINITIALIZED __attribute__((uninitialized))\n+#else\n+#define DOUBLE_CONVERSION_STACK_UNINITIALIZED\n+#endif\n@@ -98,0 +121,1 @@\n+    defined(__nios2__) || \\\n@@ -102,1 +126,1 @@\n-    defined(_MIPS_ARCH_MIPS32R2) || \\\n+    defined(_MIPS_ARCH_MIPS32R2) || defined(__ARMEB__) ||\\\n@@ -104,1 +128,1 @@\n-    defined(__riscv) || \\\n+    defined(__riscv) || defined(__e2k__) || \\\n@@ -106,1 +130,2 @@\n-    defined(__EMSCRIPTEN__)\n+    defined(__microblaze__) || defined(__XTENSA__) || \\\n+    defined(__EMSCRIPTEN__) || defined(__wasm32__)\n@@ -144,2 +169,2 @@\n-\/\/      write UINT64_2PART_C(0x12345678,90123456);\n-#define UINT64_2PART_C(a, b) (((static_cast<uint64_t>(a) << 32) + 0x##b##u))\n+\/\/      write DOUBLE_CONVERSION_UINT64_2PART_C(0x12345678,90123456);\n+#define DOUBLE_CONVERSION_UINT64_2PART_C(a, b) (((static_cast<uint64_t>(a) << 32) + 0x##b##u))\n@@ -148,1 +173,1 @@\n-\/\/ The expression ARRAY_SIZE(a) is a compile-time constant of type\n+\/\/ The expression DOUBLE_CONVERSION_ARRAY_SIZE(a) is a compile-time constant of type\n@@ -150,1 +175,1 @@\n-\/\/ array. You should only use ARRAY_SIZE on statically allocated\n+\/\/ array. You should only use DOUBLE_CONVERSION_ARRAY_SIZE on statically allocated\n@@ -152,2 +177,2 @@\n-#ifndef ARRAY_SIZE\n-#define ARRAY_SIZE(a)                                   \\\n+#ifndef DOUBLE_CONVERSION_ARRAY_SIZE\n+#define DOUBLE_CONVERSION_ARRAY_SIZE(a)                                   \\\n@@ -160,2 +185,2 @@\n-#ifndef DC_DISALLOW_COPY_AND_ASSIGN\n-#define DC_DISALLOW_COPY_AND_ASSIGN(TypeName)      \\\n+#ifndef DOUBLE_CONVERSION_DISALLOW_COPY_AND_ASSIGN\n+#define DOUBLE_CONVERSION_DISALLOW_COPY_AND_ASSIGN(TypeName)      \\\n@@ -172,2 +197,2 @@\n-#ifndef DC_DISALLOW_IMPLICIT_CONSTRUCTORS\n-#define DC_DISALLOW_IMPLICIT_CONSTRUCTORS(TypeName) \\\n+#ifndef DOUBLE_CONVERSION_DISALLOW_IMPLICIT_CONSTRUCTORS\n+#define DOUBLE_CONVERSION_DISALLOW_IMPLICIT_CONSTRUCTORS(TypeName) \\\n@@ -175,1 +200,1 @@\n-  DC_DISALLOW_COPY_AND_ASSIGN(TypeName)\n+  DOUBLE_CONVERSION_DISALLOW_COPY_AND_ASSIGN(TypeName)\n@@ -183,16 +208,0 @@\n-static const int kCharSize = sizeof(char);\n-\n-\/\/ Returns the maximum of the two parameters.\n-template <typename T>\n-static T Max(T a, T b) {\n-  return a < b ? b : a;\n-}\n-\n-\n-\/\/ Returns the minimum of the two parameters.\n-template <typename T>\n-static T Min(T a, T b) {\n-  return a < b ? a : b;\n-}\n-\n-\n@@ -201,1 +210,1 @@\n-  ASSERT(length == static_cast<size_t>(static_cast<int>(length)));\n+  DOUBLE_CONVERSION_ASSERT(length == static_cast<size_t>(static_cast<int>(length)));\n@@ -211,1 +220,1 @@\n-    ASSERT(len == 0 || (len > 0 && data != NULL));\n+    DOUBLE_CONVERSION_ASSERT(len == 0 || (len > 0 && data != NULL));\n@@ -217,3 +226,3 @@\n-    ASSERT(to <= length_);\n-    ASSERT(from < to);\n-    ASSERT(0 <= from);\n+    DOUBLE_CONVERSION_ASSERT(to <= length_);\n+    DOUBLE_CONVERSION_ASSERT(from < to);\n+    DOUBLE_CONVERSION_ASSERT(0 <= from);\n@@ -234,1 +243,1 @@\n-    ASSERT(0 <= index && index < length_);\n+    DOUBLE_CONVERSION_ASSERT(0 <= index && index < length_);\n@@ -242,0 +251,5 @@\n+  void pop_back() {\n+    DOUBLE_CONVERSION_ASSERT(!is_empty());\n+    --length_;\n+  }\n+\n@@ -262,1 +276,1 @@\n-    ASSERT(!is_finalized());\n+    DOUBLE_CONVERSION_ASSERT(!is_finalized());\n@@ -273,2 +287,2 @@\n-    ASSERT(c != '\\0');\n-    ASSERT(!is_finalized() && position_ < buffer_.length());\n+    DOUBLE_CONVERSION_ASSERT(c != '\\0');\n+    DOUBLE_CONVERSION_ASSERT(!is_finalized() && position_ < buffer_.length());\n@@ -287,3 +301,3 @@\n-    ASSERT(!is_finalized() && position_ + n < buffer_.length());\n-    ASSERT(static_cast<size_t>(n) <= strlen(s));\n-    memmove(&buffer_[position_], s, n * kCharSize);\n+    DOUBLE_CONVERSION_ASSERT(!is_finalized() && position_ + n < buffer_.length());\n+    DOUBLE_CONVERSION_ASSERT(static_cast<size_t>(n) <= strlen(s));\n+    memmove(&buffer_[position_], s, n);\n@@ -304,1 +318,1 @@\n-    ASSERT(!is_finalized() && position_ < buffer_.length());\n+    DOUBLE_CONVERSION_ASSERT(!is_finalized() && position_ < buffer_.length());\n@@ -308,1 +322,1 @@\n-    ASSERT(strlen(buffer_.start()) == static_cast<size_t>(position_));\n+    DOUBLE_CONVERSION_ASSERT(strlen(buffer_.start()) == static_cast<size_t>(position_));\n@@ -310,1 +324,1 @@\n-    ASSERT(is_finalized());\n+    DOUBLE_CONVERSION_ASSERT(is_finalized());\n@@ -320,1 +334,1 @@\n-  DC_DISALLOW_IMPLICIT_CONSTRUCTORS(StringBuilder);\n+  DOUBLE_CONVERSION_DISALLOW_IMPLICIT_CONSTRUCTORS(StringBuilder);\n@@ -348,1 +362,1 @@\n-inline Dest BitCast(const Source& source) {\n+Dest BitCast(const Source& source) {\n@@ -355,0 +369,1 @@\n+  DOUBLE_CONVERSION_UNUSED\n@@ -364,1 +379,1 @@\n-inline Dest BitCast(Source* source) {\n+Dest BitCast(Source* source) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion-utils.h","additions":70,"deletions":55,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -1,1168 +0,0 @@\n-\/\/ © 2018 and later: Unicode, Inc. and others.\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n-\/\/\n-\/\/ From the double-conversion library. Original license:\n-\/\/\n-\/\/ Copyright 2010 the V8 project authors. All rights reserved.\n-\/\/ Redistribution and use in source and binary forms, with or without\n-\/\/ modification, are permitted provided that the following conditions are\n-\/\/ met:\n-\/\/\n-\/\/     * Redistributions of source code must retain the above copyright\n-\/\/       notice, this list of conditions and the following disclaimer.\n-\/\/     * Redistributions in binary form must reproduce the above\n-\/\/       copyright notice, this list of conditions and the following\n-\/\/       disclaimer in the documentation and\/or other materials provided\n-\/\/       with the distribution.\n-\/\/     * Neither the name of Google Inc. nor the names of its\n-\/\/       contributors may be used to endorse or promote products derived\n-\/\/       from this software without specific prior written permission.\n-\/\/\n-\/\/ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\/\/ \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-\/\/ LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-\/\/ A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-\/\/ OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-\/\/ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-\/\/ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-\/\/ DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-\/\/ THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-\/\/ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-\/\/ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-\/\/ ICU PATCH: ifdef around UCONFIG_NO_FORMATTING\n-#include \"unicode\/utypes.h\"\n-#if !UCONFIG_NO_FORMATTING\n-\n-\/\/ ICU PATCH: Do not include std::locale.\n-\n-#include <climits>\n-\/\/#include <locale>\n-#include <cmath>\n-\n-\/\/ ICU PATCH: Customize header file paths for ICU.\n-\/\/ The file fixed-dtoa.h is not needed.\n-\n-#include \"double-conversion.h\"\n-\n-#include \"double-conversion-bignum-dtoa.h\"\n-#include \"double-conversion-fast-dtoa.h\"\n-#include \"double-conversion-ieee.h\"\n-#include \"double-conversion-strtod.h\"\n-#include \"double-conversion-utils.h\"\n-\n-\/\/ ICU PATCH: Wrap in ICU namespace\n-U_NAMESPACE_BEGIN\n-\n-namespace double_conversion {\n-\n-#if 0  \/\/ not needed for ICU\n-const DoubleToStringConverter& DoubleToStringConverter::EcmaScriptConverter() {\n-  int flags = UNIQUE_ZERO | EMIT_POSITIVE_EXPONENT_SIGN;\n-  static DoubleToStringConverter converter(flags,\n-                                           \"Infinity\",\n-                                           \"NaN\",\n-                                           'e',\n-                                           -6, 21,\n-                                           6, 0);\n-  return converter;\n-}\n-\n-\n-bool DoubleToStringConverter::HandleSpecialValues(\n-    double value,\n-    StringBuilder* result_builder) const {\n-  Double double_inspect(value);\n-  if (double_inspect.IsInfinite()) {\n-    if (infinity_symbol_ == NULL) return false;\n-    if (value < 0) {\n-      result_builder->AddCharacter('-');\n-    }\n-    result_builder->AddString(infinity_symbol_);\n-    return true;\n-  }\n-  if (double_inspect.IsNan()) {\n-    if (nan_symbol_ == NULL) return false;\n-    result_builder->AddString(nan_symbol_);\n-    return true;\n-  }\n-  return false;\n-}\n-\n-\n-void DoubleToStringConverter::CreateExponentialRepresentation(\n-    const char* decimal_digits,\n-    int length,\n-    int exponent,\n-    StringBuilder* result_builder) const {\n-  ASSERT(length != 0);\n-  result_builder->AddCharacter(decimal_digits[0]);\n-  if (length != 1) {\n-    result_builder->AddCharacter('.');\n-    result_builder->AddSubstring(&decimal_digits[1], length-1);\n-  }\n-  result_builder->AddCharacter(exponent_character_);\n-  if (exponent < 0) {\n-    result_builder->AddCharacter('-');\n-    exponent = -exponent;\n-  } else {\n-    if ((flags_ & EMIT_POSITIVE_EXPONENT_SIGN) != 0) {\n-      result_builder->AddCharacter('+');\n-    }\n-  }\n-  if (exponent == 0) {\n-    result_builder->AddCharacter('0');\n-    return;\n-  }\n-  ASSERT(exponent < 1e4);\n-  const int kMaxExponentLength = 5;\n-  char buffer[kMaxExponentLength + 1];\n-  buffer[kMaxExponentLength] = '\\0';\n-  int first_char_pos = kMaxExponentLength;\n-  while (exponent > 0) {\n-    buffer[--first_char_pos] = '0' + (exponent % 10);\n-    exponent \/= 10;\n-  }\n-  result_builder->AddSubstring(&buffer[first_char_pos],\n-                               kMaxExponentLength - first_char_pos);\n-}\n-\n-\n-void DoubleToStringConverter::CreateDecimalRepresentation(\n-    const char* decimal_digits,\n-    int length,\n-    int decimal_point,\n-    int digits_after_point,\n-    StringBuilder* result_builder) const {\n-  \/\/ Create a representation that is padded with zeros if needed.\n-  if (decimal_point <= 0) {\n-      \/\/ \"0.00000decimal_rep\" or \"0.000decimal_rep00\".\n-    result_builder->AddCharacter('0');\n-    if (digits_after_point > 0) {\n-      result_builder->AddCharacter('.');\n-      result_builder->AddPadding('0', -decimal_point);\n-      ASSERT(length <= digits_after_point - (-decimal_point));\n-      result_builder->AddSubstring(decimal_digits, length);\n-      int remaining_digits = digits_after_point - (-decimal_point) - length;\n-      result_builder->AddPadding('0', remaining_digits);\n-    }\n-  } else if (decimal_point >= length) {\n-    \/\/ \"decimal_rep0000.00000\" or \"decimal_rep.0000\".\n-    result_builder->AddSubstring(decimal_digits, length);\n-    result_builder->AddPadding('0', decimal_point - length);\n-    if (digits_after_point > 0) {\n-      result_builder->AddCharacter('.');\n-      result_builder->AddPadding('0', digits_after_point);\n-    }\n-  } else {\n-    \/\/ \"decima.l_rep000\".\n-    ASSERT(digits_after_point > 0);\n-    result_builder->AddSubstring(decimal_digits, decimal_point);\n-    result_builder->AddCharacter('.');\n-    ASSERT(length - decimal_point <= digits_after_point);\n-    result_builder->AddSubstring(&decimal_digits[decimal_point],\n-                                 length - decimal_point);\n-    int remaining_digits = digits_after_point - (length - decimal_point);\n-    result_builder->AddPadding('0', remaining_digits);\n-  }\n-  if (digits_after_point == 0) {\n-    if ((flags_ & EMIT_TRAILING_DECIMAL_POINT) != 0) {\n-      result_builder->AddCharacter('.');\n-    }\n-    if ((flags_ & EMIT_TRAILING_ZERO_AFTER_POINT) != 0) {\n-      result_builder->AddCharacter('0');\n-    }\n-  }\n-}\n-\n-\n-bool DoubleToStringConverter::ToShortestIeeeNumber(\n-    double value,\n-    StringBuilder* result_builder,\n-    DoubleToStringConverter::DtoaMode mode) const {\n-  ASSERT(mode == SHORTEST || mode == SHORTEST_SINGLE);\n-  if (Double(value).IsSpecial()) {\n-    return HandleSpecialValues(value, result_builder);\n-  }\n-\n-  int decimal_point;\n-  bool sign;\n-  const int kDecimalRepCapacity = kBase10MaximalLength + 1;\n-  char decimal_rep[kDecimalRepCapacity];\n-  int decimal_rep_length;\n-\n-  DoubleToAscii(value, mode, 0, decimal_rep, kDecimalRepCapacity,\n-                &sign, &decimal_rep_length, &decimal_point);\n-\n-  bool unique_zero = (flags_ & UNIQUE_ZERO) != 0;\n-  if (sign && (value != 0.0 || !unique_zero)) {\n-    result_builder->AddCharacter('-');\n-  }\n-\n-  int exponent = decimal_point - 1;\n-  if ((decimal_in_shortest_low_ <= exponent) &&\n-      (exponent < decimal_in_shortest_high_)) {\n-    CreateDecimalRepresentation(decimal_rep, decimal_rep_length,\n-                                decimal_point,\n-                                Max(0, decimal_rep_length - decimal_point),\n-                                result_builder);\n-  } else {\n-    CreateExponentialRepresentation(decimal_rep, decimal_rep_length, exponent,\n-                                    result_builder);\n-  }\n-  return true;\n-}\n-\n-\n-bool DoubleToStringConverter::ToFixed(double value,\n-                                      int requested_digits,\n-                                      StringBuilder* result_builder) const {\n-  ASSERT(kMaxFixedDigitsBeforePoint == 60);\n-  const double kFirstNonFixed = 1e60;\n-\n-  if (Double(value).IsSpecial()) {\n-    return HandleSpecialValues(value, result_builder);\n-  }\n-\n-  if (requested_digits > kMaxFixedDigitsAfterPoint) return false;\n-  if (value >= kFirstNonFixed || value <= -kFirstNonFixed) return false;\n-\n-  \/\/ Find a sufficiently precise decimal representation of n.\n-  int decimal_point;\n-  bool sign;\n-  \/\/ Add space for the '\\0' byte.\n-  const int kDecimalRepCapacity =\n-      kMaxFixedDigitsBeforePoint + kMaxFixedDigitsAfterPoint + 1;\n-  char decimal_rep[kDecimalRepCapacity];\n-  int decimal_rep_length;\n-  DoubleToAscii(value, FIXED, requested_digits,\n-                decimal_rep, kDecimalRepCapacity,\n-                &sign, &decimal_rep_length, &decimal_point);\n-\n-  bool unique_zero = ((flags_ & UNIQUE_ZERO) != 0);\n-  if (sign && (value != 0.0 || !unique_zero)) {\n-    result_builder->AddCharacter('-');\n-  }\n-\n-  CreateDecimalRepresentation(decimal_rep, decimal_rep_length, decimal_point,\n-                              requested_digits, result_builder);\n-  return true;\n-}\n-\n-\n-bool DoubleToStringConverter::ToExponential(\n-    double value,\n-    int requested_digits,\n-    StringBuilder* result_builder) const {\n-  if (Double(value).IsSpecial()) {\n-    return HandleSpecialValues(value, result_builder);\n-  }\n-\n-  if (requested_digits < -1) return false;\n-  if (requested_digits > kMaxExponentialDigits) return false;\n-\n-  int decimal_point;\n-  bool sign;\n-  \/\/ Add space for digit before the decimal point and the '\\0' character.\n-  const int kDecimalRepCapacity = kMaxExponentialDigits + 2;\n-  ASSERT(kDecimalRepCapacity > kBase10MaximalLength);\n-  char decimal_rep[kDecimalRepCapacity];\n-  int decimal_rep_length;\n-\n-  if (requested_digits == -1) {\n-    DoubleToAscii(value, SHORTEST, 0,\n-                  decimal_rep, kDecimalRepCapacity,\n-                  &sign, &decimal_rep_length, &decimal_point);\n-  } else {\n-    DoubleToAscii(value, PRECISION, requested_digits + 1,\n-                  decimal_rep, kDecimalRepCapacity,\n-                  &sign, &decimal_rep_length, &decimal_point);\n-    ASSERT(decimal_rep_length <= requested_digits + 1);\n-\n-    for (int i = decimal_rep_length; i < requested_digits + 1; ++i) {\n-      decimal_rep[i] = '0';\n-    }\n-    decimal_rep_length = requested_digits + 1;\n-  }\n-\n-  bool unique_zero = ((flags_ & UNIQUE_ZERO) != 0);\n-  if (sign && (value != 0.0 || !unique_zero)) {\n-    result_builder->AddCharacter('-');\n-  }\n-\n-  int exponent = decimal_point - 1;\n-  CreateExponentialRepresentation(decimal_rep,\n-                                  decimal_rep_length,\n-                                  exponent,\n-                                  result_builder);\n-  return true;\n-}\n-\n-\n-bool DoubleToStringConverter::ToPrecision(double value,\n-                                          int precision,\n-                                          StringBuilder* result_builder) const {\n-  if (Double(value).IsSpecial()) {\n-    return HandleSpecialValues(value, result_builder);\n-  }\n-\n-  if (precision < kMinPrecisionDigits || precision > kMaxPrecisionDigits) {\n-    return false;\n-  }\n-\n-  \/\/ Find a sufficiently precise decimal representation of n.\n-  int decimal_point;\n-  bool sign;\n-  \/\/ Add one for the terminating null character.\n-  const int kDecimalRepCapacity = kMaxPrecisionDigits + 1;\n-  char decimal_rep[kDecimalRepCapacity];\n-  int decimal_rep_length;\n-\n-  DoubleToAscii(value, PRECISION, precision,\n-                decimal_rep, kDecimalRepCapacity,\n-                &sign, &decimal_rep_length, &decimal_point);\n-  ASSERT(decimal_rep_length <= precision);\n-\n-  bool unique_zero = ((flags_ & UNIQUE_ZERO) != 0);\n-  if (sign && (value != 0.0 || !unique_zero)) {\n-    result_builder->AddCharacter('-');\n-  }\n-\n-  \/\/ The exponent if we print the number as x.xxeyyy. That is with the\n-  \/\/ decimal point after the first digit.\n-  int exponent = decimal_point - 1;\n-\n-  int extra_zero = ((flags_ & EMIT_TRAILING_ZERO_AFTER_POINT) != 0) ? 1 : 0;\n-  if ((-decimal_point + 1 > max_leading_padding_zeroes_in_precision_mode_) ||\n-      (decimal_point - precision + extra_zero >\n-       max_trailing_padding_zeroes_in_precision_mode_)) {\n-    \/\/ Fill buffer to contain 'precision' digits.\n-    \/\/ Usually the buffer is already at the correct length, but 'DoubleToAscii'\n-    \/\/ is allowed to return less characters.\n-    for (int i = decimal_rep_length; i < precision; ++i) {\n-      decimal_rep[i] = '0';\n-    }\n-\n-    CreateExponentialRepresentation(decimal_rep,\n-                                    precision,\n-                                    exponent,\n-                                    result_builder);\n-  } else {\n-    CreateDecimalRepresentation(decimal_rep, decimal_rep_length, decimal_point,\n-                                Max(0, precision - decimal_point),\n-                                result_builder);\n-  }\n-  return true;\n-}\n-#endif \/\/ not needed for ICU\n-\n-\n-static BignumDtoaMode DtoaToBignumDtoaMode(\n-    DoubleToStringConverter::DtoaMode dtoa_mode) {\n-  switch (dtoa_mode) {\n-    case DoubleToStringConverter::SHORTEST:  return BIGNUM_DTOA_SHORTEST;\n-    case DoubleToStringConverter::SHORTEST_SINGLE:\n-        return BIGNUM_DTOA_SHORTEST_SINGLE;\n-    case DoubleToStringConverter::FIXED:     return BIGNUM_DTOA_FIXED;\n-    case DoubleToStringConverter::PRECISION: return BIGNUM_DTOA_PRECISION;\n-    default:\n-      UNREACHABLE();\n-  }\n-}\n-\n-\n-void DoubleToStringConverter::DoubleToAscii(double v,\n-                                            DtoaMode mode,\n-                                            int requested_digits,\n-                                            char* buffer,\n-                                            int buffer_length,\n-                                            bool* sign,\n-                                            int* length,\n-                                            int* point) {\n-  Vector<char> vector(buffer, buffer_length);\n-  ASSERT(!Double(v).IsSpecial());\n-  ASSERT(mode == SHORTEST || mode == SHORTEST_SINGLE || requested_digits >= 0);\n-\n-  if (Double(v).Sign() < 0) {\n-    *sign = true;\n-    v = -v;\n-  } else {\n-    *sign = false;\n-  }\n-\n-  if (mode == PRECISION && requested_digits == 0) {\n-    vector[0] = '\\0';\n-    *length = 0;\n-    return;\n-  }\n-\n-  if (v == 0) {\n-    vector[0] = '0';\n-    vector[1] = '\\0';\n-    *length = 1;\n-    *point = 1;\n-    return;\n-  }\n-\n-  bool fast_worked;\n-  switch (mode) {\n-    case SHORTEST:\n-      fast_worked = FastDtoa(v, FAST_DTOA_SHORTEST, 0, vector, length, point);\n-      break;\n-#if 0 \/\/ not needed for ICU\n-    case SHORTEST_SINGLE:\n-      fast_worked = FastDtoa(v, FAST_DTOA_SHORTEST_SINGLE, 0,\n-                             vector, length, point);\n-      break;\n-    case FIXED:\n-      fast_worked = FastFixedDtoa(v, requested_digits, vector, length, point);\n-      break;\n-    case PRECISION:\n-      fast_worked = FastDtoa(v, FAST_DTOA_PRECISION, requested_digits,\n-                             vector, length, point);\n-      break;\n-#endif \/\/ not needed for ICU\n-    default:\n-      fast_worked = false;\n-      UNREACHABLE();\n-  }\n-  if (fast_worked) return;\n-\n-  \/\/ If the fast dtoa didn't succeed use the slower bignum version.\n-  BignumDtoaMode bignum_mode = DtoaToBignumDtoaMode(mode);\n-  BignumDtoa(v, bignum_mode, requested_digits, vector, length, point);\n-  vector[*length] = '\\0';\n-}\n-\n-\n-namespace {\n-\n-inline char ToLower(char ch) {\n-#if 0  \/\/ do not include std::locale in ICU\n-  static const std::ctype<char>& cType =\n-      std::use_facet<std::ctype<char> >(std::locale::classic());\n-  return cType.tolower(ch);\n-#else\n-  (void)ch;\n-  UNREACHABLE();\n-#endif\n-}\n-\n-inline char Pass(char ch) {\n-  return ch;\n-}\n-\n-template <class Iterator, class Converter>\n-static inline bool ConsumeSubStringImpl(Iterator* current,\n-                                        Iterator end,\n-                                        const char* substring,\n-                                        Converter converter) {\n-  ASSERT(converter(**current) == *substring);\n-  for (substring++; *substring != '\\0'; substring++) {\n-    ++*current;\n-    if (*current == end || converter(**current) != *substring) {\n-      return false;\n-    }\n-  }\n-  ++*current;\n-  return true;\n-}\n-\n-\/\/ Consumes the given substring from the iterator.\n-\/\/ Returns false, if the substring does not match.\n-template <class Iterator>\n-static bool ConsumeSubString(Iterator* current,\n-                             Iterator end,\n-                             const char* substring,\n-                             bool allow_case_insensibility) {\n-  if (allow_case_insensibility) {\n-    return ConsumeSubStringImpl(current, end, substring, ToLower);\n-  } else {\n-    return ConsumeSubStringImpl(current, end, substring, Pass);\n-  }\n-}\n-\n-\/\/ Consumes first character of the str is equal to ch\n-inline bool ConsumeFirstCharacter(char ch,\n-                                         const char* str,\n-                                         bool case_insensibility) {\n-  return case_insensibility ? ToLower(ch) == str[0] : ch == str[0];\n-}\n-}  \/\/ namespace\n-\n-\/\/ Maximum number of significant digits in decimal representation.\n-\/\/ The longest possible double in decimal representation is\n-\/\/ (2^53 - 1) * 2 ^ -1074 that is (2 ^ 53 - 1) * 5 ^ 1074 \/ 10 ^ 1074\n-\/\/ (768 digits). If we parse a number whose first digits are equal to a\n-\/\/ mean of 2 adjacent doubles (that could have up to 769 digits) the result\n-\/\/ must be rounded to the bigger one unless the tail consists of zeros, so\n-\/\/ we don't need to preserve all the digits.\n-const int kMaxSignificantDigits = 772;\n-\n-\n-static const char kWhitespaceTable7[] = { 32, 13, 10, 9, 11, 12 };\n-static const int kWhitespaceTable7Length = ARRAY_SIZE(kWhitespaceTable7);\n-\n-\n-static const uc16 kWhitespaceTable16[] = {\n-  160, 8232, 8233, 5760, 6158, 8192, 8193, 8194, 8195,\n-  8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279\n-};\n-static const int kWhitespaceTable16Length = ARRAY_SIZE(kWhitespaceTable16);\n-\n-\n-\n-static bool isWhitespace(int x) {\n-  if (x < 128) {\n-    for (int i = 0; i < kWhitespaceTable7Length; i++) {\n-      if (kWhitespaceTable7[i] == x) return true;\n-    }\n-  } else {\n-    for (int i = 0; i < kWhitespaceTable16Length; i++) {\n-      if (kWhitespaceTable16[i] == x) return true;\n-    }\n-  }\n-  return false;\n-}\n-\n-\n-\/\/ Returns true if a nonspace found and false if the end has reached.\n-template <class Iterator>\n-static inline bool AdvanceToNonspace(Iterator* current, Iterator end) {\n-  while (*current != end) {\n-    if (!isWhitespace(**current)) return true;\n-    ++*current;\n-  }\n-  return false;\n-}\n-\n-\n-static bool isDigit(int x, int radix) {\n-  return (x >= '0' && x <= '9' && x < '0' + radix)\n-      || (radix > 10 && x >= 'a' && x < 'a' + radix - 10)\n-      || (radix > 10 && x >= 'A' && x < 'A' + radix - 10);\n-}\n-\n-\n-static double SignedZero(bool sign) {\n-  return sign ? -0.0 : 0.0;\n-}\n-\n-\n-\/\/ Returns true if 'c' is a decimal digit that is valid for the given radix.\n-\/\/\n-\/\/ The function is small and could be inlined, but VS2012 emitted a warning\n-\/\/ because it constant-propagated the radix and concluded that the last\n-\/\/ condition was always true. By moving it into a separate function the\n-\/\/ compiler wouldn't warn anymore.\n-#ifdef _MSC_VER\n-#pragma optimize(\"\",off)\n-static bool IsDecimalDigitForRadix(int c, int radix) {\n-  return '0' <= c && c <= '9' && (c - '0') < radix;\n-}\n-#pragma optimize(\"\",on)\n-#else\n-static bool inline IsDecimalDigitForRadix(int c, int radix) {\n-  return '0' <= c && c <= '9' && (c - '0') < radix;\n-}\n-#endif\n-\/\/ Returns true if 'c' is a character digit that is valid for the given radix.\n-\/\/ The 'a_character' should be 'a' or 'A'.\n-\/\/\n-\/\/ The function is small and could be inlined, but VS2012 emitted a warning\n-\/\/ because it constant-propagated the radix and concluded that the first\n-\/\/ condition was always false. By moving it into a separate function the\n-\/\/ compiler wouldn't warn anymore.\n-static bool IsCharacterDigitForRadix(int c, int radix, char a_character) {\n-  return radix > 10 && c >= a_character && c < a_character + radix - 10;\n-}\n-\n-\/\/ Returns true, when the iterator is equal to end.\n-template<class Iterator>\n-static bool Advance (Iterator* it, uc16 separator, int base, Iterator& end) {\n-  if (separator == StringToDoubleConverter::kNoSeparator) {\n-    ++(*it);\n-    return *it == end;\n-  }\n-  if (!isDigit(**it, base)) {\n-    ++(*it);\n-    return *it == end;\n-  }\n-  ++(*it);\n-  if (*it == end) return true;\n-  if (*it + 1 == end) return false;\n-  if (**it == separator && isDigit(*(*it + 1), base)) {\n-    ++(*it);\n-  }\n-  return *it == end;\n-}\n-\n-\/\/ Checks whether the string in the range start-end is a hex-float string.\n-\/\/ This function assumes that the leading '0x'\/'0X' is already consumed.\n-\/\/\n-\/\/ Hex float strings are of one of the following forms:\n-\/\/   - hex_digits+ 'p' ('+'|'-')? exponent_digits+\n-\/\/   - hex_digits* '.' hex_digits+ 'p' ('+'|'-')? exponent_digits+\n-\/\/   - hex_digits+ '.' 'p' ('+'|'-')? exponent_digits+\n-template<class Iterator>\n-static bool IsHexFloatString(Iterator start,\n-                             Iterator end,\n-                             uc16 separator,\n-                             bool allow_trailing_junk) {\n-  ASSERT(start != end);\n-\n-  Iterator current = start;\n-\n-  bool saw_digit = false;\n-  while (isDigit(*current, 16)) {\n-    saw_digit = true;\n-    if (Advance(&current, separator, 16, end)) return false;\n-  }\n-  if (*current == '.') {\n-    if (Advance(&current, separator, 16, end)) return false;\n-    while (isDigit(*current, 16)) {\n-      saw_digit = true;\n-      if (Advance(&current, separator, 16, end)) return false;\n-    }\n-    if (!saw_digit) return false;  \/\/ Only the '.', but no digits.\n-  }\n-  if (*current != 'p' && *current != 'P') return false;\n-  if (Advance(&current, separator, 16, end)) return false;\n-  if (*current == '+' || *current == '-') {\n-    if (Advance(&current, separator, 16, end)) return false;\n-  }\n-  if (!isDigit(*current, 10)) return false;\n-  if (Advance(&current, separator, 16, end)) return true;\n-  while (isDigit(*current, 10)) {\n-    if (Advance(&current, separator, 16, end)) return true;\n-  }\n-  return allow_trailing_junk || !AdvanceToNonspace(&current, end);\n-}\n-\n-\n-\/\/ Parsing integers with radix 2, 4, 8, 16, 32. Assumes current != end.\n-\/\/\n-\/\/ If parse_as_hex_float is true, then the string must be a valid\n-\/\/ hex-float.\n-template <int radix_log_2, class Iterator>\n-static double RadixStringToIeee(Iterator* current,\n-                                Iterator end,\n-                                bool sign,\n-                                uc16 separator,\n-                                bool parse_as_hex_float,\n-                                bool allow_trailing_junk,\n-                                double junk_string_value,\n-                                bool read_as_double,\n-                                bool* result_is_junk) {\n-  ASSERT(*current != end);\n-  ASSERT(!parse_as_hex_float ||\n-      IsHexFloatString(*current, end, separator, allow_trailing_junk));\n-\n-  const int kDoubleSize = Double::kSignificandSize;\n-  const int kSingleSize = Single::kSignificandSize;\n-  const int kSignificandSize = read_as_double? kDoubleSize: kSingleSize;\n-\n-  *result_is_junk = true;\n-\n-  int64_t number = 0;\n-  int exponent = 0;\n-  const int radix = (1 << radix_log_2);\n-  \/\/ Whether we have encountered a '.' and are parsing the decimal digits.\n-  \/\/ Only relevant if parse_as_hex_float is true.\n-  bool post_decimal = false;\n-\n-  \/\/ Skip leading 0s.\n-  while (**current == '0') {\n-    if (Advance(current, separator, radix, end)) {\n-      *result_is_junk = false;\n-      return SignedZero(sign);\n-    }\n-  }\n-\n-  while (true) {\n-    int digit;\n-    if (IsDecimalDigitForRadix(**current, radix)) {\n-      digit = static_cast<char>(**current) - '0';\n-      if (post_decimal) exponent -= radix_log_2;\n-    } else if (IsCharacterDigitForRadix(**current, radix, 'a')) {\n-      digit = static_cast<char>(**current) - 'a' + 10;\n-      if (post_decimal) exponent -= radix_log_2;\n-    } else if (IsCharacterDigitForRadix(**current, radix, 'A')) {\n-      digit = static_cast<char>(**current) - 'A' + 10;\n-      if (post_decimal) exponent -= radix_log_2;\n-    } else if (parse_as_hex_float && **current == '.') {\n-      post_decimal = true;\n-      Advance(current, separator, radix, end);\n-      ASSERT(*current != end);\n-      continue;\n-    } else if (parse_as_hex_float && (**current == 'p' || **current == 'P')) {\n-      break;\n-    } else {\n-      if (allow_trailing_junk || !AdvanceToNonspace(current, end)) {\n-        break;\n-      } else {\n-        return junk_string_value;\n-      }\n-    }\n-\n-    number = number * radix + digit;\n-    int overflow = static_cast<int>(number >> kSignificandSize);\n-    if (overflow != 0) {\n-      \/\/ Overflow occurred. Need to determine which direction to round the\n-      \/\/ result.\n-      int overflow_bits_count = 1;\n-      while (overflow > 1) {\n-        overflow_bits_count++;\n-        overflow >>= 1;\n-      }\n-\n-      int dropped_bits_mask = ((1 << overflow_bits_count) - 1);\n-      int dropped_bits = static_cast<int>(number) & dropped_bits_mask;\n-      number >>= overflow_bits_count;\n-      exponent += overflow_bits_count;\n-\n-      bool zero_tail = true;\n-      for (;;) {\n-        if (Advance(current, separator, radix, end)) break;\n-        if (parse_as_hex_float && **current == '.') {\n-          \/\/ Just run over the '.'. We are just trying to see whether there is\n-          \/\/ a non-zero digit somewhere.\n-          Advance(current, separator, radix, end);\n-          ASSERT(*current != end);\n-          post_decimal = true;\n-        }\n-        if (!isDigit(**current, radix)) break;\n-        zero_tail = zero_tail && **current == '0';\n-        if (!post_decimal) exponent += radix_log_2;\n-      }\n-\n-      if (!parse_as_hex_float &&\n-          !allow_trailing_junk &&\n-          AdvanceToNonspace(current, end)) {\n-        return junk_string_value;\n-      }\n-\n-      int middle_value = (1 << (overflow_bits_count - 1));\n-      if (dropped_bits > middle_value) {\n-        number++;  \/\/ Rounding up.\n-      } else if (dropped_bits == middle_value) {\n-        \/\/ Rounding to even to consistency with decimals: half-way case rounds\n-        \/\/ up if significant part is odd and down otherwise.\n-        if ((number & 1) != 0 || !zero_tail) {\n-          number++;  \/\/ Rounding up.\n-        }\n-      }\n-\n-      \/\/ Rounding up may cause overflow.\n-      if ((number & ((int64_t)1 << kSignificandSize)) != 0) {\n-        exponent++;\n-        number >>= 1;\n-      }\n-      break;\n-    }\n-    if (Advance(current, separator, radix, end)) break;\n-  }\n-\n-  ASSERT(number < ((int64_t)1 << kSignificandSize));\n-  ASSERT(static_cast<int64_t>(static_cast<double>(number)) == number);\n-\n-  *result_is_junk = false;\n-\n-  if (parse_as_hex_float) {\n-    ASSERT(**current == 'p' || **current == 'P');\n-    Advance(current, separator, radix, end);\n-    ASSERT(*current != end);\n-    bool is_negative = false;\n-    if (**current == '+') {\n-      Advance(current, separator, radix, end);\n-      ASSERT(*current != end);\n-    } else if (**current == '-') {\n-      is_negative = true;\n-      Advance(current, separator, radix, end);\n-      ASSERT(*current != end);\n-    }\n-    int written_exponent = 0;\n-    while (IsDecimalDigitForRadix(**current, 10)) {\n-      written_exponent = 10 * written_exponent + **current - '0';\n-      if (Advance(current, separator, radix, end)) break;\n-    }\n-    if (is_negative) written_exponent = -written_exponent;\n-    exponent += written_exponent;\n-  }\n-\n-  if (exponent == 0 || number == 0) {\n-    if (sign) {\n-      if (number == 0) return -0.0;\n-      number = -number;\n-    }\n-    return static_cast<double>(number);\n-  }\n-\n-  ASSERT(number != 0);\n-  double result = Double(DiyFp(number, exponent)).value();\n-  return sign ? -result : result;\n-}\n-\n-template <class Iterator>\n-double StringToDoubleConverter::StringToIeee(\n-    Iterator input,\n-    int length,\n-    bool read_as_double,\n-    int* processed_characters_count) const {\n-  Iterator current = input;\n-  Iterator end = input + length;\n-\n-  *processed_characters_count = 0;\n-\n-  const bool allow_trailing_junk = (flags_ & ALLOW_TRAILING_JUNK) != 0;\n-  const bool allow_leading_spaces = (flags_ & ALLOW_LEADING_SPACES) != 0;\n-  const bool allow_trailing_spaces = (flags_ & ALLOW_TRAILING_SPACES) != 0;\n-  const bool allow_spaces_after_sign = (flags_ & ALLOW_SPACES_AFTER_SIGN) != 0;\n-  const bool allow_case_insensibility = (flags_ & ALLOW_CASE_INSENSIBILITY) != 0;\n-\n-  \/\/ To make sure that iterator dereferencing is valid the following\n-  \/\/ convention is used:\n-  \/\/ 1. Each '++current' statement is followed by check for equality to 'end'.\n-  \/\/ 2. If AdvanceToNonspace returned false then current == end.\n-  \/\/ 3. If 'current' becomes equal to 'end' the function returns or goes to\n-  \/\/ 'parsing_done'.\n-  \/\/ 4. 'current' is not dereferenced after the 'parsing_done' label.\n-  \/\/ 5. Code before 'parsing_done' may rely on 'current != end'.\n-  if (current == end) return empty_string_value_;\n-\n-  if (allow_leading_spaces || allow_trailing_spaces) {\n-    if (!AdvanceToNonspace(&current, end)) {\n-      *processed_characters_count = static_cast<int>(current - input);\n-      return empty_string_value_;\n-    }\n-    if (!allow_leading_spaces && (input != current)) {\n-      \/\/ No leading spaces allowed, but AdvanceToNonspace moved forward.\n-      return junk_string_value_;\n-    }\n-  }\n-\n-  \/\/ The longest form of simplified number is: \"-<significant digits>.1eXXX\\0\".\n-  const int kBufferSize = kMaxSignificantDigits + 10;\n-  char buffer[kBufferSize];  \/\/ NOLINT: size is known at compile time.\n-  int buffer_pos = 0;\n-\n-  \/\/ Exponent will be adjusted if insignificant digits of the integer part\n-  \/\/ or insignificant leading zeros of the fractional part are dropped.\n-  int exponent = 0;\n-  int significant_digits = 0;\n-  int insignificant_digits = 0;\n-  bool nonzero_digit_dropped = false;\n-\n-  bool sign = false;\n-\n-  if (*current == '+' || *current == '-') {\n-    sign = (*current == '-');\n-    ++current;\n-    Iterator next_non_space = current;\n-    \/\/ Skip following spaces (if allowed).\n-    if (!AdvanceToNonspace(&next_non_space, end)) return junk_string_value_;\n-    if (!allow_spaces_after_sign && (current != next_non_space)) {\n-      return junk_string_value_;\n-    }\n-    current = next_non_space;\n-  }\n-\n-  if (infinity_symbol_ != NULL) {\n-    if (ConsumeFirstCharacter(*current, infinity_symbol_, allow_case_insensibility)) {\n-      if (!ConsumeSubString(&current, end, infinity_symbol_, allow_case_insensibility)) {\n-        return junk_string_value_;\n-      }\n-\n-      if (!(allow_trailing_spaces || allow_trailing_junk) && (current != end)) {\n-        return junk_string_value_;\n-      }\n-      if (!allow_trailing_junk && AdvanceToNonspace(&current, end)) {\n-        return junk_string_value_;\n-      }\n-\n-      ASSERT(buffer_pos == 0);\n-      *processed_characters_count = static_cast<int>(current - input);\n-      return sign ? -Double::Infinity() : Double::Infinity();\n-    }\n-  }\n-\n-  if (nan_symbol_ != NULL) {\n-    if (ConsumeFirstCharacter(*current, nan_symbol_, allow_case_insensibility)) {\n-      if (!ConsumeSubString(&current, end, nan_symbol_, allow_case_insensibility)) {\n-        return junk_string_value_;\n-      }\n-\n-      if (!(allow_trailing_spaces || allow_trailing_junk) && (current != end)) {\n-        return junk_string_value_;\n-      }\n-      if (!allow_trailing_junk && AdvanceToNonspace(&current, end)) {\n-        return junk_string_value_;\n-      }\n-\n-      ASSERT(buffer_pos == 0);\n-      *processed_characters_count = static_cast<int>(current - input);\n-      return sign ? -Double::NaN() : Double::NaN();\n-    }\n-  }\n-\n-  bool leading_zero = false;\n-  if (*current == '0') {\n-    if (Advance(&current, separator_, 10, end)) {\n-      *processed_characters_count = static_cast<int>(current - input);\n-      return SignedZero(sign);\n-    }\n-\n-    leading_zero = true;\n-\n-    \/\/ It could be hexadecimal value.\n-    if (((flags_ & ALLOW_HEX) || (flags_ & ALLOW_HEX_FLOATS)) &&\n-        (*current == 'x' || *current == 'X')) {\n-      ++current;\n-\n-      bool parse_as_hex_float = (flags_ & ALLOW_HEX_FLOATS) &&\n-                IsHexFloatString(current, end, separator_, allow_trailing_junk);\n-\n-      if (current == end) return junk_string_value_;  \/\/ \"0x\"\n-      if (!parse_as_hex_float && !isDigit(*current, 16)) {\n-        return junk_string_value_;\n-      }\n-\n-      bool result_is_junk;\n-      double result = RadixStringToIeee<4>(&current,\n-                                           end,\n-                                           sign,\n-                                           separator_,\n-                                           parse_as_hex_float,\n-                                           allow_trailing_junk,\n-                                           junk_string_value_,\n-                                           read_as_double,\n-                                           &result_is_junk);\n-      if (!result_is_junk) {\n-        if (allow_trailing_spaces) AdvanceToNonspace(&current, end);\n-        *processed_characters_count = static_cast<int>(current - input);\n-      }\n-      return result;\n-    }\n-\n-    \/\/ Ignore leading zeros in the integer part.\n-    while (*current == '0') {\n-      if (Advance(&current, separator_, 10, end)) {\n-        *processed_characters_count = static_cast<int>(current - input);\n-        return SignedZero(sign);\n-      }\n-    }\n-  }\n-\n-  bool octal = leading_zero && (flags_ & ALLOW_OCTALS) != 0;\n-\n-  \/\/ Copy significant digits of the integer part (if any) to the buffer.\n-  while (*current >= '0' && *current <= '9') {\n-    if (significant_digits < kMaxSignificantDigits) {\n-      ASSERT(buffer_pos < kBufferSize);\n-      buffer[buffer_pos++] = static_cast<char>(*current);\n-      significant_digits++;\n-      \/\/ Will later check if it's an octal in the buffer.\n-    } else {\n-      insignificant_digits++;  \/\/ Move the digit into the exponential part.\n-      nonzero_digit_dropped = nonzero_digit_dropped || *current != '0';\n-    }\n-    octal = octal && *current < '8';\n-    if (Advance(&current, separator_, 10, end)) goto parsing_done;\n-  }\n-\n-  if (significant_digits == 0) {\n-    octal = false;\n-  }\n-\n-  if (*current == '.') {\n-    if (octal && !allow_trailing_junk) return junk_string_value_;\n-    if (octal) goto parsing_done;\n-\n-    if (Advance(&current, separator_, 10, end)) {\n-      if (significant_digits == 0 && !leading_zero) {\n-        return junk_string_value_;\n-      } else {\n-        goto parsing_done;\n-      }\n-    }\n-\n-    if (significant_digits == 0) {\n-      \/\/ octal = false;\n-      \/\/ Integer part consists of 0 or is absent. Significant digits start after\n-      \/\/ leading zeros (if any).\n-      while (*current == '0') {\n-        if (Advance(&current, separator_, 10, end)) {\n-          *processed_characters_count = static_cast<int>(current - input);\n-          return SignedZero(sign);\n-        }\n-        exponent--;  \/\/ Move this 0 into the exponent.\n-      }\n-    }\n-\n-    \/\/ There is a fractional part.\n-    \/\/ We don't emit a '.', but adjust the exponent instead.\n-    while (*current >= '0' && *current <= '9') {\n-      if (significant_digits < kMaxSignificantDigits) {\n-        ASSERT(buffer_pos < kBufferSize);\n-        buffer[buffer_pos++] = static_cast<char>(*current);\n-        significant_digits++;\n-        exponent--;\n-      } else {\n-        \/\/ Ignore insignificant digits in the fractional part.\n-        nonzero_digit_dropped = nonzero_digit_dropped || *current != '0';\n-      }\n-      if (Advance(&current, separator_, 10, end)) goto parsing_done;\n-    }\n-  }\n-\n-  if (!leading_zero && exponent == 0 && significant_digits == 0) {\n-    \/\/ If leading_zeros is true then the string contains zeros.\n-    \/\/ If exponent < 0 then string was [+-]\\.0*...\n-    \/\/ If significant_digits != 0 the string is not equal to 0.\n-    \/\/ Otherwise there are no digits in the string.\n-    return junk_string_value_;\n-  }\n-\n-  \/\/ Parse exponential part.\n-  if (*current == 'e' || *current == 'E') {\n-    if (octal && !allow_trailing_junk) return junk_string_value_;\n-    if (octal) goto parsing_done;\n-    Iterator junk_begin = current;\n-    ++current;\n-    if (current == end) {\n-      if (allow_trailing_junk) {\n-        current = junk_begin;\n-        goto parsing_done;\n-      } else {\n-        return junk_string_value_;\n-      }\n-    }\n-    char exponen_sign = '+';\n-    if (*current == '+' || *current == '-') {\n-      exponen_sign = static_cast<char>(*current);\n-      ++current;\n-      if (current == end) {\n-        if (allow_trailing_junk) {\n-          current = junk_begin;\n-          goto parsing_done;\n-        } else {\n-          return junk_string_value_;\n-        }\n-      }\n-    }\n-\n-    if (current == end || *current < '0' || *current > '9') {\n-      if (allow_trailing_junk) {\n-        current = junk_begin;\n-        goto parsing_done;\n-      } else {\n-        return junk_string_value_;\n-      }\n-    }\n-\n-    const int max_exponent = INT_MAX \/ 2;\n-    ASSERT(-max_exponent \/ 2 <= exponent && exponent <= max_exponent \/ 2);\n-    int num = 0;\n-    do {\n-      \/\/ Check overflow.\n-      int digit = *current - '0';\n-      if (num >= max_exponent \/ 10\n-          && !(num == max_exponent \/ 10 && digit <= max_exponent % 10)) {\n-        num = max_exponent;\n-      } else {\n-        num = num * 10 + digit;\n-      }\n-      ++current;\n-    } while (current != end && *current >= '0' && *current <= '9');\n-\n-    exponent += (exponen_sign == '-' ? -num : num);\n-  }\n-\n-  if (!(allow_trailing_spaces || allow_trailing_junk) && (current != end)) {\n-    return junk_string_value_;\n-  }\n-  if (!allow_trailing_junk && AdvanceToNonspace(&current, end)) {\n-    return junk_string_value_;\n-  }\n-  if (allow_trailing_spaces) {\n-    AdvanceToNonspace(&current, end);\n-  }\n-\n-  parsing_done:\n-  exponent += insignificant_digits;\n-\n-  if (octal) {\n-    double result;\n-    bool result_is_junk;\n-    char* start = buffer;\n-    result = RadixStringToIeee<3>(&start,\n-                                  buffer + buffer_pos,\n-                                  sign,\n-                                  separator_,\n-                                  false, \/\/ Don't parse as hex_float.\n-                                  allow_trailing_junk,\n-                                  junk_string_value_,\n-                                  read_as_double,\n-                                  &result_is_junk);\n-    ASSERT(!result_is_junk);\n-    *processed_characters_count = static_cast<int>(current - input);\n-    return result;\n-  }\n-\n-  if (nonzero_digit_dropped) {\n-    buffer[buffer_pos++] = '1';\n-    exponent--;\n-  }\n-\n-  ASSERT(buffer_pos < kBufferSize);\n-  buffer[buffer_pos] = '\\0';\n-\n-  double converted;\n-  if (read_as_double) {\n-    converted = Strtod(Vector<const char>(buffer, buffer_pos), exponent);\n-  } else {\n-    converted = Strtof(Vector<const char>(buffer, buffer_pos), exponent);\n-  }\n-  *processed_characters_count = static_cast<int>(current - input);\n-  return sign? -converted: converted;\n-}\n-\n-\n-double StringToDoubleConverter::StringToDouble(\n-    const char* buffer,\n-    int length,\n-    int* processed_characters_count) const {\n-  return StringToIeee(buffer, length, true, processed_characters_count);\n-}\n-\n-\n-double StringToDoubleConverter::StringToDouble(\n-    const uc16* buffer,\n-    int length,\n-    int* processed_characters_count) const {\n-  return StringToIeee(buffer, length, true, processed_characters_count);\n-}\n-\n-\n-float StringToDoubleConverter::StringToFloat(\n-    const char* buffer,\n-    int length,\n-    int* processed_characters_count) const {\n-  return static_cast<float>(StringToIeee(buffer, length, false,\n-                                         processed_characters_count));\n-}\n-\n-\n-float StringToDoubleConverter::StringToFloat(\n-    const uc16* buffer,\n-    int length,\n-    int* processed_characters_count) const {\n-  return static_cast<float>(StringToIeee(buffer, length, false,\n-                                         processed_characters_count));\n-}\n-\n-}  \/\/ namespace double_conversion\n-\n-\/\/ ICU PATCH: Close ICU namespace\n-U_NAMESPACE_END\n-#endif \/\/ ICU PATCH: close #if !UCONFIG_NO_FORMATTING\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion.cpp","additions":0,"deletions":1168,"binary":false,"changes":1168,"status":"deleted"},{"patch":"@@ -42,555 +42,2 @@\n-#include \"double-conversion-utils.h\"\n-\n-\/\/ ICU PATCH: Wrap in ICU namespace\n-U_NAMESPACE_BEGIN\n-\n-namespace double_conversion {\n-\n-class DoubleToStringConverter {\n- public:\n-#if 0 \/\/ not needed for ICU\n-  \/\/ When calling ToFixed with a double > 10^kMaxFixedDigitsBeforePoint\n-  \/\/ or a requested_digits parameter > kMaxFixedDigitsAfterPoint then the\n-  \/\/ function returns false.\n-  static const int kMaxFixedDigitsBeforePoint = 60;\n-  static const int kMaxFixedDigitsAfterPoint = 60;\n-\n-  \/\/ When calling ToExponential with a requested_digits\n-  \/\/ parameter > kMaxExponentialDigits then the function returns false.\n-  static const int kMaxExponentialDigits = 120;\n-\n-  \/\/ When calling ToPrecision with a requested_digits\n-  \/\/ parameter < kMinPrecisionDigits or requested_digits > kMaxPrecisionDigits\n-  \/\/ then the function returns false.\n-  static const int kMinPrecisionDigits = 1;\n-  static const int kMaxPrecisionDigits = 120;\n-\n-  enum Flags {\n-    NO_FLAGS = 0,\n-    EMIT_POSITIVE_EXPONENT_SIGN = 1,\n-    EMIT_TRAILING_DECIMAL_POINT = 2,\n-    EMIT_TRAILING_ZERO_AFTER_POINT = 4,\n-    UNIQUE_ZERO = 8\n-  };\n-\n-  \/\/ Flags should be a bit-or combination of the possible Flags-enum.\n-  \/\/  - NO_FLAGS: no special flags.\n-  \/\/  - EMIT_POSITIVE_EXPONENT_SIGN: when the number is converted into exponent\n-  \/\/    form, emits a '+' for positive exponents. Example: 1.2e+2.\n-  \/\/  - EMIT_TRAILING_DECIMAL_POINT: when the input number is an integer and is\n-  \/\/    converted into decimal format then a trailing decimal point is appended.\n-  \/\/    Example: 2345.0 is converted to \"2345.\".\n-  \/\/  - EMIT_TRAILING_ZERO_AFTER_POINT: in addition to a trailing decimal point\n-  \/\/    emits a trailing '0'-character. This flag requires the\n-  \/\/    EXMIT_TRAILING_DECIMAL_POINT flag.\n-  \/\/    Example: 2345.0 is converted to \"2345.0\".\n-  \/\/  - UNIQUE_ZERO: \"-0.0\" is converted to \"0.0\".\n-  \/\/\n-  \/\/ Infinity symbol and nan_symbol provide the string representation for these\n-  \/\/ special values. If the string is NULL and the special value is encountered\n-  \/\/ then the conversion functions return false.\n-  \/\/\n-  \/\/ The exponent_character is used in exponential representations. It is\n-  \/\/ usually 'e' or 'E'.\n-  \/\/\n-  \/\/ When converting to the shortest representation the converter will\n-  \/\/ represent input numbers in decimal format if they are in the interval\n-  \/\/ [10^decimal_in_shortest_low; 10^decimal_in_shortest_high[\n-  \/\/    (lower boundary included, greater boundary excluded).\n-  \/\/ Example: with decimal_in_shortest_low = -6 and\n-  \/\/               decimal_in_shortest_high = 21:\n-  \/\/   ToShortest(0.000001)  -> \"0.000001\"\n-  \/\/   ToShortest(0.0000001) -> \"1e-7\"\n-  \/\/   ToShortest(111111111111111111111.0)  -> \"111111111111111110000\"\n-  \/\/   ToShortest(100000000000000000000.0)  -> \"100000000000000000000\"\n-  \/\/   ToShortest(1111111111111111111111.0) -> \"1.1111111111111111e+21\"\n-  \/\/\n-  \/\/ When converting to precision mode the converter may add\n-  \/\/ max_leading_padding_zeroes before returning the number in exponential\n-  \/\/ format.\n-  \/\/ Example with max_leading_padding_zeroes_in_precision_mode = 6.\n-  \/\/   ToPrecision(0.0000012345, 2) -> \"0.0000012\"\n-  \/\/   ToPrecision(0.00000012345, 2) -> \"1.2e-7\"\n-  \/\/ Similarily the converter may add up to\n-  \/\/ max_trailing_padding_zeroes_in_precision_mode in precision mode to avoid\n-  \/\/ returning an exponential representation. A zero added by the\n-  \/\/ EMIT_TRAILING_ZERO_AFTER_POINT flag is counted for this limit.\n-  \/\/ Examples for max_trailing_padding_zeroes_in_precision_mode = 1:\n-  \/\/   ToPrecision(230.0, 2) -> \"230\"\n-  \/\/   ToPrecision(230.0, 2) -> \"230.\"  with EMIT_TRAILING_DECIMAL_POINT.\n-  \/\/   ToPrecision(230.0, 2) -> \"2.3e2\" with EMIT_TRAILING_ZERO_AFTER_POINT.\n-  DoubleToStringConverter(int flags,\n-                          const char* infinity_symbol,\n-                          const char* nan_symbol,\n-                          char exponent_character,\n-                          int decimal_in_shortest_low,\n-                          int decimal_in_shortest_high,\n-                          int max_leading_padding_zeroes_in_precision_mode,\n-                          int max_trailing_padding_zeroes_in_precision_mode)\n-      : flags_(flags),\n-        infinity_symbol_(infinity_symbol),\n-        nan_symbol_(nan_symbol),\n-        exponent_character_(exponent_character),\n-        decimal_in_shortest_low_(decimal_in_shortest_low),\n-        decimal_in_shortest_high_(decimal_in_shortest_high),\n-        max_leading_padding_zeroes_in_precision_mode_(\n-            max_leading_padding_zeroes_in_precision_mode),\n-        max_trailing_padding_zeroes_in_precision_mode_(\n-            max_trailing_padding_zeroes_in_precision_mode) {\n-    \/\/ When 'trailing zero after the point' is set, then 'trailing point'\n-    \/\/ must be set too.\n-    ASSERT(((flags & EMIT_TRAILING_DECIMAL_POINT) != 0) ||\n-        !((flags & EMIT_TRAILING_ZERO_AFTER_POINT) != 0));\n-  }\n-\n-  \/\/ Returns a converter following the EcmaScript specification.\n-  static const DoubleToStringConverter& EcmaScriptConverter();\n-\n-  \/\/ Computes the shortest string of digits that correctly represent the input\n-  \/\/ number. Depending on decimal_in_shortest_low and decimal_in_shortest_high\n-  \/\/ (see constructor) it then either returns a decimal representation, or an\n-  \/\/ exponential representation.\n-  \/\/ Example with decimal_in_shortest_low = -6,\n-  \/\/              decimal_in_shortest_high = 21,\n-  \/\/              EMIT_POSITIVE_EXPONENT_SIGN activated, and\n-  \/\/              EMIT_TRAILING_DECIMAL_POINT deactived:\n-  \/\/   ToShortest(0.000001)  -> \"0.000001\"\n-  \/\/   ToShortest(0.0000001) -> \"1e-7\"\n-  \/\/   ToShortest(111111111111111111111.0)  -> \"111111111111111110000\"\n-  \/\/   ToShortest(100000000000000000000.0)  -> \"100000000000000000000\"\n-  \/\/   ToShortest(1111111111111111111111.0) -> \"1.1111111111111111e+21\"\n-  \/\/\n-  \/\/ Note: the conversion may round the output if the returned string\n-  \/\/ is accurate enough to uniquely identify the input-number.\n-  \/\/ For example the most precise representation of the double 9e59 equals\n-  \/\/ \"899999999999999918767229449717619953810131273674690656206848\", but\n-  \/\/ the converter will return the shorter (but still correct) \"9e59\".\n-  \/\/\n-  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n-  \/\/ except when the input value is special and no infinity_symbol or\n-  \/\/ nan_symbol has been given to the constructor.\n-  bool ToShortest(double value, StringBuilder* result_builder) const {\n-    return ToShortestIeeeNumber(value, result_builder, SHORTEST);\n-  }\n-\n-  \/\/ Same as ToShortest, but for single-precision floats.\n-  bool ToShortestSingle(float value, StringBuilder* result_builder) const {\n-    return ToShortestIeeeNumber(value, result_builder, SHORTEST_SINGLE);\n-  }\n-\n-\n-  \/\/ Computes a decimal representation with a fixed number of digits after the\n-  \/\/ decimal point. The last emitted digit is rounded.\n-  \/\/\n-  \/\/ Examples:\n-  \/\/   ToFixed(3.12, 1) -> \"3.1\"\n-  \/\/   ToFixed(3.1415, 3) -> \"3.142\"\n-  \/\/   ToFixed(1234.56789, 4) -> \"1234.5679\"\n-  \/\/   ToFixed(1.23, 5) -> \"1.23000\"\n-  \/\/   ToFixed(0.1, 4) -> \"0.1000\"\n-  \/\/   ToFixed(1e30, 2) -> \"1000000000000000019884624838656.00\"\n-  \/\/   ToFixed(0.1, 30) -> \"0.100000000000000005551115123126\"\n-  \/\/   ToFixed(0.1, 17) -> \"0.10000000000000001\"\n-  \/\/\n-  \/\/ If requested_digits equals 0, then the tail of the result depends on\n-  \/\/ the EMIT_TRAILING_DECIMAL_POINT and EMIT_TRAILING_ZERO_AFTER_POINT.\n-  \/\/ Examples, for requested_digits == 0,\n-  \/\/   let EMIT_TRAILING_DECIMAL_POINT and EMIT_TRAILING_ZERO_AFTER_POINT be\n-  \/\/    - false and false: then 123.45 -> 123\n-  \/\/                             0.678 -> 1\n-  \/\/    - true and false: then 123.45 -> 123.\n-  \/\/                            0.678 -> 1.\n-  \/\/    - true and true: then 123.45 -> 123.0\n-  \/\/                           0.678 -> 1.0\n-  \/\/\n-  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n-  \/\/ except for the following cases:\n-  \/\/   - the input value is special and no infinity_symbol or nan_symbol has\n-  \/\/     been provided to the constructor,\n-  \/\/   - 'value' > 10^kMaxFixedDigitsBeforePoint, or\n-  \/\/   - 'requested_digits' > kMaxFixedDigitsAfterPoint.\n-  \/\/ The last two conditions imply that the result will never contain more than\n-  \/\/ 1 + kMaxFixedDigitsBeforePoint + 1 + kMaxFixedDigitsAfterPoint characters\n-  \/\/ (one additional character for the sign, and one for the decimal point).\n-  bool ToFixed(double value,\n-               int requested_digits,\n-               StringBuilder* result_builder) const;\n-\n-  \/\/ Computes a representation in exponential format with requested_digits\n-  \/\/ after the decimal point. The last emitted digit is rounded.\n-  \/\/ If requested_digits equals -1, then the shortest exponential representation\n-  \/\/ is computed.\n-  \/\/\n-  \/\/ Examples with EMIT_POSITIVE_EXPONENT_SIGN deactivated, and\n-  \/\/               exponent_character set to 'e'.\n-  \/\/   ToExponential(3.12, 1) -> \"3.1e0\"\n-  \/\/   ToExponential(5.0, 3) -> \"5.000e0\"\n-  \/\/   ToExponential(0.001, 2) -> \"1.00e-3\"\n-  \/\/   ToExponential(3.1415, -1) -> \"3.1415e0\"\n-  \/\/   ToExponential(3.1415, 4) -> \"3.1415e0\"\n-  \/\/   ToExponential(3.1415, 3) -> \"3.142e0\"\n-  \/\/   ToExponential(123456789000000, 3) -> \"1.235e14\"\n-  \/\/   ToExponential(1000000000000000019884624838656.0, -1) -> \"1e30\"\n-  \/\/   ToExponential(1000000000000000019884624838656.0, 32) ->\n-  \/\/                     \"1.00000000000000001988462483865600e30\"\n-  \/\/   ToExponential(1234, 0) -> \"1e3\"\n-  \/\/\n-  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n-  \/\/ except for the following cases:\n-  \/\/   - the input value is special and no infinity_symbol or nan_symbol has\n-  \/\/     been provided to the constructor,\n-  \/\/   - 'requested_digits' > kMaxExponentialDigits.\n-  \/\/ The last condition implies that the result will never contain more than\n-  \/\/ kMaxExponentialDigits + 8 characters (the sign, the digit before the\n-  \/\/ decimal point, the decimal point, the exponent character, the\n-  \/\/ exponent's sign, and at most 3 exponent digits).\n-  bool ToExponential(double value,\n-                     int requested_digits,\n-                     StringBuilder* result_builder) const;\n-\n-  \/\/ Computes 'precision' leading digits of the given 'value' and returns them\n-  \/\/ either in exponential or decimal format, depending on\n-  \/\/ max_{leading|trailing}_padding_zeroes_in_precision_mode (given to the\n-  \/\/ constructor).\n-  \/\/ The last computed digit is rounded.\n-  \/\/\n-  \/\/ Example with max_leading_padding_zeroes_in_precision_mode = 6.\n-  \/\/   ToPrecision(0.0000012345, 2) -> \"0.0000012\"\n-  \/\/   ToPrecision(0.00000012345, 2) -> \"1.2e-7\"\n-  \/\/ Similarily the converter may add up to\n-  \/\/ max_trailing_padding_zeroes_in_precision_mode in precision mode to avoid\n-  \/\/ returning an exponential representation. A zero added by the\n-  \/\/ EMIT_TRAILING_ZERO_AFTER_POINT flag is counted for this limit.\n-  \/\/ Examples for max_trailing_padding_zeroes_in_precision_mode = 1:\n-  \/\/   ToPrecision(230.0, 2) -> \"230\"\n-  \/\/   ToPrecision(230.0, 2) -> \"230.\"  with EMIT_TRAILING_DECIMAL_POINT.\n-  \/\/   ToPrecision(230.0, 2) -> \"2.3e2\" with EMIT_TRAILING_ZERO_AFTER_POINT.\n-  \/\/ Examples for max_trailing_padding_zeroes_in_precision_mode = 3, and no\n-  \/\/    EMIT_TRAILING_ZERO_AFTER_POINT:\n-  \/\/   ToPrecision(123450.0, 6) -> \"123450\"\n-  \/\/   ToPrecision(123450.0, 5) -> \"123450\"\n-  \/\/   ToPrecision(123450.0, 4) -> \"123500\"\n-  \/\/   ToPrecision(123450.0, 3) -> \"123000\"\n-  \/\/   ToPrecision(123450.0, 2) -> \"1.2e5\"\n-  \/\/\n-  \/\/ Returns true if the conversion succeeds. The conversion always succeeds\n-  \/\/ except for the following cases:\n-  \/\/   - the input value is special and no infinity_symbol or nan_symbol has\n-  \/\/     been provided to the constructor,\n-  \/\/   - precision < kMinPericisionDigits\n-  \/\/   - precision > kMaxPrecisionDigits\n-  \/\/ The last condition implies that the result will never contain more than\n-  \/\/ kMaxPrecisionDigits + 7 characters (the sign, the decimal point, the\n-  \/\/ exponent character, the exponent's sign, and at most 3 exponent digits).\n-  bool ToPrecision(double value,\n-                   int precision,\n-                   StringBuilder* result_builder) const;\n-#endif \/\/ not needed for ICU\n-\n-  enum DtoaMode {\n-    \/\/ Produce the shortest correct representation.\n-    \/\/ For example the output of 0.299999999999999988897 is (the less accurate\n-    \/\/ but correct) 0.3.\n-    SHORTEST,\n-    \/\/ Same as SHORTEST, but for single-precision floats.\n-    SHORTEST_SINGLE,\n-    \/\/ Produce a fixed number of digits after the decimal point.\n-    \/\/ For instance fixed(0.1, 4) becomes 0.1000\n-    \/\/ If the input number is big, the output will be big.\n-    FIXED,\n-    \/\/ Fixed number of digits (independent of the decimal point).\n-    PRECISION\n-  };\n-\n-  \/\/ The maximal number of digits that are needed to emit a double in base 10.\n-  \/\/ A higher precision can be achieved by using more digits, but the shortest\n-  \/\/ accurate representation of any double will never use more digits than\n-  \/\/ kBase10MaximalLength.\n-  \/\/ Note that DoubleToAscii null-terminates its input. So the given buffer\n-  \/\/ should be at least kBase10MaximalLength + 1 characters long.\n-  static const int kBase10MaximalLength = 17;\n-\n-  \/\/ Converts the given double 'v' to digit characters. 'v' must not be NaN,\n-  \/\/ +Infinity, or -Infinity. In SHORTEST_SINGLE-mode this restriction also\n-  \/\/ applies to 'v' after it has been casted to a single-precision float. That\n-  \/\/ is, in this mode static_cast<float>(v) must not be NaN, +Infinity or\n-  \/\/ -Infinity.\n-  \/\/\n-  \/\/ The result should be interpreted as buffer * 10^(point-length).\n-  \/\/\n-  \/\/ The digits are written to the buffer in the platform's charset, which is\n-  \/\/ often UTF-8 (with ASCII-range digits) but may be another charset, such\n-  \/\/ as EBCDIC.\n-  \/\/\n-  \/\/ The output depends on the given mode:\n-  \/\/  - SHORTEST: produce the least amount of digits for which the internal\n-  \/\/   identity requirement is still satisfied. If the digits are printed\n-  \/\/   (together with the correct exponent) then reading this number will give\n-  \/\/   'v' again. The buffer will choose the representation that is closest to\n-  \/\/   'v'. If there are two at the same distance, than the one farther away\n-  \/\/   from 0 is chosen (halfway cases - ending with 5 - are rounded up).\n-  \/\/   In this mode the 'requested_digits' parameter is ignored.\n-  \/\/  - SHORTEST_SINGLE: same as SHORTEST but with single-precision.\n-  \/\/  - FIXED: produces digits necessary to print a given number with\n-  \/\/   'requested_digits' digits after the decimal point. The produced digits\n-  \/\/   might be too short in which case the caller has to fill the remainder\n-  \/\/   with '0's.\n-  \/\/   Example: toFixed(0.001, 5) is allowed to return buffer=\"1\", point=-2.\n-  \/\/   Halfway cases are rounded towards +\/-Infinity (away from 0). The call\n-  \/\/   toFixed(0.15, 2) thus returns buffer=\"2\", point=0.\n-  \/\/   The returned buffer may contain digits that would be truncated from the\n-  \/\/   shortest representation of the input.\n-  \/\/  - PRECISION: produces 'requested_digits' where the first digit is not '0'.\n-  \/\/   Even though the length of produced digits usually equals\n-  \/\/   'requested_digits', the function is allowed to return fewer digits, in\n-  \/\/   which case the caller has to fill the missing digits with '0's.\n-  \/\/   Halfway cases are again rounded away from 0.\n-  \/\/ DoubleToAscii expects the given buffer to be big enough to hold all\n-  \/\/ digits and a terminating null-character. In SHORTEST-mode it expects a\n-  \/\/ buffer of at least kBase10MaximalLength + 1. In all other modes the\n-  \/\/ requested_digits parameter and the padding-zeroes limit the size of the\n-  \/\/ output. Don't forget the decimal point, the exponent character and the\n-  \/\/ terminating null-character when computing the maximal output size.\n-  \/\/ The given length is only used in debug mode to ensure the buffer is big\n-  \/\/ enough.\n-  \/\/ ICU PATCH: Export this as U_I18N_API for unit tests.\n-  static void U_I18N_API DoubleToAscii(double v,\n-                            DtoaMode mode,\n-                            int requested_digits,\n-                            char* buffer,\n-                            int buffer_length,\n-                            bool* sign,\n-                            int* length,\n-                            int* point);\n-\n-#if 0 \/\/ not needed for ICU\n- private:\n-  \/\/ Implementation for ToShortest and ToShortestSingle.\n-  bool ToShortestIeeeNumber(double value,\n-                            StringBuilder* result_builder,\n-                            DtoaMode mode) const;\n-\n-  \/\/ If the value is a special value (NaN or Infinity) constructs the\n-  \/\/ corresponding string using the configured infinity\/nan-symbol.\n-  \/\/ If either of them is NULL or the value is not special then the\n-  \/\/ function returns false.\n-  bool HandleSpecialValues(double value, StringBuilder* result_builder) const;\n-  \/\/ Constructs an exponential representation (i.e. 1.234e56).\n-  \/\/ The given exponent assumes a decimal point after the first decimal digit.\n-  void CreateExponentialRepresentation(const char* decimal_digits,\n-                                       int length,\n-                                       int exponent,\n-                                       StringBuilder* result_builder) const;\n-  \/\/ Creates a decimal representation (i.e 1234.5678).\n-  void CreateDecimalRepresentation(const char* decimal_digits,\n-                                   int length,\n-                                   int decimal_point,\n-                                   int digits_after_point,\n-                                   StringBuilder* result_builder) const;\n-\n-  const int flags_;\n-  const char* const infinity_symbol_;\n-  const char* const nan_symbol_;\n-  const char exponent_character_;\n-  const int decimal_in_shortest_low_;\n-  const int decimal_in_shortest_high_;\n-  const int max_leading_padding_zeroes_in_precision_mode_;\n-  const int max_trailing_padding_zeroes_in_precision_mode_;\n-#endif \/\/ not needed for ICU\n-\n-  DC_DISALLOW_IMPLICIT_CONSTRUCTORS(DoubleToStringConverter);\n-};\n-\n-\n-class StringToDoubleConverter {\n- public:\n-  \/\/ Enumeration for allowing octals and ignoring junk when converting\n-  \/\/ strings to numbers.\n-  enum Flags {\n-    NO_FLAGS = 0,\n-    ALLOW_HEX = 1,\n-    ALLOW_OCTALS = 2,\n-    ALLOW_TRAILING_JUNK = 4,\n-    ALLOW_LEADING_SPACES = 8,\n-    ALLOW_TRAILING_SPACES = 16,\n-    ALLOW_SPACES_AFTER_SIGN = 32,\n-    ALLOW_CASE_INSENSIBILITY = 64,\n-    ALLOW_HEX_FLOATS = 128,\n-  };\n-\n-  static const uc16 kNoSeparator = '\\0';\n-\n-  \/\/ Flags should be a bit-or combination of the possible Flags-enum.\n-  \/\/  - NO_FLAGS: no special flags.\n-  \/\/  - ALLOW_HEX: recognizes the prefix \"0x\". Hex numbers may only be integers.\n-  \/\/      Ex: StringToDouble(\"0x1234\") -> 4660.0\n-  \/\/          In StringToDouble(\"0x1234.56\") the characters \".56\" are trailing\n-  \/\/          junk. The result of the call is hence dependent on\n-  \/\/          the ALLOW_TRAILING_JUNK flag and\/or the junk value.\n-  \/\/      With this flag \"0x\" is a junk-string. Even with ALLOW_TRAILING_JUNK,\n-  \/\/      the string will not be parsed as \"0\" followed by junk.\n-  \/\/\n-  \/\/  - ALLOW_OCTALS: recognizes the prefix \"0\" for octals:\n-  \/\/      If a sequence of octal digits starts with '0', then the number is\n-  \/\/      read as octal integer. Octal numbers may only be integers.\n-  \/\/      Ex: StringToDouble(\"01234\") -> 668.0\n-  \/\/          StringToDouble(\"012349\") -> 12349.0  \/\/ Not a sequence of octal\n-  \/\/                                               \/\/ digits.\n-  \/\/          In StringToDouble(\"01234.56\") the characters \".56\" are trailing\n-  \/\/          junk. The result of the call is hence dependent on\n-  \/\/          the ALLOW_TRAILING_JUNK flag and\/or the junk value.\n-  \/\/          In StringToDouble(\"01234e56\") the characters \"e56\" are trailing\n-  \/\/          junk, too.\n-  \/\/  - ALLOW_TRAILING_JUNK: ignore trailing characters that are not part of\n-  \/\/      a double literal.\n-  \/\/  - ALLOW_LEADING_SPACES: skip over leading whitespace, including spaces,\n-  \/\/                          new-lines, and tabs.\n-  \/\/  - ALLOW_TRAILING_SPACES: ignore trailing whitespace.\n-  \/\/  - ALLOW_SPACES_AFTER_SIGN: ignore whitespace after the sign.\n-  \/\/       Ex: StringToDouble(\"-   123.2\") -> -123.2.\n-  \/\/           StringToDouble(\"+   123.2\") -> 123.2\n-  \/\/  - ALLOW_CASE_INSENSIBILITY: ignore case of characters for special values:\n-  \/\/      infinity and nan.\n-  \/\/  - ALLOW_HEX_FLOATS: allows hexadecimal float literals.\n-  \/\/      This *must* start with \"0x\" and separate the exponent with \"p\".\n-  \/\/      Examples: 0x1.2p3 == 9.0\n-  \/\/                0x10.1p0 == 16.0625\n-  \/\/      ALLOW_HEX and ALLOW_HEX_FLOATS are indendent.\n-  \/\/\n-  \/\/ empty_string_value is returned when an empty string is given as input.\n-  \/\/ If ALLOW_LEADING_SPACES or ALLOW_TRAILING_SPACES are set, then a string\n-  \/\/ containing only spaces is converted to the 'empty_string_value', too.\n-  \/\/\n-  \/\/ junk_string_value is returned when\n-  \/\/  a) ALLOW_TRAILING_JUNK is not set, and a junk character (a character not\n-  \/\/     part of a double-literal) is found.\n-  \/\/  b) ALLOW_TRAILING_JUNK is set, but the string does not start with a\n-  \/\/     double literal.\n-  \/\/\n-  \/\/ infinity_symbol and nan_symbol are strings that are used to detect\n-  \/\/ inputs that represent infinity and NaN. They can be null, in which case\n-  \/\/ they are ignored.\n-  \/\/ The conversion routine first reads any possible signs. Then it compares the\n-  \/\/ following character of the input-string with the first character of\n-  \/\/ the infinity, and nan-symbol. If either matches, the function assumes, that\n-  \/\/ a match has been found, and expects the following input characters to match\n-  \/\/ the remaining characters of the special-value symbol.\n-  \/\/ This means that the following restrictions apply to special-value symbols:\n-  \/\/  - they must not start with signs ('+', or '-'),\n-  \/\/  - they must not have the same first character.\n-  \/\/  - they must not start with digits.\n-  \/\/\n-  \/\/ If the separator character is not kNoSeparator, then that specific\n-  \/\/ character is ignored when in between two valid digits of the significant.\n-  \/\/ It is not allowed to appear in the exponent.\n-  \/\/ It is not allowed to lead or trail the number.\n-  \/\/ It is not allowed to appear twice next to each other.\n-  \/\/\n-  \/\/ Examples:\n-  \/\/  flags = ALLOW_HEX | ALLOW_TRAILING_JUNK,\n-  \/\/  empty_string_value = 0.0,\n-  \/\/  junk_string_value = NaN,\n-  \/\/  infinity_symbol = \"infinity\",\n-  \/\/  nan_symbol = \"nan\":\n-  \/\/    StringToDouble(\"0x1234\") -> 4660.0.\n-  \/\/    StringToDouble(\"0x1234K\") -> 4660.0.\n-  \/\/    StringToDouble(\"\") -> 0.0  \/\/ empty_string_value.\n-  \/\/    StringToDouble(\" \") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\" 1\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"0x\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"-123.45\") -> -123.45.\n-  \/\/    StringToDouble(\"--123.45\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"123e45\") -> 123e45.\n-  \/\/    StringToDouble(\"123E45\") -> 123e45.\n-  \/\/    StringToDouble(\"123e+45\") -> 123e45.\n-  \/\/    StringToDouble(\"123E-45\") -> 123e-45.\n-  \/\/    StringToDouble(\"123e\") -> 123.0  \/\/ trailing junk ignored.\n-  \/\/    StringToDouble(\"123e-\") -> 123.0  \/\/ trailing junk ignored.\n-  \/\/    StringToDouble(\"+NaN\") -> NaN  \/\/ NaN string literal.\n-  \/\/    StringToDouble(\"-infinity\") -> -inf.  \/\/ infinity literal.\n-  \/\/    StringToDouble(\"Infinity\") -> NaN  \/\/ junk_string_value.\n-  \/\/\n-  \/\/  flags = ALLOW_OCTAL | ALLOW_LEADING_SPACES,\n-  \/\/  empty_string_value = 0.0,\n-  \/\/  junk_string_value = NaN,\n-  \/\/  infinity_symbol = NULL,\n-  \/\/  nan_symbol = NULL:\n-  \/\/    StringToDouble(\"0x1234\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"01234\") -> 668.0.\n-  \/\/    StringToDouble(\"\") -> 0.0  \/\/ empty_string_value.\n-  \/\/    StringToDouble(\" \") -> 0.0  \/\/ empty_string_value.\n-  \/\/    StringToDouble(\" 1\") -> 1.0\n-  \/\/    StringToDouble(\"0x\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"0123e45\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"01239E45\") -> 1239e45.\n-  \/\/    StringToDouble(\"-infinity\") -> NaN  \/\/ junk_string_value.\n-  \/\/    StringToDouble(\"NaN\") -> NaN  \/\/ junk_string_value.\n-  \/\/\n-  \/\/  flags = NO_FLAGS,\n-  \/\/  separator = ' ':\n-  \/\/    StringToDouble(\"1 2 3 4\") -> 1234.0\n-  \/\/    StringToDouble(\"1  2\") -> NaN \/\/ junk_string_value\n-  \/\/    StringToDouble(\"1 000 000.0\") -> 1000000.0\n-  \/\/    StringToDouble(\"1.000 000\") -> 1.0\n-  \/\/    StringToDouble(\"1.0e1 000\") -> NaN \/\/ junk_string_value\n-  StringToDoubleConverter(int flags,\n-                          double empty_string_value,\n-                          double junk_string_value,\n-                          const char* infinity_symbol,\n-                          const char* nan_symbol,\n-                          uc16 separator = kNoSeparator)\n-      : flags_(flags),\n-        empty_string_value_(empty_string_value),\n-        junk_string_value_(junk_string_value),\n-        infinity_symbol_(infinity_symbol),\n-        nan_symbol_(nan_symbol),\n-        separator_(separator) {\n-  }\n-\n-  \/\/ Performs the conversion.\n-  \/\/ The output parameter 'processed_characters_count' is set to the number\n-  \/\/ of characters that have been processed to read the number.\n-  \/\/ Spaces than are processed with ALLOW_{LEADING|TRAILING}_SPACES are included\n-  \/\/ in the 'processed_characters_count'. Trailing junk is never included.\n-  double StringToDouble(const char* buffer,\n-                        int length,\n-                        int* processed_characters_count) const;\n-\n-  \/\/ Same as StringToDouble above but for 16 bit characters.\n-  double StringToDouble(const uc16* buffer,\n-                        int length,\n-                        int* processed_characters_count) const;\n-\n-  \/\/ Same as StringToDouble but reads a float.\n-  \/\/ Note that this is not equivalent to static_cast<float>(StringToDouble(...))\n-  \/\/ due to potential double-rounding.\n-  float StringToFloat(const char* buffer,\n-                      int length,\n-                      int* processed_characters_count) const;\n-\n-  \/\/ Same as StringToFloat above but for 16 bit characters.\n-  float StringToFloat(const uc16* buffer,\n-                      int length,\n-                      int* processed_characters_count) const;\n-\n- private:\n-  const int flags_;\n-  const double empty_string_value_;\n-  const double junk_string_value_;\n-  const char* const infinity_symbol_;\n-  const char* const nan_symbol_;\n-  const uc16 separator_;\n-\n-  template <class Iterator>\n-  double StringToIeee(Iterator start_pointer,\n-                      int length,\n-                      bool read_as_double,\n-                      int* processed_characters_count) const;\n-\n-  DC_DISALLOW_IMPLICIT_CONSTRUCTORS(StringToDoubleConverter);\n-};\n-\n-}  \/\/ namespace double_conversion\n-\n-\/\/ ICU PATCH: Close ICU namespace\n-U_NAMESPACE_END\n+#include \"double-conversion-string-to-double.h\"\n+#include \"double-conversion-double-to-string.h\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/double-conversion.h","additions":2,"deletions":555,"binary":false,"changes":557,"status":"modified"},{"patch":"@@ -1249,1 +1249,1 @@\n-    static UMutex LOCK = U_MUTEX_INITIALIZER;\n+    static UMutex LOCK;\n@@ -2180,1 +2180,1 @@\n-            };\n+            }\n@@ -2183,1 +2183,1 @@\n-            };\n+            }\n@@ -2186,1 +2186,1 @@\n-            };\n+            }\n@@ -2189,1 +2189,1 @@\n-            };\n+            }\n@@ -2341,1 +2341,2 @@\n-    \/\/ Load AM\/PM markers\n+    \/\/ Load AM\/PM markers; if wide or narrow not available, use short\n+    UErrorCode ampmStatus = U_ZERO_ERROR;\n@@ -2343,1 +2344,6 @@\n-              buildResourcePath(path, gAmPmMarkersTag, status), status);\n+              buildResourcePath(path, gAmPmMarkersTag, ampmStatus), ampmStatus);\n+    if (U_FAILURE(ampmStatus)) {\n+        initField(&fAmPms, fAmPmsCount, calendarSink,\n+                  buildResourcePath(path, gAmPmMarkersAbbrTag, status), status);\n+    }\n+    ampmStatus = U_ZERO_ERROR;\n@@ -2345,1 +2351,5 @@\n-              buildResourcePath(path, gAmPmMarkersNarrowTag, status), status);\n+              buildResourcePath(path, gAmPmMarkersNarrowTag, ampmStatus), ampmStatus);\n+    if (U_FAILURE(ampmStatus)) {\n+        initField(&fNarrowAmPms, fNarrowAmPmsCount, calendarSink,\n+                  buildResourcePath(path, gAmPmMarkersAbbrTag, status), status);\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dtfmtsym.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+#define CAP_B             ((UChar)0x0042)\n@@ -72,0 +73,1 @@\n+#define CAP_J             ((UChar)0x004A)\n@@ -91,1 +93,1 @@\n-#define MAX_POSITIVE_INT  56632;\n+#define MAX_POSITIVE_INT  56632\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dtitv_impl.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"unicode\/udisplaycontext.h\"\n@@ -85,4 +86,1 @@\n-static UMutex *gFormatterMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gFormatterMutex;\n@@ -114,0 +112,4 @@\n+    if (dtitvinf == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n@@ -138,4 +140,4 @@\n-:   fInfo(NULL),\n-    fDateFormat(NULL),\n-    fFromCalendar(NULL),\n-    fToCalendar(NULL),\n+:   fInfo(nullptr),\n+    fDateFormat(nullptr),\n+    fFromCalendar(nullptr),\n+    fToCalendar(nullptr),\n@@ -143,3 +145,4 @@\n-    fDatePattern(NULL),\n-    fTimePattern(NULL),\n-    fDateTimeFormat(NULL)\n+    fDatePattern(nullptr),\n+    fTimePattern(nullptr),\n+    fDateTimeFormat(nullptr),\n+    fCapitalizationContext(UDISPCTX_CAPITALIZATION_NONE)\n@@ -151,4 +154,4 @@\n-    fInfo(NULL),\n-    fDateFormat(NULL),\n-    fFromCalendar(NULL),\n-    fToCalendar(NULL),\n+    fInfo(nullptr),\n+    fDateFormat(nullptr),\n+    fFromCalendar(nullptr),\n+    fToCalendar(nullptr),\n@@ -156,3 +159,4 @@\n-    fDatePattern(NULL),\n-    fTimePattern(NULL),\n-    fDateTimeFormat(NULL) {\n+    fDatePattern(nullptr),\n+    fTimePattern(nullptr),\n+    fDateTimeFormat(nullptr),\n+    fCapitalizationContext(UDISPCTX_CAPITALIZATION_NONE) {\n@@ -174,1 +178,1 @@\n-            Mutex lock(gFormatterMutex());\n+            Mutex lock(&gFormatterMutex);\n@@ -176,1 +180,1 @@\n-                fDateFormat = (SimpleDateFormat*)itvfmt.fDateFormat->clone();\n+                fDateFormat = itvfmt.fDateFormat->clone();\n@@ -178,1 +182,1 @@\n-                fDateFormat = NULL;\n+                fDateFormat = nullptr;\n@@ -183,1 +187,1 @@\n-                fFromCalendar = NULL;\n+                fFromCalendar = nullptr;\n@@ -188,1 +192,1 @@\n-                fToCalendar = NULL;\n+                fToCalendar = nullptr;\n@@ -194,1 +198,1 @@\n-            fInfo = NULL;\n+            fInfo = nullptr;\n@@ -202,3 +206,4 @@\n-        fDatePattern    = (itvfmt.fDatePattern)?    (UnicodeString*)itvfmt.fDatePattern->clone(): NULL;\n-        fTimePattern    = (itvfmt.fTimePattern)?    (UnicodeString*)itvfmt.fTimePattern->clone(): NULL;\n-        fDateTimeFormat = (itvfmt.fDateTimeFormat)? (UnicodeString*)itvfmt.fDateTimeFormat->clone(): NULL;\n+        fDatePattern    = (itvfmt.fDatePattern)?    itvfmt.fDatePattern->clone(): nullptr;\n+        fTimePattern    = (itvfmt.fTimePattern)?    itvfmt.fTimePattern->clone(): nullptr;\n+        fDateTimeFormat = (itvfmt.fDateTimeFormat)? itvfmt.fDateTimeFormat->clone(): nullptr;\n+        fCapitalizationContext = itvfmt.fCapitalizationContext;\n@@ -221,2 +226,2 @@\n-Format*\n-DateIntervalFormat::clone(void) const {\n+DateIntervalFormat*\n+DateIntervalFormat::clone() const {\n@@ -233,1 +238,1 @@\n-    if ((fInfo != fmt->fInfo) && (fInfo == NULL || fmt->fInfo == NULL)) {return FALSE;}\n+    if ((fInfo != fmt->fInfo) && (fInfo == nullptr || fmt->fInfo == nullptr)) {return FALSE;}\n@@ -236,2 +241,2 @@\n-        Mutex lock(gFormatterMutex());\n-        if (fDateFormat != fmt->fDateFormat && (fDateFormat == NULL || fmt->fDateFormat == NULL)) {return FALSE;}\n+        Mutex lock(&gFormatterMutex);\n+        if (fDateFormat != fmt->fDateFormat && (fDateFormat == nullptr || fmt->fDateFormat == nullptr)) {return FALSE;}\n@@ -241,1 +246,1 @@\n-    \/\/       fDateFormat has the master calendar for the DateIntervalFormat.\n+    \/\/       fDateFormat has the primary calendar for the DateIntervalFormat.\n@@ -243,1 +248,1 @@\n-    if (fDatePattern != fmt->fDatePattern && (fDatePattern == NULL || fmt->fDatePattern == NULL)) {return FALSE;}\n+    if (fDatePattern != fmt->fDatePattern && (fDatePattern == nullptr || fmt->fDatePattern == nullptr)) {return FALSE;}\n@@ -245,1 +250,1 @@\n-    if (fTimePattern != fmt->fTimePattern && (fTimePattern == NULL || fmt->fTimePattern == NULL)) {return FALSE;}\n+    if (fTimePattern != fmt->fTimePattern && (fTimePattern == nullptr || fmt->fTimePattern == nullptr)) {return FALSE;}\n@@ -247,1 +252,1 @@\n-    if (fDateTimeFormat != fmt->fDateTimeFormat && (fDateTimeFormat == NULL || fmt->fDateTimeFormat == NULL)) {return FALSE;}\n+    if (fDateTimeFormat != fmt->fDateTimeFormat && (fDateTimeFormat == nullptr || fmt->fDateTimeFormat == nullptr)) {return FALSE;}\n@@ -256,0 +261,1 @@\n+    if (fCapitalizationContext != fmt->fCapitalizationContext) {return FALSE;}\n@@ -272,1 +278,1 @@\n-        if (interval != NULL) {\n+        if (interval != nullptr) {\n@@ -289,1 +295,1 @@\n-    if (fDateFormat == NULL || fInfo == NULL) {\n+    if (fDateFormat == nullptr || fInfo == nullptr) {\n@@ -298,1 +304,1 @@\n-    Mutex lock(gFormatterMutex());\n+    Mutex lock(&gFormatterMutex);\n@@ -306,0 +312,4 @@\n+    if (U_FAILURE(status)) {\n+        return FormattedDateInterval(status);\n+    }\n+    \/\/ LocalPointer only sets OOM status if U_SUCCESS is true.\n@@ -315,1 +325,1 @@\n-        Mutex lock(gFormatterMutex());\n+        Mutex lock(&gFormatterMutex);\n@@ -347,1 +357,1 @@\n-    Mutex lock(gFormatterMutex());\n+    Mutex lock(&gFormatterMutex);\n@@ -356,0 +366,4 @@\n+    if (U_FAILURE(status)) {\n+        return FormattedDateInterval(status);\n+    }\n+    \/\/ LocalPointer only sets OOM status if U_SUCCESS is true.\n@@ -365,1 +379,1 @@\n-        Mutex lock(gFormatterMutex());\n+        Mutex lock(&gFormatterMutex);\n@@ -403,0 +417,1 @@\n+\/\/ The following is only called from within the gFormatterMutex lock\n@@ -450,0 +465,3 @@\n+    } else if ( fromCalendar.get(UCAL_MILLISECOND, status) !=\n+                toCalendar.get(UCAL_MILLISECOND, status) ) {\n+        field = UCAL_MILLISECOND;\n@@ -455,0 +473,5 @@\n+    UErrorCode tempStatus = U_ZERO_ERROR; \/\/ for setContext, ignored\n+    \/\/ Set up fDateFormat to handle the first or only part of the interval\n+    \/\/ (override later for any second part). Inside lock, OK to modify fDateFormat.\n+    fDateFormat->setContext(fCapitalizationContext, tempStatus);\n+\n@@ -461,1 +484,1 @@\n-    UBool fromToOnSameDay = (field==UCAL_AM_PM || field==UCAL_HOUR || field==UCAL_MINUTE || field==UCAL_SECOND);\n+    UBool fromToOnSameDay = (field==UCAL_AM_PM || field==UCAL_HOUR || field==UCAL_MINUTE || field==UCAL_SECOND || field==UCAL_MILLISECOND);\n@@ -512,0 +535,3 @@\n+        \/\/ No capitalization for second part of interval\n+        tempStatus = U_ZERO_ERROR;\n+        fDateFormat->setContext(UDISPCTX_CAPITALIZATION_NONE, tempStatus);\n@@ -543,0 +569,3 @@\n+    if (fInfo == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+    }\n@@ -546,1 +575,1 @@\n-    fDatePattern = NULL;\n+    fDatePattern = nullptr;\n@@ -548,1 +577,1 @@\n-    fTimePattern = NULL;\n+    fTimePattern = nullptr;\n@@ -550,1 +579,1 @@\n-    fDateTimeFormat = NULL;\n+    fDateTimeFormat = nullptr;\n@@ -568,1 +597,1 @@\n-    if (fDateFormat != NULL) {\n+    if (fDateFormat != nullptr) {\n@@ -571,1 +600,1 @@\n-    \/\/ The fDateFormat has the master calendar for the DateIntervalFormat and has\n+    \/\/ The fDateFormat has the primary calendar for the DateIntervalFormat and has\n@@ -586,1 +615,1 @@\n-    if (fDateFormat != NULL) {\n+    if (fDateFormat != nullptr) {\n@@ -589,1 +618,1 @@\n-    \/\/ The fDateFormat has the master calendar for the DateIntervalFormat;\n+    \/\/ The fDateFormat has the primary calendar for the DateIntervalFormat;\n@@ -602,2 +631,2 @@\n-    if (fDateFormat != NULL) {\n-        Mutex lock(gFormatterMutex());\n+    if (fDateFormat != nullptr) {\n+        Mutex lock(&gFormatterMutex);\n@@ -606,1 +635,1 @@\n-    \/\/ If fDateFormat is NULL (unexpected), create default timezone.\n+    \/\/ If fDateFormat is nullptr (unexpected), create default timezone.\n@@ -610,0 +639,24 @@\n+void\n+DateIntervalFormat::setContext(UDisplayContext value, UErrorCode& status)\n+{\n+    if (U_FAILURE(status))\n+        return;\n+    if ( (UDisplayContextType)((uint32_t)value >> 8) == UDISPCTX_TYPE_CAPITALIZATION ) {\n+        fCapitalizationContext = value;\n+    } else {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+    }\n+}\n+\n+UDisplayContext\n+DateIntervalFormat::getContext(UDisplayContextType type, UErrorCode& status) const\n+{\n+    if (U_FAILURE(status))\n+        return (UDisplayContext)0;\n+    if (type != UDISPCTX_TYPE_CAPITALIZATION) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return (UDisplayContext)0;\n+    }\n+    return fCapitalizationContext;\n+}\n+\n@@ -614,4 +667,4 @@\n-:   fInfo(NULL),\n-    fDateFormat(NULL),\n-    fFromCalendar(NULL),\n-    fToCalendar(NULL),\n+:   fInfo(nullptr),\n+    fDateFormat(nullptr),\n+    fFromCalendar(nullptr),\n+    fToCalendar(nullptr),\n@@ -619,3 +672,4 @@\n-    fDatePattern(NULL),\n-    fTimePattern(NULL),\n-    fDateTimeFormat(NULL)\n+    fDatePattern(nullptr),\n+    fTimePattern(nullptr),\n+    fDateTimeFormat(nullptr),\n+    fCapitalizationContext(UDISPCTX_CAPITALIZATION_NONE)\n@@ -649,1 +703,1 @@\n-    if ( f == NULL ) {\n+    if ( f == nullptr ) {\n@@ -739,1 +793,1 @@\n-     * 2. 'a' is omitted in normalized time skeleton.\n+     * 2. (Formerly, 'a' was omitted in normalized time skeleton; this is now handled elsewhere)\n@@ -748,1 +802,2 @@\n-    getDateTimeSkeleton(fSkeleton, dateSkeleton, normalizedDateSkeleton,\n+    UnicodeString convertedSkeleton = normalizeHourMetacharacters(fSkeleton);\n+    getDateTimeSkeleton(convertedSkeleton, dateSkeleton, normalizedDateSkeleton,\n@@ -766,1 +821,1 @@\n-        LocalUResourceBundlePointer dateTimePatternsRes(ures_open(NULL, locale.getBaseName(), &status));\n+        LocalUResourceBundlePointer dateTimePatternsRes(ures_open(nullptr, locale.getBaseName(), &status));\n@@ -781,0 +836,4 @@\n+            if (fDateTimeFormat == nullptr) {\n+                status = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n@@ -804,3 +863,3 @@\n-                setPatternInfo(UCAL_DATE, NULL, &pattern, fInfo->getDefaultOrder());\n-                setPatternInfo(UCAL_MONTH, NULL, &pattern, fInfo->getDefaultOrder());\n-                setPatternInfo(UCAL_YEAR, NULL, &pattern, fInfo->getDefaultOrder());\n+                setPatternInfo(UCAL_DATE, nullptr, &pattern, fInfo->getDefaultOrder());\n+                setPatternInfo(UCAL_MONTH, nullptr, &pattern, fInfo->getDefaultOrder());\n+                setPatternInfo(UCAL_YEAR, nullptr, &pattern, fInfo->getDefaultOrder());\n@@ -830,3 +889,3 @@\n-        setPatternInfo(UCAL_DATE, NULL, &pattern, fInfo->getDefaultOrder());\n-        setPatternInfo(UCAL_MONTH, NULL, &pattern, fInfo->getDefaultOrder());\n-        setPatternInfo(UCAL_YEAR, NULL, &pattern, fInfo->getDefaultOrder());\n+        setPatternInfo(UCAL_DATE, nullptr, &pattern, fInfo->getDefaultOrder());\n+        setPatternInfo(UCAL_MONTH, nullptr, &pattern, fInfo->getDefaultOrder());\n+        setPatternInfo(UCAL_YEAR, nullptr, &pattern, fInfo->getDefaultOrder());\n@@ -867,1 +926,1 @@\n-        if ( fDateTimeFormat == NULL ) {\n+        if ( fDateTimeFormat == nullptr ) {\n@@ -883,0 +942,85 @@\n+UnicodeString\n+DateIntervalFormat::normalizeHourMetacharacters(const UnicodeString& skeleton) const {\n+    UnicodeString result = skeleton;\n+\n+    UChar hourMetachar = u'\\0';\n+    int32_t metacharStart = 0;\n+    int32_t metacharCount = 0;\n+    for (int32_t i = 0; i < result.length(); i++) {\n+        UChar c = result[i];\n+        if (c == LOW_J || c == CAP_J || c == CAP_C) {\n+            if (hourMetachar == u'\\0') {\n+                hourMetachar = c;\n+                metacharStart = i;\n+            }\n+            ++metacharCount;\n+        } else {\n+            if (hourMetachar != u'\\0') {\n+                break;\n+            }\n+        }\n+    }\n+\n+    if (hourMetachar != u'\\0') {\n+        UErrorCode err = U_ZERO_ERROR;\n+        UChar hourChar = CAP_H;\n+        UChar dayPeriodChar = LOW_A;\n+        UnicodeString convertedPattern = DateFormat::getBestPattern(fLocale, UnicodeString(hourMetachar), err);\n+\n+        if (U_SUCCESS(err)) {\n+            \/\/ strip literal text from the pattern (so literal characters don't get mistaken for pattern\n+            \/\/ characters-- such as the 'h' in 'Uhr' in Germam)\n+            int32_t firstQuotePos;\n+            while ((firstQuotePos = convertedPattern.indexOf(u'\\'')) != -1) {\n+                int32_t secondQuotePos = convertedPattern.indexOf(u'\\'', firstQuotePos + 1);\n+                if (secondQuotePos == -1) {\n+                    secondQuotePos = firstQuotePos;\n+                }\n+                convertedPattern.replace(firstQuotePos, (secondQuotePos - firstQuotePos) + 1, UnicodeString());\n+            }\n+\n+            if (convertedPattern.indexOf(LOW_H) != -1) {\n+                hourChar = LOW_H;\n+            } else if (convertedPattern.indexOf(CAP_K) != -1) {\n+                hourChar = CAP_K;\n+            } else if (convertedPattern.indexOf(LOW_K) != -1) {\n+                hourChar = LOW_K;\n+            }\n+\n+            if (convertedPattern.indexOf(LOW_B) != -1) {\n+                dayPeriodChar = LOW_B;\n+            } else if (convertedPattern.indexOf(CAP_B) != -1) {\n+                dayPeriodChar = CAP_B;\n+            }\n+        }\n+\n+        if (hourChar == CAP_H || hourChar == LOW_K) {\n+            result.replace(metacharStart, metacharCount, hourChar);\n+        } else {\n+            UnicodeString hourAndDayPeriod(hourChar);\n+            switch (metacharCount) {\n+                case 1:\n+                case 2:\n+                default:\n+                    hourAndDayPeriod.append(UnicodeString(dayPeriodChar));\n+                    break;\n+                case 3:\n+                case 4:\n+                    for (int32_t i = 0; i < 4; i++) {\n+                        hourAndDayPeriod.append(dayPeriodChar);\n+                    }\n+                    break;\n+                case 5:\n+                case 6:\n+                    for (int32_t i = 0; i < 5; i++) {\n+                        hourAndDayPeriod.append(dayPeriodChar);\n+                    }\n+                    break;\n+            }\n+            result.replace(metacharStart, metacharCount, hourAndDayPeriod);\n+        }\n+    }\n+    return result;\n+}\n+\n+\n@@ -895,2 +1039,0 @@\n-    int32_t hCount = 0;\n-    int32_t HCount = 0;\n@@ -900,0 +1042,1 @@\n+    UChar hourChar = u'\\0';\n@@ -940,4 +1083,0 @@\n-          case LOW_A:\n-            \/\/ 'a' is implicitly handled\n-            timeSkeleton.append(ch);\n-            break;\n@@ -945,3 +1084,0 @@\n-            timeSkeleton.append(ch);\n-            ++hCount;\n-            break;\n@@ -949,0 +1085,2 @@\n+          case LOW_K:\n+          case CAP_K:\n@@ -950,1 +1088,3 @@\n-            ++HCount;\n+            if (hourChar == u'\\0') {\n+                hourChar = ch;\n+            }\n@@ -964,0 +1104,1 @@\n+          case LOW_A:\n@@ -966,2 +1107,0 @@\n-          case LOW_K:\n-          case CAP_K:\n@@ -972,0 +1111,2 @@\n+          case LOW_B:\n+          case CAP_B:\n@@ -1007,5 +1148,2 @@\n-    if ( HCount != 0 ) {\n-        normalizedTimeSkeleton.append(CAP_H);\n-    }\n-    else if ( hCount != 0 ) {\n-        normalizedTimeSkeleton.append(LOW_H);\n+    if ( hourChar != u'\\0' ) {\n+        normalizedTimeSkeleton.append(hourChar);\n@@ -1077,1 +1215,1 @@\n-    \/* best skeleton could be NULL.\n+    \/* best skeleton could be nullptr.\n@@ -1084,1 +1222,1 @@\n-       and the best skeleton match could be NULL\n+       and the best skeleton match could be nullptr\n@@ -1086,1 +1224,1 @@\n-    if ( bestSkeleton == NULL ) {\n+    if ( bestSkeleton == nullptr ) {\n@@ -1097,0 +1235,1 @@\n+        \/\/ no way to report OOM. :(\n@@ -1102,0 +1241,1 @@\n+        \/\/ no way to report OOM. :(\n@@ -1157,1 +1297,1 @@\n-    setPatternInfo(field, NULL, &pattern, fInfo->getDefaultOrder());\n+    setPatternInfo(field, nullptr, &pattern, fInfo->getDefaultOrder());\n@@ -1285,1 +1425,5 @@\n-                setIntervalPattern(field, pattern);\n+                UBool suppressDayPeriodField = fSkeleton.indexOf(CAP_J) != -1;\n+                UnicodeString adjustIntervalPattern;\n+                adjustFieldWidth(*skeleton, *bestSkeleton, pattern, differenceInfo,\n+                                 suppressDayPeriodField, adjustIntervalPattern);\n+                setIntervalPattern(field, adjustIntervalPattern);\n@@ -1317,1 +1461,2 @@\n-        if ( differenceInfo != 0 ) {\n+        UBool suppressDayPeriodField = fSkeleton.indexOf(CAP_J) != -1;\n+        if ( differenceInfo != 0 || suppressDayPeriodField) {\n@@ -1320,1 +1465,1 @@\n-                              adjustIntervalPattern);\n+                              suppressDayPeriodField, adjustIntervalPattern);\n@@ -1407,0 +1552,1 @@\n+\/\/ The following is only called from fallbackFormat, i.e. within the gFormatterMutex lock\n@@ -1423,0 +1569,1 @@\n+    UErrorCode tempStatus = U_ZERO_ERROR; \/\/ for setContext, ignored\n@@ -1429,0 +1576,2 @@\n+        \/\/ No capitalization for second part of interval\n+        fDateFormat->setContext(UDISPCTX_CAPITALIZATION_NONE, tempStatus);\n@@ -1436,0 +1585,2 @@\n+        \/\/ No capitalization for second part of interval\n+        fDateFormat->setContext(UDISPCTX_CAPITALIZATION_NONE, tempStatus);\n@@ -1441,0 +1592,1 @@\n+\/\/ The following is only called from formatImpl, i.e. within the gFormatterMutex lock\n@@ -1465,0 +1617,1 @@\n+        UErrorCode tempStatus = U_ZERO_ERROR; \/\/ for setContext, ignored\n@@ -1474,0 +1627,2 @@\n+            \/\/ No capitalization for second portion\n+            fDateFormat->setContext(UDISPCTX_CAPITALIZATION_NONE, tempStatus);\n@@ -1482,0 +1637,2 @@\n+            \/\/ No capitalization for second portion\n+            fDateFormat->setContext(UDISPCTX_CAPITALIZATION_NONE, tempStatus);\n@@ -1512,0 +1669,1 @@\n+                 UBool suppressDayPeriodField,\n@@ -1538,0 +1696,2 @@\n+    const int8_t PATTERN_CHAR_BASE = 0x41;\n+\n@@ -1540,3 +1700,4 @@\n-    if ( differenceInfo == 2 ) {\n-        adjustedPtn.findAndReplace(UnicodeString((UChar)0x76 \/* v *\/),\n-                                   UnicodeString((UChar)0x7a \/* z *\/));\n+    if (suppressDayPeriodField) {\n+        findReplaceInPattern(adjustedPtn, UnicodeString(LOW_A), UnicodeString());\n+        findReplaceInPattern(adjustedPtn, UnicodeString(\"  \"), UnicodeString(\" \"));\n+        adjustedPtn.trim();\n@@ -1544,0 +1705,20 @@\n+    if ( differenceInfo == 2 ) {\n+        if (inputSkeleton.indexOf(LOW_Z) != -1) {\n+             findReplaceInPattern(adjustedPtn, UnicodeString(LOW_V), UnicodeString(LOW_Z));\n+         }\n+         if (inputSkeleton.indexOf(CAP_K) != -1) {\n+             findReplaceInPattern(adjustedPtn, UnicodeString(LOW_H), UnicodeString(CAP_K));\n+         }\n+         if (inputSkeleton.indexOf(LOW_K) != -1) {\n+             findReplaceInPattern(adjustedPtn, UnicodeString(CAP_H), UnicodeString(LOW_K));\n+         }\n+         if (inputSkeleton.indexOf(LOW_B) != -1) {\n+             findReplaceInPattern(adjustedPtn, UnicodeString(LOW_A), UnicodeString(LOW_B));\n+         }\n+    }\n+    if (adjustedPtn.indexOf(LOW_A) != -1 && bestMatchSkeletonFieldWidth[LOW_A - PATTERN_CHAR_BASE] == 0) {\n+        bestMatchSkeletonFieldWidth[LOW_A - PATTERN_CHAR_BASE] = 1;\n+    }\n+    if (adjustedPtn.indexOf(LOW_B) != -1 && bestMatchSkeletonFieldWidth[LOW_B - PATTERN_CHAR_BASE] == 0) {\n+        bestMatchSkeletonFieldWidth[LOW_B - PATTERN_CHAR_BASE] = 1;\n+     }\n@@ -1549,2 +1730,0 @@\n-    const int8_t PATTERN_CHAR_BASE = 0x41;\n-\n@@ -1616,0 +1795,33 @@\n+void\n+DateIntervalFormat::findReplaceInPattern(UnicodeString& targetString,\n+                                         const UnicodeString& strToReplace,\n+                                         const UnicodeString& strToReplaceWith) {\n+    int32_t firstQuoteIndex = targetString.indexOf(u'\\'');\n+    if (firstQuoteIndex == -1) {\n+        targetString.findAndReplace(strToReplace, strToReplaceWith);\n+    } else {\n+        UnicodeString result;\n+        UnicodeString source = targetString;\n+\n+        while (firstQuoteIndex >= 0) {\n+            int32_t secondQuoteIndex = source.indexOf(u'\\'', firstQuoteIndex + 1);\n+            if (secondQuoteIndex == -1) {\n+                secondQuoteIndex = source.length() - 1;\n+            }\n+\n+            UnicodeString unquotedText(source, 0, firstQuoteIndex);\n+            UnicodeString quotedText(source, firstQuoteIndex, secondQuoteIndex - firstQuoteIndex + 1);\n+\n+            unquotedText.findAndReplace(strToReplace, strToReplaceWith);\n+            result += unquotedText;\n+            result += quotedText;\n+\n+            source.remove(0, secondQuoteIndex + 1);\n+            firstQuoteIndex = source.indexOf(u'\\'');\n+        }\n+        source.findAndReplace(strToReplace, strToReplaceWith);\n+        result += source;\n+        targetString = result;\n+    }\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dtitvfmt.cpp","additions":312,"deletions":100,"binary":false,"changes":412,"status":"modified"},{"patch":"@@ -45,1 +45,3 @@\n-#define PRINTMESG(msg) { std::cout << \"(\" << __FILE__ << \":\" << __LINE__ << \") \" << msg << \"\\n\"; }\n+#define PRINTMESG(msg) UPRV_BLOCK_MACRO_BEGIN { \\\n+    std::cout << \"(\" << __FILE__ << \":\" << __LINE__ << \") \" << msg << \"\\n\"; \\\n+} UPRV_BLOCK_MACRO_END\n@@ -51,0 +53,1 @@\n+static const char gGenericTag[]=\"generic\";\n@@ -66,1 +69,1 @@\n-    fIntervalPatterns(NULL)\n+    fIntervalPatterns(nullptr)\n@@ -76,1 +79,1 @@\n-    fIntervalPatterns(NULL)\n+    fIntervalPatterns(nullptr)\n@@ -126,1 +129,1 @@\n-    fIntervalPatterns(NULL)\n+    fIntervalPatterns(nullptr)\n@@ -161,1 +164,1 @@\n-    fIntervalPatterns = NULL;\n+    fIntervalPatterns = nullptr;\n@@ -189,1 +192,1 @@\n-    if ( patternsOfOneSkeleton != NULL ) {\n+    if ( patternsOfOneSkeleton != nullptr ) {\n@@ -339,0 +342,3 @@\n+            } else if (c0 == 'B') {\n+                \/\/ TODO: Using AM\/PM as a proxy for flexible day period isn't really correct, but it's close\n+                return UCAL_AM_PM;\n@@ -363,1 +369,1 @@\n-        if (patternsOfOneSkeleton == NULL || patternsOfOneSkeleton[index].isEmpty()) {\n+        if (patternsOfOneSkeleton == nullptr || patternsOfOneSkeleton[index].isEmpty()) {\n@@ -398,2 +404,2 @@\n-    (void)ures_getFunctionalEquivalent(localeWithCalendarKey, ULOC_LOCALE_IDENTIFIER_CAPACITY, NULL,\n-                                     \"calendar\", \"calendar\", locName, NULL, FALSE, &status);\n+    (void)ures_getFunctionalEquivalent(localeWithCalendarKey, ULOC_LOCALE_IDENTIFIER_CAPACITY, nullptr,\n+                                     \"calendar\", \"calendar\", locName, nullptr, FALSE, &status);\n@@ -411,1 +417,1 @@\n-    rb = ures_open(NULL, locName, &status);\n+    rb = ures_open(nullptr, locName, &status);\n@@ -415,1 +421,1 @@\n-    calBundle = ures_getByKeyWithFallback(rb, gCalendarTag, NULL, &status);\n+    calBundle = ures_getByKeyWithFallback(rb, gCalendarTag, nullptr, &status);\n@@ -422,1 +428,1 @@\n-        const UChar* resStr;\n+        const UChar* resStr = nullptr;\n@@ -424,1 +430,1 @@\n-        calTypeBundle = ures_getByKeyWithFallback(calBundle, calendarTypeToUse, NULL, &status);\n+        calTypeBundle = ures_getByKeyWithFallback(calBundle, calendarTypeToUse, nullptr, &status);\n@@ -426,3 +432,3 @@\n-                                                     gIntervalDateTimePatternTag, NULL, &status);\n-        resStr = ures_getStringByKeyWithFallback(itvDtPtnResource, gFallbackPatternTag,\n-                                                 &resStrLen, &status);\n+                                                     gIntervalDateTimePatternTag, nullptr, &status);\n+        \/\/ TODO(ICU-20400): After the fixing, we should find the \"fallback\" from\n+        \/\/ the rb directly by the path \"calendar\/${calendar}\/intervalFormats\/fallback\".\n@@ -430,0 +436,22 @@\n+            resStr = ures_getStringByKeyWithFallback(itvDtPtnResource, gFallbackPatternTag,\n+                                                     &resStrLen, &status);\n+            if ( U_FAILURE(status) ) {\n+                \/\/ Try to find \"fallback\" from \"generic\" to work around the bug in\n+                \/\/ ures_getByKeyWithFallback\n+                UErrorCode localStatus = U_ZERO_ERROR;\n+                UResourceBundle *genericCalBundle =\n+                    ures_getByKeyWithFallback(calBundle, gGenericTag, nullptr, &localStatus);\n+                UResourceBundle *genericItvDtPtnResource =\n+                    ures_getByKeyWithFallback(\n+                        genericCalBundle, gIntervalDateTimePatternTag, nullptr, &localStatus);\n+                resStr = ures_getStringByKeyWithFallback(\n+                    genericItvDtPtnResource, gFallbackPatternTag, &resStrLen, &localStatus);\n+                ures_close(genericItvDtPtnResource);\n+                ures_close(genericCalBundle);\n+                if ( U_SUCCESS(localStatus) ) {\n+                    status = U_USING_FALLBACK_WARNING;;\n+                }\n+            }\n+        }\n+\n+        if ( U_SUCCESS(status) && (resStr != nullptr)) {\n@@ -487,1 +515,1 @@\n-    if ( patternsOfOneSkeleton == NULL ) {\n+    if ( patternsOfOneSkeleton == nullptr ) {\n@@ -489,0 +517,4 @@\n+        if (patternsOfOneSkeleton == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n@@ -568,2 +600,0 @@\n-    const UChar CHAR_V = 0x0076;\n-    const UChar CHAR_Z = 0x007A;\n@@ -571,4 +601,5 @@\n-    \/\/ hack for 'v' and 'z'.\n-    \/\/ resource bundle only have time skeletons ending with 'v',\n-    \/\/ but not for time skeletons ending with 'z'.\n-    UBool replaceZWithV = false;\n+    \/\/ hack for certain alternate characters\n+    \/\/ resource bundles only have time skeletons containing 'v', 'h', and 'H'\n+    \/\/ but not time skeletons containing 'z', 'K', or 'k'\n+    \/\/ the skeleton may also include 'a' or 'b', which never occur in the resource bundles, so strip them out too\n+    UBool replacedAlternateChars = false;\n@@ -577,1 +608,1 @@\n-    if ( skeleton.indexOf(CHAR_Z) != -1 ) {\n+    if ( skeleton.indexOf(LOW_Z) != -1 || skeleton.indexOf(LOW_K) != -1 || skeleton.indexOf(CAP_K) != -1 || skeleton.indexOf(LOW_A) != -1 || skeleton.indexOf(LOW_B) != -1 ) {\n@@ -579,1 +610,5 @@\n-        copySkeleton.findAndReplace(UnicodeString(CHAR_Z), UnicodeString(CHAR_V));\n+        copySkeleton.findAndReplace(UnicodeString(LOW_Z), UnicodeString(LOW_V));\n+        copySkeleton.findAndReplace(UnicodeString(LOW_K), UnicodeString(CAP_H));\n+        copySkeleton.findAndReplace(UnicodeString(CAP_K), UnicodeString(LOW_H));\n+        copySkeleton.findAndReplace(UnicodeString(LOW_A), UnicodeString());\n+        copySkeleton.findAndReplace(UnicodeString(LOW_B), UnicodeString());\n@@ -581,1 +616,1 @@\n-        replaceZWithV = true;\n+        replacedAlternateChars = true;\n@@ -586,1 +621,1 @@\n-    const UnicodeString* bestSkeleton = NULL;\n+    const UnicodeString* bestSkeleton = nullptr;\n@@ -590,1 +625,1 @@\n-    \/\/ 2 means only z\/v differs\n+    \/\/ 2 means only z\/v, h\/K, or H\/k differs\n@@ -596,2 +631,2 @@\n-    const UHashElement* elem = NULL;\n-    while ( (elem = fIntervalPatterns->nextElement(pos)) != NULL ) {\n+    const UHashElement* elem = nullptr;\n+    while ( (elem = fIntervalPatterns->nextElement(pos)) != nullptr ) {\n@@ -646,1 +681,1 @@\n-    if ( replaceZWithV && bestMatchDistanceInfo != -1 ) {\n+    if ( replacedAlternateChars && bestMatchDistanceInfo != -1 ) {\n@@ -689,0 +724,3 @@\n+      case UCAL_MILLISECOND:\n+        index = kIPI_MILLISECOND;\n+        break;\n@@ -700,1 +738,1 @@\n-    if ( hTable == NULL ) {\n+    if ( hTable == nullptr ) {\n@@ -704,2 +742,2 @@\n-    const UHashElement* element = NULL;\n-    while ( (element = hTable->nextElement(pos)) != NULL ) {\n+    const UHashElement* element = nullptr;\n+    while ( (element = hTable->nextElement(pos)) != nullptr ) {\n@@ -743,1 +781,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -746,1 +784,1 @@\n-    if ( (hTable = new Hashtable(FALSE, status)) == NULL ) {\n+    if ( (hTable = new Hashtable(FALSE, status)) == nullptr ) {\n@@ -748,1 +786,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -752,1 +790,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -767,1 +805,1 @@\n-    const UHashElement* element = NULL;\n+    const UHashElement* element = nullptr;\n@@ -769,1 +807,1 @@\n-        while ( (element = source->nextElement(pos)) != NULL ) {\n+        while ( (element = source->nextElement(pos)) != nullptr ) {\n@@ -775,0 +813,4 @@\n+            if (copy == nullptr) {\n+                status = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dtitvinf.cpp","additions":82,"deletions":40,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"unicode\/region.h\"\n@@ -313,0 +314,10 @@\n+DateTimePatternGenerator* U_EXPORT2\n+DateTimePatternGenerator::createInstanceNoStdPat(const Locale& locale, UErrorCode& status) {\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+    LocalPointer<DateTimePatternGenerator> result(\n+            new DateTimePatternGenerator(locale, status, true), status);\n+    return U_SUCCESS(status) ? result.orphan() : nullptr;\n+}\n+\n@@ -326,0 +337,1 @@\n+    fDefaultHourFormatChar(0),\n@@ -337,1 +349,1 @@\n-DateTimePatternGenerator::DateTimePatternGenerator(const Locale& locale, UErrorCode &status) :\n+DateTimePatternGenerator::DateTimePatternGenerator(const Locale& locale, UErrorCode &status, UBool skipStdPatterns) :\n@@ -340,0 +352,1 @@\n+    fDefaultHourFormatChar(0),\n@@ -350,1 +363,1 @@\n-        initData(locale, status);\n+        initData(locale, status, skipStdPatterns);\n@@ -358,0 +371,1 @@\n+    fDefaultHourFormatChar(0),\n@@ -488,1 +502,1 @@\n-DateTimePatternGenerator::initData(const Locale& locale, UErrorCode &status) {\n+DateTimePatternGenerator::initData(const Locale& locale, UErrorCode &status, UBool skipStdPatterns) {\n@@ -494,1 +508,3 @@\n-    addICUPatterns(locale, status);\n+    if (!skipStdPatterns) { \/\/ skip to prevent circular dependency when called from SimpleDateFormat::construct\n+        addICUPatterns(locale, status);\n+    }\n@@ -616,0 +632,15 @@\n+static int32_t* getAllowedHourFormatsLangCountry(const char* language, const char* country, UErrorCode& status) {\n+    CharString langCountry;\n+    langCountry.append(language, status);\n+    langCountry.append('_', status);\n+    langCountry.append(country, status);\n+\n+    int32_t* allowedFormats;\n+    allowedFormats = (int32_t *)uhash_get(localeToAllowedHourFormatsMap, langCountry.data());\n+    if (allowedFormats == nullptr) {\n+        allowedFormats = (int32_t *)uhash_get(localeToAllowedHourFormatsMap, const_cast<char *>(country));\n+    }\n+\n+    return allowedFormats;\n+}\n+\n@@ -618,4 +649,19 @@\n-    Locale maxLocale(locale);\n-    maxLocale.addLikelySubtags(status);\n-    if (U_FAILURE(status)) {\n-        return;\n+\n+    const char *language = locale.getLanguage();\n+    const char *country = locale.getCountry();\n+    Locale maxLocale;  \/\/ must be here for correct lifetime\n+    if (*language == '\\0' || *country == '\\0') {\n+        maxLocale = locale;\n+        UErrorCode localStatus = U_ZERO_ERROR;\n+        maxLocale.addLikelySubtags(localStatus);\n+        if (U_SUCCESS(localStatus)) {\n+            language = maxLocale.getLanguage();\n+            country = maxLocale.getCountry();\n+        }\n+    }\n+    if (*language == '\\0') {\n+        \/\/ Unexpected, but fail gracefully\n+        language = \"und\";\n+    }\n+    if (*country == '\\0') {\n+        country = \"001\";\n@@ -624,3 +670,1 @@\n-    const char *country = maxLocale.getCountry();\n-    if (*country == '\\0') { country = \"001\"; }\n-    const char *language = maxLocale.getLanguage();\n+    int32_t* allowedFormats = getAllowedHourFormatsLangCountry(language, country, status);\n@@ -628,4 +672,3 @@\n-    CharString langCountry;\n-    langCountry.append(language, static_cast<int32_t>(uprv_strlen(language)), status);\n-    langCountry.append('_', status);\n-    langCountry.append(country, static_cast<int32_t>(uprv_strlen(country)), status);\n+    \/\/ We need to check if there is an hour cycle on locale\n+    char buffer[8];\n+    int32_t count = locale.getKeywordValue(\"hours\", buffer, sizeof(buffer), status);\n@@ -633,2 +676,14 @@\n-    int32_t *allowedFormats;\n-    allowedFormats = (int32_t *)uhash_get(localeToAllowedHourFormatsMap, langCountry.data());\n+    fDefaultHourFormatChar = 0;\n+    if (U_SUCCESS(status) && count > 0) {\n+        if(uprv_strcmp(buffer, \"h24\") == 0) {\n+            fDefaultHourFormatChar = LOW_K;\n+        } else if(uprv_strcmp(buffer, \"h23\") == 0) {\n+            fDefaultHourFormatChar = CAP_H;\n+        } else if(uprv_strcmp(buffer, \"h12\") == 0) {\n+            fDefaultHourFormatChar = LOW_H;\n+        } else if(uprv_strcmp(buffer, \"h11\") == 0) {\n+            fDefaultHourFormatChar = CAP_K;\n+        }\n+    }\n+\n+    \/\/ Check if the region has an alias\n@@ -636,1 +691,6 @@\n-        allowedFormats = (int32_t *)uhash_get(localeToAllowedHourFormatsMap, const_cast<char *>(country));\n+        UErrorCode localStatus = U_ZERO_ERROR;\n+        const Region* region = Region::getInstance(country, localStatus);\n+        if (U_SUCCESS(localStatus)) {\n+            country = region->getRegionCode(); \/\/ the real region code\n+            allowedFormats = getAllowedHourFormatsLangCountry(language, country, status);\n+        }\n@@ -642,6 +702,8 @@\n-        switch (allowedFormats[0]) {\n-            case ALLOWED_HOUR_FORMAT_h: fDefaultHourFormatChar = LOW_H; break;\n-            case ALLOWED_HOUR_FORMAT_H: fDefaultHourFormatChar = CAP_H; break;\n-            case ALLOWED_HOUR_FORMAT_K: fDefaultHourFormatChar = CAP_K; break;\n-            case ALLOWED_HOUR_FORMAT_k: fDefaultHourFormatChar = LOW_K; break;\n-            default: fDefaultHourFormatChar = CAP_H; break;\n+        if (!fDefaultHourFormatChar) {\n+            switch (allowedFormats[0]) {\n+                case ALLOWED_HOUR_FORMAT_h: fDefaultHourFormatChar = LOW_H; break;\n+                case ALLOWED_HOUR_FORMAT_H: fDefaultHourFormatChar = CAP_H; break;\n+                case ALLOWED_HOUR_FORMAT_K: fDefaultHourFormatChar = CAP_K; break;\n+                case ALLOWED_HOUR_FORMAT_k: fDefaultHourFormatChar = LOW_K; break;\n+                default: fDefaultHourFormatChar = CAP_H; break;\n+            }\n@@ -649,0 +711,1 @@\n+\n@@ -656,1 +719,3 @@\n-        fDefaultHourFormatChar = CAP_H;\n+        if (!fDefaultHourFormatChar) {\n+            fDefaultHourFormatChar = CAP_H;\n+        }\n@@ -662,0 +727,25 @@\n+UDateFormatHourCycle\n+DateTimePatternGenerator::getDefaultHourCycle(UErrorCode& status) const {\n+    if (U_FAILURE(status)) {\n+        return UDAT_HOUR_CYCLE_23;\n+    }\n+    if (fDefaultHourFormatChar == 0) {\n+        \/\/ We need to return something, but the caller should ignore it\n+        \/\/ anyways since the returned status is a failure.\n+        status = U_UNSUPPORTED_ERROR;\n+        return UDAT_HOUR_CYCLE_23;\n+    }\n+    switch (fDefaultHourFormatChar) {\n+        case CAP_K:\n+            return UDAT_HOUR_CYCLE_11;\n+        case LOW_H:\n+            return UDAT_HOUR_CYCLE_12;\n+        case CAP_H:\n+            return UDAT_HOUR_CYCLE_23;\n+        case LOW_K:\n+            return UDAT_HOUR_CYCLE_24;\n+        default:\n+            UPRV_UNREACHABLE;\n+    }\n+}\n+\n@@ -790,0 +880,1 @@\n+        UErrorCode localStatus = U_ZERO_ERROR;\n@@ -801,2 +892,1 @@\n-            &err);\n-        if (U_FAILURE(err)) { return; }\n+            &localStatus);\n@@ -811,3 +901,8 @@\n-            &err);\n-        if (U_FAILURE(err)) { return; }\n-        if (calendarTypeLen < ULOC_KEYWORDS_CAPACITY) {\n+            &localStatus);\n+        \/\/ If the input locale was invalid, don't fail with missing resource error, instead\n+        \/\/ continue with default of Gregorian.\n+        if (U_FAILURE(localStatus) && localStatus != U_MISSING_RESOURCE_ERROR) {\n+            err = localStatus;\n+            return;\n+        }\n+        if (calendarTypeLen > 0 && calendarTypeLen < ULOC_KEYWORDS_CAPACITY) {\n@@ -817,1 +912,0 @@\n-        err = U_ZERO_ERROR;\n@@ -1450,0 +1544,1 @@\n+    int32_t bestMissingFieldMask = -1;\n@@ -1463,1 +1558,7 @@\n-        if (distance<bestDistance) {\n+        \/\/ Because we iterate over a map the order is undefined. Can change between implementations,\n+        \/\/ versions, and will very likely be different between Java and C\/C++.\n+        \/\/ So if we have patterns with the same distance we also look at the missingFieldMask,\n+        \/\/ and we favour the smallest one. Because the field is a bitmask this technically means we\n+        \/\/ favour differences in the \"least significant fields\". For example we prefer the one with differences\n+        \/\/ in seconds field vs one with difference in the hours field.\n+        if (distance<bestDistance || (distance==bestDistance && bestMissingFieldMask<tempInfo.missingFieldMask)) {\n@@ -1465,0 +1566,1 @@\n+            bestMissingFieldMask=tempInfo.missingFieldMask;\n@@ -1517,2 +1619,2 @@\n-                    \/\/ - \"reqField\" is the field from the originally requested skeleton, with length\n-                    \/\/ \"reqFieldLen\".\n+                    \/\/ - \"reqField\" is the field from the originally requested skeleton after replacement\n+                    \/\/ of metacharacters 'j', 'C' and 'J', with length \"reqFieldLen\".\n@@ -1522,1 +1624,1 @@\n-                    \/\/ skeleton, except in the case of UDATPG_HOUR_FIELD or UDATPG_MONTH_FIELD or\n+                    \/\/ skeleton, except in the case of UDATPG_MONTH_FIELD or\n@@ -1524,1 +1626,3 @@\n-                    \/\/ of characters from the  found pattern.\n+                    \/\/ of characters from the found pattern. In some cases of UDATPG_HOUR_FIELD,\n+                    \/\/ there is adjustment following the \"defaultHourFormatChar\". There is explanation\n+                    \/\/ how it is done below.\n@@ -1562,2 +1666,20 @@\n-                    if (typeValue == UDATPG_HOUR_FIELD && (flags & kDTPGSkeletonUsesCapJ) != 0) {\n-                        c = fDefaultHourFormatChar;\n+                    if (typeValue == UDATPG_HOUR_FIELD && fDefaultHourFormatChar != 0) {\n+                        \/\/ The adjustment here is required to match spec (https:\/\/www.unicode.org\/reports\/tr35\/tr35-dates.html#dfst-hour).\n+                        \/\/ It is necessary to match the hour-cycle preferred by the Locale.\n+                        \/\/ Given that, we need to do the following adjustments:\n+                        \/\/ 1. When hour-cycle is h11 it should replace 'h' by 'K'.\n+                        \/\/ 2. When hour-cycle is h23 it should replace 'H' by 'k'.\n+                        \/\/ 3. When hour-cycle is h24 it should replace 'k' by 'H'.\n+                        \/\/ 4. When hour-cycle is h12 it should replace 'K' by 'h'.\n+\n+                        if ((flags & kDTPGSkeletonUsesCapJ) != 0 || reqFieldChar == fDefaultHourFormatChar) {\n+                            c = fDefaultHourFormatChar;\n+                        } else if (reqFieldChar == LOW_H && fDefaultHourFormatChar == CAP_K) {\n+                            c = CAP_K;\n+                        } else if (reqFieldChar == CAP_H && fDefaultHourFormatChar == LOW_K) {\n+                            c = LOW_K;\n+                        } else if (reqFieldChar == LOW_K && fDefaultHourFormatChar == CAP_H) {\n+                            c = CAP_H;\n+                        } else if (reqFieldChar == CAP_K && fDefaultHourFormatChar == LOW_H) {\n+                            c = LOW_H;\n+                        }\n@@ -1565,0 +1687,1 @@\n+\n@@ -2089,0 +2212,5 @@\n+DateTimeMatcher& DateTimeMatcher::operator=(const DateTimeMatcher& other) {\n+    copyFrom(other.skeleton);\n+    return *this;\n+}\n+\n@@ -2133,0 +2261,27 @@\n+\n+    \/\/ #20739, we have a skeleton with minutes and milliseconds, but no seconds\n+    \/\/\n+    \/\/ Theoretically we would need to check and fix all fields with \"gaps\":\n+    \/\/ for example year-day (no month), month-hour (no day), and so on, All the possible field combinations.\n+    \/\/ Plus some smartness: year + hour => should we add month, or add day-of-year?\n+    \/\/ What about month + day-of-week, or month + am\/pm indicator.\n+    \/\/ I think beyond a certain point we should not try to fix bad developer input and try guessing what they mean.\n+    \/\/ Garbage in, garbage out.\n+    if (!skeletonResult.original.isFieldEmpty(UDATPG_MINUTE_FIELD)\n+        && !skeletonResult.original.isFieldEmpty(UDATPG_FRACTIONAL_SECOND_FIELD)\n+        && skeletonResult.original.isFieldEmpty(UDATPG_SECOND_FIELD)) {\n+        \/\/ Force the use of seconds\n+        for (i = 0; dtTypes[i].patternChar != 0; i++) {\n+            if (dtTypes[i].field == UDATPG_SECOND_FIELD) {\n+                \/\/ first entry for UDATPG_SECOND_FIELD\n+                skeletonResult.original.populate(UDATPG_SECOND_FIELD, dtTypes[i].patternChar, dtTypes[i].minLen);\n+                skeletonResult.baseOriginal.populate(UDATPG_SECOND_FIELD, dtTypes[i].patternChar, dtTypes[i].minLen);\n+                \/\/ We add value.length, same as above, when type is first initialized.\n+                \/\/ The value we want to \"fake\" here is \"s\", and 1 means \"s\".length()\n+                int16_t subField = dtTypes[i].type;\n+                skeletonResult.type[UDATPG_SECOND_FIELD] = (subField > 0) ? subField + 1 : subField;\n+                break;\n+            }\n+        }\n+    }\n+\n@@ -2546,1 +2701,2 @@\n-PtnSkeleton::PtnSkeleton() {\n+PtnSkeleton::PtnSkeleton()\n+    : addedDefaultDayPeriod(FALSE) {\n@@ -2557,0 +2713,1 @@\n+    addedDefaultDayPeriod = other.addedDefaultDayPeriod;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dtptngen.cpp","additions":196,"deletions":39,"binary":false,"changes":235,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-    static int32_t getCanonicalIndex(const UnicodeString& s) { return getCanonicalIndex(s, TRUE); }\n+    static int32_t getCanonicalIndex(const UnicodeString& s) { return getCanonicalIndex(s, true); }\n@@ -241,0 +241,1 @@\n+    DateTimeMatcher& operator=(const DateTimeMatcher& other);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/dtptngen_impl.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-Transliterator* EscapeTransliterator::clone() const {\n+EscapeTransliterator* EscapeTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/esctrn.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    virtual Transliterator* clone() const;\n+    virtual EscapeTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/esctrn.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-Calendar*\n+EthiopicCalendar*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ethpccal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    virtual Calendar* clone() const;\n+    virtual EthiopicCalendar* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ethpccal.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -739,1 +739,1 @@\n-      } else if (fDecimalQuantity->isZero()) {\n+      } else if (fDecimalQuantity->isZeroish()) {\n@@ -898,1 +898,1 @@\n-U_DRAFT UFormattable* U_EXPORT2\n+U_CAPI UFormattable* U_EXPORT2\n@@ -911,1 +911,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -918,1 +918,1 @@\n-U_INTERNAL UFormattableType U_EXPORT2\n+U_CAPI UFormattableType U_EXPORT2\n@@ -928,1 +928,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -934,1 +934,1 @@\n-U_DRAFT UDate U_EXPORT2\n+U_CAPI UDate U_EXPORT2\n@@ -941,1 +941,1 @@\n-U_DRAFT double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -948,1 +948,1 @@\n-U_DRAFT int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -956,1 +956,1 @@\n-U_DRAFT const void *U_EXPORT2\n+U_CAPI const void *U_EXPORT2\n@@ -969,1 +969,1 @@\n-U_DRAFT const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -989,1 +989,1 @@\n-U_DRAFT int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -998,1 +998,1 @@\n-U_DRAFT UFormattable * U_EXPORT2\n+U_CAPI UFormattable * U_EXPORT2\n@@ -1013,1 +1013,1 @@\n-U_DRAFT const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1034,1 +1034,1 @@\n-U_DRAFT int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/fmtable.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-\/\/ This is just a grandfathered API.\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/fmtable_cnv.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#error U_I18N_IMPLEMENTATION not set - must be set for all ICU source files in i18n\/ - see http:\/\/userguide.icu-project.org\/howtouseicu\n+#error U_I18N_IMPLEMENTATION not set - must be set for all ICU source files in i18n\/ - see https:\/\/unicode-org.github.io\/icu\/userguide\/howtouseicu\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/format.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,449 @@\n+\/\/ © 2017 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"formatted_string_builder.h\"\n+#include \"unicode\/ustring.h\"\n+#include \"unicode\/utf16.h\"\n+#include \"unicode\/unum.h\" \/\/ for UNumberFormatFields literals\n+\n+namespace {\n+\n+\/\/ A version of uprv_memcpy that checks for length 0.\n+\/\/ By default, uprv_memcpy requires a length of at least 1.\n+inline void uprv_memcpy2(void* dest, const void* src, size_t len) {\n+    if (len > 0) {\n+        uprv_memcpy(dest, src, len);\n+    }\n+}\n+\n+\/\/ A version of uprv_memmove that checks for length 0.\n+\/\/ By default, uprv_memmove requires a length of at least 1.\n+inline void uprv_memmove2(void* dest, const void* src, size_t len) {\n+    if (len > 0) {\n+        uprv_memmove(dest, src, len);\n+    }\n+}\n+\n+} \/\/ namespace\n+\n+\n+U_NAMESPACE_BEGIN\n+\n+FormattedStringBuilder::FormattedStringBuilder() {\n+#if U_DEBUG\n+    \/\/ Initializing the memory to non-zero helps catch some bugs that involve\n+    \/\/ reading from an improperly terminated string.\n+    for (int32_t i=0; i<getCapacity(); i++) {\n+        getCharPtr()[i] = 1;\n+    }\n+#endif\n+}\n+\n+FormattedStringBuilder::~FormattedStringBuilder() {\n+    if (fUsingHeap) {\n+        uprv_free(fChars.heap.ptr);\n+        uprv_free(fFields.heap.ptr);\n+    }\n+}\n+\n+FormattedStringBuilder::FormattedStringBuilder(const FormattedStringBuilder &other) {\n+    *this = other;\n+}\n+\n+FormattedStringBuilder &FormattedStringBuilder::operator=(const FormattedStringBuilder &other) {\n+    \/\/ Check for self-assignment\n+    if (this == &other) {\n+        return *this;\n+    }\n+\n+    \/\/ Continue with deallocation and copying\n+    if (fUsingHeap) {\n+        uprv_free(fChars.heap.ptr);\n+        uprv_free(fFields.heap.ptr);\n+        fUsingHeap = false;\n+    }\n+\n+    int32_t capacity = other.getCapacity();\n+    if (capacity > DEFAULT_CAPACITY) {\n+        \/\/ FIXME: uprv_malloc\n+        \/\/ C++ note: malloc appears in two places: here and in prepareForInsertHelper.\n+        auto newChars = static_cast<char16_t *> (uprv_malloc(sizeof(char16_t) * capacity));\n+        auto newFields = static_cast<Field *>(uprv_malloc(sizeof(Field) * capacity));\n+        if (newChars == nullptr || newFields == nullptr) {\n+            \/\/ UErrorCode is not available; fail silently.\n+            uprv_free(newChars);\n+            uprv_free(newFields);\n+            *this = FormattedStringBuilder();  \/\/ can't fail\n+            return *this;\n+        }\n+\n+        fUsingHeap = true;\n+        fChars.heap.capacity = capacity;\n+        fChars.heap.ptr = newChars;\n+        fFields.heap.capacity = capacity;\n+        fFields.heap.ptr = newFields;\n+    }\n+\n+    uprv_memcpy2(getCharPtr(), other.getCharPtr(), sizeof(char16_t) * capacity);\n+    uprv_memcpy2(getFieldPtr(), other.getFieldPtr(), sizeof(Field) * capacity);\n+\n+    fZero = other.fZero;\n+    fLength = other.fLength;\n+    return *this;\n+}\n+\n+int32_t FormattedStringBuilder::length() const {\n+    return fLength;\n+}\n+\n+int32_t FormattedStringBuilder::codePointCount() const {\n+    return u_countChar32(getCharPtr() + fZero, fLength);\n+}\n+\n+UChar32 FormattedStringBuilder::getFirstCodePoint() const {\n+    if (fLength == 0) {\n+        return -1;\n+    }\n+    UChar32 cp;\n+    U16_GET(getCharPtr() + fZero, 0, 0, fLength, cp);\n+    return cp;\n+}\n+\n+UChar32 FormattedStringBuilder::getLastCodePoint() const {\n+    if (fLength == 0) {\n+        return -1;\n+    }\n+    int32_t offset = fLength;\n+    U16_BACK_1(getCharPtr() + fZero, 0, offset);\n+    UChar32 cp;\n+    U16_GET(getCharPtr() + fZero, 0, offset, fLength, cp);\n+    return cp;\n+}\n+\n+UChar32 FormattedStringBuilder::codePointAt(int32_t index) const {\n+    UChar32 cp;\n+    U16_GET(getCharPtr() + fZero, 0, index, fLength, cp);\n+    return cp;\n+}\n+\n+UChar32 FormattedStringBuilder::codePointBefore(int32_t index) const {\n+    int32_t offset = index;\n+    U16_BACK_1(getCharPtr() + fZero, 0, offset);\n+    UChar32 cp;\n+    U16_GET(getCharPtr() + fZero, 0, offset, fLength, cp);\n+    return cp;\n+}\n+\n+FormattedStringBuilder &FormattedStringBuilder::clear() {\n+    \/\/ TODO: Reset the heap here?\n+    fZero = getCapacity() \/ 2;\n+    fLength = 0;\n+    return *this;\n+}\n+\n+int32_t\n+FormattedStringBuilder::insertCodePoint(int32_t index, UChar32 codePoint, Field field, UErrorCode &status) {\n+    int32_t count = U16_LENGTH(codePoint);\n+    int32_t position = prepareForInsert(index, count, status);\n+    if (U_FAILURE(status)) {\n+        return count;\n+    }\n+    if (count == 1) {\n+        getCharPtr()[position] = (char16_t) codePoint;\n+        getFieldPtr()[position] = field;\n+    } else {\n+        getCharPtr()[position] = U16_LEAD(codePoint);\n+        getCharPtr()[position + 1] = U16_TRAIL(codePoint);\n+        getFieldPtr()[position] = getFieldPtr()[position + 1] = field;\n+    }\n+    return count;\n+}\n+\n+int32_t FormattedStringBuilder::insert(int32_t index, const UnicodeString &unistr, Field field,\n+                                    UErrorCode &status) {\n+    if (unistr.length() == 0) {\n+        \/\/ Nothing to insert.\n+        return 0;\n+    } else if (unistr.length() == 1) {\n+        \/\/ Fast path: insert using insertCodePoint.\n+        return insertCodePoint(index, unistr.charAt(0), field, status);\n+    } else {\n+        return insert(index, unistr, 0, unistr.length(), field, status);\n+    }\n+}\n+\n+int32_t\n+FormattedStringBuilder::insert(int32_t index, const UnicodeString &unistr, int32_t start, int32_t end,\n+                            Field field, UErrorCode &status) {\n+    int32_t count = end - start;\n+    int32_t position = prepareForInsert(index, count, status);\n+    if (U_FAILURE(status)) {\n+        return count;\n+    }\n+    for (int32_t i = 0; i < count; i++) {\n+        getCharPtr()[position + i] = unistr.charAt(start + i);\n+        getFieldPtr()[position + i] = field;\n+    }\n+    return count;\n+}\n+\n+int32_t\n+FormattedStringBuilder::splice(int32_t startThis, int32_t endThis,  const UnicodeString &unistr,\n+                            int32_t startOther, int32_t endOther, Field field, UErrorCode& status) {\n+    int32_t thisLength = endThis - startThis;\n+    int32_t otherLength = endOther - startOther;\n+    int32_t count = otherLength - thisLength;\n+    int32_t position;\n+    if (count > 0) {\n+        \/\/ Overall, chars need to be added.\n+        position = prepareForInsert(startThis, count, status);\n+    } else {\n+        \/\/ Overall, chars need to be removed or kept the same.\n+        position = remove(startThis, -count);\n+    }\n+    if (U_FAILURE(status)) {\n+        return count;\n+    }\n+    for (int32_t i = 0; i < otherLength; i++) {\n+        getCharPtr()[position + i] = unistr.charAt(startOther + i);\n+        getFieldPtr()[position + i] = field;\n+    }\n+    return count;\n+}\n+\n+int32_t FormattedStringBuilder::append(const FormattedStringBuilder &other, UErrorCode &status) {\n+    return insert(fLength, other, status);\n+}\n+\n+int32_t\n+FormattedStringBuilder::insert(int32_t index, const FormattedStringBuilder &other, UErrorCode &status) {\n+    if (this == &other) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return 0;\n+    }\n+    int32_t count = other.fLength;\n+    if (count == 0) {\n+        \/\/ Nothing to insert.\n+        return 0;\n+    }\n+    int32_t position = prepareForInsert(index, count, status);\n+    if (U_FAILURE(status)) {\n+        return count;\n+    }\n+    for (int32_t i = 0; i < count; i++) {\n+        getCharPtr()[position + i] = other.charAt(i);\n+        getFieldPtr()[position + i] = other.fieldAt(i);\n+    }\n+    return count;\n+}\n+\n+void FormattedStringBuilder::writeTerminator(UErrorCode& status) {\n+    int32_t position = prepareForInsert(fLength, 1, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    getCharPtr()[position] = 0;\n+    getFieldPtr()[position] = kUndefinedField;\n+    fLength--;\n+}\n+\n+int32_t FormattedStringBuilder::prepareForInsert(int32_t index, int32_t count, UErrorCode &status) {\n+    U_ASSERT(index >= 0);\n+    U_ASSERT(index <= fLength);\n+    U_ASSERT(count >= 0);\n+    if (index == 0 && fZero - count >= 0) {\n+        \/\/ Append to start\n+        fZero -= count;\n+        fLength += count;\n+        return fZero;\n+    } else if (index == fLength && fZero + fLength + count < getCapacity()) {\n+        \/\/ Append to end\n+        fLength += count;\n+        return fZero + fLength - count;\n+    } else {\n+        \/\/ Move chars around and\/or allocate more space\n+        return prepareForInsertHelper(index, count, status);\n+    }\n+}\n+\n+int32_t FormattedStringBuilder::prepareForInsertHelper(int32_t index, int32_t count, UErrorCode &status) {\n+    int32_t oldCapacity = getCapacity();\n+    int32_t oldZero = fZero;\n+    char16_t *oldChars = getCharPtr();\n+    Field *oldFields = getFieldPtr();\n+    if (fLength + count > oldCapacity) {\n+        if ((fLength + count) > INT32_MAX \/ 2) {\n+            \/\/ If we continue, then newCapacity will overlow int32_t in the next line.\n+            status = U_INPUT_TOO_LONG_ERROR;\n+            return -1;\n+        }\n+        int32_t newCapacity = (fLength + count) * 2;\n+        int32_t newZero = newCapacity \/ 2 - (fLength + count) \/ 2;\n+\n+        \/\/ C++ note: malloc appears in two places: here and in the assignment operator.\n+        auto newChars = static_cast<char16_t *> (uprv_malloc(sizeof(char16_t) * newCapacity));\n+        auto newFields = static_cast<Field *>(uprv_malloc(sizeof(Field) * newCapacity));\n+        if (newChars == nullptr || newFields == nullptr) {\n+            uprv_free(newChars);\n+            uprv_free(newFields);\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return -1;\n+        }\n+\n+        \/\/ First copy the prefix and then the suffix, leaving room for the new chars that the\n+        \/\/ caller wants to insert.\n+        \/\/ C++ note: memcpy is OK because the src and dest do not overlap.\n+        uprv_memcpy2(newChars + newZero, oldChars + oldZero, sizeof(char16_t) * index);\n+        uprv_memcpy2(newChars + newZero + index + count,\n+                oldChars + oldZero + index,\n+                sizeof(char16_t) * (fLength - index));\n+        uprv_memcpy2(newFields + newZero, oldFields + oldZero, sizeof(Field) * index);\n+        uprv_memcpy2(newFields + newZero + index + count,\n+                oldFields + oldZero + index,\n+                sizeof(Field) * (fLength - index));\n+\n+        if (fUsingHeap) {\n+            uprv_free(oldChars);\n+            uprv_free(oldFields);\n+        }\n+        fUsingHeap = true;\n+        fChars.heap.ptr = newChars;\n+        fChars.heap.capacity = newCapacity;\n+        fFields.heap.ptr = newFields;\n+        fFields.heap.capacity = newCapacity;\n+        fZero = newZero;\n+        fLength += count;\n+    } else {\n+        int32_t newZero = oldCapacity \/ 2 - (fLength + count) \/ 2;\n+\n+        \/\/ C++ note: memmove is required because src and dest may overlap.\n+        \/\/ First copy the entire string to the location of the prefix, and then move the suffix\n+        \/\/ to make room for the new chars that the caller wants to insert.\n+        uprv_memmove2(oldChars + newZero, oldChars + oldZero, sizeof(char16_t) * fLength);\n+        uprv_memmove2(oldChars + newZero + index + count,\n+                oldChars + newZero + index,\n+                sizeof(char16_t) * (fLength - index));\n+        uprv_memmove2(oldFields + newZero, oldFields + oldZero, sizeof(Field) * fLength);\n+        uprv_memmove2(oldFields + newZero + index + count,\n+                oldFields + newZero + index,\n+                sizeof(Field) * (fLength - index));\n+\n+        fZero = newZero;\n+        fLength += count;\n+    }\n+    U_ASSERT((fZero + index) >= 0);\n+    return fZero + index;\n+}\n+\n+int32_t FormattedStringBuilder::remove(int32_t index, int32_t count) {\n+    \/\/ TODO: Reset the heap here?  (If the string after removal can fit on stack?)\n+    int32_t position = index + fZero;\n+    U_ASSERT(position >= 0);\n+    uprv_memmove2(getCharPtr() + position,\n+            getCharPtr() + position + count,\n+            sizeof(char16_t) * (fLength - index - count));\n+    uprv_memmove2(getFieldPtr() + position,\n+            getFieldPtr() + position + count,\n+            sizeof(Field) * (fLength - index - count));\n+    fLength -= count;\n+    return position;\n+}\n+\n+UnicodeString FormattedStringBuilder::toUnicodeString() const {\n+    return UnicodeString(getCharPtr() + fZero, fLength);\n+}\n+\n+const UnicodeString FormattedStringBuilder::toTempUnicodeString() const {\n+    \/\/ Readonly-alias constructor:\n+    return UnicodeString(FALSE, getCharPtr() + fZero, fLength);\n+}\n+\n+UnicodeString FormattedStringBuilder::toDebugString() const {\n+    UnicodeString sb;\n+    sb.append(u\"<FormattedStringBuilder [\", -1);\n+    sb.append(toUnicodeString());\n+    sb.append(u\"] [\", -1);\n+    for (int i = 0; i < fLength; i++) {\n+        if (fieldAt(i) == kUndefinedField) {\n+            sb.append(u'n');\n+        } else if (fieldAt(i).getCategory() == UFIELD_CATEGORY_NUMBER) {\n+            char16_t c;\n+            switch (fieldAt(i).getField()) {\n+                case UNUM_SIGN_FIELD:\n+                    c = u'-';\n+                    break;\n+                case UNUM_INTEGER_FIELD:\n+                    c = u'i';\n+                    break;\n+                case UNUM_FRACTION_FIELD:\n+                    c = u'f';\n+                    break;\n+                case UNUM_EXPONENT_FIELD:\n+                    c = u'e';\n+                    break;\n+                case UNUM_EXPONENT_SIGN_FIELD:\n+                    c = u'+';\n+                    break;\n+                case UNUM_EXPONENT_SYMBOL_FIELD:\n+                    c = u'E';\n+                    break;\n+                case UNUM_DECIMAL_SEPARATOR_FIELD:\n+                    c = u'.';\n+                    break;\n+                case UNUM_GROUPING_SEPARATOR_FIELD:\n+                    c = u',';\n+                    break;\n+                case UNUM_PERCENT_FIELD:\n+                    c = u'%';\n+                    break;\n+                case UNUM_PERMILL_FIELD:\n+                    c = u'‰';\n+                    break;\n+                case UNUM_CURRENCY_FIELD:\n+                    c = u'$';\n+                    break;\n+                default:\n+                    c = u'0' + fieldAt(i).getField();\n+                    break;\n+            }\n+            sb.append(c);\n+        } else {\n+            sb.append(u'0' + fieldAt(i).getCategory());\n+        }\n+    }\n+    sb.append(u\"]>\", -1);\n+    return sb;\n+}\n+\n+const char16_t *FormattedStringBuilder::chars() const {\n+    return getCharPtr() + fZero;\n+}\n+\n+bool FormattedStringBuilder::contentEquals(const FormattedStringBuilder &other) const {\n+    if (fLength != other.fLength) {\n+        return false;\n+    }\n+    for (int32_t i = 0; i < fLength; i++) {\n+        if (charAt(i) != other.charAt(i) || fieldAt(i) != other.fieldAt(i)) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n+\n+bool FormattedStringBuilder::containsField(Field field) const {\n+    for (int32_t i = 0; i < fLength; i++) {\n+        if (field == fieldAt(i)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/formatted_string_builder.cpp","additions":449,"deletions":0,"binary":false,"changes":449,"status":"added"},{"patch":"@@ -0,0 +1,270 @@\n+\/\/ © 2017 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __NUMBER_STRINGBUILDER_H__\n+#define __NUMBER_STRINGBUILDER_H__\n+\n+\n+#include <cstdint>\n+#include <type_traits>\n+\n+#include \"cstring.h\"\n+#include \"uassert.h\"\n+#include \"fphdlimp.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+class FormattedValueStringBuilderImpl;\n+\n+\/**\n+ * A StringBuilder optimized for formatting. It implements the following key\n+ * features beyond a UnicodeString:\n+ *\n+ * <ol>\n+ * <li>Efficient prepend as well as append.\n+ * <li>Keeps track of Fields in an efficient manner.\n+ * <\/ol>\n+ *\n+ * See also FormattedValueStringBuilderImpl.\n+ *\n+ * @author sffc (Shane Carr)\n+ *\/\n+class U_I18N_API FormattedStringBuilder : public UMemory {\n+  private:\n+    static const int32_t DEFAULT_CAPACITY = 40;\n+\n+    template<typename T>\n+    union ValueOrHeapArray {\n+        T value[DEFAULT_CAPACITY];\n+        struct {\n+            T *ptr;\n+            int32_t capacity;\n+        } heap;\n+    };\n+\n+  public:\n+    FormattedStringBuilder();\n+\n+    ~FormattedStringBuilder();\n+\n+    FormattedStringBuilder(const FormattedStringBuilder &other);\n+\n+    \/\/ Convention: bottom 4 bits for field, top 4 bits for field category.\n+    \/\/ Field category 0 implies the number category so that the number field\n+    \/\/ literals can be directly passed as a Field type.\n+    \/\/ Exported as U_I18N_API so it can be used by other exports on Windows.\n+    struct U_I18N_API Field {\n+        uint8_t bits;\n+\n+        Field() = default;\n+        constexpr Field(uint8_t category, uint8_t field);\n+\n+        inline UFieldCategory getCategory() const;\n+        inline int32_t getField() const;\n+        inline bool isNumeric() const;\n+        inline bool isUndefined() const;\n+        inline bool operator==(const Field& other) const;\n+        inline bool operator!=(const Field& other) const;\n+    };\n+\n+    FormattedStringBuilder &operator=(const FormattedStringBuilder &other);\n+\n+    int32_t length() const;\n+\n+    int32_t codePointCount() const;\n+\n+    inline char16_t charAt(int32_t index) const {\n+        U_ASSERT(index >= 0);\n+        U_ASSERT(index < fLength);\n+        return getCharPtr()[fZero + index];\n+    }\n+\n+    inline Field fieldAt(int32_t index) const {\n+        U_ASSERT(index >= 0);\n+        U_ASSERT(index < fLength);\n+        return getFieldPtr()[fZero + index];\n+    }\n+\n+    UChar32 getFirstCodePoint() const;\n+\n+    UChar32 getLastCodePoint() const;\n+\n+    UChar32 codePointAt(int32_t index) const;\n+\n+    UChar32 codePointBefore(int32_t index) const;\n+\n+    FormattedStringBuilder &clear();\n+\n+    \/** Appends a UTF-16 code unit. *\/\n+    inline int32_t appendChar16(char16_t codeUnit, Field field, UErrorCode& status) {\n+        \/\/ appendCodePoint handles both code units and code points.\n+        return insertCodePoint(fLength, codeUnit, field, status);\n+    }\n+\n+    \/** Inserts a UTF-16 code unit. Note: insert at index 0 is very efficient. *\/\n+    inline int32_t insertChar16(int32_t index, char16_t codeUnit, Field field, UErrorCode& status) {\n+        \/\/ insertCodePoint handles both code units and code points.\n+        return insertCodePoint(index, codeUnit, field, status);\n+    }\n+\n+    \/** Appends a Unicode code point. *\/\n+    inline int32_t appendCodePoint(UChar32 codePoint, Field field, UErrorCode &status) {\n+        return insertCodePoint(fLength, codePoint, field, status);\n+    }\n+\n+    \/** Inserts a Unicode code point. Note: insert at index 0 is very efficient. *\/\n+    int32_t insertCodePoint(int32_t index, UChar32 codePoint, Field field, UErrorCode &status);\n+\n+    \/** Appends a string. *\/\n+    inline int32_t append(const UnicodeString &unistr, Field field, UErrorCode &status) {\n+        return insert(fLength, unistr, field, status);\n+    }\n+\n+    \/** Inserts a string. Note: insert at index 0 is very efficient. *\/\n+    int32_t insert(int32_t index, const UnicodeString &unistr, Field field, UErrorCode &status);\n+\n+    \/** Inserts a substring. Note: insert at index 0 is very efficient.\n+     *\n+     * @param start Start index of the substring of unistr to be inserted.\n+     * @param end End index of the substring of unistr to be inserted (exclusive).\n+     *\/\n+    int32_t insert(int32_t index, const UnicodeString &unistr, int32_t start, int32_t end, Field field,\n+                   UErrorCode &status);\n+\n+    \/** Deletes a substring and then inserts a string at that same position.\n+     * Similar to JavaScript Array.prototype.splice().\n+     *\n+     * @param startThis Start of the span to delete.\n+     * @param endThis End of the span to delete (exclusive).\n+     * @param unistr The string to insert at the deletion position.\n+     * @param startOther Start index of the substring of unistr to be inserted.\n+     * @param endOther End index of the substring of unistr to be inserted (exclusive).\n+     *\/\n+    int32_t splice(int32_t startThis, int32_t endThis,  const UnicodeString &unistr,\n+                   int32_t startOther, int32_t endOther, Field field, UErrorCode& status);\n+\n+    \/** Appends a formatted string. *\/\n+    int32_t append(const FormattedStringBuilder &other, UErrorCode &status);\n+\n+    \/** Inserts a formatted string. Note: insert at index 0 is very efficient. *\/\n+    int32_t insert(int32_t index, const FormattedStringBuilder &other, UErrorCode &status);\n+\n+    \/**\n+     * Ensures that the string buffer contains a NUL terminator. The NUL terminator does\n+     * not count toward the string length. Any further changes to the string (insert or\n+     * append) may invalidate the NUL terminator.\n+     *\n+     * You should call this method after the formatted string is completely built if you\n+     * plan to return a pointer to the string from a C API.\n+     *\/\n+    void writeTerminator(UErrorCode& status);\n+\n+    \/**\n+     * Gets a \"safe\" UnicodeString that can be used even after the FormattedStringBuilder is destructed.\n+     *\/\n+    UnicodeString toUnicodeString() const;\n+\n+    \/**\n+     * Gets an \"unsafe\" UnicodeString that is valid only as long as the FormattedStringBuilder is alive and\n+     * unchanged. Slightly faster than toUnicodeString().\n+     *\/\n+    const UnicodeString toTempUnicodeString() const;\n+\n+    UnicodeString toDebugString() const;\n+\n+    const char16_t *chars() const;\n+\n+    bool contentEquals(const FormattedStringBuilder &other) const;\n+\n+    bool containsField(Field field) const;\n+\n+  private:\n+    bool fUsingHeap = false;\n+    ValueOrHeapArray<char16_t> fChars;\n+    ValueOrHeapArray<Field> fFields;\n+    int32_t fZero = DEFAULT_CAPACITY \/ 2;\n+    int32_t fLength = 0;\n+\n+    inline char16_t *getCharPtr() {\n+        return fUsingHeap ? fChars.heap.ptr : fChars.value;\n+    }\n+\n+    inline const char16_t *getCharPtr() const {\n+        return fUsingHeap ? fChars.heap.ptr : fChars.value;\n+    }\n+\n+    inline Field *getFieldPtr() {\n+        return fUsingHeap ? fFields.heap.ptr : fFields.value;\n+    }\n+\n+    inline const Field *getFieldPtr() const {\n+        return fUsingHeap ? fFields.heap.ptr : fFields.value;\n+    }\n+\n+    inline int32_t getCapacity() const {\n+        return fUsingHeap ? fChars.heap.capacity : DEFAULT_CAPACITY;\n+    }\n+\n+    int32_t prepareForInsert(int32_t index, int32_t count, UErrorCode &status);\n+\n+    int32_t prepareForInsertHelper(int32_t index, int32_t count, UErrorCode &status);\n+\n+    int32_t remove(int32_t index, int32_t count);\n+\n+    friend class FormattedValueStringBuilderImpl;\n+};\n+\n+static_assert(\n+    std::is_pod<FormattedStringBuilder::Field>::value,\n+    \"Field should be a POD type for efficient initialization\");\n+\n+constexpr FormattedStringBuilder::Field::Field(uint8_t category, uint8_t field)\n+    : bits((\n+        U_ASSERT(category <= 0xf),\n+        U_ASSERT(field <= 0xf),\n+        static_cast<uint8_t>((category << 4) | field)\n+    )) {}\n+\n+\/**\n+ * Internal constant for the undefined field for use in FormattedStringBuilder.\n+ *\/\n+constexpr FormattedStringBuilder::Field kUndefinedField = {UFIELD_CATEGORY_UNDEFINED, 0};\n+\n+\/**\n+ * Internal field to signal \"numeric\" when fields are not supported in NumberFormat.\n+ *\/\n+constexpr FormattedStringBuilder::Field kGeneralNumericField = {UFIELD_CATEGORY_UNDEFINED, 1};\n+\n+inline UFieldCategory FormattedStringBuilder::Field::getCategory() const {\n+    return static_cast<UFieldCategory>(bits >> 4);\n+}\n+\n+inline int32_t FormattedStringBuilder::Field::getField() const {\n+    return bits & 0xf;\n+}\n+\n+inline bool FormattedStringBuilder::Field::isNumeric() const {\n+    return getCategory() == UFIELD_CATEGORY_NUMBER || *this == kGeneralNumericField;\n+}\n+\n+inline bool FormattedStringBuilder::Field::isUndefined() const {\n+    return getCategory() == UFIELD_CATEGORY_UNDEFINED;\n+}\n+\n+inline bool FormattedStringBuilder::Field::operator==(const Field& other) const {\n+    return bits == other.bits;\n+}\n+\n+inline bool FormattedStringBuilder::Field::operator!=(const Field& other) const {\n+    return bits != other.bits;\n+}\n+\n+U_NAMESPACE_END\n+\n+\n+#endif \/\/__NUMBER_STRINGBUILDER_H__\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/formatted_string_builder.h","additions":270,"deletions":0,"binary":false,"changes":270,"status":"added"},{"patch":"@@ -21,1 +21,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -70,1 +70,6 @@\n-\/** Implementation using FieldPositionHandler to accept fields. *\/\n+\/**\n+ * Implementation of FormattedValue using FieldPositionHandler to accept fields.\n+ *\n+ * TODO(ICU-20897): This class is unused. If it is not needed when fixing ICU-20897,\n+ * it should be deleted.\n+ *\/\n@@ -115,1 +120,28 @@\n-class FormattedValueNumberStringBuilderImpl : public UMemory, public FormattedValue {\n+\/\/ Internal struct that must be exported for MSVC\n+struct U_I18N_API SpanInfo {\n+    int32_t spanValue;\n+    int32_t length;\n+};\n+\n+\/\/ Export an explicit template instantiation of the MaybeStackArray that\n+\/\/    is used as a data member of CEBuffer.\n+\/\/\n+\/\/    When building DLLs for Windows this is required even though\n+\/\/    no direct access to the MaybeStackArray leaks out of the i18n library.\n+\/\/\n+\/\/ See digitlst.h, pluralaffix.h, datefmt.h, and others for similar examples.\n+\/\/\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+template class U_I18N_API MaybeStackArray<SpanInfo, 8>;\n+#endif\n+\n+\/**\n+ * Implementation of FormattedValue based on FormattedStringBuilder.\n+ *\n+ * The implementation currently revolves around numbers and number fields.\n+ * However, it can be generalized in the future when there is a need.\n+ *\n+ * @author sffc (Shane Carr)\n+ *\/\n+\/\/ Exported as U_I18N_API for tests\n+class U_I18N_API FormattedValueStringBuilderImpl : public UMemory, public FormattedValue {\n@@ -118,1 +150,1 @@\n-    FormattedValueNumberStringBuilderImpl(number::impl::Field numericField);\n+    FormattedValueStringBuilderImpl(FormattedStringBuilder::Field numericField);\n@@ -120,1 +152,1 @@\n-    virtual ~FormattedValueNumberStringBuilderImpl();\n+    virtual ~FormattedValueStringBuilderImpl();\n@@ -129,1 +161,4 @@\n-    inline number::impl::NumberStringBuilder& getStringRef() {\n+    \/\/ Additional helper functions:\n+    UBool nextFieldPosition(FieldPosition& fp, UErrorCode& status) const;\n+    void getAllFieldPositions(FieldPositionIteratorHandler& fpih, UErrorCode& status) const;\n+    inline FormattedStringBuilder& getStringRef() {\n@@ -132,2 +167,1 @@\n-\n-    inline const number::impl::NumberStringBuilder& getStringRef() const {\n+    inline const FormattedStringBuilder& getStringRef() const {\n@@ -137,0 +171,9 @@\n+    \/**\n+     * Adds additional metadata used for span fields.\n+     *\n+     * spanValue: the index of the list item, for example.\n+     * length: the length of the span, used to split adjacent fields.\n+     *\/\n+    void appendSpanInfo(int32_t spanValue, int32_t length, UErrorCode& status);\n+    void prependSpanInfo(int32_t spanValue, int32_t length, UErrorCode& status);\n+\n@@ -138,2 +181,9 @@\n-    number::impl::NumberStringBuilder fString;\n-    number::impl::Field fNumericField;\n+    FormattedStringBuilder fString;\n+    FormattedStringBuilder::Field fNumericField;\n+    MaybeStackArray<SpanInfo, 8> spanIndices;\n+\n+    bool nextPositionImpl(ConstrainedFieldPosition& cfpos, FormattedStringBuilder::Field numericField, UErrorCode& status) const;\n+    static bool isIntOrGroup(FormattedStringBuilder::Field field);\n+    static bool isTrimmable(FormattedStringBuilder::Field field);\n+    int32_t trimBack(int32_t limit) const;\n+    int32_t trimFront(int32_t start) const;\n@@ -196,1 +246,1 @@\n-        UPRV_FORMATTED_VALUE_METHOD_GUARD(FALSE) \\\n+        UPRV_FORMATTED_VALUE_METHOD_GUARD(false) \\\n@@ -215,1 +265,1 @@\n-    U_DRAFT const UFormattedValue* U_EXPORT2 \\\n+    U_CAPI const UFormattedValue* U_EXPORT2 \\\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/formattedval_impl.h","additions":62,"deletions":12,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -12,0 +12,1 @@\n+#include \"unicode\/ustring.h\"\n@@ -13,0 +14,5 @@\n+#include \"number_types.h\"\n+#include \"formatted_string_builder.h\"\n+#include \"number_utils.h\"\n+#include \"static_unicode_sets.h\"\n+#include \"unicode\/listformatter.h\"\n@@ -17,1 +23,4 @@\n-FormattedValueNumberStringBuilderImpl::FormattedValueNumberStringBuilderImpl(number::impl::Field numericField)\n+typedef FormattedStringBuilder::Field Field;\n+\n+\n+FormattedValueStringBuilderImpl::FormattedValueStringBuilderImpl(Field numericField)\n@@ -21,1 +30,1 @@\n-FormattedValueNumberStringBuilderImpl::~FormattedValueNumberStringBuilderImpl() {\n+FormattedValueStringBuilderImpl::~FormattedValueStringBuilderImpl() {\n@@ -25,1 +34,1 @@\n-UnicodeString FormattedValueNumberStringBuilderImpl::toString(UErrorCode&) const {\n+UnicodeString FormattedValueStringBuilderImpl::toString(UErrorCode&) const {\n@@ -29,1 +38,1 @@\n-UnicodeString FormattedValueNumberStringBuilderImpl::toTempString(UErrorCode&) const {\n+UnicodeString FormattedValueStringBuilderImpl::toTempString(UErrorCode&) const {\n@@ -33,1 +42,1 @@\n-Appendable& FormattedValueNumberStringBuilderImpl::appendTo(Appendable& appendable, UErrorCode&) const {\n+Appendable& FormattedValueStringBuilderImpl::appendTo(Appendable& appendable, UErrorCode&) const {\n@@ -38,1 +47,1 @@\n-UBool FormattedValueNumberStringBuilderImpl::nextPosition(ConstrainedFieldPosition& cfpos, UErrorCode& status) const {\n+UBool FormattedValueStringBuilderImpl::nextPosition(ConstrainedFieldPosition& cfpos, UErrorCode& status) const {\n@@ -40,1 +49,231 @@\n-    return fString.nextPosition(cfpos, fNumericField, status) ? TRUE : FALSE;\n+    return nextPositionImpl(cfpos, fNumericField, status) ? true : false;\n+}\n+\n+UBool FormattedValueStringBuilderImpl::nextFieldPosition(FieldPosition& fp, UErrorCode& status) const {\n+    int32_t rawField = fp.getField();\n+\n+    if (rawField == FieldPosition::DONT_CARE) {\n+        return false;\n+    }\n+\n+    if (rawField < 0 || rawField >= UNUM_FIELD_COUNT) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return false;\n+    }\n+\n+    ConstrainedFieldPosition cfpos;\n+    cfpos.constrainField(UFIELD_CATEGORY_NUMBER, rawField);\n+    cfpos.setState(UFIELD_CATEGORY_NUMBER, rawField, fp.getBeginIndex(), fp.getEndIndex());\n+    if (nextPositionImpl(cfpos, kUndefinedField, status)) {\n+        fp.setBeginIndex(cfpos.getStart());\n+        fp.setEndIndex(cfpos.getLimit());\n+        return true;\n+    }\n+\n+    \/\/ Special case: fraction should start after integer if fraction is not present\n+    if (rawField == UNUM_FRACTION_FIELD && fp.getEndIndex() == 0) {\n+        bool inside = false;\n+        int32_t i = fString.fZero;\n+        for (; i < fString.fZero + fString.fLength; i++) {\n+            if (isIntOrGroup(fString.getFieldPtr()[i]) || fString.getFieldPtr()[i] == Field(UFIELD_CATEGORY_NUMBER, UNUM_DECIMAL_SEPARATOR_FIELD)) {\n+                inside = true;\n+            } else if (inside) {\n+                break;\n+            }\n+        }\n+        fp.setBeginIndex(i - fString.fZero);\n+        fp.setEndIndex(i - fString.fZero);\n+    }\n+\n+    return false;\n+}\n+\n+void FormattedValueStringBuilderImpl::getAllFieldPositions(FieldPositionIteratorHandler& fpih,\n+                                               UErrorCode& status) const {\n+    ConstrainedFieldPosition cfpos;\n+    while (nextPositionImpl(cfpos, kUndefinedField, status)) {\n+        fpih.addAttribute(cfpos.getField(), cfpos.getStart(), cfpos.getLimit());\n+    }\n+}\n+\n+\/\/ Signal the end of the string using a field that doesn't exist and that is\n+\/\/ different from kUndefinedField, which is used for \"null field\".\n+static constexpr Field kEndField = Field(0xf, 0xf);\n+\n+bool FormattedValueStringBuilderImpl::nextPositionImpl(ConstrainedFieldPosition& cfpos, Field numericField, UErrorCode& \/*status*\/) const {\n+    int32_t fieldStart = -1;\n+    Field currField = kUndefinedField;\n+    for (int32_t i = fString.fZero + cfpos.getLimit(); i <= fString.fZero + fString.fLength; i++) {\n+        Field _field = (i < fString.fZero + fString.fLength) ? fString.getFieldPtr()[i] : kEndField;\n+        \/\/ Case 1: currently scanning a field.\n+        if (currField != kUndefinedField) {\n+            if (currField != _field) {\n+                int32_t end = i - fString.fZero;\n+                \/\/ Grouping separators can be whitespace; don't throw them out!\n+                if (isTrimmable(currField)) {\n+                    end = trimBack(i - fString.fZero);\n+                }\n+                if (end <= fieldStart) {\n+                    \/\/ Entire field position is ignorable; skip.\n+                    fieldStart = -1;\n+                    currField = kUndefinedField;\n+                    i--;  \/\/ look at this index again\n+                    continue;\n+                }\n+                int32_t start = fieldStart;\n+                if (isTrimmable(currField)) {\n+                    start = trimFront(start);\n+                }\n+                cfpos.setState(currField.getCategory(), currField.getField(), start, end);\n+                return true;\n+            }\n+            continue;\n+        }\n+        \/\/ Special case: coalesce the INTEGER if we are pointing at the end of the INTEGER.\n+        if (cfpos.matchesField(UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD)\n+                && i > fString.fZero\n+                \/\/ don't return the same field twice in a row:\n+                && i - fString.fZero > cfpos.getLimit()\n+                && isIntOrGroup(fString.getFieldPtr()[i - 1])\n+                && !isIntOrGroup(_field)) {\n+            int j = i - 1;\n+            for (; j >= fString.fZero && isIntOrGroup(fString.getFieldPtr()[j]); j--) {}\n+            cfpos.setState(\n+                UFIELD_CATEGORY_NUMBER,\n+                UNUM_INTEGER_FIELD,\n+                j - fString.fZero + 1,\n+                i - fString.fZero);\n+            return true;\n+        }\n+        \/\/ Special case: coalesce NUMERIC if we are pointing at the end of the NUMERIC.\n+        if (numericField != kUndefinedField\n+                && cfpos.matchesField(numericField.getCategory(), numericField.getField())\n+                && i > fString.fZero\n+                \/\/ don't return the same field twice in a row:\n+                && (i - fString.fZero > cfpos.getLimit()\n+                    || cfpos.getCategory() != numericField.getCategory()\n+                    || cfpos.getField() != numericField.getField())\n+                && fString.getFieldPtr()[i - 1].isNumeric()\n+                && !_field.isNumeric()) {\n+            \/\/ Re-wind to the beginning of the field and then emit it\n+            int32_t j = i - 1;\n+            for (; j >= fString.fZero && fString.getFieldPtr()[j].isNumeric(); j--) {}\n+            cfpos.setState(\n+                numericField.getCategory(),\n+                numericField.getField(),\n+                j - fString.fZero + 1,\n+                i - fString.fZero);\n+            return true;\n+        }\n+        \/\/ Special case: emit normalField if we are pointing at the end of spanField.\n+        if (i > fString.fZero) {\n+            auto elementField = fString.getFieldPtr()[i-1];\n+            if (elementField == Field(UFIELD_CATEGORY_LIST, ULISTFMT_ELEMENT_FIELD)\n+                    && cfpos.matchesField(elementField.getCategory(), elementField.getField())\n+                    && (cfpos.getLimit() < i - fString.fZero || cfpos.getCategory() != elementField.getCategory())) {\n+                int64_t si = cfpos.getInt64IterationContext() - 1;\n+                cfpos.setState(\n+                    elementField.getCategory(),\n+                    elementField.getField(),\n+                    i - fString.fZero - spanIndices[si].length,\n+                    i - fString.fZero);\n+                return true;\n+            }\n+        }\n+        \/\/ Special case: skip over INTEGER; will be coalesced later.\n+        if (_field == Field(UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD)) {\n+            _field = kUndefinedField;\n+        }\n+        \/\/ Case 2: no field starting at this position.\n+        if (_field.isUndefined() || _field == kEndField) {\n+            continue;\n+        }\n+        \/\/ Case 3: check for field starting at this position\n+        \/\/ Case 3a: Need to add a SpanField\n+        if (_field == Field(UFIELD_CATEGORY_LIST, ULISTFMT_ELEMENT_FIELD)) {\n+            int64_t si = cfpos.getInt64IterationContext();\n+            int32_t spanValue = spanIndices[si].spanValue;\n+            int32_t length = spanIndices[si].length;\n+            cfpos.setInt64IterationContext(si + 1);\n+            if (cfpos.matchesField(UFIELD_CATEGORY_LIST_SPAN, spanValue)) {\n+                UFieldCategory spanCategory = UFIELD_CATEGORY_LIST_SPAN;\n+                fieldStart = i - fString.fZero;\n+                int32_t end = fieldStart + length;\n+                cfpos.setState(\n+                    spanCategory,\n+                    spanValue,\n+                    fieldStart,\n+                    end);\n+                return true;\n+            } else {\n+                \/\/ Failed to match; jump ahead\n+                i += length - 1;\n+                continue;\n+            }\n+        }\n+        \/\/ Case 3b: No SpanField\n+        if (cfpos.matchesField(_field.getCategory(), _field.getField())) {\n+            fieldStart = i - fString.fZero;\n+            currField = _field;\n+        }\n+    }\n+\n+    U_ASSERT(currField == kUndefinedField);\n+    \/\/ Always set the position to the end so that we don't revisit previous sections\n+    cfpos.setState(\n+        cfpos.getCategory(),\n+        cfpos.getField(),\n+        fString.fLength,\n+        fString.fLength);\n+    return false;\n+}\n+\n+void FormattedValueStringBuilderImpl::appendSpanInfo(int32_t spanValue, int32_t length, UErrorCode& status) {\n+    if (U_FAILURE(status)) { return; }\n+    U_ASSERT(spanIndices.getCapacity() >= spanValue);\n+    if (spanIndices.getCapacity() == spanValue) {\n+        if (!spanIndices.resize(spanValue * 2, spanValue)) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+    }\n+    spanIndices[spanValue] = {spanValue, length};\n+}\n+\n+void FormattedValueStringBuilderImpl::prependSpanInfo(int32_t spanValue, int32_t length, UErrorCode& status) {\n+    if (U_FAILURE(status)) { return; }\n+    U_ASSERT(spanIndices.getCapacity() >= spanValue);\n+    if (spanIndices.getCapacity() == spanValue) {\n+        if (!spanIndices.resize(spanValue * 2, spanValue)) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return;\n+        }\n+    }\n+    for (int32_t i = spanValue - 1; i >= 0; i--) {\n+        spanIndices[i+1] = spanIndices[i];\n+    }\n+    spanIndices[0] = {spanValue, length};\n+}\n+\n+bool FormattedValueStringBuilderImpl::isIntOrGroup(Field field) {\n+    return field == Field(UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD)\n+        || field == Field(UFIELD_CATEGORY_NUMBER, UNUM_GROUPING_SEPARATOR_FIELD);\n+}\n+\n+bool FormattedValueStringBuilderImpl::isTrimmable(Field field) {\n+    return field != Field(UFIELD_CATEGORY_NUMBER, UNUM_GROUPING_SEPARATOR_FIELD)\n+        && field.getCategory() != UFIELD_CATEGORY_LIST;\n+}\n+\n+int32_t FormattedValueStringBuilderImpl::trimBack(int32_t limit) const {\n+    return unisets::get(unisets::DEFAULT_IGNORABLES)->spanBack(\n+        fString.getCharPtr() + fString.fZero,\n+        limit,\n+        USET_SPAN_CONTAINED);\n+}\n+\n+int32_t FormattedValueStringBuilderImpl::trimFront(int32_t start) const {\n+    return start + unisets::get(unisets::DEFAULT_IGNORABLES)->span(\n+        fString.getCharPtr() + fString.fZero + start,\n+        fString.fLength - start,\n+        USET_SPAN_CONTAINED);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/formattedval_sbimpl.cpp","additions":246,"deletions":7,"binary":false,"changes":253,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-U_DRAFT const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -216,1 +216,1 @@\n-U_DRAFT UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/formattedvalue.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,2 +44,2 @@\n-  UBool acceptFirstOnly = FALSE;\n-  UBool seenFirst = FALSE;\n+  UBool acceptFirstOnly = false;\n+  UBool seenFirst = false;\n@@ -65,0 +65,1 @@\n+\/\/ exported as U_I18N_API for tests\n@@ -66,1 +67,1 @@\n-class FieldPositionIteratorHandler : public FieldPositionHandler {\n+class U_I18N_API FieldPositionIteratorHandler : public FieldPositionHandler {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/fphdlimp.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-UnicodeFunctor* FunctionReplacer::clone() const {\n+FunctionReplacer* FunctionReplacer::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/funcrepl.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    virtual UnicodeFunctor* clone() const;\n+    virtual FunctionReplacer* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/funcrepl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-  static UMutex gGenderMetaLock = U_MUTEX_INITIALIZER;\n+  static UMutex gGenderMetaLock;\n@@ -163,1 +163,1 @@\n-  char type_str[256];\n+  char type_str[256] = \"\";\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/gender.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-:   Calendar(TimeZone::createDefault(), aLocale, status),\n+:   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, status),\n@@ -289,1 +289,1 @@\n-Calendar* GregorianCalendar::clone() const\n+GregorianCalendar* GregorianCalendar::clone() const\n@@ -327,2 +327,0 @@\n-    fGregorianCutover = date;\n-\n@@ -335,12 +333,14 @@\n-    int32_t cutoverDay = (int32_t)ClockMath::floorDivide(fGregorianCutover, (double)kOneDay);\n-    fNormalizedGregorianCutover = cutoverDay * kOneDay;\n-\n-    \/\/ Handle the rare case of numeric overflow.  If the user specifies a\n-    \/\/ change of UDate(Long.MIN_VALUE), in order to get a pure Gregorian\n-    \/\/ calendar, then the epoch day is -106751991168, which when multiplied\n-    \/\/ by ONE_DAY gives 9223372036794351616 -- the negative value is too\n-    \/\/ large for 64 bits, and overflows into a positive value.  We correct\n-    \/\/ this by using the next day, which for all intents is semantically\n-    \/\/ equivalent.\n-    if (cutoverDay < 0 && fNormalizedGregorianCutover > 0) {\n-        fNormalizedGregorianCutover = (cutoverDay + 1) * kOneDay;\n+    double cutoverDay = ClockMath::floorDivide(date, (double)kOneDay);\n+\n+    \/\/ Handle the rare case of numeric overflow where the user specifies a time\n+    \/\/ outside of INT32_MIN .. INT32_MAX number of days.\n+\n+    if (cutoverDay <= INT32_MIN) {\n+        cutoverDay = INT32_MIN;\n+        fGregorianCutover = fNormalizedGregorianCutover = cutoverDay * kOneDay;\n+    } else if (cutoverDay >= INT32_MAX) {\n+        cutoverDay = INT32_MAX;\n+        fGregorianCutover = fNormalizedGregorianCutover = cutoverDay * kOneDay;\n+    } else {\n+        fNormalizedGregorianCutover = cutoverDay * kOneDay;\n+        fGregorianCutover = date;\n@@ -363,1 +363,1 @@\n-    fCutoverJulianDay = cutoverDay;\n+    fCutoverJulianDay = (int32_t)cutoverDay;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/gregocal.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-     * Return TRUE if the given year is a leap year.\n+     * Return true if the given year is a leap year.\n@@ -153,1 +153,1 @@\n-     * @return TRUE if the year is a leap year\n+     * @return true if the year is a leap year\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/gregoimp.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-:   Calendar(TimeZone::createDefault(), aLocale, success)\n+:   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success)\n@@ -172,1 +172,1 @@\n-Calendar* HebrewCalendar::clone() const {\n+HebrewCalendar* HebrewCalendar::clone() const {\n@@ -396,1 +396,2 @@\n-        int32_t months = (235 * year - 234) \/ 19;           \/\/ # of months before year\n+        \/\/ # of months before year\n+        int32_t months = (int32_t)ClockMath::floorDivide((235 * (int64_t)year - 234), (int64_t)19);\n@@ -569,2 +570,2 @@\n-    double m = ((d * (double)DAY_PARTS)\/ (double) MONTH_PARTS);         \/\/ Months (approx)\n-    int32_t year = (int32_t)( ((19. * m + 234.) \/ 235.) + 1.);     \/\/ Years (approx)\n+    double m = ClockMath::floorDivide((d * (double)DAY_PARTS), (double) MONTH_PARTS);  \/\/ Months (approx)\n+    int32_t year = (int32_t)(ClockMath::floorDivide((19. * m + 234.), 235.) + 1.);     \/\/ Years (approx)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/hebrwcal.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-    virtual Calendar* clone(void) const;\n+    virtual HebrewCalendar* clone() const;\n@@ -389,1 +389,1 @@\n-     * Returns TRUE because the Hebrew Calendar does have a default century\n+     * Returns true because the Hebrew Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/hebrwcal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,16 +19,0 @@\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n@@ -38,12 +22,8 @@\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\..\\..\\lib\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\Release\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\..\\..\\lib\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\Debug\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\Release\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\Release\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\Debug\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\Debug\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true<\/LinkIncremental>\n+    <OutDir>.\\$(Platform)\\$(Configuration)\\<\/OutDir>\n+    <IntDir>.\\$(Platform)\\$(Configuration)\\<\/IntDir>\n+    <!-- The ICU projects use \"Win32\" to mean \"x86\", so we need to special case it. -->\n+    <OutDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/OutDir>\n+    <IntDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/IntDir>\n+    <!-- Disable Incremental Linking for Release builds as it prevents Link-time Code Generation -->\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Debug'\">true<\/LinkIncremental>\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n@@ -53,0 +33,3 @@\n+    <Midl>\n+      <TypeLibraryName>$(OutDir)\\icuin.tlb<\/TypeLibraryName>\n+    <\/Midl>\n@@ -59,0 +42,5 @@\n+      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n+      <PrecompiledHeaderOutputFile>$(OutDir)\/icuin.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(OutDir)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>$(OutDir)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)\/icuin.pdb<\/ProgramDataBaseFileName>\n@@ -64,1 +52,1 @@\n-      <BaseAddress>0x4a900000<\/BaseAddress>\n+      <AdditionalLibraryDirectories>.\\..\\..\\$(IcuLibOutputDir);%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n@@ -75,0 +63,3 @@\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icuin68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icuind.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icuind.lib<\/ImportLibrary>\n@@ -85,77 +76,3 @@\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib\\icuin.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x86\\Release\/i18n.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\Release\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\Release\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\Release\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin\\icuin64.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib\\icuin.pdb<\/ProgramDatabaseFile>\n-      <RandomizedBaseAddress>false<\/RandomizedBaseAddress>\n-      <DataExecutionPrevention>\n-      <\/DataExecutionPrevention>\n-      <ImportLibrary>..\\..\\lib\\icuin.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib\\icuind.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x86\\Debug\/i18n.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\Debug\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\Debug\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\Debug\/<\/ProgramDataBaseFileName>\n-      <BrowseInformation>true<\/BrowseInformation>\n-      <DebugInformationFormat>EditAndContinue<\/DebugInformationFormat>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin\\icuin64d.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib\\icuind.pdb<\/ProgramDatabaseFile>\n-      <RandomizedBaseAddress>false<\/RandomizedBaseAddress>\n-      <DataExecutionPrevention>\n-      <\/DataExecutionPrevention>\n-      <ImportLibrary>..\\..\\lib\\icuind.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib64\\icuin.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x64\\Release\/i18n.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\Release\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\Release\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\Release\/<\/ProgramDataBaseFileName>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin64\\icuin64.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib64\\icuin.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib64\\icuin.lib<\/ImportLibrary>\n-    <\/Link>\n-  <\/ItemDefinitionGroup>\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\lib64\\icuind.tlb<\/TypeLibraryName>\n-    <\/Midl>\n-    <ClCompile>\n-      <PrecompiledHeaderOutputFile>.\\x64\\Debug\/i18n.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\Debug\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\Debug\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\Debug\/<\/ProgramDataBaseFileName>\n-      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n-    <\/ClCompile>\n-    <Link>\n-      <OutputFile>..\\..\\bin64\\icuin64d.dll<\/OutputFile>\n-      <AdditionalLibraryDirectories>.\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\lib64\\icuind.pdb<\/ProgramDatabaseFile>\n-      <ImportLibrary>..\\..\\lib64\\icuind.lib<\/ImportLibrary>\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icuin68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icuin.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icuin.lib<\/ImportLibrary>\n@@ -228,1 +145,1 @@\n-    <ClCompile Include=\"double-conversion-diy-fp.cpp\" \/>\n+    <ClCompile Include=\"double-conversion-double-to-string.cpp\" \/>\n@@ -230,0 +147,1 @@\n+    <ClCompile Include=\"double-conversion-string-to-double.cpp\" \/>\n@@ -231,1 +149,0 @@\n-    <ClCompile Include=\"double-conversion.cpp\" \/>\n@@ -257,0 +174,1 @@\n+    <ClCompile Include=\"measunit_extra.cpp\" \/>\n@@ -262,1 +180,0 @@\n-    <ClCompile Include=\"nounit.cpp\" \/>\n@@ -281,1 +198,2 @@\n-    <ClCompile Include=\"number_stringbuilder.cpp\" \/>\n+    <ClCompile Include=\"formatted_string_builder.cpp\" \/>\n+    <ClCompile Include=\"number_usageprefs.cpp\" \/>\n@@ -287,0 +205,1 @@\n+    <ClCompile Include=\"number_symbolswrapper.cpp\" \/>\n@@ -288,1 +207,1 @@\n-    <ClCompile Include=\"numparse_stringsegment.cpp\" \/>\n+    <ClCompile Include=\"string_segment.cpp\" \/>\n@@ -298,0 +217,1 @@\n+    <ClCompile Include=\"numrange_capi.cpp\" \/>\n@@ -304,0 +224,1 @@\n+    <ClCompile Include=\"pluralranges.cpp\" \/>\n@@ -335,0 +256,4 @@\n+    <ClCompile Include=\"units_complexconverter.cpp\" \/>\n+    <ClCompile Include=\"units_converter.cpp\" \/>\n+    <ClCompile Include=\"units_data.cpp\" \/>\n+    <ClCompile Include=\"units_router.cpp\" \/>\n@@ -445,0 +370,1 @@\n+    <ClInclude Include=\"double-conversion-double-to-string.h\" \/>\n@@ -447,0 +373,2 @@\n+    <ClInclude Include=\"double-conversion-string-to-double.h\" \/>\n+    <ClInclude Include=\"double-conversion-strtod.h\" \/>\n@@ -459,0 +387,1 @@\n+    <ClInclude Include=\"measunit_impl.h\" \/>\n@@ -466,0 +395,1 @@\n+    <ClInclude Include=\"pluralranges.h\" \/>\n@@ -544,1 +474,1 @@\n-    <ClInclude Include=\"number_stringbuilder.h\" \/>\n+    <ClInclude Include=\"formatted_string_builder.h\" \/>\n@@ -546,0 +476,1 @@\n+    <ClInclude Include=\"number_usageprefs.h\" \/>\n@@ -552,1 +483,2 @@\n-    <ClInclude Include=\"numparse_stringsegment.h\" \/>\n+    <ClInclude Include=\"number_symbolswrapper.h\" \/>\n+    <ClInclude Include=\"string_segment.h\" \/>\n@@ -565,0 +497,4 @@\n+    <ClInclude Include=\"units_complexconverter.h\" \/>\n+    <ClInclude Include=\"units_converter.h\" \/>\n+    <ClInclude Include=\"units_data.h\" \/>\n+    <ClInclude Include=\"units_router.h\" \/>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/i18n.vcxproj","additions":49,"deletions":113,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-    <ClCompile Include=\"double-conversion-diy-fp.cpp\">\n+    <ClCompile Include=\"double-conversion-double-to-string.cpp\">\n@@ -126,1 +126,1 @@\n-    <ClCompile Include=\"double-conversion-strtod.cpp\">\n+    <ClCompile Include=\"double-conversion-string-to-double.cpp\">\n@@ -129,1 +129,1 @@\n-    <ClCompile Include=\"double-conversion.cpp\">\n+    <ClCompile Include=\"double-conversion-strtod.cpp\">\n@@ -207,0 +207,3 @@\n+    <ClCompile Include=\"measunit_extra.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n@@ -234,0 +237,3 @@\n+    <ClCompile Include=\"pluralranges.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n@@ -531,3 +537,0 @@\n-    <ClCompile Include=\"nounit.cpp\">\n-      <Filter>misc<\/Filter>\n-    <\/ClCompile>\n@@ -588,1 +591,4 @@\n-    <ClCompile Include=\"number_stringbuilder.cpp\">\n+    <ClCompile Include=\"formatted_string_builder.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n+    <ClCompile Include=\"number_usageprefs.cpp\">\n@@ -606,0 +612,3 @@\n+    <ClCompile Include=\"number_symbolswrapper.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n@@ -609,1 +618,1 @@\n-    <ClCompile Include=\"numparse_stringsegment.cpp\">\n+    <ClCompile Include=\"string_segment.cpp\">\n@@ -639,0 +648,3 @@\n+    <ClCompile Include=\"numrange_capi.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n@@ -651,0 +663,12 @@\n+    <ClCompile Include=\"units_complexconverter.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n+    <ClCompile Include=\"units_converter.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n+    <ClCompile Include=\"units_data.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n+    <ClCompile Include=\"units_router.cpp\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClCompile>\n@@ -779,0 +803,3 @@\n+    <ClInclude Include=\"double-conversion-double-to-string.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n@@ -788,0 +815,6 @@\n+    <ClInclude Include=\"double-conversion-string-to-double.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"double-conversion-strtod.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n@@ -824,0 +857,3 @@\n+    <ClInclude Include=\"measunit_impl.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n@@ -881,1 +917,1 @@\n-    <ClInclude Include=\"number_stringbuilder.h\">\n+    <ClInclude Include=\"formatted_string_builder.h\">\n@@ -890,0 +926,3 @@\n+    <ClInclude Include=\"number_usageprefs.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n@@ -905,1 +944,4 @@\n-    <ClInclude Include=\"numparse_stringsegment.h\">\n+    <ClInclude Include=\"number_symbolswrapper.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"string_segment.h\">\n@@ -947,0 +989,3 @@\n+    <ClInclude Include=\"pluralranges.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n@@ -983,0 +1028,12 @@\n+    <ClInclude Include=\"units_complexconverter.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"units_converter.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"units_data.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n+    <ClInclude Include=\"units_router.h\">\n+      <Filter>formatting<\/Filter>\n+    <\/ClInclude>\n@@ -1223,1 +1280,1 @@\n-<\/Project>\n\\ No newline at end of file\n+<\/Project>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/i18n.vcxproj.filters","additions":68,"deletions":11,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -16,0 +16,4 @@\n+    <ProjectConfiguration Include=\"Debug|ARM64\">\n+      <Configuration>Debug<\/Configuration>\n+      <Platform>ARM64<\/Platform>\n+    <\/ProjectConfiguration>\n@@ -28,0 +32,4 @@\n+    <ProjectConfiguration Include=\"Release|ARM64\">\n+      <Configuration>Release<\/Configuration>\n+      <Platform>ARM64<\/Platform>\n+    <\/ProjectConfiguration>\n@@ -47,4 +55,0 @@\n-  <ImportGroup Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n@@ -54,13 +58,6 @@\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\ReleaseUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\ReleaseUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\DebugUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\DebugUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\ReleaseUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\ReleaseUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\DebugUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\DebugUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">.\\arm\\ReleaseUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">.\\arm\\ReleaseUWP\\<\/IntDir>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">.\\arm\\DebugUWP\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">.\\arm\\DebugUWP\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n+    <OutDir>.\\$(Platform)\\$(Configuration)UWP\\<\/OutDir>\n+    <IntDir>.\\$(Platform)\\$(Configuration)UWP\\<\/IntDir>\n+    <!-- The ICU projects use \"Win32\" to mean \"x86\", so we need to special case it. -->\n+    <OutDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)UWP\\<\/OutDir>\n+    <IntDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)UWP\\<\/IntDir>\n+    <!-- Disable Incremental Linking for Release builds as it prevents Link-time Code Generation -->\n@@ -68,0 +65,1 @@\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n@@ -91,0 +89,1 @@\n+      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n@@ -130,1 +129,0 @@\n-      <DebugInformationFormat>EditAndContinue<\/DebugInformationFormat>\n@@ -169,0 +167,11 @@\n+  <ItemDefinitionGroup Condition=\"'$(Platform)'=='ARM64'\">\n+    <Midl>\n+      <TargetEnvironment>ARM64<\/TargetEnvironment>\n+    <\/Midl>\n+    <ClCompile>\n+      <PreprocessorDefinitions>ARM64;WIN32;%(PreprocessorDefinitions)<\/PreprocessorDefinitions>\n+    <\/ClCompile>\n+    <Link>\n+      <TargetMachine>MachineARM64<\/TargetMachine>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n@@ -180,1 +189,1 @@\n-      <OutputFile>..\\..\\bin32uwp\\icuin64.dll<\/OutputFile>\n+      <OutputFile>..\\..\\bin32uwp\\icuin68.dll<\/OutputFile>\n@@ -197,1 +206,1 @@\n-      <OutputFile>..\\..\\bin32uwp\\icuin64d.dll<\/OutputFile>\n+      <OutputFile>..\\..\\bin32uwp\\icuin68d.dll<\/OutputFile>\n@@ -214,1 +223,1 @@\n-      <OutputFile>..\\..\\bin64uwp\\icuin64.dll<\/OutputFile>\n+      <OutputFile>..\\..\\bin64uwp\\icuin68.dll<\/OutputFile>\n@@ -231,1 +240,1 @@\n-      <OutputFile>..\\..\\bin64uwp\\icuin64d.dll<\/OutputFile>\n+      <OutputFile>..\\..\\bin64uwp\\icuin68d.dll<\/OutputFile>\n@@ -248,1 +257,1 @@\n-      <OutputFile>..\\..\\binARMuwp\\icuin64.dll<\/OutputFile>\n+      <OutputFile>..\\..\\binARMuwp\\icuin68.dll<\/OutputFile>\n@@ -265,1 +274,1 @@\n-      <OutputFile>..\\..\\binARMuwp\\icuin64d.dll<\/OutputFile>\n+      <OutputFile>..\\..\\binARMuwp\\icuin68d.dll<\/OutputFile>\n@@ -271,0 +280,34 @@\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM64'\">\n+    <Midl>\n+      <TypeLibraryName>.\\..\\..\\libARM64uwp\\icuin.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <ClCompile>\n+      <PrecompiledHeaderOutputFile>.\\ARM64\\ReleaseUWP\/i18n.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>.\\ARM64\\ReleaseUWP\/<\/AssemblerListingLocation>\n+      <ObjectFileName>.\\ARM64\\ReleaseUWP\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>.\\ARM64\\ReleaseUWP\/<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <Link>\n+      <OutputFile>..\\..\\binARM64uwp\\icuin68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\libARM64uwp\\icuin.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\libARM64uwp\\icuin.lib<\/ImportLibrary>\n+      <AdditionalDependencies>..\\..\\libARM64uwp\\icuuc.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM64'\">\n+    <Midl>\n+      <TypeLibraryName>.\\..\\..\\libARM64uwp\\icuind.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <ClCompile>\n+      <PrecompiledHeaderOutputFile>.\\ARM64\\DebugUWP\/i18n.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>.\\ARM64\\DebugUWP\/<\/AssemblerListingLocation>\n+      <ObjectFileName>.\\ARM64\\DebugUWP\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>.\\ARM64\\DebugUWP\/<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <Link>\n+      <OutputFile>..\\..\\binARM64uwp\\icuin68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\libARM64uwp\\icuind.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\libARM64uwp\\icuind.lib<\/ImportLibrary>\n+      <AdditionalDependencies>..\\..\\libARM64uwp\\icuucd.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n@@ -335,1 +378,1 @@\n-    <ClCompile Include=\"double-conversion-diy-fp.cpp\" \/>\n+    <ClCompile Include=\"double-conversion-double-to-string.cpp\" \/>\n@@ -337,0 +380,1 @@\n+    <ClCompile Include=\"double-conversion-string-to-double.cpp\" \/>\n@@ -338,1 +382,0 @@\n-    <ClCompile Include=\"double-conversion.cpp\" \/>\n@@ -364,0 +407,1 @@\n+    <ClCompile Include=\"measunit_extra.cpp\" \/>\n@@ -369,1 +413,0 @@\n-    <ClCompile Include=\"nounit.cpp\" \/>\n@@ -388,1 +431,2 @@\n-    <ClCompile Include=\"number_stringbuilder.cpp\" \/>\n+    <ClCompile Include=\"formatted_string_builder.cpp\" \/>\n+    <ClCompile Include=\"number_usageprefs.cpp\" \/>\n@@ -394,0 +438,1 @@\n+    <ClCompile Include=\"number_symbolswrapper.cpp\" \/>\n@@ -395,1 +440,1 @@\n-    <ClCompile Include=\"numparse_stringsegment.cpp\" \/>\n+    <ClCompile Include=\"string_segment.cpp\" \/>\n@@ -405,0 +450,1 @@\n+    <ClCompile Include=\"numrange_capi.cpp\" \/>\n@@ -411,0 +457,1 @@\n+    <ClCompile Include=\"pluralranges.cpp\" \/>\n@@ -440,0 +487,4 @@\n+    <ClCompile Include=\"units_complexconverter.cpp\" \/>\n+    <ClCompile Include=\"units_converter.cpp\" \/>\n+    <ClCompile Include=\"units_data.cpp\" \/>\n+    <ClCompile Include=\"units_router.cpp\" \/>\n@@ -550,0 +601,1 @@\n+    <ClInclude Include=\"double-conversion-double-to-string.h\" \/>\n@@ -552,0 +604,2 @@\n+    <ClInclude Include=\"double-conversion-string-to-double.h\" \/>\n+    <ClInclude Include=\"double-conversion-strtod.h\" \/>\n@@ -564,0 +618,1 @@\n+    <ClInclude Include=\"measunit_impl.h\" \/>\n@@ -571,0 +626,1 @@\n+    <ClInclude Include=\"pluralranges.h\" \/>\n@@ -649,1 +705,1 @@\n-    <ClInclude Include=\"number_stringbuilder.h\" \/>\n+    <ClInclude Include=\"formatted_string_builder.h\" \/>\n@@ -651,0 +707,1 @@\n+    <ClInclude Include=\"number_usageprefs.h\" \/>\n@@ -657,1 +714,2 @@\n-    <ClInclude Include=\"numparse_stringsegment.h\" \/>\n+    <ClInclude Include=\"number_symbolswrapper.h\" \/>\n+    <ClInclude Include=\"string_segment.h\" \/>\n@@ -670,0 +728,4 @@\n+    <ClInclude Include=\"units_complexconverter.h\" \/>\n+    <ClInclude Include=\"units_converter.h\" \/>\n+    <ClInclude Include=\"units_data.h\" \/>\n+    <ClInclude Include=\"units_router.h\" \/>\n@@ -680,1 +742,1 @@\n-<\/Project>\n\\ No newline at end of file\n+<\/Project>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/i18n_uwp.vcxproj","additions":94,"deletions":32,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-Calendar* IndianCalendar::clone() const {\n+IndianCalendar* IndianCalendar::clone() const {\n@@ -43,1 +43,1 @@\n-  :   Calendar(TimeZone::createDefault(), aLocale, success)\n+  :   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success)\n@@ -86,1 +86,0 @@\n-static const double JULIAN_EPOCH = 1721425.5;\n@@ -99,1 +98,1 @@\n-    return ((year % 4) == 0) && (!(((year % 100) == 0) && ((year % 400) != 0)));\n+    return Grego::isLeapYear(year);\n@@ -140,1 +139,1 @@\n- * @param month The month in Gregorian Year\n+ * @param month The month in Gregorian Year, 0 based.\n@@ -144,12 +143,1 @@\n-   double julianDay = (JULIAN_EPOCH - 1) +\n-      (365 * (year - 1)) +\n-      uprv_floor((year - 1) \/ 4) +\n-      (-uprv_floor((year - 1) \/ 100)) +\n-      uprv_floor((year - 1) \/ 400) +\n-      uprv_floor((((367 * month) - 362) \/ 12) +\n-            ((month <= 2) ? 0 :\n-             (isGregorianLeap(year) ? -1 : -2)\n-            ) +\n-            date);\n-\n-   return julianDay;\n+   return Grego::fieldsToDay(year, month, date) + kEpochStartAsJulianDay - 0.5;\n@@ -160,0 +148,1 @@\n+ * Month is 0 based.\n@@ -163,27 +152,3 @@\n-   double wjd, depoch, quadricent, dqc, cent, dcent, quad, dquad, yindex, yearday, leapadj;\n-   int32_t year, month, day;\n-   wjd = uprv_floor(jd - 0.5) + 0.5;\n-   depoch = wjd - JULIAN_EPOCH;\n-   quadricent = uprv_floor(depoch \/ 146097);\n-   dqc = (int32_t)uprv_floor(depoch) % 146097;\n-   cent = uprv_floor(dqc \/ 36524);\n-   dcent = (int32_t)uprv_floor(dqc) % 36524;\n-   quad = uprv_floor(dcent \/ 1461);\n-   dquad = (int32_t)uprv_floor(dcent) % 1461;\n-   yindex = uprv_floor(dquad \/ 365);\n-   year = (int32_t)((quadricent * 400) + (cent * 100) + (quad * 4) + yindex);\n-   if (!((cent == 4) || (yindex == 4))) {\n-      year++;\n-   }\n-   yearday = wjd - gregorianToJD(year, 1, 1);\n-   leapadj = ((wjd < gregorianToJD(year, 3, 1)) ? 0\n-         :\n-         (isGregorianLeap(year) ? 1 : 2)\n-         );\n-   month = (int32_t)uprv_floor((((yearday + leapadj) * 12) + 373) \/ 367);\n-   day = (int32_t)(wjd - gregorianToJD(year, month, 1)) + 1;\n-\n-   gregorianDate[0] = year;\n-   gregorianDate[1] = month;\n-   gregorianDate[2] = day;\n-\n+   int32_t gdow;\n+   Grego::dayToFields(jd - kEpochStartAsJulianDay,\n+                      gregorianDate[0], gregorianDate[1], gregorianDate[2], gdow);\n@@ -206,1 +171,1 @@\n-      start = gregorianToJD(gyear, 3, 21);\n+      start = gregorianToJD(gyear, 2 \/* The third month in 0 based month *\/, 21);\n@@ -210,1 +175,1 @@\n-      start = gregorianToJD(gyear, 3, 22);\n+      start = gregorianToJD(gyear, 2 \/* The third month in 0 based month *\/, 22);\n@@ -300,1 +265,1 @@\n-    jdAtStartOfGregYear = gregorianToJD(gregorianYear, 1, 1); \/\/ JD at start of Gregorian year\n+    jdAtStartOfGregYear = gregorianToJD(gregorianYear, 0, 1); \/\/ JD at start of Gregorian year\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/indiancal.cpp","additions":12,"deletions":47,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-   * @param beCivil  Whether the calendar should be civil (default-TRUE) or religious (FALSE)\n+   * @param beCivil  Whether the calendar should be civil (default-true) or religious (false)\n@@ -189,1 +189,1 @@\n-  virtual Calendar* clone() const;\n+  virtual IndianCalendar* clone() const;\n@@ -306,1 +306,1 @@\n-   * Returns TRUE because the Indian Calendar does have a default century\n+   * Returns true because the Indian Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/indiancal.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-Calendar* IslamicCalendar::clone() const {\n+IslamicCalendar* IslamicCalendar::clone() const {\n@@ -235,1 +235,1 @@\n-:   Calendar(TimeZone::createDefault(), aLocale, success),\n+:   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success),\n@@ -371,1 +371,1 @@\n-        return (year-1)*354 + ClockMath::floorDivide((3+11*year),30);\n+        return (year-1)*354 + ClockMath::floorDivide((3+11*(int64_t)year),(int64_t)30);\n@@ -394,1 +394,1 @@\n-            + (year-1)*354 + (int32_t)ClockMath::floorDivide((3+11*year),30);\n+            + (year-1)*354 + (int32_t)ClockMath::floorDivide((3+11*(int64_t)year),(int64_t)30);\n@@ -450,1 +450,2 @@\n-        start = (int32_t)ClockMath::floorDivide((origin - HIJRA_MILLIS), (double)kOneDay) + 1;\n+        start = (int32_t)(ClockMath::floorDivide(\n+            (int64_t)((int64_t)origin - HIJRA_MILLIS), (int64_t)kOneDay) + 1);\n@@ -473,1 +474,1 @@\n-    static UMutex astroLock = U_MUTEX_INITIALIZER;      \/\/ pod bay door lock\n+    static UMutex astroLock;      \/\/ pod bay door lock\n@@ -642,2 +643,2 @@\n-        year = months \/ 12 + 1;\n-        month = months % 12;\n+        year = months >=  0 ? ((months \/ 12) + 1) : ((months + 1 ) \/ 12);\n+        month = ((months % 12) + 12 ) % 12;\n@@ -648,1 +649,2 @@\n-                year  = (int)ClockMath::floorDivide( (double)(30 * days + 10646) , 10631.0 );\n+                year  = (int32_t)ClockMath::floorDivide(\n+                    (30 * (int64_t)days + 10646) , (int64_t)10631.0 );\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/islamcal.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-  virtual Calendar* clone() const;\n+  virtual IslamicCalendar* clone() const;\n@@ -398,1 +398,1 @@\n-   * Returns TRUE because the Islamic Calendar does have a default century\n+   * Returns true because the Islamic Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/islamcal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-Calendar* JapaneseCalendar::clone(void) const\n+JapaneseCalendar* JapaneseCalendar::clone() const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/japancal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-    virtual Calendar* clone(void) const;\n+    virtual JapaneseCalendar* clone() const;\n@@ -170,1 +170,1 @@\n-     * @return FALSE - no default century in Japanese\n+     * @return false - no default century in Japanese\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/japancal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,0 +19,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n@@ -24,0 +28,1 @@\n+#include \"unicode\/uscript.h\"\n@@ -38,1 +43,27 @@\n-struct ListFormatInternal : public UMemory {\n+namespace {\n+\n+class PatternHandler : public UObject {\n+public:\n+    PatternHandler(const UnicodeString& two, const UnicodeString& end, UErrorCode& errorCode) :\n+        twoPattern(two, 2, 2, errorCode),\n+        endPattern(end, 2, 2, errorCode) {  }\n+\n+    PatternHandler(const SimpleFormatter& two, const SimpleFormatter& end) :\n+        twoPattern(two),\n+        endPattern(end) { }\n+\n+    virtual ~PatternHandler();\n+\n+    virtual PatternHandler* clone() const { return new PatternHandler(twoPattern, endPattern); }\n+\n+    \/** Argument: final string in the list. *\/\n+    virtual const SimpleFormatter& getTwoPattern(const UnicodeString&) const {\n+        return twoPattern;\n+    }\n+\n+    \/** Argument: final string in the list. *\/\n+    virtual const SimpleFormatter& getEndPattern(const UnicodeString&) const {\n+        return endPattern;\n+    }\n+\n+protected:\n@@ -40,0 +71,146 @@\n+    SimpleFormatter endPattern;\n+};\n+\n+PatternHandler::~PatternHandler() {\n+}\n+\n+class ContextualHandler : public PatternHandler {\n+public:\n+    ContextualHandler(bool (*testFunc)(const UnicodeString& text),\n+                      const UnicodeString& thenTwo,\n+                      const UnicodeString& elseTwo,\n+                      const UnicodeString& thenEnd,\n+                      const UnicodeString& elseEnd,\n+                      UErrorCode& errorCode) :\n+        PatternHandler(elseTwo, elseEnd, errorCode),\n+        test(testFunc),\n+        thenTwoPattern(thenTwo, 2, 2, errorCode),\n+        thenEndPattern(thenEnd, 2, 2, errorCode) {  }\n+\n+    ContextualHandler(bool (*testFunc)(const UnicodeString& text),\n+                      const SimpleFormatter& thenTwo, SimpleFormatter elseTwo,\n+                      const SimpleFormatter& thenEnd, SimpleFormatter elseEnd) :\n+      PatternHandler(elseTwo, elseEnd),\n+      test(testFunc),\n+      thenTwoPattern(thenTwo),\n+      thenEndPattern(thenEnd) { }\n+\n+    ~ContextualHandler() override;\n+\n+    PatternHandler* clone() const override {\n+        return new ContextualHandler(\n+            test, thenTwoPattern, twoPattern, thenEndPattern, endPattern);\n+    }\n+\n+    const SimpleFormatter& getTwoPattern(\n+        const UnicodeString& text) const override {\n+        return (test)(text) ? thenTwoPattern : twoPattern;\n+    }\n+\n+    const SimpleFormatter& getEndPattern(\n+        const UnicodeString& text) const override {\n+        return (test)(text) ? thenEndPattern : endPattern;\n+    }\n+\n+private:\n+    bool (*test)(const UnicodeString&);\n+    SimpleFormatter thenTwoPattern;\n+    SimpleFormatter thenEndPattern;\n+};\n+\n+ContextualHandler::~ContextualHandler() {\n+}\n+\n+static const char16_t *spanishY = u\"{0} y {1}\";\n+static const char16_t *spanishE = u\"{0} e {1}\";\n+static const char16_t *spanishO = u\"{0} o {1}\";\n+static const char16_t *spanishU = u\"{0} u {1}\";\n+static const char16_t *hebrewVav = u\"{0} \\u05D5{1}\";\n+static const char16_t *hebrewVavDash = u\"{0} \\u05D5-{1}\";\n+\n+\/\/ Condiction to change to e.\n+\/\/ Starts with \"hi\" or \"i\" but not with \"hie\" nor \"hia\"\n+static bool shouldChangeToE(const UnicodeString& text) {\n+    int32_t len = text.length();\n+    if (len == 0) { return false; }\n+    \/\/ Case insensitive match hi but not hie nor hia.\n+    if ((text[0] == u'h' || text[0] == u'H') &&\n+            ((len > 1) && (text[1] == u'i' || text[1] == u'I')) &&\n+            ((len == 2) || !(text[2] == u'a' || text[2] == u'A' || text[2] == u'e' || text[2] == u'E'))) {\n+        return true;\n+    }\n+    \/\/ Case insensitive for \"start with i\"\n+    if (text[0] == u'i' || text[0] == u'I') { return true; }\n+    return false;\n+}\n+\n+\/\/ Condiction to change to u.\n+\/\/ Starts with \"o\", \"ho\", and \"8\". Also \"11\" by itself.\n+\/\/ re: ^((o|ho|8).*|11)$\n+static bool shouldChangeToU(const UnicodeString& text) {\n+    int32_t len = text.length();\n+    if (len == 0) { return false; }\n+    \/\/ Case insensitive match o.* and 8.*\n+    if (text[0] == u'o' || text[0] == u'O' || text[0] == u'8') { return true; }\n+    \/\/ Case insensitive match ho.*\n+    if ((text[0] == u'h' || text[0] == u'H') &&\n+            ((len > 1) && (text[1] == 'o' || text[1] == u'O'))) {\n+        return true;\n+    }\n+    \/\/ match \"^11$\" and \"^11 .*\"\n+    if ((len >= 2) && text[0] == u'1' && text[1] == u'1' && (len == 2 || text[2] == u' ')) { return true; }\n+    return false;\n+}\n+\n+\/\/ Condiction to change to VAV follow by a dash.\n+\/\/ Starts with non Hebrew letter.\n+static bool shouldChangeToVavDash(const UnicodeString& text) {\n+    if (text.isEmpty()) { return false; }\n+    UErrorCode status = U_ZERO_ERROR;\n+    return uscript_getScript(text.char32At(0), &status) != USCRIPT_HEBREW;\n+}\n+\n+PatternHandler* createPatternHandler(\n+        const char* lang, const UnicodeString& two, const UnicodeString& end,\n+    UErrorCode& status) {\n+    if (uprv_strcmp(lang, \"es\") == 0) {\n+        \/\/ Spanish\n+        UnicodeString spanishYStr(true, spanishY, -1);\n+        bool twoIsY = two == spanishYStr;\n+        bool endIsY = end == spanishYStr;\n+        if (twoIsY || endIsY) {\n+            UnicodeString replacement(true, spanishE, -1);\n+            return new ContextualHandler(\n+                shouldChangeToE,\n+                twoIsY ? replacement : two, two,\n+                endIsY ? replacement : end, end, status);\n+        }\n+        UnicodeString spanishOStr(true, spanishO, -1);\n+        bool twoIsO = two == spanishOStr;\n+        bool endIsO = end == spanishOStr;\n+        if (twoIsO || endIsO) {\n+            UnicodeString replacement(true, spanishU, -1);\n+            return new ContextualHandler(\n+                shouldChangeToU,\n+                twoIsO ? replacement : two, two,\n+                endIsO ? replacement : end, end, status);\n+        }\n+    } else if (uprv_strcmp(lang, \"he\") == 0 || uprv_strcmp(lang, \"iw\") == 0) {\n+        \/\/ Hebrew\n+        UnicodeString hebrewVavStr(true, hebrewVav, -1);\n+        bool twoIsVav = two == hebrewVavStr;\n+        bool endIsVav = end == hebrewVavStr;\n+        if (twoIsVav || endIsVav) {\n+            UnicodeString replacement(true, hebrewVavDash, -1);\n+            return new ContextualHandler(\n+                shouldChangeToVavDash,\n+                twoIsVav ? replacement : two, two,\n+                endIsVav ? replacement : end, end, status);\n+        }\n+    }\n+    return new PatternHandler(two, end, status);\n+}\n+\n+}  \/\/ namespace\n+\n+struct ListFormatInternal : public UMemory {\n@@ -42,1 +219,1 @@\n-    SimpleFormatter endPattern;\n+    LocalPointer<PatternHandler> patternHandler;\n@@ -49,0 +226,1 @@\n+        const Locale& locale,\n@@ -50,1 +228,0 @@\n-        twoPattern(two, 2, 2, errorCode),\n@@ -53,1 +230,1 @@\n-        endPattern(end, 2, 2, errorCode) {}\n+        patternHandler(createPatternHandler(locale.getLanguage(), two, end, errorCode), errorCode) { }\n@@ -56,1 +233,0 @@\n-        twoPattern(data.twoPattern, errorCode),\n@@ -59,1 +235,2 @@\n-        endPattern(data.endPattern, errorCode) { }\n+        patternHandler(createPatternHandler(\n+            data.locale.getLanguage(), data.twoPattern, data.endPattern, errorCode), errorCode) { }\n@@ -62,1 +239,0 @@\n-    twoPattern(other.twoPattern),\n@@ -65,1 +241,1 @@\n-    endPattern(other.endPattern) { }\n+    patternHandler(other.patternHandler->clone()) { }\n@@ -69,2 +245,1 @@\n-#if !UCONFIG_NO_FORMATTING\n-class FormattedListData : public FormattedValueFieldPositionIteratorImpl {\n+class FormattedListData : public FormattedValueStringBuilderImpl {\n@@ -72,1 +247,1 @@\n-    FormattedListData(UErrorCode& status) : FormattedValueFieldPositionIteratorImpl(5, status) {}\n+    FormattedListData(UErrorCode&) : FormattedValueStringBuilderImpl(kUndefinedField) {}\n@@ -79,1 +254,0 @@\n-#endif\n@@ -83,1 +257,0 @@\n-static const char STANDARD_STYLE[] = \"standard\";\n@@ -89,1 +262,1 @@\n-    return TRUE;\n+    return true;\n@@ -147,1 +320,1 @@\n-    static UMutex listFormatterMutex = U_MUTEX_INITIALIZER;\n+    static UMutex listFormatterMutex;\n@@ -182,0 +355,44 @@\n+static const char* typeWidthToStyleString(UListFormatterType type, UListFormatterWidth width) {\n+    switch (type) {\n+        case ULISTFMT_TYPE_AND:\n+            switch (width) {\n+                case ULISTFMT_WIDTH_WIDE:\n+                    return \"standard\";\n+                case ULISTFMT_WIDTH_SHORT:\n+                    return \"standard-short\";\n+                case ULISTFMT_WIDTH_NARROW:\n+                    return \"standard-narrow\";\n+                default:\n+                    return nullptr;\n+            }\n+            break;\n+\n+        case ULISTFMT_TYPE_OR:\n+            switch (width) {\n+                case ULISTFMT_WIDTH_WIDE:\n+                    return \"or\";\n+                case ULISTFMT_WIDTH_SHORT:\n+                    return \"or-short\";\n+                case ULISTFMT_WIDTH_NARROW:\n+                    return \"or-narrow\";\n+                default:\n+                    return nullptr;\n+            }\n+            break;\n+\n+        case ULISTFMT_TYPE_UNITS:\n+            switch (width) {\n+                case ULISTFMT_WIDTH_WIDE:\n+                    return \"unit\";\n+                case ULISTFMT_WIDTH_SHORT:\n+                    return \"unit-short\";\n+                case ULISTFMT_WIDTH_NARROW:\n+                    return \"unit-narrow\";\n+                default:\n+                    return nullptr;\n+            }\n+    }\n+\n+    return nullptr;\n+}\n+\n@@ -282,1 +499,2 @@\n-    ListFormatInternal* result = new ListFormatInternal(sink.two, sink.start, sink.middle, sink.end, errorCode);\n+\n+    ListFormatInternal* result = new ListFormatInternal(sink.two, sink.start, sink.middle, sink.end, locale, errorCode);\n@@ -300,1 +518,11 @@\n-    return createInstance(locale, STANDARD_STYLE, errorCode);\n+    return createInstance(locale, ULISTFMT_TYPE_AND, ULISTFMT_WIDTH_WIDE, errorCode);\n+}\n+\n+ListFormatter* ListFormatter::createInstance(\n+        const Locale& locale, UListFormatterType type, UListFormatterWidth width, UErrorCode& errorCode) {\n+    const char* style = typeWidthToStyleString(type, width);\n+    if (style == nullptr) {\n+        errorCode = U_ILLEGAL_ARGUMENT_ERROR;\n+        return nullptr;\n+    }\n+    return createInstance(locale, style, errorCode);\n@@ -328,32 +556,16 @@\n-\/**\n- * Joins first and second using the pattern pat.\n- * On entry offset is an offset into first or -1 if offset unspecified.\n- * On exit offset is offset of second in result if recordOffset was set\n- * Otherwise if it was >=0 it is set to point into result where it used\n- * to point into first. On exit, result is the join of first and second\n- * according to pat. Any previous value of result gets replaced.\n- *\/\n-static void joinStringsAndReplace(\n-        const SimpleFormatter& pat,\n-        const UnicodeString& first,\n-        const UnicodeString& second,\n-        UnicodeString &result,\n-        UBool recordOffset,\n-        int32_t &offset,\n-        int32_t *offsetFirst,\n-        int32_t *offsetSecond,\n-        UErrorCode& errorCode) {\n-    if (U_FAILURE(errorCode)) {\n-        return;\n-    }\n-    const UnicodeString *params[2] = {&first, &second};\n-    int32_t offsets[2];\n-    pat.formatAndReplace(\n-            params,\n-            UPRV_LENGTHOF(params),\n-            result,\n-            offsets,\n-            UPRV_LENGTHOF(offsets),\n-            errorCode);\n-    if (U_FAILURE(errorCode)) {\n-        return;\n+namespace {\n+\n+class FormattedListBuilder {\n+public:\n+    LocalPointer<FormattedListData> data;\n+\n+    \/** For lists of length 1+ *\/\n+    FormattedListBuilder(const UnicodeString& start, UErrorCode& status)\n+            : data(new FormattedListData(status), status) {\n+        if (U_SUCCESS(status)) {\n+            data->getStringRef().append(\n+                start,\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_ELEMENT_FIELD},\n+                status);\n+            data->appendSpanInfo(0, start.length(), status);\n+        }\n@@ -361,3 +573,4 @@\n-    if (offsets[0] == -1 || offsets[1] == -1) {\n-        errorCode = U_INVALID_FORMAT_ERROR;\n-        return;\n+\n+    \/** For lists of length 0 *\/\n+    FormattedListBuilder(UErrorCode& status)\n+            : data(new FormattedListData(status), status) {\n@@ -365,4 +578,58 @@\n-    if (recordOffset) {\n-        offset = offsets[1];\n-    } else if (offset >= 0) {\n-        offset += offsets[0];\n+\n+    void append(const SimpleFormatter& pattern, const UnicodeString& next, int32_t position, UErrorCode& status) {\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        if (pattern.getArgumentLimit() != 2) {\n+            status = U_INTERNAL_PROGRAM_ERROR;\n+            return;\n+        }\n+        \/\/ In the pattern, {0} are the pre-existing elements and {1} is the new element.\n+        int32_t offsets[] = {0, 0};\n+        UnicodeString temp = pattern.getTextWithNoArguments(offsets, 2);\n+        if (offsets[0] <= offsets[1]) {\n+            \/\/ prefix{0}infix{1}suffix\n+            \/\/ Prepend prefix, then append infix, element, and suffix\n+            data->getStringRef().insert(\n+                0,\n+                temp.tempSubStringBetween(0, offsets[0]),\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_LITERAL_FIELD},\n+                status);\n+            data->getStringRef().append(\n+                temp.tempSubStringBetween(offsets[0], offsets[1]),\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_LITERAL_FIELD},\n+                status);\n+            data->getStringRef().append(\n+                next,\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_ELEMENT_FIELD},\n+                status);\n+            data->appendSpanInfo(position, next.length(), status);\n+            data->getStringRef().append(\n+                temp.tempSubString(offsets[1]),\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_LITERAL_FIELD},\n+                status);\n+        } else {\n+            \/\/ prefix{1}infix{0}suffix\n+            \/\/ Prepend infix, element, and prefix, then append suffix.\n+            \/\/ (We prepend in reverse order because prepending at index 0 is fast.)\n+            data->getStringRef().insert(\n+                0,\n+                temp.tempSubStringBetween(offsets[1], offsets[0]),\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_LITERAL_FIELD},\n+                status);\n+            data->getStringRef().insert(\n+                0,\n+                next,\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_ELEMENT_FIELD},\n+                status);\n+            data->prependSpanInfo(position, next.length(), status);\n+            data->getStringRef().insert(\n+                0,\n+                temp.tempSubStringBetween(0, offsets[1]),\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_LITERAL_FIELD},\n+                status);\n+            data->getStringRef().append(\n+                temp.tempSubString(offsets[0]),\n+                {UFIELD_CATEGORY_LIST, ULISTFMT_LITERAL_FIELD},\n+                status);\n+        }\n@@ -370,2 +637,2 @@\n-    if (offsetFirst != nullptr) *offsetFirst = offsets[0];\n-    if (offsetSecond != nullptr) *offsetSecond = offsets[1];\n+};\n+\n@@ -383,13 +650,0 @@\n-#if !UCONFIG_NO_FORMATTING\n-UnicodeString& ListFormatter::format(\n-        const UnicodeString items[],\n-        int32_t nItems,\n-        UnicodeString & appendTo,\n-        FieldPositionIterator* posIter,\n-        UErrorCode& errorCode) const {\n-  int32_t offset;\n-  FieldPositionIteratorHandler handler(posIter, errorCode);\n-  return format_(items, nItems, appendTo, -1, offset, &handler, errorCode);\n-}\n-#endif\n-\n@@ -403,1 +657,11 @@\n-  return format_(items, nItems, appendTo, index, offset, nullptr, errorCode);\n+    int32_t initialOffset = appendTo.length();\n+    auto result = formatStringsToValue(items, nItems, errorCode);\n+    UnicodeStringAppendable appendable(appendTo);\n+    result.appendTo(appendable, errorCode);\n+    if (index >= 0) {\n+        ConstrainedFieldPosition cfpos;\n+        cfpos.constrainField(UFIELD_CATEGORY_LIST_SPAN, index);\n+        result.nextPosition(cfpos, errorCode);\n+        offset = initialOffset + cfpos.getStart();\n+    }\n+    return appendTo;\n@@ -406,1 +670,0 @@\n-#if !UCONFIG_NO_FORMATTING\n@@ -411,3 +674,31 @@\n-    LocalPointer<FormattedListData> result(new FormattedListData(errorCode), errorCode);\n-    if (U_FAILURE(errorCode)) {\n-        return FormattedList(errorCode);\n+    if (nItems == 0) {\n+        FormattedListBuilder result(errorCode);\n+        if (U_FAILURE(errorCode)) {\n+            return FormattedList(errorCode);\n+        } else {\n+            return FormattedList(result.data.orphan());\n+        }\n+    } else if (nItems == 1) {\n+        FormattedListBuilder result(items[0], errorCode);\n+        result.data->getStringRef().writeTerminator(errorCode);\n+        if (U_FAILURE(errorCode)) {\n+            return FormattedList(errorCode);\n+        } else {\n+            return FormattedList(result.data.orphan());\n+        }\n+    } else if (nItems == 2) {\n+        FormattedListBuilder result(items[0], errorCode);\n+        if (U_FAILURE(errorCode)) {\n+            return FormattedList(errorCode);\n+        }\n+        result.append(\n+            data->patternHandler->getTwoPattern(items[1]),\n+            items[1],\n+            1,\n+            errorCode);\n+        result.data->getStringRef().writeTerminator(errorCode);\n+        if (U_FAILURE(errorCode)) {\n+            return FormattedList(errorCode);\n+        } else {\n+            return FormattedList(result.data.orphan());\n+        }\n@@ -415,7 +706,2 @@\n-    UnicodeString string;\n-    int32_t offset;\n-    auto handler = result->getHandler(errorCode);\n-    handler.setCategory(UFIELD_CATEGORY_LIST);\n-    format_(items, nItems, string, -1, offset, &handler, errorCode);\n-    handler.getError(errorCode);\n-    result->appendString(string, errorCode);\n+\n+    FormattedListBuilder result(items[0], errorCode);\n@@ -425,8 +711,11 @@\n-\n-    \/\/ Add span fields and sort\n-    ConstrainedFieldPosition cfpos;\n-    cfpos.constrainField(UFIELD_CATEGORY_LIST, ULISTFMT_ELEMENT_FIELD);\n-    int32_t i = 0;\n-    handler.setCategory(UFIELD_CATEGORY_LIST_SPAN);\n-    while (result->nextPosition(cfpos, errorCode)) {\n-        handler.addAttribute(i++, cfpos.getStart(), cfpos.getLimit());\n+    result.append(\n+        data->startPattern,\n+        items[1],\n+        1,\n+        errorCode);\n+    for (int32_t i = 2; i < nItems - 1; i++) {\n+        result.append(\n+            data->middlePattern,\n+            items[i],\n+            i,\n+            errorCode);\n@@ -434,1 +723,6 @@\n-    handler.getError(errorCode);\n+    result.append(\n+        data->patternHandler->getEndPattern(items[nItems-1]),\n+        items[nItems-1],\n+        nItems-1,\n+        errorCode);\n+    result.data->getStringRef().writeTerminator(errorCode);\n@@ -437,0 +731,2 @@\n+    } else {\n+        return FormattedList(result.data.orphan());\n@@ -438,3 +734,0 @@\n-    result->sort();\n-\n-    return FormattedList(result.orphan());\n@@ -442,1 +735,0 @@\n-#endif\n@@ -444,131 +736,0 @@\n-UnicodeString& ListFormatter::format_(\n-        const UnicodeString items[],\n-        int32_t nItems,\n-        UnicodeString& appendTo,\n-        int32_t index,\n-        int32_t &offset,\n-        FieldPositionHandler* handler,\n-        UErrorCode& errorCode) const {\n-#if !UCONFIG_NO_FORMATTING\n-    offset = -1;\n-    if (U_FAILURE(errorCode)) {\n-        return appendTo;\n-    }\n-    if (data == nullptr) {\n-        errorCode = U_INVALID_STATE_ERROR;\n-        return appendTo;\n-    }\n-\n-    if (nItems <= 0) {\n-        return appendTo;\n-    }\n-    if (nItems == 1) {\n-        if (index == 0) {\n-            offset = appendTo.length();\n-        }\n-        if (handler != nullptr) {\n-            handler->addAttribute(ULISTFMT_ELEMENT_FIELD,\n-                                  appendTo.length(),\n-                                  appendTo.length() + items[0].length());\n-        }\n-        appendTo.append(items[0]);\n-        return appendTo;\n-    }\n-    UnicodeString result(items[0]);\n-    if (index == 0) {\n-        offset = 0;\n-    }\n-    int32_t offsetFirst;\n-    int32_t offsetSecond;\n-    int32_t prefixLength = 0;\n-    \/\/ for n items, there are 2 * (n + 1) boundary including 0 and the upper\n-    \/\/ edge.\n-    MaybeStackArray<int32_t, 10> offsets((handler != nullptr) ? 2 * (nItems + 1): 0);\n-    joinStringsAndReplace(\n-            nItems == 2 ? data->twoPattern : data->startPattern,\n-            result,\n-            items[1],\n-            result,\n-            index == 1,\n-            offset,\n-            &offsetFirst,\n-            &offsetSecond,\n-            errorCode);\n-    if (handler != nullptr) {\n-        offsets[0] = 0;\n-        prefixLength += offsetFirst;\n-        offsets[1] = offsetSecond - prefixLength;\n-    }\n-    if (nItems > 2) {\n-        for (int32_t i = 2; i < nItems - 1; ++i) {\n-             joinStringsAndReplace(\n-                     data->middlePattern,\n-                     result,\n-                     items[i],\n-                     result,\n-                     index == i,\n-                     offset,\n-                     &offsetFirst,\n-                     &offsetSecond,\n-                     errorCode);\n-            if (handler != nullptr) {\n-                prefixLength += offsetFirst;\n-                offsets[i] = offsetSecond - prefixLength;\n-            }\n-        }\n-        joinStringsAndReplace(\n-                data->endPattern,\n-                result,\n-                items[nItems - 1],\n-                result,\n-                index == nItems - 1,\n-                offset,\n-                &offsetFirst,\n-                &offsetSecond,\n-                errorCode);\n-        if (handler != nullptr) {\n-            prefixLength += offsetFirst;\n-            offsets[nItems - 1] = offsetSecond - prefixLength;\n-        }\n-    }\n-    if (handler != nullptr) {\n-        \/\/ If there are already some data in appendTo, we need to adjust the index\n-        \/\/ by shifting that lenght while insert into handler.\n-        int32_t shift = appendTo.length() + prefixLength;\n-        \/\/ Output the ULISTFMT_ELEMENT_FIELD in the order of the input elements\n-        for (int32_t i = 0; i < nItems; ++i) {\n-            offsets[i + nItems] = offsets[i] + items[i].length() + shift;\n-            offsets[i] += shift;\n-            handler->addAttribute(\n-                ULISTFMT_ELEMENT_FIELD,  \/\/ id\n-                offsets[i],  \/\/ index\n-                offsets[i + nItems]);  \/\/ limit\n-        }\n-        \/\/ The locale pattern may reorder the items (such as in ur-IN locale),\n-        \/\/ so we cannot assume the array is in accendning order.\n-        \/\/ To handle the edging case, just insert the two ends into the array\n-        \/\/ and sort. Then we output ULISTFMT_LITERAL_FIELD if the indecies\n-        \/\/ between the even and odd position are not the same in the sorted array.\n-        offsets[2 * nItems] = shift - prefixLength;\n-        offsets[2 * nItems + 1] = result.length() + shift - prefixLength;\n-        uprv_sortArray(offsets.getAlias(), 2 * (nItems + 1), sizeof(int32_t),\n-               uprv_int32Comparator, nullptr,\n-               false, &errorCode);\n-        for (int32_t i = 0; i <= nItems; ++i) {\n-          if (offsets[i * 2] != offsets[i * 2 + 1]) {\n-            handler->addAttribute(\n-                ULISTFMT_LITERAL_FIELD,  \/\/ id\n-                offsets[i * 2],  \/\/ index\n-                offsets[i * 2 + 1]);  \/\/ limit\n-          }\n-        }\n-    }\n-    if (U_SUCCESS(errorCode)) {\n-        if (offset >= 0) {\n-            offset += appendTo.length();\n-        }\n-        appendTo += result;\n-    }\n-#endif\n-    return appendTo;\n-}\n@@ -577,0 +738,2 @@\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/listformatter.cpp","additions":390,"deletions":227,"binary":false,"changes":617,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"number_utypes.h\"\n@@ -50,0 +51,2 @@\n+using number::impl::UFormattedNumberData;\n+\n@@ -58,1 +61,1 @@\n-    SimpleDateFormat hourMinute;\n+    UnicodeString hourMinute;\n@@ -61,1 +64,1 @@\n-    SimpleDateFormat minuteSecond;\n+    UnicodeString minuteSecond;\n@@ -64,1 +67,1 @@\n-    SimpleDateFormat hourMinuteSecond;\n+    UnicodeString hourMinuteSecond;\n@@ -71,9 +74,4 @@\n-            const UnicodeString &hms,\n-            UErrorCode &status) :\n-            hourMinute(hm, status),\n-            minuteSecond(ms, status),\n-            hourMinuteSecond(hms, status) {\n-        const TimeZone *gmt = TimeZone::getGMT();\n-        hourMinute.setTimeZone(*gmt);\n-        minuteSecond.setTimeZone(*gmt);\n-        hourMinuteSecond.setTimeZone(*gmt);\n+            const UnicodeString &hms) :\n+            hourMinute(hm),\n+            minuteSecond(ms),\n+            hourMinuteSecond(hms) {\n@@ -236,2 +234,1 @@\n-        loadNumericDateFormatterPattern(resource, \"hms\", status),\n-        status);\n+        loadNumericDateFormatterPattern(resource, \"hms\", status));\n@@ -469,1 +466,1 @@\n-Format *MeasureFormat::clone() const {\n+MeasureFormat *MeasureFormat::clone() const {\n@@ -513,1 +510,1 @@\n-    number::FormattedNumber result;\n+    UFormattedNumberData result;\n@@ -515,1 +512,2 @@\n-        result = lnf->unit(measure.getUnit())\n+        result.quantity.setToDouble(measure.getNumber().getDouble(status));\n+        lnf->unit(measure.getUnit())\n@@ -518,1 +516,1 @@\n-            .formatDouble(measure.getNumber().getDouble(status), status);\n+            .formatImpl(&result, status);\n@@ -694,3 +692,13 @@\n-        \/\/ Don't know how to handle other types of NumberFormat\n-        status = U_UNSUPPORTED_ERROR;\n-        return appendTo;\n+        \/\/ Handle other types of NumberFormat using the ICU 63 code, modified to\n+        \/\/ get the unitPattern from LongNameHandler and handle fallback to OTHER.\n+        UnicodeString formattedNumber;\n+        StandardPlural::Form pluralForm = QuantityFormatter::selectPlural(\n+                amtNumber, nf, **pluralRules, formattedNumber, pos, status);\n+        UnicodeString pattern = number::impl::LongNameHandler::getUnitPattern(getLocale(status),\n+                amtUnit, getUnitWidth(fWidth), pluralForm, status);\n+        \/\/ The above  handles fallback from other widths to short, and from other plural forms to OTHER\n+        if (U_FAILURE(status)) {\n+            return appendTo;\n+        }\n+        SimpleFormatter formatter(pattern, 0, 1, status);\n+        return QuantityFormatter::format(formatter, formattedNumber, appendTo, pos, status);\n@@ -698,1 +706,1 @@\n-    number::FormattedNumber result;\n+    UFormattedNumberData result;\n@@ -700,1 +708,2 @@\n-        result = lnf->unit(amtUnit)\n+        result.quantity.setToDouble(amtNumber.getDouble(status));\n+        lnf->unit(amtUnit)\n@@ -702,1 +711,1 @@\n-            .formatDouble(amtNumber.getDouble(status), status);\n+            .formatImpl(&result, status);\n@@ -709,1 +718,2 @@\n-\/\/ Formats hours-minutes-seconds as 5:37:23 or similar.\n+\n+\/\/ Formats numeric time duration as 5:00:47 or 3:54.\n@@ -712,1 +722,1 @@\n-        int32_t bitMap,   \/\/ 1=hourset, 2=minuteset, 4=secondset\n+        int32_t bitMap,   \/\/ 1=hour set, 2=minute set, 4=second set\n@@ -718,39 +728,0 @@\n-    UDate millis =\n-        (UDate) (((uprv_trunc(hms[0].getDouble(status)) * 60.0\n-             + uprv_trunc(hms[1].getDouble(status))) * 60.0\n-                  + uprv_trunc(hms[2].getDouble(status))) * 1000.0);\n-    switch (bitMap) {\n-    case 5: \/\/ hs\n-    case 7: \/\/ hms\n-        return formatNumeric(\n-                millis,\n-                cache->getNumericDateFormatters()->hourMinuteSecond,\n-                UDAT_SECOND_FIELD,\n-                hms[2],\n-                appendTo,\n-                status);\n-        break;\n-    case 6: \/\/ ms\n-        return formatNumeric(\n-                millis,\n-                cache->getNumericDateFormatters()->minuteSecond,\n-                UDAT_SECOND_FIELD,\n-                hms[2],\n-                appendTo,\n-                status);\n-        break;\n-    case 3: \/\/ hm\n-        return formatNumeric(\n-                millis,\n-                cache->getNumericDateFormatters()->hourMinute,\n-                UDAT_MINUTE_FIELD,\n-                hms[1],\n-                appendTo,\n-                status);\n-        break;\n-    default:\n-        status = U_INTERNAL_PROGRAM_ERROR;\n-        return appendTo;\n-        break;\n-    }\n-}\n@@ -758,7 +729,1 @@\n-static void appendRange(\n-        const UnicodeString &src,\n-        int32_t start,\n-        int32_t end,\n-        UnicodeString &dest) {\n-    dest.append(src, start, end - start);\n-}\n+    UnicodeString pattern;\n@@ -766,15 +731,3 @@\n-static void appendRange(\n-        const UnicodeString &src,\n-        int32_t end,\n-        UnicodeString &dest) {\n-    dest.append(src, end, src.length() - end);\n-}\n-\n-\/\/ Formats time like 5:37:23\n-UnicodeString &MeasureFormat::formatNumeric(\n-        UDate date, \/\/ Time since epoch 1:30:00 would be 5400000\n-        const DateFormat &dateFmt, \/\/ h:mm, m:ss, or h:mm:ss\n-        UDateFormatField smallestField, \/\/ seconds in 5:37:23.5\n-        const Formattable &smallestAmount, \/\/ 23.5 for 5:37:23.5\n-        UnicodeString &appendTo,\n-        UErrorCode &status) const {\n+    double hours = hms[0].getDouble(status);\n+    double minutes = hms[1].getDouble(status);\n+    double seconds = hms[2].getDouble(status);\n@@ -784,12 +737,13 @@\n-    \/\/ Format the smallest amount with this object's NumberFormat\n-    UnicodeString smallestAmountFormatted;\n-\n-    \/\/ We keep track of the integer part of smallest amount so that\n-    \/\/ we can replace it later so that we get '0:00:09.3' instead of\n-    \/\/ '0:00:9.3'\n-    FieldPosition intFieldPosition(UNUM_INTEGER_FIELD);\n-    (*numberFormat)->format(\n-            smallestAmount, smallestAmountFormatted, intFieldPosition, status);\n-    if (\n-            intFieldPosition.getBeginIndex() == 0 &&\n-            intFieldPosition.getEndIndex() == 0) {\n+\n+    \/\/ All possible combinations: \"h\", \"m\", \"s\", \"hm\", \"hs\", \"ms\", \"hms\"\n+    if (bitMap == 5 || bitMap == 7) { \/\/ \"hms\" & \"hs\" (we add minutes if \"hs\")\n+        pattern = cache->getNumericDateFormatters()->hourMinuteSecond;\n+        hours = uprv_trunc(hours);\n+        minutes = uprv_trunc(minutes);\n+    } else if (bitMap == 3) { \/\/ \"hm\"\n+        pattern = cache->getNumericDateFormatters()->hourMinute;\n+        hours = uprv_trunc(hours);\n+    } else if (bitMap == 6) { \/\/ \"ms\"\n+        pattern = cache->getNumericDateFormatters()->minuteSecond;\n+        minutes = uprv_trunc(minutes);\n+    } else { \/\/ h m s, handled outside formatNumeric. No value is also an error.\n@@ -800,35 +754,8 @@\n-    \/\/ Format time. draft becomes something like '5:30:45'\n-    \/\/ #13606: DateFormat is not thread-safe, but MeasureFormat advertises itself as thread-safe.\n-    FieldPosition smallestFieldPosition(smallestField);\n-    UnicodeString draft;\n-    static UMutex dateFmtMutex = U_MUTEX_INITIALIZER;\n-    umtx_lock(&dateFmtMutex);\n-    dateFmt.format(date, draft, smallestFieldPosition, status);\n-    umtx_unlock(&dateFmtMutex);\n-\n-    \/\/ If we find field for smallest amount replace it with the formatted\n-    \/\/ smallest amount from above taking care to replace the integer part\n-    \/\/ with what is in original time. For example, If smallest amount\n-    \/\/ is 9.35s and the formatted time is 0:00:09 then 9.35 becomes 09.35\n-    \/\/ and replacing yields 0:00:09.35\n-    if (smallestFieldPosition.getBeginIndex() != 0 ||\n-            smallestFieldPosition.getEndIndex() != 0) {\n-        appendRange(draft, 0, smallestFieldPosition.getBeginIndex(), appendTo);\n-        appendRange(\n-                smallestAmountFormatted,\n-                0,\n-                intFieldPosition.getBeginIndex(),\n-                appendTo);\n-        appendRange(\n-                draft,\n-                smallestFieldPosition.getBeginIndex(),\n-                smallestFieldPosition.getEndIndex(),\n-                appendTo);\n-        appendRange(\n-                smallestAmountFormatted,\n-                intFieldPosition.getEndIndex(),\n-                appendTo);\n-        appendRange(\n-                draft,\n-                smallestFieldPosition.getEndIndex(),\n-                appendTo);\n+    const DecimalFormat *numberFormatter = dynamic_cast<const DecimalFormat*>(numberFormat->get());\n+    if (!numberFormatter) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return appendTo;\n+    }\n+    number::LocalizedNumberFormatter numberFormatter2;\n+    if (auto* lnf = numberFormatter->toNumberFormatter(status)) {\n+        numberFormatter2 = lnf->integerWidth(number::IntegerWidth::zeroFillTo(2));\n@@ -836,1 +763,1 @@\n-        appendTo.append(draft);\n+        return appendTo;\n@@ -838,0 +765,54 @@\n+\n+    FormattedStringBuilder fsb;\n+\n+    UBool protect = FALSE;\n+    const int32_t patternLength = pattern.length();\n+    for (int32_t i = 0; i < patternLength; i++) {\n+        char16_t c = pattern[i];\n+\n+        \/\/ Also set the proper field in this switch\n+        \/\/ We don't use DateFormat.Field because this is not a date \/ time, is a duration.\n+        double value = 0;\n+        switch (c) {\n+            case u'H': value = hours; break;\n+            case u'm': value = minutes; break;\n+            case u's': value = seconds; break;\n+        }\n+\n+        \/\/ There is not enough info to add Field(s) for the unit because all we have are plain\n+        \/\/ text patterns. For example in \"21:51\" there is no text for something like \"hour\",\n+        \/\/ while in something like \"21h51\" there is (\"h\"). But we can't really tell...\n+        switch (c) {\n+            case u'H':\n+            case u'm':\n+            case u's':\n+                if (protect) {\n+                    fsb.appendChar16(c, kUndefinedField, status);\n+                } else {\n+                    UnicodeString tmp;\n+                    if ((i + 1 < patternLength) && pattern[i + 1] == c) { \/\/ doubled\n+                        tmp = numberFormatter2.formatDouble(value, status).toString(status);\n+                        i++;\n+                    } else {\n+                        numberFormatter->format(value, tmp, status);\n+                    }\n+                    \/\/ TODO: Use proper Field\n+                    fsb.append(tmp, kUndefinedField, status);\n+                }\n+                break;\n+            case u'\\'':\n+                \/\/ '' is escaped apostrophe\n+                if ((i + 1 < patternLength) && pattern[i + 1] == c) {\n+                    fsb.appendChar16(c, kUndefinedField, status);\n+                    i++;\n+                } else {\n+                    protect = !protect;\n+                }\n+                break;\n+            default:\n+                fsb.appendChar16(c, kUndefinedField, status);\n+        }\n+    }\n+\n+    appendTo.append(fsb.toTempUnicodeString());\n+\n@@ -883,1 +864,1 @@\n-    if (offset != -1) {\n+    if (fieldPositionFoundIndex != -1 && offset != -1) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/measfmt.cpp","additions":117,"deletions":136,"binary":false,"changes":253,"status":"modified"},{"patch":"@@ -20,0 +20,1 @@\n+#include \"unicode\/errorcode.h\"\n@@ -23,0 +24,1 @@\n+#include \"measunit_impl.h\"\n@@ -35,0 +37,1 @@\n+\/\/ TODO(ICU-21076): improve how this generated code is produced.\n@@ -36,1 +39,1 @@\n-\n+\/\/ Maps from Type ID to offset in gSubTypes.\n@@ -46,3 +49,2 @@\n-    354,\n-    358,\n-    366,\n+    355,\n+    359,\n@@ -50,6 +52,6 @@\n-    372,\n-    393,\n-    395,\n-    409,\n-    412,\n-    418,\n+    370,\n+    374,\n+    382,\n+    404,\n+    408,\n+    423,\n@@ -57,4 +59,6 @@\n-    430,\n-    434,\n-    436,\n-    463\n+    432,\n+    442,\n+    446,\n+    450,\n+    452,\n+    486\n@@ -63,25 +67,30 @@\n-static const int32_t gIndexes[] = {\n-    0,\n-    2,\n-    7,\n-    17,\n-    25,\n-    29,\n-    29,\n-    40,\n-    55,\n-    59,\n-    67,\n-    69,\n-    73,\n-    94,\n-    96,\n-    110,\n-    113,\n-    119,\n-    127,\n-    131,\n-    135,\n-    137,\n-    164\n-};\n+\/\/ TODO: FIX CODE GENERATION - leaving this here but commented-out to make it\n+\/\/ clear that we no longer want this array. We needed it for only one thing: efficient checking of \"currency\".\n+\/\/\n+\/\/ static const int32_t gIndexes[] = {\n+\/\/     0,\n+\/\/     2,\n+\/\/     7,\n+\/\/     17,\n+\/\/     25,\n+\/\/     29,\n+\/\/     29,\n+\/\/     40,\n+\/\/     56,\n+\/\/     60,\n+\/\/     69,\n+\/\/     71,\n+\/\/     75,\n+\/\/     83,\n+\/\/     105,\n+\/\/     109,\n+\/\/     124,\n+\/\/     127,\n+\/\/     133,\n+\/\/     143,\n+\/\/     147,\n+\/\/     151,\n+\/\/     153,\n+\/\/     187\n+\/\/ };\n+static const int32_t kCurrencyOffset = 5;\n@@ -103,0 +112,1 @@\n+    \"graphics\",\n@@ -118,1 +128,1 @@\n-    \"meter-per-second-squared\",\n+    \"meter-per-square-second\",\n@@ -138,1 +148,0 @@\n-    \"part-per-million\",\n@@ -141,0 +150,1 @@\n+    \"permillion\",\n@@ -142,1 +152,1 @@\n-    \"liter-per-100kilometers\",\n+    \"liter-per-100-kilometer\",\n@@ -459,0 +469,1 @@\n+    \"decade\",\n@@ -483,0 +494,1 @@\n+    \"therm-us\",\n@@ -489,0 +501,8 @@\n+    \"dot\",\n+    \"dot-per-centimeter\",\n+    \"dot-per-inch\",\n+    \"em\",\n+    \"megapixel\",\n+    \"pixel\",\n+    \"pixel-per-centimeter\",\n+    \"pixel-per-inch\",\n@@ -492,0 +512,1 @@\n+    \"earth-radius\",\n@@ -510,0 +531,2 @@\n+    \"candela\",\n+    \"lumen\",\n@@ -515,0 +538,1 @@\n+    \"grain\",\n@@ -526,3 +550,3 @@\n-    \"base\",\n-    \"percent\",\n-    \"permille\",\n+    \"\", \/\/ TODO(ICU-21076): manual edit of what should have been generated by Java.\n+    \"percent\", \/\/ TODO(ICU-21076): regenerate, deal with duplication.\n+    \"permille\", \/\/ TODO(ICU-21076): regenerate, deal with duplication.\n@@ -536,0 +560,1 @@\n+    \"bar\",\n@@ -537,1 +562,1 @@\n-    \"inch-hg\",\n+    \"inch-ofhg\",\n@@ -541,2 +566,3 @@\n-    \"millimeter-of-mercury\",\n-    \"pound-per-square-inch\",\n+    \"millimeter-ofhg\",\n+    \"pascal\",\n+    \"pound-force-per-square-inch\",\n@@ -552,1 +578,1 @@\n-    \"pound-foot\",\n+    \"pound-force-foot\",\n@@ -567,0 +593,4 @@\n+    \"dessert-spoon\",\n+    \"dessert-spoon-imperial\",\n+    \"dram\",\n+    \"drop\",\n@@ -572,0 +602,1 @@\n+    \"jigger\",\n@@ -575,0 +606,1 @@\n+    \"pinch\",\n@@ -578,0 +610,1 @@\n+    \"quart-imperial\",\n@@ -582,11 +615,1 @@\n-\/\/ Must be sorted by first value and then second value.\n-static int32_t unitPerUnitToSingleUnit[][4] = {\n-        {379, 342, 18, 0},\n-        {381, 349, 18, 2},\n-        {383, 342, 18, 3},\n-        {383, 452, 4, 2},\n-        {383, 453, 4, 3},\n-        {402, 449, 3, 1},\n-        {405, 12, 17, 7},\n-        {455, 379, 4, 1}\n-};\n+\/\/ unitPerUnitToSingleUnit no longer in use! TODO: remove from code-generation code.\n@@ -595,1 +618,1 @@\n-static const int32_t kBaseTypeIdx = 15;\n+static const int32_t kBaseTypeIdx = 16;\n@@ -766,1 +789,1 @@\n-MeasureUnit *MeasureUnit::createPartPerMillion(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createPercent(UErrorCode &status) {\n@@ -770,1 +793,1 @@\n-MeasureUnit MeasureUnit::getPartPerMillion() {\n+MeasureUnit MeasureUnit::getPercent() {\n@@ -774,1 +797,1 @@\n-MeasureUnit *MeasureUnit::createPercent(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createPermille(UErrorCode &status) {\n@@ -778,1 +801,1 @@\n-MeasureUnit MeasureUnit::getPercent() {\n+MeasureUnit MeasureUnit::getPermille() {\n@@ -782,1 +805,1 @@\n-MeasureUnit *MeasureUnit::createPermille(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createPartPerMillion(UErrorCode &status) {\n@@ -786,1 +809,1 @@\n-MeasureUnit MeasureUnit::getPermille() {\n+MeasureUnit MeasureUnit::getPartPerMillion() {\n@@ -942,1 +965,1 @@\n-MeasureUnit *MeasureUnit::createHour(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createDecade(UErrorCode &status) {\n@@ -946,1 +969,1 @@\n-MeasureUnit MeasureUnit::getHour() {\n+MeasureUnit MeasureUnit::getDecade() {\n@@ -950,1 +973,1 @@\n-MeasureUnit *MeasureUnit::createMicrosecond(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createHour(UErrorCode &status) {\n@@ -954,1 +977,1 @@\n-MeasureUnit MeasureUnit::getMicrosecond() {\n+MeasureUnit MeasureUnit::getHour() {\n@@ -958,1 +981,1 @@\n-MeasureUnit *MeasureUnit::createMillisecond(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createMicrosecond(UErrorCode &status) {\n@@ -962,1 +985,1 @@\n-MeasureUnit MeasureUnit::getMillisecond() {\n+MeasureUnit MeasureUnit::getMicrosecond() {\n@@ -966,1 +989,1 @@\n-MeasureUnit *MeasureUnit::createMinute(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createMillisecond(UErrorCode &status) {\n@@ -970,1 +993,1 @@\n-MeasureUnit MeasureUnit::getMinute() {\n+MeasureUnit MeasureUnit::getMillisecond() {\n@@ -974,1 +997,1 @@\n-MeasureUnit *MeasureUnit::createMonth(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createMinute(UErrorCode &status) {\n@@ -978,1 +1001,1 @@\n-MeasureUnit MeasureUnit::getMonth() {\n+MeasureUnit MeasureUnit::getMinute() {\n@@ -982,1 +1005,1 @@\n-MeasureUnit *MeasureUnit::createMonthPerson(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createMonth(UErrorCode &status) {\n@@ -986,1 +1009,1 @@\n-MeasureUnit MeasureUnit::getMonthPerson() {\n+MeasureUnit MeasureUnit::getMonth() {\n@@ -990,1 +1013,1 @@\n-MeasureUnit *MeasureUnit::createNanosecond(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createMonthPerson(UErrorCode &status) {\n@@ -994,1 +1017,1 @@\n-MeasureUnit MeasureUnit::getNanosecond() {\n+MeasureUnit MeasureUnit::getMonthPerson() {\n@@ -998,1 +1021,1 @@\n-MeasureUnit *MeasureUnit::createSecond(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createNanosecond(UErrorCode &status) {\n@@ -1002,1 +1025,1 @@\n-MeasureUnit MeasureUnit::getSecond() {\n+MeasureUnit MeasureUnit::getNanosecond() {\n@@ -1006,1 +1029,1 @@\n-MeasureUnit *MeasureUnit::createWeek(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createSecond(UErrorCode &status) {\n@@ -1010,1 +1033,1 @@\n-MeasureUnit MeasureUnit::getWeek() {\n+MeasureUnit MeasureUnit::getSecond() {\n@@ -1014,1 +1037,1 @@\n-MeasureUnit *MeasureUnit::createWeekPerson(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createWeek(UErrorCode &status) {\n@@ -1018,1 +1041,1 @@\n-MeasureUnit MeasureUnit::getWeekPerson() {\n+MeasureUnit MeasureUnit::getWeek() {\n@@ -1022,1 +1045,1 @@\n-MeasureUnit *MeasureUnit::createYear(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createWeekPerson(UErrorCode &status) {\n@@ -1026,1 +1049,1 @@\n-MeasureUnit MeasureUnit::getYear() {\n+MeasureUnit MeasureUnit::getWeekPerson() {\n@@ -1030,1 +1053,1 @@\n-MeasureUnit *MeasureUnit::createYearPerson(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createYear(UErrorCode &status) {\n@@ -1034,1 +1057,1 @@\n-MeasureUnit MeasureUnit::getYearPerson() {\n+MeasureUnit MeasureUnit::getYear() {\n@@ -1038,0 +1061,8 @@\n+MeasureUnit *MeasureUnit::createYearPerson(UErrorCode &status) {\n+    return MeasureUnit::create(7, 15, status);\n+}\n+\n+MeasureUnit MeasureUnit::getYearPerson() {\n+    return MeasureUnit(7, 15);\n+}\n+\n@@ -1134,0 +1165,8 @@\n+MeasureUnit *MeasureUnit::createThermUs(UErrorCode &status) {\n+    return MeasureUnit::create(9, 8, status);\n+}\n+\n+MeasureUnit MeasureUnit::getThermUs() {\n+    return MeasureUnit(9, 8);\n+}\n+\n@@ -1182,1 +1221,1 @@\n-MeasureUnit *MeasureUnit::createAstronomicalUnit(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createDot(UErrorCode &status) {\n@@ -1186,1 +1225,1 @@\n-MeasureUnit MeasureUnit::getAstronomicalUnit() {\n+MeasureUnit MeasureUnit::getDot() {\n@@ -1190,1 +1229,1 @@\n-MeasureUnit *MeasureUnit::createCentimeter(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createDotPerCentimeter(UErrorCode &status) {\n@@ -1194,1 +1233,1 @@\n-MeasureUnit MeasureUnit::getCentimeter() {\n+MeasureUnit MeasureUnit::getDotPerCentimeter() {\n@@ -1198,1 +1237,1 @@\n-MeasureUnit *MeasureUnit::createDecimeter(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createDotPerInch(UErrorCode &status) {\n@@ -1202,1 +1241,1 @@\n-MeasureUnit MeasureUnit::getDecimeter() {\n+MeasureUnit MeasureUnit::getDotPerInch() {\n@@ -1206,1 +1245,1 @@\n-MeasureUnit *MeasureUnit::createFathom(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createEm(UErrorCode &status) {\n@@ -1210,1 +1249,1 @@\n-MeasureUnit MeasureUnit::getFathom() {\n+MeasureUnit MeasureUnit::getEm() {\n@@ -1214,1 +1253,1 @@\n-MeasureUnit *MeasureUnit::createFoot(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createMegapixel(UErrorCode &status) {\n@@ -1218,1 +1257,1 @@\n-MeasureUnit MeasureUnit::getFoot() {\n+MeasureUnit MeasureUnit::getMegapixel() {\n@@ -1222,1 +1261,1 @@\n-MeasureUnit *MeasureUnit::createFurlong(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createPixel(UErrorCode &status) {\n@@ -1226,1 +1265,1 @@\n-MeasureUnit MeasureUnit::getFurlong() {\n+MeasureUnit MeasureUnit::getPixel() {\n@@ -1230,1 +1269,1 @@\n-MeasureUnit *MeasureUnit::createInch(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createPixelPerCentimeter(UErrorCode &status) {\n@@ -1234,1 +1273,1 @@\n-MeasureUnit MeasureUnit::getInch() {\n+MeasureUnit MeasureUnit::getPixelPerCentimeter() {\n@@ -1238,1 +1277,1 @@\n-MeasureUnit *MeasureUnit::createKilometer(UErrorCode &status) {\n+MeasureUnit *MeasureUnit::createPixelPerInch(UErrorCode &status) {\n@@ -1242,1 +1281,1 @@\n-MeasureUnit MeasureUnit::getKilometer() {\n+MeasureUnit MeasureUnit::getPixelPerInch() {\n@@ -1246,0 +1285,72 @@\n+MeasureUnit *MeasureUnit::createAstronomicalUnit(UErrorCode &status) {\n+    return MeasureUnit::create(13, 0, status);\n+}\n+\n+MeasureUnit MeasureUnit::getAstronomicalUnit() {\n+    return MeasureUnit(13, 0);\n+}\n+\n+MeasureUnit *MeasureUnit::createCentimeter(UErrorCode &status) {\n+    return MeasureUnit::create(13, 1, status);\n+}\n+\n+MeasureUnit MeasureUnit::getCentimeter() {\n+    return MeasureUnit(13, 1);\n+}\n+\n+MeasureUnit *MeasureUnit::createDecimeter(UErrorCode &status) {\n+    return MeasureUnit::create(13, 2, status);\n+}\n+\n+MeasureUnit MeasureUnit::getDecimeter() {\n+    return MeasureUnit(13, 2);\n+}\n+\n+MeasureUnit *MeasureUnit::createEarthRadius(UErrorCode &status) {\n+    return MeasureUnit::create(13, 3, status);\n+}\n+\n+MeasureUnit MeasureUnit::getEarthRadius() {\n+    return MeasureUnit(13, 3);\n+}\n+\n+MeasureUnit *MeasureUnit::createFathom(UErrorCode &status) {\n+    return MeasureUnit::create(13, 4, status);\n+}\n+\n+MeasureUnit MeasureUnit::getFathom() {\n+    return MeasureUnit(13, 4);\n+}\n+\n+MeasureUnit *MeasureUnit::createFoot(UErrorCode &status) {\n+    return MeasureUnit::create(13, 5, status);\n+}\n+\n+MeasureUnit MeasureUnit::getFoot() {\n+    return MeasureUnit(13, 5);\n+}\n+\n+MeasureUnit *MeasureUnit::createFurlong(UErrorCode &status) {\n+    return MeasureUnit::create(13, 6, status);\n+}\n+\n+MeasureUnit MeasureUnit::getFurlong() {\n+    return MeasureUnit(13, 6);\n+}\n+\n+MeasureUnit *MeasureUnit::createInch(UErrorCode &status) {\n+    return MeasureUnit::create(13, 7, status);\n+}\n+\n+MeasureUnit MeasureUnit::getInch() {\n+    return MeasureUnit(13, 7);\n+}\n+\n+MeasureUnit *MeasureUnit::createKilometer(UErrorCode &status) {\n+    return MeasureUnit::create(13, 8, status);\n+}\n+\n+MeasureUnit MeasureUnit::getKilometer() {\n+    return MeasureUnit(13, 8);\n+}\n+\n@@ -1247,1 +1358,1 @@\n-    return MeasureUnit::create(12, 8, status);\n+    return MeasureUnit::create(13, 9, status);\n@@ -1251,1 +1362,1 @@\n-    return MeasureUnit(12, 8);\n+    return MeasureUnit(13, 9);\n@@ -1255,1 +1366,1 @@\n-    return MeasureUnit::create(12, 9, status);\n+    return MeasureUnit::create(13, 10, status);\n@@ -1259,1 +1370,1 @@\n-    return MeasureUnit(12, 9);\n+    return MeasureUnit(13, 10);\n@@ -1263,1 +1374,1 @@\n-    return MeasureUnit::create(12, 10, status);\n+    return MeasureUnit::create(13, 11, status);\n@@ -1267,1 +1378,1 @@\n-    return MeasureUnit(12, 10);\n+    return MeasureUnit(13, 11);\n@@ -1271,1 +1382,1 @@\n-    return MeasureUnit::create(12, 11, status);\n+    return MeasureUnit::create(13, 12, status);\n@@ -1275,1 +1386,1 @@\n-    return MeasureUnit(12, 11);\n+    return MeasureUnit(13, 12);\n@@ -1279,1 +1390,1 @@\n-    return MeasureUnit::create(12, 12, status);\n+    return MeasureUnit::create(13, 13, status);\n@@ -1283,1 +1394,1 @@\n-    return MeasureUnit(12, 12);\n+    return MeasureUnit(13, 13);\n@@ -1287,1 +1398,1 @@\n-    return MeasureUnit::create(12, 13, status);\n+    return MeasureUnit::create(13, 14, status);\n@@ -1291,1 +1402,1 @@\n-    return MeasureUnit(12, 13);\n+    return MeasureUnit(13, 14);\n@@ -1295,1 +1406,1 @@\n-    return MeasureUnit::create(12, 14, status);\n+    return MeasureUnit::create(13, 15, status);\n@@ -1299,1 +1410,1 @@\n-    return MeasureUnit(12, 14);\n+    return MeasureUnit(13, 15);\n@@ -1303,1 +1414,1 @@\n-    return MeasureUnit::create(12, 15, status);\n+    return MeasureUnit::create(13, 16, status);\n@@ -1307,1 +1418,1 @@\n-    return MeasureUnit(12, 15);\n+    return MeasureUnit(13, 16);\n@@ -1311,1 +1422,1 @@\n-    return MeasureUnit::create(12, 16, status);\n+    return MeasureUnit::create(13, 17, status);\n@@ -1315,1 +1426,1 @@\n-    return MeasureUnit(12, 16);\n+    return MeasureUnit(13, 17);\n@@ -1319,1 +1430,1 @@\n-    return MeasureUnit::create(12, 17, status);\n+    return MeasureUnit::create(13, 18, status);\n@@ -1323,1 +1434,1 @@\n-    return MeasureUnit(12, 17);\n+    return MeasureUnit(13, 18);\n@@ -1327,1 +1438,1 @@\n-    return MeasureUnit::create(12, 18, status);\n+    return MeasureUnit::create(13, 19, status);\n@@ -1331,1 +1442,1 @@\n-    return MeasureUnit(12, 18);\n+    return MeasureUnit(13, 19);\n@@ -1335,1 +1446,1 @@\n-    return MeasureUnit::create(12, 19, status);\n+    return MeasureUnit::create(13, 20, status);\n@@ -1339,1 +1450,1 @@\n-    return MeasureUnit(12, 19);\n+    return MeasureUnit(13, 20);\n@@ -1343,1 +1454,1 @@\n-    return MeasureUnit::create(12, 20, status);\n+    return MeasureUnit::create(13, 21, status);\n@@ -1347,1 +1458,17 @@\n-    return MeasureUnit(12, 20);\n+    return MeasureUnit(13, 21);\n+}\n+\n+MeasureUnit *MeasureUnit::createCandela(UErrorCode &status) {\n+    return MeasureUnit::create(14, 0, status);\n+}\n+\n+MeasureUnit MeasureUnit::getCandela() {\n+    return MeasureUnit(14, 0);\n+}\n+\n+MeasureUnit *MeasureUnit::createLumen(UErrorCode &status) {\n+    return MeasureUnit::create(14, 1, status);\n+}\n+\n+MeasureUnit MeasureUnit::getLumen() {\n+    return MeasureUnit(14, 1);\n@@ -1351,1 +1478,1 @@\n-    return MeasureUnit::create(13, 0, status);\n+    return MeasureUnit::create(14, 2, status);\n@@ -1355,1 +1482,1 @@\n-    return MeasureUnit(13, 0);\n+    return MeasureUnit(14, 2);\n@@ -1359,1 +1486,1 @@\n-    return MeasureUnit::create(13, 1, status);\n+    return MeasureUnit::create(14, 3, status);\n@@ -1363,1 +1490,1 @@\n-    return MeasureUnit(13, 1);\n+    return MeasureUnit(14, 3);\n@@ -1367,1 +1494,1 @@\n-    return MeasureUnit::create(14, 0, status);\n+    return MeasureUnit::create(15, 0, status);\n@@ -1371,1 +1498,1 @@\n-    return MeasureUnit(14, 0);\n+    return MeasureUnit(15, 0);\n@@ -1375,1 +1502,1 @@\n-    return MeasureUnit::create(14, 1, status);\n+    return MeasureUnit::create(15, 1, status);\n@@ -1379,1 +1506,1 @@\n-    return MeasureUnit(14, 1);\n+    return MeasureUnit(15, 1);\n@@ -1383,1 +1510,1 @@\n-    return MeasureUnit::create(14, 2, status);\n+    return MeasureUnit::create(15, 2, status);\n@@ -1387,1 +1514,9 @@\n-    return MeasureUnit(14, 2);\n+    return MeasureUnit(15, 2);\n+}\n+\n+MeasureUnit *MeasureUnit::createGrain(UErrorCode &status) {\n+    return MeasureUnit::create(15, 3, status);\n+}\n+\n+MeasureUnit MeasureUnit::getGrain() {\n+    return MeasureUnit(15, 3);\n@@ -1391,1 +1526,1 @@\n-    return MeasureUnit::create(14, 3, status);\n+    return MeasureUnit::create(15, 4, status);\n@@ -1395,1 +1530,1 @@\n-    return MeasureUnit(14, 3);\n+    return MeasureUnit(15, 4);\n@@ -1399,1 +1534,1 @@\n-    return MeasureUnit::create(14, 4, status);\n+    return MeasureUnit::create(15, 5, status);\n@@ -1403,1 +1538,1 @@\n-    return MeasureUnit(14, 4);\n+    return MeasureUnit(15, 5);\n@@ -1407,1 +1542,1 @@\n-    return MeasureUnit::create(14, 5, status);\n+    return MeasureUnit::create(15, 6, status);\n@@ -1411,1 +1546,1 @@\n-    return MeasureUnit(14, 5);\n+    return MeasureUnit(15, 6);\n@@ -1415,1 +1550,1 @@\n-    return MeasureUnit::create(14, 6, status);\n+    return MeasureUnit::create(15, 7, status);\n@@ -1419,1 +1554,1 @@\n-    return MeasureUnit(14, 6);\n+    return MeasureUnit(15, 7);\n@@ -1423,1 +1558,1 @@\n-    return MeasureUnit::create(14, 7, status);\n+    return MeasureUnit::create(15, 8, status);\n@@ -1427,1 +1562,1 @@\n-    return MeasureUnit(14, 7);\n+    return MeasureUnit(15, 8);\n@@ -1431,1 +1566,1 @@\n-    return MeasureUnit::create(14, 8, status);\n+    return MeasureUnit::create(15, 9, status);\n@@ -1435,1 +1570,1 @@\n-    return MeasureUnit(14, 8);\n+    return MeasureUnit(15, 9);\n@@ -1439,1 +1574,1 @@\n-    return MeasureUnit::create(14, 9, status);\n+    return MeasureUnit::create(15, 10, status);\n@@ -1443,1 +1578,1 @@\n-    return MeasureUnit(14, 9);\n+    return MeasureUnit(15, 10);\n@@ -1447,1 +1582,1 @@\n-    return MeasureUnit::create(14, 10, status);\n+    return MeasureUnit::create(15, 11, status);\n@@ -1451,1 +1586,1 @@\n-    return MeasureUnit(14, 10);\n+    return MeasureUnit(15, 11);\n@@ -1455,1 +1590,1 @@\n-    return MeasureUnit::create(14, 11, status);\n+    return MeasureUnit::create(15, 12, status);\n@@ -1459,1 +1594,1 @@\n-    return MeasureUnit(14, 11);\n+    return MeasureUnit(15, 12);\n@@ -1463,1 +1598,1 @@\n-    return MeasureUnit::create(14, 12, status);\n+    return MeasureUnit::create(15, 13, status);\n@@ -1467,1 +1602,1 @@\n-    return MeasureUnit(14, 12);\n+    return MeasureUnit(15, 13);\n@@ -1471,1 +1606,1 @@\n-    return MeasureUnit::create(14, 13, status);\n+    return MeasureUnit::create(15, 14, status);\n@@ -1475,1 +1610,1 @@\n-    return MeasureUnit(14, 13);\n+    return MeasureUnit(15, 14);\n@@ -1479,1 +1614,1 @@\n-    return MeasureUnit::create(16, 0, status);\n+    return MeasureUnit::create(17, 0, status);\n@@ -1483,1 +1618,1 @@\n-    return MeasureUnit(16, 0);\n+    return MeasureUnit(17, 0);\n@@ -1487,1 +1622,1 @@\n-    return MeasureUnit::create(16, 1, status);\n+    return MeasureUnit::create(17, 1, status);\n@@ -1491,1 +1626,1 @@\n-    return MeasureUnit(16, 1);\n+    return MeasureUnit(17, 1);\n@@ -1495,1 +1630,1 @@\n-    return MeasureUnit::create(16, 2, status);\n+    return MeasureUnit::create(17, 2, status);\n@@ -1499,1 +1634,1 @@\n-    return MeasureUnit(16, 2);\n+    return MeasureUnit(17, 2);\n@@ -1503,1 +1638,1 @@\n-    return MeasureUnit::create(16, 3, status);\n+    return MeasureUnit::create(17, 3, status);\n@@ -1507,1 +1642,1 @@\n-    return MeasureUnit(16, 3);\n+    return MeasureUnit(17, 3);\n@@ -1511,1 +1646,1 @@\n-    return MeasureUnit::create(16, 4, status);\n+    return MeasureUnit::create(17, 4, status);\n@@ -1515,1 +1650,1 @@\n-    return MeasureUnit(16, 4);\n+    return MeasureUnit(17, 4);\n@@ -1519,1 +1654,1 @@\n-    return MeasureUnit::create(16, 5, status);\n+    return MeasureUnit::create(17, 5, status);\n@@ -1523,1 +1658,1 @@\n-    return MeasureUnit(16, 5);\n+    return MeasureUnit(17, 5);\n@@ -1527,1 +1662,1 @@\n-    return MeasureUnit::create(17, 0, status);\n+    return MeasureUnit::create(18, 0, status);\n@@ -1531,1 +1666,9 @@\n-    return MeasureUnit(17, 0);\n+    return MeasureUnit(18, 0);\n+}\n+\n+MeasureUnit *MeasureUnit::createBar(UErrorCode &status) {\n+    return MeasureUnit::create(18, 1, status);\n+}\n+\n+MeasureUnit MeasureUnit::getBar() {\n+    return MeasureUnit(18, 1);\n@@ -1535,1 +1678,1 @@\n-    return MeasureUnit::create(17, 1, status);\n+    return MeasureUnit::create(18, 2, status);\n@@ -1539,1 +1682,1 @@\n-    return MeasureUnit(17, 1);\n+    return MeasureUnit(18, 2);\n@@ -1543,1 +1686,1 @@\n-    return MeasureUnit::create(17, 2, status);\n+    return MeasureUnit::create(18, 3, status);\n@@ -1547,1 +1690,1 @@\n-    return MeasureUnit(17, 2);\n+    return MeasureUnit(18, 3);\n@@ -1551,1 +1694,1 @@\n-    return MeasureUnit::create(17, 3, status);\n+    return MeasureUnit::create(18, 4, status);\n@@ -1555,1 +1698,1 @@\n-    return MeasureUnit(17, 3);\n+    return MeasureUnit(18, 4);\n@@ -1559,1 +1702,1 @@\n-    return MeasureUnit::create(17, 4, status);\n+    return MeasureUnit::create(18, 5, status);\n@@ -1563,1 +1706,1 @@\n-    return MeasureUnit(17, 4);\n+    return MeasureUnit(18, 5);\n@@ -1567,1 +1710,1 @@\n-    return MeasureUnit::create(17, 5, status);\n+    return MeasureUnit::create(18, 6, status);\n@@ -1571,1 +1714,1 @@\n-    return MeasureUnit(17, 5);\n+    return MeasureUnit(18, 6);\n@@ -1575,1 +1718,1 @@\n-    return MeasureUnit::create(17, 6, status);\n+    return MeasureUnit::create(18, 7, status);\n@@ -1579,1 +1722,9 @@\n-    return MeasureUnit(17, 6);\n+    return MeasureUnit(18, 7);\n+}\n+\n+MeasureUnit *MeasureUnit::createPascal(UErrorCode &status) {\n+    return MeasureUnit::create(18, 8, status);\n+}\n+\n+MeasureUnit MeasureUnit::getPascal() {\n+    return MeasureUnit(18, 8);\n@@ -1583,1 +1734,1 @@\n-    return MeasureUnit::create(17, 7, status);\n+    return MeasureUnit::create(18, 9, status);\n@@ -1587,1 +1738,1 @@\n-    return MeasureUnit(17, 7);\n+    return MeasureUnit(18, 9);\n@@ -1591,1 +1742,1 @@\n-    return MeasureUnit::create(18, 0, status);\n+    return MeasureUnit::create(19, 0, status);\n@@ -1595,1 +1746,1 @@\n-    return MeasureUnit(18, 0);\n+    return MeasureUnit(19, 0);\n@@ -1599,1 +1750,1 @@\n-    return MeasureUnit::create(18, 1, status);\n+    return MeasureUnit::create(19, 1, status);\n@@ -1603,1 +1754,1 @@\n-    return MeasureUnit(18, 1);\n+    return MeasureUnit(19, 1);\n@@ -1607,1 +1758,1 @@\n-    return MeasureUnit::create(18, 2, status);\n+    return MeasureUnit::create(19, 2, status);\n@@ -1611,1 +1762,1 @@\n-    return MeasureUnit(18, 2);\n+    return MeasureUnit(19, 2);\n@@ -1615,1 +1766,1 @@\n-    return MeasureUnit::create(18, 3, status);\n+    return MeasureUnit::create(19, 3, status);\n@@ -1619,1 +1770,1 @@\n-    return MeasureUnit(18, 3);\n+    return MeasureUnit(19, 3);\n@@ -1623,1 +1774,1 @@\n-    return MeasureUnit::create(19, 0, status);\n+    return MeasureUnit::create(20, 0, status);\n@@ -1627,1 +1778,1 @@\n-    return MeasureUnit(19, 0);\n+    return MeasureUnit(20, 0);\n@@ -1631,1 +1782,1 @@\n-    return MeasureUnit::create(19, 1, status);\n+    return MeasureUnit::create(20, 1, status);\n@@ -1635,1 +1786,1 @@\n-    return MeasureUnit(19, 1);\n+    return MeasureUnit(20, 1);\n@@ -1639,1 +1790,1 @@\n-    return MeasureUnit::create(19, 2, status);\n+    return MeasureUnit::create(20, 2, status);\n@@ -1643,1 +1794,1 @@\n-    return MeasureUnit(19, 2);\n+    return MeasureUnit(20, 2);\n@@ -1647,1 +1798,1 @@\n-    return MeasureUnit::create(19, 3, status);\n+    return MeasureUnit::create(20, 3, status);\n@@ -1651,1 +1802,1 @@\n-    return MeasureUnit(19, 3);\n+    return MeasureUnit(20, 3);\n@@ -1655,1 +1806,1 @@\n-    return MeasureUnit::create(20, 0, status);\n+    return MeasureUnit::create(21, 0, status);\n@@ -1659,1 +1810,1 @@\n-    return MeasureUnit(20, 0);\n+    return MeasureUnit(21, 0);\n@@ -1663,1 +1814,1 @@\n-    return MeasureUnit::create(20, 1, status);\n+    return MeasureUnit::create(21, 1, status);\n@@ -1667,1 +1818,1 @@\n-    return MeasureUnit(20, 1);\n+    return MeasureUnit(21, 1);\n@@ -1671,1 +1822,1 @@\n-    return MeasureUnit::create(21, 0, status);\n+    return MeasureUnit::create(22, 0, status);\n@@ -1675,1 +1826,1 @@\n-    return MeasureUnit(21, 0);\n+    return MeasureUnit(22, 0);\n@@ -1679,1 +1830,1 @@\n-    return MeasureUnit::create(21, 1, status);\n+    return MeasureUnit::create(22, 1, status);\n@@ -1683,1 +1834,1 @@\n-    return MeasureUnit(21, 1);\n+    return MeasureUnit(22, 1);\n@@ -1687,1 +1838,1 @@\n-    return MeasureUnit::create(21, 2, status);\n+    return MeasureUnit::create(22, 2, status);\n@@ -1691,1 +1842,1 @@\n-    return MeasureUnit(21, 2);\n+    return MeasureUnit(22, 2);\n@@ -1695,1 +1846,1 @@\n-    return MeasureUnit::create(21, 3, status);\n+    return MeasureUnit::create(22, 3, status);\n@@ -1699,1 +1850,1 @@\n-    return MeasureUnit(21, 3);\n+    return MeasureUnit(22, 3);\n@@ -1703,1 +1854,1 @@\n-    return MeasureUnit::create(21, 4, status);\n+    return MeasureUnit::create(22, 4, status);\n@@ -1707,1 +1858,1 @@\n-    return MeasureUnit(21, 4);\n+    return MeasureUnit(22, 4);\n@@ -1711,1 +1862,1 @@\n-    return MeasureUnit::create(21, 5, status);\n+    return MeasureUnit::create(22, 5, status);\n@@ -1715,1 +1866,1 @@\n-    return MeasureUnit(21, 5);\n+    return MeasureUnit(22, 5);\n@@ -1719,1 +1870,1 @@\n-    return MeasureUnit::create(21, 6, status);\n+    return MeasureUnit::create(22, 6, status);\n@@ -1723,1 +1874,1 @@\n-    return MeasureUnit(21, 6);\n+    return MeasureUnit(22, 6);\n@@ -1727,1 +1878,1 @@\n-    return MeasureUnit::create(21, 7, status);\n+    return MeasureUnit::create(22, 7, status);\n@@ -1731,1 +1882,1 @@\n-    return MeasureUnit(21, 7);\n+    return MeasureUnit(22, 7);\n@@ -1735,1 +1886,1 @@\n-    return MeasureUnit::create(21, 8, status);\n+    return MeasureUnit::create(22, 8, status);\n@@ -1739,1 +1890,1 @@\n-    return MeasureUnit(21, 8);\n+    return MeasureUnit(22, 8);\n@@ -1743,1 +1894,1 @@\n-    return MeasureUnit::create(21, 9, status);\n+    return MeasureUnit::create(22, 9, status);\n@@ -1747,1 +1898,1 @@\n-    return MeasureUnit(21, 9);\n+    return MeasureUnit(22, 9);\n@@ -1751,1 +1902,1 @@\n-    return MeasureUnit::create(21, 10, status);\n+    return MeasureUnit::create(22, 10, status);\n@@ -1755,1 +1906,1 @@\n-    return MeasureUnit(21, 10);\n+    return MeasureUnit(22, 10);\n@@ -1759,1 +1910,1 @@\n-    return MeasureUnit::create(21, 11, status);\n+    return MeasureUnit::create(22, 11, status);\n@@ -1763,1 +1914,1 @@\n-    return MeasureUnit(21, 11);\n+    return MeasureUnit(22, 11);\n@@ -1767,1 +1918,1 @@\n-    return MeasureUnit::create(21, 12, status);\n+    return MeasureUnit::create(22, 12, status);\n@@ -1771,1 +1922,1 @@\n-    return MeasureUnit(21, 12);\n+    return MeasureUnit(22, 12);\n@@ -1775,1 +1926,1 @@\n-    return MeasureUnit::create(21, 13, status);\n+    return MeasureUnit::create(22, 13, status);\n@@ -1779,1 +1930,33 @@\n-    return MeasureUnit(21, 13);\n+    return MeasureUnit(22, 13);\n+}\n+\n+MeasureUnit *MeasureUnit::createDessertSpoon(UErrorCode &status) {\n+    return MeasureUnit::create(22, 14, status);\n+}\n+\n+MeasureUnit MeasureUnit::getDessertSpoon() {\n+    return MeasureUnit(22, 14);\n+}\n+\n+MeasureUnit *MeasureUnit::createDessertSpoonImperial(UErrorCode &status) {\n+    return MeasureUnit::create(22, 15, status);\n+}\n+\n+MeasureUnit MeasureUnit::getDessertSpoonImperial() {\n+    return MeasureUnit(22, 15);\n+}\n+\n+MeasureUnit *MeasureUnit::createDram(UErrorCode &status) {\n+    return MeasureUnit::create(22, 16, status);\n+}\n+\n+MeasureUnit MeasureUnit::getDram() {\n+    return MeasureUnit(22, 16);\n+}\n+\n+MeasureUnit *MeasureUnit::createDrop(UErrorCode &status) {\n+    return MeasureUnit::create(22, 17, status);\n+}\n+\n+MeasureUnit MeasureUnit::getDrop() {\n+    return MeasureUnit(22, 17);\n@@ -1783,1 +1966,1 @@\n-    return MeasureUnit::create(21, 14, status);\n+    return MeasureUnit::create(22, 18, status);\n@@ -1787,1 +1970,1 @@\n-    return MeasureUnit(21, 14);\n+    return MeasureUnit(22, 18);\n@@ -1791,1 +1974,1 @@\n-    return MeasureUnit::create(21, 15, status);\n+    return MeasureUnit::create(22, 19, status);\n@@ -1795,1 +1978,1 @@\n-    return MeasureUnit(21, 15);\n+    return MeasureUnit(22, 19);\n@@ -1799,1 +1982,1 @@\n-    return MeasureUnit::create(21, 16, status);\n+    return MeasureUnit::create(22, 20, status);\n@@ -1803,1 +1986,1 @@\n-    return MeasureUnit(21, 16);\n+    return MeasureUnit(22, 20);\n@@ -1807,1 +1990,1 @@\n-    return MeasureUnit::create(21, 17, status);\n+    return MeasureUnit::create(22, 21, status);\n@@ -1811,1 +1994,1 @@\n-    return MeasureUnit(21, 17);\n+    return MeasureUnit(22, 21);\n@@ -1815,1 +1998,1 @@\n-    return MeasureUnit::create(21, 18, status);\n+    return MeasureUnit::create(22, 22, status);\n@@ -1819,1 +2002,9 @@\n-    return MeasureUnit(21, 18);\n+    return MeasureUnit(22, 22);\n+}\n+\n+MeasureUnit *MeasureUnit::createJigger(UErrorCode &status) {\n+    return MeasureUnit::create(22, 23, status);\n+}\n+\n+MeasureUnit MeasureUnit::getJigger() {\n+    return MeasureUnit(22, 23);\n@@ -1823,1 +2014,1 @@\n-    return MeasureUnit::create(21, 19, status);\n+    return MeasureUnit::create(22, 24, status);\n@@ -1827,1 +2018,1 @@\n-    return MeasureUnit(21, 19);\n+    return MeasureUnit(22, 24);\n@@ -1831,1 +2022,1 @@\n-    return MeasureUnit::create(21, 20, status);\n+    return MeasureUnit::create(22, 25, status);\n@@ -1835,1 +2026,1 @@\n-    return MeasureUnit(21, 20);\n+    return MeasureUnit(22, 25);\n@@ -1839,1 +2030,1 @@\n-    return MeasureUnit::create(21, 21, status);\n+    return MeasureUnit::create(22, 26, status);\n@@ -1843,1 +2034,9 @@\n-    return MeasureUnit(21, 21);\n+    return MeasureUnit(22, 26);\n+}\n+\n+MeasureUnit *MeasureUnit::createPinch(UErrorCode &status) {\n+    return MeasureUnit::create(22, 27, status);\n+}\n+\n+MeasureUnit MeasureUnit::getPinch() {\n+    return MeasureUnit(22, 27);\n@@ -1847,1 +2046,1 @@\n-    return MeasureUnit::create(21, 22, status);\n+    return MeasureUnit::create(22, 28, status);\n@@ -1851,1 +2050,1 @@\n-    return MeasureUnit(21, 22);\n+    return MeasureUnit(22, 28);\n@@ -1855,1 +2054,1 @@\n-    return MeasureUnit::create(21, 23, status);\n+    return MeasureUnit::create(22, 29, status);\n@@ -1859,1 +2058,1 @@\n-    return MeasureUnit(21, 23);\n+    return MeasureUnit(22, 29);\n@@ -1863,1 +2062,1 @@\n-    return MeasureUnit::create(21, 24, status);\n+    return MeasureUnit::create(22, 30, status);\n@@ -1867,1 +2066,9 @@\n-    return MeasureUnit(21, 24);\n+    return MeasureUnit(22, 30);\n+}\n+\n+MeasureUnit *MeasureUnit::createQuartImperial(UErrorCode &status) {\n+    return MeasureUnit::create(22, 31, status);\n+}\n+\n+MeasureUnit MeasureUnit::getQuartImperial() {\n+    return MeasureUnit(22, 31);\n@@ -1871,1 +2078,1 @@\n-    return MeasureUnit::create(21, 25, status);\n+    return MeasureUnit::create(22, 32, status);\n@@ -1875,1 +2082,1 @@\n-    return MeasureUnit(21, 25);\n+    return MeasureUnit(22, 32);\n@@ -1879,1 +2086,1 @@\n-    return MeasureUnit::create(21, 26, status);\n+    return MeasureUnit::create(22, 33, status);\n@@ -1883,1 +2090,1 @@\n-    return MeasureUnit(21, 26);\n+    return MeasureUnit(22, 33);\n@@ -1889,1 +2096,1 @@\n-        const char * const * array, int32_t start, int32_t end, const char * key) {\n+        const char * const * array, int32_t start, int32_t end, StringPiece key) {\n@@ -1892,1 +2099,1 @@\n-        int32_t cmp = uprv_strcmp(array[mid], key);\n+        int32_t cmp = StringPiece(array[mid]).compare(key);\n@@ -1905,4 +2112,5 @@\n-MeasureUnit::MeasureUnit() {\n-    fCurrency[0] = 0;\n-    fTypeId = kBaseTypeIdx;\n-    fSubTypeId = kBaseSubTypeIdx;\n+MeasureUnit::MeasureUnit() : MeasureUnit(kBaseTypeIdx, kBaseSubTypeIdx) {\n+}\n+\n+MeasureUnit::MeasureUnit(int32_t typeId, int32_t subTypeId)\n+        : fImpl(nullptr), fSubTypeId(subTypeId), fTypeId(typeId) {\n@@ -1912,2 +2120,16 @@\n-        : fTypeId(other.fTypeId), fSubTypeId(other.fSubTypeId) {\n-    uprv_strcpy(fCurrency, other.fCurrency);\n+        : fImpl(nullptr) {\n+    *this = other;\n+}\n+\n+MeasureUnit::MeasureUnit(MeasureUnit &&other) noexcept\n+        : fImpl(other.fImpl),\n+        fSubTypeId(other.fSubTypeId),\n+        fTypeId(other.fTypeId) {\n+    other.fImpl = nullptr;\n+}\n+\n+MeasureUnit::MeasureUnit(MeasureUnitImpl&& impl)\n+        : fImpl(nullptr), fSubTypeId(-1), fTypeId(-1) {\n+    if (!findBySubType(impl.identifier.toStringPiece(), this)) {\n+        fImpl = new MeasureUnitImpl(std::move(impl));\n+    }\n@@ -1920,0 +2142,14 @@\n+    if (fImpl != nullptr) {\n+        delete fImpl;\n+    }\n+    if (other.fImpl) {\n+        ErrorCode localStatus;\n+        fImpl = new MeasureUnitImpl(other.fImpl->copy(localStatus));\n+        if (!fImpl || localStatus.isFailure()) {\n+            \/\/ Unrecoverable allocation error; set to the default unit\n+            *this = MeasureUnit();\n+            return *this;\n+        }\n+    } else {\n+        fImpl = nullptr;\n+    }\n@@ -1922,1 +2158,0 @@\n-    uprv_strcpy(fCurrency, other.fCurrency);\n@@ -1926,1 +2161,15 @@\n-UObject *MeasureUnit::clone() const {\n+MeasureUnit &MeasureUnit::operator=(MeasureUnit &&other) noexcept {\n+    if (this == &other) {\n+        return *this;\n+    }\n+    if (fImpl != nullptr) {\n+        delete fImpl;\n+    }\n+    fImpl = other.fImpl;\n+    other.fImpl = nullptr;\n+    fTypeId = other.fTypeId;\n+    fSubTypeId = other.fSubTypeId;\n+    return *this;\n+}\n+\n+MeasureUnit *MeasureUnit::clone() const {\n@@ -1931,0 +2180,4 @@\n+    if (fImpl != nullptr) {\n+        delete fImpl;\n+        fImpl = nullptr;\n+    }\n@@ -1934,0 +2187,4 @@\n+    \/\/ We have a type & subtype only if fTypeId is present.\n+    if (fTypeId == -1) {\n+        return \"\";\n+    }\n@@ -1938,1 +2195,9 @@\n-    return fCurrency[0] == 0 ? gSubTypes[getOffset()] : fCurrency;\n+    \/\/ We have a type & subtype only if fTypeId is present.\n+    if (fTypeId == -1) {\n+        return \"\";\n+    }\n+    return getIdentifier();\n+}\n+\n+const char *MeasureUnit::getIdentifier() const {\n+    return fImpl ? fImpl->identifier.data() : gSubTypes[getOffset()];\n@@ -1949,8 +2214,1 @@\n-    return (\n-            fTypeId == rhs.fTypeId\n-            && fSubTypeId == rhs.fSubTypeId\n-            && uprv_strcmp(fCurrency, rhs.fCurrency) == 0);\n-}\n-\n-int32_t MeasureUnit::getIndex() const {\n-    return gIndexes[fTypeId] + fSubTypeId;\n+    return uprv_strcmp(getIdentifier(), rhs.getIdentifier()) == 0;\n@@ -2021,40 +2279,12 @@\n-int32_t MeasureUnit::getIndexCount() {\n-    return gIndexes[UPRV_LENGTHOF(gIndexes) - 1];\n-}\n-\n-int32_t MeasureUnit::internalGetIndexForTypeAndSubtype(const char *type, const char *subtype) {\n-    int32_t t = binarySearch(gTypes, 0, UPRV_LENGTHOF(gTypes), type);\n-    if (t < 0) {\n-        return t;\n-    }\n-    int32_t st = binarySearch(gSubTypes, gOffsets[t], gOffsets[t + 1], subtype);\n-    if (st < 0) {\n-        return st;\n-    }\n-    return gIndexes[t] + st - gOffsets[t];\n-}\n-\n-MeasureUnit MeasureUnit::resolveUnitPerUnit(\n-        const MeasureUnit &unit, const MeasureUnit &perUnit, bool* isResolved) {\n-    int32_t unitOffset = unit.getOffset();\n-    int32_t perUnitOffset = perUnit.getOffset();\n-\n-    \/\/ binary search for (unitOffset, perUnitOffset)\n-    int32_t start = 0;\n-    int32_t end = UPRV_LENGTHOF(unitPerUnitToSingleUnit);\n-    while (start < end) {\n-        int32_t mid = (start + end) \/ 2;\n-        int32_t *midRow = unitPerUnitToSingleUnit[mid];\n-        if (unitOffset < midRow[0]) {\n-            end = mid;\n-        } else if (unitOffset > midRow[0]) {\n-            start = mid + 1;\n-        } else if (perUnitOffset < midRow[1]) {\n-            end = mid;\n-        } else if (perUnitOffset > midRow[1]) {\n-            start = mid + 1;\n-        } else {\n-            \/\/ We found a resolution for our unit \/ per-unit combo\n-            \/\/ return it.\n-            *isResolved = true;\n-            return MeasureUnit(midRow[2], midRow[3]);\n+bool MeasureUnit::findBySubType(StringPiece subType, MeasureUnit* output) {\n+    for (int32_t t = 0; t < UPRV_LENGTHOF(gOffsets) - 1; t++) {\n+        \/\/ Ensure kCurrencyOffset is set correctly\n+        U_ASSERT(uprv_strcmp(gTypes[kCurrencyOffset], \"currency\") == 0);\n+        \/\/ Skip currency units\n+        if (t == kCurrencyOffset) {\n+            continue;\n+        }\n+        int32_t st = binarySearch(gSubTypes, gOffsets[t], gOffsets[t + 1], subType);\n+        if (st >= 0) {\n+            output->setTo(t, st - gOffsets[t]);\n+            return true;\n@@ -2063,3 +2293,1 @@\n-\n-    *isResolved = false;\n-    return MeasureUnit();\n+    return false;\n@@ -2088,1 +2316,1 @@\n-void MeasureUnit::initCurrency(const char *isoCurrency) {\n+void MeasureUnit::initCurrency(StringPiece isoCurrency) {\n@@ -2094,5 +2322,10 @@\n-    if (result != -1) {\n-        fSubTypeId = result - gOffsets[fTypeId];\n-    } else {\n-        uprv_strncpy(fCurrency, isoCurrency, UPRV_LENGTHOF(fCurrency));\n-        fCurrency[3] = 0;\n+    if (result == -1) {\n+        fImpl = new MeasureUnitImpl(MeasureUnitImpl::forCurrencyCode(isoCurrency));\n+        if (fImpl) {\n+            fSubTypeId = -1;\n+            return;\n+        }\n+        \/\/ malloc error: fall back to the undefined currency\n+        result = binarySearch(\n+            gSubTypes, gOffsets[fTypeId], gOffsets[fTypeId + 1], kDefaultCurrency8);\n+        U_ASSERT(result != -1);\n@@ -2100,8 +2333,0 @@\n-}\n-\n-void MeasureUnit::initNoUnit(const char *subtype) {\n-    int32_t result = binarySearch(gTypes, 0, UPRV_LENGTHOF(gTypes), \"none\");\n-    U_ASSERT(result != -1);\n-    fTypeId = result;\n-    result = binarySearch(gSubTypes, gOffsets[fTypeId], gOffsets[fTypeId + 1], subtype);\n-    U_ASSERT(result != -1);\n@@ -2114,1 +2339,4 @@\n-    fCurrency[0] = 0;\n+    if (fImpl != nullptr) {\n+        delete fImpl;\n+        fImpl = nullptr;\n+    }\n@@ -2118,0 +2346,3 @@\n+    if (fTypeId < 0 || fSubTypeId < 0) {\n+        return -1;\n+    }\n@@ -2121,0 +2352,14 @@\n+MeasureUnitImpl MeasureUnitImpl::copy(UErrorCode &status) const {\n+    MeasureUnitImpl result;\n+    result.complexity = complexity;\n+    result.identifier.append(identifier, status);\n+    for (int32_t i = 0; i < units.length(); i++) {\n+        SingleUnitImpl *item = result.units.emplaceBack(*units[i]);\n+        if (!item) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return result;\n+        }\n+    }\n+    return result;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/measunit.cpp","additions":589,"deletions":344,"binary":false,"changes":933,"status":"modified"},{"patch":"@@ -0,0 +1,929 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+\/\/ Extra functions for MeasureUnit not needed for all clients.\n+\/\/ Separate .o file so that it can be removed for modularity.\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+\/\/ Allow implicit conversion from char16_t* to UnicodeString for this file:\n+\/\/ Helpful in toString methods and elsewhere.\n+#define UNISTR_FROM_STRING_EXPLICIT\n+\n+#include \"charstr.h\"\n+#include \"cmemory.h\"\n+#include \"cstring.h\"\n+#include \"measunit_impl.h\"\n+#include \"resource.h\"\n+#include \"uarrsort.h\"\n+#include \"uassert.h\"\n+#include \"ucln_in.h\"\n+#include \"umutex.h\"\n+#include \"unicode\/bytestrie.h\"\n+#include \"unicode\/bytestriebuilder.h\"\n+#include \"unicode\/localpointer.h\"\n+#include \"unicode\/measunit.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/stringtriebuilder.h\"\n+#include \"unicode\/ures.h\"\n+#include \"unicode\/ustringtrie.h\"\n+#include \"uresimp.h\"\n+#include <cstdlib>\n+\n+U_NAMESPACE_BEGIN\n+\n+\n+namespace {\n+\n+\/\/ TODO: Propose a new error code for this?\n+constexpr UErrorCode kUnitIdentifierSyntaxError = U_ILLEGAL_ARGUMENT_ERROR;\n+\n+\/\/ Trie value offset for SI Prefixes. This is big enough to ensure we only\n+\/\/ insert positive integers into the trie.\n+constexpr int32_t kSIPrefixOffset = 64;\n+\n+\/\/ Trie value offset for compound parts, e.g. \"-per-\", \"-\", \"-and-\".\n+constexpr int32_t kCompoundPartOffset = 128;\n+\n+enum CompoundPart {\n+    \/\/ Represents \"-per-\"\n+    COMPOUND_PART_PER = kCompoundPartOffset,\n+    \/\/ Represents \"-\"\n+    COMPOUND_PART_TIMES,\n+    \/\/ Represents \"-and-\"\n+    COMPOUND_PART_AND,\n+};\n+\n+\/\/ Trie value offset for \"per-\".\n+constexpr int32_t kInitialCompoundPartOffset = 192;\n+\n+enum InitialCompoundPart {\n+    \/\/ Represents \"per-\", the only compound part that can appear at the start of\n+    \/\/ an identifier.\n+    INITIAL_COMPOUND_PART_PER = kInitialCompoundPartOffset,\n+};\n+\n+\/\/ Trie value offset for powers like \"square-\", \"cubic-\", \"pow2-\" etc.\n+constexpr int32_t kPowerPartOffset = 256;\n+\n+enum PowerPart {\n+    POWER_PART_P2 = kPowerPartOffset + 2,\n+    POWER_PART_P3,\n+    POWER_PART_P4,\n+    POWER_PART_P5,\n+    POWER_PART_P6,\n+    POWER_PART_P7,\n+    POWER_PART_P8,\n+    POWER_PART_P9,\n+    POWER_PART_P10,\n+    POWER_PART_P11,\n+    POWER_PART_P12,\n+    POWER_PART_P13,\n+    POWER_PART_P14,\n+    POWER_PART_P15,\n+};\n+\n+\/\/ Trie value offset for simple units, e.g. \"gram\", \"nautical-mile\",\n+\/\/ \"fluid-ounce-imperial\".\n+constexpr int32_t kSimpleUnitOffset = 512;\n+\n+const struct SIPrefixStrings {\n+    const char* const string;\n+    UMeasureSIPrefix value;\n+} gSIPrefixStrings[] = {\n+    { \"yotta\", UMEASURE_SI_PREFIX_YOTTA },\n+    { \"zetta\", UMEASURE_SI_PREFIX_ZETTA },\n+    { \"exa\", UMEASURE_SI_PREFIX_EXA },\n+    { \"peta\", UMEASURE_SI_PREFIX_PETA },\n+    { \"tera\", UMEASURE_SI_PREFIX_TERA },\n+    { \"giga\", UMEASURE_SI_PREFIX_GIGA },\n+    { \"mega\", UMEASURE_SI_PREFIX_MEGA },\n+    { \"kilo\", UMEASURE_SI_PREFIX_KILO },\n+    { \"hecto\", UMEASURE_SI_PREFIX_HECTO },\n+    { \"deka\", UMEASURE_SI_PREFIX_DEKA },\n+    { \"deci\", UMEASURE_SI_PREFIX_DECI },\n+    { \"centi\", UMEASURE_SI_PREFIX_CENTI },\n+    { \"milli\", UMEASURE_SI_PREFIX_MILLI },\n+    { \"micro\", UMEASURE_SI_PREFIX_MICRO },\n+    { \"nano\", UMEASURE_SI_PREFIX_NANO },\n+    { \"pico\", UMEASURE_SI_PREFIX_PICO },\n+    { \"femto\", UMEASURE_SI_PREFIX_FEMTO },\n+    { \"atto\", UMEASURE_SI_PREFIX_ATTO },\n+    { \"zepto\", UMEASURE_SI_PREFIX_ZEPTO },\n+    { \"yocto\", UMEASURE_SI_PREFIX_YOCTO },\n+};\n+\n+\/**\n+ * A ResourceSink that collects simple unit identifiers from the keys of the\n+ * convertUnits table into an array, and adds these values to a TrieBuilder,\n+ * with associated values being their index into this array plus a specified\n+ * offset, to a trie.\n+ *\n+ * Example code:\n+ *\n+ *     UErrorCode status = U_ZERO_ERROR;\n+ *     BytesTrieBuilder b(status);\n+ *     const char *unitIdentifiers[200];\n+ *     SimpleUnitIdentifiersSink identifierSink(unitIdentifiers, 200, b, kTrieValueOffset);\n+ *     LocalUResourceBundlePointer unitsBundle(ures_openDirect(NULL, \"units\", &status));\n+ *     ures_getAllItemsWithFallback(unitsBundle.getAlias(), \"convertUnits\", identifierSink, status);\n+ *\/\n+class SimpleUnitIdentifiersSink : public icu::ResourceSink {\n+  public:\n+    \/**\n+     * Constructor.\n+     * @param out Array of char* to which the simple unit identifiers will be\n+     *     saved.\n+     * @param outSize The size of `out`.\n+     * @param trieBuilder The trie builder to which the simple unit identifier\n+     *     should be added. The trie builder must outlive this resource sink.\n+     * @param trieValueOffset This is added to the index of the identifier in\n+     *     the `out` array, before adding to `trieBuilder` as the value\n+     *     associated with the identifier.\n+     *\/\n+    explicit SimpleUnitIdentifiersSink(const char **out, int32_t outSize, BytesTrieBuilder &trieBuilder,\n+                                       int32_t trieValueOffset)\n+        : outArray(out), outSize(outSize), trieBuilder(trieBuilder), trieValueOffset(trieValueOffset),\n+          outIndex(0) {\n+    }\n+\n+    \/**\n+     * Adds the table keys found in value to the output vector.\n+     * @param key The key of the resource passed to `value`: the second\n+     *     parameter of the ures_getAllItemsWithFallback() call.\n+     * @param value Should be a ResourceTable value, if\n+     *     ures_getAllItemsWithFallback() was called correctly for this sink.\n+     * @param noFallback Ignored.\n+     * @param status The standard ICU error code output parameter.\n+     *\/\n+    void put(const char * \/*key*\/, ResourceValue &value, UBool \/*noFallback*\/, UErrorCode &status) {\n+        ResourceTable table = value.getTable(status);\n+        if (U_FAILURE(status)) return;\n+\n+        if (outIndex + table.getSize() > outSize) {\n+            status = U_INDEX_OUTOFBOUNDS_ERROR;\n+            return;\n+        }\n+\n+        \/\/ Collect keys from the table resource.\n+        const char *key;\n+        for (int32_t i = 0; table.getKeyAndValue(i, key, value); ++i) {\n+            U_ASSERT(i < table.getSize());\n+            U_ASSERT(outIndex < outSize);\n+            if (uprv_strcmp(key, \"kilogram\") == 0) {\n+                \/\/ For parsing, we use \"gram\", the prefixless metric mass unit. We\n+                \/\/ thus ignore the SI Base Unit of Mass: it exists due to being the\n+                \/\/ mass conversion target unit, but not needed for MeasureUnit\n+                \/\/ parsing.\n+                continue;\n+            }\n+            outArray[outIndex] = key;\n+            trieBuilder.add(key, trieValueOffset + outIndex, status);\n+            outIndex++;\n+        }\n+    }\n+\n+  private:\n+    const char **outArray;\n+    int32_t outSize;\n+    BytesTrieBuilder &trieBuilder;\n+    int32_t trieValueOffset;\n+\n+    int32_t outIndex;\n+};\n+\n+icu::UInitOnce gUnitExtrasInitOnce = U_INITONCE_INITIALIZER;\n+\n+\/\/ Array of simple unit IDs.\n+\/\/\n+\/\/ The array memory itself is owned by this pointer, but the individual char* in\n+\/\/ that array point at static memory. (Note that these char* are also returned\n+\/\/ by SingleUnitImpl::getSimpleUnitID().)\n+const char **gSimpleUnits = nullptr;\n+\n+char *gSerializedUnitExtrasStemTrie = nullptr;\n+\n+UBool U_CALLCONV cleanupUnitExtras() {\n+    uprv_free(gSerializedUnitExtrasStemTrie);\n+    gSerializedUnitExtrasStemTrie = nullptr;\n+    uprv_free(gSimpleUnits);\n+    gSimpleUnits = nullptr;\n+    gUnitExtrasInitOnce.reset();\n+    return TRUE;\n+}\n+\n+void U_CALLCONV initUnitExtras(UErrorCode& status) {\n+    ucln_i18n_registerCleanup(UCLN_I18N_UNIT_EXTRAS, cleanupUnitExtras);\n+\n+    BytesTrieBuilder b(status);\n+    if (U_FAILURE(status)) { return; }\n+\n+    \/\/ Add SI prefixes\n+    for (const auto& siPrefixInfo : gSIPrefixStrings) {\n+        b.add(siPrefixInfo.string, siPrefixInfo.value + kSIPrefixOffset, status);\n+    }\n+    if (U_FAILURE(status)) { return; }\n+\n+    \/\/ Add syntax parts (compound, power prefixes)\n+    b.add(\"-per-\", COMPOUND_PART_PER, status);\n+    b.add(\"-\", COMPOUND_PART_TIMES, status);\n+    b.add(\"-and-\", COMPOUND_PART_AND, status);\n+    b.add(\"per-\", INITIAL_COMPOUND_PART_PER, status);\n+    b.add(\"square-\", POWER_PART_P2, status);\n+    b.add(\"cubic-\", POWER_PART_P3, status);\n+    b.add(\"pow2-\", POWER_PART_P2, status);\n+    b.add(\"pow3-\", POWER_PART_P3, status);\n+    b.add(\"pow4-\", POWER_PART_P4, status);\n+    b.add(\"pow5-\", POWER_PART_P5, status);\n+    b.add(\"pow6-\", POWER_PART_P6, status);\n+    b.add(\"pow7-\", POWER_PART_P7, status);\n+    b.add(\"pow8-\", POWER_PART_P8, status);\n+    b.add(\"pow9-\", POWER_PART_P9, status);\n+    b.add(\"pow10-\", POWER_PART_P10, status);\n+    b.add(\"pow11-\", POWER_PART_P11, status);\n+    b.add(\"pow12-\", POWER_PART_P12, status);\n+    b.add(\"pow13-\", POWER_PART_P13, status);\n+    b.add(\"pow14-\", POWER_PART_P14, status);\n+    b.add(\"pow15-\", POWER_PART_P15, status);\n+    if (U_FAILURE(status)) { return; }\n+\n+    \/\/ Add sanctioned simple units by offset: simple units all have entries in\n+    \/\/ units\/convertUnits resources.\n+    \/\/ TODO(ICU-21059): confirm whether this is clean enough, or whether we need to\n+    \/\/ filter units' validity list instead.\n+    LocalUResourceBundlePointer unitsBundle(ures_openDirect(NULL, \"units\", &status));\n+    LocalUResourceBundlePointer convertUnits(\n+        ures_getByKey(unitsBundle.getAlias(), \"convertUnits\", NULL, &status));\n+    if (U_FAILURE(status)) { return; }\n+\n+    \/\/ Allocate enough space: with identifierSink below skipping kilogram, we're\n+    \/\/ probably allocating one more than needed.\n+    int32_t simpleUnitsCount = convertUnits.getAlias()->fSize;\n+    int32_t arrayMallocSize = sizeof(char *) * simpleUnitsCount;\n+    gSimpleUnits = static_cast<const char **>(uprv_malloc(arrayMallocSize));\n+    if (gSimpleUnits == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    uprv_memset(gSimpleUnits, 0, arrayMallocSize);\n+\n+    \/\/ Populate gSimpleUnits and build the associated trie.\n+    SimpleUnitIdentifiersSink identifierSink(gSimpleUnits, simpleUnitsCount, b, kSimpleUnitOffset);\n+    ures_getAllItemsWithFallback(unitsBundle.getAlias(), \"convertUnits\", identifierSink, status);\n+\n+    \/\/ Build the CharsTrie\n+    \/\/ TODO: Use SLOW or FAST here?\n+    StringPiece result = b.buildStringPiece(USTRINGTRIE_BUILD_FAST, status);\n+    if (U_FAILURE(status)) { return; }\n+\n+    \/\/ Copy the result into the global constant pointer\n+    size_t numBytes = result.length();\n+    gSerializedUnitExtrasStemTrie = static_cast<char *>(uprv_malloc(numBytes));\n+    if (gSerializedUnitExtrasStemTrie == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    uprv_memcpy(gSerializedUnitExtrasStemTrie, result.data(), numBytes);\n+}\n+\n+class Token {\n+public:\n+    Token(int32_t match) : fMatch(match) {}\n+\n+    enum Type {\n+        TYPE_UNDEFINED,\n+        TYPE_SI_PREFIX,\n+        \/\/ Token type for \"-per-\", \"-\", and \"-and-\".\n+        TYPE_COMPOUND_PART,\n+        \/\/ Token type for \"per-\".\n+        TYPE_INITIAL_COMPOUND_PART,\n+        TYPE_POWER_PART,\n+        TYPE_SIMPLE_UNIT,\n+    };\n+\n+    \/\/ Calling getType() is invalid, resulting in an assertion failure, if Token\n+    \/\/ value isn't positive.\n+    Type getType() const {\n+        U_ASSERT(fMatch > 0);\n+        if (fMatch < kCompoundPartOffset) {\n+            return TYPE_SI_PREFIX;\n+        }\n+        if (fMatch < kInitialCompoundPartOffset) {\n+            return TYPE_COMPOUND_PART;\n+        }\n+        if (fMatch < kPowerPartOffset) {\n+            return TYPE_INITIAL_COMPOUND_PART;\n+        }\n+        if (fMatch < kSimpleUnitOffset) {\n+            return TYPE_POWER_PART;\n+        }\n+        return TYPE_SIMPLE_UNIT;\n+    }\n+\n+    UMeasureSIPrefix getSIPrefix() const {\n+        U_ASSERT(getType() == TYPE_SI_PREFIX);\n+        return static_cast<UMeasureSIPrefix>(fMatch - kSIPrefixOffset);\n+    }\n+\n+    \/\/ Valid only for tokens with type TYPE_COMPOUND_PART.\n+    int32_t getMatch() const {\n+        U_ASSERT(getType() == TYPE_COMPOUND_PART);\n+        return fMatch;\n+    }\n+\n+    int32_t getInitialCompoundPart() const {\n+        \/\/ Even if there is only one InitialCompoundPart value, we have this\n+        \/\/ function for the simplicity of code consistency.\n+        U_ASSERT(getType() == TYPE_INITIAL_COMPOUND_PART);\n+        \/\/ Defensive: if this assert fails, code using this function also needs\n+        \/\/ to change.\n+        U_ASSERT(fMatch == INITIAL_COMPOUND_PART_PER);\n+        return fMatch;\n+    }\n+\n+    int8_t getPower() const {\n+        U_ASSERT(getType() == TYPE_POWER_PART);\n+        return static_cast<int8_t>(fMatch - kPowerPartOffset);\n+    }\n+\n+    int32_t getSimpleUnitIndex() const {\n+        U_ASSERT(getType() == TYPE_SIMPLE_UNIT);\n+        return fMatch - kSimpleUnitOffset;\n+    }\n+\n+private:\n+    int32_t fMatch;\n+};\n+\n+class Parser {\n+public:\n+    \/**\n+     * Factory function for parsing the given identifier.\n+     *\n+     * @param source The identifier to parse. This function does not make a copy\n+     * of source: the underlying string that source points at, must outlive the\n+     * parser.\n+     * @param status ICU error code.\n+     *\/\n+    static Parser from(StringPiece source, UErrorCode& status) {\n+        if (U_FAILURE(status)) {\n+            return Parser();\n+        }\n+        umtx_initOnce(gUnitExtrasInitOnce, &initUnitExtras, status);\n+        if (U_FAILURE(status)) {\n+            return Parser();\n+        }\n+        return Parser(source);\n+    }\n+\n+    MeasureUnitImpl parse(UErrorCode& status) {\n+        MeasureUnitImpl result;\n+        parseImpl(result, status);\n+        return result;\n+    }\n+\n+private:\n+    \/\/ Tracks parser progress: the offset into fSource.\n+    int32_t fIndex = 0;\n+\n+    \/\/ Since we're not owning this memory, whatever is passed to the constructor\n+    \/\/ should live longer than this Parser - and the parser shouldn't return any\n+    \/\/ references to that string.\n+    StringPiece fSource;\n+    BytesTrie fTrie;\n+\n+    \/\/ Set to true when we've seen a \"-per-\" or a \"per-\", after which all units\n+    \/\/ are in the denominator. Until we find an \"-and-\", at which point the\n+    \/\/ identifier is invalid pending TODO(CLDR-13700).\n+    bool fAfterPer = false;\n+\n+    Parser() : fSource(\"\"), fTrie(u\"\") {}\n+\n+    Parser(StringPiece source)\n+        : fSource(source), fTrie(gSerializedUnitExtrasStemTrie) {}\n+\n+    inline bool hasNext() const {\n+        return fIndex < fSource.length();\n+    }\n+\n+    \/\/ Returns the next Token parsed from fSource, advancing fIndex to the end\n+    \/\/ of that token in fSource. In case of U_FAILURE(status), the token\n+    \/\/ returned will cause an abort if getType() is called on it.\n+    Token nextToken(UErrorCode& status) {\n+        fTrie.reset();\n+        int32_t match = -1;\n+        \/\/ Saves the position in the fSource string for the end of the most\n+        \/\/ recent matching token.\n+        int32_t previ = -1;\n+        \/\/ Find the longest token that matches a value in the trie:\n+        while (fIndex < fSource.length()) {\n+            auto result = fTrie.next(fSource.data()[fIndex++]);\n+            if (result == USTRINGTRIE_NO_MATCH) {\n+                break;\n+            } else if (result == USTRINGTRIE_NO_VALUE) {\n+                continue;\n+            }\n+            U_ASSERT(USTRINGTRIE_HAS_VALUE(result));\n+            match = fTrie.getValue();\n+            previ = fIndex;\n+            if (result == USTRINGTRIE_FINAL_VALUE) {\n+                break;\n+            }\n+            U_ASSERT(result == USTRINGTRIE_INTERMEDIATE_VALUE);\n+            \/\/ continue;\n+        }\n+\n+        if (match < 0) {\n+            status = kUnitIdentifierSyntaxError;\n+        } else {\n+            fIndex = previ;\n+        }\n+        return Token(match);\n+    }\n+\n+    \/**\n+     * Returns the next \"single unit\" via result.\n+     *\n+     * If a \"-per-\" was parsed, the result will have appropriate negative\n+     * dimensionality.\n+     *\n+     * Returns an error if we parse both compound units and \"-and-\", since mixed\n+     * compound units are not yet supported - TODO(CLDR-13700).\n+     *\n+     * @param result Will be overwritten by the result, if status shows success.\n+     * @param sawAnd If an \"-and-\" was parsed prior to finding the \"single\n+     * unit\", sawAnd is set to true. If not, it is left as is.\n+     * @param status ICU error code.\n+     *\/\n+    void nextSingleUnit(SingleUnitImpl& result, bool& sawAnd, UErrorCode& status) {\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+\n+        \/\/ state:\n+        \/\/ 0 = no tokens seen yet (will accept power, SI prefix, or simple unit)\n+        \/\/ 1 = power token seen (will not accept another power token)\n+        \/\/ 2 = SI prefix token seen (will not accept a power or SI prefix token)\n+        int32_t state = 0;\n+\n+        bool atStart = fIndex == 0;\n+        Token token = nextToken(status);\n+        if (U_FAILURE(status)) { return; }\n+\n+        if (atStart) {\n+            \/\/ Identifiers optionally start with \"per-\".\n+            if (token.getType() == Token::TYPE_INITIAL_COMPOUND_PART) {\n+                U_ASSERT(token.getInitialCompoundPart() == INITIAL_COMPOUND_PART_PER);\n+                fAfterPer = true;\n+                result.dimensionality = -1;\n+\n+                token = nextToken(status);\n+                if (U_FAILURE(status)) { return; }\n+            }\n+        } else {\n+            \/\/ All other SingleUnit's are separated from previous SingleUnit's\n+            \/\/ via a compound part:\n+            if (token.getType() != Token::TYPE_COMPOUND_PART) {\n+                status = kUnitIdentifierSyntaxError;\n+                return;\n+            }\n+\n+            switch (token.getMatch()) {\n+            case COMPOUND_PART_PER:\n+                if (sawAnd) {\n+                    \/\/ Mixed compound units not yet supported,\n+                    \/\/ TODO(CLDR-13700).\n+                    status = kUnitIdentifierSyntaxError;\n+                    return;\n+                }\n+                fAfterPer = true;\n+                result.dimensionality = -1;\n+                break;\n+\n+            case COMPOUND_PART_TIMES:\n+                if (fAfterPer) {\n+                    result.dimensionality = -1;\n+                }\n+                break;\n+\n+            case COMPOUND_PART_AND:\n+                if (fAfterPer) {\n+                    \/\/ Can't start with \"-and-\", and mixed compound units\n+                    \/\/ not yet supported, TODO(CLDR-13700).\n+                    status = kUnitIdentifierSyntaxError;\n+                    return;\n+                }\n+                sawAnd = true;\n+                break;\n+            }\n+\n+            token = nextToken(status);\n+            if (U_FAILURE(status)) { return; }\n+        }\n+\n+        \/\/ Read tokens until we have a complete SingleUnit or we reach the end.\n+        while (true) {\n+            switch (token.getType()) {\n+                case Token::TYPE_POWER_PART:\n+                    if (state > 0) {\n+                        status = kUnitIdentifierSyntaxError;\n+                        return;\n+                    }\n+                    result.dimensionality *= token.getPower();\n+                    state = 1;\n+                    break;\n+\n+                case Token::TYPE_SI_PREFIX:\n+                    if (state > 1) {\n+                        status = kUnitIdentifierSyntaxError;\n+                        return;\n+                    }\n+                    result.siPrefix = token.getSIPrefix();\n+                    state = 2;\n+                    break;\n+\n+                case Token::TYPE_SIMPLE_UNIT:\n+                    result.index = token.getSimpleUnitIndex();\n+                    return;\n+\n+                default:\n+                    status = kUnitIdentifierSyntaxError;\n+                    return;\n+            }\n+\n+            if (!hasNext()) {\n+                \/\/ We ran out of tokens before finding a complete single unit.\n+                status = kUnitIdentifierSyntaxError;\n+                return;\n+            }\n+            token = nextToken(status);\n+            if (U_FAILURE(status)) {\n+                return;\n+            }\n+        }\n+    }\n+\n+    \/\/\/ @param result is modified, not overridden. Caller must pass in a\n+    \/\/\/ default-constructed (empty) MeasureUnitImpl instance.\n+    void parseImpl(MeasureUnitImpl& result, UErrorCode& status) {\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        if (fSource.empty()) {\n+            \/\/ The dimenionless unit: nothing to parse. leave result as is.\n+            return;\n+        }\n+        int32_t unitNum = 0;\n+        while (hasNext()) {\n+            bool sawAnd = false;\n+            SingleUnitImpl singleUnit;\n+            nextSingleUnit(singleUnit, sawAnd, status);\n+            if (U_FAILURE(status)) {\n+                return;\n+            }\n+            U_ASSERT(!singleUnit.isDimensionless());\n+            bool added = result.append(singleUnit, status);\n+            if (sawAnd && !added) {\n+                \/\/ Two similar units are not allowed in a mixed unit\n+                status = kUnitIdentifierSyntaxError;\n+                return;\n+            }\n+            if ((++unitNum) >= 2) {\n+                \/\/ nextSingleUnit fails appropriately for \"per\" and \"and\" in the\n+                \/\/ same identifier. It doesn't fail for other compound units\n+                \/\/ (COMPOUND_PART_TIMES). Consequently we take care of that\n+                \/\/ here.\n+                UMeasureUnitComplexity complexity =\n+                    sawAnd ? UMEASURE_UNIT_MIXED : UMEASURE_UNIT_COMPOUND;\n+                if (unitNum == 2) {\n+                    U_ASSERT(result.complexity == UMEASURE_UNIT_SINGLE);\n+                    result.complexity = complexity;\n+                } else if (result.complexity != complexity) {\n+                    \/\/ Can't have mixed compound units\n+                    status = kUnitIdentifierSyntaxError;\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+};\n+\n+int32_t U_CALLCONV\n+compareSingleUnits(const void* \/*context*\/, const void* left, const void* right) {\n+    auto realLeft = static_cast<const SingleUnitImpl* const*>(left);\n+    auto realRight = static_cast<const SingleUnitImpl* const*>(right);\n+    return (*realLeft)->compareTo(**realRight);\n+}\n+\n+\/**\n+ * Generate the identifier string for a single unit in place.\n+ *\n+ * Does not support the dimensionless SingleUnitImpl: calling serializeSingle\n+ * with the dimensionless unit results in an U_INTERNAL_PROGRAM_ERROR.\n+ *\n+ * @param first If singleUnit is part of a compound unit, and not its first\n+ * single unit, set this to false. Otherwise: set to true.\n+ *\/\n+void serializeSingle(const SingleUnitImpl& singleUnit, bool first, CharString& output, UErrorCode& status) {\n+    if (first && singleUnit.dimensionality < 0) {\n+        \/\/ Essentially the \"unary per\". For compound units with a numerator, the\n+        \/\/ caller takes care of the \"binary per\".\n+        output.append(\"per-\", status);\n+    }\n+\n+    if (singleUnit.isDimensionless()) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return;\n+    }\n+    int8_t posPower = std::abs(singleUnit.dimensionality);\n+    if (posPower == 0) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+    } else if (posPower == 1) {\n+        \/\/ no-op\n+    } else if (posPower == 2) {\n+        output.append(\"square-\", status);\n+    } else if (posPower == 3) {\n+        output.append(\"cubic-\", status);\n+    } else if (posPower < 10) {\n+        output.append(\"pow\", status);\n+        output.append(posPower + '0', status);\n+        output.append('-', status);\n+    } else if (posPower <= 15) {\n+        output.append(\"pow1\", status);\n+        output.append('0' + (posPower % 10), status);\n+        output.append('-', status);\n+    } else {\n+        status = kUnitIdentifierSyntaxError;\n+    }\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    if (singleUnit.siPrefix != UMEASURE_SI_PREFIX_ONE) {\n+        for (const auto& siPrefixInfo : gSIPrefixStrings) {\n+            if (siPrefixInfo.value == singleUnit.siPrefix) {\n+                output.append(siPrefixInfo.string, status);\n+                break;\n+            }\n+        }\n+    }\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    output.append(singleUnit.getSimpleUnitID(), status);\n+}\n+\n+\/**\n+ * Normalize a MeasureUnitImpl and generate the identifier string in place.\n+ *\/\n+void serialize(MeasureUnitImpl& impl, UErrorCode& status) {\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    U_ASSERT(impl.identifier.isEmpty());\n+    if (impl.units.length() == 0) {\n+        \/\/ Dimensionless, constructed by the default constructor: no appending\n+        \/\/ to impl.identifier, we wish it to contain the zero-length string.\n+        return;\n+    }\n+    if (impl.complexity == UMEASURE_UNIT_COMPOUND) {\n+        \/\/ Note: don't sort a MIXED unit\n+        uprv_sortArray(\n+            impl.units.getAlias(),\n+            impl.units.length(),\n+            sizeof(impl.units[0]),\n+            compareSingleUnits,\n+            nullptr,\n+            false,\n+            &status);\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+    }\n+    serializeSingle(*impl.units[0], true, impl.identifier, status);\n+    if (impl.units.length() == 1) {\n+        return;\n+    }\n+    for (int32_t i = 1; i < impl.units.length(); i++) {\n+        const SingleUnitImpl& prev = *impl.units[i-1];\n+        const SingleUnitImpl& curr = *impl.units[i];\n+        if (impl.complexity == UMEASURE_UNIT_MIXED) {\n+            impl.identifier.append(\"-and-\", status);\n+            serializeSingle(curr, true, impl.identifier, status);\n+        } else {\n+            if (prev.dimensionality > 0 && curr.dimensionality < 0) {\n+                impl.identifier.append(\"-per-\", status);\n+            } else {\n+                impl.identifier.append('-', status);\n+            }\n+            serializeSingle(curr, false, impl.identifier, status);\n+        }\n+    }\n+\n+}\n+\n+\/**\n+ * Appends a SingleUnitImpl to a MeasureUnitImpl.\n+ *\n+ * @return true if a new item was added. If unit is the dimensionless unit, it\n+ * is never added: the return value will always be false.\n+ *\/\n+bool appendImpl(MeasureUnitImpl& impl, const SingleUnitImpl& unit, UErrorCode& status) {\n+    if (unit.isDimensionless()) {\n+        \/\/ We don't append dimensionless units.\n+        return false;\n+    }\n+    \/\/ Find a similar unit that already exists, to attempt to coalesce\n+    SingleUnitImpl* oldUnit = nullptr;\n+    for (int32_t i = 0; i < impl.units.length(); i++) {\n+        auto* candidate = impl.units[i];\n+        if (candidate->isCompatibleWith(unit)) {\n+            oldUnit = candidate;\n+        }\n+    }\n+    if (oldUnit) {\n+        \/\/ Both dimensionalities will be positive, or both will be negative, by\n+        \/\/ virtue of isCompatibleWith().\n+        oldUnit->dimensionality += unit.dimensionality;\n+    } else {\n+        SingleUnitImpl* destination = impl.units.emplaceBack();\n+        if (!destination) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return false;\n+        }\n+        *destination = unit;\n+    }\n+    return (oldUnit == nullptr);\n+}\n+\n+} \/\/ namespace\n+\n+\n+SingleUnitImpl SingleUnitImpl::forMeasureUnit(const MeasureUnit& measureUnit, UErrorCode& status) {\n+    MeasureUnitImpl temp;\n+    const MeasureUnitImpl& impl = MeasureUnitImpl::forMeasureUnit(measureUnit, temp, status);\n+    if (U_FAILURE(status)) {\n+        return {};\n+    }\n+    if (impl.units.length() == 0) {\n+        return {};\n+    }\n+    if (impl.units.length() == 1) {\n+        return *impl.units[0];\n+    }\n+    status = U_ILLEGAL_ARGUMENT_ERROR;\n+    return {};\n+}\n+\n+MeasureUnit SingleUnitImpl::build(UErrorCode& status) const {\n+    MeasureUnitImpl temp;\n+    temp.append(*this, status);\n+    return std::move(temp).build(status);\n+}\n+\n+const char *SingleUnitImpl::getSimpleUnitID() const {\n+    return gSimpleUnits[index];\n+}\n+\n+MeasureUnitImpl::MeasureUnitImpl(const MeasureUnitImpl &other, UErrorCode &status) {\n+    *this = other.copy(status);\n+}\n+\n+MeasureUnitImpl::MeasureUnitImpl(const SingleUnitImpl &singleUnit, UErrorCode &status) {\n+    this->append(singleUnit, status);\n+}\n+\n+MeasureUnitImpl MeasureUnitImpl::forIdentifier(StringPiece identifier, UErrorCode& status) {\n+    return Parser::from(identifier, status).parse(status);\n+}\n+\n+const MeasureUnitImpl& MeasureUnitImpl::forMeasureUnit(\n+        const MeasureUnit& measureUnit, MeasureUnitImpl& memory, UErrorCode& status) {\n+    if (measureUnit.fImpl) {\n+        return *measureUnit.fImpl;\n+    } else {\n+        memory = Parser::from(measureUnit.getIdentifier(), status).parse(status);\n+        return memory;\n+    }\n+}\n+\n+MeasureUnitImpl MeasureUnitImpl::forMeasureUnitMaybeCopy(\n+        const MeasureUnit& measureUnit, UErrorCode& status) {\n+    if (measureUnit.fImpl) {\n+        return measureUnit.fImpl->copy(status);\n+    } else {\n+        return Parser::from(measureUnit.getIdentifier(), status).parse(status);\n+    }\n+}\n+\n+void MeasureUnitImpl::takeReciprocal(UErrorCode& \/*status*\/) {\n+    identifier.clear();\n+    for (int32_t i = 0; i < units.length(); i++) {\n+        units[i]->dimensionality *= -1;\n+    }\n+}\n+\n+bool MeasureUnitImpl::append(const SingleUnitImpl& singleUnit, UErrorCode& status) {\n+    identifier.clear();\n+    return appendImpl(*this, singleUnit, status);\n+}\n+\n+MaybeStackVector<MeasureUnitImpl> MeasureUnitImpl::extractIndividualUnits(UErrorCode &status) const {\n+    MaybeStackVector<MeasureUnitImpl> result;\n+\n+    if (this->complexity != UMeasureUnitComplexity::UMEASURE_UNIT_MIXED) {\n+        result.emplaceBackAndCheckErrorCode(status, *this, status);\n+        return result;\n+    }\n+\n+    for (int32_t i = 0; i < units.length(); i++) {\n+        result.emplaceBackAndCheckErrorCode(status, *units[i], status);\n+    }\n+\n+    return result;\n+}\n+\n+MeasureUnit MeasureUnitImpl::build(UErrorCode& status) && {\n+    serialize(*this, status);\n+    return MeasureUnit(std::move(*this));\n+}\n+\n+MeasureUnit MeasureUnit::forIdentifier(StringPiece identifier, UErrorCode& status) {\n+    return Parser::from(identifier, status).parse(status).build(status);\n+}\n+\n+UMeasureUnitComplexity MeasureUnit::getComplexity(UErrorCode& status) const {\n+    MeasureUnitImpl temp;\n+    return MeasureUnitImpl::forMeasureUnit(*this, temp, status).complexity;\n+}\n+\n+UMeasureSIPrefix MeasureUnit::getSIPrefix(UErrorCode& status) const {\n+    return SingleUnitImpl::forMeasureUnit(*this, status).siPrefix;\n+}\n+\n+MeasureUnit MeasureUnit::withSIPrefix(UMeasureSIPrefix prefix, UErrorCode& status) const {\n+    SingleUnitImpl singleUnit = SingleUnitImpl::forMeasureUnit(*this, status);\n+    singleUnit.siPrefix = prefix;\n+    return singleUnit.build(status);\n+}\n+\n+int32_t MeasureUnit::getDimensionality(UErrorCode& status) const {\n+    SingleUnitImpl singleUnit = SingleUnitImpl::forMeasureUnit(*this, status);\n+    if (U_FAILURE(status)) { return 0; }\n+    if (singleUnit.isDimensionless()) {\n+        return 0;\n+    }\n+    return singleUnit.dimensionality;\n+}\n+\n+MeasureUnit MeasureUnit::withDimensionality(int32_t dimensionality, UErrorCode& status) const {\n+    SingleUnitImpl singleUnit = SingleUnitImpl::forMeasureUnit(*this, status);\n+    singleUnit.dimensionality = dimensionality;\n+    return singleUnit.build(status);\n+}\n+\n+MeasureUnit MeasureUnit::reciprocal(UErrorCode& status) const {\n+    MeasureUnitImpl impl = MeasureUnitImpl::forMeasureUnitMaybeCopy(*this, status);\n+    impl.takeReciprocal(status);\n+    return std::move(impl).build(status);\n+}\n+\n+MeasureUnit MeasureUnit::product(const MeasureUnit& other, UErrorCode& status) const {\n+    MeasureUnitImpl impl = MeasureUnitImpl::forMeasureUnitMaybeCopy(*this, status);\n+    MeasureUnitImpl temp;\n+    const MeasureUnitImpl& otherImpl = MeasureUnitImpl::forMeasureUnit(other, temp, status);\n+    if (impl.complexity == UMEASURE_UNIT_MIXED || otherImpl.complexity == UMEASURE_UNIT_MIXED) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return {};\n+    }\n+    for (int32_t i = 0; i < otherImpl.units.length(); i++) {\n+        impl.append(*otherImpl.units[i], status);\n+    }\n+    if (impl.units.length() > 1) {\n+        impl.complexity = UMEASURE_UNIT_COMPOUND;\n+    }\n+    return std::move(impl).build(status);\n+}\n+\n+LocalArray<MeasureUnit> MeasureUnit::splitToSingleUnitsImpl(int32_t& outCount, UErrorCode& status) const {\n+    MeasureUnitImpl temp;\n+    const MeasureUnitImpl& impl = MeasureUnitImpl::forMeasureUnit(*this, temp, status);\n+    outCount = impl.units.length();\n+    MeasureUnit* arr = new MeasureUnit[outCount];\n+    if (arr == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return LocalArray<MeasureUnit>();\n+    }\n+    for (int32_t i = 0; i < outCount; i++) {\n+        arr[i] = impl.units[i]->build(status);\n+    }\n+    return LocalArray<MeasureUnit>(arr, status);\n+}\n+\n+\n+U_NAMESPACE_END\n+\n+#endif \/* !UNCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/measunit_extra.cpp","additions":929,"deletions":0,"binary":false,"changes":929,"status":"added"},{"patch":"@@ -0,0 +1,241 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#ifndef __MEASUNIT_IMPL_H__\n+#define __MEASUNIT_IMPL_H__\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"unicode\/measunit.h\"\n+#include \"cmemory.h\"\n+#include \"charstr.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\n+static const char16_t kDefaultCurrency[] = u\"XXX\";\n+static const char kDefaultCurrency8[] = \"XXX\";\n+\n+\n+\/**\n+ * A struct representing a single unit (optional SI prefix and dimensionality).\n+ *\/\n+struct U_I18N_API SingleUnitImpl : public UMemory {\n+    \/**\n+     * Gets a single unit from the MeasureUnit. If there are multiple single units, sets an error\n+     * code and returns the base dimensionless unit. Parses if necessary.\n+     *\/\n+    static SingleUnitImpl forMeasureUnit(const MeasureUnit& measureUnit, UErrorCode& status);\n+\n+    \/** Transform this SingleUnitImpl into a MeasureUnit, simplifying if possible. *\/\n+    MeasureUnit build(UErrorCode& status) const;\n+\n+    \/**\n+     * Returns the \"simple unit ID\", without SI or dimensionality prefix: this\n+     * instance may represent a square-kilometer, but only \"meter\" will be\n+     * returned.\n+     *\n+     * The returned pointer points at memory that exists for the duration of the\n+     * program's running.\n+     *\/\n+    const char *getSimpleUnitID() const;\n+\n+    \/**\n+     * Compare this SingleUnitImpl to another SingleUnitImpl for the sake of\n+     * sorting and coalescing.\n+     *\n+     * Takes the sign of dimensionality into account, but not the absolute\n+     * value: per-meter is not considered the same as meter, but meter is\n+     * considered the same as square-meter.\n+     *\n+     * The dimensionless unit generally does not get compared, but if it did, it\n+     * would sort before other units by virtue of index being < 0 and\n+     * dimensionality not being negative.\n+     *\/\n+    int32_t compareTo(const SingleUnitImpl& other) const {\n+        if (dimensionality < 0 && other.dimensionality > 0) {\n+            \/\/ Positive dimensions first\n+            return 1;\n+        }\n+        if (dimensionality > 0 && other.dimensionality < 0) {\n+            return -1;\n+        }\n+        if (index < other.index) {\n+            return -1;\n+        }\n+        if (index > other.index) {\n+            return 1;\n+        }\n+        if (siPrefix < other.siPrefix) {\n+            return -1;\n+        }\n+        if (siPrefix > other.siPrefix) {\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n+    \/**\n+     * Return whether this SingleUnitImpl is compatible with another for the purpose of coalescing.\n+     *\n+     * Units with the same base unit and SI prefix should match, except that they must also have\n+     * the same dimensionality sign, such that we don't merge numerator and denominator.\n+     *\/\n+    bool isCompatibleWith(const SingleUnitImpl& other) const {\n+        return (compareTo(other) == 0);\n+    }\n+\n+    \/**\n+     * Returns true if this unit is the \"dimensionless base unit\", as produced\n+     * by the MeasureUnit() default constructor. (This does not include the\n+     * likes of concentrations or angles.)\n+     *\/\n+    bool isDimensionless() const {\n+        return index == -1;\n+    }\n+\n+    \/**\n+     * Simple unit index, unique for every simple unit, -1 for the dimensionless\n+     * unit. This is an index into a string list in measunit_extra.cpp.\n+     *\n+     * The default value is -1, meaning the dimensionless unit:\n+     * isDimensionless() will return true, until index is changed.\n+     *\/\n+    int32_t index = -1;\n+\n+    \/**\n+     * SI prefix.\n+     *\n+     * This is ignored for the dimensionless unit.\n+     *\/\n+    UMeasureSIPrefix siPrefix = UMEASURE_SI_PREFIX_ONE;\n+\n+    \/**\n+     * Dimensionality.\n+     *\n+     * This is meaningless for the dimensionless unit.\n+     *\/\n+    int32_t dimensionality = 1;\n+};\n+\n+\/\/ Export explicit template instantiations of MaybeStackArray, MemoryPool and\n+\/\/ MaybeStackVector. This is required when building DLLs for Windows. (See\n+\/\/ datefmt.h, collationiterator.h, erarules.h and others for similar examples.)\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+template class U_I18N_API MaybeStackArray<SingleUnitImpl*, 8>;\n+template class U_I18N_API MemoryPool<SingleUnitImpl, 8>;\n+template class U_I18N_API MaybeStackVector<SingleUnitImpl, 8>;\n+#endif\n+\n+\/**\n+ * Internal representation of measurement units. Capable of representing all complexities of units,\n+ * including mixed and compound units.\n+ *\/\n+struct U_I18N_API MeasureUnitImpl : public UMemory {\n+    MeasureUnitImpl() = default;\n+    MeasureUnitImpl(MeasureUnitImpl &&other) = default;\n+    MeasureUnitImpl(const MeasureUnitImpl &other, UErrorCode &status);\n+    MeasureUnitImpl(const SingleUnitImpl &singleUnit, UErrorCode &status);\n+\n+    MeasureUnitImpl &operator=(MeasureUnitImpl &&other) noexcept = default;\n+\n+    \/** Extract the MeasureUnitImpl from a MeasureUnit. *\/\n+    static inline const MeasureUnitImpl* get(const MeasureUnit& measureUnit) {\n+        return measureUnit.fImpl;\n+    }\n+\n+    \/**\n+     * Parse a unit identifier into a MeasureUnitImpl.\n+     *\n+     * @param identifier The unit identifier string.\n+     * @param status Set if the identifier string is not valid.\n+     * @return A newly parsed value object. Behaviour of this unit is\n+     * unspecified if an error is returned via status.\n+     *\/\n+    static MeasureUnitImpl forIdentifier(StringPiece identifier, UErrorCode& status);\n+\n+    \/**\n+     * Extract the MeasureUnitImpl from a MeasureUnit, or parse if it is not present.\n+     *\n+     * @param measureUnit The source MeasureUnit.\n+     * @param memory A place to write the new MeasureUnitImpl if parsing is required.\n+     * @param status Set if an error occurs.\n+     * @return A reference to either measureUnit.fImpl or memory.\n+     *\/\n+    static const MeasureUnitImpl& forMeasureUnit(\n+        const MeasureUnit& measureUnit, MeasureUnitImpl& memory, UErrorCode& status);\n+\n+    \/**\n+     * Extract the MeasureUnitImpl from a MeasureUnit, or parse if it is not present.\n+     *\n+     * @param measureUnit The source MeasureUnit.\n+     * @param status Set if an error occurs.\n+     * @return A value object, either newly parsed or copied from measureUnit.\n+     *\/\n+    static MeasureUnitImpl forMeasureUnitMaybeCopy(\n+        const MeasureUnit& measureUnit, UErrorCode& status);\n+\n+    \/**\n+     * Used for currency units.\n+     *\/\n+    static inline MeasureUnitImpl forCurrencyCode(StringPiece currencyCode) {\n+        MeasureUnitImpl result;\n+        UErrorCode localStatus = U_ZERO_ERROR;\n+        result.identifier.append(currencyCode, localStatus);\n+        \/\/ localStatus is not expected to fail since currencyCode should be 3 chars long\n+        return result;\n+    }\n+\n+    \/** Transform this MeasureUnitImpl into a MeasureUnit, simplifying if possible. *\/\n+    MeasureUnit build(UErrorCode& status) &&;\n+\n+    \/**\n+     * Create a copy of this MeasureUnitImpl. Don't use copy constructor to make this explicit.\n+     *\/\n+    MeasureUnitImpl copy(UErrorCode& status) const;\n+\n+    \/**\n+     * Extracts the list of all the individual units inside the `MeasureUnitImpl`.\n+     *      For example:\n+     *          -   if the `MeasureUnitImpl` is `foot-per-hour`\n+     *                  it will return a list of 1 {`foot-per-hour`}\n+     *          -   if the `MeasureUnitImpl` is `foot-and-inch`\n+     *                  it will return a list of 2 { `foot`, `inch`}\n+     *\/\n+    MaybeStackVector<MeasureUnitImpl> extractIndividualUnits(UErrorCode &status) const;\n+\n+    \/** Mutates this MeasureUnitImpl to take the reciprocal. *\/\n+    void takeReciprocal(UErrorCode& status);\n+\n+    \/**\n+     * Mutates this MeasureUnitImpl to append a single unit.\n+     *\n+     * @return true if a new item was added. If unit is the dimensionless unit,\n+     * it is never added: the return value will always be false.\n+     *\/\n+    bool append(const SingleUnitImpl& singleUnit, UErrorCode& status);\n+\n+    \/** The complexity, either SINGLE, COMPOUND, or MIXED. *\/\n+    UMeasureUnitComplexity complexity = UMEASURE_UNIT_SINGLE;\n+\n+    \/**\n+     * The list of simple units. These may be summed or multiplied, based on the\n+     * value of the complexity field.\n+     *\n+     * The \"dimensionless\" unit (SingleUnitImpl default constructor) must not be\n+     * added to this list.\n+     *\/\n+    MaybeStackVector<SingleUnitImpl> units;\n+\n+    \/**\n+     * The full unit identifier.  Owned by the MeasureUnitImpl.  Empty if not computed.\n+     *\/\n+    CharString identifier;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+#endif \/\/__MEASUNIT_IMPL_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/measunit_impl.h","additions":241,"deletions":0,"binary":false,"changes":241,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-Measure::Measure() {}\n+Measure::Measure() : unit(nullptr) {}\n@@ -38,1 +38,1 @@\n-    UObject(other), unit(0) {\n+    UObject(other), unit(nullptr) {\n@@ -46,1 +46,5 @@\n-        unit = (MeasureUnit*) other.unit->clone();\n+        if (other.unit != nullptr) {\n+            unit = other.unit->clone();\n+        } else {\n+            unit = nullptr;\n+        }\n@@ -51,1 +55,1 @@\n-UObject *Measure::clone() const {\n+Measure *Measure::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/measure.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -439,1 +439,1 @@\n-Format*\n+MessageFormat*\n@@ -816,1 +816,1 @@\n-    for (int32_t partIndex = 0; (partIndex = nextTopLevelArgStart(partIndex)) >= 0; ++totalCapacity) {};\n+    for (int32_t partIndex = 0; (partIndex = nextTopLevelArgStart(partIndex)) >= 0; ++totalCapacity) {}\n@@ -1876,1 +1876,1 @@\n-Format* MessageFormat::DummyFormat::clone() const {\n+MessageFormat::DummyFormat* MessageFormat::DummyFormat::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/msgfmt.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-Transliterator* NameUnicodeTransliterator::clone(void) const {\n+NameUnicodeTransliterator* NameUnicodeTransliterator::clone() const {\n@@ -193,0 +193,1 @@\n+                    cbuf[0] = 0;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/name2uni.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual NameUnicodeTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/name2uni.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    MASTER_RULE_INDEX = 3,\n+    DEFAULT_RULE_INDEX = 3,\n@@ -281,2 +281,2 @@\n-    else if (baseValue == NFRule::kMasterRule) {\n-        setBestFractionRule(MASTER_RULE_INDEX, rule, TRUE);\n+    else if (baseValue == NFRule::kDefaultRule) {\n+        setBestFractionRule(DEFAULT_RULE_INDEX, rule, TRUE);\n@@ -326,1 +326,1 @@\n-            && i != MASTER_RULE_INDEX)\n+            && i != DEFAULT_RULE_INDEX)\n@@ -378,1 +378,1 @@\n-    for (int32_t nonNumericalIdx = IMPROPER_FRACTION_RULE_INDEX; nonNumericalIdx <= MASTER_RULE_INDEX; nonNumericalIdx++) {\n+    for (int32_t nonNumericalIdx = IMPROPER_FRACTION_RULE_INDEX; nonNumericalIdx <= DEFAULT_RULE_INDEX; nonNumericalIdx++) {\n@@ -475,3 +475,3 @@\n-    \/\/ if there's a master rule, use it to format the number\n-    if (nonNumericalRules[MASTER_RULE_INDEX]) {\n-        return nonNumericalRules[MASTER_RULE_INDEX];\n+    \/\/ if there's a default rule, use it to format the number\n+    if (nonNumericalRules[DEFAULT_RULE_INDEX]) {\n+        return nonNumericalRules[DEFAULT_RULE_INDEX];\n@@ -510,1 +510,1 @@\n-    \/\/ we know the value is an integer (it also skips the master\n+    \/\/ we know the value is an integer (it also skips the default\n@@ -512,1 +512,1 @@\n-    \/\/ master rule in this function is also how we avoid infinite\n+    \/\/ default rule in this function is also how we avoid infinite\n@@ -516,1 +516,1 @@\n-    \/\/ special rules.  If there are no rules, use the master rule.\n+    \/\/ special rules.  If there are no rules, use the default rule.\n@@ -556,2 +556,2 @@\n-    \/\/ else use the master rule\n-    return nonNumericalRules[MASTER_RULE_INDEX];\n+    \/\/ else use the default rule\n+    return nonNumericalRules[DEFAULT_RULE_INDEX];\n@@ -795,1 +795,1 @@\n-                || rule->getBaseValue() == NFRule::kMasterRule)\n+                || rule->getBaseValue() == NFRule::kDefaultRule)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nfrs.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    void makeIntoFractionRuleSet() { fIsFractionRuleSet = TRUE; }\n+    void makeIntoFractionRuleSet() { fIsFractionRuleSet = true; }\n@@ -96,1 +96,1 @@\n-uint32_t util64_tou(int64_t n, UChar* buffer, uint32_t buflen, uint32_t radix = 10, UBool raw = FALSE);\n+uint32_t util64_tou(int64_t n, UChar* buffer, uint32_t buflen, uint32_t radix = 10, UBool raw = false);\n@@ -100,1 +100,1 @@\n-uint32_t util64_toa(int64_t n, char* buffer, uint32_t buflen, uint32_t radix = 10, UBool raw = FALSE);\n+uint32_t util64_toa(int64_t n, char* buffer, uint32_t buflen, uint32_t radix = 10, UBool raw = false);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nfrs.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-            || rule1->getType() == kMasterRule) {\n+            || rule1->getType() == kDefaultRule) {\n@@ -184,1 +184,1 @@\n-            \/\/ text, it describes both the master rule and the\n+            \/\/ text, it describes both the default rule and the\n@@ -186,1 +186,1 @@\n-            else if (rule1->getType() == kMasterRule) {\n+            else if (rule1->getType() == kDefaultRule) {\n@@ -379,1 +379,1 @@\n-                setBaseValue(kMasterRule, status);\n+                setBaseValue(kDefaultRule, status);\n@@ -666,1 +666,1 @@\n-    case kMasterRule: result.append(gX).append(decimalPoint == 0 ? gDot : decimalPoint).append(gZero); break;\n+    case kDefaultRule: result.append(gX).append(decimalPoint == 0 ? gDot : decimalPoint).append(gZero); break;\n@@ -1300,0 +1300,4 @@\n+        \/\/ Check if non-lenient rule finds the text before call lenient parsing\n+        if (str.startsWith(prefix)) {\n+            return prefix.length();\n+        }\n@@ -1508,3 +1512,9 @@\n-        \/\/ but if lenient parsing is turned ON, we've got some work\n-        \/\/ ahead of us\n-        return findTextLenient(str, key, startingAt, length);\n+        \/\/ Check if non-lenient rule finds the text before call lenient parsing\n+        *length = key.length();\n+        int32_t pos = str.indexOf(key, startingAt);\n+        if(pos >= 0) {\n+            return pos;\n+        } else {\n+            \/\/ but if lenient parsing is turned ON, we've got some work ahead of us\n+            return findTextLenient(str, key, startingAt, length);\n+        }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nfrule.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        kMasterRule = -4,\n+        kDefaultRule = -4,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nfrule.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-            || rule->getBaseValue() == NFRule::kMasterRule) {\n+            || rule->getBaseValue() == NFRule::kDefaultRule) {\n@@ -374,1 +374,1 @@\n-            || rule->getBaseValue() == NFRule::kMasterRule) {\n+            || rule->getBaseValue() == NFRule::kDefaultRule) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nfsubs.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-Transliterator* NormalizationTransliterator::clone(void) const {\n+NormalizationTransliterator* NormalizationTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nortrans.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual NormalizationTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nortrans.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-\/\/ © 2017 and later: Unicode, Inc. and others.\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n-\n-#include \"unicode\/nounit.h\"\n-#include \"uassert.h\"\n-\n-#if !UCONFIG_NO_FORMATTING\n-\n-U_NAMESPACE_BEGIN\n-\n-UOBJECT_DEFINE_RTTI_IMPLEMENTATION(NoUnit)\n-\n-NoUnit U_EXPORT2 NoUnit::base() {\n-    return NoUnit(\"base\");\n-}\n-\n-NoUnit U_EXPORT2 NoUnit::percent() {\n-    return NoUnit(\"percent\");\n-}\n-\n-NoUnit U_EXPORT2 NoUnit::permille() {\n-    return NoUnit(\"permille\");\n-}\n-\n-NoUnit::NoUnit(const char* subtype) {\n-    initNoUnit(subtype);\n-}\n-\n-NoUnit::NoUnit(const NoUnit& other) : MeasureUnit(other) {\n-}\n-\n-UObject* NoUnit::clone() const {\n-    return new NoUnit(*this);\n-}\n-\n-NoUnit::~NoUnit() {\n-}\n-\n-\n-U_NAMESPACE_END\n-\n-#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nounit.cpp","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -27,1 +27,1 @@\n-Transliterator* NullTransliterator::clone(void) const {\n+NullTransliterator* NullTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nultrans.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual NullTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/nultrans.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-            return UNUM_SIGN_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_SIGN_FIELD};\n@@ -136,1 +136,1 @@\n-            return UNUM_SIGN_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_SIGN_FIELD};\n@@ -138,1 +138,1 @@\n-            return UNUM_PERCENT_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_PERCENT_FIELD};\n@@ -140,1 +140,1 @@\n-            return UNUM_PERMILL_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_PERMILL_FIELD};\n@@ -142,1 +142,1 @@\n-            return UNUM_CURRENCY_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD};\n@@ -144,1 +144,1 @@\n-            return UNUM_CURRENCY_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD};\n@@ -146,1 +146,1 @@\n-            return UNUM_CURRENCY_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD};\n@@ -148,1 +148,1 @@\n-            return UNUM_CURRENCY_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD};\n@@ -150,1 +150,1 @@\n-            return UNUM_CURRENCY_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD};\n@@ -152,1 +152,1 @@\n-            return UNUM_CURRENCY_FIELD;\n+            return {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD};\n@@ -159,1 +159,1 @@\n-AffixUtils::unescape(const UnicodeString &affixPattern, NumberStringBuilder &output, int32_t position,\n+AffixUtils::unescape(const UnicodeString &affixPattern, FormattedStringBuilder &output, int32_t position,\n@@ -168,1 +168,5 @@\n-            length += output.insertCodePoint(position + length, 0xFFFD, UNUM_CURRENCY_FIELD, status);\n+            length += output.insertCodePoint(\n+                position + length,\n+                0xFFFD,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD},\n+                status);\n@@ -221,1 +225,1 @@\n-        if (tag.type < 0 && getFieldForType(tag.type) == UNUM_CURRENCY_FIELD) {\n+        if (tag.type < 0 && getFieldForType(tag.type) == Field(UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD)) {\n@@ -233,1 +237,1 @@\n-    };\n+    }\n@@ -249,1 +253,1 @@\n-    };\n+    }\n@@ -265,1 +269,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_affixutils.cpp","additions":20,"deletions":16,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -137,1 +137,1 @@\n-     * result into the NumberStringBuilder at the requested location.\n+     * result into the FormattedStringBuilder at the requested location.\n@@ -142,2 +142,2 @@\n-     * @param output The NumberStringBuilder to mutate with the result.\n-     * @param position The index into the NumberStringBuilder to insert the string.\n+     * @param output The FormattedStringBuilder to mutate with the result.\n+     * @param position The index into the FormattedStringBuilder to insert the string.\n@@ -146,1 +146,1 @@\n-    static int32_t unescape(const UnicodeString& affixPattern, NumberStringBuilder& output,\n+    static int32_t unescape(const UnicodeString& affixPattern, FormattedStringBuilder& output,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_affixutils.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-Format* LocalizedNumberFormatterAsFormat::clone() const {\n+LocalizedNumberFormatterAsFormat* LocalizedNumberFormatterAsFormat::clone() const {\n@@ -65,1 +65,1 @@\n-    bool found = data.getStringRef().nextFieldPosition(pos, status);\n+    bool found = data.nextFieldPosition(pos, status);\n@@ -70,1 +70,1 @@\n-    appendTo.append(data.getStringRef().toTempUnicodeString());\n+    appendTo.append(data.toTempString(status));\n@@ -87,1 +87,1 @@\n-    appendTo.append(data.getStringRef().toTempUnicodeString());\n+    appendTo.append(data.toTempString(status));\n@@ -90,1 +90,1 @@\n-        data.getStringRef().getAllFieldPositions(fpih, status);\n+        data.getAllFieldPositions(fpih, status);\n@@ -105,0 +105,12 @@\n+\n+\/\/ Definitions of public API methods (put here for dependency disentanglement)\n+\n+Format* LocalizedNumberFormatter::toFormat(UErrorCode& status) const {\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+    LocalPointer<LocalizedNumberFormatterAsFormat> retval(\n+            new LocalizedNumberFormatterAsFormat(*this, fMacros.locale), status);\n+    return retval.orphan();\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_asformat.cpp","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @draft ICU 62\n@@ -48,1 +47,1 @@\n-    Format* clone() const U_OVERRIDE;\n+    LocalizedNumberFormatterAsFormat* clone() const U_OVERRIDE;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_asformat.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -16,0 +16,1 @@\n+#include \"number_decnum.h\"\n@@ -159,1 +160,1 @@\n-    return result->fImpl.toTempString(*ec).extract(buffer, bufferCapacity, *ec);\n+    return result->fData.toTempString(*ec).extract(buffer, bufferCapacity, *ec);\n@@ -176,1 +177,1 @@\n-    bool retval = result->fImpl.nextFieldPosition(fp, *ec);\n+    bool retval = result->fData.nextFieldPosition(fp, *ec);\n@@ -195,1 +196,19 @@\n-    result->fImpl.getAllFieldPositions(*fpi, *ec);\n+    FieldPositionIteratorHandler fpih(fpi, *ec);\n+    result->fData.getAllFieldPositions(fpih, *ec);\n+}\n+\n+U_CAPI int32_t U_EXPORT2\n+unumf_resultToDecimalNumber(\n+        const UFormattedNumber* uresult,\n+        char* dest,\n+        int32_t destCapacity,\n+        UErrorCode* ec) {\n+    const auto* result = UFormattedNumberApiHelper::validate(uresult, *ec);\n+    if (U_FAILURE(*ec)) {\n+        return 0;\n+    }\n+    DecNum decnum;\n+    return result->fData.quantity\n+        .toDecNum(decnum, *ec)\n+        .toCharString(*ec)\n+        .extract(dest, destCapacity, *ec);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_capi.cpp","additions":22,"deletions":3,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -170,0 +170,5 @@\n+            if (uprv_strcmp(key, \"0\") == 0 || uprv_strcmp(key, \"1\") == 0) {\n+                \/\/ TODO(ICU-21258): Handle this case. For now, skip.\n+                continue;\n+            }\n+\n@@ -218,5 +223,11 @@\n-CompactHandler::CompactHandler(CompactStyle compactStyle, const Locale &locale, const char *nsName,\n-                               CompactType compactType, const PluralRules *rules,\n-                               MutablePatternModifier *buildReference, const MicroPropsGenerator *parent,\n-                               UErrorCode &status)\n-        : rules(rules), parent(parent) {\n+CompactHandler::CompactHandler(\n+        CompactStyle compactStyle,\n+        const Locale &locale,\n+        const char *nsName,\n+        CompactType compactType,\n+        const PluralRules *rules,\n+        MutablePatternModifier *buildReference,\n+        bool safe,\n+        const MicroPropsGenerator *parent,\n+        UErrorCode &status)\n+        : rules(rules), parent(parent), safe(safe) {\n@@ -224,1 +235,1 @@\n-    if (buildReference != nullptr) {\n+    if (safe) {\n@@ -227,1 +238,0 @@\n-        safe = TRUE;\n@@ -230,1 +240,2 @@\n-        safe = FALSE;\n+        \/\/ Store the MutablePatternModifier reference.\n+        unsafePatternModifier = buildReference;\n@@ -263,1 +274,1 @@\n-        buildReference.setPatternInfo(&patternInfo, UNUM_COMPACT_FIELD);\n+        buildReference.setPatternInfo(&patternInfo, {UFIELD_CATEGORY_NUMBER, UNUM_COMPACT_FIELD});\n@@ -275,1 +286,1 @@\n-    \/\/ Treat zero as if it had magnitude 0\n+    \/\/ Treat zero, NaN, and infinity as if they had magnitude 0\n@@ -277,1 +288,2 @@\n-    if (quantity.isZero()) {\n+    int32_t multiplier = 0;\n+    if (quantity.isZeroish()) {\n@@ -282,2 +294,2 @@\n-        int32_t multiplier = micros.rounder.chooseMultiplierAndApply(quantity, data, status);\n-        magnitude = quantity.isZero() ? 0 : quantity.getMagnitude();\n+        multiplier = micros.rounder.chooseMultiplierAndApply(quantity, data, status);\n+        magnitude = quantity.isZeroish() ? 0 : quantity.getMagnitude();\n@@ -312,2 +324,5 @@\n-        static_cast<MutablePatternModifier*>(const_cast<Modifier*>(micros.modMiddle))\n-            ->setPatternInfo(&patternInfo, UNUM_COMPACT_FIELD);\n+        unsafePatternModifier->setPatternInfo(\n+            &unsafePatternInfo,\n+            {UFIELD_CATEGORY_NUMBER, UNUM_COMPACT_FIELD});\n+        unsafePatternModifier->setNumberProperties(quantity.signum(), StandardPlural::Form::COUNT);\n+        micros.modMiddle = unsafePatternModifier;\n@@ -316,0 +331,5 @@\n+    \/\/ Change the exponent only after we select appropriate plural form\n+    \/\/ for formatting purposes so that we preserve expected formatted\n+    \/\/ string behavior.\n+    quantity.adjustExponent(-1 * multiplier);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_compact.cpp","additions":35,"deletions":15,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -59,4 +59,10 @@\n-    CompactHandler(CompactStyle compactStyle, const Locale &locale, const char *nsName,\n-                   CompactType compactType, const PluralRules *rules,\n-                   MutablePatternModifier *buildReference, const MicroPropsGenerator *parent,\n-                   UErrorCode &status);\n+    CompactHandler(\n+            CompactStyle compactStyle,\n+            const Locale &locale,\n+            const char *nsName,\n+            CompactType compactType,\n+            const PluralRules *rules,\n+            MutablePatternModifier *buildReference,\n+            bool safe,\n+            const MicroPropsGenerator *parent,\n+            UErrorCode &status);\n@@ -77,0 +83,1 @@\n+    MutablePatternModifier* unsafePatternModifier;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_compact.h","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -47,0 +47,10 @@\n+UnicodeString CurrencySymbols::getFormalCurrencySymbol(UErrorCode& status) const {\n+    \/\/ Note: currently no override is available for formal currency symbol\n+    return loadSymbol(UCURR_FORMAL_SYMBOL_NAME, status);\n+}\n+\n+UnicodeString CurrencySymbols::getVariantCurrencySymbol(UErrorCode& status) const {\n+    \/\/ Note: currently no override is available for variant currency symbol\n+    return loadSymbol(UCURR_VARIANT_SYMBOL_NAME, status);\n+}\n+\n@@ -56,1 +66,0 @@\n-    UBool ignoredIsChoiceFormatFillIn = FALSE;\n@@ -62,1 +71,1 @@\n-            &ignoredIsChoiceFormatFillIn,\n+            nullptr \/* isChoiceFormat *\/,\n@@ -85,1 +94,0 @@\n-    UBool isChoiceFormat = FALSE;\n@@ -90,1 +98,1 @@\n-            &isChoiceFormat,\n+            nullptr \/* isChoiceFormat *\/,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_currencysymbols.cpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+    UnicodeString getFormalCurrencySymbol(UErrorCode& status) const;\n+\n+    UnicodeString getVariantCurrencySymbol(UErrorCode& status) const;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_currencysymbols.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+#include \"util.h\"\n@@ -123,0 +124,1 @@\n+    exponent = other.exponent;\n@@ -208,1 +210,1 @@\n-    if (isInfinite() || isZero() || isNaN()) {\n+    if (isZeroish()) {\n@@ -221,1 +223,1 @@\n-    if (isInfinite() || isZero() || isNaN()) {\n+    if (isZeroish()) {\n@@ -272,0 +274,2 @@\n+        case PLURAL_OPERAND_E:\n+            return static_cast<double>(getExponent());\n@@ -277,0 +281,8 @@\n+int32_t DecimalQuantity::getExponent() const {\n+    return exponent;\n+}\n+\n+void DecimalQuantity::adjustExponent(int delta) {\n+    exponent = exponent + delta;\n+}\n+\n@@ -310,1 +322,2 @@\n-    return -getLowerDisplayMagnitude();\n+    int32_t fractionCountWithExponent = -getLowerDisplayMagnitude() - exponent;\n+    return fractionCountWithExponent > 0 ? fractionCountWithExponent : 0;\n@@ -314,1 +327,2 @@\n-    return -scale > 0 ? -scale : 0;  \/\/ max(-scale, 0)\n+    int32_t fractionCountWithExponent = -scale - exponent;\n+    return fractionCountWithExponent > 0 ? fractionCountWithExponent : 0;  \/\/ max(-fractionCountWithExponent, 0)\n@@ -321,2 +335,12 @@\n-int8_t DecimalQuantity::signum() const {\n-    return isNegative() ? -1 : isZero() ? 0 : 1;\n+Signum DecimalQuantity::signum() const {\n+    bool isZero = (isZeroish() && !isInfinite());\n+    bool isNeg = isNegative();\n+    if (isZero && isNeg) {\n+        return SIGNUM_NEG_ZERO;\n+    } else if (isZero) {\n+        return SIGNUM_POS_ZERO;\n+    } else if (isNeg) {\n+        return SIGNUM_NEG;\n+    } else {\n+        return SIGNUM_POS;\n+    }\n@@ -333,1 +357,1 @@\n-bool DecimalQuantity::isZero() const {\n+bool DecimalQuantity::isZeroish() const {\n@@ -419,3 +443,0 @@\n-        \/\/ Turn off the approximate double flag, since the value is now exact.\n-        isApproximate = false;\n-        origDouble = 0.0;\n@@ -436,0 +457,6 @@\n+    if (exponent == -1023 || exponent == 1024) {\n+        \/\/ The extreme values of exponent are special; use slow path.\n+        convertToAccurateDouble();\n+        return;\n+    }\n+\n@@ -437,1 +464,1 @@\n-    auto fracLength = static_cast<int32_t> ((52 - exponent) \/ 3.32192809489);\n+    auto fracLength = static_cast<int32_t> ((52 - exponent) \/ 3.32192809488736234787031942948939017586);\n@@ -449,1 +476,1 @@\n-    auto result = static_cast<int64_t>(std::round(n));\n+    auto result = static_cast<int64_t>(uprv_round(n));\n@@ -518,1 +545,1 @@\n-    int32_t upperMagnitude = scale + precision - 1;\n+    int32_t upperMagnitude = exponent + scale + precision - 1;\n@@ -523,1 +550,1 @@\n-        result = result * 10 + getDigitPos(magnitude - scale);\n+        result = result * 10 + getDigitPos(magnitude - scale - exponent);\n@@ -533,1 +560,1 @@\n-    int32_t magnitude = -1;\n+    int32_t magnitude = -1 - exponent;\n@@ -551,1 +578,4 @@\n-    if (isZero()) {\n+    if (isInfinite() || isNaN()) {\n+        return false;\n+    }\n+    if (isZeroish()) {\n@@ -554,1 +584,1 @@\n-    if (scale < 0 && !ignoreFraction) {\n+    if (exponent + scale < 0 && !ignoreFraction) {\n@@ -600,1 +630,1 @@\n-void DecimalQuantity::toDecNum(DecNum& output, UErrorCode& status) const {\n+DecNum& DecimalQuantity::toDecNum(DecNum& output, UErrorCode& status) const {\n@@ -608,1 +638,4 @@\n-    MaybeStackArray<uint8_t, 20> ubcd(precision);\n+    MaybeStackArray<uint8_t, 20> ubcd(precision, status);\n+    if (U_FAILURE(status)) {\n+        return output;\n+    }\n@@ -613,0 +646,1 @@\n+    return output;\n@@ -871,1 +905,14 @@\n-    if (precision == 0 || getMagnitude() < 0) {\n+    if (precision == 0) {\n+        sb.append(u'0');\n+        return sb;\n+    }\n+    int32_t upper = scale + precision + exponent - 1;\n+    int32_t lower = scale + exponent;\n+    if (upper < lReqPos - 1) {\n+        upper = lReqPos - 1;\n+    }\n+    if (lower > rReqPos) {\n+        lower = rReqPos;\n+    }\n+    int32_t p = upper;\n+    if (p < 0) {\n@@ -874,3 +921,8 @@\n-    for (int m = getUpperDisplayMagnitude(); m >= getLowerDisplayMagnitude(); m--) {\n-        if (m == -1) { sb.append(u'.'); }\n-        sb.append(getDigit(m) + u'0');\n+    for (; p >= 0; p--) {\n+        sb.append(u'0' + getDigitPos(p - scale - exponent));\n+    }\n+    if (lower < 0) {\n+        sb.append(u'.');\n+    }\n+    for(; p >= lower; p--) {\n+        sb.append(u'0' + getDigitPos(p - scale - exponent));\n@@ -902,1 +954,1 @@\n-    int32_t _scale = upperPos + scale;\n+    int32_t _scale = upperPos + scale + exponent;\n@@ -960,7 +1012,2 @@\n-        int i = precision + numDigits - 1;\n-        for (; i >= numDigits; i--) {\n-            fBCD.bcdBytes.ptr[i] = fBCD.bcdBytes.ptr[i - numDigits];\n-        }\n-        for (; i >= 0; i--) {\n-            fBCD.bcdBytes.ptr[i] = 0;\n-        }\n+        uprv_memmove(fBCD.bcdBytes.ptr + numDigits, fBCD.bcdBytes.ptr, precision);\n+        uprv_memset(fBCD.bcdBytes.ptr, 0, numDigits);\n@@ -1015,0 +1062,1 @@\n+    exponent = 0;\n@@ -1279,1 +1327,5 @@\n-    MaybeStackArray<char, 30> digits(precision + 1);\n+    UErrorCode localStatus = U_ZERO_ERROR;\n+    MaybeStackArray<char, 30> digits(precision + 1, localStatus);\n+    if (U_FAILURE(localStatus)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_decimalquantity.cpp","additions":84,"deletions":32,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n- * An class for representing a number to be processed by the decimal formatting pipeline. Includes\n+ * A class for representing a number to be processed by the decimal formatting pipeline. Includes\n@@ -149,2 +149,25 @@\n-    \/** @return Whether the value represented by this {@link DecimalQuantity} is zero. *\/\n-    bool isZero() const;\n+    \/**\n+     * @return The value of the (suppressed) exponent after the number has been\n+     * put into a notation with exponents (ex: compact, scientific).  Ex: given\n+     * the number 1000 as \"1K\" \/ \"1E3\", the return value will be 3 (positive).\n+     *\/\n+    int32_t getExponent() const;\n+\n+    \/**\n+     * Adjusts the value for the (suppressed) exponent stored when using\n+     * notation with exponents (ex: compact, scientific).\n+     *\n+     * <p>Adjusting the exponent is decoupled from {@link #adjustMagnitude} in\n+     * order to allow flexibility for {@link StandardPlural} to be selected in\n+     * formatting (ex: for compact notation) either with or without the exponent\n+     * applied in the value of the number.\n+     * @param delta\n+     *             The value to adjust the exponent by.\n+     *\/\n+    void adjustExponent(int32_t delta);\n+\n+    \/**\n+     * @return Whether the value represented by this {@link DecimalQuantity} is\n+     * zero, infinity, or NaN.\n+     *\/\n+    bool isZeroish() const;\n@@ -155,2 +178,2 @@\n-    \/** @return -1 if the value is negative; 1 if positive; or 0 if zero. *\/\n-    int8_t signum() const;\n+    \/** @return The appropriate value from the Signum enum. *\/\n+    Signum signum() const;\n@@ -164,1 +187,6 @@\n-    \/** @param truncateIfOverflow if false and the number does NOT fit, fails with an assertion error. *\/\n+    \/**\n+     * Note: this method incorporates the value of {@code exponent}\n+     * (for cases such as compact notation) to return the proper long value\n+     * represented by the result.\n+     * @param truncateIfOverflow if false and the number does NOT fit, fails with an assertion error.\n+     *\/\n@@ -167,0 +195,5 @@\n+    \/**\n+     * Note: this method incorporates the value of {@code exponent}\n+     * (for cases such as compact notation) to return the proper long value\n+     * represented by the result.\n+     *\/\n@@ -179,1 +212,1 @@\n-    void toDecNum(DecNum& output, UErrorCode& status) const;\n+    DecNum& toDecNum(DecNum& output, UErrorCode& status) const;\n@@ -187,1 +220,7 @@\n-    \/** decNumber is similar to BigDecimal in Java. *\/\n+    \/**\n+     * Produces a DecimalQuantity that was parsed from a string by the decNumber\n+     * C Library.\n+     *\n+     * decNumber is similar to BigDecimal in Java, and supports parsing strings\n+     * such as \"123.456621E+40\".\n+     *\/\n@@ -351,0 +390,4 @@\n+    \/\/ The value of the (suppressed) exponent after the number has been put into\n+    \/\/ a notation with exponents (ex: compact, scientific).\n+    int32_t exponent = 0;\n+\n@@ -423,1 +466,1 @@\n-     * hasDouble, origDouble, origDelta, and BCD data.\n+     * hasDouble, origDouble, origDelta, exponent, and BCD data.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_decimalquantity.h","additions":52,"deletions":9,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -12,0 +12,1 @@\n+#include \"bytesinkutil.h\"\n@@ -58,0 +59,9 @@\n+    void toString(ByteSink& output, UErrorCode& status) const;\n+\n+    inline CharString toCharString(UErrorCode& status) const {\n+      CharString cstr;\n+      CharStringByteSink sink(&cstr);\n+      toString(sink, status);\n+      return cstr;\n+    }\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_decnum.h","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -14,1 +14,0 @@\n-#include \"number_skeletons.h\"\n@@ -17,0 +16,1 @@\n+#include \"number_mapper.h\"\n@@ -24,0 +24,10 @@\n+#if (U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN) && defined(_MSC_VER)\n+\/\/ Ignore MSVC warning 4661. This is generated for NumberFormatterSettings<>::toSkeleton() as this method\n+\/\/ is defined elsewhere (in number_skeletons.cpp). The compiler is warning that the explicit template instantiation\n+\/\/ inside this single translation unit (CPP file) is incomplete, and thus it isn't sure if the template class is\n+\/\/ fully defined. However, since each translation unit explicitly instantiates all the necessary template classes,\n+\/\/ they will all be passed to the linker, and the linker will still find and export all the class members.\n+#pragma warning(push)\n+#pragma warning(disable: 4661)\n+#endif\n+\n@@ -267,0 +277,14 @@\n+template<typename Derived>\n+Derived NumberFormatterSettings<Derived>::usage(const StringPiece usage) const& {\n+    Derived copy(*this);\n+    copy.fMacros.usage.set(usage);\n+    return copy;\n+}\n+\n+template<typename Derived>\n+Derived NumberFormatterSettings<Derived>::usage(const StringPiece usage)&& {\n+    Derived move(std::move(*this));\n+    move.fMacros.usage.set(usage);\n+    return move;\n+}\n+\n@@ -323,10 +347,1 @@\n-template<typename Derived>\n-UnicodeString NumberFormatterSettings<Derived>::toSkeleton(UErrorCode& status) const {\n-    if (U_FAILURE(status)) {\n-        return ICU_Utility::makeBogusString();\n-    }\n-    if (fMacros.copyErrorTo(status)) {\n-        return ICU_Utility::makeBogusString();\n-    }\n-    return skeleton::generate(fMacros, status);\n-}\n+\/\/ Note: toSkeleton defined in number_skeletons.cpp\n@@ -361,9 +376,1 @@\n-UnlocalizedNumberFormatter\n-NumberFormatter::forSkeleton(const UnicodeString& skeleton, UErrorCode& status) {\n-    return skeleton::create(skeleton, nullptr, status);\n-}\n-\n-UnlocalizedNumberFormatter\n-NumberFormatter::forSkeleton(const UnicodeString& skeleton, UParseError& perror, UErrorCode& status) {\n-    return skeleton::create(skeleton, &perror, status);\n-}\n+\/\/ Note: forSkeleton defined in number_skeletons.cpp\n@@ -411,1 +418,2 @@\n-    \/\/ No additional fields to assign (let call count and compiled formatter reset to defaults)\n+    UErrorCode localStatus = U_ZERO_ERROR; \/\/ Can't bubble up the error\n+    lnfCopyHelper(static_cast<const LNF&>(other), localStatus);\n@@ -419,5 +427,1 @@\n-    \/\/ For the move operators, copy over the compiled formatter.\n-    \/\/ Note: if the formatter is not compiled, call count information is lost.\n-    if (static_cast<LNF&&>(src).fCompiled != nullptr) {\n-        lnfMoveHelper(static_cast<LNF&&>(src));\n-    }\n+    lnfMoveHelper(std::move(static_cast<LNF&&>(src)));\n@@ -428,2 +432,2 @@\n-    \/\/ Reset to default values.\n-    clear();\n+    UErrorCode localStatus = U_ZERO_ERROR; \/\/ Can't bubble up the error\n+    lnfCopyHelper(other, localStatus);\n@@ -435,8 +439,1 @@\n-    \/\/ For the move operators, copy over the compiled formatter.\n-    \/\/ Note: if the formatter is not compiled, call count information is lost.\n-    if (static_cast<LNF&&>(src).fCompiled != nullptr) {\n-        \/\/ Formatter is compiled\n-        lnfMoveHelper(static_cast<LNF&&>(src));\n-    } else {\n-        clear();\n-    }\n+    lnfMoveHelper(std::move(src));\n@@ -446,2 +443,1 @@\n-void LocalizedNumberFormatter::clear() {\n-    \/\/ Reset to default values.\n+void LocalizedNumberFormatter::resetCompiled() {\n@@ -450,1 +446,0 @@\n-    delete fCompiled;\n@@ -458,2 +453,0 @@\n-    auto* callCount = reinterpret_cast<u_atomic_int32_t*>(fUnsafeCallCount);\n-    umtx_storeRelease(*callCount, INT32_MIN);\n@@ -461,5 +454,43 @@\n-    fCompiled = src.fCompiled;\n-    \/\/ Reset the source object to leave it in a safe state.\n-    auto* srcCallCount = reinterpret_cast<u_atomic_int32_t*>(src.fUnsafeCallCount);\n-    umtx_storeRelease(*srcCallCount, 0);\n-    src.fCompiled = nullptr;\n+    if (src.fCompiled != nullptr) {\n+        auto* callCount = reinterpret_cast<u_atomic_int32_t*>(fUnsafeCallCount);\n+        umtx_storeRelease(*callCount, INT32_MIN);\n+        fCompiled = src.fCompiled;\n+        \/\/ Reset the source object to leave it in a safe state.\n+        src.resetCompiled();\n+    } else {\n+        resetCompiled();\n+    }\n+\n+    \/\/ Unconditionally move the warehouse\n+    delete fWarehouse;\n+    fWarehouse = src.fWarehouse;\n+    src.fWarehouse = nullptr;\n+}\n+\n+void LocalizedNumberFormatter::lnfCopyHelper(const LNF&, UErrorCode& status) {\n+    \/\/ When copying, always reset the compiled formatter.\n+    delete fCompiled;\n+    resetCompiled();\n+\n+    \/\/ If MacroProps has a reference to AffixPatternProvider, we need to copy it.\n+    \/\/ If MacroProps has a reference to PluralRules, copy that one, too.\n+    delete fWarehouse;\n+    if (fMacros.affixProvider || fMacros.rules) {\n+        LocalPointer<DecimalFormatWarehouse> warehouse(new DecimalFormatWarehouse(), status);\n+        if (U_FAILURE(status)) {\n+            fWarehouse = nullptr;\n+            return;\n+        }\n+        if (fMacros.affixProvider) {\n+            warehouse->affixProvider.setTo(fMacros.affixProvider, status);\n+            fMacros.affixProvider = &warehouse->affixProvider.get();\n+        }\n+        if (fMacros.rules) {\n+            warehouse->rules.adoptInsteadAndCheckErrorCode(\n+                new PluralRules(*fMacros.rules), status);\n+            fMacros.rules = warehouse->rules.getAlias();\n+        }\n+        fWarehouse = warehouse.orphan();\n+    } else {\n+        fWarehouse = nullptr;\n+    }\n@@ -471,0 +502,1 @@\n+    delete fWarehouse;\n@@ -491,117 +523,0 @@\n-SymbolsWrapper::SymbolsWrapper(const SymbolsWrapper& other) {\n-    doCopyFrom(other);\n-}\n-\n-SymbolsWrapper::SymbolsWrapper(SymbolsWrapper&& src) U_NOEXCEPT {\n-    doMoveFrom(std::move(src));\n-}\n-\n-SymbolsWrapper& SymbolsWrapper::operator=(const SymbolsWrapper& other) {\n-    if (this == &other) {\n-        return *this;\n-    }\n-    doCleanup();\n-    doCopyFrom(other);\n-    return *this;\n-}\n-\n-SymbolsWrapper& SymbolsWrapper::operator=(SymbolsWrapper&& src) U_NOEXCEPT {\n-    if (this == &src) {\n-        return *this;\n-    }\n-    doCleanup();\n-    doMoveFrom(std::move(src));\n-    return *this;\n-}\n-\n-SymbolsWrapper::~SymbolsWrapper() {\n-    doCleanup();\n-}\n-\n-void SymbolsWrapper::setTo(const DecimalFormatSymbols& dfs) {\n-    doCleanup();\n-    fType = SYMPTR_DFS;\n-    fPtr.dfs = new DecimalFormatSymbols(dfs);\n-}\n-\n-void SymbolsWrapper::setTo(const NumberingSystem* ns) {\n-    doCleanup();\n-    fType = SYMPTR_NS;\n-    fPtr.ns = ns;\n-}\n-\n-void SymbolsWrapper::doCopyFrom(const SymbolsWrapper& other) {\n-    fType = other.fType;\n-    switch (fType) {\n-        case SYMPTR_NONE:\n-            \/\/ No action necessary\n-            break;\n-        case SYMPTR_DFS:\n-            \/\/ Memory allocation failures are exposed in copyErrorTo()\n-            if (other.fPtr.dfs != nullptr) {\n-                fPtr.dfs = new DecimalFormatSymbols(*other.fPtr.dfs);\n-            } else {\n-                fPtr.dfs = nullptr;\n-            }\n-            break;\n-        case SYMPTR_NS:\n-            \/\/ Memory allocation failures are exposed in copyErrorTo()\n-            if (other.fPtr.ns != nullptr) {\n-                fPtr.ns = new NumberingSystem(*other.fPtr.ns);\n-            } else {\n-                fPtr.ns = nullptr;\n-            }\n-            break;\n-    }\n-}\n-\n-void SymbolsWrapper::doMoveFrom(SymbolsWrapper&& src) {\n-    fType = src.fType;\n-    switch (fType) {\n-        case SYMPTR_NONE:\n-            \/\/ No action necessary\n-            break;\n-        case SYMPTR_DFS:\n-            fPtr.dfs = src.fPtr.dfs;\n-            src.fPtr.dfs = nullptr;\n-            break;\n-        case SYMPTR_NS:\n-            fPtr.ns = src.fPtr.ns;\n-            src.fPtr.ns = nullptr;\n-            break;\n-    }\n-}\n-\n-void SymbolsWrapper::doCleanup() {\n-    switch (fType) {\n-        case SYMPTR_NONE:\n-            \/\/ No action necessary\n-            break;\n-        case SYMPTR_DFS:\n-            delete fPtr.dfs;\n-            break;\n-        case SYMPTR_NS:\n-            delete fPtr.ns;\n-            break;\n-    }\n-}\n-\n-bool SymbolsWrapper::isDecimalFormatSymbols() const {\n-    return fType == SYMPTR_DFS;\n-}\n-\n-bool SymbolsWrapper::isNumberingSystem() const {\n-    return fType == SYMPTR_NS;\n-}\n-\n-const DecimalFormatSymbols* SymbolsWrapper::getDecimalFormatSymbols() const {\n-    U_ASSERT(fType == SYMPTR_DFS);\n-    return fPtr.dfs;\n-}\n-\n-const NumberingSystem* SymbolsWrapper::getNumberingSystem() const {\n-    U_ASSERT(fType == SYMPTR_NS);\n-    return fPtr.ns;\n-}\n-\n-\n@@ -687,1 +602,1 @@\n-        fCompiled->format(results->quantity, results->getStringRef(), status);\n+        fCompiled->format(results, status);\n@@ -689,1 +604,1 @@\n-        NumberFormatterImpl::formatStatic(fMacros, results->quantity, results->getStringRef(), status);\n+        NumberFormatterImpl::formatStatic(fMacros, results, status);\n@@ -699,2 +614,2 @@\n-    NumberStringBuilder string;\n-    auto signum = static_cast<int8_t>(isNegative ? -1 : 1);\n+    FormattedStringBuilder string;\n+    auto signum = static_cast<Signum>(isNegative ? SIGNUM_NEG : SIGNUM_POS);\n@@ -769,8 +684,1 @@\n-Format* LocalizedNumberFormatter::toFormat(UErrorCode& status) const {\n-    if (U_FAILURE(status)) {\n-        return nullptr;\n-    }\n-    LocalPointer<LocalizedNumberFormatterAsFormat> retval(\n-            new LocalizedNumberFormatterAsFormat(*this, fMacros.locale), status);\n-    return retval.orphan();\n-}\n+\/\/ Note: toFormat defined in number_asformat.cpp\n@@ -778,0 +686,4 @@\n+#if (U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN) && defined(_MSC_VER)\n+\/\/ Warning 4661.\n+#pragma warning(pop)\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_fluent.cpp","additions":87,"deletions":175,"binary":false,"changes":262,"status":"modified"},{"patch":"@@ -27,42 +27,0 @@\n-namespace {\n-\n-struct CurrencyFormatInfoResult {\n-    bool exists;\n-    const char16_t* pattern;\n-    const char16_t* decimalSeparator;\n-    const char16_t* groupingSeparator;\n-};\n-\n-CurrencyFormatInfoResult\n-getCurrencyFormatInfo(const Locale& locale, const char* isoCode, UErrorCode& status) {\n-    \/\/ TODO: Load this data in a centralized location like ICU4J?\n-    \/\/ TODO: Move this into the CurrencySymbols class?\n-    \/\/ TODO: Parts of this same data are loaded in dcfmtsym.cpp; should clean up.\n-    CurrencyFormatInfoResult result = {false, nullptr, nullptr, nullptr};\n-    if (U_FAILURE(status)) { return result; }\n-    CharString key;\n-    key.append(\"Currencies\/\", status);\n-    key.append(isoCode, status);\n-    UErrorCode localStatus = status;\n-    LocalUResourceBundlePointer bundle(ures_open(U_ICUDATA_CURR, locale.getName(), &localStatus));\n-    ures_getByKeyWithFallback(bundle.getAlias(), key.data(), bundle.getAlias(), &localStatus);\n-    if (U_SUCCESS(localStatus) &&\n-        ures_getSize(bundle.getAlias()) > 2) { \/\/ the length is 3 if more data is present\n-        ures_getByIndex(bundle.getAlias(), 2, bundle.getAlias(), &localStatus);\n-        int32_t dummy;\n-        result.exists = true;\n-        result.pattern = ures_getStringByIndex(bundle.getAlias(), 0, &dummy, &localStatus);\n-        result.decimalSeparator = ures_getStringByIndex(bundle.getAlias(), 1, &dummy, &localStatus);\n-        result.groupingSeparator = ures_getStringByIndex(bundle.getAlias(), 2, &dummy, &localStatus);\n-        status = localStatus;\n-    } else if (localStatus != U_MISSING_RESOURCE_ERROR) {\n-        status = localStatus;\n-    }\n-    return result;\n-}\n-\n-}  \/\/ namespace\n-\n-\n-MicroPropsGenerator::~MicroPropsGenerator() = default;\n-\n@@ -74,2 +32,4 @@\n-int32_t NumberFormatterImpl::formatStatic(const MacroProps& macros, DecimalQuantity& inValue,\n-                                       NumberStringBuilder& outString, UErrorCode& status) {\n+int32_t NumberFormatterImpl::formatStatic(const MacroProps &macros, UFormattedNumberData *results,\n+                                          UErrorCode &status) {\n+    DecimalQuantity &inValue = results->quantity;\n+    FormattedStringBuilder &outString = results->getStringRef();\n@@ -81,0 +41,1 @@\n+    results->outputUnit = std::move(micros.outputUnit);\n@@ -84,1 +45,1 @@\n-int32_t NumberFormatterImpl::getPrefixSuffixStatic(const MacroProps& macros, int8_t signum,\n+int32_t NumberFormatterImpl::getPrefixSuffixStatic(const MacroProps& macros, Signum signum,\n@@ -86,1 +47,1 @@\n-                                                   NumberStringBuilder& outString, UErrorCode& status) {\n+                                                   FormattedStringBuilder& outString, UErrorCode& status) {\n@@ -96,2 +57,3 @@\n-int32_t NumberFormatterImpl::format(DecimalQuantity& inValue, NumberStringBuilder& outString,\n-                                UErrorCode& status) const {\n+int32_t NumberFormatterImpl::format(UFormattedNumberData *results, UErrorCode &status) const {\n+    DecimalQuantity &inValue = results->quantity;\n+    FormattedStringBuilder &outString = results->getStringRef();\n@@ -103,0 +65,1 @@\n+    results->outputUnit = std::move(micros.outputUnit);\n@@ -114,1 +77,0 @@\n-    microsOut.rounder.apply(inValue, status);\n@@ -127,1 +89,0 @@\n-    fMicros.rounder.apply(inValue, status);\n@@ -132,2 +93,2 @@\n-int32_t NumberFormatterImpl::getPrefixSuffix(int8_t signum, StandardPlural::Form plural,\n-                                             NumberStringBuilder& outString, UErrorCode& status) const {\n+int32_t NumberFormatterImpl::getPrefixSuffix(Signum signum, StandardPlural::Form plural,\n+                                             FormattedStringBuilder& outString, UErrorCode& status) const {\n@@ -143,2 +104,2 @@\n-int32_t NumberFormatterImpl::getPrefixSuffixUnsafe(int8_t signum, StandardPlural::Form plural,\n-                                                   NumberStringBuilder& outString, UErrorCode& status) {\n+int32_t NumberFormatterImpl::getPrefixSuffixUnsafe(Signum signum, StandardPlural::Form plural,\n+                                                   FormattedStringBuilder& outString, UErrorCode& status) {\n@@ -174,1 +135,1 @@\n-    bool isNoUnit = utils::unitIsNoUnit(macros.unit);\n+    bool isBaseUnit = utils::unitIsBaseUnit(macros.unit);\n@@ -177,0 +138,1 @@\n+    bool isCompactNotation = macros.notation.fType == Notation::NTN_COMPACT;\n@@ -184,8 +146,0 @@\n-    const CurrencySymbols* currencySymbols;\n-    if (macros.currencySymbols != nullptr) {\n-        \/\/ Used by the DecimalFormat code path\n-        currencySymbols = macros.currencySymbols;\n-    } else {\n-        fWarehouse.fCurrencySymbols = {currency, macros.locale, status};\n-        currencySymbols = &fWarehouse.fCurrencySymbols;\n-    }\n@@ -196,2 +150,14 @@\n-    bool isCldrUnit = !isCurrency && !isNoUnit &&\n-        (unitWidth == UNUM_UNIT_WIDTH_FULL_NAME || !(isPercent || isPermille));\n+    \/\/ Use CLDR unit data for all MeasureUnits (not currency and not\n+    \/\/ no-unit), except use the dedicated percent pattern for percent and\n+    \/\/ permille. However, use the CLDR unit data for percent\/permille if a\n+    \/\/ long name was requested OR if compact notation is being used, since\n+    \/\/ compact notation overrides the middle modifier (micros.modMiddle)\n+    \/\/ normally used for the percent pattern.\n+    bool isCldrUnit = !isCurrency\n+        && !isBaseUnit\n+        && (unitWidth == UNUM_UNIT_WIDTH_FULL_NAME\n+            || !(isPercent || isPermille)\n+            || isCompactNotation\n+        );\n+    bool isMixedUnit = isCldrUnit && (uprv_strcmp(macros.unit.getType(), \"\") == 0) &&\n+                       macros.unit.getComplexity(status) == UMEASURE_UNIT_MIXED;\n@@ -218,3 +184,13 @@\n-        fMicros.symbols = new DecimalFormatSymbols(macros.locale, *ns, status);\n-        \/\/ Give ownership to the NumberFormatterImpl.\n-        fSymbols.adoptInstead(fMicros.symbols);\n+        LocalPointer<DecimalFormatSymbols> newSymbols(\n+            new DecimalFormatSymbols(macros.locale, *ns, status), status);\n+        if (U_FAILURE(status)) {\n+            return nullptr;\n+        }\n+        if (isCurrency) {\n+            newSymbols->setCurrency(currency.getISOCurrency(), status);\n+            if (U_FAILURE(status)) {\n+                return nullptr;\n+            }\n+        }\n+        fMicros.symbols = newSymbols.getAlias();\n+        fSymbols.adoptInstead(newSymbols.orphan());\n@@ -226,18 +202,2 @@\n-    if (isCurrency) {\n-        CurrencyFormatInfoResult info = getCurrencyFormatInfo(\n-                macros.locale, currency.getSubtype(), status);\n-        if (info.exists) {\n-            pattern = info.pattern;\n-            \/\/ It's clunky to clone an object here, but this code is not frequently executed.\n-            auto* symbols = new DecimalFormatSymbols(*fMicros.symbols);\n-            fMicros.symbols = symbols;\n-            fSymbols.adoptInstead(symbols);\n-            symbols->setSymbol(\n-                    DecimalFormatSymbols::ENumberFormatSymbol::kMonetarySeparatorSymbol,\n-                    UnicodeString(info.decimalSeparator),\n-                    FALSE);\n-            symbols->setSymbol(\n-                    DecimalFormatSymbols::ENumberFormatSymbol::kMonetaryGroupingSeparatorSymbol,\n-                    UnicodeString(info.groupingSeparator),\n-                    FALSE);\n-        }\n+    if (isCurrency && fMicros.symbols->getCurrencyPattern() != nullptr) {\n+        pattern = fMicros.symbols->getCurrencyPattern();\n@@ -261,0 +221,3 @@\n+        if (U_FAILURE(status)) {\n+            return nullptr;\n+        }\n@@ -263,0 +226,4 @@\n+    if (patternInfo == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n@@ -265,0 +232,3 @@\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n@@ -270,0 +240,21 @@\n+    \/\/ Unit Preferences and Conversions as our first step\n+    if (macros.usage.isSet()) {\n+        if (!isCldrUnit) {\n+            \/\/ We only support \"usage\" when the input unit is specified, and is\n+            \/\/ a CLDR Unit.\n+            status = U_ILLEGAL_ARGUMENT_ERROR;\n+            return nullptr;\n+        }\n+        auto usagePrefsHandler =\n+            new UsagePrefsHandler(macros.locale, macros.unit, macros.usage.fUsage, chain, status);\n+        fUsagePrefsHandler.adoptInsteadAndCheckErrorCode(usagePrefsHandler, status);\n+        chain = fUsagePrefsHandler.getAlias();\n+    } else if (isMixedUnit) {\n+        MeasureUnitImpl temp;\n+        const MeasureUnitImpl &outputUnit = MeasureUnitImpl::forMeasureUnit(macros.unit, temp, status);\n+        auto unitConversionHandler =\n+            new UnitConversionHandler(outputUnit.units[0]->build(status), macros.unit, chain, status);\n+        fUnitConversionHandler.adoptInsteadAndCheckErrorCode(unitConversionHandler, status);\n+        chain = fUnitConversionHandler.getAlias();\n+    }\n+\n@@ -280,1 +271,1 @@\n-    } else if (macros.notation.fType == Notation::NTN_COMPACT) {\n+    } else if (isCompactNotation) {\n@@ -284,0 +275,3 @@\n+    } else if (macros.usage.isSet()) {\n+        \/\/ Bogus Precision - it will get set in the UsagePrefsHandler instead\n+        precision = Precision();\n@@ -288,6 +282,1 @@\n-    if (macros.roundingMode != kDefaultMode) {\n-        roundingMode = macros.roundingMode;\n-    } else {\n-        \/\/ Temporary until ICU 64\n-        roundingMode = precision.fRoundingMode;\n-    }\n+    roundingMode = macros.roundingMode;\n@@ -295,0 +284,3 @@\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n@@ -299,1 +291,1 @@\n-    } else if (macros.notation.fType == Notation::NTN_COMPACT) {\n+    } else if (isCompactNotation) {\n@@ -340,1 +332,6 @@\n-        fScientificHandler.adoptInstead(new ScientificHandler(&macros.notation, fMicros.symbols, chain));\n+        auto newScientificHandler = new ScientificHandler(&macros.notation, fMicros.symbols, chain);\n+        if (newScientificHandler == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return nullptr;\n+        }\n+        fScientificHandler.adoptInstead(newScientificHandler);\n@@ -349,0 +346,4 @@\n+    if (patternModifier == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n@@ -353,1 +354,1 @@\n-            UNUM_FIELD_COUNT);\n+            kUndefinedField);\n@@ -358,1 +359,1 @@\n-                currencySymbols,\n+                currency,\n@@ -360,1 +361,2 @@\n-                resolvePluralRules(macros.rules, macros.locale, status));\n+                resolvePluralRules(macros.rules, macros.locale, status),\n+                status);\n@@ -362,1 +364,1 @@\n-        patternModifier->setSymbols(fMicros.symbols, currencySymbols, unitWidth, nullptr);\n+        patternModifier->setSymbols(fMicros.symbols, currency, unitWidth, nullptr, status);\n@@ -365,5 +367,5 @@\n-        fImmutablePatternModifier.adoptInstead(patternModifier->createImmutableAndChain(chain, status));\n-        chain = fImmutablePatternModifier.getAlias();\n-    } else {\n-        patternModifier->addToChain(chain);\n-        chain = patternModifier;\n+        fImmutablePatternModifier.adoptInsteadAndCheckErrorCode(patternModifier->createImmutable(status),\n+                                                                status);\n+    }\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n@@ -374,10 +376,22 @@\n-        fLongNameHandler.adoptInstead(\n-                LongNameHandler::forMeasureUnit(\n-                        macros.locale,\n-                        macros.unit,\n-                        macros.perUnit,\n-                        unitWidth,\n-                        resolvePluralRules(macros.rules, macros.locale, status),\n-                        chain,\n-                        status));\n-        chain = fLongNameHandler.getAlias();\n+        if (macros.usage.isSet()) {\n+            fLongNameMultiplexer.adoptInsteadAndCheckErrorCode(\n+                LongNameMultiplexer::forMeasureUnits(\n+                    macros.locale, *fUsagePrefsHandler->getOutputUnits(), unitWidth,\n+                    resolvePluralRules(macros.rules, macros.locale, status), chain, status),\n+                status);\n+            chain = fLongNameMultiplexer.getAlias();\n+        } else if (isMixedUnit) {\n+            fMixedUnitLongNameHandler.adoptInsteadAndCheckErrorCode(new MixedUnitLongNameHandler(),\n+                                                                    status);\n+            MixedUnitLongNameHandler::forMeasureUnit(\n+                macros.locale, macros.unit, unitWidth,\n+                resolvePluralRules(macros.rules, macros.locale, status), chain,\n+                fMixedUnitLongNameHandler.getAlias(), status);\n+            chain = fMixedUnitLongNameHandler.getAlias();\n+        } else {\n+            fLongNameHandler.adoptInsteadAndCheckErrorCode(new LongNameHandler(), status);\n+            LongNameHandler::forMeasureUnit(macros.locale, macros.unit, macros.perUnit, unitWidth,\n+                                            resolvePluralRules(macros.rules, macros.locale, status),\n+                                            chain, fLongNameHandler.getAlias(), status);\n+            chain = fLongNameHandler.getAlias();\n+        }\n@@ -385,7 +399,5 @@\n-        fLongNameHandler.adoptInstead(\n-                LongNameHandler::forCurrencyLongNames(\n-                        macros.locale,\n-                        currency,\n-                        resolvePluralRules(macros.rules, macros.locale, status),\n-                        chain,\n-                        status));\n+        fLongNameHandler.adoptInsteadAndCheckErrorCode(\n+            LongNameHandler::forCurrencyLongNames(\n+                macros.locale, currency, resolvePluralRules(macros.rules, macros.locale, status), chain,\n+                status),\n+            status);\n@@ -397,0 +409,3 @@\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n@@ -399,3 +414,1 @@\n-    \/\/ NOTE: Compact notation can (but might not) override the middle modifier and rounding.\n-    \/\/ It therefore needs to go at the end of the chain.\n-    if (macros.notation.fType == Notation::NTN_COMPACT) {\n+    if (isCompactNotation) {\n@@ -404,10 +417,18 @@\n-        fCompactHandler.adoptInstead(\n-                new CompactHandler(\n-                        macros.notation.fUnion.compactStyle,\n-                        macros.locale,\n-                        nsName,\n-                        compactType,\n-                        resolvePluralRules(macros.rules, macros.locale, status),\n-                        safe ? patternModifier : nullptr,\n-                        chain,\n-                        status));\n+        auto newCompactHandler = new CompactHandler(\n+            macros.notation.fUnion.compactStyle,\n+            macros.locale,\n+            nsName,\n+            compactType,\n+            resolvePluralRules(macros.rules, macros.locale, status),\n+            patternModifier,\n+            safe,\n+            chain,\n+            status);\n+        if (U_FAILURE(status)) {\n+            return nullptr;\n+        }\n+        if (newCompactHandler == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return nullptr;\n+        }\n+        fCompactHandler.adoptInstead(newCompactHandler);\n@@ -416,0 +437,12 @@\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+\n+    \/\/ Always add the pattern modifier as the last element of the chain.\n+    if (safe) {\n+        fImmutablePatternModifier->addToChain(chain);\n+        chain = fImmutablePatternModifier.getAlias();\n+    } else {\n+        patternModifier->addToChain(chain);\n+        chain = patternModifier;\n+    }\n@@ -433,1 +466,1 @@\n-int32_t NumberFormatterImpl::writeAffixes(const MicroProps& micros, NumberStringBuilder& string,\n+int32_t NumberFormatterImpl::writeAffixes(const MicroProps& micros, FormattedStringBuilder& string,\n@@ -435,0 +468,1 @@\n+    U_ASSERT(micros.modOuter != nullptr);\n@@ -448,1 +482,1 @@\n-                                         NumberStringBuilder& string, int32_t index,\n+                                         FormattedStringBuilder& string, int32_t index,\n@@ -455,1 +489,1 @@\n-                UNUM_INTEGER_FIELD,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD},\n@@ -462,1 +496,1 @@\n-                UNUM_INTEGER_FIELD,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD},\n@@ -478,1 +512,1 @@\n-                    UNUM_DECIMAL_SEPARATOR_FIELD,\n+                    {UFIELD_CATEGORY_NUMBER, UNUM_DECIMAL_SEPARATOR_FIELD},\n@@ -484,0 +518,11 @@\n+\n+        if (length == 0) {\n+            \/\/ Force output of the digit for value 0\n+            length += utils::insertDigitFromSymbols(\n+                    string,\n+                    index,\n+                    0,\n+                    *micros.symbols,\n+                    {UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD},\n+                    status);\n+        }\n@@ -490,1 +535,1 @@\n-                                                NumberStringBuilder& string, int32_t index,\n+                                                FormattedStringBuilder& string, int32_t index,\n@@ -503,1 +548,1 @@\n-                    UNUM_GROUPING_SEPARATOR_FIELD,\n+                    {UFIELD_CATEGORY_NUMBER, UNUM_GROUPING_SEPARATOR_FIELD},\n@@ -510,1 +555,7 @@\n-                string, index, nextDigit, *micros.symbols, UNUM_INTEGER_FIELD, status);\n+                string,\n+                index,\n+                nextDigit,\n+                *micros.symbols,\n+                {UFIELD_CATEGORY_NUMBER,\n+                UNUM_INTEGER_FIELD},\n+                status);\n@@ -516,1 +567,1 @@\n-                                                 NumberStringBuilder& string, int32_t index,\n+                                                 FormattedStringBuilder& string, int32_t index,\n@@ -524,1 +575,6 @@\n-                string, length + index, nextDigit, *micros.symbols, UNUM_FRACTION_FIELD, status);\n+                string,\n+                length + index,\n+                nextDigit,\n+                *micros.symbols,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_FRACTION_FIELD},\n+                status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_formatimpl.cpp","additions":200,"deletions":144,"binary":false,"changes":344,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -13,0 +13,1 @@\n+#include \"number_usageprefs.h\"\n@@ -18,0 +19,1 @@\n+#include \"number_utypes.h\"\n@@ -37,3 +39,2 @@\n-    static int32_t\n-    formatStatic(const MacroProps &macros, DecimalQuantity &inValue, NumberStringBuilder &outString,\n-                 UErrorCode &status);\n+    static int32_t formatStatic(const MacroProps &macros, UFormattedNumberData *results,\n+                                UErrorCode &status);\n@@ -47,2 +48,2 @@\n-    static int32_t getPrefixSuffixStatic(const MacroProps& macros, int8_t signum,\n-                                         StandardPlural::Form plural, NumberStringBuilder& outString,\n+    static int32_t getPrefixSuffixStatic(const MacroProps& macros, Signum signum,\n+                                         StandardPlural::Form plural, FormattedStringBuilder& outString,\n@@ -54,1 +55,1 @@\n-    int32_t format(DecimalQuantity& inValue, NumberStringBuilder& outString, UErrorCode& status) const;\n+    int32_t format(UFormattedNumberData *results, UErrorCode &status) const;\n@@ -64,1 +65,1 @@\n-    int32_t getPrefixSuffix(int8_t signum, StandardPlural::Form plural, NumberStringBuilder& outString,\n+    int32_t getPrefixSuffix(Signum signum, StandardPlural::Form plural, FormattedStringBuilder& outString,\n@@ -76,1 +77,1 @@\n-                               NumberStringBuilder& string, int32_t index, UErrorCode& status);\n+                               FormattedStringBuilder& string, int32_t index, UErrorCode& status);\n@@ -81,1 +82,1 @@\n-    static int32_t writeAffixes(const MicroProps& micros, NumberStringBuilder& string, int32_t start,\n+    static int32_t writeAffixes(const MicroProps& micros, FormattedStringBuilder& string, int32_t start,\n@@ -85,1 +86,3 @@\n-    \/\/ Head of the MicroPropsGenerator linked list:\n+    \/\/ Head of the MicroPropsGenerator linked list. Subclasses' processQuantity\n+    \/\/ methods process this list in a parent-first order, such that the last\n+    \/\/ item added, which this points to, typically has its logic executed last.\n@@ -93,0 +96,2 @@\n+    LocalPointer<const UsagePrefsHandler> fUsagePrefsHandler;\n+    LocalPointer<const UnitConversionHandler> fUnitConversionHandler;\n@@ -98,2 +103,7 @@\n-    LocalPointer<const ImmutablePatternModifier> fImmutablePatternModifier;\n-    LocalPointer<const LongNameHandler> fLongNameHandler;\n+    LocalPointer<ImmutablePatternModifier> fImmutablePatternModifier;\n+    LocalPointer<LongNameHandler> fLongNameHandler;\n+    \/\/ TODO: use a common base class that enables fLongNameHandler,\n+    \/\/ fLongNameMultiplexer, and fMixedUnitLongNameHandler to be merged into one\n+    \/\/ member?\n+    LocalPointer<MixedUnitLongNameHandler> fMixedUnitLongNameHandler;\n+    LocalPointer<const LongNameMultiplexer> fLongNameMultiplexer;\n@@ -112,2 +122,2 @@\n-    int32_t getPrefixSuffixUnsafe(int8_t signum, StandardPlural::Form plural,\n-                                  NumberStringBuilder& outString, UErrorCode& status);\n+    int32_t getPrefixSuffixUnsafe(Signum signum, StandardPlural::Form plural,\n+                                  FormattedStringBuilder& outString, UErrorCode& status);\n@@ -139,1 +149,1 @@\n-    writeIntegerDigits(const MicroProps &micros, DecimalQuantity &quantity, NumberStringBuilder &string,\n+    writeIntegerDigits(const MicroProps &micros, DecimalQuantity &quantity, FormattedStringBuilder &string,\n@@ -143,1 +153,1 @@\n-    writeFractionDigits(const MicroProps &micros, DecimalQuantity &quantity, NumberStringBuilder &string,\n+    writeFractionDigits(const MicroProps &micros, DecimalQuantity &quantity, FormattedStringBuilder &string,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_formatimpl.h","additions":27,"deletions":17,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -67,0 +67,7 @@\n+    if (fMinGrouping == -2) {\n+        fMinGrouping = getMinGroupingForLocale(locale);\n+    } else if (fMinGrouping == -3) {\n+        fMinGrouping = static_cast<int16_t>(uprv_max(2, getMinGroupingForLocale(locale)));\n+    } else {\n+        \/\/ leave fMinGrouping alone\n+    }\n@@ -79,7 +86,0 @@\n-    if (fMinGrouping == -2) {\n-        fMinGrouping = getMinGroupingForLocale(locale);\n-    } else if (fMinGrouping == -3) {\n-        fMinGrouping = static_cast<int16_t>(uprv_max(2, getMinGroupingForLocale(locale)));\n-    } else {\n-        \/\/ leave fMinGrouping alone\n-    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_grouping.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,0 +43,3 @@\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_integerwidth.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -13,0 +13,1 @@\n+#include \"measunit_impl.h\"\n@@ -25,0 +26,7 @@\n+\/**\n+ * Display Name (this format has no placeholder).\n+ *\n+ * Used as an index into the LongNameHandler::simpleFormats array. Units\n+ * resources cover the normal set of PluralRules keys, as well as `dnam` and\n+ * `per` forms.\n+ *\/\n@@ -26,0 +34,7 @@\n+\/**\n+ * \"per\" form (e.g. \"{0} per day\" is day's \"per\" form).\n+ *\n+ * Used as an index into the LongNameHandler::simpleFormats array. Units\n+ * resources cover the normal set of PluralRules keys, as well as `dnam` and\n+ * `per` forms.\n+ *\/\n@@ -27,0 +42,1 @@\n+\/\/ Number of keys in the array populated by PluralTableSink.\n@@ -41,0 +57,5 @@\n+\/\/ Selects a string out of the `strings` array which corresponds to the\n+\/\/ specified plural form, with fallback to the OTHER form.\n+\/\/\n+\/\/ The `strings` array must have ARRAY_LENGTH items: one corresponding to each\n+\/\/ of the plural forms, plus a display name (\"dnam\") and a \"per\" form.\n@@ -90,0 +111,12 @@\n+\/**\n+ * Populates outArray with `locale`-specific values for `unit` through use of\n+ * PluralTableSink. Only the set of basic units are supported!\n+ *\n+ * Reading from resources *unitsNarrow* and *unitsShort* (for width\n+ * UNUM_UNIT_WIDTH_NARROW), or just *unitsShort* (for width\n+ * UNUM_UNIT_WIDTH_SHORT). For other widths, it reads just \"units\".\n+ *\n+ * @param unit must have a type and subtype (i.e. it must be a unit listed in\n+ *     gTypes and gSubTypes in measunit.cpp).\n+ * @param outArray must be of fixed length ARRAY_LENGTH.\n+ *\/\n@@ -151,1 +184,0 @@\n-        UBool isChoiceFormat = FALSE;\n@@ -156,1 +188,1 @@\n-                &isChoiceFormat,\n+                nullptr \/* isChoiceFormat *\/,\n@@ -188,4 +220,10 @@\n-LongNameHandler*\n-LongNameHandler::forMeasureUnit(const Locale &loc, const MeasureUnit &unitRef, const MeasureUnit &perUnit,\n-                                const UNumberUnitWidth &width, const PluralRules *rules,\n-                                const MicroPropsGenerator *parent, UErrorCode &status) {\n+void LongNameHandler::forMeasureUnit(const Locale &loc, const MeasureUnit &unitRef,\n+                                     const MeasureUnit &perUnit, const UNumberUnitWidth &width,\n+                                     const PluralRules *rules, const MicroPropsGenerator *parent,\n+                                     LongNameHandler *fillIn, UErrorCode &status) {\n+    \/\/ Not valid for mixed units that aren't built-in units, and there should\n+    \/\/ not be any built-in mixed units!\n+    U_ASSERT(uprv_strcmp(unitRef.getType(), \"\") != 0 ||\n+             unitRef.getComplexity(status) != UMEASURE_UNIT_MIXED);\n+    U_ASSERT(fillIn != nullptr);\n+\n@@ -195,4 +233,3 @@\n-        bool isResolved = false;\n-        MeasureUnit resolved = MeasureUnit::resolveUnitPerUnit(unit, perUnit, &isResolved);\n-        if (isResolved) {\n-            unit = resolved;\n+        MeasureUnit simplified = unit.product(perUnit.reciprocal(status), status);\n+        if (uprv_strcmp(simplified.getType(), \"\") != 0) {\n+            unit = simplified;\n@@ -201,1 +238,2 @@\n-            return forCompoundUnit(loc, unit, perUnit, width, rules, parent, status);\n+            forCompoundUnit(loc, unit, perUnit, width, rules, parent, fillIn, status);\n+            return;\n@@ -205,4 +243,6 @@\n-    auto* result = new LongNameHandler(rules, parent);\n-    if (result == nullptr) {\n-        status = U_MEMORY_ALLOCATION_ERROR;\n-        return nullptr;\n+    if (uprv_strcmp(unit.getType(), \"\") == 0) {\n+        \/\/ TODO(ICU-20941): Unsanctioned unit. Not yet fully supported. Set an\n+        \/\/ error code. Once we support not-built-in units here, unitRef may be\n+        \/\/ anything, but if not built-in, perUnit has to be \"none\".\n+        status = U_UNSUPPORTED_ERROR;\n+        return;\n@@ -210,0 +250,1 @@\n+\n@@ -212,3 +253,7 @@\n-    if (U_FAILURE(status)) { return result; }\n-    result->simpleFormatsToModifiers(simpleFormats, UNUM_MEASURE_UNIT_FIELD, status);\n-    return result;\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    fillIn->rules = rules;\n+    fillIn->parent = parent;\n+    fillIn->simpleFormatsToModifiers(simpleFormats, {UFIELD_CATEGORY_NUMBER, UNUM_MEASURE_UNIT_FIELD},\n+                                     status);\n@@ -217,8 +262,14 @@\n-LongNameHandler*\n-LongNameHandler::forCompoundUnit(const Locale &loc, const MeasureUnit &unit, const MeasureUnit &perUnit,\n-                                 const UNumberUnitWidth &width, const PluralRules *rules,\n-                                 const MicroPropsGenerator *parent, UErrorCode &status) {\n-    auto* result = new LongNameHandler(rules, parent);\n-    if (result == nullptr) {\n-        status = U_MEMORY_ALLOCATION_ERROR;\n-        return nullptr;\n+void LongNameHandler::forCompoundUnit(const Locale &loc, const MeasureUnit &unit,\n+                                      const MeasureUnit &perUnit, const UNumberUnitWidth &width,\n+                                      const PluralRules *rules, const MicroPropsGenerator *parent,\n+                                      LongNameHandler *fillIn, UErrorCode &status) {\n+    if (uprv_strcmp(unit.getType(), \"\") == 0 || uprv_strcmp(perUnit.getType(), \"\") == 0) {\n+        \/\/ TODO(ICU-20941): Unsanctioned unit. Not yet fully supported. Set an\n+        \/\/ error code. Once we support not-built-in units here, unitRef may be\n+        \/\/ anything, but if not built-in, perUnit has to be \"none\".\n+        status = U_UNSUPPORTED_ERROR;\n+        return;\n+    }\n+    if (fillIn == nullptr) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return;\n@@ -228,1 +279,3 @@\n-    if (U_FAILURE(status)) { return result; }\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n@@ -231,1 +284,3 @@\n-    if (U_FAILURE(status)) { return result; }\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n@@ -238,1 +293,3 @@\n-        if (U_FAILURE(status)) { return result; }\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n@@ -241,1 +298,3 @@\n-        if (U_FAILURE(status)) { return result; }\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n@@ -243,3 +302,8 @@\n-        if (U_FAILURE(status)) { return result; }\n-        SimpleFormatter secondaryCompiled(secondaryFormat, 1, 1, status);\n-        if (U_FAILURE(status)) { return result; }\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        \/\/ Some \"one\" pattern may not contain \"{0}\". For example in \"ar\" or \"ne\" locale.\n+        SimpleFormatter secondaryCompiled(secondaryFormat, 0, 1, status);\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n@@ -249,1 +313,3 @@\n-        if (U_FAILURE(status)) { return result; }\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n@@ -251,2 +317,4 @@\n-    result->multiSimpleFormatsToModifiers(primaryData, perUnitFormat, UNUM_MEASURE_UNIT_FIELD, status);\n-    return result;\n+    fillIn->rules = rules;\n+    fillIn->parent = parent;\n+    fillIn->multiSimpleFormatsToModifiers(primaryData, perUnitFormat,\n+                                          {UFIELD_CATEGORY_NUMBER, UNUM_MEASURE_UNIT_FIELD}, status);\n@@ -268,0 +336,20 @@\n+UnicodeString LongNameHandler::getUnitPattern(\n+        const Locale& loc,\n+        const MeasureUnit& unit,\n+        UNumberUnitWidth width,\n+        StandardPlural::Form pluralForm,\n+        UErrorCode& status) {\n+    if (U_FAILURE(status)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n+    UnicodeString simpleFormats[ARRAY_LENGTH];\n+    getMeasureData(loc, unit, width, simpleFormats, status);\n+    \/\/ The above already handles fallback from other widths to short\n+    if (U_FAILURE(status)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n+    \/\/ Now handle fallback from other plural forms to OTHER\n+    return (!(simpleFormats[pluralForm]).isBogus())? simpleFormats[pluralForm]:\n+            simpleFormats[StandardPlural::Form::OTHER];\n+}\n+\n@@ -280,1 +368,1 @@\n-    result->simpleFormatsToModifiers(simpleFormats, UNUM_CURRENCY_FIELD, status);\n+    result->simpleFormatsToModifiers(simpleFormats, {UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD}, status);\n@@ -292,1 +380,1 @@\n-        fModifiers[i] = SimpleModifier(compiledFormatter, field, false, {this, 0, plural});\n+        fModifiers[i] = SimpleModifier(compiledFormatter, field, false, {this, SIGNUM_POS_ZERO, plural});\n@@ -309,1 +397,1 @@\n-        fModifiers[i] = SimpleModifier(compoundCompiled, field, false, {this, 0, plural});\n+        fModifiers[i] = SimpleModifier(compoundCompiled, field, false, {this, SIGNUM_POS_ZERO, plural});\n@@ -315,1 +403,3 @@\n-    parent->processQuantity(quantity, micros, status);\n+    if (parent != NULL) {\n+        parent->processQuantity(quantity, micros, status);\n+    }\n@@ -320,1 +410,1 @@\n-const Modifier* LongNameHandler::getModifier(int8_t \/*signum*\/, StandardPlural::Form plural) const {\n+const Modifier* LongNameHandler::getModifier(Signum \/*signum*\/, StandardPlural::Form plural) const {\n@@ -324,0 +414,195 @@\n+void MixedUnitLongNameHandler::forMeasureUnit(const Locale &loc, const MeasureUnit &mixedUnit,\n+                                              const UNumberUnitWidth &width, const PluralRules *rules,\n+                                              const MicroPropsGenerator *parent,\n+                                              MixedUnitLongNameHandler *fillIn, UErrorCode &status) {\n+    U_ASSERT(mixedUnit.getComplexity(status) == UMEASURE_UNIT_MIXED);\n+    U_ASSERT(fillIn != nullptr);\n+\n+    MeasureUnitImpl temp;\n+    const MeasureUnitImpl& impl = MeasureUnitImpl::forMeasureUnit(mixedUnit, temp, status);\n+    fillIn->fMixedUnitCount = impl.units.length();\n+    fillIn->fMixedUnitData.adoptInstead(new UnicodeString[fillIn->fMixedUnitCount * ARRAY_LENGTH]);\n+    for (int32_t i = 0; i < fillIn->fMixedUnitCount; i++) {\n+        \/\/ Grab data for each of the components.\n+        UnicodeString *unitData = &fillIn->fMixedUnitData[i * ARRAY_LENGTH];\n+        getMeasureData(loc, impl.units[i]->build(status), width, unitData, status);\n+    }\n+\n+    UListFormatterWidth listWidth = ULISTFMT_WIDTH_SHORT;\n+    if (width == UNUM_UNIT_WIDTH_NARROW) {\n+        listWidth = ULISTFMT_WIDTH_NARROW;\n+    } else if (width == UNUM_UNIT_WIDTH_FULL_NAME) {\n+        \/\/ This might be the same as SHORT in most languages:\n+        listWidth = ULISTFMT_WIDTH_WIDE;\n+    }\n+    fillIn->fListFormatter.adoptInsteadAndCheckErrorCode(\n+        ListFormatter::createInstance(loc, ULISTFMT_TYPE_UNITS, listWidth, status), status);\n+    fillIn->rules = rules;\n+    fillIn->parent = parent;\n+\n+    \/\/ We need a localised NumberFormatter for the integers of the bigger units\n+    \/\/ (providing Arabic numerals, for example).\n+    fillIn->fIntegerFormatter = NumberFormatter::withLocale(loc);\n+}\n+\n+void MixedUnitLongNameHandler::processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                                               UErrorCode &status) const {\n+    U_ASSERT(fMixedUnitCount > 1);\n+    if (parent != nullptr) {\n+        parent->processQuantity(quantity, micros, status);\n+    }\n+    micros.modOuter = getMixedUnitModifier(quantity, micros, status);\n+}\n+\n+const Modifier *MixedUnitLongNameHandler::getMixedUnitModifier(DecimalQuantity &quantity,\n+                                                               MicroProps &micros,\n+                                                               UErrorCode &status) const {\n+    if (micros.mixedMeasuresCount == 0) {\n+        U_ASSERT(micros.mixedMeasuresCount > 0); \/\/ Mixed unit: we must have more than one unit value\n+        status = U_UNSUPPORTED_ERROR;\n+        return &micros.helpers.emptyWeakModifier;\n+    }\n+    \/\/ If we don't have at least one mixedMeasure, the LongNameHandler would be\n+    \/\/ sufficient and we shouldn't be running MixedUnitLongNameHandler code:\n+    U_ASSERT(micros.mixedMeasuresCount > 0);\n+    \/\/ mixedMeasures does not contain the last value:\n+    U_ASSERT(fMixedUnitCount == micros.mixedMeasuresCount + 1);\n+    U_ASSERT(fListFormatter.isValid());\n+\n+    \/\/ Algorithm:\n+    \/\/\n+    \/\/ For the mixed-units measurement of: \"3 yard, 1 foot, 2.6 inch\", we should\n+    \/\/ find \"3 yard\" and \"1 foot\" in micros.mixedMeasures.\n+    \/\/\n+    \/\/ Obtain long-names with plural forms corresponding to measure values:\n+    \/\/   * {0} yards, {0} foot, {0} inches\n+    \/\/\n+    \/\/ Format the integer values appropriately and modify with the format\n+    \/\/ strings:\n+    \/\/   - 3 yards, 1 foot\n+    \/\/\n+    \/\/ Use ListFormatter to combine, with one placeholder:\n+    \/\/   - 3 yards, 1 foot and {0} inches\n+    \/\/\n+    \/\/ Return a SimpleModifier for this pattern, letting the rest of the\n+    \/\/ pipeline take care of the remaining inches.\n+\n+    LocalArray<UnicodeString> outputMeasuresList(new UnicodeString[fMixedUnitCount], status);\n+    if (U_FAILURE(status)) {\n+        return &micros.helpers.emptyWeakModifier;\n+    }\n+\n+    for (int32_t i = 0; i < micros.mixedMeasuresCount; i++) {\n+        DecimalQuantity fdec;\n+        fdec.setToLong(micros.mixedMeasures[i]);\n+        if (i > 0 && fdec.isNegative()) {\n+            \/\/ If numbers are negative, only the first number needs to have its\n+            \/\/ negative sign formatted.\n+            fdec.negate();\n+        }\n+        StandardPlural::Form pluralForm = utils::getStandardPlural(rules, fdec);\n+\n+        UnicodeString simpleFormat =\n+            getWithPlural(&fMixedUnitData[i * ARRAY_LENGTH], pluralForm, status);\n+        SimpleFormatter compiledFormatter(simpleFormat, 0, 1, status);\n+\n+        UnicodeString num;\n+        auto appendable = UnicodeStringAppendable(num);\n+        fIntegerFormatter.formatDecimalQuantity(fdec, status).appendTo(appendable, status);\n+        compiledFormatter.format(num, outputMeasuresList[i], status);\n+        \/\/ TODO(icu-units#67): fix field positions\n+    }\n+\n+    \/\/ Reiterated: we have at least one mixedMeasure:\n+    U_ASSERT(micros.mixedMeasuresCount > 0);\n+    \/\/ Thus if negative, a negative has already been formatted:\n+    if (quantity.isNegative()) {\n+        quantity.negate();\n+    }\n+\n+    UnicodeString *finalSimpleFormats = &fMixedUnitData[(fMixedUnitCount - 1) * ARRAY_LENGTH];\n+    StandardPlural::Form finalPlural = utils::getPluralSafe(micros.rounder, rules, quantity, status);\n+    UnicodeString finalSimpleFormat = getWithPlural(finalSimpleFormats, finalPlural, status);\n+    SimpleFormatter finalFormatter(finalSimpleFormat, 0, 1, status);\n+    finalFormatter.format(UnicodeString(u\"{0}\"), outputMeasuresList[fMixedUnitCount - 1], status);\n+\n+    \/\/ Combine list into a \"premixed\" pattern\n+    UnicodeString premixedFormatPattern;\n+    fListFormatter->format(outputMeasuresList.getAlias(), fMixedUnitCount, premixedFormatPattern,\n+                           status);\n+    SimpleFormatter premixedCompiled(premixedFormatPattern, 0, 1, status);\n+    if (U_FAILURE(status)) {\n+        return &micros.helpers.emptyWeakModifier;\n+    }\n+\n+    \/\/ TODO(icu-units#67): fix field positions\n+    \/\/ Return a SimpleModifier for the \"premixed\" pattern\n+    micros.helpers.mixedUnitModifier =\n+        SimpleModifier(premixedCompiled, kUndefinedField, false, {this, SIGNUM_POS_ZERO, finalPlural});\n+    return &micros.helpers.mixedUnitModifier;\n+}\n+\n+const Modifier *MixedUnitLongNameHandler::getModifier(Signum \/*signum*\/,\n+                                                      StandardPlural::Form \/*plural*\/) const {\n+    \/\/ TODO(units): investigate this method when investigating where\n+    \/\/ LongNameHandler::getModifier() gets used. To be sure it remains\n+    \/\/ unreachable:\n+    UPRV_UNREACHABLE;\n+    return nullptr;\n+}\n+\n+LongNameMultiplexer *\n+LongNameMultiplexer::forMeasureUnits(const Locale &loc, const MaybeStackVector<MeasureUnit> &units,\n+                                     const UNumberUnitWidth &width, const PluralRules *rules,\n+                                     const MicroPropsGenerator *parent, UErrorCode &status) {\n+    LocalPointer<LongNameMultiplexer> result(new LongNameMultiplexer(parent), status);\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+    U_ASSERT(units.length() > 0);\n+    if (result->fHandlers.resize(units.length()) == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n+    result->fMeasureUnits.adoptInstead(new MeasureUnit[units.length()]);\n+    for (int32_t i = 0, length = units.length(); i < length; i++) {\n+        const MeasureUnit& unit = *units[i];\n+        result->fMeasureUnits[i] = unit;\n+        if (unit.getComplexity(status) == UMEASURE_UNIT_MIXED) {\n+            MixedUnitLongNameHandler *mlnh = result->fMixedUnitHandlers.createAndCheckErrorCode(status);\n+            MixedUnitLongNameHandler::forMeasureUnit(loc, unit, width, rules, NULL, mlnh, status);\n+            result->fHandlers[i] = mlnh;\n+        } else {\n+            LongNameHandler *lnh = result->fLongNameHandlers.createAndCheckErrorCode(status);\n+            LongNameHandler::forMeasureUnit(loc, unit, MeasureUnit(), width, rules, NULL, lnh, status);\n+            result->fHandlers[i] = lnh;\n+        }\n+        if (U_FAILURE(status)) {\n+            return nullptr;\n+        }\n+    }\n+    return result.orphan();\n+}\n+\n+void LongNameMultiplexer::processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                                          UErrorCode &status) const {\n+    \/\/ We call parent->processQuantity() from the Multiplexer, instead of\n+    \/\/ letting LongNameHandler handle it: we don't know which LongNameHandler to\n+    \/\/ call until we've called the parent!\n+    fParent->processQuantity(quantity, micros, status);\n+\n+    \/\/ Call the correct LongNameHandler based on outputUnit\n+    for (int i = 0; i < fHandlers.getCapacity(); i++) {\n+        if (fMeasureUnits[i] == micros.outputUnit) {\n+            fHandlers[i]->processQuantity(quantity, micros, status);\n+            return;\n+        }\n+    }\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    \/\/ We shouldn't receive any outputUnit for which we haven't already got a\n+    \/\/ LongNameHandler:\n+    status = U_INTERNAL_PROGRAM_ERROR;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_longnames.cpp","additions":326,"deletions":41,"binary":false,"changes":367,"status":"modified"},{"patch":"@@ -10,0 +10,2 @@\n+#include \"cmemory.h\"\n+#include \"unicode\/listformatter.h\"\n@@ -25,0 +27,7 @@\n+    static UnicodeString getUnitPattern(\n+        const Locale& loc,\n+        const MeasureUnit& unit,\n+        UNumberUnitWidth width,\n+        StandardPlural::Form pluralForm,\n+        UErrorCode& status);\n+\n@@ -29,5 +38,30 @@\n-    static LongNameHandler*\n-    forMeasureUnit(const Locale &loc, const MeasureUnit &unit, const MeasureUnit &perUnit,\n-                   const UNumberUnitWidth &width, const PluralRules *rules,\n-                   const MicroPropsGenerator *parent, UErrorCode &status);\n-\n+    \/**\n+     * Construct a localized LongNameHandler for the specified MeasureUnit.\n+     *\n+     * Compound units can be constructed via `unit` and `perUnit`. Both of these\n+     * must then be built-in units.\n+     *\n+     * Mixed units are not supported, use MixedUnitLongNameHandler::forMeasureUnit.\n+     *\n+     * This function uses a fillIn intead of returning a pointer, because we\n+     * want to fill in instances in a MemoryPool (which cannot adopt pointers it\n+     * didn't create itself).\n+     *\n+     * @param loc The desired locale.\n+     * @param unit The measure unit to construct a LongNameHandler for. If\n+     *     `perUnit` is also defined, `unit` must not be a mixed unit.\n+     * @param perUnit If `unit` is a mixed unit, `perUnit` must be \"none\".\n+     * @param width Specifies the desired unit rendering.\n+     * @param rules Does not take ownership.\n+     * @param parent Does not take ownership.\n+     * @param fillIn Required.\n+     *\/\n+    static void forMeasureUnit(const Locale &loc, const MeasureUnit &unit, const MeasureUnit &perUnit,\n+                               const UNumberUnitWidth &width, const PluralRules *rules,\n+                               const MicroPropsGenerator *parent, LongNameHandler *fillIn,\n+                               UErrorCode &status);\n+\n+    \/**\n+     * Selects the plural-appropriate Modifier from the set of fModifiers based\n+     * on the plural form.\n+     *\/\n@@ -37,1 +71,5 @@\n-    const Modifier* getModifier(int8_t signum, StandardPlural::Form plural) const U_OVERRIDE;\n+    \/\/ TODO(units): investigate whether we might run into Mixed Unit trouble\n+    \/\/ with this. This override for ModifierStore::getModifier does not support\n+    \/\/ mixed units: investigate under which circumstances it gets called (check\n+    \/\/ both ImmutablePatternModifier and in NumberRangeFormatterImpl).\n+    const Modifier* getModifier(Signum signum, StandardPlural::Form plural) const U_OVERRIDE;\n@@ -40,0 +78,1 @@\n+    \/\/ A set of pre-computed modifiers, one for each plural form.\n@@ -41,0 +80,1 @@\n+    \/\/ Not owned\n@@ -42,0 +82,1 @@\n+    \/\/ Not owned\n@@ -45,1 +86,2 @@\n-            : rules(rules), parent(parent) {}\n+        : rules(rules), parent(parent) {\n+    }\n@@ -47,4 +89,9 @@\n-    static LongNameHandler*\n-    forCompoundUnit(const Locale &loc, const MeasureUnit &unit, const MeasureUnit &perUnit,\n-                    const UNumberUnitWidth &width, const PluralRules *rules,\n-                    const MicroPropsGenerator *parent, UErrorCode &status);\n+    LongNameHandler() : rules(nullptr), parent(nullptr) {\n+    }\n+\n+    \/\/ Enables MemoryPool<LongNameHandler>::emplaceBack(): requires access to\n+    \/\/ the private constructors.\n+    friend class MemoryPool<LongNameHandler>;\n+\n+    \/\/ Allow macrosToMicroGenerator to call the private default constructor.\n+    friend class NumberFormatterImpl;\n@@ -52,0 +99,9 @@\n+    \/\/ Fills in LongNameHandler fields for formatting compound units identified\n+    \/\/ via `unit` and `perUnit`. Both `unit` and `perUnit` need to be built-in\n+    \/\/ units (for which data exists).\n+    static void forCompoundUnit(const Locale &loc, const MeasureUnit &unit, const MeasureUnit &perUnit,\n+                                const UNumberUnitWidth &width, const PluralRules *rules,\n+                                const MicroPropsGenerator *parent, LongNameHandler *fillIn,\n+                                UErrorCode &status);\n+\n+    \/\/ Sets fModifiers to use the patterns from `simpleFormats`.\n@@ -53,0 +109,6 @@\n+\n+    \/\/ Sets fModifiers to a combination of `leadFormats` (one per plural form)\n+    \/\/ and `trailFormat` appended to each.\n+    \/\/\n+    \/\/ With a leadFormat of \"{0}m\" and a trailFormat of \"{0}\/s\", it produces a\n+    \/\/ pattern of \"{0}m\/s\" by inserting the leadFormat pattern into trailFormat.\n@@ -57,0 +119,119 @@\n+\/\/ Similar to LongNameHandler, but only for MIXED units.\n+class MixedUnitLongNameHandler : public MicroPropsGenerator, public ModifierStore, public UMemory {\n+  public:\n+    \/**\n+     * Construct a localized MixedUnitLongNameHandler for the specified\n+     * MeasureUnit. It must be a MIXED unit.\n+     *\n+     * This function uses a fillIn intead of returning a pointer, because we\n+     * want to fill in instances in a MemoryPool (which cannot adopt pointers it\n+     * didn't create itself).\n+     *\n+     * @param loc The desired locale.\n+     * @param mixedUnit The mixed measure unit to construct a\n+     *     MixedUnitLongNameHandler for.\n+     * @param width Specifies the desired unit rendering.\n+     * @param rules Does not take ownership.\n+     * @param parent Does not take ownership.\n+     * @param fillIn Required.\n+     *\/\n+    static void forMeasureUnit(const Locale &loc, const MeasureUnit &mixedUnit,\n+                               const UNumberUnitWidth &width, const PluralRules *rules,\n+                               const MicroPropsGenerator *parent, MixedUnitLongNameHandler *fillIn,\n+                               UErrorCode &status);\n+\n+    \/**\n+     * Produces a plural-appropriate Modifier for a mixed unit: `quantity` is\n+     * taken as the final smallest unit, while the larger unit values must be\n+     * provided via `micros.mixedMeasures`.\n+     *\/\n+    void processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                         UErrorCode &status) const U_OVERRIDE;\n+\n+    \/\/ Required for ModifierStore. And ModifierStore is required by\n+    \/\/ SimpleModifier constructor's last parameter. We assert his will never get\n+    \/\/ called though.\n+    const Modifier *getModifier(Signum signum, StandardPlural::Form plural) const U_OVERRIDE;\n+\n+  private:\n+    \/\/ Not owned\n+    const PluralRules *rules;\n+    \/\/ Not owned\n+    const MicroPropsGenerator *parent;\n+\n+    \/\/ Total number of units in the MeasureUnit this handler was configured for:\n+    \/\/ for \"foot-and-inch\", this will be 2.\n+    int32_t fMixedUnitCount = 1;\n+    \/\/ Stores unit data for each of the individual units. For each unit, it\n+    \/\/ stores ARRAY_LENGTH strings, as returned by getMeasureData. (Each unit\n+    \/\/ with index `i` has ARRAY_LENGTH strings starting at index\n+    \/\/ `i*ARRAY_LENGTH` in this array.)\n+    LocalArray<UnicodeString> fMixedUnitData;\n+    \/\/ A localized NumberFormatter used to format the integer-valued bigger\n+    \/\/ units of Mixed Unit measurements.\n+    LocalizedNumberFormatter fIntegerFormatter;\n+    \/\/ A localised list formatter for joining mixed units together.\n+    LocalPointer<ListFormatter> fListFormatter;\n+\n+    MixedUnitLongNameHandler(const PluralRules *rules, const MicroPropsGenerator *parent)\n+        : rules(rules), parent(parent) {\n+    }\n+\n+    MixedUnitLongNameHandler() : rules(nullptr), parent(nullptr) {\n+    }\n+\n+    \/\/ Allow macrosToMicroGenerator to call the private default constructor.\n+    friend class NumberFormatterImpl;\n+\n+    \/\/ Enables MemoryPool<LongNameHandler>::emplaceBack(): requires access to\n+    \/\/ the private constructors.\n+    friend class MemoryPool<MixedUnitLongNameHandler>;\n+\n+    \/\/ For a mixed unit, returns a Modifier that takes only one parameter: the\n+    \/\/ smallest and final unit of the set. The bigger units' values and labels\n+    \/\/ get baked into this Modifier, together with the unit label of the final\n+    \/\/ unit.\n+    const Modifier *getMixedUnitModifier(DecimalQuantity &quantity, MicroProps &micros,\n+                                         UErrorCode &status) const;\n+};\n+\n+\/**\n+ * A MicroPropsGenerator that multiplexes between different LongNameHandlers,\n+ * depending on the outputUnit.\n+ *\n+ * See processQuantity() for the input requirements.\n+ *\/\n+class LongNameMultiplexer : public MicroPropsGenerator, public UMemory {\n+  public:\n+    \/\/ Produces a multiplexer for LongNameHandlers, one for each unit in\n+    \/\/ `units`. An individual unit might be a mixed unit.\n+    static LongNameMultiplexer *forMeasureUnits(const Locale &loc,\n+                                                const MaybeStackVector<MeasureUnit> &units,\n+                                                const UNumberUnitWidth &width, const PluralRules *rules,\n+                                                const MicroPropsGenerator *parent, UErrorCode &status);\n+\n+    \/\/ The output unit must be provided via `micros.outputUnit`, it must match\n+    \/\/ one of the units provided to the factory function.\n+    void processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                         UErrorCode &status) const U_OVERRIDE;\n+\n+  private:\n+    \/**\n+     * Because we only know which LongNameHandler we wish to call after calling\n+     * earlier MicroPropsGenerators in the chain, LongNameMultiplexer keeps the\n+     * parent link, while the LongNameHandlers are given no parents.\n+     *\/\n+    MemoryPool<LongNameHandler> fLongNameHandlers;\n+    MemoryPool<MixedUnitLongNameHandler> fMixedUnitHandlers;\n+    \/\/ Unowned pointers to instances owned by MaybeStackVectors.\n+    MaybeStackArray<MicroPropsGenerator *, 8> fHandlers;\n+    \/\/ Each MeasureUnit corresponds to the same-index MicroPropsGenerator\n+    \/\/ pointed to in fHandlers.\n+    LocalArray<MeasureUnit> fMeasureUnits;\n+\n+    const MicroPropsGenerator *fParent;\n+\n+    LongNameMultiplexer(const MicroPropsGenerator *parent) : fParent(parent) {\n+    }\n+};\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_longnames.h","additions":192,"deletions":11,"binary":false,"changes":203,"status":"modified"},{"patch":"@@ -16,1 +16,0 @@\n-#include \"number_currencysymbols.h\"\n@@ -66,11 +65,2 @@\n-    AffixPatternProvider* affixProvider;\n-    if (properties.currencyPluralInfo.fPtr.isNull()) {\n-        warehouse.currencyPluralInfoAPP.setToBogus();\n-        warehouse.propertiesAPP.setTo(properties, status);\n-        affixProvider = &warehouse.propertiesAPP;\n-    } else {\n-        warehouse.currencyPluralInfoAPP.setTo(*properties.currencyPluralInfo.fPtr, properties, status);\n-        warehouse.propertiesAPP.setToBogus();\n-        affixProvider = &warehouse.currencyPluralInfoAPP;\n-    }\n-    macros.affixProvider = affixProvider;\n+    warehouse.affixProvider.setTo(properties, status);\n+    macros.affixProvider = &warehouse.affixProvider.get();\n@@ -86,1 +76,1 @@\n-            affixProvider->hasCurrencySign());\n+            warehouse.affixProvider.get().hasCurrencySign());\n@@ -93,2 +83,0 @@\n-    warehouse.currencySymbols = {currency, locale, symbols, status};\n-    macros.currencySymbols = &warehouse.currencySymbols;\n@@ -107,0 +95,2 @@\n+    \/\/ Not assigning directly to macros.roundingMode here: we change\n+    \/\/ roundingMode if and when we also change macros.precision.\n@@ -128,1 +118,0 @@\n-    \/\/ The following logic ensures that there is always a minimum of at least one digit.\n@@ -130,2 +119,1 @@\n-        \/\/ Force a digit after the decimal point.\n-        minFrac = minFrac <= 0 ? 1 : minFrac;\n+        minFrac = (minFrac < 0 || (minFrac == 0 && maxInt == 0)) ? 1 : minFrac;\n@@ -162,1 +150,1 @@\n-        precision.fRoundingMode = roundingMode;\n+        macros.roundingMode = roundingMode;\n@@ -256,1 +244,1 @@\n-            macros.precision.fRoundingMode = roundingMode;\n+            macros.roundingMode = roundingMode;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_mapper.cpp","additions":8,"deletions":20,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -23,0 +23,4 @@\n+class AutoAffixPatternProvider;\n+class CurrencyPluralInfoAffixProvider;\n+\n+\n@@ -35,6 +39,0 @@\n-    PropertiesAffixPatternProvider() = default; \/\/ puts instance in valid but undefined state\n-\n-    PropertiesAffixPatternProvider(const DecimalFormatProperties& properties, UErrorCode& status) {\n-        setTo(properties, status);\n-    }\n-\n@@ -68,0 +66,2 @@\n+    PropertiesAffixPatternProvider() = default; \/\/ puts instance in valid but undefined state\n+\n@@ -71,0 +71,3 @@\n+\n+    friend class AutoAffixPatternProvider;\n+    friend class CurrencyPluralInfoAffixProvider;\n@@ -110,0 +113,2 @@\n+    CurrencyPluralInfoAffixProvider() = default;\n+\n@@ -111,0 +116,44 @@\n+\n+    friend class AutoAffixPatternProvider;\n+};\n+\n+\n+class AutoAffixPatternProvider {\n+  public:\n+    inline AutoAffixPatternProvider() = default;\n+\n+    inline AutoAffixPatternProvider(const DecimalFormatProperties& properties, UErrorCode& status) {\n+        setTo(properties, status);\n+    }\n+\n+    inline void setTo(const DecimalFormatProperties& properties, UErrorCode& status) {\n+        if (properties.currencyPluralInfo.fPtr.isNull()) {\n+            propertiesAPP.setTo(properties, status);\n+            currencyPluralInfoAPP.setToBogus();\n+        } else {\n+            propertiesAPP.setToBogus();\n+            currencyPluralInfoAPP.setTo(*properties.currencyPluralInfo.fPtr, properties, status);\n+        }\n+    }\n+\n+    inline void setTo(const AffixPatternProvider* provider, UErrorCode& status) {\n+        if (auto ptr = dynamic_cast<const PropertiesAffixPatternProvider*>(provider)) {\n+            propertiesAPP = *ptr;\n+        } else if (auto ptr = dynamic_cast<const CurrencyPluralInfoAffixProvider*>(provider)) {\n+            currencyPluralInfoAPP = *ptr;\n+        } else {\n+            status = U_INTERNAL_PROGRAM_ERROR;\n+        }\n+    }\n+\n+    inline const AffixPatternProvider& get() const {\n+      if (!currencyPluralInfoAPP.isBogus()) {\n+        return currencyPluralInfoAPP;\n+      } else {\n+        return propertiesAPP;\n+      }\n+    }\n+\n+  private:\n+    PropertiesAffixPatternProvider propertiesAPP;\n+    CurrencyPluralInfoAffixProvider currencyPluralInfoAPP;\n@@ -117,4 +166,3 @@\n-struct DecimalFormatWarehouse {\n-    PropertiesAffixPatternProvider propertiesAPP;\n-    CurrencyPluralInfoAffixProvider currencyPluralInfoAPP;\n-    CurrencySymbols currencySymbols;\n+struct DecimalFormatWarehouse : public UMemory {\n+    AutoAffixPatternProvider affixProvider;\n+    LocalPointer<PluralRules> rules;\n@@ -129,0 +177,6 @@\n+\n+    DecimalFormatFields() {}\n+\n+    DecimalFormatFields(const DecimalFormatProperties& propsToCopy)\n+        : properties(propsToCopy) {}\n+\n@@ -130,1 +184,1 @@\n-    LocalPointer<DecimalFormatProperties> properties;\n+    DecimalFormatProperties properties;\n@@ -139,1 +193,1 @@\n-    LocalPointer<LocalizedNumberFormatter> formatter;\n+    LocalizedNumberFormatter formatter;\n@@ -151,1 +205,1 @@\n-    LocalPointer<DecimalFormatProperties> exportedProperties;\n+    DecimalFormatProperties exportedProperties;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_mapper.h","additions":67,"deletions":13,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -25,0 +25,50 @@\n+\/**\n+ * A copyable container for the integer values of mixed unit measurements.\n+ *\n+ * If memory allocation fails during copying, no values are copied and status is\n+ * set to U_MEMORY_ALLOCATION_ERROR.\n+ *\/\n+class IntMeasures : public MaybeStackArray<int64_t, 2> {\n+  public:\n+    \/**\n+     * Default constructor initializes with internal T[stackCapacity] buffer.\n+     *\n+     * Stack Capacity: most mixed units are expected to consist of two or three\n+     * subunits, so one or two integer measures should be enough.\n+     *\/\n+    IntMeasures() : MaybeStackArray<int64_t, 2>() {\n+    }\n+\n+    \/**\n+     * Copy constructor.\n+     *\n+     * If memory allocation fails during copying, no values are copied and\n+     * status is set to U_MEMORY_ALLOCATION_ERROR.\n+     *\/\n+    IntMeasures(const IntMeasures &other) : MaybeStackArray<int64_t, 2>() {\n+        this->operator=(other);\n+    }\n+\n+    \/\/ Assignment operator\n+    IntMeasures &operator=(const IntMeasures &rhs) {\n+        if (this == &rhs) {\n+            return *this;\n+        }\n+        copyFrom(rhs, status);\n+        return *this;\n+    }\n+\n+    \/** Move constructor *\/\n+    IntMeasures(IntMeasures &&src) = default;\n+\n+    \/** Move assignment *\/\n+    IntMeasures &operator=(IntMeasures &&src) = default;\n+\n+    UErrorCode status = U_ZERO_ERROR;\n+};\n+\n+\/**\n+ * MicroProps is the first MicroPropsGenerator that should be should be called,\n+ * producing an initialized MicroProps instance that will be passed on and\n+ * modified throughout the rest of the chain of MicroPropsGenerator instances.\n+ *\/\n@@ -39,0 +89,7 @@\n+\n+    \/\/ Pointers to Modifiers provided by the number formatting pipeline (when\n+    \/\/ the value is known):\n+\n+    \/\/ A Modifier provided by LongNameHandler, used for currency long names and\n+    \/\/ units. If there is no LongNameHandler needed, this should be an\n+    \/\/ EmptyModifier. (This is typically the third modifier applied.)\n@@ -40,1 +97,5 @@\n-    const Modifier* modMiddle;\n+    \/\/ A Modifier for short currencies and compact notation. (This is typically\n+    \/\/ the second modifier applied.)\n+    const Modifier* modMiddle = nullptr;\n+    \/\/ A Modifier provided by ScientificHandler, used for scientific notation.\n+    \/\/ This is typically the first modifier applied.\n@@ -46,0 +107,2 @@\n+        \/\/ The ScientificModifier for which ScientificHandler is responsible.\n+        \/\/ ScientificHandler::processQuantity() modifies this Modifier.\n@@ -47,0 +110,1 @@\n+        \/\/ EmptyModifier used for modOuter\n@@ -48,0 +112,1 @@\n+        \/\/ EmptyModifier used for modInner\n@@ -50,0 +115,3 @@\n+        \/\/ A Modifier used for Mixed Units. When formatting mixed units,\n+        \/\/ LongNameHandler assigns this Modifier.\n+        SimpleModifier mixedUnitModifier;\n@@ -52,0 +120,10 @@\n+    \/\/ The MeasureUnit with which the output is represented. May also have\n+    \/\/ UMEASURE_UNIT_MIXED complexity, in which case mixedMeasures comes into\n+    \/\/ play.\n+    MeasureUnit outputUnit;\n+\n+    \/\/ In the case of mixed units, this is the set of integer-only units\n+    \/\/ *preceding* the final unit.\n+    IntMeasures mixedMeasures;\n+    \/\/ Number of mixedMeasures that have been populated\n+    int32_t mixedMeasuresCount = 0;\n@@ -59,1 +137,17 @@\n-    void processQuantity(DecimalQuantity&, MicroProps& micros, UErrorCode& status) const U_OVERRIDE {\n+    \/**\n+     * As MicroProps is the \"base instance\", this implementation of\n+     * MicroPropsGenerator::processQuantity() just ensures that the output\n+     * `micros` is correctly initialized.\n+     *\n+     * For the \"safe\" invocation of this function, micros must not be *this,\n+     * such that a copy of the base instance is made. For the \"unsafe\" path,\n+     * this function can be used only once, because the base MicroProps instance\n+     * will be modified and thus not be available for re-use.\n+     *\n+     * @param quantity The quantity for consideration and optional mutation.\n+     * @param micros The MicroProps instance to populate. If this parameter is\n+     * not already `*this`, it will be overwritten with a copy of `*this`.\n+     *\/\n+    void processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                         UErrorCode &status) const U_OVERRIDE {\n+        (void) quantity;\n@@ -68,0 +162,1 @@\n+            U_ASSERT(!exhausted);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_microprops.h","additions":97,"deletions":2,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-UnicodeSet *UNISET_NOTS = nullptr;\n+UnicodeSet *UNISET_NOTSZ = nullptr;\n@@ -33,2 +33,2 @@\n-    delete UNISET_NOTS;\n-    UNISET_NOTS = nullptr;\n+    delete UNISET_NOTSZ;\n+    UNISET_NOTSZ = nullptr;\n@@ -42,2 +42,2 @@\n-    UNISET_NOTS = new UnicodeSet(UnicodeString(u\"[:^S:]\"), status);\n-    if (UNISET_DIGIT == nullptr || UNISET_NOTS == nullptr) {\n+    UNISET_NOTSZ = new UnicodeSet(UnicodeString(u\"[[:^S:]&[:^Z:]]\"), status);\n+    if (UNISET_DIGIT == nullptr || UNISET_NOTSZ == nullptr) {\n@@ -48,1 +48,1 @@\n-    UNISET_NOTS->freeze();\n+    UNISET_NOTSZ->freeze();\n@@ -60,1 +60,1 @@\n-    const ModifierStore* _obj, int8_t _signum, StandardPlural::Form _plural)\n+    const ModifierStore* _obj, Signum _signum, StandardPlural::Form _plural)\n@@ -72,1 +72,1 @@\n-int32_t ConstantAffixModifier::apply(NumberStringBuilder &output, int leftIndex, int rightIndex,\n+int32_t ConstantAffixModifier::apply(FormattedStringBuilder &output, int leftIndex, int rightIndex,\n@@ -92,1 +92,1 @@\n-bool ConstantAffixModifier::containsField(UNumberFormatFields field) const {\n+bool ConstantAffixModifier::containsField(Field field) const {\n@@ -154,1 +154,1 @@\n-        : fField(UNUM_FIELD_COUNT), fStrong(false), fPrefixLength(0), fSuffixLength(0) {\n+        : fField(kUndefinedField), fStrong(false), fPrefixLength(0), fSuffixLength(0) {\n@@ -157,1 +157,1 @@\n-int32_t SimpleModifier::apply(NumberStringBuilder &output, int leftIndex, int rightIndex,\n+int32_t SimpleModifier::apply(FormattedStringBuilder &output, int leftIndex, int rightIndex,\n@@ -181,1 +181,1 @@\n-bool SimpleModifier::containsField(UNumberFormatFields field) const {\n+bool SimpleModifier::containsField(Field field) const {\n@@ -206,1 +206,1 @@\n-SimpleModifier::formatAsPrefixSuffix(NumberStringBuilder &result, int32_t startIndex, int32_t endIndex,\n+SimpleModifier::formatAsPrefixSuffix(FormattedStringBuilder &result, int32_t startIndex, int32_t endIndex,\n@@ -230,1 +230,1 @@\n-SimpleModifier::formatTwoArgPattern(const SimpleFormatter& compiled, NumberStringBuilder& result,\n+SimpleModifier::formatTwoArgPattern(const SimpleFormatter& compiled, FormattedStringBuilder& result,\n@@ -287,1 +287,1 @@\n-int32_t ConstantMultiFieldModifier::apply(NumberStringBuilder &output, int leftIndex, int rightIndex,\n+int32_t ConstantMultiFieldModifier::apply(FormattedStringBuilder &output, int leftIndex, int rightIndex,\n@@ -295,1 +295,1 @@\n-            UNUM_FIELD_COUNT, status);\n+            kUndefinedField, status);\n@@ -313,1 +313,1 @@\n-bool ConstantMultiFieldModifier::containsField(UNumberFormatFields field) const {\n+bool ConstantMultiFieldModifier::containsField(Field field) const {\n@@ -336,2 +336,2 @@\n-CurrencySpacingEnabledModifier::CurrencySpacingEnabledModifier(const NumberStringBuilder &prefix,\n-                                                               const NumberStringBuilder &suffix,\n+CurrencySpacingEnabledModifier::CurrencySpacingEnabledModifier(const FormattedStringBuilder &prefix,\n+                                                               const FormattedStringBuilder &suffix,\n@@ -345,1 +345,1 @@\n-    if (prefix.length() > 0 && prefix.fieldAt(prefix.length() - 1) == UNUM_CURRENCY_FIELD) {\n+    if (prefix.length() > 0 && prefix.fieldAt(prefix.length() - 1) == Field(UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD)) {\n@@ -360,2 +360,2 @@\n-    if (suffix.length() > 0 && suffix.fieldAt(0) == UNUM_CURRENCY_FIELD) {\n-        int suffixCp = suffix.getLastCodePoint();\n+    if (suffix.length() > 0 && suffix.fieldAt(0) == Field(UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD)) {\n+        int suffixCp = suffix.getFirstCodePoint();\n@@ -377,1 +377,1 @@\n-int32_t CurrencySpacingEnabledModifier::apply(NumberStringBuilder &output, int leftIndex, int rightIndex,\n+int32_t CurrencySpacingEnabledModifier::apply(FormattedStringBuilder &output, int leftIndex, int rightIndex,\n@@ -384,1 +384,5 @@\n-        length += output.insert(leftIndex, fAfterPrefixInsert, UNUM_FIELD_COUNT, status);\n+        length += output.insert(\n+            leftIndex,\n+            fAfterPrefixInsert,\n+            kUndefinedField,\n+            status);\n@@ -389,1 +393,5 @@\n-        length += output.insert(rightIndex + length, fBeforeSuffixInsert, UNUM_FIELD_COUNT, status);\n+        length += output.insert(\n+            rightIndex + length,\n+            fBeforeSuffixInsert,\n+            kUndefinedField,\n+            status);\n@@ -398,1 +406,1 @@\n-CurrencySpacingEnabledModifier::applyCurrencySpacing(NumberStringBuilder &output, int32_t prefixStart,\n+CurrencySpacingEnabledModifier::applyCurrencySpacing(FormattedStringBuilder &output, int32_t prefixStart,\n@@ -417,1 +425,1 @@\n-CurrencySpacingEnabledModifier::applyCurrencySpacingAffix(NumberStringBuilder &output, int32_t index,\n+CurrencySpacingEnabledModifier::applyCurrencySpacingAffix(FormattedStringBuilder &output, int32_t index,\n@@ -425,1 +433,1 @@\n-    if (affixField != UNUM_CURRENCY_FIELD) {\n+    if (affixField != Field(UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD)) {\n@@ -446,1 +454,1 @@\n-    return output.insert(index, spacingString, UNUM_FIELD_COUNT, status);\n+    return output.insert(index, spacingString, kUndefinedField, status);\n@@ -464,2 +472,2 @@\n-    } else if (pattern.compare(u\"[:^S:]\", -1) == 0) {\n-        return *UNISET_NOTS;\n+    } else if (pattern.compare(u\"[[:^S:]&[:^Z:]]\", -1) == 0) {\n+        return *UNISET_NOTSZ;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_modifiers.cpp","additions":39,"deletions":31,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -31,1 +31,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -40,1 +40,1 @@\n-    bool containsField(UNumberFormatFields field) const U_OVERRIDE;\n+    bool containsField(Field field) const U_OVERRIDE;\n@@ -67,1 +67,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -76,1 +76,1 @@\n-    bool containsField(UNumberFormatFields field) const U_OVERRIDE;\n+    bool containsField(Field field) const U_OVERRIDE;\n@@ -84,1 +84,1 @@\n-     * NumberStringBuilder is an internal class and SimpleFormatterImpl feels like it should not depend on it.\n+     * FormattedStringBuilder is an internal class and SimpleFormatterImpl feels like it should not depend on it.\n@@ -103,1 +103,1 @@\n-    formatAsPrefixSuffix(NumberStringBuilder& result, int32_t startIndex, int32_t endIndex,\n+    formatAsPrefixSuffix(FormattedStringBuilder& result, int32_t startIndex, int32_t endIndex,\n@@ -108,1 +108,1 @@\n-     * I put it here so that the SimpleFormatter uses in NumberStringBuilder are near each other.\n+     * I put it here so that the SimpleFormatter uses in FormattedStringBuilder are near each other.\n@@ -111,1 +111,1 @@\n-     * Applies the compiled two-argument pattern to the NumberStringBuilder.\n+     * Applies the compiled two-argument pattern to the FormattedStringBuilder.\n@@ -118,1 +118,1 @@\n-    formatTwoArgPattern(const SimpleFormatter& compiled, NumberStringBuilder& result,\n+    formatTwoArgPattern(const SimpleFormatter& compiled, FormattedStringBuilder& result,\n@@ -134,1 +134,1 @@\n- * based on the contents of two {@link NumberStringBuilder} instances (one for the prefix, one for the suffix).\n+ * based on the contents of two {@link FormattedStringBuilder} instances (one for the prefix, one for the suffix).\n@@ -139,2 +139,2 @@\n-            const NumberStringBuilder &prefix,\n-            const NumberStringBuilder &suffix,\n+            const FormattedStringBuilder &prefix,\n+            const FormattedStringBuilder &suffix,\n@@ -151,2 +151,2 @@\n-            const NumberStringBuilder &prefix,\n-            const NumberStringBuilder &suffix,\n+            const FormattedStringBuilder &prefix,\n+            const FormattedStringBuilder &suffix,\n@@ -160,1 +160,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -169,1 +169,1 @@\n-    bool containsField(UNumberFormatFields field) const U_OVERRIDE;\n+    bool containsField(Field field) const U_OVERRIDE;\n@@ -176,1 +176,1 @@\n-    \/\/ NOTE: In Java, these are stored as array pointers. In C++, the NumberStringBuilder is stored by\n+    \/\/ NOTE: In Java, these are stored as array pointers. In C++, the FormattedStringBuilder is stored by\n@@ -178,2 +178,2 @@\n-    NumberStringBuilder fPrefix;\n-    NumberStringBuilder fSuffix;\n+    FormattedStringBuilder fPrefix;\n+    FormattedStringBuilder fSuffix;\n@@ -190,2 +190,2 @@\n-            const NumberStringBuilder &prefix,\n-            const NumberStringBuilder &suffix,\n+            const FormattedStringBuilder &prefix,\n+            const FormattedStringBuilder &suffix,\n@@ -197,1 +197,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -202,1 +202,1 @@\n-    applyCurrencySpacing(NumberStringBuilder &output, int32_t prefixStart, int32_t prefixLen,\n+    applyCurrencySpacing(FormattedStringBuilder &output, int32_t prefixStart, int32_t prefixLen,\n@@ -221,1 +221,1 @@\n-    static int32_t applyCurrencySpacingAffix(NumberStringBuilder &output, int32_t index, EAffix affix,\n+    static int32_t applyCurrencySpacingAffix(FormattedStringBuilder &output, int32_t index, EAffix affix,\n@@ -237,1 +237,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -258,1 +258,1 @@\n-    bool containsField(UNumberFormatFields field) const U_OVERRIDE {\n+    bool containsField(Field field) const U_OVERRIDE {\n@@ -292,1 +292,1 @@\n-    void adoptModifier(int8_t signum, StandardPlural::Form plural, const Modifier *mod) {\n+    void adoptModifier(Signum signum, StandardPlural::Form plural, const Modifier *mod) {\n@@ -301,1 +301,1 @@\n-    void adoptModifierWithoutPlural(int8_t signum, const Modifier *mod) {\n+    void adoptModifierWithoutPlural(Signum signum, const Modifier *mod) {\n@@ -307,1 +307,1 @@\n-    const Modifier *getModifier(int8_t signum, StandardPlural::Form plural) const U_OVERRIDE {\n+    const Modifier *getModifier(Signum signum, StandardPlural::Form plural) const U_OVERRIDE {\n@@ -316,1 +316,1 @@\n-    const Modifier *getModifierWithoutPlural(int8_t signum) const {\n+    const Modifier *getModifierWithoutPlural(Signum signum) const {\n@@ -322,1 +322,1 @@\n-    const Modifier *mods[3 * StandardPlural::COUNT] = {};\n+    const Modifier *mods[4 * StandardPlural::COUNT] = {};\n@@ -324,2 +324,2 @@\n-    inline static int32_t getModIndex(int8_t signum, StandardPlural::Form plural) {\n-        U_ASSERT(signum >= -1 && signum <= 1);\n+    inline static int32_t getModIndex(Signum signum, StandardPlural::Form plural) {\n+        U_ASSERT(signum >= 0 && signum < SIGNUM_COUNT);\n@@ -327,1 +327,1 @@\n-        return static_cast<int32_t>(plural) * 3 + (signum + 1);\n+        return static_cast<int32_t>(plural) * SIGNUM_COUNT + signum;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_modifiers.h","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+#include \"unicode\/measunit.h\"\n@@ -12,0 +13,2 @@\n+#include \"number_decnum.h\"\n+#include \"numrange_impl.h\"\n@@ -21,9 +24,5 @@\n-UBool FormattedNumber::nextFieldPosition(FieldPosition& fieldPosition, UErrorCode& status) const {\n-    UPRV_FORMATTED_VALUE_METHOD_GUARD(FALSE)\n-    \/\/ NOTE: MSVC sometimes complains when implicitly converting between bool and UBool\n-    return fData->getStringRef().nextFieldPosition(fieldPosition, status) ? TRUE : FALSE;\n-}\n-\n-void FormattedNumber::getAllFieldPositions(FieldPositionIterator& iterator, UErrorCode& status) const {\n-    FieldPositionIteratorHandler fpih(&iterator, status);\n-    getAllFieldPositionsImpl(fpih, status);\n+void FormattedNumber::toDecimalNumber(ByteSink& sink, UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(UPRV_NOARG)\n+    impl::DecNum decnum;\n+    fData->quantity.toDecNum(decnum, status);\n+    decnum.toString(sink, status);\n@@ -35,1 +34,6 @@\n-    fData->getStringRef().getAllFieldPositions(fpih, status);\n+    fData->getAllFieldPositions(fpih, status);\n+}\n+\n+MeasureUnit FormattedNumber::getOutputUnit(UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(MeasureUnit())\n+    return fData->outputUnit;\n@@ -47,0 +51,36 @@\n+UPRV_FORMATTED_VALUE_SUBCLASS_AUTO_IMPL(FormattedNumberRange)\n+\n+#define UPRV_NOARG\n+\n+UnicodeString FormattedNumberRange::getFirstDecimal(UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(ICU_Utility::makeBogusString())\n+    return fData->quantity1.toScientificString();\n+}\n+\n+UnicodeString FormattedNumberRange::getSecondDecimal(UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(ICU_Utility::makeBogusString())\n+    return fData->quantity2.toScientificString();\n+}\n+\n+void FormattedNumberRange::getDecimalNumbers(ByteSink& sink1, ByteSink& sink2, UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(UPRV_NOARG)\n+    impl::DecNum decnum1;\n+    impl::DecNum decnum2;\n+    fData->quantity1.toDecNum(decnum1, status).toString(sink1, status);\n+    fData->quantity2.toDecNum(decnum2, status).toString(sink2, status);\n+}\n+\n+UNumberRangeIdentityResult FormattedNumberRange::getIdentityResult(UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(UNUM_IDENTITY_RESULT_NOT_EQUAL)\n+    return fData->identityResult;\n+}\n+\n+const impl::UFormattedNumberRangeData* FormattedNumberRange::getData(UErrorCode& status) const {\n+    UPRV_FORMATTED_VALUE_METHOD_GUARD(nullptr)\n+    return fData;\n+}\n+\n+\n+impl::UFormattedNumberRangeData::~UFormattedNumberRangeData() = default;\n+\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_output.cpp","additions":50,"deletions":10,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -20,1 +20,1 @@\n-addPaddingHelper(UChar32 paddingCp, int32_t requiredPadding, NumberStringBuilder &string, int32_t index,\n+addPaddingHelper(UChar32 paddingCp, int32_t requiredPadding, FormattedStringBuilder &string, int32_t index,\n@@ -24,1 +24,1 @@\n-        string.insertCodePoint(index, paddingCp, UNUM_FIELD_COUNT, status);\n+        string.insertCodePoint(index, paddingCp, kUndefinedField, status);\n@@ -63,1 +63,1 @@\n-                            NumberStringBuilder &string, int32_t leftIndex, int32_t rightIndex,\n+                            FormattedStringBuilder &string, int32_t leftIndex, int32_t rightIndex,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_padding.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,2 +37,4 @@\n-                                        const CurrencySymbols* currencySymbols,\n-                                        const UNumberUnitWidth unitWidth, const PluralRules* rules) {\n+                                        const CurrencyUnit& currency,\n+                                        const UNumberUnitWidth unitWidth,\n+                                        const PluralRules* rules,\n+                                        UErrorCode& status) {\n@@ -41,1 +43,1 @@\n-    fCurrencySymbols = currencySymbols;\n+    fCurrencySymbols = {currency, symbols->getLocale(), *symbols, status};\n@@ -46,1 +48,1 @@\n-void MutablePatternModifier::setNumberProperties(int8_t signum, StandardPlural::Form plural) {\n+void MutablePatternModifier::setNumberProperties(Signum signum, StandardPlural::Form plural) {\n@@ -58,6 +60,0 @@\n-    return createImmutableAndChain(nullptr, status);\n-}\n-\n-ImmutablePatternModifier*\n-MutablePatternModifier::createImmutableAndChain(const MicroPropsGenerator* parent, UErrorCode& status) {\n-\n@@ -82,6 +78,8 @@\n-            setNumberProperties(1, plural);\n-            pm->adoptModifier(1, plural, createConstantModifier(status));\n-            setNumberProperties(0, plural);\n-            pm->adoptModifier(0, plural, createConstantModifier(status));\n-            setNumberProperties(-1, plural);\n-            pm->adoptModifier(-1, plural, createConstantModifier(status));\n+            setNumberProperties(SIGNUM_POS, plural);\n+            pm->adoptModifier(SIGNUM_POS, plural, createConstantModifier(status));\n+            setNumberProperties(SIGNUM_NEG_ZERO, plural);\n+            pm->adoptModifier(SIGNUM_NEG_ZERO, plural, createConstantModifier(status));\n+            setNumberProperties(SIGNUM_POS_ZERO, plural);\n+            pm->adoptModifier(SIGNUM_POS_ZERO, plural, createConstantModifier(status));\n+            setNumberProperties(SIGNUM_NEG, plural);\n+            pm->adoptModifier(SIGNUM_NEG, plural, createConstantModifier(status));\n@@ -93,1 +91,1 @@\n-        return new ImmutablePatternModifier(pm, fRules, parent);  \/\/ adopts pm\n+        return new ImmutablePatternModifier(pm, fRules);  \/\/ adopts pm\n@@ -96,6 +94,8 @@\n-        setNumberProperties(1, StandardPlural::Form::COUNT);\n-        pm->adoptModifierWithoutPlural(1, createConstantModifier(status));\n-        setNumberProperties(0, StandardPlural::Form::COUNT);\n-        pm->adoptModifierWithoutPlural(0, createConstantModifier(status));\n-        setNumberProperties(-1, StandardPlural::Form::COUNT);\n-        pm->adoptModifierWithoutPlural(-1, createConstantModifier(status));\n+        setNumberProperties(SIGNUM_POS, StandardPlural::Form::COUNT);\n+        pm->adoptModifierWithoutPlural(SIGNUM_POS, createConstantModifier(status));\n+        setNumberProperties(SIGNUM_NEG_ZERO, StandardPlural::Form::COUNT);\n+        pm->adoptModifierWithoutPlural(SIGNUM_NEG_ZERO, createConstantModifier(status));\n+        setNumberProperties(SIGNUM_POS_ZERO, StandardPlural::Form::COUNT);\n+        pm->adoptModifierWithoutPlural(SIGNUM_POS_ZERO, createConstantModifier(status));\n+        setNumberProperties(SIGNUM_NEG, StandardPlural::Form::COUNT);\n+        pm->adoptModifierWithoutPlural(SIGNUM_NEG, createConstantModifier(status));\n@@ -106,1 +106,1 @@\n-        return new ImmutablePatternModifier(pm, nullptr, parent);  \/\/ adopts pm\n+        return new ImmutablePatternModifier(pm, nullptr);  \/\/ adopts pm\n@@ -111,2 +111,2 @@\n-    NumberStringBuilder a;\n-    NumberStringBuilder b;\n+    FormattedStringBuilder a;\n+    FormattedStringBuilder b;\n@@ -123,3 +123,2 @@\n-ImmutablePatternModifier::ImmutablePatternModifier(AdoptingModifierStore* pm, const PluralRules* rules,\n-                                                   const MicroPropsGenerator* parent)\n-        : pm(pm), rules(rules), parent(parent) {}\n+ImmutablePatternModifier::ImmutablePatternModifier(AdoptingModifierStore* pm, const PluralRules* rules)\n+        : pm(pm), rules(rules), parent(nullptr) {}\n@@ -130,0 +129,4 @@\n+    micros.rounder.apply(quantity, status);\n+    if (micros.modMiddle != nullptr) {\n+        return;\n+    }\n@@ -143,1 +146,1 @@\n-const Modifier* ImmutablePatternModifier::getModifier(int8_t signum, StandardPlural::Form plural) const {\n+const Modifier* ImmutablePatternModifier::getModifier(Signum signum, StandardPlural::Form plural) const {\n@@ -151,0 +154,4 @@\n+void ImmutablePatternModifier::addToChain(const MicroPropsGenerator* parent) {\n+    this->parent = parent;\n+}\n+\n@@ -161,0 +168,4 @@\n+    micros.rounder.apply(fq, status);\n+    if (micros.modMiddle != nullptr) {\n+        return;\n+    }\n@@ -173,1 +184,1 @@\n-int32_t MutablePatternModifier::apply(NumberStringBuilder& output, int32_t leftIndex, int32_t rightIndex,\n+int32_t MutablePatternModifier::apply(FormattedStringBuilder& output, int32_t leftIndex, int32_t rightIndex,\n@@ -189,1 +200,1 @@\n-                UNUM_FIELD_COUNT,\n+                kUndefinedField,\n@@ -233,1 +244,1 @@\n-bool MutablePatternModifier::containsField(UNumberFormatFields field) const {\n+bool MutablePatternModifier::containsField(Field field) const {\n@@ -251,1 +262,1 @@\n-int32_t MutablePatternModifier::insertPrefix(NumberStringBuilder& sb, int position, UErrorCode& status) {\n+int32_t MutablePatternModifier::insertPrefix(FormattedStringBuilder& sb, int position, UErrorCode& status) {\n@@ -257,1 +268,1 @@\n-int32_t MutablePatternModifier::insertSuffix(NumberStringBuilder& sb, int position, UErrorCode& status) {\n+int32_t MutablePatternModifier::insertSuffix(FormattedStringBuilder& sb, int position, UErrorCode& status) {\n@@ -266,1 +277,6 @@\n-            *fPatternInfo, isPrefix, fSignum, fSignDisplay, fPlural, fPerMilleReplacesPercent, currentAffix);\n+            *fPatternInfo,\n+            isPrefix,\n+            PatternStringUtils::resolveSignDisplay(fSignDisplay, fSignum),\n+            fPlural,\n+            fPerMilleReplacesPercent,\n+            currentAffix);\n@@ -281,4 +297,12 @@\n-            \/\/ UnitWidth ISO and HIDDEN overrides the singular currency symbol.\n-            if (fUnitWidth == UNumberUnitWidth::UNUM_UNIT_WIDTH_ISO_CODE) {\n-                return fCurrencySymbols->getIntlCurrencySymbol(localStatus);\n-            } else if (fUnitWidth == UNumberUnitWidth::UNUM_UNIT_WIDTH_HIDDEN) {\n+            switch (fUnitWidth) {\n+            case UNumberUnitWidth::UNUM_UNIT_WIDTH_NARROW:\n+                return fCurrencySymbols.getNarrowCurrencySymbol(localStatus);\n+            case UNumberUnitWidth::UNUM_UNIT_WIDTH_SHORT:\n+                return fCurrencySymbols.getCurrencySymbol(localStatus);\n+            case UNumberUnitWidth::UNUM_UNIT_WIDTH_ISO_CODE:\n+                return fCurrencySymbols.getIntlCurrencySymbol(localStatus);\n+            case UNumberUnitWidth::UNUM_UNIT_WIDTH_FORMAL:\n+                return fCurrencySymbols.getFormalCurrencySymbol(localStatus);\n+            case UNumberUnitWidth::UNUM_UNIT_WIDTH_VARIANT:\n+                return fCurrencySymbols.getVariantCurrencySymbol(localStatus);\n+            case UNumberUnitWidth::UNUM_UNIT_WIDTH_HIDDEN:\n@@ -286,4 +310,2 @@\n-            } else if (fUnitWidth == UNumberUnitWidth::UNUM_UNIT_WIDTH_NARROW) {\n-                return fCurrencySymbols->getNarrowCurrencySymbol(localStatus);\n-            } else {\n-                return fCurrencySymbols->getCurrencySymbol(localStatus);\n+            default:\n+                return fCurrencySymbols.getCurrencySymbol(localStatus);\n@@ -293,1 +315,1 @@\n-            return fCurrencySymbols->getIntlCurrencySymbol(localStatus);\n+            return fCurrencySymbols.getIntlCurrencySymbol(localStatus);\n@@ -299,1 +321,1 @@\n-            return fCurrencySymbols->getPluralName(fPlural, localStatus);\n+            return fCurrencySymbols.getPluralName(fPlural, localStatus);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_patternmodifier.cpp","additions":68,"deletions":46,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -51,1 +51,4 @@\n-    const Modifier* getModifier(int8_t signum, StandardPlural::Form plural) const;\n+    const Modifier* getModifier(Signum signum, StandardPlural::Form plural) const;\n+\n+    \/\/ Non-const method:\n+    void addToChain(const MicroPropsGenerator* parent);\n@@ -54,2 +57,1 @@\n-    ImmutablePatternModifier(AdoptingModifierStore* pm, const PluralRules* rules,\n-                             const MicroPropsGenerator* parent);\n+    ImmutablePatternModifier(AdoptingModifierStore* pm, const PluralRules* rules);\n@@ -125,2 +127,2 @@\n-     * @param currencySymbols\n-     *            The currency symbols to be used when substituting currency values into the affixes.\n+     * @param currency\n+     *            The currency to be used when substituting currency values into the affixes.\n@@ -132,0 +134,2 @@\n+     * @param status\n+     *            Set if an error occurs while loading currency data.\n@@ -133,2 +137,2 @@\n-    void setSymbols(const DecimalFormatSymbols* symbols, const CurrencySymbols* currencySymbols,\n-                    UNumberUnitWidth unitWidth, const PluralRules* rules);\n+    void setSymbols(const DecimalFormatSymbols* symbols, const CurrencyUnit& currency,\n+                    UNumberUnitWidth unitWidth, const PluralRules* rules, UErrorCode& status);\n@@ -145,1 +149,1 @@\n-    void setNumberProperties(int8_t signum, StandardPlural::Form plural);\n+    void setNumberProperties(Signum signum, StandardPlural::Form plural);\n@@ -168,15 +172,0 @@\n-    \/**\n-     * Creates a new quantity-dependent Modifier that behaves the same as the current instance, but which is immutable\n-     * and can be saved for future use. The number properties in the current instance are mutated; all other properties\n-     * are left untouched.\n-     *\n-     * <p>\n-     * CREATES A NEW HEAP OBJECT; THE CALLER GETS OWNERSHIP.\n-     *\n-     * @param parent\n-     *            The QuantityChain to which to chain this immutable.\n-     * @return An immutable that supports both positive and negative numbers.\n-     *\/\n-    ImmutablePatternModifier *\n-    createImmutableAndChain(const MicroPropsGenerator *parent, UErrorCode &status);\n-\n@@ -187,1 +176,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -196,1 +185,1 @@\n-    bool containsField(UNumberFormatFields field) const U_OVERRIDE;\n+    bool containsField(Field field) const U_OVERRIDE;\n@@ -222,1 +211,1 @@\n-    const CurrencySymbols *fCurrencySymbols;\n+    CurrencySymbols fCurrencySymbols;\n@@ -226,1 +215,1 @@\n-    int8_t fSignum;\n+    Signum fSignum;\n@@ -243,1 +232,1 @@\n-     *            A working NumberStringBuilder object; passed from the outside to prevent the need to create many new\n+     *            A working FormattedStringBuilder object; passed from the outside to prevent the need to create many new\n@@ -246,1 +235,1 @@\n-     *            Another working NumberStringBuilder object.\n+     *            Another working FormattedStringBuilder object.\n@@ -251,1 +240,1 @@\n-    int32_t insertPrefix(NumberStringBuilder &sb, int position, UErrorCode &status);\n+    int32_t insertPrefix(FormattedStringBuilder &sb, int position, UErrorCode &status);\n@@ -253,1 +242,1 @@\n-    int32_t insertSuffix(NumberStringBuilder &sb, int position, UErrorCode &status);\n+    int32_t insertSuffix(FormattedStringBuilder &sb, int position, UErrorCode &status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_patternmodifier.h","additions":20,"deletions":31,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-                if (!result.rounding.isZero() || state.peek() != u'0') {\n+                if (!result.rounding.isZeroish() || state.peek() != u'0') {\n@@ -535,1 +535,1 @@\n-    } else if (!positive.rounding.isZero()) {\n+    } else if (!positive.rounding.isZeroish()) {\n@@ -689,1 +689,1 @@\n-    PropertiesAffixPatternProvider affixes(properties, status);\n+    AutoAffixPatternProvider affixProvider(properties, status);\n@@ -692,1 +692,1 @@\n-    sb.append(affixes.getString(AffixPatternProvider::AFFIX_POS_PREFIX));\n+    sb.append(affixProvider.get().getString(AffixPatternProvider::AFFIX_POS_PREFIX));\n@@ -781,1 +781,1 @@\n-    sb.append(affixes.getString(AffixPatternProvider::AFFIX_POS_SUFFIX));\n+    sb.append(affixProvider.get().getString(AffixPatternProvider::AFFIX_POS_SUFFIX));\n@@ -817,1 +817,1 @@\n-    if (affixes.hasNegativeSubpattern()) {\n+    if (affixProvider.get().hasNegativeSubpattern()) {\n@@ -819,1 +819,1 @@\n-        sb.append(affixes.getString(AffixPatternProvider::AFFIX_NEG_PREFIX));\n+        sb.append(affixProvider.get().getString(AffixPatternProvider::AFFIX_NEG_PREFIX));\n@@ -826,1 +826,1 @@\n-        sb.append(affixes.getString(AffixPatternProvider::AFFIX_NEG_SUFFIX));\n+        sb.append(affixProvider.get().getString(AffixPatternProvider::AFFIX_NEG_SUFFIX));\n@@ -1003,1 +1003,1 @@\n-                                                    int8_t signum, UNumberSignDisplay signDisplay,\n+                                                    PatternSignType patternSignType,\n@@ -1008,11 +1008,8 @@\n-    bool plusReplacesMinusSign = signum != -1 && (\n-            signDisplay == UNUM_SIGN_ALWAYS || signDisplay == UNUM_SIGN_ACCOUNTING_ALWAYS || (\n-                    signum == 1 && (\n-                            signDisplay == UNUM_SIGN_EXCEPT_ZERO ||\n-                            signDisplay == UNUM_SIGN_ACCOUNTING_EXCEPT_ZERO))) &&\n-                                 patternInfo.positiveHasPlusSign() == false;\n-\n-    \/\/ Should we use the affix from the negative subpattern? (If not, we will use the positive\n-    \/\/ subpattern.)\n-    bool useNegativeAffixPattern = patternInfo.hasNegativeSubpattern() && (\n-            signum == -1 || (patternInfo.negativeHasMinusSign() && plusReplacesMinusSign));\n+    bool plusReplacesMinusSign = (patternSignType == PATTERN_SIGN_TYPE_POS_SIGN)\n+        && !patternInfo.positiveHasPlusSign();\n+\n+    \/\/ Should we use the affix from the negative subpattern?\n+    \/\/ (If not, we will use the positive subpattern.)\n+    bool useNegativeAffixPattern = patternInfo.hasNegativeSubpattern()\n+        && (patternSignType == PATTERN_SIGN_TYPE_NEG\n+            || (patternInfo.negativeHasMinusSign() && plusReplacesMinusSign));\n@@ -1037,2 +1034,2 @@\n-    } else if (signum == -1) {\n-        prependSign = signDisplay != UNUM_SIGN_NEVER;\n+    } else if (patternSignType == PATTERN_SIGN_TYPE_NEG) {\n+        prependSign = true;\n@@ -1067,0 +1064,56 @@\n+PatternSignType PatternStringUtils::resolveSignDisplay(UNumberSignDisplay signDisplay, Signum signum) {\n+    switch (signDisplay) {\n+        case UNUM_SIGN_AUTO:\n+        case UNUM_SIGN_ACCOUNTING:\n+            switch (signum) {\n+                case SIGNUM_NEG:\n+                case SIGNUM_NEG_ZERO:\n+                    return PATTERN_SIGN_TYPE_NEG;\n+                case SIGNUM_POS_ZERO:\n+                case SIGNUM_POS:\n+                    return PATTERN_SIGN_TYPE_POS;\n+                default:\n+                    break;\n+            }\n+            break;\n+\n+        case UNUM_SIGN_ALWAYS:\n+        case UNUM_SIGN_ACCOUNTING_ALWAYS:\n+            switch (signum) {\n+                case SIGNUM_NEG:\n+                case SIGNUM_NEG_ZERO:\n+                    return PATTERN_SIGN_TYPE_NEG;\n+                case SIGNUM_POS_ZERO:\n+                case SIGNUM_POS:\n+                    return PATTERN_SIGN_TYPE_POS_SIGN;\n+                default:\n+                    break;\n+            }\n+            break;\n+\n+        case UNUM_SIGN_EXCEPT_ZERO:\n+        case UNUM_SIGN_ACCOUNTING_EXCEPT_ZERO:\n+            switch (signum) {\n+                case SIGNUM_NEG:\n+                    return PATTERN_SIGN_TYPE_NEG;\n+                case SIGNUM_NEG_ZERO:\n+                case SIGNUM_POS_ZERO:\n+                    return PATTERN_SIGN_TYPE_POS;\n+                case SIGNUM_POS:\n+                    return PATTERN_SIGN_TYPE_POS_SIGN;\n+                default:\n+                    break;\n+            }\n+            break;\n+\n+        case UNUM_SIGN_NEVER:\n+            return PATTERN_SIGN_TYPE_POS;\n+\n+        default:\n+            break;\n+    }\n+\n+    UPRV_UNREACHABLE;\n+    return PATTERN_SIGN_TYPE_POS;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_patternstring.cpp","additions":75,"deletions":22,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -25,0 +25,12 @@\n+\/\/ Note: the order of fields in this enum matters for parsing.\n+enum PatternSignType {\n+    \/** Render using normal positive subpattern rules *\/\n+    PATTERN_SIGN_TYPE_POS,\n+    \/** Render using rules to force the display of a plus sign *\/\n+    PATTERN_SIGN_TYPE_POS_SIGN,\n+    \/** Render using negative subpattern rules *\/\n+    PATTERN_SIGN_TYPE_NEG,\n+    \/** Count for looping over the possibilities *\/\n+    PATTERN_SIGN_TYPE_COUNT\n+};\n+\n@@ -298,1 +310,1 @@\n-                                           int8_t signum, UNumberSignDisplay signDisplay,\n+                                           PatternSignType patternSignType,\n@@ -302,0 +314,2 @@\n+    static PatternSignType resolveSignDisplay(UNumberSignDisplay signDisplay, Signum signum);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_patternstring.h","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+#include \"charstr.h\"\n@@ -14,0 +15,1 @@\n+#include \"number_skeletons.h\"\n@@ -15,0 +17,1 @@\n+#include \"string_segment.h\"\n@@ -22,0 +25,33 @@\n+using icu::StringSegment;\n+\n+void number::impl::parseIncrementOption(const StringSegment &segment,\n+                                        Precision &outPrecision,\n+                                        UErrorCode &status) {\n+    \/\/ Need to do char <-> UChar conversion...\n+    U_ASSERT(U_SUCCESS(status));\n+    CharString buffer;\n+    SKELETON_UCHAR_TO_CHAR(buffer, segment.toTempUnicodeString(), 0, segment.length(), status);\n+\n+    \/\/ Utilize DecimalQuantity\/decNumber to parse this for us.\n+    DecimalQuantity dq;\n+    UErrorCode localStatus = U_ZERO_ERROR;\n+    dq.setToDecNumber({buffer.data(), buffer.length()}, localStatus);\n+    if (U_FAILURE(localStatus)) {\n+        \/\/ throw new SkeletonSyntaxException(\"Invalid rounding increment\", segment, e);\n+        status = U_NUMBER_SKELETON_SYNTAX_ERROR;\n+        return;\n+    }\n+    double increment = dq.toDouble();\n+\n+    \/\/ We also need to figure out how many digits. Do a brute force string operation.\n+    int decimalOffset = 0;\n+    while (decimalOffset < segment.length() && segment.charAt(decimalOffset) != '.') {\n+        decimalOffset++;\n+    }\n+    if (decimalOffset == segment.length()) {\n+        outPrecision = Precision::increment(increment);\n+    } else {\n+        int32_t fractionLength = segment.length() - decimalOffset - 1;\n+        outPrecision = Precision::increment(increment).withMinFraction(fractionLength);\n+    }\n+}\n@@ -36,1 +72,1 @@\n-    int magnitude = value.isZero() ? 0 : value.getMagnitude();\n+    int magnitude = value.isZeroish() ? 0 : value.getMagnitude();\n@@ -48,1 +84,1 @@\n-    int magnitude = value.isZero() ? 0 : value.getMagnitude();\n+    int magnitude = value.isZeroish() ? 0 : value.getMagnitude();\n@@ -87,1 +123,1 @@\n-    return Precision(RND_NONE, {}, kDefaultMode);\n+    return Precision(RND_NONE, {});\n@@ -232,1 +268,1 @@\n-    return {RND_FRACTION, union_, kDefaultMode};\n+    return {RND_FRACTION, union_};\n@@ -243,1 +279,1 @@\n-    return {RND_SIGNIFICANT, union_, kDefaultMode};\n+    return {RND_SIGNIFICANT, union_};\n@@ -253,1 +289,1 @@\n-    return {RND_FRACTION_SIGNIFICANT, union_, kDefaultMode};\n+    return {RND_FRACTION_SIGNIFICANT, union_};\n@@ -273,1 +309,1 @@\n-        return {RND_INCREMENT_ONE, union_, kDefaultMode};\n+        return {RND_INCREMENT_ONE, union_};\n@@ -275,1 +311,1 @@\n-        return {RND_INCREMENT_FIVE, union_, kDefaultMode};\n+        return {RND_INCREMENT_FIVE, union_};\n@@ -277,1 +313,1 @@\n-        return {RND_INCREMENT, union_, kDefaultMode};\n+        return {RND_INCREMENT, union_};\n@@ -284,1 +320,1 @@\n-    return {RND_CURRENCY, union_, kDefaultMode};\n+    return {RND_CURRENCY, union_};\n@@ -297,3 +333,1 @@\n-    RoundingImpl retval;\n-    retval.fPassThrough = true;\n-    return retval;\n+    return {};\n@@ -309,2 +343,2 @@\n-    \/\/ Do not call this method with zero.\n-    U_ASSERT(!input.isZero());\n+    \/\/ Do not call this method with zero, NaN, or infinity.\n+    U_ASSERT(!input.isZeroish());\n@@ -319,1 +353,1 @@\n-    if (input.isZero() || U_FAILURE(status)) {\n+    if (input.isZeroish() || U_FAILURE(status)) {\n@@ -346,0 +380,3 @@\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n@@ -377,1 +414,1 @@\n-            if (value.isZero() && fPrecision.fUnion.fracSig.fMinSig > 0) {\n+            if (value.isZeroish() && fPrecision.fUnion.fracSig.fMinSig > 0) {\n@@ -439,1 +476,1 @@\n-    U_ASSERT(value.isZero());\n+    U_ASSERT(value.isZeroish());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_rounding.cpp","additions":55,"deletions":18,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+#include \"string_segment.h\"\n@@ -47,0 +48,3 @@\n+    if (U_FAILURE(status)) {\n+        return false;\n+    }\n@@ -153,1 +157,1 @@\n-    RoundingImpl() = default;  \/\/ default constructor: leaves object in undefined state\n+    RoundingImpl() = default;  \/\/ defaults to pass-through rounder\n@@ -189,1 +193,7 @@\n-    bool fPassThrough;\n+    bool fPassThrough = true;  \/\/ default value\n+\n+    \/\/ Permits access to fPrecision.\n+    friend class units::UnitsRouter;\n+\n+    \/\/ Permits access to fPrecision.\n+    friend class UnitConversionHandler;\n@@ -192,0 +202,8 @@\n+\/**\n+ * Parses Precision-related skeleton strings without knowledge of MacroProps\n+ * - see blueprint_helpers::parseIncrementOption().\n+ *\n+ * Referencing MacroProps means needing to pull in the .o files that have the\n+ * destructors for the SymbolsWrapper, Usage, and Scale classes.\n+ *\/\n+void parseIncrementOption(const StringSegment &segment, Precision &outPrecision, UErrorCode &status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_roundingutils.h","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -39,1 +39,1 @@\n-int32_t ScientificModifier::apply(NumberStringBuilder &output, int32_t \/*leftIndex*\/, int32_t rightIndex,\n+int32_t ScientificModifier::apply(FormattedStringBuilder &output, int32_t \/*leftIndex*\/, int32_t rightIndex,\n@@ -47,1 +47,1 @@\n-            UNUM_EXPONENT_SYMBOL_FIELD,\n+            {UFIELD_CATEGORY_NUMBER, UNUM_EXPONENT_SYMBOL_FIELD},\n@@ -54,1 +54,1 @@\n-                UNUM_EXPONENT_SIGN_FIELD,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_EXPONENT_SIGN_FIELD},\n@@ -61,1 +61,1 @@\n-                UNUM_EXPONENT_SIGN_FIELD,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_EXPONENT_SIGN_FIELD},\n@@ -73,1 +73,1 @@\n-                UNUM_EXPONENT_FIELD,\n+                {UFIELD_CATEGORY_NUMBER, UNUM_EXPONENT_FIELD},\n@@ -96,1 +96,1 @@\n-bool ScientificModifier::containsField(UNumberFormatFields field) const {\n+bool ScientificModifier::containsField(Field field) const {\n@@ -126,0 +126,6 @@\n+    \/\/ Do not apply scientific notation to special doubles\n+    if (quantity.isInfinite() || quantity.isNaN()) {\n+        micros.modInner = &micros.helpers.emptyStrongModifier;\n+        return;\n+    }\n+\n@@ -128,1 +134,1 @@\n-    if (quantity.isZero()) {\n+    if (quantity.isZeroish()) {\n@@ -146,0 +152,5 @@\n+    \/\/ Change the exponent only after we select appropriate plural form\n+    \/\/ for formatting purposes so that we preserve expected formatted\n+    \/\/ string behavior.\n+    quantity.adjustExponent(exponent);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_scientific.cpp","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-    int32_t apply(NumberStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n+    int32_t apply(FormattedStringBuilder &output, int32_t leftIndex, int32_t rightIndex,\n@@ -33,1 +33,1 @@\n-    bool containsField(UNumberFormatFields field) const U_OVERRIDE;\n+    bool containsField(Field field) const U_OVERRIDE;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_scientific.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -13,0 +13,1 @@\n+#include \"number_roundingutils.h\"\n@@ -23,0 +24,4 @@\n+#include \"string_segment.h\"\n+#include \"unicode\/errorcode.h\"\n+#include \"util.h\"\n+#include \"measunit_impl.h\"\n@@ -79,0 +84,2 @@\n+    b.add(u\"unit-width-formal\", STEM_UNIT_WIDTH_FORMAL, status);\n+    b.add(u\"unit-width-variant\", STEM_UNIT_WIDTH_VARIANT, status);\n@@ -95,0 +102,2 @@\n+    b.add(u\"unit\", STEM_UNIT, status);\n+    b.add(u\"usage\", STEM_UNIT_USAGE, status);\n@@ -101,0 +110,16 @@\n+    \/\/ Section 3 (concise tokens):\n+    b.add(u\"K\", STEM_COMPACT_SHORT, status);\n+    b.add(u\"KK\", STEM_COMPACT_LONG, status);\n+    b.add(u\"%\", STEM_PERCENT, status);\n+    b.add(u\"%x100\", STEM_PERCENT_100, status);\n+    b.add(u\",_\", STEM_GROUP_OFF, status);\n+    b.add(u\",?\", STEM_GROUP_MIN2, status);\n+    b.add(u\",!\", STEM_GROUP_ON_ALIGNED, status);\n+    b.add(u\"+!\", STEM_SIGN_ALWAYS, status);\n+    b.add(u\"+_\", STEM_SIGN_NEVER, status);\n+    b.add(u\"()\", STEM_SIGN_ACCOUNTING, status);\n+    b.add(u\"()!\", STEM_SIGN_ACCOUNTING_ALWAYS, status);\n+    b.add(u\"+?\", STEM_SIGN_EXCEPT_ZERO, status);\n+    b.add(u\"()?\", STEM_SIGN_ACCOUNTING_EXCEPT_ZERO, status);\n+    if (U_FAILURE(status)) { return; }\n+\n@@ -122,1 +147,1 @@\n-{ \\\n+UPRV_BLOCK_MACRO_BEGIN { \\\n@@ -128,16 +153,1 @@\n-}\n-\n-\n-#define SKELETON_UCHAR_TO_CHAR(dest, src, start, end, status) (void)(dest); \\\n-{ \\\n-    UErrorCode conversionStatus = U_ZERO_ERROR; \\\n-    (dest).appendInvariantChars({FALSE, (src).getBuffer() + (start), (end) - (start)}, conversionStatus); \\\n-    if (conversionStatus == U_INVARIANT_CONVERSION_ERROR) { \\\n-        \/* Don't propagate the invariant conversion error; it is a skeleton syntax error *\/ \\\n-        (status) = U_NUMBER_SKELETON_SYNTAX_ERROR; \\\n-        return; \\\n-    } else if (U_FAILURE(conversionStatus)) { \\\n-        (status) = conversionStatus; \\\n-        return; \\\n-    } \\\n-}\n+} UPRV_BLOCK_MACRO_END\n@@ -169,2 +179,1 @@\n-            \/\/ Slicing is okay\n-            return NoUnit::base(); \/\/ NOLINT\n+            return MeasureUnit();\n@@ -172,2 +181,1 @@\n-            \/\/ Slicing is okay\n-            return NoUnit::percent(); \/\/ NOLINT\n+            return MeasureUnit::getPercent();\n@@ -175,2 +183,1 @@\n-            \/\/ Slicing is okay\n-            return NoUnit::permille(); \/\/ NOLINT\n+            return MeasureUnit::getPermille();\n@@ -247,0 +254,4 @@\n+        case STEM_UNIT_WIDTH_FORMAL:\n+            return UNUM_UNIT_WIDTH_FORMAL;\n+        case STEM_UNIT_WIDTH_VARIANT:\n+            return UNUM_UNIT_WIDTH_VARIANT;\n@@ -354,0 +365,6 @@\n+        case UNUM_UNIT_WIDTH_FORMAL:\n+            sb.append(u\"unit-width-formal\", -1);\n+            break;\n+        case UNUM_UNIT_WIDTH_VARIANT:\n+            sb.append(u\"unit-width-variant\", -1);\n+            break;\n@@ -452,0 +469,1 @@\n+    U_ASSERT(kSerializedStemTrie != nullptr);\n@@ -531,0 +549,2 @@\n+                case STATE_IDENTIFIER_UNIT:\n+                case STATE_UNIT_USAGE:\n@@ -556,0 +576,2 @@\n+    U_ASSERT(U_SUCCESS(status));\n+\n@@ -559,1 +581,1 @@\n-        CHECK_NULL(seen, precision, status);\n+            CHECK_NULL(seen, precision, status);\n@@ -563,1 +585,1 @@\n-        CHECK_NULL(seen, precision, status);\n+            CHECK_NULL(seen, precision, status);\n@@ -566,0 +588,8 @@\n+        case u'E':\n+            CHECK_NULL(seen, notation, status);\n+            blueprint_helpers::parseScientificStem(segment, macros, status);\n+            return STATE_NULL;\n+        case u'0':\n+            CHECK_NULL(seen, integerWidth, status);\n+            blueprint_helpers::parseIntegerStem(segment, macros, status);\n+            return STATE_NULL;\n@@ -589,1 +619,1 @@\n-        CHECK_NULL(seen, notation, status);\n+            CHECK_NULL(seen, notation, status);\n@@ -602,1 +632,1 @@\n-        CHECK_NULL(seen, unit, status);\n+            CHECK_NULL(seen, unit, status);\n@@ -606,0 +636,7 @@\n+        case STEM_PERCENT_100:\n+            CHECK_NULL(seen, scale, status);\n+            CHECK_NULL(seen, unit, status);\n+            macros.scale = Scale::powerOfTen(2);\n+            macros.unit = NoUnit::percent();\n+            return STATE_NULL;\n+\n@@ -610,1 +647,1 @@\n-        CHECK_NULL(seen, precision, status);\n+            CHECK_NULL(seen, precision, status);\n@@ -627,1 +664,1 @@\n-        CHECK_NULL(seen, roundingMode, status);\n+            CHECK_NULL(seen, roundingMode, status);\n@@ -636,1 +673,1 @@\n-        CHECK_NULL(seen, grouper, status);\n+            CHECK_NULL(seen, grouper, status);\n@@ -641,1 +678,1 @@\n-        CHECK_NULL(seen, symbols, status);\n+            CHECK_NULL(seen, symbols, status);\n@@ -649,0 +686,2 @@\n+        case STEM_UNIT_WIDTH_FORMAL:\n+        case STEM_UNIT_WIDTH_VARIANT:\n@@ -650,1 +689,1 @@\n-        CHECK_NULL(seen, unitWidth, status);\n+            CHECK_NULL(seen, unitWidth, status);\n@@ -661,1 +700,1 @@\n-        CHECK_NULL(seen, sign, status);\n+            CHECK_NULL(seen, sign, status);\n@@ -667,1 +706,1 @@\n-        CHECK_NULL(seen, decimal, status);\n+            CHECK_NULL(seen, decimal, status);\n@@ -671,1 +710,1 @@\n-            \/\/ Stems requiring an option:\n+        \/\/ Stems requiring an option:\n@@ -674,1 +713,1 @@\n-        CHECK_NULL(seen, precision, status);\n+            CHECK_NULL(seen, precision, status);\n@@ -678,1 +717,1 @@\n-        CHECK_NULL(seen, unit, status);\n+            CHECK_NULL(seen, unit, status);\n@@ -682,1 +721,1 @@\n-        CHECK_NULL(seen, perUnit, status);\n+            CHECK_NULL(seen, perUnit, status);\n@@ -685,0 +724,9 @@\n+        case STEM_UNIT:\n+            CHECK_NULL(seen, unit, status);\n+            CHECK_NULL(seen, perUnit, status);\n+            return STATE_IDENTIFIER_UNIT;\n+\n+        case STEM_UNIT_USAGE:\n+            CHECK_NULL(seen, usage, status);\n+            return STATE_UNIT_USAGE;\n+\n@@ -686,1 +734,2 @@\n-        CHECK_NULL(seen, unit, status);\n+            CHECK_NULL(seen, unit, status);\n+            CHECK_NULL(seen, perUnit, status);\n@@ -690,1 +739,1 @@\n-        CHECK_NULL(seen, integerWidth, status);\n+            CHECK_NULL(seen, integerWidth, status);\n@@ -694,1 +743,1 @@\n-        CHECK_NULL(seen, symbols, status);\n+            CHECK_NULL(seen, symbols, status);\n@@ -698,1 +747,1 @@\n-        CHECK_NULL(seen, scale, status);\n+            CHECK_NULL(seen, scale, status);\n@@ -708,0 +757,1 @@\n+    U_ASSERT(U_SUCCESS(status));\n@@ -721,0 +771,6 @@\n+        case STATE_IDENTIFIER_UNIT:\n+            blueprint_helpers::parseIdentifierUnitOption(segment, macros, status);\n+            return STATE_NULL;\n+        case STATE_UNIT_USAGE:\n+            blueprint_helpers::parseUnitUsageOption(segment, macros, status);\n+            return STATE_NULL;\n@@ -791,1 +847,1 @@\n-    if (GeneratorHelpers::perUnit(macros, sb, status)) {\n+    if (GeneratorHelpers::usage(macros, sb, status)) {\n@@ -845,4 +901,0 @@\n-    if (macros.currencySymbols != nullptr) {\n-        status = U_UNSUPPORTED_ERROR;\n-        return;\n-    }\n@@ -859,1 +911,1 @@\n-    if (segment.charAt(0) != u'+') {\n+    if (!isWildcardChar(segment.charAt(0))) {\n@@ -881,1 +933,1 @@\n-    sb.append(u'+');\n+    sb.append(kWildcardChar);\n@@ -930,0 +982,1 @@\n+    U_ASSERT(U_SUCCESS(status));\n@@ -945,1 +998,0 @@\n-    U_ASSERT(U_SUCCESS(status));\n@@ -951,2 +1003,2 @@\n-    \/\/ Note: the largest type as of this writing (March 2018) is \"volume\", which has 24 units.\n-    static constexpr int32_t CAPACITY = 30;\n+    \/\/ Note: the largest type as of this writing (Aug 2020) is \"volume\", which has 33 units.\n+    static constexpr int32_t CAPACITY = 40;\n@@ -973,8 +1025,0 @@\n-void blueprint_helpers::generateMeasureUnitOption(const MeasureUnit& measureUnit, UnicodeString& sb,\n-                                                  UErrorCode&) {\n-    \/\/ Need to do char <-> UChar conversion...\n-    sb.append(UnicodeString(measureUnit.getType(), -1, US_INV));\n-    sb.append(u'-');\n-    sb.append(UnicodeString(measureUnit.getSubtype(), -1, US_INV));\n-}\n-\n@@ -983,1 +1027,1 @@\n-    \/\/ A little bit of a hack: safe the current unit (numerator), call the main measure unit\n+    \/\/ A little bit of a hack: save the current unit (numerator), call the main measure unit\n@@ -992,0 +1036,52 @@\n+void blueprint_helpers::parseIdentifierUnitOption(const StringSegment& segment, MacroProps& macros,\n+                                                  UErrorCode& status) {\n+    \/\/ Need to do char <-> UChar conversion...\n+    U_ASSERT(U_SUCCESS(status));\n+    CharString buffer;\n+    SKELETON_UCHAR_TO_CHAR(buffer, segment.toTempUnicodeString(), 0, segment.length(), status);\n+\n+    ErrorCode internalStatus;\n+    auto fullUnit = MeasureUnitImpl::forIdentifier(buffer.toStringPiece(), internalStatus);\n+    if (internalStatus.isFailure()) {\n+        \/\/ throw new SkeletonSyntaxException(\"Invalid core unit identifier\", segment, e);\n+        status = U_NUMBER_SKELETON_SYNTAX_ERROR;\n+        return;\n+    }\n+\n+    \/\/ Mixed units can only be represented by full MeasureUnit instances, so we\n+    \/\/ don't split the denominator into macros.perUnit.\n+    if (fullUnit.complexity == UMEASURE_UNIT_MIXED) {\n+        macros.unit = std::move(fullUnit).build(status);\n+        return;\n+    }\n+\n+    \/\/ When we have a built-in unit (e.g. meter-per-second), we don't split it up\n+    MeasureUnit testBuiltin = fullUnit.copy(status).build(status);\n+    if (uprv_strcmp(testBuiltin.getType(), \"\") != 0) {\n+        macros.unit = std::move(testBuiltin);\n+        return;\n+    }\n+\n+    \/\/ TODO(ICU-20941): Clean this up.\n+    for (int32_t i = 0; i < fullUnit.units.length(); i++) {\n+        SingleUnitImpl* subUnit = fullUnit.units[i];\n+        if (subUnit->dimensionality > 0) {\n+            macros.unit = macros.unit.product(subUnit->build(status), status);\n+        } else {\n+            subUnit->dimensionality *= -1;\n+            macros.perUnit = macros.perUnit.product(subUnit->build(status), status);\n+        }\n+    }\n+}\n+\n+void blueprint_helpers::parseUnitUsageOption(const StringSegment &segment, MacroProps &macros,\n+                                             UErrorCode &status) {\n+    \/\/ Need to do char <-> UChar conversion...\n+    U_ASSERT(U_SUCCESS(status));\n+    CharString buffer;\n+    SKELETON_UCHAR_TO_CHAR(buffer, segment.toTempUnicodeString(), 0, segment.length(), status);\n+    macros.usage.set(buffer.toStringPiece());\n+    \/\/ We do not do any validation of the usage string: it depends on the\n+    \/\/ unitPreferenceData in the units resources.\n+}\n+\n@@ -1006,1 +1102,1 @@\n-        if (segment.charAt(offset) == u'+') {\n+        if (isWildcardChar(segment.charAt(offset))) {\n@@ -1029,1 +1125,5 @@\n-        macros.precision = Precision::minFraction(minFrac);\n+        if (minFrac == 0) {\n+            macros.precision = Precision::unlimited();\n+        } else {\n+            macros.precision = Precision::minFraction(minFrac);\n+        }\n@@ -1044,1 +1144,1 @@\n-        sb.append(u'+');\n+        sb.append(kWildcardChar);\n@@ -1053,3 +1153,3 @@\n-    int offset = 0;\n-    int minSig = 0;\n-    int maxSig;\n+    int32_t offset = 0;\n+    int32_t minSig = 0;\n+    int32_t maxSig;\n@@ -1064,1 +1164,1 @@\n-        if (segment.charAt(offset) == u'+') {\n+        if (isWildcardChar(segment.charAt(offset))) {\n@@ -1097,1 +1197,1 @@\n-        sb.append(u'+');\n+        sb.append(kWildcardChar);\n@@ -1103,0 +1203,69 @@\n+void blueprint_helpers::parseScientificStem(const StringSegment& segment, MacroProps& macros, UErrorCode& status) {\n+    U_ASSERT(segment.charAt(0) == u'E');\n+    {\n+        int32_t offset = 1;\n+        if (segment.length() == offset) {\n+            goto fail;\n+        }\n+        bool isEngineering = false;\n+        if (segment.charAt(offset) == u'E') {\n+            isEngineering = true;\n+            offset++;\n+            if (segment.length() == offset) {\n+                goto fail;\n+            }\n+        }\n+        UNumberSignDisplay signDisplay = UNUM_SIGN_AUTO;\n+        if (segment.charAt(offset) == u'+') {\n+            offset++;\n+            if (segment.length() == offset) {\n+                goto fail;\n+            }\n+            if (segment.charAt(offset) == u'!') {\n+                signDisplay = UNUM_SIGN_ALWAYS;\n+            } else if (segment.charAt(offset) == u'?') {\n+                signDisplay = UNUM_SIGN_EXCEPT_ZERO;\n+            } else {\n+                goto fail;\n+            }\n+            offset++;\n+            if (segment.length() == offset) {\n+                goto fail;\n+            }\n+        }\n+        int32_t minDigits = 0;\n+        for (; offset < segment.length(); offset++) {\n+            if (segment.charAt(offset) != u'0') {\n+                goto fail;\n+            }\n+            minDigits++;\n+        }\n+        macros.notation = (isEngineering ? Notation::engineering() : Notation::scientific())\n+            .withExponentSignDisplay(signDisplay)\n+            .withMinExponentDigits(minDigits);\n+        return;\n+    }\n+    fail: void();\n+    \/\/ throw new SkeletonSyntaxException(\"Invalid scientific stem\", segment);\n+    status = U_NUMBER_SKELETON_SYNTAX_ERROR;\n+    return;\n+}\n+\n+void blueprint_helpers::parseIntegerStem(const StringSegment& segment, MacroProps& macros, UErrorCode& status) {\n+    U_ASSERT(segment.charAt(0) == u'0');\n+    int32_t offset = 1;\n+    for (; offset < segment.length(); offset++) {\n+        if (segment.charAt(offset) != u'0') {\n+            offset--;\n+            break;\n+        }\n+    }\n+    if (offset < segment.length()) {\n+        \/\/ throw new SkeletonSyntaxException(\"Invalid integer stem\", segment);\n+        status = U_NUMBER_SKELETON_SYNTAX_ERROR;\n+        return;\n+    }\n+    macros.integerWidth = IntegerWidth::zeroFillTo(offset);\n+    return;\n+}\n+\n@@ -1124,1 +1293,1 @@\n-        if (segment.charAt(offset) == u'+') {\n+        if (isWildcardChar(segment.charAt(offset))) {\n@@ -1163,29 +1332,3 @@\n-void blueprint_helpers::parseIncrementOption(const StringSegment& segment, MacroProps& macros,\n-                                             UErrorCode& status) {\n-    \/\/ Need to do char <-> UChar conversion...\n-    U_ASSERT(U_SUCCESS(status));\n-    CharString buffer;\n-    SKELETON_UCHAR_TO_CHAR(buffer, segment.toTempUnicodeString(), 0, segment.length(), status);\n-\n-    \/\/ Utilize DecimalQuantity\/decNumber to parse this for us.\n-    DecimalQuantity dq;\n-    UErrorCode localStatus = U_ZERO_ERROR;\n-    dq.setToDecNumber({buffer.data(), buffer.length()}, localStatus);\n-    if (U_FAILURE(localStatus)) {\n-        \/\/ throw new SkeletonSyntaxException(\"Invalid rounding increment\", segment, e);\n-        status = U_NUMBER_SKELETON_SYNTAX_ERROR;\n-        return;\n-    }\n-    double increment = dq.toDouble();\n-\n-    \/\/ We also need to figure out how many digits. Do a brute force string operation.\n-    int decimalOffset = 0;\n-    while (decimalOffset < segment.length() && segment.charAt(decimalOffset) != '.') {\n-        decimalOffset++;\n-    }\n-    if (decimalOffset == segment.length()) {\n-        macros.precision = Precision::increment(increment);\n-    } else {\n-        int32_t fractionLength = segment.length() - decimalOffset - 1;\n-        macros.precision = Precision::increment(increment).withMinFraction(fractionLength);\n-    }\n+void blueprint_helpers::parseIncrementOption(const StringSegment &segment, MacroProps &macros,\n+                                             UErrorCode &status) {\n+    number::impl::parseIncrementOption(segment, macros.precision, status);\n@@ -1213,1 +1356,1 @@\n-    if (segment.charAt(0) == u'+') {\n+    if (isWildcardChar(segment.charAt(0))) {\n@@ -1220,1 +1363,1 @@\n-        if (segment.charAt(offset) == u'#') {\n+        if (maxInt != -1 && segment.charAt(offset) == u'#') {\n@@ -1254,1 +1397,1 @@\n-        sb.append(u'+');\n+        sb.append(kWildcardChar);\n@@ -1361,1 +1504,10 @@\n-    if (utils::unitIsCurrency(macros.unit)) {\n+    MeasureUnit unit = macros.unit;\n+    if (!utils::unitIsBaseUnit(macros.perUnit)) {\n+        if (utils::unitIsCurrency(macros.unit) || utils::unitIsCurrency(macros.perUnit)) {\n+            status = U_UNSUPPORTED_ERROR;\n+            return false;\n+        }\n+        unit = unit.product(macros.perUnit.reciprocal(status), status);\n+    }\n+\n+    if (utils::unitIsCurrency(unit)) {\n@@ -1363,1 +1515,1 @@\n-        CurrencyUnit currency(macros.unit, status);\n+        CurrencyUnit currency(unit, status);\n@@ -1369,11 +1521,9 @@\n-    } else if (utils::unitIsNoUnit(macros.unit)) {\n-        if (utils::unitIsPercent(macros.unit)) {\n-            sb.append(u\"percent\", -1);\n-            return true;\n-        } else if (utils::unitIsPermille(macros.unit)) {\n-            sb.append(u\"permille\", -1);\n-            return true;\n-        } else {\n-            \/\/ Default value is not shown in normalized form\n-            return false;\n-        }\n+    } else if (utils::unitIsBaseUnit(unit)) {\n+        \/\/ Default value is not shown in normalized form\n+        return false;\n+    } else if (utils::unitIsPercent(unit)) {\n+        sb.append(u\"percent\", -1);\n+        return true;\n+    } else if (utils::unitIsPermille(unit)) {\n+        sb.append(u\"permille\", -1);\n+        return true;\n@@ -1381,2 +1531,2 @@\n-        sb.append(u\"measure-unit\/\", -1);\n-        blueprint_helpers::generateMeasureUnitOption(macros.unit, sb, status);\n+        sb.append(u\"unit\/\", -1);\n+        sb.append(unit.getIdentifier());\n@@ -1387,16 +1537,4 @@\n-bool GeneratorHelpers::perUnit(const MacroProps& macros, UnicodeString& sb, UErrorCode& status) {\n-    \/\/ Per-units are currently expected to be only MeasureUnits.\n-    if (utils::unitIsNoUnit(macros.perUnit)) {\n-        if (utils::unitIsPercent(macros.perUnit) || utils::unitIsPermille(macros.perUnit)) {\n-            status = U_UNSUPPORTED_ERROR;\n-            return false;\n-        } else {\n-            \/\/ Default value: ok to ignore\n-            return false;\n-        }\n-    } else if (utils::unitIsCurrency(macros.perUnit)) {\n-        status = U_UNSUPPORTED_ERROR;\n-        return false;\n-    } else {\n-        sb.append(u\"per-measure-unit\/\", -1);\n-        blueprint_helpers::generateMeasureUnitOption(macros.perUnit, sb, status);\n+bool GeneratorHelpers::usage(const MacroProps& macros, UnicodeString& sb, UErrorCode& \/* status *\/) {\n+    if (macros.usage.isSet()) {\n+        sb.append(u\"usage\/\", -1);\n+        sb.append(UnicodeString(macros.usage.fUsage, -1, US_INV));\n@@ -1405,0 +1543,1 @@\n+    return false;\n@@ -1545,0 +1684,45 @@\n+\/\/ Definitions of public API methods (put here for dependency disentanglement)\n+\n+#if (U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN) && defined(_MSC_VER)\n+\/\/ Ignore MSVC warning 4661. This is generated for NumberFormatterSettings<>::toSkeleton() as this method\n+\/\/ is defined elsewhere (in number_skeletons.cpp). The compiler is warning that the explicit template instantiation\n+\/\/ inside this single translation unit (CPP file) is incomplete, and thus it isn't sure if the template class is\n+\/\/ fully defined. However, since each translation unit explicitly instantiates all the necessary template classes,\n+\/\/ they will all be passed to the linker, and the linker will still find and export all the class members.\n+#pragma warning(push)\n+#pragma warning(disable: 4661)\n+#endif\n+\n+template<typename Derived>\n+UnicodeString NumberFormatterSettings<Derived>::toSkeleton(UErrorCode& status) const {\n+    if (U_FAILURE(status)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n+    if (fMacros.copyErrorTo(status)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n+    return skeleton::generate(fMacros, status);\n+}\n+\n+\/\/ Declare all classes that implement NumberFormatterSettings\n+\/\/ See https:\/\/stackoverflow.com\/a\/495056\/1407170\n+template\n+class icu::number::NumberFormatterSettings<icu::number::UnlocalizedNumberFormatter>;\n+template\n+class icu::number::NumberFormatterSettings<icu::number::LocalizedNumberFormatter>;\n+\n+UnlocalizedNumberFormatter\n+NumberFormatter::forSkeleton(const UnicodeString& skeleton, UErrorCode& status) {\n+    return skeleton::create(skeleton, nullptr, status);\n+}\n+\n+UnlocalizedNumberFormatter\n+NumberFormatter::forSkeleton(const UnicodeString& skeleton, UParseError& perror, UErrorCode& status) {\n+    return skeleton::create(skeleton, &perror, status);\n+}\n+\n+#if (U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN) && defined(_MSC_VER)\n+\/\/ Warning 4661.\n+#pragma warning(pop)\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_skeletons.cpp","additions":317,"deletions":133,"binary":false,"changes":450,"status":"modified"},{"patch":"@@ -13,0 +13,1 @@\n+#include \"string_segment.h\"\n@@ -14,3 +15,2 @@\n-using icu::numparse::impl::StringSegment;\n-\n-U_NAMESPACE_BEGIN namespace number {\n+U_NAMESPACE_BEGIN\n+namespace number {\n@@ -25,4 +25,6 @@\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\/\/ NOTE: For an example of how to add a new stem to the number skeleton parser, see: \/\/\n-\/\/ http:\/\/bugs.icu-project.org\/trac\/changeset\/41193                                  \/\/\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\/\/ NOTE: For examples of how to add a new stem to the number skeleton parser, see:    \/\/\n+\/\/ https:\/\/github.com\/unicode-org\/icu\/commit\/a2a7982216b2348070dc71093775ac7195793d73 \/\/\n+\/\/ and                                                                                \/\/\n+\/\/ https:\/\/github.com\/unicode-org\/icu\/commit\/6fe86f3934a8a5701034f648a8f7c5087e84aa28 \/\/\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n@@ -49,0 +51,2 @@\n+    STATE_IDENTIFIER_UNIT,\n+    STATE_UNIT_USAGE,\n@@ -74,0 +78,1 @@\n+    STEM_PERCENT_100, \/\/ concise-only\n@@ -96,0 +101,2 @@\n+    STEM_UNIT_WIDTH_FORMAL,\n+    STEM_UNIT_WIDTH_VARIANT,\n@@ -112,0 +119,2 @@\n+    STEM_UNIT,\n+    STEM_UNIT_USAGE,\n@@ -118,0 +127,11 @@\n+\/** Default wildcard char, accepted on input and printed in output *\/\n+constexpr char16_t kWildcardChar = u'*';\n+\n+\/** Alternative wildcard char, accept on input but not printed in output *\/\n+constexpr char16_t kAltWildcardChar = u'+';\n+\n+\/** Checks whether the char is a wildcard on input *\/\n+inline bool isWildcardChar(char16_t c) {\n+    return c == kWildcardChar || c == kAltWildcardChar;\n+}\n+\n@@ -223,0 +243,1 @@\n+\/\/ \"measure-unit\/\" is deprecated in favour of \"unit\/\".\n@@ -225,2 +246,1 @@\n-void generateMeasureUnitOption(const MeasureUnit& measureUnit, UnicodeString& sb, UErrorCode& status);\n-\n+\/\/ \"per-measure-unit\/\" is deprecated in favour of \"unit\/\".\n@@ -229,0 +249,8 @@\n+\/**\n+ * Parses unit identifiers like \"meter-per-second\" and \"foot-and-inch\", as\n+ * specified via a \"unit\/\" concise skeleton.\n+ *\/\n+void parseIdentifierUnitOption(const StringSegment& segment, MacroProps& macros, UErrorCode& status);\n+\n+void parseUnitUsageOption(const StringSegment& segment, MacroProps& macros, UErrorCode& status);\n+\n@@ -237,0 +265,8 @@\n+void parseScientificStem(const StringSegment& segment, MacroProps& macros, UErrorCode& status);\n+\n+\/\/ Note: no generateScientificStem since this syntax was added later in ICU 67\n+\n+void parseIntegerStem(const StringSegment& segment, MacroProps& macros, UErrorCode& status);\n+\n+\/\/ Note: no generateIntegerStem since this syntax was added later in ICU 67\n+\n@@ -281,1 +317,1 @@\n-    static bool perUnit(const MacroProps& macros, UnicodeString& sb, UErrorCode& status);\n+    static bool usage(const MacroProps& macros, UnicodeString& sb, UErrorCode& status);\n@@ -311,0 +347,1 @@\n+    bool usage = false;\n@@ -323,0 +360,18 @@\n+namespace {\n+\n+#define SKELETON_UCHAR_TO_CHAR(dest, src, start, end, status) (void)(dest); \\\n+UPRV_BLOCK_MACRO_BEGIN { \\\n+    UErrorCode conversionStatus = U_ZERO_ERROR; \\\n+    (dest).appendInvariantChars({false, (src).getBuffer() + (start), (end) - (start)}, conversionStatus); \\\n+    if (conversionStatus == U_INVARIANT_CONVERSION_ERROR) { \\\n+        \/* Don't propagate the invariant conversion error; it is a skeleton syntax error *\/ \\\n+        (status) = U_NUMBER_SKELETON_SYNTAX_ERROR; \\\n+        return; \\\n+    } else if (U_FAILURE(conversionStatus)) { \\\n+        (status) = conversionStatus; \\\n+        return; \\\n+    } \\\n+} UPRV_BLOCK_MACRO_END\n+\n+} \/\/ namespace\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_skeletons.h","additions":65,"deletions":10,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -1,599 +0,0 @@\n-\/\/ © 2017 and later: Unicode, Inc. and others.\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n-\n-#include \"unicode\/utypes.h\"\n-\n-#if !UCONFIG_NO_FORMATTING\n-\n-#include \"number_stringbuilder.h\"\n-#include \"static_unicode_sets.h\"\n-#include \"unicode\/utf16.h\"\n-#include \"number_utils.h\"\n-\n-using namespace icu;\n-using namespace icu::number;\n-using namespace icu::number::impl;\n-\n-namespace {\n-\n-\/\/ A version of uprv_memcpy that checks for length 0.\n-\/\/ By default, uprv_memcpy requires a length of at least 1.\n-inline void uprv_memcpy2(void* dest, const void* src, size_t len) {\n-    if (len > 0) {\n-        uprv_memcpy(dest, src, len);\n-    }\n-}\n-\n-\/\/ A version of uprv_memmove that checks for length 0.\n-\/\/ By default, uprv_memmove requires a length of at least 1.\n-inline void uprv_memmove2(void* dest, const void* src, size_t len) {\n-    if (len > 0) {\n-        uprv_memmove(dest, src, len);\n-    }\n-}\n-\n-} \/\/ namespace\n-\n-NumberStringBuilder::NumberStringBuilder() {\n-#if U_DEBUG\n-    \/\/ Initializing the memory to non-zero helps catch some bugs that involve\n-    \/\/ reading from an improperly terminated string.\n-    for (int32_t i=0; i<getCapacity(); i++) {\n-        getCharPtr()[i] = 1;\n-    }\n-#endif\n-}\n-\n-NumberStringBuilder::~NumberStringBuilder() {\n-    if (fUsingHeap) {\n-        uprv_free(fChars.heap.ptr);\n-        uprv_free(fFields.heap.ptr);\n-    }\n-}\n-\n-NumberStringBuilder::NumberStringBuilder(const NumberStringBuilder &other) {\n-    *this = other;\n-}\n-\n-NumberStringBuilder &NumberStringBuilder::operator=(const NumberStringBuilder &other) {\n-    \/\/ Check for self-assignment\n-    if (this == &other) {\n-        return *this;\n-    }\n-\n-    \/\/ Continue with deallocation and copying\n-    if (fUsingHeap) {\n-        uprv_free(fChars.heap.ptr);\n-        uprv_free(fFields.heap.ptr);\n-        fUsingHeap = false;\n-    }\n-\n-    int32_t capacity = other.getCapacity();\n-    if (capacity > DEFAULT_CAPACITY) {\n-        \/\/ FIXME: uprv_malloc\n-        \/\/ C++ note: malloc appears in two places: here and in prepareForInsertHelper.\n-        auto newChars = static_cast<char16_t *> (uprv_malloc(sizeof(char16_t) * capacity));\n-        auto newFields = static_cast<Field *>(uprv_malloc(sizeof(Field) * capacity));\n-        if (newChars == nullptr || newFields == nullptr) {\n-            \/\/ UErrorCode is not available; fail silently.\n-            uprv_free(newChars);\n-            uprv_free(newFields);\n-            *this = NumberStringBuilder();  \/\/ can't fail\n-            return *this;\n-        }\n-\n-        fUsingHeap = true;\n-        fChars.heap.capacity = capacity;\n-        fChars.heap.ptr = newChars;\n-        fFields.heap.capacity = capacity;\n-        fFields.heap.ptr = newFields;\n-    }\n-\n-    uprv_memcpy2(getCharPtr(), other.getCharPtr(), sizeof(char16_t) * capacity);\n-    uprv_memcpy2(getFieldPtr(), other.getFieldPtr(), sizeof(Field) * capacity);\n-\n-    fZero = other.fZero;\n-    fLength = other.fLength;\n-    return *this;\n-}\n-\n-int32_t NumberStringBuilder::length() const {\n-    return fLength;\n-}\n-\n-int32_t NumberStringBuilder::codePointCount() const {\n-    return u_countChar32(getCharPtr() + fZero, fLength);\n-}\n-\n-UChar32 NumberStringBuilder::getFirstCodePoint() const {\n-    if (fLength == 0) {\n-        return -1;\n-    }\n-    UChar32 cp;\n-    U16_GET(getCharPtr() + fZero, 0, 0, fLength, cp);\n-    return cp;\n-}\n-\n-UChar32 NumberStringBuilder::getLastCodePoint() const {\n-    if (fLength == 0) {\n-        return -1;\n-    }\n-    int32_t offset = fLength;\n-    U16_BACK_1(getCharPtr() + fZero, 0, offset);\n-    UChar32 cp;\n-    U16_GET(getCharPtr() + fZero, 0, offset, fLength, cp);\n-    return cp;\n-}\n-\n-UChar32 NumberStringBuilder::codePointAt(int32_t index) const {\n-    UChar32 cp;\n-    U16_GET(getCharPtr() + fZero, 0, index, fLength, cp);\n-    return cp;\n-}\n-\n-UChar32 NumberStringBuilder::codePointBefore(int32_t index) const {\n-    int32_t offset = index;\n-    U16_BACK_1(getCharPtr() + fZero, 0, offset);\n-    UChar32 cp;\n-    U16_GET(getCharPtr() + fZero, 0, offset, fLength, cp);\n-    return cp;\n-}\n-\n-NumberStringBuilder &NumberStringBuilder::clear() {\n-    \/\/ TODO: Reset the heap here?\n-    fZero = getCapacity() \/ 2;\n-    fLength = 0;\n-    return *this;\n-}\n-\n-int32_t NumberStringBuilder::appendCodePoint(UChar32 codePoint, Field field, UErrorCode &status) {\n-    return insertCodePoint(fLength, codePoint, field, status);\n-}\n-\n-int32_t\n-NumberStringBuilder::insertCodePoint(int32_t index, UChar32 codePoint, Field field, UErrorCode &status) {\n-    int32_t count = U16_LENGTH(codePoint);\n-    int32_t position = prepareForInsert(index, count, status);\n-    if (U_FAILURE(status)) {\n-        return count;\n-    }\n-    if (count == 1) {\n-        getCharPtr()[position] = (char16_t) codePoint;\n-        getFieldPtr()[position] = field;\n-    } else {\n-        getCharPtr()[position] = U16_LEAD(codePoint);\n-        getCharPtr()[position + 1] = U16_TRAIL(codePoint);\n-        getFieldPtr()[position] = getFieldPtr()[position + 1] = field;\n-    }\n-    return count;\n-}\n-\n-int32_t NumberStringBuilder::append(const UnicodeString &unistr, Field field, UErrorCode &status) {\n-    return insert(fLength, unistr, field, status);\n-}\n-\n-int32_t NumberStringBuilder::insert(int32_t index, const UnicodeString &unistr, Field field,\n-                                    UErrorCode &status) {\n-    if (unistr.length() == 0) {\n-        \/\/ Nothing to insert.\n-        return 0;\n-    } else if (unistr.length() == 1) {\n-        \/\/ Fast path: insert using insertCodePoint.\n-        return insertCodePoint(index, unistr.charAt(0), field, status);\n-    } else {\n-        return insert(index, unistr, 0, unistr.length(), field, status);\n-    }\n-}\n-\n-int32_t\n-NumberStringBuilder::insert(int32_t index, const UnicodeString &unistr, int32_t start, int32_t end,\n-                            Field field, UErrorCode &status) {\n-    int32_t count = end - start;\n-    int32_t position = prepareForInsert(index, count, status);\n-    if (U_FAILURE(status)) {\n-        return count;\n-    }\n-    for (int32_t i = 0; i < count; i++) {\n-        getCharPtr()[position + i] = unistr.charAt(start + i);\n-        getFieldPtr()[position + i] = field;\n-    }\n-    return count;\n-}\n-\n-int32_t\n-NumberStringBuilder::splice(int32_t startThis, int32_t endThis,  const UnicodeString &unistr,\n-                            int32_t startOther, int32_t endOther, Field field, UErrorCode& status) {\n-    int32_t thisLength = endThis - startThis;\n-    int32_t otherLength = endOther - startOther;\n-    int32_t count = otherLength - thisLength;\n-    int32_t position;\n-    if (count > 0) {\n-        \/\/ Overall, chars need to be added.\n-        position = prepareForInsert(startThis, count, status);\n-    } else {\n-        \/\/ Overall, chars need to be removed or kept the same.\n-        position = remove(startThis, -count);\n-    }\n-    if (U_FAILURE(status)) {\n-        return count;\n-    }\n-    for (int32_t i = 0; i < otherLength; i++) {\n-        getCharPtr()[position + i] = unistr.charAt(startOther + i);\n-        getFieldPtr()[position + i] = field;\n-    }\n-    return count;\n-}\n-\n-int32_t NumberStringBuilder::append(const NumberStringBuilder &other, UErrorCode &status) {\n-    return insert(fLength, other, status);\n-}\n-\n-int32_t\n-NumberStringBuilder::insert(int32_t index, const NumberStringBuilder &other, UErrorCode &status) {\n-    if (this == &other) {\n-        status = U_ILLEGAL_ARGUMENT_ERROR;\n-        return 0;\n-    }\n-    int32_t count = other.fLength;\n-    if (count == 0) {\n-        \/\/ Nothing to insert.\n-        return 0;\n-    }\n-    int32_t position = prepareForInsert(index, count, status);\n-    if (U_FAILURE(status)) {\n-        return count;\n-    }\n-    for (int32_t i = 0; i < count; i++) {\n-        getCharPtr()[position + i] = other.charAt(i);\n-        getFieldPtr()[position + i] = other.fieldAt(i);\n-    }\n-    return count;\n-}\n-\n-void NumberStringBuilder::writeTerminator(UErrorCode& status) {\n-    int32_t position = prepareForInsert(fLength, 1, status);\n-    if (U_FAILURE(status)) {\n-        return;\n-    }\n-    getCharPtr()[position] = 0;\n-    getFieldPtr()[position] = UNUM_FIELD_COUNT;\n-    fLength--;\n-}\n-\n-int32_t NumberStringBuilder::prepareForInsert(int32_t index, int32_t count, UErrorCode &status) {\n-    U_ASSERT(index >= 0);\n-    U_ASSERT(index <= fLength);\n-    U_ASSERT(count >= 0);\n-    if (index == 0 && fZero - count >= 0) {\n-        \/\/ Append to start\n-        fZero -= count;\n-        fLength += count;\n-        return fZero;\n-    } else if (index == fLength && fZero + fLength + count < getCapacity()) {\n-        \/\/ Append to end\n-        fLength += count;\n-        return fZero + fLength - count;\n-    } else {\n-        \/\/ Move chars around and\/or allocate more space\n-        return prepareForInsertHelper(index, count, status);\n-    }\n-}\n-\n-int32_t NumberStringBuilder::prepareForInsertHelper(int32_t index, int32_t count, UErrorCode &status) {\n-    int32_t oldCapacity = getCapacity();\n-    int32_t oldZero = fZero;\n-    char16_t *oldChars = getCharPtr();\n-    Field *oldFields = getFieldPtr();\n-    if (fLength + count > oldCapacity) {\n-        int32_t newCapacity = (fLength + count) * 2;\n-        int32_t newZero = newCapacity \/ 2 - (fLength + count) \/ 2;\n-\n-        \/\/ C++ note: malloc appears in two places: here and in the assignment operator.\n-        auto newChars = static_cast<char16_t *> (uprv_malloc(sizeof(char16_t) * newCapacity));\n-        auto newFields = static_cast<Field *>(uprv_malloc(sizeof(Field) * newCapacity));\n-        if (newChars == nullptr || newFields == nullptr) {\n-            uprv_free(newChars);\n-            uprv_free(newFields);\n-            status = U_MEMORY_ALLOCATION_ERROR;\n-            return -1;\n-        }\n-\n-        \/\/ First copy the prefix and then the suffix, leaving room for the new chars that the\n-        \/\/ caller wants to insert.\n-        \/\/ C++ note: memcpy is OK because the src and dest do not overlap.\n-        uprv_memcpy2(newChars + newZero, oldChars + oldZero, sizeof(char16_t) * index);\n-        uprv_memcpy2(newChars + newZero + index + count,\n-                oldChars + oldZero + index,\n-                sizeof(char16_t) * (fLength - index));\n-        uprv_memcpy2(newFields + newZero, oldFields + oldZero, sizeof(Field) * index);\n-        uprv_memcpy2(newFields + newZero + index + count,\n-                oldFields + oldZero + index,\n-                sizeof(Field) * (fLength - index));\n-\n-        if (fUsingHeap) {\n-            uprv_free(oldChars);\n-            uprv_free(oldFields);\n-        }\n-        fUsingHeap = true;\n-        fChars.heap.ptr = newChars;\n-        fChars.heap.capacity = newCapacity;\n-        fFields.heap.ptr = newFields;\n-        fFields.heap.capacity = newCapacity;\n-        fZero = newZero;\n-        fLength += count;\n-    } else {\n-        int32_t newZero = oldCapacity \/ 2 - (fLength + count) \/ 2;\n-\n-        \/\/ C++ note: memmove is required because src and dest may overlap.\n-        \/\/ First copy the entire string to the location of the prefix, and then move the suffix\n-        \/\/ to make room for the new chars that the caller wants to insert.\n-        uprv_memmove2(oldChars + newZero, oldChars + oldZero, sizeof(char16_t) * fLength);\n-        uprv_memmove2(oldChars + newZero + index + count,\n-                oldChars + newZero + index,\n-                sizeof(char16_t) * (fLength - index));\n-        uprv_memmove2(oldFields + newZero, oldFields + oldZero, sizeof(Field) * fLength);\n-        uprv_memmove2(oldFields + newZero + index + count,\n-                oldFields + newZero + index,\n-                sizeof(Field) * (fLength - index));\n-\n-        fZero = newZero;\n-        fLength += count;\n-    }\n-    return fZero + index;\n-}\n-\n-int32_t NumberStringBuilder::remove(int32_t index, int32_t count) {\n-    \/\/ TODO: Reset the heap here?  (If the string after removal can fit on stack?)\n-    int32_t position = index + fZero;\n-    uprv_memmove2(getCharPtr() + position,\n-            getCharPtr() + position + count,\n-            sizeof(char16_t) * (fLength - index - count));\n-    uprv_memmove2(getFieldPtr() + position,\n-            getFieldPtr() + position + count,\n-            sizeof(Field) * (fLength - index - count));\n-    fLength -= count;\n-    return position;\n-}\n-\n-UnicodeString NumberStringBuilder::toUnicodeString() const {\n-    return UnicodeString(getCharPtr() + fZero, fLength);\n-}\n-\n-const UnicodeString NumberStringBuilder::toTempUnicodeString() const {\n-    \/\/ Readonly-alias constructor:\n-    return UnicodeString(FALSE, getCharPtr() + fZero, fLength);\n-}\n-\n-UnicodeString NumberStringBuilder::toDebugString() const {\n-    UnicodeString sb;\n-    sb.append(u\"<NumberStringBuilder [\", -1);\n-    sb.append(toUnicodeString());\n-    sb.append(u\"] [\", -1);\n-    for (int i = 0; i < fLength; i++) {\n-        if (fieldAt(i) == UNUM_FIELD_COUNT) {\n-            sb.append(u'n');\n-        } else {\n-            char16_t c;\n-            switch (fieldAt(i)) {\n-                case UNUM_SIGN_FIELD:\n-                    c = u'-';\n-                    break;\n-                case UNUM_INTEGER_FIELD:\n-                    c = u'i';\n-                    break;\n-                case UNUM_FRACTION_FIELD:\n-                    c = u'f';\n-                    break;\n-                case UNUM_EXPONENT_FIELD:\n-                    c = u'e';\n-                    break;\n-                case UNUM_EXPONENT_SIGN_FIELD:\n-                    c = u'+';\n-                    break;\n-                case UNUM_EXPONENT_SYMBOL_FIELD:\n-                    c = u'E';\n-                    break;\n-                case UNUM_DECIMAL_SEPARATOR_FIELD:\n-                    c = u'.';\n-                    break;\n-                case UNUM_GROUPING_SEPARATOR_FIELD:\n-                    c = u',';\n-                    break;\n-                case UNUM_PERCENT_FIELD:\n-                    c = u'%';\n-                    break;\n-                case UNUM_PERMILL_FIELD:\n-                    c = u'‰';\n-                    break;\n-                case UNUM_CURRENCY_FIELD:\n-                    c = u'$';\n-                    break;\n-                default:\n-                    c = u'?';\n-                    break;\n-            }\n-            sb.append(c);\n-        }\n-    }\n-    sb.append(u\"]>\", -1);\n-    return sb;\n-}\n-\n-const char16_t *NumberStringBuilder::chars() const {\n-    return getCharPtr() + fZero;\n-}\n-\n-bool NumberStringBuilder::contentEquals(const NumberStringBuilder &other) const {\n-    if (fLength != other.fLength) {\n-        return false;\n-    }\n-    for (int32_t i = 0; i < fLength; i++) {\n-        if (charAt(i) != other.charAt(i) || fieldAt(i) != other.fieldAt(i)) {\n-            return false;\n-        }\n-    }\n-    return true;\n-}\n-\n-bool NumberStringBuilder::nextFieldPosition(FieldPosition& fp, UErrorCode& status) const {\n-    int32_t rawField = fp.getField();\n-\n-    if (rawField == FieldPosition::DONT_CARE) {\n-        return FALSE;\n-    }\n-\n-    if (rawField < 0 || rawField >= UNUM_FIELD_COUNT) {\n-        status = U_ILLEGAL_ARGUMENT_ERROR;\n-        return FALSE;\n-    }\n-\n-    ConstrainedFieldPosition cfpos;\n-    cfpos.constrainField(UFIELD_CATEGORY_NUMBER, rawField);\n-    cfpos.setState(UFIELD_CATEGORY_NUMBER, rawField, fp.getBeginIndex(), fp.getEndIndex());\n-    if (nextPosition(cfpos, 0, status)) {\n-        fp.setBeginIndex(cfpos.getStart());\n-        fp.setEndIndex(cfpos.getLimit());\n-        return true;\n-    }\n-\n-    \/\/ Special case: fraction should start after integer if fraction is not present\n-    if (rawField == UNUM_FRACTION_FIELD && fp.getEndIndex() == 0) {\n-        bool inside = false;\n-        int32_t i = fZero;\n-        for (; i < fZero + fLength; i++) {\n-            if (isIntOrGroup(getFieldPtr()[i]) || getFieldPtr()[i] == UNUM_DECIMAL_SEPARATOR_FIELD) {\n-                inside = true;\n-            } else if (inside) {\n-                break;\n-            }\n-        }\n-        fp.setBeginIndex(i - fZero);\n-        fp.setEndIndex(i - fZero);\n-    }\n-\n-    return false;\n-}\n-\n-void NumberStringBuilder::getAllFieldPositions(FieldPositionIteratorHandler& fpih,\n-                                               UErrorCode& status) const {\n-    ConstrainedFieldPosition cfpos;\n-    while (nextPosition(cfpos, 0, status)) {\n-        fpih.addAttribute(cfpos.getField(), cfpos.getStart(), cfpos.getLimit());\n-    }\n-}\n-\n-\/\/ Signal the end of the string using a field that doesn't exist and that is\n-\/\/ different from UNUM_FIELD_COUNT, which is used for \"null number field\".\n-static constexpr Field kEndField = 0xff;\n-\n-bool NumberStringBuilder::nextPosition(ConstrainedFieldPosition& cfpos, Field numericField, UErrorCode& \/*status*\/) const {\n-    auto numericCAF = NumFieldUtils::expand(numericField);\n-    int32_t fieldStart = -1;\n-    Field currField = UNUM_FIELD_COUNT;\n-    for (int32_t i = fZero + cfpos.getLimit(); i <= fZero + fLength; i++) {\n-        Field _field = (i < fZero + fLength) ? getFieldPtr()[i] : kEndField;\n-        \/\/ Case 1: currently scanning a field.\n-        if (currField != UNUM_FIELD_COUNT) {\n-            if (currField != _field) {\n-                int32_t end = i - fZero;\n-                \/\/ Grouping separators can be whitespace; don't throw them out!\n-                if (currField != UNUM_GROUPING_SEPARATOR_FIELD) {\n-                    end = trimBack(i - fZero);\n-                }\n-                if (end <= fieldStart) {\n-                    \/\/ Entire field position is ignorable; skip.\n-                    fieldStart = -1;\n-                    currField = UNUM_FIELD_COUNT;\n-                    i--;  \/\/ look at this index again\n-                    continue;\n-                }\n-                int32_t start = fieldStart;\n-                if (currField != UNUM_GROUPING_SEPARATOR_FIELD) {\n-                    start = trimFront(start);\n-                }\n-                auto caf = NumFieldUtils::expand(currField);\n-                cfpos.setState(caf.category, caf.field, start, end);\n-                return true;\n-            }\n-            continue;\n-        }\n-        \/\/ Special case: coalesce the INTEGER if we are pointing at the end of the INTEGER.\n-        if (cfpos.matchesField(UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD)\n-                && i > fZero\n-                \/\/ don't return the same field twice in a row:\n-                && i - fZero > cfpos.getLimit()\n-                && isIntOrGroup(getFieldPtr()[i - 1])\n-                && !isIntOrGroup(_field)) {\n-            int j = i - 1;\n-            for (; j >= fZero && isIntOrGroup(getFieldPtr()[j]); j--) {}\n-            cfpos.setState(UFIELD_CATEGORY_NUMBER, UNUM_INTEGER_FIELD, j - fZero + 1, i - fZero);\n-            return true;\n-        }\n-        \/\/ Special case: coalesce NUMERIC if we are pointing at the end of the NUMERIC.\n-        if (numericField != 0\n-                && cfpos.matchesField(numericCAF.category, numericCAF.field)\n-                && i > fZero\n-                \/\/ don't return the same field twice in a row:\n-                && (i - fZero > cfpos.getLimit()\n-                    || cfpos.getCategory() != numericCAF.category\n-                    || cfpos.getField() != numericCAF.field)\n-                && isNumericField(getFieldPtr()[i - 1])\n-                && !isNumericField(_field)) {\n-            int j = i - 1;\n-            for (; j >= fZero && isNumericField(getFieldPtr()[j]); j--) {}\n-            cfpos.setState(numericCAF.category, numericCAF.field, j - fZero + 1, i - fZero);\n-            return true;\n-        }\n-        \/\/ Special case: skip over INTEGER; will be coalesced later.\n-        if (_field == UNUM_INTEGER_FIELD) {\n-            _field = UNUM_FIELD_COUNT;\n-        }\n-        \/\/ Case 2: no field starting at this position.\n-        if (_field == UNUM_FIELD_COUNT || _field == kEndField) {\n-            continue;\n-        }\n-        \/\/ Case 3: check for field starting at this position\n-        auto caf = NumFieldUtils::expand(_field);\n-        if (cfpos.matchesField(caf.category, caf.field)) {\n-            fieldStart = i - fZero;\n-            currField = _field;\n-        }\n-    }\n-\n-    U_ASSERT(currField == UNUM_FIELD_COUNT);\n-    return false;\n-}\n-\n-bool NumberStringBuilder::containsField(Field field) const {\n-    for (int32_t i = 0; i < fLength; i++) {\n-        if (field == fieldAt(i)) {\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n-bool NumberStringBuilder::isIntOrGroup(Field field) {\n-    return field == UNUM_INTEGER_FIELD\n-        || field == UNUM_GROUPING_SEPARATOR_FIELD;\n-}\n-\n-bool NumberStringBuilder::isNumericField(Field field) {\n-    return NumFieldUtils::isNumericField(field);\n-}\n-\n-int32_t NumberStringBuilder::trimBack(int32_t limit) const {\n-    return unisets::get(unisets::DEFAULT_IGNORABLES)->spanBack(\n-        getCharPtr() + fZero,\n-        limit,\n-        USET_SPAN_CONTAINED);\n-}\n-\n-int32_t NumberStringBuilder::trimFront(int32_t start) const {\n-    return start + unisets::get(unisets::DEFAULT_IGNORABLES)->span(\n-        getCharPtr() + fZero + start,\n-        fLength - start,\n-        USET_SPAN_CONTAINED);\n-}\n-\n-#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_stringbuilder.cpp","additions":0,"deletions":599,"binary":false,"changes":599,"status":"deleted"},{"patch":"@@ -1,164 +0,0 @@\n-\/\/ © 2017 and later: Unicode, Inc. and others.\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n-\n-#include \"unicode\/utypes.h\"\n-\n-#if !UCONFIG_NO_FORMATTING\n-#ifndef __NUMBER_STRINGBUILDER_H__\n-#define __NUMBER_STRINGBUILDER_H__\n-\n-\n-#include <cstdint>\n-#include \"unicode\/numfmt.h\"\n-#include \"unicode\/ustring.h\"\n-#include \"cstring.h\"\n-#include \"uassert.h\"\n-#include \"number_types.h\"\n-#include \"fphdlimp.h\"\n-\n-U_NAMESPACE_BEGIN namespace number {\n-namespace impl {\n-\n-class U_I18N_API NumberStringBuilder : public UMemory {\n-  private:\n-    static const int32_t DEFAULT_CAPACITY = 40;\n-\n-    template<typename T>\n-    union ValueOrHeapArray {\n-        T value[DEFAULT_CAPACITY];\n-        struct {\n-            T *ptr;\n-            int32_t capacity;\n-        } heap;\n-    };\n-\n-  public:\n-    NumberStringBuilder();\n-\n-    ~NumberStringBuilder();\n-\n-    NumberStringBuilder(const NumberStringBuilder &other);\n-\n-    NumberStringBuilder &operator=(const NumberStringBuilder &other);\n-\n-    int32_t length() const;\n-\n-    int32_t codePointCount() const;\n-\n-    inline char16_t charAt(int32_t index) const {\n-        U_ASSERT(index >= 0);\n-        U_ASSERT(index < fLength);\n-        return getCharPtr()[fZero + index];\n-    }\n-\n-    inline Field fieldAt(int32_t index) const {\n-        U_ASSERT(index >= 0);\n-        U_ASSERT(index < fLength);\n-        return getFieldPtr()[fZero + index];\n-    }\n-\n-    UChar32 getFirstCodePoint() const;\n-\n-    UChar32 getLastCodePoint() const;\n-\n-    UChar32 codePointAt(int32_t index) const;\n-\n-    UChar32 codePointBefore(int32_t index) const;\n-\n-    NumberStringBuilder &clear();\n-\n-    int32_t appendCodePoint(UChar32 codePoint, Field field, UErrorCode &status);\n-\n-    int32_t insertCodePoint(int32_t index, UChar32 codePoint, Field field, UErrorCode &status);\n-\n-    int32_t append(const UnicodeString &unistr, Field field, UErrorCode &status);\n-\n-    int32_t insert(int32_t index, const UnicodeString &unistr, Field field, UErrorCode &status);\n-\n-    int32_t insert(int32_t index, const UnicodeString &unistr, int32_t start, int32_t end, Field field,\n-                   UErrorCode &status);\n-\n-    int32_t splice(int32_t startThis, int32_t endThis,  const UnicodeString &unistr,\n-                   int32_t startOther, int32_t endOther, Field field, UErrorCode& status);\n-\n-    int32_t append(const NumberStringBuilder &other, UErrorCode &status);\n-\n-    int32_t insert(int32_t index, const NumberStringBuilder &other, UErrorCode &status);\n-\n-    void writeTerminator(UErrorCode& status);\n-\n-    \/**\n-     * Gets a \"safe\" UnicodeString that can be used even after the NumberStringBuilder is destructed.\n-     * *\/\n-    UnicodeString toUnicodeString() const;\n-\n-    \/**\n-     * Gets an \"unsafe\" UnicodeString that is valid only as long as the NumberStringBuilder is alive and\n-     * unchanged. Slightly faster than toUnicodeString().\n-     *\/\n-    const UnicodeString toTempUnicodeString() const;\n-\n-    UnicodeString toDebugString() const;\n-\n-    const char16_t *chars() const;\n-\n-    bool contentEquals(const NumberStringBuilder &other) const;\n-\n-    bool nextFieldPosition(FieldPosition& fp, UErrorCode& status) const;\n-\n-    void getAllFieldPositions(FieldPositionIteratorHandler& fpih, UErrorCode& status) const;\n-\n-    bool nextPosition(ConstrainedFieldPosition& cfpos, Field numericField, UErrorCode& status) const;\n-\n-    bool containsField(Field field) const;\n-\n-  private:\n-    bool fUsingHeap = false;\n-    ValueOrHeapArray<char16_t> fChars;\n-    ValueOrHeapArray<Field> fFields;\n-    int32_t fZero = DEFAULT_CAPACITY \/ 2;\n-    int32_t fLength = 0;\n-\n-    inline char16_t *getCharPtr() {\n-        return fUsingHeap ? fChars.heap.ptr : fChars.value;\n-    }\n-\n-    inline const char16_t *getCharPtr() const {\n-        return fUsingHeap ? fChars.heap.ptr : fChars.value;\n-    }\n-\n-    inline Field *getFieldPtr() {\n-        return fUsingHeap ? fFields.heap.ptr : fFields.value;\n-    }\n-\n-    inline const Field *getFieldPtr() const {\n-        return fUsingHeap ? fFields.heap.ptr : fFields.value;\n-    }\n-\n-    inline int32_t getCapacity() const {\n-        return fUsingHeap ? fChars.heap.capacity : DEFAULT_CAPACITY;\n-    }\n-\n-    int32_t prepareForInsert(int32_t index, int32_t count, UErrorCode &status);\n-\n-    int32_t prepareForInsertHelper(int32_t index, int32_t count, UErrorCode &status);\n-\n-    int32_t remove(int32_t index, int32_t count);\n-\n-    static bool isIntOrGroup(Field field);\n-\n-    static bool isNumericField(Field field);\n-\n-    int32_t trimBack(int32_t limit) const;\n-\n-    int32_t trimFront(int32_t start) const;\n-};\n-\n-} \/\/ namespace impl\n-} \/\/ namespace number\n-U_NAMESPACE_END\n-\n-\n-#endif \/\/__NUMBER_STRINGBUILDER_H__\n-\n-#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_stringbuilder.h","additions":0,"deletions":164,"binary":false,"changes":164,"status":"deleted"},{"patch":"@@ -0,0 +1,131 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"number_microprops.h\"\n+#include \"unicode\/numberformatter.h\"\n+\n+using namespace icu;\n+using namespace icu::number;\n+using namespace icu::number::impl;\n+\n+SymbolsWrapper::SymbolsWrapper(const SymbolsWrapper &other) {\n+    doCopyFrom(other);\n+}\n+\n+SymbolsWrapper::SymbolsWrapper(SymbolsWrapper &&src) U_NOEXCEPT {\n+    doMoveFrom(std::move(src));\n+}\n+\n+SymbolsWrapper &SymbolsWrapper::operator=(const SymbolsWrapper &other) {\n+    if (this == &other) {\n+        return *this;\n+    }\n+    doCleanup();\n+    doCopyFrom(other);\n+    return *this;\n+}\n+\n+SymbolsWrapper &SymbolsWrapper::operator=(SymbolsWrapper &&src) U_NOEXCEPT {\n+    if (this == &src) {\n+        return *this;\n+    }\n+    doCleanup();\n+    doMoveFrom(std::move(src));\n+    return *this;\n+}\n+\n+SymbolsWrapper::~SymbolsWrapper() {\n+    doCleanup();\n+}\n+\n+void SymbolsWrapper::setTo(const DecimalFormatSymbols &dfs) {\n+    doCleanup();\n+    fType = SYMPTR_DFS;\n+    fPtr.dfs = new DecimalFormatSymbols(dfs);\n+}\n+\n+void SymbolsWrapper::setTo(const NumberingSystem *ns) {\n+    doCleanup();\n+    fType = SYMPTR_NS;\n+    fPtr.ns = ns;\n+}\n+\n+void SymbolsWrapper::doCopyFrom(const SymbolsWrapper &other) {\n+    fType = other.fType;\n+    switch (fType) {\n+    case SYMPTR_NONE:\n+        \/\/ No action necessary\n+        break;\n+    case SYMPTR_DFS:\n+        \/\/ Memory allocation failures are exposed in copyErrorTo()\n+        if (other.fPtr.dfs != nullptr) {\n+            fPtr.dfs = new DecimalFormatSymbols(*other.fPtr.dfs);\n+        } else {\n+            fPtr.dfs = nullptr;\n+        }\n+        break;\n+    case SYMPTR_NS:\n+        \/\/ Memory allocation failures are exposed in copyErrorTo()\n+        if (other.fPtr.ns != nullptr) {\n+            fPtr.ns = new NumberingSystem(*other.fPtr.ns);\n+        } else {\n+            fPtr.ns = nullptr;\n+        }\n+        break;\n+    }\n+}\n+\n+void SymbolsWrapper::doMoveFrom(SymbolsWrapper &&src) {\n+    fType = src.fType;\n+    switch (fType) {\n+    case SYMPTR_NONE:\n+        \/\/ No action necessary\n+        break;\n+    case SYMPTR_DFS:\n+        fPtr.dfs = src.fPtr.dfs;\n+        src.fPtr.dfs = nullptr;\n+        break;\n+    case SYMPTR_NS:\n+        fPtr.ns = src.fPtr.ns;\n+        src.fPtr.ns = nullptr;\n+        break;\n+    }\n+}\n+\n+void SymbolsWrapper::doCleanup() {\n+    switch (fType) {\n+    case SYMPTR_NONE:\n+        \/\/ No action necessary\n+        break;\n+    case SYMPTR_DFS:\n+        delete fPtr.dfs;\n+        break;\n+    case SYMPTR_NS:\n+        delete fPtr.ns;\n+        break;\n+    }\n+}\n+\n+bool SymbolsWrapper::isDecimalFormatSymbols() const {\n+    return fType == SYMPTR_DFS;\n+}\n+\n+bool SymbolsWrapper::isNumberingSystem() const {\n+    return fType == SYMPTR_NS;\n+}\n+\n+const DecimalFormatSymbols *SymbolsWrapper::getDecimalFormatSymbols() const {\n+    U_ASSERT(fType == SYMPTR_DFS);\n+    return fPtr.dfs;\n+}\n+\n+const NumberingSystem *SymbolsWrapper::getNumberingSystem() const {\n+    U_ASSERT(fType == SYMPTR_NS);\n+    return fPtr.ns;\n+}\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_symbolswrapper.cpp","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -20,0 +20,1 @@\n+#include \"formatted_string_builder.h\"\n@@ -21,1 +22,2 @@\n-U_NAMESPACE_BEGIN namespace number {\n+U_NAMESPACE_BEGIN\n+namespace number {\n@@ -24,1 +26,2 @@\n-\/\/ Typedef several enums for brevity and for easier comparison to Java.\n+\/\/ For convenience and historical reasons, import the Field typedef to the namespace.\n+typedef FormattedStringBuilder::Field Field;\n@@ -26,5 +29,1 @@\n-\/\/ Convention: bottom 4 bits for field, top 4 bits for field category.\n-\/\/ Field category 0 implies the number category so that the number field\n-\/\/ literals can be directly passed as a Field type.\n-\/\/ See the helper functions in \"NumFieldUtils\" in number_utils.h\n-typedef uint8_t Field;\n+\/\/ Typedef several enums for brevity and for easier comparison to Java.\n@@ -52,1 +51,0 @@\n-class NumberStringBuilder;\n@@ -96,0 +94,8 @@\n+enum Signum {\n+    SIGNUM_NEG = 0,\n+    SIGNUM_NEG_ZERO = 1,\n+    SIGNUM_POS_ZERO = 2,\n+    SIGNUM_POS = 3,\n+    SIGNUM_COUNT = 4,\n+};\n+\n@@ -163,1 +169,1 @@\n-    virtual int32_t apply(NumberStringBuilder& output, int leftIndex, int rightIndex,\n+    virtual int32_t apply(FormattedStringBuilder& output, int leftIndex, int rightIndex,\n@@ -191,1 +197,1 @@\n-    virtual bool containsField(UNumberFormatFields field) const = 0;\n+    virtual bool containsField(Field field) const = 0;\n@@ -199,1 +205,1 @@\n-        int8_t signum;\n+        Signum signum;\n@@ -203,1 +209,1 @@\n-        Parameters(const ModifierStore* _obj, int8_t _signum, StandardPlural::Form _plural);\n+        Parameters(const ModifierStore* _obj, Signum _signum, StandardPlural::Form _plural);\n@@ -234,1 +240,1 @@\n-    virtual const Modifier* getModifier(int8_t signum, StandardPlural::Form plural) const = 0;\n+    virtual const Modifier* getModifier(Signum signum, StandardPlural::Form plural) const = 0;\n@@ -243,1 +249,0 @@\n- * <p>\n@@ -246,1 +251,0 @@\n- * <p>\n@@ -253,0 +257,3 @@\n+ * This chain of MicroPropsGenerators is typically constructed by NumberFormatterImpl::macrosToMicroGenerator() when\n+ * constructing a NumberFormatter.\n+ *\n@@ -258,1 +265,1 @@\n-    virtual ~MicroPropsGenerator();\n+    virtual ~MicroPropsGenerator() = default;\n@@ -261,1 +268,2 @@\n-     * Considers the given {@link DecimalQuantity}, optionally mutates it, and returns a {@link MicroProps}.\n+     * Considers the given {@link DecimalQuantity}, optionally mutates it, and\n+     * populates a {@link MicroProps} instance.\n@@ -263,5 +271,3 @@\n-     * @param quantity\n-     *            The quantity for consideration and optional mutation.\n-     * @param micros\n-     *            The MicroProps instance to populate.\n-     * @return A MicroProps instance resolved for the quantity.\n+     * @param quantity The quantity for consideration and optional mutation.\n+     * @param micros The MicroProps instance to populate. It will be modified as\n+     *   needed for the given quantity.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_types.h","additions":28,"deletions":22,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -0,0 +1,208 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"number_usageprefs.h\"\n+#include \"cstring.h\"\n+#include \"number_decimalquantity.h\"\n+#include \"number_microprops.h\"\n+#include \"number_roundingutils.h\"\n+#include \"number_skeletons.h\"\n+#include \"unicode\/char16ptr.h\"\n+#include \"unicode\/currunit.h\"\n+#include \"unicode\/fmtable.h\"\n+#include \"unicode\/measure.h\"\n+#include \"unicode\/numberformatter.h\"\n+#include \"unicode\/platform.h\"\n+#include \"unicode\/unum.h\"\n+#include \"unicode\/urename.h\"\n+#include \"units_data.h\"\n+\n+using namespace icu;\n+using namespace icu::number;\n+using namespace icu::number::impl;\n+using icu::StringSegment;\n+using icu::units::ConversionRates;\n+\n+\/\/ Copy constructor\n+Usage::Usage(const Usage &other) : Usage() {\n+    this->operator=(other);\n+}\n+\n+\/\/ Copy assignment operator\n+Usage &Usage::operator=(const Usage &other) {\n+    fLength = 0;\n+    fError = other.fError;\n+    if (fUsage != nullptr) {\n+        uprv_free(fUsage);\n+        fUsage = nullptr;\n+    }\n+    if (other.fUsage == nullptr) {\n+        return *this;\n+    }\n+    if (U_FAILURE(other.fError)) {\n+        \/\/ We don't bother trying to allocating memory if we're in any case busy\n+        \/\/ copying an errored Usage.\n+        return *this;\n+    }\n+    fUsage = (char *)uprv_malloc(other.fLength + 1);\n+    if (fUsage == nullptr) {\n+        fError = U_MEMORY_ALLOCATION_ERROR;\n+        return *this;\n+    }\n+    fLength = other.fLength;\n+    uprv_strncpy(fUsage, other.fUsage, fLength + 1);\n+    return *this;\n+}\n+\n+\/\/ Move constructor\n+Usage::Usage(Usage &&src) U_NOEXCEPT : fUsage(src.fUsage), fLength(src.fLength), fError(src.fError) {\n+    \/\/ Take ownership away from src if necessary\n+    src.fUsage = nullptr;\n+}\n+\n+\/\/ Move assignment operator\n+Usage &Usage::operator=(Usage &&src) U_NOEXCEPT {\n+    if (this == &src) {\n+        return *this;\n+    }\n+    if (fUsage != nullptr) {\n+        uprv_free(fUsage);\n+    }\n+    fUsage = src.fUsage;\n+    fLength = src.fLength;\n+    fError = src.fError;\n+    \/\/ Take ownership away from src if necessary\n+    src.fUsage = nullptr;\n+    return *this;\n+}\n+\n+Usage::~Usage() {\n+    if (fUsage != nullptr) {\n+        uprv_free(fUsage);\n+        fUsage = nullptr;\n+    }\n+}\n+\n+void Usage::set(StringPiece value) {\n+    if (fUsage != nullptr) {\n+        uprv_free(fUsage);\n+        fUsage = nullptr;\n+    }\n+    fLength = value.length();\n+    fUsage = (char *)uprv_malloc(fLength + 1);\n+    if (fUsage == nullptr) {\n+        fLength = 0;\n+        fError = U_MEMORY_ALLOCATION_ERROR;\n+        return;\n+    }\n+    uprv_strncpy(fUsage, value.data(), fLength);\n+    fUsage[fLength] = 0;\n+}\n+\n+\/\/ Populates micros.mixedMeasures and modifies quantity, based on the values in\n+\/\/ measures.\n+void mixedMeasuresToMicros(const MaybeStackVector<Measure> &measures, DecimalQuantity *quantity,\n+                           MicroProps *micros, UErrorCode status) {\n+    micros->mixedMeasuresCount = measures.length() - 1;\n+    if (micros->mixedMeasuresCount > 0) {\n+#ifdef U_DEBUG\n+        U_ASSERT(micros->outputUnit.getComplexity(status) == UMEASURE_UNIT_MIXED);\n+        U_ASSERT(U_SUCCESS(status));\n+        \/\/ Check that we received measurements with the expected MeasureUnits:\n+        MeasureUnitImpl temp;\n+        const MeasureUnitImpl& impl = MeasureUnitImpl::forMeasureUnit(micros->outputUnit, temp, status);\n+        U_ASSERT(U_SUCCESS(status));\n+        U_ASSERT(measures.length() == impl.units.length());\n+        for (int32_t i = 0; i < measures.length(); i++) {\n+            U_ASSERT(measures[i]->getUnit() == impl.units[i]->build(status));\n+        }\n+        (void)impl;\n+#endif\n+        \/\/ Mixed units: except for the last value, we pass all values to the\n+        \/\/ LongNameHandler via micros->mixedMeasures.\n+        if (micros->mixedMeasures.getCapacity() < micros->mixedMeasuresCount) {\n+            if (micros->mixedMeasures.resize(micros->mixedMeasuresCount) == nullptr) {\n+                status = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            }\n+        }\n+        for (int32_t i = 0; i < micros->mixedMeasuresCount; i++) {\n+            micros->mixedMeasures[i] = measures[i]->getNumber().getInt64();\n+        }\n+    } else {\n+        micros->mixedMeasuresCount = 0;\n+    }\n+    \/\/ The last value (potentially the only value) gets passed on via quantity.\n+    quantity->setToDouble(measures[measures.length() - 1]->getNumber().getDouble());\n+}\n+\n+UsagePrefsHandler::UsagePrefsHandler(const Locale &locale,\n+                                     const MeasureUnit &inputUnit,\n+                                     const StringPiece usage,\n+                                     const MicroPropsGenerator *parent,\n+                                     UErrorCode &status)\n+    : fUnitsRouter(inputUnit, StringPiece(locale.getCountry()), usage, status),\n+      fParent(parent) {\n+}\n+\n+void UsagePrefsHandler::processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                                        UErrorCode &status) const {\n+    fParent->processQuantity(quantity, micros, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    quantity.roundToInfinity(); \/\/ Enables toDouble\n+    const units::RouteResult routed = fUnitsRouter.route(quantity.toDouble(), &micros.rounder, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    const MaybeStackVector<Measure>& routedMeasures = routed.measures;\n+    micros.outputUnit = routed.outputUnit.copy(status).build(status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    mixedMeasuresToMicros(routedMeasures, &quantity, &micros, status);\n+}\n+\n+UnitConversionHandler::UnitConversionHandler(const MeasureUnit &inputUnit, const MeasureUnit &outputUnit,\n+                                             const MicroPropsGenerator *parent, UErrorCode &status)\n+    : fOutputUnit(outputUnit), fParent(parent) {\n+    MeasureUnitImpl tempInput, tempOutput;\n+    const MeasureUnitImpl &inputUnitImpl = MeasureUnitImpl::forMeasureUnit(inputUnit, tempInput, status);\n+    const MeasureUnitImpl &outputUnitImpl =\n+        MeasureUnitImpl::forMeasureUnit(outputUnit, tempOutput, status);\n+\n+    \/\/ TODO: this should become an initOnce thing? Review with other\n+    \/\/ ConversionRates usages.\n+    ConversionRates conversionRates(status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    fUnitConverter.adoptInsteadAndCheckErrorCode(\n+        new ComplexUnitsConverter(inputUnitImpl, outputUnitImpl, conversionRates, status), status);\n+}\n+\n+void UnitConversionHandler::processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                                            UErrorCode &status) const {\n+    fParent->processQuantity(quantity, micros, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    quantity.roundToInfinity(); \/\/ Enables toDouble\n+    MaybeStackVector<Measure> measures =\n+        fUnitConverter->convert(quantity.toDouble(), &micros.rounder, status);\n+    micros.outputUnit = fOutputUnit;\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    mixedMeasuresToMicros(measures, &quantity, &micros, status);\n+}\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_usageprefs.cpp","additions":208,"deletions":0,"binary":false,"changes":208,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __NUMBER_USAGEPREFS_H__\n+#define __NUMBER_USAGEPREFS_H__\n+\n+#include \"cmemory.h\"\n+#include \"number_types.h\"\n+#include \"unicode\/listformatter.h\"\n+#include \"unicode\/localpointer.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/measunit.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"units_converter.h\"\n+#include \"units_router.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+using ::icu::units::ComplexUnitsConverter;\n+using ::icu::units::UnitsRouter;\n+\n+namespace number {\n+namespace impl {\n+\n+\/**\n+ * A MicroPropsGenerator which uses UnitsRouter to produce output converted to a\n+ * MeasureUnit appropriate for a particular localized usage: see\n+ * NumberFormatterSettings::usage().\n+ *\/\n+class U_I18N_API UsagePrefsHandler : public MicroPropsGenerator, public UMemory {\n+  public:\n+    UsagePrefsHandler(const Locale &locale, const MeasureUnit &inputUnit, const StringPiece usage,\n+                      const MicroPropsGenerator *parent, UErrorCode &status);\n+\n+    \/**\n+     * Obtains the appropriate output value, MeasureUnit and\n+     * rounding\/precision behaviour from the UnitsRouter.\n+     *\n+     * The output unit is passed on to the LongNameHandler via\n+     * micros.outputUnit.\n+     *\/\n+    void processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                         UErrorCode &status) const U_OVERRIDE;\n+\n+    \/**\n+     * Returns the list of possible output units, i.e. the full set of\n+     * preferences, for the localized, usage-specific unit preferences.\n+     *\n+     * The returned pointer should be valid for the lifetime of the\n+     * UsagePrefsHandler instance.\n+     *\/\n+    const MaybeStackVector<MeasureUnit> *getOutputUnits() const {\n+        return fUnitsRouter.getOutputUnits();\n+    }\n+\n+  private:\n+    UnitsRouter fUnitsRouter;\n+    const MicroPropsGenerator *fParent;\n+};\n+\n+} \/\/ namespace impl\n+} \/\/ namespace number\n+\n+\/\/ Export explicit template instantiations of LocalPointerBase and LocalPointer.\n+\/\/ This is required when building DLLs for Windows. (See datefmt.h,\n+\/\/ collationiterator.h, erarules.h and others for similar examples.)\n+\/\/\n+\/\/ Note: These need to be outside of the number::impl namespace, or Clang will\n+\/\/ generate a compile error.\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+#if defined(_MSC_VER)\n+\/\/ Ignore warning 4661 as LocalPointerBase does not use operator== or operator!=\n+#pragma warning(push)\n+#pragma warning(disable: 4661)\n+#endif\n+template class U_I18N_API LocalPointerBase<ComplexUnitsConverter>;\n+template class U_I18N_API LocalPointer<ComplexUnitsConverter>;\n+#if defined(_MSC_VER)\n+#pragma warning(pop)\n+#endif\n+#endif\n+\n+namespace number {\n+namespace impl {\n+\n+\/**\n+ * A MicroPropsGenerator which converts a measurement from one MeasureUnit to\n+ * another. In particular, the output MeasureUnit may be a mixed unit. (The\n+ * input unit may not be a mixed unit.)\n+ *\/\n+class U_I18N_API UnitConversionHandler : public MicroPropsGenerator, public UMemory {\n+  public:\n+    \/**\n+     * Constructor.\n+     *\n+     * @param inputUnit Specifies the input MeasureUnit. Mixed units are not\n+     *     supported as input (because input is just a single decimal quantity).\n+     * @param outputUnit Specifies the output MeasureUnit.\n+     * @param parent The parent MicroPropsGenerator.\n+     * @param status Receives status.\n+     *\/\n+    UnitConversionHandler(const MeasureUnit &inputUnit, const MeasureUnit &outputUnit,\n+                          const MicroPropsGenerator *parent, UErrorCode &status);\n+\n+    \/**\n+     * Obtains the appropriate output values from the Unit Converter.\n+     *\/\n+    void processQuantity(DecimalQuantity &quantity, MicroProps &micros,\n+                         UErrorCode &status) const U_OVERRIDE;\n+  private:\n+    MeasureUnit fOutputUnit;\n+    LocalPointer<ComplexUnitsConverter> fUnitConverter;\n+    const MicroPropsGenerator *fParent;\n+};\n+\n+} \/\/ namespace impl\n+} \/\/ namespace number\n+U_NAMESPACE_END\n+\n+#endif \/\/ __NUMBER_USAGEPREFS_H__\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_usageprefs.h","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -255,0 +255,14 @@\n+void DecNum::toString(ByteSink& output, UErrorCode& status) const {\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    \/\/ \"string must be at least dn->digits+14 characters long\"\n+    int32_t minCapacity = fData.getAlias()->digits + 14;\n+    MaybeStackArray<char, 30> buffer(minCapacity, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    uprv_decNumberToString(fData, buffer.getAlias());\n+    output.Append(buffer.getAlias(), static_cast<int32_t>(uprv_strlen(buffer.getAlias())));\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_utils.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -20,0 +20,1 @@\n+#include \"formatted_string_builder.h\"\n@@ -35,42 +36,0 @@\n-\n-\/**\n- * Helper functions for dealing with the Field typedef, which stores fields\n- * in a compressed format.\n- *\/\n-class NumFieldUtils {\n-public:\n-    struct CategoryFieldPair {\n-        int32_t category;\n-        int32_t field;\n-    };\n-\n-    \/** Compile-time function to construct a Field from a category and a field *\/\n-    template <int32_t category, int32_t field>\n-    static constexpr Field compress() {\n-        static_assert(category != 0, \"cannot use Undefined category in NumFieldUtils\");\n-        static_assert(category <= 0xf, \"only 4 bits for category\");\n-        static_assert(field <= 0xf, \"only 4 bits for field\");\n-        return static_cast<int8_t>((category << 4) | field);\n-    }\n-\n-    \/** Runtime inline function to unpack the category and field from the Field *\/\n-    static inline CategoryFieldPair expand(Field field) {\n-        if (field == UNUM_FIELD_COUNT) {\n-            return {UFIELD_CATEGORY_UNDEFINED, 0};\n-        }\n-        CategoryFieldPair ret = {\n-            (field >> 4),\n-            (field & 0xf)\n-        };\n-        if (ret.category == 0) {\n-            ret.category = UFIELD_CATEGORY_NUMBER;\n-        }\n-        return ret;\n-    }\n-\n-    static inline bool isNumericField(Field field) {\n-        int8_t category = field >> 4;\n-        return category == 0 || category == UFIELD_CATEGORY_NUMBER;\n-    }\n-};\n-\n@@ -80,1 +39,1 @@\n-inline int32_t insertDigitFromSymbols(NumberStringBuilder& output, int32_t index, int8_t digit,\n+inline int32_t insertDigitFromSymbols(FormattedStringBuilder& output, int32_t index, int8_t digit,\n@@ -93,2 +52,2 @@\n-inline bool unitIsNoUnit(const MeasureUnit& unit) {\n-    return uprv_strcmp(\"none\", unit.getType()) == 0;\n+inline bool unitIsBaseUnit(const MeasureUnit& unit) {\n+    return unit == MeasureUnit();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_utils.h","additions":4,"deletions":45,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -13,1 +13,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -31,2 +31,1 @@\n- * The DecimalQuantity is not currently being used by FormattedNumber, but at some point it could be used\n- * to add a toDecNumber() or similar method.\n+ * Exported as U_I18N_API for tests\n@@ -34,1 +33,1 @@\n-class UFormattedNumberData : public FormattedValueNumberStringBuilderImpl {\n+class U_I18N_API UFormattedNumberData : public FormattedValueStringBuilderImpl {\n@@ -36,1 +35,1 @@\n-    UFormattedNumberData() : FormattedValueNumberStringBuilderImpl(0) {}\n+    UFormattedNumberData() : FormattedValueStringBuilderImpl(kUndefinedField) {}\n@@ -39,0 +38,1 @@\n+    \/\/ The formatted quantity.\n@@ -40,0 +40,5 @@\n+\n+    \/\/ The output unit for the formatted quantity.\n+    \/\/ TODO(units,hugovdm): populate this correctly for the general case - it's\n+    \/\/ currently only implemented for the .usage() use case.\n+    MeasureUnit outputUnit;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/number_utypes.h","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -572,1 +572,1 @@\n-      LocalPointer<NumberFormat> cloneFmt((NumberFormat*)this->clone());\n+      LocalPointer<NumberFormat> cloneFmt(this->clone());\n@@ -627,1 +627,1 @@\n-      LocalPointer<NumberFormat> cloneFmt((NumberFormat*)this->clone());\n+      LocalPointer<NumberFormat> cloneFmt(this->clone());\n@@ -989,9 +989,13 @@\n-  ICULocaleService *service = getNumberFormatService();\n-  if (service) {\n-      NFFactory *tempnnf = new NFFactory(toAdopt);\n-      if (tempnnf != NULL) {\n-          return service->registerFactory(tempnnf, status);\n-      }\n-  }\n-  status = U_MEMORY_ALLOCATION_ERROR;\n-  return NULL;\n+    if (U_FAILURE(status)) {\n+        delete toAdopt;\n+        return nullptr;\n+    }\n+    ICULocaleService *service = getNumberFormatService();\n+    if (service) {\n+        NFFactory *tempnnf = new NFFactory(toAdopt);\n+        if (tempnnf != NULL) {\n+            return service->registerFactory(tempnnf, status);\n+        }\n+    }\n+    status = U_MEMORY_ALLOCATION_ERROR;\n+    return NULL;\n@@ -1058,1 +1062,1 @@\n-    NumberFormat *result = static_cast<NumberFormat *>((*shared)->clone());\n+    NumberFormat *result = (*shared)->clone();\n@@ -1365,1 +1369,1 @@\n-        static icu::UMutex nscacheMutex = U_MUTEX_INITIALIZER;\n+        static UMutex nscacheMutex;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numfmt.cpp","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -16,0 +16,1 @@\n+#include \"string_segment.h\"\n@@ -129,2 +130,2 @@\n-AffixPatternMatcher AffixPatternMatcherBuilder::build() {\n-    return AffixPatternMatcher(fMatchers, fMatchersLen, fPattern);\n+AffixPatternMatcher AffixPatternMatcherBuilder::build(UErrorCode& status) {\n+    return AffixPatternMatcher(fMatchers, fMatchersLen, fPattern, status);\n@@ -211,1 +212,1 @@\n-    return builder.build();\n+    return builder.build(status);\n@@ -215,2 +216,3 @@\n-                                         const UnicodeString& pattern)\n-        : ArraySeriesMatcher(matchers, matchersLen), fPattern(pattern) {}\n+                                         const UnicodeString& pattern, UErrorCode& status)\n+    : ArraySeriesMatcher(matchers, matchersLen), fPattern(pattern, status) {\n+}\n@@ -273,2 +275,0 @@\n-    UNumberSignDisplay signDisplay = (0 != (parseFlags & PARSE_FLAG_PLUS_SIGN_ALLOWED)) ? UNUM_SIGN_ALWAYS\n-                                                                                        : UNUM_SIGN_AUTO;\n@@ -283,1 +283,13 @@\n-    for (int8_t signum = 1; signum >= -1; signum--) {\n+    for (int8_t typeInt = 0; typeInt < PATTERN_SIGN_TYPE_COUNT; typeInt++) {\n+        auto type = static_cast<PatternSignType>(typeInt);\n+\n+        \/\/ Skip affixes in some cases\n+        if (type == PATTERN_SIGN_TYPE_POS\n+                && 0 != (parseFlags & PARSE_FLAG_PLUS_SIGN_ALLOWED)) {\n+            continue;\n+        }\n+        if (type == PATTERN_SIGN_TYPE_POS_SIGN\n+                && 0 == (parseFlags & PARSE_FLAG_PLUS_SIGN_ALLOWED)) {\n+            continue;\n+        }\n+\n@@ -287,1 +299,1 @@\n-                patternInfo, true, signum, signDisplay, StandardPlural::OTHER, false, sb);\n+                patternInfo, true, type, StandardPlural::OTHER, false, sb);\n@@ -296,1 +308,1 @@\n-                patternInfo, false, signum, signDisplay, StandardPlural::OTHER, false, sb);\n+                patternInfo, false, type, StandardPlural::OTHER, false, sb);\n@@ -302,1 +314,1 @@\n-        if (signum == 1) {\n+        if (type == PATTERN_SIGN_TYPE_POS) {\n@@ -311,1 +323,1 @@\n-        int flags = (signum == -1) ? FLAG_NEGATIVE : 0;\n+        int flags = (type == PATTERN_SIGN_TYPE_NEG) ? FLAG_NEGATIVE : 0;\n@@ -318,1 +330,1 @@\n-            if (signum == 1 || !equals(prefix, posPrefix)) {\n+            if (type == PATTERN_SIGN_TYPE_POS || !equals(prefix, posPrefix)) {\n@@ -321,1 +333,1 @@\n-            if (signum == 1 || !equals(suffix, posSuffix)) {\n+            if (type == PATTERN_SIGN_TYPE_POS || !equals(suffix, posSuffix)) {\n@@ -438,25 +450,0 @@\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_affixes.cpp","additions":26,"deletions":39,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-class CodePointMatcher : public NumberParseMatcher, public UMemory {\n+class U_I18N_API CodePointMatcher : public NumberParseMatcher, public UMemory {\n@@ -131,1 +131,1 @@\n-    AffixPatternMatcher build();\n+    AffixPatternMatcher build(UErrorCode& status);\n@@ -163,1 +163,2 @@\n-    AffixPatternMatcher(MatcherArray& matchers, int32_t matchersLen, const UnicodeString& pattern);\n+    AffixPatternMatcher(MatcherArray& matchers, int32_t matchersLen, const UnicodeString& pattern,\n+                        UErrorCode& status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_affixes.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -14,0 +14,1 @@\n+#include \"string_segment.h\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_compositions.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -17,0 +17,1 @@\n+#include \"string_segment.h\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_currency.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -19,0 +19,1 @@\n+#include \"string_segment.h\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_decimal.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    parser->fLocalMatchers.ignorables = {unisets::DEFAULT_IGNORABLES};\n+    parser->fLocalMatchers.ignorables = {parseFlags};\n@@ -86,11 +86,2 @@\n-    PropertiesAffixPatternProvider localPAPP;\n-    CurrencyPluralInfoAffixProvider localCPIAP;\n-    AffixPatternProvider* affixProvider;\n-    if (properties.currencyPluralInfo.fPtr.isNull()) {\n-        localPAPP.setTo(properties, status);\n-        affixProvider = &localPAPP;\n-    } else {\n-        localCPIAP.setTo(*properties.currencyPluralInfo.fPtr, properties, status);\n-        affixProvider = &localCPIAP;\n-    }\n-    if (affixProvider == nullptr || U_FAILURE(status)) { return nullptr; }\n+    AutoAffixPatternProvider affixProvider(properties, status);\n+    if (U_FAILURE(status)) { return nullptr; }\n@@ -102,1 +93,1 @@\n-    if (affixProvider == nullptr || U_FAILURE(status)) { return nullptr; }\n+    if (U_FAILURE(status)) { return nullptr; }\n@@ -117,0 +108,1 @@\n+        parseFlags |= PARSE_FLAG_STRICT_IGNORABLES;\n@@ -123,1 +115,1 @@\n-    if (parseCurrency || affixProvider->hasCurrencySign()) {\n+    if (parseCurrency || affixProvider.get().hasCurrencySign()) {\n@@ -132,2 +124,1 @@\n-    parser->fLocalMatchers.ignorables = {\n-            isStrict ? unisets::STRICT_IGNORABLES : unisets::DEFAULT_IGNORABLES};\n+    parser->fLocalMatchers.ignorables = {parseFlags};\n@@ -146,1 +137,1 @@\n-            *affixProvider, *parser, ignorables, parseFlags, status);\n+            affixProvider.get(), *parser, ignorables, parseFlags, status);\n@@ -152,1 +143,1 @@\n-    if (parseCurrency || affixProvider->hasCurrencySign()) {\n+    if (parseCurrency || affixProvider.get().hasCurrencySign()) {\n@@ -162,1 +153,1 @@\n-    if (!isStrict && affixProvider->containsSymbolType(AffixPatternType::TYPE_PERCENT, status)) {\n+    if (!isStrict && affixProvider.get().containsSymbolType(AffixPatternType::TYPE_PERCENT, status)) {\n@@ -165,1 +156,1 @@\n-    if (!isStrict && affixProvider->containsSymbolType(AffixPatternType::TYPE_PERMILLE, status)) {\n+    if (!isStrict && affixProvider.get().containsSymbolType(AffixPatternType::TYPE_PERMILLE, status)) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_impl.cpp","additions":11,"deletions":20,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -21,0 +21,1 @@\n+#include \"string_segment.h\"\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_impl.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -14,0 +14,1 @@\n+#include \"string_segment.h\"\n@@ -76,1 +77,1 @@\n-    if (quantity.isZero() && quantity.isNegative()) {\n+    if (quantity.isZeroish() && quantity.isNegative()) {\n@@ -109,1 +110,1 @@\n-    if (quantity.isZero() && quantity.isNegative() && !integerOnly) {\n+    if (quantity.isZeroish() && quantity.isNegative() && !integerOnly) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_parsednumber.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -15,0 +15,1 @@\n+#include \"string_segment.h\"\n@@ -36,1 +37,2 @@\n-          fExponentMatcher(dfs, grouper, PARSE_FLAG_INTEGER_ONLY | PARSE_FLAG_GROUPING_DISABLED) {\n+          fExponentMatcher(dfs, grouper, PARSE_FLAG_INTEGER_ONLY | PARSE_FLAG_GROUPING_DISABLED),\n+          fIgnorablesMatcher(PARSE_FLAG_STRICT_IGNORABLES) {\n@@ -66,2 +68,3 @@\n-    int overlap1 = segment.getCommonPrefixLength(fExponentSeparatorString);\n-    if (overlap1 == fExponentSeparatorString.length()) {\n+    int32_t initialOffset = segment.getOffset();\n+    int32_t overlap = segment.getCommonPrefixLength(fExponentSeparatorString);\n+    if (overlap == fExponentSeparatorString.length()) {\n@@ -71,1 +74,11 @@\n-        if (segment.length() == overlap1) {\n+        if (segment.length() == overlap) {\n+            return true;\n+        }\n+        segment.adjustOffset(overlap);\n+\n+        \/\/ Allow ignorables before the sign.\n+        \/\/ Note: call site is guarded by the segment.length() check above.\n+        \/\/ Note: the ignorables matcher should not touch the result.\n+        fIgnorablesMatcher.match(segment, result, status);\n+        if (segment.length() == 0) {\n+            segment.setOffset(initialOffset);\n@@ -74,1 +87,0 @@\n-        segment.adjustOffset(overlap1);\n@@ -84,5 +96,4 @@\n-            \/\/ Note: call site is guarded with startsWith, which returns false on empty string\n-            int32_t overlap2 = segment.getCommonPrefixLength(fCustomMinusSign);\n-            if (overlap2 != fCustomMinusSign.length()) {\n-                \/\/ Partial custom sign match; un-match the exponent separator.\n-                segment.adjustOffset(-overlap1);\n+            overlap = segment.getCommonPrefixLength(fCustomMinusSign);\n+            if (overlap != fCustomMinusSign.length()) {\n+                \/\/ Partial custom sign match\n+                segment.setOffset(initialOffset);\n@@ -92,1 +103,1 @@\n-            segment.adjustOffset(overlap2);\n+            segment.adjustOffset(overlap);\n@@ -94,5 +105,4 @@\n-            \/\/ Note: call site is guarded with startsWith, which returns false on empty string\n-            int32_t overlap2 = segment.getCommonPrefixLength(fCustomPlusSign);\n-            if (overlap2 != fCustomPlusSign.length()) {\n-                \/\/ Partial custom sign match; un-match the exponent separator.\n-                segment.adjustOffset(-overlap1);\n+            overlap = segment.getCommonPrefixLength(fCustomPlusSign);\n+            if (overlap != fCustomPlusSign.length()) {\n+                \/\/ Partial custom sign match\n+                segment.setOffset(initialOffset);\n@@ -101,1 +111,16 @@\n-            segment.adjustOffset(overlap2);\n+            segment.adjustOffset(overlap);\n+        }\n+\n+        \/\/ Return true if the segment is empty.\n+        if (segment.length() == 0) {\n+            segment.setOffset(initialOffset);\n+            return true;\n+        }\n+\n+        \/\/ Allow ignorables after the sign.\n+        \/\/ Note: call site is guarded by the segment.length() check above.\n+        \/\/ Note: the ignorables matcher should not touch the result.\n+        fIgnorablesMatcher.match(segment, result, status);\n+        if (segment.length() == 0) {\n+            segment.setOffset(initialOffset);\n+            return true;\n@@ -115,2 +140,2 @@\n-            \/\/ No exponent digits were matched; un-match the exponent separator.\n-            segment.adjustOffset(-overlap1);\n+            \/\/ No exponent digits were matched\n+            segment.setOffset(initialOffset);\n@@ -120,1 +145,1 @@\n-    } else if (overlap1 == segment.length()) {\n+    } else if (overlap == segment.length()) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_scientific.cpp","additions":45,"deletions":20,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -12,0 +12,1 @@\n+#include \"numparse_symbols.h\"\n@@ -35,0 +36,1 @@\n+    IgnorablesMatcher fIgnorablesMatcher;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_scientific.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/\/ © 2018 and later: Unicode, Inc. and others.\n-\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n-\n-#include \"unicode\/utypes.h\"\n-\n-#if !UCONFIG_NO_FORMATTING\n-#ifndef __NUMPARSE_STRINGSEGMENT_H__\n-#define __NUMPARSE_STRINGSEGMENT_H__\n-\n-#include \"numparse_types.h\"\n-#include \"number_types.h\"\n-#include \"unicode\/unistr.h\"\n-\n-U_NAMESPACE_BEGIN\n-namespace numparse {\n-namespace impl {\n-\n-\n-} \/\/ namespace impl\n-} \/\/ namespace numparse\n-U_NAMESPACE_END\n-\n-#endif \/\/__NUMPARSE_STRINGSEGMENT_H__\n-#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_stringsegment.h","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -15,0 +15,1 @@\n+#include \"string_segment.h\"\n@@ -71,2 +72,6 @@\n-IgnorablesMatcher::IgnorablesMatcher(unisets::Key key)\n-        : SymbolMatcher({}, key) {\n+IgnorablesMatcher::IgnorablesMatcher(parse_flags_t parseFlags) :\n+        SymbolMatcher(\n+            {},\n+            (0 != (parseFlags & PARSE_FLAG_STRICT_IGNORABLES)) ?\n+                unisets::STRICT_IGNORABLES :\n+                unisets::DEFAULT_IGNORABLES) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_symbols.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    IgnorablesMatcher(unisets::Key key);\n+    IgnorablesMatcher(parse_flags_t parseFlags);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_symbols.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,0 +12,1 @@\n+#include \"string_segment.h\"\n@@ -13,1 +14,2 @@\n-U_NAMESPACE_BEGIN namespace numparse {\n+U_NAMESPACE_BEGIN\n+namespace numparse {\n@@ -17,1 +19,0 @@\n-class StringSegment;\n@@ -53,0 +54,1 @@\n+    PARSE_FLAG_STRICT_IGNORABLES = 0x8000,\n@@ -65,2 +67,3 @@\n-    CompactUnicodeString(const UnicodeString& text)\n-            : fBuffer(text.length() + 1) {\n+    CompactUnicodeString(const UnicodeString& text, UErrorCode& status)\n+            : fBuffer(text.length() + 1, status) {\n+        if (U_FAILURE(status)) { return; }\n@@ -72,1 +75,1 @@\n-        return UnicodeString(TRUE, fBuffer.getAlias(), -1);\n+        return UnicodeString(true, fBuffer.getAlias(), -1);\n@@ -172,109 +175,0 @@\n-\/**\n- * A mutable class allowing for a String with a variable offset and length. The charAt, length, and\n- * subSequence methods all operate relative to the fixed offset into the String.\n- *\n- * @author sffc\n- *\/\n-\/\/ Exported as U_I18N_API for tests\n-class U_I18N_API StringSegment : public UMemory {\n-  public:\n-    StringSegment(const UnicodeString& str, bool ignoreCase);\n-\n-    int32_t getOffset() const;\n-\n-    void setOffset(int32_t start);\n-\n-    \/**\n-     * Equivalent to <code>setOffset(getOffset()+delta)<\/code>.\n-     *\n-     * <p>\n-     * This method is usually called by a Matcher to register that a char was consumed. If the char is\n-     * strong (it usually is, except for things like whitespace), follow this with a call to\n-     * {@link ParsedNumber#setCharsConsumed}. For more information on strong chars, see that method.\n-     *\/\n-    void adjustOffset(int32_t delta);\n-\n-    \/**\n-     * Adjusts the offset by the width of the current code point, either 1 or 2 chars.\n-     *\/\n-    void adjustOffsetByCodePoint();\n-\n-    void setLength(int32_t length);\n-\n-    void resetLength();\n-\n-    int32_t length() const;\n-\n-    char16_t charAt(int32_t index) const;\n-\n-    UChar32 codePointAt(int32_t index) const;\n-\n-    UnicodeString toUnicodeString() const;\n-\n-    const UnicodeString toTempUnicodeString() const;\n-\n-    \/**\n-     * Returns the first code point in the string segment, or -1 if the string starts with an invalid\n-     * code point.\n-     *\n-     * <p>\n-     * <strong>Important:<\/strong> Most of the time, you should use {@link #matches}, which handles case\n-     * folding logic, instead of this method.\n-     *\/\n-    UChar32 getCodePoint() const;\n-\n-    \/**\n-     * Returns true if the first code point of this StringSegment equals the given code point.\n-     *\n-     * <p>\n-     * This method will perform case folding if case folding is enabled for the parser.\n-     *\/\n-    bool startsWith(UChar32 otherCp) const;\n-\n-    \/**\n-     * Returns true if the first code point of this StringSegment is in the given UnicodeSet.\n-     *\/\n-    bool startsWith(const UnicodeSet& uniset) const;\n-\n-    \/**\n-     * Returns true if there is at least one code point of overlap between this StringSegment and the\n-     * given UnicodeString.\n-     *\/\n-    bool startsWith(const UnicodeString& other) const;\n-\n-    \/**\n-     * Returns the length of the prefix shared by this StringSegment and the given CharSequence. For\n-     * example, if this string segment is \"aab\", and the char sequence is \"aac\", this method returns 2,\n-     * since the first 2 characters are the same.\n-     *\n-     * <p>\n-     * This method only returns offsets along code point boundaries.\n-     *\n-     * <p>\n-     * This method will perform case folding if case folding was enabled in the constructor.\n-     *\n-     * <p>\n-     * IMPORTANT: The given UnicodeString must not be empty! It is the caller's responsibility to check.\n-     *\/\n-    int32_t getCommonPrefixLength(const UnicodeString& other);\n-\n-    \/**\n-     * Like {@link #getCommonPrefixLength}, but never performs case folding, even if case folding is\n-     * enabled for the parser.\n-     *\/\n-    int32_t getCaseSensitivePrefixLength(const UnicodeString& other);\n-\n-    bool operator==(const UnicodeString& other) const;\n-\n-  private:\n-    const UnicodeString& fStr;\n-    int32_t fStart;\n-    int32_t fEnd;\n-    bool fFoldCase;\n-\n-    int32_t getPrefixLengthInternal(const UnicodeString& other, bool foldCase);\n-\n-    static bool codePointsEqual(UChar32 cp1, UChar32 cp2, bool foldCase);\n-};\n-\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_types.h","additions":8,"deletions":114,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -0,0 +1,193 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+\/\/ Allow implicit conversion from char16_t* to UnicodeString for this file:\n+\/\/ Helpful in toString methods and elsewhere.\n+#define UNISTR_FROM_STRING_EXPLICIT\n+\n+#include \"fphdlimp.h\"\n+#include \"number_utypes.h\"\n+#include \"numparse_types.h\"\n+#include \"formattedval_impl.h\"\n+#include \"numrange_impl.h\"\n+#include \"number_decnum.h\"\n+#include \"unicode\/numberrangeformatter.h\"\n+#include \"unicode\/unumberrangeformatter.h\"\n+\n+using namespace icu;\n+using namespace icu::number;\n+using namespace icu::number::impl;\n+\n+\n+U_NAMESPACE_BEGIN\n+namespace number {\n+namespace impl {\n+\n+\/**\n+ * Implementation class for UNumberRangeFormatter. Wraps a LocalizedRangeNumberFormatter.\n+ *\/\n+struct UNumberRangeFormatterData : public UMemory,\n+        \/\/ Magic number as ASCII == \"NRF\" (NumberRangeFormatter)\n+        public IcuCApiHelper<UNumberRangeFormatter, UNumberRangeFormatterData, 0x4E524600> {\n+    LocalizedNumberRangeFormatter fFormatter;\n+};\n+\n+struct UFormattedNumberRangeImpl;\n+\n+\/\/ Magic number as ASCII == \"FDN\" (FormatteDNumber)\n+typedef IcuCApiHelper<UFormattedNumberRange, UFormattedNumberRangeImpl, 0x46444E00> UFormattedNumberRangeApiHelper;\n+\n+struct UFormattedNumberRangeImpl : public UFormattedValueImpl, public UFormattedNumberRangeApiHelper {\n+    UFormattedNumberRangeImpl();\n+    ~UFormattedNumberRangeImpl();\n+\n+    FormattedNumberRange fImpl;\n+    UFormattedNumberRangeData fData;\n+};\n+\n+UFormattedNumberRangeImpl::UFormattedNumberRangeImpl()\n+        : fImpl(&fData) {\n+    fFormattedValue = &fImpl;\n+}\n+\n+UFormattedNumberRangeImpl::~UFormattedNumberRangeImpl() {\n+    \/\/ Disown the data from fImpl so it doesn't get deleted twice\n+    fImpl.fData = nullptr;\n+}\n+\n+} \/\/ namespace impl\n+} \/\/ namespace number\n+U_NAMESPACE_END\n+\n+\n+UPRV_FORMATTED_VALUE_CAPI_NO_IMPLTYPE_AUTO_IMPL(\n+    UFormattedNumberRange,\n+    UFormattedNumberRangeImpl,\n+    UFormattedNumberRangeApiHelper,\n+    unumrf)\n+\n+\n+const UFormattedNumberRangeData* number::impl::validateUFormattedNumberRange(\n+        const UFormattedNumberRange* uresult, UErrorCode& status) {\n+    auto* result = UFormattedNumberRangeApiHelper::validate(uresult, status);\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+    return &result->fData;\n+}\n+\n+\n+U_CAPI UNumberRangeFormatter* U_EXPORT2\n+unumrf_openForSkeletonWithCollapseAndIdentityFallback(\n+        const UChar* skeleton,\n+        int32_t skeletonLen,\n+        UNumberRangeCollapse collapse,\n+        UNumberRangeIdentityFallback identityFallback,\n+        const char* locale,\n+        UParseError* perror,\n+        UErrorCode* ec) {\n+    auto* impl = new UNumberRangeFormatterData();\n+    if (impl == nullptr) {\n+        *ec = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n+    \/\/ Readonly-alias constructor (first argument is whether we are NUL-terminated)\n+    UnicodeString skeletonString(skeletonLen == -1, skeleton, skeletonLen);\n+    impl->fFormatter = NumberRangeFormatter::withLocale(locale)\n+        .numberFormatterBoth(NumberFormatter::forSkeleton(skeletonString, *perror, *ec))\n+        .collapse(collapse)\n+        .identityFallback(identityFallback);\n+    return impl->exportForC();\n+}\n+\n+U_CAPI void U_EXPORT2\n+unumrf_formatDoubleRange(\n+        const UNumberRangeFormatter* uformatter,\n+        double first,\n+        double second,\n+        UFormattedNumberRange* uresult,\n+        UErrorCode* ec) {\n+    const UNumberRangeFormatterData* formatter = UNumberRangeFormatterData::validate(uformatter, *ec);\n+    auto* result = UFormattedNumberRangeApiHelper::validate(uresult, *ec);\n+    if (U_FAILURE(*ec)) { return; }\n+\n+    result->fData.getStringRef().clear();\n+    result->fData.quantity1.setToDouble(first);\n+    result->fData.quantity2.setToDouble(second);\n+    formatter->fFormatter.formatImpl(result->fData, first == second, *ec);\n+}\n+\n+U_CAPI void U_EXPORT2\n+unumrf_formatDecimalRange(\n+        const UNumberRangeFormatter* uformatter,\n+        const char* first, int32_t firstLen,\n+        const char* second, int32_t secondLen,\n+        UFormattedNumberRange* uresult,\n+        UErrorCode* ec) {\n+    const UNumberRangeFormatterData* formatter = UNumberRangeFormatterData::validate(uformatter, *ec);\n+    auto* result = UFormattedNumberRangeApiHelper::validate(uresult, *ec);\n+    if (U_FAILURE(*ec)) { return; }\n+\n+    result->fData.getStringRef().clear();\n+    result->fData.quantity1.setToDecNumber({first, firstLen}, *ec);\n+    result->fData.quantity2.setToDecNumber({second, secondLen}, *ec);\n+    formatter->fFormatter.formatImpl(result->fData, first == second, *ec);\n+}\n+\n+U_CAPI UNumberRangeIdentityResult U_EXPORT2\n+unumrf_resultGetIdentityResult(\n+        const UFormattedNumberRange* uresult,\n+        UErrorCode* ec) {\n+    auto* result = UFormattedNumberRangeApiHelper::validate(uresult, *ec);\n+    if (U_FAILURE(*ec)) {\n+        return UNUM_IDENTITY_RESULT_COUNT;\n+    }\n+    return result->fData.identityResult;\n+}\n+\n+U_CAPI int32_t U_EXPORT2\n+unumrf_resultGetFirstDecimalNumber(\n+        const UFormattedNumberRange* uresult,\n+        char* dest,\n+        int32_t destCapacity,\n+        UErrorCode* ec) {\n+    const auto* result = UFormattedNumberRangeApiHelper::validate(uresult, *ec);\n+    if (U_FAILURE(*ec)) {\n+        return 0;\n+    }\n+    DecNum decnum;\n+    return result->fData.quantity1.toDecNum(decnum, *ec)\n+        .toCharString(*ec)\n+        .extract(dest, destCapacity, *ec);\n+}\n+\n+U_CAPI int32_t U_EXPORT2\n+unumrf_resultGetSecondDecimalNumber(\n+        const UFormattedNumberRange* uresult,\n+        char* dest,\n+        int32_t destCapacity,\n+        UErrorCode* ec) {\n+    const auto* result = UFormattedNumberRangeApiHelper::validate(uresult, *ec);\n+    if (U_FAILURE(*ec)) {\n+        return 0;\n+    }\n+    DecNum decnum;\n+    return result->fData.quantity2\n+        .toDecNum(decnum, *ec)\n+        .toCharString(*ec)\n+        .extract(dest, destCapacity, *ec);\n+}\n+\n+U_CAPI void U_EXPORT2\n+unumrf_close(UNumberRangeFormatter* f) {\n+    UErrorCode localStatus = U_ZERO_ERROR;\n+    const UNumberRangeFormatterData* impl = UNumberRangeFormatterData::validate(f, localStatus);\n+    delete impl;\n+}\n+\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numrange_capi.cpp","additions":193,"deletions":0,"binary":false,"changes":193,"status":"added"},{"patch":"@@ -15,0 +15,1 @@\n+#include \"number_decnum.h\"\n@@ -378,41 +379,0 @@\n-UPRV_FORMATTED_VALUE_SUBCLASS_AUTO_IMPL(FormattedNumberRange)\n-\n-#define UPRV_NOARG\n-\n-UBool FormattedNumberRange::nextFieldPosition(FieldPosition& fieldPosition, UErrorCode& status) const {\n-    UPRV_FORMATTED_VALUE_METHOD_GUARD(FALSE)\n-    \/\/ NOTE: MSVC sometimes complains when implicitly converting between bool and UBool\n-    return fData->getStringRef().nextFieldPosition(fieldPosition, status) ? TRUE : FALSE;\n-}\n-\n-void FormattedNumberRange::getAllFieldPositions(FieldPositionIterator& iterator, UErrorCode& status) const {\n-    FieldPositionIteratorHandler fpih(&iterator, status);\n-    getAllFieldPositionsImpl(fpih, status);\n-}\n-\n-void FormattedNumberRange::getAllFieldPositionsImpl(\n-        FieldPositionIteratorHandler& fpih, UErrorCode& status) const {\n-    UPRV_FORMATTED_VALUE_METHOD_GUARD(UPRV_NOARG)\n-    fData->getStringRef().getAllFieldPositions(fpih, status);\n-}\n-\n-UnicodeString FormattedNumberRange::getFirstDecimal(UErrorCode& status) const {\n-    UPRV_FORMATTED_VALUE_METHOD_GUARD(ICU_Utility::makeBogusString())\n-    return fData->quantity1.toScientificString();\n-}\n-\n-UnicodeString FormattedNumberRange::getSecondDecimal(UErrorCode& status) const {\n-    UPRV_FORMATTED_VALUE_METHOD_GUARD(ICU_Utility::makeBogusString())\n-    return fData->quantity2.toScientificString();\n-}\n-\n-UNumberRangeIdentityResult FormattedNumberRange::getIdentityResult(UErrorCode& status) const {\n-    UPRV_FORMATTED_VALUE_METHOD_GUARD(UNUM_IDENTITY_RESULT_NOT_EQUAL)\n-    return fData->identityResult;\n-}\n-\n-\n-UFormattedNumberRangeData::~UFormattedNumberRangeData() = default;\n-\n-\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numrange_fluent.cpp","additions":1,"deletions":41,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -15,0 +15,1 @@\n+#include \"pluralranges.h\"\n@@ -109,52 +110,0 @@\n-class PluralRangesDataSink : public ResourceSink {\n-  public:\n-    PluralRangesDataSink(StandardPluralRanges& output) : fOutput(output) {}\n-\n-    void put(const char* \/*key*\/, ResourceValue& value, UBool \/*noFallback*\/, UErrorCode& status) U_OVERRIDE {\n-        ResourceArray entriesArray = value.getArray(status);\n-        if (U_FAILURE(status)) { return; }\n-        fOutput.setCapacity(entriesArray.getSize());\n-        for (int i = 0; entriesArray.getValue(i, value); i++) {\n-            ResourceArray pluralFormsArray = value.getArray(status);\n-            if (U_FAILURE(status)) { return; }\n-            pluralFormsArray.getValue(0, value);\n-            StandardPlural::Form first = StandardPlural::fromString(value.getUnicodeString(status), status);\n-            if (U_FAILURE(status)) { return; }\n-            pluralFormsArray.getValue(1, value);\n-            StandardPlural::Form second = StandardPlural::fromString(value.getUnicodeString(status), status);\n-            if (U_FAILURE(status)) { return; }\n-            pluralFormsArray.getValue(2, value);\n-            StandardPlural::Form result = StandardPlural::fromString(value.getUnicodeString(status), status);\n-            if (U_FAILURE(status)) { return; }\n-            fOutput.addPluralRange(first, second, result);\n-        }\n-    }\n-\n-  private:\n-    StandardPluralRanges& fOutput;\n-};\n-\n-void getPluralRangesData(const Locale& locale, StandardPluralRanges& output, UErrorCode& status) {\n-    if (U_FAILURE(status)) { return; }\n-    LocalUResourceBundlePointer rb(ures_openDirect(nullptr, \"pluralRanges\", &status));\n-    if (U_FAILURE(status)) { return; }\n-\n-    CharString dataPath;\n-    dataPath.append(\"locales\/\", -1, status);\n-    dataPath.append(locale.getLanguage(), -1, status);\n-    if (U_FAILURE(status)) { return; }\n-    int32_t setLen;\n-    \/\/ Not all languages are covered: fail gracefully\n-    UErrorCode internalStatus = U_ZERO_ERROR;\n-    const UChar* set = ures_getStringByKeyWithFallback(rb.getAlias(), dataPath.data(), &setLen, &internalStatus);\n-    if (U_FAILURE(internalStatus)) { return; }\n-\n-    dataPath.clear();\n-    dataPath.append(\"rules\/\", -1, status);\n-    dataPath.appendInvariantChars(set, setLen, status);\n-    if (U_FAILURE(status)) { return; }\n-    PluralRangesDataSink sink(output);\n-    ures_getAllItemsWithFallback(rb.getAlias(), dataPath.data(), sink, status);\n-    if (U_FAILURE(status)) { return; }\n-}\n-\n@@ -164,31 +113,0 @@\n-void StandardPluralRanges::initialize(const Locale& locale, UErrorCode& status) {\n-    getPluralRangesData(locale, *this, status);\n-}\n-\n-void StandardPluralRanges::addPluralRange(\n-        StandardPlural::Form first,\n-        StandardPlural::Form second,\n-        StandardPlural::Form result) {\n-    U_ASSERT(fTriplesLen < fTriples.getCapacity());\n-    fTriples[fTriplesLen] = {first, second, result};\n-    fTriplesLen++;\n-}\n-\n-void StandardPluralRanges::setCapacity(int32_t length) {\n-    if (length > fTriples.getCapacity()) {\n-        fTriples.resize(length, 0);\n-    }\n-}\n-\n-StandardPlural::Form\n-StandardPluralRanges::resolve(StandardPlural::Form first, StandardPlural::Form second) const {\n-    for (int32_t i=0; i<fTriplesLen; i++) {\n-        const auto& triple = fTriples[i];\n-        if (triple.first == first && triple.second == second) {\n-            return triple.result;\n-        }\n-    }\n-    \/\/ Default fallback\n-    return StandardPlural::OTHER;\n-}\n-\n@@ -213,1 +131,1 @@\n-    fApproximatelyModifier = {data.approximatelyPattern, UNUM_FIELD_COUNT, false};\n+    fApproximatelyModifier = {data.approximatelyPattern, kUndefinedField, false};\n@@ -216,1 +134,1 @@\n-    fPluralRanges.initialize(macros.locale, status);\n+    fPluralRanges = StandardPluralRanges::forLocale(macros.locale, status);\n@@ -371,1 +289,2 @@\n-                if (!mm->containsField(UNUM_CURRENCY_FIELD) && !mm->containsField(UNUM_PERCENT_FIELD)) {\n+                if (!mm->containsField({UFIELD_CATEGORY_NUMBER, UNUM_CURRENCY_FIELD})\n+                        && !mm->containsField({UFIELD_CATEGORY_NUMBER, UNUM_PERCENT_FIELD})) {\n@@ -400,1 +319,1 @@\n-    NumberStringBuilder& string = data.getStringRef();\n+    FormattedStringBuilder& string = data.getStringRef();\n@@ -419,1 +338,1 @@\n-        UNUM_FIELD_COUNT,\n+        kUndefinedField,\n@@ -437,1 +356,1 @@\n-                lengthInfix += string.insertCodePoint(UPRV_INDEX_1, u'\\u0020', UNUM_FIELD_COUNT, status);\n+                lengthInfix += string.insertCodePoint(UPRV_INDEX_1, u'\\u0020', kUndefinedField, status);\n@@ -440,1 +359,1 @@\n-                lengthInfix += string.insertCodePoint(UPRV_INDEX_2, u'\\u0020', UNUM_FIELD_COUNT, status);\n+                lengthInfix += string.insertCodePoint(UPRV_INDEX_2, u'\\u0020', kUndefinedField, status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numrange_impl.cpp","additions":9,"deletions":90,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -16,1 +16,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -18,0 +18,1 @@\n+#include \"pluralranges.h\"\n@@ -32,1 +33,1 @@\n-class UFormattedNumberRangeData : public FormattedValueNumberStringBuilderImpl {\n+class UFormattedNumberRangeData : public FormattedValueStringBuilderImpl {\n@@ -34,1 +35,1 @@\n-    UFormattedNumberRangeData() : FormattedValueNumberStringBuilderImpl(0) {}\n+    UFormattedNumberRangeData() : FormattedValueStringBuilderImpl(kUndefinedField) {}\n@@ -43,30 +44,0 @@\n-class StandardPluralRanges : public UMemory {\n-  public:\n-    void initialize(const Locale& locale, UErrorCode& status);\n-    StandardPlural::Form resolve(StandardPlural::Form first, StandardPlural::Form second) const;\n-\n-    \/** Used for data loading. *\/\n-    void addPluralRange(\n-        StandardPlural::Form first,\n-        StandardPlural::Form second,\n-        StandardPlural::Form result);\n-\n-    \/** Used for data loading. *\/\n-    void setCapacity(int32_t length);\n-\n-  private:\n-    struct StandardPluralRangeTriple {\n-        StandardPlural::Form first;\n-        StandardPlural::Form second;\n-        StandardPlural::Form result;\n-    };\n-\n-    \/\/ TODO: An array is simple here, but it results in linear lookup time.\n-    \/\/ Certain locales have 20-30 entries in this list.\n-    \/\/ Consider changing to a smarter data structure.\n-    typedef MaybeStackArray<StandardPluralRangeTriple, 3> PluralRangeTriples;\n-    PluralRangeTriples fTriples;\n-    int32_t fTriplesLen = 0;\n-};\n-\n-\n@@ -108,0 +79,5 @@\n+\/** Helper function used in upluralrules.cpp *\/\n+const UFormattedNumberRangeData* validateUFormattedNumberRange(\n+    const UFormattedNumberRange* uresult, UErrorCode& status);\n+\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numrange_impl.h","additions":9,"deletions":33,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#define DEFAULT_DIGITS UNICODE_STRING_SIMPLE(\"0123456789\");\n+#define DEFAULT_DIGITS UNICODE_STRING_SIMPLE(\"0123456789\")\n@@ -121,1 +121,1 @@\n-    char buffer[ULOC_KEYWORDS_CAPACITY];\n+    char buffer[ULOC_KEYWORDS_CAPACITY] = \"\";\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numsys.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -200,5 +200,0 @@\n-        const UChar *ruleIdUStr = ures_getStringByKey(res, kFINALRULE, &len, &ec);\n-        ures_getByKey(res, kFINALRAW, r.getAlias(), &ec);\n-        int32_t ruleRaw = ures_getInt(r.getAlias(), &ec);\n-        ures_getByKey(res, kFINALYEAR, r.getAlias(), &ec);\n-        int32_t ruleYear = ures_getInt(r.getAlias(), &ec);\n@@ -206,19 +201,25 @@\n-            UnicodeString ruleID(TRUE, ruleIdUStr, len);\n-            UResourceBundle *rule = TimeZone::loadRule(top, ruleID, NULL, ec);\n-            const int32_t *ruleData = ures_getIntVector(rule, &len, &ec);\n-            if (U_SUCCESS(ec) && len == 11) {\n-                UnicodeString emptyStr;\n-                finalZone = new SimpleTimeZone(\n-                    ruleRaw * U_MILLIS_PER_SECOND,\n-                    emptyStr,\n-                    (int8_t)ruleData[0], (int8_t)ruleData[1], (int8_t)ruleData[2],\n-                    ruleData[3] * U_MILLIS_PER_SECOND,\n-                    (SimpleTimeZone::TimeMode) ruleData[4],\n-                    (int8_t)ruleData[5], (int8_t)ruleData[6], (int8_t)ruleData[7],\n-                    ruleData[8] * U_MILLIS_PER_SECOND,\n-                    (SimpleTimeZone::TimeMode) ruleData[9],\n-                    ruleData[10] * U_MILLIS_PER_SECOND, ec);\n-                if (finalZone == NULL) {\n-                    ec = U_MEMORY_ALLOCATION_ERROR;\n-                } else {\n-                    finalStartYear = ruleYear;\n+            const UChar *ruleIdUStr = ures_getStringByKey(res, kFINALRULE, &len, &ec);\n+            ures_getByKey(res, kFINALRAW, r.getAlias(), &ec);\n+            int32_t ruleRaw = ures_getInt(r.getAlias(), &ec);\n+            ures_getByKey(res, kFINALYEAR, r.getAlias(), &ec);\n+            int32_t ruleYear = ures_getInt(r.getAlias(), &ec);\n+            if (U_SUCCESS(ec)) {\n+                UnicodeString ruleID(TRUE, ruleIdUStr, len);\n+                UResourceBundle *rule = TimeZone::loadRule(top, ruleID, NULL, ec);\n+                const int32_t *ruleData = ures_getIntVector(rule, &len, &ec);\n+                if (U_SUCCESS(ec) && len == 11) {\n+                    UnicodeString emptyStr;\n+                    finalZone = new SimpleTimeZone(\n+                        ruleRaw * U_MILLIS_PER_SECOND,\n+                        emptyStr,\n+                        (int8_t)ruleData[0], (int8_t)ruleData[1], (int8_t)ruleData[2],\n+                        ruleData[3] * U_MILLIS_PER_SECOND,\n+                        (SimpleTimeZone::TimeMode) ruleData[4],\n+                        (int8_t)ruleData[5], (int8_t)ruleData[6], (int8_t)ruleData[7],\n+                        ruleData[8] * U_MILLIS_PER_SECOND,\n+                        (SimpleTimeZone::TimeMode) ruleData[9],\n+                        ruleData[10] * U_MILLIS_PER_SECOND, ec);\n+                    if (finalZone == NULL) {\n+                        ec = U_MEMORY_ALLOCATION_ERROR;\n+                    } else {\n+                        finalStartYear = ruleYear;\n@@ -226,5 +227,5 @@\n-                    \/\/ Note: Setting finalStartYear to the finalZone is problematic.  When a date is around\n-                    \/\/ year boundary, SimpleTimeZone may return false result when DST is observed at the\n-                    \/\/ beginning of year.  We could apply safe margin (day or two), but when one of recurrent\n-                    \/\/ rules falls around year boundary, it could return false result.  Without setting the\n-                    \/\/ start year, finalZone works fine around the year boundary of the start year.\n+                        \/\/ Note: Setting finalStartYear to the finalZone is problematic.  When a date is around\n+                        \/\/ year boundary, SimpleTimeZone may return false result when DST is observed at the\n+                        \/\/ beginning of year.  We could apply safe margin (day or two), but when one of recurrent\n+                        \/\/ rules falls around year boundary, it could return false result.  Without setting the\n+                        \/\/ start year, finalZone works fine around the year boundary of the start year.\n@@ -232,1 +233,1 @@\n-                    \/\/ finalZone->setStartYear(finalStartYear);\n+                        \/\/ finalZone->setStartYear(finalStartYear);\n@@ -235,1 +236,1 @@\n-                    \/\/ Compute the millis for Jan 1, 0:00 GMT of the finalYear\n+                        \/\/ Compute the millis for Jan 1, 0:00 GMT of the finalYear\n@@ -237,7 +238,10 @@\n-                    \/\/ Note: finalStartMillis is used for detecting either if\n-                    \/\/ historic transition data or finalZone to be used.  In an\n-                    \/\/ extreme edge case - for example, two transitions fall into\n-                    \/\/ small windows of time around the year boundary, this may\n-                    \/\/ result incorrect offset computation.  But I think it will\n-                    \/\/ never happen practically.  Yoshito - Feb 20, 2010\n-                    finalStartMillis = Grego::fieldsToDay(finalStartYear, 0, 1) * U_MILLIS_PER_DAY;\n+                        \/\/ Note: finalStartMillis is used for detecting either if\n+                        \/\/ historic transition data or finalZone to be used.  In an\n+                        \/\/ extreme edge case - for example, two transitions fall into\n+                        \/\/ small windows of time around the year boundary, this may\n+                        \/\/ result incorrect offset computation.  But I think it will\n+                        \/\/ never happen practically.  Yoshito - Feb 20, 2010\n+                        finalStartMillis = Grego::fieldsToDay(finalStartYear, 0, 1) * U_MILLIS_PER_DAY;\n+                    }\n+                } else {\n+                    ec = U_INVALID_FORMAT_ERROR;\n@@ -245,2 +249,4 @@\n-            } else {\n-                ec = U_INVALID_FORMAT_ERROR;\n+                ures_close(rule);\n+            } else if (ec == U_MISSING_RESOURCE_ERROR) {\n+                \/\/ No final zone\n+                ec = U_ZERO_ERROR;\n@@ -248,4 +254,0 @@\n-            ures_close(rule);\n-        } else if (ec == U_MISSING_RESOURCE_ERROR) {\n-            \/\/ No final zone\n-            ec = U_ZERO_ERROR;\n@@ -290,2 +292,1 @@\n-    finalZone = (other.finalZone != 0) ?\n-        (SimpleTimeZone*) other.finalZone->clone() : 0;\n+    finalZone = (other.finalZone != 0) ? other.finalZone->clone() : 0;\n@@ -322,1 +323,1 @@\n-TimeZone* OlsonTimeZone::clone() const {\n+OlsonTimeZone* OlsonTimeZone::clone() const {\n@@ -819,1 +820,1 @@\n-            finalZoneWithStartYear = (SimpleTimeZone*)finalZone->clone();\n+            finalZoneWithStartYear = finalZone->clone();\n@@ -840,1 +841,1 @@\n-            finalZoneWithStartYear = (SimpleTimeZone*)finalZone->clone();\n+            finalZoneWithStartYear = finalZone->clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/olsontz.cpp","additions":50,"deletions":49,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-    virtual TimeZone* clone() const;\n+    virtual OlsonTimeZone* clone() const;\n@@ -211,1 +211,1 @@\n-     * behavior, this method returns TRUE if DST is observed at any\n+     * behavior, this method returns true if DST is observed at any\n@@ -237,1 +237,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -247,1 +247,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -401,1 +401,1 @@\n-    UInitOnce           transitionRulesInitOnce;\n+    UInitOnce           transitionRulesInitOnce = U_INITONCE_INITIALIZER;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/olsontz.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-Calendar* PersianCalendar::clone() const {\n+PersianCalendar* PersianCalendar::clone() const {\n@@ -82,1 +82,1 @@\n-  :   Calendar(TimeZone::createDefault(), aLocale, success)\n+  :   Calendar(TimeZone::forLocaleOrDefault(aLocale), aLocale, success)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/persncal.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-  virtual Calendar* clone() const;\n+  virtual PersianCalendar* clone() const;\n@@ -298,1 +298,1 @@\n-   * Returns TRUE because the Persian Calendar does have a default century\n+   * Returns true because the Persian Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/persncal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,144 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+\/\/ Allow implicit conversion from char16_t* to UnicodeString for this file:\n+\/\/ Helpful in toString methods and elsewhere.\n+#define UNISTR_FROM_STRING_EXPLICIT\n+\n+#include \"unicode\/numberrangeformatter.h\"\n+#include \"pluralranges.h\"\n+#include \"uresimp.h\"\n+#include \"charstr.h\"\n+#include \"uassert.h\"\n+#include \"util.h\"\n+#include \"numrange_impl.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\n+namespace {\n+\n+class PluralRangesDataSink : public ResourceSink {\n+  public:\n+    PluralRangesDataSink(StandardPluralRanges& output) : fOutput(output) {}\n+\n+    void put(const char* \/*key*\/, ResourceValue& value, UBool \/*noFallback*\/, UErrorCode& status) U_OVERRIDE {\n+        ResourceArray entriesArray = value.getArray(status);\n+        if (U_FAILURE(status)) { return; }\n+        fOutput.setCapacity(entriesArray.getSize(), status);\n+        if (U_FAILURE(status)) { return; }\n+        for (int i = 0; entriesArray.getValue(i, value); i++) {\n+            ResourceArray pluralFormsArray = value.getArray(status);\n+            if (U_FAILURE(status)) { return; }\n+            if (pluralFormsArray.getSize() != 3) {\n+                status = U_RESOURCE_TYPE_MISMATCH;\n+                return;\n+            }\n+            pluralFormsArray.getValue(0, value);\n+            StandardPlural::Form first = StandardPlural::fromString(value.getUnicodeString(status), status);\n+            if (U_FAILURE(status)) { return; }\n+            pluralFormsArray.getValue(1, value);\n+            StandardPlural::Form second = StandardPlural::fromString(value.getUnicodeString(status), status);\n+            if (U_FAILURE(status)) { return; }\n+            pluralFormsArray.getValue(2, value);\n+            StandardPlural::Form result = StandardPlural::fromString(value.getUnicodeString(status), status);\n+            if (U_FAILURE(status)) { return; }\n+            fOutput.addPluralRange(first, second, result);\n+        }\n+    }\n+\n+  private:\n+    StandardPluralRanges& fOutput;\n+};\n+\n+void getPluralRangesData(const Locale& locale, StandardPluralRanges& output, UErrorCode& status) {\n+    LocalUResourceBundlePointer rb(ures_openDirect(nullptr, \"pluralRanges\", &status));\n+    if (U_FAILURE(status)) { return; }\n+\n+    CharString dataPath;\n+    dataPath.append(\"locales\/\", -1, status);\n+    dataPath.append(locale.getLanguage(), -1, status);\n+    if (U_FAILURE(status)) { return; }\n+    int32_t setLen;\n+    \/\/ Not all languages are covered: fail gracefully\n+    UErrorCode internalStatus = U_ZERO_ERROR;\n+    const UChar* set = ures_getStringByKeyWithFallback(rb.getAlias(), dataPath.data(), &setLen, &internalStatus);\n+    if (U_FAILURE(internalStatus)) { return; }\n+\n+    dataPath.clear();\n+    dataPath.append(\"rules\/\", -1, status);\n+    dataPath.appendInvariantChars(set, setLen, status);\n+    if (U_FAILURE(status)) { return; }\n+    PluralRangesDataSink sink(output);\n+    ures_getAllItemsWithFallback(rb.getAlias(), dataPath.data(), sink, status);\n+}\n+\n+} \/\/ namespace\n+\n+\n+StandardPluralRanges\n+StandardPluralRanges::forLocale(const Locale& locale, UErrorCode& status) {\n+    StandardPluralRanges result;\n+    getPluralRangesData(locale, result, status);\n+    return result;\n+}\n+\n+StandardPluralRanges\n+StandardPluralRanges::copy(UErrorCode& status) const {\n+    StandardPluralRanges result;\n+    if (fTriplesLen > result.fTriples.getCapacity()) {\n+        if (result.fTriples.resize(fTriplesLen) == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            return result;\n+        }\n+    }\n+    uprv_memcpy(result.fTriples.getAlias(),\n+        fTriples.getAlias(),\n+        fTriplesLen * sizeof(fTriples[0]));\n+    result.fTriplesLen = fTriplesLen;\n+    return result;\n+}\n+\n+LocalPointer<StandardPluralRanges>\n+StandardPluralRanges::toPointer(UErrorCode& status) && noexcept {\n+    return LocalPointer<StandardPluralRanges>(new StandardPluralRanges(std::move(*this)), status);\n+}\n+\n+void StandardPluralRanges::addPluralRange(\n+        StandardPlural::Form first,\n+        StandardPlural::Form second,\n+        StandardPlural::Form result) {\n+    U_ASSERT(fTriplesLen < fTriples.getCapacity());\n+    fTriples[fTriplesLen] = {first, second, result};\n+    fTriplesLen++;\n+}\n+\n+void StandardPluralRanges::setCapacity(int32_t length, UErrorCode& status) {\n+    if (U_FAILURE(status)) { return; }\n+    if (length > fTriples.getCapacity()) {\n+        if (fTriples.resize(length, 0) == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+        }\n+    }\n+}\n+\n+StandardPlural::Form\n+StandardPluralRanges::resolve(StandardPlural::Form first, StandardPlural::Form second) const {\n+    for (int32_t i=0; i<fTriplesLen; i++) {\n+        const auto& triple = fTriples[i];\n+        if (triple.first == first && triple.second == second) {\n+            return triple.result;\n+        }\n+    }\n+    \/\/ Default fallback\n+    return StandardPlural::OTHER;\n+}\n+\n+\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/pluralranges.cpp","additions":144,"deletions":0,"binary":false,"changes":144,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#ifndef __PLURALRANGES_H__\n+#define __PLURALRANGES_H__\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"unicode\/uobject.h\"\n+#include \"unicode\/locid.h\"\n+#include \"unicode\/plurrule.h\"\n+#include \"standardplural.h\"\n+#include \"cmemory.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\/\/ Forward declarations\n+namespace number {\n+namespace impl {\n+class UFormattedNumberRangeData;\n+}\n+}\n+\n+class StandardPluralRanges : public UMemory {\n+  public:\n+    \/** Create a new StandardPluralRanges for the given locale *\/\n+    static StandardPluralRanges forLocale(const Locale& locale, UErrorCode& status);\n+\n+    \/** Explicit copy constructor *\/\n+    StandardPluralRanges copy(UErrorCode& status) const;\n+\n+    \/** Create an object (called on an rvalue) *\/\n+    LocalPointer<StandardPluralRanges> toPointer(UErrorCode& status) && noexcept;\n+\n+    \/** Select rule based on the first and second forms *\/\n+    StandardPlural::Form resolve(StandardPlural::Form first, StandardPlural::Form second) const;\n+\n+    \/** Used for data loading. *\/\n+    void addPluralRange(\n+        StandardPlural::Form first,\n+        StandardPlural::Form second,\n+        StandardPlural::Form result);\n+\n+    \/** Used for data loading. *\/\n+    void setCapacity(int32_t length, UErrorCode& status);\n+\n+  private:\n+    struct StandardPluralRangeTriple {\n+        StandardPlural::Form first;\n+        StandardPlural::Form second;\n+        StandardPlural::Form result;\n+    };\n+\n+    \/\/ TODO: An array is simple here, but it results in linear lookup time.\n+    \/\/ Certain locales have 20-30 entries in this list.\n+    \/\/ Consider changing to a smarter data structure.\n+    typedef MaybeStackArray<StandardPluralRangeTriple, 3> PluralRangeTriples;\n+    PluralRangeTriples fTriples;\n+    int32_t fTriplesLen = 0;\n+};\n+\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+#endif \/\/__PLURALRANGES_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/pluralranges.h","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -162,1 +162,1 @@\n-        numberFormat = (NumberFormat*)other.numberFormat->clone();\n+        numberFormat = other.numberFormat->clone();\n@@ -280,1 +280,8 @@\n-        decFmt->toNumberFormatter().formatImpl(&data, status); \/\/ mutates &data\n+        const number::LocalizedNumberFormatter* lnf = decFmt->toNumberFormatter(status);\n+        if (U_FAILURE(status)) {\n+            return appendTo;\n+        }\n+        lnf->formatImpl(&data, status); \/\/ mutates &data\n+        if (U_FAILURE(status)) {\n+            return appendTo;\n+        }\n@@ -349,1 +356,1 @@\n-    NumberFormat* nf = (NumberFormat*)format->clone();\n+    NumberFormat* nf = format->clone();\n@@ -358,1 +365,1 @@\n-Format*\n+PluralFormat*\n@@ -545,3 +552,9 @@\n-            \/\/ If lenient parsing is turned ON, we've got some time consuming parsing ahead of us.\n-            int32_t length = -1;\n-            currMatchIndex = rbnfLenientScanner->findTextLenient(source, currArg, startingAt, &length);\n+            \/\/ Check if non-lenient rule finds the text before call lenient parsing\n+            int32_t tempIndex = source.indexOf(currArg, startingAt);\n+            if (tempIndex >= 0) {\n+                currMatchIndex = tempIndex;\n+            } else {\n+                \/\/ If lenient parsing is turned ON, we've got some time consuming parsing ahead of us.\n+                int32_t length = -1;\n+                currMatchIndex = rbnfLenientScanner->findTextLenient(source, currArg, startingAt, &length);\n+            }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/plurfmt.cpp","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -22,0 +22,1 @@\n+#include \"unicode\/numberrangeformatter.h\"\n@@ -39,0 +40,2 @@\n+#include \"pluralranges.h\"\n+#include \"numrange_impl.h\"\n@@ -59,0 +62,1 @@\n+static const UChar PK_VAR_E[]={LOW_E,0};\n@@ -70,0 +74,1 @@\n+    mStandardPluralRanges(nullptr),\n@@ -77,0 +82,1 @@\n+    mStandardPluralRanges(nullptr),\n@@ -84,0 +90,1 @@\n+    delete mStandardPluralRanges;\n@@ -92,1 +99,0 @@\n-    PluralRules* newObj = new PluralRules(*this);\n@@ -95,3 +101,10 @@\n-    if (newObj != nullptr && U_FAILURE(newObj->mInternalStatus)) {\n-        delete newObj;\n-        newObj = nullptr;\n+    UErrorCode localStatus = U_ZERO_ERROR;\n+    return clone(localStatus);\n+}\n+\n+PluralRules*\n+PluralRules::clone(UErrorCode& status) const {\n+    LocalPointer<PluralRules> newObj(new PluralRules(*this), status);\n+    if (U_SUCCESS(status) && U_FAILURE(newObj->mInternalStatus)) {\n+        status = newObj->mInternalStatus;\n+        newObj.adoptInstead(nullptr);\n@@ -99,1 +112,1 @@\n-    return newObj;\n+    return newObj.orphan();\n@@ -107,0 +120,2 @@\n+        delete mStandardPluralRanges;\n+        mStandardPluralRanges = nullptr;\n@@ -122,0 +137,5 @@\n+        if (other.mStandardPluralRanges != nullptr) {\n+            mStandardPluralRanges = other.mStandardPluralRanges->copy(mInternalStatus)\n+                .toPointer(mInternalStatus)\n+                .orphan();\n+        }\n@@ -214,1 +234,1 @@\n-    PluralRules *result = (*shared)->clone();\n+    PluralRules *result = (*shared)->clone(status);\n@@ -216,3 +236,0 @@\n-    if (result == nullptr) {\n-        status = U_MEMORY_ALLOCATION_ERROR;\n-    }\n@@ -255,0 +272,4 @@\n+    newObj->mStandardPluralRanges = StandardPluralRanges::forLocale(locale, status)\n+        .toPointer(status)\n+        .orphan();\n+\n@@ -275,0 +296,4 @@\n+    if (U_FAILURE(mInternalStatus)) {\n+        status = mInternalStatus;\n+        return ICU_Utility::makeBogusString();\n+    }\n@@ -288,0 +313,27 @@\n+UnicodeString\n+PluralRules::select(const number::FormattedNumberRange& range, UErrorCode& status) const {\n+    return select(range.getData(status), status);\n+}\n+\n+UnicodeString\n+PluralRules::select(const number::impl::UFormattedNumberRangeData* impl, UErrorCode& status) const {\n+    if (U_FAILURE(status)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n+    if (U_FAILURE(mInternalStatus)) {\n+        status = mInternalStatus;\n+        return ICU_Utility::makeBogusString();\n+    }\n+    if (mStandardPluralRanges == nullptr) {\n+        \/\/ Happens if PluralRules was constructed via createRules()\n+        status = U_UNSUPPORTED_ERROR;\n+        return ICU_Utility::makeBogusString();\n+    }\n+    auto form1 = StandardPlural::fromString(select(impl->quantity1), status);\n+    auto form2 = StandardPlural::fromString(select(impl->quantity2), status);\n+    if (U_FAILURE(status)) {\n+        return ICU_Utility::makeBogusString();\n+    }\n+    auto result = mStandardPluralRanges->resolve(form1, form2);\n+    return UnicodeString(StandardPlural::getKeyword(result), -1, US_INV);\n+}\n@@ -329,0 +381,5 @@\n+\/**\n+ * Helper method for the overrides of getSamples() for double and FixedDecimal\n+ * return value types.  Provide only one of an allocated array of doubles or\n+ * FixedDecimals, and a nullptr for the other.\n+ *\/\n@@ -330,2 +387,11 @@\n-getSamplesFromString(const UnicodeString &samples, double *dest,\n-                        int32_t destCapacity, UErrorCode& status) {\n+getSamplesFromString(const UnicodeString &samples, double *destDbl,\n+                        FixedDecimal* destFd, int32_t destCapacity,\n+                        UErrorCode& status) {\n+\n+    if ((destDbl == nullptr && destFd == nullptr)\n+            || (destDbl != nullptr && destFd != nullptr)) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return 0;\n+    }\n+\n+    bool isDouble = destDbl != nullptr;\n@@ -349,3 +415,7 @@\n-            double sampleValue = fixed.source;\n-            if (fixed.visibleDecimalDigitCount == 0 || sampleValue != floor(sampleValue)) {\n-                dest[sampleCount++] = sampleValue;\n+            if (isDouble) {\n+                double sampleValue = fixed.source;\n+                if (fixed.visibleDecimalDigitCount == 0 || sampleValue != floor(sampleValue)) {\n+                    destDbl[sampleCount++] = sampleValue;\n+                }\n+            } else {\n+                destFd[sampleCount++] = fixed;\n@@ -378,5 +448,0 @@\n-                \/\/ Hack Alert: don't return any decimal samples with integer values that\n-                \/\/    originated from a format with trailing decimals.\n-                \/\/    This API is returning doubles, which can't distinguish having displayed\n-                \/\/    zeros to the right of the decimal.\n-                \/\/    This results in test failures with values mapping back to a different keyword.\n@@ -384,2 +449,14 @@\n-                if (!(sampleValue == floor(sampleValue) && fixedLo.visibleDecimalDigitCount > 0)) {\n-                    dest[sampleCount++] = sampleValue;\n+                if (isDouble) {\n+                    \/\/ Hack Alert: don't return any decimal samples with integer values that\n+                    \/\/    originated from a format with trailing decimals.\n+                    \/\/    This API is returning doubles, which can't distinguish having displayed\n+                    \/\/    zeros to the right of the decimal.\n+                    \/\/    This results in test failures with values mapping back to a different keyword.\n+                    if (!(sampleValue == floor(sampleValue) && fixedLo.visibleDecimalDigitCount > 0)) {\n+                        destDbl[sampleCount++] = sampleValue;\n+                    }\n+                } else {\n+                    int32_t v = (int32_t) fixedLo.getPluralOperand(PluralOperand::PLURAL_OPERAND_V);\n+                    int32_t e = (int32_t) fixedLo.getPluralOperand(PluralOperand::PLURAL_OPERAND_E);\n+                    FixedDecimal newSample = FixedDecimal::createWithExponent(sampleValue, v, e);\n+                    destFd[sampleCount++] = newSample;\n@@ -397,1 +474,0 @@\n-\n@@ -401,1 +477,1 @@\n-    if (destCapacity == 0 || U_FAILURE(status)) {\n+    if (U_FAILURE(status)) {\n@@ -408,0 +484,4 @@\n+    if (dest != nullptr ? destCapacity < 0 : destCapacity != 0) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return 0;\n+    }\n@@ -412,1 +492,1 @@\n-    int32_t numSamples = getSamplesFromString(rc->fIntegerSamples, dest, destCapacity, status);\n+    int32_t numSamples = getSamplesFromString(rc->fIntegerSamples, dest, nullptr, destCapacity, status);\n@@ -414,1 +494,26 @@\n-        numSamples = getSamplesFromString(rc->fDecimalSamples, dest, destCapacity, status);\n+        numSamples = getSamplesFromString(rc->fDecimalSamples, dest, nullptr, destCapacity, status);\n+    }\n+    return numSamples;\n+}\n+\n+int32_t\n+PluralRules::getSamples(const UnicodeString &keyword, FixedDecimal *dest,\n+                        int32_t destCapacity, UErrorCode& status) {\n+    if (U_FAILURE(status)) {\n+        return 0;\n+    }\n+    if (U_FAILURE(mInternalStatus)) {\n+        status = mInternalStatus;\n+        return 0;\n+    }\n+    if (dest != nullptr ? destCapacity < 0 : destCapacity != 0) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return 0;\n+    }\n+    RuleChain *rc = rulesForKeyword(keyword);\n+    if (rc == nullptr) {\n+        return 0;\n+    }\n+    int32_t numSamples = getSamplesFromString(rc->fIntegerSamples, nullptr, dest, destCapacity, status);\n+    if (numSamples == 0) {\n+        numSamples = getSamplesFromString(rc->fDecimalSamples, nullptr, dest, destCapacity, status);\n@@ -603,0 +708,1 @@\n+        case tVariableE:\n@@ -987,0 +1093,2 @@\n+      case tVariableE:\n+        s.append(LOW_E); break;\n@@ -1163,0 +1271,1 @@\n+    case tVariableE:\n@@ -1179,0 +1288,1 @@\n+              type == tVariableE ||\n@@ -1210,0 +1320,1 @@\n+             type != tVariableE &&\n@@ -1387,0 +1498,2 @@\n+    } else if (0 == token.compare(PK_VAR_E, 1)) {\n+        keyType = tVariableE;\n@@ -1484,0 +1597,2 @@\n+    case tVariableE:\n+        return PLURAL_OPERAND_E;\n@@ -1489,2 +1604,2 @@\n-FixedDecimal::FixedDecimal(double n, int32_t v, int64_t f) {\n-    init(n, v, f);\n+FixedDecimal::FixedDecimal(double n, int32_t v, int64_t f, int32_t e) {\n+    init(n, v, f, e);\n@@ -1506,0 +1621,4 @@\n+FixedDecimal::FixedDecimal(double n, int32_t v, int64_t f) {\n+    init(n, v, f);\n+}\n+\n@@ -1525,1 +1644,15 @@\n-    cs.appendInvariantChars(num, status);\n+    int32_t parsedExponent = 0;\n+\n+    int32_t exponentIdx = num.indexOf(u'e');\n+    if (exponentIdx < 0) {\n+        exponentIdx = num.indexOf(u'E');\n+    }\n+    if (exponentIdx >= 0) {\n+        cs.appendInvariantChars(num.tempSubString(0, exponentIdx), status);\n+        int32_t expSubstrStart = exponentIdx + 1;\n+        parsedExponent = ICU_Utility::parseAsciiInteger(num, expSubstrStart);\n+    }\n+    else {\n+        cs.appendInvariantChars(num, status);\n+    }\n+\n@@ -1532,0 +1665,1 @@\n+\n@@ -1535,1 +1669,1 @@\n-        init(n, 0, 0);\n+        init(n, 0, 0, parsedExponent);\n@@ -1537,2 +1671,3 @@\n-        int32_t v = num.length() - decimalPoint - 1;\n-        init(n, v, getFractionalDigits(n, v));\n+        int32_t fractionNumLength = exponentIdx < 0 ? num.length() : cs.length();\n+        int32_t v = fractionNumLength - decimalPoint - 1;\n+        init(n, v, getFractionalDigits(n, v), parsedExponent);\n@@ -1549,0 +1684,1 @@\n+    exponent = other.exponent;\n@@ -1557,0 +1693,4 @@\n+FixedDecimal FixedDecimal::createWithExponent(double n, int32_t v, int32_t e) {\n+    return FixedDecimal(n, v, getFractionalDigits(n, v), e);\n+}\n+\n@@ -1565,0 +1705,6 @@\n+    int32_t exponent = 0;\n+    init(n, v, f, exponent);\n+}\n+\n+\n+void FixedDecimal::init(double n, int32_t v, int64_t f, int32_t e) {\n@@ -1569,0 +1715,1 @@\n+    exponent = e;\n@@ -1664,1 +1811,3 @@\n-          if (scaled > U_INT64_MAX) {\n+          if (scaled >= static_cast<double>(U_INT64_MAX)) {\n+              \/\/ Note: a double cannot accurately represent U_INT64_MAX. Casting it to double\n+              \/\/       will round up to the next representable value, which is U_INT64_MAX + 1.\n@@ -1696,0 +1845,1 @@\n+        case PLURAL_OPERAND_E: return exponent;\n@@ -1721,0 +1871,17 @@\n+bool FixedDecimal::operator==(const FixedDecimal &other) const {\n+    return source == other.source && visibleDecimalDigitCount == other.visibleDecimalDigitCount\n+        && decimalDigits == other.decimalDigits && exponent == other.exponent;\n+}\n+\n+UnicodeString FixedDecimal::toString() const {\n+    char pattern[15];\n+    char buffer[20];\n+    if (exponent == 0) {\n+        snprintf(pattern, sizeof(pattern), \"%%.%df\", visibleDecimalDigitCount);\n+        snprintf(buffer, sizeof(buffer), pattern, source);\n+    } else {\n+        snprintf(pattern, sizeof(pattern), \"%%.%dfe%%d\", visibleDecimalDigitCount);\n+        snprintf(buffer, sizeof(buffer), pattern, source, exponent);\n+    }\n+    return UnicodeString(buffer, -1, US_INV);\n+}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/plurrule.cpp","additions":199,"deletions":32,"binary":false,"changes":231,"status":"modified"},{"patch":"@@ -33,0 +33,6 @@\n+\/**\n+ * A FixedDecimal version of UPLRULES_NO_UNIQUE_VALUE used in PluralRulesTest\n+ * for parsing of samples.\n+ *\/\n+#define UPLRULES_NO_UNIQUE_VALUE_DECIMAL (FixedDecimal((double)-0.00123456777))\n+\n@@ -141,0 +147,1 @@\n+  tVariableE,\n@@ -217,0 +224,6 @@\n+    \/**\n+     * Suppressed exponent for compact notation (exponent needed in\n+     * scientific notation with compact notation to approximate i).\n+     *\/\n+    PLURAL_OPERAND_E,\n+\n@@ -270,0 +283,1 @@\n+      * @param e   The exponent, e.g. 7 in 1.2e7 (for compact\/scientific)\n@@ -271,0 +285,1 @@\n+    FixedDecimal(double  n, int32_t v, int64_t f, int32_t e);\n@@ -279,0 +294,2 @@\n+    static FixedDecimal createWithExponent(double n, int32_t v, int32_t e);\n+\n@@ -288,0 +305,1 @@\n+    void init(double n, int32_t v, int64_t f, int32_t e);\n@@ -291,1 +309,1 @@\n-                                \/\/    return TRUE if successful.\n+                                \/\/    return true if successful.\n@@ -296,0 +314,4 @@\n+    bool operator==(const FixedDecimal &other) const;\n+\n+    UnicodeString toString() const;\n+\n@@ -301,0 +323,1 @@\n+    int32_t     exponent;\n@@ -317,2 +340,2 @@\n-    UBool negated = FALSE;          \/\/ TRUE for negated rules.\n-    UBool integerOnly = FALSE;      \/\/ TRUE for 'within' rules.\n+    UBool negated = false;          \/\/ true for negated rules.\n+    UBool integerOnly = false;      \/\/ true for 'within' rules.\n@@ -354,2 +377,2 @@\n-    UBool           fDecimalSamplesUnbounded = FALSE;\n-    UBool           fIntegerSamplesUnbounded = FALSE;\n+    UBool           fDecimalSamplesUnbounded = false;\n+    UBool           fIntegerSamplesUnbounded = false;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/plurrule_impl.h","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-UnicodeFunctor* Quantifier::clone() const {\n+Quantifier* Quantifier::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/quant.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    virtual UnicodeFunctor* clone() const;\n+    virtual Quantifier* clone() const;\n@@ -65,1 +65,1 @@\n-     * @param incremental  if TRUE, then assume further characters may\n+     * @param incremental  if true, then assume further characters may\n@@ -69,1 +69,1 @@\n-     * match, or a mismatch.  If incremental is FALSE then\n+     * match, or a mismatch.  If incremental is false then\n@@ -84,1 +84,1 @@\n-                                     UBool escapeUnprintable = FALSE) const;\n+                                     UBool escapeUnprintable = false) const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/quant.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -183,1 +183,1 @@\n-        number::impl::NumberStringBuilder& output,\n+        FormattedStringBuilder& output,\n@@ -191,1 +191,5 @@\n-        df->toNumberFormatter().formatImpl(&fn, status);\n+        const number::LocalizedNumberFormatter* lnf = df->toNumberFormatter(status);\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+        lnf->formatImpl(&fn, status);\n@@ -203,1 +207,2 @@\n-        output.append(result, UNUM_FIELD_COUNT, status);\n+        \/\/ This code path is probably RBNF. Use the generic numeric field.\n+        output.append(result, kGeneralNumericField, status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/quantityformatter.cpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -29,6 +29,1 @@\n-\n-namespace number {\n-namespace impl {\n-class NumberStringBuilder;\n-}\n-}\n+class FormattedStringBuilder;\n@@ -82,1 +77,1 @@\n-     * @return TRUE on success; FALSE if status was set to a non zero error.\n+     * @return true on success; false if status was set to a non zero error.\n@@ -87,1 +82,1 @@\n-     * returns TRUE if this object has at least the \"other\" variant.\n+     * returns true if this object has at least the \"other\" variant.\n@@ -93,1 +88,1 @@\n-     * If isValid() returns TRUE, this method is guaranteed to return a\n+     * If isValid() returns true, this method is guaranteed to return a\n@@ -120,1 +115,1 @@\n-     * TODO(13591): Remove this method.\n+     * Used in MeasureFormat for backwards compatibility with NumberFormat.\n@@ -132,1 +127,1 @@\n-     * to a NumberStringBuilder in order to retain field information.\n+     * to a FormattedStringBuilder in order to retain field information.\n@@ -147,1 +142,1 @@\n-            number::impl::NumberStringBuilder& output,\n+            FormattedStringBuilder& output,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/quantityformatter.h","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -358,1 +358,4 @@\n-#define ERROR(msg) parseError(msg); return NULL;\n+#define ERROR(msg) UPRV_BLOCK_MACRO_BEGIN { \\\n+    parseError(msg); \\\n+    return NULL; \\\n+} UPRV_BLOCK_MACRO_END\n@@ -361,1 +364,4 @@\n-#define ERROR(msg) parseError(NULL); return NULL;\n+#define ERROR(msg) UPRV_BLOCK_MACRO_BEGIN { \\\n+    parseError(NULL); \\\n+    return NULL; \\\n+} UPRV_BLOCK_MACRO_END\n@@ -927,2 +933,2 @@\n-Format*\n-RuleBasedNumberFormat::clone(void) const\n+RuleBasedNumberFormat*\n+RuleBasedNumberFormat::clone() const\n@@ -1113,39 +1119,0 @@\n-UnicodeString&\n-RuleBasedNumberFormat::format(const DecimalQuantity &number,\n-                      UnicodeString &appendTo,\n-                      FieldPositionIterator *posIter,\n-                      UErrorCode &status) const {\n-    if (U_FAILURE(status)) {\n-        return appendTo;\n-    }\n-    DecimalQuantity copy(number);\n-    if (copy.fitsInLong()) {\n-        format(number.toLong(), appendTo, posIter, status);\n-    }\n-    else {\n-        copy.roundToMagnitude(0, number::impl::RoundingMode::UNUM_ROUND_HALFEVEN, status);\n-        if (copy.fitsInLong()) {\n-            format(number.toDouble(), appendTo, posIter, status);\n-        }\n-        else {\n-            \/\/ We're outside of our normal range that this framework can handle.\n-            \/\/ The DecimalFormat will provide more accurate results.\n-\n-            \/\/ TODO this section should probably be optimized. The DecimalFormat is shared in ICU4J.\n-            LocalPointer<NumberFormat> decimalFormat(NumberFormat::createInstance(locale, UNUM_DECIMAL, status), status);\n-            if (decimalFormat.isNull()) {\n-                return appendTo;\n-            }\n-            Formattable f;\n-            LocalPointer<DecimalQuantity> decimalQuantity(new DecimalQuantity(number), status);\n-            if (decimalQuantity.isNull()) {\n-                return appendTo;\n-            }\n-            f.adoptDecimalQuantity(decimalQuantity.orphan()); \/\/ f now owns decimalQuantity.\n-            decimalFormat->format(f, appendTo, posIter, status);\n-        }\n-    }\n-    return appendTo;\n-}\n-\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbnf.cpp","additions":10,"deletions":43,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -194,2 +194,2 @@\n-Transliterator* \/\/ Covariant return NOT ALLOWED (for portability)\n-RuleBasedTransliterator::clone(void) const {\n+RuleBasedTransliterator*\n+RuleBasedTransliterator::clone() const {\n@@ -256,1 +256,1 @@\n-    static UMutex transliteratorDataMutex = U_MUTEX_INITIALIZER;\n+    static UMutex transliteratorDataMutex;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual RuleBasedTransliterator* clone() const;\n@@ -164,1 +164,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1114,1 +1114,1 @@\n-                UnicodeString* tempus = (UnicodeString*)(((UnicodeString*)(he->value.pointer))->clone());\n+                UnicodeString* tempus = ((UnicodeString*)(he->value.pointer))->clone();\n@@ -1560,1 +1560,1 @@\n-        \/\/ Set a placeholder in the master variables vector that will be\n+        \/\/ Set a placeholder in the primary variables vector that will be\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt_pars.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-     * If it is, return FALSE.  This is neccesary to ensure that the\n+     * If it is, return false.  This is neccesary to ensure that the\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt_pars.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-        anteContext = (StringMatcher*) other.anteContext->clone();\n+        anteContext = other.anteContext->clone();\n@@ -186,1 +186,1 @@\n-        key = (StringMatcher*) other.key->clone();\n+        key = other.key->clone();\n@@ -189,1 +189,1 @@\n-        postContext = (StringMatcher*) other.postContext->clone();\n+        postContext = other.postContext->clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt_rule.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-     * @param anchorStart    TRUE if the the rule is anchored on the left to\n+     * @param anchorStart    true if the the rule is anchored on the left to\n@@ -177,1 +177,1 @@\n-     * @param anchorEnd      TRUE if the rule is anchored on the right to the\n+     * @param anchorEnd      true if the rule is anchored on the right to the\n@@ -270,1 +270,1 @@\n-     * @param incremental if TRUE, test for partial matches that may\n+     * @param incremental if true, test for partial matches that may\n@@ -274,1 +274,1 @@\n-     * incremental is FALSE then U_PARTIAL_MATCH will not be returned.\n+     * incremental is false then U_PARTIAL_MATCH will not be returned.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt_rule.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -126,3 +126,3 @@\n-     * indices.  Return TRUE if the transliteration should continue\n-     * or FALSE if it should halt (because of a U_PARTIAL_MATCH match).\n-     * Note that FALSE is only ever returned if isIncremental is TRUE.\n+     * indices.  Return true if the transliteration should continue\n+     * or false if it should halt (because of a U_PARTIAL_MATCH match).\n+     * Note that false is only ever returned if isIncremental is true.\n@@ -131,3 +131,3 @@\n-     * @param isIncremental if TRUE, assume new text may be inserted\n-     * at index.limit, and return FALSE if thre is a partial match.\n-     * @return TRUE unless a U_PARTIAL_MATCH has been obtained,\n+     * @param isIncremental if true, assume new text may be inserted\n+     * at index.limit, and return false if thre is a partial match.\n+     * @return true unless a U_PARTIAL_MATCH has been obtained,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbt_set.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-    static UMutex gLock = U_MUTEX_INITIALIZER;\n+    static UMutex gLock;\n@@ -359,2 +359,2 @@\n-TimeZone*\n-RuleBasedTimeZone::clone(void) const {\n+RuleBasedTimeZone*\n+RuleBasedTimeZone::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rbtz.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -151,3 +151,0 @@\n-    fRXPat->fStaticSets     = RegexStaticSets::gStaticSets->fPropSets;\n-    fRXPat->fStaticSets8    = RegexStaticSets::gStaticSets->fPropSets8;\n-\n@@ -493,0 +490,6 @@\n+                if (!fRXPat->initNamedCaptureMap()) {\n+                    if (U_SUCCESS(*fStatus)) {\n+                        error(fRXPat->fDeferredStatus);\n+                    }\n+                    break;\n+                }\n@@ -564,1 +567,1 @@\n-        \/\/    1    START_LA     dataLoc     Saves SP, Input Pos\n+        \/\/    1    LA_START     dataLoc     Saves SP, Input Pos, Active input region.\n@@ -578,1 +581,5 @@\n-        \/\/  Two data slots are reserved, for saving the stack ptr and the input position.\n+        \/\/  Four data slots are reserved, for saving state on entry to the look-around\n+        \/\/    0:   stack pointer on entry.\n+        \/\/    1:   input position on entry.\n+        \/\/    2:   fActiveStart, the active bounds start on entry.\n+        \/\/    3:   fActiveLimit, the active bounds limit on entry.\n@@ -581,1 +588,1 @@\n-            int32_t dataLoc = allocateData(2);\n+            int32_t dataLoc = allocateData(4);\n@@ -602,1 +609,1 @@\n-        \/\/    1.    START_LA    dataloc\n+        \/\/    1.    LA_START    dataloc\n@@ -607,1 +614,1 @@\n-        \/\/    5.    END_LA                \/\/ Cut back stack, remove saved state from step 2.\n+        \/\/    5.    LA_END                \/\/ Cut back stack, remove saved state from step 2.\n@@ -611,0 +618,5 @@\n+        \/\/  Four data slots are reserved, for saving state on entry to the look-around\n+        \/\/    0:   stack pointer on entry.\n+        \/\/    1:   input position on entry.\n+        \/\/    2:   fActiveStart, the active bounds start on entry.\n+        \/\/    3:   fActiveLimit, the active bounds limit on entry.\n@@ -613,1 +625,1 @@\n-            int32_t dataLoc = allocateData(2);\n+            int32_t dataLoc = allocateData(4);\n@@ -647,2 +659,4 @@\n-            \/\/              2:    Start index of match current match attempt.\n-            \/\/              3:    Original Input String len.\n+            \/\/              2:    fActiveStart, the active bounds start on entry.\n+            \/\/              3:    fActiveLimit, the active bounds limit on entry.\n+            \/\/              4:    Start index of match current match attempt.\n+            \/\/          The first four items must match the layout of data for LA_START \/ LA_END\n@@ -654,1 +668,1 @@\n-            int32_t dataLoc = allocateData(4);\n+            int32_t dataLoc = allocateData(5);\n@@ -699,2 +713,4 @@\n-            \/\/              2:    Start index of match current match attempt.\n-            \/\/              3:    Original Input String len.\n+            \/\/              2:    fActiveStart, the active bounds start on entry.\n+            \/\/              3:    fActiveLimit, the active bounds limit on entry.\n+            \/\/              4:    Start index of match current match attempt.\n+            \/\/          The first four items must match the layout of data for LA_START \/ LA_END\n@@ -706,1 +722,1 @@\n-            int32_t dataLoc = allocateData(4);\n+            int32_t dataLoc = allocateData(5);\n@@ -1241,0 +1257,4 @@\n+        #if  UCONFIG_NO_BREAK_ITERATION==1\n+        \/\/ Grapheme Cluster Boundary requires ICU break iteration.\n+        error(U_UNSUPPORTED_ERROR);\n+        #endif\n@@ -1245,1 +1265,0 @@\n-\n@@ -1335,1 +1354,2 @@\n-        int32_t groupNumber = uhash_geti(fRXPat->fNamedCaptureMap, fCaptureName);\n+        int32_t groupNumber =\n+            fRXPat->fNamedCaptureMap ? uhash_geti(fRXPat->fNamedCaptureMap, fCaptureName) : 0;\n@@ -1548,1 +1568,1 @@\n-         set->addAll(*RegexStaticSets::gStaticSets->fPropSets[URX_ISSPACE_SET]);\n+         set->addAll(RegexStaticSets::gStaticSets->fPropSets[URX_ISSPACE_SET]);\n@@ -1555,2 +1575,2 @@\n-            UnicodeSet SSet(*RegexStaticSets::gStaticSets->fPropSets[URX_ISSPACE_SET]);\n-            SSet.complement();\n+            UnicodeSet SSet;\n+            SSet.addAll(RegexStaticSets::gStaticSets->fPropSets[URX_ISSPACE_SET]).complement();\n@@ -1625,1 +1645,1 @@\n-            set->addAll(*RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET]);\n+            set->addAll(RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET]);\n@@ -1632,2 +1652,2 @@\n-            UnicodeSet SSet(*RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET]);\n-            SSet.complement();\n+            UnicodeSet SSet;\n+            SSet.addAll(RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET]).complement();\n@@ -2288,1 +2308,1 @@\n-            if (minML == INT32_MAX && maxML == 0) {\n+            if (minML == INT32_MAX) {\n@@ -2331,1 +2351,1 @@\n-            if (minML == INT32_MAX && maxML == 0) {\n+            if (minML == INT32_MAX) {\n@@ -2408,0 +2428,1 @@\n+            theSet->freeze();\n@@ -2801,2 +2822,2 @@\n-                const UnicodeSet *s = fRXPat->fStaticSets[sn];\n-                fRXPat->fInitialChars->addAll(*s);\n+                const UnicodeSet &s = RegexStaticSets::gStaticSets->fPropSets[sn];\n+                fRXPat->fInitialChars->addAll(s);\n@@ -2814,3 +2835,2 @@\n-                const UnicodeSet *s = fRXPat->fStaticSets[sn];\n-                UnicodeSet sc(*s);\n-                sc.complement();\n+                UnicodeSet sc;\n+                sc.addAll(RegexStaticSets::gStaticSets->fPropSets[sn]).complement();\n@@ -3384,1 +3404,1 @@\n-                int32_t  depth = (opType == URX_LA_START? 2: 1);;\n+                int32_t  depth = (opType == URX_LA_START? 2: 1);\n@@ -3466,1 +3486,0 @@\n-\n@@ -3675,1 +3694,1 @@\n-            \/\/ These opcodes will be skipped over by code for URX_CRT_INIT.\n+            \/\/ These opcodes will be skipped over by code for URX_CTR_INIT.\n@@ -3703,3 +3722,2 @@\n-                int32_t  depth = 0;\n-                for (;;) {\n-                    loc++;\n+                int32_t dataLoc = URX_VAL(op);\n+                for (loc = loc + 1; loc < end; ++loc) {\n@@ -3707,8 +3725,3 @@\n-                    if (URX_TYPE(op) == URX_LA_START || URX_TYPE(op) == URX_LB_START) {\n-                        depth++;\n-                    }\n-                    if (URX_TYPE(op) == URX_LA_END || URX_TYPE(op)==URX_LBN_END) {\n-                        if (depth == 0) {\n-                            break;\n-                        }\n-                        depth--;\n+                    int32_t opType = URX_TYPE(op);\n+                    if ((opType == URX_LA_END || opType == URX_LBN_END) && (URX_VAL(op) == dataLoc)) {\n+                        break;\n@@ -3716,1 +3729,0 @@\n-                    U_ASSERT(loc < end);\n@@ -3718,0 +3730,1 @@\n+                U_ASSERT(loc < end);\n@@ -4410,1 +4423,2 @@\n-            set.adoptInsteadAndCheckErrorCode(new UnicodeSet(*(fRXPat->fStaticSets[URX_ISWORD_SET])), status);\n+            set.adoptInsteadAndCheckErrorCode(\n+                RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET].cloneAsThawed(), status);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regexcmp.cpp","additions":60,"deletions":46,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    void        fixLiterals(UBool split=FALSE);      \/\/ Generate code for pending literal characters.\n+    void        fixLiterals(UBool split=false);      \/\/ Generate code for pending literal characters.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regexcmp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -23,2 +23,2 @@\n-    static const uint8_t kRuleSet_ascii_letter = 128;\n-    static const uint8_t kRuleSet_digit_char = 129;\n+    static const uint8_t kRuleSet_digit_char = 128;\n+    static const uint8_t kRuleSet_ascii_letter = 129;\n@@ -26,1 +26,1 @@\n-\n+    constexpr uint32_t kRuleSet_count = 131-128;\n@@ -29,12 +29,3 @@\n-    doSetBackslash_V,\n-    doSetBackslash_h,\n-    doBeginNamedBackRef,\n-    doSetMatchMode,\n-    doEnterQuoteMode,\n-    doOpenCaptureParen,\n-    doContinueNamedCapture,\n-    doSetBackslash_d,\n-    doBeginMatchMode,\n-    doBackslashX,\n-    doSetPosixProp,\n-    doIntervalError,\n+    doSetBackslash_D,\n+    doBackslashh,\n+    doBackslashH,\n@@ -42,7 +33,0 @@\n-    doSetBackslash_s,\n-    doNOP,\n-    doBackslashv,\n-    doOpenLookBehind,\n-    doPatStart,\n-    doPossessiveInterval,\n-    doOpenAtomicParen,\n@@ -50,1 +34,15 @@\n-    doBackslashd,\n+    doCompleteNamedBackRef,\n+    doPatStart,\n+    doBackslashS,\n+    doBackslashD,\n+    doNGStar,\n+    doNOP,\n+    doBackslashX,\n+    doSetLiteral,\n+    doContinueNamedCapture,\n+    doBackslashG,\n+    doBackslashR,\n+    doSetBegin,\n+    doSetBackslash_v,\n+    doPossessivePlus,\n+    doPerlInline,\n@@ -52,3 +50,0 @@\n-    doIntervalUpperDigit,\n-    doBadNamedCapture,\n-    doSetDifference2,\n@@ -56,5 +51,0 @@\n-    doSetNamedChar,\n-    doNamedChar,\n-    doSetBackslash_H,\n-    doBackslashb,\n-    doBackslashz,\n@@ -62,6 +52,1 @@\n-    doOpenLookAhead,\n-    doMatchModeParen,\n-    doBackslashV,\n-    doIntevalLowerDigit,\n-    doCaret,\n-    doSetEnd,\n+    doIntervalError,\n@@ -69,5 +54,3 @@\n-    doBackslashS,\n-    doOrOperator,\n-    doBackslashB,\n-    doBackslashw,\n-    doBackslashR,\n+    doIntervalInit,\n+    doSetIntersection2,\n+    doPossessiveInterval,\n@@ -75,7 +58,6 @@\n-    doDotAny,\n-    doMatchMode,\n-    doSetBackslash_W,\n-    doNGPlus,\n-    doSetBackslash_D,\n-    doPossessiveOpt,\n-    doSetNamedRange,\n+    doBackslashW,\n+    doContinueNamedBackRef,\n+    doOpenNonCaptureParen,\n+    doExit,\n+    doSetNamedChar,\n+    doSetBackslash_V,\n@@ -83,1 +65,2 @@\n-    doBackslashs,\n+    doEscapeError,\n+    doBadOpenParenType,\n@@ -85,0 +68,12 @@\n+    doSetAddDash,\n+    doEscapedLiteralChar,\n+    doSetBackslash_w,\n+    doIntervalUpperDigit,\n+    doBackslashv,\n+    doSetBackslash_S,\n+    doSetNoCloseError,\n+    doSetProp,\n+    doBackslashB,\n+    doSetEnd,\n+    doSetRange,\n+    doMatchModeParen,\n@@ -86,1 +81,14 @@\n-    doBadOpenParenType,\n+    doBackslashV,\n+    doSetMatchMode,\n+    doBackslashz,\n+    doSetNamedRange,\n+    doOpenLookBehindNeg,\n+    doInterval,\n+    doBadNamedCapture,\n+    doBeginMatchMode,\n+    doBackslashd,\n+    doPatFinish,\n+    doNamedChar,\n+    doNGPlus,\n+    doSetDifference2,\n+    doSetBackslash_H,\n@@ -88,2 +96,9 @@\n-    doNGInterval,\n-    doSetProp,\n+    doDotAny,\n+    doOpenCaptureParen,\n+    doEnterQuoteMode,\n+    doOpenAtomicParen,\n+    doBadModeFlag,\n+    doSetBackslash_d,\n+    doSetFinish,\n+    doProperty,\n+    doBeginNamedBackRef,\n@@ -91,2 +106,0 @@\n-    doSetBeginUnion,\n-    doEscapeError,\n@@ -94,8 +107,0 @@\n-    doSetBeginIntersection1,\n-    doPossessivePlus,\n-    doBackslashD,\n-    doOpenLookBehindNeg,\n-    doSetBegin,\n-    doSetIntersection2,\n-    doCompleteNamedBackRef,\n-    doSetRange,\n@@ -103,16 +108,0 @@\n-    doBackslashH,\n-    doExit,\n-    doNGOpt,\n-    doOpenNonCaptureParen,\n-    doBackslashA,\n-    doSetBackslash_v,\n-    doBackslashh,\n-    doBadModeFlag,\n-    doSetNoCloseError,\n-    doIntervalSame,\n-    doSetAddDash,\n-    doBackslashW,\n-    doPerlInline,\n-    doSetOpError,\n-    doSetLiteral,\n-    doPatFinish,\n@@ -120,1 +109,16 @@\n-    doEscapedLiteralChar,\n+    doNGInterval,\n+    doSetOpError,\n+    doSetPosixProp,\n+    doSetBeginIntersection1,\n+    doBackslashb,\n+    doSetBeginUnion,\n+    doIntevalLowerDigit,\n+    doSetBackslash_h,\n+    doStar,\n+    doMatchMode,\n+    doBackslashA,\n+    doOpenLookBehind,\n+    doPossessiveOpt,\n+    doOrOperator,\n+    doBackslashw,\n+    doBackslashs,\n@@ -123,0 +127,5 @@\n+    doCaret,\n+    doIntervalSame,\n+    doNGOpt,\n+    doOpenLookAhead,\n+    doSetBackslash_W,\n@@ -124,10 +133,1 @@\n-    doNGStar,\n-    doSetFinish,\n-    doInterval,\n-    doBackslashG,\n-    doStar,\n-    doSetBackslash_w,\n-    doSetBackslash_S,\n-    doProperty,\n-    doContinueNamedBackRef,\n-    doIntervalInit,\n+    doSetBackslash_s,\n@@ -200,1 +200,1 @@\n-    , {doBeginNamedCapture, 128, 64,0,  FALSE}     \/\/  48\n+    , {doBeginNamedCapture, 129, 64,0,  FALSE}     \/\/  48\n@@ -216,2 +216,2 @@\n-    , {doContinueNamedCapture, 128, 64,0,  TRUE}     \/\/  64      named-capture\n-    , {doContinueNamedCapture, 129, 64,0,  TRUE}     \/\/  65\n+    , {doContinueNamedCapture, 129, 64,0,  TRUE}     \/\/  64      named-capture\n+    , {doContinueNamedCapture, 128, 64,0,  TRUE}     \/\/  65\n@@ -229,1 +229,1 @@\n-    , {doNOP, 129, 79,0,  FALSE}     \/\/  77      interval-open\n+    , {doNOP, 128, 79,0,  FALSE}     \/\/  77      interval-open\n@@ -231,1 +231,1 @@\n-    , {doIntevalLowerDigit, 129, 79,0,  TRUE}     \/\/  79      interval-lower\n+    , {doIntevalLowerDigit, 128, 79,0,  TRUE}     \/\/  79      interval-lower\n@@ -235,1 +235,1 @@\n-    , {doIntervalUpperDigit, 129, 83,0,  TRUE}     \/\/  83      interval-upper\n+    , {doIntervalUpperDigit, 128, 83,0,  TRUE}     \/\/  83      interval-upper\n@@ -264,1 +264,1 @@\n-    , {doBackRef, 129, 14,0,  TRUE}     \/\/  112\n+    , {doBackRef, 128, 14,0,  TRUE}     \/\/  112\n@@ -269,1 +269,1 @@\n-    , {doContinueNamedBackRef, 128, 119,0,  TRUE}     \/\/  117      named-backref-2\n+    , {doContinueNamedBackRef, 129, 119,0,  TRUE}     \/\/  117      named-backref-2\n@@ -271,2 +271,2 @@\n-    , {doContinueNamedBackRef, 128, 119,0,  TRUE}     \/\/  119      named-backref-3\n-    , {doContinueNamedBackRef, 129, 119,0,  TRUE}     \/\/  120\n+    , {doContinueNamedBackRef, 129, 119,0,  TRUE}     \/\/  119      named-backref-3\n+    , {doContinueNamedBackRef, 128, 119,0,  TRUE}     \/\/  120\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regexcst.h","additions":100,"deletions":100,"binary":false,"changes":200,"status":"modified"},{"patch":"@@ -13,1 +13,1 @@\n-#                   cd icu\/source\/i18n\n+#                   cd icu4c\/source\/i18n\n@@ -19,1 +19,1 @@\n-#             regexcst.h generated file is put back into cvs.\n+#             regexcst.h generated file is put back into the source code repository.\n@@ -204,0 +204,2 @@\n+print \"\/\/ © 2016 and later: Unicode, Inc. and others.\\n\";\n+print \"\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\\n\";\n@@ -249,0 +251,1 @@\n+print \"    constexpr uint32_t kRuleSet_count = $i-128;\";\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regexcst.pl","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-                               \/\/   Save InputPos and SP in static data.\n+                               \/\/   Save InputPos, SP and active region in static data.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regeximp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-\n-\n@@ -42,0 +40,3 @@\n+\/\/ \"Rule Char\" Characters are those with special meaning, and therefore\n+\/\/    need to be escaped to appear as literals in a regexp.\n+constexpr char16_t const *gRuleSet_rule_chars = u\"*?+[(){}^$|\\\\.\";\n@@ -43,1 +44,0 @@\n-\/\/------------------------------------------------------------------------------\n@@ -45,3 +45,1 @@\n-\/\/ Unicode Set pattern strings for all of the required constant sets.\n-\/\/               Initialized with hex values for portability to EBCDIC based machines.\n-\/\/                Really ugly, but there's no good way to avoid it.\n+\/\/   The backslash escape characters that ICU's unescape() function will handle.\n@@ -49,10 +47,1 @@\n-\/\/------------------------------------------------------------------------------\n-\n-\/\/ \"Rule Char\" Characters are those with no special meaning, and therefore do not\n-\/\/    need to be escaped to appear as literals in a regexp.  Expressed\n-\/\/    as the inverse of those needing escaping --  [^\\*\\?\\+\\[\\(\\)\\{\\}\\^\\$\\|\\\\\\.]\n-static const UChar gRuleSet_rule_char_pattern[]       = {\n- \/\/   [    ^      \\     *     \\     ?     \\     +     \\     [     \\     (     \/     )\n-    0x5b, 0x5e, 0x5c, 0x2a, 0x5c, 0x3f, 0x5c, 0x2b, 0x5c, 0x5b, 0x5c, 0x28, 0x5c, 0x29,\n- \/\/   \\     {    \\     }     \\     ^     \\     $     \\     |     \\     \\     \\     .     ]\n-    0x5c, 0x7b,0x5c, 0x7d, 0x5c, 0x5e, 0x5c, 0x24, 0x5c, 0x7c, 0x5c, 0x5c, 0x5c, 0x2e, 0x5d, 0};\n+constexpr char16_t const *gUnescapeChars = u\"acefnrtuUx\";\n@@ -61,2 +50,1 @@\n-\/\/   Here are the backslash escape characters that ICU's unescape() function\n-\/\/    will handle.\n+\/\/  Unicode Set pattern for Regular Expression  \\w\n@@ -64,20 +52,1 @@\n-static const UChar gUnescapeCharPattern[] = {\n-\/\/    [     a     c     e     f     n     r     t     u     U     x    ]\n-    0x5b, 0x61, 0x63, 0x65, 0x66, 0x6e, 0x72, 0x74, 0x75, 0x55, 0x78, 0x5d, 0};\n-\n-\n-\/\/\n-\/\/  Unicode Set Definitions for Regular Expression  \\w\n-\/\/\n-static const UChar gIsWordPattern[] = {\n-\/\/    [     \\     p     {    A     l     p     h     a     b     e     t     i      c    }\n-    0x5b, 0x5c, 0x70, 0x7b, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x65, 0x74, 0x69, 0x63, 0x7d,\n-\/\/          \\     p     {    M     }                               Mark\n-          0x5c, 0x70, 0x7b, 0x4d, 0x7d,\n-\/\/          \\     p     {    N     d     }                         Digit_Numeric\n-          0x5c, 0x70, 0x7b, 0x4e, 0x64, 0x7d,\n-\/\/          \\     p     {    P     c     }                         Connector_Punctuation\n-          0x5c, 0x70, 0x7b, 0x50, 0x63, 0x7d,\n-\/\/          \\     u     2    0     0     c      \\     u     2    0     0     d     ]\n-          0x5c, 0x75, 0x32, 0x30, 0x30, 0x63, 0x5c, 0x75, 0x32, 0x30, 0x30, 0x64, 0x5d, 0};\n-\n+constexpr char16_t const *gIsWordPattern = u\"[\\\\p{Alphabetic}\\\\p{M}\\\\p{Nd}\\\\p{Pc}\\\\u200c\\\\u200d]\";\n@@ -88,4 +57,1 @@\n-static const UChar gIsSpacePattern[] = {\n-\/\/        [     \\     p     {     W     h     i     t     e     S     p     a     c     e     }     ]\n-        0x5b, 0x5c, 0x70, 0x7b, 0x57, 0x68, 0x69, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x5d, 0};\n-\n+constexpr  char16_t const *gIsSpacePattern = u\"[\\\\p{WhiteSpace}]\";\n@@ -96,9 +62,7 @@\n-static const UChar gGC_ControlPattern[] = {\n-\/\/    [     [     :     Z     l     :     ]     [     :     Z     p     :     ]\n-    0x5b, 0x5b, 0x3a, 0x5A, 0x6c, 0x3a, 0x5d, 0x5b, 0x3a, 0x5A, 0x70, 0x3a, 0x5d,\n-\/\/    [     :     C     c     :     ]     [     :     C     f     :     ]     -\n-    0x5b, 0x3a, 0x43, 0x63, 0x3a, 0x5d, 0x5b, 0x3a, 0x43, 0x66, 0x3a, 0x5d, 0x2d,\n-\/\/    [     :     G     r     a     p     h     e     m     e     _\n-    0x5b, 0x3a, 0x47, 0x72, 0x61, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x5f,\n-\/\/    E     x     t     e     n     d     :     ]     ]\n-    0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x3a, 0x5d, 0x5d, 0};\n+constexpr char16_t const *gGC_ControlPattern = u\"[[:Zl:][:Zp:][:Cc:][:Cf:]-[:Grapheme_Extend:]]\";\n+constexpr char16_t const *gGC_ExtendPattern  = u\"[\\\\p{Grapheme_Extend}]\";\n+constexpr char16_t const *gGC_LPattern       = u\"[\\\\p{Hangul_Syllable_Type=L}]\";\n+constexpr char16_t const *gGC_VPattern       = u\"[\\\\p{Hangul_Syllable_Type=V}]\";\n+constexpr char16_t const *gGC_TPattern       = u\"[\\\\p{Hangul_Syllable_Type=T}]\";\n+constexpr char16_t const *gGC_LVPattern      = u\"[\\\\p{Hangul_Syllable_Type=LV}]\";\n+constexpr char16_t const *gGC_LVTPattern     = u\"[\\\\p{Hangul_Syllable_Type=LVT}]\";\n@@ -106,5 +70,0 @@\n-static const UChar gGC_ExtendPattern[] = {\n-\/\/    [     \\     p     {     G     r     a     p     h     e     m     e     _\n-    0x5b, 0x5c, 0x70, 0x7b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x5f,\n-\/\/    E     x     t     e     n     d     }     ]\n-    0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x7d, 0x5d, 0};\n@@ -112,32 +71,1 @@\n-static const UChar gGC_LPattern[] = {\n-\/\/    [     \\     p     {     H     a     n     g     u     l     _     S     y     l\n-    0x5b, 0x5c, 0x70, 0x7b, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x5f, 0x53, 0x79, 0x6c,\n-\/\/    l     a     b     l     e     _     T     y     p     e     =     L     }     ]\n-    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x7d,  0x5d, 0};\n-\n-static const UChar gGC_VPattern[] = {\n-\/\/    [     \\     p     {     H     a     n     g     u     l     _     S     y     l\n-    0x5b, 0x5c, 0x70, 0x7b, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x5f, 0x53, 0x79, 0x6c,\n-\/\/    l     a     b     l     e     _     T     y     p     e     =     V     }     ]\n-    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x56, 0x7d,  0x5d, 0};\n-\n-static const UChar gGC_TPattern[] = {\n-\/\/    [     \\     p     {     H     a     n     g     u     l     _     S     y     l\n-    0x5b, 0x5c, 0x70, 0x7b, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x5f, 0x53, 0x79, 0x6c,\n-\/\/    l     a     b     l     e     _     T     y     p     e     =     T     }    ]\n-    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x54, 0x7d, 0x5d, 0};\n-\n-static const UChar gGC_LVPattern[] = {\n-\/\/    [     \\     p     {     H     a     n     g     u     l     _     S     y     l\n-    0x5b, 0x5c, 0x70, 0x7b, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x5f, 0x53, 0x79, 0x6c,\n-\/\/    l     a     b     l     e     _     T     y     p     e     =     L     V     }     ]\n-    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x56, 0x7d, 0x5d, 0};\n-\n-static const UChar gGC_LVTPattern[] = {\n-\/\/    [     \\     p     {     H     a     n     g     u     l     _     S     y     l\n-    0x5b, 0x5c, 0x70, 0x7b, 0x48, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x5f, 0x53, 0x79, 0x6c,\n-\/\/    l     a     b     l     e     _     T     y     p     e     =     L     V     T     }     ]\n-    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x4c, 0x56, 0x54, 0x7d, 0x5d, 0};\n-\n-\n-RegexStaticSets *RegexStaticSets::gStaticSets = NULL;\n+RegexStaticSets *RegexStaticSets::gStaticSets = nullptr;\n@@ -146,34 +74,0 @@\n-RegexStaticSets::RegexStaticSets(UErrorCode *status)\n-:\n-fUnescapeCharSet(UnicodeString(TRUE, gUnescapeCharPattern, -1), *status),\n-fRuleDigitsAlias(NULL),\n-fEmptyText(NULL)\n-{\n-    \/\/ First zero out everything\n-    int i;\n-    for (i=0; i<URX_LAST_SET; i++) {\n-        fPropSets[i] = NULL;\n-    }\n-    \/\/ Then init the sets to their correct values.\n-    fPropSets[URX_ISWORD_SET]  = new UnicodeSet(UnicodeString(TRUE, gIsWordPattern, -1),     *status);\n-    fPropSets[URX_ISSPACE_SET] = new UnicodeSet(UnicodeString(TRUE, gIsSpacePattern, -1),    *status);\n-    fPropSets[URX_GC_EXTEND]   = new UnicodeSet(UnicodeString(TRUE, gGC_ExtendPattern, -1),  *status);\n-    fPropSets[URX_GC_CONTROL]  = new UnicodeSet(UnicodeString(TRUE, gGC_ControlPattern, -1), *status);\n-    fPropSets[URX_GC_L]        = new UnicodeSet(UnicodeString(TRUE, gGC_LPattern, -1),       *status);\n-    fPropSets[URX_GC_V]        = new UnicodeSet(UnicodeString(TRUE, gGC_VPattern, -1),       *status);\n-    fPropSets[URX_GC_T]        = new UnicodeSet(UnicodeString(TRUE, gGC_TPattern, -1),       *status);\n-    fPropSets[URX_GC_LV]       = new UnicodeSet(UnicodeString(TRUE, gGC_LVPattern, -1),      *status);\n-    fPropSets[URX_GC_LVT]      = new UnicodeSet(UnicodeString(TRUE, gGC_LVTPattern, -1),     *status);\n-\n-    \/\/ Check for null pointers\n-    if (fPropSets[URX_ISWORD_SET] == NULL || fPropSets[URX_ISSPACE_SET] == NULL || fPropSets[URX_GC_EXTEND] == NULL ||\n-        fPropSets[URX_GC_CONTROL] == NULL || fPropSets[URX_GC_L] == NULL || fPropSets[URX_GC_V] == NULL ||\n-        fPropSets[URX_GC_T] == NULL || fPropSets[URX_GC_LV] == NULL || fPropSets[URX_GC_LVT] == NULL) {\n-        goto ExitConstrDeleteAll;\n-    }\n-    if (U_FAILURE(*status)) {\n-        \/\/ Bail out if we were unable to create the above sets.\n-        \/\/ The rest of the initialization needs them, so we cannot proceed.\n-        return;\n-    }\n-\n@@ -181,4 +75,12 @@\n-    \/\/\n-    \/\/ The following sets  are dynamically constructed, because their\n-    \/\/   initialization strings would be unreasonable.\n-    \/\/\n+RegexStaticSets::RegexStaticSets(UErrorCode *status) {\n+    \/\/ Initialize the shared static sets to their correct values.\n+    fUnescapeCharSet.addAll(UnicodeString(true, gUnescapeChars, -1)).freeze();\n+    fPropSets[URX_ISWORD_SET].applyPattern(UnicodeString(true, gIsWordPattern, -1), *status).freeze();\n+    fPropSets[URX_ISSPACE_SET].applyPattern(UnicodeString(true, gIsSpacePattern, -1), *status).freeze();\n+    fPropSets[URX_GC_EXTEND].applyPattern(UnicodeString(TRUE, gGC_ExtendPattern, -1), *status).freeze();\n+    fPropSets[URX_GC_CONTROL].applyPattern(UnicodeString(TRUE, gGC_ControlPattern, -1), *status).freeze();\n+    fPropSets[URX_GC_L].applyPattern(UnicodeString(TRUE, gGC_LPattern, -1), *status).freeze();\n+    fPropSets[URX_GC_V].applyPattern(UnicodeString(TRUE, gGC_VPattern, -1), *status).freeze();\n+    fPropSets[URX_GC_T].applyPattern(UnicodeString(TRUE, gGC_TPattern, -1), *status).freeze();\n+    fPropSets[URX_GC_LV].applyPattern(UnicodeString(TRUE, gGC_LVPattern, -1), *status).freeze();\n+    fPropSets[URX_GC_LVT].applyPattern(UnicodeString(TRUE, gGC_LVTPattern, -1), *status).freeze();\n@@ -191,10 +93,7 @@\n-    fPropSets[URX_GC_NORMAL] = new UnicodeSet(0, UnicodeSet::MAX_VALUE);\n-    \/\/ Null pointer check\n-    if (fPropSets[URX_GC_NORMAL] == NULL) {\n-        goto ExitConstrDeleteAll;\n-    }\n-    fPropSets[URX_GC_NORMAL]->remove(0xac00, 0xd7a4);\n-    fPropSets[URX_GC_NORMAL]->removeAll(*fPropSets[URX_GC_CONTROL]);\n-    fPropSets[URX_GC_NORMAL]->removeAll(*fPropSets[URX_GC_L]);\n-    fPropSets[URX_GC_NORMAL]->removeAll(*fPropSets[URX_GC_V]);\n-    fPropSets[URX_GC_NORMAL]->removeAll(*fPropSets[URX_GC_T]);\n+    fPropSets[URX_GC_NORMAL].complement();\n+    fPropSets[URX_GC_NORMAL].remove(0xac00, 0xd7a4);\n+    fPropSets[URX_GC_NORMAL].removeAll(fPropSets[URX_GC_CONTROL]);\n+    fPropSets[URX_GC_NORMAL].removeAll(fPropSets[URX_GC_L]);\n+    fPropSets[URX_GC_NORMAL].removeAll(fPropSets[URX_GC_V]);\n+    fPropSets[URX_GC_NORMAL].removeAll(fPropSets[URX_GC_T]);\n+    fPropSets[URX_GC_NORMAL].freeze();\n@@ -204,5 +103,12 @@\n-    for (i=0; i<URX_LAST_SET; i++) {\n-        if (fPropSets[i]) {\n-            fPropSets[i]->compact();\n-            fPropSets8[i].init(fPropSets[i]);\n-        }\n+    \/\/\n+    \/\/ TODO: 25 Oct 2019 are these fast 8-bit sets worth keeping?\n+    \/\/       Measured 3.5% gain on (non) matching with the pattern \"x(?:\\\\S+)+x\"\n+    \/\/       This runs in exponential time, making it easy to adjust the time for\n+    \/\/       convenient measuring.\n+    \/\/\n+    \/\/       This 8 bit optimization dates from the early days of ICU,\n+    \/\/       with a less optimized UnicodeSet. At the time, the difference\n+    \/\/       was substantial.\n+\n+    for (int32_t i=0; i<URX_LAST_SET; i++) {\n+        fPropSets8[i].init(&fPropSets[i]);\n@@ -212,4 +118,5 @@\n-    fRuleSets[kRuleSet_rule_char-128]   = UnicodeSet(UnicodeString(TRUE, gRuleSet_rule_char_pattern, -1),   *status);\n-    fRuleSets[kRuleSet_digit_char-128].add((UChar)0x30, (UChar)0x39);    \/\/ [0-9]\n-    fRuleSets[kRuleSet_ascii_letter-128].add((UChar)0x41, (UChar)0x5A);  \/\/ [A-Z]\n-    fRuleSets[kRuleSet_ascii_letter-128].add((UChar)0x61, (UChar)0x7A);  \/\/ [a-z]\n+    fRuleSets[kRuleSet_rule_char-128]\n+            .addAll(UnicodeString(gRuleSet_rule_chars)).complement().freeze();\n+\n+    fRuleSets[kRuleSet_digit_char-128].add(u'0', u'9').freeze();\n+    fRuleSets[kRuleSet_ascii_letter-128].add(u'A', u'Z').add(u'a', u'z').freeze();\n@@ -217,3 +124,0 @@\n-    for (i=0; i<UPRV_LENGTHOF(fRuleSets); i++) {\n-        fRuleSets[i].compact();\n-    }\n@@ -221,2 +125,2 @@\n-    \/\/ Finally, initialize an empty string for utility purposes\n-    fEmptyText = utext_openUChars(NULL, NULL, 0, status);\n+    \/\/ Finally, initialize an empty UText string for utility purposes\n+    fEmptyText = utext_openUChars(nullptr, nullptr, 0, status);\n@@ -224,12 +128,0 @@\n-    if (U_SUCCESS(*status)) {\n-        return;\n-    }\n-\n-ExitConstrDeleteAll: \/\/ Remove fPropSets and fRuleSets and return error\n-    for (i=0; i<URX_LAST_SET; i++) {\n-        delete fPropSets[i];\n-        fPropSets[i] = NULL;\n-    }\n-    if (U_SUCCESS(*status)) {\n-        *status = U_MEMORY_ALLOCATION_ERROR;\n-    }\n@@ -240,8 +132,1 @@\n-    int32_t i;\n-\n-    for (i=0; i<URX_LAST_SET; i++) {\n-        delete fPropSets[i];\n-        fPropSets[i] = NULL;\n-    }\n-    fRuleDigitsAlias = NULL;\n-\n+    fRuleDigitsAlias = nullptr;\n@@ -258,7 +143,0 @@\n-UBool\n-RegexStaticSets::cleanup(void) {\n-    delete RegexStaticSets::gStaticSets;\n-    RegexStaticSets::gStaticSets = NULL;\n-    gStaticSetsInitOnce.reset();\n-    return TRUE;\n-}\n@@ -269,1 +147,4 @@\n-    return RegexStaticSets::cleanup();\n+    delete RegexStaticSets::gStaticSets;\n+    RegexStaticSets::gStaticSets = nullptr;\n+    gStaticSetsInitOnce.reset();\n+    return TRUE;\n@@ -273,1 +154,1 @@\n-    U_ASSERT(RegexStaticSets::gStaticSets == NULL);\n+    U_ASSERT(RegexStaticSets::gStaticSets == nullptr);\n@@ -278,1 +159,1 @@\n-        RegexStaticSets::gStaticSets = NULL;\n+        RegexStaticSets::gStaticSets = nullptr;\n@@ -280,1 +161,1 @@\n-    if (RegexStaticSets::gStaticSets == NULL && U_SUCCESS(status)) {\n+    if (RegexStaticSets::gStaticSets == nullptr && U_SUCCESS(status)) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regexst.cpp","additions":62,"deletions":181,"binary":false,"changes":243,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"regexcst.h\"\n@@ -42,1 +43,0 @@\n-    static UBool   cleanup();\n@@ -44,2 +44,2 @@\n-    UnicodeSet    *fPropSets[URX_LAST_SET];     \/\/ The sets for common regex items, e.g. \\s\n-    Regex8BitSet   fPropSets8[URX_LAST_SET];    \/\/ Fast bitmap sets for latin-1 range for above.\n+    UnicodeSet    fPropSets[URX_LAST_SET] {};      \/\/ The sets for common regex items, e.g. \\s\n+    Regex8BitSet  fPropSets8[URX_LAST_SET] {};     \/\/ Fast bitmap sets for latin-1 range for above.\n@@ -47,6 +47,6 @@\n-    UnicodeSet    fRuleSets[10];               \/\/ Sets used while parsing regexp patterns.\n-    UnicodeSet    fUnescapeCharSet;            \/\/ Set of chars handled by unescape when\n-                                               \/\/   encountered with a \\ in a pattern.\n-    UnicodeSet    *fRuleDigitsAlias;\n-    UText         *fEmptyText;                 \/\/ An empty string, to be used when a matcher\n-                                               \/\/   is created with no input.\n+    UnicodeSet    fRuleSets[kRuleSet_count] {};    \/\/ Sets used while parsing regexp patterns.\n+    UnicodeSet    fUnescapeCharSet {};             \/\/ Set of chars handled by unescape when\n+                                                   \/\/   encountered with a \\ in a pattern.\n+    UnicodeSet    *fRuleDigitsAlias {};\n+    UText         *fEmptyText {};                  \/\/ An empty string, to be used when a matcher\n+                                                   \/\/   is created with no input.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regexst.h","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#  define UTEXT_FULL_TEXT_IN_CHUNK(ut,len) (FALSE)\n+#  define UTEXT_FULL_TEXT_IN_CHUNK(ut,len) (false)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/regextxt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"unicode\/decimfmt.h\"\n@@ -36,0 +35,1 @@\n+#include \"util.h\"\n@@ -90,1 +90,0 @@\n-    LocalPointer<DecimalFormat> df(new DecimalFormat(status), status);\n@@ -118,1 +117,0 @@\n-    df->setParseIntegerOnly(TRUE);\n@@ -195,5 +193,4 @@\n-        Formattable result;\n-        UErrorCode ps = U_ZERO_ERROR;\n-        df->parse(r->idStr,result,ps);\n-        if ( U_SUCCESS(ps) ) {\n-            r->code = result.getLong(); \/\/ Convert string to number\n+        int32_t pos = 0;\n+        int32_t result = ICU_Utility::parseAsciiInteger(r->idStr, pos);\n+        if (pos > 0) {\n+            r->code = result; \/\/ Convert string to number\n@@ -223,1 +220,1 @@\n-            if ( aliasFromRegion == NULL ) { \/\/ Deprecated region code not in the master codes list - so need to create a deprecated region for it.\n+            if ( aliasFromRegion == NULL ) { \/\/ Deprecated region code not in the primary codes list - so need to create a deprecated region for it.\n@@ -233,5 +230,4 @@\n-                Formattable result;\n-                UErrorCode ps = U_ZERO_ERROR;\n-                df->parse(aliasFromRegion->idStr,result,ps);\n-                if ( U_SUCCESS(ps) ) {\n-                    aliasFromRegion->code = result.getLong(); \/\/ Convert string to number\n+                int32_t pos = 0;\n+                int32_t result = ICU_Utility::parseAsciiInteger(aliasFromRegion->idStr, pos);\n+                if ( pos > 0 ) {\n+                    aliasFromRegion->code = result; \/\/ Convert string to number\n@@ -282,5 +278,4 @@\n-                Formattable result;\n-                UErrorCode ps = U_ZERO_ERROR;\n-                df->parse(codeMappingNumber,result,ps);\n-                if ( U_SUCCESS(ps) ) {\n-                    r->code = result.getLong(); \/\/ Convert string to number\n+                int32_t pos = 0;\n+                int32_t result = ICU_Utility::parseAsciiInteger(codeMappingNumber, pos);\n+                if ( pos > 0 ) {\n+                    r->code = result; \/\/ Convert string to number\n@@ -519,5 +514,0 @@\n-        UnicodeString pat = UNICODE_STRING_SIMPLE(\"0\");\n-        LocalPointer<DecimalFormat> df(new DecimalFormat(pat,status), status);\n-        if( U_FAILURE(status) ) {\n-            return NULL;\n-        }\n@@ -525,3 +515,1 @@\n-        id.remove();\n-        FieldPosition posIter;\n-        df->format(code,id, posIter, status);\n+        ICU_Utility::appendNumber(id, code, 10, 1);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/region.cpp","additions":15,"deletions":27,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-#include \"number_stringbuilder.h\"\n+#include \"formatted_string_builder.h\"\n@@ -318,0 +318,4 @@\n+            case HOUR:\n+                return UDAT_ABSOLUTE_HOUR;\n+            case MINUTE:\n+                return UDAT_ABSOLUTE_MINUTE;\n@@ -727,2 +731,2 @@\n-static constexpr number::impl::Field kRDTNumericField\n-    = number::impl::NumFieldUtils::compress<UFIELD_CATEGORY_RELATIVE_DATETIME, UDAT_REL_NUMERIC_FIELD>();\n+static constexpr FormattedStringBuilder::Field kRDTNumericField\n+    = {UFIELD_CATEGORY_RELATIVE_DATETIME, UDAT_REL_NUMERIC_FIELD};\n@@ -730,2 +734,2 @@\n-static constexpr number::impl::Field kRDTLiteralField\n-    = number::impl::NumFieldUtils::compress<UFIELD_CATEGORY_RELATIVE_DATETIME, UDAT_REL_LITERAL_FIELD>();\n+static constexpr FormattedStringBuilder::Field kRDTLiteralField\n+    = {UFIELD_CATEGORY_RELATIVE_DATETIME, UDAT_REL_LITERAL_FIELD};\n@@ -733,1 +737,1 @@\n-class FormattedRelativeDateTimeData : public FormattedValueNumberStringBuilderImpl {\n+class FormattedRelativeDateTimeData : public FormattedValueStringBuilderImpl {\n@@ -735,1 +739,1 @@\n-    FormattedRelativeDateTimeData() : FormattedValueNumberStringBuilderImpl(kRDTNumericField) {}\n+    FormattedRelativeDateTimeData() : FormattedValueStringBuilderImpl(kRDTNumericField) {}\n@@ -1160,0 +1164,2 @@\n+        case UDAT_REL_UNIT_HOUR:  absunit = UDAT_ABSOLUTE_HOUR; break;\n+        case UDAT_REL_UNIT_MINUTE:  absunit = UDAT_ABSOLUTE_MINUTE; break;\n@@ -1187,1 +1193,1 @@\n-    static icu::UMutex gBrkIterMutex = U_MUTEX_INITIALIZER;\n+    static UMutex gBrkIterMutex;\n@@ -1323,1 +1329,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1366,1 +1372,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/reldatefmt.cpp","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        fDateTimeFormatter = (SimpleDateFormat*)other.fDateTimeFormatter->clone();\n+        fDateTimeFormatter = other.fDateTimeFormatter->clone();\n@@ -134,1 +134,1 @@\n-Format* RelativeDateFormat::clone(void) const {\n+RelativeDateFormat* RelativeDateFormat::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/reldtfmt.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-    virtual Format* clone(void) const;\n+    virtual RelativeDateFormat* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/reldtfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -180,0 +180,1 @@\n+    delete fGCBreakItr;\n@@ -225,0 +226,1 @@\n+    fGCBreakItr        = NULL;\n@@ -432,1 +434,1 @@\n-                        groupNum = uhash_geti(fPattern->fNamedCaptureMap, &groupName);\n+                        groupNum = fPattern->fNamedCaptureMap ? uhash_geti(fPattern->fNamedCaptureMap, &groupName) : 0;\n@@ -1857,1 +1859,0 @@\n-    if (fWordBreakItr != NULL) {\n@@ -1859,3 +1860,2 @@\n-        UErrorCode status = U_ZERO_ERROR;\n-        fWordBreakItr->setText(fInputText, status);\n-#endif\n+    if (fWordBreakItr) {\n+        fWordBreakItr->setText(fInputText, fDeferredStatus);\n@@ -1863,0 +1863,5 @@\n+    if (fGCBreakItr) {\n+        fGCBreakItr->setText(fInputText, fDeferredStatus);\n+    }\n+#endif\n+\n@@ -1879,1 +1884,0 @@\n-        if (fWordBreakItr != NULL) {\n@@ -1881,3 +1885,2 @@\n-            UErrorCode status = U_ZERO_ERROR;\n-            fWordBreakItr->setText(input, status);\n-#endif\n+        if (fWordBreakItr) {\n+            fWordBreakItr->setText(input, fDeferredStatus);\n@@ -1885,0 +1888,4 @@\n+        if (fGCBreakItr) {\n+            fGCBreakItr->setText(fInputText, fDeferredStatus);\n+        }\n+#endif\n@@ -2068,1 +2075,1 @@\n-    \/\/ Check arguements for validity\n+    \/\/ Check arguments for validity\n@@ -2072,1 +2079,1 @@\n-    };\n+    }\n@@ -2545,1 +2552,1 @@\n-        cIsWord = fPattern->fStaticSets[URX_ISWORD_SET]->contains(c);\n+        cIsWord = RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET].contains(c);\n@@ -2558,1 +2565,1 @@\n-            prevCIsWord = fPattern->fStaticSets[URX_ISWORD_SET]->contains(prevChar);\n+            prevCIsWord = RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET].contains(prevChar);\n@@ -2583,1 +2590,1 @@\n-        cIsWord = fPattern->fStaticSets[URX_ISWORD_SET]->contains(c);\n+        cIsWord = RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET].contains(c);\n@@ -2597,1 +2604,1 @@\n-            prevCIsWord = fPattern->fStaticSets[URX_ISWORD_SET]->contains(prevChar);\n+            prevCIsWord = RegexStaticSets::gStaticSets->fPropSets[URX_ISWORD_SET].contains(prevChar);\n@@ -2614,1 +2621,1 @@\n-UBool RegexMatcher::isUWordBoundary(int64_t pos) {\n+UBool RegexMatcher::isUWordBoundary(int64_t pos, UErrorCode &status) {\n@@ -2616,0 +2623,1 @@\n+\n@@ -2617,0 +2625,2 @@\n+    \/\/ Note: this point will never be reached if break iteration is configured out.\n+    \/\/       Regex patterns that would require this function will fail to compile.\n@@ -2619,4 +2629,3 @@\n-    if (fWordBreakItr == NULL) {\n-        fWordBreakItr =\n-            (RuleBasedBreakIterator *)BreakIterator::createWordInstance(Locale::getEnglish(), fDeferredStatus);\n-        if (U_FAILURE(fDeferredStatus)) {\n+    if (fWordBreakItr == nullptr) {\n+        fWordBreakItr = BreakIterator::createWordInstance(Locale::getEnglish(), status);\n+        if (U_FAILURE(status)) {\n@@ -2625,1 +2634,1 @@\n-        fWordBreakItr->setText(fInputText, fDeferredStatus);\n+        fWordBreakItr->setText(fInputText, status);\n@@ -2628,0 +2637,2 @@\n+    \/\/ Note: zero width boundary tests like \\b see through transparent region bounds,\n+    \/\/       which is why fLookLimit is used here, rather than fActiveLimit.\n@@ -2634,5 +2645,0 @@\n-        if (!UTEXT_USES_U16(fInputText)) {\n-            \/\/ !!!: Would like a better way to do this!\n-            UErrorCode status = U_ZERO_ERROR;\n-            pos = utext_extract(fInputText, 0, pos, NULL, 0, &status);\n-        }\n@@ -2645,0 +2651,24 @@\n+\n+int64_t RegexMatcher::followingGCBoundary(int64_t pos, UErrorCode &status) {\n+    int64_t result = pos;\n+\n+#if UCONFIG_NO_BREAK_ITERATION==0\n+    \/\/ Note: this point will never be reached if break iteration is configured out.\n+    \/\/       Regex patterns that would require this function will fail to compile.\n+\n+    \/\/ If we haven't yet created a break iterator for this matcher, do it now.\n+    if (fGCBreakItr == nullptr) {\n+        fGCBreakItr = BreakIterator::createCharacterInstance(Locale::getEnglish(), status);\n+        if (U_FAILURE(status)) {\n+            return pos;\n+        }\n+        fGCBreakItr->setText(fInputText, status);\n+    }\n+    result = fGCBreakItr->following(pos);\n+    if (result == BreakIterator::DONE) {\n+        result = pos;\n+    }\n+#endif\n+    return result;\n+}\n+\n@@ -3085,1 +3115,1 @@\n-                UBool success = isUWordBoundary(fp->fInputIdx);\n+                UBool success = isUWordBoundary(fp->fInputIdx, status);\n@@ -3187,4 +3217,1 @@\n-            \/\/  Match a Grapheme, as defined by Unicode TR 29.\n-            \/\/  Differs slightly from Perl, which consumes combining marks independently\n-            \/\/    of context.\n-            {\n+            \/\/  Match a Grapheme, as defined by Unicode UAX 29.\n@@ -3192,84 +3219,4 @@\n-                \/\/ Fail if at end of input\n-                if (fp->fInputIdx >= fActiveLimit) {\n-                    fHitEnd = TRUE;\n-                    fp = (REStackFrame *)fStack->popFrame(fFrameSize);\n-                    break;\n-                }\n-\n-                UTEXT_SETNATIVEINDEX(fInputText, fp->fInputIdx);\n-\n-                \/\/ Examine (and consume) the current char.\n-                \/\/   Dispatch into a little state machine, based on the char.\n-                UChar32  c;\n-                c = UTEXT_NEXT32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                UnicodeSet **sets = fPattern->fStaticSets;\n-                if (sets[URX_GC_NORMAL]->contains(c))  goto GC_Extend;\n-                if (sets[URX_GC_CONTROL]->contains(c)) goto GC_Control;\n-                if (sets[URX_GC_L]->contains(c))       goto GC_L;\n-                if (sets[URX_GC_LV]->contains(c))      goto GC_V;\n-                if (sets[URX_GC_LVT]->contains(c))     goto GC_T;\n-                if (sets[URX_GC_V]->contains(c))       goto GC_V;\n-                if (sets[URX_GC_T]->contains(c))       goto GC_T;\n-                goto GC_Extend;\n-\n-\n-\n-GC_L:\n-                if (fp->fInputIdx >= fActiveLimit)         goto GC_Done;\n-                c = UTEXT_NEXT32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                if (sets[URX_GC_L]->contains(c))       goto GC_L;\n-                if (sets[URX_GC_LV]->contains(c))      goto GC_V;\n-                if (sets[URX_GC_LVT]->contains(c))     goto GC_T;\n-                if (sets[URX_GC_V]->contains(c))       goto GC_V;\n-                (void)UTEXT_PREVIOUS32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                goto GC_Extend;\n-\n-GC_V:\n-                if (fp->fInputIdx >= fActiveLimit)         goto GC_Done;\n-                c = UTEXT_NEXT32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                if (sets[URX_GC_V]->contains(c))       goto GC_V;\n-                if (sets[URX_GC_T]->contains(c))       goto GC_T;\n-                (void)UTEXT_PREVIOUS32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                goto GC_Extend;\n-\n-GC_T:\n-                if (fp->fInputIdx >= fActiveLimit)         goto GC_Done;\n-                c = UTEXT_NEXT32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                if (sets[URX_GC_T]->contains(c))       goto GC_T;\n-                (void)UTEXT_PREVIOUS32(fInputText);\n-                fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                goto GC_Extend;\n-\n-GC_Extend:\n-                \/\/ Combining characters are consumed here\n-                for (;;) {\n-                    if (fp->fInputIdx >= fActiveLimit) {\n-                        break;\n-                    }\n-                    c = UTEXT_CURRENT32(fInputText);\n-                    if (sets[URX_GC_EXTEND]->contains(c) == FALSE) {\n-                        break;\n-                    }\n-                    (void)UTEXT_NEXT32(fInputText);\n-                    fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                }\n-                goto GC_Done;\n-\n-GC_Control:\n-                \/\/ Most control chars stand alone (don't combine with combining chars),\n-                \/\/   except for that CR\/LF sequence is a single grapheme cluster.\n-                if (c == 0x0d && fp->fInputIdx < fActiveLimit && UTEXT_CURRENT32(fInputText) == 0x0a) {\n-                    c = UTEXT_NEXT32(fInputText);\n-                    fp->fInputIdx = UTEXT_GETNATIVEINDEX(fInputText);\n-                }\n-\n-GC_Done:\n-                if (fp->fInputIdx >= fActiveLimit) {\n-                    fHitEnd = TRUE;\n-                }\n+            \/\/ Fail if at end of input\n+            if (fp->fInputIdx >= fActiveLimit) {\n+                fHitEnd = TRUE;\n+                fp = (REStackFrame *)fStack->popFrame(fFrameSize);\n@@ -3279,1 +3226,6 @@\n-\n+            fp->fInputIdx = followingGCBoundary(fp->fInputIdx, status);\n+            if (fp->fInputIdx >= fActiveLimit) {\n+                fHitEnd = TRUE;\n+                fp->fInputIdx = fActiveLimit;\n+            }\n+            break;\n@@ -3313,2 +3265,2 @@\n-                    Regex8BitSet *s8 = &fPattern->fStaticSets8[opValue];\n-                    if (s8->contains(c)) {\n+                    Regex8BitSet &s8 = RegexStaticSets::gStaticSets->fPropSets8[opValue];\n+                    if (s8.contains(c)) {\n@@ -3318,2 +3270,2 @@\n-                    const UnicodeSet *s = fPattern->fStaticSets[opValue];\n-                    if (s->contains(c)) {\n+                    const UnicodeSet &s = RegexStaticSets::gStaticSets->fPropSets[opValue];\n+                    if (s.contains(c)) {\n@@ -3349,2 +3301,2 @@\n-                    Regex8BitSet *s8 = &fPattern->fStaticSets8[opValue];\n-                    if (s8->contains(c) == FALSE) {\n+                    Regex8BitSet &s8 = RegexStaticSets::gStaticSets->fPropSets8[opValue];\n+                    if (s8.contains(c) == FALSE) {\n@@ -3355,2 +3307,2 @@\n-                    const UnicodeSet *s = fPattern->fStaticSets[opValue];\n-                    if (s->contains(c) == FALSE) {\n+                    const UnicodeSet &s = RegexStaticSets::gStaticSets->fPropSets[opValue];\n+                    if (s.contains(c) == FALSE) {\n@@ -3808,1 +3760,1 @@\n-                \/\/ Entering a lookahead block.\n+                \/\/ Entering a look around block.\n@@ -3810,1 +3762,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+3<fPattern->fDataSize);\n@@ -3813,0 +3765,2 @@\n+                fData[opValue+2] = fActiveStart;\n+                fData[opValue+3] = fActiveLimit;\n@@ -3822,1 +3776,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+3<fPattern->fDataSize);\n@@ -3842,2 +3796,4 @@\n-                fActiveStart = fRegionStart;\n-                fActiveLimit = fRegionLimit;\n+                fActiveStart = fData[opValue+2];\n+                fActiveLimit = fData[opValue+3];\n+                U_ASSERT(fActiveStart >= 0);\n+                U_ASSERT(fActiveLimit <= fInputLength);\n@@ -3919,1 +3875,1 @@\n-                \/\/ Save Stack Ptr, Input Pos.\n+                \/\/ Save Stack Ptr, Input Pos and active input region.\n@@ -3921,1 +3877,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n@@ -3924,2 +3880,0 @@\n-                \/\/ Init the variable containing the start index for attempted matches.\n-                fData[opValue+2] = -1;\n@@ -3928,0 +3882,1 @@\n+                fData[opValue+2] = fActiveStart;\n@@ -3929,0 +3884,1 @@\n+                fActiveStart     = fRegionStart;\n@@ -3930,0 +3886,2 @@\n+                \/\/ Init the variable containing the start index for attempted matches.\n+                fData[opValue+4] = -1;\n@@ -3952,2 +3910,2 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n-                int64_t  &lbStartIdx = fData[opValue+2];\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n+                int64_t  &lbStartIdx = fData[opValue+4];\n@@ -3979,4 +3937,4 @@\n-                    int64_t restoreInputLen = fData[opValue+3];\n-                    U_ASSERT(restoreInputLen >= fActiveLimit);\n-                    U_ASSERT(restoreInputLen <= fInputLength);\n-                    fActiveLimit = restoreInputLen;\n+                    fActiveStart = fData[opValue+2];\n+                    fActiveLimit = fData[opValue+3];\n+                    U_ASSERT(fActiveStart >= 0);\n+                    U_ASSERT(fActiveLimit <= fInputLength);\n@@ -3996,1 +3954,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n@@ -4007,1 +3965,1 @@\n-                \/\/ Look-behind match is good.  Restore the orignal input string length,\n+                \/\/ Look-behind match is good.  Restore the orignal input string region,\n@@ -4010,4 +3968,4 @@\n-                int64_t originalInputLen = fData[opValue+3];\n-                U_ASSERT(originalInputLen >= fActiveLimit);\n-                U_ASSERT(originalInputLen <= fInputLength);\n-                fActiveLimit = originalInputLen;\n+                fActiveStart = fData[opValue+2];\n+                fActiveLimit = fData[opValue+3];\n+                U_ASSERT(fActiveStart >= 0);\n+                U_ASSERT(fActiveLimit <= fInputLength);\n@@ -4038,2 +3996,2 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n-                int64_t  &lbStartIdx = fData[opValue+2];\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n+                int64_t  &lbStartIdx = fData[opValue+4];\n@@ -4064,4 +4022,4 @@\n-                    int64_t restoreInputLen = fData[opValue+3];\n-                    U_ASSERT(restoreInputLen >= fActiveLimit);\n-                    U_ASSERT(restoreInputLen <= fInputLength);\n-                    fActiveLimit = restoreInputLen;\n+                    fActiveStart = fData[opValue+2];\n+                    fActiveLimit = fData[opValue+3];\n+                    U_ASSERT(fActiveStart >= 0);\n+                    U_ASSERT(fActiveLimit <= fInputLength);\n@@ -4082,1 +4040,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n@@ -4099,4 +4057,4 @@\n-                int64_t originalInputLen = fData[opValue+3];\n-                U_ASSERT(originalInputLen >= fActiveLimit);\n-                U_ASSERT(originalInputLen <= fInputLength);\n-                fActiveLimit = originalInputLen;\n+                fActiveStart = fData[opValue+2];\n+                fActiveLimit = fData[opValue+3];\n+                U_ASSERT(fActiveStart >= 0);\n+                U_ASSERT(fActiveLimit <= fInputLength);\n@@ -4659,1 +4617,1 @@\n-                UBool success = isUWordBoundary(fp->fInputIdx);\n+                UBool success = isUWordBoundary(fp->fInputIdx, status);\n@@ -4757,1 +4715,0 @@\n-\n@@ -4759,4 +4716,1 @@\n-        \/\/  Match a Grapheme, as defined by Unicode TR 29.\n-        \/\/  Differs slightly from Perl, which consumes combining marks independently\n-        \/\/    of context.\n-        {\n+            \/\/  Match a Grapheme, as defined by Unicode UAX 29.\n@@ -4771,63 +4725,1 @@\n-            \/\/ Examine (and consume) the current char.\n-            \/\/   Dispatch into a little state machine, based on the char.\n-            UChar32  c;\n-            U16_NEXT(inputBuf, fp->fInputIdx, fActiveLimit, c);\n-            UnicodeSet **sets = fPattern->fStaticSets;\n-            if (sets[URX_GC_NORMAL]->contains(c))  goto GC_Extend;\n-            if (sets[URX_GC_CONTROL]->contains(c)) goto GC_Control;\n-            if (sets[URX_GC_L]->contains(c))       goto GC_L;\n-            if (sets[URX_GC_LV]->contains(c))      goto GC_V;\n-            if (sets[URX_GC_LVT]->contains(c))     goto GC_T;\n-            if (sets[URX_GC_V]->contains(c))       goto GC_V;\n-            if (sets[URX_GC_T]->contains(c))       goto GC_T;\n-            goto GC_Extend;\n-\n-\n-\n-GC_L:\n-            if (fp->fInputIdx >= fActiveLimit)         goto GC_Done;\n-            U16_NEXT(inputBuf, fp->fInputIdx, fActiveLimit, c);\n-            if (sets[URX_GC_L]->contains(c))       goto GC_L;\n-            if (sets[URX_GC_LV]->contains(c))      goto GC_V;\n-            if (sets[URX_GC_LVT]->contains(c))     goto GC_T;\n-            if (sets[URX_GC_V]->contains(c))       goto GC_V;\n-            U16_PREV(inputBuf, 0, fp->fInputIdx, c);\n-            goto GC_Extend;\n-\n-GC_V:\n-            if (fp->fInputIdx >= fActiveLimit)         goto GC_Done;\n-            U16_NEXT(inputBuf, fp->fInputIdx, fActiveLimit, c);\n-            if (sets[URX_GC_V]->contains(c))       goto GC_V;\n-            if (sets[URX_GC_T]->contains(c))       goto GC_T;\n-            U16_PREV(inputBuf, 0, fp->fInputIdx, c);\n-            goto GC_Extend;\n-\n-GC_T:\n-            if (fp->fInputIdx >= fActiveLimit)         goto GC_Done;\n-            U16_NEXT(inputBuf, fp->fInputIdx, fActiveLimit, c);\n-            if (sets[URX_GC_T]->contains(c))       goto GC_T;\n-            U16_PREV(inputBuf, 0, fp->fInputIdx, c);\n-            goto GC_Extend;\n-\n-GC_Extend:\n-            \/\/ Combining characters are consumed here\n-            for (;;) {\n-                if (fp->fInputIdx >= fActiveLimit) {\n-                    break;\n-                }\n-                U16_NEXT(inputBuf, fp->fInputIdx, fActiveLimit, c);\n-                if (sets[URX_GC_EXTEND]->contains(c) == FALSE) {\n-                    U16_BACK_1(inputBuf, 0, fp->fInputIdx);\n-                    break;\n-                }\n-            }\n-            goto GC_Done;\n-\n-GC_Control:\n-            \/\/ Most control chars stand alone (don't combine with combining chars),\n-            \/\/   except for that CR\/LF sequence is a single grapheme cluster.\n-            if (c == 0x0d && fp->fInputIdx < fActiveLimit && inputBuf[fp->fInputIdx] == 0x0a) {\n-                fp->fInputIdx++;\n-            }\n-\n-GC_Done:\n+            fp->fInputIdx = followingGCBoundary(fp->fInputIdx, status);\n@@ -4836,0 +4728,1 @@\n+                fp->fInputIdx = fActiveLimit;\n@@ -4838,3 +4731,0 @@\n-        }\n-\n-\n@@ -4874,2 +4764,2 @@\n-                    Regex8BitSet *s8 = &fPattern->fStaticSets8[opValue];\n-                    if (s8->contains(c)) {\n+                    Regex8BitSet &s8 = RegexStaticSets::gStaticSets->fPropSets8[opValue];\n+                    if (s8.contains(c)) {\n@@ -4879,2 +4769,2 @@\n-                    const UnicodeSet *s = fPattern->fStaticSets[opValue];\n-                    if (s->contains(c)) {\n+                    const UnicodeSet &s = RegexStaticSets::gStaticSets->fPropSets[opValue];\n+                    if (s.contains(c)) {\n@@ -4906,2 +4796,2 @@\n-                    Regex8BitSet *s8 = &fPattern->fStaticSets8[opValue];\n-                    if (s8->contains(c) == FALSE) {\n+                    Regex8BitSet &s8 = RegexStaticSets::gStaticSets->fPropSets8[opValue];\n+                    if (s8.contains(c) == FALSE) {\n@@ -4911,2 +4801,2 @@\n-                    const UnicodeSet *s = fPattern->fStaticSets[opValue];\n-                    if (s->contains(c) == FALSE) {\n+                    const UnicodeSet &s = RegexStaticSets::gStaticSets->fPropSets[opValue];\n+                    if (s.contains(c) == FALSE) {\n@@ -5339,1 +5229,1 @@\n-                \/\/ Entering a lookahead block.\n+                \/\/ Entering a look around block.\n@@ -5341,1 +5231,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+3<fPattern->fDataSize);\n@@ -5344,0 +5234,2 @@\n+                fData[opValue+2] = fActiveStart;\n+                fData[opValue+3] = fActiveLimit;\n@@ -5351,1 +5243,1 @@\n-                \/\/ Leaving a look-ahead block.\n+                \/\/ Leaving a look around block.\n@@ -5353,1 +5245,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+3<fPattern->fDataSize);\n@@ -5373,2 +5265,4 @@\n-                fActiveStart = fRegionStart;\n-                fActiveLimit = fRegionLimit;\n+                fActiveStart = fData[opValue+2];\n+                fActiveLimit = fData[opValue+3];\n+                U_ASSERT(fActiveStart >= 0);\n+                U_ASSERT(fActiveLimit <= fInputLength);\n@@ -5437,1 +5331,1 @@\n-                \/\/ Save Stack Ptr, Input Pos.\n+                \/\/ Save Stack Ptr, Input Pos and active input region.\n@@ -5439,1 +5333,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n@@ -5442,2 +5336,0 @@\n-                \/\/ Init the variable containing the start index for attempted matches.\n-                fData[opValue+2] = -1;\n@@ -5446,0 +5338,1 @@\n+                fData[opValue+2] = fActiveStart;\n@@ -5447,0 +5340,1 @@\n+                fActiveStart     = fRegionStart;\n@@ -5448,0 +5342,2 @@\n+                \/\/ Init the variable containing the start index for attempted matches.\n+                fData[opValue+4] = -1;\n@@ -5465,2 +5361,2 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n-                int64_t  &lbStartIdx = fData[opValue+2];\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n+                int64_t  &lbStartIdx = fData[opValue+4];\n@@ -5488,4 +5384,4 @@\n-                    int64_t restoreInputLen = fData[opValue+3];\n-                    U_ASSERT(restoreInputLen >= fActiveLimit);\n-                    U_ASSERT(restoreInputLen <= fInputLength);\n-                    fActiveLimit = restoreInputLen;\n+                    fActiveStart = fData[opValue+2];\n+                    fActiveLimit = fData[opValue+3];\n+                    U_ASSERT(fActiveStart >= 0);\n+                    U_ASSERT(fActiveLimit <= fInputLength);\n@@ -5505,1 +5401,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n@@ -5516,1 +5412,1 @@\n-                \/\/ Look-behind match is good.  Restore the orignal input string length,\n+                \/\/ Look-behind match is good.  Restore the orignal input string region,\n@@ -5519,4 +5415,4 @@\n-                int64_t originalInputLen = fData[opValue+3];\n-                U_ASSERT(originalInputLen >= fActiveLimit);\n-                U_ASSERT(originalInputLen <= fInputLength);\n-                fActiveLimit = originalInputLen;\n+                fActiveStart = fData[opValue+2];\n+                fActiveLimit = fData[opValue+3];\n+                U_ASSERT(fActiveStart >= 0);\n+                U_ASSERT(fActiveLimit <= fInputLength);\n@@ -5542,2 +5438,2 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n-                int64_t  &lbStartIdx = fData[opValue+2];\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n+                int64_t  &lbStartIdx = fData[opValue+4];\n@@ -5564,4 +5460,4 @@\n-                    int64_t restoreInputLen = fData[opValue+3];\n-                    U_ASSERT(restoreInputLen >= fActiveLimit);\n-                    U_ASSERT(restoreInputLen <= fInputLength);\n-                    fActiveLimit = restoreInputLen;\n+                    fActiveStart = fData[opValue+2];\n+                    fActiveLimit = fData[opValue+3];\n+                    U_ASSERT(fActiveStart >= 0);\n+                    U_ASSERT(fActiveLimit <= fInputLength);\n@@ -5582,1 +5478,1 @@\n-                U_ASSERT(opValue>=0 && opValue+1<fPattern->fDataSize);\n+                U_ASSERT(opValue>=0 && opValue+4<fPattern->fDataSize);\n@@ -5599,4 +5495,4 @@\n-                int64_t originalInputLen = fData[opValue+3];\n-                U_ASSERT(originalInputLen >= fActiveLimit);\n-                U_ASSERT(originalInputLen <= fInputLength);\n-                fActiveLimit = originalInputLen;\n+                fActiveStart = fData[opValue+2];\n+                fActiveLimit = fData[opValue+3];\n+                U_ASSERT(fActiveStart >= 0);\n+                U_ASSERT(fActiveLimit <= fInputLength);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rematch.cpp","additions":165,"deletions":269,"binary":false,"changes":434,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-Transliterator* RemoveTransliterator::clone(void) const {\n-    Transliterator* result = new RemoveTransliterator();\n+RemoveTransliterator* RemoveTransliterator::clone() const {\n+    RemoveTransliterator* result = new RemoveTransliterator();\n@@ -54,1 +54,1 @@\n-        result->adoptFilter((UnicodeFilter*)(getFilter()->clone()));\n+        result->adoptFilter(getFilter()->clone());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/remtrans.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual RemoveTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/remtrans.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,2 +100,0 @@\n-    fStaticSets       = other.fStaticSets;\n-    fStaticSets8      = other.fStaticSets8;\n@@ -141,12 +139,14 @@\n-    int32_t hashPos = UHASH_FIRST;\n-    while (const UHashElement *hashEl = uhash_nextElement(other.fNamedCaptureMap, &hashPos)) {\n-        if (U_FAILURE(fDeferredStatus)) {\n-            break;\n-        }\n-        const UnicodeString *name = (const UnicodeString *)hashEl->key.pointer;\n-        UnicodeString *key = new UnicodeString(*name);\n-        int32_t val = hashEl->value.integer;\n-        if (key == NULL) {\n-            fDeferredStatus = U_MEMORY_ALLOCATION_ERROR;\n-        } else {\n-            uhash_puti(fNamedCaptureMap, key, val, &fDeferredStatus);\n+    if (other.fNamedCaptureMap != nullptr && initNamedCaptureMap()) {\n+        int32_t hashPos = UHASH_FIRST;\n+        while (const UHashElement *hashEl = uhash_nextElement(other.fNamedCaptureMap, &hashPos)) {\n+            if (U_FAILURE(fDeferredStatus)) {\n+                break;\n+            }\n+            const UnicodeString *name = (const UnicodeString *)hashEl->key.pointer;\n+            UnicodeString *key = new UnicodeString(*name);\n+            int32_t val = hashEl->value.integer;\n+            if (key == NULL) {\n+                fDeferredStatus = U_MEMORY_ALLOCATION_ERROR;\n+            } else {\n+                uhash_puti(fNamedCaptureMap, key, val, &fDeferredStatus);\n+            }\n@@ -176,2 +176,0 @@\n-    fStaticSets       = NULL;\n-    fStaticSets8      = NULL;\n@@ -194,4 +192,0 @@\n-    fNamedCaptureMap  = uhash_open(uhash_hashUnicodeString,     \/\/ Key hash function\n-                                   uhash_compareUnicodeString,  \/\/ Key comparator function\n-                                   uhash_compareLong,           \/\/ Value comparator function\n-                                   &fDeferredStatus);\n@@ -202,1 +196,1 @@\n-            fInitialChars == NULL || fInitialChars8 == NULL || fNamedCaptureMap == NULL) {\n+            fInitialChars == NULL || fInitialChars8 == NULL) {\n@@ -209,0 +203,15 @@\n+}\n+\n+\n+bool RegexPattern::initNamedCaptureMap() {\n+    if (fNamedCaptureMap) {\n+        return true;\n+    }\n+    fNamedCaptureMap  = uhash_openSize(uhash_hashUnicodeString,     \/\/ Key hash function\n+                                       uhash_compareUnicodeString,  \/\/ Key comparator function\n+                                       uhash_compareLong,           \/\/ Value comparator function\n+                                       7,                           \/\/ Initial table capacity\n+                                       &fDeferredStatus);\n+    if (U_FAILURE(fDeferredStatus)) {\n+        return false;\n+    }\n@@ -212,0 +221,1 @@\n+    return true;\n@@ -214,1 +224,0 @@\n-\n@@ -249,2 +258,4 @@\n-    uhash_close(fNamedCaptureMap);\n-    fNamedCaptureMap = NULL;\n+    if (fNamedCaptureMap != NULL) {\n+        uhash_close(fNamedCaptureMap);\n+        fNamedCaptureMap = NULL;\n+    }\n@@ -621,1 +632,1 @@\n-    int32_t number = uhash_geti(fNamedCaptureMap, &groupName);\n+    int32_t number = fNamedCaptureMap ? uhash_geti(fNamedCaptureMap, &groupName) : 0;\n@@ -649,1 +660,1 @@\n-    };\n+    }\n@@ -670,1 +681,1 @@\n-    };\n+    }\n@@ -793,2 +804,2 @@\n-            UnicodeSet *set = fStaticSets[val];\n-            set->toPattern(s, TRUE);\n+            UnicodeSet &set = RegexStaticSets::gStaticSets->fPropSets[val];\n+            set.toPattern(s, TRUE);\n@@ -838,1 +849,1 @@\n-    if (uhash_count(fNamedCaptureMap) == 0) {\n+    if (!fNamedCaptureMap || uhash_count(fNamedCaptureMap) == 0) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/repattrn.cpp","additions":41,"deletions":30,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-Collator *\n+RuleBasedCollator *\n@@ -1603,4 +1603,1 @@\n-    if(result.length() <= capacity) {\n-        uprv_memcpy(buffer, result.data(), result.length());\n-    }\n-    return u_terminateChars(buffer, capacity, result.length(), &errorCode);\n+    return result.extract(buffer, capacity, errorCode);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/rulebasedcollator.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-ScientificNumberFormatter::Style *ScientificNumberFormatter::SuperscriptStyle::clone() const {\n+ScientificNumberFormatter::SuperscriptStyle *ScientificNumberFormatter::SuperscriptStyle::clone() const {\n@@ -198,1 +198,1 @@\n-ScientificNumberFormatter::Style *ScientificNumberFormatter::MarkupStyle::clone() const {\n+ScientificNumberFormatter::MarkupStyle *ScientificNumberFormatter::MarkupStyle::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/scientificnumberformatter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,3 +32,1 @@\n-    for (uint32_t i=0; i<UPRV_LENGTHOF(bits); i++) {\n-        bits[i] = 0;\n-    }\n+    uprv_memset(bits, 0, sizeof(bits));\n@@ -44,1 +42,0 @@\n-\n@@ -46,3 +43,1 @@\n-    for (uint32_t i=0; i<UPRV_LENGTHOF(bits); i++) {\n-        bits[i] = other.bits[i];\n-    }\n+    uprv_memcpy(bits, other.bits, sizeof(bits));\n@@ -52,1 +47,0 @@\n-\n@@ -66,1 +60,1 @@\n-    if (script < 0 || script >= (int32_t)sizeof(bits) * 8) {\n+    if (script < 0 || (int32_t)script >= SCRIPT_LIMIT) {\n@@ -80,1 +74,1 @@\n-    if (script < 0 || script >= (int32_t)sizeof(bits) * 8) {\n+    if (script < 0 || (int32_t)script >= SCRIPT_LIMIT) {\n@@ -94,1 +88,1 @@\n-    if (script < 0 || script >= (int32_t)sizeof(bits) * 8) {\n+    if (script < 0 || (int32_t)script >= SCRIPT_LIMIT) {\n@@ -154,3 +148,1 @@\n-    for (uint32_t i=0; i<UPRV_LENGTHOF(bits); i++) {\n-        bits[i] = 0;\n-    }\n+    uprv_memset(bits, 0, sizeof(bits));\n@@ -188,1 +180,1 @@\n-    for (int32_t scriptIndex = fromIndex; scriptIndex < (int32_t)sizeof(bits)*8; scriptIndex++) {\n+    for (int32_t scriptIndex = fromIndex; scriptIndex < SCRIPT_LIMIT; scriptIndex++) {\n@@ -254,1 +246,1 @@\n-    static const int32_t FIRST_GUESS_SCRIPT_CAPACITY = 5;\n+    static const int32_t FIRST_GUESS_SCRIPT_CAPACITY = 20;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/scriptset.cpp","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+    static constexpr int32_t SCRIPT_LIMIT = 224;  \/\/ multiple of 32!\n+\n@@ -70,1 +72,1 @@\n-    uint32_t  bits[6];\n+    uint32_t  bits[SCRIPT_LIMIT \/ 32];\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/scriptset.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-Format* SelectFormat::clone() const\n+SelectFormat* SelectFormat::clone() const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/selfmt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"cmemory.h\"\n@@ -245,1 +246,1 @@\n-TimeZone*\n+SimpleTimeZone*\n@@ -1086,1 +1087,1 @@\n-    static UMutex gLock = U_MUTEX_INITIALIZER;\n+    static UMutex gLock;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/simpletz.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+#include \"unicode\/dtptngen.h\"\n@@ -233,4 +234,1 @@\n-static UMutex *LOCK() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex LOCK;\n@@ -589,5 +587,8 @@\n-    \/\/ TimeZoneFormat in ICU4C only depends on a locale for now\n-    if (fLocale != other.fLocale) {\n-        delete fTimeZoneFormat;\n-        fTimeZoneFormat = NULL; \/\/ forces lazy instantiation with the other locale\n-        fLocale = other.fLocale;\n+    fLocale = other.fLocale;\n+\n+    \/\/ TimeZoneFormat can now be set independently via setter.\n+    \/\/ If it is NULL, it will be lazily initialized from locale\n+    delete fTimeZoneFormat;\n+    fTimeZoneFormat = NULL;\n+    if (other.fTimeZoneFormat) {\n+        fTimeZoneFormat = new TimeZoneFormat(*other.fTimeZoneFormat);\n@@ -626,1 +627,1 @@\n-Format*\n+SimpleDateFormat*\n@@ -653,0 +654,6 @@\n+static const UChar* timeSkeletons[4] = {\n+    u\"jmmsszzzz\",   \/\/ kFull\n+    u\"jmmssz\",      \/\/ kLong\n+    u\"jmmss\",       \/\/ kMedium\n+    u\"jmm\",         \/\/ kShort\n+};\n@@ -717,0 +724,37 @@\n+    UnicodeString timePattern;\n+    if (timeStyle >= kFull && timeStyle <= kShort) {\n+        const char* baseLocID = locale.getBaseName();\n+        if (baseLocID[0]!=0 && uprv_strcmp(baseLocID,\"und\")!=0) {\n+            UErrorCode useStatus = U_ZERO_ERROR;\n+            Locale baseLoc(baseLocID);\n+            Locale validLoc(getLocale(ULOC_VALID_LOCALE, useStatus));\n+            if (U_SUCCESS(useStatus) && validLoc!=baseLoc) {\n+                bool useDTPG = false;\n+                const char* baseReg = baseLoc.getCountry(); \/\/ empty string if no region\n+                if ((baseReg[0]!=0 && uprv_strncmp(baseReg,validLoc.getCountry(),ULOC_COUNTRY_CAPACITY)!=0)\n+                        || uprv_strncmp(baseLoc.getLanguage(),validLoc.getLanguage(),ULOC_LANG_CAPACITY)!=0) {\n+                    \/\/ use DTPG if\n+                    \/\/ * baseLoc has a region and validLoc does not have the same one (or has none), OR\n+                    \/\/ * validLoc has a different language code than baseLoc\n+                    useDTPG = true;\n+                }\n+                if (useDTPG) {\n+                    \/\/ The standard time formats may have the wrong time cycle, because:\n+                    \/\/ the valid locale differs in important ways (region, language) from\n+                    \/\/ the base locale.\n+                    \/\/ We could *also* check whether they do actually have a mismatch with\n+                    \/\/ the time cycle preferences for the region, but that is a lot more\n+                    \/\/ work for little or no additional benefit, since just going ahead\n+                    \/\/ and always synthesizing the time format as per the following should\n+                    \/\/ create a locale-appropriate pattern with cycle that matches the\n+                    \/\/ region preferences anyway.\n+                    LocalPointer<DateTimePatternGenerator> dtpg(DateTimePatternGenerator::createInstanceNoStdPat(locale, useStatus));\n+                    if (U_SUCCESS(useStatus)) {\n+                        UnicodeString timeSkeleton(TRUE, timeSkeletons[timeStyle], -1);\n+                        timePattern = dtpg->getBestPattern(timeSkeleton, useStatus);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n@@ -722,18 +766,5 @@\n-        currentBundle.adoptInstead(\n-                ures_getByIndex(dateTimePatterns.getAlias(), (int32_t)timeStyle, NULL, &status));\n-        if (U_FAILURE(status)) {\n-           status = U_INVALID_FORMAT_ERROR;\n-           return;\n-        }\n-        switch (ures_getType(currentBundle.getAlias())) {\n-            case URES_STRING: {\n-               resStr = ures_getString(currentBundle.getAlias(), &resStrLen, &status);\n-               break;\n-            }\n-            case URES_ARRAY: {\n-               resStr = ures_getStringByIndex(currentBundle.getAlias(), 0, &resStrLen, &status);\n-               ovrStr = ures_getStringByIndex(currentBundle.getAlias(), 1, &ovrStrLen, &status);\n-               fTimeOverride.setTo(TRUE, ovrStr, ovrStrLen);\n-               break;\n-            }\n-            default: {\n+        UnicodeString tempus1(timePattern);\n+        if (tempus1.length() == 0) {\n+            currentBundle.adoptInstead(\n+                    ures_getByIndex(dateTimePatterns.getAlias(), (int32_t)timeStyle, NULL, &status));\n+            if (U_FAILURE(status)) {\n@@ -743,1 +774,16 @@\n-        }\n+            switch (ures_getType(currentBundle.getAlias())) {\n+                case URES_STRING: {\n+                   resStr = ures_getString(currentBundle.getAlias(), &resStrLen, &status);\n+                   break;\n+                }\n+                case URES_ARRAY: {\n+                   resStr = ures_getStringByIndex(currentBundle.getAlias(), 0, &resStrLen, &status);\n+                   ovrStr = ures_getStringByIndex(currentBundle.getAlias(), 1, &ovrStrLen, &status);\n+                   fTimeOverride.setTo(TRUE, ovrStr, ovrStrLen);\n+                   break;\n+                }\n+                default: {\n+                   status = U_INVALID_FORMAT_ERROR;\n+                   return;\n+                }\n+            }\n@@ -745,1 +791,2 @@\n-        UnicodeString tempus1(TRUE, resStr, resStrLen);\n+            tempus1.setTo(TRUE, resStr, resStrLen);\n+        }\n@@ -787,18 +834,5 @@\n-        currentBundle.adoptInstead(\n-                ures_getByIndex(dateTimePatterns.getAlias(), (int32_t)timeStyle, NULL, &status));\n-        if (U_FAILURE(status)) {\n-           status = U_INVALID_FORMAT_ERROR;\n-           return;\n-        }\n-        switch (ures_getType(currentBundle.getAlias())) {\n-            case URES_STRING: {\n-               resStr = ures_getString(currentBundle.getAlias(), &resStrLen, &status);\n-               break;\n-            }\n-            case URES_ARRAY: {\n-               resStr = ures_getStringByIndex(currentBundle.getAlias(), 0, &resStrLen, &status);\n-               ovrStr = ures_getStringByIndex(currentBundle.getAlias(), 1, &ovrStrLen, &status);\n-               fDateOverride.setTo(TRUE, ovrStr, ovrStrLen);\n-               break;\n-            }\n-            default: {\n+        fPattern.setTo(timePattern);\n+        if (fPattern.length() == 0) {\n+            currentBundle.adoptInstead(\n+                    ures_getByIndex(dateTimePatterns.getAlias(), (int32_t)timeStyle, NULL, &status));\n+            if (U_FAILURE(status)) {\n@@ -808,0 +842,17 @@\n+            switch (ures_getType(currentBundle.getAlias())) {\n+                case URES_STRING: {\n+                   resStr = ures_getString(currentBundle.getAlias(), &resStrLen, &status);\n+                   break;\n+                }\n+                case URES_ARRAY: {\n+                   resStr = ures_getStringByIndex(currentBundle.getAlias(), 0, &resStrLen, &status);\n+                   ovrStr = ures_getStringByIndex(currentBundle.getAlias(), 1, &ovrStrLen, &status);\n+                   fDateOverride.setTo(TRUE, ovrStr, ovrStrLen);\n+                   break;\n+                }\n+                default: {\n+                   status = U_INVALID_FORMAT_ERROR;\n+                   return;\n+                }\n+            }\n+            fPattern.setTo(TRUE, resStr, resStrLen);\n@@ -809,1 +860,0 @@\n-        fPattern.setTo(TRUE, resStr, resStrLen);\n@@ -851,1 +901,2 @@\n-        fCalendar = Calendar::createInstance(adoptZone?adoptZone:TimeZone::createDefault(), locale, status);\n+        fCalendar = Calendar::createInstance(\n+            adoptZone ? adoptZone : TimeZone::forLocaleOrDefault(locale), locale, status);\n@@ -1002,1 +1053,2 @@\n-            subFormat(appendTo, prevCh, count, capitalizationContext, fieldNum++, handler, *workCal, status);\n+            subFormat(appendTo, prevCh, count, capitalizationContext, fieldNum++,\n+                      prevCh, handler, *workCal, status);\n@@ -1029,1 +1081,2 @@\n-        subFormat(appendTo, prevCh, count, capitalizationContext, fieldNum++, handler, *workCal, status);\n+        subFormat(appendTo, prevCh, count, capitalizationContext, fieldNum++,\n+                  prevCh, handler, *workCal, status);\n@@ -1226,4 +1279,8 @@\n-createFastFormatter(const DecimalFormat* df, int32_t minInt, int32_t maxInt) {\n-    return new number::LocalizedNumberFormatter(\n-            df->toNumberFormatter()\n-                    .integerWidth(number::IntegerWidth::zeroFillTo(minInt).truncateAt(maxInt)));\n+createFastFormatter(const DecimalFormat* df, int32_t minInt, int32_t maxInt, UErrorCode& status) {\n+    const number::LocalizedNumberFormatter* lnfBase = df->toNumberFormatter(status);\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n+    return lnfBase->integerWidth(\n+        number::IntegerWidth::zeroFillTo(minInt).truncateAt(maxInt)\n+    ).clone().orphan();\n@@ -1240,5 +1297,5 @@\n-    fFastNumberFormatters[SMPDTFMT_NF_1x10] = createFastFormatter(df, 1, 10);\n-    fFastNumberFormatters[SMPDTFMT_NF_2x10] = createFastFormatter(df, 2, 10);\n-    fFastNumberFormatters[SMPDTFMT_NF_3x10] = createFastFormatter(df, 3, 10);\n-    fFastNumberFormatters[SMPDTFMT_NF_4x10] = createFastFormatter(df, 4, 10);\n-    fFastNumberFormatters[SMPDTFMT_NF_2x2] = createFastFormatter(df, 2, 2);\n+    fFastNumberFormatters[SMPDTFMT_NF_1x10] = createFastFormatter(df, 1, 10, status);\n+    fFastNumberFormatters[SMPDTFMT_NF_2x10] = createFastFormatter(df, 2, 10, status);\n+    fFastNumberFormatters[SMPDTFMT_NF_3x10] = createFastFormatter(df, 3, 10, status);\n+    fFastNumberFormatters[SMPDTFMT_NF_4x10] = createFastFormatter(df, 4, 10, status);\n+    fFastNumberFormatters[SMPDTFMT_NF_2x2] = createFastFormatter(df, 2, 2, status);\n@@ -1269,1 +1326,1 @@\n-    umtx_lock(LOCK());\n+    umtx_lock(&LOCK);\n@@ -1276,1 +1333,1 @@\n-    umtx_unlock(LOCK());\n+    umtx_unlock(&LOCK);\n@@ -1404,1 +1461,1 @@\n-                            UChar ch,\n+                            char16_t ch,\n@@ -1408,0 +1465,1 @@\n+                            char16_t fieldToOutput,\n@@ -1855,2 +1913,5 @@\n-            subFormat(appendTo, 0x61, count, capitalizationContext, fieldNum,\n-                      handler, cal, status);\n+            \/\/ We are passing a different fieldToOutput because we want to add\n+            \/\/ 'b' to field position. This makes this fallback stable when\n+            \/\/ there is a data change on locales.\n+            subFormat(appendTo, u'a', count, capitalizationContext, fieldNum, u'b', handler, cal, status);\n+            return;\n@@ -1876,3 +1937,5 @@\n-            subFormat(appendTo, 0x61, count, capitalizationContext, fieldNum,\n-                      handler, cal, status);\n-            break;\n+            \/\/ We are passing a different fieldToOutput because we want to add\n+            \/\/ 'B' to field position. This makes this fallback stable when\n+            \/\/ there is a data change on locales.\n+            subFormat(appendTo, u'a', count, capitalizationContext, fieldNum, u'B', handler, cal, status);\n+            return;\n@@ -1947,2 +2010,5 @@\n-            subFormat(appendTo, 0x61, count, capitalizationContext, fieldNum,\n-                      handler, cal, status);\n+            \/\/ We are passing a different fieldToOutput because we want to add\n+            \/\/ 'B' to field position iterator. This makes this fallback stable when\n+            \/\/ there is a data change on locales.\n+            subFormat(appendTo, u'a', count, capitalizationContext, fieldNum, u'B', handler, cal, status);\n+            return;\n@@ -1983,0 +2049,1 @@\n+            BreakIterator* const mutableCapitalizationBrkIter = fCapitalizationBrkIter->clone();\n@@ -1984,1 +2051,1 @@\n-            firstField.toTitle(fCapitalizationBrkIter, fLocale, U_TITLECASE_NO_LOWERCASE | U_TITLECASE_NO_BREAK_ADJUSTMENT);\n+            firstField.toTitle(mutableCapitalizationBrkIter, fLocale, U_TITLECASE_NO_LOWERCASE | U_TITLECASE_NO_BREAK_ADJUSTMENT);\n@@ -1986,0 +2053,1 @@\n+            delete mutableCapitalizationBrkIter;\n@@ -1990,1 +2058,1 @@\n-    handler.addAttribute(fgPatternIndexToDateFormatField[patternCharIndex], beginOffset, appendTo.length());\n+    handler.addAttribute(DateFormatSymbols::getPatternCharIndex(fieldToOutput), beginOffset, appendTo.length());\n@@ -2110,1 +2178,1 @@\n-        LocalPointer<NumberFormat> nf(dynamic_cast<NumberFormat*>(currentNumberFormat->clone()));\n+        LocalPointer<NumberFormat> nf(currentNumberFormat->clone());\n@@ -3773,1 +3841,1 @@\n-        df.adoptInstead(dynamic_cast<DecimalFormat*>(fmtAsDF->clone()));\n+        df.adoptInstead(fmtAsDF->clone());\n@@ -3904,1 +3972,1 @@\n-            umtx_lock(LOCK());\n+            umtx_lock(&LOCK);\n@@ -3908,1 +3976,1 @@\n-            umtx_unlock(LOCK());\n+            umtx_unlock(&LOCK);\n@@ -4001,0 +4069,1 @@\n+      delete calendarToAdopt;\n@@ -4240,1 +4309,1 @@\n-        umtx_lock(LOCK());\n+        umtx_lock(&LOCK);\n@@ -4251,1 +4320,1 @@\n-        umtx_unlock(LOCK());\n+        umtx_unlock(&LOCK);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/smpdtfmt.cpp","additions":148,"deletions":79,"binary":false,"changes":227,"status":"modified"},{"patch":"@@ -0,0 +1,240 @@\n+alphaindex.cpp\n+anytrans.cpp\n+astro.cpp\n+basictz.cpp\n+bocsu.cpp\n+brktrans.cpp\n+buddhcal.cpp\n+calendar.cpp\n+casetrn.cpp\n+cecal.cpp\n+chnsecal.cpp\n+choicfmt.cpp\n+coleitr.cpp\n+coll.cpp\n+collation.cpp\n+collationbuilder.cpp\n+collationcompare.cpp\n+collationdata.cpp\n+collationdatabuilder.cpp\n+collationdatareader.cpp\n+collationdatawriter.cpp\n+collationfastlatin.cpp\n+collationfastlatinbuilder.cpp\n+collationfcd.cpp\n+collationiterator.cpp\n+collationkeys.cpp\n+collationroot.cpp\n+collationrootelements.cpp\n+collationruleparser.cpp\n+collationsets.cpp\n+collationsettings.cpp\n+collationtailoring.cpp\n+collationweights.cpp\n+compactdecimalformat.cpp\n+coptccal.cpp\n+cpdtrans.cpp\n+csdetect.cpp\n+csmatch.cpp\n+csr2022.cpp\n+csrecog.cpp\n+csrmbcs.cpp\n+csrsbcs.cpp\n+csrucode.cpp\n+csrutf8.cpp\n+curramt.cpp\n+currfmt.cpp\n+currpinf.cpp\n+currunit.cpp\n+dangical.cpp\n+datefmt.cpp\n+dayperiodrules.cpp\n+dcfmtsym.cpp\n+decContext.cpp\n+decNumber.cpp\n+decimfmt.cpp\n+double-conversion-bignum-dtoa.cpp\n+double-conversion-bignum.cpp\n+double-conversion-cached-powers.cpp\n+double-conversion-double-to-string.cpp\n+double-conversion-fast-dtoa.cpp\n+double-conversion-string-to-double.cpp\n+double-conversion-strtod.cpp\n+dtfmtsym.cpp\n+dtitvfmt.cpp\n+dtitvinf.cpp\n+dtptngen.cpp\n+dtrule.cpp\n+erarules.cpp\n+esctrn.cpp\n+ethpccal.cpp\n+fmtable.cpp\n+fmtable_cnv.cpp\n+format.cpp\n+formatted_string_builder.cpp\n+formattedval_iterimpl.cpp\n+formattedval_sbimpl.cpp\n+formattedvalue.cpp\n+fphdlimp.cpp\n+fpositer.cpp\n+funcrepl.cpp\n+gender.cpp\n+gregocal.cpp\n+gregoimp.cpp\n+hebrwcal.cpp\n+indiancal.cpp\n+inputext.cpp\n+islamcal.cpp\n+japancal.cpp\n+listformatter.cpp\n+measfmt.cpp\n+measunit.cpp\n+measunit_extra.cpp\n+measure.cpp\n+msgfmt.cpp\n+name2uni.cpp\n+nfrs.cpp\n+nfrule.cpp\n+nfsubs.cpp\n+nortrans.cpp\n+nultrans.cpp\n+number_affixutils.cpp\n+number_asformat.cpp\n+number_capi.cpp\n+number_compact.cpp\n+number_currencysymbols.cpp\n+number_decimalquantity.cpp\n+number_decimfmtprops.cpp\n+number_fluent.cpp\n+number_formatimpl.cpp\n+number_grouping.cpp\n+number_integerwidth.cpp\n+number_longnames.cpp\n+number_mapper.cpp\n+number_modifiers.cpp\n+number_multiplier.cpp\n+number_notation.cpp\n+number_output.cpp\n+number_padding.cpp\n+number_patternmodifier.cpp\n+number_patternstring.cpp\n+number_rounding.cpp\n+number_scientific.cpp\n+number_skeletons.cpp\n+number_symbolswrapper.cpp\n+number_usageprefs.cpp\n+number_utils.cpp\n+numfmt.cpp\n+numparse_affixes.cpp\n+numparse_compositions.cpp\n+numparse_currency.cpp\n+numparse_decimal.cpp\n+numparse_impl.cpp\n+numparse_parsednumber.cpp\n+numparse_scientific.cpp\n+numparse_symbols.cpp\n+numparse_validators.cpp\n+numrange_capi.cpp\n+numrange_fluent.cpp\n+numrange_impl.cpp\n+numsys.cpp\n+olsontz.cpp\n+persncal.cpp\n+pluralranges.cpp\n+plurfmt.cpp\n+plurrule.cpp\n+quant.cpp\n+quantityformatter.cpp\n+rbnf.cpp\n+rbt.cpp\n+rbt_data.cpp\n+rbt_pars.cpp\n+rbt_rule.cpp\n+rbt_set.cpp\n+rbtz.cpp\n+regexcmp.cpp\n+regeximp.cpp\n+regexst.cpp\n+regextxt.cpp\n+region.cpp\n+reldatefmt.cpp\n+reldtfmt.cpp\n+rematch.cpp\n+remtrans.cpp\n+repattrn.cpp\n+rulebasedcollator.cpp\n+scientificnumberformatter.cpp\n+scriptset.cpp\n+search.cpp\n+selfmt.cpp\n+sharedbreakiterator.cpp\n+simpletz.cpp\n+smpdtfmt.cpp\n+smpdtfst.cpp\n+sortkey.cpp\n+standardplural.cpp\n+string_segment.cpp\n+strmatch.cpp\n+strrepl.cpp\n+stsearch.cpp\n+taiwncal.cpp\n+timezone.cpp\n+titletrn.cpp\n+tmunit.cpp\n+tmutamt.cpp\n+tmutfmt.cpp\n+tolowtrn.cpp\n+toupptrn.cpp\n+translit.cpp\n+transreg.cpp\n+tridpars.cpp\n+tzfmt.cpp\n+tzgnames.cpp\n+tznames.cpp\n+tznames_impl.cpp\n+tzrule.cpp\n+tztrans.cpp\n+ucal.cpp\n+ucln_in.cpp\n+ucol.cpp\n+ucol_res.cpp\n+ucol_sit.cpp\n+ucoleitr.cpp\n+ucsdet.cpp\n+udat.cpp\n+udateintervalformat.cpp\n+udatpg.cpp\n+ufieldpositer.cpp\n+uitercollationiterator.cpp\n+ulistformatter.cpp\n+ulocdata.cpp\n+umsg.cpp\n+unesctrn.cpp\n+uni2name.cpp\n+units_data.cpp\n+units_complexconverter.cpp\n+units_converter.cpp\n+units_router.cpp\n+unum.cpp\n+unumsys.cpp\n+upluralrules.cpp\n+uregex.cpp\n+uregexc.cpp\n+uregion.cpp\n+usearch.cpp\n+uspoof.cpp\n+uspoof_build.cpp\n+uspoof_conf.cpp\n+uspoof_impl.cpp\n+utf16collationiterator.cpp\n+utf8collationiterator.cpp\n+utmscale.cpp\n+utrans.cpp\n+vtzone.cpp\n+vzone.cpp\n+windtfmt.cpp\n+winnmfmt.cpp\n+wintzimpl.cpp\n+zonemeta.cpp\n+zrule.cpp\n+ztrans.cpp\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/sources.txt","additions":240,"deletions":0,"binary":false,"changes":240,"status":"added"},{"patch":"@@ -13,1 +13,1 @@\n-#include \"numparse_stringsegment.h\"\n+#include \"string_segment.h\"\n@@ -18,3 +18,1 @@\n-using namespace icu;\n-using namespace icu::numparse;\n-using namespace icu::numparse::impl;\n+U_NAMESPACE_BEGIN\n@@ -146,0 +144,1 @@\n+U_NAMESPACE_END\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/string_segment.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/numparse_stringsegment.cpp","status":"renamed"},{"patch":"@@ -0,0 +1,134 @@\n+\/\/ © 2018 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __NUMPARSE_STRINGSEGMENT_H__\n+#define __NUMPARSE_STRINGSEGMENT_H__\n+\n+#include \"unicode\/unistr.h\"\n+#include \"unicode\/uniset.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\n+\/**\n+ * A mutable UnicodeString wrapper with a variable offset and length and\n+ * support for case folding. The charAt, length, and subSequence methods all\n+ * operate relative to the fixed offset into the UnicodeString.\n+ *\n+ * Intended to be useful for parsing.\n+ *\n+ * CAUTION: Since this class is mutable, it must not be used anywhere that an\n+ * immutable object is required, like in a cache or as the key of a hash map.\n+ *\n+ * @author sffc (Shane Carr)\n+ *\/\n+\/\/ Exported as U_I18N_API for tests\n+class U_I18N_API StringSegment : public UMemory {\n+  public:\n+    StringSegment(const UnicodeString& str, bool ignoreCase);\n+\n+    int32_t getOffset() const;\n+\n+    void setOffset(int32_t start);\n+\n+    \/**\n+     * Equivalent to <code>setOffset(getOffset()+delta)<\/code>.\n+     *\n+     * <p>\n+     * This method is usually called by a Matcher to register that a char was consumed. If the char is\n+     * strong (it usually is, except for things like whitespace), follow this with a call to\n+     * {@link ParsedNumber#setCharsConsumed}. For more information on strong chars, see that method.\n+     *\/\n+    void adjustOffset(int32_t delta);\n+\n+    \/**\n+     * Adjusts the offset by the width of the current code point, either 1 or 2 chars.\n+     *\/\n+    void adjustOffsetByCodePoint();\n+\n+    void setLength(int32_t length);\n+\n+    void resetLength();\n+\n+    int32_t length() const;\n+\n+    char16_t charAt(int32_t index) const;\n+\n+    UChar32 codePointAt(int32_t index) const;\n+\n+    UnicodeString toUnicodeString() const;\n+\n+    const UnicodeString toTempUnicodeString() const;\n+\n+    \/**\n+     * Returns the first code point in the string segment, or -1 if the string starts with an invalid\n+     * code point.\n+     *\n+     * <p>\n+     * <strong>Important:<\/strong> Most of the time, you should use {@link #startsWith}, which handles case\n+     * folding logic, instead of this method.\n+     *\/\n+    UChar32 getCodePoint() const;\n+\n+    \/**\n+     * Returns true if the first code point of this StringSegment equals the given code point.\n+     *\n+     * <p>\n+     * This method will perform case folding if case folding is enabled for the parser.\n+     *\/\n+    bool startsWith(UChar32 otherCp) const;\n+\n+    \/**\n+     * Returns true if the first code point of this StringSegment is in the given UnicodeSet.\n+     *\/\n+    bool startsWith(const UnicodeSet& uniset) const;\n+\n+    \/**\n+     * Returns true if there is at least one code point of overlap between this StringSegment and the\n+     * given UnicodeString.\n+     *\/\n+    bool startsWith(const UnicodeString& other) const;\n+\n+    \/**\n+     * Returns the length of the prefix shared by this StringSegment and the given UnicodeString. For\n+     * example, if this string segment is \"aab\", and the char sequence is \"aac\", this method returns 2,\n+     * since the first 2 characters are the same.\n+     *\n+     * <p>\n+     * This method only returns offsets along code point boundaries.\n+     *\n+     * <p>\n+     * This method will perform case folding if case folding was enabled in the constructor.\n+     *\n+     * <p>\n+     * IMPORTANT: The given UnicodeString must not be empty! It is the caller's responsibility to check.\n+     *\/\n+    int32_t getCommonPrefixLength(const UnicodeString& other);\n+\n+    \/**\n+     * Like {@link #getCommonPrefixLength}, but never performs case folding, even if case folding is\n+     * enabled for the parser.\n+     *\/\n+    int32_t getCaseSensitivePrefixLength(const UnicodeString& other);\n+\n+    bool operator==(const UnicodeString& other) const;\n+\n+  private:\n+    const UnicodeString& fStr;\n+    int32_t fStart;\n+    int32_t fEnd;\n+    bool fFoldCase;\n+\n+    int32_t getPrefixLengthInternal(const UnicodeString& other, bool foldCase);\n+\n+    static bool codePointsEqual(UChar32 cp1, UChar32 cp2, bool foldCase);\n+};\n+\n+\n+U_NAMESPACE_END\n+\n+#endif \/\/__NUMPARSE_STRINGSEGMENT_H__\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/string_segment.h","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -61,1 +61,1 @@\n-UnicodeFunctor* StringMatcher::clone() const {\n+StringMatcher* StringMatcher::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/strmatch.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    virtual UnicodeFunctor* clone() const;\n+    virtual StringMatcher* clone() const;\n@@ -112,1 +112,1 @@\n-     * @param incremental  if TRUE, then assume further characters may\n+     * @param incremental  if true, then assume further characters may\n@@ -116,1 +116,1 @@\n-     * match, or a mismatch.  If incremental is FALSE then\n+     * match, or a mismatch.  If incremental is false then\n@@ -131,1 +131,1 @@\n-                                     UBool escapeUnprintable = FALSE) const;\n+                                     UBool escapeUnprintable = false) const;\n@@ -135,1 +135,1 @@\n-     * Returns TRUE if this matcher will match a character c, where c\n+     * Returns true if this matcher will match a character c, where c\n@@ -140,1 +140,1 @@\n-     * @return     TRUE if this matcher will match a character c,\n+     * @return     true if this matcher will match a character c,\n@@ -184,1 +184,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/strmatch.h","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-UnicodeFunctor* StringReplacer::clone() const {\n+StringReplacer* StringReplacer::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/strrepl.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    virtual UnicodeFunctor* clone() const;\n+    virtual StringReplacer* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/strrepl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-SearchIterator * StringSearch::safeClone(void) const\n+StringSearch * StringSearch::safeClone() const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/stsearch.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-Calendar* TaiwanCalendar::clone(void) const\n+TaiwanCalendar* TaiwanCalendar::clone() const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/taiwncal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    virtual Calendar* clone(void) const;\n+    virtual TaiwanCalendar* clone() const;\n@@ -159,1 +159,1 @@\n-     * Returns TRUE because the Taiwan Calendar does have a default century\n+     * Returns true because the Taiwan Calendar does have a default century\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/taiwncal.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -530,0 +530,2 @@\n+static UMutex gDefaultZoneMutex;\n+\n@@ -539,0 +541,1 @@\n+    Mutex lock(&gDefaultZoneMutex);\n@@ -560,3 +563,0 @@\n-    \/\/ The only way for DEFAULT_ZONE to be non-null at this point is if the user\n-    \/\/ made a thread-unsafe call to setDefault() or adoptDefault() in another\n-    \/\/ thread while this thread was doing something that required getting the default.\n@@ -574,1 +574,22 @@\n-    return (DEFAULT_ZONE != NULL) ? DEFAULT_ZONE->clone() : NULL;\n+    {\n+        Mutex lock(&gDefaultZoneMutex);\n+        return (DEFAULT_ZONE != NULL) ? DEFAULT_ZONE->clone() : NULL;\n+    }\n+}\n+\n+\/\/ -------------------------------------\n+\n+TimeZone* U_EXPORT2\n+TimeZone::forLocaleOrDefault(const Locale& locale)\n+{\n+    char buffer[ULOC_KEYWORDS_CAPACITY] = \"\";\n+    UErrorCode localStatus = U_ZERO_ERROR;\n+    int32_t count = locale.getKeywordValue(\"timezone\", buffer, sizeof(buffer), localStatus);\n+    if (U_FAILURE(localStatus) || localStatus == U_STRING_NOT_TERMINATED_WARNING) {\n+        \/\/ the \"timezone\" keyword exceeds ULOC_KEYWORDS_CAPACITY; ignore and use default.\n+        count = 0;\n+    }\n+    if (count > 0) {\n+        return TimeZone::createTimeZone(UnicodeString(buffer, count, US_INV));\n+    }\n+    return TimeZone::createDefault();\n@@ -584,3 +605,6 @@\n-        TimeZone *old = DEFAULT_ZONE;\n-        DEFAULT_ZONE = zone;\n-        delete old;\n+        {\n+            Mutex lock(&gDefaultZoneMutex);\n+            TimeZone *old = DEFAULT_ZONE;\n+            DEFAULT_ZONE = zone;\n+            delete old;\n+        }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/timezone.cpp","additions":31,"deletions":7,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-Transliterator* TitlecaseTransliterator::clone(void) const {\n+TitlecaseTransliterator* TitlecaseTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/titletrn.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual TitlecaseTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/titletrn.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-UObject*\n+TimeUnit*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tmunit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-UObject*\n+TimeUnitAmount*\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tmutamt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,2 +139,2 @@\n-Format*\n-TimeUnitFormat::clone(void) const {\n+TimeUnitFormat*\n+TimeUnitFormat::clone() const {\n@@ -688,1 +688,1 @@\n-    adoptNumberFormat((NumberFormat *)format.clone(), status);\n+    adoptNumberFormat(format.clone(), status);\n@@ -724,2 +724,2 @@\n-            newVal[0] = (MessageFormat*)value[0]->clone();\n-            newVal[1] = (MessageFormat*)value[1]->clone();\n+            newVal[0] = value[0]->clone();\n+            newVal[1] = value[1]->clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tmutfmt.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-Transliterator* LowercaseTransliterator::clone(void) const {\n+LowercaseTransliterator* LowercaseTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tolowtrn.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual LowercaseTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tolowtrn.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-Transliterator* UppercaseTransliterator::clone(void) const {\n+UppercaseTransliterator* UppercaseTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/toupptrn.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual UppercaseTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/toupptrn.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,4 +94,1 @@\n-static icu::UMutex *registryMutex() {\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static icu::UMutex registryMutex;\n@@ -164,1 +161,1 @@\n-        filter = (UnicodeFilter*) other.filter->clone();\n+        filter = other.filter->clone();\n@@ -181,1 +178,1 @@\n-    adoptFilter((other.filter == 0) ? 0 : (UnicodeFilter*) other.filter->clone());\n+    adoptFilter((other.filter == 0) ? 0 : other.filter->clone());\n@@ -929,1 +926,1 @@\n-    UnicodeSet* globalFilter;\n+    UnicodeSet* globalFilter = nullptr;\n@@ -934,0 +931,1 @@\n+        delete globalFilter;\n@@ -936,0 +934,1 @@\n+    LocalPointer<UnicodeSet> lpGlobalFilter(globalFilter);\n@@ -959,2 +958,2 @@\n-        if (globalFilter != NULL) {\n-            t->adoptFilter(globalFilter);\n+        if (lpGlobalFilter.isValid()) {\n+            t->adoptFilter(lpGlobalFilter.orphan());\n@@ -984,1 +983,1 @@\n-    umtx_lock(registryMutex());\n+    umtx_lock(&registryMutex);\n@@ -988,1 +987,1 @@\n-    umtx_unlock(registryMutex());\n+    umtx_unlock(&registryMutex);\n@@ -1016,1 +1015,1 @@\n-            umtx_lock(registryMutex());\n+            umtx_lock(&registryMutex);\n@@ -1020,1 +1019,1 @@\n-            umtx_unlock(registryMutex());\n+            umtx_unlock(&registryMutex);\n@@ -1107,0 +1106,4 @@\n+                    if (U_FAILURE(status)) {\n+                        delete temp;\n+                        return nullptr;\n+                    }\n@@ -1120,1 +1123,3 @@\n-                    status = U_MEMORY_ALLOCATION_ERROR;\n+                    if (U_SUCCESS(status)) {\n+                        status = U_MEMORY_ALLOCATION_ERROR;\n+                    }\n@@ -1218,1 +1223,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1257,1 +1262,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1271,1 +1276,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1293,1 +1298,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1308,1 +1313,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1324,1 +1329,1 @@\n-    umtx_lock(registryMutex());\n+    umtx_lock(&registryMutex);\n@@ -1329,1 +1334,1 @@\n-    umtx_unlock(registryMutex());\n+    umtx_unlock(&registryMutex);\n@@ -1337,1 +1342,1 @@\n-    umtx_lock(registryMutex());\n+    umtx_lock(&registryMutex);\n@@ -1341,1 +1346,1 @@\n-    umtx_unlock(registryMutex());\n+    umtx_unlock(&registryMutex);\n@@ -1349,1 +1354,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1356,1 +1361,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1365,1 +1370,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1373,1 +1378,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1383,1 +1388,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1392,1 +1397,1 @@\n-    Mutex lock(registryMutex());\n+    Mutex lock(&registryMutex);\n@@ -1506,0 +1511,1 @@\n+    UErrorCode lstatus = U_ZERO_ERROR;\n@@ -1507,2 +1513,2 @@\n-    bundle = ures_open(U_ICUDATA_TRANSLIT, NULL\/*open default locale*\/, &status);\n-    transIDs = ures_getByKey(bundle, RB_RULE_BASED_IDS, 0, &status);\n+    bundle = ures_open(U_ICUDATA_TRANSLIT, NULL\/*open default locale*\/, &lstatus);\n+    transIDs = ures_getByKey(bundle, RB_RULE_BASED_IDS, 0, &lstatus);\n@@ -1512,1 +1518,7 @@\n-    if (U_SUCCESS(status)) {\n+    if (lstatus == U_MEMORY_ALLOCATION_ERROR) {\n+        delete registry;\n+        registry = nullptr;\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return FALSE;\n+    }\n+    if (U_SUCCESS(lstatus)) {\n@@ -1515,2 +1527,2 @@\n-            colBund = ures_getByIndex(transIDs, row, 0, &status);\n-            if (U_SUCCESS(status)) {\n+            colBund = ures_getByIndex(transIDs, row, 0, &lstatus);\n+            if (U_SUCCESS(lstatus)) {\n@@ -1522,1 +1534,1 @@\n-                UResourceBundle* res = ures_getNextResource(colBund, NULL, &status);\n+                UResourceBundle* res = ures_getNextResource(colBund, NULL, &lstatus);\n@@ -1527,1 +1539,1 @@\n-                if (U_SUCCESS(status)) {\n+                if (U_SUCCESS(lstatus)) {\n@@ -1537,1 +1549,1 @@\n-                            resString = ures_getStringByKey(res, \"resource\", &len, &status);\n+                            resString = ures_getStringByKey(res, \"resource\", &len, &lstatus);\n@@ -1540,1 +1552,1 @@\n-                                (ures_getUnicodeStringByKey(res, \"direction\", &status).charAt(0) ==\n+                                (ures_getUnicodeStringByKey(res, \"direction\", &lstatus).charAt(0) ==\n@@ -1543,1 +1555,1 @@\n-                            registry->put(id, UnicodeString(TRUE, resString, len), dir, TRUE, visible, status);\n+                            registry->put(id, UnicodeString(TRUE, resString, len), dir, TRUE, visible, lstatus);\n@@ -1548,2 +1560,2 @@\n-                        resString = ures_getString(res, &len, &status);\n-                        registry->put(id, UnicodeString(TRUE, resString, len), TRUE, TRUE, status);\n+                        resString = ures_getString(res, &len, &lstatus);\n+                        registry->put(id, UnicodeString(TRUE, resString, len), TRUE, TRUE, lstatus);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/translit.cpp","additions":53,"deletions":41,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-            t->adoptFilter((UnicodeSet*)compoundFilter->clone());\n+            t->adoptFilter(compoundFilter->clone());\n@@ -176,2 +176,2 @@\n-                    (compoundFilter ? (UnicodeSet*)(compoundFilter->clone()) : 0),\n-                    anonymousRBTs, pe, ec);\n+                        (compoundFilter ? compoundFilter->clone() : nullptr),\n+                        anonymousRBTs, pe, ec);\n@@ -949,1 +949,1 @@\n-            UnicodeString *newID = (UnicodeString *)ID.clone();\n+            UnicodeString *newID = ID.clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/transreg.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-     * Note: Only call create() if isRuleBased() returns FALSE.\n+     * Note: Only call create() if isRuleBased() returns false.\n@@ -80,1 +80,1 @@\n-     * Return TRUE if this alias is rule-based.  If so, the caller\n+     * Return true if this alias is rule-based.  If so, the caller\n@@ -86,1 +86,1 @@\n-     * If isRuleBased() returns TRUE, then the caller must call this\n+     * If isRuleBased() returns true, then the caller must call this\n@@ -90,1 +90,1 @@\n-     * Note: Only call parse() if isRuleBased() returns TRUE.\n+     * Note: Only call parse() if isRuleBased() returns true.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/transreg.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,4 +53,1 @@\n-static UMutex *LOCK() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex LOCK;\n@@ -300,0 +297,1 @@\n+            delete filter;\n@@ -665,1 +663,1 @@\n-    Mutex lock(LOCK());\n+    Mutex lock(&LOCK);\n@@ -869,1 +867,1 @@\n-    umtx_lock(LOCK());\n+    umtx_lock(&LOCK);\n@@ -871,1 +869,1 @@\n-    umtx_unlock(LOCK());\n+    umtx_unlock(&LOCK);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tridpars.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-     * @param isSourcePresent If TRUE then the source is present.\n+     * @param isSourcePresent If true then the source is present.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tridpars.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,0 +22,2 @@\n+#include \"bytesinkutil.h\"\n+#include \"charstr.h\"\n@@ -28,0 +30,1 @@\n+#include \"ulocimp.h\"\n@@ -150,4 +153,1 @@\n-static UMutex *gLock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gLock;\n@@ -330,2 +330,5 @@\n-        char loc[ULOC_FULLNAME_CAPACITY];\n-        uloc_addLikelySubtags(fLocale.getName(), loc, sizeof(loc), &status);\n+        CharString loc;\n+        {\n+            CharStringByteSink sink(&loc);\n+            ulocimp_addLikelySubtags(fLocale.getName(), sink, &status);\n+        }\n@@ -333,1 +336,1 @@\n-        regionLen = uloc_getCountry(loc, fTargetRegion, sizeof(fTargetRegion), &status);\n+        regionLen = uloc_getCountry(loc.data(), fTargetRegion, sizeof(fTargetRegion), &status);\n@@ -505,1 +508,1 @@\n-Format*\n+TimeZoneFormat*\n@@ -1388,1 +1391,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -1393,1 +1396,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -1404,1 +1407,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -1414,1 +1417,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -1878,1 +1881,1 @@\n-                        U16_GET(patStr, 0, 0, len, ch)\n+                        U16_GET(patStr, 0, 0, len, ch);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tzfmt.cpp","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+#include \"bytesinkutil.h\"\n+#include \"charstr.h\"\n@@ -30,0 +32,1 @@\n+#include \"ulocimp.h\"\n@@ -272,4 +275,1 @@\n-static UMutex *gLock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gLock;\n@@ -415,2 +415,5 @@\n-        char loc[ULOC_FULLNAME_CAPACITY];\n-        uloc_addLikelySubtags(fLocale.getName(), loc, sizeof(loc), &status);\n+        CharString loc;\n+        {\n+            CharStringByteSink sink(&loc);\n+            ulocimp_addLikelySubtags(fLocale.getName(), sink, &status);\n+        }\n@@ -418,1 +421,1 @@\n-        regionLen = uloc_getCountry(loc, fTargetRegion, sizeof(fTargetRegion), &status);\n+        regionLen = uloc_getCountry(loc.data(), fTargetRegion, sizeof(fTargetRegion), &status);\n@@ -491,1 +494,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -495,1 +498,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -746,1 +749,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -750,1 +753,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -1013,1 +1016,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -1017,1 +1020,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -1044,1 +1047,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -1066,1 +1069,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -1072,1 +1075,1 @@\n-    umtx_lock(gLock());\n+    umtx_lock(&gLock);\n@@ -1077,1 +1080,1 @@\n-    umtx_unlock(gLock());\n+    umtx_unlock(&gLock);\n@@ -1118,4 +1121,1 @@\n-static UMutex *gTZGNLock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gTZGNLock;\n@@ -1187,1 +1187,1 @@\n-    umtx_lock(gTZGNLock());\n+    umtx_lock(&gTZGNLock);\n@@ -1193,1 +1193,1 @@\n-    umtx_unlock(gTZGNLock());\n+    umtx_unlock(&gTZGNLock);\n@@ -1209,1 +1209,1 @@\n-        Mutex lock(gTZGNLock());\n+        Mutex lock(&gTZGNLock);\n@@ -1301,1 +1301,1 @@\n-        umtx_lock(gTZGNLock());\n+        umtx_lock(&gTZGNLock);\n@@ -1307,1 +1307,1 @@\n-        umtx_unlock(gTZGNLock());\n+        umtx_unlock(&gTZGNLock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tzgnames.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -32,4 +32,1 @@\n-static UMutex *gTimeZoneNamesLock() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gTimeZoneNamesLock;\n@@ -112,1 +109,1 @@\n-    virtual TimeZoneNames* clone() const;\n+    virtual TimeZoneNamesDelegate* clone() const;\n@@ -138,1 +135,1 @@\n-    Mutex lock(gTimeZoneNamesLock());\n+    Mutex lock(&gTimeZoneNamesLock);\n@@ -214,1 +211,1 @@\n-    umtx_lock(gTimeZoneNamesLock());\n+    umtx_lock(&gTimeZoneNamesLock);\n@@ -222,1 +219,1 @@\n-    umtx_unlock(gTimeZoneNamesLock());\n+    umtx_unlock(&gTimeZoneNamesLock);\n@@ -239,1 +236,1 @@\n-TimeZoneNames*\n+TimeZoneNamesDelegate*\n@@ -243,1 +240,1 @@\n-        umtx_lock(gTimeZoneNamesLock());\n+        umtx_lock(&gTimeZoneNamesLock);\n@@ -249,1 +246,1 @@\n-        umtx_unlock(gTimeZoneNamesLock());\n+        umtx_unlock(&gTimeZoneNamesLock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tznames.cpp","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+#include \"bytesinkutil.h\"\n+#include \"charstr.h\"\n@@ -29,0 +31,1 @@\n+#include \"ulocimp.h\"\n@@ -52,4 +55,1 @@\n-static UMutex *gDataMutex() {\n-    static UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static UMutex gDataMutex;\n@@ -391,1 +391,1 @@\n-        static UMutex TextTrieMutex = U_MUTEX_INITIALIZER;\n+        static UMutex TextTrieMutex;\n@@ -1116,1 +1116,1 @@\n-TimeZoneNames*\n+TimeZoneNamesImpl*\n@@ -1217,1 +1217,1 @@\n-        Mutex lock(gDataMutex());\n+        Mutex lock(&gDataMutex);\n@@ -1243,1 +1243,1 @@\n-        Mutex lock(gDataMutex());\n+        Mutex lock(&gDataMutex);\n@@ -1266,1 +1266,1 @@\n-        Mutex lock(gDataMutex());\n+        Mutex lock(&gDataMutex);\n@@ -1361,1 +1361,1 @@\n-        Mutex lock(gDataMutex());\n+        Mutex lock(&gDataMutex);\n@@ -1588,1 +1588,1 @@\n-        Mutex lock(gDataMutex());\n+        Mutex lock(&gDataMutex);\n@@ -1605,1 +1605,1 @@\n-        Mutex lock(gDataMutex());\n+        Mutex lock(&gDataMutex);\n@@ -1625,1 +1625,1 @@\n-                    Mutex lock(gDataMutex());\n+                    Mutex lock(&gDataMutex);\n@@ -2138,3 +2138,6 @@\n-        char loc[ULOC_FULLNAME_CAPACITY];\n-        uloc_addLikelySubtags(fLocale.getName(), loc, sizeof(loc), &status);\n-        regionLen = uloc_getCountry(loc, fRegion, sizeof(fRegion), &status);\n+        CharString loc;\n+        {\n+            CharStringByteSink sink(&loc);\n+            ulocimp_addLikelySubtags(fLocale.getName(), sink, &status);\n+        }\n+        regionLen = uloc_getCountry(loc.data(), fRegion, sizeof(fRegion), &status);\n@@ -2165,1 +2168,1 @@\n-TimeZoneNames*\n+TZDBTimeZoneNames*\n@@ -2250,1 +2253,1 @@\n-    static UMutex gTZDBNamesMapLock = U_MUTEX_INITIALIZER;\n+    static UMutex gTZDBNamesMapLock;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tznames_impl.cpp","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -95,3 +95,3 @@\n-    \/\/ No value:   fValues == NULL               and  fHasValuesVector == FALSE\n-    \/\/ One value:  fValues == value              and  fHasValuesVector == FALSE\n-    \/\/ >=2 values: fValues == UVector of values  and  fHasValuesVector == TRUE\n+    \/\/ No value:   fValues == NULL               and  fHasValuesVector == false\n+    \/\/ One value:  fValues == value              and  fHasValuesVector == false\n+    \/\/ >=2 values: fValues == UVector of values  and  fHasValuesVector == true\n@@ -177,1 +177,1 @@\n-    virtual TimeZoneNames* clone() const;\n+    virtual TimeZoneNamesImpl* clone() const;\n@@ -239,1 +239,1 @@\n-    virtual TimeZoneNames* clone() const;\n+    virtual TZDBTimeZoneNames* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tznames_impl.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-InitialTimeZoneRule::clone(void) const {\n+InitialTimeZoneRule::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/tzrule.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    if (ec!=NULL && U_SUCCESS(*ec)) {\n+    if (ec != NULL && U_SUCCESS(*ec)) {\n@@ -72,1 +72,1 @@\n-    if (ec!=NULL && U_SUCCESS(*ec)) {\n+    if (ec != NULL && U_SUCCESS(*ec)) {\n@@ -94,0 +94,17 @@\n+U_CAPI int32_t U_EXPORT2\n+ucal_getHostTimeZone(UChar* result, int32_t resultCapacity, UErrorCode* ec) {\n+    int32_t len = 0;\n+    if (ec != NULL && U_SUCCESS(*ec)) {\n+        TimeZone *zone = TimeZone::detectHostTimeZone();\n+        if (zone == NULL) {\n+            *ec = U_MEMORY_ALLOCATION_ERROR;\n+        } else {\n+            UnicodeString id;\n+            zone->getID(id);\n+            delete zone;\n+            len = id.extract(result, resultCapacity, *ec);\n+        }\n+    }\n+    return len;\n+}\n+\n@@ -140,0 +157,3 @@\n+  if (U_FAILURE(*status)) {\n+      return nullptr;\n+  }\n@@ -141,4 +161,2 @@\n-  if(U_FAILURE(*status)) return 0;\n-\n-  TimeZone* zone = (zoneID==NULL) ? TimeZone::createDefault()\n-      : _createTimeZone(zoneID, len, status);\n+  LocalPointer<TimeZone> zone( (zoneID==nullptr) ? TimeZone::createDefault()\n+      : _createTimeZone(zoneID, len, status), *status);\n@@ -147,1 +165,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -151,2 +169,2 @@\n-      char  localeBuf[ULOC_LOCALE_IDENTIFIER_CAPACITY];\n-      if ( locale == NULL ) {\n+      char localeBuf[ULOC_LOCALE_IDENTIFIER_CAPACITY];\n+      if ( locale == nullptr ) {\n@@ -155,1 +173,6 @@\n-      uprv_strncpy(localeBuf, locale, ULOC_LOCALE_IDENTIFIER_CAPACITY);\n+      int32_t localeLength = static_cast<int32_t>(uprv_strlen(locale));\n+      if (localeLength >= ULOC_LOCALE_IDENTIFIER_CAPACITY) {\n+          *status = U_ILLEGAL_ARGUMENT_ERROR;\n+          return nullptr;\n+      }\n+      uprv_strcpy(localeBuf, locale);\n@@ -158,1 +181,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -160,1 +183,1 @@\n-      return (UCalendar*)Calendar::createInstance(zone, Locale(localeBuf), *status);\n+      return (UCalendar*)Calendar::createInstance(zone.orphan(), Locale(localeBuf), *status);\n@@ -162,1 +185,1 @@\n-  return (UCalendar*)Calendar::createInstance(zone, Locale(locale), *status);\n+  return (UCalendar*)Calendar::createInstance(zone.orphan(), Locale(locale), *status);\n@@ -168,2 +191,3 @@\n-\n-  delete (Calendar*) cal;\n+    if (cal != nullptr) {\n+        delete (Calendar*) cal;\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ucal.cpp","additions":39,"deletions":15,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+    UCLN_I18N_UNIT_EXTRAS,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ucln_in.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- *  @return TRUE or FALSE\n+ *  @return true or false\n@@ -47,1 +47,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ucol_imp.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,4 @@\n+#include \"unicode\/stringpiece.h\"\n+#include \"charstr.h\"\n+\n+U_NAMESPACE_USE\n@@ -85,1 +89,0 @@\n-static const int32_t locProviderCapacity = 10;\n@@ -93,3 +96,4 @@\n-    char locElements[locElementCount][locElementCapacity];\n-    char locale[loc3066Capacity];\n-    char provider[locProviderCapacity];\n+    inline CollatorSpec();\n+\n+    CharString locElements[locElementCount];\n+    CharString locale;\n@@ -101,4 +105,1 @@\n-    struct {\n-        const char *start;\n-        int32_t len;\n-    } entries[UCOL_SIT_ITEMS_COUNT];\n+    CharString entries[UCOL_SIT_ITEMS_COUNT];\n@@ -107,0 +108,12 @@\n+CollatorSpec::CollatorSpec() :\n+locale(),\n+variableTopValue(0),\n+variableTopString(),\n+variableTopSet(FALSE)\n+ {\n+    \/\/ set collation options to default\n+    for(int32_t i = 0; i < UCOL_ATTRIBUTE_COUNT; i++) {\n+        options[i] = UCOL_DEFAULT;\n+    }\n+}\n+\n@@ -159,1 +172,0 @@\n-    int32_t len = 0;\n@@ -162,1 +174,1 @@\n-            spec->locElements[value][len++] = uprv_tolower(*string);\n+            spec->locElements[value].append(uprv_tolower(*string), *status);\n@@ -164,1 +176,1 @@\n-            spec->locElements[value][len++] = *string;\n+            spec->locElements[value].append(*string, *status);\n@@ -166,5 +178,1 @@\n-    } while(*(++string) != '_' && *string && len < locElementCapacity);\n-    if(len >= locElementCapacity) {\n-        *status = U_BUFFER_OVERFLOW_ERROR;\n-        return string;\n-    }\n+    } while(*(++string) != '_' && *string && U_SUCCESS(*status));\n@@ -188,1 +196,1 @@\n-        uprv_strncpy(spec->locale, string, end-string);\n+        spec->locale.copyFrom(CharString(string, static_cast<int32_t>(end-string), *status), *status);\n@@ -309,1 +317,0 @@\n-          spec->entries[i].start = start;\n@@ -311,1 +318,5 @@\n-          spec->entries[i].len = (int32_t)(end - start);\n+#ifdef UCOL_TRACE_SIT\n+          fprintf(stderr, \"***Set %d to %s...\\n\", i, start);\n+#endif\n+          \/\/ assume 'start' does not go away through all this\n+          spec->entries[i].copyFrom(CharString(start, (int32_t)(end - start), *status), *status);\n@@ -322,12 +333,0 @@\n-static\n-void ucol_sit_initCollatorSpecs(CollatorSpec *spec)\n-{\n-    \/\/ reset everything\n-    uprv_memset(spec, 0, sizeof(CollatorSpec));\n-    \/\/ set collation options to default\n-    int32_t i = 0;\n-    for(i = 0; i < UCOL_ATTRIBUTE_COUNT; i++) {\n-        spec->options[i] = UCOL_DEFAULT;\n-    }\n-}\n-\n@@ -360,1 +359,1 @@\n-            if(s->entries[i].start) {\n+            if(!s->entries[i].isEmpty()) {\n@@ -367,1 +366,1 @@\n-                optName = *(s->entries[i].start);\n+                optName = s->entries[i][0];\n@@ -369,1 +368,1 @@\n-                    for(j = 0; j < s->entries[i].len; j++) {\n+                    for(j = 0; j < s->entries[i].length(); j++) {\n@@ -371,1 +370,1 @@\n-                            destination[len+j] = uprv_toupper(*(s->entries[i].start+j));\n+                            destination[len+j] = uprv_toupper(s->entries[i][j]);\n@@ -374,1 +373,1 @@\n-                    len += s->entries[i].len;\n+                    len += s->entries[i].length();\n@@ -376,4 +375,1 @@\n-                    len += s->entries[i].len;\n-                    if(len < capacity) {\n-                        uprv_strncat(destination,s->entries[i].start, s->entries[i].len);\n-                    }\n+                    len += s->entries[i].extract(destination + len, capacity - len, *status);\n@@ -390,1 +386,1 @@\n-ucol_sit_calculateWholeLocale(CollatorSpec *s) {\n+ucol_sit_calculateWholeLocale(CollatorSpec *s, UErrorCode &status) {\n@@ -393,1 +389,1 @@\n-    if(s->locale[0] == 0) {\n+    if(s->locale.isEmpty()) {\n@@ -395,1 +391,1 @@\n-        uprv_strcat(s->locale, s->locElements[UCOL_SIT_LANGUAGE]);\n+        s->locale.append(s->locElements[UCOL_SIT_LANGUAGE], status);\n@@ -397,3 +393,3 @@\n-        if(*(s->locElements[UCOL_SIT_SCRIPT])) {\n-            uprv_strcat(s->locale, \"_\");\n-            uprv_strcat(s->locale, s->locElements[UCOL_SIT_SCRIPT]);\n+        if(!s->locElements[UCOL_SIT_SCRIPT].isEmpty()) {\n+            s->locale.append(\"_\", status);\n+            s->locale.append(s->locElements[UCOL_SIT_SCRIPT], status);\n@@ -402,5 +398,5 @@\n-        if(*(s->locElements[UCOL_SIT_REGION])) {\n-            uprv_strcat(s->locale, \"_\");\n-            uprv_strcat(s->locale, s->locElements[UCOL_SIT_REGION]);\n-        } else if(*(s->locElements[UCOL_SIT_VARIANT])) { \/\/ if there is a variant, we need an underscore\n-            uprv_strcat(s->locale, \"_\");\n+        if(!s->locElements[UCOL_SIT_REGION].isEmpty()) {\n+            s->locale.append(\"_\", status);\n+            s->locale.append(s->locElements[UCOL_SIT_REGION], status);\n+        } else if(!s->locElements[UCOL_SIT_VARIANT].isEmpty()) { \/\/ if there is a variant, we need an underscore\n+            s->locale.append(\"_\", status);\n@@ -409,3 +405,3 @@\n-        if(*(s->locElements[UCOL_SIT_VARIANT])) {\n-            uprv_strcat(s->locale, \"_\");\n-            uprv_strcat(s->locale, s->locElements[UCOL_SIT_VARIANT]);\n+        if(!s->locElements[UCOL_SIT_VARIANT].isEmpty()) {\n+            s->locale.append(\"_\", status);\n+            s->locale.append(s->locElements[UCOL_SIT_VARIANT], status);\n@@ -415,3 +411,3 @@\n-        if(*(s->locElements[UCOL_SIT_KEYWORD])) {\n-            uprv_strcat(s->locale, collationKeyword);\n-            uprv_strcat(s->locale, s->locElements[UCOL_SIT_KEYWORD]);\n+        if(!s->locElements[UCOL_SIT_KEYWORD].isEmpty()) {\n+            s->locale.append(collationKeyword, status);\n+            s->locale.append(s->locElements[UCOL_SIT_KEYWORD], status);\n@@ -421,3 +417,3 @@\n-        if(*(s->locElements[UCOL_SIT_PROVIDER])) {\n-            uprv_strcat(s->locale, providerKeyword);\n-            uprv_strcat(s->locale, s->locElements[UCOL_SIT_PROVIDER]);\n+        if(!s->locElements[UCOL_SIT_PROVIDER].isEmpty()) {\n+            s->locale.append(providerKeyword, status);\n+            s->locale.append(s->locElements[UCOL_SIT_PROVIDER], status);\n@@ -454,1 +450,0 @@\n-    ucol_sit_initCollatorSpecs(&s);\n@@ -456,1 +451,1 @@\n-    ucol_sit_calculateWholeLocale(&s);\n+    ucol_sit_calculateWholeLocale(&s, *status);\n@@ -460,1 +455,1 @@\n-    uloc_canonicalize(s.locale, buffer, internalBufferSize, status);\n+    uloc_canonicalize(s.locale.data(), buffer, internalBufferSize, status);\n@@ -525,1 +520,0 @@\n-    ucol_sit_initCollatorSpecs(&s);\n@@ -527,1 +521,1 @@\n-    ucol_sit_calculateWholeLocale(&s);\n+    ucol_sit_calculateWholeLocale(&s, *status);\n@@ -531,1 +525,4 @@\n-    uloc_canonicalize(s.locale, buffer, internalBufferSize, status);\n+#ifdef UCOL_TRACE_SIT\n+    fprintf(stderr, \"DEF %s, DATA %s, ERR %s\\n\", definition, s.locale.data(), u_errorName(*status));\n+#endif\n+    uloc_canonicalize(s.locale.data(), buffer, internalBufferSize, status);\n@@ -607,1 +604,0 @@\n-    ucol_sit_initCollatorSpecs(&s);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ucol_sit.cpp","additions":63,"deletions":67,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-U_DRAFT UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ucsdet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,4 @@\n-    UCAL_FIELD_COUNT,          \/\/ UDAT_FIELD_COUNT = 35\n+    UCAL_FIELD_COUNT,          \/\/ UDAT_AM_PM_MIDNIGHT_NOON_FIELD=35 (no match)\n+    UCAL_FIELD_COUNT,          \/\/ UDAT_FLEXIBLE_DAY_PERIOD_FIELD=36 (no match)\n+    UCAL_FIELD_COUNT,          \/\/ UDAT_TIME_SEPARATOR_FIELD = 37 (no match)\n+                               \/\/ UDAT_FIELD_COUNT = 38 as of ICU 67\n@@ -91,1 +94,3 @@\n-  return gDateFieldMapping[field];\n+  static_assert(UDAT_FIELD_COUNT == UPRV_LENGTHOF(gDateFieldMapping),\n+    \"UDateFormatField and gDateFieldMapping should have the same number of entries and be kept in sync.\");\n+  return (field >= UDAT_ERA_FIELD && field < UPRV_LENGTHOF(gDateFieldMapping))? gDateFieldMapping[field]: UCAL_FIELD_COUNT;\n@@ -97,1 +102,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -110,1 +115,1 @@\n-U_INTERNAL UDateFormatOpener U_EXPORT2\n+U_CAPI UDateFormatOpener U_EXPORT2\n@@ -170,1 +175,1 @@\n-    if(fmt == 0) {\n+    if(fmt == nullptr) {\n@@ -172,1 +177,5 @@\n-        return 0;\n+        return nullptr;\n+    }\n+    if (U_FAILURE(*status)) {\n+        delete fmt;\n+        return nullptr;\n@@ -418,1 +427,1 @@\n-U_DRAFT UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -428,1 +437,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -451,1 +460,1 @@\n-U_DRAFT const UNumberFormat* U_EXPORT2\n+U_CAPI const UNumberFormat* U_EXPORT2\n@@ -466,1 +475,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -488,1 +497,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/udat.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -21,0 +21,1 @@\n+#include \"unicode\/udisplaycontext.h\"\n@@ -119,1 +120,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -122,1 +123,0 @@\n-                UFormattedDateInterval* result,\n@@ -125,0 +125,1 @@\n+                UFormattedDateInterval* result,\n@@ -131,2 +132,41 @@\n-    resultImpl->fImpl = reinterpret_cast<const DateIntervalFormat*>(formatter)\n-        ->formatToValue(interval, *status);\n+    if (resultImpl != nullptr) {\n+        resultImpl->fImpl = reinterpret_cast<const DateIntervalFormat*>(formatter)\n+            ->formatToValue(interval, *status);\n+    }\n+}\n+\n+U_CAPI void U_EXPORT2\n+udtitvfmt_formatCalendarToResult(\n+                const UDateIntervalFormat* formatter,\n+                UCalendar*      fromCalendar,\n+                UCalendar*      toCalendar,\n+                UFormattedDateInterval* result,\n+                UErrorCode*     status) {\n+    if (U_FAILURE(*status)) {\n+        return;\n+    }\n+    auto* resultImpl = UFormattedDateIntervalApiHelper::validate(result, *status);\n+    if (resultImpl != nullptr) {\n+        resultImpl->fImpl = reinterpret_cast<const DateIntervalFormat*>(formatter)\n+            ->formatToValue(*(Calendar *)fromCalendar, *(Calendar *)toCalendar, *status);\n+    }\n+}\n+\n+U_CAPI void U_EXPORT2\n+udtitvfmt_setContext(UDateIntervalFormat* formatter,\n+                     UDisplayContext value,\n+                     UErrorCode* status) {\n+    if (U_FAILURE(*status)) {\n+        return;\n+    }\n+    reinterpret_cast<DateIntervalFormat*>(formatter)->setContext( value, *status );\n+}\n+\n+U_CAPI UDisplayContext U_EXPORT2\n+udtitvfmt_getContext(const UDateIntervalFormat* formatter,\n+                     UDisplayContextType type,\n+                     UErrorCode* status) {\n+    if (U_FAILURE(*status)) {\n+        return (UDisplayContext)0;\n+    }\n+    return reinterpret_cast<const DateIntervalFormat*>(formatter)->getContext( type, *status );\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/udateintervalformat.cpp","additions":44,"deletions":4,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -294,0 +294,5 @@\n+U_CAPI UDateFormatHourCycle U_EXPORT2\n+udatpg_getDefaultHourCycle(const UDateTimePatternGenerator *dtpg, UErrorCode* pErrorCode) {\n+    return ((const DateTimePatternGenerator *)dtpg)->getDefaultHourCycle(*pErrorCode);\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/udatpg.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-     * @return TRUE if success\n+     * @return true if success\n@@ -110,1 +110,1 @@\n-     * @return TRUE if success\n+     * @return true if success\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uitercollationiterator.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,0 +37,15 @@\n+U_CAPI UListFormatter* U_EXPORT2\n+ulistfmt_openForType(const char*  locale, UListFormatterType type,\n+                    UListFormatterWidth width, UErrorCode* status)\n+{\n+    if (U_FAILURE(*status)) {\n+        return NULL;\n+    }\n+    LocalPointer<ListFormatter> listfmt(ListFormatter::createInstance(Locale(locale), type, width, *status));\n+    if (U_FAILURE(*status)) {\n+        return NULL;\n+    }\n+    return (UListFormatter*)listfmt.orphan();\n+}\n+\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ulistformatter.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-    delimiter = ures_getStringByKey(delimiterBundle, delimiterKeys[type], &len, &localStatus);\n+    delimiter = ures_getStringByKeyWithFallback(delimiterBundle, delimiterKeys[type], &len, &localStatus);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/ulocdata.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-Transliterator* UnescapeTransliterator::clone() const {\n+UnescapeTransliterator* UnescapeTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unesctrn.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    virtual Transliterator* clone() const;\n+    virtual UnescapeTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unesctrn.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-Transliterator* UnicodeNameTransliterator::clone(void) const {\n+UnicodeNameTransliterator* UnicodeNameTransliterator::clone() const {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uni2name.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    virtual Transliterator* clone(void) const;\n+    virtual UnicodeNameTransliterator* clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uni2name.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -16,0 +16,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -549,1 +552,1 @@\n-     *   Advance the iteration over the Buckets of this index.  Return FALSE if\n+     *   Advance the iteration over the Buckets of this index.  Return false if\n@@ -556,1 +559,1 @@\n-     *   @return TRUE if success, FALSE if at end of iteration\n+     *   @return true if success, false if at end of iteration\n@@ -609,1 +612,1 @@\n-     *   @return TRUE if successful, FALSE when the iteration advances past the last item.\n+     *   @return true if successful, false when the iteration advances past the last item.\n@@ -760,0 +763,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/alphaindex.h","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -44,0 +46,8 @@\n+    \/**\n+     * Clones this object polymorphically.\n+     * The caller owns the result and should delete it when done.\n+     * @return clone, or nullptr if an error occurred\n+     * @stable ICU 3.8\n+     *\/\n+    virtual BasicTimeZone* clone() const = 0;\n+\n@@ -49,1 +59,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -59,1 +69,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -199,0 +209,6 @@\n+    \/**\n+     * Copy assignment.\n+     * @stable ICU 3.8\n+     *\/\n+    BasicTimeZone& operator=(const BasicTimeZone&) = default;\n+\n@@ -214,0 +230,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/basictz.h","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -187,1 +189,1 @@\n-\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -230,0 +232,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -290,1 +293,1 @@\n-    virtual Calendar* clone(void) const = 0;\n+    virtual Calendar* clone() const = 0;\n@@ -464,1 +467,1 @@\n-     * Returns TRUE if the given Calendar object is equivalent to this\n+     * Returns true if the given Calendar object is equivalent to this\n@@ -467,1 +470,1 @@\n-     * the operator==() method to return TRUE, the other Calendar must\n+     * the operator==() method to return true, the other Calendar must\n@@ -521,0 +524,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -542,0 +546,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -635,0 +640,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -667,0 +673,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -701,0 +708,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -757,0 +765,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -1013,0 +1022,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -1022,0 +1032,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -1033,0 +1044,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -1042,0 +1054,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -1053,0 +1066,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -1062,0 +1076,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -1073,0 +1088,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -1082,0 +1098,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -1345,1 +1362,1 @@\n-     *     int32_t length = uloc_toLanguageTag(localeID.c_str(), langTag, (int32_t)sizeof(langTag), TRUE, &errorCode);\n+     *     int32_t length = uloc_toLanguageTag(localeID.c_str(), langTag, (int32_t)sizeof(langTag), true, &errorCode);\n@@ -1396,1 +1413,1 @@\n-     * Returns TRUE if the given UDate is in the weekend in\n+     * Returns true if the given UDate is in the weekend in\n@@ -1400,2 +1417,2 @@\n-     * @return TRUE if the given UDate is in the weekend in\n-     * this calendar system, FALSE otherwise.\n+     * @return true if the given UDate is in the weekend in\n+     * this calendar system, false otherwise.\n@@ -1407,1 +1424,1 @@\n-     * Returns TRUE if this Calendar's current date-time is in the weekend in\n+     * Returns true if this Calendar's current date-time is in the weekend in\n@@ -1409,2 +1426,2 @@\n-     * @return TRUE if this Calendar's current date-time is in the weekend in\n-     * this calendar system, FALSE otherwise.\n+     * @return true if this Calendar's current date-time is in the weekend in\n+     * this calendar system, false otherwise.\n@@ -1898,0 +1915,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -1903,0 +1921,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -2284,1 +2303,0 @@\n-     * @internal\n@@ -2294,1 +2312,0 @@\n-     * @internal\n@@ -2358,1 +2375,1 @@\n-     * @return TRUE if the factory for the key was successfully unregistered\n+     * @return true if the factory for the key was successfully unregistered\n@@ -2384,1 +2401,1 @@\n-     * @return TRUE if this calendar has a default century (i.e. 03 -> 2003)\n+     * @return true if this calendar has a default century (i.e. 03 -> 2003)\n@@ -2444,1 +2461,1 @@\n-     * @return TRUE if a transition is found.\n+     * @return true if a transition is found.\n@@ -2517,1 +2534,1 @@\n-    fIsSet[field]     = TRUE; \/\/ Remove later\n+    fIsSet[field]     = true; \/\/ Remove later\n@@ -2532,0 +2549,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/calendar.h","additions":36,"deletions":17,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -35,1 +37,0 @@\n-#ifndef U_HIDE_DEPRECATED_API\n@@ -43,0 +44,2 @@\n+#ifndef U_HIDE_DEPRECATED_API\n+\n@@ -106,1 +109,1 @@\n- * <code>closure[i]==TRUE<\/code> corresponds to a <code>less_than<\/code> separator sign.\n+ * <code>closure[i]==true<\/code> corresponds to a <code>less_than<\/code> separator sign.\n@@ -126,1 +129,1 @@\n- * specifying all closures to be <code>FALSE<\/code>.<\/p>\n+ * specifying all closures to be <code>false<\/code>.<\/p>\n@@ -138,1 +141,1 @@\n- *     {FALSE, FALSE, TRUE},\n+ *     {false, false, true},\n@@ -189,1 +192,1 @@\n-     * All closure flags default to <code>FALSE<\/code>,\n+     * All closure flags default to <code>false<\/code>,\n@@ -210,1 +213,1 @@\n-     * element of 'limits' is open or closed.  If FALSE, then the\n+     * element of 'limits' is open or closed.  If false, then the\n@@ -212,1 +215,1 @@\n-     * If TRUE, then the limit number belongs to the previous range it.\n+     * If true, then the limit number belongs to the previous range it.\n@@ -251,1 +254,1 @@\n-    virtual Format* clone(void) const;\n+    virtual ChoiceFormat* clone() const;\n@@ -568,1 +571,1 @@\n-     * is FALSE, then the value fChoiceLimits[i] is in interval i.\n+     * is false, then the value fChoiceLimits[i] is in interval i.\n@@ -574,1 +577,1 @@\n-     * If fClosures[i] is TRUE, then the value fChoiceLimits[i] is\n+     * If fClosures[i] is true, then the value fChoiceLimits[i] is\n@@ -595,0 +598,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/choicfmt.h","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -254,1 +256,1 @@\n-    * @return TRUE if a character is ignorable, FALSE otherwise.\n+    * @return true if a character is ignorable, false otherwise.\n@@ -407,0 +409,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/coleitr.h","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -207,0 +209,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -223,0 +226,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -235,1 +239,1 @@\n-     * Returns TRUE if \"other\" is the same as \"this\".\n+     * Returns true if \"other\" is the same as \"this\".\n@@ -237,1 +241,1 @@\n-     * The base class implementation returns TRUE if \"other\" has the same type\/class as \"this\":\n+     * The base class implementation returns true if \"other\" has the same type\/class as \"this\":\n@@ -242,2 +246,2 @@\n-     *     if (this == &other) { return TRUE; }\n-     *     if (!Collator::operator==(other)) { return FALSE; }  \/\/ not the same class\n+     *     if (this == &other) { return true; }\n+     *     if (!Collator::operator==(other)) { return false; }  \/\/ not the same class\n@@ -249,1 +253,1 @@\n-     * @return TRUE if other is the same as this.\n+     * @return true if other is the same as this.\n@@ -258,1 +262,1 @@\n-     * @return TRUE if other is not the same as this.\n+     * @return true if other is not the same as this.\n@@ -268,1 +272,1 @@\n-    virtual Collator* clone(void) const = 0;\n+    virtual Collator* clone() const = 0;\n@@ -303,1 +307,1 @@\n-     * See <a href=\"http:\/\/userguide.icu-project.org\/collation\/api\">User Guide: Collation API<\/a>.\n+     * See <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/api\">User Guide: Collation API<\/a>.\n@@ -326,0 +330,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -339,0 +344,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -356,0 +362,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -371,0 +378,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -390,0 +398,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -426,0 +435,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -530,0 +540,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -543,0 +554,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -579,0 +591,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -610,0 +623,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -777,1 +791,1 @@\n-     * href=\"http:\/\/userguide.icu-project.org\/locale#TOC-Locales-and-Services\">\n+     * href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/locale#locales-and-services\">\n@@ -830,1 +844,1 @@\n-     * @return TRUE if the collator for the key was successfully unregistered\n+     * @return true if the collator for the key was successfully unregistered\n@@ -907,0 +921,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -954,0 +969,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -975,0 +991,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -982,1 +999,2 @@\n-    virtual Collator* safeClone(void) const;\n+    virtual Collator* safeClone() const;\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -1124,1 +1142,1 @@\n-     *  http:\/\/userguide.icu-project.org\/collation\/concepts#TOC-Collator-naming-scheme\n+     *  https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/concepts#collator-naming-scheme\n@@ -1274,0 +1292,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/coll.h","additions":32,"deletions":12,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -17,0 +17,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -105,1 +108,1 @@\n-    Format* clone() const U_OVERRIDE;\n+    CompactDecimalFormat* clone() const U_OVERRIDE;\n@@ -190,0 +193,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/compactdecimalformat.h","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -18,0 +18,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -42,1 +44,1 @@\n-     * @param amount a numeric object; amount.isNumeric() must be TRUE\n+     * @param amount a numeric object; amount.isNumeric() must be true\n@@ -82,1 +84,1 @@\n-    virtual UObject* clone() const;\n+    virtual CurrencyAmount* clone() const;\n@@ -132,0 +134,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/curramt.h","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -14,0 +14,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -269,0 +271,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/currpinf.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,0 +18,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -57,1 +59,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -65,1 +66,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -68,1 +69,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -97,1 +97,1 @@\n-    virtual UObject* clone() const;\n+    virtual CurrencyUnit* clone() const;\n@@ -143,0 +143,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/currunit.h","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -224,0 +226,8 @@\n+    \/**\n+     * Clones this object polymorphically.\n+     * The caller owns the result and should delete it when done.\n+     * @return clone, or nullptr if an error occurred\n+     * @stable ICU 2.0\n+     *\/\n+    virtual DateFormat* clone() const = 0;\n+\n@@ -956,0 +966,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/datefmt.h","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n-#include \"unicode\/uchar.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -35,0 +36,1 @@\n+#include \"unicode\/uchar.h\"\n@@ -292,0 +294,11 @@\n+#ifndef U_HIDE_INTERNAL_API\n+    \/**\n+     * Loads symbols for the specified currency into this instance.\n+     *\n+     * This method is internal. If you think it should be public, file a ticket.\n+     *\n+     * @internal\n+     *\/\n+    void setCurrency(const UChar* currency, UErrorCode& status);\n+#endif  \/\/ U_HIDE_INTERNAL_API\n+\n@@ -368,1 +381,1 @@\n-        UBool useLastResortData = FALSE, const NumberingSystem* ns = nullptr);\n+                    UBool useLastResortData = false, const NumberingSystem* ns = nullptr);\n@@ -375,2 +388,0 @@\n-    void setCurrencyForSymbols();\n-\n@@ -458,1 +469,0 @@\n-     * @internal\n@@ -464,1 +474,0 @@\n-     * @internal\n@@ -537,1 +546,1 @@\n-DecimalFormatSymbols::setSymbol(ENumberFormatSymbol symbol, const UnicodeString &value, const UBool propogateDigits = TRUE) {\n+DecimalFormatSymbols::setSymbol(ENumberFormatSymbol symbol, const UnicodeString &value, const UBool propagateDigits = true) {\n@@ -539,1 +548,1 @@\n-        fIsCustomCurrencySymbol = TRUE;\n+        fIsCustomCurrencySymbol = true;\n@@ -542,1 +551,1 @@\n-        fIsCustomIntlCurrencySymbol = TRUE;\n+        fIsCustomIntlCurrencySymbol = true;\n@@ -553,1 +562,1 @@\n-        if ( propogateDigits && u_charDigitValue(sym) == 0 && value.countChar32() == 1 ) {\n+        if ( propagateDigits && u_charDigitValue(sym) == 0 && value.countChar32() == 1 ) {\n@@ -585,0 +594,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/dcfmtsym.h","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -53,1 +56,0 @@\n-class FormattedNumber;\n@@ -57,0 +59,1 @@\n+class UFormattedNumberData;\n@@ -564,1 +567,1 @@\n- * call setSignificantDigitsUsed(TRUE).\n+ * call setSignificantDigitsUsed(true).\n@@ -568,1 +571,1 @@\n- * character. Alternatively, call setSignificantDigitsUsed(FALSE).\n+ * character. Alternatively, call setSignificantDigitsUsed(false).\n@@ -817,2 +820,2 @@\n-     * @param enable \\c TRUE if lenient parsing should be used,\n-     *               \\c FALSE otherwise.\n+     * @param enable \\c true if lenient parsing should be used,\n+     *               \\c false otherwise.\n@@ -899,1 +902,1 @@\n-    Format* clone(void) const U_OVERRIDE;\n+    DecimalFormat* clone() const U_OVERRIDE;\n@@ -1283,1 +1286,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1290,1 +1292,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1300,1 +1302,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1303,1 +1305,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1334,1 +1335,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1345,1 +1345,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1366,1 +1366,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1369,1 +1369,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1511,1 +1510,1 @@\n-     * @return TRUE if this object formats and parses scientific notation\n+     * @return true if this object formats and parses scientific notation\n@@ -1527,1 +1526,1 @@\n-     * @param useScientific TRUE if this object formats and parses scientific\n+     * @param useScientific true if this object formats and parses scientific\n@@ -1566,1 +1565,1 @@\n-     * @return TRUE if the exponent is always prefixed with either the\n+     * @return true if the exponent is always prefixed with either the\n@@ -1581,1 +1580,1 @@\n-     * @param expSignAlways TRUE if the exponent is always prefixed with either\n+     * @param expSignAlways true if the exponent is always prefixed with either\n@@ -1652,1 +1651,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1674,1 +1672,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1679,2 +1677,9 @@\n-     * Sets the minimum grouping digits. Setting to a value less than or\n-     * equal to 1 turns off minimum grouping digits.\n+     * Sets the minimum grouping digits. Setting the value to\n+     *  - 1: Turns off minimum grouping digits.\n+     *  - 0 or -1: The behavior is undefined.\n+     *  - UNUM_MINIMUM_GROUPING_DIGITS_AUTO: Display grouping using the default\n+     *      strategy for all locales.\n+     *  - UNUM_MINIMUM_GROUPING_DIGITS_MIN2: Display grouping using locale\n+     *      defaults, except do not show grouping on values smaller than 10000\n+     *      (such that there is a minimum of two digits before the first\n+     *      separator).\n@@ -1686,1 +1691,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1689,2 +1694,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-\n@@ -1696,1 +1699,1 @@\n-     * @return    TRUE if the decimal separator always appear with decimals.\n+     * @return    true if the decimal separator always appear with decimals.\n@@ -1706,1 +1709,1 @@\n-     * @param newValue    set TRUE if the decimal separator will always appear with decimals.\n+     * @param newValue    set true if the decimal separator will always appear with decimals.\n@@ -1715,1 +1718,1 @@\n-     * @return    TRUE if input must contain a match to decimal mark in pattern\n+     * @return    true if input must contain a match to decimal mark in pattern\n@@ -1723,2 +1726,2 @@\n-     * if TRUE, the input must have a decimal mark if one was specified in the pattern. When\n-     * FALSE the decimal mark may be omitted from the input.\n+     * if true, the input must have a decimal mark if one was specified in the pattern. When\n+     * false the decimal mark may be omitted from the input.\n@@ -1726,1 +1729,1 @@\n-     * @param newValue    set TRUE if input must contain a match to decimal mark in pattern\n+     * @param newValue    set true if input must contain a match to decimal mark in pattern\n@@ -1731,1 +1734,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1737,1 +1739,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1747,1 +1749,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1756,1 +1758,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1769,1 +1771,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1779,1 +1781,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1788,1 +1790,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1791,2 +1793,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-\n@@ -1972,1 +1972,1 @@\n-     * by this formatter - areSignificantDigitsUsed() will return TRUE.\n+     * by this formatter - areSignificantDigitsUsed() will return true.\n@@ -1985,1 +1985,1 @@\n-     * by this formatter - areSignificantDigitsUsed() will return TRUE.\n+     * by this formatter - areSignificantDigitsUsed() will return true.\n@@ -2023,0 +2023,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -2029,0 +2030,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -2067,1 +2069,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2111,1 +2112,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2114,17 +2115,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-\n-#ifndef U_HIDE_DEPRECATED_API\n-    \/**\n-     * Deprecated: Like {@link #toNumberFormatter(UErrorCode&) const},\n-     * but does not take an error code.\n-     *\n-     * The new signature should be used in case an error occurs while returning the\n-     * LocalizedNumberFormatter.\n-     *\n-     * This old signature will be removed in ICU 65.\n-     *\n-     * @return A reference to an internal object.\n-     * @deprecated ICU 64\n-     *\/\n-    const number::LocalizedNumberFormatter& toNumberFormatter() const;\n-#endif  \/* U_HIDE_DEPRECATED_API *\/\n@@ -2184,2 +2168,5 @@\n-    static void fieldPositionHelper(const number::FormattedNumber& formatted, FieldPosition& fieldPosition,\n-                                    int32_t offset, UErrorCode& status);\n+    static void fieldPositionHelper(\n+        const number::impl::UFormattedNumberData& formatted,\n+        FieldPosition& fieldPosition,\n+        int32_t offset,\n+        UErrorCode& status);\n@@ -2187,2 +2174,5 @@\n-    static void fieldPositionIteratorHelper(const number::FormattedNumber& formatted,\n-                                            FieldPositionIterator* fpi, int32_t offset, UErrorCode& status);\n+    static void fieldPositionIteratorHelper(\n+        const number::impl::UFormattedNumberData& formatted,\n+        FieldPositionIterator* fpi,\n+        int32_t offset,\n+        UErrorCode& status);\n@@ -2219,0 +2209,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/decimfmt.h","additions":57,"deletions":65,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -920,1 +922,2 @@\n-    void initializeData(const Locale& locale, const char *type, UErrorCode& status, UBool useLastResortData = FALSE);\n+    void initializeData(const Locale& locale, const char *type,\n+                        UErrorCode& status, UBool useLastResortData = false);\n@@ -984,1 +987,1 @@\n-     * Returns TRUE if f (with its pattern character repeated count times) is a numeric field.\n+     * Returns true if f (with its pattern character repeated count times) is a numeric field.\n@@ -989,1 +992,1 @@\n-     * Returns TRUE if c (repeated count times) is the pattern character for a numeric field.\n+     * Returns true if c (repeated count times) is the pattern character for a numeric field.\n@@ -1014,0 +1017,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/dtfmtsym.h","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -32,0 +34,1 @@\n+#include \"unicode\/udisplaycontext.h\"\n@@ -39,1 +42,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -55,1 +57,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -61,1 +63,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -67,1 +69,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -73,1 +75,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -85,1 +87,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -110,1 +112,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -175,1 +176,2 @@\n- * year, month, date, day-of-week, am-pm, hour, hour-of-day, minute, and second\n+ * year, month, date, day-of-week, am-pm, hour, hour-of-day, minute, second,\n+ * and millisecond.\n@@ -177,1 +179,1 @@\n- * with seconds).\n+ * with seconds and millisecond).\n@@ -179,1 +181,1 @@\n- * year >  month > date > hour (in day) >  minute > second\n+ * year >  month > date > hour (in day) >  minute > second > millisecond\n@@ -435,1 +437,1 @@\n-    virtual Format* clone(void) const;\n+    virtual DateIntervalFormat* clone() const;\n@@ -504,1 +506,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -513,1 +514,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -518,1 +519,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -549,1 +549,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -564,1 +563,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -570,1 +569,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -657,0 +655,28 @@\n+#ifndef U_FORCE_HIDE_DRAFT_API\n+    \/**\n+     * Set a particular UDisplayContext value in the formatter, such as\n+     * UDISPCTX_CAPITALIZATION_FOR_STANDALONE. This causes the formatted\n+     * result to be capitalized appropriately for the context in which\n+     * it is intended to be used, considering both the locale and the\n+     * type of field at the beginning of the formatted result.\n+     * @param value The UDisplayContext value to set.\n+     * @param status Input\/output status. If at entry this indicates a failure\n+     *               status, the function will do nothing; otherwise this will be\n+     *               updated with any new status from the function.\n+     * @draft ICU 68\n+     *\/\n+    virtual void setContext(UDisplayContext value, UErrorCode& status);\n+\n+    \/**\n+     * Get the formatter's UDisplayContext value for the specified UDisplayContextType,\n+     * such as UDISPCTX_TYPE_CAPITALIZATION.\n+     * @param type The UDisplayContextType whose value to return\n+     * @param status Input\/output status. If at entry this indicates a failure\n+     *               status, the function will do nothing; otherwise this will be\n+     *               updated with any new status from the function.\n+     * @return The UDisplayContextValue for the specified type.\n+     * @draft ICU 68\n+     *\/\n+    virtual UDisplayContext getContext(UDisplayContextType type, UErrorCode& status) const;\n+#endif  \/\/ U_FORCE_HIDE_DRAFT_API\n+\n@@ -802,1 +828,1 @@\n-     * @param fromToOnSameDay   TRUE iff from and to dates are on the same day\n+     * @param fromToOnSameDay   true iff from and to dates are on the same day\n@@ -873,0 +899,13 @@\n+    \/**\n+     * Converts special hour metacharacters (such as 'j') in the skeleton into locale-appropriate\n+     * pattern characters.\n+     *\n+     *\n+     *  @param skeleton               The skeleton to convert\n+     *  @return A copy of the skeleton, which \"j\" and any other special hour metacharacters converted to the regular ones.\n+     *\n+     *\/\n+    UnicodeString normalizeHourMetacharacters(const UnicodeString& skeleton) const;\n+\n+\n+\n@@ -925,2 +964,2 @@\n-     *                       TRUE if interval pattern found for the skeleton,\n-     *                       FALSE otherwise.\n+     *                       true if interval pattern found for the skeleton,\n+     *                       false otherwise.\n@@ -954,2 +993,2 @@\n-     *                              TRUE if interval pattern is found by\n-     *                              extending skeleton, FALSE otherwise.\n+     *                              true if interval pattern is found by\n+     *                              extending skeleton, false otherwise.\n@@ -990,0 +1029,1 @@\n+     * @param suppressDayPeriodField if true, remove the day period field from the pattern, if there is one\n@@ -997,0 +1037,1 @@\n+                            UBool suppressDayPeriodField,\n@@ -999,0 +1040,11 @@\n+    \/**\n+     * Does the same thing as UnicodeString::findAndReplace(), except that it won't perform\n+     * the substitution inside quoted literal text.\n+     * @param targetString The string to perform the find-replace operation on.\n+     * @param strToReplace The string to search for and replace in the target string.\n+     * @param strToReplaceWith The string to substitute in wherever `stringToReplace` was found.\n+     *\/\n+    static void U_EXPORT2 findReplaceInPattern(UnicodeString& targetString,\n+                                               const UnicodeString& strToReplace,\n+                                               const UnicodeString& strToReplaceWith);\n+\n@@ -1143,0 +1195,5 @@\n+\n+    \/**\n+     * Other formatting information\n+     *\/\n+    UDisplayContext fCapitalizationContext;\n@@ -1154,0 +1211,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/dtitvfmt.h","additions":81,"deletions":22,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -138,2 +140,2 @@\n- * calendar fields are different: ERA, YEAR, MONTH, DATE,  DAY_OF_MONTH,\n- * DAY_OF_WEEK, AM_PM,  HOUR, HOUR_OF_DAY, and MINUTE.\n+ * calendar fields are different: ERA, YEAR, MONTH, DATE, DAY_OF_MONTH,\n+ * DAY_OF_WEEK, AM_PM, HOUR, HOUR_OF_DAY, MINUTE, SECOND, and MILLISECOND.\n@@ -198,1 +200,1 @@\n-    virtual DateIntervalInfo* clone(void) const;\n+    virtual DateIntervalInfo* clone() const;\n@@ -246,1 +248,1 @@\n-     * DAY_OF_WEEK, AM_PM,  HOUR, HOUR_OF_DAY, and MINUTE.\n+     * DAY_OF_WEEK, AM_PM,  HOUR, HOUR_OF_DAY, MINUTE, SECOND and MILLISECOND.\n@@ -308,2 +310,2 @@\n-     * return default date ordering in interval pattern. TRUE if the first date\n-     *        in pattern is later date, FALSE otherwise.\n+     * return default date ordering in interval pattern. true if the first date\n+     *        in pattern is later date, false otherwise.\n@@ -349,1 +351,1 @@\n-     * ERA, YEAR, MONTH, DAY, AM_PM, HOUR, and MINUTE\n+     * ERA, YEAR, MONTH, DAY, AM_PM, HOUR, MINUTE, SECOND and MILLISECOND.\n@@ -361,0 +363,1 @@\n+        kIPI_MILLISECOND,\n@@ -454,2 +457,2 @@\n-     * ERA, YEAR, MONTH, DATE,  DAY_OF_MONTH, DAY_OF_WEEK,\n-     * AM_PM,  HOUR, HOUR_OF_DAY, and MINUTE,\n+     * ERA, YEAR, MONTH, DATE, DAY_OF_MONTH, DAY_OF_WEEK,\n+     * AM_PM, HOUR, HOUR_OF_DAY, MINUTE, SECOND, and MILLISECOND.\n@@ -518,0 +521,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/dtitvinf.h","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -17,0 +17,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -75,0 +79,7 @@\n+    \/**\n+     * For ICU use only. Skips loading the standard date\/time patterns (which is done via DateFormat).\n+     *\n+     * @internal\n+     *\/\n+    static DateTimePatternGenerator* U_EXPORT2 createInstanceNoStdPat(const Locale& uLocale, UErrorCode& status);\n+\n@@ -282,1 +293,1 @@\n-     * @return.      The display name for field\n+     * @return       The display name for field\n@@ -482,0 +493,20 @@\n+#if !UCONFIG_NO_FORMATTING\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Get the default hour cycle for a locale. Uses the locale that the\n+     * DateTimePatternGenerator was initially created with.\n+     *\n+     * Cannot be used on an empty DateTimePatternGenerator instance.\n+     *\n+     * @param status  Output param set to success\/failure code on exit, which\n+     *                which must not indicate a failure before the function call.\n+     *                Set to U_UNSUPPORTED_ERROR if used on an empty instance.\n+     * @return the default hour cycle.\n+     * @draft ICU 67\n+     *\/\n+    UDateFormatHourCycle getDefaultHourCycle(UErrorCode& status) const;\n+#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+\n@@ -505,1 +536,1 @@\n-    DateTimePatternGenerator(const Locale& locale, UErrorCode & status);\n+    DateTimePatternGenerator(const Locale& locale, UErrorCode & status, UBool skipStdPatterns = false);\n@@ -552,1 +583,1 @@\n-    void initData(const Locale &locale, UErrorCode &status);\n+    void initData(const Locale &locale, UErrorCode &status, UBool skipStdPatterns = false);\n@@ -564,2 +595,1 @@\n-#ifndef U_HIDE_DRAFT_API\n-    \/\/ The following three have to be U_HIDE_DRAFT_API (though private) because UDateTimePGDisplayWidth is\n+    \/\/ Note for the next 3: UDateTimePGDisplayWidth is now stable ICU 61\n@@ -569,1 +599,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -590,0 +619,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/dtptngen.h","additions":37,"deletions":6,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -14,0 +14,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -129,1 +131,1 @@\n-    DateTimeRule* clone(void) const;\n+    DateTimeRule* clone() const;\n@@ -251,0 +253,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/dtrule.h","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -162,1 +164,1 @@\n-     * @return        TRUE if the two field positions are equal, FALSE otherwise.\n+     * @return        true if the two field positions are equal, false otherwise.\n@@ -170,1 +172,1 @@\n-     * @return        TRUE if the two field positions are not equal, FALSE otherwise.\n+     * @return        true if the two field positions are not equal, false otherwise.\n@@ -293,0 +295,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/fieldpos.h","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -22,0 +22,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -180,1 +182,1 @@\n-     * @return        TRUE if other are equal to this, FALSE otherwise.\n+     * @return        true if other are equal to this, false otherwise.\n@@ -188,1 +190,1 @@\n-     * @return        TRUE if other are unequal to this, FALSE otherwise.\n+     * @return        true if other are unequal to this, false otherwise.\n@@ -278,1 +280,1 @@\n-     * Returns TRUE if the data type of this Formattable object\n+     * Returns true if the data type of this Formattable object\n@@ -280,1 +282,1 @@\n-     * @return TRUE if this is a pure numeric object\n+     * @return true if this is a pure numeric object\n@@ -754,0 +756,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/fmtable.h","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -306,0 +308,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/format.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,0 +8,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -9,1 +12,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -26,1 +28,0 @@\n-\n@@ -38,1 +39,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -48,1 +49,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -52,1 +53,1 @@\n-    \/** @draft ICU 64 *\/\n+    \/** @stable ICU 64 *\/\n@@ -61,1 +62,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -85,1 +86,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -110,1 +111,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -118,1 +119,1 @@\n-     * FormattedValue#nextPosition returns TRUE.\n+     * FormattedValue#nextPosition returns true.\n@@ -121,1 +122,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -131,1 +132,1 @@\n-     * FormattedValue#nextPosition returns TRUE.\n+     * FormattedValue#nextPosition returns true.\n@@ -134,1 +135,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -143,1 +144,1 @@\n-     * The return value is well-defined only after FormattedValue#nextPosition returns TRUE.\n+     * The return value is well-defined only after FormattedValue#nextPosition returns true.\n@@ -146,1 +147,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -155,1 +156,1 @@\n-     * The return value is well-defined only after FormattedValue#nextPosition returns TRUE.\n+     * The return value is well-defined only after FormattedValue#nextPosition returns true.\n@@ -158,1 +159,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -177,1 +178,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -189,1 +190,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -201,1 +202,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -217,1 +218,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -234,1 +235,0 @@\n-\n@@ -239,1 +239,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -243,1 +243,1 @@\n-    \/** @draft ICU 64 *\/\n+    \/** @stable ICU 64 *\/\n@@ -254,1 +254,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -270,1 +270,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -282,1 +282,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -304,2 +304,2 @@\n-     * @return TRUE if a new occurrence of the field was found;\n-     *         FALSE otherwise or if an error was set.\n+     * @return true if a new occurrence of the field was found;\n+     *         false otherwise or if an error was set.\n@@ -307,1 +307,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -312,1 +312,0 @@\n-\n@@ -315,1 +314,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -317,0 +315,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/formattedvalue.h","additions":32,"deletions":31,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -22,0 +22,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -96,1 +99,1 @@\n-     * and returns TRUE, otherwise returns FALSE.\n+     * and returns true, otherwise returns false.\n@@ -119,0 +122,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/fpositer.h","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -117,0 +119,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/gender.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -304,1 +306,1 @@\n-    virtual Calendar* clone(void) const;\n+    virtual GregorianCalendar* clone() const;\n@@ -345,1 +347,1 @@\n-     * Returns TRUE if the given Calendar object is equivalent to this\n+     * Returns true if the given Calendar object is equivalent to this\n@@ -353,0 +355,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -365,0 +368,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -755,1 +759,1 @@\n-     * @return TRUE if this calendar has the notion of a default century\n+     * @return true if this calendar has the notion of a default century\n@@ -777,0 +781,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/gregocal.h","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,0 +24,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n@@ -27,0 +31,1 @@\n+#include \"unicode\/ulistformatter.h\"\n@@ -30,1 +35,0 @@\n-class FieldPositionIterator;\n@@ -51,0 +55,1 @@\n+    Locale locale;\n@@ -52,2 +57,3 @@\n-  ListFormatData(const UnicodeString& two, const UnicodeString& start, const UnicodeString& middle, const UnicodeString& end) :\n-      twoPattern(two), startPattern(start), middlePattern(middle), endPattern(end) {}\n+  ListFormatData(const UnicodeString& two, const UnicodeString& start, const UnicodeString& middle, const UnicodeString& end,\n+                 const Locale& loc) :\n+      twoPattern(two), startPattern(start), middlePattern(middle), endPattern(end), locale(loc) {}\n@@ -64,2 +70,0 @@\n-#if !UCONFIG_NO_FORMATTING\n-#ifndef U_HIDE_DRAFT_API\n@@ -80,1 +84,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -86,1 +90,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -92,1 +96,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -98,1 +102,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -110,1 +114,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -135,2 +139,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n-#endif \/\/ !UCONFIG_NO_FORMATTING\n@@ -186,0 +188,13 @@\n+    \/**\n+     * Creates a ListFormatter for the given locale, list type, and style.\n+     *\n+     * @param locale The locale.\n+     * @param type The type of list formatting to use.\n+     * @param width The width of formatting to use.\n+     * @param errorCode ICU error code, set if no data available for the given locale.\n+     * @return A ListFormatter object created from internal data derived from CLDR data.\n+     * @stable ICU 67\n+     *\/\n+    static ListFormatter* createInstance(\n+      const Locale& locale, UListFormatterType type, UListFormatterWidth width, UErrorCode& errorCode);\n+\n@@ -190,0 +205,2 @@\n+     * TODO(ICU-20888): Remove this in ICU 68.\n+     *\n@@ -221,23 +238,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-    \/**\n-     * Format a list of strings.\n-     *\n-     * @param items     An array of strings to be combined and formatted.\n-     * @param n_items   Length of the array items.\n-     * @param appendTo  The string to which the formatted result will be\n-     *                  appended.\n-     * @param posIter   On return, can be used to iterate over positions of\n-     *                  fields generated by this format call. Field values are\n-     *                  defined in UListFormatterField. Can be NULL.\n-     * @param errorCode ICU error code returned here.\n-     * @return          Formatted string combining the elements of items,\n-     *                  appended to appendTo.\n-     * @draft ICU 63\n-     *\/\n-    UnicodeString& format(const UnicodeString items[], int32_t n_items,\n-        UnicodeString & appendTo, FieldPositionIterator* posIter,\n-        UErrorCode& errorCode) const;\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-\n-#if !UCONFIG_NO_FORMATTING\n-#ifndef U_HIDE_DRAFT_API\n@@ -253,1 +247,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -259,2 +253,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-#endif \/\/ !UCONFIG_NO_FORMATTING\n@@ -301,0 +293,4 @@\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/listformatter.h","additions":34,"deletions":38,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -18,0 +18,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -154,1 +156,1 @@\n-    virtual Format *clone() const;\n+    virtual MeasureFormat *clone() const;\n@@ -166,0 +168,1 @@\n+#ifndef U_FORCE_HIDE_DRAFT_API\n@@ -176,0 +179,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DRAFT_API\n@@ -308,1 +312,1 @@\n-     * the NumberFormat object. Returns TRUE if locale changed; FALSE if no\n+     * the NumberFormat object. Returns true if locale changed; false if no\n@@ -385,8 +389,0 @@\n-\n-    UnicodeString &formatNumeric(\n-        UDate date,\n-        const DateFormat &dateFmt,\n-        UDateFormatField smallestField,\n-        const Formattable &smallestAmount,\n-        UnicodeString &appendTo,\n-        UErrorCode &status) const;\n@@ -398,0 +394,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/measfmt.h","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -18,0 +18,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -21,0 +23,1 @@\n+#include \"unicode\/localpointer.h\"\n@@ -30,0 +33,196 @@\n+struct MeasureUnitImpl;\n+\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Enumeration for unit complexity. There are three levels:\n+ *\n+ * - SINGLE: A single unit, optionally with a power and\/or SI prefix. Examples: hectare,\n+ *           square-kilometer, kilojoule, per-second.\n+ * - COMPOUND: A unit composed of the product of multiple single units. Examples:\n+ *             meter-per-second, kilowatt-hour, kilogram-meter-per-square-second.\n+ * - MIXED: A unit composed of the sum of multiple single units. Examples: foot+inch,\n+ *          hour+minute+second, degree+arcminute+arcsecond.\n+ *\n+ * The complexity determines which operations are available. For example, you cannot set the power\n+ * or SI prefix of a compound unit.\n+ *\n+ * @draft ICU 67\n+ *\/\n+enum UMeasureUnitComplexity {\n+    \/**\n+     * A single unit, like kilojoule.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_UNIT_SINGLE,\n+\n+    \/**\n+     * A compound unit, like meter-per-second.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_UNIT_COMPOUND,\n+\n+    \/**\n+     * A mixed unit, like hour+minute.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_UNIT_MIXED\n+};\n+\n+\/**\n+ * Enumeration for SI prefixes, such as \"kilo\".\n+ *\n+ * @draft ICU 67\n+ *\/\n+typedef enum UMeasureSIPrefix {\n+\n+    \/**\n+     * SI prefix: yotta, 10^24.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_YOTTA = 24,\n+\n+    \/**\n+     * SI prefix: zetta, 10^21.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_ZETTA = 21,\n+\n+    \/**\n+     * SI prefix: exa, 10^18.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_EXA = 18,\n+\n+    \/**\n+     * SI prefix: peta, 10^15.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_PETA = 15,\n+\n+    \/**\n+     * SI prefix: tera, 10^12.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_TERA = 12,\n+\n+    \/**\n+     * SI prefix: giga, 10^9.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_GIGA = 9,\n+\n+    \/**\n+     * SI prefix: mega, 10^6.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_MEGA = 6,\n+\n+    \/**\n+     * SI prefix: kilo, 10^3.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_KILO = 3,\n+\n+    \/**\n+     * SI prefix: hecto, 10^2.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_HECTO = 2,\n+\n+    \/**\n+     * SI prefix: deka, 10^1.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_DEKA = 1,\n+\n+    \/**\n+     * The absence of an SI prefix.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_ONE = 0,\n+\n+    \/**\n+     * SI prefix: deci, 10^-1.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_DECI = -1,\n+\n+    \/**\n+     * SI prefix: centi, 10^-2.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_CENTI = -2,\n+\n+    \/**\n+     * SI prefix: milli, 10^-3.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_MILLI = -3,\n+\n+    \/**\n+     * SI prefix: micro, 10^-6.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_MICRO = -6,\n+\n+    \/**\n+     * SI prefix: nano, 10^-9.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_NANO = -9,\n+\n+    \/**\n+     * SI prefix: pico, 10^-12.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_PICO = -12,\n+\n+    \/**\n+     * SI prefix: femto, 10^-15.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_FEMTO = -15,\n+\n+    \/**\n+     * SI prefix: atto, 10^-18.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_ATTO = -18,\n+\n+    \/**\n+     * SI prefix: zepto, 10^-21.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_ZEPTO = -21,\n+\n+    \/**\n+     * SI prefix: yocto, 10^-24.\n+     *\n+     * @draft ICU 67\n+     *\/\n+    UMEASURE_SI_PREFIX_YOCTO = -24\n+} UMeasureSIPrefix;\n+#endif \/\/ U_HIDE_DRAFT_API\n@@ -54,0 +253,22 @@\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Move constructor.\n+     * @draft ICU 67\n+     *\/\n+    MeasureUnit(MeasureUnit &&other) noexcept;\n+\n+    \/**\n+     * Construct a MeasureUnit from a CLDR Unit Identifier, defined in UTS 35.\n+     * Validates and canonicalizes the identifier.\n+     *\n+     * <pre>\n+     * MeasureUnit example = MeasureUnit::forIdentifier(\"furlong-per-nanosecond\")\n+     * <\/pre>\n+     *\n+     * @param identifier The CLDR Unit Identifier\n+     * @param status Set if the identifier is invalid.\n+     * @draft ICU 67\n+     *\/\n+    static MeasureUnit forIdentifier(StringPiece identifier, UErrorCode& status);\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -55,1 +276,1 @@\n-     * Assignment operator.\n+     * Copy assignment operator.\n@@ -60,0 +281,8 @@\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Move assignment operator.\n+     * @draft ICU 67\n+     *\/\n+    MeasureUnit &operator=(MeasureUnit &&other) noexcept;\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -65,1 +294,1 @@\n-    virtual UObject* clone() const;\n+    virtual MeasureUnit* clone() const;\n@@ -91,0 +320,3 @@\n+     *\n+     * If the unit does not have a type, the empty string is returned.\n+     *\n@@ -97,0 +329,3 @@\n+     *\n+     * If the unit does not have a subtype, the empty string is returned.\n+     *\n@@ -101,0 +336,131 @@\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Get the CLDR Unit Identifier for this MeasureUnit, as defined in UTS 35.\n+     *\n+     * @return The string form of this unit, owned by this MeasureUnit.\n+     * @draft ICU 67\n+     *\/\n+    const char* getIdentifier() const;\n+\n+    \/**\n+     * Compute the complexity of the unit. See UMeasureUnitComplexity for more information.\n+     *\n+     * @param status Set if an error occurs.\n+     * @return The unit complexity.\n+     * @draft ICU 67\n+     *\/\n+    UMeasureUnitComplexity getComplexity(UErrorCode& status) const;\n+\n+    \/**\n+     * Creates a MeasureUnit which is this SINGLE unit augmented with the specified SI prefix.\n+     * For example, UMEASURE_SI_PREFIX_KILO for \"kilo\".\n+     *\n+     * There is sufficient locale data to format all standard SI prefixes.\n+     *\n+     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will\n+     * occur. For more information, see UMeasureUnitComplexity.\n+     *\n+     * @param prefix The SI prefix, from UMeasureSIPrefix.\n+     * @param status Set if this is not a SINGLE unit or if another error occurs.\n+     * @return A new SINGLE unit.\n+     * @draft ICU 67\n+     *\/\n+    MeasureUnit withSIPrefix(UMeasureSIPrefix prefix, UErrorCode& status) const;\n+\n+    \/**\n+     * Gets the current SI prefix of this SINGLE unit. For example, if the unit has the SI prefix\n+     * \"kilo\", then UMEASURE_SI_PREFIX_KILO is returned.\n+     *\n+     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will\n+     * occur. For more information, see UMeasureUnitComplexity.\n+     *\n+     * @param status Set if this is not a SINGLE unit or if another error occurs.\n+     * @return The SI prefix of this SINGLE unit, from UMeasureSIPrefix.\n+     * @draft ICU 67\n+     *\/\n+    UMeasureSIPrefix getSIPrefix(UErrorCode& status) const;\n+\n+    \/**\n+     * Creates a MeasureUnit which is this SINGLE unit augmented with the specified dimensionality\n+     * (power). For example, if dimensionality is 2, the unit will be squared.\n+     *\n+     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will\n+     * occur. For more information, see UMeasureUnitComplexity.\n+     *\n+     * For the base dimensionless unit, withDimensionality does nothing.\n+     *\n+     * @param dimensionality The dimensionality (power).\n+     * @param status Set if this is not a SINGLE unit or if another error occurs.\n+     * @return A new SINGLE unit.\n+     * @draft ICU 67\n+     *\/\n+    MeasureUnit withDimensionality(int32_t dimensionality, UErrorCode& status) const;\n+\n+    \/**\n+     * Gets the dimensionality (power) of this MeasureUnit. For example, if the unit is square,\n+     * then 2 is returned.\n+     *\n+     * NOTE: Only works on SINGLE units. If this is a COMPOUND or MIXED unit, an error will\n+     * occur. For more information, see UMeasureUnitComplexity.\n+     *\n+     * For the base dimensionless unit, getDimensionality returns 0.\n+     *\n+     * @param status Set if this is not a SINGLE unit or if another error occurs.\n+     * @return The dimensionality (power) of this simple unit.\n+     * @draft ICU 67\n+     *\/\n+    int32_t getDimensionality(UErrorCode& status) const;\n+\n+    \/**\n+     * Gets the reciprocal of this MeasureUnit, with the numerator and denominator flipped.\n+     *\n+     * For example, if the receiver is \"meter-per-second\", the unit \"second-per-meter\" is returned.\n+     *\n+     * NOTE: Only works on SINGLE and COMPOUND units. If this is a MIXED unit, an error will\n+     * occur. For more information, see UMeasureUnitComplexity.\n+     *\n+     * @param status Set if this is a MIXED unit or if another error occurs.\n+     * @return The reciprocal of the target unit.\n+     * @draft ICU 67\n+     *\/\n+    MeasureUnit reciprocal(UErrorCode& status) const;\n+\n+    \/**\n+     * Gets the product of this unit with another unit. This is a way to build units from\n+     * constituent parts.\n+     *\n+     * The numerator and denominator are preserved through this operation.\n+     *\n+     * For example, if the receiver is \"kilowatt\" and the argument is \"hour-per-day\", then the\n+     * unit \"kilowatt-hour-per-day\" is returned.\n+     *\n+     * NOTE: Only works on SINGLE and COMPOUND units. If either unit (receiver and argument) is a\n+     * MIXED unit, an error will occur. For more information, see UMeasureUnitComplexity.\n+     *\n+     * @param other The MeasureUnit to multiply with the target.\n+     * @param status Set if this or other is a MIXED unit or if another error occurs.\n+     * @return The product of the target unit with the provided unit.\n+     * @draft ICU 67\n+     *\/\n+    MeasureUnit product(const MeasureUnit& other, UErrorCode& status) const;\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Gets the list of SINGLE units contained within a MIXED or COMPOUND unit.\n+     *\n+     * Examples:\n+     * - Given \"meter-kilogram-per-second\", three units will be returned: \"meter\",\n+     *   \"kilogram\", and \"per-second\".\n+     * - Given \"hour+minute+second\", three units will be returned: \"hour\", \"minute\",\n+     *   and \"second\".\n+     *\n+     * If this is a SINGLE unit, an array of length 1 will be returned.\n+     *\n+     * @param status Set if an error occurs.\n+     * @return A pair with the list of units as a LocalArray and the number of units in the list.\n+     * @draft ICU 68\n+     *\/\n+    inline std::pair<LocalArray<MeasureUnit>, int32_t> splitToSingleUnits(UErrorCode& status) const;\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -174,2 +540,1 @@\n-     * Returns associated array index for this measure unit. Only valid for\n-     * non-currency measure units.\n+     * Returns associated array index for this measure unit.\n@@ -178,23 +543,1 @@\n-    int32_t getIndex() const;\n-\n-    \/**\n-     * ICU use only.\n-     * Returns maximum value from getIndex plus 1.\n-     * @internal\n-     *\/\n-    static int32_t getIndexCount();\n-\n-    \/**\n-     * ICU use only.\n-     * @return the unit.getIndex() of the unit which has this unit.getType() and unit.getSubtype(),\n-     *         or a negative value if there is no such unit\n-     * @internal\n-     *\/\n-    static int32_t internalGetIndexForTypeAndSubtype(const char *type, const char *subtype);\n-\n-    \/**\n-     * ICU use only.\n-     * @internal\n-     *\/\n-    static MeasureUnit resolveUnitPerUnit(\n-            const MeasureUnit &unit, const MeasureUnit &perUnit, bool* isResolved);\n+    int32_t getOffset() const;\n@@ -220,1 +563,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -224,1 +566,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -227,1 +569,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -230,1 +571,1 @@\n-     * Returns by pointer, unit of acceleration: meter-per-second-squared.\n+     * Returns by pointer, unit of acceleration: meter-per-square-second.\n@@ -238,1 +579,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -240,1 +580,1 @@\n-     * Returns by value, unit of acceleration: meter-per-second-squared.\n+     * Returns by value, unit of acceleration: meter-per-square-second.\n@@ -242,1 +582,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -245,1 +585,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -256,1 +595,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -260,1 +598,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -263,1 +601,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -274,1 +611,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -278,1 +614,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -281,1 +617,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -292,1 +627,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -296,1 +630,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -299,1 +633,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -310,1 +643,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -314,1 +646,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -317,1 +649,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -328,1 +659,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -332,1 +662,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -335,1 +665,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -346,1 +675,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -350,1 +678,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -353,1 +681,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -355,1 +682,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -361,1 +687,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -368,1 +694,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -371,1 +697,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -382,1 +707,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -386,1 +710,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -389,1 +713,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -400,1 +723,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -404,1 +726,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -407,1 +729,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -418,1 +739,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -422,1 +742,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -425,1 +745,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -436,1 +755,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -440,1 +758,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -443,1 +761,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -454,1 +771,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -458,1 +774,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -461,1 +777,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -472,1 +787,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -476,1 +790,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -479,1 +793,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -490,1 +803,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -494,1 +806,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -497,1 +809,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -508,1 +819,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -512,1 +822,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -515,1 +825,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -526,1 +835,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -530,1 +838,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -533,1 +841,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -544,1 +851,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -548,1 +854,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -551,1 +857,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -562,1 +867,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -566,1 +870,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -569,1 +873,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -571,1 +874,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -577,1 +879,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -584,1 +886,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -587,1 +889,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -589,19 +890,0 @@\n-    \/**\n-     * Returns by pointer, unit of concentr: part-per-million.\n-     * Caller owns returned value and must free it.\n-     * Also see {@link #getPartPerMillion()}.\n-     * @param status ICU error code.\n-     * @stable ICU 57\n-     *\/\n-    static MeasureUnit *createPartPerMillion(UErrorCode &status);\n-\n-#ifndef U_HIDE_DRAFT_API\n-    \/**\n-     * Returns by value, unit of concentr: part-per-million.\n-     * Also see {@link #createPartPerMillion()}.\n-     * @draft ICU 64\n-     *\/\n-    static MeasureUnit getPartPerMillion();\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-\n-#ifndef U_HIDE_DRAFT_API\n@@ -613,1 +895,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -616,1 +898,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -618,1 +899,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -622,1 +902,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -625,1 +905,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -627,1 +906,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -633,1 +911,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -636,1 +914,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -638,1 +915,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -642,1 +918,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -645,1 +921,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -647,1 +922,16 @@\n-#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of concentr: permillion.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getPartPerMillion()}.\n+     * @param status ICU error code.\n+     * @stable ICU 57\n+     *\/\n+    static MeasureUnit *createPartPerMillion(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of concentr: permillion.\n+     * Also see {@link #createPartPerMillion()}.\n+     * @stable ICU 64\n+     *\/\n+    static MeasureUnit getPartPerMillion();\n+\n@@ -653,1 +943,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -660,1 +950,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -663,1 +953,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -666,1 +955,1 @@\n-     * Returns by pointer, unit of consumption: liter-per-100kilometers.\n+     * Returns by pointer, unit of consumption: liter-per-100-kilometer.\n@@ -674,1 +963,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -676,1 +964,1 @@\n-     * Returns by value, unit of consumption: liter-per-100kilometers.\n+     * Returns by value, unit of consumption: liter-per-100-kilometer.\n@@ -678,1 +966,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -681,1 +969,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -692,1 +979,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -696,1 +982,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -699,1 +985,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -710,1 +995,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -714,1 +998,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -717,1 +1001,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -728,1 +1011,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -732,1 +1014,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -735,1 +1017,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -746,1 +1027,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -750,1 +1030,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -753,1 +1033,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -764,1 +1043,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -768,1 +1046,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -771,1 +1049,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -782,1 +1059,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -786,1 +1062,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -789,1 +1065,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -800,1 +1075,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -804,1 +1078,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -807,1 +1081,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -818,1 +1091,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -822,1 +1094,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -825,1 +1097,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -836,1 +1107,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -840,1 +1110,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -843,1 +1113,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -854,1 +1123,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -858,1 +1126,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -861,1 +1129,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -872,1 +1139,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -876,1 +1142,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -879,1 +1145,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -881,1 +1146,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -887,1 +1151,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -890,1 +1154,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -892,1 +1155,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -896,1 +1158,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -899,1 +1161,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -910,1 +1171,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -914,1 +1174,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -917,1 +1177,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -928,1 +1187,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -932,1 +1190,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -935,1 +1193,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -946,1 +1203,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -950,1 +1206,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -953,1 +1209,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -964,1 +1219,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -968,1 +1222,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -971,1 +1225,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -973,1 +1226,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -979,1 +1231,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -982,1 +1234,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -984,1 +1235,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -988,1 +1238,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -991,1 +1241,16 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n+\n+    \/**\n+     * Returns by pointer, unit of duration: decade.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDecade()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createDecade(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of duration: decade.\n+     * Also see {@link #createDecade()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getDecade();\n@@ -1002,1 +1267,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1006,1 +1270,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1009,1 +1273,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1020,1 +1283,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1024,1 +1286,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1027,1 +1289,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1038,1 +1299,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1042,1 +1302,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1045,1 +1305,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1056,1 +1315,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1060,1 +1318,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1063,1 +1321,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1074,1 +1331,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1078,1 +1334,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1081,1 +1337,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1083,1 +1338,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1089,1 +1343,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1092,1 +1346,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1094,1 +1347,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1098,1 +1350,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1101,1 +1353,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1112,1 +1363,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1116,1 +1366,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1119,1 +1369,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1130,1 +1379,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1134,1 +1382,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1137,1 +1385,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1148,1 +1395,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1152,1 +1398,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1155,1 +1401,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1157,1 +1402,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1163,1 +1407,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1166,1 +1410,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1168,1 +1411,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1172,1 +1414,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1175,1 +1417,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1186,1 +1427,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1190,1 +1430,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1193,1 +1433,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1195,1 +1434,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1201,1 +1439,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1204,1 +1442,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1206,1 +1443,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1210,1 +1446,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1213,1 +1449,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1224,1 +1459,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1228,1 +1462,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1231,1 +1465,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1242,1 +1475,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1246,1 +1478,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1249,1 +1481,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1260,1 +1491,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1264,1 +1494,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1267,1 +1497,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1278,1 +1507,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1282,1 +1510,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1285,1 +1513,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1287,1 +1514,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1293,1 +1519,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1300,1 +1526,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1303,1 +1529,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1314,1 +1539,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1318,1 +1542,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1321,1 +1545,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1323,1 +1546,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1329,1 +1551,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1336,1 +1558,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1339,1 +1561,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1350,1 +1571,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1354,1 +1574,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1357,1 +1577,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1368,1 +1587,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1372,1 +1590,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1375,1 +1593,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1386,1 +1603,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1390,1 +1606,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1393,1 +1609,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1404,1 +1619,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1408,1 +1622,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1411,1 +1625,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1422,1 +1635,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1426,1 +1638,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1429,1 +1641,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1431,1 +1642,16 @@\n-#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of energy: therm-us.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getThermUs()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createThermUs(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of energy: therm-us.\n+     * Also see {@link #createThermUs()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getThermUs();\n+\n@@ -1437,1 +1663,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1444,1 +1670,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1447,1 +1673,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1449,1 +1674,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1455,1 +1679,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1462,1 +1686,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1465,1 +1689,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1476,1 +1699,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1480,1 +1702,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1483,1 +1705,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1494,1 +1715,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1498,1 +1718,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1501,1 +1721,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1510,1 +1729,131 @@\n-    static MeasureUnit *createKilohertz(UErrorCode &status);\n+    static MeasureUnit *createKilohertz(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of frequency: kilohertz.\n+     * Also see {@link #createKilohertz()}.\n+     * @stable ICU 64\n+     *\/\n+    static MeasureUnit getKilohertz();\n+\n+    \/**\n+     * Returns by pointer, unit of frequency: megahertz.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getMegahertz()}.\n+     * @param status ICU error code.\n+     * @stable ICU 54\n+     *\/\n+    static MeasureUnit *createMegahertz(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of frequency: megahertz.\n+     * Also see {@link #createMegahertz()}.\n+     * @stable ICU 64\n+     *\/\n+    static MeasureUnit getMegahertz();\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of graphics: dot.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDot()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createDot(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of graphics: dot.\n+     * Also see {@link #createDot()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getDot();\n+#endif \/* U_HIDE_DRAFT_API *\/\n+\n+    \/**\n+     * Returns by pointer, unit of graphics: dot-per-centimeter.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDotPerCentimeter()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createDotPerCentimeter(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of graphics: dot-per-centimeter.\n+     * Also see {@link #createDotPerCentimeter()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getDotPerCentimeter();\n+\n+    \/**\n+     * Returns by pointer, unit of graphics: dot-per-inch.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDotPerInch()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createDotPerInch(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of graphics: dot-per-inch.\n+     * Also see {@link #createDotPerInch()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getDotPerInch();\n+\n+    \/**\n+     * Returns by pointer, unit of graphics: em.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getEm()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createEm(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of graphics: em.\n+     * Also see {@link #createEm()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getEm();\n+\n+    \/**\n+     * Returns by pointer, unit of graphics: megapixel.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getMegapixel()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createMegapixel(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of graphics: megapixel.\n+     * Also see {@link #createMegapixel()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getMegapixel();\n+\n+    \/**\n+     * Returns by pointer, unit of graphics: pixel.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getPixel()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createPixel(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of graphics: pixel.\n+     * Also see {@link #createPixel()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getPixel();\n+\n+    \/**\n+     * Returns by pointer, unit of graphics: pixel-per-centimeter.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getPixelPerCentimeter()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createPixelPerCentimeter(UErrorCode &status);\n@@ -1512,1 +1861,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1514,3 +1862,3 @@\n-     * Returns by value, unit of frequency: kilohertz.\n-     * Also see {@link #createKilohertz()}.\n-     * @draft ICU 64\n+     * Returns by value, unit of graphics: pixel-per-centimeter.\n+     * Also see {@link #createPixelPerCentimeter()}.\n+     * @stable ICU 65\n@@ -1518,2 +1866,1 @@\n-    static MeasureUnit getKilohertz();\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+    static MeasureUnit getPixelPerCentimeter();\n@@ -1522,1 +1869,1 @@\n-     * Returns by pointer, unit of frequency: megahertz.\n+     * Returns by pointer, unit of graphics: pixel-per-inch.\n@@ -1524,1 +1871,1 @@\n-     * Also see {@link #getMegahertz()}.\n+     * Also see {@link #getPixelPerInch()}.\n@@ -1526,1 +1873,1 @@\n-     * @stable ICU 54\n+     * @stable ICU 65\n@@ -1528,1 +1875,1 @@\n-    static MeasureUnit *createMegahertz(UErrorCode &status);\n+    static MeasureUnit *createPixelPerInch(UErrorCode &status);\n@@ -1530,1 +1877,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1532,3 +1878,3 @@\n-     * Returns by value, unit of frequency: megahertz.\n-     * Also see {@link #createMegahertz()}.\n-     * @draft ICU 64\n+     * Returns by value, unit of graphics: pixel-per-inch.\n+     * Also see {@link #createPixelPerInch()}.\n+     * @stable ICU 65\n@@ -1536,2 +1882,1 @@\n-    static MeasureUnit getMegahertz();\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+    static MeasureUnit getPixelPerInch();\n@@ -1548,1 +1893,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1552,1 +1896,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1555,1 +1899,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1566,1 +1909,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1570,1 +1912,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1573,1 +1915,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1584,1 +1925,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1588,1 +1928,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1591,1 +1931,18 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of length: earth-radius.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getEarthRadius()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createEarthRadius(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of length: earth-radius.\n+     * Also see {@link #createEarthRadius()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getEarthRadius();\n+#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1602,1 +1959,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1606,1 +1962,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1609,1 +1965,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1620,1 +1975,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1624,1 +1978,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1627,1 +1981,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1638,1 +1991,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1642,1 +1994,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1645,1 +1997,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1656,1 +2007,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1660,1 +2010,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1663,1 +2013,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1674,1 +2023,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1678,1 +2026,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1681,1 +2029,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1692,1 +2039,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1696,1 +2042,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1699,1 +2045,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1710,1 +2055,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1714,1 +2058,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1717,1 +2061,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1728,1 +2071,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1732,1 +2074,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1735,1 +2077,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1746,1 +2087,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1750,1 +2090,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1753,1 +2093,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1764,1 +2103,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1768,1 +2106,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1771,1 +2109,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1782,1 +2119,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1786,1 +2122,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1789,1 +2125,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1800,1 +2135,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1804,1 +2138,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1807,1 +2141,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1818,1 +2151,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1822,1 +2154,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1825,1 +2157,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1836,1 +2167,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1840,1 +2170,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1843,1 +2173,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1854,1 +2183,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1858,1 +2186,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1861,1 +2189,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1872,1 +2199,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1876,1 +2202,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1879,1 +2205,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1881,1 +2206,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1887,1 +2211,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1894,1 +2218,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1897,1 +2221,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1908,1 +2231,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1912,1 +2234,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1915,1 +2237,36 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of light: candela.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getCandela()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createCandela(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of light: candela.\n+     * Also see {@link #createCandela()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getCandela();\n+#endif \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of light: lumen.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getLumen()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createLumen(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of light: lumen.\n+     * Also see {@link #createLumen()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getLumen();\n+#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1926,1 +2283,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1930,1 +2286,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1933,1 +2289,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1935,1 +2290,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1941,1 +2295,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1948,1 +2302,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1951,1 +2305,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1962,1 +2315,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1966,1 +2318,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1969,1 +2321,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1971,1 +2322,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1977,1 +2327,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1984,1 +2334,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -1987,1 +2337,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1989,1 +2338,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1995,1 +2343,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2002,1 +2350,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2005,0 +2353,17 @@\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of mass: grain.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getGrain()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createGrain(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of mass: grain.\n+     * Also see {@link #createGrain()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getGrain();\n@@ -2016,1 +2381,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2020,1 +2384,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2023,1 +2387,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2034,1 +2397,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2038,1 +2400,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2041,1 +2403,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2052,1 +2413,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2056,1 +2416,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2059,1 +2419,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2070,1 +2429,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2074,1 +2432,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2077,1 +2435,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2088,1 +2445,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2092,1 +2448,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2095,1 +2451,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2106,1 +2461,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2110,1 +2464,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2113,1 +2467,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2124,1 +2477,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2128,1 +2480,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2131,1 +2483,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2142,1 +2493,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2146,1 +2496,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2149,1 +2499,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2151,1 +2500,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2157,1 +2505,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2164,1 +2512,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2167,1 +2515,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2178,1 +2525,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2182,1 +2528,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2185,1 +2531,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2196,1 +2541,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2200,1 +2544,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2203,1 +2547,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2214,1 +2557,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2218,1 +2560,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2221,1 +2563,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2232,1 +2573,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2236,1 +2576,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2239,1 +2579,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2250,1 +2589,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2254,1 +2592,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2257,1 +2595,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2268,1 +2605,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2272,1 +2608,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2275,1 +2611,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2286,1 +2621,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2290,1 +2624,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2293,1 +2627,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2304,1 +2637,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2308,1 +2640,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2311,1 +2643,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2313,1 +2644,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2319,1 +2649,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -2322,1 +2652,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2324,1 +2653,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2328,1 +2656,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2331,1 +2659,16 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n+\n+    \/**\n+     * Returns by pointer, unit of pressure: bar.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getBar()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createBar(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of pressure: bar.\n+     * Also see {@link #createBar()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getBar();\n@@ -2342,1 +2685,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2346,1 +2688,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2349,1 +2691,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2352,1 +2693,1 @@\n-     * Returns by pointer, unit of pressure: inch-hg.\n+     * Returns by pointer, unit of pressure: inch-ofhg.\n@@ -2360,1 +2701,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2362,1 +2702,1 @@\n-     * Returns by value, unit of pressure: inch-hg.\n+     * Returns by value, unit of pressure: inch-ofhg.\n@@ -2364,1 +2704,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2367,1 +2707,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2369,1 +2708,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2375,1 +2713,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2382,1 +2720,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2385,1 +2723,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2387,1 +2724,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2393,1 +2729,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2400,1 +2736,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2403,1 +2739,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2414,1 +2749,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2418,1 +2752,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2421,1 +2755,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2424,1 +2757,1 @@\n-     * Returns by pointer, unit of pressure: millimeter-of-mercury.\n+     * Returns by pointer, unit of pressure: millimeter-ofhg.\n@@ -2432,1 +2765,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2434,1 +2766,1 @@\n-     * Returns by value, unit of pressure: millimeter-of-mercury.\n+     * Returns by value, unit of pressure: millimeter-ofhg.\n@@ -2436,1 +2768,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2439,1 +2771,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2442,1 +2773,17 @@\n-     * Returns by pointer, unit of pressure: pound-per-square-inch.\n+     * Returns by pointer, unit of pressure: pascal.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getPascal()}.\n+     * @param status ICU error code.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit *createPascal(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of pressure: pascal.\n+     * Also see {@link #createPascal()}.\n+     * @stable ICU 65\n+     *\/\n+    static MeasureUnit getPascal();\n+\n+    \/**\n+     * Returns by pointer, unit of pressure: pound-force-per-square-inch.\n@@ -2450,1 +2797,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2452,1 +2798,1 @@\n-     * Returns by value, unit of pressure: pound-per-square-inch.\n+     * Returns by value, unit of pressure: pound-force-per-square-inch.\n@@ -2454,1 +2800,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2457,1 +2803,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2468,1 +2813,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2472,1 +2816,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2475,1 +2819,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2486,1 +2829,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2490,1 +2832,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2493,1 +2835,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2504,1 +2845,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2508,1 +2848,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2511,1 +2851,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2522,1 +2861,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2526,1 +2864,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2529,1 +2867,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2540,1 +2877,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2544,1 +2880,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2547,1 +2883,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2558,1 +2893,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2562,1 +2896,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2565,1 +2899,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2576,1 +2909,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2580,1 +2912,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2583,1 +2915,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2594,1 +2925,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2598,1 +2928,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2601,1 +2931,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2603,1 +2932,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2609,1 +2937,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2616,1 +2944,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2619,1 +2947,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2621,1 +2948,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2623,1 +2949,1 @@\n-     * Returns by pointer, unit of torque: pound-foot.\n+     * Returns by pointer, unit of torque: pound-force-foot.\n@@ -2627,1 +2953,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2632,1 +2958,1 @@\n-     * Returns by value, unit of torque: pound-foot.\n+     * Returns by value, unit of torque: pound-force-foot.\n@@ -2634,1 +2960,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2637,1 +2963,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2648,1 +2973,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2652,1 +2976,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2655,1 +2979,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2657,1 +2980,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2663,1 +2985,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2670,1 +2992,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2673,1 +2995,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2684,1 +3005,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2688,1 +3008,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2691,1 +3011,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2702,1 +3021,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2706,1 +3024,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2709,1 +3027,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2720,1 +3037,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2724,1 +3040,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2727,1 +3043,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2738,1 +3053,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2742,1 +3056,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2745,1 +3059,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2756,1 +3069,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2760,1 +3072,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2763,1 +3075,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2774,1 +3085,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2778,1 +3088,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2781,1 +3091,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2792,1 +3101,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2796,1 +3104,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2799,1 +3107,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2810,1 +3117,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2814,1 +3120,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2817,1 +3123,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2828,1 +3133,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2832,1 +3136,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2835,1 +3139,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2846,1 +3149,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2850,1 +3152,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2853,1 +3155,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2864,1 +3165,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2868,1 +3168,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2871,1 +3171,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2882,1 +3181,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2886,1 +3184,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2889,1 +3187,72 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: dessert-spoon.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDessertSpoon()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createDessertSpoon(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: dessert-spoon.\n+     * Also see {@link #createDessertSpoon()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getDessertSpoon();\n+#endif \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: dessert-spoon-imperial.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDessertSpoonImperial()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createDessertSpoonImperial(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: dessert-spoon-imperial.\n+     * Also see {@link #createDessertSpoonImperial()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getDessertSpoonImperial();\n+#endif \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: dram.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDram()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createDram(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: dram.\n+     * Also see {@link #createDram()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getDram();\n+#endif \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: drop.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getDrop()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createDrop(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: drop.\n+     * Also see {@link #createDrop()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getDrop();\n+#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2900,1 +3269,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2904,1 +3272,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2907,1 +3275,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2909,1 +3276,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2915,1 +3281,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2922,1 +3288,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2925,1 +3291,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2936,1 +3301,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2940,1 +3304,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2943,1 +3307,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2954,1 +3317,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2958,1 +3320,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2961,1 +3323,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -2972,1 +3333,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2976,1 +3336,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2979,1 +3339,18 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: jigger.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getJigger()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createJigger(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: jigger.\n+     * Also see {@link #createJigger()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getJigger();\n+#endif \/* U_HIDE_DRAFT_API *\/\n@@ -2990,1 +3367,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -2994,1 +3370,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2997,1 +3373,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -3008,1 +3383,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3012,1 +3386,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3015,1 +3389,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -3026,1 +3399,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3030,1 +3402,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3033,1 +3405,18 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: pinch.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getPinch()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createPinch(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: pinch.\n+     * Also see {@link #createPinch()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getPinch();\n+#endif \/* U_HIDE_DRAFT_API *\/\n@@ -3044,1 +3433,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3048,1 +3436,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3051,1 +3439,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -3062,1 +3449,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3066,1 +3452,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3069,1 +3455,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -3080,1 +3465,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3084,1 +3468,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3087,1 +3471,18 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Returns by pointer, unit of volume: quart-imperial.\n+     * Caller owns returned value and must free it.\n+     * Also see {@link #getQuartImperial()}.\n+     * @param status ICU error code.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit *createQuartImperial(UErrorCode &status);\n+\n+    \/**\n+     * Returns by value, unit of volume: quart-imperial.\n+     * Also see {@link #createQuartImperial()}.\n+     * @draft ICU 68\n+     *\/\n+    static MeasureUnit getQuartImperial();\n+#endif \/* U_HIDE_DRAFT_API *\/\n@@ -3098,1 +3499,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3102,1 +3502,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3105,1 +3505,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -3116,1 +3515,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -3120,1 +3518,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -3123,1 +3521,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -3141,7 +3538,1 @@\n-    void initCurrency(const char *isoCurrency);\n-\n-    \/**\n-     * For ICU use only.\n-     * @internal\n-     *\/\n-    void initNoUnit(const char *subtype);\n+    void initCurrency(StringPiece isoCurrency);\n@@ -3152,3 +3543,0 @@\n-    int32_t fTypeId;\n-    int32_t fSubTypeId;\n-    char fCurrency[4];\n@@ -3156,3 +3544,13 @@\n-    MeasureUnit(int32_t typeId, int32_t subTypeId) : fTypeId(typeId), fSubTypeId(subTypeId) {\n-        fCurrency[0] = 0;\n-    }\n+    \/\/ Used by new draft APIs in ICU 67. If non-null, fImpl is owned by the\n+    \/\/ MeasureUnit.\n+    MeasureUnitImpl* fImpl;\n+\n+    \/\/ An index into a static string list in measunit.cpp. If set to -1, fImpl\n+    \/\/ is in use instead of fTypeId and fSubTypeId.\n+    int16_t fSubTypeId;\n+    \/\/ An index into a static string list in measunit.cpp. If set to -1, fImpl\n+    \/\/ is in use instead of fTypeId and fSubTypeId.\n+    int8_t fTypeId;\n+\n+    MeasureUnit(int32_t typeId, int32_t subTypeId);\n+    MeasureUnit(MeasureUnitImpl&& impl);\n@@ -3160,1 +3558,0 @@\n-    int32_t getOffset() const;\n@@ -3162,0 +3559,14 @@\n+\n+    \/**\n+     * Sets output's typeId and subTypeId according to subType, if subType is a\n+     * valid\/known identifier.\n+     *\n+     * @return Whether subType is known to ICU. If false, output was not\n+     * modified.\n+     *\/\n+    static bool findBySubType(StringPiece subType, MeasureUnit* output);\n+\n+    \/** Internal version of public API *\/\n+    LocalArray<MeasureUnit> splitToSingleUnitsImpl(int32_t& outCount, UErrorCode& status) const;\n+\n+    friend struct MeasureUnitImpl;\n@@ -3164,0 +3575,9 @@\n+#ifndef U_HIDE_DRAFT_API  \/\/ @draft ICU 68\n+inline std::pair<LocalArray<MeasureUnit>, int32_t>\n+MeasureUnit::splitToSingleUnits(UErrorCode& status) const {\n+    int32_t length;\n+    auto array = splitToSingleUnitsImpl(length, status);\n+    return std::make_pair(std::move(array), length);\n+}\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -3167,0 +3587,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/measunit.h","additions":1026,"deletions":603,"binary":false,"changes":1629,"status":"modified"},{"patch":"@@ -18,0 +18,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -49,1 +51,1 @@\n-     * @param number a numeric object; amount.isNumeric() must be TRUE\n+     * @param number a numeric object; amount.isNumeric() must be true\n@@ -75,1 +77,1 @@\n-    virtual UObject* clone() const;\n+    virtual Measure* clone() const;\n@@ -161,0 +163,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/measure.h","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -187,1 +189,1 @@\n- *       <td rowspan=6><code>date<\/code>\n+ *       <td rowspan=7><code>date<\/code>\n@@ -256,1 +258,1 @@\n- * <a href=\"http:\/\/userguide.icu-project.org\/formatparse\/messages\">ICU User Guide<\/a>.<\/p>\n+ * <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/format_parse\/messages\">ICU User Guide<\/a>.<\/p>\n@@ -421,1 +423,1 @@\n-    virtual Format* clone(void) const;\n+    virtual MessageFormat* clone() const;\n@@ -921,1 +923,1 @@\n-     * TRUE if there are different argTypes for the same argument.\n+     * true if there are different argTypes for the same argument.\n@@ -1090,1 +1092,1 @@\n-        virtual Format* clone() const;\n+        virtual DummyFormat* clone() const;\n@@ -1114,0 +1116,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/msgfmt.h","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -15,0 +15,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -16,1 +18,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -20,0 +21,2 @@\n+#ifndef U_HIDE_DRAFT_API\n+\n@@ -29,0 +32,1 @@\n+ * Prior to ICU 68, this namespace was a class with the same name.\n@@ -30,1 +34,1 @@\n- * @draft ICU 60\n+ * @draft ICU 68\n@@ -32,2 +36,1 @@\n-class U_I18N_API NoUnit: public MeasureUnit {\n-public:\n+namespace NoUnit {\n@@ -37,2 +40,6 @@\n-     * @return               a NoUnit instance\n-     * @draft ICU 60\n+     * Prior to ICU 68, this function returned a NoUnit by value.\n+     *\n+     * Since ICU 68, this function returns the same value as the default MeasureUnit constructor.\n+     *\n+     * @return               a MeasureUnit instance\n+     * @draft ICU 68\n@@ -40,1 +47,3 @@\n-    static NoUnit U_EXPORT2 base();\n+    static inline MeasureUnit U_EXPORT2 base() {\n+        return MeasureUnit();\n+    }\n@@ -45,2 +54,6 @@\n-     * @return               a NoUnit instance\n-     * @draft ICU 60\n+     * Prior to ICU 68, this function returned a NoUnit by value.\n+     *\n+     * Since ICU 68, this function returns the same value as MeasureUnit::getPercent().\n+     *\n+     * @return               a MeasureUnit instance\n+     * @draft ICU 68\n@@ -48,1 +61,3 @@\n-    static NoUnit U_EXPORT2 percent();\n+    static inline MeasureUnit U_EXPORT2 percent() {\n+        return MeasureUnit::getPercent();\n+    }\n@@ -53,46 +68,6 @@\n-     * @return               a NoUnit instance\n-     * @draft ICU 60\n-     *\/\n-    static NoUnit U_EXPORT2 permille();\n-\n-    \/**\n-     * Copy operator.\n-     * @draft ICU 60\n-     *\/\n-    NoUnit(const NoUnit& other);\n-\n-    \/**\n-     * Destructor.\n-     * @draft ICU 60\n-     *\/\n-    virtual ~NoUnit();\n-\n-    \/**\n-     * Return a polymorphic clone of this object.  The result will\n-     * have the same class as returned by getDynamicClassID().\n-     * @draft ICU 60\n-     *\/\n-    virtual UObject* clone() const;\n-\n-    \/**\n-     * Returns a unique class ID for this object POLYMORPHICALLY.\n-     * This method implements a simple form of RTTI used by ICU.\n-     * @return The class ID for this object. All objects of a given\n-     * class have the same class ID.  Objects of other classes have\n-     * different class IDs.\n-     * @draft ICU 60\n-     *\/\n-    virtual UClassID getDynamicClassID() const;\n-\n-    \/**\n-     * Returns the class ID for this class. This is used to compare to\n-     * the return value of getDynamicClassID().\n-     * @return The class ID for all objects of this class.\n-     * @draft ICU 60\n-     *\/\n-    static UClassID U_EXPORT2 getStaticClassID();\n-\n-private:\n-    \/**\n-     * Constructor\n-     * @internal (private)\n+     * Prior to ICU 68, this function returned a NoUnit by value.\n+     *\n+     * Since ICU 68, this function returns the same value as MeasureUnit::getPermille().\n+     *\n+     * @return               a MeasureUnit instance\n+     * @draft ICU 68\n@@ -100,3 +75,4 @@\n-    NoUnit(const char* subtype);\n-\n-};\n+    static inline MeasureUnit U_EXPORT2 permille() {\n+        return MeasureUnit::getPermille();\n+    }\n+}\n@@ -109,0 +85,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/nounit.h","additions":37,"deletions":59,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -4,0 +4,3 @@\n+#ifndef __NUMBERFORMATTER_H__\n+#define __NUMBERFORMATTER_H__\n+\n@@ -6,0 +9,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -7,2 +12,0 @@\n-#ifndef __NUMBERFORMATTER_H__\n-#define __NUMBERFORMATTER_H__\n@@ -11,1 +14,1 @@\n-#include \"unicode\/dcfmtsym.h\"\n+#include \"unicode\/bytestream.h\"\n@@ -13,0 +16,1 @@\n+#include \"unicode\/dcfmtsym.h\"\n@@ -25,2 +29,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -88,0 +90,1 @@\n+class FormattedStringBuilder;\n@@ -99,0 +102,7 @@\n+namespace units {\n+\n+\/\/ Forward declarations:\n+class UnitsRouter;\n+\n+} \/\/ namespace units\n+\n@@ -145,1 +155,0 @@\n-class NumberStringBuilder;\n@@ -156,0 +165,3 @@\n+class MutablePatternModifier;\n+class ImmutablePatternModifier;\n+struct DecimalFormatWarehouse;\n@@ -170,1 +182,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -177,1 +189,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -184,1 +196,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -210,1 +222,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -234,1 +246,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -277,1 +289,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -301,1 +313,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -327,1 +339,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -370,1 +382,1 @@\n-            return TRUE;\n+            return true;\n@@ -372,1 +384,1 @@\n-        return FALSE;\n+        return false;\n@@ -394,1 +406,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -409,1 +421,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -424,1 +436,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -445,1 +457,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -455,1 +467,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -475,1 +487,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -483,1 +495,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -512,1 +524,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -527,1 +539,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -539,1 +551,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -554,1 +566,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -569,1 +581,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -583,1 +595,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -593,1 +605,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -606,1 +618,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -628,1 +640,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -647,1 +659,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -704,6 +716,2 @@\n-    \/** The Precision encapsulates the RoundingMode when used within the implementation. *\/\n-    UNumberFormatRoundingMode fRoundingMode;\n-\n-    Precision(const PrecisionType& type, const PrecisionUnion& union_,\n-              UNumberFormatRoundingMode roundingMode)\n-            : fType(type), fUnion(union_), fRoundingMode(roundingMode) {}\n+    Precision(const PrecisionType& type, const PrecisionUnion& union_)\n+            : fType(type), fUnion(union_) {}\n@@ -724,1 +732,1 @@\n-            return TRUE;\n+            return true;\n@@ -726,1 +734,1 @@\n-        return FALSE;\n+        return false;\n@@ -743,2 +751,0 @@\n-    static Precision constructPassThrough();\n-\n@@ -765,0 +771,3 @@\n+\n+    \/\/ To allow access to isBogus and the default (bogus) constructor:\n+    friend class units::UnitsRouter;\n@@ -774,1 +783,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -792,1 +801,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -811,1 +820,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -830,1 +839,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -849,1 +858,1 @@\n-      * @draft ICU 60\n+      * @stable ICU 60\n@@ -868,1 +877,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -885,1 +894,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -903,1 +912,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -917,1 +926,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -930,1 +939,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -968,1 +977,1 @@\n-            return TRUE;\n+            return true;\n@@ -970,1 +979,1 @@\n-        return FALSE;\n+        return false;\n@@ -981,1 +990,1 @@\n-    \/\/ To allow NumberFormatterImpl to access isBogus() and perform other operations:\n+    \/\/ To allow NumberFormatterImpl to access isBogus():\n@@ -984,0 +993,4 @@\n+    \/\/ To allow the use of this class when formatting:\n+    friend class impl::MutablePatternModifier;\n+    friend class impl::ImmutablePatternModifier;\n+\n@@ -997,1 +1010,1 @@\n- * @draft ICU 62\n+ * @stable ICU 62\n@@ -1005,1 +1018,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1017,1 +1030,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1031,1 +1044,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1041,1 +1054,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1049,1 +1062,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1056,1 +1069,1 @@\n-    \/** @draft ICU 62 *\/\n+    \/** @stable ICU 62 *\/\n@@ -1059,1 +1072,1 @@\n-    \/** @draft ICU 62 *\/\n+    \/** @stable ICU 62 *\/\n@@ -1062,1 +1075,1 @@\n-    \/** @draft ICU 62 *\/\n+    \/** @stable ICU 62 *\/\n@@ -1065,1 +1078,1 @@\n-    \/** @draft ICU 62 *\/\n+    \/** @stable ICU 62 *\/\n@@ -1068,1 +1081,1 @@\n-    \/** @draft ICU 62 *\/\n+    \/** @stable ICU 62 *\/\n@@ -1090,1 +1103,1 @@\n-        if (fError != U_ZERO_ERROR) {\n+        if (U_FAILURE(fError)) {\n@@ -1092,1 +1105,1 @@\n-            return TRUE;\n+            return true;\n@@ -1094,1 +1107,1 @@\n-        return FALSE;\n+        return false;\n@@ -1121,0 +1134,65 @@\n+\/\/ Do not enclose entire Usage with #ifndef U_HIDE_INTERNAL_API, needed for a protected field\n+\/**\n+ * Manages NumberFormatterSettings::usage()'s char* instance on the heap.\n+ * @internal\n+ *\/\n+class U_I18N_API Usage : public UMemory {\n+\n+#ifndef U_HIDE_INTERNAL_API\n+\n+  public:\n+    \/** @internal *\/\n+    Usage(const Usage& other);\n+\n+    \/** @internal *\/\n+    Usage& operator=(const Usage& other);\n+\n+    \/** @internal *\/\n+    Usage(Usage &&src) U_NOEXCEPT;\n+\n+    \/** @internal *\/\n+    Usage& operator=(Usage&& src) U_NOEXCEPT;\n+\n+    \/** @internal *\/\n+    ~Usage();\n+\n+    \/** @internal *\/\n+    int16_t length() const { return fLength; }\n+\n+    \/** @internal\n+     * Makes a copy of value. Set to \"\" to unset.\n+     *\/\n+    void set(StringPiece value);\n+\n+    \/** @internal *\/\n+    bool isSet() const { return fLength > 0; }\n+\n+#endif \/\/ U_HIDE_INTERNAL_API\n+\n+  private:\n+    char *fUsage;\n+    int16_t fLength;\n+    UErrorCode fError;\n+\n+    Usage() : fUsage(nullptr), fLength(0), fError(U_ZERO_ERROR) {}\n+\n+    \/** @internal *\/\n+    UBool copyErrorTo(UErrorCode &status) const {\n+        if (U_FAILURE(fError)) {\n+            status = fError;\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    \/\/ Allow NumberFormatterImpl to access fUsage.\n+    friend class impl::NumberFormatterImpl;\n+\n+    \/\/ Allow skeleton generation code to access private members.\n+    friend class impl::GeneratorHelpers;\n+\n+    \/\/ Allow MacroProps\/MicroProps to initialize empty instances and to call\n+    \/\/ copyErrorTo().\n+    friend struct impl::MacroProps;\n+};\n+\n@@ -1187,1 +1265,1 @@\n-            return TRUE;\n+            return true;\n@@ -1190,1 +1268,1 @@\n-            return TRUE;\n+            return true;\n@@ -1192,1 +1270,1 @@\n-        return FALSE;\n+        return false;\n@@ -1234,1 +1312,0 @@\n-#endif  \/\/ U_HIDE_INTERNAL_API\n@@ -1241,0 +1318,1 @@\n+#endif  \/\/ U_HIDE_INTERNAL_API\n@@ -1304,1 +1382,0 @@\n-#endif  \/\/ U_HIDE_INTERNAL_API\n@@ -1308,0 +1385,1 @@\n+#endif  \/\/ U_HIDE_INTERNAL_API\n@@ -1336,1 +1414,1 @@\n-            return TRUE;\n+            return true;\n@@ -1338,1 +1416,1 @@\n-        return FALSE;\n+        return false;\n@@ -1346,1 +1424,1 @@\n-                        impl::NumberStringBuilder &string, int32_t leftIndex, int32_t rightIndex,\n+                        FormattedStringBuilder &string, int32_t leftIndex, int32_t rightIndex,\n@@ -1367,1 +1445,1 @@\n-    MeasureUnit unit; \/\/ = NoUnit::base();\n+    MeasureUnit unit;  \/\/ = MeasureUnit();  (the base dimensionless unit)\n@@ -1370,1 +1448,1 @@\n-    MeasureUnit perUnit; \/\/ = NoUnit::base();\n+    MeasureUnit perUnit;  \/\/ = MeasureUnit();  (the base dimensionless unit)\n@@ -1405,1 +1483,1 @@\n-    const AffixPatternProvider* affixProvider = nullptr;  \/\/ no ownership\n+    Usage usage;  \/\/ = Usage();  (no usage)\n@@ -1408,1 +1486,1 @@\n-    const PluralRules* rules = nullptr;  \/\/ no ownership\n+    const AffixPatternProvider* affixProvider = nullptr;  \/\/ no ownership\n@@ -1411,1 +1489,1 @@\n-    const CurrencySymbols* currencySymbols = nullptr;  \/\/ no ownership\n+    const PluralRules* rules = nullptr;  \/\/ no ownership\n@@ -1428,1 +1506,1 @@\n-               symbols.copyErrorTo(status) || scale.copyErrorTo(status);\n+               symbols.copyErrorTo(status) || scale.copyErrorTo(status) || usage.copyErrorTo(status);\n@@ -1434,0 +1512,10 @@\n+#if (U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN) && defined(_MSC_VER)\n+\/\/ Ignore MSVC warning 4661. This is generated for NumberFormatterSettings<>::toSkeleton() as this method\n+\/\/ is defined elsewhere (in number_skeletons.cpp). The compiler is warning that the explicit template instantiation\n+\/\/ inside this single translation unit (CPP file) is incomplete, and thus it isn't sure if the template class is\n+\/\/ fully defined. However, since each translation unit explicitly instantiates all the necessary template classes,\n+\/\/ they will all be passed to the linker, and the linker will still find and export all the class members.\n+#pragma warning(push)\n+#pragma warning(disable: 4661)\n+#endif\n+\n@@ -1468,1 +1556,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1479,1 +1567,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1495,0 +1583,4 @@\n+     * \\note If the usage() is set, the output unit **will be changed** to\n+     *       produce localised units, according to usage, locale and unit. See\n+     *       FormattedNumber::getOutputUnit().\n+     *\n@@ -1499,0 +1591,1 @@\n+     * NumberFormatter::with().unit(MeasureUnit::forIdentifier(\"foot-per-second\", status))\n@@ -1524,1 +1617,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1535,1 +1628,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1550,1 +1643,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1561,1 +1654,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1585,1 +1678,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -1596,1 +1689,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1611,1 +1704,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -1622,1 +1715,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1654,1 +1747,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1665,1 +1758,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1681,1 +1774,1 @@\n-     * http:\/\/userguide.icu-project.org\/formatparse\/numbers\/rounding-modes\n+     * https:\/\/unicode-org.github.io\/icu\/userguide\/format_parse\/numbers\/rounding-modes\n@@ -1685,1 +1778,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1695,1 +1788,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1724,1 +1817,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -1735,1 +1828,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1761,1 +1854,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1772,1 +1865,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1814,1 +1907,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1825,1 +1918,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1860,1 +1953,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1871,1 +1964,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1898,1 +1991,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1909,1 +2002,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1936,1 +2029,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1947,1 +2040,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -1974,1 +2067,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -1985,1 +2078,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2011,1 +2104,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2022,1 +2115,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2026,0 +2119,55 @@\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Specifies the usage for which numbers will be formatted (\"person-height\",\n+     * \"road\", \"rainfall\", etc.)\n+     *\n+     * When a `usage` is specified, the output unit will change depending on the\n+     * `Locale` and the unit quantity. For example, formatting length\n+     * measurements specified in meters:\n+     *\n+     * `NumberFormatter::with().usage(\"person\").unit(MeasureUnit::getMeter()).locale(\"en-US\")`\n+     *   * When formatting 0.25, the output will be \"10 inches\".\n+     *   * When formatting 1.50, the output will be \"4 feet and 11 inches\".\n+     *\n+     * The input unit specified via unit() determines the type of measurement\n+     * being formatted (e.g. \"length\" when the unit is \"foot\"). The usage\n+     * requested will be looked for only within this category of measurement\n+     * units.\n+     *\n+     * The output unit can be found via FormattedNumber::getOutputUnit().\n+     *\n+     * If the usage has multiple parts (e.g. \"land-agriculture-grain\") and does\n+     * not match a known usage preference, the last part will be dropped\n+     * repeatedly until a match is found (e.g. trying \"land-agriculture\", then\n+     * \"land\"). If a match is still not found, usage will fall back to\n+     * \"default\".\n+     *\n+     * Setting usage to an empty string clears the usage (disables usage-based\n+     * localized formatting).\n+     *\n+     * Setting a usage string but not a correct input unit will result in an\n+     * U_ILLEGAL_ARGUMENT_ERROR.\n+     *\n+     * When using usage, specifying rounding or precision is unnecessary.\n+     * Specifying a precision in some manner will override the default\n+     * formatting.\n+     *\n+     * @param usage A `usage` parameter from the units resource. See the\n+     * unitPreferenceData in *source\/data\/misc\/units.txt*, generated from\n+     * `unitPreferenceData` in [CLDR's\n+     * supplemental\/units.xml](https:\/\/github.com\/unicode-org\/cldr\/blob\/master\/common\/supplemental\/units.xml).\n+     * @return The fluent chain.\n+     * @draft ICU 68\n+     *\/\n+    Derived usage(StringPiece usage) const &;\n+\n+    \/**\n+     * Overload of usage() for use on an rvalue reference.\n+     *\n+     * @param usage The unit `usage`.\n+     * @return The fluent chain.\n+     * @draft ICU 68\n+     *\/\n+    Derived usage(StringPiece usage) &&;\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -2079,1 +2227,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2092,1 +2240,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2101,1 +2249,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2108,2 +2256,2 @@\n-     * @return TRUE if U_FAILURE(outErrorCode)\n-     * @draft ICU 60\n+     * @return true if U_FAILURE(outErrorCode)\n+     * @stable ICU 60\n@@ -2114,1 +2262,1 @@\n-            return TRUE;\n+            return true;\n@@ -2142,1 +2290,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -2155,1 +2303,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2166,1 +2314,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2173,1 +2321,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2179,1 +2327,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2186,1 +2334,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2192,1 +2340,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2199,1 +2347,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2222,1 +2370,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -2236,1 +2384,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2249,1 +2397,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2265,1 +2413,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2306,1 +2454,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2313,1 +2461,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2319,1 +2467,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2326,1 +2474,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2332,1 +2480,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2339,1 +2487,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2363,1 +2511,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2373,0 +2521,4 @@\n+    \/\/ Owned pointer to a DecimalFormatWarehouse, used when copying a LocalizedNumberFormatter\n+    \/\/ from a DecimalFormat.\n+    const impl::DecimalFormatWarehouse* fWarehouse {nullptr};\n+\n@@ -2381,1 +2533,1 @@\n-    void clear();\n+    void resetCompiled();\n@@ -2385,0 +2537,2 @@\n+    void lnfCopyHelper(const LocalizedNumberFormatter& src, UErrorCode& status);\n+\n@@ -2398,0 +2552,5 @@\n+#if (U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN) && defined(_MSC_VER)\n+\/\/ Warning 4661.\n+#pragma warning(pop)\n+#endif\n+\n@@ -2404,1 +2563,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -2411,1 +2570,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2418,1 +2577,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2424,1 +2583,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2436,1 +2595,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2446,1 +2605,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2460,1 +2619,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2469,3 +2628,3 @@\n-     * Determines the start (inclusive) and end (exclusive) indices of the next occurrence of the given\n-     * <em>field<\/em> in the output string. This allows you to determine the locations of, for example,\n-     * the integer part, fraction part, or symbols.\n+     * Export the formatted number as a \"numeric string\" conforming to the\n+     * syntax defined in the Decimal Arithmetic Specification, available at\n+     * http:\/\/speleotrove.com\/decimal\n@@ -2473,1 +2632,2 @@\n-     * This is a simpler but less powerful alternative to {@link #nextPosition}.\n+     * This endpoint is useful for obtaining the exact number being printed\n+     * after scaling and rounding have been applied by the number formatter.\n@@ -2475,2 +2635,1 @@\n-     * If a field occurs just once, calling this method will find that occurrence and return it. If a\n-     * field occurs multiple times, this method may be called repeatedly with the following pattern:\n+     * Example call site:\n@@ -2478,6 +2637,1 @@\n-     * <pre>\n-     * FieldPosition fpos(UNUM_GROUPING_SEPARATOR_FIELD);\n-     * while (formattedNumber.nextFieldPosition(fpos, status)) {\n-     *   \/\/ do something with fpos.\n-     * }\n-     * <\/pre>\n+     *     auto decimalNumber = fn.toDecimalNumber<std::string>(status);\n@@ -2485,15 +2639,5 @@\n-     * This method is useful if you know which field to query. If you want all available field position\n-     * information, use {@link #nextPosition} or {@link #getAllFieldPositions}.\n-     *\n-     * @param fieldPosition\n-     *            Input+output variable. On input, the \"field\" property determines which field to look\n-     *            up, and the \"beginIndex\" and \"endIndex\" properties determine where to begin the search.\n-     *            On output, the \"beginIndex\" is set to the beginning of the first occurrence of the\n-     *            field with either begin or end indices after the input indices; \"endIndex\" is set to\n-     *            the end of that occurrence of the field (exclusive index). If a field position is not\n-     *            found, the method returns FALSE and the FieldPosition may or may not be changed.\n-     * @param status\n-     *            Set if an error occurs while populating the FieldPosition.\n-     * @return TRUE if a new occurrence of the field was found; FALSE otherwise.\n-     * @draft ICU 62\n-     * @see UNumberFormatFields\n+     * @tparam StringClass A string class compatible with StringByteSink;\n+     *         for example, std::string.\n+     * @param status Set if an error occurs.\n+     * @return A StringClass containing the numeric string.\n+     * @stable ICU 65\n@@ -2501,1 +2645,2 @@\n-    UBool nextFieldPosition(FieldPosition& fieldPosition, UErrorCode& status) const;\n+    template<typename StringClass>\n+    inline StringClass toDecimalNumber(UErrorCode& status) const;\n@@ -2503,0 +2648,1 @@\n+#ifndef U_HIDE_DRAFT_API\n@@ -2504,4 +2650,1 @@\n-     * Export the formatted number to a FieldPositionIterator. This allows you to determine which characters in\n-     * the output string correspond to which <em>fields<\/em>, such as the integer part, fraction part, and sign.\n-     *\n-     * This is an alternative to the more powerful #nextPosition() API.\n+     * Gets the resolved output unit.\n@@ -2509,1 +2652,4 @@\n-     * If information on only one field is needed, use #nextPosition() or #nextFieldPosition() instead.\n+     * The output unit is dependent upon the localized preferences for the usage\n+     * specified via NumberFormatterSettings::usage(), and may be a unit with\n+     * UMEASURE_UNIT_MIXED unit complexity (MeasureUnit::getComplexity()), such\n+     * as \"foot-and-inch\" or \"hour-and-minute-and-second\".\n@@ -2511,6 +2657,2 @@\n-     * @param iterator\n-     *            The FieldPositionIterator to populate with all of the fields present in the formatted number.\n-     * @param status\n-     *            Set if an error occurs while populating the FieldPositionIterator.\n-     * @draft ICU 62\n-     * @see UNumberFormatFields\n+     * @return `MeasureUnit`.\n+     * @draft ICU 68\n@@ -2518,1 +2660,2 @@\n-    void getAllFieldPositions(FieldPositionIterator &iterator, UErrorCode &status) const;\n+    MeasureUnit getOutputUnit(UErrorCode& status) const;\n+#endif \/\/ U_HIDE_DRAFT_API\n@@ -2553,0 +2696,2 @@\n+    void toDecimalNumber(ByteSink& sink, UErrorCode& status) const;\n+\n@@ -2560,0 +2705,11 @@\n+#ifndef U_HIDE_DRAFT_API\n+\/\/ Note: This is draft ICU 65\n+template<typename StringClass>\n+StringClass FormattedNumber::toDecimalNumber(UErrorCode& status) const {\n+    StringClass result;\n+    StringByteSink<StringClass> sink(&result);\n+    toDecimalNumber(sink, status);\n+    return result;\n+}\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -2563,1 +2719,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -2572,1 +2728,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2583,1 +2739,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -2599,1 +2755,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -2618,1 +2774,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -2632,1 +2788,3 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n@@ -2635,2 +2793,0 @@\n-\n-#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/numberformatter.h","additions":352,"deletions":196,"binary":false,"changes":548,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n-#if !UCONFIG_NO_FORMATTING\n@@ -8,0 +7,6 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n@@ -14,2 +19,1 @@\n-\n-#ifndef U_HIDE_DRAFT_API\n+#include \"unicode\/unumberrangeformatter.h\"\n@@ -31,1 +35,1 @@\n- *     .formatRange(750, 1.2, status)\n+ *     .formatFormattableRange(750, 1.2, status)\n@@ -44,122 +48,0 @@\n-\/**\n- * Defines how to merge fields that are identical across the range sign.\n- *\n- * @draft ICU 63\n- *\/\n-typedef enum UNumberRangeCollapse {\n-    \/**\n-     * Use locale data and heuristics to determine how much of the string to collapse. Could end up collapsing none,\n-     * some, or all repeated pieces in a locale-sensitive way.\n-     *\n-     * The heuristics used for this option are subject to change over time.\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_RANGE_COLLAPSE_AUTO,\n-\n-    \/**\n-     * Do not collapse any part of the number. Example: \"3.2 thousand kilograms – 5.3 thousand kilograms\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_RANGE_COLLAPSE_NONE,\n-\n-    \/**\n-     * Collapse the unit part of the number, but not the notation, if present. Example: \"3.2 thousand – 5.3 thousand\n-     * kilograms\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_RANGE_COLLAPSE_UNIT,\n-\n-    \/**\n-     * Collapse any field that is equal across the range sign. May introduce ambiguity on the magnitude of the\n-     * number. Example: \"3.2 – 5.3 thousand kilograms\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_RANGE_COLLAPSE_ALL\n-} UNumberRangeCollapse;\n-\n-\/**\n- * Defines the behavior when the two numbers in the range are identical after rounding. To programmatically detect\n- * when the identity fallback is used, compare the lower and upper BigDecimals via FormattedNumber.\n- *\n- * @draft ICU 63\n- * @see NumberRangeFormatter\n- *\/\n-typedef enum UNumberRangeIdentityFallback {\n-    \/**\n-     * Show the number as a single value rather than a range. Example: \"$5\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_IDENTITY_FALLBACK_SINGLE_VALUE,\n-\n-    \/**\n-     * Show the number using a locale-sensitive approximation pattern. If the numbers were the same before rounding,\n-     * show the single value. Example: \"~$5\" or \"$5\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_IDENTITY_FALLBACK_APPROXIMATELY_OR_SINGLE_VALUE,\n-\n-    \/**\n-     * Show the number using a locale-sensitive approximation pattern. Use the range pattern always, even if the\n-     * inputs are the same. Example: \"~$5\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_IDENTITY_FALLBACK_APPROXIMATELY,\n-\n-    \/**\n-     * Show the number as the range of two equal values. Use the range pattern always, even if the inputs are the\n-     * same. Example (with RangeCollapse.NONE): \"$5 – $5\"\n-     *\n-     * @draft ICU 63\n-     *\/\n-    UNUM_IDENTITY_FALLBACK_RANGE\n-} UNumberRangeIdentityFallback;\n-\n-\/**\n- * Used in the result class FormattedNumberRange to indicate to the user whether the numbers formatted in the range\n- * were equal or not, and whether or not the identity fallback was applied.\n- *\n- * @draft ICU 63\n- * @see NumberRangeFormatter\n- *\/\n-typedef enum UNumberRangeIdentityResult {\n-    \/**\n-     * Used to indicate that the two numbers in the range were equal, even before any rounding rules were applied.\n-     *\n-     * @draft ICU 63\n-     * @see NumberRangeFormatter\n-     *\/\n-    UNUM_IDENTITY_RESULT_EQUAL_BEFORE_ROUNDING,\n-\n-    \/**\n-     * Used to indicate that the two numbers in the range were equal, but only after rounding rules were applied.\n-     *\n-     * @draft ICU 63\n-     * @see NumberRangeFormatter\n-     *\/\n-    UNUM_IDENTITY_RESULT_EQUAL_AFTER_ROUNDING,\n-\n-    \/**\n-     * Used to indicate that the two numbers in the range were not equal, even after rounding rules were applied.\n-     *\n-     * @draft ICU 63\n-     * @see NumberRangeFormatter\n-     *\/\n-    UNUM_IDENTITY_RESULT_NOT_EQUAL,\n-\n-#ifndef U_HIDE_INTERNAL_API\n-    \/**\n-     * The number of entries in this enum.\n-     * @internal\n-     *\/\n-    UNUM_IDENTITY_RESULT_COUNT\n-#endif\n-\n-} UNumberRangeIdentityResult;\n-\n@@ -168,0 +50,3 @@\n+\/\/ Forward declarations:\n+class PluralRules;\n+\n@@ -182,0 +67,1 @@\n+struct UFormattedNumberRangeImpl;\n@@ -257,1 +143,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -268,1 +154,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -279,1 +165,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -290,1 +176,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -303,1 +189,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -314,1 +200,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -325,1 +211,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -336,1 +222,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -349,1 +235,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -360,1 +246,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -371,1 +257,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -382,1 +268,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -401,1 +287,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -412,1 +298,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -418,2 +304,2 @@\n-     * passed to the formatRange function, or if different numbers are passed to the function but they become the same\n-     * after rounding rules are applied. Possible values:\n+     * passed to the formatFormattableRange function, or if different numbers are passed to the function but they\n+     * become the same after rounding rules are applied. Possible values:\n@@ -434,1 +320,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -445,1 +331,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -458,1 +344,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -467,1 +353,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -474,2 +360,2 @@\n-     * @return TRUE if U_FAILURE(outErrorCode)\n-     * @draft ICU 63\n+     * @return true if U_FAILURE(outErrorCode)\n+     * @stable ICU 63\n@@ -480,1 +366,1 @@\n-            return TRUE;\n+            return true;\n@@ -504,1 +390,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -517,1 +403,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -528,1 +414,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -535,1 +421,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -541,1 +427,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -548,1 +434,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -554,1 +440,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -561,1 +447,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -585,1 +471,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -601,1 +487,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -609,1 +495,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -615,1 +501,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -622,1 +508,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -628,1 +514,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -635,1 +521,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -654,1 +540,1 @@\n-#endif\n+#endif  \/* U_HIDE_INTERNAL_API *\/\n@@ -658,1 +544,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -693,1 +579,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -703,1 +589,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -717,1 +603,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -725,46 +611,1 @@\n-    \/**\n-     * Determines the start (inclusive) and end (exclusive) indices of the next occurrence of the given\n-     * <em>field<\/em> in the output string. This allows you to determine the locations of, for example,\n-     * the integer part, fraction part, or symbols.\n-     *\n-     * If both sides of the range have the same field, the field will occur twice, once before the\n-     * range separator and once after the range separator, if applicable.\n-     *\n-     * If a field occurs just once, calling this method will find that occurrence and return it. If a\n-     * field occurs multiple times, this method may be called repeatedly with the following pattern:\n-     *\n-     * <pre>\n-     * FieldPosition fpos(UNUM_INTEGER_FIELD);\n-     * while (formattedNumberRange.nextFieldPosition(fpos, status)) {\n-     *   \/\/ do something with fpos.\n-     * }\n-     * <\/pre>\n-     *\n-     * This method is useful if you know which field to query. If you want all available field position\n-     * information, use #getAllFieldPositions().\n-     *\n-     * @param fieldPosition\n-     *            Input+output variable. See {@link FormattedNumber#nextFieldPosition}.\n-     * @param status\n-     *            Set if an error occurs while populating the FieldPosition.\n-     * @return TRUE if a new occurrence of the field was found; FALSE otherwise.\n-     * @draft ICU 63\n-     * @see UNumberFormatFields\n-     *\/\n-    UBool nextFieldPosition(FieldPosition& fieldPosition, UErrorCode& status) const;\n-\n-    \/**\n-     * Export the formatted number range to a FieldPositionIterator. This allows you to determine which characters in\n-     * the output string correspond to which <em>fields<\/em>, such as the integer part, fraction part, and sign.\n-     *\n-     * If information on only one field is needed, use #nextFieldPosition() instead.\n-     *\n-     * @param iterator\n-     *            The FieldPositionIterator to populate with all of the fields present in the formatted number.\n-     * @param status\n-     *            Set if an error occurs while populating the FieldPositionIterator.\n-     * @draft ICU 63\n-     * @see UNumberFormatFields\n-     *\/\n-    void getAllFieldPositions(FieldPositionIterator &iterator, UErrorCode &status) const;\n-\n+#ifndef U_HIDE_DEPRECATED_API\n@@ -780,0 +621,4 @@\n+     * TODO(ICU-21275): This function will be removed in ICU 69.\n+     * Use getDecimalNumbers() instead.\n+     *\n+     * @param status Set if an error occurs.\n@@ -781,1 +626,1 @@\n-     * @draft ICU 63\n+     * @deprecated ICU 68 Use getDecimalNumbers instead.\n@@ -796,0 +641,4 @@\n+     * TODO(ICU-21275): This function will be removed in ICU 69.\n+     * Use getDecimalNumbers() instead.\n+     *\n+     * @param status Set if an error occurs.\n@@ -797,1 +646,1 @@\n-     * @draft ICU 63\n+     * @deprecated ICU 68 Use getDecimalNumbers instead.\n@@ -802,0 +651,26 @@\n+#endif \/\/ U_HIDE_DEPRECATED_API\n+\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Extracts the formatted range as a pair of decimal numbers. This endpoint\n+     * is useful for obtaining the exact number being printed after scaling\n+     * and rounding have been applied by the number range formatting pipeline.\n+     *\n+     * The syntax of the unformatted numbers is a \"numeric string\"\n+     * as defined in the Decimal Arithmetic Specification, available at\n+     * http:\/\/speleotrove.com\/decimal\n+     *\n+     * Example C++17 call site:\n+     *\n+     *     auto [ first, second ] = range.getDecimalNumbers<std::string>(status);\n+     *\n+     * @tparam StringClass A string class compatible with StringByteSink;\n+     *         for example, std::string.\n+     * @param status Set if an error occurs.\n+     * @return A pair of StringClasses containing the numeric strings.\n+     * @draft ICU 68\n+     *\/\n+    template<typename StringClass>\n+    inline std::pair<StringClass, StringClass> getDecimalNumbers(UErrorCode& status) const;\n+#endif \/\/ U_HIDE_DRAFT_API\n@@ -809,1 +684,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -827,1 +702,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -834,1 +709,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -840,1 +715,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -853,1 +728,0 @@\n-     * @internal\n@@ -863,0 +737,7 @@\n+    void getDecimalNumbers(ByteSink& sink1, ByteSink& sink2, UErrorCode& status) const;\n+\n+    const impl::UFormattedNumberRangeData* getData(UErrorCode& status) const;\n+\n+    \/\/ To allow PluralRules to access the underlying data\n+    friend class ::icu::PluralRules;\n+\n@@ -865,0 +746,3 @@\n+\n+    \/\/ To give C API access to internals\n+    friend struct impl::UFormattedNumberRangeImpl;\n@@ -867,0 +751,13 @@\n+#ifndef U_HIDE_DRAFT_API\n+\/\/ Note: This is draft ICU 68\n+template<typename StringClass>\n+std::pair<StringClass, StringClass> FormattedNumberRange::getDecimalNumbers(UErrorCode& status) const {\n+    StringClass str1;\n+    StringClass str2;\n+    StringByteSink<StringClass> sink1(&str1);\n+    StringByteSink<StringClass> sink2(&str2);\n+    getDecimalNumbers(sink1, sink2, status);\n+    return std::make_pair(str1, str2);\n+}\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n@@ -870,1 +767,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -879,1 +776,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -890,1 +787,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -903,1 +800,3 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n@@ -907,1 +806,0 @@\n-#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/numberrangeformatter.h","additions":125,"deletions":227,"binary":false,"changes":352,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -180,1 +182,1 @@\n-     * http:\/\/userguide.icu-project.org\/formatparse\/numbers\/rounding-modes\n+     * https:\/\/unicode-org.github.io\/icu\/userguide\/format_parse\/numbers\/rounding-modes\n@@ -240,2 +242,1 @@\n-#ifndef U_HIDE_DRAFT_API\n-        \/** @draft ICU 64 *\/\n+        \/** @stable ICU 64 *\/\n@@ -243,1 +244,1 @@\n-        \/** @draft ICU 64 *\/\n+        \/** @stable ICU 64 *\/\n@@ -245,1 +246,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -263,0 +263,8 @@\n+    \/**\n+     * Clones this object polymorphically.\n+     * The caller owns the result and should delete it when done.\n+     * @return clone, or nullptr if an error occurred\n+     * @stable ICU 2.0\n+     *\/\n+    virtual NumberFormat* clone() const = 0;\n+\n@@ -642,1 +650,3 @@\n-     *                      when a failure occurs.\n+     *                      when a failure occurs. The error code when the\n+     *                      string fails to parse is U_INVALID_FORMAT_ERROR,\n+     *                      unless overridden by a subclass.\n@@ -697,2 +707,2 @@\n-     * @param enable \\c TRUE if lenient parsing should be used,\n-     *               \\c FALSE otherwise.\n+     * @param enable \\c true if lenient parsing should be used,\n+     *               \\c false otherwise.\n@@ -706,2 +716,2 @@\n-     * @return \\c TRUE if lenient parsing is enabled,\n-     *         \\c FALSE otherwise.\n+     * @return \\c true if lenient parsing is enabled,\n+     *         \\c false otherwise.\n@@ -863,1 +873,1 @@\n-     * @return TRUE if the factory for the key was successfully unregistered\n+     * @return true if the factory for the key was successfully unregistered\n@@ -1105,1 +1115,1 @@\n-     * If mustBeDecimalFormat is TRUE, then the returned pointer is\n+     * If mustBeDecimalFormat is true, then the returned pointer is\n@@ -1144,1 +1154,1 @@\n-    UBool      fLenient; \/\/ TRUE => lenient parse is enabled\n+    UBool      fLenient; \/\/ true => lenient parse is enabled\n@@ -1221,1 +1231,1 @@\n-    SimpleNumberFormatFactory(const Locale& locale, UBool visible = TRUE);\n+    SimpleNumberFormatFactory(const Locale& locale, UBool visible = true);\n@@ -1258,0 +1268,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/numfmt.h","additions":26,"deletions":14,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -23,0 +23,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -74,0 +76,6 @@\n+    \/**\n+     * Copy assignment.\n+     * @stable ICU 4.2\n+     *\/\n+    NumberingSystem& operator=(const NumberingSystem& other) = default;\n+\n@@ -97,1 +105,1 @@\n-     * @param isAlgorithmic TRUE if the numbering system is algorithmic rather than numeric.\n+     * @param isAlgorithmic true if the numbering system is algorithmic rather than numeric.\n@@ -166,1 +174,1 @@\n-     * Returns TRUE if the given numbering system is algorithmic\n+     * Returns true if the given numbering system is algorithmic\n@@ -168,2 +176,2 @@\n-     * @return         TRUE if the numbering system is algorithmic.\n-     *                 Otherwise, return FALSE.\n+     * @return         true if the numbering system is algorithmic.\n+     *                 Otherwise, return false.\n@@ -213,0 +221,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/numsys.h","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -451,1 +453,1 @@\n-    virtual Format* clone(void) const;\n+    virtual PluralFormat* clone() const;\n@@ -525,1 +527,1 @@\n-      * @internal\n+      * @internal (private)\n@@ -537,1 +539,1 @@\n-         * @internal\n+         * @internal (private)\n@@ -542,3 +544,0 @@\n-    \/**\n-     * @internal\n-     *\/\n@@ -552,1 +551,1 @@\n-        virtual UnicodeString select(void *context, double number, UErrorCode& \/*ec*\/) const; \/**< @internal *\/\n+        virtual UnicodeString select(void *context, double number, UErrorCode& \/*ec*\/) const;\n@@ -576,1 +575,1 @@\n-                          UErrorCode& status) const; \/**< @internal *\/\n+                          UErrorCode& status) const;\n@@ -591,1 +590,1 @@\n-         const PluralSelector& selector, void *context, double number, UErrorCode& ec); \/**< @internal *\/\n+         const PluralSelector& selector, void *context, double number, UErrorCode& ec);\n@@ -604,0 +603,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/plurfmt.h","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -23,0 +23,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -47,0 +49,1 @@\n+class FixedDecimal;\n@@ -52,0 +55,1 @@\n+class StandardPluralRanges;\n@@ -55,0 +59,4 @@\n+class FormattedNumberRange;\n+namespace impl {\n+class UFormattedNumberRangeData;\n+}\n@@ -351,1 +359,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -365,1 +372,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -368,1 +375,20 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Given a formatted number range, returns the overall plural form of the\n+     * range. For example, \"3-5\" returns \"other\" in English.\n+     *\n+     * To get a FormattedNumberRange, see NumberRangeFormatter.\n+     *\n+     * This method only works if PluralRules was created with a locale. If it was created\n+     * from PluralRules::createRules(), this method sets status code U_UNSUPPORTED_ERROR.\n+     *\n+     * @param range  The number range onto which the rules will be applied.\n+     * @param status Set if an error occurs while selecting plural keyword.\n+     *               This could happen if the FormattedNumberRange is invalid,\n+     *               or if plural ranges data is unavailable.\n+     * @return       The keyword of the selected rule.\n+     * @draft ICU 68\n+     *\/\n+    UnicodeString select(const number::FormattedNumberRange& range, UErrorCode& status) const;\n+#endif \/\/ U_HIDE_DRAFT_API\n@@ -372,2 +398,2 @@\n-      * @internal\n-      *\/\n+     * @internal\n+     *\/\n@@ -375,0 +401,4 @@\n+    \/**\n+     * @internal\n+     *\/\n+    UnicodeString select(const number::impl::UFormattedNumberRangeData* urange, UErrorCode& status) const;\n@@ -449,0 +479,1 @@\n+#ifndef U_HIDE_INTERNAL_API\n@@ -450,1 +481,26 @@\n-     * Returns TRUE if the given keyword is defined in this\n+     * Internal-only function that returns FixedDecimals instead of doubles.\n+     *\n+     * Returns sample values for which select() would return the keyword.  If\n+     * the keyword is unknown, returns no values, but this is not an error.\n+     *\n+     * The number of returned values is typically small.\n+     *\n+     * @param keyword      The keyword.\n+     * @param dest         Array into which to put the returned values.  May\n+     *                     be NULL if destCapacity is 0.\n+     * @param destCapacity The capacity of the array, must be at least 0.\n+     * @param status       The error code.\n+     * @return             The count of values written.\n+     *                     If more than destCapacity samples are available, then\n+     *                     only destCapacity are written, and destCapacity is returned as the count,\n+     *                     rather than setting a U_BUFFER_OVERFLOW_ERROR.\n+     *                     (The actual number of keyword values could be unlimited.)\n+     * @internal\n+     *\/\n+    int32_t getSamples(const UnicodeString &keyword,\n+                       FixedDecimal *dest, int32_t destCapacity,\n+                       UErrorCode& status);\n+#endif  \/* U_HIDE_INTERNAL_API *\/\n+\n+    \/**\n+     * Returns true if the given keyword is defined in this\n@@ -454,2 +510,2 @@\n-     * @return         TRUE if the input keyword is defined.\n-     *                 Otherwise, return FALSE.\n+     * @return         true if the input keyword is defined.\n+     *                 Otherwise, return false.\n@@ -516,0 +572,1 @@\n+    StandardPluralRanges *mStandardPluralRanges;\n@@ -522,0 +579,1 @@\n+    PluralRules    *clone(UErrorCode& status) const;\n@@ -536,0 +594,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/plurrule.h","additions":68,"deletions":8,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -15,0 +15,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -298,1 +300,1 @@\n- *     <td>The rule is a <em>master rule<\/em>. If the full stop in\n+ *     <td>The rule is a <em>default rule<\/em>. If the full stop in\n@@ -333,3 +335,3 @@\n- *   <li>If the rule set includes a master rule (and the number was passed in as a <tt>double<\/tt>),\n- *     use the master rule.&nbsp; (If the number being formatted was passed in as a <tt>long<\/tt>,\n- *     the master rule is ignored.)<\/li>\n+ *   <li>If the rule set includes a default rule (and the number was passed in as a <tt>double<\/tt>),\n+ *     use the default rule.&nbsp; (If the number being formatted was passed in as a <tt>long<\/tt>,\n+ *     the default rule is ignored.)<\/li>\n@@ -394,1 +396,1 @@\n- *     <td>in fraction or master rule<\/td>\n+ *     <td>in fraction or default rule<\/td>\n@@ -426,1 +428,1 @@\n- *     <td>in fraction or master rule<\/td>\n+ *     <td>in fraction or default rule<\/td>\n@@ -457,1 +459,1 @@\n- *     <td>in master rule<\/td>\n+ *     <td>in default rule<\/td>\n@@ -699,1 +701,1 @@\n-  virtual Format* clone(void) const;\n+  virtual RuleBasedNumberFormat* clone() const;\n@@ -869,22 +871,0 @@\n-    \/**\n-     * Format a decimal number.\n-     * The number is a DigitList wrapper onto a floating point decimal number.\n-     * The default implementation in NumberFormat converts the decimal number\n-     * to a double and formats that.  Subclasses of NumberFormat that want\n-     * to specifically handle big decimal numbers must override this method.\n-     * class DecimalFormat does so.\n-     *\n-     * @param number    The number, a DigitList format Decimal Floating Point.\n-     * @param appendTo  Output parameter to receive result.\n-     *                  Result is appended to existing contents.\n-     * @param posIter   On return, can be used to iterate over positions\n-     *                  of fields generated by this format call.\n-     * @param status    Output param filled with success\/failure status.\n-     * @return          Reference to 'appendTo' parameter.\n-     * @internal\n-     *\/\n-    virtual UnicodeString& format(const number::impl::DecimalQuantity &number,\n-                                  UnicodeString& appendTo,\n-                                  FieldPositionIterator* posIter,\n-                                  UErrorCode& status) const;\n-\n@@ -1138,0 +1118,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/rbnf.h","additions":12,"deletions":30,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -14,0 +14,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -124,1 +126,1 @@\n-    virtual TimeZone* clone(void) const;\n+    virtual RuleBasedTimeZone* clone() const;\n@@ -227,0 +229,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -241,0 +244,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -257,1 +261,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -267,1 +271,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -362,0 +366,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/rbtz.h","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,0 +47,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -67,1 +69,1 @@\n-class  RuleBasedBreakIterator;\n+class  BreakIterator;\n@@ -117,1 +119,1 @@\n-     * @return TRUE if the objects are equivalent.\n+     * @return true if the objects are equivalent.\n@@ -127,1 +129,1 @@\n-     * @return TRUE if the objects are different.\n+     * @return true if the objects are different.\n@@ -613,6 +615,0 @@\n-    UnicodeSet     **fStaticSets;  \/\/ Ptr to static (shared) sets for predefined\n-                                   \/\/   regex character classes, e.g. Word.\n-\n-    Regex8BitSet   *fStaticSets8;  \/\/ Ptr to the static (shared) latin-1 only\n-                                   \/\/  sets for predefined regex classes.\n-\n@@ -636,2 +632,3 @@\n-    void        init();            \/\/ Common initialization, for use by constructors.\n-    void        zap();             \/\/ Common cleanup\n+    void        init();                 \/\/ Common initialization, for use by constructors.\n+    bool        initNamedCaptureMap();  \/\/ Lazy init for fNamedCaptureMap.\n+    void        zap();                  \/\/ Common cleanup\n@@ -770,1 +767,1 @@\n-    *    @return TRUE if there is a match\n+    *    @return true if there is a match\n@@ -783,1 +780,1 @@\n-    *    @return TRUE if there is a match\n+    *    @return true if there is a match\n@@ -799,1 +796,1 @@\n-    *    @return  TRUE if there is a match at the start of the input string.\n+    *    @return  true if there is a match at the start of the input string.\n@@ -815,1 +812,1 @@\n-    *    @return  TRUE if there is a match.\n+    *    @return  true if there is a match.\n@@ -830,1 +827,1 @@\n-    *  @return  TRUE if a match is found.\n+    *  @return  true if a match is found.\n@@ -847,1 +844,1 @@\n-    *  @return  TRUE if a match is found.\n+    *  @return  true if a match is found.\n@@ -858,1 +855,1 @@\n-    *   @return  TRUE if a match is found.\n+    *   @return  true if a match is found.\n@@ -1277,1 +1274,1 @@\n-      * @return TRUE if this matcher is using opaque bounds, false if it is not.\n+      * @return true if this matcher is using opaque bounds, false if it is not.\n@@ -1296,1 +1293,1 @@\n-      * @param   b TRUE for transparent bounds; FALSE for opaque bounds\n+      * @param   b true for transparent bounds; false for opaque bounds\n@@ -1307,1 +1304,1 @@\n-      * @return TRUE if this matcher is using anchoring bounds.\n+      * @return true if this matcher is using anchoring bounds.\n@@ -1321,1 +1318,1 @@\n-      * @param b TRUE if to enable anchoring bounds; FALSE to disable them.\n+      * @param b true if to enable anchoring bounds; false to disable them.\n@@ -1329,1 +1326,1 @@\n-      * Return TRUE if the most recent matching operation attempted to access\n+      * Return true if the most recent matching operation attempted to access\n@@ -1334,1 +1331,1 @@\n-      *  In either case hitEnd() will return TRUE if if the end of the text was\n+      *  In either case hitEnd() will return true if if the end of the text was\n@@ -1337,1 +1334,1 @@\n-      *  @return  TRUE if the most recent match hit the end of input\n+      *  @return  true if the most recent match hit the end of input\n@@ -1343,1 +1340,1 @@\n-      * Return TRUE the most recent match succeeded and additional input could cause\n+      * Return true the most recent match succeeded and additional input could cause\n@@ -1348,1 +1345,1 @@\n-      * @return TRUE if more input could cause the most recent match to no longer match.\n+      * @return true if more input could cause the most recent match to no longer match.\n@@ -1780,1 +1777,3 @@\n-    UBool                isUWordBoundary(int64_t pos);        \/\/ perform RBBI based \\b test\n+    UBool                isUWordBoundary(int64_t pos, UErrorCode &status);   \/\/ perform RBBI based \\b test\n+    \/\/ Find a grapheme cluster boundary using a break iterator. For handling \\X in regexes.\n+    int64_t              followingGCBoundary(int64_t pos, UErrorCode &status);\n@@ -1785,1 +1784,1 @@\n-    \/\/ Call user find callback function, if set. Return TRUE if operation should be interrupted.\n+    \/\/ Call user find callback function, if set. Return true if operation should be interrupted.\n@@ -1874,1 +1873,2 @@\n-    RuleBasedBreakIterator  *fWordBreakItr;\n+    BreakIterator       *fWordBreakItr;\n+    BreakIterator       *fGCBreakItr;\n@@ -1879,0 +1879,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/regex.h","additions":33,"deletions":30,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -19,1 +19,2 @@\n-#include \"unicode\/uregion.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -23,0 +24,1 @@\n+#include \"unicode\/uregion.h\"\n@@ -222,0 +224,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/region.h","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -18,0 +18,3 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -169,1 +172,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -172,1 +174,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -175,1 +177,12 @@\n-#endif \/\/ U_HIDE_DRAFT_API\n+\n+    \/**\n+     * Hour\n+     * @stable ICU 65\n+     *\/\n+    UDAT_ABSOLUTE_HOUR,\n+\n+    \/**\n+     * Minute\n+     * @stable ICU 65\n+     *\/\n+    UDAT_ABSOLUTE_MINUTE,\n@@ -182,1 +195,1 @@\n-    UDAT_ABSOLUTE_UNIT_COUNT = UDAT_ABSOLUTE_NOW + 2\n+    UDAT_ABSOLUTE_UNIT_COUNT = UDAT_ABSOLUTE_NOW + 4\n@@ -249,0 +262,1 @@\n+class FormattedRelativeDateTime;\n@@ -251,1 +265,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -259,1 +272,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -265,1 +278,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -271,1 +284,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -277,1 +290,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -289,1 +302,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -314,1 +327,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -479,1 +491,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -495,1 +506,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -502,1 +513,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -526,1 +536,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -540,1 +549,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -546,1 +555,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -574,1 +582,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -591,1 +598,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -597,1 +604,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -625,1 +631,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -642,1 +647,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -648,1 +653,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -711,1 +715,0 @@\n-#ifndef U_HIDE_DRAFT_API  \/\/ for FormattedRelativeDateTime\n@@ -717,1 +720,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -746,0 +748,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/reldatefmt.h","additions":30,"deletions":25,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -14,0 +14,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -160,1 +162,1 @@\n-        virtual Style *clone() const;\n+        virtual SuperscriptStyle *clone() const;\n@@ -178,1 +180,1 @@\n-        virtual Style *clone() const;\n+        virtual MarkupStyle *clone() const;\n@@ -217,0 +219,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/scientificnumberformatter.h","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -17,0 +17,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -73,2 +75,1 @@\n- *     printf(\"Found match at %d pos, length is %d\\n\", pos,\n- *                                             iter.getMatchLength());\n+ *     printf(\"Found match at %d pos, length is %d\\n\", pos, iter.getMatchedLength());\n@@ -269,1 +270,1 @@\n-     * @return TRUE if both BreakIterators are of the same class, have the\n+     * @return true if both BreakIterators are of the same class, have the\n@@ -271,1 +272,1 @@\n-     *         attributes. FALSE otherwise.\n+     *         attributes. false otherwise.\n@@ -279,1 +280,1 @@\n-     * @return FALSE if operator== returns TRUE, and vice versa.\n+     * @return false if operator== returns true, and vice versa.\n@@ -576,0 +577,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/search.h","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -21,0 +21,4 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -23,1 +27,0 @@\n-#include \"unicode\/utypes.h\"\n@@ -275,1 +278,1 @@\n-    virtual Format* clone(void) const;\n+    virtual SelectFormat* clone() const;\n@@ -368,0 +371,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/selfmt.h","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -675,0 +677,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -690,0 +693,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -706,1 +710,1 @@\n-    virtual TimeZone* clone(void) const;\n+    virtual SimpleTimeZone* clone() const;\n@@ -713,1 +717,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -723,1 +727,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -932,0 +936,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/simpletz.h","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -82,1 +84,1 @@\n- * <a href=\"https:\/\/sites.google.com\/site\/icuprojectuserguide\/formatparse\/datetime?pli=1#TOC-Date-Field-Symbol-Table\">ICU\n+ * <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/format_parse\/datetime\/#date-field-symbol-table\">ICU\n@@ -868,1 +870,1 @@\n-    virtual Format* clone(void) const;\n+    virtual SimpleDateFormat* clone() const;\n@@ -1184,1 +1186,1 @@\n-     * pattern, return TRUE if it is. The sequence of calendar field,\n+     * pattern, return true if it is. The sequence of calendar field,\n@@ -1187,2 +1189,2 @@\n-     * @return         TRUE if the 'field' is smaller than all the fields\n-     *                 covered in pattern. FALSE otherwise.\n+     * @return         true if the 'field' is smaller than all the fields\n+     *                 covered in pattern. false otherwise.\n@@ -1197,1 +1199,1 @@\n-     * pattern, return TRUE if it is. The sequence of calendar field,\n+     * pattern, return true if it is. The sequence of calendar field,\n@@ -1201,2 +1203,2 @@\n-     * @return         TRUE if the 'field' is smaller than all the fields\n-     *                 covered in pattern. FALSE otherwise.\n+     * @return         true if the 'field' is smaller than all the fields\n+     *                 covered in pattern. false otherwise.\n@@ -1275,0 +1277,1 @@\n+                   char16_t fieldToOutput,\n@@ -1305,1 +1308,1 @@\n-     * Returns TRUE if the patternOffset is at the start of a numeric field.\n+     * Returns true if the patternOffset is at the start of a numeric field.\n@@ -1310,1 +1313,1 @@\n-     * Returns TRUE if the patternOffset is right after a non-numeric field.\n+     * Returns true if the patternOffset is right after a non-numeric field.\n@@ -1390,3 +1393,3 @@\n-     * @param whitespaceLenient <code>TRUE<\/code> if whitespace parse is lenient, <code>FALSE<\/code> otherwise.\n-     * @param partialMatchLenient <code>TRUE<\/code> if partial match parse is lenient, <code>FALSE<\/code> otherwise.\n-     * @param oldLeniency <code>TRUE<\/code> if old leniency control is lenient, <code>FALSE<\/code> otherwise.\n+     * @param whitespaceLenient <code>true<\/code> if whitespace parse is lenient, <code>false<\/code> otherwise.\n+     * @param partialMatchLenient <code>true<\/code> if partial match parse is lenient, <code>false<\/code> otherwise.\n+     * @param oldLeniency <code>true<\/code> if old leniency control is lenient, <code>false<\/code> otherwise.\n@@ -1394,1 +1397,1 @@\n-     * @return <code>TRUE<\/code> if the literal text could be matched, <code>FALSE<\/code> otherwise.\n+     * @return <code>true<\/code> if the literal text could be matched, <code>false<\/code> otherwise.\n@@ -1646,1 +1649,1 @@\n-    BreakIterator* fCapitalizationBrkIter;\n+    const BreakIterator* fCapitalizationBrkIter;\n@@ -1659,0 +1662,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/smpdtfmt.h","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -151,1 +153,1 @@\n-    * @return Returns TRUE if two collation keys are different, FALSE otherwise.\n+    * @return Returns true if two collation keys are different, false otherwise.\n@@ -160,1 +162,1 @@\n-    * @return Returns TRUE if the key is in an invalid, FALSE otherwise.\n+    * @return Returns true if the key is in an invalid, false otherwise.\n@@ -340,0 +342,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/sortkey.h","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -17,0 +17,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -122,2 +124,1 @@\n- *     printf(\"Found match at %d pos, length is %d\\n\", pos,\n- *                                             iter.getMatchLength());\n+ *     printf(\"Found match at %d pos, length is %d\\n\", pos, iter.getMatchedLength());\n@@ -294,1 +295,1 @@\n-     * @return TRUE if both instances have the same attributes,\n+     * @return true if both instances have the same attributes,\n@@ -415,1 +416,1 @@\n-    virtual SearchIterator * safeClone(void) const;\n+    virtual StringSearch * safeClone() const;\n@@ -505,0 +506,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/stsearch.h","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -67,0 +67,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -100,1 +102,1 @@\n- * <a href=\"http:\/\/userguide.icu-project.org\/collation\">the User Guide<\/a>.\n+ * <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/collation\">the User Guide<\/a>.\n@@ -107,1 +109,1 @@\n- * this subject see the <a href=\"http:\/\/userguide.icu-project.org\/collation\/customization\">\n+ * this subject see the <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/customization\">\n@@ -231,1 +233,1 @@\n-    virtual Collator* clone(void) const;\n+    virtual RuleBasedCollator* clone() const;\n@@ -392,0 +394,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -403,0 +406,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -494,1 +498,1 @@\n-     * See http:\/\/userguide.icu-project.org\/collation\/customization#TOC-Building-on-Existing-Locales\n+     * See https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/customization#building-on-existing-locales\n@@ -548,0 +552,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -595,0 +600,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -699,1 +705,1 @@\n-     *  http:\/\/userguide.icu-project.org\/collation\/concepts#TOC-Collator-naming-scheme\n+     *  https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/concepts#collator-naming-scheme\n@@ -749,1 +755,1 @@\n-     * If addPrefixes is TRUE, then contractions that are expressed as\n+     * If addPrefixes is true, then contractions that are expressed as\n@@ -854,1 +860,1 @@\n-     * @return TRUE if c is unsafe\n+     * @return true if c is unsafe\n@@ -877,0 +883,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tblcoll.h","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -318,0 +320,13 @@\n+#ifndef U_HIDE_INTERNAL_API\n+    \/**\n+     * If the locale contains the timezone keyword, creates a copy of that TimeZone.\n+     * Otherwise, create the default timezone.\n+     *\n+     * @param locale a locale which may contains 'timezone' keyword\/value.\n+     * @return   A TimeZone. Clients are responsible for deleting the time zone\n+     *           object returned.\n+     * @internal\n+     *\/\n+    static TimeZone* U_EXPORT2 forLocaleOrDefault(const Locale& locale);\n+#endif  \/* U_HIDE_INTERNAL_API *\/\n+\n@@ -324,4 +339,0 @@\n-     * <p>This function is not thread safe. It is an error for multiple threads\n-     * to concurrently attempt to set the default time zone, or for any thread\n-     * to attempt to reference the default zone while another thread is setting it.\n-     *\n@@ -338,2 +349,0 @@\n-     * <p>See the thread safety note under adoptDefault().\n-     *\n@@ -399,1 +408,1 @@\n-    * please read the ICU user guide section <a href=\"http:\/\/userguide.icu-project.org\/datetime\/timezone#TOC-Updating-the-Time-Zone-Data\">\n+    * please read the ICU user guide section <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/datetime\/timezone#updating-the-time-zone-data\">\n@@ -427,1 +436,1 @@\n-    * please read the ICU user guide section <a href=\"http:\/\/userguide.icu-project.org\/datetime\/timezone#TOC-Updating-the-Time-Zone-Data\">\n+    * please read the ICU user guide section <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/datetime\/timezone#updating-the-time-zone-data\">\n@@ -703,2 +712,2 @@\n-     * expect that this method to return <code>FALSE<\/code> for such case.\n-     * The default implementation of this method returns <code>TRUE<\/code>\n+     * expect that this method to return <code>false<\/code> for such case.\n+     * The default implementation of this method returns <code>true<\/code>\n@@ -729,0 +738,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -743,0 +753,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -761,1 +772,1 @@\n-    virtual TimeZone* clone(void) const = 0;\n+    virtual TimeZone* clone() const = 0;\n@@ -919,1 +930,1 @@\n-     * @return Returns TRUE when the given custom id is valid.\n+     * @return Returns true when the given custom id is valid.\n@@ -942,1 +953,1 @@\n-     * @param negative sign of the offset, TRUE for negative offset.\n+     * @param negative sign of the offset, true for negative offset.\n@@ -975,0 +986,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/timezone.h","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -19,0 +19,3 @@\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -73,1 +76,1 @@\n-    virtual UObject* clone() const;\n+    virtual TimeUnit* clone() const;\n@@ -135,0 +138,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tmunit.h","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,2 +19,3 @@\n-#include \"unicode\/measure.h\"\n-#include \"unicode\/tmunit.h\"\n+#include \"unicode\/utypes.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -24,0 +25,3 @@\n+#include \"unicode\/measure.h\"\n+#include \"unicode\/tmunit.h\"\n+\n@@ -38,1 +42,1 @@\n-     * @param number        a numeric object; number.isNumeric() must be TRUE\n+     * @param number        a numeric object; number.isNumeric() must be true\n@@ -86,1 +90,1 @@\n-    virtual UObject* clone() const;\n+    virtual TimeUnitAmount* clone() const;\n@@ -168,0 +172,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tmutamt.h","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -21,0 +21,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -22,1 +24,0 @@\n-#ifndef U_HIDE_DEPRECATED_API\n@@ -31,0 +32,1 @@\n+#ifndef U_HIDE_DEPRECATED_API\n@@ -127,1 +129,1 @@\n-    virtual Format* clone(void) const;\n+    virtual TimeUnitFormat* clone() const;\n@@ -247,0 +249,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tmutfmt.h","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -17,0 +17,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -883,1 +885,1 @@\n-     * @param incremental if TRUE, then assume more characters may be inserted\n+     * @param incremental if true, then assume more characters may be inserted\n@@ -898,2 +900,2 @@\n-     * of TRUE.  Other entities may call this method but rollback should be\n-     * FALSE.\n+     * of true.  Other entities may call this method but rollback should be\n+     * false.\n@@ -905,1 +907,1 @@\n-     * <p>In incremental mode, if rollback is TRUE, perform a special\n+     * <p>In incremental mode, if rollback is true, perform a special\n@@ -913,1 +915,1 @@\n-     * @param incremental if TRUE, then assume more characters may be inserted\n+     * @param incremental if true, then assume more characters may be inserted\n@@ -916,1 +918,1 @@\n-     * @param rollback if TRUE and if incremental is TRUE, then perform special\n+     * @param rollback if true and if incremental is true, then perform special\n@@ -918,1 +920,1 @@\n-     * transliterations where necessary.  If incremental is FALSE then this\n+     * transliterations where necessary.  If incremental is false then this\n@@ -1120,1 +1122,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n@@ -1591,0 +1593,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/translit.h","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -296,1 +298,1 @@\n-     * @return Return TRUE if the given Format objects are semantically equal.\n+     * @return Return true if the given Format objects are semantically equal.\n@@ -308,1 +310,1 @@\n-    virtual Format* clone() const;\n+    virtual TimeZoneFormat* clone() const;\n@@ -815,1 +817,1 @@\n-     * @return TRUE when the specified code array is fully filled with code points\n+     * @return true when the specified code array is fully filled with code points\n@@ -850,2 +852,2 @@\n-     * @param extendedOnly TRUE if parsing the text as ISO 8601 extended offset format (e.g. \"-08:00\"),\n-     *      or FALSE to evaluate the text as basic format.\n+     * @param extendedOnly true if parsing the text as ISO 8601 extended offset format (e.g. \"-08:00\"),\n+     *      or false to evaluate the text as basic format.\n@@ -1097,0 +1099,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tzfmt.h","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -18,0 +18,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -140,1 +142,1 @@\n-     * @return Return TRUE if the given Format objects are semantically equal.\n+     * @return Return true if the given Format objects are semantically equal.\n@@ -149,1 +151,1 @@\n-     * @return Return TRUE if the given Format objects are not semantically equal.\n+     * @return Return true if the given Format objects are not semantically equal.\n@@ -374,1 +376,1 @@\n-         * @return TRUE if the zone ID was set to tzID.\n+         * @return true if the zone ID was set to tzID.\n@@ -383,1 +385,1 @@\n-         * @return TRUE if the meta zone ID was set to mzID.\n+         * @return true if the meta zone ID was set to mzID.\n@@ -414,0 +416,3 @@\n+\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tznames.h","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -48,1 +50,1 @@\n-    virtual TimeZoneRule* clone(void) const = 0;\n+    virtual TimeZoneRule* clone() const = 0;\n@@ -232,1 +234,1 @@\n-    virtual InitialTimeZoneRule* clone(void) const;\n+    virtual InitialTimeZoneRule* clone() const;\n@@ -443,1 +445,1 @@\n-    virtual AnnualTimeZoneRule* clone(void) const;\n+    virtual AnnualTimeZoneRule* clone() const;\n@@ -659,1 +661,1 @@\n-    virtual TimeArrayTimeZoneRule* clone(void) const;\n+    virtual TimeArrayTimeZoneRule* clone() const;\n@@ -828,0 +830,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tzrule.h","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -19,0 +19,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -71,1 +73,1 @@\n-    TimeZoneTransition* clone(void) const;\n+    TimeZoneTransition* clone() const;\n@@ -195,0 +197,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/tztrans.h","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -16,0 +16,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -17,0 +19,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -35,1 +38,1 @@\n- * according to the rules of a specific calendar system. The U_STABLE\n+ * according to the rules of a specific calendar system. The C API\n@@ -444,0 +447,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -448,1 +452,2 @@\n-  UCAL_FIELD_COUNT,\n+    UCAL_FIELD_COUNT,\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -585,1 +590,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -600,1 +605,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -619,1 +624,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -645,1 +650,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -657,1 +662,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -660,0 +665,32 @@\n+\/**\n+ * Return the current host time zone. The host time zone is detected from\n+ * the current host system configuration by querying the host operating\n+ * system. If the host system detection routines fail, or if they specify\n+ * a TimeZone or TimeZone offset which is not recognized, then the special\n+ * TimeZone \"Etc\/Unknown\" is returned.\n+ *\n+ * Note that host time zone and the ICU default time zone can be different.\n+ *\n+ * The ICU default time zone does not change once initialized unless modified\n+ * by calling `ucal_setDefaultTimeZone()` or with the C++ TimeZone API,\n+ * `TimeZone::adoptDefault(TimeZone*)`.\n+ *\n+ * If the host operating system configuration has changed since ICU has\n+ * initialized then the returned value can be different than the ICU default\n+ * time zone, even if the default has not changed.\n+ *\n+ * <p>This function is not thread safe.<\/p>\n+ *\n+ * @param result A buffer to receive the result, or NULL\n+ * @param resultCapacity The capacity of the result buffer\n+ * @param ec input\/output error code\n+ * @return The result string length, not including the terminating\n+ * null\n+ *\n+ * @see #UCAL_UNKNOWN_ZONE_ID\n+ *\n+ * @stable ICU 65\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+ucal_getHostTimeZone(UChar *result, int32_t resultCapacity, UErrorCode *ec);\n+\n@@ -676,1 +713,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -685,1 +722,1 @@\n-U_STABLE UDate U_EXPORT2\n+U_CAPI UDate U_EXPORT2\n@@ -711,1 +748,1 @@\n-U_STABLE UCalendar* U_EXPORT2\n+U_CAPI UCalendar* U_EXPORT2\n@@ -724,1 +761,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -754,1 +791,1 @@\n-U_STABLE UCalendar* U_EXPORT2\n+U_CAPI UCalendar* U_EXPORT2\n@@ -767,1 +804,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -783,1 +820,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -820,1 +857,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -833,1 +870,1 @@\n- * @return TRUE if cal is currently in daylight savings time, FALSE otherwise\n+ * @return true if cal is currently in daylight savings time, false otherwise\n@@ -836,1 +873,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -860,1 +897,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -883,1 +920,1 @@\n-U_STABLE UDate U_EXPORT2\n+U_CAPI UDate U_EXPORT2\n@@ -964,1 +1001,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -979,1 +1016,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -993,1 +1030,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -1004,1 +1041,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1018,1 +1055,1 @@\n-U_STABLE UDate U_EXPORT2\n+U_CAPI UDate U_EXPORT2\n@@ -1033,1 +1070,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1052,1 +1089,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1076,1 +1113,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1087,1 +1124,1 @@\n- * Returns TRUE if two UCalendars are equivalent.  Equivalent\n+ * Returns true if two UCalendars are equivalent.  Equivalent\n@@ -1092,1 +1129,1 @@\n- * @return TRUE if cal1 and cal2 are equivalent, FALSE otherwise.\n+ * @return true if cal1 and cal2 are equivalent, false otherwise.\n@@ -1095,1 +1132,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1117,1 +1154,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1147,1 +1184,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1169,1 +1206,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1189,1 +1226,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1202,1 +1239,1 @@\n- * @return TRUE if field is set, FALSE otherwise.\n+ * @return true if field is set, false otherwise.\n@@ -1209,1 +1246,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1227,1 +1264,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1241,1 +1278,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1280,1 +1317,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1293,1 +1330,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1302,1 +1339,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1323,1 +1360,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1333,1 +1370,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1352,1 +1389,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -1407,1 +1444,1 @@\n-U_STABLE UCalendarWeekdayType U_EXPORT2\n+U_CAPI UCalendarWeekdayType U_EXPORT2\n@@ -1425,1 +1462,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1429,1 +1466,1 @@\n- * Returns TRUE if the given UDate is in the weekend in\n+ * Returns true if the given UDate is in the weekend in\n@@ -1434,2 +1471,2 @@\n- * @return TRUE if the given UDate is in the weekend in\n- * this calendar system, FALSE otherwise.\n+ * @return true if the given UDate is in the weekend in\n+ * this calendar system, false otherwise.\n@@ -1438,1 +1475,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1465,1 +1502,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1509,1 +1546,1 @@\n-* FALSE.\n+* false.\n@@ -1513,1 +1550,1 @@\n-*         If the function returns FALSE, the value set is unspecified.\n+*         If the function returns false, the value set is unspecified.\n@@ -1515,1 +1552,1 @@\n-* @return TRUE if a valid transition time is set in *transition, FALSE\n+* @return true if a valid transition time is set in *transition, false\n@@ -1519,1 +1556,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1534,1 +1571,1 @@\n-* please read the ICU user guide section <a href=\"http:\/\/userguide.icu-project.org\/datetime\/timezone#TOC-Updating-the-Time-Zone-Data\">\n+* please read the ICU user guide section <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/datetime\/timezone#updating-the-time-zone-data\">\n@@ -1547,1 +1584,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1565,1 +1602,1 @@\n-* please read the ICU user guide section <a href=\"http:\/\/userguide.icu-project.org\/datetime\/timezone#TOC-Updating-the-Time-Zone-Data\">\n+* please read the ICU user guide section <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/datetime\/timezone#updating-the-time-zone-data\">\n@@ -1579,1 +1616,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ucal.h","additions":96,"deletions":59,"binary":false,"changes":155,"status":"modified"},{"patch":"@@ -18,1 +18,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -24,0 +23,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -35,1 +38,1 @@\n- * <a href=\"http:\/\/userguide.icu-project.org\/collation\">the User Guide<\/a>.\n+ * <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/collation\">the User Guide<\/a>.\n@@ -42,1 +45,1 @@\n- * this subject see the <a href=\"http:\/\/userguide.icu-project.org\/collation\/customization\">\n+ * this subject see the <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/customization\">\n@@ -347,0 +350,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -352,0 +356,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -368,1 +373,1 @@\n-   * See http:\/\/userguide.icu-project.org\/collation\/customization#TOC-Building-on-Existing-Locales\n+   * See https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/customization#building-on-existing-locales\n@@ -382,1 +387,1 @@\n- * See <a href=\"http:\/\/userguide.icu-project.org\/collation\/api\">User Guide: Collation API<\/a>.\n+ * See <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/api\">User Guide: Collation API<\/a>.\n@@ -399,1 +404,1 @@\n-U_STABLE UCollator* U_EXPORT2\n+U_CAPI UCollator* U_EXPORT2\n@@ -427,1 +432,1 @@\n-U_STABLE UCollator* U_EXPORT2\n+U_CAPI UCollator* U_EXPORT2\n@@ -440,1 +445,1 @@\n- * http:\/\/userguide.icu-project.org\/collation\/concepts#TOC-Collator-naming-scheme\n+ * https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/concepts#collator-naming-scheme\n@@ -450,1 +455,1 @@\n- * @param forceDefaults if FALSE, the settings that are the same as the collator\n+ * @param forceDefaults if false, the settings that are the same as the collator\n@@ -453,1 +458,1 @@\n- *                   If TRUE, all the settings will be applied regardless of the\n+ *                   If true, all the settings will be applied regardless of the\n@@ -455,1 +460,1 @@\n- *                   strings are to be cached, should be set to FALSE.\n+ *                   strings are to be cached, should be set to false.\n@@ -507,1 +512,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -522,1 +527,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -559,1 +564,1 @@\n-U_STABLE UCollationResult U_EXPORT2\n+U_CAPI UCollationResult U_EXPORT2\n@@ -584,1 +589,1 @@\n-U_STABLE UCollationResult U_EXPORT2\n+U_CAPI UCollationResult U_EXPORT2\n@@ -601,1 +606,1 @@\n- * @return TRUE if source is greater than target, FALSE otherwise.\n+ * @return true if source is greater than target, false otherwise.\n@@ -607,1 +612,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -620,1 +625,1 @@\n- * @return TRUE if source is greater than or equal to target, FALSE otherwise.\n+ * @return true if source is greater than or equal to target, false otherwise.\n@@ -626,1 +631,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -639,1 +644,1 @@\n- * @return TRUE if source is equal to target, FALSE otherwise\n+ * @return true if source is equal to target, false otherwise\n@@ -645,1 +650,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -662,1 +667,1 @@\n-U_STABLE UCollationResult U_EXPORT2\n+U_CAPI UCollationResult U_EXPORT2\n@@ -677,1 +682,1 @@\n-U_STABLE UCollationStrength U_EXPORT2\n+U_CAPI UCollationStrength U_EXPORT2\n@@ -689,1 +694,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -709,1 +714,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -754,1 +759,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -779,1 +784,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -797,1 +802,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -813,1 +818,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -824,1 +829,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -836,1 +841,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -849,1 +854,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -863,1 +868,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -882,1 +887,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -902,1 +907,1 @@\n- * href=\"http:\/\/userguide.icu-project.org\/locale#TOC-Locales-and-Services\">\n+ * href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/locale#locales-and-services\">\n@@ -919,1 +924,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -932,1 +937,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -943,1 +948,1 @@\n- *  http:\/\/userguide.icu-project.org\/collation\/concepts#TOC-Collator-naming-scheme\n+ *  https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/concepts#collator-naming-scheme\n@@ -1015,1 +1020,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1043,1 +1048,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1110,1 +1115,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1127,1 +1132,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1137,1 +1142,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1156,1 +1161,1 @@\n- * http:\/\/userguide.icu-project.org\/collation\/api#TOC-Sort-Key-Features\n+ * https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/api#sort-key-features\n@@ -1187,1 +1192,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1203,1 +1208,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1217,1 +1222,1 @@\n-U_STABLE UColAttributeValue  U_EXPORT2\n+U_CAPI UColAttributeValue  U_EXPORT2\n@@ -1236,1 +1241,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1246,1 +1251,1 @@\n-U_STABLE UColReorderCode U_EXPORT2\n+U_CAPI UColReorderCode U_EXPORT2\n@@ -1287,1 +1292,1 @@\n-U_STABLE uint32_t U_EXPORT2 ucol_getVariableTop(const UCollator *coll, UErrorCode *status);\n+U_CAPI uint32_t U_EXPORT2 ucol_getVariableTop(const UCollator *coll, UErrorCode *status);\n@@ -1331,1 +1336,1 @@\n-U_STABLE UCollator* U_EXPORT2\n+U_CAPI UCollator* U_EXPORT2\n@@ -1352,1 +1357,1 @@\n- * See http:\/\/userguide.icu-project.org\/collation\/customization#TOC-Building-on-Existing-Locales\n+ * See https:\/\/unicode-org.github.io\/icu\/userguide\/collation\/customization#building-on-existing-locales\n@@ -1361,1 +1366,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1397,1 +1402,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -1410,1 +1415,1 @@\n-U_STABLE USet * U_EXPORT2\n+U_CAPI USet * U_EXPORT2\n@@ -1425,1 +1430,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1437,1 +1442,1 @@\n- * @param forceDefaults if FALSE, the settings that are the same as the collator\n+ * @param forceDefaults if false, the settings that are the same as the collator\n@@ -1440,1 +1445,1 @@\n- *                   If TRUE, all the settings will be applied regardless of the\n+ *                   If true, all the settings will be applied regardless of the\n@@ -1442,1 +1447,1 @@\n- *                   strings are to be cached, should be set to FALSE.\n+ *                   strings are to be cached, should be set to false.\n@@ -1450,1 +1455,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1468,1 +1473,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1490,1 +1495,1 @@\n-U_STABLE UCollator* U_EXPORT2\n+U_CAPI UCollator* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ucol.h","additions":67,"deletions":62,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * This indicates an error has occured during processing or if no more CEs is\n+ * This indicates an error has occurred during processing or if no more CEs is\n@@ -69,2 +69,2 @@\n- * .      s=(UChar*)malloc(sizeof(UChar) * (strlen(\"This is a test\")+1) );\n- * .      u_uastrcpy(s, \"This is a test\");\n+ * .      str=(UChar*)malloc(sizeof(UChar) * (strlen(\"This is a test\")+1) );\n+ * .      u_uastrcpy(str, \"This is a test\");\n@@ -76,1 +76,1 @@\n- * .      free(s);\n+ * .      free(str);\n@@ -105,0 +105,4 @@\n+ * The UCollationElements retains a pointer to the supplied text.\n+ * The caller must not modify or delete the text while the UCollationElements\n+ * object is used to iterate over this text.\n+ *\n@@ -112,1 +116,1 @@\n-U_STABLE UCollationElements* U_EXPORT2\n+U_CAPI UCollationElements* U_EXPORT2\n@@ -118,1 +122,0 @@\n-\n@@ -126,1 +129,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -135,1 +138,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -147,1 +150,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -156,1 +159,1 @@\n- *         if an error has occured or if the end of string has been reached\n+ *         if an error has occurred or if the end of string has been reached\n@@ -159,1 +162,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -171,1 +174,1 @@\n- *         UCOL_NULLORDER if an error has occured or if the start of string has\n+ *         UCOL_NULLORDER if an error has occurred or if the start of string has\n@@ -175,1 +178,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -189,1 +192,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -197,0 +200,5 @@\n+ *\n+ * The UCollationElements retains a pointer to the supplied text.\n+ * The caller must not modify or delete the text while the UCollationElements\n+ * object is used to iterate over this text.\n+ *\n@@ -204,1 +212,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -219,1 +227,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -234,1 +242,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -236,1 +244,1 @@\n-               int32_t        offset,\n+               int32_t             offset,\n@@ -245,1 +253,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -254,1 +262,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -263,1 +271,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ucoleitr.h","additions":29,"deletions":21,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -31,0 +30,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -78,1 +81,1 @@\n-U_STABLE UCharsetDetector * U_EXPORT2\n+U_CAPI UCharsetDetector * U_EXPORT2\n@@ -90,1 +93,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -127,1 +130,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -149,1 +152,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -178,1 +181,1 @@\n-U_STABLE const UCharsetMatch * U_EXPORT2\n+U_CAPI const UCharsetMatch * U_EXPORT2\n@@ -212,1 +215,1 @@\n-U_STABLE const UCharsetMatch ** U_EXPORT2\n+U_CAPI const UCharsetMatch ** U_EXPORT2\n@@ -232,1 +235,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -258,1 +261,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -290,1 +293,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -316,1 +319,1 @@\n-U_STABLE  int32_t U_EXPORT2\n+U_CAPI  int32_t U_EXPORT2\n@@ -350,1 +353,1 @@\n-U_STABLE  UEnumeration * U_EXPORT2\n+U_CAPI  UEnumeration * U_EXPORT2\n@@ -360,1 +363,1 @@\n-  *  @return TRUE if filtering is enabled.\n+  *  @return true if filtering is enabled.\n@@ -364,1 +367,1 @@\n-U_STABLE  UBool U_EXPORT2\n+U_CAPI  UBool U_EXPORT2\n@@ -379,1 +382,1 @@\n-U_STABLE  UBool U_EXPORT2\n+U_CAPI  UBool U_EXPORT2\n@@ -396,1 +399,1 @@\n-U_INTERNAL UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -406,1 +409,1 @@\n-  * @param enabled <code>TRUE<\/code> to enable, or <code>FALSE<\/code> to disable the\n+  * @param enabled <code>true<\/code> to enable, or <code>false<\/code> to disable the\n@@ -412,1 +415,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ucsdet.h","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -17,1 +17,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -22,0 +21,5 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -145,1 +149,1 @@\n- * <a href=\"https:\/\/sites.google.com\/site\/icuprojectuserguide\/formatparse\/datetime?pli=1#TOC-Date-Field-Symbol-Table\">ICU\n+ * <a href=\"https:\/\/unicode-org.github.io\/icu\/userguide\/format_parse\/datetime#date-field-symbol-table\">ICU\n@@ -835,1 +839,13 @@\n- * Note: since the mapping is many-to-one, there is no inverse mapping.\n+ *\n+ * Note 1: Since the mapping is many-to-one, there is no inverse mapping.\n+ *\n+ * Note 2: There is no UErrorCode parameter, so in case of error (UDateFormatField is\n+ * unknown or has no corresponding UCalendarDateFields value), the function returns the\n+ * current value of UCAL_FIELD_COUNT. However, that value may change from release to\n+ * release and is consequently deprecated. For a future-proof runtime way of checking\n+ * for errors:\n+ * a) First save the value returned by the function when it is passed an invalid value\n+ *    such as \"(UDateFormatField)-1\".\n+ * b) Then, to test for errors when passing some other UDateFormatField value, check\n+ *     whether the function returns that saved value.\n+ *\n@@ -837,2 +853,4 @@\n- * @return the UCalendarDateField.  This will be UCAL_FIELD_COUNT in case\n- * of error (e.g., the input field is UDAT_FIELD_COUNT).\n+ * @return the UCalendarDateField. In case of error (UDateFormatField is unknown or has\n+ *   no corresponding UCalendarDateFields value) this will be the current value of\n+ *   UCAL_FIELD_COUNT, but that value may change from release to release.\n+ *   See Note 2 above.\n@@ -926,0 +944,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -931,0 +950,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -959,0 +979,23 @@\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Hour Cycle.\n+ * @draft ICU 67\n+ *\/\n+typedef enum UDateFormatHourCycle {\n+    \/**\n+     * Hour in am\/pm (0~11)\n+     * @draft ICU 67\n+     *\/\n+    UDAT_HOUR_CYCLE_11,\n+\n+    \/**\n+     * Hour in am\/pm (1~12)\n+     * @draft ICU 67\n+     *\/\n+    UDAT_HOUR_CYCLE_12,\n+\n+    \/**\n+     * Hour in day (0~23)\n+     * @draft ICU 67\n+     *\/\n+    UDAT_HOUR_CYCLE_23,\n@@ -960,0 +1003,7 @@\n+    \/**\n+     * Hour in day (1~24)\n+     * @draft ICU 67\n+     *\/\n+    UDAT_HOUR_CYCLE_24\n+} UDateFormatHourCycle;\n+#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -1188,1 +1238,1 @@\n-* @return TRUE if fmt is set to perform lenient parsing, FALSE otherwise.\n+* @return true if fmt is set to perform lenient parsing, false otherwise.\n@@ -1200,1 +1250,1 @@\n-* @param isLenient TRUE if fmt should perform lenient parsing, FALSE otherwise.\n+* @param isLenient true if fmt should perform lenient parsing, false otherwise.\n@@ -1360,1 +1410,1 @@\n-* @param localized TRUE if the pattern should be localized, FALSE otherwise.\n+* @param localized true if the pattern should be localized, false otherwise.\n@@ -1379,1 +1429,1 @@\n-* @param localized TRUE if the pattern is localized, FALSE otherwise.\n+* @param localized true if the pattern is localized, false otherwise.\n@@ -1607,1 +1657,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1624,1 +1674,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1642,1 +1692,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1667,1 +1717,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1674,1 +1724,1 @@\n-U_INTERNAL UDateFormatOpener U_EXPORT2\n+U_CAPI UDateFormatOpener U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/udat.h","additions":64,"deletions":14,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -17,0 +17,1 @@\n+#include \"unicode\/ucal.h\"\n@@ -18,1 +19,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -20,0 +20,5 @@\n+#include \"unicode\/udisplaycontext.h\"\n+\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -85,1 +90,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -89,1 +93,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -92,1 +96,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -118,1 +121,1 @@\n-U_STABLE UDateIntervalFormat* U_EXPORT2\n+U_CAPI UDateIntervalFormat* U_EXPORT2\n@@ -132,1 +135,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -135,2 +138,0 @@\n-\n-#ifndef U_HIDE_DRAFT_API\n@@ -144,1 +145,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -169,1 +170,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -178,1 +179,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -182,1 +183,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -200,1 +200,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -208,1 +207,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -211,1 +210,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -247,1 +245,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -263,3 +261,0 @@\n- * @param result\n- *            The UFormattedDateInterval to contain the result of the\n- *            formatting operation.\n@@ -270,0 +265,3 @@\n+ * @param result\n+ *            The UFormattedDateInterval to contain the result of the\n+ *            formatting operation.\n@@ -272,1 +270,1 @@\n- * @draft ICU 64\n+ * @draft ICU 67\n@@ -274,1 +272,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -277,1 +275,0 @@\n-                UFormattedDateInterval* result,\n@@ -280,0 +277,26 @@\n+                UFormattedDateInterval* result,\n+                UErrorCode*     status);\n+\n+\/**\n+ * Formats a date\/time range using the conventions established for the\n+ * UDateIntervalFormat object.\n+ * @param formatter\n+ *            The UDateIntervalFormat object specifying the format conventions.\n+ * @param fromCalendar\n+ *            The starting point of the range.\n+ * @param toCalendar\n+ *            The ending point of the range.\n+ * @param result\n+ *            The UFormattedDateInterval to contain the result of the\n+ *            formatting operation.\n+ * @param status\n+ *            A pointer to a UErrorCode to receive any errors.\n+ * @draft ICU 67\n+ *\/\n+\n+U_CAPI void U_EXPORT2\n+udtitvfmt_formatCalendarToResult(\n+                const UDateIntervalFormat* formatter,\n+                UCalendar*      fromCalendar,\n+                UCalendar*      toCalendar,\n+                UFormattedDateInterval* result,\n@@ -283,0 +306,28 @@\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Set a particular UDisplayContext value in the formatter, such as\n+ * UDISPCTX_CAPITALIZATION_FOR_STANDALONE. This causes the formatted\n+ * result to be capitalized appropriately for the context in which\n+ * it is intended to be used, considering both the locale and the\n+ * type of field at the beginning of the formatted result.\n+ * @param formatter The formatter for which to set a UDisplayContext value.\n+ * @param value The UDisplayContext value to set.\n+ * @param status A pointer to an UErrorCode to receive any errors\n+ * @draft ICU 68\n+ *\/\n+U_CAPI void U_EXPORT2\n+udtitvfmt_setContext(UDateIntervalFormat* formatter, UDisplayContext value, UErrorCode* status);\n+\n+\/**\n+ * Get the formatter's UDisplayContext value for the specified UDisplayContextType,\n+ * such as UDISPCTX_TYPE_CAPITALIZATION.\n+ * @param formatter The formatter to query.\n+ * @param type The UDisplayContextType whose value to return\n+ * @param status A pointer to an UErrorCode to receive any errors\n+ * @return The UDisplayContextValue for the specified type.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI UDisplayContext U_EXPORT2\n+udtitvfmt_getContext(const UDateIntervalFormat* formatter, UDisplayContextType type, UErrorCode* status);\n+\n+#endif \/* U_HIDE_DRAFT_API *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/udateintervalformat.h","additions":73,"deletions":22,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+#include \"unicode\/udat.h\"\n@@ -24,0 +25,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -25,0 +28,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -91,0 +95,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -96,0 +101,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -161,1 +167,1 @@\n-U_STABLE UDateTimePatternGenerator * U_EXPORT2\n+U_CAPI UDateTimePatternGenerator * U_EXPORT2\n@@ -171,1 +177,1 @@\n-U_STABLE UDateTimePatternGenerator * U_EXPORT2\n+U_CAPI UDateTimePatternGenerator * U_EXPORT2\n@@ -179,1 +185,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -209,1 +215,1 @@\n-U_STABLE UDateTimePatternGenerator * U_EXPORT2\n+U_CAPI UDateTimePatternGenerator * U_EXPORT2\n@@ -235,1 +241,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -271,1 +277,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -299,1 +305,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -329,1 +335,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -359,1 +365,1 @@\n-U_STABLE UDateTimePatternConflict U_EXPORT2\n+U_CAPI UDateTimePatternConflict U_EXPORT2\n@@ -386,1 +392,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -401,1 +407,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -419,1 +425,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -436,1 +442,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -466,1 +472,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -496,1 +502,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -507,1 +513,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -524,1 +530,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -536,1 +542,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -565,1 +571,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -602,1 +608,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -621,1 +627,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -634,1 +640,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -647,1 +653,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -652,0 +658,22 @@\n+#if !UCONFIG_NO_FORMATTING\n+\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Return the default hour cycle for a locale. Uses the locale that the\n+ * UDateTimePatternGenerator was initially created with.\n+ *\n+ * Cannot be used on an empty UDateTimePatternGenerator instance.\n+ *\n+ * @param dtpg a pointer to UDateTimePatternGenerator.\n+ * @param pErrorCode a pointer to the UErrorCode which must not indicate a\n+ *                   failure before the function call. Set to U_UNSUPPORTED_ERROR\n+ *                   if used on an empty instance.\n+ * @return the default hour cycle.\n+ * @draft ICU 67\n+ *\/\n+U_CAPI UDateFormatHourCycle U_EXPORT2\n+udatpg_getDefaultHourCycle(const UDateTimePatternGenerator *dtpg, UErrorCode* pErrorCode);\n+#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/udatpg.h","additions":51,"deletions":23,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -17,0 +17,1 @@\n+#if U_SHOW_CPLUSPLUS_API\n@@ -18,0 +19,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -55,1 +57,1 @@\n-U_STABLE UFieldPositionIterator* U_EXPORT2\n+U_CAPI UFieldPositionIterator* U_EXPORT2\n@@ -64,1 +66,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -115,1 +117,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ufieldpositer.h","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#if U_SHOW_CPLUSPLUS_API\n@@ -38,0 +39,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -82,1 +84,1 @@\n-U_STABLE UFormattable* U_EXPORT2\n+U_CAPI UFormattable* U_EXPORT2\n@@ -91,1 +93,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -123,1 +125,1 @@\n-U_STABLE UFormattableType U_EXPORT2\n+U_CAPI UFormattableType U_EXPORT2\n@@ -134,1 +136,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -147,1 +149,1 @@\n-U_STABLE UDate U_EXPORT2\n+U_CAPI UDate U_EXPORT2\n@@ -165,1 +167,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -186,1 +188,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -207,1 +209,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -220,1 +222,1 @@\n-U_STABLE const void *U_EXPORT2\n+U_CAPI const void *U_EXPORT2\n@@ -235,1 +237,1 @@\n-U_STABLE const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -246,1 +248,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -258,1 +260,1 @@\n-U_STABLE UFormattable * U_EXPORT2\n+U_CAPI UFormattable * U_EXPORT2\n@@ -283,1 +285,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/uformattable.h","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -10,1 +10,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -33,1 +32,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -39,1 +38,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -46,1 +45,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -53,1 +52,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -60,1 +59,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -67,1 +66,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -86,1 +85,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -93,1 +92,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -110,1 +109,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -122,1 +121,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -124,1 +123,1 @@\n-U_DRAFT UConstrainedFieldPosition* U_EXPORT2\n+U_CAPI UConstrainedFieldPosition* U_EXPORT2\n@@ -135,1 +134,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -137,1 +136,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -147,1 +146,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -149,1 +148,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -176,1 +175,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -178,1 +177,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -209,1 +208,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -211,1 +210,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -224,1 +223,1 @@\n- * ufmtval_nextPosition returns TRUE.\n+ * ufmtval_nextPosition returns true.\n@@ -229,1 +228,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -231,1 +230,1 @@\n-U_DRAFT int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -242,1 +241,1 @@\n- * ufmtval_nextPosition returns TRUE.\n+ * ufmtval_nextPosition returns true.\n@@ -247,1 +246,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -249,1 +248,1 @@\n-U_DRAFT int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -258,1 +257,1 @@\n- * The output values are well-defined only after ufmtval_nextPosition returns TRUE.\n+ * The output values are well-defined only after ufmtval_nextPosition returns true.\n@@ -264,1 +263,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -266,1 +265,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -284,1 +283,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -286,1 +285,1 @@\n-U_DRAFT int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -300,1 +299,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -302,1 +301,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -319,1 +318,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -321,1 +320,1 @@\n-U_DRAFT UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -343,1 +342,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -345,1 +344,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -360,1 +359,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -376,1 +375,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -378,1 +377,1 @@\n-U_DRAFT const UChar* U_EXPORT2\n+U_CAPI const UChar* U_EXPORT2\n@@ -405,2 +404,2 @@\n- * @return TRUE if another position was found; FALSE otherwise.\n- * @draft ICU 64\n+ * @return true if another position was found; false otherwise.\n+ * @stable ICU 64\n@@ -408,1 +407,1 @@\n-U_DRAFT UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -428,1 +427,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -438,1 +437,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/uformattedvalue.h","additions":43,"deletions":45,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -17,0 +17,1 @@\n+#if U_SHOW_CPLUSPLUS_API\n@@ -18,0 +19,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -66,1 +68,1 @@\n-U_STABLE const UGenderInfo* U_EXPORT2\n+U_CAPI const UGenderInfo* U_EXPORT2\n@@ -79,1 +81,1 @@\n-U_STABLE UGender U_EXPORT2\n+U_CAPI UGender U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ugender.h","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -17,1 +17,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -20,0 +19,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -37,1 +40,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -41,1 +43,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -44,1 +46,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -46,1 +47,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -50,1 +50,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -55,1 +55,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -60,1 +60,1 @@\n-     * @draft ICU 63\n+     * @stable ICU 63\n@@ -64,1 +64,55 @@\n-#endif \/\/ U_HIDE_DRAFT_API\n+\n+\/**\n+ * Type of meaning expressed by the list.\n+ *\n+ * @stable ICU 67\n+ *\/\n+typedef enum UListFormatterType {\n+    \/**\n+     * Conjunction formatting, e.g. \"Alice, Bob, Charlie, and Delta\".\n+     *\n+     * @stable ICU 67\n+     *\/\n+    ULISTFMT_TYPE_AND,\n+\n+    \/**\n+     * Disjunction (or alternative, or simply one of) formatting, e.g.\n+     * \"Alice, Bob, Charlie, or Delta\".\n+     *\n+     * @stable ICU 67\n+     *\/\n+    ULISTFMT_TYPE_OR,\n+\n+    \/**\n+     * Formatting of a list of values with units, e.g. \"5 pounds, 12 ounces\".\n+     *\n+     * @stable ICU 67\n+     *\/\n+    ULISTFMT_TYPE_UNITS\n+} UListFormatterType;\n+\n+\/**\n+ * Verbosity level of the list patterns.\n+ *\n+ * @stable ICU 67\n+ *\/\n+typedef enum UListFormatterWidth {\n+    \/**\n+     * Use list formatting with full words (no abbreviations) when possible.\n+     *\n+     * @stable ICU 67\n+     *\/\n+    ULISTFMT_WIDTH_WIDE,\n+\n+    \/**\n+     * Use list formatting of typical length.\n+     * @stable ICU 67\n+     *\/\n+    ULISTFMT_WIDTH_SHORT,\n+\n+    \/**\n+     * Use list formatting of the shortest possible length.\n+     * @stable ICU 67\n+     *\/\n+    ULISTFMT_WIDTH_NARROW,\n+} UListFormatterWidth;\n@@ -68,0 +122,2 @@\n+ * The object will be initialized with AND type and WIDE width.\n+ *\n@@ -86,0 +142,26 @@\n+\/**\n+ * Open a new UListFormatter object appropriate for the given locale, list type,\n+ * and style.\n+ *\n+ * @param locale\n+ *            The locale whose rules should be used; may be NULL for\n+ *            default locale.\n+ * @param type\n+ *            The type of list formatting to use.\n+ * @param width\n+ *            The width of formatting to use.\n+ * @param status\n+ *            A pointer to a standard ICU UErrorCode (input\/output parameter).\n+ *            Its input value must pass the U_SUCCESS() test, or else the\n+ *            function returns immediately. The caller should check its output\n+ *            value with U_FAILURE(), or use with function chaining (see User\n+ *            Guide for details).\n+ * @return\n+ *            A pointer to a UListFormatter object for the specified locale,\n+ *            or NULL if an error occurred.\n+ * @stable ICU 67\n+ *\/\n+U_CAPI UListFormatter* U_EXPORT2\n+ulistfmt_openForType(const char*  locale, UListFormatterType type,\n+                     UListFormatterWidth width, UErrorCode*  status);\n+\n@@ -95,1 +177,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -103,1 +184,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -127,1 +208,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -136,1 +217,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -140,1 +221,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -158,1 +238,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -166,1 +245,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -169,1 +248,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -218,1 +296,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -243,1 +320,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -253,1 +330,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ulistformatter.h","additions":96,"deletions":20,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -26,0 +28,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -90,1 +93,1 @@\n-U_STABLE ULocaleData* U_EXPORT2\n+U_CAPI ULocaleData* U_EXPORT2\n@@ -99,1 +102,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -132,1 +135,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -146,1 +149,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -176,1 +179,1 @@\n-U_STABLE USet* U_EXPORT2\n+U_CAPI USet* U_EXPORT2\n@@ -193,1 +196,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -223,1 +226,1 @@\n-U_STABLE UMeasurementSystem U_EXPORT2\n+U_CAPI UMeasurementSystem U_EXPORT2\n@@ -242,1 +245,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -251,1 +254,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -269,1 +272,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -291,1 +294,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ulocdata.h","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -32,0 +31,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -178,1 +181,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -205,1 +208,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -230,1 +233,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -255,1 +258,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -284,1 +287,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -313,1 +316,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -341,1 +344,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -369,1 +372,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -399,1 +402,1 @@\n-U_STABLE UMessageFormat* U_EXPORT2\n+U_CAPI UMessageFormat* U_EXPORT2\n@@ -412,1 +415,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -442,1 +445,1 @@\n-U_STABLE UMessageFormat U_EXPORT2\n+U_CAPI UMessageFormat U_EXPORT2\n@@ -453,1 +456,1 @@\n-U_STABLE void  U_EXPORT2\n+U_CAPI void  U_EXPORT2\n@@ -464,1 +467,1 @@\n-U_STABLE const char*  U_EXPORT2\n+U_CAPI const char*  U_EXPORT2\n@@ -479,1 +482,1 @@\n-U_STABLE void  U_EXPORT2\n+U_CAPI void  U_EXPORT2\n@@ -497,1 +500,1 @@\n-U_STABLE int32_t  U_EXPORT2\n+U_CAPI int32_t  U_EXPORT2\n@@ -518,1 +521,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -540,1 +543,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -561,1 +564,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -584,1 +587,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -616,1 +619,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/umsg.h","additions":24,"deletions":21,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -17,0 +17,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -78,1 +80,1 @@\n-     * @param escapeUnprintable if TRUE then convert unprintable\n+     * @param escapeUnprintable if true then convert unprintable\n@@ -99,0 +101,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/unirepl.h","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -21,1 +21,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -30,0 +29,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -275,1 +278,1 @@\n- * http:\/\/userguide.icu-project.org\/formatparse\/numbers\/rounding-modes\n+ * https:\/\/unicode-org.github.io\/icu\/userguide\/format_parse\/numbers\/rounding-modes\n@@ -341,0 +344,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -346,0 +350,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -378,2 +383,1 @@\n-#ifndef U_HIDE_DRAFT_API\n-    \/** @draft ICU 64 *\/\n+    \/** @stable ICU 64 *\/\n@@ -381,1 +385,1 @@\n-    \/** @draft ICU 64 *\/\n+    \/** @stable ICU 64 *\/\n@@ -383,1 +387,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -395,0 +398,24 @@\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Selectors with special numeric values to use locale default minimum grouping\n+ * digits for the DecimalFormat\/UNumberFormat setMinimumGroupingDigits method.\n+ * Do not use these constants with the [U]NumberFormatter API.\n+ *\n+ * @draft ICU 68\n+ *\/\n+typedef enum UNumberFormatMinimumGroupingDigits {\n+    \/**\n+     * Display grouping using the default strategy for all locales.\n+     * @draft ICU 68\n+     *\/\n+    UNUM_MINIMUM_GROUPING_DIGITS_AUTO = -2,\n+    \/**\n+     * Display grouping using locale defaults, except do not show grouping on\n+     * values smaller than 10000 (such that there is a minimum of two digits\n+     * before the first separator).\n+     * @draft ICU 68\n+     *\/\n+    UNUM_MINIMUM_GROUPING_DIGITS_MIN2 = -3,\n+} UNumberFormatMinimumGroupingDigits;\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -412,1 +439,1 @@\n- * use unumf_openWithSkeletonAndLocale instead of unum_open.\n+ * use unumf_openForSkeletonAndLocale instead of unum_open.\n@@ -432,1 +459,1 @@\n-U_STABLE UNumberFormat* U_EXPORT2\n+U_CAPI UNumberFormat* U_EXPORT2\n@@ -447,1 +474,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -477,1 +504,1 @@\n-U_STABLE UNumberFormat* U_EXPORT2\n+U_CAPI UNumberFormat* U_EXPORT2\n@@ -505,1 +532,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -537,1 +564,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -569,1 +596,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -619,1 +646,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -656,1 +683,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -689,1 +716,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -718,1 +745,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -745,1 +772,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -771,1 +798,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -797,1 +824,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -832,1 +859,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -860,1 +887,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -888,1 +915,1 @@\n-U_STABLE UFormattable* U_EXPORT2\n+U_CAPI UFormattable* U_EXPORT2\n@@ -901,1 +928,1 @@\n- * @param localized TRUE if the pattern is localized, FALSE otherwise.\n+ * @param localized true if the pattern is localized, false otherwise.\n@@ -912,1 +939,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -931,1 +958,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -943,1 +970,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1033,1 +1060,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -1040,1 +1066,1 @@\n-   * @draft ICU 64\n+   * @stable ICU 64\n@@ -1043,1 +1069,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n@@ -1084,2 +1109,0 @@\n-#ifndef U_HIDE_DRAFT_API\n-\n@@ -1089,1 +1112,1 @@\n-   * @draft ICU 64\n+   * @stable ICU 64\n@@ -1098,1 +1121,1 @@\n-   * @draft ICU 64\n+   * @stable ICU 64\n@@ -1102,2 +1125,0 @@\n-#endif \/* U_HIDE_DRAFT_API *\/\n-\n@@ -1130,1 +1151,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1153,1 +1174,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1173,1 +1194,1 @@\n-U_STABLE double U_EXPORT2\n+U_CAPI double U_EXPORT2\n@@ -1191,1 +1212,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1248,1 +1269,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1271,1 +1292,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1282,2 +1303,2 @@\n- * @param isPatternLocalized TRUE if the pattern should be localized,\n- * FALSE otherwise.  This is ignored if the formatter is a rule-based\n+ * @param isPatternLocalized true if the pattern should be localized,\n+ * false otherwise.  This is ignored if the formatter is a rule-based\n@@ -1294,1 +1315,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1413,1 +1434,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1433,1 +1454,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1450,1 +1471,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -1463,1 +1484,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1475,1 +1496,1 @@\n-U_STABLE UDisplayContext U_EXPORT2\n+U_CAPI UDisplayContext U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/unum.h","additions":71,"deletions":50,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -4,0 +4,3 @@\n+#ifndef __UNUMBERFORMATTER_H__\n+#define __UNUMBERFORMATTER_H__\n+\n@@ -7,2 +10,0 @@\n-#ifndef __UNUMBERFORMATTER_H__\n-#define __UNUMBERFORMATTER_H__\n@@ -80,2 +81,0 @@\n-\n-#ifndef U_HIDE_DRAFT_API\n@@ -98,1 +97,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -110,1 +109,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -126,1 +125,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -137,1 +136,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -148,1 +147,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -152,0 +151,24 @@\n+#ifndef U_HIDE_DRAFT_API\n+    \/**\n+     * Use the formal variant of the currency symbol; for example, \"NT$\" for the New Taiwan\n+     * dollar in zh-TW.\n+     *\n+     * <p>\n+     * Behavior of this option with non-currency units is not defined at this time.\n+     *\n+     * @draft ICU 68\n+     *\/\n+            UNUM_UNIT_WIDTH_FORMAL,\n+\n+    \/**\n+     * Use the alternate variant of the currency symbol; for example, \"TL\" for the Turkish\n+     * lira (TRY).\n+     *\n+     * <p>\n+     * Behavior of this option with non-currency units is not defined at this time.\n+     *\n+     * @draft ICU 68\n+     *\/\n+            UNUM_UNIT_WIDTH_VARIANT,\n+#endif  \/\/ U_HIDE_DRAFT_API\n+\n@@ -157,1 +180,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -168,1 +191,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -170,1 +192,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -195,1 +216,1 @@\n- * @draft ICU 63\n+ * @stable ICU 63\n@@ -201,1 +222,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -217,1 +238,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -232,1 +253,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -248,1 +269,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -256,1 +277,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -272,4 +293,0 @@\n-\n-#endif  \/* U_HIDE_DRAFT_API *\/\n-\n-#ifndef U_HIDE_DRAFT_API\n@@ -293,1 +310,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -300,1 +317,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -308,1 +325,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -315,1 +332,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -331,1 +348,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -341,1 +358,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -347,1 +364,1 @@\n-     * sign on zero.\n+     * sign on zero, numbers that round to zero, or NaN.\n@@ -349,1 +366,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -355,2 +372,2 @@\n-     * positive numbers. Do not show a sign on zero. For more information on the accounting format,\n-     * see the ACCOUNTING sign display strategy.\n+     * positive numbers. Do not show a sign on zero, numbers that round to zero, or NaN. For more\n+     * information on the accounting format, see the ACCOUNTING sign display strategy.\n@@ -358,1 +375,1 @@\n-     * @draft ICU 61\n+     * @stable ICU 61\n@@ -369,1 +386,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -371,1 +387,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -381,1 +396,1 @@\n- * @draft ICU 60\n+ * @stable ICU 60\n@@ -388,1 +403,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -395,1 +410,1 @@\n-     * @draft ICU 60\n+     * @stable ICU 60\n@@ -406,1 +421,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -441,1 +455,1 @@\n- * @param skeletonLen The number of UChars in the skeleton string, or -1 it it is NUL-terminated.\n+ * @param skeletonLen The number of UChars in the skeleton string, or -1 if it is NUL-terminated.\n@@ -446,1 +460,1 @@\n-U_STABLE UNumberFormatter* U_EXPORT2\n+U_CAPI UNumberFormatter* U_EXPORT2\n@@ -451,1 +465,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -457,1 +470,1 @@\n- * @param skeletonLen The number of UChars in the skeleton string, or -1 it it is NUL-terminated.\n+ * @param skeletonLen The number of UChars in the skeleton string, or -1 if it is NUL-terminated.\n@@ -462,1 +475,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -464,1 +477,1 @@\n-U_DRAFT UNumberFormatter* U_EXPORT2\n+U_CAPI UNumberFormatter* U_EXPORT2\n@@ -467,1 +480,0 @@\n-#endif  \/\/ U_HIDE_DRAFT_API\n@@ -478,1 +490,1 @@\n-U_STABLE UFormattedNumber* U_EXPORT2\n+U_CAPI UFormattedNumber* U_EXPORT2\n@@ -497,1 +509,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -517,1 +529,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -541,1 +553,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -545,1 +557,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -558,1 +569,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -560,1 +571,1 @@\n-U_DRAFT const UFormattedValue* U_EXPORT2\n+U_CAPI const UFormattedValue* U_EXPORT2\n@@ -562,1 +573,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -584,1 +594,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -618,1 +628,1 @@\n- *            the method returns FALSE.\n+ *            the method returns false.\n@@ -622,1 +632,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -647,1 +657,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -652,0 +662,28 @@\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Extracts the formatted number as a \"numeric string\" conforming to the\n+ * syntax defined in the Decimal Arithmetic Specification, available at\n+ * http:\/\/speleotrove.com\/decimal\n+ *\n+ * This endpoint is useful for obtaining the exact number being printed\n+ * after scaling and rounding have been applied by the number formatter.\n+ *\n+ * @param uresult        The input object containing the formatted number.\n+ * @param  dest          the 8-bit char buffer into which the decimal number is placed\n+ * @param  destCapacity  The size, in chars, of the destination buffer.  May be zero\n+ *                       for precomputing the required size.\n+ * @param  ec            receives any error status.\n+ *                       If U_BUFFER_OVERFLOW_ERROR: Returns number of chars for\n+ *                       preflighting.\n+ * @return Number of chars in the data.  Does not include a trailing NUL.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+unumf_resultToDecimalNumber(\n+       const UFormattedNumber* uresult,\n+       char* dest,\n+       int32_t destCapacity,\n+       UErrorCode* ec);\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n+\n@@ -658,1 +696,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -668,1 +706,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -712,1 +750,0 @@\n-#endif \/\/__UNUMBERFORMATTER_H__\n@@ -714,0 +751,1 @@\n+#endif \/\/__UNUMBERFORMATTER_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/unumberformatter.h","additions":99,"deletions":61,"binary":false,"changes":160,"status":"modified"},{"patch":"@@ -0,0 +1,477 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#ifndef __UNUMBERRANGEFORMATTER_H__\n+#define __UNUMBERRANGEFORMATTER_H__\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"unicode\/parseerr.h\"\n+#include \"unicode\/ufieldpositer.h\"\n+#include \"unicode\/umisc.h\"\n+#include \"unicode\/uformattedvalue.h\"\n+#include \"unicode\/uformattable.h\"\n+\n+\n+\/**\n+ * \\file\n+ * \\brief C-compatible API for localized number range formatting.\n+ *\n+ * This is the C-compatible version of the NumberRangeFormatter API. C++ users\n+ * should include unicode\/numberrangeformatter.h and use the proper C++ APIs.\n+ *\n+ * First create a UNumberRangeFormatter, which is immutable, and then format to\n+ * a UFormattedNumberRange.\n+ *\n+ * Example code:\n+ * <pre>\n+ * \/\/ Setup:\n+ * UErrorCode ec = U_ZERO_ERROR;\n+ * UNumberRangeFormatter* uformatter = unumrf_openForSkeletonCollapseIdentityFallbackAndLocaleWithError(\n+ *     u\"currency\/USD precision-integer\",\n+ *     -1,\n+ *     UNUM_RANGE_COLLAPSE_AUTO,\n+ *     UNUM_IDENTITY_FALLBACK_APPROXIMATELY,\n+ *     \"en-US\",\n+ *     NULL,\n+ *     &ec);\n+ * UFormattedNumberRange* uresult = unumrf_openResult(&ec);\n+ * if (U_FAILURE(ec)) { return; }\n+ *\n+ * \/\/ Format a double range:\n+ * unumrf_formatDoubleRange(uformatter, 3.0, 5.0, uresult, &ec);\n+ * if (U_FAILURE(ec)) { return; }\n+ *\n+ * \/\/ Get the result string:\n+ * int32_t len;\n+ * const UChar* str = ufmtval_getString(unumrf_resultAsValue(uresult, &ec), &len, &ec);\n+ * if (U_FAILURE(ec)) { return; }\n+ * \/\/ str should equal \"$3 – $5\"\n+ *\n+ * \/\/ Cleanup:\n+ * unumf_close(uformatter);\n+ * unumf_closeResult(uresult);\n+ * <\/pre>\n+ *\n+ * If you are a C++ user linking against the C libraries, you can use the LocalPointer versions of these\n+ * APIs. The following example uses LocalPointer with the decimal number and field position APIs:\n+ *\n+ * <pre>\n+ * \/\/ Setup:\n+ * LocalUNumberRangeFormatterPointer uformatter(\n+ *     unumrf_openForSkeletonCollapseIdentityFallbackAndLocaleWithError(...));\n+ * LocalUFormattedNumberRangePointer uresult(unumrf_openResult(&ec));\n+ * if (U_FAILURE(ec)) { return; }\n+ *\n+ * \/\/ Format a double number range:\n+ * unumrf_formatDoubleRange(uformatter.getAlias(), 3.0, 5.0, uresult.getAlias(), &ec);\n+ * if (U_FAILURE(ec)) { return; }\n+ *\n+ * \/\/ No need to do any cleanup since we are using LocalPointer.\n+ * <\/pre>\n+ *\n+ * You can also get field positions. For more information, see uformattedvalue.h.\n+ *\/\n+\n+\/**\n+ * Defines how to merge fields that are identical across the range sign.\n+ *\n+ * @stable ICU 63\n+ *\/\n+typedef enum UNumberRangeCollapse {\n+    \/**\n+     * Use locale data and heuristics to determine how much of the string to collapse. Could end up collapsing none,\n+     * some, or all repeated pieces in a locale-sensitive way.\n+     *\n+     * The heuristics used for this option are subject to change over time.\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_RANGE_COLLAPSE_AUTO,\n+\n+    \/**\n+     * Do not collapse any part of the number. Example: \"3.2 thousand kilograms – 5.3 thousand kilograms\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_RANGE_COLLAPSE_NONE,\n+\n+    \/**\n+     * Collapse the unit part of the number, but not the notation, if present. Example: \"3.2 thousand – 5.3 thousand\n+     * kilograms\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_RANGE_COLLAPSE_UNIT,\n+\n+    \/**\n+     * Collapse any field that is equal across the range sign. May introduce ambiguity on the magnitude of the\n+     * number. Example: \"3.2 – 5.3 thousand kilograms\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_RANGE_COLLAPSE_ALL\n+} UNumberRangeCollapse;\n+\n+\/**\n+ * Defines the behavior when the two numbers in the range are identical after rounding. To programmatically detect\n+ * when the identity fallback is used, compare the lower and upper BigDecimals via FormattedNumber.\n+ *\n+ * @stable ICU 63\n+ * @see NumberRangeFormatter\n+ *\/\n+typedef enum UNumberRangeIdentityFallback {\n+    \/**\n+     * Show the number as a single value rather than a range. Example: \"$5\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_IDENTITY_FALLBACK_SINGLE_VALUE,\n+\n+    \/**\n+     * Show the number using a locale-sensitive approximation pattern. If the numbers were the same before rounding,\n+     * show the single value. Example: \"~$5\" or \"$5\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_IDENTITY_FALLBACK_APPROXIMATELY_OR_SINGLE_VALUE,\n+\n+    \/**\n+     * Show the number using a locale-sensitive approximation pattern. Use the range pattern always, even if the\n+     * inputs are the same. Example: \"~$5\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_IDENTITY_FALLBACK_APPROXIMATELY,\n+\n+    \/**\n+     * Show the number as the range of two equal values. Use the range pattern always, even if the inputs are the\n+     * same. Example (with RangeCollapse.NONE): \"$5 – $5\"\n+     *\n+     * @stable ICU 63\n+     *\/\n+    UNUM_IDENTITY_FALLBACK_RANGE\n+} UNumberRangeIdentityFallback;\n+\n+\/**\n+ * Used in the result class FormattedNumberRange to indicate to the user whether the numbers formatted in the range\n+ * were equal or not, and whether or not the identity fallback was applied.\n+ *\n+ * @stable ICU 63\n+ * @see NumberRangeFormatter\n+ *\/\n+typedef enum UNumberRangeIdentityResult {\n+    \/**\n+     * Used to indicate that the two numbers in the range were equal, even before any rounding rules were applied.\n+     *\n+     * @stable ICU 63\n+     * @see NumberRangeFormatter\n+     *\/\n+    UNUM_IDENTITY_RESULT_EQUAL_BEFORE_ROUNDING,\n+\n+    \/**\n+     * Used to indicate that the two numbers in the range were equal, but only after rounding rules were applied.\n+     *\n+     * @stable ICU 63\n+     * @see NumberRangeFormatter\n+     *\/\n+    UNUM_IDENTITY_RESULT_EQUAL_AFTER_ROUNDING,\n+\n+    \/**\n+     * Used to indicate that the two numbers in the range were not equal, even after rounding rules were applied.\n+     *\n+     * @stable ICU 63\n+     * @see NumberRangeFormatter\n+     *\/\n+    UNUM_IDENTITY_RESULT_NOT_EQUAL,\n+\n+#ifndef U_HIDE_INTERNAL_API\n+    \/**\n+     * The number of entries in this enum.\n+     * @internal\n+     *\/\n+    UNUM_IDENTITY_RESULT_COUNT\n+#endif\n+\n+} UNumberRangeIdentityResult;\n+\n+\n+#ifndef U_HIDE_DRAFT_API\n+\n+struct UNumberRangeFormatter;\n+\/**\n+ * C-compatible version of icu::number::LocalizedNumberRangeFormatter.\n+ *\n+ * NOTE: This is a C-compatible API; C++ users should build against numberrangeformatter.h instead.\n+ *\n+ * @draft ICU 68\n+ *\/\n+typedef struct UNumberRangeFormatter UNumberRangeFormatter;\n+\n+\n+struct UFormattedNumberRange;\n+\/**\n+ * C-compatible version of icu::number::FormattedNumberRange.\n+ *\n+ * NOTE: This is a C-compatible API; C++ users should build against numberrangeformatter.h instead.\n+ *\n+ * @draft ICU 68\n+ *\/\n+typedef struct UFormattedNumberRange UFormattedNumberRange;\n+\n+\n+\/**\n+ * Creates a new UNumberFormatter for the given skeleton string, collapse option, identity fallback\n+ * option, and locale. This is currently the only method for creating a new UNumberRangeFormatter.\n+ *\n+ * Objects of type UNumberRangeFormatter returned by this method are threadsafe.\n+ *\n+ * For more details on skeleton strings, see the documentation in numberrangeformatter.h. For more\n+ * details on the usage of this API, see the documentation at the top of unumberrangeformatter.h.\n+ *\n+ * NOTE: This is a C-compatible API; C++ users should build against numberrangeformatter.h instead.\n+ *\n+ * @param skeleton The skeleton string, like u\"percent precision-integer\"\n+ * @param skeletonLen The number of UChars in the skeleton string, or -1 if it is NUL-terminated.\n+ * @param collapse Option for how to merge affixes (if unsure, use UNUM_RANGE_COLLAPSE_AUTO)\n+ * @param identityFallback Option for resolving when both sides of the range are equal.\n+ * @param locale The NUL-terminated locale ID.\n+ * @param perror A parse error struct populated if an error occurs when parsing. Can be NULL.\n+ *               If no error occurs, perror->offset will be set to -1.\n+ * @param ec Set if an error occurs.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI UNumberRangeFormatter* U_EXPORT2\n+unumrf_openForSkeletonWithCollapseAndIdentityFallback(\n+    const UChar* skeleton,\n+    int32_t skeletonLen,\n+    UNumberRangeCollapse collapse,\n+    UNumberRangeIdentityFallback identityFallback,\n+    const char* locale,\n+    UParseError* perror,\n+    UErrorCode* ec);\n+\n+\n+\/**\n+ * Creates an object to hold the result of a UNumberRangeFormatter\n+ * operation. The object can be used repeatedly; it is cleared whenever\n+ * passed to a format function.\n+ *\n+ * @param ec Set if an error occurs.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI UFormattedNumberRange* U_EXPORT2\n+unumrf_openResult(UErrorCode* ec);\n+\n+\n+\/**\n+ * Uses a UNumberRangeFormatter to format a range of doubles.\n+ *\n+ * The UNumberRangeFormatter can be shared between threads. Each thread should have its own local\n+ * UFormattedNumberRange, however, for storing the result of the formatting operation.\n+ *\n+ * NOTE: This is a C-compatible API; C++ users should build against numberrangeformatter.h instead.\n+ *\n+ * @param uformatter A formatter object; see unumberrangeformatter.h.\n+ * @param first The first (usually smaller) number in the range.\n+ * @param second The second (usually larger) number in the range.\n+ * @param uresult The object that will be mutated to store the result; see unumrf_openResult.\n+ * @param ec Set if an error occurs.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI void U_EXPORT2\n+unumrf_formatDoubleRange(\n+    const UNumberRangeFormatter* uformatter,\n+    double first,\n+    double second,\n+    UFormattedNumberRange* uresult,\n+    UErrorCode* ec);\n+\n+\n+\/**\n+ * Uses a UNumberRangeFormatter to format a range of decimal numbers.\n+ *\n+ * With a decimal number string, you can specify an input with arbitrary precision.\n+ *\n+ * The UNumberRangeFormatter can be shared between threads. Each thread should have its own local\n+ * UFormattedNumberRange, however, for storing the result of the formatting operation.\n+ *\n+ * NOTE: This is a C-compatible API; C++ users should build against numberrangeformatter.h instead.\n+ *\n+ * @param uformatter A formatter object; see unumberrangeformatter.h.\n+ * @param first The first (usually smaller) number in the range.\n+ * @param firstLen The length of the first decimal number string.\n+ * @param second The second (usually larger) number in the range.\n+ * @param secondLen The length of the second decimal number string.\n+ * @param uresult The object that will be mutated to store the result; see unumrf_openResult.\n+ * @param ec Set if an error occurs.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI void U_EXPORT2\n+unumrf_formatDecimalRange(\n+    const UNumberRangeFormatter* uformatter,\n+    const char* first,\n+    int32_t firstLen,\n+    const char* second,\n+    int32_t secondLen,\n+    UFormattedNumberRange* uresult,\n+    UErrorCode* ec);\n+\n+\n+\/**\n+ * Returns a representation of a UFormattedNumberRange as a UFormattedValue,\n+ * which can be subsequently passed to any API requiring that type.\n+ *\n+ * The returned object is owned by the UFormattedNumberRange and is valid\n+ * only as long as the UFormattedNumber is present and unchanged in memory.\n+ *\n+ * You can think of this method as a cast between types.\n+ *\n+ * @param uresult The object containing the formatted number range.\n+ * @param ec Set if an error occurs.\n+ * @return A UFormattedValue owned by the input object.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI const UFormattedValue* U_EXPORT2\n+unumrf_resultAsValue(const UFormattedNumberRange* uresult, UErrorCode* ec);\n+\n+\n+\/**\n+ * Extracts the identity result from a UFormattedNumberRange.\n+ *\n+ * NOTE: This is a C-compatible API; C++ users should build against numberformatter.h instead.\n+ *\n+ * @param uresult The object containing the formatted number range.\n+ * @param ec Set if an error occurs.\n+ * @return The identity result; see UNumberRangeIdentityResult.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI UNumberRangeIdentityResult U_EXPORT2\n+unumrf_resultGetIdentityResult(\n+    const UFormattedNumberRange* uresult,\n+    UErrorCode* ec);\n+\n+\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Extracts the first formatted number as a decimal number. This endpoint\n+ * is useful for obtaining the exact number being printed after scaling\n+ * and rounding have been applied by the number range formatting pipeline.\n+ *\n+ * The syntax of the unformatted number is a \"numeric string\"\n+ * as defined in the Decimal Arithmetic Specification, available at\n+ * http:\/\/speleotrove.com\/decimal\n+ *\n+ * @param  uresult       The input object containing the formatted number range.\n+ * @param  dest          the 8-bit char buffer into which the decimal number is placed\n+ * @param  destCapacity  The size, in chars, of the destination buffer.  May be zero\n+ *                       for precomputing the required size.\n+ * @param  ec            receives any error status.\n+ *                       If U_BUFFER_OVERFLOW_ERROR: Returns number of chars for\n+ *                       preflighting.\n+ * @return Number of chars in the data.  Does not include a trailing NUL.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+unumrf_resultGetFirstDecimalNumber(\n+    const UFormattedNumberRange* uresult,\n+    char* dest,\n+    int32_t destCapacity,\n+    UErrorCode* ec);\n+\n+\n+\/**\n+ * Extracts the second formatted number as a decimal number. This endpoint\n+ * is useful for obtaining the exact number being printed after scaling\n+ * and rounding have been applied by the number range formatting pipeline.\n+ *\n+ * The syntax of the unformatted number is a \"numeric string\"\n+ * as defined in the Decimal Arithmetic Specification, available at\n+ * http:\/\/speleotrove.com\/decimal\n+ *\n+ * @param  uresult       The input object containing the formatted number range.\n+ * @param  dest          the 8-bit char buffer into which the decimal number is placed\n+ * @param  destCapacity  The size, in chars, of the destination buffer.  May be zero\n+ *                       for precomputing the required size.\n+ * @param  ec            receives any error status.\n+ *                       If U_BUFFER_OVERFLOW_ERROR: Returns number of chars for\n+ *                       preflighting.\n+ * @return Number of chars in the data.  Does not include a trailing NUL.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+unumrf_resultGetSecondDecimalNumber(\n+    const UFormattedNumberRange* uresult,\n+    char* dest,\n+    int32_t destCapacity,\n+    UErrorCode* ec);\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n+\n+\/**\n+ * Releases the UNumberFormatter created by unumf_openForSkeletonAndLocale().\n+ *\n+ * @param uformatter An object created by unumf_openForSkeletonAndLocale().\n+ * @draft ICU 68\n+ *\/\n+U_CAPI void U_EXPORT2\n+unumrf_close(UNumberRangeFormatter* uformatter);\n+\n+\n+\/**\n+ * Releases the UFormattedNumber created by unumf_openResult().\n+ *\n+ * @param uresult An object created by unumf_openResult().\n+ * @draft ICU 68\n+ *\/\n+U_CAPI void U_EXPORT2\n+unumrf_closeResult(UFormattedNumberRange* uresult);\n+\n+\n+#if U_SHOW_CPLUSPLUS_API\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * \\class LocalUNumberRangeFormatterPointer\n+ * \"Smart pointer\" class; closes a UNumberFormatter via unumf_close().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * Usage:\n+ * <pre>\n+ * LocalUNumberRangeFormatterPointer uformatter(\n+ *     unumrf_openForSkeletonCollapseIdentityFallbackAndLocaleWithError(...));\n+ * \/\/ no need to explicitly call unumrf_close()\n+ * <\/pre>\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @draft ICU 68\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUNumberRangeFormatterPointer, UNumberRangeFormatter, unumrf_close);\n+\n+\/**\n+ * \\class LocalUFormattedNumberPointer\n+ * \"Smart pointer\" class; closes a UFormattedNumber via unumf_closeResult().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * Usage:\n+ * <pre>\n+ * LocalUFormattedNumberRangePointer uresult(unumrf_openResult(...));\n+ * \/\/ no need to explicitly call unumrf_closeResult()\n+ * <\/pre>\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @draft ICU 68\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUFormattedNumberRangePointer, UFormattedNumberRange, unumrf_closeResult);\n+\n+U_NAMESPACE_END\n+#endif \/\/ U_SHOW_CPLUSPLUS_API\n+\n+#endif \/\/ U_HIDE_DRAFT_API\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n+#endif \/\/__UNUMBERRANGEFORMATTER_H__\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/unumberrangeformatter.h","additions":477,"deletions":0,"binary":false,"changes":477,"status":"added"},{"patch":"@@ -18,0 +18,2 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n@@ -19,0 +21,1 @@\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n@@ -57,1 +60,1 @@\n-U_STABLE UNumberingSystem * U_EXPORT2\n+U_CAPI UNumberingSystem * U_EXPORT2\n@@ -78,1 +81,1 @@\n-U_STABLE UNumberingSystem * U_EXPORT2\n+U_CAPI UNumberingSystem * U_EXPORT2\n@@ -86,1 +89,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -114,1 +117,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -126,1 +129,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -133,1 +136,1 @@\n- * @return          TRUE if the specified UNumberingSystem object is for an algorithmic\n+ * @return          true if the specified UNumberingSystem object is for an algorithmic\n@@ -137,1 +140,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -148,1 +151,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -167,1 +170,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/unumsys.h","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -17,1 +17,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -19,0 +18,5 @@\n+\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -25,0 +29,1 @@\n+struct UFormattedNumberRange;\n@@ -155,1 +160,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -167,1 +171,1 @@\n- *         applies to number.\n+ *         applies to the number.\n@@ -171,1 +175,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -178,1 +182,23 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n+\n+#ifndef U_HIDE_DRAFT_API\n+\/**\n+ * Given a formatted number range, returns the overall plural form of the\n+ * range. For example, \"3-5\" returns \"other\" in English.\n+ *\n+ * To get a UFormattedNumberRange, see UNumberRangeFormatter.\n+ *\n+ * @param uplrules The UPluralRules object specifying the rules.\n+ * @param urange The number range onto which the rules will be applied.\n+ * @param keyword The destination buffer for the keyword of the rule that\n+ *         applies to the number range.\n+ * @param capacity The capacity of the keyword buffer.\n+ * @param status A pointer to a UErrorCode to receive any errors.\n+ * @return The length of the keyword.\n+ * @draft ICU 68\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+uplrules_selectForRange(const UPluralRules *uplrules,\n+               const struct UFormattedNumberRange* urange,\n+               UChar *keyword, int32_t capacity,\n+               UErrorCode *status);\n+#endif \/\/ U_HIDE_DRAFT_API\n@@ -199,1 +225,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -218,1 +244,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/upluralrules.h","additions":33,"deletions":7,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -36,0 +35,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -134,1 +137,1 @@\n-U_STABLE URegularExpression * U_EXPORT2\n+U_CAPI URegularExpression * U_EXPORT2\n@@ -164,1 +167,1 @@\n-U_STABLE URegularExpression *  U_EXPORT2\n+U_CAPI URegularExpression *  U_EXPORT2\n@@ -194,1 +197,1 @@\n-U_STABLE URegularExpression * U_EXPORT2\n+U_CAPI URegularExpression * U_EXPORT2\n@@ -210,1 +213,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -250,1 +253,1 @@\n-U_STABLE URegularExpression * U_EXPORT2\n+U_CAPI URegularExpression * U_EXPORT2\n@@ -270,1 +273,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -286,1 +289,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -298,1 +301,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -323,1 +326,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -346,1 +349,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -371,1 +374,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -392,1 +395,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -422,1 +425,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -444,1 +447,1 @@\n-  *    @return             TRUE if there is a match\n+  *    @return             true if there is a match\n@@ -447,1 +450,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -470,1 +473,1 @@\n-  *    @return             TRUE if there is a match\n+  *    @return             true if there is a match\n@@ -473,1 +476,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -498,1 +501,1 @@\n-  *    @return  TRUE if there is a match.\n+  *    @return  true if there is a match.\n@@ -501,1 +504,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -527,1 +530,1 @@\n-  *    @return  TRUE if there is a match.\n+  *    @return  true if there is a match.\n@@ -530,1 +533,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -551,1 +554,1 @@\n-  *   @return              TRUE if a match is found.\n+  *   @return              true if a match is found.\n@@ -554,1 +557,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -576,1 +579,1 @@\n-  *   @return              TRUE if a match is found.\n+  *   @return              true if a match is found.\n@@ -579,1 +582,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -593,1 +596,1 @@\n-  *  @return              TRUE if a match is found.\n+  *  @return              true if a match is found.\n@@ -597,1 +600,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -608,1 +611,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -628,1 +631,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -652,1 +655,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -674,1 +677,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -703,1 +706,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -724,1 +727,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -744,1 +747,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -762,1 +765,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -781,1 +784,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -799,1 +802,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -818,1 +821,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -843,1 +846,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -870,1 +873,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -890,1 +893,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -906,1 +909,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -920,1 +923,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -934,1 +937,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -949,1 +952,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -960,1 +963,1 @@\n-  * @return TRUE if this matcher is using opaque bounds, false if it is not.\n+  * @return true if this matcher is using opaque bounds, false if it is not.\n@@ -963,1 +966,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -970,2 +973,2 @@\n-  * Invoking this function with an argument of TRUE will set matches to use transparent bounds.\n-  * If the boolean argument is FALSE, then opaque bounds will be used.\n+  * Invoking this function with an argument of true will set matches to use transparent bounds.\n+  * If the boolean argument is false, then opaque bounds will be used.\n@@ -983,1 +986,1 @@\n-  * @param   b      TRUE for transparent bounds; FALSE for opaque bounds\n+  * @param   b      true for transparent bounds; false for opaque bounds\n@@ -987,1 +990,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -999,1 +1002,1 @@\n-  * @return TRUE if this matcher is using anchoring bounds.\n+  * @return true if this matcher is using anchoring bounds.\n@@ -1002,1 +1005,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1016,1 +1019,1 @@\n-  * @param b      TRUE if to enable anchoring bounds; FALSE to disable them.\n+  * @param b      true if to enable anchoring bounds; false to disable them.\n@@ -1020,1 +1023,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1026,1 +1029,1 @@\n-  * Return TRUE if the most recent matching operation touched the\n+  * Return true if the most recent matching operation touched the\n@@ -1032,1 +1035,1 @@\n-  *  @return  TRUE if the most recent match hit the end of input\n+  *  @return  true if the most recent match hit the end of input\n@@ -1035,1 +1038,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1040,1 +1043,1 @@\n-  * Return TRUE the most recent match succeeded and additional input could cause\n+  * Return true the most recent match succeeded and additional input could cause\n@@ -1047,1 +1050,1 @@\n-  * @return TRUE  if more input could cause the most recent match to no longer match.\n+  * @return true  if more input could cause the most recent match to no longer match.\n@@ -1050,1 +1053,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -1082,1 +1085,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1111,1 +1114,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -1141,1 +1144,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1170,1 +1173,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -1222,1 +1225,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1252,1 +1255,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1282,1 +1285,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1306,1 +1309,1 @@\n-U_STABLE UText * U_EXPORT2\n+U_CAPI UText * U_EXPORT2\n@@ -1362,1 +1365,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1397,1 +1400,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1425,1 +1428,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1439,1 +1442,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1463,1 +1466,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1475,1 +1478,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1483,1 +1486,1 @@\n- * operations.  If the call back function returns FALSE, the matching\n+ * operations.  If the call back function returns false, the matching\n@@ -1494,2 +1497,2 @@\n- * @return         TRUE to continue the matching operation.\n- *                 FALSE to terminate the matching operation.\n+ * @return         true to continue the matching operation.\n+ *                 false to terminate the matching operation.\n@@ -1518,1 +1521,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1536,1 +1539,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1557,1 +1560,1 @@\n- * If the call back function returns FALSE, the find operation will be terminated early.\n+ * If the call back function returns false, the find operation will be terminated early.\n@@ -1568,2 +1571,2 @@\n- * @return         TRUE to continue the matching operation.\n- *                 FALSE to terminate the matching operation.\n+ * @return         true to continue the matching operation.\n+ *                 false to terminate the matching operation.\n@@ -1590,1 +1593,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1607,1 +1610,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/uregex.h","additions":89,"deletions":86,"binary":false,"changes":175,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-U_STABLE const URegion* U_EXPORT2\n+U_CAPI const URegion* U_EXPORT2\n@@ -144,1 +144,1 @@\n-U_STABLE const URegion* U_EXPORT2\n+U_CAPI const URegion* U_EXPORT2\n@@ -152,1 +152,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -159,1 +159,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -168,1 +168,1 @@\n-U_STABLE const URegion* U_EXPORT2\n+U_CAPI const URegion* U_EXPORT2\n@@ -180,1 +180,1 @@\n-U_STABLE const URegion* U_EXPORT2\n+U_CAPI const URegion* U_EXPORT2\n@@ -193,1 +193,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -205,1 +205,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -213,1 +213,1 @@\n-U_STABLE UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -224,1 +224,1 @@\n-U_STABLE UEnumeration* U_EXPORT2\n+U_CAPI UEnumeration* U_EXPORT2\n@@ -231,1 +231,1 @@\n-U_STABLE const char* U_EXPORT2\n+U_CAPI const char* U_EXPORT2\n@@ -239,1 +239,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -246,1 +246,1 @@\n-U_STABLE URegionType U_EXPORT2\n+U_CAPI URegionType U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/uregion.h","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -22,0 +21,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -178,1 +181,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -182,1 +184,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -187,1 +189,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -192,1 +194,1 @@\n-     * @draft ICU 64\n+     * @stable ICU 64\n@@ -196,1 +198,0 @@\n-#endif \/\/ U_HIDE_DRAFT_API\n@@ -239,1 +240,1 @@\n-U_STABLE URelativeDateTimeFormatter* U_EXPORT2\n+U_CAPI URelativeDateTimeFormatter* U_EXPORT2\n@@ -252,1 +253,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -255,1 +256,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -259,1 +259,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -270,1 +270,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -272,1 +272,1 @@\n-U_DRAFT UFormattedRelativeDateTime* U_EXPORT2\n+U_CAPI UFormattedRelativeDateTime* U_EXPORT2\n@@ -287,1 +287,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -289,1 +289,1 @@\n-U_DRAFT const UFormattedValue* U_EXPORT2\n+U_CAPI const UFormattedValue* U_EXPORT2\n@@ -296,1 +296,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -298,1 +298,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -300,1 +300,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -318,1 +317,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -326,1 +324,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -329,1 +327,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -363,1 +360,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -371,1 +368,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -393,1 +389,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -395,1 +391,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -402,1 +398,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -432,1 +427,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -440,1 +435,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -465,1 +459,1 @@\n- * @draft ICU 64\n+ * @stable ICU 64\n@@ -467,1 +461,1 @@\n-U_DRAFT void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -474,1 +468,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -505,1 +498,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/ureldatefmt.h","additions":24,"deletions":31,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -18,1 +18,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -23,0 +22,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -27,3 +30,3 @@\n- * C Apis for an engine that provides language-sensitive text searching based\n- * on the comparison rules defined in a <tt>UCollator<\/tt> data struct,\n- * see <tt>ucol.h<\/tt>. This ensures that language eccentricity can be\n+ * C APIs for an engine that provides language-sensitive text searching based\n+ * on the comparison rules defined in a <code>UCollator<\/code> data struct,\n+ * see <code>ucol.h<\/code>. This ensures that language eccentricity can be\n@@ -57,2 +60,2 @@\n- * such as the break iterators in <tt>ubrk.h<\/tt>. Using these\n- * APIs, it is easy to scan through text looking for all occurances of\n+ * such as the break iterators in <code>ubrk.h<\/code>. Using these\n+ * APIs, it is easy to scan through text looking for all occurrences of\n@@ -60,2 +63,2 @@\n- * calling a <tt>reset<\/tt> followed by a <tt>next<\/tt> or <tt>previous<\/tt>.\n- * Though a direction change can occur without calling <tt>reset<\/tt> first,\n+ * calling a <code>reset<\/code> followed by a <code>next<\/code> or <code>previous<\/code>.\n+ * Though a direction change can occur without calling <code>reset<\/code> first,\n@@ -66,3 +69,3 @@\n- * <tt>usearch.h<\/tt> provides APIs to specify the starting position\n- * within the text string to be searched, e.g. <tt>usearch_setOffset<\/tt>,\n- * <tt>usearch_preceding<\/tt> and <tt>usearch_following<\/tt>. Since the\n+ * <code>usearch.h<\/code> provides APIs to specify the starting position\n+ * within the text string to be searched, e.g. <code>usearch_setOffset<\/code>,\n+ * <code>usearch_preceding<\/code> and <code>usearch_following<\/code>. Since the\n@@ -104,1 +107,1 @@\n- * from <tt>usearch_getCollator<\/tt> and using the APIs in <tt>ucol.h<\/tt>.\n+ * from <code>usearch_getCollator<\/code> and using the APIs in <code>ucol.h<\/code>.\n@@ -133,1 +136,1 @@\n- *                                        usearch_getMatchLength(search));\n+ *                                        usearch_getMatchedLength(search));\n@@ -280,1 +283,1 @@\n-* Creating a search iterator data struct using the argument locale language\n+* Creates a String Search iterator data struct using the argument locale language\n@@ -282,1 +285,5 @@\n-* this search and will be deleted in <tt>usearch_close<\/tt>.\n+* this String Search and will be deleted in <code>usearch_close<\/code>.\n+*\n+* The UStringSearch retains a pointer to both the pattern and text strings.\n+* The caller must not modify or delete them while using the UStringSearch.\n+*\n@@ -291,1 +298,1 @@\n-*                  determined by the <tt>BreakIterator<\/tt>, the match will\n+*                  determined by the <code>BreakIterator<\/code>, the match will\n@@ -293,1 +300,1 @@\n-*                  If this parameter is <tt>NULL<\/tt>, no break detection is\n+*                  If this parameter is <code>NULL<\/code>, no break detection is\n@@ -301,1 +308,1 @@\n-U_STABLE UStringSearch * U_EXPORT2 usearch_open(const UChar          *pattern,\n+U_CAPI UStringSearch * U_EXPORT2 usearch_open(const UChar    *pattern,\n@@ -310,1 +317,1 @@\n-* Creating a search iterator data struct using the argument collator language\n+* Creates a String Search iterator data struct using the argument collator language\n@@ -313,2 +320,7 @@\n-* NOTE: string search cannot be instantiated from a collator that has\n-* collate digits as numbers (CODAN) turned on.\n+\n+* NOTE: String Search cannot be instantiated from a collator that has\n+* collate digits as numbers (CODAN) turned on (UCOL_NUMERIC_COLLATION).\n+*\n+* The UStringSearch retains a pointer to both the pattern and text strings.\n+* The caller must not modify or delete them while using the UStringSearch.\n+*\n@@ -323,1 +335,1 @@\n-*                  determined by the <tt>BreakIterator<\/tt>, the match will\n+*                  determined by the <code>BreakIterator<\/code>, the match will\n@@ -325,1 +337,1 @@\n-*                  If this parameter is <tt>NULL<\/tt>, no break detection is\n+*                  If this parameter is <code>NULL<\/code>, no break detection is\n@@ -333,2 +345,2 @@\n-U_STABLE UStringSearch * U_EXPORT2 usearch_openFromCollator(\n-                                         const UChar *pattern,\n+U_CAPI UStringSearch * U_EXPORT2 usearch_openFromCollator(\n+                                         const UChar          *pattern,\n@@ -343,6 +355,6 @@\n-* Destroying and cleaning up the search iterator data struct.\n-* If a collator is created in <tt>usearch_open<\/tt>, it will be destroyed here.\n-* @param searchiter data struct to clean up\n-* @stable ICU 2.4\n-*\/\n-U_STABLE void U_EXPORT2 usearch_close(UStringSearch *searchiter);\n+ * Destroys and cleans up the String Search iterator data struct.\n+ * If a collator was created in <code>usearch_open<\/code>, then it will be destroyed here.\n+ * @param searchiter The UStringSearch to clean up\n+ * @stable ICU 2.4\n+ *\/\n+U_CAPI void U_EXPORT2 usearch_close(UStringSearch *searchiter);\n@@ -386,2 +398,2 @@\n-U_STABLE void U_EXPORT2 usearch_setOffset(UStringSearch *strsrch,\n-                                        int32_t    position,\n+U_CAPI void U_EXPORT2 usearch_setOffset(UStringSearch *strsrch,\n+                                        int32_t        position,\n@@ -393,1 +405,1 @@\n-* for a backwards search), <tt>USEARCH_DONE<\/tt> is returned.\n+* for a backwards search), <code>USEARCH_DONE<\/code> is returned.\n@@ -398,1 +410,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_getOffset(const UStringSearch *strsrch);\n+U_CAPI int32_t U_EXPORT2 usearch_getOffset(const UStringSearch *strsrch);\n@@ -403,1 +415,1 @@\n-* <tt>USEARCH_DEFAULT<\/tt> can be used for all attributes for resetting.\n+* <code>USEARCH_DEFAULT<\/code> can be used for all attributes for resetting.\n@@ -411,1 +423,1 @@\n-U_STABLE void U_EXPORT2 usearch_setAttribute(UStringSearch         *strsrch,\n+U_CAPI void U_EXPORT2 usearch_setAttribute(UStringSearch         *strsrch,\n@@ -424,1 +436,1 @@\n-U_STABLE USearchAttributeValue U_EXPORT2 usearch_getAttribute(\n+U_CAPI USearchAttributeValue U_EXPORT2 usearch_getAttribute(\n@@ -431,2 +443,2 @@\n-* <tt>usearch_first<\/tt>, <tt>usearch_next<\/tt>, <tt>usearch_previous<\/tt>,\n-* or <tt>usearch_last<\/tt>.\n+* <code>usearch_first<\/code>, <code>usearch_next<\/code>, <code>usearch_previous<\/code>,\n+* or <code>usearch_last<\/code>.\n@@ -434,1 +446,1 @@\n-* <tt>USEARCH_DONE<\/tt>, this method will return <tt>USEARCH_DONE<\/tt>.\n+* <code>USEARCH_DONE<\/code>, this method will return <code>USEARCH_DONE<\/code>.\n@@ -436,1 +448,1 @@\n-* Use <tt>usearch_getMatchedLength<\/tt> to get the matched string length.\n+* Use <code>usearch_getMatchedLength<\/code> to get the matched string length.\n@@ -447,1 +459,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_getMatchedStart(\n+U_CAPI int32_t U_EXPORT2 usearch_getMatchedStart(\n@@ -453,2 +465,2 @@\n-* <tt>usearch_first<\/tt>, <tt>usearch_next<\/tt>, <tt>usearch_previous<\/tt>,\n-* or <tt>usearch_last<\/tt>.\n+* <code>usearch_first<\/code>, <code>usearch_next<\/code>, <code>usearch_previous<\/code>,\n+* or <code>usearch_last<\/code>.\n@@ -456,1 +468,1 @@\n-* <tt>USEARCH_DONE<\/tt>, this method will return 0.\n+* <code>USEARCH_DONE<\/code>, this method will return 0.\n@@ -467,1 +479,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_getMatchedLength(\n+U_CAPI int32_t U_EXPORT2 usearch_getMatchedLength(\n@@ -472,2 +484,2 @@\n-* <tt>usearch_first<\/tt>, <tt>usearch_next<\/tt>, <tt>usearch_previous<\/tt>,\n-* or <tt>usearch_last<\/tt>.\n+* <code>usearch_first<\/code>, <code>usearch_next<\/code>, <code>usearch_previous<\/code>,\n+* or <code>usearch_last<\/code>.\n@@ -475,1 +487,1 @@\n-* construction or after <tt>USEARCH_DONE<\/tt> has been returned, returns\n+* construction or after <code>USEARCH_DONE<\/code> has been returned, returns\n@@ -482,1 +494,1 @@\n-* <tt>usearch_getMatchLength<\/tt>.\n+* <code>usearch_getMatchedLength<\/code>.\n@@ -495,1 +507,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_getMatchedText(const UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_getMatchedText(const UStringSearch *strsrch,\n@@ -509,1 +521,1 @@\n-*                  determined by the <tt>BreakIterator<\/tt>, the match will\n+*                  determined by the <code>BreakIterator<\/code>, the match will\n@@ -511,1 +523,1 @@\n-*                  If this parameter is <tt>NULL<\/tt>, no break detection is\n+*                  If this parameter is <code>NULL<\/code>, no break detection is\n@@ -517,1 +529,1 @@\n-U_STABLE void U_EXPORT2 usearch_setBreakIterator(UStringSearch  *strsrch,\n+U_CAPI void U_EXPORT2 usearch_setBreakIterator(UStringSearch  *strsrch,\n@@ -524,2 +536,2 @@\n-* constructor or to <tt>usearch_setBreakIterator<\/tt>. Note that\n-* <tt>NULL<\/tt>\n+* constructor or to <code>usearch_setBreakIterator<\/code>. Note that\n+* <code>NULL<\/code>\n@@ -532,1 +544,1 @@\n-U_STABLE const UBreakIterator * U_EXPORT2 usearch_getBreakIterator(\n+U_CAPI const UBreakIterator * U_EXPORT2 usearch_getBreakIterator(\n@@ -541,0 +553,4 @@\n+*\n+* The UStringSearch retains a pointer to the text string. The caller must not\n+* modify or delete the string while using the UStringSearch.\n+*\n@@ -550,1 +566,1 @@\n-U_STABLE void U_EXPORT2 usearch_setText(      UStringSearch *strsrch,\n+U_CAPI void U_EXPORT2 usearch_setText(      UStringSearch *strsrch,\n@@ -563,1 +579,1 @@\n-U_STABLE const UChar * U_EXPORT2 usearch_getText(const UStringSearch *strsrch,\n+U_CAPI const UChar * U_EXPORT2 usearch_getText(const UStringSearch *strsrch,\n@@ -569,3 +585,3 @@\n-* Deleting the returned <tt>UCollator<\/tt> before calling\n-* <tt>usearch_close<\/tt> would cause the string search to fail.\n-* <tt>usearch_close<\/tt> will delete the collator if this search owns it.\n+* Deleting the returned <code>UCollator<\/code> before calling\n+* <code>usearch_close<\/code> would cause the string search to fail.\n+* <code>usearch_close<\/code> will delete the collator if this search owns it.\n@@ -576,1 +592,1 @@\n-U_STABLE UCollator * U_EXPORT2 usearch_getCollator(\n+U_CAPI UCollator * U_EXPORT2 usearch_getCollator(\n@@ -589,1 +605,1 @@\n-U_STABLE void U_EXPORT2 usearch_setCollator(      UStringSearch *strsrch,\n+U_CAPI void U_EXPORT2 usearch_setCollator(      UStringSearch *strsrch,\n@@ -597,0 +613,4 @@\n+*\n+* The UStringSearch retains a pointer to the pattern string. The caller must not\n+* modify or delete the string while using the UStringSearch.\n+*\n@@ -605,1 +625,1 @@\n-U_STABLE void U_EXPORT2 usearch_setPattern(      UStringSearch *strsrch,\n+U_CAPI void U_EXPORT2 usearch_setPattern(      UStringSearch *strsrch,\n@@ -618,1 +638,1 @@\n-U_STABLE const UChar * U_EXPORT2 usearch_getPattern(\n+U_CAPI const UChar * U_EXPORT2 usearch_getPattern(\n@@ -628,3 +648,3 @@\n-* <tt>usearch_getOffset<\/tt>) is the match position if one was found.\n-* If a match is not found, <tt>USEARCH_DONE<\/tt> will be returned and\n-* the iterator will be adjusted to the index <tt>USEARCH_DONE<\/tt>.\n+* <code>usearch_getOffset<\/code>) is the match position if one was found.\n+* If a match is not found, <code>USEARCH_DONE<\/code> will be returned and\n+* the iterator will be adjusted to the index <code>USEARCH_DONE<\/code>.\n@@ -634,1 +654,1 @@\n-* <tt>USEARCH_DONE<\/tt> if there are no matches.\n+* <code>USEARCH_DONE<\/code> if there are no matches.\n@@ -639,1 +659,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_first(UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_first(UStringSearch *strsrch,\n@@ -643,1 +663,1 @@\n-* Returns the first index equal or greater than <tt>position<\/tt> at which\n+* Returns the first index equal or greater than <code>position<\/code> at which\n@@ -646,1 +666,1 @@\n-* index (as returned by <tt>usearch_getOffset<\/tt>) is the match position if\n+* index (as returned by <code>usearch_getOffset<\/code>) is the match position if\n@@ -648,2 +668,2 @@\n-* If a match is not found, <tt>USEARCH_DONE<\/tt> will be returned and\n-* the iterator will be adjusted to the index <tt>USEARCH_DONE<\/tt>\n+* If a match is not found, <code>USEARCH_DONE<\/code> will be returned and\n+* the iterator will be adjusted to the index <code>USEARCH_DONE<\/code>\n@@ -657,2 +677,2 @@\n-* @return The character index of the first match following <tt>pos<\/tt>,\n-*         or <tt>USEARCH_DONE<\/tt> if there are no matches.\n+* @return The character index of the first match following <code>pos<\/code>,\n+*         or <code>USEARCH_DONE<\/code> if there are no matches.\n@@ -663,1 +683,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_following(UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_following(UStringSearch *strsrch,\n@@ -670,1 +690,1 @@\n-* index (as returned by <tt>usearch_getOffset<\/tt>) is the match position if\n+* index (as returned by <code>usearch_getOffset<\/code>) is the match position if\n@@ -672,2 +692,2 @@\n-* If a match is not found, <tt>USEARCH_DONE<\/tt> will be returned and\n-* the iterator will be adjusted to the index <tt>USEARCH_DONE<\/tt>.\n+* If a match is not found, <code>USEARCH_DONE<\/code> will be returned and\n+* the iterator will be adjusted to the index <code>USEARCH_DONE<\/code>.\n@@ -676,1 +696,1 @@\n-* @return The index of the first match, or <tt>USEARCH_DONE<\/tt> if there\n+* @return The index of the first match, or <code>USEARCH_DONE<\/code> if there\n@@ -682,1 +702,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_last(UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_last(UStringSearch *strsrch,\n@@ -686,1 +706,1 @@\n-* Returns the first index less than <tt>position<\/tt> at which the string text\n+* Returns the first index less than <code>position<\/code> at which the string text\n@@ -688,1 +708,1 @@\n-* index (as returned by <tt>usearch_getOffset<\/tt>) is the match position if\n+* index (as returned by <code>usearch_getOffset<\/code>) is the match position if\n@@ -690,2 +710,2 @@\n-* If a match is not found, <tt>USEARCH_DONE<\/tt> will be returned and\n-* the iterator will be adjusted to the index <tt>USEARCH_DONE<\/tt>\n+* If a match is not found, <code>USEARCH_DONE<\/code> will be returned and\n+* the iterator will be adjusted to the index <code>USEARCH_DONE<\/code>\n@@ -697,4 +717,4 @@\n-* When <tt>USEARCH_OVERLAP<\/tt> option is off, the last index of the\n-* result match is always less than <tt>position<\/tt>.\n-* When <tt>USERARCH_OVERLAP<\/tt> is on, the result match may span across\n-* <tt>position<\/tt>.\n+* When <code>USEARCH_OVERLAP<\/code> option is off, the last index of the\n+* result match is always less than <code>position<\/code>.\n+* When <code>USERARCH_OVERLAP<\/code> is on, the result match may span across\n+* <code>position<\/code>.\n@@ -704,2 +724,2 @@\n-* @return The character index of the first match preceding <tt>pos<\/tt>,\n-*         or <tt>USEARCH_DONE<\/tt> if there are no matches.\n+* @return The character index of the first match preceding <code>pos<\/code>,\n+*         or <code>USEARCH_DONE<\/code> if there are no matches.\n@@ -710,1 +730,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_preceding(UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_preceding(UStringSearch *strsrch,\n@@ -718,1 +738,1 @@\n-* index (as returned by <tt>usearch_getOffset<\/tt>) is the match position if\n+* index (as returned by <code>usearch_getOffset<\/code>) is the match position if\n@@ -720,2 +740,2 @@\n-* If a match is not found, <tt>USEARCH_DONE<\/tt> will be returned and\n-* the iterator will be adjusted to the index <tt>USEARCH_DONE<\/tt>\n+* If a match is not found, <code>USEARCH_DONE<\/code> will be returned and\n+* the iterator will be adjusted to the index <code>USEARCH_DONE<\/code>\n@@ -725,1 +745,1 @@\n-*         <tt>USEARCH_DONE<\/tt> if there are no more matches.\n+*         <code>USEARCH_DONE<\/code> if there are no more matches.\n@@ -731,1 +751,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_next(UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_next(UStringSearch *strsrch,\n@@ -738,1 +758,1 @@\n-* index (as returned by <tt>usearch_getOffset<\/tt>) is the match position if\n+* index (as returned by <code>usearch_getOffset<\/code>) is the match position if\n@@ -740,2 +760,2 @@\n-* If a match is not found, <tt>USEARCH_DONE<\/tt> will be returned and\n-* the iterator will be adjusted to the index <tt>USEARCH_DONE<\/tt>\n+* If a match is not found, <code>USEARCH_DONE<\/code> will be returned and\n+* the iterator will be adjusted to the index <code>USEARCH_DONE<\/code>\n@@ -745,1 +765,1 @@\n-*         or <tt>USEARCH_DONE<\/tt> if there are no more matches.\n+*         or <code>USEARCH_DONE<\/code> if there are no more matches.\n@@ -751,1 +771,1 @@\n-U_STABLE int32_t U_EXPORT2 usearch_previous(UStringSearch *strsrch,\n+U_CAPI int32_t U_EXPORT2 usearch_previous(UStringSearch *strsrch,\n@@ -764,1 +784,1 @@\n-U_STABLE void U_EXPORT2 usearch_reset(UStringSearch *strsrch);\n+U_CAPI void U_EXPORT2 usearch_reset(UStringSearch *strsrch);\n@@ -769,1 +789,1 @@\n-  *     and using using a default set search options.\n+  *     and using a default set search options.\n@@ -786,1 +806,1 @@\n-  *      character sequences  are considered to be  inseperable units,\n+  *      character sequences  are considered to be  inseparable units,\n@@ -795,1 +815,1 @@\n-  *      starting point will not supress a match beginning at startIdx.\n+  *      starting point will not suppress a match beginning at startIdx.\n@@ -817,1 +837,1 @@\n-  *  @return           TRUE if a match was found, FALSE otherwise.\n+  *  @return           true if a match was found, false otherwise.\n@@ -821,1 +841,1 @@\n-U_INTERNAL UBool U_EXPORT2 usearch_search(UStringSearch *strsrch,\n+U_CAPI UBool U_EXPORT2 usearch_search(UStringSearch *strsrch,\n@@ -846,1 +866,1 @@\n-  *      character sequences  are considered to be  inseperable units,\n+  *      character sequences  are considered to be  inseparable units,\n@@ -855,1 +875,1 @@\n-  *      starting point will not supress a match beginning at startIdx.\n+  *      starting point will not suppress a match beginning at startIdx.\n@@ -877,1 +897,1 @@\n-  *  @return           TRUE if a match was found, FALSE otherwise.\n+  *  @return           true if a match was found, false otherwise.\n@@ -881,1 +901,1 @@\n-U_INTERNAL UBool U_EXPORT2 usearch_searchBackwards(UStringSearch *strsrch,\n+U_CAPI UBool U_EXPORT2 usearch_searchBackwards(UStringSearch *strsrch,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/usearch.h","additions":135,"deletions":115,"binary":false,"changes":250,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -31,0 +30,1 @@\n+#include \"unicode\/localpointer.h\"\n@@ -157,1 +157,1 @@\n- *     UBool result = FALSE;\n+ *     UBool result = false;\n@@ -160,1 +160,1 @@\n- *         if (result == TRUE) { break; }\n+ *         if (result == true) { break; }\n@@ -356,0 +356,2 @@\n+U_CDECL_BEGIN\n+\n@@ -474,1 +476,0 @@\n-#ifndef U_HIDE_DRAFT_API\n@@ -492,1 +493,1 @@\n-     * @draft ICU 62\n+     * @stable ICU 62\n@@ -495,1 +496,0 @@\n-#endif  \/* U_HIDE_DRAFT_API *\/\n@@ -604,1 +604,1 @@\n-U_STABLE USpoofChecker * U_EXPORT2\n+U_CAPI USpoofChecker * U_EXPORT2\n@@ -629,1 +629,1 @@\n-U_STABLE USpoofChecker * U_EXPORT2\n+U_CAPI USpoofChecker * U_EXPORT2\n@@ -663,1 +663,1 @@\n-U_STABLE USpoofChecker * U_EXPORT2\n+U_CAPI USpoofChecker * U_EXPORT2\n@@ -674,1 +674,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -677,19 +677,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\n-U_NAMESPACE_BEGIN\n-\n-\/**\n- * \\class LocalUSpoofCheckerPointer\n- * \"Smart pointer\" class, closes a USpoofChecker via uspoof_close().\n- * For most methods see the LocalPointerBase base class.\n- *\n- * @see LocalPointerBase\n- * @see LocalPointer\n- * @stable ICU 4.4\n- *\/\n-U_DEFINE_LOCAL_OPEN_POINTER(LocalUSpoofCheckerPointer, USpoofChecker, uspoof_close);\n-\n-U_NAMESPACE_END\n-\n-#endif\n-\n@@ -705,1 +686,1 @@\n-U_STABLE USpoofChecker * U_EXPORT2\n+U_CAPI USpoofChecker * U_EXPORT2\n@@ -713,2 +694,4 @@\n- * To enable specific checks and disable all others, the \"whitelisted\" checks should be ORed together. For\n- * example, to fail strings containing characters outside of the set specified by {@link uspoof_setAllowedChars} and\n+ * To enable specific checks and disable all others,\n+ * OR together only the bit constants for the desired checks.\n+ * For example, to fail strings containing characters outside of\n+ * the set specified by {@link uspoof_setAllowedChars} and\n@@ -723,2 +706,3 @@\n- * To disable specific checks and enable all others, the \"blacklisted\" checks should be ANDed away from\n- * ALL_CHECKS. For example, if you are not planning to use the {@link uspoof_areConfusable} functionality,\n+ * To disable specific checks and enable all others,\n+ * start with ALL_CHECKS and \"AND away\" the not-desired checks.\n+ * For example, if you are not planning to use the {@link uspoof_areConfusable} functionality,\n@@ -746,1 +730,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -760,1 +744,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -774,1 +758,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -785,1 +769,1 @@\n-U_STABLE URestrictionLevel U_EXPORT2\n+U_CAPI URestrictionLevel U_EXPORT2\n@@ -830,1 +814,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -854,1 +838,1 @@\n-U_STABLE const char * U_EXPORT2\n+U_CAPI const char * U_EXPORT2\n@@ -876,1 +860,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -900,1 +884,1 @@\n-U_STABLE const USet * U_EXPORT2\n+U_CAPI const USet * U_EXPORT2\n@@ -904,48 +888,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\/**\n- * Limit the acceptable characters to those specified by a Unicode Set.\n- *   Any previously specified character limit is\n- *   is replaced by the new settings.    This includes limits on\n- *   characters that were set with the uspoof_setAllowedLocales() function.\n- *\n- * The USPOOF_CHAR_LIMIT test is automatically enabled for this\n- * USoofChecker by this function.\n- *\n- * @param sc       The USpoofChecker\n- * @param chars    A Unicode Set containing the list of\n- *                 characters that are permitted.  Ownership of the set\n- *                 remains with the caller.  The incoming set is cloned by\n- *                 this function, so there are no restrictions on modifying\n- *                 or deleting the UnicodeSet after calling this function.\n- * @param status   The error code, set if this function encounters a problem.\n- * @stable ICU 4.2\n- *\/\n-U_STABLE void U_EXPORT2\n-uspoof_setAllowedUnicodeSet(USpoofChecker *sc, const icu::UnicodeSet *chars, UErrorCode *status);\n-\n-\n-\/**\n- * Get a UnicodeSet for the characters permitted in an identifier.\n- * This corresponds to the limits imposed by the Set Allowed Characters \/\n- * UnicodeSet functions. Limitations imposed by other checks will not be\n- * reflected in the set returned by this function.\n- *\n- * The returned set will be frozen, meaning that it cannot be modified\n- * by the caller.\n- *\n- * Ownership of the returned set remains with the Spoof Detector.  The\n- * returned set will become invalid if the spoof detector is closed,\n- * or if a new set of allowed characters is specified.\n- *\n- *\n- * @param sc       The USpoofChecker\n- * @param status   The error code, set if this function encounters a problem.\n- * @return         A UnicodeSet containing the characters that are permitted by\n- *                 the USPOOF_CHAR_LIMIT test.\n- * @stable ICU 4.2\n- *\/\n-U_STABLE const icu::UnicodeSet * U_EXPORT2\n-uspoof_getAllowedUnicodeSet(const USpoofChecker *sc, UErrorCode *status);\n-#endif\n-\n-\n@@ -984,1 +920,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1023,1 +959,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1030,37 +966,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\/**\n- * Check the specified string for possible security issues.\n- * The text to be checked will typically be an identifier of some sort.\n- * The set of checks to be performed is specified with uspoof_setChecks().\n- *\n- * \\note\n- *   Consider using the newer API, {@link uspoof_check2UnicodeString}, instead.\n- *   The newer API exposes additional information from the check procedure\n- *   and is otherwise identical to this method.\n- *\n- * @param sc      The USpoofChecker\n- * @param id      A identifier to be checked for possible security issues.\n- * @param position  Deprecated in ICU 51.  Always returns zero.\n- *                Originally, an out parameter for the index of the first\n- *                string position that failed a check.\n- *                This parameter may be NULL.\n- * @param status  The error code, set if an error occurred while attempting to\n- *                perform the check.\n- *                Spoofing or security issues detected with the input string are\n- *                not reported here, but through the function's return value.\n- * @return        An integer value with bits set for any potential security\n- *                or spoofing issues detected.  The bits are defined by\n- *                enum USpoofChecks.  (returned_value & USPOOF_ALL_CHECKS)\n- *                will be zero if the input string passes all of the\n- *                enabled checks.\n- * @see uspoof_check2UnicodeString\n- * @stable ICU 4.2\n- *\/\n-U_STABLE int32_t U_EXPORT2\n-uspoof_checkUnicodeString(const USpoofChecker *sc,\n-                          const icu::UnicodeString &id,\n-                          int32_t *position,\n-                          UErrorCode *status);\n-#endif\n-\n-\n@@ -1095,1 +994,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1132,1 +1031,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1138,33 +1037,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\/**\n- * Check the specified string for possible security issues.\n- * The text to be checked will typically be an identifier of some sort.\n- * The set of checks to be performed is specified with uspoof_setChecks().\n- *\n- * @param sc      The USpoofChecker\n- * @param id      A identifier to be checked for possible security issues.\n- * @param checkResult  An instance of USpoofCheckResult to be filled with\n- *                details about the identifier.  Can be NULL.\n- * @param status  The error code, set if an error occurred while attempting to\n- *                perform the check.\n- *                Spoofing or security issues detected with the input string are\n- *                not reported here, but through the function's return value.\n- * @return        An integer value with bits set for any potential security\n- *                or spoofing issues detected.  The bits are defined by\n- *                enum USpoofChecks.  (returned_value & USPOOF_ALL_CHECKS)\n- *                will be zero if the input string passes all of the\n- *                enabled checks.  Any information in this bitmask will be\n- *                consistent with the information saved in the optional\n- *                checkResult parameter.\n- * @see uspoof_openCheckResult\n- * @see uspoof_check2\n- * @see uspoof_check2UTF8\n- * @stable ICU 58\n- *\/\n-U_STABLE int32_t U_EXPORT2\n-uspoof_check2UnicodeString(const USpoofChecker *sc,\n-    const icu::UnicodeString &id,\n-    USpoofCheckResult* checkResult,\n-    UErrorCode *status);\n-#endif\n-\n@@ -1189,1 +1055,1 @@\n-U_STABLE USpoofCheckResult* U_EXPORT2\n+U_CAPI USpoofCheckResult* U_EXPORT2\n@@ -1199,1 +1065,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -1202,26 +1068,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\n-U_NAMESPACE_BEGIN\n-\n-\/**\n- * \\class LocalUSpoofCheckResultPointer\n- * \"Smart pointer\" class, closes a USpoofCheckResult via `uspoof_closeCheckResult()`.\n- * For most methods see the LocalPointerBase base class.\n- *\n- * @see LocalPointerBase\n- * @see LocalPointer\n- * @stable ICU 58\n- *\/\n-\n-\/**\n- * \\cond\n- * Note: Doxygen is giving a bogus warning on this U_DEFINE_LOCAL_OPEN_POINTER.\n- *       For now, suppress with a Doxygen cond\n- *\/\n-U_DEFINE_LOCAL_OPEN_POINTER(LocalUSpoofCheckResultPointer, USpoofCheckResult, uspoof_closeCheckResult);\n-\/** \\endcond *\/\n-\n-U_NAMESPACE_END\n-\n-#endif\n-\n@@ -1242,1 +1082,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1255,1 +1095,1 @@\n-U_STABLE URestrictionLevel U_EXPORT2\n+U_CAPI URestrictionLevel U_EXPORT2\n@@ -1269,1 +1109,1 @@\n-U_STABLE const USet* U_EXPORT2\n+U_CAPI const USet* U_EXPORT2\n@@ -1316,1 +1156,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1349,1 +1189,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1358,30 +1198,0 @@\n-#if U_SHOW_CPLUSPLUS_API\n-\/**\n- * A version of {@link uspoof_areConfusable} accepting UnicodeStrings.\n- *\n- * @param sc      The USpoofChecker\n- * @param s1     The first of the two identifiers to be compared for\n- *                confusability.  The strings are in UTF-8 format.\n- * @param s2     The second of the two identifiers to be compared for\n- *                confusability.  The strings are in UTF-8 format.\n- * @param status  The error code, set if an error occurred while attempting to\n- *                perform the check.\n- *                Confusability of the identifiers is not reported here,\n- *                but through this function's return value.\n- * @return        An integer value with bit(s) set corresponding to\n- *                the type of confusability found, as defined by\n- *                enum USpoofChecks.  Zero is returned if the identifiers\n- *                are not confusable.\n- *\n- * @stable ICU 4.2\n- *\n- * @see uspoof_areConfusable\n- *\/\n-U_STABLE int32_t U_EXPORT2\n-uspoof_areConfusableUnicodeString(const USpoofChecker *sc,\n-                                  const icu::UnicodeString &s1,\n-                                  const icu::UnicodeString &s2,\n-                                  UErrorCode *status);\n-#endif\n-\n-\n@@ -1419,1 +1229,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1459,1 +1269,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -1466,0 +1276,59 @@\n+\/**\n+  * Get the set of Candidate Characters for Inclusion in Identifiers, as defined\n+  * in http:\/\/unicode.org\/Public\/security\/latest\/xidmodifications.txt\n+  * and documented in http:\/\/www.unicode.org\/reports\/tr39\/, Unicode Security Mechanisms.\n+  *\n+  * The returned set is frozen. Ownership of the set remains with the ICU library; it must not\n+  * be deleted by the caller.\n+  *\n+  * @param status The error code, set if a problem occurs while creating the set.\n+  *\n+  * @stable ICU 51\n+  *\/\n+U_CAPI const USet * U_EXPORT2\n+uspoof_getInclusionSet(UErrorCode *status);\n+\n+\/**\n+  * Get the set of characters from Recommended Scripts for Inclusion in Identifiers, as defined\n+  * in http:\/\/unicode.org\/Public\/security\/latest\/xidmodifications.txt\n+  * and documented in http:\/\/www.unicode.org\/reports\/tr39\/, Unicode Security Mechanisms.\n+  *\n+  * The returned set is frozen. Ownership of the set remains with the ICU library; it must not\n+  * be deleted by the caller.\n+  *\n+  * @param status The error code, set if a problem occurs while creating the set.\n+  *\n+  * @stable ICU 51\n+  *\/\n+U_CAPI const USet * U_EXPORT2\n+uspoof_getRecommendedSet(UErrorCode *status);\n+\n+\/**\n+ * Serialize the data for a spoof detector into a chunk of memory.\n+ * The flattened spoof detection tables can later be used to efficiently\n+ * instantiate a new Spoof Detector.\n+ *\n+ * The serialized spoof checker includes only the data compiled from the\n+ * Unicode data tables by uspoof_openFromSource(); it does not include\n+ * include any other state or configuration that may have been set.\n+ *\n+ * @param sc   the Spoof Detector whose data is to be serialized.\n+ * @param data a pointer to 32-bit-aligned memory to be filled with the data,\n+ *             can be NULL if capacity==0\n+ * @param capacity the number of bytes available at data,\n+ *                 or 0 for preflighting\n+ * @param status an in\/out ICU UErrorCode; possible errors include:\n+ * - U_BUFFER_OVERFLOW_ERROR if the data storage block is too small for serialization\n+ * - U_ILLEGAL_ARGUMENT_ERROR  the data or capacity parameters are bad\n+ * @return the number of bytes written or needed for the spoof data\n+ *\n+ * @see utrie2_openFromSerialized()\n+ * @stable ICU 4.2\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+uspoof_serialize(USpoofChecker *sc,\n+                 void *data, int32_t capacity,\n+                 UErrorCode *status);\n+\n+U_CDECL_END\n+\n@@ -1467,0 +1336,177 @@\n+\n+U_NAMESPACE_BEGIN\n+\n+\/**\n+ * \\class LocalUSpoofCheckerPointer\n+ * \"Smart pointer\" class, closes a USpoofChecker via uspoof_close().\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @stable ICU 4.4\n+ *\/\n+\/**\n+ * \\cond\n+ * Note: Doxygen is giving a bogus warning on this U_DEFINE_LOCAL_OPEN_POINTER.\n+ *       For now, suppress with a Doxygen cond\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUSpoofCheckerPointer, USpoofChecker, uspoof_close);\n+\/** \\endcond *\/\n+\n+\/**\n+ * \\class LocalUSpoofCheckResultPointer\n+ * \"Smart pointer\" class, closes a USpoofCheckResult via `uspoof_closeCheckResult()`.\n+ * For most methods see the LocalPointerBase base class.\n+ *\n+ * @see LocalPointerBase\n+ * @see LocalPointer\n+ * @stable ICU 58\n+ *\/\n+\n+\/**\n+ * \\cond\n+ * Note: Doxygen is giving a bogus warning on this U_DEFINE_LOCAL_OPEN_POINTER.\n+ *       For now, suppress with a Doxygen cond\n+ *\/\n+U_DEFINE_LOCAL_OPEN_POINTER(LocalUSpoofCheckResultPointer, USpoofCheckResult, uspoof_closeCheckResult);\n+\/** \\endcond *\/\n+\n+U_NAMESPACE_END\n+\n+\/**\n+ * Limit the acceptable characters to those specified by a Unicode Set.\n+ *   Any previously specified character limit is\n+ *   is replaced by the new settings.    This includes limits on\n+ *   characters that were set with the uspoof_setAllowedLocales() function.\n+ *\n+ * The USPOOF_CHAR_LIMIT test is automatically enabled for this\n+ * USoofChecker by this function.\n+ *\n+ * @param sc       The USpoofChecker\n+ * @param chars    A Unicode Set containing the list of\n+ *                 characters that are permitted.  Ownership of the set\n+ *                 remains with the caller.  The incoming set is cloned by\n+ *                 this function, so there are no restrictions on modifying\n+ *                 or deleting the UnicodeSet after calling this function.\n+ * @param status   The error code, set if this function encounters a problem.\n+ * @stable ICU 4.2\n+ *\/\n+U_CAPI void U_EXPORT2\n+uspoof_setAllowedUnicodeSet(USpoofChecker *sc, const icu::UnicodeSet *chars, UErrorCode *status);\n+\n+\n+\/**\n+ * Get a UnicodeSet for the characters permitted in an identifier.\n+ * This corresponds to the limits imposed by the Set Allowed Characters \/\n+ * UnicodeSet functions. Limitations imposed by other checks will not be\n+ * reflected in the set returned by this function.\n+ *\n+ * The returned set will be frozen, meaning that it cannot be modified\n+ * by the caller.\n+ *\n+ * Ownership of the returned set remains with the Spoof Detector.  The\n+ * returned set will become invalid if the spoof detector is closed,\n+ * or if a new set of allowed characters is specified.\n+ *\n+ *\n+ * @param sc       The USpoofChecker\n+ * @param status   The error code, set if this function encounters a problem.\n+ * @return         A UnicodeSet containing the characters that are permitted by\n+ *                 the USPOOF_CHAR_LIMIT test.\n+ * @stable ICU 4.2\n+ *\/\n+U_CAPI const icu::UnicodeSet * U_EXPORT2\n+uspoof_getAllowedUnicodeSet(const USpoofChecker *sc, UErrorCode *status);\n+\n+\/**\n+ * Check the specified string for possible security issues.\n+ * The text to be checked will typically be an identifier of some sort.\n+ * The set of checks to be performed is specified with uspoof_setChecks().\n+ *\n+ * \\note\n+ *   Consider using the newer API, {@link uspoof_check2UnicodeString}, instead.\n+ *   The newer API exposes additional information from the check procedure\n+ *   and is otherwise identical to this method.\n+ *\n+ * @param sc      The USpoofChecker\n+ * @param id      A identifier to be checked for possible security issues.\n+ * @param position  Deprecated in ICU 51.  Always returns zero.\n+ *                Originally, an out parameter for the index of the first\n+ *                string position that failed a check.\n+ *                This parameter may be NULL.\n+ * @param status  The error code, set if an error occurred while attempting to\n+ *                perform the check.\n+ *                Spoofing or security issues detected with the input string are\n+ *                not reported here, but through the function's return value.\n+ * @return        An integer value with bits set for any potential security\n+ *                or spoofing issues detected.  The bits are defined by\n+ *                enum USpoofChecks.  (returned_value & USPOOF_ALL_CHECKS)\n+ *                will be zero if the input string passes all of the\n+ *                enabled checks.\n+ * @see uspoof_check2UnicodeString\n+ * @stable ICU 4.2\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+uspoof_checkUnicodeString(const USpoofChecker *sc,\n+                          const icu::UnicodeString &id,\n+                          int32_t *position,\n+                          UErrorCode *status);\n+\n+\/**\n+ * Check the specified string for possible security issues.\n+ * The text to be checked will typically be an identifier of some sort.\n+ * The set of checks to be performed is specified with uspoof_setChecks().\n+ *\n+ * @param sc      The USpoofChecker\n+ * @param id      A identifier to be checked for possible security issues.\n+ * @param checkResult  An instance of USpoofCheckResult to be filled with\n+ *                details about the identifier.  Can be NULL.\n+ * @param status  The error code, set if an error occurred while attempting to\n+ *                perform the check.\n+ *                Spoofing or security issues detected with the input string are\n+ *                not reported here, but through the function's return value.\n+ * @return        An integer value with bits set for any potential security\n+ *                or spoofing issues detected.  The bits are defined by\n+ *                enum USpoofChecks.  (returned_value & USPOOF_ALL_CHECKS)\n+ *                will be zero if the input string passes all of the\n+ *                enabled checks.  Any information in this bitmask will be\n+ *                consistent with the information saved in the optional\n+ *                checkResult parameter.\n+ * @see uspoof_openCheckResult\n+ * @see uspoof_check2\n+ * @see uspoof_check2UTF8\n+ * @stable ICU 58\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+uspoof_check2UnicodeString(const USpoofChecker *sc,\n+    const icu::UnicodeString &id,\n+    USpoofCheckResult* checkResult,\n+    UErrorCode *status);\n+\n+\/**\n+ * A version of {@link uspoof_areConfusable} accepting UnicodeStrings.\n+ *\n+ * @param sc      The USpoofChecker\n+ * @param s1     The first of the two identifiers to be compared for\n+ *                confusability.  The strings are in UTF-8 format.\n+ * @param s2     The second of the two identifiers to be compared for\n+ *                confusability.  The strings are in UTF-8 format.\n+ * @param status  The error code, set if an error occurred while attempting to\n+ *                perform the check.\n+ *                Confusability of the identifiers is not reported here,\n+ *                but through this function's return value.\n+ * @return        An integer value with bit(s) set corresponding to\n+ *                the type of confusability found, as defined by\n+ *                enum USpoofChecks.  Zero is returned if the identifiers\n+ *                are not confusable.\n+ *\n+ * @stable ICU 4.2\n+ *\n+ * @see uspoof_areConfusable\n+ *\/\n+U_CAPI int32_t U_EXPORT2\n+uspoof_areConfusableUnicodeString(const USpoofChecker *sc,\n+                                  const icu::UnicodeString &s1,\n+                                  const icu::UnicodeString &s2,\n+                                  UErrorCode *status);\n+\n@@ -1496,1 +1542,0 @@\n-#endif   \/* U_SHOW_CPLUSPLUS_API *\/\n@@ -1510,33 +1555,1 @@\n-U_STABLE const USet * U_EXPORT2\n-uspoof_getInclusionSet(UErrorCode *status);\n-\n-\/**\n-  * Get the set of characters from Recommended Scripts for Inclusion in Identifiers, as defined\n-  * in http:\/\/unicode.org\/Public\/security\/latest\/xidmodifications.txt\n-  * and documented in http:\/\/www.unicode.org\/reports\/tr39\/, Unicode Security Mechanisms.\n-  *\n-  * The returned set is frozen. Ownership of the set remains with the ICU library; it must not\n-  * be deleted by the caller.\n-  *\n-  * @param status The error code, set if a problem occurs while creating the set.\n-  *\n-  * @stable ICU 51\n-  *\/\n-U_STABLE const USet * U_EXPORT2\n-uspoof_getRecommendedSet(UErrorCode *status);\n-\n-#if U_SHOW_CPLUSPLUS_API\n-\n-\/**\n-  * Get the set of Candidate Characters for Inclusion in Identifiers, as defined\n-  * in http:\/\/unicode.org\/Public\/security\/latest\/xidmodifications.txt\n-  * and documented in http:\/\/www.unicode.org\/reports\/tr39\/, Unicode Security Mechanisms.\n-  *\n-  * The returned set is frozen. Ownership of the set remains with the ICU library; it must not\n-  * be deleted by the caller.\n-  *\n-  * @param status The error code, set if a problem occurs while creating the set.\n-  *\n-  * @stable ICU 51\n-  *\/\n-U_STABLE const icu::UnicodeSet * U_EXPORT2\n+U_CAPI const icu::UnicodeSet * U_EXPORT2\n@@ -1557,1 +1570,1 @@\n-U_STABLE const icu::UnicodeSet * U_EXPORT2\n+U_CAPI const icu::UnicodeSet * U_EXPORT2\n@@ -1562,29 +1575,1 @@\n-\/**\n- * Serialize the data for a spoof detector into a chunk of memory.\n- * The flattened spoof detection tables can later be used to efficiently\n- * instantiate a new Spoof Detector.\n- *\n- * The serialized spoof checker includes only the data compiled from the\n- * Unicode data tables by uspoof_openFromSource(); it does not include\n- * include any other state or configuration that may have been set.\n- *\n- * @param sc   the Spoof Detector whose data is to be serialized.\n- * @param data a pointer to 32-bit-aligned memory to be filled with the data,\n- *             can be NULL if capacity==0\n- * @param capacity the number of bytes available at data,\n- *                 or 0 for preflighting\n- * @param status an in\/out ICU UErrorCode; possible errors include:\n- * - U_BUFFER_OVERFLOW_ERROR if the data storage block is too small for serialization\n- * - U_ILLEGAL_ARGUMENT_ERROR  the data or capacity parameters are bad\n- * @return the number of bytes written or needed for the spoof data\n- *\n- * @see utrie2_openFromSerialized()\n- * @stable ICU 4.2\n- *\/\n-U_STABLE int32_t U_EXPORT2\n-uspoof_serialize(USpoofChecker *sc,\n-                 void *data, int32_t capacity,\n-                 UErrorCode *status);\n-\n-\n-#endif\n+#endif \/* UCONFIG_NO_NORMALIZATION *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/uspoof.h","additions":278,"deletions":293,"binary":false,"changes":571,"status":"modified"},{"patch":"@@ -452,1 +452,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -468,1 +468,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n@@ -484,1 +484,1 @@\n-U_STABLE int64_t U_EXPORT2\n+U_CAPI int64_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/utmscale.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -20,1 +20,0 @@\n-#include \"unicode\/localpointer.h\"\n@@ -26,0 +25,4 @@\n+#if U_SHOW_CPLUSPLUS_API\n+#include \"unicode\/localpointer.h\"\n+#endif   \/\/ U_SHOW_CPLUSPLUS_API\n+\n@@ -145,1 +148,1 @@\n-     * Beginning index, inclusive, of the text to be transliteratd.\n+     * Beginning index, inclusive, of the text to be transliterated.\n@@ -154,1 +157,1 @@\n-     * Ending index, exclusive, of the text to be transliteratd.\n+     * Ending index, exclusive, of the text to be transliterated.\n@@ -191,1 +194,1 @@\n-U_STABLE UTransliterator* U_EXPORT2\n+U_CAPI UTransliterator* U_EXPORT2\n@@ -215,1 +218,1 @@\n-U_STABLE UTransliterator* U_EXPORT2\n+U_CAPI UTransliterator* U_EXPORT2\n@@ -229,1 +232,1 @@\n-U_STABLE UTransliterator* U_EXPORT2\n+U_CAPI UTransliterator* U_EXPORT2\n@@ -239,1 +242,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -275,1 +278,1 @@\n-U_STABLE const UChar * U_EXPORT2\n+U_CAPI const UChar * U_EXPORT2\n@@ -293,1 +296,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -306,1 +309,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -327,1 +330,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -340,1 +343,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -352,1 +355,1 @@\n-U_STABLE UEnumeration * U_EXPORT2\n+U_CAPI UEnumeration * U_EXPORT2\n@@ -382,1 +385,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -392,1 +395,1 @@\n- * be transliterated unambiguosly.  This method is typically called\n+ * be transliterated unambiguously.  This method is typically called\n@@ -433,1 +436,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -457,2 +460,1 @@\n- * @param textCapacity a pointer to the length of the text buffer.\n- * Upon return,\n+ * @param textCapacity the length of the text buffer\n@@ -471,1 +473,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -482,1 +484,1 @@\n- * transliterated unambiguosly.  See utrans_transIncremental().  The\n+ * transliterated unambiguously.  See utrans_transIncremental().  The\n@@ -506,1 +508,1 @@\n-U_STABLE void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -519,1 +521,1 @@\n- * @param escapeUnprintable if TRUE then convert unprintable characters to their\n+ * @param escapeUnprintable if true then convert unprintable characters to their\n@@ -531,1 +533,1 @@\n-U_STABLE int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n@@ -541,1 +543,1 @@\n- * @param ignoreFilter If FALSE, the returned set incorporates the\n+ * @param ignoreFilter If false, the returned set incorporates the\n@@ -543,1 +545,1 @@\n- *                  the return value of this function will change. If TRUE, the\n+ *                  the return value of this function will change. If true, the\n@@ -556,1 +558,1 @@\n-U_STABLE USet* U_EXPORT2\n+U_CAPI USet* U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/utrans.h","additions":28,"deletions":26,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -14,0 +14,2 @@\n+#if U_SHOW_CPLUSPLUS_API\n+\n@@ -120,1 +122,1 @@\n-     * @return TRUE if TZURL attribute is available and value is set.\n+     * @return true if TZURL attribute is available and value is set.\n@@ -137,1 +139,1 @@\n-     * @return TRUE if lastModified attribute is available and value is set.\n+     * @return true if lastModified attribute is available and value is set.\n@@ -188,1 +190,1 @@\n-    virtual TimeZone* clone(void) const;\n+    virtual VTimeZone* clone() const;\n@@ -291,0 +293,1 @@\n+#ifndef U_FORCE_HIDE_DEPRECATED_API\n@@ -305,0 +308,1 @@\n+#endif  \/\/ U_FORCE_HIDE_DEPRECATED_API\n@@ -321,1 +325,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -331,1 +335,1 @@\n-     * @return  TRUE if the transition is found.\n+     * @return  true if the transition is found.\n@@ -456,0 +460,2 @@\n+#endif \/* U_SHOW_CPLUSPLUS_API *\/\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unicode\/vtzone.h","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,253 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include <cmath>\n+\n+#include \"cmemory.h\"\n+#include \"number_decimalquantity.h\"\n+#include \"number_roundingutils.h\"\n+#include \"uarrsort.h\"\n+#include \"uassert.h\"\n+#include \"unicode\/fmtable.h\"\n+#include \"unicode\/localpointer.h\"\n+#include \"unicode\/measunit.h\"\n+#include \"unicode\/measure.h\"\n+#include \"units_complexconverter.h\"\n+#include \"units_converter.h\"\n+\n+U_NAMESPACE_BEGIN\n+namespace units {\n+\n+ComplexUnitsConverter::ComplexUnitsConverter(const MeasureUnitImpl &inputUnit,\n+                                             const MeasureUnitImpl &outputUnits,\n+                                             const ConversionRates &ratesInfo, UErrorCode &status)\n+    : units_(outputUnits.extractIndividualUnits(status)) {\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+\n+    U_ASSERT(units_.length() != 0);\n+\n+    \/\/ Save the desired order of output units before we sort units_\n+    for (int32_t i = 0; i < units_.length(); i++) {\n+        outputUnits_.emplaceBackAndCheckErrorCode(status, units_[i]->copy(status).build(status));\n+    }\n+\n+    \/\/ NOTE:\n+    \/\/  This comparator is used to sort the units in a descending order. Therefore, we return -1 if\n+    \/\/  the left is bigger than right and so on.\n+    auto descendingCompareUnits = [](const void *context, const void *left, const void *right) {\n+        UErrorCode status = U_ZERO_ERROR;\n+\n+        const auto *leftPointer = static_cast<const MeasureUnitImpl *const *>(left);\n+        const auto *rightPointer = static_cast<const MeasureUnitImpl *const *>(right);\n+\n+        UnitConverter fromLeftToRight(**leftPointer,                                  \/\/\n+                                      **rightPointer,                                 \/\/\n+                                      *static_cast<const ConversionRates *>(context), \/\/\n+                                      status);\n+\n+        double rightFromOneLeft = fromLeftToRight.convert(1.0);\n+        if (std::abs(rightFromOneLeft - 1.0) < 0.0000000001) { \/\/ Equals To\n+            return 0;\n+        } else if (rightFromOneLeft > 1.0) { \/\/ Greater Than\n+            return -1;\n+        }\n+\n+        return 1; \/\/ Less Than\n+    };\n+\n+    uprv_sortArray(units_.getAlias(),                                                                  \/\/\n+                   units_.length(),                                                                    \/\/\n+                   sizeof units_[0], \/* NOTE: we have already asserted that the units_ is not empty.*\/ \/\/\n+                   descendingCompareUnits,                                                             \/\/\n+                   &ratesInfo,                                                                         \/\/\n+                   false,                                                                              \/\/\n+                   &status                                                                             \/\/\n+    );\n+\n+    \/\/ In case the `outputUnits` are `UMEASURE_UNIT_MIXED` such as `foot+inch`. In this case we need more\n+    \/\/ converters to convert from the `inputUnit` to the first unit in the `outputUnits`. Then, a\n+    \/\/ converter from the first unit in the `outputUnits` to the second unit and so on.\n+    \/\/      For Example:\n+    \/\/          - inputUnit is `meter`\n+    \/\/          - outputUnits is `foot+inch`\n+    \/\/              - Therefore, we need to have two converters:\n+    \/\/                      1. a converter from `meter` to `foot`\n+    \/\/                      2. a converter from `foot` to `inch`\n+    \/\/          - Therefore, if the input is `2 meter`:\n+    \/\/              1. convert `meter` to `foot` --> 2 meter to 6.56168 feet\n+    \/\/              2. convert the residual of 6.56168 feet (0.56168) to inches, which will be (6.74016\n+    \/\/              inches)\n+    \/\/              3. then, the final result will be (6 feet and 6.74016 inches)\n+    for (int i = 0, n = units_.length(); i < n; i++) {\n+        if (i == 0) { \/\/ first element\n+            unitConverters_.emplaceBackAndCheckErrorCode(status, inputUnit, *units_[i], ratesInfo,\n+                                                         status);\n+        } else {\n+            unitConverters_.emplaceBackAndCheckErrorCode(status, *units_[i - 1], *units_[i], ratesInfo,\n+                                                         status);\n+        }\n+\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+    }\n+}\n+\n+UBool ComplexUnitsConverter::greaterThanOrEqual(double quantity, double limit) const {\n+    U_ASSERT(unitConverters_.length() > 0);\n+\n+    \/\/ First converter converts to the biggest quantity.\n+    double newQuantity = unitConverters_[0]->convert(quantity);\n+    return newQuantity >= limit;\n+}\n+\n+MaybeStackVector<Measure> ComplexUnitsConverter::convert(double quantity,\n+                                                         icu::number::impl::RoundingImpl *rounder,\n+                                                         UErrorCode &status) const {\n+    \/\/ TODO(hugovdm): return an error for \"foot-and-foot\"?\n+    MaybeStackVector<Measure> result;\n+    int sign = 1;\n+    if (quantity < 0) {\n+        quantity *= -1;\n+        sign = -1;\n+    }\n+\n+    \/\/ For N converters:\n+    \/\/ - the first converter converts from the input unit to the largest unit,\n+    \/\/ - N-1 converters convert to bigger units for which we want integers,\n+    \/\/ - the Nth converter (index N-1) converts to the smallest unit, for which\n+    \/\/   we keep a double.\n+    MaybeStackArray<int64_t, 5> intValues(unitConverters_.length() - 1, status);\n+    if (U_FAILURE(status)) {\n+        return result;\n+    }\n+    uprv_memset(intValues.getAlias(), 0, (unitConverters_.length() - 1) * sizeof(int64_t));\n+\n+    for (int i = 0, n = unitConverters_.length(); i < n; ++i) {\n+        quantity = (*unitConverters_[i]).convert(quantity);\n+        if (i < n - 1) {\n+            \/\/ The double type has 15 decimal digits of precision. For choosing\n+            \/\/ whether to use the current unit or the next smaller unit, we\n+            \/\/ therefore nudge up the number with which the thresholding\n+            \/\/ decision is made. However after the thresholding, we use the\n+            \/\/ original values to ensure unbiased accuracy (to the extent of\n+            \/\/ double's capabilities).\n+            int64_t roundedQuantity = floor(quantity * (1 + DBL_EPSILON));\n+            intValues[i] = roundedQuantity;\n+\n+            \/\/ Keep the residual of the quantity.\n+            \/\/   For example: `3.6 feet`, keep only `0.6 feet`\n+            \/\/\n+            \/\/ When the calculation is near enough +\/- DBL_EPSILON, we round to\n+            \/\/ zero. (We also ensure no negative values here.)\n+            if ((quantity - roundedQuantity) \/ quantity < DBL_EPSILON) {\n+                quantity = 0;\n+            } else {\n+                quantity -= roundedQuantity;\n+            }\n+        } else { \/\/ LAST ELEMENT\n+            if (rounder == nullptr) {\n+                \/\/ Nothing to do for the last element.\n+                break;\n+            }\n+\n+            \/\/ Round the last value\n+            \/\/ TODO(ICU-21288): get smarter about precision for mixed units.\n+            number::impl::DecimalQuantity quant;\n+            quant.setToDouble(quantity);\n+            rounder->apply(quant, status);\n+            if (U_FAILURE(status)) {\n+                return result;\n+            }\n+            quantity = quant.toDouble();\n+            if (i == 0) {\n+                \/\/ Last element is also the first element, so we're done\n+                break;\n+            }\n+\n+            \/\/ Check if there's a carry, and bubble it back up the resulting intValues.\n+            int64_t carry = floor(unitConverters_[i]->convertInverse(quantity) * (1 + DBL_EPSILON));\n+            if (carry <= 0) {\n+                break;\n+            }\n+            quantity -= unitConverters_[i]->convert(carry);\n+            intValues[i - 1] += carry;\n+\n+            \/\/ We don't use the first converter: that one is for the input unit\n+            for (int32_t j = i - 1; j > 0; j--) {\n+                carry = floor(unitConverters_[j]->convertInverse(intValues[j]) * (1 + DBL_EPSILON));\n+                if (carry <= 0) {\n+                    break;\n+                }\n+                intValues[j] -= round(unitConverters_[j]->convert(carry));\n+                intValues[j - 1] += carry;\n+            }\n+        }\n+    }\n+\n+    \/\/ Package values into Measure instances in result:\n+    for (int i = 0, n = unitConverters_.length(); i < n; ++i) {\n+        if (i < n - 1) {\n+            Formattable formattableQuantity(intValues[i] * sign);\n+            \/\/ Measure takes ownership of the MeasureUnit*\n+            MeasureUnit *type = new MeasureUnit(units_[i]->copy(status).build(status));\n+            if (result.emplaceBackAndCheckErrorCode(status, formattableQuantity, type, status) ==\n+                nullptr) {\n+                \/\/ Ownership wasn't taken\n+                U_ASSERT(U_FAILURE(status));\n+                delete type;\n+            }\n+            if (U_FAILURE(status)) {\n+                return result;\n+            }\n+        } else { \/\/ LAST ELEMENT\n+            \/\/ Add the last element, not an integer:\n+            Formattable formattableQuantity(quantity * sign);\n+            \/\/ Measure takes ownership of the MeasureUnit*\n+            MeasureUnit *type = new MeasureUnit(units_[i]->copy(status).build(status));\n+            if (result.emplaceBackAndCheckErrorCode(status, formattableQuantity, type, status) ==\n+                nullptr) {\n+                \/\/ Ownership wasn't taken\n+                U_ASSERT(U_FAILURE(status));\n+                delete type;\n+            }\n+            if (U_FAILURE(status)) {\n+                return result;\n+            }\n+            U_ASSERT(result.length() == i + 1);\n+            U_ASSERT(result[i] != nullptr);\n+        }\n+    }\n+\n+    MaybeStackVector<Measure> orderedResult;\n+    int32_t unitsCount = outputUnits_.length();\n+    U_ASSERT(unitsCount == units_.length());\n+    Measure **arr = result.getAlias();\n+    \/\/ O(N^2) is fine: mixed units' unitsCount is usually 2 or 3.\n+    for (int32_t i = 0; i < unitsCount; i++) {\n+        for (int32_t j = i; j < unitsCount; j++) {\n+            \/\/ Find the next expected unit, and swap it into place.\n+            U_ASSERT(result[j] != nullptr);\n+            if (result[j]->getUnit() == *outputUnits_[i]) {\n+                if (j != i) {\n+                    Measure *tmp = arr[j];\n+                    arr[j] = arr[i];\n+                    arr[i] = tmp;\n+                }\n+            }\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_complexconverter.cpp","additions":253,"deletions":0,"binary":false,"changes":253,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __UNITS_COMPLEXCONVERTER_H__\n+#define __UNITS_COMPLEXCONVERTER_H__\n+\n+#include \"cmemory.h\"\n+#include \"measunit_impl.h\"\n+#include \"number_roundingutils.h\"\n+#include \"unicode\/errorcode.h\"\n+#include \"unicode\/measure.h\"\n+#include \"units_converter.h\"\n+#include \"units_data.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\/\/ Export explicit template instantiations of MaybeStackArray, MemoryPool and\n+\/\/ MaybeStackVector. This is required when building DLLs for Windows. (See\n+\/\/ datefmt.h, collationiterator.h, erarules.h and others for similar examples.)\n+\/\/\n+\/\/ Note: These need to be outside of the units namespace, or Clang will generate\n+\/\/ a compile error.\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+template class U_I18N_API MaybeStackArray<units::UnitConverter*, 8>;\n+template class U_I18N_API MemoryPool<units::UnitConverter, 8>;\n+template class U_I18N_API MaybeStackVector<units::UnitConverter, 8>;\n+template class U_I18N_API MaybeStackArray<MeasureUnitImpl*, 8>;\n+template class U_I18N_API MemoryPool<MeasureUnitImpl, 8>;\n+template class U_I18N_API MaybeStackVector<MeasureUnitImpl, 8>;\n+template class U_I18N_API MaybeStackArray<MeasureUnit*, 8>;\n+template class U_I18N_API MemoryPool<MeasureUnit, 8>;\n+template class U_I18N_API MaybeStackVector<MeasureUnit, 8>;\n+#endif\n+\n+namespace units {\n+\n+\/**\n+ *  Converts from single or compound unit to single, compound or mixed units.\n+ * For example, from `meter` to `foot+inch`.\n+ *\n+ *  DESIGN:\n+ *    This class uses `UnitConverter` in order to perform the single converter (i.e. converters from a\n+ *    single unit to another single unit). Therefore, `ComplexUnitsConverter` class contains multiple\n+ *    instances of the `UnitConverter` to perform the conversion.\n+ *\/\n+class U_I18N_API ComplexUnitsConverter : public UMemory {\n+  public:\n+    \/**\n+     * Constructor of `ComplexUnitsConverter`.\n+     * NOTE:\n+     *   - inputUnit and outputUnits must be under the same category\n+     *      - e.g. meter to feet and inches --> all of them are length units.\n+     *\n+     * @param inputUnit represents the source unit. (should be single or compound unit).\n+     * @param outputUnits represents the output unit. could be any type. (single, compound or mixed).\n+     * @param status\n+     *\/\n+    ComplexUnitsConverter(const MeasureUnitImpl &inputUnit, const MeasureUnitImpl &outputUnits,\n+                          const ConversionRates &ratesInfo, UErrorCode &status);\n+\n+    \/\/ Returns true if the specified `quantity` of the `inputUnit`, expressed in terms of the biggest\n+    \/\/ unit in the MeasureUnit `outputUnit`, is greater than or equal to `limit`.\n+    \/\/    For example, if the input unit is `meter` and the target unit is `foot+inch`. Therefore, this\n+    \/\/    function will convert the `quantity` from `meter` to `foot`, then, it will compare the value in\n+    \/\/    `foot` with the `limit`.\n+    UBool greaterThanOrEqual(double quantity, double limit) const;\n+\n+    \/\/ Returns outputMeasures which is an array with the corresponding values.\n+    \/\/    - E.g. converting meters to feet and inches.\n+    \/\/                  1 meter --> 3 feet, 3.3701 inches\n+    \/\/         NOTE:\n+    \/\/           the smallest element is the only element that could have fractional values. And all\n+    \/\/           other elements are floored to the nearest integer\n+    MaybeStackVector<Measure>\n+    convert(double quantity, icu::number::impl::RoundingImpl *rounder, UErrorCode &status) const;\n+\n+  private:\n+    MaybeStackVector<UnitConverter> unitConverters_;\n+    \/\/ Individual units of mixed units, sorted big to small\n+    MaybeStackVector<MeasureUnitImpl> units_;\n+    \/\/ Individual units of mixed units, sorted in desired output order\n+    MaybeStackVector<MeasureUnit> outputUnits_;\n+};\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/\/__UNITS_COMPLEXCONVERTER_H__\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_complexconverter.h","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,546 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"charstr.h\"\n+#include \"cmemory.h\"\n+#include \"double-conversion-string-to-double.h\"\n+#include \"measunit_impl.h\"\n+#include \"uassert.h\"\n+#include \"unicode\/errorcode.h\"\n+#include \"unicode\/localpointer.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"units_converter.h\"\n+#include <algorithm>\n+#include <cmath>\n+#include <stdlib.h>\n+#include <utility>\n+\n+U_NAMESPACE_BEGIN\n+namespace units {\n+\n+void U_I18N_API Factor::multiplyBy(const Factor &rhs) {\n+    factorNum *= rhs.factorNum;\n+    factorDen *= rhs.factorDen;\n+    for (int i = 0; i < CONSTANTS_COUNT; i++) {\n+        constants[i] += rhs.constants[i];\n+    }\n+\n+    \/\/ NOTE\n+    \/\/  We need the offset when the source and the target are simple units. e.g. the source is\n+    \/\/  celsius and the target is Fahrenheit. Therefore, we just keep the value using `std::max`.\n+    offset = std::max(rhs.offset, offset);\n+}\n+\n+void U_I18N_API Factor::divideBy(const Factor &rhs) {\n+    factorNum *= rhs.factorDen;\n+    factorDen *= rhs.factorNum;\n+    for (int i = 0; i < CONSTANTS_COUNT; i++) {\n+        constants[i] -= rhs.constants[i];\n+    }\n+\n+    \/\/ NOTE\n+    \/\/  We need the offset when the source and the target are simple units. e.g. the source is\n+    \/\/  celsius and the target is Fahrenheit. Therefore, we just keep the value using `std::max`.\n+    offset = std::max(rhs.offset, offset);\n+}\n+\n+void U_I18N_API Factor::power(int32_t power) {\n+    \/\/ multiply all the constant by the power.\n+    for (int i = 0; i < CONSTANTS_COUNT; i++) {\n+        constants[i] *= power;\n+    }\n+\n+    bool shouldFlip = power < 0; \/\/ This means that after applying the absolute power, we should flip\n+                                 \/\/ the Numerator and Denominator.\n+\n+    factorNum = std::pow(factorNum, std::abs(power));\n+    factorDen = std::pow(factorDen, std::abs(power));\n+\n+    if (shouldFlip) {\n+        \/\/ Flip Numerator and Denominator.\n+        std::swap(factorNum, factorDen);\n+    }\n+}\n+\n+void U_I18N_API Factor::flip() {\n+    std::swap(factorNum, factorDen);\n+\n+    for (int i = 0; i < CONSTANTS_COUNT; i++) {\n+        constants[i] *= -1;\n+    }\n+}\n+\n+void U_I18N_API Factor::applySiPrefix(UMeasureSIPrefix siPrefix) {\n+    if (siPrefix == UMeasureSIPrefix::UMEASURE_SI_PREFIX_ONE) return; \/\/ No need to do anything\n+\n+    double siApplied = std::pow(10.0, std::abs(siPrefix));\n+\n+    if (siPrefix < 0) {\n+        factorDen *= siApplied;\n+        return;\n+    }\n+\n+    factorNum *= siApplied;\n+}\n+\n+void U_I18N_API Factor::substituteConstants() {\n+    for (int i = 0; i < CONSTANTS_COUNT; i++) {\n+        if (this->constants[i] == 0) {\n+            continue;\n+        }\n+\n+        auto absPower = std::abs(this->constants[i]);\n+        Signum powerSig = this->constants[i] < 0 ? Signum::NEGATIVE : Signum::POSITIVE;\n+        double absConstantValue = std::pow(constantsValues[i], absPower);\n+\n+        if (powerSig == Signum::NEGATIVE) {\n+            this->factorDen *= absConstantValue;\n+        } else {\n+            this->factorNum *= absConstantValue;\n+        }\n+\n+        this->constants[i] = 0;\n+    }\n+}\n+\n+namespace {\n+\n+\/* Helpers *\/\n+\n+using icu::double_conversion::StringToDoubleConverter;\n+\n+\/\/ TODO: Make this a shared-utility function.\n+\/\/ Returns `double` from a scientific number(i.e. \"1\", \"2.01\" or \"3.09E+4\")\n+double strToDouble(StringPiece strNum, UErrorCode &status) {\n+    \/\/ We are processing well-formed input, so we don't need any special options to\n+    \/\/ StringToDoubleConverter.\n+    StringToDoubleConverter converter(0, 0, 0, \"\", \"\");\n+    int32_t count;\n+    double result = converter.StringToDouble(strNum.data(), strNum.length(), &count);\n+    if (count != strNum.length()) {\n+        status = U_INVALID_FORMAT_ERROR;\n+    }\n+\n+    return result;\n+}\n+\n+\/\/ Returns `double` from a scientific number that could has a division sign (i.e. \"1\", \"2.01\", \"3.09E+4\"\n+\/\/ or \"2E+2\/3\")\n+double strHasDivideSignToDouble(StringPiece strWithDivide, UErrorCode &status) {\n+    int divisionSignInd = -1;\n+    for (int i = 0, n = strWithDivide.length(); i < n; ++i) {\n+        if (strWithDivide.data()[i] == '\/') {\n+            divisionSignInd = i;\n+            break;\n+        }\n+    }\n+\n+    if (divisionSignInd >= 0) {\n+        return strToDouble(strWithDivide.substr(0, divisionSignInd), status) \/\n+               strToDouble(strWithDivide.substr(divisionSignInd + 1), status);\n+    }\n+\n+    return strToDouble(strWithDivide, status);\n+}\n+\n+\/*\n+  Adds single factor to a `Factor` object. Single factor means \"23^2\", \"23.3333\", \"ft2m^3\" ...etc.\n+  However, complex factor are not included, such as \"ft2m^3*200\/3\"\n+*\/\n+void addFactorElement(Factor &factor, StringPiece elementStr, Signum signum, UErrorCode &status) {\n+    StringPiece baseStr;\n+    StringPiece powerStr;\n+    int32_t power =\n+        1; \/\/ In case the power is not written, then, the power is equal 1 ==> `ft2m^1` == `ft2m`\n+\n+    \/\/ Search for the power part\n+    int32_t powerInd = -1;\n+    for (int32_t i = 0, n = elementStr.length(); i < n; ++i) {\n+        if (elementStr.data()[i] == '^') {\n+            powerInd = i;\n+            break;\n+        }\n+    }\n+\n+    if (powerInd > -1) {\n+        \/\/ There is power\n+        baseStr = elementStr.substr(0, powerInd);\n+        powerStr = elementStr.substr(powerInd + 1);\n+\n+        power = static_cast<int32_t>(strToDouble(powerStr, status));\n+    } else {\n+        baseStr = elementStr;\n+    }\n+\n+    addSingleFactorConstant(baseStr, power, signum, factor, status);\n+}\n+\n+\/*\n+ * Extracts `Factor` from a complete string factor. e.g. \"ft2m^3*1007\/cup2m3*3\"\n+ *\/\n+Factor extractFactorConversions(StringPiece stringFactor, UErrorCode &status) {\n+    Factor result;\n+    Signum signum = Signum::POSITIVE;\n+    auto factorData = stringFactor.data();\n+    for (int32_t i = 0, start = 0, n = stringFactor.length(); i < n; i++) {\n+        if (factorData[i] == '*' || factorData[i] == '\/') {\n+            StringPiece factorElement = stringFactor.substr(start, i - start);\n+            addFactorElement(result, factorElement, signum, status);\n+\n+            start = i + 1; \/\/ Set `start` to point to the start of the new element.\n+        } else if (i == n - 1) {\n+            \/\/ Last element\n+            addFactorElement(result, stringFactor.substr(start, i + 1), signum, status);\n+        }\n+\n+        if (factorData[i] == '\/') {\n+            signum = Signum::NEGATIVE; \/\/ Change the signum because we reached the Denominator.\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+\/\/ Load factor for a single source\n+Factor loadSingleFactor(StringPiece source, const ConversionRates &ratesInfo, UErrorCode &status) {\n+    const auto conversionUnit = ratesInfo.extractConversionInfo(source, status);\n+    if (U_FAILURE(status)) return Factor();\n+    if (conversionUnit == nullptr) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return Factor();\n+    }\n+\n+    Factor result = extractFactorConversions(conversionUnit->factor.toStringPiece(), status);\n+    result.offset = strHasDivideSignToDouble(conversionUnit->offset.toStringPiece(), status);\n+\n+    return result;\n+}\n+\n+\/\/ Load Factor of a compound source unit.\n+Factor loadCompoundFactor(const MeasureUnitImpl &source, const ConversionRates &ratesInfo,\n+                          UErrorCode &status) {\n+\n+    Factor result;\n+    for (int32_t i = 0, n = source.units.length(); i < n; i++) {\n+        SingleUnitImpl singleUnit = *source.units[i];\n+\n+        Factor singleFactor = loadSingleFactor(singleUnit.getSimpleUnitID(), ratesInfo, status);\n+        if (U_FAILURE(status)) return result;\n+\n+        \/\/ Apply SiPrefix before the power, because the power may be will flip the factor.\n+        singleFactor.applySiPrefix(singleUnit.siPrefix);\n+\n+        \/\/ Apply the power of the `dimensionality`\n+        singleFactor.power(singleUnit.dimensionality);\n+\n+        result.multiplyBy(singleFactor);\n+    }\n+\n+    return result;\n+}\n+\n+\/**\n+ * Checks if the source unit and the target unit are simple. For example celsius or fahrenheit. But not\n+ * square-celsius or square-fahrenheit.\n+ *\n+ * NOTE:\n+ *  Empty unit means simple unit.\n+ *\/\n+UBool checkSimpleUnit(const MeasureUnitImpl &unit, UErrorCode &status) {\n+    if (U_FAILURE(status)) return false;\n+\n+    if (unit.complexity != UMEASURE_UNIT_SINGLE) {\n+        return false;\n+    }\n+    if (unit.units.length() == 0) {\n+        \/\/ Empty units means simple unit.\n+        return true;\n+    }\n+\n+    auto singleUnit = *(unit.units[0]);\n+\n+    if (singleUnit.dimensionality != 1 || singleUnit.siPrefix != UMEASURE_SI_PREFIX_ONE) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+\/**\n+ *  Extract conversion rate from `source` to `target`\n+ *\/\n+void loadConversionRate(ConversionRate &conversionRate, const MeasureUnitImpl &source,\n+                        const MeasureUnitImpl &target, Convertibility unitsState,\n+                        const ConversionRates &ratesInfo, UErrorCode &status) {\n+    \/\/ Represents the conversion factor from the source to the target.\n+    Factor finalFactor;\n+\n+    \/\/ Represents the conversion factor from the source to the base unit that specified in the conversion\n+    \/\/ data which is considered as the root of the source and the target.\n+    Factor sourceToBase = loadCompoundFactor(source, ratesInfo, status);\n+    Factor targetToBase = loadCompoundFactor(target, ratesInfo, status);\n+\n+    \/\/ Merger Factors\n+    finalFactor.multiplyBy(sourceToBase);\n+    if (unitsState == Convertibility::CONVERTIBLE) {\n+        finalFactor.divideBy(targetToBase);\n+    } else if (unitsState == Convertibility::RECIPROCAL) {\n+        finalFactor.multiplyBy(targetToBase);\n+    } else {\n+        status = UErrorCode::U_ARGUMENT_TYPE_MISMATCH;\n+        return;\n+    }\n+\n+    finalFactor.substituteConstants();\n+\n+    conversionRate.factorNum = finalFactor.factorNum;\n+    conversionRate.factorDen = finalFactor.factorDen;\n+\n+    \/\/ In case of simple units (such as: celsius or fahrenheit), offsets are considered.\n+    if (checkSimpleUnit(source, status) && checkSimpleUnit(target, status)) {\n+        conversionRate.sourceOffset =\n+            sourceToBase.offset * sourceToBase.factorDen \/ sourceToBase.factorNum;\n+        conversionRate.targetOffset =\n+            targetToBase.offset * targetToBase.factorDen \/ targetToBase.factorNum;\n+    }\n+\n+    conversionRate.reciprocal = unitsState == Convertibility::RECIPROCAL;\n+}\n+\n+struct UnitIndexAndDimension : UMemory {\n+    int32_t index = 0;\n+    int32_t dimensionality = 0;\n+\n+    UnitIndexAndDimension(const SingleUnitImpl &singleUnit, int32_t multiplier) {\n+        index = singleUnit.index;\n+        dimensionality = singleUnit.dimensionality * multiplier;\n+    }\n+};\n+\n+void mergeSingleUnitWithDimension(MaybeStackVector<UnitIndexAndDimension> &unitIndicesWithDimension,\n+                                  const SingleUnitImpl &shouldBeMerged, int32_t multiplier) {\n+    for (int32_t i = 0; i < unitIndicesWithDimension.length(); i++) {\n+        auto &unitWithIndex = *unitIndicesWithDimension[i];\n+        if (unitWithIndex.index == shouldBeMerged.index) {\n+            unitWithIndex.dimensionality += shouldBeMerged.dimensionality * multiplier;\n+            return;\n+        }\n+    }\n+\n+    unitIndicesWithDimension.emplaceBack(shouldBeMerged, multiplier);\n+}\n+\n+void mergeUnitsAndDimensions(MaybeStackVector<UnitIndexAndDimension> &unitIndicesWithDimension,\n+                             const MeasureUnitImpl &shouldBeMerged, int32_t multiplier) {\n+    for (int32_t unit_i = 0; unit_i < shouldBeMerged.units.length(); unit_i++) {\n+        auto singleUnit = *shouldBeMerged.units[unit_i];\n+        mergeSingleUnitWithDimension(unitIndicesWithDimension, singleUnit, multiplier);\n+    }\n+}\n+\n+UBool checkAllDimensionsAreZeros(const MaybeStackVector<UnitIndexAndDimension> &dimensionVector) {\n+    for (int32_t i = 0; i < dimensionVector.length(); i++) {\n+        if (dimensionVector[i]->dimensionality != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+} \/\/ namespace\n+\n+\/\/ Conceptually, this modifies factor: factor *= baseStr^(signum*power).\n+\/\/\n+\/\/ baseStr must be a known constant or a value that strToDouble() is able to\n+\/\/ parse.\n+void U_I18N_API addSingleFactorConstant(StringPiece baseStr, int32_t power, Signum signum,\n+                                        Factor &factor, UErrorCode &status) {\n+    if (baseStr == \"ft_to_m\") {\n+        factor.constants[CONSTANT_FT2M] += power * signum;\n+    } else if (baseStr == \"ft2_to_m2\") {\n+        factor.constants[CONSTANT_FT2M] += 2 * power * signum;\n+    } else if (baseStr == \"ft3_to_m3\") {\n+        factor.constants[CONSTANT_FT2M] += 3 * power * signum;\n+    } else if (baseStr == \"in3_to_m3\") {\n+        factor.constants[CONSTANT_FT2M] += 3 * power * signum;\n+        factor.factorDen *= 12 * 12 * 12;\n+    } else if (baseStr == \"gal_to_m3\") {\n+        factor.factorNum *= 231;\n+        factor.constants[CONSTANT_FT2M] += 3 * power * signum;\n+        factor.factorDen *= 12 * 12 * 12;\n+    } else if (baseStr == \"gal_imp_to_m3\") {\n+        factor.constants[CONSTANT_GAL_IMP2M3] += power * signum;\n+    } else if (baseStr == \"G\") {\n+        factor.constants[CONSTANT_G] += power * signum;\n+    } else if (baseStr == \"gravity\") {\n+        factor.constants[CONSTANT_GRAVITY] += power * signum;\n+    } else if (baseStr == \"lb_to_kg\") {\n+        factor.constants[CONSTANT_LB2KG] += power * signum;\n+    } else if (baseStr == \"PI\") {\n+        factor.constants[CONSTANT_PI] += power * signum;\n+    } else {\n+        if (signum == Signum::NEGATIVE) {\n+            factor.factorDen *= std::pow(strToDouble(baseStr, status), power);\n+        } else {\n+            factor.factorNum *= std::pow(strToDouble(baseStr, status), power);\n+        }\n+    }\n+}\n+\n+\/**\n+ * Extracts the compound base unit of a compound unit (`source`). For example, if the source unit is\n+ * `square-mile-per-hour`, the compound base unit will be `square-meter-per-second`\n+ *\/\n+MeasureUnitImpl U_I18N_API extractCompoundBaseUnit(const MeasureUnitImpl &source,\n+                                                   const ConversionRates &conversionRates,\n+                                                   UErrorCode &status) {\n+\n+    MeasureUnitImpl result;\n+    if (U_FAILURE(status)) return result;\n+\n+    const auto &singleUnits = source.units;\n+    for (int i = 0, count = singleUnits.length(); i < count; ++i) {\n+        const auto &singleUnit = *singleUnits[i];\n+        \/\/ Extract `ConversionRateInfo` using the absolute unit. For example: in case of `square-meter`,\n+        \/\/ we will use `meter`\n+        const auto rateInfo =\n+            conversionRates.extractConversionInfo(singleUnit.getSimpleUnitID(), status);\n+        if (U_FAILURE(status)) {\n+            return result;\n+        }\n+        if (rateInfo == nullptr) {\n+            status = U_INTERNAL_PROGRAM_ERROR;\n+            return result;\n+        }\n+\n+        \/\/ Multiply the power of the singleUnit by the power of the baseUnit. For example, square-hectare\n+        \/\/ must be pow4-meter. (NOTE: hectare --> square-meter)\n+        auto baseUnits =\n+            MeasureUnitImpl::forIdentifier(rateInfo->baseUnit.toStringPiece(), status).units;\n+        for (int32_t i = 0, baseUnitsCount = baseUnits.length(); i < baseUnitsCount; i++) {\n+            baseUnits[i]->dimensionality *= singleUnit.dimensionality;\n+            \/\/ TODO: Deal with SI-prefix\n+            result.append(*baseUnits[i], status);\n+\n+            if (U_FAILURE(status)) {\n+                return result;\n+            }\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+\/**\n+ * Determine the convertibility between `source` and `target`.\n+ * For example:\n+ *    `meter` and `foot` are `CONVERTIBLE`.\n+ *    `meter-per-second` and `second-per-meter` are `RECIPROCAL`.\n+ *    `meter` and `pound` are `UNCONVERTIBLE`.\n+ *\n+ * NOTE:\n+ *    Only works with SINGLE and COMPOUND units. If one of the units is a\n+ *    MIXED unit, an error will occur. For more information, see UMeasureUnitComplexity.\n+ *\/\n+Convertibility U_I18N_API extractConvertibility(const MeasureUnitImpl &source,\n+                                                const MeasureUnitImpl &target,\n+                                                const ConversionRates &conversionRates,\n+                                                UErrorCode &status) {\n+\n+    if (source.complexity == UMeasureUnitComplexity::UMEASURE_UNIT_MIXED ||\n+        target.complexity == UMeasureUnitComplexity::UMEASURE_UNIT_MIXED) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return UNCONVERTIBLE;\n+    }\n+\n+    MeasureUnitImpl sourceBaseUnit = extractCompoundBaseUnit(source, conversionRates, status);\n+    MeasureUnitImpl targetBaseUnit = extractCompoundBaseUnit(target, conversionRates, status);\n+    if (U_FAILURE(status)) return UNCONVERTIBLE;\n+\n+    MaybeStackVector<UnitIndexAndDimension> convertible;\n+    MaybeStackVector<UnitIndexAndDimension> reciprocal;\n+\n+    mergeUnitsAndDimensions(convertible, sourceBaseUnit, 1);\n+    mergeUnitsAndDimensions(reciprocal, sourceBaseUnit, 1);\n+\n+    mergeUnitsAndDimensions(convertible, targetBaseUnit, -1);\n+    mergeUnitsAndDimensions(reciprocal, targetBaseUnit, 1);\n+\n+    if (checkAllDimensionsAreZeros(convertible)) {\n+        return CONVERTIBLE;\n+    }\n+\n+    if (checkAllDimensionsAreZeros(reciprocal)) {\n+        return RECIPROCAL;\n+    }\n+\n+    return UNCONVERTIBLE;\n+}\n+\n+UnitConverter::UnitConverter(const MeasureUnitImpl &source, const MeasureUnitImpl &target,\n+                             const ConversionRates &ratesInfo, UErrorCode &status)\n+    : conversionRate_(source.copy(status), target.copy(status)) {\n+    if (source.complexity == UMeasureUnitComplexity::UMEASURE_UNIT_MIXED ||\n+        target.complexity == UMeasureUnitComplexity::UMEASURE_UNIT_MIXED) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return;\n+    }\n+\n+    Convertibility unitsState = extractConvertibility(source, target, ratesInfo, status);\n+    if (U_FAILURE(status)) return;\n+    if (unitsState == Convertibility::UNCONVERTIBLE) {\n+        status = U_INTERNAL_PROGRAM_ERROR;\n+        return;\n+    }\n+\n+    loadConversionRate(conversionRate_, conversionRate_.source, conversionRate_.target, unitsState,\n+                       ratesInfo, status);\n+}\n+\n+double UnitConverter::convert(double inputValue) const {\n+    double result =\n+        inputValue + conversionRate_.sourceOffset; \/\/ Reset the input to the target zero index.\n+    \/\/ Convert the quantity to from the source scale to the target scale.\n+    result *= conversionRate_.factorNum \/ conversionRate_.factorDen;\n+\n+    result -= conversionRate_.targetOffset; \/\/ Set the result to its index.\n+\n+    if (conversionRate_.reciprocal) {\n+        if (result == 0) {\n+            \/\/ TODO: demonstrate the resulting behaviour in tests... and figure\n+            \/\/ out desired behaviour. (Theoretical result should be infinity,\n+            \/\/ not 0.)\n+            return 0.0;\n+        }\n+        result = 1.0 \/ result;\n+    }\n+\n+    return result;\n+}\n+\n+double UnitConverter::convertInverse(double inputValue) const {\n+    double result = inputValue;\n+    if (conversionRate_.reciprocal) {\n+        if (result == 0) {\n+            \/\/ TODO: demonstrate the resulting behaviour in tests... and figure\n+            \/\/ out desired behaviour. (Theoretical result should be infinity,\n+            \/\/ not 0.)\n+            return 0.0;\n+        }\n+        result = 1.0 \/ result;\n+    }\n+    result += conversionRate_.targetOffset;\n+    result *= conversionRate_.factorDen \/ conversionRate_.factorNum;\n+    result -= conversionRate_.sourceOffset;\n+    return result;\n+}\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_converter.cpp","additions":546,"deletions":0,"binary":false,"changes":546,"status":"added"},{"patch":"@@ -0,0 +1,173 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __UNITS_CONVERTER_H__\n+#define __UNITS_CONVERTER_H__\n+\n+#include \"cmemory.h\"\n+#include \"measunit_impl.h\"\n+#include \"unicode\/errorcode.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"units_converter.h\"\n+#include \"units_data.h\"\n+\n+U_NAMESPACE_BEGIN\n+namespace units {\n+\n+\/* Internal Structure *\/\n+\n+enum Constants {\n+    CONSTANT_FT2M,    \/\/ ft2m stands for foot to meter.\n+    CONSTANT_PI,      \/\/ PI\n+    CONSTANT_GRAVITY, \/\/ Gravity\n+    CONSTANT_G,\n+    CONSTANT_GAL_IMP2M3, \/\/ Gallon imp to m3\n+    CONSTANT_LB2KG,      \/\/ Pound to Kilogram\n+\n+    \/\/ Must be the last element.\n+    CONSTANTS_COUNT\n+};\n+\n+\/\/ These values are a hard-coded subset of unitConstants in the units\n+\/\/ resources file. A unit test checks that all constants in the resource\n+\/\/ file are at least recognised by the code. Derived constants' values or\n+\/\/ hard-coded derivations are not checked.\n+static const double constantsValues[CONSTANTS_COUNT] = {\n+    0.3048,                    \/\/ CONSTANT_FT2M\n+    411557987.0 \/ 131002976.0, \/\/ CONSTANT_PI\n+    9.80665,                   \/\/ CONSTANT_GRAVITY\n+    6.67408E-11,               \/\/ CONSTANT_G\n+    0.00454609,                \/\/ CONSTANT_GAL_IMP2M3\n+    0.45359237,                \/\/ CONSTANT_LB2KG\n+};\n+\n+typedef enum Signum {\n+    NEGATIVE = -1,\n+    POSITIVE = 1,\n+} Signum;\n+\n+\/* Represents a conversion factor *\/\n+struct U_I18N_API Factor {\n+    double factorNum = 1;\n+    double factorDen = 1;\n+    double offset = 0;\n+    bool reciprocal = false;\n+    int32_t constants[CONSTANTS_COUNT] = {};\n+\n+    void multiplyBy(const Factor &rhs);\n+    void divideBy(const Factor &rhs);\n+\n+    \/\/ Apply the power to the factor.\n+    void power(int32_t power);\n+\n+    \/\/ Flip the `Factor`, for example, factor= 2\/3, flippedFactor = 3\/2\n+    void flip();\n+\n+    \/\/ Apply SI prefix to the `Factor`\n+    void applySiPrefix(UMeasureSIPrefix siPrefix);\n+    void substituteConstants();\n+};\n+\n+\/*\n+ * Adds a single factor element to the `Factor`. e.g \"ft3m\", \"2.333\" or \"cup2m3\". But not \"cup2m3^3\".\n+ *\/\n+void U_I18N_API addSingleFactorConstant(StringPiece baseStr, int32_t power, Signum sigNum,\n+                                        Factor &factor, UErrorCode &status);\n+\n+\/**\n+ * Represents the conversion rate between `source` and `target`.\n+ *\/\n+struct U_I18N_API ConversionRate : public UMemory {\n+    const MeasureUnitImpl source;\n+    const MeasureUnitImpl target;\n+    double factorNum = 1;\n+    double factorDen = 1;\n+    double sourceOffset = 0;\n+    double targetOffset = 0;\n+    bool reciprocal = false;\n+\n+    ConversionRate(MeasureUnitImpl &&source, MeasureUnitImpl &&target)\n+        : source(std::move(source)), target(std::move(target)) {}\n+};\n+\n+enum Convertibility {\n+    RECIPROCAL,\n+    CONVERTIBLE,\n+    UNCONVERTIBLE,\n+};\n+\n+MeasureUnitImpl U_I18N_API extractCompoundBaseUnit(const MeasureUnitImpl &source,\n+                                                   const ConversionRates &conversionRates,\n+                                                   UErrorCode &status);\n+\n+\/**\n+ * Check if the convertibility between `source` and `target`.\n+ * For example:\n+ *    `meter` and `foot` are `CONVERTIBLE`.\n+ *    `meter-per-second` and `second-per-meter` are `RECIPROCAL`.\n+ *    `meter` and `pound` are `UNCONVERTIBLE`.\n+ *\n+ * NOTE:\n+ *    Only works with SINGLE and COMPOUND units. If one of the units is a\n+ *    MIXED unit, an error will occur. For more information, see UMeasureUnitComplexity.\n+ *\/\n+Convertibility U_I18N_API extractConvertibility(const MeasureUnitImpl &source,\n+                                                const MeasureUnitImpl &target,\n+                                                const ConversionRates &conversionRates,\n+                                                UErrorCode &status);\n+\n+\/**\n+ * Converts from a source `MeasureUnit` to a target `MeasureUnit`.\n+ *\n+ * NOTE:\n+ *    Only works with SINGLE and COMPOUND units. If one of the units is a\n+ *    MIXED unit, an error will occur. For more information, see UMeasureUnitComplexity.\n+ *\/\n+class U_I18N_API UnitConverter : public UMemory {\n+  public:\n+    \/**\n+     * Constructor of `UnitConverter`.\n+     * NOTE:\n+     *   - source and target must be under the same category\n+     *      - e.g. meter to mile --> both of them are length units.\n+     *\n+     * @param source represents the source unit.\n+     * @param target represents the target unit.\n+     * @param ratesInfo Contains all the needed conversion rates.\n+     * @param status\n+     *\/\n+    UnitConverter(const MeasureUnitImpl &source, const MeasureUnitImpl &target,\n+                  const ConversionRates &ratesInfo, UErrorCode &status);\n+\n+    \/**\n+     * Convert a measurement expressed in the source unit to a measurement\n+     * expressed in the target unit.\n+     *\n+     * @param inputValue the value to be converted.\n+     * @return the converted value.\n+     *\/\n+    double convert(double inputValue) const;\n+\n+    \/**\n+     * The inverse of convert(): convert a measurement expressed in the target\n+     * unit to a measurement expressed in the source unit.\n+     *\n+     * @param inputValue the value to be converted.\n+     * @return the converted value.\n+     *\/\n+    double convertInverse(double inputValue) const;\n+\n+  private:\n+    ConversionRate conversionRate_;\n+};\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/\/__UNITS_CONVERTER_H__\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_converter.h","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"},{"patch":"@@ -0,0 +1,428 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"cstring.h\"\n+#include \"number_decimalquantity.h\"\n+#include \"resource.h\"\n+#include \"uassert.h\"\n+#include \"unicode\/unistr.h\"\n+#include \"unicode\/ures.h\"\n+#include \"units_data.h\"\n+#include \"uresimp.h\"\n+#include \"util.h\"\n+#include <utility>\n+\n+U_NAMESPACE_BEGIN\n+namespace units {\n+\n+namespace {\n+\n+using icu::number::impl::DecimalQuantity;\n+\n+void trimSpaces(CharString& factor, UErrorCode& status){\n+   CharString trimmed;\n+   for (int i = 0 ; i < factor.length(); i++) {\n+       if (factor[i] == ' ') continue;\n+\n+       trimmed.append(factor[i], status);\n+   }\n+\n+   factor = std::move(trimmed);\n+}\n+\n+\/**\n+ * A ResourceSink that collects conversion rate information.\n+ *\n+ * This class is for use by ures_getAllItemsWithFallback.\n+ *\/\n+class ConversionRateDataSink : public ResourceSink {\n+  public:\n+    \/**\n+     * Constructor.\n+     * @param out The vector to which ConversionRateInfo instances are to be\n+     * added. This vector must outlive the use of the ResourceSink.\n+     *\/\n+    explicit ConversionRateDataSink(MaybeStackVector<ConversionRateInfo> *out) : outVector(out) {}\n+\n+    \/**\n+     * Method for use by `ures_getAllItemsWithFallback`. Adds the unit\n+     * conversion rates that are found in `value` to the output vector.\n+     *\n+     * @param source This string must be \"convertUnits\": the resource that this\n+     * class supports reading.\n+     * @param value The \"convertUnits\" resource, containing unit conversion rate\n+     * information.\n+     * @param noFallback Ignored.\n+     * @param status The standard ICU error code output parameter.\n+     *\/\n+    void put(const char *source, ResourceValue &value, UBool \/*noFallback*\/, UErrorCode &status) {\n+        if (U_FAILURE(status)) { return; }\n+        if (uprv_strcmp(source, \"convertUnits\") != 0) {\n+            \/\/ This is very strict, however it is the cheapest way to be sure\n+            \/\/ that with `value`, we're looking at the convertUnits table.\n+            status = U_ILLEGAL_ARGUMENT_ERROR;\n+            return;\n+        }\n+        ResourceTable conversionRateTable = value.getTable(status);\n+        const char *srcUnit;\n+        \/\/ We're reusing `value`, which seems to be a common pattern:\n+        for (int32_t unit = 0; conversionRateTable.getKeyAndValue(unit, srcUnit, value); unit++) {\n+            ResourceTable unitTable = value.getTable(status);\n+            const char *key;\n+            UnicodeString baseUnit = ICU_Utility::makeBogusString();\n+            UnicodeString factor = ICU_Utility::makeBogusString();\n+            UnicodeString offset = ICU_Utility::makeBogusString();\n+            for (int32_t i = 0; unitTable.getKeyAndValue(i, key, value); i++) {\n+                if (uprv_strcmp(key, \"target\") == 0) {\n+                    baseUnit = value.getUnicodeString(status);\n+                } else if (uprv_strcmp(key, \"factor\") == 0) {\n+                    factor = value.getUnicodeString(status);\n+                } else if (uprv_strcmp(key, \"offset\") == 0) {\n+                    offset = value.getUnicodeString(status);\n+                }\n+            }\n+            if (U_FAILURE(status)) { return; }\n+            if (baseUnit.isBogus() || factor.isBogus()) {\n+                \/\/ We could not find a usable conversion rate: bad resource.\n+                status = U_MISSING_RESOURCE_ERROR;\n+                return;\n+            }\n+\n+            \/\/ We don't have this ConversionRateInfo yet: add it.\n+            ConversionRateInfo *cr = outVector->emplaceBack();\n+            if (!cr) {\n+                status = U_MEMORY_ALLOCATION_ERROR;\n+                return;\n+            } else {\n+                cr->sourceUnit.append(srcUnit, status);\n+                cr->baseUnit.appendInvariantChars(baseUnit, status);\n+                cr->factor.appendInvariantChars(factor, status);\n+                trimSpaces(cr->factor, status);\n+                if (!offset.isBogus()) cr->offset.appendInvariantChars(offset, status);\n+            }\n+        }\n+        return;\n+    }\n+\n+  private:\n+    MaybeStackVector<ConversionRateInfo> *outVector;\n+};\n+\n+bool operator<(const UnitPreferenceMetadata &a, const UnitPreferenceMetadata &b) {\n+    return a.compareTo(b) < 0;\n+}\n+\n+\/**\n+ * A ResourceSink that collects unit preferences information.\n+ *\n+ * This class is for use by ures_getAllItemsWithFallback.\n+ *\/\n+class UnitPreferencesSink : public ResourceSink {\n+  public:\n+    \/**\n+     * Constructor.\n+     * @param outPrefs The vector to which UnitPreference instances are to be\n+     * added. This vector must outlive the use of the ResourceSink.\n+     * @param outMetadata  The vector to which UnitPreferenceMetadata instances\n+     * are to be added. This vector must outlive the use of the ResourceSink.\n+     *\/\n+    explicit UnitPreferencesSink(MaybeStackVector<UnitPreference> *outPrefs,\n+                                 MaybeStackVector<UnitPreferenceMetadata> *outMetadata)\n+        : preferences(outPrefs), metadata(outMetadata) {}\n+\n+    \/**\n+     * Method for use by `ures_getAllItemsWithFallback`. Adds the unit\n+     * preferences info that are found in `value` to the output vector.\n+     *\n+     * @param source This string must be \"unitPreferenceData\": the resource that\n+     * this class supports reading.\n+     * @param value The \"unitPreferenceData\" resource, containing unit\n+     * preferences data.\n+     * @param noFallback Ignored.\n+     * @param status The standard ICU error code output parameter. Note: if an\n+     * error is returned, outPrefs and outMetadata may be inconsistent.\n+     *\/\n+    void put(const char *key, ResourceValue &value, UBool \/*noFallback*\/, UErrorCode &status) {\n+        if (U_FAILURE(status)) { return; }\n+        if (uprv_strcmp(key, \"unitPreferenceData\") != 0) {\n+            \/\/ This is very strict, however it is the cheapest way to be sure\n+            \/\/ that with `value`, we're looking at the convertUnits table.\n+            status = U_ILLEGAL_ARGUMENT_ERROR;\n+            return;\n+        }\n+        \/\/ The unitPreferenceData structure (see data\/misc\/units.txt) contains a\n+        \/\/ hierarchy of category\/usage\/region, within which are a set of\n+        \/\/ preferences. Hence three for-loops and another loop for the\n+        \/\/ preferences themselves:\n+        ResourceTable unitPreferenceDataTable = value.getTable(status);\n+        const char *category;\n+        for (int32_t i = 0; unitPreferenceDataTable.getKeyAndValue(i, category, value); i++) {\n+            ResourceTable categoryTable = value.getTable(status);\n+            const char *usage;\n+            for (int32_t j = 0; categoryTable.getKeyAndValue(j, usage, value); j++) {\n+                ResourceTable regionTable = value.getTable(status);\n+                const char *region;\n+                for (int32_t k = 0; regionTable.getKeyAndValue(k, region, value); k++) {\n+                    \/\/ `value` now contains the set of preferences for\n+                    \/\/ category\/usage\/region.\n+                    ResourceArray unitPrefs = value.getArray(status);\n+                    if (U_FAILURE(status)) { return; }\n+                    int32_t prefLen = unitPrefs.getSize();\n+\n+                    \/\/ Update metadata for this set of preferences.\n+                    UnitPreferenceMetadata *meta = metadata->emplaceBack(\n+                        category, usage, region, preferences->length(), prefLen, status);\n+                    if (!meta) {\n+                        status = U_MEMORY_ALLOCATION_ERROR;\n+                        return;\n+                    }\n+                    if (U_FAILURE(status)) { return; }\n+                    if (metadata->length() > 1) {\n+                        \/\/ Verify that unit preferences are sorted and\n+                        \/\/ without duplicates.\n+                        if (!(*(*metadata)[metadata->length() - 2] <\n+                              *(*metadata)[metadata->length() - 1])) {\n+                            status = U_INVALID_FORMAT_ERROR;\n+                            return;\n+                        }\n+                    }\n+\n+                    \/\/ Collect the individual preferences.\n+                    for (int32_t i = 0; unitPrefs.getValue(i, value); i++) {\n+                        UnitPreference *up = preferences->emplaceBack();\n+                        if (!up) {\n+                            status = U_MEMORY_ALLOCATION_ERROR;\n+                            return;\n+                        }\n+                        ResourceTable unitPref = value.getTable(status);\n+                        if (U_FAILURE(status)) { return; }\n+                        for (int32_t i = 0; unitPref.getKeyAndValue(i, key, value); ++i) {\n+                            if (uprv_strcmp(key, \"unit\") == 0) {\n+                                int32_t length;\n+                                const UChar *u = value.getString(length, status);\n+                                up->unit.appendInvariantChars(u, length, status);\n+                            } else if (uprv_strcmp(key, \"geq\") == 0) {\n+                                int32_t length;\n+                                const UChar *g = value.getString(length, status);\n+                                CharString geq;\n+                                geq.appendInvariantChars(g, length, status);\n+                                DecimalQuantity dq;\n+                                dq.setToDecNumber(geq.data(), status);\n+                                up->geq = dq.toDouble();\n+                            } else if (uprv_strcmp(key, \"skeleton\") == 0) {\n+                                up->skeleton = value.getUnicodeString(status);\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+  private:\n+    MaybeStackVector<UnitPreference> *preferences;\n+    MaybeStackVector<UnitPreferenceMetadata> *metadata;\n+};\n+\n+int32_t binarySearch(const MaybeStackVector<UnitPreferenceMetadata> *metadata,\n+                     const UnitPreferenceMetadata &desired, bool *foundCategory, bool *foundUsage,\n+                     bool *foundRegion, UErrorCode &status) {\n+    if (U_FAILURE(status)) { return -1; }\n+    int32_t start = 0;\n+    int32_t end = metadata->length();\n+    *foundCategory = false;\n+    *foundUsage = false;\n+    *foundRegion = false;\n+    while (start < end) {\n+        int32_t mid = (start + end) \/ 2;\n+        int32_t cmp = (*metadata)[mid]->compareTo(desired, foundCategory, foundUsage, foundRegion);\n+        if (cmp < 0) {\n+            start = mid + 1;\n+        } else if (cmp > 0) {\n+            end = mid;\n+        } else {\n+            return mid;\n+        }\n+    }\n+    return -1;\n+}\n+\n+\/**\n+ * Finds the UnitPreferenceMetadata instance that matches the given category,\n+ * usage and region: if missing, region falls back to \"001\", and usage\n+ * repeatedly drops tailing components, eventually trying \"default\"\n+ * (\"land-agriculture-grain\" -> \"land-agriculture\" -> \"land\" -> \"default\").\n+ *\n+ * @param metadata The full list of UnitPreferenceMetadata instances.\n+ * @param category The category to search for. See getUnitCategory().\n+ * @param usage The usage for which formatting preferences is needed. If the\n+ * given usage is not known, automatic fallback occurs, see function description\n+ * above.\n+ * @param region The region for which preferences are needed. If there are no\n+ * region-specific preferences, this function automatically falls back to the\n+ * \"001\" region (global).\n+ * @param status The standard ICU error code output parameter.\n+ *   * If an invalid category is given, status will be U_ILLEGAL_ARGUMENT_ERROR.\n+ *   * If fallback to \"default\" or \"001\" didn't resolve, status will be\n+ *     U_MISSING_RESOURCE.\n+ * @return The index into the metadata vector which represents the appropriate\n+ * preferences. If appropriate preferences are not found, -1 is returned.\n+ *\/\n+int32_t getPreferenceMetadataIndex(const MaybeStackVector<UnitPreferenceMetadata> *metadata,\n+                                   StringPiece category, StringPiece usage, StringPiece region,\n+                                   UErrorCode &status) {\n+    if (U_FAILURE(status)) { return -1; }\n+    bool foundCategory, foundUsage, foundRegion;\n+    UnitPreferenceMetadata desired(category, usage, region, -1, -1, status);\n+    int32_t idx = binarySearch(metadata, desired, &foundCategory, &foundUsage, &foundRegion, status);\n+    if (U_FAILURE(status)) { return -1; }\n+    if (idx >= 0) { return idx; }\n+    if (!foundCategory) {\n+        status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return -1;\n+    }\n+    U_ASSERT(foundCategory);\n+    while (!foundUsage) {\n+        int32_t lastDashIdx = desired.usage.lastIndexOf('-');\n+        if (lastDashIdx > 0) {\n+            desired.usage.truncate(lastDashIdx);\n+        } else if (uprv_strcmp(desired.usage.data(), \"default\") != 0) {\n+            desired.usage.truncate(0).append(\"default\", status);\n+        } else {\n+            \/\/ \"default\" is not supposed to be missing for any valid category.\n+            status = U_MISSING_RESOURCE_ERROR;\n+            return -1;\n+        }\n+        idx = binarySearch(metadata, desired, &foundCategory, &foundUsage, &foundRegion, status);\n+        if (U_FAILURE(status)) { return -1; }\n+    }\n+    U_ASSERT(foundCategory);\n+    U_ASSERT(foundUsage);\n+    if (!foundRegion) {\n+        if (uprv_strcmp(desired.region.data(), \"001\") != 0) {\n+            desired.region.truncate(0).append(\"001\", status);\n+            idx = binarySearch(metadata, desired, &foundCategory, &foundUsage, &foundRegion, status);\n+        }\n+        if (!foundRegion) {\n+            \/\/ \"001\" is not supposed to be missing for any valid usage.\n+            status = U_MISSING_RESOURCE_ERROR;\n+            return -1;\n+        }\n+    }\n+    U_ASSERT(foundCategory);\n+    U_ASSERT(foundUsage);\n+    U_ASSERT(foundRegion);\n+    U_ASSERT(idx >= 0);\n+    return idx;\n+}\n+\n+} \/\/ namespace\n+\n+UnitPreferenceMetadata::UnitPreferenceMetadata(StringPiece category, StringPiece usage,\n+                                               StringPiece region, int32_t prefsOffset,\n+                                               int32_t prefsCount, UErrorCode &status) {\n+    this->category.append(category, status);\n+    this->usage.append(usage, status);\n+    this->region.append(region, status);\n+    this->prefsOffset = prefsOffset;\n+    this->prefsCount = prefsCount;\n+}\n+\n+int32_t UnitPreferenceMetadata::compareTo(const UnitPreferenceMetadata &other) const {\n+    int32_t cmp = uprv_strcmp(category.data(), other.category.data());\n+    if (cmp == 0) {\n+        cmp = uprv_strcmp(usage.data(), other.usage.data());\n+    }\n+    if (cmp == 0) {\n+        cmp = uprv_strcmp(region.data(), other.region.data());\n+    }\n+    return cmp;\n+}\n+\n+int32_t UnitPreferenceMetadata::compareTo(const UnitPreferenceMetadata &other, bool *foundCategory,\n+                                          bool *foundUsage, bool *foundRegion) const {\n+    int32_t cmp = uprv_strcmp(category.data(), other.category.data());\n+    if (cmp == 0) {\n+        *foundCategory = true;\n+        cmp = uprv_strcmp(usage.data(), other.usage.data());\n+    }\n+    if (cmp == 0) {\n+        *foundUsage = true;\n+        cmp = uprv_strcmp(region.data(), other.region.data());\n+    }\n+    if (cmp == 0) {\n+        *foundRegion = true;\n+    }\n+    return cmp;\n+}\n+\n+CharString U_I18N_API getUnitCategory(const char *baseUnitIdentifier, UErrorCode &status) {\n+    CharString result;\n+    LocalUResourceBundlePointer unitsBundle(ures_openDirect(NULL, \"units\", &status));\n+    LocalUResourceBundlePointer unitQuantities(\n+        ures_getByKey(unitsBundle.getAlias(), \"unitQuantities\", NULL, &status));\n+    int32_t categoryLength;\n+    if (U_FAILURE(status)) { return result; }\n+    const UChar *uCategory =\n+        ures_getStringByKey(unitQuantities.getAlias(), baseUnitIdentifier, &categoryLength, &status);\n+    if (U_FAILURE(status)) {\n+        \/\/ TODO(CLDR-13787,hugovdm): special-casing the consumption-inverse\n+        \/\/ case. Once CLDR-13787 is clarified, this should be generalised (or\n+        \/\/ possibly removed):\n+        if (uprv_strcmp(baseUnitIdentifier, \"meter-per-cubic-meter\") == 0) {\n+            status = U_ZERO_ERROR;\n+            result.append(\"consumption-inverse\", status);\n+            return result;\n+        }\n+    }\n+    result.appendInvariantChars(uCategory, categoryLength, status);\n+    return result;\n+}\n+\n+\/\/ TODO: this may be unnecessary. Fold into ConversionRates class? Or move to anonymous namespace?\n+void U_I18N_API getAllConversionRates(MaybeStackVector<ConversionRateInfo> &result, UErrorCode &status) {\n+    LocalUResourceBundlePointer unitsBundle(ures_openDirect(NULL, \"units\", &status));\n+    ConversionRateDataSink sink(&result);\n+    ures_getAllItemsWithFallback(unitsBundle.getAlias(), \"convertUnits\", sink, status);\n+}\n+\n+const ConversionRateInfo *ConversionRates::extractConversionInfo(StringPiece source,\n+                                                                 UErrorCode &status) const {\n+    for (size_t i = 0, n = conversionInfo_.length(); i < n; ++i) {\n+        if (conversionInfo_[i]->sourceUnit.toStringPiece() == source) return conversionInfo_[i];\n+    }\n+\n+    status = U_INTERNAL_PROGRAM_ERROR;\n+    return nullptr;\n+}\n+\n+U_I18N_API UnitPreferences::UnitPreferences(UErrorCode &status) {\n+    LocalUResourceBundlePointer unitsBundle(ures_openDirect(NULL, \"units\", &status));\n+    UnitPreferencesSink sink(&unitPrefs_, &metadata_);\n+    ures_getAllItemsWithFallback(unitsBundle.getAlias(), \"unitPreferenceData\", sink, status);\n+}\n+\n+\/\/ TODO: make outPreferences const?\n+\/\/\n+\/\/ TODO: consider replacing `UnitPreference **&outPreferences` with slice class\n+\/\/ of some kind.\n+void U_I18N_API UnitPreferences::getPreferencesFor(StringPiece category, StringPiece usage,\n+                                                   StringPiece region,\n+                                                   const UnitPreference *const *&outPreferences,\n+                                                   int32_t &preferenceCount, UErrorCode &status) const {\n+    int32_t idx = getPreferenceMetadataIndex(&metadata_, category, usage, region, status);\n+    if (U_FAILURE(status)) { return; }\n+    U_ASSERT(idx >= 0); \/\/ Failures should have been taken care of by `status`.\n+    const UnitPreferenceMetadata *m = metadata_[idx];\n+    outPreferences = unitPrefs_.getAlias() + m->prefsOffset;\n+    preferenceCount = m->prefsCount;\n+}\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_data.cpp","additions":428,"deletions":0,"binary":false,"changes":428,"status":"added"},{"patch":"@@ -0,0 +1,229 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __UNITS_DATA_H__\n+#define __UNITS_DATA_H__\n+\n+#include <limits>\n+\n+#include \"charstr.h\"\n+#include \"cmemory.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+\n+U_NAMESPACE_BEGIN\n+namespace units {\n+\n+\/**\n+ * Looks up the unit category of a base unit identifier.\n+ *\n+ * Only supports base units, other units must be resolved to base units before\n+ * passing to this function.\n+ *\n+ * Categories are found in `unitQuantities` in the `units` resource (see\n+ * `units.txt`).\n+ *\n+ * TODO(hugovdm): if we give units_data.cpp access to the functionality of\n+ * `extractCompoundBaseUnit` which is currently in units_converter.cpp, we could\n+ * support all units for which there is a category. Does it make sense to move\n+ * that function to units_data.cpp?\n+ *\/\n+CharString U_I18N_API getUnitCategory(const char *baseUnitIdentifier, UErrorCode &status);\n+\n+\/**\n+ * Encapsulates \"convertUnits\" information from units resources, specifying how\n+ * to convert from one unit to another.\n+ *\n+ * Information in this class is still in the form of strings: symbolic constants\n+ * need to be interpreted. Rationale: symbols can cancel out for higher\n+ * precision conversion - going from feet to inches should cancel out the\n+ * `ft_to_m` constant.\n+ *\/\n+class U_I18N_API ConversionRateInfo : public UMemory {\n+  public:\n+    ConversionRateInfo() {}\n+    ConversionRateInfo(StringPiece sourceUnit, StringPiece baseUnit, StringPiece factor,\n+                       StringPiece offset, UErrorCode &status)\n+        : sourceUnit(), baseUnit(), factor(), offset() {\n+        this->sourceUnit.append(sourceUnit, status);\n+        this->baseUnit.append(baseUnit, status);\n+        this->factor.append(factor, status);\n+        this->offset.append(offset, status);\n+    }\n+    CharString sourceUnit;\n+    CharString baseUnit;\n+    CharString factor;\n+    CharString offset;\n+};\n+\n+} \/\/ namespace units\n+\n+\/\/ Export explicit template instantiations of MaybeStackArray, MemoryPool and\n+\/\/ MaybeStackVector. This is required when building DLLs for Windows. (See\n+\/\/ datefmt.h, collationiterator.h, erarules.h and others for similar examples.)\n+\/\/\n+\/\/ Note: These need to be outside of the units namespace, or Clang will generate\n+\/\/ a compile error.\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+template class U_I18N_API MaybeStackArray<units::ConversionRateInfo*, 8>;\n+template class U_I18N_API MemoryPool<units::ConversionRateInfo, 8>;\n+template class U_I18N_API MaybeStackVector<units::ConversionRateInfo, 8>;\n+#endif\n+\n+namespace units {\n+\n+\/**\n+ * Returns ConversionRateInfo for all supported conversions.\n+ *\n+ * @param result Receives the set of conversion rates.\n+ * @param status Receives status.\n+ *\/\n+void U_I18N_API getAllConversionRates(MaybeStackVector<ConversionRateInfo> &result, UErrorCode &status);\n+\n+\/**\n+ * Contains all the supported conversion rates.\n+ *\/\n+class U_I18N_API ConversionRates {\n+  public:\n+    \/**\n+     * Constructor\n+     *\n+     * @param status Receives status.\n+     *\/\n+    ConversionRates(UErrorCode &status) { getAllConversionRates(conversionInfo_, status); }\n+\n+    \/**\n+     * Returns a pointer to the conversion rate info that match the `source`.\n+     *\n+     * @param source Contains the source.\n+     * @param status Receives status.\n+     *\/\n+    const ConversionRateInfo *extractConversionInfo(StringPiece source, UErrorCode &status) const;\n+\n+  private:\n+    MaybeStackVector<ConversionRateInfo> conversionInfo_;\n+};\n+\n+\/\/ Encapsulates unitPreferenceData information from units resources, specifying\n+\/\/ a sequence of output unit preferences.\n+struct U_I18N_API UnitPreference : public UMemory {\n+    \/\/ Set geq to 1.0 by default\n+    UnitPreference() : geq(1.0) {}\n+    CharString unit;\n+    double geq;\n+    UnicodeString skeleton;\n+};\n+\n+\/**\n+ * Metadata about the preferences in UnitPreferences::unitPrefs_.\n+ *\n+ * This class owns all of its data.\n+ *\n+ * UnitPreferenceMetadata lives in the anonymous namespace, because it should\n+ * only be useful to internal code and unit testing code.\n+ *\/\n+class U_I18N_API UnitPreferenceMetadata : public UMemory {\n+  public:\n+    UnitPreferenceMetadata() {}\n+    \/\/ Constructor, makes copies of the parameters passed to it.\n+    UnitPreferenceMetadata(StringPiece category, StringPiece usage, StringPiece region,\n+                           int32_t prefsOffset, int32_t prefsCount, UErrorCode &status);\n+\n+    \/\/ Unit category (e.g. \"length\", \"mass\", \"electric-capacitance\").\n+    CharString category;\n+    \/\/ Usage (e.g. \"road\", \"vehicle-fuel\", \"blood-glucose\"). Every category\n+    \/\/ should have an entry for \"default\" usage. TODO(hugovdm): add a test for\n+    \/\/ this.\n+    CharString usage;\n+    \/\/ Region code (e.g. \"US\", \"CZ\", \"001\"). Every usage should have an entry\n+    \/\/ for the \"001\" region (\"world\"). TODO(hugovdm): add a test for this.\n+    CharString region;\n+    \/\/ Offset into the UnitPreferences::unitPrefs_ list where the relevant\n+    \/\/ preferences are found.\n+    int32_t prefsOffset;\n+    \/\/ The number of preferences that form this set.\n+    int32_t prefsCount;\n+\n+    int32_t compareTo(const UnitPreferenceMetadata &other) const;\n+    int32_t compareTo(const UnitPreferenceMetadata &other, bool *foundCategory, bool *foundUsage,\n+                      bool *foundRegion) const;\n+};\n+\n+} \/\/ namespace units\n+\n+\/\/ Export explicit template instantiations of MaybeStackArray, MemoryPool and\n+\/\/ MaybeStackVector. This is required when building DLLs for Windows. (See\n+\/\/ datefmt.h, collationiterator.h, erarules.h and others for similar examples.)\n+\/\/\n+\/\/ Note: These need to be outside of the units namespace, or Clang will generate\n+\/\/ a compile error.\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+template class U_I18N_API MaybeStackArray<units::UnitPreferenceMetadata*, 8>;\n+template class U_I18N_API MemoryPool<units::UnitPreferenceMetadata, 8>;\n+template class U_I18N_API MaybeStackVector<units::UnitPreferenceMetadata, 8>;\n+template class U_I18N_API MaybeStackArray<units::UnitPreference*, 8>;\n+template class U_I18N_API MemoryPool<units::UnitPreference, 8>;\n+template class U_I18N_API MaybeStackVector<units::UnitPreference, 8>;\n+#endif\n+\n+namespace units {\n+\n+\/**\n+ * Unit Preferences information for various locales and usages.\n+ *\/\n+class U_I18N_API UnitPreferences {\n+  public:\n+    \/**\n+     * Constructor, loads all the preference data.\n+     *\n+     * @param status Receives status.\n+     *\/\n+    UnitPreferences(UErrorCode &status);\n+\n+    \/**\n+     * Returns the set of unit preferences in the particular category that best\n+     * matches the specified usage and region.\n+     *\n+     * If region can't be found, falls back to global (001). If usage can't be\n+     * found, falls back to \"default\".\n+     *\n+     * @param category The category within which to look up usage and region.\n+     * (TODO(hugovdm): improve docs on how to find the category, once the lookup\n+     * function is added.)\n+     * @param usage The usage parameter. (TODO(hugovdm): improve this\n+     * documentation. Add reference to some list of usages we support.) If the\n+     * given usage is not found, the method automatically falls back to\n+     * \"default\".\n+     * @param region The region whose preferences are desired. If there are no\n+     * specific preferences for the requested region, the method automatically\n+     * falls back to region \"001\" (\"world\").\n+     * @param outPreferences A pointer into an array of preferences: essentially\n+     * an array slice in combination with preferenceCount.\n+     * @param preferenceCount The number of unit preferences that belong to the\n+     * result set.\n+     * @param status Receives status.\n+     *\n+     * TODO(hugovdm): maybe replace `UnitPreference **&outPreferences` with a slice class?\n+     *\/\n+    void getPreferencesFor(StringPiece category, StringPiece usage, StringPiece region,\n+                           const UnitPreference *const *&outPreferences, int32_t &preferenceCount,\n+                           UErrorCode &status) const;\n+\n+  protected:\n+    \/\/ Metadata about the sets of preferences, this is the index for looking up\n+    \/\/ preferences in the unitPrefs_ list.\n+    MaybeStackVector<UnitPreferenceMetadata> metadata_;\n+    \/\/ All the preferences as a flat list: which usage and region preferences\n+    \/\/ are associated with is stored in `metadata_`.\n+    MaybeStackVector<UnitPreference> unitPrefs_;\n+};\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/\/__UNITS_DATA_H__\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_data.h","additions":229,"deletions":0,"binary":false,"changes":229,"status":"added"},{"patch":"@@ -0,0 +1,132 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+\n+#include \"charstr.h\"\n+#include \"cmemory.h\"\n+#include \"cstring.h\"\n+#include \"measunit_impl.h\"\n+#include \"number_decimalquantity.h\"\n+#include \"number_roundingutils.h\"\n+#include \"resource.h\"\n+#include \"unicode\/measure.h\"\n+#include \"units_data.h\"\n+#include \"units_router.h\"\n+#include <cmath>\n+\n+U_NAMESPACE_BEGIN\n+namespace units {\n+\n+using number::Precision;\n+using number::impl::parseIncrementOption;\n+\n+Precision UnitsRouter::parseSkeletonToPrecision(icu::UnicodeString precisionSkeleton,\n+                                                UErrorCode &status) {\n+    if (U_FAILURE(status)) {\n+        \/\/ As a member of UsagePrefsHandler, which is a friend of Precision, we\n+        \/\/ get access to the default constructor.\n+        return {};\n+    }\n+    constexpr int32_t kSkelPrefixLen = 20;\n+    if (!precisionSkeleton.startsWith(UNICODE_STRING_SIMPLE(\"precision-increment\/\"))) {\n+        status = U_INVALID_FORMAT_ERROR;\n+        return {};\n+    }\n+    U_ASSERT(precisionSkeleton[kSkelPrefixLen - 1] == u'\/');\n+    StringSegment segment(precisionSkeleton, false);\n+    segment.adjustOffset(kSkelPrefixLen);\n+    Precision result;\n+    parseIncrementOption(segment, result, status);\n+    return result;\n+}\n+\n+UnitsRouter::UnitsRouter(MeasureUnit inputUnit, StringPiece region, StringPiece usage,\n+                         UErrorCode &status) {\n+    \/\/ TODO: do we want to pass in ConversionRates and UnitPreferences instead\n+    \/\/ of loading in each UnitsRouter instance? (Or make global?)\n+    ConversionRates conversionRates(status);\n+    UnitPreferences prefs(status);\n+\n+    MeasureUnitImpl inputUnitImpl = MeasureUnitImpl::forMeasureUnitMaybeCopy(inputUnit, status);\n+    MeasureUnit baseUnit =\n+        (extractCompoundBaseUnit(inputUnitImpl, conversionRates, status)).build(status);\n+    CharString category = getUnitCategory(baseUnit.getIdentifier(), status);\n+\n+    const UnitPreference *const *unitPreferences;\n+    int32_t preferencesCount;\n+    prefs.getPreferencesFor(category.data(), usage, region, unitPreferences, preferencesCount, status);\n+\n+    for (int i = 0; i < preferencesCount; ++i) {\n+        const auto &preference = *unitPreferences[i];\n+\n+        MeasureUnitImpl complexTargetUnitImpl =\n+            MeasureUnitImpl::forIdentifier(preference.unit.data(), status);\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+\n+        UnicodeString precision = preference.skeleton;\n+\n+        \/\/ For now, we only have \"precision-increment\" in Units Preferences skeleton.\n+        \/\/ Therefore, we check if the skeleton starts with \"precision-increment\" and force the program to\n+        \/\/ fail otherwise.\n+        \/\/ NOTE:\n+        \/\/  It is allowed to have an empty precision.\n+        if (!precision.isEmpty() && !precision.startsWith(u\"precision-increment\", 19)) {\n+            status = U_INTERNAL_PROGRAM_ERROR;\n+            return;\n+        }\n+\n+        outputUnits_.emplaceBackAndCheckErrorCode(status,\n+                                                  complexTargetUnitImpl.copy(status).build(status));\n+        converterPreferences_.emplaceBackAndCheckErrorCode(status, inputUnitImpl, complexTargetUnitImpl,\n+                                                           preference.geq, std::move(precision),\n+                                                           conversionRates, status);\n+\n+        if (U_FAILURE(status)) {\n+            return;\n+        }\n+    }\n+}\n+\n+RouteResult UnitsRouter::route(double quantity, icu::number::impl::RoundingImpl *rounder, UErrorCode &status) const {\n+    \/\/ Find the matching preference\n+    const ConverterPreference *converterPreference = nullptr;\n+    for (int32_t i = 0, n = converterPreferences_.length(); i < n; i++) {\n+        converterPreference = converterPreferences_[i];\n+        if (converterPreference->converter.greaterThanOrEqual(std::abs(quantity) * (1 + DBL_EPSILON),\n+                                                              converterPreference->limit)) {\n+            break;\n+        }\n+    }\n+    U_ASSERT(converterPreference != nullptr);\n+\n+    \/\/ Set up the rounder for this preference's precision\n+    if (rounder != nullptr && rounder->fPrecision.isBogus()) {\n+        if (converterPreference->precision.length() > 0) {\n+            rounder->fPrecision = parseSkeletonToPrecision(converterPreference->precision, status);\n+        } else {\n+            \/\/ We use the same rounding mode as COMPACT notation: known to be a\n+            \/\/ human-friendly rounding mode: integers, but add a decimal digit\n+            \/\/ as needed to ensure we have at least 2 significant digits.\n+            rounder->fPrecision = Precision::integer().withMinDigits(2);\n+        }\n+    }\n+\n+    return RouteResult(converterPreference->converter.convert(quantity, rounder, status),\n+                       converterPreference->targetUnit.copy(status));\n+}\n+\n+const MaybeStackVector<MeasureUnit> *UnitsRouter::getOutputUnits() const {\n+    \/\/ TODO: consider pulling this from converterPreferences_ and dropping\n+    \/\/ outputUnits_?\n+    return &outputUnits_;\n+}\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_router.cpp","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"},{"patch":"@@ -0,0 +1,162 @@\n+\/\/ © 2020 and later: Unicode, Inc. and others.\n+\/\/ License & terms of use: http:\/\/www.unicode.org\/copyright.html\n+\n+#include \"unicode\/utypes.h\"\n+\n+#if !UCONFIG_NO_FORMATTING\n+#ifndef __UNITS_ROUTER_H__\n+#define __UNITS_ROUTER_H__\n+\n+#include <limits>\n+\n+#include \"cmemory.h\"\n+#include \"measunit_impl.h\"\n+#include \"unicode\/measunit.h\"\n+#include \"unicode\/stringpiece.h\"\n+#include \"unicode\/uobject.h\"\n+#include \"units_complexconverter.h\"\n+#include \"units_data.h\"\n+\n+U_NAMESPACE_BEGIN\n+\n+\/\/ Forward declarations\n+class Measure;\n+namespace number {\n+class Precision;\n+}\n+\n+namespace units {\n+\n+struct RouteResult : UMemory {\n+    \/\/ A list of measures: a single measure for single units, multiple measures\n+    \/\/ for mixed units.\n+    \/\/\n+    \/\/ TODO(icu-units\/icu#21): figure out the right mixed unit API.\n+    MaybeStackVector<Measure> measures;\n+\n+    \/\/ The output unit for this RouteResult. This may be a MIXED unit - for\n+    \/\/ example: \"yard-and-foot-and-inch\", for which `measures` will have three\n+    \/\/ elements.\n+    MeasureUnitImpl outputUnit;\n+\n+    RouteResult(MaybeStackVector<Measure> measures, MeasureUnitImpl outputUnit)\n+        : measures(std::move(measures)), outputUnit(std::move(outputUnit)) {}\n+};\n+\n+\/**\n+ * Contains the complex unit converter and the limit which representing the smallest value that the\n+ * converter should accept. For example, if the converter is converting to `foot+inch` and the limit\n+ * equals 3.0, thus means the converter should not convert to a value less than `3.0 feet`.\n+ *\n+ * NOTE:\n+ *    if the limit doest not has a value `i.e. (std::numeric_limits<double>::lowest())`, this mean there\n+ *    is no limit for the converter.\n+ *\/\n+struct ConverterPreference : UMemory {\n+    ComplexUnitsConverter converter;\n+    double limit;\n+    UnicodeString precision;\n+\n+    \/\/ The output unit for this ConverterPreference. This may be a MIXED unit -\n+    \/\/ for example: \"yard-and-foot-and-inch\".\n+    MeasureUnitImpl targetUnit;\n+\n+    \/\/ In case there is no limit, the limit will be -inf.\n+    ConverterPreference(const MeasureUnitImpl &source, const MeasureUnitImpl &complexTarget,\n+                        UnicodeString precision, const ConversionRates &ratesInfo, UErrorCode &status)\n+        : ConverterPreference(source, complexTarget, std::numeric_limits<double>::lowest(), precision,\n+                              ratesInfo, status) {}\n+\n+    ConverterPreference(const MeasureUnitImpl &source, const MeasureUnitImpl &complexTarget,\n+                        double limit, UnicodeString precision, const ConversionRates &ratesInfo,\n+                        UErrorCode &status)\n+        : converter(source, complexTarget, ratesInfo, status), limit(limit),\n+          precision(std::move(precision)), targetUnit(complexTarget.copy(status)) {}\n+};\n+\n+} \/\/ namespace units\n+\n+\/\/ Export explicit template instantiations of MaybeStackArray, MemoryPool and\n+\/\/ MaybeStackVector. This is required when building DLLs for Windows. (See\n+\/\/ datefmt.h, collationiterator.h, erarules.h and others for similar examples.)\n+\/\/\n+\/\/ Note: These need to be outside of the units namespace, or Clang will generate\n+\/\/ a compile error.\n+#if U_PF_WINDOWS <= U_PLATFORM && U_PLATFORM <= U_PF_CYGWIN\n+template class U_I18N_API MaybeStackArray<units::ConverterPreference*, 8>;\n+template class U_I18N_API MemoryPool<units::ConverterPreference, 8>;\n+template class U_I18N_API MaybeStackVector<units::ConverterPreference, 8>;\n+#endif\n+\n+namespace units {\n+\n+\/**\n+ * `UnitsRouter` responsible for converting from a single unit (such as `meter` or `meter-per-second`) to\n+ * one of the complex units based on the limits.\n+ * For example:\n+ *    if the input is `meter` and the output as following\n+ *    {`foot+inch`, limit: 3.0}\n+ *    {`inch`     , limit: no value (-inf)}\n+ *    Thus means if the input in `meter` is greater than or equal to `3.0 feet`, the output will be in\n+ *    `foot+inch`, otherwise, the output will be in `inch`.\n+ *\n+ * NOTE:\n+ *    the output units and the their limits MUST BE in order, for example, if the output units, from the\n+ *    previous example, are the following:\n+ *        {`inch`     , limit: no value (-inf)}\n+ *        {`foot+inch`, limit: 3.0}\n+ *     IN THIS CASE THE OUTPUT WILL BE ALWAYS IN `inch`.\n+ *\n+ * NOTE:\n+ *    the output units  and their limits will be extracted from the units preferences database by knowing\n+ *    the followings:\n+ *        - input unit\n+ *        - locale\n+ *        - usage\n+ *\n+ * DESIGN:\n+ *    `UnitRouter` uses internally `ComplexUnitConverter` in order to convert the input units to the\n+ *    desired complex units and to check the limit too.\n+ *\/\n+class U_I18N_API UnitsRouter {\n+  public:\n+    UnitsRouter(MeasureUnit inputUnit, StringPiece locale, StringPiece usage, UErrorCode &status);\n+\n+    \/**\n+     * Performs locale and usage sensitive unit conversion.\n+     * @param quantity The quantity to convert, expressed in terms of inputUnit.\n+     * @param rounder If not null, this RoundingImpl will be used to do rounding\n+     *     on the converted value. If the rounder lacks an fPrecision, the\n+     *     rounder will be modified to use the preferred precision for the usage\n+     *     and locale preference, alternatively with the default precision.\n+     * @param status Receives status.\n+     *\/\n+    RouteResult route(double quantity, icu::number::impl::RoundingImpl *rounder, UErrorCode &status) const;\n+\n+    \/**\n+     * Returns the list of possible output units, i.e. the full set of\n+     * preferences, for the localized, usage-specific unit preferences.\n+     *\n+     * The returned pointer should be valid for the lifetime of the\n+     * UnitsRouter instance.\n+     *\/\n+    const MaybeStackVector<MeasureUnit> *getOutputUnits() const;\n+\n+  private:\n+    \/\/ List of possible output units. TODO: converterPreferences_ now also has\n+    \/\/ this data available. Maybe drop outputUnits_ and have getOutputUnits\n+    \/\/ construct a the list from data in converterPreferences_ instead?\n+    MaybeStackVector<MeasureUnit> outputUnits_;\n+\n+    MaybeStackVector<ConverterPreference> converterPreferences_;\n+\n+    static number::Precision parseSkeletonToPrecision(icu::UnicodeString precisionSkeleton,\n+                                                      UErrorCode &status);\n+};\n+\n+} \/\/ namespace units\n+U_NAMESPACE_END\n+\n+#endif \/\/__UNITS_ROUTER_H__\n+\n+#endif \/* #if !UCONFIG_NO_FORMATTING *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/units_router.h","additions":162,"deletions":0,"binary":false,"changes":162,"status":"added"},{"patch":"@@ -138,0 +138,5 @@\n+    if (U_FAILURE(*status) && retVal != NULL) {\n+        delete retVal;\n+        retVal = NULL;\n+    }\n+\n@@ -896,1 +901,1 @@\n-U_INTERNAL UFormattable * U_EXPORT2\n+U_CAPI UFormattable * U_EXPORT2\n@@ -920,1 +925,1 @@\n-U_INTERNAL int32_t U_EXPORT2\n+U_CAPI int32_t U_EXPORT2\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/unum.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+#include \"numrange_impl.h\"\n@@ -118,0 +119,19 @@\n+U_CAPI int32_t U_EXPORT2\n+uplrules_selectForRange(const UPluralRules *uplrules,\n+                const UFormattedNumberRange* urange,\n+                UChar *keyword, int32_t capacity,\n+                UErrorCode *status)\n+{\n+    if (U_FAILURE(*status)) {\n+        return 0;\n+    }\n+    if (keyword == NULL ? capacity != 0 : capacity < 0) {\n+        *status = U_ILLEGAL_ARGUMENT_ERROR;\n+        return 0;\n+    }\n+    const number::impl::UFormattedNumberRangeData* impl =\n+        number::impl::validateUFormattedNumberRange(urange, *status);\n+    UnicodeString result = ((PluralRules*)uplrules)->select(impl, *status);\n+    return result.extract(keyword, capacity, *status);\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/upluralrules.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1511,1 +1511,2 @@\n-                    groupNum = uhash_geti(regexp->fPat->fNamedCaptureMap, &groupName);\n+                    groupNum = regexp->fPat->fNamedCaptureMap ?\n+                            uhash_geti(regexp->fPat->fNamedCaptureMap, &groupName) : 0;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uregex.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-    uint16_t  offset      = 0;\n+    uint32_t  offset      = 0;\n@@ -391,1 +391,1 @@\n-    uint16_t  offset = 0;\n+    uint32_t  offset = 0;\n@@ -1354,1 +1354,1 @@\n-* @param source2length length of seond array\n+* @param source2length length of second array\n@@ -1563,1 +1563,1 @@\n-* a seperate preceding set of accents (seperated from the rearranged on by\n+* a separate preceding set of accents (separated from the rearranged on by\n@@ -2223,1 +2223,1 @@\n-* a seperate following set of accents (seperated from the rearranged on by\n+* a separate following set of accents (separated from the rearranged on by\n@@ -3547,1 +3547,6 @@\n-        UPRV_UNREACHABLE;\n+        U_ASSERT(FALSE);\n+        \/\/ TODO: In ICU 64 the above assert was changed to use UPRV_UNREACHABLE instead\n+        \/\/ which unconditionally calls abort(). However, there were cases where this was\n+        \/\/ being hit. This change is reverted for now, restoring the existing behavior.\n+        \/\/ ICU-20792 tracks the follow-up work\/further investigation on this.\n+        return NULL;\n@@ -3584,1 +3589,6 @@\n-        UPRV_UNREACHABLE;\n+        U_ASSERT(FALSE);\n+        \/\/ TODO: In ICU 64 the above assert was changed to use UPRV_UNREACHABLE instead\n+        \/\/ which unconditionally calls abort(). However, there were cases where this was\n+        \/\/ being hit. This change is reverted for now, restoring the existing behavior.\n+        \/\/ ICU-20792 tracks the follow-up work\/further investigation on this.\n+        return NULL;\n@@ -3855,1 +3865,1 @@\n-    \/\/  TODO:  should input indicies clip to the text length\n+    \/\/  TODO:  should input indices clip to the text length\n@@ -4017,1 +4027,1 @@\n-        \/\/   With exapnsions, the first CE will report the index of the source\n+        \/\/   With expansions, the first CE will report the index of the source\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/usearch.cpp","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -82,59 +82,60 @@\n-        u\"\\\\u0529\\\\u052E\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0560-\\\\u0586\\\\u0588\\\\u05B4\"\n-        u\"\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\u0620-\\\\u063F\\\\u0641-\\\\u0655\\\\u0660-\\\\u0669\"\n-        u\"\\\\u0670-\\\\u0672\\\\u0674\\\\u0679-\\\\u068D\\\\u068F-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\"\n-        u\"\\\\u06EE-\\\\u06FC\\\\u06FF\\\\u0750-\\\\u07B1\\\\u08A0-\\\\u08AC\\\\u08B2\\\\u08B6-\\\\u08BD\"\n-        u\"\\\\u0901-\\\\u094D\\\\u094F\\\\u0950\\\\u0956\\\\u0957\\\\u0960-\\\\u0963\\\\u0966-\\\\u096F\"\n-        u\"\\\\u0971-\\\\u0977\\\\u0979-\\\\u097F\\\\u0981-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\"\n-        u\"\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\"\n-        u\"\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09E0-\\\\u09E3\\\\u09E6-\\\\u09F1\\\\u09FC\\\\u09FE\"\n-        u\"\\\\u0A01-\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\"\n-        u\"\\\\u0A32\\\\u0A35\\\\u0A38\\\\u0A39\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\"\n-        u\"\\\\u0A4D\\\\u0A5C\\\\u0A66-\\\\u0A74\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\"\n-        u\"\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\"\n-        u\"\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AEF\\\\u0AFA-\"\n-        u\"\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\"\n-        u\"\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B43\\\\u0B47\\\\u0B48\\\\u0B4B-\"\n-        u\"\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B5F-\\\\u0B61\\\\u0B66-\\\\u0B6F\\\\u0B71\\\\u0B82\\\\u0B83\"\n-        u\"\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\"\n-        u\"\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\"\n-        u\"\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BEF\\\\u0C01-\\\\u0C0C\\\\u0C0E-\"\n-        u\"\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C3D-\\\\u0C44\\\\u0C46-\"\n-        u\"\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C60\\\\u0C61\\\\u0C66-\\\\u0C6F\\\\u0C80\"\n-        u\"\\\\u0C82\\\\u0C83\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\"\n-        u\"\\\\u0CB5-\\\\u0CB9\\\\u0CBC-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\"\n-        u\"\\\\u0CE0-\\\\u0CE3\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D00\\\\u0D02\\\\u0D03\\\\u0D05-\"\n-        u\"\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D43\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4E\\\\u0D54-\"\n-        u\"\\\\u0D57\\\\u0D60\\\\u0D61\\\\u0D66-\\\\u0D6F\\\\u0D7A-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\"\n-        u\"\\\\u0D8E\\\\u0D91-\\\\u0D96\\\\u0D9A-\\\\u0DA5\\\\u0DA7-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\"\n-        u\"\\\\u0DC0-\\\\u0DC6\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDE\\\\u0DF2\\\\u0E01-\"\n-        u\"\\\\u0E32\\\\u0E34-\\\\u0E3A\\\\u0E40-\\\\u0E4E\\\\u0E50-\\\\u0E59\\\\u0E81\\\\u0E82\\\\u0E84\"\n-        u\"\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EB2\\\\u0EB4-\\\\u0EBD\\\\u0EC0-\"\n-        u\"\\\\u0EC4\\\\u0EC6\\\\u0EC8-\\\\u0ECD\\\\u0ED0-\\\\u0ED9\\\\u0EDE\\\\u0EDF\\\\u0F00\\\\u0F20-\"\n-        u\"\\\\u0F29\\\\u0F35\\\\u0F37\\\\u0F3E-\\\\u0F42\\\\u0F44-\\\\u0F47\\\\u0F49-\\\\u0F4C\\\\u0F4E-\"\n-        u\"\\\\u0F51\\\\u0F53-\\\\u0F56\\\\u0F58-\\\\u0F5B\\\\u0F5D-\\\\u0F68\\\\u0F6A-\\\\u0F6C\\\\u0F71\"\n-        u\"\\\\u0F72\\\\u0F74\\\\u0F7A-\\\\u0F80\\\\u0F82-\\\\u0F84\\\\u0F86-\\\\u0F92\\\\u0F94-\\\\u0F97\"\n-        u\"\\\\u0F99-\\\\u0F9C\\\\u0F9E-\\\\u0FA1\\\\u0FA3-\\\\u0FA6\\\\u0FA8-\\\\u0FAB\\\\u0FAD-\\\\u0FB8\"\n-        u\"\\\\u0FBA-\\\\u0FBC\\\\u0FC6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109D\\\\u10C7\\\\u10CD\\\\u10D0-\"\n-        u\"\\\\u10F0\\\\u10F7-\\\\u10FA\\\\u10FD-\\\\u10FF\\\\u1200-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\"\n-        u\"\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\"\n-        u\"\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\"\n-        u\"\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u135D-\\\\u135F\\\\u1380-\\\\u138F\\\\u1780-\"\n-        u\"\\\\u17A2\\\\u17A5-\\\\u17A7\\\\u17A9-\\\\u17B3\\\\u17B6-\\\\u17CA\\\\u17D2\\\\u17D7\\\\u17DC\"\n-        u\"\\\\u17E0-\\\\u17E9\\\\u1C80-\\\\u1C88\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\\\\u1E00-\\\\u1E99\"\n-        u\"\\\\u1E9E\\\\u1EA0-\\\\u1EF9\\\\u1F00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\"\n-        u\"\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F70\\\\u1F72\\\\u1F74\"\n-        u\"\\\\u1F76\\\\u1F78\\\\u1F7A\\\\u1F7C\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBA\\\\u1FBC\\\\u1FC2-\"\n-        u\"\\\\u1FC4\\\\u1FC6-\\\\u1FC8\\\\u1FCA\\\\u1FCC\\\\u1FD0-\\\\u1FD2\\\\u1FD6-\\\\u1FDA\\\\u1FE0-\"\n-        u\"\\\\u1FE2\\\\u1FE4-\\\\u1FEA\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FF8\\\\u1FFA\\\\u1FFC\"\n-        u\"\\\\u2D27\\\\u2D2D\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\"\n-        u\"\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\"\n-        u\"\\\\u3005-\\\\u3007\\\\u3041-\\\\u3096\\\\u3099\\\\u309A\\\\u309D\\\\u309E\\\\u30A1-\\\\u30FA\"\n-        u\"\\\\u30FC-\\\\u30FE\\\\u3105-\\\\u312F\\\\u31A0-\\\\u31BA\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FEF\"\n-        u\"\\\\uA660\\\\uA661\\\\uA674-\\\\uA67B\\\\uA67F\\\\uA69F\\\\uA717-\\\\uA71F\\\\uA788\\\\uA78D\"\n-        u\"\\\\uA78E\\\\uA790-\\\\uA793\\\\uA7A0-\\\\uA7AA\\\\uA7AE\\\\uA7AF\\\\uA7B8-\\\\uA7BF\\\\uA7C2-\"\n-        u\"\\\\uA7C6\\\\uA7FA\\\\uA9E7-\\\\uA9FE\\\\uAA60-\\\\uAA76\\\\uAA7A-\\\\uAA7F\\\\uAB01-\\\\uAB06\"\n-        u\"\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB66\\\\uAB67\"\n-        u\"\\\\uAC00-\\\\uD7A3\\\\uFA0E\\\\uFA0F\\\\uFA11\\\\uFA13\\\\uFA14\\\\uFA1F\\\\uFA21\\\\uFA23\"\n-        u\"\\\\uFA24\\\\uFA27-\\\\uFA29\\\\U0001133B\\\\U0001B150-\\\\U0001B152\\\\U0001B164-\"\n-        u\"\\\\U0001B167\\\\U00020000-\\\\U0002A6D6\\\\U0002A700-\\\\U0002B734\\\\U0002B740-\"\n-        u\"\\\\U0002B81D\\\\U0002B820-\\\\U0002CEA1\\\\U0002CEB0-\\\\U0002EBE0]\";\n+        u\"\\\\u04FF\\\\u0510-\\\\u0529\\\\u052E\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0586\"\n+        u\"\\\\u05B4\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F2\\\\u0620-\\\\u063F\\\\u0641-\\\\u0655\\\\u0660-\"\n+        u\"\\\\u0669\\\\u0670-\\\\u0672\\\\u0674\\\\u0679-\\\\u068D\\\\u068F-\\\\u06A0\\\\u06A2-\\\\u06D3\"\n+        u\"\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE-\\\\u06FC\\\\u06FF\\\\u0750-\\\\u07B1\\\\u08A0-\\\\u08AC\"\n+        u\"\\\\u08B2\\\\u08B6-\\\\u08C7\\\\u0901-\\\\u094D\\\\u094F\\\\u0950\\\\u0956\\\\u0957\\\\u0960-\"\n+        u\"\\\\u0963\\\\u0966-\\\\u096F\\\\u0971-\\\\u0977\\\\u0979-\\\\u097F\\\\u0981-\\\\u0983\\\\u0985-\"\n+        u\"\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\"\n+        u\"\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09E0-\\\\u09E3\\\\u09E6-\"\n+        u\"\\\\u09F1\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\"\n+        u\"\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A35\\\\u0A38\\\\u0A39\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\"\n+        u\"\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A5C\\\\u0A66-\\\\u0A74\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\"\n+        u\"\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\"\n+        u\"\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\"\n+        u\"\\\\u0AEF\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\"\n+        u\"\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B43\\\\u0B47\"\n+        u\"\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B55-\\\\u0B57\\\\u0B5F-\\\\u0B61\\\\u0B66-\\\\u0B6F\\\\u0B71\"\n+        u\"\\\\u0B82\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\"\n+        u\"\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE-\"\n+        u\"\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BEF\\\\u0C01-\"\n+        u\"\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C3D-\"\n+        u\"\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C60\\\\u0C61\\\\u0C66-\"\n+        u\"\\\\u0C6F\\\\u0C80\\\\u0C82\\\\u0C83\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\"\n+        u\"\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBC-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\"\n+        u\"\\\\u0CD5\\\\u0CD6\\\\u0CE0-\\\\u0CE3\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D00\\\\u0D02\"\n+        u\"\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D-\\\\u0D43\\\\u0D46-\"\n+        u\"\\\\u0D48\\\\u0D4A-\\\\u0D4E\\\\u0D54-\\\\u0D57\\\\u0D60\\\\u0D61\\\\u0D66-\\\\u0D6F\\\\u0D7A-\"\n+        u\"\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D8E\\\\u0D91-\\\\u0D96\\\\u0D9A-\\\\u0DA5\\\\u0DA7-\"\n+        u\"\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\"\n+        u\"\\\\u0DD8-\\\\u0DDE\\\\u0DF2\\\\u0E01-\\\\u0E32\\\\u0E34-\\\\u0E3A\\\\u0E40-\\\\u0E4E\\\\u0E50-\"\n+        u\"\\\\u0E59\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\"\n+        u\"\\\\u0EB2\\\\u0EB4-\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EC8-\\\\u0ECD\\\\u0ED0-\\\\u0ED9\"\n+        u\"\\\\u0EDE\\\\u0EDF\\\\u0F00\\\\u0F20-\\\\u0F29\\\\u0F35\\\\u0F37\\\\u0F3E-\\\\u0F42\\\\u0F44-\"\n+        u\"\\\\u0F47\\\\u0F49-\\\\u0F4C\\\\u0F4E-\\\\u0F51\\\\u0F53-\\\\u0F56\\\\u0F58-\\\\u0F5B\\\\u0F5D-\"\n+        u\"\\\\u0F68\\\\u0F6A-\\\\u0F6C\\\\u0F71\\\\u0F72\\\\u0F74\\\\u0F7A-\\\\u0F80\\\\u0F82-\\\\u0F84\"\n+        u\"\\\\u0F86-\\\\u0F92\\\\u0F94-\\\\u0F97\\\\u0F99-\\\\u0F9C\\\\u0F9E-\\\\u0FA1\\\\u0FA3-\\\\u0FA6\"\n+        u\"\\\\u0FA8-\\\\u0FAB\\\\u0FAD-\\\\u0FB8\\\\u0FBA-\\\\u0FBC\\\\u0FC6\\\\u1000-\\\\u1049\\\\u1050-\"\n+        u\"\\\\u109D\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10F0\\\\u10F7-\\\\u10FA\\\\u10FD-\\\\u10FF\\\\u1200-\"\n+        u\"\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\"\n+        u\"\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\"\n+        u\"\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u135D-\"\n+        u\"\\\\u135F\\\\u1380-\\\\u138F\\\\u1780-\\\\u17A2\\\\u17A5-\\\\u17A7\\\\u17A9-\\\\u17B3\\\\u17B6-\"\n+        u\"\\\\u17CA\\\\u17D2\\\\u17D7\\\\u17DC\\\\u17E0-\\\\u17E9\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CBF\"\n+        u\"\\\\u1E00-\\\\u1E99\\\\u1E9E\\\\u1EA0-\\\\u1EF9\\\\u1F00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\"\n+        u\"\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F70\"\n+        u\"\\\\u1F72\\\\u1F74\\\\u1F76\\\\u1F78\\\\u1F7A\\\\u1F7C\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBA\"\n+        u\"\\\\u1FBC\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FC8\\\\u1FCA\\\\u1FCC\\\\u1FD0-\\\\u1FD2\\\\u1FD6-\"\n+        u\"\\\\u1FDA\\\\u1FE0-\\\\u1FE2\\\\u1FE4-\\\\u1FEA\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FF8\"\n+        u\"\\\\u1FFA\\\\u1FFC\\\\u2D27\\\\u2D2D\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\"\n+        u\"\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\"\n+        u\"\\\\u2DD8-\\\\u2DDE\\\\u3005-\\\\u3007\\\\u3041-\\\\u3096\\\\u3099\\\\u309A\\\\u309D\\\\u309E\"\n+        u\"\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FE\\\\u3105-\\\\u312D\\\\u312F\\\\u31A0-\\\\u31BF\\\\u3400-\"\n+        u\"\\\\u4DBF\\\\u4E00-\\\\u9FFC\\\\uA67F\\\\uA717-\\\\uA71F\\\\uA788\\\\uA78D\\\\uA792\\\\uA793\"\n+        u\"\\\\uA7AA\\\\uA7AE\\\\uA7B8\\\\uA7B9\\\\uA7C2-\\\\uA7CA\\\\uA9E7-\\\\uA9FE\\\\uAA60-\\\\uAA76\"\n+        u\"\\\\uAA7A-\\\\uAA7F\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\"\n+        u\"\\\\uAB28-\\\\uAB2E\\\\uAB66\\\\uAB67\\\\uAC00-\\\\uD7A3\\\\uFA0E\\\\uFA0F\\\\uFA11\\\\uFA13\"\n+        u\"\\\\uFA14\\\\uFA1F\\\\uFA21\\\\uFA23\\\\uFA24\\\\uFA27-\\\\uFA29\\\\U00011301\\\\U00011303\"\n+        u\"\\\\U0001133B\\\\U0001133C\\\\U00016FF0\\\\U00016FF1\\\\U0001B150-\\\\U0001B152\"\n+        u\"\\\\U0001B164-\\\\U0001B167\\\\U00020000-\\\\U0002A6DD\\\\U0002A700-\\\\U0002B734\"\n+        u\"\\\\U0002B740-\\\\U0002B81D\\\\U0002B820-\\\\U0002CEA1\\\\U0002CEB0-\\\\U0002EBE0\"\n+        u\"\\\\U00030000-\\\\U0003134A]\";\n@@ -352,1 +353,1 @@\n-    UnicodeSet *clonedSet = static_cast<UnicodeSet *>(chars->clone());\n+    UnicodeSet *clonedSet = chars->clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uspoof.cpp","additions":61,"deletions":60,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-    fAllowedCharsSet = static_cast<const UnicodeSet *>(src.fAllowedCharsSet->clone());\n+    fAllowedCharsSet = src.fAllowedCharsSet->clone();\n@@ -196,1 +196,1 @@\n-    tmpSet = static_cast<UnicodeSet *>(allowedChars.clone());\n+    tmpSet = allowedChars.clone();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uspoof_impl.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-    \/\/  Return TRUE it looks good.\n+    \/\/  Return true it looks good.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/uspoof_impl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-* @return TRUE if an exact match is found, FALSE otherwise\n+* @return true if an exact match is found, false otherwise\n@@ -220,1 +220,1 @@\n-* @return TRUE if a canonical match is found, FALSE otherwise\n+* @return true if a canonical match is found, false otherwise\n@@ -230,1 +230,1 @@\n-* @return True if a exact math is found, FALSE otherwise.\n+* @return True if a exact math is found, false otherwise.\n@@ -241,1 +241,1 @@\n-* @return TRUE if a canonical match is found, FALSE otherwise\n+* @return true if a canonical match is found, false otherwise\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/usrchimp.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-     * @return TRUE if success, checkDir == 0 and pos != limit\n+     * @return true if success, checkDir == 0 and pos != limit\n@@ -142,1 +142,1 @@\n-     * @return TRUE if success, checkDir == 0 and pos != start\n+     * @return true if success, checkDir == 0 and pos != start\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/utf16collationiterator.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-     * but the caller will treat them like U+FFFD because forbidSurrogateCodePoints() returns TRUE.\n+     * but the caller will treat them like U+FFFD because forbidSurrogateCodePoints() returns true.\n@@ -120,1 +120,1 @@\n-     * @return TRUE if success\n+     * @return true if success\n@@ -131,1 +131,1 @@\n-     * @return TRUE if success\n+     * @return true if success\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/utf8collationiterator.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -529,1 +529,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -531,1 +531,1 @@\n-    if (dates == NULL || dates->size() == 0) {\n+    if (dates == nullptr || dates->size() == 0) {\n@@ -533,1 +533,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -537,1 +537,1 @@\n-    DateTimeRule *adtr = NULL;\n+    DateTimeRule *adtr = nullptr;\n@@ -548,1 +548,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -623,1 +623,1 @@\n-                return NULL;\n+                return nullptr;\n@@ -716,1 +716,1 @@\n-    if (adtr == NULL) {\n+    if (adtr == nullptr) {\n@@ -723,1 +723,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -732,1 +732,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -734,2 +734,2 @@\n-    TimeArrayTimeZoneRule *retVal = NULL;\n-    if (dates == NULL || dates->size() == 0) {\n+    TimeArrayTimeZoneRule *retVal = nullptr;\n+    if (dates == nullptr || dates->size() == 0) {\n@@ -738,2 +738,1 @@\n-        retVal = new TimeArrayTimeZoneRule(zonename, rawOffset, dstSavings,\n-            &start, 1, DateTimeRule::UTC_TIME);\n+        retVal = new TimeArrayTimeZoneRule(zonename, rawOffset, dstSavings, &start, 1, DateTimeRule::UTC_TIME);\n@@ -744,1 +743,1 @@\n-        if (times == NULL) {\n+        if (times == nullptr) {\n@@ -746,1 +745,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -753,1 +752,1 @@\n-                return NULL;\n+                return nullptr;\n@@ -756,2 +755,1 @@\n-        retVal = new TimeArrayTimeZoneRule(zonename, rawOffset, dstSavings,\n-            times, size, DateTimeRule::UTC_TIME);\n+        retVal = new TimeArrayTimeZoneRule(zonename, rawOffset, dstSavings, times, size, DateTimeRule::UTC_TIME);\n@@ -760,0 +758,3 @@\n+    if (retVal == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+    }\n@@ -803,1 +804,1 @@\n- * This function returns NULL when the specified DateTimeRule is already\n+ * This function returns nullptr when the specified DateTimeRule is already\n@@ -806,1 +807,4 @@\n-static DateTimeRule* toWallTimeRule(const DateTimeRule* rule, int32_t rawOffset, int32_t dstSavings) {\n+static DateTimeRule *toWallTimeRule(const DateTimeRule *rule, int32_t rawOffset, int32_t dstSavings, UErrorCode &status) {\n+    if (U_FAILURE(status)) {\n+        return nullptr;\n+    }\n@@ -808,1 +812,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -867,1 +871,1 @@\n-    DateTimeRule *modifiedRule;\n+    DateTimeRule *modifiedRule = nullptr;\n@@ -871,2 +875,4 @@\n-        modifiedRule = new DateTimeRule(month, dom, dow,\n-            (dtype == DateTimeRule::DOW_GEQ_DOM), wallt, DateTimeRule::WALL_TIME);\n+        modifiedRule = new DateTimeRule(month, dom, dow, (dtype == DateTimeRule::DOW_GEQ_DOM), wallt, DateTimeRule::WALL_TIME);\n+    }\n+    if (modifiedRule == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n@@ -959,1 +965,1 @@\n-:   BasicTimeZone(), tz(NULL), vtzlines(NULL),\n+:   BasicTimeZone(), tz(nullptr), vtzlines(nullptr),\n@@ -964,1 +970,1 @@\n-:   BasicTimeZone(source), tz(NULL), vtzlines(NULL),\n+:   BasicTimeZone(source), tz(nullptr), vtzlines(nullptr),\n@@ -967,2 +973,2 @@\n-    if (source.tz != NULL) {\n-        tz = (BasicTimeZone*)source.tz->clone();\n+    if (source.tz != nullptr) {\n+        tz = source.tz->clone();\n@@ -970,1 +976,1 @@\n-    if (source.vtzlines != NULL) {\n+    if (source.vtzlines != nullptr) {\n@@ -974,0 +980,3 @@\n+        if (vtzlines == nullptr) {\n+            return;\n+        }\n@@ -983,1 +992,1 @@\n-        if (U_FAILURE(status) && vtzlines != NULL) {\n+        if (U_FAILURE(status) && vtzlines != nullptr) {\n@@ -990,1 +999,1 @@\n-    if (tz != NULL) {\n+    if (tz != nullptr) {\n@@ -993,1 +1002,1 @@\n-    if (vtzlines != NULL) {\n+    if (vtzlines != nullptr) {\n@@ -1005,1 +1014,1 @@\n-        if (tz != NULL) {\n+        if (tz != nullptr) {\n@@ -1007,1 +1016,1 @@\n-            tz = NULL;\n+            tz = nullptr;\n@@ -1009,2 +1018,2 @@\n-        if (right.tz != NULL) {\n-            tz = (BasicTimeZone*)right.tz->clone();\n+        if (right.tz != nullptr) {\n+            tz = right.tz->clone();\n@@ -1012,1 +1021,1 @@\n-        if (vtzlines != NULL) {\n+        if (vtzlines != nullptr) {\n@@ -1015,1 +1024,1 @@\n-        if (right.vtzlines != NULL) {\n+        if (right.vtzlines != nullptr) {\n@@ -1019,1 +1028,1 @@\n-            if (U_SUCCESS(status)) {\n+            if (vtzlines != nullptr && U_SUCCESS(status)) {\n@@ -1028,1 +1037,1 @@\n-            if (U_FAILURE(status) && vtzlines != NULL) {\n+            if (U_FAILURE(status) && vtzlines != nullptr) {\n@@ -1030,1 +1039,1 @@\n-                vtzlines = NULL;\n+                vtzlines = nullptr;\n@@ -1068,0 +1077,3 @@\n+    if (vtz == nullptr) {\n+        return nullptr;\n+    }\n@@ -1073,2 +1085,2 @@\n-    UResourceBundle *bundle = NULL;\n-    const UChar* versionStr = NULL;\n+    UResourceBundle *bundle = nullptr;\n+    const UChar* versionStr = nullptr;\n@@ -1076,1 +1088,1 @@\n-    bundle = ures_openDirect(NULL, \"zoneinfo64\", &status);\n+    bundle = ures_openDirect(nullptr, \"zoneinfo64\", &status);\n@@ -1088,1 +1100,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -1091,1 +1103,1 @@\n-    if (vtz == NULL) {\n+    if (vtz == nullptr) {\n@@ -1093,1 +1105,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -1095,2 +1107,2 @@\n-    vtz->tz = (BasicTimeZone *)basic_time_zone.clone();\n-    if (vtz->tz == NULL) {\n+    vtz->tz = basic_time_zone.clone();\n+    if (vtz->tz == nullptr) {\n@@ -1099,1 +1111,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -1104,2 +1116,2 @@\n-    UResourceBundle *bundle = NULL;\n-    const UChar* versionStr = NULL;\n+    UResourceBundle *bundle = nullptr;\n+    const UChar* versionStr = nullptr;\n@@ -1107,1 +1119,1 @@\n-    bundle = ures_openDirect(NULL, \"zoneinfo64\", &status);\n+    bundle = ures_openDirect(nullptr, \"zoneinfo64\", &status);\n@@ -1119,1 +1131,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -1123,0 +1135,4 @@\n+    if (vtz == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+        return nullptr;\n+    }\n@@ -1126,1 +1142,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -1180,2 +1196,2 @@\n-TimeZone*\n-VTimeZone::clone(void) const {\n+VTimeZone*\n+VTimeZone::clone() const {\n@@ -1254,0 +1270,3 @@\n+    if (vtzlines == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+    }\n@@ -1267,1 +1286,5 @@\n-                vtzlines->addElement(new UnicodeString(line), status);\n+                LocalPointer<UnicodeString> element(new UnicodeString(line), status);\n+                if (U_FAILURE(status)) {\n+                    goto cleanupVtzlines;\n+                }\n+                vtzlines->addElement(element.getAlias(), status);\n@@ -1271,0 +1294,1 @@\n+                element.orphan(); \/\/ on success, vtzlines owns the object.\n@@ -1284,1 +1308,1 @@\n-                        vtzlines->addElement(new UnicodeString(line), status);\n+                        LocalPointer<UnicodeString> element(new UnicodeString(line), status);\n@@ -1288,0 +1312,5 @@\n+                        vtzlines->addElement(element.getAlias(), status);\n+                        if (U_FAILURE(status)) {\n+                            goto cleanupVtzlines;\n+                        }\n+                        element.orphan(); \/\/ on success, vtzlines owns the object.\n@@ -1302,1 +1331,5 @@\n-                        vtzlines->addElement(new UnicodeString(line), status);\n+                        LocalPointer<UnicodeString> element(new UnicodeString(line), status);\n+                        if (U_FAILURE(status)) {\n+                            goto cleanupVtzlines;\n+                        }\n+                        vtzlines->addElement(element.getAlias(), status);\n@@ -1306,0 +1339,1 @@\n+                        element.orphan(); \/\/ on success, vtzlines owns the object.\n@@ -1311,1 +1345,1 @@\n-                        vtzlines->addElement(new UnicodeString(line), status);\n+                        LocalPointer<UnicodeString> element(new UnicodeString(line), status);\n@@ -1315,0 +1349,5 @@\n+                        vtzlines->addElement(element.getAlias(), status);\n+                        if (U_FAILURE(status)) {\n+                            goto cleanupVtzlines;\n+                        }\n+                        element.orphan(); \/\/ on success, vtzlines owns the object.\n@@ -1336,1 +1375,1 @@\n-    vtzlines = NULL;\n+    vtzlines = nullptr;\n@@ -1352,1 +1391,1 @@\n-    if (vtzlines == NULL || vtzlines->size() == 0) {\n+    if (vtzlines == nullptr || vtzlines->size() == 0) {\n@@ -1356,2 +1395,2 @@\n-    InitialTimeZoneRule *initialRule = NULL;\n-    RuleBasedTimeZone *rbtz = NULL;\n+    InitialTimeZoneRule *initialRule = nullptr;\n+    RuleBasedTimeZone *rbtz = nullptr;\n@@ -1376,2 +1415,2 @@\n-    UVector *dates = NULL;  \/\/ list of RDATE or RRULE strings\n-    UVector *rules = NULL;  \/\/ list of TimeZoneRule instances\n+    UVector *dates = nullptr;  \/\/ list of RDATE or RRULE strings\n+    UVector *rules = nullptr;  \/\/ list of TimeZoneRule instances\n@@ -1383,0 +1422,3 @@\n+    if (rules == nullptr) {\n+        status = U_MEMORY_ALLOCATION_ERROR;\n+    }\n@@ -1390,4 +1432,1 @@\n-    if (U_FAILURE(status)) {\n-        goto cleanupParse;\n-    }\n-    if (rules == NULL || dates == NULL) {\n+    if (dates == nullptr) {\n@@ -1395,0 +1434,2 @@\n+    }\n+    if (U_FAILURE(status)) {\n@@ -1471,1 +1512,1 @@\n-                UnicodeString *dstr;\n+                UnicodeString *dstr = nullptr;\n@@ -1480,1 +1521,5 @@\n-                    dates->addElement(dstr, status);\n+                    if (dstr == nullptr) {\n+                        status = U_MEMORY_ALLOCATION_ERROR;\n+                    } else {\n+                        dates->addElement(dstr, status);\n+                    }\n@@ -1492,1 +1537,5 @@\n-                dates->addElement(new UnicodeString(value), status);\n+                LocalPointer<UnicodeString> element(new UnicodeString(value), status);\n+                if (U_FAILURE(status)) {\n+                    goto cleanupParse;\n+                }\n+                dates->addElement(element.getAlias(), status);\n@@ -1496,0 +1545,1 @@\n+                element.orphan(); \/\/ on success, dates owns the object.\n@@ -1507,1 +1557,1 @@\n-                TimeZoneRule *rule = NULL;\n+                TimeZoneRule *rule = nullptr;\n@@ -1549,1 +1599,1 @@\n-                if (U_FAILURE(status) || rule == NULL) {\n+                if (U_FAILURE(status) || rule == nullptr) {\n@@ -1589,3 +1639,2 @@\n-    initialRule = new InitialTimeZoneRule(zonename,\n-        initialRawOffset, initialDSTSavings);\n-    if (initialRule == NULL) {\n+    initialRule = new InitialTimeZoneRule(zonename, initialRawOffset, initialDSTSavings);\n+    if (initialRule == nullptr) {\n@@ -1598,1 +1647,1 @@\n-    if (rbtz == NULL) {\n+    if (rbtz == nullptr) {\n@@ -1602,1 +1651,1 @@\n-    initialRule = NULL; \/\/ already adopted by RBTZ, no need to delete\n+    initialRule = nullptr; \/\/ already adopted by RBTZ, no need to delete\n@@ -1607,1 +1656,1 @@\n-        if (atzrule != NULL) {\n+        if (atzrule != nullptr) {\n@@ -1652,1 +1701,1 @@\n-            TimeZoneRule *newRule;\n+            TimeZoneRule *newRule = nullptr;\n@@ -1675,1 +1724,1 @@\n-            if (newRule == NULL) {\n+            if (newRule == nullptr) {\n@@ -1707,1 +1756,1 @@\n-    if (rules != NULL) {\n+    if (rules != nullptr) {\n@@ -1714,1 +1763,1 @@\n-    if (dates != NULL) {\n+    if (dates != nullptr) {\n@@ -1717,1 +1766,1 @@\n-    if (initialRule != NULL) {\n+    if (initialRule != nullptr) {\n@@ -1720,1 +1769,1 @@\n-    if (rbtz != NULL) {\n+    if (rbtz != nullptr) {\n@@ -1728,1 +1777,1 @@\n-    if (vtzlines != NULL) {\n+    if (vtzlines != nullptr) {\n@@ -1768,2 +1817,2 @@\n-    InitialTimeZoneRule *initial = NULL;\n-    UVector *transitionRules = NULL;\n+    InitialTimeZoneRule *initial = nullptr;\n+    UVector *transitionRules = nullptr;\n@@ -1782,1 +1831,1 @@\n-    if (transitionRules != NULL) {\n+    if (transitionRules != nullptr) {\n@@ -1791,1 +1840,1 @@\n-        transitionRules = NULL;\n+        transitionRules = nullptr;\n@@ -1800,0 +1849,4 @@\n+        if (icutzprop == nullptr) {\n+            status = U_MEMORY_ALLOCATION_ERROR;\n+            goto cleanupWritePartial;\n+        }\n@@ -1816,1 +1869,1 @@\n-    if (initial != NULL) {\n+    if (initial != nullptr) {\n@@ -1819,1 +1872,1 @@\n-    if (transitionRules != NULL) {\n+    if (transitionRules != nullptr) {\n@@ -1838,2 +1891,2 @@\n-    InitialTimeZoneRule *initial = NULL;\n-    AnnualTimeZoneRule *std = NULL, *dst = NULL;\n+    InitialTimeZoneRule *initial = nullptr;\n+    AnnualTimeZoneRule *std = nullptr, *dst = nullptr;\n@@ -1845,1 +1898,1 @@\n-        if (std != NULL && dst != NULL) {\n+        if (std != nullptr && dst != nullptr) {\n@@ -1855,0 +1908,4 @@\n+            if (icutzprop == nullptr) {\n+               status = U_MEMORY_ALLOCATION_ERROR;\n+               goto cleanupWriteSimple;\n+            }\n@@ -1872,1 +1929,1 @@\n-    if (initial != NULL) {\n+    if (initial != nullptr) {\n@@ -1875,1 +1932,1 @@\n-    if (std != NULL) {\n+    if (std != nullptr) {\n@@ -1878,1 +1935,1 @@\n-    if (dst != NULL) {\n+    if (dst != nullptr) {\n@@ -1894,1 +1951,1 @@\n-    if (customProps != NULL) {\n+    if (customProps != nullptr) {\n@@ -1915,1 +1972,1 @@\n-    AnnualTimeZoneRule *finalDstRule = NULL;\n+    AnnualTimeZoneRule *finalDstRule = nullptr;\n@@ -1929,1 +1986,1 @@\n-    AnnualTimeZoneRule *finalStdRule = NULL;\n+    AnnualTimeZoneRule *finalStdRule = nullptr;\n@@ -1956,2 +2013,2 @@\n-            if (finalDstRule == NULL\n-                && (atzrule = dynamic_cast<const AnnualTimeZoneRule *>(tzt.getTo())) != NULL\n+            if (finalDstRule == nullptr\n+                && (atzrule = dynamic_cast<const AnnualTimeZoneRule *>(tzt.getTo())) != nullptr\n@@ -1960,1 +2017,1 @@\n-                finalDstRule = (AnnualTimeZoneRule*)tzt.getTo()->clone();\n+                finalDstRule = atzrule->clone();\n@@ -2003,1 +2060,1 @@\n-            if (finalStdRule != NULL && finalDstRule != NULL) {\n+            if (finalStdRule != nullptr && finalDstRule != nullptr) {\n@@ -2007,2 +2064,2 @@\n-            if (finalStdRule == NULL\n-                && (atzrule = dynamic_cast<const AnnualTimeZoneRule *>(tzt.getTo())) != NULL\n+            if (finalStdRule == nullptr\n+                && (atzrule = dynamic_cast<const AnnualTimeZoneRule *>(tzt.getTo())) != nullptr\n@@ -2011,1 +2068,1 @@\n-                finalStdRule = (AnnualTimeZoneRule*)tzt.getTo()->clone();\n+                finalStdRule = atzrule->clone();\n@@ -2054,1 +2111,1 @@\n-            if (finalStdRule != NULL && finalDstRule != NULL) {\n+            if (finalStdRule != nullptr && finalDstRule != nullptr) {\n@@ -2078,1 +2135,1 @@\n-            if (finalDstRule == NULL) {\n+            if (finalDstRule == nullptr) {\n@@ -2120,1 +2177,1 @@\n-            if (finalStdRule == NULL) {\n+            if (finalStdRule == nullptr) {\n@@ -2166,1 +2223,1 @@\n-    if (finalStdRule != NULL) {\n+    if (finalStdRule != nullptr) {\n@@ -2169,1 +2226,1 @@\n-    if (finalDstRule != NULL) {\n+    if (finalDstRule != nullptr) {\n@@ -2482,2 +2539,5 @@\n-    const DateTimeRule *dtrule = toWallTimeRule(rule->getRule(), fromRawOffset, fromDSTSavings);\n-    if (dtrule == NULL) {\n+    const DateTimeRule *dtrule = toWallTimeRule(rule->getRule(), fromRawOffset, fromDSTSavings, status);\n+    if (U_FAILURE(status)) {\n+        return;\n+    }\n+    if (dtrule == nullptr) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/vtzone.cpp","additions":178,"deletions":118,"binary":false,"changes":296,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n- * @return TRUE if TZURL attribute is available and value is set.\n+ * @return true if TZURL attribute is available and value is set.\n@@ -115,1 +115,1 @@\n- * @return TRUE if lastModified attribute is available and value is set.\n+ * @return true if lastModified attribute is available and value is set.\n@@ -286,1 +286,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -306,1 +306,1 @@\n- * @return  TRUE if the transition is found.\n+ * @return  true if the transition is found.\n@@ -317,1 +317,1 @@\n- * @return  TRUE if the transition is found.\n+ * @return  true if the transition is found.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/vzone.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-Format *Win32DateFormat::clone(void) const\n+Win32DateFormat *Win32DateFormat::clone() const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/windtfmt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    virtual Format *clone(void) const;\n+    virtual Win32DateFormat *clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/windtfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-Format *Win32NumberFormat::clone(void) const\n+Win32NumberFormat *Win32NumberFormat::clone() const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/winnmfmt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    virtual Format *clone(void) const;\n+    virtual Win32NumberFormat *clone() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/winnmfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,4 +33,1 @@\n-static icu::UMutex *gZoneMetaLock() {\n-    static icu::UMutex m = U_MUTEX_INITIALIZER;\n-    return &m;\n-}\n+static icu::UMutex gZoneMetaLock;\n@@ -269,1 +266,1 @@\n-    umtx_lock(gZoneMetaLock());\n+    umtx_lock(&gZoneMetaLock);\n@@ -273,1 +270,1 @@\n-    umtx_unlock(gZoneMetaLock());\n+    umtx_unlock(&gZoneMetaLock);\n@@ -354,1 +351,1 @@\n-        umtx_lock(gZoneMetaLock());\n+        umtx_lock(&gZoneMetaLock);\n@@ -374,1 +371,1 @@\n-        umtx_unlock(gZoneMetaLock());\n+        umtx_unlock(&gZoneMetaLock);\n@@ -452,1 +449,1 @@\n-        umtx_lock(gZoneMetaLock());\n+        umtx_lock(&gZoneMetaLock);\n@@ -459,1 +456,1 @@\n-        umtx_unlock(gZoneMetaLock());\n+        umtx_unlock(&gZoneMetaLock);\n@@ -478,1 +475,1 @@\n-            umtx_lock(gZoneMetaLock());\n+            umtx_lock(&gZoneMetaLock);\n@@ -491,1 +488,1 @@\n-            umtx_unlock(gZoneMetaLock());\n+            umtx_unlock(&gZoneMetaLock);\n@@ -578,1 +575,1 @@\n-    umtx_lock(gZoneMetaLock());\n+    umtx_lock(&gZoneMetaLock);\n@@ -582,1 +579,1 @@\n-    umtx_unlock(gZoneMetaLock());\n+    umtx_unlock(&gZoneMetaLock);\n@@ -596,1 +593,1 @@\n-    umtx_lock(gZoneMetaLock());\n+    umtx_lock(&gZoneMetaLock);\n@@ -624,1 +621,1 @@\n-    umtx_unlock(gZoneMetaLock());\n+    umtx_unlock(&gZoneMetaLock);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/zonemeta.cpp","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-     * @param isPrimary [output] TRUE if the zone is the primary zone for the country\n+     * @param isPrimary [output] true if the zone is the primary zone for the country\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/i18n\/zonemeta.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+stubdata.cpp\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/stubdata\/sources.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003\">\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{203EC78A-0531-43F0-A636-285439BDE025}<\/ProjectGuid>\n+  <\/PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>DynamicLibrary<\/ConfigurationType>\n+    <UseOfMfc>false<\/UseOfMfc>\n+    <CharacterSet>MultiByte<\/CharacterSet>\n+  <\/PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" \/>\n+  <!-- The following import will include the 'default' configuration options for VS projects. -->\n+  <Import Project=\"..\\allinone\\Build.Windows.ProjectConfiguration.props\" \/>\n+  <!-- The following import will include the library configuration options for VS projects. -->\n+  <Import Project=\"..\\allinone\\Build.Windows.Library.ProjectConfiguration.props\" \/>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" \/>\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  <\/ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" \/>\n+  <PropertyGroup>\n+    <_ProjectFileVersion>10.0.30319.1<\/_ProjectFileVersion>\n+    <GenerateManifest>false<\/GenerateManifest>\n+    <OutDir>.\\$(Platform)\\$(Configuration)\\<\/OutDir>\n+    <IntDir>.\\$(Platform)\\$(Configuration)\\<\/IntDir>\n+    <!-- The ICU projects use \"Win32\" to mean \"x86\", so we need to special case it. -->\n+    <OutDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/OutDir>\n+    <IntDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/IntDir>\n+    <!-- Disable Incremental Linking for Release builds as it prevents Link-time Code Generation -->\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Debug'\">true<\/LinkIncremental>\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n+  <\/PropertyGroup>\n+  <!-- Options that are common to *all* project configurations -->\n+  <ItemDefinitionGroup>\n+    <Midl>\n+      <TypeLibraryName>$(OutDir)\\icudt.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\common;%(AdditionalIncludeDirectories)<\/AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>STUBDATA_BUILD;%(PreprocessorDefinitions)<\/PreprocessorDefinitions>\n+      <DisableLanguageExtensions>true<\/DisableLanguageExtensions>\n+      <WarningLevel>Level3<\/WarningLevel>\n+      <CompileAs>Default<\/CompileAs>\n+      <PrecompiledHeaderOutputFile>$(OutDir)\/icudt.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>$(OutDir)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>$(OutDir)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>$(OutDir)\/icudt.pdb<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <ResourceCompile>\n+      <PreprocessorDefinitions>STUBDATA_BUILD;%(PreprocessorDefinitions)<\/PreprocessorDefinitions>\n+    <\/ResourceCompile>\n+    <PreLinkEvent>\n+      <Command>echo \"File with stubdata build time, used as a dependency to trigger fresh data build, since stubdata dll will overwrite the real one.\" &gt; \"$(ProjectDir)stubdatabuilt.txt\"<\/Command>\n+    <\/PreLinkEvent>\n+    <Link>\n+      <NoEntryPoint>true<\/NoEntryPoint>\n+      <SetChecksum>true<\/SetChecksum>\n+      <TurnOffAssemblyGeneration>true<\/TurnOffAssemblyGeneration>\n+      <!-- Note: stubdata is somewhat odd in that it doesn't suffix the Debug output DLL\/LIB with a \"d\" like common\/i18n\/etc. -->\n+      <OutputFile>..\\..\\$(IcuBinOutputDir)\\icudt68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\$(IcuLibOutputDir)\\icudt.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\$(IcuLibOutputDir)\\icudt.lib<\/ImportLibrary>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <!-- Options that are common to all 'Debug' project configurations -->\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <RuntimeLibrary>MultiThreadedDebugDLL<\/RuntimeLibrary>\n+    <\/ClCompile>\n+  <\/ItemDefinitionGroup>\n+  <!-- Options that are common to all 'Release' project configurations -->\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <RuntimeLibrary>MultiThreadedDLL<\/RuntimeLibrary>\n+    <\/ClCompile>\n+  <\/ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"stubdata.cpp\" \/>\n+  <\/ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=\"..\\data\\misc\\icudata.rc\">\n+      <AdditionalIncludeDirectories>..\/common;%(AdditionalIncludeDirectories)<\/AdditionalIncludeDirectories>\n+    <\/ResourceCompile>\n+  <\/ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" \/>\n+  <ImportGroup Label=\"ExtensionTargets\">\n+  <\/ImportGroup>\n+<\/Project>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/stubdata\/stubdata.vcxproj","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"4.0\" xmlns=\"http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003\">\n+  <ItemGroup>\n+    <Filter Include=\"Source Files\">\n+      <UniqueIdentifier>{0ee0463f-dec0-4224-af0c-52babad261c1}<\/UniqueIdentifier>\n+      <Extensions>cpp;c;cxx;rc;def;r;odl;idl;hpj;bat<\/Extensions>\n+    <\/Filter>\n+    <Filter Include=\"Header Files\">\n+      <UniqueIdentifier>{a9df809d-9699-4284-97a0-a7e71522eac3}<\/UniqueIdentifier>\n+      <Extensions>h;hpp;hxx;hm;inl<\/Extensions>\n+    <\/Filter>\n+    <Filter Include=\"Resource Files\">\n+      <UniqueIdentifier>{981a212f-ebc5-4f1e-be28-06ce5e90ecca}<\/UniqueIdentifier>\n+      <Extensions>ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe<\/Extensions>\n+    <\/Filter>\n+  <\/ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"stubdata.cpp\">\n+      <Filter>Source Files<\/Filter>\n+    <\/ClCompile>\n+  <\/ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=\"..\\data\\misc\\icudata.rc\">\n+      <Filter>Resource Files<\/Filter>\n+    <\/ResourceCompile>\n+  <\/ItemGroup>\n+<\/Project>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/stubdata\/stubdata.vcxproj.filters","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -32,1 +32,1 @@\n-        return fillin = UnicodeString(str, \"\"); \/\/ optimize?\n+        return fillin = UnicodeString(str, -1, US_INV);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/dbgutil.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-                    };\n+                    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/filetools.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-isFileModTimeLater(const char *filePath, const char *checkAgainst, UBool isDir=FALSE);\n+isFileModTimeLater(const char *filePath, const char *checkAgainst, UBool isDir=false);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/filetools.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    void setAutoPrefix() { doAutoPrefix=TRUE; }\n+    void setAutoPrefix() { doAutoPrefix=true; }\n@@ -65,2 +65,2 @@\n-        doAutoPrefix=TRUE;\n-        prefixEndsWithType=TRUE;\n+        doAutoPrefix=true;\n+        prefixEndsWithType=true;\n@@ -131,1 +131,1 @@\n-     * Check dependencies and return TRUE if all dependencies are fulfilled.\n+     * Check dependencies and return true if all dependencies are fulfilled.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/package.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+#include \"charstr.h\"\n+#include \"unicode\/errorcode.h\"\n@@ -59,1 +61,9 @@\n-getOutFilename(const char *inFilename, const char *destdir, char *outFilename, char *entryName, const char *newSuffix, const char *optFilename);\n+getOutFilename(\n+    const char *inFilename,\n+    const char *destdir,\n+    char *outFilename,\n+    int32_t outFilenameCapacity,\n+    char *entryName,\n+    int32_t entryNameCapacity,\n+    const char *newSuffix,\n+    const char *optFilename);\n@@ -124,0 +134,3 @@\n+        \"#ifdef __CET__\\n\"\n+        \"# include <cet.h>\\n\"\n+        \"#endif\\n\"\n@@ -262,1 +275,7 @@\n-writeAssemblyCode(const char *filename, const char *destdir, const char *optEntryPoint, const char *optFilename, char *outFilePath) {\n+writeAssemblyCode(\n+        const char *filename,\n+        const char *destdir,\n+        const char *optEntryPoint,\n+        const char *optFilename,\n+        char *outFilePath,\n+        size_t outFilePathCapacity) {\n@@ -264,3 +283,5 @@\n-    char entry[64];\n-    uint32_t buffer[1024];\n-    char *bufferStr = (char *)buffer;\n+    char entry[96];\n+    union {\n+        uint32_t uint32s[1024];\n+        char chars[4096];\n+    } buffer;\n@@ -268,1 +289,1 @@\n-    size_t i, length;\n+    size_t i, length, count;\n@@ -276,2 +297,10 @@\n-    getOutFilename(filename, destdir, bufferStr, entry, \".S\", optFilename);\n-    out=T_FileStream_open(bufferStr, \"w\");\n+    getOutFilename(\n+        filename,\n+        destdir,\n+        buffer.chars,\n+        sizeof(buffer.chars),\n+        entry,\n+        sizeof(entry),\n+        \".S\",\n+        optFilename);\n+    out=T_FileStream_open(buffer.chars, \"w\");\n@@ -279,1 +308,1 @@\n-        fprintf(stderr, \"genccode: unable to open output file %s\\n\", bufferStr);\n+        fprintf(stderr, \"genccode: unable to open output file %s\\n\", buffer.chars);\n@@ -284,1 +313,5 @@\n-        uprv_strcpy(outFilePath, bufferStr);\n+        if (uprv_strlen(buffer.chars) >= outFilePathCapacity) {\n+            fprintf(stderr, \"genccode: filename too long\\n\");\n+            exit(U_ILLEGAL_ARGUMENT_ERROR);\n+        }\n+        uprv_strcpy(outFilePath, buffer.chars);\n@@ -305,1 +338,3 @@\n-    sprintf(bufferStr, assemblyHeader[assemblyHeaderIndex].header,\n+    count = snprintf(\n+        buffer.chars, sizeof(buffer.chars),\n+        assemblyHeader[assemblyHeaderIndex].header,\n@@ -308,1 +343,5 @@\n-    T_FileStream_writeLine(out, bufferStr);\n+    if (count >= sizeof(buffer.chars)) {\n+        fprintf(stderr, \"genccode: entry name too long (long filename?)\\n\");\n+        exit(U_ILLEGAL_ARGUMENT_ERROR);\n+    }\n+    T_FileStream_writeLine(out, buffer.chars);\n@@ -312,2 +351,2 @@\n-        memset(buffer, 0, sizeof(buffer));\n-        length=T_FileStream_read(in, buffer, sizeof(buffer));\n+        memset(buffer.uint32s, 0, sizeof(buffer.uint32s));\n+        length=T_FileStream_read(in, buffer.uint32s, sizeof(buffer.uint32s));\n@@ -317,2 +356,3 @@\n-        for(i=0; i<(length\/sizeof(buffer[0])); i++) {\n-            column = write32(out, buffer[i], column);\n+        for(i=0; i<(length\/sizeof(buffer.uint32s[0])); i++) {\n+            \/\/ TODO: What if the last read sees length not as a multiple of 4?\n+            column = write32(out, buffer.uint32s[i], column);\n@@ -324,1 +364,3 @@\n-    sprintf(bufferStr, assemblyHeader[assemblyHeaderIndex].footer,\n+    count = snprintf(\n+        buffer.chars, sizeof(buffer.chars),\n+        assemblyHeader[assemblyHeaderIndex].footer,\n@@ -327,1 +369,5 @@\n-    T_FileStream_writeLine(out, bufferStr);\n+    if (count >= sizeof(buffer.chars)) {\n+        fprintf(stderr, \"genccode: entry name too long (long filename?)\\n\");\n+        exit(U_ILLEGAL_ARGUMENT_ERROR);\n+    }\n+    T_FileStream_writeLine(out, buffer.chars);\n@@ -344,1 +390,7 @@\n-writeCCode(const char *filename, const char *destdir, const char *optName, const char *optFilename, char *outFilePath) {\n+writeCCode(\n+        const char *filename,\n+        const char *destdir,\n+        const char *optName,\n+        const char *optFilename,\n+        char *outFilePath,\n+        size_t outFilePathCapacity) {\n@@ -346,1 +398,1 @@\n-    char buffer[4096], entry[64];\n+    char buffer[4096], entry[96];\n@@ -348,1 +400,1 @@\n-    size_t i, length;\n+    size_t i, length, count;\n@@ -357,2 +409,7 @@\n-      strcpy(entry, optName);\n-      strcat(entry, \"_\");\n+        \/\/ +2 includes the _ and the NUL\n+        if (uprv_strlen(optName) + 2 > sizeof(entry)) {\n+            fprintf(stderr, \"genccode: entry name too long (long filename?)\\n\");\n+            exit(U_ILLEGAL_ARGUMENT_ERROR);\n+        }\n+        strcpy(entry, optName);\n+        strcat(entry, \"_\");\n@@ -360,1 +417,1 @@\n-      entry[0] = 0;\n+        entry[0] = 0;\n@@ -363,1 +420,10 @@\n-    getOutFilename(filename, destdir, buffer, entry+uprv_strlen(entry), \".c\", optFilename);\n+    getOutFilename(\n+        filename,\n+        destdir,\n+        buffer,\n+        static_cast<int32_t>(sizeof(buffer)),\n+        entry + uprv_strlen(entry),\n+        static_cast<int32_t>(sizeof(entry) - uprv_strlen(entry)),\n+        \".c\",\n+        optFilename);\n+\n@@ -365,0 +431,4 @@\n+        if (uprv_strlen(buffer) >= outFilePathCapacity) {\n+            fprintf(stderr, \"genccode: filename too long\\n\");\n+            exit(U_ILLEGAL_ARGUMENT_ERROR);\n+        }\n@@ -367,0 +437,1 @@\n+\n@@ -394,1 +465,1 @@\n-    sprintf(buffer,\n+    count = snprintf(buffer, sizeof(buffer),\n@@ -406,0 +477,4 @@\n+    if (count >= sizeof(buffer)) {\n+        fprintf(stderr, \"genccode: entry name too long (long filename?)\\n\");\n+        exit(U_ILLEGAL_ARGUMENT_ERROR);\n+    }\n@@ -421,1 +496,1 @@\n-    sprintf(buffer,\n+    count = snprintf(buffer, sizeof(buffer),\n@@ -433,0 +508,4 @@\n+    if (count >= sizeof(buffer)) {\n+        fprintf(stderr, \"genccode: entry name too long (long filename?)\\n\");\n+        exit(U_ILLEGAL_ARGUMENT_ERROR);\n+    }\n@@ -586,1 +665,9 @@\n-getOutFilename(const char *inFilename, const char *destdir, char *outFilename, char *entryName, const char *newSuffix, const char *optFilename) {\n+getOutFilename(\n+        const char *inFilename,\n+        const char *destdir,\n+        char *outFilename,\n+        int32_t outFilenameCapacity,\n+        char *entryName,\n+        int32_t entryNameCapacity,\n+        const char *newSuffix,\n+        const char *optFilename) {\n@@ -589,0 +676,4 @@\n+    icu::CharString outFilenameBuilder;\n+    icu::CharString entryNameBuilder;\n+    icu::ErrorCode status;\n+\n@@ -591,7 +682,2 @@\n-        do {\n-            *outFilename++=*destdir++;\n-        } while(*destdir!=0);\n-        if(*(outFilename-1)!=U_FILE_SEP_CHAR) {\n-            *outFilename++=U_FILE_SEP_CHAR;\n-        }\n-        inFilename=basename;\n+        outFilenameBuilder.append(destdir, status);\n+        outFilenameBuilder.ensureEndsWithFileSeparator(status);\n@@ -599,3 +685,1 @@\n-        while(inFilename<basename) {\n-            *outFilename++=*inFilename++;\n-        }\n+        outFilenameBuilder.append(inFilename, static_cast<int32_t>(basename - inFilename), status);\n@@ -603,0 +687,1 @@\n+    inFilename=basename;\n@@ -606,1 +691,1 @@\n-        uprv_strcpy(entryName, inFilename);\n+        entryNameBuilder.append(inFilename, status);\n@@ -608,1 +693,1 @@\n-          uprv_strcpy(outFilename, optFilename);\n+            outFilenameBuilder.append(optFilename, status);\n@@ -610,1 +695,1 @@\n-          uprv_strcpy(outFilename, inFilename);\n+            outFilenameBuilder.append(inFilename, status);\n@@ -612,1 +697,1 @@\n-        uprv_strcat(outFilename, newSuffix);\n+        outFilenameBuilder.append(newSuffix, status);\n@@ -614,1 +699,1 @@\n-        char *saveOutFilename = outFilename;\n+        int32_t saveOutFilenameLength = outFilenameBuilder.length();\n@@ -617,8 +702,5 @@\n-            if(*inFilename=='-') {\n-                \/* iSeries cannot have '-' in the .o objects. *\/\n-                *outFilename++=*entryName++='_';\n-                inFilename++;\n-            }\n-            else {\n-                *outFilename++=*entryName++=*inFilename++;\n-            }\n+            \/\/ iSeries cannot have '-' in the .o objects.\n+            char c = (*inFilename=='-') ? '_' : *inFilename;\n+            outFilenameBuilder.append(c, status);\n+            entryNameBuilder.append(c, status);\n+            inFilename++;\n@@ -628,1 +710,2 @@\n-        *outFilename++=*entryName++='_';\n+        outFilenameBuilder.append('_', status);\n+        entryNameBuilder.append('_', status);\n@@ -632,5 +715,2 @@\n-        while(*inFilename!=0) {\n-            *outFilename++=*entryName++=*inFilename++;\n-        }\n-\n-        *entryName=0;\n+        outFilenameBuilder.append(inFilename, status);\n+        entryNameBuilder.append(inFilename, status);\n@@ -639,5 +719,2 @@\n-            uprv_strcpy(saveOutFilename, optFilename);\n-            uprv_strcat(saveOutFilename, newSuffix);\n-        } else {\n-            \/* add \".c\" *\/\n-            uprv_strcpy(outFilename, newSuffix);\n+            outFilenameBuilder.truncate(saveOutFilenameLength);\n+            outFilenameBuilder.append(optFilename, status);\n@@ -645,0 +722,2 @@\n+        \/\/ add \".c\"\n+        outFilenameBuilder.append(newSuffix, status);\n@@ -646,0 +725,18 @@\n+\n+    if (status.isFailure()) {\n+        fprintf(stderr, \"genccode: error building filename or entrypoint\\n\");\n+        exit(status.get());\n+    }\n+\n+    if (outFilenameBuilder.length() >= outFilenameCapacity) {\n+        fprintf(stderr, \"genccode: output filename too long\\n\");\n+        exit(U_ILLEGAL_ARGUMENT_ERROR);\n+    }\n+\n+    if (entryNameBuilder.length() >= entryNameCapacity) {\n+        fprintf(stderr, \"genccode: entry name too long (long filename?)\\n\");\n+        exit(U_ILLEGAL_ARGUMENT_ERROR);\n+    }\n+\n+    outFilenameBuilder.extract(outFilename, outFilenameCapacity, status);\n+    entryNameBuilder.extract(entryName, entryNameCapacity, status);\n@@ -780,1 +877,9 @@\n-writeObjectCode(const char *filename, const char *destdir, const char *optEntryPoint, const char *optMatchArch, const char *optFilename, char *outFilePath) {\n+writeObjectCode(\n+        const char *filename,\n+        const char *destdir,\n+        const char *optEntryPoint,\n+        const char *optMatchArch,\n+        const char *optFilename,\n+        char *outFilePath,\n+        size_t outFilePathCapacity,\n+        UBool optWinDllExport) {\n@@ -790,0 +895,2 @@\n+    (void)optWinDllExport; \/* unused except Windows *\/\n+\n@@ -1064,1 +1171,10 @@\n-    getOutFilename(filename, destdir, buffer, entry+entryOffset, newSuffix, optFilename);\n+    getOutFilename(\n+        filename,\n+        destdir,\n+        buffer,\n+        sizeof(buffer),\n+        entry + entryOffset,\n+        sizeof(entry) - entryOffset,\n+        newSuffix,\n+        optFilename);\n+\n@@ -1066,0 +1182,4 @@\n+        if (uprv_strlen(buffer) >= outFilePathCapacity) {\n+            fprintf(stderr, \"genccode: filename too long\\n\");\n+            exit(U_ILLEGAL_ARGUMENT_ERROR);\n+        }\n@@ -1143,6 +1263,11 @@\n-    uprv_strcpy(objHeader.linkerOptions, \"-export:\");\n-    length=8;\n-    uprv_strcpy(objHeader.linkerOptions+length, entry);\n-    length+=entryLength;\n-    uprv_strcpy(objHeader.linkerOptions+length, \",data \");\n-    length+=6;\n+    if (optWinDllExport) {\n+        uprv_strcpy(objHeader.linkerOptions, \"-export:\");\n+        length=8;\n+        uprv_strcpy(objHeader.linkerOptions+length, entry);\n+        length+=entryLength;\n+        uprv_strcpy(objHeader.linkerOptions+length, \",data \");\n+        length+=6;\n+    }\n+    else {\n+        length=0;\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/pkg_genc.cpp","additions":195,"deletions":70,"binary":false,"changes":265,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-U_INTERNAL void U_EXPORT2\n+U_CAPI void U_EXPORT2\n@@ -74,1 +74,1 @@\n-U_INTERNAL UBool U_EXPORT2\n+U_CAPI UBool U_EXPORT2\n@@ -77,8 +77,28 @@\n-U_INTERNAL void U_EXPORT2\n-writeCCode(const char *filename, const char *destdir, const char *optName, const char *optFilename, char *outFilePath);\n-\n-U_INTERNAL void U_EXPORT2\n-writeAssemblyCode(const char *filename, const char *destdir, const char *optEntryPoint, const char *optFilename, char *outFilePath);\n-\n-U_INTERNAL void U_EXPORT2\n-writeObjectCode(const char *filename, const char *destdir, const char *optEntryPoint, const char *optMatchArch, const char *optFilename, char *outFilePath);\n+U_CAPI void U_EXPORT2\n+writeCCode(\n+    const char *filename,\n+    const char *destdir,\n+    const char *optName,\n+    const char *optFilename,\n+    char *outFilePath,\n+    size_t outFilePathCapacity);\n+\n+U_CAPI void U_EXPORT2\n+writeAssemblyCode(\n+    const char *filename,\n+    const char *destdir,\n+    const char *optEntryPoint,\n+    const char *optFilename,\n+    char *outFilePath,\n+    size_t outFilePathCapacity);\n+\n+U_CAPI void U_EXPORT2\n+writeObjectCode(\n+    const char *filename,\n+    const char *destdir,\n+    const char *optEntryPoint,\n+    const char *optMatchArch,\n+    const char *optFilename,\n+    char *outFilePath,\n+    size_t outFilePathCapacity,\n+    UBool optWinDllExport);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/pkg_genc.h","additions":30,"deletions":10,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -308,1 +308,2 @@\n-            const UChar *alias=res_getString(pResData, res, &length);\n+            \/\/ No tracing: build tool\n+            const UChar *alias=res_getStringNoTrace(pResData, res, &length);\n@@ -443,0 +444,1 @@\n+#if !UCONFIG_NO_CONVERSION\n@@ -633,0 +635,1 @@\n+#endif \/* UCONFIG_NO_CONVERSION *\/\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/pkgitems.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,24 @@\n+collationinfo.cpp\n+dbgutil.cpp\n+denseranges.cpp\n+filestrm.cpp\n+filetools.cpp\n+flagparser.cpp\n+package.cpp\n+pkg_genc.cpp\n+pkg_gencmn.cpp\n+pkg_icu.cpp\n+pkgitems.cpp\n+ppucd.cpp\n+swapimpl.cpp\n+toolutil.cpp\n+ucbuf.cpp\n+ucln_tu.cpp\n+ucm.cpp\n+ucmstate.cpp\n+udbgutil.cpp\n+unewdata.cpp\n+uoptions.cpp\n+uparse.cpp\n+writesrc.cpp\n+xmlparser.cpp\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/sources.txt","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -36,1 +36,1 @@\n-#error U_TOOLUTIL_IMPLEMENTATION not set - must be set for all ICU source files in common\/ - see http:\/\/userguide.icu-project.org\/howtouseicu\n+#error U_TOOLUTIL_IMPLEMENTATION not set - must be set for all ICU source files in common\/ - see https:\/\/unicode-org.github.io\/icu\/userguide\/howtouseicu\n@@ -63,0 +63,2 @@\n+#include <cstddef>\n+\n@@ -167,8 +169,5 @@\n-#if !(U_PLATFORM == U_PF_CYGWIN && U_PLATFORM_USES_ONLY_WIN32_API)\n-    if(basename==NULL)\n-#endif\n-    {\n-        \/* Use lenient matching on Windows, which can accept either \\ or \/\n-           This is useful for environments like Win32+CygWin which have both.\n-        *\/\n-        basename=uprv_strrchr(filename, U_FILE_ALT_SEP_CHAR);\n+    \/\/be lenient about pathname separators on Windows, like official implementation of C++17 std::filesystem in MSVC\n+    \/\/would be convenient to merge this loop with the one above, but alas, there is no such solution in the standard library\n+    const char *alt_basename=uprv_strrchr(filename, U_FILE_ALT_SEP_CHAR);\n+    if(alt_basename>basename) {\n+        basename=alt_basename;\n@@ -246,1 +245,1 @@\n-    UAlignedMemory staticArray[1];\n+    alignas(std::max_align_t) char staticArray[1];\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/toolutil.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,0 +26,6 @@\n+#ifndef TRUE\n+#   define TRUE  1\n+#endif\n+#ifndef FALSE\n+#   define FALSE 0\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/toolutil.h","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -17,16 +17,0 @@\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n-  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\n-    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" \/>\n-    <Import Project=\"$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props\" \/>\n-  <\/ImportGroup>\n@@ -36,12 +20,8 @@\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\..\\..\\..\\lib\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">.\\x86\\Release\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\..\\..\\..\\lib\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">.\\x86\\Debug\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\Release\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">.\\x64\\Release\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false<\/LinkIncremental>\n-    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\Debug\\<\/OutDir>\n-    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">.\\x64\\Debug\\<\/IntDir>\n-    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true<\/LinkIncremental>\n+    <OutDir>.\\$(Platform)\\$(Configuration)\\<\/OutDir>\n+    <IntDir>.\\$(Platform)\\$(Configuration)\\<\/IntDir>\n+    <!-- The ICU projects use \"Win32\" to mean \"x86\", so we need to special case it. -->\n+    <OutDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/OutDir>\n+    <IntDir Condition=\"'$(Platform)'=='Win32'\">.\\x86\\$(Configuration)\\<\/IntDir>\n+    <!-- Disable Incremental Linking for Release builds as it prevents Link-time Code Generation -->\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Debug'\">true<\/LinkIncremental>\n+    <LinkIncremental Condition=\"'$(Configuration)'=='Release'\">false<\/LinkIncremental>\n@@ -56,0 +36,1 @@\n+      <CompileAs>Default<\/CompileAs>\n@@ -58,4 +39,13 @@\n-  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n-    <Midl>\n-      <TypeLibraryName>.\\..\\..\\..\\lib\\icutu.tlb<\/TypeLibraryName>\n-    <\/Midl>\n+  <!-- Options that are common to all 'Debug' project configurations -->\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <BrowseInformation>true<\/BrowseInformation>\n+      <RuntimeLibrary>MultiThreadedDebugDLL<\/RuntimeLibrary>\n+      <DebugInformationFormat>EditAndContinue<\/DebugInformationFormat>\n+    <\/ClCompile>\n+    <Link>\n+      <AdditionalDependencies>icuucd.lib;icuind.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <!-- Options that are common to all 'Release' project configurations -->\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n@@ -63,1 +53,0 @@\n-      <WholeProgramOptimization>true<\/WholeProgramOptimization>\n@@ -66,5 +55,0 @@\n-      <PrecompiledHeaderOutputFile>.\\x86\\Release\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\Release\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\Release\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\Release\/<\/ProgramDataBaseFileName>\n-      <CompileAs>Default<\/CompileAs>\n@@ -73,1 +57,0 @@\n-      <OutputFile>..\\..\\..\\bin\\icutu64.dll<\/OutputFile>\n@@ -75,0 +58,11 @@\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <!-- Options that are common to all 'Win32' project configurations -->\n+  <ItemDefinitionGroup Condition=\"'$(Platform)'=='Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeaderOutputFile>.\\x86\\$(Configuration)\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>.\\x86\\$(Configuration)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>.\\x86\\$(Configuration)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>.\\x86\\$(Configuration)\/<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <Link>\n@@ -76,0 +70,8 @@\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Midl>\n+      <TypeLibraryName>.\\..\\..\\..\\lib\\icutu.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <Link>\n+      <OutputFile>..\\..\\..\\bin\\icutu68.dll<\/OutputFile>\n@@ -77,3 +79,0 @@\n-      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration<\/LinkTimeCodeGeneration>\n-      <BaseAddress>0x4ac00000<\/BaseAddress>\n-      <RandomizedBaseAddress>false<\/RandomizedBaseAddress>\n@@ -89,9 +88,0 @@\n-    <ClCompile>\n-      <RuntimeLibrary>MultiThreadedDebugDLL<\/RuntimeLibrary>\n-      <PrecompiledHeaderOutputFile>.\\x86\\Debug\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x86\\Debug\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x86\\Debug\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x86\\Debug\/<\/ProgramDataBaseFileName>\n-      <DebugInformationFormat>EditAndContinue<\/DebugInformationFormat>\n-      <CompileAs>Default<\/CompileAs>\n-    <\/ClCompile>\n@@ -99,3 +89,1 @@\n-      <OutputFile>..\\..\\..\\bin\\icutu64d.dll<\/OutputFile>\n-      <AdditionalDependencies>icuucd.lib;icuind.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n-      <AdditionalLibraryDirectories>..\\..\\..\\lib;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n+      <OutputFile>..\\..\\..\\bin\\icutu68d.dll<\/OutputFile>\n@@ -103,2 +91,0 @@\n-      <BaseAddress>0x4ac00000<\/BaseAddress>\n-      <RandomizedBaseAddress>false<\/RandomizedBaseAddress>\n@@ -110,0 +96,12 @@\n+  <!-- Options that are common to all 'x64' project configurations -->\n+  <ItemDefinitionGroup Condition=\"'$(Platform)'=='x64'\">\n+    <ClCompile>\n+      <PrecompiledHeaderOutputFile>.\\x64\\$(Configuration)\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>.\\x64\\$(Configuration)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>.\\x64\\$(Configuration)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>.\\x64\\$(Configuration)\/<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <Link>\n+      <AdditionalLibraryDirectories>..\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n@@ -116,7 +114,0 @@\n-      <RuntimeLibrary>MultiThreadedDLL<\/RuntimeLibrary>\n-      <FunctionLevelLinking>true<\/FunctionLevelLinking>\n-      <PrecompiledHeaderOutputFile>.\\x64\\Release\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\Release\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\Release\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\Release\/<\/ProgramDataBaseFileName>\n-      <CompileAs>Default<\/CompileAs>\n@@ -125,3 +116,1 @@\n-      <OutputFile>..\\..\\..\\bin64\\icutu64.dll<\/OutputFile>\n-      <AdditionalDependencies>icuuc.lib;icuin.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n-      <AdditionalLibraryDirectories>..\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n+      <OutputFile>..\\..\\..\\bin64\\icutu68.dll<\/OutputFile>\n@@ -129,2 +118,0 @@\n-      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration<\/LinkTimeCodeGeneration>\n-      <BaseAddress>0x4ac00000<\/BaseAddress>\n@@ -138,0 +125,31 @@\n+    <Link>\n+      <OutputFile>..\\..\\..\\bin64\\icutu68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\..\\lib64\\icutud.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\..\\lib64\\icutud.lib<\/ImportLibrary>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Platform)'=='ARM'\">\n+    <ClCompile>\n+      <PrecompiledHeaderOutputFile>.\\ARM\\$(Configuration)\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>.\\ARM\\$(Configuration)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>.\\ARM\\$(Configuration)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>.\\ARM\\$(Configuration)\/<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <Link>\n+      <AdditionalLibraryDirectories>.\\..\\..\\..\\libARM;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM'\">\n+    <Midl>\n+      <TypeLibraryName>..\\..\\..\\libARM\\icutu.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <Link>\n+      <OutputFile>..\\..\\..\\binARM\\icutu68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\..\\libARM\\icutu.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\..\\libARM\\icutu.lib<\/ImportLibrary>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM'\">\n+    <Midl>\n+      <TypeLibraryName>.\\..\\..\\..\\libARM\\icutud.tlb<\/TypeLibraryName>\n+    <\/Midl>\n@@ -139,5 +157,0 @@\n-      <RuntimeLibrary>MultiThreadedDebugDLL<\/RuntimeLibrary>\n-      <PrecompiledHeaderOutputFile>.\\x64\\Debug\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n-      <AssemblerListingLocation>.\\x64\\Debug\/<\/AssemblerListingLocation>\n-      <ObjectFileName>.\\x64\\Debug\/<\/ObjectFileName>\n-      <ProgramDataBaseFileName>.\\x64\\Debug\/<\/ProgramDataBaseFileName>\n@@ -145,1 +158,0 @@\n-      <CompileAs>Default<\/CompileAs>\n@@ -148,6 +160,37 @@\n-      <OutputFile>..\\..\\..\\bin64\\icutu64d.dll<\/OutputFile>\n-      <AdditionalDependencies>icuucd.lib;icuind.lib;%(AdditionalDependencies)<\/AdditionalDependencies>\n-      <AdditionalLibraryDirectories>..\\..\\..\\lib64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n-      <ProgramDatabaseFile>.\\..\\..\\..\\lib64\\icutud.pdb<\/ProgramDatabaseFile>\n-      <BaseAddress>0x4ac00000<\/BaseAddress>\n-      <ImportLibrary>..\\..\\..\\lib64\\icutud.lib<\/ImportLibrary>\n+      <OutputFile>..\\..\\..\\binARM\\icutu68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\..\\libARM\\icutud.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\..\\libARM\\icutud.lib<\/ImportLibrary>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Platform)'=='ARM64'\">\n+    <ClCompile>\n+      <PrecompiledHeaderOutputFile>.\\ARM64\\$(Configuration)\/toolutil.pch<\/PrecompiledHeaderOutputFile>\n+      <AssemblerListingLocation>.\\ARM64\\$(Configuration)\/<\/AssemblerListingLocation>\n+      <ObjectFileName>.\\ARM64\\$(Configuration)\/<\/ObjectFileName>\n+      <ProgramDataBaseFileName>.\\ARM64\\$(Configuration)\/<\/ProgramDataBaseFileName>\n+    <\/ClCompile>\n+    <Link>\n+      <AdditionalLibraryDirectories>.\\..\\..\\..\\libARM64;%(AdditionalLibraryDirectories)<\/AdditionalLibraryDirectories>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|ARM64'\">\n+    <Midl>\n+      <TypeLibraryName>.\\..\\..\\..\\libARM64\\icutu.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <Link>\n+      <OutputFile>..\\..\\..\\binARM64\\icutu68.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\..\\libARM64\\icutu.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\..\\libARM64\\icutu.lib<\/ImportLibrary>\n+    <\/Link>\n+  <\/ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|ARM64'\">\n+    <Midl>\n+      <TypeLibraryName>.\\..\\..\\..\\libARM64\\icutud.tlb<\/TypeLibraryName>\n+    <\/Midl>\n+    <ClCompile>\n+      <DebugInformationFormat>ProgramDatabase<\/DebugInformationFormat>\n+    <\/ClCompile>\n+    <Link>\n+      <OutputFile>..\\..\\..\\binARM64\\icutu68d.dll<\/OutputFile>\n+      <ProgramDatabaseFile>.\\..\\..\\..\\libARM64\\icutud.pdb<\/ProgramDatabaseFile>\n+      <ImportLibrary>..\\..\\..\\libARM64\\icutud.lib<\/ImportLibrary>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/toolutil.vcxproj","additions":123,"deletions":80,"binary":false,"changes":203,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-#define U_EOF 0xFFFFFFFF\n+#define U_EOF ((int32_t)0xFFFFFFFF)\n@@ -39,1 +39,1 @@\n-#define U_ERR 0xFFFFFFFE\n+#define U_ERR ((int32_t)0xFFFFFFFE)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/ucbuf.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -597,3 +597,4 @@\n-#define ICU_TRAC_URL \"http:\/\/bugs.icu-project.org\/trac\/ticket\/\"\n-#define CLDR_TRAC_URL \"http:\/\/unicode.org\/cldr\/trac\/ticket\/\"\n-#define CLDR_TICKET_PREFIX \"cldrbug:\"\n+#define UNICODE_BUG_URL \"https:\/\/unicode-org.atlassian.net\/browse\/\"\n+#define OLD_CLDR_PREFIX \"cldrbug:\"\n+#define CLDR_BUG_PREFIX \"CLDR-\"\n+#define ICU_BUG_PREFIX \"ICU-\"\n@@ -601,14 +602,0 @@\n-U_CAPI char *udbg_knownIssueURLFrom(const char *ticket, char *buf) {\n-  if( ticket==NULL ) {\n-    return NULL;\n-  }\n-\n-  if( !strncmp(ticket, CLDR_TICKET_PREFIX, strlen(CLDR_TICKET_PREFIX)) ) {\n-    strcpy( buf, CLDR_TRAC_URL );\n-    strcat( buf, ticket+strlen(CLDR_TICKET_PREFIX) );\n-  } else {\n-    strcpy( buf, ICU_TRAC_URL );\n-    strcat( buf, ticket );\n-  }\n-  return buf;\n-}\n@@ -644,1 +631,19 @@\n-void KnownIssues::add(const char *ticket, const char *where, const UChar *msg, UBool *firstForTicket, UBool *firstForWhere)\n+\/**\n+ * Map cldr:1234 to CLDR-1234\n+ * Map 1234 to ICU-1234\n+ *\/\n+static std::string mapTicketId(const char *ticketStr) {\n+  std::string ticket(ticketStr);\n+  \/\/ TODO: Can remove this function once all logKnownIssue calls are switched over\n+  \/\/ to the ICU-1234 and CLDR-1234 format.\n+  if(ticket.rfind(OLD_CLDR_PREFIX) == 0) {\n+    \/\/ map cldrbug:1234 to CLDR-1234\n+    ticket.replace(0, uprv_strlen(OLD_CLDR_PREFIX), CLDR_BUG_PREFIX);\n+  } else if(::isdigit(ticket[0])) {\n+    \/\/ map 1234 to ICU-1234\n+    ticket.insert(0, ICU_BUG_PREFIX);\n+  }\n+  return ticket;\n+}\n+\n+void KnownIssues::add(const char *ticketStr, const char *where, const UChar *msg, UBool *firstForTicket, UBool *firstForWhere)\n@@ -646,0 +651,1 @@\n+  const std::string ticket = mapTicketId(ticketStr);\n@@ -667,1 +673,1 @@\n-void KnownIssues::add(const char *ticket, const char *where, const char *msg, UBool *firstForTicket, UBool *firstForWhere)\n+void KnownIssues::add(const char *ticketStr, const char *where, const char *msg, UBool *firstForTicket, UBool *firstForWhere)\n@@ -669,0 +675,1 @@\n+  const std::string ticket = mapTicketId(ticketStr);\n@@ -700,2 +707,7 @@\n-    char URL[1024];\n-    std::cout << '#' << (*i).first << \" <\" << udbg_knownIssueURLFrom( (*i).first.c_str(), URL ) << \">\" << std::endl;\n+    const std::string ticketid = (*i).first;\n+    std::cout << \"[\" << ticketid << \"] \";\n+    if(ticketid.rfind(ICU_BUG_PREFIX) == 0 || ticketid.rfind(CLDR_BUG_PREFIX) == 0) {\n+      \/\/ If it's a unicode.org bug.\n+      std::cout << UNICODE_BUG_URL << ticketid;\n+    } \/\/ Else: some other kind of bug. Allow this, but without a URL.\n+    std::cout << std::endl;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/udbgutil.cpp","additions":33,"deletions":21,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -116,8 +116,0 @@\n-\/**\n- * Convert a \"known issue\" string into a URL\n- * @param ticket ticket string such as \"10245\" or \"cldrbug:5013\"\n- * @param buf output buffer - must be UDBG_KNOWNISSUE_LEN in size\n- * @return pointer to output buffer, or NULL on err\n- *\/\n-U_CAPI char *udbg_knownIssueURLFrom(const char *ticket, char *buf);\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/udbgutil.h","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,0 +60,10 @@\n+    char dirSepChar = U_FILE_SEP_CHAR;\n+#if (U_FILE_SEP_CHAR != U_FILE_ALT_SEP_CHAR)\n+    \/\/ We may need to append a different directory separator when building for Cygwin or MSYS2.\n+    if(dir && *dir) {\n+      if(!uprv_strchr(dir, U_FILE_SEP_CHAR) && uprv_strchr(dir, U_FILE_ALT_SEP_CHAR)) {\n+          dirSepChar = U_FILE_ALT_SEP_CHAR;\n+      }\n+    }\n+#endif\n+\n@@ -67,1 +77,1 @@\n-        if (dir[strlen(dir) - 1]!= U_FILE_SEP_CHAR) {\n+        if (dir[strlen(dir) - 1]!= dirSepChar) {\n@@ -90,2 +100,2 @@\n-        if (*(p-1)!=U_FILE_SEP_CHAR) {\n-            *p++=U_FILE_SEP_CHAR;\n+        if (*(p-1)!=dirSepChar) {\n+            *p++=dirSepChar;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/unewdata.cpp","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/icu\/source\/tools\/toolutil\/xmlparser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1961,1 +1961,1 @@\n-                              TRUE);\n+                              1);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxml\/src\/encoding.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            isAccessible = TRUE;\n+            isAccessible = true;\n@@ -87,1 +87,1 @@\n-            isAccessible = FALSE;\n+            isAccessible = false;\n@@ -96,1 +96,1 @@\n-            isAccessible = TRUE;\n+            isAccessible = true;\n@@ -101,1 +101,1 @@\n-            isAccessible = FALSE;\n+            isAccessible = false;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/text\/icu\/UTextProvider.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-            return TRUE;\n+            return true;\n@@ -108,1 +108,1 @@\n-            return FALSE;\n+            return false;\n@@ -114,1 +114,1 @@\n-            return TRUE;\n+            return true;\n@@ -119,1 +119,1 @@\n-            return FALSE;\n+            return false;\n@@ -147,1 +147,1 @@\n-    return TRUE;\n+    return true;\n@@ -340,1 +340,1 @@\n-        return FALSE;\n+        return false;\n@@ -360,1 +360,1 @@\n-    return TRUE;\n+    return true;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/text\/icu\/UTextProviderLatin1.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        return FALSE;\n+        return false;\n@@ -149,1 +149,1 @@\n-    return TRUE;\n+    return true;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/text\/icu\/UTextProviderUTF16.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -243,1 +243,1 @@\n-        ucnv_setFallback(m_converter.get(), TRUE);\n+        ucnv_setFallback(m_converter.get(), true);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/text\/TextCodecICU.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}