{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -407,2 +407,2 @@\n-        \/\/ update the item within this cell, so that it represents the new value\n-        updateItem(newValue, false);\n+        \/\/ Update the item within this cell, so that it represents the new value\n+        updateItem(-1);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -377,2 +377,2 @@\n-        \/\/ update the item within this cell, so that it represents the new value\n-        updateItem(newValue, false);\n+        \/\/ Update the item within this cell, so that it represents the new value\n+        updateItem(-1);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -417,3 +417,2 @@\n-        \/\/ FIXME: JDK-8187314 must respect actual committed value\n-        \/\/ update the item within this cell, so that it represents the new value\n-        updateItem(newValue, false);\n+        \/\/ Update the item within this cell, so that it represents the new value\n+        updateItem(-1);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeCell.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -394,2 +394,2 @@\n-        \/\/ update the item within this cell, so that it represents the new value\n-        updateItem(newValue, false);\n+        \/\/ Update the item within this cell, so that it represents the new value\n+        updateItem(-1);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1109,0 +1109,24 @@\n+    \/**\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8187314\">JDK-8187314<\/a>.\n+     *\/\n+    @Test\n+    public void testEditCommitValueChangeIsReflectedInCell() {\n+        list.setEditable(true);\n+\n+        cell.updateListView(list);\n+        list.setOnEditCommit(event -> {\n+            assertEquals(\"ABCDEF\", event.getNewValue());\n+            \/\/ Change the underlying item.\n+            model.set(0, \"ABCDEF [Changed]\");\n+        });\n+\n+        cell.updateIndex(0);\n+\n+        assertEquals(\"Apples\", cell.getItem());\n+\n+        cell.startEdit();\n+        cell.commitEdit(\"ABCDEF\");\n+\n+        assertEquals(\"ABCDEF [Changed]\", cell.getItem());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -905,0 +905,23 @@\n+    \/**\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8187314\">JDK-8187314<\/a>.\n+     *\/\n+    @Test\n+    public void testEditCommitValueChangeIsReflectedInCell() {\n+        setupForEditing();\n+        editingColumn.setCellValueFactory(cc -> new SimpleObjectProperty<>(cc.getValue()));\n+        editingColumn.setOnEditCommit(event -> {\n+            assertEquals(\"ABCDEF\", event.getNewValue());\n+            \/\/ Change the underlying item.\n+            model.set(0, \"ABCDEF [Changed]\");\n+        });\n+\n+        cell.updateIndex(0);\n+\n+        assertEquals(\"Four\", cell.getItem());\n+\n+        cell.startEdit();\n+        cell.commitEdit(\"ABCDEF\");\n+\n+        assertEquals(\"ABCDEF [Changed]\", cell.getItem());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -930,1 +930,0 @@\n-    @Ignore(\"JDK-8187314\")\n@@ -1040,0 +1039,24 @@\n+    \/**\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8187314\">JDK-8187314<\/a>.\n+     *\/\n+    @Test\n+    public void testEditCommitValueChangeIsReflectedInCell() {\n+        tree.setEditable(true);\n+\n+        cell.updateTreeView(tree);\n+        tree.setOnEditCommit(event -> {\n+            assertEquals(\"ABCDEF\", event.getNewValue());\n+            \/\/ Change the underlying item.\n+            root.setValue(\"ABCDEF [Changed]\");\n+        });\n+\n+        cell.updateIndex(0);\n+\n+        assertEquals(\"Root\", cell.getItem());\n+\n+        cell.startEdit();\n+        cell.commitEdit(\"ABCDEF\");\n+\n+        assertEquals(\"ABCDEF [Changed]\", cell.getItem());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeCellTest.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1217,0 +1217,23 @@\n+    \/**\n+     * See also: <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8187314\">JDK-8187314<\/a>.\n+     *\/\n+    @Test\n+    public void testEditCommitValueChangeIsReflectedInCell() {\n+        setupForEditing();\n+        editingColumn.setCellValueFactory(cc -> new SimpleObjectProperty<>(cc.getValue().getValue()));\n+        editingColumn.setOnEditCommit(event -> {\n+            assertEquals(\"ABCDEF\", event.getNewValue());\n+            \/\/ Change the underlying item.\n+            root.setValue(\"ABCDEF [Changed]\");\n+        });\n+\n+        cell.updateIndex(0);\n+\n+        assertEquals(\"Root\", cell.getItem());\n+\n+        cell.startEdit();\n+        cell.commitEdit(\"ABCDEF\");\n+\n+        assertEquals(\"ABCDEF [Changed]\", cell.getItem());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"}]}