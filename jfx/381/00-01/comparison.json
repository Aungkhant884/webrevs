{"files":[{"patch":"@@ -36,1 +36,2 @@\n-import javafx.geometry.Bounds;\n+import javafx.geometry.HPos;\n+import javafx.geometry.Point2D;\n@@ -38,0 +39,1 @@\n+import javafx.geometry.VPos;\n@@ -42,0 +44,1 @@\n+import com.sun.javafx.util.Utils;\n@@ -44,0 +47,2 @@\n+import javafx.beans.property.BooleanProperty;\n+import javafx.beans.property.SimpleBooleanProperty;\n@@ -224,1 +229,1 @@\n-     * specified by the {@code side} parameter, and offset\n+     * specified by the {@code hpos} and {@code vpos} parameters, and offset\n@@ -229,0 +234,8 @@\n+     * To clarify the purpose of the {@code hpos} and {@code vpos} parameters,\n+     * consider that they are relative to the anchor node. As such, a {@code hpos}\n+     * and {@code vpos} of {@code CENTER} would mean that the ContextMenu appears\n+     * on top of the anchor, with the (0,0) position of the {@code ContextMenu}\n+     * positioned at (0,0) of the anchor. A {@code hpos} of right would then shift\n+     * the {@code ContextMenu} such that its top-left (0,0) position would be attached\n+     * to the top-right position of the anchor.\n+     * <p>\n@@ -236,0 +249,1 @@\n+    \/\/ TODO provide more detail\n@@ -241,19 +255,11 @@\n-        Bounds anchorBounds = anchor.localToScreen(anchor.getLayoutBounds());\n-        switch (side) {\n-            case TOP:\n-                setAnchorLocation(AnchorLocation.CONTENT_BOTTOM_LEFT);\n-                doShow(anchor, anchorBounds.getMinX() + dx, anchorBounds.getMinY() + dy);\n-                break;\n-            case RIGHT:\n-                setAnchorLocation(AnchorLocation.CONTENT_TOP_LEFT);\n-                doShow(anchor, anchorBounds.getMaxX() + dx, anchorBounds.getMinY() + dy);\n-                break;\n-            case BOTTOM:\n-                setAnchorLocation(AnchorLocation.CONTENT_TOP_LEFT);\n-                doShow(anchor, anchorBounds.getMinX() + dx, anchorBounds.getMaxY() + dy);\n-                break;\n-            case LEFT:\n-                setAnchorLocation(AnchorLocation.CONTENT_TOP_RIGHT);\n-                doShow(anchor, anchorBounds.getMinX() + dx, anchorBounds.getMinY() + dy);\n-                break;\n-        }\n+        \/\/ FIXME because Side is not yet in javafx.geometry, we have to convert\n+        \/\/ to the old HPos\/VPos API here, as Utils can not refer to Side in the\n+        \/\/ charting API.\n+        HPos hpos = side == Side.LEFT ? HPos.LEFT : side == Side.RIGHT ? HPos.RIGHT : HPos.CENTER;\n+        VPos vpos = side == Side.TOP ? VPos.TOP : side == Side.BOTTOM ? VPos.BOTTOM : VPos.CENTER;\n+\n+        \/\/ translate from anchor\/hpos\/vpos\/dx\/dy into screenX\/screenY\n+        Point2D point = Utils.pointRelativeTo(anchor,\n+                prefWidth(-1), prefHeight(-1),\n+                hpos, vpos, dx, dy, true);\n+        doShow(anchor, point.getX(), point.getY());\n@@ -262,1 +268,1 @@\n-    \/**\n+     \/**\n@@ -277,1 +283,0 @@\n-        setAnchorLocation(AnchorLocation.CONTENT_TOP_LEFT);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ContextMenu.java","additions":28,"deletions":23,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import javafx.geometry.Bounds;\n+\n@@ -47,4 +47,0 @@\n-\n-import java.io.File;\n-import java.io.FileWriter;\n-import java.io.IOException;\n@@ -643,102 +639,0 @@\n-\n-    @Test public void test_position_showOnScreen() {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn,100, 100);\n-\n-        assertEquals(cm.getAnchorX(), 100, 0.0);\n-        assertEquals(cm.getAnchorY(), 100, 0.0);\n-    }\n-\n-    @Test public void test_position_showOnTop() throws InterruptedException {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn, Side.TOP, 0, 0);\n-\n-        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n-        Node cmNode = cm.getScene().getRoot();\n-        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n-\n-        assertEquals(anchorBounds.getMinX(), cmBounds.getMinX(), 0.0);\n-        assertEquals(anchorBounds.getMinY(), cmBounds.getMaxY(), 0.0);\n-    }\n-\n-    @Test public void test_position_showOnTopOffset() throws InterruptedException {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn, Side.TOP, 3, 5);\n-\n-        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n-        Node cmNode = cm.getScene().getRoot();\n-        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n-\n-        assertEquals(anchorBounds.getMinX() + 3, cmBounds.getMinX(), 0.0);\n-        assertEquals(anchorBounds.getMinY() + 5, cmBounds.getMaxY(), 0.0);\n-    }\n-\n-    @Test public void test_position_withCSS() throws InterruptedException {\n-        anchorBtn.getScene().getStylesheets().add(createStylesheet());\n-        test_position_showOnTop();\n-        test_position_showOnRight();\n-        test_position_showOnLeft();\n-        test_position_showOnBottom();\n-    }\n-\n-    private String createStylesheet() {\n-        try {\n-            File f = File.createTempFile(\"test_position_showOnTopWithCSS\", \".css\");\n-            f.deleteOnExit();\n-            FileWriter fw=new FileWriter(f);\n-            fw.write(\".menu-item { -fx-padding: 10px;}\\n\");\n-            fw.close();\n-            return f.toURI().toString();\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-\n-    @Test public void test_position_showOnRight() {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn, Side.RIGHT, 0, 0);\n-\n-        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n-        Node cmNode = cm.getScene().getRoot();\n-        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n-\n-        assertEquals(anchorBounds.getMaxX(), cmBounds.getMinX(), 0.0);\n-        assertEquals(anchorBounds.getMinY(), cmBounds.getMinY(), 0.0);\n-    }\n-\n-    @Test public void test_position_showOnRightOffset() {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn, Side.RIGHT, 3, 5);\n-\n-        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n-        Node cmNode = cm.getScene().getRoot();\n-        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n-\n-        assertEquals(anchorBounds.getMaxX() + 3, cmBounds.getMinX(), 0.0);\n-        assertEquals(anchorBounds.getMinY() + 5, cmBounds.getMinY(), 0.0);\n-    }\n-\n-    @Test public void test_position_showOnBottom() {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn, Side.BOTTOM, 0, 0);\n-\n-        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n-        Node cmNode = cm.getScene().getRoot();\n-        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n-\n-        assertEquals(anchorBounds.getMinX(), cmBounds.getMinX(), 0.0);\n-        assertEquals(anchorBounds.getMaxY(), cmBounds.getMinY(), 0.0);\n-    }\n-\n-    @Test public void test_position_showOnLeft() {\n-        ContextMenu cm = createContextMenu(false);\n-        cm.show(anchorBtn, Side.LEFT, 0, 0);\n-\n-        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n-        Node cmNode = cm.getScene().getRoot();\n-        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n-\n-        assertEquals(anchorBounds.getMinX(), cmBounds.getMaxX(), 0.0);\n-        assertEquals(anchorBounds.getMinY(), cmBounds.getMinY(), 0.0);\n-    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ContextMenuTest.java","additions":1,"deletions":107,"binary":false,"changes":108,"status":"modified"}]}