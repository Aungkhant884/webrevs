{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import javafx.scene.control.TableRow;\n@@ -39,0 +38,1 @@\n+import test.com.sun.javafx.scene.control.infrastructure.VirtualFlowTestUtils;\n@@ -41,2 +41,0 @@\n-import java.util.concurrent.atomic.AtomicReference;\n-\n@@ -44,1 +42,0 @@\n-import static junit.framework.Assert.assertNotNull;\n@@ -67,4 +64,4 @@\n-                new Person(\"firstName1\", \"lastName1\",\"email1@javafx.com\",1),\n-                new Person(\"firstName2\", \"lastName2\",\"email2@javafx.com\",2),\n-                new Person(\"firstName3\", \"lastName3\",\"email3@javafx.com\",3),\n-                new Person(\"firstName4\", \"lastName4\",\"email4@javafx.com\",4)\n+                new Person(\"firstName1\", \"lastName1\", \"email1@javafx.com\", 1),\n+                new Person(\"firstName2\", \"lastName2\", \"email2@javafx.com\", 2),\n+                new Person(\"firstName3\", \"lastName3\", \"email3@javafx.com\", 3),\n+                new Person(\"firstName4\", \"lastName4\", \"email4@javafx.com\", 4)\n@@ -80,1 +77,2 @@\n-        removedColumnsShouldRemoveCorrespondingCellsInRow(true);\n+        tableView.setFixedCellSize(24);\n+        removedColumnsShouldRemoveCorrespondingCellsInRowImpl();\n@@ -85,1 +83,1 @@\n-        removedColumnsShouldRemoveCorrespondingCellsInRow(false);\n+        removedColumnsShouldRemoveCorrespondingCellsInRowImpl();\n@@ -90,1 +88,2 @@\n-        invisibleColumnsShouldRemoveCorrespondingCellsInRow(true);\n+        tableView.setFixedCellSize(24);\n+        invisibleColumnsShouldRemoveCorrespondingCellsInRowImpl();\n@@ -95,1 +94,1 @@\n-        invisibleColumnsShouldRemoveCorrespondingCellsInRow(false);\n+        invisibleColumnsShouldRemoveCorrespondingCellsInRowImpl();\n@@ -103,3 +102,1 @@\n-    private void invisibleColumnsShouldRemoveCorrespondingCellsInRow(boolean useFixedCellSize) {\n-        TableRow<Person> tableRow = setRowFactoryVerifyReturnFirstRow(useFixedCellSize);\n-\n+    private void invisibleColumnsShouldRemoveCorrespondingCellsInRowImpl() {\n@@ -113,1 +110,2 @@\n-        assertEquals(tableView.getColumns().size() - 2, tableRow.getChildrenUnmodifiable().size());\n+        assertEquals(tableView.getColumns().size() - 2,\n+                VirtualFlowTestUtils.getCell(tableView, 0).getChildrenUnmodifiable().size());\n@@ -116,3 +114,1 @@\n-    private void removedColumnsShouldRemoveCorrespondingCellsInRow(boolean useFixedCellSize) {\n-        TableRow<Person> tableRow = setRowFactoryVerifyReturnFirstRow(useFixedCellSize);\n-\n+    private void removedColumnsShouldRemoveCorrespondingCellsInRowImpl() {\n@@ -120,2 +116,1 @@\n-        tableView.getColumns().remove(tableView.getColumns().size() - 1);\n-        tableView.getColumns().remove(tableView.getColumns().size() - 1);\n+        tableView.getColumns().remove(tableView.getColumns().size() - 2, tableView.getColumns().size() - 1);\n@@ -126,30 +121,2 @@\n-        assertEquals(tableView.getColumns().size(), tableRow.getChildrenUnmodifiable().size());\n-    }\n-\n-    private TableRow<Person> setRowFactoryVerifyReturnFirstRow(boolean useFixedCellSize) {\n-        \/\/ We save the first table row to check it later.\n-        AtomicReference<TableRow<Person>> tableRowRef = new AtomicReference<>();\n-\n-        if (useFixedCellSize) {\n-            tableView.setFixedCellSize(24);\n-        }\n-\n-        tableView.setRowFactory(tableView -> {\n-            TableRow<Person> tableRow = new TableRow<>();\n-            if (tableRowRef.get() == null) {\n-                tableRowRef.set(tableRow);\n-            }\n-            return tableRow;\n-        });\n-\n-        \/\/ Refresh the table so that the rows are recreated.\n-        tableView.refresh();\n-\n-        Toolkit.getToolkit().firePulse();\n-\n-        TableRow<Person> tableRow = tableRowRef.get();\n-        assertNotNull(tableRow);\n-\n-        \/\/ Column count should match the cell count.\n-        assertEquals(tableView.getColumns().size(), tableRow.getChildrenUnmodifiable().size());\n-        return tableRow;\n+        assertEquals(tableView.getColumns().size(),\n+                VirtualFlowTestUtils.getCell(tableView, 0).getChildrenUnmodifiable().size());\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableRowSkinTest.java","additions":18,"deletions":51,"binary":false,"changes":69,"status":"modified"}]}