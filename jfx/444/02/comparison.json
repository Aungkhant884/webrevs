{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -545,3 +545,2 @@\n-            \/\/ we leave the adding \/ removing up to the layoutChildren method mostly,\n-            \/\/ but here we remove any children cells that refer to columns that are\n-            \/\/ not visible\n+            \/\/ we leave the adding \/ removing up to the layoutChildren method mostly, but here we remove any children\n+            \/\/ cells that refer to columns that are removed or not visible.\n@@ -550,2 +549,3 @@\n-                if (! (cell instanceof IndexedCell)) continue;\n-                if (!getTableColumn((R)cell).isVisible()) {\n+                if (!(cell instanceof IndexedCell)) continue;\n+                TableColumnBase<T, ?> tableColumn = getTableColumn((R) cell);\n+                if (!getVisibleLeafColumns().contains(tableColumn)) {\n@@ -556,1 +556,1 @@\n-        } else if (!fixedCellSizeEnabled && (resetChildren || cellsEmpty)) {\n+        } else if (resetChildren || cellsEmpty) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableRowSkinBase.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.control.skin;\n+\n+import com.sun.javafx.tk.Toolkit;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ObservableList;\n+import javafx.scene.control.TableColumn;\n+import javafx.scene.control.TableView;\n+import javafx.scene.control.cell.PropertyValueFactory;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import test.com.sun.javafx.scene.control.infrastructure.StageLoader;\n+import test.com.sun.javafx.scene.control.infrastructure.VirtualFlowTestUtils;\n+import test.com.sun.javafx.scene.control.test.Person;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class TableRowSkinTest {\n+\n+    private TableView<Person> tableView;\n+    private StageLoader stageLoader;\n+\n+    @Before\n+    public void before() {\n+        tableView = new TableView<>();\n+\n+        TableColumn<Person, String> firstNameCol = new TableColumn<>(\"Firstname\");\n+        firstNameCol.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\n+        TableColumn<Person, String> lastNameCol = new TableColumn<>(\"Lastname\");\n+        lastNameCol.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\n+        TableColumn<Person, String> emailCol = new TableColumn<>(\"Email\");\n+        emailCol.setCellValueFactory(new PropertyValueFactory<>(\"email\"));\n+        TableColumn<Person, Integer> ageCol = new TableColumn<>(\"Age\");\n+        ageCol.setCellValueFactory(new PropertyValueFactory<>(\"age\"));\n+\n+        tableView.getColumns().addAll(firstNameCol, lastNameCol, emailCol, ageCol);\n+\n+        ObservableList<Person> items = FXCollections.observableArrayList(\n+                new Person(\"firstName1\", \"lastName1\", \"email1@javafx.com\", 1),\n+                new Person(\"firstName2\", \"lastName2\", \"email2@javafx.com\", 2),\n+                new Person(\"firstName3\", \"lastName3\", \"email3@javafx.com\", 3),\n+                new Person(\"firstName4\", \"lastName4\", \"email4@javafx.com\", 4)\n+        );\n+\n+        tableView.setItems(items);\n+\n+        stageLoader = new StageLoader(tableView);\n+    }\n+\n+    @Test\n+    public void removedColumnsShouldRemoveCorrespondingCellsInRowFixedCellSize() {\n+        tableView.setFixedCellSize(24);\n+        removedColumnsShouldRemoveCorrespondingCellsInRowImpl();\n+    }\n+\n+    @Test\n+    public void removedColumnsShouldRemoveCorrespondingCellsInRow() {\n+        removedColumnsShouldRemoveCorrespondingCellsInRowImpl();\n+    }\n+\n+    @Test\n+    public void invisibleColumnsShouldRemoveCorrespondingCellsInRowFixedCellSize() {\n+        tableView.setFixedCellSize(24);\n+        invisibleColumnsShouldRemoveCorrespondingCellsInRowImpl();\n+    }\n+\n+    @Test\n+    public void invisibleColumnsShouldRemoveCorrespondingCellsInRow() {\n+        invisibleColumnsShouldRemoveCorrespondingCellsInRowImpl();\n+    }\n+\n+    @After\n+    public void after() {\n+        stageLoader.dispose();\n+    }\n+\n+    private void invisibleColumnsShouldRemoveCorrespondingCellsInRowImpl() {\n+        \/\/ Set the last 2 columns invisible.\n+        tableView.getColumns().get(tableView.getColumns().size() - 1).setVisible(false);\n+        tableView.getColumns().get(tableView.getColumns().size() - 2).setVisible(false);\n+\n+        Toolkit.getToolkit().firePulse();\n+\n+        \/\/ We set 2 columns to invisible, so the cell count should be decremented by 2 as well.\n+        assertEquals(tableView.getColumns().size() - 2,\n+                VirtualFlowTestUtils.getCell(tableView, 0).getChildrenUnmodifiable().size());\n+    }\n+\n+    private void removedColumnsShouldRemoveCorrespondingCellsInRowImpl() {\n+        \/\/ Remove the last 2 columns.\n+        tableView.getColumns().remove(tableView.getColumns().size() - 1, tableView.getColumns().size());\n+\n+        Toolkit.getToolkit().firePulse();\n+\n+        \/\/ We removed 2 columns, so the cell count should be decremented by 2 as well.\n+        assertEquals(tableView.getColumns().size(),\n+                VirtualFlowTestUtils.getCell(tableView, 0).getChildrenUnmodifiable().size());\n+    }\n+\n+}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableRowSkinTest.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"}]}