{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,26 +45,3 @@\n-    private final ChangeListener<Boolean> windowShowingChangedListener = (obs, oldVal, newVal) -> updateTreeShowing();\n-\n-    private final ChangeListener<Window> sceneWindowChangedListener = (scene, oldWindow, newWindow) -> {\n-        if (oldWindow != null) {\n-            oldWindow.showingProperty().removeListener(windowShowingChangedListener);\n-        }\n-        if (newWindow != null) {\n-            newWindow.showingProperty().addListener(windowShowingChangedListener);\n-        }\n-        updateTreeShowing();\n-    };\n-\n-    private final ChangeListener<Scene> nodeSceneChangedListener = (node, oldScene, newScene) -> {\n-        if (oldScene != null) {\n-            oldScene.windowProperty().removeListener(sceneWindowChangedListener);\n-        }\n-        if (newScene != null) {\n-            newScene.windowProperty().addListener(sceneWindowChangedListener);\n-        }\n-\n-        sceneWindowChangedListener.changed(\n-            null,\n-            oldScene == null ? null : oldScene.getWindow(),\n-            newScene == null ? null : newScene.getWindow()\n-        );\n-    };\n+    private final ChangeListener<Boolean> windowShowingChangedListener = (obs, old, current) -> updateTreeShowing();\n+    private final ChangeListener<Window> sceneWindowChangedListener = (obs, old, current) -> windowChanged(old, current);\n+    private final ChangeListener<Scene> nodeSceneChangedListener = (obs, old, current) -> sceneChanged(old, current);\n@@ -89,1 +66,1 @@\n-        nodeSceneChangedListener.changed(null, null, node.getScene());  \/\/ registers listeners on Window\/Showing\n+        sceneChanged(null, node.getScene());\n@@ -102,10 +79,1 @@\n-        nodeSceneChangedListener.changed(null, node.getScene(), null);  \/\/ unregisters listeners on Window\/Showing\n-    }\n-\n-    private void updateTreeShowing() {\n-        boolean newValue = NodeHelper.isTreeShowing(node);\n-\n-        if (newValue != treeShowing) {\n-            treeShowing = newValue;\n-            invalidate();\n-        }\n+        sceneChanged(node.getScene(), null);\n@@ -150,0 +118,31 @@\n+\n+    private void sceneChanged(Scene oldScene, Scene newScene) {\n+        if (oldScene != null) {\n+            oldScene.windowProperty().removeListener(sceneWindowChangedListener);\n+        }\n+        if (newScene != null) {\n+            newScene.windowProperty().addListener(sceneWindowChangedListener);\n+        }\n+\n+        windowChanged(oldScene.getWindow(), newScene.getWindow());\n+    }\n+\n+    private void windowChanged(Window oldWindow, Window newWindow) {\n+        if (oldWindow != null) {\n+            oldWindow.showingProperty().removeListener(windowShowingChangedListener);\n+        }\n+        if (newWindow != null) {\n+            newWindow.showingProperty().addListener(windowShowingChangedListener);\n+        }\n+\n+        updateTreeShowing();\n+    }\n+\n+    private void updateTreeShowing() {\n+        boolean newValue = NodeHelper.isTreeShowing(node);\n+\n+        if (newValue != treeShowing) {\n+            treeShowing = newValue;\n+            invalidate();\n+        }\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/TreeShowingExpression.java","additions":37,"deletions":38,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/SubScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/TreeShowingExpressionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}