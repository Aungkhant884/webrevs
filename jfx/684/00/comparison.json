{"files":[{"patch":"@@ -389,1 +389,0 @@\n-        ListView<T> list = getListView();\n@@ -391,0 +390,9 @@\n+        \/\/ inform parent classes of the commit, so that they can switch us\n+        \/\/ out of the editing state.\n+        \/\/ This MUST come before the updateItem call below, otherwise it will\n+        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n+        \/\/ fired (as identified in RT-29650)\n+        super.commitEdit(newValue);\n+\n+        ListView<T> list = getListView();\n+        \/\/ JDK-8187307: fire the commit after updating cell's editing state\n@@ -399,7 +407,0 @@\n-        \/\/ inform parent classes of the commit, so that they can switch us\n-        \/\/ out of the editing state.\n-        \/\/ This MUST come before the updateItem call below, otherwise it will\n-        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n-        \/\/ fired (as identified in RT-29650)\n-        super.commitEdit(newValue);\n-\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -356,0 +356,7 @@\n+        \/\/ inform parent classes of the commit, so that they can switch us\n+        \/\/ out of the editing state.\n+        \/\/ This MUST come before the updateItem call below, otherwise it will\n+        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n+        \/\/ fired (as identified in RT-29650)\n+        super.commitEdit(newValue);\n+\n@@ -357,0 +364,1 @@\n+        \/\/ JDK-8187307: fire the commit after updating cell's editing state\n@@ -360,5 +368,5 @@\n-                table,\n-                editingCellAtStartEdit,\n-                TableColumn.editCommitEvent(),\n-                newValue\n-            );\n+                    table,\n+                    editingCellAtStartEdit,\n+                    TableColumn.editCommitEvent(),\n+                    newValue\n+                    );\n@@ -369,7 +377,0 @@\n-        \/\/ inform parent classes of the commit, so that they can switch us\n-        \/\/ out of the editing state.\n-        \/\/ This MUST come before the updateItem call below, otherwise it will\n-        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n-        \/\/ fired (as identified in RT-29650)\n-        super.commitEdit(newValue);\n-\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -397,0 +397,8 @@\n+\n+        \/\/ inform parent classes of the commit, so that they can switch us\n+        \/\/ out of the editing state.\n+        \/\/ This MUST come before the updateItem call below, otherwise it will\n+        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n+        \/\/ fired (as identified in RT-29650)\n+        super.commitEdit(newValue);\n+\n@@ -399,0 +407,1 @@\n+        \/\/ JDK-8187307: fire the commit after updating cell's editing state\n@@ -408,7 +417,0 @@\n-        \/\/ inform parent classes of the commit, so that they can switch us\n-        \/\/ out of the editing state.\n-        \/\/ This MUST come before the updateItem call below, otherwise it will\n-        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n-        \/\/ fired (as identified in RT-29650)\n-        super.commitEdit(newValue);\n-\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeCell.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -373,0 +373,7 @@\n+        \/\/ inform parent classes of the commit, so that they can switch us\n+        \/\/ out of the editing state.\n+        \/\/ This MUST come before the updateItem call below, otherwise it will\n+        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n+        \/\/ fired (as identified in RT-29650)\n+        super.commitEdit(newValue);\n+\n@@ -374,0 +381,1 @@\n+        \/\/ JDK-8187307: fire the commit after updating cell's editing state\n@@ -377,5 +385,5 @@\n-                table,\n-                editingCellAtStartEdit,\n-                TreeTableColumn.<S,T>editCommitEvent(),\n-                newValue\n-            );\n+                    table,\n+                    editingCellAtStartEdit,\n+                    TreeTableColumn.<S,T>editCommitEvent(),\n+                    newValue\n+                    );\n@@ -386,7 +394,0 @@\n-        \/\/ inform parent classes of the commit, so that they can switch us\n-        \/\/ out of the editing state.\n-        \/\/ This MUST come before the updateItem call below, otherwise it will\n-        \/\/ call cancelEdit(), resulting in both commit and cancel events being\n-        \/\/ fired (as identified in RT-29650)\n-        super.commitEdit(newValue);\n-\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -877,0 +877,20 @@\n+    @Test\n+    public void testCommitEditMustNotFireCancel() {\n+        list.setEditable(true);\n+        \/\/ JDK-8187307: handler that resets control's editing state\n+        list.setOnEditCommit(e -> {\n+            int index = e.getIndex();\n+            list.getItems().set(index, e.getNewValue());\n+            list.edit(-1);\n+        });\n+        cell.updateListView(list);\n+        int editingIndex = 1;\n+        cell.updateIndex(editingIndex);\n+        list.edit(editingIndex);\n+        List<EditEvent<String>> events = new ArrayList<>();\n+        list.setOnEditCancel(events::add);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"sanity: value committed\", value, list.getItems().get(editingIndex));\n+        assertEquals(\"commit must not have fired editCancel\", 0, events.size());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -603,1 +603,22 @@\n- \/\/ fix of JDK-8271474 changed the implementation of how the editing location is evaluated\n+\n+    @Test\n+    public void testCommitEditMustNotFireCancel() {\n+        setupForEditing();\n+        \/\/ JDK-8187307: handler that resets control's editing state\n+        editingColumn.setOnEditCommit(e -> {\n+            table.getItems().set(e.getTablePosition().getRow(), e.getNewValue());\n+            table.edit(-1, null);\n+        });\n+        int editingRow = 1;\n+        cell.updateIndex(editingRow);\n+        table.edit(editingRow, editingColumn);\n+        List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+        editingColumn.setOnEditCancel(events::add);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"sanity: value committed\", value, table.getItems().get(editingRow));\n+        assertEquals(\"commit must not have fired editCancel\", 0, events.size());\n+    }\n+\n+\n+\/\/ fix of JDK-8271474 changed the implementation of how the editing location is evaluated\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -870,0 +870,21 @@\n+    @Test\n+    public void testCommitEditMustNotFireCancel() {\n+        tree.setEditable(true);\n+        int editingIndex = 1;\n+        TreeItem<String> editingItem = tree.getTreeItem(editingIndex);\n+        \/\/ JDK-8187307: handler that resets control's editing state\n+        tree.setOnEditCommit(e -> {\n+            editingItem.setValue(e.getNewValue());\n+            tree.edit(null);\n+        });\n+        cell.updateTreeView(tree);\n+        cell.updateIndex(editingIndex);\n+        List<EditEvent<String>> events = new ArrayList<>();\n+        tree.setOnEditCancel(events::add);\n+        tree.edit(editingItem);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"sanity: value committed\", value, tree.getTreeItem(editingIndex).getValue());\n+        assertEquals(\"commit must not have fired editCancel\", 0, events.size());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeCellTest.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -915,1 +915,22 @@\n- \/\/ fix of JDK-8271474 changed the implementation of how the editing location is evaluated\n+\n+    @Test\n+    public void testCommitEditMustNotFireCancel() {\n+        setupForEditing();\n+        \/\/ JDK-8187307: handler that resets control's editing state\n+        editingColumn.setOnEditCommit(e -> {\n+            TreeItem<String> treeItem = tree.getTreeItem(e.getTreeTablePosition().getRow());\n+            treeItem.setValue(e.getNewValue());\n+            tree.edit(-1, null);\n+        });\n+        int editingRow = 1;\n+        cell.updateIndex(editingRow);\n+        tree.edit(editingRow, editingColumn);\n+        List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+        editingColumn.setOnEditCancel(events::add);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"sanity: value committed\", value, tree.getTreeItem(editingRow).getValue());\n+        assertEquals(\"commit must not have fired editCancel\", 0, events.size());\n+    }\n+\n+\/\/ fix of JDK-8271474 changed the implementation of how the editing location is evaluated\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}