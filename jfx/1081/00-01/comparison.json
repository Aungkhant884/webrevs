{"files":[{"patch":"@@ -40,0 +40,3 @@\n+ *\n+ * @param <I> the type of the instance providing the array\n+ * @param <E> the type of the elements in the array\n@@ -58,1 +61,0 @@\n-     * @param accessor an {@link Accessor}, cannot be {@code null}\n@@ -94,1 +96,1 @@\n-     * @param array the occupied slots of the array to set\n+     * @param occupiedSlots the occupied slots of the array to set\n@@ -168,1 +170,1 @@\n-     * @returns the element that was removed, can be {@code null} if the element at the given index was {@code null}\n+     * @return the element that was removed, can be {@code null} if the element at the given index was {@code null}\n@@ -217,1 +219,1 @@\n-     * @returns the element at the given index, can be {@code null} if the element at the given index was {@code null}\n+     * @return the element at the given index, can be {@code null} if the element at the given index was {@code null}\n@@ -238,1 +240,1 @@\n-     * @returns the element that was previously at the given index, can be {@code null} if the element at the given index was {@code null}\n+     * @return the element that was previously at the given index, can be {@code null} if the element at the given index was {@code null}\n@@ -373,2 +375,0 @@\n-            min = mid;\n-            mid = max;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/ArrayManager.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,2 @@\n+     *\n+     * @param <T> the element type\n@@ -243,1 +245,1 @@\n-     * Gets the {@link ChangeLisener} at the given index. This can be {@code null} if the\n+     * Gets the {@link ChangeListener} at the given index. This can be {@code null} if the\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/ListenerListBase.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-     * Notifies the listeners managed in the given instance.<p>\n+     * Notifies the listeners managed in the given instance.\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/ListenerManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -193,2 +193,1 @@\n-        \/\/ Latest value must be store before calling the listener, as nested loop will need to know what the old value was\n-        \/\/ Latest value should even be stored if it was \"equals\", as it may be a different reference\n+        \/\/ Latest value must be stored even if it was \"equals\", as it may be a different reference\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/OldValueCachingListenerManager.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n-import static org.junit.Assert.assertNull;\n@@ -7,0 +6,1 @@\n+import static org.junit.jupiter.api.Assertions.assertNull;\n@@ -91,1 +91,1 @@\n-        void setSshouldRejectSettingIllegalIndices() {\n+        void setShouldRejectSettingIllegalIndices() {\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/ArrayManagerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}