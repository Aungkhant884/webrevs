{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"build.gradle","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.ArrayList;\n@@ -94,0 +95,19 @@\n+    public static void assertCollectable(WeakReference[] weakReferences) {\n+        for (WeakReference wr : weakReferences) {\n+            assertCollectable(wr);\n+        }\n+    }\n+\n+    public static <T> void assertCollectable(ArrayList<WeakReference<T>> weakReferences) {\n+        for (WeakReference<T> wr : weakReferences) {\n+            assertCollectable(wr);\n+        }\n+    }\n+\n+    public static void assertCollectable(WeakReference weakReference, WeakReference... otherWeakReferences) {\n+        assertCollectable(weakReference);\n+        for (WeakReference wr : otherWeakReferences) {\n+            assertCollectable(wr);\n+        }\n+    }\n+\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/util\/memory\/JMemoryBuddy.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/LeakTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,3 +74,1 @@\n-        for (WeakReference<SwingNode> ref : weakRefArrSN) {\n-            JMemoryBuddy.assertCollectable(ref);\n-        }\n+        JMemoryBuddy.assertCollectable(weakRefArrSN);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/SwingNodeDnDMemoryLeakTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,7 +82,2 @@\n-        for (WeakReference<SwingNode> ref : weakRefArrSN) {\n-            JMemoryBuddy.assertCollectable(ref);\n-        }\n-\n-        for (WeakReference<JLabel> ref : weakRefArrJL) {\n-            JMemoryBuddy.assertCollectable(ref);\n-        }\n+        JMemoryBuddy.assertCollectable(weakRefArrSN);\n+        JMemoryBuddy.assertCollectable(weakRefArrJL);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/SwingNodeMemoryLeakTest.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -97,2 +97,1 @@\n-        JMemoryBuddy.assertCollectable(tabWeakRef);\n-        JMemoryBuddy.assertCollectable(textFieldWeakRef);\n+        JMemoryBuddy.assertCollectable(tabWeakRef, textFieldWeakRef);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/TabPaneHeaderLeakTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -80,5 +80,1 @@\n-        assertCollectable(closedFocusedStageWeak);\n-    }\n-\n-    public static void assertCollectable(WeakReference weakReference) throws Exception {\n-        JMemoryBuddy.assertCollectable(weakReference);\n+        JMemoryBuddy.assertCollectable(closedFocusedStageWeak);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/FocusedWindowTestBase.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}