{"files":[{"patch":"@@ -650,3 +650,1 @@\n-        TableRow<T> tableRow = rowFactory != null ? rowFactory.call(tv) : new TableRow<>();\n-        tableSkin.getChildren().add(tableRow);\n-        tableRow.applyCss();\n+        TableRow<T> tableRow = createMeasureRow(tv, tableSkin, rowFactory);\n@@ -667,1 +665,0 @@\n-                cell.applyCss();\n@@ -707,0 +704,15 @@\n+    private <T> TableRow<T> createMeasureRow(TableView<T> tv, TableViewSkinBase tableSkin,\n+            Callback<TableView<T>, TableRow<T>> rowFactory) {\n+        TableRow<T> tableRow = rowFactory != null ? rowFactory.call(tv) : new TableRow<>();\n+        tableSkin.getChildren().add(tableRow);\n+        tableRow.applyCss();\n+        if (!(tableRow.getSkin() instanceof SkinBase<?>)) {\n+            tableSkin.getChildren().remove(tableRow);\n+            \/\/ recreate with null rowFactory will result in a standard TableRow that will\n+            \/\/ have a SkinBase-derived skin\n+            tableRow = createMeasureRow(tv, tableSkin, null);\n+        }\n+        assert tableRow.getSkin() instanceof SkinBase<?>;\n+        return tableRow;\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableColumnHeader.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -32,0 +32,3 @@\n+import javafx.scene.Node;\n+import javafx.scene.control.Skin;\n+import javafx.scene.control.Skinnable;\n@@ -39,0 +42,2 @@\n+import javafx.scene.layout.HBox;\n+\n@@ -257,4 +262,1 @@\n-    \/**\n-     * @test\n-     * @bug 8251480 Row style must affect the required column width\n-     *\/\n+    \/** Row style must affect the required column width *\/\n@@ -274,1 +276,1 @@\n-    private TableRow<Person> createSmallRow(TableView<Person> param) {\n+    private TableRow<Person> createSmallRow(TableView<Person> tableView) {\n@@ -280,0 +282,45 @@\n+    \/** Test resizeColumnToFitContent in the presence of a non-standard row skin *\/\n+    @Test\n+    public void test_resizeColumnToFitContentCustomRowSkin() {\n+        TableColumn column = tableView.getColumns().get(0);\n+\n+        tableView.setRowFactory(this::createCustomRow);\n+        TableColumnHeaderShim.resizeColumnToFitContent(firstColumnHeader, -1);\n+        double width = column.getWidth();\n+        assertTrue(width > 0);\n+    }\n+\n+    private TableRow<Person> createCustomRow(TableView<Person> tableView) {\n+        TableRow<Person> row = new TableRow<>() {\n+            protected javafx.scene.control.Skin<?> createDefaultSkin() {\n+                return new CustomSkin(this);\n+            };\n+        };\n+        return row;\n+    }\n+\n+    private static class CustomSkin implements Skin<TableRow<?>> {\n+\n+        private TableRow<?> row;\n+        private Node node = new HBox();\n+\n+        CustomSkin(TableRow<?> row) {\n+            this.row = row;\n+        }\n+\n+        @Override\n+        public TableRow<?> getSkinnable() {\n+            return row;\n+        }\n+\n+        @Override\n+        public Node getNode() {\n+            return node;\n+        }\n+\n+        @Override\n+        public void dispose() {\n+            node = null;\n+        }\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableColumnHeaderTest.java","additions":52,"deletions":5,"binary":false,"changes":57,"status":"modified"}]}