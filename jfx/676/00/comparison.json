{"files":[{"patch":"@@ -95,2 +95,1 @@\n- * and the MIME type must either be empty or a subtype of the\n- * {@code image} type.\n+ * and the MIME type must be a subtype of the {@code image} type.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/Image.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -226,0 +226,30 @@\n+\n+    @Test\n+    public void testLoadImageFromDataURIWithWrongMimeTypeFails() {\n+        String url =\n+            \"data:application\/octet-stream;base64,iVBORw0KGgoAAAANSUhEUgAAABQAAAAKCAIAAAA7N+mxAAAAAXNSR0IArs4c6QAAAAR\"\n+            + \"nQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAcSURBVChTY\/jPwADBZACyNMHAqGYSwZDU\/P8\/AB\"\n+            + \"ieT81GAGKoAAAAAElFTkSuQmCC\";\n+\n+        try {\n+            ImageStorage.loadAll(url, null, 20, 10, false, 1, false);\n+            fail();\n+        } catch (ImageStorageException ex) {\n+            assertTrue(ex.getMessage().startsWith(\"Unexpected MIME type\"));\n+        }\n+    }\n+\n+    @Test\n+    public void testLoadImageFromDataURIWithoutMimeTypeFails() {\n+        String url =\n+            \"data:base64,iVBORw0KGgoAAAANSUhEUgAAABQAAAAKCAIAAAA7N+mxAAAAAXNSR0IArs4c6QAAAAR\"\n+            + \"nQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAcSURBVChTY\/jPwADBZACyNMHAqGYSwZDU\/P8\/AB\"\n+            + \"ieT81GAGKoAAAAAElFTkSuQmCC\";\n+\n+        try {\n+            ImageStorage.loadAll(url, null, 20, 10, false, 1, false);\n+            fail();\n+        } catch (ImageStorageException ex) {\n+            assertTrue(ex.getMessage().startsWith(\"Unexpected MIME type\"));\n+        }\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/iio\/ImageStorageTest.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"}]}