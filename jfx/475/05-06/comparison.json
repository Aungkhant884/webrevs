{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.HashMap;\n@@ -34,0 +35,1 @@\n+import java.util.Map;\n@@ -40,0 +42,2 @@\n+\n+import org.junit.AfterClass;\n@@ -41,0 +45,1 @@\n+import org.junit.BeforeClass;\n@@ -49,1 +54,31 @@\n-    public PseudoClassTest() {\n+    private static Map<String, Integer> initialPseudoClassMap;\n+    private static List<PseudoClass> initialPseudoClasses;\n+\n+    \/**\n+     * Before we run any of the tests in this class, we must store the current content\n+     * of both the 'PseudoClassState.pseudoClassMap' and 'PseudoClassState.pseudoClasses'\n+     * static fields, and restore the exact content after we have completed all tests.\n+     *\n+     * Once a pseudo-class has been loaded via 'PseudoClass.getPseudoClass(String)', the\n+     * returned singleton 'PseudoClassImpl' instance will be stored in the static list\n+     * 'PseudoClassState.pseudoClasses', and the instance will store the index of itself\n+     * in this list.\n+     *\n+     * Clearing the content of 'pseudoClassMap' and 'pseudoClasses' will therefore break\n+     * existing 'PseudoClass' instances, because their stored index will no longer refer\n+     * to the correct instance in the 'pseudoClasses' list. This can cause other tests\n+     * that happen to use a broken pseudo-class instance to fail undeterministically,\n+     * depending on whether or not they are executed before or after this class.\n+     *\/\n+    @BeforeClass\n+    public static void beforeClass() {\n+        initialPseudoClassMap = new HashMap<>(PseudoClassStateShim.pseudoClassMap);\n+        initialPseudoClasses = new ArrayList<>(PseudoClassStateShim.pseudoClasses);\n+    }\n+\n+    @AfterClass\n+    public static void afterClass() {\n+        PseudoClassStateShim.pseudoClassMap.clear();\n+        PseudoClassStateShim.pseudoClassMap.putAll(initialPseudoClassMap);\n+        PseudoClassStateShim.pseudoClasses.clear();\n+        PseudoClassStateShim.pseudoClasses.addAll(initialPseudoClasses);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/PseudoClassTest.java","additions":37,"deletions":2,"binary":false,"changes":39,"status":"modified"}]}