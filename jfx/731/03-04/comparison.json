{"files":[{"patch":"@@ -47,1 +47,1 @@\n-import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertEquals;\n@@ -56,0 +56,3 @@\n+    private static final int LINE_THICKNESS = 20;\n+    private static final int SKIP_TEXT_BOUNDARY = 32;\n+    private static final int DELTA = 3;\n@@ -135,0 +138,3 @@\n+                    \"body {\\n\" +\n+                    \"margin:0px;\\n\"+\n+                    \"}\\n\" +\n@@ -137,2 +143,5 @@\n-                    \"  text-decoration: underline;\\n\" +\n-                    \"  text-decoration-thickness: 20px;\\n\" +\n+                    \"width:150px;\\n\"+\n+                    \"height:20px;\\n\"+\n+                    \"margin:0px;\\n\"+\n+                    \"text-decoration: underline;\\n\" +\n+                    \"text-decoration-thickness: 30px;\\n\" +\n@@ -144,1 +153,1 @@\n-                    \"<div>TEST<\/dv>\\n\" +\n+                    \"<div>TEST UNDERLINE<\/div>\\n\" +\n@@ -147,1 +156,0 @@\n-\n@@ -151,1 +159,0 @@\n-        Util.sleep(1000);\n@@ -156,1 +163,0 @@\n-\n@@ -162,13 +168,10 @@\n-            \/\/ buttom start x position of underline ( startx + font size + thickness -1)\n-            int line_start_x = start_x + height + 20 - 1;\n-            \/\/ buttom start y position of underline ( startx + height)\n-            int line_start_y = start_y + height + 3;\n-            String expected_line_color = \"rgba(0,0,0,255)\"; \/\/ color of line\n-            for (int i = line_start_y; i <= (width - line_start_y -6); i++) {\n-                String actual_line_color = colorToString(pr.getColor(line_start_x, i));\n-                if (actual_line_color.equals(expected_line_color)) {\n-                    continue;\n-                }\n-                else {\n-                    fail(\"Each pixel color of line should be\" + expected_line_color + \" but was:\" + actual_line_color);\n-                }\n+            int line_start_x = start_x;\n+            int line_end_x = start_x + width - SKIP_TEXT_BOUNDARY;\n+            int line_start_y = start_y + height + LINE_THICKNESS\/2;\n+            String line_color = \"rgba(0,0,0,255)\"; \/\/ color of line\n+            System.out.println(line_end_x);\n+            System.out.println(line_start_y);\n+\n+            for (int x = line_start_x; x < line_end_x; x++) {\n+                String color = colorToString(pr.getColor(x, line_start_y));\n+                assertEquals(color, line_color);\n@@ -176,1 +179,0 @@\n-            \/\/ right edge case test\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/web\/StraightLineTest.java","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"}]}