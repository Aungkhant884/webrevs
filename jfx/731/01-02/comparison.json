{"files":[{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package test.javafx.scene.web;\n-\n-import static org.junit.Assert.assertNotEquals;\n-import org.junit.Test;\n-\n-public class TextDecorationTest extends TestBase {\n-\n-    @Test public void testTokenHeight() throws Exception {\n-        loadContent(\"<!DOCTYPE html>\\n\" +\n-                \"<html>\\n\" +\n-                \"<head>\\n\" +\n-                \"<style>\\n\" +\n-                \"\\n\" +\n-                \"h1 { text-decoration: overline;}\\n\" +\n-                \"\\n\" +\n-                \"h2 { text-decoration: line-through;}\\n\" +\n-                \"\\n\" +\n-                \"h3 { text-decoration: underline;}\\n\" +\n-                \"\\n\" +\n-                \"<\/style>\\n\" +\n-                \"<\/head>\\n\" +\n-                \"<body>\\n\" +\n-                \"\\n\" +\n-                \"<h1>oveline test<\/h1>\\n\" +\n-                \"<h2>line through test<\/h2>\\n\" +\n-                \"<h3>Under line test<\/h3>\\n\" +\n-                \"\\n\" +\n-                \"<\/body>\\n\" +\n-                \"<\/html>\");\n-        \/* The line through and underline css text property needs visual test, if line is straight\n-        so need to check only if style is applied or not for defect id JDK-8280020 *\/\n-        assertNotEquals(\"overline\",executeScript(\"document.getElementsByTagName('h1')[0].style.textDecoration\"));\n-        assertNotEquals(\"line-through\",executeScript(\"document.getElementsByTagName('h2')[0].style.textDecoration\"));\n-        assertNotEquals(\"underline\",executeScript(\"document.getElementsByTagName('h3')[0].style.textDecoration\"));\n-\n-    }\n-}\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/TextDecorationTest.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -0,0 +1,176 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.web;\n+\n+import com.sun.webkit.WebPage;\n+import com.sun.webkit.WebPageShim;\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.scene.Scene;\n+import javafx.scene.image.PixelReader;\n+import javafx.scene.image.WritableImage;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebEngineShim;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+import java.io.*;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import test.util.Util;\n+\n+import java.util.concurrent.CountDownLatch;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import static javafx.concurrent.Worker.State.SUCCEEDED;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+public class StraightLineTest {\n+    private static final CountDownLatch launchLatch = new CountDownLatch(1);\n+\n+    \/\/ Maintain one application instance\n+    static StraightLineTestApp straightLineTestApp;\n+\n+    private WebView webView;\n+\n+    public static class StraightLineTestApp extends Application {\n+        Stage primaryStage = null;\n+\n+        @Override\n+        public void init() {\n+            StraightLineTest.straightLineTestApp = this;\n+        }\n+\n+        @Override\n+        public void start(Stage primaryStage) throws Exception {\n+            Platform.setImplicitExit(false);\n+            this.primaryStage = primaryStage;\n+            this.primaryStage.setWidth(80);\n+            this.primaryStage.setHeight(60);\n+            launchLatch.countDown();\n+        }\n+    }\n+    private static String colorToString(Color c) {\n+        int r = (int)(c.getRed() * 255.0);\n+        int g = (int)(c.getGreen() * 255.0);\n+        int b = (int)(c.getBlue() * 255.0);\n+        int a = (int)(c.getOpacity() * 255.0);\n+        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n+    }\n+\n+\n+    @BeforeClass\n+    public static void setupOnce() {\n+        \/\/ Start the Test Application\n+        new Thread(() -> Application.launch(StraightLineTestApp.class, (String[])null)).start();\n+\n+        assertTrue(\"Timeout waiting for FX runtime to start\", Util.await(launchLatch));\n+    }\n+\n+    @AfterClass\n+    public static void tearDownOnce() {\n+        Platform.exit();\n+    }\n+\n+    @Before\n+    public void setupTestObjects() {\n+        Platform.runLater(() -> {\n+            webView = new WebView();\n+            Scene scene = new Scene(webView,80,60);\n+            straightLineTestApp.primaryStage.setScene(scene);\n+            straightLineTestApp.primaryStage.show();\n+        });\n+    }\n+\n+    @Test public void testLine() {\n+        final CountDownLatch webViewStateLatch = new CountDownLatch(1);\n+\n+        Util.runAndWait(() -> {\n+            assertNotNull(webView);\n+\n+            webView.getEngine().getLoadWorker().stateProperty().\n+                addListener((observable, oldValue, newValue) -> {\n+                if (newValue == SUCCEEDED) {\n+                    webView.requestFocus();\n+                }\n+            });\n+\n+            webView.focusedProperty().\n+                addListener((observable, oldValue, newValue) -> {\n+                if (newValue) {\n+                    webViewStateLatch.countDown();\n+                }\n+            });\n+\n+            webView.getEngine().loadContent(\"<!DOCTYPE html>\\n\" +\n+                    \"<html>\\n\" +\n+                    \"<head>\\n\" +\n+                    \"<style>\\n\" +\n+                    \"div {\\n\" +\n+                    \"padding:0px;\\n\"+\n+                    \"  text-decoration: underline;\\n\" +\n+                    \"  text-decoration-thickness: 20px;\\n\" +\n+                    \"font-size: 16px; \\n\" +\n+                    \"}\\n\" +\n+                    \"<\/style>\\n\" +\n+                    \"<\/head>\\n\" +\n+                    \"<body>\\n\" +\n+                    \"<div>TEST<\/dv>\\n\" +\n+                    \"<\/body>\\n\" +\n+                    \"<\/html>\");\n+\n+        });\n+\n+        assertTrue(\"Timeout when waiting for focus change \", Util.await(webViewStateLatch));\n+        Util.sleep(1000);\n+\n+        Util.runAndWait(() -> {\n+            WritableImage snapshot = straightLineTestApp.primaryStage.getScene().snapshot(null);\n+            PixelReader pr = snapshot.getPixelReader();\n+\n+            int start_x = (int)webView.getEngine().executeScript(\"document.getElementsByTagName('div')[0].getBoundingClientRect().x\");\n+            int start_y = (int)webView.getEngine().executeScript(\"document.getElementsByTagName('div')[0].getBoundingClientRect().y\");\n+            int height = (int)webView.getEngine().executeScript(\"document.getElementsByTagName('div')[0].getBoundingClientRect().height\");\n+            int width = (int)webView.getEngine().executeScript(\"document.getElementsByTagName('div')[0].getBoundingClientRect().width\");\n+\n+            \/\/ buttom start x position of underline ( startx + font size + thickness -1)\n+            int line_start_x = start_x + height + 20 - 1;\n+            \/\/ buttom start y position of underline ( startx + height)\n+            int line_start_y = start_y + height;\n+            String line_color = \"rgba(0,0,0,255)\"; \/\/ color of line\n+            for (int i = line_start_y; i < snapshot.getHeight(); i++) {\n+                String expected = colorToString(pr.getColor(line_start_x, i));\n+                if(expected.equals(line_color))\n+                    continue;\n+                else\n+                    fail(\"Each pixel color of line should be\" + line_color + \" but was:\" + expected);\n+            }\n+        });\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/web\/StraightLineTest.java","additions":176,"deletions":0,"binary":false,"changes":176,"status":"added"}]}