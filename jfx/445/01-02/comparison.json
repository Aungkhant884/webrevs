{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -419,1 +419,1 @@\n-            double[][] prefWidths = getChildrenWidths(managed, -1, false);\n+            double[][] prefWidths = computeChildrenWidths(managed, -1, false);\n@@ -442,1 +442,1 @@\n-            double[][] prefWidths = getChildrenWidths(managed, -1, false);\n+            double[][] prefWidths = computeChildrenWidths(managed, -1, false);\n@@ -456,1 +456,1 @@\n-    private double[][] getChildrenWidths(List<Node> managed, double height, boolean minimum) {\n+    private double[][] computeChildrenWidths(List<Node> managed, double height, boolean minimum) {\n@@ -557,1 +557,1 @@\n-     * @param targetWidth the target width (sum of child widths and spacing)\n+     * @param targetWidth sum of child widths and spacing\n@@ -607,1 +607,1 @@\n-        return snappedSum(getChildrenWidths(managedChildren, height, minimum)[0], managedChildren.size())\n+        return snappedSum(computeChildrenWidths(managedChildren, height, minimum)[0], managedChildren.size())\n@@ -611,0 +611,4 @@\n+    \/**\n+     * Calculates the sum of the double values, and snaps the result\n+     * to the nearest pixel in the horizontal direction.\n+     *\/\n@@ -697,1 +701,1 @@\n-        final double[][] actualChildrenWidths = getChildrenWidths(managed, height, false);\n+        final double[][] actualChildrenWidths = computeChildrenWidths(managed, height, false);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HBox.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -396,1 +396,1 @@\n-            double[][] prefHeights = getChildrenHeights(managed, -1, false);\n+            double[][] prefHeights = computeChildrenHeights(managed, -1, false);\n@@ -417,1 +417,1 @@\n-            double[][] prefHeights = getChildrenHeights(managed, -1, false);\n+            double[][] prefHeights = computeChildrenHeights(managed, -1, false);\n@@ -436,1 +436,1 @@\n-    private double[][] getChildrenHeights(List<Node> managed, double width, boolean minimum) {\n+    private double[][] computeChildrenHeights(List<Node> managed, double width, boolean minimum) {\n@@ -464,2 +464,2 @@\n-     * This might be necessary because the HBox is size-constrained and cannot accommodate the preferred\n-     * heights for all children, or it might be necessary because the HBox is sized to be larger than the\n+     * This might be necessary because the VBox is size-constrained and cannot accommodate the preferred\n+     * heights for all children, or it might be necessary because the VBox is sized to be larger than the\n@@ -540,2 +540,2 @@\n-     *                    a value of -1 means the child cannot be resized\n-     * @param targetHeight the target height (sum of children heights and spacing)\n+     *                     a value of -1 means the child cannot be resized\n+     * @param targetHeight sum of children heights and spacing\n@@ -591,1 +591,1 @@\n-        return snappedSum(getChildrenHeights(managedChildren, width, minimum)[0], managedChildren.size())\n+        return snappedSum(computeChildrenHeights(managedChildren, width, minimum)[0], managedChildren.size())\n@@ -595,0 +595,4 @@\n+    \/**\n+     * Calculates the sum of the double values, and snaps the result\n+     * to the nearest pixel in the vertical direction.\n+     *\/\n@@ -623,1 +627,1 @@\n-        double[][] actualChildrenHeights = getChildrenHeights(managed, width, false);\n+        double[][] actualChildrenHeights = computeChildrenHeights(managed, width, false);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/VBox.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -922,0 +922,12 @@\n+        class testPixelSnapConfig {\n+            final double expectedWidth;\n+            final double scale;\n+            final boolean specifyContainerPrefWidth;\n+\n+            testPixelSnapConfig(double expectedWidth, double scale, boolean specifyContainerPrefWidth) {\n+                this.expectedWidth = expectedWidth;\n+                this.scale = scale;\n+                this.specifyContainerPrefWidth = specifyContainerPrefWidth;\n+            }\n+        }\n+\n@@ -966,12 +978,0 @@\n-    private static class testPixelSnapConfig {\n-        final double expectedWidth;\n-        final double scale;\n-        final boolean specifyContainerPrefWidth;\n-\n-        testPixelSnapConfig(double expectedWidth, double scale, boolean specifyContainerPrefWidth) {\n-            this.expectedWidth = expectedWidth;\n-            this.scale = scale;\n-            this.specifyContainerPrefWidth = specifyContainerPrefWidth;\n-        }\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/HBoxTest.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -804,0 +804,12 @@\n+        class testPixelSnapConfig {\n+            final double expectedHeight;\n+            final double scale;\n+            final boolean specifyContainerPrefHeight;\n+\n+            testPixelSnapConfig(double expectedHeight, double scale, boolean specifyContainerPrefHeight) {\n+                this.expectedHeight = expectedHeight;\n+                this.scale = scale;\n+                this.specifyContainerPrefHeight = specifyContainerPrefHeight;\n+            }\n+        }\n+\n@@ -848,11 +860,0 @@\n-    private static class testPixelSnapConfig {\n-        final double expectedHeight;\n-        final double scale;\n-        final boolean specifyContainerPrefHeight;\n-\n-        testPixelSnapConfig(double expectedHeight, double scale, boolean specifyContainerPrefHeight) {\n-            this.expectedHeight = expectedHeight;\n-            this.scale = scale;\n-            this.specifyContainerPrefHeight = specifyContainerPrefHeight;\n-        }\n-    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/VBoxTest.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}