{"files":[{"patch":"@@ -490,1 +490,1 @@\n-        double contentWidth = snappedSum(childrenWidths[0], managed.size()) + totalSpacing;\n+        double contentWidth = snapSpaceX(sum(childrenWidths[0], managed.size())) + totalSpacing;\n@@ -499,1 +499,1 @@\n-        return snappedSum(childrenWidths[0], managed.size()) + totalSpacing;\n+        return snapSpaceX(sum(childrenWidths[0], managed.size())) + totalSpacing;\n@@ -577,1 +577,1 @@\n-        double currentTotalWidth = snappedSum(currentWidths, managed.size()) + totalSpacing;\n+        double currentTotalWidth = snapSpaceX(sum(currentWidths, managed.size())) + totalSpacing;\n@@ -598,1 +598,0 @@\n-                double oldWidth = currentWidths[i];\n@@ -603,2 +602,3 @@\n-                currentWidths[i] = snapSizeX(currentWidths[i] + actualChange);\n-                currentTotalWidth = snappedSum(currentWidths, managed.size()) + totalSpacing;\n+                double oldWidth = currentWidths[i];\n+                currentWidths[i] = snapSizeX(oldWidth + actualChange);\n+                currentTotalWidth = snapSpaceX(currentTotalWidth + (currentWidths[i] - oldWidth));\n@@ -636,2 +636,3 @@\n-        return snappedSum(computeChildrenWidths(managedChildren, height, minimum)[0], managedChildren.size())\n-                + (managedChildren.size()-1)*snapSpaceX(getSpacing());\n+        double[] childrenWidths = computeChildrenWidths(managedChildren, height, minimum)[0];\n+        return snapSpaceX(sum(childrenWidths, managedChildren.size())) +\n+               (managedChildren.size() - 1) * snapSpaceX(getSpacing());\n@@ -640,5 +641,2 @@\n-    \/**\n-     * Calculates the sum of the double values, and snaps the result\n-     * to the nearest pixel in the horizontal direction.\n-     *\/\n-    private double snappedSum(double[] array, int size) {\n+    private static double sum(double[] array, int size) {\n+        int i = 0;\n@@ -646,2 +644,2 @@\n-        for (int i = 0; i < size; ++i) {\n-            res += array[i];\n+        while (i != size) {\n+            res += array[i++];\n@@ -649,1 +647,1 @@\n-        return snapSpaceX(res);\n+        return res;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HBox.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n-        double contentHeight = snappedSum(childrenHeights[0], managed.size()) + totalSpacing;\n+        double contentHeight = snapSpaceY(sum(childrenHeights[0], managed.size())) + totalSpacing;\n@@ -487,1 +487,1 @@\n-        return snappedSum(childrenHeights[0], managed.size()) + totalSpacing;\n+        return snapSizeY(sum(childrenHeights[0], managed.size())) + totalSpacing;\n@@ -561,1 +561,1 @@\n-        double currentTotalHeight = snappedSum(currentHeights, managed.size()) + totalSpacing;\n+        double currentTotalHeight = snapSpaceY(sum(currentHeights, managed.size())) + totalSpacing;\n@@ -582,1 +582,0 @@\n-                double oldHeight = currentHeights[i];\n@@ -587,2 +586,3 @@\n-                currentHeights[i] = snapSizeY(currentHeights[i] + actualChange);\n-                currentTotalHeight = snappedSum(currentHeights, managed.size()) + totalSpacing;\n+                double oldHeight = currentHeights[i];\n+                currentHeights[i] = snapSizeY(oldHeight + actualChange);\n+                currentTotalHeight = snapSpaceY(currentTotalHeight + (currentHeights[i] - oldHeight));\n@@ -620,2 +620,3 @@\n-        return snappedSum(computeChildrenHeights(managedChildren, width, minimum)[0], managedChildren.size())\n-                + (managedChildren.size()-1)*snapSpaceY(getSpacing());\n+        double[] childrenHeights = computeChildrenHeights(managedChildren, width, minimum)[0];\n+        return snapSpaceY(sum(childrenHeights, managedChildren.size())) +\n+               (managedChildren.size() - 1) * snapSpaceY(getSpacing());\n@@ -624,5 +625,2 @@\n-    \/**\n-     * Calculates the sum of the double values, and snaps the result\n-     * to the nearest pixel in the vertical direction.\n-     *\/\n-    private double snappedSum(double[] array, int size) {\n+    private static double sum(double[] array, int size) {\n+        int i = 0;\n@@ -630,2 +628,2 @@\n-        for (int i = 0; i < size; ++i) {\n-            res += array[i];\n+        while (i != size) {\n+            res += array[i++];\n@@ -633,1 +631,1 @@\n-        return snapSpaceY(res);\n+        return res;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/VBox.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"}]}