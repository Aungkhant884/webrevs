{"files":[{"patch":"@@ -36,4 +36,4 @@\n-    private long eglSurface;\n-    private long eglContext;\n-    private long eglDisplay;\n-    private long nativeWindow;\n+    long eglSurface;\n+    long eglContext;\n+    long eglDisplay;\n+    long nativeWindow;\n@@ -58,0 +58,8 @@\n+    \/**\n+     * Create and initialize an AcceleratedScreen. Subclasses should override\n+     * this constructor in case the {@link #AcceleratedScreen(int[]) AcceleratedScreen(int[])}\n+     * constructor is not sufficient.\n+     *\/\n+    AcceleratedScreen() {\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/AcceleratedScreen.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.glass.ui.monocle;\n+\n+\/**\n+ * The <code>EGLAcceleratedScreen<\/code> manages the link to the hardware-accelerated\n+ * component, using EGL. This class is not directly using EGL commands,\n+ * as the order and meaning of parameters might vary between implementations.\n+ * Also, implementation-specific logic may be applied before, in between, or\n+ * after the EGL commands.\n+ *\/\n+public class EGLAcceleratedScreen extends AcceleratedScreen {\n+\n+    private long eglWindowHandle = -1;\n+\n+    \/**\n+     * Create a new <code>EGLAcceleratedScreen<\/code> with a set of attributes.\n+     * This will create an <code>EGL Context<\/code> that can be used by the\n+     * Prism component.\n+     * @param attributes an array of attributes that will be used by the underlying\n+     *        implementation to get the best matching configuration.\n+     *\/\n+    EGLAcceleratedScreen(int[] attributes) throws GLException {\n+        eglWindowHandle = platformGetNativeWindow();\n+        eglDisplay = nGetEglDisplayHandle();\n+        nEglInitialize(eglDisplay);\n+        nEglBindApi(EGL.EGL_OPENGL_ES_API);\n+        long eglConfig = nEglChooseConfig(eglDisplay, attributes);\n+        if (eglConfig == -1) {\n+            throw new IllegalArgumentException(\"Could not create an EGLChooseConfig\");\n+        }\n+        eglSurface = nEglCreateWindowSurface(eglDisplay, eglConfig, eglWindowHandle);\n+        eglContext = nEglCreateContext(eglDisplay, eglConfig);\n+    }\n+\n+    @Override\n+    protected long platformGetNativeWindow() {\n+        String displayID = System.getProperty(\"egl.displayid\", \"\/dev\/dri\/card1\" );\n+        return nPlatformGetNativeWindow(displayID);\n+    }\n+\n+    @Override\n+    public void enableRendering(boolean flag) {\n+        if (flag) {\n+            nEglMakeCurrent(eglDisplay, eglSurface, eglSurface,\n+                                       eglContext);\n+        } else {\n+            nEglMakeCurrent(eglDisplay, 0, 0, eglContext);\n+        }\n+    }\n+\n+    @Override\n+    public boolean swapBuffers() {\n+        boolean result = false;\n+        synchronized (NativeScreen.framebufferSwapLock) {\n+            result = nEglSwapBuffers(eglDisplay, eglSurface);\n+        }\n+        return result;\n+    }\n+\n+    private native long nPlatformGetNativeWindow(String displayID);\n+    private native long nGetEglDisplayHandle();\n+    private native boolean nEglInitialize(long handle);\n+    private native boolean nEglBindApi(int v);\n+    private native long nEglChooseConfig(long eglDisplay, int[] attribs);\n+    private native boolean nEglMakeCurrent(long eglDisplay, long eglDrawSurface, long eglReadSurface, long eglContext);\n+    private native long nEglCreateWindowSurface(long eglDisplay, long eglConfig, long nativeWindow);\n+    private native long nEglCreateContext(long eglDisplay, long eglConfig);\n+    private native boolean nEglSwapBuffers(long eglDisplay, long eglSurface);\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EGLAcceleratedScreen.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.glass.ui.monocle;\n+\n+public class EGLPlatform extends LinuxPlatform {\n+\n+    \/**\n+     * Create an <code>EGLPlatform<\/code>. If a library with specific native code is needed for this platform,\n+     * it will be downloaded now. The system property <code>monocle.egl.lib<\/code> can be used to define the\n+     * name of the library that should be loaded.\n+     *\/\n+    public EGLPlatform() {\n+        String lib = System.getProperty(\"monocle.egl.lib\");\n+        if (lib != null) {\n+            long handle = LinuxSystem.getLinuxSystem().dlopen(lib, LinuxSystem.RTLD_LAZY | LinuxSystem.RTLD_GLOBAL);\n+            if (handle == 0) {\n+                throw new UnsatisfiedLinkError(\"EGLPlatform failed to load the requested library \" + lib);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public synchronized AcceleratedScreen getAcceleratedScreen(int[] attributes) throws GLException {\n+        if (accScreen == null) {\n+            accScreen = new EGLAcceleratedScreen(attributes);\n+        }\n+        return accScreen;\n+\n+    }\n+\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EGLPlatform.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.glass.ui.monocle;\n+\n+public class EGLPlatformFactory extends NativePlatformFactory {\n+\n+    @Override\n+    protected boolean matches() {\n+        return true;\n+    }\n+\n+    @Override\n+    protected int getMajorVersion() {\n+        return 1;\n+    }\n+\n+    @Override\n+    protected int getMinorVersion() {\n+        return 0;\n+    }\n+\n+    @Override\n+    protected NativePlatform createNativePlatform() {\n+        return new EGLPlatform();\n+    }\n+\n+\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EGLPlatformFactory.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/* Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+#include \"com_sun_glass_ui_monocle_EGLAcceleratedScreen.h\"\n+#include \"Monocle.h\"\n+#include \"egl_ext.h\"\n+\n+JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nPlatformGetNativeWindow\n+    (JNIEnv *env, jobject obj, jstring cardId) {\n+    const char *ccid = (*env)->GetStringUTFChars(env, cardId, NULL);\n+    long answer = getNativeWindowHandle(ccid);\n+    (*env)->ReleaseStringUTFChars(env, cardId, ccid);\n+    return (jlong)answer;\n+}\n+\n+JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nGetEglDisplayHandle\n+    (JNIEnv *env, jobject obj) {\n+    long answer = getEglDisplayHandle();\n+    return (jlong)answer;\n+}\n+\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglInitialize\n+    (JNIEnv *env, jclass clazz, jlong eglDisplay) {\n+    jboolean answer = doEglInitialize(asPtr(eglDisplay));\n+    return answer;\n+}\n+\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglBindApi\n+    (JNIEnv *env, jclass clazz, jint api) {\n+    jboolean answer = doEglBindApi((int)api);\n+    return answer;\n+}\n+\n+JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglChooseConfig\n+    (JNIEnv *env, jclass clazz, jlong eglDisplay, jintArray attribs) {\n+    jint *attrArray = (*env)->GetIntArrayElements(env, attribs, JNI_FALSE);\n+    if (attrArray == 0) {\n+        fprintf(stderr, \"Fatal error getting int* from int[]\\n\");\n+        return -1;\n+    }\n+    jlong answer = doEglChooseConfig(eglDisplay, attrArray);\n+    (*env)->ReleaseIntArrayElements(env, attribs, attrArray, JNI_ABORT);\n+    return answer;\n+}\n+\n+JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglCreateWindowSurface\n+    (JNIEnv *env, jclass clazz, jlong eglDisplay, jlong config, jlong nativeWindow) {\n+    jlong answer = doEglCreateWindowSurface(eglDisplay, config, nativeWindow);\n+    return answer;\n+}\n+\n+JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglCreateContext\n+ (JNIEnv *UNUSED(env), jclass UNUSED(clazz), jlong eglDisplay, jlong config) {\n+    jlong answer = doEglCreateContext(eglDisplay, config);\n+    return answer;\n+}\n+\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglMakeCurrent\n+   (JNIEnv *UNUSED(env), jclass UNUSED(clazz), jlong eglDisplay, jlong drawSurface,\n+    jlong readSurface, jlong eglContext) {\n+    jlong answer = doEglMakeCurrent(eglDisplay, drawSurface, readSurface, eglContext);\n+    return answer;\n+}\n+\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_monocle_EGLAcceleratedScreen_nEglSwapBuffers\n+    (JNIEnv *UNUSED(env), jclass UNUSED(clazz), jlong eglDisplay, jlong eglSurface)  {\n+    jlong answer = doEglSwapBuffers(eglDisplay, eglSurface);\n+    return answer;\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/monocle\/egl\/eglBridge.c","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+#ifndef __EGL_EXT__\n+#define __EGL_EXT__\n+#include <jni.h>\n+extern jlong getNativeWindowHandle(const char *v);\n+extern jlong getEglDisplayHandle();\n+extern jboolean doEglInitialize(void* handle);\n+extern jboolean doEglBindApi(int api);\n+extern jlong doEglChooseConfig (jlong eglDisplay, int* attribs);\n+\n+extern jlong doEglCreateWindowSurface(jlong eglDisplay, jlong config,\n+     jlong nativeWindow);\n+\n+extern jlong doEglCreateContext(jlong eglDisplay, jlong config);\n+\n+extern jboolean doEglMakeCurrent(jlong eglDisplay, jlong drawSurface,\n+     jlong readSurface, jlong eglContext);\n+\n+extern jboolean doEglSwapBuffers(jlong eglDisplay, jlong eglSurface);\n+#endif \/\/ EGL_EXT\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/monocle\/egl\/egl_ext.h","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -38,0 +38,4 @@\n+#ifndef ANDROID\n+#define __USE_GNU\n+#include <dlfcn.h>\n+#endif\n@@ -111,0 +115,3 @@\n+    if (libraryHandle == 0) {\n+         handle = RTLD_DEFAULT;\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/monocle\/MonocleGLFactory.c","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}