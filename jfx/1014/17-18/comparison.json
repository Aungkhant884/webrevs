{"files":[{"patch":"@@ -786,1 +786,1 @@\n-    public Map<String, String> getWellKnownPlatformPreferenceKeys() {\n+    public Map<String, String> getPlatformKeyMappings() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Application.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -474,1 +474,1 @@\n-    public Map<String, String> getWellKnownPlatformPreferenceKeys() {\n+    public Map<String, String> getPlatformKeyMappings() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -397,1 +397,1 @@\n-    public Map<String, String> getWellKnownPlatformPreferenceKeys() {\n+    public Map<String, String> getPlatformKeyMappings() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-    public Map<String, String> getWellKnownPlatformPreferenceKeys() {\n+    public Map<String, String> getPlatformKeyMappings() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1062,1 +1062,1 @@\n-     * @param wellKnownKeys a map of platform-specific keys to well-known keys\n+     * @param platformKeyMappings a map of platform-specific keys to well-known keys\n@@ -1065,2 +1065,2 @@\n-    public static void initPreferences(Map<String, String> wellKnownKeys, Map<String, Object> preferences) {\n-        platformPreferences = new PlatformPreferences(wellKnownKeys);\n+    public static void initPreferences(Map<String, String> platformKeyMappings, Map<String, Object> preferences) {\n+        platformPreferences = new PlatformPreferences(platformKeyMappings);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,3 @@\n+ *\n+ * @param oldValue the old mappings\n+ * @param newValue the new mappings\n@@ -53,7 +56,0 @@\n-            boolean equals;\n-\n-            if (oldValue instanceof Object[] oldArray && newValue instanceof Object[] newArray) {\n-                equals = Arrays.equals(oldArray, newArray);\n-            } else {\n-                equals = Objects.equals(oldValue, newValue);\n-            }\n@@ -61,1 +57,1 @@\n-            if (!equals) {\n+            if (!Objects.deepEquals(oldValue, newValue)) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/preferences\/ChangedValue.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    final Map<String, String> wellKnownKeys;\n+    final Map<String, String> platformKeyMappings;\n@@ -66,2 +66,2 @@\n-    public PlatformPreferences(Map<String, String> wellKnownKeys) {\n-        this.wellKnownKeys = wellKnownKeys;\n+    public PlatformPreferences(Map<String, String> platformKeyMappings) {\n+        this.platformKeyMappings = platformKeyMappings;\n@@ -101,1 +101,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -104,1 +103,1 @@\n-        Objects.requireNonNull(key, \"type cannot be null\");\n+        Objects.requireNonNull(type, \"type cannot be null\");\n@@ -112,1 +111,3 @@\n-            return Optional.of((T)value);\n+            @SuppressWarnings(\"unchecked\")\n+            T v = (T)value;\n+            return Optional.of(v);\n@@ -195,0 +196,1 @@\n+     * @throws NullPointerException if {@code preferences} is {@code null}\n@@ -208,1 +210,1 @@\n-            properties.update(effectivelyChangedPreferences, wellKnownKeys);\n+            properties.update(effectivelyChangedPreferences, platformKeyMappings);\n@@ -213,5 +215,2 @@\n-    void fireValueChangedEvent(Map<String, ChangedValue> changedEntries) {\n-        for (var listener : invalidationListeners) {\n-            listener.invalidated(this);\n-        }\n-\n+    private void fireValueChangedEvent(Map<String, ChangedValue> changedEntries) {\n+        invalidationListeners.forEach(listener -> listener.invalidated(this));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/preferences\/PlatformPreferences.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    public void update(Map<String, ChangedValue> changedPreferences, Map<String, String> wellKnownKeys) {\n+    public void update(Map<String, ChangedValue> changedPreferences, Map<String, String> platformKeyMappings) {\n@@ -107,1 +107,1 @@\n-            String key = wellKnownKeys.get(entry.getKey());\n+            String key = platformKeyMappings.get(entry.getKey());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/preferences\/PreferenceProperties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -364,1 +364,1 @@\n-                Application.GetApplication().getWellKnownPlatformPreferenceKeys(),\n+                Application.GetApplication().getPlatformKeyMappings(),\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @see javafx.application.Platform.Preferences#appearanceProperty()\n@@ -34,1 +35,0 @@\n-\n@@ -44,1 +44,0 @@\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Appearance.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -460,0 +460,5 @@\n+     * The map is unmodifiable, which means that keys and values cannot be added, removed, or updated.\n+     * Calling any mutator method on the map will always cause {@code UnsupportedOperationException} to be thrown.\n+     * However, the mappings will be updated by JavaFX when the operating system reports that a platform\n+     * preference has changed.\n+     * <p>\n@@ -567,0 +572,1 @@\n+\n@@ -575,0 +581,1 @@\n+         * @defaultValue {@link Appearance#LIGHT}\n@@ -607,1 +614,2 @@\n-         * If the platform does not report an accent color, this property defaults to {@code #157EFB}.\n+         * If the platform does not report an accent color, this property defaults to vivid blue\n+         * (corresponding to the hex color value {@code #157EFB}).\n@@ -617,1 +625,1 @@\n-         * Returns the {@code Integer} instance to which the specified key is mapped.\n+         * Returns an optional {@code Integer} to which the specified key is mapped.\n@@ -621,3 +629,2 @@\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code Integer} instance\n-         * @return the {@code Integer} instance to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws IllegalArgumentException if a mapping exists, but the key is not mapped to an {@code Integer}\n+         * @return the optional {@code Integer} to which the key is mapped\n@@ -628,1 +635,1 @@\n-         * Returns the {@code Double} instance to which the specified key is mapped.\n+         * Returns an optional {@code Double} to which the specified key is mapped.\n@@ -632,3 +639,2 @@\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code Double} instance\n-         * @return the {@code Double} instance to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws IllegalArgumentException if a mapping exists, but the key is not mapped to a {@code Double}\n+         * @return the optional {@code Double} to which the key is mapped\n@@ -639,1 +645,1 @@\n-         * Returns the {@code Boolean} instance to which the specified key is mapped.\n+         * Returns an optional {@code Boolean} to which the specified key is mapped.\n@@ -643,3 +649,2 @@\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code Boolean} instance\n-         * @return the {@code Boolean} instance to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws IllegalArgumentException if a mapping exists, but the key is not mapped to a {@code Boolean}\n+         * @return the optional {@code Boolean} to which the key is mapped\n@@ -650,1 +655,1 @@\n-         * Returns the {@code String} instance to which the specified key is mapped.\n+         * Returns an optional {@code String} to which the specified key is mapped.\n@@ -654,3 +659,2 @@\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code String} instance\n-         * @return the {@code String} instance to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws IllegalArgumentException if the mapping exists, but the key is not mapped to a {@code String}\n+         * @return the optional {@code String} to which the key is mapped\n@@ -661,1 +665,1 @@\n-         * Returns the {@code Color} instance to which the specified key is mapped.\n+         * Returns an optional {@code Color} to which the specified key is mapped.\n@@ -665,3 +669,2 @@\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code Color} instance\n-         * @return the {@code Color} instance to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws IllegalArgumentException if the mapping exists, but the key is not mapped to a {@code Color}\n+         * @return the optional {@code Color} instance to which the key is mapped\n@@ -672,1 +675,1 @@\n-         * Returns the {@code Paint} instance to which the specified key is mapped.\n+         * Returns an optional {@code Paint} to which the specified key is mapped.\n@@ -676,3 +679,2 @@\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code Paint} instance\n-         * @return the {@code Paint} instance to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws IllegalArgumentException if the mapping exists, but the key is not mapped to a {@code Paint}\n+         * @return the optional {@code Paint} to which the key is mapped\n@@ -683,1 +685,1 @@\n-         * Returns the value to which the specified key is mapped.\n+         * Returns an optional value to which the specified key is mapped.\n@@ -688,4 +690,3 @@\n-         * @throws NullPointerException if {@code key} is null\n-         * @throws IllegalArgumentException if the key is not mapped to a {@code type} instance\n-         * @return the value to which the key is mapped, or {@code Optional.empty()}\n-         *         if no mapping exists for the specified key\n+         * @throws NullPointerException if {@code key} or {@code type} is null\n+         * @throws IllegalArgumentException if the mapping exists, but the key is not mapped to a value of type {@code T}\n+         * @return the optional value to which the key is mapped\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Platform.java","additions":31,"deletions":30,"binary":false,"changes":61,"status":"modified"}]}