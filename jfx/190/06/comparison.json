{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -753,0 +753,5 @@\n+        BaseTransform paintXform = paint.getPatternTransformNoClone();\n+        if (paintXform != null) {\n+            at.concatenate(paintXform);\n+        }\n+\n@@ -852,1 +857,2 @@\n-        if (renderTx.isIdentity()) {\n+        BaseTransform paintXform = paint.getPatternTransformNoClone();\n+        if (paintXform.isIdentity() && renderTx.isIdentity()) {\n@@ -861,0 +867,1 @@\n+            at.concatenate(paintXform);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/PaintHelper.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -729,0 +729,18 @@\n+        if (this.paint.getType() == Paint.Type.IMAGE_PATTERN) {\n+            ImagePattern imgpat = (ImagePattern) this.paint;\n+            java.awt.geom.AffineTransform at = toJ2DTransform(imgpat.getPatternTransformNoClone());\n+\n+            if (!at.isIdentity()) {\n+                g2d.setClip(shape);\n+                g2d.transform(at);\n+                tmpAT.setTransform(at);\n+                try {\n+                    tmpAT.invert();\n+                    g2d.fill(tmpAT.createTransformedShape(shape));\n+                } catch (NoninvertibleTransformException e) {\n+                }\n+                setTransform(transform);\n+                setClipRect(clipRect);\n+                return;\n+            }\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPrismGraphics.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import com.sun.javafx.geom.transform.BaseTransform;\n@@ -37,0 +38,1 @@\n+    private final BaseTransform patternTransform;\n@@ -40,0 +42,1 @@\n+                        BaseTransform patternTransform,\n@@ -51,0 +54,12 @@\n+        if (patternTransform != null) {\n+            this.patternTransform = patternTransform.copy();\n+        } else {\n+            this.patternTransform = BaseTransform.IDENTITY_TRANSFORM;\n+        }\n+    }\n+\n+    public ImagePattern(Image image,\n+                        float x, float y, float width, float height,\n+                        boolean proportional, boolean isMutable)\n+    {\n+        this(image, x, y, width, height, null, proportional, isMutable);\n@@ -73,0 +88,4 @@\n+    public BaseTransform getPatternTransformNoClone() {\n+        return patternTransform;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/paint\/ImagePattern.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -289,0 +289,1 @@\n+        paintTx.deriveWithConcatenation(ip.getPatternTransformNoClone());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWPaint.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -776,11 +776,0 @@\n-                    \/\/ The handling of pattern transform is modeled after the WebKit\n-                    \/\/ ImageCG.cpp's Image::drawPattern()\n-                    float adjustedX = phase.getX()\n-                            + srcRect.getX() * (float) patternTransform.getMatrix()[0];\n-                    float adjustedY = phase.getY()\n-                            + srcRect.getY() * (float) patternTransform.getMatrix()[3];\n-                    float scaledTileWidth =\n-                            srcRect.getWidth() * (float) patternTransform.getMatrix()[0];\n-                    float scaledTileHeight =\n-                            srcRect.getHeight() * (float) patternTransform.getMatrix()[3];\n-\n@@ -797,0 +786,6 @@\n+\n+                    double m[] = patternTransform.getMatrix();\n+                    Affine3D at = new Affine3D();\n+                    at.translate(phase.getX(), phase.getY());\n+                    at.concatenate(m[0], m[2], m[4], m[1], m[3], m[5]);\n+\n@@ -799,3 +794,3 @@\n-                               adjustedX, adjustedY,\n-                               scaledTileWidth, scaledTileHeight,\n-                               false, false));\n+                               srcRect.getX(), srcRect.getY(),\n+                               srcRect.getWidth(), srcRect.getHeight(),\n+                               at, false, false));\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCGraphicsPrismContext.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,32 @@\n+    \/\/ JDK-8234471\n+    @Test public void testCanvasPattern() throws Exception {\n+        final String htmlCanvasContent = \"\\n\"\n+            + \"<canvas id='canvaspattern' width='100' height='100'><\/canvas>\\n\"\n+            + \"<svg id='svgpattern'><\/svg>\\n\"\n+            + \"<script>\\n\"\n+            + \"var patternCanvas = document.createElement('canvas');\\n\"\n+            + \"var patternCtx = patternCanvas.getContext('2d');\\n\"\n+            + \"patternCanvas.width = patternCanvas.height = 30;\\n\"\n+            + \"patternCtx.fillStyle = 'red';\\n\"\n+            + \"patternCtx.fillRect(0, 0, 20, 20);\\n\"\n+            + \"\\n\"\n+            + \"var ctx = document.getElementById('canvaspattern').getContext('2d');\\n\"\n+            + \"var pattern = ctx.createPattern(patternCanvas, 'repeat');\\n\"\n+            + \"var matrix = document.getElementById('svgpattern').createSVGMatrix();\\n\"\n+            + \"pattern.setTransform(matrix.translate(10, 10));\\n\"\n+            + \"ctx.fillStyle = pattern;\\n\"\n+            + \"ctx.fillRect(0, 0, 100, 100);\\n\"\n+            + \"<\/script>\\n\";\n+\n+        loadContent(htmlCanvasContent);\n+        submit(() -> {\n+            int redColor = 255;\n+            assertEquals(\"Pattern top-left corner\", 0, (int) getEngine().executeScript(\n+                \"document.getElementById('canvaspattern').getContext('2d').getImageData(1, 1, 1, 1).data[0]\"));\n+            assertEquals(\"First rect top-left\", redColor, (int) getEngine().executeScript(\n+                \"document.getElementById('canvaspattern').getContext('2d').getImageData(11, 11, 1, 1).data[0]\"));\n+            assertEquals(\"First rect center\", redColor, (int) getEngine().executeScript(\n+                \"document.getElementById('canvaspattern').getContext('2d').getImageData(21, 21, 1, 1).data[0]\"));\n+        });\n+    }\n+\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/CanvasTest.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}