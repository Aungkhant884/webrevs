{"files":[{"patch":"@@ -202,0 +202,11 @@\n+    \/**\n+     * Calculates character index and insertion index for the given coordinates\n+     * and maps to {@link Hit} class.\n+     *\n+     * @param x x coordinate value.\n+     * @param y y coordinate value.\n+     * @param text text for which HitInfo needs to be calculated.\n+     *             It is expected to be null in the case of {@link javafx.scene.text.TextFlow}\n+     *             and non-null in the case of {@link javafx.scene.text.Text}\n+     * @return returns a {@link Hit} object containing character index, insertion index and position of cursor on the character.\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/text\/TextLayout.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -754,2 +754,4 @@\n-        boolean isTextPresent = text == null ? true : false;\n-        boolean isPresent = true;\n+        \/* Initializing textFound as true when text is null\n+         * because when this function is called for TextFlow text parameter will be null *\/\n+        boolean textFound = (text == null);\n+\n@@ -759,10 +761,5 @@\n-                for (TextRun r: lines[index].runs) {\n-                    if (r.getTextSpan() == null) {\n-                        isTextPresent = true;\n-                        break;\n-                    } else if (r.getTextSpan().getText().equals(text)) {\n-                        if (isPresent) {\n-                            bottom = 0;\n-                            isPresent = false;\n-                        }\n-                        isTextPresent = true;\n+                for (TextRun r : lines[index].runs) {\n+                    if (r.getTextSpan() == null || r.getTextSpan().getText().equals(text)) {\n+                        \/* Span will present only for Rich Text.\n+                         * Hence making textFound as true *\/\n+                        textFound = true;\n@@ -774,2 +771,6 @@\n-            if (index + 1 == lineCount) bottom -= lines[index].getLeading();\n-            if (bottom > y && isTextPresent) break;\n+            if (index + 1 == lineCount) {\n+                bottom -= lines[index].getLeading();\n+            }\n+            if (bottom > y && textFound) {\n+                break;\n+            }\n@@ -781,0 +782,1 @@\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismTextLayout.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import javafx.stage.Window;\n@@ -136,2 +137,3 @@\n-            robot.mouseMove((int) (scene.getWindow().getX() + scene.getX() + x),\n-                    (int) (scene.getWindow().getY() + scene.getY() + y));\n+            Window st = scene.getWindow();\n+            robot.mouseMove((int) (st.getX() + scene.getX() + x),\n+                    (int) (st.getY() + scene.getY() + y));\n@@ -153,1 +155,0 @@\n-            textFlow.getChildren().clear();\n@@ -164,1 +165,0 @@\n-            textFlow.getChildren().clear();\n@@ -175,1 +175,0 @@\n-            textFlow.getChildren().clear();\n@@ -186,1 +185,0 @@\n-            textFlow.getChildren().clear();\n@@ -197,1 +195,0 @@\n-            textFlow.getChildren().clear();\n@@ -208,1 +205,0 @@\n-            textFlow.getChildren().clear();\n@@ -219,1 +215,0 @@\n-            textFlow.getChildren().clear();\n@@ -401,3 +396,0 @@\n-        \/\/ String testString = textOne.getText();\n-        \/\/ testString += textTwo.getText();\n-        \/\/ isSurrogatePair = Character.isSurrogate(testString.charAt(charIndex));\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/TextCharacterIndexTest.java","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"}]}