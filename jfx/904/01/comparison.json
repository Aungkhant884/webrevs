{"files":[{"patch":"@@ -27,10 +27,2 @@\n-import com.sun.javafx.scene.ParentHelper;\n-import com.sun.javafx.scene.traversal.Algorithm;\n-import com.sun.javafx.scene.control.FakeFocusTextField;\n-import com.sun.javafx.scene.traversal.Direction;\n-import com.sun.javafx.scene.traversal.ParentTraversalEngine;\n-import javafx.scene.control.Control;\n-import javafx.scene.control.SkinBase;\n-import com.sun.javafx.scene.control.behavior.SpinnerBehavior;\n-import com.sun.javafx.scene.traversal.TraversalContext;\n-import javafx.collections.ListChangeListener;\n+import java.util.List;\n+\n@@ -43,0 +35,2 @@\n+import javafx.scene.control.Control;\n+import javafx.scene.control.SkinBase;\n@@ -50,1 +44,8 @@\n-import java.util.List;\n+import com.sun.javafx.scene.ParentHelper;\n+import com.sun.javafx.scene.control.FakeFocusTextField;\n+import com.sun.javafx.scene.control.ListenerHelper;\n+import com.sun.javafx.scene.control.behavior.SpinnerBehavior;\n+import com.sun.javafx.scene.traversal.Algorithm;\n+import com.sun.javafx.scene.traversal.Direction;\n+import com.sun.javafx.scene.traversal.ParentTraversalEngine;\n+import com.sun.javafx.scene.traversal.TraversalContext;\n@@ -83,1 +84,0 @@\n-\n@@ -87,1 +87,0 @@\n-\n@@ -106,1 +105,0 @@\n-\/\/        control.setInputMap(behavior.getInputMap());\n@@ -109,1 +107,2 @@\n-        getChildren().add(textField);\n+\n+        ListenerHelper lh = ListenerHelper.get(this);\n@@ -112,1 +111,3 @@\n-        control.getStyleClass().addListener((ListChangeListener<String>) c -> updateStyleClass());\n+        lh.addListChangeListener(control.getStyleClass(), (ch) -> {\n+            updateStyleClass();\n+        });\n@@ -172,1 +173,1 @@\n-        control.focusedProperty().addListener((ov, t, hasFocus) -> {\n+        lh.addChangeListener(control.focusedProperty(), (op) -> {\n@@ -174,1 +175,1 @@\n-            ((FakeFocusTextField)textField).setFakeFocus(hasFocus);\n+            ((FakeFocusTextField)textField).setFakeFocus(control.isFocused());\n@@ -177,1 +178,1 @@\n-        control.addEventFilter(KeyEvent.ANY, ke -> {\n+        lh.addEventFilter(control, KeyEvent.ANY, (ke) -> {\n@@ -207,1 +208,1 @@\n-        textField.addEventFilter(KeyEvent.ANY, ke -> {\n+        lh.addEventFilter(textField, KeyEvent.ANY, (ke) -> {\n@@ -214,1 +215,2 @@\n-        textField.focusedProperty().addListener((ov, t, hasFocus) -> {\n+        lh.addChangeListener(textField.focusedProperty(), (op) -> {\n+            boolean hasFocus = textField.isFocused();\n@@ -232,1 +234,0 @@\n-\n@@ -264,0 +265,5 @@\n+    @Override\n+    public void install() {\n+        getChildren().add(textField);\n+    }\n+\n@@ -265,2 +271,7 @@\n-    @Override public void dispose() {\n-        super.dispose();\n+    @Override\n+    public void dispose() {\n+        if(getSkinnable() == null) {\n+            return;\n+        }\n+\n+        getChildren().removeAll(textField, incrementArrowButton, decrementArrowButton);\n@@ -271,0 +282,2 @@\n+\n+        super.dispose();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/SpinnerSkin.java","additions":37,"deletions":24,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-                Spinner.class,\n+                \/\/ Spinner.class,\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinMemoryLeakTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,0 +144,8 @@\n+\n+    \/** Tests JDK-8245145: IAE when replacing skins *\/\n+    @Test\n+    public void testSpinnerSkin() {\n+        Spinner<?> spinner = new Spinner<>();\n+        spinner.setSkin(new SpinnerSkin<>(spinner));\n+        spinner.setSkin(new SpinnerSkin<>(spinner));\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SpinnerSkinTest.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}