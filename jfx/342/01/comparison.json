{"files":[{"patch":"@@ -368,0 +368,2 @@\n+                    \/\/ If setRange is not called the tickLabelRotation should still have been updated\n+                    if (!isAutoRanging()) setTickLabelRotation(tickLabelRotation);\n@@ -371,0 +373,2 @@\n+                    \/\/ If setRange is not called the tickLabelRotation should still have been updated\n+                    if (!isAutoRanging()) setTickLabelRotation(tickLabelRotation);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/CategoryAxis.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.chart;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.scene.Scene;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.chart.BarChart;\n+import javafx.scene.chart.CategoryAxis;\n+import javafx.scene.chart.NumberAxis;\n+import javafx.collections.FXCollections;\n+import javafx.stage.Stage;\n+import javafx.stage.WindowEvent;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import test.util.Util;\n+\n+public class ChartAxisLayoutTest {\n+\n+    private static CountDownLatch startupLatch;\n+    private static Stage stage;\n+    private static VBox rootPane;\n+    private static CategoryAxis xAxis;\n+\n+    public static class TestApp extends Application {\n+\n+        @Override\n+        public void start(Stage primaryStage) throws Exception {\n+            stage = primaryStage;\n+            rootPane = new VBox();\n+            stage.setScene(new Scene(rootPane, 600, 800));\n+\n+            var categories = List.of(\n+                    \"1st very long category name..............\",\n+                    \"2nd very long category name..............\",\n+                    \"3rd very long category name..............\",\n+                    \"4th very long category name..............\",\n+                    \"5th very long category name..............\"\n+            );\n+\n+            xAxis = new CategoryAxis();\n+            xAxis.setCategories(FXCollections.observableList(categories));\n+\n+            BarChart<String, Number> chart = new BarChart<>(xAxis, new NumberAxis());\n+            chart.prefWidthProperty().bind(rootPane.widthProperty());\n+            chart.prefHeightProperty().bind(rootPane.heightProperty());\n+            chart.setAnimated(false);\n+            rootPane.getChildren().add(chart);\n+\n+            stage.addEventHandler(WindowEvent.WINDOW_SHOWN, e -> {\n+                Platform.runLater(() -> startupLatch.countDown());\n+            });\n+            stage.show();\n+        }\n+    }\n+\n+    @BeforeClass\n+    public static void initFX() throws Exception {\n+        startupLatch = new CountDownLatch(1);\n+        new Thread(() -> Application.launch(ChartAxisLayoutTest.TestApp.class, (String[]) null)).start();\n+\n+        assertTrue(\"Timeout waiting for FX runtime to start\", startupLatch.await(15, TimeUnit.SECONDS));\n+    }\n+\n+    @Test\n+    public void ensureThatLabelsAreAutoRotated() {\n+        Util.runAndWait(() -> assertEquals(90.0, xAxis.getTickLabelRotation(), 0.0001));\n+    }\n+\n+    @AfterClass\n+    public static void teardownOnce() {\n+        Platform.runLater(() -> {\n+            stage.hide();\n+            Platform.exit();\n+        });\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/chart\/ChartAxisLayoutTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"}]}