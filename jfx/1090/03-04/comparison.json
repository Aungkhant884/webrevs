{"files":[{"patch":"@@ -69,0 +69,1 @@\n+     * @implSpec The default implementation of this method throws {@code UnsupportedOperationException}.\n@@ -86,0 +87,1 @@\n+     * @implSpec The default implementation of this method throws {@code UnsupportedOperationException}.\n@@ -103,0 +105,1 @@\n+     * @implSpec The default implementation of this method throws {@code UnsupportedOperationException}.\n@@ -120,0 +123,1 @@\n+     * @implSpec The default implementation of this method throws {@code UnsupportedOperationException}.\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/event\/EventTarget.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,9 +77,0 @@\n- * {@code TableColumn} declares the following {@link CellEditEvent} types, which are received\n- * when a cell is being edited:\n- * <ul>\n- *     <li>{@link #editAnyEvent()}\n- *     <li>{@link #editStartEvent()}\n- *     <li>{@link #editCommitEvent()}\n- *     <li>{@link #editCancelEvent()}\n- * <\/ul>\n- *\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableColumn.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,9 +72,0 @@\n- * {@code TreeTableColumn} declares the following {@link CellEditEvent} types, which are received\n- * when a cell is being edited:\n- * <ul>\n- *     <li>{@link #editAnyEvent()}\n- *     <li>{@link #editStartEvent()}\n- *     <li>{@link #editCommitEvent()}\n- *     <li>{@link #editCancelEvent()}\n- * <\/ul>\n- *\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableColumn.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,6 @@\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import javafx.event.ActionEvent;\n+import javafx.event.Event;\n+import javafx.event.EventHandler;\n@@ -32,4 +38,2 @@\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-import static org.junit.Assert.assertEquals;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -42,1 +46,1 @@\n-    @Before\n+    @BeforeEach\n@@ -47,1 +51,1 @@\n-    @After\n+    @AfterEach\n@@ -101,0 +105,33 @@\n+    @Test\n+    public void testAddAndRemoveEventHandler() {\n+        var handler = new TestHandler();\n+        dialog.addEventHandler(ActionEvent.ACTION, handler);\n+        Event.fireEvent(dialog, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+\n+        dialog.removeEventHandler(ActionEvent.ACTION, handler);\n+        Event.fireEvent(dialog, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+    }\n+\n+    @Test\n+    public void testAddAndRemoveEventFilter() {\n+        var handler = new TestHandler();\n+        dialog.addEventFilter(ActionEvent.ACTION, handler);\n+        Event.fireEvent(dialog, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+\n+        dialog.removeEventFilter(ActionEvent.ACTION, handler);\n+        Event.fireEvent(dialog, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+    }\n+\n+    private static class TestHandler implements EventHandler<ActionEvent> {\n+        int handled;\n+\n+        @Override\n+        public void handle(ActionEvent event) {\n+            handled++;\n+        }\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/DialogTest.java","additions":44,"deletions":7,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import javafx.event.ActionEvent;\n@@ -466,0 +467,31 @@\n+\n+    @Test public void testAddAndRemoveEventHandler() {\n+        var handler = new TestHandler();\n+        tab.addEventHandler(ActionEvent.ACTION, handler);\n+        Event.fireEvent(tab, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+\n+        tab.removeEventHandler(ActionEvent.ACTION, handler);\n+        Event.fireEvent(tab, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+    }\n+\n+    @Test public void testAddAndRemoveEventFilter() {\n+        var handler = new TestHandler();\n+        tab.addEventFilter(ActionEvent.ACTION, handler);\n+        Event.fireEvent(tab, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+\n+        tab.removeEventFilter(ActionEvent.ACTION, handler);\n+        Event.fireEvent(tab, new ActionEvent());\n+        assertEquals(1, handler.handled);\n+    }\n+\n+    private static class TestHandler implements EventHandler<ActionEvent> {\n+        int handled;\n+\n+        @Override\n+        public void handle(ActionEvent event) {\n+            handled++;\n+        }\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TabTest.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -744,0 +744,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n@@ -752,0 +756,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n@@ -760,0 +768,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n@@ -768,0 +780,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/Service.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1251,0 +1251,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n@@ -1259,0 +1263,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n@@ -1267,0 +1275,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n@@ -1275,0 +1287,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 2.1\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/Task.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1916,0 +1916,2 @@\n+     *\n+     * @since JavaFX 8.0\n@@ -1927,0 +1929,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 8.0\n+     *\/\n@@ -1940,0 +1946,2 @@\n+     *\n+     * @since JavaFX 8.0\n@@ -1951,0 +1959,4 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since JavaFX 8.0\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/transform\/Transform.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}