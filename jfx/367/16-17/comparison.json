{"files":[{"patch":"@@ -724,1 +724,1 @@\n-    gtk_widget =  gtk_window_new(type == POPUP ? GTK_WINDOW_POPUP : GTK_WINDOW_TOPLEVEL);\n+    gtk_widget = gtk_window_new(type == POPUP ? GTK_WINDOW_POPUP : GTK_WINDOW_TOPLEVEL);\n@@ -760,0 +760,5 @@\n+    GdkGeometry gdk_geometry;\n+    gdk_geometry.win_gravity = GDK_GRAVITY_NORTH_WEST;\n+\n+    gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &gdk_geometry, (GdkWindowHints) GDK_HINT_WIN_GRAVITY);\n+\n@@ -926,3 +931,3 @@\n-                    \/\/ this is ignored if size is \"content size\" instead of \"window size\"\n-                    if (geometry.needs_ajustment) {\n-                        set_bounds(0, 0, false, false, geometry.current_w, geometry.current_h, -1, -1);\n+                    if (geometry.needs_frame_extents) {\n+                        set_bounds(0, 0, false, false, geometry.current_w, geometry.current_h,\n+                                    geometry.current_cw, geometry.current_ch);\n@@ -952,7 +957,0 @@\n-    \/\/ingore until frame extents are ok (it will trigger a new set_bounds)\n-    if (TITLED == frame_type && geometry.frame_extents_supported && !geometry.frame_extents_received) {\n-        window_size_changed = false;\n-    }\n-\n-    geometry.current_x = x;\n-    geometry.current_y = y;\n@@ -961,0 +959,2 @@\n+    geometry.current_x = x;\n+    geometry.current_y = y;\n@@ -999,1 +999,0 @@\n-    gdk_geometry.win_gravity = GDK_GRAVITY_NORTH_WEST;\n@@ -1027,1 +1026,1 @@\n-                                  (GdkWindowHints)(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE | GDK_HINT_WIN_GRAVITY));\n+                                  (GdkWindowHints)(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE));\n@@ -1031,11 +1030,2 @@\n-    if (jview) {\n-        if (content_size_changed) {\n-            mainEnv->CallVoidMethod(jview, jViewNotifyResize, geometry.current_cw, geometry.current_ch);\n-            CHECK_JNI_EXCEPTION(mainEnv);\n-        }\n-\n-        if (pos_changed) {\n-            mainEnv->CallVoidMethod(jview, jViewNotifyView, com_sun_glass_events_ViewEvent_MOVE);\n-            CHECK_JNI_EXCEPTION(mainEnv)\n-        }\n-    }\n+    g_print(\"size_position_notify -> window_size_changed: %d, content_size_changed: %d, pos_changed: %d\\n\",\n+                window_size_changed, content_size_changed, pos_changed);\n@@ -1043,1 +1033,1 @@\n-    if (jwindow) {\n+   if (jwindow) {\n@@ -1045,0 +1035,1 @@\n+            g_print(\"notify window size: %d, %d\\n\", geometry.current_w, geometry.current_h);\n@@ -1054,0 +1045,1 @@\n+            g_print(\"notify window move: %d, %d\\n\", geometry.current_x, geometry.current_y);\n@@ -1058,0 +1050,14 @@\n+\n+    if (jview) {\n+        if (content_size_changed) {\n+            g_print(\"notify content size: %d, %d\\n\", geometry.current_cw, geometry.current_ch);\n+            mainEnv->CallVoidMethod(jview, jViewNotifyResize, geometry.current_cw, geometry.current_ch);\n+            CHECK_JNI_EXCEPTION(mainEnv);\n+        }\n+\n+        if (pos_changed) {\n+            g_print(\"notify view pos changed\\n\");\n+            mainEnv->CallVoidMethod(jview, jViewNotifyView, com_sun_glass_events_ViewEvent_MOVE);\n+            CHECK_JNI_EXCEPTION(mainEnv)\n+        }\n+    }\n@@ -1061,4 +1067,5 @@\n-    \/\/ This will tell if adjustments are needed - that's because GTK does not have full window size\n-    \/\/ values, just content values. Frame extents (window decorations) are handled by the window manager.\n-    \/\/ If cw, ch are specified, no adjustment is needed.\n-    geometry.needs_ajustment = geometry.needs_ajustment || (w > 0 || h > 0);\n+    g_print(\"set_bounds: %d, %d, %d, %d, %d, %d\\n\", x, y, w, h, cw, ch);\n+    \/\/This will tell if frame_extents is needed to correct the window size accounting it frame (decorations)\n+    geometry.needs_frame_extents = TITLED == frame_type\n+                                && geometry.frame_extents_supported\n+                                && !geometry.frame_extents_received;\n@@ -1066,3 +1073,2 @@\n-    \/\/ newW \/ newH always content sizes compatible with GTK+\n-    \/\/ if window has no decoration, adjustments will be ZERO\n-    int newW, newH;\n+    \/\/ newW \/ newH always content sizes compatible with GTK+ (content size means \"do not account window frame\")\n+    int newW = 0, newH = 0;\n@@ -1075,1 +1081,1 @@\n-    } else {\n+    } else if (w > 0 || h > 0) {\n@@ -1079,2 +1085,0 @@\n-        geometry.current_w = w;\n-        geometry.current_h = h;\n@@ -1083,2 +1087,1 @@\n-    bool window_size_changed = false;\n-    bool content_size_changed = false;\n+    bool size_changed = false;\n@@ -1088,1 +1091,2 @@\n-        \/\/ content size\n+        geometry.current_w = newW + geometry.adjust_w;\n+        geometry.current_h = newH + geometry.adjust_h;\n@@ -1095,2 +1099,1 @@\n-            \/\/ call apply_geometry() to let gtk_window_resize succeed, because it's bound to\n-            \/\/ geometry constraints\n+            \/\/ call apply_geometry() to let gtk_window_resize succeed, because it's bound to geometry constraints\n@@ -1103,11 +1106,1 @@\n-        window_size_changed = !geometry.content_size;\n-        content_size_changed = true;\n-        geometry.size_assigned = true;\n-    }\n-\n-    \/\/ Java side does not know the window size, set and inform it.\n-    \/\/ This is used on the Dialog<> centerOnScreen()\n-    if ((!geometry.frame_extents_supported || (geometry.frame_extents_supported && geometry.frame_extents_received))\n-        && (geometry.current_h <= 0 || geometry.current_w <= 0)) {\n-\n-        window_size_changed = true;\n+        size_changed = true;\n@@ -1115,4 +1108,0 @@\n-\n-        geometry.content_size = false;\n-        geometry.current_h = geometry.current_ch + geometry.adjust_h;\n-        geometry.current_w = geometry.current_cw + geometry.adjust_w;\n@@ -1125,5 +1114,4 @@\n-        \/\/gravity is informed by Java side when it want's to center the window\n-        \/\/but does not know it's size\n-        if (geometry.content_size && (geometry.gravity_x != 0 || geometry.gravity_y != 0)) {\n-            newX -= geometry.current_cw * geometry.gravity_x;\n-            newY -= geometry.current_ch * geometry.gravity_y;\n+        \/\/gravity is informed by Java side when it want's to move the window based on it's size\n+        if (geometry.gravity_x != 0 || geometry.gravity_y != 0) {\n+            newX -= geometry.current_w * geometry.gravity_x;\n+            newY -= geometry.current_h * geometry.gravity_y;\n@@ -1140,2 +1128,2 @@\n-    if (window_size_changed || content_size_changed || pos_changed) {\n-        size_position_notify(window_size_changed, content_size_changed, pos_changed);\n+    if (size_changed || pos_changed) {\n+        size_position_notify(size_changed, size_changed, pos_changed);\n@@ -1301,0 +1289,1 @@\n+    g_print(\"set_gravity: %f, %f\\n\", x, y);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":51,"deletions":62,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-    WindowGeometry() : current_x(-1),\n-                       current_y(-1),\n+    WindowGeometry() : current_x(0),\n+                       current_y(0),\n@@ -72,2 +72,2 @@\n-                       gravity_x(1.00),\n-                       gravity_y(1.00),\n+                       gravity_x(0.00),\n+                       gravity_y(0.00),\n@@ -80,1 +80,2 @@\n-                       needs_ajustment(false),\n+                       content_size(false),\n+                       needs_frame_extents(false),\n@@ -121,3 +122,2 @@\n-    \/\/ if the window size was set (instead of content size) - this is used to hint\n-    \/\/ the process to \"fix\" the window size accounting extents.\n-    bool needs_ajustment;\n+    \/\/frame extents are the window frame (decorations)\n+    bool needs_frame_extents;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}