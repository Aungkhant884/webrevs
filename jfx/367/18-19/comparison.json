{"files":[{"patch":"@@ -105,1 +105,1 @@\n-        return view->current_window->get_geometry().view_x;\n+        return view->current_window->get_geometry().extents.left;\n@@ -123,1 +123,1 @@\n-        return view->current_window->get_geometry().view_y;\n+        return view->current_window->get_geometry().extents.top;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassView.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -701,1 +701,0 @@\n-\n@@ -708,2 +707,4 @@\n-int WindowContextTop::cached_adjust_w = 0;\n-int WindowContextTop::cached_adjust_h = 0;\n+\/\/ Work-around because frame extents are only obtained after window is shown.\n+\/\/ Initial values are a guess\n+WindowFrameExtents WindowContextTop::normal_extents = {37, 0, 0, 0};\n+WindowFrameExtents WindowContextTop::utility_extents = {37, 0, 0, 0};\n@@ -782,0 +783,1 @@\n+        geometry.extents = get_cached_extents();\n@@ -839,0 +841,12 @@\n+void WindowContextTop::set_cached_extents(WindowFrameExtents ex) {\n+    if (window_type == NORMAL) {\n+        normal_extents = ex;\n+    } else {\n+        utility_extents = ex;\n+    }\n+}\n+\n+WindowFrameExtents WindowContextTop::get_cached_extents() {\n+    return window_type == NORMAL ? normal_extents : utility_extents;\n+}\n+\n@@ -927,4 +941,4 @@\n-                    geometry.adjust_w = left + right;\n-                    geometry.adjust_h = top + bottom;\n-                    geometry.view_x = left;\n-                    geometry.view_y = top;\n+                    geometry.extents.top = top;\n+                    geometry.extents.left = left;\n+                    geometry.extents.bottom = bottom;\n+                    geometry.extents.right = right;\n@@ -932,2 +946,1 @@\n-                    cached_adjust_w = geometry.adjust_w;\n-                    cached_adjust_h = geometry.adjust_h;\n+                    set_cached_extents(geometry.extents);\n@@ -947,1 +960,1 @@\n-    gint x, y, cw, ch;\n+    gint x, y, cw, ch, w, h;\n@@ -949,1 +962,1 @@\n-    \/\/content width \/ height\n+    \/\/ content width \/ height\n@@ -952,0 +965,2 @@\n+    w = cw + geometry.extents.left + geometry.extents.right;\n+    h = ch + geometry.extents.top + geometry.extents.bottom;\n@@ -956,12 +971,2 @@\n-    bool window_size_changed = false;\n-    bool content_size_changed = geometry.current_cw != cw || geometry.current_ch != ch;\n-\n-    \/\/wait for frame extents to notify it\n-    if (!geometry.needs_frame_extents) {\n-        int w, h;\n-        w = cw + geometry.adjust_w;\n-        h = ch + geometry.adjust_h;\n-        window_size_changed =  geometry.current_w != w || geometry.current_h != h;;\n-        geometry.current_w = w;\n-        geometry.current_h = h;\n-    }\n+    bool size_changed =  geometry.current_w != w || geometry.current_h != h\n+                         || geometry.current_cw != cw || geometry.current_ch != ch;\n@@ -971,0 +976,2 @@\n+    geometry.current_w = w;\n+    geometry.current_h = h;\n@@ -979,1 +986,1 @@\n-    size_position_notify(window_size_changed, content_size_changed, pos_changed);\n+    size_position_notify(size_changed, pos_changed);\n@@ -985,1 +992,1 @@\n-                \/\/notify screen changed\n+                \/\/ notify screen changed\n@@ -1023,0 +1030,3 @@\n+    int adjust_h = geometry.extents.top + geometry.extents.bottom;\n+    int adjust_w = geometry.extents.left + geometry.extents.right;\n+\n@@ -1027,1 +1037,1 @@\n-                : geometry.current_w - geometry.adjust_w;\n+                : geometry.current_w - adjust_w;\n@@ -1031,1 +1041,1 @@\n-                : geometry.current_h - geometry.adjust_h;\n+                : geometry.current_h - adjust_h;\n@@ -1036,5 +1046,5 @@\n-        \/\/min\/max width\/height always whole window size (with decors)\n-        gdk_geometry.min_width = (geometry.minw - geometry.adjust_w) > 0\n-                                 ? geometry.minw - geometry.adjust_w : 1;\n-        gdk_geometry.min_height = (geometry.minh - geometry.adjust_h) > 0\n-                                  ? geometry.minh - geometry.adjust_h : 1;\n+        \/\/ min\/max width\/height always whole window size (with decors)\n+        gdk_geometry.min_width = (geometry.minw - adjust_w) > 0\n+                                 ? geometry.minw - adjust_w : 1;\n+        gdk_geometry.min_height = (geometry.minh - adjust_h) > 0\n+                                  ? geometry.minh - adjust_h : 1;\n@@ -1042,4 +1052,4 @@\n-        gdk_geometry.max_width = (geometry.maxw - geometry.adjust_w > 0)\n-                                 ? geometry.maxw - geometry.adjust_w : G_MAXINT;\n-        gdk_geometry.max_height = (geometry.maxh - geometry.adjust_h > 0)\n-                                  ? geometry.maxh - geometry.adjust_h : G_MAXINT;\n+        gdk_geometry.max_width = (geometry.maxw - adjust_w > 0)\n+                                 ? geometry.maxw - adjust_w : G_MAXINT;\n+        gdk_geometry.max_height = (geometry.maxh - adjust_h > 0)\n+                                  ? geometry.maxh - adjust_h : G_MAXINT;\n@@ -1052,1 +1062,1 @@\n-void WindowContextTop::size_position_notify(bool window_size_changed, bool content_size_changed, bool pos_changed) {\n+void WindowContextTop::size_position_notify(bool size_changed, bool pos_changed) {\n@@ -1054,1 +1064,1 @@\n-       if (content_size_changed) {\n+       if (size_changed) {\n@@ -1066,1 +1076,1 @@\n-        if (window_size_changed || is_maximized) {\n+        if (size_changed || is_maximized) {\n@@ -1083,1 +1093,1 @@\n-    \/\/This will tell if frame_extents is needed to correct the window size accounting it frame (decorations)\n+    \/\/ This will tell if frame_extents is needed to correct the window size accounting it frame (decorations)\n@@ -1089,1 +1099,2 @@\n-    int newW = 0, newH = 0;\n+    int newW = (w > 0) ? w - (geometry.extents.left + geometry.extents.right) : cw;\n+    int newH = (h > 0) ? h - (geometry.extents.top + geometry.extents.bottom) : ch;\n@@ -1091,23 +1102,1 @@\n-    int adjust_w, adjust_h;\n-\n-    if (geometry.needs_frame_extents) {\n-        adjust_w = cached_adjust_w;\n-        adjust_h = cached_adjust_h;\n-    } else {\n-        adjust_w = geometry.adjust_w;\n-        adjust_h = geometry.adjust_h;\n-    }\n-\n-    \/\/oriented by content size\n-    if (cw > 0 || ch > 0) {\n-        geometry.content_size = true;\n-        newW = cw;\n-        newH = ch;\n-    } else if (w > 0 || h > 0) {\n-        geometry.content_size = false;\n-        newW = w - geometry.adjust_w;\n-        newH = h - geometry.adjust_h;\n-    }\n-\n-    bool window_size_changed = false;\n-    bool content_size_changed = false;\n+    bool size_changed = false;\n@@ -1117,0 +1106,2 @@\n+        geometry.current_w = newW + (geometry.extents.left + geometry.extents.right);\n+        geometry.current_h = newH + (geometry.extents.top + geometry.extents.bottom);\n@@ -1130,10 +1121,1 @@\n-        \/\/TODO: find an alternative to positioning since this resizes the window when frame extents are received\n-        \/\/ this is used mostly to trigger gravity, since Java side needs\n-        if (geometry.current_w <= 0 || geometry.current_h <= 0) {\n-            window_size_changed = true;\n-\n-            geometry.current_w = (geometry.current_w <= 0) ? geometry.current_cw + adjust_w : geometry.current_w;\n-            geometry.current_h = (geometry.current_h <= 0) ? geometry.current_ch + adjust_h : geometry.current_h;\n-        }\n-\n-        content_size_changed = geometry.content_size;\n+        size_changed = true;\n@@ -1147,5 +1129,0 @@\n-        if (geometry.gravity_x != 0 || geometry.gravity_y != 0) {\n-            newX -= (((geometry.content_size) ? 0 : adjust_w) + geometry.current_cw) * geometry.gravity_x;\n-            newY -= (((geometry.content_size) ? 0 : adjust_h) + geometry.current_ch) * geometry.gravity_y;\n-        }\n-\n@@ -1160,2 +1137,2 @@\n-    if (window_size_changed || content_size_changed || pos_changed) {\n-        size_position_notify(window_size_changed, content_size_changed, pos_changed);\n+    if (size_changed || pos_changed) {\n+        size_position_notify(size_changed, pos_changed);\n@@ -1321,2 +1298,2 @@\n-    geometry.gravity_x = x;\n-    geometry.gravity_y = y;\n+    \/\/this is not needed because window size is always set, so the java side takes care of centering\n+    \/\/the window on screen and sending set_bounds\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":60,"deletions":83,"binary":false,"changes":143,"status":"modified"},{"patch":"@@ -55,0 +55,7 @@\n+struct WindowFrameExtents {\n+    int top;\n+    int left;\n+    int bottom;\n+    int right;\n+};\n+\n@@ -57,0 +64,1 @@\n+\n@@ -66,4 +74,1 @@\n-                       adjust_w(0),\n-                       adjust_h(0),\n-                       view_x(0),\n-                       view_y(0),\n+                       extents({0, 0, 0, 0}),\n@@ -72,2 +77,0 @@\n-                       gravity_x(0.00),\n-                       gravity_y(0.00),\n@@ -80,1 +83,0 @@\n-                       content_size(false),\n@@ -93,8 +95,1 @@\n-    \/\/ Used to ajust window sizes because gtk doest not account frame extents as part\n-    \/\/ of the window size and JavaFx does.\n-    int adjust_w;\n-    int adjust_h;\n-\n-    \/\/ The position of the view relative to the window\n-    int view_x;\n-    int view_y;\n+    WindowFrameExtents extents;\n@@ -106,4 +101,0 @@\n-    \/\/ Currently not used\n-    float gravity_x;\n-    float gravity_y;\n-\n@@ -119,3 +110,0 @@\n-    \/\/true if size is oriented by content, false if by window size with extents\n-    bool content_size;\n-\n@@ -401,2 +389,2 @@\n-    static int cached_adjust_w;\n-    static int cached_adjust_h;\n+    static WindowFrameExtents normal_extents;\n+    static WindowFrameExtents utility_extents;\n@@ -442,1 +430,1 @@\n-    void size_position_notify(bool, bool, bool);\n+    void size_position_notify(bool, bool);\n@@ -447,0 +435,2 @@\n+    void set_cached_extents(WindowFrameExtents ex);\n+    WindowFrameExtents get_cached_extents();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":15,"deletions":25,"binary":false,"changes":40,"status":"modified"}]}