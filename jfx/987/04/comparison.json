{"files":[{"patch":"@@ -116,1 +116,1 @@\n-            self->jCallback = (*env)->NewGlobalRef(env, jcallback);\n+            self->jCallback = (*env)->NewWeakGlobalRef(env, jcallback);\n@@ -155,1 +155,1 @@\n-            (*env)->DeleteGlobalRef(env, self->jCallback);\n+            (*env)->DeleteWeakGlobalRef(env, self->jCallback);\n@@ -167,6 +167,6 @@\n-    if (self->jCallback != NULL)\n-    {\n-        GET_MAIN_JENV;\n-        if (env != NULL)\n-        {\n-            (*env)->CallVoidMethod(env, self->jCallback, jMenuActionMethod, NULL);\n+    GET_MAIN_JENV;\n+    if (env != NULL) {\n+        jobject jCallback = (*env)->NewLocalRef(env, self->jCallback);\n+        if (jCallback != NULL) {\n+            (*env)->CallVoidMethod(env, jCallback, jMenuActionMethod, NULL);\n+            (*env)->DeleteLocalRef(env, jCallback);\n@@ -208,1 +208,6 @@\n-        (*env)->CallVoidMethod(env, self->jCallback, jMenuValidateMethod, NULL);\n+\n+        jobject jCallback = (*env)->NewLocalRef(env, self->jCallback);\n+        if (jCallback != NULL) {\n+            (*env)->CallVoidMethod(env, jCallback, jMenuValidateMethod, NULL);\n+            (*env)->DeleteLocalRef(env, jCallback);\n+        }\n@@ -650,1 +655,1 @@\n-        (*env)->DeleteGlobalRef(env, menu->jCallback);\n+        (*env)->DeleteWeakGlobalRef(env, menu->jCallback);\n@@ -653,1 +658,1 @@\n-            menu->jCallback = (*env)->NewGlobalRef(env, jCallback);\n+            menu->jCallback = (*env)->NewWeakGlobalRef(env, jCallback);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassMenu.m","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.scene.control;\n+\n+import com.sun.javafx.tk.Toolkit;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Menu;\n+import javafx.scene.control.MenuBar;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.layout.VBox;\n+import javafx.stage.Stage;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.AfterAll;\n+import test.com.sun.javafx.pgstub.StubToolkit;\n+import test.util.Util;\n+import test.util.memory.JMemoryBuddy;\n+import javafx.application.Platform;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class SystemMenuBarTest {\n+\n+    @BeforeAll\n+    public static void initFX() throws Exception {\n+        CountDownLatch startupLatch = new CountDownLatch(1);\n+        Platform.setImplicitExit(false);\n+        Util.startup(startupLatch, startupLatch::countDown);\n+    }\n+\n+    @AfterAll\n+    public static void teardownOnce() {\n+        Util.shutdown();\n+    }\n+\n+    @Test\n+    public void test_JDK_8299423() {\n+        \/**\n+         * We want to test, if we add a menu to the system-menu, whether it's callable get's collected after the entry is removed.\n+         *\n+         *\/\n+        JMemoryBuddy.memoryTest((checker) -> {\n+            CountDownLatch latch = new CountDownLatch(1);\n+            Platform.runLater(() -> {\n+                Stage stage = new Stage();\n+                MenuBar menuBar = new MenuBar();\n+                VBox root = new VBox(menuBar);\n+                stage.setScene(new Scene(root));\n+                menuBar.setUseSystemMenuBar(true);\n+                Menu menu1 = new Menu(\"menu-1\");\n+                var item2 = new MenuItem(\"remove above\");\n+                menu1.getItems().add(item2);\n+                menuBar.getMenus().add(menu1);\n+                EventHandler<ActionEvent> listener = new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent event) {\n+                        System.out.println(\"I'm the listener, but no one calls me.\");\n+                    }\n+                };\n+                item2.setOnAction(listener);\n+                stage.show();\n+\n+                checker.assertCollectable(listener);\n+\n+                new Thread(() -> {\n+                    try {\n+                        Thread.sleep(1000);\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n+                    Platform.runLater(() -> {\n+                        menu1.getItems().clear();\n+                        latch.countDown();\n+                    });\n+                }).start();\n+            });\n+\n+            try {\n+                assertTrue(\"Timeout waiting for setOnShown\", latch.await(15, TimeUnit.SECONDS));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        });\n+    }\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/SystemMenuBarTest.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}