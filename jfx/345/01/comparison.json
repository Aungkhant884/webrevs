{"files":[{"patch":"@@ -1347,0 +1347,5 @@\n+        \/\/ enable the functionality on the window manager as it might ignore the maximize command,\n+        \/\/ for example when the window is undecorated.\n+        GdkWMFunction wmf = (GdkWMFunction)(gdk_windowManagerFunctions | GDK_FUNC_MAXIMIZE);\n+        gdk_window_set_functions(gdk_window, wmf);\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.stage;\n+\n+import com.sun.javafx.PlatformUtil;\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.scene.Group;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+import javafx.stage.StageStyle;\n+import javafx.stage.WindowEvent;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import test.util.Util;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.Assert.fail;\n+import static org.junit.Assume.*;\n+\n+public class MaximizeUndecorated {\n+    static CountDownLatch startupLatch;\n+    static Stage stage;\n+    static final int POS = 500;\n+\n+    public static class TestApp extends Application {\n+        @Override\n+        public void start(Stage primaryStage) throws Exception {\n+            primaryStage.setScene(new Scene(new Group()));\n+            stage = primaryStage;\n+            stage.addEventHandler(WindowEvent.WINDOW_SHOWN, e ->\n+                    Platform.runLater(startupLatch::countDown));\n+            stage.initStyle(StageStyle.UNDECORATED);\n+            stage.setX(POS);\n+            stage.setY(POS);\n+            stage.setOnShown(e -> stage.setMaximized(true));\n+            stage.show();\n+        }\n+    }\n+\n+    @BeforeClass\n+    public static void initFX() {\n+        startupLatch = new CountDownLatch(1);\n+        new Thread(() -> Application.launch(TestApp.class, (String[]) null)).start();\n+        try {\n+            if (!startupLatch.await(15, TimeUnit.SECONDS)) {\n+                fail(\"Timeout waiting for FX runtime to start\");\n+            }\n+        } catch (InterruptedException ex) {\n+            fail(\"Unexpected exception: \" + ex);\n+        }\n+    }\n+\n+    @Test\n+    public void testMaximize() throws Exception {\n+        \/\/ temporary until JDK-8255835 is fixed\n+        assumeTrue(!PlatformUtil.isMac());\n+        Util.sleep(200);\n+\n+        boolean movedToTopCorner = stage.getY() != POS && stage.getX() != POS;\n+        Assert.assertTrue(\"Stage has moved to desktop top corner\", movedToTopCorner);\n+    }\n+\n+    @AfterClass\n+    public static void teardown() {\n+        Platform.runLater(stage::hide);\n+        Platform.exit();\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/MaximizeUndecorated.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"}]}