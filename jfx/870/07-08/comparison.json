{"files":[{"patch":"@@ -79,1 +79,7 @@\n-        } else if ((oldValue = get()) == null) {\n+        } else if (!(v instanceof Interpolatable<?>)\n+                   || ((oldValue = get()) == null)\n+                   || !(v.getClass().isInstance(oldValue))) {\n+            \/\/ Consider a case where T := Paint. Now 'oldValue' could be a Color instance, while 'v' could\n+            \/\/ be a LinearGradient instance. Both types implement Interpolatable, but with different type\n+            \/\/ arguments. We detect this case by checking whether 'v' is an instance of 'oldValue' (so that\n+            \/\/ oldValue.interpolate(v, t) succeeds), and skipping the transition when the test fails.\n@@ -84,3 +90,2 @@\n-            TransitionDefinition transition = this.origin != null\n-                && v instanceof Interpolatable<?>\n-                && getBean() instanceof Node node ? NodeHelper.findTransitionDefinition(node, getCssMetaData()) : null;\n+            TransitionDefinition transition = this.origin != null && getBean() instanceof Node node ?\n+                    NodeHelper.findTransitionDefinition(node, getCssMetaData()) : null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleableObjectProperty.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}