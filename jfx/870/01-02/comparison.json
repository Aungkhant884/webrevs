{"files":[{"patch":"@@ -1719,1 +1719,1 @@\n-            <td>the interval starts with a rise point when the input progress value is 0<\/span><\/td>\n+            <td>the interval starts with a rise point when the input progress value is 0<\/td>\n@@ -1723,1 +1723,1 @@\n-            <td>the interval ends with a rise point when the input progress value is 1<\/span><\/td>\n+            <td>the interval ends with a rise point when the input progress value is 1<\/td>\n@@ -1727,1 +1727,1 @@\n-            <td>all rise points are within the open interval (0..1)<\/span><\/td>\n+            <td>all rise points are within the open interval (0..1)<\/td>\n@@ -1732,1 +1732,1 @@\n-                and ends with a rise point when the input progress value is 1<\/span><\/td>\n+                and ends with a rise point when the input progress value is 1<\/td>\n","filename":"modules\/javafx.graphics\/src\/main\/docs\/javafx\/scene\/doc-files\/cssref.html","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            new CssMetaData<S, Duration[]>( \"transition-duration\",\n+            new CssMetaData<S, Duration[]>(\"transition-duration\",\n@@ -101,1 +101,1 @@\n-            new CssMetaData<S, Duration[]>( \"transition-delay\",\n+            new CssMetaData<S, Duration[]>(\"transition-delay\",\n@@ -113,1 +113,1 @@\n-            new CssMetaData<S, Interpolator[]>( \"transition-timing-function\",\n+            new CssMetaData<S, Interpolator[]>(\"transition-timing-function\",\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/TransitionDefinitionCssMetaData.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,0 +44,3 @@\n+ *\n+ * @param <T> the value type\n+ * @param <P> the property type\n@@ -49,1 +52,0 @@\n-    private long startTime, endTime, delay, duration;\n@@ -51,1 +53,2 @@\n-    private long currentTime;\n+    private long startTime, endTime, delay, duration; \/\/ in nanoseconds\n+    private long currentTime; \/\/ in nanoseconds\n@@ -64,0 +67,4 @@\n+     *\n+     * @param timer the {@code TransitionTimer} that will be started\n+     * @param transition the {@code TransitionDefinition} used to initialize the {@code timer}\n+     * @return the {@code timer} instance if the timer was started, {@code null} otherwise\n@@ -70,2 +77,2 @@\n-        timer.delay = (long)(transition.delay().toMillis() * 1_000_000);\n-        timer.duration = (long)(transition.duration().toMillis() * 1_000_000);\n+        timer.delay = millisToNanos(transition.delay().toMillis());\n+        timer.duration = millisToNanos(transition.duration().toMillis());\n@@ -97,1 +104,1 @@\n-                    adjustReversingTimer(existingTimer, timer, transition, now);\n+                    adjustReversingTimer(existingTimer, timer, now);\n@@ -104,1 +111,1 @@\n-                timer.start();\n+                timer.startImpl();\n@@ -154,0 +161,3 @@\n+     * @param existingTimer the timer of the running transition\n+     * @param newTimer the timer of the new transition\n+     * @param now the current time, in nanoseconds\n@@ -156,2 +166,3 @@\n-    private static void adjustReversingTimer(TransitionTimer<?, ?> existingTimer, TransitionTimer<?, ?> newTimer,\n-                                             TransitionDefinition transition, long now) {\n+    private static void adjustReversingTimer(TransitionTimer<?, ?> existingTimer,\n+                                             TransitionTimer<?, ?> newTimer,\n+                                             long now) {\n@@ -167,2 +178,2 @@\n-            double adjustedDelay = transition.delay().toMillis() * newTimer.reversingShorteningFactor;\n-            newTimer.startTime = now + (long)(adjustedDelay * 1_000_000);\n+            double adjustedDelay = nanosToMillis(newTimer.delay) * newTimer.reversingShorteningFactor;\n+            newTimer.startTime = now + millisToNanos(adjustedDelay);\n@@ -171,2 +182,26 @@\n-        double adjustedDuration = transition.duration().toMillis() * newTimer.reversingShorteningFactor;\n-        newTimer.endTime = newTimer.startTime + (long)(adjustedDuration * 1_000_000);\n+        double adjustedDuration = nanosToMillis(newTimer.duration) * newTimer.reversingShorteningFactor;\n+        newTimer.endTime = newTimer.startTime + millisToNanos(adjustedDuration);\n+    }\n+\n+    \/**\n+     * Converts the specified duration in nanoseconds to fractional milliseconds.\n+     *\n+     * @param nanos the duration in nanoseconds\n+     * @return the duration in fractional milliseconds\n+     *\/\n+    private static double nanosToMillis(long nanos) {\n+        long millis = nanos \/ 1_000_000L;\n+        double frac = (double)(nanos - (millis * 1_000_000L)) \/ 1_000_000D;\n+        return (double)millis + frac;\n+    }\n+\n+    \/**\n+     * Converts the specified duration in fractional milliseconds to nanoseconds.\n+     *\n+     * @param millis the duration in fractional milliseconds\n+     * @return the duration in nanoseconds\n+     *\/\n+    private static long millisToNanos(double millis) {\n+        long wholeMillis = (long)millis;\n+        double frac = millis - (double)wholeMillis;\n+        return wholeMillis * 1_000_000L + (long)(frac * 1_000_000D);\n@@ -178,0 +213,3 @@\n+     *\n+     * @param timer the {@code TransitionTimer} that fires the event\n+     * @param eventType the event type\n@@ -182,1 +220,1 @@\n-            double elapsedTime;\n+            Duration elapsedTime;\n@@ -186,1 +224,1 @@\n-                elapsedTime = (double)Math.min(Math.max(-timer.delay, 0), timer.duration) \/ 1_000_000.0;\n+                elapsedTime = Duration.millis(nanosToMillis(Math.min(Math.max(-timer.delay, 0), timer.duration)));\n@@ -188,1 +226,1 @@\n-                elapsedTime = (double)Math.max(0, timer.currentTime - timer.startTime) \/ 1_000_000.0;\n+                elapsedTime = Duration.millis(nanosToMillis(Math.max(0, timer.currentTime - timer.startTime)));\n@@ -190,1 +228,1 @@\n-                elapsedTime = (double)timer.duration \/ 1_000_000.0;\n+                elapsedTime = Duration.millis(nanosToMillis(timer.duration));\n@@ -196,1 +234,1 @@\n-            node.fireEvent(new TransitionEvent(eventType, timer.getProperty(), Duration.millis(elapsedTime)));\n+            node.fireEvent(new TransitionEvent(eventType, timer.getProperty(), elapsedTime));\n@@ -205,0 +243,2 @@\n+     *\n+     * @return the styleable property\n@@ -241,1 +281,1 @@\n-     * Starts this timer, and adds it to the list of running transitions.\n+     * This method is unused, calling it will throw {@link UnsupportedOperationException}.\n@@ -245,3 +285,1 @@\n-        super.start();\n-        NodeHelper.addTransitionTimer((Node)property.getBean(), this);\n-        fireTransitionEvent(this, TransitionEvent.RUN);\n+        throw new UnsupportedOperationException();\n@@ -262,0 +300,2 @@\n+     *\n+     * @param eventType the event type that is fired after the timer is stopped\n@@ -279,0 +319,9 @@\n+    \/**\n+     * Starts this timer, and adds it to the list of running transitions.\n+     *\/\n+    private void startImpl() {\n+        super.start();\n+        NodeHelper.addTransitionTimer((Node)property.getBean(), this);\n+        fireTransitionEvent(this, TransitionEvent.RUN);\n+    }\n+\n@@ -301,0 +350,2 @@\n+     *\n+     * @return {@code true} if the timer is currently updating the property, {@code false} otherwise\n@@ -309,1 +360,3 @@\n-     * Gets the progress of this timer along the input progress axis, ranging from 0 to 1.\n+     * Gets the progress of this timer along the input progress axis.\n+     *\n+     * @return the input progress, ranging from 0 to 1\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/TransitionTimer.java","additions":75,"deletions":22,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class StepInterpolator extends Interpolator {\n+public final class StepInterpolator extends Interpolator {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/animation\/StepInterpolator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -678,1 +678,1 @@\n-                ParseException re = new ParseException(\"Expected \\'<duration>\\'\",token, this);\n+                ParseException re = new ParseException(\"Expected \\'<duration>\\'\", token, this);\n@@ -1015,7 +1015,0 @@\n-        } else {\n-            String key = root.token.getText();\n-            return switch (key) {\n-                case \"initial\", \"inherit\" -> new ParsedValueImpl<>(new Size(0, SizeUnits.S), null);\n-                case \"indefinite\" -> new ParsedValueImpl<>(new Size(Double.POSITIVE_INFINITY, SizeUnits.S), null);\n-                default -> new ParsedValueImpl<>(key, null, true);\n-            };\n@@ -1023,0 +1016,7 @@\n+\n+        String key = root.token.getText();\n+        return switch (key) {\n+            case \"initial\", \"inherit\" -> new ParsedValueImpl<>(new Size(0, SizeUnits.S), null);\n+            case \"indefinite\" -> new ParsedValueImpl<>(new Size(Double.POSITIVE_INFINITY, SizeUnits.S), null);\n+            default -> new ParsedValueImpl<>(key, null, true);\n+        };\n@@ -3949,1 +3949,1 @@\n-            throws ParseException{\n+            throws ParseException {\n@@ -3958,1 +3958,3 @@\n-            } else if (isEasingFunction(term.token)) {\n+            }\n+\n+            if (isEasingFunction(term.token)) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Objects;\n@@ -43,1 +44,1 @@\n-    private static final long serialVersionUID = 20220820L;\n+    private static final long serialVersionUID = 1L;\n@@ -89,0 +90,1 @@\n+     * @throws NullPointerException if {@code property} or {@code elapsedTime} is {@code null}\n@@ -94,2 +96,2 @@\n-        this.property = property;\n-        this.elapsedTime = elapsedTime;\n+        this.property = Objects.requireNonNull(property, \"property cannot be null\");\n+        this.elapsedTime = Objects.requireNonNull(elapsedTime, \"elapsedTime cannot be null\");\n@@ -111,1 +113,1 @@\n-     * @return the elapsed time\n+     * @return the elapsed time, or zero if the transition has not entered its active period\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/TransitionEvent.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -8937,0 +8937,2 @@\n+     *\n+     * @param timer the transition timer\n@@ -8950,0 +8952,2 @@\n+     *\n+     * @param timer the transition timer\n@@ -8960,1 +8964,3 @@\n-     * @return the transition timer, or {@code null}\n+     * @param property the targeted property\n+     * @return the transition timer, or {@code null} if the property is not\n+     *         targeted by a transition timer\n@@ -9014,0 +9020,4 @@\n+         *\n+         * @param metadata the CSS metadata of the property\n+         * @return the {@code TransitionDefinition} specified for the property referenced by the\n+         *         CSS metadata, {@code null} otherwise\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.javafx.animation.InterpolatorHelper;\n@@ -123,2 +124,3 @@\n-    private static class StepInterpolatorMock extends StepInterpolator {\n-        double stepSize;\n+    private static class StepInterpolatorMock {\n+        final double stepSize;\n+        final StepInterpolator interpolator;\n@@ -127,1 +129,1 @@\n-            super(intervals, position);\n+            this.interpolator = new StepInterpolator(intervals, position);\n@@ -131,3 +133,2 @@\n-        @Override\n-        public double curve(double t) {\n-            return super.curve(t);\n+        double curve(double t) {\n+            return InterpolatorHelper.curve(interpolator, t);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/scenario\/animation\/StepInterpolatorTest.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}