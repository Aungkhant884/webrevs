{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import javafx.css.StyleableProperty;\n@@ -34,3 +33,3 @@\n- * {@code TransitionDefinition} describes how a {@link StyleableProperty} changes from one value to\n- * another when its value is changed implicitly by the CSS subsystem. The transition can be smooth,\n- * for example using linear or Bézier interpolation, or discrete using stepwise interpolation.\n+ * {@code TransitionDefinition} describes how a {@link javafx.css.StyleableProperty} changes from one\n+ * value to another when its value is changed implicitly by the CSS subsystem. The transition can be\n+ * smooth, for example using linear or Bézier interpolation, or discrete using stepwise interpolation.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/TransitionDefinition.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -72,13 +72,5 @@\n-        String propertyName;\n-        if (parsedProperty != null) {\n-            propertyName = parsedProperty.convert(null);\n-        } else {\n-            propertyName = \"all\";\n-        }\n-\n-        Duration duration;\n-        if (parsedDuration != null) {\n-            duration = parsedDuration.convert(null);\n-        } else {\n-            duration = Duration.ZERO;\n-        }\n+        String propertyName = parsedProperty != null ? parsedProperty.convert(null) : \"all\";\n+        Duration duration = parsedDuration != null ? parsedDuration.convert(null) : Duration.ZERO;\n+        Duration delay = parsedDelay != null ? parsedDelay.convert(null) : Duration.ZERO;\n+        Interpolator interpolator = parsedInterpolator != null ?\n+            parsedInterpolator.convert(null) : InterpolatorConverter.CSS_EASE;\n@@ -87,4 +79,1 @@\n-            propertyName.intern(),\n-            duration.lessThan(Duration.ZERO) ? Duration.ZERO : duration,\n-            parsedDelay != null ? parsedDelay.convert(null) : Duration.ZERO,\n-            parsedInterpolator != null ? parsedInterpolator.convert(null) : InterpolatorConverter.CSS_EASE);\n+            propertyName.intern(), duration.lessThan(Duration.ZERO) ? Duration.ZERO : duration, delay, interpolator);\n@@ -98,1 +87,4 @@\n-        private static final TransitionDefinition[] EMPTY = new TransitionDefinition[0];\n+        private static final TransitionDefinition[] EMPTY_TRANSITION = new TransitionDefinition[0];\n+        private static final String[] EMPTY_STRING = new String[0];\n+        private static final Duration[] EMPTY_DURATION = new Duration[0];\n+        private static final Interpolator[] EMPTY_INTERPOLATOR = new Interpolator[0];\n@@ -108,4 +100,4 @@\n-            String[] properties = null;\n-            Duration[] durations = null;\n-            Duration[] delays = null;\n-            Interpolator[] timingFunctions = null;\n+            String[] properties = EMPTY_STRING;\n+            Duration[] durations = EMPTY_DURATION;\n+            Duration[] delays = EMPTY_DURATION;\n+            Interpolator[] timingFunctions = EMPTY_INTERPOLATOR;\n@@ -122,2 +114,2 @@\n-            if (properties == null || properties.length == 0 || durations == null || durations.length == 0) {\n-                return EMPTY;\n+            if (properties.length == 0 || durations.length == 0) {\n+                return EMPTY_TRANSITION;\n@@ -132,15 +124,2 @@\n-                Interpolator timingFunction;\n-                Duration delay;\n-\n-                if (delays == null || delays.length == 0) {\n-                    delay = Duration.ZERO;\n-                } else {\n-                    delay = delays[i % delays.length];\n-                }\n-\n-                if (timingFunctions == null || timingFunctions.length == 0) {\n-                    timingFunction = InterpolatorConverter.CSS_EASE;\n-                } else {\n-                    timingFunction = timingFunctions[i % timingFunctions.length];\n-                }\n-\n+                Interpolator timingFunction = timingFunctions.length == 0 ?\n+                    InterpolatorConverter.CSS_EASE : timingFunctions[i % timingFunctions.length];\n@@ -148,0 +127,1 @@\n+                Duration delay = delays.length == 0 ? Duration.ZERO : delays[i % delays.length];\n@@ -160,1 +140,1 @@\n-                return EMPTY;\n+                return EMPTY_TRANSITION;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/TransitionDefinitionConverter.java","additions":20,"deletions":40,"binary":false,"changes":60,"status":"modified"}]}