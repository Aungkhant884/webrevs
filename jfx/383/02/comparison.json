{"files":[{"patch":"@@ -36,2 +36,2 @@\n-import javafx.geometry.HPos;\n-import javafx.geometry.Point2D;\n+import javafx.geometry.Bounds;\n+import javafx.geometry.NodeOrientation;\n@@ -39,1 +39,0 @@\n-import javafx.geometry.VPos;\n@@ -44,1 +43,0 @@\n-import com.sun.javafx.util.Utils;\n@@ -47,2 +45,0 @@\n-import javafx.beans.property.BooleanProperty;\n-import javafx.beans.property.SimpleBooleanProperty;\n@@ -229,1 +225,1 @@\n-     * specified by the {@code hpos} and {@code vpos} parameters, and offset\n+     * specified by the {@code side} parameter, and offset\n@@ -234,7 +230,4 @@\n-     * To clarify the purpose of the {@code hpos} and {@code vpos} parameters,\n-     * consider that they are relative to the anchor node. As such, a {@code hpos}\n-     * and {@code vpos} of {@code CENTER} would mean that the ContextMenu appears\n-     * on top of the anchor, with the (0,0) position of the {@code ContextMenu}\n-     * positioned at (0,0) of the anchor. A {@code hpos} of right would then shift\n-     * the {@code ContextMenu} such that its top-left (0,0) position would be attached\n-     * to the top-right position of the anchor.\n+     * To clarify the purpose of the {@code side} parameter,\n+     * consider that it is relative to the anchor node.\n+     * As such, a {@code side} of {@code TOP} would mean that the ContextMenu's bottom left corner\n+     * is set to the top left corner of the anchor.\n@@ -249,1 +242,0 @@\n-    \/\/ TODO provide more detail\n@@ -255,11 +247,5 @@\n-        \/\/ FIXME because Side is not yet in javafx.geometry, we have to convert\n-        \/\/ to the old HPos\/VPos API here, as Utils can not refer to Side in the\n-        \/\/ charting API.\n-        HPos hpos = side == Side.LEFT ? HPos.LEFT : side == Side.RIGHT ? HPos.RIGHT : HPos.CENTER;\n-        VPos vpos = side == Side.TOP ? VPos.TOP : side == Side.BOTTOM ? VPos.BOTTOM : VPos.CENTER;\n-\n-        \/\/ translate from anchor\/hpos\/vpos\/dx\/dy into screenX\/screenY\n-        Point2D point = Utils.pointRelativeTo(anchor,\n-                prefWidth(-1), prefHeight(-1),\n-                hpos, vpos, dx, dy, true);\n-        doShow(anchor, point.getX(), point.getY());\n+        setAnchorLocation(getAnchorLocation(side, anchor.getEffectiveNodeOrientation()));\n+        Bounds anchorBounds = anchor.localToScreen(anchor.getLayoutBounds());\n+        double x = getXBySide(anchorBounds, side, anchor.getEffectiveNodeOrientation()) + dx;\n+        double y = getYBySide(anchorBounds, side) + dy;\n+        doShow(anchor, x, y);\n@@ -268,1 +254,44 @@\n-     \/**\n+     private AnchorLocation getAnchorLocation(Side side, NodeOrientation orientation) {\n+         if (orientation == NodeOrientation.RIGHT_TO_LEFT) {\n+             switch (side) {\n+                 case TOP: return AnchorLocation.CONTENT_BOTTOM_RIGHT;\n+                 case RIGHT: return AnchorLocation.CONTENT_TOP_RIGHT;\n+                 case BOTTOM: return AnchorLocation.CONTENT_TOP_RIGHT;\n+                 case LEFT: return AnchorLocation.CONTENT_TOP_LEFT;\n+             }\n+         } else {\n+             switch (side) {\n+                 case TOP: return AnchorLocation.CONTENT_BOTTOM_LEFT;\n+                 case RIGHT: return AnchorLocation.CONTENT_TOP_LEFT;\n+                 case BOTTOM: return AnchorLocation.CONTENT_TOP_LEFT;\n+                 case LEFT: return AnchorLocation.CONTENT_TOP_RIGHT;\n+             }\n+         }\n+        return AnchorLocation.CONTENT_TOP_LEFT; \/\/ never reached\n+     }\n+\n+     private double getXBySide(Bounds anchorBounds, Side side, NodeOrientation orientation) {\n+         if (orientation == NodeOrientation.RIGHT_TO_LEFT) {\n+             if (side == Side.RIGHT) {\n+                 return anchorBounds.getMinX();\n+             } else {\n+                 return anchorBounds.getMaxX();\n+             }\n+         } else {\n+             if (side == Side.RIGHT) {\n+                 return anchorBounds.getMaxX();\n+             } else {\n+                 return anchorBounds.getMinX();\n+             }\n+         }\n+     }\n+\n+     private double getYBySide(Bounds anchorBounds, Side side) {\n+         if (side == Side.BOTTOM) {\n+             return anchorBounds.getMaxY();\n+         } else {\n+             return anchorBounds.getMinY();\n+         }\n+     }\n+\n+    \/**\n@@ -283,0 +312,1 @@\n+        setAnchorLocation(AnchorLocation.CONTENT_TOP_LEFT);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ContextMenu.java","additions":57,"deletions":27,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -33,1 +33,2 @@\n-\n+import javafx.geometry.Bounds;\n+import javafx.geometry.NodeOrientation;\n@@ -47,0 +48,4 @@\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n@@ -639,0 +644,117 @@\n+\n+    @Test public void test_position_showOnScreen() {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, 100, 100);\n+\n+        assertEquals(100, cm.getAnchorX(), 0.0);\n+        assertEquals(100, cm.getAnchorY(), 0.0);\n+    }\n+\n+    @Test public void test_position_showOnTop() throws InterruptedException {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, Side.TOP, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMinX(), cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMaxY(), 0.0);\n+    }\n+\n+    @Test public void test_position_showOnTopOffset() throws InterruptedException {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, Side.TOP, 3, 5);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMinX() + 3, cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMinY() + 5, cmBounds.getMaxY(), 0.0);\n+    }\n+\n+    @Test public void test_position_withOrientationTop() throws InterruptedException {\n+        ContextMenu cm = createContextMenu(false);\n+        anchorBtn.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+        cm.show(anchorBtn, Side.TOP, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMaxX(), cmBounds.getMaxX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMaxY(), 0.0);\n+    }\n+\n+    @Test public void test_position_withOrientationLeft() throws InterruptedException {\n+        ContextMenu cm = createContextMenu(false);\n+        anchorBtn.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+        cm.show(anchorBtn, Side.LEFT, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMaxX(), cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMinY(), 0.0);\n+    }\n+\n+\n+    @Test public void test_position_withCSS() throws InterruptedException {\n+        anchorBtn.getScene().getStylesheets().add(\n+            getClass().getResource(\"test_position_showOnTopWithCSS.css\").toExternalForm()\n+        );\n+        test_position_showOnTop();\n+        test_position_showOnRight();\n+        test_position_showOnLeft();\n+        test_position_showOnBottom();\n+    }\n+\n+    @Test public void test_position_showOnRight() {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, Side.RIGHT, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMaxX(), cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMinY(), 0.0);\n+    }\n+\n+    @Test public void test_position_showOnRightOffset() {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, Side.RIGHT, 3, 5);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMaxX() + 3, cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMinY() + 5, cmBounds.getMinY(), 0.0);\n+    }\n+\n+    @Test public void test_position_showOnBottom() {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, Side.BOTTOM, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMinX(), cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMaxY(), cmBounds.getMinY(), 0.0);\n+    }\n+\n+    @Test public void test_position_showOnLeft() {\n+        ContextMenu cm = createContextMenu(false);\n+        cm.show(anchorBtn, Side.LEFT, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMinX(), cmBounds.getMaxX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMinY(), 0.0);\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ContextMenuTest.java","additions":123,"deletions":1,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+.menu-item { -fx-padding: 10px;}\n","filename":"modules\/javafx.controls\/src\/test\/resources\/test\/javafx\/scene\/control\/test_position_showOnTopWithCSS.css","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"}]}