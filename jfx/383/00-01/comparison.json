{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import javafx.geometry.NodeOrientation;\n@@ -229,0 +230,9 @@\n+     * To clarify the purpose of the {@code side} parameter,\n+     * consider that it is relative to the anchor node and depending on the effective node orientation.\n+     * As such, a {@code side} of {@code TOP} would mean that the ContextMenu's bottom left corner\n+     * is set to the top left corner of the anchor if NodeOrientation.LEFT_TO_RIGHT is set\n+     * and the ContextMenu's bottom right corner is set to the top right corner of the anchor if\n+     * NodeOrientation.RIGHT_TO_LEFT is set.\n+     * Using NodeOrientation.RIGHT_TO_LEFT will also \"mirror\" the meaning of Side.LEFT and\n+     * Side.RIGHT respectively.\n+     * <p>\n@@ -241,0 +251,1 @@\n+        setAnchorLocation(getAnchorLocation(side, anchor.getEffectiveNodeOrientation()));\n@@ -242,18 +253,3 @@\n-        switch (side) {\n-            case TOP:\n-                setAnchorLocation(AnchorLocation.CONTENT_BOTTOM_LEFT);\n-                doShow(anchor, anchorBounds.getMinX() + dx, anchorBounds.getMinY() + dy);\n-                break;\n-            case RIGHT:\n-                setAnchorLocation(AnchorLocation.CONTENT_TOP_LEFT);\n-                doShow(anchor, anchorBounds.getMaxX() + dx, anchorBounds.getMinY() + dy);\n-                break;\n-            case BOTTOM:\n-                setAnchorLocation(AnchorLocation.CONTENT_TOP_LEFT);\n-                doShow(anchor, anchorBounds.getMinX() + dx, anchorBounds.getMaxY() + dy);\n-                break;\n-            case LEFT:\n-                setAnchorLocation(AnchorLocation.CONTENT_TOP_RIGHT);\n-                doShow(anchor, anchorBounds.getMinX() + dx, anchorBounds.getMinY() + dy);\n-                break;\n-        }\n+        double x = getXBySide(anchorBounds, side, anchor.getEffectiveNodeOrientation()) + dx;\n+        double y = getYBySide(anchorBounds, side) + dy;\n+        doShow(anchor, x, y);\n@@ -262,0 +258,45 @@\n+     private AnchorLocation getAnchorLocation(Side side, NodeOrientation orientation) {\n+         if (orientation == NodeOrientation.RIGHT_TO_LEFT) {\n+             switch (side) {\n+                 case TOP: return AnchorLocation.CONTENT_BOTTOM_RIGHT;\n+                 case RIGHT: return AnchorLocation.CONTENT_TOP_RIGHT;\n+                 case BOTTOM: return AnchorLocation.CONTENT_TOP_RIGHT;\n+                 case LEFT: return AnchorLocation.CONTENT_TOP_LEFT;\n+             }\n+         } else {\n+             switch (side) {\n+                 case TOP: return AnchorLocation.CONTENT_BOTTOM_LEFT;\n+                 case RIGHT: return AnchorLocation.CONTENT_TOP_LEFT;\n+                 case BOTTOM: return AnchorLocation.CONTENT_TOP_LEFT;\n+                 case LEFT: return AnchorLocation.CONTENT_TOP_RIGHT;\n+             }\n+         }\n+        return AnchorLocation.CONTENT_TOP_LEFT; \/\/ never reached\n+     }\n+\n+     private double getXBySide(Bounds anchorBounds, Side side, NodeOrientation orientation) {\n+         if (orientation == NodeOrientation.RIGHT_TO_LEFT) {\n+             if (side == Side.RIGHT) {\n+                 return anchorBounds.getMinX();\n+             } else {\n+                 return anchorBounds.getMaxX();\n+             }\n+         } else {\n+             if (side == Side.RIGHT) {\n+                 return anchorBounds.getMaxX();\n+             } else {\n+                 return anchorBounds.getMinX();\n+             }\n+         }\n+     }\n+\n+     private double getYBySide(Bounds anchorBounds, Side side) {\n+         if (side == Side.BOTTOM) {\n+             return anchorBounds.getMaxY();\n+         } else {\n+             return anchorBounds.getMinY();\n+         }\n+     }\n+\n+\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ContextMenu.java","additions":59,"deletions":18,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import javafx.geometry.NodeOrientation;\n@@ -646,1 +647,1 @@\n-        cm.show(anchorBtn,100, 100);\n+        cm.show(anchorBtn, 100, 100);\n@@ -648,2 +649,2 @@\n-        assertEquals(cm.getAnchorX(), 100, 0.0);\n-        assertEquals(cm.getAnchorY(), 100, 0.0);\n+        assertEquals(100, cm.getAnchorX(), 0.0);\n+        assertEquals(100, cm.getAnchorY(), 0.0);\n@@ -676,0 +677,27 @@\n+    @Test public void test_position_withOrientationTop() throws InterruptedException {\n+        ContextMenu cm = createContextMenu(false);\n+        anchorBtn.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+        cm.show(anchorBtn, Side.TOP, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMaxX(), cmBounds.getMaxX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMaxY(), 0.0);\n+    }\n+\n+    @Test public void test_position_withOrientationLeft() throws InterruptedException {\n+        ContextMenu cm = createContextMenu(false);\n+        anchorBtn.setNodeOrientation(NodeOrientation.RIGHT_TO_LEFT);\n+        cm.show(anchorBtn, Side.LEFT, 0, 0);\n+\n+        Bounds anchorBounds = anchorBtn.localToScreen(anchorBtn.getLayoutBounds());\n+        Node cmNode = cm.getScene().getRoot();\n+        Bounds cmBounds = cm.getScene().getRoot().localToScreen(cmNode.getLayoutBounds());\n+\n+        assertEquals(anchorBounds.getMaxX(), cmBounds.getMinX(), 0.0);\n+        assertEquals(anchorBounds.getMinY(), cmBounds.getMinY(), 0.0);\n+    }\n+\n+\n@@ -677,1 +705,3 @@\n-        anchorBtn.getScene().getStylesheets().add(createStylesheet());\n+        anchorBtn.getScene().getStylesheets().add(\n+            getClass().getResource(\"test_position_showOnTopWithCSS.css\").toExternalForm()\n+        );\n@@ -684,14 +714,0 @@\n-    private String createStylesheet() {\n-        try {\n-            File f = File.createTempFile(\"test_position_showOnTopWithCSS\", \".css\");\n-            f.deleteOnExit();\n-            FileWriter fw=new FileWriter(f);\n-            fw.write(\".menu-item { -fx-padding: 10px;}\\n\");\n-            fw.close();\n-            return f.toURI().toString();\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ContextMenuTest.java","additions":34,"deletions":18,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+.menu-item { -fx-padding: 10px;}\n","filename":"modules\/javafx.controls\/src\/test\/resources\/test\/javafx\/scene\/control\/test_position_showOnTopWithCSS.css","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"}]}