{"files":[{"patch":"@@ -1,72 +0,0 @@\n-param (\n-[switch]$nocygwin = $false,\n-[parameter(ValueFromRemainingArguments)][String[]]$args\n-)\n-\n-choco install ant\n-choco install vswhere\n-choco install zip\n-\n-$vsRoot = \"$(vswhere -latest -requires Microsoft.VisualStudio.Workload.NativeDesktop -property installationPath)\"\n-if ([string]::IsNullOrWhitespace($vsRoot)) {\n-  $vs = \"$(vswhere -latest -property installationPath)\"\n-  if ([string]::IsNullOrWhitespace($vs)) {\n-    choco install visualstudio2017community\n-    choco install visualstudio2017-workload-nativedesktop\n-  }\n-  else {\n-    choco install visualstudio2017-workload-nativedesktop\n-  }\n-  $vsRoot = \"$(vswhere -latest -requires Microsoft.VisualStudio.Workload.NativeDesktop -property installationPath)\"\n-}\n-\n-$winSdk = (Get-ItemProperty -Path \"HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows Kits\\Installed Roots\").KitsRoot10 2>$null\n-if ([string]::IsNullOrWhitespace($winSdk)) {\n-  choco install windows-sdk-7.1\n-  $winSdk = ((Get-ItemProperty -Path \"HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows Kits\\Installed Roots\" -ErrorAction Stop).KitsRoot10)\n-}\n-\n-# Cygwin required for chmod\n-if ($nocygwin -eq $false) {\n-  $cygwinPath = (Get-ItemProperty -Path \"HKLM:\\SOFTWARE\\Cygwin\\setup\").rootdir 2>$null\n-  if ([string]::IsNullOrWhitespace($cygwinPath)) {\n-    choco install cygwin\n-    $cygwinPath = (Get-ItemProperty -Path \"HKLM:\\SOFTWARE\\Cygwin\\setup\"  -ErrorAction Stop).rootdir\n-  }\n-} else {\n-  Write-Output \"Skipping cygwin install!\"\n-}\n-\n-if ($env:Path -NotLike \"*$($cygwinPath)*\") {\n-  $env:Path += \";$($cygwinPath)\\bin\"\n-}\n-$env:WINSDK_DIR = $winSdk\n-$env:VCINSTALLDIR = \"$($vsRoot)\\VC\\Auxiliary\\Build\"\n-\n-$msvcToolsVer = Get-Content \"$env:VCINSTALLDIR\\Microsoft.VCToolsVersion.default.txt\"\n-$msvcRedistVer = Get-Content \"$env:VCINSTALLDIR\\Microsoft.VCRedistVersion.default.txt\"\n-if ([string]::IsNullOrWhitespace($msvcToolsVer)) {\n-  # The MSVC tools version file can have txt *or* props extension.\n-  $msvcToolsVer = Get-Content \"$env:VCINSTALLDIR\\Microsoft.VCToolsVersion.default.props\"\n-}\n-$env:MSVC_VER = $msvcToolsVer\n-$env:MSVC_REDIST_VER = $msvcRedistVer\n-\n-$files = Get-ChildItem \"$($vsRoot)\\VC\\Redist\\MSVC\\$($msvcRedistVer)\\x86\\*.CRT\\\"\n-$env:WINDOWS_CRT_VER = $files[0].Name.replace(\"Microsoft.VC\",\"\").replace(\".CRT\",\"\")\n-\n-$env:VS150COMNTOOLS = $env:VCINSTALLDIR\n-$env:VSVARS32FILE = \"$env:VCINSTALLDIR\\vcvars32.bat\"\n-refreshenv\n-if ($env:APPVEYOR -eq \"true\") {\n-  .\\gradlew all test -PCOMPILE_WEBKIT=false -PCONF=DebugNative --stacktrace -x :web:test --info --no-daemon\n-  if ($lastexitcode -ne 0) {\n-    exit $lastexitcode\n-  }\n-} else {\n-  if ($noCygwin) {\n-    .\\gradlew all test -PCOMPILE_WEBKIT=false -PCONF=Debug -PUSE_CYGWIN=false --stacktrace -x :web:test --info --no-daemon $args\n-  } else {\n-    .\\gradlew all test -PCOMPILE_WEBKIT=false -PCONF=Debug --stacktrace -x :web:test --info --no-daemon $args\n-  }\n-}\n","filename":"tools\/scripts\/build.ps1","additions":0,"deletions":72,"binary":false,"changes":72,"status":"deleted"}]}