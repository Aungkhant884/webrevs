{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import org.junit.Ignore;\n@@ -101,5 +102,0 @@\n-     * Note that using non-atomic swap operations on 'selectedIndices' doesn't work for\n-     * SelectedItemsReadOnlyObservableList, since it results in intermediate states where\n-     * 'selectedIndices' contains duplicates. This results in incorrect change notifications,\n-     * which can be seen in this test:\n-     *\n@@ -107,4 +103,1 @@\n-     * { [foo] replaced by [bar] at 0 }, but should be: [foo, bar] replaced by [bar, foo]\n-     *\n-     * This test is a documentation of that fact, and it will start to fail if replaceAll\n-     * is implemented as an atomic operation.\n+     * { [foo, bar] replaced by [bar, foo] at 0 }\n@@ -113,0 +106,1 @@\n+    @Ignore(\"see JDK-8267951\")\n@@ -118,1 +112,1 @@\n-        assertEquals(change(replaced(0, range(\"foo\"), range(\"bar\"))), changes.get(0));\n+        assertEquals(change(replaced(0, range(\"foo\", \"bar\"), range(\"bar\", \"foo\"))), changes.get(0));\n@@ -122,5 +116,0 @@\n-     * Note that using non-atomic swap operations on 'selectedIndices' doesn't work for\n-     * SelectedItemsReadOnlyObservableList, since it results in intermediate states where\n-     * 'selectedIndices' contains duplicates. This results in incorrect change notifications,\n-     * which can be seen in this test:\n-     *\n@@ -128,5 +117,2 @@\n-     * { [foo] replaced by [bar] at 0 }, but should be [foo, bar] replaced by [bar, foo]\n-     * { [qux] replaced by [quz] at 3 }, but should be [qux, quz] replaced by [quz, qux]\n-     *\n-     * This test is a documentation of that fact, and it will start to fail if replaceAll\n-     * is implemented as an atomic operation.\n+     * { [foo, bar] replaced by [bar, foo] at 0 }\n+     * { [qux, quz] replaced by [quz, qux] at 3 }\n@@ -135,0 +121,1 @@\n+    @Ignore(\"see JDK-8267951\")\n@@ -149,2 +136,2 @@\n-        assertEquals(change(replaced(0, range(\"foo\"), range(\"bar\"))), changes.get(0));\n-        assertEquals(change(replaced(3, range(\"qux\"), range(\"quz\"))), changes.get(1));\n+        assertEquals(change(replaced(0, range(\"foo\", \"bar\"), range(\"bar\", \"foo\"))), changes.get(0));\n+        assertEquals(change(replaced(3, range(\"qux\", \"quz\"), range(\"quz\", \"qux\"))), changes.get(1));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/control\/SelectedItemsReadOnlyObservableListTest.java","additions":9,"deletions":22,"binary":false,"changes":31,"status":"modified"}]}