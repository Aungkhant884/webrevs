{"files":[{"patch":"@@ -270,0 +270,2 @@\n+        if (getSkinnable() == null) return;\n+\n@@ -274,0 +276,10 @@\n+        getSkinnable().getTabs().removeListener(weakTabsListener);\n+        tabHeaderArea.dispose();\n+\n+        \/\/ Control and Skin share the list of children, so children that are\n+        \/\/ added by Skin are actually added to control's list of children,\n+        \/\/ so a skin should remove the children that it adds.\n+        getChildren().remove(tabHeaderArea);\n+        for (Tab tab : getSkinnable().getTabs()) {\n+            removeTabContent(tab);\n+        }\n@@ -502,1 +514,1 @@\n-                tabRegion.removeListeners(tab);\n+                tabRegion.dispose();\n@@ -582,0 +594,2 @@\n+    ListChangeListener<Tab> tabsListener;\n+    WeakListChangeListener<Tab> weakTabsListener;\n@@ -583,1 +597,1 @@\n-        getSkinnable().getTabs().addListener((ListChangeListener<Tab>) c -> {\n+        tabsListener = c -> {\n@@ -662,1 +676,3 @@\n-        });\n+        };\n+        weakTabsListener = new WeakListChangeListener<>(tabsListener);\n+        getSkinnable().getTabs().addListener(weakTabsListener);\n@@ -676,3 +692,1 @@\n-                contentRegion.removeListeners(tab);\n-                getChildren().remove(contentRegion);\n-                tabContentRegions.remove(contentRegion);\n+                removeTabContent(contentRegion);\n@@ -684,0 +698,6 @@\n+    private void removeTabContent(TabContentRegion contentRegion) {\n+        contentRegion.dispose();\n+        tabContentRegions.remove(contentRegion);\n+        getChildren().remove(contentRegion);\n+    }\n+\n@@ -1211,0 +1231,8 @@\n+\n+        void dispose() {\n+            for (Node child : headersRegion.getChildren()) {\n+                TabHeaderSkin header = (TabHeaderSkin) child;\n+                header.dispose();\n+            }\n+            controlButtons.dispose();\n+        }\n@@ -1498,1 +1526,1 @@\n-                                removeListeners(tab);\n+                                dispose();\n@@ -1544,1 +1572,2 @@\n-        private void removeListeners(Tab tab) {\n+        private void dispose() {\n+            tab.getStyleClass().removeListener(weakStyleClassListener);\n@@ -1546,2 +1575,0 @@\n-            inner.getChildren().clear();\n-            getChildren().clear();\n@@ -1696,1 +1723,1 @@\n-        private void removeListeners(Tab tab) {\n+        public void dispose() {\n@@ -1788,5 +1815,2 @@\n-            tabPane.sideProperty().addListener(valueModel -> {\n-                Side tabPosition = getSkinnable().getSide();\n-                downArrow.setRotate(tabPosition.equals(Side.BOTTOM)? 180.0F : 0.0F);\n-            });\n-            tabPane.getTabs().addListener((ListChangeListener<Tab>) c -> setupPopupMenu());\n+            tabPane.sideProperty().addListener(weakSidePropListener);\n+            tabPane.getTabs().addListener(weakTabsListenerForPopup);\n@@ -1801,0 +1825,15 @@\n+        InvalidationListener sidePropListener =  e -> {\n+            Side tabPosition = getSkinnable().getSide();\n+            downArrow.setRotate(tabPosition.equals(Side.BOTTOM)? 180.0F : 0.0F);\n+        };\n+        ListChangeListener<Tab> tabsListenerForPopup = e -> setupPopupMenu();\n+        WeakInvalidationListener weakSidePropListener =\n+                new WeakInvalidationListener(sidePropListener);\n+        WeakListChangeListener weakTabsListenerForPopup =\n+                new WeakListChangeListener<>(tabsListenerForPopup);\n+\n+        void dispose() {\n+            getSkinnable().sideProperty().removeListener(weakSidePropListener);\n+            getSkinnable().getTabs().removeListener(weakTabsListenerForPopup);\n+        }\n+\n@@ -2061,5 +2100,1 @@\n-        getSkinnable().tabDragPolicyProperty().addListener((observable, oldValue, newValue) -> {\n-            if (oldValue != newValue) {\n-                updateListeners();\n-            }\n-        });\n+        registerChangeListener(getSkinnable().tabDragPolicyProperty(), inv -> updateListeners());\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TabPaneSkin.java","additions":56,"deletions":21,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -1216,1 +1216,0 @@\n-    @Ignore(\"JDK-8242621\")\n@@ -1219,1 +1218,0 @@\n-        \/\/ Because of JDK-8242621, this test fails with NPE.\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TabPaneTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import javafx.scene.control.skin.TabPaneSkin;\n@@ -45,0 +46,2 @@\n+import javafx.scene.control.Tab;\n+import javafx.scene.control.TabPane;\n@@ -260,0 +263,57 @@\n+\/\/-------- TabPane\n+    @Test\n+    public void testChildrenCountAfterSkinIsReplaced() {\n+        TabPane tabPane = new TabPane();\n+        tabPane.getTabs().addAll(new Tab(\"0\"), new Tab(\"1\"));\n+        installDefaultSkin(tabPane);\n+        int childrenCount = tabPane.getChildrenUnmodifiable().size();\n+        replaceSkin(tabPane);\n+        assertEquals(childrenCount, tabPane.getChildrenUnmodifiable().size());\n+    }\n+\n+    @Test\n+    public void testChildrenCountAfterSkinIsRemoved() {\n+        TabPane tabPane = new TabPane();\n+        assertEquals(0, tabPane.getChildrenUnmodifiable().size());\n+        tabPane.getTabs().addAll(new Tab(\"0\"), new Tab(\"1\"));\n+        installDefaultSkin(tabPane);\n+        assertEquals(3, tabPane.getChildrenUnmodifiable().size());\n+        tabPane.setSkin(null);\n+        assertNull(tabPane.getSkin());\n+        assertEquals(0, tabPane.getChildrenUnmodifiable().size());\n+    }\n+\n+    @Test\n+    public void testNPEWhenTabsAddedAfterSkinIsReplaced() {\n+        TabPane tabPane = new TabPane();\n+        tabPane.getTabs().addAll(new Tab(\"0\"), new Tab(\"1\"));\n+        installDefaultSkin(tabPane);\n+        replaceSkin(tabPane);\n+        tabPane.getTabs().addAll(new Tab(\"2\"), new Tab(\"3\"));\n+    }\n+\n+    @Test\n+    public void testNPEWhenTabRemovedAfterSkinIsReplaced() {\n+        TabPane tabPane = new TabPane();\n+        tabPane.getTabs().addAll(new Tab(\"0\"), new Tab(\"1\"));\n+        installDefaultSkin(tabPane);\n+        replaceSkin(tabPane);\n+        tabPane.getTabs().remove(0);\n+    }\n+\n+    @Test\n+    public void testAddRemoveTabsAfterSkinIsReplaced() {\n+        TabPane tabPane = new TabPane();\n+        tabPane.getTabs().addAll(new Tab(\"0\"), new Tab(\"1\"));\n+        installDefaultSkin(tabPane);\n+        assertEquals(2, tabPane.getTabs().size());\n+        assertEquals(3, tabPane.getChildrenUnmodifiable().size());\n+        replaceSkin(tabPane);\n+        tabPane.getTabs().addAll(new Tab(\"2\"), new Tab(\"3\"));\n+        assertEquals(4, tabPane.getTabs().size());\n+        assertEquals(5, tabPane.getChildrenUnmodifiable().size());\n+        tabPane.getTabs().clear();\n+        assertEquals(0, tabPane.getTabs().size());\n+        assertEquals(1, tabPane.getChildrenUnmodifiable().size());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinCleanupTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -118,2 +118,0 @@\n-                \/\/ @Ignore(\"8242621\")\n-                TabPane.class,\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinMemoryLeakTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}