{"files":[{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.geometry.Insets;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.Scene;\n+import javafx.scene.web.WebEngine;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+import java.io.File;\n+\n+public class InputTypeAcceptAttributeTest extends Application {\n+\n+    private String fileNames[] = {\"TEXT.txt\", \"PNG.png\", \"PDF.pdf\", \"JPG.jpg\"};\n+    private File file = null;\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        for (int i = 0; i < fileNames.length; ++i) {\n+            file = new File(fileNames[i]);\n+            file.createNewFile();\n+        }\n+\n+        String currentDirPath = file.getCanonicalPath();\n+        currentDirPath = currentDirPath.substring(0, currentDirPath.lastIndexOf(file.separator));\n+        VBox instructions =  new VBox(\n+            new Label(\" This test creates four files (TEXT.txt, PNG.png, PDF.pdf, JPG.jpg) at below mentioned path:\"),\n+            new Label(\"  \" + currentDirPath),\n+            new Label(\" There are five different scenarios, follow below steps for each scenario.\"),\n+            new Label(\"\"),\n+            new Label(\" STEPS:\"),\n+            new Label(\"  1. Click Choose File, it will display file chooser dialog.\"),\n+            new Label(\"  2. Navigate to above mentioned path.\"),\n+            new Label(\" Expected behaviour: File Chooser dialog should show only the files of specified type.\"),\n+            new Label(\" On Mac, the behaviour is little different than windows\/linux. \" +\n+                        \"It shows all files, but user can select files of specified type only.\"));\n+\n+        Button passButton = new Button(\"Pass\");\n+        passButton.setOnAction(e -> {\n+            cleanup();\n+            Platform.exit();\n+        });\n+\n+        Button failButton = new Button(\"Fail\");\n+        failButton.setOnAction(e -> {\n+            cleanup();\n+            Platform.exit();\n+            throw new AssertionError(\"Displayed wrong type file.\");\n+        });\n+\n+        WebView webView = new WebView();\n+        WebEngine webEngine = webView.getEngine();\n+        webEngine.loadContent(\"<html>\\n\" +\n+                \" <body>\\n\" +\n+                \" 1. <input type = file \/> should show all files. If not press Fail. <br\/>\" +\n+                \" 2. <input type = file accept = image\/* \/> should show only (PNG.png, JPG.jpg) files. If not press Fail. <br\/>\" +\n+                \" 3. <input type = file accept = text\/* \/> should show only TEXT.txt file. If not press Fail. <br\/>\" +\n+                \" 4. <input type = file accept = image\/png \/> should show only PNG.png file. If not press Fail. <br\/>\" +\n+                \" 5. <input type = file accept = image\/jpg \/> should show only JPG.jpg file. If not press Fail. <br\/>\" +\n+                \" <\/body>\\n\" +\n+                \"<\/html>\");\n+\n+        HBox buttons = new HBox(20, passButton, failButton);\n+        buttons.setPadding(new Insets(10));\n+        VBox rootNode = new VBox(20, new HBox(instructions), webView, buttons);\n+        rootNode.setPadding(new Insets(10));\n+        Scene scene = new Scene(rootNode, 1000, 450);\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+    }\n+\n+    private void cleanup() {\n+        file = null;\n+        for (int i = 0; i < fileNames.length; ++i) {\n+            file = new File(fileNames[i]);\n+            file.delete();\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+}\n","filename":"tests\/manual\/web\/InputTypeAcceptAttributeTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"}]}