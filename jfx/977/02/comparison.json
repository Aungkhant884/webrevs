{"files":[{"patch":"@@ -517,3 +517,0 @@\n-static void grab_mouse_device(GdkDevice *device, DeviceGrabContext *context);\n-static void ungrab_mouse_device(GdkDevice *device);\n-\n@@ -538,20 +535,0 @@\n-#ifdef GLASS_GTK3_DISABLED\n-\/\/this GTK 3 approach has synchronization issues covered in JDK-8176844\n-\/\/ As the approach is also deprecated in GTK 3.20+, revert back to using GTK 2 mechanism\n-\n-        if (disableGrab) {\n-            return TRUE;\n-        }\n-        DeviceGrabContext context;\n-        GList *devices = gdk_device_manager_list_devices (\n-                             gdk_display_get_device_manager(\n-                                 gdk_display_get_default()),\n-                                 GDK_DEVICE_TYPE_MASTER);\n-\n-        context.window = gdkWindow;\n-        context.grabbed = FALSE;\n-        g_list_foreach(devices, (GFunc) grab_mouse_device, &context);\n-        g_list_free(devices);\n-\n-        return context.grabbed;\n-#else\n@@ -559,1 +536,0 @@\n-#endif\n@@ -567,0 +543,1 @@\n+\n@@ -583,12 +560,1 @@\n-#ifdef GLASS_GTK3_DISABLED\n-\/\/this GTK 3 approach has synchronization issues covered in JDK-8176844\n-\/\/ As the approach is also deprecated in GTK 3.20+, revert back to using GTK 2 mechanism\n-        GList *devices = gdk_device_manager_list_devices(\n-                             gdk_display_get_device_manager(\n-                                 gdk_display_get_default()),\n-                                 GDK_DEVICE_TYPE_MASTER);\n-        g_list_foreach(devices, (GFunc) ungrab_mouse_device, NULL);\n-        g_list_free(devices);\n-#else\n-        gdk_pointer_ungrab(GDK_CURRENT_TIME);\n-#endif\n+    gdk_pointer_ungrab(GDK_CURRENT_TIME);\n@@ -628,0 +594,1 @@\n+\n@@ -736,43 +703,0 @@\n-static void\n-grab_mouse_device(GdkDevice *device, DeviceGrabContext *context) {\n-    GdkInputSource source = gdk_device_get_source(device);\n-    if (source == GDK_SOURCE_MOUSE) {\n-#ifdef GLASS_GTK3\n-        GdkGrabStatus status = gdk_device_grab(device,\n-                                               context->window,\n-                                               GDK_OWNERSHIP_NONE,\n-                                               TRUE,\n-                                               GDK_FILTERED_EVENTS_MASK,\n-                                               NULL,\n-                                               GDK_CURRENT_TIME);\n-#else\n-        GdkGrabStatus status = GDK_GRAB_SUCCESS;\n-\/* FIXME reachable by 2?\n-        GdkGrabStatus status = gdk_device_grab(device,\n-                                               context->window,\n-                                               GDK_OWNERSHIP_NONE,\n-                                               TRUE,\n-                                               GDK_FILTERED_EVENTS_MASK,\n-                                               NULL,\n-                                               GDK_CURRENT_TIME);\n-                                       *\/\n-#endif\n-        if (status == GDK_GRAB_SUCCESS) {\n-            context->grabbed = TRUE;\n-        }\n-    }\n-}\n-\n-static void\n-ungrab_mouse_device(GdkDevice *device) {\n-#ifdef GLASS_GTK3\n-    GdkInputSource source = gdk_device_get_source(device);\n-    if (source == GDK_SOURCE_MOUSE) {\n-        gdk_device_ungrab(device, GDK_CURRENT_TIME);\n-    }\n-#else\n-    (void) device;\n-    \/\/ not used on the GTK2 path\n-#endif\n-}\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_general.cpp","additions":3,"deletions":79,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-WindowContext * WindowContextBase::sm_mouse_drag_window = NULL;\n+WindowContext * WindowContextBase::sm_devices_drag_window = NULL;\n@@ -136,2 +136,2 @@\n-    if (!event->in && WindowContextBase::sm_mouse_drag_window == this) {\n-        ungrab_mouse_drag_focus();\n+    if (!event->in && WindowContextBase::sm_devices_drag_window == this) {\n+        ungrab_devices_drag_focus();\n@@ -193,2 +193,2 @@\n-    if (WindowContextBase::sm_mouse_drag_window == this) {\n-        ungrab_mouse_drag_focus();\n+    if (WindowContextBase::sm_devices_drag_window == this) {\n+        ungrab_devices_drag_focus();\n@@ -311,1 +311,1 @@\n-        grab_mouse_drag_focus();\n+        grab_devices_drag_focus();\n@@ -315,1 +315,1 @@\n-            ungrab_mouse_drag_focus();\n+            ungrab_devices_drag_focus();\n@@ -321,1 +321,1 @@\n-            ungrab_mouse_drag_focus();\n+            ungrab_devices_drag_focus();\n@@ -622,1 +622,1 @@\n-bool WindowContextBase::grab_mouse_drag_focus() {\n+bool WindowContextBase::grab_devices_drag_focus() {\n@@ -625,1 +625,2 @@\n-        WindowContextBase::sm_mouse_drag_window = this;\n+        gdk_keyboard_grab(gdk_window, TRUE, GDK_CURRENT_TIME);\n+        WindowContextBase::sm_devices_drag_window = this;\n@@ -632,3 +633,3 @@\n-void WindowContextBase::ungrab_mouse_drag_focus() {\n-    WindowContextBase::sm_mouse_drag_window = NULL;\n-    glass_gdk_mouse_devices_ungrab();\n+void WindowContextBase::ungrab_devices_drag_focus() {\n+    WindowContextBase::sm_devices_drag_window = NULL;\n+    gdk_keyboard_ungrab(GDK_CURRENT_TIME);\n@@ -641,1 +642,1 @@\n-    if (WindowContextBase::sm_mouse_drag_window\n+    if (WindowContextBase::sm_devices_drag_window\n@@ -651,1 +652,1 @@\n-    if (!WindowContextBase::sm_mouse_drag_window) {\n+    if (!WindowContextBase::sm_devices_drag_window) {\n@@ -664,1 +665,1 @@\n-        if (WindowContextBase::sm_mouse_drag_window) {\n+        if (WindowContextBase::sm_devices_drag_window) {\n@@ -666,1 +667,1 @@\n-                    WindowContextBase::sm_mouse_drag_window->get_gdk_window(), cursor, FALSE);\n+                    WindowContextBase::sm_devices_drag_window->get_gdk_window(), cursor, FALSE);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    virtual bool grab_mouse_drag_focus() = 0;\n+    virtual bool grab_devices_drag_focus() = 0;\n@@ -125,1 +125,1 @@\n-    virtual void ungrab_mouse_drag_focus() = 0;\n+    virtual void ungrab_devices_drag_focus() = 0;\n@@ -203,3 +203,3 @@\n-     * sm_mouse_drag_window points to a WindowContext from which a mouse drag started.\n-     * This WindowContext holding a mouse grab during this drag. After releasing\n-     * all mouse buttons sm_mouse_drag_window becomes NULL and sm_grab_window's\n+     * sm_devices_drag_window points to a WindowContext from which a mouse drag started.\n+     * This WindowContext holding devices grab during this drag. After releasing\n+     * all mouse buttons sm_devices_darg_window becomes NULL and sm_grab_window's\n@@ -213,1 +213,1 @@\n-    static WindowContext* sm_mouse_drag_window;\n+    static WindowContext* sm_devices_drag_window;\n@@ -233,1 +233,1 @@\n-    bool grab_mouse_drag_focus();\n+    bool grab_devices_drag_focus();\n@@ -235,1 +235,1 @@\n-    void ungrab_mouse_drag_focus();\n+    void ungrab_devices_drag_focus();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}