{"files":[{"patch":"@@ -80,0 +80,1 @@\n+import javafx.scene.control.TableViewShim;\n@@ -98,0 +99,1 @@\n+import javafx.scene.layout.Region;\n@@ -277,2 +279,0 @@\n-    @Ignore(\"JDK-8295809\") \/\/ TODO probably need to verify the result of listener action,\n-    \/\/ instead of the fact that a listener is installed (since we changed the implementation)\n@@ -280,1 +280,1 @@\n-    public void testTreeTableRowVirtualFlowWidthListenerReplaceSkin() {\n+    public void testTreeTableRowTracksVirtualFlowReplaceSkin() {\n@@ -288,2 +288,1 @@\n-        assertNotNull(\"row skin must have listener to virtualFlow width\",\n-                unregisterChangeListeners(rowSkin, flow.widthProperty()));\n+        checkFollowsWidth(flow, (Region) rowSkin.getNode());\n@@ -293,1 +292,1 @@\n-     * Sanity: listener to flow's width is registered.\n+     * Sanity test checks that tree table row skin tracks the virtual flow width.\n@@ -295,2 +294,0 @@\n-    @Ignore(\"JDK-8295809\") \/\/ TODO probably need to verify the result of listener action,\n-    \/\/ instead of the fact that a listener is installed (since we changed the implementation)\n@@ -298,1 +295,1 @@\n-    public void testTreeTableRowVirtualFlowWidthListener() {\n+    public void testTreeTableRowTracksVirtualFlowWidth() {\n@@ -304,2 +301,16 @@\n-        assertNotNull(\"row skin must have listener to virtualFlow width\",\n-                unregisterChangeListeners(rowSkin, flow.widthProperty()));\n+        checkFollowsWidth(flow, (Region) rowSkin.getNode());\n+    }\n+\n+    protected void checkFollowsWidth(Region owner, Region skin) {\n+        owner.resize(10000, 1000);\n+        Toolkit.getToolkit().firePulse();\n+        double widthBefore = skin.getWidth();\n+\n+        owner.resize(100, 1000);\n+        Toolkit.getToolkit().firePulse();\n+        double widthAfter = skin.getWidth();\n+\n+        \/\/ since we are dealing with tree\/tables with unconstrained resize policies,\n+        \/\/ the row skin may not follow the width exactly. we'll check that the width\n+        \/\/ simply changes.\n+        assertTrue(\"TreeTableRowSkin must follow the VirtualFlow width\", widthAfter < (widthBefore - 10));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinCleanupTest.java","additions":22,"deletions":11,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -46,4 +46,0 @@\n-import javafx.scene.control.Accordion;\n-import javafx.scene.control.ButtonBar;\n-import javafx.scene.control.ColorPicker;\n-import javafx.scene.control.ComboBox;\n@@ -51,6 +47,0 @@\n-import javafx.scene.control.DatePicker;\n-import javafx.scene.control.MenuButton;\n-import javafx.scene.control.Pagination;\n-import javafx.scene.control.PasswordField;\n-import javafx.scene.control.ScrollBar;\n-import javafx.scene.control.ScrollPane;\n@@ -58,5 +48,0 @@\n-import javafx.scene.control.Spinner;\n-import javafx.scene.control.SplitMenuButton;\n-import javafx.scene.control.SplitPane;\n-import javafx.scene.control.TableView;\n-import javafx.scene.control.TreeTableView;\n@@ -217,35 +202,0 @@\n-        \/\/ FIXME as part of JDK-8241364\n-        \/\/ The default skins of these controls are leaking\n-        \/\/ step 1: file issues (where not yet done), add informal ignore to entry\n-        \/\/ step 2: fix and remove from list\n-        List<Class<? extends Control>> leakingClasses = List.of(\n-                \/\/\n-                \/\/ColorPicker.class,\n-\n-                \/\/\n-                \/\/ComboBox.class,\n-\n-                \/\/\n-                \/\/DatePicker.class,\n-\n-                \/\/\n-                \/\/MenuBar.class,\n-\n-                \/\/\n-                \/\/PasswordField.class,\n-\n-                \/\/\n-                \/\/Spinner.class,\n-\n-                \/\/\n-                \/\/SplitPane.class,\n-\n-                \/\/\n-                \/\/TableView.class,\n-\n-                \/\/\n-                \/\/TreeTableView.class\n-                \/\/ TODO remove this code block since it should only contain comments.\n-        );\n-        \/\/ remove the known issues to make the test pass\n-        controlClasses.removeAll(leakingClasses);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinMemoryLeakTest.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"}]}