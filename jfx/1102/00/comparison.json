{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-\n@@ -31,1 +30,0 @@\n-\n@@ -43,1 +41,0 @@\n-\n@@ -48,1 +45,0 @@\n-\n@@ -63,0 +59,1 @@\n+    private static final double EPSILON = 1e-10;\n@@ -100,5 +97,8 @@\n-        colTwoWidth = table.getColumns().get(1).getWidth();\n-        colThreeWidth = table.getColumns().get(2).getWidth();\n-        double colsWidthAfterResize = colOneWidth + colTwoWidth + colThreeWidth;\n-        Assert.assertEquals(\"TableView.CONSTRAINED_RESIZE_POLICY ignored.\",\n-                colsWidthBeforeResize, colsWidthAfterResize, 0);\n+\n+        if (!Util.isFractionalScale(table)) {\n+            colTwoWidth = table.getColumns().get(1).getWidth();\n+            colThreeWidth = table.getColumns().get(2).getWidth();\n+            double colsWidthAfterResize = colOneWidth + colTwoWidth + colThreeWidth;\n+            Assert.assertEquals(\"TableView.CONSTRAINED_RESIZE_POLICY ignored.\",\n+                    colsWidthBeforeResize, colsWidthAfterResize, EPSILON);\n+        }\n@@ -165,1 +165,0 @@\n-\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/tableview\/TableViewResizeColumnToFitContentTest.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-\n@@ -31,1 +30,0 @@\n-\n@@ -44,1 +42,0 @@\n-\n@@ -49,1 +46,0 @@\n-\n@@ -64,0 +60,1 @@\n+    private static final double EPSILON = 1e-10;\n@@ -100,5 +97,8 @@\n-        colTwoWidth = treeTableView.getColumns().get(1).getWidth();\n-        colThreeWidth = treeTableView.getColumns().get(2).getWidth();\n-        double colsWidthAfterResize = colOneWidth + colTwoWidth + colThreeWidth;\n-        Assert.assertEquals(\"TreeTableView.CONSTRAINED_RESIZE_POLICY ignored.\",\n-                colsWidthBeforeResize, colsWidthAfterResize, 0);\n+\n+        if (!Util.isFractionalScale(treeTableView)) {\n+            colTwoWidth = treeTableView.getColumns().get(1).getWidth();\n+            colThreeWidth = treeTableView.getColumns().get(2).getWidth();\n+            double colsWidthAfterResize = colOneWidth + colTwoWidth + colThreeWidth;\n+            Assert.assertEquals(\"TreeTableView.CONSTRAINED_RESIZE_POLICY ignored.\",\n+                    colsWidthBeforeResize, colsWidthAfterResize, EPSILON);\n+        }\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/treetableview\/TreeTableViewResizeColumnToFitContentTest.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import javafx.scene.Node;\n@@ -425,0 +426,11 @@\n+\n+    \/** returns true if either scaleX or scaleY of the specified Node is not integer *\/\n+    public static boolean isFractionalScale(Node n) {\n+        return\n+            isFractional(n.getScene().getWindow().getRenderScaleX()) ||\n+            isFractional(n.getScene().getWindow().getRenderScaleY());\n+    }\n+\n+    private static boolean isFractional(double x) {\n+        return x != Math.rint(x);\n+    }\n","filename":"tests\/system\/src\/test\/java\/test\/util\/Util.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}