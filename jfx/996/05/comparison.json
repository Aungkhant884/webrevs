{"files":[{"patch":"@@ -318,3 +318,2 @@\n-        final Font font = text.getFont();\n-        String cleanText = getCleanText();\n-        boolean emptyText = cleanText == null || cleanText.isEmpty();\n+\n+        boolean isIgnoreText = isIgnoreText();\n@@ -323,3 +322,5 @@\n-        if (!isIgnoreText()) {\n-            widthPadding += leftLabelPadding() + rightLabelPadding();\n-        }\n+        double txWidth;\n+        if (isIgnoreText) {\n+            txWidth = 0.0;\n+        } else {\n+            widthPadding += (leftLabelPadding() + rightLabelPadding());\n@@ -327,3 +328,3 @@\n-        double textWidth = 0.0;\n-        if (!emptyText) {\n-            textWidth = Utils.computeTextWidth(font, cleanText, 0);\n+            String cleanText = getCleanText();\n+            boolean emptyText = cleanText == null || cleanText.isEmpty();\n+            txWidth = emptyText ? 0.0 : Utils.computeTextWidth(text.getFont(), cleanText, 0);\n@@ -332,5 +333,1 @@\n-        \/\/ Fix for RT-39889\n-        double graphicWidth = graphic == null ? 0.0 :\n-                Utils.boundedSize(graphic.prefWidth(-1), graphic.minWidth(-1), graphic.maxWidth(-1));\n-\n-        \/\/ Now add on the graphic, gap, and padding as appropriate\n+        double width;\n@@ -338,6 +335,1 @@\n-            return textWidth + widthPadding;\n-        } else if (isIgnoreText()) {\n-            return graphicWidth + widthPadding;\n-        } else if (labeled.getContentDisplay() == ContentDisplay.LEFT\n-                || labeled.getContentDisplay() == ContentDisplay.RIGHT) {\n-            return textWidth + labeled.getGraphicTextGap() + graphicWidth + widthPadding;\n+            width = txWidth;\n@@ -345,1 +337,14 @@\n-            return Math.max(textWidth, graphicWidth) + widthPadding;\n+            \/\/ Fix for RT-39889\n+            double graphicWidth = graphic == null ? 0.0 :\n+                    Utils.boundedSize(graphic.prefWidth(-1), graphic.minWidth(-1), graphic.maxWidth(-1));\n+\n+            if (isIgnoreText) {\n+                width = graphicWidth;\n+            } else {\n+                ContentDisplay contentDisplay = labeled.getContentDisplay();\n+                if (contentDisplay == ContentDisplay.LEFT || contentDisplay == ContentDisplay.RIGHT) {\n+                    width = txWidth + labeled.getGraphicTextGap() + graphicWidth;\n+                } else {\n+                    width = Math.max(txWidth, graphicWidth);\n+                }\n+            }\n@@ -347,0 +352,2 @@\n+\n+        return width + widthPadding;\n@@ -355,0 +362,2 @@\n+        boolean isIgnoreText = isIgnoreText();\n+        boolean isIgnoreGraphic = isIgnoreGraphic();\n@@ -357,2 +366,2 @@\n-\n-        if (!isIgnoreText()) {\n+        double padding = topInset + bottomInset;\n+        if (!isIgnoreText) {\n@@ -360,0 +369,1 @@\n+            padding += topLabelPadding() + bottomLabelPadding();\n@@ -368,2 +378,2 @@\n-        double textWidth = width;\n-        if (!isIgnoreGraphic() &&\n+        double txWidth = width;\n+        if (!isIgnoreGraphic &&\n@@ -371,1 +381,1 @@\n-            textWidth -= (graphic.prefWidth(-1) + gap);\n+            txWidth -= (graphic.prefWidth(-1) + gap);\n@@ -376,1 +386,1 @@\n-                labeled.isWrapText() ? textWidth : 0,\n+                labeled.isWrapText() ? txWidth : 0,\n@@ -379,6 +389,13 @@\n-        \/\/ Now we want to add on the graphic if necessary!\n-        double h = textHeight;\n-        if (!isIgnoreGraphic()) {\n-            final Node graphic = labeled.getGraphic();\n-            if (contentDisplay == TOP || contentDisplay == BOTTOM) {\n-                h = graphic.prefHeight(width) + gap + textHeight;\n+        double height;\n+        if (isIgnoreGraphic) {\n+            height = textHeight;\n+        } else {\n+            \/\/ Calculate the graphic height and use based on contentDisplay value\n+            double graphicHeight = graphic == null ? 0.0 :\n+                Utils.boundedSize(graphic.prefHeight(width), graphic.minHeight(width), graphic.maxHeight(width));\n+\n+            \/\/ Add the graphic, gap, and padding as appropriate\n+            if (isIgnoreText) {\n+                height = graphicHeight;\n+            } else if (contentDisplay == TOP || contentDisplay == BOTTOM) {\n+                height = graphicHeight + gap + textHeight;\n@@ -386,1 +403,1 @@\n-                h = Math.max(textHeight, graphic.prefHeight(width));\n+                height = Math.max(textHeight, graphicHeight);\n@@ -390,7 +407,1 @@\n-        double padding = topInset + bottomInset;\n-\n-        if (!isIgnoreText()) {\n-            padding += topLabelPadding() + bottomLabelPadding();\n-        }\n-\n-        return  h + padding;\n+        return  height + padding;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/LabeledSkinBase.java","additions":52,"deletions":41,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -1252,2 +1252,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.prefHeight(-1), 0);\n+        assertEquals(14 + 23, label.prefHeight(-1), 0);\n@@ -1263,2 +1262,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.prefHeight(-1), 0);\n+        assertEquals(14 + 23, label.prefHeight(-1), 0);\n@@ -1315,2 +1313,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.prefHeight(-1), 0);\n+        assertEquals(14 + 23, label.prefHeight(-1), 0);\n@@ -1326,2 +1323,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.prefHeight(-1), 0);\n+        assertEquals(14 + 23, label.prefHeight(-1), 0);\n@@ -1810,2 +1806,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.maxHeight(-1), 0);\n+        assertEquals(14 + 23, label.maxHeight(-1), 0);\n@@ -1821,2 +1816,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.maxHeight(-1), 0);\n+        assertEquals(14 + 23, label.maxHeight(-1), 0);\n@@ -1873,2 +1867,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.maxHeight(-1), 0);\n+        assertEquals(14 + 23, label.maxHeight(-1), 0);\n@@ -1884,2 +1877,1 @@\n-        final double lineHeight = Utils.computeTextHeight(label.getFont(), \" \", 0, text.getBoundsType());\n-        assertEquals(14 + 23 + lineHeight + 2, label.maxHeight(-1), 0);\n+        assertEquals(14 + 23, label.maxHeight(-1), 0);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/LabelSkinTest.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"}]}