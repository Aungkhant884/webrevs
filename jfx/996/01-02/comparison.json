{"files":[{"patch":"@@ -319,0 +319,1 @@\n+        final ContentDisplay contentDisplay = labeled.getContentDisplay();\n@@ -327,8 +328,1 @@\n-        double textWidth = 0.0;\n-        if (!emptyText) {\n-            textWidth = Utils.computeTextWidth(font, cleanText, 0);\n-        }\n-\n-        \/\/ Fix for RT-39889\n-        double graphicWidth = graphic == null ? 0.0 :\n-                Utils.boundedSize(graphic.prefWidth(-1), graphic.minWidth(-1), graphic.maxWidth(-1));\n+        double textWidth = emptyText ? 0.0 : Utils.computeTextWidth(font, cleanText, 0);\n@@ -336,8 +330,3 @@\n-        \/\/ Now add on the graphic, gap, and padding as appropriate\n-        if (isIgnoreGraphic()) {\n-            return textWidth + widthPadding;\n-        } else if (isIgnoreText()) {\n-            return graphicWidth + widthPadding;\n-        } else if (labeled.getContentDisplay() == ContentDisplay.LEFT\n-                || labeled.getContentDisplay() == ContentDisplay.RIGHT) {\n-            return textWidth + labeled.getGraphicTextGap() + graphicWidth + widthPadding;\n+        double width;\n+        if(isIgnoreGraphic()) {\n+            width = textWidth;\n@@ -345,1 +334,12 @@\n-            return Math.max(textWidth, graphicWidth) + widthPadding;\n+            \/\/ Fix for RT-39889\n+            double graphicWidth = graphic == null ? 0.0 :\n+                    Utils.boundedSize(graphic.prefWidth(-1), graphic.minWidth(-1), graphic.maxWidth(-1));\n+\n+            if (isIgnoreText()) {\n+                width = graphicWidth;\n+            } else if (contentDisplay == ContentDisplay.LEFT\n+                    || contentDisplay == ContentDisplay.RIGHT) {\n+                width = textWidth + labeled.getGraphicTextGap() + graphicWidth;\n+            } else {\n+                width = Math.max(textWidth, graphicWidth);\n+            }\n@@ -347,0 +347,2 @@\n+\n+        return width + widthPadding;\n@@ -357,1 +359,1 @@\n-\n+        double padding = topInset + bottomInset;\n@@ -360,0 +362,1 @@\n+            padding += topLabelPadding() + bottomLabelPadding();\n@@ -379,6 +382,0 @@\n-        \/\/ Calculate the graphic height and use based on contentDisplay value\n-        double graphicHeight = graphic == null ? 0.0 :\n-                Utils.boundedSize(graphic.prefHeight(width), graphic.minHeight(width), graphic.maxHeight(width));\n-\n-        \/\/ Now add on the graphic, gap, and padding as appropriate\n-        final Node graphic = labeled.getGraphic();\n@@ -388,4 +385,0 @@\n-        } else if (isIgnoreText()) {\n-            height = graphicHeight;\n-        } else if (contentDisplay == TOP || contentDisplay == BOTTOM){\n-            height = graphicHeight + gap + textHeight;\n@@ -393,4 +386,3 @@\n-            height = Math.max(textHeight, graphicHeight);\n-        }\n-\n-        double padding = topInset + bottomInset;\n+            \/\/ Calculate the graphic height and use based on contentDisplay value\n+            double graphicHeight = graphic == null ? 0.0 :\n+                Utils.boundedSize(graphic.prefHeight(width), graphic.minHeight(width), graphic.maxHeight(width));\n@@ -398,2 +390,8 @@\n-        if (!isIgnoreText()) {\n-            padding += topLabelPadding() + bottomLabelPadding();\n+            \/\/ Add the graphic, gap, and padding as appropriate\n+            if (isIgnoreText()) {\n+                height = graphicHeight;\n+            } else if (contentDisplay == TOP || contentDisplay == BOTTOM){\n+                height = graphicHeight + gap + textHeight;\n+            } else {\n+                height = Math.max(textHeight, graphicHeight);\n+            }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/LabeledSkinBase.java","additions":32,"deletions":34,"binary":false,"changes":66,"status":"modified"}]}