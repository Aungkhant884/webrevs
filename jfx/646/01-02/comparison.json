{"files":[{"patch":"@@ -470,1 +470,0 @@\n-     * @since JavaFX 8.0\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/DatePicker.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-     * @param index the index of the item that needs to be focused\n+     * @param index the index of the item to be focused\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/MultipleSelectionModelBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,10 +171,0 @@\n-    \/**\n-     * A string representation of the CSS style associated with this\n-     * specific {@code PopupControl}. This is analogous to the \"style\" attribute of an\n-     * HTML element. Note that, like the HTML style attribute, this\n-     * variable contains style properties and values and not the\n-     * selector portion of a style rule.\n-     * @param value The inline CSS style to use for this {@code PopupControl}.\n-     *         {@code null} is implicitly converted to an empty String.\n-     * @defaultValue empty string\n-     *\/\n@@ -182,0 +172,1 @@\n+    @Override public final String getStyle() { return styleProperty().get(); }\n@@ -183,1 +174,0 @@\n-    \/\/ TODO: javadoc copied from property for the sole purpose of providing a return tag\n@@ -190,11 +180,2 @@\n-     * @defaultValue empty string\n-     * @return The inline CSS style associated with this {@code PopupControl}.\n-     *         If this {@code PopupControl} does not have an inline style,\n-     *         an empty String is returned.\n-     *\/\n-    @Override public final String getStyle() { return styleProperty().get(); }\n-\n-    \/**\n-     * Get the {@code StringProperty} representing the CSS style associated with\n-     * this specific {@code PopupControl}.\n-     * @return the {@code StringProperty} representing the CSS style\n+     * @return the {@code style} property\n+     * @defaultValue null\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/PopupControl.java","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @param <C> the type of control\n@@ -58,3 +59,3 @@\n-     * Constructs a new {@code Event} with the specified event source, target\n-     * and type. If the source or target is set to {@code null}, it is replaced\n-     * by the {@code NULL_SOURCE_TARGET} value.\n+     * Constructs a new {@code SortEvent} with the specified event source and target.\n+     * If the source or target is set to {@code null}, it is replaced by\n+     * the {@code NULL_SOURCE_TARGET} value.\n@@ -63,1 +64,1 @@\n-     * @param target the target of the scroll to operation\n+     * @param target the target of the event\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/SortEvent.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -405,0 +405,4 @@\n+    \/**\n+     * The maximum width of the tabs in the TabPane.\n+     * @return the maximum width property\n+     *\/\n@@ -501,0 +505,4 @@\n+    \/**\n+    * <p>The maximum height of the tabs in the TabPane.<\/p>\n+    * @return the maximum height of the tabs\n+    *\/\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TabPane.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -624,2 +624,2 @@\n-     * {@code CssMetaData} of its superclasses.\n-     * @return empty list is returned as of now\n+     * {@code CssMetaData} of its superclasses. It is currently an empty list.\n+     * @return an empty list\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableColumn.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,5 +114,11 @@\n-    \/** Character unit *\/ CHARACTER,\n-    \/** Word unit *\/      WORD,\n-    \/** Line unit *\/      LINE,\n-    \/** Paragraph unit *\/ PARAGRAPH,\n-    \/** Page unit *\/      PAGE };\n+        \/** Character unit *\/\n+        CHARACTER,\n+        \/** Word unit *\/\n+        WORD,\n+        \/** Line unit *\/\n+        LINE,\n+        \/** Paragraph unit *\/\n+        PARAGRAPH,\n+        \/** Page unit *\/\n+        PAGE\n+    };\n@@ -126,6 +132,13 @@\n-    \/** Left Direction *\/  LEFT,\n-    \/** Right Direction *\/ RIGHT,\n-    \/** Up Direction *\/    UP,\n-    \/** Down Direction *\/  DOWN,\n-    \/** Beginning *\/       BEGINNING,\n-    \/** End *\/             END };\n+        \/** Left Direction *\/\n+        LEFT,\n+        \/** Right Direction *\/\n+        RIGHT,\n+        \/** Up Direction *\/\n+        UP,\n+        \/** Down Direction *\/\n+        DOWN,\n+        \/** Beginning *\/\n+        BEGINNING,\n+        \/** End *\/\n+        END\n+    };\n@@ -602,1 +615,1 @@\n-     * Get the path elements describing the shape of the underline for the given range.\n+     * Gets the path elements describing the shape of the underline for the given range.\n@@ -609,1 +622,1 @@\n-    \/** Get the path elements describing the bounding rectangles for the given range of text.\n+    \/** Gets the path elements describing the bounding rectangles for the given range of text.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TextInputControlSkin.java","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1168,6 +1168,11 @@\n-        \/** Cut command.*\/    CUT(\"cut\"),\n-        \/** Copy command.*\/   COPY(\"copy\"),\n-        \/** Paste command.*\/  PASTE(\"paste\"),\n-\n-        \/** Undo command.*\/   UNDO(\"undo\"),\n-        \/** Redo command.*\/   REDO(\"redo\"),\n+        \/** Cut command.*\/\n+        CUT(\"cut\"),\n+        \/** Copy command.*\/\n+        COPY(\"copy\"),\n+        \/** Paste command.*\/\n+        PASTE(\"paste\"),\n+\n+        \/** Undo command.*\/\n+        UNDO(\"undo\"),\n+        \/** Redo command.*\/\n+        REDO(\"redo\"),\n@@ -1178,26 +1183,46 @@\n-        \/** Align Left command.*\/     ALIGN_LEFT(\"justifyleft\"),\n-        \/** Align Center command.*\/   ALIGN_CENTER(\"justifycenter\"),\n-        \/** Align Right command.*\/    ALIGN_RIGHT(\"justifyright\"),\n-        \/** Align Justify command.*\/  ALIGN_JUSTIFY(\"justifyfull\"),\n-\n-        \/** Insert bullets command.*\/ BULLETS(\"insertUnorderedList\"),\n-        \/** Insert numbers command.*\/ NUMBERS(\"insertOrderedList\"),\n-\n-        \/** Indent command.*\/         INDENT(\"indent\"),\n-        \/** Outdent command.*\/        OUTDENT(\"outdent\"),\n-\n-        \/** Format command.*\/         FORMAT(\"formatblock\"),\n-        \/** Font name command.*\/      FONT_FAMILY(\"fontname\"),\n-        \/** Font size command.*\/      FONT_SIZE(\"fontsize\"),\n-\n-        \/** Bold command.*\/           BOLD(\"bold\"),\n-        \/** Italic command.*\/         ITALIC(\"italic\"),\n-        \/** Underline command.*\/      UNDERLINE(\"underline\"),\n-        \/** Strikethrough command.*\/  STRIKETHROUGH(\"strikethrough\"),\n-\n-        \/** Foreground color command.*\/  FOREGROUND_COLOR(\"forecolor\"),\n-        \/** Background color command.*\/  BACKGROUND_COLOR(\"backcolor\"),\n-        \/** Style with CSS command.*\/    STYLEWITHCSS(\"styleWithCSS\"),\n-\n-        \/** Insert newline command.*\/    INSERT_NEW_LINE(\"insertnewline\"),\n-        \/** Insert tab command.*\/        INSERT_TAB(\"inserttab\");\n+        \/** Align Left command.*\/\n+        ALIGN_LEFT(\"justifyleft\"),\n+        \/** Align Center command.*\/\n+        ALIGN_CENTER(\"justifycenter\"),\n+        \/** Align Right command.*\/\n+        ALIGN_RIGHT(\"justifyright\"),\n+        \/** Align Justify command.*\/\n+        ALIGN_JUSTIFY(\"justifyfull\"),\n+\n+        \/** Insert bullets command.*\/\n+        BULLETS(\"insertUnorderedList\"),\n+        \/** Insert numbers command.*\/\n+        NUMBERS(\"insertOrderedList\"),\n+\n+        \/** Indent command.*\/\n+        INDENT(\"indent\"),\n+        \/** Outdent command.*\/\n+        OUTDENT(\"outdent\"),\n+\n+        \/** Format command.*\/\n+        FORMAT(\"formatblock\"),\n+        \/** Font name command.*\/\n+        FONT_FAMILY(\"fontname\"),\n+        \/** Font size command.*\/\n+        FONT_SIZE(\"fontsize\"),\n+\n+        \/** Bold command.*\/\n+        BOLD(\"bold\"),\n+        \/** Italic command.*\/\n+        ITALIC(\"italic\"),\n+        \/** Underline command.*\/\n+        UNDERLINE(\"underline\"),\n+        \/** Strikethrough command.*\/\n+        STRIKETHROUGH(\"strikethrough\"),\n+\n+        \/** Foreground color command.*\/\n+        FOREGROUND_COLOR(\"forecolor\"),\n+        \/** Background color command.*\/\n+        BACKGROUND_COLOR(\"backcolor\"),\n+        \/** Style with CSS command.*\/\n+        STYLEWITHCSS(\"styleWithCSS\"),\n+\n+        \/** Insert newline command.*\/\n+        INSERT_NEW_LINE(\"insertnewline\"),\n+        \/** Insert tab command.*\/\n+        INSERT_TAB(\"inserttab\");\n@@ -1212,1 +1237,1 @@\n-         * Get the name of this command.\n+         * Gets the name of this command.\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/HTMLEditorSkin.java","additions":58,"deletions":33,"binary":false,"changes":91,"status":"modified"}]}