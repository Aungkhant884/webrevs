{"files":[{"patch":"@@ -1229,7 +1229,7 @@\n-                    if (errors != null) {\n-                        CssParser.ParseError error =\n-                            new CssParser.ParseError(\n-                                \"Could not load stylesheet: \" + fname\n-                            );\n-                        errors.add(error);\n-                    }\n+                \/\/ For data URIs, use the pretty-printed version for logging\n+                var dataUri = DataURI.tryParse(fname);\n+                String stylesheetName = dataUri != null ? dataUri.toString() : fname;\n+\n+                if (errors != null) {\n+                    errors.add(new CssParser.ParseError(\"Could not load stylesheet: \" + stylesheetName));\n+                }\n@@ -1237,1 +1237,1 @@\n-                    getLogger().info(\"Could not load stylesheet: \" + fname);\/\/, ioe);\n+                    getLogger().info(\"Could not load stylesheet: \" + stylesheetName);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleManager.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -316,3 +316,4 @@\n-                throw new IOException(\"Wrong binary CSS version: \"\n-                        + bssVersion + \". Expected version less than or equal to\" +\n-                        Stylesheet.BINARY_CSS_VERSION);\n+                throw new IOException(\n+                    String.format(\"Wrong binary CSS version %s, expected version less than or equal to %s\",\n+                        uri != null ? bssVersion + \" in stylesheet \\\"\" + uri + \"\\\"\" : bssVersion,\n+                        Stylesheet.BINARY_CSS_VERSION));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Stylesheet.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import javafx.application.Application;\n@@ -41,0 +42,1 @@\n+import javafx.scene.layout.StackPane;\n@@ -1123,0 +1125,49 @@\n+\n+    @Test\n+    public void testSetSceneUserAgentStylesheetFromDataURI() {\n+        var rect = new Rectangle();\n+        var root = new StackPane(rect);\n+        rect.getStyleClass().add(\"rect\");\n+\n+        \/\/ Stylesheet content: .rect { -fx-fill: blue; }\n+        Scene scene = new Scene(root);\n+        scene.setUserAgentStylesheet(\"data:base64,LnJlY3QgeyAtZngtZmlsbDogYmx1ZTsgfQ==\");\n+        scene.getRoot().applyCss();\n+\n+        assertEquals(Color.BLUE, rect.getFill());\n+    }\n+\n+    @Test\n+    public void testSetSubSceneUserAgentStylesheetFromDataURI() {\n+        var rect = new Rectangle();\n+        var root = new StackPane(rect);\n+        rect.getStyleClass().add(\"rect\");\n+\n+        \/\/ Stylesheet content: .rect { -fx-fill: blue; }\n+        var subScene = new SubScene(root, 100, 100);\n+        subScene.setUserAgentStylesheet(\"data:base64,LnJlY3QgeyAtZngtZmlsbDogYmx1ZTsgfQ==\");\n+\n+        Scene scene = new Scene(new StackPane(subScene));\n+        scene.getRoot().applyCss();\n+\n+        assertEquals(Color.BLUE, rect.getFill());\n+    }\n+\n+    @Test\n+    public void testSetApplicationUserAgentStylesheetFromDataURI() {\n+        var rect = new Rectangle();\n+        var root = new StackPane(rect);\n+        rect.getStyleClass().add(\"rect\");\n+        String uaStylesheet = Application.getUserAgentStylesheet();\n+\n+        try {\n+            \/\/ Stylesheet content: .rect { -fx-fill: blue; }\n+            Application.setUserAgentStylesheet(\"data:base64,LnJlY3QgeyAtZngtZmlsbDogYmx1ZTsgfQ==\");\n+            Scene scene = new Scene(root);\n+            scene.getRoot().applyCss();\n+\n+            assertEquals(Color.BLUE, rect.getFill());\n+        } finally {\n+            Application.setUserAgentStylesheet(uaStylesheet);\n+        }\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/StyleManagerTest.java","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -653,20 +653,11 @@\n-        File inputFile = null, outputFile = null;\n-        byte[] stylesheetData;\n-\n-        try {\n-            inputFile = File.createTempFile(\"convertCssTextToBinary\", \".css\");\n-            outputFile = File.createTempFile(\"convertCssTextToBinary\", \".bss\");\n-            Files.writeString(inputFile.toPath(), cssText);\n-            Stylesheet.convertToBinary(inputFile, outputFile);\n-            stylesheetData = Files.readAllBytes(outputFile.toPath());\n-        } finally {\n-            if (inputFile != null) {\n-                inputFile.delete();\n-            }\n-\n-            if (outputFile != null) {\n-                outputFile.delete();\n-            }\n-        }\n-\n-        return stylesheetData;\n+        var stylesheet = new CssParser().parse(cssText);\n+        var stream = new ByteArrayOutputStream();\n+        var stringStore = new StringStore();\n+        StylesheetShim.writeBinary(stylesheet, new DataOutputStream(stream), stringStore);\n+        var stylesheetData = stream.toByteArray();\n+        stream = new ByteArrayOutputStream();\n+        var dataStream = new DataOutputStream(stream);\n+        dataStream.writeShort(StylesheetShim.BINARY_CSS_VERSION);\n+        stringStore.writeBinary(dataStream);\n+        dataStream.write(stylesheetData);\n+        return stream.toByteArray();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":11,"deletions":20,"binary":false,"changes":31,"status":"modified"}]}