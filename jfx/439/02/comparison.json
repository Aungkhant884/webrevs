{"files":[{"patch":"@@ -253,0 +253,14 @@\n+\/**\n+ * Converts the given OS architecture to unified form\n+ *\n+ * @param arch OS architecture\n+ * @return unified OS architecture which is used for JavaFX building\n+ *\/\n+String getConvertedOsArch(String arch) {\n+    switch (arch) {\n+        case \"aarch64\" : return \"arm64\"\n+        case \"amd64\" : return \"x64\"\n+        default: return arch\n+    }\n+}\n+\n@@ -294,0 +308,1 @@\n+ext.CONVERTED_OS_ARCH = getConvertedOsArch(OS_ARCH)\n@@ -408,0 +423,1 @@\n+ext.CONVERTED_TARGET_ARCH = getConvertedOsArch(TARGET_ARCH)\n@@ -1310,0 +1326,3 @@\n+logger.quiet(\"TARGET_ARCH: $TARGET_ARCH\")\n+logger.quiet(\"CONVERTED_OS_ARCH: $CONVERTED_OS_ARCH\")\n+logger.quiet(\"CONVERTED_TARGET_ARCH: $CONVERTED_TARGET_ARCH\")\n@@ -2205,1 +2224,3 @@\n-    addNative(project, \"prismES2\")\n+    if (IS_INCLUDE_ES2) {\n+        addNative(project, \"prismES2\")\n+    }\n","filename":"build.gradle","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -44,0 +44,3 @@\n+def IS_CROSS = CONVERTED_OS_ARCH != CONVERTED_TARGET_ARCH\n+def VC_ARCH = IS_CROSS ? \"${CONVERTED_OS_ARCH}_${CONVERTED_TARGET_ARCH}\" : CONVERTED_TARGET_ARCH\n+\n@@ -56,2 +59,2 @@\n-                        \"VCARCH\"     : IS_64 ? \"amd64\" : \"x86\",\n-                        \"SDKARCH\"    : IS_64 ? \"\/x64\" : \"\/x86\",\n+                        \"VCARCH\"     : VC_ARCH,\n+                        \"SDKARCH\"    : \"\/$CONVERTED_TARGET_ARCH\",\n@@ -150,1 +153,1 @@\n-    msvcBinDir = \"$WINDOWS_VS_VSINSTALLDIR\/VC\/bin\/$CPU_BITS\"\n+    msvcBinDir = \"$WINDOWS_VS_VSINSTALLDIR\/VC\/bin\/$CONVERTED_TARGET_ARCH\"\n@@ -158,1 +161,1 @@\n-    msvcBinDir = \"$msvcInstallDir\/bin\/Host${CPU_BITS}\/$CPU_BITS\"\n+    msvcBinDir = \"$msvcInstallDir\/bin\/Host${CPU_BITS}\/$CONVERTED_TARGET_ARCH\"\n@@ -168,1 +171,1 @@\n-    winSdkBinDir += \"\/$CPU_BITS\"\n+    winSdkBinDir += \"\/$CONVERTED_TARGET_ARCH\"\n@@ -174,1 +177,1 @@\n-        winSdkBinDir += \"\/$CPU_BITS\"\n+        winSdkBinDir += \"\/$CONVERTED_TARGET_ARCH\"\n@@ -179,0 +182,3 @@\n+\/\/ Use rc from host system if it is not possible to run it from target system\n+def hostWinSdkBinDir = \"$WINDOWS_SDK_DIR\/Bin\/$WINDOWS_SDK_VERSION\/$CONVERTED_OS_ARCH\"\n+ext.RC = !isExecutable(RC) ? cygpath(\"$hostWinSdkBinDir\/rc.exe\") : RC\n@@ -189,1 +195,2 @@\n-ext.MC = cygpath(\"$winSdkBinDir\/mt.exe\")\n+\/\/ Use fxc from host system if it is not possible to run it from target system\n+ext.FXC = !isExecutable(FXC) ? cygpath(\"$hostWinSdkBinDir\/fxc.exe\") : FXC\n@@ -196,1 +203,1 @@\n-    msvcRedstDir = \"$WINDOWS_VS_VSINSTALLDIR\/VC\/Redist\/$CPU_BITS\"\n+    msvcRedstDir = \"$WINDOWS_VS_VSINSTALLDIR\/VC\/Redist\/$CONVERTED_TARGET_ARCH\"\n@@ -200,1 +207,1 @@\n-        msvcRedstDir = \"$WINDOWS_VS_VSINSTALLDIR\/VC\/Redist\/MSVC\/$msvcRedistVer\/$CPU_BITS\"\n+        msvcRedstDir = \"$WINDOWS_VS_VSINSTALLDIR\/VC\/Redist\/MSVC\/$msvcRedistVer\/$CONVERTED_TARGET_ARCH\"\n@@ -202,1 +209,1 @@\n-        msvcRedstDir = \"$WINDOWS_VS_VC_TOOLS_REDIST_DIR\/$CPU_BITS\"\n+        msvcRedstDir = \"$WINDOWS_VS_VC_TOOLS_REDIST_DIR\/$CONVERTED_TARGET_ARCH\"\n@@ -206,1 +213,1 @@\n-def winSdkDllDir = \"$WINDOWS_VS_WINSDKDLLINSTALLDIR\/$CPU_BITS\"\n+def winSdkDllDir = \"$WINDOWS_VS_WINSDKDLLINSTALLDIR\/$CONVERTED_TARGET_ARCH\"\n@@ -455,0 +462,9 @@\n+\n+boolean isExecutable(String file) {\n+    try {\n+        Runtime.runtime.exec(file)\n+        return true\n+    } catch (IOException e) {\n+        return false\n+    }\n+}\n","filename":"buildSrc\/win.gradle","additions":27,"deletions":11,"binary":false,"changes":38,"status":"modified"}]}