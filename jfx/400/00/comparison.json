{"files":[{"patch":"@@ -3382,1 +3382,1 @@\n-.dialog-pane:no-header .graphic-container {\n+.dialog-pane:no-header > * > .graphic-container {\n","filename":"modules\/javafx.controls\/src\/main\/resources\/com\/sun\/javafx\/scene\/control\/skin\/modena\/modena.css","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+import javafx.geometry.Insets;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.text.Font;\n@@ -31,0 +34,1 @@\n+import javafx.css.PseudoClass;\n@@ -39,0 +43,1 @@\n+import javafx.scene.control.DialogPane;\n@@ -42,0 +47,2 @@\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n@@ -758,0 +765,22 @@\n+\n+    @Test public void test_graphic_padding_onDialogPane() {\n+        DialogPane dialogPane = new DialogPane();\n+        anchorBtn.setGraphic(dialogPane);\n+        \/\/ Since DialogPane is not set in a Dialog, PseudoClass is activated manually\n+        dialogPane.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"no-header\"), true);\n+\n+        final ImageView graphic = new ImageView(new Image(ContextMenuTest.class.getResource(\"icon.png\").toExternalForm()));\n+        final MenuItem menuItem = new MenuItem(\"Menu Item Text\", graphic);\n+        final ContextMenu contextMenu = new ContextMenu(menuItem);\n+        contextMenu.show(dialogPane, 0, 0);\n+\n+        final Insets padding = ((StackPane) graphic.getParent()).getPadding();\n+        final double fontSize = Font.getDefault().getSize();\n+\n+        \/\/ -fx-padding: 0em 0.333em 0em 0em;\n+        assertEquals(0, padding.getTop(), 0.0);\n+        assertEquals(0.333 * fontSize, padding.getRight(), 0.01);\n+        assertEquals(0, padding.getBottom(), 0.0);\n+        assertEquals(0, padding.getLeft(), 0.0);\n+        anchorBtn.setGraphic(null);\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ContextMenuTest.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.control;\n+\n+import javafx.css.PseudoClass;\n+import javafx.geometry.Insets;\n+import javafx.scene.control.DialogPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.text.Font;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import test.com.sun.javafx.scene.control.infrastructure.StageLoader;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class DialogPaneTest {\n+\n+    private StageLoader sl;\n+    private DialogPane dialogPane;\n+\n+    @Before\n+    public void setup() {\n+        dialogPane = new DialogPane();\n+        sl = new StageLoader(dialogPane);\n+    }\n+\n+    @After\n+    public void after() {\n+        sl.dispose();\n+    }\n+\n+    @Test\n+    public void test_graphic_padding_noHeader() {\n+        \/\/ Since DialogPane is not set in a Dialog, PseudoClass is activated manually\n+        dialogPane.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"no-header\"), true);\n+\n+        final ImageView graphic = new ImageView(new Image(ContextMenuTest.class.getResource(\"icon.png\").toExternalForm()));\n+        dialogPane.setGraphic(graphic);\n+        dialogPane.applyCss();\n+\n+        final StackPane graphicContainer = (StackPane) graphic.getParent();\n+        final Insets padding = graphicContainer.getPadding();\n+        final double fontSize = Font.getDefault().getSize();\n+\n+        \/\/ -fx-padding: 0.833em 0 0 0.833em;\n+        assertEquals(0.833 * fontSize, padding.getTop(), 0.01);\n+        assertEquals(0, padding.getRight(), 0.0);\n+        assertEquals(0, padding.getBottom(), 0.0);\n+        assertEquals(0.833 * fontSize, padding.getLeft(), 0.01);\n+    }\n+}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/DialogPaneTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"filename":"modules\/javafx.controls\/src\/test\/resources\/test\/javafx\/scene\/control\/icon.png","binary":true,"status":"added"}]}