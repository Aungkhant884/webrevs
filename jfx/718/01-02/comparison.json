{"files":[{"patch":"@@ -274,0 +274,8 @@\n+\n+    \/\/ ENTER is assigned to both Enter on the keypad and\n+    \/\/ Return on the main keyboard. Make sure we always\n+    \/\/ target the main keyboard.\n+    if (code == com_sun_glass_events_KeyEvent_VK_ENTER) {\n+        return GDK_KEY_Return;\n+    }\n+\n@@ -287,1 +295,1 @@\n-static int search_keys(GdkKeymapKey* keys, gint n_keys, int search_group)\n+static gint search_keys(GdkKeymap* keymap, GdkKeymapKey* keys, gint n_keys, int search_group, bool requires_num_lock)\n@@ -289,6 +297,16 @@\n-    int result = -1;\n-    for (gint i = 0; i < n_keys; ++i)\n-    {\n-        if (keys[i].group == search_group &&\n-            keys[i].level == 0)\n-        {\n+    gint result = -1;\n+\n+    \/\/ Keyvals that require numlock may be presented on a level other than 0.\n+    \/\/ Keys common to all layouts (e.g. Backspace, keys on the numeric keypad)\n+    \/\/ may be presented on layout 0 even if that's not the current layout. We\n+    \/\/ use translate_keyboard_state to find the effective group and level.\n+    GdkModifierType state = (GdkModifierType) 0;\n+    if (requires_num_lock) {\n+        state = GDK_MOD2_MASK;\n+    }\n+    for (gint i = 0; i < n_keys; ++i) {\n+        gint group = search_group;\n+        gint level = 0;\n+        gdk_keymap_translate_keyboard_state(keymap, keys[i].keycode, state, search_group,\n+            nullptr, &group, &level, nullptr);\n+        if (keys[i].group == group && keys[i].level == level) {\n@@ -302,0 +320,25 @@\n+static bool keyval_requires_numlock(gint keyval) {\n+    switch (keyval) {\n+        case GDK_KEY_KP_Equal:\n+        case GDK_KEY_KP_Multiply:\n+        case GDK_KEY_KP_Add:\n+        case GDK_KEY_KP_Subtract:\n+        case GDK_KEY_KP_Decimal:\n+        case GDK_KEY_KP_Separator:\n+        case GDK_KEY_KP_Divide:\n+        case GDK_KEY_KP_0:\n+        case GDK_KEY_KP_1:\n+        case GDK_KEY_KP_2:\n+        case GDK_KEY_KP_3:\n+        case GDK_KEY_KP_4:\n+        case GDK_KEY_KP_5:\n+        case GDK_KEY_KP_6:\n+        case GDK_KEY_KP_7:\n+        case GDK_KEY_KP_8:\n+        case GDK_KEY_KP_9:\n+            return true;\n+        default:\n+            return false;\n+    }\n+}\n+\n@@ -303,1 +346,1 @@\n-    static int get_current_keyboard_group();\n+    static gint get_current_keyboard_group();\n@@ -306,1 +349,1 @@\n-int find_gdk_keycode_for_keyval(gint keyval)\n+gint find_gdk_keycode_for_keyval(gint keyval)\n@@ -308,1 +351,0 @@\n-    Display *xdisplay = gdk_x11_get_default_xdisplay();\n@@ -311,1 +353,1 @@\n-    GdkKeymap* keymap = gdk_keymap_get_default();\n+    GdkKeymap* keymap = gdk_keymap_get_for_display(gdk_display_get_default());\n@@ -317,1 +359,1 @@\n-    if (!gdk_keymap_get_entries_for_keyval(keymap, keyval, &keys, &n_keys))\n+    if (!gdk_keymap_get_entries_for_keyval(keymap, keyval, &keys, &n_keys)) {\n@@ -319,0 +361,1 @@\n+    }\n@@ -320,3 +363,2 @@\n-    int result = -1;\n-    if (n_keys == 1)\n-    {\n+    gint result = -1;\n+    if (n_keys == 1) {\n@@ -325,13 +367,17 @@\n-    else\n-    {\n-        int group = get_current_keyboard_group();\n-        result = search_keys(keys, n_keys, group);\n-\n-        \/\/ Java VK codes are Latin which means we might not be able\n-        \/\/ to find them on non-Latin layouts. The equivalent logic\n-        \/\/ in get_glass_key just assumes the first layout is Latin.\n-        \/\/ And for fixed-function keys like Space the GDK API is\n-        \/\/ likely to return results on group 0 even if it's not the\n-        \/\/ current group.\n-        if (result < 0 && group != 0)\n-            result = search_keys(keys, n_keys, 0);\n+    else {\n+        gint group = get_current_keyboard_group();\n+        bool requires_num_lock = keyval_requires_numlock(keyval);\n+        result = search_keys(keymap, keys, n_keys, group, requires_num_lock);\n+\n+        if (result < 0 && group != 0) {\n+            \/\/ Accelerators involving the characters A-Z must work even on\n+            \/\/ non-Latin layouts. If get_glass_key can't map to a Java key code\n+            \/\/ on the current layout it switches to layout 0 seeking a Latin\n+            \/\/ mapping. This is wrong in two ways: layout 0 might not be Latin\n+            \/\/ and even if it is Latin it should only be used for finding\n+            \/\/ KeyCodes A-Z. We continue the tradition of using group 0 but only\n+            \/\/ for A-Z.\n+            if (keyval >= GDK_KEY_a && keyval <= GDK_KEY_z) {\n+                result = search_keys(keymap, keys, n_keys, 0, requires_num_lock);\n+            }\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_key.cpp","additions":74,"deletions":28,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-int find_gdk_keycode_for_keyval(gint keyval);\n+gint find_gdk_keycode_for_keyval(gint keyval);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_key.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}