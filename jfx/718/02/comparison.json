{"files":[{"patch":"@@ -74,3 +74,1 @@\n-    GdkKeymapKey *keys;\n-    gint n_keys;\n-    if (gdk_keyval == -1) {\n+    if (gdk_keyval == -1)\n@@ -78,4 +76,2 @@\n-    }\n-    gdk_keymap_get_entries_for_keyval(gdk_keymap_get_default(),\n-            gdk_keyval, &keys, &n_keys);\n-    if (n_keys < 1) {\n+    int keycode = find_gdk_keycode_for_keyval(gdk_keyval);\n+    if (keycode == -1)\n@@ -83,2 +79,0 @@\n-    }\n-\n@@ -86,1 +80,1 @@\n-                      keys[0].keycode,\n+                      keycode,\n@@ -89,1 +83,0 @@\n-    g_free(keys);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassRobot.cpp","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -274,0 +274,8 @@\n+\n+    \/\/ ENTER is assigned to both Enter on the keypad and\n+    \/\/ Return on the main keyboard. Make sure we always\n+    \/\/ target the main keyboard.\n+    if (code == com_sun_glass_events_KeyEvent_VK_ENTER) {\n+        return GDK_KEY_Return;\n+    }\n+\n@@ -287,0 +295,95 @@\n+static gint search_keys(GdkKeymap* keymap, GdkKeymapKey* keys, gint n_keys, int search_group, bool requires_num_lock)\n+{\n+    gint result = -1;\n+\n+    \/\/ Keyvals that require numlock may be presented on a level other than 0.\n+    \/\/ Keys common to all layouts (e.g. Backspace, keys on the numeric keypad)\n+    \/\/ may be presented on layout 0 even if that's not the current layout. We\n+    \/\/ use translate_keyboard_state to find the effective group and level.\n+    GdkModifierType state = (GdkModifierType) 0;\n+    if (requires_num_lock) {\n+        state = GDK_MOD2_MASK;\n+    }\n+    for (gint i = 0; i < n_keys; ++i) {\n+        gint group = search_group;\n+        gint level = 0;\n+        gdk_keymap_translate_keyboard_state(keymap, keys[i].keycode, state, search_group,\n+            nullptr, &group, &level, nullptr);\n+        if (keys[i].group == group && keys[i].level == level) {\n+            result = keys[i].keycode;\n+            break;\n+        }\n+    }\n+    return result;\n+}\n+\n+static bool keyval_requires_numlock(gint keyval) {\n+    switch (keyval) {\n+        case GDK_KEY_KP_Equal:\n+        case GDK_KEY_KP_Multiply:\n+        case GDK_KEY_KP_Add:\n+        case GDK_KEY_KP_Subtract:\n+        case GDK_KEY_KP_Decimal:\n+        case GDK_KEY_KP_Separator:\n+        case GDK_KEY_KP_Divide:\n+        case GDK_KEY_KP_0:\n+        case GDK_KEY_KP_1:\n+        case GDK_KEY_KP_2:\n+        case GDK_KEY_KP_3:\n+        case GDK_KEY_KP_4:\n+        case GDK_KEY_KP_5:\n+        case GDK_KEY_KP_6:\n+        case GDK_KEY_KP_7:\n+        case GDK_KEY_KP_8:\n+        case GDK_KEY_KP_9:\n+            return true;\n+        default:\n+            return false;\n+    }\n+}\n+\n+extern \"C\" {\n+    static gint get_current_keyboard_group();\n+}\n+\n+gint find_gdk_keycode_for_keyval(gint keyval)\n+{\n+    GdkKeymapKey *keys = nullptr;\n+    gint n_keys = 0;\n+    GdkKeymap* keymap = gdk_keymap_get_for_display(gdk_display_get_default());\n+\n+    \/\/ GDK assigns different keyvals to upper and lower case\n+    \/\/ letters. We're looking for the level 0 character that\n+    \/\/ was originally used to assign the code in get_glass_key.\n+    keyval = gdk_keyval_to_lower(keyval);\n+    if (!gdk_keymap_get_entries_for_keyval(keymap, keyval, &keys, &n_keys)) {\n+        return -1;\n+    }\n+\n+    gint result = -1;\n+    if (n_keys == 1) {\n+        result = keys[0].keycode;\n+    }\n+    else {\n+        gint group = get_current_keyboard_group();\n+        bool requires_num_lock = keyval_requires_numlock(keyval);\n+        result = search_keys(keymap, keys, n_keys, group, requires_num_lock);\n+\n+        if (result < 0 && group != 0) {\n+            \/\/ Accelerators involving the characters A-Z must work even on\n+            \/\/ non-Latin layouts. If get_glass_key can't map to a Java key code\n+            \/\/ on the current layout it switches to layout 0 seeking a Latin\n+            \/\/ mapping. This is wrong in two ways: layout 0 might not be Latin\n+            \/\/ and even if it is Latin it should only be used for finding\n+            \/\/ KeyCodes A-Z. We continue the tradition of using group 0 but only\n+            \/\/ for A-Z.\n+            if (keyval >= GDK_KEY_a && keyval <= GDK_KEY_z) {\n+                result = search_keys(keymap, keys, n_keys, 0, requires_num_lock);\n+            }\n+        }\n+    }\n+\n+    g_free(keys);\n+    return result;\n+}\n+\n@@ -368,0 +471,16 @@\n+\/*\n+  * Determine which keyboard layout is active. This is the group\n+  * number in the Xkb state. There is no direct way to query this\n+  * in Gdk.\n+  *\/\n+ static gint get_current_keyboard_group()\n+ {\n+     Display* display = gdk_x11_display_get_xdisplay(gdk_display_get_default());\n+     if (isXkbAvailable(display)) {\n+         XkbStateRec xkbState;\n+         XkbGetState(display, XkbUseCoreKbd, &xkbState);\n+         return xkbState.group;\n+     }\n+     return -1;\n+ }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_key.cpp","additions":119,"deletions":0,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-\n+gint find_gdk_keycode_for_keyval(gint keyval);\n@@ -39,1 +39,0 @@\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_key.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}