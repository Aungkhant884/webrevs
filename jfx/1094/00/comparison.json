{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,0 +153,1 @@\n+    ERROR_JNI_UNEXPECTED(ERROR_BASE_JNI.code()+0x000F),\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/MediaError.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        if (javaEnv.clearException())\n+        if (javaEnv.clearException() || mid_toString == NULL)\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/Locator\/Locator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-jstring JavaStringFromNSString(JNIEnv *env, NSString *ns);\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/Utils\/JavaUtils.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,32 +44,0 @@\n-jstring JavaStringFromNSString(JNIEnv *env, NSString *ns)\n-{\n-    jstring outString = 0;\n-\n-    if (NULL != env && nil != ns) {\n-        jsize length;\n-        if (ns.length > INT32_MAX) {\n-            \/\/ overflow protection: NSUInteger is 64 bit ulong, jsize is 32 bit int\n-            length = INT32_MAX-1;\n-        } else {\n-            length = (jsize)ns.length;\n-        }\n-        unichar *strBuf = malloc(length * sizeof(unichar));\n-        if (!strBuf) {\n-            return 0;\n-        }\n-\n-        @try {\n-            [ns getCharacters:strBuf range:NSMakeRange(0, length)];\n-        }\n-        @catch (NSException *exception) {\n-            free(strBuf);\n-            return 0;\n-        }\n-\n-        outString = (*env)->NewString(env, strBuf, length);\n-        free(strBuf);\n-    }\n-\n-    return outString;\n-}\n-\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/Utils\/JavaUtils.m","additions":1,"deletions":33,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,4 @@\n-            pEnv->SetFloatArrayRegion(localPhases, 0, size, phases);\n+            if (!jenv.clearException()) {\n+                pEnv->SetFloatArrayRegion(localPhases, 0, size, phases);\n+                jenv.clearException();\n+            }\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/JavaBandsHolder.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        if (javaEnv.reportException())\n+        if (javaEnv.reportException() || createConnectionHolder == 0)\n@@ -72,1 +72,5 @@\n-    m_ConnectionHolder = env->NewGlobalRef(env->CallObjectMethod(jLocator, createConnectionHolder));\n+    jobject connectionHolder = env->CallObjectMethod(jLocator, createConnectionHolder);\n+    if (javaEnv.reportException() || NULL == connectionHolder)\n+        return false;\n+\n+    m_ConnectionHolder = env->NewGlobalRef(connectionHolder);\n@@ -86,3 +90,2 @@\n-        jclass klass = NULL;\n-        klass = env->FindClass(\"com\/sun\/media\/jfxmedia\/locator\/ConnectionHolder\");\n-        hasException = javaEnv.reportException();\n+        jclass klass = env->FindClass(\"com\/sun\/media\/jfxmedia\/locator\/ConnectionHolder\");\n+        hasException = (javaEnv.reportException() || (NULL == klass));\n@@ -93,1 +96,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_BufferFID));\n@@ -99,1 +102,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_NeedBufferMID));\n@@ -105,1 +108,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_ReadNextBlockMID));\n@@ -111,1 +114,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_ReadBlockMID));\n@@ -117,1 +120,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_IsSeekableMID));\n@@ -123,1 +126,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_IsRandomAccessMID));\n@@ -129,1 +132,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SeekMID));\n@@ -135,1 +138,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_CloseConnectionMID));\n@@ -141,1 +144,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_PropertyMID));\n@@ -182,0 +185,3 @@\n+            if (javaEnv.clearException()) {\n+                result = -2;\n+            }\n@@ -184,4 +190,0 @@\n-\n-        if (javaEnv.clearException()) {\n-            result = -2;\n-        }\n@@ -203,0 +205,3 @@\n+            if (javaEnv.clearException()) {\n+                result = -2;\n+            }\n@@ -205,4 +210,0 @@\n-\n-        if (javaEnv.clearException()) {\n-            result = -2;\n-        }\n@@ -241,0 +242,1 @@\n+            javaEnv.clearException();\n@@ -243,2 +245,0 @@\n-\n-        javaEnv.reportException();\n@@ -260,0 +260,1 @@\n+            javaEnv.clearException();\n@@ -262,2 +263,0 @@\n-\n-        javaEnv.reportException();\n@@ -279,0 +278,1 @@\n+            javaEnv.clearException();\n@@ -281,2 +281,0 @@\n-\n-        javaEnv.reportException();\n@@ -297,0 +295,1 @@\n+            javaEnv.clearException();\n@@ -298,2 +297,0 @@\n-\n-            javaEnv.reportException();\n@@ -317,0 +314,1 @@\n+            javaEnv.clearException();\n@@ -319,2 +317,0 @@\n-\n-        javaEnv.reportException();\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/JavaInputStreamCallbacks.cpp","additions":29,"deletions":33,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        if (!javaEnv.clearException()) {\n+        if (!javaEnv.clearException() && mediaUtilsClass != NULL) {\n@@ -52,1 +52,0 @@\n-            char* message = NULL == warningMessage ? (char*)\"\" : (char*)warningMessage;\n@@ -54,0 +53,1 @@\n+                char* message = NULL == warningMessage ? (char*)\"\" : (char*)warningMessage;\n@@ -55,1 +55,1 @@\n-                if (!javaEnv.clearException()) {\n+                if (!javaEnv.clearException() && jmessage != NULL) {\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/JavaMediaWarningListener.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        hasException = javaEnv.reportException();\n+        hasException = (javaEnv.reportException() || (NULL == m_SendWarningMethod));\n@@ -93,1 +93,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendPlayerMediaErrorEventMethod));\n@@ -99,1 +99,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendPlayerHaltEventMethod));\n@@ -105,1 +105,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendPlayerStateEventMethod));\n@@ -111,1 +111,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendNewFrameEventMethod));\n@@ -117,1 +117,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendFrameSizeChangedEventMethod));\n@@ -123,1 +123,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendAudioTrackEventMethod));\n@@ -129,1 +129,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendVideoTrackEventMethod));\n@@ -135,1 +135,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendSubtitleTrackEventMethod));\n@@ -141,1 +141,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendMarkerEventMethod));\n@@ -147,1 +147,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendBufferProgressEventMethod));\n@@ -153,1 +153,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendDurationUpdateEventMethod));\n@@ -159,1 +159,1 @@\n-            hasException = javaEnv.reportException();\n+            hasException = (javaEnv.reportException() || (NULL == m_SendAudioSpectrumEventMethod));\n@@ -193,1 +193,1 @@\n-                if (!jenv.reportException()) {\n+                if (!jenv.reportException() && jmessage != NULL) {\n@@ -198,1 +198,0 @@\n-            }\n@@ -200,1 +199,0 @@\n-            if (jmessage) {\n@@ -237,1 +235,1 @@\n-            if (!jenv.reportException()) {\n+            if (!jenv.reportException() && jmessage != NULL) {\n@@ -239,3 +237,0 @@\n-            }\n-\n-            if (jmessage) {\n@@ -243,0 +238,1 @@\n+                bSucceeded = !jenv.reportException();\n@@ -246,2 +242,0 @@\n-\n-            bSucceeded = !jenv.reportException();\n@@ -360,1 +354,1 @@\n-            if (!jenv.reportException()) {\n+            if (!jenv.reportException() && name != NULL) {\n@@ -363,1 +357,1 @@\n-                if (!jenv.reportException()) {\n+                if (!jenv.reportException() && language != NULL) {\n@@ -392,0 +386,3 @@\n+                    bSucceeded = !jenv.reportException();\n+\n+                    pEnv->DeleteLocalRef(language);\n@@ -393,1 +390,0 @@\n-            }\n@@ -395,1 +391,0 @@\n-            if (name) {\n@@ -399,4 +394,0 @@\n-            if (language) {\n-                pEnv->DeleteLocalRef(language);\n-            }\n-\n@@ -404,2 +395,0 @@\n-\n-            bSucceeded = !jenv.reportException();\n@@ -420,3 +409,2 @@\n-            jstring name = NULL;\n-            name = pEnv->NewStringUTF(pTrack->GetName().c_str());\n-            if (!jenv.reportException()) {\n+            jstring name = pEnv->NewStringUTF(pTrack->GetName().c_str());\n+            if (!jenv.reportException() && name != NULL) {\n@@ -427,1 +415,1 @@\n-            }\n+                bSucceeded = !jenv.reportException();\n@@ -429,1 +417,0 @@\n-            if (name) {\n@@ -434,2 +421,0 @@\n-\n-            bSucceeded = !jenv.reportException();\n@@ -453,1 +438,1 @@\n-            if (!jenv.reportException()) {\n+            if (!jenv.reportException() && name != NULL) {\n@@ -455,1 +440,1 @@\n-                if (!jenv.reportException()) {\n+                if (!jenv.reportException() && language != NULL) {\n@@ -459,0 +444,3 @@\n+                    bSucceeded = !jenv.reportException();\n+\n+                    pEnv->DeleteLocalRef(language);\n@@ -460,1 +448,0 @@\n-            }\n@@ -462,1 +449,0 @@\n-            if (name) {\n@@ -466,4 +452,0 @@\n-            if (language) {\n-                pEnv->DeleteLocalRef(language);\n-            }\n-\n@@ -471,2 +453,0 @@\n-\n-            bSucceeded = !jenv.reportException();\n@@ -487,3 +467,2 @@\n-            jobject jname = NULL;\n-            jname = pEnv->NewStringUTF(name.c_str());\n-            if (!jenv.reportException()) {\n+            jobject jname = pEnv->NewStringUTF(name.c_str());\n+            if (!jenv.reportException() && jname != NULL) {\n@@ -492,1 +471,1 @@\n-            }\n+                bSucceeded = !jenv.reportException();\n@@ -494,1 +473,0 @@\n-            if (jname) {\n@@ -499,2 +477,0 @@\n-\n-            bSucceeded = !jenv.reportException();\n@@ -574,0 +550,1 @@\n+    CJavaEnvironment jenv(env);\n@@ -575,1 +552,1 @@\n-    if( classe == NULL )\n+    if (jenv.reportException() || classe == NULL)\n@@ -578,1 +555,1 @@\n-    if( *cid == NULL)\n+    if (*cid == NULL)\n@@ -581,1 +558,1 @@\n-        if( *cid == NULL )\n+        if (jenv.reportException() || *cid == NULL)\n@@ -589,0 +566,1 @@\n+    jenv.reportException();\n@@ -640,0 +618,2 @@\n+    CJavaEnvironment jenv(env);\n+\n@@ -641,1 +621,1 @@\n-    if (durationClass == NULL)\n+    if (jenv.reportException() || durationClass == NULL)\n@@ -647,1 +627,1 @@\n-        if( constructorID == NULL )\n+        if (jenv.reportException() || constructorID == NULL)\n@@ -655,0 +635,1 @@\n+    jenv.reportException();\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/JavaPlayerEventDispatcher.cpp","additions":43,"deletions":62,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,5 +45,3 @@\n-        if (!klass) {\n-            \/\/ might have caused an exception\n-            if (env->ExceptionOccurred()) {\n-                env->ExceptionClear();\n-            }\n+        \/\/ might have caused an exception\n+        if (env->ExceptionCheck()) {\n+            env->ExceptionClear();\n@@ -54,0 +52,4 @@\n+        if (env->ExceptionCheck() || klass != NULL) {\n+            env->ExceptionClear();\n+            return; \/\/ This shouldn't happen...\n+        }\n@@ -55,1 +57,1 @@\n-            if (env->ExceptionOccurred()) {\n+            if (env->ExceptionCheck()) {\n@@ -58,2 +60,1 @@\n-            \/\/ This shouldn't happen...\n-            return;\n+\n@@ -103,1 +104,1 @@\n-            if (!clearException()) {\n+            if (!clearException() && cid != NULL) {\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/JniUtils.cpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    if (javaEnv.clearException()) {\n+    if (javaEnv.clearException() && jmsg != NULL) {\n@@ -79,1 +79,1 @@\n-    bool hasException = javaEnv.clearException();\n+    bool hasException = (javaEnv.clearException() || (jsourceClass == NULL));\n@@ -82,1 +82,1 @@\n-        hasException = javaEnv.clearException();\n+        hasException = (javaEnv.clearException() || (jsourceMethod == NULL));\n@@ -87,1 +87,1 @@\n-        hasException = javaEnv.clearException();\n+        hasException = (javaEnv.clearException() || (jmsg == NULL));\n@@ -124,1 +124,1 @@\n-        if (javaEnv.clearException()) {\n+        if (javaEnv.clearException() || NULL == local_cls) {\n@@ -128,19 +128,17 @@\n-        if (NULL != local_cls) {\n-            \/\/ Get global reference\n-            m_cls = (jclass)pEnv->NewWeakGlobalRef(local_cls);\n-            pEnv->DeleteLocalRef(local_cls);\n-\n-            if (NULL != m_cls) {\n-                m_logMsg1Method = pEnv->GetStaticMethodID(m_cls, \"logMsg\", \"(ILjava\/lang\/String;)V\");\n-                if (javaEnv.clearException()) {\n-                   return false;\n-                }\n-\n-                m_logMsg2Method = pEnv->GetStaticMethodID(m_cls, \"logMsg\", \"(ILjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V\");\n-                if (javaEnv.clearException()) {\n-                   return false;\n-                }\n-\n-                if (NULL != m_logMsg1Method && NULL != m_logMsg2Method) {\n-                    m_areJMethodIDsInitialized = true;\n-                }\n+        \/\/ Get global reference\n+        m_cls = (jclass)pEnv->NewWeakGlobalRef(local_cls);\n+        pEnv->DeleteLocalRef(local_cls);\n+\n+        if (NULL != m_cls) {\n+            m_logMsg1Method = pEnv->GetStaticMethodID(m_cls, \"logMsg\", \"(ILjava\/lang\/String;)V\");\n+            if (javaEnv.clearException()) {\n+                return false;\n+            }\n+\n+            m_logMsg2Method = pEnv->GetStaticMethodID(m_cls, \"logMsg\", \"(ILjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V\");\n+            if (javaEnv.clearException()) {\n+                return false;\n+            }\n+\n+            if (NULL != m_logMsg1Method && NULL != m_logMsg2Method) {\n+                m_areJMethodIDsInitialized = true;\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/Logger.cpp","additions":23,"deletions":25,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-            if (jenv.reportException()) {\n+            if (jenv.reportException() || bandClass == NULL) {\n@@ -76,1 +76,1 @@\n-                if (jenv.reportException()) {\n+                if (jenv.reportException() || mid_EqualizerBandConstructor == NULL) {\n@@ -83,1 +83,0 @@\n-            env->DeleteLocalRef(bandClass);\n@@ -85,0 +84,1 @@\n+            env->DeleteLocalRef(bandClass);\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/NativeAudioEqualizer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,6 @@\n-        return env->NewDirectByteBuffer(dataPtr, capacity);\n+        jobject buffer = env->NewDirectByteBuffer(dataPtr, capacity);\n+        if (env->ExceptionCheck()) {\n+            env->ExceptionClear();\n+            return NULL;\n+        }\n+        return buffer;\n@@ -213,0 +218,5 @@\n+        if (env->ExceptionCheck()) {\n+            env->ExceptionClear();\n+            return NULL;\n+        }\n+\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/NativeVideoBuffer.cpp","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,1 @@\n-        jclass vdbClass = env->FindClass(\"com\/sun\/media\/jfxmedia\/control\/VideoDataBuffer\");\n-        jclass formatClass = env->FindClass(\"com\/sun\/media\/jfxmedia\/control\/VideoDataBuffer\/Format\");\n+        CJavaEnvironment jenv(env);\n@@ -57,1 +56,2 @@\n-        if (!vdbClass) {\n+        jclass vdbClass = env->FindClass(\"com\/sun\/media\/jfxmedia\/control\/VideoDataBuffer\");\n+        if (jenv.clearException() || vdbClass == NULL) {\n@@ -60,1 +60,3 @@\n-        if (!formatClass) {\n+\n+        jclass formatClass = env->FindClass(\"com\/sun\/media\/jfxmedia\/control\/VideoDataBuffer\/Format\");\n+        if (jenv.clearException() || formatClass == NULL) {\n@@ -65,2 +67,2 @@\n-        if (!vdbCtorID) {\n-            throw \"Internal Error: Can't get VideoDataBuffer constructor.\");\n+        if (jenv.clearException() || vdbCtorID == NULL) {\n+            throw \"Internal Error: Can't get VideoDataBuffer constructor.\";\n@@ -70,1 +72,1 @@\n-        if (!vdbGetBufferID) {\n+        if (jenv.clearException() || vdbGetBufferID == NULL) {\n@@ -75,1 +77,1 @@\n-        if (!vdbGetWidthID) {\n+        if (jenv.clearException() || vdbGetWidthID == NULL) {\n@@ -80,1 +82,1 @@\n-        if (!vdbGetHeightID) {\n+        if (jenv.clearException() || vdbGetHeightID == NULL) {\n@@ -85,0 +87,1 @@\n+        if (jenv.clearException() || vdbGetEncodedWidthID == NULL) {\n@@ -90,0 +93,1 @@\n+        if (jenv.clearException() || vdbGetEncodedWidthID == NULL) {\n@@ -95,1 +99,1 @@\n-        if (!vdbGetPlaneCountID) {\n+        if (jenv.clearException() || vdbGetPlaneCountID == NULL) {\n@@ -100,1 +104,1 @@\n-        if (!vdbGetPlaneStridesID) {\n+        if (jenv.clearException() || vdbGetPlaneStridesID == NULL) {\n@@ -105,1 +109,1 @@\n-        if (!vdbGetFormatID) {\n+        if (jenv.clearException() || vdbGetFormatID == NULL) {\n@@ -110,1 +114,1 @@\n-        if (!formatGetNativeTypeID) {\n+        if (jenv.clearException() || formatGetNativeTypeID == NULL) {\n@@ -120,0 +124,1 @@\n+    CJavaEnvironment jenv(env);\n@@ -121,2 +126,1 @@\n-    if (ieeKlass) {\n-        \/\/ FIXME: can we just pass NULL for the message string?\n+    if (!jenv.clearException() && ieeKlass != NULL) {\n@@ -130,1 +134,1 @@\n-    if (env->ExceptionOccurred()) {\n+    if (env->ExceptionCheck()) {\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/jni\/com_sun_media_jfxmediaimpl_NativeVideoConverter.cpp","additions":21,"deletions":17,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,0 +118,3 @@\n+                if (env->ExceptionCheck()) {\n+                    env->ExceptionClear();\n+                }\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/gstreamer\/GstMedia.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,0 +137,4 @@\n+    if (env->ExceptionCheck()) {\n+        env->ExceptionClear();\n+        return ERROR_JNI_UNEXPECTED;\n+    }\n@@ -297,0 +301,4 @@\n+    if (env->ExceptionCheck()) {\n+        env->ExceptionClear();\n+        return ERROR_JNI_UNEXPECTED;\n+    }\n@@ -352,0 +360,4 @@\n+    if (env->ExceptionCheck()) {\n+        env->ExceptionClear();\n+        return ERROR_JNI_UNEXPECTED;\n+    }\n@@ -382,0 +394,4 @@\n+    if (env->ExceptionCheck()) {\n+        env->ExceptionClear();\n+        return ERROR_JNI_UNEXPECTED;\n+    }\n@@ -437,0 +453,4 @@\n+    if (env->ExceptionCheck()) {\n+        env->ExceptionClear();\n+        return ERROR_JNI_UNEXPECTED;\n+    }\n@@ -492,0 +512,4 @@\n+    if (env->ExceptionCheck()) {\n+        env->ExceptionClear();\n+        return ERROR_JNI_UNEXPECTED;\n+    }\n","filename":"modules\/javafx.media\/src\/main\/native\/jfxmedia\/platform\/gstreamer\/GstMediaPlayer.cpp","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"}]}