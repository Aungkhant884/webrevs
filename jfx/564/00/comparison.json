{"files":[{"patch":"@@ -359,1 +359,1 @@\n-            if (runs.length != 0) {\n+            if (runs != null && runs.length != 0) {\n@@ -386,4 +386,1 @@\n-        if (isSpan()) {\n-            \/* List of run is initialized when the TextFlow layout the children *\/\n-            getParent().layout();\n-        } else {\n+        if (!isSpan()) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/Text.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+package test.javafx.scene.text;\n+\n+import org.junit.BeforeClass;\n+import javafx.application.Platform;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import javafx.stage.Stage;\n+import javafx.scene.Node;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.ListView;\n+import javafx.scene.control.ScrollPane;\n+import javafx.scene.text.Text;\n+import javafx.scene.text.TextFlow;\n+import javafx.scene.layout.VBox;\n+import org.junit.Test;\n+import test.util.Util;\n+\n+public class TextFlowCrashTest {\n+\n+    private boolean exceptionWasThrown;\n+\n+    @BeforeClass\n+    public static void initFX() throws Exception {\n+        CountDownLatch startupLatch = new CountDownLatch(1);\n+        Platform.startup(() -> {\n+            Platform.setImplicitExit(false);\n+            startupLatch.countDown();\n+        });\n+        assertTrue(\"Timeout waiting for FX runtime to start\", startupLatch.await(15, TimeUnit.SECONDS));\n+    }\n+\n+    @Test\n+    public void testTextflowCrash() {\n+        Util.runAndWait(() -> {\n+            Stage stage = new Stage();\n+            VBox root = new VBox();\n+            onEveryNode(root);\n+            Platform.runLater(() -> {\n+                root.getChildren().add(getBuggyNode());\n+            });\n+            stage.setScene(new Scene(root,\n+                    200,\n+                    200));\n+            stage.show();\n+        });\n+\n+        Util.runAndWait(() -> {\n+            assertFalse(exceptionWasThrown);\n+        });\n+    }\n+\n+    public ScrollPane getBuggyNode() {\n+        ListView<String> listView = new ListView();\n+        listView.getItems().add(\"AAA\");\n+        listView.setCellFactory((view) -> {\n+            ListCell cell = new ListCell();\n+            TextFlow flow = new TextFlow();\n+            flow.getChildren().add(new Text(\"a\"));\n+            Text text2 = new Text(\"b\");\n+            text2.sceneProperty().addListener((p,o,n) -> {\n+                try {\n+                    text2.getBoundsInParent();\n+                } catch (Throwable e) {\n+                    exceptionWasThrown = true;\n+                    throw e;\n+                }\n+            });\n+            flow.getChildren().add(text2);\n+            cell.setGraphic(flow);\n+            onEveryNode(cell);\n+            return cell;\n+        });\n+        ScrollPane scrollPane = new ScrollPane(listView);\n+        onEveryNode(listView);\n+        onEveryNode(scrollPane);\n+        return scrollPane;\n+    }\n+\n+    public void onEveryNode(Node node) {\n+        node.boundsInParentProperty().addListener((p,o,n) -> {\n+        });\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/text\/TextFlowCrashTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}