{"files":[{"patch":"@@ -359,1 +359,1 @@\n-            if (runs.length != 0) {\n+            if (runs != null && runs.length != 0) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/Text.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.scene.text;\n+\n+import javafx.application.Platform;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import javafx.stage.Stage;\n+import javafx.scene.Node;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.ListView;\n+import javafx.scene.control.ScrollPane;\n+import javafx.scene.text.Text;\n+import javafx.scene.text.TextFlow;\n+import javafx.scene.layout.VBox;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import test.util.Util;\n+\n+public class TextFlowCrashTest {\n+\n+    private boolean exceptionWasThrown;\n+\n+    @BeforeAll\n+    public static void initFX() throws Exception {\n+        CountDownLatch startupLatch = new CountDownLatch(1);\n+        Platform.startup(() -> {\n+            Platform.setImplicitExit(false);\n+            startupLatch.countDown();\n+        });\n+        assertTrue(startupLatch.await(15, TimeUnit.SECONDS), \"Timeout waiting for FX runtime to start\");\n+    }\n+\n+    @Test\n+    public void testTextflowCrash() {\n+        Util.runAndWait(() -> {\n+            Stage stage = new Stage();\n+            VBox root = new VBox();\n+            addBoundsListener(root);\n+            Platform.runLater(() -> {\n+                root.getChildren().add(getBuggyNode());\n+            });\n+            stage.setScene(new Scene(root,\n+                    200,\n+                    200));\n+            stage.show();\n+        });\n+\n+        Util.runAndWait(() -> {\n+            assertFalse(exceptionWasThrown);\n+        });\n+    }\n+\n+    public ScrollPane getBuggyNode() {\n+        ListView<String> listView = new ListView();\n+        listView.getItems().add(\"AAA\");\n+        listView.setCellFactory((view) -> {\n+            ListCell cell = new ListCell();\n+            TextFlow flow = new TextFlow();\n+            flow.getChildren().add(new Text(\"a\"));\n+            Text text2 = new Text(\"b\");\n+            text2.sceneProperty().addListener((p,o,n) -> {\n+                try {\n+                    text2.getBoundsInParent();\n+                } catch (Throwable e) {\n+                    exceptionWasThrown = true;\n+                    throw e;\n+                }\n+            });\n+            flow.getChildren().add(text2);\n+            cell.setGraphic(flow);\n+            addBoundsListener(cell);\n+            return cell;\n+        });\n+        ScrollPane scrollPane = new ScrollPane(listView);\n+        addBoundsListener(listView);\n+        addBoundsListener(scrollPane);\n+        return scrollPane;\n+    }\n+\n+    public void addBoundsListener(Node node) {\n+        node.boundsInParentProperty().addListener((p,o,n) -> {\n+        });\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/text\/TextFlowCrashTest.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}