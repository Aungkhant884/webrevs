{"files":[{"patch":"@@ -98,4 +98,6 @@\n-     * Creates a {@link Subscription} on this {@code Observable} which calls\n-     * {@code invalidationSubscriber} whenever it becomes invalid. If the same\n-     * subscriber is subscribed more than once, then it will be notified more\n-     * than once. That is, no check is made to ensure uniqueness.\n+     * Creates a {@code Subscription} on this {@code Observable} which calls\n+     * {@code invalidationSubscriber} whenever it becomes invalid. The provided\n+     * subscriber is akin to an {@code InvalidationListener} without the\n+     * {@code Observable} parameter. If the same subscriber is subscribed more\n+     * than once, then it will be notified more than once. That is, no check is\n+     * made to ensure uniqueness.\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/Observable.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,2 @@\n-     * Implementors must ensure the implementation is idempotent.\n+     * Implementors must ensure the implementation is idempotent (a no-op\n+     * if called more than once).\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/Subscription.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-     * Creates a {@link Subscription} on this {@code Observable} which calls the given\n+     * Creates a {@code Subscription} on this {@code ObservableValue} which calls the given\n@@ -308,0 +308,2 @@\n+     * The provided subscriber is akin to a {@code ChangeListener} without the\n+     * {@code ObservableValue} parameter.\n@@ -309,1 +311,1 @@\n-     * The parameters supplied to the {@link BiConsumer} are the old and new value\n+     * The parameters supplied to the {@link BiConsumer} are the old and new values,\n@@ -341,3 +343,5 @@\n-     * Creates a {@link Subscription} on this value which immediately provides\n-     * the current value to the given {@code valueSubscriber}, followed by any\n-     * subsequent values whenever its value changes.\n+     * Creates a {@code Subscription} on this {@code ObservableValue} which immediately\n+     * provides the current value to the given {@code valueSubscriber}, followed by any\n+     * subsequent values whenever its value changes. The {@code valueSubscriber} is called\n+     * for convenience since usually the user will want to initialize a value\n+     * and then update on changes.\n@@ -356,1 +360,1 @@\n-     * @param valueSubscriber a {@link Consumer} to supply with the values of this\n+     * @param valueSubscriber a {@code Consumer} to supply with the values of this\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/value\/ObservableValue.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"}]}