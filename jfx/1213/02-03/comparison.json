{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import java.util.HashMap;\n@@ -84,1 +83,0 @@\n-import org.junit.jupiter.api.Assertions;\n@@ -100,1 +98,1 @@\n-    private static final boolean FAIL_FAST = true;\n+    private static final boolean FAIL_FAST = !true;\n@@ -102,0 +100,1 @@\n+    \/\/ list all descendants of Control class.\n@@ -180,6 +179,0 @@\n-\n-        HashMap<String, Method> h = new HashMap<>();\n-        for (Method m: methods) {\n-            h.put(m.getName(), m);\n-        }\n-\n@@ -188,11 +181,2 @@\n-            if (name.endsWith(\"Property\")) {\n-                int mod = m.getModifiers();\n-                if (Modifier.isPublic(mod)) {\n-                    if (FAIL_FAST) {\n-                        Assertions.assertTrue(Modifier.isFinal(mod), err(m, \"is not final\"));\n-                    } else {\n-                        if (!Modifier.isFinal(mod)) {\n-                            System.err.println(err(m, \"is not final\"));\n-                        }\n-                    }\n-                }\n+            if (name.endsWith(\"Property\") && (m.getParameterCount() == 0)) {\n+                checkModifiers(m);\n@@ -201,3 +185,3 @@\n-                check(h, propName, \"get\", 0);\n-                check(h, propName, \"set\", 1);\n-                check(h, propName, \"is\", 0);\n+                check(methods, propName, \"get\", 0);\n+                check(methods, propName, \"set\", 1);\n+                check(methods, propName, \"is\", 0);\n@@ -208,1 +192,1 @@\n-    private void check(HashMap<String, Method> map, String name, String prefix, int numArgs) {\n+    private void check(Method[] methods, String propName, String prefix, int numArgs) {\n@@ -211,2 +195,2 @@\n-        sb.append(Character.toUpperCase(name.charAt(0)));\n-        sb.append(name, 1, name.length());\n+        sb.append(Character.toUpperCase(propName.charAt(0)));\n+        sb.append(propName, 1, propName.length());\n@@ -214,3 +198,2 @@\n-        String s = sb.toString();\n-        Method m = map.get(s);\n-        if (m != null) {\n+        String name = sb.toString();\n+        for (Method m: methods) {\n@@ -218,9 +201,3 @@\n-                int mod = m.getModifiers();\n-                if (Modifier.isPublic(mod)) {\n-                    if (FAIL_FAST) {\n-                        Assertions.assertTrue(Modifier.isFinal(mod), err(m, \"is not final\"));\n-                    } else {\n-                        if (!Modifier.isFinal(mod)) {\n-                            System.err.println(err(m, \"is not final\"));\n-                        }\n-                    }\n+                if (name.equals(m.getName())) {\n+                    checkModifiers(m);\n+                    return;\n@@ -232,2 +209,10 @@\n-    private String err(Method method, String message) {\n-        return method + \" \" + message;\n+    private void checkModifiers(Method m) {\n+        int mod = m.getModifiers();\n+        if (Modifier.isPublic(mod) && !Modifier.isFinal(mod)) {\n+            String msg = m + \" is not final.\";\n+            if (FAIL_FAST) {\n+                throw new AssertionError(msg);\n+            } else {\n+                System.err.println(msg);\n+            }\n+        }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ControlPropertiesTest.java","additions":25,"deletions":40,"binary":false,"changes":65,"status":"modified"}]}