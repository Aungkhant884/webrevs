{"files":[{"patch":"@@ -3,1 +3,3 @@\n-1. Download respective libxml source tarball from here: http:\/\/xmlsoft.org\/sources\n+1. Download respective libxml source tarball from here: http:\/\/xmlsoft.org\/sources.\n+   Alternatively we can also clone the libxml repo from github. (url- https:\/\/gitlab.gnome.org\/GNOME\/libxml2.git)\n+\n@@ -5,0 +7,1 @@\n+\n@@ -18,1 +21,0 @@\n-   Use git clean command. (git clean -df modules\/)\n@@ -26,0 +28,1 @@\n+\n@@ -29,1 +32,1 @@\n-6. Configure libxml.\n+7. Configure libxml.\n@@ -33,2 +36,1 @@\n-6.1 Copy `libxml\\src\\include\\libxml\\xmlversion.h` to `libxml\\linux\\include\\libxml\\xmlversion.h` and follow same guidelines as Windows to retain changes from our repo.\n-6.2 Copy libxml\\src\\config.h to libxml\\linux\\config.h\n+7.1 Copy `libxml\\src\\include\\libxml\\xmlversion.h` to `libxml\\linux\\include\\libxml\\xmlversion.h` and follow same guidelines as Windows to retain changes from our repo.\n@@ -36,3 +38,7 @@\n-7. Helper commands for removing leading tabs and trailing whitespaces.\n-7.1 > cd modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxml\n-7.2 Remove tabs from source files:\n+7.2 Copy libxml\\src\\config.h to libxml\\linux\\config.h\n+\n+8. Helper commands for removing tabs and trailing whitespaces from source files(.h and .c).\n+\n+8.1 > cd modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxml\n+\n+8.2 Remove tabs from source files:\n@@ -42,2 +48,4 @@\n-7.3 Remove trailing whitespaces:\n-    > find . -type f -exec sed -i '' 's\/[[:space:]]\\{1,\\}$\/\/' {} \\+\n+\n+8.3 Remove trailing whitespaces from source files:\n+    > find src\/ -name “*.c” -type f -exec sed --in-place 's\/[[:space:]]\\+$\/\/' {} \\+\n+    > find src\/ -name “*.h” -type f -exec sed --in-place 's\/[[:space:]]\\+$\/\/' {} \\+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxml\/UPDATING.txt","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -16,1 +16,1 @@\n-           testdict runxmlconf testrecurse testlimits\n+\t       testdict runxmlconf testrecurse testlimits\n@@ -32,3 +32,3 @@\n-             $(LIBXML2_VERSION_SCRIPT) \\\n-             -version-info $(LIBXML_VERSION_INFO) \\\n-             $(MODULE_PLATFORM_LIBS)\n+\t\t     $(LIBXML2_VERSION_SCRIPT) \\\n+\t\t     -version-info $(LIBXML_VERSION_INFO) \\\n+\t\t     $(MODULE_PLATFORM_LIBS)\n@@ -49,10 +49,10 @@\n-        parser.c tree.c hash.c list.c xmlIO.c xmlmemory.c uri.c  \\\n-        valid.c xlink.c HTMLparser.c HTMLtree.c debugXML.c xpath.c  \\\n-        xpointer.c xinclude.c nanohttp.c nanoftp.c \\\n-        $(docb_sources) \\\n-        catalog.c globals.c threads.c c14n.c xmlstring.c buf.c \\\n-        xmlregexp.c xmlschemas.c xmlschemastypes.c xmlunicode.c \\\n-        $(trio_sources) \\\n-        xmlreader.c relaxng.c dict.c SAX2.c \\\n-        xmlwriter.c legacy.c chvalid.c pattern.c xmlsave.c \\\n-        xmlmodule.c schematron.c xzlib.c\n+\t\tparser.c tree.c hash.c list.c xmlIO.c xmlmemory.c uri.c  \\\n+\t\tvalid.c xlink.c HTMLparser.c HTMLtree.c debugXML.c xpath.c  \\\n+\t\txpointer.c xinclude.c nanohttp.c nanoftp.c \\\n+\t\t$(docb_sources) \\\n+\t\tcatalog.c globals.c threads.c c14n.c xmlstring.c buf.c \\\n+\t\txmlregexp.c xmlschemas.c xmlschemastypes.c xmlunicode.c \\\n+\t\t$(trio_sources) \\\n+\t\txmlreader.c relaxng.c dict.c SAX2.c \\\n+\t\txmlwriter.c legacy.c chvalid.c pattern.c xmlsave.c \\\n+\t\txmlmodule.c schematron.c xzlib.c\n@@ -70,1 +70,1 @@\n-runtest_LDFLAGS =\n+runtest_LDFLAGS = \n@@ -75,1 +75,1 @@\n-testrecurse_LDFLAGS =\n+testrecurse_LDFLAGS = \n@@ -80,1 +80,1 @@\n-testlimits_LDFLAGS =\n+testlimits_LDFLAGS = \n@@ -85,1 +85,1 @@\n-testchar_LDFLAGS =\n+testchar_LDFLAGS = \n@@ -90,1 +90,1 @@\n-testdict_LDFLAGS =\n+testdict_LDFLAGS = \n@@ -95,1 +95,1 @@\n-runsuite_LDFLAGS =\n+runsuite_LDFLAGS = \n@@ -100,1 +100,1 @@\n-xmllint_LDFLAGS =\n+xmllint_LDFLAGS = \n@@ -105,1 +105,1 @@\n-testSAX_LDFLAGS =\n+testSAX_LDFLAGS = \n@@ -110,1 +110,1 @@\n-testHTML_LDFLAGS =\n+testHTML_LDFLAGS = \n@@ -115,1 +115,1 @@\n-xmlcatalog_LDFLAGS =\n+xmlcatalog_LDFLAGS = \n@@ -120,1 +120,1 @@\n-testXPath_LDFLAGS =\n+testXPath_LDFLAGS = \n@@ -125,1 +125,1 @@\n-testC14N_LDFLAGS =\n+testC14N_LDFLAGS = \n@@ -130,1 +130,1 @@\n-testThreads_LDFLAGS =\n+testThreads_LDFLAGS = \n@@ -135,1 +135,1 @@\n-testURI_LDFLAGS =\n+testURI_LDFLAGS = \n@@ -140,1 +140,1 @@\n-testRegexp_LDFLAGS =\n+testRegexp_LDFLAGS = \n@@ -145,1 +145,1 @@\n-testAutomata_LDFLAGS =\n+testAutomata_LDFLAGS = \n@@ -150,1 +150,1 @@\n-testSchemas_LDFLAGS =\n+testSchemas_LDFLAGS = \n@@ -155,1 +155,1 @@\n-testRelax_LDFLAGS =\n+testRelax_LDFLAGS = \n@@ -160,1 +160,1 @@\n-testReader_LDFLAGS =\n+testReader_LDFLAGS = \n@@ -165,1 +165,1 @@\n-testModule_LDFLAGS =\n+testModule_LDFLAGS = \n@@ -175,2 +175,2 @@\n-    -@(if [ \"$(PYTHON)\" != \"\" ] ; then \\\n-        $(PYTHON) $(srcdir)\/gentest.py $(srcdir) ; fi )\n+\t-@(if [ \"$(PYTHON)\" != \"\" ] ; then \\\n+\t    $(PYTHON) $(srcdir)\/gentest.py $(srcdir) ; fi )\n@@ -181,2 +181,2 @@\n-    -@(if [ \"$(PYTHON)\" != \"\" ] ; then \\\n-        $(PYTHON) $(srcdir)\/gentest.py $(srcdir) ; fi )\n+\t-@(if [ \"$(PYTHON)\" != \"\" ] ; then \\\n+\t    $(PYTHON) $(srcdir)\/gentest.py $(srcdir) ; fi )\n@@ -187,1 +187,1 @@\n-testapi_LDFLAGS =\n+testapi_LDFLAGS = \n@@ -192,1 +192,1 @@\n-runxmlconf_LDFLAGS =\n+runxmlconf_LDFLAGS = \n@@ -197,1 +197,1 @@\n-#testOOM_LDFLAGS =\n+#testOOM_LDFLAGS = \n@@ -203,11 +203,11 @@\n-    [ -d test   ] || $(LN_S) $(srcdir)\/test   .\n-    [ -d result ] || $(LN_S) $(srcdir)\/result .\n-    $(CHECKER) .\/runtest$(EXEEXT) && \\\n-        $(CHECKER) .\/testrecurse$(EXEEXT) && \\\n-        ASAN_OPTIONS=\"$$ASAN_OPTIONS:detect_leaks=0\" $(CHECKER) .\/testapi$(EXEEXT) && \\\n-        $(CHECKER) .\/testchar$(EXEEXT) && \\\n-        $(CHECKER) .\/testdict$(EXEEXT) && \\\n-        $(CHECKER) .\/runxmlconf$(EXEEXT)\n-    @(if [ \"$(PYTHON_SUBDIR)\" != \"\" ] ; then cd python ; \\\n-        $(MAKE) tests ; fi)\n-    @cd fuzz; $(MAKE) tests\n+\t[ -d test   ] || $(LN_S) $(srcdir)\/test   .\n+\t[ -d result ] || $(LN_S) $(srcdir)\/result .\n+\t$(CHECKER) .\/runtest$(EXEEXT) && \\\n+\t    $(CHECKER) .\/testrecurse$(EXEEXT) && \\\n+\t    ASAN_OPTIONS=\"$$ASAN_OPTIONS:detect_leaks=0\" $(CHECKER) .\/testapi$(EXEEXT) && \\\n+\t    $(CHECKER) .\/testchar$(EXEEXT) && \\\n+\t    $(CHECKER) .\/testdict$(EXEEXT) && \\\n+\t    $(CHECKER) .\/runxmlconf$(EXEEXT)\n+\t@(if [ \"$(PYTHON_SUBDIR)\" != \"\" ] ; then cd python ; \\\n+\t    $(MAKE) tests ; fi)\n+\t@cd fuzz; $(MAKE) tests\n@@ -218,3 +218,3 @@\n-    @echo '## Running the regression tests under Valgrind'\n-    @echo '## Go get a cup of coffee it is gonna take a while ...'\n-    $(MAKE) CHECKER='valgrind -q' runtests\n+\t@echo '## Running the regression tests under Valgrind'\n+\t@echo '## Go get a cup of coffee it is gonna take a while ...'\n+\t$(MAKE) CHECKER='valgrind -q' runtests\n@@ -223,2 +223,2 @@\n-    @echo '## rebuilding for ASAN'\n-    .\/configure CFLAGS=\"-fsanitize=address,undefined -Wformat -Werror=format-security -Werror=array-bounds -g\" CXXFLAGS=\"-fsanitize=address,undefined -Wformat -Werror=format-security -Werror=array-bounds -g\" LDFLAGS=\"-fsanitize=address,undefined\" CC=\"clang\" CXX=\"clang++\" --disable-shared ; OptimOff  ; $(MAKE) clean ; $(MAKE)\n+\t@echo '## rebuilding for ASAN'\n+\t.\/configure CFLAGS=\"-fsanitize=address,undefined -Wformat -Werror=format-security -Werror=array-bounds -g\" CXXFLAGS=\"-fsanitize=address,undefined -Wformat -Werror=format-security -Werror=array-bounds -g\" LDFLAGS=\"-fsanitize=address,undefined\" CC=\"clang\" CXX=\"clang++\" --disable-shared ; OptimOff  ; $(MAKE) clean ; $(MAKE)\n@@ -229,3 +229,3 @@\n-    @(if [ \"$(PYTHON_SUBDIR)\" != \"\" ] ; then cd python ; \\\n-        $(MAKE) -s tests ; fi)\n-    @(cd doc\/examples ; $(MAKE) -s tests)\n+\t@(if [ \"$(PYTHON_SUBDIR)\" != \"\" ] ; then cd python ; \\\n+\t    $(MAKE) -s tests ; fi)\n+\t@(cd doc\/examples ; $(MAKE) -s tests)\n@@ -234,2 +234,2 @@\n-    @echo \"## Running the API regression tests this may take a little while\"\n-    -@(ASAN_OPTIONS=\"$$ASAN_OPTIONS:detect_leaks=0\" $(CHECKER) $(top_builddir)\/testapi -q)\n+\t@echo \"## Running the API regression tests this may take a little while\"\n+\t-@(ASAN_OPTIONS=\"$$ASAN_OPTIONS:detect_leaks=0\" $(CHECKER) $(top_builddir)\/testapi -q)\n@@ -238,18 +238,18 @@\n-    @(echo > .memdump)\n-    @echo \"## HTML regression tests\"\n-    -@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/HTML\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testHTML $$i > $(srcdir)\/result\/HTML\/$$name 2>$(srcdir)\/result\/HTML\/$$name.err ; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testHTML $$i > result.$$name 2> error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/HTML\/$$name result.$$name ; \\\n-          diff -b $(srcdir)\/result\/HTML\/$$name.err error.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/testHTML result.$$name > result2.$$name 2>error.$$name ; \\\n-          diff result.$$name result2.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name result2.$$name error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## HTML regression tests\"\n+\t-@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/HTML\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testHTML $$i > $(srcdir)\/result\/HTML\/$$name 2>$(srcdir)\/result\/HTML\/$$name.err ; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testHTML $$i > result.$$name 2> error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/HTML\/$$name result.$$name ; \\\n+\t      diff -b $(srcdir)\/result\/HTML\/$$name.err error.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testHTML result.$$name > result2.$$name 2>error.$$name ; \\\n+\t      diff result.$$name result2.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name result2.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -258,47 +258,47 @@\n-    @echo \"## Push HTML regression tests\"\n-    -@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/HTML\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testHTML --push $$i > $(srcdir)\/result\/HTML\/$$name 2>$(srcdir)\/result\/HTML\/$$name.err ; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testHTML --push $$i > result.$$name 2> error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/HTML\/$$name result.$$name ; \\\n-          cut -b 1-15 $(srcdir)\/result\/HTML\/$$name.err > errorcut.$$name; \\\n-          cut -b 1-15 error.$$name > errorcut2.$$name; \\\n-          diff -b errorcut.$$name errorcut2.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/testHTML --push result.$$name > result2.$$name 2>error.$$name ; \\\n-          diff result.$$name result2.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name result2.$$name error.$$name errorcut.$$name errorcut2.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## HTML SAX regression tests\"\n-    -@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/HTML\/$$name.sax ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testHTML --sax $$i > $(srcdir)\/result\/HTML\/$$name.sax ; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testHTML --sax $$i > result.$$name.sax ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/HTML\/$$name.sax result.$$name.sax` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name.sax ; \\\n-      fi ; fi ; done)\n-    @echo \"## Push HTML SAX regression tests\"\n-    -@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/HTML\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testHTML --push --sax $$i > $(srcdir)\/result\/HTML\/$$name.sax ; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testHTML --push --sax $$i 2>&1 > result.$$name.sax ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/HTML\/$$name.sax result.$$name.sax` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name.sax ; \\\n-      fi ; fi ; done)\n+\t@echo \"## Push HTML regression tests\"\n+\t-@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/HTML\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testHTML --push $$i > $(srcdir)\/result\/HTML\/$$name 2>$(srcdir)\/result\/HTML\/$$name.err ; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testHTML --push $$i > result.$$name 2> error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/HTML\/$$name result.$$name ; \\\n+\t      cut -b 1-15 $(srcdir)\/result\/HTML\/$$name.err > errorcut.$$name; \\\n+\t      cut -b 1-15 error.$$name > errorcut2.$$name; \\\n+\t      diff -b errorcut.$$name errorcut2.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testHTML --push result.$$name > result2.$$name 2>error.$$name ; \\\n+\t      diff result.$$name result2.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name result2.$$name error.$$name errorcut.$$name errorcut2.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## HTML SAX regression tests\"\n+\t-@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/HTML\/$$name.sax ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testHTML --sax $$i > $(srcdir)\/result\/HTML\/$$name.sax ; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testHTML --sax $$i > result.$$name.sax ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/HTML\/$$name.sax result.$$name.sax` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name.sax ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## Push HTML SAX regression tests\"\n+\t-@(for i in $(srcdir)\/test\/HTML\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/HTML\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testHTML --push --sax $$i > $(srcdir)\/result\/HTML\/$$name.sax ; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testHTML --push --sax $$i 2>&1 > result.$$name.sax ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/HTML\/$$name.sax result.$$name.sax` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name.sax ; \\\n+\t  fi ; fi ; done)\n@@ -307,37 +307,37 @@\n-    @(echo > .memdump)\n-    @echo \"## XML regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint $$i > $(srcdir)\/result\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/$$name result.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint result.$$name 2>&1 > result2.$$name | grep -v 'failed to load external entity' ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff result.$$name result2.$$name` ;\\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name result2.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## XML regression tests on memory\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --memory $$i > $(srcdir)\/result\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --memory $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name result.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --memory result.$$name 2>&1 > result2.$$name | grep -v 'failed to load external entity' ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"`; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          diff result.$$name result2.$$name ; \\\n-          rm result.$$name result2.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XML regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint $$i > $(srcdir)\/result\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/$$name result.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint result.$$name 2>&1 > result2.$$name | grep -v 'failed to load external entity' ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff result.$$name result2.$$name` ;\\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name result2.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## XML regression tests on memory\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --memory $$i > $(srcdir)\/result\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --memory $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name result.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --memory result.$$name 2>&1 > result2.$$name | grep -v 'failed to load external entity' ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"`; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      diff result.$$name result2.$$name ; \\\n+\t      rm result.$$name result2.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -346,19 +346,19 @@\n-    @(echo > .memdump)\n-    @echo \"## XML push regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --push $$i > $(srcdir)\/result\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --push $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/$$name result.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --push result.$$name 2>&1 > result2.$$name | grep -v 'failed to load external entity' ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff result.$$name result2.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name result2.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XML push regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --push $$i > $(srcdir)\/result\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --push $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/$$name result.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --push result.$$name 2>&1 > result2.$$name | grep -v 'failed to load external entity' ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff result.$$name result2.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name result2.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -367,19 +367,19 @@\n-    @(echo > .memdump)\n-    @echo \"## XML Namespaces regression tests\"\n-    -@(for i in $(srcdir)\/test\/namespaces\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/namespaces\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint $$i \\\n-             2> $(srcdir)\/result\/namespaces\/$$name.err \\\n-         > $(srcdir)\/result\/namespaces\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint $$i 2> error.$$name > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/namespaces\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/namespaces\/$$name.err error.$$name`; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XML Namespaces regression tests\"\n+\t-@(for i in $(srcdir)\/test\/namespaces\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/namespaces\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint $$i \\\n+\t         2> $(srcdir)\/result\/namespaces\/$$name.err \\\n+\t\t > $(srcdir)\/result\/namespaces\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint $$i 2> error.$$name > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/namespaces\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/namespaces\/$$name.err error.$$name`; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -388,19 +388,19 @@\n-    @(echo > .memdump)\n-    @echo \"## xml:id regression tests\"\n-    -@(for i in $(srcdir)\/test\/xmlid\/id_*.xml ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/xmlid\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testXPath -i $$i \"id('bar')\" \\\n-             2> $(srcdir)\/result\/xmlid\/$$name.err \\\n-         > $(srcdir)\/result\/xmlid\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testXPath -i $$i \"id('bar')\" 2> error.$$name > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/xmlid\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/xmlid\/$$name.err error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## xml:id regression tests\"\n+\t-@(for i in $(srcdir)\/test\/xmlid\/id_*.xml ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/xmlid\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testXPath -i $$i \"id('bar')\" \\\n+\t         2> $(srcdir)\/result\/xmlid\/$$name.err \\\n+\t\t > $(srcdir)\/result\/xmlid\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testXPath -i $$i \"id('bar')\" 2> error.$$name > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/xmlid\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/xmlid\/$$name.err error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -409,54 +409,54 @@\n-    @(echo > .memdump)\n-    @echo \"## Error cases regression tests\"\n-    -@(for i in $(srcdir)\/test\/errors\/*.xml ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/errors\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint $$i \\\n-             2> $(srcdir)\/result\/errors\/$$name.err \\\n-         > $(srcdir)\/result\/errors\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint $$i 2> error.$$name > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/errors\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/errors\/$$name.err error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## Error cases regression tests (old 1.0)\"\n-    -@(for i in $(srcdir)\/test\/errors10\/*.xml ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/errors10\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --oldxml10 $$i \\\n-             2> $(srcdir)\/result\/errors10\/$$name.err \\\n-         > $(srcdir)\/result\/errors10\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --oldxml10 $$i 2> error.$$name > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/errors10\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/errors10\/$$name.err error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## Error cases stream regression tests\"\n-    -@(for i in $(srcdir)\/test\/errors\/*.xml ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/errors\/$$name.str ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --stream $$i \\\n-             2> $(srcdir)\/result\/errors\/$$name.str \\\n-         > \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --stream $$i 2> error.$$name > \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/errors\/$$name.str error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Error cases regression tests\"\n+\t-@(for i in $(srcdir)\/test\/errors\/*.xml ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/errors\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint $$i \\\n+\t         2> $(srcdir)\/result\/errors\/$$name.err \\\n+\t\t > $(srcdir)\/result\/errors\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint $$i 2> error.$$name > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/errors\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/errors\/$$name.err error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## Error cases regression tests (old 1.0)\"\n+\t-@(for i in $(srcdir)\/test\/errors10\/*.xml ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/errors10\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --oldxml10 $$i \\\n+\t         2> $(srcdir)\/result\/errors10\/$$name.err \\\n+\t\t > $(srcdir)\/result\/errors10\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --oldxml10 $$i 2> error.$$name > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/errors10\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/errors10\/$$name.err error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## Error cases stream regression tests\"\n+\t-@(for i in $(srcdir)\/test\/errors\/*.xml ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/errors\/$$name.str ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --stream $$i \\\n+\t         2> $(srcdir)\/result\/errors\/$$name.str \\\n+\t\t > \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --stream $$i 2> error.$$name > \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/errors\/$$name.str error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -467,19 +467,19 @@\n-    @(echo > .memdump)\n-    @echo \"## XML entity subst regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/noent\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --noent $$i > $(srcdir)\/result\/noent\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --noent $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff $(srcdir)\/result\/noent\/$$name result.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --noent result.$$name 2>&1 > result2.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-          diff result.$$name result2.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name result2.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XML entity subst regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/noent\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --noent $$i > $(srcdir)\/result\/noent\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --noent $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff $(srcdir)\/result\/noent\/$$name result.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --noent result.$$name 2>&1 > result2.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t      diff result.$$name result2.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name result2.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -488,30 +488,30 @@\n-    @(echo > .memdump)\n-    @echo \"## URI module regression tests\"\n-    -@(for i in $(srcdir)\/test\/URI\/*.data ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/URI\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testURI -base 'http:\/\/foo.com\/path\/to\/index.html?orig#help' < $$i > $(srcdir)\/result\/URI\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testURI -base 'http:\/\/foo.com\/path\/to\/index.html?orig#help' < $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/URI\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    -@(for i in $(srcdir)\/test\/URI\/*.uri ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/URI\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testURI < $$i > $(srcdir)\/result\/URI\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testURI < $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/URI\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## URI module regression tests\"\n+\t-@(for i in $(srcdir)\/test\/URI\/*.data ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/URI\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testURI -base 'http:\/\/foo.com\/path\/to\/index.html?orig#help' < $$i > $(srcdir)\/result\/URI\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testURI -base 'http:\/\/foo.com\/path\/to\/index.html?orig#help' < $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/URI\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t-@(for i in $(srcdir)\/test\/URI\/*.uri ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/URI\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testURI < $$i > $(srcdir)\/result\/URI\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testURI < $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/URI\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -520,36 +520,36 @@\n-    @(echo > .memdump)\n-    @echo \"## XPath regression tests\"\n-    -@(if [ \"`$(top_builddir)\/testXPath | grep 'support not compiled in'`\" != \"\" ] ; \\\n-      then echo Skipping debug not compiled in ; exit 0 ; fi ; \\\n-      for i in $(srcdir)\/test\/XPath\/expr\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XPath\/expr\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testXPath -f --expr $$i > $(srcdir)\/result\/XPath\/expr\/$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testXPath -f --expr $$i > result.$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XPath\/expr\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done ; \\\n-      for i in $(srcdir)\/test\/XPath\/docs\/* ; do \\\n-      if [ ! -d $$i ] ; then \\\n-      doc=`basename $$i`; \\\n-      for j in $(srcdir)\/test\/XPath\/tests\/$$doc* ; do \\\n-      if [ ! -f $$j ] ; then continue ; fi ; \\\n-      name=`basename $$j`; \\\n-      if [ ! -d $$j ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XPath\/tests\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testXPath -f -i $$i $$j > $(srcdir)\/result\/XPath\/tests\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testXPath -f -i $$i $$j > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XPath\/tests\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XPath regression tests\"\n+\t-@(if [ \"`$(top_builddir)\/testXPath | grep 'support not compiled in'`\" != \"\" ] ; \\\n+\t  then echo Skipping debug not compiled in ; exit 0 ; fi ; \\\n+\t  for i in $(srcdir)\/test\/XPath\/expr\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XPath\/expr\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testXPath -f --expr $$i > $(srcdir)\/result\/XPath\/expr\/$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testXPath -f --expr $$i > result.$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XPath\/expr\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done ; \\\n+\t  for i in $(srcdir)\/test\/XPath\/docs\/* ; do \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  doc=`basename $$i`; \\\n+\t  for j in $(srcdir)\/test\/XPath\/tests\/$$doc* ; do \\\n+\t  if [ ! -f $$j ] ; then continue ; fi ; \\\n+\t  name=`basename $$j`; \\\n+\t  if [ ! -d $$j ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XPath\/tests\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testXPath -f -i $$i $$j > $(srcdir)\/result\/XPath\/tests\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testXPath -f -i $$i $$j > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XPath\/tests\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done ; fi ; done)\n@@ -558,22 +558,22 @@\n-    @(echo > .memdump)\n-    @echo \"## XPointer regression tests\"\n-    -@(if [ \"`$(top_builddir)\/testXPath | grep 'support not compiled in'`\" != \"\" ] ; \\\n-      then echo Skipping debug not compiled in ; exit 0 ; fi ; \\\n-      for i in $(srcdir)\/test\/XPath\/docs\/* ; do \\\n-      if [ ! -d $$i ] ; then \\\n-      doc=`basename $$i`; \\\n-      for j in $(srcdir)\/test\/XPath\/xptr\/$$doc* ; do \\\n-      if [ ! -f $$j ] ; then continue ; fi ; \\\n-      name=`basename $$j`; \\\n-      if [ ! -d $$j ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XPath\/xptr\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testXPath -xptr -f -i $$i $$j > $(srcdir)\/result\/XPath\/xptr\/$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testXPath -xptr -f -i $$i $$j > result.$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XPath\/xptr\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XPointer regression tests\"\n+\t-@(if [ \"`$(top_builddir)\/testXPath | grep 'support not compiled in'`\" != \"\" ] ; \\\n+\t  then echo Skipping debug not compiled in ; exit 0 ; fi ; \\\n+\t  for i in $(srcdir)\/test\/XPath\/docs\/* ; do \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  doc=`basename $$i`; \\\n+\t  for j in $(srcdir)\/test\/XPath\/xptr\/$$doc* ; do \\\n+\t  if [ ! -f $$j ] ; then continue ; fi ; \\\n+\t  name=`basename $$j`; \\\n+\t  if [ ! -d $$j ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XPath\/xptr\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testXPath -xptr -f -i $$i $$j > $(srcdir)\/result\/XPath\/xptr\/$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testXPath -xptr -f -i $$i $$j > result.$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XPath\/xptr\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done ; fi ; done)\n@@ -582,64 +582,64 @@\n-    @(echo > .memdump)\n-    @echo \"## XInclude regression tests\"\n-    -@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XInclude\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude $$i > $(srcdir)\/result\/XInclude\/$$name 2> $(srcdir)\/result\/XInclude\/$$name.err ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude $$i > result.$$name 2>error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XInclude\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n-    -@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XInclude\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --nowarning --noxincludenode $$i > $(srcdir)\/result\/XInclude\/$$name 2> $(srcdir)\/result\/XInclude\/$$name.err ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --noxincludenode $$i > result.$$name 2>error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XInclude\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n-    @(echo > .memdump)\n-    @echo \"## XInclude xmlReader regression tests\"\n-    -@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XInclude\/$$name.rdr ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude --stream --debug $$i > $(srcdir)\/result\/XInclude\/$$name.rdr ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude --stream --debug $$i > result.$$name 2>error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name ; \\\n-          diff $(srcdir)\/result\/XInclude\/$$name.rdr result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n-    -@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/XInclude\/$$name.rdr ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --nowarning --noxincludenode --stream --debug $$i > $(srcdir)\/result\/XInclude\/$$name.rdr ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude --stream --debug $$i > result.$$name 2>error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name ; \\\n-          diff $(srcdir)\/result\/XInclude\/$$name.rdr result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XInclude regression tests\"\n+\t-@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XInclude\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude $$i > $(srcdir)\/result\/XInclude\/$$name 2> $(srcdir)\/result\/XInclude\/$$name.err ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude $$i > result.$$name 2>error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n+\t-@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XInclude\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --nowarning --noxincludenode $$i > $(srcdir)\/result\/XInclude\/$$name 2> $(srcdir)\/result\/XInclude\/$$name.err ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --noxincludenode $$i > result.$$name 2>error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## XInclude xmlReader regression tests\"\n+\t-@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XInclude\/$$name.rdr ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude --stream --debug $$i > $(srcdir)\/result\/XInclude\/$$name.rdr ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude --stream --debug $$i > result.$$name 2>error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name ; \\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name.rdr result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n+\t-@(for i in $(srcdir)\/test\/XInclude\/docs\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/XInclude\/$$name.rdr ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --nowarning --noxincludenode --stream --debug $$i > $(srcdir)\/result\/XInclude\/$$name.rdr ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --nowarning --xinclude --stream --debug $$i > result.$$name 2>error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name.err error.$$name ; \\\n+\t      diff $(srcdir)\/result\/XInclude\/$$name.rdr result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -648,19 +648,19 @@\n-    @(echo > .memdump)\n-    @echo \"## Scripts regression tests\"\n-    @echo \"## Some of the base computations may be different if srcdir != .\"\n-    -@(for i in $(srcdir)\/test\/scripts\/*.script ; do \\\n-      name=`basename $$i .script`; \\\n-      xml=$(srcdir)\/test\/scripts\/`basename $$i .script`.xml; \\\n-      if [ -f $$xml ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/scripts\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --shell $$xml < $$i > $(srcdir)\/result\/scripts\/$$name 2> $(srcdir)\/result\/scripts\/$$name.err ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --shell $$xml < $$i > result.$$name 2> result.$$name.err ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/scripts\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/scripts\/$$name.err result.$$name.err` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name result.$$name.err ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Scripts regression tests\"\n+\t@echo \"## Some of the base computations may be different if srcdir != .\"\n+\t-@(for i in $(srcdir)\/test\/scripts\/*.script ; do \\\n+\t  name=`basename $$i .script`; \\\n+\t  xml=$(srcdir)\/test\/scripts\/`basename $$i .script`.xml; \\\n+\t  if [ -f $$xml ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/scripts\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --shell $$xml < $$i > $(srcdir)\/result\/scripts\/$$name 2> $(srcdir)\/result\/scripts\/$$name.err ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --shell $$xml < $$i > result.$$name 2> result.$$name.err ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/scripts\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/scripts\/$$name.err result.$$name.err` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name result.$$name.err ; \\\n+\t  fi ; fi ; done)\n@@ -669,52 +669,52 @@\n-    @(echo > .memdump)\n-    @echo \"## Catalog regression tests\"\n-    -@(for i in $(srcdir)\/test\/catalogs\/*.script ; do \\\n-      name=`basename $$i .script`; \\\n-      xml=$(srcdir)\/test\/catalogs\/`basename $$i .script`.xml; \\\n-      if [ -f $$xml ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/catalogs\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmlcatalog --shell $$xml < $$i 2>&1 > $(srcdir)\/result\/catalogs\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmlcatalog --shell $$xml < $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/catalogs\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    -@(for i in $(srcdir)\/test\/catalogs\/*.script ; do \\\n-      name=`basename $$i .script`; \\\n-      sgml=$(srcdir)\/test\/catalogs\/`basename $$i .script`.sgml; \\\n-      if [ -f $$sgml ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/catalogs\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmlcatalog --shell $$sgml < $$i > $(srcdir)\/result\/catalogs\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmlcatalog --shell $$sgml < $$i > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/catalogs\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## Add and del operations on XML Catalogs\"\n-    -@($(CHECKER) $(top_builddir)\/xmlcatalog --create --noout $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    $(CHECKER) $(top_builddir)\/xmlcatalog --noout --add public Pubid sysid $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    $(CHECKER) $(top_builddir)\/xmlcatalog --noout --add public Pubid2 sysid2 $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    $(CHECKER) $(top_builddir)\/xmlcatalog --noout --add public Pubid3 sysid3 $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    diff result\/catalogs\/mycatalog.full $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    $(CHECKER) $(top_builddir)\/xmlcatalog --noout --del sysid $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    $(CHECKER) $(top_builddir)\/xmlcatalog --noout --del sysid3 $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    $(CHECKER) $(top_builddir)\/xmlcatalog --noout --del sysid2 $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    diff result\/catalogs\/mycatalog.empty $(srcdir)\/result\/catalogs\/mycatalog; \\\n-    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-    rm -f $(srcdir)\/result\/catalogs\/mycatalog)\n+\t@(echo > .memdump)\n+\t@echo \"## Catalog regression tests\"\n+\t-@(for i in $(srcdir)\/test\/catalogs\/*.script ; do \\\n+\t  name=`basename $$i .script`; \\\n+\t  xml=$(srcdir)\/test\/catalogs\/`basename $$i .script`.xml; \\\n+\t  if [ -f $$xml ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/catalogs\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmlcatalog --shell $$xml < $$i 2>&1 > $(srcdir)\/result\/catalogs\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmlcatalog --shell $$xml < $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/catalogs\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t-@(for i in $(srcdir)\/test\/catalogs\/*.script ; do \\\n+\t  name=`basename $$i .script`; \\\n+\t  sgml=$(srcdir)\/test\/catalogs\/`basename $$i .script`.sgml; \\\n+\t  if [ -f $$sgml ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/catalogs\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmlcatalog --shell $$sgml < $$i > $(srcdir)\/result\/catalogs\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmlcatalog --shell $$sgml < $$i > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/catalogs\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## Add and del operations on XML Catalogs\"\n+\t-@($(CHECKER) $(top_builddir)\/xmlcatalog --create --noout $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t$(CHECKER) $(top_builddir)\/xmlcatalog --noout --add public Pubid sysid $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t$(CHECKER) $(top_builddir)\/xmlcatalog --noout --add public Pubid2 sysid2 $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t$(CHECKER) $(top_builddir)\/xmlcatalog --noout --add public Pubid3 sysid3 $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\tdiff result\/catalogs\/mycatalog.full $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t$(CHECKER) $(top_builddir)\/xmlcatalog --noout --del sysid $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t$(CHECKER) $(top_builddir)\/xmlcatalog --noout --del sysid3 $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t$(CHECKER) $(top_builddir)\/xmlcatalog --noout --del sysid2 $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\tdiff result\/catalogs\/mycatalog.empty $(srcdir)\/result\/catalogs\/mycatalog; \\\n+\tgrep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\trm -f $(srcdir)\/result\/catalogs\/mycatalog)\n@@ -723,18 +723,18 @@\n-    @echo \"## SVG parsing regression tests\"\n-    -@(for i in $(srcdir)\/test\/SVG\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/SVG\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint $$i > $(srcdir)\/result\/SVG\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          echo Testing $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint $$i > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/SVG\/$$name result.$$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint result.$$name > result2.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff result.$$name result2.$$name ; \\\n-          rm result.$$name result2.$$name ; \\\n-      fi ; fi ; done)\n+\t@echo \"## SVG parsing regression tests\"\n+\t-@(for i in $(srcdir)\/test\/SVG\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/SVG\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint $$i > $(srcdir)\/result\/SVG\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      echo Testing $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint $$i > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/SVG\/$$name result.$$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint result.$$name > result2.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff result.$$name result2.$$name ; \\\n+\t      rm result.$$name result2.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -743,4 +743,4 @@\n-    @echo \"## Threaded regression tests\"\n-    -@($(CHECKER) $(top_builddir)\/testThreads ; \\\n-       grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n-       exit 0)\n+\t@echo \"## Threaded regression tests\"\n+\t-@($(CHECKER) $(top_builddir)\/testThreads ; \\\n+\t   grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"; \\\n+\t   exit 0)\n@@ -749,62 +749,62 @@\n-    @(echo > .memdump)\n-    @echo \"## Reader regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name.rdr ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --nonet --debug --stream $$i > $(srcdir)\/result\/$$name.rdr 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --nonet --debug --stream $$i > result.$$name 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name.rdr result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## Reader on memory regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name.rdr ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --memory --nonet --debug --stream $$i > $(srcdir)\/result\/$$name.rdr 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --memory --nonet --debug --stream $$i > result.$$name 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name.rdr result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @(echo > .memdump)\n-    @echo \"## Walker regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name.rdr ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --nonet --debug --walker $$i > $(srcdir)\/result\/$$name.rdr 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --nonet --debug --walker $$i > result.$$name 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name.rdr result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## Reader entities substitution regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name.rde ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --noent --nonet --debug --stream $$i > $(srcdir)\/result\/$$name.rde 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --noent --nonet --debug --stream $$i > result.$$name 2>\/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name.rde result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Reader regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name.rdr ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --nonet --debug --stream $$i > $(srcdir)\/result\/$$name.rdr 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --nonet --debug --stream $$i > result.$$name 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name.rdr result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## Reader on memory regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name.rdr ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --memory --nonet --debug --stream $$i > $(srcdir)\/result\/$$name.rdr 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --memory --nonet --debug --stream $$i > result.$$name 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name.rdr result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Walker regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name.rdr ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --nonet --debug --walker $$i > $(srcdir)\/result\/$$name.rdr 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --nonet --debug --walker $$i > result.$$name 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name.rdr result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## Reader entities substitution regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name.rde ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --noent --nonet --debug --stream $$i > $(srcdir)\/result\/$$name.rde 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --noent --nonet --debug --stream $$i > result.$$name 2>\/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name.rde result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -813,46 +813,46 @@\n-    @(echo > .memdump)\n-    @echo \"## SAX1 callbacks regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name.sax ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testSAX $$i > $(srcdir)\/result\/$$name.sax 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testSAX $$i > result.$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name.sax result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## SAX2 callbacks regression tests\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/$$name.sax2 ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testSAX --sax2 $$i > $(srcdir)\/result\/$$name.sax2 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testSAX --sax2 $$i > result.$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/$$name.sax2 result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## SAX2 callbacks regression tests with entity substitution\"\n-    -@(for i in $(srcdir)\/test\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/noent\/$$name.sax2 ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testSAX --sax2 --noent $$i > $(srcdir)\/result\/noent\/$$name.sax2 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testSAX --sax2 --noent $$i > result.$$name 2> \/dev\/null ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/noent\/$$name.sax2 result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## SAX1 callbacks regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name.sax ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testSAX $$i > $(srcdir)\/result\/$$name.sax 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testSAX $$i > result.$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name.sax result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## SAX2 callbacks regression tests\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/$$name.sax2 ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testSAX --sax2 $$i > $(srcdir)\/result\/$$name.sax2 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testSAX --sax2 $$i > result.$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/$$name.sax2 result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## SAX2 callbacks regression tests with entity substitution\"\n+\t-@(for i in $(srcdir)\/test\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/noent\/$$name.sax2 ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testSAX --sax2 --noent $$i > $(srcdir)\/result\/noent\/$$name.sax2 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testSAX --sax2 --noent $$i > result.$$name 2> \/dev\/null ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/noent\/$$name.sax2 result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -861,40 +861,40 @@\n-    @(echo > .memdump)\n-    @echo \"## Valid documents regression tests\"\n-    -@(for i in $(srcdir)\/test\/VCM\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --valid --noout --nowarning $$i ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"`;\\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-      fi ; done ; exit 0)\n-    @echo \"## Validity checking regression tests\"\n-    -@(for i in $(srcdir)\/test\/VC\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/VC\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --noout --valid $$i 2> $(srcdir)\/result\/VC\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --noout --valid $$i 2> result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/VC\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n-    @echo \"## General documents valid regression tests\"\n-    -@(for i in $(srcdir)\/test\/valid\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/valid\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint --valid $$i > $(srcdir)\/result\/valid\/$$name 2>$(srcdir)\/result\/valid\/$$name.err ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint --valid $$i > result.$$name 2>error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/valid\/$$name result.$$name ; \\\n-          diff $(srcdir)\/result\/valid\/$$name.err error.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Valid documents regression tests\"\n+\t-@(for i in $(srcdir)\/test\/VCM\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --valid --noout --nowarning $$i ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\"`;\\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t  fi ; done ; exit 0)\n+\t@echo \"## Validity checking regression tests\"\n+\t-@(for i in $(srcdir)\/test\/VC\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/VC\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --noout --valid $$i 2> $(srcdir)\/result\/VC\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --noout --valid $$i 2> result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/VC\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n+\t@echo \"## General documents valid regression tests\"\n+\t-@(for i in $(srcdir)\/test\/valid\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/valid\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --valid $$i > $(srcdir)\/result\/valid\/$$name 2>$(srcdir)\/result\/valid\/$$name.err ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint --valid $$i > result.$$name 2>error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/valid\/$$name result.$$name ; \\\n+\t      diff $(srcdir)\/result\/valid\/$$name.err error.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -903,18 +903,18 @@\n-    @(echo > .memdump)\n-    @echo \"## Regexp regression tests\"\n-    -@(for i in $(srcdir)\/test\/regexp\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/regexp\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testRegexp -i $$i > $(srcdir)\/result\/regexp\/$$name 2> $(srcdir)\/result\/regexp\/$$name.err ; \\\n-          if [ ! -s \"$(srcdir)\/result\/regexp\/$$name.err\" ] ; then rm $(srcdir)\/result\/regexp\/$$name.err; fi ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testRegexp -i $$i > result.$$name 2> error.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/regexp\/$$name result.$$name ; \\\n-          if [ -s \"$(srcdir)\/result\/regexp\/$$name.err\" -o -s \"error.$$name\" ] ; then diff $(srcdir)\/result\/regexp\/$$name.err error.$$name ; fi` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo $$log ; fi ; \\\n-          rm result.$$name error.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Regexp regression tests\"\n+\t-@(for i in $(srcdir)\/test\/regexp\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/regexp\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testRegexp -i $$i > $(srcdir)\/result\/regexp\/$$name 2> $(srcdir)\/result\/regexp\/$$name.err ; \\\n+\t      if [ ! -s \"$(srcdir)\/result\/regexp\/$$name.err\" ] ; then rm $(srcdir)\/result\/regexp\/$$name.err; fi ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testRegexp -i $$i > result.$$name 2> error.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/regexp\/$$name result.$$name ; \\\n+\t      if [ -s \"$(srcdir)\/result\/regexp\/$$name.err\" -o -s \"error.$$name\" ] ; then diff $(srcdir)\/result\/regexp\/$$name.err error.$$name ; fi` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo $$log ; fi ; \\\n+\t      rm result.$$name error.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -924,15 +924,15 @@\n-    @echo \"## Formal expressions regression tests\"\n-    -@(for i in $(srcdir)\/test\/expr\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/expr\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testRegexp --expr -i $$i > $(srcdir)\/result\/expr\/$$name; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testRegexp --expr -i $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/expr\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n+\t@echo \"## Formal expressions regression tests\"\n+\t-@(for i in $(srcdir)\/test\/expr\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/expr\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testRegexp --expr -i $$i > $(srcdir)\/result\/expr\/$$name; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testRegexp --expr -i $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/expr\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -941,16 +941,16 @@\n-    @(echo > .memdump)\n-    @echo \"## Automata regression tests\"\n-    -@(for i in $(srcdir)\/test\/automata\/* ; do \\\n-      name=`basename $$i`; \\\n-      if [ ! -d $$i ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/automata\/$$name ] ; then \\\n-          echo New test file $$name ; \\\n-          $(CHECKER) $(top_builddir)\/testAutomata $$i > $(srcdir)\/result\/automata\/$$name; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/testAutomata $$i 2>&1 > result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/automata\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Automata regression tests\"\n+\t-@(for i in $(srcdir)\/test\/automata\/* ; do \\\n+\t  name=`basename $$i`; \\\n+\t  if [ ! -d $$i ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/automata\/$$name ] ; then \\\n+\t      echo New test file $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/testAutomata $$i > $(srcdir)\/result\/automata\/$$name; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/testAutomata $$i 2>&1 > result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/automata\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done)\n@@ -959,2 +959,2 @@\n-    @echo \"## generating dba100000.xml\"\n-    @($(PERL) $(top_srcdir)\/dbgenattr.pl 100000 > dba100000.xml)\n+\t@echo \"## generating dba100000.xml\"\n+\t@($(PERL) $(top_srcdir)\/dbgenattr.pl 100000 > dba100000.xml)\n@@ -963,21 +963,21 @@\n-    @echo \"## Timing tests to try to detect performance\"\n-    @echo \"## as well a memory usage breakage when streaming\"\n-    @echo \"## 1\/ using the file interface\"\n-    @echo \"## 2\/ using the memory interface\"\n-    @echo \"## 3\/ repeated DOM parsing\"\n-    @echo \"## 4\/ repeated DOM validation\"\n-    -@($(top_builddir)\/xmllint --stream --timing dba100000.xml; \\\n-       MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n-       if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n-       grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-       exit 0)\n-    -@($(top_builddir)\/xmllint --stream --timing --memory dba100000.xml; \\\n-       MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n-       if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n-       grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-       exit 0)\n-    -@($(top_builddir)\/xmllint --noout --timing --repeat $(srcdir)\/test\/valid\/REC-xml-19980210.xml; \\\n-       MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n-       if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n-       grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-       exit 0)\n+\t@echo \"## Timing tests to try to detect performance\"\n+\t@echo \"## as well a memory usage breakage when streaming\"\n+\t@echo \"## 1\/ using the file interface\"\n+\t@echo \"## 2\/ using the memory interface\"\n+\t@echo \"## 3\/ repeated DOM parsing\"\n+\t@echo \"## 4\/ repeated DOM validation\"\n+\t-@($(top_builddir)\/xmllint --stream --timing dba100000.xml; \\\n+\t   MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n+\t   if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n+\t   grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t   exit 0)\n+\t-@($(top_builddir)\/xmllint --stream --timing --memory dba100000.xml; \\\n+\t   MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n+\t   if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n+\t   grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t   exit 0)\n+\t-@($(top_builddir)\/xmllint --noout --timing --repeat $(srcdir)\/test\/valid\/REC-xml-19980210.xml; \\\n+\t   MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n+\t   if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n+\t   grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t   exit 0)\n@@ -986,5 +986,5 @@\n-    -@($(top_builddir)\/xmllint --noout --timing --valid --repeat $(srcdir)\/test\/valid\/REC-xml-19980210.xml; \\\n-       MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n-       if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n-       grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-       exit 0)\n+\t-@($(top_builddir)\/xmllint --noout --timing --valid --repeat $(srcdir)\/test\/valid\/REC-xml-19980210.xml; \\\n+\t   MEM=`cat .memdump | grep \"MEMORY ALLOCATED\" | awk '{ print $$7}'`;\\\n+\t   if [ \"$$MEM\" != \"\" ] ; then echo Using $$MEM bytes ; fi ; \\\n+\t   grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t   exit 0)\n@@ -993,27 +993,27 @@\n-    @echo \"## C14N and XPath regression tests\"\n-    -@(for m in with-comments without-comments 1-1-without-comments exc-without-comments ; do \\\n-        for i in $(srcdir)\/test\/c14n\/$$m\/*.xml ; do  \\\n-        if [ ! -d $$i ] ; then \\\n-            name=`basename $$i .xml`; \\\n-            cmdline=\"$(CHECKER) $(top_builddir)\/testC14N --$$m $$i\"; \\\n-            if [ -f $(srcdir)\/test\/c14n\/$$m\/$$name.xpath ] ; then \\\n-            cmdline=\"$$cmdline $(srcdir)\/test\/c14n\/$$m\/$$name.xpath\"; \\\n-            if [ -f $(srcdir)\/test\/c14n\/$$m\/$$name.ns ] ; then \\\n-                cmdline=\"$$cmdline '`cat $(srcdir)\/test\/c14n\/$$m\/$$name.ns`'\"; \\\n-            fi; \\\n-            fi; \\\n-            $$cmdline > $(srcdir)\/test\/c14n\/test.tmp 2> \/dev\/null; \\\n-            if [ $$? -eq 0 ]; then \\\n-            diff  $(srcdir)\/result\/c14n\/$$m\/$$name $(srcdir)\/test\/c14n\/test.tmp; \\\n-            if [ $$? -ne 0 ]; then \\\n-                echo \"Test $$m\/$$name failed\"; \\\n-                cat $(srcdir)\/test\/c14n\/test.tmp; \\\n-            fi; \\\n-            else \\\n-            echo \"C14N failed\"; \\\n-            fi; \\\n-            grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-        fi; \\\n-        rm -f $(srcdir)\/test\/c14n\/test.tmp; \\\n-        done; \\\n-    done)\n+\t@echo \"## C14N and XPath regression tests\"\n+\t-@(for m in with-comments without-comments 1-1-without-comments exc-without-comments ; do \\\n+\t    for i in $(srcdir)\/test\/c14n\/$$m\/*.xml ; do  \\\n+\t\tif [ ! -d $$i ] ; then \\\n+\t\t    name=`basename $$i .xml`; \\\n+\t\t    cmdline=\"$(CHECKER) $(top_builddir)\/testC14N --$$m $$i\"; \\\n+\t\t    if [ -f $(srcdir)\/test\/c14n\/$$m\/$$name.xpath ] ; then \\\n+\t\t\tcmdline=\"$$cmdline $(srcdir)\/test\/c14n\/$$m\/$$name.xpath\"; \\\n+\t\t\tif [ -f $(srcdir)\/test\/c14n\/$$m\/$$name.ns ] ; then \\\n+\t\t\t    cmdline=\"$$cmdline '`cat $(srcdir)\/test\/c14n\/$$m\/$$name.ns`'\"; \\\n+\t\t\tfi; \\\n+\t\t    fi; \\\n+\t\t    $$cmdline > $(srcdir)\/test\/c14n\/test.tmp 2> \/dev\/null; \\\n+\t\t    if [ $$? -eq 0 ]; then \\\n+\t\t\tdiff  $(srcdir)\/result\/c14n\/$$m\/$$name $(srcdir)\/test\/c14n\/test.tmp; \\\n+\t\t\tif [ $$? -ne 0 ]; then \\\n+\t\t\t    echo \"Test $$m\/$$name failed\"; \\\n+\t\t\t    cat $(srcdir)\/test\/c14n\/test.tmp; \\\n+\t\t\tfi; \\\n+\t\t    else \\\n+\t\t\techo \"C14N failed\"; \\\n+\t\t    fi; \\\n+\t\t    grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t\tfi; \\\n+\t\trm -f $(srcdir)\/test\/c14n\/test.tmp; \\\n+\t    done; \\\n+\tdone)\n@@ -1022,28 +1022,28 @@\n-    @(echo > .memdump)\n-    @echo \"## Schemas regression tests\"\n-    -@(for i in $(srcdir)\/test\/schemas\/*_*.xsd ; do \\\n-      name=`basename $$i | sed 's+_.*++'`; \\\n-      sno=`basename $$i | sed 's+.*_\\(.*\\).xsd+\\1+'`; \\\n-      for j in $(srcdir)\/test\/schemas\/\"$$name\"_*.xml ; do \\\n-          if [ -f $$j ] ; then \\\n-          xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n-          if [ ! -f $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\" ]; \\\n-          then \\\n-          echo New test file \"$$name\"_\"$$sno\"_\"$$xno\" ; \\\n-          $(CHECKER) $(top_builddir)\/testSchemas $$i $$j \\\n-            > $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\" \\\n-            2> $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\".err; \\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          else \\\n-              log=`$(CHECKER) $(top_builddir)\/testSchemas $$i $$j \\\n-            > res.$$name 2> err.$$name;\\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-              diff $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\" \\\n-               res.$$name;\\\n-              diff $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\".err \\\n-               err.$$name;\\\n-          grep Unimplemented err.$$name`; \\\n-              if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$sno\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n-              rm res.$$name err.$$name ; \\\n-           fi ; fi ;\\\n-      done; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Schemas regression tests\"\n+\t-@(for i in $(srcdir)\/test\/schemas\/*_*.xsd ; do \\\n+\t  name=`basename $$i | sed 's+_.*++'`; \\\n+\t  sno=`basename $$i | sed 's+.*_\\(.*\\).xsd+\\1+'`; \\\n+\t  for j in $(srcdir)\/test\/schemas\/\"$$name\"_*.xml ; do \\\n+\t      if [ -f $$j ] ; then \\\n+\t      xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n+\t      if [ ! -f $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\" ]; \\\n+\t      then \\\n+\t\t  echo New test file \"$$name\"_\"$$sno\"_\"$$xno\" ; \\\n+\t\t  $(CHECKER) $(top_builddir)\/testSchemas $$i $$j \\\n+\t\t    > $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\" \\\n+\t\t    2> $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\".err; \\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      else \\\n+\t          log=`$(CHECKER) $(top_builddir)\/testSchemas $$i $$j \\\n+\t\t    > res.$$name 2> err.$$name;\\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t          diff $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\" \\\n+\t\t       res.$$name;\\\n+\t          diff $(srcdir)\/result\/schemas\/\"$$name\"_\"$$sno\"_\"$$xno\".err \\\n+\t\t       err.$$name;\\\n+\t\t  grep Unimplemented err.$$name`; \\\n+\t          if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$sno\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n+\t          rm res.$$name err.$$name ; \\\n+\t       fi ; fi ;\\\n+\t  done; done)\n@@ -1052,71 +1052,71 @@\n-    @(echo > .memdump)\n-    @echo \"## Relax-NG regression tests\"\n-    -@(for i in $(srcdir)\/test\/relaxng\/*.rng ; do \\\n-      name=`basename $$i | sed 's+\\.rng++'`; \\\n-      if [ ! -f $(srcdir)\/result\/relaxng\/\"$$name\"_valid ] ; then \\\n-          echo New schemas $$name ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $(srcdir)\/test\/relaxng\/tutorA.rng $$i \\\n-              > $(srcdir)\/result\/relaxng\/\"$$name\"_valid \\\n-              2> $(srcdir)\/result\/relaxng\/\"$$name\"_err; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-      else \\\n-          log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $(srcdir)\/test\/relaxng\/tutorA.rng $$i \\\n-          > res.$$name 2> err.$$name;\\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          diff $(srcdir)\/result\/relaxng\/\"$$name\"_valid \\\n-           res.$$name;\\\n-          diff $(srcdir)\/result\/relaxng\/\"$$name\"_err \\\n-           err.$$name | grep -v \"error detected at\";\\\n-          grep Unimplemented err.$$name`; \\\n-          if [ -n \"$$log\" ] ; then echo schemas $$name result ; echo \"$$log\" ; fi ; \\\n-          rm res.$$name err.$$name ; \\\n-      fi; \\\n-      for j in $(srcdir)\/test\/relaxng\/\"$$name\"_*.xml ; do \\\n-          if [ -f $$j ] ; then \\\n-          xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n-          if [ ! -f $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" ]; \\\n-          then \\\n-          echo New test file \"$$name\"_\"$$xno\" ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $$i $$j \\\n-            > $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" \\\n-            2> $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err; \\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          else \\\n-              log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $$i $$j \\\n-            > res.$$name 2> err.$$name;\\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-              diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" \\\n-               res.$$name;\\\n-              diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err \\\n-               err.$$name | grep -v \"error detected at\";\\\n-          grep Unimplemented err.$$name`; \\\n-          if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n-              rm res.$$name err.$$name ; \\\n-           fi ; fi ; \\\n-      done; done)\n-    @echo \"## Relax-NG streaming regression tests\"\n-    -@(for i in $(srcdir)\/test\/relaxng\/*.rng ; do \\\n-      name=`basename $$i | sed 's+\\.rng++'`; \\\n-      for j in $(srcdir)\/test\/relaxng\/\"$$name\"_*.xml ; do \\\n-          if [ -f $$j ] ; then \\\n-          xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n-          if [ ! -f $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" ]; \\\n-          then \\\n-          echo New test file \"$$name\"_\"$$xno\" ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $$i $$j \\\n-            > $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" \\\n-            2> $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err; \\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          else \\\n-              log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --stream --relaxng $$i $$j \\\n-            > res.$$name 2> err.$$name;\\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-              diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" res.$$name;\\\n-          if [ \"$$name\" != \"tutor10_1\" -a \"$$name\" != \"tutor10_2\" -a \"$$name\" != \"tutor3_2\" -a \"$$name\" != \"307377\" -a \"$$name\" != \"tutor8_2\" ] ; then \\\n-              diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err \\\n-               err.$$name | grep -v \"error detected at\";\\\n-          fi ; grep Unimplemented err.$$name`; \\\n-              if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n-              rm res.$$name err.$$name ; \\\n-           fi ; fi ; \\\n-      done; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Relax-NG regression tests\"\n+\t-@(for i in $(srcdir)\/test\/relaxng\/*.rng ; do \\\n+\t  name=`basename $$i | sed 's+\\.rng++'`; \\\n+\t  if [ ! -f $(srcdir)\/result\/relaxng\/\"$$name\"_valid ] ; then \\\n+\t      echo New schemas $$name ; \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $(srcdir)\/test\/relaxng\/tutorA.rng $$i \\\n+\t\t      > $(srcdir)\/result\/relaxng\/\"$$name\"_valid \\\n+\t\t      2> $(srcdir)\/result\/relaxng\/\"$$name\"_err; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t  else \\\n+\t      log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $(srcdir)\/test\/relaxng\/tutorA.rng $$i \\\n+\t      > res.$$name 2> err.$$name;\\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      diff $(srcdir)\/result\/relaxng\/\"$$name\"_valid \\\n+\t\t   res.$$name;\\\n+\t      diff $(srcdir)\/result\/relaxng\/\"$$name\"_err \\\n+\t\t   err.$$name | grep -v \"error detected at\";\\\n+\t      grep Unimplemented err.$$name`; \\\n+\t      if [ -n \"$$log\" ] ; then echo schemas $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm res.$$name err.$$name ; \\\n+\t  fi; \\\n+\t  for j in $(srcdir)\/test\/relaxng\/\"$$name\"_*.xml ; do \\\n+\t      if [ -f $$j ] ; then \\\n+\t      xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n+\t      if [ ! -f $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" ]; \\\n+\t      then \\\n+\t\t  echo New test file \"$$name\"_\"$$xno\" ; \\\n+\t\t  $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $$i $$j \\\n+\t\t    > $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" \\\n+\t\t    2> $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err; \\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      else \\\n+\t          log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $$i $$j \\\n+\t\t    > res.$$name 2> err.$$name;\\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t          diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" \\\n+\t\t       res.$$name;\\\n+\t          diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err \\\n+\t\t       err.$$name | grep -v \"error detected at\";\\\n+\t\t  grep Unimplemented err.$$name`; \\\n+\t\t  if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n+\t          rm res.$$name err.$$name ; \\\n+\t       fi ; fi ; \\\n+\t  done; done)\n+\t@echo \"## Relax-NG streaming regression tests\"\n+\t-@(for i in $(srcdir)\/test\/relaxng\/*.rng ; do \\\n+\t  name=`basename $$i | sed 's+\\.rng++'`; \\\n+\t  for j in $(srcdir)\/test\/relaxng\/\"$$name\"_*.xml ; do \\\n+\t      if [ -f $$j ] ; then \\\n+\t      xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n+\t      if [ ! -f $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" ]; \\\n+\t      then \\\n+\t\t  echo New test file \"$$name\"_\"$$xno\" ; \\\n+\t\t  $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --relaxng $$i $$j \\\n+\t\t    > $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" \\\n+\t\t    2> $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err; \\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      else \\\n+\t          log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --noout --stream --relaxng $$i $$j \\\n+\t\t    > res.$$name 2> err.$$name;\\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t          diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\" res.$$name;\\\n+\t\t  if [ \"$$name\" != \"tutor10_1\" -a \"$$name\" != \"tutor10_2\" -a \"$$name\" != \"tutor3_2\" -a \"$$name\" != \"307377\" -a \"$$name\" != \"tutor8_2\" ] ; then \\\n+\t\t      diff $(srcdir)\/result\/relaxng\/\"$$name\"_\"$$xno\".err \\\n+\t\t\t   err.$$name | grep -v \"error detected at\";\\\n+\t\t  fi ; grep Unimplemented err.$$name`; \\\n+\t          if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n+\t          rm res.$$name err.$$name ; \\\n+\t       fi ; fi ; \\\n+\t  done; done)\n@@ -1125,27 +1125,27 @@\n-    @(echo > .memdump)\n-    @echo \"## Schematron regression tests\"\n-    -@(for i in $(srcdir)\/test\/schematron\/*.sct ; do \\\n-      name=`basename $$i | sed 's+\\.sct++'`; \\\n-      for j in $(srcdir)\/test\/schematron\/\"$$name\"_*.xml ; do \\\n-          if [ -f $$j ] ; then \\\n-          xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n-          if [ ! -f $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\" ]; \\\n-          then \\\n-          echo New test file \"$$name\"_\"$$xno\" ; \\\n-          $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --schematron $$i $$j \\\n-            > $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\" \\\n-            2> $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\".err; \\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          else \\\n-              log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --schematron $$i $$j \\\n-            > res.$$name 2> err.$$name;\\\n-              grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-              diff $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\" \\\n-               res.$$name;\\\n-              diff $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\".err \\\n-               err.$$name | grep -v \"error detected at\";\\\n-          grep Unimplemented err.$$name`; \\\n-          if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n-              rm res.$$name err.$$name ; \\\n-           fi ; fi ; \\\n-      done; done)\n+\t@(echo > .memdump)\n+\t@echo \"## Schematron regression tests\"\n+\t-@(for i in $(srcdir)\/test\/schematron\/*.sct ; do \\\n+\t  name=`basename $$i | sed 's+\\.sct++'`; \\\n+\t  for j in $(srcdir)\/test\/schematron\/\"$$name\"_*.xml ; do \\\n+\t      if [ -f $$j ] ; then \\\n+\t      xno=`basename $$j | sed 's+.*_\\(.*\\).xml+\\1+'`; \\\n+\t      if [ ! -f $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\" ]; \\\n+\t      then \\\n+\t\t  echo New test file \"$$name\"_\"$$xno\" ; \\\n+\t\t  $(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --schematron $$i $$j \\\n+\t\t    > $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\" \\\n+\t\t    2> $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\".err; \\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      else \\\n+\t          log=`$(CHECKER) $(top_builddir)\/xmllint$(EXEEXT) --schematron $$i $$j \\\n+\t\t    > res.$$name 2> err.$$name;\\\n+\t          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t          diff $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\" \\\n+\t\t       res.$$name;\\\n+\t          diff $(srcdir)\/result\/schematron\/\"$$name\"_\"$$xno\".err \\\n+\t\t       err.$$name | grep -v \"error detected at\";\\\n+\t\t  grep Unimplemented err.$$name`; \\\n+\t\t  if [ -n \"$$log\" ] ; then echo \"$$name\"_\"$$xno\" result ; echo \"$$log\" ; fi ; \\\n+\t          rm res.$$name err.$$name ; \\\n+\t       fi ; fi ; \\\n+\t  done; done)\n@@ -1154,10 +1154,10 @@\n-    @(if [ -x $(PYTHON) ] ; then \\\n-        PYTHONPATH=$(top_builddir)\/python:$(top_builddir)\/python\/.libs:$$PYTHONPATH ; \\\n-        export PYTHONPATH; \\\n-        LD_LIBRARY_PATH=\"$(top_builddir)\/.libs:$$LD_LIBRARY_PATH\" ; \\\n-        export LD_LIBRARY_PATH; \\\n-        echo \"## Relax-NG Python based test suite 1\" ; \\\n-        $(CHECKER) $(PYTHON) $(srcdir)\/check-relaxng-test-suite.py ; \\\n-        echo \"## Relax-NG Python based test suite 2\" ; \\\n-        $(CHECKER) $(PYTHON) $(srcdir)\/check-relaxng-test-suite2.py ; \\\n-      fi)\n+\t@(if [ -x $(PYTHON) ] ; then \\\n+\t    PYTHONPATH=$(top_builddir)\/python:$(top_builddir)\/python\/.libs:$$PYTHONPATH ; \\\n+\t    export PYTHONPATH; \\\n+\t    LD_LIBRARY_PATH=\"$(top_builddir)\/.libs:$$LD_LIBRARY_PATH\" ; \\\n+\t    export LD_LIBRARY_PATH; \\\n+\t    echo \"## Relax-NG Python based test suite 1\" ; \\\n+\t    $(CHECKER) $(PYTHON) $(srcdir)\/check-relaxng-test-suite.py ; \\\n+\t    echo \"## Relax-NG Python based test suite 2\" ; \\\n+\t    $(CHECKER) $(PYTHON) $(srcdir)\/check-relaxng-test-suite2.py ; \\\n+\t  fi)\n@@ -1166,10 +1166,10 @@\n-    @(if [ -x $(PYTHON) ] ; then \\\n-        PYTHONPATH=$(top_builddir)\/python:$(top_builddir)\/python\/.libs:$$PYTHONPATH; \\\n-        export PYTHONPATH; \\\n-        LD_LIBRARY_PATH=\"$(top_builddir)\/.libs:$$LD_LIBRARY_PATH\" ; \\\n-        export LD_LIBRARY_PATH; \\\n-        echo \"## XML Schemas datatypes Python based test suite\" ; \\\n-        echo \"## It is normal to see 11 errors reported\" ; \\\n-        $(CHECKER) $(PYTHON) $(srcdir)\/check-xsddata-test-suite.py ; \\\n-      fi)\n-    @(if [ -x $(PYTHON) -a -d xstc ] ; then cd xstc ; $(MAKE) CHECKER=\"$(CHECKER)\" pytests ; fi)\n+\t@(if [ -x $(PYTHON) ] ; then \\\n+\t    PYTHONPATH=$(top_builddir)\/python:$(top_builddir)\/python\/.libs:$$PYTHONPATH; \\\n+\t    export PYTHONPATH; \\\n+\t    LD_LIBRARY_PATH=\"$(top_builddir)\/.libs:$$LD_LIBRARY_PATH\" ; \\\n+\t    export LD_LIBRARY_PATH; \\\n+\t    echo \"## XML Schemas datatypes Python based test suite\" ; \\\n+\t    echo \"## It is normal to see 11 errors reported\" ; \\\n+\t    $(CHECKER) $(PYTHON) $(srcdir)\/check-xsddata-test-suite.py ; \\\n+\t  fi)\n+\t@(if [ -x $(PYTHON) -a -d xstc ] ; then cd xstc ; $(MAKE) CHECKER=\"$(CHECKER)\" pytests ; fi)\n@@ -1178,22 +1178,22 @@\n-    @(echo > .memdump)\n-    @echo \"## Pattern regression tests\"\n-    -@(for i in $(srcdir)\/test\/pattern\/*.pat ; do \\\n-      name=`basename $$i .pat`; \\\n-      if [ -f $(srcdir)\/test\/pattern\/$$name.xml ] ; then \\\n-      if [ ! -f $(srcdir)\/result\/pattern\/$$name ] ; then \\\n-          rm -f result.$$name ; \\\n-          echo New test file $$name ; \\\n-          for pat in `cat $$i` ; do \\\n-          $(CHECKER) $(top_builddir)\/xmllint --walker --pattern $$pat $(srcdir)\/test\/pattern\/$$name.xml >> $(srcdir)\/result\/pattern\/$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          done ;\\\n-      else \\\n-          rm -f result.$$name ; \\\n-          lst=`cat $$i` ; \\\n-          log=`for pat in $$lst ; do $(CHECKER) $(top_builddir)\/xmllint --walker --pattern $$pat $(srcdir)\/test\/pattern\/$$name.xml 2>&1 >> result.$$name ; \\\n-          grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n-          done ;\\\n-          diff $(srcdir)\/result\/pattern\/$$name result.$$name` ; \\\n-          if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n-          rm result.$$name ; \\\n-      fi ; fi ; done ;)\n+\t@(echo > .memdump)\n+\t@echo \"## Pattern regression tests\"\n+\t-@(for i in $(srcdir)\/test\/pattern\/*.pat ; do \\\n+\t  name=`basename $$i .pat`; \\\n+\t  if [ -f $(srcdir)\/test\/pattern\/$$name.xml ] ; then \\\n+\t  if [ ! -f $(srcdir)\/result\/pattern\/$$name ] ; then \\\n+\t      rm -f result.$$name ; \\\n+\t      echo New test file $$name ; \\\n+\t      for pat in `cat $$i` ; do \\\n+\t      $(CHECKER) $(top_builddir)\/xmllint --walker --pattern $$pat $(srcdir)\/test\/pattern\/$$name.xml >> $(srcdir)\/result\/pattern\/$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      done ;\\\n+\t  else \\\n+\t      rm -f result.$$name ; \\\n+\t      lst=`cat $$i` ; \\\n+\t      log=`for pat in $$lst ; do $(CHECKER) $(top_builddir)\/xmllint --walker --pattern $$pat $(srcdir)\/test\/pattern\/$$name.xml 2>&1 >> result.$$name ; \\\n+\t      grep \"MORY ALLO\" .memdump  | grep -v \"MEMORY ALLOCATED : 0\";\\\n+\t      done ;\\\n+\t      diff $(srcdir)\/result\/pattern\/$$name result.$$name` ; \\\n+\t      if [ -n \"$$log\" ] ; then echo $$name result ; echo \"$$log\" ; fi ; \\\n+\t      rm result.$$name ; \\\n+\t  fi ; fi ; done ;)\n@@ -1202,2 +1202,2 @@\n-    @echo \"## Module tests\"\n-    @(.\/testModule$(EXEEXT))\n+\t@echo \"## Module tests\"\n+\t@(.\/testModule$(EXEEXT))\n@@ -1206,3 +1206,3 @@\n-    -@(find . -name .\\#\\* -exec rm {} \\;)\n-    -@(find . -name \\*.gcda -o -name \\*.gcno -exec rm -f {} \\;)\n-    -@(find . -name \\*.orig -o -name \\*.rej -o -name \\*.old -exec rm -f {} \\;)\n+\t-@(find . -name .\\#\\* -exec rm {} \\;)\n+\t-@(find . -name \\*.gcda -o -name \\*.gcno -exec rm -f {} \\;)\n+\t-@(find . -name \\*.orig -o -name \\*.rej -o -name \\*.old -exec rm -f {} \\;)\n@@ -1211,2 +1211,2 @@\n-    -cp libxml2.spec $(distdir)\n-    (cd $(srcdir) ; tar -cf - --exclude CVS --exclude .svn --exclude .git win32 macos os400 vms VxWorks bakefile test result) | (cd $(distdir); tar xf -)\n+\t-cp libxml2.spec $(distdir)\n+\t(cd $(srcdir) ; tar -cf - --exclude CVS --exclude .svn --exclude .git win32 macos os400 vms VxWorks bakefile test result) | (cd $(distdir); tar xf -)\n@@ -1215,1 +1215,1 @@\n-    $(AMTAR) -chof - --exclude Tests --exclude test --exclude result $(distdir) | GZIP=$(GZIP_ENV) gzip -c >`echo \"$(distdir)\" | sed \"s+libxml2+libxml2-sources+\"`.tar.gz\n+\t$(AMTAR) -chof - --exclude Tests --exclude test --exclude result $(distdir) | GZIP=$(GZIP_ENV) gzip -c >`echo \"$(distdir)\" | sed \"s+libxml2+libxml2-sources+\"`.tar.gz\n@@ -1218,4 +1218,4 @@\n-    (mkdir -p $(distdir))\n-    (cd $(srcdir) ; tar -cf - --exclude CVS --exclude .svn --exclude .git xstc\/Tests) | (cd $(distdir); tar xf -)\n-    tar -cf - $(distdir)\/test $(distdir)\/result $(distdir)\/xstc\/Tests  $(distdir)\/Makefile.tests $(distdir)\/README $(distdir)\/README.tests $(distdir)\/AUTHORS $(distdir)\/testapi.c $(distdir)\/runtest.c $(distdir)\/runsuite.c | GZIP=$(GZIP_ENV) gzip -c >`echo \"$(distdir)\" | sed \"s+libxml2+libxml2-tests+\"`.tar.gz\n-    @(rm -rf $(distdir)\/xstc\/Test)\n+\t(mkdir -p $(distdir))\n+\t(cd $(srcdir) ; tar -cf - --exclude CVS --exclude .svn --exclude .git xstc\/Tests) | (cd $(distdir); tar xf -)\n+\ttar -cf - $(distdir)\/test $(distdir)\/result $(distdir)\/xstc\/Tests  $(distdir)\/Makefile.tests $(distdir)\/README $(distdir)\/README.tests $(distdir)\/AUTHORS $(distdir)\/testapi.c $(distdir)\/runtest.c $(distdir)\/runsuite.c | GZIP=$(GZIP_ENV) gzip -c >`echo \"$(distdir)\" | sed \"s+libxml2+libxml2-tests+\"`.tar.gz\n+\t@(rm -rf $(distdir)\/xstc\/Test)\n@@ -1224,1 +1224,1 @@\n-    @(rm -f libxml*.tar.gz COPYING.LIB)\n+\t@(rm -f libxml*.tar.gz COPYING.LIB)\n@@ -1227,1 +1227,1 @@\n-    @(unset CDPATH ; $(MAKE) dist-source dist && rpmbuild -ta $(distdir).tar.gz)\n+\t@(unset CDPATH ; $(MAKE) dist-source dist && rpmbuild -ta $(distdir).tar.gz)\n@@ -1236,7 +1236,7 @@\n-    sed -e 's?\\@XML_LIBDIR\\@?$(XML_LIBDIR)?g' \\\n-        -e 's?\\@XML_INCLUDEDIR\\@?$(XML_INCLUDEDIR)?g' \\\n-        -e 's?\\@VERSION\\@?$(VERSION)?g' \\\n-        -e 's?\\@XML_LIBS\\@?$(XML_LIBS)?g' \\\n-        -e 's?\\@XML_PRIVATE_LIBS\\@?$(XML_PRIVATE_LIBS)?g' \\\n-           < $(srcdir)\/xml2Conf.sh.in > xml2Conf.tmp \\\n-    && mv xml2Conf.tmp xml2Conf.sh\n+\tsed -e 's?\\@XML_LIBDIR\\@?$(XML_LIBDIR)?g' \\\n+\t    -e 's?\\@XML_INCLUDEDIR\\@?$(XML_INCLUDEDIR)?g' \\\n+\t    -e 's?\\@VERSION\\@?$(VERSION)?g' \\\n+\t    -e 's?\\@XML_LIBS\\@?$(XML_LIBS)?g' \\\n+\t    -e 's?\\@XML_PRIVATE_LIBS\\@?$(XML_PRIVATE_LIBS)?g' \\\n+\t       < $(srcdir)\/xml2Conf.sh.in > xml2Conf.tmp \\\n+\t&& mv xml2Conf.tmp xml2Conf.sh\n@@ -1252,2 +1252,2 @@\n-         check-relaxng-test-suite.py check-relaxng-test-suite2.py \\\n-         check-xsddata-test-suite.py check-xinclude-test-suite.py \\\n+\t     check-relaxng-test-suite.py check-relaxng-test-suite2.py \\\n+\t     check-xsddata-test-suite.py check-xinclude-test-suite.py \\\n@@ -1255,10 +1255,10 @@\n-         $(man_MANS) libxml-2.0.pc.in libxml-2.0-uninstalled.pc.in \\\n-         libxml2-config.cmake.in autogen.sh \\\n-         trionan.c trionan.h triostr.c triostr.h trio.c trio.h \\\n-         triop.h triodef.h libxml.h elfgcchack.h xzlib.h buf.h \\\n-         enc.h save.h genUnicode.py TODO_SCHEMAS \\\n-         dbgen.pl dbgenattr.pl regressions.py regressions.xml \\\n-         README.tests Makefile.tests libxml2.syms timsort.h \\\n-         README.zOS \\\n-         CMakeLists.txt config.h.cmake.in libxml2-config.cmake.cmake.in \\\n-         $(CVS_EXTRA_DIST)\n+\t     $(man_MANS) libxml-2.0.pc.in libxml-2.0-uninstalled.pc.in \\\n+\t     libxml2-config.cmake.in autogen.sh \\\n+\t     trionan.c trionan.h triostr.c triostr.h trio.c trio.h \\\n+\t     triop.h triodef.h libxml.h elfgcchack.h xzlib.h buf.h \\\n+\t     enc.h save.h genUnicode.py TODO_SCHEMAS \\\n+\t     dbgen.pl dbgenattr.pl regressions.py regressions.xml \\\n+\t     README.tests Makefile.tests libxml2.syms timsort.h \\\n+\t     README.zOS \\\n+\t     CMakeLists.txt config.h.cmake.in libxml2-config.cmake.cmake.in \\\n+\t     $(CVS_EXTRA_DIST)\n@@ -1274,1 +1274,1 @@\n-# Install the tests program sources as examples\n+# Install the tests program sources as examples \n@@ -1280,8 +1280,8 @@\n-install-data-local:\n-    $(MKDIR_P) $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\n-    -$(INSTALL) -m 0644 $(srcdir)\/Copyright $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\n-    $(MKDIR_P) $(DESTDIR)$(EXAMPLES_DIR)\n-    -$(INSTALL) -m 0644 $(srcdir)\/xmllint.c $(DESTDIR)$(EXAMPLES_DIR)\n-    -$(INSTALL) -m 0644 $(srcdir)\/testSAX.c $(DESTDIR)$(EXAMPLES_DIR)\n-    -$(INSTALL) -m 0644 $(srcdir)\/testHTML.c $(DESTDIR)$(EXAMPLES_DIR)\n-    -$(INSTALL) -m 0644 $(srcdir)\/testXPath.c $(DESTDIR)$(EXAMPLES_DIR)\n+install-data-local: \n+\t$(MKDIR_P) $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\n+\t-$(INSTALL) -m 0644 $(srcdir)\/Copyright $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\n+\t$(MKDIR_P) $(DESTDIR)$(EXAMPLES_DIR)\n+\t-$(INSTALL) -m 0644 $(srcdir)\/xmllint.c $(DESTDIR)$(EXAMPLES_DIR)\n+\t-$(INSTALL) -m 0644 $(srcdir)\/testSAX.c $(DESTDIR)$(EXAMPLES_DIR)\n+\t-$(INSTALL) -m 0644 $(srcdir)\/testHTML.c $(DESTDIR)$(EXAMPLES_DIR)\n+\t-$(INSTALL) -m 0644 $(srcdir)\/testXPath.c $(DESTDIR)$(EXAMPLES_DIR)\n@@ -1290,7 +1290,7 @@\n-    rm -f $(DESTDIR)$(EXAMPLES_DIR)\/testXPath.c\n-    rm -f $(DESTDIR)$(EXAMPLES_DIR)\/testHTML.c\n-    rm -f $(DESTDIR)$(EXAMPLES_DIR)\/testSAX.c\n-    rm -f $(DESTDIR)$(EXAMPLES_DIR)\/xmllint.c\n-    rm -rf $(DESTDIR)$(EXAMPLES_DIR)\n-    rm -f $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\/Copyright\n-    rm -rf $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\n+\trm -f $(DESTDIR)$(EXAMPLES_DIR)\/testXPath.c\n+\trm -f $(DESTDIR)$(EXAMPLES_DIR)\/testHTML.c\n+\trm -f $(DESTDIR)$(EXAMPLES_DIR)\/testSAX.c\n+\trm -f $(DESTDIR)$(EXAMPLES_DIR)\/xmllint.c\n+\trm -rf $(DESTDIR)$(EXAMPLES_DIR)\n+\trm -f $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\/Copyright\n+\trm -rf $(DESTDIR)$(BASE_DIR)\/$(DOC_MODULE)\n@@ -1299,1 +1299,1 @@\n-    $(CC) $(CFLAGS) -Iinclude -o tst tst.c .libs\/libxml2.a -lpthread -lm -lz -llzma\n+\t$(CC) $(CFLAGS) -Iinclude -o tst tst.c .libs\/libxml2.a -lpthread -lm -lz -llzma\n@@ -1302,1 +1302,1 @@\n-    $(MAKE) CC=cgcc\n+\t$(MAKE) CC=cgcc\n@@ -1312,12 +1312,12 @@\n-    if [ \"`echo $(LDFLAGS) | grep coverage`\" = \"\" ] ; then \\\n-        echo not configured with coverage; exit 1 ; fi\n-    if [ ! -x $(LCOV) -o ! -x $(GENHTML) ] ; then \\\n-        echo Need $(LCOV) and $(GENHTML) excecutables; exit 1 ; fi\n-    -@($(MAKE) check)\n-    -@(.\/runsuite$(EXEEXT))\n-    mkdir $(top_builddir)\/coverage\n-    $(LCOV) -c -o $(top_builddir)\/coverage\/libxml2.info.tmp -d $(top_srcdir)\n-    $(LCOV) -r $(top_builddir)\/coverage\/libxml2.info.tmp -o $(top_builddir)\/coverage\/libxml2.info *usr*\n-    rm $(top_builddir)\/coverage\/libxml2.info.tmp\n-    $(GENHTML) -s -t \"libxml2\" -o $(top_builddir)\/coverage --legend $(top_builddir)\/coverage\/libxml2.info\n-    echo \"Coverage report is in $(top_builddir)\/coverage\/index.html\"\n+\tif [ \"`echo $(LDFLAGS) | grep coverage`\" = \"\" ] ; then \\\n+\t    echo not configured with coverage; exit 1 ; fi\n+\tif [ ! -x $(LCOV) -o ! -x $(GENHTML) ] ; then \\\n+\t    echo Need $(LCOV) and $(GENHTML) excecutables; exit 1 ; fi\n+\t-@($(MAKE) check)\n+\t-@(.\/runsuite$(EXEEXT))\n+\tmkdir $(top_builddir)\/coverage\n+\t$(LCOV) -c -o $(top_builddir)\/coverage\/libxml2.info.tmp -d $(top_srcdir)\n+\t$(LCOV) -r $(top_builddir)\/coverage\/libxml2.info.tmp -o $(top_builddir)\/coverage\/libxml2.info *usr*\n+\trm $(top_builddir)\/coverage\/libxml2.info.tmp\n+\t$(GENHTML) -s -t \"libxml2\" -o $(top_builddir)\/coverage --legend $(top_builddir)\/coverage\/libxml2.info\n+\techo \"Coverage report is in $(top_builddir)\/coverage\/index.html\"\n@@ -1326,1 +1326,1 @@\n-    rm -rf $(top_builddir)\/coverage\n+\trm -rf $(top_builddir)\/coverage\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/ThirdParty\/libxml\/src\/Makefile.am","additions":1023,"deletions":1023,"binary":false,"changes":2046,"status":"modified"}]}