{"files":[{"patch":"@@ -220,1 +220,4 @@\n-    private void notifyWillFinishLaunching() {\n+    \/\/ Subclasses can override the following notify methods.\n+    \/\/ Overridden methods need to call super.\n+\n+    protected void notifyWillFinishLaunching() {\n@@ -227,1 +230,1 @@\n-    private void notifyDidFinishLaunching() {\n+    protected void notifyDidFinishLaunching() {\n@@ -234,1 +237,1 @@\n-    private void notifyWillBecomeActive() {\n+    protected void notifyWillBecomeActive() {\n@@ -241,1 +244,1 @@\n-    private void notifyDidBecomeActive() {\n+    protected void notifyDidBecomeActive() {\n@@ -249,1 +252,1 @@\n-    private void notifyWillResignActive() {\n+    protected void notifyWillResignActive() {\n@@ -256,1 +259,1 @@\n-    private boolean notifyThemeChanged(String themeName) {\n+    protected boolean notifyThemeChanged(String themeName) {\n@@ -264,1 +267,1 @@\n-    private void notifyDidResignActive() {\n+    protected void notifyDidResignActive() {\n@@ -271,1 +274,1 @@\n-    private void notifyDidReceiveMemoryWarning() {\n+    protected void notifyDidReceiveMemoryWarning() {\n@@ -278,1 +281,1 @@\n-    private void notifyWillHide() {\n+    protected void notifyWillHide() {\n@@ -285,1 +288,1 @@\n-    private void notifyDidHide() {\n+    protected void notifyDidHide() {\n@@ -292,1 +295,1 @@\n-    private void notifyWillUnhide() {\n+    protected void notifyWillUnhide() {\n@@ -299,1 +302,1 @@\n-    private void notifyDidUnhide() {\n+    protected void notifyDidUnhide() {\n@@ -307,1 +310,1 @@\n-    private void notifyOpenFiles(String files[]) {\n+    protected void notifyOpenFiles(String files[]) {\n@@ -318,1 +321,1 @@\n-    private void notifyWillQuit() {\n+    protected void notifyWillQuit() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Application.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.javafx.util.Logging;\n@@ -38,0 +39,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -76,0 +79,12 @@\n+        \/\/ For normal (not embedded) taskbar applications the masOS activation\n+        \/\/ init code will deactivate and then reactivate the application to\n+        \/\/ allow the system menubar to work properly.\n+        \/\/ We need to spin up a nested event loop and wait for the reactivation\n+        \/\/ to finish prior to allowing the rest of the initialization to run.\n+        final Runnable wrappedRunnable = () -> {\n+            if (isNormalTaskbarApp()) {\n+                waitForReactivation();\n+            }\n+            launchable.run();\n+        };\n+\n@@ -83,1 +98,24 @@\n-        _runLoop(classLoader, launchable, isTaskbarApplication);\n+        _runLoop(classLoader, wrappedRunnable, isTaskbarApplication);\n+    }\n+\n+    private final CountDownLatch reactivationLatch = new CountDownLatch(1);\n+\n+    \/\/ Spin up a nested event loop waiting for the app reactivation event\n+    void waitForReactivation() {\n+        final EventLoop eventLoop = createEventLoop();\n+        Thread thr = new Thread(() -> {\n+            try {\n+                if (!reactivationLatch.await(5, TimeUnit.SECONDS)) {\n+                    Logging.getJavaFXLogger().warning(\"Timeout while waiting for app reactivation\");\n+                }\n+            } catch (InterruptedException ex) {\n+                Logging.getJavaFXLogger().warning(\"Exception while waiting for app reactivation: \" + ex);\n+            }\n+            Application.invokeLater(() -> {\n+                eventLoop.leave(null);\n+            });\n+        });\n+        thr.setDaemon(true);\n+        thr.start();\n+\n+        eventLoop.enter();\n@@ -98,0 +136,16 @@\n+    private boolean firstDidResignActive = false;\n+\n+    @Override\n+    protected void notifyDidResignActive() {\n+        firstDidResignActive = true;\n+        super.notifyDidResignActive();\n+    }\n+\n+    @Override\n+    protected void notifyDidBecomeActive() {\n+        if (firstDidResignActive) {\n+            reactivationLatch.countDown();\n+        }\n+        super.notifyDidBecomeActive();\n+    }\n+\n@@ -316,0 +370,7 @@\n+    \/\/ NOTE: this will not return a valid result until the native _runloop\n+    \/\/ method has been executed and called the Runnable passed to that method.\n+    native private boolean _isNormalTaskbarApp();\n+    boolean isNormalTaskbarApp() {\n+        return _isNormalTaskbarApp();\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":62,"deletions":1,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+static BOOL isNormalTaskbarApp = NO;\n@@ -58,0 +59,2 @@\n+static BOOL firstActivation = YES;\n+static BOOL shouldReactivate = NO;\n@@ -274,0 +277,7 @@\n+\n+    if (isNormalTaskbarApp && firstActivation) {\n+        LOG(\"-> deactivate (hide)  app\");\n+        firstActivation = NO;\n+        shouldReactivate = YES;\n+        [NSApp hide:NSApp];\n+    }\n@@ -300,0 +310,6 @@\n+\n+    if (isNormalTaskbarApp && shouldReactivate) {\n+        LOG(\"-> reactivate  app\");\n+        shouldReactivate = NO;\n+        [NSApp activateIgnoringOtherApps:YES];\n+    }\n@@ -520,0 +536,1 @@\n+                isNormalTaskbarApp = YES;\n@@ -1053,0 +1070,12 @@\n+\/*\n+ * Class:     com_sun_glass_ui_mac_MacApplication\n+ * Method:    _isNormalTaskbarApp\n+ * Signature: ()Z;\n+ *\/\n+JNIEXPORT jboolean JNICALL Java_com_sun_glass_ui_mac_MacApplication__1isNormalTaskbarApp\n+(JNIEnv *env, jobject japplication)\n+{\n+    LOG(\"Java_com_sun_glass_ui_mac_MacApplication__1isNormalTaskbarApp\");\n+    return isNormalTaskbarApp;\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassApplication.m","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -327,0 +327,1 @@\n+            LOG(\"calling setAppleMenu\");\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassMenu.m","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}