{"files":[{"patch":"@@ -737,0 +737,14 @@\n+    \/**\n+     * Creates a GridPane layout with the given {@link #hgapProperty() hgap} and {@link #vgapProperty() vgap}.\n+     *\n+     * @param hgap the width of the horizontal gaps between columns\n+     * @param vgap the height of the vertical gaps between rows\n+     *\n+     * @since 21\n+     *\/\n+    public GridPane(double hgap, double vgap) {\n+        this();\n+        setHgap(hgap);\n+        setVgap(vgap);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/GridPane.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3161,0 +3161,11 @@\n+\n+    @Test\n+    public void testGridPaneHgapVgapConstructor() {\n+        assertEquals(0, gridpane.getHgap(), 0);\n+        assertEquals(0, gridpane.getVgap(), 0);\n+\n+        gridpane = new GridPane(3, 8);\n+\n+        assertEquals(3, gridpane.getHgap(), 0);\n+        assertEquals(8, gridpane.getVgap(), 0);\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/GridPaneTest.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}