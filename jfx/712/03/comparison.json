{"files":[{"patch":"@@ -1337,0 +1337,2 @@\n+        recalculateAndImproveEstimatedSize(0);\n+\n@@ -1767,0 +1769,1 @@\n+                resizeCell(cell);\n@@ -1999,0 +2002,2 @@\n+        \/\/ when a cell is resized, our estimate needs to be updated.\n+        recalculateAndImproveEstimatedSize(0);\n@@ -2445,0 +2450,14 @@\n+    private void shiftDown() {\n+        T lastNonEmptyCell = getLastVisibleCell();\n+        T firstCell = cells.getFirst();\n+        int index = getCellIndex(firstCell);\n+        double end = getCellPosition(lastNonEmptyCell) + getCellLength(lastNonEmptyCell);\n+        double delta = viewportLength - end;\n+        if ((index > 0) && (delta > 0)) {\n+            for (int i = 0; i < cells.size(); i++) {\n+                T cell = cells.get(i);\n+                positionCell(cell, getCellPosition(cell) + delta);\n+            }\n+        }\n+    }\n+\n@@ -2489,0 +2508,1 @@\n+            shiftDown();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2188,0 +2188,93 @@\n+\n+    @Test public void testUnfixedCellScrollResize() {\n+        final ObservableList<Integer> items = FXCollections.observableArrayList(300,300,70,20);\n+        final ListView<Integer> listView = new ListView(items);\n+        listView.setPrefHeight(400);\n+        double viewportLength = 398; \/\/ it would be better to calculate this from listView but there is no API for this\n+        listView.setCellFactory(lv -> new ListCell<Integer>() {\n+            @Override\n+            public void updateItem(Integer item, boolean empty) {\n+                super.updateItem(item, empty);\n+                if (!empty && (item!=null)) {\n+                    this.setPrefHeight(item);\n+                }\n+            }\n+        });\n+        StageLoader sl = new StageLoader(listView);\n+        Toolkit.getToolkit().firePulse();\n+        listView.scrollTo(2);\n+        Toolkit.getToolkit().firePulse();\n+        int cc = VirtualFlowTestUtils.getCellCount(listView);\n+        boolean got70 = false;\n+        boolean got20 = false;\n+        for (int i = 0; i < cc; i++) {\n+            IndexedCell<Integer> cell = VirtualFlowTestUtils.getCell(listView, i);\n+            if ((cell != null) && (cell.getItem() == 20)) {\n+                assertEquals(\"Last cell doesn't end at listview end\", cell.getLayoutY(), viewportLength - 20,1.);\n+                got20 = true;\n+            }\n+            if ((cell != null) && (cell.getItem() == 70)) {\n+                assertEquals(\"Secondlast cell doesn't end properly\", cell.getLayoutY(), viewportLength - 20 - 70,1.);\n+                got70 = true;\n+            }\n+        }\n+        assertTrue (got20);\n+        assertTrue (got70);\n+        \/\/ resize cells and make sure they align after scrolling\n+        ObservableList<Integer> list = FXCollections.observableArrayList();\n+        list.addAll(300,300,20,21);\n+        listView.setItems(list);\n+        listView.scrollTo(4);\n+        Toolkit.getToolkit().firePulse();\n+        got20 = false;\n+        boolean got21 = false;\n+        for (int i = 0; i < cc; i++) {\n+            IndexedCell<Integer> cell = VirtualFlowTestUtils.getCell(listView, i);\n+            if ((cell != null) && (cell.getItem() == 21)) {\n+                assertEquals(\"Last cell doesn't end at listview end\", cell.getLayoutY(), viewportLength - 21,1.);\n+                got21 = true;\n+            }\n+            if ((cell != null) && (cell.getItem() == 20)) {\n+                assertEquals(\"Secondlast cell doesn't end properly\", cell.getLayoutY(), viewportLength - 21 - 20,1.);\n+                got20 = true;\n+            }\n+        }\n+        assertTrue (got20);\n+        assertTrue (got21);\n+    }\n+\n+\n+    @Test public void testNoEmptyEnd() {\n+        final ObservableList<Integer> items = FXCollections.observableArrayList(200, 200, 200, 200, 200, 200, 200, 200, 20, 20, 20, 20, 20, 20, 20);\n+        final ListView<Integer> listView = new ListView(items);\n+        listView.setPrefHeight(400);\n+        double viewportLength = 398;\n+        listView.setCellFactory(lv -> new ListCell<Integer>() {\n+            @Override\n+            public void updateItem(Integer item, boolean empty) {\n+                super.updateItem(item, empty);\n+                if (!empty && (item!=null)) {\n+                    this.setPrefHeight(item);\n+                }\n+            }\n+        });\n+        StageLoader sl = new StageLoader(listView);\n+        Toolkit.getToolkit().firePulse();\n+        listView.scrollTo(14);\n+        Toolkit.getToolkit().firePulse();\n+        int cc = VirtualFlowTestUtils.getCellCount(listView);\n+        assertEquals(cc, 15);\n+        boolean got70 = false;\n+        for (int i = 0; i < cc; i++) {\n+            IndexedCell<Integer> cell = VirtualFlowTestUtils.getCell(listView, i);\n+            int tens = Math.min(15-i,7);\n+            int hundreds = Math.max(8-i,0);\n+            double exp = 398 - 20 * tens - 200 * hundreds;\n+            double real = cell.getLayoutY();\n+            if (cell.isVisible()) {\n+                assertEquals(exp, real, 0.1);\n+            }\n+        }\n+    }\n+\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"modified"}]}