{"files":[{"patch":"@@ -87,1 +87,0 @@\n-static GstStateChangeReturn mfwrapper_change_state(GstElement* element, GstStateChange transition);\n@@ -95,3 +94,0 @@\n-static gboolean mfwrapper_src_query(GstPad* pad, GstObject *parent, GstQuery* query);\n-static gboolean mfwrapper_src_event(GstPad* pad, GstObject *parent, GstEvent* event);\n-\n@@ -161,2 +157,0 @@\n-    element_class->change_state = mfwrapper_change_state;\n-\n@@ -193,2 +187,0 @@\n-    gst_pad_set_query_function(decoder->srcpad, mfwrapper_src_query);\n-    gst_pad_set_event_function(decoder->srcpad, mfwrapper_src_event);\n@@ -294,24 +286,0 @@\n-\/\/ Perform processing needed for state transitions.\n-static GstStateChangeReturn mfwrapper_change_state(GstElement* element, GstStateChange transition)\n-{\n-    GstMFWrapper *decoder = GST_MFWRAPPER(element);\n-    GstStateChangeReturn ret;\n-\n-    \/\/ Change state.\n-    ret = GST_ELEMENT_CLASS(parent_class)->change_state(element, transition);\n-    if (GST_STATE_CHANGE_FAILURE == ret)\n-    {\n-        return ret;\n-    }\n-\n-    switch (transition)\n-    {\n-    case GST_STATE_CHANGE_READY_TO_NULL:\n-        break;\n-    default:\n-        break;\n-    }\n-\n-    return ret;\n-}\n-\n@@ -423,0 +391,1 @@\n+    gboolean unlock_buf = FALSE;\n@@ -454,0 +423,3 @@\n+    if (SUCCEEDED(hr))\n+        unlock_buf = TRUE;\n+\n@@ -474,1 +446,1 @@\n-    if (SUCCEEDED(hr))\n+    if (unlock_buf)\n@@ -526,1 +498,1 @@\n-            hr = S_FALSE;\n+            hr = E_FAIL;\n@@ -546,0 +518,1 @@\n+        {\n@@ -547,0 +520,3 @@\n+            if (SUCCEEDED(hr))\n+                hr = pInputType->SetUINT32(MF_MT_DEFAULT_STRIDE, unDefaultStride);\n+        }\n@@ -549,5 +525,1 @@\n-            hr = pInputType->SetUINT32(MF_MT_DEFAULT_STRIDE, unDefaultStride);\n-        else\n-            hr = S_OK;\n-\n-        if (SUCCEEDED(hr))\n+        {\n@@ -555,5 +527,3 @@\n-\n-        if (SUCCEEDED(hr))\n-            hr = MFSetAttributeRatio(pInputType, MF_MT_PIXEL_ASPECT_RATIO, unNumerator, unDenominator);\n-        else\n-            hr = S_OK;\n+            if (SUCCEEDED(hr))\n+                hr = MFSetAttributeRatio(pInputType, MF_MT_PIXEL_ASPECT_RATIO, unNumerator, unDenominator);\n+        }\n@@ -571,1 +541,1 @@\n-    } while (hr != MF_E_NO_MORE_TYPES && hr != S_OK);\n+    } while (hr != MF_E_NO_MORE_TYPES && FAILED(hr));\n@@ -586,1 +556,1 @@\n-            hr = S_FALSE;\n+            hr = E_FAIL;\n@@ -612,1 +582,1 @@\n-    } while (hr != MF_E_NO_MORE_TYPES && hr != S_OK);\n+    } while (hr != MF_E_NO_MORE_TYPES && FAILED(hr));\n@@ -675,1 +645,1 @@\n-    if (dwFlags != MFT_OUTPUT_STATUS_SAMPLE_READY)\n+    if (SUCCEEDED(hr) && dwFlags != MFT_OUTPUT_STATUS_SAMPLE_READY)\n@@ -680,5 +650,1 @@\n-    if (hr == MF_E_TRANSFORM_NEED_MORE_INPUT)\n-    {\n-        return FALSE;\n-    }\n-    else if (hr == MF_E_TRANSFORM_STREAM_CHANGE)\n+    if (hr == MF_E_TRANSFORM_STREAM_CHANGE)\n@@ -719,0 +685,1 @@\n+    GstMapInfo info;\n@@ -728,3 +695,1 @@\n-        GstMapInfo info;\n-\n-        if (!gst_buffer_map(pGstBuffer, &info, GST_MAP_WRITE))\n+        if (pGstBuffer == NULL || !gst_buffer_map(pGstBuffer, &info, GST_MAP_WRITE))\n@@ -741,3 +706,1 @@\n-        if (SUCCEEDED(hr))\n-            hr = pMediaBuffer->Unlock();\n-\n+        hr = pMediaBuffer->Unlock();\n@@ -767,0 +730,4 @@\n+    else if (SUCCEEDED(hr))\n+    {\n+        pMediaBuffer->Unlock();\n+    }\n@@ -792,1 +759,1 @@\n-    if (dwFlags != MFT_OUTPUT_STATUS_SAMPLE_READY)\n+    if (SUCCEEDED(hr) && dwFlags != MFT_OUTPUT_STATUS_SAMPLE_READY)\n@@ -839,1 +806,1 @@\n-                    hr = S_FALSE;\n+                    hr = E_FAIL;\n@@ -845,1 +812,1 @@\n-            } while (hr != MF_E_NO_MORE_TYPES && hr != S_OK);\n+            } while (hr != MF_E_NO_MORE_TYPES && FAILED(hr));\n@@ -963,1 +930,1 @@\n-            hr = decoder->pDecoder->ProcessMessage(MFT_MESSAGE_COMMAND_DRAIN, 0);\n+            decoder->pDecoder->ProcessMessage(MFT_MESSAGE_COMMAND_DRAIN, 0);\n@@ -1333,34 +1300,0 @@\n-static gboolean mfwrapper_src_query(GstPad * pad, GstObject *parent, GstQuery * query)\n-{\n-    gboolean result = FALSE;\n-    GstMFWrapper *decoder = GST_MFWRAPPER(parent);\n-\n-    switch (GST_QUERY_TYPE(query))\n-    {\n-    case GST_QUERY_DURATION:\n-        break;\n-    case GST_QUERY_POSITION:\n-        break;\n-    default:\n-        break;\n-    }\n-\n-    \/\/ Use default query if flag indicates query not handled\n-    if (result == FALSE)\n-        result = gst_pad_query_default(pad, parent, query);\n-\n-    return result;\n-}\n-\n-static gboolean mfwrapper_src_event(GstPad* pad, GstObject *parent, GstEvent* event)\n-{\n-    gboolean result = FALSE;\n-    GstMFWrapper *decoder = GST_MFWRAPPER(parent);\n-\n-    \/\/ Push the event upstream only if it was not processed.\n-    if (!result)\n-        result = gst_pad_push_event(decoder->sinkpad, event);\n-\n-    return result;\n-}\n-\n","filename":"modules\/javafx.media\/src\/main\/native\/gstreamer\/plugins\/mfwrapper\/mfwrapper.cpp","additions":30,"deletions":97,"binary":false,"changes":127,"status":"modified"}]}