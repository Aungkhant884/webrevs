{"files":[{"patch":"@@ -160,0 +160,6 @@\n+\n+        focusedProperty().addListener(o -> {\n+            if (!isFocused()) {\n+                commitValue();\n+            }\n+        });\n@@ -428,0 +434,35 @@\n+    \/**\n+     * If the {@link DatePicker} is {@link #editableProperty() editable}, calling this method will attempt to\n+     * commit the current text and convert it to a {@link #valueProperty() value}.\n+     * @since 18\n+     *\/\n+    public final void commitValue() {\n+        if (!isEditable()) {\n+            return;\n+        }\n+        String text = getEditor().getText();\n+        StringConverter<LocalDate> converter = getConverter();\n+        if (converter != null) {\n+            LocalDate value = converter.fromString(text);\n+            setValue(value);\n+        }\n+    }\n+\n+    \/**\n+     * If the {@link DatePicker} is {@link #editableProperty() editable}, calling this method will attempt to\n+     * replace the editor text with the last committed {@link #valueProperty() value}.\n+     * @since 18\n+     *\/\n+    public final void cancelEdit() {\n+        if (!isEditable()) {\n+            return;\n+        }\n+        LocalDate committedValue = getValue();\n+        StringConverter<LocalDate> converter = getConverter();\n+        if (converter != null) {\n+            String valueString = converter.toString(committedValue);\n+            getEditor().setText(valueString);\n+        }\n+    }\n+\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/DatePicker.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import javafx.scene.control.Button;\n+import javafx.scene.layout.HBox;\n@@ -620,0 +622,90 @@\n+\n+    @Test\n+    public void testCommitValue() {\n+        datePicker.setEditable(true);\n+        datePicker.getEditor().setText(\"11\/24\/2021\");\n+        datePicker.commitValue();\n+\n+        assertEquals(LocalDate.of(2021, 11, 24), datePicker.getValue());\n+        assertEquals(\"11\/24\/2021\", datePicker.getEditor().getText());\n+    }\n+\n+    @Test\n+    public void testNotEditableCommitValue() {\n+        datePicker.setEditable(false);\n+        datePicker.getEditor().setText(\"11\/24\/2021\");\n+        datePicker.commitValue();\n+\n+        assertNull(datePicker.getValue());\n+        assertEquals(\"11\/24\/2021\", datePicker.getEditor().getText());\n+    }\n+\n+    @Test(expected = RuntimeException.class)\n+    public void testCommitValueWrongType() {\n+        datePicker.setEditable(true);\n+        datePicker.getEditor().setText(\"Some Date\");\n+        datePicker.commitValue();\n+\n+        assertNull(datePicker.getValue());\n+        assertEquals(\"Some Date\", datePicker.getEditor().getText());\n+    }\n+\n+    @Test\n+    public void testCancelEdit() {\n+        LocalDate date = LocalDate.of(2021, 11, 24);\n+        String dateString = \"11\/24\/2021\";\n+\n+        datePicker.setEditable(true);\n+        datePicker.getEditor().setText(dateString);\n+        datePicker.commitValue();\n+\n+        assertEquals(date, datePicker.getValue());\n+        assertEquals(dateString, datePicker.getEditor().getText());\n+\n+        datePicker.getEditor().setText(\"12\/26\/2021\");\n+        datePicker.cancelEdit();\n+\n+        assertEquals(date, datePicker.getValue());\n+        assertEquals(dateString, datePicker.getEditor().getText());\n+    }\n+\n+    @Test\n+    public void testNotEditableCancelEdit() {\n+        LocalDate date = LocalDate.of(2021, 11, 24);\n+\n+        datePicker.getEditor().setText(\"11\/24\/2021\");\n+        datePicker.commitValue();\n+\n+        assertEquals(date, datePicker.getValue());\n+        assertEquals(\"11\/24\/2021\", datePicker.getEditor().getText());\n+\n+        datePicker.setEditable(false);\n+        datePicker.getEditor().setText(\"12\/26\/2021\");\n+        datePicker.cancelEdit();\n+\n+        assertEquals(date, datePicker.getValue());\n+        assertEquals(\"12\/26\/2021\", datePicker.getEditor().getText());\n+    }\n+\n+    @Test\n+    public void testFocusLost() {\n+        datePicker.setEditable(true);\n+        assertNull(datePicker.getValue());\n+\n+        Button button = new Button();\n+        StageLoader stageLoader = new StageLoader(new HBox(datePicker, button));\n+\n+        stageLoader.getStage().requestFocus();\n+        datePicker.requestFocus();\n+        datePicker.getEditor().setText(\"11\/24\/2021\");\n+\n+        assertNull(datePicker.getValue());\n+\n+        button.requestFocus();\n+\n+        assertEquals(LocalDate.of(2021, 11, 24), datePicker.getValue());\n+        assertEquals(\"11\/24\/2021\", datePicker.getEditor().getText());\n+\n+        stageLoader.dispose();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/DatePickerTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"modified"}]}