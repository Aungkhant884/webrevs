{"files":[{"patch":"@@ -33,1 +33,3 @@\n-\n+    public static final double DEFAULT_WIDTH = TableColumnBase.DEFAULT_WIDTH;\n+    public static final double DEFAULT_MIN_WIDTH = TableColumnBase.DEFAULT_MIN_WIDTH;\n+    public static final double DEFAULT_MAX_WIDTH = TableColumnBase.DEFAULT_MAX_WIDTH;\n","filename":"modules\/javafx.controls\/src\/shims\/java\/javafx\/scene\/control\/TableColumnShim.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import org.junit.Ignore;\n@@ -52,1 +51,0 @@\n-    @Ignore(\"Waiting on fix for RT-13478\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/XYChartDataTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -570,1 +570,0 @@\n-    @Ignore (\"CSS Graphic must be a URL, and then it will try to load the image. Not sure how to test.\")\n@@ -580,1 +579,0 @@\n-    @Ignore (\"CSS Graphic must be a URL, and then it will try to load the image. Not sure how to test.\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/LabeledTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import org.junit.Ignore;\n@@ -493,1 +492,1 @@\n-    @Ignore @Test public void replacingTheSelectionModelRemovesTheListenerFromTheOldModel() {\n+    @Test public void replacingTheSelectionModelRemovesTheListenerFromTheOldModel() {\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -736,1 +736,0 @@\n-    @Ignore\n@@ -768,1 +767,0 @@\n-    @Ignore\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TabPaneTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-import org.junit.Ignore;\n@@ -446,5 +445,0 @@\n-    @Ignore(\"The following test is incomplete with no proper sense.\")\n-    @Test public void checkEventDispatcherChain() {\n-        EventDispatchChain chain = new EventDispatchChainImpl();\n-        tab.buildEventDispatchChain(chain);\n-    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TabTest.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,1 +63,0 @@\n-import org.junit.Ignore;\n@@ -465,4 +464,3 @@\n-    @Ignore (\"Fails with hardcoded value of 10\")\n-    @Test public void minWidthIs_USE_COMPUTED_SIZE_ByDefault() {\n-        assertEquals(Control.USE_COMPUTED_SIZE, column.getMinWidth(), 0);\n-        assertEquals(Control.USE_COMPUTED_SIZE, column.minWidthProperty().get(), 0);\n+    @Test public void minWidthIs_DEFAULT_MIN_WIDTH_ByDefault() {\n+        assertEquals(TableColumnShim.DEFAULT_MIN_WIDTH, column.getMinWidth(), 0);\n+        assertEquals(TableColumnShim.DEFAULT_MIN_WIDTH, column.minWidthProperty().get(), 0);\n@@ -497,4 +495,3 @@\n-    @Ignore (\"Fails with hardcoded value of 5000\")\n-    @Test public void maxWidthIs_USE_COMPUTED_SIZE_ByDefault() {\n-        assertEquals(Control.USE_COMPUTED_SIZE, column.getMaxWidth(), 0);\n-        assertEquals(Control.USE_COMPUTED_SIZE, column.maxWidthProperty().get(), 0);\n+    @Test public void maxWidthIs_DEFAULT_MAX_WIDTH_ByDefault() {\n+        assertEquals(TableColumnShim.DEFAULT_MAX_WIDTH, column.getMaxWidth(), 0);\n+        assertEquals(TableColumnShim.DEFAULT_MAX_WIDTH, column.maxWidthProperty().get(), 0);\n@@ -529,4 +526,3 @@\n-    @Ignore (\"Fails with hardcoded value of 80\")\n-    @Test public void prefWidthIs_USE_COMPUTED_SIZE_ByDefault() {\n-        assertEquals(Control.USE_COMPUTED_SIZE, column.getPrefWidth(), 0);\n-        assertEquals(Control.USE_COMPUTED_SIZE, column.prefWidthProperty().get(), 0);\n+    @Test public void prefWidthIs_DEFAULT_WIDTH_ByDefault() {\n+        assertEquals(TableColumnShim.DEFAULT_WIDTH, column.getPrefWidth(), 0);\n+        assertEquals(TableColumnShim.DEFAULT_WIDTH, column.prefWidthProperty().get(), 0);\n@@ -1126,1 +1122,0 @@\n-    @Ignore(\"This started failing when I upgraded to Java 7\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableColumnTest.java","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import org.junit.Ignore;\n@@ -196,1 +195,0 @@\n-    @Ignore(\"TODO: Please remove ignore annotation after RT-15799 is fixed.\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TextAreaTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,1 +224,0 @@\n-    @Ignore(\"TODO: Please remove ignore annotation after RT-15799 is fixed.\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TextFieldTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}