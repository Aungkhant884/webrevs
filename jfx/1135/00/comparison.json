{"files":[{"patch":"@@ -53,0 +53,1 @@\n+import javafx.scene.input.MouseEvent;\n@@ -260,13 +261,1 @@\n-        cornerRegion.setOnMousePressed(me -> {\n-            if (columnPopupMenu == null) {\n-                columnPopupMenu = new ContextMenu();\n-                columnMenuItems = new HashMap<>();\n-\n-                TableSkinUtils.getVisibleLeafColumns(skin).addListener(weakTableColumnsListener);\n-                TableSkinUtils.getColumns(tableSkin).addListener(weakTableColumnsListener);\n-                updateTableColumnListeners(TableSkinUtils.getColumns(tableSkin), List.of());\n-            }\n-            \/\/ show a popupMenu which lists all columns\n-            columnPopupMenu.show(cornerRegion, Side.BOTTOM, 0, 0);\n-            me.consume();\n-        });\n+        cornerRegion.setOnMousePressed(this::showColumnMenu);\n@@ -478,1 +467,19 @@\n-\n+    \/**\n+     * Shows a menu with all leaf columns.\n+     * These can selected\/deselected to make the corresponding column visible\/invisible.\n+     * This method can be overridden if there is a desire to create and show a custom menu.\n+     *\n+     * @param mouseEvent the {@link MouseEvent} which was generated when the corner region was pressed.\n+     *\/\n+    protected void showColumnMenu(MouseEvent mouseEvent) {\n+        if (columnPopupMenu == null) {\n+            columnPopupMenu = new ContextMenu();\n+            columnMenuItems = new HashMap<>();\n+\n+            TableSkinUtils.getVisibleLeafColumns(tableSkin).addListener(weakTableColumnsListener);\n+            TableSkinUtils.getColumns(tableSkin).addListener(weakTableColumnsListener);\n+            updateTableColumnListeners(TableSkinUtils.getColumns(tableSkin), List.of());\n+        }\n+        columnPopupMenu.show(cornerRegion, Side.BOTTOM, 0, 0);\n+        mouseEvent.consume();\n+    }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableHeaderRow.java","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -36,0 +36,3 @@\n+import javafx.scene.control.skin.TableViewSkin;\n+import javafx.scene.control.skin.TableViewSkinBase;\n+import javafx.scene.input.MouseEvent;\n@@ -207,0 +210,42 @@\n+    @Test\n+    void testOverriddenColumnPopupMenu() {\n+        tableView.setSkin(new CustomTableViewSkin<>(tableView));\n+\n+        tableHeaderRow = VirtualFlowTestUtils.getTableHeaderRow(tableView);\n+        cornerRegion = TableHeaderRowShim.getCornerRegion(tableHeaderRow);\n+\n+        ContextMenu columnPopupMenu = TableHeaderRowShim.getColumnPopupMenu(tableHeaderRow);\n+        assertNull(columnPopupMenu);\n+\n+        MouseEventFirer mouseEventFirer = new MouseEventFirer(cornerRegion);\n+        mouseEventFirer.fireMousePressed();\n+\n+        \/\/ Since the showColumnMenu() is overridden, the column popup menu should not be created.\n+        columnPopupMenu = TableHeaderRowShim.getColumnPopupMenu(tableHeaderRow);\n+        assertNull(columnPopupMenu);\n+    }\n+\n+    private static class CustomTableViewSkin<S> extends TableViewSkin<S> {\n+\n+        public CustomTableViewSkin(TableView<S> control) {\n+            super(control);\n+        }\n+\n+        @Override\n+        protected TableHeaderRow createTableHeaderRow() {\n+            return new CustomTableHeaderRow(this);\n+        }\n+\n+        private static class CustomTableHeaderRow extends TableHeaderRow {\n+\n+            public CustomTableHeaderRow(TableViewSkinBase skin) {\n+                super(skin);\n+            }\n+\n+            @Override\n+            protected void showColumnMenu(MouseEvent mouseEvent) {\n+                \/\/ noop - overridden for testing\n+            }\n+        }\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TableViewTableHeaderRowTest.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -36,0 +36,3 @@\n+import javafx.scene.control.skin.TableViewSkinBase;\n+import javafx.scene.control.skin.TreeTableViewSkin;\n+import javafx.scene.input.MouseEvent;\n@@ -208,0 +211,42 @@\n+    @Test\n+    void testOverriddenColumnPopupMenu() {\n+        treeTableView.setSkin(new CustomTreeTableViewSkin<>(treeTableView));\n+\n+        tableHeaderRow = VirtualFlowTestUtils.getTableHeaderRow(treeTableView);\n+        cornerRegion = TableHeaderRowShim.getCornerRegion(tableHeaderRow);\n+\n+        ContextMenu columnPopupMenu = TableHeaderRowShim.getColumnPopupMenu(tableHeaderRow);\n+        assertNull(columnPopupMenu);\n+\n+        MouseEventFirer mouseEventFirer = new MouseEventFirer(cornerRegion);\n+        mouseEventFirer.fireMousePressed();\n+\n+        \/\/ Since the showColumnMenu() is overridden, the column popup menu should not be created.\n+        columnPopupMenu = TableHeaderRowShim.getColumnPopupMenu(tableHeaderRow);\n+        assertNull(columnPopupMenu);\n+    }\n+\n+    private static class CustomTreeTableViewSkin<S> extends TreeTableViewSkin<S> {\n+\n+        public CustomTreeTableViewSkin(TreeTableView<S> control) {\n+            super(control);\n+        }\n+\n+        @Override\n+        protected TableHeaderRow createTableHeaderRow() {\n+            return new CustomTableHeaderRow(this);\n+        }\n+\n+        private static class CustomTableHeaderRow extends TableHeaderRow {\n+\n+            public CustomTableHeaderRow(TableViewSkinBase skin) {\n+                super(skin);\n+            }\n+\n+            @Override\n+            protected void showColumnMenu(MouseEvent mouseEvent) {\n+                \/\/ noop - overridden for testing\n+            }\n+        }\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TreeTableViewTableHeaderRowTest.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"modified"}]}