{"files":[{"patch":"@@ -46,0 +46,1 @@\n+import com.sun.javafx.PlatformUtil;\n@@ -243,5 +244,5 @@\n-    protected Runnable key(KeyCode k, Mod ... modifiers) {\n-        KeyCode alt = Mod.findAlt(modifiers);\n-        KeyCode ctrl = Mod.findCtrl(modifiers);\n-        KeyCode meta = Mod.findMeta(modifiers);\n-        KeyCode shift = Mod.findShift(modifiers);\n+    protected Runnable key(KeyCode k, KeyModifier ... modifiers) {\n+        KeyCode alt = KeyModifier.findAlt(modifiers);\n+        KeyCode ctrl = KeyModifier.findCtrl(modifiers);\n+        KeyCode meta = KeyModifier.findMeta(modifiers);\n+        KeyCode shift = KeyModifier.findShift(modifiers);\n@@ -251,1 +252,1 @@\n-            KeyCode shortcut = Util.isMac() ? KeyCode.COMMAND : KeyCode.CONTROL;\n+            KeyCode shortcut = PlatformUtil.isMac() ? KeyCode.COMMAND : KeyCode.CONTROL;\n@@ -290,1 +291,1 @@\n-        return key(k, Mod.ALT);\n+        return key(k, KeyModifier.ALT);\n@@ -300,1 +301,1 @@\n-        return key(k, Mod.CTRL);\n+        return key(k, KeyModifier.CTRL);\n@@ -310,1 +311,1 @@\n-        return key(k, Mod.SHORTCUT);\n+        return key(k, KeyModifier.SHORTCUT);\n@@ -320,1 +321,1 @@\n-        return key(k, Mod.SHIFT);\n+        return key(k, KeyModifier.SHIFT);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/behavior\/BehaviorRobotTestBase.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.scene.control.behavior;\n+\n+import javafx.scene.input.KeyCode;\n+import com.sun.javafx.PlatformUtil;\n+\n+\/**\n+ * Key Modifiers for use in behavior tests.\n+ *\/\n+public enum KeyModifier {\n+    ALT,\n+    CTRL,\n+    COMMAND,\n+    META,\n+    OPTION,\n+    SHIFT,\n+    SHORTCUT;\n+\n+    public static KeyCode findAlt(KeyModifier[] modifiers) {\n+        for (KeyModifier m : modifiers) {\n+            switch (m) {\n+            case ALT:\n+                return KeyCode.ALT;\n+            case OPTION:\n+                if(PlatformUtil.isMac()) {\n+                    return KeyCode.ALT;\n+                }\n+                break;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public static KeyCode findCtrl(KeyModifier[] modifiers) {\n+        for (KeyModifier m : modifiers) {\n+            switch (m) {\n+            case CTRL:\n+                return KeyCode.CONTROL;\n+            case SHORTCUT:\n+                if (!PlatformUtil.isMac()) {\n+                    return KeyCode.CONTROL;\n+                }\n+                break;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public static KeyCode findMeta(KeyModifier[] modifiers) {\n+        for (KeyModifier m : modifiers) {\n+            switch (m) {\n+            case META:\n+                return KeyCode.META;\n+            case COMMAND:\n+            case SHORTCUT:\n+                if (PlatformUtil.isMac()) {\n+                    return KeyCode.COMMAND;\n+                }\n+                break;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public static KeyCode findShift(KeyModifier[] modifiers) {\n+        for (KeyModifier m : modifiers) {\n+            switch (m) {\n+            case SHIFT:\n+                return KeyCode.SHIFT;\n+            }\n+        }\n+        return null;\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/behavior\/KeyModifier.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -1,97 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package test.javafx.scene.control.behavior;\n-\n-import javafx.scene.input.KeyCode;\n-import test.util.Util;\n-\n-\/**\n- * Key Modifiers for use in behavior tests.\n- *\/\n-public enum Mod {\n-    ALT,\n-    CTRL,\n-    COMMAND,\n-    META,\n-    OPTION,\n-    SHIFT,\n-    SHORTCUT;\n-\n-    public static KeyCode findAlt(Mod[] modifiers) {\n-        for (Mod m : modifiers) {\n-            switch (m) {\n-            case ALT:\n-                return KeyCode.ALT;\n-            case OPTION:\n-                if(Util.isMac()) {\n-                    return KeyCode.ALT;\n-                }\n-                break;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    public static KeyCode findCtrl(Mod[] modifiers) {\n-        for (Mod m : modifiers) {\n-            switch (m) {\n-            case CTRL:\n-                return KeyCode.CONTROL;\n-            case SHORTCUT:\n-                if (!Util.isMac()) {\n-                    return KeyCode.CONTROL;\n-                }\n-                break;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    public static KeyCode findMeta(Mod[] modifiers) {\n-        for (Mod m : modifiers) {\n-            switch (m) {\n-            case META:\n-                return KeyCode.META;\n-            case COMMAND:\n-            case SHORTCUT:\n-                if (Util.isMac()) {\n-                    return KeyCode.COMMAND;\n-                }\n-                break;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    public static KeyCode findShift(Mod[] modifiers) {\n-        for (Mod m : modifiers) {\n-            switch (m) {\n-            case SHIFT:\n-                return KeyCode.SHIFT;\n-            }\n-        }\n-        return null;\n-    }\n-}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/behavior\/Mod.java","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"},{"patch":"@@ -32,1 +32,1 @@\n-import test.util.Util;\n+import com.sun.javafx.PlatformUtil;\n@@ -113,1 +113,1 @@\n-        if(!Util.isMac()) {\n+        if(!PlatformUtil.isMac()) {\n@@ -176,1 +176,1 @@\n-        if (!Util.isMac()) {\n+        if (!PlatformUtil.isMac()) {\n@@ -192,1 +192,1 @@\n-            END, key(LEFT, Mod.SHORTCUT, Mod.SHIFT), checkSelection(0, 3),\n+            END, key(LEFT, KeyModifier.SHORTCUT, KeyModifier.SHIFT), checkSelection(0, 3),\n@@ -194,1 +194,1 @@\n-            HOME, key(RIGHT, Mod.SHORTCUT, Mod.SHIFT), checkSelection(0, 3)\n+            HOME, key(RIGHT, KeyModifier.SHORTCUT, KeyModifier.SHIFT), checkSelection(0, 3)\n@@ -234,1 +234,1 @@\n-            key(LEFT, Mod.SHIFT, Mod.SHORTCUT), checkSelection(8, 11),\n+            key(LEFT, KeyModifier.SHIFT, KeyModifier.SHORTCUT), checkSelection(8, 11),\n@@ -237,1 +237,1 @@\n-            key(RIGHT, Mod.SHIFT, Mod.SHORTCUT), checkSelection(8, 11),\n+            key(RIGHT, KeyModifier.SHIFT, KeyModifier.SHORTCUT), checkSelection(8, 11),\n@@ -239,1 +239,1 @@\n-            key(UP, Mod.SHIFT, Mod.SHORTCUT), checkSelection(0, 11),\n+            key(UP, KeyModifier.SHIFT, KeyModifier.SHORTCUT), checkSelection(0, 11),\n@@ -241,1 +241,1 @@\n-            shortcut(UP), key(DOWN, Mod.SHIFT, Mod.SHORTCUT), checkSelection(0, 11)\n+            shortcut(UP), key(DOWN, KeyModifier.SHIFT, KeyModifier.SHORTCUT), checkSelection(0, 11)\n@@ -283,5 +283,5 @@\n-            key(DOWN, Mod.ALT, Mod.SHIFT), checkSelection(0, 87),\n-            key(DOWN, Mod.ALT, Mod.SHIFT), checkSelection(0, 175),\n-            key(DOWN, Mod.ALT, Mod.SHIFT), checkSelection(0, 263),\n-            key(UP, Mod.ALT, Mod.SHIFT), checkSelection(0, 176),\n-            key(UP, Mod.ALT, Mod.SHIFT), checkSelection(0, 88)\n+            key(DOWN, KeyModifier.ALT, KeyModifier.SHIFT), checkSelection(0, 87),\n+            key(DOWN, KeyModifier.ALT, KeyModifier.SHIFT), checkSelection(0, 175),\n+            key(DOWN, KeyModifier.ALT, KeyModifier.SHIFT), checkSelection(0, 263),\n+            key(UP, KeyModifier.ALT, KeyModifier.SHIFT), checkSelection(0, 176),\n+            key(UP, KeyModifier.ALT, KeyModifier.SHIFT), checkSelection(0, 88)\n@@ -318,1 +318,1 @@\n-        if (Util.isMac()) {\n+        if (PlatformUtil.isMac()) {\n@@ -338,5 +338,5 @@\n-            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 88),\n-            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 176),\n-            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 264),\n-            key(UP, Mod.CTRL, Mod.SHIFT), checkSelection(0, 176),\n-            key(UP, Mod.CTRL, Mod.SHIFT), checkSelection(0, 88)\n+            key(DOWN, KeyModifier.CTRL, KeyModifier.SHIFT), checkSelection(0, 88),\n+            key(DOWN, KeyModifier.CTRL, KeyModifier.SHIFT), checkSelection(0, 176),\n+            key(DOWN, KeyModifier.CTRL, KeyModifier.SHIFT), checkSelection(0, 264),\n+            key(UP, KeyModifier.CTRL, KeyModifier.SHIFT), checkSelection(0, 176),\n+            key(UP, KeyModifier.CTRL, KeyModifier.SHIFT), checkSelection(0, 88)\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/behavior\/TextAreaBehaviorRobotTest.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-\n@@ -45,1 +44,0 @@\n-import javafx.scene.robot.Robot;\n@@ -47,0 +45,1 @@\n+import javafx.scene.robot.Robot;\n@@ -49,1 +48,0 @@\n-\n@@ -51,1 +49,0 @@\n-\n@@ -63,5 +60,0 @@\n-    private static final String OS = System.getProperty(\"os.name\");\n-    private static final boolean WINDOWS = OS.startsWith(\"Windows\");\n-    private static final boolean MAC = OS.startsWith(\"Mac\");\n-    private static final boolean LINUX = OS.startsWith(\"Linux\");\n-\n@@ -474,24 +466,0 @@\n-\n-    \/**\n-     * Returns true if the operating system is a form of Windows.\n-     * @return true if the platform is Windows\n-     *\/\n-    public static boolean isWindows(){\n-        return WINDOWS;\n-    }\n-\n-    \/**\n-     * Returns true if the operating system is a form of Mac OS.\n-     * @return true if the platform is Mac\n-     *\/\n-    public static boolean isMac(){\n-        return MAC;\n-    }\n-\n-    \/**\n-     * Returns true if the operating system is a form of Linux.\n-     * @return true if the platform is Linux\n-     *\/\n-    public static boolean isLinux(){\n-        return LINUX;\n-    }\n","filename":"tests\/system\/src\/test\/java\/test\/util\/Util.java","additions":1,"deletions":33,"binary":false,"changes":34,"status":"modified"}]}