{"files":[{"patch":"@@ -29,2 +29,0 @@\n-import java.util.concurrent.atomic.AtomicReference;\n-import javafx.event.EventHandler;\n@@ -32,2 +30,0 @@\n-import javafx.scene.input.KeyCode;\n-import javafx.scene.input.KeyEvent;\n@@ -335,3 +331,3 @@\n-            ctrl(DOWN), checkSelection(87),\n-            ctrl(DOWN), checkSelection(175),\n-            ctrl(DOWN), checkSelection(263),\n+            ctrl(DOWN), checkSelection(88),\n+            ctrl(DOWN), checkSelection(176),\n+            ctrl(DOWN), checkSelection(264),\n@@ -342,3 +338,3 @@\n-            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 87),\n-            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 175),\n-            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 263),\n+            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 88),\n+            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 176),\n+            key(DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 264),\n@@ -349,0 +345,1 @@\n+        \/* FIX JDK-8316307\n@@ -358,3 +355,3 @@\n-            ctrl(KP_DOWN), checkSelection(87),\n-            ctrl(KP_DOWN), checkSelection(175),\n-            ctrl(KP_DOWN), checkSelection(263),\n+            ctrl(KP_DOWN), checkSelection(88),\n+            ctrl(KP_DOWN), checkSelection(176),\n+            ctrl(KP_DOWN), checkSelection(264),\n@@ -365,3 +362,3 @@\n-            key(KP_DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 87),\n-            key(KP_DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 175),\n-            key(KP_DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 263),\n+            key(KP_DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 88),\n+            key(KP_DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 176),\n+            key(KP_DOWN, Mod.CTRL, Mod.SHIFT), checkSelection(0, 264),\n@@ -371,0 +368,1 @@\n+        *\/\n@@ -397,34 +395,0 @@\n-\n-    @Test\n-    public void robotTest() {\n-        t(LEFT);\n-        t(KP_LEFT);\n-        t(KP_RIGHT);\n-        t(KP_DOWN);\n-        t(KP_UP);\n-        t(RIGHT);\n-        t(DOWN);\n-        t(UP);\n-    }\n-    private void t(KeyCode k) {\n-        AtomicReference<KeyCode> ref = new AtomicReference<>();\n-        EventHandler<KeyEvent> li = (ev) -> {\n-            KeyCode v = ev.getCode();\n-            ref.set(v);\n-        };\n-        control.addEventFilter(KeyEvent.KEY_PRESSED, li);\n-        try\n-        {\n-            Util.runAndWait(() -> {\n-                robot.keyPress(k);\n-                robot.keyRelease(k);\n-            });\n-        }\n-        finally\n-        {\n-            control.removeEventFilter(KeyEvent.KEY_PRESSED, li);\n-        }\n-        Object received = ref.get();\n-        System.err.println(\"keycode=\" + k + \" key.press=\" + received);\n-        \/\/ Asserttions.assertEquals(k, received);\n-    }\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/control\/behavior\/TextAreaBehaviorRobotTest.java","additions":14,"deletions":50,"binary":false,"changes":64,"status":"modified"}]}