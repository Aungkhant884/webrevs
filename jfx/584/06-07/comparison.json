{"files":[{"patch":"@@ -62,0 +62,1 @@\n+import java.util.HashMap;\n@@ -92,1 +93,0 @@\n-import java.util.Optional;\n@@ -384,1 +384,1 @@\n-    private final Map<TKPulseListener,AccessControlContext> cleanupListeners = new WeakHashMap<>();\n+    private final HashMap<TKPulseListener,AccessControlContext> cleanupListeners = new HashMap<>();\n@@ -420,1 +420,1 @@\n-                new WeakHashMap<>();\n+                new HashMap<>();\n@@ -501,3 +501,5 @@\n-        @SuppressWarnings(\"removal\")\n-        AccessControlContext acc = AccessController.getContext();\n-        toolkitListeners.put(listener, acc);\n+        synchronized (this) {\n+            @SuppressWarnings(\"removal\")\n+            AccessControlContext acc = AccessController.getContext();\n+            toolkitListeners.put(listener, acc);\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/Toolkit.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -744,5 +744,5 @@\n-        if(!cleanupAdded) {\n-            if((window.get() == null || !window.get().isShowing()) && dirtyNodesSize > 0) {\n-                Toolkit.getToolkit().addCleanupListener(cleanupListener);\n-                cleanupAdded = true;\n-            }\n+        if (!cleanupAdded\n+                && (window.get() == null || !window.get().isShowing())\n+                && dirtyNodesSize > 0) {\n+            Toolkit.getToolkit().addCleanupListener(cleanupListener);\n+            cleanupAdded = true;\n@@ -2112,1 +2112,1 @@\n-    private void windowForSceneChanged(Window oldWindow, Window window) {\n+    private void windowForSceneChanged(Window oldWindow, Window newWindow) {\n@@ -2118,4 +2118,4 @@\n-        if (window != null) {\n-            window.showingProperty().addListener(sceneWindowShowingListener);\n-            window.focusedProperty().addListener(sceneWindowFocusedListener);\n-            setWindowFocused(window.isFocused());\n+        if (newWindow != null) {\n+            newWindow.showingProperty().addListener(sceneWindowShowingListener);\n+            newWindow.focusedProperty().addListener(sceneWindowFocusedListener);\n+            setWindowFocused(newWindow.isFocused());\n@@ -2129,1 +2129,1 @@\n-    private final ChangeListener<Boolean> sceneWindowShowingListener = (p, o, n) -> {checkCleanDirtyNodes(); } ;\n+    private final ChangeListener<Boolean> sceneWindowShowingListener = (p, o, n) -> checkCleanDirtyNodes();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -33,3 +33,3 @@\n-import junit.framework.Assert;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.BeforeAll;\n@@ -46,1 +46,1 @@\n-    @BeforeClass\n+    @BeforeAll\n@@ -51,2 +51,2 @@\n-        Assert.assertTrue(\"Timeout waiting for FX runtime to start\",\n-                startupLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n+        Assertions.assertTrue(startupLatch.await(TIMEOUT, TimeUnit.MILLISECONDS),\n+                \"Timeout waiting for FX runtime to start\");\n@@ -78,1 +78,1 @@\n-                Assert.assertTrue(\"Timeout waiting for setOnShown\", showingLatch.await(15, TimeUnit.SECONDS));\n+                Assertions.assertTrue(showingLatch.await(15, TimeUnit.SECONDS), \"Timeout waiting for setOnShown\");\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/DirtyNodesLeakTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}