{"files":[{"patch":"@@ -959,1 +959,0 @@\n-                        clearParentsFocusWithin(oldParent);\n@@ -968,0 +967,4 @@\n+\n+                    \/\/ Update the focus bits before calling reapplyCss(), as the focus bits can affect CSS styling.\n+                    updateParentsFocusWithin(oldParent, newParent);\n+\n@@ -8174,4 +8177,4 @@\n-     * Called when the current node was removed from the scene graph.\n-     * If the current node has the focusWithin bit, we also need to clear the focusWithin bits of this\n-     * node's parents. Note that a scene graph can have more than a single focused node, for example when\n-     * a PopupWindow is used to present a branch of the scene graph. Since we need to preserve multi-level\n+     * Called when the current node was removed from or added to the scene graph.\n+     * If the current node has the focusWithin bit, we also need to clear and set the focusWithin bits of this\n+     * node's old and new parents. Note that a scene graph can have more than a single focused node, for example\n+     * when a PopupWindow is used to present a branch of the scene graph. Since we need to preserve multi-level\n@@ -8180,2 +8183,6 @@\n-    private void clearParentsFocusWithin(Node oldParent) {\n-        if (oldParent != null && focusWithin.get()) {\n+    private void updateParentsFocusWithin(Node oldParent, Node newParent) {\n+        if (!focusWithin.get()) {\n+            return;\n+        }\n+\n+        if (oldParent != null) {\n@@ -8187,0 +8194,1 @@\n+        }\n@@ -8188,0 +8196,11 @@\n+        if (newParent != null) {\n+            Node node = newParent;\n+            while (node != null) {\n+                node.focusWithin.adjust(focusWithin.count);\n+                node = node.getParent();\n+            };\n+        }\n+\n+        \/\/ Since focus changes are atomic, we only fire change notifications after\n+        \/\/ all changes are committed on all old and new parents.\n+        if (oldParent != null) {\n@@ -8190,0 +8209,4 @@\n+\n+        if (newParent != null) {\n+            newParent.notifyFocusListeners();\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -1108,0 +1108,23 @@\n+    @Test public void testFocusWithinBitsAreSetOnParentsWhenAddedNodeIsAlreadyFocused() {\n+        class N extends Group {\n+            N(Node... children) { super(children); }\n+            void _setFocused(boolean value) { setFocused(value); }\n+        }\n+\n+        N node1, node2, node3 = new N();\n+\n+        scene.setRoot(\n+            node1 = new N(\n+                node2 = new N()\n+            ));\n+\n+        node3._setFocused(true);\n+        assertNotFocusWithin(node1);\n+        assertNotFocusWithin(node2);\n+\n+        node2.getChildren().add(node3);\n+        assertIsFocusWithin(node1);\n+        assertIsFocusWithin(node2);\n+        assertIsFocusWithin(node3);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/FocusTest.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}