{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -306,3 +306,5 @@\n-        if (! isEditable() ||\n-                (table != null && ! table.isEditable()) ||\n-                (column != null && ! getTableColumn().isEditable())) {\n+        final TableRow<S> row = getTableRow();\n+        if (!isEditable() ||\n+                (table != null && !table.isEditable()) ||\n+                (column != null && !column.isEditable()) ||\n+                (row != null && !row.isEditable())) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -309,3 +309,5 @@\n-        if (! isEditable() ||\n-                (table != null && ! table.isEditable()) ||\n-                (column != null && ! getTableColumn().isEditable())) {\n+        final TreeTableRow<S> row = getTreeTableRow();\n+        if (!isEditable() ||\n+                (table != null && !table.isEditable()) ||\n+                (column != null && !column.isEditable()) ||\n+                (row != null && !row.isEditable())) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import javafx.scene.control.TableRow;\n+import javafx.scene.control.TreeTableRow;\n@@ -51,0 +53,1 @@\n+    private TableRow<String> row;\n@@ -65,0 +68,2 @@\n+\n+        row = new TableRow<>();\n@@ -325,0 +330,75 @@\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Not editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the row is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableRowIsNotEditable() {\n+        table.setEditable(true);\n+        row.setEditable(false);\n+\n+        TableColumn<String, String> tableColumn = new TableColumn<>();\n+        tableColumn.setEditable(true);\n+        table.getColumns().add(tableColumn);\n+\n+        cell.updateTableColumn(tableColumn);\n+        cell.updateTableRow(row);\n+        cell.updateTableView(table);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Not editable<br>\n+     * Row: Editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the table is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableTableIsNotEditable() {\n+        table.setEditable(false);\n+        row.setEditable(true);\n+\n+        TableColumn<String, String> tableColumn = new TableColumn<>();\n+        tableColumn.setEditable(true);\n+        table.getColumns().add(tableColumn);\n+\n+        cell.updateTableColumn(tableColumn);\n+        cell.updateTableRow(row);\n+        cell.updateTableView(table);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Editable<br>\n+     * Column: Not editable<br>\n+     * Expected: Cell can not be edited because the column is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableColumnIsNotEditable() {\n+        table.setEditable(true);\n+        row.setEditable(true);\n+\n+        TableColumn<String, String> tableColumn = new TableColumn<>();\n+        tableColumn.setEditable(false);\n+        table.getColumns().add(tableColumn);\n+\n+        cell.updateTableColumn(tableColumn);\n+        cell.updateTableRow(row);\n+        cell.updateTableView(table);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":81,"deletions":1,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -636,0 +636,75 @@\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Not editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the row is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableRowIsNotEditable() {\n+        tree.setEditable(true);\n+        row.setEditable(false);\n+\n+        TreeTableColumn<String, String> treeTableColumn = new TreeTableColumn<>();\n+        treeTableColumn.setEditable(true);\n+        tree.getColumns().add(treeTableColumn);\n+\n+        cell.updateTreeTableColumn(treeTableColumn);\n+        cell.updateTreeTableRow(row);\n+        cell.updateTreeTableView(tree);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Not editable<br>\n+     * Row: Editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the table is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableTableIsNotEditable() {\n+        tree.setEditable(false);\n+        row.setEditable(true);\n+\n+        TreeTableColumn<String, String> treeTableColumn = new TreeTableColumn<>();\n+        treeTableColumn.setEditable(true);\n+        tree.getColumns().add(treeTableColumn);\n+\n+        cell.updateTreeTableColumn(treeTableColumn);\n+        cell.updateTreeTableRow(row);\n+        cell.updateTreeTableView(tree);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Editable<br>\n+     * Column: Not editable<br>\n+     * Expected: Cell can not be edited because the column is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableColumnIsNotEditable() {\n+        tree.setEditable(true);\n+        row.setEditable(true);\n+\n+        TreeTableColumn<String, String> treeTableColumn = new TreeTableColumn<>();\n+        treeTableColumn.setEditable(false);\n+        tree.getColumns().add(treeTableColumn);\n+\n+        cell.updateTreeTableColumn(treeTableColumn);\n+        cell.updateTreeTableRow(row);\n+        cell.updateTreeTableView(tree);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":76,"deletions":1,"binary":false,"changes":77,"status":"modified"}]}