{"files":[{"patch":"@@ -310,1 +310,1 @@\n-                (row != null) && !row.isEditable()) {\n+                (row != null && !row.isEditable())) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.scene.control.TreeTableRow;\n@@ -52,0 +53,1 @@\n+    private TableRow<String> row;\n@@ -66,0 +68,2 @@\n+\n+        row = new TableRow<>();\n@@ -326,0 +330,6 @@\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Not editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the row is not editable.\n+     *\/\n@@ -329,1 +339,0 @@\n-        TableRow row = new TableRow();\n@@ -332,2 +341,28 @@\n-        TableColumn<String, String> treeTableColumn = new TableColumn<>();\n-        table.getColumns().add(treeTableColumn);\n+        TableColumn<String, String> tableColumn = new TableColumn<>();\n+        tableColumn.setEditable(true);\n+        table.getColumns().add(tableColumn);\n+\n+        cell.updateTableColumn(tableColumn);\n+        cell.updateTableRow(row);\n+        cell.updateTableView(table);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Not editable<br>\n+     * Row: Editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the table is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableTableIsNotEditable() {\n+        table.setEditable(false);\n+        row.setEditable(true);\n+\n+        TableColumn<String, String> tableColumn = new TableColumn<>();\n+        tableColumn.setEditable(true);\n+        table.getColumns().add(tableColumn);\n@@ -335,1 +370,1 @@\n-        cell.updateTableColumn(treeTableColumn);\n+        cell.updateTableColumn(tableColumn);\n@@ -340,0 +375,15 @@\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Editable<br>\n+     * Column: Not editable<br>\n+     * Expected: Cell can not be edited because the column is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableColumnIsNotEditable() {\n+        table.setEditable(true);\n+        row.setEditable(true);\n@@ -341,0 +391,9 @@\n+        TableColumn<String, String> tableColumn = new TableColumn<>();\n+        tableColumn.setEditable(false);\n+        table.getColumns().add(tableColumn);\n+\n+        cell.updateTableColumn(tableColumn);\n+        cell.updateTableRow(row);\n+        cell.updateTableView(table);\n+\n+        cell.updateIndex(0);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":63,"deletions":4,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -636,0 +636,6 @@\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Not editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the row is not editable.\n+     *\/\n@@ -641,1 +647,2 @@\n-        TreeTableColumn treeTableColumn = new TreeTableColumn();\n+        TreeTableColumn<String, String> treeTableColumn = new TreeTableColumn<>();\n+        treeTableColumn.setEditable(true);\n@@ -649,0 +656,15 @@\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Not editable<br>\n+     * Row: Editable<br>\n+     * Column: Editable<br>\n+     * Expected: Cell can not be edited because the table is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableTableIsNotEditable() {\n+        tree.setEditable(false);\n+        row.setEditable(true);\n@@ -650,0 +672,34 @@\n+        TreeTableColumn<String, String> treeTableColumn = new TreeTableColumn<>();\n+        treeTableColumn.setEditable(true);\n+        tree.getColumns().add(treeTableColumn);\n+\n+        cell.updateTreeTableColumn(treeTableColumn);\n+        cell.updateTreeTableRow(row);\n+        cell.updateTreeTableView(tree);\n+\n+        cell.updateIndex(0);\n+        cell.startEdit();\n+\n+        assertFalse(cell.isEditing());\n+    }\n+\n+    \/**\n+     * Table: Editable<br>\n+     * Row: Editable<br>\n+     * Column: Not editable<br>\n+     * Expected: Cell can not be edited because the column is not editable.\n+     *\/\n+    @Test\n+    public void testCellInUneditableColumnIsNotEditable() {\n+        tree.setEditable(true);\n+        row.setEditable(true);\n+\n+        TreeTableColumn<String, String> treeTableColumn = new TreeTableColumn<>();\n+        treeTableColumn.setEditable(false);\n+        tree.getColumns().add(treeTableColumn);\n+\n+        cell.updateTreeTableColumn(treeTableColumn);\n+        cell.updateTreeTableRow(row);\n+        cell.updateTreeTableView(tree);\n+\n+        cell.updateIndex(0);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":57,"deletions":1,"binary":false,"changes":58,"status":"modified"}]}