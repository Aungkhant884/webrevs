{"files":[{"patch":"@@ -28,0 +28,2 @@\n+import com.sun.javafx.tk.Toolkit;\n+\n@@ -32,0 +34,1 @@\n+import javafx.stage.Stage;\n@@ -48,1 +51,0 @@\n-import org.junit.Ignore;\n@@ -370,3 +372,0 @@\n-    \/\/ When the cell was focused, but is no longer focused, we should cancel editing\n-    \/\/ Check for focused pseudoClass state change?\n-    @Ignore(value = \"I'm not sure how to test this, since I need a scene & such to move focus around\")\n@@ -378,0 +377,6 @@\n+        Stage stage = new Stage();\n+        stage.setScene(scene);\n+        stage.show();\n+        stage.requestFocus();\n+        Toolkit.getToolkit().firePulse();\n+\n@@ -381,0 +386,2 @@\n+        Toolkit.getToolkit().firePulse();\n+        assertTrue(cell.isEditing());\n@@ -383,0 +390,1 @@\n+        Toolkit.getToolkit().firePulse();\n@@ -385,0 +393,1 @@\n+        stage.hide();\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/CellTest.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import com.sun.javafx.tk.Toolkit;\n+\n@@ -37,0 +39,1 @@\n+import javafx.stage.Stage;\n@@ -39,1 +42,0 @@\n-import org.junit.Ignore;\n@@ -317,3 +319,0 @@\n-    \/\/ When the cell was focused, but is no longer focused, we should cancel editing\n-    \/\/ Check for focused pseudoClass state change?\n-    @Ignore(value = \"I'm not sure how to test this, since I need a scene & such to move focus around\")\n@@ -325,0 +324,6 @@\n+        Stage stage = new Stage();\n+        stage.setScene(scene);\n+        stage.show();\n+        stage.requestFocus();\n+        Toolkit.getToolkit().firePulse();\n+\n@@ -328,0 +333,2 @@\n+        Toolkit.getToolkit().firePulse();\n+        assertTrue(cell.isEditing());\n@@ -330,0 +337,1 @@\n+        Toolkit.getToolkit().firePulse();\n@@ -332,0 +340,1 @@\n+        stage.hide();\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/DateCellTest.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+import org.junit.After;\n@@ -51,1 +52,0 @@\n-import org.junit.Ignore;\n@@ -77,0 +77,4 @@\n+    @After public void tearDown() {\n+        stage.hide();\n+    }\n+\n@@ -183,1 +187,1 @@\n-    @Ignore @Test public void setCurrentPageIndexAndNavigateWithMouse() {\n+    @Test public void setCurrentPageIndexAndNavigateWithMouse() {\n@@ -204,0 +208,2 @@\n+        SceneHelper.processMouseEvent(scene,\n+            MouseEventGenerator.generateMouseEvent(MouseEvent.MOUSE_RELEASED, xval+170, yval+380));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/PaginationTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -120,6 +120,0 @@\n-    @org.junit.Ignore(\"getStyle should not return null per Node#setStyle\")\n-    @Test public void styleSetNullGetNull() {\n-        popup.setStyle(null);\n-        assertNull(popup.getStyle());\n-    }\n-\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/PopupControlTest.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import org.junit.Ignore;\n@@ -239,8 +238,0 @@\n-    \/\/ calling toggleGroupProperty does not ensure the value of toggleGroup\n-    \/\/ to be non null\n-    @Ignore\n-    @Test public void unsetToggleGroupButNotNull() {\n-        rmi.toggleGroupProperty();\n-        assertNotNull(rmi.getToggleGroup());\n-    }\n-\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/RadioMenuItemTest.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}