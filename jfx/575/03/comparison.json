{"files":[{"patch":"@@ -69,1 +69,1 @@\n-    protected abstract boolean isTableRowSelected(); \/\/ tableCell.getTreeTableRow().isSelected()\n+    protected abstract boolean isTableRowSelected(); \/\/ tableCell.getTableRow().isSelected()\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TableCellBehaviorBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-        return getNode().getTreeTableRow().isSelected();\n+        return getNode().getTableRow().isSelected();\n@@ -114,1 +114,1 @@\n-        final TreeItem<S> treeItem = getNode().getTreeTableRow().getTreeItem();\n+        final TreeItem<S> treeItem = getNode().getTableRow().getTreeItem();\n@@ -122,1 +122,1 @@\n-            final Node disclosureNode = getNode().getTreeTableRow().getDisclosureNode();\n+            final Node disclosureNode = getNode().getTableRow().getDisclosureNode();\n@@ -145,1 +145,1 @@\n-        TreeItem<S> treeItem = getNode().getTreeTableRow().getTreeItem();\n+        TreeItem<S> treeItem = getNode().getTableRow().getTreeItem();\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TreeTableCellBehavior.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-     * The TreeTableColumn instance that backs this TreeTableCell.\n+     * The {@code TreeTableColumn} instance that backs this {@code TreeTableCell}.\n@@ -205,2 +205,2 @@\n-    private ReadOnlyObjectWrapper<TreeTableColumn<S,T>> treeTableColumn =\n-            new ReadOnlyObjectWrapper<TreeTableColumn<S,T>>(this, \"treeTableColumn\") {\n+    private ReadOnlyObjectWrapper<TreeTableColumn<S,T>> tableColumn =\n+            new ReadOnlyObjectWrapper<TreeTableColumn<S,T>>(this, \"tableColumn\") {\n@@ -211,3 +211,3 @@\n-    public final ReadOnlyObjectProperty<TreeTableColumn<S,T>> tableColumnProperty() { return treeTableColumn.getReadOnlyProperty(); }\n-    private void setTableColumn(TreeTableColumn<S,T> value) { treeTableColumn.set(value); }\n-    public final TreeTableColumn<S,T> getTableColumn() { return treeTableColumn.get(); }\n+    public final ReadOnlyObjectProperty<TreeTableColumn<S,T>> tableColumnProperty() { return tableColumn.getReadOnlyProperty(); }\n+    private void setTableColumn(TreeTableColumn<S,T> value) { tableColumn.set(value); }\n+    public final TreeTableColumn<S,T> getTableColumn() { return tableColumn.get(); }\n@@ -218,1 +218,1 @@\n-     * The TreeTableView associated with this TreeTableCell.\n+     * The {@code TreeTableView} associated with this {@code TreeTableCell}.\n@@ -287,1 +287,1 @@\n-     * The TreeTableRow that this TreeTableCell currently finds itself placed within.\n+     * The {@code TreeTableRow} that this {@code TreeTableCell} currently finds itself placed within.\n@@ -289,5 +289,12 @@\n-    private ReadOnlyObjectWrapper<TreeTableRow<S>> treeTableRow =\n-            new ReadOnlyObjectWrapper<TreeTableRow<S>>(this, \"treeTableRow\");\n-    private void setTreeTableRow(TreeTableRow<S> value) { treeTableRow.set(value); }\n-    public final TreeTableRow<S> getTreeTableRow() { return treeTableRow.get(); }\n-    public final ReadOnlyObjectProperty<TreeTableRow<S>> tableRowProperty() { return treeTableRow;  }\n+    private ReadOnlyObjectWrapper<TreeTableRow<S>> tableRow =\n+            new ReadOnlyObjectWrapper<TreeTableRow<S>>(this, \"tableRow\");\n+    private void setTableRow(TreeTableRow<S> value) { tableRow.set(value); }\n+    \/**\n+     * Gets the value of the property {@code tableRow}.\n+     * @return the value of the property {@code tableRow}\n+     * @since 17\n+     *\/\n+    public final TreeTableRow<S> getTableRow() { return tableRow.get(); }\n+    public final ReadOnlyObjectProperty<TreeTableRow<S>> tableRowProperty() {\n+        return tableRow.getReadOnlyProperty();\n+    }\n@@ -295,0 +302,8 @@\n+    \/\/ The following method was misnamed and is deprecated in favor of the\n+    \/\/ correctly named method.\n+    \/**\n+     * @deprecated Use {@link getTableRow} instead.\n+     * @return the {@code TreeTableRow}\n+     *\/\n+    @Deprecated(since = \"17\")\n+    public final TreeTableRow<S> getTreeTableRow() { return getTableRow(); }\n@@ -312,1 +327,1 @@\n-        final TreeTableRow<S> row = getTreeTableRow();\n+        final TreeTableRow<S> row = getTableRow();\n@@ -430,1 +445,1 @@\n-        if (getTreeTableRow() == null || getTreeTableRow().isEmpty()) return;\n+        if (getTableRow() == null || getTableRow().isEmpty()) return;\n@@ -623,1 +638,1 @@\n-        final TreeTableRow<S> tableRow = getTreeTableRow();\n+        final TreeTableRow<S> tableRow = getTableRow();\n@@ -705,3 +720,4 @@\n-     * Updates the TreeTableView associated with this TreeTableCell. This is typically\n-     * only done once when the TreeTableCell is first added to the TreeTableView.\n-     *\n+     * Updates the {@code TreeTableView} associated with this {@code TreeTableCell}.\n+     * This is typically only done once when the {@code TreeTableCell} is first\n+     * added to the {@code TreeTableView}.\n+     * <p>\n@@ -711,1 +727,1 @@\n-     * @param tv the TreeTableView associated with this TreeTableCell\n+     * @param tv the {@code TreeTableView} associated with this {@code TreeTableCell}\n@@ -718,2 +734,2 @@\n-     * Updates the TreeTableRow associated with this TreeTableCell.\n-     *\n+     * Updates the {@code TreeTableRow} associated with this {@code TreeTableCell}.\n+     * <p>\n@@ -723,1 +739,2 @@\n-     * @param treeTableRow the TreeTableRow associated with this TreeTableCell\n+     * @param row the {@code TreeTableRow} associated with this {@code TreeTableCell}\n+     * @since 17\n@@ -725,2 +742,2 @@\n-    public final void updateTreeTableRow(TreeTableRow<S> treeTableRow) {\n-        this.setTreeTableRow(treeTableRow);\n+    public final void updateTableRow(TreeTableRow<S> row) {\n+        this.setTableRow(row);\n@@ -730,2 +747,2 @@\n-     * Updates the TreeTableColumn associated with this TreeTableCell.\n-     *\n+     * Updates the {@code TreeTableColumn} associated with this {@code TreeTableCell}.\n+     * <p>\n@@ -735,1 +752,2 @@\n-     * @param col the TreeTableColumn associated with this TreeTableCell\n+     * @param column the {@code TreeTableColumn} associated with this {@code TreeTableCell}\n+     * @since 17\n@@ -737,1 +755,1 @@\n-    public final void updateTreeTableColumn(TreeTableColumn<S,T> col) {\n+    public final void updateTableColumn(TreeTableColumn<S,T> column) {\n@@ -757,1 +775,1 @@\n-        setTableColumn(col);\n+        setTableColumn(column);\n@@ -759,3 +777,3 @@\n-        if (col != null) {\n-            getStyleClass().addAll(col.getStyleClass());\n-            col.getStyleClass().addListener(weakColumnStyleClassListener);\n+        if (column != null) {\n+            getStyleClass().addAll(column.getStyleClass());\n+            column.getStyleClass().addListener(weakColumnStyleClassListener);\n@@ -763,2 +781,2 @@\n-            col.idProperty().addListener(weakColumnIdListener);\n-            col.styleProperty().addListener(weakColumnStyleListener);\n+            column.idProperty().addListener(weakColumnIdListener);\n+            column.styleProperty().addListener(weakColumnStyleListener);\n@@ -766,2 +784,2 @@\n-            possiblySetId(col.getId());\n-            possiblySetStyle(col.getStyle());\n+            possiblySetId(column.getId());\n+            possiblySetStyle(column.getStyle());\n@@ -771,0 +789,19 @@\n+    \/\/ The following methods were misnamed and are deprecated in favor of the\n+    \/\/ correctly named methods.\n+    \/**\n+     * @deprecated Use {@link updateTableRow} instead.\n+     * @param row the {@code TreeTableRow}\n+     *\/\n+    @Deprecated(since = \"17\")\n+    public final void updateTreeTableRow(TreeTableRow<S> row) {\n+        updateTableRow(row);\n+    }\n+\n+    \/**\n+     * @deprecated Use {@link updateTableColumn} instead.\n+     * @param column the {@code TreeTableColumn}\n+     *\/\n+    @Deprecated(since = \"17\")\n+    public final void updateTreeTableColumn(TreeTableColumn<S,T> column) {\n+        updateTableColumn(column);\n+    }\n@@ -813,1 +850,1 @@\n-            case SELECTED: return isInCellSelectionMode() ? isSelected() : getTreeTableRow().isSelected();\n+            case SELECTED: return isInCellSelectionMode() ? isSelected() : getTableRow().isSelected();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":75,"deletions":38,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -728,1 +728,1 @@\n-            cell.updateTreeTableColumn(tc);\n+            cell.updateTableColumn(tc);\n@@ -730,1 +730,1 @@\n-            cell.updateTreeTableRow(treeTableRow);\n+            cell.updateTableRow(treeTableRow);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableColumnHeader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-        TreeTableRow<S> treeTableRow = cell.getTreeTableRow();\n+        TreeTableRow<S> treeTableRow = cell.getTableRow();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableCellSkin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-        cell.updateTreeTableColumn(tableColumn);\n+        cell.updateTableColumn(tableColumn);\n@@ -324,1 +324,1 @@\n-        cell.updateTreeTableRow(row);\n+        cell.updateTableRow(row);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableRowSkin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-            ((TreeTableCell)cell).updateTreeTableRow(tableRow);\n+            ((TreeTableCell)cell).updateTableRow(tableRow);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/CellTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-        cell.updateTreeTableColumn(editingColumn);\n+        cell.updateTableColumn(editingColumn);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellEditingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import javafx.beans.property.ObjectProperty;\n@@ -128,1 +129,1 @@\n-        assertSame(root, cell.getTreeTableRow().getTreeItem());\n+        assertSame(root, cell.getTableRow().getTreeItem());\n@@ -131,1 +132,1 @@\n-        assertSame(apples, cell.getTreeTableRow().getTreeItem());\n+        assertSame(apples, cell.getTableRow().getTreeItem());\n@@ -139,1 +140,1 @@\n-        assertSame(root, cell.getTreeTableRow().getTreeItem());\n+        assertSame(root, cell.getTableRow().getTreeItem());\n@@ -142,1 +143,1 @@\n-        assertSame(apples, cell.getTreeTableRow().getTreeItem());\n+        assertSame(apples, cell.getTableRow().getTreeItem());\n@@ -153,1 +154,1 @@\n-        cell.updateTreeTableRow(row);\n+        cell.updateTableRow(row);\n@@ -155,1 +156,1 @@\n-        assertNull(cell.getTreeTableRow().getTreeItem());\n+        assertNull(cell.getTableRow().getTreeItem());\n@@ -181,1 +182,1 @@\n-        assertNull(cell.getTreeTableRow().getTreeItem());\n+        assertNull(cell.getTableRow().getTreeItem());\n@@ -191,1 +192,1 @@\n-        assertSame(apples, cell.getTreeTableRow().getTreeItem());\n+        assertSame(apples, cell.getTableRow().getTreeItem());\n@@ -204,1 +205,1 @@\n-        assertSame(oranges, cell.getTreeTableRow().getTreeItem());\n+        assertSame(oranges, cell.getTableRow().getTreeItem());\n@@ -498,0 +499,25 @@\n+    @Test public void checkTableRowPropertyName() {\n+        assertEquals(\"tableRow\", cell.tableRowProperty().getName());\n+    }\n+\n+    @Test public void checkTableColumnPropertyName() {\n+        assertEquals(\"tableColumn\", cell.tableColumnProperty().getName());\n+    }\n+\n+    @Test public void checkTableRowProperty() {\n+        cell.updateTreeTableView(tree);\n+        cell.updateTableRow(row);\n+        assertSame(row, cell.getTableRow());\n+        assertSame(row, cell.tableRowProperty().get());\n+        assertFalse(cell.tableRowProperty() instanceof ObjectProperty);\n+    }\n+\n+    @Test public void checkTableColumnProperty() {\n+        TreeTableColumn<String, String> column = new TreeTableColumn<>();\n+        cell.updateTreeTableView(tree);\n+        cell.updateTableColumn(column);\n+        assertSame(column, cell.getTableColumn());\n+        assertSame(column, cell.tableColumnProperty().get());\n+        assertFalse(cell.tableColumnProperty() instanceof ObjectProperty);\n+    }\n+\n@@ -510,1 +536,1 @@\n-        cell.updateTreeTableColumn(col);\n+        cell.updateTableColumn(col);\n@@ -665,2 +691,2 @@\n-        cell.updateTreeTableColumn(treeTableColumn);\n-        cell.updateTreeTableRow(row);\n+        cell.updateTableColumn(treeTableColumn);\n+        cell.updateTableRow(row);\n@@ -690,2 +716,2 @@\n-        cell.updateTreeTableColumn(treeTableColumn);\n-        cell.updateTreeTableRow(row);\n+        cell.updateTableColumn(treeTableColumn);\n+        cell.updateTableRow(row);\n@@ -715,2 +741,2 @@\n-        cell.updateTreeTableColumn(treeTableColumn);\n-        cell.updateTreeTableRow(row);\n+        cell.updateTableColumn(treeTableColumn);\n+        cell.updateTableRow(row);\n@@ -736,1 +762,1 @@\n-        cell.updateTreeTableColumn(editingColumn);\n+        cell.updateTableColumn(editingColumn);\n@@ -870,1 +896,1 @@\n-        cell.updateTreeTableColumn(editingColumn);\n+        cell.updateTableColumn(editingColumn);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":44,"deletions":18,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        cell.updateTreeTableColumn(tableColumn);\n+        cell.updateTableColumn(tableColumn);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/cell\/CheckBoxTreeTableCellTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -311,1 +311,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -356,1 +356,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -371,1 +371,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -388,1 +388,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -408,1 +408,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -428,1 +428,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/cell\/ChoiceBoxTreeTableCellTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -334,1 +334,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -379,1 +379,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -394,1 +394,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -411,1 +411,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -431,1 +431,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -451,1 +451,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/cell\/ComboBoxTreeTableCellTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        cell.updateTreeTableColumn(tableColumn);\n+        cell.updateTableColumn(tableColumn);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/cell\/ProgressBarTreeTableCellTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -253,1 +253,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -268,1 +268,1 @@\n-    \/\/        cell.updateTreeTableColumn(tc);\n+    \/\/        cell.updateTableColumn(tc);\n@@ -292,1 +292,1 @@\n-        cell.updateTreeTableColumn(tableColumn);\n+        cell.updateTableColumn(tableColumn);\n@@ -317,1 +317,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -332,1 +332,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -349,1 +349,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n@@ -369,1 +369,1 @@\n-        cell.updateTreeTableColumn(tc);\n+        cell.updateTableColumn(tc);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/cell\/TextFieldTreeTableCellTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}