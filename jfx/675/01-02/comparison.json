{"files":[{"patch":"@@ -28,3 +28,6 @@\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n@@ -36,8 +39,0 @@\n-\/*\n- * This is a JUnit 5 style test which has been backported to JUnit 4.\n- * Once JUnit 5 is available, the declared annotations and all\n- * JUnit 4 tests (marked with @org.junit.Test) should be removed.\n- *\n- * The used static imports for assertions can be upgraded as well.\n- *\/\n-\n@@ -210,167 +205,0 @@\n-\n-    \/*\n-     * Backported code for JUnit 4 which can be removed starts here:\n-     *\/\n-\n-    @interface Nested {}\n-    @interface Test {}\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__shouldBeValid() {\n-        new WhenObservedWithInvalidationListener()\n-            .shouldBeValid();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__shouldStartObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .shouldStartObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__shouldNotStopObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .shouldNotStopObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__shouldCallComputeValueOneOrTwoTimes() {\n-        new WhenObservedWithInvalidationListener()\n-            .shouldCallComputeValueOneOrTwoTimes();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__shouldStillBeValid() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .shouldStillBeValid();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__shouldNotStartObservingSourceAgain() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .shouldNotStartObservingSourceAgain();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__shouldNotStopObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .shouldNotStopObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__shouldNotComputeValueAgain() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .shouldNotComputeValueAgain();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__shouldStillBeValid() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .shouldStillBeValid();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__shouldNotStartObservingSourceAgain() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .shouldNotStartObservingSourceAgain();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__shouldNotStopObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .shouldNotStopObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__shouldNotComputeValueAgain() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .shouldNotComputeValueAgain();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__shouldNotStartObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .shouldNotStartObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__shouldStopObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .shouldStopObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__shouldNotComputeValue() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .shouldNotComputeValue();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__shouldNoLongerBeValid() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .shouldNoLongerBeValid();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__AndTheListenerIsRemovedAgain__shouldNotStartObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .new AndTheListenerIsRemovedAgain()\n-            .shouldNotStartObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__AndTheListenerIsRemovedAgain__shouldNotStopObservingSource() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .new AndTheListenerIsRemovedAgain()\n-            .shouldNotStopObservingSource();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__AndTheListenerIsRemovedAgain__shouldNotComputeValue() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .new AndTheListenerIsRemovedAgain()\n-            .shouldNotComputeValue();\n-    }\n-\n-    @org.junit.Test\n-    public void WhenObservedWithInvalidationListener__AndWhenObservedAgain__AndThenOneObserverIsRemoved__AndThenTheLastObserverIsRemoved__AndTheListenerIsRemovedAgain__shouldNotBeValid() {\n-        new WhenObservedWithInvalidationListener()\n-            .new AndWhenObservedAgain()\n-            .new AndThenOneObserverIsRemoved()\n-            .new AndThenTheLastObserverIsRemoved()\n-            .new AndTheListenerIsRemovedAgain()\n-            .shouldNotBeValid();\n-    }\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/value\/LazyObjectBindingTest.java","additions":6,"deletions":178,"binary":false,"changes":184,"status":"modified"},{"patch":"@@ -3,4 +3,5 @@\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -12,0 +13,3 @@\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n+\n@@ -19,8 +23,0 @@\n-\/*\n- * This is a JUnit 5 style test which has been backported to JUnit 4.\n- * Once JUnit 5 is available, the declared annotations and all\n- * JUnit 4 tests (marked with @org.junit.Test) should be removed.\n- *\n- * The used static imports for assertions can be upgraded as well.\n- *\/\n-\n@@ -372,186 +368,0 @@\n-\n-    \/*\n-     * Backported code for JUnit 4 which can be removed starts here:\n-     *\/\n-\n-    @interface Nested {}\n-\n-    @interface Test {}\n-\n-    public static <T extends Throwable> T assertThrows(Class<T> expected, Runnable runnable) {\n-        try {\n-            runnable.run();\n-        }\n-        catch (Throwable t) {\n-            if (expected.isInstance(t)) {\n-                return (T) t;\n-            }\n-\n-            throw new AssertionError(\"unexpected exception thrown: \" + t);\n-        }\n-\n-        throw new AssertionError(\"expected \" + expected + \", but nothing was thrown\");\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNull__shouldThrowNullPointerException() {\n-        new When_map_Called().new WithNull().shouldThrowNullPointerException();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__shouldNotBeNull() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().shouldNotBeNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__shouldNotBeStronglyReferenced() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().shouldNotBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__When_getValue_Called__shouldReturnPropertyValuesWithOperationApplied() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new When_getValue_Called()\n-                .shouldReturnPropertyValuesWithOperationApplied();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__When_getValue_Called__shouldNotOperateOnNull() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new When_getValue_Called()\n-                .shouldNotOperateOnNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldApplyOperation() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved().shouldApplyOperation();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldNotOperateOnNull() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved()\n-                .shouldNotOperateOnNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldBeStronglyReferenced() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved()\n-                .shouldBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__AndWhenUnobserved__shouldNoLongerBeCalled() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved().new AndWhenUnobserved()\n-                .shouldNoLongerBeCalled();\n-    }\n-\n-    @org.junit.Test\n-    public void When_map_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__AndWhenUnobserved__shouldNoLongerBeStronglyReferenced() {\n-        new When_map_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved().new AndWhenUnobserved()\n-                .shouldNoLongerBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__shouldNotBeNull() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().shouldNotBeNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__shouldNotBeStronglyReferenced() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().shouldNotBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__When_getValue_Called__shouldReturnPropertyValuesWithOperationApplied() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().new When_getValue_Called()\n-                .shouldReturnPropertyValuesWithOperationApplied();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__WhenObserved__shouldApplyOperation() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().new WhenObserved().shouldApplyOperation();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__WhenObserved__shouldBeStronglyReferenced() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().new WhenObserved().shouldBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__WhenObserved__AndWhenUnobserved__shouldNoLongerBeCalled() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().new WhenObserved().new AndWhenUnobserved()\n-                .shouldNoLongerBeCalled();\n-    }\n-\n-    @org.junit.Test\n-    public void When_orElse_CalledReturns_ObservableValue_Which__WhenObserved__AndWhenUnobserved__shouldNoLongerBeStronglyReferenced() {\n-        new When_orElse_CalledReturns_ObservableValue_Which().new WhenObserved().new AndWhenUnobserved()\n-                .shouldNoLongerBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNull__shouldThrowNullPointerException() {\n-        new When_flatMap_Called().new WithNull().shouldThrowNullPointerException();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__shouldNotBeNull() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().shouldNotBeNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__shouldNotBeStronglyReferenced() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().shouldNotBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__When_getValue_Called__shouldReturnPropertyValuesWithOperationApplied() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new When_getValue_Called()\n-                .shouldReturnPropertyValuesWithOperationApplied();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__When_getValue_Called__shouldNotOperateOnNull() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new When_getValue_Called()\n-                .shouldNotOperateOnNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__When_getValue_Called__shouldIgnoreFlatMapsToNull() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new When_getValue_Called()\n-                .shouldIgnoreFlatMapsToNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldApplyOperation() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved()\n-                .shouldApplyOperation();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldNotOperateOnNull() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved()\n-                .shouldNotOperateOnNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldIgnoreFlatMapsToNull() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved()\n-                .shouldIgnoreFlatMapsToNull();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__shouldBeStronglyReferenced() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved()\n-                .shouldBeStronglyReferenced();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__AndWhenUnobserved__shouldNoLongerBeCalled() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved().new AndWhenUnobserved()\n-                .shouldNoLongerBeCalled();\n-    }\n-\n-    @org.junit.Test\n-    public void When_flatMap_Called__WithNotNullReturns_ObservableValue_Which__WhenObserved__AndWhenUnobserved__shouldNoLongerBeStronglyReferenced() {\n-        new When_flatMap_Called().new WithNotNullReturns_ObservableValue_Which().new WhenObserved().new AndWhenUnobserved()\n-                .shouldNoLongerBeStronglyReferenced();\n-    }\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/javafx\/beans\/value\/ObservableValueFluentBindingsTest.java","additions":8,"deletions":198,"binary":false,"changes":206,"status":"modified"}]}