{"files":[{"patch":"@@ -625,0 +625,1 @@\n+    public abstract Pixels createPixels(int width, int height, ByteBuffer data, float scalex, float scaley);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Application.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -101,0 +101,14 @@\n+    protected Pixels(final int width, final int height, final ByteBuffer pixels, float scalex, float scaley) {\n+        this.width = width;\n+        this.height = height;\n+        this.bytesPerComponent = 1;\n+        this.bytes = pixels.slice();\n+        if ((this.width <= 0) || (this.height <= 0) || ((this.width * this.height * 4) > this.bytes.capacity())) {\n+            throw new IllegalArgumentException(\"Too small byte buffer size \"+this.width+\"x\"+this.height+\" [\"+(this.width*this.height*4)+\"] > \"+this.bytes.capacity());\n+        }\n+\n+        this.ints = null;\n+        this.scalex = scalex;\n+        this.scaley = scaley;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Pixels.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -440,0 +440,5 @@\n+    @Override\n+    public Pixels createPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        return new GtkPixels(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkApplication.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+    public GtkPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        super(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkPixels.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,0 +123,6 @@\n+    @Override\n+    public Pixels createPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        return new IosPixels(width, height, data, scalex, scaley);\n+    }\n+\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosApplication.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,0 +41,4 @@\n+    protected IosPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        super(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosPixels.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -274,0 +274,4 @@\n+    @Override public Pixels createPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        return new MacPixels(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,0 +52,4 @@\n+    protected MacPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        super(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacPixels.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,0 +190,7 @@\n+    @Override\n+    public Pixels createPixels(int width, int height, ByteBuffer data,\n+                               float scalex, float scaley)\n+    {\n+        return new MonoclePixels(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleApplication.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -40,0 +40,4 @@\n+    MonoclePixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        super(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonoclePixels.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -256,0 +256,5 @@\n+    @Override\n+    public Pixels createPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        return new WinPixels(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -53,0 +53,4 @@\n+    protected WinPixels(int width, int height, ByteBuffer data, float scalex, float scaley) {\n+        super(width, height, data, scalex, scaley);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinPixels.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,4 @@\n-                                      image.getHeight(), bytes);\n+                                      image.getHeight(),\n+                                      bytes,\n+                                      image.getPixelScale(),\n+                                      image.getPixelScale());\n@@ -112,1 +115,4 @@\n-                                      image.getHeight(), ints);\n+                                      image.getHeight(),\n+                                      ints,\n+                                      image.getPixelScale(),\n+                                      image.getPixelScale());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PixelUtils.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -265,0 +265,16 @@\n+            jclass pixelsClass = (*env)->FindClass(env, \"com\/sun\/glass\/ui\/mac\/MacPixels\");\n+\n+            jfieldID jPixelsWidthField = (*env)->GetFieldID(env, pixelsClass, \"width\", \"I\");\n+            jfieldID jPixelsHeightField = (*env)->GetFieldID(env, pixelsClass, \"height\", \"I\");\n+            jfieldID jPixelsScaleXField = (*env)->GetFieldID(env, pixelsClass, \"scalex\", \"F\");\n+            jfieldID jPixelsScaleYField = (*env)->GetFieldID(env, pixelsClass, \"scaley\", \"F\");\n+\n+            jint width = (*env)->GetIntField(env, pixels, jPixelsWidthField);\n+            jint height = (*env)->GetIntField(env, pixels, jPixelsHeightField);\n+            jfloat sx = (*env)->GetFloatField(env, pixels, jPixelsScaleXField);\n+            jfloat sy = (*env)->GetFloatField(env, pixels, jPixelsScaleYField);\n+\n+            if ((sx > 1) && (sy > 1) && (width > 1) && (height > 1)) {\n+                NSSize imgSize = {width \/ sx, height \/ sy};\n+                [image setSize: imgSize];\n+            }\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassMenu.m","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}