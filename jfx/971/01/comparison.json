{"files":[{"patch":"@@ -199,0 +199,1 @@\n+    private final boolean isPopup;\n@@ -270,0 +271,1 @@\n+        this.isPopup = (this.styleMask & Window.POPUP) != 0;\n@@ -423,0 +425,5 @@\n+    public boolean isPopup() {\n+        Application.checkEventThread();\n+        return this.isPopup;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Window.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -153,1 +153,10 @@\n-        if (screen == null || !screen.containsPlatformRect(x, y, w, h)) {\n+        final Window owner = getOwner();\n+        final Screen popupOwnerScreen = isPopup() && owner != null ? owner.getScreen() : null;\n+        final boolean usePopupScreen = popupOwnerScreen != null;\n+\n+        if (usePopupScreen && screen == popupOwnerScreen) {\n+            \/\/ Suppress screen switch\n+            return null;\n+        }\n+\n+        if (screen == null || usePopupScreen || !screen.containsPlatformRect(x, y, w, h)) {\n@@ -156,1 +165,1 @@\n-            if (bestPortion < 0.5f) {\n+            if (usePopupScreen || bestPortion < 0.5f) {\n@@ -186,1 +195,3 @@\n-                    if (screen == null || portion > 0.6f && portion > bestPortion) {\n+                    if (scr == popupOwnerScreen ||\n+                            (screen == null || portion > 0.6f && portion > bestPortion) && !usePopupScreen) {\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinWindow.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javafx.application.Application;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContextMenu;\n+import javafx.scene.control.Menu;\n+import javafx.scene.control.MenuBar;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.Tooltip;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.layout.Priority;\n+import javafx.stage.Stage;\n+\n+public class PopupControlTest extends Application {\n+\n+    public Parent createContent() {\n+        VBox root = new VBox(2);\n+        root.setPrefSize(800, 600);\n+\n+        \/\/ Create a menu bar with 2 menu items each with 2 sub-items\n+        VBox menuBarPane = new VBox();\n+        final MenuBar menuBar = new MenuBar();\n+        Menu m1 = new Menu(\"one\");\n+        m1.getItems().addAll(new MenuItem(\"111\"), new MenuItem(\"222\"));\n+        Menu m2 = new Menu(\"two\");\n+        m2.getItems().addAll(new MenuItem(\"aaa\"), new MenuItem(\"bbb\"));\n+        Menu menu = new Menu(\"Menu\");\n+        menu.getItems().addAll(m1, m2);\n+        menuBar.getMenus().addAll(menu);\n+        menuBarPane.getChildren().addAll(menuBar);\n+\n+        \/\/ Create button with tooltip (autofix=false)\n+        Button button1 = new Button(\"Button 1 w\/ Tooltip\");\n+        Tooltip tooltip1 = new Tooltip(\"1 (autoFix=no)\");\n+        tooltip1.setAutoFix(false);\n+        button1.setTooltip(tooltip1);\n+\n+        \/\/ Create button with tooltip (autofix=true)\n+        Button button2 = new Button(\"Button 2 w\/ Tooltip\");\n+        Tooltip tooltip2 = new Tooltip(\"2 (autoFix=yes)\");\n+        button2.setTooltip(tooltip2);\n+\n+        \/\/ create a context menu\n+        ContextMenu contextMenu = new ContextMenu();\n+        MenuItem menuItem1 = new MenuItem(\"item 1\");\n+        MenuItem menuItem2 = new MenuItem(\"item 2\");\n+        MenuItem menuItem3 = new MenuItem(\"item 3\");\n+        contextMenu.getItems().add(menuItem1);\n+        contextMenu.getItems().add(menuItem2);\n+        contextMenu.getItems().add(menuItem3);\n+\n+        \/\/ Create button with content menu\n+        Button button3 = new Button(\"ContextMenu (right click)\");\n+        button3.setContextMenu(contextMenu);\n+\n+        \/\/ Instructions for running the test\n+        String message =\n+            \"Setup: This test is intended to be run on a dual-monitor setup on Windows,\\n\" +\n+            \"with each monitor having a different HiDPI screen scale. For example,\\n\" +\n+            \"a primary screen with a scale of 1.25 and a secondary screen with a\\n\" +\n+            \"scale of 1.75. The secondary screen should be aligned to the left of\\n\" +\n+            \"the primary screen.\\n\" +\n+            \"\\n\" +\n+            \"Test instructions:\\n\" +\n+            \"\\n\" +\n+            \"1. Drag the stage to the left such that the menu bar and the three buttons\\n\" +\n+            \"are on the second screen, but the majority of the window is still on\\n\" +\n+            \"the  primary screen. The window should not rescale to the scale of the\\n\" +\n+            \"secondary screen.\\n\" +\n+            \"\\n\" +\n+            \"2. Click the menu and verify that the menu items and sub-menu items are\\n\" +\n+            \"drawn below the menu with the same scale as the main window.\\n\" +\n+            \"\\n\" +\n+            \"3. Mouse over button 1 and verify that the tooltip is drawn near the\\n\" +\n+            \"mouse location with the same scale as the main window.\\n\" +\n+            \"\\n\" +\n+            \"4. Mouse over button 2 and verify that the tooltip is drawn near the\\n\" +\n+            \"mouse location, entirely on the secondary screen, with the same scale\\n\" +\n+            \"as the main window.\\n\" +\n+            \"\\n\" +\n+            \"5. Right click on the third button and verify that the context menu is\\n\" +\n+            \"drawn near the mouse location with the same scale as the main window.\\n\" +\n+            \"\\n\" +\n+            \"6. Drag the main window further to the left such that it changes scale\\n\" +\n+            \"to that of the secondary screen\\n\" +\n+            \"\\n\" +\n+            \"7. repeat steps 2-5\";\n+        TextArea instructions = new TextArea(message);\n+        instructions.setEditable(false);\n+        VBox.setVgrow(instructions, Priority.ALWAYS);\n+\n+        root.getChildren().addAll(menuBarPane, button1, button2, button3, instructions);\n+\n+        return root;\n+    }\n+\n+    @Override\n+    public void start(Stage stage) throws Exception {\n+        stage.setScene(new Scene(createContent()));\n+        stage.show();\n+    }\n+\n+    public static void main(String[] args) {\n+        Application.launch(args);\n+    }\n+}\n","filename":"tests\/manual\/controls\/PopupControlTest.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"}]}