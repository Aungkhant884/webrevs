{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## Mesa 3-D Graphics Library v19.2.1\n+## Mesa 3-D Graphics Library v21.0.3\n","filename":"modules\/javafx.graphics\/src\/main\/legal\/mesa3d.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,5 +30,0 @@\n-#if defined(USE_MGL_NAMESPACE)\n-#include \"gl_mangle.h\"\n-#endif\n-\n-\n@@ -2104,7 +2099,0 @@\n-\/**\n- ** NOTE!!!!!  If you add new functions to this file, or update\n- ** glext.h be sure to regenerate the gl_mangle.h file.  See comments\n- ** in that file for details.\n- **\/\n-\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/GL\/gl.h","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-#define GL_GLEXT_VERSION 20190611\n+#define GL_GLEXT_VERSION 20190911\n@@ -5000,0 +5000,16 @@\n+#ifndef GL_KHR_shader_subgroup\n+#define GL_KHR_shader_subgroup 1\n+#define GL_SUBGROUP_SIZE_KHR              0x9532\n+#define GL_SUBGROUP_SUPPORTED_STAGES_KHR  0x9533\n+#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR 0x9534\n+#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR   0x9535\n+#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR 0x00000001\n+#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR  0x00000002\n+#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR 0x00000004\n+#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR 0x00000008\n+#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR 0x00000010\n+#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR 0x00000020\n+#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR 0x00000040\n+#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR  0x00000080\n+#endif \/* GL_KHR_shader_subgroup *\/\n+\n@@ -6473,0 +6489,4 @@\n+#ifndef GL_EXT_EGL_sync\n+#define GL_EXT_EGL_sync 1\n+#endif \/* GL_EXT_EGL_sync *\/\n+\n@@ -9267,0 +9287,11 @@\n+#ifndef GL_MESA_framebuffer_flip_y\n+#define GL_MESA_framebuffer_flip_y 1\n+#define GL_FRAMEBUFFER_FLIP_Y_MESA        0x8BBB\n+typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIMESAPROC) (GLenum target, GLenum pname, GLint param);\n+typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) (GLenum target, GLenum pname, GLint *params);\n+#ifdef GL_GLEXT_PROTOTYPES\n+GLAPI void APIENTRY glFramebufferParameteriMESA (GLenum target, GLenum pname, GLint param);\n+GLAPI void APIENTRY glGetFramebufferParameterivMESA (GLenum target, GLenum pname, GLint *params);\n+#endif\n+#endif \/* GL_MESA_framebuffer_flip_y *\/\n+\n@@ -9380,0 +9411,19 @@\n+#ifndef GL_NVX_gpu_multicast2\n+#define GL_NVX_gpu_multicast2 1\n+#define GL_UPLOAD_GPU_MASK_NVX            0x954A\n+typedef void (APIENTRYP PFNGLUPLOADGPUMASKNVXPROC) (GLbitfield mask);\n+typedef void (APIENTRYP PFNGLMULTICASTVIEWPORTARRAYVNVXPROC) (GLuint gpu, GLuint first, GLsizei count, const GLfloat *v);\n+typedef void (APIENTRYP PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC) (GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);\n+typedef void (APIENTRYP PFNGLMULTICASTSCISSORARRAYVNVXPROC) (GLuint gpu, GLuint first, GLsizei count, const GLint *v);\n+typedef GLuint (APIENTRYP PFNGLASYNCCOPYBUFFERSUBDATANVXPROC) (GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray);\n+typedef GLuint (APIENTRYP PFNGLASYNCCOPYIMAGESUBDATANVXPROC) (GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray);\n+#ifdef GL_GLEXT_PROTOTYPES\n+GLAPI void APIENTRY glUploadGpuMaskNVX (GLbitfield mask);\n+GLAPI void APIENTRY glMulticastViewportArrayvNVX (GLuint gpu, GLuint first, GLsizei count, const GLfloat *v);\n+GLAPI void APIENTRY glMulticastViewportPositionWScaleNVX (GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);\n+GLAPI void APIENTRY glMulticastScissorArrayvNVX (GLuint gpu, GLuint first, GLsizei count, const GLint *v);\n+GLAPI GLuint APIENTRY glAsyncCopyBufferSubDataNVX (GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray);\n+GLAPI GLuint APIENTRY glAsyncCopyImageSubDataNVX (GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray);\n+#endif\n+#endif \/* GL_NVX_gpu_multicast2 *\/\n+\n@@ -9394,0 +9444,14 @@\n+#ifndef GL_NVX_progress_fence\n+#define GL_NVX_progress_fence 1\n+typedef GLuint (APIENTRYP PFNGLCREATEPROGRESSFENCENVXPROC) (void);\n+typedef void (APIENTRYP PFNGLSIGNALSEMAPHOREUI64NVXPROC) (GLuint signalGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);\n+typedef void (APIENTRYP PFNGLWAITSEMAPHOREUI64NVXPROC) (GLuint waitGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);\n+typedef void (APIENTRYP PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC) (GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);\n+#ifdef GL_GLEXT_PROTOTYPES\n+GLAPI GLuint APIENTRY glCreateProgressFenceNVX (void);\n+GLAPI void APIENTRY glSignalSemaphoreui64NVX (GLuint signalGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);\n+GLAPI void APIENTRY glWaitSemaphoreui64NVX (GLuint waitGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);\n+GLAPI void APIENTRY glClientWaitSemaphoreui64NVX (GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray);\n+#endif\n+#endif \/* GL_NVX_progress_fence *\/\n+\n@@ -10941,0 +11005,5 @@\n+#ifndef GL_NV_shader_subgroup_partitioned\n+#define GL_NV_shader_subgroup_partitioned 1\n+#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV 0x00000100\n+#endif \/* GL_NV_shader_subgroup_partitioned *\/\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/GL\/glext.h","additions":70,"deletions":1,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -35,5 +35,0 @@\n-#if defined(USE_MGL_NAMESPACE)\n-#include \"glx_mangle.h\"\n-#endif\n-\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/GL\/glx.h","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-#define GLX_GLXEXT_VERSION 20180525\n+#define GLX_GLXEXT_VERSION 20190911\n@@ -283,0 +283,8 @@\n+#ifndef GLX_EXT_context_priority\n+#define GLX_EXT_context_priority 1\n+#define GLX_CONTEXT_PRIORITY_LEVEL_EXT    0x3100\n+#define GLX_CONTEXT_PRIORITY_HIGH_EXT     0x3101\n+#define GLX_CONTEXT_PRIORITY_MEDIUM_EXT   0x3102\n+#define GLX_CONTEXT_PRIORITY_LOW_EXT      0x3103\n+#endif \/* GLX_EXT_context_priority *\/\n+\n@@ -479,1 +487,0 @@\n-#define GLX_RENDERER_ID_MESA              0x818E\n@@ -504,1 +511,1 @@\n-typedef Bool ( *PFNGLXSET3DFXMODEMESAPROC) (int mode);\n+typedef GLboolean ( *PFNGLXSET3DFXMODEMESAPROC) (GLint mode);\n@@ -506,1 +513,1 @@\n-Bool glXSet3DfxModeMESA (int mode);\n+GLboolean glXSet3DfxModeMESA (GLint mode);\n@@ -551,0 +558,9 @@\n+#ifndef GLX_NV_multigpu_context\n+#define GLX_NV_multigpu_context 1\n+#define GLX_CONTEXT_MULTIGPU_ATTRIB_NV    0x20AA\n+#define GLX_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV 0x20AB\n+#define GLX_CONTEXT_MULTIGPU_ATTRIB_AFR_NV 0x20AC\n+#define GLX_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV 0x20AD\n+#define GLX_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV 0x20AE\n+#endif \/* GLX_NV_multigpu_context *\/\n+\n@@ -839,1 +855,1 @@\n-typedef int ( *PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);\n+typedef void ( *PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);\n@@ -845,1 +861,1 @@\n-int glXQueryGLXPbufferSGIX (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);\n+void glXQueryGLXPbufferSGIX (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);\n@@ -943,1 +959,1 @@\n-typedef Status ( *PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex);\n+typedef Status ( *PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, unsigned long *pTransparentIndex);\n@@ -945,1 +961,1 @@\n-Status glXGetTransparentIndexSUN (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex);\n+Status glXGetTransparentIndexSUN (Display *dpy, Window overlay, Window underlay, unsigned long *pTransparentIndex);\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/GL\/glxext.h","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-#ifndef __wglext_h_\n-#define __wglext_h_ 1\n+#ifndef __wgl_wglext_h_\n+#define __wgl_wglext_h_ 1\n@@ -9,1 +9,1 @@\n-** Copyright (c) 2013-2017 The Khronos Group Inc.\n+** Copyright (c) 2013-2018 The Khronos Group Inc.\n@@ -42,1 +42,1 @@\n-#define WGL_WGLEXT_VERSION 20170817\n+#define WGL_WGLEXT_VERSION 20190728\n@@ -321,1 +321,1 @@\n-typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, int property, GLenum dataType, UINT size, void *data);\n+typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, INT property, GLenum dataType, UINT size, void *data);\n@@ -331,1 +331,1 @@\n-INT WINAPI wglGetGPUInfoAMD (UINT id, int property, GLenum dataType, UINT size, void *data);\n+INT WINAPI wglGetGPUInfoAMD (UINT id, INT property, GLenum dataType, UINT size, void *data);\n@@ -347,0 +347,5 @@\n+#ifndef WGL_ATI_render_texture_rectangle\n+#define WGL_ATI_render_texture_rectangle 1\n+#define WGL_TEXTURE_RECTANGLE_ATI         0x21A5\n+#endif \/* WGL_ATI_render_texture_rectangle *\/\n+\n@@ -349,1 +354,1 @@\n-#define WGL_COLORSPACE_EXT                0x3087\n+#define WGL_COLORSPACE_EXT                0x309D\n@@ -713,0 +718,9 @@\n+#ifndef WGL_NV_multigpu_context\n+#define WGL_NV_multigpu_context 1\n+#define WGL_CONTEXT_MULTIGPU_ATTRIB_NV    0x20AA\n+#define WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV 0x20AB\n+#define WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV 0x20AC\n+#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV 0x20AD\n+#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV 0x20AE\n+#endif \/* WGL_NV_multigpu_context *\/\n+\n@@ -723,2 +737,2 @@\n-typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDC, HVIDEOOUTPUTDEVICENV *phDeviceList);\n-typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDC, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);\n+typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);\n+typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);\n@@ -727,2 +741,2 @@\n-int WINAPI wglEnumerateVideoDevicesNV (HDC hDC, HVIDEOOUTPUTDEVICENV *phDeviceList);\n-BOOL WINAPI wglBindVideoDeviceNV (HDC hDC, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);\n+int WINAPI wglEnumerateVideoDevicesNV (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);\n+BOOL WINAPI wglBindVideoDeviceNV (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);\n@@ -833,1 +847,1 @@\n-typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);\n+typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);\n@@ -840,1 +854,1 @@\n-INT64 WINAPI wglSwapLayerBuffersMscOML (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);\n+INT64 WINAPI wglSwapLayerBuffersMscOML (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);\n","filename":"modules\/javafx.graphics\/src\/main\/native-prism-es2\/GL\/wglext.h","additions":27,"deletions":13,"binary":false,"changes":40,"status":"modified"}]}