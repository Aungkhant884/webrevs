{"files":[{"patch":"@@ -3603,0 +3603,1 @@\n+        testapp7\n@@ -3618,0 +3619,1 @@\n+        sourceSets.testapp7,\n@@ -3719,1 +3721,1 @@\n-    def modtestapps = [ \"testapp2\", \"testapp3\", \"testapp4\", \"testapp5\", \"testapp6\", \"testscriptapp1\", \"testscriptapp2\" ]\n+    def modtestapps = [ \"testapp2\", \"testapp3\", \"testapp4\", \"testapp5\", \"testapp6\", \"testapp7\", \"testscriptapp1\", \"testscriptapp2\" ]\n","filename":"build.gradle","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+static JGClass jMainThreadCls;\n+static jmethodID fwkIsMainThread;\n+static jmethodID fwkScheduleDispatchFunctions;\n+\n@@ -38,1 +42,37 @@\n-    static JGClass jMainThreadCls(env->FindClass(\"com\/sun\/webkit\/MainThread\"));\n+    env->CallStaticVoidMethod(jMainThreadCls, fwkScheduleDispatchFunctions);\n+    WTF::CheckAndClearException(env);\n+}\n+\n+void initializeMainThreadPlatform()\n+{\n+    \/\/ Initialize the class reference and methodids for the MainThread. The\n+    \/\/ initilization has to be done from a context where the class\n+    \/\/ com.sun.webkit.MainThread is accessible. When\n+    \/\/ scheduleDispatchFunctionsOnMainThread is invoked, the system class loader\n+    \/\/ would be used to locate the class, which fails if the JavaFX modules are\n+    \/\/ not loaded from the boot module layer.\n+    \/\/\n+    \/\/ initializeMainThreadPlatform is called through the chain:\n+    \/\/ - com.sun.webkit.WebPage.WebPage\n+    \/\/ - com.sun.webkit.WebPage.twkCreatePage\n+    \/\/ - WTF::initializeMainThread\n+    \/\/ - WTF::initializeMainThreadPlatform\n+    \/\/\n+    \/\/ As we are invoked through JNI from java, the class loader, that loaded\n+    \/\/ WebPage will be used by FindClass.\n+    \/\/\n+    \/\/ WTF::initializeMainThread has a guard, so that initialization is only run\n+    \/\/ once\n+\n+    AttachThreadAsNonDaemonToJavaEnv autoAttach;\n+    JNIEnv* env = autoAttach.env();\n+\n+    static JGClass jMainThreadRef(env->FindClass(\"com\/sun\/webkit\/MainThread\"));\n+    jMainThreadCls = jMainThreadRef;\n+\n+    fwkIsMainThread = env->GetStaticMethodID(\n+            jMainThreadCls,\n+            \"fwkIsMainThread\",\n+            \"()Z\");\n+\n+    ASSERT(fwkIsMainThread);\n@@ -40,1 +80,1 @@\n-    static jmethodID mid = env->GetStaticMethodID(\n+    fwkScheduleDispatchFunctions = env->GetStaticMethodID(\n@@ -45,1 +85,1 @@\n-    ASSERT(mid);\n+    ASSERT(fwkScheduleDispatchFunctions);\n@@ -47,6 +87,0 @@\n-    env->CallStaticVoidMethod(jMainThreadCls, mid);\n-    WTF::CheckAndClearException(env);\n-}\n-\n-void initializeMainThreadPlatform()\n-{\n@@ -67,10 +101,1 @@\n-    static JGClass jMainThreadCls(env->FindClass(\"com\/sun\/webkit\/MainThread\"));\n-\n-    static jmethodID mid = env->GetStaticMethodID(\n-            jMainThreadCls,\n-            \"fwkIsMainThread\",\n-            \"()Z\");\n-\n-    ASSERT(mid);\n-\n-    jboolean isMainThread = env->CallStaticBooleanMethod(jMainThreadCls, mid);\n+    jboolean isMainThread = env->CallStaticBooleanMethod(jMainThreadCls, fwkIsMainThread);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/MainThreadJava.cpp","additions":44,"deletions":19,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.com.sun.webkit;\n+\n+import java.io.File;\n+import static java.util.Arrays.asList;\n+import java.util.List;\n+import static org.junit.Assert.assertEquals;\n+import org.junit.Test;\n+\n+\/**\n+ * @test\n+ * @bug 8242361\n+ * @summary Check if webkit main thread <-> java integration works correctly\n+ *\/\n+public class MainThreadTest {\n+    @Test (timeout = 15000)\n+    public void testMainThreadDoesNotSegfault() throws Exception {\n+        \/\/ This is an indirect test of the webkit main thread <-> java\n+        \/\/ integration. It was observed, that using a data-url caused the\n+        \/\/ JVM to segfault. That case is executed by this test:\n+        \/\/\n+        \/\/ A new JVM is started with a custom launcher (classpath based). This\n+        \/\/ launcher sets up the module layer required for OpenJFX and starts\n+        \/\/ the test application. That way the OpenJFX classes are not loaded by\n+        \/\/ the system class loader, but by the classloader that is associated\n+        \/\/ with the new module layer.\n+        \/\/\n+\n+        final String appModulePath = System.getProperty(\"launchertest.testapp7.module.path\");\n+        final String workerModulePath = System.getProperty(\"worker.module.path\");\n+        final String javaLibraryPath = System.getProperty(\"java.library.path\");\n+        final String workerJavaCmd = System.getProperty(\"worker.java.cmd\");\n+\n+        final List<String> cmd = asList(\n+            workerJavaCmd,\n+            \"-cp\", appModulePath + \"\/mymod\",\n+            \"-Djava.library.path=\" + javaLibraryPath,\n+            \"-Dmodule.path=\" + appModulePath + \"\/mymod\" + File.pathSeparator + workerModulePath,\n+            \"myapp7.DataUrlWithModuleLayerLauncher\"\n+        );\n+\n+        final ProcessBuilder builder = new ProcessBuilder(cmd);\n+\n+        builder.redirectError(ProcessBuilder.Redirect.INHERIT);\n+        builder.redirectOutput(ProcessBuilder.Redirect.INHERIT);\n+        Process process = builder.start();\n+        int retVal = process.waitFor();\n+\n+        assertEquals(\"Process did not exit cleanly\", 0, retVal);\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/webkit\/MainThreadTest.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module mymod {\n+    requires javafx.controls;\n+    requires javafx.media;\n+    requires javafx.web;\n+    requires javafx.graphics;\n+    requires javafx.base;\n+    exports myapp7;\n+}\n","filename":"tests\/system\/src\/testapp7\/java\/mymod\/module-info.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package myapp7;\n+\n+import java.lang.module.ModuleDescriptor;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Base64;\n+import javafx.application.Application;\n+import javafx.beans.value.ChangeListener;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker.State;\n+import javafx.scene.Scene;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+public class DataUrlWithModuleLayer extends Application {\n+    public static final int ERROR_OK = 0;\n+    public static final int ERROR_ASSUMPTION_VIOLATED = 1;\n+    public static final int ERROR_TIMEOUT = 2;\n+    public static final int ERROR_TITLE_NOT_UPDATED = 3;\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        Module module = Application.class.getModule();\n+\n+        if (module == null) {\n+            System.err.println(\"Failure: Module for Application not found\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        if (! module.isNamed()) {\n+            System.err.println(\"Failure: Expected named module\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        ModuleDescriptor moduleDesc = module.getDescriptor();\n+\n+        if (moduleDesc.isAutomatic()) {\n+            System.err.println(\"Failure: Automatic module found\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        if (moduleDesc.isOpen()) {\n+            System.err.println(\"Failure: Open module found\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        BorderPane root = new BorderPane();\n+        Scene scene = new Scene(root);\n+\n+        WebView webview = new WebView();\n+        root.setCenter(webview);\n+\n+        \/\/ The title tag value is made available via the getTitle nethod. The\n+        \/\/ JS code changes the value, so that the enclosing application can\n+        \/\/ detect, that the JS code was run.\n+        String checkJS = \"document.getElementsByTagName(\\\"title\\\")[0].textContent='Executed'\";\n+        String checkJSEncoded = Base64.getEncoder().encodeToString(checkJS.getBytes(StandardCharsets.UTF_8));\n+\n+        String script = \"<html>\"\n+            + \"<head>\"\n+            + \"<title>Armed<\/title>\"\n+            + \"<\/head>\"\n+            + \"<body>\"\n+            + \"<h1>Test for loading a data URL<\/h1>\"\n+            + \"<p>The test is successful, if the JVM does not crash with a SEGFAULT.<\/p>\"\n+            + \"<script src=\\\"data:application\/javascript;base64,\" + checkJSEncoded + \"\\\"><\/script>\"\n+            + \"<\/body>\"\n+            + \"<\/html>\";\n+        webview.getEngine().getLoadWorker().stateProperty().addListener(\n+                new ChangeListener<State>() {\n+                    public void changed(ObservableValue ov, State oldState, State newState) {\n+                        String title = webview.getEngine().getTitle();\n+                        if (newState == State.SUCCEEDED) {\n+                            if (\"Executed\".equals(title)) {\n+                                System.exit(ERROR_OK);\n+                            } else {\n+                                System.exit(ERROR_TITLE_NOT_UPDATED);\n+                            }\n+                        }\n+                    }\n+                });\n+        webview.getEngine().loadContent(script);\n+\n+        primaryStage.setScene(scene);\n+        primaryStage.setWidth(1024);\n+        primaryStage.setHeight(768);\n+        primaryStage.show();\n+    }\n+}\n","filename":"tests\/system\/src\/testapp7\/java\/mymod\/myapp7\/DataUrlWithModuleLayer.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package myapp7;\n+\n+import java.io.File;\n+import java.lang.module.Configuration;\n+import java.lang.module.ModuleFinder;\n+import java.lang.reflect.Method;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class DataUrlWithModuleLayerLauncher {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Install safeguard to ensure this application is terminated\n+        new Thread() {\n+            @Override\n+            public void run() {\n+                try {\n+                    Thread.sleep(15000);\n+                } catch (InterruptedException ex) {\n+                    \/\/ Ok, lets exit early\n+                }\n+                System.exit(DataUrlWithModuleLayer.ERROR_TIMEOUT);\n+            }\n+        }.start();\n+\n+        \/*\n+         * Setup a module layer for OpenJFX and the test class\n+         *\/\n+\n+        \/\/ Hack to get the classes of this programm into a module layer\n+        List<Path> modulePaths = new ArrayList<>();\n+        for(String workerPath: System.getProperty(\"module.path\").split(File.pathSeparator)) {\n+            modulePaths.add(Paths.get(workerPath));\n+        }\n+        ModuleFinder finder = ModuleFinder.of(modulePaths.toArray(new Path[0]));\n+\n+        \/*\n+         * Load the application as a named module and invoke it\n+         *\/\n+        ModuleLayer parent = ModuleLayer.boot();\n+        Configuration cf = parent.configuration().resolve(finder, ModuleFinder.of(), Set.of(\"mymod\"));\n+        ClassLoader scl = ClassLoader.getSystemClassLoader();\n+        ModuleLayer layer = parent.defineModulesWithOneLoader(cf, scl);\n+        ClassLoader moduleClassLoader = layer.findLoader(\"mymod\");\n+        Class appClass = moduleClassLoader.loadClass(\"javafx.application.Application\");\n+        Class testClass = moduleClassLoader.loadClass(\"myapp7.DataUrlWithModuleLayer\");\n+        Method launchMethod = appClass.getMethod(\"launch\", Class.class, String[].class);\n+        launchMethod.invoke(null, new Object[]{testClass, args});\n+    }\n+}\n","filename":"tests\/system\/src\/testapp7\/java\/mymod\/myapp7\/DataUrlWithModuleLayerLauncher.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"}]}