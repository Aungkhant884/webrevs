{"files":[{"patch":"@@ -34,0 +34,4 @@\n+static JGClass jMainThreadCls;\n+static jmethodID fwkIsMainThread;\n+static jmethodID fwkScheduleDispatchFunctions;\n+\n@@ -38,1 +42,36 @@\n-    static JGClass jMainThreadCls(env->FindClass(\"com\/sun\/webkit\/MainThread\"));\n+    env->CallStaticVoidMethod(jMainThreadCls, fwkScheduleDispatchFunctions);\n+    WTF::CheckAndClearException(env);\n+}\n+\n+void initializeMainThreadPlatform()\n+{\n+    \/\/ Initialize the class reference and methodids for the MainThread. The\n+    \/\/ initilization has to be done from a context where the class\n+    \/\/ com.sun.webkit.MainThread is accessible. When\n+    \/\/ scheduleDispatchFunctionsOnMainThread is invoced, the system class loader\n+    \/\/ would be used to locate the class, which fails if the JavaFX modules are\n+    \/\/ not loaded from the boot module layer.\n+    \/\/\n+    \/\/ initializeMainThreadPlatform is called through the chain:\n+    \/\/ - com.sun.webkit.WebPage.WebPage\n+    \/\/ - com.sun.webkit.WebPage.twkCreatePage\n+    \/\/ - WTF::initializeMainThread\n+    \/\/ - WTF::initializeMainThreadPlatform\n+    \/\/\n+    \/\/ As we are invoked through JNI from java, the class loader, that loaded\n+    \/\/ WebPage will be used by FindClass.\n+    \/\/\n+    \/\/ WTF::initializeMainThread has a guard, so that initialization is only run\n+\n+    AttachThreadAsNonDaemonToJavaEnv autoAttach;\n+    JNIEnv* env = autoAttach.env();\n+\n+    static JGClass jMainThreadRef(env->FindClass(\"com\/sun\/webkit\/MainThread\"));\n+    jMainThreadCls = jMainThreadRef;\n+\n+    fwkIsMainThread = env->GetStaticMethodID(\n+            jMainThreadCls,\n+            \"fwkIsMainThread\",\n+            \"()Z\");\n+\n+    ASSERT(fwkIsMainThread);\n@@ -40,1 +79,1 @@\n-    static jmethodID mid = env->GetStaticMethodID(\n+    fwkScheduleDispatchFunctions = env->GetStaticMethodID(\n@@ -45,1 +84,1 @@\n-    ASSERT(mid);\n+    ASSERT(fwkScheduleDispatchFunctions);\n@@ -47,6 +86,0 @@\n-    env->CallStaticVoidMethod(jMainThreadCls, mid);\n-    WTF::CheckAndClearException(env);\n-}\n-\n-void initializeMainThreadPlatform()\n-{\n@@ -67,10 +100,1 @@\n-    static JGClass jMainThreadCls(env->FindClass(\"com\/sun\/webkit\/MainThread\"));\n-\n-    static jmethodID mid = env->GetStaticMethodID(\n-            jMainThreadCls,\n-            \"fwkIsMainThread\",\n-            \"()Z\");\n-\n-    ASSERT(mid);\n-\n-    jboolean isMainThread = env->CallStaticBooleanMethod(jMainThreadCls, mid);\n+    jboolean isMainThread = env->CallStaticBooleanMethod(jMainThreadCls, fwkIsMainThread);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/MainThreadJava.cpp","additions":43,"deletions":19,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -0,0 +1,23 @@\n+plugins {\n+    id \"application\"\n+}\n+\n+apply plugin: \"java\"\n+\n+\n+application {\n+    mainClassName = \"dataurl.module.DataUrlWithModuleLayerLauncher\"\n+}\n+\n+compileJava {\n+    doFirst {\n+        options.compilerArgs = [\n+            '--module-path', classpath.asPath\n+        ]\n+        classpath = files()\n+    }\n+}\n+\n+dependencies {\n+    compileOnly fileTree('..\/..\/..\/..\/build\/publications') { include '*.jar' }\n+}\n\\ No newline at end of file\n","filename":"tests\/manual\/web\/dataurl\/build.gradle","additions":23,"deletions":0,"binary":false,"changes":23,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"common.h\"\n","filename":"tests\/manual\/web\/dataurl\/settings.gradle","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/common.cpp","status":"copied"},{"patch":"@@ -0,0 +1,56 @@\n+package dataurl.module;\n+\n+import java.lang.module.ModuleDescriptor;\n+import javafx.application.Application;\n+import javafx.scene.Scene;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+public class DataUrlWithModuleLayer extends Application {\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        Module module = Application.class.getModule();\n+\n+        if (module != null) {\n+            ModuleDescriptor moduleDesc = module.getDescriptor();\n+\n+            System.out.println(\"==========================================================================\");\n+            System.out.println(\"==\");\n+            System.out.printf(\"== Module is named:  %b%n\", module.isNamed());\n+            System.out.printf(\"== Module name:      %s%n\", module.getName());\n+\n+            if (moduleDesc != null) {\n+                System.out.printf(\"== Automatic module: %b%n\", moduleDesc.isAutomatic());\n+                System.out.printf(\"== Module is opened: %b%n\", moduleDesc.isOpen());\n+            }\n+            System.out.println(\"==\");\n+            System.out.println(\"==========================================================================\");\n+        }\n+\n+        BorderPane root = new BorderPane();\n+        Scene scene = new Scene(root);\n+\n+        WebView webview = new WebView();\n+        root.setCenter(webview);\n+\n+        \/\/ Data URL is green tick taken from\n+        \/\/ https:\/\/en.m.wikibooks.org\/wiki\/File:Tick_green_modern.svg\n+        \/\/ The image was released into the public domain\n+        String script = \"<html>\"\n+            + \"<body>\"\n+            + \"<h1>Test for loading a data URL<\/h1>\"\n+            + \"<p>The test is successful, if a green tick is displayed below and the JVM does not crash with a segfault.<\/p>\"\n+            + \"<img src=\\\"data:image\/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!-- Generator: Adobe Illustrator 12.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 51448) --%3E%3C!DOCTYPE svg PUBLIC '-\/\/W3C\/\/DTD SVG 1.1\/\/EN' 'http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd' %5B %3C!ENTITY ns_svg 'http:\/\/www.w3.org\/2000\/svg'%3E%3C!ENTITY ns_xlink 'http:\/\/www.w3.org\/1999\/xlink'%3E%0A%5D%3E%3Csvg version='1.1' id='Layer_1' xmlns='&ns_svg;' xmlns:xlink='&ns_xlink;' width='364.167' height='318.333' viewBox='0 0 364.167 318.333' overflow='visible' enable-background='new 0 0 364.167 318.333' xml:space='preserve'%3E%3Cfilter id='AI_GaussianBlur_4'%3E%3CfeGaussianBlur stdDeviation='4'%3E%3C\/feGaussianBlur%3E%3C\/filter%3E%3Cg%3E%3Cg%3E%3ClinearGradient id='XMLID_65_' gradientUnits='userSpaceOnUse' x1='20.8413' y1='160.2158' x2='338.6797' y2='160.2158'%3E%3Cstop offset='0' style='stop-color:%235C6470'\/%3E%3Cstop offset='1' style='stop-color:%23797F8D'\/%3E%3C\/linearGradient%3E%3Cpath fill='url(%23XMLID_65_)' filter='url(%23AI_GaussianBlur_4)' d='M279.594,15.998c-1.821,0.246-3.521,1.213-4.615,2.717 c0,0-123.926,167.272-132.245,178.522c-9.5-8.416-65.03-57.29-65.03-57.29c-1.395-1.223-3.24-1.846-5.098-1.684 c-1.846,0.138-3.563,1.04-4.744,2.464L22.4,196.163c-2.393,2.92-1.986,7.214,0.913,9.618l110.188,92.295 c3.994,4.036,9.931,6.44,16.231,6.418c6.225,0.042,12.162-2.362,16.637-6.827c0.677-0.773,171.14-230.113,171.14-230.113 c2.203-2.983,1.126-7.546-1.803-9.853l-50.938-40.275C283.324,16.267,281.442,15.751,279.594,15.998z M144.525,214.134 c1.912-0.195,3.649-1.183,4.777-2.728c0,0,124.518-168.068,132.493-178.802c23.026,18.356,34.801,27.651,40.631,32.182 c-7.709,10.36-166.415,223.93-166.415,223.93c-1.181,1.074-3.619,2.061-6.248,2.038c-2.737,0-5.185-0.988-7.01-2.812 c-0.376-0.365-83.749-70.182-105.412-88.322c6.28-7.685,30.056-36.675,36.637-44.662c9.125,8.052,65.287,57.521,65.287,57.521 C140.693,213.725,142.593,214.348,144.525,214.134z'\/%3E%3ClinearGradient id='XMLID_66_' gradientUnits='userSpaceOnUse' x1='178.3188' y1='19.8276' x2='178.3188' y2='269.0803'%3E%3Cstop offset='0' style='stop-color:%236ABD45'\/%3E%3Cstop offset='0.6685' style='stop-color:%2306AD4D'\/%3E%3Cstop offset='1' style='stop-color:%23055448'\/%3E%3C\/linearGradient%3E%3Cpath fill='url(%23XMLID_66_)' d='M277.949,13.479l-3.35,4.491L143.842,194.424l-0.965,0.528l-1.017-0.339l-68.624-60.441 l-43.14,52.561l108.058,90.533c2.562,2.562,6.376,4.111,10.497,4.111l9.81-3.413c0.711-0.783,164.943-221.761,164.943-221.761 l3.137-4.226L277.949,13.479z'\/%3E%3ClinearGradient id='XMLID_67_' gradientUnits='userSpaceOnUse' x1='121.9199' y1='-31.5498' x2='192.1555' y2='164.109'%3E%3Cstop offset='0' style='stop-color:%236ABD45'\/%3E%3Cstop offset='0.6348' style='stop-color:%2306AD4D'\/%3E%3Cstop offset='0.7442' style='stop-color:%230C864E'\/%3E%3Cstop offset='0.8524' style='stop-color:%23096A4C'\/%3E%3Cstop offset='0.9414' style='stop-color:%23045A49'\/%3E%3Cstop offset='1' style='stop-color:%23055448'\/%3E%3C\/linearGradient%3E%3Cpath fill='url(%23XMLID_67_)' d='M275.201,6.393c-1.797,0.243-3.475,1.196-4.555,2.679c0,0-122.301,165.075-130.511,176.177 c-9.376-8.306-64.178-56.532-64.178-56.532c-1.376-1.208-3.198-1.822-5.031-1.664c-1.822,0.138-3.517,1.028-4.681,2.431 l-44.866,54.706c-2.361,2.881-1.96,7.119,0.901,9.492l108.743,91.085c3.941,3.982,9.801,6.355,16.019,6.334 c6.144,0.042,12.003-2.331,16.419-6.738c0.668-0.763,168.896-227.088,168.896-227.088c2.174-2.946,1.111-7.449-1.779-9.726 L280.309,7.8C278.883,6.656,277.025,6.147,275.201,6.393z M141.904,201.924c1.887-0.192,3.602-1.167,4.715-2.692 c0,0,122.885-165.858,130.756-176.452c22.725,18.114,34.344,27.289,40.098,31.758c-7.607,10.224-164.233,220.99-164.233,220.99 c-1.166,1.059-3.571,2.033-6.166,2.011c-2.701,0-5.116-0.975-6.918-2.774c-0.371-0.361-82.651-69.262-104.03-87.164 c6.198-7.585,29.662-36.188,36.157-44.069c9.005,7.944,64.431,56.759,64.431,56.759 C138.122,201.521,139.997,202.136,141.904,201.924z'\/%3E%3C\/g%3E%3Crect fill='none' width='364.167' height='318.333'\/%3E%3C\/g%3E%3C\/svg%3E%0A\\\"\/>\"\n+            + \"<\/body>\"\n+            + \"<\/html>\";\n+\n+        webview.getEngine().loadContent(script);\n+\n+        primaryStage.setScene(scene);\n+        primaryStage.setWidth(1024);\n+        primaryStage.setHeight(768);\n+        primaryStage.show();\n+    }\n+}\n","filename":"tests\/manual\/web\/dataurl\/src\/main\/java\/dataurl\/module\/DataUrlWithModuleLayer.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+package dataurl.module;\n+\n+import java.io.File;\n+import java.lang.module.Configuration;\n+import java.lang.module.ModuleFinder;\n+import java.lang.reflect.Method;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+\n+public class DataUrlWithModuleLayerLauncher {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        System.setProperty(\"javafx.verbose\", \"true\");\n+\n+        \/*\n+         * Setup a module layer for OpenJFX and the test class\n+         *\/\n+\n+        \/\/ Hack to get the classes of this programm into a module layer\n+        Path selfPath = Paths.get(DataUrlWithModuleLayerLauncher.class.getProtectionDomain().getCodeSource().getLocation().toURI());\n+        Path publications = Paths.get(\"..\/..\/..\/..\/build\/publications\");\n+        ModuleFinder finder = ModuleFinder.of(\n+            publications,\n+            selfPath\n+        );\n+\n+        \/*\n+         * Load the application as a named module and invoke it\n+         *\/\n+        ModuleLayer parent = ModuleLayer.boot();\n+        Configuration cf = parent.configuration().resolve(finder, ModuleFinder.of(), Set.of(\"DataUrlWithModule\"));\n+        ClassLoader scl = ClassLoader.getSystemClassLoader();\n+        ModuleLayer layer = parent.defineModulesWithOneLoader(cf, scl);\n+        ClassLoader moduleClassLoader = layer.findLoader(\"DataUrlWithModule\");\n+        Class appClass = moduleClassLoader.loadClass(\"javafx.application.Application\");\n+        Class testClass = moduleClassLoader.loadClass(\"dataurl.module.DataUrlWithModuleLayer\");\n+        Method launchMethod = appClass.getMethod(\"launch\", Class.class, String[].class);\n+        launchMethod.invoke(null, new Object[]{testClass, args});\n+    }\n+}\n","filename":"tests\/manual\/web\/dataurl\/src\/main\/java\/dataurl\/module\/DataUrlWithModuleLayerLauncher.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+\n+\n+module DataUrlWithModule {\n+    requires javafx.controls;\n+    requires javafx.media;\n+    requires javafx.web;\n+    requires javafx.graphics;\n+    requires javafx.base;\n+    exports dataurl.module;\n+}\n","filename":"tests\/manual\/web\/dataurl\/src\/main\/java\/module-info.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"}]}