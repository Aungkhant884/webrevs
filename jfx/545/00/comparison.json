{"files":[{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/FXSlideShow\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/FXSlideShow\/src\" isTestSource=\"false\" \/>\n-      <excludeFolder url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/FXSlideShow\/nbproject\" \/>\n-    <\/content>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"rt\" \/>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-  <\/component>\n-<\/module>\n-\n","filename":".idea\/FXSlideShow.iml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/apps\/performance\/GraphicsPerformance\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/apps\/performance\/GraphicsPerformance\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/apps\/performance\/GraphicsPerformance\/src\/main\/resources\" isTestSource=\"false\" \/>\n-    <\/content>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"rt\" \/>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-  <\/component>\n-<\/module>\n-\n","filename":".idea\/GraphicsPerformance.iml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/Shape3DToy\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/Shape3DToy\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/Shape3DToy\/src\/main\/resources\" isTestSource=\"false\" \/>\n-    <\/content>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"rt\" \/>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-  <\/component>\n-<\/module>\n-\n","filename":".idea\/Shape3DToy.iml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,13 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/StretchyGrid\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/apps\/toys\/StretchyGrid\/src\/main\/java\" isTestSource=\"false\" \/>\n-    <\/content>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"rt\" \/>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-  <\/component>\n-<\/module>\n-\n","filename":".idea\/StretchyGrid.iml","additions":0,"deletions":13,"binary":false,"changes":13,"status":"deleted"},{"patch":"@@ -8,2 +8,0 @@\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/.idea\/FXSlideShow.iml\" filepath=\"$PROJECT_DIR$\/.idea\/FXSlideShow.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/.idea\/GraphicsPerformance.iml\" filepath=\"$PROJECT_DIR$\/.idea\/GraphicsPerformance.iml\" \/>\n@@ -13,2 +11,0 @@\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/.idea\/Shape3DToy.iml\" filepath=\"$PROJECT_DIR$\/.idea\/Shape3DToy.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/.idea\/StretchyGrid.iml\" filepath=\"$PROJECT_DIR$\/.idea\/StretchyGrid.iml\" \/>\n","filename":".idea\/modules.xml","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,0 @@\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/tests\/performance\/VMPerformance\/src\" isTestSource=\"false\" \/>\n@@ -17,1 +16,1 @@\n-<\/module>\n\\ No newline at end of file\n+<\/module>\n","filename":".idea\/tests.iml","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -11,1 +11,0 @@\n-        <ant dir=\"performance\" target=\"jar\" inheritAll=\"true\"\/>\n@@ -18,1 +17,0 @@\n-        <ant dir=\"performance\" target=\"clean\" inheritAll=\"true\"\/>\n","filename":"apps\/build.xml","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,61 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package animations;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.TranslateTransition;\n-import javafx.application.Application;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-\/** User: rbair Date: 5\/31\/13 Time: 2:06 PM *\/\n-public class TranslatedRectangle extends Application {\n-\n-    @Override public void start(Stage primaryStage) throws Exception {\n-        Rectangle r = new Rectangle(100, 100);\n-        Group root = new Group(r);\n-        Scene scene = new Scene(root, 800, 600);\n-        primaryStage.setScene(scene);\n-        primaryStage.show();\n-\n-        TranslateTransition tx = new TranslateTransition(Duration.seconds(5), r);\n-        tx.setInterpolator(Interpolator.LINEAR); \/\/ So as to make any Jitter obvious\n-        tx.setFromX(0);\n-        tx.setFromY(250);\n-        tx.setToX(700);\n-        tx.setToY(250);\n-        tx.setCycleCount(TranslateTransition.INDEFINITE);\n-        tx.setAutoReverse(true);\n-        tx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/Animations\/src\/animations\/TranslatedRectangle.java","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-apply plugin: \"java\"\n\\ No newline at end of file\n","filename":"apps\/performance\/GraphicsPerformance\/build.gradle","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,149 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.animation.Animation;\n-import javafx.animation.AnimationTimer;\n-import javafx.application.Application;\n-import javafx.application.Platform;\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n-import javafx.scene.Group;\n-import javafx.scene.Node;\n-import javafx.scene.Scene;\n-import javafx.stage.Stage;\n-import com.sun.javafx.perf.PerformanceTracker;\n-\n-\/**\n- *\/\n-public abstract class BenchBase<T extends Node> extends Application {\n-    protected Animation driver;\n-    private BenchTest currentTest;\n-\n-    @Override\n-    public void start(Stage stage) throws Exception {\n-        Scene scene = new Scene(new Group(), 1024, 768);\n-        stage.setScene(scene);\n-        stage.show();\n-\n-        final PerformanceTracker tracker = PerformanceTracker.getSceneTracker(scene);\n-        AnimationTimer fpsTimer = new AnimationTimer() {\n-            long lastReset;\n-            @Override\n-            public void handle(long now) {\n-                if (now - lastReset > 5000 * 1000000) {\n-                    float fps = tracker.getAverageFPS();\n-                    if (currentTest != null) {\n-                        currentTest.maxFPS = Math.max(currentTest.maxFPS, fps);\n-                    }\n-                    tracker.resetAverageFPS();\n-                    lastReset = now;\n-                }\n-            }\n-        };\n-        fpsTimer.start();\n-\n-        BenchTest[] tests = createTests();\n-        runTest(scene, tests, 0);\n-    }\n-\n-    protected BenchTest[] createTests() {\n-        int[][] sizes = new int[][] {\n-                {8, 8},\n-                {10, 10},\n-                {14, 14},\n-                {20, 20},\n-                {40, 40},\n-                {60, 60},\n-        };\n-        BenchTest[] tests = new BenchTest[3 * 6];\n-        int sizeIndex = 0;\n-        for (int i=0; i<tests.length; i+=3) {\n-            int rows = sizes[sizeIndex][0];\n-            int cols = sizes[sizeIndex][1];\n-            tests[i] = new SimpleGrid(this, rows, cols);\n-            tests[i+1] = new PixelGrid(this, rows, cols);\n-            tests[i+2] = new RotatingGrid(this, rows, cols);\n-            sizeIndex++;\n-        }\n-        return tests;\n-    }\n-\n-    protected void printResults(BenchTest[] tests) {\n-        for (int i=0; i<tests.length; i+=3) {\n-            \/\/ There are 3 types of tests involved, all at different pixel sizes\n-            int nodeCount = tests[i].getNodeCount();\n-            assert nodeCount == tests[i+1].getNodeCount() && nodeCount == tests[i+2].getNodeCount();\n-            System.out.print(nodeCount + \"\\t\");\n-            System.out.print(tests[i].getMaxFPS() + \"\\t\");\n-            System.out.print(tests[i+1].getMaxFPS() + \"\\t\");\n-            System.out.println(tests[i+2].getMaxFPS() + \"\\t\");\n-        }\n-    }\n-\n-    protected abstract void resizeAndRelocate(T node, double x, double y, double width, double height);\n-\n-    protected abstract T createNode();\n-\n-    private void runTest(Scene scene, BenchTest[] tests, int index) {\n-        if (index >= tests.length) {\n-            printResults(tests);\n-            Platform.exit();\n-            return; \/\/ we're done.\n-        }\n-\n-        if (currentTest != null) {\n-            currentTest.tearDown();\n-        }\n-\n-        currentTest = tests[index];\n-        tests[index].setup(scene);\n-        driver = tests[index].createBenchmarkDriver(scene);\n-        driver.play();\n-        driver.setOnFinished(new EventHandler<ActionEvent>() {\n-            @Override\n-            public void handle(ActionEvent event) {\n-                runTest(scene, tests, index+1);\n-            }\n-        });\n-        System.out.println(\"Starting test: \" + currentTest);\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n-\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/BenchBase.java","additions":0,"deletions":149,"binary":false,"changes":149,"status":"deleted"},{"patch":"@@ -1,119 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.animation.Animation;\n-import javafx.animation.FillTransition;\n-import javafx.scene.Node;\n-import javafx.scene.Scene;\n-import javafx.scene.layout.Pane;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.util.Duration;\n-\n-\/**\n- *\/\n-public abstract class BenchTest {\n-    public static final int GAP = 6;\n-\n-    double maxFPS;\n-    private final BenchBase benchmark;\n-    private final int rows, cols;\n-    private final boolean pixelSnap;\n-\n-    public BenchTest(BenchBase benchmark, int rows, int cols, boolean pixelSnap) {\n-        this.benchmark = benchmark;\n-        this.rows = rows;\n-        this.cols = cols;\n-        this.pixelSnap = pixelSnap;\n-    }\n-\n-    public double getMaxFPS() { return maxFPS; }\n-\n-    public int getNodeCount() {\n-        return rows * cols;\n-    }\n-\n-    public int getCols() { return cols; }\n-    public int getRows() { return rows; }\n-\n-    protected Animation createBenchmarkDriver(Scene scene) {\n-        Rectangle background = (Rectangle) scene.getRoot().getChildrenUnmodifiable().get(0);\n-        FillTransition t = new FillTransition(Duration.seconds(5), background, Color.WHITE, Color.BLACK);\n-        t.setAutoReverse(true);\n-        t.setCycleCount(2);\n-        return t;\n-    }\n-\n-    public void setup(Scene scene) {\n-        final Rectangle background = new Rectangle();\n-        final Node[][] nodes = new Node[rows][cols];\n-        final Pane root = new Pane() {\n-            @Override protected void layoutChildren() {\n-                background.setWidth(getWidth());\n-                background.setHeight(getHeight());\n-                double rectWidth = (getWidth() - ((cols-1) * GAP)) \/ cols;\n-                double rectHeight = (getHeight() - ((rows-1) * GAP)) \/ rows;\n-                for (int r=0; r<rows; r++) {\n-                    for (int c=0; c<cols; c++) {\n-                        double x = c * (GAP + rectWidth);\n-                        double y = r * (GAP + rectHeight);\n-                        Node n = nodes[r][c];\n-                        benchmark.resizeAndRelocate(n,\n-                                pixelSnap ? (int) x : x,\n-                                pixelSnap ? (int) y : y,\n-                                pixelSnap ? (int) rectWidth : rectWidth,\n-                                pixelSnap ? (int) rectHeight : rectHeight);\n-                    }\n-                }\n-            }\n-        };\n-        root.getChildren().add(background);\n-\n-        for (int r=0; r<rows; r++) {\n-            for (int c=0; c<cols; c++) {\n-                Node node = benchmark.createNode();\n-                nodes[r][c] = node;\n-                root.getChildren().add(node);\n-            }\n-        }\n-\n-        scene.setRoot(root);\n-    }\n-\n-    public void tearDown() { }\n-\n-    @Override public String toString() {\n-        return getClass().getSimpleName() + \" \" + rows + \"x\" + cols;\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/BenchTest.java","additions":0,"deletions":119,"binary":false,"changes":119,"status":"deleted"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.scene.control.Button;\n-\n-\/**\n- *\/\n-public class ButtonBench extends BenchBase<Button> {\n-\n-    @Override\n-    protected void resizeAndRelocate(Button button, double x, double y, double width, double height) {\n-        button.resizeRelocate(x, y, width, height);\n-    }\n-\n-    @Override\n-    protected Button createNode() {\n-        return new Button();\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/ButtonBench.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.scene.control.Button;\n-\n-\/**\n- * Buttons rendered with a flat fill\n- *\/\n-public class FlatButtonBench extends ButtonBench {\n-\/*\n-    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border, -fx-inner-border, -fx-body-color;\n-    -fx-background-insets: 0 0 -1 0, 0, 1, 2;\n-    -fx-background-radius: 3px, 3px, 2px, 1px;\n-    -fx-padding: 0.333333em 0.666667em 0.333333em 0.666667em;\n-    -fx-text-fill: -fx-text-base-color;\n-    -fx-alignment: CENTER;\n-    -fx-content-display: LEFT;\n-\n- *\/\n-\n-\n-    @Override\n-    protected Button createNode() {\n-        Button button = super.createNode();\n-        button.setStyle(\n-                \"-fx-background-color: BLACK, DARKGRAY, LIGHTGRAY, CORNFLOWERBLUE;\" +\n-                \"-fx-background-insets: 0 0 -1 0, 0, 1, 2;\" +\n-                \"-fx-background-radius: 3px, 3px, 2px, 1px;\" +\n-                \"-fx-padding: 0.33333em 0.666667em 0.333333em 0.6666667em;\" +\n-                \"-fx-text-fill: white;\" +\n-                \"-fx-alignment: CENTER;\" +\n-                \"-fx-content-display: LEFT;\");\n-        return button;\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/FlatButtonBench.java","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.scene.image.Image;\n-import javafx.scene.image.ImageView;\n-\n-\/**\n- *\/\n-public class ImageBench extends BenchBase<ImageView> {\n-    Image image = new Image(ImageBench.class.getResource(\"Duke_Wave_Opaque.png\").toExternalForm());\n-\n-    @Override protected void resizeAndRelocate(ImageView i, double x, double y, double width, double height) {\n-        i.setX(x);\n-        i.setY(y);\n-        i.setFitWidth(width);\n-        i.setFitHeight(height);\n-    }\n-\n-    @Override protected ImageView createNode() {\n-        ImageView i = new ImageView();\n-        i.setImage(image);\n-        return i;\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/ImageBench.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-\/**\n- *\/\n-public class PixelGrid extends BenchTest {\n-    public PixelGrid(BenchBase benchmark, int rows, int cols) {\n-        super(benchmark, rows, cols, true);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/PixelGrid.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -1,61 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-\n-\/**\n- *\/\n-public class RectBench extends BenchBase<Rectangle> {\n-\n-    @Override protected void resizeAndRelocate(Rectangle rect, double x, double y, double width, double height) {\n-        rect.setX(x);\n-        rect.setY(y);\n-        rect.setWidth(width);\n-        rect.setHeight(height);\n-    }\n-\n-    @Override protected Rectangle createNode() {\n-        Rectangle rect = new Rectangle();\n-        rect.setFill(new Color(Math.random(), Math.random(), Math.random(), 1));\n-        return rect;\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/RectBench.java","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-import javafx.animation.ParallelTransition;\n-import javafx.animation.RotateTransition;\n-import javafx.scene.Node;\n-import javafx.scene.Scene;\n-import javafx.util.Duration;\n-import java.util.List;\n-\n-\/**\n- *\/\n-public class RotatingGrid extends BenchTest {\n-    private ParallelTransition tx;\n-\n-    public RotatingGrid(BenchBase benchmark, int rows, int cols) {\n-        super(benchmark, rows, cols, false);\n-    }\n-\n-    @Override public void setup(Scene scene) {\n-        super.setup(scene);\n-        List<Node> children = scene.getRoot().getChildrenUnmodifiable();\n-        tx = new ParallelTransition();\n-        for (int i=1; i<children.size(); i++) {\n-            Node n = children.get(i);\n-            RotateTransition rot = new RotateTransition(Duration.seconds(5), n);\n-            rot.setToAngle(360);\n-            tx.getChildren().add(rot);\n-        }\n-        tx.setCycleCount(ParallelTransition.INDEFINITE);\n-        tx.play();\n-    }\n-\n-    @Override public void tearDown() {\n-        tx.stop();\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/RotatingGrid.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package nodecount;\n-\n-\/**\n- *\/\n-public class SimpleGrid extends BenchTest {\n-    public SimpleGrid(BenchBase benchmark, int rows, int cols) {\n-        super(benchmark, rows, cols, false);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/nodecount\/SimpleGrid.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -1,132 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package preloader;\n-\n-import javafx.application.Preloader;\n-import javafx.geometry.Pos;\n-import javafx.scene.Scene;\n-import javafx.scene.control.Label;\n-import javafx.scene.control.ProgressBar;\n-import javafx.scene.layout.VBox;\n-import javafx.scene.paint.Color;\n-import javafx.stage.Stage;\n-\n-\/**\n- *\n- *\/\n-public class PreloaderApp extends Preloader {\n-    private ProgressBar progressBar;\n-    private Label label;\n-    private Stage stage;\n-    private VBox root;\n-\n-    @Override\n-    public void init() throws Exception {\n-        System.out.println(\"Preloader init: \" + Thread.currentThread());\n-        progressBar = new ProgressBar();\n-        label = new Label();\n-\n-        root = new VBox(progressBar, label);\n-        root.setAlignment(Pos.CENTER);\n-        root.setSpacing(7);\n-        root.setBackground(null);\n-    }\n-\n-    @Override\n-    public void start(Stage stage) throws Exception {\n-        Scene scene = new Scene(root, Color.BLACK);\n-        stage.setScene(scene);\n-        stage.show();\n-        this.stage = stage;\n-        System.out.println(\"Preloader start: \" + Thread.currentThread());\n-    }\n-\n-    \/**\n-     * Indicates progress.\n-     *\n-     * <p>\n-     * The implementation of this method provided by the Preloader class\n-     * does nothing.\n-     * <\/p>\n-     *\n-     * @param info the progress notification\n-     *\/\n-    public void handleProgressNotification(ProgressNotification info) {\n-\/\/        progressBar.setProgress(info.getProgress());\n-    }\n-\n-    \/**\n-     * Indicates a change in application state.\n-     *\n-     * <p>\n-     * The implementation of this method provided by the Preloader class\n-     * does nothing.\n-     * <\/p>\n-     *\n-     * @param info the state change notification\n-     *\/\n-    public void handleStateChangeNotification(StateChangeNotification info) {\n-        switch(info.getType()) {\n-            case BEFORE_INIT:\n-                break;\n-            case BEFORE_LOAD:\n-                break;\n-            case BEFORE_START:\n-                ((SlowStartingApp)info.getApplication()).preloaderApp = stage;\n-                break;\n-        }\n-    }\n-\n-    \/**\n-     * Indicates an application-generated notification.\n-     * Application should not call this method directly, but should use\n-     * notifyCurrentPreloader() instead to avoid mixed code dialog issues.\n-     *\n-     * <p>\n-     * The implementation of this method provided by the Preloader class\n-     * does nothing.\n-     * <\/p>\n-     *\n-     * @param info the application-generated notification\n-     *\/\n-    public void handleApplicationNotification(PreloaderNotification info) {\n-        label.setText(info.toString());\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/preloader\/PreloaderApp.java","additions":0,"deletions":132,"binary":false,"changes":132,"status":"deleted"},{"patch":"@@ -1,100 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package preloader;\n-\n-import javafx.application.Application;\n-import javafx.collections.FXCollections;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Scene;\n-import javafx.scene.control.ListCell;\n-import javafx.scene.control.ListView;\n-import javafx.scene.layout.Background;\n-import javafx.scene.layout.BackgroundFill;\n-import javafx.scene.paint.Color;\n-import javafx.stage.Stage;\n-import javafx.util.Callback;\n-\n-\/**\n- * This app is meant to be used with a preloader. Run with:\n- * -Djavafx.preloader=preloader.PreloaderApp\n- *\n- * This will run with the preloader on desktop and iOS.\n- *\/\n-public class SlowStartingApp extends Application {\n-    private ListView<Background> list;\n-    public Stage preloaderApp;\n-\n-    @Override\n-    public void init() throws Exception {\n-        System.out.println(\"App init: \" + Thread.currentThread());\n-        ObservableList<Background> data = FXCollections.observableArrayList();\n-        for (int i=0; i<100; i++) {\n-            data.add(new Background(new BackgroundFill(\n-                    new Color(Math.random(), Math.random(), Math.random(), 1), null, null)));\n-        }\n-        list = new ListView<>(data);\n-        list.setCellFactory(new Callback<ListView<Background>, ListCell<Background>>() {\n-            @Override\n-            public ListCell<Background> call(ListView<Background> param) {\n-                ListCell<Background> cell = new ListCell<Background>() {\n-                    @Override\n-                    protected void updateItem(Background item, boolean empty) {\n-                        super.updateItem(item, empty);\n-                        if (!empty) {\n-                            setBackground(item);\n-                        }\n-                    }\n-                };\n-                cell.setPrefHeight(100);\n-                return cell;\n-            }\n-        });\n-        System.out.println(\"Simulating a really slow startup\");\n-        Thread.sleep(10000);\n-    }\n-\n-    @Override\n-    public void start(Stage stage) throws Exception {\n-        System.out.println(\"App start: \" + Thread.currentThread());\n-        Scene scene = new Scene(list);\n-        stage.setScene(scene);\n-        stage.show();\n-        preloaderApp.close();\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/preloader\/SlowStartingApp.java","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -1,65 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package scrolling;\n-\n-import javafx.animation.Animation;\n-import javafx.animation.KeyFrame;\n-import javafx.animation.KeyValue;\n-import javafx.animation.Timeline;\n-import javafx.beans.property.IntegerProperty;\n-import javafx.beans.property.SimpleIntegerProperty;\n-import javafx.scene.Parent;\n-import javafx.scene.Scene;\n-import javafx.util.Duration;\n-\n-\/**\n- * Translates a grid of items, but does so on pixel boundaries only.\n- *\/\n-public class PixelAlignedTranslatingGridTest extends TranslatingGridTest {\n-    PixelAlignedTranslatingGridTest(ScrollingBenchBase benchmark, int rows, int cols) {\n-        super(benchmark, rows, cols);\n-    }\n-\n-    \/\/ For each test, we need to start our timeline which will scroll stuff...\n-    @Override protected Animation createBenchmarkDriver(Scene scene) {\n-        final Parent root = (Parent) scene.getRoot().getChildrenUnmodifiable().get(0);\n-        final IntegerProperty translation = new SimpleIntegerProperty();\n-        root.translateYProperty().bind(translation);\n-        Timeline t = new Timeline(\n-                new KeyFrame(Duration.seconds(0), new KeyValue(translation, 0)),\n-                new KeyFrame(Duration.seconds(3), new KeyValue(translation, scene.getHeight()-height)));\n-        t.setAutoReverse(true);\n-        t.setCycleCount(2);\n-        return t;\n-    }\n-}\n\\ No newline at end of file\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/scrolling\/PixelAlignedTranslatingGridTest.java","additions":0,"deletions":65,"binary":false,"changes":65,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package scrolling;\n-\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-\n-\/**\n- *\/\n-public class RectScrollingBench extends ScrollingBenchBase<Rectangle> {\n-    @Override protected void resizeAndRelocate(Rectangle rect, double x, double y, double width, double height) {\n-        rect.setX(x);\n-        rect.setY(y);\n-        rect.setWidth(width);\n-        rect.setHeight(height);\n-    }\n-\n-    @Override protected Rectangle createNode() {\n-        Rectangle rect = new Rectangle();\n-        rect.setFill(new Color(Math.random(), Math.random(), Math.random(), 1));\n-        return rect;\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/scrolling\/RectScrollingBench.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -1,116 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package scrolling;\n-\n-import javafx.animation.Animation;\n-import javafx.animation.KeyFrame;\n-import javafx.animation.KeyValue;\n-import javafx.animation.Timeline;\n-import javafx.beans.InvalidationListener;\n-import javafx.beans.Observable;\n-import javafx.beans.property.IntegerProperty;\n-import javafx.beans.property.SimpleIntegerProperty;\n-import javafx.scene.Scene;\n-import javafx.scene.control.ScrollPane;\n-import javafx.scene.layout.Pane;\n-import javafx.util.Duration;\n-import nodecount.BenchTest;\n-\n-\/**\n- * Uses a ScrollPane for scrolling a grid of items, using \"pure\" fractional\n- * positions.\n- *\/\n-public class ScrollPaneGridTest extends BenchTest {\n-    ScrollPaneGridTest(ScrollingBenchBase benchmark, int rows, int cols) {\n-        \/\/ Pixel snap the grid itself, always, so we know we are measuring\n-        \/\/ the effect of translating fractionally, and not the cost of having\n-        \/\/ nodes on fractional boundaries inherently.\n-        super(benchmark, rows, cols, true);\n-    }\n-\n-    \/\/ For each test, we need to start our timeline which will scroll stuff...\n-    @Override protected Animation createBenchmarkDriver(Scene scene) {\n-        final ScrollPane root = (ScrollPane) scene.getRoot();\n-        final IntegerProperty vpos = new SimpleIntegerProperty() {\n-            @Override\n-            public void set(int newValue) {\n-                super.set(newValue);\n-                root.setVvalue(newValue);\n-            }\n-        };\n-        Timeline t = new Timeline(\n-                new KeyFrame(Duration.seconds(0), new KeyValue(vpos, 0)),\n-                new KeyFrame(Duration.seconds(3), new KeyValue(vpos, root.getVmax())));\n-        t.setAutoReverse(true);\n-        t.setCycleCount(2);\n-\n-        \/\/ Uncomment to see that the scroll pane is in fact pixel snapping already!\n-\/\/        final InvalidationListener layoutListener = new InvalidationListener() {\n-\/\/            @Override\n-\/\/            public void invalidated(Observable observable) {\n-\/\/                System.out.println(root.getContent().getParent().getLayoutY());\n-\/\/            }\n-\/\/        };\n-\/\/        root.getContent().parentProperty().addListener(new ChangeListener<Parent>() {\n-\/\/            @Override\n-\/\/            public void changed(ObservableValue<? extends Parent> observable, Parent oldValue, Parent newValue) {\n-\/\/                if (oldValue != null) oldValue.layoutYProperty().removeListener(layoutListener);\n-\/\/                if (newValue != null) newValue.layoutYProperty().addListener(layoutListener);\n-\/\/            }\n-\/\/        });\n-\n-        return t;\n-    }\n-\n-    @Override\n-    public void setup(Scene scene) {\n-        super.setup(scene);\n-\n-        \/\/ Wrap in a ScrollPane\n-        double side = ((scene.getWidth() + GAP) \/ getCols()) - GAP;\n-        double height = (side * getRows()) + (GAP * (getRows() - 1));\n-        final Pane pane = (Pane) scene.getRoot();\n-        final ScrollPane sp = new ScrollPane(pane);\n-        sp.setFitToWidth(true);\n-        sp.heightProperty().addListener(new InvalidationListener() {\n-            @Override\n-            public void invalidated(Observable observable) {\n-                pane.setPrefHeight(height);\n-                sp.setVmin(0);\n-                sp.setVmax(pane.getPrefHeight());\n-            }\n-        });\n-\/\/        pane.resize(scene.getWidth(), height);\n-        scene.setRoot(sp);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/scrolling\/ScrollPaneGridTest.java","additions":0,"deletions":116,"binary":false,"changes":116,"status":"deleted"},{"patch":"@@ -1,66 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package scrolling;\n-\n-import javafx.scene.Node;\n-import nodecount.BenchBase;\n-import nodecount.BenchTest;\n-\n-\/**\n- * A type of grid-based test which scrolls in one dimension. The scrolling parent\n- * might be a Group with a translation, or a ScrollPane.\n- *\/\n-public abstract class ScrollingBenchBase<T extends Node> extends BenchBase<T> {\n-\n-    @Override protected BenchTest[] createTests() {\n-        int[][] sizes = new int[][] {\n-                {30, 6},\n-                {50, 6},\n-                {100, 6},\n-                {120, 6},\n-                {180, 6},\n-                {200, 6},\n-        };\n-        BenchTest[] tests = new BenchTest[3 * 6];\n-        int sizeIndex = 0;\n-        for (int i=0; i<tests.length; i+=3) {\n-            int rows = sizes[sizeIndex][0];\n-            int cols = sizes[sizeIndex][1];\n-            tests[i] = new TranslatingGridTest(this, rows, cols); \/\/ Causing all rects to be drawn? Grows with each iteration!\n-            tests[i+1] = new ScrollPaneGridTest(this, rows, cols); \/\/ Very few rects drawn\n-            tests[i+2] = new PixelAlignedTranslatingGridTest(this, rows, cols); \/\/ causes all rects to be drawn at first and then only very few thereafter\n-            sizeIndex++;\n-        }\n-        return tests;\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/scrolling\/ScrollingBenchBase.java","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package scrolling;\n-\n-import javafx.animation.Animation;\n-import javafx.animation.KeyFrame;\n-import javafx.animation.KeyValue;\n-import javafx.animation.Timeline;\n-import javafx.scene.Parent;\n-import javafx.scene.Scene;\n-import javafx.scene.layout.Pane;\n-import javafx.scene.layout.StackPane;\n-import javafx.scene.shape.Rectangle;\n-import javafx.util.Duration;\n-import nodecount.BenchTest;\n-\n-\/**\n- * Translates a grid of items to their \"pure\" fractional positions.\n- *\/\n-public class TranslatingGridTest extends BenchTest {\n-    private Rectangle clip = new Rectangle();\n-    protected double height;\n-\n-    TranslatingGridTest(ScrollingBenchBase benchmark, int rows, int cols) {\n-        \/\/ Pixel snap the grid itself, always, so we know we are measuring\n-        \/\/ the effect of translating fractionally, and not the cost of having\n-        \/\/ nodes on fractional boundaries inherently.\n-        super(benchmark, rows, cols, true);\n-    }\n-\n-    \/\/ For each test, we need to start our timeline which will scroll stuff...\n-    @Override protected Animation createBenchmarkDriver(Scene scene) {\n-        final Parent root = (Parent) scene.getRoot().getChildrenUnmodifiable().get(0);\n-        Timeline t = new Timeline(\n-                new KeyFrame(Duration.seconds(0), new KeyValue(root.translateYProperty(), 0)),\n-                new KeyFrame(Duration.seconds(3), new KeyValue(root.translateYProperty(), scene.getHeight()-height)));\n-        t.setAutoReverse(true);\n-        t.setCycleCount(2);\n-        return t;\n-    }\n-\n-    @Override\n-    public void setup(Scene scene) {\n-        super.setup(scene);\n-\n-        double side = ((scene.getWidth() + GAP) \/ getCols()) - GAP;\n-        height = (side * getRows()) + (GAP * (getRows() - 1));\n-\n-        \/\/ Gotta handle layout so the old root pane is taller than the window but wide as the window\n-        final Pane pane = (Pane) scene.getRoot();\n-        Pane root = new Pane(pane) {\n-            @Override\n-            protected void layoutChildren() {\n-                pane.resize(getWidth(), height);\n-            }\n-        };\n-        pane.resize(scene.getWidth(), height);\n-        clip.widthProperty().bind(scene.widthProperty());\n-        clip.heightProperty().bind(scene.heightProperty());\n-        Pane p = new StackPane(root);\n-        p.setCache(true);\n-        p.setClip(clip);\n-        scene.setRoot(p);\n-    }\n-\n-    @Override\n-    public void tearDown() {\n-        super.tearDown();\n-        clip.widthProperty().unbind();\n-        clip.heightProperty().unbind();\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/scrolling\/TranslatingGridTest.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -1,66 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates.\n- * All rights reserved. Use is subject to license terms.\n- *\n- * This file is available and licensed under the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- *\n- *  - Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- *  - Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in\n- *    the documentation and\/or other materials provided with the distribution.\n- *  - Neither the name of Oracle Corporation nor the names of its\n- *    contributors may be used to endorse or promote products derived\n- *    from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n- * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-package startup;\n-\n-import javafx.application.Application;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.stage.Stage;\n-\n-\/**\n- * A very basic application for testing startup. You must make sure to have:\n- * -Dsun.perflog\n- * -Dsun.perflog.fx.firstpaintflush\n- *\n- * both specified so that you get the startup metrics. You may also want:\n- * -verbose:class\n- *\n- * to be able to see which classes are being loaded.\n- *\/\n-public class StartupApp extends Application {\n-\n-    @Override\n-    public void start(Stage stage) throws Exception {\n-        Scene scene = new Scene(new Group(), 320, 200, Color.PURPLE);\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    \/**\n-     * Java main for when running without JavaFX launcher\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n","filename":"apps\/performance\/GraphicsPerformance\/src\/main\/java\/startup\/StartupApp.java","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"filename":"apps\/performance\/GraphicsPerformance\/src\/main\/resources\/nodecount\/Duke_Wave_Opaque.png","binary":true,"status":"deleted"},{"patch":"@@ -1,18 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project default=\"jar\" basedir=\".\">\n-\n-    <target name=\"jar\">\n-        <!--\n-        <ant dir=\"GraphicsPerformance\" target=\"jar\" inheritAll=\"true\"\/>\n-        -->\n-    <\/target>\n-\n-    <target name=\"clean\">\n-        <!--\n-        <ant dir=\"GraphicsPerformance\" target=\"clean\" inheritAll=\"true\"\/>\n-        -->\n-    <\/target>\n-\n-<\/project>\n-\n-\n","filename":"apps\/performance\/build.xml","additions":0,"deletions":18,"binary":false,"changes":18,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n---add-exports=javafx.graphics\/com.sun.javafx.perf=ALL-UNNAMED \n---add-exports=javafx.graphics\/com.sun.glass.events=ALL-UNNAMED\n---add-exports=javafx.graphics\/com.sun.glass.ui=ALL-UNNAMED\n---add-exports=javafx.graphics\/com.sun.javafx.application=ALL-UNNAMED\n","filename":"apps\/tests\/HelloTest\/addExports","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!-- You may freely edit this file. See commented blocks below for -->\n-<!-- some examples of how to customize the build. -->\n-<!-- (If you delete it and reopen the project it will be recreated.) -->\n-<!-- By default, only the Clean and Build commands use this build script. -->\n-<!-- Commands such as Run, Debug, and Test only use this build script if -->\n-<!-- the Compile on Save feature is turned off for the project. -->\n-<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n-<!-- in the project's Project Properties dialog box.-->\n-<project name=\"HelloTest\" default=\"default\" basedir=\".\">\n-    <description>Builds, tests, and runs the project HelloTest.<\/description>\n-    <import file=\"nbproject\/build-impl.xml\"\/>\n-    <!--\n-\n-    There exist several targets which are by default empty and which can be \n-    used for execution of your tasks. These targets are usually executed \n-    before and after some main targets. They are: \n-\n-      -pre-init:                 called before initialization of project properties\n-      -post-init:                called after initialization of project properties\n-      -pre-compile:              called before javac compilation\n-      -post-compile:             called after javac compilation\n-      -pre-compile-single:       called before javac compilation of single file\n-      -post-compile-single:      called after javac compilation of single file\n-      -pre-compile-test:         called before javac compilation of JUnit tests\n-      -post-compile-test:        called after javac compilation of JUnit tests\n-      -pre-compile-test-single:  called before javac compilation of single JUnit test\n-      -post-compile-test-single: called after javac compilation of single JUunit test\n-      -pre-jar:                  called before JAR building\n-      -post-jar:                 called after JAR building\n-      -post-clean:               called after cleaning build products\n-\n-    (Targets beginning with '-' are not intended to be called on their own.)\n-\n-    Example of inserting an obfuscator after compilation could look like this:\n-\n-        <target name=\"-post-compile\">\n-            <obfuscate>\n-                <fileset dir=\"${build.classes.dir}\"\/>\n-            <\/obfuscate>\n-        <\/target>\n-\n-    For list of available properties check the imported \n-    nbproject\/build-impl.xml file. \n-\n-\n-    Another way to customize the build is by overriding existing main targets.\n-    The targets of interest are: \n-\n-      -init-macrodef-javac:     defines macro for javac compilation\n-      -init-macrodef-junit:     defines macro for junit execution\n-      -init-macrodef-debug:     defines macro for class debugging\n-      -init-macrodef-java:      defines macro for class execution\n-      -do-jar:                  JAR building\n-      run:                      execution of project \n-      -javadoc-build:           Javadoc generation\n-      test-report:              JUnit report generation\n-\n-    An example of overriding the target for project execution could look like this:\n-\n-        <target name=\"run\" depends=\"HelloTest-impl.jar\">\n-            <exec dir=\"bin\" executable=\"launcher.exe\">\n-                <arg file=\"${dist.jar}\"\/>\n-            <\/exec>\n-        <\/target>\n-\n-    Notice that the overridden target depends on the jar target and not only on \n-    the compile target as the regular run target does. Again, for a list of available \n-    properties which you can use, check the target you are overriding in the\n-    nbproject\/build-impl.xml file. \n-\n-    -->\n-<\/project>\n","filename":"apps\/tests\/HelloTest\/build.xml","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-Manifest-Version: 1.0\r\n-X-COMMENT: Main-Class will be added automatically by build\r\n-\r\n","filename":"apps\/tests\/HelloTest\/manifest.mf","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,1431 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\n-***         EDIT ..\/build.xml INSTEAD         ***\n-\n-For the purpose of easier reading the script\n-is divided into following sections:\n-\n-  - initialization\n-  - compilation\n-  - jar\n-  - execution\n-  - debugging\n-  - javadoc\n-  - test compilation\n-  - test execution\n-  - test debugging\n-  - applet\n-  - cleanup\n-\n-        -->\n-<project xmlns:j2seproject1=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\" xmlns:j2seproject3=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\" xmlns:jaxrpc=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/jax-rpc\" basedir=\"..\" default=\"default\" name=\"HelloTest-impl\">\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n-        <condition>\n-            <not>\n-                <antversion atleast=\"1.8.0\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/fail>\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"\/>\n-    <!-- \n-                ======================\n-                INITIALIZATION SECTION \n-                ======================\n-            -->\n-    <target name=\"-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init\" name=\"-init-private\">\n-        <property file=\"nbproject\/private\/config.properties\"\/>\n-        <property file=\"nbproject\/private\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/private\/private.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n-        <property file=\"${user.properties.file}\"\/>\n-        <!-- The two properties below are usually overridden -->\n-        <!-- by the active platform. Just a fallback. -->\n-        <property name=\"default.javac.source\" value=\"1.4\"\/>\n-        <property name=\"default.javac.target\" value=\"1.4\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n-        <property file=\"nbproject\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/project.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\n-        <j2seproject1:property name=\"platform.home\" value=\"platforms.${platform.active}.home\"\/>\n-        <j2seproject1:property name=\"platform.bootcp\" value=\"platforms.${platform.active}.bootclasspath\"\/>\n-        <j2seproject1:property name=\"platform.compiler\" value=\"platforms.${platform.active}.compile\"\/>\n-        <j2seproject1:property name=\"platform.javac.tmp\" value=\"platforms.${platform.active}.javac\"\/>\n-        <condition property=\"platform.javac\" value=\"${platform.home}\/bin\/javac\">\n-            <equals arg1=\"${platform.javac.tmp}\" arg2=\"$${platforms.${platform.active}.javac}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javac\" value=\"${platform.javac.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.java.tmp\" value=\"platforms.${platform.active}.java\"\/>\n-        <condition property=\"platform.java\" value=\"${platform.home}\/bin\/java\">\n-            <equals arg1=\"${platform.java.tmp}\" arg2=\"$${platforms.${platform.active}.java}\"\/>\n-        <\/condition>\n-        <property name=\"platform.java\" value=\"${platform.java.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.javadoc.tmp\" value=\"platforms.${platform.active}.javadoc\"\/>\n-        <condition property=\"platform.javadoc\" value=\"${platform.home}\/bin\/javadoc\">\n-            <equals arg1=\"${platform.javadoc.tmp}\" arg2=\"$${platforms.${platform.active}.javadoc}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javadoc\" value=\"${platform.javadoc.tmp}\"\/>\n-        <condition property=\"platform.invalid\" value=\"true\">\n-            <or>\n-                <contains string=\"${platform.javac}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.java}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.javadoc}\" substring=\"$${platforms.\"\/>\n-            <\/or>\n-        <\/condition>\n-        <fail unless=\"platform.home\">Must set platform.home<\/fail>\n-        <fail unless=\"platform.bootcp\">Must set platform.bootcp<\/fail>\n-        <fail unless=\"platform.java\">Must set platform.java<\/fail>\n-        <fail unless=\"platform.javac\">Must set platform.javac<\/fail>\n-        <fail if=\"platform.invalid\">\n- The J2SE Platform is not correctly set up.\n- Your active platform is: ${platform.active}, but the corresponding property \"platforms.${platform.active}.home\" is not found in the project's properties files. \n- Either open the project in the IDE and setup the Platform with the same name or add it manually.\n- For example like this:\n-     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property \"platforms.${platform.active}.home\" in a .properties file)\n-  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) \n-  <\/fail>\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"\/>\n-        <condition property=\"splashscreen.available\">\n-            <and>\n-                <not>\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-                <available file=\"${application.splash}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"main.class.available\">\n-            <and>\n-                <isset property=\"main.class\"\/>\n-                <not>\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"profile.available\">\n-            <and>\n-                <isset property=\"javac.profile\"\/>\n-                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"\/>\n-                <matches pattern=\"1\\.[89](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive\">\n-            <or>\n-                <not>\n-                    <istrue value=\"${jar.archive.disabled}\"\/>\n-                <\/not>\n-                <istrue value=\"${not.archive.disabled}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"do.mkdist\">\n-            <and>\n-                <isset property=\"do.archive\"\/>\n-                <isset property=\"libs.CopyLibs.classpath\"\/>\n-                <not>\n-                    <istrue value=\"${mkdist.disabled}\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+manifest.available\">\n-            <and>\n-                <isset property=\"manifest.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+main.class.available\">\n-            <and>\n-                <isset property=\"main.class.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+splashscreen.available\">\n-            <and>\n-                <isset property=\"splashscreen.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+profile.available\">\n-            <and>\n-                <isset property=\"profile.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"have.tests\">\n-            <or\/>\n-        <\/condition>\n-        <condition property=\"have.sources\">\n-            <or>\n-                <available file=\"${src.dir}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"netbeans.home+have.tests\">\n-            <and>\n-                <isset property=\"netbeans.home\"\/>\n-                <isset property=\"have.tests\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"no.javadoc.preview\">\n-            <and>\n-                <isset property=\"javadoc.preview\"\/>\n-                <isfalse value=\"${javadoc.preview}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"run.jvmargs\" value=\"\"\/>\n-        <property name=\"run.jvmargs.ide\" value=\"\"\/>\n-        <property name=\"javac.compilerargs\" value=\"\"\/>\n-        <property name=\"work.dir\" value=\"${basedir}\"\/>\n-        <condition property=\"no.deps\">\n-            <and>\n-                <istrue value=\"${no.dependencies}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javac.debug\" value=\"true\"\/>\n-        <property name=\"javadoc.preview\" value=\"true\"\/>\n-        <property name=\"application.args\" value=\"\"\/>\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"\/>\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"\/>\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n-            <and>\n-                <isset property=\"javadoc.encoding\"\/>\n-                <not>\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"\/>\n-        <property name=\"includes\" value=\"**\"\/>\n-        <property name=\"excludes\" value=\"\"\/>\n-        <property name=\"do.depend\" value=\"false\"\/>\n-        <condition property=\"do.depend.true\">\n-            <istrue value=\"${do.depend}\"\/>\n-        <\/condition>\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"\/>\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath\/p:'${toString:endorsed.classpath.path}'\">\n-            <and>\n-                <isset property=\"endorsed.classpath\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\n-            <isset property=\"profile.available\"\/>\n-        <\/condition>\n-        <property name=\"jar.index\" value=\"false\"\/>\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"\/>\n-        <property name=\"copylibs.rebase\" value=\"true\"\/>\n-        <available file=\"${meta.inf.dir}\/persistence.xml\" property=\"has.persistence.xml\"\/>\n-        <condition property=\"junit.available\">\n-            <or>\n-                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"\/>\n-                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"testng.available\">\n-            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"\/>\n-        <\/condition>\n-        <condition property=\"junit+testng.available\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <istrue value=\"${testng.available}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n-        <fail unless=\"src.dir\">Must set src.dir<\/fail>\n-        <fail unless=\"build.dir\">Must set build.dir<\/fail>\n-        <fail unless=\"dist.dir\">Must set dist.dir<\/fail>\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir<\/fail>\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir<\/fail>\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir<\/fail>\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir<\/fail>\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes<\/fail>\n-        <fail unless=\"dist.jar\">Must set dist.jar<\/fail>\n-    <\/target>\n-    <target name=\"-init-macrodef-property\">\n-        <macrodef name=\"property\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <compilerarg value=\"-processorpath\"\/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"\/>\n-                    <compilerarg line=\"${ap.processors.internal}\"\/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"\/>\n-                    <compilerarg value=\"-s\"\/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"\/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n-        <macrodef name=\"depend\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <sequential>\n-                <depend cache=\"${build.dir}\/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                <\/depend>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"force-recompile\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <sequential>\n-                <fail unless=\"javac.includes\">Must set javac.includes<\/fail>\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n-                    <path>\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"\/>\n-                    <\/path>\n-                    <globmapper from=\"*.java\" to=\"*.class\"\/>\n-                <\/pathconvert>\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"\/>\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"\/>\n-                <delete>\n-                    <files includesfile=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-                <delete>\n-                    <fileset file=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\n-        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <not>\n-                    <isset property=\"test.method\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <isset property=\"test.method\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-init-test-properties\">\n-        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"\/>\n-        <property name=\"test.binarytestincludes\" value=\"\"\/>\n-        <property name=\"test.binaryexcludes\" value=\"\"\/>\n-    <\/target>\n-    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"\/>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\n-        <macrodef name=\"testng\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <union id=\"test.set\"\/>\n-                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"\/>\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" jvm=\"${platform.java}\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"HelloTest\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\n-                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"\/>\n-                    <propertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/propertyset>\n-                    <customize\/>\n-                <\/testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-test-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <echo>No tests executed.<\/echo>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\n-        <macrodef name=\"test\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <sequential>\n-                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\n-        <macrodef name=\"test-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\n-        <macrodef name=\"testng-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <condition else=\"-suitename HelloTest -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\n-                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"\/>\n-                <\/condition>\n-                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"\/>\n-                <mkdir dir=\"${build.test.results.dir}\"\/>\n-                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\n-                    <customize>\n-                        <customize2\/>\n-                        <jvmarg value=\"-ea\"\/>\n-                        <arg line=\"${testng.debug.mode}\"\/>\n-                        <arg line=\"-d ${build.test.results.dir}\"\/>\n-                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"\/>\n-                        <arg line=\"${testng.cmd.args}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\n-        <macrodef name=\"testng-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element implicit=\"true\" name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2\/>\n-                <\/j2seproject3:testng-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2>\n-                        <syspropertyset>\n-                            <propertyref prefix=\"test-sys-prop.\"\/>\n-                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                        <\/syspropertyset>\n-                    <\/customize2>\n-                <\/j2seproject3:testng-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"\/>\n-    <!--\n-                pre NB7.2 profiling section; consider it deprecated\n-            -->\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"\/>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\n-        <macrodef name=\"resolve\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"profile\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property environment=\"env\"\/>\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"\/>\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-                    <arg line=\"${application.args}\"\/>\n-                    <classpath>\n-                        <path path=\"${run.classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm<\/fail>\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent<\/fail>\n-    <\/target>\n-    <!--\n-                end of pre NB7.2 profiling section\n-            -->\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n-        <macrodef name=\"nbjpdastart\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"name\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"\" name=\"stopclassname\"\/>\n-            <sequential>\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <bootclasspath>\n-                        <path path=\"${platform.bootcp}\"\/>\n-                    <\/bootclasspath>\n-                <\/nbjpdastart>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"nbjpdareload\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"\/>\n-            <sequential>\n-                <nbjpdareload>\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n-                        <include name=\"${fix.includes}*.class\"\/>\n-                    <\/fileset>\n-                <\/nbjpdareload>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-debug-args\">\n-        <exec executable=\"${platform.java}\" outputproperty=\"version-output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition property=\"have-jdk-older-than-1.4\">\n-            <or>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\n-            <istrue value=\"${have-jdk-older-than-1.4}\"\/>\n-        <\/condition>\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n-            <isset property=\"debug.transport\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n-        <macrodef name=\"debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-java\">\n-        <macrodef name=\"java\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"jvm\" name=\"jvm\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-copylibs\">\n-        <macrodef name=\"copylibs\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n-                    <path path=\"${run.classpath}\"\/>\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"\/>\n-                <\/pathconvert>\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"\/>\n-                    <chainedmapper>\n-                        <flattenmapper\/>\n-                        <filtermapper>\n-                            <replacestring from=\" \" to=\"%20\"\/>\n-                        <\/filtermapper>\n-                        <globmapper from=\"*\" to=\"lib\/*\"\/>\n-                    <\/chainedmapper>\n-                <\/pathconvert>\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"\/>\n-                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n-                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-                    <manifest>\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"\/>\n-                        <customize\/>\n-                    <\/manifest>\n-                <\/copylibs>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-presetdef-jar\">\n-        <presetdef name=\"jar\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-            <\/jar>\n-        <\/presetdef>\n-    <\/target>\n-    <target name=\"-init-ap-cmdline-properties\">\n-        <property name=\"annotation.processing.enabled\" value=\"true\"\/>\n-        <property name=\"annotation.processing.processors.list\" value=\"\"\/>\n-        <property name=\"annotation.processing.processor.options\" value=\"\"\/>\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"\/>\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"\/>\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"\/>\n-        <condition property=\"ap.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n-            <isfalse value=\"${annotation.processing.enabled}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n-        <property name=\"ap.cmd.line.internal\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"\/>\n-    <!--\n-                ===================\n-                COMPILATION SECTION\n-                ===================\n-            -->\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n-        <property location=\"${build.dir}\/built-jar.properties\" name=\"built-jar.properties\"\/>\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n-        <echo level=\"warn\" message=\"Cycle detected: HelloTest was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"\/>\n-        <antcall target=\"-warn-already-built-jar\"\/>\n-        <propertyfile file=\"${built-jar.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"\/>\n-    <target depends=\"init\" name=\"-check-automatic-build\">\n-        <available file=\"${build.classes.dir}\/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n-        <antcall target=\"clean\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n-        <mkdir dir=\"${build.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\n-        <pathconvert property=\"build.generated.subdirs\">\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"*\"\/>\n-            <\/dirset>\n-        <\/pathconvert>\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"\/>\n-        <copy todir=\"${build.classes.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy todir=\"${build.classes.dir}\/META-INF\">\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"\/>\n-    <target name=\"-pre-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile\/>\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"\/>\n-    <!--\n-                ====================\n-                JAR BUILDING SECTION\n-                ====================\n-            -->\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"\/>\n-        <mkdir dir=\"${dist.jar.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"\/>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Profile\" value=\"${javac.profile}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"\/>\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}\/META-INF\"\/>\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF\/${splashscreen.basename}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"\/>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <echo level=\"info\">${platform.java} -jar \"${dist.jar.resolved}\"<\/echo>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\n-        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"\/>\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\n-            <path path=\"${run.classpath}\"\/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"\/>\n-        <\/pathconvert>\n-        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"\/>\n-    <\/target>\n-    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\n-        <delete>\n-            <fileset file=\"${tmp.manifest.file}\"\/>\n-        <\/delete>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"\/>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"\/>\n-    <target name=\"-post-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"\/>\n-    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"\/>\n-    <!--\n-                =================\n-                EXECUTION SECTION\n-                =================\n-            -->\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n-        <j2seproject1:java>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <target name=\"-do-not-recompile\">\n-        <property name=\"javac.includes.binary\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single\" name=\"run-single\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"\/>\n-    <\/target>\n-    <!--\n-                =================\n-                DEBUGGING SECTION\n-                =================\n-            -->\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n-        <j2seproject3:debug>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"\/>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"\/>\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"\/>\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"\/>\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\n-        <fail unless=\"fix.includes\">Must set fix.includes<\/fail>\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n-        <j2seproject1:nbjpdareload\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"\/>\n-    <!--\n-                =================\n-                PROFILING SECTION\n-                =================\n-            -->\n-    <!--\n-                pre NB7.2 profiler integration\n-            -->\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class<\/fail>\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"${profile.class}\"\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/profile>\n-    <\/target>\n-    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\n-            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <test name=\"${profile.class}\"\/>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-            <syspropertyset>\n-                <propertyref prefix=\"test-sys-prop.\"\/>\n-                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-            <\/syspropertyset>\n-            <formatter type=\"brief\" usefile=\"false\"\/>\n-            <formatter type=\"xml\"\/>\n-        <\/junit>\n-    <\/target>\n-    <!--\n-                end of pre NB72 profiling section\n-            -->\n-    <target if=\"netbeans.home\" name=\"-profile-check\">\n-        <condition property=\"profiler.configured\">\n-            <or>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"\/>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"\/>\n-            <\/or>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\n-        <startprofiler\/>\n-        <antcall target=\"run\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"\/>\n-    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"test-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcal target=\"run-test-with-main\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-applet\"\/>\n-    <\/target>\n-    <!--\n-                ===============\n-                JAVADOC SECTION\n-                ===============\n-            -->\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n-        <mkdir dir=\"${dist.javadoc.dir}\"\/>\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n-            <and>\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <exec executable=\"${platform.java}\" failonerror=\"false\" outputproperty=\"platform.version.output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\n-            <matches multiline=\"true\" pattern=\"1\\.[56](\\..*)?\" string=\"${platform.version.output}\"\/>\n-        <\/condition>\n-        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" executable=\"${platform.javadoc}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n-            <classpath>\n-                <path path=\"${javac.classpath}\"\/>\n-            <\/classpath>\n-            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/*.java\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/*.java\"\/>\n-                <exclude name=\"*.java\"\/>\n-            <\/fileset>\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"\/>\n-        <\/javadoc>\n-        <copy todir=\"${dist.javadoc.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-        <\/copy>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n-        <nbbrowse file=\"${dist.javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"\/>\n-    <!--\n-                =========================\n-                TEST COMPILATION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n-        <mkdir dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"\/>\n-    <target name=\"-pre-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"\/>\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"\/>\n-    <!--\n-                =======================\n-                TEST EXECUTION SECTION\n-                =======================\n-            -->\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n-        <j2seproject3:test includes=\"${includes}\" testincludes=\"**\/*Test.java\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"\/>\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"\/>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"\/>\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"\/>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\n-        <fail unless=\"test.class\">Must select some files in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"\/>\n-    <!--\n-                =======================\n-                TEST DEBUGGING SECTION\n-                =======================\n-            -->\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"\/>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"\/>\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"\/>\n-    <!--\n-                =========================\n-                APPLET EXECUTION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <!--\n-                =========================\n-                APPLET DEBUGGING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"\/>\n-    <!--\n-                ===============\n-                CLEANUP SECTION\n-                ===============\n-            -->\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n-        <property location=\"${build.dir}\/built-clean.properties\" name=\"built-clean.properties\"\/>\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n-        <echo level=\"warn\" message=\"Cycle detected: HelloTest was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"\/>\n-        <antcall target=\"-warn-already-built-clean\"\/>\n-        <propertyfile file=\"${built-clean.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init\" name=\"-do-clean\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"\/>\n-    <\/target>\n-    <target name=\"-post-clean\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"\/>\n-    <target name=\"-check-call-dep\">\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"\/>\n-        <condition property=\"should.call.dep\">\n-            <and>\n-                <not>\n-                    <isset property=\"already.built.${call.subproject}\"\/>\n-                <\/not>\n-                <available file=\"${call.script}\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n-            <propertyset>\n-                <propertyref prefix=\"transfer.\"\/>\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"\/>\n-            <\/propertyset>\n-        <\/ant>\n-    <\/target>\n-<\/project>\n","filename":"apps\/tests\/HelloTest\/nbproject\/build-impl.xml","additions":0,"deletions":1431,"binary":false,"changes":1431,"status":"deleted"},{"patch":"@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=1b80e242\n-build.xml.script.CRC32=66307b13\n-build.xml.stylesheet.CRC32=8064a381@1.74.2.48\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject\/build-impl.xml.data.CRC32=1b80e242\n-nbproject\/build-impl.xml.script.CRC32=7445d95f\n-nbproject\/build-impl.xml.stylesheet.CRC32=876e7a8f@1.74.2.48\n","filename":"apps\/tests\/HelloTest\/nbproject\/genfiles.properties","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,78 +0,0 @@\n-annotation.processing.enabled=true\r\n-annotation.processing.enabled.in.editor=false\r\n-annotation.processing.processors.list=\r\n-annotation.processing.run.all.processors=true\r\n-annotation.processing.source.output=${build.generated.sources.dir}\/ap-source-output\r\n-application.title=HelloTest\r\n-application.vendor=ekleyman\r\n-build.classes.dir=${build.dir}\/classes\r\n-build.classes.excludes=**\/*.java,**\/*.form\r\n-# This directory is removed when the project is cleaned:\r\n-build.dir=build\r\n-build.generated.dir=${build.dir}\/generated\r\n-build.generated.sources.dir=${build.dir}\/generated-sources\r\n-# Only compile against the classpath explicitly listed here:\r\n-build.sysclasspath=ignore\r\n-build.test.classes.dir=${build.dir}\/test\/classes\r\n-build.test.results.dir=${build.dir}\/test\/results\r\n-# Uncomment to specify the preferred debugger connection transport:\r\n-#debug.transport=dt_socket\r\n-debug.classpath=\\\r\n-    ${run.classpath}\r\n-debug.test.classpath=\\\r\n-    ${run.test.classpath}\r\n-# Files in build.classes.dir which should be excluded from distribution jar\r\n-dist.archive.excludes=\r\n-# This directory is removed when the project is cleaned:\r\n-dist.dir=dist\r\n-dist.jar=${dist.dir}\/HelloTest.jar\r\n-dist.javadoc.dir=${dist.dir}\/javadoc\r\n-endorsed.classpath=\r\n-excludes=\r\n-file.reference.HelloTest-src=src\r\n-includes=**\r\n-jar.compress=false\r\n-javac.classpath=\r\n-# Space-separated list of extra javac options\r\n-compile.patch=@${basedir}\/..\/..\/..\/build\/compile.args\r\n-addexports=@${basedir}\/addExports\r\n-javac.compilerargs=${compile.patch} ${addexports}\r\n-javac.deprecation=false\r\n-javac.processorpath=\\\r\n-    ${javac.classpath}\r\n-javac.source=1.9\r\n-javac.target=1.9\r\n-javac.test.classpath=\\\r\n-    ${javac.classpath}:\\\r\n-    ${build.classes.dir}\r\n-javac.test.processorpath=\\\r\n-    ${javac.test.classpath}\r\n-javadoc.additionalparam=\r\n-javadoc.author=false\r\n-javadoc.encoding=${source.encoding}\r\n-javadoc.noindex=false\r\n-javadoc.nonavbar=false\r\n-javadoc.notree=false\r\n-javadoc.private=false\r\n-javadoc.splitindex=true\r\n-javadoc.use=true\r\n-javadoc.version=false\r\n-javadoc.windowtitle=\r\n-main.class=hellotest.HelloHighContrast\r\n-manifest.file=manifest.mf\r\n-meta.inf.dir=${src.dir}\/META-INF\r\n-mkdist.disabled=false\r\n-platform.active=JDK_1.9\r\n-run.classpath=\\\r\n-    ${javac.classpath}:\\\r\n-    ${build.classes.dir}\r\n-# Space-separated list of JVM arguments used when running the project.\r\n-# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\r\n-# To set system properties for unit tests define test-sys-prop.name=value:\r\n-run.patch=@${basedir}\/..\/..\/..\/build\/run.args\r\n-run.jvmargs=${run.patch} ${addexports}\r\n-run.test.classpath=\\\r\n-    ${javac.test.classpath}:\\\r\n-    ${build.test.classes.dir}\r\n-source.encoding=UTF-8\r\n-src.dir=${file.reference.HelloTest-src}\r\n","filename":"apps\/tests\/HelloTest\/nbproject\/project.properties","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"},{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.java.j2seproject<\/type>\n-    <configuration>\n-        <data xmlns=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <name>HelloTest<\/name>\n-            <explicit-platform explicit-source-supported=\"true\"\/>\n-            <source-roots>\n-                <root id=\"src.dir\"\/>\n-            <\/source-roots>\n-            <test-roots\/>\n-        <\/data>\n-    <\/configuration>\n-<\/project>\n","filename":"apps\/tests\/HelloTest\/nbproject\/project.xml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,107 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package hellotest;\n-\n-import javafx.animation.KeyFrame;\n-import javafx.animation.KeyValue;\n-import javafx.animation.Timeline;\n-import javafx.application.Application;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-import com.sun.javafx.perf.PerformanceTracker;\n-\n-\/\/ FIXME: Needs public performance tracker API else move to tests\/manual\n-public class HelloFPS extends Application {\n-\n-    private static final Color colors[] = {\n-        Color.RED,\n-        Color.ORANGE,\n-        Color.YELLOW,\n-        Color.GREEN,\n-        Color.BLUE,\n-        Color.INDIGO,\n-        Color.VIOLET\n-    };\n-\n-    private int curColorIdx = 0;\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Hello FPS\");\n-        final Scene scene = new Scene(new Group(), 600, 450);\n-        scene.setFill(Color.color(0.8, 0.8, 0.7));\n-\n-        final Rectangle rect = new Rectangle(5, 5, Color.GRAY);\n-        rect.setLayoutX(5);\n-        rect.setLayoutY(5);\n-\n-        final Text text = new Text(\"??? fps\");\n-        text.setFont(new Font(30));\n-        text.setFill(colors[curColorIdx]);\n-        text.setLayoutX(5);\n-        text.setLayoutY(45);\n-\n-        ((Group)scene.getRoot()).getChildren().addAll(rect, text);\n-        stage.setScene(scene);\n-        stage.show();\n-\n-        final Timeline timeline = new Timeline();\n-        timeline.setCycleCount(Timeline.INDEFINITE);\n-        timeline.setAutoReverse(true);\n-        final KeyValue kv = new KeyValue (rect.layoutXProperty(), 25);\n-        final KeyFrame kf = new KeyFrame(Duration.millis(5000), kv);\n-        timeline.getKeyFrames().add(kf);\n-        timeline.play();\n-\n-        final PerformanceTracker tracker = PerformanceTracker.getSceneTracker(scene);\n-\n-        final Timeline tlTracker = new Timeline();\n-        tlTracker.setCycleCount(Timeline.INDEFINITE);\n-        final KeyFrame kfTracker = new KeyFrame(\n-                Duration.millis(500),\n-                event -> {\n-                    int fps = (int) Math.round(tracker.getInstantFPS());\n-                    text.setText(\"\" + fps + \" fps\");\n-                    curColorIdx = (curColorIdx + 1) % colors.length;\n-                    text.setFill(colors[curColorIdx]);\n-                });\n-        tlTracker.getKeyFrames().add(kfTracker);\n-        tlTracker.play();\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/tests\/HelloTest\/src\/hellotest\/HelloFPS.java","additions":0,"deletions":107,"binary":false,"changes":107,"status":"deleted"},{"patch":"@@ -1,87 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package hellotest;\n-\n-import javafx.application.Application;\n-import javafx.geometry.Insets;\n-import javafx.scene.Scene;\n-import javafx.scene.control.ToggleButton;\n-import javafx.scene.control.ToggleGroup;\n-import javafx.scene.layout.VBox;\n-import javafx.stage.Stage;\n-\n-import com.sun.javafx.application.PlatformImpl;\n-\n-public class HelloHighContrast extends Application {\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-\n-    @Override public void start(Stage stage) {\n-        final ToggleGroup group = new ToggleGroup();\n-        group.selectedToggleProperty().addListener(ov -> {\n-            String userData = (String) (group.getSelectedToggle() != null ? group.getSelectedToggle().getUserData() : null);\n-            if (userData != null) {\n-                System.setProperty(\"com.sun.javafx.highContrastTheme\", userData);\n-            } else {\n-                System.clearProperty(\"com.sun.javafx.highContrastTheme\");\n-            }\n-            PlatformImpl.setAccessibilityTheme(null); \/\/ Reads the system property\n-        });\n-\n-        ToggleButton disableHighContrast = new ToggleButton(\"Disable High Contrast\");\n-        disableHighContrast.setMaxWidth(Double.MAX_VALUE);\n-        disableHighContrast.setUserData(null);\n-        disableHighContrast.setToggleGroup(group);\n-        disableHighContrast.setSelected(true);\n-\n-        ToggleButton whiteOnBlackBtn = new ToggleButton(\"White on black\");\n-        whiteOnBlackBtn.setMaxWidth(Double.MAX_VALUE);\n-        whiteOnBlackBtn.setUserData(\"WHITEONBLACK\");\n-        whiteOnBlackBtn.setToggleGroup(group);\n-\n-        ToggleButton blackOnWhiteBtn = new ToggleButton(\"Black on white\");\n-        blackOnWhiteBtn.setMaxWidth(Double.MAX_VALUE);\n-        blackOnWhiteBtn.setUserData(\"BLACKONWHITE\");\n-        blackOnWhiteBtn.setToggleGroup(group);\n-\n-        ToggleButton yellowOnBlackBtn = new ToggleButton(\"Yellow on black\");\n-        yellowOnBlackBtn.setMaxWidth(Double.MAX_VALUE);\n-        yellowOnBlackBtn.setUserData(\"YELLOWONBLACK\");\n-        yellowOnBlackBtn.setToggleGroup(group);\n-\n-        VBox vbox = new VBox(10, disableHighContrast, whiteOnBlackBtn, blackOnWhiteBtn, yellowOnBlackBtn);\n-        vbox.setPadding(new Insets(10));\n-\n-        Scene scene = new Scene(vbox);\n-\n-        stage.setScene(scene);\n-        stage.setWidth(200);\n-        stage.setHeight(200);\n-        stage.show();\n-    }\n-}\n","filename":"apps\/tests\/HelloTest\/src\/hellotest\/HelloHighContrast.java","additions":0,"deletions":87,"binary":false,"changes":87,"status":"deleted"},{"patch":"@@ -1,84 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package hellotest;\n-\n-import javafx.application.Application;\n-import javafx.event.ActionEvent;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.control.Button;\n-import javafx.scene.input.KeyCode;\n-import javafx.scene.input.KeyEvent;\n-import javafx.scene.robot.Robot;\n-import javafx.stage.Stage;\n-\n-public class RemoveFocusedControl extends Application {\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-\n-    @Override\n-    public void start(Stage stage) {\n-\n-        final Group root = new Group();\n-        stage.setTitle(\"Remove Focused Control Test\");\n-        Scene scene = new Scene(root, 600, 450);\n-\n-        scene.setOnKeyTyped((javafx.scene.input.KeyEvent e) -> {\n-            System.out.println(\"Event: \" + e);\n-        });\n-\n-        Button button1 = new Button();\n-        button1.setText(\"Click HERE for removing this button and then sending \"\n-                + \"four key events\");\n-        button1.setLayoutX(25);\n-        button1.setLayoutY(40);\n-\n-        final Robot robot = new Robot();\n-\n-        button1.setOnAction((ActionEvent e) -> {\n-            root.getChildren().remove(button1);\n-            robot.keyPress(KeyCode.T);\n-            robot.keyRelease(KeyCode.T);\n-            robot.keyPress(KeyCode.E);\n-            robot.keyRelease(KeyCode.E);\n-            robot.keyPress(KeyCode.S);\n-            robot.keyRelease(KeyCode.S);\n-            robot.keyPress(KeyCode.T);\n-            robot.keyRelease(KeyCode.T);\n-        });\n-\n-        root.getChildren().add(button1);\n-\n-        stage.setScene(scene);\n-        stage.show();\n-        System.out.println(\"Please press on 'Click HERE...' button in order to remove\\n\"\n-                + \" the button and generate automatically four keyEvents.\\n\"\n-                + \"Expected results: Button is disappearing, exactly FOUR KeyEvents\\n\"\n-                + \" are being accepted and printed to the console.\");\n-    }\n-}\n","filename":"apps\/tests\/HelloTest\/src\/hellotest\/RemoveFocusedControl.java","additions":0,"deletions":84,"binary":false,"changes":84,"status":"deleted"},{"patch":"@@ -5,1 +5,0 @@\n-        <ant dir=\"HelloTest\" target=\"jar\" inheritAll=\"true\"\/>\n@@ -10,1 +9,0 @@\n-        <ant dir=\"HelloTest\" target=\"clean\" inheritAll=\"true\"\/>\n","filename":"apps\/tests\/build.xml","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n-    <classpathentry kind=\"src\" path=\"FXSlideShow\/src\"\/>\n@@ -7,3 +6,0 @@\n-    <classpathentry kind=\"src\" path=\"Shape3DToy\/src\/main\/java\"\/>\n-    <classpathentry kind=\"src\" path=\"Shape3DToy\/src\/main\/resources\"\/>\n-    <classpathentry kind=\"src\" path=\"StretchyGrid\/src\/main\/java\"\/>\n","filename":"apps\/toys\/.classpath","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,74 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!-- You may freely edit this file. See commented blocks below for -->\r\n-<!-- some examples of how to customize the build. -->\r\n-<!-- (If you delete it and reopen the project it will be recreated.) -->\r\n-<!-- By default, only the Clean and Build commands use this build script. -->\r\n-<!-- Commands such as Run, Debug, and Test only use this build script if -->\r\n-<!-- the Compile on Save feature is turned off for the project. -->\r\n-<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\r\n-<!-- in the project's Project Properties dialog box.-->\r\n-<project name=\"FXSlideShow\" default=\"default\" basedir=\".\">\r\n-    <description>Builds, tests, and runs the project FXSlideShow.<\/description>\r\n-    <import file=\"nbproject\/build-impl.xml\"\/>\r\n-    <!--\r\n-\r\n-    There exist several targets which are by default empty and which can be \r\n-    used for execution of your tasks. These targets are usually executed \r\n-    before and after some main targets. They are: \r\n-\r\n-      -pre-init:                 called before initialization of project properties\r\n-      -post-init:                called after initialization of project properties\r\n-      -pre-compile:              called before javac compilation\r\n-      -post-compile:             called after javac compilation\r\n-      -pre-compile-single:       called before javac compilation of single file\r\n-      -post-compile-single:      called after javac compilation of single file\r\n-      -pre-compile-test:         called before javac compilation of JUnit tests\r\n-      -post-compile-test:        called after javac compilation of JUnit tests\r\n-      -pre-compile-test-single:  called before javac compilation of single JUnit test\r\n-      -post-compile-test-single: called after javac compilation of single JUunit test\r\n-      -pre-jar:                  called before JAR building\r\n-      -post-jar:                 called after JAR building\r\n-      -post-clean:               called after cleaning build products\r\n-\r\n-    (Targets beginning with '-' are not intended to be called on their own.)\r\n-\r\n-    Example of inserting an obfuscator after compilation could look like this:\r\n-\r\n-        <target name=\"-post-compile\">\r\n-            <obfuscate>\r\n-                <fileset dir=\"${build.classes.dir}\"\/>\r\n-            <\/obfuscate>\r\n-        <\/target>\r\n-\r\n-    For list of available properties check the imported \r\n-    nbproject\/build-impl.xml file. \r\n-\r\n-\r\n-    Another way to customize the build is by overriding existing main targets.\r\n-    The targets of interest are: \r\n-\r\n-      -init-macrodef-javac:     defines macro for javac compilation\r\n-      -init-macrodef-junit:     defines macro for junit execution\r\n-      -init-macrodef-debug:     defines macro for class debugging\r\n-      -init-macrodef-java:      defines macro for class execution\r\n-      -do-jar-with-manifest:    JAR building (if you are using a manifest)\r\n-      -do-jar-without-manifest: JAR building (if you are not using a manifest)\r\n-      run:                      execution of project \r\n-      -javadoc-build:           Javadoc generation\r\n-      test-report:              JUnit report generation\r\n-\r\n-    An example of overriding the target for project execution could look like this:\r\n-\r\n-        <target name=\"run\" depends=\"Hello-impl.jar\">\r\n-            <exec dir=\"bin\" executable=\"launcher.exe\">\r\n-                <arg file=\"${dist.jar}\"\/>\r\n-            <\/exec>\r\n-        <\/target>\r\n-\r\n-    Notice that the overridden target depends on the jar target and not only on \r\n-    the compile target as the regular run target does. Again, for a list of available \r\n-    properties which you can use, check the target you are overriding in the\r\n-    nbproject\/build-impl.xml file. \r\n-\r\n-    -->\r\n-<\/project>\r\n","filename":"apps\/toys\/FXSlideShow\/build.xml","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -1,1422 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\r\n-***         EDIT ..\/build.xml INSTEAD         ***\r\n-\r\n-For the purpose of easier reading the script\r\n-is divided into following sections:\r\n-\r\n-  - initialization\r\n-  - compilation\r\n-  - jar\r\n-  - execution\r\n-  - debugging\r\n-  - javadoc\r\n-  - test compilation\r\n-  - test execution\r\n-  - test debugging\r\n-  - applet\r\n-  - cleanup\r\n-\r\n-        -->\r\n-<project xmlns:j2seproject1=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\" xmlns:j2seproject3=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\" xmlns:jaxrpc=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/jax-rpc\" basedir=\"..\" default=\"default\" name=\"FXSlideShow-impl\">\r\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\r\n-        <condition>\r\n-            <not>\r\n-                <antversion atleast=\"1.8.0\"\/>\r\n-            <\/not>\r\n-        <\/condition>\r\n-    <\/fail>\r\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"\/>\r\n-    <!-- \r\n-                ======================\r\n-                INITIALIZATION SECTION \r\n-                ======================\r\n-            -->\r\n-    <target name=\"-pre-init\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"-pre-init\" name=\"-init-private\">\r\n-        <property file=\"nbproject\/private\/config.properties\"\/>\r\n-        <property file=\"nbproject\/private\/configs\/${config}.properties\"\/>\r\n-        <property file=\"nbproject\/private\/private.properties\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\r\n-        <property file=\"${user.properties.file}\"\/>\r\n-        <!-- The two properties below are usually overridden -->\r\n-        <!-- by the active platform. Just a fallback. -->\r\n-        <property name=\"default.javac.source\" value=\"1.4\"\/>\r\n-        <property name=\"default.javac.target\" value=\"1.4\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\r\n-        <property file=\"nbproject\/configs\/${config}.properties\"\/>\r\n-        <property file=\"nbproject\/project.properties\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\r\n-        <j2seproject1:property name=\"platform.home\" value=\"platforms.${platform.active}.home\"\/>\r\n-        <j2seproject1:property name=\"platform.bootcp\" value=\"platforms.${platform.active}.bootclasspath\"\/>\r\n-        <j2seproject1:property name=\"platform.compiler\" value=\"platforms.${platform.active}.compile\"\/>\r\n-        <j2seproject1:property name=\"platform.javac.tmp\" value=\"platforms.${platform.active}.javac\"\/>\r\n-        <condition property=\"platform.javac\" value=\"${platform.home}\/bin\/javac\">\r\n-            <equals arg1=\"${platform.javac.tmp}\" arg2=\"$${platforms.${platform.active}.javac}\"\/>\r\n-        <\/condition>\r\n-        <property name=\"platform.javac\" value=\"${platform.javac.tmp}\"\/>\r\n-        <j2seproject1:property name=\"platform.java.tmp\" value=\"platforms.${platform.active}.java\"\/>\r\n-        <condition property=\"platform.java\" value=\"${platform.home}\/bin\/java\">\r\n-            <equals arg1=\"${platform.java.tmp}\" arg2=\"$${platforms.${platform.active}.java}\"\/>\r\n-        <\/condition>\r\n-        <property name=\"platform.java\" value=\"${platform.java.tmp}\"\/>\r\n-        <j2seproject1:property name=\"platform.javadoc.tmp\" value=\"platforms.${platform.active}.javadoc\"\/>\r\n-        <condition property=\"platform.javadoc\" value=\"${platform.home}\/bin\/javadoc\">\r\n-            <equals arg1=\"${platform.javadoc.tmp}\" arg2=\"$${platforms.${platform.active}.javadoc}\"\/>\r\n-        <\/condition>\r\n-        <property name=\"platform.javadoc\" value=\"${platform.javadoc.tmp}\"\/>\r\n-        <condition property=\"platform.invalid\" value=\"true\">\r\n-            <or>\r\n-                <contains string=\"${platform.javac}\" substring=\"$${platforms.\"\/>\r\n-                <contains string=\"${platform.java}\" substring=\"$${platforms.\"\/>\r\n-                <contains string=\"${platform.javadoc}\" substring=\"$${platforms.\"\/>\r\n-            <\/or>\r\n-        <\/condition>\r\n-        <fail unless=\"platform.home\">Must set platform.home<\/fail>\r\n-        <fail unless=\"platform.bootcp\">Must set platform.bootcp<\/fail>\r\n-        <fail unless=\"platform.java\">Must set platform.java<\/fail>\r\n-        <fail unless=\"platform.javac\">Must set platform.javac<\/fail>\r\n-        <fail if=\"platform.invalid\">\r\n- The J2SE Platform is not correctly set up.\r\n- Your active platform is: ${platform.active}, but the corresponding property \"platforms.${platform.active}.home\" is not found in the project's properties files. \r\n- Either open the project in the IDE and setup the Platform with the same name or add it manually.\r\n- For example like this:\r\n-     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property \"platforms.${platform.active}.home\" in a .properties file)\r\n-  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) \r\n-  <\/fail>\r\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"\/>\r\n-        <condition property=\"splashscreen.available\">\r\n-            <and>\r\n-                <not>\r\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"\/>\r\n-                <\/not>\r\n-                <available file=\"${application.splash}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"main.class.available\">\r\n-            <and>\r\n-                <isset property=\"main.class\"\/>\r\n-                <not>\r\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"\/>\r\n-                <\/not>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"profile.available\">\r\n-            <and>\r\n-                <isset property=\"javac.profile\"\/>\r\n-                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"\/>\r\n-                <matches pattern=\"1\\.[89](\\..*)?\" string=\"${javac.source}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"do.archive\">\r\n-            <not>\r\n-                <istrue value=\"${jar.archive.disabled}\"\/>\r\n-            <\/not>\r\n-        <\/condition>\r\n-        <condition property=\"do.mkdist\">\r\n-            <and>\r\n-                <isset property=\"do.archive\"\/>\r\n-                <isset property=\"libs.CopyLibs.classpath\"\/>\r\n-                <not>\r\n-                    <istrue value=\"${mkdist.disabled}\"\/>\r\n-                <\/not>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"do.archive+manifest.available\">\r\n-            <and>\r\n-                <isset property=\"manifest.available\"\/>\r\n-                <istrue value=\"${do.archive}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"do.archive+main.class.available\">\r\n-            <and>\r\n-                <isset property=\"main.class.available\"\/>\r\n-                <istrue value=\"${do.archive}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"do.archive+splashscreen.available\">\r\n-            <and>\r\n-                <isset property=\"splashscreen.available\"\/>\r\n-                <istrue value=\"${do.archive}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"do.archive+profile.available\">\r\n-            <and>\r\n-                <isset property=\"profile.available\"\/>\r\n-                <istrue value=\"${do.archive}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"have.tests\">\r\n-            <or\/>\r\n-        <\/condition>\r\n-        <condition property=\"have.sources\">\r\n-            <or>\r\n-                <available file=\"${src.dir}\"\/>\r\n-            <\/or>\r\n-        <\/condition>\r\n-        <condition property=\"netbeans.home+have.tests\">\r\n-            <and>\r\n-                <isset property=\"netbeans.home\"\/>\r\n-                <isset property=\"have.tests\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition property=\"no.javadoc.preview\">\r\n-            <and>\r\n-                <isset property=\"javadoc.preview\"\/>\r\n-                <isfalse value=\"${javadoc.preview}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <property name=\"run.jvmargs\" value=\"\"\/>\r\n-        <property name=\"run.jvmargs.ide\" value=\"\"\/>\r\n-        <property name=\"javac.compilerargs\" value=\"\"\/>\r\n-        <property name=\"work.dir\" value=\"${basedir}\"\/>\r\n-        <condition property=\"no.deps\">\r\n-            <and>\r\n-                <istrue value=\"${no.dependencies}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <property name=\"javac.debug\" value=\"true\"\/>\r\n-        <property name=\"javadoc.preview\" value=\"true\"\/>\r\n-        <property name=\"application.args\" value=\"\"\/>\r\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"\/>\r\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"\/>\r\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\r\n-            <and>\r\n-                <isset property=\"javadoc.encoding\"\/>\r\n-                <not>\r\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"\/>\r\n-                <\/not>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"\/>\r\n-        <property name=\"includes\" value=\"**\"\/>\r\n-        <property name=\"excludes\" value=\"\"\/>\r\n-        <property name=\"do.depend\" value=\"false\"\/>\r\n-        <condition property=\"do.depend.true\">\r\n-            <istrue value=\"${do.depend}\"\/>\r\n-        <\/condition>\r\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"\/>\r\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath\/p:'${toString:endorsed.classpath.path}'\">\r\n-            <and>\r\n-                <isset property=\"endorsed.classpath\"\/>\r\n-                <not>\r\n-                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"\/>\r\n-                <\/not>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\r\n-            <isset property=\"profile.available\"\/>\r\n-        <\/condition>\r\n-        <property name=\"jar.index\" value=\"false\"\/>\r\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"\/>\r\n-        <property name=\"copylibs.rebase\" value=\"true\"\/>\r\n-        <available file=\"${meta.inf.dir}\/persistence.xml\" property=\"has.persistence.xml\"\/>\r\n-        <condition property=\"junit.available\">\r\n-            <or>\r\n-                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"\/>\r\n-                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"\/>\r\n-            <\/or>\r\n-        <\/condition>\r\n-        <condition property=\"testng.available\">\r\n-            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"\/>\r\n-        <\/condition>\r\n-        <condition property=\"junit+testng.available\">\r\n-            <and>\r\n-                <istrue value=\"${junit.available}\"\/>\r\n-                <istrue value=\"${testng.available}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\r\n-            <istrue value=\"${junit+testng.available}\"\/>\r\n-        <\/condition>\r\n-        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\r\n-            <istrue value=\"${junit+testng.available}\"\/>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target name=\"-post-init\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\r\n-        <fail unless=\"src.dir\">Must set src.dir<\/fail>\r\n-        <fail unless=\"build.dir\">Must set build.dir<\/fail>\r\n-        <fail unless=\"dist.dir\">Must set dist.dir<\/fail>\r\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir<\/fail>\r\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir<\/fail>\r\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir<\/fail>\r\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir<\/fail>\r\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes<\/fail>\r\n-        <fail unless=\"dist.jar\">Must set dist.jar<\/fail>\r\n-    <\/target>\r\n-    <target name=\"-init-macrodef-property\">\r\n-        <macrodef name=\"property\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\r\n-            <attribute name=\"name\"\/>\r\n-            <attribute name=\"value\"\/>\r\n-            <sequential>\r\n-                <property name=\"@{name}\" value=\"${@{value}}\"\/>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\r\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\r\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\r\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\r\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\r\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\r\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\r\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\r\n-                <mkdir dir=\"${empty.dir}\"\/>\r\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"\/>\r\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\r\n-                    <src>\r\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\r\n-                            <include name=\"*\"\/>\r\n-                        <\/dirset>\r\n-                    <\/src>\r\n-                    <classpath>\r\n-                        <path path=\"@{classpath}\"\/>\r\n-                    <\/classpath>\r\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\r\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\r\n-                    <compilerarg value=\"-processorpath\"\/>\r\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"\/>\r\n-                    <compilerarg line=\"${ap.processors.internal}\"\/>\r\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"\/>\r\n-                    <compilerarg value=\"-s\"\/>\r\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"\/>\r\n-                    <compilerarg line=\"${ap.proc.none.internal}\"\/>\r\n-                    <customize\/>\r\n-                <\/javac>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\r\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\r\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\r\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\r\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\r\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\r\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\r\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\r\n-                <mkdir dir=\"${empty.dir}\"\/>\r\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\r\n-                    <src>\r\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\r\n-                            <include name=\"*\"\/>\r\n-                        <\/dirset>\r\n-                    <\/src>\r\n-                    <classpath>\r\n-                        <path path=\"@{classpath}\"\/>\r\n-                    <\/classpath>\r\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\r\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\r\n-                    <customize\/>\r\n-                <\/javac>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\r\n-        <macrodef name=\"depend\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\r\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\r\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\r\n-            <sequential>\r\n-                <depend cache=\"${build.dir}\/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\r\n-                    <classpath>\r\n-                        <path path=\"@{classpath}\"\/>\r\n-                    <\/classpath>\r\n-                <\/depend>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-        <macrodef name=\"force-recompile\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\r\n-            <sequential>\r\n-                <fail unless=\"javac.includes\">Must set javac.includes<\/fail>\r\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\r\n-                    <path>\r\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"\/>\r\n-                    <\/path>\r\n-                    <globmapper from=\"*.java\" to=\"*.class\"\/>\r\n-                <\/pathconvert>\r\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"\/>\r\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"\/>\r\n-                <delete>\r\n-                    <files includesfile=\"${javac.includesfile.binary}\"\/>\r\n-                <\/delete>\r\n-                <delete>\r\n-                    <fileset file=\"${javac.includesfile.binary}\"\/>\r\n-                <\/delete>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\r\n-        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\r\n-            <and>\r\n-                <istrue value=\"${junit.available}\"\/>\r\n-                <not>\r\n-                    <isset property=\"test.method\"\/>\r\n-                <\/not>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\r\n-            <and>\r\n-                <istrue value=\"${junit.available}\"\/>\r\n-                <isset property=\"test.method\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target name=\"-init-test-properties\">\r\n-        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"\/>\r\n-        <property name=\"test.binarytestincludes\" value=\"\"\/>\r\n-        <property name=\"test.binaryexcludes\" value=\"\"\/>\r\n-    <\/target>\r\n-    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\r\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\r\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\r\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\r\n-                    <formatter type=\"xml\"\/>\r\n-                    <jvmarg value=\"-ea\"\/>\r\n-                    <customize\/>\r\n-                <\/junit>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\r\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\r\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\r\n-                    <batchtest todir=\"${build.test.results.dir}\">\r\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\r\n-                            <filename name=\"${test.binarytestincludes}\"\/>\r\n-                        <\/fileset>\r\n-                    <\/batchtest>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\r\n-                    <formatter type=\"xml\"\/>\r\n-                    <jvmarg value=\"-ea\"\/>\r\n-                    <customize\/>\r\n-                <\/junit>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"\/>\r\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\r\n-        <macrodef name=\"testng\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\r\n-                    <isset property=\"test.method\"\/>\r\n-                <\/condition>\r\n-                <union id=\"test.set\"\/>\r\n-                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"\/>\r\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" jvm=\"${platform.java}\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"FXSlideShow\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\r\n-                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"\/>\r\n-                    <propertyset>\r\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/propertyset>\r\n-                    <customize\/>\r\n-                <\/testng>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target name=\"-init-macrodef-test-impl\">\r\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <echo>No tests executed.<\/echo>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\r\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n-                    <customize\/>\r\n-                <\/j2seproject3:junit>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\r\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n-                    <customize\/>\r\n-                <\/j2seproject3:testng>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\r\n-        <macrodef name=\"test\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n-                    <customize>\r\n-                        <classpath>\r\n-                            <path path=\"${run.test.classpath}\"\/>\r\n-                        <\/classpath>\r\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\r\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\r\n-                    <\/customize>\r\n-                <\/j2seproject3:test-impl>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">\r\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\r\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\r\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\r\n-                    <formatter type=\"xml\"\/>\r\n-                    <jvmarg value=\"-ea\"\/>\r\n-                    <jvmarg line=\"${debug-args-line}\"\/>\r\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\r\n-                    <customize\/>\r\n-                <\/junit>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">\r\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\r\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\r\n-                    <batchtest todir=\"${build.test.results.dir}\">\r\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\r\n-                            <filename name=\"${test.binarytestincludes}\"\/>\r\n-                        <\/fileset>\r\n-                    <\/batchtest>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\r\n-                    <formatter type=\"xml\"\/>\r\n-                    <jvmarg value=\"-ea\"\/>\r\n-                    <jvmarg line=\"${debug-args-line}\"\/>\r\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\r\n-                    <customize\/>\r\n-                <\/junit>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\r\n-        <macrodef name=\"test-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n-                    <customize\/>\r\n-                <\/j2seproject3:junit-debug>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\r\n-        <macrodef name=\"testng-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\r\n-            <attribute default=\"\" name=\"testMethod\"\/>\r\n-            <element name=\"customize2\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\r\n-                    <isset property=\"test.method\"\/>\r\n-                <\/condition>\r\n-                <condition else=\"-suitename FXSlideShow -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\r\n-                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"\/>\r\n-                <\/condition>\r\n-                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"\/>\r\n-                <mkdir dir=\"${build.test.results.dir}\"\/>\r\n-                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\r\n-                    <customize>\r\n-                        <customize2\/>\r\n-                        <jvmarg value=\"-ea\"\/>\r\n-                        <arg line=\"${testng.debug.mode}\"\/>\r\n-                        <arg line=\"-d ${build.test.results.dir}\"\/>\r\n-                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"\/>\r\n-                        <arg line=\"${testng.cmd.args}\"\/>\r\n-                    <\/customize>\r\n-                <\/j2seproject3:debug>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\r\n-        <macrodef name=\"testng-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\r\n-            <attribute default=\"\" name=\"testMethod\"\/>\r\n-            <element implicit=\"true\" name=\"customize2\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\r\n-                    <customize2\/>\r\n-                <\/j2seproject3:testng-debug>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\r\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\r\n-            <attribute default=\"\" name=\"testMethod\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\r\n-                    <customize>\r\n-                        <classpath>\r\n-                            <path path=\"${run.test.classpath}\"\/>\r\n-                        <\/classpath>\r\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\r\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\r\n-                    <\/customize>\r\n-                <\/j2seproject3:test-debug-impl>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\r\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\r\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\r\n-            <attribute default=\"**\" name=\"testincludes\"\/>\r\n-            <attribute default=\"\" name=\"testmethods\"\/>\r\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\r\n-            <attribute default=\"\" name=\"testMethod\"\/>\r\n-            <sequential>\r\n-                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\r\n-                    <customize2>\r\n-                        <syspropertyset>\r\n-                            <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                        <\/syspropertyset>\r\n-                    <\/customize2>\r\n-                <\/j2seproject3:testng-debug-impl>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"\/>\r\n-    <!--\r\n-                pre NB7.2 profiling section; consider it deprecated\r\n-            -->\r\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"\/>\r\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\r\n-        <macrodef name=\"resolve\">\r\n-            <attribute name=\"name\"\/>\r\n-            <attribute name=\"value\"\/>\r\n-            <sequential>\r\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"\/>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-        <macrodef name=\"profile\">\r\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property environment=\"env\"\/>\r\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"\/>\r\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\r\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\r\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"\/>\r\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\r\n-                    <arg line=\"${application.args}\"\/>\r\n-                    <classpath>\r\n-                        <path path=\"${run.classpath}\"\/>\r\n-                    <\/classpath>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\r\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <customize\/>\r\n-                <\/java>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\r\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm<\/fail>\r\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent<\/fail>\r\n-    <\/target>\r\n-    <!--\r\n-                end of pre NB7.2 profiling section\r\n-            -->\r\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\r\n-        <macrodef name=\"nbjpdastart\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\r\n-            <attribute default=\"${main.class}\" name=\"name\"\/>\r\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\r\n-            <attribute default=\"\" name=\"stopclassname\"\/>\r\n-            <sequential>\r\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\r\n-                    <classpath>\r\n-                        <path path=\"@{classpath}\"\/>\r\n-                    <\/classpath>\r\n-                    <bootclasspath>\r\n-                        <path path=\"${platform.bootcp}\"\/>\r\n-                    <\/bootclasspath>\r\n-                <\/nbjpdastart>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-        <macrodef name=\"nbjpdareload\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\r\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"\/>\r\n-            <sequential>\r\n-                <nbjpdareload>\r\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\r\n-                        <include name=\"${fix.includes}*.class\"\/>\r\n-                    <\/fileset>\r\n-                <\/nbjpdareload>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target name=\"-init-debug-args\">\r\n-        <exec executable=\"${platform.java}\" outputproperty=\"version-output\">\r\n-            <arg value=\"-version\"\/>\r\n-        <\/exec>\r\n-        <condition property=\"have-jdk-older-than-1.4\">\r\n-            <or>\r\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"\/>\r\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"\/>\r\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"\/>\r\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"\/>\r\n-            <\/or>\r\n-        <\/condition>\r\n-        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\r\n-            <istrue value=\"${have-jdk-older-than-1.4}\"\/>\r\n-        <\/condition>\r\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\r\n-            <os family=\"windows\"\/>\r\n-        <\/condition>\r\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\r\n-            <isset property=\"debug.transport\"\/>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\r\n-        <macrodef name=\"debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\r\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\r\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                    <jvmarg line=\"${debug-args-line}\"\/>\r\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\r\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\r\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\r\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\r\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\r\n-                    <classpath>\r\n-                        <path path=\"@{classpath}\"\/>\r\n-                    <\/classpath>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\r\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <customize\/>\r\n-                <\/java>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target name=\"-init-macrodef-java\">\r\n-        <macrodef name=\"java\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\r\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\r\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"\/>\r\n-            <attribute default=\"jvm\" name=\"jvm\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\r\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\r\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\r\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\r\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\r\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\r\n-                    <classpath>\r\n-                        <path path=\"@{classpath}\"\/>\r\n-                    <\/classpath>\r\n-                    <syspropertyset>\r\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\r\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-                    <\/syspropertyset>\r\n-                    <customize\/>\r\n-                <\/java>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target name=\"-init-macrodef-copylibs\">\r\n-        <macrodef name=\"copylibs\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"\/>\r\n-            <element name=\"customize\" optional=\"true\"\/>\r\n-            <sequential>\r\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\r\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\r\n-                    <path path=\"${run.classpath}\"\/>\r\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"\/>\r\n-                <\/pathconvert>\r\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\r\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"\/>\r\n-                    <chainedmapper>\r\n-                        <flattenmapper\/>\r\n-                        <filtermapper>\r\n-                            <replacestring from=\" \" to=\"%20\"\/>\r\n-                        <\/filtermapper>\r\n-                        <globmapper from=\"*\" to=\"lib\/*\"\/>\r\n-                    <\/chainedmapper>\r\n-                <\/pathconvert>\r\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"\/>\r\n-                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\r\n-                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\r\n-                    <manifest>\r\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"\/>\r\n-                        <customize\/>\r\n-                    <\/manifest>\r\n-                <\/copylibs>\r\n-            <\/sequential>\r\n-        <\/macrodef>\r\n-    <\/target>\r\n-    <target name=\"-init-presetdef-jar\">\r\n-        <presetdef name=\"jar\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\r\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\r\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\r\n-            <\/jar>\r\n-        <\/presetdef>\r\n-    <\/target>\r\n-    <target name=\"-init-ap-cmdline-properties\">\r\n-        <property name=\"annotation.processing.enabled\" value=\"true\"\/>\r\n-        <property name=\"annotation.processing.processors.list\" value=\"\"\/>\r\n-        <property name=\"annotation.processing.processor.options\" value=\"\"\/>\r\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"\/>\r\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"\/>\r\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"\/>\r\n-        <condition property=\"ap.supported.internal\" value=\"true\">\r\n-            <not>\r\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"\/>\r\n-            <\/not>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\r\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\r\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"\/>\r\n-        <\/condition>\r\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\r\n-            <isfalse value=\"${annotation.processing.enabled}\"\/>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\r\n-        <property name=\"ap.cmd.line.internal\" value=\"\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"\/>\r\n-    <!--\r\n-                ===================\r\n-                COMPILATION SECTION\r\n-                ===================\r\n-            -->\r\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\r\n-        <property location=\"${build.dir}\/built-jar.properties\" name=\"built-jar.properties\"\/>\r\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"\/>\r\n-    <\/target>\r\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\r\n-        <echo level=\"warn\" message=\"Cycle detected: FXSlideShow was already built\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\r\n-        <mkdir dir=\"${build.dir}\"\/>\r\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"\/>\r\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"\/>\r\n-        <antcall target=\"-warn-already-built-jar\"\/>\r\n-        <propertyfile file=\"${built-jar.properties}\">\r\n-            <entry key=\"${basedir}\" value=\"\"\/>\r\n-        <\/propertyfile>\r\n-    <\/target>\r\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"\/>\r\n-    <target depends=\"init\" name=\"-check-automatic-build\">\r\n-        <available file=\"${build.classes.dir}\/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\r\n-        <antcall target=\"clean\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\r\n-        <mkdir dir=\"${build.classes.dir}\"\/>\r\n-    <\/target>\r\n-    <target name=\"-pre-compile\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\r\n-        <pathconvert property=\"build.generated.subdirs\">\r\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\r\n-                <include name=\"*\"\/>\r\n-            <\/dirset>\r\n-        <\/pathconvert>\r\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\r\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"\/>\r\n-        <copy todir=\"${build.classes.dir}\">\r\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\r\n-        <\/copy>\r\n-    <\/target>\r\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\r\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\r\n-        <copy todir=\"${build.classes.dir}\/META-INF\">\r\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"\/>\r\n-        <\/copy>\r\n-    <\/target>\r\n-    <target name=\"-post-compile\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"\/>\r\n-    <target name=\"-pre-compile-single\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\r\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\r\n-        <j2seproject3:force-recompile\/>\r\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"\/>\r\n-    <\/target>\r\n-    <target name=\"-post-compile-single\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"\/>\r\n-    <!--\r\n-                ====================\r\n-                JAR BUILDING SECTION\r\n-                ====================\r\n-            -->\r\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\r\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"\/>\r\n-        <mkdir dir=\"${dist.jar.dir}\"\/>\r\n-    <\/target>\r\n-    <target name=\"-pre-jar\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\r\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\r\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\r\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\r\n-        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\r\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\r\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\r\n-        <\/manifest>\r\n-    <\/target>\r\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\r\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\r\n-            <attribute name=\"Profile\" value=\"${javac.profile}\"\/>\r\n-        <\/manifest>\r\n-    <\/target>\r\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\r\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"\/>\r\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\r\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}\/META-INF\"\/>\r\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\r\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF\/${splashscreen.basename}\"\/>\r\n-        <\/manifest>\r\n-    <\/target>\r\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\r\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"\/>\r\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\r\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\r\n-        <echo level=\"info\">${platform.java} -jar \"${dist.jar.resolved}\"<\/echo>\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\r\n-        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"\/>\r\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\r\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\r\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\r\n-            <path path=\"${run.classpath}\"\/>\r\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"\/>\r\n-        <\/pathconvert>\r\n-        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">\r\n-            <isset property=\"main.class.available\"\/>\r\n-        <\/condition>\r\n-        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\r\n-            <isset property=\"main.class.available\"\/>\r\n-        <\/condition>\r\n-        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\r\n-        <delete>\r\n-            <fileset file=\"${tmp.manifest.file}\"\/>\r\n-        <\/delete>\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"\/>\r\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"\/>\r\n-    <target name=\"-post-jar\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"\/>\r\n-    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"\/>\r\n-    <!--\r\n-                =================\r\n-                EXECUTION SECTION\r\n-                =================\r\n-            -->\r\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\r\n-        <j2seproject1:java>\r\n-            <customize>\r\n-                <arg line=\"${application.args}\"\/>\r\n-            <\/customize>\r\n-        <\/j2seproject1:java>\r\n-    <\/target>\r\n-    <target name=\"-do-not-recompile\">\r\n-        <property name=\"javac.includes.binary\" value=\"\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-single\" name=\"run-single\">\r\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\r\n-        <j2seproject1:java classname=\"${run.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\r\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\r\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"\/>\r\n-    <\/target>\r\n-    <!--\r\n-                =================\r\n-                DEBUGGING SECTION\r\n-                =================\r\n-            -->\r\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\r\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\r\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\r\n-        <j2seproject3:debug>\r\n-            <customize>\r\n-                <arg line=\"${application.args}\"\/>\r\n-            <\/customize>\r\n-        <\/j2seproject3:debug>\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"\/>\r\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\r\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"\/>\r\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\r\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\r\n-        <j2seproject3:debug classname=\"${debug.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"\/>\r\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\r\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\r\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"\/>\r\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\r\n-        <fail unless=\"fix.includes\">Must set fix.includes<\/fail>\r\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\r\n-        <j2seproject1:nbjpdareload\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"\/>\r\n-    <!--\r\n-                =================\r\n-                PROFILING SECTION\r\n-                =================\r\n-            -->\r\n-    <!--\r\n-                pre NB7.2 profiler integration\r\n-            -->\r\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\r\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\r\n-        <nbprofiledirect>\r\n-            <classpath>\r\n-                <path path=\"${run.classpath}\"\/>\r\n-            <\/classpath>\r\n-        <\/nbprofiledirect>\r\n-        <profile\/>\r\n-    <\/target>\r\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\r\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class<\/fail>\r\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\r\n-        <nbprofiledirect>\r\n-            <classpath>\r\n-                <path path=\"${run.classpath}\"\/>\r\n-            <\/classpath>\r\n-        <\/nbprofiledirect>\r\n-        <profile classname=\"${profile.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\r\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\r\n-        <nbprofiledirect>\r\n-            <classpath>\r\n-                <path path=\"${run.classpath}\"\/>\r\n-            <\/classpath>\r\n-        <\/nbprofiledirect>\r\n-        <profile classname=\"sun.applet.AppletViewer\">\r\n-            <customize>\r\n-                <arg value=\"${applet.url}\"\/>\r\n-            <\/customize>\r\n-        <\/profile>\r\n-    <\/target>\r\n-    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\r\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\r\n-        <nbprofiledirect>\r\n-            <classpath>\r\n-                <path path=\"${run.test.classpath}\"\/>\r\n-            <\/classpath>\r\n-        <\/nbprofiledirect>\r\n-        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\r\n-            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\r\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\r\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\r\n-            <test name=\"${profile.class}\"\/>\r\n-            <classpath>\r\n-                <path path=\"${run.test.classpath}\"\/>\r\n-            <\/classpath>\r\n-            <syspropertyset>\r\n-                <propertyref prefix=\"test-sys-prop.\"\/>\r\n-                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\r\n-            <\/syspropertyset>\r\n-            <formatter type=\"brief\" usefile=\"false\"\/>\r\n-            <formatter type=\"xml\"\/>\r\n-        <\/junit>\r\n-    <\/target>\r\n-    <!--\r\n-                end of pre NB72 profiling section\r\n-            -->\r\n-    <target if=\"netbeans.home\" name=\"-profile-check\">\r\n-        <condition property=\"profiler.configured\">\r\n-            <or>\r\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"\/>\r\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"\/>\r\n-            <\/or>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\r\n-        <startprofiler\/>\r\n-        <antcall target=\"run\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\r\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\r\n-        <startprofiler\/>\r\n-        <antcall target=\"run-single\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"\/>\r\n-    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\r\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\r\n-        <startprofiler\/>\r\n-        <antcall target=\"test-single\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\r\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\r\n-        <startprofiler\/>\r\n-        <antcal target=\"run-test-with-main\"\/>\r\n-    <\/target>\r\n-    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\r\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\r\n-        <startprofiler\/>\r\n-        <antcall target=\"run-applet\"\/>\r\n-    <\/target>\r\n-    <!--\r\n-                ===============\r\n-                JAVADOC SECTION\r\n-                ===============\r\n-            -->\r\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\r\n-        <mkdir dir=\"${dist.javadoc.dir}\"\/>\r\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\r\n-            <and>\r\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"\/>\r\n-                <not>\r\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"\/>\r\n-                <\/not>\r\n-            <\/and>\r\n-        <\/condition>\r\n-        <javadoc additionalparam=\"${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" executable=\"${platform.javadoc}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\r\n-            <classpath>\r\n-                <path path=\"${javac.classpath}\"\/>\r\n-            <\/classpath>\r\n-            <fileset dir=\"${src.dir}\" excludes=\"*.java,${excludes}\" includes=\"${includes}\">\r\n-                <filename name=\"**\/*.java\"\/>\r\n-            <\/fileset>\r\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\r\n-                <include name=\"**\/*.java\"\/>\r\n-                <exclude name=\"*.java\"\/>\r\n-            <\/fileset>\r\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"\/>\r\n-        <\/javadoc>\r\n-        <copy todir=\"${dist.javadoc.dir}\">\r\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\r\n-                <filename name=\"**\/doc-files\/**\"\/>\r\n-            <\/fileset>\r\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\r\n-                <include name=\"**\/doc-files\/**\"\/>\r\n-            <\/fileset>\r\n-        <\/copy>\r\n-    <\/target>\r\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\r\n-        <nbbrowse file=\"${dist.javadoc.dir}\/index.html\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"\/>\r\n-    <!--\r\n-                =========================\r\n-                TEST COMPILATION SECTION\r\n-                =========================\r\n-            -->\r\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\r\n-        <mkdir dir=\"${build.test.classes.dir}\"\/>\r\n-    <\/target>\r\n-    <target name=\"-pre-compile-test\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\r\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\r\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"\"\/>\r\n-        <copy todir=\"${build.test.classes.dir}\"\/>\r\n-    <\/target>\r\n-    <target name=\"-post-compile-test\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"\/>\r\n-    <target name=\"-pre-compile-test-single\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\r\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\r\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"\/>\r\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"\" srcdir=\"\"\/>\r\n-        <copy todir=\"${build.test.classes.dir}\"\/>\r\n-    <\/target>\r\n-    <target name=\"-post-compile-test-single\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"\/>\r\n-    <!--\r\n-                =======================\r\n-                TEST EXECUTION SECTION\r\n-                =======================\r\n-            -->\r\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\r\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\r\n-        <j2seproject3:test testincludes=\"**\/*Test.java\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\r\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\r\n-    <\/target>\r\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"\/>\r\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"\/>\r\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"\/>\r\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\r\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\r\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\r\n-        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\r\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"\/>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\r\n-        <fail unless=\"test.class\">Must select some files in the IDE or set test.class<\/fail>\r\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\r\n-        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\r\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"\/>\r\n-    <!--\r\n-                =======================\r\n-                TEST DEBUGGING SECTION\r\n-                =======================\r\n-            -->\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\r\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\r\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\r\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\r\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\r\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\r\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"\/>\r\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"\/>\r\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\r\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"\/>\r\n-    <!--\r\n-                =========================\r\n-                APPLET EXECUTION SECTION\r\n-                =========================\r\n-            -->\r\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\r\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\r\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\r\n-            <customize>\r\n-                <arg value=\"${applet.url}\"\/>\r\n-            <\/customize>\r\n-        <\/j2seproject1:java>\r\n-    <\/target>\r\n-    <!--\r\n-                =========================\r\n-                APPLET DEBUGGING  SECTION\r\n-                =========================\r\n-            -->\r\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\r\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\r\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\r\n-            <customize>\r\n-                <arg value=\"${applet.url}\"\/>\r\n-            <\/customize>\r\n-        <\/j2seproject3:debug>\r\n-    <\/target>\r\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"\/>\r\n-    <!--\r\n-                ===============\r\n-                CLEANUP SECTION\r\n-                ===============\r\n-            -->\r\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\r\n-        <property location=\"${build.dir}\/built-clean.properties\" name=\"built-clean.properties\"\/>\r\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"\/>\r\n-    <\/target>\r\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\r\n-        <echo level=\"warn\" message=\"Cycle detected: FXSlideShow was already built\"\/>\r\n-    <\/target>\r\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\r\n-        <mkdir dir=\"${build.dir}\"\/>\r\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"\/>\r\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"\/>\r\n-        <antcall target=\"-warn-already-built-clean\"\/>\r\n-        <propertyfile file=\"${built-clean.properties}\">\r\n-            <entry key=\"${basedir}\" value=\"\"\/>\r\n-        <\/propertyfile>\r\n-    <\/target>\r\n-    <target depends=\"init\" name=\"-do-clean\">\r\n-        <delete dir=\"${build.dir}\"\/>\r\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"\/>\r\n-    <\/target>\r\n-    <target name=\"-post-clean\">\r\n-        <!-- Empty placeholder for easier customization. -->\r\n-        <!-- You can override this target in the ..\/build.xml file. -->\r\n-    <\/target>\r\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"\/>\r\n-    <target name=\"-check-call-dep\">\r\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"\/>\r\n-        <condition property=\"should.call.dep\">\r\n-            <and>\r\n-                <not>\r\n-                    <isset property=\"already.built.${call.subproject}\"\/>\r\n-                <\/not>\r\n-                <available file=\"${call.script}\"\/>\r\n-            <\/and>\r\n-        <\/condition>\r\n-    <\/target>\r\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\r\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\r\n-            <propertyset>\r\n-                <propertyref prefix=\"transfer.\"\/>\r\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"\/>\r\n-            <\/propertyset>\r\n-        <\/ant>\r\n-    <\/target>\r\n-<\/project>\r\n","filename":"apps\/toys\/FXSlideShow\/nbproject\/build-impl.xml","additions":0,"deletions":1422,"binary":false,"changes":1422,"status":"deleted"},{"patch":"@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=f91f021f\n-build.xml.script.CRC32=462e7dcb\n-build.xml.stylesheet.CRC32=28e38971@1.38.2.45\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject\/build-impl.xml.data.CRC32=f91f021f\n-nbproject\/build-impl.xml.script.CRC32=36428af8\n-nbproject\/build-impl.xml.stylesheet.CRC32=c12040a1@1.47.1.46\n","filename":"apps\/toys\/FXSlideShow\/nbproject\/genfiles.properties","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,89 +0,0 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}\/ap-source-output\n-application.title=FXSlideShow\n-application.vendor=kcr\n-build.classes.dir=${build.dir}\/classes\n-build.classes.excludes=**\/*.java,**\/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}\/generated\n-build.generated.sources.dir=${build.dir}\/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}\/test\/classes\n-build.test.results.dir=${build.dir}\/test\/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}\/FXSlideShow.jar\n-dist.javadoc.dir=${dist.dir}\/javadoc\n-endorsed.classpath=\n-excludes=\n-includes=**\n-jar.archive.disabled=${jnlp.enabled}\n-jar.compress=false\n-jar.index=${jnlp.enabled}\n-javac.classpath=\\\n-    ${jfxbuild.jfxrt.jar}\n-# Space-separated list of extra javac options\n-compile.patch=@..\/..\/..\/build\/compile.args\n-javac.compilerargs=${compile.patch} -XDignore.symbol.file\n-javac.deprecation=false\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=1.9\n-javac.target=1.9\n-javac.test.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}:\\\n-    ${libs.junit.classpath}:\\\n-    ${libs.junit_4.classpath}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n-javadoc.private=false\n-javadoc.splitindex=true\n-javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-jnlp.codebase.type=no.codebase\n-jnlp.descriptor=application\n-jnlp.enabled=false\n-jnlp.mixed.code=default\n-jnlp.offline-allowed=false\n-jnlp.signed=false\n-jnlp.signing=\n-jnlp.signing.alias=\n-jnlp.signing.keystore=\n-main.class=fxslideshow.FXSlideShow\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}\/META-INF\n-mkdist.disabled=false\n-platform.active=JDK_1.9\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project\n-# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value\n-# or test-sys-prop.name=value to set system properties for unit tests):\n-run.patch=@..\/..\/..\/build\/run.args\n-run.jvmargs=-ea ${run.patch} \n-run.test.classpath=\\\n-    ${javac.test.classpath}:\\\n-    ${build.test.classes.dir}\n-source.encoding=UTF-8\n-src.dir=src\/\n-test.src.dir=test\n","filename":"apps\/toys\/FXSlideShow\/nbproject\/project.properties","additions":0,"deletions":89,"binary":false,"changes":89,"status":"deleted"},{"patch":"@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.java.j2seproject<\/type>\n-    <configuration>\n-        <data xmlns=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <name>FXSlideShow<\/name>\n-            <explicit-platform explicit-source-supported=\"true\"\/>\n-            <source-roots>\n-                <root id=\"src.dir\"\/>\n-            <\/source-roots>\n-            <test-roots>\n-                <root id=\"test.src.dir\"\/>\n-            <\/test-roots>\n-        <\/data>\n-        <references xmlns=\"http:\/\/www.netbeans.org\/ns\/ant-project-references\/1\"\/>\n-    <\/configuration>\n-<\/project>\n","filename":"apps\/toys\/FXSlideShow\/nbproject\/project.xml","additions":0,"deletions":17,"binary":false,"changes":17,"status":"deleted"},{"patch":"@@ -1,663 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package fxslideshow;\n-\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.logging.Handler;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-\n-import javafx.animation.Animation;\n-import javafx.animation.FadeTransition;\n-import javafx.animation.Transition;\n-import javafx.animation.TranslateTransition;\n-import javafx.application.Application;\n-import javafx.application.Platform;\n-import javafx.concurrent.Task;\n-import javafx.event.EventHandler;\n-import javafx.geometry.Rectangle2D;\n-import javafx.scene.Scene;\n-import javafx.scene.control.ProgressBar;\n-import javafx.scene.image.Image;\n-import javafx.scene.image.ImageView;\n-import javafx.scene.input.KeyEvent;\n-import javafx.scene.layout.StackPane;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Screen;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class FXSlideShow extends Application {\n-\n-    \/\/ arguments\/switches\n-    static boolean debug = false;\n-    static boolean isEmbedded =\n-            (Boolean.parseBoolean(System.getProperty(\"com.sun.javafx.isEmbedded\", \"false\")));\n-    static boolean preScale = true;\n-    static boolean bigSize = false;\n-    static boolean randomize = false;\n-    static boolean loop = false;\n-    static boolean savePrevious = true;\n-    static int waitTimeMillis = 0;\n-    \/\/ internal variables\n-    static int stageWidth = 800;\n-    static int stageHeight = 800;\n-    static int scaleWidth;\n-    static int scaleHeight;\n-    static Files imageFiles = new Files();\n-    String curentImageName = null;\n-    static Image brokenImage;\n-    long lastImageTime = 0;\n-    Stage stage;\n-    private final static Logger LOGGER = Logger.getLogger(FXSlideShow.class.getName());\n-    ProgressBar busyIndicator = new ProgressBar();\n-\n-    private class ImageLoadingTask extends Task<Image> {\n-\n-        String imagePath;\n-        boolean scale;\n-\n-        public ImageLoadingTask(String path) {\n-            imagePath = path;\n-            scale = true;\n-        }\n-\n-        public ImageLoadingTask(String path, boolean scale) {\n-            imagePath = path;\n-            this.scale = scale;\n-        }\n-\n-        public String getPath() {\n-            return imagePath;\n-        }\n-\n-        @Override\n-        protected Image call() throws Exception {\n-            LOGGER.finest(\"Starting to load our Image \" + imagePath );\n-            long start = System.currentTimeMillis();\n-            Image image;\n-            if (preScale && scale) {\n-                image = new Image(imagePath,\n-                        scaleWidth, scaleHeight,\n-                        true, true);\n-            } else {\n-                image = new Image(imagePath);\n-            }\n-            if (image != null && image.isError()) {\n-                image = null;\n-            }\n-            long elapsed = System.currentTimeMillis() - start;\n-            LOGGER.fine(\"Image load time=\"+elapsed+\"ms \" + imagePath);\n-            return image;\n-        }\n-\n-        protected void scheduled() {\n-            LOGGER.finer(\"Scheduled \" + imagePath);\n-        }\n-\n-        @Override\n-        protected void succeeded() {\n-            \/\/note: we are on User Event Thread\n-            super.succeeded();\n-            try {\n-                final Image img = get();\n-                LOGGER.finest(\"applyImage this=\" + img);\n-                if (image[CURRENT].equals(this)) {\n-                    if (busyIndicator.isVisible()) {\n-                        busyIndicator.setVisible(false);\n-                    }\n-                    setCurrentImage(image[CURRENT]);\n-                }\n-            } catch (Exception e) {\n-                e.printStackTrace();\n-            }\n-        }\n-\n-        @Override\n-        protected void cancelled() {\n-            \/\/note: we are on User Event Thread\n-            super.cancelled();\n-            LOGGER.finer(\"Cancelled\" + imagePath);\n-        }\n-\n-        @Override\n-        protected void failed() {\n-            \/\/note: we are on User Event Thread\n-            super.failed();\n-            LOGGER.finer(\"FAILED \" + imagePath);\n-        }\n-\n-        public void load() {\n-            if (this.isRunning()) {\n-                \/\/ more needed here?\n-                this.cancel();\n-            }\n-            executor.execute(this);\n-\n-        }\n-    }\n-\n-    static ExecutorService executor = Executors.newFixedThreadPool(1,\n-            r -> {\n-                Thread t = new Thread(r);\n-\n-                \/\/ Run at low priority to give User Event thread priority\n-                t.setPriority(Thread.MIN_PRIORITY);\n-\n-                \/\/ Set this worker to daemon, so our app will exit on close.\n-                t.setDaemon(true);\n-                return t;\n-            });\n-    static final ImageLoadingTask image[] = new ImageLoadingTask[3];\n-    static final int PREV = 2;\n-    static final int CURRENT = 0;\n-    static final int NEXT = 1;\n-    final ImageView view[] = new ImageView[2];\n-    final Transition transition[] = new Transition[2];\n-\n-    void showHelp() {\n-        System.out.println(\"FXSlideShow [arguments] files\/directories\");\n-        System.out.println(\"Common Arguments\");\n-        System.out.println(\"  -loop     loop through images\");\n-        System.out.println(\"  --wait=X  wait X seconds before auto advancing\");\n-        System.out.println(\"  -random   show images in random order\");\n-        System.out.println(\"\");\n-        System.out.println(\" use left\/right arrows to manually advance\");\n-        System.exit(1);\n-    }\n-\n-    \/\/-------------------------------------\n-    private void setArgument(String name, String value) {\n-        switch (name) {\n-            case \"debug\":\n-                debug = true;\n-                if (value.equals(\"true\")) {\n-                    value = \"FINER\";\n-                }\n-                \/\/ set our application logger level to the provided level\n-                Level level = Level.parse(value.toUpperCase());\n-                Logger.getLogger(\"fxslideshow\").setLevel(level);\n-\n-                \/\/ \"workaround\" for ConsoleLogger limit to INFO\n-                for (Handler h : Logger.getLogger(\"\").getHandlers()) {\n-                    h.setLevel(Level.ALL);\n-                }\n-                break;\n-            case \"loop\":\n-                loop = Boolean.parseBoolean(value);\n-                break;\n-            case \"prescale\":\n-                preScale = Boolean.parseBoolean(value);\n-                break;\n-            case \"random\":\n-                randomize = Boolean.parseBoolean(value);\n-                break;\n-            case \"savePrevious\":\n-                savePrevious = Boolean.parseBoolean(value);\n-                break;\n-            case \"full\":\n-                bigSize = Boolean.parseBoolean(value);\n-                break;\n-            case \"help\":\n-                showHelp();\n-            case \"wait\":\n-                if (value.equals(\"true\")) {\n-                    value = \"10\";\n-                }\n-                waitTimeMillis = Integer.parseInt(value);\n-                LOGGER.finer(\"Setting wait time to \" + waitTimeMillis);\n-                waitTimeMillis *= 1000;\n-                break;\n-            default:\n-                System.out.println(\"Unknown arg: \" + name);\n-                showHelp();\n-                break;\n-        }\n-\n-    }\n-\n-    private void parseArguments() {\n-        Application.Parameters params = getParameters();\n-\n-        Map<String, String> named = params.getNamed();\n-        Set<String> nkeys = named.keySet();\n-        for (String arg : nkeys) {\n-            setArgument(arg, named.get(arg));\n-        }\n-\n-        for (String arg : params.getUnnamed()) {\n-            if (arg.startsWith(\"-\")) {\n-                setArgument(arg.substring(1), \"true\");\n-            } else {\n-                imageFiles.add(arg);\n-            }\n-        }\n-\n-        if (debug) {\n-            imageFiles.debugList();\n-        }\n-    }\n-\n-    private void slideRightTransition(final ImageView in, final ImageView out, boolean right) {\n-\n-        in.setOpacity(1.0);\n-        out.setOpacity(1.0);\n-\n-        double shift = stageWidth;\n-        if (!right) {\n-            shift *= -1;\n-        }\n-\n-        final TranslateTransition slideIn = new TranslateTransition(Duration.millis(3000), in);\n-        slideIn.setFromX(-shift);\n-        slideIn.setToX(0.0);\n-        transition[CURRENT] = slideIn;\n-        slideIn.setOnFinished(t -> out.setTranslateX(0.0));\n-        slideIn.play();\n-\n-        final TranslateTransition slideOut = new TranslateTransition(Duration.millis(3000), out);\n-        slideOut.setFromX(0.0);\n-        slideOut.setToX(shift);\n-        transition[NEXT] = slideOut;\n-        slideOut.setOnFinished(t -> {\n-            out.setVisible(false);\n-            out.setTranslateX(0.0);\n-        });\n-        slideOut.play();\n-    }\n-\n-    private void slideDownTransition(final ImageView in, final ImageView out, boolean down) {\n-\n-        in.setOpacity(1.0);\n-        out.setOpacity(1.0);\n-\n-        double shift = stageHeight;\n-        if (!down) {\n-            shift *= -1;\n-        }\n-\n-        final TranslateTransition slideIn = new TranslateTransition(Duration.millis(3000), in);\n-        slideIn.setFromY(-shift);\n-        slideIn.setToY(0.0);\n-        transition[CURRENT] = slideIn;\n-        slideIn.play();\n-\n-        final TranslateTransition slideOut = new TranslateTransition(Duration.millis(3000), out);\n-        slideOut.setFromY(0.0);\n-        slideOut.setToY(shift);\n-        transition[NEXT] = slideOut;\n-        slideOut.setOnFinished(t -> {\n-            out.setVisible(false);\n-            out.setTranslateY(0.0);\n-        });\n-        slideOut.play();\n-    }\n-\n-    private void fadeTransition(final ImageView in, final ImageView out) {\n-        final FadeTransition ftIn = new FadeTransition(Duration.millis(3000), in);\n-        ftIn.setFromValue(0.0);\n-        ftIn.setToValue(1.0);\n-        ftIn.setCycleCount(0);\n-        transition[CURRENT] = ftIn;\n-        ftIn.setOnFinished(t -> out.setOpacity(1.0));\n-        ftIn.play();\n-\n-\n-        \/\/ first change - this will not be needed.\n-        if (out.getOpacity() != 0.0) {\n-            final FadeTransition ftOut = new FadeTransition(Duration.millis(3000), out);\n-            ftOut.setFromValue(1.0);\n-            ftOut.setToValue(0.0);\n-            ftOut.setCycleCount(0);\n-            transition[NEXT] = ftOut;\n-            ftOut.setOnFinished(t -> {\n-                out.setVisible(false);\n-                out.setOpacity(1.0);\n-            });\n-            ftOut.play();\n-        }\n-    }\n-    private int nextView = 1; \/\/ used to toggle between active image views\n-    private int trans = 0;\n-\n-    private void setCurrentImage(ImageLoadingTask i) {\n-        int fadeOut = nextView;\n-        int fadeIn = (nextView == 1) ? 0 : 1;\n-\n-        Image image;\n-        try {\n-            image = i.get();\n-        } catch (InterruptedException ex) {\n-            Logger.getLogger(FXSlideShow.class.getName()).log(Level.SEVERE, null, ex);\n-            image = null;\n-        } catch (ExecutionException ex) {\n-            Logger.getLogger(FXSlideShow.class.getName()).log(Level.SEVERE, null, ex);\n-            image = null;\n-        }\n-\n-        if (image == null) {\n-            image = brokenImage;\n-        }\n-\n-        \/\/ clean up any running transition\n-        for (int j = 0; j < 2; j++) {\n-            if (transition[j] != null\n-                    && transition[j].getStatus() == Animation.Status.RUNNING) {\n-                transition[j].stop();\n-            }\n-        }\n-\n-        \/\/ reset the views to a known state.\n-        view[fadeIn].setTranslateX(0.0);\n-        view[fadeIn].setTranslateY(0.0);\n-        view[fadeIn].setOpacity(1.0);\n-        view[fadeOut].setTranslateX(0.0);\n-        view[fadeOut].setTranslateY(0.0);\n-        view[fadeOut].setOpacity(1.0);\n-\n-        \/\/prep the incoming view\n-        view[fadeIn].setImage(image);\n-        lastImageTime = System.currentTimeMillis();\n-        view[fadeIn].setVisible(true);\n-\n-        trans = (trans + 1) % 5;\n-        switch (trans) {\n-            case 0:\n-                fadeTransition(view[fadeIn], view[fadeOut]);\n-                break;\n-            case 1:\n-                slideRightTransition(view[fadeIn], view[fadeOut], true);\n-                break;\n-            case 2:\n-                slideRightTransition(view[fadeIn], view[fadeOut], false);\n-                break;\n-            case 3:\n-                slideDownTransition(view[fadeIn], view[fadeOut], true);\n-                break;\n-            case 4:\n-                slideDownTransition(view[fadeIn], view[fadeOut], false);\n-                break;\n-            default:\n-                System.out.println(\"BAD trans\");\n-\n-        }\n-\n-        if (busyIndicator.isVisible()) {\n-            busyIndicator.setVisible(false);\n-        }\n-\n-        nextView = fadeIn;\n-    }\n-\n-    private void nextImage(boolean forward) {\n-\n-        synchronized (image) {\n-            int nextImage;\n-            int prevImage;\n-            String nextPath;\n-\n-            if (forward) {\n-                if (!imageFiles.next()) {\n-                    LOGGER.finest(\"out of images\");\n-                    return;\n-                }\n-                nextImage = NEXT;\n-                prevImage = PREV;\n-                nextPath = imageFiles.nextFilePath();\n-            } else {\n-                if (!imageFiles.previous()) {\n-                    LOGGER.finest(\"out of images\");\n-                    return;\n-                }\n-                nextImage = PREV;\n-                prevImage = NEXT;\n-                nextPath = imageFiles.prevFilePath();\n-            }\n-\n-            if (image[prevImage] != null) {\n-                if (image[prevImage].isRunning()) {\n-                    image[prevImage].cancel();\n-                }\n-                image[prevImage] = null;\n-            }\n-            if (savePrevious) {\n-                image[prevImage] = image[CURRENT];\n-            } else {\n-                if (image[CURRENT].isRunning()) {\n-                    image[CURRENT].cancel();\n-                }\n-            }\n-\n-            image[CURRENT] = image[nextImage];\n-            image[nextImage] = null;\n-\n-            if (image[CURRENT] == null) {\n-                image[CURRENT] = new ImageLoadingTask(\"file:\" + imageFiles.currentFilePath());\n-                executor.execute(image[CURRENT]);\n-                busyIndicator.setVisible(true);\n-                lastImageTime = 0; \/\/ will be reset when loading is complete\n-            } else if (image[CURRENT].isDone()) {\n-                setCurrentImage(image[CURRENT]);\n-            } else {\n-                busyIndicator.setVisible(true);\n-                lastImageTime = 0; \/\/ will be reset when loading is complete\n-            }\n-\n-\n-            if (nextPath != null) {\n-                image[nextImage] = new ImageLoadingTask(\"file:\" + nextPath);\n-                executor.execute(image[nextImage]);\n-            }\n-        }\n-    }\n-    \/\/-------------------------------------\n-    final EventHandler<KeyEvent> keyEventHandler = keyEvent -> {\n-        switch (keyEvent.getCode()) {\n-            case SPACE:\n-            case RIGHT:\n-                nextImage(true);\n-                break;\n-            case LEFT:\n-                nextImage(false);\n-                break;\n-            \/\/Reload\/scale the image\n-            case R:\n-                if (image[CURRENT] != null) {\n-                    image[CURRENT].load();\n-                }\n-                break;\n-            case Q:\n-                Platform.exit();\n-            default:\n-            \/\/ do nothing\n-        }\n-    };\n-\n-    \/\/-------------------------------------\n-    private void sceneBoundsChanged(double width, double height) {\n-        if (width == 0.0 && height == 0.0) {\n-            \/\/ ignore the spurious initial events\n-            return;\n-        }\n-\n-        stageWidth = (int) width;\n-        stageHeight = (int) height;\n-        scaleWidth = (int) width;\n-        scaleHeight = (int) height;\n-        LOGGER.fine(\"Scene now \" + stageWidth + \"x\" + stageHeight);\n-    }\n-\n-    \/**\n-     * initiate a polling thread to manage the \"auto-forward\" capability.\n-     *\/\n-    private void startAutoForward() {\n-        if (waitTimeMillis > 0) {\n-            Thread ft = new Thread(() -> {\n-                LOGGER.finer(\"Starting Autoforward thread\");\n-                while (true) {\n-                    long curr = System.currentTimeMillis();\n-                    long push = lastImageTime + waitTimeMillis;\n-                    long pause = push - curr;\n-                    if (lastImageTime > 0) {\n-                        if (pause < 0) {\n-                            Platform.runLater(() -> {\n-                                LOGGER.finer(\"auto forwarding\");\n-                                nextImage(true);\n-                            });\n-                            pause = waitTimeMillis;\n-                        }\n-                    } else {\n-                        pause = waitTimeMillis;\n-                    }\n-                    try {\n-                        Thread.sleep(pause);\n-                    } catch (Exception e) {\n-                    }\n-                }\n-            });\n-            ft.setDaemon(true); \/\/ So FX app can exit on close\n-            ft.start();\n-        }\n-    }\n-\n-    @Override\n-    public void start(Stage stage) {\n-\n-        this.stage = stage;\n-\n-        if (isEmbedded) {\n-            preScale = true;\n-            bigSize = true;\n-        }\n-\n-        parseArguments();\n-\n-        if (bigSize) {\n-            Rectangle2D primaryScreenBounds = Screen.getPrimary().getVisualBounds();\n-            stageWidth = (int) primaryScreenBounds.getWidth();\n-            stageHeight = (int) primaryScreenBounds.getHeight();\n-            LOGGER.finer(\"isEmbedded - using full screen size \" + stageWidth + \"x\" + stageHeight);\n-        }\n-\n-        if (imageFiles.count() == 0) {\n-            LOGGER.warning(\"Error: no files specified\/found\");\n-            showHelp();\n-        }\n-\n-        if (randomize) {\n-            LOGGER.finer(\"randomizing files\");\n-            imageFiles.randomize();\n-        }\n-\n-        imageFiles.setLoop(loop);\n-\n-        image[PREV] = null;\n-        image[CURRENT] = null;\n-        image[NEXT] = null;\n-\n-        StackPane stack = new StackPane();\n-\n-        final Scene scene = new Scene(stack);\n-\n-        scene.setOnKeyReleased(keyEventHandler);\n-\n-        \/\/ set up our image views, and\n-        \/\/ bindings to layout our ImageView properly.\n-        for (int i = 0; i < 2; i++) {\n-            view[i] = new ImageView();\n-            view[i].setPreserveRatio(true);\n-            view[i].setSmooth(true);\n-            view[i].setX(0);\n-            view[i].setY(0);\n-            view[i].setVisible(false);\n-            if (!preScale) {\n-                view[i].fitWidthProperty().bind(scene.widthProperty());\n-                view[i].fitHeightProperty().bind(scene.heightProperty());\n-            }\n-        }\n-\n-        Rectangle backdrop = new Rectangle();\n-        backdrop.setFill(Color.BLACK);\n-        backdrop.widthProperty().bind(scene.widthProperty());\n-        backdrop.heightProperty().bind(scene.heightProperty());\n-\n-        stage.widthProperty().addListener((ov, t, newval) -> sceneBoundsChanged(scene.getWidth(), scene.getHeight()));\n-        stage.heightProperty().addListener((ov, t, newval) -> sceneBoundsChanged(scene.getWidth(), scene.getHeight()));\n-\n-        stack.getChildren().addAll(\n-                backdrop,\n-                view[0],\n-                view[1],\n-                busyIndicator);\n-\n-        final int initialWidth = stageWidth;\n-        final int initialHeight = stageHeight;\n-\n-        scaleWidth = initialWidth;\n-        scaleHeight = initialHeight;\n-\n-        stage.setTitle(\"Slide Show\");\n-        stage.setScene(scene);\n-\n-        LOGGER.fine(\"Starting size is \" + initialWidth + \"x\" + initialHeight);\n-        stage.setWidth(initialWidth);\n-        stage.setHeight(initialHeight);\n-        stage.setResizable(true);\n-        stage.show();\n-\n-        final ImageLoadingTask bi = new ImageLoadingTask(\"fxslideshow\/broken.png\", false) {\n-            @Override\n-            protected void succeeded() {\n-                try {\n-                    brokenImage = get();\n-                } catch (Exception ex) {\n-                    LOGGER.fine(\"Failed to load broken image icon\");\n-                }\n-            }\n-        };\n-        bi.load();\n-\n-        \/\/ Now queue up our first images.\n-        image[CURRENT] = new ImageLoadingTask(\"file:\" + imageFiles.currentFilePath());\n-        image[CURRENT].load();\n-\n-        final String nf = imageFiles.nextFilePath();\n-        if (nf != null) {\n-            image[NEXT] = new ImageLoadingTask(\"file:\" + nf);\n-            image[NEXT].load();\n-        }\n-\n-        startAutoForward();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/FXSlideShow\/src\/fxslideshow\/FXSlideShow.java","additions":0,"deletions":663,"binary":false,"changes":663,"status":"deleted"},{"patch":"@@ -1,196 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package fxslideshow;\n-\n-import java.io.File;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.logging.Logger;\n-\n-\/**\n- * A class to manage a list of files, recursively collecting them, stepping\n- * through them.\n- *\/\n-public class Files {\n-\n-    private final static Logger LOGGER = Logger.getLogger(Files.class.getName());\n-    ArrayList<String> theFiles = new ArrayList(500);\n-    int prev = -1;\n-    int current = 0;\n-    int next = 1;\n-    private boolean loop = false;\n-\n-    public Files() {\n-        theFiles = new ArrayList(500);\n-        current = 0;\n-    }\n-\n-    \/**\n-     * Get the number of file entries\n-     * @return count\n-     *\/\n-    public int count() {\n-        return theFiles.size();\n-    }\n-\n-    \/**\n-     * Adds the provided path recursively to the file list.\n-     * @param path the file path.\n-     *\/\n-    public void add(String path) {\n-\n-        File f = new File(path);\n-\n-        if (f.exists()) {\n-            if (f.isFile() && f.length() > 0) {\n-                LOGGER.finer(\"found file: \\\"\" + path + \"\\\"\");\n-                theFiles.add(path);\n-            } else if (f.isDirectory()) {\n-                LOGGER.finest(\"process direcory: \\\"\" + path + \"\\\"\");\n-                for (String p : f.list()) {\n-                    add(path + File.separator + p);\n-                }\n-            }\n-        }\n-    }\n-\n-    \/**\n-     * get the current file path.\n-     * @return file path\n-     *\/\n-    public String currentFilePath() {\n-        LOGGER.finest(\"currentFilePath[\" + (current) + \"]=\" + theFiles.get(current));\n-        return theFiles.get(current);\n-    }\n-\n-    \/**\n-     * get the next file path in the sequence\n-     * @return file path\n-     *\/\n-    public String nextFilePath() {\n-        if (next >= 0) {\n-            LOGGER.finest(\"nextFilePath[\" + (next) + \"]=\" + theFiles.get(next));\n-            return theFiles.get(next);\n-        }\n-        return null;\n-    }\n-\n-    \/**\n-     * get the previous file path in the sequence\n-     * @return file path\n-     *\/\n-    public String prevFilePath() {\n-        if (prev >= 0) {\n-            LOGGER.finest(\"prevFilePath[\" + (prev) + \"]=\" + theFiles.get(prev));\n-            return theFiles.get(prev);\n-        }\n-        return null;\n-    }\n-\n-    private int getPrev() {\n-        int p = current - 1;\n-        if (p < 0) {\n-            if (loop) {\n-                p = theFiles.size() -1;\n-            } else {\n-                p =  -1;\n-            }\n-        }\n-        return p;\n-    }\n-\n-    private int getNext() {\n-        int n = current + 1;\n-        if (n >= theFiles.size()) {\n-            if (loop) {\n-                n = 0;\n-            } else {\n-                n =  -1;\n-            }\n-        }\n-        return n;\n-    }\n-\n-    \/**\n-     * Move forward one file\n-     * @return false for end of list\n-     *\/\n-    public boolean next() {\n-        if (current + 1 < theFiles.size()) {\n-            current++;\n-        } else if (loop) {\n-            current = 0;\n-        } else {\n-            return false;\n-        }\n-        next = getNext();\n-        prev = getPrev();\n-\n-        return true;\n-    }\n-\n-    \/**\n-     * Back up one file\n-     * @return false for end of list\n-     *\/\n-    public boolean previous() {\n-        if (current > 0) {\n-            current--;\n-        } else if (loop) {\n-            current = theFiles.size() -1;\n-        } else {\n-            return false;\n-        }\n-\n-        next = getNext();\n-        prev = getPrev();\n-\n-        return true;\n-    }\n-\n-    \/**\n-     * Randomize our file list\n-     *\/\n-    public void randomize() {\n-        Collections.shuffle(theFiles);\n-    }\n-\n-    \/**\n-     * Treat this list as a loop\n-     * @param loop true for endless loop\n-     *\/\n-    public void setLoop(boolean loop) {\n-        this.loop = loop;\n-        prev = getPrev();\n-        next = getNext();\n-    }\n-\n-    public void debugList() {\n-        LOGGER.finer(\"The file list\");\n-        for (String s : theFiles) {\n-            LOGGER.finer(s);\n-        }\n-    }\n-}\n","filename":"apps\/toys\/FXSlideShow\/src\/fxslideshow\/Files.java","additions":0,"deletions":196,"binary":false,"changes":196,"status":"deleted"},{"filename":"apps\/toys\/FXSlideShow\/src\/fxslideshow\/broken.png","binary":true,"status":"deleted"},{"patch":"@@ -1,53 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- You may freely edit this file. See commented blocks below for --><!-- some examples of how to customize the build. --><!-- (If you delete it and reopen the project it will be recreated.) --><!-- By default, only the Clean and Build commands use this build script. --><project name=\"Industrial\" default=\"default\" basedir=\".\" xmlns:fx=\"javafx:com.sun.javafx.tools.ant\">\n-    <description>Builds, tests, and runs the project Industrial.<\/description>\n-    <import file=\"nbproject\/build-impl.xml\"\/>\n-    <!--\n-\n-    There exist several targets which are by default empty and which can be \n-    used for execution of your tasks. These targets are usually executed \n-    before and after some main targets. Those of them relevant for JavaFX project are: \n-\n-      -pre-init:                 called before initialization of project properties\n-      -post-init:                called after initialization of project properties\n-      -pre-compile:              called before javac compilation\n-      -post-compile:             called after javac compilation\n-      -pre-compile-test:         called before javac compilation of JUnit tests\n-      -post-compile-test:        called after javac compilation of JUnit tests\n-      -pre-jfx-jar:              called before FX SDK specific <fx:jar> task\n-      -post-jfx-jar:             called after FX SDK specific <fx:jar> task\n-      -pre-jfx-deploy:           called before FX SDK specific <fx:deploy> task\n-      -post-jfx-deploy:          called after FX SDK specific <fx:deploy> task\n-      -pre-jfx-native:           called just after -pre-jfx-deploy if <fx:deploy> runs in native packaging mode\n-      -post-jfx-native:          called just after -post-jfx-deploy if <fx:deploy> runs in native packaging mode\n-      -post-clean:               called after cleaning build products\n-\n-    (Targets beginning with '-' are not intended to be called on their own.)\n-\n-    Example of inserting a HTML postprocessor after javaFX SDK deployment:\n-\n-        <target name=\"-post-jfx-deploy\">\n-            <basename property=\"jfx.deployment.base\" file=\"${jfx.deployment.jar}\" suffix=\".jar\"\/>\n-            <property name=\"jfx.deployment.html\" location=\"${jfx.deployment.dir}${file.separator}${jfx.deployment.base}.html\"\/>\n-            <custompostprocess>\n-                <fileset dir=\"${jfx.deployment.html}\"\/>\n-            <\/custompostprocess>\n-        <\/target>\n-\n-    Example of calling an Ant task from JavaFX SDK. Note that access to JavaFX SDK Ant tasks must be\n-    initialized; to ensure this is done add the dependence on -check-jfx-sdk-version target:\n-\n-        <target name=\"-post-jfx-jar\" depends=\"-check-jfx-sdk-version\">\n-            <echo message=\"Calling jar task from JavaFX SDK\"\/>\n-            <fx:jar ...>\n-                ...\n-            <\/fx:jar>\n-        <\/target>\n-\n-    For more details about JavaFX SDK Ant tasks go to\n-    http:\/\/docs.oracle.com\/javafx\/2\/deployment\/jfxpub-deployment.htm\n-\n-    For list of available properties check the files\n-    nbproject\/build-impl.xml and nbproject\/jfx-impl.xml.\n-\n-    -->\n-<\/project>\n","filename":"apps\/toys\/Industrial\/build.xml","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-Manifest-Version: 1.0\n-X-COMMENT: Main-Class will be added automatically by build\n-\n","filename":"apps\/toys\/Industrial\/manifest.mf","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,1431 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\n-***         EDIT ..\/build.xml INSTEAD         ***\n-\n-For the purpose of easier reading the script\n-is divided into following sections:\n-\n-  - initialization\n-  - compilation\n-  - jar\n-  - execution\n-  - debugging\n-  - javadoc\n-  - test compilation\n-  - test execution\n-  - test debugging\n-  - applet\n-  - cleanup\n-\n-        -->\n-<project xmlns:j2seproject1=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\" xmlns:j2seproject3=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\" xmlns:jaxrpc=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/jax-rpc\" basedir=\"..\" default=\"default\" name=\"Industrial-impl\">\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n-        <condition>\n-            <not>\n-                <antversion atleast=\"1.8.0\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/fail>\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"\/>\n-    <!-- \n-                ======================\n-                INITIALIZATION SECTION \n-                ======================\n-            -->\n-    <target name=\"-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init\" name=\"-init-private\">\n-        <property file=\"nbproject\/private\/config.properties\"\/>\n-        <property file=\"nbproject\/private\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/private\/private.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n-        <property file=\"${user.properties.file}\"\/>\n-        <!-- The two properties below are usually overridden -->\n-        <!-- by the active platform. Just a fallback. -->\n-        <property name=\"default.javac.source\" value=\"1.4\"\/>\n-        <property name=\"default.javac.target\" value=\"1.4\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n-        <property file=\"nbproject\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/project.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\n-        <j2seproject1:property name=\"platform.home\" value=\"platforms.${platform.active}.home\"\/>\n-        <j2seproject1:property name=\"platform.bootcp\" value=\"platforms.${platform.active}.bootclasspath\"\/>\n-        <j2seproject1:property name=\"platform.compiler\" value=\"platforms.${platform.active}.compile\"\/>\n-        <j2seproject1:property name=\"platform.javac.tmp\" value=\"platforms.${platform.active}.javac\"\/>\n-        <condition property=\"platform.javac\" value=\"${platform.home}\/bin\/javac\">\n-            <equals arg1=\"${platform.javac.tmp}\" arg2=\"$${platforms.${platform.active}.javac}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javac\" value=\"${platform.javac.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.java.tmp\" value=\"platforms.${platform.active}.java\"\/>\n-        <condition property=\"platform.java\" value=\"${platform.home}\/bin\/java\">\n-            <equals arg1=\"${platform.java.tmp}\" arg2=\"$${platforms.${platform.active}.java}\"\/>\n-        <\/condition>\n-        <property name=\"platform.java\" value=\"${platform.java.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.javadoc.tmp\" value=\"platforms.${platform.active}.javadoc\"\/>\n-        <condition property=\"platform.javadoc\" value=\"${platform.home}\/bin\/javadoc\">\n-            <equals arg1=\"${platform.javadoc.tmp}\" arg2=\"$${platforms.${platform.active}.javadoc}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javadoc\" value=\"${platform.javadoc.tmp}\"\/>\n-        <condition property=\"platform.invalid\" value=\"true\">\n-            <or>\n-                <contains string=\"${platform.javac}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.java}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.javadoc}\" substring=\"$${platforms.\"\/>\n-            <\/or>\n-        <\/condition>\n-        <fail unless=\"platform.home\">Must set platform.home<\/fail>\n-        <fail unless=\"platform.bootcp\">Must set platform.bootcp<\/fail>\n-        <fail unless=\"platform.java\">Must set platform.java<\/fail>\n-        <fail unless=\"platform.javac\">Must set platform.javac<\/fail>\n-        <fail if=\"platform.invalid\">\n- The J2SE Platform is not correctly set up.\n- Your active platform is: ${platform.active}, but the corresponding property \"platforms.${platform.active}.home\" is not found in the project's properties files. \n- Either open the project in the IDE and setup the Platform with the same name or add it manually.\n- For example like this:\n-     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property \"platforms.${platform.active}.home\" in a .properties file)\n-  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) \n-  <\/fail>\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"\/>\n-        <condition property=\"splashscreen.available\">\n-            <and>\n-                <not>\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-                <available file=\"${application.splash}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"main.class.available\">\n-            <and>\n-                <isset property=\"main.class\"\/>\n-                <not>\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"profile.available\">\n-            <and>\n-                <isset property=\"javac.profile\"\/>\n-                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"\/>\n-                <matches pattern=\"1\\.[89](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive\">\n-            <or>\n-                <not>\n-                    <istrue value=\"${jar.archive.disabled}\"\/>\n-                <\/not>\n-                <istrue value=\"${not.archive.disabled}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"do.mkdist\">\n-            <and>\n-                <isset property=\"do.archive\"\/>\n-                <isset property=\"libs.CopyLibs.classpath\"\/>\n-                <not>\n-                    <istrue value=\"${mkdist.disabled}\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+manifest.available\">\n-            <and>\n-                <isset property=\"manifest.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+main.class.available\">\n-            <and>\n-                <isset property=\"main.class.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+splashscreen.available\">\n-            <and>\n-                <isset property=\"splashscreen.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+profile.available\">\n-            <and>\n-                <isset property=\"profile.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"have.tests\">\n-            <or\/>\n-        <\/condition>\n-        <condition property=\"have.sources\">\n-            <or>\n-                <available file=\"${src.dir}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"netbeans.home+have.tests\">\n-            <and>\n-                <isset property=\"netbeans.home\"\/>\n-                <isset property=\"have.tests\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"no.javadoc.preview\">\n-            <and>\n-                <isset property=\"javadoc.preview\"\/>\n-                <isfalse value=\"${javadoc.preview}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"run.jvmargs\" value=\"\"\/>\n-        <property name=\"run.jvmargs.ide\" value=\"\"\/>\n-        <property name=\"javac.compilerargs\" value=\"\"\/>\n-        <property name=\"work.dir\" value=\"${basedir}\"\/>\n-        <condition property=\"no.deps\">\n-            <and>\n-                <istrue value=\"${no.dependencies}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javac.debug\" value=\"true\"\/>\n-        <property name=\"javadoc.preview\" value=\"true\"\/>\n-        <property name=\"application.args\" value=\"\"\/>\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"\/>\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"\/>\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n-            <and>\n-                <isset property=\"javadoc.encoding\"\/>\n-                <not>\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"\/>\n-        <property name=\"includes\" value=\"**\"\/>\n-        <property name=\"excludes\" value=\"\"\/>\n-        <property name=\"do.depend\" value=\"false\"\/>\n-        <condition property=\"do.depend.true\">\n-            <istrue value=\"${do.depend}\"\/>\n-        <\/condition>\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"\/>\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath\/p:'${toString:endorsed.classpath.path}'\">\n-            <and>\n-                <isset property=\"endorsed.classpath\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\n-            <isset property=\"profile.available\"\/>\n-        <\/condition>\n-        <property name=\"jar.index\" value=\"false\"\/>\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"\/>\n-        <property name=\"copylibs.rebase\" value=\"true\"\/>\n-        <available file=\"${meta.inf.dir}\/persistence.xml\" property=\"has.persistence.xml\"\/>\n-        <condition property=\"junit.available\">\n-            <or>\n-                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"\/>\n-                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"testng.available\">\n-            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"\/>\n-        <\/condition>\n-        <condition property=\"junit+testng.available\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <istrue value=\"${testng.available}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n-        <fail unless=\"src.dir\">Must set src.dir<\/fail>\n-        <fail unless=\"build.dir\">Must set build.dir<\/fail>\n-        <fail unless=\"dist.dir\">Must set dist.dir<\/fail>\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir<\/fail>\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir<\/fail>\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir<\/fail>\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir<\/fail>\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes<\/fail>\n-        <fail unless=\"dist.jar\">Must set dist.jar<\/fail>\n-    <\/target>\n-    <target name=\"-init-macrodef-property\">\n-        <macrodef name=\"property\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <compilerarg value=\"-processorpath\"\/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"\/>\n-                    <compilerarg line=\"${ap.processors.internal}\"\/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"\/>\n-                    <compilerarg value=\"-s\"\/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"\/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n-        <macrodef name=\"depend\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <sequential>\n-                <depend cache=\"${build.dir}\/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                <\/depend>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"force-recompile\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <sequential>\n-                <fail unless=\"javac.includes\">Must set javac.includes<\/fail>\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n-                    <path>\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"\/>\n-                    <\/path>\n-                    <globmapper from=\"*.java\" to=\"*.class\"\/>\n-                <\/pathconvert>\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"\/>\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"\/>\n-                <delete>\n-                    <files includesfile=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-                <delete>\n-                    <fileset file=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\n-        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <not>\n-                    <isset property=\"test.method\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <isset property=\"test.method\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-init-test-properties\">\n-        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"\/>\n-        <property name=\"test.binarytestincludes\" value=\"\"\/>\n-        <property name=\"test.binaryexcludes\" value=\"\"\/>\n-    <\/target>\n-    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"\/>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\n-        <macrodef name=\"testng\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <union id=\"test.set\"\/>\n-                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"\/>\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" jvm=\"${platform.java}\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"Industrial\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\n-                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"\/>\n-                    <propertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/propertyset>\n-                    <customize\/>\n-                <\/testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-test-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <echo>No tests executed.<\/echo>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\n-        <macrodef name=\"test\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <sequential>\n-                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\n-        <macrodef name=\"test-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\n-        <macrodef name=\"testng-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <condition else=\"-suitename Industrial -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\n-                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"\/>\n-                <\/condition>\n-                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"\/>\n-                <mkdir dir=\"${build.test.results.dir}\"\/>\n-                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\n-                    <customize>\n-                        <customize2\/>\n-                        <jvmarg value=\"-ea\"\/>\n-                        <arg line=\"${testng.debug.mode}\"\/>\n-                        <arg line=\"-d ${build.test.results.dir}\"\/>\n-                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"\/>\n-                        <arg line=\"${testng.cmd.args}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\n-        <macrodef name=\"testng-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element implicit=\"true\" name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2\/>\n-                <\/j2seproject3:testng-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2>\n-                        <syspropertyset>\n-                            <propertyref prefix=\"test-sys-prop.\"\/>\n-                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                        <\/syspropertyset>\n-                    <\/customize2>\n-                <\/j2seproject3:testng-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"\/>\n-    <!--\n-                pre NB7.2 profiling section; consider it deprecated\n-            -->\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"\/>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\n-        <macrodef name=\"resolve\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"profile\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property environment=\"env\"\/>\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"\/>\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-                    <arg line=\"${application.args}\"\/>\n-                    <classpath>\n-                        <path path=\"${run.classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm<\/fail>\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent<\/fail>\n-    <\/target>\n-    <!--\n-                end of pre NB7.2 profiling section\n-            -->\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n-        <macrodef name=\"nbjpdastart\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"name\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"\" name=\"stopclassname\"\/>\n-            <sequential>\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <bootclasspath>\n-                        <path path=\"${platform.bootcp}\"\/>\n-                    <\/bootclasspath>\n-                <\/nbjpdastart>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"nbjpdareload\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"\/>\n-            <sequential>\n-                <nbjpdareload>\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n-                        <include name=\"${fix.includes}*.class\"\/>\n-                    <\/fileset>\n-                <\/nbjpdareload>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-debug-args\">\n-        <exec executable=\"${platform.java}\" outputproperty=\"version-output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition property=\"have-jdk-older-than-1.4\">\n-            <or>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\n-            <istrue value=\"${have-jdk-older-than-1.4}\"\/>\n-        <\/condition>\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n-            <isset property=\"debug.transport\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n-        <macrodef name=\"debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-java\">\n-        <macrodef name=\"java\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"jvm\" name=\"jvm\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-copylibs\">\n-        <macrodef name=\"copylibs\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n-                    <path path=\"${run.classpath}\"\/>\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"\/>\n-                <\/pathconvert>\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"\/>\n-                    <chainedmapper>\n-                        <flattenmapper\/>\n-                        <filtermapper>\n-                            <replacestring from=\" \" to=\"%20\"\/>\n-                        <\/filtermapper>\n-                        <globmapper from=\"*\" to=\"lib\/*\"\/>\n-                    <\/chainedmapper>\n-                <\/pathconvert>\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"\/>\n-                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n-                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-                    <manifest>\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"\/>\n-                        <customize\/>\n-                    <\/manifest>\n-                <\/copylibs>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-presetdef-jar\">\n-        <presetdef name=\"jar\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-            <\/jar>\n-        <\/presetdef>\n-    <\/target>\n-    <target name=\"-init-ap-cmdline-properties\">\n-        <property name=\"annotation.processing.enabled\" value=\"true\"\/>\n-        <property name=\"annotation.processing.processors.list\" value=\"\"\/>\n-        <property name=\"annotation.processing.processor.options\" value=\"\"\/>\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"\/>\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"\/>\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"\/>\n-        <condition property=\"ap.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n-            <isfalse value=\"${annotation.processing.enabled}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n-        <property name=\"ap.cmd.line.internal\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"\/>\n-    <!--\n-                ===================\n-                COMPILATION SECTION\n-                ===================\n-            -->\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n-        <property location=\"${build.dir}\/built-jar.properties\" name=\"built-jar.properties\"\/>\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n-        <echo level=\"warn\" message=\"Cycle detected: Industrial was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"\/>\n-        <antcall target=\"-warn-already-built-jar\"\/>\n-        <propertyfile file=\"${built-jar.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"\/>\n-    <target depends=\"init\" name=\"-check-automatic-build\">\n-        <available file=\"${build.classes.dir}\/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n-        <antcall target=\"clean\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n-        <mkdir dir=\"${build.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\n-        <pathconvert property=\"build.generated.subdirs\">\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"*\"\/>\n-            <\/dirset>\n-        <\/pathconvert>\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"\/>\n-        <copy todir=\"${build.classes.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy todir=\"${build.classes.dir}\/META-INF\">\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"\/>\n-    <target name=\"-pre-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile\/>\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"\/>\n-    <!--\n-                ====================\n-                JAR BUILDING SECTION\n-                ====================\n-            -->\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"\/>\n-        <mkdir dir=\"${dist.jar.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"\/>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Profile\" value=\"${javac.profile}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"\/>\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}\/META-INF\"\/>\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF\/${splashscreen.basename}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"\/>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <echo level=\"info\">${platform.java} -jar \"${dist.jar.resolved}\"<\/echo>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\n-        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"\/>\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\n-            <path path=\"${run.classpath}\"\/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"\/>\n-        <\/pathconvert>\n-        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"\/>\n-    <\/target>\n-    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\n-        <delete>\n-            <fileset file=\"${tmp.manifest.file}\"\/>\n-        <\/delete>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"\/>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"\/>\n-    <target name=\"-post-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"\/>\n-    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"\/>\n-    <!--\n-                =================\n-                EXECUTION SECTION\n-                =================\n-            -->\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n-        <j2seproject1:java>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <target name=\"-do-not-recompile\">\n-        <property name=\"javac.includes.binary\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single\" name=\"run-single\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"\/>\n-    <\/target>\n-    <!--\n-                =================\n-                DEBUGGING SECTION\n-                =================\n-            -->\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n-        <j2seproject3:debug>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"\/>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"\/>\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"\/>\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"\/>\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\n-        <fail unless=\"fix.includes\">Must set fix.includes<\/fail>\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n-        <j2seproject1:nbjpdareload\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"\/>\n-    <!--\n-                =================\n-                PROFILING SECTION\n-                =================\n-            -->\n-    <!--\n-                pre NB7.2 profiler integration\n-            -->\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class<\/fail>\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"${profile.class}\"\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/profile>\n-    <\/target>\n-    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\n-            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <test name=\"${profile.class}\"\/>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-            <syspropertyset>\n-                <propertyref prefix=\"test-sys-prop.\"\/>\n-                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-            <\/syspropertyset>\n-            <formatter type=\"brief\" usefile=\"false\"\/>\n-            <formatter type=\"xml\"\/>\n-        <\/junit>\n-    <\/target>\n-    <!--\n-                end of pre NB72 profiling section\n-            -->\n-    <target if=\"netbeans.home\" name=\"-profile-check\">\n-        <condition property=\"profiler.configured\">\n-            <or>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"\/>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"\/>\n-            <\/or>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\n-        <startprofiler\/>\n-        <antcall target=\"run\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"\/>\n-    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"test-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcal target=\"run-test-with-main\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-applet\"\/>\n-    <\/target>\n-    <!--\n-                ===============\n-                JAVADOC SECTION\n-                ===============\n-            -->\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n-        <mkdir dir=\"${dist.javadoc.dir}\"\/>\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n-            <and>\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <exec executable=\"${platform.java}\" failonerror=\"false\" outputproperty=\"platform.version.output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\n-            <matches multiline=\"true\" pattern=\"1\\.[56](\\..*)?\" string=\"${platform.version.output}\"\/>\n-        <\/condition>\n-        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" executable=\"${platform.javadoc}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n-            <classpath>\n-                <path path=\"${javac.classpath}\"\/>\n-            <\/classpath>\n-            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/*.java\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/*.java\"\/>\n-                <exclude name=\"*.java\"\/>\n-            <\/fileset>\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"\/>\n-        <\/javadoc>\n-        <copy todir=\"${dist.javadoc.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-        <\/copy>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n-        <nbbrowse file=\"${dist.javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"\/>\n-    <!--\n-                =========================\n-                TEST COMPILATION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n-        <mkdir dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"\/>\n-    <target name=\"-pre-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"\/>\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"\/>\n-    <!--\n-                =======================\n-                TEST EXECUTION SECTION\n-                =======================\n-            -->\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n-        <j2seproject3:test includes=\"${includes}\" testincludes=\"**\/*Test.java\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"\/>\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"\/>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"\/>\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"\/>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\n-        <fail unless=\"test.class\">Must select some files in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"\/>\n-    <!--\n-                =======================\n-                TEST DEBUGGING SECTION\n-                =======================\n-            -->\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"\/>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"\/>\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"\/>\n-    <!--\n-                =========================\n-                APPLET EXECUTION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <!--\n-                =========================\n-                APPLET DEBUGGING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"\/>\n-    <!--\n-                ===============\n-                CLEANUP SECTION\n-                ===============\n-            -->\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n-        <property location=\"${build.dir}\/built-clean.properties\" name=\"built-clean.properties\"\/>\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n-        <echo level=\"warn\" message=\"Cycle detected: Industrial was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"\/>\n-        <antcall target=\"-warn-already-built-clean\"\/>\n-        <propertyfile file=\"${built-clean.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init\" name=\"-do-clean\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"\/>\n-    <\/target>\n-    <target name=\"-post-clean\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"\/>\n-    <target name=\"-check-call-dep\">\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"\/>\n-        <condition property=\"should.call.dep\">\n-            <and>\n-                <not>\n-                    <isset property=\"already.built.${call.subproject}\"\/>\n-                <\/not>\n-                <available file=\"${call.script}\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n-            <propertyset>\n-                <propertyref prefix=\"transfer.\"\/>\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"\/>\n-            <\/propertyset>\n-        <\/ant>\n-    <\/target>\n-<\/project>\n","filename":"apps\/toys\/Industrial\/nbproject\/build-impl.xml","additions":0,"deletions":1431,"binary":false,"changes":1431,"status":"deleted"},{"patch":"@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=f90a43f2\n-build.xml.script.CRC32=9a6cc0a2\n-build.xml.stylesheet.CRC32=8064a381@1.74.2.48\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject\/build-impl.xml.data.CRC32=f90a43f2\n-nbproject\/build-impl.xml.script.CRC32=f5ced176\n-nbproject\/build-impl.xml.stylesheet.CRC32=876e7a8f@1.74.2.48\n","filename":"apps\/toys\/Industrial\/nbproject\/genfiles.properties","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,77 +0,0 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}\/ap-source-output\n-application.title=Industrial\n-application.vendor=ddhill\n-build.classes.dir=${build.dir}\/classes\n-build.classes.excludes=**\/*.java,**\/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}\/generated\n-build.generated.sources.dir=${build.dir}\/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}\/test\/classes\n-build.test.results.dir=${build.dir}\/test\/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-# Files in build.classes.dir which should be excluded from distribution jar\n-dist.archive.excludes=\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}\/Industrial.jar\n-dist.javadoc.dir=${dist.dir}\/javadoc\n-endorsed.classpath=\n-excludes=\n-file.reference.Industrial-src=src\n-includes=**\n-jar.compress=false\n-javac.classpath=\n-# Space-separated list of extra javac options\n-compile.patch=@..\/..\/..\/build\/compile.args\n-javac.compilerargs=${compile.patch} \n-javac.deprecation=false\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=1.9\n-javac.target=1.9\n-javac.test.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n-javadoc.private=false\n-javadoc.splitindex=true\n-javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-main.class=industrial.Industrial\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}\/META-INF\n-mkdist.disabled=false\n-platform.active=JDK_1.9\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project.\n-# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n-# To set system properties for unit tests define test-sys-prop.name=value:\n-run.patch=@..\/..\/..\/build\/run.args\n-run.jvmargs=${run.patch} \n-run.test.classpath=\\\n-    ${javac.test.classpath}:\\\n-    ${build.test.classes.dir}\n-source.encoding=UTF-8\n-src.dir=${file.reference.Industrial-src}\n","filename":"apps\/toys\/Industrial\/nbproject\/project.properties","additions":0,"deletions":77,"binary":false,"changes":77,"status":"deleted"},{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.java.j2seproject<\/type>\n-    <configuration>\n-        <data xmlns=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <name>Industrial<\/name>\n-            <explicit-platform explicit-source-supported=\"true\"\/>\n-            <source-roots>\n-                <root id=\"src.dir\"\/>\n-            <\/source-roots>\n-            <test-roots\/>\n-        <\/data>\n-    <\/configuration>\n-<\/project>\n","filename":"apps\/toys\/Industrial\/nbproject\/project.xml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,154 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/import com.sun.javafx.perf.PerformanceTracker;\n-import javafx.animation.KeyFrame;\n-import javafx.animation.Timeline;\n-import javafx.collections.ObservableList;\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n-import javafx.scene.chart.XYChart;\n-import javafx.util.Duration;\n-\n-\/*\n- This is a very simple \"Controller\" for our MVC.\n- It manipulates the data in our Model on a polled basis.\n-\n- Note: The manipulation of our Model data is done on a timeline which is\n- run on the JavaFX event thread.\n-\n- This polling could be done on a separate thread, but care would need to be\n- taken with the update of the model elements to ensure that all of the updates\n- end up on the event thread.\n- *\/\n-public class Controller implements EventHandler<ActionEvent> {\n-\n-    double tankVolume;\n-\n-    double[] pumpRates = {\n-        0.0, \/\/ off\n-        3.0, \/\/ low\n-        5.0, \/\/ medium\n-        10.0, \/\/ high\n-    };\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/    PerformanceTracker tracker;\n-    Model model;\n-\n-    public Controller(\n-            Model model \/* , PerformanceTracker tracker *\/ ) {\n-\n-        this.model = model;\n-\/\/        this.tracker = tracker;\n-\n-        tankVolume = 25.0;\n-    }\n-\n-    private long lastTime = 0;\n-    private long lastDataPoint = 0;\n-    private long seconds = 0;\n-    double pumpSpeed = 0;\n-    double foutA = 0.0;\n-    double foutB = 0.0;\n-\n-    @Override\n-    public void handle(ActionEvent t) {\n-        long currtime = System.currentTimeMillis();\n-        double deltaTime = (currtime - lastTime) \/ 1000.0;\n-        if (lastTime > 0) {\n-            double tankChange;\n-            double frateP, frateA, frateB;\n-\n-            frateP = model.getValveFlowRateProperty(Model.PUMP).get();\n-            frateA = model.getValveFlowRateProperty(Model.VALVE_A).get();\n-            frateB = model.getValveFlowRateProperty(Model.VALVE_B).get();\n-\n-            tankChange = frateP * deltaTime;\n-\n-            tankChange -= frateA * deltaTime;\n-\n-            tankChange -= frateB * deltaTime;\n-\n-            tankVolume += tankChange;\n-\n-            if (tankVolume < 5.0) {\n-                tankVolume = 5.0;\n-            }\n-            if (tankVolume > 100.0) {\n-                tankVolume = 100.0;\n-            }\n-\n-            model.getTankFillPercentProperty().set(tankVolume);\n-\n-            double tankHighWater = model.getTankHighWaterPercentProperty().get();\n-            double tankLowWater = model.getTankLowWaterPercentProperty().get();\n-\n-            if (tankVolume > tankHighWater) {\n-                \/\/ stop the pump\n-                frateP = 0.0;\n-                model.getValveFlowRateProperty(Model.PUMP).set(frateP);\n-            } else if (tankVolume < tankLowWater) {\n-                \/\/ below low water go to high\n-                frateP = 10.0;\n-                model.getValveFlowRateProperty(Model.PUMP).set(frateP);\n-            }\n-\n-            if ((currtime - lastDataPoint) > (Industrial.historyInterval * 1000)) {\n-                ObservableList pump = model.getFlowRateHistory(Model.PUMP).getData();\n-                ObservableList va = model.getFlowRateHistory(Model.VALVE_A).getData();\n-                ObservableList vb = model.getFlowRateHistory(Model.VALVE_B).getData();\n-                ObservableList fp = model.getFillPercentHistory().getData();\n-\n-                \/\/ our aprox 1 second data snapshot\n-                if (pump.size() > Industrial.historyPointsToKeep) {\n-                    pump.remove(0);\n-                    va.remove(0);\n-                    vb.remove(0);\n-                    fp.remove(0);\n-                }\n-\n-                pump.add(new XYChart.Data(seconds, frateP));\n-                va.add(new XYChart.Data(seconds, frateA));\n-                vb.add(new XYChart.Data(seconds, frateB));\n-                fp.add(new XYChart.Data(seconds, tankVolume));\n-\n-                seconds+=Industrial.historyInterval;\n-                lastDataPoint = currtime;\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/                int fpsValue = (int) Math.round(tracker.getAverageFPS());\n-\/\/                model.getFPSProperty().set(fpsValue);\n-            }\n-        } else {\n-            lastDataPoint = currtime;\n-        }\n-        lastTime = currtime;\n-\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Controller.java","additions":0,"deletions":154,"binary":false,"changes":154,"status":"deleted"},{"patch":"@@ -1,77 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-import static industrial.Industrial.chartWidth;\n-import javafx.scene.Group;\n-import javafx.scene.control.TextArea;\n-import javafx.scene.control.TextField;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.text.Font;\n-\n-\/**\n- *\n- * @author ddhill\n- *\/\n-public class Help {\n-\n-    static final String helpText =\n-            \"Welcome to the Industrial Demo\" +\n-            \"\\n\\n\" +\n-            \"This is a simplistic system containing a holding tank that is fed \" +\n-            \"by a pump, and is drained by two flow controlled outlets.\" +\n-            \"The change in the level of the tank is computed about 4 times a \" +\n-            \"second and is the sum of the incoming rate minus the outgoing rates.\" +\n-            \"\\n\\n\" +\n-            \"There is a high and low water mark indicated on the tank. \" +\n-            \"When the fill level drops below the low water mark, the pump will \"+\n-            \"be changed to full (10) and above the high water mark, the pump \" +\n-            \"will be turned off (0).\\n\\n\" +\n-            \"The high and low water marks can be controlled with the sliders \" +\n-            \"next to the tanks.\" +\n-            \"\\n\\n\" +\n-            \"There are two history charts that can be shown\/hidden using the \" +\n-            \"buttons. These charts will show a sliding window of historical data.\" +\n-            \"\\n\\n\" +\n-            \"Click the Help button to hide this text.\";\n-\n-    static Group createHelp(int width, int height) {\n-\n-        TextArea fd = new TextArea();\n-        fd.setEditable(false);\n-        fd.setWrapText(true);\n-        fd.setText(helpText);\n-        fd.setFont(new Font(18));\n-        fd.setPrefWidth(width);\n-        fd.setPrefHeight(height);\n-\n-        return  new Group(\n-                fd\n-        );\n-\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Help.java","additions":0,"deletions":77,"binary":false,"changes":77,"status":"deleted"},{"patch":"@@ -1,504 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-\/*\n- Todo:\n- Add emergency button\n- Add help text ?\n- *\/\n-\/\/import com.sun.javafx.perf.PerformanceTracker;\n-import javafx.animation.KeyFrame;\n-import javafx.animation.Timeline;\n-import javafx.application.Application;\n-import javafx.beans.value.ObservableValue;\n-import javafx.collections.ListChangeListener;\n-import javafx.event.ActionEvent;\n-import javafx.geometry.Orientation;\n-import javafx.geometry.Rectangle2D;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.chart.LineChart;\n-import javafx.scene.chart.NumberAxis;\n-import javafx.scene.chart.XYChart;\n-import javafx.scene.control.Button;\n-import javafx.scene.control.Label;\n-import javafx.scene.control.Slider;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.LineTo;\n-import javafx.scene.shape.MoveTo;\n-import javafx.scene.shape.Path;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.scene.transform.Scale;\n-import javafx.stage.Screen;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class Industrial extends Application {\n-\n-    Model model = new Model();\n-    Controller controller;\n-    Timeline controllerTimeline;\n-\n-    Pump pump;\n-\n-    Tank tank;\n-\n-    Slider rateP, rateA, rateB;\n-\n-    Slider highWater, lowWater;\n-\n-    Valve valveA, valveB;\n-\n-    Pipe pipeIn;\n-    Pipe pipeAIn, pipeAOut;\n-    Pipe pipeBIn, pipeBOut;\n-\n-    Text fps;\n-\n-    Button chartFlowButton;\n-    Button chartFillButton;\n-\n-    Group flowChartGroup;\n-    Group chartFillGroup;\n-    Group chartFlowGroup;\n-    Group helpGroup;\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/    PerformanceTracker tracker;\n-\n-    static final int layoutSizeX = 1280;\n-    static final int layoutSizeY = 720;\n-\n-    static final int chartWidth = 800;\n-    static final int chartHeight = 500;\n-\n-    static final int historyPointsToKeep = 60;\n-    static final int historyInterval = 1;\n-\n-    Scale rootTransform = new Scale(1.0, 1.0, 0.0, 0.0);\n-\n-    @Override\n-    public void start(Stage primaryStage) {\n-\n-        Label title = new Label(\"Primary Holding Tank\");\n-        title.setFont(new Font(40));\n-        title.setTranslateX(430);\n-        title.setTranslateY(20);\n-\n-        \/\/****************************\n-        pipeIn = new Pipe(new Path(\n-                new MoveTo(0, 550),\n-                new LineTo(440, 550)));\n-\n-        pump = new Pump(model);\n-        Group pumpGroup = pump.getGroup();\n-        pumpGroup.setTranslateX(110);\n-        pumpGroup.setTranslateY(440);\n-        pumpGroup.setScaleX(.5);\n-        pumpGroup.setScaleY(.5);\n-\n-        Label nameP = new Label(\"Feed Pump\");\n-        nameP.setFont(new Font(22));\n-        nameP.setTranslateX(120);\n-        nameP.setTranslateY(450);\n-\n-        Label flowRateP = new Label(\"Flow Rate:\");\n-        flowRateP.setTranslateX(75);\n-        flowRateP.setTranslateY(635);\n-\n-        rateP = new Slider(0.0, 10.0, 3);\n-        rateP.setShowTickLabels(true);\n-        rateP.setShowTickMarks(true);\n-        rateP.setMajorTickUnit(1.0);\n-        rateP.setBlockIncrement(1.0f);\n-        rateP.setSnapToTicks(true);\n-        rateP.setTranslateX(150);\n-        rateP.setTranslateY(630);\n-\n-        \/\/****************************\n-        tank = new Tank(400, 580);\n-        Group tankGroup = tank.getGroup();\n-        tankGroup.setTranslateX(440);\n-        tankGroup.setTranslateY(100);\n-\n-        \/\/****************************\n-        pipeAIn = new Pipe(new Path(\n-                new MoveTo(730, 590),\n-                new LineTo(1040, 590)));\n-\n-        pipeAOut = new Pipe(new Path(\n-                new MoveTo(1135, 590),\n-                new LineTo(layoutSizeX, 590)));\n-\n-        valveA = new Valve();\n-        Group valveAGroup = valveA.getGroup();\n-        valveAGroup.setScaleX(.5);\n-        valveAGroup.setScaleY(.5);\n-        valveAGroup.setTranslateX(1010);\n-        valveAGroup.setTranslateY(520);\n-\n-        Label nameA = new Label(\"Discharge A\");\n-        nameA.setFont(new Font(22));\n-        nameA.setTranslateX(1030);\n-        nameA.setTranslateY(500);\n-\n-        Label flowRateA = new Label(\"Flow Rate:\");\n-        flowRateA.setTranslateX(950);\n-        flowRateA.setTranslateY(635);\n-\n-        rateA = new Slider(0.0, 5.0, 3);\n-        rateA.setShowTickLabels(true);\n-        rateA.setShowTickMarks(true);\n-        rateA.setMajorTickUnit(1.0);\n-        rateA.setBlockIncrement(1.0f);\n-        rateA.setSnapToTicks(true);\n-        rateA.setTranslateX(1025);\n-        rateA.setTranslateY(630);\n-\n-        \/\/****************************\n-        pipeBIn = new Pipe(new Path(\n-                new MoveTo(730, 390),\n-                new LineTo(1040, 390)));\n-\n-        pipeBOut = new Pipe(new Path(\n-                new MoveTo(1135, 390),\n-                new LineTo(layoutSizeX, 390)));\n-\n-        valveB = new Valve();\n-        Group valveBGroup = valveB.getGroup();\n-        valveBGroup.setScaleX(.5);\n-        valveBGroup.setScaleY(.5);\n-        valveBGroup.setTranslateX(1010);\n-        valveBGroup.setTranslateY(320);\n-\n-        Label nameB = new Label(\"Discharge B\");\n-        nameB.setFont(new Font(22));\n-        nameB.setTranslateX(1030);\n-        nameB.setTranslateY(300);\n-\n-        Label flowRateB = new Label(\"Flow Rate:\");\n-        flowRateB.setTranslateX(950);\n-        flowRateB.setTranslateY(435);\n-\n-        rateB = new Slider(0.0, 5.0, 3);\n-        rateB.setShowTickLabels(true);\n-        rateB.setShowTickMarks(true);\n-        rateB.setMajorTickUnit(1.0);\n-        rateB.setBlockIncrement(1.0f);\n-        rateB.setMinorTickCount(4);\n-        rateP.setSnapToTicks(true);\n-        rateB.setTranslateX(1025);\n-        rateB.setTranslateY(430);\n-\n-        \/\/****************************\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/        fps = new Text(\"??? fps\");\n-\/\/        fps.setFont(new Font(25));\n-\/\/        fps.setLayoutX(10);\n-\/\/        fps.setLayoutY(40);\n-\n-        \/\/****************************\n-        lowWater = new Slider(0, 90, 10);\n-        lowWater.setShowTickLabels(true);\n-        lowWater.setShowTickMarks(true);\n-        lowWater.setMajorTickUnit(10.0);\n-        lowWater.setBlockIncrement(1.0f);\n-        lowWater.setMinorTickCount(0);\n-        lowWater.setSnapToTicks(false);\n-        lowWater.setOrientation(Orientation.VERTICAL);\n-        lowWater.setTranslateX(390);\n-        lowWater.setTranslateY(150);\n-        lowWater.setPrefHeight(535);\n-\n-        highWater = new Slider(10, 100, 10);\n-        highWater.setShowTickLabels(true);\n-        highWater.setShowTickMarks(true);\n-        highWater.setMajorTickUnit(10.0);\n-        highWater.setBlockIncrement(1.0f);\n-        highWater.setMinorTickCount(0);\n-        highWater.setSnapToTicks(false);\n-        highWater.setOrientation(Orientation.VERTICAL);\n-        highWater.setTranslateX(875);\n-        highWater.setTranslateY(95);\n-        highWater.setPrefHeight(535);\n-\n-        \/\/****************************\n-\n-        Rectangle chartFlowBG = new Rectangle();\n-        chartFlowBG.setX(0);\n-        chartFlowBG.setY(0);\n-        chartFlowBG.setWidth(chartWidth);\n-        chartFlowBG.setHeight(chartHeight);\n-        chartFlowBG.setFill(Color.ANTIQUEWHITE);\n-        chartFlowBG.setOpacity(0.80);\n-\n-        final NumberAxis xAxisFlow = new NumberAxis();\n-        final NumberAxis yAxisFlow = new NumberAxis();\n-\n-        yAxisFlow.setLabel(\"Flow Rate\");\n-        yAxisFlow.setAutoRanging(false);\n-        yAxisFlow.setLowerBound(0);\n-        yAxisFlow.setUpperBound(10);\n-\n-        xAxisFlow.setLabel(\"Time (sec)\");\n-        xAxisFlow.setAutoRanging(false);\n-        xAxisFlow.setLowerBound(0);\n-        xAxisFlow.setUpperBound(historyPointsToKeep * historyInterval);\n-\n-        LineChart lineChartFlow = new LineChart(xAxisFlow, yAxisFlow);\n-        lineChartFlow.setTitle(\"Flow History\");\n-        lineChartFlow.setPrefSize(chartWidth, chartHeight);\n-        lineChartFlow.setAnimated(false);\n-        lineChartFlow.getData().add(model.getFlowRateHistory(Model.PUMP));\n-        lineChartFlow.getData().add(model.getFlowRateHistory(Model.VALVE_A));\n-        lineChartFlow.getData().add(model.getFlowRateHistory(Model.VALVE_B));\n-        lineChartFlow.setCreateSymbols(false);\n-\n-        chartFlowGroup = new Group(\n-                chartFlowBG,\n-                lineChartFlow\n-        );\n-\n-        chartFlowGroup.setVisible(false);\n-        chartFlowGroup.setTranslateX(200);\n-        chartFlowGroup.setTranslateY(80);\n-\n-        chartFlowButton = new Button(\"Flow History\");\n-        chartFlowButton.setFont(new Font(18));\n-        chartFlowButton.setTranslateX(30.0);\n-        chartFlowButton.setTranslateY(80.0);\n-        chartFlowButton.setOnAction((ActionEvent event) -> {\n-            boolean visible = !chartFlowGroup.isVisible();\n-            chartFlowGroup.setVisible(visible);\n-            if (visible) {\n-                chartFillGroup.setVisible(false);\n-            }\n-        });\n-\n-        \/\/****************************\n-\n-        Rectangle chartFillBG = new Rectangle();\n-        chartFillBG.setX(0);\n-        chartFillBG.setY(0);\n-        chartFillBG.setWidth(chartWidth);\n-        chartFillBG.setHeight(chartHeight);\n-        chartFillBG.setFill(Color.ANTIQUEWHITE);\n-        chartFillBG.setOpacity(0.80);\n-\n-        final NumberAxis xAxisFill = new NumberAxis();\n-        final NumberAxis yAxisFill = new NumberAxis();\n-\n-        yAxisFill.setLabel(\"Fill Percent\");\n-        yAxisFill.setAutoRanging(false);\n-        yAxisFill.setLowerBound(0);\n-        yAxisFill.setUpperBound(100);\n-\n-        xAxisFill.setLabel(\"Time (sec)\");\n-        xAxisFill.setAutoRanging(false);\n-        xAxisFill.setLowerBound(0);\n-        xAxisFill.setUpperBound(historyPointsToKeep * historyInterval);\n-\n-        LineChart lineChartFill = new LineChart(xAxisFill, yAxisFill);\n-        lineChartFill.setTitle(\"Fill History\");\n-        lineChartFill.setPrefSize(chartWidth, chartHeight);\n-        lineChartFill.setAnimated(false);\n-        lineChartFill.getData().add(model.getFillPercentHistory());\n-        lineChartFill.setCreateSymbols(false);\n-\n-        model.getFillPercentHistory().getData().addListener((ListChangeListener.Change c) -> {\n-            XYChart.Data get = (XYChart.Data) model.getFillPercentHistory().getData().get(0);\n-            if (get != null) {\n-\n-                long low = (long) get.getXValue();\n-                long high = low + historyPointsToKeep * historyInterval;\n-                xAxisFill.setLowerBound(low);\n-                xAxisFill.setUpperBound(high);\n-\n-                \/\/ a bit of a cheat, but these are in lock step\n-                \/\/ and it saves us a listener\n-                xAxisFlow.setLowerBound(low);\n-                xAxisFlow.setUpperBound(high);\n-            }\n-        });\n-\n-        chartFillGroup = new Group(\n-                chartFillBG,\n-                lineChartFill\n-        );\n-\n-        chartFillGroup.setVisible(false);\n-        chartFillGroup.setTranslateX(200);\n-        chartFillGroup.setTranslateY(80);\n-\n-        chartFillButton = new Button(\"Fill History\");\n-        chartFillButton.setFont(new Font(18));\n-        chartFillButton.setTranslateX(30.0);\n-        chartFillButton.setTranslateY(120.0);\n-        chartFillButton.setOnAction((ActionEvent event) -> {\n-            boolean visible = !chartFillGroup.isVisible();\n-            chartFillGroup.setVisible(visible);\n-            if (visible) {\n-                chartFlowGroup.setVisible(false);\n-            }\n-        });\n-\n-        \/\/****************************\n-\n-        helpGroup = Help.createHelp(chartWidth, chartHeight);\n-        helpGroup.setVisible(false);\n-        helpGroup.setTranslateX(200);\n-        helpGroup.setTranslateY(80);\n-\n-        Button helpButton = new Button(\"Help\");\n-        helpButton.setFont(new Font(18));\n-        helpButton.setTranslateX(layoutSizeX - 100);\n-        helpButton.setTranslateY(80.0);\n-        helpButton.setOnAction((ActionEvent event) -> {\n-            boolean visible = !helpGroup.isVisible();\n-            helpGroup.setVisible(visible);\n-        });\n-\n-        \/\/****************************\n-\n-        Rectangle backdrop = new Rectangle(0, 0, layoutSizeX, layoutSizeY);\n-        backdrop.setFill(Color.OLDLACE);\n-\n-        \/\/****************************\n-        Group root = new Group(\n-                backdrop,\n-                pipeIn.getGroup(),\n-                pumpGroup,\n-                nameP, flowRateP, rateP,\n-                pipeAIn.getGroup(),\n-                pipeBIn.getGroup(),\n-                tankGroup,\n-                pipeAOut.getGroup(),\n-                valveAGroup,\n-                nameA, flowRateA, rateA,\n-                pipeBOut.getGroup(),\n-                valveBGroup,\n-                nameB, flowRateB, rateB,\n-                lowWater, highWater,\n-                chartFlowButton, chartFlowGroup,\n-                chartFillButton, chartFillGroup,\n-                helpButton, helpGroup,\n-                title\n-        );\n-\n-        root.getTransforms().add(rootTransform);\n-\n-        Rectangle2D primaryScreenBounds = Screen.getPrimary().getVisualBounds();\n-        System.out.println(\"Screen size is \" + primaryScreenBounds);\n-        Scene scene = new Scene(root, layoutSizeX, layoutSizeY);\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/        tracker = PerformanceTracker.getSceneTracker(scene);\n-\n-        controller = new Controller(model \/*, tracker *\/);\n-\n-\/\/        model.getFPSProperty().addListener((ObservableValue<? extends Number> observable, Number oldValue, Number newValue) -> {\n-\/\/            fps.setText(\"\" + newValue.intValue() + \" fps\");\n-\/\/        });\n-\n-        rateP.valueProperty().bindBidirectional(model.getValveFlowRateProperty(Model.PUMP));\n-        rateA.valueProperty().bindBidirectional(model.getValveFlowRateProperty(Model.VALVE_A));\n-        rateB.valueProperty().bindBidirectional(model.getValveFlowRateProperty(Model.VALVE_B));\n-\n-        tank.getFillPercentageProperty().bind(model.getTankFillPercentProperty());\n-        tank.getLowWaterPercentageProperty().bind(model.getTankLowWaterPercentProperty());\n-        tank.getHighWaterPercentageProperty().bind(model.getTankHighWaterPercentProperty());\n-\n-        model.getValveFlowRateProperty(Model.PUMP).addListener((ObservableValue<? extends Number> observable, Number oldValue, Number newValue) -> {\n-            double lowThreshold = 0.5;\n-            double oldv = oldValue.doubleValue();\n-            double newv = newValue.doubleValue();\n-            boolean active = pump.getPumpActive();\n-            if (newv < lowThreshold && active) {\n-                pump.setPumpActive(false);\n-                pump.setPumpRatePercent(0.0);\n-                pipeIn.setFlow(false);\n-            } else {\n-                double ratePercent = newv \/ model.getValveFlowRateProperty(Model.PUMP).getMax();\n-                if (!active) {\n-                    pump.setPumpActive(true);\n-                    pipeIn.setFlow(true);\n-                }\n-                pump.setPumpRatePercent(ratePercent);\n-            }\n-        });\n-\n-        model.getValveFlowRateProperty(Model.VALVE_A).addListener((ObservableValue<? extends Number> observable, Number oldValue, Number newValue) -> {\n-            double lowThreshold = 0.5;\n-            double oldv = oldValue.doubleValue();\n-            double newv = newValue.doubleValue();\n-            if (oldv < lowThreshold && newv > lowThreshold) {\n-                pipeAOut.setFilled(true);\n-                pipeAIn.setFlow(true);\n-            } else if (newv <= lowThreshold && oldv > lowThreshold) {\n-                pipeAOut.setFilled(false);\n-                pipeAIn.setFlow(false);\n-            }\n-        });\n-\n-        model.getValveFlowRateProperty(Model.VALVE_B).addListener((ObservableValue<? extends Number> observable, Number oldValue, Number newValue) -> {\n-            double lowThreshold = 0.5;\n-            double oldv = oldValue.doubleValue();\n-            double newv = newValue.doubleValue();\n-            if (oldv < lowThreshold && newv > lowThreshold) {\n-                pipeBOut.setFilled(true);\n-                pipeBIn.setFlow(true);\n-            } else if (newv <= lowThreshold && oldv > lowThreshold) {\n-                pipeBOut.setFilled(false);\n-                pipeBIn.setFlow(false);\n-            }\n-        });\n-\n-        lowWater.valueProperty().bindBidirectional(model.getTankLowWaterPercentProperty());\n-        highWater.valueProperty().bindBidirectional(model.getTankHighWaterPercentProperty());\n-\n-        scene.widthProperty().addListener((ObservableValue<? extends Number> observableValue, Number oldSceneWidth, Number newSceneWidth) -> {\n-            double scale = (double) newSceneWidth \/ layoutSizeX;\n-            rootTransform.setX(scale);\n-        });\n-        scene.heightProperty().addListener((ObservableValue<? extends Number> observableValue, Number oldSceneHeight, Number newSceneHeight) -> {\n-            double scale = (double) newSceneHeight \/ layoutSizeY;\n-            rootTransform.setY(scale);\n-        });\n-\n-        primaryStage.setTitle(\"Industrial Demo\");\n-        primaryStage.setScene(scene);\n-        primaryStage.show();\n-\n-        \/\/this drives the Controller polling.\n-        final KeyFrame kf = new KeyFrame(Duration.millis(50), controller);\n-        controllerTimeline = new Timeline(kf);\n-        controllerTimeline.setCycleCount(Timeline.INDEFINITE);\n-        controllerTimeline.play();\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Industrial.java","additions":0,"deletions":504,"binary":false,"changes":504,"status":"deleted"},{"patch":"@@ -1,253 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-import java.util.ArrayList;\n-import javafx.beans.property.DoubleProperty;\n-import javafx.beans.property.DoublePropertyBase;\n-import javafx.beans.property.IntegerProperty;\n-import javafx.beans.property.IntegerPropertyBase;\n-import javafx.scene.chart.XYChart;\n-\n-\/*\n- This is a very simple \"Model\" for our MVC.\n- It contains the data elements that are manipulated by our Contoller and\n- are presented by our View.\n- *\/\n-public class Model {\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/    private final IntegerProperty fpsProp = new IntegerPropertyBase(0) {\n-\/\/\n-\/\/        @Override\n-\/\/        public Object getBean() {\n-\/\/            return Model.this;\n-\/\/        }\n-\/\/\n-\/\/        @Override\n-\/\/        public String getName() {\n-\/\/            return \"FPS\";\n-\/\/        }\n-\/\/    };\n-\n-    static final int PUMP = 0;\n-    static final int VALVE_A = 1;\n-    static final int VALVE_B = 2;\n-\n-    \/\/ Tank\n-    private static final double initialFill = 50.0;\n-    private static final double initialHighWater = 90.0;\n-    private static final double initialLowWater = 10.0;\n-\n-    private DoubleProperty fillPercentProp;\n-    private DoubleProperty highPercentProp;\n-    private DoubleProperty lowPercentProp;\n-\n-    \/\/ Valve (A & B)\n-    \/\/  Flow rate\n-    private final ArrayList<ValveRateProperty> valveFlowRates\n-            = new ArrayList<>();\n-\n-    private final ArrayList<XYChart.Series> valveFlowRatesHistory\n-            = new ArrayList<>();\n-\n-    private final XYChart.Series fillPercentHistory;\n-\n-    public class ValveRateProperty extends DoublePropertyBase {\n-\n-        double min, max;\n-        String name;\n-\n-        public ValveRateProperty(String name, double min, double max, double start) {\n-            this.name = name;\n-            this.min = min;\n-            this.max = max;\n-            set(start);\n-        }\n-\n-        @Override\n-        public void invalidated() {\n-            double current = get();\n-            if (current < min) {\n-                set(min);\n-            }\n-            if (current > max) {\n-                set(max);\n-            }\n-        }\n-\n-        @Override\n-        public Object getBean() {\n-            return Model.this;\n-        }\n-\n-        @Override\n-        public String getName() {\n-            return \"valve\" + name;\n-        }\n-\n-        double getMin() {\n-            return min;\n-        }\n-\n-        double getMax() {\n-            return max;\n-        }\n-\n-    }\n-\n-    public Model() {\n-        valveFlowRates.add(new ValveRateProperty(\"pump\", 0.0, 10.0, 0.0));\n-        valveFlowRates.add(new ValveRateProperty(\"valveA\", 0.0, 5.0, 5.0));\n-        valveFlowRates.add(new ValveRateProperty(\"valveB\", 0.0, 5.0, 2.0));\n-\n-        XYChart.Series p = new XYChart.Series();\n-        p.setName(\"pump\");\n-        valveFlowRatesHistory.add(p);\n-\n-        p = new XYChart.Series();\n-        p.setName(\"Valve A\");\n-        valveFlowRatesHistory.add(p);\n-\n-        p = new XYChart.Series();\n-        p.setName(\"Valve B\");\n-        valveFlowRatesHistory.add(p);\n-\n-        fillPercentHistory = new XYChart.Series();\n-        fillPercentHistory.setName(\"Fill Percent\");\n-    }\n-\n-    public DoubleProperty getTankFillPercentProperty() {\n-        if (fillPercentProp == null) {\n-            fillPercentProp = new DoublePropertyBase(initialFill) {\n-\n-                @Override\n-                public void invalidated() {\n-                    if (get() < 0.0) {\n-                        set(0.0);\n-                    }\n-                    if (get() > 100.0) {\n-                        set(100.0);\n-                    }\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Model.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"tankFillPercent\";\n-                }\n-\n-            };\n-        }\n-        return fillPercentProp;\n-    }\n-\n-    public DoubleProperty getTankHighWaterPercentProperty() {\n-        if (highPercentProp == null) {\n-            highPercentProp = new DoublePropertyBase(initialHighWater) {\n-\n-                @Override\n-                public void invalidated() {\n-                    double curr = get();\n-                    if (curr < lowPercentProp.get() + 10.0) {\n-                        set(lowPercentProp.get() + 10.0);\n-                    }\n-                    if (curr > 100.0) {\n-                        set(100.0);\n-                    }\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Model.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"tankHighWaterPercent\";\n-                }\n-\n-            };\n-        }\n-        return highPercentProp;\n-    }\n-\n-    public DoubleProperty getTankLowWaterPercentProperty() {\n-        if (lowPercentProp == null) {\n-            lowPercentProp = new DoublePropertyBase(initialLowWater) {\n-\n-                @Override\n-                public void invalidated() {\n-                    double curr = get();\n-                    if (curr < 0.0) {\n-                        set(0.0);\n-                    }\n-                    if (curr > highPercentProp.get() - 10.0) {\n-                        set(highPercentProp.get() - 10.0);\n-                    }\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Model.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"tankLowWaterPercent\";\n-                }\n-\n-            };\n-        }\n-        return lowPercentProp;\n-    }\n-\n-    public ValveRateProperty getValveFlowRateProperty(int which) {\n-        if (which > valveFlowRates.size()) {\n-            return null;\n-        }\n-        return valveFlowRates.get(which);\n-    }\n-\n-\/\/ FIXME: Needs public performance tracker API else remove this FPS feature\n-\/\/    public IntegerProperty getFPSProperty() {\n-\/\/        return fpsProp;\n-\/\/    }\n-\n-    public XYChart.Series getFlowRateHistory(int which) {\n-        if (which > valveFlowRatesHistory.size()) {\n-            return null;\n-        }\n-        return valveFlowRatesHistory.get(which);\n-    }\n-\n-    public XYChart.Series getFillPercentHistory() {\n-        return fillPercentHistory;\n-    }\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Model.java","additions":0,"deletions":253,"binary":false,"changes":253,"status":"deleted"},{"patch":"@@ -1,281 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-import javafx.animation.KeyFrame;\n-import javafx.animation.KeyValue;\n-import javafx.animation.Timeline;\n-import javafx.beans.property.BooleanProperty;\n-import javafx.beans.property.BooleanPropertyBase;\n-import javafx.beans.property.ObjectProperty;\n-import javafx.beans.property.ObjectPropertyBase;\n-import javafx.scene.Group;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.Paint;\n-import javafx.scene.shape.Path;\n-import javafx.scene.shape.StrokeLineCap;\n-import javafx.util.Duration;\n-\n-public class Pipe {\n-\n-    Path pipe;\n-    Path pipeFill;\n-    Path pipeAnimation;\n-    Group group;\n-\n-    BooleanProperty fillActive;\n-    BooleanProperty flowActive;\n-\n-    private ObjectProperty<Paint> fillPipeWall;\n-    private ObjectProperty<Paint> fillPipeEmpty;\n-    private ObjectProperty<Paint> fillPipeFull;\n-    private ObjectProperty<Paint> fillPipeFull2;\n-\n-    private Timeline timeline;\n-\n-    public Pipe(Path pipePath) {\n-        pipe = new Path(pipePath.getElements());\n-        pipe.setStrokeWidth(30);\n-        pipe.setStroke(fillPipeWallProperty().get());\n-\n-        pipeFill = new Path(pipePath.getElements());\n-        pipeFill.setStrokeWidth(20);\n-\n-        double pulseLength = 30;\n-\n-        pipeAnimation = new Path(pipePath.getElements());\n-        pipeAnimation.setStrokeWidth(pipeFill.getStrokeWidth());\n-        pipeAnimation.getStrokeDashArray().setAll(\n-                pulseLength, pulseLength\n-        );\n-        pipeAnimation.strokeLineCapProperty().setValue(StrokeLineCap.BUTT);\n-        pipeAnimation.setStroke(fillPipeFull2Property().get());\n-\n-        timeline = new Timeline();\n-        timeline.setCycleCount(Timeline.INDEFINITE);\n-        final KeyValue kv1 = new KeyValue(pipeAnimation.strokeDashOffsetProperty(),0.0);\n-        final KeyValue kv2 = new KeyValue(pipeAnimation.strokeDashOffsetProperty(),pulseLength*2);\n-        final KeyFrame kf = new KeyFrame(Duration.millis(3000), kv1, kv2);\n-        timeline.getKeyFrames().add(kf);\n-        timeline.setRate(-1);\n-\n-        group = new Group();\n-        group.getChildren().addAll(pipe, pipeFill, pipeAnimation);\n-\n-        getFilledProperty().set(true);\n-        getFlowProperty().set(true);\n-    }\n-\n-    private void resetPipeFill() {\n-        if (getFilled()) {\n-            pipeFill.setStroke(fillPipeFullProperty().get());\n-            pipeAnimation.setVisible(true);\n-            if(getFlowProperty().get()) {\n-                timeline.play();\n-            } else {\n-                timeline.pause();\n-            }\n-        } else {\n-            pipeFill.setStroke(fillPipeEmptyProperty().get());\n-            timeline.pause();\n-            pipeAnimation.setVisible(false);\n-        }\n-    }\n-\n-    public final BooleanProperty getFilledProperty() {\n-        if (fillActive == null) {\n-            fillActive = new BooleanPropertyBase() {\n-\n-                @Override\n-                public void invalidated() {\n-                    resetPipeFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pipe.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillActive\";\n-                }\n-            };\n-        }\n-        return fillActive;\n-\n-    }\n-\n-    public void setFilled(boolean on) {\n-        getFilledProperty().set(on);\n-    }\n-\n-    public boolean getFilled() {\n-        return getFilledProperty().get();\n-    }\n-\n-    public final BooleanProperty getFlowProperty() {\n-        if (flowActive == null) {\n-            flowActive = new BooleanPropertyBase() {\n-\n-                @Override\n-                public void invalidated() {\n-                    resetPipeFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pipe.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"flowActive\";\n-                }\n-            };\n-        }\n-        return flowActive;\n-\n-    }\n-\n-    public void setFlow(boolean on) {\n-        getFlowProperty().set(on);\n-    }\n-\n-    public boolean getFlow() {\n-        return getFlowProperty().get();\n-    }\n-\n-\n-    public Group getGroup() {\n-        return group;\n-    }\n-\n-    public final ObjectProperty<Paint> fillPipeWallProperty() {\n-        if (fillPipeWall == null) {\n-            fillPipeWall = new ObjectPropertyBase<Paint>(Color.BLACK) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    pipe.setFill(get());\n-\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pipe.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillPipeWall\";\n-                }\n-\n-            };\n-        }\n-        return fillPipeWall;\n-    }\n-\n-    public final ObjectProperty<Paint> fillPipeFullProperty() {\n-        if (fillPipeFull == null) {\n-            fillPipeFull = new ObjectPropertyBase<Paint>(Color.web(\"#0000FE\")) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    resetPipeFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pipe.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillPipeFull\";\n-                }\n-\n-            };\n-        }\n-        return fillPipeFull;\n-    }\n-\n-    public final ObjectProperty<Paint> fillPipeFull2Property() {\n-        if (fillPipeFull2 == null) {\n-            fillPipeFull2 = new ObjectPropertyBase<Paint>(Color.web(\"#0000E0\")) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    resetPipeFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pipe.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillPipeFull2\";\n-                }\n-\n-            };\n-        }\n-        return fillPipeFull2;\n-    }\n-\n-    public final ObjectProperty<Paint> fillPipeEmptyProperty() {\n-        if (fillPipeEmpty == null) {\n-            fillPipeEmpty = new ObjectPropertyBase<Paint>(Color.LIGHTGREY) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    resetPipeFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pipe.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillPipeEmpty\";\n-                }\n-\n-            };\n-        }\n-        return fillPipeEmpty;\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Pipe.java","additions":0,"deletions":281,"binary":false,"changes":281,"status":"deleted"},{"patch":"@@ -1,217 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-import javafx.animation.KeyFrame;\n-import javafx.animation.KeyValue;\n-import javafx.animation.Timeline;\n-import javafx.beans.property.BooleanProperty;\n-import javafx.beans.property.BooleanPropertyBase;\n-import javafx.beans.property.DoubleProperty;\n-import javafx.beans.property.DoublePropertyBase;\n-import javafx.beans.property.IntegerProperty;\n-import javafx.scene.Group;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.Paint;\n-import javafx.scene.shape.ArcTo;\n-import javafx.scene.shape.ClosePath;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.LineTo;\n-import javafx.scene.shape.MoveTo;\n-import javafx.scene.shape.Path;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.shape.Shape;\n-import javafx.scene.transform.Rotate;\n-import javafx.util.Duration;\n-\n-public class Pump {\n-\n-    Group pumpGroup;\n-\n-    Paint pumpColor;\n-    Paint fan1, fan2;\n-\n-    Timeline timeline;\n-\n-    BooleanProperty pumpOn;\n-    DoubleProperty pumpRate; \/\/ a % of max\n-    IntegerProperty pumpSpinDuration; \/\/ millis for a single spin\n-\n-    Model model;\n-\n-    final KeyValue kv1;\n-    final KeyValue kv2;\n-    KeyFrame kf;\n-\n-    Pump(Model model) {\n-        this.model = model;\n-        pumpColor = Color.RED;\n-        fan1 = Color.LIGHTBLUE;\n-        fan2 = Color.BLUE;\n-\n-        Group fan = new Group();\n-\n-        Rectangle a1 = new Rectangle(80 - 40, 105 - 40, 80, 80);\n-        a1.setFill(fan1);\n-\n-        Rectangle a2 = new Rectangle(80, 105, 40, 40);\n-        a2.setFill(fan2);\n-\n-        Rectangle a3 = new Rectangle(80 - 40, 105 - 40, 40, 40);\n-        a3.setFill(fan2);\n-\n-        fan.getChildren().addAll(a1, a2, a3);\n-        Rotate spin = new Rotate(0, 80, 105);\n-        fan.getTransforms().add(spin);\n-\n-        Ellipse hole = new Ellipse(80, 105, 30, 30);\n-        hole.setFill(Color.BLACK);\n-\n-        Path base = new Path();\n-        base.getElements().addAll(\n-                new MoveTo(0, 0),\n-                new LineTo(40, 60),\n-                new LineTo(130, 60),\n-                new LineTo(160, 0),\n-                new ClosePath());\n-        base.setFill(Color.RED);\n-        base.setStroke(Color.BLACK);\n-        base.setStrokeWidth(1);\n-\n-        Path outline = new Path();\n-        outline.getElements().addAll(\n-                new MoveTo(150, 180),\n-                new LineTo(150, 200),\n-                new LineTo(106, 200),\n-                new LineTo(106, 180),\n-                new ArcTo(80, 80, 0, 150, 140, true, true),\n-                new ClosePath());\n-        outline.setFill(Color.BLACK);\n-\n-        Shape s = Path.subtract(outline, hole);\n-        s.setFill(Color.RED);\n-        s.setStroke(Color.BLACK);\n-        s.setStrokeWidth(1);\n-\n-        pumpGroup = new Group();\n-        pumpGroup.getChildren().addAll(fan, base, s);\n-        Rotate flip = new Rotate(180, 80, 105);\n-        pumpGroup.getTransforms().add(flip);\n-\n-        timeline = new Timeline();\n-        timeline.setCycleCount(Timeline.INDEFINITE);\n-        timeline.setAutoReverse(false);\n-        kv1 = new KeyValue(spin.angleProperty(), 0);\n-        kv2 = new KeyValue(spin.angleProperty(), 360);\n-        kf = new KeyFrame(Duration.millis(3000), kv1, kv2);\n-        timeline.getKeyFrames().add(kf);\n-        timeline.play();\n-    }\n-\n-\n-    Group getGroup() {\n-        return pumpGroup;\n-    }\n-\n-    public final BooleanProperty getPumpActiveProperty() {\n-        if (pumpOn == null) {\n-            pumpOn = new BooleanPropertyBase() {\n-\n-                @Override\n-                public Object getBean() {\n-                    return Pump.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"pumpOn\";\n-                }\n-\n-                @Override\n-                public void invalidated() {\n-                    if (get()) {\n-                        if (timeline != null) {\n-                            timeline.play();\n-                        }\n-                    } else {\n-                        if (timeline != null) {\n-                            timeline.pause();\n-                        }\n-                    }\n-                }\n-            };\n-        }\n-        return pumpOn;\n-\n-    }\n-\n-    public void setPumpActive(boolean on) {\n-        getPumpActiveProperty().set(on);\n-    }\n-\n-    public boolean getPumpActive() {\n-        return getPumpActiveProperty().get();\n-    }\n-\n-\n-    public final DoubleProperty getPumpRatePercentProperty() {\n-        if (pumpRate == null) {\n-            pumpRate = new DoublePropertyBase(1.) {\n-                @Override\n-                public Object getBean() {\n-                    return Pump.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"pumpRate\";\n-                }\n-\n-                @Override\n-                public void invalidated() {\n-                    double value = get();\n-                    if (value < 0.0) {\n-                        set(0.0);\n-                    }\n-                    if (value > 1.0) {\n-                        set(1.0);\n-                    }\n-                    timeline.setRate(value);\n-                }\n-            };\n-        }\n-        return pumpRate;\n-\n-    }\n-\n-    public void setPumpRatePercent(double percent) {\n-        getPumpRatePercentProperty().set(percent);\n-    }\n-\n-    public double getPumpRatePercent() {\n-        return getPumpRatePercentProperty().get();\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Pump.java","additions":0,"deletions":217,"binary":false,"changes":217,"status":"deleted"},{"patch":"@@ -1,231 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-import javafx.beans.property.BooleanProperty;\n-import javafx.beans.property.BooleanPropertyBase;\n-import javafx.beans.property.DoubleProperty;\n-import javafx.beans.property.DoublePropertyBase;\n-import javafx.scene.Group;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Line;\n-import javafx.scene.shape.Rectangle;\n-\n-public class Tank {\n-\n-    private BooleanProperty showWaterMarks;\n-    private DoubleProperty fillPercentProperty;\n-    private DoubleProperty lowPercentProperty;\n-    private DoubleProperty highPercentProperty;\n-\n-    private final Line highWaterLine;\n-    private final Line lowWaterLine;\n-\n-    int width;\n-    int height;\n-    Rectangle fill;\n-    Group group;\n-\n-    final int wallStroke = 6;\n-\n-    public Tank(int width, int height) {\n-\n-        Rectangle liquidClip = new Rectangle();\n-        liquidClip.setWidth(width);\n-        liquidClip.setHeight(height);\n-        liquidClip.setArcWidth(16);\n-        liquidClip.setArcHeight(16);\n-        liquidClip.setStrokeWidth(wallStroke);\n-\n-        this.width = width;\n-        this.height = height;\n-\n-        Rectangle tank = new Rectangle();\n-        tank.setWidth(width);\n-        tank.setHeight(height);\n-        tank.setStrokeWidth(wallStroke);\n-        tank.setStroke(Color.BLACK);\n-        tank.setFill(Color.web(\"#606060\"));\n-        tank.setArcWidth(16);\n-        tank.setArcHeight(16);\n-\n-        fill = new Rectangle();\n-        fill.setWidth(width);\n-        fill.setHeight(height);\n-        fill.setX(0);\n-        fill.setFill(Color.BLUE);\n-        fill.setClip(liquidClip);\n-\n-        highWaterLine = new Line(10, 0, width - 5, 0);\n-        highWaterLine.setStrokeWidth(4);\n-        highWaterLine.setStroke(Color.GREEN);\n-        highWaterLine.getStrokeDashArray().setAll(25.0, 20.0, 5.0, 20.0);\n-\n-        lowWaterLine = new Line(10, 0, width - 5, 0);\n-        lowWaterLine.setStrokeWidth(4);\n-        lowWaterLine.setStroke(Color.RED);\n-        lowWaterLine.getStrokeDashArray().setAll(25.0, 20.0, 5.0, 20.0);\n-\n-        group = new Group();\n-        group.getChildren().addAll(tank, fill, highWaterLine, lowWaterLine);\n-\n-    }\n-\n-    public Group getGroup() {\n-        return group;\n-    }\n-\n-    public final BooleanProperty getShowWatermarkProperty() {\n-        if (showWaterMarks == null) {\n-            showWaterMarks = new BooleanPropertyBase(true) {\n-\n-                @Override\n-                public void invalidated() {\n-                    highWaterLine.visibleProperty().setValue(get());\n-                    lowWaterLine.visibleProperty().setValue(get());\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Tank.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"showWaterMarkPercent\";\n-                }\n-\n-            };\n-        }\n-        return showWaterMarks;\n-\n-    }\n-\n-    public Line getHighWaterLine() {\n-        return highWaterLine;\n-    }\n-\n-    public Line getLowWaterLine() {\n-        return highWaterLine;\n-    }\n-\n-    public DoubleProperty getFillPercentageProperty() {\n-        if (fillPercentProperty == null) {\n-\n-            fillPercentProperty = new DoublePropertyBase() {\n-\n-                @Override\n-                public void invalidated() {\n-                    double v = get();\n-                    if (v < 0.0) {\n-                        v = 0.0;\n-                    }\n-                    if (v > 100.0) {\n-                        v = 100.0;\n-                    }\n-                    fill.setY((100.0 - v) \/ 100.0 * height);\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Tank.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillPercentage\";\n-                }\n-            };\n-        }\n-        return fillPercentProperty;\n-    }\n-\n-    public DoubleProperty getHighWaterPercentageProperty() {\n-        if (highPercentProperty == null) {\n-\n-            highPercentProperty = new DoublePropertyBase() {\n-\n-                @Override\n-                public void invalidated() {\n-                    double v = get();\n-                    if (v < 0.0) {\n-                        v = 0.0;\n-                    }\n-                    if (v > 100.0) {\n-                        v = 100.0;\n-                    }\n-                    double newY = (100.0 - v) \/ 100.0 * height;\n-                    highWaterLine.startYProperty().set(newY);\n-                    highWaterLine.endYProperty().set(newY);\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Tank.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"highWaterPercentage\";\n-                }\n-            };\n-        }\n-        return highPercentProperty;\n-    }\n-\n-    public DoubleProperty getLowWaterPercentageProperty() {\n-        if (lowPercentProperty == null) {\n-\n-            lowPercentProperty = new DoublePropertyBase() {\n-\n-                @Override\n-                public void invalidated() {\n-                    double v = get();\n-                    if (v < 0.0) {\n-                        v = 0.0;\n-                    }\n-                    if (v > 100.0) {\n-                        v = 100.0;\n-                    }\n-                    double newY = (100.0 - v) \/ 100.0 * height;\n-                    lowWaterLine.startYProperty().set(newY);\n-                    lowWaterLine.endYProperty().set(newY);\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Tank.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"lowWaterPercentage\";\n-                }\n-            };\n-        }\n-        return lowPercentProperty;\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Tank.java","additions":0,"deletions":231,"binary":false,"changes":231,"status":"deleted"},{"patch":"@@ -1,220 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package industrial;\n-\n-import javafx.beans.property.BooleanProperty;\n-import javafx.beans.property.BooleanPropertyBase;\n-import javafx.beans.property.ObjectProperty;\n-import javafx.beans.property.ObjectPropertyBase;\n-import javafx.scene.Group;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.Paint;\n-import javafx.scene.shape.ClosePath;\n-import javafx.scene.shape.LineTo;\n-import javafx.scene.shape.MoveTo;\n-import javafx.scene.shape.Path;\n-import javafx.scene.transform.Rotate;\n-\n-public class Valve {\n-\n-    Group group;\n-\n-    BooleanProperty fillActive;\n-\n-    private ObjectProperty<Paint> fillValveBody;\n-    private ObjectProperty<Paint> fillValveOn;\n-    private ObjectProperty<Paint> fillValveOff;\n-\n-    private final Path valveBodyLeft;\n-    private final Path valveBodyRight;\n-    private final Path valveStick;\n-    private final Path valveActiveFlag;\n-\n-    public Valve() {\n-        valveBodyLeft = new Path(\n-                new MoveTo(0, 0),\n-                new LineTo(0, 80),\n-                new LineTo(80, 40),\n-                new ClosePath()\n-        );\n-        valveBodyRight = new Path(\n-                new MoveTo(80, 40),\n-                new LineTo(160, 80),\n-                new LineTo(160, 0),\n-                new ClosePath()\n-        );\n-        valveStick = new Path(\n-                new MoveTo(80, 40),\n-                new LineTo(80, 90)\n-        );\n-        valveActiveFlag = new Path(\n-                new MoveTo(40, 90),\n-                new LineTo(40, 120),\n-                new LineTo(120, 120),\n-                new LineTo(120, 90),\n-                new ClosePath()\n-        );\n-\n-        group = new Group(valveBodyLeft, valveBodyRight, valveStick, valveActiveFlag);\n-\n-        Rotate flip = new Rotate(180, 80, 60);\n-        group.getTransforms().add(flip);\n-\n-        getActiveProperty().set(true);\n-        resetActiveFill();\n-        resetBodyFill();\n-    }\n-\n-    private void resetActiveFill() {\n-        if (getActive()) {\n-            valveActiveFlag.setFill(fillValveOnProperty().get());\n-        } else {\n-            valveActiveFlag.setFill(fillValveOffProperty().get());\n-        }\n-    }\n-\n-    private void resetBodyFill() {\n-        Paint p = fillValveBodyProperty().get();\n-        valveBodyLeft.setFill(p);\n-        valveBodyRight.setFill(p);\n-        valveStick.setStroke(p);\n-\n-    }\n-\n-    public final BooleanProperty getActiveProperty() {\n-        if (fillActive == null) {\n-            fillActive = new BooleanPropertyBase() {\n-\n-                @Override\n-                public void invalidated() {\n-                    resetActiveFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Valve.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillActive\";\n-                }\n-            };\n-        }\n-        return fillActive;\n-\n-    }\n-\n-    public void setActive(boolean on) {\n-        getActiveProperty().set(on);\n-    }\n-\n-    public boolean getActive() {\n-        return getActiveProperty().get();\n-    }\n-\n-    public Group getGroup() {\n-        return group;\n-    }\n-\n-    public final ObjectProperty<Paint> fillValveBodyProperty() {\n-        if (fillValveBody == null) {\n-            fillValveBody = new ObjectPropertyBase<Paint>(Color.RED) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    resetBodyFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Valve.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillValveBody\";\n-                }\n-\n-            };\n-        }\n-        return fillValveBody;\n-    }\n-\n-    public final ObjectProperty<Paint> fillValveOnProperty() {\n-        if (fillValveOn == null) {\n-            fillValveOn = new ObjectPropertyBase<Paint>(Color.GREEN) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    resetActiveFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Valve.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillValveOn\";\n-                }\n-\n-            };\n-        }\n-        return fillValveOn;\n-    }\n-\n-    public final ObjectProperty<Paint> fillValveOffProperty() {\n-        if (fillValveOff == null) {\n-            fillValveOff = new ObjectPropertyBase<Paint>(Color.ORANGE) {\n-\n-                boolean needsListener = false;\n-\n-                @Override\n-                public void invalidated() {\n-                    resetActiveFill();\n-                }\n-\n-                @Override\n-                public Object getBean() {\n-                    return Valve.this;\n-                }\n-\n-                @Override\n-                public String getName() {\n-                    return \"fillValveOff\";\n-                }\n-\n-            };\n-        }\n-        return fillValveOff;\n-    }\n-\n-}\n","filename":"apps\/toys\/Industrial\/src\/industrial\/Valve.java","additions":0,"deletions":220,"binary":false,"changes":220,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!-- You may freely edit this file. See commented blocks below for -->\n-<!-- some examples of how to customize the build. -->\n-<!-- (If you delete it and reopen the project it will be recreated.) -->\n-<!-- By default, only the Clean and Build commands use this build script. -->\n-<!-- Commands such as Run, Debug, and Test only use this build script if -->\n-<!-- the Compile on Save feature is turned off for the project. -->\n-<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n-<!-- in the project's Project Properties dialog box.-->\n-<project name=\"ShapeT3D\" default=\"default\" basedir=\".\">\n-    <description>Builds, tests, and runs the project ShapeT3D.<\/description>\n-    <import file=\"nbproject\/build-impl.xml\"\/>\n-    <!--\n-\n-    There exist several targets which are by default empty and which can be \n-    used for execution of your tasks. These targets are usually executed \n-    before and after some main targets. They are: \n-\n-      -pre-init:                 called before initialization of project properties\n-      -post-init:                called after initialization of project properties\n-      -pre-compile:              called before javac compilation\n-      -post-compile:             called after javac compilation\n-      -pre-compile-single:       called before javac compilation of single file\n-      -post-compile-single:      called after javac compilation of single file\n-      -pre-compile-test:         called before javac compilation of JUnit tests\n-      -post-compile-test:        called after javac compilation of JUnit tests\n-      -pre-compile-test-single:  called before javac compilation of single JUnit test\n-      -post-compile-test-single: called after javac compilation of single JUunit test\n-      -pre-jar:                  called before JAR building\n-      -post-jar:                 called after JAR building\n-      -post-clean:               called after cleaning build products\n-\n-    (Targets beginning with '-' are not intended to be called on their own.)\n-\n-    Example of inserting an obfuscator after compilation could look like this:\n-\n-        <target name=\"-post-compile\">\n-            <obfuscate>\n-                <fileset dir=\"${build.classes.dir}\"\/>\n-            <\/obfuscate>\n-        <\/target>\n-\n-    For list of available properties check the imported \n-    nbproject\/build-impl.xml file. \n-\n-\n-    Another way to customize the build is by overriding existing main targets.\n-    The targets of interest are: \n-\n-      -init-macrodef-javac:     defines macro for javac compilation\n-      -init-macrodef-junit:     defines macro for junit execution\n-      -init-macrodef-debug:     defines macro for class debugging\n-      -init-macrodef-java:      defines macro for class execution\n-      -do-jar:                  JAR building\n-      run:                      execution of project \n-      -javadoc-build:           Javadoc generation\n-      test-report:              JUnit report generation\n-\n-    An example of overriding the target for project execution could look like this:\n-\n-        <target name=\"run\" depends=\"ShapeT3D-impl.jar\">\n-            <exec dir=\"bin\" executable=\"launcher.exe\">\n-                <arg file=\"${dist.jar}\"\/>\n-            <\/exec>\n-        <\/target>\n-\n-    Notice that the overridden target depends on the jar target and not only on \n-    the compile target as the regular run target does. Again, for a list of available \n-    properties which you can use, check the target you are overriding in the\n-    nbproject\/build-impl.xml file. \n-\n-    -->\n-<\/project>\n","filename":"apps\/toys\/Shape3DToy\/build.xml","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-Manifest-Version: 1.0\r\n-X-COMMENT: Main-Class will be added automatically by build\r\n-\r\n","filename":"apps\/toys\/Shape3DToy\/manifest.mf","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,1431 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\n-***         EDIT ..\/build.xml INSTEAD         ***\n-\n-For the purpose of easier reading the script\n-is divided into following sections:\n-\n-  - initialization\n-  - compilation\n-  - jar\n-  - execution\n-  - debugging\n-  - javadoc\n-  - test compilation\n-  - test execution\n-  - test debugging\n-  - applet\n-  - cleanup\n-\n-        -->\n-<project xmlns:j2seproject1=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\" xmlns:j2seproject3=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\" xmlns:jaxrpc=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/jax-rpc\" basedir=\"..\" default=\"default\" name=\"ShapeT3D-impl\">\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n-        <condition>\n-            <not>\n-                <antversion atleast=\"1.8.0\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/fail>\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"\/>\n-    <!-- \n-                ======================\n-                INITIALIZATION SECTION \n-                ======================\n-            -->\n-    <target name=\"-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init\" name=\"-init-private\">\n-        <property file=\"nbproject\/private\/config.properties\"\/>\n-        <property file=\"nbproject\/private\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/private\/private.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n-        <property file=\"${user.properties.file}\"\/>\n-        <!-- The two properties below are usually overridden -->\n-        <!-- by the active platform. Just a fallback. -->\n-        <property name=\"default.javac.source\" value=\"1.4\"\/>\n-        <property name=\"default.javac.target\" value=\"1.4\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n-        <property file=\"nbproject\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/project.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\n-        <j2seproject1:property name=\"platform.home\" value=\"platforms.${platform.active}.home\"\/>\n-        <j2seproject1:property name=\"platform.bootcp\" value=\"platforms.${platform.active}.bootclasspath\"\/>\n-        <j2seproject1:property name=\"platform.compiler\" value=\"platforms.${platform.active}.compile\"\/>\n-        <j2seproject1:property name=\"platform.javac.tmp\" value=\"platforms.${platform.active}.javac\"\/>\n-        <condition property=\"platform.javac\" value=\"${platform.home}\/bin\/javac\">\n-            <equals arg1=\"${platform.javac.tmp}\" arg2=\"$${platforms.${platform.active}.javac}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javac\" value=\"${platform.javac.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.java.tmp\" value=\"platforms.${platform.active}.java\"\/>\n-        <condition property=\"platform.java\" value=\"${platform.home}\/bin\/java\">\n-            <equals arg1=\"${platform.java.tmp}\" arg2=\"$${platforms.${platform.active}.java}\"\/>\n-        <\/condition>\n-        <property name=\"platform.java\" value=\"${platform.java.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.javadoc.tmp\" value=\"platforms.${platform.active}.javadoc\"\/>\n-        <condition property=\"platform.javadoc\" value=\"${platform.home}\/bin\/javadoc\">\n-            <equals arg1=\"${platform.javadoc.tmp}\" arg2=\"$${platforms.${platform.active}.javadoc}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javadoc\" value=\"${platform.javadoc.tmp}\"\/>\n-        <condition property=\"platform.invalid\" value=\"true\">\n-            <or>\n-                <contains string=\"${platform.javac}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.java}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.javadoc}\" substring=\"$${platforms.\"\/>\n-            <\/or>\n-        <\/condition>\n-        <fail unless=\"platform.home\">Must set platform.home<\/fail>\n-        <fail unless=\"platform.bootcp\">Must set platform.bootcp<\/fail>\n-        <fail unless=\"platform.java\">Must set platform.java<\/fail>\n-        <fail unless=\"platform.javac\">Must set platform.javac<\/fail>\n-        <fail if=\"platform.invalid\">\n- The J2SE Platform is not correctly set up.\n- Your active platform is: ${platform.active}, but the corresponding property \"platforms.${platform.active}.home\" is not found in the project's properties files. \n- Either open the project in the IDE and setup the Platform with the same name or add it manually.\n- For example like this:\n-     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property \"platforms.${platform.active}.home\" in a .properties file)\n-  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) \n-  <\/fail>\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"\/>\n-        <condition property=\"splashscreen.available\">\n-            <and>\n-                <not>\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-                <available file=\"${application.splash}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"main.class.available\">\n-            <and>\n-                <isset property=\"main.class\"\/>\n-                <not>\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"profile.available\">\n-            <and>\n-                <isset property=\"javac.profile\"\/>\n-                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"\/>\n-                <matches pattern=\"1\\.[89](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive\">\n-            <or>\n-                <not>\n-                    <istrue value=\"${jar.archive.disabled}\"\/>\n-                <\/not>\n-                <istrue value=\"${not.archive.disabled}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"do.mkdist\">\n-            <and>\n-                <isset property=\"do.archive\"\/>\n-                <isset property=\"libs.CopyLibs.classpath\"\/>\n-                <not>\n-                    <istrue value=\"${mkdist.disabled}\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+manifest.available\">\n-            <and>\n-                <isset property=\"manifest.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+main.class.available\">\n-            <and>\n-                <isset property=\"main.class.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+splashscreen.available\">\n-            <and>\n-                <isset property=\"splashscreen.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+profile.available\">\n-            <and>\n-                <isset property=\"profile.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"have.tests\">\n-            <or\/>\n-        <\/condition>\n-        <condition property=\"have.sources\">\n-            <or>\n-                <available file=\"${src.dir}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"netbeans.home+have.tests\">\n-            <and>\n-                <isset property=\"netbeans.home\"\/>\n-                <isset property=\"have.tests\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"no.javadoc.preview\">\n-            <and>\n-                <isset property=\"javadoc.preview\"\/>\n-                <isfalse value=\"${javadoc.preview}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"run.jvmargs\" value=\"\"\/>\n-        <property name=\"run.jvmargs.ide\" value=\"\"\/>\n-        <property name=\"javac.compilerargs\" value=\"\"\/>\n-        <property name=\"work.dir\" value=\"${basedir}\"\/>\n-        <condition property=\"no.deps\">\n-            <and>\n-                <istrue value=\"${no.dependencies}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javac.debug\" value=\"true\"\/>\n-        <property name=\"javadoc.preview\" value=\"true\"\/>\n-        <property name=\"application.args\" value=\"\"\/>\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"\/>\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"\/>\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n-            <and>\n-                <isset property=\"javadoc.encoding\"\/>\n-                <not>\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"\/>\n-        <property name=\"includes\" value=\"**\"\/>\n-        <property name=\"excludes\" value=\"\"\/>\n-        <property name=\"do.depend\" value=\"false\"\/>\n-        <condition property=\"do.depend.true\">\n-            <istrue value=\"${do.depend}\"\/>\n-        <\/condition>\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"\/>\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath\/p:'${toString:endorsed.classpath.path}'\">\n-            <and>\n-                <isset property=\"endorsed.classpath\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\n-            <isset property=\"profile.available\"\/>\n-        <\/condition>\n-        <property name=\"jar.index\" value=\"false\"\/>\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"\/>\n-        <property name=\"copylibs.rebase\" value=\"true\"\/>\n-        <available file=\"${meta.inf.dir}\/persistence.xml\" property=\"has.persistence.xml\"\/>\n-        <condition property=\"junit.available\">\n-            <or>\n-                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"\/>\n-                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"testng.available\">\n-            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"\/>\n-        <\/condition>\n-        <condition property=\"junit+testng.available\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <istrue value=\"${testng.available}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n-        <fail unless=\"src.dir\">Must set src.dir<\/fail>\n-        <fail unless=\"build.dir\">Must set build.dir<\/fail>\n-        <fail unless=\"dist.dir\">Must set dist.dir<\/fail>\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir<\/fail>\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir<\/fail>\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir<\/fail>\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir<\/fail>\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes<\/fail>\n-        <fail unless=\"dist.jar\">Must set dist.jar<\/fail>\n-    <\/target>\n-    <target name=\"-init-macrodef-property\">\n-        <macrodef name=\"property\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <compilerarg value=\"-processorpath\"\/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"\/>\n-                    <compilerarg line=\"${ap.processors.internal}\"\/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"\/>\n-                    <compilerarg value=\"-s\"\/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"\/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n-        <macrodef name=\"depend\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <sequential>\n-                <depend cache=\"${build.dir}\/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                <\/depend>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"force-recompile\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <sequential>\n-                <fail unless=\"javac.includes\">Must set javac.includes<\/fail>\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n-                    <path>\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"\/>\n-                    <\/path>\n-                    <globmapper from=\"*.java\" to=\"*.class\"\/>\n-                <\/pathconvert>\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"\/>\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"\/>\n-                <delete>\n-                    <files includesfile=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-                <delete>\n-                    <fileset file=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\n-        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <not>\n-                    <isset property=\"test.method\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <isset property=\"test.method\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-init-test-properties\">\n-        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"\/>\n-        <property name=\"test.binarytestincludes\" value=\"\"\/>\n-        <property name=\"test.binaryexcludes\" value=\"\"\/>\n-    <\/target>\n-    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"\/>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\n-        <macrodef name=\"testng\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <union id=\"test.set\"\/>\n-                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"\/>\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" jvm=\"${platform.java}\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"ShapeT3D\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\n-                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"\/>\n-                    <propertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/propertyset>\n-                    <customize\/>\n-                <\/testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-test-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <echo>No tests executed.<\/echo>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\n-        <macrodef name=\"test\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <sequential>\n-                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\n-        <macrodef name=\"test-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\n-        <macrodef name=\"testng-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <condition else=\"-suitename ShapeT3D -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\n-                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"\/>\n-                <\/condition>\n-                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"\/>\n-                <mkdir dir=\"${build.test.results.dir}\"\/>\n-                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\n-                    <customize>\n-                        <customize2\/>\n-                        <jvmarg value=\"-ea\"\/>\n-                        <arg line=\"${testng.debug.mode}\"\/>\n-                        <arg line=\"-d ${build.test.results.dir}\"\/>\n-                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"\/>\n-                        <arg line=\"${testng.cmd.args}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\n-        <macrodef name=\"testng-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element implicit=\"true\" name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2\/>\n-                <\/j2seproject3:testng-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2>\n-                        <syspropertyset>\n-                            <propertyref prefix=\"test-sys-prop.\"\/>\n-                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                        <\/syspropertyset>\n-                    <\/customize2>\n-                <\/j2seproject3:testng-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"\/>\n-    <!--\n-                pre NB7.2 profiling section; consider it deprecated\n-            -->\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"\/>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\n-        <macrodef name=\"resolve\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"profile\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property environment=\"env\"\/>\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"\/>\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-                    <arg line=\"${application.args}\"\/>\n-                    <classpath>\n-                        <path path=\"${run.classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm<\/fail>\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent<\/fail>\n-    <\/target>\n-    <!--\n-                end of pre NB7.2 profiling section\n-            -->\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n-        <macrodef name=\"nbjpdastart\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"name\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"\" name=\"stopclassname\"\/>\n-            <sequential>\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <bootclasspath>\n-                        <path path=\"${platform.bootcp}\"\/>\n-                    <\/bootclasspath>\n-                <\/nbjpdastart>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"nbjpdareload\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"\/>\n-            <sequential>\n-                <nbjpdareload>\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n-                        <include name=\"${fix.includes}*.class\"\/>\n-                    <\/fileset>\n-                <\/nbjpdareload>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-debug-args\">\n-        <exec executable=\"${platform.java}\" outputproperty=\"version-output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition property=\"have-jdk-older-than-1.4\">\n-            <or>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\n-            <istrue value=\"${have-jdk-older-than-1.4}\"\/>\n-        <\/condition>\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n-            <isset property=\"debug.transport\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n-        <macrodef name=\"debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-java\">\n-        <macrodef name=\"java\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"jvm\" name=\"jvm\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-copylibs\">\n-        <macrodef name=\"copylibs\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n-                    <path path=\"${run.classpath}\"\/>\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"\/>\n-                <\/pathconvert>\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"\/>\n-                    <chainedmapper>\n-                        <flattenmapper\/>\n-                        <filtermapper>\n-                            <replacestring from=\" \" to=\"%20\"\/>\n-                        <\/filtermapper>\n-                        <globmapper from=\"*\" to=\"lib\/*\"\/>\n-                    <\/chainedmapper>\n-                <\/pathconvert>\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"\/>\n-                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n-                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-                    <manifest>\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"\/>\n-                        <customize\/>\n-                    <\/manifest>\n-                <\/copylibs>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-presetdef-jar\">\n-        <presetdef name=\"jar\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-            <\/jar>\n-        <\/presetdef>\n-    <\/target>\n-    <target name=\"-init-ap-cmdline-properties\">\n-        <property name=\"annotation.processing.enabled\" value=\"true\"\/>\n-        <property name=\"annotation.processing.processors.list\" value=\"\"\/>\n-        <property name=\"annotation.processing.processor.options\" value=\"\"\/>\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"\/>\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"\/>\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"\/>\n-        <condition property=\"ap.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n-            <isfalse value=\"${annotation.processing.enabled}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n-        <property name=\"ap.cmd.line.internal\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"\/>\n-    <!--\n-                ===================\n-                COMPILATION SECTION\n-                ===================\n-            -->\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n-        <property location=\"${build.dir}\/built-jar.properties\" name=\"built-jar.properties\"\/>\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n-        <echo level=\"warn\" message=\"Cycle detected: ShapeT3D was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"\/>\n-        <antcall target=\"-warn-already-built-jar\"\/>\n-        <propertyfile file=\"${built-jar.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"\/>\n-    <target depends=\"init\" name=\"-check-automatic-build\">\n-        <available file=\"${build.classes.dir}\/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n-        <antcall target=\"clean\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n-        <mkdir dir=\"${build.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\n-        <pathconvert property=\"build.generated.subdirs\">\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"*\"\/>\n-            <\/dirset>\n-        <\/pathconvert>\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"\/>\n-        <copy todir=\"${build.classes.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy todir=\"${build.classes.dir}\/META-INF\">\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"\/>\n-    <target name=\"-pre-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile\/>\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"\/>\n-    <!--\n-                ====================\n-                JAR BUILDING SECTION\n-                ====================\n-            -->\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"\/>\n-        <mkdir dir=\"${dist.jar.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"\/>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Profile\" value=\"${javac.profile}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"\/>\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}\/META-INF\"\/>\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF\/${splashscreen.basename}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"\/>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <echo level=\"info\">${platform.java} -jar \"${dist.jar.resolved}\"<\/echo>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\n-        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"\/>\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\n-            <path path=\"${run.classpath}\"\/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"\/>\n-        <\/pathconvert>\n-        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"\/>\n-    <\/target>\n-    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\n-        <delete>\n-            <fileset file=\"${tmp.manifest.file}\"\/>\n-        <\/delete>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"\/>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"\/>\n-    <target name=\"-post-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"\/>\n-    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"\/>\n-    <!--\n-                =================\n-                EXECUTION SECTION\n-                =================\n-            -->\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n-        <j2seproject1:java>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <target name=\"-do-not-recompile\">\n-        <property name=\"javac.includes.binary\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single\" name=\"run-single\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"\/>\n-    <\/target>\n-    <!--\n-                =================\n-                DEBUGGING SECTION\n-                =================\n-            -->\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n-        <j2seproject3:debug>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"\/>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"\/>\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"\/>\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"\/>\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\n-        <fail unless=\"fix.includes\">Must set fix.includes<\/fail>\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n-        <j2seproject1:nbjpdareload\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"\/>\n-    <!--\n-                =================\n-                PROFILING SECTION\n-                =================\n-            -->\n-    <!--\n-                pre NB7.2 profiler integration\n-            -->\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class<\/fail>\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"${profile.class}\"\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/profile>\n-    <\/target>\n-    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\n-            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <test name=\"${profile.class}\"\/>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-            <syspropertyset>\n-                <propertyref prefix=\"test-sys-prop.\"\/>\n-                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-            <\/syspropertyset>\n-            <formatter type=\"brief\" usefile=\"false\"\/>\n-            <formatter type=\"xml\"\/>\n-        <\/junit>\n-    <\/target>\n-    <!--\n-                end of pre NB72 profiling section\n-            -->\n-    <target if=\"netbeans.home\" name=\"-profile-check\">\n-        <condition property=\"profiler.configured\">\n-            <or>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"\/>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"\/>\n-            <\/or>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\n-        <startprofiler\/>\n-        <antcall target=\"run\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"\/>\n-    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"test-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcal target=\"run-test-with-main\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-applet\"\/>\n-    <\/target>\n-    <!--\n-                ===============\n-                JAVADOC SECTION\n-                ===============\n-            -->\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n-        <mkdir dir=\"${dist.javadoc.dir}\"\/>\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n-            <and>\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <exec executable=\"${platform.java}\" failonerror=\"false\" outputproperty=\"platform.version.output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\n-            <matches multiline=\"true\" pattern=\"1\\.[56](\\..*)?\" string=\"${platform.version.output}\"\/>\n-        <\/condition>\n-        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" executable=\"${platform.javadoc}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n-            <classpath>\n-                <path path=\"${javac.classpath}\"\/>\n-            <\/classpath>\n-            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/*.java\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/*.java\"\/>\n-                <exclude name=\"*.java\"\/>\n-            <\/fileset>\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"\/>\n-        <\/javadoc>\n-        <copy todir=\"${dist.javadoc.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-        <\/copy>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n-        <nbbrowse file=\"${dist.javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"\/>\n-    <!--\n-                =========================\n-                TEST COMPILATION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n-        <mkdir dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"\/>\n-    <target name=\"-pre-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"\/>\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"\/>\n-    <!--\n-                =======================\n-                TEST EXECUTION SECTION\n-                =======================\n-            -->\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n-        <j2seproject3:test includes=\"${includes}\" testincludes=\"**\/*Test.java\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"\/>\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"\/>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"\/>\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"\/>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\n-        <fail unless=\"test.class\">Must select some files in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"\/>\n-    <!--\n-                =======================\n-                TEST DEBUGGING SECTION\n-                =======================\n-            -->\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"\/>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"\/>\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"\/>\n-    <!--\n-                =========================\n-                APPLET EXECUTION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <!--\n-                =========================\n-                APPLET DEBUGGING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"\/>\n-    <!--\n-                ===============\n-                CLEANUP SECTION\n-                ===============\n-            -->\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n-        <property location=\"${build.dir}\/built-clean.properties\" name=\"built-clean.properties\"\/>\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n-        <echo level=\"warn\" message=\"Cycle detected: ShapeT3D was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"\/>\n-        <antcall target=\"-warn-already-built-clean\"\/>\n-        <propertyfile file=\"${built-clean.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init\" name=\"-do-clean\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"\/>\n-    <\/target>\n-    <target name=\"-post-clean\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"\/>\n-    <target name=\"-check-call-dep\">\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"\/>\n-        <condition property=\"should.call.dep\">\n-            <and>\n-                <not>\n-                    <isset property=\"already.built.${call.subproject}\"\/>\n-                <\/not>\n-                <available file=\"${call.script}\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n-            <propertyset>\n-                <propertyref prefix=\"transfer.\"\/>\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"\/>\n-            <\/propertyset>\n-        <\/ant>\n-    <\/target>\n-<\/project>\n","filename":"apps\/toys\/Shape3DToy\/nbproject\/build-impl.xml","additions":0,"deletions":1431,"binary":false,"changes":1431,"status":"deleted"},{"patch":"@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=f442fbc7\n-build.xml.script.CRC32=6644bbb6\n-build.xml.stylesheet.CRC32=8064a381@1.75.2.48\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject\/build-impl.xml.data.CRC32=f442fbc7\n-nbproject\/build-impl.xml.script.CRC32=0b00b35c\n-nbproject\/build-impl.xml.stylesheet.CRC32=876e7a8f@1.75.2.48\n","filename":"apps\/toys\/Shape3DToy\/nbproject\/genfiles.properties","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,75 +0,0 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}\/ap-source-output\n-application.title=ShapeT3D\n-application.vendor=cyang\n-build.classes.dir=${build.dir}\/classes\n-build.classes.excludes=**\/*.java,**\/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}\/generated\n-build.generated.sources.dir=${build.dir}\/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}\/test\/classes\n-build.test.results.dir=${build.dir}\/test\/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}\/ShapeT3D.jar\n-dist.javadoc.dir=${dist.dir}\/javadoc\n-endorsed.classpath=\n-excludes=\n-file.reference.main-java=..\/..\/..\/apps\/toys\/Shape3DToy\/src\/main\/java\n-includes=**\n-jar.compress=false\n-javac.classpath=\n-# Space-separated list of extra javac options\n-compile.patch=@..\/..\/..\/build\/compile.args\n-javac.compilerargs=${compile.patch} \n-javac.deprecation=false\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=1.9\n-javac.target=1.9\n-javac.test.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n-javadoc.private=false\n-javadoc.splitindex=true\n-javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-main.class=shapet3dtest.MixedShapesT3D\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}\/META-INF\n-mkdist.disabled=false\n-platform.active=JDK_1.9\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project.\n-# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n-# To set system properties for unit tests define test-sys-prop.name=value:\n-run.patch=@..\/..\/..\/build\/run.args\n-run.jvmargs=${run.patch} \n-run.test.classpath=\\\n-    ${javac.test.classpath}:\\\n-    ${build.test.classes.dir}\n-source.encoding=UTF-8\n-src.dir=${file.reference.main-java}\n","filename":"apps\/toys\/Shape3DToy\/nbproject\/project.properties","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\r\n-    <type>org.netbeans.modules.java.j2seproject<\/type>\r\n-    <configuration>\r\n-        <data xmlns=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\r\n-            <name>ShapeT3D<\/name>\r\n-            <explicit-platform explicit-source-supported=\"true\"\/>\r\n-            <source-roots>\r\n-                <root id=\"src.dir\"\/>\r\n-            <\/source-roots>\r\n-            <test-roots\/>\r\n-        <\/data>\r\n-    <\/configuration>\r\n-<\/project>\r\n","filename":"apps\/toys\/Shape3DToy\/nbproject\/project.xml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,88 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.PauseTransition;\n-import javafx.animation.RotateTransition;\n-import javafx.animation.SequentialTransition;\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Circle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class CircleT3D extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        final double sceneWidth = 640;\n-        final double sceneHeight = 480;\n-\n-        final Circle circle = new Circle(sceneWidth \/ 2, sceneHeight \/ 2, 120);\n-        circle.setFill(new LinearGradient(0, 0, 1, 1, true,\n-                CycleMethod.NO_CYCLE,\n-                new Stop(0, Color.LIME),\n-                new Stop(1, Color.GREEN)));\n-        circle.setStroke(Color.WHITE);\n-        circle.setStrokeWidth(5);\n-        circle.setRotationAxis(Rotate.Y_AXIS);\n-\n-        final Scene scene = new Scene(new Group(circle), sceneWidth, sceneHeight);\n-        scene.setCamera(new PerspectiveCamera());\n-        scene.setFill(Color.BLACK);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        stage.show();\n-\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn't supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-\n-        final RotateTransition tx = new RotateTransition(Duration.seconds(2), circle);\n-        tx.setToAngle(360);\n-        tx.setCycleCount(RotateTransition.INDEFINITE);\n-        tx.setInterpolator(Interpolator.LINEAR);\n-\n-        PauseTransition ptx = new PauseTransition(Duration.seconds(5));\n-        SequentialTransition stx = new SequentialTransition(ptx, tx);\n-        stx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/CircleT3D.java","additions":0,"deletions":88,"binary":false,"changes":88,"status":"deleted"},{"patch":"@@ -1,97 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.RotateTransition;\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.CubicCurve;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class CubicCurveT3D extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        final double sceneWidth = 640;\n-        final double sceneHeight = 480;\n-\n-        final CubicCurve cubiccurve = new CubicCurve();\n-        cubiccurve.setStartX(0);\n-        cubiccurve.setStartY(0);\n-        cubiccurve.setControlX1(150);\n-        cubiccurve.setControlY1(-300);\n-        cubiccurve.setControlX2(200);\n-        cubiccurve.setControlY2(300);\n-        cubiccurve.setEndX(300);\n-        cubiccurve.setEndY(0);\n-        cubiccurve.setStroke(Color.WHITE);\n-        cubiccurve.setStrokeWidth(5);\n-        cubiccurve.setFill(new LinearGradient(0, 0, 1, 1, true,\n-                CycleMethod.NO_CYCLE,\n-                new Stop(0, Color.LIME),\n-                new Stop(1, Color.GREEN)));\n-        cubiccurve.setOnMouseClicked(e -> System.out.println(\"Mouse Clicked:\" + e));\n-        cubiccurve.setOnMouseEntered(e -> System.out.println(\"Mouse Entered\"));\n-        cubiccurve.setOnMouseExited(e -> System.out.println(\"Mouse Exited\"));\n-        final Group group = new Group(cubiccurve);\n-        group.setRotate(30);\n-        group.setTranslateX((sceneWidth - 300) \/ 2);\n-        group.setTranslateY(sceneHeight \/ 2);\n-        group.setRotationAxis(Rotate.Y_AXIS);\n-        final Scene scene = new Scene(group, sceneWidth, sceneHeight);\n-        scene.setFill(Color.BLACK);\n-        scene.setCamera(new PerspectiveCamera());\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        stage.show();\n-\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn't supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-\n-        final RotateTransition tx = new RotateTransition(Duration.seconds(20), group);\n-        tx.setToAngle(360);\n-        tx.setCycleCount(RotateTransition.INDEFINITE);\n-        tx.setInterpolator(Interpolator.LINEAR);\n-        tx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/CubicCurveT3D.java","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.RotateTransition;\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class EllipsesT3D extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        final double sceneWidth = 640;\n-        final double sceneHeight = 480;\n-\n-        final Ellipse ellipse = new Ellipse(sceneWidth \/ 2, sceneHeight \/ 2, 200, 100);\n-        ellipse.setFill(Color.BLUE);\n-        ellipse.setTranslateX(-100);\n-        ellipse.setTranslateY(-100);\n-        ellipse.setTranslateZ(-100);\n-        final Ellipse ellipse2 = new Ellipse(sceneWidth \/ 2, sceneHeight \/ 2, 200, 100);\n-        ellipse2.setFill(Color.GREEN);\n-        final Ellipse ellipse3 = new Ellipse(sceneWidth \/ 2, sceneHeight \/ 2, 200, 100);\n-        ellipse3.setFill(Color.RED);\n-        ellipse3.setTranslateX(100);\n-        ellipse3.setTranslateY(100);\n-        ellipse3.setTranslateZ(100);\n-        final Group group = new Group(ellipse, ellipse2, ellipse3);\n-        group.setRotationAxis(Rotate.Y_AXIS);\n-        final Scene scene = new Scene(group, 640, 480, true);\n-        scene.setFill(Color.BLACK);\n-        scene.setCamera(new PerspectiveCamera());\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        stage.show();\n-\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn't supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-\n-        final RotateTransition tx = new RotateTransition(Duration.seconds(20), group);\n-        tx.setToAngle(360);\n-        tx.setCycleCount(RotateTransition.INDEFINITE);\n-        tx.setInterpolator(Interpolator.LINEAR);\n-        tx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/EllipsesT3D.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"@@ -1,79 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.RotateTransition;\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.image.Image;\n-import javafx.scene.image.ImageView;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class ImageViewT3D extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        final double sceneWidth = 640;\n-        final double sceneHeight = 480;\n-        final String imageURL = ImageViewT3D.class.getResource(\"JavaFX.png\").toExternalForm();\n-\n-        final Image image = new Image(imageURL);\n-        final ImageView imageView = new ImageView();\n-        imageView.setPreserveRatio(true);\n-        imageView.setImage(image);\n-        imageView.setRotate(60);\n-        imageView.setRotationAxis(Rotate.Y_AXIS);\n-        imageView.setX((sceneWidth - image.getWidth()) \/ 2);\n-        imageView.setY((sceneHeight - image.getHeight()) \/ 2);\n-        final Scene scene = new Scene(new Group(imageView), sceneWidth, sceneHeight);\n-        scene.setCamera(new PerspectiveCamera());\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        stage.show();\n-\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn't supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-\n-        final RotateTransition tx = new RotateTransition(Duration.seconds(20), imageView);\n-        tx.setToAngle(360);\n-        tx.setCycleCount(RotateTransition.INDEFINITE);\n-        tx.setInterpolator(Interpolator.LINEAR);\n-        tx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/ImageViewT3D.java","additions":0,"deletions":79,"binary":false,"changes":79,"status":"deleted"},{"patch":"@@ -1,109 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3D extends Application {\n-    private static final Stop[] stops = new Stop[]{new Stop(0, Color.web(\"#992222\")),\n-            new Stop(0.7f, Color.web(\"#772222\")), new Stop(1, Color.web(\"#552222\"))};\n-    private static final LinearGradient lg = new LinearGradient(0, 0, 0, 1, true,\n-            CycleMethod.NO_CYCLE, stops);\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        group.setRotate(60.0F);\n-        group.setRotationAxis(Rotate.Y_AXIS);\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        ellipse.setFill(lg);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        ellipse.setOnMouseEntered(e -> System.out.println(\"Ellipse: Mouse Entered\"));\n-        ellipse.setOnMouseExited(e -> System.out.println(\"Ellipse: Mouse Exited\"));\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(lg);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        arc.setOnMouseEntered(e -> System.out.println(\"Arc: Mouse Entered\"));\n-        arc.setOnMouseExited(e -> System.out.println(\"Arc: Mouse Exited\"));\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(lg);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        rectangle.setOnMouseEntered(e -> System.out.println(\"Rectangle: Mouse Entered\"));\n-        rectangle.setOnMouseExited(e -> System.out.println(\"Rectangle: Mouse Exited\"));\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        polygon.setFill(lg);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        polygon.setOnMouseEntered(e -> System.out.println(\"Polygon: Mouse Entered\"));\n-        polygon.setOnMouseExited(e -> System.out.println(\"Polygon: Mouse Exited\"));\n-        group.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n-\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3D.java","additions":0,"deletions":109,"binary":false,"changes":109,"status":"deleted"},{"patch":"@@ -1,107 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.effect.DropShadow;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DEffect1 extends Application {\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        Group group2 = new Group();\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        DropShadow dropshadow = new DropShadow();\n-        dropshadow.setOffsetY(10.0F);\n-        ellipse.setEffect(dropshadow);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        DropShadow dropshadow2 = new DropShadow();\n-        dropshadow2.setOffsetY(10.0F);\n-        arc.setEffect(dropshadow2);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(Color.RED);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        DropShadow dropshadow3 = new DropShadow();\n-        dropshadow3.setOffsetY(10.0F);\n-        rectangle.setEffect(dropshadow3);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        DropShadow dropshadow4 = new DropShadow();\n-        dropshadow4.setOffsetY(10.0F);\n-        polygon.setEffect(dropshadow4);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DEffect1.java","additions":0,"deletions":107,"binary":false,"changes":107,"status":"deleted"},{"patch":"@@ -1,103 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.effect.DropShadow;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DEffect2 extends Application {\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        Group group2 = new Group();\n-        DropShadow dropshadow = new DropShadow();\n-        dropshadow.setOffsetY(10.0F);\n-        group2.setEffect(dropshadow);\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(Color.RED);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n-\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DEffect2.java","additions":0,"deletions":103,"binary":false,"changes":103,"status":"deleted"},{"patch":"@@ -1,104 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.effect.DropShadow;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DEffect3 extends Application {\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        DropShadow dropshadow = new DropShadow();\n-        dropshadow.setOffsetY(10.0F);\n-        group.setEffect(dropshadow);\n-        Group group2 = new Group();\n-        \/\/                           effect: DropShadow { offsetY: 10 }\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(Color.RED);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        \/\/                                    effect: DropShadow { offsetY: 10 }\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n-\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DEffect3.java","additions":0,"deletions":104,"binary":false,"changes":104,"status":"deleted"},{"patch":"@@ -1,119 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.effect.DropShadow;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DEffectCache extends Application {\n-    private static final Stop[] stops = new Stop[]{new Stop(0, Color.web(\"#992222\")),\n-            new Stop(0.7f, Color.web(\"#772222\")), new Stop(1, Color.web(\"#552222\"))};\n-    private static final LinearGradient lg = new LinearGradient(0, 0, 0, 1, true,\n-            CycleMethod.NO_CYCLE, stops);\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        Group group2 = new Group();\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        DropShadow dropshadow = new DropShadow();\n-        dropshadow.setOffsetY(10.0F);\n-        ellipse.setEffect(dropshadow);\n-        ellipse.setCache(true);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        DropShadow dropshadow2 = new DropShadow();\n-        dropshadow2.setOffsetY(10.0F);\n-        arc.setEffect(dropshadow2);\n-        arc.setCache(true);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(lg);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        DropShadow dropshadow3 = new DropShadow();\n-        dropshadow3.setOffsetY(10.0F);\n-        rectangle.setEffect(dropshadow3);\n-        rectangle.setCache(true);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        DropShadow dropshadow4 = new DropShadow();\n-        dropshadow4.setOffsetY(10.0F);\n-        polygon.setEffect(dropshadow4);\n-        polygon.setCache(true);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DEffectCache.java","additions":0,"deletions":119,"binary":false,"changes":119,"status":"deleted"},{"patch":"@@ -1,107 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DOpacity1 extends Application {\n-    private static final Stop[] stops = new Stop[]{new Stop(0, Color.web(\"#992222\")),\n-            new Stop(0.7f, Color.web(\"#772222\")), new Stop(1, Color.web(\"#552222\"))};\n-    private static final LinearGradient lg = new LinearGradient(0, 0, 0, 1, true,\n-            CycleMethod.NO_CYCLE, stops);\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        Group group2 = new Group();\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        ellipse.setOpacity(0.5F);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        arc.setOpacity(0.5F);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(lg);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        rectangle.setOpacity(0.5F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        polygon.setOpacity(0.5F);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n-\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DOpacity1.java","additions":0,"deletions":107,"binary":false,"changes":107,"status":"deleted"},{"patch":"@@ -1,108 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DOpacity2 extends Application {\n-    private static final Stop[] stops = new Stop[]{new Stop(0, Color.web(\"#992222\")),\n-            new Stop(0.7f, Color.web(\"#772222\")), new Stop(1, Color.web(\"#552222\"))};\n-    private static final LinearGradient lg = new LinearGradient(0, 0, 0, 1, true,\n-            CycleMethod.NO_CYCLE, stops);\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        Group group2 = new Group();\n-        group2.setOpacity(0.5F);\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        \/\/                                    opacity: 0.5\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        \/\/                                    opacity: 0.5\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(Color.RED);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        \/\/                                    opacity: 0.5\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        \/\/                                    opacity: 0.5\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n-\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DOpacity2.java","additions":0,"deletions":108,"binary":false,"changes":108,"status":"deleted"},{"patch":"@@ -1,109 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.collections.ObservableList;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Arc;\n-import javafx.scene.shape.ArcType;\n-import javafx.scene.shape.Ellipse;\n-import javafx.scene.shape.Polygon;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class MixedShapesT3DOpacity3 extends Application {\n-    private static final Stop[] stops = new Stop[]{new Stop(0, Color.web(\"#992222\")),\n-            new Stop(0.7f, Color.web(\"#772222\")), new Stop(1, Color.web(\"#552222\"))};\n-    private static final LinearGradient lg = new LinearGradient(0, 0, 0, 1, true,\n-            CycleMethod.NO_CYCLE, stops);\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        group.setOpacity(0.5F);\n-        Group group2 = new Group();\n-        \/\/                           opacity: 0.5\n-        group2.setRotate(60.0F);\n-        group2.setRotationAxis(Rotate.Y_AXIS);\n-        \/\/                                    opacity: 0.5\n-        Ellipse ellipse = new Ellipse(100.0F, 80.0F, 50.0F, 25.0F);\n-        ellipse.setFill(Color.ORANGE);\n-        ellipse.setStroke(Color.BLUE);\n-        ellipse.setStrokeWidth(5.0F);\n-        ellipse.setOnMouseClicked(e -> System.out.println(\"Ellipse: Mouse Clicked:\" + e));\n-        \/\/                                    opacity: 0.5\n-        Arc arc = new Arc(250.0F, 80.0F, 50.0F, 25.0F, 45.0F, 270.0F);\n-        arc.setType(ArcType.ROUND);\n-        arc.setFill(Color.RED);\n-        arc.setStroke(Color.BLUE);\n-        arc.setStrokeWidth(5.0F);\n-        arc.setOnMouseClicked(e -> System.out.println(\"Arc: Mouse Clicked:\" + e));\n-        \/\/                                    opacity: 0.5\n-        Rectangle rectangle = new Rectangle(50.0F, 150.0F, 100.0F, 75.0F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(Color.GREEN);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setOnMouseClicked(e -> System.out.println(\"Rectangle: Mouse Clicked:\" + e));\n-        \/\/                                    opacity: 0.5\n-        ObservableList<Double> floats = javafx.collections.FXCollections.<Double>observableArrayList();\n-        floats.addAll(200.0, 150.0, 250.0, 220.0, 300.0, 150.0);\n-        Polygon polygon = new Polygon();\n-        polygon.getPoints().addAll(floats);\n-        polygon.setFill(Color.YELLOW);\n-        polygon.setStroke(Color.BLUE);\n-        polygon.setStrokeWidth(5.0F);\n-        polygon.setOnMouseClicked(e -> System.out.println(\"Polygon: Mouse Clicked:\" + e));\n-        group2.getChildren().addAll(ellipse, arc, rectangle, polygon);\n-        group.getChildren().addAll(group2);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n-\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/MixedShapesT3DOpacity3.java","additions":0,"deletions":109,"binary":false,"changes":109,"status":"deleted"},{"patch":"@@ -1,82 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.ClosePath;\n-import javafx.scene.shape.CubicCurveTo;\n-import javafx.scene.shape.HLineTo;\n-import javafx.scene.shape.LineTo;\n-import javafx.scene.shape.MoveTo;\n-import javafx.scene.shape.Path;\n-import javafx.scene.shape.QuadCurveTo;\n-import javafx.scene.shape.VLineTo;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class PathAntiAliasingTest3D extends Application {\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Path Anti-Aliasing Test\");\n-        Scene scene = new Scene(new Group(), 800.0f, 800.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        scene.setFill(Color.BEIGE);\n-        Path path = new Path();\n-        path.setRotate(40.0F);\n-        path.setRotationAxis(Rotate.Y_AXIS);\n-        path.setStroke(Color.RED);\n-        path.setStrokeWidth(8.0F);\n-        path.getElements().clear();\n-        path.getElements().addAll(new MoveTo(100.0F, 600.0F),\n-                                  new LineTo(100.0F, 550.0F),\n-                                  new CubicCurveTo(100.0F, 450.0F, 600.0F, 600.0F, 600.0F, 300.0F),\n-                                  new VLineTo(150.0F),\n-                                  new CubicCurveTo(600.0F, 40.0F, 700.0F, 80.0F, 700.0F, 200.0F),\n-                                  new VLineTo(450.0F),\n-                                  new QuadCurveTo(700.0F, 650.0F, 600.0F, 650.0F),\n-                                  new HLineTo(150.0F),\n-                                  new QuadCurveTo(100.0F, 650.0F, 100.0F, 600.0F),\n-                                  new ClosePath());\n-        ((Group)scene.getRoot()).getChildren().addAll(path);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/PathAntiAliasingTest3D.java","additions":0,"deletions":82,"binary":false,"changes":82,"status":"deleted"},{"patch":"@@ -1,88 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.RotateTransition;\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.ArcTo;\n-import javafx.scene.shape.HLineTo;\n-import javafx.scene.shape.LineTo;\n-import javafx.scene.shape.MoveTo;\n-import javafx.scene.shape.Path;\n-import javafx.scene.shape.QuadCurveTo;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class PathT3D extends Application {\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Group group = new Group();\n-        group.setRotate(30.0F);\n-        group.setRotationAxis(Rotate.Y_AXIS);\n-        Path path = new Path();\n-        ArcTo arcto = new ArcTo();\n-        arcto.setX(10.0F);\n-        arcto.setY(50.0F);\n-        arcto.setRadiusX(100.0F);\n-        arcto.setRadiusY(100.0F);\n-        arcto.setSweepFlag(true);\n-        path.getElements().clear();\n-        path.getElements().addAll(new MoveTo(10.0F, 50.0F), new HLineTo(70.0F), new QuadCurveTo(100.0F, 0.0F, 120.0F, 60.0F), new LineTo(175.0F, 55.0F), arcto);\n-        path.setFill(Color.BLUE);\n-        path.setOnMouseClicked(e -> System.out.println(\"Mouse Clicked:\" + e));\n-        path.setOnMouseEntered(e -> System.out.println(\"Mouse Entered\"));\n-        path.setOnMouseExited(e -> System.out.println(\"Mouse Exited\"));\n-        group.getChildren().addAll(path);\n-        ((Group)scene.getRoot()).getChildren().addAll(group);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-\n-        RotateTransition tx = new RotateTransition(Duration.seconds(20), group);\n-        tx.setToAngle(360);\n-        tx.setCycleCount(RotateTransition.INDEFINITE);\n-        tx.setInterpolator(Interpolator.LINEAR);\n-        tx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/PathT3D.java","additions":0,"deletions":88,"binary":false,"changes":88,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.paint.CycleMethod;\n-import javafx.scene.paint.LinearGradient;\n-import javafx.scene.paint.Stop;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-\n-public class RectangleT3D extends Application {\n-    private static final Stop[] stops = new Stop[]{new Stop(0, Color.web(\"#992222\")),\n-            new Stop(0.7f, Color.web(\"#772222\")), new Stop(1, Color.web(\"#552222\"))};\n-    private static final LinearGradient lg = new LinearGradient(0, 0, 0, 1, true,\n-            CycleMethod.NO_CYCLE, stops);\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 400.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Rectangle rectangle = new Rectangle(100.0F, 100.0F, 200.0F, 100.0F);\n-        rectangle.setArcHeight(20.0F);\n-        rectangle.setArcWidth(20.0F);\n-        rectangle.setFill(lg);\n-        rectangle.setStroke(Color.BLUE);\n-        rectangle.setStrokeWidth(5.0F);\n-        rectangle.setRotate(60.0F);\n-        rectangle.setRotationAxis(Rotate.Y_AXIS);\n-        ((Group)scene.getRoot()).getChildren().addAll(rectangle);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/RectangleT3D.java","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,77 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.scene.transform.Rotate;\n-import javafx.scene.transform.Scale;\n-import javafx.stage.Stage;\n-\n-public class TextAntiAliasingTest3D extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Path Anti-Aliasing Test\");\n-        Scene scene = new Scene(new Group(), 800.0f, 800.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        scene.setFill(Color.BEIGE);\n-        Text text = new Text(-300.0F, 100.0F, \"This is a test 0oO. This is a test 0oO. This is a test 0oO. This is a test 0oO.\");\n-        text.setFill(Color.RED);\n-        text.setFont(new Font(40.0F));\n-        Text text2 = new Text(-600.0F, 300.0F, \"This is a test 0oO. This is a test 0oO. This is a test 0oO. This is a test 0oO.\");\n-        text2.getTransforms().clear();\n-        text2.getTransforms().addAll(new Scale(0.5F, 0.5F));\n-        text2.setFill(Color.RED);\n-        text2.setFont(new Font(80.0F));\n-        Text text3 = new Text(-300.0F, 500.0F, \"This is a test 0oO. This is a test 0oO. This is a test 0oO. This is a test 0oO.\");\n-        text3.getTransforms().clear();\n-        text3.getTransforms().addAll(new Scale(0.8F, 0.8F));\n-        text3.setFill(Color.RED);\n-        text3.setFont(new Font(60.0F));\n-        text3.setRotate(60.0F);\n-        text3.setRotationAxis(Rotate.Y_AXIS);\n-        ((Group)scene.getRoot()).getChildren().addAll(text, text2, text3);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn\\'t supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/TextAntiAliasingTest3D.java","additions":0,"deletions":77,"binary":false,"changes":77,"status":"deleted"},{"patch":"@@ -1,78 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package shapet3dtest;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.PauseTransition;\n-import javafx.animation.RotateTransition;\n-import javafx.animation.SequentialTransition;\n-import javafx.application.Application;\n-import javafx.application.ConditionalFeature;\n-import javafx.application.Platform;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class TextT3D extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        Scene scene = new Scene(new Group(), 1200.0f, 300.0f);\n-        scene.setCamera(new PerspectiveCamera());\n-        Text text = new Text(50.0F, 150.0F, \"This is a test LONGLONGLONG     LONG\");\n-        text.setFont(new Font(50.0F));\n-        text.setRotationAxis(Rotate.Y_AXIS);\n-        text.setOnMouseClicked(e -> System.out.println(\"Mouse Clicked:\" + e));\n-        text.setOnMouseEntered(e -> System.out.println(\"Mouse Entered\"));\n-        text.setOnMouseExited(e -> System.out.println(\"Mouse Exited\"));\n-        ((Group)scene.getRoot()).getChildren().addAll(text);\n-        stage.setScene(scene);\n-        stage.sizeToScene();\n-        if (!Platform.isSupported(ConditionalFeature.SCENE3D)) {\n-            System.out.println(\"*************************************************************\");\n-            System.out.println(\"*    WARNING: common conditional SCENE3D isn't supported    *\");\n-            System.out.println(\"*************************************************************\");\n-        }\n-        stage.show();\n-\n-        final RotateTransition tx = new RotateTransition(Duration.seconds(20), text);\n-        tx.setToAngle(360);\n-        tx.setCycleCount(RotateTransition.INDEFINITE);\n-        tx.setInterpolator(Interpolator.LINEAR);\n-\n-        PauseTransition ptx = new PauseTransition(Duration.seconds(1));\n-        SequentialTransition stx = new SequentialTransition(ptx, tx);\n-        stx.play();\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/Shape3DToy\/src\/main\/java\/shapet3dtest\/TextT3D.java","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"},{"filename":"apps\/toys\/Shape3DToy\/src\/main\/resources\/shapet3dtest\/JavaFX.png","binary":true,"status":"deleted"},{"patch":"@@ -1,236 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package stretchygrid;\n-\n-import javafx.animation.AnimationTimer;\n-import javafx.application.Application;\n-import javafx.beans.property.DoubleProperty;\n-import javafx.beans.property.SimpleDoubleProperty;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Line;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Stage;\n-\n-\/**\n- * A fabric made up of a whole bunch of lines. When using the application, you use the\n- * mouse to click and drag on the fabric, and doing so will cause the fabric to be pulled.\n- * The lines on this fabric are springy and will stretch and return to their original shape.\n- *\n- * This toy is a useful test to see what the overall cost of a large scene graph is, using\n- * nothing but lines. The parameters passed to the grid constructor determine the number of\n- * blocks horizontally and vertically, and the size of each block. By increasing the number of\n- * blocks you put more load on the system, by decreasing the number of blocks, less load.\n- *\/\n-public class StretchyGrid extends Application {\n-    @Override public void start(Stage primaryStage) throws Exception {\n-        final Grid grid = new Grid(320, 320, 4);\n-        AnimationTimer timer = new AnimationTimer() {\n-            @Override public void handle(long now) {\n-                grid.update();\n-            }\n-        };\n-        timer.start();\n-\n-        Scene scene = new Scene(grid);\n-        primaryStage.setScene(scene);\n-        primaryStage.show();\n-    }\n-\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-}\n-\n-class Cell {\n-    Grid grid;\n-    int row, col;\n-    DoubleProperty x = new SimpleDoubleProperty();\n-    DoubleProperty y = new SimpleDoubleProperty();\n-    double xv, yv, cx, cy;\n-    Cell left, right, bottom, top;\n-\n-    Cell(Grid grid, int row, int col) {\n-        this.row = row;\n-        this.col = col;\n-        this.grid = grid;\n-        x.set(col * grid.gSize);\n-        y.set(row * grid.gSize);\n-        cx = x.get();\n-        cy = y.get();\n-    }\n-\n-    \/\/ called after the whole grid.cells sequence has been initialized\/filled\n-    void initAdjacencies() {\n-        left   = (col > 0)             ? grid.cells[row * grid.width + col-1] : null;\n-        right  = (col < grid.width-1)  ? grid.cells[row * grid.width + col+1] : null;\n-        top    = (row > 0)             ? grid.cells[(row-1) * grid.width + col] : null;\n-        bottom = (row < grid.height-1) ? grid.cells[(row+1) * grid.width + col] : null;\n-    }\n-}\n-\n-class Grid extends Group {\n-    double xmouse, ymouse;\n-    double k1 = 0.01;\n-    double k2 = 0.20000000000000001;\n-    double damp = 0.72999999999999998;\n-    int drag = -1;\n-    boolean dragging;\n-    final int width;\n-    final int height;\n-    final double gSize;\n-    final Cell[] cells;\n-\n-    Grid(int numCellsWide, int numCellsHigh, double cellSize) {\n-        this.width = numCellsWide;\n-        this.height = numCellsHigh;\n-        this.gSize = cellSize;\n-\n-        cells = new Cell[height * width];\n-        for (int row=0; row<height; row++) {\n-            for (int col=0; col<width; col++) {\n-                cells[row*height+col] = new Cell(this, row, col);\n-            }\n-        }\n-\n-        for (Cell cell : cells) {\n-            cell.initAdjacencies();\n-        }\n-\n-        getChildren().add(new Group() {{\n-            getChildren().addAll(new Group() {{\n-                Rectangle r = new Rectangle();\n-                r.setSmooth(false);\n-                r.setWidth(width * gSize);\n-                r.setHeight(height * gSize);\n-                r.setFill(Color.BLACK);\n-                r.setOnMousePressed((e) -> {\n-                    int row = (int)(e.getSceneY() \/ gSize);\n-                    int col = (int)(e.getSceneX() \/ gSize);\n-                    if (row >= 0 && row < height && col >=0 && col < width) {\n-                        xmouse = e.getSceneX();\n-                        ymouse = e.getSceneY();\n-                        drag = row * width + col;\n-                    }\n-                    dragging = true;\n-                });\n-                r.setOnMouseDragged((e) -> {\n-                    xmouse = e.getSceneX();\n-                    ymouse = e.getSceneY();\n-                });\n-                r.setOnMouseReleased((e) -> {\n-                    dragging = false;\n-                    drag = -1;\n-                });\n-\n-                Group g = new Group();\n-                for (Cell cell : cells) {\n-                    Group gg = new Group();\n-                    if (cell.right != null) {\n-                        Line line = new Line();\n-                        line.setSmooth(false);\n-                        line.setStroke(Color.WHITE);\n-                        line.startXProperty().bind(cell.x);\n-                        line.startYProperty().bind(cell.y);\n-                        line.endXProperty().bind(cell.right.x);\n-                        line.endYProperty().bind(cell.right.y);\n-                        gg.getChildren().add(line);\n-                    }\n-                    if (cell.bottom != null) {\n-                        Line line = new Line();\n-                        line.setSmooth(false);\n-                        line.setStroke(Color.WHITE);\n-                        line.startXProperty().bind(cell.x);\n-                        line.startYProperty().bind(cell.y);\n-                        line.endXProperty().bind(cell.bottom.x);\n-                        line.endYProperty().bind(cell.bottom.y);\n-                        gg.getChildren().add(line);\n-                    }\n-                    g.getChildren().add(gg);\n-                }\n-\n-                getChildren().addAll(r, g);\n-            }});\n-        }});\n-\n-        \/* \/\/ uncomment to use rectangles instead of lines\n-        [if (cell.right == null) null else Rectangle {\n-            smooth: false;\n-            stroke: null;\/\/Color.GREEN;\n-            fill: Color.GREEN\n-            x: bind cell.x;\n-            y: bind cell.y;\n-            width: bind (cell.right.x-cell.x);\n-            height: 1\/\/bind (cell.y - cell.right.y);\n-        },\n-        if (cell.bottom == null) null else Rectangle {\n-             smooth: false;\n-             fill: Color.RED;\n-             stroke: null\n-             x: bind cell.x;\n-             y: bind cell.y;\n-             width: 1\/\/bind cell.bottom.x;\n-             height: bind (cell.bottom.y-cell.y);\n-        }]\n-        *\/\n-    }\n-\n-    void update() {\n-        if (dragging) {\n-            cells[drag].x.set((int)xmouse);\n-            cells[drag].y.set((int)ymouse);\n-        }\n-        int i = 0;\n-        for (Cell cell : cells) {\n-            if (drag != i) {\n-                cell.xv += (cell.cx - cell.x.get())*k1;\n-                cell.yv += (cell.cy - cell.y.get())*k1;\n-                if (cell.left != null) {\n-                    cell.xv += (cell.left.x.get() + gSize - cell.x.get()) *k2;\n-                    cell.yv += (cell.left.y.get() - cell.y.get()) *k2;\n-                }\n-                if (cell.right != null) {\n-                    cell.xv += (cell.right.x.get() - gSize - cell.x.get()) *k2;\n-                    cell.yv += (cell.right.y.get() - cell.y.get()) *k2;\n-                }\n-                if (cell.top != null) {\n-                    cell.xv += (cell.top.x.get() - cell.x.get()) *k2;\n-                    cell.yv += (cell.top.y.get() + gSize - cell.y.get()) *k2;\n-                }\n-                if (cell.bottom != null) {\n-                    cell.xv += (cell.bottom.x.get() - cell.x.get()) *k2;\n-                    cell.yv += (cell.bottom.y.get() - gSize - cell.y.get()) *k2;\n-                }\n-                cell.xv *= damp;\n-                cell.yv *= damp;\n-                cell.x.set(cell.x.get() + (int)cell.xv);\n-                cell.y.set(cell.y.get() + (int)cell.yv);\n-            }\n-            i++;\n-        }\n-    }\n-}\n","filename":"apps\/toys\/StretchyGrid\/src\/main\/java\/stretchygrid\/StretchyGrid.java","additions":0,"deletions":236,"binary":false,"changes":236,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!-- You may freely edit this file. See commented blocks below for -->\n-<!-- some examples of how to customize the build. -->\n-<!-- (If you delete it and reopen the project it will be recreated.) -->\n-<!-- By default, only the Clean and Build commands use this build script. -->\n-<!-- Commands such as Run, Debug, and Test only use this build script if -->\n-<!-- the Compile on Save feature is turned off for the project. -->\n-<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n-<!-- in the project's Project Properties dialog box.-->\n-<project name=\"TouchSuite\" default=\"default\" basedir=\".\">\n-    <description>Builds, tests, and runs the project TouchSuite.<\/description>\n-    <import file=\"nbproject\/build-impl.xml\"\/>\n-    <!--\n-\n-    There exist several targets which are by default empty and which can be \n-    used for execution of your tasks. These targets are usually executed \n-    before and after some main targets. They are: \n-\n-      -pre-init:                 called before initialization of project properties\n-      -post-init:                called after initialization of project properties\n-      -pre-compile:              called before javac compilation\n-      -post-compile:             called after javac compilation\n-      -pre-compile-single:       called before javac compilation of single file\n-      -post-compile-single:      called after javac compilation of single file\n-      -pre-compile-test:         called before javac compilation of JUnit tests\n-      -post-compile-test:        called after javac compilation of JUnit tests\n-      -pre-compile-test-single:  called before javac compilation of single JUnit test\n-      -post-compile-test-single: called after javac compilation of single JUunit test\n-      -pre-jar:                  called before JAR building\n-      -post-jar:                 called after JAR building\n-      -post-clean:               called after cleaning build products\n-\n-    (Targets beginning with '-' are not intended to be called on their own.)\n-\n-    Example of inserting an obfuscator after compilation could look like this:\n-\n-        <target name=\"-post-compile\">\n-            <obfuscate>\n-                <fileset dir=\"${build.classes.dir}\"\/>\n-            <\/obfuscate>\n-        <\/target>\n-\n-    For list of available properties check the imported \n-    nbproject\/build-impl.xml file. \n-\n-\n-    Another way to customize the build is by overriding existing main targets.\n-    The targets of interest are: \n-\n-      -init-macrodef-javac:     defines macro for javac compilation\n-      -init-macrodef-junit:     defines macro for junit execution\n-      -init-macrodef-debug:     defines macro for class debugging\n-      -init-macrodef-java:      defines macro for class execution\n-      -do-jar:                  JAR building\n-      run:                      execution of project \n-      -javadoc-build:           Javadoc generation\n-      test-report:              JUnit report generation\n-\n-    An example of overriding the target for project execution could look like this:\n-\n-        <target name=\"run\" depends=\"TouchSuite-impl.jar\">\n-            <exec dir=\"bin\" executable=\"launcher.exe\">\n-                <arg file=\"${dist.jar}\"\/>\n-            <\/exec>\n-        <\/target>\n-\n-    Notice that the overridden target depends on the jar target and not only on \n-    the compile target as the regular run target does. Again, for a list of available \n-    properties which you can use, check the target you are overriding in the\n-    nbproject\/build-impl.xml file. \n-\n-    -->\n-<\/project>\n","filename":"apps\/toys\/TouchSuite\/build.xml","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-Manifest-Version: 1.0\n-X-COMMENT: Main-Class will be added automatically by build\n-\n","filename":"apps\/toys\/TouchSuite\/manifest.mf","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,1431 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\n-***         EDIT ..\/build.xml INSTEAD         ***\n-\n-For the purpose of easier reading the script\n-is divided into following sections:\n-\n-  - initialization\n-  - compilation\n-  - jar\n-  - execution\n-  - debugging\n-  - javadoc\n-  - test compilation\n-  - test execution\n-  - test debugging\n-  - applet\n-  - cleanup\n-\n-        -->\n-<project xmlns:j2seproject1=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\" xmlns:j2seproject3=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\" xmlns:jaxrpc=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/jax-rpc\" basedir=\"..\" default=\"default\" name=\"TouchSuite-impl\">\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n-        <condition>\n-            <not>\n-                <antversion atleast=\"1.8.0\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/fail>\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"\/>\n-    <!-- \n-                ======================\n-                INITIALIZATION SECTION \n-                ======================\n-            -->\n-    <target name=\"-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init\" name=\"-init-private\">\n-        <property file=\"nbproject\/private\/config.properties\"\/>\n-        <property file=\"nbproject\/private\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/private\/private.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n-        <property file=\"${user.properties.file}\"\/>\n-        <!-- The two properties below are usually overridden -->\n-        <!-- by the active platform. Just a fallback. -->\n-        <property name=\"default.javac.source\" value=\"1.4\"\/>\n-        <property name=\"default.javac.target\" value=\"1.4\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n-        <property file=\"nbproject\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/project.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\n-        <j2seproject1:property name=\"platform.home\" value=\"platforms.${platform.active}.home\"\/>\n-        <j2seproject1:property name=\"platform.bootcp\" value=\"platforms.${platform.active}.bootclasspath\"\/>\n-        <j2seproject1:property name=\"platform.compiler\" value=\"platforms.${platform.active}.compile\"\/>\n-        <j2seproject1:property name=\"platform.javac.tmp\" value=\"platforms.${platform.active}.javac\"\/>\n-        <condition property=\"platform.javac\" value=\"${platform.home}\/bin\/javac\">\n-            <equals arg1=\"${platform.javac.tmp}\" arg2=\"$${platforms.${platform.active}.javac}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javac\" value=\"${platform.javac.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.java.tmp\" value=\"platforms.${platform.active}.java\"\/>\n-        <condition property=\"platform.java\" value=\"${platform.home}\/bin\/java\">\n-            <equals arg1=\"${platform.java.tmp}\" arg2=\"$${platforms.${platform.active}.java}\"\/>\n-        <\/condition>\n-        <property name=\"platform.java\" value=\"${platform.java.tmp}\"\/>\n-        <j2seproject1:property name=\"platform.javadoc.tmp\" value=\"platforms.${platform.active}.javadoc\"\/>\n-        <condition property=\"platform.javadoc\" value=\"${platform.home}\/bin\/javadoc\">\n-            <equals arg1=\"${platform.javadoc.tmp}\" arg2=\"$${platforms.${platform.active}.javadoc}\"\/>\n-        <\/condition>\n-        <property name=\"platform.javadoc\" value=\"${platform.javadoc.tmp}\"\/>\n-        <condition property=\"platform.invalid\" value=\"true\">\n-            <or>\n-                <contains string=\"${platform.javac}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.java}\" substring=\"$${platforms.\"\/>\n-                <contains string=\"${platform.javadoc}\" substring=\"$${platforms.\"\/>\n-            <\/or>\n-        <\/condition>\n-        <fail unless=\"platform.home\">Must set platform.home<\/fail>\n-        <fail unless=\"platform.bootcp\">Must set platform.bootcp<\/fail>\n-        <fail unless=\"platform.java\">Must set platform.java<\/fail>\n-        <fail unless=\"platform.javac\">Must set platform.javac<\/fail>\n-        <fail if=\"platform.invalid\">\n- The J2SE Platform is not correctly set up.\n- Your active platform is: ${platform.active}, but the corresponding property \"platforms.${platform.active}.home\" is not found in the project's properties files. \n- Either open the project in the IDE and setup the Platform with the same name or add it manually.\n- For example like this:\n-     ant -Duser.properties.file=&lt;path_to_property_file&gt; jar (where you put the property \"platforms.${platform.active}.home\" in a .properties file)\n-  or ant -Dplatforms.${platform.active}.home=&lt;path_to_JDK_home&gt; jar (where no properties file is used) \n-  <\/fail>\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"\/>\n-        <condition property=\"splashscreen.available\">\n-            <and>\n-                <not>\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-                <available file=\"${application.splash}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"main.class.available\">\n-            <and>\n-                <isset property=\"main.class\"\/>\n-                <not>\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"profile.available\">\n-            <and>\n-                <isset property=\"javac.profile\"\/>\n-                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"\/>\n-                <matches pattern=\"1\\.[89](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive\">\n-            <or>\n-                <not>\n-                    <istrue value=\"${jar.archive.disabled}\"\/>\n-                <\/not>\n-                <istrue value=\"${not.archive.disabled}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"do.mkdist\">\n-            <and>\n-                <isset property=\"do.archive\"\/>\n-                <isset property=\"libs.CopyLibs.classpath\"\/>\n-                <not>\n-                    <istrue value=\"${mkdist.disabled}\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+manifest.available\">\n-            <and>\n-                <isset property=\"manifest.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+main.class.available\">\n-            <and>\n-                <isset property=\"main.class.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+splashscreen.available\">\n-            <and>\n-                <isset property=\"splashscreen.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+profile.available\">\n-            <and>\n-                <isset property=\"profile.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"have.tests\">\n-            <or\/>\n-        <\/condition>\n-        <condition property=\"have.sources\">\n-            <or>\n-                <available file=\"${src.dir}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"netbeans.home+have.tests\">\n-            <and>\n-                <isset property=\"netbeans.home\"\/>\n-                <isset property=\"have.tests\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"no.javadoc.preview\">\n-            <and>\n-                <isset property=\"javadoc.preview\"\/>\n-                <isfalse value=\"${javadoc.preview}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"run.jvmargs\" value=\"\"\/>\n-        <property name=\"run.jvmargs.ide\" value=\"\"\/>\n-        <property name=\"javac.compilerargs\" value=\"\"\/>\n-        <property name=\"work.dir\" value=\"${basedir}\"\/>\n-        <condition property=\"no.deps\">\n-            <and>\n-                <istrue value=\"${no.dependencies}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javac.debug\" value=\"true\"\/>\n-        <property name=\"javadoc.preview\" value=\"true\"\/>\n-        <property name=\"application.args\" value=\"\"\/>\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"\/>\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"\/>\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n-            <and>\n-                <isset property=\"javadoc.encoding\"\/>\n-                <not>\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"\/>\n-        <property name=\"includes\" value=\"**\"\/>\n-        <property name=\"excludes\" value=\"\"\/>\n-        <property name=\"do.depend\" value=\"false\"\/>\n-        <condition property=\"do.depend.true\">\n-            <istrue value=\"${do.depend}\"\/>\n-        <\/condition>\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"\/>\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath\/p:'${toString:endorsed.classpath.path}'\">\n-            <and>\n-                <isset property=\"endorsed.classpath\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\n-            <isset property=\"profile.available\"\/>\n-        <\/condition>\n-        <property name=\"jar.index\" value=\"false\"\/>\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"\/>\n-        <property name=\"copylibs.rebase\" value=\"true\"\/>\n-        <available file=\"${meta.inf.dir}\/persistence.xml\" property=\"has.persistence.xml\"\/>\n-        <condition property=\"junit.available\">\n-            <or>\n-                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"\/>\n-                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"testng.available\">\n-            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"\/>\n-        <\/condition>\n-        <condition property=\"junit+testng.available\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <istrue value=\"${testng.available}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\n-            <istrue value=\"${junit+testng.available}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n-        <fail unless=\"src.dir\">Must set src.dir<\/fail>\n-        <fail unless=\"build.dir\">Must set build.dir<\/fail>\n-        <fail unless=\"dist.dir\">Must set dist.dir<\/fail>\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir<\/fail>\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir<\/fail>\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir<\/fail>\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir<\/fail>\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes<\/fail>\n-        <fail unless=\"dist.jar\">Must set dist.jar<\/fail>\n-    <\/target>\n-    <target name=\"-init-macrodef-property\">\n-        <macrodef name=\"property\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <compilerarg value=\"-processorpath\"\/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"\/>\n-                    <compilerarg line=\"${ap.processors.internal}\"\/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"\/>\n-                    <compilerarg value=\"-s\"\/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"\/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" executable=\"${platform.javac}\" fork=\"yes\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n-        <macrodef name=\"depend\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <sequential>\n-                <depend cache=\"${build.dir}\/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                <\/depend>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"force-recompile\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <sequential>\n-                <fail unless=\"javac.includes\">Must set javac.includes<\/fail>\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n-                    <path>\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"\/>\n-                    <\/path>\n-                    <globmapper from=\"*.java\" to=\"*.class\"\/>\n-                <\/pathconvert>\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"\/>\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"\/>\n-                <delete>\n-                    <files includesfile=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-                <delete>\n-                    <fileset file=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\n-        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <not>\n-                    <isset property=\"test.method\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"\/>\n-                <isset property=\"test.method\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target name=\"-init-test-properties\">\n-        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"\/>\n-        <property name=\"test.binarytestincludes\" value=\"\"\/>\n-        <property name=\"test.binaryexcludes\" value=\"\"\/>\n-    <\/target>\n-    <target if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"\/>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\n-        <macrodef name=\"testng\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <union id=\"test.set\"\/>\n-                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"\/>\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" jvm=\"${platform.java}\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"TouchSuite\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\n-                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"\/>\n-                    <propertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/propertyset>\n-                    <customize\/>\n-                <\/testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-test-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <echo>No tests executed.<\/echo>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:testng>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\n-        <macrodef name=\"test\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <sequential>\n-                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-debug\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"\/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-test-properties\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-debug-batch\">\n-        <macrodef name=\"junit-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" jvm=\"${platform.java}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                            <filename name=\"${test.binarytestincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <customize\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\n-        <macrodef name=\"test-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:junit-debug excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize\/>\n-                <\/j2seproject3:junit-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\n-        <macrodef name=\"testng-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\n-                    <isset property=\"test.method\"\/>\n-                <\/condition>\n-                <condition else=\"-suitename TouchSuite -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\n-                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"\/>\n-                <\/condition>\n-                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"\/>\n-                <mkdir dir=\"${build.test.results.dir}\"\/>\n-                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\n-                    <customize>\n-                        <customize2\/>\n-                        <jvmarg value=\"-ea\"\/>\n-                        <arg line=\"${testng.debug.mode}\"\/>\n-                        <arg line=\"-d ${build.test.results.dir}\"\/>\n-                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"\/>\n-                        <arg line=\"${testng.cmd.args}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\n-        <macrodef name=\"testng-debug-impl\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <element implicit=\"true\" name=\"customize2\" optional=\"true\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2\/>\n-                <\/j2seproject3:testng-debug>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <classpath>\n-                            <path path=\"${run.test.classpath}\"\/>\n-                        <\/classpath>\n-                        <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                        <jvmarg line=\"${run.jvmargs}\"\/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <\/customize>\n-                <\/j2seproject3:test-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\n-        <macrodef name=\"test-debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <attribute default=\"\" name=\"testmethods\"\/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"\/>\n-            <attribute default=\"\" name=\"testMethod\"\/>\n-            <sequential>\n-                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2>\n-                        <syspropertyset>\n-                            <propertyref prefix=\"test-sys-prop.\"\/>\n-                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                        <\/syspropertyset>\n-                    <\/customize2>\n-                <\/j2seproject3:testng-debug-impl>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"\/>\n-    <!--\n-                pre NB7.2 profiling section; consider it deprecated\n-            -->\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"\/>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\n-        <macrodef name=\"resolve\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"profile\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property environment=\"env\"\/>\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"\/>\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-                    <arg line=\"${application.args}\"\/>\n-                    <classpath>\n-                        <path path=\"${run.classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm<\/fail>\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent<\/fail>\n-    <\/target>\n-    <!--\n-                end of pre NB7.2 profiling section\n-            -->\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n-        <macrodef name=\"nbjpdastart\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"name\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"\" name=\"stopclassname\"\/>\n-            <sequential>\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <bootclasspath>\n-                        <path path=\"${platform.bootcp}\"\/>\n-                    <\/bootclasspath>\n-                <\/nbjpdastart>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"nbjpdareload\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"\/>\n-            <sequential>\n-                <nbjpdareload>\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n-                        <include name=\"${fix.includes}*.class\"\/>\n-                    <\/fileset>\n-                <\/nbjpdareload>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-debug-args\">\n-        <exec executable=\"${platform.java}\" outputproperty=\"version-output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition property=\"have-jdk-older-than-1.4\">\n-            <or>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\n-            <istrue value=\"${have-jdk-older-than-1.4}\"\/>\n-        <\/condition>\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n-            <isset property=\"debug.transport\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n-        <macrodef name=\"debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-java\">\n-        <macrodef name=\"java\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"jvm\" name=\"jvm\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\" jvm=\"${platform.java}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-copylibs\">\n-        <macrodef name=\"copylibs\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n-                    <path path=\"${run.classpath}\"\/>\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"\/>\n-                <\/pathconvert>\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"\/>\n-                    <chainedmapper>\n-                        <flattenmapper\/>\n-                        <filtermapper>\n-                            <replacestring from=\" \" to=\"%20\"\/>\n-                        <\/filtermapper>\n-                        <globmapper from=\"*\" to=\"lib\/*\"\/>\n-                    <\/chainedmapper>\n-                <\/pathconvert>\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"\/>\n-                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n-                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-                    <manifest>\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"\/>\n-                        <customize\/>\n-                    <\/manifest>\n-                <\/copylibs>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-presetdef-jar\">\n-        <presetdef name=\"jar\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"\/>\n-            <\/jar>\n-        <\/presetdef>\n-    <\/target>\n-    <target name=\"-init-ap-cmdline-properties\">\n-        <property name=\"annotation.processing.enabled\" value=\"true\"\/>\n-        <property name=\"annotation.processing.processors.list\" value=\"\"\/>\n-        <property name=\"annotation.processing.processor.options\" value=\"\"\/>\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"\/>\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"\/>\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"\/>\n-        <condition property=\"ap.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n-            <isfalse value=\"${annotation.processing.enabled}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n-        <property name=\"ap.cmd.line.internal\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"\/>\n-    <!--\n-                ===================\n-                COMPILATION SECTION\n-                ===================\n-            -->\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n-        <property location=\"${build.dir}\/built-jar.properties\" name=\"built-jar.properties\"\/>\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n-        <echo level=\"warn\" message=\"Cycle detected: TouchSuite was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"\/>\n-        <antcall target=\"-warn-already-built-jar\"\/>\n-        <propertyfile file=\"${built-jar.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"\/>\n-    <target depends=\"init\" name=\"-check-automatic-build\">\n-        <available file=\"${build.classes.dir}\/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n-        <antcall target=\"clean\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n-        <mkdir dir=\"${build.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\n-        <pathconvert property=\"build.generated.subdirs\">\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"*\"\/>\n-            <\/dirset>\n-        <\/pathconvert>\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"\/>\n-        <copy todir=\"${build.classes.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy todir=\"${build.classes.dir}\/META-INF\">\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"\/>\n-    <target name=\"-pre-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile\/>\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"\/>\n-    <!--\n-                ====================\n-                JAR BUILDING SECTION\n-                ====================\n-            -->\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"\/>\n-        <mkdir dir=\"${dist.jar.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"\/>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Profile\" value=\"${javac.profile}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"\/>\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}\/META-INF\"\/>\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF\/${splashscreen.basename}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"\/>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <echo level=\"info\">${platform.java} -jar \"${dist.jar.resolved}\"<\/echo>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\n-        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"\/>\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\n-            <path path=\"${run.classpath}\"\/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"\/>\n-        <\/pathconvert>\n-        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\n-            <isset property=\"main.class.available\"\/>\n-        <\/condition>\n-        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"\/>\n-    <\/target>\n-    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\n-        <delete>\n-            <fileset file=\"${tmp.manifest.file}\"\/>\n-        <\/delete>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"\/>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"\/>\n-    <target name=\"-post-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"\/>\n-    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar\" description=\"Build JAR.\" name=\"jar\"\/>\n-    <!--\n-                =================\n-                EXECUTION SECTION\n-                =================\n-            -->\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n-        <j2seproject1:java>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <target name=\"-do-not-recompile\">\n-        <property name=\"javac.includes.binary\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single\" name=\"run-single\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"\/>\n-    <\/target>\n-    <!--\n-                =================\n-                DEBUGGING SECTION\n-                =================\n-            -->\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n-        <j2seproject3:debug>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"\/>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"\/>\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"\/>\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"\/>\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\n-        <fail unless=\"fix.includes\">Must set fix.includes<\/fail>\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n-        <j2seproject1:nbjpdareload\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"\/>\n-    <!--\n-                =================\n-                PROFILING SECTION\n-                =================\n-            -->\n-    <!--\n-                pre NB7.2 profiler integration\n-            -->\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class<\/fail>\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"${profile.class}\"\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/profile>\n-    <\/target>\n-    <target depends=\"profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\n-            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <test name=\"${profile.class}\"\/>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-            <syspropertyset>\n-                <propertyref prefix=\"test-sys-prop.\"\/>\n-                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-            <\/syspropertyset>\n-            <formatter type=\"brief\" usefile=\"false\"\/>\n-            <formatter type=\"xml\"\/>\n-        <\/junit>\n-    <\/target>\n-    <!--\n-                end of pre NB72 profiling section\n-            -->\n-    <target if=\"netbeans.home\" name=\"-profile-check\">\n-        <condition property=\"profiler.configured\">\n-            <or>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"\/>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"\/>\n-            <\/or>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\n-        <startprofiler\/>\n-        <antcall target=\"run\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"\/>\n-    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"test-single\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <startprofiler\/>\n-        <antcal target=\"run-test-with-main\"\/>\n-    <\/target>\n-    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <startprofiler\/>\n-        <antcall target=\"run-applet\"\/>\n-    <\/target>\n-    <!--\n-                ===============\n-                JAVADOC SECTION\n-                ===============\n-            -->\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n-        <mkdir dir=\"${dist.javadoc.dir}\"\/>\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n-            <and>\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <exec executable=\"${platform.java}\" failonerror=\"false\" outputproperty=\"platform.version.output\">\n-            <arg value=\"-version\"\/>\n-        <\/exec>\n-        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\n-            <matches multiline=\"true\" pattern=\"1\\.[56](\\..*)?\" string=\"${platform.version.output}\"\/>\n-        <\/condition>\n-        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" executable=\"${platform.javadoc}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n-            <classpath>\n-                <path path=\"${javac.classpath}\"\/>\n-            <\/classpath>\n-            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/*.java\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/*.java\"\/>\n-                <exclude name=\"*.java\"\/>\n-            <\/fileset>\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"\/>\n-        <\/javadoc>\n-        <copy todir=\"${dist.javadoc.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-        <\/copy>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n-        <nbbrowse file=\"${dist.javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"\/>\n-    <!--\n-                =========================\n-                TEST COMPILATION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n-        <mkdir dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"\/>\n-    <target name=\"-pre-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"\/>\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"\" srcdir=\"\"\/>\n-        <copy todir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"\/>\n-    <!--\n-                =======================\n-                TEST EXECUTION SECTION\n-                =======================\n-            -->\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n-        <j2seproject3:test includes=\"${includes}\" testincludes=\"**\/*Test.java\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"\/>\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"\/>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"\/>\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"\/>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\n-        <fail unless=\"test.class\">Must select some files in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"\/>\n-    <!--\n-                =======================\n-                TEST DEBUGGING SECTION\n-                =======================\n-            -->\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method<\/fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"\/>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"\/>\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"\/>\n-    <!--\n-                =========================\n-                APPLET EXECUTION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <!--\n-                =========================\n-                APPLET DEBUGGING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"\/>\n-    <!--\n-                ===============\n-                CLEANUP SECTION\n-                ===============\n-            -->\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n-        <property location=\"${build.dir}\/built-clean.properties\" name=\"built-clean.properties\"\/>\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n-        <echo level=\"warn\" message=\"Cycle detected: TouchSuite was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"\/>\n-        <antcall target=\"-warn-already-built-clean\"\/>\n-        <propertyfile file=\"${built-clean.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init\" name=\"-do-clean\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"\/>\n-    <\/target>\n-    <target name=\"-post-clean\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"\/>\n-    <target name=\"-check-call-dep\">\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"\/>\n-        <condition property=\"should.call.dep\">\n-            <and>\n-                <not>\n-                    <isset property=\"already.built.${call.subproject}\"\/>\n-                <\/not>\n-                <available file=\"${call.script}\"\/>\n-            <\/and>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n-            <propertyset>\n-                <propertyref prefix=\"transfer.\"\/>\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"\/>\n-            <\/propertyset>\n-        <\/ant>\n-    <\/target>\n-<\/project>\n","filename":"apps\/toys\/TouchSuite\/nbproject\/build-impl.xml","additions":0,"deletions":1431,"binary":false,"changes":1431,"status":"deleted"},{"patch":"@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=f90a43f2\n-build.xml.script.CRC32=9a6cc0a2\n-build.xml.stylesheet.CRC32=8064a381@1.74.2.48\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject\/build-impl.xml.data.CRC32=f90a43f2\n-nbproject\/build-impl.xml.script.CRC32=f5ced176\n-nbproject\/build-impl.xml.stylesheet.CRC32=876e7a8f@1.74.2.48\n","filename":"apps\/toys\/TouchSuite\/nbproject\/genfiles.properties","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,77 +0,0 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}\/ap-source-output\n-application.title=TouchSuite\n-application.vendor=kcr\n-build.classes.dir=${build.dir}\/classes\n-build.classes.excludes=**\/*.java,**\/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}\/generated\n-build.generated.sources.dir=${build.dir}\/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}\/test\/classes\n-build.test.results.dir=${build.dir}\/test\/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-# Files in build.classes.dir which should be excluded from distribution jar\n-dist.archive.excludes=\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}\/TouchSuite.jar\n-dist.javadoc.dir=${dist.dir}\/javadoc\n-endorsed.classpath=\n-excludes=\n-file.reference.TouchSuite-src=src\n-includes=**\n-jar.compress=false\n-javac.classpath=\n-# Space-separated list of extra javac options\n-compile.patch=@..\/..\/..\/build\/compile.args\n-javac.compilerargs=${compile.patch} \n-javac.deprecation=false\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=1.9\n-javac.target=1.9\n-javac.test.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n-javadoc.private=false\n-javadoc.splitindex=true\n-javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-main.class=touchsuite.Main\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}\/META-INF\n-mkdist.disabled=false\n-platform.active=JDK_1.9\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project.\n-# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n-# To set system properties for unit tests define test-sys-prop.name=value:\n-run.patch=@..\/..\/..\/build\/run.args\n-run.jvmargs=${run.patch} \n-run.test.classpath=\\\n-    ${javac.test.classpath}:\\\n-    ${build.test.classes.dir}\n-source.encoding=UTF-8\n-src.dir=${file.reference.TouchSuite-src}\n","filename":"apps\/toys\/TouchSuite\/nbproject\/project.properties","additions":0,"deletions":77,"binary":false,"changes":77,"status":"deleted"},{"patch":"@@ -1,14 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.java.j2seproject<\/type>\n-    <configuration>\n-        <data xmlns=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <name>TouchSuite<\/name>\n-            <explicit-platform explicit-source-supported=\"true\"\/>\n-            <source-roots>\n-                <root id=\"src.dir\"\/>\n-            <\/source-roots>\n-            <test-roots\/>\n-        <\/data>\n-    <\/configuration>\n-<\/project>\n","filename":"apps\/toys\/TouchSuite\/nbproject\/project.xml","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.input.TouchPoint;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Circle;\n-import javafx.scene.shape.Line;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Stage;\n-\n-public class ConsumeTouches extends Application {\n-\n-    long start = -1;\n-    long end = -1;\n-    Line line;\n-    long id1, id2;\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Consume Touches\");\n-\n-        final Group root = new Group();\n-        final Scene scene = new Scene(root, 500, 200);\n-\n-        final Rectangle bg = new Rectangle(500, 200, Color.LIGHTYELLOW);\n-\n-        final Circle circle = new Circle(50, Color.GREEN);\n-        circle.setTranslateX(100);\n-        circle.setTranslateY(100);\n-\n-        final Line axis = new Line(0, 100, 500, 100);\n-\n-        final Line hand = new Line(250, 0, 250, 200);\n-        hand.setStroke(Color.RED);\n-        hand.setStrokeWidth(3);\n-\n-        root.getChildren().addAll(bg, axis, hand, circle);\n-\n-        root.addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-            @Override public void handle(TouchEvent event) {\n-                for (TouchPoint tp : event.getTouchPoints()) {\n-                    hand.setStartX(tp.getSceneX());\n-                    hand.setEndX(tp.getSceneX());\n-                }\n-            }\n-        });\n-\n-        circle.addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-            @Override public void handle(TouchEvent event) {\n-                circle.setTranslateX(event.getTouchPoint().getSceneX());\n-                event.consume();\n-            }\n-        });\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates touch event consuming. When \"\n-                + \"you touch the scene anywhere, the red line updates its \"\n-                + \"position. But when you touch the circle, you can move it \"\n-                + \"around, it consumes the events so they don't cause the \"\n-                + \"red line to change its position.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/ConsumeTouches.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -1,158 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.collections.FXCollections;\n-import javafx.geometry.Orientation;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.control.ListView;\n-import javafx.scene.control.ScrollBar;\n-import javafx.scene.control.ScrollPane;\n-import javafx.scene.layout.HBox;\n-import javafx.scene.layout.VBox;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Stage;\n-\n-public class Controls extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Controls\");\n-\n-        Group root = new Group();\n-        Scene scene = new Scene(root, 600, 600);\n-        scene.setFill(Color.LIGHTGREEN);\n-\n-        VBox sbs = new VBox();\n-        sbs.setLayoutX(10);\n-        sbs.setLayoutY(10);\n-\n-        ScrollBar vert = new ScrollBar();\n-        vert.setOrientation(Orientation.VERTICAL);\n-        vert.setMin(0);\n-        vert.setMax(100);\n-        vert.setVisibleAmount(10);\n-        vert.setPrefHeight(500);\n-        vert.setPrefWidth(40);\n-        vert.setBlockIncrement(10);\n-        vert.setUnitIncrement(1);\n-\n-        HBox lst = new HBox(10);\n-\n-        ScrollBar horz = new ScrollBar();\n-        horz.setOrientation(Orientation.HORIZONTAL);\n-        horz.setMin(0);\n-        horz.setMax(100);\n-        horz.setVisibleAmount(10);\n-        horz.setPrefHeight(40);\n-        horz.setPrefWidth(500);\n-        horz.setBlockIncrement(10);\n-        horz.setUnitIncrement(1);\n-\n-        ListView list = new ListView();\n-        list.setItems(FXCollections.observableArrayList(\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Tenth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Twentieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Thirtieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Fourtieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Fiftieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Sixtieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Seventieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Eightieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Ninetieth line\",\n-                \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Hunderth line\"\n-                ));\n-        list.setTranslateX(10);\n-        list.setTranslateY(10);\n-\n-\/\/        scene.addEventFilter(MouseEvent.MOUSE_DRAGGED, new EventHandler<MouseEvent>() {\n-\/\/            @Override public void handle(MouseEvent event) {\n-\/\/                event.consume();\n-\/\/            }\n-\/\/        });\n-\/\/        scene.addEventFilter(MouseEvent.MOUSE_PRESSED, new EventHandler<MouseEvent>() {\n-\/\/            @Override public void handle(MouseEvent event) {\n-\/\/                event.consume();\n-\/\/            }\n-\/\/        });\n-\n-        VBox rects = new VBox();\n-        rects.getChildren().addAll(\n-                new Rectangle(100, 100, Color.RED),\n-                new Rectangle(100, 100, Color.YELLOW),\n-                new Rectangle(100, 100, Color.GREEN),\n-                new Rectangle(100, 100, Color.BLUE),\n-                new Rectangle(100, 100, Color.ORANGE),\n-                new Rectangle(100, 100, Color.GRAY),\n-                new Rectangle(100, 100, Color.GREEN),\n-                new Rectangle(100, 100, Color.BLUE),\n-                new Rectangle(100, 100, Color.ALICEBLUE),\n-                new Rectangle(100, 100, Color.BROWN),\n-                new Rectangle(100, 100, Color.GREEN),\n-                new Rectangle(100, 100, Color.BLUE),\n-                new Rectangle(100, 100, Color.CYAN),\n-                new Rectangle(100, 100, Color.YELLOW),\n-                new Rectangle(100, 100, Color.DARKGOLDENROD),\n-                new Rectangle(100, 100, Color.BLUE),\n-                new Rectangle(100, 100, Color.AZURE),\n-                new Rectangle(100, 100, Color.YELLOW),\n-                new Rectangle(100, 100, Color.AQUA),\n-                new Rectangle(100, 100, Color.BLUE)\n-                );\n-\n-\n-        ScrollPane sp = new ScrollPane();\n-        sp.setPrefHeight(450);\n-        sp.setPrefWidth(200);\n-        sp.setContent(rects);\n-        sp.setTranslateX(10);\n-        sp.setTranslateY(10);\n-        sp.setPannable(true);\n-\n-        sbs.getChildren().addAll(horz, lst);\n-        lst.getChildren().addAll(vert, list, sp);\n-\n-        root.getChildren().addAll(sbs);\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application contains several controls to demonstrate \"\n-                + \"their current behavior on touch screen.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/Controls.java","additions":0,"deletions":158,"binary":false,"changes":158,"status":"deleted"},{"patch":"@@ -1,138 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.SwipeEvent;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.input.TouchPoint;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Line;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Stage;\n-\n-public class DrawLine extends Application {\n-\n-    long start = -1;\n-    long end = -1;\n-    Line line;\n-    long id1, id2;\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Draw Line\");\n-\n-        final Group root = new Group();\n-        final Scene scene = new Scene(root, 500, 500);\n-\n-        final Rectangle bg = new Rectangle(500, 500, Color.WHITE);\n-\n-        root.getChildren().add(bg);\n-\n-        root.setOnSwipeLeft(new EventHandler<SwipeEvent>() {\n-            @Override public void handle(SwipeEvent event) {\n-                if (event.getTouchCount() == 1) {\n-                    root.getChildren().clear();\n-                    root.getChildren().add(bg);\n-                }\n-                event.consume();\n-            }\n-        });\n-\n-        root.setOnTouchPressed(new EventHandler<TouchEvent>() {\n-            @Override public void handle(TouchEvent event) {\n-                if (event.getTouchCount() == 2 && id1 == id2) {\n-                    TouchPoint first = event.getTouchPoints().get(0);\n-                    TouchPoint second = event.getTouchPoints().get(1);\n-\n-                    line = new Line(first.getX(), first.getY(),\n-                            second.getX(), second.getY());\n-                    id1 = first.getId();\n-                    id2 = second.getId();\n-                    root.getChildren().add(line);\n-                }\n-                event.consume();\n-            }\n-        });\n-\n-        root.setOnTouchReleased(new EventHandler<TouchEvent>() {\n-            @Override public void handle(TouchEvent event) {\n-                if (line == null) {\n-                    return;\n-                }\n-                if (event.getTouchPoint().getId() == id1) {\n-                    id1 = -1;\n-                }\n-                if (event.getTouchPoint().getId() == id2) {\n-                    id2 = -1;\n-                }\n-                if (id1 == id2) { \/\/ both are -1\n-                    line.setStrokeWidth(3);\n-                    line = null;\n-                }\n-                event.consume();\n-            }\n-        });\n-\n-        root.setOnTouchMoved(new EventHandler<TouchEvent>() {\n-            @Override public void handle(TouchEvent event) {\n-                if (line == null) {\n-                    return;\n-                }\n-                TouchPoint tp = event.getTouchPoint();\n-                if (tp.getId() == id1) {\n-                    line.setStartX(tp.getX());\n-                    line.setStartY(tp.getY());\n-                }\n-                if (tp.getId() == id2) {\n-                    line.setEndX(tp.getX());\n-                    line.setEndY(tp.getY());\n-                }\n-                event.consume();\n-            }\n-        });\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates drawing a line using two fingers. \"\n-                + \"When you put two fingers on the screen, a line appears. Each \"\n-                + \"finger then drags its line end point around until it is \"\n-                + \"released. You can swipe left to clear the board.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/DrawLine.java","additions":0,"deletions":138,"binary":false,"changes":138,"status":"deleted"},{"patch":"@@ -1,697 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.animation.ScaleTransition;\n-import javafx.animation.SequentialTransition;\n-import javafx.animation.TranslateTransition;\n-import javafx.application.Application;\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.MouseDragEvent;\n-import javafx.scene.input.MouseEvent;\n-import javafx.scene.input.RotateEvent;\n-import javafx.scene.input.ScrollEvent;\n-import javafx.scene.input.SwipeEvent;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.input.TouchPoint;\n-import javafx.scene.input.ZoomEvent;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Circle;\n-import javafx.scene.shape.Rectangle;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class EventLogger extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Touch Test\");\n-\n-        Group root = new Group();\n-        Scene scene = new Scene(root, 600, 600);\n-        scene.setFill(Color.LIGHTGREEN);\n-\n-        root.getChildren().add(new TouchRectangle(Color.AQUA));\/\/background rectangle\n-        root.getChildren().add(new TouchCircle(100, 100, Color.RED, \"Red\"));\n-        root.getChildren().add(new TouchCircle(500, 100, Color.GREEN, \"Green\"));\n-        root.getChildren().add(new TouchCircle(100, 500, Color.BLUE, \"Blue\"));\n-        root.getChildren().add(new TouchCircle(500, 500, Color.YELLOW, \"Yellow\"));\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-\n-    private static class TouchCircle extends Circle {\n-        private long touchId = -1;\n-        double touchx, touchy;\n-        boolean playing = false;\n-\n-        public TouchCircle(int x, int y, Color color, final String colorName) {\n-            super(75, color);\n-            setTranslateX(x);\n-            setTranslateY(y);\n-\n-            setOnMouseEntered(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MouseEntered\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseExited(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MouseExited\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseDragged(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MouseDragged\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseMoved(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MouseMoved\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMousePressed(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MousePressed\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseReleased(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MouseReleased\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseClicked(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(colorName + \" circle received: MouseClicked\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-            \/\/TouchEvents\n-            setOnTouchPressed(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    System.out.println(colorName + \" circle received: TouchPressed\");\n-                    if (touchId == -1) {\n-                        touchId = event.getTouchPoint().getId();\n-                        touchx = event.getTouchPoint().getSceneX() - getTranslateX();\n-                        touchy = event.getTouchPoint().getSceneY() - getTranslateY();\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchReleased(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    System.out.println(colorName + \" circle received: TouchReleased\");\n-                    if (event.getTouchPoint().getId() == touchId) {\n-                        touchId = -1;\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchMoved(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    System.out.println(colorName + \" circle received: TouchMoved separateHandler\");\n-                    if (!playing && event.getTouchPoint().getId() == touchId) {\n-                        setTranslateX(event.getTouchPoint().getSceneX() - touchx);\n-                        setTranslateY(event.getTouchPoint().getSceneY() - touchy);\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-            \/\/ Here I have to use ANY, or register the same handler to both\n-            \/\/ MOVED and STATIONARY\n-            addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (event.getEventType() != TouchEvent.TOUCH_MOVED\n-                            && event.getEventType() != TouchEvent.TOUCH_STATIONARY) {\n-                        return;\n-                    }\n-                    if(event.getEventType() == TouchEvent.TOUCH_MOVED) {\n-                        System.out.println(colorName + \" circle received: TouchMoved\");\n-                    } else {\n-                        System.out.println(colorName + \" circle received: TouchStationary\");\n-                    }\n-                    if (event.getTouchPoint().getId() != touchId) {\n-                        return;\n-                    }\n-\n-                    if (event.getTouchCount() == 2) {\n-                        TouchPoint other = event.getTouchPoints().get(0);\n-                        if (other.getId() == event.getTouchPoint().getId()) {\n-                            other = event.getTouchPoints().get(1);\n-                        }\n-\n-                        if (other.getState() == TouchPoint.State.PRESSED\n-                                && !(other.belongsTo(TouchCircle.this))\n-                                && !(other.getTarget() instanceof TouchCircle)) {\n-                            ScaleTransition hide = new ScaleTransition(Duration.millis(100), TouchCircle.this);\n-                            hide.setToX(0.0001);\n-                            hide.setToY(0.0001);\n-\n-                            TranslateTransition move = new TranslateTransition(Duration.ONE, TouchCircle.this);\n-                            move.setToX(other.getSceneX());\n-                            move.setToY(other.getSceneY());\n-\n-                            move.setOnFinished(new EventHandler<ActionEvent>() {\n-                                @Override public void handle(ActionEvent event) {\n-                                    playing = false;\n-                                }\n-                            });\n-\n-                            ScaleTransition show = new ScaleTransition(Duration.millis(100), TouchCircle.this);\n-                            show.setToX(1);\n-                            show.setToY(1);\n-\n-                            SequentialTransition t = new SequentialTransition(hide, move, show);\n-                            playing = true;\n-                            t.play();\n-\n-                            touchx = 0;\n-                            touchy = 0;\n-                            touchId = other.getId();\n-\n-                            event.getTouchPoint().ungrab();\n-                            other.grab(TouchCircle.this);\n-                        }\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-\n-            \/\/ScrollEvent\n-            setOnScrollStarted(new EventHandler<ScrollEvent>(){\n-                @Override\n-                public void handle(ScrollEvent t) {\n-                    System.out.println(colorName + \" circle received: ScrollStarted\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnScrollFinished(new EventHandler<ScrollEvent>(){\n-                @Override\n-                public void handle(ScrollEvent t) {\n-                    System.out.println(colorName + \" circle received: ScrollFinished\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnScroll(new EventHandler<ScrollEvent>(){\n-                @Override\n-                public void handle(ScrollEvent t) {\n-                    System.out.println(colorName + \" circle received: Scroll\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-            \/\/ZoomEvents\n-            setOnZoomStarted(new EventHandler<ZoomEvent>(){\n-                @Override\n-                public void handle(ZoomEvent t) {\n-                    System.out.println(colorName + \" circle received: ZoomStarted\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnZoomFinished(new EventHandler<ZoomEvent>(){\n-                @Override\n-                public void handle(ZoomEvent t) {\n-                    System.out.println(colorName + \" circle received: ZoomFinished\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnZoom(new EventHandler<ZoomEvent>(){\n-                @Override\n-                public void handle(ZoomEvent t) {\n-                    System.out.println(colorName + \" circle received: Zoom\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-            \/\/RotateEvents\n-            setOnRotationStarted(new EventHandler<RotateEvent>(){\n-                @Override\n-                public void handle(RotateEvent t) {\n-                    System.out.println(colorName + \" circle received: RotationStarted\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnRotationFinished(new EventHandler<RotateEvent>(){\n-                @Override\n-                public void handle(RotateEvent t) {\n-                    System.out.println(colorName + \" circle received: RotationFinished\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnRotate(new EventHandler<RotateEvent>(){\n-                @Override\n-                public void handle(RotateEvent t) {\n-                    System.out.println(colorName + \" circle received: Rotation\");\n-                    t.consume();\n-                }\n-            });\n-\n-            \/\/SwipeEvents\n-            setOnSwipeDown(new EventHandler<SwipeEvent>(){\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(colorName + \" circle received: SwipeDown\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnSwipeUp(new EventHandler<SwipeEvent>(){\n-\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(colorName + \" circle received: SwipeUp\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnSwipeLeft(new EventHandler<SwipeEvent>(){\n-\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(colorName + \" circle received: SwipeLeft\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnSwipeRight(new EventHandler<SwipeEvent>(){\n-\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(colorName + \" circle received: SwipeRight\");\n-                    t.consume();\n-                }\n-            });\n-\n-            \/\/MouseDragEvents\n-            setOnMouseDragEntered(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(colorName + \" circle received: MOUSEDRAGEvent Entered\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseDragExited(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(colorName + \" circle received: MOUSEDRAGEvent Exited\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseDragOver(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(colorName + \" circle received: MOUSEDRAGEvent Over\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseDragReleased(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(colorName + \" circle received: MOUSEDRAGEvent Released\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-        }\n-\n-\n-    }\n-\n-    private static class TouchRectangle extends Rectangle {\n-        private long touchId = -1;\n-        double touchx, touchy;\n-        boolean playing = false;\n-\n-        public TouchRectangle(Color color) {\n-            super(0,0,1024,1024);\n-            setFill(color);\n-\n-            setOnMouseEntered(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MouseEntered\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseExited(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MouseExited\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseDragged(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MouseDragged\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseMoved(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MouseMoved\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMousePressed(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MousePressed\");\n-                    t.consume();\n-                }\n-\n-            });\n-\n-            setOnMouseReleased(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MouseReleased\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseClicked(new EventHandler<MouseEvent>() {\n-\n-                @Override\n-                public void handle(MouseEvent t) {\n-                    System.out.println(\"Rectangle received: MouseClicked\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-            \/\/TouchEvents\n-            setOnTouchPressed(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    System.out.println(\"Rectangle received: TouchPressed\");\n-\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchReleased(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    System.out.println(\"Rectangle received: TouchReleased\");\n-\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchMoved(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    System.out.println(\"Rectangle received: TouchMoved separateHandler\");\n-\n-                    event.consume();\n-                }\n-            });\n-\n-            \/\/ Here I have to use ANY, or register the same handler to both\n-            \/\/ MOVED and STATIONARY\n-            addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (event.getEventType() != TouchEvent.TOUCH_MOVED\n-                            && event.getEventType() != TouchEvent.TOUCH_STATIONARY) {\n-                        return;\n-                    }\n-\n-                    if(event.getEventType() == TouchEvent.TOUCH_MOVED) {\n-                        System.out.println(\"Rectangle received: TouchMoved\");\n-                    } else {\n-                        System.out.println(\"Rectangle received: TouchStationary\");\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-\n-            \/\/ScrollEvent\n-            setOnScrollStarted(new EventHandler<ScrollEvent>(){\n-                @Override\n-                public void handle(ScrollEvent t) {\n-                    System.out.println(\"Rectangle received: ScrollStarted\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnScrollFinished(new EventHandler<ScrollEvent>(){\n-                @Override\n-                public void handle(ScrollEvent t) {\n-                    System.out.println(\"Rectangle received: ScrollFinished\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnScroll(new EventHandler<ScrollEvent>(){\n-                @Override\n-                public void handle(ScrollEvent t) {\n-                    System.out.println(\"Rectangle received: Scroll\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-            \/\/ZoomEvents\n-            setOnZoomStarted(new EventHandler<ZoomEvent>(){\n-                @Override\n-                public void handle(ZoomEvent t) {\n-                    System.out.println(\"Rectangle received: ZoomStarted\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnZoomFinished(new EventHandler<ZoomEvent>(){\n-                @Override\n-                public void handle(ZoomEvent t) {\n-                    System.out.println(\"Rectangle received: ZoomFinished\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnZoom(new EventHandler<ZoomEvent>(){\n-                @Override\n-                public void handle(ZoomEvent t) {\n-                    System.out.println(\"Rectangle received: Zoom\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-            \/\/RotateEvents\n-            setOnRotationStarted(new EventHandler<RotateEvent>(){\n-                @Override\n-                public void handle(RotateEvent t) {\n-                    System.out.println(\"Rectangle received: RotationStarted\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnRotationFinished(new EventHandler<RotateEvent>(){\n-                @Override\n-                public void handle(RotateEvent t) {\n-                    System.out.println(\"Rectangle received: RotationFinished\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnRotate(new EventHandler<RotateEvent>(){\n-                @Override\n-                public void handle(RotateEvent t) {\n-                    System.out.println(\"Rectangle received: Rotation\");\n-                    t.consume();\n-                }\n-            });\n-\n-            \/\/SwipeEvents\n-            setOnSwipeDown(new EventHandler<SwipeEvent>(){\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(\"Rectangle received: SwipeDown\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnSwipeUp(new EventHandler<SwipeEvent>(){\n-\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(\"Rectangle received: SwipeUp\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnSwipeLeft(new EventHandler<SwipeEvent>(){\n-\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(\"Rectangle received: SwipeLeft\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnSwipeRight(new EventHandler<SwipeEvent>(){\n-\n-                @Override\n-                public void handle(SwipeEvent t) {\n-                    System.out.println(\"Rectangle received: SwipeRight\");\n-                    t.consume();\n-                }\n-            });\n-\n-            \/\/MouseDragEvents\n-            setOnMouseDragEntered(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(\"Rectangle received: MOUSEDRAGEvent Entered\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseDragExited(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(\"Rectangle received: MOUSEDRAGEvent Exited\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseDragOver(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(\"Rectangle received: MOUSEDRAGEvent Over\");\n-                    t.consume();\n-                }\n-            });\n-\n-            setOnMouseDragReleased(new EventHandler<MouseDragEvent>(){\n-\n-                @Override\n-                public void handle(MouseDragEvent t) {\n-                    System.out.println(\"Rectangle received: MOUSEDRAGEvent Released\");\n-                    t.consume();\n-                }\n-            });\n-\n-\n-        }\n-\n-\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates independent usage of particular \"\n-                + \"touch points and grabbing changes.\\n\\n\"\n-                + \"Each of the circles can be dragged independenty \"\n-                + \"and simultaneously around the board.\\n\\n\"\n-                + \"When you touch only one circle and touch second finger \"\n-                + \"somewhere on the empty space, the touchced circle jumps \"\n-                + \"there and can be further dragged by the new finger, or \"\n-                + \"even jumped again. In addition it prints received events \"\n-                + \"to standard output.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/EventLogger.java","additions":0,"deletions":697,"binary":false,"changes":697,"status":"deleted"},{"patch":"@@ -1,263 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.animation.RotateTransition;\n-import javafx.application.Application;\n-import javafx.application.Platform;\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n-import javafx.geometry.Point3D;\n-import javafx.scene.Group;\n-import javafx.scene.PerspectiveCamera;\n-import javafx.scene.Scene;\n-import javafx.scene.effect.Lighting;\n-import javafx.scene.input.MouseEvent;\n-import javafx.scene.input.RotateEvent;\n-import javafx.scene.input.ScrollEvent;\n-import javafx.scene.input.SwipeEvent;\n-import javafx.scene.input.ZoomEvent;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class HelloGestures extends Application {\n-\n-    private Rectangle rect;\n-    private Group swipeRotator;\n-    private int gestureCount;\n-    private boolean rectScrolled = false;\n-    private boolean playing = false;\n-    private Scene scene;\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Hello Gestures\");\n-\n-        Group root = new Group();\n-        scene = new Scene(root, 600, 600);\n-        scene.setFill(Color.LIGHTGREEN);\n-\n-        rect = new Rectangle(200, 200, 200, 200);\n-        rect.setFill(Color.RED);\n-\n-        rect.setOnScroll(new EventHandler<ScrollEvent>() {\n-            @Override public void handle(ScrollEvent event) {\n-                rect.setTranslateX(rect.getTranslateX() + event.getDeltaX());\n-                rect.setTranslateY(rect.getTranslateY() + event.getDeltaY());\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnZoom(new EventHandler<ZoomEvent>() {\n-            @Override public void handle(ZoomEvent event) {\n-                rect.setScaleX(rect.getScaleX() * event.getZoomFactor());\n-                rect.setScaleY(rect.getScaleY() * event.getZoomFactor());\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnRotate(new EventHandler<RotateEvent>() {\n-            @Override public void handle(RotateEvent event) {\n-                rect.setRotate(rect.getRotate() + event.getAngle());\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnScrollStarted(new EventHandler<ScrollEvent>() {\n-            @Override public void handle(ScrollEvent event) {\n-                inc();\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnScrollFinished(new EventHandler<ScrollEvent>() {\n-            @Override public void handle(ScrollEvent event) {\n-                dec();\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnZoomStarted(new EventHandler<ZoomEvent>() {\n-            @Override public void handle(ZoomEvent event) {\n-                inc();\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnZoomFinished(new EventHandler<ZoomEvent>() {\n-            @Override public void handle(ZoomEvent event) {\n-                dec();\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnRotationStarted(new EventHandler<RotateEvent>() {\n-            @Override public void handle(RotateEvent event) {\n-                inc();\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnRotationFinished(new EventHandler<RotateEvent>() {\n-            @Override public void handle(RotateEvent event) {\n-                dec();\n-                event.consume();\n-            }\n-        });\n-\n-        rect.setOnMouseReleased(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                event.consume();\n-            }\n-        });\n-\n-        scene.addEventFilter(ScrollEvent.SCROLL, new EventHandler<ScrollEvent>() {\n-            @Override public void handle(ScrollEvent event) {\n-                \/\/ react only on swipes that didn't move the rectangle\n-                rectScrolled = event.isDirect() && event.getTarget() == rect;\n-            }\n-        });\n-\n-        rect.setOnSwipeLeft(new EventHandler<SwipeEvent>() {\n-            @Override public void handle(SwipeEvent event) {\n-                if (!rectScrolled) {\n-                    rotate3d(event.getTouchCount(), Rotate.Y_AXIS);\n-                    event.consume();\n-                }\n-            }\n-        });\n-\n-        rect.setOnSwipeRight(new EventHandler<SwipeEvent>() {\n-            @Override public void handle(SwipeEvent event) {\n-                if (!rectScrolled) {\n-                    rotate3d(-event.getTouchCount(), Rotate.Y_AXIS);\n-                    event.consume();\n-                }\n-            }\n-        });\n-\n-        rect.setOnSwipeUp(new EventHandler<SwipeEvent>() {\n-            @Override public void handle(SwipeEvent event) {\n-                if (!rectScrolled) {\n-                    rotate3d(-event.getTouchCount(), Rotate.X_AXIS);\n-                    event.consume();\n-                }\n-            }\n-        });\n-\n-        rect.setOnSwipeDown(new EventHandler<SwipeEvent>() {\n-            @Override public void handle(SwipeEvent event) {\n-                if (!rectScrolled) {\n-                    rotate3d(event.getTouchCount(), Rotate.X_AXIS);\n-                    event.consume();\n-                }\n-            }\n-        });\n-\n-        scene.setOnMouseReleased(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                if (event.isStillSincePress()) {\n-                    rect.setTranslateX(0);\n-                    rect.setTranslateY(0);\n-                    rect.setRotate(0);\n-                    rect.setScaleX(1);\n-                    rect.setScaleY(1);\n-                }\n-            }\n-        });\n-\n-        swipeRotator = new Group(rect);\n-        root.getChildren().addAll(swipeRotator);\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    private void inc() {\n-        if (gestureCount == 0) {\n-            rect.setEffect(new Lighting());\n-        }\n-        gestureCount++;\n-    }\n-\n-    private void dec() {\n-        gestureCount--;\n-        if (gestureCount == 0) {\n-            rect.setEffect(null);\n-        }\n-    }\n-\n-    private void rotate3d(final int count, Point3D axis) {\n-        if (playing) {\n-            return;\n-        }\n-\n-        playing = true;\n-\n-        final RotateTransition rt = new RotateTransition(\n-                Duration.millis(Math.abs(500 * count)), swipeRotator);\n-        rt.setAxis(axis);\n-        rt.setFromAngle(0);\n-        rt.setToAngle(count * 180);\n-\n-        rt.setOnFinished(new EventHandler<ActionEvent>() {\n-            @Override public void handle(ActionEvent event) {\n-                playing = false;\n-                if (Math.abs(count) % 2 == 1) {\n-                    \/\/ flip the whole thing to avoid inverse rotation\n-                    swipeRotator.setRotate(0);\n-                    rect.setRotate(-rect.getRotate());\n-                }\n-                scene.setCamera(null);\n-            }\n-        });\n-\n-\n-        PerspectiveCamera pc = new PerspectiveCamera();\n-        pc.setFieldOfView(50);\n-        scene.setCamera(pc);\n-\n-        rt.play();\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates simple usage of common gestures. \"\n-                + \"The rectangle can be scrolled, rotated and zoomed, all \"\n-                + \"at the same time. Swipe over the rectangle rotates it in \"\n-                + \"the swipe direction as many times as many fingers were used \"\n-                + \"for the gesture. Tap the scene to return the square to its \"\n-                + \"original position.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/HelloGestures.java","additions":0,"deletions":263,"binary":false,"changes":263,"status":"deleted"},{"patch":"@@ -1,178 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.animation.ScaleTransition;\n-import javafx.animation.SequentialTransition;\n-import javafx.animation.TranslateTransition;\n-import javafx.application.Application;\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.input.TouchPoint;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Circle;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class HelloMultiTouch extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Touch Test\");\n-\n-        Group root = new Group();\n-        Scene scene = new Scene(root, 600, 600);\n-        scene.setFill(Color.LIGHTGREEN);\n-\n-        root.getChildren().add(new TouchCircle(100, 100, Color.RED));\n-        root.getChildren().add(new TouchCircle(500, 100, Color.GREEN));\n-        root.getChildren().add(new TouchCircle(100, 500, Color.BLUE));\n-        root.getChildren().add(new TouchCircle(500, 500, Color.YELLOW));\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-\n-    private static class TouchCircle extends Circle {\n-        private long touchId = -1;\n-        double touchx, touchy;\n-        boolean playing = false;\n-\n-        public TouchCircle(int x, int y, Color color) {\n-            super(75, color);\n-            setTranslateX(x);\n-            setTranslateY(y);\n-\n-            setOnTouchPressed(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (touchId == -1) {\n-                        touchId = event.getTouchPoint().getId();\n-                        touchx = event.getTouchPoint().getSceneX() - getTranslateX();\n-                        touchy = event.getTouchPoint().getSceneY() - getTranslateY();\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchReleased(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (event.getTouchPoint().getId() == touchId) {\n-                        touchId = -1;\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchMoved(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (!playing && event.getTouchPoint().getId() == touchId) {\n-                        setTranslateX(event.getTouchPoint().getSceneX() - touchx);\n-                        setTranslateY(event.getTouchPoint().getSceneY() - touchy);\n-                    }\n-                    event.consume();\n-                }\n-            });\n-\n-            \/\/ Here I have to use ANY, or register the same handler to both\n-            \/\/ MOVED and STATIONARY\n-            addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (event.getEventType() != TouchEvent.TOUCH_MOVED\n-                            && event.getEventType() != TouchEvent.TOUCH_STATIONARY) {\n-                        return;\n-                    }\n-\n-                    if (event.getTouchPoint().getId() != touchId) {\n-                        return;\n-                    }\n-\n-                    if (event.getTouchCount() == 2) {\n-                        TouchPoint other = event.getTouchPoints().get(0);\n-                        if (other.getId() == event.getTouchPoint().getId()) {\n-                            other = event.getTouchPoints().get(1);\n-                        }\n-\n-                        if (other.getState() == TouchPoint.State.PRESSED\n-                                && !(other.belongsTo(TouchCircle.this))\n-                                && !(other.getTarget() instanceof TouchCircle)) {\n-                            ScaleTransition hide = new ScaleTransition(Duration.millis(100), TouchCircle.this);\n-                            hide.setToX(0.0001);\n-                            hide.setToY(0.0001);\n-\n-                            TranslateTransition move = new TranslateTransition(Duration.ONE, TouchCircle.this);\n-                            move.setToX(other.getSceneX());\n-                            move.setToY(other.getSceneY());\n-\n-                            move.setOnFinished(new EventHandler<ActionEvent>() {\n-                                @Override public void handle(ActionEvent event) {\n-                                    playing = false;\n-                                }\n-                            });\n-\n-                            ScaleTransition show = new ScaleTransition(Duration.millis(100), TouchCircle.this);\n-                            show.setToX(1);\n-                            show.setToY(1);\n-\n-                            SequentialTransition t = new SequentialTransition(hide, move, show);\n-                            playing = true;\n-                            t.play();\n-\n-                            touchx = 0;\n-                            touchy = 0;\n-                            touchId = other.getId();\n-\n-                            event.getTouchPoint().ungrab();\n-                            other.grab(TouchCircle.this);\n-                        }\n-                    }\n-                    event.consume();\n-                }\n-            });\n-        }\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates independent usage of particular \"\n-                + \"touch points and grabbing changes.\\n\\n\"\n-                + \"Each of the circles can be dragged independenty \"\n-                + \"and simultaneously around the board.\\n\\n\"\n-                + \"When you touch only one circle and touch second finger \"\n-                + \"somewhere on the empty space, the touchced circle jumps \"\n-                + \"there and can be further dragged by the new finger, or \"\n-                + \"even jumped again.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/HelloMultiTouch.java","additions":0,"deletions":178,"binary":false,"changes":178,"status":"deleted"},{"patch":"@@ -1,175 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.geometry.Point2D;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.image.Image;\n-import javafx.scene.image.ImageView;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.input.TouchPoint;\n-import javafx.scene.paint.Color;\n-import javafx.stage.Stage;\n-\n-public class ImageBoard extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        Group root = new Group();\n-        Scene scene = new Scene(root, 800, 600);\n-        stage.setTitle(\"Image Board\");\n-        stage.setScene(scene);\n-        scene.setFill(Color.SILVER);\n-        stage.show();\n-\n-        for (int i=1; i<=10; i++) {\n-            Image img = new Image(ImageBoard.class.getResource(\n-                    \"images\/flower_\" + i + \".jpg\").toExternalForm(), false);\n-            MultiTouchImageView view = new MultiTouchImageView(img);\n-            double w = view.getBoundsInParent().getWidth();\n-            double h = view.getBoundsInParent().getHeight();\n-            view.setTranslateX((scene.getWidth()-w)*Math.random());\n-            view.setTranslateY((scene.getHeight()-h)*Math.random());\n-            view.setRotate(-20+(40*Math.random()));\n-            root.getChildren().add(view);\n-        }\n-    }\n-\n-\n-    public static class MultiTouchImageView extends ImageView {\n-        private int eventSet = -1;\n-        private int touchPointCounter = 0;\n-        private TouchPoint firstTouchPoint;\n-        private double rotateAnchor, scaleAnchor;\n-        private Point2D translateAnchor;\n-        private boolean needsReset = true;\n-        private boolean singleFinger;\n-\n-        public MultiTouchImageView(Image img) {\n-            super(img);\n-            setSmooth(true);\n-\n-            addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    final TouchPoint touchPoint = event.getTouchPoint();\n-\n-                    if (eventSet == event.getEventSetId()) {\n-                        touchPointCounter++;\n-                    } else {\n-                        eventSet = event.getEventSetId();\n-                        touchPointCounter = 0;\n-                    }\n-\n-                    switch(touchPointCounter) {\n-                    case 0:\n-                        \/\/ single-finger dragging\n-                        if (event.getEventType() == TouchEvent.TOUCH_PRESSED) {\n-                            singleFinger = true;\n-\n-                            translateAnchor = new Point2D(\n-                                    getTranslateX() - touchPoint.getSceneX(),\n-                                    getTranslateY() - touchPoint.getSceneY());\n-\n-                            toFront();\n-                        } else if (singleFinger) {\n-                            setTranslateX(translateAnchor.getX() + touchPoint.getSceneX());\n-                            setTranslateY(translateAnchor.getY() + touchPoint.getSceneY());\n-                        }\n-\n-                        firstTouchPoint = touchPoint;\n-                        break;\n-                    case 1:\n-                        \/\/ two-finger gestures\n-                        double distance = getDistance(firstTouchPoint, touchPoint);\n-                        double angle = getAngle(firstTouchPoint, touchPoint);\n-                        Point2D center = getCenter(firstTouchPoint, touchPoint);\n-\n-                        if (needsReset) {\n-                            singleFinger = false;\n-                            needsReset = false;\n-                            rotateAnchor = getRotate() - angle;\n-                            scaleAnchor = getScaleX() \/ distance;\n-                            translateAnchor = new Point2D(\n-                                    getTranslateX() - center.getX(),\n-                                    getTranslateY() - center.getY());\n-                        } else {\n-                            setRotate(rotateAnchor + angle);\n-                            setScaleX(scaleAnchor * distance);\n-                            setScaleY(scaleAnchor * distance);\n-                            setTranslateX(translateAnchor.getX() + center.getX());\n-                            setTranslateY(translateAnchor.getY() + center.getY());\n-                        }\n-                    }\n-                }\n-            });\n-\n-            setOnTouchReleased(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    needsReset = true;\n-                }\n-            });\n-            setOnTouchPressed(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    needsReset = true;\n-                }\n-            });\n-        }\n-\n-        private double getAngle(TouchPoint tp1, TouchPoint tp2) {\n-            return Math.toDegrees(Math.atan2(\n-                    tp2.getSceneY() - tp1.getSceneY(),\n-                    tp2.getSceneX() - tp1.getSceneX()));\n-        }\n-\n-        private double getDistance(TouchPoint tp1, TouchPoint tp2) {\n-            final double dx = tp2.getSceneX() - tp1.getSceneX();\n-            final double dy = tp2.getSceneY() - tp1.getSceneY();\n-            return Math.sqrt((dx*dx) + (dy*dy));\n-        }\n-\n-        private Point2D getCenter(TouchPoint tp1, TouchPoint tp2) {\n-            return new Point2D(\n-                    tp1.getSceneX() + (tp2.getSceneX() - tp1.getSceneX()) \/ 2,\n-                    tp1.getSceneY() + (tp2.getSceneY() - tp1.getSceneY()) \/ 2);\n-        }\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This is a simple image board application. \"\n-                + \"You can drag the images around, zoom and rotate them, \"\n-                + \"all of that simultaneously on more images.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        launch(args);\n-    }\n-\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/ImageBoard.java","additions":0,"deletions":175,"binary":false,"changes":175,"status":"deleted"},{"patch":"@@ -1,593 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.animation.Interpolator;\n-import javafx.animation.ParallelTransition;\n-import javafx.animation.RotateTransition;\n-import javafx.animation.ScaleTransition;\n-import javafx.animation.TranslateTransition;\n-import javafx.application.Application;\n-import javafx.beans.InvalidationListener;\n-import javafx.beans.Observable;\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n-import javafx.geometry.Bounds;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.image.Image;\n-import javafx.scene.image.ImageView;\n-import javafx.scene.input.MouseButton;\n-import javafx.scene.input.MouseEvent;\n-import javafx.scene.input.RotateEvent;\n-import javafx.scene.input.ScrollEvent;\n-import javafx.scene.input.ZoomEvent;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.transform.Rotate;\n-import javafx.scene.transform.Scale;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class ImageViewer extends Application {\n-\n-    private static final int GAP = 150;\n-    Image[] images;\n-    ImageView left, center, right;\n-    Group view;\n-    Rectangle bg;\n-    int index;\n-    boolean dragleft = true;\n-    boolean clockwise = true;\n-    boolean origSize = false;\n-\n-    double mouseX, mouseY;\n-\n-    Rotate rotate = new Rotate();\n-    Scale scale = new Scale();\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Image Viewer\");\n-\n-        Group root = new Group();\n-        Scene scene = new Scene(root, 500, 500);\n-\n-        bg = new Rectangle(500, 500, Color.BLACK);\n-\n-        images = loadImages();\n-        left = new ImageView();\n-        center = new ImageView();\n-        right = new ImageView();\n-\n-        if (images.length > 0) setup(center, images[0]);\n-        if (images.length > 1) setup(right, images[1]);\n-\n-        view = new Group(bg, left, right, center);\n-\n-        center.setTranslateX((bg.getWidth() - center.getImage().getWidth()) \/ 2);\n-        alignNeighbours();\n-\n-        root.getChildren().addAll(view);\n-        stage.setScene(scene);\n-        stage.show();\n-\n-        scene.widthProperty().addListener(new ChangeListener<Number>() {\n-            @Override\n-            public void changed(ObservableValue<? extends Number> ov, Number t, Number t1) {\n-                resize();\n-            }\n-        });\n-\n-        scene.heightProperty().addListener(new ChangeListener<Number>() {\n-            @Override\n-            public void changed(ObservableValue<? extends Number> ov, Number t, Number t1) {\n-                resize();\n-            }\n-        });\n-\n-        view.setOnScroll(new EventHandler<ScrollEvent>() {\n-            @Override public void handle(ScrollEvent event) {\n-                if (event.isInertia()) {\n-                    return;\n-                }\n-\n-                if (!event.isDirect()) {\n-\n-                    if (Math.abs(event.getDeltaX()) > Math.abs(event.getDeltaY())) {\n-                        drag(-event.getDeltaX(), 0);\n-                        event.consume();\n-                    } else if (Math.abs(event.getDeltaY()) > 0.5) {\n-                        double factor =\n-                                event.getDeltaY() > 0 ? 0.8 : 1.25;\n-\n-                        double x = event.getX();\n-                        double y = event.getY();\n-                        zoom(x, y, factor, false);\n-                        dragEnd(false);\n-                    }\n-                    return;\n-                }\n-\n-                if (event.getTouchCount() > 1) {\n-                    return;\n-                }\n-                drag(event.getDeltaX(), event.getDeltaY());\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnScrollFinished(new EventHandler<ScrollEvent>() {\n-            @Override public void handle(ScrollEvent event) {\n-                dragEnd(true);\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnMousePressed(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                if (event.isSynthesized()) {\n-                    return;\n-                }\n-                mouseX = event.getSceneX();\n-                mouseY = event.getSceneY();\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnMouseDragged(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                if (event.isSynthesized() || event.isStillSincePress()) {\n-                    return;\n-                }\n-                drag(event.getSceneX() - mouseX, event.getSceneY() - mouseY);\n-                mouseX = event.getSceneX();\n-                mouseY = event.getSceneY();\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnMouseReleased(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                if (event.isSynthesized() || event.isStillSincePress()) {\n-                    return;\n-                }\n-                dragEnd(true);\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnMouseClicked(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                if (event.isStillSincePress() && !event.isSynthesized()) {\n-                    double angle = center.getRotate();\n-                    double toangle = 0;\n-                    while (toangle < Math.abs(angle)) {\n-                        toangle += 90;\n-                    }\n-\n-                    if (angle < 0) {\n-                        toangle = - toangle;\n-                    }\n-                    if (event.getButton() == MouseButton.SECONDARY) {\n-                        toangle -= 90;\n-                    }\n-                    if (event.getButton() == MouseButton.PRIMARY) {\n-                        toangle += 90;\n-                    }\n-\n-                    if (toangle != angle) {\n-                        RotateTransition t = new RotateTransition(Duration.millis(200), center);\n-                        t.setInterpolator(Interpolator.EASE_OUT);\n-                        t.setToAngle(toangle);\n-                        t.play();\n-                    }\n-                }\n-                event.consume();\n-            }\n-        });\n-\n-\n-        center.translateXProperty().addListener(new InvalidationListener() {\n-            public void invalidated(Observable o) {\n-                center.getTranslateX();\n-                alignNeighbours();\n-            }\n-        });\n-\n-        center.setOnRotate(new EventHandler<RotateEvent>() {\n-            @Override public void handle(RotateEvent event) {\n-                if (event.isInertia()) {\n-                    return;\n-                }\n-                center.setRotate(center.getRotate() + event.getAngle());\n-                clockwise = event.getAngle() > 0;\n-                event.consume();\n-            }\n-        });\n-\n-        center.setOnRotationFinished(new EventHandler<RotateEvent>() {\n-            @Override public void handle(RotateEvent event) {\n-                double angle = center.getRotate();\n-\n-                double toangle = 0;\n-                while (toangle < Math.abs(angle)) {\n-                    toangle += 90;\n-                }\n-\n-                if (angle < 0) {\n-                    toangle = - toangle;\n-                    if (clockwise) {\n-                        toangle += 90;\n-                    }\n-                } else {\n-                    if (!clockwise) {\n-                        toangle -= 90;\n-                    }\n-                }\n-\n-                if (toangle - angle > 75) {\n-                    toangle -= 90;\n-                }\n-                if (toangle - angle < -75) {\n-                    toangle += 90;\n-                }\n-\n-                RotateTransition t = new RotateTransition(Duration.millis(200), center);\n-                t.setInterpolator(Interpolator.EASE_OUT);\n-                t.setToAngle(toangle);\n-                t.play();\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnZoom(new EventHandler<ZoomEvent>() {\n-            @Override public void handle(ZoomEvent event) {\n-                if (event.isInertia()) {\n-                    return;\n-                }\n-                zoom(event.getX(), event.getY(), event.getZoomFactor(), false);\n-                event.consume();\n-            }\n-        });\n-\n-        view.setOnZoomFinished(new EventHandler<ZoomEvent>() {\n-            @Override public void handle(ZoomEvent event) {\n-                zoomEnd();\n-                event.consume();\n-            }\n-        });\n-    }\n-\n-    private void zoom(double x, double y, double factor, boolean slow) {\n-        final double w = center.getBoundsInParent().getWidth();\n-        final double h = center.getBoundsInParent().getHeight();\n-\n-        final double minx = center.getBoundsInParent().getMinX();\n-        final double miny = center.getBoundsInParent().getMinY();\n-\n-        double dw = w * (factor - 1);\n-        double xr = 2 * (w \/ 2 - (x - minx)) \/ w;\n-\n-        double dh = h * (factor - 1);\n-        double yr = 2 * (h \/ 2 - (y - miny)) \/ h;\n-\n-        if (slow) {\n-            ScaleTransition st = new ScaleTransition(Duration.millis(200), center);\n-            st.setToX(center.getScaleX() * factor);\n-            st.setToY(center.getScaleY() * factor);\n-            st.setInterpolator(Interpolator.LINEAR);\n-\n-            TranslateTransition tt = new TranslateTransition(Duration.millis(100), center);\n-            tt.setToX(center.getTranslateX() + xr * dw \/ 2);\n-            tt.setToY(center.getTranslateY() + yr * dh \/ 2);\n-            tt.setInterpolator(Interpolator.EASE_IN);\n-\n-            ParallelTransition pt = new ParallelTransition(st, tt);\n-            pt.setOnFinished(new EventHandler<ActionEvent>() {\n-                @Override public void handle(ActionEvent event) {\n-                    alignNeighbours();\n-                }\n-            });\n-            pt.play();\n-\n-        } else {\n-            center.setScaleX(center.getScaleX() * factor);\n-            center.setScaleY(center.getScaleY() * factor);\n-            move (xr * dw \/ 2, yr * dh \/ 2);\n-            alignNeighbours();\n-        }\n-\n-    }\n-\n-    private void zoomEnd() {\n-        Image img = center.getImage();\n-\n-        final double originalScale = Math.min(\n-                (bg.getHeight() - 20) \/ img.getHeight(),\n-                (bg.getWidth() - 20) \/ img.getWidth());\n-\n-        final double newScale = center.getScaleX();\n-        final double ratio = newScale \/ originalScale;\n-\n-        if (ratio > 0.8 && ratio < 1.25) {\n-            origSize = true;\n-            ScaleTransition st = new ScaleTransition(Duration.millis(200), center);\n-            st.setToX(originalScale);\n-            st.setToY(originalScale);\n-\n-            TranslateTransition tt = new TranslateTransition(Duration.millis(200), center);\n-            tt.setToX((bg.getWidth() - img.getWidth()) \/ 2);\n-            tt.setToY((bg.getHeight() - img.getHeight()) \/ 2);\n-\n-            tt.setOnFinished(new EventHandler<ActionEvent>() {\n-                @Override public void handle(ActionEvent event) {\n-                    origSize = false;\n-                }\n-            });\n-\n-            tt.play();\n-            st.play();\n-        }\n-    }\n-\n-    private void drag(double deltaX, double deltaY) {\n-        if (deltaX != 0) {\n-            dragleft = (deltaX < 0);\n-        }\n-        move (deltaX, deltaY);\n-        alignNeighbours();\n-    }\n-\n-    private void dragEnd(boolean slow) {\n-        final double imgWidth = center.getImage().getWidth();\n-        final double imgHeight = center.getImage().getHeight();\n-\n-        final double minx = center.getTranslateX()\n-                - imgWidth * (center.getScaleX() - 1) \/ 2;\n-        final double maxx = center.getTranslateX()\n-                + imgWidth * (1 + (center.getScaleX() - 1) \/ 2);\n-        final double w = center.getImage().getWidth() * center.getScaleX();\n-\n-        final double miny = center.getTranslateY()\n-                - imgHeight * (center.getScaleY() - 1) \/ 2;\n-        final double maxy = center.getTranslateY()\n-                + imgHeight * (1 + (center.getScaleY() - 1) \/ 2);\n-        final double h = center.getImage().getHeight() * center.getScaleY();\n-\n-        final double rgap = maxx + getGap();\n-        final double lgap = minx - getGap();\n-\n-        final TranslateTransition t =\n-                new TranslateTransition(Duration.millis(200), center);\n-\n-        if ((lgap < 0 || dragleft || (!dragleft && left.getImage() == null)) &&\n-                (rgap > bg.getWidth() || !dragleft || (dragleft && right.getImage() == null))) {\n-            double tox = center.getTranslateX();\n-            if (w > bg.getWidth()) {\n-                if (minx > 0) {\n-                    tox = center.getTranslateX() - minx;\n-                } else if (maxx < bg.getWidth()) {\n-                    tox = center.getTranslateX() + bg.getWidth() - maxx;\n-                }\n-            } else {\n-                tox = (bg.getWidth() - center.getImage().getWidth()) \/ 2;\n-            }\n-\n-            double toy = center.getTranslateY();\n-            if (h > bg.getHeight()) {\n-                if (miny > 0) {\n-                    toy = center.getTranslateY() - miny;\n-                } else if (maxy < bg.getHeight()) {\n-                    toy = center.getTranslateY() + bg.getHeight() - maxy;\n-                }\n-            } else {\n-                toy = (bg.getHeight() - center.getImage().getHeight()) \/ 2;\n-            }\n-\n-            t.setToX(tox);\n-            t.setToY(toy);\n-        } else if (dragleft) {\n-            double tox = center.getTranslateX()\n-                    - (right.getTranslateX()\n-                        - (bg.getWidth() - right.getImage().getWidth()) \/ 2);\n-            t.setToX(tox);\n-            t.setOnFinished(new EventHandler<ActionEvent>() {\n-                @Override public void handle(ActionEvent event) {\n-                    index++;\n-                    setup(center, images[index]);\n-                    center.setTranslateX((bg.getWidth() - center.getImage().getWidth()) \/ 2);\n-                    setup(right, images.length > index + 1 ? images[index + 1] : null);\n-                    setup(left, images[index - 1]);\n-                    alignNeighbours();\n-                }\n-            });\n-        } else {\n-            double tox = center.getTranslateX()\n-                    + ((bg.getWidth() - left.getImage().getWidth()) \/ 2\n-                        - left.getTranslateX());\n-            t.setToX(tox);\n-            t.setOnFinished(new EventHandler<ActionEvent>() {\n-                @Override public void handle(ActionEvent event) {\n-                    index--;\n-                    setup(center, images[index]);\n-                    center.setTranslateX((bg.getWidth() - center.getImage().getWidth()) \/ 2);\n-                    setup(right, images[index + 1]);\n-                    setup(left, images.length > 0 && index > 0 ? images[index - 1] : null);\n-                    alignNeighbours();\n-                }\n-            });\n-        }\n-\n-        if (! origSize &&\n-                (t.getToX() != center.getTranslateX() || t.getToY() != center.getTranslateY())) {\n-            if (slow) {\n-                t.setInterpolator(Interpolator.EASE_OUT);\n-                t.play();\n-            } else {\n-                \/* here the whole transition is not used, this might be optimized *\/\n-                center.setTranslateX(t.getToX());\n-                center.setTranslateY(t.getToY());\n-            }\n-        }\n-    }\n-\n-    private void resize() {\n-\n-        final double imgWidth = center.getImage().getWidth();\n-        final double imgHeight = center.getImage().getHeight();\n-\n-        double scalex = (bg.getWidth() - 20) \/ imgWidth;\n-        double scaley = (bg.getHeight() - 20) \/ imgHeight;\n-        final double ratio = center.getScaleX() \/ Math.min(scalex, scaley);\n-\n-        final double neww = bg.getScene().getWidth();\n-        final double newh = bg.getScene().getHeight();\n-\n-        bg.setWidth(neww);\n-        bg.setHeight(newh);\n-\n-        scalex = (neww - 20) \/ imgWidth;\n-        scaley = (newh - 20) \/ imgHeight;\n-        final double newScale = Math.min(scalex, scaley);\n-\n-        center.setScaleX(newScale * ratio);\n-        center.setScaleY(newScale * ratio);\n-\n-        if (center.getBoundsInParent().getHeight() < newh) {\n-            center.setTranslateY((newh - imgHeight) \/ 2);\n-        }\n-        if (center.getBoundsInParent().getWidth() < neww) {\n-            center.setTranslateX((neww - imgWidth) \/ 2);\n-        }\n-\n-        if (left.getImage() != null) {\n-            left.setScaleX(newScale);\n-            left.setScaleY(newScale);\n-            left.setTranslateY((newh - left.getImage().getHeight()) \/ 2);\n-        }\n-        if (right.getImage() != null) {\n-            right.setScaleX(newScale);\n-            right.setScaleY(newScale);\n-            right.setTranslateY((newh - right.getImage().getHeight()) \/ 2);\n-        }\n-\n-        alignNeighbours();\n-    }\n-\n-    private void move(double x, double y) {\n-        final double h = center.getBoundsInParent().getHeight();\n-\n-        double tox = center.getTranslateX() + x;\n-        double toy = center.getTranslateY() + y;\n-\n-        Bounds cb = center.getBoundsInParent();\n-\n-        if (h <= bg.getHeight()) {\n-            toy = (bg.getHeight() - center.getImage().getHeight()) \/ 2;\n-        } else if (cb.getMinY() + y >= 10) {\n-            toy = center.getTranslateY() - cb.getMinY() + 10;\n-        } else if (cb.getMaxY() + y <= bg.getHeight() - 10) {\n-            toy = center.getTranslateY() + bg.getHeight() - cb.getMaxY() - 10;\n-        }\n-\n-        double minx = (cb.getWidth() > bg.getWidth()\n-                ? cb.getMinX()\n-                : cb.getMinX() - (bg.getWidth() - cb.getWidth()) \/ 2);\n-\n-        double maxx = (cb.getWidth() > bg.getWidth()\n-                ? cb.getMaxX()\n-                : cb.getMaxX() + (bg.getWidth() - cb.getWidth()) \/ 2);\n-\n-        if (index == 0 && minx + x >= 10) {\n-            tox = center.getTranslateX() - minx + 10;\n-        } else if (index == images.length - 1 && maxx + x <= bg.getWidth() - 10) {\n-            tox = center.getTranslateX() + bg.getWidth() - maxx - 10;\n-        }\n-\n-        center.setTranslateX(tox);\n-        center.setTranslateY(toy);\n-    }\n-\n-    private void setup(ImageView view, Image i) {\n-        view.setImage(i);\n-\n-        double scale = 1.0;\n-        if (i != null) {\n-            final double scaley = (bg.getHeight() - 20) \/ i.getHeight();\n-            final double scalex = (bg.getWidth() - 20) \/ i.getWidth();\n-            scale = Math.min(scalex, scaley);\n-        }\n-\n-        view.setScaleX(scale);\n-        view.setScaleY(scale);\n-        view.setRotate(0);\n-        if (i != null) {\n-            view.setTranslateY((bg.getHeight() - i.getHeight()) \/ 2);\n-        }\n-    }\n-\n-    private double getGap() {\n-        final double padding = (bg.getBoundsInParent().getWidth()\n-                - center.getBoundsInParent().getWidth()) \/ 2;\n-        return (padding > 0 ? padding + GAP : GAP);\n-    }\n-\n-    private void alignNeighbours() {\n-        final double gap = getGap();\n-\n-        final double leftEdge = center.getBoundsInParent().getMinX();\n-        final double rightEdge = center.getBoundsInParent().getMaxX();\n-\n-        left.setTranslateX(leftEdge - gap\n-                - left.getBoundsInParent().getMaxX() + left.getTranslateX());\n-        right.setTranslateX(rightEdge + gap + right.getTranslateX()\n-                - right.getBoundsInParent().getMinX());\n-    }\n-\n-    Image[] loadImages() {\n-        Image[] images = new Image[10];\n-        for (int i = 0; i < 10; i++) {\n-            images[i] = new Image(ImageViewer.class.getResource(\n-                    \"images\/flower_\" + (i+1) + \".jpg\").toExternalForm(), false);\n-        }\n-\n-        return images;\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This is a simple image viewer application. You can \"\n-                + \"switch between the images by dragging them to the sides, \"\n-                + \"each image can be zoomed and rotated. This demo works \"\n-                + \"with both touch screen and mouse.\";\n-    }\n-\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/ImageViewer.java","additions":0,"deletions":593,"binary":false,"changes":593,"status":"deleted"},{"patch":"@@ -1,213 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.geometry.VPos;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.layout.VBox;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.scene.text.TextAlignment;\n-import javafx.stage.Stage;\n-\n-public class ListSelection extends Application {\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"List Selection\");\n-\n-        Group root = new Group();\n-        Scene scene = new Scene(root, 200, 500);\n-\n-        root.getChildren().add(new List(\"one\", \"two\", \"three\", \"four\", \"five\",\n-                \"six\", \"seven\", \"eight\", \"nine\", \"ten\"));\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    private static class List extends VBox {\n-        private Item[] items;\n-        private Item selectionStart;\n-\n-        private Item selectionEnd;\n-        private long selectionStartId = -1;\n-        private long selectionEndId = -1;\n-\n-\n-        public List(String... captions) {\n-            final int len = captions.length;\n-            Item[] items = new Item[len];\n-            for (int i = 0; i < len; i++) {\n-                items[i] = new Item(captions[i], this);\n-            }\n-            this.items = items;\n-            getChildren().addAll(items);\n-        }\n-\n-        public void select(Item item, long id) {\n-            selectionStart = item;\n-            selectionStartId = id;\n-\n-            selectionEnd = item;\n-            selectionEndId = id;\n-            updateSelection();\n-        }\n-\n-        public void selectTo(Item item, long id) {\n-            if (selectionStartId == -1) {\n-                selectionStart = item;\n-                selectionStartId = id;\n-            }\n-            if (selectionEndId == -1 || selectionStartId == selectionEndId) {\n-                selectionEnd = item;\n-                selectionEndId = id;\n-            }\n-            updateSelection();\n-        }\n-\n-        public void selectionDone(long id) {\n-            if (selectionStartId == id) {\n-                selectionStartId = -1;\n-            }\n-            if (selectionEndId == id) {\n-                selectionEndId = -1;\n-            }\n-        }\n-\n-        public void updateSelection() {\n-            boolean in = false;\n-            for (Item i : items) {\n-                if (in) {\n-                    i.setSelected(in);\n-                    if (i == selectionStart || i == selectionEnd) {\n-                        in = false;\n-                    }\n-                } else {\n-                    if (i == selectionStart || i == selectionEnd) {\n-                        in = true;\n-                    }\n-                    i.setSelected(in);\n-                    if (selectionStart == selectionEnd) {\n-                        in = false;\n-                    }\n-                }\n-            }\n-        }\n-\n-        public void moveSelection(Item item, long id) {\n-            if (id == selectionStartId && item != selectionStart) {\n-                selectionStart = item;\n-            }\n-\n-            if (id == selectionEndId && item != selectionEnd) {\n-                selectionEnd = item;\n-            }\n-            updateSelection();\n-        }\n-\n-    }\n-\n-    private static class Item extends Group {\n-        private Text text;\n-        private Rectangle bg;\n-        private List list;\n-\n-        public Item(final String caption, final List list) {\n-            this.list = list;\n-\n-            bg = new Rectangle(200, 50, Color.LIGHTGRAY);\n-\n-            text = new Text(caption);\n-            text.setFont(new Font(20));\n-            text.setTextAlignment(TextAlignment.LEFT);\n-            text.setTextOrigin(VPos.CENTER);\n-            text.setFill(Color.BLACK);\n-            text.setTranslateX(20);\n-            text.setTranslateY(25);\n-\n-            getChildren().addAll(bg, text);\n-\n-            setOnTouchPressed(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    if (event.getTouchCount() == 1) {\n-                        Item.this.list.select(Item.this, event.getTouchPoint().getId());\n-                    } else if (event.getTouchCount() == 2) {\n-                        Item.this.list.selectTo(Item.this, event.getTouchPoint().getId());\n-                    }\n-                    event.getTouchPoint().ungrab();\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchMoved(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    Item.this.list.moveSelection(Item.this, event.getTouchPoint().getId());\n-                    event.consume();\n-                }\n-            });\n-\n-            setOnTouchReleased(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    Item.this.list.selectionDone(event.getTouchPoint().getId());\n-                    event.consume();\n-                }\n-            });\n-\n-        }\n-\n-        public void setSelected(boolean selected) {\n-            if (selected) {\n-                bg.setFill(Color.DARKBLUE);\n-                text.setFill(Color.WHITE);\n-            } else {\n-                bg.setFill(Color.LIGHTGRAY);\n-                text.setFill(Color.BLACK);\n-            }\n-        }\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates one possible usage of touch \"\n-                + \"events for selecting items in a list. Move one finger over \"\n-                + \"the list, item under it will always be selected. Move two \"\n-                + \"fingers over the list, items between the two fingers will \"\n-                + \"always be selected.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/ListSelection.java","additions":0,"deletions":213,"binary":false,"changes":213,"status":"deleted"},{"patch":"@@ -1,159 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.geometry.VPos;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.layout.VBox;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.scene.text.TextAlignment;\n-import javafx.stage.Stage;\n-\n-public class ListSelectionSimple extends Application {\n-\n-    Scene scene;\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"List Selection Simple\");\n-\n-        Group root = new Group();\n-        scene = new Scene(root, 200, 500);\n-\n-        root.getChildren().add(new List(\"one\", \"two\", \"three\", \"four\", \"five\",\n-                \"six\", \"seven\", \"eight\", \"nine\", \"ten\"));\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-\n-    private static class List extends VBox {\n-        private Item[] items;\n-        private Item selectionStart;\n-\n-        public List(String... captions) {\n-            final int len = captions.length;\n-            Item[] items = new Item[len];\n-            for (int i = 0; i < len; i++) {\n-                items[i] = new Item(captions[i], this);\n-            }\n-            this.items = items;\n-            getChildren().addAll(items);\n-        }\n-\n-        public void select(Item item) {\n-            for (Item i : items) {\n-                i.setSelected(i == item);\n-            }\n-            selectionStart = item;\n-        }\n-\n-        public void selectTo(Item item) {\n-            boolean in = false;\n-            for (Item i : items) {\n-                if (in) {\n-                    i.setSelected(in);\n-                    if (i == item || i == selectionStart) {\n-                        in = false;\n-                    }\n-                } else {\n-                    if (i == item || i == selectionStart) {\n-                        in = true;\n-                    }\n-                    i.setSelected(in);\n-                }\n-            }\n-        }\n-    }\n-\n-    private static class Item extends Group {\n-        private Text text;\n-        private Rectangle bg;\n-        private List list;\n-\n-        public Item(final String caption, final List list) {\n-            this.list = list;\n-\n-            bg = new Rectangle(200, 50, Color.LIGHTGRAY);\n-\n-            text = new Text(caption);\n-            text.setFont(new Font(20));\n-            text.setTextAlignment(TextAlignment.LEFT);\n-            text.setTextOrigin(VPos.CENTER);\n-            text.setFill(Color.BLACK);\n-            text.setTranslateX(20);\n-            text.setTranslateY(25);\n-\n-            getChildren().addAll(bg, text);\n-\n-            setOnTouchPressed(new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-\n-                    if (event.getTouchCount() == 1) {\n-                        Item.this.list.select(Item.this);\n-                    } else if (event.getTouchCount() == 2) {\n-                        if (event.getTouchPoint() == event.getTouchPoints().get(1)) {\n-                            Item.this.list.selectTo(Item.this);\n-                        }\n-                    }\n-                    event.consume();\n-                }\n-            });\n-        }\n-\n-        public void setSelected(boolean selected) {\n-            if (selected) {\n-                bg.setFill(Color.DARKBLUE);\n-                text.setFill(Color.WHITE);\n-            } else {\n-                bg.setFill(Color.LIGHTGRAY);\n-                text.setFill(Color.BLACK);\n-            }\n-        }\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates simple usage of touch \"\n-                + \"events for selecting items in a list. Press an item with \"\n-                + \"one finger, it will be selected. Hold the finger down \"\n-                + \"and press another finger, items between the two fingers \"\n-                + \"will be selected.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/ListSelectionSimple.java","additions":0,"deletions":159,"binary":false,"changes":159,"status":"deleted"},{"patch":"@@ -1,207 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.geometry.VPos;\n-import javafx.scene.Group;\n-import javafx.scene.Node;\n-import javafx.scene.Scene;\n-import javafx.scene.input.MouseEvent;\n-import javafx.scene.layout.HBox;\n-import javafx.scene.layout.VBox;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Circle;\n-import javafx.scene.shape.Rectangle;\n-import javafx.scene.text.Font;\n-import javafx.scene.text.Text;\n-import javafx.stage.Stage;\n-\n-public class Main extends Application {\n-\n-    private static final int WIDTH = 380;\n-    private static final int HEIGHT = 500;\n-\n-    VBox launcher = new VBox(15);\n-    Info info = new Info();\n-\n-\n-    \/\/Use to register EventLogger\n-    private static final boolean DEBUG = false;\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Touch Suite\");\n-\n-        Group root = new Group();\n-        Scene scene = new Scene(root, WIDTH, HEIGHT);\n-        scene.setFill(Color.BEIGE);\n-\n-        root.getChildren().add(launcher);\n-        root.getChildren().add(info);\n-\n-        register(\"Hello Gestures\", HelloGestures.class, HelloGestures.info());\n-        register(\"Hello Multi-touch\", HelloMultiTouch.class, HelloMultiTouch.info());\n-        register(\"List Selection Simple\", ListSelectionSimple.class, ListSelectionSimple.info());\n-        register(\"List Selection\", ListSelection.class, ListSelection.info());\n-        register(\"Draw Line\", DrawLine.class, DrawLine.info());\n-        register(\"Moving Stones\", MovingStones.class, MovingStones.info());\n-        register(\"Consume Touches\", ConsumeTouches.class, ConsumeTouches.info());\n-        register(\"Image Viewer\", ImageViewer.class, ImageViewer.info());\n-        register(\"Image Board\", ImageBoard.class, ImageBoard.info());\n-        register(\"Controls\", Controls.class, Controls.info());\n-        if (DEBUG) {\n-            register(\"Event Logger\", EventLogger.class, EventLogger.info());\n-        }\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    private Node createLauncher(final String name, final Class app) {\n-        Text t = new Text(name);\n-        t.setFont(new Font(25));\n-        t.setFill(Color.DARKBLUE);\n-        t.setUnderline(true);\n-        t.setTranslateX(40);\n-        t.setTextOrigin(VPos.TOP);\n-\n-        t.setOnMouseClicked(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                Stage stage = new Stage();\n-                try {\n-                    ((Application) app.getDeclaredConstructor().newInstance()).start(stage);\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        });\n-\n-        return t;\n-    }\n-\n-    private void register(final String name, final Class app, final String description) {\n-        HBox g = new HBox();\n-\n-        Circle bullet = new Circle(5);\n-        bullet.setFill(Color.BLACK);\n-        bullet.setTranslateX(20);\n-        bullet.setTranslateY(15);\n-\n-        Text b1 = new Text(\"(\");\n-        b1.setTranslateX(50);\n-        b1.setFont(new Font(25));\n-\n-        Text b2 = new Text(\")\");\n-        b2.setTranslateX(50);\n-        b2.setFont(new Font(25));\n-\n-        Text i = new Text(\"info\");\n-        i.setTranslateX(50);\n-        i.setFont(new Font(25));\n-        i.setUnderline(true);\n-        i.setOnMouseClicked(new EventHandler<MouseEvent>() {\n-            @Override public void handle(MouseEvent event) {\n-                info.show(name, app, description);\n-            }\n-        });\n-\n-        g.getChildren().add(bullet);\n-        g.getChildren().add(createLauncher(name, app));\n-        g.getChildren().addAll(b1, i, b2);\n-\n-        launcher.getChildren().add(g);\n-    }\n-\n-    private class Info extends Group {\n-        Rectangle bg;\n-        Text n, t, run, close;\n-\n-        public Info() {\n-            VBox vb = new VBox(10);\n-\n-            bg = new Rectangle(WIDTH, HEIGHT);\n-            bg.setFill(Color.LIGHTBLUE);\n-\n-            n = new Text();\n-            n.setFont(new Font(25));\n-            n.setTranslateX(10);\n-            n.setTextOrigin(VPos.TOP);\n-\n-            t = new Text();\n-            t.setFont(new Font(15));\n-            t.setTextOrigin(VPos.TOP);\n-            t.setTranslateX(10);\n-            t.setWrappingWidth(WIDTH - 20);\n-\n-            run = new Text(\"Start application\");\n-            run.setFont(new Font(25));\n-            run.setTranslateX(10);\n-            run.setTextOrigin(VPos.TOP);\n-\n-            close = new Text(\"Close info\");\n-            close.setFont(new Font(25));\n-            close.setTranslateX(10);\n-            close.setTextOrigin(VPos.TOP);\n-\n-            setVisible(false);\n-\n-            close.setOnMouseClicked(new EventHandler<MouseEvent>() {\n-                @Override public void handle(MouseEvent event) {\n-                    Info.this.setVisible(false);\n-                }\n-            });\n-\n-            vb.getChildren().addAll(n, t, run, close);\n-            getChildren().addAll(bg, vb);\n-        }\n-\n-        public void show(final String name, final Class app, final String info) {\n-            n.setText(name);\n-            t.setText(info);\n-            run.setOnMouseClicked(new EventHandler<MouseEvent>() {\n-                @Override public void handle(MouseEvent event) {\n-                    Info.this.setVisible(false);\n-                    Stage stage = new Stage();\n-                    try {\n-                        ((Application) app.getDeclaredConstructor().newInstance()).start(stage);\n-                    } catch (Exception e) {\n-                        e.printStackTrace();\n-                    }\n-                }\n-            });\n-            setVisible(true);\n-        }\n-\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/Main.java","additions":0,"deletions":207,"binary":false,"changes":207,"status":"deleted"},{"patch":"@@ -1,122 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package touchsuite;\n-\n-import javafx.animation.TranslateTransition;\n-import javafx.application.Application;\n-import javafx.event.EventHandler;\n-import javafx.scene.Group;\n-import javafx.scene.Scene;\n-import javafx.scene.input.TouchEvent;\n-import javafx.scene.input.TouchPoint;\n-import javafx.scene.paint.Color;\n-import javafx.scene.shape.Circle;\n-import javafx.scene.shape.Line;\n-import javafx.stage.Stage;\n-import javafx.util.Duration;\n-\n-public class MovingStones extends Application {\n-\n-    long start = -1;\n-    long end = -1;\n-    Line line;\n-    long id1, id2;\n-\n-    @Override public void start(Stage stage) {\n-        stage.setTitle(\"Moving Stones\");\n-\n-        final Group root = new Group();\n-        final Scene scene = new Scene(root, 500, 500);\n-        scene.setFill(Color.LIGHTBLUE);\n-\n-        root.getChildren().addAll(\n-                new Stone(Math.random() * 150 + 50, Math.random() * 150 + 50, Color.RED),\n-                new Stone(Math.random() * 150 + 300, Math.random() * 150 + 50, Color.GREEN),\n-                new Stone(Math.random() * 150 + 50, Math.random() * 150 + 300, Color.BLUE),\n-                new Stone(Math.random() * 150 + 300, Math.random() * 150 + 300, Color.BLACK));\n-\n-        stage.setScene(scene);\n-        stage.show();\n-    }\n-\n-    private static class Stone extends Circle {\n-\n-        public Stone(double x, double y, Color color) {\n-            super(50, color);\n-            setTranslateX(x);\n-            setTranslateY(y);\n-\n-            addEventHandler(TouchEvent.ANY, new EventHandler<TouchEvent>() {\n-                @Override public void handle(TouchEvent event) {\n-                    event.getTouchPoint().ungrab();\n-\n-                    if (event.getTouchCount() != 2) {\n-                        return;\n-                    }\n-\n-                    TouchPoint mine = event.getTouchPoint();\n-                    TouchPoint other = event.getTouchPoints().get(0);\n-                    if (other == mine) {\n-                        other = event.getTouchPoints().get(1);\n-                    }\n-\n-                    if (other.belongsTo(Stone.this)) {\n-                        return;\n-                    }\n-\n-                    if (other.getState() == TouchPoint.State.PRESSED\n-                            || mine.getState() == TouchPoint.State.PRESSED) {\n-\n-                        other.ungrab();\n-\n-                        TranslateTransition t =\n-                                new TranslateTransition(Duration.millis(200), Stone.this);\n-                        t.setToX(other.getSceneX());\n-                        t.setToY(other.getSceneY());\n-                        t.play();\n-                    }\n-                    event.consume();\n-                }\n-            });\n-        }\n-    }\n-\n-    public static String info() {\n-        return\n-                \"This application demonstrates cooperating between nodes on \"\n-                + \"multi-touch gestures. You can press a circle, hold it, and \"\n-                + \"tap somewhere on the scene, the node will jump there. \"\n-                + \"You can also press a circle, hold it, and tap a different \"\n-                + \"circle, in this case the two circles switch their positions.\";\n-    }\n-\n-    \/**\n-     * @param args the command line arguments\n-     *\/\n-    public static void main(String[] args) {\n-        Application.launch(args);\n-    }\n-}\n","filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/MovingStones.java","additions":0,"deletions":122,"binary":false,"changes":122,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_1.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_10.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_2.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_3.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_4.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_5.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_6.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_7.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_8.jpg","binary":true,"status":"deleted"},{"filename":"apps\/toys\/TouchSuite\/src\/touchsuite\/images\/flower_9.jpg","binary":true,"status":"deleted"},{"patch":"@@ -17,2 +17,0 @@\n-        <ant dir=\"Shape3DToy\" target=\"jar\" inheritAll=\"true\"\/>\n-        <ant dir=\"TouchSuite\" target=\"jar\" inheritAll=\"true\"\/>\n@@ -27,2 +25,0 @@\n-        <ant dir=\"Shape3DToy\" target=\"clean\" inheritAll=\"true\"\/>\n-        <ant dir=\"TouchSuite\" target=\"clean\" inheritAll=\"true\"\/>\n","filename":"apps\/toys\/build.xml","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n-\t<classpathentry kind=\"src\" path=\"performance\/VMPerformance\/src\"\/>\n","filename":"tests\/.classpath","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,231 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import com.sun.javafx.functions.Function0;\n-\n-import javafx.util.Duration;\n-\n-public abstract class AnimationFunctionalTestBase {\n-    private Thread delayedThread;\n-    private Error failError;\n-\n-    private String name = \"\";\n-\n-    protected AnimationFunctionalTestBase() {}\n-\n-    protected AnimationFunctionalTestBase(String name) {\n-        this.name = name;\n-    }\n-\n-    \/\/ used by subclasses for delayed function invocation\n-    protected final void delay(long ms) {\n-        delayedThread = Thread.currentThread();\n-        failError = null;\n-        try {\n-            Thread.sleep(ms);\n-        } catch (InterruptedException ignore) {}\n-        finally {\n-            delayedThread = null;\n-            if (failError != null) {\n-                throw failError; \/\/ re-throw the error on the main thread\n-            }\n-        }\n-    }\n-\n-    protected final void delayFor(Timeline t) {\n-        delay((long) t.getTotalDuration().toMillis() + 300);\n-    }\n-\n-    protected final void fail(String message) {\n-        failError = new AssertionError(name + \" FAILED: \" + message);\n-        if (delayedThread != null && delayedThread != Thread.currentThread()) {\n-            \/\/ error happened on the timeline thread: should re-throw it on the main thread\n-            \/\/ so that JUnit could catch it\n-            delayedThread.interrupt();\n-        } else {\n-            throw failError;\n-        }\n-    }\n-\n-    protected class SimpleKeyFrame extends KeyFrame {\n-        public SimpleKeyFrame(double time) {\n-            this(time, false);\n-        }\n-\n-        public SimpleKeyFrame(double time, boolean canSkip, KeyValue... values) {\n-            super(Duration.valueOf(time), values);\n-            setAction(\n-                    new Function0<Void>() {\n-                        @Override public Void invoke() {\n-                            action();\n-                            return null;\n-                        }\n-                    }\n-            );\n-            setCanSkip(canSkip);\n-        }\n-\n-        protected void action() {}\n-    }\n-\n-    protected class SimpleTimeline extends Timeline {\n-        public SimpleTimeline(KeyFrame... frames) {\n-            this(1, frames);\n-        }\n-\n-        public SimpleTimeline(int repeatCount, KeyFrame... frames) {\n-            init(repeatCount, frames);\n-        }\n-        public SimpleTimeline(double framerate, int repeatCount, KeyFrame... frames) {\n-            super(framerate);\n-            init(repeatCount, frames);\n-        }\n-\n-        public void playBackward() {\n-            setRate(-Math.abs(getRate()));\n-            playFromEnd();\n-        }\n-\n-        public void playFromEnd() {\n-            getCurrentTime(getCycleDuration());\n-            play();\n-        }\n-\n-\n-        private void init(int repeatCount, KeyFrame... frames) {\n-            setCycleCount(repeatCount);\n-            if (frames != null) {\n-                getKeyFrames().addAll(frames);\n-            }\n-        }\n-    }\n-\n-    public class SimpleKeyValueTarget implements KeyValueTarget {\n-        private Object value;\n-        private Type type;\n-\n-        public SimpleKeyValueTarget(Object value) {\n-            this.value = value;\n-            final Class<?> clazz = value.getClass();\n-            type = ((clazz == boolean.class) || (clazz == Boolean.class))? Type.BOOLEAN :\n-            ((clazz == byte.class) || (clazz == Byte.class))? Type.BYTE :\n-            ((clazz == double.class) || (clazz == Double.class))? Type.DOUBLE :\n-            ((clazz == float.class) || (clazz == Float.class))? Type.FLOAT :\n-            ((clazz == int.class) || (clazz == Integer.class))? Type.INTEGER :\n-            ((clazz == long.class) || (clazz == Long.class))? Type.LONG :\n-            ((clazz == short.class) || (clazz == Short.class))? Type.SHORT :\n-            Type.OBJECT;\n-        }\n-        @Override public Object get() {return getValue();}\n-        @Override public KeyValueTarget.Type getType() {return type;}\n-        @Override public Object getValue() {return value;}\n-        @Override public void set(Object value) {setValue(value);}\n-        @Override public void setValue(Object o) {value = o;}\n-        @Override public KeyValueTarget unwrap() {return this;}\n-    };\n-\n-\n-    public class TestSet {\n-        public final double TARGET_VALUE = 700;\n-        public final double TIME_VALUE = 1000;\n-        public final Duration TIME_DURATION = Duration.valueOf(TIME_VALUE);\n-        protected SimpleKeyValueTarget target = new SimpleKeyValueTarget(0);\n-        protected SimpleTimeline timeline;\n-        protected int[] count = {0, 0};\n-\n-        public TestSet() {\n-            this(Double.MAX_VALUE);\n-        }\n-\n-        public TestSet(double frameRate) {\n-            timeline = new SimpleTimeline(frameRate, 1,\n-                    new SimpleKeyFrame(0) {\n-                        @Override protected void action() {\n-                            count[0]++;\n-                        }\n-                    },\n-                    new SimpleKeyFrame(TIME_VALUE, false, new KeyValue(target, TARGET_VALUE)) {\n-                        @Override protected void action() {\n-                            count[1]++;\n-                        }\n-                    }\n-            );\n-        }\n-\n-        protected void resetCount() {\n-            count[0] = 0;\n-            count[1] = 0;\n-        }\n-\n-        protected final void check(int count0, int count1, boolean running) {\n-            checkVisitCount(0, count0);\n-            checkVisitCount(1, count1);\n-            checkRunning(running);\n-        }\n-\n-        protected final void check(int count0, int count1, boolean running, double time, double target) {\n-            check(count0, count1, running);\n-            checkTime(time);\n-            checkTarget(target);\n-        }\n-\n-        protected void checkVisitCount(int frameIndex, int expected) {\n-            if (count[frameIndex] != expected) {\n-                fail(\"KeyFrame #\" + frameIndex + \" visited \" + count[frameIndex]\n-                        + \" times instead of \" + expected + signature());\n-            }\n-        }\n-\n-        protected final void checkRunning(boolean running) {\n-            if (running && !timeline.isRunning()) {\n-                fail(\"should be running\");\n-            } else if (!running && timeline.isRunning()) {\n-                fail(\"should not be running\");\n-            }\n-        }\n-\n-        protected void checkValue(String message, double value, double expected) {\n-            if (value != expected) {\n-                fail(message + \" actual: \" + value + \", expected: \" + expected + signature());\n-            }\n-        }\n-\n-        protected void checkTime(double expected) {\n-            checkValue(\"time \", timeline.getCurrentTime().toMillis(), expected);\n-        }\n-\n-        protected void checkTarget(double expected) {\n-            checkValue(\"target \", Double.valueOf(target.getValue().toString()), expected);\n-        }\n-\n-        String signature() {\n-            return \", rate=\" + timeline.getRate() + \", repeatCount=\" + timeline.getRepeatCount();\n-        }\n-\n-    }\n-\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/AnimationFunctionalTestBase.java","additions":0,"deletions":231,"binary":false,"changes":231,"status":"deleted"},{"patch":"@@ -1,84 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-\/**\n- * Test behavior of canSkip (though the pass\/fail of the test only depends on\n- * the non-canSkip KeyFrame being executed the correct number of times).\n- *\n- * Ideally, test should be run with a few different animation timer values,\n- * by setting -Dcom.sun.scenario.animation=\n- * 5, 60 & 500\n- * One must also run using the Swing toolkit, at least until RT-5647 gets\n- * fixed.\n- * Best is to compare behavior to 1.3.1.  The 2ms KeyFrame should execute\n- * roughly the same number of times.\n- *\n- *\/\n-\n-public class CanSkip_Test extends AnimationFunctionalTestBase {\n-    public static final int N = 100;\n-    private Timeline t;\n-    private int count2ms = 0;\n-    private int count4ms = 0;\n-\n-    public CanSkip_Test() {\n-        super(\"Should not skip KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(N,\n-                new SimpleKeyFrame(2, true) {\n-                    @Override protected void action() {\n-                        count2ms++;\n-                    }\n-                },\n-                new SimpleKeyFrame(4) {\n-                    @Override protected void action() {\n-                        count4ms++;\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-        if (count4ms != N) {\n-            fail(\"visited only \" + count4ms + \" out of \" + N);\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/CanSkip_Test.java","additions":0,"deletions":84,"binary":false,"changes":84,"status":"deleted"},{"patch":"@@ -1,94 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class JumpPastEndAR_Test extends AnimationFunctionalTestBase {\n-    private TestSet set = new TestSet();\n-    private Timeline tt;\n-\n-    public JumpPastEndAR_Test() {\n-        super(\"Test of behavior when jumping beyond Timeline.cycleDuration with autoReverse=true\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(4);\n-        set.timeline.setAutoReverse(true);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(2100) {\n-                    @Override protected void action() {\n-                        set.timeline.getCurrentTime(Duration.valueOf(2000));\n-                    }\n-                },\n-                new SimpleKeyFrame(2200) {\n-                    @Override protected void action() {\n-                        set.checkVisitCount(0, 2);\n-                        if (!set.timeline.isRunning()) {\n-                            fail(\"Should be running\");\n-                        }\n-                        if (((Integer)set.target.getValue()) < set.TARGET_VALUE * 0.85) {\n-                            fail(\"Did not skip to beginning \" + set.target.getValue());\n-                        }\n-                        if (set.timeline.getCurrentTime().toMillis() < set.timeline.getCycleDuration().toMillis() * 0.85) {\n-                            fail(\"Time should be under 850ms while it's actually \" + set.timeline.getCurrentTime());\n-                        }\n-                    }\n-                },\n-                new SimpleKeyFrame(3000) {\n-                    @Override protected void action() {\n-                        if (!set.timeline.isRunning()) {\n-                            throw new AssertionError(\"Should still be running\");\n-                        }\n-                    }\n-                },\n-                new SimpleKeyFrame(3150) {\n-                    @Override protected void action() {\n-                        if (set.timeline.isRunning()) {\n-                            throw new AssertionError(\"Should not be running\");\n-                        }\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        set.timeline.play();\n-        tt.play();\n-        delayFor(tt);\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/JumpPastEndAR_Test.java","additions":0,"deletions":94,"binary":false,"changes":94,"status":"deleted"},{"patch":"@@ -1,137 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-\n-public class JumpPastEnd_Test extends AnimationFunctionalTestBase {\n-    private TestSet set = new TestSet();\n-    private Timeline tt;\n-\n-    public JumpPastEnd_Test() {\n-        super(\"Test of behavior when jumping beyond Timeline.cycleDuration\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(4);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(2100) {\n-                    @Override protected void action() {\n-                        set.timeline.getCurrentTime(Duration.valueOf(2000));\n-                    }\n-                },\n-                new SimpleKeyFrame(2200) {\n-                    @Override protected void action() {\n-                        set.checkVisitCount(0, 4);\n-                        if (!set.timeline.isRunning()) {\n-                            fail(\"Should be running\");\n-                        }\n-                        if (((Integer)set.target.getValue()) > set.TARGET_VALUE * 0.15) {\n-                            fail(\"Did not skip to beginning\");\n-                        }\n-                        if (set.timeline.getCurrentTime().toMillis() > set.timeline.getCycleDuration().toMillis() * 0.15) {\n-                            fail(\"Time should be under 100ms while it's actually \" + set.timeline.getCurrentTime());\n-                        }\n-                    }\n-                },\n-                new SimpleKeyFrame(3000) {\n-                    @Override protected void action() {\n-                        if (!set.timeline.isRunning()) {\n-                            throw new AssertionError(\"Should still be running\");\n-                        }\n-                    }\n-                },\n-                new SimpleKeyFrame(3150) {\n-                    @Override protected void action() {\n-                        if (set.timeline.isRunning()) {\n-                            throw new AssertionError(\"Should not be running\");\n-                        }\n-                    }\n-                },\n-                new SimpleKeyFrame(3500) {\n-                    @Override protected void action() {\n-                        \/\/ testing jump past end from final cycle\n-                        set.resetCount();\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(7000) {\n-                    @Override protected void action() {\n-                        set.timeline.getCurrentTime(Duration.valueOf(2000));\n-                    }\n-                },\n-                new SimpleKeyFrame(7100) {\n-                    @Override protected void action() {\n-                        set.checkVisitCount(0, 4);\n-                        if (set.timeline.isRunning()) {\n-                            fail(\"Should not be running\");\n-                        }\n-                        set.checkTarget(set.TARGET_VALUE);\n-                        set.checkTime(set.timeline.getCycleDuration().toMillis());\n-                    }\n-                },\n-                new SimpleKeyFrame(7500) {\n-                    @Override protected void action() {\n-                        \/\/ test jumping to end of Timeline with repeatCount=1\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(1);\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(7800) {\n-                    @Override protected void action() {\n-                        set.timeline.getCurrentTime(set.TIME_DURATION);\n-                    }\n-                },\n-                new SimpleKeyFrame(8300) {\n-                    @Override protected void action() {\n-                        set.checkVisitCount(0, 1);\n-                        if (set.timeline.isRunning()) {\n-                            fail(\"Should not be running\");\n-                        }\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        set.timeline.play();\n-        tt.play();\n-        delayFor(tt);\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/JumpPastEnd_Test.java","additions":0,"deletions":137,"binary":false,"changes":137,"status":"deleted"},{"patch":"@@ -1,69 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class KeyFrame_TS101_02_Test extends AnimationFunctionalTestBase {\n-    private boolean ea = false;\n-    private boolean eb = false;\n-    private Timeline t;\n-\n-    public KeyFrame_TS101_02_Test() {\n-        super(\"Should visit very close KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        ea = true;\n-                    }\n-                },\n-                new SimpleKeyFrame(0.00001) {\n-                    @Override protected void action() {\n-                        eb = true;\n-                    }\n-                }\n-        );\n-\n-    }\n-\n-    @Test public void test() {\n-        t.playFromStart();\n-        delay(100);\n-\n-        if(!ea || !eb) {\n-            fail(\" visited at 0 ms = \" + ea + \", visited at 0.00001 ms = \" + eb);\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyFrame_TS101_02_Test.java","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"},{"patch":"@@ -1,96 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-import java.util.concurrent.TimeUnit;\n-\n-public class KeyFrame_TS102_01_Test extends AnimationFunctionalTestBase {\n-\/\/    private boolean ea = false;\n-    private boolean eb = false;\n-    private boolean ec = false;\n-\n-    private long s1;\n-\/\/    private long t0;\n-    private long t1;\n-    private long t2;\n-    private Timeline t;\n-\n-    public KeyFrame_TS102_01_Test() {\n-        super(\"Should visit all KeyFrames in right order\");\n-    }\n-\n-    private long getDuration(long begin) {\n-        return TimeUnit.NANOSECONDS.toMillis((System.nanoTime()-begin));\n-    }\n-\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-\/\/                \/\/ Negative time - should never be visited\n-\/\/                \/\/ COMMENTED OUT: this causes assertion error in Timeline\n-\/\/                new SimpleKeyFrame(-1000) {\n-\/\/                    @Override protected void action() {\n-\/\/                        ea = true;\n-\/\/                        t0 = getDuration(s1);\n-\/\/                    }\n-\/\/                },\n-                new SimpleKeyFrame(1000) {\n-                    @Override protected void action() {\n-                        ec = true;\n-                        t2 = getDuration(s1);\n-                    }\n-                },\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        eb = true;\n-                        t1 = getDuration(s1);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        s1 = System.nanoTime();\n-        t.playFromStart();\n-        delay(5000);\n-\n-        if(\/*t0 != 0 || t0 > t2 ||*\/ t1 > t2) {\n-            fail(\"visited in wrong order\");\n-        }\n-\n-        if(\/*ea ||*\/ !eb || !ec) {\n-            fail(\"didn'timeline visit all KeyFrames\");\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyFrame_TS102_01_Test.java","additions":0,"deletions":96,"binary":false,"changes":96,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-public class KeyFrame_TS103_01_Test extends AnimationFunctionalTestBase {\n-    private int ea = 0;\n-    private int eb = 0;\n-    private int ec = 0;\n-    private Timeline t;\n-\n-    public KeyFrame_TS103_01_Test() {\n-        super(\"Should skip some KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(5,\n-                new SimpleKeyFrame(100) {\n-                    @Override protected void action() {\n-                        ea++;\n-                        delay(310);\n-                    }\n-                },\n-                new SimpleKeyFrame(200, true) {\n-                    @Override protected void action() {\n-                        eb++;\n-                    }\n-                },\n-                new SimpleKeyFrame(300) {\n-                    @Override protected void action() {\n-                        ec++;\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        if(eb == 5) {\n-            fail(\"KeyFrame with canSkip=true was not skipped\");\n-        }\n-        if(ea < 5 || ec < 5) {\n-            fail(\"KeyFrame(s) with canSkip=false was skipped\");\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyFrame_TS103_01_Test.java","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,77 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class KeyFrame_TS103_02_Test extends AnimationFunctionalTestBase {\n-    private int ea = 0;\n-    private int eb = 0;\n-    private int ec = 0;\n-\n-    private Timeline t;\n-\n-    public KeyFrame_TS103_02_Test() {\n-        super(\"Should skip some KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline( 5,\n-                new SimpleKeyFrame(100) {\n-                    @Override protected void action() {\n-                        ea++;\n-                        delay(310);\n-                    }\n-                },\n-                new SimpleKeyFrame(200) {\n-                    @Override protected void action() {\n-                        eb++;\n-                    }\n-                },\n-                new SimpleKeyFrame(300) {\n-                    @Override protected void action() {\n-                        ec++;\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        if(ea < 5 || eb < 5 || ec < 5) {\n-            fail(\"KeyFrame(s) with canSkip=false was skipped\");\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyFrame_TS103_02_Test.java","additions":0,"deletions":77,"binary":false,"changes":77,"status":"deleted"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-public class KeyFrame_TS104_01_Test extends AnimationFunctionalTestBase {\n-    private int ea = 0;\n-    private int eb = 0;\n-    private int ec = 0;\n-\n-    private Timeline t;\n-\n-    public KeyFrame_TS104_01_Test() {\n-        super(\"Should skip some KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(5,\n-                new SimpleKeyFrame(100) {\n-                    @Override protected void action() {\n-                        ea++;\n-                        delay(310);\n-                    }\n-                },\n-                new SimpleKeyFrame(200) {\n-                    @Override protected void action() {\n-                        eb++;\n-                    }\n-                },\n-                new SimpleKeyFrame(300) {\n-                    @Override protected void action() {\n-                        ec++;\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        t.play();\n-        t.pause();\n-        t.getKeyFrames().get(1).setCanSkip(true);\n-        t.play();\n-        delayFor(t);\n-\n-        if(eb == 5) {\n-            fail(\"KeyFrame with canSkip=true was not skipped\");\n-        }\n-        if(ea < 5 || ec < 5) {\n-            fail(\"KeyFrame(s) with canSkip=false was skipped\");\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyFrame_TS104_01_Test.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-public class KeyFrame_TS105_01_Test extends AnimationFunctionalTestBase {\n-    private int ea = 0;\n-    private int eb = 0;\n-    private int ec = 0;\n-\n-    private Timeline t;\n-    private SimpleKeyValueTarget target = new SimpleKeyValueTarget(0D);\n-    private final Integer newVal = 5;\n-\n-    public KeyFrame_TS105_01_Test() {\n-        super(\"Should skip some KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(5,\n-                new SimpleKeyFrame(100) {\n-                    @Override protected void action() {\n-                        ea++;\n-                        delay(310);\n-                    }\n-                },\n-                new SimpleKeyFrame(200, true, new KeyValue(target, newVal)) {\n-                    @Override protected void action() {\n-                        eb++;\n-                    }\n-                },\n-                new SimpleKeyFrame(300) {\n-                    @Override protected void action() {\n-                        ec++;\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        if(eb == 5 || newVal.equals(target.getValue())) {\n-            fail(\"KeyFrame with canSkip=true was not skipped\");\n-        }\n-\n-        if(ea < 5 || ec < 5) {\n-            fail(\"KeyFrame(s) with canSkip=false was skipped\");\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyFrame_TS105_01_Test.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"@@ -1,90 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class KeyValue_TS200_01_Test extends AnimationFunctionalTestBase {\n-    private SimpleKeyValueTarget s = new SimpleKeyValueTarget(\"abc\");\n-    private SimpleKeyValueTarget i = new SimpleKeyValueTarget((Integer)0);\n-    private SimpleKeyValueTarget b = new SimpleKeyValueTarget(true);\n-    private SimpleKeyValueTarget f = new SimpleKeyValueTarget((Float)1.0F);\n-    private SimpleKeyValueTarget d = new SimpleKeyValueTarget(Duration.valueOf(1000));\n-\n-    private final String newS = \"def\";\n-    private final Integer newI = 10;\n-    private final Boolean newB = false;\n-    private final Float newF = 10.0F;\n-    private final Duration newD = Duration.valueOf(10000);\n-\n-    private Timeline t;\n-\n-    public KeyValue_TS200_01_Test() {\n-        super(\"Should change key values\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(1000, false,\n-                        new KeyValue(s, newS),\n-                        new KeyValue(i, newI),\n-                        new KeyValue(b, newB),\n-                        new KeyValue(f, newF),\n-                        new KeyValue(d, newD)\n-                )\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        if(!newS.equals(s.getValue())) {\n-            fail(\"String \" + s.getValue());\n-        }\n-        if(!newI.equals(i.getValue())) {\n-            fail(\"Integer \" + i.getValue());\n-        }\n-        if(!newB.equals(b.getValue())) {\n-            fail(\"Boolean \" + b.getValue());\n-        }\n-        if(!newF.equals(f.getValue())) {\n-            fail(\"Number \" + f.getValue());\n-        }\n-        if(!newD.equals(d.getValue())) {\n-            fail(\"Duration \" + d.getValue());\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyValue_TS200_01_Test.java","additions":0,"deletions":90,"binary":false,"changes":90,"status":"deleted"},{"patch":"@@ -1,90 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class KeyValue_TS200_02_Test extends AnimationFunctionalTestBase {\n-    private SimpleKeyValueTarget s = new SimpleKeyValueTarget(\"abc\");\n-    private SimpleKeyValueTarget i = new SimpleKeyValueTarget((Integer)0);\n-    private SimpleKeyValueTarget b = new SimpleKeyValueTarget(true);\n-    private SimpleKeyValueTarget f = new SimpleKeyValueTarget((Float)1.0F);\n-    private SimpleKeyValueTarget d = new SimpleKeyValueTarget(Duration.valueOf(1000));\n-\n-    private Timeline t;\n-\n-    private final String newS = \"def\";\n-    private final Integer newI = 10;\n-    private final Boolean newB = false;\n-    private final Float newF = 10.0F;\n-    private final Duration newD = Duration.valueOf(10000);\n-\n-    public KeyValue_TS200_02_Test() {\n-        super(\"Should change key values with different interpolators\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(1000, false,\n-                        new KeyValue(s, newS, Interpolator.DISCRETE),\n-                        new KeyValue(i, newI, Interpolator.EASE_BOTH),\n-                        new KeyValue(b, newB, Interpolator.EASE_IN),\n-                        new KeyValue(f, newF, Interpolator.EASE_OUT),\n-                        new KeyValue(d, newD, Interpolator.LINEAR)\n-                )\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        if(!newS.equals(s.getValue())) {\n-            fail(\"String \" + s.getValue());\n-        }\n-        if(!newI.equals(i.getValue())) {\n-            fail(\"Integer \" + i.getValue());\n-        }\n-        if(!newB.equals(b.getValue())) {\n-            fail(\"Boolean \" + b.getValue());\n-        }\n-        if(!newF.equals(f.getValue())) {\n-            fail(\"Number \" + f.getValue());\n-        }\n-        if(!newD.equals(d.getValue())) {\n-            fail(\"Duration \" + d.getValue());\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyValue_TS200_02_Test.java","additions":0,"deletions":90,"binary":false,"changes":90,"status":"deleted"},{"patch":"@@ -1,109 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.beans.AbstractBean;\n-import javafx.beans.PropertyReference;\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class KeyValue_TS200_03_Test extends AnimationFunctionalTestBase {\n-    public static class XYZ extends AbstractBean {\n-        public XYZ() {}\n-\n-        private String s= \"abc\";\n-        private Integer i = 0;\n-        private Boolean b = true;\n-        private Float f = 1.0F;\n-        private Duration d = Duration.valueOf(1000);\n-\n-        public String getS() {return s;}\n-        public void setS(String s) {this.s = s;}\n-        public Integer getI() {return i;}\n-        public void setI(Integer i) {this.i = i;}\n-        public Boolean getB() {return b;}\n-        public void setB(Boolean b) {this.b = b;}\n-        public Float getF() {return f;}\n-        public void setF(Float n) {this.f = n;}\n-        public Duration getD() {return d;}\n-        public void setD(Duration d) {this.d = d;}\n-    }\n-\n-    private Timeline t;\n-\n-    private final XYZ xyz = new XYZ();\n-    private final String newS = \"def\";\n-    private final Integer newI = 10;\n-    private final Boolean newB = false;\n-    private final Float newF = 10.0F;\n-    private final Duration newD = Duration.valueOf(10000);\n-\n-    public KeyValue_TS200_03_Test() {\n-        super(\"Should change key values of bean properties\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(1000, false,\n-                        new KeyValue(xyz, new PropertyReference<String>(XYZ.class, \"s\"), newS),\n-                        new KeyValue(xyz, new PropertyReference<Integer>(XYZ.class, \"i\"), newI),\n-                        new KeyValue(xyz, new PropertyReference<Boolean>(XYZ.class, \"b\"), newB),\n-                        new KeyValue(xyz, new PropertyReference<Float>(XYZ.class, \"f\"), newF),\n-                        new KeyValue(xyz, new PropertyReference<Duration>(XYZ.class, \"d\"), newD)\n-                )\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.playFromStart();\n-        delayFor(t);\n-\n-        if(!newS.equals(xyz.getS())) {\n-            fail(\"String \" + xyz.getS());\n-        }\n-        if(!newI.equals(xyz.getI())) {\n-            fail(\"Integer \" + xyz.getI());\n-        }\n-        if(!newB.equals(xyz.getB())) {\n-            fail(\"Boolean \" + xyz.getB());\n-        }\n-        if(!newF.equals(xyz.getF())) {\n-            fail(\"Number \" + xyz.getF());\n-        }\n-        if(!newD.equals(xyz.getD())) {\n-            fail(\"Duration \" + xyz.getD());\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyValue_TS200_03_Test.java","additions":0,"deletions":109,"binary":false,"changes":109,"status":"deleted"},{"patch":"@@ -1,109 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.beans.AbstractBean;\n-import javafx.beans.PropertyReference;\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class KeyValue_TS200_04_Test extends AnimationFunctionalTestBase {\n-    public static class XYZ extends AbstractBean {\n-        public XYZ() {}\n-\n-        private String s= \"abc\";\n-        private Integer i = 0;\n-        private Boolean b = true;\n-        private Float f = 1.0F;\n-        private Duration d = Duration.valueOf(1000);\n-\n-        public String getS() {return s;}\n-        public void setS(String s) {this.s = s;}\n-        public Integer getI() {return i;}\n-        public void setI(Integer i) {this.i = i;}\n-        public Boolean getB() {return b;}\n-        public void setB(Boolean b) {this.b = b;}\n-        public Float getF() {return f;}\n-        public void setF(Float f) {this.f = f;}\n-        public Duration getD() {return d;}\n-        public void setD(Duration d) {this.d = d;}\n-    }\n-\n-    private Timeline t;\n-\n-    private final XYZ xyz = new XYZ();\n-    private final String newS = \"def\";\n-    private final Integer newI = 10;\n-    private final Boolean newB = false;\n-    private final Float newF = 10.0F;\n-    private final Duration newD = Duration.valueOf(10000);\n-\n-    public KeyValue_TS200_04_Test() {\n-        super(\"Should change key values of bean properties with different interpolators\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(1000, false,\n-                        new KeyValue(xyz, new PropertyReference<String>(XYZ.class, \"s\"), newS, Interpolator.DISCRETE),\n-                        new KeyValue(xyz, new PropertyReference<Integer>(XYZ.class, \"i\"), newI, Interpolator.EASE_BOTH),\n-                        new KeyValue(xyz, new PropertyReference<Boolean>(XYZ.class, \"b\"), newB, Interpolator.EASE_IN),\n-                        new KeyValue(xyz, new PropertyReference<Float>(XYZ.class, \"f\"), newF, Interpolator.EASE_OUT),\n-                        new KeyValue(xyz, new PropertyReference<Duration>(XYZ.class, \"d\"), newD, Interpolator.LINEAR)\n-                )\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        if(!newS.equals(xyz.getS())) {\n-            fail(\"String \" + xyz.getS());\n-        }\n-        if(!newI.equals(xyz.getI())) {\n-            fail(\"Integer \" + xyz.getI());\n-        }\n-        if(!newB.equals(xyz.getB())) {\n-            fail(\"Boolean \" + xyz.getB());\n-        }\n-        if(!newF.equals(xyz.getF())) {\n-            fail(\"Number \" + xyz.getF());\n-        }\n-        if(!newD.equals(xyz.getD())) {\n-            fail(\"Duration \" + xyz.getD());\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/KeyValue_TS200_04_Test.java","additions":0,"deletions":109,"binary":false,"changes":109,"status":"deleted"},{"patch":"@@ -1,72 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\n-public class RateTestBackAR_Test extends RateTestBase {\n-\n-    public RateTestBackAR_Test() {\n-        super(\"Test behavior of Timeline.rate with autoReverse=true in backward direction\");\n-    }\n-\n-    @Before public void setUp() {\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        doTest();\n-    }\n-\n-    @Override protected void startTimeline() {\n-        set.timeline.setAutoReverse(true);\n-        set.timeline.playBackward();\n-    }\n-\n-    @Override protected void checkHalf() {\n-        \/\/ Should be just past halfway through\n-        set.check(1, 2, true);\n-    }\n-\n-    @Override protected void checkDone(boolean infinite) {\n-        \/\/ TL should be finished\n-        set.check(3, 2, infinite);\n-\n-        if (!infinite) {\n-            set.checkTime(set.TIME_VALUE);\n-            set.checkTarget(set.TARGET_VALUE);\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RateTestBackAR_Test.java","additions":0,"deletions":72,"binary":false,"changes":72,"status":"deleted"},{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\n-public class RateTestBack_Test extends RateTestBase {\n-\n-    public RateTestBack_Test() {\n-        super(\"Test behavior of Timeline.rate (except toggling) in backward direction\");\n-    }\n-\n-    @Before public void setUp() {\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        doTest();\n-    }\n-\n-    @Override protected void startTimeline() {\n-        set.timeline.playBackward();\n-    }\n-\n-    @Override protected void checkHalf() {\n-        \/\/ Should be just past halfway through\n-        set.check(2, 3, true);\n-    }\n-\n-    @Override protected void checkDone(boolean infinite) {\n-        \/\/ TL should be finished\n-        if (infinite) {\n-            set.check(5, 4, true);\n-        } else {\n-            set.check(4, 4, false, 0, 0);\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RateTestBack_Test.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -1,101 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-public abstract class RateTestBase extends AnimationFunctionalTestBase {\n-    protected TestSet set = new TestSet(8);\n-\n-    public RateTestBase(String name) {\n-        super(name);\n-    }\n-\n-    protected abstract void startTimeline();\n-\n-    \/\/ to be called from @Test test()\n-    protected void doTest() {\n-        set.timeline.setCycleCount(4);\n-\n-        set.timeline.setRate(0.5f);\n-        check(4500, 8500);\n-\n-        set.timeline.setRate(2f);\n-        check(1250, 2500);\n-\n-        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-\n-        set.timeline.setRate(0.5f);\n-        check(4500, 8500);\n-\n-        set.timeline.setRate(2f);\n-        check(1250, 2500);\n-\n-        set.timeline.setCycleCount(4);\n-        set.timeline.setRate(0.5f);\n-        check(4000, 4250, 5250);\n-\n-        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-        set.timeline.setRate(0.5f);\n-        check(4000, 4250, 5250);\n-    }\n-\n-    protected void check(int halfTime, int doneTime) {\n-        check(-1, halfTime, doneTime);\n-    }\n-\n-    protected final void check(final int rateChangeTime, final int halfTime, final int doneTime) {\n-        Timeline tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.resetCount();\n-                        startTimeline();\n-                    }\n-                },\n-                new SimpleKeyFrame(rateChangeTime) {\n-                    @Override protected void action() {\n-                        if (rateChangeTime > 0) {\n-                            set.timeline.setRate(set.timeline.getRate() * 4);\n-                        }\n-                    }\n-                },\n-                new SimpleKeyFrame(halfTime) {\n-                    @Override protected void action() {\n-                        checkHalf();\n-                    }\n-                },\n-                new SimpleKeyFrame(doneTime) {\n-                    @Override protected void action() {\n-                        checkDone(set.timeline.getRepeatCount() < 0);\n-                        set.timeline.stop();\n-                    }\n-                }\n-        );\n-        tt.play();\n-        delayFor(tt);\n-    }\n-\n-    protected abstract void checkHalf();\n-    protected abstract void checkDone(boolean infinite);\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RateTestBase.java","additions":0,"deletions":101,"binary":false,"changes":101,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class RateTestFwdAR_Test extends RateTestBase {\n-\n-    public RateTestFwdAR_Test() {\n-        super(\"Test behavior of Timeline.rate with autoReverse=true in forward direction\");\n-    }\n-\n-    @Before public void setUp() {\n-    }\n-\n-    @Test public void test() {\n-        doTest();\n-    }\n-\n-    @Override protected void startTimeline() {\n-        set.timeline.setAutoReverse(true);\n-        set.timeline.playFromStart();\n-    }\n-\n-    @Override protected void checkHalf() {\n-        \/\/ Should be just past halfway through\n-        set.check(2, 1, true);\n-    }\n-\n-    @Override protected void checkDone(boolean infinite) {\n-        \/\/ TL should be finished\n-        if (infinite) {\n-            set.check(3, 2, true);\n-        } else {\n-            set.check(3, 2, false, 0, 0);\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RateTestFwdAR_Test.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class RateTestFwd_Test extends RateTestBase {\n-\n-    public RateTestFwd_Test() {\n-        super(\"Test behavior of Timeline.rate (except toggling) in forward direction\");\n-    }\n-\n-    @Before public void setUp() {\n-    }\n-\n-    @Test public void test() {\n-        doTest();\n-    }\n-\n-    @Override protected void startTimeline() {\n-        set.timeline.playFromStart();\n-    }\n-\n-    @Override protected void checkHalf() {\n-        \/\/ Should be just past halfway through\n-        set.check(3, 2, true);\n-    }\n-\n-    @Override protected void checkDone(boolean infinite) {\n-        \/\/ TL should be finished\n-        if (infinite) {\n-            set.check(5, 4, true);\n-        } else {\n-            set.check(4, 4, false, set.TIME_VALUE, set.TARGET_VALUE);\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RateTestFwd_Test.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,101 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class RepeatAR_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public RepeatAR_Test() {\n-        super(\"Test behavior of Timeline.repeatCount with autoReverse=true\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(3);\n-        set.timeline.setAutoReverse(true);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(3500) {\n-                    @Override protected void action() {\n-                        set.check(2, 2, false, set.TIME_VALUE, set.TARGET_VALUE);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(4);\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(8000) {\n-                    @Override protected void action() {\n-                        set.check(3, 2, false, 0, 0);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(12500) {\n-                    @Override protected void action() {\n-                        set.check(3, 2, true);\n-\n-                        set.resetCount();\n-                        set.timeline.stop();\n-                    }\n-                },\n-                new SimpleKeyFrame(13000) {\n-                    @Override protected void action() {\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(4);\n-                        set.timeline.playFromEnd();\n-                    }\n-                },\n-                new SimpleKeyFrame(16250) {\n-                    @Override protected void action() {\n-                        set.check(2, 2, false, 0, 0);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RepeatAR_Test.java","additions":0,"deletions":101,"binary":false,"changes":101,"status":"deleted"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class RepeatBackAR_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public RepeatBackAR_Test() {\n-        super(\"Test behavior of Timeline.repeatCount started backward with autoReverse=true\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(3);\n-        set.timeline.setAutoReverse(true);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(3500) {\n-                    @Override protected void action() {\n-                        set.check(2, 2, false, 0, 0);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(4);\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(8000) {\n-                    @Override protected void action() {\n-                        set.check(2, 3, false, set.TIME_VALUE, set.TARGET_VALUE);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(12500) {\n-                    @Override protected void action() {\n-                        set.check(2, 3, true);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RepeatBackAR_Test.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class RepeatBack_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public RepeatBack_Test() {\n-        super(\"Test behavior of Timeline.repeatCount started backward\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(4);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(4500) {\n-                    @Override protected void action() {\n-                        set.check(4, 4, false, 0, 0);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(9000) {\n-                    @Override protected void action() {\n-                        set.check(4, 5, true);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/RepeatBack_Test.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-import javafx.util.Duration;\n-\n-public class Repeat_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public Repeat_Test() {\n-        super(\"Test behavior of Timeline.repeatCount with autoReverse=false\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(5);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(5500) {\n-                    @Override protected void action() {\n-                        set.check(5, 5, false, set.TIME_VALUE, set.TARGET_VALUE);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(11000) {\n-                    @Override protected void action() {\n-                        set.check(6, 5, true);\n-\n-                        set.timeline.stop();\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(4);\n-                        set.timeline.playFromEnd();\n-                    }\n-                },\n-                new SimpleKeyFrame(14250) {\n-                    @Override protected void action() {\n-                        set.check(3, 4, false, set.TIME_VALUE, set.TARGET_VALUE);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Repeat_Test.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS001_01_Test extends AnimationFunctionalTestBase {\n-    private static int N = 15;\n-    private static final int INTERVAL = 100; \/\/ ms between KeyFrames\n-    private Timeline t;\n-    private int frameIndex;\n-\n-    public Timeline_TS001_01_Test() {\n-        super(\"Should play forward and backward (autoReverse=true)\");\n-    }\n-\n-    @Before public void setUp() {\n-        KeyFrame frames[] = new KeyFrame[N];\n-        frameIndex = 0;\n-        for (int i = 0; i < N; i++) {\n-            final int j = i;\n-            frames[i] = new SimpleKeyFrame(i * INTERVAL) {\n-                @Override protected void action() {\n-                    int expected = frameIndex < N ? frameIndex : 2 * N - frameIndex - 2;\n-                    if (j != expected) {\n-                        fail(\"visited \" + j + \" while expected \" + expected);\n-                    }\n-                    if (frameIndex > N && expected == 0) {\n-                        frameIndex = 0; \/\/ reverse cycle done\n-                    } else {\n-                        frameIndex++;\n-                    }\n-                }\n-            };\n-        }\n-\n-        t = new SimpleTimeline(2, frames);\n-        t.setAutoReverse(true);\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS001_01_Test.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -1,75 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS002_01_Test extends AnimationFunctionalTestBase {\n-    private static int N = 10;\n-    private static final int INTERVAL = 100; \/\/ ms between KeyFrames\n-    private Timeline t;\n-    private int frameIndex;\n-\n-    public Timeline_TS002_01_Test() {\n-        super(\"Should play forward after played to the end and restarted (autoReverse=true)\");\n-    }\n-\n-    @Before public void setUp() {\n-        KeyFrame frames[] = new KeyFrame[N];\n-        frameIndex = 0;\n-        for (int i = 0; i < N; i++) {\n-            final int j = i;\n-            frames[i] = new SimpleKeyFrame(i * INTERVAL) {\n-                @Override protected void action() {\n-                    \/\/ check: reverse shouldn'timeline happen on the 2nd animation run\n-                    if (j != frameIndex++) {\n-                        fail(\"visited \" + j + \" while expected \" + frameIndex);\n-                    }\n-                }\n-            };\n-        }\n-\n-        t = new SimpleTimeline(frames);\n-        t.setAutoReverse(true);\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-\n-        frameIndex = 0;\n-        t.play();\n-        delayFor(t);\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS002_01_Test.java","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS002_02_Test extends AnimationFunctionalTestBase {\n-    private static int N = 10;\n-    private static final int INTERVAL = 100; \/\/ ms between KeyFrames\n-    private Timeline t;\n-    private int frameIndex;\n-\n-    public Timeline_TS002_02_Test() {\n-        super(\"Should play forward after stopped and restarted (autoReverse=true)\");\n-    }\n-\n-\n-    @Before public void setUp() {\n-        KeyFrame frames[] = new KeyFrame[N];\n-        frameIndex = 0;\n-        for (int i = 0; i < N; i++) {\n-            final int j = i;\n-            frames[i] = new SimpleKeyFrame(i * INTERVAL) {\n-                @Override protected void action() {\n-                    \/\/ check: reverse shouldn'timeline happen on the 2nd animation run\n-                    if (j != frameIndex++) {\n-                        fail(\"visited \" + j + \" while expected \" + frameIndex);\n-                    }\n-                }\n-            };\n-        }\n-\n-        t = new SimpleTimeline(frames);\n-        t.setAutoReverse(true);\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delay((long) t.getTotalDuration().toMillis() \/ 2); \/\/ stop Timeline half-way\n-        t.stop();\n-\n-        frameIndex = 0;\n-        t.play();\n-        delayFor(t);\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS002_02_Test.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -1,64 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS005_01_Test extends AnimationFunctionalTestBase {\n-    private Timeline t;\n-    private int count = 0;\n-\n-    public Timeline_TS005_01_Test() {\n-        super(\"Should play forever after set RepeatCount=INDEFINITE\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(2,\n-                new SimpleKeyFrame(100) {\n-                    @Override protected void action() {\n-                        count++;\n-                        if(count == 1) {\n-                            t.setCycleCount(Timeline.INDEFINITE);\n-                        }\n-                    }\n-                });\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delay(3000);\n-        if (!t.isRunning()) {\n-            fail(\"stopped unexpectedly\");\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS005_01_Test.java","additions":0,"deletions":64,"binary":false,"changes":64,"status":"deleted"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS006_01_Test extends AnimationFunctionalTestBase {\n-    private Timeline t1;\n-    private Timeline t2;\n-    private int count = 0;\n-\n-    public Timeline_TS006_01_Test() {\n-        super(\"Should create Timelines in two different ways\");\n-    }\n-\n-    @Before public void setUp() {\n-        KeyFrame frames[] = {\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        count += 1;\n-                    }\n-                },\n-                new SimpleKeyFrame(100) {\n-                    @Override protected void action() {\n-                        count += 2;\n-                    }\n-                },\n-                new SimpleKeyFrame(200) {\n-                    @Override protected void action() {\n-                        count += 4;\n-                    }\n-                }\n-        };\n-\n-        t1 = new SimpleTimeline(frames[0], frames[1], frames[2]);\n-        t2 = new SimpleTimeline(frames);\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        t1.play();\n-        delayFor(t1);\n-        if (count != 7) {\n-            fail(\"created using a variable argument list : \" + count);\n-        }\n-        count = 0;\n-        t2.play();\n-        delayFor(t2);\n-        if (count != 7) {\n-            throw new AssertionError(\"created using an array: \" + count);\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t1.stop();\n-        t2.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS006_01_Test.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"@@ -1,78 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS008_01_Test extends AnimationFunctionalTestBase {\n-    private Timeline t;\n-    private final String valid = \"0123\";\n-    private String actual = \"\";\n-\n-    public Timeline_TS008_01_Test() {\n-        super(\"Should visit KeyFrames in right order\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(500) {\n-                    @Override protected void action() {\n-                        actual += \"1\";\n-                    }\n-                },\n-                new SimpleKeyFrame(1500) {\n-                    @Override protected void action() {\n-                        actual += \"3\";\n-                    }\n-                },\n-                new SimpleKeyFrame(1000) {\n-                    @Override protected void action() {\n-                        actual += \"2\";\n-                    }\n-                },\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        actual += \"0\";\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-        if (!valid.equals(actual)) {\n-            throw new AssertionError(\"visited in wrong order: \" + actual);\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS008_01_Test.java","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"},{"patch":"@@ -1,66 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS012_01_Test extends AnimationFunctionalTestBase {\n-    private Timeline t;\n-    private SimpleKeyValueTarget target = new SimpleKeyValueTarget(1);\n-    private Integer newVal = 3;\n-\n-    public Timeline_TS012_01_Test() {\n-        super(\"Timeline with repeatCount=0 should never start\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(0,\n-                new SimpleKeyFrame(100, false, new KeyValue(target, newVal)) {\n-                    @Override protected void action() {\n-                        fail(\"KeyFrame visited\");\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        t.play();\n-        delay(200);\n-\n-        if(!newVal.equals(target.getValue())) {\n-            throw new AssertionError(\"key value changed\");\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS012_01_Test.java","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS016_02_Test extends AnimationFunctionalTestBase {\n-    private Timeline t;\n-\n-    public Timeline_TS016_02_Test() {\n-        super(\"Timeline should stop in time\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(new SimpleKeyFrame(10));\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delay(1000);\n-        if(t.isRunning()) {\n-            fail(\"didn'timeline stop in time\");\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS016_02_Test.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,78 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS017_02_Test extends AnimationFunctionalTestBase {\n-    private static int N = 15;\n-    private static final int INTERVAL = 100; \/\/ ms between KeyFrames\n-    private Timeline t;\n-    private int frameIndex;\n-\n-    public Timeline_TS017_02_Test() {\n-        super(\"Should play backward after set rate=-1\");\n-    }\n-\n-    @Before public void setUp() {\n-        KeyFrame frames[] = new KeyFrame[N];\n-        frameIndex = 0;\n-        for (int i = 0; i < N; i++) {\n-            final int j = i;\n-            frames[i] = new SimpleKeyFrame(i * INTERVAL) {\n-                @Override protected void action() {\n-                    int expected = frameIndex;\n-                    if (j != expected) {\n-                        fail(\"visited \" + j + \" while expected \" + expected);\n-                    }\n-                    frameIndex += t.getRate();\n-                }\n-            };\n-        }\n-\n-        t = new SimpleTimeline(frames);\n-    }\n-\n-    @Test public void test() {\n-        frameIndex = 0;\n-        t.play();\n-        delayFor(t);\n-\n-        frameIndex = N - 1;\n-        t.setRate(-1);\n-        t.getCurrentTime(t.getTotalDuration());\n-        t.play();\n-        delayFor(t);\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS017_02_Test.java","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"},{"patch":"@@ -1,78 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS018_02_Test extends AnimationFunctionalTestBase {\n-    private static int N = 15;\n-    private static final int INTERVAL = 100; \/\/ ms between KeyFrames\n-    private Timeline t;\n-    private int frameIndex;\n-\n-    public Timeline_TS018_02_Test() {\n-        super(\"Should resume from the same position after pause()\/play()\");\n-    }\n-\n-    @Before public void setUp() {\n-        KeyFrame frames[] = new KeyFrame[N];\n-        frameIndex = 0;\n-        for (int i = 0; i < N; i++) {\n-            final int j = i;\n-            frames[i] = new SimpleKeyFrame(i * INTERVAL) {\n-                @Override protected void action() {\n-                    int expected = frameIndex;\n-                    if (j != expected) {\n-                        fail(\"visited \" + j + \" while expected \" + expected);\n-                    }\n-                    frameIndex ++;\n-                    if (j == 8) {\n-                        t.pause();\n-                    }\n-                }\n-            };\n-        }\n-\n-        t = new SimpleTimeline(frames);\n-    }\n-\n-    @Test public void test() {\n-        frameIndex = 0;\n-        t.play();\n-        delayFor(t);\n-\n-        t.play(); \/\/ resuming after pause()\n-        delayFor(t);\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS018_02_Test.java","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"},{"patch":"@@ -1,74 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS019_02_Test extends AnimationFunctionalTestBase {\n-    private Timeline t;\n-    private double dur = 500;\n-\n-    public Timeline_TS019_02_Test() {\n-        super(\"Should stop at the correct position\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(\n-                new SimpleKeyFrame(100),\n-                new SimpleKeyFrame(dur)\n-        );\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-        check(dur, \"didn'timeline stay at the end after playing forward\");\n-\n-        t.setRate(-1);\n-        t.play();\n-        delayFor(t);\n-        check(0, \"didn'timeline stay at 0 after playing backward\");\n-\n-        t.setRate(1);\n-        t.play();\n-        delayFor(t);\n-        t.stop();\n-        check(0, \"didn'timeline stay at 0 after stop()\");\n-    }\n-\n-    private void check(double time, String message) {\n-        if (t.getCurrentTime().toMillis() != time) {\n-            fail(message + \" expected: \" + time + \"ms, actual: \" + t.getCurrentTime());\n-        }\n-    }\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS019_02_Test.java","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -1,64 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-\n-public class Timeline_TS021_01_Test extends AnimationFunctionalTestBase {\n-    private static int N = 20;\n-    private Timeline t;\n-    private int n = 0;\n-\n-    public Timeline_TS021_01_Test() {\n-        super(\"Should not skip KeyFrames\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(N,\n-                new SimpleKeyFrame(15) {\n-                    @Override protected void action() {\n-                        n++;\n-                        delay(20);\n-                    }\n-                });\n-    }\n-\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-        if (n != N) {\n-            fail(\"visited only \" + n + \" out of \" + N);\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Timeline_TS021_01_Test.java","additions":0,"deletions":64,"binary":false,"changes":64,"status":"deleted"},{"patch":"@@ -1,87 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class ToggleAR_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public ToggleAR_Test() {\n-        super(\"Test toggle behavior of an autoReverse, repeating TL\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(100);\n-        set.timeline.setAutoReverse(true);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(2500) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(5500) {\n-                    @Override protected void action() {\n-                        set.check(4, 2, false, 0, 0);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(8000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(11000) {\n-                    @Override protected void action() {\n-                        set.check(4, 2, false, 0, 0);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/ToggleAR_Test.java","additions":0,"deletions":87,"binary":false,"changes":87,"status":"deleted"},{"patch":"@@ -1,87 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class ToggleBackAR_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public ToggleBackAR_Test() {\n-        super(\"Test toggle behavior of an autoReverse TL that runs backwards\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(5);\n-        set.timeline.setAutoReverse(true);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(2500) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(5500) {\n-                    @Override protected void action() {\n-                        set.check(2, 4, false, set.TIME_VALUE, set.TARGET_VALUE);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(8000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(11000) {\n-                    @Override protected void action() {\n-                        set.check(2, 4, false, set.TIME_VALUE, set.TARGET_VALUE);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/ToggleBackAR_Test.java","additions":0,"deletions":87,"binary":false,"changes":87,"status":"deleted"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class ToggleBack_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public ToggleBack_Test() {\n-        super(\"Test toggle behavior of a non-autoReverse TL that runs backwards\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(5);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(2500) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(5500) {\n-                    @Override protected void action() {\n-                        set.check(4, 6, false, set.TIME_VALUE, set.TARGET_VALUE);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playBackward();\n-                    }\n-                },\n-                new SimpleKeyFrame(8000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(11000) {\n-                    @Override protected void action() {\n-                        set.check(4, 6, false, set.TIME_VALUE, set.TARGET_VALUE);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/ToggleBack_Test.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\/**\n- * \"Opposite\" of ToggleStartNonZero.\n- * Test toggle behavior of a non-autoReverse, repeating TL that begins playback\n- * in reverse at time < the end.  Playback should toggle normally, and end when we reach the\n- * end of the TL.\n- *\n- * Added for RT-9365.\n- *\n- *\/\n-\n-public class ToggleStartNonEnd_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public ToggleStartNonEnd_Test() {\n-        super(\"Test toggle behavior of a non-autoReverse TL starting from time > 0\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(100);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.getCurrentTime(Duration.valueOf(500));\n-                        set.timeline.setRate(-1);\n-                        set.timeline.play();\n-                    }\n-                },\n-                new SimpleKeyFrame(2000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(5000) {\n-                    @Override protected void action() {\n-                        set.check(5, 5, false, set.TIME_VALUE, set.TARGET_VALUE);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.getCurrentTime(Duration.valueOf(500));\n-                        set.timeline.setRate(-1);\n-                        set.timeline.play();\n-                    }\n-                },\n-                new SimpleKeyFrame(7000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(10000) {\n-                    @Override protected void action() {\n-                        set.check(5, 5, false, set.TIME_VALUE, set.TARGET_VALUE);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/ToggleStartNonEnd_Test.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -1,100 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\/**\n- * Test toggle behavior of a non-autoReverse, repeating TL that begins playback\n- * at time > 0.  Playback should toggle normally, and end when we reach the\n- * beginning of the TL.\n- *\n- * Added for RT-9365.\n- *\n- *\/\n-\n-public class ToggleStartNonZero_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public ToggleStartNonZero_Test() {\n-        super(\"Test toggle behavior of a non-autoReverse TL starting from time > 0\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(100);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.getCurrentTime(Duration.valueOf(500));\n-                        set.timeline.play();\n-                    }\n-                },\n-                new SimpleKeyFrame(2000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(5000) {\n-                    @Override protected void action() {\n-                        set.check(5, 5, false, 0, 0);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.getCurrentTime(Duration.valueOf(500));\n-                        set.timeline.setRate(1);\n-                        set.timeline.play();\n-                    }\n-                },\n-                new SimpleKeyFrame(7000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(10000) {\n-                    @Override protected void action() {\n-                        set.check(5, 5, false, 0, 0);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/ToggleStartNonZero_Test.java","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import javafx.util.Duration;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-\n-public class Toggle_Test extends AnimationFunctionalTestBase {\n-    TestSet set = new TestSet(8);\n-    private Timeline tt;\n-\n-    public Toggle_Test() {\n-        super(\"Test toggle behavior of a non-autoReverse, repeating TL\");\n-    }\n-\n-    @Before public void setUp() {\n-        set.timeline.setCycleCount(100);\n-\n-        tt = new SimpleTimeline(\n-                new SimpleKeyFrame(0) {\n-                    @Override protected void action() {\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(2500) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(5500) {\n-                    @Override protected void action() {\n-                        set.check(6, 4, false, 0, 0);\n-\n-                        set.resetCount();\n-                        set.timeline.setCycleCount(Timeline.INDEFINITE);\n-                        set.timeline.playFromStart();\n-                    }\n-                },\n-                new SimpleKeyFrame(8000) {\n-                    @Override protected void action() {\n-                        set.timeline.setRate(-set.timeline.getRate());\n-                    }\n-                },\n-                new SimpleKeyFrame(11000) {\n-                    @Override protected void action() {\n-                        set.check(6, 4, false, 0, 0);\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Test public void test() {\n-        tt.playFromStart();\n-        delayFor(tt);\n-    }\n-\n-    @After public void cleanUp() {\n-        set.timeline.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/Toggle_Test.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package javafx.animation;\n-\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Ignore;\n-import org.junit.Test;\n-\n-\n-public class ZeroDur_Test extends AnimationFunctionalTestBase {\n-    private Timeline t;\n-    protected SimpleKeyValueTarget target = new SimpleKeyValueTarget(0d);\n-    int count = 0;\n-\n-\n-    public ZeroDur_Test() {\n-        super(\"Test various properties of running a 0-duration Timeline\");\n-    }\n-\n-    @Before public void setUp() {\n-        t = new SimpleTimeline(1,\n-                new SimpleKeyFrame(0, false, new KeyValue(target, 1d)) {\n-                    @Override protected void action() {\n-                        count ++;\n-                    }\n-                }\n-        );\n-    }\n-\n-    @Ignore \/\/ TODO: Activate once this was fixed\n-    @Test public void test() {\n-        t.play();\n-        delayFor(t);\n-        if (count != 1) {\n-            fail(\"count=\" + count + \", expected 1\");\n-        }\n-        if (!target.getValue().equals(1d)) {\n-            fail(\"target=\" + target.getValue() + \", expected 1.0d\");\n-        }\n-\n-        count = 0;\n-        t.setCycleCount(5);\n-        t.play();\n-        delayFor(t);\n-        if (count != 5) {\n-            fail(\"count=\" + count + \", expected 5\");\n-        }\n-        if (!target.getValue().equals(1d)) {\n-            fail(\"target=\" + target.getValue() + \", expected 1.0d\");\n-        }\n-    }\n-\n-\n-    @After public void cleanUp() {\n-        t.stop();\n-    }\n-}\n","filename":"tests\/functional\/animation\/javafx\/animation\/ZeroDur_Test.java","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,43 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project name=\"VMPerformance\" default=\"jar\" basedir=\".\">\n-    <description>Builds, tests, and runs the project VMPerformance.<\/description>\n-    <import file=\"nbproject\/build-impl.xml\"\/>\n-\n-    <pathconvert property=\"java.includes\" pathsep=\" \">\n-        <path>\n-            <dirset dir=\"${java.home}\" includes=\"include\"\/>\n-            <dirset dir=\"${java.home}\/..\" includes=\"include\"\/>\n-            <dirset dir=\"${java.home}\" includes=\"include\/linux\"\/>\n-            <dirset dir=\"${java.home}\/..\" includes=\"include\/linux\"\/>\n-        <\/path>\n-        <globmapper from=\"*\" to=\"-I *\"\/>\n-    <\/pathconvert>\n-\n-    <target name=\"-post-compile\">\n-        <apply executable=\"gcc\" dest=\"build\" dir=\"build\">\n-            <arg value=\"-O2\"\/>\n-            <arg value=\"-fPIC\"\/>\n-            <arg value=\"-shared\"\/>\n-            <arg value=\"-olibVMPerformance-${os.arch}.so\"\/>\n-            <arg line=\"${java.includes}\"\/>\n-            <fileset dir=\"src\" includes=\"*.c\"\/>\n-            <mapper type=\"merge\" to=\"libVMperformance-${os.arch}.so\"\/>\n-        <\/apply>\n-        <apply executable=\"arm-linux-gnueabi-gcc\" dest=\"build\" dir=\"build\" failonerror=\"false\">\n-            <arg value=\"-O2\"\/>\n-            <arg value=\"-fPIC\"\/>\n-            <arg value=\"-shared\"\/>\n-            <arg value=\"-olibVMPerformance-arm.so\"\/>\n-            <arg line=\"${java.includes}\"\/>\n-            <fileset dir=\"src\" includes=\"*.c\"\/>\n-            <mapper type=\"merge\" to=\"libVMperformance-arm.so\"\/>\n-        <\/apply>\n-    <\/target>\n-\n-    <target name=\"-post-jar\">\n-        <copy todir=\"dist\">\n-            <fileset dir=\"build\" includes=\"*.so\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-<\/project>\n","filename":"tests\/performance\/VMPerformance\/build.xml","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-Manifest-Version: 1.0\n-X-COMMENT: Main-Class will be added automatically by build\n-\n","filename":"tests\/performance\/VMPerformance\/manifest.mf","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,1053 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\n-***         EDIT ..\/build.xml INSTEAD         ***\n-\n-For the purpose of easier reading the script\n-is divided into following sections:\n-\n-  - initialization\n-  - compilation\n-  - jar\n-  - execution\n-  - debugging\n-  - javadoc\n-  - junit compilation\n-  - junit execution\n-  - junit debugging\n-  - applet\n-  - cleanup\n-\n-        -->\n-<project xmlns:j2seproject1=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\" xmlns:j2seproject3=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\" xmlns:jaxrpc=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/jax-rpc\" basedir=\"..\" default=\"default\" name=\"VMPerformance-impl\">\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n-        <condition>\n-            <not>\n-                <antversion atleast=\"1.8.0\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/fail>\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"\/>\n-    <!--\n-                ======================\n-                INITIALIZATION SECTION\n-                ======================\n-            -->\n-    <target name=\"-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init\" name=\"-init-private\">\n-        <property file=\"nbproject\/private\/config.properties\"\/>\n-        <property file=\"nbproject\/private\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/private\/private.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n-        <property file=\"${user.properties.file}\"\/>\n-        <!-- The two properties below are usually overridden -->\n-        <!-- by the active platform. Just a fallback. -->\n-        <property name=\"default.javac.source\" value=\"1.4\"\/>\n-        <property name=\"default.javac.target\" value=\"1.4\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n-        <property file=\"nbproject\/configs\/${config}.properties\"\/>\n-        <property file=\"nbproject\/project.properties\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property\" name=\"-do-init\">\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"\/>\n-        <condition property=\"splashscreen.available\">\n-            <and>\n-                <not>\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-                <available file=\"${application.splash}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"main.class.available\">\n-            <and>\n-                <isset property=\"main.class\"\/>\n-                <not>\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"manifest.available+main.class\">\n-            <and>\n-                <isset property=\"manifest.available\"\/>\n-                <isset property=\"main.class.available\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive\">\n-            <not>\n-                <istrue value=\"${jar.archive.disabled}\"\/>\n-            <\/not>\n-        <\/condition>\n-        <condition property=\"do.mkdist\">\n-            <and>\n-                <isset property=\"do.archive\"\/>\n-                <isset property=\"libs.CopyLibs.classpath\"\/>\n-                <not>\n-                    <istrue value=\"${mkdist.disabled}\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"manifest.available+main.class+mkdist.available\">\n-            <and>\n-                <istrue value=\"${manifest.available+main.class}\"\/>\n-                <isset property=\"do.mkdist\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+manifest.available\">\n-            <and>\n-                <isset property=\"manifest.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+main.class.available\">\n-            <and>\n-                <isset property=\"main.class.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+splashscreen.available\">\n-            <and>\n-                <isset property=\"splashscreen.available\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"do.archive+manifest.available+main.class\">\n-            <and>\n-                <istrue value=\"${manifest.available+main.class}\"\/>\n-                <istrue value=\"${do.archive}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"manifest.available-mkdist.available\">\n-            <or>\n-                <istrue value=\"${manifest.available}\"\/>\n-                <isset property=\"do.mkdist\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"manifest.available+main.class-mkdist.available\">\n-            <or>\n-                <istrue value=\"${manifest.available+main.class}\"\/>\n-                <isset property=\"do.mkdist\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"have.tests\">\n-            <or>\n-                <available file=\"${test.src.dir}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"have.sources\">\n-            <or>\n-                <available file=\"${src.dir}\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition property=\"netbeans.home+have.tests\">\n-            <and>\n-                <isset property=\"netbeans.home\"\/>\n-                <isset property=\"have.tests\"\/>\n-            <\/and>\n-        <\/condition>\n-        <condition property=\"no.javadoc.preview\">\n-            <and>\n-                <isset property=\"javadoc.preview\"\/>\n-                <isfalse value=\"${javadoc.preview}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"run.jvmargs\" value=\"\"\/>\n-        <property name=\"javac.compilerargs\" value=\"\"\/>\n-        <property name=\"work.dir\" value=\"${basedir}\"\/>\n-        <condition property=\"no.deps\">\n-            <and>\n-                <istrue value=\"${no.dependencies}\"\/>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javac.debug\" value=\"true\"\/>\n-        <property name=\"javadoc.preview\" value=\"true\"\/>\n-        <property name=\"application.args\" value=\"\"\/>\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"\/>\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"\/>\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n-            <and>\n-                <isset property=\"javadoc.encoding\"\/>\n-                <not>\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"\/>\n-        <property name=\"includes\" value=\"**\"\/>\n-        <property name=\"excludes\" value=\"\"\/>\n-        <property name=\"do.depend\" value=\"false\"\/>\n-        <condition property=\"do.depend.true\">\n-            <istrue value=\"${do.depend}\"\/>\n-        <\/condition>\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"\/>\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath\/p:'${toString:endorsed.classpath.path}'\">\n-            <length length=\"0\" string=\"${endorsed.classpath}\" when=\"greater\"\/>\n-        <\/condition>\n-        <condition else=\"false\" property=\"jdkBug6558476\">\n-            <and>\n-                <matches pattern=\"1\\.[56]\" string=\"${java.specification.version}\"\/>\n-                <not>\n-                    <os family=\"unix\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <property name=\"javac.fork\" value=\"${jdkBug6558476}\"\/>\n-        <property name=\"jar.index\" value=\"false\"\/>\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"\/>\n-        <property name=\"copylibs.rebase\" value=\"true\"\/>\n-        <available file=\"${meta.inf.dir}\/persistence.xml\" property=\"has.persistence.xml\"\/>\n-    <\/target>\n-    <target name=\"-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n-        <fail unless=\"src.dir\">Must set src.dir<\/fail>\n-        <fail unless=\"test.src.dir\">Must set test.src.dir<\/fail>\n-        <fail unless=\"build.dir\">Must set build.dir<\/fail>\n-        <fail unless=\"dist.dir\">Must set dist.dir<\/fail>\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir<\/fail>\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir<\/fail>\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir<\/fail>\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir<\/fail>\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes<\/fail>\n-        <fail unless=\"dist.jar\">Must set dist.jar<\/fail>\n-    <\/target>\n-    <target name=\"-init-macrodef-property\">\n-        <macrodef name=\"property\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <compilerarg value=\"-processorpath\"\/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"\/>\n-                    <compilerarg line=\"${ap.processors.internal}\"\/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"\/>\n-                    <compilerarg value=\"-s\"\/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"\/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"\/>\n-            <attribute default=\"${build.generated.sources.dir}\/ap-source-output\" name=\"apgeneratedsrcdir\"\/>\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"\/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.dir}\/empty\" name=\"empty.dir\"\/>\n-                <mkdir dir=\"${empty.dir}\"\/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"\/>\n-                        <\/dirset>\n-                    <\/src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <compilerarg line=\"${javac.compilerargs}\"\/>\n-                    <customize\/>\n-                <\/javac>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n-        <macrodef name=\"depend\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"\/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"\/>\n-            <sequential>\n-                <depend cache=\"${build.dir}\/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                <\/depend>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"force-recompile\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"\/>\n-            <sequential>\n-                <fail unless=\"javac.includes\">Must set javac.includes<\/fail>\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n-                    <path>\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"\/>\n-                    <\/path>\n-                    <globmapper from=\"*.java\" to=\"*.class\"\/>\n-                <\/pathconvert>\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"\/>\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"\/>\n-                <delete>\n-                    <files includesfile=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-                <delete>\n-                    <fileset file=\"${javac.includesfile.binary}\"\/>\n-                <\/delete>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-junit\">\n-        <macrodef name=\"junit\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"\/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"\/>\n-            <attribute default=\"**\" name=\"testincludes\"\/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"\/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <batchtest todir=\"${build.test.results.dir}\">\n-                        <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">\n-                            <filename name=\"@{testincludes}\"\/>\n-                        <\/fileset>\n-                    <\/batchtest>\n-                    <classpath>\n-                        <path path=\"${run.test.classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"\/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <formatter type=\"brief\" usefile=\"false\"\/>\n-                    <formatter type=\"xml\"\/>\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"-ea\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                <\/junit>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" name=\"profile-init\"\/>\n-    <target name=\"-profile-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target name=\"-profile-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target name=\"-profile-init-macrodef-profile\">\n-        <macrodef name=\"resolve\">\n-            <attribute name=\"name\"\/>\n-            <attribute name=\"value\"\/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"\/>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"profile\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property environment=\"env\"\/>\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"\/>\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-                    <arg line=\"${application.args}\"\/>\n-                    <classpath>\n-                        <path path=\"${run.classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" name=\"-profile-init-check\">\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm<\/fail>\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent<\/fail>\n-    <\/target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n-        <macrodef name=\"nbjpdastart\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"name\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <attribute default=\"\" name=\"stopclassname\"\/>\n-            <sequential>\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                <\/nbjpdastart>\n-            <\/sequential>\n-        <\/macrodef>\n-        <macrodef name=\"nbjpdareload\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"\/>\n-            <sequential>\n-                <nbjpdareload>\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n-                        <include name=\"${fix.includes}*.class\"\/>\n-                    <\/fileset>\n-                <\/nbjpdareload>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-debug-args\">\n-        <property name=\"version-output\" value=\"java version &quot;${ant.java.version}\"\/>\n-        <condition property=\"have-jdk-older-than-1.4\">\n-            <or>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.0\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.1\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.2\"\/>\n-                <contains string=\"${version-output}\" substring=\"java version &quot;1.3\"\/>\n-            <\/or>\n-        <\/condition>\n-        <condition else=\"-Xdebug\" property=\"debug-args-line\" value=\"-Xdebug -Xnoagent -Djava.compiler=none\">\n-            <istrue value=\"${have-jdk-older-than-1.4}\"\/>\n-        <\/condition>\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n-            <isset property=\"debug.transport\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n-        <macrodef name=\"debug\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg line=\"${debug-args-line}\"\/>\n-                    <jvmarg value=\"-Xrunjdwp:transport=${debug-transport},address=${jpda.address}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-java\">\n-        <macrodef name=\"java\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <attribute default=\"${main.class}\" name=\"classname\"\/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" fork=\"true\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"\/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"\/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"\/>\n-                    <jvmarg line=\"${run.jvmargs}\"\/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"\/>\n-                    <\/classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"\/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                    <\/syspropertyset>\n-                    <customize\/>\n-                <\/java>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-macrodef-copylibs\">\n-        <macrodef name=\"copylibs\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"\/>\n-            <element name=\"customize\" optional=\"true\"\/>\n-            <sequential>\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n-                    <path path=\"${run.classpath}\"\/>\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"\/>\n-                <\/pathconvert>\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"\/>\n-                    <chainedmapper>\n-                        <flattenmapper\/>\n-                        <globmapper from=\"*\" to=\"lib\/*\"\/>\n-                    <\/chainedmapper>\n-                <\/pathconvert>\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"\/>\n-                <copylibs compress=\"${jar.compress}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n-                    <fileset dir=\"${build.classes.dir}\"\/>\n-                    <manifest>\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"\/>\n-                        <customize\/>\n-                    <\/manifest>\n-                <\/copylibs>\n-            <\/sequential>\n-        <\/macrodef>\n-    <\/target>\n-    <target name=\"-init-presetdef-jar\">\n-        <presetdef name=\"jar\" uri=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/1\">\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\">\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\"\/>\n-            <\/jar>\n-        <\/presetdef>\n-    <\/target>\n-    <target name=\"-init-ap-cmdline-properties\">\n-        <property name=\"annotation.processing.enabled\" value=\"true\"\/>\n-        <property name=\"annotation.processing.processors.list\" value=\"\"\/>\n-        <property name=\"annotation.processing.processor.options\" value=\"\"\/>\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"\/>\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"\/>\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"\/>\n-        <condition property=\"ap.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"\/>\n-        <\/condition>\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n-            <isfalse value=\"${annotation.processing.enabled}\"\/>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n-        <property name=\"ap.cmd.line.internal\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"\/>\n-    <!--\n-                ===================\n-                COMPILATION SECTION\n-                ===================\n-            -->\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n-        <property location=\"${build.dir}\/built-jar.properties\" name=\"built-jar.properties\"\/>\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n-        <echo level=\"warn\" message=\"Cycle detected: VMPerformance was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"\/>\n-        <antcall target=\"-warn-already-built-jar\"\/>\n-        <propertyfile file=\"${built-jar.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"\/>\n-    <target depends=\"init\" name=\"-check-automatic-build\">\n-        <available file=\"${build.classes.dir}\/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n-        <antcall target=\"clean\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n-        <mkdir dir=\"${build.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\n-        <pathconvert property=\"build.generated.subdirs\">\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"*\"\/>\n-            <\/dirset>\n-        <\/pathconvert>\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"\/>\n-        <copy todir=\"${build.classes.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy todir=\"${build.classes.dir}\/META-INF\">\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"\/>\n-    <target name=\"-pre-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile\/>\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}\" sourcepath=\"${src.dir}\"\/>\n-    <\/target>\n-    <target name=\"-post-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"\/>\n-    <!--\n-                ====================\n-                JAR BUILDING SECTION\n-                ====================\n-            -->\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"\/>\n-        <mkdir dir=\"${dist.jar.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar\" if=\"do.archive\" name=\"-do-jar-without-manifest\" unless=\"manifest.available-mkdist.available\">\n-        <j2seproject1:jar\/>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar\" if=\"do.archive+manifest.available\" name=\"-do-jar-with-manifest\" unless=\"manifest.available+main.class-mkdist.available\">\n-        <j2seproject1:jar manifest=\"${manifest.file}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar\" if=\"do.archive+manifest.available+main.class\" name=\"-do-jar-with-mainclass\" unless=\"manifest.available+main.class+mkdist.available\">\n-        <j2seproject1:jar manifest=\"${manifest.file}\">\n-            <j2seproject1:manifest>\n-                <j2seproject1:attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/j2seproject1:manifest>\n-        <\/j2seproject1:jar>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"\/>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\n-            <path path=\"${run.classpath}\"\/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"\/>\n-        <\/pathconvert>\n-        <echo level=\"info\">java -cp \"${run.classpath.with.dist.jar}\" ${main.class}<\/echo>\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-with-libraries-create-manifest\" unless=\"manifest.available\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-with-libraries-copy-manifest\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"\/>\n-        <copy file=\"${manifest.file}\" tofile=\"${tmp.manifest.file}\"\/>\n-    <\/target>\n-    <target depends=\"init,-do-jar-with-libraries-create-manifest,-do-jar-with-libraries-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-with-libraries-set-main\">\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-do-jar-with-libraries-create-manifest,-do-jar-with-libraries-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-with-libraries-set-splashscreen\">\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"\/>\n-        <mkdir dir=\"${build.classes.dir}\/META-INF\"\/>\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}\/META-INF\"\/>\n-        <manifest file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF\/${splashscreen.basename}\"\/>\n-        <\/manifest>\n-    <\/target>\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-with-libraries-create-manifest,-do-jar-with-libraries-copy-manifest,-do-jar-with-libraries-set-main,-do-jar-with-libraries-set-splashscreen\" if=\"do.mkdist\" name=\"-do-jar-with-libraries-pack\">\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"\/>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:<\/echo>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"\/>\n-        <echo level=\"info\">java -jar \"${dist.jar.resolved}\"<\/echo>\n-    <\/target>\n-    <target depends=\"-do-jar-with-libraries-pack\" if=\"do.archive\" name=\"-do-jar-with-libraries-delete-manifest\">\n-        <delete>\n-            <fileset file=\"${tmp.manifest.file}\"\/>\n-        <\/delete>\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-with-libraries-create-manifest,-do-jar-with-libraries-copy-manifest,-do-jar-with-libraries-set-main,-do-jar-with-libraries-set-splashscreen,-do-jar-with-libraries-pack,-do-jar-with-libraries-delete-manifest\" name=\"-do-jar-with-libraries\"\/>\n-    <target name=\"-post-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-jar,-do-jar-with-manifest,-do-jar-without-manifest,-do-jar-with-mainclass,-do-jar-with-libraries,-post-jar\" description=\"Build JAR.\" name=\"jar\"\/>\n-    <!--\n-                =================\n-                EXECUTION SECTION\n-                =================\n-            -->\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n-        <j2seproject1:java>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <target name=\"-do-not-recompile\">\n-        <property name=\"javac.includes.binary\" value=\"\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single\" name=\"run-single\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class<\/fail>\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"\/>\n-    <\/target>\n-    <!--\n-                =================\n-                DEBUGGING SECTION\n-                =================\n-            -->\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n-        <j2seproject3:debug>\n-            <customize>\n-                <arg line=\"${application.args}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"\/>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"\/>\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"\/>\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class<\/fail>\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"\/>\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\n-        <fail unless=\"fix.includes\">Must set fix.includes<\/fail>\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n-        <j2seproject1:nbjpdareload\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"\/>\n-    <!--\n-                =================\n-                PROFILING SECTION\n-                =================\n-            -->\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"netbeans.home\" name=\"profile\">\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile\/>\n-    <\/target>\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"netbeans.home\" name=\"profile-single\">\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class<\/fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"${profile.class}\"\/>\n-    <\/target>\n-    <!--\n-                =========================\n-                APPLET PROFILING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"profile-init,compile-single\" if=\"netbeans.home\" name=\"profile-applet\">\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <profile classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/profile>\n-    <\/target>\n-    <!--\n-                =========================\n-                TESTS PROFILING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"profile-init,compile-test-single\" if=\"netbeans.home\" name=\"profile-test-single\">\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-        <\/nbprofiledirect>\n-        <junit dir=\"${profiler.info.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" jvm=\"${profiler.info.jvm}\" showoutput=\"true\">\n-            <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <test name=\"${profile.class}\"\/>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"\/>\n-            <\/classpath>\n-            <syspropertyset>\n-                <propertyref prefix=\"test-sys-prop.\"\/>\n-                <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-            <\/syspropertyset>\n-            <formatter type=\"brief\" usefile=\"false\"\/>\n-            <formatter type=\"xml\"\/>\n-        <\/junit>\n-    <\/target>\n-    <!--\n-                ===============\n-                JAVADOC SECTION\n-                ===============\n-            -->\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n-        <mkdir dir=\"${dist.javadoc.dir}\"\/>\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n-            <and>\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"\/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"\/>\n-                <\/not>\n-            <\/and>\n-        <\/condition>\n-        <javadoc additionalparam=\"${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n-            <classpath>\n-                <path path=\"${javac.classpath}\"\/>\n-            <\/classpath>\n-            <fileset dir=\"${src.dir}\" excludes=\"*.java,${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/*.java\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/*.java\"\/>\n-                <exclude name=\"*.java\"\/>\n-            <\/fileset>\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"\/>\n-        <\/javadoc>\n-        <copy todir=\"${dist.javadoc.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**\/doc-files\/**\"\/>\n-            <\/fileset>\n-        <\/copy>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n-        <nbbrowse file=\"${dist.javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"\/>\n-    <!--\n-                =========================\n-                JUNIT COMPILATION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n-        <mkdir dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target name=\"-pre-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"${test.src.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" processorpath=\"${javac.test.processorpath}\" srcdir=\"${test.src.dir}\"\/>\n-        <copy todir=\"${build.test.classes.dir}\">\n-            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"\/>\n-    <target name=\"-pre-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes<\/fail>\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"\/>\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${test.src.dir}\" srcdir=\"${test.src.dir}\"\/>\n-        <copy todir=\"${build.test.classes.dir}\">\n-            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"\/>\n-        <\/copy>\n-    <\/target>\n-    <target name=\"-post-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"\/>\n-    <!--\n-                =======================\n-                JUNIT EXECUTION SECTION\n-                =======================\n-            -->\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n-        <j2seproject3:junit testincludes=\"**\/*Test.java\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"\/>\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"\/>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"\/>\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes<\/fail>\n-        <j2seproject3:junit excludes=\"\" includes=\"${test.includes}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.<\/fail>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"\/>\n-    <!--\n-                =======================\n-                JUNIT DEBUGGING SECTION\n-                =======================\n-            -->\n-    <target depends=\"init,compile-test\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class<\/fail>\n-        <property location=\"${build.test.results.dir}\/TEST-${test.class}.xml\" name=\"test.report.file\"\/>\n-        <delete file=\"${test.report.file}\"\/>\n-        <mkdir dir=\"${build.test.results.dir}\"\/>\n-        <j2seproject3:debug classname=\"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner\" classpath=\"${ant.home}\/lib\/ant.jar:${ant.home}\/lib\/ant-junit.jar:${debug.test.classpath}\">\n-            <customize>\n-                <syspropertyset>\n-                    <propertyref prefix=\"test-sys-prop.\"\/>\n-                    <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"\/>\n-                <\/syspropertyset>\n-                <arg value=\"${test.class}\"\/>\n-                <arg value=\"showoutput=true\"\/>\n-                <arg value=\"formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter\"\/>\n-                <arg value=\"formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${test.report.file}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"\/>\n-    <\/target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"\/>\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"\/>\n-    <\/target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"\/>\n-    <!--\n-                =========================\n-                APPLET EXECUTION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject1:java>\n-    <\/target>\n-    <!--\n-                =========================\n-                APPLET DEBUGGING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url<\/fail>\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"\/>\n-            <\/customize>\n-        <\/j2seproject3:debug>\n-    <\/target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"\/>\n-    <!--\n-                ===============\n-                CLEANUP SECTION\n-                ===============\n-            -->\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n-        <property location=\"${build.dir}\/built-clean.properties\" name=\"built-clean.properties\"\/>\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"\/>\n-    <\/target>\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n-        <echo level=\"warn\" message=\"Cycle detected: VMPerformance was already built\"\/>\n-    <\/target>\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"\/>\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"\/>\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"\/>\n-        <antcall target=\"-warn-already-built-clean\"\/>\n-        <propertyfile file=\"${built-clean.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"\/>\n-        <\/propertyfile>\n-    <\/target>\n-    <target depends=\"init\" name=\"-do-clean\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"\/>\n-    <\/target>\n-    <target name=\"-post-clean\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ..\/build.xml file. -->\n-    <\/target>\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"\/>\n-    <target name=\"-check-call-dep\">\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"\/>\n-        <condition property=\"should.call.dep\">\n-            <not>\n-                <isset property=\"already.built.${call.subproject}\"\/>\n-            <\/not>\n-        <\/condition>\n-    <\/target>\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n-            <propertyset>\n-                <propertyref prefix=\"transfer.\"\/>\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"\/>\n-            <\/propertyset>\n-        <\/ant>\n-    <\/target>\n-<\/project>\n","filename":"tests\/performance\/VMPerformance\/nbproject\/build-impl.xml","additions":0,"deletions":1053,"binary":false,"changes":1053,"status":"deleted"},{"patch":"@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=623ea4d8\n-build.xml.script.CRC32=60a548e2\n-build.xml.stylesheet.CRC32=28e38971@1.50.2.46\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject\/build-impl.xml.data.CRC32=623ea4d8\n-nbproject\/build-impl.xml.script.CRC32=a24f2091\n-nbproject\/build-impl.xml.stylesheet.CRC32=fcddb364@1.50.2.46\n","filename":"tests\/performance\/VMPerformance\/nbproject\/genfiles.properties","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}\/ap-source-output\n-application.title=VMPerformance\n-application.vendor=dblaukop\n-build.classes.dir=${build.dir}\/classes\n-build.classes.excludes=**\/*.java,**\/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}\/generated\n-build.generated.sources.dir=${build.dir}\/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}\/test\/classes\n-build.test.results.dir=${build.dir}\/test\/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}\/VMPerformance.jar\n-dist.javadoc.dir=${dist.dir}\/javadoc\n-endorsed.classpath=\n-excludes=\n-includes=**\n-jar.compress=false\n-javac.classpath=\n-# Space-separated list of extra javac options\n-javac.compilerargs=\n-javac.deprecation=false\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=1.6\n-javac.target=1.6\n-javac.test.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n-javadoc.private=false\n-javadoc.splitindex=true\n-javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-main.class=VMPerformance\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}\/META-INF\n-mkdist.disabled=false\n-platform.active=default_platform\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project\n-# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value\n-# or test-sys-prop.name=value to set system properties for unit tests):\n-run.jvmargs=\n-run.test.classpath=\\\n-    ${javac.test.classpath}:\\\n-    ${build.test.classes.dir}\n-source.encoding=UTF-8\n-src.dir=src\n-test.src.dir=test\n","filename":"tests\/performance\/VMPerformance\/nbproject\/project.properties","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,15 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.java.j2seproject<\/type>\n-    <configuration>\n-        <data xmlns=\"http:\/\/www.netbeans.org\/ns\/j2se-project\/3\">\n-            <name>VMPerformance<\/name>\n-            <source-roots>\n-                <root id=\"src.dir\"\/>\n-            <\/source-roots>\n-            <test-roots>\n-                <root id=\"test.src.dir\"\/>\n-            <\/test-roots>\n-        <\/data>\n-    <\/configuration>\n-<\/project>\n","filename":"tests\/performance\/VMPerformance\/nbproject\/project.xml","additions":0,"deletions":15,"binary":false,"changes":15,"status":"deleted"},{"patch":"@@ -1,48 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n- #include \"VMPerformance.h\"\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_fn0(JNIEnv *env, jclass clz) {\n-}\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_fn4(JNIEnv *env, jclass clz,\n-        jobject o1, jobject o2, jobject o3, jobject o4) {\n-}\n-\n-static jmethodID methodF;\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_jniInitIDs(\n-        JNIEnv *env, jclass clz) {\n-    methodF = (*env)->GetStaticMethodID(env, clz, \"f\", \"()V\");\n-}\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_jniTestUpCallNoParameters(\n-        JNIEnv *env, jclass clz, jint n) {\n-    int i;\n-    for (i = 0; i < n; i++) {\n-        (*env)->CallStaticVoidMethod(env, clz, methodF);\n-    }\n-}\n","filename":"tests\/performance\/VMPerformance\/src\/VMPerformance.c","additions":0,"deletions":48,"binary":false,"changes":48,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <jni.h>\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_fn0\n-  (JNIEnv *, jclass);\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_fn4\n-  (JNIEnv *, jclass, jobject, jobject, jobject, jobject);\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_jniInitIDs\n-  (JNIEnv *, jclass);\n-\n-JNIEXPORT void JNICALL Java_VMPerformance_jniTestUpCallNoParameters\n-  (JNIEnv *, jclass, jint);\n-\n-#ifdef __cplusplus\n-}\n-#endif\n","filename":"tests\/performance\/VMPerformance\/src\/VMPerformance.h","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,945 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.io.File;\n-import java.lang.management.GarbageCollectorMXBean;\n-import java.lang.management.ManagementFactory;\n-import java.lang.ref.PhantomReference;\n-import java.lang.ref.Reference;\n-import java.lang.ref.ReferenceQueue;\n-import java.lang.ref.SoftReference;\n-import java.lang.ref.WeakReference;\n-import java.lang.reflect.Method;\n-import java.nio.ByteBuffer;\n-import java.nio.FloatBuffer;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Vector;\n-\n-public class VMPerformance {\n-\n-    private static long TEST_TIME = Long.getLong(\"testTime\", 1000l);\n-    private static long TIMEOUT = Long.getLong(\"timeout\", TEST_TIME * 30);\n-    private static boolean VERBOSE = Boolean.getBoolean(\"verbose\");\n-\n-    private static void showProperty(String key) {\n-        System.out.println(key + \": \" + System.getProperty(key));\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-        showProperty(\"java.version\");\n-        showProperty(\"os.arch\");\n-        try {\n-            String userDir = System.getProperty(\"user.dir\") + File.separator;\n-            String libPrefix = \"lib\";\n-            String libSuffix = \".so\";\n-            String libFileName = libPrefix\n-                    + \"VMPerformance-\" + System.getProperty(\"os.arch\")\n-                    + libSuffix;\n-            try {\n-                System.load(userDir + \"build\" + File.separator + libFileName);\n-            } catch (UnsatisfiedLinkError e1) {\n-                try {\n-                    System.load(userDir + \"dist\" + File.separator + libFileName);\n-                } catch (UnsatisfiedLinkError e2) {\n-                    System.loadLibrary(\"VMPerformance\");\n-                }\n-            }\n-            jniInitIDs();\n-        } catch (UnsatisfiedLinkError e3) {\n-            e3.printStackTrace();\n-            System.err.println(\"VMPerformance native library not available\");\n-        }\n-        Thread.sleep(500);\n-        for (Test t : tests) {\n-            t.run();\n-        }\n-        System.exit(0);\n-    }\n-\n-    static void reportTime(\n-            String description,\n-            long startTime,\n-            long endTime,\n-            long delta,\n-            int iterations) {\n-        reportTime(description, endTime - startTime - delta, iterations);\n-    }\n-\n-    static void reportTime(\n-            String description,\n-            long time,\n-            int iterations) {\n-        long ns = time \/ iterations;\n-        String t = String.valueOf(ns);\n-        StringBuffer sb = new StringBuffer(description);\n-        while (sb.length() < 70 - t.length()) {\n-            sb.append(\".\");\n-        }\n-        sb.append(t);\n-        if (t.length() == 1) {\n-            sb.append(\".\");\n-            long ps = ((time * 1000l) \/ iterations) - (ns * 1000l);\n-            String t2 = String.valueOf(ps);\n-            if (t.equals(\"0\")) {\n-                switch (t2.length()) {\n-                    case 3:\n-                        sb.append(t2.substring(0, 2));\n-                        break;\n-                    case 2:\n-                        sb.append(\"0\");\n-                        sb.append(t2.substring(0, 2));\n-                        break;\n-                    default:\n-                        sb.append(\"00\");\n-                        sb.append(t2);\n-                }\n-            } else {\n-                sb.append(t2.substring(0, 1));\n-            }\n-        }\n-        sb.append(\"ns\");\n-        if (VERBOSE) {\n-            sb.append(\" (n=\" + iterations + \", t=\" + time + \"ns)\");\n-        }\n-        System.out.println(sb);\n-    }\n-\n-    static Test[] tests = {\n-        new StaticMethodCall(),\n-        new InstanceMethodCall(),\n-        new FinalInstanceMethodCall(),\n-        new InterfaceWithSingleImplementorMethodCall(),\n-        new InterfaceWithMultipleImplementorsMethodCall(),\n-        new JNICallNoParameters(),\n-        new JNICallFourParameters(),\n-        new JNIUpCallNoParameters(),\n-        new IntrinsicMethodCall(),\n-        new ClassForName(),\n-        new ReflectedMethodCallLookup(),\n-        new ReflectedInstanceMethodCall(),\n-        new GetClass(),\n-        new InstanceOfResultTrue(),\n-        new InstanceOfResultFalse(),\n-        new GrabReleaseLock(),\n-        new GrabNotifyReleaseLock(),\n-        new CreateObjectWithNoFinalizer(),\n-        new CreateObjectWithNonEmptyFinalizer(),\n-        new CreateAndCollectObjectWithNoFinalizer(),\n-        new CreateDisposeAndCollectObjectWithNoFinalizer(),\n-        new CreateAndCollectObjectWithEmptyFinalizer(),\n-        new CreateAndCollectWithNonEmptyFinalizer(),\n-        new CreateWeakReference(),\n-        new CreateSoftReference(),\n-        new CreateAndCollectWeakReference(),\n-        new CreateAndCollectWeakReferenceWithQueue(),\n-        new CreateCatchAndCollectNullPointerException(),\n-        new TrapCatchAndCollectNullPointerException(),\n-        new ArrayLookupInteger(),\n-        new ArrayLookupObject(),\n-        new ArrayAssignInteger(),\n-        new ArrayAssignByte(),\n-        new VectorLookup(),\n-        new ArrayListLookup(),\n-        new ThreadLocalLookup(),\n-        new DirectByteBufferPut(),\n-        new DirectFloatBufferPut(),\n-        new StaticFieldRead(),\n-        new LocalVariableRead(),\n-    };\n-\n-    static abstract class Test {\n-        static List<GarbageCollectorMXBean> gcBeans =\n-                ManagementFactory.getGarbageCollectorMXBeans();\n-        void control(int iterations) {\n-            for (int i = 0; i < iterations; i++) {\n-            }\n-        }\n-        abstract void test(int iterations);\n-        abstract String getName();\n-        void run() {\n-            for (int i = 0; i < 100; i++) {\n-                try {\n-                    runTest(1);\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                    return;\n-                } catch (UnsatisfiedLinkError ule) {\n-                    return;\n-                }\n-            }\n-            int iterations = 1;\n-            long testTime = 0;\n-            long startTime = System.nanoTime();\n-            long elapsedTime = 0l;\n-            while ((testTime < TEST_TIME * 1000000l || iterations < 10000)\n-                    && iterations <= 0x20000000\n-                    && elapsedTime < TIMEOUT * 1000000l) {\n-                iterations *= 2;\n-                System.gc();\n-                System.runFinalization();\n-                long gcBaseTime = 0l;\n-                if (!includeGCTime()) {\n-                    gcBaseTime = gcTime();\n-                }\n-                testTime = runTest(iterations);\n-                if (!includeGCTime()) {\n-                    long gcTime = gcTime() - gcBaseTime;\n-                    testTime -= gcTime;\n-                }\n-                elapsedTime = System.nanoTime() - startTime;\n-            }\n-            reportTime(getName(), testTime, iterations);\n-        }\n-        long runTest(int iterations) {\n-            long startTime = System.nanoTime();\n-            test(iterations);\n-            long endTime = System.nanoTime();\n-            control(iterations);\n-            long controlTime = System.nanoTime() - endTime;\n-            long testTime = endTime - startTime;\n-            return testTime - controlTime;\n-        }\n-        boolean includeGCTime() {\n-            return true;\n-        }\n-        static long gcTime() {\n-            long gcTime = 0l;\n-            for (GarbageCollectorMXBean g : gcBeans) {\n-                gcTime += g.getCollectionTime() * 1000000l;\n-            }\n-            return gcTime;\n-        }\n-\n-    }\n-\n-    static abstract class ObjectCreationTest extends Test {\n-        @Override void test(int n) {\n-            Object[] refs = new Object[1024];\n-            for (int i = 0; i < n >> 10; i++) {\n-                fillArray(refs);\n-            }\n-            refs = null;\n-            System.gc();\n-            System.runFinalization();\n-        }\n-        @Override void control(int n) {\n-            Object[] refs = new Object[1024];\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < refs.length; j++) {\n-                    refs[j] = null;\n-                }\n-            }\n-            refs = null;\n-        }\n-        abstract void fillArray(Object[] refs);\n-    }\n-\n-    static class StaticMethodCall extends Test {\n-        static int counter;\n-\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                StaticMethodCall.f();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Static method call\";\n-\n-        }\n-        static void f() {\n-            counter ++;\n-        }\n-    }\n-\n-    static class InstanceMethodCall extends Test {\n-        int counter;\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                this.f();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Instance method call\";\n-\n-        }\n-        void f() {\n-            counter ++;\n-        }\n-    }\n-\n-    static class FinalInstanceMethodCall extends Test {\n-        int counter;\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                this.f();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Final instance method call\";\n-\n-        }\n-        final void f() {\n-            counter ++;\n-        }\n-    }\n-\n-    static class InterfaceWithSingleImplementorMethodCall extends Test {\n-        InterfaceWithSingleImplementor iwsi = new Implementor1();\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                iwsi.f();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Interface method call (single implementor)\";\n-        }\n-    }\n-\n-    static class InterfaceWithMultipleImplementorsMethodCall extends Test {\n-        InterfaceWithMultipleImplementors iwmiA = new Implementor2a();\n-        InterfaceWithMultipleImplementors iwmiB = new Implementor2b();\n-        InterfaceWithMultipleImplementors iwmi = new Implementor2a();\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                iwmi.f();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Interface method call (two implementors, one instantiated)\";\n-\n-        }\n-    }\n-\n-    static class JNICallNoParameters extends Test {\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                fn0();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"JNI method call with no parameters\";\n-        }\n-    }\n-\n-    static class JNICallFourParameters extends Test {\n-        Object o1 = \"a\";\n-        Object o2 = \"b\";\n-        Object o3 = \"c\";\n-        Object o4 = \"d\";\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                fn4(o1, o2, o3, o4);\n-            }\n-        }\n-        @Override String getName() {\n-            return \"JNI method call with 4 parameters\";\n-        }\n-    }\n-\n-    static class JNIUpCallNoParameters extends Test {\n-        @Override void test(int n) {\n-            jniTestUpCallNoParameters(n);\n-        }\n-        @Override String getName() {\n-            return \"JNI up call with no parameters\";\n-        }\n-    }\n-\n-    static native void jniInitIDs();\n-    static native void jniTestUpCallNoParameters(int n);\n-\n-    static class IntrinsicMethodCall extends Test {\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                Float.floatToRawIntBits(0f);\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Intrinsic method call\";\n-        }\n-    }\n-\n-    static class ClassForName extends Test {\n-        @Override void test(int n) {\n-            try {\n-                for (int i = 0; i < n; i++) {\n-                    Class.forName(\"java.lang.String\");\n-                }\n-            } catch (Exception e) { }\n-        }\n-        @Override String getName() {\n-            return \"Class.forName() for system class\";\n-        }\n-    }\n-\n-    static class ReflectedMethodCallLookup extends Test {\n-        Class stringClass = String.class;\n-        Class[] signature = { };\n-        @Override void test(int n) {\n-            try {\n-                for (int i = 0; i < n; i++) {\n-                    stringClass.getMethod(\"length\", signature);\n-                }\n-            } catch (Exception e) { }\n-        }\n-        @Override String getName() {\n-            return \"Reflected method call lookup\";\n-        }\n-    }\n-\n-    static class ReflectedInstanceMethodCall extends Test {\n-        Class stringClass = String.class;\n-        Object s = \"\";\n-        Class[] signature = { };\n-        Object[] args = { };\n-        Method mLength;\n-        {\n-            try {\n-                mLength = stringClass.getMethod(\"length\", signature);\n-            } catch (Exception e) { }\n-        }\n-        @Override void test(int n) {\n-            try {\n-                for (int i = 0; i < n; i++) {\n-                    mLength.invoke(s, args);\n-                }\n-            } catch (Exception e) { }\n-        }\n-        @Override String getName() {\n-            return \"Reflected instance method call\";\n-        }\n-    }\n-\n-    static class GetClass extends Test {\n-        Object s = \"\";\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                s.getClass();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"getClass()\";\n-        }\n-    }\n-\n-    static class InstanceOfResultTrue extends Test {\n-        Object s = \"\";\n-        @Override void test(int n) {\n-            for (int i = 0; i < n && s instanceof Object; i++) { }\n-        }\n-        @Override String getName() {\n-            return \"instanceof (where the result is true)\";\n-        }\n-    }\n-\n-    static class InstanceOfResultFalse extends Test {\n-        Object s = \"\";\n-        @Override void test(int n) {\n-            for (int i = 0; i < n && !(s instanceof ThreadLocal); i++) { }\n-        }\n-        @Override String getName() {\n-            return \"instanceof (where the result is false)\";\n-        }\n-    }\n-\n-    static class GrabReleaseLock extends Test {\n-        Object lock = new Object();\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                synchronized (lock) { }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Grab and release uncontested lock\";\n-        }\n-    }\n-\n-    static class GrabNotifyReleaseLock extends Test {\n-        Object lock = new Object();\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                synchronized (lock) {\n-                    lock.notify();\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Grab, notify and release uncontested lock\";\n-        }\n-    }\n-\n-    static class CreateObjectWithNoFinalizer extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new ObjectWithNoFinalizer();\n-            }\n-        }\n-        @Override boolean includeGCTime() {\n-            return false;\n-        }\n-        @Override String getName() {\n-            return \"Create object with no finalizer\";\n-        }\n-    }\n-\n-    static class CreateObjectWithNonEmptyFinalizer extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new ObjectWithNonEmptyFinalizer();\n-            }\n-        }\n-        @Override boolean includeGCTime() {\n-            return false;\n-        }\n-        @Override String getName() {\n-            return \"Create object with non-empty finalizer\";\n-        }\n-    }\n-\n-    static class CreateAndCollectObjectWithNoFinalizer extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new ObjectWithNoFinalizer();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create and collect object with no finalizer\";\n-        }\n-    }\n-\n-    static class CreateDisposeAndCollectObjectWithNoFinalizer\n-            extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                ObjectWithNoFinalizer o = new ObjectWithNoFinalizer();\n-                refs[i] = o;\n-                o.dispose();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create, dispose and collect object with disposer and no finalizer\";\n-        }\n-    }\n-\n-    static class CreateAndCollectObjectWithEmptyFinalizer\n-            extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new ObjectWithEmptyFinalizer();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create and collect object with empty finalizer\";\n-        }\n-    }\n-\n-    static class CreateAndCollectWithNonEmptyFinalizer\n-            extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new ObjectWithNonEmptyFinalizer();\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create and collect object with non-empty finalizer\";\n-        }\n-    }\n-\n-    static class CreateWeakReference extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new WeakReference(this);\n-            }\n-        }\n-        @Override boolean includeGCTime() {\n-            return false;\n-        }\n-        @Override String getName() {\n-            return \"Create weak reference\";\n-        }\n-    }\n-\n-    static class CreateSoftReference extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new SoftReference(this);\n-            }\n-        }\n-        @Override boolean includeGCTime() {\n-            return false;\n-        }\n-        @Override String getName() {\n-            return \"Create soft reference\";\n-        }\n-    }\n-\n-    static class CreateAndCollectWeakReference\n-            extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new WeakReference(this);\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create and collect weak reference\";\n-        }\n-    }\n-\n-    static class CreateAndCollectWeakReferenceWithQueue extends ObjectCreationTest {\n-        final ReferenceQueue queue = new ReferenceQueue();\n-        Thread queueThread = new Thread(() -> {\n-            try {\n-                while (true) {\n-                    Reference r = queue.remove();\n-                }\n-            } catch (InterruptedException e) {\n-                return;\n-            }\n-        });\n-        {\n-            queueThread.start();\n-        }\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new WeakReference(this, queue);\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create and collect weak reference with queue\";\n-        }\n-    }\n-\n-    static class CreateAndCollectPhantomReferenceWithQueue\n-            extends ObjectCreationTest {\n-        final ReferenceQueue queue = new ReferenceQueue();\n-        Thread queueThread = new Thread(() -> {\n-            try {\n-                while (true) {\n-                    Reference r = queue.remove();\n-                }\n-            } catch (InterruptedException e) {\n-                return;\n-            }\n-        });\n-        {\n-            queueThread.start();\n-        }\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                refs[i] = new PhantomReference(this, queue);\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create and collect phantom reference with queue\";\n-        }\n-    }\n-\n-    static class CreateCatchAndCollectNullPointerException\n-            extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            for (int i = 0; i < refs.length; i++) {\n-                try {\n-                    throw new NullPointerException();\n-                } catch (Exception e) {\n-                    refs[i] = e;\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Create, catch and collect a NullPointerException\";\n-        }\n-    }\n-\n-    static class TrapCatchAndCollectNullPointerException\n-            extends ObjectCreationTest {\n-        @Override void fillArray(Object[] refs) {\n-            Object o = null;\n-            for (int i = 0; i < refs.length; i++) {\n-                try {\n-                    o.toString();\n-                } catch (Exception e) {\n-                    refs[i] = e;\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Trap, catch and collect a NullPointerException\";\n-        }\n-    }\n-\n-    static class ArrayLookupInteger extends Test {\n-        @Override void test(int n) {\n-            int[] xs = new int[1024];\n-            int x = 0;\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < 1024; j++) {\n-                    x += xs[j];\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Array lookup in an integer array\";\n-        }\n-    }\n-\n-    static class ArrayAssignInteger extends Test {\n-        @Override void test(int n) {\n-            int[] xs = new int[1024];\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < 1024; j++) {\n-                    xs[j] = j;\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Array assignation in an integer array\";\n-        }\n-    }\n-\n-    static class ArrayAssignByte extends Test {\n-        @Override void test(int n) {\n-            byte[] xs = new byte[1024];\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < 1024; j++) {\n-                    xs[j] = (byte) j;\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Array assignation in a byte array\";\n-        }\n-    }\n-\n-    static class ArrayLookupObject extends Test {\n-        @Override void test(int n) {\n-            Object[] a = new Object[1024];\n-            int x = 0;\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < 1024; j++) {\n-                    if (a[j] != null) {\n-                        x++;\n-                    }\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Array lookup in an object array\";\n-        }\n-    }\n-\n-    static class VectorLookup extends Test {\n-        @Override void test(int n) {\n-            Vector v = new Vector();\n-            for (int i = 0; i < 1024; i++) {\n-                v.addElement(v);\n-            }\n-            int x = 0;\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < 1024; j++) {\n-                    if (v.get(j) == null) {\n-                        x++;\n-                    }\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Vector.get()\";\n-        }\n-    }\n-\n-    static class ArrayListLookup extends Test {\n-        @Override void test(int n) {\n-            ArrayList a = new ArrayList();\n-            for (int i = 0; i < 1024; i++) {\n-                a.add(a);\n-            }\n-            int x = 0;\n-            for (int i = 0; i < n >> 10; i++) {\n-                for (int j = 0; j < 1024; j++) {\n-                    if (a.get(j) == null) {\n-                        x++;\n-                    }\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"ArrayList.get()\";\n-        }\n-    }\n-\n-    static class ThreadLocalLookup extends Test {\n-        @Override void test(int n) {\n-            ThreadLocal threadLocal = new ThreadLocal();\n-            threadLocal.set(new int[4]);\n-            int x = 0;\n-            for (int i = 0; i < n; i++) {\n-                int[] a = (int[]) threadLocal.get();\n-                if (a == null) {\n-                    x++;\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"ThreadLocal.get()\";\n-        }\n-    }\n-\n-    static class StaticFieldRead extends Test {\n-        static final int TEST_FIELD = 30;\n-        @Override void test(int n) {\n-            for (int i = 0; i < n; i++) {\n-                int x = TEST_FIELD;\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Read static int field\";\n-        }\n-    }\n-\n-    static class LocalVariableRead extends Test {\n-        static final int TEST_FIELD = 30;\n-        @Override void test(int n) {\n-            int x0 = 30;\n-            for (int i = 0; i < n; i++) {\n-                int x = x0;\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Read local int variable\";\n-        }\n-    }\n-\n-    static class DirectByteBufferPut extends Test {\n-        @Override void test(int n) {\n-            ByteBuffer bb = ByteBuffer.allocateDirect(1 << 20);\n-            int m = n >> 20;\n-            int size = bb.limit();\n-            byte b = (byte) 0;\n-            for (int i = 0; i < m; i++) {\n-                bb.rewind();\n-                for (int j = 0; j < size; j++) {\n-                    bb.put(b);\n-                }\n-            }\n-        }\n-        @Override void control(int n) {\n-            ByteBuffer bb = ByteBuffer.allocateDirect(1 << 20);\n-            int m = n >> 20;\n-            int size = bb.limit();\n-            byte b = (byte) 0;\n-            for (int i = 0; i < m; i++) {\n-                bb.rewind();\n-                for (int j = 0; j < size; j++) {\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Direct ByteBuffer.put(byte)\";\n-        }\n-    }\n-\n-    static class DirectFloatBufferPut extends Test {\n-        @Override void test(int n) {\n-            ByteBuffer bb = ByteBuffer.allocateDirect(4 << 20);\n-            FloatBuffer fb = bb.asFloatBuffer();\n-            int m = n >> 20;\n-            int size = fb.limit();\n-            float f = 0f;\n-            for (int i = 0; i < m; i++) {\n-                fb.rewind();\n-                for (int j = 0; j < size; j++) {\n-                    fb.put(f);\n-                }\n-            }\n-        }\n-        @Override void control(int n) {\n-            ByteBuffer bb = ByteBuffer.allocateDirect(4 << 20);\n-            FloatBuffer fb = bb.asFloatBuffer();\n-            int m = n >> 20;\n-            int size = bb.limit();\n-            byte b = (byte) 0;\n-            for (int i = 0; i < m; i++) {\n-                fb.rewind();\n-                for (int j = 0; j < size; j++) {\n-                }\n-            }\n-        }\n-        @Override String getName() {\n-            return \"Direct FloatBuffer.put(float)\";\n-        }\n-    }\n-\n-    static native void fn0();\n-    static native void fn4(Object o1, Object o2, Object o3, Object o4);\n-\n-    static void f() { }\n-\n-    static class ObjectWithNoFinalizer {\n-        public final void dispose() {\n-        }\n-    }\n-\n-    static class ObjectWithEmptyFinalizer {\n-        protected final void finalize() { }\n-    }\n-\n-    static class ObjectWithNonEmptyFinalizer {\n-        int i;\n-        protected final void finalize() {\n-            i = 1;\n-        }\n-    }\n-\n-    static interface InterfaceWithSingleImplementor {\n-        public void f();\n-    }\n-\n-    static class Implementor1 implements InterfaceWithSingleImplementor {\n-        int i;\n-        public void f() {\n-            i++;\n-        }\n-    }\n-\n-    static interface InterfaceWithMultipleImplementors {\n-        public void f();\n-    }\n-\n-    static class Implementor2a implements InterfaceWithMultipleImplementors {\n-        int i;\n-        public void f() {\n-            i++;\n-        }\n-    }\n-\n-        static class Implementor2b implements InterfaceWithMultipleImplementors {\n-        int i;\n-        public void f() {\n-            i--;\n-        }\n-    }\n-\n-}\n","filename":"tests\/performance\/VMPerformance\/src\/VMPerformance.java","additions":0,"deletions":945,"binary":false,"changes":945,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.javafx.logging;\n-\n-public class GLTrace {\n-\n-    \/* This private variable is set to true by the JVMTI agent when present *\/\n-    private static boolean init = false;\n-\n-    public static void putMark(String arg) { if ( init ) _putMark(arg); }\n-\n-    private static native void _putMark(String arg);\n-}\n","filename":"tools\/gltrace\/GLTrace.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,10 +0,0 @@\n-\n-UNAME_S         := $(shell uname -s)\n-\n-ifeq ($(UNAME_S),Darwin)\n-include Makefile.macosx\n-endif\n-\n-ifeq ($(UNAME_S),Linux)\n-include Makefile.linux\n-endif\n","filename":"tools\/gltrace\/Makefile","additions":0,"deletions":10,"binary":false,"changes":10,"status":"deleted"},{"patch":"@@ -1,75 +0,0 @@\n-CC      = gcc -O2 \n-JDK     = \/opt\/java\n-\n-PLATFORM := $(shell if [ -x \/opt\/vc ]; then echo RASPBERRY; else echo BEAGLE; fi)\n-\n-ifeq ($(PLATFORM),RASPBERRY)\n-CFLAGS += -DRASPBERRYPI=1 -I\/opt\/vc\/include -I\/opt\/vc\/include\/interface\/vcos\/pthreads -L\/opt\/vc\/lib\n-DEST = armv6hf-vfp\n-endif\n-\n-ifeq ($(PLATFORM),BEAGLE)\n-CFLAGS += -DBEAGLEBOARD\n-DEST = armv6-vfp\n-endif\n-\n-TARGETS = $(DEST)\/gltrace.so $(DEST)\/gltrace\n-\n-default: all\n-\n-all: $(DEST) $(TARGETS)\n-\n-$(DEST):\n-\tif [ ! -x $(DEST) ]; then mkdir -m 755 -p $(DEST); fi\n-\n-#\n-#    gltrace.so\n-#\n-\n-HDRS    = trace.h iolib.h map.h os.h\n-DYNLIB_SRCS = trace-linux.c agent.c iolib.c os-linux.c egl.c gles.c\n-\n-$(DEST)\/gltrace.so: $(HDRS) $(DYNLIB_SRCS)\n-\t$(CC) $(CFLAGS) -shared -fPIC \\\n-\t-I$(JDK)\/include -I$(JDK)\/include\/linux \\\n-\t-ldl -lEGL -lGLESv2 \\\n-\t-o $@ $(DYNLIB_SRCS) \n-\n-#\n-#    gltrace\n-#\n-\n-GLTRACE_SRCS = retrace.c iolib.c enums.c map.c os-linux.c\n-\n-$(DEST)\/gltrace: $(HDRS) $(GLTRACE_SRCS)\n-\t$(CC) $(CFLAGS) -o $@ $(GLTRACE_SRCS) -lEGL -lGLESv2 -lrt -lpng\n-\n-#\n-#    examples\n-#\n-\n-JAVA    = $(JDK)\/bin\/java\n-JVMOPTS =\n-JAVAFX  = \/opt\/javafx\/lib\/jfxrt.jar\n-JFXOPTS =\n-\n-RUNJFX  = $(JAVA) $(JVMOPTS) $(JFXOPTS)\n-\n-TEST    =\n-ARGS    =\n-\n-trace:\n-\texport LD_PRELOAD=$(DEST)\/gltrace.so; \\\n-\t$(RUNJFX) -cp \"$(JAVAFX):$(JAR)\" $(TEST) $(ARGS)\n-\n-replay:\n-\t$(DEST)\/gltrace -replay\n-\n-dump:\n-\t$(DEST)\/gltrace -print\n-\n-interactive:\n-\t$(DEST)\/gltrace\n-\n-clean:\n-\trm -rf $(TARGETS)\n","filename":"tools\/gltrace\/Makefile.linux","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-CC\t = gcc\n-JDK     = \/System\/Library\/Frameworks\/JavaVM.framework\/Versions\/Current\n-DEST\t= macosx-universal\n-CFLAGS\t= -O2 -DMACOSX=1\n-TARGETS = $(DEST)\/gltrace.dylib $(DEST)\/gltrace\n-\n-default: all\n-\n-all: $(DEST) $(TARGETS)\n-\n-$(DEST):\n-\tif [ ! -x $(DEST) ]; then mkdir -m 755 -p $(DEST); fi\n-\n-#\n-#    gltrace.dylib\n-#\n-\n-HDRS    = trace.h iolib.h map.h os.h\n-DYNLIB_SRCS = trace-macosx.c agent.c iolib.c os-macosx.c gles.c\n-\n-$(DEST)\/gltrace.dylib: $(HDRS) $(DYNLIB_SRCS)\n-\t$(CC) $(CFLAGS) -I$(JDK)\/Headers \\\n-\t-dynamiclib -framework OpenGL -ldl -lpthread -lobjc \\\n-\t-o $@ $(DYNLIB_SRCS) \n-\n-#\n-#    gltrace\n-#\n-\n-GLTRACE_SRCS = retrace.c iolib.c enums.c map.c os-macosx.c\n-\n-$(DEST)\/gltrace: $(HDRS) $(GLTRACE_SRCS)\n-\t$(CC) $(CFLAGS) -o $@ $(GLTRACE_SRCS) -framework OpenGL -framework libpng\n-\n-\n-\n","filename":"tools\/gltrace\/Makefile.macosx","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,180 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#include <jvmti.h>\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-\n-\/*\n- *    Init\/fini\n- *\/\n-\n-static char tools_envvar[1024];\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    char *lib = getenv(OS_ENV_PRELOAD);\n-    if (lib == NULL) return;\n-    strncpy(tools_envvar, \"JAVA_TOOL_OPTIONS=-agentpath:\", sizeof(tools_envvar));\n-    strncat(tools_envvar, lib, sizeof(tools_envvar));\n-    putenv(tools_envvar);\n-}\n-\n-static void fini() __attribute__ ((destructor));\n-static void fini()\n-{\n-}\n-\n-static JavaVM   *jvm;\n-static jvmtiEnv *jvmti;\n-static jclass classThread;\n-static jmethodID mthdDumpStack;\n-\n-static void JNICALL jvmti_VMInit(jvmtiEnv*, JNIEnv*, jthread);\n-static void JNICALL jvmti_VMStart(jvmtiEnv*, JNIEnv*);\n-\n-static jvmtiEventCallbacks      callbacks =\n-{\n-          jvmti_VMInit,                 \/\/ 50   jvmtiEventVMInit;\n-          NULL,                         \/\/ 51   jvmtiEventVMDeath;\n-          NULL,                         \/\/ 52   jvmtiEventThreadStart;\n-          NULL,                         \/\/ 53   jvmtiEventThreadEnd;\n-          NULL,                         \/\/ 54   jvmtiEventClassFileLoadHook;\n-          NULL,                         \/\/ 55   jvmtiEventClassLoad;\n-          NULL,                         \/\/ 56   jvmtiEventClassPrepare;\n-          jvmti_VMStart,                \/\/ 57   jvmtiEventVMStart;\n-          NULL,                         \/\/ 58   jvmtiEventException;\n-          NULL,                         \/\/ 59   jvmtiEventExceptionCatch;\n-          NULL,                         \/\/ 60   jvmtiEventSingleStep;\n-          NULL,                         \/\/ 61   jvmtiEventFramePop;\n-          NULL,                         \/\/ 62   jvmtiEventBreakpoint;\n-          NULL,                         \/\/ 63   jvmtiEventFieldAccess;\n-          NULL,                         \/\/ 64   jvmtiEventFieldModification;\n-          NULL,                         \/\/ 65   jvmtiEventMethodEntry;\n-          NULL,                         \/\/ 66   jvmtiEventMethodExit;\n-          NULL,                         \/\/ 67   jvmtiEventNativeMethodBind;\n-          NULL,                         \/\/ 68   jvmtiEventCompiledMethodLoad;\n-          NULL,                         \/\/ 69   jvmtiEventCompiledMethodUnload;\n-          NULL,                         \/\/ 70   jvmtiEventDynamicCodeGenerated;\n-          NULL,                         \/\/ 71   jvmtiEventDataDumpRequest;\n-          NULL,                         \/\/ 72   jvmtiEventDataResetRequest;\n-          NULL,                         \/\/ 73   jvmtiEventMonitorWait;\n-          NULL,                         \/\/ 74   jvmtiEventMonitorWaited;\n-          NULL,                         \/\/ 75   jvmtiEventMonitorContendedEnter;\n-          NULL,                         \/\/ 76   jvmtiEventMonitorContendedEntered;\n-          NULL,                         \/\/ 77   jvmtiEventMonitorContendedExit;\n-          NULL,                         \/\/ 78   jvmtiEventReserved;\n-          NULL,                         \/\/ 79   jvmtiEventReserved;\n-          NULL,                         \/\/ 80   jvmtiEventReserved;\n-          NULL,                         \/\/ 81   jvmtiEventGarbageCollectionStart;\n-          NULL,                         \/\/ 82   jvmtiEventGarbageCollectionFinish;\n-          NULL,                         \/\/ 83   jvmtiEventObjectFree;\n-          NULL                          \/\/ 84   jvmtiEventVMObjectAlloc;\n-};\n-\n-JNIEXPORT jint JNICALL\n-Agent_OnLoad(JavaVM *_jvm, char *options, void *reserved)\n-{\n-    jvmtiError err;\n-\n-    jvm = _jvm;\n-    if ((*jvm)->GetEnv(jvm, (void**)&jvmti, JVMTI_VERSION_1_1) != JNI_OK || jvmti == NULL) {\n-        return JNI_ERR;\n-    }\n-    if ((*jvmti)->SetEventCallbacks(jvmti, &callbacks, sizeof(callbacks)) != JVMTI_ERROR_NONE) {\n-        return JNI_ERR;\n-    }\n-\n-    err = (*jvmti)->SetEventNotificationMode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n-    err = (*jvmti)->SetEventNotificationMode(jvmti, JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n-\n-    return err;\n-}\n-\n-static void JNICALL\n-jvmti_VMStart( jvmtiEnv *jvmti, JNIEnv *jni )\n-{\n-}\n-\n-static void\n-gltrace_putMark(JNIEnv *jni, jclass klass, jstring jstr)\n-{\n-    uint64_t bgn = gethrtime();\n-    const char *str = (*jni)->GetStringUTFChars(jni, jstr, 0);\n-    putCmd(OPC_MARK);\n-    putString(str);\n-    (*jni)->ReleaseStringUTFChars(jni, jstr, str);\n-    uint64_t end = gethrtime();\n-    putTime(bgn, end);\n-}\n-\n-static const JNINativeMethod class_methods[] = {\n-    { \"_putMark\",  \"(Ljava\/lang\/String;)V\", &gltrace_putMark }\n-};\n-\n-static void JNICALL\n-jvmti_VMInit(jvmtiEnv *jvmti, JNIEnv *jni, jthread jthr)\n-{\n-    classThread = (*jni)->FindClass(jni, \"java\/lang\/Thread\");\n-    mthdDumpStack = (*jni)->GetStaticMethodID(jni, classThread, \"dumpStack\", \"()V\");\n-\n-    \/* GLTrace *\/\n-    jclass classGLTrace = (*jni)->FindClass(jni, \"com\/sun\/javafx\/logging\/GLTrace\");\n-    if ((*jni)->ExceptionOccurred(jni)) {\n-        (*jni)->ExceptionClear(jni);\n-    }\n-    if (classGLTrace == NULL) {\n-        return;\n-    }\n-    if ((*jni)->RegisterNatives(jni, classGLTrace, class_methods, (jint)1 ) != 0) {\n-\/\/        fprintf(stderr, \"ERROR: GLTrace methods not registered\\n\" );\n-        return;\n-    }\n-\n-    \/* Set GLTrace.init to true *\/\n-    jfieldID initField = (*jni)->GetStaticFieldID(jni, classGLTrace, \"init\", \"Z\" );\n-    (*jni)->SetStaticBooleanField(jni, classGLTrace, initField, JNI_TRUE );\n-    if ((*jni)->GetStaticBooleanField(jni, classGLTrace, initField ) != JNI_TRUE) {\n-\/\/        fprintf(stderr, \"ERROR: GLTrace.init NOT set\\n\");\n-        return;\n-    }\n-}\n-\n-static void\n-dump_java_stack()\n-{\n-    if (jvm == NULL) return;\n-    JNIEnv *jni = NULL;\n-    if ((*jvm)->GetEnv(jvm, (void**)&jni, JNI_VERSION_1_2) == 0 && jni != NULL) {\n-        (*jni)->CallStaticVoidMethod(jni, classThread, mthdDumpStack);\n-    }\n-}\n","filename":"tools\/gltrace\/agent.c","additions":0,"deletions":180,"binary":false,"changes":180,"status":"deleted"},{"patch":"@@ -1,483 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#define _GNU_SOURCE\n-#include <dlfcn.h>\n-#include <errno.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-#include \"egl.h\"\n-\n-static void *libEGL = NULL;\n-\n-\/*\n- *    Init\/fini\n- *\/\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    libEGL = dlopen(\"libEGL.so\", RTLD_LAZY);\n-}\n-\n-\n-\/*\n- *    EGL\n- *\/\n-\n-EGLAPI EGLint EGLAPIENTRY\n-eglGetError(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLDisplay EGLAPIENTRY\n-eglGetDisplay(EGLNativeDisplayType display_id)\n-{\n-    EGLPROLOG(eglGetDisplay);\n-\n-    putCmd(OPC_eglGetDisplay);\n-    putPtr((void*)display_id);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLDisplay res = (*(EGLDisplay(*)())orig)(display_id);\n-    uint64_t end = gethrtime();\n-\n-    putPtr(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglInitialize(EGLDisplay dpy, EGLint *major, EGLint *minor)\n-{\n-    EGLPROLOG(eglInitialize);\n-\n-    putCmd(OPC_eglInitialize);\n-    putPtr(dpy);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, major, minor);\n-    uint64_t end = gethrtime();\n-\n-    putIntPtr(major);\n-    putIntPtr(minor);\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglTerminate(EGLDisplay dpy)\n-{\n-    EGLPROLOG(eglTerminate);\n-\n-    putCmd(OPC_eglTerminate);\n-    putPtr(dpy);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI const char * EGLAPIENTRY\n-eglQueryString(EGLDisplay dpy, EGLint name)\n-{\n-    EGLPROLOG(eglQueryString);\n-\n-    putCmd(OPC_eglQueryString);\n-    putPtr(dpy);\n-    putInt(name);\n-\n-    uint64_t bgn = gethrtime();\n-    const char *res = (*(const char*(*)())orig)(dpy, name);\n-    uint64_t end = gethrtime();\n-\n-    putString(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglGetConfigs(EGLDisplay dpy, EGLConfig *configs, EGLint config_size, EGLint *num_config)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglChooseConfig(EGLDisplay dpy, const EGLint *attrib_list,\n-                           EGLConfig *configs, EGLint config_size,\n-                           EGLint *num_config)\n-{\n-    EGLPROLOG(eglChooseConfig);\n-\n-    putCmd(OPC_eglChooseConfig);\n-    putPtr(dpy);\n-    const EGLint *ptr = attrib_list;\n-    for (;ptr && *ptr != EGL_NONE; ptr += 2) {\n-        putInt(ptr[0]);\n-        putInt(ptr[1]);\n-    }\n-    putInt(EGL_NONE);\n-    putInt(configs == NULL ? 0 : config_size);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, attrib_list, configs, config_size, num_config);\n-    uint64_t end = gethrtime();\n-\n-    putInt(*num_config);\n-    int i;\n-    for (i=0; i<*num_config && i < config_size; ++i) {\n-        putPtr(configs[i]);\n-    }\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglGetConfigAttrib(EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint *value)\n-{\n-    EGLPROLOG(eglGetConfigAttrib);\n-\n-    putCmd(OPC_eglGetConfigAttrib);\n-    putPtr(dpy);\n-    putPtr(config);\n-    putInt(attribute);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, config, attribute, value);\n-    uint64_t end = gethrtime();\n-\n-    putInt(*value);\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLSurface EGLAPIENTRY\n-eglCreateWindowSurface(EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint *attrib_list)\n-{\n-    EGLPROLOG(eglCreateWindowSurface);\n-\n-    putCmd(OPC_eglCreateWindowSurface);\n-    putPtr(dpy);\n-    putPtr(config);\n-    putPtr(win);\n-    const EGLint *ptr = attrib_list;\n-    for (;ptr && *ptr != EGL_NONE; ptr += 2) {\n-        putInt(ptr[0]);\n-        putInt(ptr[1]);\n-    }\n-    putInt(EGL_NONE);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLSurface res = (*(EGLSurface(*)())orig)(dpy, config, win, attrib_list);\n-    uint64_t end = gethrtime();\n-\n-    putPtr(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLSurface EGLAPIENTRY\n-eglCreatePbufferSurface(EGLDisplay dpy, EGLConfig config, const EGLint *attrib_list)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLSurface EGLAPIENTRY\n-eglCreatePixmapSurface(EGLDisplay dpy, EGLConfig config,\n-                                  EGLNativePixmapType pixmap,\n-                                  const EGLint *attrib_list)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglDestroySurface(EGLDisplay dpy, EGLSurface surface)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglQuerySurface(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint *value)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglBindAPI(EGLenum api)\n-{\n-    EGLPROLOG(eglBindAPI);\n-\n-    putCmd(OPC_eglBindAPI);\n-    putInt(api);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(api);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLenum EGLAPIENTRY\n-eglQueryAPI(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglWaitClient(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglReleaseThread(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLSurface EGLAPIENTRY\n-eglCreatePbufferFromClientBuffer(\n-              EGLDisplay dpy, EGLenum buftype, EGLClientBuffer buffer,\n-              EGLConfig config, const EGLint *attrib_list)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglSurfaceAttrib(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value)\n-{\n-    EGLPROLOG(eglSurfaceAttrib);\n-\n-    putCmd(OPC_eglSurfaceAttrib);\n-    putPtr(dpy);\n-    putPtr(surface);\n-    putInt(attribute);\n-    putInt(value);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, surface, attribute, value);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglBindTexImage(EGLDisplay dpy, EGLSurface surface, EGLint buffer)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglReleaseTexImage(EGLDisplay dpy, EGLSurface surface, EGLint buffer)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglSwapInterval(EGLDisplay dpy, EGLint interval)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLContext EGLAPIENTRY\n-eglCreateContext(EGLDisplay dpy, EGLConfig config,\n-                 EGLContext share_context, const EGLint *attrib_list)\n-{\n-    EGLPROLOG(eglCreateContext);\n-\n-    putCmd(OPC_eglCreateContext);\n-    putPtr(dpy);\n-    putPtr(config);\n-    putPtr(share_context);\n-    const EGLint *ptr = attrib_list;\n-    for (;ptr && *ptr != EGL_NONE; ptr += 2) {\n-        putInt(ptr[0]);\n-        putInt(ptr[1]);\n-    }\n-    putInt(EGL_NONE);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLContext res = (*(EGLContext(*)())orig)(dpy, config, share_context, attrib_list);\n-    uint64_t end = gethrtime();\n-\n-    putPtr(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglDestroyContext(EGLDisplay dpy, EGLContext ctx)\n-{\n-    EGLPROLOG(eglDestroyContext);\n-\n-    putCmd(OPC_eglDestroyContext);\n-    putPtr(dpy);\n-    putPtr(ctx);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, ctx);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglMakeCurrent(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)\n-{\n-    EGLPROLOG(eglMakeCurrent);\n-\n-    putCmd(OPC_eglMakeCurrent);\n-    putPtr(dpy);\n-    putPtr(draw);\n-    putPtr(read);\n-    putPtr(ctx);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, draw, read, ctx);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLContext EGLAPIENTRY\n-eglGetCurrentContext(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLSurface EGLAPIENTRY\n-eglGetCurrentSurface(EGLint readdraw)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLDisplay EGLAPIENTRY\n-eglGetCurrentDisplay(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglQueryContext(EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint *value)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglWaitGL(void)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglWaitNative(EGLint engine)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglSwapBuffers(EGLDisplay dpy, EGLSurface surface)\n-{\n-    EGLPROLOG(eglSwapBuffers);\n-\n-    putCmd(OPC_eglSwapBuffers);\n-    putPtr(dpy);\n-    putPtr(surface);\n-\n-    uint64_t bgn = gethrtime();\n-    EGLBoolean res = (*(EGLBoolean(*)())orig)(dpy, surface);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    EGLEPILOG();\n-\n-    return res;\n-}\n-\n-EGLAPI EGLBoolean EGLAPIENTRY\n-eglCopyBuffers(EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target)\n-{\n-    NOT_IMPLEMENTED();\n-}\n-\n","filename":"tools\/gltrace\/egl.c","additions":0,"deletions":483,"binary":false,"changes":483,"status":"deleted"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef GLTRACE_EGL_H\n-#define GLTRACE_EGL_H\n-\n-#include <EGL\/egl.h>\n-#include \"trace.h\"\n-\n-#define EGLPROLOG(func) \\\n-    static void *orig = NULL;\\\n-    if (orig == NULL) {\\\n-        DLFCN_HOOK_POP(); \\\n-        orig = dlsym(libEGL, #func);\\\n-        DLFCN_HOOK_PUSH(); \\\n-    }\n-\n-#define EGLEPILOG()\n-\n-#endif \/* GLTRACE_EGL_H *\/\n","filename":"tools\/gltrace\/egl.h","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -1,555 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <stdio.h>\n-#include <string.h>\n-\n-#if linux\n-#include <GLES2\/gl2.h>\n-#include <GLES2\/gl2ext.h>\n-#include <EGL\/egl.h>\n-#endif\n-\n-#if MACOSX\n-#include <OpenGL\/gl.h>\n-#include <OpenGL\/glext.h>\n-\n-#define GL_FIXED                            0x10000\n-#define GL_MAX_VERTEX_UNIFORM_VECTORS       0x10001\n-#define GL_MAX_VARYING_VECTORS              0x10002\n-#define GL_MAX_FRAGMENT_UNIFORM_VECTORS     0x10003\n-#define GL_IMPLEMENTATION_COLOR_READ_TYPE   0x10004\n-#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x10005\n-#define GL_SHADER_COMPILER                  0x10006\n-#define GL_SHADER_BINARY_FORMATS            0x10007\n-#define GL_NUM_SHADER_BINARY_FORMATS        0x10008\n-#define GL_LOW_FLOAT                        0x10009\n-#define GL_MEDIUM_FLOAT                     0x10010\n-#define GL_HIGH_FLOAT                       0x10011\n-#define GL_LOW_INT                          0x10012\n-#define GL_MEDIUM_INT                       0x10013\n-#define GL_HIGH_INT                         0x10014\n-#define GL_RGB565                           0x10015\n-#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x10016\n-#endif\n-\n-#if linux\n-const char *\n-eglEnum2str(EGLenum val)\n-{\n-    switch (val) {\n-    case EGL_SUCCESS:           return \"EGL_SUCCESS\";\n-    case EGL_NOT_INITIALIZED:   return \"EGL_NOT_INITIALIZED\";\n-    case EGL_BAD_ACCESS :       return \"EGL_BAD_ACCESS\";\n-    case EGL_BAD_ALLOC  :       return \"EGL_BAD_ALLOC\";\n-    case EGL_BAD_ATTRIBUTE:     return \"EGL_BAD_ATTRIBUTE\";\n-    case EGL_BAD_CONFIG :       return \"EGL_BAD_CONFIG\";\n-    case EGL_BAD_CONTEXT:       return \"EGL_BAD_CONTEXT\";\n-    case EGL_BAD_CURRENT_SURFACE: return \"EGL_BAD_CURRENT_SURFACE\";\n-    case EGL_BAD_DISPLAY:       return \"EGL_BAD_DISPLAY\";\n-    case EGL_BAD_MATCH:         return \"EGL_BAD_MATCH\";\n-    case EGL_BAD_NATIVE_PIXMAP: return \"EGL_BAD_NATIVE_PIXMAP\";\n-    case EGL_BAD_NATIVE_WINDOW: return \"EGL_BAD_NATIVE_WINDOW\";\n-    case EGL_BAD_PARAMETER:     return \"EGL_BAD_PARAMETER\";\n-    case EGL_BAD_SURFACE:       return \"EGL_BAD_SURFACE\";\n-    case EGL_CONTEXT_LOST:      return \"EGL_CONTEXT_LOST\";\n-    case EGL_BUFFER_SIZE:       return \"EGL_BUFFER_SIZE\";\n-    case EGL_ALPHA_SIZE :       return \"EGL_ALPHA_SIZE\";\n-    case EGL_BLUE_SIZE  :       return \"EGL_BLUE_SIZE\";\n-    case EGL_GREEN_SIZE :       return \"EGL_GREEN_SIZE\";\n-    case EGL_RED_SIZE   :       return \"EGL_RED_SIZE\";\n-    case EGL_DEPTH_SIZE :       return \"EGL_DEPTH_SIZE\";\n-    case EGL_STENCIL_SIZE:      return \"EGL_STENCIL_SIZE\";\n-    case EGL_CONFIG_CAVEAT:     return \"EGL_CONFIG_CAVEAT\";\n-    case EGL_CONFIG_ID  :       return \"EGL_CONFIG_ID\";\n-    case EGL_LEVEL      :       return \"EGL_LEVEL\";\n-    case EGL_MAX_PBUFFER_HEIGHT: return \"EGL_MAX_PBUFFER_HEIGHT\";\n-    case EGL_MAX_PBUFFER_PIXELS: return \"EGL_MAX_PBUFFER_PIXELS\";\n-    case EGL_MAX_PBUFFER_WIDTH: return \"EGL_MAX_PBUFFER_WIDTH\";\n-    case EGL_NATIVE_RENDERABLE: return \"EGL_NATIVE_RENDERABLE\";\n-    case EGL_NATIVE_VISUAL_ID:  return \"EGL_NATIVE_VISUAL_ID\";\n-    case EGL_NATIVE_VISUAL_TYPE: return \"EGL_NATIVE_VISUAL_TYPE\";\n-    case EGL_SAMPLES    :       return \"EGL_SAMPLES\";\n-    case EGL_SAMPLE_BUFFERS:    return \"EGL_SAMPLE_BUFFERS\";\n-    case EGL_SURFACE_TYPE:      return \"EGL_SURFACE_TYPE\";\n-    case EGL_TRANSPARENT_TYPE:  return \"EGL_TRANSPARENT_TYPE\";\n-    case EGL_TRANSPARENT_BLUE_VALUE: return \"EGL_TRANSPARENT_BLUE_VALUE\";\n-    case EGL_TRANSPARENT_GREEN_VALUE: return \"EGL_TRANSPARENT_GREEN_VALUE\";\n-    case EGL_TRANSPARENT_RED_VALUE: return \"EGL_TRANSPARENT_RED_VALUE\";\n-    case EGL_NONE       :       return \"EGL_NONE\";\n-    case EGL_BIND_TO_TEXTURE_RGB: return \"EGL_BIND_TO_TEXTURE_RGB\";\n-    case EGL_BIND_TO_TEXTURE_RGBA: return \"EGL_BIND_TO_TEXTURE_RGBA\";\n-    case EGL_MIN_SWAP_INTERVAL: return \"EGL_MIN_SWAP_INTERVAL\";\n-    case EGL_MAX_SWAP_INTERVAL: return \"EGL_MAX_SWAP_INTERVAL\";\n-    case EGL_LUMINANCE_SIZE:    return \"EGL_LUMINANCE_SIZE\";\n-    case EGL_ALPHA_MASK_SIZE:   return \"EGL_ALPHA_MASK_SIZE\";\n-    case EGL_COLOR_BUFFER_TYPE: return \"EGL_COLOR_BUFFER_TYPE\";\n-    case EGL_RENDERABLE_TYPE:   return \"EGL_RENDERABLE_TYPE\";\n-    case EGL_MATCH_NATIVE_PIXMAP: return \"EGL_MATCH_NATIVE_PIXMAP\";\n-    case EGL_CONFORMANT :       return \"EGL_CONFORMANT\";\n-    case EGL_SLOW_CONFIG:       return \"EGL_SLOW_CONFIG\";\n-    case EGL_NON_CONFORMANT_CONFIG: return \"EGL_NON_CONFORMANT_CONFIG\";\n-    case EGL_TRANSPARENT_RGB:   return \"EGL_TRANSPARENT_RGB\";\n-    case EGL_RGB_BUFFER :       return \"EGL_RGB_BUFFER\";\n-    case EGL_LUMINANCE_BUFFER:  return \"EGL_LUMINANCE_BUFFER\";\n-    case EGL_NO_TEXTURE :       return \"EGL_NO_TEXTURE\";\n-    case EGL_TEXTURE_RGB:       return \"EGL_TEXTURE_RGB\";\n-    case EGL_TEXTURE_RGBA:      return \"EGL_TEXTURE_RGBA\";\n-    case EGL_TEXTURE_2D :       return \"EGL_TEXTURE_2D\";\n-    case EGL_VENDOR     :       return \"EGL_VENDOR\";\n-    case EGL_VERSION    :       return \"EGL_VERSION\";\n-    case EGL_EXTENSIONS :       return \"EGL_EXTENSIONS\";\n-    case EGL_CLIENT_APIS:       return \"EGL_CLIENT_APIS\";\n-    case EGL_HEIGHT     :       return \"EGL_HEIGHT\";\n-    case EGL_WIDTH      :       return \"EGL_WIDTH\";\n-    case EGL_LARGEST_PBUFFER:   return \"EGL_LARGEST_PBUFFER\";\n-    case EGL_TEXTURE_FORMAT:    return \"EGL_TEXTURE_FORMAT\";\n-    case EGL_TEXTURE_TARGET:    return \"EGL_TEXTURE_TARGET\";\n-    case EGL_MIPMAP_TEXTURE:    return \"EGL_MIPMAP_TEXTURE\";\n-    case EGL_MIPMAP_LEVEL:      return \"EGL_MIPMAP_LEVEL\";\n-    case EGL_RENDER_BUFFER:     return \"EGL_RENDER_BUFFER\";\n-    case EGL_VG_COLORSPACE:     return \"EGL_VG_COLORSPACE\";\n-    case EGL_VG_ALPHA_FORMAT:   return \"EGL_VG_ALPHA_FORMAT\";\n-    case EGL_HORIZONTAL_RESOLUTION: return \"EGL_HORIZONTAL_RESOLUTION\";\n-    case EGL_VERTICAL_RESOLUTION: return \"EGL_VERTICAL_RESOLUTION\";\n-    case EGL_PIXEL_ASPECT_RATIO: return \"EGL_PIXEL_ASPECT_RATIO\";\n-    case EGL_SWAP_BEHAVIOR:     return \"EGL_SWAP_BEHAVIOR\";\n-    case EGL_MULTISAMPLE_RESOLVE: return \"EGL_MULTISAMPLE_RESOLVE\";\n-    case EGL_BACK_BUFFER:       return \"EGL_BACK_BUFFER\";\n-    case EGL_SINGLE_BUFFER:     return \"EGL_SINGLE_BUFFER\";\n-    case EGL_VG_COLORSPACE_sRGB: return \"EGL_VG_COLORSPACE_sRGB\";\n-    case EGL_VG_COLORSPACE_LINEAR: return \"EGL_VG_COLORSPACE_LINEAR\";\n-    case EGL_VG_ALPHA_FORMAT_NONPRE: return \"EGL_VG_ALPHA_FORMAT_NONPRE\";\n-    case EGL_VG_ALPHA_FORMAT_PRE: return \"EGL_VG_ALPHA_FORMAT_PRE\";\n-    case EGL_BUFFER_PRESERVED:  return \"EGL_BUFFER_PRESERVED\";\n-    case EGL_BUFFER_DESTROYED:  return \"EGL_BUFFER_DESTROYED\";\n-    case EGL_OPENVG_IMAGE:      return \"EGL_OPENVG_IMAGE\";\n-    case EGL_CONTEXT_CLIENT_TYPE: return \"EGL_CONTEXT_CLIENT_TYPE\";\n-    case EGL_CONTEXT_CLIENT_VERSION: return \"EGL_CONTEXT_CLIENT_VERSION\";\n-    case EGL_MULTISAMPLE_RESOLVE_DEFAULT: return \"EGL_MULTISAMPLE_RESOLVE_DEFAULT\";\n-    case EGL_MULTISAMPLE_RESOLVE_BOX: return \"EGL_MULTISAMPLE_RESOLVE_BOX\";\n-    case EGL_OPENGL_ES_API:     return \"EGL_OPENGL_ES_API\";\n-    case EGL_OPENVG_API :       return \"EGL_OPENVG_API\";\n-    case EGL_OPENGL_API :       return \"EGL_OPENGL_API\";\n-    case EGL_DRAW       :       return \"EGL_DRAW\";\n-    case EGL_READ       :       return \"EGL_READ\";\n-    case EGL_CORE_NATIVE_ENGINE: return \"EGL_CORE_NATIVE_ENGINE\";\n-    }\n-\n-    static char buf[1024];\n-    static char *ptr = buf;\n-\n-    if (ptr + 16 > buf + sizeof(buf)) ptr = buf;\n-    char *res = ptr;\n-    snprintf(ptr, 16, \"0x%x\", val);\n-    ptr += strlen(ptr) + 1;\n-    return res;\n-}\n-#endif \/* linux *\/\n-\n-const char *\n-glEnum2str(GLenum val)\n-{\n-    switch (val) {\n-    case GL_SRC_COLOR:          return \"GL_SRC_COLOR\";\n-    case GL_ONE_MINUS_SRC_COLOR:return \"GL_ONE_MINUS_SRC_COLOR\";\n-    case GL_SRC_ALPHA:          return \"GL_SRC_ALPHA\";\n-    case GL_ONE_MINUS_SRC_ALPHA:return \"GL_ONE_MINUS_SRC_ALPHA\";\n-    case GL_DST_ALPHA:          return \"GL_DST_ALPHA\";\n-    case GL_ONE_MINUS_DST_ALPHA:return \"GL_ONE_MINUS_DST_ALPHA\";\n-\n-\/* BlendingFactorSrc *\/\n-\/*      GL_ZERO *\/\n-\/*      GL_ONE *\/\n-    case GL_DST_COLOR:          return \"GL_DST_COLOR\";\n-    case GL_ONE_MINUS_DST_COLOR:return \"GL_ONE_MINUS_DST_COLOR\";\n-    case GL_SRC_ALPHA_SATURATE: return \"GL_SRC_ALPHA_SATURATE\";\n-\/*      GL_SRC_ALPHA *\/\n-\/*      GL_ONE_MINUS_SRC_ALPHA *\/\n-\/*      GL_DST_ALPHA *\/\n-\/*      GL_ONE_MINUS_DST_ALPHA *\/\n-\n-\/* BlendEquationSeparate *\/\n-    case GL_FUNC_ADD:           return \"GL_FUNC_ADD\";\n-    case GL_BLEND_EQUATION:     return \"GL_BLEND_EQUATION\";\n-    case GL_BLEND_EQUATION_ALPHA:return \"GL_BLEND_EQUATION_ALPHA\";\n-\n-\/* BlendSubtract *\/\n-    case GL_FUNC_SUBTRACT:              return \"GL_FUNC_SUBTRACT\";\n-    case GL_FUNC_REVERSE_SUBTRACT:      return \"GL_FUNC_REVERSE_SUBTRACT\";\n-\n-\/* Separate Blend Functions *\/\n-    case GL_BLEND_DST_RGB:              return \"GL_BLEND_DST_RGB\";\n-    case GL_BLEND_SRC_RGB:              return \"GL_BLEND_SRC_RGB\";\n-    case GL_BLEND_DST_ALPHA:            return \"GL_BLEND_DST_ALPHA\";\n-    case GL_BLEND_SRC_ALPHA:            return \"GL_BLEND_SRC_ALPHA\";\n-    case GL_CONSTANT_COLOR:             return \"GL_CONSTANT_COLOR\";\n-    case GL_ONE_MINUS_CONSTANT_COLOR:   return \"GL_ONE_MINUS_CONSTANT_COLOR\";\n-    case GL_CONSTANT_ALPHA:             return \"GL_CONSTANT_ALPHA\";\n-    case GL_ONE_MINUS_CONSTANT_ALPHA:   return \"GL_ONE_MINUS_CONSTANT_ALPHA\";\n-    case GL_BLEND_COLOR:                return \"GL_BLEND_COLOR\";\n-\n-\/* Buffer Objects *\/\n-    case GL_ARRAY_BUFFER:               return \"GL_ARRAY_BUFFER\";\n-    case GL_ELEMENT_ARRAY_BUFFER:       return \"GL_ELEMENT_ARRAY_BUFFER\";\n-    case GL_ARRAY_BUFFER_BINDING:       return \"GL_ARRAY_BUFFER_BINDING\";\n-    case GL_ELEMENT_ARRAY_BUFFER_BINDING:return \"GL_ELEMENT_ARRAY_BUFFER_BINDING\";\n-\n-    case GL_STREAM_DRAW:                return \"GL_STREAM_DRAW\";\n-    case GL_STATIC_DRAW:                return \"GL_STATIC_DRAW\";\n-    case GL_DYNAMIC_DRAW:               return \"GL_DYNAMIC_DRAW\";\n-\n-    case GL_BUFFER_SIZE:                return \"GL_BUFFER_SIZE\";\n-    case GL_BUFFER_USAGE:               return \"GL_BUFFER_USAGE\";\n-\n-    case GL_CURRENT_VERTEX_ATTRIB:      return \"GL_CURRENT_VERTEX_ATTRIB\";\n-\n-\/* CullFaceMode *\/\n-    case GL_FRONT:              return \"GL_FRONT\";\n-    case GL_BACK:               return \"GL_BACK\";\n-    case GL_FRONT_AND_BACK:     return \"GL_FRONT_AND_BACK\";\n-\n-\/* EnableCap *\/\n-    case GL_TEXTURE_2D:         return \"GL_TEXTURE_2D\";\n-    case GL_CULL_FACE:          return \"GL_CULL_FACE\";\n-    case GL_BLEND:              return \"GL_BLEND\";\n-    case GL_DITHER:             return \"GL_DITHER\";\n-    case GL_STENCIL_TEST:       return \"GL_STENCIL_TEST\";\n-    case GL_DEPTH_TEST:         return \"GL_DEPTH_TEST\";\n-    case GL_SCISSOR_TEST:       return \"GL_SCISSOR_TEST\";\n-    case GL_POLYGON_OFFSET_FILL:return \"GL_POLYGON_OFFSET_FILL\";\n-    case GL_SAMPLE_ALPHA_TO_COVERAGE:return \"GL_SAMPLE_ALPHA_TO_COVERAGE\";\n-    case GL_SAMPLE_COVERAGE:    return \"GL_SAMPLE_COVERAGE\";\n-\n-\/* ErrorCode *\/\n-\/*    case GL_NO_ERROR                       0 *\/\n-    case GL_INVALID_ENUM:       return \"GL_INVALID_ENUM\";\n-    case GL_INVALID_VALUE:      return \"GL_INVALID_VALUE\";\n-    case GL_INVALID_OPERATION:  return \"GL_INVALID_OPERATION\";\n-    case GL_OUT_OF_MEMORY:      return \"GL_OUT_OF_MEMORY\";\n-\n-\/* FrontFaceDirection *\/\n-    case GL_CW:                 return \"GL_CW\";\n-    case GL_CCW:                return \"GL_CCW\";\n-\n-\/* GetPName *\/\n-    case GL_LINE_WIDTH:                 return \"GL_LINE_WIDTH\";\n-    case GL_ALIASED_POINT_SIZE_RANGE:   return \"GL_ALIASED_POINT_SIZE_RANGE\";\n-    case GL_ALIASED_LINE_WIDTH_RANGE:   return \"GL_ALIASED_LINE_WIDTH_RANGE\";\n-    case GL_CULL_FACE_MODE:             return \"GL_CULL_FACE_MODE\";\n-    case GL_FRONT_FACE:                 return \"GL_FRONT_FACE\";\n-    case GL_DEPTH_RANGE:                return \"GL_DEPTH_RANGE\";\n-    case GL_DEPTH_WRITEMASK:            return \"GL_DEPTH_WRITEMASK\";\n-    case GL_DEPTH_CLEAR_VALUE:          return \"GL_DEPTH_CLEAR_VALUE\";\n-    case GL_DEPTH_FUNC:                 return \"GL_DEPTH_FUNC\";\n-    case GL_STENCIL_CLEAR_VALUE:        return \"GL_STENCIL_CLEAR_VALUE\";\n-    case GL_STENCIL_FUNC:               return \"GL_STENCIL_FUNC\";\n-    case GL_STENCIL_FAIL:               return \"GL_STENCIL_FAIL\";\n-    case GL_STENCIL_PASS_DEPTH_FAIL:    return \"GL_STENCIL_PASS_DEPTH_FAIL\";\n-    case GL_STENCIL_PASS_DEPTH_PASS:    return \"GL_STENCIL_PASS_DEPTH_PASS\";\n-    case GL_STENCIL_REF:                return \"GL_STENCIL_REF\";\n-    case GL_STENCIL_VALUE_MASK:         return \"GL_STENCIL_VALUE_MASK\";\n-    case GL_STENCIL_WRITEMASK:          return \"GL_STENCIL_WRITEMASK\";\n-    case GL_STENCIL_BACK_FUNC:          return \"GL_STENCIL_BACK_FUNC\";\n-    case GL_STENCIL_BACK_FAIL:          return \"GL_STENCIL_BACK_FAIL\";\n-    case GL_STENCIL_BACK_PASS_DEPTH_FAIL:return \"GL_STENCIL_BACK_PASS_DEPTH_FAIL\";\n-    case GL_STENCIL_BACK_PASS_DEPTH_PASS:return \"GL_STENCIL_BACK_PASS_DEPTH_PASS\";\n-    case GL_STENCIL_BACK_REF:           return \"GL_STENCIL_BACK_REF\";\n-    case GL_STENCIL_BACK_VALUE_MASK:    return \"GL_STENCIL_BACK_VALUE_MASK\";\n-    case GL_STENCIL_BACK_WRITEMASK:     return \"GL_STENCIL_BACK_WRITEMASK\";\n-    case GL_VIEWPORT:                   return \"GL_VIEWPORT\";\n-    case GL_SCISSOR_BOX:                return \"GL_SCISSOR_BOX\";\n-    case GL_COLOR_CLEAR_VALUE:          return \"GL_COLOR_CLEAR_VALUE\";\n-    case GL_COLOR_WRITEMASK:            return \"GL_COLOR_WRITEMASK\";\n-    case GL_UNPACK_ALIGNMENT:           return \"GL_UNPACK_ALIGNMENT\";\n-    case GL_PACK_ALIGNMENT:             return \"GL_PACK_ALIGNMENT\";\n-    case GL_MAX_TEXTURE_SIZE:           return \"GL_MAX_TEXTURE_SIZE\";\n-    case GL_MAX_VIEWPORT_DIMS:          return \"GL_MAX_VIEWPORT_DIMS\";\n-    case GL_SUBPIXEL_BITS:              return \"GL_SUBPIXEL_BITS\";\n-    case GL_RED_BITS:                   return \"GL_RED_BITS\";\n-    case GL_GREEN_BITS:                 return \"GL_GREEN_BITS\";\n-    case GL_BLUE_BITS:                  return \"GL_BLUE_BITS\";\n-    case GL_ALPHA_BITS:                 return \"GL_ALPHA_BITS\";\n-    case GL_DEPTH_BITS:                 return \"GL_DEPTH_BITS\";\n-    case GL_STENCIL_BITS:               return \"GL_STENCIL_BITS\";\n-    case GL_POLYGON_OFFSET_UNITS:       return \"GL_POLYGON_OFFSET_UNITS\";\n-    case GL_POLYGON_OFFSET_FACTOR:      return \"GL_POLYGON_OFFSET_FACTOR\";\n-    case GL_TEXTURE_BINDING_2D:         return \"GL_TEXTURE_BINDING_2D\";\n-    case GL_SAMPLE_BUFFERS:             return \"GL_SAMPLE_BUFFERS\";\n-    case GL_SAMPLES:                    return \"GL_SAMPLES\";\n-    case GL_SAMPLE_COVERAGE_VALUE:      return \"GL_SAMPLE_COVERAGE_VALUE\";\n-    case GL_SAMPLE_COVERAGE_INVERT:     return \"GL_SAMPLE_COVERAGE_INVERT\";\n-\n-    case GL_NUM_COMPRESSED_TEXTURE_FORMATS:return \"GL_NUM_COMPRESSED_TEXTURE_FORMATS\";\n-    case GL_COMPRESSED_TEXTURE_FORMATS: return \"GL_COMPRESSED_TEXTURE_FORMATS\";\n-\n-\/* HintMode *\/\n-    case GL_DONT_CARE:                  return \"GL_DONT_CARE\";\n-    case GL_FASTEST:                    return \"GL_FASTEST\";\n-    case GL_NICEST:                     return \"GL_NICEST\";\n-\n-\/* HintTarget *\/\n-    case GL_GENERATE_MIPMAP_HINT:       return \"GL_GENERATE_MIPMAP_HINT\";\n-\n-\/* DataType *\/\n-    case GL_BYTE:                       return \"GL_BYTE\";\n-    case GL_UNSIGNED_BYTE:              return \"GL_UNSIGNED_BYTE\";\n-    case GL_SHORT:                      return \"GL_SHORT\";\n-    case GL_UNSIGNED_SHORT:             return \"GL_UNSIGNED_SHORT\";\n-    case GL_INT:                        return \"GL_INT\";\n-    case GL_UNSIGNED_INT:               return \"GL_UNSIGNED_INT\";\n-    case GL_FLOAT:                      return \"GL_FLOAT\";\n-    case GL_FIXED:                      return \"GL_FIXED\";\n-\n-\/* PixelFormat *\/\n-    case GL_DEPTH_COMPONENT:            return \"GL_DEPTH_COMPONENT\";\n-    case GL_ALPHA:                      return \"GL_ALPHA\";\n-    case GL_RGB:                        return \"GL_RGB\";\n-    case GL_RGBA:                       return \"GL_RGBA\";\n-    case GL_LUMINANCE:                  return \"GL_LUMINANCE\";\n-    case GL_LUMINANCE_ALPHA:            return \"GL_LUMINANCE_ALPHA\";\n-\n-\/* PixelType *\/\n-    case GL_UNSIGNED_SHORT_4_4_4_4:     return \"GL_UNSIGNED_SHORT_4_4_4_4\";\n-    case GL_UNSIGNED_SHORT_5_5_5_1:     return \"GL_UNSIGNED_SHORT_5_5_5_1\";\n-    case GL_UNSIGNED_SHORT_5_6_5:       return \"GL_UNSIGNED_SHORT_5_6_5\";\n-\n-\/* Shaders *\/\n-    case GL_FRAGMENT_SHADER:            return \"GL_FRAGMENT_SHADER\";\n-    case GL_VERTEX_SHADER:              return \"GL_VERTEX_SHADER\";\n-    case GL_MAX_VERTEX_ATTRIBS:         return \"GL_MAX_VERTEX_ATTRIBS\";\n-    case GL_MAX_VERTEX_UNIFORM_VECTORS: return \"GL_MAX_VERTEX_UNIFORM_VECTORS\";\n-    case GL_MAX_VARYING_VECTORS:        return \"GL_MAX_VARYING_VECTORS\";\n-    case GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS:return \"GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS\";\n-    case GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS:return \"GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS\";\n-    case GL_MAX_TEXTURE_IMAGE_UNITS:    return \"GL_MAX_TEXTURE_IMAGE_UNITS\";\n-    case GL_MAX_FRAGMENT_UNIFORM_VECTORS:return \"GL_MAX_FRAGMENT_UNIFORM_VECTORS\";\n-    case GL_SHADER_TYPE:                return \"GL_SHADER_TYPE\";\n-    case GL_DELETE_STATUS:              return \"GL_DELETE_STATUS\";\n-    case GL_LINK_STATUS:                return \"GL_LINK_STATUS\";\n-    case GL_VALIDATE_STATUS:            return \"GL_VALIDATE_STATUS\";\n-    case GL_ATTACHED_SHADERS:           return \"GL_ATTACHED_SHADERS\";\n-    case GL_ACTIVE_UNIFORMS:            return \"GL_ACTIVE_UNIFORMS\";\n-    case GL_ACTIVE_UNIFORM_MAX_LENGTH:  return \"GL_ACTIVE_UNIFORM_MAX_LENGTH\";\n-    case GL_ACTIVE_ATTRIBUTES:          return \"GL_ACTIVE_ATTRIBUTES\";\n-    case GL_ACTIVE_ATTRIBUTE_MAX_LENGTH:return \"GL_ACTIVE_ATTRIBUTE_MAX_LENGTH\";\n-    case GL_SHADING_LANGUAGE_VERSION:   return \"GL_SHADING_LANGUAGE_VERSION\";\n-    case GL_CURRENT_PROGRAM:            return \"GL_CURRENT_PROGRAM\";\n-\n-\/* StencilFunction *\/\n-    case GL_NEVER:              return \"GL_NEVER\";\n-    case GL_LESS:               return \"GL_LESS\";\n-    case GL_EQUAL:              return \"GL_EQUAL\";\n-    case GL_LEQUAL:             return \"GL_LEQUAL\";\n-    case GL_GREATER:            return \"GL_GREATER\";\n-    case GL_NOTEQUAL:           return \"GL_NOTEQUAL\";\n-    case GL_GEQUAL:             return \"GL_GEQUAL\";\n-    case GL_ALWAYS:             return \"GL_ALWAYS\";\n-\n-\/* StencilOp *\/\n-\/*      GL_ZERO *\/\n-    case GL_KEEP:               return \"GL_KEEP\";\n-    case GL_REPLACE:            return \"GL_REPLACE\";\n-    case GL_INCR:               return \"GL_INCR\";\n-    case GL_DECR:               return \"GL_DECR\";\n-    case GL_INVERT:             return \"GL_INVERT\";\n-    case GL_INCR_WRAP:          return \"GL_INCR_WRAP\";\n-    case GL_DECR_WRAP:          return \"GL_DECR_WRAP\";\n-\n-\/* StringName *\/\n-    case GL_VENDOR:             return \"GL_VENDOR\";\n-    case GL_RENDERER:           return \"GL_RENDERER\";\n-    case GL_VERSION:            return \"GL_VERSION\";\n-    case GL_EXTENSIONS:         return \"GL_EXTENSIONS\";\n-\n-\/* TextureMagFilter *\/\n-    case GL_NEAREST:            return \"GL_NEAREST\";\n-    case GL_LINEAR:             return \"GL_LINEAR\";\n-\n-\/* TextureMinFilter *\/\n-    case GL_NEAREST_MIPMAP_NEAREST:     return \"GL_NEAREST_MIPMAP_NEAREST\";\n-    case GL_LINEAR_MIPMAP_NEAREST:      return \"GL_LINEAR_MIPMAP_NEAREST\";\n-    case GL_NEAREST_MIPMAP_LINEAR:      return \"GL_NEAREST_MIPMAP_LINEAR\";\n-    case GL_LINEAR_MIPMAP_LINEAR:       return \"GL_LINEAR_MIPMAP_LINEAR\";\n-\n-\/* TextureParameterName *\/\n-    case GL_TEXTURE_MAG_FILTER:         return \"GL_TEXTURE_MAG_FILTER\";\n-    case GL_TEXTURE_MIN_FILTER:         return \"GL_TEXTURE_MIN_FILTER\";\n-    case GL_TEXTURE_WRAP_S:             return \"GL_TEXTURE_WRAP_S\";\n-    case GL_TEXTURE_WRAP_T:             return \"GL_TEXTURE_WRAP_T\";\n-\n-\/* TextureTarget *\/\n-    case GL_TEXTURE:                    return \"GL_TEXTURE\";\n-\n-    case GL_TEXTURE_CUBE_MAP:           return \"GL_TEXTURE_CUBE_MAP\";\n-    case GL_TEXTURE_BINDING_CUBE_MAP:   return \"GL_TEXTURE_BINDING_CUBE_MAP\";\n-    case GL_TEXTURE_CUBE_MAP_POSITIVE_X:return \"GL_TEXTURE_CUBE_MAP_POSITIVE_X\";\n-    case GL_TEXTURE_CUBE_MAP_NEGATIVE_X:return \"GL_TEXTURE_CUBE_MAP_NEGATIVE_X\";\n-    case GL_TEXTURE_CUBE_MAP_POSITIVE_Y:return \"GL_TEXTURE_CUBE_MAP_POSITIVE_Y\";\n-    case GL_TEXTURE_CUBE_MAP_NEGATIVE_Y:return \"GL_TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n-    case GL_TEXTURE_CUBE_MAP_POSITIVE_Z:return \"GL_TEXTURE_CUBE_MAP_POSITIVE_Z\";\n-    case GL_TEXTURE_CUBE_MAP_NEGATIVE_Z:return \"GL_TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n-    case GL_MAX_CUBE_MAP_TEXTURE_SIZE:  return \"GL_MAX_CUBE_MAP_TEXTURE_SIZE\";\n-\n-\/* TextureUnit *\/\n-    case GL_TEXTURE0:           return \"GL_TEXTURE0\";\n-    case GL_TEXTURE1:           return \"GL_TEXTURE1\";\n-    case GL_TEXTURE2:           return \"GL_TEXTURE2\";\n-    case GL_TEXTURE3:           return \"GL_TEXTURE3\";\n-    case GL_TEXTURE4:           return \"GL_TEXTURE4\";\n-    case GL_TEXTURE5:           return \"GL_TEXTURE5\";\n-    case GL_TEXTURE6:           return \"GL_TEXTURE6\";\n-    case GL_TEXTURE7:           return \"GL_TEXTURE7\";\n-    case GL_TEXTURE8:           return \"GL_TEXTURE8\";\n-    case GL_TEXTURE9:           return \"GL_TEXTURE9\";\n-    case GL_TEXTURE10:          return \"GL_TEXTURE10\";\n-    case GL_TEXTURE11:          return \"GL_TEXTURE11\";\n-    case GL_TEXTURE12:          return \"GL_TEXTURE12\";\n-    case GL_TEXTURE13:          return \"GL_TEXTURE13\";\n-    case GL_TEXTURE14:          return \"GL_TEXTURE14\";\n-    case GL_TEXTURE15:          return \"GL_TEXTURE15\";\n-    case GL_TEXTURE16:          return \"GL_TEXTURE16\";\n-    case GL_TEXTURE17:          return \"GL_TEXTURE17\";\n-    case GL_TEXTURE18:          return \"GL_TEXTURE18\";\n-    case GL_TEXTURE19:          return \"GL_TEXTURE19\";\n-    case GL_TEXTURE20:          return \"GL_TEXTURE20\";\n-    case GL_TEXTURE21:          return \"GL_TEXTURE21\";\n-    case GL_TEXTURE22:          return \"GL_TEXTURE22\";\n-    case GL_TEXTURE23:          return \"GL_TEXTURE23\";\n-    case GL_TEXTURE24:          return \"GL_TEXTURE24\";\n-    case GL_TEXTURE25:          return \"GL_TEXTURE25\";\n-    case GL_TEXTURE26:          return \"GL_TEXTURE26\";\n-    case GL_TEXTURE27:          return \"GL_TEXTURE27\";\n-    case GL_TEXTURE28:          return \"GL_TEXTURE28\";\n-    case GL_TEXTURE29:          return \"GL_TEXTURE29\";\n-    case GL_TEXTURE30:          return \"GL_TEXTURE30\";\n-    case GL_TEXTURE31:          return \"GL_TEXTURE31\";\n-    case GL_ACTIVE_TEXTURE:     return \"GL_ACTIVE_TEXTURE\";\n-\n-\/* TextureWrapMode *\/\n-    case GL_REPEAT:             return \"GL_REPEAT\";\n-    case GL_CLAMP_TO_EDGE:      return \"GL_CLAMP_TO_EDGE\";\n-    case GL_MIRRORED_REPEAT:    return \"GL_MIRRORED_REPEAT\";\n-\n-\/* Uniform Types *\/\n-    case GL_FLOAT_VEC2:         return \"GL_FLOAT_VEC2\";\n-    case GL_FLOAT_VEC3:         return \"GL_FLOAT_VEC3\";\n-    case GL_FLOAT_VEC4:         return \"GL_FLOAT_VEC4\";\n-    case GL_INT_VEC2:           return \"GL_INT_VEC2\";\n-    case GL_INT_VEC3:           return \"GL_INT_VEC3\";\n-    case GL_INT_VEC4:           return \"GL_INT_VEC4\";\n-    case GL_BOOL:               return \"GL_BOOL\";\n-    case GL_BOOL_VEC2:          return \"GL_BOOL_VEC2\";\n-    case GL_BOOL_VEC3:          return \"GL_BOOL_VEC3\";\n-    case GL_BOOL_VEC4:          return \"GL_BOOL_VEC4\";\n-    case GL_FLOAT_MAT2:         return \"GL_FLOAT_MAT2\";\n-    case GL_FLOAT_MAT3:         return \"GL_FLOAT_MAT3\";\n-    case GL_FLOAT_MAT4:         return \"GL_FLOAT_MAT4\";\n-    case GL_SAMPLER_2D:         return \"GL_SAMPLER_2D\";\n-    case GL_SAMPLER_CUBE:       return \"GL_SAMPLER_CUBE\";\n-\n-\/* Vertex Arrays *\/\n-    case GL_VERTEX_ATTRIB_ARRAY_ENABLED:return \"GL_VERTEX_ATTRIB_ARRAY_ENABLED\";\n-    case GL_VERTEX_ATTRIB_ARRAY_SIZE:   return \"GL_VERTEX_ATTRIB_ARRAY_SIZE\";\n-    case GL_VERTEX_ATTRIB_ARRAY_STRIDE: return \"GL_VERTEX_ATTRIB_ARRAY_STRIDE\";\n-    case GL_VERTEX_ATTRIB_ARRAY_TYPE:   return \"GL_VERTEX_ATTRIB_ARRAY_TYPE\";\n-    case GL_VERTEX_ATTRIB_ARRAY_NORMALIZED:return \"GL_VERTEX_ATTRIB_ARRAY_NORMALIZED\";\n-    case GL_VERTEX_ATTRIB_ARRAY_POINTER:return \"GL_VERTEX_ATTRIB_ARRAY_POINTER\";\n-    case GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: return \"GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\";\n-\n-\/* Read Format *\/\n-    case GL_IMPLEMENTATION_COLOR_READ_TYPE:return \"GL_IMPLEMENTATION_COLOR_READ_TYPE\";\n-    case GL_IMPLEMENTATION_COLOR_READ_FORMAT:return \"GL_IMPLEMENTATION_COLOR_READ_FORMAT\";\n-\n-\/* Shader Source *\/\n-    case GL_COMPILE_STATUS:             return \"GL_COMPILE_STATUS\";\n-    case GL_INFO_LOG_LENGTH:            return \"GL_INFO_LOG_LENGTH\";\n-    case GL_SHADER_SOURCE_LENGTH:       return \"GL_SHADER_SOURCE_LENGTH\";\n-    case GL_SHADER_COMPILER:            return \"GL_SHADER_COMPILER\";\n-\n-\/* Shader Binary *\/\n-    case GL_SHADER_BINARY_FORMATS:      return \"GL_SHADER_BINARY_FORMATS\";\n-    case GL_NUM_SHADER_BINARY_FORMATS:  return \"GL_NUM_SHADER_BINARY_FORMATS\";\n-\n-\/* Shader Precision-Specified Types *\/\n-    case GL_LOW_FLOAT:          return \"GL_LOW_FLOAT\";\n-    case GL_MEDIUM_FLOAT:       return \"GL_MEDIUM_FLOAT\";\n-    case GL_HIGH_FLOAT:         return \"GL_HIGH_FLOAT\";\n-    case GL_LOW_INT:            return \"GL_LOW_INT\";\n-    case GL_MEDIUM_INT:         return \"GL_MEDIUM_INT\";\n-    case GL_HIGH_INT:           return \"GL_HIGH_INT\";\n-\n-\/* Framebuffer Object. *\/\n-    case GL_FRAMEBUFFER:        return \"GL_FRAMEBUFFER\";\n-    case GL_RENDERBUFFER:       return \"GL_RENDERBUFFER\";\n-\n-    case GL_RGBA4:              return \"GL_RGBA4\";\n-    case GL_RGB5_A1:            return \"GL_RGB5_A1\";\n-    case GL_RGB565:             return \"GL_RGB565\";\n-    case GL_DEPTH_COMPONENT16:  return \"GL_DEPTH_COMPONENT16\";\n-    case GL_STENCIL_INDEX:      return \"GL_STENCIL_INDEX\";\n-    case GL_STENCIL_INDEX8:     return \"GL_STENCIL_INDEX8\";\n-\n-    case GL_RENDERBUFFER_WIDTH:         return \"GL_RENDERBUFFER_WIDTH\";\n-    case GL_RENDERBUFFER_HEIGHT:        return \"GL_RENDERBUFFER_HEIGHT\";\n-    case GL_RENDERBUFFER_INTERNAL_FORMAT:return \"GL_RENDERBUFFER_INTERNAL_FORMAT\";\n-    case GL_RENDERBUFFER_RED_SIZE:      return \"GL_RENDERBUFFER_RED_SIZE\";\n-    case GL_RENDERBUFFER_GREEN_SIZE:    return \"GL_RENDERBUFFER_GREEN_SIZE\";\n-    case GL_RENDERBUFFER_BLUE_SIZE:     return \"GL_RENDERBUFFER_BLUE_SIZE\";\n-    case GL_RENDERBUFFER_ALPHA_SIZE:    return \"GL_RENDERBUFFER_ALPHA_SIZE\";\n-    case GL_RENDERBUFFER_DEPTH_SIZE:    return \"GL_RENDERBUFFER_DEPTH_SIZE\";\n-    case GL_RENDERBUFFER_STENCIL_SIZE:  return \"GL_RENDERBUFFER_STENCIL_SIZE\";\n-\n-    case GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:         return \"GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\";\n-    case GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:         return \"GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\";\n-    case GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:       return \"GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\";\n-    case GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:return \"GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\";\n-\n-    case GL_COLOR_ATTACHMENT0:          return \"GL_COLOR_ATTACHMENT0\";\n-    case GL_DEPTH_ATTACHMENT:           return \"GL_DEPTH_ATTACHMENT\";\n-    case GL_STENCIL_ATTACHMENT:         return \"GL_STENCIL_ATTACHMENT\";\n-\n-    case GL_FRAMEBUFFER_COMPLETE:       return \"GL_FRAMEBUFFER_COMPLETE\";\n-    case GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT:  return \"GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";\n-    case GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:  return \"GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";\n-    case GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS:          return \"GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";\n-    case GL_FRAMEBUFFER_UNSUPPORTED:            return \"GL_FRAMEBUFFER_UNSUPPORTED\";\n-\n-    case GL_FRAMEBUFFER_BINDING:                return \"GL_FRAMEBUFFER_BINDING\";\n-    case GL_RENDERBUFFER_BINDING:               return \"GL_RENDERBUFFER_BINDING\";\n-    case GL_MAX_RENDERBUFFER_SIZE:              return \"GL_MAX_RENDERBUFFER_SIZE\";\n-\n-    case GL_INVALID_FRAMEBUFFER_OPERATION:      return \"GL_INVALID_FRAMEBUFFER_OPERATION\";\n-    }\n-\n-    static char buf[1024];\n-    static char *ptr = buf;\n-\n-    if (ptr + 16 > buf + sizeof(buf)) ptr = buf;\n-    char *res = ptr;\n-    snprintf(ptr, 16, \"0x%x\", val);\n-    ptr += strlen(ptr) + 1;\n-    return res;\n-}\n","filename":"tools\/gltrace\/enums.c","additions":0,"deletions":555,"binary":false,"changes":555,"status":"deleted"},{"patch":"@@ -1,2522 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#define _GNU_SOURCE\n-#include <dlfcn.h>\n-#include <errno.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-#include \"gles.h\"\n-\n-static void *libGLESv2 = NULL;\n-\n-\/*\n- *    Init\/fini\n- *\/\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    libGLESv2 = dlopen(\"libGLESv2.so\", RTLD_LAZY);\n-}\n-\n-\n-\/*\n- *   OpenGL ES\n- *\/\n-\n-#ifndef GL_BGRA\n-#  ifdef GL_BGRA_EXT\n-#    define GL_BGRA GL_BGRA_EXT\n-#  else\n-#    define GL_BGRA 0x80E1\n-#  endif\n-#endif\n-\n-typedef void             GLvoid;\n-typedef char             GLchar;\n-\n-static int\n-glSizeof(GLenum type)\n-{\n-    switch (type) {\n-    case GL_BYTE:               return sizeof(GLbyte);\n-    case GL_UNSIGNED_BYTE:      return sizeof(GLubyte);\n-    case GL_SHORT:              return sizeof(GLshort);\n-    case GL_UNSIGNED_SHORT:     return sizeof(GLushort);\n-    case GL_INT:                return sizeof(GLint);\n-    case GL_UNSIGNED_INT:       return sizeof(GLuint);\n-    case GL_FLOAT:              return sizeof(GLfloat);\n-    }\n-    fprintf(stderr, \"FATAL: glSizeof: unknown type: 0x%x\\n\", type);\n-    exit(1);\n-\n-    return 0;\n-}\n-\n-static int\n-glCountof(GLenum format)\n-{\n-    switch (format) {\n-    case GL_ALPHA:      return 1;\n-    case GL_RGB:        return 3;\n-    case GL_RGBA:       return 4;\n-    case GL_BGRA:       return 4;\n-    }\n-\n-    fprintf(stderr, \"FATAL: glCountof: unknown format: 0x%x\\n\", format);\n-    exit(1);\n-    return 0;\n-}\n-\n-static int\n-glElementSize(GLenum format, GLenum type)\n-{\n-    switch (type) {\n-        case GL_UNSIGNED_BYTE:\n-            switch (format) {\n-                case GL_ALPHA:          return 1;\n-                case GL_RGB:            return 3;\n-                case GL_RGBA:\n-                case GL_BGRA:           return 4;\n-                case GL_LUMINANCE:      return 1;\n-                case GL_LUMINANCE_ALPHA: return 2;\n-            }\n-            fprintf(stderr, \"FATAL: glElementSize: unknown format: 0x%x\\n\", format);\n-            exit(1);\n-            return 0;\n-        case GL_UNSIGNED_SHORT_4_4_4_4:\n-        case GL_UNSIGNED_SHORT_5_5_5_1:\n-        case GL_UNSIGNED_SHORT_5_6_5:\n-            return 2;\n-#if MACOSX\n-        case GL_UNSIGNED_INT_8_8_8_8_REV:\n-            return 4;\n-#endif\n-    }\n-    fprintf(stderr, \"FATAL: glElementSize: unknown type: 0x%x\\n\", type);\n-    exit(1);\n-    return 0;\n-}\n-\n-static GLuint arrayBufferBinding = 0;\n-static GLuint elementArrayBufferBinding = 0;\n-static GLuint elementArrayBufferData = 0;\n-static GLvoid *elementArrayData = NULL;\n-\n-static GLsizei\n-getVertexCount(GLsizei count, GLenum type, const GLvoid* indices)\n-{\n-#if MT_BUFFER_DATA_FIXED\n-    uint8_t *ptr = (uint8_t*)indices;\n-    if (elementArrayBufferBinding) {\n-        if (elementArrayBufferData != elementArrayBufferBinding) {\n-            fprintf(out, \"FATAL: multiple element arrays not implemented\\n\");\n-            exit(1);\n-        }\n-        ptr = (uint8_t*)elementArrayData + (long)indices;\n-    }\n-\n-    GLsizei i, maxval = 0;\n-    for (i=0; i<count; ++i) {\n-        int val;\n-        switch (type) {\n-            case GL_UNSIGNED_BYTE: val = ptr[i]; break;\n-            case GL_UNSIGNED_SHORT: val = ((uint16_t*)ptr)[i]; break;\n-            case GL_UNSIGNED_INT: val = ((uint32_t*)ptr)[i]; break;\n-            default:\n-                fprintf(out, \"FATAL: glDrawElements: type %d not implemented\\n\", type);\n-                exit(1);\n-                break;\n-        }\n-        if (maxval < val) maxval = val;\n-    }\n-    return maxval + 1;  \/\/ count = max index + 1\n-#else\n-    return count\/6*4; \/* XXX hack for quads only *\/\n-#endif\n-}\n-\n-\/* XXX use glGet(GL_MAX_VERTEX_ATTRIBS) *\/\n-#define MAX_VERTEX_ATTRIBS      128\n-typedef struct VertexAttrib_t {\n-    GLboolean   enabled;\n-    GLint       size;\n-    GLenum      type;\n-    GLboolean   normalized;\n-    GLsizei     stride;\n-    const void  *pointer;\n-} VertexAttrib_t;\n-\n-static VertexAttrib_t vertexAttrib[MAX_VERTEX_ATTRIBS];\n-\n-static void\n-putVertexAttrib(GLsizei count, GLenum type, const GLvoid* indices)\n-{\n-    count = getVertexCount(count, type, indices);\n-    int maxsz = 0;\n-    int i;\n-    for (i=0; i<MAX_VERTEX_ATTRIBS; ++i) {\n-        if (!vertexAttrib[i].enabled) continue;\n-        int sz = glSizeof(vertexAttrib[i].type) * vertexAttrib[i].size *count;\n-        if (maxsz < sz) maxsz = sz;\n-    }\n-    char *buf = alloca(maxsz);\n-\n-    for (i=0; i<MAX_VERTEX_ATTRIBS; ++i) {\n-        if (!vertexAttrib[i].enabled) continue;\n-        char *src = (char*)vertexAttrib[i].pointer;\n-        char *dst = buf;\n-        int elemsz = glSizeof(vertexAttrib[i].type) * vertexAttrib[i].size;\n-        int j, k;\n-        for (j=0; j<count; ++j) {\n-            for (k=0; k<elemsz; ++k) *dst++ = *src++;\n-            if (vertexAttrib[i].stride > 0) {\n-                src += vertexAttrib[i].stride - elemsz;\n-            }\n-        }\n-        putBytes(buf, dst - buf);\n-    }\n-}\n-\n-\n-DEF(void, glActiveTexture)(GLenum texture)\n-{\n-    GLESPROLOG(glActiveTexture);\n-\n-    putCmd(OPC_glActiveTexture);\n-    putInt(texture);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glActiveTexture)(texture);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glAttachShader)(GLuint program, GLuint shader)\n-{\n-    GLESPROLOG(glAttachShader);\n-\n-    putCmd(OPC_glAttachShader);\n-    putInt(program);\n-    putInt(shader);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glAttachShader)(program, shader);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBindAttribLocation) (GLuint program, GLuint index, const GLchar* name)\n-{\n-    GLESPROLOG(glBindAttribLocation);\n-\n-    putCmd(OPC_glBindAttribLocation);\n-    putInt(program);\n-    putInt(index);\n-    putString(name);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBindAttribLocation)(program, index, name);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBindBuffer) (GLenum target, GLuint buffer)\n-{\n-    GLESPROLOG(glBindBuffer);\n-\n-    putCmd(OPC_glBindBuffer);\n-    putInt(target);\n-    putInt(buffer);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBindBuffer)(target, buffer);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    if (target == GL_ARRAY_BUFFER) {\n-        arrayBufferBinding = buffer;\n-    }\n-    else if (target == GL_ELEMENT_ARRAY_BUFFER) {\n-        elementArrayBufferBinding = buffer;\n-    }\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBindFramebuffer) (GLenum target, GLuint framebuffer)\n-{\n-    GLESPROLOG(glBindFramebuffer);\n-\n-    putCmd(OPC_glBindFramebuffer);\n-    putInt(target);\n-    putInt(framebuffer);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBindFramebuffer)(target, framebuffer);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBindRenderbuffer) (GLenum target, GLuint renderbuffer)\n-{\n-    GLESPROLOG(glBindRenderbuffer);\n-\n-    putCmd(OPC_glBindRenderbuffer);\n-    putInt(target);\n-    putInt(renderbuffer);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBindRenderbuffer)(target, renderbuffer);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBindTexture) (GLenum target, GLuint texture)\n-{\n-    GLESPROLOG(glBindTexture);\n-\n-    putCmd(OPC_glBindTexture);\n-    putInt(target);\n-    putInt(texture);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBindTexture)(target, texture);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBlendColor) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)\n-{\n-    GLESPROLOG(glBlendColor);\n-\n-    putCmd(OPC_glBlendColor);\n-    putFloat(red);\n-    putFloat(green);\n-    putFloat(blue);\n-    putFloat(alpha);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBlendColor)(red, green, blue, alpha);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBlendEquation) (GLenum mode)\n-{\n-    GLESPROLOG(glBlendEquation);\n-\n-    putCmd(OPC_glBlendEquation);\n-    putInt(mode);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBlendEquation)(mode);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBlendEquationSeparate) (GLenum modeRGB, GLenum modeAlpha)\n-{\n-    GLESPROLOG(glBlendEquationSeparate);\n-\n-    putCmd(OPC_glBlendEquationSeparate);\n-    putInt(modeRGB);\n-    putInt(modeAlpha);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBlendEquationSeparate)(modeRGB, modeAlpha);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBlendFunc) (GLenum sfactor, GLenum dfactor)\n-{\n-    GLESPROLOG(glBlendFunc);\n-\n-    putCmd(OPC_glBlendFunc);\n-    putInt(sfactor);\n-    putInt(dfactor);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBlendFunc)(sfactor, dfactor);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBlendFuncSeparate) (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)\n-{\n-    GLESPROLOG(glBlendFuncSeparate);\n-\n-    putCmd(OPC_glBlendFuncSeparate);\n-    putInt(srcRGB);\n-    putInt(dstRGB);\n-    putInt(srcAlpha);\n-    putInt(dstAlpha);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBlendFuncSeparate)(srcRGB, dstRGB, srcAlpha, dstAlpha);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBufferData) (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)\n-{\n-    GLESPROLOG(glBufferData);\n-\n-    putCmd(OPC_glBufferData);\n-    putInt(target);\n-    putInt(size);\n-    putBytes(data, size);\n-    putInt(usage);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBufferData)(target, size, data, usage);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)\n-{\n-    GLESPROLOG(glBufferSubData);\n-\n-    putCmd(OPC_glBufferSubData);\n-    putInt(target);\n-    putInt(offset);\n-    putInt(size);\n-    putBytes(data, size);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBufferSubData)(target, offset, size, data);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(GLenum, glCheckFramebufferStatus) (GLenum target)\n-{\n-    GLESPROLOG(glCheckFramebufferStatus);\n-\n-    putCmd(OPC_glCheckFramebufferStatus);\n-    putInt(target);\n-\n-    uint64_t bgn = gethrtime();\n-    GLenum res = ORIG(glCheckFramebufferStatus)(target);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glClear) (GLbitfield mask)\n-{\n-    GLESPROLOG(glClear);\n-\n-    putCmd(OPC_glClear);\n-    putInt(mask);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glClear)(mask);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glClearColor) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)\n-{\n-    GLESPROLOG(glClearColor);\n-\n-    putCmd(OPC_glClearColor);\n-    putFloat(red);\n-    putFloat(green);\n-    putFloat(blue);\n-    putFloat(alpha);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glClearColor)(red, green, blue, alpha);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-#if !MACOSX\n-DEF(void, glClearDepthf) (GLclampf depth)\n-{\n-    GLESPROLOG(glClearDepthf);\n-\n-    putCmd(OPC_glClearDepthf);\n-    putFloat(depth);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glClearDepthf)(depth);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-#endif\n-\n-DEF(void, glClearStencil) (GLint s)\n-{\n-    GLESPROLOG(glClearStencil);\n-\n-    putCmd(OPC_glClearStencil);\n-    putInt(s);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glClearStencil)(s);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glColorMask) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)\n-{\n-    GLESPROLOG(glColorMask);\n-\n-    putCmd(OPC_glColorMask);\n-    putInt(red);\n-    putInt(green);\n-    putInt(blue);\n-    putInt(alpha);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glColorMask)(red, green, blue, alpha);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glCompileShader) (GLuint shader)\n-{\n-    GLESPROLOG(glCompileShader);\n-\n-    putCmd(OPC_glCompileShader);\n-    putInt(shader);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glCompileShader)(shader);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glCompressedTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data)\n-{\n-    GLESPROLOG(glCompressedTexImage2D);\n-\n-    putCmd(OPC_glCompressedTexImage2D);\n-    putInt(target);\n-    putInt(level);\n-    putInt(internalformat);\n-    putInt(width);\n-    putInt(height);\n-    putInt(border);\n-    putInt(imageSize);\n-    putBytes(data, imageSize);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glCompressedTexImage2D)(target, level, internalformat, width, height, border, imageSize, data);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glCompressedTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data)\n-{\n-    GLESPROLOG(glCompressedTexSubImage2D);\n-\n-    putCmd(OPC_glCompressedTexSubImage2D);\n-    putInt(target);\n-    putInt(level);\n-    putInt(xoffset);\n-    putInt(yoffset);\n-    putInt(width);\n-    putInt(height);\n-    putInt(format);\n-    putInt(imageSize);\n-    putBytes(data, imageSize);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glCompressedTexSubImage2D)(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glCopyTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)\n-{\n-    GLESPROLOG(glCopyTexImage2D);\n-\n-    putCmd(OPC_glCopyTexImage2D);\n-    putInt(target);\n-    putInt(level);\n-    putInt(internalformat);\n-    putInt(x);\n-    putInt(y);\n-    putInt(width);\n-    putInt(height);\n-    putInt(border);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glCopyTexImage2D)(target, level, internalformat, x, y, width, height, border);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glCopyTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)\n-{\n-    GLESPROLOG(glCopyTexSubImage2D);\n-\n-    putCmd(OPC_glCopyTexSubImage2D);\n-    putInt(target);\n-    putInt(level);\n-    putInt(xoffset);\n-    putInt(yoffset);\n-    putInt(x);\n-    putInt(y);\n-    putInt(width);\n-    putInt(height);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glCopyTexSubImage2D)(target, level, xoffset, yoffset, x, y, width, height);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(GLuint, glCreateProgram) (void)\n-{\n-    GLESPROLOG(glCreateProgram);\n-\n-    putCmd(OPC_glCreateProgram);\n-\n-    uint64_t bgn = gethrtime();\n-    GLuint res = ORIG(glCreateProgram)();\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(GLuint, glCreateShader) (GLenum type)\n-{\n-    GLESPROLOG(glCreateShader);\n-\n-    putCmd(OPC_glCreateShader);\n-    putInt(type);\n-\n-    uint64_t bgn = gethrtime();\n-    GLuint res = ORIG(glCreateShader)(type);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glCullFace) (GLenum mode)\n-{\n-    GLESPROLOG(glCullFace);\n-\n-    putCmd(OPC_glCullFace);\n-    putInt(mode);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glCullFace)(mode);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteBuffers) (GLsizei n, const GLuint* buffers)\n-{\n-    GLESPROLOG(glDeleteBuffers);\n-\n-    putCmd(OPC_glDeleteBuffers);\n-    putInt(n);\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(buffers[i]);\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteBuffers)(n, buffers);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteFramebuffers) (GLsizei n, const GLuint* framebuffers)\n-{\n-    GLESPROLOG(glDeleteFramebuffers);\n-\n-    putCmd(OPC_glDeleteFramebuffers);\n-    putInt(n);\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(framebuffers[i]);\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteFramebuffers)(n, framebuffers);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteProgram) (GLuint program)\n-{\n-    GLESPROLOG(glDeleteProgram);\n-\n-    putCmd(OPC_glDeleteProgram);\n-    putInt(program);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteProgram)(program);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteRenderbuffers) (GLsizei n, const GLuint* renderbuffers)\n-{\n-    GLESPROLOG(glDeleteRenderbuffers);\n-\n-    putCmd(OPC_glDeleteRenderbuffers);\n-    putInt(n);\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(renderbuffers[i]);\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteRenderbuffers)(n, renderbuffers);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteShader) (GLuint shader)\n-{\n-    GLESPROLOG(glDeleteShader);\n-\n-    putCmd(OPC_glDeleteShader);\n-    putInt(shader);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteShader)(shader);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteTextures) (GLsizei n, const GLuint* textures)\n-{\n-    GLESPROLOG(glDeleteTextures);\n-\n-    putCmd(OPC_glDeleteTextures);\n-    putInt(n);\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(textures[i]);\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteTextures)(n, textures);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDepthFunc) (GLenum func)\n-{\n-    GLESPROLOG(glDepthFunc);\n-\n-    putCmd(OPC_glDepthFunc);\n-    putInt(func);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDepthFunc)(func);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDepthMask) (GLboolean flag)\n-{\n-    GLESPROLOG(glDepthMask);\n-\n-    putCmd(OPC_glDepthMask);\n-    putInt(flag);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDepthMask)(flag);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-#if !MACOSX\n-DEF(void, glDepthRangef) (GLclampf zNear, GLclampf zFar)\n-{\n-    GLESPROLOG(glDepthRangef);\n-\n-    putCmd(OPC_glDepthRangef);\n-    putFloat(zNear);\n-    putFloat(zFar);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDepthRangef)(zNear, zFar);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-#endif\n-\n-DEF(void, glDetachShader) (GLuint program, GLuint shader)\n-{\n-    GLESPROLOG(glDetachShader);\n-\n-    putCmd(OPC_glDetachShader);\n-    putInt(program);\n-    putInt(shader);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDetachShader)(program, shader);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDisable) (GLenum cap)\n-{\n-    GLESPROLOG(glDisable);\n-\n-    putCmd(OPC_glDisable);\n-    putInt(cap);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDisable)(cap);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDisableVertexAttribArray) (GLuint index)\n-{\n-    GLESPROLOG(glDisableVertexAttribArray);\n-\n-    putCmd(OPC_glDisableVertexAttribArray);\n-    putInt(index);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDisableVertexAttribArray)(index);\n-    uint64_t end = gethrtime();\n-\n-    vertexAttrib[index].enabled = 0;\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDrawArrays) (GLenum mode, GLint first, GLsizei count)\n-{\n-    GLESPROLOG(glDrawArrays);\n-\n-    putCmd(OPC_glDrawArrays);\n-    putInt(mode);\n-    putInt(first);\n-    putInt(count);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDrawArrays)(mode, first, count);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDrawElements) (GLenum mode, GLsizei count, GLenum type, const GLvoid* indices)\n-{\n-    GLESPROLOG(glDrawElements);\n-\n-    putCmd(OPC_glDrawElements);\n-    putInt(mode);\n-    putInt(count);\n-    putInt(type);\n-    if (elementArrayBufferBinding) {\n-        putPtr(indices);\n-    }\n-    else {\n-        putBytes(indices, count * glSizeof(type));\n-    }\n-    if (!arrayBufferBinding) {\n-        putVertexAttrib(count, type, indices);\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDrawElements)(mode, count, type, indices);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glEnable) (GLenum cap)\n-{\n-    GLESPROLOG(glEnable);\n-\n-    putCmd(OPC_glEnable);\n-    putInt(cap);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glEnable)(cap);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glEnableVertexAttribArray) (GLuint index)\n-{\n-    GLESPROLOG(glEnableVertexAttribArray);\n-\n-    putCmd(OPC_glEnableVertexAttribArray);\n-    putInt(index);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glEnableVertexAttribArray)(index);\n-    uint64_t end = gethrtime();\n-\n-    vertexAttrib[index].enabled = 1;\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glFinish) (void)\n-{\n-    GLESPROLOG(glFinish);\n-\n-    putCmd(OPC_glFinish);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glFinish)();\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glFlush) (void)\n-{\n-    GLESPROLOG(glFlush);\n-\n-    putCmd(OPC_glFlush);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glFlush)();\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glFramebufferRenderbuffer) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)\n-{\n-    GLESPROLOG(glFramebufferRenderbuffer);\n-\n-    putCmd(OPC_glFramebufferRenderbuffer);\n-    putInt(target);\n-    putInt(attachment);\n-    putInt(renderbuffertarget);\n-    putInt(renderbuffer);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glFramebufferRenderbuffer)(target, attachment, renderbuffertarget, renderbuffer);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glFramebufferTexture2D) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)\n-{\n-    GLESPROLOG(glFramebufferTexture2D);\n-\n-    putCmd(OPC_glFramebufferTexture2D);\n-    putInt(target);\n-    putInt(attachment);\n-    putInt(textarget);\n-    putInt(texture);\n-    putInt(level);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glFramebufferTexture2D)(target, attachment, textarget, texture, level);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glFrontFace) (GLenum mode)\n-{\n-    GLESPROLOG(glFrontFace);\n-\n-    putCmd(OPC_glFrontFace);\n-    putInt(mode);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glFrontFace)(mode);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGenBuffers) (GLsizei n, GLuint* buffers)\n-{\n-    GLESPROLOG(glGenBuffers);\n-\n-    putCmd(OPC_glGenBuffers);\n-    putInt(n);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGenBuffers)(n, buffers);\n-    uint64_t end = gethrtime();\n-\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(buffers[i]);\n-    }\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGenerateMipmap) (GLenum target)\n-{\n-    GLESPROLOG(glGenerateMipmap);\n-\n-    putCmd(OPC_glGenerateMipmap);\n-    putInt(target);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGenerateMipmap)(target);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGenFramebuffers) (GLsizei n, GLuint* framebuffers)\n-{\n-    GLESPROLOG(glGenFramebuffers);\n-\n-    putCmd(OPC_glGenFramebuffers);\n-    putInt(n);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGenFramebuffers)(n, framebuffers);\n-    uint64_t end = gethrtime();\n-\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(framebuffers[i]);\n-    }\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGenRenderbuffers) (GLsizei n, GLuint* renderbuffers)\n-{\n-    GLESPROLOG(glGenRenderbuffers);\n-\n-    putCmd(OPC_glGenRenderbuffers);\n-    putInt(n);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGenRenderbuffers)(n, renderbuffers);\n-    uint64_t end = gethrtime();\n-\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(renderbuffers[i]);\n-    }\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGenTextures) (GLsizei n, GLuint* textures)\n-{\n-    GLESPROLOG(glGenTextures);\n-\n-    putCmd(OPC_glGenTextures);\n-    putInt(n);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGenTextures)(n, textures);\n-    uint64_t end = gethrtime();\n-\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(textures[i]);\n-    }\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetActiveAttrib) (GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)\n-{\n-    GLESPROLOG(glGetActiveAttrib);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetActiveUniform) (GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)\n-{\n-    GLESPROLOG(glGetActiveUniform);\n-\n-    putCmd(OPC_glGetActiveUniform);\n-    putInt(program);\n-    putInt(index);\n-    putInt(bufsize);\n-    putPtr(length);\n-    putPtr(size);\n-    putPtr(type);\n-    putPtr(name);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetActiveUniform)(program, index, bufsize, length, size, type, name);\n-    uint64_t end = gethrtime();\n-\n-    if (length) putInt(*length);\n-    if (size)   putInt(*size);\n-    if (type)   putInt(*type);\n-    if (name)   putString(name);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetAttachedShaders) (GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders)\n-{\n-    GLESPROLOG(glGetAttachedShaders);\n-\n-    putCmd(OPC_glGetAttachedShaders);\n-    putInt(program);\n-    putInt(maxcount);\n-    putPtr(count);\n-    putPtr(shaders);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetAttachedShaders)(program, maxcount, count, shaders);\n-    uint64_t end = gethrtime();\n-\n-    if (count) {\n-        putInt(*count);\n-        if (shaders) {\n-            int i;\n-            for (i=0; i<*count; ++i) putInt(shaders[i]);\n-        }\n-    }\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(int, glGetAttribLocation) (GLuint program, const GLchar* name)\n-{\n-    GLESPROLOG(glGetAttribLocation);\n-\n-    putCmd(OPC_glGetAttribLocation);\n-    putInt(program);\n-    putString(name);\n-\n-    uint64_t bgn = gethrtime();\n-    int res = ORIG(glGetAttribLocation)(program, name);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glGetBooleanv) (GLenum pname, GLboolean* params)\n-{\n-    GLESPROLOG(glGetBooleanv);\n-\n-    putCmd(OPC_glGetBooleanv);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetBooleanv)(pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putInt(params == NULL ? 0 : *params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetBufferParameteriv) (GLenum target, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetBufferParameteriv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLenum, glGetError) (void)\n-{\n-    GLESPROLOG(glGetError);\n-\n-    putCmd(OPC_glGetError);\n-\n-    uint64_t bgn = gethrtime();\n-    GLenum res = ORIG(glGetError)();\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glGetFloatv) (GLenum pname, GLfloat* params)\n-{\n-    GLESPROLOG(glGetFloatv);\n-\n-    putCmd(OPC_glGetFloatv);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetFloatv)(pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putFloatPtr(params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetFramebufferAttachmentParameteriv) (GLenum target, GLenum attachment, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetFramebufferAttachmentParameteriv);\n-\n-    putCmd(OPC_glGetFramebufferAttachmentParameteriv);\n-    putInt(target);\n-    putInt(attachment);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetFramebufferAttachmentParameteriv)(target, attachment, pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putInt(params == NULL ? 0 : *params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetIntegerv) (GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetIntegerv);\n-\n-    putCmd(OPC_glGetIntegerv);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetIntegerv)(pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putIntPtr(params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetProgramiv) (GLuint program, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetProgramiv);\n-\n-    putCmd(OPC_glGetProgramiv);\n-    putInt(program);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetProgramiv)(program, pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putInt(params == NULL ? 0 : *params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetProgramInfoLog) (GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog)\n-{\n-    GLESPROLOG(glGetProgramInfoLog);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetRenderbufferParameteriv) (GLenum target, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetRenderbufferParameteriv);\n-\n-    putCmd(OPC_glGetRenderbufferParameteriv);\n-    putInt(target);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetRenderbufferParameteriv)(target, pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putInt(params == NULL ? 0 : *params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetShaderiv) (GLuint shader, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetShaderiv);\n-\n-    putCmd(OPC_glGetShaderiv);\n-    putInt(shader);\n-    putInt(pname);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGetShaderiv)(shader, pname, params);\n-    uint64_t end = gethrtime();\n-\n-    putInt(params == NULL ? 0 : *params);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGetShaderInfoLog) (GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog)\n-{\n-    GLESPROLOG(glGetShaderInfoLog);\n-    NOT_IMPLEMENTED();\n-}\n-\n-#if !MACOSX\n-DEF(void, glGetShaderPrecisionFormat) (GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision)\n-{\n-    GLESPROLOG(glGetShaderPrecisionFormat);\n-    NOT_IMPLEMENTED();\n-}\n-#endif\n-\n-DEF(void, glGetShaderSource) (GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source)\n-{\n-    GLESPROLOG(glGetShaderSource);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(const GLubyte*, glGetString) (GLenum name)\n-{\n-    GLESPROLOG(glGetString);\n-\n-    putCmd(OPC_glGetString);\n-    putInt(name);\n-\n-    uint64_t bgn = gethrtime();\n-    const GLubyte* res = ORIG(glGetString)(name);\n-    uint64_t end = gethrtime();\n-\n-    putString(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glGetTexParameterfv) (GLenum target, GLenum pname, GLfloat* params)\n-{\n-    GLESPROLOG(glGetTexParameterfv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetTexParameteriv) (GLenum target, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetTexParameteriv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetUniformfv) (GLuint program, GLint location, GLfloat* params)\n-{\n-    GLESPROLOG(glGetUniformfv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetUniformiv) (GLuint program, GLint location, GLint* params)\n-{\n-    GLESPROLOG(glGetUniformiv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(int, glGetUniformLocation) (GLuint program, const GLchar* name)\n-{\n-    GLESPROLOG(glGetUniformLocation);\n-\n-    putCmd(OPC_glGetUniformLocation);\n-    putInt(program);\n-    putString(name);\n-\n-    uint64_t bgn = gethrtime();\n-    int res = ORIG(glGetUniformLocation)(program, name);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glGetVertexAttribfv) (GLuint index, GLenum pname, GLfloat* params)\n-{\n-    GLESPROLOG(glGetVertexAttribfv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetVertexAttribiv) (GLuint index, GLenum pname, GLint* params)\n-{\n-    GLESPROLOG(glGetVertexAttribiv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetVertexAttribPointerv) (GLuint index, GLenum pname, GLvoid** pointer)\n-{\n-    GLESPROLOG(glGetVertexAttribPointerv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glHint) (GLenum target, GLenum mode)\n-{\n-    GLESPROLOG(glHint);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsBuffer) (GLuint buffer)\n-{\n-    GLESPROLOG(glIsBuffer);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsEnabled) (GLenum cap)\n-{\n-    GLESPROLOG(glIsEnabled);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsFramebuffer) (GLuint framebuffer)\n-{\n-    GLESPROLOG(glIsFramebuffer);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsProgram) (GLuint program)\n-{\n-    GLESPROLOG(glIsProgram);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsRenderbuffer) (GLuint renderbuffer)\n-{\n-    GLESPROLOG(glIsRenderbuffer);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsShader) (GLuint shader)\n-{\n-    GLESPROLOG(glIsShader);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsTexture) (GLuint texture)\n-{\n-    GLESPROLOG(glIsTexture);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glLineWidth) (GLfloat width)\n-{\n-    GLESPROLOG(glLineWidth);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glLinkProgram) (GLuint program)\n-{\n-    GLESPROLOG(glLinkProgram);\n-\n-    putCmd(OPC_glLinkProgram);\n-    putInt(program);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glLinkProgram)(program);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glPixelStorei) (GLenum pname, GLint param)\n-{\n-    GLESPROLOG(glPixelStorei);\n-\n-    putCmd(OPC_glPixelStorei);\n-    putInt(pname);\n-    putInt(param);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glPixelStorei)(pname, param);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glPolygonOffset) (GLfloat factor, GLfloat units)\n-{\n-    GLESPROLOG(glPolygonOffset);\n-\n-    putCmd(OPC_glPolygonOffset);\n-    putFloat(factor);\n-    putFloat(units);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glPolygonOffset)(factor, units);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glReadPixels) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels)\n-{\n-    GLESPROLOG(glReadPixels);\n-    NOT_IMPLEMENTED();\n-}\n-\n-#if !MACOSX\n-DEF(void, glReleaseShaderCompiler) (void)\n-{\n-    GLESPROLOG(glReleaseShaderCompiler);\n-    NOT_IMPLEMENTED();\n-}\n-#endif\n-\n-DEF(void, glRenderbufferStorage) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height)\n-{\n-    GLESPROLOG(glRenderbufferStorage);\n-\n-    putCmd(OPC_glRenderbufferStorage);\n-    putInt(target);\n-    putInt(internalformat);\n-    putInt(width);\n-    putInt(height);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glRenderbufferStorage)(target, internalformat, width, height);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glSampleCoverage) (GLclampf value, GLboolean invert)\n-{\n-    GLESPROLOG(glSampleCoverage);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glScissor) (GLint x, GLint y, GLsizei width, GLsizei height)\n-{\n-    GLESPROLOG(glScissor);\n-\n-    putCmd(OPC_glScissor);\n-    putInt(x);\n-    putInt(y);\n-    putInt(width);\n-    putInt(height);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glScissor)(x, y, width, height);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glShaderBinary) (GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length)\n-{\n-    GLESPROLOG(glShaderBinary);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glShaderSource) (GLuint shader, GLsizei count, const GLchar** string, const GLint* length)\n-{\n-    GLESPROLOG(glShaderSource);\n-\n-    putCmd(OPC_glShaderSource);\n-    putInt(shader);\n-    putInt(count);\n-    int i;\n-    for (i=0; i<count; ++i) {\n-        int len = length == NULL ? 0 : length[i];\n-        putInt(len);\n-        if (len > 0) {\n-            putBytes(string[i], len);\n-        }\n-        else {\n-            putString(string[i]);\n-        }\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glShaderSource)(shader, count, string, length);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glStencilFunc) (GLenum func, GLint ref, GLuint mask)\n-{\n-    GLESPROLOG(glStencilFunc);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glStencilFuncSeparate) (GLenum face, GLenum func, GLint ref, GLuint mask)\n-{\n-    GLESPROLOG(glStencilFuncSeparate);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glStencilMask) (GLuint mask)\n-{\n-    GLESPROLOG(glStencilMask);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glStencilMaskSeparate) (GLenum face, GLuint mask)\n-{\n-    GLESPROLOG(glStencilMaskSeparate);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glStencilOp) (GLenum fail, GLenum zfail, GLenum zpass)\n-{\n-    GLESPROLOG(glStencilOp);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glStencilOpSeparate) (GLenum face, GLenum fail, GLenum zfail, GLenum zpass)\n-{\n-    GLESPROLOG(glStencilOpSeparate);\n-    NOT_IMPLEMENTED();\n-}\n-\n-#ifdef RASPBERRYPI\n-DEF(void, glTexImage2D) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)\n-#else\n-DEF(void, glTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)\n-#endif\n-{\n-    GLESPROLOG(glTexImage2D);\n-\n-    putCmd(OPC_glTexImage2D);\n-    putInt(target);\n-    putInt(level);\n-    putInt(internalformat);\n-    putInt(width);\n-    putInt(height);\n-    putInt(border);\n-    putInt(format);\n-    putInt(type);\n-    putBytes(pixels, width * height * glElementSize(format, type));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glTexImage2D)(target, level, internalformat, width, height, border, format, type, pixels);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glTexParameterf) (GLenum target, GLenum pname, GLfloat param)\n-{\n-    GLESPROLOG(glTexParameterf);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glTexParameterfv) (GLenum target, GLenum pname, const GLfloat* params)\n-{\n-    GLESPROLOG(glTexParameterfv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glTexParameteri) (GLenum target, GLenum pname, GLint param)\n-{\n-    GLESPROLOG(glTexParameteri);\n-\n-    putCmd(OPC_glTexParameteri);\n-    putInt(target);\n-    putInt(pname);\n-    putInt(param);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glTexParameteri)(target, pname, param);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glTexParameteriv) (GLenum target, GLenum pname, const GLint* params)\n-{\n-    GLESPROLOG(glTexParameteriv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels)\n-{\n-    GLESPROLOG(glTexSubImage2D);\n-\n-    putCmd(OPC_glTexSubImage2D);\n-    putInt(target);\n-    putInt(level);\n-    putInt(xoffset);\n-    putInt(yoffset);\n-    putInt(width);\n-    putInt(height);\n-    putInt(format);\n-    putInt(type);\n-    putBytes(pixels, width * height * glElementSize(format, type));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glTexSubImage2D)(target, level, xoffset, yoffset, width, height, format, type, pixels);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform1f) (GLint location, GLfloat x)\n-{\n-    GLESPROLOG(glUniform1f);\n-\n-    putCmd(OPC_glUniform1f);\n-    putInt(location);\n-    putFloat(x);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform1f)(location, x);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform1fv) (GLint location, GLsizei count, const GLfloat* v)\n-{\n-    GLESPROLOG(glUniform1fv);\n-\n-    putCmd(OPC_glUniform1fv);\n-    putInt(location);\n-    putInt(count);\n-    putBytes(v, count * sizeof(GLfloat));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform1fv)(location, count, v);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform1i) (GLint location, GLint x)\n-{\n-    GLESPROLOG(glUniform1i);\n-\n-    putCmd(OPC_glUniform1i);\n-    putInt(location);\n-    putInt(x);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform1i)(location, x);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform1iv) (GLint location, GLsizei count, const GLint* v)\n-{\n-    GLESPROLOG(glUniform1iv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glUniform2f) (GLint location, GLfloat x, GLfloat y)\n-{\n-    GLESPROLOG(glUniform2f);\n-\n-    putCmd(OPC_glUniform2f);\n-    putInt(location);\n-    putFloat(x);\n-    putFloat(y);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform2f)(location, x, y);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform2fv) (GLint location, GLsizei count, const GLfloat* v)\n-{\n-    GLESPROLOG(glUniform2fv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glUniform2i) (GLint location, GLint x, GLint y)\n-{\n-    GLESPROLOG(glUniform2i);\n-\n-    putCmd(OPC_glUniform2i);\n-    putInt(location);\n-    putInt(x);\n-    putInt(y);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform2i)(location, x, y);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform2iv) (GLint location, GLsizei count, const GLint* v)\n-{\n-    GLESPROLOG(glUniform2iv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glUniform3f) (GLint location, GLfloat x, GLfloat y, GLfloat z)\n-{\n-    GLESPROLOG(glUniform3f);\n-\n-    putCmd(OPC_glUniform3f);\n-    putInt(location);\n-    putFloat(x);\n-    putFloat(y);\n-    putFloat(z);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform3f)(location, x, y, z);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform3fv) (GLint location, GLsizei count, const GLfloat* v)\n-{\n-    GLESPROLOG(glUniform3fv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glUniform3i) (GLint location, GLint x, GLint y, GLint z)\n-{\n-    GLESPROLOG(glUniform3i);\n-\n-    putCmd(OPC_glUniform3i);\n-    putInt(location);\n-    putInt(x);\n-    putInt(y);\n-    putInt(z);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform3i)(location, x, y, z);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform3iv) (GLint location, GLsizei count, const GLint* v)\n-{\n-    GLESPROLOG(glUniform3iv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glUniform4f) (GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)\n-{\n-    GLESPROLOG(glUniform4f);\n-\n-    putCmd(OPC_glUniform4f);\n-    putInt(location);\n-    putFloat(x);\n-    putFloat(y);\n-    putFloat(z);\n-    putFloat(w);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform4f)(location, x, y, z, w);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform4fv) (GLint location, GLsizei count, const GLfloat* v)\n-{\n-    GLESPROLOG(glUniform4fv);\n-\n-    putCmd(OPC_glUniform4fv);\n-    putInt(location);\n-    putInt(count);\n-    putBytes(v, count * sizeof(GLfloat));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform4fv)(location, count, v);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform4i) (GLint location, GLint x, GLint y, GLint z, GLint w)\n-{\n-    GLESPROLOG(glUniform4i);\n-\n-    putCmd(OPC_glUniform4i);\n-    putInt(location);\n-    putInt(x);\n-    putInt(y);\n-    putInt(z);\n-    putInt(w);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform4i)(location, x, y, z, w);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniform4iv) (GLint location, GLsizei count, const GLint* v)\n-{\n-    GLESPROLOG(glUniform4iv);\n-\n-    putCmd(OPC_glUniform4iv);\n-    putInt(location);\n-    putInt(count);\n-    putBytes(v, count * sizeof(GLint));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniform4iv)(location, count, v);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniformMatrix2fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)\n-{\n-    GLESPROLOG(glUniformMatrix2fv);\n-\n-    putCmd(OPC_glUniformMatrix2fv);\n-    putInt(location);\n-    putInt(count);\n-    putInt(transpose);\n-    putBytes(value, 4 * count * sizeof(GLfloat));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniformMatrix2fv)(location, count, transpose, value);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniformMatrix3fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)\n-{\n-    GLESPROLOG(glUniformMatrix3fv);\n-\n-    putCmd(OPC_glUniformMatrix3fv);\n-    putInt(location);\n-    putInt(count);\n-    putInt(transpose);\n-    putBytes(value, 9 * count * sizeof(GLfloat));\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniformMatrix3fv)(location, count, transpose, value);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUniformMatrix4fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)\n-{\n-    GLESPROLOG(glUniformMatrix4fv);\n-\n-    putCmd(OPC_glUniformMatrix4fv);\n-    putInt(location);\n-    putInt(count);\n-    putInt(transpose);\n-    putBytes(value, count * sizeof(GLfloat) * 16);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUniformMatrix4fv)(location, count, transpose, value);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glUseProgram) (GLuint program)\n-{\n-    GLESPROLOG(glUseProgram);\n-\n-    putCmd(OPC_glUseProgram);\n-    putInt(program);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glUseProgram)(program);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glValidateProgram) (GLuint program)\n-{\n-    GLESPROLOG(glValidateProgram);\n-\n-    putCmd(OPC_glValidateProgram);\n-    putInt(program);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glValidateProgram)(program);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glVertexAttrib1f) (GLuint indx, GLfloat x)\n-{\n-    GLESPROLOG(glVertexAttrib1f);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib1fv) (GLuint indx, const GLfloat* values)\n-{\n-    GLESPROLOG(glVertexAttrib1fv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib2f) (GLuint indx, GLfloat x, GLfloat y)\n-{\n-    GLESPROLOG(glVertexAttrib2f);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib2fv) (GLuint indx, const GLfloat* values)\n-{\n-    GLESPROLOG(glVertexAttrib2fv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib3f) (GLuint indx, GLfloat x, GLfloat y, GLfloat z)\n-{\n-    GLESPROLOG(glVertexAttrib3f);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib3fv) (GLuint indx, const GLfloat* values)\n-{\n-    GLESPROLOG(glVertexAttrib3fv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib4f) (GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w)\n-{\n-    GLESPROLOG(glVertexAttrib4f);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttrib4fv) (GLuint indx, const GLfloat* values)\n-{\n-    GLESPROLOG(glVertexAttrib4fv);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glVertexAttribPointer) (GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr)\n-{\n-    GLESPROLOG(glVertexAttribPointer);\n-\n-    putCmd(OPC_glVertexAttribPointer);\n-    putInt(indx);\n-    putInt(size);\n-    putInt(type);\n-    putInt(normalized);\n-    putInt(stride);\n-    putPtr(ptr);\n-    vertexAttrib[indx].size = size;\n-    vertexAttrib[indx].type = type;\n-    vertexAttrib[indx].normalized = normalized;\n-    vertexAttrib[indx].stride = stride;\n-    vertexAttrib[indx].pointer = ptr;\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glVertexAttribPointer)(indx, size, type, normalized, stride, ptr);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glViewport) (GLint x, GLint y, GLsizei width, GLsizei height)\n-{\n-    GLESPROLOG(glViewport);\n-\n-    putCmd(OPC_glViewport);\n-    putInt(x);\n-    putInt(y);\n-    putInt(width);\n-    putInt(height);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glViewport)(x, y, width, height);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-#if MACOSX\n-\/*\n- * Mac OS X extensions\n- *\/\n-\n-DEF(void, glBegin) (GLenum mode)\n-{\n-    GLESPROLOG(glBegin);\n-\n-    putCmd(OPC_glBegin);\n-    putInt(mode);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBegin)(mode);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glEnd) ()\n-{\n-    GLESPROLOG(glEnd);\n-    putCmd(OPC_glEnd);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glEnd)();\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(GLboolean, glIsRenderbufferEXT) (GLuint renderbuffer)\n-{\n-    GLESPROLOG(glIsRenderbufferEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glBindRenderbufferEXT) (GLenum target, GLuint renderbuffer)\n-{\n-    GLESPROLOG(glIsRenderbufferEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glDeleteRenderbuffersEXT) (GLsizei n, const GLuint *renderbuffers)\n-{\n-    GLESPROLOG(glDeleteRenderbuffersEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGenRenderbuffersEXT) (GLsizei n, GLuint *renderbuffers)\n-{\n-    GLESPROLOG(glGenRenderbuffersEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glRenderbufferStorageEXT) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height)\n-{\n-    GLESPROLOG(glRenderbufferStorageEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetRenderbufferParameterivEXT) (GLenum target, GLenum pname, GLint *params)\n-{\n-    GLESPROLOG(glGetRenderbufferParameterivEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsFramebufferEXT) (GLuint framebuffer)\n-{\n-    GLESPROLOG(glIsFramebufferEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glBindFramebufferEXT) (GLenum target, GLuint framebuffer)\n-{\n-    GLESPROLOG(glBindFramebufferEXT);\n-\n-    putCmd(OPC_glBindFramebufferEXT);\n-    putInt(target);\n-    putInt(framebuffer);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glBindFramebufferEXT)(target, framebuffer);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glDeleteFramebuffersEXT) (GLsizei n, const GLuint *framebuffers)\n-{\n-    GLESPROLOG(glDeleteFramebuffersEXT);\n-\n-    putCmd(OPC_glDeleteFramebuffersEXT);\n-    putInt(n);\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(framebuffers[i]);\n-    }\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glDeleteFramebuffersEXT)(n, framebuffers);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glGenFramebuffersEXT) (GLsizei n, GLuint *framebuffers)\n-{\n-    GLESPROLOG(glGenFramebuffersEXT);\n-\n-    putCmd(OPC_glGenFramebuffersEXT);\n-    putInt(n);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glGenFramebuffersEXT)(n, framebuffers);\n-    uint64_t end = gethrtime();\n-\n-    int i;\n-    for (i=0; i<n; ++i) {\n-        putInt(framebuffers[i]);\n-    }\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(GLenum, glCheckFramebufferStatusEXT) (GLenum target)\n-{\n-    GLESPROLOG(glCheckFramebufferStatusEXT);\n-\n-    putCmd(OPC_glCheckFramebufferStatusEXT);\n-    putInt(target);\n-\n-    uint64_t bgn = gethrtime();\n-    GLenum res = ORIG(glCheckFramebufferStatusEXT)(target);\n-    uint64_t end = gethrtime();\n-\n-    putInt(res);\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-\n-    return res;\n-}\n-\n-DEF(void, glFramebufferTexture1DEXT) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)\n-{\n-    GLESPROLOG(glFramebufferTexture1DEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glFramebufferTexture2DEXT) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)\n-{\n-    GLESPROLOG(glFramebufferTexture2DEXT);\n-\n-    putCmd(OPC_glFramebufferTexture2DEXT);\n-    putInt(target);\n-    putInt(attachment);\n-    putInt(textarget);\n-    putInt(texture);\n-    putInt(level);\n-\n-    uint64_t bgn = gethrtime();\n-    ORIG(glFramebufferTexture2DEXT)(target, attachment, textarget, texture, level);\n-    uint64_t end = gethrtime();\n-\n-    putTime(bgn, end);\n-\n-    GLESEPILOG();\n-}\n-\n-DEF(void, glFramebufferTexture3DEXT) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)\n-{\n-    GLESPROLOG(glFramebufferTexture3DEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glFramebufferRenderbufferEXT) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)\n-{\n-    GLESPROLOG(glFramebufferRenderbufferEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGetFramebufferAttachmentParameterivEXT) (GLenum target, GLenum attachment, GLenum pname, GLint *params)\n-{\n-    GLESPROLOG(glGetFramebufferAttachmentParameterivEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGenerateMipmapEXT) (GLenum target)\n-{\n-    GLESPROLOG(glGenerateMipmapEXT);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glGenFencesAPPLE) (GLsizei n, GLint *fences)\n-{\n-    GLESPROLOG(glGenFencesAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glDeleteFencesAPPLE) (GLsizei n, const GLint *fences)\n-{\n-    GLESPROLOG(glDeleteFencesAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glSetFenceAPPLE) (GLint fence)\n-{\n-    GLESPROLOG(glSetFenceAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glIsFenceAPPLE) (GLint fence)\n-{\n-    GLESPROLOG(glIsFenceAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glTestFenceAPPLE) (GLint fence)\n-{\n-    GLESPROLOG(glTestFenceAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glFinishFenceAPPLE) (GLint fence)\n-{\n-    GLESPROLOG(glFinishFenceAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(GLboolean, glTestObjectAPPLE) (GLenum object, GLint name)\n-{\n-    GLESPROLOG(glTestObjectAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-DEF(void, glFinishObjectAPPLE) (GLenum object, GLint name)\n-{\n-    GLESPROLOG(glFinishObjectAPPLE);\n-    NOT_IMPLEMENTED();\n-}\n-\n-#endif \/* MACOSX *\/\n-\n","filename":"tools\/gltrace\/gles.c","additions":0,"deletions":2522,"binary":false,"changes":2522,"status":"deleted"},{"patch":"@@ -1,219 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef GLTRACE_GLES_H\n-#define GLTRACE_GLES_H\n-\n-\n-#if linux\n-#include <GLES2\/gl2.h>\n-#include <GLES2\/gl2ext.h>\n-#include \"trace.h\"\n-\n-#define DEF(type, func) type func\n-#define ORIG(func) orig_##func\n-\n-#define NOT_IMPLEMENTED() \\\n-    { \\\n-        fprintf(stderr, \"FATAL: not implemented %s\\n\", __FUNCTION__); \\\n-        exit(1); \\\n-    }\n-\n-#define GLESPROLOG(func) \\\n-    static proto_##func orig_##func = NULL; \\\n-    if (orig_##func == NULL) { \\\n-        DLFCN_HOOK_POP(); \\\n-        orig_##func = dlsym(libGLESv2, #func); \\\n-        DLFCN_HOOK_PUSH(); \\\n-    }\n-\n-#define GLESEPILOG()\n-\n-typedef void(*proto_glActiveTexture)(GLenum texture);\n-typedef void(*proto_glAttachShader) (GLuint program, GLuint shader);\n-typedef void(*proto_glBindAttribLocation) (GLuint program, GLuint index, const GLchar* name);\n-typedef void(*proto_glBindBuffer) (GLenum target, GLuint buffer);\n-typedef void(*proto_glBindFramebuffer) (GLenum target, GLuint framebuffer);\n-typedef void(*proto_glBindRenderbuffer) (GLenum target, GLuint renderbuffer);\n-typedef void(*proto_glBindTexture) (GLenum target, GLuint texture);\n-typedef void(*proto_glBlendColor) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);\n-typedef void(*proto_glBlendEquation) (GLenum mode);\n-typedef void(*proto_glBlendEquationSeparate) (GLenum modeRGB, GLenum modeAlpha);\n-typedef void(*proto_glBlendFunc) (GLenum sfactor, GLenum dfactor);\n-typedef void(*proto_glBlendFuncSeparate) (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\n-typedef void(*proto_glBufferData) (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);\n-typedef void(*proto_glBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);\n-typedef GLenum(*proto_glCheckFramebufferStatus) (GLenum target);\n-typedef void(*proto_glClear) (GLbitfield mask);\n-typedef void(*proto_glClearColor) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);\n-typedef void(*proto_glClearDepthf) (GLclampf depth);\n-typedef void(*proto_glClearStencil) (GLint s);\n-typedef void(*proto_glColorMask) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);\n-typedef void(*proto_glCompileShader) (GLuint shader);\n-typedef void(*proto_glCompressedTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);\n-typedef void(*proto_glCompressedTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);\n-typedef void(*proto_glCopyTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);\n-typedef void(*proto_glCopyTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\n-typedef GLuint(*proto_glCreateProgram) (void);\n-typedef GLuint(*proto_glCreateShader) (GLenum type);\n-typedef void(*proto_glCullFace) (GLenum mode);\n-typedef void(*proto_glDeleteBuffers) (GLsizei n, const GLuint* buffers);\n-typedef void(*proto_glDeleteFramebuffers) (GLsizei n, const GLuint* framebuffers);\n-typedef void(*proto_glDeleteProgram) (GLuint program);\n-typedef void(*proto_glDeleteRenderbuffers) (GLsizei n, const GLuint* renderbuffers);\n-typedef void(*proto_glDeleteShader) (GLuint shader);\n-typedef void(*proto_glDeleteTextures) (GLsizei n, const GLuint* textures);\n-typedef void(*proto_glDepthFunc) (GLenum func);\n-typedef void(*proto_glDepthMask) (GLboolean flag);\n-typedef void(*proto_glDepthRangef) (GLclampf zNear, GLclampf zFar);\n-typedef void(*proto_glDetachShader) (GLuint program, GLuint shader);\n-typedef void(*proto_glDisable) (GLenum cap);\n-typedef void(*proto_glDisableVertexAttribArray) (GLuint index);\n-typedef void(*proto_glDrawArrays) (GLenum mode, GLint first, GLsizei count);\n-typedef void(*proto_glDrawElements) (GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);\n-typedef void(*proto_glEnable) (GLenum cap);\n-typedef void(*proto_glEnableVertexAttribArray) (GLuint index);\n-typedef void(*proto_glFinish) (void);\n-typedef void(*proto_glFlush) (void);\n-typedef void(*proto_glFramebufferRenderbuffer) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\n-typedef void(*proto_glFramebufferTexture2D) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\n-typedef void(*proto_glFrontFace) (GLenum mode);\n-typedef void(*proto_glGenBuffers) (GLsizei n, GLuint* buffers);\n-typedef void(*proto_glGenerateMipmap) (GLenum target);\n-typedef void(*proto_glGenFramebuffers) (GLsizei n, GLuint* framebuffers);\n-typedef void(*proto_glGenRenderbuffers) (GLsizei n, GLuint* renderbuffers);\n-typedef void(*proto_glGenTextures) (GLsizei n, GLuint* textures);\n-typedef void(*proto_glGetActiveAttrib) (GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);\n-typedef void(*proto_glGetActiveUniform) (GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);\n-typedef void(*proto_glGetAttachedShaders) (GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders);\n-typedef int(*proto_glGetAttribLocation) (GLuint program, const GLchar* name);\n-typedef void(*proto_glGetBooleanv) (GLenum pname, GLboolean* params);\n-typedef void(*proto_glGetBufferParameteriv) (GLenum target, GLenum pname, GLint* params);\n-typedef GLenum(*proto_glGetError) (void);\n-typedef void(*proto_glGetFloatv) (GLenum pname, GLfloat* params);\n-typedef void(*proto_glGetFramebufferAttachmentParameteriv) (GLenum target, GLenum attachment, GLenum pname, GLint* params);\n-typedef void(*proto_glGetIntegerv) (GLenum pname, GLint* params);\n-typedef void(*proto_glGetProgramiv) (GLuint program, GLenum pname, GLint* params);\n-typedef void(*proto_glGetProgramInfoLog) (GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog);\n-typedef void(*proto_glGetRenderbufferParameteriv) (GLenum target, GLenum pname, GLint* params);\n-typedef void(*proto_glGetShaderiv) (GLuint shader, GLenum pname, GLint* params);\n-typedef void(*proto_glGetShaderInfoLog) (GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog);\n-typedef void(*proto_glGetShaderPrecisionFormat) (GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);\n-typedef void(*proto_glGetShaderSource) (GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source);\n-typedef const GLubyte*(*proto_glGetString) (GLenum name);\n-typedef void(*proto_glGetTexParameterfv) (GLenum target, GLenum pname, GLfloat* params);\n-typedef void(*proto_glGetTexParameteriv) (GLenum target, GLenum pname, GLint* params);\n-typedef void(*proto_glGetUniformfv) (GLuint program, GLint location, GLfloat* params);\n-typedef void(*proto_glGetUniformiv) (GLuint program, GLint location, GLint* params);\n-typedef int(*proto_glGetUniformLocation) (GLuint program, const GLchar* name);\n-typedef void(*proto_glGetVertexAttribfv) (GLuint index, GLenum pname, GLfloat* params);\n-typedef void(*proto_glGetVertexAttribiv) (GLuint index, GLenum pname, GLint* params);\n-typedef void(*proto_glGetVertexAttribPointerv) (GLuint index, GLenum pname, GLvoid** pointer);\n-typedef void(*proto_glHint) (GLenum target, GLenum mode);\n-typedef GLboolean(*proto_glIsBuffer) (GLuint buffer);\n-typedef GLboolean(*proto_glIsEnabled) (GLenum cap);\n-typedef GLboolean(*proto_glIsFramebuffer) (GLuint framebuffer);\n-typedef GLboolean(*proto_glIsProgram) (GLuint program);\n-typedef GLboolean(*proto_glIsRenderbuffer) (GLuint renderbuffer);\n-typedef GLboolean(*proto_glIsShader) (GLuint shader);\n-typedef GLboolean(*proto_glIsTexture) (GLuint texture);\n-typedef void(*proto_glLineWidth) (GLfloat width);\n-typedef void(*proto_glLinkProgram) (GLuint program);\n-typedef void(*proto_glPixelStorei) (GLenum pname, GLint param);\n-typedef void(*proto_glPolygonOffset) (GLfloat factor, GLfloat units);\n-typedef void(*proto_glReadPixels) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);\n-typedef void(*proto_glReleaseShaderCompiler) (void);\n-typedef void(*proto_glRenderbufferStorage) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);\n-typedef void(*proto_glSampleCoverage) (GLclampf value, GLboolean invert);\n-typedef void(*proto_glScissor) (GLint x, GLint y, GLsizei width, GLsizei height);\n-typedef void(*proto_glShaderBinary) (GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length);\n-typedef void(*proto_glShaderSource) (GLuint shader, GLsizei count, const GLchar** string, const GLint* length);\n-typedef void(*proto_glStencilFunc) (GLenum func, GLint ref, GLuint mask);\n-typedef void(*proto_glStencilFuncSeparate) (GLenum face, GLenum func, GLint ref, GLuint mask);\n-typedef void(*proto_glStencilMask) (GLuint mask);\n-typedef void(*proto_glStencilMaskSeparate) (GLenum face, GLuint mask);\n-typedef void(*proto_glStencilOp) (GLenum fail, GLenum zfail, GLenum zpass);\n-typedef void(*proto_glStencilOpSeparate) (GLenum face, GLenum fail, GLenum zfail, GLenum zpass);\n-typedef void(*proto_glTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);\n-typedef void(*proto_glTexParameterf) (GLenum target, GLenum pname, GLfloat param);\n-typedef void(*proto_glTexParameterfv) (GLenum target, GLenum pname, const GLfloat* params);\n-typedef void(*proto_glTexParameteri) (GLenum target, GLenum pname, GLint param);\n-typedef void(*proto_glTexParameteriv) (GLenum target, GLenum pname, const GLint* params);\n-typedef void(*proto_glTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);\n-typedef void(*proto_glUniform1f) (GLint location, GLfloat x);\n-typedef void(*proto_glUniform1fv) (GLint location, GLsizei count, const GLfloat* v);\n-typedef void(*proto_glUniform1i) (GLint location, GLint x);\n-typedef void(*proto_glUniform1iv) (GLint location, GLsizei count, const GLint* v);\n-typedef void(*proto_glUniform2f) (GLint location, GLfloat x, GLfloat y);\n-typedef void(*proto_glUniform2fv) (GLint location, GLsizei count, const GLfloat* v);\n-typedef void(*proto_glUniform2i) (GLint location, GLint x, GLint y);\n-typedef void(*proto_glUniform2iv) (GLint location, GLsizei count, const GLint* v);\n-typedef void(*proto_glUniform3f) (GLint location, GLfloat x, GLfloat y, GLfloat z);\n-typedef void(*proto_glUniform3fv) (GLint location, GLsizei count, const GLfloat* v);\n-typedef void(*proto_glUniform3i) (GLint location, GLint x, GLint y, GLint z);\n-typedef void(*proto_glUniform3iv) (GLint location, GLsizei count, const GLint* v);\n-typedef void(*proto_glUniform4f) (GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\n-typedef void(*proto_glUniform4fv) (GLint location, GLsizei count, const GLfloat* v);\n-typedef void(*proto_glUniform4i) (GLint location, GLint x, GLint y, GLint z, GLint w);\n-typedef void(*proto_glUniform4iv) (GLint location, GLsizei count, const GLint* v);\n-typedef void(*proto_glUniformMatrix2fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);\n-typedef void(*proto_glUniformMatrix3fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);\n-typedef void(*proto_glUniformMatrix4fv) (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);\n-typedef void(*proto_glUseProgram) (GLuint program);\n-typedef void(*proto_glValidateProgram) (GLuint program);\n-typedef void(*proto_glVertexAttrib1f) (GLuint indx, GLfloat x);\n-typedef void(*proto_glVertexAttrib1fv) (GLuint indx, const GLfloat* values);\n-typedef void(*proto_glVertexAttrib2f) (GLuint indx, GLfloat x, GLfloat y);\n-typedef void(*proto_glVertexAttrib2fv) (GLuint indx, const GLfloat* values);\n-typedef void(*proto_glVertexAttrib3f) (GLuint indx, GLfloat x, GLfloat y, GLfloat z);\n-typedef void(*proto_glVertexAttrib3fv) (GLuint indx, const GLfloat* values);\n-typedef void(*proto_glVertexAttrib4f) (GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\n-typedef void(*proto_glVertexAttrib4fv) (GLuint indx, const GLfloat* values);\n-typedef void(*proto_glVertexAttribPointer) (GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr);\n-typedef void(*proto_glViewport) (GLint x, GLint y, GLsizei width, GLsizei height);\n-\n-#endif \/*linux *\/\n-\n-\n-#if MACOSX\n-\n-#include <OpenGL\/gl.h>\n-#include <OpenGL\/glext.h>\n-\n-#define DEF(type, func) type gltrace_##func\n-#define ORIG(func) func\n-\n-#define NOT_IMPLEMENTED() \\\n-{ \\\n-fprintf(stderr, \"FATAL: not implemented %s\\n\", __FUNCTION__); \\\n-exit(1); \\\n-}\n-\n-#define GLESPROLOG(func)\n-#define GLESEPILOG()\n-\n-#endif \/* MACOSX *\/\n-\n-#endif \/* GLTRACE_GLES_H *\/\n","filename":"tools\/gltrace\/gles.h","additions":0,"deletions":219,"binary":false,"changes":219,"status":"deleted"},{"patch":"@@ -1,443 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#define _GNU_SOURCE\n-#include <fcntl.h>\n-#include <pthread.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <sys\/mman.h>\n-#include <sys\/stat.h>\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-\n-#define TRACEFNAME \"gl.trace\"\n-#define CHUNKSZ 0x100000\n-#define MARKER 0xdeadbead\n-\n-static int ioMode;\n-static int wsize = 0;\n-static char *fileName = NULL;\n-static char *filePtr = MAP_FAILED;\n-static char *endPtr;\n-static char *curPtr;\n-static size_t fileSize;\n-static off_t fileOffset;\n-\n-void\n-iolib_init(int mode, const char *fname)\n-{\n-    fileName = strdup(fname ? fname : TRACEFNAME);\n-    ioMode = mode;\n-\n-    if (ioMode == IO_WRITE) {\n-        int fd = open(fileName, O_RDWR|O_CREAT|O_TRUNC,\n-                  S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH);\n-        if (fd < 0) {\n-            fprintf(stderr, \"FATAL: can't create file %s\\n\", fileName);\n-            exit(1);\n-        }\n-        close(fd);\n-        curPtr = endPtr = NULL;\n-        fileOffset = (off_t)0;\n-        fileSize = (size_t)0;\n-\n-        putInt(OPC_VERSION);\n-        putInt(VERSION_MAJOR);\n-        putInt(VERSION_MINOR);\n-        putInt(VERSION_REV);\n-        putInt(sizeof(void*));\n-    }\n-    else if (ioMode == IO_READ) {\n-        struct stat sb;\n-\n-        int fd = open(fileName, O_RDONLY);\n-        if (fstat(fd, &sb) == -1) {\n-            fprintf(stderr, \"FATAL: can't open file %s\\n\", fileName);\n-            exit(1);\n-        }\n-        fileSize = sb.st_size;\n-        filePtr = (char*)mmap(NULL, fileSize, PROT_READ, MAP_POPULATE | MAP_PRIVATE, fd, (off_t)0);\n-        close(fd);\n-        if (filePtr == MAP_FAILED) {\n-            fprintf(stderr, \"FATAL: can't mmap file %s\\n\", fileName);\n-            exit(1);\n-        }\n-        curPtr = filePtr;\n-        endPtr = filePtr + fileSize;\n-\n-        int version = getInt();\n-        if (version != OPC_VERSION) {\n-            fprintf(stderr, \"ERROR: not a trace: %s\\n\", fileName);\n-            exit(1);\n-        }\n-        int major = getInt();\n-        int minor = getInt();\n-        int rev   = getInt();\n-        if (major != VERSION_MAJOR || minor > VERSION_MINOR) {\n-            fprintf(stderr, \"ERROR: version mismatch: current %d.%d.%d, trace %d.%d.%d (%s)\\n\",\n-                    VERSION_MAJOR, VERSION_MINOR, VERSION_REV,\n-                    major, minor, rev, fileName);\n-        }\n-        wsize = getInt();\n-    }\n-}\n-\n-void\n-iolib_fini()\n-{\n-    if (fileSize > 0) {\n-        munmap(filePtr, fileSize);\n-    }\n-    if (ioMode == IO_WRITE && curPtr < endPtr) {\n-        truncate(fileName, fileOffset - (endPtr - curPtr));\n-    }\n-    free(fileName);\n-}\n-\n-\/*\n- *    Write\n- *\/\n-\n-static void\n-enlarge()\n-{\n-    if (fileSize > 0) {\n-        munmap(filePtr, fileSize);\n-    }\n-\n-    int fd = open(fileName, O_RDWR);\n-    if (fd < 0) {\n-        fprintf(stderr, \"FATAL: can't create file %s\\n\", fileName);\n-        exit(1);\n-    }\n-    char zero = (char)0;\n-    int n = pwrite(fd, &zero, sizeof(zero), fileOffset + CHUNKSZ - sizeof(zero));\n-    if (n != sizeof(zero)) {\n-        fprintf(stderr, \"FATAL: can't allocate file %s\\n\", fileName);\n-        exit(1);\n-    }\n-    filePtr = (char*)mmap(NULL, CHUNKSZ, PROT_READ|PROT_WRITE, MAP_SHARED, fd, fileOffset);\n-    close(fd);\n-    if (filePtr == MAP_FAILED) {\n-        fprintf(stderr, \"FATAL: can't mmap file %s\\n\", fileName);\n-        exit(1);\n-    }\n-    fileSize = CHUNKSZ;\n-    fileOffset += CHUNKSZ;\n-    curPtr = filePtr;\n-    endPtr = filePtr + CHUNKSZ;\n-}\n-\n-static pthread_mutex_t memlock = PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP;\n-static pthread_t curThread = (pthread_t)0;\n-static int reentrance = 0;\n-\n-void\n-putCmd(int cmd)\n-{\n-    pthread_mutex_lock(&memlock);\n-    if (++reentrance > 1) return;\n-\n-    pthread_t thr = pthread_self();\n-    if (thr != curThread) {\n-        putInt(OPC_THREAD);\n-        putPtr((void*)thr);\n-        curThread = thr;\n-    }\n-\n-    putInt(cmd);\n-}\n-\n-void\n-putInt(int arg)\n-{\n-    if (reentrance > 1) return;\n-    if (curPtr >= endPtr) enlarge();\n-    *(int*)curPtr = arg;\n-    curPtr += sizeof(int);\n-}\n-\n-void\n-putIntPtr(const int *arg)\n-{\n-    if (reentrance > 1) return;\n-    if (curPtr >= endPtr) enlarge();\n-    int val = 0;\n-    if (arg == NULL || *arg == MARKER) {\n-        *(int*)curPtr = MARKER;\n-        curPtr += sizeof(int);\n-        if (curPtr >= endPtr) enlarge();\n-        if (arg) val = MARKER;\n-    }\n-    else {\n-        val = *arg;\n-    }\n-    *(int*)curPtr = val;\n-    curPtr += sizeof(int);\n-}\n-\n-void\n-putFloat(float arg)\n-{\n-    if (reentrance > 1) return;\n-    if (curPtr >= endPtr) enlarge();\n-    *(float*)curPtr = arg;\n-    curPtr += sizeof(float);\n-}\n-\n-void\n-putFloatPtr(const float *arg)\n-{\n-    if (reentrance > 1) return;\n-    if (curPtr >= endPtr) enlarge();\n-    float val = 0.;\n-    if (arg == NULL || *arg == (float)MARKER) {\n-        *(float*)curPtr = (float)MARKER;\n-        curPtr += sizeof(float);\n-        if (curPtr >= endPtr) enlarge();\n-        if (arg) val = (float)MARKER;\n-    }\n-    else {\n-        val = *arg;\n-    }\n-    *(float*)curPtr = val;\n-    curPtr += sizeof(float);\n-}\n-\n-void\n-putLongLong(long long arg)\n-{\n-    if (reentrance > 1) return;\n-    int left = sizeof(arg);\n-    char *s = (char*)&arg;\n-    while (left > 0) {\n-        int avail = endPtr - curPtr;\n-        if (left <= avail) {\n-            while (left--) *curPtr++ = *s++;\n-        }\n-        else {\n-            left -= avail;\n-            while (avail--) *curPtr++ = *s++;\n-            enlarge();\n-        }\n-    }\n-}\n-\n-void\n-putPtr(const void *arg)\n-{\n-    if (reentrance > 1) return;\n-    int left = sizeof(arg);\n-    char *s = (char*)&arg;\n-    while (left > 0) {\n-        int avail = endPtr - curPtr;\n-        if (left <= avail) {\n-            while (left--) *curPtr++ = *s++;\n-        }\n-        else {\n-            left -= avail;\n-            while (avail--) *curPtr++ = *s++;\n-            enlarge();\n-        }\n-    }\n-}\n-\n-void\n-putString(const char *str)\n-{\n-    if (reentrance > 1) return;\n-    if (str == NULL) {\n-        putInt(0);\n-        return;\n-    }\n-\n-    int left = strlen(str) + 1;\n-    while (left > 0) {\n-        int avail = endPtr - curPtr;\n-        if (left <= avail) {\n-            while (left--) *curPtr++ = *str++;\n-        }\n-        else {\n-            left -= avail;\n-            while (avail--) *curPtr++ = *str++;\n-            enlarge();\n-        }\n-    }\n-    while ((long)curPtr & (sizeof(int)-1)) *curPtr++ = (char)0;\n-}\n-\n-void\n-putBytes(const void *data, int size)\n-{\n-    if (reentrance > 1) return;\n-    int left = size;\n-    if (data == NULL) left = 0;\n-    char *src = (char*)data;\n-    putInt(left);\n-    while (left > 0) {\n-        int avail = endPtr - curPtr;\n-        if (left <= avail) {\n-            while (left--) *curPtr++ = *src++;\n-        }\n-        else {\n-            left -= avail;\n-            while (avail--) *curPtr++ = *src++;\n-            enlarge();\n-        }\n-    }\n-    while ((long)curPtr & (sizeof(int)-1)) *curPtr++ = (char)0;\n-}\n-\n-void\n-putTime(uint64_t bgn, uint64_t end)\n-{\n-    putLongLong(bgn);\n-    putLongLong(end);\n-    endCmd();\n-}\n-\n-void\n-endCmd()\n-{\n-    --reentrance;\n-    pthread_mutex_unlock(&memlock);\n-}\n-\n-\/*\n- *    Read\n- *\/\n-\n-int\n-getCmd()\n-{\n-    if (curPtr + sizeof(int) > endPtr) return OPC_EOF;\n-    int cmd = *(int*)curPtr;\n-    curPtr += sizeof(int);\n-    return cmd;\n-}\n-\n-int\n-getInt()\n-{\n-    if (curPtr + sizeof(int) > endPtr) return 0;\n-    int val = *(int*)curPtr;\n-    curPtr += sizeof(int);\n-    return val;\n-}\n-\n-const int *\n-getIntPtr()\n-{\n-    if (curPtr + sizeof(int) > endPtr) return 0;\n-    const int *res = (int*)curPtr;\n-    curPtr += sizeof(int);\n-    int val = *res;\n-    if (val == MARKER) {\n-        res = (int*)curPtr;\n-        curPtr += sizeof(int);\n-        val = *res;\n-        if (val == 0) return NULL;\n-    }\n-    return res;\n-}\n-\n-float\n-getFloat()\n-{\n-    if (curPtr + sizeof(float) > endPtr) return 0.;\n-    float val = *(float*)curPtr;\n-    curPtr += sizeof(float);\n-    return val;\n-}\n-\n-const float *\n-getFloatPtr()\n-{\n-    if (curPtr + sizeof(int) > endPtr) return 0;\n-    const float *res = (float*)curPtr;\n-    curPtr += sizeof(float);\n-    float val = *res;\n-    if (val == (float)MARKER) {\n-        res = (float*)curPtr;\n-        val = *res;\n-        if (val == 0.) return NULL;\n-    }\n-    return res;\n-}\n-\n-long long\n-getLongLong()\n-{\n-    if (curPtr + sizeof(long long) > endPtr) return 0L;\n-    long long val = *(long long*)curPtr;\n-    curPtr += sizeof(long long);\n-    return val;\n-}\n-\n-uint64_t\n-getPtr()\n-{\n-    if (curPtr + wsize > endPtr) return (uint64_t)0;\n-    uint64_t val = wsize == 4 ? *(int32_t*)curPtr : *(int64_t*)curPtr;\n-    curPtr += wsize;\n-    return val;\n-}\n-\n-const char      *\n-getString()\n-{\n-    int len = strlen(curPtr) + 1;\n-    if (curPtr + len > endPtr) return NULL;\n-    len += sizeof(int) - 1;\n-    len -= len % sizeof(int);\n-    char *str = curPtr;\n-    curPtr += len;\n-    return str;\n-}\n-\n-const void      *\n-getBytes()\n-{\n-    if (curPtr + sizeof(int) > endPtr) return NULL;\n-    int size = *(int*)curPtr;\n-    curPtr += sizeof(int);\n-\n-    if (size <= 0 || curPtr + size > endPtr) return NULL;\n-    void *data = curPtr;\n-    size += sizeof(int) - 1;\n-    size -= size % sizeof(int);\n-    curPtr += size;\n-    return data;\n-}\n-\n-void\n-getTime(uint64_t *bgn, uint64_t *end)\n-{\n-    *bgn = getLongLong();\n-    *end = getLongLong();\n-}\n","filename":"tools\/gltrace\/iolib.c","additions":0,"deletions":443,"binary":false,"changes":443,"status":"deleted"},{"patch":"@@ -1,276 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef GLTRACE_IOLIB_H\n-#define GLTRACE_IOLIB_H\n-\n-#include <stdint.h>\n-\n-#define VERSION_MAJOR   1\n-#define VERSION_MINOR   0\n-#define VERSION_REV     0\n-\n-#define OPC_NONE                                        0\n-\n-#define OPC_VERSION                 0xdeafca1f\n-#define OPC_MARK                    1\n-#define OPC_THREAD                  2\n-\n-\/* OpenGL ES *\/\n-#define OPC_START                                       100\n-#define OPC_glActiveTexture                             OPC_START+0\n-#define OPC_glAttachShader                              OPC_START+1\n-#define OPC_glBindAttribLocation                        OPC_START+2\n-#define OPC_glBindBuffer                                OPC_START+3\n-#define OPC_glBindFramebuffer                           OPC_START+4\n-#define OPC_glBindRenderbuffer                          OPC_START+5\n-#define OPC_glBindTexture                               OPC_START+6\n-#define OPC_glBlendColor                                OPC_START+7\n-#define OPC_glBlendEquation                             OPC_START+8\n-#define OPC_glBlendEquationSeparate                     OPC_START+9\n-#define OPC_glBlendFunc                                 OPC_START+10\n-#define OPC_glBlendFuncSeparate                         OPC_START+11\n-#define OPC_glBufferData                                OPC_START+12\n-#define OPC_glBufferSubData                             OPC_START+13\n-#define OPC_glCheckFramebufferStatus                    OPC_START+14\n-#define OPC_glClear                                     OPC_START+15\n-#define OPC_glClearColor                                OPC_START+16\n-#define OPC_glClearDepthf                               OPC_START+17\n-#define OPC_glClearStencil                              OPC_START+18\n-#define OPC_glColorMask                                 OPC_START+19\n-#define OPC_glCompileShader                             OPC_START+20\n-#define OPC_glCompressedTexImage2D                      OPC_START+21\n-#define OPC_glCompressedTexSubImage2D                   OPC_START+22\n-#define OPC_glCopyTexImage2D                            OPC_START+23\n-#define OPC_glCopyTexSubImage2D                         OPC_START+24\n-#define OPC_glCreateProgram                             OPC_START+25\n-#define OPC_glCreateShader                              OPC_START+26\n-#define OPC_glCullFace                                  OPC_START+27\n-#define OPC_glDeleteBuffers                             OPC_START+28\n-#define OPC_glDeleteFramebuffers                        OPC_START+29\n-#define OPC_glDeleteProgram                             OPC_START+30\n-#define OPC_glDeleteRenderbuffers                       OPC_START+31\n-#define OPC_glDeleteShader                              OPC_START+32\n-#define OPC_glDeleteTextures                            OPC_START+33\n-#define OPC_glDepthFunc                                 OPC_START+34\n-#define OPC_glDepthMask                                 OPC_START+35\n-#define OPC_glDepthRangef                               OPC_START+36\n-#define OPC_glDetachShader                              OPC_START+37\n-#define OPC_glDisable                                   OPC_START+38\n-#define OPC_glDisableVertexAttribArray                  OPC_START+39\n-#define OPC_glDrawArrays                                OPC_START+40\n-#define OPC_glDrawElements                              OPC_START+41\n-#define OPC_glEnable                                    OPC_START+42\n-#define OPC_glEnableVertexAttribArray                   OPC_START+43\n-#define OPC_glFinish                                    OPC_START+44\n-#define OPC_glFlush                                     OPC_START+45\n-#define OPC_glFramebufferRenderbuffer                   OPC_START+46\n-#define OPC_glFramebufferTexture2D                      OPC_START+47\n-#define OPC_glFrontFace                                 OPC_START+48\n-#define OPC_glGenBuffers                                OPC_START+49\n-#define OPC_glGenerateMipmap                            OPC_START+50\n-#define OPC_glGenFramebuffers                           OPC_START+51\n-#define OPC_glGenRenderbuffers                          OPC_START+52\n-#define OPC_glGenTextures                               OPC_START+53\n-#define OPC_glGetActiveAttrib                           OPC_START+54\n-#define OPC_glGetActiveUniform                          OPC_START+55\n-#define OPC_glGetAttachedShaders                        OPC_START+56\n-#define OPC_glGetAttribLocation                         OPC_START+57\n-#define OPC_glGetBooleanv                               OPC_START+58\n-#define OPC_glGetBufferParameteriv                      OPC_START+59\n-#define OPC_glGetError                                  OPC_START+60\n-#define OPC_glGetFloatv                                 OPC_START+61\n-#define OPC_glGetFramebufferAttachmentParameteriv       OPC_START+62\n-#define OPC_glGetIntegerv                               OPC_START+63\n-#define OPC_glGetProgramiv                              OPC_START+64\n-#define OPC_glGetProgramInfoLog                         OPC_START+65\n-#define OPC_glGetRenderbufferParameteriv                OPC_START+66\n-#define OPC_glGetShaderiv                               OPC_START+67\n-#define OPC_glGetShaderInfoLog                          OPC_START+68\n-#define OPC_glGetShaderPrecisionFormat                  OPC_START+69\n-#define OPC_glGetShaderSource                           OPC_START+70\n-#define OPC_glGetString                                 OPC_START+71\n-#define OPC_glGetTexParameterfv                         OPC_START+72\n-#define OPC_glGetTexParameteriv                         OPC_START+73\n-#define OPC_glGetUniformfv                              OPC_START+74\n-#define OPC_glGetUniformiv                              OPC_START+75\n-#define OPC_glGetUniformLocation                        OPC_START+76\n-#define OPC_glGetVertexAttribfv                         OPC_START+77\n-#define OPC_glGetVertexAttribiv                         OPC_START+78\n-#define OPC_glGetVertexAttribPointerv                   OPC_START+79\n-#define OPC_glHint                                      OPC_START+80\n-#define OPC_glIsBuffer                                  OPC_START+81\n-#define OPC_glIsEnabled                                 OPC_START+82\n-#define OPC_glIsFramebuffer                             OPC_START+83\n-#define OPC_glIsProgram                                 OPC_START+84\n-#define OPC_glIsRenderbuffer                            OPC_START+85\n-#define OPC_glIsShader                                  OPC_START+86\n-#define OPC_glIsTexture                                 OPC_START+87\n-#define OPC_glLineWidth                                 OPC_START+88\n-#define OPC_glLinkProgram                               OPC_START+89\n-#define OPC_glPixelStorei                               OPC_START+90\n-#define OPC_glPolygonOffset                             OPC_START+91\n-#define OPC_glReadPixels                                OPC_START+92\n-#define OPC_glReleaseShaderCompiler                     OPC_START+93\n-#define OPC_glRenderbufferStorage                       OPC_START+94\n-#define OPC_glSampleCoverage                            OPC_START+95\n-#define OPC_glScissor                                   OPC_START+96\n-#define OPC_glShaderBinary                              OPC_START+97\n-#define OPC_glShaderSource                              OPC_START+98\n-#define OPC_glStencilFunc                               OPC_START+99\n-#define OPC_glStencilFuncSeparate                       OPC_START+100\n-#define OPC_glStencilMask                               OPC_START+101\n-#define OPC_glStencilMaskSeparate                       OPC_START+102\n-#define OPC_glStencilOp                                 OPC_START+103\n-#define OPC_glStencilOpSeparate                         OPC_START+104\n-#define OPC_glTexImage2D                                OPC_START+105\n-#define OPC_glTexParameterf                             OPC_START+106\n-#define OPC_glTexParameterfv                            OPC_START+107\n-#define OPC_glTexParameteri                             OPC_START+108\n-#define OPC_glTexParameteriv                            OPC_START+109\n-#define OPC_glTexSubImage2D                             OPC_START+110\n-#define OPC_glUniform1f                                 OPC_START+111\n-#define OPC_glUniform1fv                                OPC_START+112\n-#define OPC_glUniform1i                                 OPC_START+113\n-#define OPC_glUniform1iv                                OPC_START+114\n-#define OPC_glUniform2f                                 OPC_START+115\n-#define OPC_glUniform2fv                                OPC_START+116\n-#define OPC_glUniform2i                                 OPC_START+117\n-#define OPC_glUniform2iv                                OPC_START+118\n-#define OPC_glUniform3f                                 OPC_START+119\n-#define OPC_glUniform3fv                                OPC_START+120\n-#define OPC_glUniform3i                                 OPC_START+121\n-#define OPC_glUniform3iv                                OPC_START+122\n-#define OPC_glUniform4f                                 OPC_START+123\n-#define OPC_glUniform4fv                                OPC_START+124\n-#define OPC_glUniform4i                                 OPC_START+125\n-#define OPC_glUniform4iv                                OPC_START+126\n-#define OPC_glUniformMatrix2fv                          OPC_START+127\n-#define OPC_glUniformMatrix3fv                          OPC_START+128\n-#define OPC_glUniformMatrix4fv                          OPC_START+129\n-#define OPC_glUseProgram                                OPC_START+130\n-#define OPC_glValidateProgram                           OPC_START+131\n-#define OPC_glVertexAttrib1f                            OPC_START+132\n-#define OPC_glVertexAttrib1fv                           OPC_START+133\n-#define OPC_glVertexAttrib2f                            OPC_START+134\n-#define OPC_glVertexAttrib2fv                           OPC_START+135\n-#define OPC_glVertexAttrib3f                            OPC_START+136\n-#define OPC_glVertexAttrib3fv                           OPC_START+137\n-#define OPC_glVertexAttrib4f                            OPC_START+138\n-#define OPC_glVertexAttrib4fv                           OPC_START+139\n-#define OPC_glVertexAttribPointer                       OPC_START+140\n-#define OPC_glViewport                                  OPC_START+141\n-\n-#define OPC_glBegin                                     OPC_START+150\n-#define OPC_glEnd                                       OPC_START+151\n-\n-\/* MAC OS X OpenGL Extensions *\/\n-#define OPC_MACOSX_EXT                                  500\n-#define OPC_glIsRenderbufferEXT                         OPC_MACOSX_EXT+1\n-#define OPC_glBindRenderbufferEXT                       OPC_MACOSX_EXT+2\n-#define OPC_glDeleteRenderbuffersEXT                    OPC_MACOSX_EXT+3\n-#define OPC_glGenRenderbuffersEXT                       OPC_MACOSX_EXT+4\n-#define OPC_glRenderbufferStorageEXT                    OPC_MACOSX_EXT+5\n-#define OPC_glGetRenderbufferParameterivEXT             OPC_MACOSX_EXT+6\n-#define OPC_glIsFramebufferEXT                          OPC_MACOSX_EXT+7\n-#define OPC_glBindFramebufferEXT                        OPC_MACOSX_EXT+8\n-#define OPC_glDeleteFramebuffersEXT                     OPC_MACOSX_EXT+9\n-#define OPC_glGenFramebuffersEXT                        OPC_MACOSX_EXT+10\n-#define OPC_glCheckFramebufferStatusEXT                 OPC_MACOSX_EXT+11\n-#define OPC_glFramebufferTexture1DEXT                   OPC_MACOSX_EXT+12\n-#define OPC_glFramebufferTexture2DEXT                   OPC_MACOSX_EXT+13\n-#define OPC_glFramebufferTexture3DEXT                   OPC_MACOSX_EXT+14\n-#define OPC_glFramebufferRenderbufferEXT                OPC_MACOSX_EXT+15\n-#define OPC_glGetFramebufferAttachmentParameterivEXT    OPC_MACOSX_EXT+16\n-#define OPC_glGenerateMipmapEXT                         OPC_MACOSX_EXT+17\n-\n-\/* EGL *\/\n-#define OPC_EGL                         700\n-#define OPC_eglGetError                                 OPC_EGL+0\n-#define OPC_eglGetDisplay                               OPC_EGL+1\n-#define OPC_eglInitialize                               OPC_EGL+2\n-#define OPC_eglTerminate                                OPC_EGL+3\n-#define OPC_eglQueryString                              OPC_EGL+4\n-#define OPC_eglGetConfigs                               OPC_EGL+5\n-#define OPC_eglChooseConfig                             OPC_EGL+6\n-#define OPC_eglGetConfigAttrib                          OPC_EGL+7\n-#define OPC_eglCreateWindowSurface                      OPC_EGL+8\n-#define OPC_eglCreatePbufferSurface                     OPC_EGL+9\n-#define OPC_eglCreatePixmapSurface                      OPC_EGL+10\n-#define OPC_eglDestroySurface                           OPC_EGL+11\n-#define OPC_eglQuerySurface                             OPC_EGL+12\n-#define OPC_eglBindAPI                                  OPC_EGL+13\n-#define OPC_eglQueryAPI                                 OPC_EGL+14\n-#define OPC_eglWaitClient                               OPC_EGL+15\n-#define OPC_eglReleaseThread                            OPC_EGL+16\n-#define OPC_eglCreatePbufferFromClientBuffer            OPC_EGL+17\n-#define OPC_eglSurfaceAttrib                            OPC_EGL+18\n-#define OPC_eglBindTexImage                             OPC_EGL+19\n-#define OPC_eglReleaseTexImage                          OPC_EGL+20\n-#define OPC_eglCreateContext                            OPC_EGL+21\n-#define OPC_eglDestroyContext                           OPC_EGL+22\n-#define OPC_eglMakeCurrent                              OPC_EGL+23\n-#define OPC_eglGetCurrentContext                        OPC_EGL+24\n-#define OPC_eglGetCurrentSurface                        OPC_EGL+25\n-#define OPC_eglGetCurrentDisplay                        OPC_EGL+26\n-#define OPC_eglQueryContext                             OPC_EGL+27\n-#define OPC_eglWaitGL                                   OPC_EGL+28\n-#define OPC_eglWaitNative                               OPC_EGL+29\n-#define OPC_eglSwapBuffers                              OPC_EGL+30\n-#define OPC_eglCopyBuffers                              OPC_EGL+31\n-\n-#define OPC_EOF                                         0xffffffff\n-\n-\n-#define IO_WRITE        0\n-#define IO_READ         1\n-\n-void    iolib_init(int mode, const char *fname);\n-void    iolib_fini();\n-\n-void    putCmd(int cmd);\n-void    putInt(int arg);\n-void    putIntPtr(const int *arg);\n-void    putFloat(float arg);\n-void    putFloatPtr(const float *arg);\n-void    putLongLong(long long arg);\n-void    putPtr(const void *arg);\n-void    putString(const char *str);\n-void    putBytes(const void *data, int size);\n-void    putTime(uint64_t bgn, uint64_t end);\n-void    endCmd();\n-\n-int             getCmd();\n-int             getInt();\n-const int   *getIntPtr();\n-float           getFloat();\n-const float *getFloatPtr();\n-long long       getLongLong();\n-uint64_t    getPtr();\n-const char      *getString();\n-const void      *getBytes();\n-void            getTime(uint64_t *bgn, uint64_t *end);\n-\n-#endif \/* GLTRACE_IOLIB_H *\/\n","filename":"tools\/gltrace\/iolib.h","additions":0,"deletions":276,"binary":false,"changes":276,"status":"deleted"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- *    Object mapping. A very simple implementation.\n- *\/\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-#include \"map.h\"\n-\n-#define MAXMAPS         16\n-#define MAXKEYS         16\n-\n-static void *mapSpace[MAXMAPS*MAXKEYS*2];\n-static int lastMap = -1;\n-\n-void    *\n-createMap()\n-{\n-    if (++lastMap >= MAXMAPS) {\n-        fprintf(stderr, \"FATAL: too many object maps\\n\");\n-        exit(1);\n-    }\n-    return mapSpace + lastMap * MAXKEYS * 2;\n-}\n-\n-void\n-putMap(void *map, void *key, void *val)\n-{\n-    void **ptr = (void**)map;\n-    int i;\n-    for (i=0; i<MAXKEYS; ++i) {\n-        if (ptr[2*i] == NULL) {\n-            ptr[2*i] = key;\n-            ptr[2*i+1] = val;\n-            return;\n-        }\n-        else if (ptr[2*i] == key) {\n-            ptr[2*i+1] = val;\n-            return;\n-        }\n-    }\n-    fprintf(stderr, \"FATAL: too many object map keys\\n\");\n-    exit(1);\n-}\n-\n-void    *\n-getMap(void *map, void *key)\n-{\n-    void **ptr = (void**)map;\n-    int i;\n-    for (i=0; i<MAXKEYS; ++i) {\n-        if (ptr[2*i] == NULL) {\n-            return NULL;\n-        }\n-        else if (ptr[2*i] == key) {\n-            return ptr[2*i+1];\n-        }\n-    }\n-    return NULL;\n-}\n-\n","filename":"tools\/gltrace\/map.c","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -1,33 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef GLTRACE_MAP_H\n-#define GLTRACE_MAP_H\n-\n-void    *createMap();\n-void    putMap(void *map, void *key, void *val);\n-void    *getMap(void *map, void *key);\n-\n-#endif \/* GLTRACE_MAP_H *\/\n","filename":"tools\/gltrace\/map.h","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <time.h>\n-\n-#include \"os.h\"\n-\n-static uint64_t start_time = 0;\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    start_time = gethrtime();\n-}\n-\n-uint64_t\n-gltrace_gethrtime()\n-{\n-    struct timespec tsp;\n-    clock_gettime(CLOCK_MONOTONIC, &tsp);\n-    return (tsp.tv_sec*1000000000ULL + tsp.tv_nsec - start_time);\n-}\n-\n","filename":"tools\/gltrace\/os-linux.c","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <mach\/mach_time.h>\n-\n-#include \"os.h\"\n-\n-static mach_timebase_info_data_t timebase_info;\n-static uint64_t start_abstime;\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    mach_timebase_info(&timebase_info);\n-    start_abstime = mach_absolute_time();\n-}\n-\n-uint64_t\n-gltrace_gethrtime()\n-{\n-        uint64_t ats = mach_absolute_time();\n-        return (ats - start_abstime) * timebase_info.numer \/ timebase_info.denom;\n-}\n","filename":"tools\/gltrace\/os-macosx.c","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef GLTRACE_OS_H\n-#define GLTRACE_OS_H\n-\n-#include <stdint.h>\n-\n-#define gethrtime gltrace_gethrtime\n-uint64_t    gltrace_gethrtime();\n-\n-#if MACOSX\n-#define MAP_POPULATE 0\n-#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP PTHREAD_RECURSIVE_MUTEX_INITIALIZER\n-#define OS_ENV_PRELOAD \"DYLD_INSERT_LIBRARIES\"\n-#endif\n-\n-#if linux\n-#define OS_ENV_PRELOAD \"LD_PRELOAD\"\n-#endif\n-\n-#endif \/* GLTRACE_OS_H *\/\n","filename":"tools\/gltrace\/os.h","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,3955 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#define _GNU_SOURCE\n-#include <errno.h>\n-#include <stdarg.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <sys\/stat.h>\n-#include <sys\/types.h>\n-\n-#if linux\n-#include <GLES2\/gl2.h>\n-#include <GLES2\/gl2ext.h>\n-#include <EGL\/egl.h>\n-#endif\n-\n-#if MACOSX\n-#include <OpenGL\/gl.h>\n-#include <OpenGL\/glext.h>\n-#endif\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-#include \"map.h\"\n-\n-#define DIR_TEXTURES    \"TEXTURES\"\n-\n-typedef void             GLvoid;\n-typedef char             GLchar;\n-\n-extern const char *glEnum2str(GLenum);\n-static void readPixels();\n-static int  savePNG(char *fName, GLenum format, GLenum type, uint32_t width, uint32_t height, const void *data);\n-\n-static int printFlag = 0;\n-static int printArrays = 0;\n-static int execFlag  = 0;\n-static int dumpTexturesFlag = 0;\n-static uint64_t printThread = (uint64_t)0;\n-static uint64_t curThread   = (uint64_t)0;\n-static int texCount = 0;\n-\n-\/*\n- *    StringBuffer\n- *\/\n-\n-#define CHUNKSZ 2048\n-static char *stringBuffer;\n-static char *curPtr;\n-static char *endPtr;\n-\n-void\n-sb_enlarge(int delta)\n-{\n-    delta += CHUNKSZ - 1;\n-    delta -= delta % CHUNKSZ;\n-    int nsize = (endPtr - stringBuffer) + delta;\n-    int curOffset = curPtr - stringBuffer;\n-    stringBuffer = realloc(stringBuffer, nsize);\n-    curPtr = stringBuffer + curOffset;\n-    endPtr = stringBuffer + nsize;\n-}\n-\n-void\n-sb_appendInt(int val)\n-{\n-    if (curPtr + 16 > endPtr) sb_enlarge(16);\n-    curPtr += snprintf(curPtr, endPtr - curPtr, \"%d\", val);\n-}\n-\n-void\n-sb_appendLong(uint64_t val)\n-{\n-    if (curPtr + 32 > endPtr) sb_enlarge(32);\n-    curPtr += snprintf(curPtr, endPtr - curPtr, \"%llu\", val);\n-}\n-\n-void\n-sb_appendBool(int val)\n-{\n-    if (curPtr + 8 > endPtr) sb_enlarge(8);\n-    curPtr += snprintf(curPtr, endPtr - curPtr, \"%s\", val ? \"true\" : \"false\");\n-}\n-\n-void\n-sb_appendFloat(float val)\n-{\n-    if (curPtr + 16 > endPtr) sb_enlarge(16);\n-    curPtr += snprintf(curPtr, endPtr - curPtr, \"%f\", val);\n-}\n-\n-void\n-sb_appendPtr(const void *val)\n-{\n-    if (curPtr + 32 > endPtr) sb_enlarge(32);\n-    curPtr += snprintf(curPtr, endPtr - curPtr, \"%p\", val);\n-}\n-\n-void\n-sb_appendStr(const char *str)\n-{\n-    int len = strlen(str) + 1;\n-    if (curPtr + len > endPtr) sb_enlarge(len);\n-    curPtr += snprintf(curPtr, endPtr - curPtr, \"%s\", str);\n-}\n-\n-void\n-sb_appendNL()\n-{\n-    if (curPtr + 2 > endPtr) sb_enlarge(2);\n-    *curPtr++ = '\\n';\n-    *curPtr = (char)0;\n-}\n-\n-void\n-sb_reset()\n-{\n-    curPtr = stringBuffer;\n-    *curPtr = (char)0;\n-}\n-\n-void\n-sb_init()\n-{\n-    int size = CHUNKSZ;\n-    stringBuffer = malloc(size);\n-    curPtr = stringBuffer;\n-    endPtr = stringBuffer + size;\n-}\n-\n-void\n-sb_fini()\n-{\n-    free(stringBuffer);\n-    stringBuffer = NULL;\n-    curPtr = NULL;\n-    endPtr = NULL;\n-}\n-\n-\/*\n- *    FPS tracking\n- *\/\n-#define INST_FRAME_COUNT 30\n-#define REPORT_INTERVAL 2000000000ULL\n-\n-static int fpsFlag = 1;\n-static uint64_t ts0Recorded;\n-static uint64_t ts0Actual;\n-static uint64_t tsRecorded[INST_FRAME_COUNT];\n-static uint64_t tsActual[INST_FRAME_COUNT];\n-static int curFrame = 0;\n-static uint64_t nextReport;\n-\n-static void\n-fps_newFrame(int frame, uint64_t ts)\n-{\n-    uint64_t actual;\n-    if (execFlag) {\n-        actual = gethrtime();\n-    }\n-    if (frame == 0) {\n-        ts0Recorded = ts;\n-        nextReport = ts + REPORT_INTERVAL;\n-        if (execFlag) {\n-            ts0Actual = actual;\n-        }\n-    }\n-    int idx = frame % INST_FRAME_COUNT;\n-    if (ts > nextReport) {\n-        uint64_t prev = frame < INST_FRAME_COUNT ? ts0Recorded : tsRecorded[idx];\n-        int num = frame < INST_FRAME_COUNT ? frame : INST_FRAME_COUNT;\n-        fprintf(stdout, \"FPS(rec): %f\", num*1e9\/(ts - prev));\n-        if (execFlag) {\n-            prev = curFrame < INST_FRAME_COUNT ? ts0Actual : tsActual[idx];\n-            fprintf(stdout, \"    FPS(act): %f\", num*1e9\/(actual - prev));\n-        }\n-        fprintf(stdout, \"\\n\");\n-        nextReport += REPORT_INTERVAL;\n-    }\n-    tsRecorded[idx] = ts;\n-    if (execFlag) {\n-        tsActual[idx] = actual;\n-    }\n-}\n-\n-static void\n-fps_total()\n-{\n-    if (--curFrame <= 0) return;\n-\n-    int idx = curFrame % INST_FRAME_COUNT;\n-    fprintf(stdout, \"Total FPS(rec): %f\", curFrame*1e9\/(tsRecorded[idx] - ts0Recorded));\n-    if (execFlag) {\n-        fprintf(stdout, \"    Total FPS(act): %f\", curFrame*1e9\/(tsActual[idx] - ts0Actual));\n-    }\n-    fprintf(stdout, \"\\n\");\n-}\n-\n-\n-\/*\n- *    Native window\n- *\/\n-\n-#ifdef RASPBERRYPI\n-\n-#include  <bcm_host.h>\n-\n-static EGL_DISPMANX_WINDOW_T nativewindow;\n-static DISPMANX_ELEMENT_HANDLE_T dispman_element;\n-static DISPMANX_DISPLAY_HANDLE_T dispman_display;\n-static DISPMANX_UPDATE_HANDLE_T dispman_update;\n-\n-static EGLNativeWindowType\n-createNativeWindow()\n-{\n-    bcm_host_init();\n-\n-    uint32_t width, height;\n-    int rc = graphics_get_display_size(0, &width, &height);\n-    if (rc < 0) {\n-        fprintf(stderr, \"FATAL: can't create native wondow\\n\");\n-    }\n-\n-    VC_RECT_T dst_rect;\n-    VC_RECT_T src_rect;\n-\n-    dst_rect.x = 0;\n-    dst_rect.y = 0;\n-    dst_rect.width = width;\n-    dst_rect.height = height;\n-\n-    src_rect.x = 0;\n-    src_rect.y = 0;\n-    src_rect.width = width << 16;\n-    src_rect.height = height << 16;\n-\n-    dispman_display = vc_dispmanx_display_open(0);\n-    dispman_update = vc_dispmanx_update_start(0);\n-\n-    dispman_element = vc_dispmanx_element_add (dispman_update, dispman_display,\n-       1, &dst_rect, 0, &src_rect, DISPMANX_PROTECTION_NONE, 0, 0, 0);\n-\n-    nativewindow.element = dispman_element;\n-    nativewindow.width = width;\n-    nativewindow.height = height;\n-    vc_dispmanx_update_submit_sync(dispman_update);\n-\n-    return &nativewindow;\n-}\n-\n-#elif BEAGLEBOARD\n-\n-static EGLNativeWindowType\n-createNativeWindow()\n-{\n-    return NULL;\n-}\n-\n-#endif\n-\n-\/*\n- *     Process recorded GL commands\n- *\/\n-\n-#define NOT_IMPLEMENTED() {fprintf(stderr, \"FATAL: not implemented %d\\n\", cmd); return;}\n-\n-\/* XXX use glGet(GL_MAX_VERTEX_ATTRIBS) *\/\n-#define MAX_VERTEX_ATTRIBS      128\n-typedef struct VertexAttrib_t {\n-    GLboolean   enabled;\n-    GLint       size;\n-    GLenum      type;\n-    GLboolean   normalized;\n-} VertexAttrib_t;\n-\n-static VertexAttrib_t vertexAttrib[MAX_VERTEX_ATTRIBS];\n-\n-static void\n-getVertexAttrib(int index, int count, const GLvoid *pointer)\n-{\n-    if (execFlag) {\n-        glVertexAttribPointer(index, vertexAttrib[index].size, vertexAttrib[index].type, vertexAttrib[index].normalized, 0, pointer);\n-    }\n-}\n-\n-static GLuint arrayBufferBinding = 0;\n-static GLuint elementArrayBufferBinding = 0;\n-\n-static void     *eglSurfaceMap = NULL;\n-static void     *eglContextMap = NULL;\n-\n-static void\n-proc_glActiveTexture(GLenum texture)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glActiveTexture(\");\n-        sb_appendStr(glEnum2str(texture));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glActiveTexture(texture);\n-    }\n-}\n-\n-static void\n-proc_glAttachShader(GLuint program, GLuint shader)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glAttachShader(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendInt(shader);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glAttachShader(program, shader);\n-    }\n-}\n-\n-static void\n-proc_glBindAttribLocation(GLuint program, GLuint index, const GLchar* name)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBindAttribLocation(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendInt(index);\n-        sb_appendStr(\", \");\n-        sb_appendStr(name);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBindAttribLocation(program, index, name);\n-    }\n-}\n-\n-static void\n-proc_glBindBuffer(GLenum target, GLuint buffer)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBindBuffer(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(buffer);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBindBuffer(target, buffer);\n-    }\n-}\n-\n-static void\n-proc_glBindFramebuffer(GLenum target, GLuint framebuffer)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBindFramebuffer(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(framebuffer);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBindFramebuffer(target, framebuffer);\n-    }\n-}\n-\n-static void\n-proc_glBindRenderbuffer(GLenum target, GLuint renderbuffer)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBindRenderbuffer(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(renderbuffer);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBindRenderbuffer(target, renderbuffer);\n-    }\n-}\n-\n-static void\n-proc_glBindTexture(GLenum target, GLuint texture)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBindTexture(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(texture);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBindTexture(target, texture);\n-    }\n-}\n-\n-static void proc_glBlendColor();\n-\n-static void\n-proc_glBlendEquation(GLenum mode)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBlendEquation(\");\n-        sb_appendStr(glEnum2str(mode));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBlendEquation(mode);\n-    }\n-\n-}\n-\n-static void\n-proc_glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBlendEquationSeparate(\");\n-        sb_appendStr(glEnum2str(modeRGB));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(modeAlpha));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBlendEquationSeparate(modeRGB, modeAlpha);\n-    }\n-}\n-\n-static void\n-proc_glBlendFunc(GLenum sfactor, GLenum dfactor)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBlendFunc(\");\n-        sb_appendStr(glEnum2str(sfactor));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(dfactor));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBlendFunc(sfactor, dfactor);\n-    }\n-}\n-\n-static void\n-proc_glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBlendFuncSeparate(\");\n-        sb_appendStr(glEnum2str(srcRGB));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(dstRGB));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(srcAlpha));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(dstAlpha));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBlendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n-    }\n-}\n-\n-static void\n-proc_glBufferData(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBufferData(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(size);\n-        sb_appendStr(data ? \", [...], \" : \", (null), \");\n-        sb_appendStr(glEnum2str(usage));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBufferData(target, size, data, usage);\n-    }\n-}\n-\n-static void\n-proc_glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBufferSubData(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(offset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(size);\n-        sb_appendStr(data ? \", [...])\" : \", (null))\");\n-    }\n-    if (execFlag) {\n-        glBufferSubData(target, offset, size, data);\n-    }\n-}\n-\n-static GLenum\n-proc_glCheckFramebufferStatus(GLenum target)\n-{\n-    GLenum res = 0;\n-    if (printFlag) {\n-        sb_appendStr(\"glCheckFramebufferStatus(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = glCheckFramebufferStatus(target);\n-    }\n-    return res;\n-}\n-\n-static void\n-proc_glClear(GLbitfield mask)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glClear(\");\n-        sb_appendInt(mask);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glClear(mask);\n-    }\n-}\n-\n-static void\n-proc_glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glClearColor(\");\n-        sb_appendFloat(red);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(green);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(blue);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(alpha);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glClearColor(red, green, blue, alpha);\n-    }\n-}\n-\n-static void\n-proc_glClearDepthf(GLclampf depth)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glClearDepthf(\");\n-        sb_appendFloat(depth);\n-        sb_appendStr(\")\");\n-    }\n-#if !MACOSX\n-    if (execFlag) {\n-        glClearDepthf(depth);\n-    }\n-#endif\n-}\n-\n-static void\n-proc_glClearStencil(GLint s)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glClearStencil(\");\n-        sb_appendInt(s);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glClearStencil(s);\n-    }\n-}\n-\n-static void\n-proc_glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glColorMask(\");\n-        sb_appendBool(red);\n-        sb_appendStr(\", \");\n-        sb_appendBool(green);\n-        sb_appendStr(\", \");\n-        sb_appendBool(blue);\n-        sb_appendStr(\", \");\n-        sb_appendBool(alpha);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glColorMask(red, green, blue, alpha);\n-    }\n-}\n-\n-static void\n-proc_glCompileShader(GLuint shader)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glCompileShader(\");\n-        sb_appendInt(shader);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glCompileShader(shader);\n-    }\n-}\n-\n-static void\n-proc_glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glCompressedTexImage2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\", \");\n-        sb_appendInt(internalformat);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\", \");\n-        sb_appendInt(border);\n-        sb_appendStr(\", \");\n-        sb_appendInt(imageSize);\n-        sb_appendStr(\", \");\n-        sb_appendStr(data ? \"[...]\" : \"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);\n-    }\n-}\n-\n-static void\n-proc_glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glCompressedTexSubImage2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\", \");\n-        sb_appendInt(xoffset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(yoffset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(format));\n-        sb_appendStr(\", \");\n-        sb_appendInt(imageSize);\n-        sb_appendStr(\", \");\n-        sb_appendStr(data ? \"[...]\" : \"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n-    }\n-}\n-\n-static void\n-proc_glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glCopyTexImage2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\", \");\n-        sb_appendInt(internalformat);\n-        sb_appendStr(\", \");\n-        sb_appendInt(x);\n-        sb_appendStr(\", \");\n-        sb_appendInt(y);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\", \");\n-        sb_appendInt(border);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n-    }\n-}\n-\n-static void\n-proc_glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glCopyTexSubImage2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\", \");\n-        sb_appendInt(xoffset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(yoffset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(x);\n-        sb_appendStr(\", \");\n-        sb_appendInt(y);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n-    }\n-}\n-\n-static GLuint\n-proc_glCreateProgram()\n-{\n-    GLuint res = 0;\n-    if (printFlag) {\n-        sb_appendStr(\"glCreateProgram()\");\n-    }\n-    if (execFlag) {\n-        res = glCreateProgram();\n-    }\n-    return res;\n-}\n-\n-static GLuint\n-proc_glCreateShader(GLenum type)\n-{\n-    GLuint res = 0;\n-    if (printFlag) {\n-        sb_appendStr(\"glCreateShader(\");\n-        sb_appendStr(glEnum2str(type));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = glCreateShader(type);\n-    }\n-    return res;\n-}\n-\n-static void\n-proc_glCullFace(GLenum mode)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glCullFace(\");\n-        sb_appendStr(glEnum2str(mode));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glCullFace(mode);\n-    }\n-}\n-\n-static void\n-proc_glDeleteBuffers(GLsizei n, const GLuint* buffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteBuffers(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(buffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glDeleteBuffers(n, buffers);\n-    }\n-}\n-\n-static void\n-proc_glDeleteFramebuffers(GLsizei n, const GLuint* framebuffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteFramebuffers(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(framebuffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glDeleteFramebuffers(n, framebuffers);\n-    }\n-}\n-\n-static void\n-proc_glDeleteProgram(GLuint program)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteProgram(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDeleteProgram(program);\n-    }\n-}\n-\n-static void\n-proc_glDeleteRenderbuffers(GLsizei n, const GLuint* renderbuffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteRenderbuffers(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(renderbuffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glDeleteRenderbuffers(n, renderbuffers);\n-    }\n-}\n-\n-static void\n-proc_glDeleteShader(GLuint shader)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteShader(\");\n-        sb_appendInt(shader);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDeleteShader(shader);\n-    }\n-}\n-\n-static void\n-proc_glDeleteTextures(GLsizei n, const GLuint* textures)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteTextures(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(textures[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glDeleteTextures(n, textures);\n-    }\n-}\n-\n-static void\n-proc_glDepthFunc(GLenum func)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDepthFunc(\");\n-        sb_appendStr(glEnum2str(func));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDepthFunc(func);\n-    }\n-}\n-\n-static void\n-proc_glDepthMask(GLboolean flag)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDepthMask(\");\n-        sb_appendBool(flag);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDepthMask(flag);\n-    }\n-}\n-\n-static void\n-proc_glDepthRangef(GLclampf zNear, GLclampf zFar)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDepthRangef(\");\n-        sb_appendFloat(zNear);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(zFar);\n-        sb_appendStr(\")\");\n-    }\n-#if !MACOSX\n-    if (execFlag) {\n-        glDepthRangef(zNear, zFar);\n-    }\n-#endif\n-}\n-\n-static void\n-proc_glDetachShader(GLuint program, GLuint shader)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDetachShader(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendInt(shader);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDetachShader(program, shader);\n-    }\n-}\n-\n-static void\n-proc_glDisable(GLenum cap)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDisable(\");\n-        sb_appendStr(glEnum2str(cap));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDisable(cap);\n-    }\n-}\n-\n-static void\n-proc_glDisableVertexAttribArray(GLuint index)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDisableVertexAttribArray(\");\n-        sb_appendInt(index);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDisableVertexAttribArray(index);\n-    }\n-    vertexAttrib[index].enabled = 0;\n-}\n-\n-static void\n-proc_glDrawArrays(GLenum mode, GLint first, GLsizei count)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDrawArrays(\");\n-        sb_appendStr(glEnum2str(mode));\n-        sb_appendStr(\", \");\n-        sb_appendInt(first);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDrawArrays(mode, first, count);\n-    }\n-}\n-\n-static void\n-proc_glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glDrawElements(\");\n-        sb_appendStr(glEnum2str(mode));\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(type));\n-        sb_appendStr(\", \");\n-        sb_appendPtr(indices);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glDrawElements(mode, count, type, indices);\n-    }\n-}\n-\n-static void\n-proc_glEnable(GLenum cap)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glEnable(\");\n-        sb_appendStr(glEnum2str(cap));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glEnable(cap);\n-    }\n-}\n-\n-static void\n-proc_glEnableVertexAttribArray(GLuint index)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glEnableVertexAttribArray(\");\n-        sb_appendInt(index);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glEnableVertexAttribArray(index);\n-    }\n-    vertexAttrib[index].enabled = 1;\n-}\n-\n-static void\n-proc_glFinish()\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glFinish()\");\n-    }\n-    if (execFlag) {\n-        glFinish();\n-    }\n-}\n-\n-static void\n-proc_glFlush()\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glFlush()\");\n-    }\n-    if (execFlag) {\n-        glFlush();\n-    }\n-}\n-\n-static void\n-proc_glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glFramebufferRenderbuffer(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(attachment));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(renderbuffertarget));\n-        sb_appendStr(\", \");\n-        sb_appendInt(renderbuffer);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);\n-    }\n-}\n-\n-static void\n-proc_glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glFramebufferTexture2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(attachment));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(textarget));\n-        sb_appendStr(\", \");\n-        sb_appendInt(texture);\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glFramebufferTexture2D(target, attachment, textarget, texture, level);\n-    }\n-}\n-\n-static void\n-proc_glFrontFace(GLenum mode)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glFrontFace(\");\n-        sb_appendStr(glEnum2str(mode));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glFrontFace(mode);\n-    }\n-}\n-\n-static void\n-proc_glGenBuffers(GLsizei n, GLuint *_buffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glGenBuffers(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(_buffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        GLuint buffers[n];\n-        glGenBuffers(n, buffers);\n-        for (i=0; i<n; ++i) {\n-            if (_buffers[i] != buffers[i]) {\n-                fprintf(stderr, \"FATAL: glGenBuffers buffers mismatch\\n\");\n-                exit(1);\n-            }\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGenerateMipmap(GLenum target)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGenerateMipmap(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glGenerateMipmap(target);\n-    }\n-}\n-\n-static void\n-proc_glGenFramebuffers(GLsizei n, GLuint *_framebuffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glGenFramebuffers(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(_framebuffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        GLuint framebuffers[n];\n-        glGenFramebuffers(n, framebuffers);\n-        for (i=0; i<n; ++i) {\n-            if (_framebuffers[i] != framebuffers[i]) {\n-                fprintf(stderr, \"FATAL: glGenFramebuffers framebuffers mismatch\\n\");\n-                exit(1);\n-            }\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGenRenderbuffers(GLsizei n, GLuint* _renderbuffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glGenRenderbuffers(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(_renderbuffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        GLuint renderbuffers[n];\n-        glGenRenderbuffers(n, renderbuffers);\n-        for (i=0; i<n; ++i) {\n-            if (_renderbuffers[i] != renderbuffers[i]) {\n-                fprintf(stderr, \"FATAL: glGenRenderbuffers renderbuffers mismatch\\n\");\n-                exit(1);\n-            }\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGenTextures(GLsizei n, GLuint* _textures)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glGenTextures(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(_textures[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        GLuint textures[n];\n-        glGenTextures(n, textures);\n-        for (i=0; i<n; ++i) {\n-            if (_textures[i] != textures[i]) {\n-                fprintf(stderr, \"FATAL: glGenTextures textures mismatch\\n\");\n-                exit(1);\n-            }\n-        }\n-    }\n-}\n-\n-static void proc_glGetActiveAttrib();\n-\n-static void\n-proc_glGetActiveUniform(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetActiveUniform(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendInt(index);\n-        sb_appendStr(\", \");\n-        sb_appendInt(bufsize);\n-        sb_appendStr(\", \");\n-        if (length) sb_appendInt(*length);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\", \");\n-        if (size) sb_appendInt(*size);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\", \");\n-        if (type) sb_appendStr(glEnum2str(*type));\n-        else sb_appendStr(\"(null)\");\n-        if (name) sb_appendStr(name);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glGetActiveUniform(program, index, bufsize, length, size, type, name);\n-    }\n-}\n-\n-static void\n-proc_glGetAttachedShaders(GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetAttachedShaders(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendInt(maxcount);\n-        sb_appendStr(\", \");\n-        if (count) sb_appendInt(*count);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\", \");\n-        if (shaders) sb_appendStr(\"[...]\");\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glGetAttachedShaders(program, maxcount, count, shaders);\n-    }\n-}\n-\n-static int\n-proc_glGetAttribLocation(GLuint program, const GLchar* name)\n-{\n-    int res = -1;\n-    if (printFlag) {\n-        sb_appendStr(\"glGetAttribLocation(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendStr(name);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = glGetAttribLocation(program, name);\n-    }\n-    return res;\n-}\n-\n-static void\n-proc_glGetBooleanv(GLenum pname, GLboolean _params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetBooleanv(\");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        sb_appendInt(_params);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLboolean params[4];\n-        glGetBooleanv(pname, params);\n-        if (_params != params[0]) {\n-            fprintf(stderr, \"ERROR: glGetBooleanv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void proc_glGetBufferParameteriv();\n-\n-static GLenum\n-proc_glGetError()\n-{\n-    GLenum res = 0;\n-    if (printFlag) {\n-        sb_appendStr(\"glGetError()\");\n-    }\n-    if (execFlag) {\n-        res = glGetError();\n-    }\n-    return res;\n-}\n-\n-static void\n-proc_glGetFloatv(GLenum pname, const GLfloat* params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetFloatv(\");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        if (params) sb_appendFloat(*params);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLfloat _params[4];\n-        glGetFloatv(pname, params ? _params : NULL);\n-        if (_params[0] != params[0]) {\n-            fprintf(stderr, \"ERROR: glGetFloatv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint _params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetFramebufferAttachmentParameteriv(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(attachment));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        sb_appendInt(_params);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLint params[4];\n-        glGetFramebufferAttachmentParameteriv(target, attachment, pname, params);\n-        if (_params != params[0]) {\n-            fprintf(stderr, \"ERROR: glGetFramebufferAttachmentParameteriv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGetIntegerv(GLenum pname, const GLint *params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetIntegerv(\");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        if (params) sb_appendInt(*params);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLint _params[4];\n-        glGetIntegerv(pname, params ? _params : NULL);\n-        if (_params[0] != params[0]) {\n-            fprintf(stderr, \"ERROR: glGetIntegerv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGetProgramiv(GLuint program, GLenum pname, GLint _params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetProgramiv(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        sb_appendInt(_params);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLint params;\n-        glGetProgramiv(program, pname, &params);\n-        if (_params != params) {\n-            fprintf(stderr, \"ERROR: glGetProgramiv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void proc_glGetProgramInfoLog();\n-\n-static void\n-proc_glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint _params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetRenderbufferParameteriv(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        sb_appendInt(_params);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLint params;\n-        glGetRenderbufferParameteriv(target, pname, &params);\n-        if (_params != params) {\n-            fprintf(stderr, \"ERROR: glGetRenderbufferParameteriv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void\n-proc_glGetShaderiv(GLuint shader, GLenum pname, GLint _params)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glGetShaderiv(\");\n-        sb_appendInt(shader);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        sb_appendInt(_params);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        GLint params;\n-        glGetShaderiv(shader, pname, &params);\n-        if (_params != params) {\n-            fprintf(stderr, \"ERROR: glGetShaderiv params mismatch\\n\");\n-        }\n-    }\n-}\n-\n-static void proc_glGetShaderInfoLog();\n-static void proc_glGetShaderPrecisionFormat();\n-static void proc_glGetShaderSource();\n-\n-static const GLubyte *\n-proc_glGetString(GLenum name)\n-{\n-    const GLubyte *res = NULL;\n-    if (printFlag) {\n-        sb_appendStr(\"glGetString(\");\n-        sb_appendStr(glEnum2str(name));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = glGetString(name);\n-    }\n-    return res;\n-}\n-\n-static void proc_glGetTexParameterfv();\n-static void proc_glGetTexParameteriv();\n-static void proc_glGetUniformfv();\n-static void proc_glGetUniformiv();\n-\n-static int\n-proc_glGetUniformLocation(GLuint program, const GLchar* name)\n-{\n-    int res = -1;\n-    if (printFlag) {\n-        sb_appendStr(\"glGetUniformLocation(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\", \");\n-        sb_appendStr(name);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = glGetUniformLocation(program, name);\n-    }\n-    return res;\n-}\n-\n-static void proc_glGetVertexAttribfv();\n-static void proc_glGetVertexAttribiv();\n-static void proc_glGetVertexAttribPointerv();\n-static void proc_glHint ();\n-static void proc_glIsBuffer     ();\n-static void proc_glIsEnabled    ();\n-static void proc_glIsFramebuffer();\n-static void proc_glIsProgram    ();\n-static void proc_glIsRenderbuffer();\n-static void proc_glIsShader     ();\n-static void proc_glIsTexture    ();\n-static void proc_glLineWidth    ();\n-\n-static void\n-proc_glLinkProgram(GLuint program)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glLinkProgram(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glLinkProgram(program);\n-    }\n-}\n-\n-static void\n-proc_glPixelStorei(GLenum pname, GLint param)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glPixelStorei(\");\n-        sb_appendInt(pname);\n-        sb_appendStr(\", \");\n-        sb_appendInt(param);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glPixelStorei(pname, param);\n-    }\n-}\n-\n-static void\n-proc_glPolygonOffset(GLfloat factor, GLfloat units)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glPolygonOffset(\");\n-        sb_appendFloat(factor);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(units);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glPolygonOffset(factor, units);\n-    }\n-}\n-\n-static void proc_glReadPixels();\n-static void proc_glReleaseShaderCompiler();\n-\n-static void\n-proc_glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glRenderbufferStorage(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(internalformat));\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glRenderbufferStorage(target, internalformat, width, height);\n-    }\n-}\n-\n-static void proc_glSampleCoverage();\n-\n-static void\n-proc_glScissor(GLint x, GLint y, GLsizei width, GLsizei height)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glScissor(\");\n-        sb_appendInt(x);\n-        sb_appendStr(\", \");\n-        sb_appendInt(y);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glScissor(x, y, width, height);\n-    }\n-}\n-\n-static void proc_glShaderBinary();\n-\n-static void\n-proc_glShaderSource(GLuint shader, GLsizei count, const GLchar** string, const GLint* length)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glShaderSource(\");\n-        sb_appendInt(shader);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", [\");\n-        if (printArrays) {\n-            int i;\n-            for (i=0; i<count; ++i) {\n-                sb_appendStr(\"\\n\");\n-                sb_appendStr(string[i]);\n-            }\n-        }\n-        else {\n-            sb_appendStr(\"...\");\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glShaderSource(shader, count, string, length);\n-    }\n-}\n-\n-static void proc_glStencilFunc();\n-static void proc_glStencilFuncSeparate();\n-static void proc_glStencilMask();\n-static void proc_glStencilMaskSeparate();\n-static void proc_glStencilOp    ();\n-static void proc_glStencilOpSeparate();\n-\n-static void\n-proc_glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glTexImage2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\", \");\n-        sb_appendInt(internalformat);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\", \");\n-        sb_appendInt(border);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(format));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(type));\n-        sb_appendStr(\", \");\n-        sb_appendStr(pixels ? \"[...]\" : \"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels);\n-    }\n-}\n-\n-static void proc_glTexParameterf();\n-static void proc_glTexParameterfv();\n-\n-static void\n-proc_glTexParameteri(GLenum target, GLenum pname, GLint param)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glTexParameteri(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(pname));\n-        sb_appendStr(\", \");\n-        sb_appendInt(param);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glTexParameteri(target, pname, param);\n-    }\n-}\n-\n-static void proc_glTexParameteriv();\n-\n-static void\n-proc_glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glTexSubImage2D(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\", \");\n-        sb_appendInt(xoffset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(yoffset);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(format));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(type));\n-        sb_appendStr(\", \");\n-        sb_appendPtr(pixels);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n-    }\n-}\n-\n-static void\n-proc_glUniform1f(GLint location, GLfloat x)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform1f(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(x);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glUniform1f(location, x);\n-    }\n-}\n-\n-static void\n-proc_glUniform1fv(GLint location, GLsizei count, const GLfloat* v)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform1fv(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", [...])\");\n-    }\n-    if (execFlag) {\n-        glUniform1fv(location, count, v);\n-    }\n-}\n-\n-static void\n-proc_glUniform1i(GLint location, GLint x)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform1i(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendInt(x);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glUniform1i(location, x);\n-    }\n-}\n-\n-static void proc_glUniform1iv();\n-\n-static void\n-proc_glUniform2f(GLint location, GLfloat x, GLfloat y)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform2f(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(x);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(y);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glUniform2f(location, x, y);\n-    }\n-}\n-\n-static void proc_glUniform2fv();\n-static void proc_glUniform2i    ();\n-static void proc_glUniform2iv();\n-\n-static void\n-proc_glUniform3f(GLint location, GLfloat x, GLfloat y, GLfloat z)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform3f(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(x);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(y);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(z);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glUniform3f(location, x, y, z);\n-    }\n-}\n-\n-static void proc_glUniform3fv();\n-static void proc_glUniform3i    ();\n-static void proc_glUniform3iv();\n-\n-static void\n-proc_glUniform4f(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform4f(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(x);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(y);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(z);\n-        sb_appendStr(\", \");\n-        sb_appendFloat(w);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glUniform4f(location, x, y, z, w);\n-    }\n-}\n-\n-static void\n-proc_glUniform4fv(GLint location, GLsizei count, const GLfloat* v)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniform4fv(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", [...])\");\n-    }\n-    if (execFlag) {\n-        glUniform4fv(location, count, v);\n-    }\n-}\n-\n-static void proc_glUniform4i    ();\n-static void proc_glUniform4iv();\n-\n-static void\n-proc_glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniformMatrix2fv(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", \");\n-        sb_appendBool(transpose);\n-        sb_appendStr(\", [\");\n-        if (printArrays) {\n-            int i;\n-            for (i=0; i<count*4; ++i) {\n-                if (i == 0) sb_appendStr(\"\\n\\t\");\n-                else if (i % 2 == 0) sb_appendStr(\",\\n\\t\");\n-                else sb_appendStr(\", \");\n-                sb_appendFloat(value[i]);\n-            }\n-        }\n-        else {\n-            sb_appendStr(\"...\");\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glUniformMatrix2fv(location, count, transpose, value);\n-    }\n-}\n-\n-static void\n-proc_glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniformMatrix3fv(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", \");\n-        sb_appendBool(transpose);\n-        sb_appendStr(\", [\");\n-        if (printArrays) {\n-            int i;\n-            for (i=0; i<count*9; ++i) {\n-                if (i == 0) sb_appendStr(\"\\n\\t\");\n-                else if (i % 3 == 0) sb_appendStr(\",\\n\\t\");\n-                else sb_appendStr(\", \");\n-                sb_appendFloat(value[i]);\n-            }\n-        }\n-        else {\n-            sb_appendStr(\"...\");\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glUniformMatrix3fv(location, count, transpose, value);\n-    }\n-}\n-\n-static void\n-proc_glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUniformMatrix4fv(\");\n-        sb_appendInt(location);\n-        sb_appendStr(\", \");\n-        sb_appendInt(count);\n-        sb_appendStr(\", \");\n-        sb_appendBool(transpose);\n-        sb_appendStr(\", [\");\n-        if (printArrays) {\n-            int i;\n-            for (i=0; i<count*16; ++i) {\n-                if (i == 0) sb_appendStr(\"\\n\\t\");\n-                else if (i % 4 == 0) sb_appendStr(\",\\n\\t\");\n-                else sb_appendStr(\", \");\n-                sb_appendFloat(value[i]);\n-            }\n-        }\n-        else {\n-            sb_appendStr(\"...\");\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glUniformMatrix4fv(location, count, transpose, value);\n-    }\n-}\n-\n-static void\n-proc_glUseProgram(GLuint program)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glUseProgram(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glUseProgram(program);\n-    }\n-}\n-\n-static void\n-proc_glValidateProgram(GLuint program)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glValidateProgram(\");\n-        sb_appendInt(program);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glValidateProgram(program);\n-    }\n-}\n-\n-static void proc_glVertexAttrib1f();\n-static void proc_glVertexAttrib1fv();\n-static void proc_glVertexAttrib2f();\n-static void proc_glVertexAttrib2fv();\n-static void proc_glVertexAttrib3f();\n-static void proc_glVertexAttrib3fv();\n-static void proc_glVertexAttrib4f();\n-static void proc_glVertexAttrib4fv();\n-\n-static void\n-proc_glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glVertexAttribPointer(\");\n-        sb_appendInt(indx);\n-        sb_appendStr(\", \");\n-        sb_appendInt(size);\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(type));\n-        sb_appendStr(\", \");\n-        sb_appendBool(normalized);\n-        sb_appendStr(\", \");\n-        sb_appendInt(stride);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(ptr);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glVertexAttribPointer(indx, size, type, normalized, stride, ptr);\n-        vertexAttrib[indx].size = size;\n-        vertexAttrib[indx].type = type;\n-        vertexAttrib[indx].normalized = normalized;\n-    }\n-}\n-\n-static void\n-proc_glViewport(GLint x, GLint y, GLsizei width, GLsizei height)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glViewport(\");\n-        sb_appendInt(x);\n-        sb_appendStr(\", \");\n-        sb_appendInt(y);\n-        sb_appendStr(\", \");\n-        sb_appendInt(width);\n-        sb_appendStr(\", \");\n-        sb_appendInt(height);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glViewport(x, y, width, height);\n-    }\n-}\n-\n-#if MACOSX\n-static void\n-proc_glBegin(GLenum mode)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBegin(\");\n-        sb_appendStr(glEnum2str(mode));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBegin(mode);\n-    }\n-}\n-\n-static void\n-proc_glEnd()\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glEnd()\");\n-    }\n-    if (execFlag) {\n-        glEnd();\n-    }\n-}\n-\n-static GLboolean\n-proc_glIsRenderbufferEXT(GLuint renderbuffer);\n-static void\n-proc_glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);\n-static void\n-proc_glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);\n-static void\n-proc_glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);\n-static void\n-proc_glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);\n-static void\n-proc_glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params);\n-static GLboolean\n-proc_glIsFramebufferEXT(GLuint framebuffer);\n-\n-static void\n-proc_glBindFramebufferEXT(GLenum target, GLuint framebuffer)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glBindFramebufferEXT(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendInt(framebuffer);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glBindFramebufferEXT(target, framebuffer);\n-    }\n-}\n-\n-static void\n-proc_glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glDeleteFramebuffersEXT(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(framebuffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        glDeleteFramebuffersEXT(n, framebuffers);\n-    }\n-}\n-\n-static void\n-proc_glGenFramebuffersEXT(GLsizei n, GLuint *_framebuffers)\n-{\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"glGenFramebuffersEXT(\");\n-        sb_appendInt(n);\n-        sb_appendStr(\", [\");\n-        for (i=0; i<n; ++i) {\n-            if (i!=0) sb_appendStr(\", \");\n-            sb_appendInt(_framebuffers[i]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        GLuint framebuffers[n];\n-        glGenFramebuffersEXT(n, framebuffers);\n-        for (i=0; i<n; ++i) {\n-            if (_framebuffers[i] != framebuffers[i]) {\n-                fprintf(stderr, \"FATAL: glGenFramebuffersEXT framebuffers mismatch\\n\");\n-                exit(1);\n-            }\n-        }\n-    }\n-}\n-\n-static GLenum\n-proc_glCheckFramebufferStatusEXT(GLenum target)\n-{\n-    GLenum res = 0;\n-    if (printFlag) {\n-        sb_appendStr(\"glCheckFramebufferStatusEXT(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = glCheckFramebufferStatusEXT(target);\n-    }\n-    return res;\n-}\n-\n-static void\n-proc_glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\n-\n-static void\n-proc_glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)\n-{\n-    if (printFlag) {\n-        sb_appendStr(\"glFramebufferTexture2DEXT(\");\n-        sb_appendStr(glEnum2str(target));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(attachment));\n-        sb_appendStr(\", \");\n-        sb_appendStr(glEnum2str(textarget));\n-        sb_appendStr(\", \");\n-        sb_appendInt(texture);\n-        sb_appendStr(\", \");\n-        sb_appendInt(level);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        glFramebufferTexture2DEXT(target, attachment, textarget, texture, level);\n-    }\n-}\n-\n-static void\n-proc_glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);\n-static void\n-proc_glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\n-static void\n-proc_glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params);\n-static void\n-proc_glGenerateMipmapEXT(GLenum target);\n-#endif \/* MACOSX *\/\n-\n-#if linux\n-extern const char *eglEnum2str(EGLenum);\n-\n-static EGLDisplay\n-proc_eglGetDisplay(EGLNativeDisplayType display_id)\n-{\n-    EGLDisplay res = NULL;\n-    if (printFlag) {\n-        sb_appendStr(\"eglGetDisplay(\");\n-        sb_appendPtr((void*)display_id);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglGetDisplay(display_id);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean\n-proc_eglInitialize(EGLDisplay dpy, const EGLint *major, const EGLint *minor)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglInitialize(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        if (major) sb_appendInt(*major);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\", \");\n-        if (minor) sb_appendInt(*minor);\n-        else sb_appendStr(\"(null)\");\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        EGLint _major, _minor;\n-        res = eglInitialize(dpy, &_major, &_minor);\n-        if ((major && (*major != _major)) || (minor && (*minor != _minor))) {\n-            fprintf(stderr, \"ERROR: eglInitialize version mismatch\\n\");\n-        }\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglTerminate() { return EGL_FALSE; }\n-\n-static const char *\n-proc_eglQueryString(EGLDisplay dpy, EGLint name)\n-{\n-    const char *res = NULL;\n-    if (printFlag) {\n-        sb_appendStr(\"eglQueryString(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendStr(eglEnum2str(name));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglQueryString(dpy, name);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglGetConfigs() { return EGL_FALSE; }\n-\n-static EGLBoolean\n-proc_eglChooseConfig(EGLDisplay dpy, const EGLint *attrib_list,\n-           EGLConfig *_configs, EGLint config_size,\n-           EGLint _num_config)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"eglChooseConfig(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", [\");\n-        for (i=0;;) {\n-            int attr = attrib_list[i++];\n-            if (attr == EGL_NONE) break;\n-            if (i > 0) sb_appendStr(\",\");\n-            sb_appendStr(\"\\n\\t\");\n-            sb_appendStr(eglEnum2str(attr));\n-            sb_appendStr(\", \");\n-            sb_appendInt(attrib_list[i++]);\n-        }\n-        sb_appendStr(\"],\\n\\t[\");\n-        for (i=0; i<_num_config; ++i) {\n-            if (i > 0) sb_appendStr(\", \");\n-            sb_appendPtr(_configs[i]);\n-        }\n-        sb_appendStr(\"], \");\n-        sb_appendInt(config_size);\n-        sb_appendStr(\", \");\n-        sb_appendInt(_num_config);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        EGLConfig configs[config_size];\n-        EGLint num_config;\n-        res = eglChooseConfig(dpy, attrib_list, configs, config_size, &num_config);\n-        if (res) {\n-            if (num_config != _num_config) {\n-                fprintf(stderr, \"ERROR: eglChooseConfig num_config mismatch\\n\");\n-            }\n-            for (i=0; i<num_config && i<config_size; ++i) {\n-                if (configs[i] != _configs[i]) {\n-                    fprintf(stderr, \"ERROR: eglChooseConfig configs[] mismatch\\n\");\n-                    break;\n-                }\n-            }\n-        }\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean\n-proc_eglGetConfigAttrib(EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint _value)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglGetConfigAttrib(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(config);\n-        sb_appendStr(\", \");\n-        sb_appendStr(eglEnum2str(attribute));\n-        sb_appendStr(\", \");\n-        sb_appendInt(_value);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        EGLint value;\n-        res = eglGetConfigAttrib(dpy, config, attribute, &value);\n-        if (res && value != _value) {\n-            fprintf(stderr, \"ERROR: eglGetConfigAttrib value mismatch\\n\");\n-        }\n-    }\n-    return res;\n-}\n-\n-static EGLSurface\n-proc_eglCreateWindowSurface(EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint *attrib_list)\n-{\n-    EGLSurface res = NULL;\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"eglCreateWindowSurface(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(config);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(win);\n-        sb_appendStr(\", [\");\n-        for (i=0;;) {\n-            int attr = attrib_list[i++];\n-            if (attr == EGL_NONE) break;\n-            if (i > 0) sb_appendStr(\",\");\n-            sb_appendStr(\"\\n\\t\");\n-            sb_appendStr(eglEnum2str(attr));\n-            sb_appendStr(\", \");\n-            sb_appendInt(attrib_list[i++]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        EGLNativeWindowType nwin = createNativeWindow();\n-        res = eglCreateWindowSurface(dpy, config, nwin, attrib_list);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglCreatePbufferSurface() { return EGL_FALSE; }\n-static EGLBoolean proc_eglCreatePixmapSurface() { return EGL_FALSE; }\n-static EGLBoolean proc_eglDestroySurface() { return EGL_FALSE; }\n-static EGLBoolean proc_eglQuerySurface() { return EGL_FALSE; }\n-\n-static EGLBoolean\n-proc_eglBindAPI(EGLenum api)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglBindAPI(\");\n-        sb_appendStr(eglEnum2str(api));\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglBindAPI(api);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglQueryAPI() { return EGL_FALSE; }\n-static EGLBoolean proc_eglWaitClient() { return EGL_FALSE; }\n-static EGLBoolean proc_eglReleaseThread() { return EGL_FALSE; }\n-static EGLBoolean proc_eglCreatePbufferFromClientBuffer() { return EGL_FALSE; }\n-\n-static EGLBoolean\n-proc_eglSurfaceAttrib(EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglSurfaceAttrib(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(surface);\n-        sb_appendStr(\", \");\n-        sb_appendStr(eglEnum2str(attribute));\n-        sb_appendStr(\", \");\n-        sb_appendInt(value);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglSurfaceAttrib(dpy, surface, attribute, value);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglBindTexImage() { return EGL_FALSE; }\n-static EGLBoolean proc_eglReleaseTexImage() { return EGL_FALSE; }\n-\n-static EGLContext\n-proc_eglCreateContext(EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list)\n-{\n-    EGLContext res = NULL;\n-    int i;\n-    if (printFlag) {\n-        sb_appendStr(\"eglCreateContext(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(config);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(share_context);\n-        sb_appendStr(\", [\");\n-        for (i=0;;) {\n-            int attr = attrib_list[i++];\n-            if (attr == EGL_NONE) break;\n-            if (i > 0) sb_appendStr(\",\");\n-            sb_appendStr(\"\\n\\t\");\n-            sb_appendStr(eglEnum2str(attr));\n-            sb_appendStr(\", \");\n-            sb_appendInt(attrib_list[i++]);\n-        }\n-        sb_appendStr(\"])\");\n-    }\n-    if (execFlag) {\n-        res = eglCreateContext(dpy, config, share_context, attrib_list);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean\n-proc_eglDestroyContext(EGLDisplay dpy, EGLContext ctx)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglDestroyContext(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(ctx);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglDestroyContext(dpy, ctx);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean\n-proc_eglMakeCurrent(EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglMakeCurrent(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(draw);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(read);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(ctx);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglMakeCurrent(dpy, draw, read, ctx);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglGetCurrentContext() { return EGL_FALSE; }\n-static EGLBoolean proc_eglGetCurrentSurface() { return EGL_FALSE; }\n-static EGLBoolean proc_eglGetCurrentDisplay() { return EGL_FALSE; }\n-static EGLBoolean proc_eglQueryContext() { return EGL_FALSE; }\n-static EGLBoolean proc_eglWaitGL() { return EGL_FALSE; }\n-static EGLBoolean proc_eglWaitNative() { return EGL_FALSE; }\n-\n-static EGLBoolean\n-proc_eglSwapBuffers(EGLDisplay dpy, EGLSurface surface)\n-{\n-    EGLBoolean res = EGL_FALSE;\n-    if (printFlag) {\n-        sb_appendStr(\"eglSwapBuffers(\");\n-        sb_appendPtr(dpy);\n-        sb_appendStr(\", \");\n-        sb_appendPtr(surface);\n-        sb_appendStr(\")\");\n-    }\n-    if (execFlag) {\n-        res = eglSwapBuffers(dpy, surface);\n-    }\n-    return res;\n-}\n-\n-static EGLBoolean proc_eglCopyBuffers() { return EGL_FALSE; }\n-#endif\n-\n-static void\n-process(int frames)\n-{\n-    uint64_t tbgn, tend;\n-\n-    for (;frames != 0;) {\n-        sb_reset();\n-        int cmd = getCmd();\n-\n-        \/\/ prefix commands\n-        if (cmd == OPC_THREAD) {\n-            curThread = getPtr();\n-            if (printFlag && !printThread) {\n-                fprintf(stdout, \"THREAD %llu\\n\", curThread);\n-            }\n-            cmd = getCmd();\n-        }\n-\n-        switch (cmd) {\n-        case OPC_MARK: {\n-            const char *str = getString();\n-            if (printFlag) {\n-                sb_appendStr(\"================ \");\n-                sb_appendStr(str);\n-            }\n-            break;\n-        }\n-        case OPC_glActiveTexture: {\n-            GLenum texture = getInt();\n-            proc_glActiveTexture(texture);\n-            break;\n-        }\n-        case OPC_glAttachShader: {\n-            GLuint program = getInt();\n-            GLuint shader = getInt();\n-            proc_glAttachShader(program, shader);\n-            break;\n-        }\n-        case OPC_glBindAttribLocation: {\n-            GLuint program = getInt();\n-            GLuint index = getInt();\n-            const GLchar* name = (const GLchar*)getString();\n-            proc_glBindAttribLocation(program, index, name);\n-            break;\n-        }\n-        case OPC_glBindBuffer: {\n-            GLenum target = getInt();\n-            GLuint buffer = getInt();\n-            proc_glBindBuffer(target, buffer);\n-            if (target == GL_ARRAY_BUFFER) {\n-                arrayBufferBinding = buffer;\n-            }\n-            else if (target == GL_ELEMENT_ARRAY_BUFFER) {\n-                elementArrayBufferBinding = buffer;\n-            }\n-            break;\n-        }\n-        case OPC_glBindFramebuffer: {\n-            GLenum target = getInt();\n-            GLuint framebuffer = getInt();\n-            proc_glBindFramebuffer(target, framebuffer);\n-            break;\n-        }\n-        case OPC_glBindRenderbuffer: {\n-            GLenum target = getInt();\n-            GLuint renderbuffer = getInt();\n-            proc_glBindRenderbuffer(target, renderbuffer);\n-            break;\n-        }\n-        case OPC_glBindTexture: {\n-            GLenum target = getInt();\n-            GLuint texture = getInt();\n-            proc_glBindTexture(target, texture);\n-            break;\n-        }\n-        case OPC_glBlendColor:          NOT_IMPLEMENTED();\n-        case OPC_glBlendEquation: {\n-            GLenum mode = getInt();\n-            proc_glBlendEquation(mode);\n-            break;\n-        }\n-        case OPC_glBlendEquationSeparate: {\n-            GLenum modeRGB = getInt();\n-            GLenum modeAlpha = getInt();\n-            proc_glBlendEquationSeparate(modeRGB, modeAlpha);\n-            break;\n-        }\n-        case OPC_glBlendFunc: {\n-            GLenum sfactor = getInt();\n-            GLenum dfactor = getInt();\n-            proc_glBlendFunc(sfactor, dfactor);\n-            break;\n-        }\n-        case OPC_glBlendFuncSeparate: {\n-            GLenum srcRGB = getInt();\n-            GLenum dstRGB = getInt();\n-            GLenum srcAlpha = getInt();\n-            GLenum dstAlpha = getInt();\n-            proc_glBlendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n-            break;\n-        }\n-        case OPC_glBufferData: {\n-            GLenum target = getInt();\n-            GLsizeiptr size = getInt();\n-            const GLvoid* data = getBytes();\n-            GLenum usage = getInt();\n-            proc_glBufferData(target, size, data, usage);\n-            break;\n-        }\n-        case OPC_glBufferSubData: {\n-            GLenum target = getInt();\n-            GLintptr offset = getInt();\n-            GLsizeiptr size = getInt();\n-            const GLvoid* data = getBytes();\n-            proc_glBufferSubData(target, offset, size, data);\n-            break;\n-        }\n-        case OPC_glCheckFramebufferStatus: {\n-            GLenum target = getInt();\n-            GLenum curVal = proc_glCheckFramebufferStatus(target);\n-            GLenum oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendStr(glEnum2str(oldVal));\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: glCheckFramebufferStatus return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_glClear: {\n-            GLbitfield mask = getInt();\n-            proc_glClear(mask);\n-            break;\n-        }\n-        case OPC_glClearColor: {\n-            GLclampf red = getFloat();\n-            GLclampf green = getFloat();\n-            GLclampf blue = getFloat();\n-            GLclampf alpha = getFloat();\n-            proc_glClearColor(red, green, blue, alpha);\n-            break;\n-        }\n-        case OPC_glClearDepthf: {\n-            GLclampf depth = getFloat();\n-            proc_glClearDepthf(depth);\n-            break;\n-        }\n-        case OPC_glClearStencil: {\n-            GLint s = getInt();\n-            proc_glClearStencil(s);\n-            break;\n-        }\n-        case OPC_glColorMask: {\n-            GLboolean red = getInt();\n-            GLboolean green = getInt();\n-            GLboolean blue = getInt();\n-            GLboolean alpha = getInt();\n-            proc_glColorMask(red, green, blue, alpha);\n-            break;\n-        }\n-        case OPC_glCompileShader: {\n-            GLuint shader = getInt();\n-            proc_glCompileShader(shader);\n-            break;\n-        }\n-        case OPC_glCompressedTexImage2D: {\n-            GLenum target = getInt();\n-            GLint level = getInt();\n-            GLenum internalformat = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            GLint border = getInt();\n-            GLsizei imageSize = getInt();\n-            const GLvoid* data = getBytes();\n-            proc_glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);\n-            break;\n-        }\n-        case OPC_glCompressedTexSubImage2D: {\n-            GLenum target = getInt();\n-            GLint level = getInt();\n-            GLint xoffset = getInt();\n-            GLint yoffset = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            GLenum format = getInt();\n-            GLsizei imageSize = getInt();\n-            const GLvoid* data = getBytes();\n-            proc_glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n-            break;\n-        }\n-        case OPC_glCopyTexImage2D:{\n-            GLenum target = getInt();\n-            GLint level = getInt();\n-            GLenum internalformat = getInt();\n-            GLint x = getInt();\n-            GLint y = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            GLint border = getInt();\n-            proc_glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);\n-            break;\n-        }\n-        case OPC_glCopyTexSubImage2D: {\n-            GLenum target = getInt();\n-            GLint level = getInt();\n-            GLint xoffset = getInt();\n-            GLint yoffset = getInt();\n-            GLint x = getInt();\n-            GLint y = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            proc_glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\n-            break;\n-        }\n-        case OPC_glCreateProgram: {\n-            GLuint curVal = proc_glCreateProgram();\n-            GLuint oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: glCreateProgram return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_glCreateShader: {\n-            GLenum type = getInt();\n-            GLuint curVal = proc_glCreateShader(type);\n-            GLuint oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: glCreateShader return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_glCullFace: {\n-            GLenum mode = getInt();\n-            proc_glCullFace(mode);\n-            break;\n-        }\n-        case OPC_glDeleteBuffers: {\n-            GLsizei n = getInt();\n-            GLuint buffers[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                buffers[i] = getInt();\n-            }\n-            proc_glDeleteBuffers(n, buffers);\n-            break;\n-        }\n-        case OPC_glDeleteFramebuffers: {\n-            GLsizei n = getInt();\n-            GLuint framebuffers[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                framebuffers[i] = getInt();\n-            }\n-            proc_glDeleteFramebuffers(n, framebuffers);\n-            break;\n-        }\n-        case OPC_glDeleteProgram: {\n-            GLuint program = getInt();\n-            proc_glDeleteProgram(program);\n-            break;\n-        }\n-        case OPC_glDeleteRenderbuffers: {\n-            GLsizei n = getInt();\n-            GLuint renderbuffers[n];\n-                int i;\n-                for (i=0; i<n; ++i) {\n-                    renderbuffers[i] = getInt();\n-                }\n-                proc_glDeleteRenderbuffers(n, renderbuffers);\n-                break;\n-        }\n-        case OPC_glDeleteShader: {\n-            GLuint shader = getInt();\n-            proc_glDeleteShader(shader);\n-            break;\n-        }\n-        case OPC_glDeleteTextures: {\n-            GLsizei n = getInt();\n-            GLuint textures[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                textures[i] = getInt();\n-            }\n-            proc_glDeleteTextures(n, textures);\n-            break;\n-        }\n-        case OPC_glDepthFunc: {\n-            GLenum func = getInt();\n-            proc_glDepthFunc(func);\n-            break;\n-        }\n-        case OPC_glDepthMask: {\n-            GLboolean flag = getInt();\n-            proc_glDepthMask(flag);\n-            break;\n-        }\n-        case OPC_glDepthRangef: {\n-            GLclampf zNear = getFloat();\n-            GLclampf zFar  = getFloat();\n-            proc_glDepthRangef(zNear, zFar);\n-            break;\n-        }\n-        case OPC_glDetachShader: {\n-            GLuint program = getInt();\n-            GLuint shader  = getInt();\n-            proc_glDetachShader(program, shader);\n-            break;\n-        }\n-        case OPC_glDisable: {\n-            GLenum cap = getInt();\n-            proc_glDisable(cap);\n-            break;\n-        }\n-        case OPC_glDisableVertexAttribArray: {\n-            GLuint index = getInt();\n-            proc_glDisableVertexAttribArray(index);\n-            break;\n-        }\n-        case OPC_glDrawArrays: {\n-            GLenum mode = getInt();\n-            GLint first = getInt();\n-            GLsizei count = getInt();\n-            proc_glDrawArrays(mode, first, count);\n-            break;\n-        }\n-        case OPC_glDrawElements: {\n-            GLenum mode = getInt();\n-            GLsizei count = getInt();\n-            GLenum type = getInt();\n-            const GLvoid* indices = elementArrayBufferBinding ? (const GLvoid*)getPtr() : getBytes();\n-            if (!arrayBufferBinding) {\n-                int i;\n-                for (i=0; i<MAX_VERTEX_ATTRIBS; ++i) {\n-                    if (!vertexAttrib[i].enabled) continue;\n-                    const GLvoid *pointer = getBytes();\n-                    getVertexAttrib(i, count, pointer);\n-                }\n-            }\n-            proc_glDrawElements(mode, count, type, indices);\n-            break;\n-        }\n-        case OPC_glEnable: {\n-            GLenum cap = getInt();\n-            proc_glEnable(cap);\n-            break;\n-        }\n-        case OPC_glEnableVertexAttribArray: {\n-            GLuint index = getInt();\n-            proc_glEnableVertexAttribArray(index);\n-            break;\n-        }\n-        case OPC_glFinish:\n-            proc_glFinish();\n-            break;\n-        case OPC_glFlush:\n-            proc_glFlush();\n-            break;\n-        case OPC_glFramebufferRenderbuffer: {\n-            GLenum target = getInt();\n-            GLenum attachment = getInt();\n-            GLenum renderbuffertarget = getInt();\n-            GLuint renderbuffer = getInt();\n-            proc_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);\n-            break;\n-        }\n-        case OPC_glFramebufferTexture2D: {\n-            GLenum target = getInt();\n-            GLenum attachment = getInt();\n-            GLenum textarget = getInt();\n-            GLuint texture = getInt();\n-            GLint level = getInt();\n-            proc_glFramebufferTexture2D(target, attachment, textarget, texture, level);\n-            break;\n-        }\n-        case OPC_glFrontFace: {\n-            GLenum mode = getInt();\n-            proc_glFrontFace(mode);\n-            break;\n-        }\n-        case OPC_glGenBuffers: {\n-            GLsizei n = getInt();\n-            GLuint buffers[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                buffers[i] = getInt();\n-            }\n-            proc_glGenBuffers(n, buffers);\n-            break;\n-        }\n-        case OPC_glGenerateMipmap: {\n-            GLenum target = getInt();\n-            proc_glGenerateMipmap(target);\n-            break;\n-        }\n-        case OPC_glGenFramebuffers: {\n-            GLsizei n = getInt();\n-            GLuint framebuffers[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                framebuffers[i] = getInt();\n-            }\n-            proc_glGenFramebuffers(n, framebuffers);\n-            break;\n-        }\n-        case OPC_glGenRenderbuffers: {\n-            GLsizei n = getInt();\n-            GLuint renderbuffers[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                renderbuffers[i] = getInt();\n-            }\n-            proc_glGenRenderbuffers(n, renderbuffers);\n-            break;\n-        }\n-        case OPC_glGenTextures: {\n-            GLsizei n = getInt();\n-            GLuint textures[n];\n-            int i;\n-            for (i=0; i<n; ++i) {\n-                textures[i] = getInt();\n-            }\n-            proc_glGenTextures(n, textures);\n-            break;\n-        }\n-        case OPC_glGetActiveAttrib:     NOT_IMPLEMENTED();\n-        case OPC_glGetActiveUniform: {\n-            GLuint program = getInt();\n-            GLuint index = getInt();\n-            GLsizei bufsize = getInt();\n-            uint64_t lengthPtr = getPtr();\n-            uint64_t sizePtr = getPtr();\n-            uint64_t typePtr = getPtr();\n-            uint64_t namePtr = getPtr();\n-            GLsizei length = lengthPtr ? getInt() : 0;\n-            GLint   size = sizePtr ? getInt() : 0;\n-            GLenum type = typePtr ? getInt() : 0;\n-            const GLchar *name = namePtr ? getString() : NULL;\n-            GLsizei lengthOut = length;\n-            GLint   sizeOut = size;\n-            GLenum typeOut = type;\n-            GLchar nameOut[bufsize];\n-            if (name) strncpy(nameOut, name, bufsize);\n-            proc_glGetActiveUniform(program, index, bufsize,\n-                                    lengthPtr ? &lengthOut : NULL,\n-                                    sizePtr ? &sizeOut : NULL,\n-                                    typePtr ? &typeOut : NULL,\n-                                    namePtr ? nameOut : NULL);\n-            if (execFlag) {\n-                if (lengthPtr && lengthOut != length) {\n-                    fprintf(stderr, \"ERROR: glGetActiveUniform length mismatch\\n\");\n-                }\n-                if (sizePtr && sizeOut != size) {\n-                    fprintf(stderr, \"ERROR: glGetActiveUniform size mismatch\\n\");\n-                }\n-                if (typePtr && typeOut != type) {\n-                    fprintf(stderr, \"ERROR: glGetActiveUniform type mismatch\\n\");\n-                }\n-                if (strcmp(name, nameOut) != 0) {\n-                    fprintf(stderr, \"ERROR: glGetActiveUniform name mismatch\\n\");\n-                }\n-            }\n-            break;\n-        }\n-        case OPC_glGetAttachedShaders: {\n-            GLuint program = getInt();\n-            GLuint maxcount = getInt();\n-            uint64_t countPtr = getPtr();\n-            uint64_t shadersPtr = getPtr();\n-            GLsizei count = countPtr ? getInt() : 0;\n-            GLsizei countOut = count;\n-            GLuint shadersOut[maxcount];\n-\n-            proc_glGetAttachedShaders(program, maxcount,\n-                                      countPtr ? &countOut : NULL,\n-                                      shadersPtr ? shadersOut : NULL);\n-            if (execFlag) {\n-                if (countPtr) {\n-                    if(countOut != count) {\n-                        fprintf(stderr, \"ERROR: glGetAttachedShaders count mismatch\\n\");\n-                    }\n-                    if (shadersPtr) {\n-                        int i;\n-                        for (i=0; i<count; ++i) {\n-                            if (shadersOut[i] != getInt()) {\n-                                fprintf(stderr, \"ERROR: glGetAttachedShaders shader %d mismatch\\n\", i);\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            break;\n-        }\n-        case OPC_glGetAttribLocation: {\n-            GLuint program = getInt();\n-            const GLchar* name = (const GLchar*)getString();\n-                int curVal = proc_glGetAttribLocation(program, name);\n-                int oldVal = getInt();\n-                if (printFlag) {\n-                    sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-                if (execFlag && curVal != oldVal) {\n-                    fprintf(stderr, \"ERROR: glGetAttribLocation return mismatch\\n\");\n-                }\n-                break;\n-        }\n-        case OPC_glGetBooleanv: {\n-                GLenum pname = getInt();\n-                GLboolean params = getInt();\n-                proc_glGetBooleanv(pname, params);\n-                break;\n-        }\n-        case OPC_glGetBufferParameteriv: NOT_IMPLEMENTED();\n-        case OPC_glGetError: {\n-            GLuint curVal = proc_glGetError();\n-            GLuint oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendStr(glEnum2str(oldVal));\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: glGetError return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_glGetFloatv: {\n-            GLenum pname = getInt();\n-            const GLfloat *params = getFloatPtr();\n-            proc_glGetFloatv(pname, params);\n-            break;\n-        }\n-        case OPC_glGetFramebufferAttachmentParameteriv: {\n-            GLenum target = getInt();\n-            GLenum attachment = getInt();\n-            GLenum pname = getInt();\n-            GLint params = getInt();\n-            proc_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params);\n-            break;\n-        }\n-        case OPC_glGetIntegerv: {\n-            GLenum pname = getInt();\n-            const GLint *params = getIntPtr();\n-            proc_glGetIntegerv(pname, params);\n-            break;\n-        }\n-        case OPC_glGetProgramiv: {\n-            GLuint program = getInt();\n-            GLenum pname = getInt();\n-            GLint params = getInt();\n-            proc_glGetProgramiv(program, pname, params);\n-            break;\n-        }\n-        case OPC_glGetProgramInfoLog:   NOT_IMPLEMENTED();\n-        case OPC_glGetRenderbufferParameteriv: {\n-            GLenum target = getInt();\n-            GLenum pname = getInt();\n-            GLint  params = getInt();\n-            proc_glGetRenderbufferParameteriv(target, pname, params);\n-            break;\n-        }\n-        case OPC_glGetShaderiv: {\n-            GLuint shader = getInt();\n-            GLenum pname = getInt();\n-            GLint  params = getInt();\n-            proc_glGetShaderiv(shader, pname, params);\n-            break;\n-        }\n-        case OPC_glGetShaderInfoLog:    NOT_IMPLEMENTED();\n-        case OPC_glGetShaderPrecisionFormat: NOT_IMPLEMENTED();\n-        case OPC_glGetShaderSource:     NOT_IMPLEMENTED();\n-        case OPC_glGetString: {\n-            GLenum name = getInt();\n-            const GLubyte *curVal = proc_glGetString(name);\n-            const GLubyte *oldVal = getString();\n-            if (printFlag) {\n-                sb_appendStr(\" = \\\"\");\n-                sb_appendStr(oldVal);\n-                sb_appendStr(\"\\\"\");\n-            }\n-            if (execFlag && strcmp(curVal, oldVal) != 0) {\n-                fprintf(stderr, \"ERROR: glGetString return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_glGetTexParameterfv:   NOT_IMPLEMENTED();\n-        case OPC_glGetTexParameteriv:   NOT_IMPLEMENTED();\n-        case OPC_glGetUniformfv:        NOT_IMPLEMENTED();\n-        case OPC_glGetUniformiv:        NOT_IMPLEMENTED();\n-        case OPC_glGetUniformLocation: {\n-            GLuint program = getInt();\n-            const GLchar* name = (const GLchar*)getString();\n-            int curVal = proc_glGetUniformLocation(program, name);\n-            int oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: glGetUniformLocation return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_glGetVertexAttribfv:   NOT_IMPLEMENTED();\n-        case OPC_glGetVertexAttribiv:   NOT_IMPLEMENTED();\n-        case OPC_glGetVertexAttribPointerv: NOT_IMPLEMENTED();\n-        case OPC_glHint :               NOT_IMPLEMENTED();\n-        case OPC_glIsBuffer     :       NOT_IMPLEMENTED();\n-        case OPC_glIsEnabled    :       NOT_IMPLEMENTED();\n-        case OPC_glIsFramebuffer:       NOT_IMPLEMENTED();\n-        case OPC_glIsProgram    :       NOT_IMPLEMENTED();\n-        case OPC_glIsRenderbuffer:      NOT_IMPLEMENTED();\n-        case OPC_glIsShader     :       NOT_IMPLEMENTED();\n-        case OPC_glIsTexture    :       NOT_IMPLEMENTED();\n-        case OPC_glLineWidth    :       NOT_IMPLEMENTED();\n-        case OPC_glLinkProgram: {\n-            GLuint program = getInt();\n-            proc_glLinkProgram(program);\n-            break;\n-        }\n-        case OPC_glPixelStorei: {\n-            GLenum pname = getInt();\n-            GLint param = getInt();\n-            proc_glPixelStorei(pname, param);\n-            break;\n-        }\n-        case OPC_glPolygonOffset: {\n-            GLfloat factor = getFloat();\n-            GLfloat units = getFloat();\n-            proc_glPolygonOffset(factor, units);\n-            break;\n-        }\n-        case OPC_glReadPixels:          NOT_IMPLEMENTED();\n-        case OPC_glReleaseShaderCompiler: NOT_IMPLEMENTED();\n-        case OPC_glRenderbufferStorage: {\n-            GLenum target = getInt();\n-            GLenum internalformat = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            proc_glRenderbufferStorage(target, internalformat, width, height);\n-            break;\n-        }\n-        case OPC_glSampleCoverage:      NOT_IMPLEMENTED();\n-        case OPC_glScissor: {\n-            GLint x = getInt();\n-            GLint y = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            proc_glScissor(x, y, width, height);\n-            break;\n-        }\n-        case OPC_glShaderBinary:        NOT_IMPLEMENTED();\n-        case OPC_glShaderSource: {\n-            GLuint shader = getInt();\n-            GLsizei count= getInt();\n-            const GLchar* string[count];\n-            GLint length[count];\n-            int i;\n-            for (i=0; i<count; ++i) {\n-                int len = getInt();\n-                if (len > 0) {\n-                    length[i] = len;\n-                    string[i] = (GLchar*)getBytes();\n-                }\n-                else {\n-                    length[i] = -1;\n-                    string[i] = (GLchar*)getString();\n-                }\n-            }\n-            proc_glShaderSource(shader, count, string, length);\n-            break;\n-        }\n-        case OPC_glStencilFunc:         NOT_IMPLEMENTED();\n-        case OPC_glStencilFuncSeparate: NOT_IMPLEMENTED();\n-        case OPC_glStencilMask:         NOT_IMPLEMENTED();\n-        case OPC_glStencilMaskSeparate: NOT_IMPLEMENTED();\n-        case OPC_glStencilOp    :       NOT_IMPLEMENTED();\n-        case OPC_glStencilOpSeparate:   NOT_IMPLEMENTED();\n-        case OPC_glTexImage2D: {\n-            GLenum target = getInt();\n-            GLint level = getInt();\n-            GLint internalformat = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            GLint border = getInt();\n-            GLenum format = getInt();\n-            GLenum type = getInt();\n-            const GLvoid* pixels = getBytes();\n-            proc_glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels);\n-\n-            if (dumpTexturesFlag) {\n-                char fName[32];\n-                snprintf(fName, sizeof(fName), \"%s\/texture%06d.png\", DIR_TEXTURES, ++texCount);\n-                int err = savePNG(fName, format, type, width, height, pixels);\n-                printf(\"%s %s\\n\", fName, err ? \"FAIL\" : \"OK\");\n-            }\n-            break;\n-        }\n-        case OPC_glTexParameterf:       NOT_IMPLEMENTED();\n-        case OPC_glTexParameterfv:      NOT_IMPLEMENTED();\n-        case OPC_glTexParameteri: {\n-            GLenum target = getInt();\n-            GLenum pname = getInt();\n-            GLint param = getInt();\n-            proc_glTexParameteri(target, pname, param);\n-            break;\n-        }\n-        case OPC_glTexParameteriv:      NOT_IMPLEMENTED();\n-        case OPC_glTexSubImage2D: {\n-            GLenum target = getInt();\n-            GLint level = getInt();\n-            GLint xoffset = getInt();\n-            GLint yoffset = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            GLenum format = getInt();\n-            GLenum type = getInt();\n-            const GLvoid* pixels = getBytes();\n-            proc_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n-            break;\n-        }\n-        case OPC_glUniform1f: {\n-            GLint location = getInt();\n-            GLfloat x = getFloat();\n-            proc_glUniform1f(location, x);\n-            break;\n-        }\n-        case OPC_glUniform1fv: {\n-                GLint location = getInt();\n-                GLsizei count = getInt();\n-                const GLfloat* v = (const GLfloat*)getBytes();\n-                proc_glUniform1fv(location, count, v);\n-                break;\n-        }\n-        case OPC_glUniform1i: {\n-            GLint location = getInt();\n-            GLint x = getInt();\n-            proc_glUniform1i(location, x);\n-            break;\n-        }\n-        case OPC_glUniform1iv:          NOT_IMPLEMENTED();\n-        case OPC_glUniform2f: {\n-            GLint location = getInt();\n-            GLfloat x = getFloat();\n-            GLfloat y = getFloat();\n-            proc_glUniform2f(location, x, y);\n-            break;\n-        }\n-        case OPC_glUniform2fv:          NOT_IMPLEMENTED();\n-        case OPC_glUniform2i    :       NOT_IMPLEMENTED();\n-        case OPC_glUniform2iv:          NOT_IMPLEMENTED();\n-        case OPC_glUniform3f: {\n-            GLint location = getInt();\n-            GLfloat x = getFloat();\n-            GLfloat y = getFloat();\n-            GLfloat z = getFloat();\n-            proc_glUniform3f(location, x, y, z);\n-            break;\n-        }\n-        case OPC_glUniform3fv:          NOT_IMPLEMENTED();\n-        case OPC_glUniform3i    :       NOT_IMPLEMENTED();\n-        case OPC_glUniform3iv:          NOT_IMPLEMENTED();\n-        case OPC_glUniform4f: {\n-            GLint location = getInt();\n-            GLfloat x = getFloat();\n-            GLfloat y = getFloat();\n-            GLfloat z = getFloat();\n-            GLfloat w = getFloat();\n-            proc_glUniform4f(location, x, y, z, w);\n-            break;\n-        }\n-        case OPC_glUniform4fv: {\n-            GLint location = getInt();\n-            GLsizei count = getInt();\n-            const GLfloat* v = (const GLfloat*)getBytes();\n-            proc_glUniform4fv(location, count, v);\n-            break;\n-        }\n-        case OPC_glUniform4i    :       NOT_IMPLEMENTED();\n-        case OPC_glUniform4iv:          NOT_IMPLEMENTED();\n-        case OPC_glUniformMatrix2fv: {\n-                GLint location = getInt();\n-                GLsizei count = getInt();\n-                GLboolean transpose = getInt();\n-                const GLfloat* value = (const GLfloat*)getBytes();\n-                proc_glUniformMatrix2fv(location, count, transpose, value);\n-                break;\n-        }\n-        case OPC_glUniformMatrix3fv: {\n-                GLint location = getInt();\n-                GLsizei count = getInt();\n-                GLboolean transpose = getInt();\n-                const GLfloat* value = (const GLfloat*)getBytes();\n-                proc_glUniformMatrix3fv(location, count, transpose, value);\n-                break;\n-        }\n-        case OPC_glUniformMatrix4fv: {\n-            GLint location = getInt();\n-            GLsizei count = getInt();\n-            GLboolean transpose = getInt();\n-            const GLfloat* value = (const GLfloat*)getBytes();\n-            proc_glUniformMatrix4fv(location, count, transpose, value);\n-            break;\n-        }\n-        case OPC_glUseProgram: {\n-            GLuint program = getInt();\n-            proc_glUseProgram(program);\n-            break;\n-        }\n-        case OPC_glValidateProgram: {\n-            GLuint program = getInt();\n-            proc_glValidateProgram(program);\n-            break;\n-        }\n-        case OPC_glVertexAttrib1f:      NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib1fv:     NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib2f:      NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib2fv:     NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib3f:      NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib3fv:     NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib4f:      NOT_IMPLEMENTED();\n-        case OPC_glVertexAttrib4fv:     NOT_IMPLEMENTED();\n-        case OPC_glVertexAttribPointer: {\n-            GLuint indx = getInt();\n-            GLint size = getInt();\n-            GLenum type = getInt();\n-            GLboolean normalized = getInt();\n-            GLsizei stride = getInt();\n-            uint64_t ptr = getPtr();\n-\/\/            if (execFlag && ptr) {\n-\/\/                fprintf(stderr, \"ERROR: glVertexAttribPointer ptr not implemented\\n\");\n-\/\/                exit(1);\n-\/\/            }\n-            proc_glVertexAttribPointer(indx, size, type, normalized, stride, (void*)ptr);\n-            break;\n-        }\n-        case OPC_glViewport: {\n-            GLint x = getInt();\n-            GLint y = getInt();\n-            GLsizei width = getInt();\n-            GLsizei height = getInt();\n-            proc_glViewport(x, y, width, height);\n-            break;\n-        }\n-#if MACOSX\n-            case OPC_glBegin: {\n-                GLenum mode = getInt();\n-                proc_glBegin(mode);\n-                break;\n-            }\n-            case OPC_glEnd:\n-                proc_glEnd();\n-                break;\n-            case OPC_glIsRenderbufferEXT:       NOT_IMPLEMENTED();\n-            case OPC_glBindRenderbufferEXT:     NOT_IMPLEMENTED();\n-            case OPC_glDeleteRenderbuffersEXT:  NOT_IMPLEMENTED();\n-            case OPC_glGenRenderbuffersEXT:     NOT_IMPLEMENTED();\n-            case OPC_glRenderbufferStorageEXT:  NOT_IMPLEMENTED();\n-            case OPC_glGetRenderbufferParameterivEXT:   NOT_IMPLEMENTED();\n-            case OPC_glIsFramebufferEXT:        NOT_IMPLEMENTED();\n-            case OPC_glBindFramebufferEXT: {\n-                GLenum target = getInt();\n-                GLuint framebuffer = getInt();\n-                proc_glBindFramebufferEXT(target, framebuffer);\n-                break;\n-            }\n-            case OPC_glDeleteFramebuffersEXT: {\n-                GLsizei n = getInt();\n-                GLuint framebuffers[n];\n-                int i;\n-                for (i=0; i<n; ++i) {\n-                    framebuffers[i] = getInt();\n-                }\n-                proc_glDeleteFramebuffersEXT(n, framebuffers);\n-                break;\n-            }\n-            case OPC_glGenFramebuffersEXT: {\n-                GLsizei n = getInt();\n-                GLuint framebuffers[n];\n-                int i;\n-                for (i=0; i<n; ++i) {\n-                    framebuffers[i] = getInt();\n-                }\n-                proc_glGenFramebuffersEXT(n, framebuffers);\n-                break;\n-            }\n-            case OPC_glCheckFramebufferStatusEXT: {\n-                GLenum target = getInt();\n-                GLenum curVal = proc_glCheckFramebufferStatusEXT(target);\n-                GLenum oldVal = getInt();\n-                if (printFlag) {\n-                    sb_appendStr(\" = \");\n-                    sb_appendStr(glEnum2str(oldVal));\n-                }\n-                if (execFlag && curVal != oldVal) {\n-                    fprintf(stderr, \"ERROR: glCheckFramebufferStatusEXT return mismatch\\n\");\n-                }\n-                break;\n-            }\n-            case OPC_glFramebufferTexture1DEXT: NOT_IMPLEMENTED();\n-            case OPC_glFramebufferTexture2DEXT: {\n-                GLenum target = getInt();\n-                GLenum attachment = getInt();\n-                GLenum textarget = getInt();\n-                GLuint texture = getInt();\n-                GLint level = getInt();\n-                proc_glFramebufferTexture2DEXT(target, attachment, textarget, texture, level);\n-                break;\n-            }\n-            case OPC_glFramebufferTexture3DEXT: NOT_IMPLEMENTED();\n-            case OPC_glFramebufferRenderbufferEXT:      NOT_IMPLEMENTED();\n-            case OPC_glGetFramebufferAttachmentParameterivEXT:  NOT_IMPLEMENTED();\n-            case OPC_glGenerateMipmapEXT:       NOT_IMPLEMENTED();\n-\n-#endif \/* MACOSX *\/\n-#if linux\n-        case OPC_eglGetError:   NOT_IMPLEMENTED();\n-        case OPC_eglGetDisplay: {\n-            EGLDisplay curVal = proc_eglGetDisplay((EGLNativeDisplayType)getPtr());\n-            EGLDisplay oldVal = (EGLDisplay)getPtr();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendPtr(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglGetDisplay return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglInitialize: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            const GLint *major = getIntPtr();\n-            const GLint *minor = getIntPtr();\n-            EGLBoolean curVal = proc_eglInitialize(dpy, major, minor);\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendBool(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglInitialize return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglTerminate:          NOT_IMPLEMENTED();\n-        case OPC_eglQueryString: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLint name = getInt();\n-            const char *curVal = proc_eglQueryString(dpy, name);\n-            const char *oldVal = getString();\n-            if (printFlag) {\n-                sb_appendStr(\" = \\\"\");\n-                sb_appendStr(oldVal);\n-                sb_appendStr(\"\\\"\");\n-            }\n-            if (execFlag && strcmp(curVal, oldVal) != 0) {\n-                fprintf(stderr, \"ERROR: eglQueryString return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglGetConfigs:         NOT_IMPLEMENTED();\n-        case OPC_eglChooseConfig: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLint attrib_list[64]; \/* XXX static size *\/\n-            int i;\n-            for (i=0;;) {\n-                if (i >= sizeof(attrib_list)\/sizeof(EGLint)) {\n-                    fprintf(stderr, \"FATAL: eglChooseConfig too many attributes\\n\");\n-                    exit(1);\n-                }\n-                if ((attrib_list[i++] = getInt()) == EGL_NONE) break;\n-                attrib_list[i++] = getInt();\n-            }\n-            EGLint config_size = getInt();\n-            EGLint num_config = getInt();\n-            EGLConfig configs[config_size];\n-            for (i=0; i<num_config && i<config_size; ++i) {\n-                configs[i] = (EGLConfig)getPtr();\n-            }\n-            EGLBoolean curVal = proc_eglChooseConfig(dpy, attrib_list, configs, config_size, num_config);\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendBool(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglChooseConfig return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglGetConfigAttrib: {\n-            EGLBoolean curVal = proc_eglGetConfigAttrib((EGLDisplay)getPtr(), (EGLConfig)getPtr(), getInt(), getInt());\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendBool(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglGetConfigAttrib return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglCreateWindowSurface: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLConfig config = (EGLConfig)getPtr();\n-            EGLNativeWindowType win = (EGLNativeWindowType)getPtr();\n-            EGLint attrib_list[64]; \/* XXX static size *\/\n-            int i;\n-            for (i=0;;) {\n-                if (i >= sizeof(attrib_list)\/sizeof(EGLint)) {\n-                    fprintf(stderr, \"FATAL: eglCreateWindowSurface too many attributes\\n\");\n-                    exit(1);\n-                }\n-                if ((attrib_list[i++] = getInt()) == EGL_NONE) break;\n-                attrib_list[i++] = getInt();\n-            }\n-            EGLSurface curVal = proc_eglCreateWindowSurface(dpy, config, win, attrib_list);\n-            EGLSurface oldVal = (EGLSurface)getPtr();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendPtr(execFlag ? curVal : oldVal);\n-            }\n-            if (execFlag) {\n-                if (eglSurfaceMap == NULL) eglSurfaceMap = createMap();\n-                putMap(eglSurfaceMap, oldVal, curVal);\n-            }\n-            break;\n-        }\n-        case OPC_eglCreatePbufferSurface: NOT_IMPLEMENTED();\n-        case OPC_eglCreatePixmapSurface: NOT_IMPLEMENTED();\n-        case OPC_eglDestroySurface:     NOT_IMPLEMENTED();\n-        case OPC_eglQuerySurface:       NOT_IMPLEMENTED();\n-        case OPC_eglBindAPI: {\n-            EGLBoolean curVal = proc_eglBindAPI(getInt());\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendBool(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglGetDisplay return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglQueryAPI:           NOT_IMPLEMENTED();\n-        case OPC_eglWaitClient:         NOT_IMPLEMENTED();\n-        case OPC_eglReleaseThread:      NOT_IMPLEMENTED();\n-        case OPC_eglCreatePbufferFromClientBuffer: NOT_IMPLEMENTED();\n-        case OPC_eglSurfaceAttrib: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLSurface surface = (EGLSurface)getPtr();\n-            if (execFlag) surface = (EGLSurface)getMap(eglSurfaceMap, surface);\n-            EGLint attribute = getInt();\n-            EGLint value = getInt();\n-            EGLBoolean curVal = proc_eglSurfaceAttrib(dpy, surface, attribute, value);\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendBool(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglSurfaceAttrib return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglBindTexImage:       NOT_IMPLEMENTED();\n-        case OPC_eglReleaseTexImage:    NOT_IMPLEMENTED();\n-        case OPC_eglCreateContext: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLConfig config = (EGLConfig)getPtr();\n-            EGLContext context = (EGLContext)getPtr();\n-            if (execFlag && context) context = (EGLContext)getMap(eglContextMap, context);\n-            EGLint attrib_list[64]; \/* XXX static size *\/\n-            int i;\n-            for (i=0;;) {\n-                if (i >= sizeof(attrib_list)\/sizeof(EGLint)) {\n-                    fprintf(stderr, \"FATAL: eglCreateContext too many attributes\\n\");\n-                    exit(1);\n-                }\n-                if ((attrib_list[i++] = getInt()) == EGL_NONE) break;\n-                attrib_list[i++] = getInt();\n-            }\n-            EGLContext curVal = proc_eglCreateContext(dpy, config, context, attrib_list);\n-            EGLContext oldVal = (EGLContext)getPtr();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendPtr(execFlag ? curVal : oldVal);\n-            }\n-            if (execFlag) {\n-                if (eglContextMap == NULL) eglContextMap = createMap();\n-                putMap(eglContextMap, oldVal, curVal);\n-            }\n-            break;\n-        }\n-        case OPC_eglDestroyContext: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLContext context = (EGLContext)getPtr();\n-            if (execFlag) context = (EGLContext)getMap(eglContextMap, context);\n-            EGLBoolean curVal = proc_eglDestroyContext(dpy, context);\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglDestroyContext return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglMakeCurrent: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLSurface draw = (EGLSurface)getPtr();\n-            if (execFlag) draw = (EGLSurface)getMap(eglSurfaceMap, draw);\n-            EGLSurface read = (EGLSurface)getPtr();\n-            if (execFlag) read = (EGLSurface)getMap(eglSurfaceMap, read);\n-            EGLContext ctx = (EGLContext)getPtr();\n-            if (execFlag) ctx = (EGLContext)getMap(eglContextMap, ctx);\n-            EGLBoolean curVal = proc_eglMakeCurrent(dpy, draw, read, ctx);\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglMakeCurrent return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglGetCurrentContext:  NOT_IMPLEMENTED();\n-        case OPC_eglGetCurrentSurface:  NOT_IMPLEMENTED();\n-        case OPC_eglGetCurrentDisplay:  NOT_IMPLEMENTED();\n-        case OPC_eglQueryContext:       NOT_IMPLEMENTED();\n-        case OPC_eglWaitGL:             NOT_IMPLEMENTED();\n-        case OPC_eglWaitNative:         NOT_IMPLEMENTED();\n-        case OPC_eglSwapBuffers: {\n-            EGLDisplay dpy = (EGLDisplay)getPtr();\n-            EGLSurface surface = (EGLSurface)getPtr();\n-            if (execFlag) surface = (EGLSurface)getMap(eglSurfaceMap, surface);\n-\n-            \/\/ not working\n-            if (frames == 1) {\n-                readPixels();\n-            }\n-\n-            EGLBoolean curVal = proc_eglSwapBuffers(dpy, surface);\n-            EGLBoolean oldVal = getInt();\n-            if (printFlag) {\n-                sb_appendStr(\" = \");\n-                sb_appendInt(oldVal);\n-            }\n-            if (execFlag && curVal != oldVal) {\n-                fprintf(stderr, \"ERROR: eglSwapBuffers return mismatch\\n\");\n-            }\n-            break;\n-        }\n-        case OPC_eglCopyBuffers:        NOT_IMPLEMENTED();\n-#endif \/*linux *\/\n-\n-        case OPC_NONE:\n-        case OPC_EOF:\n-            return;\n-        default:\n-            NOT_IMPLEMENTED();\n-            return;\n-        }\n-\n-        getTime(&tbgn, &tend);\n-        if (printFlag) {\n-            if (printThread == (uint64_t)0 || (printThread == curThread && cmd != OPC_THREAD)) {\n-                fprintf(stdout, \"%llu %10llu\\t%s\\n\", tbgn, tend-tbgn, stringBuffer);\n-            }\n-        }\n-\n-        if (cmd == OPC_eglSwapBuffers) {\n-            if (fpsFlag) {\n-                fps_newFrame(curFrame, tend);\n-            }\n-            ++curFrame;\n-            --frames;\n-        }\n-    }\n-}\n-\n-#define ICMD_NONE       0\n-#define ICMD_QUIT       1\n-#define ICMD_INVALID    2\n-#define ICMD_HELP       3\n-#define ICMD_NEXTFRAME  4\n-#define ICMD_WRITE      5\n-\n-#define PIXEL_SIZE 4\n-static uint32_t wndWidth, wndHeight, wndDataSize;\n-static void *wndData;\n-\n-static void\n-readPixels()\n-{\n-    GLint viewPort[4];\n-    glGetIntegerv(GL_VIEWPORT, viewPort);\n-\n-    wndWidth = viewPort[2];\n-    wndHeight = viewPort[3];\n-    GLint nsize = wndWidth * wndHeight * PIXEL_SIZE;\n-    if (wndDataSize < nsize) {\n-        wndDataSize = nsize;\n-        wndData = realloc(wndData, wndDataSize);\n-        if (wndData == NULL) {\n-            fprintf(stderr, \"ERROR: can't allocate memory for pixels\\n\");\n-            return;\n-        }\n-    }\n-\n-    glFinish();\n-\n-    glPixelStorei(GL_PACK_ALIGNMENT,1);\n-    glReadPixels(viewPort[0], viewPort[1], viewPort[2], viewPort[3], GL_RGBA, GL_UNSIGNED_BYTE, wndData);\n-    if (glGetError() != GL_NO_ERROR) {\n-        fprintf(stderr, \"ERROR: can't read pixels\\n\");\n-        return;\n-    }\n-}\n-\n-#include <png.h>\n-\n-static void *\n-convertTexture565(uint32_t width, uint32_t height, const void *data)\n-{\n-    int pixcnt = width * height;\n-    uint8_t *ldata = (uint8_t*)malloc(pixcnt*3);\n-    if (ldata == NULL) return NULL;\n-\n-    uint16_t *src = (uint16_t*)data;\n-    uint8_t  *dst = ldata;\n-    int i;\n-    for (i=0; i<pixcnt; ++i) {\n-        uint16_t pix = *src++;\n-        *dst++ = (pix & 0xf800) >> 8;\n-        *dst++ = (pix & 0x07e0) >> 3;\n-        *dst++ = (pix & 0x001f) << 3;\n-    }\n-    return ldata;\n-}\n-\n-static int\n-savePNG(char *fName, GLenum format, GLenum type, uint32_t width, uint32_t height, const void *data)\n-{\n-    int png_type = 0;\n-    int pixel_size = 0;\n-    void *ldata = NULL;\n-    switch (format) {\n-        case GL_RGB:\n-            if (type == GL_UNSIGNED_SHORT_5_6_5) {\n-                ldata = convertTexture565(width, height, data);\n-                if (ldata == NULL) return 1;\n-                data = ldata;\n-            }\n-            else if (type != GL_UNSIGNED_BYTE) {\n-                fprintf(stderr, \"ERROR: savePNG: unknown type %s\\n\", glEnum2str(type));\n-                return 1;\n-            }\n-            png_type = PNG_COLOR_TYPE_RGB;\n-            pixel_size = 3;\n-            break;\n-        case GL_RGBA:\n-            png_type = PNG_COLOR_TYPE_RGBA;\n-            pixel_size = 4;\n-            break;\n-        case GL_LUMINANCE:\n-            png_type = PNG_COLOR_TYPE_GRAY;\n-            pixel_size = 1;\n-            break;\n-        case GL_LUMINANCE_ALPHA:\n-            png_type = PNG_COLOR_TYPE_GRAY_ALPHA;\n-            pixel_size = 2;\n-            break;\n-        case GL_ALPHA:\n-            png_type = PNG_COLOR_MASK_ALPHA;\n-            pixel_size = 1;\n-            break;\n-        default:\n-            fprintf(stderr, \"ERROR: savePNG: unknown format %s\\n\", glEnum2str(format));\n-            return 1;\n-    }\n-\n-    FILE *file = fopen(fName, \"w+\");\n-    if (file == NULL) {\n-        fprintf(stderr, \"ERROR: can't write to file: %s\\n\", fName);\n-        return 1;\n-    }\n-    png_structp png = png_create_write_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL);\n-    if (png == NULL) {\n-        fprintf(stderr, \"ERROR: can't create PNG\\n\");\n-        fclose(file);\n-        return 1;\n-    }\n-\n-    png_infop info = png_create_info_struct(png);\n-    if (info == NULL) {\n-        fprintf(stderr, \"ERROR: can't create PNG info\\n\");\n-    }\n-    else if (setjmp(png_jmpbuf(png))) {\n-        fprintf(stderr, \"ERROR: libpng error\\n\");\n-    }\n-    else {\n-        png_init_io(png, file);\n-\n-        png_set_IHDR(png, info, width, height, 8,\n-                     png_type, PNG_INTERLACE_NONE,\n-                     PNG_COMPRESSION_TYPE_DEFAULT, PNG_FILTER_TYPE_DEFAULT);\n-\n-        png_byte *rows[height];\n-        int i;\n-        for (i=0; i<height; ++i) {\n-            rows[i] = (png_byte*)data + (height - 1 - i) * width * pixel_size;\n-        }\n-\n-        png_set_rows(png, info, rows);\n-        png_write_png(png, info, PNG_TRANSFORM_IDENTITY, NULL);\n-    }\n-\n-    png_destroy_write_struct(&png, &info);\n-    fclose(file);\n-    if (ldata) free(ldata);\n-\n-    return 0;\n-}\n-\n-static void\n-interact()\n-{\n-    for (;;) {\n-        int repeat = -1;\n-        int cmd = 0;\n-        write(1, \"> \", 2);\n-        for (;;) {\n-            char c;\n-            if (read(0, &c, sizeof(char)) != sizeof(char)) return;\n-            if (cmd == ICMD_NONE && c >= '0' && c <= '9') {\n-                if (repeat < 0) repeat = 0;\n-                repeat = repeat * 10 + (c-'0');\n-            }\n-            else if (c == '\\n') {\n-                break;\n-            }\n-            else if (cmd != ICMD_NONE) {\n-                cmd = ICMD_INVALID;\n-            }\n-            else {\n-                switch (c) {\n-                    case 'q': cmd = ICMD_QUIT; break;\n-                    case 'h':\n-                    case '?': cmd = ICMD_HELP; break;\n-                    case 'n': cmd = ICMD_NEXTFRAME; break;\n-                    case 'w': cmd = ICMD_WRITE; break;\n-                    default:  cmd = ICMD_INVALID; break;\n-                }\n-            }\n-        }\n-\n-        if (repeat == -1 && cmd != ICMD_NONE) repeat = 1;\n-\n-        switch (cmd) {\n-            case ICMD_NONE:\n-                if (repeat >= 0) {\n-                    fprintf(stdout, \"ERROR: no command\\n\");\n-                }\n-                break;\n-            case ICMD_QUIT:\n-                return;\n-            case ICMD_HELP:\n-                fprintf(stdout, \"Commands:\\n\"\n-                        \"\\tq - quit\\n\"\n-                        \"\\t? - help\\n\"\n-                        \"\\t[<k>]n - skip <k> frames\\n\"\n-                        );\n-                break;\n-            case ICMD_NEXTFRAME:\n-                process(repeat);\n-                fprintf(stdout, \"current frame: %d\\n\", curFrame);\n-                break;\n-            case ICMD_WRITE: {\n-                char fName[32];\n-                snprintf(fName, sizeof(fName), \"frame%06d.png\", curFrame);\n-                savePNG(fName, GL_RGBA, GL_UNSIGNED_BYTE, wndWidth, wndHeight, wndData);\n-                fprintf(stdout, \"%s written\\n\", fName);\n-                break;\n-            }\n-            default:\n-            case ICMD_INVALID:\n-                fprintf(stderr, \"ERROR: unknown command\\n\");\n-                break;\n-        }\n-    }\n-}\n-\n-static void\n-usage(const char *progname)\n-{\n-    fprintf(stdout, \"Usage: %s [-print][-replay][-nofps] [file]\\n\"\n-                    \"\\t- if no flags are specified the program enters interactive mode\\n\",\n-                    progname);\n-}\n-\n-int\n-main(int argc, const char *argv[])\n-{\n-    int i;\n-    const char *fileName = NULL;\n-    int interactive = 1;\n-\n-    for (i=1; i<argc; ++i) {\n-        const char *arg = argv[i];\n-        if (*arg == '-') {\n-            if (strcmp(arg, \"-replay\") == 0) {\n-                interactive = 0;\n-                execFlag = 1;\n-            }\n-            else if (strcmp(arg, \"-print\") == 0) {\n-                interactive = 0;\n-                printFlag = 1;\n-            }\n-            else if (strcmp(arg, \"-printAll\") == 0) {\n-                interactive = 0;\n-                printFlag = 1;\n-                printArrays = 1;\n-            }\n-            else if (strcmp(arg, \"-nofps\") == 0) {\n-                fpsFlag = 0;\n-            }\n-            else if (strcmp(arg, \"-thread\") == 0) {\n-                if (++i >= argc) {\n-                    usage(argv[0]);\n-                    return;\n-                }\n-                printThread = atoll(argv[i]);\n-            }\n-            else if (strcmp(arg, \"-dumptextures\") == 0) {\n-                interactive = 0;\n-                dumpTexturesFlag = 1;\n-                if (mkdir(DIR_TEXTURES, S_IRUSR|S_IWUSR|S_IXUSR|S_IRGRP|S_IXGRP|S_IROTH|S_IXOTH)) {\n-                    if (errno != EEXIST) {\n-                        fprintf(stderr, \"ERROR: can't create directory %s\", DIR_TEXTURES);\n-                    }\n-                }\n-            }\n-            else {\n-                usage(argv[0]);\n-                return;\n-            }\n-        }\n-        else {\n-            fileName = arg;\n-            break;\n-        }\n-    }\n-\n-    sb_init();\n-    iolib_init(IO_READ, fileName);\n-\n-    if (interactive) {\n-        fpsFlag = 0;\n-        execFlag = 1;\n-\n-        wndDataSize = 0;\n-        wndData = NULL;\n-\n-        interact();\n-    }\n-    else {\n-        process(-1);\n-    }\n-\n-    if (fpsFlag) {\n-        fps_total();\n-    }\n-    iolib_fini();\n-    sb_fini();\n-\n-    return 0;\n-}\n","filename":"tools\/gltrace\/retrace.c","additions":0,"deletions":3955,"binary":false,"changes":3955,"status":"deleted"},{"patch":"@@ -1,203 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#define _GNU_SOURCE\n-#include <dlfcn.h>\n-#include <stdio.h>\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-#include \"trace.h\"\n-\n-static int tLevel = trcLevel;\n-\n-struct dlfcn_hook {\n-    void *(*dlopen)(const char *, int, void *);\n-    int (*dlclose)(void *);\n-    void *(*dlsym)(void *, const char *, void *);\n-    void *(*dlvsym)(void *, const char *, const char *, void *);\n-    char *(*dlerror)(void);\n-    int (*dladdr)(const void *, Dl_info *);\n-    int (*dladdr1)(const void *, Dl_info *, void **, int);\n-    int (*dlinfo)(void *, int, void *, void *);\n-    void *(*dlmopen)(Lmid_t, const char *, int, void *);\n-    void *pad[4];\n-};\n-\n-static void *trace_dlopen(const char*, int, void*);\n-static int   trace_dlclose(void *);\n-static void *trace_dlsym(void *, const char *, void *);\n-static void *trace_dlvsym(void *, const char *, const char *, void *);\n-static char *trace_dlerror(void);\n-static int   trace_dladdr(const void *, Dl_info *);\n-static int   trace_dladdr1(const void *, Dl_info *, void **, int);\n-static int   trace_dlinfo(void *, int, void *, void *);\n-static void *trace_dlmopen(Lmid_t, const char *, int, void *);\n-\n-static struct dlfcn_hook dlfcn_hook = {\n-    .dlopen   = trace_dlopen,\n-    .dlclose  = trace_dlclose,\n-    .dlsym    = trace_dlsym,\n-    .dlvsym   = trace_dlvsym,\n-    .dlerror  = trace_dlerror,\n-    .dladdr   = trace_dladdr,\n-    .dladdr1  = trace_dladdr1,\n-    .dlinfo   = trace_dlinfo,\n-    .dlmopen  = trace_dlmopen,\n-    .pad      = {0, 0, 0, 0},\n-};\n-\n-struct dlfcn_hook *dlfcn_hook_orig;\n-struct dlfcn_hook *dlfcn_hook_trace = &dlfcn_hook;\n-\n-static void *libSelf = NULL;\n-\n-void    *\n-trace_dlopen(const char *file, int mode, void *dl_caller)\n-{\n-    DLFCN_HOOK_POP();\n-    void *result = dlopen(file, mode);\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-int\n-trace_dlclose(void *handle)\n-{\n-    DLFCN_HOOK_POP();\n-    int result = dlclose(handle);\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-void *\n-trace_dlsym(void *handle, const char *name, void *dl_caller)\n-{\n-    DLFCN_HOOK_POP();\n-    void *result = dlsym(libSelf, name);\n-    if (tLevel >= dbgLevel && result != NULL) {\n-        fprintf(stderr, \"INTERCEPTION: %p %s = %p\\n\", handle, name, result);\n-    }\n-    if (result == NULL) {\n-        result = dlsym(handle, name);\n-    }\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-void *\n-trace_dlvsym(void *handle, const char *name, const char *version, void *dl_caller)\n-{\n-    DLFCN_HOOK_POP();\n-    void *result = dlvsym(libSelf, name, version);\n-    if (tLevel >= dbgLevel && result != NULL) {\n-        fprintf(stderr, \"INTERCEPTION: %p %s.%s = %p\\n\", handle, name, version, result);\n-    }\n-    if (result == NULL) {\n-        result = dlvsym(handle, name, version);\n-    }\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-char *\n-trace_dlerror(void)\n-{\n-    DLFCN_HOOK_POP();\n-    char *result = dlerror();\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-int\n-trace_dladdr(const void *address, Dl_info *info)\n-{\n-    DLFCN_HOOK_POP();\n-    int result = dladdr(address, info);\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-int\n-trace_dladdr1(const void *address, Dl_info *info, void **extra, int flags)\n-{\n-    DLFCN_HOOK_POP();\n-    int result = dladdr1(address, info, extra, flags);\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-int\n-trace_dlinfo(void *handle, int request, void *arg, void *dl_caller)\n-{\n-    DLFCN_HOOK_POP();\n-    int result = dlinfo(handle, request, arg);\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-void *\n-trace_dlmopen(Lmid_t nsid, const char *file, int mode, void *dl_caller)\n-{\n-    DLFCN_HOOK_POP();\n-    void *result = dlmopen(nsid, file, mode);\n-    DLFCN_HOOK_PUSH();\n-    return result;\n-}\n-\n-\n-\/*\n- *    Init\/fini\n- *\/\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    Dl_info info;\n-    if (dladdr(&init, &info)) {\n-        libSelf = dlopen(info.dli_fname, RTLD_LAZY|RTLD_NOLOAD);\n-    }\n-\n-    iolib_init(IO_WRITE, NULL);\n-\n-    DLFCN_HOOK_INIT();\n-    DLFCN_HOOK_PUSH();\n-\n-    if (tLevel >= dbgLevel) {\n-         fprintf(stderr, \"INTERPOSITION STARTED\\n\");\n-    }\n-}\n-\n-static void fini() __attribute__ ((destructor));\n-static void fini()\n-{\n-    DLFCN_HOOK_POP();\n-    iolib_fini();\n-\n-    if (tLevel >= dbgLevel) {\n-         fprintf(stderr, \"INTERPOSITION FINISHED\\n\");\n-    }\n-}\n","filename":"tools\/gltrace\/trace-linux.c","additions":0,"deletions":203,"binary":false,"changes":203,"status":"deleted"},{"patch":"@@ -1,247 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#define _GNU_SOURCE\n-#include <dlfcn.h>\n-#include <stdio.h>\n-\n-#include <OpenGL\/gl.h>\n-#include <OpenGL\/glext.h>\n-\n-#include \"os.h\"\n-#include \"iolib.h\"\n-#include \"trace.h\"\n-\n-static int tLevel = trcLevel;\n-\n-#define INTERPOSE(func) \\\n-extern void gltrace_##func(); \\\n-void* interpose_##func[] __attribute__ ((section(\"__DATA, __interpose\"))) = { gltrace_##func, func }\n-\n-INTERPOSE(glActiveTexture);\n-INTERPOSE(glAttachShader);\n-INTERPOSE(glBindAttribLocation);\n-INTERPOSE(glBindBuffer);\n-INTERPOSE(glBindFramebuffer);\n-INTERPOSE(glBindRenderbuffer);\n-INTERPOSE(glBindTexture);\n-INTERPOSE(glBlendColor);\n-INTERPOSE(glBlendEquation);\n-INTERPOSE(glBlendEquationSeparate);\n-INTERPOSE(glBlendFunc);\n-INTERPOSE(glBlendFuncSeparate);\n-INTERPOSE(glBufferData);\n-INTERPOSE(glBufferSubData);\n-INTERPOSE(glCheckFramebufferStatus);\n-INTERPOSE(glClear);\n-INTERPOSE(glClearColor);\n-#if !MACOSX\n-INTERPOSE(glClearDepthf);\n-#endif\n-INTERPOSE(glClearStencil);\n-INTERPOSE(glColorMask);\n-INTERPOSE(glCompileShader);\n-INTERPOSE(glCompressedTexImage2D);\n-INTERPOSE(glCompressedTexSubImage2D);\n-INTERPOSE(glCopyTexImage2D);\n-INTERPOSE(glCopyTexSubImage2D);\n-INTERPOSE(glCreateProgram);\n-INTERPOSE(glCreateShader);\n-INTERPOSE(glCullFace);\n-INTERPOSE(glDeleteBuffers);\n-INTERPOSE(glDeleteFramebuffers);\n-INTERPOSE(glDeleteProgram);\n-INTERPOSE(glDeleteRenderbuffers);\n-INTERPOSE(glDeleteShader);\n-INTERPOSE(glDeleteTextures);\n-INTERPOSE(glDepthFunc);\n-INTERPOSE(glDepthMask);\n-#if !MACOSX\n-INTERPOSE(glDepthRangef);\n-#endif\n-INTERPOSE(glDetachShader);\n-INTERPOSE(glDisable);\n-INTERPOSE(glDisableVertexAttribArray);\n-INTERPOSE(glDrawArrays);\n-INTERPOSE(glDrawElements);\n-INTERPOSE(glEnable);\n-INTERPOSE(glEnableVertexAttribArray);\n-INTERPOSE(glFinish);\n-INTERPOSE(glFlush);\n-INTERPOSE(glFramebufferRenderbuffer);\n-INTERPOSE(glFramebufferTexture2D);\n-INTERPOSE(glFrontFace);\n-INTERPOSE(glGenBuffers);\n-INTERPOSE(glGenerateMipmap);\n-INTERPOSE(glGenFramebuffers);\n-INTERPOSE(glGenRenderbuffers);\n-INTERPOSE(glGenTextures);\n-INTERPOSE(glGetActiveAttrib);\n-INTERPOSE(glGetActiveUniform);\n-INTERPOSE(glGetAttachedShaders);\n-INTERPOSE(glGetAttribLocation);\n-INTERPOSE(glGetBooleanv);\n-INTERPOSE(glGetBufferParameteriv);\n-INTERPOSE(glGetError);\n-INTERPOSE(glGetFloatv);\n-INTERPOSE(glGetFramebufferAttachmentParameteriv);\n-INTERPOSE(glGetIntegerv);\n-INTERPOSE(glGetProgramiv);\n-INTERPOSE(glGetProgramInfoLog);\n-INTERPOSE(glGetRenderbufferParameteriv);\n-INTERPOSE(glGetShaderiv);\n-INTERPOSE(glGetShaderInfoLog);\n-#if !MACOSX\n-INTERPOSE(glGetShaderPrecisionFormat);\n-#endif\n-INTERPOSE(glGetShaderSource);\n-INTERPOSE(glGetString);\n-INTERPOSE(glGetTexParameterfv);\n-INTERPOSE(glGetTexParameteriv);\n-INTERPOSE(glGetUniformfv);\n-INTERPOSE(glGetUniformiv);\n-INTERPOSE(glGetUniformLocation);\n-INTERPOSE(glGetVertexAttribfv);\n-INTERPOSE(glGetVertexAttribiv);\n-INTERPOSE(glGetVertexAttribPointerv);\n-INTERPOSE(glHint);\n-INTERPOSE(glIsBuffer);\n-INTERPOSE(glIsEnabled);\n-INTERPOSE(glIsFramebuffer);\n-INTERPOSE(glIsProgram);\n-INTERPOSE(glIsRenderbuffer);\n-INTERPOSE(glIsShader);\n-INTERPOSE(glIsTexture);\n-INTERPOSE(glLineWidth);\n-INTERPOSE(glLinkProgram);\n-INTERPOSE(glPixelStorei);\n-INTERPOSE(glPolygonOffset);\n-INTERPOSE(glReadPixels);\n-#if !MACOSX\n-INTERPOSE(glReleaseShaderCompiler);\n-#endif\n-INTERPOSE(glRenderbufferStorage);\n-INTERPOSE(glSampleCoverage);\n-INTERPOSE(glScissor);\n-#if !MACOSX\n-INTERPOSE(glShaderBinary);\n-#endif\n-INTERPOSE(glShaderSource);\n-INTERPOSE(glStencilFunc);\n-INTERPOSE(glStencilFuncSeparate);\n-INTERPOSE(glStencilMask);\n-INTERPOSE(glStencilMaskSeparate);\n-INTERPOSE(glStencilOp);\n-INTERPOSE(glStencilOpSeparate);\n-INTERPOSE(glTexImage2D);\n-INTERPOSE(glTexParameterf);\n-INTERPOSE(glTexParameterfv);\n-INTERPOSE(glTexParameteri);\n-INTERPOSE(glTexParameteriv);\n-INTERPOSE(glTexSubImage2D);\n-INTERPOSE(glUniform1f);\n-INTERPOSE(glUniform1fv);\n-INTERPOSE(glUniform1i);\n-INTERPOSE(glUniform1iv);\n-INTERPOSE(glUniform2f);\n-INTERPOSE(glUniform2fv);\n-INTERPOSE(glUniform2i);\n-INTERPOSE(glUniform2iv);\n-INTERPOSE(glUniform3f);\n-INTERPOSE(glUniform3fv);\n-INTERPOSE(glUniform3i);\n-INTERPOSE(glUniform3iv);\n-INTERPOSE(glUniform4f);\n-INTERPOSE(glUniform4fv);\n-INTERPOSE(glUniform4i);\n-INTERPOSE(glUniform4iv);\n-INTERPOSE(glUniformMatrix2fv);\n-INTERPOSE(glUniformMatrix3fv);\n-INTERPOSE(glUniformMatrix4fv);\n-INTERPOSE(glUseProgram);\n-INTERPOSE(glValidateProgram);\n-INTERPOSE(glVertexAttrib1f);\n-INTERPOSE(glVertexAttrib1fv);\n-INTERPOSE(glVertexAttrib2f);\n-INTERPOSE(glVertexAttrib2fv);\n-INTERPOSE(glVertexAttrib3f);\n-INTERPOSE(glVertexAttrib3fv);\n-INTERPOSE(glVertexAttrib4f);\n-INTERPOSE(glVertexAttrib4fv);\n-INTERPOSE(glVertexAttribPointer);\n-INTERPOSE(glViewport);\n-\n-#if MACOSX\n-INTERPOSE(glBegin);\n-INTERPOSE(glEnd);\n-INTERPOSE(glIsRenderbufferEXT);\n-INTERPOSE(glBindRenderbufferEXT);\n-INTERPOSE(glDeleteRenderbuffersEXT);\n-INTERPOSE(glGenRenderbuffersEXT);\n-INTERPOSE(glRenderbufferStorageEXT);\n-INTERPOSE(glGetRenderbufferParameterivEXT);\n-INTERPOSE(glIsFramebufferEXT);\n-INTERPOSE(glBindFramebufferEXT);\n-INTERPOSE(glDeleteFramebuffersEXT);\n-INTERPOSE(glGenFramebuffersEXT);\n-INTERPOSE(glCheckFramebufferStatusEXT);\n-INTERPOSE(glFramebufferTexture1DEXT);\n-INTERPOSE(glFramebufferTexture2DEXT);\n-INTERPOSE(glFramebufferTexture3DEXT);\n-INTERPOSE(glFramebufferRenderbufferEXT);\n-INTERPOSE(glGetFramebufferAttachmentParameterivEXT);\n-INTERPOSE(glGenerateMipmapEXT);\n-INTERPOSE(glGenFencesAPPLE);\n-INTERPOSE(glDeleteFencesAPPLE);\n-INTERPOSE(glSetFenceAPPLE);\n-INTERPOSE(glIsFenceAPPLE);\n-INTERPOSE(glTestFenceAPPLE);\n-INTERPOSE(glFinishFenceAPPLE);\n-INTERPOSE(glTestObjectAPPLE);\n-INTERPOSE(glFinishObjectAPPLE);\n-#endif\n-\n-\/*\n- *    Init\/fini\n- *\/\n-\n-static void init() __attribute__ ((constructor));\n-static void\n-init()\n-{\n-    iolib_init(IO_WRITE, NULL);\n-    if (tLevel >= dbgLevel) {\n-        fprintf(stderr, \"INTERPOSITION STARTED\\n\");\n-    }\n-}\n-\n-static void fini() __attribute__ ((destructor));\n-static void fini()\n-{\n-    iolib_fini();\n-    if (tLevel >= dbgLevel) {\n-        fprintf(stderr, \"INTERPOSITION FINISHED\\n\");\n-    }\n-}\n","filename":"tools\/gltrace\/trace-macosx.c","additions":0,"deletions":247,"binary":false,"changes":247,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef GLTRACE_TRACE_H\n-#define GLTRACE_TRACE_H\n-\n-#define trcLevel 0\n-#define dbgLevel 1\n-\n-#if linux\n-\n-struct dlfcn_hook;\n-extern struct dlfcn_hook *_dlfcn_hook;\n-extern struct dlfcn_hook *dlfcn_hook_orig;\n-extern struct dlfcn_hook *dlfcn_hook_trace;\n-\n-#define DLFCN_HOOK_INIT()        dlfcn_hook_orig = _dlfcn_hook\n-#define DLFCN_HOOK_POP()        _dlfcn_hook = dlfcn_hook_orig\n-#define DLFCN_HOOK_PUSH()       _dlfcn_hook = dlfcn_hook_trace\n-\n-#endif \/* linux *\/\n-\n-\n-#endif \/* GLTRACE_TRACE_H *\/\n","filename":"tools\/gltrace\/trace.h","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,228 +0,0 @@\n-#!\/bin\/bash\n-# a tool to detect whitespace issues in source files or executable files\n-# with the -F option, it should repair the files\n-# This should be a superset of what jcheck is looking for\n-\n-showHelp() {\n-    cat <<-EOF\n-Usage: $0 [-avSF] [-r <spec>]\n-  -a           : use repo manifest for check\n-  -v           : verbose\n-  -V           : very verbose (debug)\n-  -S           : read file list from stdin\n-  -F           : fix files\n-  -r <spec>    : mercurial revision spec\n-  -x           : check for the executable bit (not on windows)\n-EOF\n-    exit 1\n-}\n-\n-# directory this script is in\n-MYDIR=\"$( dirname $0 )\"\n-\n-verbose=''\n-veryverbose=''\n-allrepo=''\n-fixfiles=''\n-readstdin=''\n-revisionspec=''\n-executablecheck=''\n-\n-tofixargs=\"-F\"\n-\n-while getopts \":avEFSVxr:\" opt;\n-do\n-    case $opt in\n-    a)\n-        allrepo='true'\n-        tofixargs=\"${tofixargs} -a\"\n-        ;;\n-    S)\n-        readstdin='true'\n-        ;;\n-    v)\n-        verbose='true'\n-        ;;\n-    V)\n-        verbose='true'\n-        veryverbose='true'\n-        ;;\n-    E)\n-        echo \"ignoring obsolete '-E' option\"\n-        ;;\n-    F)\n-        fixfiles='true'\n-        ;;\n-    r)\n-        revisionspec=\"$OPTARG\"\n-        ;;\n-    x)\n-        executablecheck='true'\n-        tofixargs=\"${tofixargs} -x\"\n-        ;;\n-    \\?)\n-        echo \"Invalid argument $OPTARG\"\n-        showHelp\n-        ;;\n-    :)\n-        echo \"Option -$OPTARG requires an argument.\" >&2\n-        showHelp\n-        ;;\n-    esac\n-done\n-\n-match_extension() {\n-    case \"$1\" in\n-    *.java|*.cc|*.c|*.h|*.cpp|*.hpp|*.jsl|*.fxml|*.css|*.m|*.mm|*.frag|*.vert|*.hlsl|*.metal|*.gradle|*.groovy|*.g4|*.stg)\n-        return 0\n-        ;;\n-    esac\n-    return 1\n-}\n-\n-fix_file() {\n-    endstatus=1\n-    if [ \"$executablecheck\" -a -x \"${file}\" ]\n-    then\n-        chmod a-x \"${file}\"\n-        echo \"${file}: execute corrected\"\n-        endstatus=0\n-    fi\n-    match_extension \"${file}\"\n-    if [ $? -eq 0 ]\n-    then\n-        grep -U -q -e $'\\t'  -e '[[:blank:]]$' -e $'\\r' ${file}\n-        if [ $? -eq 0 ]\n-        then\n-            expand -4 < \"${file}\" | tr -d \"\\r\" | sed -e 's\/[[:blank:]]*$\/\/' > \"${file}.fws\"\n-            if [ -f \"${file}.fws\" ]\n-            then\n-                rm -f \"${file}\"\n-                mv \"${file}.fws\" \"${file}\"\n-                echo \"${file}: fixed\"\n-            else\n-                echo \"Failed to fix ${file}\"\n-                exit -1\n-            fi\n-            endstatus=0\n-        else\n-            [ \"$verbose\" ] &&\n-                echo \"${file}: no change\"\n-        fi\n-    fi\n-    return $endstatus\n-}\n-\n-check_file() {\n-    file=\"$1\"\n-    message=':'\n-    if [ \"$executablecheck\" -a -x \"${file}\" ]\n-    then\n-       message=\"executable:\"\n-    fi\n-    match_extension \"${file}\"\n-    if [ $? -eq 0 ]\n-    then\n-        grep -Uqs -e $'\\t'  -e '[[:blank:]]$' -e $'\\r' \"${file}\"\n-        if [ $? -eq 0 ]\n-        then\n-            grep -Uqs -e $'\\t' \"${file}\"\n-            [ $? -eq 0 ] &&\n-                message=\"${message}tabs:\"\n-            grep -Uqs -e '[[:blank:]]$' \"${file}\"\n-            [ $? -eq 0 ] &&\n-                message=\"${message}trailingWhitespace:\"\n-            grep -Uqs -e $'\\r' \"${file}\"\n-            [ $? -eq 0 ] &&\n-                message=\"${message}DOS:\"\n-        fi\n-    fi\n-    if [ \"$message\" != \":\" ]\n-    then\n-        echo \"${file} ${message}\"\n-        return 0\n-    else\n-        [ \"$verbose\" ] && echo \"${file} :OK\"\n-        return 1\n-    fi\n-}\n-\n-process_files() {\n-    let fails=0\n-    while read file\n-    do\n-       if [ \"$fixfiles\" ]\n-       then\n-           fix_file \"${file}\"\n-           [ $? -eq 0 ] && let fails=fails+1\n-       else\n-           check_file \"${file}\"\n-           [ $? -eq 0 ] && let fails=fails+1\n-       fi\n-    done\n-\n-    # show a message if we are not correcting the files\n-    if [ \"$fails\" -ne 0 -a -z \"$fixfiles\" ]\n-    then\n-        echo\n-        echo \"Found $fails whitespace or executable issues\"\n-        echo\n-        echo \"To correct, use\"\n-        echo \"   bash ${MYDIR}\/checkWhiteSpace ${tofixargs}\"\n-        echo\n-        exit 1\n-    elif [ \"$fails\" -ne 0 -a \"$fixfiles\" ]\n-    then\n-        echo\n-        echo \"Corrected $fails whitespace or executable issues\"\n-        echo\n-        exit 1\n-    else\n-        exit 0\n-    fi\n-}\n-\n-if [ \"$allrepo\" ]\n-then\n-   hg man | process_files\n-   exit $?\n-fi\n-\n-if [ \"$readstdin\" ]\n-then\n-   process_files\n-   exit $?\n-fi\n-\n-# check for \"loose\" files and check them\n-loosefiles=`hg status -m -a -n `\n-if [ ! -z \"$loosefiles\" -a  -z \"$revisionspec\" ]\n-then\n-   [ \"$verbose\" ] && echo \"Checking uncommitted files\"\n-   hg status -m -a -n | process_files\n-   exit $?\n-fi\n-\n-if [ -z \"$revisionspec\" ]\n-then\n-    # check for either an applied set of MQ patches\n-    # or the outgoing changeset\n-\n-    hg qtop -s > \/dev\/null 2>&1\n-    if [ $? -eq 0 ]\n-    then\n-       [ \"$verbose\" ] && echo \"Checking MQ files\"\n-        revisionspec=\"qbase:qtip\"\n-    fi\n-\n-    # no loose files, no MQ, lets use outgoing changes\n-    if [ -z \"$revisionspec\" ]\n-    then\n-        revisionspec=\"outgoing()\"\n-    fi\n-fi\n-\n-[ \"$verbose\" ] && echo \"Using a revision range of $revisionspec\"\n-hg log -r \"$revisionspec\" --style ${MYDIR}\/files.style | process_files\n-exit $?\n-\n","filename":"tools\/scripts\/checkWhiteSpace","additions":0,"deletions":228,"binary":false,"changes":228,"status":"deleted"},{"patch":"@@ -1,133 +0,0 @@\n-#!\/bin\/bash\n-#\n-# a simple script to compare the file output of two builds.\n-#\n-# usage: compareBuilds full_path_to_top_one full_path_to_top_two\n-\n-# TODO KCR: update this to also compare standalone sdk\n-\n-one=\"$1\"\n-two=\"$2\"\n-\n-if [ \"$one\" = '.' ]\n-then\n-    one=\"$PWD\"\n-fi\n-if [ -d \"$one\/rt\" ]\n-then\n-    one=\"$one\/rt\"\n-fi\n-\n-if [ \"$two\" = '.' ]\n-then\n-    two=\"$PWD\"\n-fi\n-if [ -d \"$two\/rt\" ]\n-then\n-    two=\"$two\/rt\"\n-fi\n-\n-echo \"Comparing:\"\n-echo \"    one: $one\"\n-echo \"    two: $two\"\n-\n-if [ ! -d \"$one\/..\/rt\" -o ! -d \"$two\/..\/rt\" ]\n-then\n-  echo \"error: $0 repo_one repo_two\"\n-  exit 0\n-fi\n-\n-CYGPATH=''\n-platform=''\n-case \"`uname`\" in\n-    Darwin*) \n-        platform='mac'\n-        ;;\n-    CYGWIN*) \n-        platform='cygwin'\n-        CYGPATH=\"cygpath -m\"\n-        ;;\n-    Linux*)  \n-        platform='linux'\n-        ;;\n-esac\n-\n-doCygpath() {\n-    if [ \"${CYGPATH}\" ]\n-    then\n-        eval ${CYGPATH} \"${1}\"\n-    else\n-        echo \"${1}\"\n-    fi\n-}\n-\n-echo \"Comparing rt\/build files:\"\n-(cd \"$one\";\n- find build -type f | sort > \/tmp\/build-files-one\n-) \n-\n-(cd \"$two\";\n- find build -type f | sort > \/tmp\/build-files-two\n-) \n-\n-comm -13 \/tmp\/build-files-one \/tmp\/build-files-two | while read f\n-do\n-    echo \"    new: ${f}\"\n-done\n-\n-comm -23 \/tmp\/build-files-one \/tmp\/build-files-two | while read f\n-do\n-    echo \"    missing: ${f}\"\n-done\n-\n-\n-#########################################################\n-\n-(cd \"$one\";\n- find build\/modular-sdk\/modules_libs -name '*.jar') | while read i\n-do\n-    if [ -f \"${one}\/$i\" -a -f \"${two}\/$i\" ]\n-    then\n-        jar=${i##*\/}\n-        jar=${jar%.jar}\n-        echo \"Comparing JAR $i $jar\"\n-        jar tf `doCygpath \"${one}\/$i\"` | sort > \/tmp\/files-one-$jar\n-        jar tf `doCygpath \"${two}\/$i\"` | sort > \/tmp\/files-two-$jar\n-        comm -13 \/tmp\/files-one-$jar \/tmp\/files-two-$jar | while read f\n-        do\n-            echo \"    new: ${f}\"\n-        done\n-        comm -23 \/tmp\/files-one-$jar \/tmp\/files-two-$jar | while read f\n-        do\n-            echo \"    missing: ${f}\"\n-        done\n-    else\n-        echo \"Skipping missing JAR $i $jar\"\n-    fi\n-done\n-\n-#########################################################\n-\n-if [ -d \"$one\/..\/artifacts\" -a -d \"$two\/..\/artifacts\" ]\n-then\n-    echo \"Comparing artifact files:\"\n-    (cd \"$one\/..\/artifacts\";\n-     find . -type f | sort > \/tmp\/artifact-files-one\n-    ) \n-\n-    (cd \"$two\/..\/artifacts\";\n-     find . -type f | sort > \/tmp\/artifact-files-two\n-    ) \n-\n-    comm -13 \/tmp\/artifact-files-one \/tmp\/artifact-files-two | while read f\n-    do\n-        echo \"    new: ${f}\"\n-    done\n-\n-    comm -23 \/tmp\/artifact-files-one \/tmp\/artifact-files-two | while read f\n-    do\n-        echo \"    missing: ${f}\"\n-    done\n-\n-\n-fi\n","filename":"tools\/scripts\/compareBuilds","additions":0,"deletions":133,"binary":false,"changes":133,"status":"deleted"},{"patch":"@@ -1,2 +0,0 @@\n-changeset = \"{files}\"\n-file = \"{file}\\n\"\n","filename":"tools\/scripts\/files.style","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -1,27 +0,0 @@\n-#!\/bin\/bash\n-#\n-# use as a pipe to rename an jdk 8 module path to the jdk 9 module path\n-#\n-\n-case \"`uname`\" in\n-    Darwin*) platform=\"macosx\";;\n-    CYGWIN*) platform=\"windows\" ; PATHSEP=\";\";;\n-    Windows_NT*) platform=\"mks\" ; PATHSEP=\";\";;\n-    Linux*)  platform=\"linux\";;\n-    SunOS*)  platform=\"solaris\";;\n-esac\n-\n-if [ \"X$platform\" = \"Xmacosx\" ]\n-then\n-sed -E \\\n- -e '\/^(diff |--- |\\+\\+\\+ )\/s,modules\/extensions\/,extensions\/,g' \\\n- \\\n- -e '\/^(diff |--- |\\+\\+\\+ )\/s,modules\/(base|graphics|controls|swing|media|web|fxml|swt)\/,modules\/javafx.\\1\/,g' \n-else\n-sed \\\n- -e '\/^\\(diff \\|--- \\|+++ \\)\/s,modules\/extensions\/,extensions\/,g' \\\n- \\\n- -e '\/^\\(diff \\|--- \\|+++ \\)\/s,modules\/\\(base\\|graphics\\|controls\\|swing\\|media\\|web\\|fxml\\|swt\\)\/,modules\/javafx.\\1\/,g' \n-fi\n-\n-exit 0\n","filename":"tools\/scripts\/fix_patch_8_9","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -1,35 +0,0 @@\n-#!\/bin\/bash\n-#\n-# use as a pipe to rename an jdk 9  module path to the jdk 8 module path\n-#\n-\n-case \"`uname`\" in\n-    Darwin*) platform=\"macosx\";;\n-    CYGWIN*) platform=\"windows\" ; PATHSEP=\";\";;\n-    Windows_NT*) platform=\"mks\" ; PATHSEP=\";\";;\n-    Linux*)  platform=\"linux\";;\n-    SunOS*)  platform=\"solaris\";;\n-esac\n-\n-if [ \"X$platform\" = \"Xmacosx\" ]\n-then\n-sed  -E \\\n- -e '\/^(diff |--- |\\+\\+\\+ )\/s,extensions\/,modules\/extensions\/,g' \\\n- \\\n- -e '\/^(diff |--- |\\+\\+\\+ )\/s,modules\/javafx.([a-z]*)\/src\/test\/java\/test\/,modules\/\\1\/src\/test\/java\/,g' \\\n- -e '\/^(diff |--- |\\+\\+\\+ )\/s,tests\/system\/src\/test\/java\/test\/,tests\/system\/src\/test\/java\/,g' \\\n- \\\n- -e '\/^(diff |--- |\\+\\+\\+ )\/s,modules\/javafx.(base|graphics|controls|swing|media|web|fxml|swt)\/,modules\/\\1\/,g' \n-\n-else\n-sed \\\n- -e '\/^\\(diff \\|--- \\|+++ \\)\/s,extensions\/,modules\/extensions\/,g' \\\n- \\\n- -e '\/^\\(diff \\|--- \\|+++ \\)\/s,modules\/javafx.\\(base\\|graphics\\|controls\\|swing\\|media\\|web\\|fxml\\|swt\\)\/src\/test\/java\/test\/,modules\/\\1\/src\/test\/java\/,g' \\\n- -e '\/^\\(diff \\|--- \\|+++ \\)\/s,tests\/system\/src\/test\/java\/test\/,tests\/system\/src\/test\/java\/,g' \\\n- \\\n- -e '\/^\\(diff \\|--- \\|+++ \\)\/s,modules\/javafx.\\(base\\|graphics\\|controls\\|swing\\|media\\|web\\|fxml\\|swt\\)\/,modules\/\\1\/,g' \n-\n-fi\n-\n-exit 0\n","filename":"tools\/scripts\/fix_patch_9_8","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -1,110 +0,0 @@\n-#!\/bin\/bash\n-#\n-# given a pointer to the directory containing the modules...\n-# create a working run.args file that has the full paths\n-# in place\n-#\n-\n-# TODO KCR: update this for standalone vs bundled sdk\n-\n-TOP=\"$1\"\n-\n-do_cygpath() \n-{\n-    if [ \"$platform\" = \"windows\" ]\n-    then\n-        cygpath -m \"$1\"\n-    else\n-        echo \"$1\"\n-    fi\n-}\n-\n-MODULES=\"javafx.base javafx.graphics javafx.swing javafx.controls javafx.fxml javafx.media javafx.web\"\n-XPATCHFILE=run.args\n-\n-if [ ! -d \"$TOP\" ]\n-then\n-    if [ ! -z \"$JAVAFX_HOME\" ]\n-    then\n-        echo \"Assuming you meant ${JAVAFX_HOME}\"\n-        TOP=\"${JAVAFX_HOME}\"\n-    else\n-        echo \"Error: please provide the path to the directory\"\n-        exit 1\n-    fi\n-fi\n-\n-# add some easy affordances :-)\n-if [ \"X$TOP\" = 'X.' ]\n-then\n-    TOP=\"$PWD\"\n-fi\n-\n-if [ -d \"$TOP\/build\/modular-sdk\/modules\" ]\n-then\n-    echo \"adding build\/modular-sdk\/modules\"\n-    TOP=`do_cygpath \"$TOP\/build\/modular-sdk\"`\n-elif [ -d \"$TOP\/modular-sdk\/modules\" ]\n-then\n-    echo \"adding modular-sdk\/modules\"\n-    TOP=`do_cygpath \"$TOP\/modular-sdk\"`\n-fi\n-MODTOP=\"$TOP\/modules\"\n-LIBTOP=\"$TOP\/modules_libs\"\n-\n-if [ ! -d \"$MODTOP\" -o ! -d \"$LIBTOP\" ]\n-then\n-    echo \"Error, did not find one of:\"\n-    echo \"    module top  $MODTOP\"\n-    echo \"    library top $LIBTOP\"\n-    exit -1\n-fi\n-\n-echo \"#generated from $0\" > \"${XPATCHFILE}\"\n-\n-JAVA_LIBRARY_PATH=''\n-\n-PATHSEP=':'\n-case \"`uname`\" in\n-    Darwin*) platform=\"macosx\";;\n-    CYGWIN*) platform=\"windows\" ; PATHSEP=\";\";;\n-    Windows_NT*) platform=\"mks\" ; PATHSEP=\";\";;\n-    Linux*)  platform=\"linux\";;\n-    SunOS*)  platform=\"solaris\";;\n-esac\n-\n-NL=$'\\n'\n-\n-for mod in $MODULES\n-do\n-    if [ ! -d \"$MODTOP\/${mod}\" ]\n-    then\n-        echo \"Warning: ${mod} package is missing from $MODTOP\/${mod}\"\n-    fi\n-    mp=`do_cygpath \"$MODTOP\/${mod}\"`\n-    echo \"--patch-module=\\\"${mod}=$mp\\\"\"\n-    echo \"--patch-module=\\\"${mod}=$mp\\\"\" >> \"${XPATCHFILE}\"\n-\n-    # note: javafx.base exists, but currently does not have any shared libs in it.\n-    # add it anyway\n-    lp=`do_cygpath \"$LIBTOP\/${mod}\"`\n-    if [ -d \"${lp}\" ]\n-    then\n-        if [ -z \"${JAVA_LIBRARY_PATH}\" ]\n-        then\n-            JAVA_LIBRARY_PATH=\"-Djava.library.path=\\\"\\\\${NL}  ${lp}\"\n-        else\n-            JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}\\\\${NL}  ${PATHSEP}${lp}\"\n-        fi\n-    fi\n-done\n-\n-if [ ! -z \"${JAVA_LIBRARY_PATH}\" ]\n-then\n-    echo \"${JAVA_LIBRARY_PATH}\\\"\" \n-    echo \"${JAVA_LIBRARY_PATH}\\\"\" >> \"${XPATCHFILE}\"\n-fi\n-\n-echo \"#\"\n-echo \"#Your run.args file is ${XPATCHFILE}\"\n-\n","filename":"tools\/scripts\/make_runargs.sh","additions":0,"deletions":110,"binary":false,"changes":110,"status":"deleted"},{"patch":"@@ -1,154 +0,0 @@\n-#!\/bin\/bash\n-#\n-# a script to identify what changed in out output tree between builds\n-# Run from the top of the tree (.\/rt)\n-# The first time, sum files will be created in HASHDIR.\n-# each time after,\n-#  the output files that have changed sums will be listed\n-#  and then the sums files will be updated.\n-#\n-\n-# TODO KCR: update this to also compare standalone sdk\n-\n-TOP=\"$PWD\"\n-BLDTOP=\"${TOP}\/build\"\n-HASHDIR=\"$BLDTOP\/hashes\"\n-HASHTMP=\"${HASHDIR}\/tmp\"\n-\n-# If blank - will not update the hashes files, allowing reruns for debugging\n-COMMITNEW='yes'\n-\n-USESUM='find * -type f -print0 | xargs --null md5sum | sort'\n-CYGPATH=''\n-platform=''\n-case \"`uname`\" in\n-    Darwin*) \n-        platform='mac'\n-        USESUM='find * -type f -print0 | xargs -0 md5 -r | sort'\n-        ;;\n-    CYGWIN*) \n-        platform='cygwin'\n-        CYGPATH=\"cygpath -m\"\n-        ;;\n-    Linux*)  \n-        platform='linux'\n-        ;;\n-esac\n-\n-doCygpath() {\n-    if [ \"${CYGPATH}\" ]\n-    then\n-        eval ${CYGPATH} \"${1}\"\n-    else\n-        echo \"${1}\"\n-    fi\n-}\n-\n-if [ \"${BLDTOP}\" -a ! -d \"${BLDTOP}\" -o ! -d \"${BLDTOP}\/modular-sdk\" ]\n-then\n-    echo \"Missing build top directory... you in the right place ?\"\n-    exit -1\n-fi\n-\n-mkdir -p \"${HASHDIR}\"\n-\n-if [ ! -d \"${HASHDIR}\" ]\n-then\n-    echo \"whoops no dir ${HASHDIR}\"\n-    exit -1\n-fi\n-\n-checkhashdir() {\n-    MODNAME=\"${1}\"\n-    MODDIR=\"${2}\"\n-\n-    OLDHASH=\"${HASHDIR}\/${MODNAME}\"\n-    NEWHASH=\"${HASHDIR}\/${MODNAME}-new\"\n-\n-    if [ -f $NEWHASH ]\n-    then\n-        echo \"Reusing $NEWHASH\"\n-    else\n-    (\n-        cd \"${MODDIR}\"\n-        eval \"$USESUM\" > \"${NEWHASH}\"\n-    )  \n-    fi\n-\n-    if [ -f \"$OLDHASH\" ]\n-    then\n-        echo \"Comparing changes for ${MODNAME}\"\n-\n-        let changes=0\n-\n-        comm -13 \"$OLDHASH\" \"$NEWHASH\" | {\n-        while read s f\n-        do\n-          grep -q  \" $f\\$\" \"$OLDHASH\"\n-          if [ $? -eq 0 ]\n-          then\n-              let changes=changes+1\n-              echo \"  Changed : $f\"\n-          else\n-              echo \"  New     : $f\"\n-              let changes=changes+1\n-          fi\n-        done \n-        }\n-\n-        comm -23 \"$OLDHASH\" \"$NEWHASH\" | {\n-        while read s f\n-        do\n-          grep -q  \" $f\\$\" \"$NEWHASH\"\n-          if [ $? -eq 1 ]\n-          then\n-              echo \"  Missing : $f\"\n-              let changes=changes+1\n-          fi\n-        done \n-        }\n-\n-        echo \"Total changed files: $changes\"\n-    else \n-        echo \"No old hashes to compare against for ${MODNAME}\"\n-    fi\n-\n-    if [ ! -f \"${OLDHASH}\" -o \"${COMMITNEW}\" ]\n-    then\n-        mv \"${NEWHASH}\" \"${OLDHASH}\"\n-    fi\n-}\n-\n-checkhashjar() {\n-    MODNAME=\"${1}\"\n-    MODJAR=\"${2}\"\n-\n-    MODJARDIR=\"${HASHTMP}\/${MODNAME}\"\n-\n-    JARPATH=`doCygpath \"${TOP}\/${MODJAR}\"`\n-\n-    if [ -f \"${JARPATH}\" ]\n-    then\n-        if [ -d \"${MODJARDIR}\" -o -f \"${MODJARDIR}\" ]\n-        then\n-            rm -r \"${MODJARDIR}\"\n-        fi\n-        mkdir -p \"${MODJARDIR}\"\n-\n-        (\n-         cd \"${MODJARDIR}\"\n-         jar xf \"${JARPATH}\"\n-        )\n-\n-        checkhashdir \"${MODNAME}\" \"${MODJARDIR}\"\n-\n-        rm -r \"${MODJARDIR}\"\n-    else\n-        echo \"Missing JAR ${JARPATH} to compare\"\n-    fi\n-}\n-\n-checkhashdir \"modular-sdk\" \"build\/modular-sdk\"\n-\n-checkhashjar \"javafx-swt.jar\" \"build\/modular-sdk\/modules_libs\/javafx.graphics\/javafx-swt.jar\"\n-\n","filename":"tools\/scripts\/whatChanged","additions":0,"deletions":154,"binary":false,"changes":154,"status":"deleted"}]}