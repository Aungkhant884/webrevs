{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-        for (int i = 0; i < size(); i++) {\n+        for (int i = 0, max = size(); i < max; i++) {\n@@ -188,2 +188,3 @@\n-        Object[] arr = new Object[size()];\n-        for (int i = 0; i < size(); i++) {\n+        int max = size();\n+        Object[] arr = new Object[max];\n+        for (int i = 0; i < max; i++) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ReadOnlyUnbackedObservableList.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -629,0 +629,1 @@\n+        private int size = -1;\n@@ -697,0 +698,1 @@\n+            size = -1;\n@@ -717,0 +719,1 @@\n+            size = -1;\n@@ -794,0 +797,1 @@\n+            size = 0;\n@@ -803,0 +807,1 @@\n+            size = -1;\n@@ -858,1 +863,5 @@\n-            return bitset.cardinality();\n+            if (size >= 0) {\n+                return size;\n+            }\n+            size = bitset.cardinality();\n+            return size;\n@@ -867,2 +876,42 @@\n-            reset();\n-            return super.indexOf(obj);\n+            if (!(obj instanceof Number)) {\n+                return -1;\n+            }\n+            Number n = (Number) obj;\n+            int index = n.intValue();\n+            if (!bitset.get(index)) {\n+                return -1;\n+            }\n+            \/\/ is left most bit\n+            if (index == 0) {\n+                return 0;\n+            }\n+\n+            \/\/ is right most bit\n+            if (index == bitset.length()-1) {\n+                return size()-1;\n+            }\n+\n+            \/\/ count right bit\n+            if (index > bitset.length()\/2) {\n+                int count = 1;\n+                for (;;) {\n+                    index = bitset.nextSetBit(index + 1);\n+                    if (index < 0) {\n+                        break;\n+                    }\n+                    count++;\n+                }\n+                return size() - count;\n+            }\n+\n+            \/\/ count left bit\n+            \/\/ return (int)bitset.stream().takeWhile(i->i<index).count();\n+            int count = 0;\n+            for (;;) {\n+                index = bitset.previousSetBit(index-1);\n+                if (index < 0) {\n+                    break;\n+                }\n+                count++;\n+            }\n+            return count;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/MultipleSelectionModelBase.java","additions":53,"deletions":4,"binary":false,"changes":57,"status":"modified"}]}