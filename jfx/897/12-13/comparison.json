{"files":[{"patch":"@@ -33,1 +33,1 @@\n- * Helps resize Tree\/TableView columns.\n+ * Helps resize Tree\/TableView columns.  JDK-8293119\n@@ -43,4 +43,4 @@\n-    private final double[] size;\n-    private final double[] min;\n-    private final double[] pref;\n-    private final double[] max;\n+    private final int[] size;\n+    private final int[] min;\n+    private final int[] pref;\n+    private final int[] max;\n@@ -59,4 +59,4 @@\n-        size = new double[count];\n-        min = new double[count];\n-        pref = new double[count];\n-        max = new double[count];\n+        size = new int[count];\n+        min = new int[count];\n+        pref = new int[count];\n+        max = new int[count];\n@@ -67,2 +67,1 @@\n-            double w = c.getWidth();\n-            size[i] = w;\n+            size[i] = (int)c.getWidth();\n@@ -71,4 +70,5 @@\n-                min[i] = c.getMinWidth();\n-                max[i] = c.getMaxWidth();\n-                \/\/ TODO use integers or round\n-                pref[i] = clip(c.getPrefWidth(), c.getMinWidth(), c.getMaxWidth());\n+                int cmin = (int)Math.ceil(c.getMinWidth());\n+                int cmax = (int)Math.floor(Math.min(c.getMaxWidth(), Integer.MAX_VALUE));\n+                min[i] = cmin;\n+                max[i] = cmax;\n+                pref[i] = clip(c.getPrefWidth(), cmin, cmax);\n@@ -122,1 +122,1 @@\n-                double w = Math.round(size[i] + dw);\n+                int w = (int)Math.round(size[i] + dw);\n@@ -148,2 +148,2 @@\n-    protected double step1(int ix) {\n-        double w = pref[ix] - size[ix];\n+    protected int step1(int ix) {\n+        int w = pref[ix] - size[ix];\n@@ -162,1 +162,1 @@\n-        double w = 0.0;\n+        int w = 0;\n@@ -178,1 +178,1 @@\n-    protected static double clip(double v, double min, double max) {\n+    protected static int clip(double v, int min, int max) {\n@@ -184,1 +184,1 @@\n-        return v;\n+        return (int)v;\n@@ -203,2 +203,2 @@\n-        double allowedDelta = getAllowedDelta(ix, expanding);\n-        if (isZero(allowedDelta)) {\n+        int allowedDelta = getAllowedDelta(ix, expanding);\n+        if (allowedDelta == 0) {\n@@ -213,2 +213,2 @@\n-        double d = computeAllowedDelta(!expanding);\n-        if (isZero(d)) {\n+        int d = computeAllowedDelta(!expanding);\n+        if (d == 0) {\n@@ -218,2 +218,4 @@\n-        allowedDelta = Math.min(Math.abs(delta), Math.min(allowedDelta, d));\n-        allowedDelta = (expanding ? 1 : -1) * Math.floor(allowedDelta);\n+        allowedDelta = (int)Math.floor(Math.min(Math.abs(delta), Math.min(allowedDelta, d)));\n+        if (!expanding) {\n+            allowedDelta = -allowedDelta;\n+        }\n@@ -228,1 +230,1 @@\n-    protected boolean isCornerCase(double delta, int ix) {\n+    protected boolean isCornerCase(int delta, int ix) {\n@@ -231,1 +233,1 @@\n-            if (delta > 0.0) {\n+            if (delta > 0) {\n@@ -233,1 +235,1 @@\n-                if (isZero(size[i] - min[i])) {\n+                if (size[i] <= min[i]) {\n@@ -244,1 +246,1 @@\n-    protected double getAllowedDelta(int ix, boolean expanding) {\n+    protected int getAllowedDelta(int ix, boolean expanding) {\n@@ -290,2 +292,2 @@\n-    protected double computeAllowedDelta(boolean expanding) {\n-        double delta = 0.0;\n+    protected int computeAllowedDelta(boolean expanding) {\n+        int delta = 0;\n@@ -311,1 +313,1 @@\n-    protected boolean distributeDelta(int ix, double delta) {\n+    protected boolean distributeDelta(int ix, int delta) {\n@@ -322,1 +324,1 @@\n-            double w1 = sumSizes(); \/\/ FIX\n+            int w1 = sumSizes(); \/\/ FIX\n@@ -324,1 +326,1 @@\n-            double adj;\n+            int adj;\n@@ -334,1 +336,1 @@\n-                adj = 0.0;\n+                adj = 0;\n@@ -336,1 +338,1 @@\n-                double w2 = sumSizes(); \/\/ FIX\n+                int w2 = sumSizes(); \/\/ FIX remove once everyone reviews and tests the code\n@@ -338,1 +340,1 @@\n-                    System.err.println(\"*** ERR 2 sum sizes before=\"  + w1 + \" after=\" + w2 + \" adj=\" + adj + \" delta=\" + delta);\n+                    System.err.println(\"*** ERR sum sizes before=\"  + w1 + \" after=\" + w2 + \" adj=\" + adj + \" delta=\" + delta);\n@@ -348,1 +350,1 @@\n-    protected double distributeDeltaFlexHead(double delta) {\n+    protected int distributeDeltaFlexHead(int delta) {\n@@ -359,1 +361,1 @@\n-                    if (isZero(delta)) {\n+                    if (delta == 0) {\n@@ -374,1 +376,1 @@\n-                    if (isZero(delta)) {\n+                    if (delta == 0) {\n@@ -388,1 +390,1 @@\n-            if (isZero(delta)) {\n+            if (delta == 0) {\n@@ -395,1 +397,1 @@\n-    protected double distributeDeltaFlexTail(double delta) {\n+    protected int distributeDeltaFlexTail(int delta) {\n@@ -406,1 +408,1 @@\n-                    if (isZero(delta)) {\n+                    if (delta == 0) {\n@@ -421,1 +423,1 @@\n-                    if (isZero(delta)) {\n+                    if (delta == 0) {\n@@ -435,1 +437,1 @@\n-            if (isZero(delta)) {\n+            if (delta == 0) {\n@@ -442,8 +444,8 @@\n-    protected double resize(int i, double delta) {\n-        double w = Math.round(size[i] + delta);\n-        if (w < min[i]) {\n-            delta = (w - min[i]);\n-            w = min[i];\n-        } else if (w > max[i]) {\n-            delta = (w - max[i]);\n-            w = max[i];\n+    protected int resize(int ix, int delta) {\n+        int w = size[ix] + delta;\n+        if (w < min[ix]) {\n+            delta = (w - min[ix]);\n+            w = min[ix];\n+        } else if (w > max[ix]) {\n+            delta = (w - max[ix]);\n+            w = max[ix];\n@@ -451,1 +453,1 @@\n-            delta = 0.0;\n+            delta = 0;\n@@ -454,1 +456,1 @@\n-        size[i] = w;\n+        size[ix] = w;\n@@ -458,1 +460,1 @@\n-    protected void distributeDeltaRemainingColumns(double delta) {\n+    protected void distributeDeltaRemainingColumns(int delta) {\n@@ -462,1 +464,1 @@\n-            double total = 0.0;\n+            int total = 0;\n@@ -469,1 +471,1 @@\n-            if (isZero(total)) {\n+            if (total == 0) {\n@@ -481,2 +483,2 @@\n-                double dw = rem + (delta * pref[i] \/ total);\n-                double w = Math.round(size[i] + dw);\n+                double dw = rem + ((double)delta * pref[i] \/ total);\n+                int w = (int)Math.round(size[i] + dw);\n@@ -512,1 +514,1 @@\n-                size[i] = columns.get(i).getWidth();\n+                size[i] = (int)columns.get(i).getWidth();\n@@ -517,2 +519,2 @@\n-    protected double sumSizes() {\n-        double sum = 0.0;\n+    protected int sumSizes() {\n+        int sum = 0;\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ResizeHelper.java","additions":67,"deletions":65,"binary":false,"changes":132,"status":"modified"}]}