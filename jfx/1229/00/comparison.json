{"files":[{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.control;\n+\n+import javafx.beans.property.DoubleProperty;\n+import javafx.beans.property.SimpleDoubleProperty;\n+import javafx.geometry.Insets;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SkinBase;\n+import javafx.stage.Stage;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class ControlContractTest {\n+\n+    private ControlStub control;\n+\n+    @BeforeEach\n+    void setup() {\n+        control = new ControlStub();\n+    }\n+\n+    @AfterEach\n+    void cleanup() {\n+        control = null;\n+    }\n+\n+    \/**\n+     * Tests the contract of {@link SkinBase#layoutChildren(double, double, double, double)} method that is called\n+     * when a {@link javafx.scene.control.Control} should layout itself and his children.\n+     * The x, y, width and height should be snapped according to the render scale.\n+     * The width and height should subtract the snapped padding insets.\n+     *\n+     * @param scale the render scale\n+     *\/\n+    @ParameterizedTest\n+    @ValueSource(doubles = { 1.0, 1.25, 1.5, 1.75, 2.0 })\n+    void testLayoutChildrenContract(double scale) {\n+        DoubleProperty renderScaleProperty = new SimpleDoubleProperty(scale);\n+\n+        Stage stage = new Stage();\n+        stage.renderScaleXProperty().bind(renderScaleProperty);\n+        stage.renderScaleYProperty().bind(renderScaleProperty);\n+\n+        control.setPadding(new Insets(4, 5, 6, 7));\n+\n+        AtomicBoolean layoutChildrenCalled = new AtomicBoolean(false);\n+\n+        control.setSkin(new SkinBase<>(control) {\n+\n+            @Override\n+            protected void layoutChildren(double x, double y, double w, double h) {\n+                layoutChildrenCalled.set(true);\n+\n+                Insets padding = control.getPadding();\n+\n+                double expectedX = control.snappedLeftInset();\n+                assertEquals(expectedX, x);\n+\n+                expectedX = control.snapPositionX(padding.getLeft());\n+                assertEquals(expectedX, x);\n+\n+                double expectedY = control.snappedTopInset();\n+                assertEquals(expectedY, y);\n+\n+                expectedY = control.snapPositionY(padding.getTop());\n+                assertEquals(expectedY, y);\n+\n+                double expectedWidth = control.snapSizeX(control.getWidth()) - control.snappedLeftInset() - control.snappedRightInset();\n+                assertEquals(expectedWidth, w);\n+\n+                expectedWidth = control.snapSizeX(control.getWidth()) - control.snapPositionX(padding.getLeft())\n+                        - control.snapPositionX(padding.getRight());\n+                assertEquals(expectedWidth, w);\n+\n+                double expectedHeight = control.snapSizeY(control.getHeight()) - control.snappedTopInset() - control.snappedBottomInset();\n+                assertEquals(expectedHeight, h);\n+\n+                expectedHeight = control.snapSizeY(control.getHeight()) - control.snapPositionY(padding.getTop())\n+                        - control.snapPositionY(padding.getBottom());\n+                assertEquals(expectedHeight, h);\n+            }\n+        });\n+\n+        Scene scene = new Scene(control);\n+        stage.setScene(scene);\n+\n+        stage.show();\n+\n+        assertTrue(layoutChildrenCalled.get());\n+    }\n+\n+}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ControlContractTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"}]}