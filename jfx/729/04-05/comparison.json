{"files":[{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.web;\n+\n+import com.sun.javafx.PlatformUtil;\n+import javafx.event.Event;\n+import javafx.scene.input.Clipboard;\n+import javafx.scene.input.ClipboardContent;\n+import javafx.scene.input.KeyCode;\n+import javafx.scene.input.KeyEvent;\n+import org.junit.Test;\n+\n+import static javafx.concurrent.Worker.State.SUCCEEDED;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class HTMLClipBoardTest extends TestBase {\n+\n+    \/**\n+     * @test\n+     * @bug 8269115\n+     * summary WebView paste event contains old data\n+     *\/\n+    @Test public void DataOnPaste() {\n+        \/\/ Read the clipboard data from JavaScript onpaste event\n+        \/\/ Verify the paste data from pasteTarget element\n+        String defaultText = \"Default\";\n+        loadContent(\n+                \"<html>\\n\" +\n+                        \"<head> \\n\" +\n+                        \"   \\n\" +\n+                        \"<\/head>\\n\" +\n+                        \"<body>\\n\" +\n+                        \"<b>This is a test of the clipboard. The content of the clipboard will be displayed below after pressing ctrl+v:<\/b>\\n\" +\n+                        \"<input type=\\\"button\\\" id=\\\"copyID\\\" value=\\\"Hello World\\\" \/>\\n\" +\n+                        \"<div id=\\\"clipboardData\\\"><\/div>\\n\" +\n+                        \" <script>\\n\" +\n+                        \"        document.addEventListener('paste', e => {\\n\" +\n+                        \"            let messages = [];\\n\" +\n+                        \"            if (e.clipboardData.types) {\\n\" +\n+                        \"                let message_index = 0;\\n\" +\n+                        \"                e.clipboardData.types.forEach(type => {\\n\" +\n+                        \"                    messages.push( type + \\\": \\\" + e.clipboardData.getData(type));\\n\" +\n+                        \"                    const para = document.createElement(\\\"p\\\");\\n\" +\n+                        \"                    para.innerText = type + \\\": \\\" + e.clipboardData.getData(type);\\n\" +\n+                        \"                    document.getElementById(\\\"clipboardData\\\").innerText = ++message_index;\\n\" +\n+                        \"                });\\n\" +\n+                        \"            }\\n\" +\n+                        \"        });\\n\" +\n+                        \"\\n\" +\n+                        \"<\/script>\\n\" +\n+                        \"<\/body>\\n\" +\n+                        \"<\/html>\");\n+\n+        submit(() -> {\n+            assertTrue(\"LoadContent completed successfully\",\n+                    getEngine().getLoadWorker().getState() == SUCCEEDED);\n+            String clipboardData = \"Clipboard text\";\n+            ClipboardContent content = new ClipboardContent();\n+            content.putString(clipboardData);\n+            Clipboard.getSystemClipboard().setContent(content);\n+\n+            Event.fireEvent(getView(),\n+                    new KeyEvent(null,getView(),\n+                            KeyEvent.KEY_PRESSED,\n+                            \"\", \"\", KeyCode.V,\n+                            false, !PlatformUtil.isMac(),\/\/ Ctrl+V(Non Mac)\n+                            false, PlatformUtil.isMac()));\/\/ Cmd+V (Mac)\n+\n+            assertEquals(\"Source Default value\",\"2\", getEngine().\n+                            executeScript(\"document.getElementById(\\\"clipboardData\\\").innerText\").toString());\n+        });\n+    }\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HTMLClipBoardTest.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -38,1 +38,0 @@\n-import static org.junit.Assert.assertNotEquals;\n@@ -54,18 +53,5 @@\n-                        \"<input id='pasteTarget'><\/input>\" +\n-                        \"<div id=\\\"clipboardData\\\"><\/div>\" +\n-                        \"<script>\"+\n-                        \"document.addEventListener('paste', e => {\\n\" +\n-                        \"            let messages = [];\\n\" +\n-                        \"            if (e.clipboardData.types) {\\n\" +\n-                        \"                let message_index = 0;\\n\" +\n-                        \"                e.clipboardData.types.forEach(type => {\\n\" +\n-                        \"                    messages.push( type + \\\": \\\" + e.clipboardData.getData(type));\\n\" +\n-                        \"                    const para = document.createElement(\\\"p\\\");\\n\" +\n-                        \"                    para.innerText = type + \\\": \\\" + e.clipboardData.getData(type);\\n\" +\n-                        \"                    document.getElementById(\\\"clipboardData\\\").innerText = ++message_index;\\n\" +\n-                        \"                });\\n\" +\n-                        \"            }\\n\" +\n-                        \"        });\\n\" +\n-                        \"srcInput.onpaste = function(e) {\" +\n-                        \"pasteTarget.value = e.clipboardData.getData('text\/plain');}\" +\n-                        \"<\/script>\");\n+                \"<input id='pasteTarget'><\/input>\" +\n+                \"<script>\"+\n+                \"srcInput.onpaste = function(e) {\" +\n+                \"pasteTarget.value = e.clipboardData.getData('text\/plain');}\" +\n+                \"<\/script>\");\n@@ -89,3 +75,4 @@\n-                    executeScript(\"srcInput.defaultValue\").toString(), defaultText);\n-            assertEquals(\"Source clipboard onpaste data\", getEngine().executeScript(\"srcInput.value\").\n-                    toString(), clipboardData + defaultText);\n+                    executeScript(\"srcInput.defaultValue\").toString(),\n+                    defaultText);\n+            assertEquals(\"Source clipboard onpaste data\", getEngine().\n+                    executeScript(\"srcInput.value\").toString(), clipboardData + defaultText);\n@@ -93,4 +80,2 @@\n-                     executeScript(\"pasteTarget.value\").toString(), clipboardData);\n-            assertEquals(\"Target onpaste data size\", getEngine().\n-                            executeScript(\"document.getElementById(\\\"clipboardData\\\").innerText\").toString(),\n-                    \"2\");\n+                    executeScript(\"pasteTarget.value\").toString(),\n+                    clipboardData);\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HTMLEditingTest.java","additions":11,"deletions":26,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.geometry.Insets;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.Scene;\n+import javafx.scene.web.WebEngine;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+import java.io.File;\n+\n+public class ClipBoardDataTest extends Application {\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+\n+        VBox instructions =  new VBox(\n+                new Label(\" This test is for manual copy and paste clipboard events for webview , please follow below steps\"),\n+                new Label(\" \"),\n+                new Label(\" STEPS:\"),\n+                new Label(\"  1. Select the blue color text\"),\n+                new Label(\"  2. Right click on selected text and do copy.\"),\n+                new Label(\"  3. Paste the text by ctrl + v or command +v\"),\n+                new Label(\" \"),\n+                new Label(\"  Expected behaviour: on paste, a number would be displayed as 2\"),\n+                new Label(\"  Without fix , on paste a number would be displayed as 4 or more\"));\n+\n+        Button passButton = new Button(\"Pass\");\n+        passButton.setOnAction(e -> {\n+            Platform.exit();\n+        });\n+\n+        Button failButton = new Button(\"Fail\");\n+        failButton.setOnAction(e -> {\n+            Platform.exit();\n+            throw new AssertionError(\"on paste the Data Nodes count is wrong.\");\n+        });\n+\n+        WebView webView = new WebView();\n+        WebEngine webEngine = webView.getEngine();\n+        webEngine.loadContent(\n+                \"<html>\\n\" +\n+                        \"<head> \\n\" +\n+                        \"   \\n\" +\n+                        \"<\/head>\\n\" +\n+                        \"<body>\\n\" +\n+                        \"<p id=\\\"data\\\" style=color:blue; >This is a test of the clipboard. select and manually copy me, and paste using ctrl+v:<\/p>\\n\" +\n+                        \"<div id=\\\"clipboardData\\\" contenteditable='true'><\/div>\\n\" +\n+                        \" <script>\\n\" +\n+                        \"        document.addEventListener('paste', e => {\\n\" +\n+                        \"            let messages = [];\\n\" +\n+                        \"            if (e.clipboardData.types) {\\n\" +\n+                        \"                let message_index = 0;\\n\" +\n+                        \"                e.clipboardData.types.forEach(type => {\\n\" +\n+                        \"                    messages.push( type + \\\": \\\" + e.clipboardData.getData(type));\\n\" +\n+                        \"                    const para = document.createElement(\\\"p\\\");\\n\" +\n+                        \"                    para.innerText = type + \\\": \\\" + e.clipboardData.getData(type);\\n\" +\n+                        \"                    document.getElementById(\\\"clipboardData\\\").innerText = ++message_index;\\n\" +\n+                        \"                });\\n\" +\n+                        \"            }\\n\" +\n+                        \"        });\\n\" +\n+                        \"<\/script>\\n\" +\n+                        \"<\/body>\\n\" +\n+                        \"<\/html>\");\n+\n+        HBox buttons = new HBox(20, passButton, failButton);\n+        buttons.setPadding(new Insets(10));\n+        VBox rootNode = new VBox(20, new HBox(instructions), webView, buttons);\n+        rootNode.setPadding(new Insets(10));\n+        Scene scene = new Scene(rootNode, 1000, 600);\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+}\n","filename":"tests\/manual\/web\/ClipBoardDataTest.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"}]}