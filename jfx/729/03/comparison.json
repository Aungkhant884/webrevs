{"files":[{"patch":"@@ -77,4 +77,1 @@\n-        size_t pos = m_availMimeTypes.find(mimeType);\n-        if (pos != WTF::notFound) {\n-            m_availMimeTypes.remove(pos);\n-        }\n+        m_availMimeTypes.remove(mimeType);\n@@ -89,2 +86,2 @@\n-        m_availMimeTypes.append(mimeURIList());\n-        m_availMimeTypes.append(mimeShortcutName());\n+        m_availMimeTypes.add(mimeURIList());\n+        m_availMimeTypes.add(mimeShortcutName());\n@@ -97,1 +94,1 @@\n-        m_availMimeTypes.append(mimeURIList());\n+        m_availMimeTypes.add(mimeURIList());\n@@ -105,1 +102,1 @@\n-        m_availMimeTypes.append(mimePlainText());\n+        m_availMimeTypes.add(mimePlainText());\n@@ -110,1 +107,1 @@\n-        m_availMimeTypes.append(mimeHTML());\n+        m_availMimeTypes.add(mimeHTML());\n@@ -134,2 +131,3 @@\n-        \/\/returns MIME Types available in clipboard.\n-        return m_availMimeTypes;\n+        Vector<String> types;\n+        types.appendRange(m_availMimeTypes.begin(), m_availMimeTypes.end());\n+        return types; \/\/returns MIME Types available in clipboard\n@@ -219,1 +217,1 @@\n-    Vector<String> m_availMimeTypes;\n+    ListHashSet<String> m_availMimeTypes;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/DataObjectJava.h","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -240,0 +240,1 @@\n+    data->setData(DataObjectJava::mimeHTML(), jGetPlainText());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/PasteboardJava.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import static org.junit.Assert.assertNotEquals;\n@@ -53,5 +54,18 @@\n-                \"<input id='pasteTarget'><\/input>\" +\n-                \"<script>\"+\n-                \"srcInput.onpaste = function(e) {\" +\n-                \"pasteTarget.value = e.clipboardData.getData('text\/plain');}\" +\n-                \"<\/script>\");\n+                        \"<input id='pasteTarget'><\/input>\" +\n+                        \"<div id=\\\"clipboardData\\\"><\/div>\" +\n+                        \"<script>\"+\n+                        \"document.addEventListener('paste', e => {\\n\" +\n+                        \"            let messages = [];\\n\" +\n+                        \"            if (e.clipboardData.types) {\\n\" +\n+                        \"                let message_index = 0;\\n\" +\n+                        \"                e.clipboardData.types.forEach(type => {\\n\" +\n+                        \"                    messages.push( type + \\\": \\\" + e.clipboardData.getData(type));\\n\" +\n+                        \"                    const para = document.createElement(\\\"p\\\");\\n\" +\n+                        \"                    para.innerText = type + \\\": \\\" + e.clipboardData.getData(type);\\n\" +\n+                        \"                    document.getElementById(\\\"clipboardData\\\").innerText = ++message_index;\\n\" +\n+                        \"                });\\n\" +\n+                        \"            }\\n\" +\n+                        \"        });\\n\" +\n+                        \"srcInput.onpaste = function(e) {\" +\n+                        \"pasteTarget.value = e.clipboardData.getData('text\/plain');}\" +\n+                        \"<\/script>\");\n@@ -75,1 +89,1 @@\n-                    executeScript(\"srcInput.defaultValue\").toString(),\n+                            executeScript(\"srcInput.defaultValue\").toString(),\n@@ -80,1 +94,1 @@\n-                    executeScript(\"pasteTarget.value\").toString(),\n+                            executeScript(\"pasteTarget.value\").toString(),\n@@ -82,0 +96,3 @@\n+            assertEquals(\"Target onpaste data size\", getEngine().\n+                            executeScript(\"document.getElementById(\\\"clipboardData\\\").innerText\").toString(),\n+                    \"2\");\n@@ -84,1 +101,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HTMLEditingTest.java","additions":25,"deletions":8,"binary":false,"changes":33,"status":"modified"}]}