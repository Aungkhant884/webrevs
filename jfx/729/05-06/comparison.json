{"files":[{"patch":"@@ -1,97 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package test.javafx.scene.web;\n-\n-import com.sun.javafx.PlatformUtil;\n-import javafx.event.Event;\n-import javafx.scene.input.Clipboard;\n-import javafx.scene.input.ClipboardContent;\n-import javafx.scene.input.KeyCode;\n-import javafx.scene.input.KeyEvent;\n-import org.junit.Test;\n-\n-import static javafx.concurrent.Worker.State.SUCCEEDED;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertTrue;\n-\n-public class HTMLClipBoardTest extends TestBase {\n-\n-    \/**\n-     * @test\n-     * @bug 8269115\n-     * summary WebView paste event contains old data\n-     *\/\n-    @Test public void DataOnPaste() {\n-        \/\/ Read the clipboard data from JavaScript onpaste event\n-        \/\/ Verify the paste data from pasteTarget element\n-        String defaultText = \"Default\";\n-        loadContent(\n-                \"<html>\\n\" +\n-                        \"<head> \\n\" +\n-                        \"   \\n\" +\n-                        \"<\/head>\\n\" +\n-                        \"<body>\\n\" +\n-                        \"<b>This is a test of the clipboard. The content of the clipboard will be displayed below after pressing ctrl+v:<\/b>\\n\" +\n-                        \"<input type=\\\"button\\\" id=\\\"copyID\\\" value=\\\"Hello World\\\" \/>\\n\" +\n-                        \"<div id=\\\"clipboardData\\\"><\/div>\\n\" +\n-                        \" <script>\\n\" +\n-                        \"        document.addEventListener('paste', e => {\\n\" +\n-                        \"            let messages = [];\\n\" +\n-                        \"            if (e.clipboardData.types) {\\n\" +\n-                        \"                let message_index = 0;\\n\" +\n-                        \"                e.clipboardData.types.forEach(type => {\\n\" +\n-                        \"                    messages.push( type + \\\": \\\" + e.clipboardData.getData(type));\\n\" +\n-                        \"                    const para = document.createElement(\\\"p\\\");\\n\" +\n-                        \"                    para.innerText = type + \\\": \\\" + e.clipboardData.getData(type);\\n\" +\n-                        \"                    document.getElementById(\\\"clipboardData\\\").innerText = ++message_index;\\n\" +\n-                        \"                });\\n\" +\n-                        \"            }\\n\" +\n-                        \"        });\\n\" +\n-                        \"\\n\" +\n-                        \"<\/script>\\n\" +\n-                        \"<\/body>\\n\" +\n-                        \"<\/html>\");\n-\n-        submit(() -> {\n-            assertTrue(\"LoadContent completed successfully\",\n-                    getEngine().getLoadWorker().getState() == SUCCEEDED);\n-            String clipboardData = \"Clipboard text\";\n-            ClipboardContent content = new ClipboardContent();\n-            content.putString(clipboardData);\n-            Clipboard.getSystemClipboard().setContent(content);\n-\n-            Event.fireEvent(getView(),\n-                    new KeyEvent(null,getView(),\n-                            KeyEvent.KEY_PRESSED,\n-                            \"\", \"\", KeyCode.V,\n-                            false, !PlatformUtil.isMac(),\/\/ Ctrl+V(Non Mac)\n-                            false, PlatformUtil.isMac()));\/\/ Cmd+V (Mac)\n-\n-            assertEquals(\"Source Default value\",\"2\", getEngine().\n-                            executeScript(\"document.getElementById(\\\"clipboardData\\\").innerText\").toString());\n-        });\n-    }\n-}\n\\ No newline at end of file\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HTMLClipBoardTest.java","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"}]}