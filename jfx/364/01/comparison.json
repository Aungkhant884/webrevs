{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import com.sun.javafx.stage.EmbeddedWindow;\n@@ -1083,0 +1084,10 @@\n+                    boolean isEmbeddedWindow = Window.this instanceof EmbeddedWindow;\n+                    if (isEmbeddedWindow && getScene() != null) {\n+                        \/\/ JDK-8257719: The scene of embedded windows like JFXPanel\n+                        \/\/ or FXCanvas has to be initialized before setting the\n+                        \/\/ output scales\n+                        SceneHelper.initPeer(getScene());\n+                        peer.setScene(SceneHelper.getPeer(getScene()));\n+                        SceneHelper.preferredSize(getScene());\n+                    }\n+\n@@ -1095,1 +1106,3 @@\n-                    if (getScene() != null) {\n+                    if (!isEmbeddedWindow && getScene() != null) {\n+                        \/\/ The scene of regular windows is initialized\n+                        \/\/ after setting the output scale\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Window.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,166 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.robot.javafx.embed.swing;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.image.BufferedImage;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import com.sun.javafx.PlatformUtil;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.embed.swing.JFXPanelShim;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Rectangle;\n+\n+import javax.swing.BoxLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.Timer;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+import static org.junit.Assume.assumeTrue;\n+\n+import static test.util.Util.TIMEOUT;\n+\n+public class JFXPanelHiDPITest {\n+\n+    static CountDownLatch launchLatch;\n+\n+    private static Timer t;\n+    private static MyApp myApp;\n+\n+    private static final double SCALE = 1.25; \/\/ 1.25, 1.5, 1.75\n+    private static final int PANEL_WIDTH = 500;\n+    private static final int PANEL_HEIGHT = 400;\n+\n+    @BeforeClass\n+    public static void setupOnce() throws Exception {\n+        assumeTrue(PlatformUtil.isWindows());\n+        System.setProperty(\"sun.java2d.uiScale.enabled\", \"true\");\n+        System.setProperty(\"sun.java2d.uiScale\", String.format(\"%f%%\", SCALE * 100));\n+        System.setProperty(\"glass.win.uiScale\", String.valueOf(SCALE));\n+        launchLatch = new CountDownLatch(1);\n+\n+        \/\/ Start the Application\n+        SwingUtilities.invokeLater(() -> myApp = new MyApp());\n+\n+        assertTrue(\"Timeout waiting for Application to launch\",\n+                launchLatch.await(5 * TIMEOUT, TimeUnit.MILLISECONDS));\n+    }\n+\n+    @Test\n+    public void testScale() throws Exception {\n+        \/\/ Get the Swing-side BackBuffer\n+        BufferedImage pixelsIm = JFXPanelShim.getPixelsIm(myApp.fxPanel);\n+        assertEquals((int) Math.ceil(PANEL_WIDTH * SCALE), pixelsIm.getWidth());\n+        assertEquals((int) Math.ceil(PANEL_HEIGHT * SCALE), pixelsIm.getHeight());\n+\n+        int bgColor = new java.awt.Color(244, 244, 244).getRGB();\n+        for (int i = 10; i < PANEL_HEIGHT - 10; i++) {\n+            int color = pixelsIm.getRGB(10, i);\n+            if (color != bgColor) {\n+                fail(\"color index at 10, \" + i + \" was \" + color + \", but should be \"  + bgColor);\n+            }\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void teardownOnce() {\n+        if (myApp != null) {\n+            SwingUtilities.invokeLater(myApp::dispose);\n+        }\n+    }\n+\n+    public static class MyApp extends JFrame {\n+\n+        private final JFXPanel fxPanel;\n+\n+        public MyApp() {\n+            super(\"JFXPanel with Label\");\n+            fxPanel = new JFXPanel();\n+\n+            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+            setLayout(new BorderLayout());\n+\n+            JPanel swingPanel = new JPanel();\n+            JLabel swingLabel1 = new JLabel(\"This is a Swing JLabel\");\n+            JLabel swingLabel2 = new JLabel(\"A JavaFX label is drawn on top of a yellow rectangle in the center of the JFrame\");\n+            swingPanel.setLayout(new BoxLayout(swingPanel, BoxLayout.Y_AXIS));\n+            swingPanel.add(swingLabel1);\n+            swingPanel.add(swingLabel2);\n+            add(swingPanel, BorderLayout.NORTH);\n+\n+            \/\/ Create javafx panel\n+            fxPanel.setPreferredSize(new Dimension(PANEL_WIDTH, PANEL_HEIGHT));\n+            add(fxPanel, BorderLayout.CENTER);\n+\n+            \/\/ create JavaFX scene\n+            createScene(fxPanel);\n+\n+            \/\/ show frame\n+            pack();\n+            setVisible(true);\n+\n+            t = new Timer(1000, e -> {\n+                t.stop();\n+                launchLatch.countDown();\n+            });\n+            t.start();\n+        }\n+\n+        private void createScene(final JFXPanel fxPanel) {\n+            Platform.runLater(() -> {\n+                StackPane root = new StackPane();\n+\n+                Rectangle rect = new Rectangle(PANEL_WIDTH - 100, (double) PANEL_HEIGHT \/ 8);\n+                rect.setFill(Color.YELLOW);\n+                Label label = new Label(\"This is a JavaFX Label\");\n+                label.setStyle(\"-fx-font-size: 24\");\n+\n+                root.getChildren().addAll(rect, label);\n+\n+                final Scene scene = new Scene(root);\n+\n+                \/\/ Add scene to JFXPanel\n+                fxPanel.setScene(scene);\n+            });\n+        }\n+    }\n+\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/embed\/swing\/JFXPanelHiDPITest.java","additions":166,"deletions":0,"binary":false,"changes":166,"status":"added"}]}