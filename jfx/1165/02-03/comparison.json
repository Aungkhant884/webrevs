{"files":[{"patch":"@@ -28,3 +28,0 @@\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-import java.io.OutputStream;\n@@ -209,30 +206,0 @@\n-    private static byte[] decodePercentEncoding(String input) {\n-        try (var output = new ByteArrayOutputStream(size(input))) {\n-            decodePercentEncodingToStream(input, output);\n-            return output.toByteArray();\n-        } catch (IOException ex) {\n-            \/\/ can never happen for ByteArrayOutputStream\n-            throw new AssertionError(ex);\n-        }\n-    }\n-\n-    \/**\n-     * Computes the payload size of the percent-encoded string.\n-     *\n-     * @param input the input string\n-     * @return the payload size in bytes\n-     *\/\n-    private static int size(String input) {\n-        int count = 0;\n-\n-        for (int i = 0, max = input.length(); i < max; ++i) {\n-            if (input.charAt(i) == '%') {\n-                i += 2;\n-            }\n-\n-            ++count;\n-        }\n-\n-        return count;\n-    }\n-\n@@ -242,0 +209,3 @@\n+     *\n+     * @param input the input string\n+     * @return the decoded byte array\n@@ -243,1 +213,1 @@\n-    private static void decodePercentEncodingToStream(String input, OutputStream output) throws IOException {\n+    private static byte[] decodePercentEncoding(String input) {\n@@ -251,0 +221,1 @@\n+        byte[] output = new byte[computePayloadSize(input)];\n@@ -253,1 +224,1 @@\n-        for (int i = 0; i < input.length(); ++i) {\n+        for (int i = 0, j = 0; i < input.length(); ++i) {\n@@ -261,1 +232,1 @@\n-                        output.write(c);\n+                        output[j++] = (byte)c;\n@@ -272,1 +243,1 @@\n-                    output.write(firstDigit << 4 | hexDigit(c));\n+                    output[j++] = (byte)(firstDigit << 4 | hexDigit(c));\n@@ -281,0 +252,22 @@\n+\n+        return output;\n+    }\n+\n+    \/**\n+     * Computes the payload size of the percent-encoded string.\n+     *\n+     * @param input the input string\n+     * @return the payload size in bytes\n+     *\/\n+    private static int computePayloadSize(String input) {\n+        int count = 0;\n+\n+        for (int i = 0, max = input.length(); i < max; ++i) {\n+            if (input.charAt(i) == '%') {\n+                i += 2;\n+            }\n+\n+            ++count;\n+        }\n+\n+        return count;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/DataURI.java","additions":30,"deletions":37,"binary":false,"changes":67,"status":"modified"}]}