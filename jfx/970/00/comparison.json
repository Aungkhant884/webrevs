{"files":[{"patch":"@@ -434,0 +434,1 @@\n+            checkBox.setGraphic(null); \/\/ release the graphic so it will serve only one CheckBox\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/CheckBoxTreeCell.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+    <classpathentry kind=\"src\" path=\"src\/main\/java\"\/>\n+    <classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"\/>\n+    <classpathentry combineaccessrules=\"false\" kind=\"src\" path=\"\/base\">\n+        <attributes>\n+            <attribute name=\"module\" value=\"true\"\/>\n+        <\/attributes>\n+    <\/classpathentry>\n+    <classpathentry combineaccessrules=\"false\" kind=\"src\" path=\"\/graphics\">\n+        <attributes>\n+            <attribute name=\"module\" value=\"true\"\/>\n+        <\/attributes>\n+    <\/classpathentry>\n+    <classpathentry combineaccessrules=\"false\" kind=\"src\" path=\"\/controls\">\n+        <attributes>\n+            <attribute name=\"module\" value=\"true\"\/>\n+        <\/attributes>\n+    <\/classpathentry>\n+    <classpathentry kind=\"output\" path=\"bin\"\/>\n+<\/classpath>\n","filename":"tests\/performance\/checkboxTreeView\/.classpath","additions":21,"deletions":0,"binary":false,"changes":21,"status":"added"},{"patch":"@@ -3,1 +3,1 @@\n-\t<name>FX8-3DFeatures<\/name>\n+\t<name>checkboxTreeView<\/name>\n","filename":"tests\/performance\/checkboxTreeView\/.project","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"apps\/toys\/FX8-3DFeatures\/.project","status":"copied"},{"patch":"","filename":"tests\/performance\/checkboxTreeView\/.settings\/org.eclipse.core.resources.prefs","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":".settings\/org.eclipse.core.resources.prefs","status":"copied"},{"patch":"@@ -0,0 +1,89 @@\n+package checkboxTreeView;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Pos;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.CheckBoxTreeItem;\n+import javafx.scene.control.TreeView;\n+import javafx.scene.control.cell.CheckBoxTreeCell;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.HBox;\n+import javafx.stage.Stage;\n+\n+public class CheckBoxTreeEditor extends Application {\n+\n+    private final TreeView<String> tree = new TreeView<>(new CheckBoxTreeItem<>(\"root\"));\n+    private int childNum;\n+\n+    @Override\n+    public void start(Stage stage) throws IOException {\n+        setupTree();\n+        var borderPane = new BorderPane(tree);\n+        borderPane.setTop(createToolbar());\n+        var scene = new Scene(borderPane);\n+        stage.setScene(scene);\n+        stage.show();\n+    }\n+\n+    private void setupTree() {\n+        tree.setCellFactory(CheckBoxTreeCell.forTreeView());\n+\n+        var button = new Button(\"0\");\n+        tree.getRoot().setGraphic(button);\n+        tree.getRoot().setExpanded(true);\n+        tree.getSelectionModel().select(tree.getRoot());\n+\n+        \/\/ add children for initial setup as needed\n+        addChild(true, true);\n+\/\/      var c2 = addChild(true, false);\n+\/\/\n+\/\/      c1.setSelected(true);\n+\/\/      c1.setIndeterminate(true);\n+\/\/\n+\/\/      c2.setSelected(false);\n+\/\/      c2.setIndeterminate(true);\n+\/\/\n+\/\/      c1.setIndeterminate(false);\n+\/\/      c2.setIndeterminate(false);\n+    }\n+\n+    private Parent createToolbar() {\n+        var indeterminate = new CheckBox(\"Indeterminate\");\n+        var selected = new CheckBox(\"Selected\");\n+\n+        var add = new Button(\"Add\");\n+        add.setOnAction(e -> addChild(indeterminate.isSelected(), selected.isSelected()));\n+\n+        var remove = new Button(\"Remove\");\n+        remove.setOnAction(e -> removeChild());\n+\n+        var toolbar = new HBox(5, add, remove, indeterminate, selected);\n+        toolbar.setAlignment(Pos.CENTER_LEFT);\n+        return toolbar;\n+    }\n+\n+    private CheckBoxTreeItem<String> addChild(boolean indeterminate, boolean selected) {\n+        var item = new CheckBoxTreeItem<>(\"child \" + childNum++);\n+        var button = new Button(\"\" + childNum);\n+        item.setGraphic(button);\n+        item.setSelected(selected);\n+        item.setIndeterminate(indeterminate);\n+        item.setExpanded(true);\n+        tree.getSelectionModel().getSelectedItem().getChildren().add(item);\n+        return item;\n+    }\n+\n+    private void removeChild() {\n+        var selectedItem = tree.getSelectionModel().getSelectedItem();\n+        selectedItem.getParent().getChildren().remove(selectedItem);\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+}\n","filename":"tests\/performance\/checkboxTreeView\/src\/main\/java\/checkboxTreeView\/CheckBoxTreeEditor.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"}]}