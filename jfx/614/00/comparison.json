{"files":[{"patch":"@@ -40,0 +40,8 @@\n+\/**\n+ * @implNote Bidirectional bindings are implemented with InvalidationListeners, which are fired once\n+ *           when the changed property was valid, but elided for any future changes until the property\n+ *           is again validated by calling its getValue()\/get() method.\n+ *           Since bidirectional bindings require that we observe all property changes, independent\n+ *           of whether the property was validated by user code, we manually validate both properties\n+ *           by calling their getter method in all relevant places.\n+ *\/\n@@ -65,0 +73,1 @@\n+        property1.getValue();\n@@ -75,0 +84,1 @@\n+        stringProperty.getValue();\n@@ -85,0 +95,1 @@\n+        stringProperty.getValue();\n@@ -146,0 +157,1 @@\n+        property1.getValue();\n@@ -157,0 +169,1 @@\n+        property1.getValue();\n@@ -253,0 +266,1 @@\n+                            property2.get();\n@@ -257,0 +271,1 @@\n+                            property1.get();\n@@ -263,0 +278,1 @@\n+                                property1.get();\n@@ -265,0 +281,1 @@\n+                                property2.get();\n@@ -326,0 +343,1 @@\n+                            property2.get();\n@@ -330,0 +348,1 @@\n+                            property1.get();\n@@ -336,0 +355,1 @@\n+                                property1.get();\n@@ -338,0 +358,1 @@\n+                                property2.get();\n@@ -399,0 +420,1 @@\n+                            property2.get();\n@@ -403,0 +425,1 @@\n+                            property1.get();\n@@ -409,0 +432,1 @@\n+                                property1.get();\n@@ -411,0 +435,1 @@\n+                                property2.get();\n@@ -472,0 +497,1 @@\n+                            property2.get();\n@@ -476,0 +502,1 @@\n+                            property1.get();\n@@ -482,0 +509,1 @@\n+                                property1.get();\n@@ -484,0 +512,1 @@\n+                                property2.get();\n@@ -545,0 +574,1 @@\n+                            property2.get();\n@@ -549,0 +579,1 @@\n+                            property1.get();\n@@ -555,0 +586,1 @@\n+                                property1.get();\n@@ -557,0 +589,1 @@\n+                                property2.get();\n@@ -618,0 +651,1 @@\n+                            property2.getValue();\n@@ -622,0 +656,1 @@\n+                            property1.getValue();\n@@ -628,0 +663,1 @@\n+                                property1.getValue();\n@@ -630,0 +666,1 @@\n+                                property2.getValue();\n@@ -691,0 +728,1 @@\n+                            property2.getValue();\n@@ -695,0 +733,1 @@\n+                            property1.getValue();\n@@ -701,0 +740,1 @@\n+                                property1.getValue();\n@@ -703,0 +743,1 @@\n+                                property2.getValue();\n@@ -792,0 +833,1 @@\n+                                property2.getValue();\n@@ -795,0 +837,1 @@\n+                                property2.getValue();\n@@ -799,0 +842,1 @@\n+                                property1.getValue();\n@@ -802,0 +846,1 @@\n+                                property1.getValue();\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/BidirectionalBinding.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -304,0 +304,9 @@\n+    @Test\n+    public void testSetValueWithoutIntermediateValidation() {\n+        BidirectionalBinding.bind(op1, op2);\n+        op1.setValue(v[0]);\n+        op2.setValue(v[1]);\n+        assertEquals(v[1], op1.getValue());\n+        assertEquals(v[1], op2.getValue());\n+    }\n+\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/BidirectionalBindingTest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}