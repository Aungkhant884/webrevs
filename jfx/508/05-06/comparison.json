{"files":[{"patch":"@@ -780,3 +780,2 @@\n-                        imageCache.put(url, new SoftReference(image));\n-\n-                    } catch (IllegalArgumentException iae) {\n+                        imageCache.put(url, new SoftReference<>(image));\n+                    } catch (IllegalArgumentException | NullPointerException ex) {\n@@ -786,7 +785,1 @@\n-                            logger.warning(iae.getLocalizedMessage());\n-                        }\n-                    } catch (NullPointerException npe) {\n-                        \/\/ url was null!\n-                        final PlatformLogger logger = getLogger();\n-                        if (logger != null && logger.isLoggable(Level.WARNING)) {\n-                            logger.warning(npe.getLocalizedMessage());\n+                            logger.warning(ex.getLocalizedMessage());\n@@ -794,1 +787,2 @@\n-                    }\n+                    } \/\/ url was null!\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleManager.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -290,1 +290,1 @@\n-     * {@link #loadAll(java.io.InputStream, com.sun.javafx.iio.ImageLoadListener, int, int, boolean, boolean)}.\n+     * {@link #loadAll(InputStream, ImageLoadListener, double, double, boolean, float, boolean)}.\n@@ -311,1 +311,1 @@\n-                        throw new ImageStorageException(\"Unexpected MIME type: \" + dataUri.getMimeType());\n+                        throw new IllegalArgumentException(\"Unexpected MIME type: \" + dataUri.getMimeType());\n@@ -321,1 +321,1 @@\n-                    } catch (IOException e) {\n+                    } catch (IOException ignored) {\n@@ -333,1 +333,1 @@\n-            } catch (IOException e) {\n+            } catch (Exception e) {\n@@ -350,1 +350,1 @@\n-            } catch (IOException e) {\n+            } catch (IOException ignored) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ImageStorage.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,3 +40,1 @@\n-     * Returns whether the string has the form of a valid data URI, but does not try\n-     * to decode the URI data. If this method returns {@code true}, parsing the URI\n-     * with {@link #tryParse(String)} might still fail if the data is invalid.\n+     * Determines whether the specified URI uses the \"data\" scheme.\n@@ -44,9 +42,1 @@\n-    public static boolean isValid(String uri) {\n-        return decode(uri, true) != null;\n-    }\n-\n-    public static DataURI tryParse(String uri) {\n-        return decode(uri, false);\n-    }\n-\n-    private static DataURI decode(String uri, boolean checkValidityOnly) {\n+    public static boolean isDataURI(String uri) {\n@@ -54,1 +44,1 @@\n-            return null;\n+            return false;\n@@ -57,1 +47,11 @@\n-        if (!\"data:\".equalsIgnoreCase(uri.substring(0, 5))) {\n+        return \"data:\".equalsIgnoreCase(uri.substring(0, 5));\n+    }\n+\n+    \/**\n+     * Parses the specified URI if it uses the \"data\" scheme.\n+     *\n+     * @return a {@link DataURI} instance if {@code uri} uses the \"data\" scheme, {@code null} otherwise\n+     * @throws IllegalArgumentException if the URI is malformed\n+     *\/\n+    public static DataURI tryParse(String uri) {\n+        if (!isDataURI(uri)) {\n@@ -63,1 +63,1 @@\n-            return null;\n+            throw new IllegalArgumentException(\"Invalid URI: \" + uri);\n@@ -87,1 +87,1 @@\n-                        return null;\n+                        throw new IllegalArgumentException(\"Invalid URI: \" + uri);\n@@ -91,1 +91,1 @@\n-                } else if (!checkValidityOnly) {\n+                } else {\n@@ -101,4 +101,0 @@\n-        if (checkValidityOnly) {\n-            return VALID_STUB;\n-        }\n-\n@@ -120,2 +116,0 @@\n-    private static final DataURI VALID_STUB = new DataURI(null, null, null, null, null, false, null);\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/DataURI.java","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-            if (DataURI.isValid(resource)) {\n+            if (DataURI.isDataURI(resource)) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/URLConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1156,1 +1156,1 @@\n-            } else if (DataURI.isValid(url)) {\n+            } else if (DataURI.isDataURI(url)) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/Image.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-        assertFalse(DataURI.isValid(data));\n+        assertFalse(DataURI.isDataURI(data));\n@@ -43,1 +43,1 @@\n-    @Test\n+    @Test(expected = IllegalArgumentException.class)\n@@ -46,0 +46,1 @@\n+        assertTrue(DataURI.isDataURI(data));\n@@ -47,2 +48,0 @@\n-        assertFalse(DataURI.isValid(data));\n-        assertNull(uri);\n@@ -55,1 +54,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -65,1 +64,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -77,1 +76,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -87,1 +86,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -100,1 +99,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -113,1 +112,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -127,1 +126,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n@@ -142,1 +141,1 @@\n-        assertTrue(DataURI.isValid(data));\n+        assertTrue(DataURI.isDataURI(data));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/util\/DataURITest.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"}]}