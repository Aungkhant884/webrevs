{"files":[{"patch":"@@ -47,1 +47,15 @@\n-        return \"data:\".equalsIgnoreCase(uri.substring(0, 5));\n+        int firstNonWhitespace = 0, length = uri.length();\n+\n+        while (firstNonWhitespace < length) {\n+            if (!Character.isWhitespace(uri.charAt(firstNonWhitespace))) {\n+                break;\n+            }\n+\n+            ++firstNonWhitespace;\n+        }\n+\n+        if (length < firstNonWhitespace + 6) {\n+            return false;\n+        }\n+\n+        return \"data:\".equalsIgnoreCase(uri.substring(firstNonWhitespace, firstNonWhitespace + 5));\n@@ -61,0 +75,4 @@\n+        if (Character.isWhitespace(uri.charAt(0))) {\n+            uri = uri.trim();\n+        }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/DataURI.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -82,0 +82,9 @@\n+    @Test\n+    public void testLeadingOrTrailingWhitespaceIsAcceptable() {\n+        String data = \"  data:,foo  \";\n+        DataURI uri = DataURI.tryParse(data);\n+        assertTrue(DataURI.isDataURI(data));\n+        assertNotNull(uri);\n+        assertEquals(3, uri.getData().length);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/util\/DataURITest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -560,6 +560,0 @@\n-\n-    @Test(expected=IllegalArgumentException.class)\n-    public void createImageFromInvalidDataUri() {\n-        new Image(\"data:invalid\");\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/image\/ImageTest.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}