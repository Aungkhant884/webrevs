[{"commit":{"message":"Avoid using Lambda in ImmutablePseudoClassSetsCache.of()"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ImmutablePseudoClassSetsCache.java"}],"sha":"2aa250ac422adc109334ead4ea84022bb31ab24d"},{"commit":{"message":"Merge branch 'master' of https:\/\/git.openjdk.org\/jfx into\nfeature\/immutable-pseudoclassstate"},"files":[{"filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/BitSetTest.java"}],"sha":"bcf33aa04660886bbc3412a08f75c2497eb3e52d"},{"commit":{"message":"Fix another edge case in BitSet equals\n\nWhen arrays are not the same size, but there are no set bits in the ones\nthe other set doesn't have, two bit sets can still be considered equal"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java"},{"filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/BitSetTest.java"}],"sha":"e8ae1b4d2b318ada92398faad7ba19c685d32f7b"},{"commit":{"message":"Take element type into account for BitSet.equals()"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/PseudoClassState.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleClassSet.java"},{"filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/BitSetTest.java"}],"sha":"04e1f406df0fda1555a3fe3e991d31792637f71f"},{"commit":{"message":"Base BitSet on AbstractSet to inherit correct equals\/hashCode\/toArray\n\n- Removed faulty toArray implementations in PseudoClassState and\nStyleClassSet\n- Added test that verifies equals\/hashCode for PseudoClassState respect\nSet contract now\n- Made getBits package private so it can't be inherited"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/PseudoClassState.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleClassSet.java"},{"filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/ImmutablePseudoClassSetsCacheTest.java"}],"sha":"dd5949b434e13db9e51f2bb054494b5d492b6b72"},{"commit":{"message":"Remove unused code"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java"}],"sha":"eb1c618103aa0531bb162e7bcbcc57875e65d9d4"},{"commit":{"message":"Ensure Match doesn't allow modification"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Match.java"}],"sha":"d6da349571e0cce6a2c190d092c39c70ab569d67"},{"commit":{"message":"Simplify ImmutablePseudoClassSetsCache and avoid an unnecessary copy"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ImmutablePseudoClassSetsCache.java"}],"sha":"e9300e9f81f6cb219fc46662034c68585984be36"},{"commit":{"message":"Remove double call to getIndex"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java"}],"sha":"87e6f63e81637e46389177ab1950bc2be269bb54"},{"commit":{"message":"Fix null test case"},"files":[{"filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/PseudoClassTest.java"}],"sha":"a4ed49e46a1613f012acaed3d3084ab9f2b62147"},{"commit":{"message":"Fix null addAll call"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CompoundSelector.java"}],"sha":"a9bf805242067c573b9000b91a3e0781bd09689b"},{"commit":{"message":"Introduce immutable variant of PseudoClassState, using it where possible"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ImmutablePseudoClassSetsCache.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleCacheEntry.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleClassSet.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java"},{"filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/ImmutablePseudoClassSetsCacheTest.java"}],"sha":"f6689f65dbf7efa8bde424ce7d7a2b79784a6a68"},{"commit":{"message":"Fix several major bugs in BitSet to make it usable as a generic set\n\nThis change is required so a different type of Set<PseudoClass>\ncooperates properly with PseudoClassState which extends BitSet."},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/PseudoClassState.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleClassSet.java"},{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java"}],"sha":"0659227d6bd4da04737687289ff04a638b629b90"},{"commit":{"message":"Remove references to PseudoClassState (private) in Match (public API)"},"files":[{"filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Match.java"}],"sha":"dffc6f47601c53bf0ac6b3215d93c19cb81aa319"}]