{"files":[{"patch":"@@ -46,1 +46,1 @@\n-    private ArrayList<String> stylesheets = new ArrayList<String>();\n+    private ArrayList<String> stylesheets = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/JavaFXSceneBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -553,0 +553,1 @@\n+        @Override\n@@ -634,1 +635,1 @@\n-        List l = (List) BeanAdapter.coerce(userValue, List.class);\n+        List l = BeanAdapter.coerce(userValue, List.class);\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/ProxyBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            LinkedList<Expression> stack = new LinkedList<Expression>();\n+            LinkedList<Expression> stack = new LinkedList<>();\n@@ -196,2 +196,2 @@\n-            LinkedList<Token> tokens = new LinkedList<Token>();\n-            LinkedList<Token> stack = new LinkedList<Token>();\n+            LinkedList<Token> tokens = new LinkedList<>();\n+            LinkedList<Token> stack = new LinkedList<>();\n@@ -550,1 +550,1 @@\n-        ArrayList<KeyPath> arguments = new ArrayList<KeyPath>();\n+        ArrayList<KeyPath> arguments = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/expression\/Expression.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.beans.property.ReadOnlyProperty;\n@@ -55,1 +54,1 @@\n-        private ListChangeListener<Object> listChangeListener = new ListChangeListener<Object>() {\n+        private ListChangeListener<Object> listChangeListener = new ListChangeListener<>() {\n@@ -69,1 +68,1 @@\n-        private MapChangeListener<String, Object> mapChangeListener = new MapChangeListener<String, Object>() {\n+        private MapChangeListener<String, Object> mapChangeListener = new MapChangeListener<>() {\n@@ -79,1 +78,1 @@\n-        private ChangeListener<Object> propertyChangeListener = new ChangeListener<Object>() {\n+        private ChangeListener<Object> propertyChangeListener = new ChangeListener<>() {\n@@ -183,1 +182,1 @@\n-        argumentMonitors = new ArrayList<KeyPathMonitor>(arguments.size());\n+        argumentMonitors = new ArrayList<>(arguments.size());\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/expression\/ExpressionValue.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-        ArrayList<String> elements = new ArrayList<String>();\n+        ArrayList<String> elements = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/expression\/KeyPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,4 +126,4 @@\n-        public final LinkedList<Attribute> eventHandlerAttributes = new LinkedList<Attribute>();\n-        public final LinkedList<Attribute> instancePropertyAttributes = new LinkedList<Attribute>();\n-        public final LinkedList<Attribute> staticPropertyAttributes = new LinkedList<Attribute>();\n-        public final LinkedList<PropertyElement> staticPropertyElements = new LinkedList<PropertyElement>();\n+        public final LinkedList<Attribute> eventHandlerAttributes = new LinkedList<>();\n+        public final LinkedList<Attribute> instancePropertyAttributes = new LinkedList<>();\n+        public final LinkedList<Attribute> staticPropertyAttributes = new LinkedList<>();\n+        public final LinkedList<PropertyElement> staticPropertyElements = new LinkedList<>();\n@@ -156,1 +156,1 @@\n-        public void add(Object element) throws LoadException {\n+        public void add(Object element) {\n@@ -234,3 +234,1 @@\n-        public void processEndElement() throws IOException {\n-            \/\/ No-op\n-        }\n+        public abstract void processEndElement() throws IOException;\n@@ -297,1 +295,0 @@\n-        @SuppressWarnings(\"unchecked\")\n@@ -498,1 +495,1 @@\n-            Type itemType = (Class<?>)BeanAdapter.getGenericListItemType(listType);\n+            Type itemType = BeanAdapter.getGenericListItemType(listType);\n@@ -769,2 +766,0 @@\n-            super.processEndElement();\n-\n@@ -965,1 +960,1 @@\n-        public InstanceDeclarationElement(Class<?> type) throws LoadException {\n+        public InstanceDeclarationElement(Class<?> type) {\n@@ -1036,2 +1031,2 @@\n-            private ArrayList<?> items = new ArrayList<Object>();\n-            private HashMap<String, Object> values = new HashMap<String, Object>();\n+            private ArrayList<?> items = new ArrayList<>();\n+            private HashMap<String, Object> values = new HashMap<>();\n@@ -1404,1 +1399,1 @@\n-        public void add(Object element) throws LoadException {\n+        public void add(Object element) {\n@@ -1446,2 +1441,0 @@\n-            super.processEndElement();\n-\n@@ -1500,0 +1493,5 @@\n+\n+        @Override\n+        public void processEndElement() {\n+            \/\/ No-op\n+        }\n@@ -1613,2 +1611,0 @@\n-            super.processEndElement();\n-\n@@ -1699,0 +1695,5 @@\n+\n+        @Override\n+        public void processEndElement() {\n+            \/\/ No-op\n+        }\n@@ -1784,1 +1785,0 @@\n-        @SuppressWarnings(\"unchecked\")\n@@ -1890,2 +1890,2 @@\n-    private List<String> packages = new LinkedList<String>();\n-    private Map<String, Class<?>> classes = new HashMap<String, Class<?>>();\n+    private List<String> packages = new LinkedList<>();\n+    private Map<String, Class<?>> classes = new HashMap<>();\n@@ -2565,1 +2565,1 @@\n-    @SuppressWarnings({ \"dep-ann\", \"unchecked\" })\n+    @SuppressWarnings(\"unchecked\")\n@@ -2804,1 +2804,1 @@\n-    private void processComment() throws LoadException {\n+    private void processComment() {\n@@ -2948,1 +2948,1 @@\n-    private void importPackage(String name) throws LoadException {\n+    private void importPackage(String name) {\n@@ -2960,1 +2960,1 @@\n-    private Class<?> getType(String name) throws LoadException {\n+    private Class<?> getType(String name) {\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/FXMLLoader.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -201,3 +201,3 @@\n-        private final Map<String,Method> methods = new HashMap<String, Method>();\n-        private final Map<String,Method> getters = new HashMap<String,Method>();\n-        private final Map<String,Method> setters = new HashMap<String,Method>();\n+        private final Map<String,Method> methods = new HashMap<>();\n+        private final Map<String,Method> getters = new HashMap<>();\n+        private final Map<String,Method> setters = new HashMap<>();\n@@ -206,1 +206,1 @@\n-            private final Map<String,Object> containers = new HashMap<String,Object>();\n+            private final Map<String,Object> containers = new HashMap<>();\n@@ -364,1 +364,1 @@\n-                    return FXCollections.observableMap(new HashMap<Object, Object>());\n+                    return FXCollections.observableMap(new HashMap<>());\n@@ -366,1 +366,1 @@\n-                    return new HashMap<Object, Object>();\n+                    return new HashMap<>();\n@@ -370,1 +370,1 @@\n-                    return new ArrayList<Object>();\n+                    return new ArrayList<>();\n@@ -372,1 +372,1 @@\n-                    return new HashSet<Object>();\n+                    return new HashSet<>();\n@@ -432,1 +432,1 @@\n-        ObjectBuilderWrapper(Class<?> builderClass) throws NoSuchMethodException, InstantiationException, IllegalAccessException {\n+        ObjectBuilderWrapper(Class<?> builderClass) throws NoSuchMethodException {\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/JavaFXBuilderFactory.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ObservableList<Integer> propertyList = new TrackableObservableList<Integer>() {\n+    ObservableList<Integer> propertyList = new TrackableObservableList<>() {\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/com\/sun\/javafx\/fxml\/builder\/ClassWithCollection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n@@ -39,1 +37,1 @@\n-    ObservableList<Integer> propertyList = new TrackableObservableList<Integer>() {\n+    ObservableList<Integer> propertyList = new TrackableObservableList<>() {\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/com\/sun\/javafx\/fxml\/builder\/ClassWithReadOnlyCollection.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.IOException;\n@@ -36,1 +35,1 @@\n-    public void testCompareJFXVersions() throws IOException {\n+    public void testCompareJFXVersions() {\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/CompareVersionsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import org.junit.Assert;\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/FXMLLoaderTest_FieldInjectionTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,3 +5,0 @@\n-import javafx.scene.Scene;\n-import javafx.scene.control.Button;\n-import javafx.stage.Stage;\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/FXMLLoader_EventsTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        HashMap<String, Object> namespace = new HashMap<String, Object>();\n+        HashMap<String, Object> namespace = new HashMap<>();\n@@ -196,1 +196,1 @@\n-        HashMap<String, Object> a = new HashMap<String, Object>();\n+        HashMap<String, Object> a = new HashMap<>();\n@@ -199,1 +199,1 @@\n-        HashMap<String, Object> b = new HashMap<String, Object>();\n+        HashMap<String, Object> b = new HashMap<>();\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/FXMLLoader_ExpressionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-    @SuppressWarnings(\"deprecation\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/FXMLLoader_ScriptTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -57,1 +56,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -63,1 +61,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -69,1 +66,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -75,1 +71,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -80,1 +75,0 @@\n-    @SuppressWarnings(\"unchecked\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/ListMapSetEventsTestController.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,4 +27,0 @@\n-import javafx.collections.ListChangeListener;\n-import javafx.collections.MapChangeListener;\n-import javafx.collections.SetChangeListener;\n-\n@@ -49,1 +45,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -55,1 +50,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -61,1 +55,0 @@\n-    @SuppressWarnings(\"unchecked\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/ListMapSetEventsTestController2.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import javafx.event.Event;\n-\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/PropertyEventsTestController.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    @SuppressWarnings({\"unchecked\", \"deprecation\"})\n+    @SuppressWarnings(\"unchecked\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/RT_18218Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-    private ArrayList<String> styles = new ArrayList<String>();\n-    private ArrayList<String> values = new ArrayList<String>();\n+    private ArrayList<String> styles = new ArrayList<>();\n+    private ArrayList<String> values = new ArrayList<>();\n@@ -142,1 +142,1 @@\n-        this.values = new ArrayList<String>();\n+        this.values = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/Widget.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -179,0 +179,1 @@\n+    @Override\n@@ -183,0 +184,1 @@\n+    @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/javafx\/media\/PrismMediaFrameHandler.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+    @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/javafx\/scene\/media\/MediaViewHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    private final List<Track> tracks = new ArrayList<Track>();\n+    private final List<Track> tracks = new ArrayList<>();\n@@ -101,1 +101,1 @@\n-                returnValue = Collections.unmodifiableList(new ArrayList<Track>(tracks));\n+                returnValue = Collections.unmodifiableList(new ArrayList<>(tracks));\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/Media.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-    private static final Map<Integer, MediaError> map = new HashMap<Integer, MediaError>();\n+    private static final Map<Integer, MediaError> map = new HashMap<>();\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/MediaError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    private static final Map<Integer, VideoFormat> lookupMap = new HashMap<Integer, VideoFormat>();\n+    private static final Map<Integer, VideoFormat> lookupMap = new HashMap<>();\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/control\/VideoFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import com.sun.media.jfxmediaimpl.MediaUtils;\n-\n@@ -37,1 +35,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/events\/PlayerStateEvent.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    static ConnectionHolder createHLSConnectionHolder(URI uri) throws IOException {\n+    static ConnectionHolder createHLSConnectionHolder(URI uri) {\n@@ -167,0 +167,1 @@\n+        @Override\n@@ -171,0 +172,1 @@\n+        @Override\n@@ -175,0 +177,1 @@\n+        @Override\n@@ -179,0 +182,1 @@\n+        @Override\n@@ -188,0 +192,1 @@\n+        @Override\n@@ -242,0 +247,1 @@\n+        @Override\n@@ -247,0 +253,1 @@\n+        @Override\n@@ -253,0 +260,1 @@\n+        @Override\n@@ -257,0 +265,1 @@\n+        @Override\n@@ -261,0 +270,1 @@\n+        @Override\n@@ -367,0 +377,1 @@\n+                @Override\n@@ -392,0 +403,1 @@\n+                @Override\n@@ -396,0 +408,1 @@\n+                @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/locator\/ConnectionHolder.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    HLSConnectionHolder(URI uri) throws IOException {\n+    HLSConnectionHolder(URI uri) {\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/locator\/HLSConnectionHolder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -593,1 +593,1 @@\n-                connectionProperties = new TreeMap<String, Object>();\n+                connectionProperties = new TreeMap<>();\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/locator\/Locator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        uriCache = new HashMap<URI,WeakReference<CacheReference>>();\n+        uriCache = new HashMap<>();\n@@ -132,0 +132,1 @@\n+        @Override\n@@ -138,1 +139,1 @@\n-                    uriCache.remove((URI)resource);\n+                    uriCache.remove(resource);\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/locator\/LocatorCache.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+    @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmedia\/track\/VideoResolution.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.Collections;\n@@ -122,1 +121,1 @@\n-        disposers = new  HashMap<Reference,Disposable>();\n+        disposers = new  HashMap<>();\n@@ -195,0 +194,1 @@\n+        @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/MediaDisposer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-    private final List<WeakReference<MetadataListener>> listeners = new ArrayList<WeakReference<MetadataListener>>();\n-    private Map<String, Object> metadata = new HashMap<String, Object>();\n+    private final List<WeakReference<MetadataListener>> listeners = new ArrayList<>();\n+    private Map<String, Object> metadata = new HashMap<>();\n@@ -61,0 +61,1 @@\n+    @Override\n@@ -64,1 +65,1 @@\n-                listeners.add(new WeakReference<MetadataListener>(listener));\n+                listeners.add(new WeakReference<>(listener));\n@@ -69,0 +70,1 @@\n+    @Override\n@@ -82,0 +84,1 @@\n+    @Override\n@@ -86,0 +89,1 @@\n+    @Override\n@@ -187,1 +191,1 @@\n-            rawMetaMap = new HashMap<String,ByteBuffer>();\n+            rawMetaMap = new HashMap<>();\n@@ -321,1 +325,1 @@\n-        value = (int) (value << 8);\n+        value = value << 8;\n@@ -323,1 +327,1 @@\n-        value = (int) (value << 8);\n+        value = value << 8;\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/MetadataParserImpl.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            MediaDisposer.addResourceDisposer(newClip, (Long)newClip.getNativeHandle(), clipDisposer);\n+            MediaDisposer.addResourceDisposer(newClip, newClip.getNativeHandle(), clipDisposer);\n@@ -74,1 +74,1 @@\n-            MediaDisposer.addResourceDisposer(newClip, (Long)newClip.getNativeHandle(), clipDisposer);\n+            MediaDisposer.addResourceDisposer(newClip, newClip.getNativeHandle(), clipDisposer);\n@@ -166,0 +166,1 @@\n+        @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeAudioClip.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-                magnitudes[i] = (float)DEFAULT_THRESHOLD;\/\/Float.NEGATIVE_INFINITY;\n+                magnitudes[i] = DEFAULT_THRESHOLD;\/\/Float.NEGATIVE_INFINITY;\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeAudioSpectrum.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+    @Override\n@@ -81,2 +82,2 @@\n-                markersByName = new HashMap<String,Double>();\n-                markersByTime = new TreeMap<Double,String>();\n+                markersByName = new HashMap<>();\n+                markersByTime = new TreeMap<>();\n@@ -93,0 +94,1 @@\n+    @Override\n@@ -106,0 +108,1 @@\n+    @Override\n@@ -131,0 +134,1 @@\n+    @Override\n@@ -167,1 +171,1 @@\n-                    markerListeners = new WeakHashMap<MarkerStateListener,Boolean>();\n+                    markerListeners = new WeakHashMap<>();\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeMedia.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-                new ArrayList<NativeMediaAudioClipPlayer>(MAX_PLAYER_COUNT);\n+                new ArrayList<>(MAX_PLAYER_COUNT);\n@@ -97,1 +97,1 @@\n-            new LinkedBlockingQueue<SchedulerEntry>();\n+            new LinkedBlockingQueue<>();\n@@ -365,0 +365,1 @@\n+    @Override\n@@ -380,0 +381,1 @@\n+    @Override\n@@ -383,0 +385,1 @@\n+    @Override\n@@ -386,0 +389,1 @@\n+    @Override\n@@ -390,0 +394,1 @@\n+    @Override\n@@ -393,0 +398,1 @@\n+    @Override\n@@ -413,0 +419,1 @@\n+    @Override\n@@ -420,0 +427,1 @@\n+    @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeMediaAudioClipPlayer.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.Arrays;\n@@ -339,1 +338,1 @@\n-            this.errorListeners.add(new WeakReference<MediaErrorListener>(listener));\n+            this.errorListeners.add(new WeakReference<>(listener));\n@@ -382,1 +381,1 @@\n-            allPlayers = new ArrayList<MediaPlayer>(allMediaPlayers.keySet());\n+            allPlayers = new ArrayList<>(allMediaPlayers.keySet());\n@@ -397,0 +396,1 @@\n+        @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeMediaManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        MediaDisposer.addResourceDisposer(buffer, (Long)nativePeer, disposer);\n+        MediaDisposer.addResourceDisposer(buffer, nativePeer, disposer);\n@@ -93,1 +93,1 @@\n-                MediaDisposer.removeResourceDisposer((Long)nativePeer);\n+                MediaDisposer.removeResourceDisposer(nativePeer);\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeVideoBuffer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        ArrayList<String> outTypes = new ArrayList<String>();\n+        ArrayList<String> outTypes = new ArrayList<>();\n@@ -190,1 +190,1 @@\n-        ArrayList<String> outProtocols = new ArrayList<String>();\n+        ArrayList<String> outProtocols = new ArrayList<>();\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/platform\/PlatformManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-                = new HashMap<Double,EqualizerBand>();\n+                = new HashMap<>();\n@@ -269,0 +269,1 @@\n+        @Override\n@@ -273,0 +274,1 @@\n+        @Override\n@@ -277,0 +279,1 @@\n+        @Override\n@@ -288,0 +291,1 @@\n+        @Override\n@@ -305,0 +309,1 @@\n+        @Override\n@@ -309,0 +314,1 @@\n+        @Override\n@@ -313,0 +319,1 @@\n+        @Override\n@@ -317,0 +324,1 @@\n+        @Override\n@@ -322,0 +330,1 @@\n+        @Override\n@@ -326,0 +335,1 @@\n+        @Override\n@@ -330,0 +340,1 @@\n+        @Override\n@@ -334,0 +345,1 @@\n+        @Override\n@@ -338,0 +350,1 @@\n+        @Override\n@@ -347,0 +360,1 @@\n+        @Override\n@@ -368,0 +382,1 @@\n+        @Override\n@@ -372,0 +387,1 @@\n+        @Override\n@@ -376,0 +392,1 @@\n+        @Override\n@@ -380,0 +397,1 @@\n+        @Override\n@@ -384,0 +402,1 @@\n+        @Override\n@@ -388,0 +407,1 @@\n+        @Override\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/platform\/ios\/IOSMediaPlayer.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    @Override\n@@ -76,1 +77,1 @@\n-            version = (int)(buf[3] & 0xFF);\n+            version = buf[3] & 0xFF;\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/platform\/java\/ID3MetadataParser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-import com.sun.media.jfxmedia.track.VideoResolution;\n@@ -109,1 +108,1 @@\n-            error = new ReadOnlyObjectWrapper<MediaException>() {\n+            error = new ReadOnlyObjectWrapper<>() {\n@@ -156,1 +155,1 @@\n-            onError = new ObjectPropertyBase<Runnable>() {\n+            onError = new ObjectPropertyBase<>() {\n@@ -295,1 +294,1 @@\n-            duration = new ReadOnlyObjectWrapper<Duration>(this, \"duration\");\n+            duration = new ReadOnlyObjectWrapper<>(this, \"duration\");\n@@ -468,1 +467,1 @@\n-                        Map<String,Object> trackMetadata = new HashMap<String,Object>();\n+                        Map<String,Object> trackMetadata = new HashMap<>();\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/Media.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            new EventType<MediaErrorEvent>(Event.ANY, \"Media Error Event\");\n+            new EventType<>(Event.ANY, \"Media Error Event\");\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/MediaErrorEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    };\n+    }\n@@ -201,1 +201,1 @@\n-};\n+}\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/MediaException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-import com.sun.media.jfxmedia.effects.AudioSpectrum;\n@@ -267,1 +266,1 @@\n-    };\n+    }\n@@ -333,1 +332,1 @@\n-            new HashSet<WeakReference<MediaView>>();\n+            new HashSet<>();\n@@ -575,1 +574,1 @@\n-            error = new ReadOnlyObjectWrapper<MediaException>() {\n+            error = new ReadOnlyObjectWrapper<>() {\n@@ -621,1 +620,1 @@\n-            onError = new ObjectPropertyBase<Runnable>() {\n+            onError = new ObjectPropertyBase<>() {\n@@ -1099,1 +1098,1 @@\n-            startTime = new ObjectPropertyBase<Duration>() {\n+            startTime = new ObjectPropertyBase<>() {\n@@ -1160,1 +1159,1 @@\n-            stopTime = new ObjectPropertyBase<Duration>() {\n+            stopTime = new ObjectPropertyBase<>() {\n@@ -1217,1 +1216,1 @@\n-            cycleDuration = new ReadOnlyObjectWrapper<Duration>(this, \"cycleDuration\");\n+            cycleDuration = new ReadOnlyObjectWrapper<>(this, \"cycleDuration\");\n@@ -1274,1 +1273,1 @@\n-            totalDuration = new ReadOnlyObjectWrapper<Duration>(this, \"totalDuration\");\n+            totalDuration = new ReadOnlyObjectWrapper<>(this, \"totalDuration\");\n@@ -1284,1 +1283,1 @@\n-             setTotalDuration(getCycleDuration().multiply((double)getCycleCount()));\n+             setTotalDuration(getCycleDuration().multiply(getCycleCount()));\n@@ -1359,1 +1358,1 @@\n-            currentTime = new ReadOnlyObjectWrapper<Duration>(this, \"currentTime\");\n+            currentTime = new ReadOnlyObjectWrapper<>(this, \"currentTime\");\n@@ -1469,1 +1468,1 @@\n-            status = new ReadOnlyObjectWrapper<Status>() {\n+            status = new ReadOnlyObjectWrapper<>() {\n@@ -1547,1 +1546,1 @@\n-            bufferProgressTime = new ReadOnlyObjectWrapper<Duration>(this, \"bufferProgressTime\");\n+            bufferProgressTime = new ReadOnlyObjectWrapper<>(this, \"bufferProgressTime\");\n@@ -1712,1 +1711,1 @@\n-            onMarker = new SimpleObjectProperty<EventHandler<MediaMarkerEvent>>(this, \"onMarker\");\n+            onMarker = new SimpleObjectProperty<>(this, \"onMarker\");\n@@ -1718,1 +1717,1 @@\n-        WeakReference<MediaView> vref = new WeakReference<MediaView>(view);\n+        WeakReference<MediaView> vref = new WeakReference<>(view);\n@@ -1925,1 +1924,1 @@\n-            onEndOfMedia = new SimpleObjectProperty<Runnable>(this, \"onEndOfMedia\");\n+            onEndOfMedia = new SimpleObjectProperty<>(this, \"onEndOfMedia\");\n@@ -1954,1 +1953,1 @@\n-            onReady = new SimpleObjectProperty<Runnable>(this, \"onReady\");\n+            onReady = new SimpleObjectProperty<>(this, \"onReady\");\n@@ -1983,1 +1982,1 @@\n-            onPlaying = new SimpleObjectProperty<Runnable>(this, \"onPlaying\");\n+            onPlaying = new SimpleObjectProperty<>(this, \"onPlaying\");\n@@ -2011,1 +2010,1 @@\n-            onPaused = new SimpleObjectProperty<Runnable>(this, \"onPaused\");\n+            onPaused = new SimpleObjectProperty<>(this, \"onPaused\");\n@@ -2040,1 +2039,1 @@\n-            onStopped = new SimpleObjectProperty<Runnable>(this, \"onStopped\");\n+            onStopped = new SimpleObjectProperty<>(this, \"onStopped\");\n@@ -2068,1 +2067,1 @@\n-            onHalted = new SimpleObjectProperty<Runnable>(this, \"onHalted\");\n+            onHalted = new SimpleObjectProperty<>(this, \"onHalted\");\n@@ -2099,1 +2098,1 @@\n-            onRepeat = new SimpleObjectProperty<Runnable>(this, \"onRepeat\");\n+            onRepeat = new SimpleObjectProperty<>(this, \"onRepeat\");\n@@ -2128,1 +2127,1 @@\n-            onStalled = new SimpleObjectProperty<Runnable>(this, \"onStalled\");\n+            onStalled = new SimpleObjectProperty<>(this, \"onStalled\");\n@@ -2333,1 +2332,1 @@\n-            audioSpectrumListener = new ObjectPropertyBase<AudioSpectrumListener>() {\n+            audioSpectrumListener = new ObjectPropertyBase<>() {\n@@ -2442,1 +2441,1 @@\n-                    getOnMarker().handle(new MediaMarkerEvent(new Pair<String, Duration>(evt.getMarkerName(), markerTime)));\n+                    getOnMarker().handle(new MediaMarkerEvent(new Pair<>(evt.getMarkerName(), markerTime)));\n@@ -2775,1 +2774,1 @@\n-    private final static List<WeakReference<MediaPlayer>> playerRefs = new ArrayList<WeakReference<MediaPlayer>>();\n+    private final static List<WeakReference<MediaPlayer>> playerRefs = new ArrayList<>();\n@@ -2797,1 +2796,1 @@\n-                playerRefs.add(new WeakReference<MediaPlayer>(player));\n+                playerRefs.add(new WeakReference<>(player));\n@@ -2830,1 +2829,1 @@\n-        playerRef = new WeakReference<MediaPlayer>(player);\n+        playerRef = new WeakReference<>(player);\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/MediaPlayer.java","additions":27,"deletions":28,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-import javafx.beans.value.ObservableValue;\n@@ -363,1 +362,1 @@\n-            mediaPlayer = new ObjectPropertyBase<MediaPlayer>() {\n+            mediaPlayer = new ObjectPropertyBase<>() {\n@@ -441,1 +440,1 @@\n-            onError = new ObjectPropertyBase<EventHandler<MediaErrorEvent>>() {\n+            onError = new ObjectPropertyBase<>() {\n@@ -475,1 +474,1 @@\n-    };\n+    }\n@@ -744,1 +743,1 @@\n-    };\n+    }\n@@ -800,1 +799,1 @@\n-    };\n+    }\n@@ -812,1 +811,1 @@\n-            viewport = new ObjectPropertyBase<Rectangle2D>() {\n+            viewport = new ObjectPropertyBase<>() {\n","filename":"modules\/javafx.media\/src\/main\/java\/javafx\/scene\/media\/MediaView.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            new ArrayList<DataFlavor>(mimeTypes.length);\n+            new ArrayList<>(mimeTypes.length);\n@@ -199,1 +199,1 @@\n-                Set<DataFlavor> mimeTypeFlavors = new HashSet<DataFlavor>();\n+                Set<DataFlavor> mimeTypeFlavors = new HashSet<>();\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/DataFlavorUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+                @Override\n@@ -91,0 +92,1 @@\n+    @Override\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/Disposer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+            @Override\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/FXDnD.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -383,1 +383,1 @@\n-                    new ArrayList<DataFlavor>(mimeTypes.length);\n+                    new ArrayList<>(mimeTypes.length);\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/SwingDnD.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        swingNodeAccessor.setSwingPrefWidth(node, swingPrefWidth);;\n+        swingNodeAccessor.setSwingPrefWidth(node, swingPrefWidth);\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/SwingNodeHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-        this.nodeRef = new WeakReference<SwingNode>(swnode);\n+        this.nodeRef = new WeakReference<>(swnode);\n@@ -157,1 +157,1 @@\n-        return new ComponentMapper<T>(map, x, y);\n+        return new ComponentMapper<>(map, x, y);\n@@ -195,0 +195,1 @@\n+        @Override\n@@ -210,0 +211,1 @@\n+        @Override\n@@ -374,1 +376,1 @@\n-    };\n+    }\n@@ -505,1 +507,1 @@\n-                    DropTargetListener dtl = (DropTargetListener)target;\n+                    DropTargetListener dtl = target;\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/newimpl\/FXDnDInteropN.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-        return (LightweightContentWrapper)new SwingNodeContent(content, node);\n+        return new SwingNodeContent(content, node);\n@@ -241,1 +241,2 @@\n-         public void dispose() {\n+         @Override\n+        public void dispose() {\n@@ -256,1 +257,1 @@\n-            this.swingNodeRef = new WeakReference<SwingNode>(swingNode);\n+            this.swingNodeRef = new WeakReference<>(swingNode);\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/newimpl\/SwingNodeInteropN.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-import com.sun.javafx.embed.swing.DisposerRecord;\n@@ -125,0 +124,1 @@\n+            @Override\n@@ -785,1 +785,1 @@\n-            this.swingNodeRef = new WeakReference<SwingNode>(swingNode);\n+            this.swingNodeRef = new WeakReference<>(swingNode);\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/SwingNode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+    @Override\n@@ -65,0 +66,1 @@\n+    @Override\n@@ -72,0 +74,1 @@\n+    @Override\n@@ -76,0 +79,1 @@\n+    @Override\n@@ -92,0 +96,1 @@\n+    @Override\n","filename":"modules\/javafx.swt\/src\/main\/java\/javafx\/embed\/swt\/CustomTransfer.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-import org.eclipse.swt.widgets.Event;\n@@ -171,1 +170,1 @@\n-        };\n+        }\n@@ -424,0 +423,1 @@\n+    @Override\n@@ -1111,1 +1111,1 @@\n-            Set<TransferMode> set = new HashSet<TransferMode>();\n+            Set<TransferMode> set = new HashSet<>();\n@@ -1179,0 +1179,1 @@\n+                @Override\n@@ -1183,0 +1184,1 @@\n+                @Override\n@@ -1200,0 +1202,1 @@\n+                @Override\n@@ -1254,1 +1257,1 @@\n-            if (transfer.equals(RTFTransfer.getInstance())) return \"text\/rtf\"; ;\n+            if (transfer.equals(RTFTransfer.getInstance())) return \"text\/rtf\";\n@@ -1295,0 +1298,1 @@\n+                    @Override\n@@ -1298,0 +1302,1 @@\n+                    @Override\n@@ -1302,0 +1307,1 @@\n+                    @Override\n@@ -1306,0 +1312,1 @@\n+                    @Override\n@@ -1313,0 +1320,1 @@\n+                    @Override\n@@ -1319,0 +1327,1 @@\n+                @Override\n@@ -1326,0 +1335,1 @@\n+                @Override\n@@ -1336,0 +1346,1 @@\n+                @Override\n@@ -1341,0 +1352,1 @@\n+                @Override\n@@ -1358,0 +1370,1 @@\n+                @Override\n@@ -1372,0 +1385,1 @@\n+                @Override\n@@ -1425,0 +1439,1 @@\n+        @Override\n","filename":"modules\/javafx.swt\/src\/main\/java\/javafx\/embed\/swt\/FXCanvas.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+            @Override\n","filename":"modules\/javafx.swt\/src\/test\/java\/test\/javafx\/embed\/swt\/SwtRule.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -70,0 +70,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/java\/scene\/web\/WebViewHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/WebEngineBuilder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/web\/WebViewBuilder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private final Map<String, Cursor> map = new HashMap<String, Cursor>();\n+    private final Map<String, Cursor> map = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/CursorManagerImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        this.wvRef = new WeakReference<WebView>(wv);\n+        this.wvRef = new WeakReference<>(wv);\n@@ -68,0 +68,1 @@\n+    @Override\n@@ -84,1 +85,1 @@\n-        List<Integer> underlines = new ArrayList<Integer>();\n+        List<Integer> underlines = new ArrayList<>();\n@@ -125,0 +126,1 @@\n+    @Override\n@@ -146,0 +148,1 @@\n+    @Override\n@@ -164,0 +167,1 @@\n+    @Override\n@@ -168,0 +172,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/InputMethodClientImpl.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/KeyCodeMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-import javafx.scene.paint.Color;\n@@ -147,1 +146,1 @@\n-                    new WebEvent<Boolean>(w, VISIBILITY_CHANGED, visible));\n+                    new WebEvent<>(w, VISIBILITY_CHANGED, visible));\n@@ -178,1 +177,1 @@\n-                    new WebEvent<Rectangle2D>(w, RESIZED,\n+                    new WebEvent<>(w, RESIZED,\n@@ -188,1 +187,1 @@\n-                    new WebEvent<String>(w, STATUS_CHANGED, text));\n+                    new WebEvent<>(w, STATUS_CHANGED, text));\n@@ -197,1 +196,1 @@\n-                    new WebEvent<String>(w, ALERT, text));\n+                    new WebEvent<>(w, ALERT, text));\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/UIClientImpl.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-                tooltipRef = new WeakReference<Tooltip>(tooltip);\n+                tooltipRef = new WeakReference<>(tooltip);\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/WebPageClientImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    };\n+    }\n@@ -106,1 +106,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/drt\/DumpRenderTree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private static final Map<Object, KeyCode> MAP = new HashMap<Object, KeyCode>();\n+    private static final Map<Object, KeyCode> MAP = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/drt\/EventSender.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.io.File;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/drt\/TestOptions.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    private final List<UIClient> clients = new ArrayList<UIClient>();\n+    private final List<UIClient> clients = new ArrayList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/drt\/UIClientImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import com.sun.javafx.webkit.UIClientImpl;\n@@ -81,1 +80,1 @@\n-                    writer.write((BufferedImage) image);\n+                    writer.write(image);\n@@ -147,2 +146,2 @@\n-        final int iw = (int) img.getWidth();\n-        final int ih = (int) img.getHeight();\n+        final int iw = img.getWidth();\n+        final int ih = img.getHeight();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/PrismImage.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            FutureTask<Void> f = new FutureTask<Void>(r, null);\n+            FutureTask<Void> f = new FutureTask<>(r, null);\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/PrismInvoker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-                Math.ceil((double)pixelScale) >= (double)Integer.MAX_VALUE) {\n+                Math.ceil(pixelScale) >= Integer.MAX_VALUE) {\n@@ -249,0 +249,1 @@\n+            @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/RTImage.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import com.sun.javafx.geom.BaseBounds;\n@@ -37,1 +36,0 @@\n-import com.sun.javafx.scene.text.GlyphList;\n@@ -39,2 +37,0 @@\n-import com.sun.javafx.text.TextRun;\n-import com.sun.javafx.webkit.prism.WCTextRunImpl;\n@@ -46,2 +42,0 @@\n-import static com.sun.javafx.webkit.prism.TextUtilities.getLayoutBounds;\n-import static com.sun.javafx.webkit.prism.TextUtilities.getLayoutWidth;\n@@ -53,1 +47,1 @@\n-    private static final HashMap<String, String> FONT_MAP = new HashMap<String, String>();\n+    private static final HashMap<String, String> FONT_MAP = new HashMap<>();\n@@ -149,0 +143,1 @@\n+    @Override\n@@ -160,0 +155,1 @@\n+    @Override\n@@ -171,0 +167,1 @@\n+    @Override\n@@ -182,0 +179,1 @@\n+    @Override\n@@ -193,0 +191,1 @@\n+    @Override\n@@ -197,0 +196,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCFontImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    private final List<ContextState> states = new ArrayList<ContextState>();\n+    private final List<ContextState> states = new ArrayList<>();\n@@ -166,0 +166,1 @@\n+    @Override\n@@ -246,0 +247,1 @@\n+    @Override\n@@ -295,0 +297,1 @@\n+    @Override\n@@ -313,0 +316,1 @@\n+    @Override\n@@ -452,0 +456,1 @@\n+    @Override\n@@ -456,0 +461,1 @@\n+    @Override\n@@ -461,0 +467,1 @@\n+    @Override\n@@ -474,0 +481,1 @@\n+    @Override\n@@ -484,0 +492,1 @@\n+    @Override\n@@ -494,0 +503,1 @@\n+    @Override\n@@ -1056,0 +1066,1 @@\n+    @Override\n@@ -1066,0 +1077,1 @@\n+    @Override\n@@ -1405,2 +1417,2 @@\n-        private double getX() { return (double) bounds.x; }\n-        private double getY() { return (double) bounds.y; }\n+        private double getX() { return bounds.x; }\n+        private double getY() { return bounds.y; }\n@@ -1817,0 +1829,1 @@\n+    @Override\n@@ -1823,0 +1836,1 @@\n+    @Override\n@@ -1833,0 +1847,1 @@\n+    @Override\n@@ -1840,0 +1855,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCGraphicsPrismContext.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -129,1 +129,2 @@\n-            this.loader = new Service<ImageFrame[]>() {\n+            this.loader = new Service<>() {\n+                @Override\n@@ -131,1 +132,2 @@\n-                    return new Task<ImageFrame[]>() {\n+                    return new Task<>() {\n+                        @Override\n@@ -303,1 +305,1 @@\n-        new ThreadLocal<int[]> () {\n+        new ThreadLocal<> () {\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCImageDecoderImpl.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCImageImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private final List<Stop> stops = new ArrayList<Stop>();\n+    private final List<Stop> stops = new ArrayList<>();\n@@ -55,0 +55,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCLinearGradient.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -153,0 +153,1 @@\n+    @Override\n@@ -168,0 +169,1 @@\n+    @Override\n@@ -182,0 +184,1 @@\n+    @Override\n@@ -223,0 +226,1 @@\n+    @Override\n@@ -235,0 +239,1 @@\n+    @Override\n@@ -244,0 +249,1 @@\n+    @Override\n@@ -253,0 +259,1 @@\n+    @Override\n@@ -263,0 +270,1 @@\n+    @Override\n@@ -278,0 +286,1 @@\n+                @Override\n@@ -301,0 +310,1 @@\n+    @Override\n@@ -308,0 +318,1 @@\n+    @Override\n@@ -315,0 +326,1 @@\n+    @Override\n@@ -322,0 +334,1 @@\n+    @Override\n@@ -326,0 +339,1 @@\n+    @Override\n@@ -330,0 +344,1 @@\n+    @Override\n@@ -512,1 +527,1 @@\n-        double bytes2seconds = event.getDuration() \/ (double)event.getBufferStop();\n+        double bytes2seconds = event.getDuration() \/ event.getBufferStop();\n@@ -540,0 +555,1 @@\n+        @Override\n@@ -555,0 +571,1 @@\n+        @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCMediaPlayerImpl.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.geom.transform.BaseTransform;\n@@ -32,1 +31,0 @@\n-import com.sun.prism.Image;\n@@ -37,1 +35,0 @@\n-import com.sun.prism.paint.Color;\n@@ -43,1 +40,0 @@\n-import javafx.scene.transform.Transform;\n@@ -63,0 +59,1 @@\n+    @Override\n@@ -71,0 +68,1 @@\n+    @Override\n@@ -75,0 +73,1 @@\n+    @Override\n@@ -83,0 +82,1 @@\n+    @Override\n@@ -97,0 +97,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCPageBackBufferImpl.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+    @Override\n@@ -77,0 +78,1 @@\n+    @Override\n@@ -87,0 +89,1 @@\n+    @Override\n@@ -105,0 +108,1 @@\n+    @Override\n@@ -161,0 +165,1 @@\n+    @Override\n@@ -180,0 +185,1 @@\n+    @Override\n@@ -188,0 +194,1 @@\n+    @Override\n@@ -197,0 +204,1 @@\n+    @Override\n@@ -206,0 +214,1 @@\n+    @Override\n@@ -215,0 +224,1 @@\n+    @Override\n@@ -226,0 +236,1 @@\n+    @Override\n@@ -235,0 +246,1 @@\n+    @Override\n@@ -242,0 +254,1 @@\n+    @Override\n@@ -246,0 +259,1 @@\n+    @Override\n@@ -250,0 +264,1 @@\n+    @Override\n@@ -254,0 +269,1 @@\n+    @Override\n@@ -289,0 +305,1 @@\n+    @Override\n@@ -315,0 +332,1 @@\n+    @Override\n@@ -324,0 +342,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCPathImpl.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    private final List<Stop> stops = new ArrayList<Stop>();\n+    private final List<Stop> stops = new ArrayList<>();\n@@ -82,0 +82,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCRadialGradient.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+    @Override\n@@ -55,0 +56,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/WCStrokeImpl.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javafx.scene.Scene;\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/prism\/theme\/PrismRenderer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        private static final HashMap<Integer, WidgetType> map = new HashMap<Integer, WidgetType>();\n+        private static final HashMap<Integer, WidgetType> map = new HashMap<>();\n@@ -84,1 +84,1 @@\n-    };\n+    }\n@@ -175,1 +175,1 @@\n-            pool.put(id, new WeakReference<T>(control));\n+            pool.put(id, new WeakReference<>(control));\n@@ -235,1 +235,1 @@\n-        pool = new Pool<FormControl>(fc -> {\n+        pool = new Pool<>(fc -> {\n@@ -416,1 +416,1 @@\n-            this.fcRef = new WeakReference<FormControl>(fc);\n+            this.fcRef = new WeakReference<>(fc);\n@@ -445,1 +445,1 @@\n-        @Override public WidgetType getType() { return WidgetType.BUTTON; };\n+        @Override public WidgetType getType() { return WidgetType.BUTTON; }\n@@ -463,1 +463,1 @@\n-        @Override public WidgetType getType() { return WidgetType.TEXTFIELD; };\n+        @Override public WidgetType getType() { return WidgetType.TEXTFIELD; }\n@@ -477,1 +477,1 @@\n-        @Override public WidgetType getType() { return WidgetType.CHECKBOX; };\n+        @Override public WidgetType getType() { return WidgetType.CHECKBOX; }\n@@ -491,1 +491,1 @@\n-        @Override public WidgetType getType() { return WidgetType.RADIOBUTTON; };\n+        @Override public WidgetType getType() { return WidgetType.RADIOBUTTON; }\n@@ -504,1 +504,1 @@\n-        @Override public WidgetType getType() { return WidgetType.SLIDER; };\n+        @Override public WidgetType getType() { return WidgetType.SLIDER; }\n@@ -522,1 +522,1 @@\n-        @Override public WidgetType getType() { return type; };\n+        @Override public WidgetType getType() { return type; }\n@@ -529,1 +529,1 @@\n-            List<String> l = new ArrayList<String>();\n+            List<String> l = new ArrayList<>();\n@@ -542,1 +542,1 @@\n-        @Override public WidgetType getType() { return WidgetType.MENULIST; };\n+        @Override public WidgetType getType() { return WidgetType.MENULIST; }\n@@ -592,1 +592,1 @@\n-        @Override public WidgetType getType() { return WidgetType.MENULISTBUTTON; };\n+        @Override public WidgetType getType() { return WidgetType.MENULISTBUTTON; }\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/theme\/RenderThemeImpl.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-            new WeakReference<ScrollBar>(null);\n+            new WeakReference<>(null);\n@@ -62,1 +62,1 @@\n-            this.sbRef = new WeakReference<ScrollBarWidget>(sb);\n+            this.sbRef = new WeakReference<>(sb);\n@@ -77,1 +77,1 @@\n-        pool = new Pool<ScrollBarWidget>(\n+        pool = new Pool<>(\n@@ -87,1 +87,1 @@\n-                testSBRef = new WeakReference<ScrollBar>(testSB);\n+                testSBRef = new WeakReference<>(testSB);\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/javafx\/webkit\/theme\/ScrollBarThemeImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-            new LinkedList<WCChangeListener>();\n+            new LinkedList<>();\n@@ -153,1 +153,1 @@\n-        new LinkedList<WCChangeListener>();\n+        new LinkedList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/BackForwardList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/ContextMenuItem.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    private final Map<Long, T> map = new HashMap<Long, T>();\n+    private final Map<Long, T> map = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/CursorManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-            new HashSet<WeakDisposerRecord>();\n+            new HashSet<>();\n@@ -120,0 +120,1 @@\n+    @Override\n@@ -143,1 +144,1 @@\n-                = new LinkedBlockingQueue<WeakDisposerRecord>();\n+                = new LinkedBlockingQueue<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/Disposer.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/WCPasteboard.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    };\n+    }\n@@ -189,0 +189,1 @@\n+    @Override\n@@ -202,0 +203,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/WCPluginWidget.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-    private final Set<Long> frames = new HashSet<Long>();\n+    private final Set<Long> frames = new HashSet<>();\n@@ -112,1 +112,1 @@\n-            new HashMap<Integer, String>();\n+            new HashMap<>();\n@@ -116,1 +116,1 @@\n-    private final Set<Integer> requestStarted = new HashSet<Integer>();\n+    private final Set<Integer> requestStarted = new HashSet<>();\n@@ -127,1 +127,1 @@\n-    private final Queue<RenderFrame> frameQueue = new LinkedList<RenderFrame>();\n+    private final Queue<RenderFrame> frameQueue = new LinkedList<>();\n@@ -267,1 +267,1 @@\n-    private List<WCRectangle> dirtyRects = new LinkedList<WCRectangle>();\n+    private List<WCRectangle> dirtyRects = new LinkedList<>();\n@@ -324,1 +324,1 @@\n-        dirtyRects = new LinkedList<WCRectangle>();\n+        dirtyRects = new LinkedList<>();\n@@ -397,1 +397,1 @@\n-            addDirtyRect(new WCRectangle(x, y, (float) w, (float) h));\n+            addDirtyRect(new WCRectangle(x, y, w, h));\n@@ -456,1 +456,1 @@\n-                new LinkedList<WCRenderQueue>();\n+                new LinkedList<>();\n@@ -516,1 +516,1 @@\n-        new LinkedList<LoadListenerClient>();\n+        new LinkedList<>();\n@@ -709,1 +709,1 @@\n-            FutureTask<Void> f = new FutureTask<Void>(() -> {\n+            FutureTask<Void> f = new FutureTask<>(() -> {\n@@ -1629,1 +1629,1 @@\n-            List<Long> childrenList = new LinkedList<Long>();\n+            List<Long> childrenList = new LinkedList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/WebPage.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-            = new HashMap<String, WCImage>();\n+            = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/graphics\/RenderMediaControls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/graphics\/WCCamera.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    private final HashMap<Integer,Ref> refMap = new HashMap<Integer,Ref>();\n+    private final HashMap<Integer,Ref> refMap = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/graphics\/WCGraphicsManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private final LinkedList<BufferData> buffers = new LinkedList<BufferData>();\n+    private final LinkedList<BufferData> buffers = new LinkedList<>();\n@@ -198,1 +198,1 @@\n-            new HashMap<Integer,String>();\n+            new HashMap<>();\n@@ -200,1 +200,1 @@\n-            new HashMap<Integer,int[]>();\n+            new HashMap<>();\n@@ -202,1 +202,1 @@\n-            new HashMap<Integer,float[]>();\n+            new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/graphics\/WCRenderQueue.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-            new ConcurrentLinkedQueue<ByteBuffer>();\n+            new ConcurrentLinkedQueue<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/ByteBufferPool.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-            Map<String, List<String>> headers = new HashMap<String, List<String>>();\n-            List<String> val = new ArrayList<String>();\n+            Map<String, List<String>> headers = new HashMap<>();\n+            List<String> val = new ArrayList<>();\n@@ -83,1 +83,1 @@\n-            Map<String, List<String>> headers = new HashMap<String, List<String>>();\n+            Map<String, List<String>> headers = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/CookieJar.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            result = new HashMap<String,List<String>>();\n+            result = new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/CookieManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            new HashMap<String,Map<Cookie,Cookie>>();\n+            new HashMap<>();\n@@ -113,1 +113,1 @@\n-        ArrayList<Cookie> result = new ArrayList<Cookie>();\n+        ArrayList<Cookie> result = new ArrayList<>();\n@@ -201,1 +201,1 @@\n-            bucket = new LinkedHashMap<Cookie,Cookie>(20);\n+            bucket = new LinkedHashMap<>(20);\n@@ -261,1 +261,1 @@\n-        Queue<Cookie> removalQueue = new PriorityQueue<Cookie>(totalCount \/ 2,\n+        Queue<Cookie> removalQueue = new PriorityQueue<>(totalCount \/ 2,\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/CookieStore.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.io.EOFException;\n@@ -39,2 +38,0 @@\n-import java.io.UnsupportedEncodingException;\n-import java.lang.annotation.Native;\n@@ -43,2 +40,0 @@\n-import java.net.HttpRetryException;\n-import java.net.HttpURLConnection;\n@@ -51,3 +46,0 @@\n-import java.net.URL;\n-import java.net.URLConnection;\n-import java.net.URLDecoder;\n@@ -67,1 +59,0 @@\n-import java.util.Enumeration;\n@@ -70,1 +61,0 @@\n-import java.util.Map;\n@@ -77,1 +67,0 @@\n-import java.util.function.Supplier;\n@@ -86,1 +75,0 @@\n-import static java.net.http.HttpResponse.BodyHandlers;\n@@ -298,1 +286,1 @@\n-        return new BodySubscriber<Void>() {\n+        return new BodySubscriber<>() {\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/HTTP2Loader.java","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-import java.util.concurrent.CountDownLatch;\n@@ -623,1 +622,1 @@\n-    private void willSendRequest(URLConnection c) throws InterruptedException\n+    private void willSendRequest(URLConnection c)\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/URLLoader.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        LinkedList<String> parameters = new LinkedList<String>();\n+        LinkedList<String> parameters = new LinkedList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/network\/data\/DataURLConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            new HashMap<String, ProbeStat>();\n+            new HashMap<>();\n@@ -53,1 +53,1 @@\n-            loggers = new HashMap<PlatformLogger, PerfLogger>();\n+            loggers = new HashMap<>();\n@@ -159,2 +159,2 @@\n-        long t0 = probes.get((String)arg0).totalTime;\n-        long t1 = probes.get((String)arg1).totalTime;\n+        long t0 = probes.get(arg0).totalTime;\n+        long t1 = probes.get(arg1).totalTime;\n@@ -170,2 +170,2 @@\n-        long c0 = probes.get((String)arg0).count;\n-        long c1 = probes.get((String)arg1).count;\n+        long c0 = probes.get(arg0).count;\n+        long c1 = probes.get(arg1).count;\n@@ -275,1 +275,1 @@\n-        ArrayList<String> list = new ArrayList<String>();\n+        ArrayList<String> list = new ArrayList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/perf\/PerfLogger.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -67,0 +69,1 @@\n+    @Override\n@@ -74,0 +77,1 @@\n+    @Override\n@@ -81,0 +85,1 @@\n+    @Override\n@@ -88,0 +93,1 @@\n+    @Override\n@@ -95,0 +101,1 @@\n+    @Override\n@@ -102,0 +109,1 @@\n+    @Override\n@@ -109,0 +117,1 @@\n+    @Override\n@@ -116,0 +125,1 @@\n+    @Override\n@@ -123,0 +133,1 @@\n+    @Override\n@@ -130,0 +141,1 @@\n+    @Override\n@@ -137,0 +149,1 @@\n+    @Override\n@@ -144,0 +157,1 @@\n+    @Override\n@@ -151,0 +165,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/perf\/WCFontPerfLogger.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n@@ -64,0 +67,1 @@\n+    @Override\n@@ -70,0 +74,2 @@\n+\n+    @Override\n@@ -78,0 +84,1 @@\n+    @Override\n@@ -82,0 +89,1 @@\n+    @Override\n@@ -99,0 +107,1 @@\n+    @Override\n@@ -101,0 +110,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/plugin\/DefaultPlugin.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        new TreeMap<String,PluginHandler>();\n+        new TreeMap<>();\n@@ -51,1 +51,1 @@\n-        new HashSet<String>();\n+        new HashSet<>();\n@@ -110,1 +110,1 @@\n-        Vector<PluginHandler> res = new Vector<PluginHandler>();\n+        Vector<PluginHandler> res = new Vector<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/plugin\/PluginManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+        @Override\n@@ -74,0 +75,1 @@\n+        @Override\n@@ -81,1 +83,1 @@\n-        new HashMap<CacheKey, BreakIterator>();\n+        new HashMap<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/text\/TextBreakIterator.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        List<String> encodings = new ArrayList<String>();\n+        List<String> encodings = new ArrayList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/text\/TextCodec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -597,1 +597,1 @@\n-        formatComboBox = new ComboBox<String>();\n+        formatComboBox = new ComboBox<>();\n@@ -603,2 +603,2 @@\n-        formatStyleMap = new HashMap<String, String>();\n-        styleFormatMap = new HashMap<String, String>();\n+        formatStyleMap = new HashMap<>();\n+        styleFormatMap = new HashMap<>();\n@@ -653,1 +653,1 @@\n-        fontFamilyComboBox = new ComboBox<String>();\n+        fontFamilyComboBox = new ComboBox<>();\n@@ -670,1 +670,1 @@\n-                final ListCell<String> cell = new ListCell<String>() {\n+                final ListCell<String> cell = new ListCell<>() {\n@@ -699,1 +699,1 @@\n-        fontSizeComboBox = new ComboBox<String>();\n+        fontSizeComboBox = new ComboBox<>();\n@@ -704,2 +704,2 @@\n-        fontSizeMap = new HashMap<String, String>();\n-        sizeFontMap = new HashMap<String, String>();\n+        fontSizeMap = new HashMap<>();\n+        sizeFontMap = new HashMap<>();\n@@ -721,1 +721,1 @@\n-                final ListCell<String> cell = new ListCell<String>() {\n+                final ListCell<String> cell = new ListCell<>() {\n@@ -728,1 +728,1 @@\n-                            setFont(new Font((String)fontFamilyComboBox.getValue(), Double.valueOf(size)));\n+                            setFont(new Font(fontFamilyComboBox.getValue(), Double.valueOf(size)));\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/HTMLEditorSkin.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-    private final ObjectProperty<WebView> view = new SimpleObjectProperty<WebView>(this, \"view\");\n+    private final ObjectProperty<WebView> view = new SimpleObjectProperty<>(this, \"view\");\n@@ -691,1 +691,1 @@\n-            = new SimpleObjectProperty<EventHandler<WebEvent<String>>>(this, \"onAlert\");\n+            = new SimpleObjectProperty<>(this, \"onAlert\");\n@@ -706,1 +706,1 @@\n-            = new SimpleObjectProperty<EventHandler<WebEvent<String>>>(this, \"onStatusChanged\");\n+            = new SimpleObjectProperty<>(this, \"onStatusChanged\");\n@@ -721,1 +721,1 @@\n-            = new SimpleObjectProperty<EventHandler<WebEvent<Rectangle2D>>>(this, \"onResized\");\n+            = new SimpleObjectProperty<>(this, \"onResized\");\n@@ -737,1 +737,1 @@\n-            = new SimpleObjectProperty<EventHandler<WebEvent<Boolean>>>(this, \"onVisibilityChanged\");\n+            = new SimpleObjectProperty<>(this, \"onVisibilityChanged\");\n@@ -753,1 +753,1 @@\n-            = new SimpleObjectProperty<Callback<PopupFeatures, WebEngine>>(this, \"createPopupHandler\",\n+            = new SimpleObjectProperty<>(this, \"createPopupHandler\",\n@@ -778,1 +778,1 @@\n-            = new SimpleObjectProperty<Callback<String, Boolean>>(this, \"confirmHandler\");\n+            = new SimpleObjectProperty<>(this, \"confirmHandler\");\n@@ -796,1 +796,1 @@\n-            = new SimpleObjectProperty<Callback<PromptData, String>>(this, \"promptHandler\");\n+            = new SimpleObjectProperty<>(this, \"promptHandler\");\n@@ -1145,1 +1145,1 @@\n-            this.engine = new WeakReference<WebEngine>(w);\n+            this.engine = new WeakReference<>(w);\n@@ -1235,1 +1235,1 @@\n-            this.engine = new WeakReference<WebEngine>(engine);\n+            this.engine = new WeakReference<>(engine);\n@@ -1259,1 +1259,1 @@\n-        private final ReadOnlyObjectWrapper<State> state = new ReadOnlyObjectWrapper<State>(this, \"state\", State.READY);\n+        private final ReadOnlyObjectWrapper<State> state = new ReadOnlyObjectWrapper<>(this, \"state\", State.READY);\n@@ -1271,1 +1271,1 @@\n-        private final ReadOnlyObjectWrapper<Void> value = new ReadOnlyObjectWrapper<Void>(this, \"value\", null);\n+        private final ReadOnlyObjectWrapper<Void> value = new ReadOnlyObjectWrapper<>(this, \"value\", null);\n@@ -1278,1 +1278,1 @@\n-        private final ReadOnlyObjectWrapper<Throwable> exception = new ReadOnlyObjectWrapper<Throwable>(this, \"exception\");\n+        private final ReadOnlyObjectWrapper<Throwable> exception = new ReadOnlyObjectWrapper<>(this, \"exception\");\n@@ -1463,0 +1463,1 @@\n+        @Override\n@@ -1476,0 +1477,1 @@\n+        @Override\n@@ -1480,0 +1482,1 @@\n+        @Override\n@@ -1568,1 +1571,1 @@\n-            this.engine = new WeakReference<WebEngine>(engine);\n+            this.engine = new WeakReference<>(engine);\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebEngine.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-            new EventType<WebErrorEvent>(Event.ANY, \"WEB_ERROR\");\n+            new EventType<>(Event.ANY, \"WEB_ERROR\");\n@@ -73,1 +73,1 @@\n-            USER_DATA_DIRECTORY_ALREADY_IN_USE = new EventType<WebErrorEvent>(\n+            USER_DATA_DIRECTORY_ALREADY_IN_USE = new EventType<>(\n@@ -97,1 +97,1 @@\n-            USER_DATA_DIRECTORY_IO_ERROR = new EventType<WebErrorEvent>(\n+            USER_DATA_DIRECTORY_IO_ERROR = new EventType<>(\n@@ -121,1 +121,1 @@\n-            USER_DATA_DIRECTORY_SECURITY_ERROR = new EventType<WebErrorEvent>(\n+            USER_DATA_DIRECTORY_SECURITY_ERROR = new EventType<>(\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebErrorEvent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-            new EventType<WebEvent>(Event.ANY, \"WEB\");\n+            new EventType<>(Event.ANY, \"WEB\");\n@@ -57,1 +57,1 @@\n-            new EventType<WebEvent>(WebEvent.ANY, \"WEB_RESIZED\");\n+            new EventType<>(WebEvent.ANY, \"WEB_RESIZED\");\n@@ -63,1 +63,1 @@\n-            new EventType<WebEvent>(WebEvent.ANY, \"WEB_STATUS_CHANGED\");\n+            new EventType<>(WebEvent.ANY, \"WEB_STATUS_CHANGED\");\n@@ -70,1 +70,1 @@\n-            new EventType<WebEvent>(WebEvent.ANY, \"WEB_VISIBILITY_CHANGED\");\n+            new EventType<>(WebEvent.ANY, \"WEB_VISIBILITY_CHANGED\");\n@@ -77,1 +77,1 @@\n-            new EventType<WebEvent>(WebEvent.ANY, \"WEB_ALERT\");\n+            new EventType<>(WebEvent.ANY, \"WEB_ALERT\");\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebEvent.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import com.sun.webkit.event.WCChangeEvent;\n-import com.sun.webkit.event.WCChangeListener;\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebHistory.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -801,1 +801,1 @@\n-                = new CssMetaData<WebView, Boolean>(\n+                = new CssMetaData<>(\n@@ -815,1 +815,1 @@\n-                = new CssMetaData<WebView, FontSmoothingType>(\n+                = new CssMetaData<>(\n@@ -817,1 +817,1 @@\n-                new EnumConverter<FontSmoothingType>(FontSmoothingType.class),\n+                new EnumConverter<>(FontSmoothingType.class),\n@@ -845,1 +845,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -858,1 +858,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -873,1 +873,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -888,1 +888,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -903,1 +903,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -918,1 +918,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -933,1 +933,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -948,1 +948,1 @@\n-                = new CssMetaData<WebView, Number>(\n+                = new CssMetaData<>(\n@@ -966,1 +966,1 @@\n-                    = new ArrayList<CssMetaData<? extends Styleable, ?>>(Parent.getClassCssMetaData());\n+                    = new ArrayList<>(Parent.getClassCssMetaData());\n@@ -1204,1 +1204,1 @@\n-        LinkedList<TransferMode> tms = new LinkedList<TransferMode>();\n+        LinkedList<TransferMode> tms = new LinkedList<>();\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebView.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.webkit.prism.PrismImage;\n","filename":"modules\/javafx.web\/src\/shims\/java\/com\/sun\/javafx\/webkit\/prism\/WCBufferedContextShim.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import com.sun.webkit.WebPage;\n@@ -34,3 +33,0 @@\n-import com.sun.webkit.graphics.WCGraphicsManager;\n-import com.sun.webkit.graphics.WCGraphicsManagerShim;\n-import com.sun.webkit.graphics.WCPageBackBuffer;\n","filename":"modules\/javafx.web\/src\/shims\/java\/com\/sun\/webkit\/WebPageShim.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import com.sun.webkit.graphics.WCGraphicsManager;\n-import com.sun.webkit.graphics.WCImage;\n-\n","filename":"modules\/javafx.web\/src\/shims\/java\/com\/sun\/webkit\/graphics\/WCGraphicsManagerShim.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -97,0 +97,1 @@\n+    @Override\n","filename":"modules\/javafx.web\/src\/shims\/java\/com\/sun\/webkit\/network\/CookieShim.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -515,1 +515,1 @@\n-                new ArrayList<byte[]>(Arrays.asList(expectedChunks));\n+                new ArrayList<>(Arrays.asList(expectedChunks));\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/com\/sun\/webkit\/SharedBufferTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -525,1 +525,1 @@\n-    public void testMarkVariousArguments() throws IOException {\n+    public void testMarkVariousArguments() {\n@@ -538,1 +538,1 @@\n-    public void testMarkRandomArguments() throws IOException {\n+    public void testMarkRandomArguments() {\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/com\/sun\/webkit\/SimpleSharedBufferInputStreamTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-        Set<String> set = new LinkedHashSet<String>(to - from);\n+        Set<String> set = new LinkedHashSet<>(to - from);\n@@ -691,2 +691,2 @@\n-        Map<String,List<String>> map = new HashMap<String,List<String>>(1);\n-        List<String> list = new ArrayList<String>(values.length);\n+        Map<String,List<String>> map = new HashMap<>(1);\n+        List<String> list = new ArrayList<>(values.length);\n@@ -738,1 +738,1 @@\n-        return new TreeSet<String>(Arrays.asList(s.split(\"; \")));\n+        return new TreeSet<>(Arrays.asList(s.split(\"; \")));\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/com\/sun\/webkit\/network\/CookieManagerTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -479,1 +479,1 @@\n-    public void testHasExpired() throws InterruptedException {\n+    public void testHasExpired() {\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/com\/sun\/webkit\/network\/CookieTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    @Test public void testWebView() throws InterruptedException {\n+    @Test public void testWebView() {\n@@ -123,3 +123,3 @@\n-        ObjectProperty<Document> doc = new SimpleObjectProperty<Document>();\n-        ObjectProperty<String> title = new SimpleObjectProperty<String>();\n-        ObjectProperty<String> loc = new SimpleObjectProperty<String>();\n+        ObjectProperty<Document> doc = new SimpleObjectProperty<>();\n+        ObjectProperty<String> title = new SimpleObjectProperty<>();\n+        ObjectProperty<String> loc = new SimpleObjectProperty<>();\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/BindingTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import static javafx.concurrent.Worker.State.FAILED;\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/CSSTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-        private List<List<Object>> calls = new LinkedList<List<Object>>();\n+        private List<List<Object>> calls = new LinkedList<>();\n@@ -237,1 +237,1 @@\n-            List<Object> call = new ArrayList<Object>(args.length + 1);\n+            List<Object> call = new ArrayList<>(args.length + 1);\n@@ -253,1 +253,1 @@\n-            List<Object> e = new ArrayList<Object>(args.length + 1);\n+            List<Object> e = new ArrayList<>(args.length + 1);\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/CallbackTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import org.junit.Ignore;\n@@ -40,3 +39,0 @@\n-import org.w3c.dom.Document;\n-import org.w3c.dom.Element;\n-\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/CanvasTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -234,0 +234,1 @@\n+                    @Override\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/DOMTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-            final List<String> callbackMessages = new ArrayList<String>();\n+            final List<String> callbackMessages = new ArrayList<>();\n@@ -87,1 +87,2 @@\n-            Callback<String,Void> callback = new Callback<String,Void>() {\n+            Callback<String,Void> callback = new Callback<>() {\n+                @Override\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/DebuggerTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-    @Test public void testreadAsArrayBuffer() throws FileNotFoundException, IOException {\n+    @Test public void testreadAsArrayBuffer() {\n@@ -240,1 +240,1 @@\n-    @Test public void testreadAsDataURL() throws FileNotFoundException, IOException {\n+    @Test public void testreadAsDataURL() {\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/FileReaderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.List;\n@@ -31,1 +30,0 @@\n-import java.net.MalformedURLException;\n@@ -35,1 +33,0 @@\n-import javafx.beans.value.ObservableValue;\n@@ -39,2 +36,0 @@\n-import java.util.concurrent.Callable;\n-import javafx.scene.web.WebHistory;\n@@ -43,1 +38,0 @@\n-import static org.junit.Assert.assertFalse;\n@@ -84,0 +78,1 @@\n+            @Override\n@@ -126,0 +121,1 @@\n+            @Override\n@@ -292,0 +288,1 @@\n+            @Override\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/HistoryTest.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.PlatformUtil;\n@@ -34,1 +33,0 @@\n-import org.junit.Assume;\n@@ -62,0 +60,1 @@\n+            @Override\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/IrresponsiveScriptTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    public @Test void testJSBridge1() throws InterruptedException {\n+    public @Test void testJSBridge1() {\n@@ -124,1 +124,1 @@\n-    public @Test void testJSBridge2() throws InterruptedException {\n+    public @Test void testJSBridge2() {\n@@ -138,1 +138,1 @@\n-    public @Test void testJSBridge3() throws InterruptedException {\n+    public @Test void testJSBridge3() {\n@@ -146,1 +146,1 @@\n-            java.util.Stack<Object> st = new java.util.Stack<Object>();\n+            java.util.Stack<Object> st = new java.util.Stack<>();\n@@ -160,1 +160,1 @@\n-    public @Test void testJSBridge4() throws InterruptedException {\n+    public @Test void testJSBridge4() {\n@@ -210,1 +210,1 @@\n-    @Test public void testJSBridge5() throws InterruptedException {\n+    @Test public void testJSBridge5() {\n@@ -226,1 +226,1 @@\n-    @Test public void testJSCall1() throws InterruptedException {\n+    @Test public void testJSCall1() {\n@@ -240,1 +240,1 @@\n-    @Test public void testNullMemberName() throws InterruptedException {\n+    @Test public void testNullMemberName() {\n@@ -302,1 +302,1 @@\n-    public @Test void testCallStatic() throws InterruptedException {\n+    public @Test void testCallStatic() {\n@@ -544,1 +544,1 @@\n-    public @Test void testBridgeExplicitOverloading() throws InterruptedException {\n+    public @Test void testBridgeExplicitOverloading() {\n@@ -575,1 +575,1 @@\n-            java.util.List<Integer> alist = new java.util.ArrayList<Integer>();\n+            java.util.List<Integer> alist = new java.util.ArrayList<>();\n@@ -603,1 +603,1 @@\n-    public @Test void testThrowJava() throws InterruptedException {\n+    public @Test void testThrowJava() {\n@@ -622,1 +622,1 @@\n-    public @Test void testThrowJava2() throws InterruptedException {\n+    public @Test void testThrowJava2() {\n@@ -655,1 +655,1 @@\n-    public @Test void testBridgeArray1() throws InterruptedException {\n+    public @Test void testBridgeArray1() {\n@@ -668,1 +668,1 @@\n-    public @Test void testBridgeBadOverloading() throws InterruptedException {\n+    public @Test void testBridgeBadOverloading() {\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/JavaScriptBridgeTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.sun.webkit.WebPage;\n@@ -87,3 +86,3 @@\n-            willGC[0] = new WeakReference<WebView>(webView);\n-            willGC[1] = new WeakReference<WebEngine>(webView.getEngine());\n-            willGC[2] = new WeakReference<WebPage>(WebEngineShim.getPage(webView.getEngine()));\n+            willGC[0] = new WeakReference<>(webView);\n+            willGC[1] = new WeakReference<>(webView.getEngine());\n+            willGC[2] = new WeakReference<>(WebEngineShim.getPage(webView.getEngine()));\n@@ -205,1 +204,1 @@\n-            Element element = (Element) tagList.item(0);;\n+            Element element = (Element) tagList.item(0);\n@@ -210,1 +209,1 @@\n-            element = (Element) tagList.item(0);;\n+            element = (Element) tagList.item(0);\n@@ -215,1 +214,1 @@\n-            element = (Element) tagList.item(0);;\n+            element = (Element) tagList.item(0);\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/LeakTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    Set<State> log = new HashSet<State>();\n+    Set<State> log = new HashSet<>();\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/LoadNotificationsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.util.concurrent.Callable;\n@@ -41,1 +40,0 @@\n-import javafx.event.EventHandler;\n@@ -194,1 +192,1 @@\n-            assertEquals(\"Font weight should be bold\", \"700\", (String) getEngine().executeScript(\n+            assertEquals(\"Font weight should be bold\", \"700\", getEngine().executeScript(\n@@ -196,1 +194,1 @@\n-            assertEquals(\"font style should be italic\", \"italic\", (String) getEngine().executeScript(\n+            assertEquals(\"font style should be italic\", \"italic\", getEngine().executeScript(\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/LoadTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.awt.Color;\n-import java.awt.image.BufferedImage;\n@@ -37,1 +35,0 @@\n-import java.util.HashMap;\n@@ -39,1 +36,0 @@\n-import java.util.concurrent.Callable;\n@@ -44,1 +40,0 @@\n-import javafx.beans.value.ObservableValue;\n@@ -60,5 +55,0 @@\n-import javafx.scene.web.WebEngineShim;\n-import com.sun.webkit.WebPage;\n-import com.sun.webkit.WebPageShim;\n-import com.sun.webkit.graphics.WCGraphicsContext;\n-\n@@ -103,1 +93,1 @@\n-        final ArrayList<Record> records = new ArrayList<Record>();\n+        final ArrayList<Record> records = new ArrayList<>();\n@@ -276,1 +266,1 @@\n-                ttfFileStream.read(ttfFileContent, (int)offset, available);\n+                ttfFileStream.read(ttfFileContent, offset, available);\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/MiscellaneousTest.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import org.w3c.dom.Document;\n-import static java.lang.String.format;\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/SVGTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,28 +92,31 @@\n-    @Test public void test() throws InterruptedException {\n-        submit(new Runnable() { public void run() {\n-            Node view = getView();\n-\n-            \/\/ test WebView not added to a Scene\n-            checkWindowProperties(-1, -1);\n-\n-            \/\/ add WebView to a Scene with no Window\n-            Scene scene = new Scene(new Group(view));\n-            checkWindowProperties(-1, -1);\n-\n-            \/\/ add Scene to a 0x0 Window\n-            Stage stage = new Stage();\n-            stage.setScene(scene);\n-            stage.setWidth(0);\n-            stage.setHeight(0);\n-\n-            Screen screen = Utils.getScreen(view);\n-            Rectangle2D screenSize = screen.getBounds();\n-            Rectangle2D availSize = screen.getVisualBounds();\n-\n-            checkProperties(screenSize, availSize, 0, 0);\n-\n-            \/\/ resize the Window\n-            stage.setWidth(400);\n-            stage.setHeight(300);\n-            checkProperties(screenSize, availSize, 400, 300);\n-        }});\n+    @Test public void test() {\n+        submit(new Runnable() {\n+            @Override\n+            public void run() {\n+                Node view = getView();\n+\n+                \/\/ test WebView not added to a Scene\n+                checkWindowProperties(-1, -1);\n+\n+                \/\/ add WebView to a Scene with no Window\n+                Scene scene = new Scene(new Group(view));\n+                checkWindowProperties(-1, -1);\n+\n+                \/\/ add Scene to a 0x0 Window\n+                Stage stage = new Stage();\n+                stage.setScene(scene);\n+                stage.setWidth(0);\n+                stage.setHeight(0);\n+\n+                Screen screen = Utils.getScreen(view);\n+                Rectangle2D screenSize = screen.getBounds();\n+                Rectangle2D availSize = screen.getVisualBounds();\n+\n+                checkProperties(screenSize, availSize, 0, 0);\n+\n+                \/\/ resize the Window\n+                stage.setWidth(400);\n+                stage.setHeight(300);\n+                checkProperties(screenSize, availSize, 400, 300);\n+            }\n+        });\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/ScreenAndWindowTest.java","additions":31,"deletions":28,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.Set;\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/SubresourceIntegrityTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,3 +30,0 @@\n-import javafx.scene.web.WebEngine;\n-import javafx.scene.web.WebView;\n-\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/SwingDependencyTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-        final FutureTask<Void> future = new FutureTask<Void>(job, null);\n+        final FutureTask<Void> future = new FutureTask<>(job, null);\n@@ -195,1 +195,1 @@\n-        final FutureTask<T> future = new FutureTask<T>(job);\n+        final FutureTask<T> future = new FutureTask<>(job);\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/TestBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -495,1 +495,1 @@\n-    public void testNoFxThreadCheck() throws IOException {\n+    public void testNoFxThreadCheck() {\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/UserDataDirectoryTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.concurrent.Callable;\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/WebPageTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import java.util.concurrent.FutureTask;\n-\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/WebViewTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}