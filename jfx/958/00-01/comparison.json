{"files":[{"patch":"@@ -46,1 +46,1 @@\n-    private ArrayList<String> stylesheets = new ArrayList<String>();\n+    private ArrayList<String> stylesheets = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/JavaFXSceneBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -553,0 +553,1 @@\n+        @Override\n@@ -634,1 +635,1 @@\n-        List l = (List) BeanAdapter.coerce(userValue, List.class);\n+        List l = BeanAdapter.coerce(userValue, List.class);\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/builder\/ProxyBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            LinkedList<Expression> stack = new LinkedList<Expression>();\n+            LinkedList<Expression> stack = new LinkedList<>();\n@@ -196,2 +196,2 @@\n-            LinkedList<Token> tokens = new LinkedList<Token>();\n-            LinkedList<Token> stack = new LinkedList<Token>();\n+            LinkedList<Token> tokens = new LinkedList<>();\n+            LinkedList<Token> stack = new LinkedList<>();\n@@ -550,1 +550,1 @@\n-        ArrayList<KeyPath> arguments = new ArrayList<KeyPath>();\n+        ArrayList<KeyPath> arguments = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/expression\/Expression.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        private ListChangeListener<Object> listChangeListener = new ListChangeListener<Object>() {\n+        private ListChangeListener<Object> listChangeListener = new ListChangeListener<>() {\n@@ -68,1 +68,1 @@\n-        private MapChangeListener<String, Object> mapChangeListener = new MapChangeListener<String, Object>() {\n+        private MapChangeListener<String, Object> mapChangeListener = new MapChangeListener<>() {\n@@ -78,1 +78,1 @@\n-        private ChangeListener<Object> propertyChangeListener = new ChangeListener<Object>() {\n+        private ChangeListener<Object> propertyChangeListener = new ChangeListener<>() {\n@@ -182,1 +182,1 @@\n-        argumentMonitors = new ArrayList<KeyPathMonitor>(arguments.size());\n+        argumentMonitors = new ArrayList<>(arguments.size());\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/expression\/ExpressionValue.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-        ArrayList<String> elements = new ArrayList<String>();\n+        ArrayList<String> elements = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/main\/java\/com\/sun\/javafx\/fxml\/expression\/KeyPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,4 +126,4 @@\n-        public final LinkedList<Attribute> eventHandlerAttributes = new LinkedList<Attribute>();\n-        public final LinkedList<Attribute> instancePropertyAttributes = new LinkedList<Attribute>();\n-        public final LinkedList<Attribute> staticPropertyAttributes = new LinkedList<Attribute>();\n-        public final LinkedList<PropertyElement> staticPropertyElements = new LinkedList<PropertyElement>();\n+        public final LinkedList<Attribute> eventHandlerAttributes = new LinkedList<>();\n+        public final LinkedList<Attribute> instancePropertyAttributes = new LinkedList<>();\n+        public final LinkedList<Attribute> staticPropertyAttributes = new LinkedList<>();\n+        public final LinkedList<PropertyElement> staticPropertyElements = new LinkedList<>();\n@@ -156,1 +156,1 @@\n-        public void add(Object element) throws LoadException {\n+        public void add(Object element) {\n@@ -234,3 +234,1 @@\n-        public void processEndElement() throws IOException {\n-            \/\/ No-op\n-        }\n+        public abstract void processEndElement() throws IOException;\n@@ -297,1 +295,0 @@\n-        @SuppressWarnings(\"unchecked\")\n@@ -498,1 +495,1 @@\n-            Type itemType = (Class<?>)BeanAdapter.getGenericListItemType(listType);\n+            Type itemType = BeanAdapter.getGenericListItemType(listType);\n@@ -769,2 +766,0 @@\n-            super.processEndElement();\n-\n@@ -965,1 +960,1 @@\n-        public InstanceDeclarationElement(Class<?> type) throws LoadException {\n+        public InstanceDeclarationElement(Class<?> type) {\n@@ -1036,2 +1031,2 @@\n-            private ArrayList<?> items = new ArrayList<Object>();\n-            private HashMap<String, Object> values = new HashMap<String, Object>();\n+            private ArrayList<?> items = new ArrayList<>();\n+            private HashMap<String, Object> values = new HashMap<>();\n@@ -1404,1 +1399,1 @@\n-        public void add(Object element) throws LoadException {\n+        public void add(Object element) {\n@@ -1446,2 +1441,0 @@\n-            super.processEndElement();\n-\n@@ -1500,0 +1493,5 @@\n+\n+        @Override\n+        public void processEndElement() {\n+            \/\/ No-op\n+        }\n@@ -1613,2 +1611,0 @@\n-            super.processEndElement();\n-\n@@ -1699,0 +1695,5 @@\n+\n+        @Override\n+        public void processEndElement() {\n+            \/\/ No-op\n+        }\n@@ -1784,1 +1785,0 @@\n-        @SuppressWarnings(\"unchecked\")\n@@ -1890,2 +1890,2 @@\n-    private List<String> packages = new LinkedList<String>();\n-    private Map<String, Class<?>> classes = new HashMap<String, Class<?>>();\n+    private List<String> packages = new LinkedList<>();\n+    private Map<String, Class<?>> classes = new HashMap<>();\n@@ -2565,1 +2565,1 @@\n-    @SuppressWarnings({ \"dep-ann\", \"unchecked\" })\n+    @SuppressWarnings(\"unchecked\")\n@@ -2804,1 +2804,1 @@\n-    private void processComment() throws LoadException {\n+    private void processComment() {\n@@ -2948,1 +2948,1 @@\n-    private void importPackage(String name) throws LoadException {\n+    private void importPackage(String name) {\n@@ -2960,1 +2960,1 @@\n-    private Class<?> getType(String name) throws LoadException {\n+    private Class<?> getType(String name) {\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/FXMLLoader.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -201,3 +201,3 @@\n-        private final Map<String,Method> methods = new HashMap<String, Method>();\n-        private final Map<String,Method> getters = new HashMap<String,Method>();\n-        private final Map<String,Method> setters = new HashMap<String,Method>();\n+        private final Map<String,Method> methods = new HashMap<>();\n+        private final Map<String,Method> getters = new HashMap<>();\n+        private final Map<String,Method> setters = new HashMap<>();\n@@ -206,1 +206,1 @@\n-            private final Map<String,Object> containers = new HashMap<String,Object>();\n+            private final Map<String,Object> containers = new HashMap<>();\n@@ -364,1 +364,1 @@\n-                    return FXCollections.observableMap(new HashMap<Object, Object>());\n+                    return FXCollections.observableMap(new HashMap<>());\n@@ -366,1 +366,1 @@\n-                    return new HashMap<Object, Object>();\n+                    return new HashMap<>();\n@@ -370,1 +370,1 @@\n-                    return new ArrayList<Object>();\n+                    return new ArrayList<>();\n@@ -372,1 +372,1 @@\n-                    return new HashSet<Object>();\n+                    return new HashSet<>();\n@@ -432,1 +432,1 @@\n-        ObjectBuilderWrapper(Class<?> builderClass) throws NoSuchMethodException, InstantiationException, IllegalAccessException {\n+        ObjectBuilderWrapper(Class<?> builderClass) throws NoSuchMethodException {\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/JavaFXBuilderFactory.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ObservableList<Integer> propertyList = new TrackableObservableList<Integer>() {\n+    ObservableList<Integer> propertyList = new TrackableObservableList<>() {\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/com\/sun\/javafx\/fxml\/builder\/ClassWithCollection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    ObservableList<Integer> propertyList = new TrackableObservableList<Integer>() {\n+    ObservableList<Integer> propertyList = new TrackableObservableList<>() {\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/com\/sun\/javafx\/fxml\/builder\/ClassWithReadOnlyCollection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.IOException;\n@@ -36,1 +35,1 @@\n-    public void testCompareJFXVersions() throws IOException {\n+    public void testCompareJFXVersions() {\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/CompareVersionsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        HashMap<String, Object> namespace = new HashMap<String, Object>();\n+        HashMap<String, Object> namespace = new HashMap<>();\n@@ -196,1 +196,1 @@\n-        HashMap<String, Object> a = new HashMap<String, Object>();\n+        HashMap<String, Object> a = new HashMap<>();\n@@ -199,1 +199,1 @@\n-        HashMap<String, Object> b = new HashMap<String, Object>();\n+        HashMap<String, Object> b = new HashMap<>();\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/FXMLLoader_ExpressionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-    @SuppressWarnings(\"deprecation\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/FXMLLoader_ScriptTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -57,1 +56,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -63,1 +61,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -69,1 +66,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -75,1 +71,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -80,1 +75,0 @@\n-    @SuppressWarnings(\"unchecked\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/ListMapSetEventsTestController.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -51,1 +50,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -57,1 +55,0 @@\n-    @SuppressWarnings(\"unchecked\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/ListMapSetEventsTestController2.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    @SuppressWarnings({\"unchecked\", \"deprecation\"})\n+    @SuppressWarnings(\"unchecked\")\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/RT_18218Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-    private ArrayList<String> styles = new ArrayList<String>();\n-    private ArrayList<String> values = new ArrayList<String>();\n+    private ArrayList<String> styles = new ArrayList<>();\n+    private ArrayList<String> values = new ArrayList<>();\n@@ -142,1 +142,1 @@\n-        this.values = new ArrayList<String>();\n+        this.values = new ArrayList<>();\n","filename":"modules\/javafx.fxml\/src\/test\/java\/test\/javafx\/fxml\/Widget.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}