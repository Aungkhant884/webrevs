{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import javafx.beans.property.BooleanProperty;\n@@ -56,1 +57,0 @@\n-import javafx.beans.property.BooleanProperty;\n@@ -481,2 +481,2 @@\n-                } else if ((sortX && x <= nextDataPoint.getX()) ||\n-                           (sortY && y <= nextDataPoint.getY()))\n+                } else if ((sortX && x < nextDataPoint.getX()) ||\n+                           (sortY && y < nextDataPoint.getY()))\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/AreaChart.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import javafx.scene.shape.LineTo;\n@@ -41,0 +42,2 @@\n+\n+import javafx.scene.shape.PathElement;\n@@ -46,1 +49,1 @@\n-    final XYChart.Series<Number, Number> series1 = new XYChart.Series<Number, Number>();\n+    final XYChart.Series<Number, Number> series1 = new XYChart.Series<>();\n@@ -63,1 +66,1 @@\n-            xAxis = new NumberAxis();\n+            xAxis = new NumberAxis(0, 90, 10);\n@@ -154,0 +157,54 @@\n+\n+    @Test public void testPathInsideXBounds() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(85d, 15d)); \/\/ upper bound is 90\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        final NumberAxis xAxis = (NumberAxis) ac.getXAxis();\n+        final NumberAxis yAxis = (NumberAxis) ac.getYAxis();\n+\n+        LineTo lastPath = findLastLineInPath();\n+        assertEquals(85d, xAxis.getValueForDisplay(lastPath.getX()).doubleValue(), 0.001);\n+        assertEquals(15d, yAxis.getValueForDisplay(lastPath.getY()).doubleValue(), 0.001);\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndHigherY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data(100d, 50d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        final NumberAxis xAxis = (NumberAxis) ac.getXAxis();\n+        final NumberAxis yAxis = (NumberAxis) ac.getYAxis();\n+\n+        LineTo lastPath = findLastLineInPath();\n+        assertEquals(100d, xAxis.getValueForDisplay(lastPath.getX()).doubleValue(), 0.001);\n+        assertEquals(20d, yAxis.getValueForDisplay(lastPath.getY()).doubleValue(), 0.001);\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndLowerY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data(100d, 15d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        final NumberAxis xAxis = (NumberAxis) ac.getXAxis();\n+        final NumberAxis yAxis = (NumberAxis) ac.getYAxis();\n+\n+        LineTo lastPath = findLastLineInPath();\n+        assertEquals(100d, xAxis.getValueForDisplay(lastPath.getX()).doubleValue(), 0.001);\n+        assertEquals(20d, yAxis.getValueForDisplay(lastPath.getY()).doubleValue(), 0.001);\n+    }\n+\n+    private LineTo findLastLineInPath() {\n+        final ObservableList<Node> children = ((Group) ac.getData().get(0).getNode()).getChildren();\n+        Path fillPath = (Path) children.get(0);\n+        ObservableList<PathElement> fillElements = fillPath.getElements();\n+        \/\/ last data path is added at (size - 3) index\n+        final PathElement pathElement = fillElements.get(fillElements.size() - 3);\n+\n+        return (LineTo) pathElement;\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/AreaChartTest.java","additions":59,"deletions":2,"binary":false,"changes":61,"status":"modified"}]}