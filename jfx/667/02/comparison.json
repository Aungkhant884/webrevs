{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import javafx.beans.property.BooleanProperty;\n@@ -56,1 +57,0 @@\n-import javafx.beans.property.BooleanProperty;\n@@ -470,2 +470,2 @@\n-                } else if ((sortX && prevDataPoint.getX() <= x) ||\n-                           (sortY && prevDataPoint.getY() <= y))\n+                } else if ((sortX && prevDataPoint.getX() < x) ||\n+                           (sortY && prevDataPoint.getY() < y))\n@@ -481,2 +481,2 @@\n-                } else if ((sortX && x <= nextDataPoint.getX()) ||\n-                           (sortY && y <= nextDataPoint.getY()))\n+                } else if ((sortX && x < nextDataPoint.getX()) ||\n+                           (sortY && y < nextDataPoint.getY()))\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/chart\/AreaChart.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import javafx.geometry.Point2D;\n@@ -39,0 +40,1 @@\n+import javafx.scene.shape.LineTo;\n@@ -40,0 +42,2 @@\n+\n+import static org.junit.Assert.assertArrayEquals;\n@@ -41,0 +45,2 @@\n+\n+import javafx.scene.shape.PathElement;\n@@ -44,0 +50,3 @@\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n@@ -46,1 +55,1 @@\n-    final XYChart.Series<Number, Number> series1 = new XYChart.Series<Number, Number>();\n+    final XYChart.Series<Number, Number> series1 = new XYChart.Series<>();\n@@ -50,1 +59,1 @@\n-        final NumberAxis yAxis = new NumberAxis();\n+        final NumberAxis yAxis = new NumberAxis(0, 30, 2);\n@@ -63,1 +72,1 @@\n-            xAxis = new NumberAxis();\n+            xAxis = new NumberAxis(0, 90, 10);\n@@ -154,0 +163,198 @@\n+\n+    @Test public void testPathInsideXAndInsideYBounds() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(85d, 15d)); \/\/ upper bound is 90,30\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(series1).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndHigherY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data<>(100d, 50d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(100d, 20d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndLowerY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data<>(100d, 15d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(100d, 20d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideYBoundsWithDuplicateYAndLowerX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(85d, 40d));\n+        series1.getData().add(new XYChart.Data<>(70d, 40d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                \/\/ Sorting policy in AreaChart is defaulted to X_AXIS. See AreaChart#makePaths\n+                new XYChart.Data<>(70d, 40d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(85d, 40d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideYBoundsWithDuplicateYAndHigherX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(70d, 32d)); \/\/ upper bound is 30\n+        series1.getData().add(new XYChart.Data<>(85d, 32d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(70d, 32d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(85d, 32d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateXAndHigherY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 35d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 40d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 35d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateXAndLowerY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 40d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 35d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 40d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateYAndHigherX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 32d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(100d, 32d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 32d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateYAndLowerX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(100d, 40d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 40d));\n+        ac.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 40d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(ac).toArray());\n+    }\n+\n+    private List<Point2D> convertSeriesDataToPoint2D(XYChart.Series<Number, Number> series) {\n+        return series.getData().stream()\n+                .map(data -> new Point2D(data.getXValue().doubleValue(), data.getYValue().doubleValue()))\n+                .collect(Collectors.toList());\n+    }\n+\n+    private List<Point2D> findDataPointsFromPathLine(AreaChart<Number, Number> areaChart) {\n+        final NumberAxis xAxis = (NumberAxis) areaChart.getXAxis();\n+        final NumberAxis yAxis = (NumberAxis) areaChart.getYAxis();\n+\n+        final ObservableList<Node> children = ((Group) areaChart.getData().get(0).getNode()).getChildren();\n+        Path fillPath = (Path) children.get(0);\n+        ObservableList<PathElement> fillElements = fillPath.getElements();\n+\n+        List<Point2D> data = fillElements.stream()\n+                .filter(pathElement -> pathElement instanceof LineTo)\n+                .map(pathElement -> (LineTo) pathElement)\n+                .map(lineTo -> new Point2D(\n+                        xAxis.getValueForDisplay(lineTo.getX()).doubleValue(),\n+                        yAxis.getValueForDisplay(lineTo.getY()).doubleValue())\n+                )\n+                .collect(Collectors.toList());\n+        \/\/ Due to fillPath, one additional LineTo element is added to close the loop\n+        return data.subList(0, data.size() - 1);\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/AreaChartTest.java","additions":210,"deletions":3,"binary":false,"changes":213,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.geometry.Point2D;\n@@ -35,0 +36,1 @@\n+import javafx.scene.shape.LineTo;\n@@ -36,1 +38,1 @@\n-import static org.junit.Assert.assertEquals;\n+import javafx.scene.shape.PathElement;\n@@ -40,0 +42,6 @@\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+\n@@ -46,2 +54,2 @@\n-        final NumberAxis xAxis = new NumberAxis();\n-        final NumberAxis yAxis = new NumberAxis();\n+        final NumberAxis xAxis = new NumberAxis(0, 90, 10);\n+        final NumberAxis yAxis = new NumberAxis(0, 30, 2);;\n@@ -162,0 +170,365 @@\n+\n+    @Test public void testPathInsideXAndInsideYBounds() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(85d, 15d)); \/\/ upper bound is 90, 30\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(series1).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndHigherY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data(100d, 50d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(100d, 20d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndLowerY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data(100d, 15d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(100d, 20d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideYBoundsWithDuplicateYAndHigherX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(80d, 32d)); \/\/ upper bound is 30\n+        series1.getData().add(new XYChart.Data(90d, 32d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(80d, 32d),\n+                new XYChart.Data<>(90d, 32d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideYBoundsWithDuplicateYAndLowerX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(85d, 40d)); \/\/ upper bound is 30\n+        series1.getData().add(new XYChart.Data(90d, 40d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(85d, 40d),\n+                new XYChart.Data<>(90d, 40d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateXAndHigherY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 35d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 40d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 35d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateXAndLowerY() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 40d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 35d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 40d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateYAndHigherX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 32d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(100d, 32d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 32d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateYAndLowerX() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(100d, 40d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 40d));\n+        lineChart.getData().addAll(series1);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(80d, 10d),\n+                new XYChart.Data<>(95d, 40d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndHigherYWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data(100d, 50d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(100d, 50d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(100d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXBoundsWithDuplicateXAndLowerYWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(100d, 20d)); \/\/ upper bound is 90\n+        series1.getData().add(new XYChart.Data(100d, 15d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(100d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(100d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideYBoundsWithDuplicateYAndHigherXWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(80d, 32d)); \/\/ upper bound is 30\n+        series1.getData().add(new XYChart.Data(90d, 32d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(80d, 32d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideYBoundsWithDuplicateYAndLowerXWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data(80d, 40d)); \/\/ upper bound is 30\n+        series1.getData().add(new XYChart.Data(70d, 40d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(80d, 40d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateXAndHigherYWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 35d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 40d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(95d, 35d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateXAndLowerYWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 40d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 35d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(95d, 35d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateYAndHigherXWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(95d, 32d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(100d, 32d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(95d, 32d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    @Test public void testPathOutsideXAndYBoundsWithDuplicateYAndLowerXWithSortYAxis() {\n+        startApp();\n+        series1.getData().add(new XYChart.Data<>(100d, 40d)); \/\/ upper bound is 90,30\n+        series1.getData().add(new XYChart.Data<>(95d, 40d));\n+        lineChart.getData().addAll(series1);\n+        lineChart.setAxisSortingPolicy(LineChart.SortingPolicy.Y_AXIS);\n+        pulse();\n+\n+        XYChart.Series<Number, Number> expectedSeries = new XYChart.Series<>();\n+        expectedSeries.getData().addAll(\n+                new XYChart.Data<>(100d, 40d),\n+                new XYChart.Data<>(25d, 20d),\n+                new XYChart.Data<>(30d, 15d),\n+                new XYChart.Data<>(50d, 15d),\n+                new XYChart.Data<>(10d, 10d),\n+                new XYChart.Data<>(80d, 10d)\n+        );\n+\n+        assertArrayEquals(convertSeriesDataToPoint2D(expectedSeries).toArray(), findDataPointsFromPathLine(lineChart).toArray());\n+    }\n+\n+    private List<Point2D> convertSeriesDataToPoint2D(XYChart.Series<Number, Number> series) {\n+        return series.getData().stream()\n+                .map(data -> new Point2D(data.getXValue().doubleValue(), data.getYValue().doubleValue()))\n+                .collect(Collectors.toList());\n+    }\n+\n+    private List<Point2D> findDataPointsFromPathLine(LineChart<Number, Number> lineChart) {\n+        final NumberAxis xAxis = (NumberAxis) lineChart.getXAxis();\n+        final NumberAxis yAxis = (NumberAxis) lineChart.getYAxis();\n+\n+        Path fillPath = (Path) lineChart.getData().get(0).getNode();\n+        ObservableList<PathElement> fillElements = fillPath.getElements();\n+\n+        List<Point2D> data = fillElements.stream()\n+                .filter(pathElement -> pathElement instanceof LineTo)\n+                .map(pathElement -> (LineTo) pathElement)\n+                .map(lineTo -> new Point2D(\n+                        xAxis.getValueForDisplay(lineTo.getX()).doubleValue(),\n+                        yAxis.getValueForDisplay(lineTo.getY()).doubleValue())\n+                )\n+                .collect(Collectors.toList());\n+        return data.subList(0, data.size());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/chart\/LineChartTest.java","additions":376,"deletions":3,"binary":false,"changes":379,"status":"modified"}]}