{"files":[{"patch":"@@ -80,6 +80,5 @@\n-        switch (units) {\n-        case POINT : return (int)(dim+0.5);\n-        case INCH  : return (int)((dim * 72) + 0.5);\n-        case MM    : return (int)(((dim * 72) \/ 25.4) + 0.5);\n-        }\n-        return dim;\n+        return switch (units) {\n+            case POINT -> dim;\n+            case INCH -> dim * 72;\n+            case MM -> (dim * 72) \/ 25.4;\n+        };\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/Paper.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import static org.junit.Assert.assertEquals;\n@@ -68,6 +69,6 @@\n-     int ptsWid = (int)p.getWidth();\n-     int ptsHgt = (int)p.getHeight();\n-     int expectedPtsWid = (int)(((mmWid * 72) \/ 25.4) + 0.5);\n-     int expectedPtsHgt = (int)(((mmHgt * 72) \/ 25.4) + 0.5);\n-     assertTrue(\"MM width is not as expected\", ptsWid == expectedPtsWid);\n-     assertTrue(\"MM height is not as expected\", ptsHgt == expectedPtsHgt);\n+     double ptsWid = p.getWidth();\n+     double ptsHgt = p.getHeight();\n+     double expectedPtsWid = (mmWid * 72) \/ 25.4;\n+     double expectedPtsHgt = (mmHgt * 72) \/ 25.4;\n+     assertEquals(\"MM width is not as expected\", ptsWid, expectedPtsWid, 0.001);\n+     assertEquals(\"MM height is not as expected\", ptsHgt, expectedPtsHgt, 0.001);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/print\/PaperUnitsTest.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}