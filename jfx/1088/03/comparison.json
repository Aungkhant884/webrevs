{"files":[{"patch":"@@ -28,0 +28,4 @@\n+import javafx.scene.AccessibleAttribute;\n+import javafx.scene.AccessibleAttribute.ToggleState;\n+import javafx.scene.AccessibleRole;\n+\n@@ -347,0 +351,1 @@\n+        setAccessibleRole(AccessibleRole.CHECK_BOX_TREE_ITEM);\n@@ -482,0 +487,15 @@\n+\n+    \/** {@inheritDoc} *\/\n+    @Override public Object queryAccessibleAttribute(AccessibleAttribute attribute, Object... parameters) {\n+        switch (attribute) {\n+            case TOGGLE_STATE:\n+                if (checkBox.isIndeterminate()) {\n+                    return ToggleState.INDETERMINATE;\n+                } else if (checkBox.isSelected()) {\n+                    return ToggleState.CHECKED;\n+                } else {\n+                    return ToggleState.UNCHECKED;\n+                }\n+            default: return super.queryAccessibleAttribute(attribute, parameters);\n+        }\n+    }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/cell\/CheckBoxTreeCell.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -364,1 +364,7 @@\n-        NSAccessibilityRowRole(new AccessibleRole[] {AccessibleRole.LIST_ITEM, AccessibleRole.TABLE_ROW, AccessibleRole.TREE_ITEM, AccessibleRole.TREE_TABLE_ROW},\n+        NSAccessibilityRowRole(new AccessibleRole[] {\n+                AccessibleRole.LIST_ITEM,\n+                AccessibleRole.TABLE_ROW,\n+                AccessibleRole.TREE_ITEM,\n+                AccessibleRole.CHECK_BOX_TREE_ITEM,\n+                AccessibleRole.TREE_TABLE_ROW\n+            },\n@@ -486,1 +492,5 @@\n-        NSAccessibilityOutlineRowSubrole(new AccessibleRole[] { AccessibleRole.TREE_ITEM, AccessibleRole.TREE_TABLE_ROW },\n+        NSAccessibilityOutlineRowSubrole(new AccessibleRole[] {\n+                AccessibleRole.TREE_ITEM,\n+                AccessibleRole.CHECK_BOX_TREE_ITEM,\n+                AccessibleRole.TREE_TABLE_ROW\n+            },\n@@ -751,2 +761,3 @@\n-                if (role == AccessibleRole.TREE_ITEM || role == AccessibleRole.TREE_TABLE_ROW) {\n-                    AccessibleRole containerRole = role == AccessibleRole.TREE_ITEM ? AccessibleRole.TREE_VIEW : AccessibleRole.TREE_TABLE_VIEW;\n+                if (role == AccessibleRole.TREE_ITEM || role == AccessibleRole.CHECK_BOX_TREE_ITEM || role == AccessibleRole.TREE_TABLE_ROW) {\n+                    AccessibleRole containerRole = (role == AccessibleRole.TREE_ITEM || role == AccessibleRole.CHECK_BOX_TREE_ITEM) ?\n+                                                                                AccessibleRole.TREE_VIEW : AccessibleRole.TREE_TABLE_VIEW;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacAccessible.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -302,1 +302,2 @@\n-                if (getAttribute(ROLE) == AccessibleRole.CHECK_BOX) {\n+                Object role = getAttribute(ROLE);\n+                if (role == AccessibleRole.CHECK_BOX || role == AccessibleRole.CHECK_BOX_TREE_ITEM) {\n@@ -309,1 +310,2 @@\n-                if (role == AccessibleRole.CHECK_BOX || role == AccessibleRole.TOGGLE_BUTTON) {\n+                if (role == AccessibleRole.CHECK_BOX || role == AccessibleRole.TOGGLE_BUTTON\n+                        || role == AccessibleRole.CHECK_BOX_TREE_ITEM) {\n@@ -434,0 +436,1 @@\n+                case CHECK_BOX_TREE_ITEM:\n@@ -480,0 +483,1 @@\n+            case CHECK_BOX_TREE_ITEM:\n@@ -533,0 +537,1 @@\n+            case CHECK_BOX_TREE_ITEM:\n@@ -631,0 +636,6 @@\n+            case CHECK_BOX_TREE_ITEM:\n+                impl = patternId == UIA_SelectionItemPatternId ||\n+                       patternId == UIA_ExpandCollapsePatternId ||\n+                       patternId == UIA_ScrollItemPatternId ||\n+                       patternId == UIA_TogglePatternId;\n+                break;\n@@ -916,0 +927,9 @@\n+            case UIA_ToggleToggleStatePropertyId: {\n+                AccessibleRole role = (AccessibleRole) getAttribute(ROLE);\n+                if (role == AccessibleRole.CHECK_BOX_TREE_ITEM) {\n+                    variant = new WinVariant();\n+                    variant.vt = WinVariant.VT_I4;\n+                    variant.lVal = get_ToggleState();\n+                }\n+                break;\n+            }\n@@ -1011,1 +1031,2 @@\n-        boolean treeCell = role == AccessibleRole.TREE_ITEM;\n+        boolean treeCell = (role == AccessibleRole.TREE_ITEM\n+                            || role == AccessibleRole.CHECK_BOX_TREE_ITEM);\n@@ -1372,0 +1393,1 @@\n+                case CHECK_BOX_TREE_ITEM:\n@@ -1565,0 +1587,10 @@\n+        if (getAttribute(ROLE) == AccessibleRole.CHECK_BOX_TREE_ITEM) {\n+            ToggleState toggleState = (ToggleState)getAttribute(TOGGLE_STATE);\n+            if (toggleState == ToggleState.INDETERMINATE) {\n+                return ToggleState_Indeterminate;\n+            } else if (toggleState == ToggleState.CHECKED) {\n+                return ToggleState_On;\n+            } else {\n+                return ToggleState_Off;\n+            }\n+        }\n@@ -1891,0 +1923,1 @@\n+            case CHECK_BOX_TREE_ITEM:\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinAccessible.java","additions":36,"deletions":3,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -340,0 +340,21 @@\n+    \/**\n+     * Returns {@link ToggleState toggle state} of CheckBox of CheckBoxTreeItem.\n+     * <ul>\n+     * <li>Used by: CheckBoxTreeItem<\/li>\n+     * <li>Needs notify: yes <\/li>\n+     * <li>Return Type: {@link ToggleState}\n+     *   <ul>\n+     *    <li>{@link ToggleState#UNCHECKED ToggleState.UNCHECKED}: control is not selected<\/li>\n+     *    <li>{@link ToggleState#CHECKED ToggleState.CHECKED}: control is selected<\/li>\n+     *    <li>{@link ToggleState#INDETERMINATE ToggleState.INDETERMINATE}:\n+     *                                     selection state of control cannot be determined<\/li>\n+     *   <\/ul>\n+     * <\/li>\n+     * <li>Parameters: <\/li>\n+     * <\/ul>\n+     *\n+     * @see ToggleState\n+     * @since 21\n+     *\/\n+    TOGGLE_STATE(ToggleState.class),\n+\n@@ -803,0 +824,22 @@\n+\n+    \/**\n+     * This enum describes the values for {@link AccessibleAttribute#TOGGLE_STATE TOGGLE_STATE} attribute.\n+     *\n+     * @since 21\n+     *\/\n+    public enum ToggleState {\n+        \/**\n+         * Indicates that the toggle control is not selected.\n+         *\/\n+        UNCHECKED,\n+\n+        \/**\n+         * Indicates that the toggle control is selected.\n+         *\/\n+        CHECKED,\n+\n+        \/**\n+         * Indicates that the toggle state of the control cannot be determined.\n+         *\/\n+        INDETERMINATE\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/AccessibleAttribute.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -742,0 +742,27 @@\n+     \/**\n+     * Check Box Tree Item role.\n+     * <p>\n+     * Attributes:\n+     * <ul>\n+     * <li> {@link AccessibleAttribute#TEXT} <\/li>\n+     * <li> {@link AccessibleAttribute#INDEX} <\/li>\n+     * <li> {@link AccessibleAttribute#SELECTED} <\/li>\n+     * <li> {@link AccessibleAttribute#EXPANDED} <\/li>\n+     * <li> {@link AccessibleAttribute#LEAF} <\/li>\n+     * <li> {@link AccessibleAttribute#DISCLOSURE_LEVEL} <\/li>\n+     * <li> {@link AccessibleAttribute#TREE_ITEM_COUNT} <\/li>\n+     * <li> {@link AccessibleAttribute#TREE_ITEM_AT_INDEX} <\/li>\n+     * <li> {@link AccessibleAttribute#TREE_ITEM_PARENT} <\/li>\n+     * <li> {@link AccessibleAttribute#TOGGLE_STATE} <\/li>\n+     * <\/ul>\n+     * Actions:\n+     * <ul>\n+     * <li> {@link AccessibleAction#EXPAND} <\/li>\n+     * <li> {@link AccessibleAction#COLLAPSE} <\/li>\n+     * <li> {@link AccessibleAction#REQUEST_FOCUS} <\/li>\n+     * <\/ul>\n+     *\n+     * @since 21\n+     *\/\n+    CHECK_BOX_TREE_ITEM,\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/AccessibleRole.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"}]}