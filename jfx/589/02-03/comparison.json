{"files":[{"patch":"@@ -46,1 +46,1 @@\n-    * @return a string representation of the object passed in.\n+    * @return a string representation of the object passed in\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/util\/StringConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,6 @@\n-\n+    \/**\n+     * Constructs a {@code PseudoClassImpl} object.\n+     * @param pseudoClassName name of the pseudo-class\n+     * @param index index of this PseudoClass in pseudoClasses list\n+     * @return a {@code PseudoClassImpl} object\n+     *\/\n@@ -41,1 +46,4 @@\n-    \/** @return the pseudo-class state *\/\n+    \/**\n+     * Gets the pseudo class name.\n+     * @return the pseudo class name\n+     *\/\n@@ -47,1 +55,4 @@\n-    \/** @return the pseudo-class state *\/\n+    \/**\n+     * Gets the pseudo class name.\n+     * @return the pseudo class name\n+     *\/\n@@ -52,0 +63,4 @@\n+    \/**\n+     * Returns the index of this {@code PseudoClass} in the styleClasses list.\n+     * @return index\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/PseudoClassImpl.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-     * Set the value of the corresponding property on the given Node.\n+     * Sets the value of the corresponding property on the given Node.\n@@ -163,0 +163,1 @@\n+\n@@ -164,0 +165,1 @@\n+     * Gets the CSS property name.\n@@ -171,0 +173,1 @@\n+\n@@ -172,1 +175,2 @@\n-     * @return The CSS converter that handles conversion from a CSS value to a Java Object\n+     * Gets the CSS converter that handles conversion from a CSS value to a Java Object.\n+     * @return the CSS converter\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssMetaData.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n- * A parser for CSS document string.\n+ * A parser for a CSS document string.\n@@ -4749,1 +4749,1 @@\n-         * @param message message\n+         * @param message the message\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * This class serves as a container of CSS property and its value.\n+ * This class serves as a container of a CSS property and its value.\n@@ -91,1 +91,1 @@\n-     * @return important\n+     * @return the important flag\n@@ -108,1 +108,1 @@\n-     * Indicates whether some other object is \"equal to\" this one.\n+     * Indicates whether some other {@code Object} is \"equal to\" this one.\n@@ -110,1 +110,1 @@\n-     * One declaration is equal to another regardless of the {@code Rule} to which\n+     * One {@code Declaration} is equal to another regardless of the {@code Rule} to which\n@@ -113,2 +113,3 @@\n-     * <\/p>\n-     * @return true if this object is the same as the obj argument; false otherwise.\n+     *\n+     * @param obj an {@code Object} to compare\n+     * @return {@code true} if this object is the same as the {@code obj} argument; {@code false} otherwise.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Declaration.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-     * @return The CSS property value as created by the parser, which may be null\n+     * Gets the CSS property value as created by the parser, which may be null\n@@ -52,0 +52,1 @@\n+     * @return the CSS property value\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/ParsedValue.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-     * <\/p>\n+     *\n@@ -89,1 +89,1 @@\n-     * @return the {@code PseudoClass} instance for a given pseudo class name.\n+     * @return the {@code PseudoClass} instance for a given pseudo class name\n@@ -99,1 +99,1 @@\n-     * @return the name of the {@code PseudoClass}.\n+     * @return the name of the {@code PseudoClass}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/PseudoClass.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-     * The {@code Stylesheet} this {@code Selector} belongs to.\n+     * Gets the {@code Stylesheet} this {@code Rule} belongs to.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Rule.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,3 +101,4 @@\n-     * Same as the matches method expect return true\/false rather than a match.\n-     * @param styleable styleable to match.\n-     * @return {@code true} if this {@code Selector} applies to the given {@code Styleable}.\n+     * Gets whether this {@code Selector} applies to the given {@code Styleable}.\n+     * It is same as the {@link createMatch} method except it returns true\/false rather than a {@code Match}.\n+     * @param styleable the {@code Styleable} to match\n+     * @return {@code true} if this {@code Selector} applies to the given {@code Styleable}\n@@ -108,2 +109,4 @@\n-     * Same as applies, but will return pseudoclass state that it finds along the way.\n-     * @param styleable styleable to match.\n+     * Gets whether this {@code Selector} applies to the given {@code Styleable}.\n+     * It is same as {@link applies} method except it also returns\n+     * {@code PseudoClass} state that it finds along the way.\n+     * @param styleable the {@code Styleable} to match\n@@ -113,1 +116,1 @@\n-     * applies to the given {@code Styleable}.\n+     * applies to the given {@code Styleable}\n@@ -133,1 +136,1 @@\n-     * @param stringStore unsused\n+     * @param stringStore unused\n@@ -163,2 +166,2 @@\n-     * @param cssSelector css selector string\n-     * @return a Selector\n+     * @param cssSelector CSS selector string\n+     * @return a {@code Selector}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Selector.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -73,2 +73,2 @@\n-     * Gets Immutable List of style-classes of the selector.\n-     * @return Immutable List&lt;String&gt; of style-classes of the selector\n+     * Gets an immutable list of style-classes of the {@code Selector}.\n+     * @return an immutable list of style-classes of the {@code Selector}\n@@ -89,2 +89,2 @@\n-     * Gets the {@code Set} of {@code StyleClass} of the selector.\n-     * @return set of style class\n+     * Gets the {@code Set} of {@code StyleClass}es of the {@code Selector}.\n+     * @return the {@code Set} of {@code StyleClass}es\n@@ -96,1 +96,3 @@\n-    \/** styleClasses converted to a set of bit masks *\/\n+    \/**\n+     * styleClasses converted to a set of bit masks\n+     *\/\n@@ -117,1 +119,2 @@\n-     * @return Immutable List&lt;String&gt; of pseudo-classes of the selector\n+     * Gets an immutable list of {@code String}s of pseudo classes of the {@code Selector}\n+     * @return an immutable list of {@code String}s\n@@ -151,2 +154,3 @@\n-    \/** Gets {@code NodeOrientation} of this Selector.\n-     * @return nodeOrientation\n+    \/**\n+     * Gets the {@code NodeOrientation} of this {@code Selector}.\n+     * @return the {@code NodeOrientation}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -534,1 +534,1 @@\n-     * The StringStore class\n+     * The StringStore class.\n@@ -567,1 +567,1 @@\n-         * Writes the StringStore strings to a given {@code DataOutputStream}.\n+         * Writes the {@code StringStore} strings to a given {@code DataOutputStream}.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * Converter to convert representation of an {@code Effect} to an {@code Effect}.\n+ * Converter to convert a string representation of an {@code Effect} to an {@code Effect}.\n@@ -82,1 +82,1 @@\n-     * Converter to convert DropShadow {@code Effect}.\n+     * Converter to convert a {@code DropShadow} effect.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EffectConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * Converter to convert a String representation of an {@code Enum} to an {@code Enum}.\n+ * Converter to convert a string representation of an {@code Enum} to an {@code Enum}.\n@@ -126,1 +126,0 @@\n-    \/\/ package for unit testing\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EnumConverter.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-     * @return the {@code StringConverter} instance.\n+     * @return the {@code StringConverter} instance\n@@ -72,1 +72,1 @@\n-     * Converter to convert a sequence of {@code String}s to a String[].\n+     * Converter to convert a sequence of {@code String}s to an array of {@code String}s.\n@@ -79,1 +79,1 @@\n-         * @return the {@code SequenceConverter} instance.\n+         * @return the {@code SequenceConverter} instance\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/StringConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-     * Converter to convert a sequence of URLs to a String[].\n+     * Converter to convert a sequence of URLs to an array of {@code String}s.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/URLConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}