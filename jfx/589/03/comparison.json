{"files":[{"patch":"@@ -46,1 +46,1 @@\n-    * @return a string representation of the object passed in.\n+    * @return a string representation of the object passed in\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/util\/StringConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,6 @@\n-\n+    \/**\n+     * Constructs a {@code PseudoClassImpl} object.\n+     * @param pseudoClassName name of the pseudo-class\n+     * @param index index of this PseudoClass in pseudoClasses list\n+     * @return a {@code PseudoClassImpl} object\n+     *\/\n@@ -41,1 +46,4 @@\n-    \/** @return the pseudo-class state *\/\n+    \/**\n+     * Gets the pseudo class name.\n+     * @return the pseudo class name\n+     *\/\n@@ -47,1 +55,4 @@\n-    \/** @return the pseudo-class state *\/\n+    \/**\n+     * Gets the pseudo class name.\n+     * @return the pseudo class name\n+     *\/\n@@ -52,0 +63,4 @@\n+    \/**\n+     * Returns the index of this {@code PseudoClass} in the styleClasses list.\n+     * @return index\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/PseudoClassImpl.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-     * Set the value of the corresponding property on the given Node.\n+     * Sets the value of the corresponding property on the given Node.\n@@ -163,0 +163,1 @@\n+\n@@ -164,0 +165,1 @@\n+     * Gets the CSS property name.\n@@ -171,0 +173,1 @@\n+\n@@ -172,1 +175,2 @@\n-     * @return The CSS converter that handles conversion from a CSS value to a Java Object\n+     * Gets the CSS converter that handles conversion from a CSS value to a Java Object.\n+     * @return the CSS converter\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssMetaData.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -110,0 +110,1 @@\n+ * A parser for a CSS document string.\n@@ -114,0 +115,3 @@\n+    \/**\n+     * Constructs a {@code CssParser}.\n+     *\/\n@@ -183,1 +187,1 @@\n-     * Creates a stylesheet from a CSS document string.\n+     * Creates a {@code Stylesheet} from a CSS document string.\n@@ -186,1 +190,1 @@\n-     * @return the Stylesheet\n+     * @return the {@code Stylesheet}\n@@ -202,2 +206,2 @@\n-     * Creates a stylesheet from a CSS document string using docbase as the base\n-     * URL for resolving references within stylesheet.\n+     * Creates a {@code Stylesheet} from a CSS document string using docbase as the base\n+     * URL for resolving references within {@code Stylesheet}.\n@@ -259,1 +263,2 @@\n-    \/** Parse an in-line style from a Node.\n+    \/**\n+     * Parse an in-line style from a {@code Node}.\n@@ -4718,0 +4723,4 @@\n+    \/**\n+     * List of errors that may have occurred during CSS processing.\n+     * @return an {@code ObservableList} of {@code ParseError}\n+     *\/\n@@ -4725,2 +4734,2 @@\n-     * Encapsulate information about the source and nature of errors encountered\n-     * while parsing CSS or applying styles to Nodes.\n+     * A class that encapsulates information about the source and nature\n+     *  of errors encountered while parsing CSS or applying styles to Nodes.\n@@ -4730,1 +4739,4 @@\n-        \/** @return The error message from the CSS code. *\/\n+        \/**\n+         * Returns the error message.\n+         * @return the error message\n+         *\/\n@@ -4735,0 +4747,4 @@\n+        \/**\n+         * Constructs a {@code ParseError} object with the message.\n+         * @param message the message\n+         *\/\n@@ -4818,0 +4834,6 @@\n+            \/**\n+             * Constructs a {@code PropertySetError} object.\n+             * @param styleableProperty CSS meta data\n+             * @param styleable styleable node\n+             * @param message parse error message\n+             *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":30,"deletions":8,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ * This class serves as a container of a CSS property and its value.\n@@ -45,0 +46,6 @@\n+    \/**\n+     * Constructs a {@code Declaration} object.\n+     * @param propertyName name of the CSS property\n+     * @param parsedValue value of the CSS property\n+     * @param important importance of the Declaration\n+     *\/\n@@ -58,1 +65,4 @@\n-    \/** @return ParsedValue contains the parsed declaration. *\/\n+    \/**\n+     * Gets the parsed value.\n+     * @return the parsed value\n+     *\/\n@@ -63,1 +73,4 @@\n-    \/** @return The CSS property name *\/\n+    \/**\n+     * Gets the CSS property name.\n+     * @return the CSS property\n+     *\/\n@@ -68,1 +81,4 @@\n-    \/** @return The Rule to which this Declaration belongs. *\/\n+    \/**\n+     * Gets the {@code Rule} to which this {@code Declaration} belongs.\n+     * @return the {@code Rule}\n+     *\/\n@@ -73,0 +89,4 @@\n+    \/**\n+     * Gets the importance of this {@code Declaration}.\n+     * @return the important flag\n+     *\/\n@@ -77,1 +97,3 @@\n-    \/** Helper *\/\n+    \/**\n+     * Gets the {@code StyleOrigin} of this {@code Declaration}.\n+     *\/\n@@ -86,2 +108,4 @@\n-     * One declaration is the equal to another regardless of the Rule to which\n-     * the Declaration belongs. Only the property, value and importance are\n+     * Indicates whether some other {@code Object} is \"equal to\" this one.\n+     * <p>\n+     * One {@code Declaration} is equal to another regardless of the {@code Rule} to which\n+     * the {@code Declaration} belongs. Only the property, value and importance are\n@@ -89,0 +113,3 @@\n+     *\n+     * @param obj an {@code Object} to compare\n+     * @return {@code true} if this object is the same as the {@code obj} argument; {@code false} otherwise.\n@@ -116,0 +143,3 @@\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n@@ -124,0 +154,3 @@\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Declaration.java","additions":39,"deletions":6,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -68,0 +68,4 @@\n+    \/**\n+     * Gets the {@code Selector}.\n+     * @return the {@code Selector}\n+     *\/\n@@ -72,0 +76,4 @@\n+    \/**\n+     * Gets the pseudo class state.\n+     * @return the pseudo class state\n+     *\/\n@@ -76,0 +84,4 @@\n+    \/**\n+     * Gets the specificity.\n+     * @return the specificity.\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Match.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-     * @return The CSS property value as created by the parser, which may be null\n+     * Gets the CSS property value as created by the parser, which may be null\n@@ -52,0 +52,1 @@\n+     * @return the CSS property value\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/ParsedValue.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -84,3 +84,7 @@\n-     * There is only one PseudoClass instance for a given pseudoClass.\n-     * @param pseudoClass the pseudo-class\n-     * @return The PseudoClass for the given pseudoClass. Will not return null.\n+     * Gets the {@code PseudoClass} instance for a given pseudo class name.\n+     * <p>\n+     * Note: There is only one {@code PseudoClass} instance for a given pseudo class name.\n+     *\n+     * @param pseudoClass the name of the pseudo class\n+     * @return the {@code PseudoClass} instance for a given pseudo class name\n+     * It will not return null.\n@@ -90,1 +94,0 @@\n-\n@@ -92,1 +95,0 @@\n-\n@@ -95,1 +97,4 @@\n-    \/** @return the pseudo-class state *\/\n+    \/**\n+     * Gets the name of the {@code PseudoClass}.\n+     * @return the name of the {@code PseudoClass}\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/PseudoClass.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-\/*\n- * A selector is a collection of selectors and declarations.\n+\/**\n+ * A Rule is a collection of CSS {@code Selector}s and {@code Declaration}s.\n@@ -138,1 +138,0 @@\n-    \/** The stylesheet this selector belongs to *\/\n@@ -140,0 +139,5 @@\n+\n+    \/**\n+     * Gets the {@code Stylesheet} this {@code Rule} belongs to.\n+     * @return the stylesheet\n+     *\/\n@@ -159,0 +163,4 @@\n+    \/**\n+     * Get the {@code StyleOrigin} of this {@code Stylesheet}.\n+     * @return the origin of the stylesheet\n+     *\/\n@@ -214,2 +222,3 @@\n-    \/** Converts this object to a string.\n-     * @return the converted string\n+    \/**\n+     * Converts this object to a {@code String}.\n+     * @return the converted {@code String}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Rule.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * Used by CSSRule to determine whether or not the selector applies to a\n+ * Used by {@code CSSRule} to determine whether or not the {@code Selector} applies to a\n@@ -61,0 +61,4 @@\n+    \/**\n+     * Sets the {@code Rule} of this Selector.\n+     * @param rule the {@code Rule} of this Selector\n+     *\/\n@@ -64,0 +68,5 @@\n+\n+    \/**\n+     * Gets the {@code Rule} of this Selector.\n+     * @return rule\n+     *\/\n@@ -69,0 +78,4 @@\n+    \/**\n+     * Sets the ordinal of this Selector.\n+     * @param ordinal the ordinal of this Selector\n+     *\/\n@@ -72,0 +85,5 @@\n+\n+    \/**\n+     * Gets the ordinal of this Selector.\n+     * @return the ordinal of this Selector\n+     *\/\n@@ -76,0 +94,4 @@\n+    \/**\n+     * Creates a {@code Match}.\n+     * @return match\n+     *\/\n@@ -78,1 +100,6 @@\n-    \/\/ same as the matches method expect return true\/false rather than a match\n+    \/**\n+     * Gets whether this {@code Selector} applies to the given {@code Styleable}.\n+     * It is same as the {@link createMatch} method except it returns true\/false rather than a {@code Match}.\n+     * @param styleable the {@code Styleable} to match\n+     * @return {@code true} if this {@code Selector} applies to the given {@code Styleable}\n+     *\/\n@@ -81,2 +108,11 @@\n-    \/\/ same as applies, but will return pseudoclass state that it finds along the way\n-    public abstract boolean applies(Styleable styleable, Set<PseudoClass>[] triggerStates, int bit);\n+    \/**\n+     * Gets whether this {@code Selector} applies to the given {@code Styleable}.\n+     * It is same as {@link applies} method except it also returns\n+     * {@code PseudoClass} state that it finds along the way.\n+     * @param styleable the {@code Styleable} to match\n+     * @param triggerStates a set of {@code PseudoClass} states\n+     * @param depth depth of the {@code Node} heirarchy to look for\n+     * @return {@code true} if this {@code Selector} and a set of {@code PseudoClass}\n+     * applies to the given {@code Styleable}\n+     *\/\n+    public abstract boolean applies(Styleable styleable, Set<PseudoClass>[] triggerStates, int depth);\n@@ -85,1 +121,1 @@\n-     * Determines whether the current state of the node and its parents\n+     * Determines whether the current state of the {@code Node} and its parents\n@@ -97,0 +133,6 @@\n+    \/**\n+     * Writes {@code Selector} data in binary form to given {@code DataOutputStream}.\n+     * @param os {@code DataOutputStream} to write {@code Selector} data to\n+     * @param stringStore unused\n+     * @throws IOException if writing to {@code DataOutputStream} fails\n+     *\/\n@@ -106,0 +148,7 @@\n+    \/**\n+     * Reads binary {@code Selector} data from a given {@code DataInputStream}.\n+     * @param bssVersion bss version identifier\n+     * @param is {@code DataInputStream} to read {@code Selector} data from\n+     * @param strings string array containing selector details\n+     * @throws IOException if reading from {@code DataInputStream} fails\n+     *\/\n@@ -115,0 +164,5 @@\n+    \/**\n+     * Creates a {@code Selector} object.\n+     * @param cssSelector CSS selector string\n+     * @return a {@code Selector}\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Selector.java","additions":59,"deletions":5,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+\n@@ -64,1 +65,2 @@\n-     * @return The name of the java class to which this selector is applied, or *.\n+     * Gets the name of the java class to which this selector is applied, or *.\n+     * @return the name of the java class\n@@ -71,1 +73,2 @@\n-     * @return Immutable List&lt;String&gt; of style-classes of the selector\n+     * Gets an immutable list of style-classes of the {@code Selector}.\n+     * @return an immutable list of style-classes of the {@code Selector}\n@@ -85,0 +88,4 @@\n+    \/**\n+     * Gets the {@code Set} of {@code StyleClass}es of the {@code Selector}.\n+     * @return the {@code Set} of {@code StyleClass}es\n+     *\/\n@@ -89,1 +96,3 @@\n-    \/** styleClasses converted to a set of bit masks *\/\n+    \/**\n+     * styleClasses converted to a set of bit masks\n+     *\/\n@@ -93,2 +102,4 @@\n-    \/*\n-     * @return The value of the selector id, which may be an empty string.\n+\n+    \/**\n+     * Gets the value of the selector id.\n+     * @return the value of the selector id, which may be an empty string\n@@ -108,1 +119,2 @@\n-     * @return Immutable List&lt;String&gt; of pseudo-classes of the selector\n+     * Gets an immutable list of {@code String}s of pseudo classes of the {@code Selector}\n+     * @return an immutable list of {@code String}s\n@@ -142,0 +154,4 @@\n+    \/**\n+     * Gets the {@code NodeOrientation} of this {@code Selector}.\n+     * @return the {@code NodeOrientation}\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java","additions":22,"deletions":6,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -40,0 +40,6 @@\n+\n+    \/**\n+     * Constructs a {@code Size} object.\n+     * @param value value of the size\n+     * @param units unit of the size\n+     *\/\n@@ -46,1 +52,1 @@\n-     * Return the value\n+     * Returns the value.\n@@ -54,1 +60,1 @@\n-     * Return the units\n+     * Return the units.\n@@ -62,1 +68,1 @@\n-     * Return whether or not this Size is an absolute value or a relative value.\n+     * Returns whether or not this {@code Size} is an absolute value or a relative value.\n@@ -69,1 +75,3 @@\n-    \/** Convert this size into Points units, a Point is 1\/72 of a inch *\/\n+    \/**\n+     * Converts this size into Points units, a Point is 1\/72 of a inch\n+     *\/\n@@ -75,1 +83,1 @@\n-      * Convert this size into points\n+      * Converts this size into points.\n@@ -85,1 +93,1 @@\n-      * Convert this size into pixels\n+      * Converts this size into pixels.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Size.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+    \/**\n+     * Represents a size as a percentage.\n+     *\/\n@@ -53,0 +56,4 @@\n+\n+    \/**\n+     * Represents a size in inches.\n+     *\/\n@@ -69,0 +76,4 @@\n+\n+    \/**\n+     * Represents a size in centimeters.\n+     *\/\n@@ -85,0 +96,4 @@\n+\n+    \/**\n+     * Represents a size in millimeters.\n+     *\/\n@@ -101,0 +116,5 @@\n+\n+    \/**\n+     * Represents a size in EM unit.\n+     * Note: It is a unit relative to the font-size of the element.\n+     *\/\n@@ -117,0 +137,5 @@\n+\n+    \/**\n+     * Represents a size in EX unit.\n+     * Note: In the absence of font metrics, one {@code EX} is taken to be half an {@code EM} unit.\n+     *\/\n@@ -135,0 +160,4 @@\n+\n+    \/**\n+     * Represents a size in points.\n+     *\/\n@@ -150,0 +179,4 @@\n+\n+    \/**\n+     * Represents a size in picas.\n+     *\/\n@@ -165,0 +198,4 @@\n+\n+    \/**\n+     * Represents a size in pixels.\n+     *\/\n@@ -181,0 +218,3 @@\n+    \/**\n+     * Represents an angle in degrees.\n+     *\/\n@@ -197,0 +237,4 @@\n+    \/**\n+     * Represents an angle in gradians.\n+     * Note: 400 Gradians = 360 Degrees.\n+     *\/\n@@ -216,0 +260,3 @@\n+    \/**\n+     * Represents an angle in radians.\n+     *\/\n@@ -235,0 +282,4 @@\n+    \/**\n+     * Represents an angle in turns.\n+     * Note: 1 Turn = 360 Degrees.\n+     *\/\n@@ -253,1 +304,3 @@\n-\n+    \/**\n+     * Represents time in seconds.\n+     *\/\n@@ -271,0 +324,3 @@\n+    \/**\n+     * Represents time in milliseconds.\n+     *\/\n@@ -288,0 +344,7 @@\n+    \/**\n+     * Calculates points for a particular {@code SizeUnits}.\n+     * @param value value\n+     * @param multiplier multiplier\n+     * @param font font\n+     * @return points for a particular {@code SizeUnits}\n+     *\/\n@@ -289,0 +352,8 @@\n+\n+    \/**\n+     * Calculates pixels for a particular {@code SizeUnits}.\n+     * @param value value\n+     * @param multiplier multiplier\n+     * @param font font\n+     * @return pixels for a particular {@code SizeUnits}\n+     *\/\n@@ -296,0 +367,5 @@\n+\n+    \/**\n+     * Gets wehther this {@code SizeUnits} value is absolute.\n+     * @return whether value is absoulute\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SizeUnits.java","additions":77,"deletions":1,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -55,0 +55,5 @@\n+    \/**\n+     * Constructs a {@code Style} object.\n+     * @param selector selector for this {@code Style}\n+     * @param declaration declaration for this {@code Style}\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Style.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *\n+ * A class that contains {@code StyleClass} information.\n@@ -33,0 +33,5 @@\n+    \/**\n+     * Constructs a {@code StyleClass} object.\n+     * @param styleClassName name of the style class\n+     * @param index style class index\n+     *\/\n@@ -38,1 +43,4 @@\n-    \/** @return the style-class *\/\n+    \/**\n+     * Returns the name of {@code StyleClass}.\n+     * @return the name of {@code StyleClass}\n+     *\/\n@@ -43,1 +51,4 @@\n-    \/** @return the style-class *\/\n+    \/**\n+     * Returns the name of {@code StyleClass}.\n+     * @return the name of {@code StyleClass}\n+     *\/\n@@ -48,0 +59,4 @@\n+    \/**\n+     * Returns the index of this {@code StyleClass} in the styleClasses list.\n+     * @return index\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleClass.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -534,1 +534,1 @@\n-     * The StringStore class\n+     * The StringStore class.\n@@ -539,0 +539,4 @@\n+\n+        \/**\n+         * List of strings of this {@code StringStore}.\n+         *\/\n@@ -547,0 +551,5 @@\n+        \/**\n+         * Adds given string to the {@code StringStore}.\n+         * @param s string to be added to the {@code StringStore}\n+         * @return index at which the given string gets added\n+         *\/\n@@ -557,0 +566,5 @@\n+        \/**\n+         * Writes the {@code StringStore} strings to a given {@code DataOutputStream}.\n+         * @param os {@code DataOutputStream} where the StringStore strings need to be written\n+         * @throws IOException if writing to {@code DataOutputStream} fails\n+         *\/\n@@ -573,0 +587,6 @@\n+        \/**\n+         * Read the StringStore strings from a given {@code DataInputStream}.\n+         * @param is {@code DataInputStream} from where StringStore strings need to be read from\n+         * @return a {@code String} array constructed by reading {@code DataInputStream}\n+         * @throws IOException if reading from {@code DataInputStream} fails\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleConverter.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * Converter to convert a {@code String} to a {@code Boolean}.\n@@ -42,0 +43,4 @@\n+    \/**\n+     * Get the {@code BooleanConverter} instance.\n+     * @return the {@code BooleanConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/BooleanConverter.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * Converter to convert a {@code String} to a {@code Color}.\n@@ -43,0 +44,4 @@\n+    \/**\n+     * Gets the {@code ColorConverter} instance.\n+     * @return the {@code ColorConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/ColorConverter.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * Converter to convert a {@code String} to a {@code Cursor}.\n@@ -43,0 +44,4 @@\n+    \/**\n+     * Gets the {@code CursorConverter} instance.\n+     * @return the {@code CursorConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/CursorConverter.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,3 @@\n- * Derive a Color from a Color and a brightness value\n+ * Converter to convert a combination of color and brightness values to a derived {@code Color}.\n+ *\n+ * @since 9\n@@ -44,0 +46,4 @@\n+    \/**\n+     * Gets the {@code DeriveColorConverter} instance.\n+     * @return the {@code DeriveColorConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/DeriveColorConverter.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * A type that combines two Size values.  The primary purpose of\n+ * Converter to combine two {@code Size} values.  The primary purpose of\n@@ -37,0 +37,2 @@\n+ *\n+ * @since 9\n@@ -45,0 +47,4 @@\n+    \/**\n+     * Gets the {@code DeriveSizeConverter} instance.\n+     * @return the {@code DeriveSizeConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/DeriveSizeConverter.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * Convert a Size to Duration\n+ * Converter to Convert a {@code Size} to {@code Duration}.\n@@ -46,0 +46,4 @@\n+    \/**\n+     * Gets the {@code DurationConverter} instance.\n+     * @return the {@code DurationConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/DurationConverter.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+ * Converter to convert a string representation of an {@code Effect} to an {@code Effect}.\n@@ -55,0 +56,4 @@\n+    \/**\n+     * Gets the {@code EffectConverter} instance.\n+     * @return the {@code EffectConverter} instance\n+     *\/\n@@ -64,0 +69,3 @@\n+    \/**\n+     * Constructs an EffectConverter.\n+     *\/\n@@ -73,0 +81,4 @@\n+    \/**\n+     * Converter to convert a {@code DropShadow} effect.\n+     * @since 9\n+     *\/\n@@ -75,0 +87,4 @@\n+        \/**\n+         * Gets the {@code DropShadowConverter} instance.\n+         * @return the {@code DropShadowConverter} instance\n+         *\/\n@@ -144,0 +160,4 @@\n+    \/**\n+     * Converter to convert InnerShadow {@code Effect}.\n+     * @since 9\n+     *\/\n@@ -146,0 +166,4 @@\n+        \/**\n+         * Gets the {@code InnerShadowConverter} instance.\n+         * @return the {@code InnerShadowConverter} instance\n+         *\/\n@@ -217,0 +241,3 @@\n+    \/**\n+     * Clears the InnerShadowConverter cache.\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EffectConverter.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+ * Converter to convert a string representation of an {@code Enum} to an {@code Enum}.\n@@ -50,0 +51,4 @@\n+    \/**\n+     * Creates an {@code EnumConvertor} object.\n+     * @param enumClass enum class\n+     *\/\n@@ -82,0 +87,7 @@\n+    \/**\n+     * Reads binary {@code StyleConverter} data from a given {@code DataInputStream}.\n+     * @param is {@code DataInputStream} to read {@code StyleConverter} data from\n+     * @param strings string array containing StyleConverter details\n+     * @return a {@code StyleConverter} from read binary data\n+     * @throws IOException if reading from {@code DataInputStream} fails\n+     *\/\n@@ -109,1 +121,5 @@\n-    \/\/ package for unit testing\n+    \/**\n+     * Gets an {@code EnumConverter} instance for a given enum name.\n+     * @param ename enum name\n+     * @return an {@code EnumConverter} instance for a given enum name.\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EnumConverter.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+ * Converter to convert a parsed representation of a {@code Font} to a {@code Font}.\n@@ -52,0 +53,4 @@\n+    \/**\n+     * Gets the {@code FontConverter} instance.\n+     * @return the {@code FontConverter} instance\n+     *\/\n@@ -113,0 +118,5 @@\n+    \/**\n+     * Converter to convert a {@code String} value to a {@code FontPosture} object.\n+     *\n+     * @since 9\n+     *\/\n@@ -120,0 +130,4 @@\n+        \/**\n+         * Gets the {@code FontStyleConverter} instance.\n+         * @return the {@code FontStyleConverter} instance\n+         *\/\n@@ -159,0 +173,5 @@\n+    \/**\n+     * Converter to convert a {@code String} value to a {@code FontWeight} object.\n+     *\n+     * @since 9\n+     *\/\n@@ -166,0 +185,4 @@\n+        \/**\n+         * Gets the {@code FontWeightConverter} instance.\n+         * @return the {@code FontWeightConverter} instance\n+         *\/\n@@ -206,0 +229,5 @@\n+    \/**\n+     * Converter to convert a parsed font size value to a {@code Number} object.\n+     *\n+     * @since 9\n+     *\/\n@@ -213,0 +241,4 @@\n+        \/**\n+         * Gets the {@code FontSizeConverter} instance.\n+         * @return the {@code FontSizeConverter} instance\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/FontConverter.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * Converts a parsed value array of 1 to 4 size components to an Insets.\n+ * Converter to convert a parsed value array of 1 to 4 size components to an {@code Insets}.\n@@ -52,0 +52,4 @@\n+    \/**\n+     * Gets the {@code InsetsConverter} instance.\n+     * @return the {@code InsetsConverter} instance\n+     *\/\n@@ -76,2 +80,3 @@\n-     * Converts an array of parsed values, each of which is an array\n-     * of 1 to 4 size components, to an array of Insets objects.\n+     * Converter to convert an array of parsed values, each of which is an array\n+     * of 1 to 4 size components, to an array of {@code Insets} objects.\n+     * @since 9\n@@ -81,0 +86,4 @@\n+        \/**\n+         * Gets the {@code SequenceConverter} instance.\n+         * @return the {@code SequenceConverter} instance\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/InsetsConverter.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -34,0 +34,4 @@\n+\/**\n+ * Converter to convert a parsed representation of color ladder values to a {@code Color}.\n+ * @since 9\n+ *\/\n@@ -41,0 +45,4 @@\n+    \/**\n+     * Gets the {@code LadderConverter} instance.\n+     * @return the {@code LadderConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/LadderConverter.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+ * Converter to convert a parsed representation of a {@code Paint} to a {@code Paint}.\n@@ -58,0 +59,4 @@\n+    \/**\n+     * Gets the {@code PaintConverter} instance.\n+     * @return the {@code PaintConverter} instance\n+     *\/\n@@ -81,1 +86,2 @@\n-     * Converts an array of parsed values to an array of Paint objects.\n+     * Converter to convert a sequence of parsed values to an array of {@code Paint} objects.\n+     * @since 9\n@@ -85,0 +91,4 @@\n+        \/**\n+         * Gets the {@code SequenceConverter} instance.\n+         * @return the {@code SequenceConverter} instance\n+         *\/\n@@ -109,0 +119,4 @@\n+    \/**\n+     * Converter to convert linear gradient parsed values to a {@code Paint} object.\n+     * @since 9\n+     *\/\n@@ -111,0 +125,4 @@\n+        \/**\n+         * Gets the {@code LinearGradientConverter} instance.\n+         * @return the {@code LinearGradientConverter} instance\n+         *\/\n@@ -149,0 +167,4 @@\n+    \/**\n+     * Converter to convert image pattern parsed values to a {@code Paint} object.\n+     * @since 9\n+     *\/\n@@ -151,0 +173,4 @@\n+        \/**\n+         * Gets the {@code ImagePatternConverter} instance.\n+         * @return the {@code ImagePatternConverter} instance\n+         *\/\n@@ -195,0 +221,4 @@\n+    \/**\n+     * Converter to convert repeating image pattern parsed values to a {@code Paint} object.\n+     * @since 9\n+     *\/\n@@ -197,0 +227,4 @@\n+        \/**\n+         * Gets the {@code RepeatingImagePatternConverter} instance.\n+         * @return the {@code RepeatingImagePatternConverter} instance\n+         *\/\n@@ -229,0 +263,4 @@\n+    \/**\n+     * Converter to convert radial gradient parsed values to a {@code Paint} object.\n+     * @since 9\n+     *\/\n@@ -231,0 +269,4 @@\n+        \/**\n+         * Gets the {@code RadialGradientConverter} instance.\n+         * @return the {@code RadialGradientConverter} instance\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/PaintConverter.java","additions":43,"deletions":1,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * Converts an SVG shape string into a Shape object.\n+ * Converter to convert a SVG shape string into a {@code Shape} object.\n@@ -44,0 +44,4 @@\n+    \/**\n+     * Gets the {@code ShapeConverter} instance.\n+     * @return the {@code ShapeConverter} instance\n+     *\/\n@@ -66,0 +70,3 @@\n+    \/**\n+     * Clears the {@code ShapeConverter} cache.\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/ShapeConverter.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * Convert a Size to Number\n+ * Converter to convert a {@code Size} to a {@code Number}.\n@@ -46,0 +46,4 @@\n+    \/**\n+     * Gets the {@code SizeConverter} instance.\n+     * @return the {@code SizeConverter} instance\n+     *\/\n@@ -65,2 +69,3 @@\n-    \/*\n-     * Convert [<size>]+ to an array of Number[].\n+    \/**\n+     * Converter to convert a sequence of sizes to an array of {@code Number}.\n+     * @since 9\n@@ -70,0 +75,4 @@\n+        \/**\n+         * Gets the {@code SequenceConverter} instance.\n+         * @return the {@code SequenceConverter} instance\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/SizeConverter.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -36,1 +36,3 @@\n- * convert a Stop from a Size and a Color\n+ * Converter to convert a {@code Stop} from a {@code Size} and a {@code Color}.\n+ *\n+ * @since 9\n@@ -45,0 +47,4 @@\n+    \/**\n+     * Gets the {@code StopConverter} instance.\n+     * @return the {@code StopConverter} instance\n+     *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/StopConverter.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,2 +34,1 @@\n- * String type converts embedded unicode characters\n- *\n+ * Converter for quoted strings which may have embedded unicode characters.\n@@ -46,0 +45,4 @@\n+    \/**\n+     * Get the {@code StringConverter} instance.\n+     * @return the {@code StringConverter} instance\n+     *\/\n@@ -68,0 +71,5 @@\n+    \/**\n+     * Converter to convert a sequence of {@code String}s to an array of {@code String}s.\n+     *\n+     * @since 9\n+     *\/\n@@ -69,2 +77,4 @@\n-\n-\n+        \/**\n+         * Get the {@code SequenceConverter} instance.\n+         * @return the {@code SequenceConverter} instance\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/StringConverter.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * Converts a parsed value representing  URL to a URL string that is\n+ * Converter to convert a parsed value representing URL to a URL string that is\n@@ -60,0 +60,4 @@\n+    \/**\n+     * Gets the {@code URLConverter} instance.\n+     * @return the {@code URLConverter} instance\n+     *\/\n@@ -249,0 +253,4 @@\n+    \/**\n+     * Converter to convert a sequence of URLs to an array of {@code String}s.\n+     * @since 9\n+     *\/\n@@ -251,0 +259,4 @@\n+        \/**\n+         * Gets the {@code SequenceConverter} instance.\n+         * @return the {@code SequenceConverter} instance\n+         *\/\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/URLConverter.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}