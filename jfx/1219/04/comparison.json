{"files":[{"patch":"@@ -92,0 +92,10 @@\n+    \/**\n+     * Unregisters a previously registered {@link DisposerRecord}, removing it\n+     * from the list of records to dispose off when the\n+     * original target goes out of scope\n+     * @param ref Weak reference of the object to be removed\n+     *\/\n+    public static void removeRecord(WeakReference ref) {\n+        disposerInstance.records.remove(ref);\n+    }\n+\n","filename":"modules\/javafx.swing\/src\/main\/java\/com\/sun\/javafx\/embed\/swing\/Disposer.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+import com.sun.javafx.embed.swing.DisposerRecord;\n@@ -254,0 +255,2 @@\n+    private DisposerRecord rec;\n+    private WeakReference disposerRecRef;\n@@ -364,1 +367,4 @@\n-            swNodeIOP.disposeFrame(lwFrame);\n+            rec.dispose();\n+            Disposer.removeRecord(disposerRecRef);\n+            rec = null;\n+            disposerRecRef = null;\n@@ -384,1 +390,2 @@\n-            Disposer.addRecord(this, swNodeIOP.createSwingNodeDisposer(lwFrame));\n+            rec = swNodeIOP.createSwingNodeDisposer(lwFrame);\n+            disposerRecRef = Disposer.addRecord(this, rec);\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/SwingNode.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}