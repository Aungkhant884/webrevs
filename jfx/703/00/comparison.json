{"files":[{"patch":"@@ -848,7 +848,0 @@\n-    \/\/ FIXME: We should consider supporting access\/modification to local storage\n-    \/\/ after calling window.close(). See <https:\/\/bugs.webkit.org\/show_bug.cgi?id=135330>.\n-    if (!page || !page->isClosing()) {\n-        if (m_localStorage)\n-            return m_localStorage.get();\n-    }\n-\n@@ -858,3 +851,1 @@\n-    if (page->isClosing())\n-        return nullptr;\n-\n+    \/\/ Check if localstorage setting is disabled, then return nullptr\n@@ -864,0 +855,5 @@\n+    \/\/ FIXME: We should consider supporting access\/modification to local storage\n+    \/\/ after calling window.close(). See <https:\/\/bugs.webkit.org\/show_bug.cgi?id=135330>.\n+    if (page->isClosing() && m_localStorage)\n+            return m_localStorage.get();\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/DOMWindow.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.web;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.concurrent.FutureTask;\n+import java.io.File;\n+import javafx.scene.web.WebEngineShim;\n+import javafx.concurrent.Worker;\n+import javafx.scene.web.WebView;\n+import javafx.scene.web.WebEngine;\n+\n+import org.junit.Test;\n+\n+public class LocalStorageTest extends TestBase {\n+\n+    @Test\n+    public void testLocalStorage() throws Exception {\n+        final WebEngine webEngine = getEngine();\n+        webEngine.setJavaScriptEnabled(true);\n+        webEngine.setUserDataDirectory(new File(\"\/tmp\/java-store\"));\n+        checkLocalStorageAfterWindowClose(webEngine);\n+    }\n+    private WebEngine createWebEngine() {\n+        return submit(() -> new WebEngine());\n+    }\n+\n+    void checkLocalStorageAfterWindowClose(WebEngine webEngine) {\n+        load(new File(\"src\/test\/resources\/test\/html\/localstorage.html\"));\n+        submit(() -> {\n+            assertNotNull(webEngine.executeScript(\"localStorage;\"));\n+            getEngine().executeScript(\"window.close();\");\n+            assertNotNull(webEngine.executeScript(\"localStorage;\"));\n+        });\n+    }\n+\n+    @Test\n+    public void testLocalStorageSet() {\n+        load(new File(\"src\/test\/resources\/test\/html\/localstorage.html\"));\n+        submit(() -> {\n+            WebView view = getView();\n+            view.getEngine().executeScript(\"test_local_storage_set();\");\n+            String s = (String) view.getEngine().executeScript(\"document.getElementById('key').innerText;\");\n+            assertEquals(s, \"1001\");\n+        });\n+    }\n+\n+    @Test\n+    public void testLocalStoargeClear() {\n+        load(new File(\"src\/test\/resources\/test\/html\/localstorage.html\"));\n+        submit(() -> {\n+            WebView view = getView();\n+            view.getEngine().executeScript(\"delete_items();\");\n+            String s = (String) view.getEngine().executeScript(\"document.getElementById('key').innerText;\");\n+            boolean res = (s == null || s.length() == 0);\n+            assertTrue(res);\n+        });\n+    }\n+}\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/LocalStorageTest.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+<html>\n+<body>\n+\n+<h2>The localStorage Property Test<\/h2>\n+\n+<p id=\"key\"><\/p>\n+\n+<script>\n+\n+ \/\/ Test set and get Items API\n+ function test_local_storage_set() {\n+   \/\/ Set Item\n+   localStorage.setItem(\"key\", \"1001\");\n+   \/\/ getItem\n+   document.getElementById(\"key\").innerHTML = localStorage.getItem(\"key\");\n+ }\n+\n+ \/\/ test clear() API\n+ function delete_items() {\n+  localStorage.clear();\n+  document.getElementById(\"key\").innerHTML = localStorage.getItem(\"key\");\n+ }\n+\n+<\/script>\n+\n+<\/body>\n+<\/html>\n","filename":"modules\/javafx.web\/src\/test\/resources\/test\/html\/localstorage.html","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"}]}