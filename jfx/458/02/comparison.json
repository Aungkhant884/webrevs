{"files":[{"patch":"@@ -37,7 +37,0 @@\n-static jclass GetFileSystemClass(JNIEnv* env)\n-{\n-    static JGClass clazz(env->FindClass(\"com\/sun\/webkit\/FileSystem\"));\n-    ASSERT(clazz);\n-    return clazz;\n-}\n-\n@@ -49,1 +42,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -55,1 +48,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -78,1 +71,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -84,1 +77,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -128,1 +121,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -134,1 +127,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -148,1 +141,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -154,1 +147,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -177,1 +170,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -185,1 +178,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -232,1 +225,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -238,1 +231,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -251,1 +244,1 @@\n-                GetFileSystemClass(env),\n+                comSunWebkitFileSystem,\n@@ -257,1 +250,1 @@\n-                GetFileSystemClass(env),\n+                comSunWebkitFileSystem,\n@@ -271,1 +264,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -277,1 +270,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -307,1 +300,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -313,1 +306,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -330,1 +323,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n@@ -336,1 +329,1 @@\n-            GetFileSystemClass(env),\n+            comSunWebkitFileSystem,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/FileSystemJava.cpp","additions":20,"deletions":27,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+JGClass comSunWebkitFileSystem;\n@@ -134,0 +135,15 @@\n+\n+    JNIEnv* env = WTF::GetJavaEnv();\n+\n+    \/\/ Class com.sun.webkit.FileSystem is accessed from a newly created native\n+    \/\/ thread from FileSystemJava. The class is resolved at initialization time\n+    \/\/ as in the JNI_OnLoad callback the classloader used to load the native\n+    \/\/ library is also used to load the target class, which is by construction\n+    \/\/ the right one\n+    static jclass fileSystemClass = env->FindClass(\"com\/sun\/webkit\/FileSystem\");\n+\n+    ASSERT(fileSystemClass);\n+\n+    static JGClass fileSystemRef(fileSystemClass);\n+    WTF::comSunWebkitFileSystem = fileSystemRef;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/JavaEnv.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -131,0 +131,3 @@\n+namespace WTF {\n+extern JGClass comSunWebkitFileSystem;\n+}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/JavaEnv.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.com.sun.webkit;\n+\n+import java.io.File;\n+import static java.util.Arrays.asList;\n+import java.util.List;\n+import static org.junit.Assert.assertEquals;\n+import org.junit.Test;\n+\n+\/**\n+ * @test\n+ * @bug 8264990\n+ * @summary Check if access to local storage works without causing a segfault\n+ *\/\n+public class LocalStorageAccessTest {\n+    @Test (timeout = 15000)\n+    public void testMainThreadDoesNotSegfault() throws Exception {\n+        \/\/ This is an indirect test of the webkit file system implementation.\n+        \/\/ It was observed, that accessing local storage causes a segfault\n+        \/\/ in the JVM. That case is executed by this test.\n+        \/\/\n+        \/\/ A new JVM is started with a custom launcher (classpath based). This\n+        \/\/ launcher sets up the module layer required for OpenJFX and starts\n+        \/\/ the test application. That way the OpenJFX classes are not loaded by\n+        \/\/ the system class loader, but by the classloader that is associated\n+        \/\/ with the new module layer.\n+        \/\/\n+\n+        final String appModulePath = System.getProperty(\"launchertest.testapp7.module.path\");\n+        final String workerModulePath = System.getProperty(\"worker.module.path\");\n+        final String javaLibraryPath = System.getProperty(\"java.library.path\");\n+        final String workerJavaCmd = System.getProperty(\"worker.java.cmd\");\n+\n+        final List<String> cmd = asList(\n+            workerJavaCmd,\n+            \"-cp\", appModulePath + \"\/mymod\",\n+            \"-Djava.library.path=\" + javaLibraryPath,\n+            \"-Dmodule.path=\" + appModulePath + \"\/mymod\" + File.pathSeparator + workerModulePath,\n+            \"myapp7.LocalStorageAccessWithModuleLayerLauncher\"\n+        );\n+\n+        final ProcessBuilder builder = new ProcessBuilder(cmd);\n+\n+        builder.redirectError(ProcessBuilder.Redirect.INHERIT);\n+        builder.redirectOutput(ProcessBuilder.Redirect.INHERIT);\n+        Process process = builder.start();\n+        int retVal = process.waitFor();\n+\n+        assertEquals(\"Process did not exit cleanly\", 0, retVal);\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/webkit\/LocalStorageAccessTest.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package myapp7;\n+\n+import java.lang.module.ModuleDescriptor;\n+import javafx.application.Application;\n+import javafx.beans.value.ChangeListener;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker.State;\n+import javafx.scene.Scene;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+public class LocalStorageAccessWithModuleLayer extends Application {\n+    public static final int ERROR_OK = 0;\n+    public static final int ERROR_ASSUMPTION_VIOLATED = 2;\n+    public static final int ERROR_TIMEOUT = 3;\n+    public static final int ERROR_TITLE_NOT_UPDATED = 4;\n+    public static final int ERROR_UNEXPECTED_EXIT = 5;\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        Module module = Application.class.getModule();\n+\n+        if (module == null) {\n+            System.err.println(\"Failure: Module for Application not found\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        if (! module.isNamed()) {\n+            System.err.println(\"Failure: Expected named module\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        ModuleDescriptor moduleDesc = module.getDescriptor();\n+\n+        if (moduleDesc.isAutomatic()) {\n+            System.err.println(\"Failure: Automatic module found\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        if (moduleDesc.isOpen()) {\n+            System.err.println(\"Failure: Open module found\");\n+            System.exit(ERROR_ASSUMPTION_VIOLATED);\n+        }\n+\n+        BorderPane root = new BorderPane();\n+        Scene scene = new Scene(root);\n+\n+        WebView webview = new WebView();\n+        root.setCenter(webview);\n+\n+        \/\/ The loaded test page LocalStorageAccess will set the title to\n+        \/\/ 'Executed'. This indicates, that the second script block was reached\n+        webview.getEngine().getLoadWorker().stateProperty().addListener(\n+            (observableValue, oldState, newState) -> {\n+                if (newState == State.SUCCEEDED) {\n+                    String title = webview.getEngine().getTitle();\n+                    if (\"Executed\".equals(title)) {\n+                        System.exit(ERROR_OK);\n+                    } else {\n+                        System.exit(ERROR_TITLE_NOT_UPDATED);\n+                    }\n+                }\n+            });\n+        webview.getEngine().load(LocalStorageAccessWithModuleLayer.class.getResource(\"LocalStorageAccess.html\").toExternalForm());\n+\n+        primaryStage.setScene(scene);\n+        primaryStage.setWidth(1024);\n+        primaryStage.setHeight(768);\n+        primaryStage.show();\n+    }\n+}\n","filename":"tests\/system\/src\/testapp7\/java\/mymod\/myapp7\/LocalStorageAccessWithModuleLayer.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package myapp7;\n+\n+import java.io.File;\n+import java.lang.module.Configuration;\n+import java.lang.module.ModuleFinder;\n+import java.lang.reflect.Method;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class LocalStorageAccessWithModuleLayerLauncher {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Install safeguard to ensure this application is terminated\n+        new Thread() {\n+            {\n+                setDaemon(true);\n+            }\n+\n+            @Override\n+            public void run() {\n+                try {\n+                    Thread.sleep(15000);\n+                } catch (InterruptedException ex) {\n+                    \/\/ Ok, lets exit early\n+                }\n+                System.exit(LocalStorageAccessWithModuleLayer.ERROR_TIMEOUT);\n+            }\n+        }.start();\n+\n+        \/*\n+         * Setup a module layer for OpenJFX and the test class\n+         *\/\n+\n+        \/\/ Hack to get the classes of this programm into a module layer\n+        List<Path> modulePaths = new ArrayList<>();\n+        for (String workerPath : System.getProperty(\"module.path\").split(File.pathSeparator)) {\n+            modulePaths.add(Paths.get(workerPath));\n+        }\n+        ModuleFinder finder = ModuleFinder.of(modulePaths.toArray(new Path[0]));\n+\n+        \/*\n+         * Load the application as a named module and invoke it\n+         *\/\n+        ModuleLayer parent = ModuleLayer.boot();\n+        Configuration cf = parent.configuration().resolve(finder, ModuleFinder.of(), Set.of(\"mymod\"));\n+        ClassLoader scl = ClassLoader.getSystemClassLoader();\n+        ModuleLayer layer = parent.defineModulesWithOneLoader(cf, scl);\n+        ClassLoader moduleClassLoader = layer.findLoader(\"mymod\");\n+        Class appClass = moduleClassLoader.loadClass(\"javafx.application.Application\");\n+        Class testClass = moduleClassLoader.loadClass(\"myapp7.LocalStorageAccessWithModuleLayer\");\n+        Method launchMethod = appClass.getMethod(\"launch\", Class.class, String[].class);\n+        launchMethod.invoke(null, new Object[]{testClass, args});\n+        System.exit(LocalStorageAccessWithModuleLayer.ERROR_UNEXPECTED_EXIT);\n+    }\n+}\n","filename":"tests\/system\/src\/testapp7\/java\/mymod\/myapp7\/LocalStorageAccessWithModuleLayerLauncher.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+<!--\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+-->\n+<html>\n+    <head>\n+        <title>Armed<\/title>\n+    <\/head>\n+    <body>\n+        <h1>Test localStorage without segfault<\/h1>\n+        <p>\n+            The test is successful if access localstorage does not cause the\n+            JVM to crash with a SEGFAULT.\n+        <\/p>\n+        <script>localStorage.setItem( 'dummyKey', 'dummyValue' );<\/script>\n+        <p style=\"color: darkgreen; font-weight: bold\">Done<\/p>\n+        <script>document.getElementsByTagName('title')[0].textContent='Executed'<\/script>\n+    <\/body>\n+<\/html>\n","filename":"tests\/system\/src\/testapp7\/resources\/mymod\/myapp7\/LocalStorageAccess.html","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"}]}