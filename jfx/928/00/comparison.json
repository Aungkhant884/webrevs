{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import com.sun.javafx.scene.control.Properties;\n-import com.sun.javafx.scene.control.behavior.BehaviorBase;\n-import javafx.beans.value.ObservableValue;\n@@ -36,2 +33,1 @@\n-import javafx.scene.control.Accordion;\n-import javafx.scene.control.Button;\n+import javafx.scene.Node;\n@@ -45,3 +41,0 @@\n-import javafx.scene.Node;\n-import com.sun.javafx.util.Utils;\n-import com.sun.javafx.scene.control.behavior.ScrollBarBehavior;\n@@ -49,1 +42,4 @@\n-import java.util.function.Consumer;\n+import com.sun.javafx.scene.control.ListenerHelper;\n+import com.sun.javafx.scene.control.Properties;\n+import com.sun.javafx.scene.control.behavior.ScrollBarBehavior;\n+import com.sun.javafx.util.Utils;\n@@ -101,1 +97,0 @@\n-\/\/        control.setInputMap(behavior.getInputMap());\n@@ -106,2 +101,3 @@\n-        \/\/ Register listeners\n-        final Consumer<ObservableValue<?>> consumer = e -> {\n+        ListenerHelper lh = ListenerHelper.get(this);\n+\n+        lh.addChangeListener(() -> {\n@@ -110,6 +106,9 @@\n-        };\n-        registerChangeListener(control.minProperty(), consumer);\n-        registerChangeListener(control.maxProperty(), consumer);\n-        registerChangeListener(control.visibleAmountProperty(), consumer);\n-        registerChangeListener(control.valueProperty(), e -> positionThumb());\n-        registerChangeListener(control.orientationProperty(), e -> getSkinnable().requestLayout());\n+        }, control.minProperty(), control.maxProperty(), control.visibleAmountProperty());\n+\n+        lh.addChangeListener(control.valueProperty(), (ev) -> {\n+            positionThumb();\n+        });\n+\n+        lh.addChangeListener(control.orientationProperty(), (ev) -> {\n+            getSkinnable().requestLayout();\n+        });\n@@ -513,2 +512,1 @@\n-\n-        getSkinnable().addEventHandler(ScrollEvent.SCROLL, event -> {\n+        ListenerHelper.get(this).addEventHandler(getSkinnable(), ScrollEvent.SCROLL, event -> {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ScrollBarSkin.java","additions":19,"deletions":21,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -28,5 +28,2 @@\n-import com.sun.javafx.scene.NodeHelper;\n-import com.sun.javafx.scene.ParentHelper;\n-import com.sun.javafx.scene.control.Properties;\n-import com.sun.javafx.scene.control.behavior.BehaviorBase;\n-import com.sun.javafx.scene.traversal.ParentTraversalEngine;\n+import static com.sun.javafx.scene.control.skin.Utils.boundedSize;\n+\n@@ -49,0 +46,1 @@\n+import javafx.geometry.Insets;\n@@ -53,1 +51,0 @@\n-import javafx.scene.control.Button;\n@@ -65,4 +62,0 @@\n-import com.sun.javafx.util.Utils;\n-import com.sun.javafx.scene.control.behavior.ScrollPaneBehavior;\n-import static com.sun.javafx.scene.control.skin.Utils.*;\n-import javafx.geometry.Insets;\n@@ -70,1 +63,8 @@\n-import java.util.function.Consumer;\n+import com.sun.javafx.scene.NodeHelper;\n+import com.sun.javafx.scene.ParentHelper;\n+import com.sun.javafx.scene.control.ListenerHelper;\n+import com.sun.javafx.scene.control.Properties;\n+import com.sun.javafx.scene.control.behavior.BehaviorBase;\n+import com.sun.javafx.scene.control.behavior.ScrollPaneBehavior;\n+import com.sun.javafx.scene.traversal.ParentTraversalEngine;\n+import com.sun.javafx.util.Utils;\n@@ -268,1 +268,0 @@\n-\/\/        control.setInputMap(behavior.getInputMap());\n@@ -273,5 +272,3 @@\n-        Consumer<ObservableValue<?>> viewportSizeHintConsumer = e -> {\n-            \/\/ change affects pref size, so requestLayout on control\n-            getSkinnable().requestLayout();\n-        };\n-        registerChangeListener(control.contentProperty(), e -> {\n+        ListenerHelper lh = ListenerHelper.get(this);\n+\n+        lh.addChangeListener(control.contentProperty(), (ev) -> {\n@@ -295,26 +292,29 @@\n-        registerChangeListener(control.fitToWidthProperty(), e -> {\n-            getSkinnable().requestLayout();\n-            viewRect.requestLayout();\n-        });\n-        registerChangeListener(control.fitToHeightProperty(), e -> {\n-            getSkinnable().requestLayout();\n-            viewRect.requestLayout();\n-        });\n-        registerChangeListener(control.hbarPolicyProperty(), e -> {\n-            \/\/ change might affect pref size, so requestLayout on control\n-            getSkinnable().requestLayout();\n-        });\n-        registerChangeListener(control.vbarPolicyProperty(), e -> {\n-            \/\/ change might affect pref size, so requestLayout on control\n-            getSkinnable().requestLayout();\n-        });\n-        registerChangeListener(control.hvalueProperty(), e -> hsb.setValue(getSkinnable().getHvalue()));\n-        registerChangeListener(control.hmaxProperty(), e -> hsb.setMax(getSkinnable().getHmax()));\n-        registerChangeListener(control.hminProperty(), e -> hsb.setMin(getSkinnable().getHmin()));\n-        registerChangeListener(control.vvalueProperty(), e -> vsb.setValue(getSkinnable().getVvalue()));\n-        registerChangeListener(control.vmaxProperty(), e -> vsb.setMax(getSkinnable().getVmax()));\n-        registerChangeListener(control.vminProperty(), e -> vsb.setMin(getSkinnable().getVmin()));\n-        registerChangeListener(control.prefViewportWidthProperty(), viewportSizeHintConsumer);\n-        registerChangeListener(control.prefViewportHeightProperty(), viewportSizeHintConsumer);\n-        registerChangeListener(control.minViewportWidthProperty(), viewportSizeHintConsumer);\n-        registerChangeListener(control.minViewportHeightProperty(), viewportSizeHintConsumer);\n+\n+        lh.addChangeListener(\n+            () -> {\n+                getSkinnable().requestLayout();\n+                viewRect.requestLayout();\n+            },\n+            control.fitToWidthProperty(),\n+            control.fitToHeightProperty()\n+        );\n+\n+        lh.addChangeListener(control.hvalueProperty(), e -> hsb.setValue(getSkinnable().getHvalue()));\n+        lh.addChangeListener(control.hmaxProperty(), e -> hsb.setMax(getSkinnable().getHmax()));\n+        lh.addChangeListener(control.hminProperty(), e -> hsb.setMin(getSkinnable().getHmin()));\n+        lh.addChangeListener(control.vvalueProperty(), e -> vsb.setValue(getSkinnable().getVvalue()));\n+        lh.addChangeListener(control.vmaxProperty(), e -> vsb.setMax(getSkinnable().getVmax()));\n+        lh.addChangeListener(control.vminProperty(), e -> vsb.setMin(getSkinnable().getVmin()));\n+\n+        lh.addChangeListener(\n+            () -> {\n+                \/\/ change affects pref size, so requestLayout on control\n+                getSkinnable().requestLayout();\n+            },\n+            control.hbarPolicyProperty(),\n+            control.vbarPolicyProperty(),\n+            control.prefViewportWidthProperty(),\n+            control.prefViewportHeightProperty(),\n+            control.minViewportWidthProperty(),\n+            control.minViewportHeightProperty()\n+        );\n@@ -390,3 +390,2 @@\n-    @Override public void dispose() {\n-        super.dispose();\n-\n+    @Override\n+    public void dispose() {\n@@ -396,0 +395,2 @@\n+\n+        super.dispose();\n@@ -669,2 +670,4 @@\n-        hsb.addEventFilter(MouseEvent.MOUSE_PRESSED, barHandler);\n-        vsb.addEventFilter(MouseEvent.MOUSE_PRESSED, barHandler);\n+        ListenerHelper lh = ListenerHelper.get(this);\n+\n+        lh.addEventFilter(hsb, MouseEvent.MOUSE_PRESSED, barHandler);\n+        lh.addEventFilter(vsb, MouseEvent.MOUSE_PRESSED, barHandler);\n@@ -711,4 +714,3 @@\n-        \/*\n-        ** listeners, and assorted housekeeping\n-        *\/\n-        InvalidationListener vsbListener = valueModel -> {\n+        \/\/ listeners, and assorted housekeeping\n+\n+        lh.addInvalidationListener(vsb.valueProperty(), (valueModel) -> {\n@@ -722,2 +724,1 @@\n-        };\n-        vsb.valueProperty().addListener(vsbListener);\n+        });\n@@ -725,1 +726,1 @@\n-        InvalidationListener hsbListener = valueModel -> {\n+        lh.addInvalidationListener(hsb.valueProperty(), (valueModel) -> {\n@@ -733,2 +734,1 @@\n-        };\n-        hsb.valueProperty().addListener(hsbListener);\n+        });\n@@ -747,1 +747,0 @@\n-\n@@ -785,0 +784,1 @@\n+\n@@ -846,1 +846,0 @@\n-\n@@ -956,1 +955,1 @@\n-        getSkinnable().addEventHandler(TouchEvent.TOUCH_PRESSED, e -> {\n+        lh.addEventHandler(getSkinnable(), TouchEvent.TOUCH_PRESSED, e -> {\n@@ -962,1 +961,1 @@\n-        getSkinnable().addEventHandler(TouchEvent.TOUCH_RELEASED, e -> {\n+        lh.addEventHandler(getSkinnable(), TouchEvent.TOUCH_RELEASED, e -> {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ScrollPaneSkin.java","additions":60,"deletions":61,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -173,2 +173,2 @@\n-                ScrollBar.class,\n-                ScrollPane.class,\n+                \/\/ScrollBar.class,\n+                \/\/ScrollPane.class,\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinMemoryLeakTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}