{"files":[{"patch":"@@ -471,0 +471,10 @@\n+            \/\/ We have to veto negative toBeRemoved indexes, otherwise our backing list\n+            \/\/ might fail and leave childSet in corrupted state.\n+            for (int tbr: toBeRemoved) {\n+                if (tbr < 0) {\n+                    throw new IllegalArgumentException(\n+                            constructExceptionMessage(\n+                                \"negative indexes are not allowed\", null));\n+                }\n+            }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Parent.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -841,0 +841,12 @@\n+    @Test\n+    public void testNegativeIndexCorruptsChildSet() {\n+        Group g = new Group();\n+        g.getChildren().addAll(new Rectangle(), new Rectangle());\n+\n+        \/\/ Adding a negative index should throw IndexOutOfBoundsException and not modify internal state\n+        assertThrows(IllegalArgumentException.class, () -> g.getChildren().add(-1, new Rectangle()));\n+\n+        \/\/ below call should throw no exception\n+        g.getChildren().remove(0);\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/ParentTest.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}