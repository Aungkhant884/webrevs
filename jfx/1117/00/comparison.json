{"files":[{"patch":"@@ -608,1 +608,1 @@\n-\/\/ Specifies whether to run tests with the existing javafx.* modules instead of compiling a new one\n+\/\/ For backward compatibility, -PBUILD_SDK_FOR_TEST=false will set TEST_ONLY to true\n@@ -610,1 +610,5 @@\n-ext.DO_BUILD_SDK_FOR_TEST = Boolean.parseBoolean(BUILD_SDK_FOR_TEST)\n+def buildSdkForTest = Boolean.parseBoolean(BUILD_SDK_FOR_TEST)\n+\n+\/\/ Specifies whether to run tests with the existing javafx.* modules instead of compiling a new one\n+defineProperty(\"TEST_ONLY\", \"false\")\n+ext.IS_TEST_ONLY = Boolean.parseBoolean(TEST_ONLY) || !buildSdkForTest\n@@ -4193,0 +4197,12 @@\n+task shims() {\n+    gradle.allprojects { aProject ->\n+        if (aProject.hasProperty(\"sourceSets\") && aProject.sourceSets.hasProperty('shims')) {\n+            aProject.tasks.each { aTask ->\n+                if (aTask.name.contains(\"shim\") || aTask.name.contains(\"Shim\")) {\n+                    dependsOn(aTask)\n+                }\n+            }\n+        }\n+    }\n+}\n+\n@@ -4194,1 +4210,1 @@\n-    if (DO_BUILD_SDK_FOR_TEST) {\n+    if (!IS_TEST_ONLY) {\n@@ -4196,1 +4212,10 @@\n-            if (t.enabled) t.dependsOn(sdk)\n+            if (t.enabled) t.dependsOn(shims)\n+        }\n+    } else {\n+        gradle.taskGraph.whenReady { theTaskGraph ->\n+            theTaskGraph.allTasks.each { task ->\n+                if (!task.name.contains(\"test\") && !task.name.contains(\"Test\") &&\n+                    !task.name.equals(\"verifyJava\")) {\n+                    task.enabled = false\n+                }\n+            }\n@@ -4201,0 +4226,2 @@\n+shims.dependsOn(sdk)\n+\n@@ -4264,1 +4291,1 @@\n-    dependsOn(sdk,publicExports,apps,perf,zips)\n+    dependsOn(sdk, shims, publicExports, apps, perf, zips)\n","filename":"build.gradle","additions":32,"deletions":5,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -72,5 +72,9 @@\n-# Specifies whether to build SDK for running unit tests\n-# By default, it is set to true and the tests are running of the\n-# fresh-built SDK. If set to false, this flag removes main sources\n-# compilation tasks and building the whole SDK. The existing SDK is used\n-# instead, and must have been previously built\n+# Specifies whether to build SDK for running the provided test task.\n+# By default, it is set to false and the tests are running of the\n+# fresh-built SDK. If set to true, this flag disables all non test tasks,\n+# and it is expected that sdk and shims tasks have been previously built.\n+\n+#TEST_ONLY = true\n+\n+# Same as TEST_ONLY, excpet that the name and values have opposite meaning.\n+# Recommended to use TEST_ONLY instead of this property.\n","filename":"gradle.properties.template","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}