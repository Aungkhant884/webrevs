{"files":[{"patch":"@@ -53,0 +53,6 @@\n+ *\n+ * Adding a new project or task:\n+ *  - Fix for JDK-XXXXXXX, introduces a restriction on assigning name for project or task.\n+ *    - If the name of project or task contains word test\/Test then it is considered as test task.\n+ *    - If the name of project or task contains word shim\/Shim then it is considered as shims task.\n+ *    - See TEST_ONLY flag, isTestTask() method, the tasks: shims and sdk for more clarity.\n@@ -612,1 +618,3 @@\n-\/\/ Specifies whether to run tests with the existing javafx.* modules instead of compiling a new one\n+\/\/ Specifies whether to run only test tasks using the already built javafx.* modules\n+\/\/ and shim classes, instead of rebuilding them.\n+\/\/ If true, then all non test tasks, except verifyJava are disabled. see task sdk and isTestTask method.\n@@ -1813,0 +1821,8 @@\n+\/**\n+ * Returns true if the name of task or name of task's project contains word test\/Test.\n+ *\/\n+boolean isTestTask(Task task) {\n+    return (task.project.name.contains(\"test\") || task.project.name.contains(\"Test\")\n+                 || task.name.contains(\"test\") || task.name.contains(\"Test\"))\n+}\n+\n@@ -4198,5 +4214,5 @@\n-    gradle.allprojects { aProject ->\n-        if (aProject.hasProperty(\"sourceSets\") && aProject.sourceSets.hasProperty('shims')) {\n-            aProject.tasks.each { aTask ->\n-                if (aTask.name.contains(\"shim\") || aTask.name.contains(\"Shim\")) {\n-                    dependsOn(aTask)\n+    gradle.allprojects { project ->\n+        if (project.hasProperty(\"sourceSets\") && project.sourceSets.hasProperty('shims')) {\n+            project.tasks.each { task ->\n+                if (task.name.contains(\"shim\") || task.name.contains(\"Shim\")) {\n+                    dependsOn(task)\n@@ -4215,4 +4231,3 @@\n-        gradle.taskGraph.whenReady { theTaskGraph ->\n-            theTaskGraph.allTasks.each { task ->\n-                if (!task.name.contains(\"test\") && !task.name.contains(\"Test\") &&\n-                    !task.name.equals(\"verifyJava\")) {\n+        gradle.taskGraph.whenReady { taskGraph ->\n+            taskGraph.allTasks.each { task ->\n+                if (!isTestTask(task) && !task.name.equals(\"verifyJava\")) {\n","filename":"build.gradle","additions":25,"deletions":10,"binary":false,"changes":35,"status":"modified"}]}