{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,3 +201,2 @@\n-     * <p>Convenience method to inform if the given index is currently selected\n-     * in this SelectionModel. Is functionally equivalent to calling\n-     * <code>getSelectedIndices().contains(index)<\/code>.\n+     * This method tests whether the given index is currently selected\n+     * in this SelectionModel.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/SelectionModel.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2816,2 +2816,13 @@\n-        @Override public boolean isSelected(int index) {\n-            return isSelected(index, null);\n+        @Override\n+        public boolean isSelected(int index) {\n+            if (isCellSelectionEnabled()) {\n+                int columnCount = tableView.getVisibleLeafColumns().size();\n+                for (int col = 0; col < columnCount; col++) {\n+                    if (selectedCellsMap.isSelected(index, col)) {\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            } else {\n+                return selectedCellsMap.isSelected(index, -1);\n+            }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableView.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3168,2 +3168,13 @@\n-        @Override public boolean isSelected(int index) {\n-            return isSelected(index, null);\n+        @Override\n+        public boolean isSelected(int index) {\n+            if (isCellSelectionEnabled()) {\n+                int columnCount = treeTableView.getVisibleLeafColumns().size();\n+                for (int col = 0; col < columnCount; col++) {\n+                    if (selectedCellsMap.isSelected(index, col)) {\n+                        return true;\n+                    }\n+                }\n+                return false;\n+            } else {\n+                return selectedCellsMap.isSelected(index, -1);\n+            }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableView.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -557,0 +557,1 @@\n+        sm.clearSelection();\n@@ -717,1 +718,1 @@\n-            assertFalse(sm.isSelected(row));\n+            assertTrue(sm.isSelected(row));\n@@ -790,1 +791,1 @@\n-            assertFalse(sm.isSelected(0));\n+            assertTrue(sm.isSelected(0));\n@@ -816,1 +817,1 @@\n-            assertFalse(sm.isSelected(0));\n+            assertTrue(sm.isSelected(0));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewMouseInputTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,1 +175,1 @@\n-        assertFalse(model.isSelected(3));\n+        assertTrue(model.isSelected(3));\n@@ -188,1 +188,1 @@\n-        assertFalse(model.isSelected(3));\n+        assertTrue(model.isSelected(3));\n@@ -855,0 +855,20 @@\n+\n+    \/**\n+     * Analysing failing tests when fixing JDK-8219720.\n+     *\n+     * Suspect: isSelected(int row) violates contract.\n+     *\n+     * @see #selectRowWhenInSingleCellSelectionMode()\n+     * @see #selectRowWhenInSingleCellSelectionMode2()\n+     *\/\n+    @Test\n+    public void testSelectRowWhenInSingleCellSelectionModeIsSelected() {\n+        model.setSelectionMode(SelectionMode.SINGLE);\n+        model.setCellSelectionEnabled(true);\n+        model.select(3);\n+        \/\/ test against contract\n+        assertEquals(\"selected index\", 3, model.getSelectedIndex());\n+        assertTrue(\"contained in selected indices\", model.getSelectedIndices().contains(3));\n+        \/\/ test against spec\n+        assertEquals(\"is selected index\", model.getSelectedIndices().contains(3), model.isSelected(3));\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewSelectionModelImplTest.java","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -892,1 +892,1 @@\n-            assertFalse(sm.isSelected(row));\n+            assertTrue(sm.isSelected(row));\n@@ -906,1 +906,1 @@\n-            assertFalse(cell.isSelected());\n+            assertTrue(cell.isSelected());\n@@ -969,1 +969,1 @@\n-            assertFalse(sm.isSelected(0));\n+            assertTrue(sm.isSelected(0));\n@@ -995,1 +995,1 @@\n-            assertFalse(sm.isSelected(0));\n+            assertTrue(sm.isSelected(0));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewMouseInputTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-        assertFalse(model.isSelected(3));\n+        assertTrue(model.isSelected(3));\n@@ -151,1 +151,1 @@\n-        assertFalse(model.isSelected(3));\n+        assertTrue(model.isSelected(3));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewSelectionModelImplTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}