{"files":[{"patch":"@@ -534,1 +534,1 @@\n-        \n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import org.junit.After;\n@@ -59,0 +60,8 @@\n+        Thread.currentThread().setUncaughtExceptionHandler((thread, throwable) -> {\n+            if (throwable instanceof RuntimeException) {\n+                throw (RuntimeException)throwable;\n+            } else {\n+                Thread.currentThread().getThreadGroup().uncaughtException(thread, throwable);\n+            }\n+        });\n+\n@@ -64,0 +73,4 @@\n+    @After public void cleanup() {\n+        Thread.currentThread().setUncaughtExceptionHandler(null);\n+    }\n+\n@@ -935,1 +948,1 @@\n-            assertEquals(\"table must be editing at intermediate index\", intermediate, list.getEditingIndex());\n+            assertEquals(\"list must be editing at intermediate index\", intermediate, list.getEditingIndex());\n@@ -947,1 +960,1 @@\n-            assertEquals(\"table editing must be cancelled by cell\", notEditingIndex, list.getEditingIndex());\n+            assertEquals(\"list editing must be cancelled by cell\", notEditingIndex, list.getEditingIndex());\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"}]}