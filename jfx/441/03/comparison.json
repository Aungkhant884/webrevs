{"files":[{"patch":"@@ -329,0 +329,1 @@\n+            updateEditing();\n@@ -339,0 +340,1 @@\n+            updateEditing();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import javafx.scene.control.ListView.EditEvent;\n@@ -41,0 +42,2 @@\n+import java.util.List;\n+import java.util.ArrayList;\n@@ -836,0 +839,50 @@\n+    @Test\n+    public void testChangeIndexWhileEditing_jdk_8264127() {\n+        List<EditEvent> events = new ArrayList<EditEvent>();\n+        list.setOnEditCancel(e -> {\n+            events.add(e);\n+        });\n+        list.setEditable(true);\n+        cell.updateListView(list);\n+        cell.updateIndex(1);\n+        list.edit(1);\n+        cell.updateIndex(0);\n+        assertTrue(!cell.isEditing());\n+        assertEquals(\"Should still be editing 1\", list.getEditingIndex(), 1);\n+        assertTrue(\"cell re-use must trigger cancel events\", events.size() == 1);\n+    }\n+\n+    @Test\n+    public void testChangeIndexToEditing1_jdk_8264127() {\n+        list.getFocusModel().focus(-1);\n+        assertChangeIndexToEditing(0, 1);\n+    }\n+\n+    @Test\n+    public void testChangeIndexToEditing2_jdk_8264127() {\n+        assertChangeIndexToEditing(1, 0);\n+    }\n+\n+    @Test\n+    public void testChangeIndexToEditing3_jdk_8264127() {\n+        \/\/list.getFocusModel().focus(-1);\n+        assertChangeIndexToEditing(-1, 0);\n+    }\n+\n+    private void assertChangeIndexToEditing(int initialCellIndex, int listEditingIndex) {\n+        List<EditEvent> events = new ArrayList<EditEvent>();\n+        list.setOnEditStart(e -> {\n+            events.add(e);\n+        });\n+        list.setEditable(true);\n+        cell.updateListView(list);\n+        cell.updateIndex(initialCellIndex);\n+        list.edit(listEditingIndex);\n+        assertEquals(\"sanity: list editingIndex \", listEditingIndex, list.getEditingIndex());\n+        assertFalse(\"sanity: cell must not be editing\", cell.isEditing());\n+        cell.updateIndex(listEditingIndex);\n+        assertEquals(\"sanity: index updated \", listEditingIndex, cell.getIndex());\n+        assertEquals(\"list editingIndex unchanged by cell\", listEditingIndex, list.getEditingIndex());\n+        assertTrue(cell.isEditing());\n+        assertTrue(\"cell re-use must trigger edit events\", events.size() == 1);\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"modified"}]}