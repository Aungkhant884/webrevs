{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-\n@@ -51,2 +50,0 @@\n-\n-import com.sun.javafx.scene.control.ListenerHelper;\n@@ -78,2 +75,0 @@\n-\n-\n@@ -101,3 +96,1 @@\n-        ListenerHelper lh = ListenerHelper.get(this);\n-\n-        lh.addChangeListener(control.indexProperty(), (ev) -> {\n+        registerChangeListener(control.indexProperty(), (x) -> {\n@@ -107,1 +100,1 @@\n-        lh.addChangeListener(control.treeItemProperty(), (ev) -> {\n+        registerChangeListener(control.treeItemProperty(), (obs) -> {\n@@ -119,1 +112,0 @@\n-        ListenerHelper lh = ListenerHelper.get(this);\n@@ -122,1 +114,1 @@\n-            lh.addInvalidationListener(getSkinnable().treeTableViewProperty(), (ev) -> {\n+            registerInvalidationListener(getSkinnable().treeTableViewProperty(), (x) -> {\n@@ -127,1 +119,1 @@\n-            lh.addChangeListener(treeTableView.treeColumnProperty(), (ev) -> {\n+            registerChangeListener(treeTableView.treeColumnProperty(), (x) -> {\n@@ -132,1 +124,3 @@\n-                getSkinnable().requestLayout();\n+                if (getSkinnable() != null) {\n+                    getSkinnable().requestLayout();\n+                }\n@@ -137,3 +131,2 @@\n-                lh.addChangeListener(fixedCellSizeProperty, (ev) -> {\n-                    fixedCellSize = fixedCellSizeProperty.get();\n-                    fixedCellSizeEnabled = fixedCellSize > 0;\n+                registerChangeListener(fixedCellSizeProperty, (x) -> {\n+                    updateCachedFixedSize();\n@@ -141,2 +134,1 @@\n-                fixedCellSize = fixedCellSizeProperty.get();\n-                fixedCellSizeEnabled = fixedCellSize > 0;\n+                updateCachedFixedSize();\n@@ -150,1 +142,6 @@\n-                    lh.addChangeListener(getVirtualFlow().widthProperty(), (ev) -> treeTableView.requestLayout());\n+                    registerChangeListener(getVirtualFlow().widthProperty(), (x) -> {\n+                        if (getSkinnable() != null) {\n+                            TreeTableView<T> t = getSkinnable().getTreeTableView();\n+                            t.requestLayout();\n+                        }\n+                    });\n@@ -156,0 +153,10 @@\n+    private void updateCachedFixedSize() {\n+        if (getSkinnable() != null) {\n+            TreeTableView<T> t = getSkinnable().getTreeTableView();\n+            if (t != null) {\n+                double sz = t.getFixedCellSize();\n+                fixedCellSize = sz;\n+                fixedCellSizeEnabled = fixedCellSize > 0.0;\n+            }\n+        }\n+    }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableRowSkin.java","additions":27,"deletions":20,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n-import com.sun.javafx.tk.Toolkit;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import java.lang.ref.WeakReference;\n@@ -47,0 +51,1 @@\n+import com.sun.javafx.tk.Toolkit;\n@@ -50,5 +55,1 @@\n-\n-import static org.junit.jupiter.api.Assertions.assertNotEquals;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n+import test.util.memory.JMemoryBuddy;\n@@ -215,0 +216,1 @@\n+        double fixed = 24;\n@@ -218,1 +220,2 @@\n-        treeTableView.setFixedCellSize(24);\n+        treeTableView.setFixedCellSize(fixed);\n+        Toolkit.getToolkit().firePulse();\n@@ -228,0 +231,2 @@\n+        assertEquals(fixed, minHeight, 0);\n+\n@@ -241,0 +246,1 @@\n+        assertNotEquals(cell, VirtualFlowTestUtils.getCell(treeTableView, 0));\n@@ -323,0 +329,30 @@\n+    \/** TreeTableView.refresh() must release all discarded cells JDK-8307538 *\/\n+    @Test\n+    public void cellsMustBeCollectableAfterRefresh() {\n+        IndexedCell<?> row = VirtualFlowTestUtils.getCell(treeTableView, 0);\n+        assertNotNull(row);\n+        WeakReference<Object> ref = new WeakReference<>(row);\n+        row = null;\n+\n+        treeTableView.refresh();\n+        Toolkit.getToolkit().firePulse();\n+\n+        JMemoryBuddy.assertCollectable(ref);\n+    }\n+\n+    \/** TreeTableView.setRowFactory() must release all discarded cells JDK-8307538 *\/\n+    @Test\n+    public void cellsMustBeCollectableAfterRowFactoryChange() {\n+        IndexedCell<?> row = VirtualFlowTestUtils.getCell(treeTableView, 0);\n+        assertNotNull(row);\n+        WeakReference<Object> ref = new WeakReference<>(row);\n+        row = null;\n+\n+        treeTableView.setRowFactory((x) -> {\n+            return new TreeTableRow<>();\n+        });\n+        Toolkit.getToolkit().firePulse();\n+\n+        JMemoryBuddy.assertCollectable(ref);\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TreeTableRowSkinTest.java","additions":43,"deletions":7,"binary":false,"changes":50,"status":"modified"}]}