{"files":[{"patch":"@@ -54,0 +54,1 @@\n+import com.oracle.tools.fx.monkey.tools.SystemInfoViewer;\n@@ -150,0 +151,1 @@\n+        FX.item(b, \"System Info\", this::openSystemInfo);\n@@ -249,0 +251,8 @@\n+    private void openSystemInfo() {\n+        SingleInstance.openSingleInstance(\n+            \"SystemInfo\",\n+            \"System Info\",\n+            SystemInfoViewer::new\n+        );\n+    }\n+\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/MainWindow.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,169 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.oracle.tools.fx.monkey.tools;\n+\n+import java.text.DecimalFormat;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import javafx.geometry.Rectangle2D;\n+import javafx.stage.Screen;\n+\n+\/**\n+ * Collects information about the system and generates the report.\n+ *\/\n+public class SystemInfo {\n+    private final DecimalFormat numberFormat = new DecimalFormat(\"#0.###\");\n+    private final StringBuilder sb = new StringBuilder();\n+\n+    private SystemInfo() {\n+\n+    }\n+\n+    public static String generateReport() {\n+        return new SystemInfo().collect();\n+    }\n+\n+    private void nl() {\n+        sb.append('\\n');\n+    }\n+\n+    private void header(String text) {\n+        sb.append(text);\n+        sb.append('\\n');\n+        for (int i = 0; i < text.length(); i++) {\n+            sb.append('=');\n+        }\n+        nl();\n+    }\n+\n+    private void safe(String text) {\n+        for (int i = 0; i < text.length(); i++) {\n+            char c = text.charAt(i);\n+            if (c < 0x20) {\n+                sb.append(String.format(\"\\\\u00%02X\", (int)c));\n+            } else {\n+                sb.append(c);\n+            }\n+        }\n+    }\n+\n+    private void f(double x) {\n+        sb.append(numberFormat.format(x));\n+    }\n+\n+    private void dumpBounds(Rectangle2D r) {\n+        sb.append(\"{x=\");\n+        f(r.getMinX());\n+        sb.append(\", y=\");\n+        f(r.getMinY());\n+        sb.append(\", w=\");\n+        f(r.getWidth());\n+        sb.append(\", h=\");\n+        f(r.getHeight());\n+        sb.append(\"}\");\n+    }\n+\n+    private void dumpScreen(Screen screen, boolean primary, int num) {\n+        sb.append(\"  \");\n+        if (primary) {\n+            sb.append(\"Primary \");\n+        }\n+        sb.append(\"Screen\");\n+        if (!primary) {\n+            sb.append(\" #\");\n+            sb.append(num);\n+        }\n+        sb.append(\":\");\n+        nl();\n+        sb.append(\"    dpi=\");\n+        f(screen.getDpi());\n+        nl();\n+        sb.append(\"    bounds=\");\n+        dumpBounds(screen.getBounds());\n+        nl();\n+        sb.append(\"    visual bounds=\");\n+        dumpBounds(screen.getVisualBounds());\n+        nl();\n+        sb.append(\"    output.scale.x=\");\n+        f(screen.getOutputScaleX());\n+        nl();\n+        sb.append(\"    output.scale.y=\");\n+        f(screen.getOutputScaleY());\n+        nl();\n+    }\n+\n+    private String collect() {\n+        \/\/ system properties\n+        header(\"System Properties\");\n+        {\n+            Properties p = System.getProperties();\n+            ArrayList<String> keys = new ArrayList<>(p.stringPropertyNames());\n+            Collections.sort(keys);\n+            for (String k: keys) {\n+                String v = System.getProperty(k);\n+                sb.append(k);\n+                sb.append(\"=\");\n+                safe(v);\n+                sb.append('\\n');\n+            }\n+        }\n+\n+        \/\/ environment\n+        sb.append('\\n');\n+        header(\"Environment\");\n+        {\n+            Map<String, String> env = System.getenv();\n+            ArrayList<String> keys = new ArrayList<>(env.keySet());\n+            Collections.sort(keys);\n+            for (String k: keys) {\n+                String v = env.get(k);\n+                sb.append(k);\n+                sb.append(\"=\");\n+                safe(v);\n+                sb.append('\\n');\n+            }\n+        }\n+\n+        \/\/ screens\n+        sb.append('\\n');\n+        header(\"Screens\");\n+        {\n+            int num = 1;\n+            Screen primary = Screen.getPrimary();\n+            dumpScreen(primary, true, num++);\n+\n+            List<Screen> screens = Screen.getScreens();\n+            for (Screen s: screens) {\n+                if (!s.equals(primary)) {\n+                    dumpScreen(s, false, num++);\n+                }\n+            }\n+        }\n+        return sb.toString();\n+    }\n+}\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/tools\/SystemInfo.java","additions":169,"deletions":0,"binary":false,"changes":169,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.oracle.tools.fx.monkey.tools;\n+\n+import javafx.application.Platform;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.layout.BorderPane;\n+\n+\/**\n+ * Tool shows the System Info\n+ *\/\n+public class SystemInfoViewer extends BorderPane {\n+    private final TextArea textField;\n+\n+    public SystemInfoViewer() {\n+        textField = new TextArea();\n+        textField.setEditable(false);\n+        textField.setWrapText(false);\n+        setCenter(textField);\n+\n+        Platform.runLater(() -> {\n+            String s = SystemInfo.generateReport();\n+            textField.setText(s);\n+        });\n+    }\n+}\n","filename":"tests\/manual\/monkey\/src\/com\/oracle\/tools\/fx\/monkey\/tools\/SystemInfoViewer.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"}]}