{"files":[{"patch":"@@ -56,1 +56,2 @@\n-    private Timeline timeline;\n+    \/* Package-private for testing purposes *\/\n+    Timeline timeline;\n@@ -161,1 +162,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/SpinnerBehavior.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -84,1 +84,2 @@\n-    private final SpinnerBehavior behavior;\n+    \/* Package-private for testing purposes *\/\n+    final SpinnerBehavior behavior;\n@@ -252,0 +253,6 @@\n+\n+        lh.addChangeListener(control.sceneProperty(), (op) -> {\n+            \/\/ Stop spinning when sceneProperty is modified\n+            behavior.stopSpinning();\n+        });\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/SpinnerSkin.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javafx.scene.control.behavior;\n+\n+import javafx.animation.Timeline;\n+\n+import com.sun.javafx.scene.control.behavior.SpinnerBehavior;\n+\n+public class SpinnerBehaviorShim {\n+\n+    public static Timeline getTimeline(SpinnerBehavior spinnerBehavior) {\n+        return spinnerBehavior.timeline;\n+    }\n+\n+}\n","filename":"modules\/javafx.controls\/src\/shims\/java\/com\/sun\/javafx\/scene\/control\/behavior\/SpinnerBehaviorShim.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package javafx.scene.control.skin;\n+\n+import javafx.scene.control.skin.SpinnerSkin;\n+\n+import com.sun.javafx.scene.control.behavior.SpinnerBehavior;\n+\n+public class SpinnerSkinShim {\n+\n+    public static SpinnerBehavior getSpinnerBehavior(SpinnerSkin spinnerSkin) {\n+        return spinnerSkin.behavior;\n+    }\n+\n+}\n","filename":"modules\/javafx.controls\/src\/shims\/java\/javafx\/scene\/control\/skin\/SpinnerSkinShim.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -33,0 +33,1 @@\n+import javafx.animation.Animation.Status;\n@@ -36,0 +37,1 @@\n+import javafx.scene.control.SpinnerShim;\n@@ -37,0 +39,2 @@\n+import javafx.scene.control.skin.SpinnerSkinShim;\n+import javafx.scene.layout.HBox;\n@@ -38,0 +42,5 @@\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+import com.sun.javafx.scene.control.behavior.SpinnerBehavior;\n+import com.sun.javafx.scene.control.behavior.SpinnerBehaviorShim;\n@@ -152,0 +161,19 @@\n+\n+    @Test\n+    public void testSpinnerIncrementOnRemovingFromScene() {\n+        spinner = new Spinner<>(0, 1000, 0);\n+        spinner.setSkin(new SpinnerSkin<>(spinner));\n+\n+        HBox root = new HBox(spinner);\n+        Scene scene = new Scene(root);\n+        Stage stage = new Stage();\n+        stage.setScene(scene);\n+        stage.show();\n+\n+        SpinnerBehavior behavior = SpinnerSkinShim.getSpinnerBehavior((SpinnerSkin)spinner.getSkin());\n+        behavior.startSpinning(true);\n+\n+        assertEquals(Status.RUNNING, SpinnerBehaviorShim.getTimeline(behavior).getStatus());\n+        root.getChildren().clear();\n+        assertEquals(Status.STOPPED, SpinnerBehaviorShim.getTimeline(behavior).getStatus());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SpinnerSkinTest.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"}]}