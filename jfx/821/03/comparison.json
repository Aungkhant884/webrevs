{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1718,0 +1718,5 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return id;\n+        }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -5089,0 +5089,5 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return id;\n+        }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -5757,0 +5757,5 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return id;\n+        }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3079,0 +3079,5 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return id;\n+        }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeViewTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2324,0 +2324,7 @@\n+    @Override\n+    public int hashCode() {\n+        int h = FXMLLoader.class.hashCode();\n+        h = 31 * h + (location == null ? 0 : location.toExternalForm().hashCode());\n+        return h;\n+    }\n+\n","filename":"modules\/javafx.fxml\/src\/main\/java\/javafx\/fxml\/FXMLLoader.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,0 +155,9 @@\n+    @Override\n+    public int hashCode() {\n+        int h = 1;\n+        for (int i = 0; i < size; i++) {\n+            h = 31 * h + elements[i];\n+        }\n+        return h;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/IntSet.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,0 +91,8 @@\n+    @Override\n+    public int hashCode() {\n+        int h = Boolean.hashCode(relative);\n+        h = 31 * h + (origin == null ? 0 : origin.hashCode());\n+        h = 31 * h + (value == null ? 0 : value.hashCode());\n+        return h;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/CalculatedValue.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -428,2 +428,2 @@\n-     * Override equals for using in a List of clips pended for pllayback.\n-     * Equals is used to avoid repetitions. hashCode is not necessary here.\n+     * Override equals for using in a List of clips pended for playback.\n+     * Equals is used to avoid repetitions.\n@@ -454,0 +454,12 @@\n+    @Override\n+    public int hashCode() {\n+        int h = sourceClip.getLocator().getURI().hashCode();\n+        h = 31 * h + priority;\n+        h = 31 * h + loopCount;\n+        h = 31 * h + Double.hashCode(volume);\n+        h = 31 * h + Double.hashCode(balance);\n+        h = 31 * h + Double.hashCode(rate);\n+        h = 31 * h + Double.hashCode(pan);\n+        return h;\n+    }\n+\n@@ -520,0 +532,5 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return player == null ? 0 : player.hashCode();\n+        }\n","filename":"modules\/javafx.media\/src\/main\/java\/com\/sun\/media\/jfxmediaimpl\/NativeMediaAudioClipPlayer.java","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,0 +263,8 @@\n+    @Override\n+    public int hashCode() {\n+        int h = Float.floatToIntBits(x);\n+        h = 31 * h + Float.floatToIntBits(y);\n+        h = 31 * h + Float.floatToIntBits(w);\n+        return 31 * h + Float.floatToIntBits(h);\n+    }\n+\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/graphics\/WCRectangle.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}