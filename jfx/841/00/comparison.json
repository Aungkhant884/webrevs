{"files":[{"patch":"@@ -961,2 +961,0 @@\n-                        oldParent.disabledProperty().removeListener(parentDisabledChangedListener);\n-                        oldParent.treeVisibleProperty().removeListener(parentTreeVisibleChangedListener);\n@@ -972,2 +970,0 @@\n-                        newParent.disabledProperty().addListener(parentDisabledChangedListener);\n-                        newParent.treeVisibleProperty().addListener(parentTreeVisibleChangedListener);\n@@ -1012,4 +1008,0 @@\n-    private final InvalidationListener parentDisabledChangedListener = valueModel -> updateDisabled();\n-\n-    private final InvalidationListener parentTreeVisibleChangedListener = valueModel -> updateTreeVisible(true);\n-\n@@ -1919,0 +1911,9 @@\n+\n+                    if (Node.this instanceof Parent) {\n+                        List<Node> children = ((Parent)Node.this).getChildren();\n+                        if (children != null) {\n+                            for (Node child : children) {\n+                                child.updateDisabled();\n+                            }\n+                        }\n+                    }\n@@ -8568,0 +8569,8 @@\n+            if (Node.this instanceof Parent) {\n+                List<Node> children = ((Parent)this).getChildren();\n+                if (children != null) {\n+                    for (Node child : children) {\n+                        child.updateTreeVisible(true);\n+                    }\n+                }\n+            }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,0 +84,8 @@\n+\n+    public static boolean isTreeVisible(Node n) {\n+        return n.isTreeVisible();\n+    }\n+\n+    public static void setTreeVisible(Node n, boolean visible) {\n+        n.setTreeVisible(visible);\n+    }\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/javafx\/scene\/NodeShim.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,2 +128,0 @@\n-        \/\/ Test that a disabled Group affects the disabled property of child nodes\n-\n@@ -2027,0 +2025,32 @@\n+\n+    @Test\n+    public void disabledFlagUpdatesChildrenDisabledFlag() {\n+        var g = new Group();\n+        var n1 = new Rectangle();\n+        var n2 = new Rectangle();\n+        g.getChildren().addAll(n1, n2);\n+        assertFalse(g.isDisabled());\n+        assertFalse(n2.isDisabled());\n+        assertFalse(n2.isDisabled());\n+\n+        g.setDisable(true);\n+        assertTrue(g.isDisabled());\n+        assertTrue(n2.isDisabled());\n+        assertTrue(n2.isDisabled());\n+    }\n+\n+    @Test\n+    public void treeVisibleFlagUpdatesChildrenTreeVisibleFlag() {\n+        var g = new Group();\n+        var n1 = new Rectangle();\n+        var n2 = new Rectangle();\n+        g.getChildren().addAll(n1, n2);\n+        assertTrue(NodeShim.isTreeVisible(g));\n+        assertTrue(NodeShim.isTreeVisible(n1));\n+        assertTrue(NodeShim.isTreeVisible(n2));\n+\n+        NodeShim.setTreeVisible(g, false);\n+        assertFalse(NodeShim.isTreeVisible(g));\n+        assertFalse(NodeShim.isTreeVisible(n1));\n+        assertFalse(NodeShim.isTreeVisible(n2));\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/NodeTest.java","additions":33,"deletions":3,"binary":false,"changes":36,"status":"modified"}]}