{"files":[{"patch":"@@ -264,5 +264,2 @@\n-     * <p>\n-     * A currently observed binding will observe its source, which means it will not be eligible\n-     * for garbage collection while its source isn't. However, when using {@code when} this {@code ObservableValue}\n-     * can still be eligible for garbage collection when {@code condition} holds {@code false} and {@code condition}\n-     * itself is also eligible for garbage collection.\n+     * This is in contrast to the general behavior of bindings, where the binding is\n+     * only eligible for garbage collection when not observed itself.\n@@ -279,1 +276,1 @@\n-     * whenProperty.addChangeListener((ov, old, current) -> System.out.println(current));\n+     * whenProperty.addListener((ov, old, current) -> System.out.println(current));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/value\/ObservableValue.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}