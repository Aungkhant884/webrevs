{"files":[{"patch":"@@ -280,1 +280,1 @@\n-     * ObservableValue<String> whenProperty = property.when(isShowing);\n+     * ObservableValue<String> whenProperty = property.when(condition);\n@@ -302,2 +302,2 @@\n-     * \/\/ bind label's text to a global property only when it is showing:\n-     * label.textProperty().bind(globalProperty.when(label::isShowingProperty));\n+     * \/\/ bind label's text to a global property only when it is shown:\n+     * label.textProperty().bind(globalProperty.when(label::isShownProperty));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/value\/ObservableValue.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1413,1 +1413,1 @@\n-    private ReadOnlyBooleanProperty showing;\n+    private ReadOnlyBooleanProperty shown;\n@@ -1415,1 +1415,1 @@\n-    public final boolean isShowing() {\n+    public final boolean isShown() {\n@@ -1422,2 +1422,2 @@\n-    public final ReadOnlyBooleanProperty showingProperty() {\n-        if (showing == null) {\n+    public final ReadOnlyBooleanProperty shownProperty() {\n+        if (shown == null) {\n@@ -1428,1 +1428,1 @@\n-            showing = new ReadOnlyBooleanDelegate(Node.this, \"showing\", ov);\n+            shown = new ReadOnlyBooleanDelegate(Node.this, \"shown\", ov);\n@@ -1431,1 +1431,1 @@\n-        return showing;\n+        return shown;\n@@ -8473,1 +8473,1 @@\n-        return isTreeVisible() && isShowing();\n+        return isTreeVisible() && isShown();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1268,4 +1268,4 @@\n-        assertFalse(g.isShowing());\n-        assertFalse(c.isShowing());\n-        assertFalse(g.showingProperty().get());\n-        assertFalse(c.showingProperty().get());\n+        assertFalse(g.isShown());\n+        assertFalse(c.isShown());\n+        assertFalse(g.shownProperty().get());\n+        assertFalse(c.shownProperty().get());\n@@ -1277,4 +1277,4 @@\n-        assertTrue(g.isShowing());\n-        assertTrue(c.isShowing());\n-        assertTrue(g.showingProperty().get());\n-        assertTrue(c.showingProperty().get());\n+        assertTrue(g.isShown());\n+        assertTrue(c.isShown());\n+        assertTrue(g.shownProperty().get());\n+        assertTrue(c.shownProperty().get());\n@@ -1285,4 +1285,4 @@\n-        assertTrue(g.isShowing());\n-        assertTrue(c.isShowing());\n-        assertTrue(g.showingProperty().get());\n-        assertTrue(c.showingProperty().get());\n+        assertTrue(g.isShown());\n+        assertTrue(c.isShown());\n+        assertTrue(g.shownProperty().get());\n+        assertTrue(c.shownProperty().get());\n@@ -1293,4 +1293,4 @@\n-        assertFalse(g.isShowing());\n-        assertFalse(c.isShowing());\n-        assertFalse(g.showingProperty().get());\n-        assertFalse(c.showingProperty().get());\n+        assertFalse(g.isShown());\n+        assertFalse(c.isShown());\n+        assertFalse(g.shownProperty().get());\n+        assertFalse(c.shownProperty().get());\n@@ -1301,4 +1301,4 @@\n-        assertTrue(g.isShowing());\n-        assertTrue(c.isShowing());\n-        assertTrue(g.showingProperty().get());\n-        assertTrue(c.showingProperty().get());\n+        assertTrue(g.isShown());\n+        assertTrue(c.isShown());\n+        assertTrue(g.shownProperty().get());\n+        assertTrue(c.shownProperty().get());\n@@ -1309,4 +1309,4 @@\n-        assertFalse(g.isShowing());\n-        assertFalse(c.isShowing());\n-        assertFalse(g.showingProperty().get());\n-        assertFalse(c.showingProperty().get());\n+        assertFalse(g.isShown());\n+        assertFalse(c.isShown());\n+        assertFalse(g.shownProperty().get());\n+        assertFalse(c.shownProperty().get());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/NodeTest.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"}]}