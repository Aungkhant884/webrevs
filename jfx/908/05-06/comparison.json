{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.util.function.Function;\n@@ -38,0 +39,2 @@\n+import javafx.collections.ObservableSet;\n+import javafx.collections.SetChangeListener;\n@@ -45,0 +48,1 @@\n+import javafx.scene.control.SkinBase;\n@@ -70,1 +74,1 @@\n-    private static final Object KEY = new Object();\n+    private static Function<SkinBase<?>,ListenerHelper> accessor;\n@@ -79,8 +83,2 @@\n-    public static ListenerHelper get(Node n) {\n-        Object x = n.getProperties().get(KEY);\n-        if (x instanceof ListenerHelper h) {\n-            return h;\n-        }\n-        ListenerHelper d = new ListenerHelper(n);\n-        n.getProperties().put(KEY, d);\n-        return d;\n+    public static void setAccessor(Function<SkinBase<?>,ListenerHelper> a) {\n+        accessor = a;\n@@ -89,5 +87,7 @@\n-    public static void disconnect(Node n) {\n-        Object x = n.getProperties().remove(KEY);\n-        if (x instanceof ListenerHelper h) {\n-            h.disconnect();\n-        }\n+    public static ListenerHelper get(SkinBase<?> skin) {\n+        return accessor.apply(skin);\n+    }\n+\n+    public static void disconnect(SkinBase<?> skin) {\n+        ListenerHelper h = get(skin);\n+        h.disconnect();\n@@ -368,0 +368,28 @@\n+    \/\/ set change listeners\n+\n+    public <T> IDisconnectable addSetChangeListener(ObservableSet<T> set, SetChangeListener<T> listener) {\n+        if (listener == null) {\n+            throw new NullPointerException(\"Listener must be specified.\");\n+        }\n+\n+        SeChLi<T> li = new SeChLi<T>() {\n+            @Override\n+            public void disconnect() {\n+                set.removeListener(this);\n+                items.remove(this);\n+            }\n+\n+            @Override\n+            public void onChanged(Change<? extends T> ch) {\n+                if (isAliveOrDisconnect()) {\n+                    listener.onChanged(ch);\n+                }\n+            }\n+        };\n+\n+        items.add(li);\n+        set.addListener(li);\n+\n+        return li;\n+    }\n+\n@@ -470,0 +498,2 @@\n+    protected static abstract class SeChLi<T> implements IDisconnectable, SetChangeListener<T> { }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ListenerHelper.java","additions":44,"deletions":14,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+     *\n+     * TODO remove after migration to ListenerHelper\n@@ -86,1 +88,0 @@\n-    @Deprecated \/\/ replace with listenerHelper\n@@ -90,0 +91,4 @@\n+    \n+    static {\n+        ListenerHelper.setAccessor((skin) -> skin.listenerHelper());\n+    }\n@@ -222,1 +227,1 @@\n-    protected ListenerHelper listenerHelper() {\n+    ListenerHelper listenerHelper() {\n@@ -240,1 +245,0 @@\n-    \/\/ TODO I would like to deprecate and remove these methods, and replace them by listenerHelper().add**()\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/SkinBase.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+import javafx.collections.ObservableSet;\n+import javafx.collections.SetChangeListener;\n@@ -44,0 +46,1 @@\n+import javafx.scene.control.Label;\n@@ -47,0 +50,1 @@\n+import javafx.scene.control.skin.LabelSkin;\n@@ -61,2 +65,2 @@\n-        Group node = new Group();\n-        ListenerHelper h = ListenerHelper.get(node);\n+        LabelSkin skin = new LabelSkin(new Label(\"yo\"));\n+        ListenerHelper h = ListenerHelper.get(skin);\n@@ -69,1 +73,1 @@\n-        ListenerHelper.disconnect(node);\n+        ListenerHelper.disconnect(skin);\n@@ -342,0 +346,20 @@\n+    \/\/ set change listeners\n+\n+    @Test\n+    public void testSetChangeListener() {\n+        ListenerHelper h = new ListenerHelper();\n+        ObservableSet<String> list = FXCollections.observableSet();\n+        AtomicInteger ct = new AtomicInteger();\n+        SetChangeListener<String> li = (ch) -> ct.incrementAndGet();\n+\n+        h.addSetChangeListener(list, li);\n+\n+        list.add(\"1\");\n+        assertEquals(1, ct.get());\n+\n+        h.disconnect();\n+\n+        list.add(\"2\");\n+        assertEquals(1, ct.get());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TestListenerHelper.java","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"}]}