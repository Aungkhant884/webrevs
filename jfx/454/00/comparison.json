{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import javafx.beans.InvalidationListener;\n+import javafx.beans.Observable;\n@@ -30,1 +32,0 @@\n-import javafx.beans.value.ChangeListener;\n@@ -39,1 +40,1 @@\n-public abstract class BidirectionalBinding<T> implements ChangeListener<T>, WeakListener {\n+public abstract class BidirectionalBinding implements InvalidationListener, WeakListener {\n@@ -100,1 +101,1 @@\n-            ((ObservableValue) property1).removeListener(binding);\n+            ((ObservableValue<?>)property1).removeListener(binding);\n@@ -103,1 +104,1 @@\n-            ((ObservableValue) property2).removeListener(binding);\n+            ((ObservableValue<?>)property2).removeListener(binding);\n@@ -142,1 +143,1 @@\n-        final BidirectionalBinding<Number> binding = new TypedNumberBidirectionalBinding<T>(property2, property1);\n+        final BidirectionalBinding binding = new TypedNumberBidirectionalBinding<>(property2, property1);\n@@ -153,1 +154,1 @@\n-        final BidirectionalBinding<Number> binding = new TypedNumberBidirectionalBinding<T>(property1, property2);\n+        final BidirectionalBinding binding = new TypedNumberBidirectionalBinding<>(property1, property2);\n@@ -211,1 +212,1 @@\n-    private static class BidirectionalBooleanBinding extends BidirectionalBinding<Boolean> {\n+    private static class BidirectionalBooleanBinding extends BidirectionalBinding {\n@@ -214,1 +215,2 @@\n-        private boolean updating = false;\n+        private boolean oldValue;\n+        private boolean updating;\n@@ -218,2 +220,3 @@\n-            propertyRef1 = new WeakReference<BooleanProperty>(property1);\n-            propertyRef2 = new WeakReference<BooleanProperty>(property2);\n+            oldValue = property1.get();\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -233,1 +236,1 @@\n-        public void changed(ObservableValue<? extends Boolean> sourceProperty, Boolean oldValue, Boolean newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -248,0 +251,1 @@\n+                            boolean newValue = property1.get();\n@@ -249,0 +253,1 @@\n+                            oldValue = newValue;\n@@ -250,0 +255,1 @@\n+                            boolean newValue = property2.get();\n@@ -251,0 +257,1 @@\n+                            oldValue = newValue;\n@@ -278,1 +285,1 @@\n-    private static class BidirectionalDoubleBinding extends BidirectionalBinding<Number> {\n+    private static class BidirectionalDoubleBinding extends BidirectionalBinding {\n@@ -281,0 +288,1 @@\n+        private double oldValue;\n@@ -285,2 +293,3 @@\n-            propertyRef1 = new WeakReference<DoubleProperty>(property1);\n-            propertyRef2 = new WeakReference<DoubleProperty>(property2);\n+            oldValue = property1.get();\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -300,1 +309,1 @@\n-        public void changed(ObservableValue<? extends Number> sourceProperty, Number oldValue, Number newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -315,1 +324,3 @@\n-                            property2.set(newValue.doubleValue());\n+                            double newValue = property1.get();\n+                            property2.set(newValue);\n+                            oldValue = newValue;\n@@ -317,1 +328,3 @@\n-                            property1.set(newValue.doubleValue());\n+                            double newValue = property2.get();\n+                            property1.set(newValue);\n+                            oldValue = newValue;\n@@ -322,1 +335,1 @@\n-                                property1.set(oldValue.doubleValue());\n+                                property1.set(oldValue);\n@@ -324,1 +337,1 @@\n-                                property2.set(oldValue.doubleValue());\n+                                property2.set(oldValue);\n@@ -345,1 +358,1 @@\n-    private static class BidirectionalFloatBinding extends BidirectionalBinding<Number> {\n+    private static class BidirectionalFloatBinding extends BidirectionalBinding {\n@@ -348,0 +361,1 @@\n+        private float oldValue;\n@@ -352,2 +366,3 @@\n-            propertyRef1 = new WeakReference<FloatProperty>(property1);\n-            propertyRef2 = new WeakReference<FloatProperty>(property2);\n+            oldValue = property1.get();\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -367,1 +382,1 @@\n-        public void changed(ObservableValue<? extends Number> sourceProperty, Number oldValue, Number newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -382,1 +397,3 @@\n-                            property2.set(newValue.floatValue());\n+                            float newValue = property1.get();\n+                            property2.set(newValue);\n+                            oldValue = newValue;\n@@ -384,1 +401,3 @@\n-                            property1.set(newValue.floatValue());\n+                            float newValue = property2.get();\n+                            property1.set(newValue);\n+                            oldValue = newValue;\n@@ -389,1 +408,1 @@\n-                                property1.set(oldValue.floatValue());\n+                                property1.set(oldValue);\n@@ -391,1 +410,1 @@\n-                                property2.set(oldValue.floatValue());\n+                                property2.set(oldValue);\n@@ -412,1 +431,1 @@\n-    private static class BidirectionalIntegerBinding extends BidirectionalBinding<Number>{\n+    private static class BidirectionalIntegerBinding extends BidirectionalBinding {\n@@ -415,0 +434,1 @@\n+        private int oldValue;\n@@ -419,2 +439,3 @@\n-            propertyRef1 = new WeakReference<IntegerProperty>(property1);\n-            propertyRef2 = new WeakReference<IntegerProperty>(property2);\n+            oldValue = property1.get();\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -434,1 +455,1 @@\n-        public void changed(ObservableValue<? extends Number> sourceProperty, Number oldValue, Number newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -449,1 +470,3 @@\n-                            property2.set(newValue.intValue());\n+                            int newValue = property1.get();\n+                            property2.set(newValue);\n+                            oldValue = newValue;\n@@ -451,1 +474,3 @@\n-                            property1.set(newValue.intValue());\n+                            int newValue = property2.get();\n+                            property1.set(newValue);\n+                            oldValue = newValue;\n@@ -456,1 +481,1 @@\n-                                property1.set(oldValue.intValue());\n+                                property1.set(oldValue);\n@@ -458,1 +483,1 @@\n-                                property2.set(oldValue.intValue());\n+                                property2.set(oldValue);\n@@ -479,1 +504,1 @@\n-    private static class BidirectionalLongBinding extends BidirectionalBinding<Number> {\n+    private static class BidirectionalLongBinding extends BidirectionalBinding {\n@@ -482,0 +507,1 @@\n+        private long oldValue;\n@@ -486,2 +512,3 @@\n-            propertyRef1 = new WeakReference<LongProperty>(property1);\n-            propertyRef2 = new WeakReference<LongProperty>(property2);\n+            oldValue = property1.get();\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -501,1 +528,1 @@\n-        public void changed(ObservableValue<? extends Number> sourceProperty, Number oldValue, Number newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -516,1 +543,3 @@\n-                            property2.set(newValue.longValue());\n+                            long newValue = property1.get();\n+                            property2.set(newValue);\n+                            oldValue = newValue;\n@@ -518,1 +547,3 @@\n-                            property1.set(newValue.longValue());\n+                            long newValue = property2.get();\n+                            property1.set(newValue);\n+                            oldValue = newValue;\n@@ -523,1 +554,1 @@\n-                                property1.set(oldValue.longValue());\n+                                property1.set(oldValue);\n@@ -525,1 +556,1 @@\n-                                property2.set(oldValue.longValue());\n+                                property2.set(oldValue);\n@@ -546,1 +577,1 @@\n-    private static class TypedGenericBidirectionalBinding<T> extends BidirectionalBinding<T> {\n+    private static class TypedGenericBidirectionalBinding<T> extends BidirectionalBinding {\n@@ -549,0 +580,1 @@\n+        private T oldValue;\n@@ -553,2 +585,2 @@\n-            propertyRef1 = new WeakReference<Property<T>>(property1);\n-            propertyRef2 = new WeakReference<Property<T>>(property2);\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -568,1 +600,1 @@\n-        public void changed(ObservableValue<? extends T> sourceProperty, T oldValue, T newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -583,0 +615,1 @@\n+                            T newValue = property1.getValue();\n@@ -584,0 +617,1 @@\n+                            oldValue = newValue;\n@@ -585,0 +619,1 @@\n+                            T newValue = property2.getValue();\n@@ -586,0 +621,1 @@\n+                            oldValue = newValue;\n@@ -613,1 +649,1 @@\n-    private static class TypedNumberBidirectionalBinding<T extends Number> extends BidirectionalBinding<Number> {\n+    private static class TypedNumberBidirectionalBinding<T extends Number> extends BidirectionalBinding {\n@@ -616,0 +652,1 @@\n+        private T oldValue;\n@@ -620,2 +657,2 @@\n-            propertyRef1 = new WeakReference<Property<T>>(property1);\n-            propertyRef2 = new WeakReference<Property<Number>>(property2);\n+            propertyRef1 = new WeakReference<>(property1);\n+            propertyRef2 = new WeakReference<>(property2);\n@@ -635,1 +672,1 @@\n-        public void changed(ObservableValue<? extends Number> sourceProperty, Number oldValue, Number newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -650,0 +687,1 @@\n+                            T newValue = property1.getValue();\n@@ -651,0 +689,1 @@\n+                            oldValue = newValue;\n@@ -652,1 +691,3 @@\n-                            property1.setValue((T)newValue);\n+                            T newValue = (T)property2.getValue();\n+                            property1.setValue(newValue);\n+                            oldValue = newValue;\n@@ -680,2 +721,1 @@\n-    private static class UntypedGenericBidirectionalBinding extends BidirectionalBinding<Object> {\n-\n+    private static class UntypedGenericBidirectionalBinding extends BidirectionalBinding {\n@@ -702,1 +742,1 @@\n-        public void changed(ObservableValue<? extends Object> sourceProperty, Object oldValue, Object newValue) {\n+        public void invalidated(Observable sourceProperty) {\n@@ -707,2 +747,1 @@\n-    public abstract static class StringConversionBidirectionalBinding<T> extends BidirectionalBinding<Object> {\n-\n+    public abstract static class StringConversionBidirectionalBinding<T> extends BidirectionalBinding {\n@@ -715,2 +754,2 @@\n-            stringPropertyRef = new WeakReference<Property<String>>(stringProperty);\n-            otherPropertyRef = new WeakReference<Property<T>>(otherProperty);\n+            stringPropertyRef = new WeakReference<>(stringProperty);\n+            otherPropertyRef = new WeakReference<>(otherProperty);\n@@ -734,1 +773,1 @@\n-        public void changed(ObservableValue<? extends Object> observable, Object oldValue, Object newValue) {\n+        public void invalidated(Observable observable) {\n@@ -772,1 +811,0 @@\n-\n@@ -793,1 +831,0 @@\n-\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/binding\/BidirectionalBinding.java","additions":100,"deletions":63,"binary":false,"changes":163,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-        return ExpressionHelperUtility.getChangeListeners(v).size();\n+        return ExpressionHelperUtility.getInvalidationListeners(v).size();\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/BidirectionalBindingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -284,1 +284,1 @@\n-        public void addListener(ChangeListener<? super T> listener) {\n+        public void addListener(InvalidationListener listener) {\n@@ -290,1 +290,1 @@\n-        public void removeListener(ChangeListener<? super T> listener) {\n+        public void removeListener(InvalidationListener listener) {\n@@ -306,1 +306,1 @@\n-        public void addListener(ChangeListener<? super String> listener) {\n+        public void addListener(InvalidationListener listener) {\n@@ -312,1 +312,1 @@\n-        public void removeListener(ChangeListener<? super String> listener) {\n+        public void removeListener(InvalidationListener listener) {\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/binding\/BidirectionalBindingWithConversionTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}