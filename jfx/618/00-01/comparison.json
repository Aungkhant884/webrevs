{"files":[{"patch":"@@ -57,1 +57,1 @@\n-final public class QuantumRenderer extends ThreadPoolExecutor  {\n+final class QuantumRenderer extends ThreadPoolExecutor  {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumRenderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -448,0 +448,13 @@\n+    public static void runInRenderThreadAndWait(Runnable runnable) {\n+        try {\n+            CountDownLatch latch = new CountDownLatch(1);\n+            com.sun.javafx.tk.quantum.QuantumRenderer.getInstance().execute(() -> {\n+                runnable.run();\n+                latch.countDown();\n+            });\n+            latch.await();\n+        } catch (Exception e){\n+            e.printStackTrace();\n+        }\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumToolkit.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import com.sun.javafx.tk.quantum.QuantumToolkit;\n+\n@@ -35,1 +37,0 @@\n-import java.util.concurrent.CountDownLatch;\n@@ -131,10 +132,1 @@\n-            try {\n-                CountDownLatch latch = new CountDownLatch(1);\n-                com.sun.javafx.tk.quantum.QuantumRenderer.getInstance().execute(() -> {\n-                    cleanUp();\n-                    latch.countDown();\n-                });\n-                latch.await();\n-            } catch (Exception e){\n-                e.printStackTrace();\n-            }\n+            QuantumToolkit.runInRenderThreadAndWait(() -> cleanUp());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/Disposer.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"}]}