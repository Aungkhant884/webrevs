{"files":[{"patch":"@@ -53,2 +53,3 @@\n-\n-    \/\/ Test timeout value in milliseconds\n+    \/** Default startup timeout value in seconds *\/\n+    public static final int STARTUP_TIMEOUT = 15;\n+    \/** Test timeout value in milliseconds *\/\n@@ -304,1 +305,1 @@\n-     * actually launched within 15 seconds.\n+     * actually launched within {@link #STARTUP_TIMEOUT} (15 seconds).\n@@ -318,1 +319,1 @@\n-        launch(startupLatch, 15, applicationClass, args);\n+        launch(startupLatch, STARTUP_TIMEOUT, applicationClass, args);\n@@ -325,1 +326,1 @@\n-     * The application being started must call {@link CountdownLatch#countDown()} once to signal\n+     * The application being started must call {@link java.util.concurrent.CountdownLatch#countDown()} once to signal\n@@ -340,1 +341,4 @@\n-        new Thread(() -> Application.launch(applicationClass, args)).start();\n+        new Thread(() -> {\n+            Application.launch(applicationClass, args);\n+        }).start();\n+\n@@ -351,1 +355,1 @@\n-     * This Runnable must call {@link CountdownLatch#countDown()} once to signal\n+     * This Runnable must call {@link java.util.concurrent.CountDownLatch#countDown()} once to signal\n@@ -353,1 +357,1 @@\n-     * within 15 seconds.\n+     * within {@link #STARTUP_TIMEOUT} (15 seconds).\n@@ -362,1 +366,1 @@\n-            Assert.assertTrue(msg, startupLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n+            Assert.assertTrue(msg, startupLatch.await(STARTUP_TIMEOUT, TimeUnit.SECONDS));\n","filename":"tests\/system\/src\/test\/java\/test\/util\/Util.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"}]}