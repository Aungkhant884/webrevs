{"files":[{"patch":"@@ -465,3 +465,0 @@\n-\n-    \/\/ --- Placeholder Node\n-    private ObjectProperty<Node> placeholder;\n@@ -469,5 +466,4 @@\n-     * This Node is shown to the user when the listview has no content to show.\n-     * This may be the case because the table model has no data in the first\n-     * place or that a filter has been applied to the list model, resulting\n-     * in there being nothing to show the user..\n-     * @return the placeholder property for this ListView\n+     * The {@code Node} to show to the user when the {@code ListView} has no content to show.\n+     * This happens when the list model has no data or when a filter has been applied to the list model, resulting in\n+     * there being nothing to show the user.\n+     *\n@@ -476,0 +472,1 @@\n+    private ObjectProperty<Node> placeholder;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListView.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * A native system may by default execute all submitted runnables before\n+ * A native system may, by default, execute all submitted runnables before\n@@ -37,2 +37,2 @@\n- * runnable that might have already been submitted by client code, must be\n- * invoked in the context of the outer event loop. To satisfy this requirement\n+ * runnable that might have already been submitted by client code must be\n+ * invoked in the context of the outer event loop. To satisfy this requirement,\n@@ -40,2 +40,2 @@\n- * for fine grain control over executing the deferred tasks when it comes to\n- * entering\/leaving nested event loops despite of native system limitations.\n+ * for a fine grained control over the execution of the deferred tasks when it comes to\n+ * entering\/leaving nested event loops despite native system limitations.\n@@ -85,1 +85,1 @@\n-         * Tells whether the runnbale has finished execution.\n+         * Tells whether the runnable has finished execution.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/InvokeLaterDispatcher.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,2 @@\n-    static float   overrideUIScale;\n+\n+    static float overrideUIScale;\n@@ -114,0 +115,1 @@\n+\n@@ -129,1 +131,1 @@\n-    \/\/ returng toolkit window HWND\n+    \/\/ returning toolkit window HWND\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3277,1 +3277,1 @@\n-                System.out.println(\"Scene.DnDGesture.processDropEnd() - UNEXPECTD - source is NULL\");\n+                System.out.println(\"Scene.DnDGesture.processDropEnd() - UNEXPECTED - source is NULL\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1457,3 +1457,3 @@\n-     * Defines whether the shape is centered within the Region's width or height.\n-     * {@code true} means the shape centered within the Region's width and height,\n-     * {@code false} means the shape is positioned at its source position.\n+     * Defines whether the shape is centered within the {@code Region}'s width and height.\n+     * When {@code true}, the shape is centered within the {@code Region}'s width and height,\n+     * otherwise the shape is positioned at its source position.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Region.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,3 +62,3 @@\n- * TextFlow is special layout designed to lay out rich text.\n- * It can be used to layout several {@link Text} nodes in a single text flow.\n- * The TextFlow uses the text and the font of each {@link Text} node inside of it\n+ * A special layout designed to lay out rich text.\n+ * It can be used to lay out several {@link Text} nodes in a single text flow.\n+ * {@code TextFlow} uses the text and the font of each {@code Text} node inside of it,\n@@ -66,2 +66,2 @@\n- * A single {@link Text} node can span over several lines due to wrapping, and\n- * the visual location of {@link Text} node can differ from the logical location\n+ * A single {@code Text} node can span over several lines due to wrapping, and\n+ * the visual location of the {@code Text} node can differ from the logical location\n@@ -71,1 +71,1 @@\n- * Any Node, other than Text, will be treated as an embedded object in the\n+ * Any {@code Node} other than {@code Text} will be treated as an embedded object in the\n@@ -76,2 +76,2 @@\n- * When a {@link Text} node is inside of a TextFlow, some of its properties are ignored.\n- * For example, the x and y properties of the {@link Text} node are ignored since\n+ * When a {@code Text} node is inside a {@code TextFlow}, some of its properties are ignored.\n+ * For example, the {@code x} and {@code y} properties of the {@code Text} node are ignored since\n@@ -79,5 +79,5 @@\n- * width in the {@link Text} node is ignored since the width used for wrapping\n- * is the TextFlow's width. The value of the <code>pickOnBounds<\/code> property\n- * of a {@link Text} is set to <code>false<\/code> when it is laid out by the\n- * TextFlow. This happens because the content of a single {@link Text} node can\n- * divided and placed in the different locations on the TextFlow (usually due to\n+ * width in the {@code Text} node is ignored since the width used for wrapping\n+ * is the {@code TextFlow}'s width. The value of the {@code pickOnBounds} property\n+ * of a {@code Text} is set to {@code false} when it is laid out by the\n+ * {@code TextFlow}. This happens because the content of a single {@code Text} node can be\n+ * divided and placed in different locations in the {@code TextFlow} (usually due to\n@@ -88,1 +88,1 @@\n- * It can be specified by the application by setting the textflow's preferred\n+ * It can be specified by the application by setting the {@code TextFlow}'s preferred\n@@ -90,1 +90,1 @@\n- * with to Double.MAX_VALUE or Region.USE_COMPUTED_SIZE.\n+ * with to {@code Double.MAX_VALUE} or {@code Region.USE_COMPUTED_SIZE}.\n@@ -93,1 +93,1 @@\n- * Paragraphs are separated by {@code '\\n'} present in any Text child.\n+ * Paragraphs are separated by {@code '\\n'} present in any {@code Text} child.\n@@ -108,1 +108,1 @@\n- * TextFlow lays out each managed child regardless of the child's visible property value;\n+ * {@code TextFlow} lays out each managed child regardless of the child's visible property value;\n@@ -112,1 +112,1 @@\n- * TextFlow may be styled with backgrounds and borders using CSS.  See\n+ * {@code TextFlow} may be styled with backgrounds and borders using CSS. See its\n@@ -118,2 +118,2 @@\n- * A textflow's parent will resize the textflow within the textflow's range\n- * during layout. By default the textflow computes this range based on its content\n+ * A {@code TextFlow}'s parent will resize the {@code TextFlow} within the {@code TextFlow}'s range\n+ * during layout. By default, the {@code TextFlow} computes this range based on its content\n@@ -136,1 +136,1 @@\n- * A textflow's unbounded maximum width and height are an indication to the parent that\n+ * A {@code TextFlow}'s unbounded maximum width and height are an indication to the parent that\n@@ -139,2 +139,2 @@\n- * TextFlow provides properties for setting the size range directly.  These\n- * properties default to the sentinel value Region.USE_COMPUTED_SIZE, however the\n+ * {@code TextFlow} provides properties for setting the size range directly. These\n+ * properties default to the sentinel value {@code Region.USE_COMPUTED_SIZE}, however the\n@@ -146,1 +146,1 @@\n- * to Region.USE_COMPUTED_SIZE.\n+ * to {@code Region.USE_COMPUTED_SIZE}.\n@@ -148,3 +148,3 @@\n- * TextFlow does not clip its content by default, so it is possible that childrens'\n- * bounds may extend outside its own bounds if a child's pref size is larger than\n- * the space textflow has to allocate for it.<\/p>\n+ * {@code TextFlow} does not clip its content by default, so it is possible that children's\n+ * bounds may extend outside of its own bounds if a child's preferred size is larger than\n+ * the space the {@code TextFlow} has to allocate for it.<\/p>\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/TextFlow.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}