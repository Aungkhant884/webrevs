{"files":[{"patch":"@@ -178,2 +178,0 @@\n-    private EventHandler<MouseEvent> ml;\n-\n@@ -221,1 +219,1 @@\n-        ml = event -> {\n+        EventHandler<MouseEvent> ml = event -> {\n@@ -284,6 +282,1 @@\n-        \/\/ flow related cleanup\n-        \/\/ leaking without nulling factory\n-        flow.setCellFactory(null);\n-        \/\/ for completeness - but no effect with\/out?\n-        flow.getVbar().removeEventFilter(MouseEvent.MOUSE_PRESSED, ml);\n-        flow.getHbar().removeEventFilter(MouseEvent.MOUSE_PRESSED, ml);\n+        getChildren().remove(flow);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ListViewSkin.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -139,5 +139,0 @@\n-\n-    private EventHandler<MouseEvent> ml;\n-\n-\n-\n@@ -173,1 +168,1 @@\n-        ml = event -> {\n+        EventHandler<MouseEvent> ml = event -> {\n@@ -238,7 +233,1 @@\n-        \/\/ leaking without nulling factory\n-        flow.setCellFactory(null);\n-        \/\/ for completeness - but no effect with\/out? Same as in ListViewSkin\n-        \/\/ don't without seeing any effect - it's not on the skinnable, but on a child, so shouldn't\n-        flow.getVbar().removeEventFilter(MouseEvent.MOUSE_PRESSED, ml);\n-        flow.getHbar().removeEventFilter(MouseEvent.MOUSE_PRESSED, ml);\n-\n+        getChildren().remove(flow);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeViewSkin.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import com.sun.javafx.tk.Toolkit;\n+\n@@ -42,0 +44,1 @@\n+import javafx.scene.Scene;\n@@ -54,0 +57,2 @@\n+import javafx.scene.control.Separator;\n+import javafx.scene.control.Skin;\n@@ -61,0 +66,3 @@\n+import javafx.scene.layout.Pane;\n+import javafx.scene.layout.VBox;\n+import javafx.stage.Stage;\n@@ -81,0 +89,1 @@\n+        \/\/ FIXME: JDK-8265406 - fragile test pattern\n@@ -87,0 +96,26 @@\n+    \/**\n+     * default skin -> set alternative while showing\n+     *\/\n+    @Test\n+    public void testMemoryLeakAlternativeSkinShowing() {\n+        showControl(control, true);\n+        Skin<?> replacedSkin = replaceSkin(control);\n+        WeakReference<?> weakRef = new WeakReference<>(replacedSkin);\n+        assertNotNull(weakRef.get());\n+        \/\/ beware: this is important - we might get false reds without!\n+        Toolkit.getToolkit().firePulse();\n+        replacedSkin = null;\n+        attemptGC(weakRef);\n+        assertEquals(\"Skin must be gc'ed\", null, weakRef.get());\n+    }\n+\n+    @Test\n+    public void testControlChildren() {\n+        installDefaultSkin(control);\n+        int childCount = control.getChildrenUnmodifiable().size();\n+        String skinClass = control.getSkin().getClass().getSimpleName();\n+        replaceSkin(control);\n+        assertEquals(skinClass + \" must remove direct children that it has added\",\n+                childCount, control.getChildrenUnmodifiable().size());\n+    }\n+\n@@ -109,0 +144,2 @@\n+                \/\/ @Ignore(\"8273071\")\n+                Separator.class,\n@@ -129,0 +166,30 @@\n+    private Scene scene;\n+    private Stage stage;\n+    private Pane root;\n+\n+   \/**\n+     * Ensures the control is shown in an active scenegraph. Requests\n+     * focus on the control if focused == true.\n+     *\n+     * @param control the control to show\n+     * @param focused if true, requests focus on the added control\n+     *\/\n+    protected void showControl(Control control, boolean focused) {\n+        if (root == null) {\n+            root = new VBox();\n+            scene = new Scene(root);\n+            stage = new Stage();\n+            stage.setScene(scene);\n+        }\n+        if (!root.getChildren().contains(control)) {\n+            root.getChildren().add(control);\n+        }\n+        stage.show();\n+        if (focused) {\n+            stage.requestFocus();\n+            control.requestFocus();\n+            assertTrue(control.isFocused());\n+            assertSame(control, scene.getFocusOwner());\n+        }\n+    }\n+\n@@ -144,0 +211,1 @@\n+        if (stage != null) stage.hide();\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinMemoryLeakTest.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"modified"}]}