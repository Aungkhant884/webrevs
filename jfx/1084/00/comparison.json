{"files":[{"patch":"@@ -187,1 +187,2 @@\n-MAC.glass.nativeSource = file(\"${project(\"graphics\").projectDir}\/src\/main\/native-glass\/mac\")\n+MAC.glass.nativeSource = [file(\"${project(\"graphics\").projectDir}\/src\/main\/native-glass\/mac\"),\n+        file(\"${project(\"graphics\").projectDir}\/src\/main\/native-glass\/mac\/a11y\")]\n","filename":"buildSrc\/mac.gradle","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -636,2 +636,2 @@\n-    \/* Creates a GlassAccessible linked to the caller (GlobalRef) *\/\n-    private native long _createGlassAccessible();\n+    \/* Creates a native accessible peer linked to the caller (GlobalRef) *\/\n+    private native long _createAccessiblePeer(String forRole);\n@@ -639,2 +639,2 @@\n-    \/* Releases the GlassAccessible and deletes the GlobalRef *\/\n-    private native void _destroyGlassAccessible(long accessible);\n+    \/* Releases the native accessible peer and deletes the GlobalRef *\/\n+    private native void _destroyAccessiblePeer(long accessible);\n@@ -658,4 +658,0 @@\n-        this.peer = _createGlassAccessible();\n-        if (this.peer == 0L) {\n-            throw new RuntimeException(\"could not create platform accessible\");\n-        }\n@@ -670,1 +666,1 @@\n-            _destroyGlassAccessible(peer);\n+            _destroyAccessiblePeer(peer);\n@@ -809,0 +805,9 @@\n+        if (this.peer == 0L) {\n+            AccessibleRole role = (AccessibleRole) getAttribute(ROLE);\n+            if (role == null) role = AccessibleRole.NODE;\n+            this.peer = _createAccessiblePeer(role.toString());\n+            if (this.peer == 0L) {\n+                throw new RuntimeException(\"could not create platform accessible\");\n+            }\n+        }\n+\n@@ -967,0 +972,5 @@\n+\n+    private long accessibilityAttributeRole() {\n+        return -1;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacAccessible.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -523,25 +523,0 @@\n-\/*\n- * Class:     com_sun_glass_ui_mac_MacAccessible\n- * Method:    _createGlassAccessible\n- * Signature: ()J\n- *\/\n-JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_mac_MacAccessible__1createGlassAccessible\n-  (JNIEnv *env, jobject jAccessible)\n-{\n-    GlassAccessible* accessible = NULL;\n-    accessible = [[GlassAccessible alloc] initWithEnv: env accessible: jAccessible];\n-    return ptr_to_jlong(accessible);\n-}\n-\n-\/*\n- * Class:     com_sun_glass_ui_mac_MacAccessible\n- * Method:    _destroyGlassAccessible\n- * Signature: (J)V\n- *\/\n-JNIEXPORT void JNICALL Java_com_sun_glass_ui_mac_MacAccessible__1destroyGlassAccessible\n-  (JNIEnv *env, jobject jAccessible, jlong macAccessible)\n-{\n-    GlassAccessible* accessible = (GlassAccessible*)jlong_to_ptr(macAccessible);\n-    [accessible release];\n-}\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassAccessible.m","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import <Cocoa\/Cocoa.h>\n+#import <jni.h>\n+\n+@interface AccessibleBase : NSAccessibilityElement {\n+@private\n+jobject jAccessible;\n+}\n+- (id)initWithEnv:(JNIEnv*)env accessible:(jobject)jAccessible;\n+- (jobject)getJAccessible;\n+- (NSRect)accessibilityFrame;\n+- (id)accessibilityParent;\n+- (BOOL)isAccessibilityElement;\n+- (BOOL)performAccessibleAction:(jlong)actionId;\n++ (void) initializeRolesMap;\n+@end\n+\n+jmethodID jAccessibilityAttributeNames;\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/AccessibleBase.h","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,174 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"AccessibleBase.h\"\n+#import \"GlassMacros.h\"\n+#import \"GlassAccessible.h\"\n+#import \"com_sun_glass_ui_mac_MacAccessible.h\"\n+#import \"common.h\"\n+\n+static NSMutableDictionary * rolesMap;\n+\n+@implementation AccessibleBase\n+\n++ (void) initializeRolesMap {\n+    \/*\n+     * Here we should keep all the mapping between the accessibility roles and implementing classes\n+     *\/\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:1];\n+\n+    [rolesMap setObject:@\"ButtonAccessibility\" forKey:@\"BUTTON\"];\n+}\n+\n++ (Class) getComponentAccessibilityClass:(NSString *)role\n+{\n+    if (rolesMap == nil) {\n+        [self initializeRolesMap];\n+    }\n+\n+    NSString *className = [rolesMap objectForKey:role];\n+    if (className != nil) {\n+        return NSClassFromString(className);\n+    }\n+    return [GlassAccessible class];\n+}\n+\n+- (id)initWithEnv:(JNIEnv*)env accessible:(jobject)acc\n+{\n+    self = [super init];\n+    if (self != nil) {\n+        self->jAccessible = (*env)->NewGlobalRef(env, acc);\n+    }\n+    return self;\n+}\n+\n+- (void)dealloc\n+{\n+    GET_MAIN_JENV_NOWARN;\n+    if (env != NULL) {\n+        (*env)->DeleteGlobalRef(env, jAccessible);\n+        GLASS_CHECK_EXCEPTION(env);\n+    }\n+    jAccessible = NULL;\n+    [super dealloc];\n+}\n+\n+- (jobject)getJAccessible\n+{\n+    return self->jAccessible;\n+}\n+\n+- (id)accessibilityValue\n+{\n+    jobject jresult = NULL;\n+    GET_MAIN_JENV;\n+    if (env == NULL) return NULL;\n+    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXValue\");\n+    GLASS_CHECK_EXCEPTION(env);\n+    return variantToID(env, jresult);\n+}\n+\n+- (NSString *)accessibilityLabel\n+{\n+    jobject jresult = NULL;\n+    GET_MAIN_JENV;\n+    if (env == NULL) return NULL;\n+    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXTitle\");\n+    GLASS_CHECK_EXCEPTION(env);\n+    return variantToID(env, jresult);\n+}\n+\n+- (id)accessibilityParent\n+{\n+    jobject jresult = NULL;\n+    GET_MAIN_JENV;\n+    if (env == NULL) return NULL;\n+    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXParent\");\n+    GLASS_CHECK_EXCEPTION(env);\n+    return variantToID(env, jresult);\n+}\n+\n+\/\/ Actions support\n+- (BOOL)performAccessibleAction:(jlong)actionId\n+{\n+    GET_MAIN_JENV;\n+    if (env == NULL) return FALSE;\n+    (*env)->CallVoidMethod(env, self->jAccessible, jAccessibilityPerformAction, actionId);\n+    GLASS_CHECK_EXCEPTION(env);\n+    return TRUE;\n+}\n+\n+\n+- (NSRect)accessibilityFrame\n+{\n+    jobject jresult = NULL;\n+    GET_MAIN_JENV;\n+    if (env == NULL) return NSZeroRect;\n+    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXPosition\");\n+    GLASS_CHECK_EXCEPTION(env);\n+    NSPoint position = [variantToID(env, jresult) pointValue];\n+    jresult = (jobject)(*env)->CallLongMethod(env, self->jAccessible, jAccessibilityAttributeValue, (jlong)@\"AXSize\");\n+    GLASS_CHECK_EXCEPTION(env);\n+    NSSize size = [variantToID(env, jresult) sizeValue];\n+    return NSMakeRect(position.x, position.y, size.width, size.height);\n+}\n+\n+\n+- (BOOL)isAccessibilityElement\n+{\n+    return YES;\n+}\n+\n+@end\n+\n+\/*\n+ * Class:     com_sun_glass_ui_mac_MacAccessible\n+ * Method:    _createAccessiblePeer\n+ * Signature: (Ljava\/lang\/String;)J\n+ *\/\n+JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_mac_MacAccessible__1createAccessiblePeer\n+        (JNIEnv *env, jobject jAccessible, jstring forRole)\n+{\n+    NSString *roleName = jStringToNSString(env, forRole);\n+    Class classType = [AccessibleBase getComponentAccessibilityClass:roleName];\n+    GlassAccessible* accessible = NULL;\n+    accessible = [[classType alloc] initWithEnv: env accessible: jAccessible];\n+    return ptr_to_jlong(accessible);\n+}\n+\n+\/*\n+ * Class:     com_sun_glass_ui_mac_MacAccessible\n+ * Method:    _destroyAccessiblePeer\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_glass_ui_mac_MacAccessible__1destroyAccessiblePeer\n+(JNIEnv *env, jobject jAccessible, jlong macAccessible)\n+{\n+    NSObject* accessible = (NSObject*)jlong_to_ptr(macAccessible);\n+    if ([accessible respondsToSelector:@selector(release)]) {\n+        [accessible release];\n+    }\n+\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/AccessibleBase.m","additions":174,"deletions":0,"binary":false,"changes":174,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"AccessibleBase.h\"\n+#import <AppKit\/AppKit.h>\n+\n+@interface ButtonAccessibility : AccessibleBase <NSAccessibilityButton> {\n+\n+};\n+- (NSAccessibilityRole)accessibilityRole;\n+- (NSString *)accessibilityLabel;\n+- (BOOL)accessibilityPerformPress;\n+- (NSRect)accessibilityFrame;\n+@end\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/ButtonAccessibility.h","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ButtonAccessibility.h\"\n+\n+\/*\n+ * Implementation of the accessibility peer for the pushbutton role\n+ *\/\n+@implementation ButtonAccessibility\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    return NSAccessibilityButtonRole;\n+}\n+\n+- (NSString *)accessibilityLabel\n+{\n+    return [super accessibilityLabel];\n+}\n+\n+- (BOOL)accessibilityPerformPress\n+{\n+    return [self performAccessibleAction:(jlong)@\"AXPress\"];\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+@end\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/a11y\/ButtonAccessibility.m","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}