{"files":[{"patch":"@@ -372,0 +372,2 @@\n+\n+        indexAtStartEdit = getIndex();\n@@ -377,2 +379,2 @@\n-                    getIndex()));\n-            list.edit(getIndex());\n+                    indexAtStartEdit));\n+            list.edit(indexAtStartEdit);\n@@ -382,1 +384,0 @@\n-        indexAtStartEdit = getIndex();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -335,0 +335,1 @@\n+\n@@ -346,0 +347,3 @@\n+        if (table != null) {\n+            table.edit(editingCellAtStartEdit.getRow(), editingCellAtStartEdit.getTableColumn());\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -380,0 +380,2 @@\n+\n+        treeItemAtStartEdit = getTreeItem();\n@@ -384,1 +386,1 @@\n-                    getTreeItem(),\n+                    treeItemAtStartEdit,\n@@ -387,1 +389,1 @@\n-\n+            tree.edit(treeItemAtStartEdit);\n@@ -390,1 +392,0 @@\n-        treeItemAtStartEdit = getTreeItem();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeCell.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -352,0 +352,1 @@\n+\n@@ -363,0 +364,3 @@\n+        if (table != null) {\n+            table.edit(editingCellAtStartEdit.getRow(), editingCellAtStartEdit.getTableColumn());\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -544,0 +544,22 @@\n+    @Test\n+    public void testEditStartOnCellUpdatesControl() {\n+        setupForEditing();\n+        int editingRow = 1;\n+        cell.updateIndex(editingRow);\n+        TablePosition<?,?> editingCell = new TablePosition<>(table, editingRow, editingColumn);\n+        cell.startEdit();\n+        assertEquals(\"table must be editing at\", editingCell, table.getEditingCell());\n+    }\n+\n+    @Test\n+    public void testEditStartOnCellNoColumnUpdatesControl() {\n+        int editingRow = 1;\n+        \/\/ note: cell index must be != -1 because table.edit(-1, null) sets editingCell to null\n+        cell.updateIndex(editingRow);\n+        setupForcedEditing(table, null);\n+        TablePosition<?,?> editingCell = new TablePosition<>(table, editingRow, null);\n+        cell.startEdit();\n+        assertTrue(cell.isEditing());\n+        assertEquals(\"table must be editing at\", editingCell, table.getEditingCell());\n+    }\n+\n@@ -589,3 +611,1 @@\n-         \/\/ FIXME JDK-8187474\n-         \/\/ should use cell.startEdit for consistency with the following tests\n-         table.edit(editingIndex, editingColumn);\n+         cell.startEdit();\n@@ -717,4 +737,0 @@\n-     \/**\n-      *  Note: this is a false green until JDK-8187474 (update control editing location) is fixed\n-      *\/\n-     @Ignore(\"JDK-8187474\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -602,1 +602,0 @@\n-    @Ignore \/\/ TODO file bug!\n@@ -851,1 +850,2 @@\n-        cell.updateIndex(tree.getExpandedItemCount());\n+        \/\/ update cell's treeItem so there is something to update\n+        cell.updateTreeItem(new TreeItem<>(\"not-contained\"));\n@@ -859,4 +859,0 @@\n-    \/**\n-     *  Note: this is a false green until JDK-8187474 (update control editing location) is fixed\n-     *\/\n-    @Ignore(\"JDK-8187474\")\n@@ -867,1 +863,2 @@\n-        cell.updateIndex(tree.getExpandedItemCount());\n+        \/\/ update cell's treeItem so there is something to update\n+        cell.updateTreeItem(new TreeItem<>(\"not-contained\"));\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeCellTest.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -307,1 +307,0 @@\n-    @Ignore \/\/ TODO file bug!\n@@ -309,2 +308,1 @@\n-        tree.setEditable(true);\n-        cell.updateTreeTableView(tree);\n+        setupForEditing();\n@@ -316,0 +314,10 @@\n+    @Test public void editCellWithTreeNoColumnResultsInUpdatedEditingIndexProperty() {\n+        \/\/ note: cell index must be != -1 because table.edit(-1, null) sets editingCell to null\n+        cell.updateIndex(1);\n+        setupForcedEditing(tree, null);\n+        cell.startEdit();\n+        assertTrue(cell.isEditing());\n+        assertNotNull(tree.getEditingCell());\n+        assertEquals(apples, tree.getEditingCell().getTreeItem());\n+    }\n+\n@@ -914,3 +922,1 @@\n-         \/\/ FIXME JDK-8187474\n-         \/\/ should use cell.startEdit for consistency with the following tests\n-         tree.edit(editingIndex, editingColumn);\n+         cell.startEdit();\n@@ -1041,4 +1047,0 @@\n-     \/**\n-      *  Note: this would be a false green until JDK-8187474 (update control editing location) is fixed\n-      *\/\n-     @Ignore(\"JDK-8187474\")\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}