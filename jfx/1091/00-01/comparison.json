{"files":[{"patch":"@@ -455,7 +455,17 @@\n-                \/\/ Calculate insertion index for surrogate pair text in TextFlow\n-                \/\/ when leading is false\n-                if (run.getTextSpan() != null) {\n-                    String txt = run.getTextSpan().getText();\n-                    int relIdx = charIndex - run.getStart();\n-                    if (Character.isHighSurrogate(txt.charAt(relIdx)) && !leading) {\n-                        insertionIndex = charIndex + 2;\n+                insertionIndex = charIndex;\n+                String txt = new String(getText());\n+                if (!leading) {\n+                    if (txt != null) {\n+                        int next;\n+                        BreakIterator charIterator = BreakIterator.getCharacterInstance();\n+                        synchronized(charIterator) {\n+                            charIterator.setText(txt);\n+                            next = charIterator.following(insertionIndex);\n+                        }\n+                        if (next == BreakIterator.DONE) {\n+                            insertionIndex += 1;\n+                        } else {\n+                            insertionIndex = next;\n+                        }\n+                    } else {\n+                        insertionIndex += 1;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismTextLayout.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import javafx.stage.WindowEvent;\n@@ -60,2 +59,2 @@\n- * There is 1 test in this file.\n- * Steps for testTextFlowSurrogatePairInsertionIndex()\n+ * There are 4 tests in this file.\n+ * Steps for testTextFlowInsertionIndexUsingTwoEmojis()\n@@ -67,0 +66,21 @@\n+ *\n+ * Steps for testTextFlowInsertionIndexUsingMultipleEmojis()\n+ * 1. Create a TextFlow. Add Text node with multiple emojis (surrogate pairs).\n+ * 2. Move the cursor to the first character and click.\n+ * 3. Insertion index should be same as character index.\n+ * 4. Move the cursor continously till last character and check that\n+ *    character index and insertion index increase monitonically as expected.\n+ *\n+ * Steps for testTextFlowInsertionIndexUsingTextAndEmojis()\n+ * 1. Create a TextFlow. Add Text node with multiple emojis (surrogate pairs).\n+ * 2. Move the cursor to the first character and click.\n+ * 3. Insertion index should be same as character index.\n+ * 4. Move the cursor continously till last character and check that\n+ *    character index and insertion index increase monitonically as expected.\n+ *\n+ * Steps for testTextFlowInsertionIndexUsingEmbeddedTextNodes()\n+ * 1. Create a TextFlow. Add a Text node with text and another with emojis.\n+ * 2. Move the cursor to the first character and click.\n+ * 3. Insertion index should be same as character index.\n+ * 4. Move the cursor continously till last character and check that\n+ *    character index and insertion index increase monitonically as expected.\n@@ -71,0 +91,1 @@\n+    static CountDownLatch textSetLatch;\n@@ -73,0 +94,2 @@\n+    static Text text;\n+    static Text emoji;\n@@ -77,0 +100,4 @@\n+    final int Y_OFFSET = 25;\n+    final int X_LEADING_OFFSET = 10;\n+    final int X_TRAILING_OFFSET = 40;\n+\n@@ -87,2 +114,1 @@\n-            robot.mousePress(MouseButton.PRIMARY);\n-            robot.mouseRelease(MouseButton.PRIMARY);\n+            robot.mouseClick(MouseButton.PRIMARY);\n@@ -95,4 +121,3 @@\n-        mouseClick(textFlow.getLayoutX() + (textFlow.getWidth() \/ 4) - 10,\n-                    textFlow.getLayoutY() + textFlow.getHeight() \/ 2);\n-        Thread.sleep(200); \/\/ Small delay to wait for cursor to move and mouse click.\n-        Util.waitForLatch(mouseClickLatch, 10, \"Timeout waiting for mouse click\");\n+        mouseClick(textFlow.getLayoutX() + X_LEADING_OFFSET,\n+                    textFlow.getLayoutY() + Y_OFFSET);\n+        Util.waitForLatch(mouseClickLatch, 5, \"Timeout waiting for mouse click\");\n@@ -103,4 +128,66 @@\n-        mouseClick(textFlow.getLayoutX() + (textFlow.getWidth() \/ 4) + 10,\n-                    textFlow.getLayoutY() + textFlow.getHeight() \/ 2);\n-        Thread.sleep(200); \/\/ Small delay to wait for cursor to move and mouse click.\n-        Util.waitForLatch(mouseClickLatch, 10, \"Timeout waiting for mouse click\");\n+        mouseClick(textFlow.getLayoutX() + X_TRAILING_OFFSET,\n+                    textFlow.getLayoutY() + Y_OFFSET);\n+        Util.waitForLatch(mouseClickLatch, 5, \"Timeout waiting for mouse click\");\n+    }\n+\n+    private void moveMouseByPixel(int c) throws Exception {\n+        mouseClickLatch = new CountDownLatch(1);\n+        mouseClick(textFlow.getLayoutX() + X_LEADING_OFFSET + c,\n+                    textFlow.getLayoutY() + Y_OFFSET);\n+        Util.waitForLatch(mouseClickLatch, 5, \"Timeout waiting for mouse click\");\n+    }\n+\n+    private void addTwoEmojis() {\n+        textSetLatch = new CountDownLatch(1);\n+        Util.runAndWait(() -> {\n+            text = new Text(\"😊😇\");\n+            text.setFont(new Font(48));\n+            textFlow.getChildren().clear();\n+            textFlow.getChildren().setAll(text);\n+\n+            textSetLatch.countDown();\n+        });\n+        Util.waitForLatch(textSetLatch, 5, \"Timeout waiting for text intialization.\");\n+    }\n+\n+    private void addMultipleEmojis() {\n+        textSetLatch = new CountDownLatch(1);\n+        Util.runAndWait(() -> {\n+            text = new Text(\"😊😇❤️💙🦋🏁🔥\");\n+            text.setFont(new Font(48));\n+            textFlow.getChildren().clear();\n+            textFlow.getChildren().setAll(text);\n+\n+            textSetLatch.countDown();\n+        });\n+        Util.waitForLatch(textSetLatch, 5, \"Timeout waiting for text intialization.\");\n+    }\n+\n+    private void addTextAndEmojis() {\n+        textSetLatch = new CountDownLatch(1);\n+        Util.runAndWait(() -> {\n+            text = new Text(\"Text 😊😇❤️💙🦋🔥\");\n+            text.setFont(new Font(48));\n+            textFlow.getChildren().clear();\n+            textFlow.getChildren().setAll(text);\n+\n+            textSetLatch.countDown();\n+        });\n+        Util.waitForLatch(textSetLatch, 5, \"Timeout waiting for text intialization.\");\n+    }\n+\n+    private void addTwoTextNodes() {\n+        textSetLatch = new CountDownLatch(1);\n+        Util.runAndWait(() -> {\n+            text = new Text(\"Text\");\n+            text.setFont(new Font(48));\n+\n+            emoji = new Text(\"😊😇\");\n+            emoji.setFont(new Font(48));\n+\n+            textFlow.getChildren().clear();\n+            textFlow.getChildren().setAll(text, emoji);\n+\n+            textSetLatch.countDown();\n+        });\n+        Util.waitForLatch(textSetLatch, 5, \"Timeout waiting for text intialization.\");\n@@ -110,1 +197,2 @@\n-    public void testTextFlowSurrogatePairInsertionIndex() throws Exception {\n+    public void testTextFlowInsertionIndexUsingTwoEmojis() throws Exception {\n+        addTwoEmojis();\n@@ -120,0 +208,56 @@\n+    @Test\n+    public void testTextFlowInsertionIndexUsingMultipleEmojis() throws Exception {\n+        addMultipleEmojis();\n+\n+        int textLength = text.getText().length();\n+        int index = 0;\n+        while (charIndex < textLength - 2) {\n+            moveMouseByPixel(index);\n+            if (isLeading) {\n+                Assert.assertEquals(charIndex, insertionIndex);\n+            } else {\n+                Assert.assertEquals(charIndex, insertionIndex - 2);\n+            }\n+            index += 5;\n+        }\n+    }\n+\n+    @Test\n+    public void testTextFlowInsertionIndexUsingTextAndEmojis() throws Exception {\n+        addTextAndEmojis();\n+\n+        int textLength = text.getText().length();\n+        int index = 0;\n+        while (charIndex < textLength - 2) {\n+            moveMouseByPixel(index);\n+            if (isLeading) {\n+                Assert.assertEquals(charIndex, insertionIndex);\n+            } else if (!isLeading && charIndex < 5) {\n+                Assert.assertEquals(charIndex, insertionIndex - 1);\n+            } else {\n+                Assert.assertEquals(charIndex, insertionIndex - 2);\n+            }\n+            index += 5;\n+        }\n+    }\n+\n+    @Test\n+    public void testTextFlowInsertionIndexUsingEmbeddedTextNodes() throws Exception {\n+        addTwoTextNodes();\n+\n+        int textLength = text.getText().length();\n+        textLength += emoji.getText().length();\n+        int index = 0;\n+        while (charIndex < textLength - 2) {\n+            moveMouseByPixel(index);\n+            if(isLeading) {\n+                Assert.assertEquals(charIndex, insertionIndex);\n+            } else if (!isLeading && charIndex < 4) {\n+                Assert.assertEquals(charIndex, insertionIndex - 1);\n+            } else {\n+                Assert.assertEquals(charIndex, insertionIndex - 2);\n+            }\n+            index += 5;\n+        }\n+    }\n+\n@@ -158,5 +302,2 @@\n-            Text text = new Text(\"😊😇\");\n-            text.setFont(new Font(48));\n-            textFlow = new TextFlow(text);\n-\n-            scene = new Scene(textFlow);\n+            textFlow = new TextFlow();\n+            scene = new Scene(textFlow, 500, 100);\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/TextFlowSurrogatePairInsertionIndexTest.java","additions":160,"deletions":19,"binary":false,"changes":179,"status":"modified"}]}