{"files":[{"patch":"@@ -141,1 +141,1 @@\n-    @Test public void testSVGRenderingWithMask() {\n+    @Test public void testSVGRectRenderingWithMask() {\n@@ -183,0 +183,71 @@\n+\n+    @Test public void testSVGRoundedRectRenderingWithMask() {\n+        loadContent(\n+                    \"<html>\\n\" +\n+                    \"  <body style='margin: 0px 0px;'>\\n\" +\n+                    \"    <svg width='200' height='200'>\\n\" +\n+                    \"      <defs>\\n\" +\n+                    \"        <linearGradient id='Gradient'>\\n\" +\n+                    \"          <stop offset='0' stop-color='white' stop-opacity='0' \/>\\n\" +\n+                    \"          <stop offset='1' stop-color='white' stop-opacity='1' \/>\\n\" +\n+                    \"        <\/linearGradient>\\n\" +\n+                    \"        <mask id='Mask'>\\n\" +\n+                    \"          <rect x='0' y='0' width='200' height='200' fill='url(#Gradient)' \/>\\n\" +\n+                    \"        <\/mask>\\n\" +\n+                    \"      <\/defs>\\n\" +\n+                    \"      <rect x='0' y='0' width='200' height='200' rx='20' ry='20' fill='green' \/>\\n\" +\n+                    \"      <rect x='0' y='0' width='200' height='200' rx='20' ry='20' fill='red' mask='url(#Mask)' \/>\\n\" +\n+                    \"    <\/svg>\\n\" +\n+                    \"  <\/body>\\n\" +\n+                    \"<\/html>\"\n+        );\n+        submit(() -> {\n+            final WebPage webPage = WebEngineShim.getPage(getEngine());\n+            assertNotNull(webPage);\n+            final BufferedImage img = WebPageShim.paint(webPage, 0, 0, 200, 200);\n+            assertNotNull(img);\n+\n+            final Color pixelAt50x50 = new Color(img.getRGB(50, 50), true);\n+            assertTrue(\"Color should be green:\" + pixelAt50x50, isColorsSimilar(new Color(65, 95, 0), pixelAt50x50, 5));\n+            final Color pixelAt50x150 = new Color(img.getRGB(50, 150), true);\n+            assertTrue(\"Color should be green:\" + pixelAt50x150, isColorsSimilar(new Color(65, 95, 0), pixelAt50x150, 5));\n+\n+            final Color pixelAt150x50 = new Color(img.getRGB(150, 50), true);\n+            assertTrue(\"Color should be almost red:\" + pixelAt150x50, isColorsSimilar(new Color(192, 32, 0), pixelAt150x50, 20));\n+            final Color pixelAt150x150 = new Color(img.getRGB(150, 150), true);\n+            assertTrue(\"Color should be almost red:\" + pixelAt150x150, isColorsSimilar(new Color(192, 32, 0), pixelAt150x150, 20));\n+        });\n+    }\n+\n+    @Test public void testSVGPathRenderingWithMask() {\n+        loadContent(\n+                    \"<html>\\n\" +\n+                    \"  <body style='margin: 0px 0px;'>\\n\" +\n+                    \"    <svg width='200' height='200'>\\n\" +\n+                    \"      <defs>\\n\" +\n+                    \"        <linearGradient id='Gradient'>\\n\" +\n+                    \"          <stop offset='0' stop-color='white' stop-opacity='0' \/>\\n\" +\n+                    \"          <stop offset='1' stop-color='white' stop-opacity='1' \/>\\n\" +\n+                    \"        <\/linearGradient>\\n\" +\n+                    \"        <mask id='Mask'>\\n\" +\n+                    \"          <rect x='0' y='0' width='200' height='200' fill='url(#Gradient)'  \/>\\n\" +\n+                    \"        <\/mask>\\n\" +\n+                    \"      <\/defs>\\n\" +\n+                    \"      <path d='M 0 200 Q 100 0 200 200' fill='green' \/>\\n\" +\n+                    \"      <path d='M 0 200 Q 100 0 200 200' fill='red' mask='url(#Mask)' \/>\\n\" +\n+                    \"    <\/svg>\\n\" +\n+                    \"  <\/body>\\n\" +\n+                    \"<\/html>\"\n+        );\n+        submit(() -> {\n+            final WebPage webPage = WebEngineShim.getPage(getEngine());\n+            assertNotNull(webPage);\n+            final BufferedImage img = WebPageShim.paint(webPage, 0, 0, 200, 200);\n+            assertNotNull(img);\n+\n+            final Color pixelAt150x50 = new Color(img.getRGB(150, 50), true);\n+            assertTrue(\"Color should be almost red:\" + pixelAt150x50, isColorsSimilar(new Color(192, 32, 0), pixelAt150x50, 20));\n+            final Color pixelAt150x150 = new Color(img.getRGB(150, 150), true);\n+            assertTrue(\"Color should be almost red:\" + pixelAt150x150, isColorsSimilar(new Color(192, 32, 0), pixelAt150x150, 20));\n+        });\n+    }\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/SVGTest.java","additions":72,"deletions":1,"binary":false,"changes":73,"status":"modified"}]}