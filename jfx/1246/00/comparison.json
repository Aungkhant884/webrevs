{"files":[{"patch":"@@ -1674,5 +1674,4 @@\n-                int firstIndex = getCellIndex(firstCell);\n-                int index = Math.max(0, firstIndex - 1);\n-\n-                double prevIndexSize = getCellLength(index);\n-                addLeadingCells(index, getCellPosition(firstCell) - prevIndexSize);\n+                \/\/ NOTE: The index might be -1, but the call to addLeadingCells() is still required.\n+                int previousIndex = getCellIndex(firstCell) - 1;\n+                double prevIndexSize = getCellLength(previousIndex);\n+                addLeadingCells(previousIndex, getCellPosition(firstCell) - prevIndexSize);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1841,0 +1841,23 @@\n+    \/**\n+     * The first cell should always be the same when scrolling down just a little bit.\n+     * This is mainly a regression test to check that no leading cells are added where they should not be.\n+     *\n+     * @see <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8316590\">JDK-8316590<\/a>\n+     *\/\n+    @Test\n+    public void testFirstCellShouldBeTheSameOnScroll() {\n+        flow = new VirtualFlowShim<>();\n+        flow.setCellFactory(fw -> new CellStub(flow));\n+        flow.setCellCount(50);\n+        flow.resize(250, 300);\n+\n+        pulse();\n+\n+        IndexedCell<?> cell1 = flow.cells_get(flow.cells, 0);\n+\n+        flow.scrollPixels(0.01);\n+        IndexedCell<?> cell2 = flow.cells_get(flow.cells, 0);\n+\n+        assertSame(cell1, cell2);\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/VirtualFlowTest.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}