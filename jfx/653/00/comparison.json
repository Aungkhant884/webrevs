{"files":[{"patch":"@@ -29,1 +29,2 @@\n-import javafx.beans.value.ObservableValue;\n+import javafx.beans.value.WeakChangeListener;\n+import javafx.event.EventHandler;\n@@ -31,1 +32,1 @@\n-import javafx.scene.control.skin.TextAreaSkin;\n+import javafx.scene.input.MouseEvent;\n@@ -35,0 +36,25 @@\n+    \/**************************************************************************\n+     *\n+     * Private fields\n+     *\n+     **************************************************************************\/\n+\n+    private final EventHandler<MouseEvent> mouseEventListener = e -> {\n+        if (getSkinnable().isEditable() && getSkinnable().isFocused()) {\n+            showSoftwareKeyboard();\n+        }\n+    };\n+\n+    private final ChangeListener<Boolean> focusChangeListener = (observable, wasFocused, isFocused) -> {\n+        if (wasFocused && !isFocused) {\n+            hideSoftwareKeyboard();\n+        }\n+    };\n+    private final WeakChangeListener<Boolean> weakFocusChangeListener = new WeakChangeListener<>(focusChangeListener);\n+\n+    \/**************************************************************************\n+     *\n+     * Constructors\n+     *\n+     **************************************************************************\/\n+\n@@ -38,12 +64,16 @@\n-        textArea.focusedProperty().addListener(new ChangeListener<Boolean>() {\n-            public void changed(ObservableValue<? extends Boolean> observable,\n-                    Boolean wasFocused, Boolean isFocused) {\n-                if (textArea.isEditable()) {\n-                    if (isFocused) {\n-                        showSoftwareKeyboard();\n-                    } else {\n-                        hideSoftwareKeyboard();\n-                    }\n-                }\n-            }\n-        });\n+        textArea.addEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventListener);\n+        textArea.focusedProperty().addListener(weakFocusChangeListener);\n+    }\n+\n+    \/***************************************************************************\n+     *                                                                         *\n+     * Public API                                                              *\n+     *                                                                         *\n+     **************************************************************************\/\n+\n+    \/** {@inheritDoc} *\/\n+    @Override public void dispose() {\n+        if (getSkinnable() == null) return;\n+        getSkinnable().removeEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventListener);\n+        getSkinnable().focusedProperty().removeListener(weakFocusChangeListener);\n+        super.dispose();\n","filename":"modules\/javafx.controls\/src\/ios\/java\/javafx\/scene\/control\/skin\/TextAreaSkinIos.java","additions":44,"deletions":14,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n-import javafx.beans.value.ObservableValue;\n+import javafx.beans.value.WeakChangeListener;\n+import javafx.event.EventHandler;\n@@ -31,3 +32,1 @@\n-\n-import com.sun.javafx.scene.control.behavior.TextFieldBehavior;\n-import javafx.scene.control.skin.TextFieldSkin;\n+import javafx.scene.input.MouseEvent;\n@@ -37,0 +36,25 @@\n+    \/**************************************************************************\n+     *\n+     * Private fields\n+     *\n+     **************************************************************************\/\n+\n+    private final EventHandler<MouseEvent> mouseEventListener = e -> {\n+        if (getSkinnable().isEditable() && getSkinnable().isFocused()) {\n+            showSoftwareKeyboard();\n+        }\n+    };\n+\n+    private final ChangeListener<Boolean> focusChangeListener = (observable, wasFocused, isFocused) -> {\n+        if (wasFocused && !isFocused) {\n+            hideSoftwareKeyboard();\n+        }\n+    };\n+    private final WeakChangeListener<Boolean> weakFocusChangeListener = new WeakChangeListener<>(focusChangeListener);\n+\n+    \/**************************************************************************\n+     *\n+     * Constructors\n+     *\n+     **************************************************************************\/\n+\n@@ -40,12 +64,16 @@\n-        textField.focusedProperty().addListener(new ChangeListener<Boolean>() {\n-            public void changed(ObservableValue<? extends Boolean> observable,\n-                    Boolean wasFocused, Boolean isFocused) {\n-                if (textField.isEditable()) {\n-                    if (isFocused) {\n-                        showSoftwareKeyboard();\n-                    } else {\n-                        hideSoftwareKeyboard();\n-                    }\n-                }\n-            }\n-        });\n+        textField.addEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventListener);\n+        textField.focusedProperty().addListener(weakFocusChangeListener);\n+    }\n+\n+    \/***************************************************************************\n+     *                                                                         *\n+     * Public API                                                              *\n+     *                                                                         *\n+     **************************************************************************\/\n+\n+    \/** {@inheritDoc} *\/\n+    @Override public void dispose() {\n+        if (getSkinnable() == null) return;\n+        getSkinnable().removeEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventListener);\n+        getSkinnable().focusedProperty().removeListener(weakFocusChangeListener);\n+        super.dispose();\n","filename":"modules\/javafx.controls\/src\/ios\/java\/javafx\/scene\/control\/skin\/TextFieldSkinIos.java","additions":44,"deletions":16,"binary":false,"changes":60,"status":"modified"}]}