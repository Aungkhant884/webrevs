{"files":[{"patch":"@@ -219,0 +219,3 @@\n+        \/\/ When a Parent and its Parent's font size is relative then that Parent's\n+        \/\/ font size is computed in relative to it's grand parent's font size.\n+        \/\/ For compatibility we are preserving this odd behaviour.\n@@ -251,4 +254,6 @@\n-        \/\/ This should have been the behavior of font size calculation with\n-        \/\/ nested set of parents and controls. We are not changing current behaviour to avoid\n-        \/\/ regressing any applications that rely on current behaviour. Current behaviour can be\n-        \/\/ observed in other -fx-font-size tests here.\n+        \/\/ This should have been the behavior of font size calculation with nested\n+        \/\/ set of parents and controls, that a Parent's font size is calculated with reference\n+        \/\/ to its Parent and not grand parent. We are not changing current behaviour to avoid\n+        \/\/ regressing any applications that rely on current behaviour.\n+        \/\/ Current behaviour can be observed in other -fx-font-size tests here.\n+        \/\/ see: relativeFontSizeSetOnAllNestedParentsAndControlsTest()\n@@ -323,1 +328,0 @@\n-        \/\/double p2FontSize = p2Font.getValue(rtFontSize);\n@@ -327,1 +331,0 @@\n-        \/\/double p3FontSize = p3Font.getValue(p1FontSize);\n@@ -331,7 +334,0 @@\n-        \/\/double p4FontSize = p4Font.getValue(p2FontSize);\n-\n-        System.err.println(\"rtFontSize: \" + rtFontSize);\n-        System.err.println(\"p1FontSize: \" + p1FontSize);\n-        System.err.println(\"p2FontSize: \" + p2FontSize);\n-        System.err.println(\"p3FontSize: \" + p3FontSize);\n-        System.err.println(\"p4FontSize: \" + p4FontSize);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/css\/PropertySizeTest.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -574,2 +574,7 @@\n-    \/\/ This method is a reduced version of transitionToState() method, it is added as a fix for JDK-8204568.\n-    \/\/ Any modifications to the method transitionToStates() should be relatively applied here if needed.\n+    \/\/ The font size property of the Controls that are inherited from class Labeled is a shared a property,\n+    \/\/ it is shared with a child LabeledText. The Control's(inherited from Labeled) css properties are\n+    \/\/ first computed relative to the font size that was computed for the Control. And when the font size\n+    \/\/ is computed for LabeledText, it computes a different font size(which is not same as what was computed for Control).\n+    \/\/ This results in the behaviour that Control's relative sized properties do not remain relative to its font size.\n+    \/\/ This method is a remedy to this problem. It gets executed when LabeledText updates the shared font size property\n+    \/\/ and recalculates the relative sized properties of Control.\n@@ -578,0 +583,2 @@\n+    \/\/ This method is a reduced version of transitionToState() method, it is added as a fix for JDK-8204568.\n+    \/\/ Any modifications to the method transitionToStates() should be relatively applied here if needed.\n@@ -603,0 +610,1 @@\n+            @SuppressWarnings(\"unchecked\") \/\/ this is a widening conversion\n@@ -664,1 +672,0 @@\n-                    assert false : styleableProperty.toString();\n@@ -708,0 +715,1 @@\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}