{"files":[{"patch":"@@ -705,0 +705,6 @@\n+\n+static GdkAtom get_net_frame_extents_atom() {\n+    static const char * extents_str = \"_NET_FRAME_EXTENTS\";\n+    return gdk_atom_intern(extents_str, TRUE);\n+}\n+\n@@ -723,3 +729,1 @@\n-            frame_extents_received(false),\n-            requested_bounds()\n-{\n+            frame_extents_received(false) {\n@@ -760,1 +764,1 @@\n-\n+    gtk_window_set_focus_on_map(GTK_WINDOW(gtk_widget), FALSE);\n@@ -847,0 +851,26 @@\n+bool WindowContextTop::get_frame_extents_property(int *top, int *left,\n+        int *bottom, int *right) {\n+    unsigned long *extents;\n+\n+    if (gdk_property_get(gdk_window,\n+            get_net_frame_extents_atom(),\n+            gdk_atom_intern(\"CARDINAL\", FALSE),\n+            0,\n+            sizeof (unsigned long) * 4,\n+            FALSE,\n+            NULL,\n+            NULL,\n+            NULL,\n+            (guchar**) & extents)) {\n+        *left = extents [0];\n+        *right = extents [1];\n+        *top = extents [2];\n+        *bottom = extents [3];\n+\n+        g_free(extents);\n+        return true;\n+    }\n+\n+    return false;\n+}\n+\n@@ -848,24 +878,6 @@\n-    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n-    Atom frame_extents_atom = XInternAtom(display, \"_NET_FRAME_EXTENTS\", True);\n-\n-    bool changed = false;\n-    long top, left, bottom, right;\n-\n-    Atom type_return;\n-    unsigned long nitems_return;\n-    unsigned long bytes_after_return;\n-    int format_return;\n-    unsigned char* data;\n-\n-    if (XGetWindowProperty(display, GDK_WINDOW_XID(gdk_window), frame_extents_atom, 0, G_MAXLONG, False, XA_CARDINAL,\n-                           &type_return, &format_return, &nitems_return, &bytes_after_return, &data) == Success) {\n-        if (type_return == XA_CARDINAL && format_return == 32 && nitems_return == 4 && data) {\n-            long* extents = (long *) data;\n-            left = extents[0];\n-            right = extents[1];\n-            top = extents[2];\n-            bottom = extents[3];\n-\n-            if ((top + right + bottom + left) != 0) {\n-                frame_extents_received = true;\n-                changed = geometry.extents.top != top\n+    int top, left, bottom, right;\n+\n+    if (get_frame_extents_property(&top, &left, &bottom, &right)) {\n+        if ((top + right + bottom + left) != 0) {\n+            frame_extents_received = true;\n+            bool changed = geometry.extents.top != top\n@@ -876,21 +888,17 @@\n-                if (changed) {\n-                    geometry.extents.top = top;\n-                    geometry.extents.left = left;\n-                    geometry.extents.bottom = bottom;\n-                    geometry.extents.right = right;\n-\n-                    set_cached_extents(geometry.extents);\n-                    update_window_constraints();\n-\n-                    \/\/ set bounds again to set to correct window size that must\n-                    \/\/ be the total width and height accounting extents\n-                    if (geometry.final_width.type != BOUNDSTYPE_WINDOW\n-                        || geometry.final_height.type != BOUNDSTYPE_WINDOW) {\n-                        set_bounds(-1, -1, false, false, -1, -1, geometry.final_width.value,\n-                                        geometry.final_height.value);\n-                    } else {\n-                        set_bounds(-1, -1, false, false, geometry.final_width.value,\n-                                    geometry.final_height.value, -1, -1);\n-                    }\n-\n-                    notify_window_resize();\n+            if (changed) {\n+                geometry.extents.top = top;\n+                geometry.extents.left = left;\n+                geometry.extents.bottom = bottom;\n+                geometry.extents.right = right;\n+\n+                set_cached_extents(geometry.extents);\n+                update_window_constraints();\n+\n+                \/\/ set bounds again to set to correct window size that must\n+                \/\/ be the total width and height accounting extents\n+                if (geometry.bounds_type != BOUNDSTYPE_WINDOW) {\n+                    set_bounds(-1, -1, false, false, -1, -1, geometry.final_width,\n+                                    geometry.final_height);\n+                } else {\n+                    set_bounds(-1, -1, false, false, geometry.final_width,\n+                                geometry.final_height, -1, -1);\n@@ -898,0 +906,2 @@\n+\n+                notify_window_resize();\n@@ -901,4 +911,0 @@\n-\n-    if(data) {\n-        XFree(data);\n-    }\n@@ -908,2 +914,2 @@\n-     return (windowGeometry->final_width.type != BOUNDSTYPE_WINDOW)\n-                   ? windowGeometry->final_width.value\n+     return (windowGeometry->bounds_type != BOUNDSTYPE_WINDOW)\n+                   ? windowGeometry->final_width\n@@ -912,1 +918,1 @@\n-                   : windowGeometry->final_width.value;\n+                   : windowGeometry->final_width;\n@@ -916,2 +922,2 @@\n-    return (windowGeometry->final_height.type != BOUNDSTYPE_WINDOW)\n-                   ? windowGeometry->final_height.value\n+    return (windowGeometry->bounds_type != BOUNDSTYPE_WINDOW)\n+                   ? windowGeometry->final_height\n@@ -920,1 +926,1 @@\n-                   : windowGeometry->final_height.value;\n+                   : windowGeometry->final_height;\n@@ -924,2 +930,2 @@\n-    return (windowGeometry->final_width.type != BOUNDSTYPE_CONTENT)\n-                   ? windowGeometry->final_width.value\n+    return (windowGeometry->bounds_type != BOUNDSTYPE_CONTENT)\n+                   ? windowGeometry->final_width\n@@ -928,1 +934,1 @@\n-                   : windowGeometry->final_width.value;\n+                   : windowGeometry->final_width;\n@@ -930,0 +936,1 @@\n+\n@@ -931,2 +938,2 @@\n-    return (windowGeometry->final_height.type != BOUNDSTYPE_CONTENT)\n-                   ? windowGeometry->final_height.value\n+    return (windowGeometry->bounds_type != BOUNDSTYPE_CONTENT)\n+                   ? windowGeometry->final_height\n@@ -935,1 +942,1 @@\n-                   : windowGeometry->final_height.value;\n+                   : windowGeometry->final_height;\n@@ -1015,1 +1022,0 @@\n-    static GdkAtom atom_frame_extents = gdk_atom_intern_static_string(\"_NET_FRAME_EXTENTS\");\n@@ -1018,1 +1024,1 @@\n-        if (event->atom == atom_frame_extents) {\n+        if (event->atom == get_net_frame_extents_atom()) {\n@@ -1040,2 +1046,2 @@\n-    bool size_changed = geometry.final_width.value != w\n-                        || geometry.final_height.value != h;\n+    bool size_changed = geometry.final_width != w\n+                        || geometry.final_height != h;\n@@ -1044,4 +1050,3 @@\n-        geometry.final_width.value = w;\n-        geometry.final_width.type = BOUNDSTYPE_CONTENT;\n-        geometry.final_height.value = h;\n-        geometry.final_height.type = BOUNDSTYPE_CONTENT;\n+        geometry.final_width = w;\n+        geometry.bounds_type = BOUNDSTYPE_CONTENT;\n+        geometry.final_height = h;\n@@ -1062,0 +1067,1 @@\n+        g_print(\"configure x,y: %d, %d\\n\", x, y);\n@@ -1082,4 +1088,1 @@\n-    XSizeHints* hints = XAllocSizeHints();\n-\n-    hints->win_gravity = NorthWestGravity;\n-    hints->flags = (PMinSize | PMaxSize | PWinGravity);\n+    GdkGeometry hints;\n@@ -1093,2 +1096,2 @@\n-        hints->min_width = (min_w < 1) ? 1 : min_w;\n-        hints->min_height = (min_h < 1) ? 1 : min_h;\n+        hints.min_width = (min_w < 1) ? 1 : min_w;\n+        hints.min_height = (min_h < 1) ? 1 : min_h;\n@@ -1096,1 +1099,1 @@\n-        hints->max_width = (resizable.maxw == -1) ? G_MAXINT\n+        hints.max_width = (resizable.maxw == -1) ? G_MAXINT\n@@ -1099,1 +1102,1 @@\n-        hints->max_height = (resizable.maxh == -1) ? G_MAXINT\n+        hints.max_height = (resizable.maxh == -1) ? G_MAXINT\n@@ -1106,4 +1109,4 @@\n-        hints->min_width = w;\n-        hints->min_height = h;\n-        hints->max_width = w;\n-        hints->max_height = h;\n+        hints.min_width = w;\n+        hints.min_height = h;\n+        hints.max_width = w;\n+        hints.max_height = h;\n@@ -1112,9 +1115,2 @@\n-    if (!map_received) {\n-        hints->x = geometry_get_window_x(&geometry);\n-        hints->y = geometry_get_window_y(&geometry);\n-        hints->flags |= PPosition;\n-    }\n-\n-    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n-    XSetWMNormalHints(display, GDK_WINDOW_XID(gdk_window), hints);\n-    XFree(hints);\n+    gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &hints,\n+                                  (GdkWindowHints)(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE));\n@@ -1138,29 +1134,26 @@\n-    requested_bounds.width = w;\n-    requested_bounds.height = h;\n-    requested_bounds.client_width = cw;\n-    requested_bounds.client_height = ch;\n-\n-    XWindowChanges windowChanges;\n-    unsigned int windowChangesMask = 0;\n-    if (w > 0) {\n-        geometry.final_width.value = w;\n-        geometry.final_width.type = BOUNDSTYPE_WINDOW;\n-        windowChanges.width = geometry_get_content_width(&geometry);\n-        windowChangesMask |= CWWidth;\n-    } else if (cw > 0) {\n-        geometry.final_width.value = cw;\n-        geometry.final_width.type = BOUNDSTYPE_CONTENT;\n-        windowChanges.width = geometry_get_content_width(&geometry);\n-        windowChangesMask |= CWWidth;\n-    }\n-\n-    if (h > 0) {\n-        geometry.final_height.value = h;\n-        geometry.final_height.type = BOUNDSTYPE_WINDOW;\n-        windowChanges.height = geometry_get_content_height(&geometry);\n-        windowChangesMask |= CWHeight;\n-    } else if (ch > 0) {\n-        geometry.final_height.value = ch;\n-        geometry.final_height.type = BOUNDSTYPE_CONTENT;\n-        windowChanges.height = geometry_get_content_height(&geometry);\n-        windowChangesMask |= CWHeight;\n+    g_print(\"set_bounds: %d, %d, %d, %d, %d, %d\\n\", x, y, w, h, cw, ch);\n+\n+     \/\/ newW \/ newH always content sizes compatible with GTK+ (content size means \"do not account window frame\")\n+    int newW = 0;\n+    int newH = (h > 0) ? h - (geometry.extents.top + geometry.extents.bottom) : ch;\n+\n+    if (w > 0 || h > 0) {\n+        geometry.bounds_type = BOUNDSTYPE_WINDOW;\n+        newW = w - (geometry.extents.left + geometry.extents.right);\n+        newH = h - (geometry.extents.top + geometry.extents.bottom);\n+    } else if (cw > 0 || ch > 0) {\n+        geometry.bounds_type = BOUNDSTYPE_CONTENT;\n+        newW = cw;\n+        newH = ch;\n+    }\n+\n+    if (newW > 0 && newH > 0) {\n+        if (gtk_widget_get_visible(gtk_widget)) {\n+            \/\/ call update_window_constraints() to let gtk_window_resize succeed, because it's bound to geometry constraints\n+            update_window_constraints();\n+            gtk_window_resize(GTK_WINDOW(gtk_widget), newW, newH);\n+        } else {\n+            gtk_window_set_default_size(GTK_WINDOW(gtk_widget), newW, newH);\n+        }\n+\n+        notify_window_resize();\n@@ -1174,3 +1167,0 @@\n-        windowChanges.x = geometry_get_window_x(&geometry);\n-        windowChangesMask |= CWX;\n-\n@@ -1181,3 +1171,5 @@\n-        windowChanges.y = geometry_get_window_y(&geometry);\n-        windowChangesMask |= CWY;\n-    }\n+        int newX, newY;\n+        newX = geometry_get_window_x(&geometry);\n+        newY = geometry_get_window_y(&geometry);\n+\n+        gtk_window_move(GTK_WINDOW(gtk_widget), newX, newY);\n@@ -1185,1 +1177,2 @@\n-    window_configure(&windowChanges, windowChangesMask);\n+        notify_window_move();\n+    }\n@@ -1192,21 +1185,0 @@\n-void WindowContextTop::window_configure(XWindowChanges *windowChanges, unsigned int windowChangesMask) {\n-    if (windowChangesMask == 0) {\n-        return;\n-    }\n-\n-    update_window_constraints();\n-\n-    if (windowChangesMask & (CWX | CWY)) {\n-        if (!map_received) {\n-            notify_window_move();\n-        }\n-    }\n-\n-    if (windowChangesMask & (CWWidth | CWHeight)) {\n-        notify_window_resize();\n-    }\n-\n-    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n-    XReconfigureWMWindow(display, GDK_WINDOW_XID(gdk_window), 0, windowChangesMask, windowChanges);\n-}\n-\n@@ -1223,1 +1195,1 @@\n-       if (minimize) {\n+    if (minimize) {\n@@ -1282,0 +1254,1 @@\n+\n@@ -1341,0 +1314,1 @@\n+    g_print(\"set_gravity %f, %f\\n\", x, y);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":126,"deletions":152,"binary":false,"changes":278,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    WindowGeometry(): final_width(), final_height(),\n+    WindowGeometry(): bounds_type(), final_width(), final_height(),\n@@ -71,9 +71,3 @@\n-    struct {\n-        int value;\n-        BoundsType type;\n-    } final_width;\n-\n-    struct {\n-        int value;\n-        BoundsType type;\n-    } final_height;\n+    BoundsType bounds_type;\n+    int final_width;\n+    int final_height;\n@@ -276,5 +270,0 @@\n-    struct _Size {\n-        int width, height;\n-        int client_width, client_height;\n-    } requested_bounds;\n-\n@@ -327,1 +316,1 @@\n-    void window_configure(XWindowChanges *, unsigned int);\n+    bool get_frame_extents_property(int *, int *, int *, int *);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"}]}