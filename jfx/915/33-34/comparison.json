{"files":[{"patch":"@@ -104,29 +104,1 @@\n-    if (event->changed_mask &\n-            (GDK_WINDOW_STATE_ICONIFIED | GDK_WINDOW_STATE_MAXIMIZED)) {\n-\n-        if (event->changed_mask & GDK_WINDOW_STATE_ICONIFIED) {\n-            is_iconified = event->new_window_state & GDK_WINDOW_STATE_ICONIFIED;\n-        }\n-        if (event->changed_mask & GDK_WINDOW_STATE_MAXIMIZED) {\n-            is_maximized = event->new_window_state & GDK_WINDOW_STATE_MAXIMIZED;\n-        }\n-\n-        jint stateChangeEvent;\n-\n-        if (is_iconified) {\n-            stateChangeEvent = com_sun_glass_events_WindowEvent_MINIMIZE;\n-        } else if (is_maximized) {\n-            stateChangeEvent = com_sun_glass_events_WindowEvent_MAXIMIZE;\n-        } else {\n-            stateChangeEvent = com_sun_glass_events_WindowEvent_RESTORE;\n-            if ((gdk_windowManagerFunctions & GDK_FUNC_MINIMIZE) == 0) {\n-                \/\/ in this case - the window manager will not support the programatic\n-                \/\/ request to iconify - so we need to restore it now.\n-                gdk_window_set_functions(gdk_window, gdk_windowManagerFunctions);\n-            }\n-        }\n-\n-        notify_state(stateChangeEvent);\n-    } else if (event->changed_mask & GDK_WINDOW_STATE_ABOVE) {\n-        notify_on_top(event->new_window_state & GDK_WINDOW_STATE_ABOVE);\n-    }\n+    \/\/ Empty\n@@ -896,0 +868,1 @@\n+\n@@ -904,13 +877,1 @@\n-\n-                \/\/ set bounds again to set to correct window size that must\n-                \/\/ be the total width and height accounting extents\n-                int w = geometry_get_window_width(&geometry);\n-                int h = geometry_get_window_height(&geometry);\n-                int cw = geometry_get_content_width(&geometry);\n-                int ch = geometry_get_content_height(&geometry);\n-\n-                set_bounds(-1, -1, false, false, w, h, cw, ch);\n-\n-                notify_window_resize();\n-                \/\/ Window didn't actually move, but view X, Y might change\n-                notify_window_move();\n+                ensure_window_size();\n@@ -922,0 +883,15 @@\n+void WindowContextTop::ensure_window_size() {\n+    \/\/ set bounds again to set to correct window size that must\n+    \/\/ be the total width and height accounting extents\n+    int w = geometry_get_window_width(&geometry);\n+    int h = geometry_get_window_height(&geometry);\n+    int cw = geometry_get_content_width(&geometry);\n+    int ch = geometry_get_content_height(&geometry);\n+\n+    set_bounds(-1, -1, false, false, w, h, cw, ch);\n+\n+    notify_window_resize();\n+    \/\/ Window didn't actually move, but view X, Y might change\n+    notify_window_move();\n+}\n+\n@@ -960,1 +936,1 @@\n-void WindowContextTop::process_net_wm_property() {\n+void WindowContextTop::work_around_compiz_state() {\n@@ -1009,1 +985,1 @@\n-            process_net_wm_property();\n+            work_around_compiz_state();\n@@ -1019,1 +995,33 @@\n-    WindowContextBase::process_state(event);\n+    if (event->changed_mask & GDK_WINDOW_STATE_FULLSCREEN) {\n+        is_fullscreen = event->new_window_state & GDK_WINDOW_STATE_FULLSCREEN;\n+    }\n+\n+    if (event->changed_mask & (GDK_WINDOW_STATE_ICONIFIED | GDK_WINDOW_STATE_MAXIMIZED)) {\n+\n+        if (event->changed_mask & GDK_WINDOW_STATE_ICONIFIED) {\n+            is_iconified = event->new_window_state & GDK_WINDOW_STATE_ICONIFIED;\n+        }\n+\n+        if (event->changed_mask & GDK_WINDOW_STATE_MAXIMIZED) {\n+            is_maximized = event->new_window_state & GDK_WINDOW_STATE_MAXIMIZED;\n+        }\n+\n+        jint stateChangeEvent;\n+\n+        if (is_iconified) {\n+            stateChangeEvent = com_sun_glass_events_WindowEvent_MINIMIZE;\n+        } else if (is_maximized) {\n+            stateChangeEvent = com_sun_glass_events_WindowEvent_MAXIMIZE;\n+        } else {\n+            stateChangeEvent = com_sun_glass_events_WindowEvent_RESTORE;\n+            if ((gdk_windowManagerFunctions & GDK_FUNC_MINIMIZE) == 0) {\n+                \/\/ in this case - the window manager will not support the programatic\n+                \/\/ request to iconify - so we need to restore it now.\n+                gdk_window_set_functions(gdk_window, gdk_windowManagerFunctions);\n+            }\n+        }\n+\n+        notify_state(stateChangeEvent);\n+    } else if (event->changed_mask & GDK_WINDOW_STATE_ABOVE) {\n+        notify_on_top(event->new_window_state & GDK_WINDOW_STATE_ABOVE);\n+    }\n@@ -1036,4 +1044,1 @@\n-    bool size_changed = geometry.final_width.value != w\n-                        || geometry.final_height.value != h;\n-\n-    if (size_changed) {\n+    if (!is_maximized && !is_fullscreen) {\n@@ -1044,0 +1049,1 @@\n+    }\n@@ -1045,2 +1051,14 @@\n-        if (jwindow) {\n-            notify_window_resize();\n+    if (jwindow) {\n+        int ww = w + geometry.extents.left + geometry.extents.right;\n+        int wh = h + geometry.extents.top + geometry.extents.bottom;\n+\n+        mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,\n+                (is_maximized)\n+                    ? com_sun_glass_events_WindowEvent_MAXIMIZE\n+                    : com_sun_glass_events_WindowEvent_RESIZE,\n+                ww, wh);\n+        CHECK_JNI_EXCEPTION(mainEnv)\n+\n+        if (jview) {\n+            mainEnv->CallVoidMethod(jview, jViewNotifyResize, w, h);\n+            CHECK_JNI_EXCEPTION(mainEnv)\n@@ -1237,1 +1255,0 @@\n-    is_fullscreen = false;\n@@ -1383,4 +1400,1 @@\n-            (is_maximized)\n-                ? com_sun_glass_events_WindowEvent_MAXIMIZE\n-                : com_sun_glass_events_WindowEvent_RESIZE,\n-            w, h);\n+                 com_sun_glass_events_WindowEvent_RESIZE, w, h);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":70,"deletions":56,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -288,1 +288,1 @@\n-    void process_net_wm_property();\n+    void work_around_compiz_state();\n@@ -333,0 +333,1 @@\n+    void ensure_window_size();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}