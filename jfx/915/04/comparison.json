{"files":[{"patch":"@@ -190,12 +190,0 @@\n-\n-        if ((w <= 0) && (cw > 0) || (h <= 0) && (ch > 0)) {\n-            final int[] extarr = new int[4];\n-            getFrameExtents(ptr, extarr);\n-\n-            \/\/ TODO: ((w <= 0) && (cw <= 0)) || ((h <= 0) && (ch <= 0))\n-            notifyResize(WindowEvent.RESIZE,\n-                         ((w <= 0) && (cw > 0)) ? cw + extarr[0] + extarr[1]\n-                                                : w,\n-                         ((h <= 0) && (ch > 0)) ? ch + extarr[2] + extarr[3]\n-                                                : h);\n-        }\n@@ -204,2 +192,0 @@\n-    private native void getFrameExtents(long ptr, int[] extarr);\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkWindow.java","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -551,18 +551,0 @@\n-\/*\n- * Class:     com_sun_glass_ui_gtk_GtkWindow\n- * Method:    getFrameExtents\n- * Signature: (J[I)V\n- *\/\n-JNIEXPORT void JNICALL Java_com_sun_glass_ui_gtk_GtkWindow_getFrameExtents\n-    (JNIEnv * env, jobject obj, jlong ptr, jintArray extarr)\n-{\n-    (void)obj;\n-\n-    WindowContext* ctx = JLONG_TO_WINDOW_CTX(ptr);\n-    WindowFrameExtents extents = ctx->get_frame_extents();\n-\n-    env->SetIntArrayRegion(extarr, 0, 1, &extents.left);\n-    env->SetIntArrayRegion(extarr, 1, 1, &extents.right);\n-    env->SetIntArrayRegion(extarr, 2, 1, &extents.top);\n-    env->SetIntArrayRegion(extarr, 3, 1, &extents.bottom);\n-}\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassWindow.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -705,3 +705,1 @@\n-WindowFrameExtents WindowContextTop::normal_extents = {28, 1, 1, 1};\n-WindowFrameExtents WindowContextTop::utility_extents = {28, 1, 1, 1};\n-\n+WindowFrameExtents WindowContextTop::cached_extents = {0, 0, 0, 0};\n@@ -718,1 +716,0 @@\n-            frame_extents_initialized(),\n@@ -720,2 +717,0 @@\n-            location_assigned(false),\n-            size_assigned(false),\n@@ -723,0 +718,1 @@\n+            frame_extents_received(false),\n@@ -727,1 +723,1 @@\n-    gtk_widget =  gtk_window_new(type == POPUP ? GTK_WINDOW_POPUP : GTK_WINDOW_TOPLEVEL);\n+    gtk_widget = gtk_window_new(type == POPUP ? GTK_WINDOW_POPUP : GTK_WINDOW_TOPLEVEL);\n@@ -754,1 +750,0 @@\n-    gtk_widget_set_size_request(gtk_widget, 0, 0);\n@@ -779,2 +774,0 @@\n-\n-    event_serial = GDK_CURRENT_TIME;\n@@ -795,8 +788,1 @@\n-static GdkAtom\n-get_net_frame_extents_atom() {\n-    static const char * extents_str = \"_NET_FRAME_EXTENTS\";\n-    return gdk_atom_intern(extents_str, TRUE);\n-}\n-\n-void\n-WindowContextTop::request_frame_extents() {\n+void WindowContextTop::request_frame_extents() {\n@@ -843,12 +829,3 @@\n-void WindowContextTop::set_cached_extents(WindowFrameExtents ex) {\n-    if (window_type == NORMAL) {\n-        normal_extents = ex;\n-    } else {\n-        utility_extents = ex;\n-    }\n-}\n-\n-WindowFrameExtents WindowContextTop::get_cached_extents() {\n-    return window_type == NORMAL ? normal_extents : utility_extents;\n-}\n-\n+void WindowContextTop::update_frame_extents() {\n+    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n+    Atom frame_extents_atom = XInternAtom(display, \"_NET_FRAME_EXTENTS\", True);\n@@ -856,1 +833,0 @@\n-bool WindowContextTop::update_frame_extents() {\n@@ -858,13 +834,32 @@\n-    int top, left, bottom, right;\n-    if (get_frame_extents_property(&top, &left, &bottom, &right)) {\n-        changed = geometry.extents.top != top\n-                    || geometry.extents.left != left\n-                    || geometry.extents.bottom != bottom\n-                    || geometry.extents.right != right;\n-        if (changed) {\n-            geometry.extents.top = top;\n-            geometry.extents.left = left;\n-            geometry.extents.bottom = bottom;\n-            geometry.extents.right = right;\n-            if (!is_null_extents()) {\n-                set_cached_extents(geometry.extents);\n+    long top, left, bottom, right;\n+\n+    Atom type_return;\n+    unsigned long nitems_return;\n+    unsigned long bytes_after_return;\n+    int format_return;\n+    unsigned char* data;\n+\n+    if (XGetWindowProperty(display, GDK_WINDOW_XID(gdk_window), frame_extents_atom, 0, G_MAXLONG, False, XA_CARDINAL,\n+                           &type_return, &format_return, &nitems_return, &bytes_after_return, &data) == Success) {\n+        if (type_return == XA_CARDINAL && format_return == 32 && nitems_return == 4 && data) {\n+            long* extents = (long *) data;\n+            left = extents[0];\n+            right = extents[1];\n+            top = extents[2];\n+            bottom = extents[3];\n+\n+            frame_extents_received = true;\n+            changed = geometry.extents.top != top\n+                        || geometry.extents.left != left\n+                        || geometry.extents.bottom != bottom\n+                        || geometry.extents.right != right;\n+\n+            if (changed) {\n+                geometry.extents.top = top;\n+                geometry.extents.left = left;\n+                geometry.extents.bottom = bottom;\n+                geometry.extents.right = right;\n+\n+                cached_extents = geometry.extents;\n+                update_window_constraints();\n+                notify_window_resize();\n@@ -874,26 +869,0 @@\n-    return changed;\n-}\n-\n-bool\n-WindowContextTop::get_frame_extents_property(int *top, int *left,\n-        int *bottom, int *right) {\n-    unsigned long *extents;\n-\n-    if (gdk_property_get(gdk_window,\n-            get_net_frame_extents_atom(),\n-            gdk_atom_intern(\"CARDINAL\", FALSE),\n-            0,\n-            sizeof (unsigned long) * 4,\n-            FALSE,\n-            NULL,\n-            NULL,\n-            NULL,\n-            (guchar**) & extents)) {\n-        *left = extents [0];\n-        *right = extents [1];\n-        *top = extents [2];\n-        *bottom = extents [3];\n-\n-        g_free(extents);\n-        return true;\n-    }\n@@ -901,1 +870,3 @@\n-    return false;\n+    if(data) {\n+        XFree(data);\n+    }\n@@ -1012,0 +983,1 @@\n+    static GdkAtom atom_frame_extents = gdk_atom_intern_static_string(\"_NET_FRAME_EXTENTS\");\n@@ -1013,2 +985,6 @@\n-    if (event->atom == atom_net_wm_state && event->window == gdk_window) {\n-        process_net_wm_property();\n+    if (event->window == gdk_window) {\n+        if (event->atom == atom_frame_extents) {\n+            update_frame_extents();\n+        } else if (event->atom == atom_net_wm_state) {\n+            process_net_wm_property();\n+        }\n@@ -1019,5 +995,1 @@\n-    gint x, y, w, h;\n-    bool updateWindowConstraints = false;\n-    if (gtk_window_get_decorated(GTK_WINDOW(gtk_widget))) {\n-        GdkRectangle frame;\n-        gint top, left, bottom, right;\n+    int x, y, w, h;\n@@ -1025,27 +997,4 @@\n-        gdk_window_get_frame_extents(gdk_window, &frame);\n-#ifdef GLASS_GTK3\n-        gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h);\n-#else\n-        gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h, NULL);\n-#endif\n-        x = frame.x;\n-        y = frame.y;\n-        geometry.current_width = frame.width;\n-        geometry.current_height = frame.height;\n-\n-        if (update_frame_extents()) {\n-            updateWindowConstraints = true;\n-            if (!frame_extents_initialized && !is_null_extents()) {\n-                frame_extents_initialized = true;\n-                set_bounds(0, 0, false, false,\n-                    requested_bounds.width, requested_bounds.height,\n-                    requested_bounds.client_width, requested_bounds.client_height\n-                );\n-            }\n-        }\n-    } else {\n-        x = event->x;\n-        y = event->y;\n-        w = event->width;\n-        h = event->height;\n-    }\n+    x = event->x - geometry.extents.left;\n+    y = event->y - geometry.extents.top;\n+    w = event->width;\n+    h = event->height;\n@@ -1053,5 +1002,4 @@\n-    if (size_assigned && w <= 1 && h <= 1 && (geometry.final_width.value > 1 ||\n-                                             geometry.final_height.value > 1)) {\n-        \/\/ skip artifact\n-        return;\n-   }\n+    bool size_changed = (geometry.final_width.type != BOUNDSTYPE_CONTENT\n+                        || geometry.final_height.type != BOUNDSTYPE_CONTENT\n+                        || geometry.final_width.value != w\n+                        || geometry.final_height.value != h);\n@@ -1059,2 +1007,1 @@\n-    \/\/ JDK-8232811: to avoid conflicting events, update the geometry only after window pops.\n-    if (map_received) {\n+    if (size_changed) {\n@@ -1065,0 +1012,4 @@\n+\n+        if (jwindow) {\n+            notify_window_resize();\n+        }\n@@ -1067,2 +1018,1 @@\n-    geometry_set_window_x(&geometry, x);\n-    geometry_set_window_y(&geometry, y);\n+    bool moved = (geometry.current_x != x || geometry.current_y != y);\n@@ -1070,17 +1020,5 @@\n-    if (jview) {\n-        mainEnv->CallVoidMethod(jview, jViewNotifyResize,\n-                event->width,\n-                event->height);\n-        CHECK_JNI_EXCEPTION(mainEnv)\n-        mainEnv->CallVoidMethod(jview, jViewNotifyView,\n-                com_sun_glass_events_ViewEvent_MOVE);\n-        CHECK_JNI_EXCEPTION(mainEnv)\n-    }\n-    if (jwindow) {\n-        mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,\n-                (is_maximized)\n-                    ? com_sun_glass_events_WindowEvent_MAXIMIZE\n-                    : com_sun_glass_events_WindowEvent_RESIZE,\n-                geometry.current_width,\n-                geometry.current_height);\n-        CHECK_JNI_EXCEPTION(mainEnv)\n+    if (moved) {\n+        geometry_set_window_x(&geometry, x);\n+        geometry_set_window_y(&geometry, y);\n+        geometry.current_x = x;\n+        geometry.current_y = y;\n@@ -1088,2 +1026,3 @@\n-        mainEnv->CallVoidMethod(jwindow, jWindowNotifyMove, x, y);\n-        CHECK_JNI_EXCEPTION(mainEnv)\n+        if (jwindow) {\n+            notify_window_move();\n+        }\n@@ -1104,9 +1043,0 @@\n-\n-    if (resizable.request != REQUEST_NONE) {\n-        set_window_resizable(resizable.request == REQUEST_RESIZABLE);\n-        resizable.request = REQUEST_NONE;\n-    } else if (!resizable.value) {\n-        set_window_resizable(false);\n-    } else if (updateWindowConstraints) {\n-        update_window_constraints();\n-    }\n@@ -1116,19 +1046,21 @@\n-    if (resizable.value) {\n-        GdkGeometry geom = {\n-            (resizable.minw == -1) ? 1\n-                    : resizable.minw - geometry.extents.left - geometry.extents.right,\n-            (resizable.minh == -1) ? 1\n-                    : resizable.minh - geometry.extents.top - geometry.extents.bottom,\n-            (resizable.maxw == -1) ? 100000\n-                    : resizable.maxw - geometry.extents.left - geometry.extents.right,\n-            (resizable.maxh == -1) ? 100000\n-                    : resizable.maxh - geometry.extents.top - geometry.extents.bottom,\n-            0, 0, 0, 0, 0.0, 0.0, GDK_GRAVITY_NORTH_WEST\n-        };\n-        gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &geom,\n-                static_cast<GdkWindowHints> (GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE));\n-    }\n-}\n-\n-void WindowContextTop::set_window_resizable(bool res) {\n-    if(!res) {\n+    XSizeHints* hints = XAllocSizeHints();\n+\n+    hints->win_gravity = NorthWestGravity;\n+    hints->flags = (PMinSize | PMaxSize | PWinGravity);\n+\n+    if (resizable.value && !is_disabled) {\n+        int min_w = (resizable.minw == -1) ? 1\n+                      : resizable.minw - geometry.extents.left - geometry.extents.right;\n+        int min_h =  (resizable.minh == -1) ? 1\n+                      : resizable.minh - geometry.extents.top - geometry.extents.bottom;\n+\n+        hints->min_width = (min_w < 1) ? 1 : min_w;\n+        hints->min_height = (min_h < 1) ? 1 : min_h;\n+\n+        hints->max_width = (resizable.maxw == -1) ? G_MAXINT\n+                            : resizable.maxw - geometry.extents.left - geometry.extents.right;\n+\n+        hints->max_height = (resizable.maxh == -1) ? G_MAXINT\n+                           : resizable.maxh - geometry.extents.top - geometry.extents.bottom;\n+\n+    } else {\n@@ -1137,10 +1069,11 @@\n-        if (w == -1 && h == -1) {\n-            gtk_window_get_size(GTK_WINDOW(gtk_widget), &w, &h);\n-        }\n-        GdkGeometry geom = {w, h, w, h, 0, 0, 0, 0, 0.0, 0.0, GDK_GRAVITY_NORTH_WEST};\n-        gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &geom,\n-                static_cast<GdkWindowHints>(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE));\n-        resizable.value = false;\n-    } else {\n-        resizable.value = true;\n-        update_window_constraints();\n+\n+        hints->min_width = w;\n+        hints->min_height = h;\n+        hints->max_width = w;\n+        hints->max_height = h;\n+    }\n+\n+    if (!map_received) {\n+        hints->x = geometry_get_window_x(&geometry);\n+        hints->y = geometry_get_window_y(&geometry);\n+        hints->flags |= PPosition;\n@@ -1148,0 +1081,4 @@\n+\n+    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n+    XSetWMNormalHints(display, GDK_WINDOW_XID(gdk_window), hints);\n+    XFree(hints);\n@@ -1151,9 +1088,2 @@\n-    resizable.prev = false;\n-    gint w, h;\n-    gtk_window_get_size(GTK_WINDOW(gtk_widget), &w, &h);\n-    if (map_received || w > 1 || h > 1) {\n-        set_window_resizable(res);\n-    } else {\n-        \/\/Since window is not ready yet set only request for change of resizable.\n-        resizable.request  = res ? REQUEST_RESIZABLE : REQUEST_NOT_RESIZABLE;\n-    }\n+    resizable.value = res;\n+    update_window_constraints();\n@@ -1162,10 +1092,1 @@\n-void WindowContextTop::set_visible(bool visible)\n-{\n-    if (visible) {\n-        if (!size_assigned) {\n-            set_bounds(0, 0, false, false, 320, 200, -1, -1);\n-        }\n-        if (!location_assigned) {\n-            set_bounds(0, 0, true, true, -1, -1, -1, -1);\n-        }\n-    }\n+void WindowContextTop::set_visible(bool visible) {\n@@ -1181,0 +1102,4 @@\n+    if (frame_type == TITLED && !frame_extents_received) {\n+        geometry.extents = cached_extents;\n+    }\n+\n@@ -1186,11 +1111,0 @@\n-    if (!frame_extents_initialized && frame_type == TITLED) {\n-        update_frame_extents();\n-        if (is_null_extents()) {\n-            if (!is_null_extents(get_cached_extents())) {\n-                geometry.extents = get_cached_extents();\n-            }\n-        } else {\n-            frame_extents_initialized = true;\n-        }\n-    }\n-\n@@ -1241,2 +1155,0 @@\n-\n-        location_assigned = true;\n@@ -1245,2 +1157,0 @@\n-    if (w > 0 || h > 0 || cw > 0 || ch > 0) size_assigned = true;\n-\n@@ -1248,1 +1158,0 @@\n-\n@@ -1255,2 +1164,1 @@\n-void WindowContextTop::window_configure(XWindowChanges *windowChanges,\n-        unsigned int windowChangesMask) {\n+void WindowContextTop::window_configure(XWindowChanges *windowChanges, unsigned int windowChangesMask) {\n@@ -1261,3 +1169,1 @@\n-    if (windowChangesMask & (CWX | CWY)) {\n-        gint newX, newY;\n-        gtk_window_get_position(GTK_WINDOW(gtk_widget), &newX, &newY);\n+    update_window_constraints();\n@@ -1265,5 +1171,3 @@\n-        if (windowChangesMask & CWX) {\n-            newX = windowChanges->x;\n-        }\n-        if (windowChangesMask & CWY) {\n-            newY = windowChanges->y;\n+    if (windowChangesMask & (CWX | CWY)) {\n+        if (!map_received) {\n+            notify_window_move();\n@@ -1271,1 +1175,0 @@\n-        gtk_window_move(GTK_WINDOW(gtk_widget), newX, newY);\n@@ -1275,26 +1178,1 @@\n-        gint newWidth, newHeight;\n-        gtk_window_get_size(GTK_WINDOW(gtk_widget), &newWidth, &newHeight);\n-\n-        if (windowChangesMask & CWWidth) {\n-            newWidth = windowChanges->width;\n-        }\n-        if (windowChangesMask & CWHeight) {\n-            newHeight = windowChanges->height;\n-        }\n-\n-        if (!resizable.value) {\n-            GdkGeometry geom;\n-            GdkWindowHints hints = (GdkWindowHints)(GDK_HINT_MIN_SIZE | GDK_HINT_MAX_SIZE);\n-            geom.min_width = geom.max_width = newWidth;\n-            geom.min_height = geom.max_height = newHeight;\n-            gtk_window_set_geometry_hints(GTK_WINDOW(gtk_widget), NULL, &geom, hints);\n-        }\n-        gtk_window_resize(GTK_WINDOW(gtk_widget), newWidth, newHeight);\n-\n-        \/\/JDK-8193502: Moved here from WindowContextBase::set_view because set_view is called\n-        \/\/first and the size is not set yet. This also guarantees that the size will be correct\n-        \/\/see: gtk_window_get_size doc for more context.\n-        if (jview) {\n-            mainEnv->CallVoidMethod(jview, jViewNotifyResize, newWidth, newHeight);\n-            CHECK_JNI_EXCEPTION(mainEnv);\n-        }\n+        notify_window_resize();\n@@ -1302,1 +1180,0 @@\n-}\n@@ -1304,8 +1181,2 @@\n-void WindowContextTop::process_key(GdkEventKey* event) {\n-    WindowContextBase::process_key(event);\n-    event_serial = event->time;\n-}\n-\n-void WindowContextTop::process_mouse_button(GdkEventButton* event) {\n-    WindowContextBase::process_mouse_button(event);\n-    event_serial = event->time;\n+    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n+    XReconfigureWMWindow(display, GDK_WINDOW_XID(gdk_window), 0, windowChangesMask, windowChanges);\n@@ -1314,2 +1185,1 @@\n-void WindowContextTop::applyShapeMask(void* data, uint width, uint height)\n-{\n+void WindowContextTop::applyShapeMask(void* data, uint width, uint height) {\n@@ -1323,15 +1193,0 @@\n-void WindowContextTop::ensure_window_size() {\n-    gint w, h;\n-#ifdef GLASS_GTK3\n-    gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h);\n-#else\n-    gdk_window_get_geometry(gdk_window, NULL, NULL, &w, &h, NULL);\n-#endif\n-    if (size_assigned && (geometry.final_width.value != w\n-                       || geometry.final_height.value != h)) {\n-\n-        gdk_window_resize(gdk_window, geometry.final_width.value,\n-                                      geometry.final_height.value);\n-    }\n-}\n-\n@@ -1366,1 +1221,0 @@\n-        ensure_window_size();\n@@ -1374,1 +1228,0 @@\n-    ensure_window_size();\n@@ -1383,10 +1236,17 @@\n-    \/\/JDK-8212060: Window show and then move glitch.\n-    \/\/The WindowContextBase::set_visible will take care of showing the window.\n-    \/\/The below code will only handle later request_focus.\n-    if (is_visible()) {\n-        \/\/ event_serial holds an event serial that will help X11 determine which window should have the focus and\n-        \/\/ prevents activeWindows on WindowStage.java to be out of order which may cause the FOCUS_DISABLED event\n-        \/\/ to bring up the wrong window (it brings up the last which will not be the real \"last\" if out of order).\n-        gtk_window_present_with_time(GTK_WINDOW(gtk_widget), event_serial);\n-        event_serial = GDK_CURRENT_TIME;\n-    }\n+    Display *display = GDK_DISPLAY_XDISPLAY(gdk_window_get_display(gdk_window));\n+    Atom navAtom = XInternAtom(display, \"_NET_ACTIVE_WINDOW\", True);\n+    XClientMessageEvent clientMessage;\n+    memset(&clientMessage, 0, sizeof(clientMessage));\n+\n+    clientMessage.type = ClientMessage;\n+    clientMessage.window = GDK_WINDOW_XID(gdk_window);\n+    clientMessage.message_type = navAtom;\n+    clientMessage.format = 32;\n+    clientMessage.data.l[0] = 1;\n+    clientMessage.data.l[1] = CurrentTime;\n+    clientMessage.data.l[2] = None;\n+\n+    XSendEvent(display, DefaultRootWindow(display), False,\n+               SubstructureRedirectMask | SubstructureNotifyMask,\n+               (XEvent *) &clientMessage);\n+    XFlush(display);\n@@ -1408,13 +1268,2 @@\n-    if (enabled) {\n-        if (resizable.prev) {\n-            set_window_resizable(true);\n-        }\n-    } else {\n-        if (resizable.value) {\n-            set_window_resizable(false);\n-            resizable.prev = true;\n-        } else if (resizable.request == REQUEST_RESIZABLE) {\n-            resizable.request = REQUEST_NOT_RESIZABLE;\n-            resizable.prev = true;\n-        }\n-    }\n+    is_disabled = !enabled;\n+    update_window_constraints();\n@@ -1424,2 +1273,2 @@\n-    resizable.minw = w;\n-    resizable.minh = h;\n+    resizable.minw = (w <= 0) ? 1 : w;\n+    resizable.minh = (h <= 0) ? 1 : h;\n@@ -1534,0 +1383,34 @@\n+void WindowContextTop::notify_window_resize() {\n+    int w = geometry_get_window_width(&geometry);\n+    int h = geometry_get_window_height(&geometry);\n+\n+    mainEnv->CallVoidMethod(jwindow, jWindowNotifyResize,\n+            (is_maximized)\n+                ? com_sun_glass_events_WindowEvent_MAXIMIZE\n+                : com_sun_glass_events_WindowEvent_RESIZE,\n+            w, h);\n+    CHECK_JNI_EXCEPTION(mainEnv)\n+\n+    if (jview) {\n+        int cw = geometry_get_content_width(&geometry);\n+        int ch = geometry_get_content_height(&geometry);\n+\n+        mainEnv->CallVoidMethod(jview, jViewNotifyResize, cw, ch);\n+        CHECK_JNI_EXCEPTION(mainEnv)\n+    }\n+}\n+\n+void WindowContextTop::notify_window_move() {\n+    int x = geometry_get_window_x(&geometry);\n+    int y = geometry_get_window_y(&geometry);\n+\n+    mainEnv->CallVoidMethod(jwindow, jWindowNotifyMove, x, y);\n+    CHECK_JNI_EXCEPTION(mainEnv)\n+\n+    if (jview) {\n+        mainEnv->CallVoidMethod(jview, jViewNotifyView,\n+                com_sun_glass_events_ViewEvent_MOVE);\n+        CHECK_JNI_EXCEPTION(mainEnv)\n+    }\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":179,"deletions":296,"binary":false,"changes":475,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+#include <X11\/Xatom.h>\n+#include <X11\/Xutil.h>\n@@ -49,6 +51,0 @@\n-enum request_type {\n-    REQUEST_NONE,\n-    REQUEST_RESIZABLE,\n-    REQUEST_NOT_RESIZABLE\n-};\n-\n@@ -71,1 +67,2 @@\n-    refx(), refy(), gravity_x(), gravity_y(), current_width(), current_height(), extents() {}\n+    refx(), refy(), gravity_x(), gravity_y(), current_width(), current_height(),\n+    current_x(), current_y(), extents() {}\n@@ -89,2 +86,1 @@\n-    \/\/ the last width which was configured or obtained from configure\n-    \/\/ notification\n+    \/\/ the last values which was configured or obtained from configure notification\n@@ -92,3 +88,0 @@\n-\n-    \/\/ the last height which was configured or obtained from configure\n-    \/\/ notification\n@@ -96,0 +89,2 @@\n+    int current_x;\n+    int current_y;\n@@ -98,1 +93,0 @@\n-\n@@ -176,1 +170,1 @@\n-    struct _XIM{\n+    struct _XIM {\n@@ -195,0 +189,1 @@\n+    bool is_disabled;\n@@ -272,4 +267,3 @@\n-    struct _Resizable{\/\/ we can't use set\/get gtk_window_resizable function\n-        _Resizable(): request(REQUEST_NONE), value(true), prev(false),\n-                minw(-1), minh(-1), maxw(-1), maxh(-1){}\n-        request_type request; \/\/request for future setResizable\n+    struct _Resizable {\/\/ we can't use set\/get gtk_window_resizable function\n+        _Resizable(): value(true),\n+                minw(-1), minh(-1), maxw(-1), maxh(-1) {}\n@@ -277,1 +271,0 @@\n-        bool prev; \/\/former resizable value (used in setEnabled for parents of modal window)\n@@ -281,1 +274,0 @@\n-    bool frame_extents_initialized;\n@@ -283,2 +275,0 @@\n-    bool location_assigned;\n-    bool size_assigned;\n@@ -286,0 +276,1 @@\n+    bool frame_extents_received;\n@@ -292,11 +283,1 @@\n-    bool is_null_extents() { return is_null_extents(geometry.extents); }\n-\n-    bool is_null_extents(WindowFrameExtents ex) {\n-        return !ex.top && !ex.left && !ex.bottom && !ex.right;\n-    }\n-\n-    static WindowFrameExtents normal_extents;\n-    static WindowFrameExtents utility_extents;\n-\n-    long event_serial;\n-\n+    static WindowFrameExtents cached_extents;\n@@ -339,2 +320,0 @@\n-    void process_key(GdkEventKey*);\n-    void process_mouse_button(GdkEventButton*);\n@@ -344,1 +323,0 @@\n-    bool get_frame_extents_property(int *, int *, int *, int *);\n@@ -347,3 +325,1 @@\n-    bool update_frame_extents();\n-    void set_cached_extents(WindowFrameExtents ex);\n-    WindowFrameExtents get_cached_extents();\n+    void update_frame_extents();\n@@ -352,1 +328,0 @@\n-    void set_window_resizable(bool);\n@@ -356,1 +331,2 @@\n-    void ensure_window_size();\n+    void notify_window_move();\n+    void notify_window_resize();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":17,"deletions":41,"binary":false,"changes":58,"status":"modified"}]}