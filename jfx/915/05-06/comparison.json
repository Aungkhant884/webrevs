{"files":[{"patch":"@@ -705,1 +705,5 @@\n-WindowFrameExtents WindowContextTop::cached_extents = {0, 0, 0, 0};\n+\/\/ Work-around because frame extents are only obtained after window is shown.\n+\/\/ This is used to know the total window size (content + decoration)\n+\/\/ The first window will have a duplicated resize event, subsequent windows will use the cached value.\n+WindowFrameExtents WindowContextTop::normal_extents = {0, 0, 0, 0};\n+WindowFrameExtents WindowContextTop::utility_extents = {0, 0, 0, 0};\n@@ -718,0 +722,1 @@\n+            is_fullscreen(false),\n@@ -773,0 +778,1 @@\n+        geometry.extents = get_cached_extents();\n@@ -829,0 +835,12 @@\n+void WindowContextTop::set_cached_extents(WindowFrameExtents ex) {\n+    if (window_type == NORMAL) {\n+        normal_extents = ex;\n+    } else {\n+        utility_extents = ex;\n+    }\n+}\n+\n+WindowFrameExtents WindowContextTop::get_cached_extents() {\n+    return window_type == NORMAL ? normal_extents : utility_extents;\n+}\n+\n@@ -864,2 +882,1 @@\n-                    cached_extents = geometry.extents;\n-\n+                    set_cached_extents(geometry.extents);\n@@ -867,0 +884,12 @@\n+\n+                    \/\/ set bounds again to set to correct window size that must\n+                    \/\/ be the total width and height accounting extents\n+                    if (geometry.final_width.type != BOUNDSTYPE_WINDOW\n+                        || geometry.final_height.type != BOUNDSTYPE_WINDOW) {\n+                        set_bounds(-1, -1, false, false, -1, -1, geometry.final_width.value,\n+                                        geometry.final_height.value);\n+                    } else {\n+                        set_bounds(-1, -1, false, false, geometry.final_width.value,\n+                                    geometry.final_height.value, -1, -1);\n+                    }\n+\n@@ -998,0 +1027,6 @@\n+    \/\/ This will prevent sending window sizes before java is done configuring the window\n+    \/\/ Without it, some content size oriented window gets the size before finishing the layout\n+    if (!map_received && !is_fullscreen && !is_maximized) {\n+        return;\n+    }\n+\n@@ -1005,4 +1040,2 @@\n-    bool size_changed = (geometry.final_width.type != BOUNDSTYPE_CONTENT\n-                        || geometry.final_height.type != BOUNDSTYPE_CONTENT\n-                        || geometry.final_width.value != w\n-                        || geometry.final_height.value != h);\n+    bool size_changed = geometry.final_width.value != w\n+                        || geometry.final_height.value != h;\n@@ -1105,4 +1138,0 @@\n-    if (frame_type == TITLED && !frame_extents_received) {\n-        geometry.extents = cached_extents;\n-    }\n-\n@@ -1119,1 +1148,0 @@\n-        geometry.current_width = geometry_get_window_width(&geometry);\n@@ -1125,1 +1153,0 @@\n-        geometry.current_width = geometry_get_window_width(&geometry);\n@@ -1133,1 +1160,0 @@\n-        geometry.current_height = geometry_get_window_height(&geometry);\n@@ -1139,1 +1165,0 @@\n-        geometry.current_height = geometry_get_window_height(&geometry);\n@@ -1146,1 +1171,1 @@\n-            geometry.refx = x + geometry.current_width * geometry.gravity_x;\n+            geometry.refx = x + geometry_get_window_width(&geometry) * geometry.gravity_x;\n@@ -1153,1 +1178,1 @@\n-            geometry.refy = y + geometry.current_height * geometry.gravity_y;\n+            geometry.refy = y + geometry_get_window_height(&geometry) * geometry.gravity_y;\n@@ -1198,1 +1223,1 @@\n-    if (minimize) {\n+       if (minimize) {\n@@ -1232,0 +1257,1 @@\n+    is_fullscreen = true;\n@@ -1236,0 +1262,1 @@\n+    is_fullscreen = false;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":45,"deletions":18,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    refx(), refy(), gravity_x(), gravity_y(), current_width(), current_height(),\n+    refx(), refy(), gravity_x(), gravity_y(),\n@@ -86,3 +86,0 @@\n-    \/\/ the last values which was configured or obtained from configure notification\n-    int current_width;\n-    int current_height;\n@@ -276,0 +273,1 @@\n+    bool is_fullscreen;\n@@ -283,1 +281,2 @@\n-    static WindowFrameExtents cached_extents;\n+    static WindowFrameExtents normal_extents;\n+    static WindowFrameExtents utility_extents;\n@@ -326,0 +325,2 @@\n+    void set_cached_extents(WindowFrameExtents ex);\n+    WindowFrameExtents get_cached_extents();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}