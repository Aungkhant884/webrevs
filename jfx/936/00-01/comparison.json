{"files":[{"patch":"@@ -46,0 +46,8 @@\n+\/**\n+ * Tests the snapping of all container inside {@link javafx.scene.layout}.\n+ * Containers must always snap their width\/height as well as there insets, otherwise the children may look blurry or\n+ * have other side effects.\n+ *\n+ * @see Region#snapPositionX(double)\n+ * @see Region#snapPositionY(double)\n+ *\/\n@@ -48,0 +56,2 @@\n+    private static final double DELTA = 0.00001;\n+\n@@ -59,3 +69,3 @@\n-    @MethodSource(value = { \"getContainerInstruction\" })\n-    void testContainerSnappingScale100(ContainerInstruction<Region> containerInstruction) {\n-        testContainerSnappingImpl(containerInstruction, 1);\n+    @MethodSource(value = { \"getContainerCreators\" })\n+    void testContainerSnappingScale100(ContainerCreator<Region> containerCreator) {\n+        testContainerSnappingImpl(containerCreator, 1);\n@@ -65,3 +75,3 @@\n-    @MethodSource(value = { \"getContainerInstruction\" })\n-    void testContainerSnappingScale125(ContainerInstruction<Region> containerInstruction) {\n-        testContainerSnappingImpl(containerInstruction, 1.25);\n+    @MethodSource(value = { \"getContainerCreators\" })\n+    void testContainerSnappingScale125(ContainerCreator<Region> containerCreator) {\n+        testContainerSnappingImpl(containerCreator, 1.25);\n@@ -71,3 +81,3 @@\n-    @MethodSource(value = { \"getContainerInstruction\" })\n-    void testContainerSnappingScale150(ContainerInstruction<Region> containerInstruction) {\n-        testContainerSnappingImpl(containerInstruction, 1.5);\n+    @MethodSource(value = { \"getContainerCreators\" })\n+    void testContainerSnappingScale150(ContainerCreator<Region> containerCreator) {\n+        testContainerSnappingImpl(containerCreator, 1.5);\n@@ -77,3 +87,3 @@\n-    @MethodSource(value = { \"getContainerInstruction\" })\n-    void testContainerSnappingScale175(ContainerInstruction<Region> containerInstruction) {\n-        testContainerSnappingImpl(containerInstruction, 1.75);\n+    @MethodSource(value = { \"getContainerCreators\" })\n+    void testContainerSnappingScale175(ContainerCreator<Region> containerCreator) {\n+        testContainerSnappingImpl(containerCreator, 1.75);\n@@ -83,3 +93,3 @@\n-    @MethodSource(value = { \"getContainerInstruction\" })\n-    void testContainerSnappingScale200(ContainerInstruction<Region> containerInstruction) {\n-        testContainerSnappingImpl(containerInstruction, 2);\n+    @MethodSource(value = { \"getContainerCreators\" })\n+    void testContainerSnappingScale200(ContainerCreator<Region> containerCreator) {\n+        testContainerSnappingImpl(containerCreator, 2);\n@@ -88,1 +98,1 @@\n-    private void testContainerSnappingImpl(ContainerInstruction<Region> containerInstruction, double scale) {\n+    private void testContainerSnappingImpl(ContainerCreator<Region> containerCreator, double scale) {\n@@ -100,1 +110,1 @@\n-        Region container = containerInstruction.apply(child);\n+        Region container = containerCreator.apply(child);\n@@ -122,2 +132,2 @@\n-            assertEquals(widthHeight + snappedPaddingX, container.minWidth(-1), 0.00001, className);\n-            assertEquals(widthHeight + snappedPaddingY, container.minHeight(-1), 0.00001, className);\n+            assertEquals(widthHeight + snappedPaddingX, container.minWidth(-1), DELTA, className);\n+            assertEquals(widthHeight + snappedPaddingY, container.minHeight(-1), DELTA, className);\n@@ -126,2 +136,2 @@\n-        assertEquals(widthHeight + snappedPaddingX, container.prefWidth(-1), 0.00001, className);\n-        assertEquals(widthHeight + snappedPaddingY, container.prefHeight(-1), 0.00001, className);\n+        assertEquals(widthHeight + snappedPaddingX, container.prefWidth(-1), DELTA, className);\n+        assertEquals(widthHeight + snappedPaddingY, container.prefHeight(-1), DELTA, className);\n@@ -130,1 +140,1 @@\n-    static Stream<ContainerInstruction<?>> getContainerInstruction() {\n+    static Stream<ContainerCreator<?>> getContainerCreators() {\n@@ -135,7 +145,4 @@\n-\/\/                new ContainerInstruction<>(Pane::new),\n-\/\/                new ContainerInstruction<>(StackPane::new),\n-\/\/                new ContainerInstruction<>(BorderPane::new),\n-                new ContainerInstruction<>(HBox::new),\n-                new ContainerInstruction<>(VBox::new),\n-                new ContainerInstruction<>(node -> {\n-                GridPane gridPane = new GridPane();\n+                new ContainerCreator<>(HBox::new),\n+                new ContainerCreator<>(VBox::new),\n+                new ContainerCreator<>(node -> {\n+                    GridPane gridPane = new GridPane();\n@@ -145,1 +152,4 @@\n-\/\/                new ContainerInstruction<>(node -> {\n+\/\/                new ContainerCreator<>(Pane::new),\n+\/\/                new ContainerCreator<>(StackPane::new),\n+\/\/                new ContainerCreator<>(BorderPane::new),\n+\/\/                new ContainerCreator<>(node -> {\n@@ -150,2 +160,2 @@\n-\/\/                new ContainerInstruction<>(AnchorPane::new), \/\/ JDK-8295078\n-\/\/                new ContainerInstruction<>(node -> {\n+\/\/                new ContainerCreator<>(AnchorPane::new), \/\/ fixed by JDK-8295078\n+\/\/                new ContainerCreator<>(node -> {\n@@ -159,1 +169,1 @@\n-    private record ContainerInstruction<S extends Region>(Function<Node, S> containerFunction) {\n+    private record ContainerCreator<S extends Region>(Function<Node, S> containerCreatorFunction) {\n@@ -161,1 +171,1 @@\n-            return containerFunction().apply(child);\n+            return containerCreatorFunction().apply(child);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/SnappingTest.java","additions":44,"deletions":34,"binary":false,"changes":78,"status":"modified"}]}