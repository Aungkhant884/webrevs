{"files":[{"patch":"@@ -52,1 +52,1 @@\n-    private static final boolean FAST_ISORT = false;\n+    private static final boolean FAST_ISORT = true;\n@@ -111,0 +111,1 @@\n+     * @param sorter sorter context\n@@ -112,1 +113,3 @@\n-     * @param b the permutation array to be handled\n+     * @param auxA auxiliary storage for the array to be sorted\n+     * @param b the secondary array to be ordered\n+     * @param auxB auxiliary storage for the permutation array to be handled\n@@ -120,1 +123,1 @@\n-        if (FAST_ISORT && ((high - low) <= 24)) {\n+        if (FAST_ISORT && ((high - low) <= MAX_INSERTION_SORT_SIZE)) {\n@@ -133,1 +136,1 @@\n-     * @param sorter parallel context\n+     * @param sorter sorter context\n@@ -135,0 +138,1 @@\n+     * @param b the secondary array to be ordered\n@@ -428,0 +432,1 @@\n+     * @param b the secondary array to be ordered\n@@ -565,0 +570,1 @@\n+     * @param b the secondary array to be ordered\n@@ -589,0 +595,1 @@\n+     * @param b the secondary array to be ordered\n@@ -608,1 +615,2 @@\n-     * @param a the given array\n+     * @param a the array to be sorted\n+     * @param b the secondary array to be ordered\n@@ -610,1 +618,2 @@\n-     * @param valueA the given element\n+     * @param valueA the given element in a\n+     * @param valueB the given element in b\n@@ -635,1 +644,1 @@\n-     * @param sorter parallel context\n+     * @param sorter sorter context\n@@ -637,0 +646,1 @@\n+     * @param b the secondary array to be ordered\n@@ -770,2 +780,3 @@\n-     * @param srcA the source array\n-     * @param dstA the temporary buffer used in merging\n+     * @param srcA the source array for the array to be sorted (a)\n+     * @param dstA the temporary buffer used in merging (a)\n+     * @param srcB the source array for the secondary array to be ordered (b)\n@@ -773,0 +784,1 @@\n+     * @param dstB the temporary buffer used in merging (b)\n@@ -826,1 +838,2 @@\n-     * @param dstA the destination where parts are merged\n+     * @param dstA the destination where parts are merged (a)\n+     * @param dstB the destination where parts are merged (b)\n@@ -828,1 +841,2 @@\n-     * @param a1 the first part\n+     * @param a1 the first part (a)\n+     * @param b1 the first part (b)\n@@ -831,1 +845,2 @@\n-     * @param a2 the second part\n+     * @param a2 the second part (a)\n+     * @param b2 the second part (b)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/marlin\/DualPivotQuicksort20191112Ext.java","additions":27,"deletions":12,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -977,1 +977,1 @@\n-    public static void setupOnce() {\n+    public static void setupOnce() throws Exception {\n@@ -981,8 +981,2 @@\n-        try {\n-            assertTrue(\"Timeout waiting for Application to launch\",\n-                    launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n-        } catch (InterruptedException ex) {\n-            AssertionFailedError err = new AssertionFailedError(\"Unexpected exception\");\n-            err.initCause(ex);\n-            throw err;\n-        }\n+        assertTrue(\"Timeout waiting for Application to launch\",\n+                launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/ClipShapeTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-    public static void setupOnce() {\n+    public static void setupOnce() throws Exception {\n@@ -112,8 +112,2 @@\n-        try {\n-            assertTrue(\"Timeout waiting for Application to launch\",\n-                    launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n-        } catch (InterruptedException ex) {\n-            AssertionFailedError err = new AssertionFailedError(\"Unexpected exception\");\n-            err.initCause(ex);\n-            throw err;\n-        }\n+        assertTrue(\"Timeout waiting for Application to launch\",\n+                launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/DashedRectTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -136,2 +136,1 @@\n-    public static void setupOnce() {\n-\n+    public static void setupOnce() throws Exception {\n@@ -141,8 +140,2 @@\n-        try {\n-            assertTrue(\"Timeout waiting for Application to launch\",\n-                    launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n-        } catch (InterruptedException ex) {\n-            AssertionFailedError err = new AssertionFailedError(\"Unexpected exception\");\n-            err.initCause(ex);\n-            throw err;\n-        }\n+        assertTrue(\"Timeout waiting for Application to launch\",\n+                launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/HugePolygonClipTest.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-    public static void setupOnce() {\n+    public static void setupOnce() throws Exception {\n@@ -147,8 +147,2 @@\n-        try {\n-            assertTrue(\"Timeout waiting for Application to launch\",\n-                    launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n-        } catch (InterruptedException ex) {\n-            AssertionFailedError err = new AssertionFailedError(\"Unexpected exception\");\n-            err.initCause(ex);\n-            throw err;\n-        }\n+        assertTrue(\"Timeout waiting for Application to launch\",\n+                launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/QPathTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    public static void setupOnce() {\n+    public static void setupOnce() throws Exception {\n@@ -109,8 +109,2 @@\n-        try {\n-            assertTrue(\"Timeout waiting for Application to launch\",\n-                    launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n-        } catch (InterruptedException ex) {\n-            AssertionFailedError err = new AssertionFailedError(\"Unexpected exception\");\n-            err.initCause(ex);\n-            throw err;\n-        }\n+        assertTrue(\"Timeout waiting for Application to launch\",\n+                launchLatch.await(TIMEOUT, TimeUnit.MILLISECONDS));\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/marlin\/ScaleClipTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}