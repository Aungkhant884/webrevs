{"files":[{"patch":"@@ -1991,0 +1991,1 @@\n+        testImplementation group: \"org.junit.jupiter\", name: \"junit-jupiter-params\", version: \"5.8.1\"\n@@ -1994,1 +1995,0 @@\n-        testRuntimeOnly group: \"org.junit.jupiter\", name: \"junit-jupiter-params\", version: \"5.8.1\"\n","filename":"build.gradle","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -31,0 +33,2 @@\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.ValueSource;\n@@ -42,0 +46,26 @@\n+\n+    static int callCount;\n+    static int[] intValues = {1, 2, 3};\n+    @ValueSource(ints = {1, 2, 3})\n+    @ParameterizedTest\n+    void testParameterizedTest(int value) {\n+        boolean match = false;\n+        for (int i = 0; i < intValues.length; i++) {\n+            if (value == intValues[i]) {\n+                match = true;\n+                intValues[i] = 0;\n+                break;\n+            }\n+        }\n+        callCount++;\n+\n+        assertTrue(match, \"Received incorrect value as parameter\");\n+        assertTrue(callCount <= intValues.length, \"Test function called more than number of ValueSources\");\n+        if (callCount == intValues.length) {\n+            for (int i : intValues) {\n+                if (i != 0) {\n+                    fail(\"Test method not called for Value \" + i);\n+                }\n+            }\n+        }\n+    }\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/JUnit5Test.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"}]}