{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -606,0 +606,1 @@\n+\n@@ -1321,0 +1322,14 @@\n+bool WindowContextTop::set_view(jobject view) {\n+    WindowContextBase::set_view(view);\n+\n+    \/\/ Notify the view size only if size is oriented by WINDOW, otherwise\n+    \/\/ it knows it's own size\n+    if (geometry.final_width.type == BOUNDSTYPE_WINDOW\n+        || geometry.final_height.type == BOUNDSTYPE_WINDOW) {\n+\n+        notify_view_resize();\n+    }\n+\n+    return true;\n+}\n+\n@@ -1325,0 +1340,10 @@\n+void WindowContextTop::notify_view_resize() {\n+    if (jview) {\n+        int cw = geometry_get_content_width(&geometry);\n+        int ch = geometry_get_content_height(&geometry);\n+\n+        mainEnv->CallVoidMethod(jview, jViewNotifyResize, cw, ch);\n+        CHECK_JNI_EXCEPTION(mainEnv)\n+    }\n+}\n+\n@@ -1333,7 +1358,1 @@\n-    if (jview) {\n-        int cw = geometry_get_content_width(&geometry);\n-        int ch = geometry_get_content_height(&geometry);\n-\n-        mainEnv->CallVoidMethod(jview, jViewNotifyResize, cw, ch);\n-        CHECK_JNI_EXCEPTION(mainEnv)\n-    }\n+    notify_view_resize();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,1 @@\n+    virtual void notify_view_resize() = 0;\n@@ -305,0 +306,1 @@\n+    void notify_view_resize();\n@@ -309,0 +311,1 @@\n+    bool set_view(jobject view);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}