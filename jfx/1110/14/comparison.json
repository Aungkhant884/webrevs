{"files":[{"patch":"@@ -277,1 +277,1 @@\n-        content = new AnchorPane(topLeft, center, bottomRight);\n+        content = new AnchorPane(center, topLeft, bottomRight);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/control\/infrastructure\/MouseEventFirerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1131,1 +1131,7 @@\n-        new KeyEventFirer(comboBox).doKeyPress(KeyCode.ENTER);\n+        var kFirer = new KeyEventFirer(comboBox);\n+        \/\/ Open selection\n+        kFirer.doKeyPress(KeyCode.DOWN, KeyModifier.ALT);\n+        \/\/ Select first\n+        kFirer.doKeyPress(KeyCode.DOWN);\n+        \/\/ Commit selection\n+        kFirer.doKeyPress(KeyCode.ENTER);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ComboBoxTest.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1190,0 +1190,4 @@\n+            if (!isIconified()) {\n+                peer.requestFocus();\n+            }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Stage.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,1 @@\n+    virtual void notify_view_resize() = 0;\n@@ -305,0 +306,1 @@\n+    void notify_view_resize();\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+import javafx.application.Application;\n+import javafx.scene.text.Text;\n+import javafx.stage.Stage;\n+import javafx.scene.Scene;\n+import javafx.scene.layout.StackPane;\n+\n+\/***\n+ * Stage must initially only show on the OS taskbar, but not on the Screen.\n+ * If the stage pops on the Screen and then iconifies, it's wrong.\n+ *\/\n+public class StartIconified extends Application {\n+\n+    @Override\n+    public void start(Stage primaryStage) {\n+        primaryStage.setTitle(\"Iconified Window Test\");\n+        primaryStage.setWidth(600);\n+        primaryStage.setHeight(150);\n+        primaryStage.setIconified(true);\n+\n+        Text text = new Text(\"\"\"\n+                1. The stage must initially appear on the OS taskbar (iconified), but not on the Screen\n+                2. Observe if the stage pops and then iconifies (wrong)\"\"\");\n+\n+        Scene scene = new Scene(new StackPane(text));\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(StartIconified.class, args);\n+    }\n+}\n","filename":"tests\/manual\/stage\/StartIconified.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"}]}