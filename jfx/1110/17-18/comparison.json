{"files":[{"patch":"@@ -49,1 +49,0 @@\n-    \/\/ empty - not needed by this implementation\n@@ -51,1 +50,1 @@\n-    protected void _updateViewSize(long ptr) {}\n+    protected native void _updateViewSize(long ptr);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkWindow.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -142,0 +142,14 @@\n+\/*\n+ * Class:     com_sun_glass_ui_gtk_GtkWindow\n+ * Method:    _updateViewSize\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_com_sun_glass_ui_gtk_GtkWindow__1updateViewSize\n+  (JNIEnv * env, jobject obj, jlong ptr) {\n+    (void)env;\n+    (void)obj;\n+\n+    WindowContext* ctx = JLONG_TO_WINDOW_CTX(ptr);\n+    ctx->update_view_size();\n+}\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/GlassWindow.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1321,2 +1321,3 @@\n-bool WindowContextTop::set_view(jobject view) {\n-    WindowContextBase::set_view(view);\n+void WindowContextTop::set_owner(WindowContext * owner_ctx) {\n+    owner = owner_ctx;\n+}\n@@ -1324,0 +1325,1 @@\n+void WindowContextTop::update_view_size() {\n@@ -1331,6 +1333,0 @@\n-\n-    return true;\n-}\n-\n-void WindowContextTop::set_owner(WindowContext * owner_ctx) {\n-    owner = owner_ctx;\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -148,0 +148,1 @@\n+    virtual void update_view_size() = 0;\n@@ -306,0 +307,1 @@\n+    void update_view_size();\n@@ -311,1 +313,0 @@\n-    bool set_view(jobject view);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}