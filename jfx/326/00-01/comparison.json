{"files":[{"patch":"@@ -73,1 +73,1 @@\n- *     - (3rd order) impl_cssKeys includes all the public properties\n+ *     - (3rd order) getCssMetaData includes all the public properties\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ControlTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        \/\/ Gotta put this in a window for the pulse listener to get hooked up (see Scene#impl_initPeer().\n+        \/\/ Gotta put this in a window for the pulse listener to get hooked up (see Scene#initPeer().\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/MiscellaneousTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -840,15 +840,0 @@\n-\/\/    \/**\n-\/\/     * During layout the order and contents of cells will change. We need\n-\/\/     * to make sure that CSS for cells is applied at this time. To test this,\n-\/\/     * I just set the position and perform a new pulse. Since layout happens\n-\/\/     * after the CSS updates are applied, if the test fails, then there will\n-\/\/     * be cells left in a state where they need their CSS applied.\n-\/\/     *\/\n-\/\/    @Test public void testCellLifeCycle_CSSUpdatesHappenDuringLayout() {\n-\/\/        flow.setPosition(.35);\n-\/\/        pulse();\n-\/\/        for (int i = 0; i < VirtualFlowShim.cells_size(flow.cells); i++) {\n-\/\/            IndexedCell cell = VirtualFlowShim.<T>cells_get(flow.cells, i);\n-\/\/            assertEquals(CssFlags.CLEAN, cell.impl_getCSSFlags());\n-\/\/        }\n-\/\/    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/VirtualFlowTest.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}