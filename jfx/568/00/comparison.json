{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,3 +106,8 @@\n-    \/** {@inheritDoc} *\/\n-    @Override double leftLabelPadding() {\n-        double leftPadding = super.leftLabelPadding();\n+    @Override\n+    protected void layoutChildren(double x, double y, double w, double h) {\n+        x += calculateIndentation();\n+        super.layoutChildren(x, y, w, h);\n+    }\n+\n+    private double calculateIndentation() {\n+        double indentation = 0;\n@@ -117,1 +122,1 @@\n-        if (tableColumn == null) return leftPadding;\n+        if (tableColumn == null) return indentation;\n@@ -122,1 +127,1 @@\n-        if (treeTable == null) return leftPadding;\n+        if (treeTable == null) return indentation;\n@@ -127,2 +132,2 @@\n-        if ((treeColumn == null && columnIndex != 0) || (treeColumn != null && ! tableColumn.equals(treeColumn))) {\n-            return leftPadding;\n+        if ((treeColumn == null && columnIndex != 0) || (treeColumn != null && !tableColumn.equals(treeColumn))) {\n+            return indentation;\n@@ -132,1 +137,1 @@\n-        if (treeTableRow == null) return leftPadding;\n+        if (treeTableRow == null) return indentation;\n@@ -135,1 +140,1 @@\n-        if (treeItem == null) return leftPadding;\n+        if (treeItem == null) return indentation;\n@@ -138,1 +143,1 @@\n-        if (! treeTable.isShowRoot()) nodeLevel--;\n+        if (!treeTable.isShowRoot()) nodeLevel--;\n@@ -144,1 +149,1 @@\n-        leftPadding += nodeLevel * indentPerLevel;\n+        indentation += nodeLevel * indentPerLevel;\n@@ -148,1 +153,1 @@\n-        leftPadding += mdwp.containsKey(treeColumn) ? mdwp.get(treeColumn) : 0;\n+        indentation += mdwp.containsKey(treeColumn) ? mdwp.get(treeColumn) : 0;\n@@ -152,1 +157,1 @@\n-        leftPadding += graphic == null ? 0 : graphic.prefWidth(height);\n+        indentation += graphic == null ? 0 : graphic.prefWidth(height);\n@@ -154,1 +159,1 @@\n-        return leftPadding;\n+        return indentation;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TreeTableCellSkin.java","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,163 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.scene.control.skin;\n+\n+import com.sun.javafx.tk.Toolkit;\n+import javafx.scene.Node;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.TreeItem;\n+import javafx.scene.control.TreeTableCell;\n+import javafx.scene.control.TreeTableColumn;\n+import javafx.scene.control.TreeTableRow;\n+import javafx.scene.control.TreeTableView;\n+import javafx.scene.control.skin.LabeledSkinBase;\n+import javafx.scene.control.skin.LabeledSkinBaseShim;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import test.com.sun.javafx.scene.control.infrastructure.StageLoader;\n+import test.com.sun.javafx.scene.control.infrastructure.VirtualFlowTestUtils;\n+\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+\/**\n+ * Tests for the indentation of the {@link javafx.scene.control.TreeTableView}.\n+ *\/\n+public class TreeTableViewIndentationTest {\n+\n+    private TreeTableView<String> treeTableView;\n+    private TreeTableColumn<String, String> column;\n+    private StageLoader stageLoader;\n+\n+    @Before\n+    public void setup() {\n+        treeTableView = new TreeTableView<>();\n+\n+        column = new TreeTableColumn<>(\"Column\");\n+        treeTableView.getColumns().add(column);\n+\n+        TreeItem<String> root = new TreeItem<>(\"Root\");\n+        root.getChildren().addAll(List.of(new TreeItem<>(\"TreeItem 1\"), new TreeItem<>(\"TreeItem 2\")));\n+        treeTableView.setRoot(root);\n+\n+        stageLoader = new StageLoader(treeTableView);\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        stageLoader.dispose();\n+    }\n+\n+    @Test\n+    public void testIndentationOfCell() {\n+        column.setCellFactory(col -> new TreeTableCell<>());\n+\n+        testXCoordinateIsAfterDisclosureNode();\n+    }\n+\n+    @Test\n+    public void testIndentationOfCellWithGraphic() {\n+        column.setCellFactory(col -> new TreeTableCell<>() {\n+\n+            @Override\n+            protected void updateItem(String item, boolean empty) {\n+                super.updateItem(item, empty);\n+\n+                if (empty) {\n+                    setGraphic(null);\n+                } else {\n+                    setGraphic(new Label(\"Graphic\"));\n+                }\n+            }\n+        });\n+\n+        testXCoordinateIsAfterDisclosureNode();\n+    }\n+\n+    @Test\n+    public void testIndentationOfCellWithText() {\n+        column.setCellFactory(col -> new TreeTableCell<>() {\n+\n+            @Override\n+            protected void updateItem(String item, boolean empty) {\n+                super.updateItem(item, empty);\n+\n+                if (empty) {\n+                    setText(null);\n+                } else {\n+                    setText(\"Text\");\n+                }\n+            }\n+        });\n+\n+        testXCoordinateIsAfterDisclosureNode();\n+    }\n+\n+    @Test\n+    public void testIndentationOfCellWithGraphicAndText() {\n+        column.setCellFactory(col -> new TreeTableCell<>() {\n+\n+            @Override\n+            protected void updateItem(String item, boolean empty) {\n+                super.updateItem(item, empty);\n+\n+                if (empty) {\n+                    setGraphic(null);\n+                    setText(null);\n+                } else {\n+                    setGraphic(new Label(\"Graphic\"));\n+                    setText(\"Text\");\n+                }\n+            }\n+        });\n+\n+        testXCoordinateIsAfterDisclosureNode();\n+    }\n+\n+    private void testXCoordinateIsAfterDisclosureNode() {\n+        Toolkit.getToolkit().firePulse();\n+\n+        TreeTableRow<String> row = (TreeTableRow<String>) VirtualFlowTestUtils.getCell(treeTableView, 0);\n+        TreeTableCell<String, String> cell = (TreeTableCell<String, String>) row.getChildrenUnmodifiable().get(1);\n+\n+        Node graphic = cell.getGraphic();\n+        double x;\n+        if (graphic != null) {\n+            x = graphic.getLayoutX();\n+        } else {\n+            x = LabeledSkinBaseShim.get_text((LabeledSkinBase<TreeTableCell>) cell.getSkin()).getLayoutX();\n+        }\n+\n+        double leftInset = cell.snappedLeftInset();\n+        double disclosureNodeWidth = row.getDisclosureNode().prefWidth(-1);\n+        double expectedX = leftInset + disclosureNodeWidth;\n+\n+        assertEquals(expectedX, x, 0);\n+    }\n+\n+}\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/TreeTableViewIndentationTest.java","additions":163,"deletions":0,"binary":false,"changes":163,"status":"added"}]}