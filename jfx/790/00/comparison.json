{"files":[{"patch":"@@ -2347,1 +2347,1 @@\n-            if (shift != 0 && startRow >= 0 && anchor != null && (c.wasRemoved() || c.wasAdded())) {\n+            if (shift != 0 && startRow >= 0 && anchor != null && anchor.getRow() >= startRow && (c.wasRemoved() || c.wasAdded())) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2625,1 +2625,1 @@\n-                        if (anchor != null) {\n+                        if (anchor != null && anchor.getRow() >= startRow) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5755,0 +5755,43 @@\n+\n+    \/\/ see JDK-8284665\n+    @Test\n+    public void testAnchorRemainsWhenAddingMoreItemsBelow() {\n+        TableView<String> stringTableView = new TableView<>();\n+        stringTableView.getItems().addAll(\"a\", \"b\", \"c\", \"d\");\n+\n+        TableColumn<String,String> column = new TableColumn<>(\"Column\");\n+        column.setCellValueFactory(cdf -> new ReadOnlyStringWrapper(cdf.getValue()));\n+        stringTableView.getColumns().add(column);\n+\n+        TableSelectionModel<String> sm = stringTableView.getSelectionModel();\n+        sm.setSelectionMode(SelectionMode.MULTIPLE);\n+\n+        \/\/ click on row 1\n+        Cell startCell = VirtualFlowTestUtils.getCell(stringTableView, 1, 0);\n+        new MouseEventFirer(startCell).fireMousePressAndRelease();\n+\n+        assertTrue(sm.isSelected(1));\n+        assertEquals(\"b\", sm.getSelectedItem());\n+\n+        TablePosition anchor = TableCellBehavior.getAnchor(stringTableView, null);\n+        assertTrue(TableCellBehavior.hasNonDefaultAnchor(stringTableView));\n+        assertEquals(1, anchor.getRow());\n+        assertEquals(column, anchor.getTableColumn());\n+\n+        \/\/ now add a new item\n+        stringTableView.getItems().add(\"e\");\n+\n+        \/\/ select also row 2\n+        Cell endCell = VirtualFlowTestUtils.getCell(stringTableView, 2, 0);\n+        new MouseEventFirer(endCell).fireMousePressAndRelease(KeyModifier.SHIFT);\n+\n+        \/\/ row 1 should remain selected\n+        assertTrue(sm.isSelected(1));\n+        assertTrue(sm.isSelected(2));\n+\n+        \/\/ anchor should remain at 1\n+        anchor = TableCellBehavior.getAnchor(stringTableView, null);\n+        assertTrue(TableCellBehavior.hasNonDefaultAnchor(stringTableView));\n+        assertEquals(1, anchor.getRow());\n+        assertEquals(column, anchor.getTableColumn());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewTest.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -6834,0 +6834,55 @@\n+    \/\/ see JDK-8284665\n+    @Test\n+    public void testAnchorRemainsWhenAddingMoreItemsBelow() {\n+        TreeItem<String> b;\n+        TreeItem<String> root = new TreeItem<>(\"Root\");\n+        root.setExpanded(true);\n+        root.getChildren().addAll(\n+                new TreeItem<>(\"a\"),\n+                b = new TreeItem<>(\"b\"),\n+                new TreeItem<>(\"c\"),\n+                new TreeItem<>(\"d\")\n+        );\n+\n+        TreeTableView<String> stringTreeView = new TreeTableView<>(root);\n+        stringTreeView.setShowRoot(false);\n+\n+        TreeTableColumn<String,String> column = new TreeTableColumn<>(\"Column\");\n+        column.setCellValueFactory(cdf -> new ReadOnlyStringWrapper(cdf.getValue().getValue()));\n+        stringTreeView.getColumns().add(column);\n+\n+        TreeTableView.TreeTableViewSelectionModel<String> sm = stringTreeView.getSelectionModel();\n+        sm.setSelectionMode(SelectionMode.MULTIPLE);\n+\n+        \/\/ test pre-conditions\n+        assertTrue(sm.isEmpty());\n+\n+        \/\/ click on row 1\n+        Cell startCell = VirtualFlowTestUtils.getCell(stringTreeView, 1, 0);\n+        new MouseEventFirer(startCell).fireMousePressAndRelease();\n+        assertTrue(sm.isSelected(1));\n+        assertEquals(b, sm.getSelectedItem());\n+\n+        TreeTablePosition<String, ?> anchor = TreeTableCellBehavior.getAnchor(stringTreeView, null);\n+        assertNotNull(anchor);\n+        assertTrue(TreeTableCellBehavior.hasNonDefaultAnchor(stringTreeView));\n+        assertEquals(1, anchor.getRow());\n+\n+        \/\/ now add a new item.\n+        root.getChildren().add(new TreeItem<>(\"e\"));\n+\n+        \/\/ select also row 2\n+        Cell endCell = VirtualFlowTestUtils.getCell(stringTreeView, 2, 0);\n+        new MouseEventFirer(endCell).fireMousePressAndRelease(KeyModifier.SHIFT);\n+\n+        \/\/ row 1 should remain selected\n+        assertTrue(sm.isSelected(1));\n+        assertTrue(sm.isSelected(2));\n+\n+        \/\/ anchor should remain at 1\n+        anchor = TreeTableCellBehavior.getAnchor(stringTreeView, null);\n+        assertNotNull(anchor);\n+        assertTrue(TreeTableCellBehavior.hasNonDefaultAnchor(stringTreeView));\n+        assertEquals(1, anchor.getRow());\n+        assertEquals(column, anchor.getTableColumn());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}