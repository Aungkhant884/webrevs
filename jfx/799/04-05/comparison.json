{"files":[{"patch":"@@ -38,2 +38,0 @@\n-EventListenerManager::EventListenerManager() { }\n-\n@@ -51,2 +49,0 @@\n-     JNIEnv *env = nullptr;\n-     env = JavaScriptCore_GetJavaEnv();\n@@ -112,3 +108,5 @@\n-    for (win_it = windowHasEvent.begin(); win_it != windowHasEvent.end() && !isReferringToOtherListener; win_it++) {\n-        if (window == win_it->second)\n-           windowHasEvent.erase(win_it->first);\n+    if (!isReferringToOtherListener) {\n+        for (win_it = windowHasEvent.begin(); win_it != windowHasEvent.end(); win_it++) {\n+            if (window == win_it->second)\n+                windowHasEvent.erase(win_it->first);\n+        }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/java\/EventListenerManager.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-#include<iterator>\n+#include <iterator>\n@@ -69,0 +69,1 @@\n+    EventListenerManager() = default;\n@@ -77,3 +78,0 @@\n-\n-private:\n-    EventListenerManager();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/java\/EventListenerManager.h","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    return jother && (this == jother);\n+    return this == jother;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/java\/JavaEventListener.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2151,1 +2151,1 @@\n-            static_cast<JavaEventListener *> (&listener.copyRef().get()));\n+           static_cast<JavaEventListener *> (&listener.copyRef().get()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Node.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -730,1 +730,5 @@\n-        \/\/ add events listeners again\n+        \/\/ Verify that the events are delivered to the listeners (0 and 2 are same)\n+        Thread.sleep(100);\n+        assertEquals(\"Click count\", 6, listeners.get(1).get().getClickCount() + listeners.get(0).get().getClickCount());\n+\n+        \/\/ remove events listeners again\n@@ -733,2 +737,0 @@\n-            assertEquals(NUM_DOM_NODES, domNodes1.size());\n-\n@@ -744,0 +746,11 @@\n+        submit(() -> {\n+            \/\/ Send clilck events\n+            click(webView1, 0);\n+            click(webView1, 1);\n+            click(webView1, 2);\n+        });\n+\n+        \/\/ Verify that the events count should not be increased\n+        Thread.sleep(100);\n+        assertEquals(\"Click count\", 6, listeners.get(1).get().getClickCount() + listeners.get(0).get().getClickCount());\n+\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/EventListenerLeakTest.java","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"}]}