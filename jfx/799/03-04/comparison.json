{"files":[{"patch":"@@ -29,1 +29,0 @@\n-#include <stdio.h>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/java\/EventListenerManager.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,2 +52,0 @@\n-        JNIEnv *env = nullptr;\n-        env = JavaScriptCore_GetJavaEnv();\n@@ -58,3 +56,1 @@\n-        JNIEnv *env = nullptr;\n-        env = JavaScriptCore_GetJavaEnv();\n-        env->DeleteGlobalRef(handler_);\n+        handler_.clear();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/java\/EventListenerManager.h","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -96,23 +96,0 @@\n-    static class MyListener1 implements EventListener {\n-\n-        private final AtomicInteger clickCount = new AtomicInteger(0);\n-\n-        private MyListener1() {\n-        }\n-\n-        int getClickCount() {\n-            return clickCount.get();\n-        }\n-\n-        static MyListener1 create() {\n-            MyListener1 listener = new MyListener1();\n-            listenerRefs.add(new WeakReference<>(listener));\n-            return listener;\n-        }\n-\n-        @Override\n-        public void handleEvent(Event evt) {\n-            clickCount.incrementAndGet();\n-        }\n-    }\n-\n@@ -631,0 +608,1 @@\n+        webView2 = null;\n@@ -634,1 +612,1 @@\n-        final List<MyListener> listeners1 = new ArrayList<>();\n+        final List<MyListener> listeners= new ArrayList<>();\n@@ -638,2 +616,2 @@\n-            listeners1.add(MyListener.create());\n-            domNodes1.get(0).addEventListener(\"click\", listeners1.get(0), false);\n+            listeners.add(MyListener.create());\n+            domNodes1.get(0).addEventListener(\"click\", listeners.get(0), false);\n@@ -647,1 +625,1 @@\n-        assertEquals(\"Click count\", 1, listeners1.get(0).getClickCount());\n+        assertEquals(\"Click count\", 1, listeners.get(0).getClickCount());\n@@ -657,1 +635,1 @@\n-        \/\/ Verify that all listeners have not been released\n+        \/\/ Verify that the click event is not delivered to the event handler.\n@@ -659,1 +637,3 @@\n-        assertEquals(\"Click count\", 1, listeners1.get(0).getClickCount());\n+        assertEquals(\"Click count\", 1, listeners.get(0).getClickCount());\n+        \/\/ Verify that even a new content has been loaded , previously register listener is active\n+        assertNumActive(\"MyListener\", listenerRefs, 1);\n@@ -661,2 +641,2 @@\n-        \/\/ Clear strong reference to listener and WebView\n-        listeners1.clear();\n+        \/\/ Release strong reference to listener and the DOM nodes\n+        listeners.clear();\n@@ -664,5 +644,0 @@\n-        webViewRefs.clear();\n-        webView1 = null;\n-\n-        \/\/ Verify that there is no strong reference to the WebView\n-        assertNumActive(\"WebView\", webViewRefs, 0);\n@@ -672,1 +647,0 @@\n-        listenerRefs.clear();\n@@ -676,1 +650,1 @@\n-     * Test that the listener ref cont increase on addevent and decrease on remove event\n+     * Test that the listener ref count increase on addevent and decrease on remove event\n@@ -706,1 +680,1 @@\n-        \/\/ Verify that the events are delivered to the listeners (0 and 2 are same)\n+        \/\/ Verify that all three refer to same listener\n@@ -713,1 +687,1 @@\n-        \/\/ remove previously registered listeners fro dom nodes\n+        \/\/ remove previously registered listeners from dom nodes\n@@ -715,4 +689,0 @@\n-            domNodes1 = getDomNodes(webView1);\n-            assertEquals(NUM_DOM_NODES, domNodes1.size());\n-\n-            \/\/\n@@ -731,1 +701,1 @@\n-        \/\/ Verify that the events are delivered to the listeners (0 and 2 are same)\n+        \/\/ verify that the events are not delivered, which is why the count should be remains at 3.\n@@ -735,1 +705,0 @@\n-\n@@ -761,4 +730,0 @@\n-        \/\/ Verify that the events are delivered to the listeners (0 and 2 are same)\n-        Thread.sleep(100);\n-        assertEquals(\"Click count\", 6, listeners.get(1).get().getClickCount() + listeners.get(0).get().getClickCount());\n-\n@@ -779,11 +744,0 @@\n-        submit(() -> {\n-            \/\/ Send clilck events\n-            click(webView1, 0);\n-            click(webView1, 1);\n-            click(webView1, 2);\n-        });\n-\n-        \/\/ Verify that the events are delivered to the listeners (0 and 2 are same)\n-        Thread.sleep(100);\n-        assertEquals(\"Click count\", 6, listeners.get(1).get().getClickCount() + listeners.get(0).get().getClickCount());\n-\n@@ -797,1 +751,0 @@\n-        listenerRefs.clear();\n@@ -855,1 +808,0 @@\n-        listenerRefs.clear();\n@@ -959,1 +911,1 @@\n-        Thread.sleep(100);\n+        \/\/Thread.sleep(100);\n@@ -962,1 +914,0 @@\n-        listenerRefs.clear();\n@@ -1004,0 +955,1 @@\n+        Thread.sleep(100);\n@@ -1007,0 +959,2 @@\n+        \/\/ Verify that active listener\n+        assertNumActive(\"MyListener\", listenerRefs, 2);\n@@ -1008,1 +962,1 @@\n-        \/\/ make web view , goes out of scope\n+        \/\/ make WebView go out of scope\n@@ -1013,1 +967,0 @@\n-        Thread.sleep(100);\n@@ -1016,1 +969,0 @@\n-        listenerRefs.clear();\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/EventListenerLeakTest.java","additions":20,"deletions":68,"binary":false,"changes":88,"status":"modified"}]}