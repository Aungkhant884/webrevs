{"files":[{"patch":"@@ -371,0 +371,1 @@\n+        if (!isEditing()) return;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ListCell.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -334,0 +334,1 @@\n+        if (!isEditing()) return;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -379,0 +379,1 @@\n+        if (!isEditing()) return;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeCell.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -351,0 +351,1 @@\n+        if (!isEditing()) return;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -855,0 +855,22 @@\n+    @Test\n+    public void testStartEditOffRangeMustNotFireStartEdit() {\n+        list.setEditable(true);\n+        cell.updateListView(list);\n+        cell.updateIndex(list.getItems().size());\n+        List<EditEvent<?>> events = new ArrayList<>();\n+        list.addEventHandler(ListView.editStartEvent(), events::add);\n+        cell.startEdit();\n+        assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+        assertEquals(\"must not fire editStart\", 0, events.size());\n+    }\n+\n+    @Test\n+    public void testStartEditOffRangeMustNotUpdateEditingLocation() {\n+        list.setEditable(true);\n+        cell.updateListView(list);\n+        cell.updateIndex(list.getItems().size());\n+        cell.startEdit();\n+        assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+        assertEquals(\"list editing location must not be updated\", -1, list.getEditingIndex());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListCellTest.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import org.junit.Ignore;\n@@ -704,0 +705,26 @@\n+     @Test\n+     public void testStartEditOffRangeMustNotFireStartEdit() {\n+         setupForEditing();\n+         int editingRow = table.getItems().size();\n+         cell.updateIndex(editingRow);\n+         List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+         editingColumn.addEventHandler(TableColumn.editStartEvent(), events::add);\n+         cell.startEdit();\n+         assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+         assertEquals(\"must not fire editStart\", 0, events.size());\n+     }\n+\n+     \/**\n+      *  Note: this is a false green until JDK-8187474 (update control editing location) is fixed\n+      *\/\n+     @Ignore(\"JDK-8187474\")\n+     @Test\n+     public void testStartEditOffRangeMustNotUpdateEditingLocation() {\n+         setupForEditing();\n+         int editingRow = table.getItems().size();\n+         cell.updateIndex(editingRow);\n+         cell.startEdit();\n+         assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+         assertNull(\"table editing location must not be updated\", table.getEditingCell());\n+     }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -847,0 +847,27 @@\n+    @Test\n+    public void testStartEditOffRangeMustNotFireStartEdit() {\n+        tree.setEditable(true);\n+        cell.updateTreeView(tree);\n+        cell.updateIndex(tree.getExpandedItemCount());\n+        List<EditEvent<?>> events = new ArrayList<>();\n+        tree.addEventHandler(TreeView.editStartEvent(), events::add);\n+        cell.startEdit();\n+        assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+        assertEquals(\"cell must not fire editStart if not editing\", 0, events.size());\n+    }\n+\n+    \/**\n+     *  Note: this is a false green until JDK-8187474 (update control editing location) is fixed\n+     *\/\n+    @Ignore(\"JDK-8187474\")\n+    @Test\n+    public void testStartEditOffRangeMustNotUpdateEditingLocation() {\n+        tree.setEditable(true);\n+        cell.updateTreeView(tree);\n+        cell.updateIndex(tree.getExpandedItemCount());\n+        cell.startEdit();\n+        assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+        assertNull(\"tree editing location must not be updated\", tree.getEditingItem());\n+    }\n+\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeCellTest.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -1030,0 +1030,25 @@\n+     @Test\n+     public void testStartEditOffRangeMustNotFireStartEdit() {\n+         setupForEditing();\n+         cell.updateIndex(tree.getExpandedItemCount());\n+         List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+         editingColumn.addEventHandler(TreeTableColumn.editStartEvent(), events::add);\n+         cell.startEdit();\n+         assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+         assertEquals(\"cell must not fire editStart if not editing\", 0, events.size());\n+     }\n+\n+     \/**\n+      *  Note: this would be a false green until JDK-8187474 (update control editing location) is fixed\n+      *\/\n+     @Ignore(\"JDK-8187474\")\n+     @Test\n+     public void testStartEditOffRangeMustNotUpdateEditingLocation() {\n+         setupForEditing();\n+         cell.updateIndex(tree.getExpandedItemCount());\n+         cell.startEdit();\n+         assertFalse(\"sanity: off-range cell must not be editing\", cell.isEditing());\n+         assertNull(\"treetable editing location must not be updated\", tree.getEditingCell());\n+     }\n+\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"}]}