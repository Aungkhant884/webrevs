{"files":[{"patch":"@@ -492,0 +492,1 @@\n+static DragView *drag_view = NULL;\n@@ -821,1 +822,3 @@\n-    DragView::move(x_root, y_root);\n+    if (drag_view) {\n+        drag_view->move(x_root, y_root);\n+    }\n@@ -1013,0 +1016,14 @@\n+    if (drag_view != NULL && window == drag_view->get_window()) {\n+        if(event->type == GDK_EXPOSE) {\n+            drag_view->expose();\n+        } else {\n+            gtk_main_do_event(event);\n+        }\n+\n+        return;\n+    }\n+\n+    if (window != dnd_window) {\n+        return;\n+    }\n+\n@@ -1046,1 +1063,1 @@\n-DragView::View* DragView::view = NULL;\n+\n@@ -1049,2 +1066,2 @@\n-    delete view;\n-    view = NULL;\n+    delete drag_view;\n+    drag_view = NULL;\n@@ -1171,1 +1188,1 @@\n-        DragView::view = new DragView::View(pixbuf, is_raw_image, is_offset_set, offset_x, offset_y);\n+        drag_view = new DragView(pixbuf, is_raw_image, is_offset_set, offset_x, offset_y);\n@@ -1175,30 +1192,2 @@\n-void DragView::move(gint x, gint y) {\n-    if (view) {\n-        view->move(x, y);\n-    }\n-}\n-\n-static void on_screen_changed(GtkWidget *widget, GdkScreen *previous_screen, gpointer view) {\n-    (void)widget;\n-    (void)previous_screen;\n-\n-    ((DragView::View*) view)->screen_changed();\n-}\n-\n-static gboolean on_draw(GtkWidget *widget, cairo_t *cr, gpointer view) {\n-    (void)widget;\n-\n-    ((DragView::View*) view)->expose(cr);\n-    return FALSE;\n-}\n-\n-static gboolean on_expose(GtkWidget *widget, GdkEventExpose *event, gpointer view) {\n-    (void)widget;\n-    (void)event;\n-\n-    ((DragView::View*) view)->expose(NULL);\n-    return FALSE;\n-}\n-\n-DragView::View::View(GdkPixbuf* _pixbuf, gboolean _is_raw_image,\n-                                gboolean _is_offset_set, gint _offset_x, gint _offset_y) :\n+DragView::DragView(GdkPixbuf* _pixbuf, gboolean _is_raw_image,\n+                   gboolean _is_offset_set, gint _offset_x, gint _offset_y) :\n@@ -1213,3 +1202,11 @@\n-    widget = gtk_window_new(GTK_WINDOW_POPUP);\n-    gtk_window_set_type_hint(GTK_WINDOW(widget), GDK_WINDOW_TYPE_HINT_DND);\n-    gtk_widget_set_events(widget, GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK);\n+    GdkScreen* screen = gdk_screen_get_default();\n+    GdkWindowAttr attrs;\n+\n+    attrs.x = 0;\n+    attrs.y = 0;\n+    attrs.width = width;\n+    attrs.height = height;\n+    attrs.wclass = GDK_INPUT_OUTPUT;\n+    attrs.window_type = GDK_WINDOW_TEMP;\n+    attrs.type_hint = GDK_WINDOW_TYPE_HINT_DND;\n+    attrs.visual = gdk_screen_get_rgba_visual(screen);\n@@ -1217,1 +1214,3 @@\n-    screen_changed();\n+    if (!attrs.visual) {\n+        attrs.visual = gdk_screen_get_system_visual(screen);\n+    }\n@@ -1219,2 +1218,2 @@\n-    gtk_widget_realize(widget);\n-    gtk_widget_set_app_paintable(widget, TRUE);\n+    int mask = GDK_WA_X | GDK_WA_Y | GDK_WA_VISUAL | GDK_WA_TYPE_HINT;\n+    window = gdk_window_new(gdk_screen_get_root_window(screen), &attrs, mask);\n@@ -1223,3 +1222,1 @@\n-    g_signal_connect(G_OBJECT(widget), \"draw\", G_CALLBACK(on_draw), this);\n-#else\n-    g_signal_connect(G_OBJECT(widget), \"expose-event\", G_CALLBACK(on_expose), this);\n+    gdk_window_set_opaque_region(window, NULL);\n@@ -1227,5 +1224,1 @@\n-    g_signal_connect(G_OBJECT(widget), \"screen-changed\", G_CALLBACK(on_screen_changed), this);\n-\n-    gtk_widget_set_size_request(widget, width, height);\n-    gtk_window_set_decorated(GTK_WINDOW(widget), FALSE);\n-    gtk_window_set_opacity(GTK_WINDOW(widget), .7);\n+    gdk_window_set_opacity(window, 0);\n@@ -1234,3 +1227,5 @@\n-void DragView::View::screen_changed() {\n-    GdkScreen *screen = gtk_widget_get_screen(widget);\n-    glass_configure_window_transparency(widget, true);\n+void DragView::expose() {\n+#ifdef GLASS_GTK3\n+    cairo_region_t *region = gdk_window_get_clip_region(window);\n+    gdk_window_begin_paint_region(window, region);\n+#endif\n@@ -1238,7 +1233,2 @@\n-    if (!gdk_screen_is_composited(screen)) {\n-        if (!is_offset_set) {\n-            offset_x = 1;\n-            offset_y = 1;\n-        }\n-    }\n-}\n+    cairo_t *context;\n+    cairo_surface_t *cairo_surface;\n@@ -1246,5 +1236,1 @@\n-void DragView::View::expose(cairo_t *context) {\n-#ifndef GLASS_GTK3\n-    context = gdk_cairo_create(gtk_widget_get_window(widget));\n-#endif\n-    cairo_surface_t* cairo_surface;\n+    context = gdk_cairo_create(window);\n@@ -1264,1 +1250,1 @@\n-    cairo_set_operator(context, CAIRO_OPERATOR_SOURCE);\n+    cairo_set_operator(context, CAIRO_OPERATOR_OVER);\n@@ -1271,1 +1257,4 @@\n-    cairo_surface_destroy(cairo_surface);\n+#ifdef GLASS_GTK3\n+    gdk_window_end_paint(window);\n+    cairo_region_destroy(region);\n+#endif\n@@ -1273,1 +1262,1 @@\n-#ifndef GLASS_GTK3\n+    cairo_surface_destroy(cairo_surface);\n@@ -1275,1 +1264,0 @@\n-#endif\n@@ -1278,2 +1266,2 @@\n-void DragView::View::move(gint x, gint y) {\n-    gtk_window_move(GTK_WINDOW(widget), x - offset_x, y - offset_y);\n+void DragView::move(gint x, gint y) {\n+    gdk_window_move(window, x - offset_x, y - offset_y);\n@@ -1281,3 +1269,3 @@\n-    if (!gtk_widget_get_visible(widget)) {\n-        gtk_widget_show(widget);\n-        gdk_window_raise(gtk_widget_get_window(widget));\n+    if (!gdk_window_is_visible(window)) {\n+        gdk_window_show(window);\n+        gdk_window_raise(window);\n@@ -1287,4 +1275,8 @@\n-DragView::View::~View() {\n-    if (widget) {\n-        gtk_widget_destroy(widget);\n-        widget == NULL;\n+GdkWindow* DragView::get_window() {\n+    return window;\n+}\n+\n+DragView::~DragView() {\n+    if (window) {\n+        gdk_window_destroy(window);\n+        window = NULL;\n@@ -1294,1 +1286,1 @@\n-        pixbuf == NULL;\n+        pixbuf = NULL;\n@@ -1296,1 +1288,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_dnd.cpp","additions":71,"deletions":79,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -53,0 +53,6 @@\n+    GdkWindow* window;\n+    GdkPixbuf* pixbuf;\n+    gint width, height;\n+    gboolean is_raw_image;\n+    gboolean is_offset_set;\n+    gint offset_x, offset_y;\n@@ -54,17 +60,6 @@\n-    class View {\n-        GtkWidget* widget;\n-        GdkPixbuf* pixbuf;\n-        gint width, height;\n-        gboolean is_raw_image;\n-        gboolean is_offset_set;\n-        gint offset_x, offset_y;\n-    public:\n-        View(GdkPixbuf* pixbuf, gboolean is_raw_image, gboolean is_offset_set, gint offset_x, gint offset_y);\n-        void screen_changed();\n-        void expose(cairo_t* context);\n-        void move(gint x, gint y);\n-        ~View();\n-    private:\n-        View(View&);\n-        View& operator=(const View&);\n-    };\n+    DragView(GdkPixbuf* pixbuf, gboolean is_raw_image, gboolean is_offset_set,\n+             gint offset_x, gint offset_y);\n+    void expose();\n+    void move(gint x, gint y);\n+    GdkWindow * get_window();\n+    ~DragView();\n@@ -72,1 +67,0 @@\n-    static void reset_drag_view();\n@@ -74,2 +68,1 @@\n-    static void move(gint x, gint y);\n-\n+    static void reset_drag_view();\n@@ -77,5 +70,0 @@\n-    static View* view;\n-    static gboolean get_drag_image_offset(int* x, int* y);\n-    static GdkPixbuf* get_drag_image(gboolean* is_raw_image, gint* width, gint* height);\n-\n-    DragView() {}\n@@ -84,0 +72,3 @@\n+\n+    static gboolean get_drag_image_offset(int* x, int* y);\n+    static GdkPixbuf* get_drag_image(gboolean* is_raw_image, gint* width, gint* height);\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_dnd.h","additions":16,"deletions":25,"binary":false,"changes":41,"status":"modified"}]}