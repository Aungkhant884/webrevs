{"files":[{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package dragdrop;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.image.PixelWriter;\n+import javafx.scene.image.WritableImage;\n+import javafx.scene.input.ClipboardContent;\n+import javafx.scene.input.Dragboard;\n+import javafx.scene.input.KeyEvent;\n+import javafx.scene.input.TransferMode;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Text;\n+import javafx.stage.Stage;\n+\n+public class DragDropKeys extends Application {\n+    @Override\n+    public void start(Stage stage) {\n+        Text text = new Text(\"Instructions:\\n\" +\n+                             \"1. Press and release any key.\\n\" +\n+                             \"2. Notice key events appearing in text area.\\n\" +\n+                             \"3. While dragging image, press any key.\\n\" +\n+                             \"4. Notice the key events while dragging.\\n\" +\n+                             \"5. Also notice that the image should be RED, GREEN, BLUE.\\n\");\n+        Image image = createImage(180, 180);\n+        ImageView imageView = new ImageView(image);\n+        imageView.setOnDragDetected(event -> {\n+            ClipboardContent content = new ClipboardContent();\n+            content.putImage(image);\n+            Dragboard dragboard = imageView.startDragAndDrop(TransferMode.ANY);\n+            dragboard.setContent(content);\n+            dragboard.setDragView(image);\n+        });\n+        TextArea textArea = new TextArea(\"KeyEvent log:\\n\");\n+        textArea.setEditable(false);\n+\n+        VBox vBox = new VBox(text, imageView, textArea);\n+        vBox.setSpacing(5.0);\n+        vBox.setAlignment(Pos.BOTTOM_CENTER);\n+        stage.setScene(new Scene(vBox, 480, 480));\n+        stage.setTitle(\"KeyEvents During Drag & Drop\");\n+        stage.addEventFilter(KeyEvent.KEY_PRESSED, event ->\n+                textArea.appendText(event.getEventType().getName() + \": \" + event.getCode().getName() + \"\\n\"));\n+        stage.addEventFilter(KeyEvent.KEY_RELEASED, event ->\n+                textArea.appendText(event.getEventType().getName() + \": \" + event.getCode().getName() + \"\\n\"));\n+        stage.show();\n+    }\n+\n+    private static Image createImage(int width, int height) {\n+        WritableImage image = new WritableImage(width, height);\n+        PixelWriter pixelWriter = image.getPixelWriter();\n+        for (int y = 0; y < height; y++) {\n+            for (int x = 0; x < width; x++) {\n+                if (x < width * 0.33) {\n+                    pixelWriter.setColor(x, y, Color.RED);\n+                } else if (x < width * 0.66) {\n+                    pixelWriter.setColor(x, y, Color.GREEN);\n+                } else {\n+                    pixelWriter.setColor(x, y, Color.BLUE);\n+                }\n+            }\n+        }\n+\n+        return image;\n+    }\n+\n+    public static String info() {\n+        return \"Drag and press keys\";\n+    }\n+\n+    public static void main(String[] args) {\n+        Application.launch(DragDropKeys.class, args);\n+    }\n+}\n","filename":"apps\/toys\/DragDrop\/src\/dragdrop\/DragDropKeys.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -68,0 +68,1 @@\n+        register(\"Keys\", DragDropKeys.class, DragDropKeys.info());\n","filename":"apps\/toys\/DragDrop\/src\/dragdrop\/Main.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}