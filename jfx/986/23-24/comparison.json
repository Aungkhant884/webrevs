{"files":[{"patch":"@@ -40,1 +40,2 @@\n-static jint translate_gdk_action_to_glass(GdkDragAction action) {\n+static jint translate_gdk_action_to_glass(GdkDragAction action)\n+{\n@@ -48,1 +49,2 @@\n-static GdkDragAction translate_glass_action_to_gdk(jint action) {\n+static GdkDragAction translate_glass_action_to_gdk(jint action)\n+{\n@@ -61,0 +63,1 @@\n+\n@@ -62,0 +65,1 @@\n+\n@@ -87,1 +91,2 @@\n-static gboolean target_is_text(GdkAtom target) {\n+static gboolean target_is_text(GdkAtom target)\n+{\n@@ -96,1 +101,2 @@\n-static gboolean target_is_uri(GdkAtom target) {\n+static gboolean target_is_uri(GdkAtom target)\n+{\n@@ -101,1 +107,2 @@\n-static gboolean target_is_image(GdkAtom target) {\n+static gboolean target_is_image(GdkAtom target)\n+{\n@@ -109,1 +116,2 @@\n-static void clear_global_ref(gpointer data) {\n+static void clear_global_ref(gpointer data)\n+{\n@@ -140,1 +148,2 @@\n-static void process_dnd_target_drag_enter(WindowContext *ctx, GdkEventDND *event) {\n+static void process_dnd_target_drag_enter(WindowContext *ctx, GdkEventDND *event)\n+{\n@@ -148,1 +157,2 @@\n-static void process_dnd_target_drag_motion(WindowContext *ctx, GdkEventDND *event) {\n+static void process_dnd_target_drag_motion(WindowContext *ctx, GdkEventDND *event)\n+{\n@@ -153,1 +163,0 @@\n-\n@@ -165,1 +174,0 @@\n-\n@@ -169,1 +177,2 @@\n-static void process_dnd_target_drag_leave(WindowContext *ctx, GdkEventDND *event) {\n+static void process_dnd_target_drag_leave(WindowContext *ctx, GdkEventDND *event)\n+{\n@@ -176,13 +185,2 @@\n-static void wait_for_selection_data_hook(GdkEvent * event, void * data) {\n-    selection_data_ctx *ctx = (selection_data_ctx*)data;\n-    GdkWindow *dest = glass_gdk_drag_context_get_dest_window(enter_ctx.ctx);\n-    if (event->type == GDK_SELECTION_NOTIFY &&\n-            event->selection.window == dest) {\n-        if (event->selection.property) { \/\/ if 0, that we received negative response\n-            ctx->length = gdk_selection_property_get(dest, &(ctx->data), &(ctx->type), &(ctx->format));\n-        }\n-        ctx->received = TRUE;\n-    }\n-}\n-\n-static void process_dnd_target_drop_start(WindowContext *ctx, GdkEventDND *event) {\n+static void process_dnd_target_drop_start(WindowContext *ctx, GdkEventDND *event)\n+{\n@@ -206,1 +204,2 @@\n-static gboolean check_state_in_drag(JNIEnv *env) {\n+static gboolean check_state_in_drag(JNIEnv *env)\n+{\n@@ -219,1 +218,2 @@\n-void process_dnd_target(WindowContext *ctx, GdkEventDND *event) {\n+void process_dnd_target(WindowContext *ctx, GdkEventDND *event)\n+{\n@@ -238,1 +238,2 @@\n-jobjectArray dnd_target_get_mimes(JNIEnv *env) {\n+jobjectArray dnd_target_get_mimes(JNIEnv *env)\n+{\n@@ -305,1 +306,2 @@\n-jint dnd_target_get_supported_actions(JNIEnv *env) {\n+jint dnd_target_get_supported_actions(JNIEnv *env)\n+{\n@@ -312,2 +314,12 @@\n-static gboolean dnd_target_receive_data(JNIEnv *env, GdkAtom target, selection_data_ctx *selection_ctx) {\n-    GevlHookRegistration hookReg;\n+static void wait_for_selection_data_hook(GdkEvent * event, void * data)\n+{\n+    selection_data_ctx *ctx = (selection_data_ctx*)data;\n+    GdkWindow *dest = glass_gdk_drag_context_get_dest_window(enter_ctx.ctx);\n+    if (event->type == GDK_SELECTION_NOTIFY &&\n+            event->selection.window == dest) {\n+        if (event->selection.property) { \/\/ if 0, that we received negative response\n+            ctx->length = gdk_selection_property_get(dest, &(ctx->data), &(ctx->type), &(ctx->format));\n+        }\n+        ctx->received = TRUE;\n+    }\n+}\n@@ -315,4 +327,3 @@\n-    gdk_selection_convert(glass_gdk_drag_context_get_dest_window(enter_ctx.ctx),\n-                          gdk_drag_get_selection(enter_ctx.ctx),\n-                          target,\n-                          GDK_CURRENT_TIME);\n+static gboolean dnd_target_receive_data(JNIEnv *env, GdkAtom target, selection_data_ctx *selection_ctx)\n+{\n+    GevlHookRegistration hookReg;\n@@ -322,4 +333,10 @@\n-    hookReg = glass_evloop_hook_add((GevlHookFunction) wait_for_selection_data_hook,\n-                                  selection_ctx);\n-    if (HANDLE_MEM_ALLOC_ERROR(env, hookReg, \"Failed to allocate event hook\")) {\n-      return TRUE;\n+    gdk_selection_convert(glass_gdk_drag_context_get_dest_window(enter_ctx.ctx), gdk_drag_get_selection(enter_ctx.ctx), target,\n+                          GDK_CURRENT_TIME);\n+\n+    hookReg =\n+            glass_evloop_hook_add(\n+                    (GevlHookFunction) wait_for_selection_data_hook,\n+                    selection_ctx);\n+    if (HANDLE_MEM_ALLOC_ERROR(env, hookReg,\n+                               \"Failed to allocate event hook\")) {\n+        return TRUE;\n@@ -332,0 +349,1 @@\n+\n@@ -336,1 +354,2 @@\n-static jobject dnd_target_get_string(JNIEnv *env) {\n+static jobject dnd_target_get_string(JNIEnv *env)\n+{\n@@ -366,1 +385,2 @@\n-static jobject dnd_target_get_list(JNIEnv *env, gboolean files) {\n+static jobject dnd_target_get_list(JNIEnv *env, gboolean files)\n+{\n@@ -378,1 +398,2 @@\n-static jobject dnd_target_get_image(JNIEnv *env) {\n+static jobject dnd_target_get_image(JNIEnv *env)\n+{\n@@ -448,1 +469,2 @@\n-static jobject dnd_target_get_raw(JNIEnv *env, GdkAtom target, gboolean string_data) {\n+static jobject dnd_target_get_raw(JNIEnv *env, GdkAtom target, gboolean string_data)\n+{\n@@ -474,1 +496,2 @@\n-jobject dnd_target_get_data(JNIEnv *env, jstring mime) {\n+jobject dnd_target_get_data(JNIEnv *env, jstring mime)\n+{\n@@ -478,1 +501,0 @@\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_dnd.cpp","additions":66,"deletions":44,"binary":false,"changes":110,"status":"modified"}]}