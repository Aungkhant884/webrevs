{"files":[{"patch":"@@ -65,0 +65,1 @@\n+    private long panelCount;\n@@ -105,1 +106,1 @@\n-                long panelCount = panels.stream().filter(ref ->\n+                panelCount = panels.stream().filter(ref ->\n@@ -107,10 +108,1 @@\n-                \/\/ Sometimes panel count can shoot upto more than 3 once or twice\n-                \/\/ due to gc not being guranteed so this check prevents false failure\n-                \/\/ Without fix, the panel count will increase continuosly so it will\n-                \/\/ always be more 3 after 1-2 iterations\n-                if (panelCount > 3) {\n-                    fail++;\n-                }\n-                System.out.println(\"iteration \" + count + \" Panels in memory: \"\n-                                               + panelCount + \" fail \" + fail);\n-                assertFalse(fail > 2);\n+                System.out.println(\"iteration \" + count + \" Panels in memory: \" + panelCount);\n@@ -123,0 +115,2 @@\n+            \/\/ Check if panelCount has not increased beyond certain threshold\n+            assertFalse(panelCount > count\/2);\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/SwingNodeContentMemoryLeakTest.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"}]}