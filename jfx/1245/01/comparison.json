{"files":[{"patch":"@@ -1964,1 +1964,1 @@\n-        return s != null && s.applies(this) ? this : null;\n+        return selectorMatches(s) ? this : null;\n@@ -1993,1 +1993,1 @@\n-        if (selector.applies(this)) {\n+        if (selectorMatches(selector)) {\n@@ -2027,0 +2027,13 @@\n+    \/**\n+     * Checks whether the provided selector matches the node with both styles and pseudo states.\n+     * @param s selector to match\n+     * @return {@code true} if the selector matches\n+     *\/\n+    private boolean selectorMatches(Selector s){\n+        boolean matches = s != null && s.applies(this);\n+        if(matches && !s.createMatch().getPseudoClasses().isEmpty()){\n+            matches = s.stateMatches(this, this.getPseudoClassStates());\n+        }\n+        return matches;\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+\n+import javafx.css.PseudoClass;\n@@ -42,5 +44,5 @@\n-    \/\/                \/      \\\n-    \/\/              #a      .b.c\n-    \/\/             \/   \\        \\\n-    \/\/           .d    #e        .d\n-    private Group root, a, bc, d, e, d2;\n+    \/\/                \/      \\        \\\n+    \/\/              #a      .b.c       .f:testPseudo\n+    \/\/             \/   \\        \\         \/           \\\n+    \/\/           .d    #e        .d   .g:testPseudo1   .h.g:testPseudo1:testPseudo2\n+    private Group root, a, bc, d, e, d2, f, g, hg;\n@@ -61,1 +63,11 @@\n-        ParentShim.getChildren(root).addAll(a, bc);\n+        f = new Group();\n+        f.getStyleClass().add(\"f\");\n+        f.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"testPseudo\"),true);\n+        g = new Group();\n+        g.getStyleClass().add(\"g\");\n+        g.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"testPseudo1\"),true);\n+        hg = new Group();\n+        hg.getStyleClass().addAll(\"h\", \"g\");\n+        hg.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"testPseudo1\"),true);\n+        hg.pseudoClassStateChanged(PseudoClass.getPseudoClass(\"testPseudo2\"),true);\n+        ParentShim.getChildren(root).addAll(a, bc, f);\n@@ -64,0 +76,1 @@\n+        ParentShim.getChildren(f).addAll(g, hg);\n@@ -99,0 +112,37 @@\n+\n+    @Test\n+    public void lookupPsuedoTest(){\n+        Set<Node> nodes = root.lookupAll(\".h:testPseudo2\");\n+        assertEquals(1, nodes.size());\n+        assertTrue(nodes.contains(hg));\n+\n+        Node found = root.lookup(\".h:testPseudo2\");\n+        assertSame(hg, found);\n+\n+        found = root.lookup(\":testPseudo2\");\n+        assertSame(hg, found);\n+\n+        found = root.lookup(\".h:testPseudo1:testPseudo2\");\n+        assertSame(hg, found);\n+\n+        nodes = root.lookupAll(\".g:testPseudo1\");\n+        assertEquals(2, nodes.size());\n+        assertTrue(nodes.contains(g));\n+        assertTrue(nodes.contains(hg));\n+\n+        nodes = root.lookupAll(\":testPseudo1\");\n+        assertEquals(2, nodes.size());\n+        assertTrue(nodes.contains(g));\n+        assertTrue(nodes.contains(hg));\n+\n+        nodes = root.lookupAll(\".f > .h:testPseudo1\");\n+        assertEquals(1, nodes.size());\n+        assertTrue(nodes.contains(hg));\n+\n+        nodes = root.lookupAll(\".f:testPseudo > .h:testPseudo1\");\n+        assertEquals(1, nodes.size());\n+        assertTrue(nodes.contains(hg));\n+\n+        nodes = root.lookupAll(\".f:randomPseudo\");\n+        assertEquals(0, nodes.size());\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_lookup_Test.java","additions":56,"deletions":6,"binary":false,"changes":62,"status":"modified"}]}