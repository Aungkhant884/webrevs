{"files":[{"patch":"@@ -1953,3 +1953,2 @@\n-     *     If the lookup selector does not specify a pseudo class, the lookup will ignore pseudo class states;\n-     *     it will return the first matching node whether or not it contains pseudo classes.\n-     * <\/p>\n+     * If the lookup selector does not specify a pseudo class, the lookup will ignore pseudo class states;\n+     * it will return the first matching node whether or not it contains pseudo classes.\n@@ -1957,3 +1956,2 @@\n-     *     For example, if a Node is given the id of \"myId\", then the lookup method can\n-     *     be used to find this node as follows: {@code scene.lookup(\"#myId\");}.\n-     * <\/p>\n+     * For example, if a Node is given the id of \"myId\", then the lookup method can\n+     * be used to find this node as follows: {@code scene.lookup(\"#myId\");}.\n@@ -1961,4 +1959,3 @@\n-     *     For example, if two nodes, NodeA and NodeB, have the same style class \"myStyle\" and NodeA has\n-     *     a pseudo state \"myPseudo\", then to find NodeA, the lookup method can be used as follows:\n-     *     {@code scene.lookup(\".myStyle:myPseudo\");} or {@code scene.lookup(\":myPseudo\");}.\n-     * <\/p>\n+     * For example, if two nodes, NodeA and NodeB, have the same style class \"myStyle\" and NodeA has\n+     * a pseudo state \"myPseudo\", then to find NodeA, the lookup method can be used as follows:\n+     * {@code scene.lookup(\".myStyle:myPseudo\");} or {@code scene.lookup(\":myPseudo\");}.\n@@ -1981,3 +1978,2 @@\n-     *     For example, if there are multiple nodes with same style class \"myStyle\", then the lookupAll method can\n-     *     be used to find all these nodes as follows: {@code scene.lookupAll(\".myStyle\");}.\n-     * <\/p>\n+     * If the lookupAll selector does not specify a pseudo class, the lookupAll will ignore pseudo class states;\n+     * it will return all matching nodes whether or not the nodes contain pseudo classes.\n@@ -1985,5 +1981,6 @@\n-     *     For example, if multiple nodes have same style class \"myStyle\" and few nodes have\n-     *     a pseudo state \"myPseudo\", then to find all nodes with \"myPseudo\" state, the lookupAll method can be used as follows:\n-     *     {@code scene.lookupAll(\".myStyle:myPseudo\");} or {@code scene.lookupAll(\":myPseudo\");}. If no pseudo class is specified\n-     *     by the lookupAll selector, irrespective of the nodes pseudo states the result will contain all nodes matching the selector.\n-     * <\/p>\n+     * For example, if there are multiple nodes with same style class \"myStyle\", then the lookupAll method can\n+     * be used to find all these nodes as follows: {@code scene.lookupAll(\".myStyle\");}.\n+     * <p>\n+     * For example, if multiple nodes have same style class \"myStyle\" and few nodes have\n+     * a pseudo state \"myPseudo\", then to find all nodes with \"myPseudo\" state, the lookupAll method can be used as follows:\n+     * {@code scene.lookupAll(\".myStyle:myPseudo\");} or {@code scene.lookupAll(\":myPseudo\");}.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"}]}