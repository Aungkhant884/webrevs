{"files":[{"patch":"@@ -330,0 +330,1 @@\n+        editingCellAtStartEdit = new TablePosition<>(table, getIndex(), column);\n@@ -333,1 +334,1 @@\n-                table.getEditingCell(),\n+                editingCellAtStartEdit,\n@@ -340,1 +341,0 @@\n-        editingCellAtStartEdit = new TablePosition<>(table, getIndex(), column);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TableCell.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -347,0 +347,1 @@\n+        editingCellAtStartEdit = new TreeTablePosition<>(table, getIndex(), column);\n@@ -350,1 +351,1 @@\n-                table.getEditingCell(),\n+                editingCellAtStartEdit,\n@@ -357,1 +358,0 @@\n-        editingCellAtStartEdit = new TreeTablePosition<>(table, getIndex(), column);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableCell.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -553,0 +553,25 @@\n+    @Test\n+    public void testEditStartEventAfterStartOnCell() {\n+        setupForEditing();\n+        int editingIndex = 1;\n+        cell.updateIndex(editingIndex);\n+        List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+        editingColumn.setOnEditStart(events::add);\n+        cell.startEdit();\n+        assertEquals(editingColumn, events.get(0).getTableColumn());\n+        TablePosition<?, ?> editingCell = events.get(0).getTablePosition();\n+        assertEquals(editingIndex, editingCell.getRow());\n+    }\n+\n+    @Test\n+    public void testEditStartEventAfterStartOnTable() {\n+        setupForEditing();\n+        int editingIndex = 1;\n+        cell.updateIndex(editingIndex);\n+        List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+        editingColumn.setOnEditStart(events::add);\n+        table.edit(editingIndex, editingColumn);\n+        assertEquals(editingColumn, events.get(0).getTableColumn());\n+        TablePosition<?, ?> editingCell = events.get(0).getTablePosition();\n+        assertEquals(editingIndex, editingCell.getRow());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableCellTest.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -879,0 +879,26 @@\n+    @Test\n+    public void testEditStartEventAfterStartOnCell() {\n+        setupForEditing();\n+        int editingIndex = 1;\n+        cell.updateIndex(editingIndex);\n+        List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+        editingColumn.setOnEditStart(events::add);\n+        cell.startEdit();\n+        assertEquals(editingColumn, events.get(0).getTableColumn());\n+        TreeTablePosition<?, ?> editingCell = events.get(0).getTreeTablePosition();\n+        assertEquals(editingIndex, editingCell.getRow());\n+    }\n+\n+    @Test\n+    public void testEditStartEventAfterStartOnTable() {\n+        setupForEditing();\n+        int editingIndex = 1;\n+        cell.updateIndex(editingIndex);\n+        List<CellEditEvent<?, ?>> events = new ArrayList<>();\n+        editingColumn.setOnEditStart(events::add);\n+        tree.edit(editingIndex, editingColumn);\n+        assertEquals(editingColumn, events.get(0).getTableColumn());\n+        TreeTablePosition<?, ?> editingCell = events.get(0).getTreeTablePosition();\n+        assertEquals(editingIndex, editingCell.getRow());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableCellTest.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}