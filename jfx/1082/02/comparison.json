{"files":[{"patch":"@@ -329,0 +329,1 @@\n+        menu.showingProperty().removeListener(subMenuShowingListener);\n@@ -747,0 +748,7 @@\n+    public void disposeListeners() {\n+        if (contextMenu != null) {\n+            disposeBinds();\n+            contextMenu.showingProperty().removeListener(weakPopupShowingListener);\n+        }\n+    }\n+\n@@ -833,0 +841,19 @@\n+    private ChangeListener<Boolean> subMenuShowingListener = (observable, wasShowing, isShowing) -> {\n+        ReadOnlyBooleanProperty isShowingProperty = (ReadOnlyBooleanProperty) observable;\n+        ContextMenu subMenu = (ContextMenu) isShowingProperty.getBean();\n+\n+        if (!subMenu.isShowing()) {\n+            \/\/ Maybe user clicked outside or typed ESCAPE.\n+            \/\/ Make sure menus are in sync.\n+            for (Node node : itemsContainer.getChildren()) {\n+                if (node instanceof MenuItemContainer\n+                        && ((MenuItemContainer)node).item instanceof Menu) {\n+                    Menu menu = (Menu)((MenuItemContainer)node).item;\n+                    if (menu.isShowing()) {\n+                        menu.hide();\n+                    }\n+                }\n+            }\n+        }\n+    };\n+\n@@ -836,18 +863,1 @@\n-            submenu.showingProperty().addListener(new ChangeListener<Boolean>() {\n-                @Override public void changed(ObservableValue<? extends Boolean> observable,\n-                                              Boolean oldValue, Boolean newValue) {\n-                    if (!submenu.isShowing()) {\n-                        \/\/ Maybe user clicked outside or typed ESCAPE.\n-                        \/\/ Make sure menus are in sync.\n-                        for (Node node : itemsContainer.getChildren()) {\n-                            if (node instanceof MenuItemContainer\n-                                  && ((MenuItemContainer)node).item instanceof Menu) {\n-                                Menu menu = (Menu)((MenuItemContainer)node).item;\n-                                if (menu.isShowing()) {\n-                                    menu.hide();\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            });\n+            submenu.showingProperty().addListener(subMenuShowingListener);\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ContextMenuContent.java","additions":28,"deletions":18,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -204,0 +204,3 @@\n+        if (root instanceof ContextMenuContent) {\n+            ((ContextMenuContent)root).disposeListeners();\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/ContextMenuSkin.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.robot.javafx.customskins;\n+\n+import javafx.scene.control.ContextMenu;\n+import javafx.scene.control.skin.ContextMenuSkin;\n+\n+public class ContextMenuCustomSkin extends ContextMenuSkin {\n+    public ContextMenuCustomSkin(ContextMenu menu) {\n+        super(menu);\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/customskins\/ContextMenuCustomSkin.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,181 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.robot.javafx.scene;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Scene;\n+import javafx.scene.control.MenuButton;\n+import javafx.scene.input.KeyCode;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.Parent;\n+import javafx.scene.robot.Robot;\n+import javafx.stage.Stage;\n+import javafx.stage.StageStyle;\n+import javafx.stage.WindowEvent;\n+\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import com.sun.javafx.PlatformUtil;\n+import com.sun.javafx.tk.Toolkit;\n+\n+import test.util.Util;\n+\n+\/*\n+ * Test for verifying context menu NPE error\n+ *\n+ * There is 1 test in this file.\n+ * Steps for testContextMenuNPE()\n+ * 1. Create a menu button.\n+ * 2. Load a custom skin which extends ContextMenuSkin class.\n+ * 3. Add menu items and sub menu.\n+ * 4. Click on MenuButton to open context menu.\n+ * 5. Got to the first item and select first item of submenu.\n+ * 6. Repeat step 4 and 5 and check if NPE is thrown on second attempt.\n+ *\/\n+\n+public class ContextMenuNPETest {\n+    static CountDownLatch startupLatch = new CountDownLatch(1);\n+    static Robot robot;\n+    static MenuButton menuButton;\n+    static Parent fxmlContent;\n+\n+    static volatile Throwable exception;\n+    static volatile Stage stage;\n+    static volatile Scene scene;\n+\n+    CountDownLatch onShownLatch;\n+    CountDownLatch onHiddenLatch;\n+\n+    private void mouseClick(double x, double y) {\n+        Util.runAndWait(() -> {\n+            robot.mouseMove((int) (scene.getWindow().getX() + scene.getX() + x),\n+                    (int) (scene.getWindow().getY() + scene.getY() + y));\n+            robot.mousePress(MouseButton.PRIMARY);\n+            robot.mouseRelease(MouseButton.PRIMARY);\n+        });\n+    }\n+\n+    private void showMenuButtonContextMenu() throws Exception {\n+        onShownLatch = new CountDownLatch(1);\n+        mouseClick(menuButton.getLayoutX() + menuButton.getWidth() \/ 2,\n+                    menuButton.getLayoutY() + menuButton.getHeight() \/ 2);\n+        Thread.sleep(200); \/\/ Small delay to wait for context menu to display.\n+        Util.waitForLatch(onShownLatch, 10, \"Failed to show context menu.\");\n+    }\n+\n+    private void selectSubmenuItem() throws Exception {\n+        onHiddenLatch = new CountDownLatch(1);\n+        Util.runAndWait(() -> {\n+            robot.keyType(KeyCode.DOWN);\n+            robot.keyType(KeyCode.RIGHT);\n+            robot.keyType(KeyCode.ENTER);\n+            Toolkit.getToolkit().firePulse();\n+\n+        });\n+        Thread.sleep(200); \/\/ Small delay to wait for context menu to close.\n+        Util.waitForLatch(onHiddenLatch, 10, \"Failed to hide context menu.\");\n+    }\n+\n+    @Test\n+    public void testContextMenuNPE() throws Throwable {\n+        showMenuButtonContextMenu();\n+        selectSubmenuItem();\n+\n+        showMenuButtonContextMenu();\n+        selectSubmenuItem();\n+        if (exception != null) {\n+            exception.printStackTrace();\n+            throw exception;\n+        }\n+\n+        Assert.assertEquals(0, onHiddenLatch.getCount());\n+    }\n+\n+    @After\n+    public void resetUI() {\n+        Platform.runLater(() -> {\n+            menuButton.setOnShown(null);\n+            menuButton.setOnHidden(null);\n+        });\n+    }\n+\n+    @Before\n+    public void setupUI() {\n+        Platform.runLater(() -> {\n+            menuButton.setOnShown(e -> {\n+                onShownLatch.countDown();\n+            });\n+            menuButton.setOnHidden(e -> {\n+                onHiddenLatch.countDown();\n+            });\n+        });\n+    }\n+\n+    @BeforeClass\n+    public static void initFX() throws Exception {\n+        Util.launch(startupLatch, TestApp.class);\n+    }\n+\n+    @AfterClass\n+    public static void exit() {\n+        Util.shutdown(stage);\n+    }\n+\n+    public static class TestApp extends Application {\n+        @Override\n+        public void start(Stage primaryStage) {\n+            robot = new Robot();\n+            try {\n+                fxmlContent = FXMLLoader.load(getClass().getResource(\"ContextMenuNPEDemo.fxml\"));\n+                scene = new Scene(fxmlContent);\n+                stage = primaryStage;\n+                stage.setScene(scene);\n+                menuButton = (MenuButton) scene.lookup(\"#idMenuButton\");\n+            }\n+            catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+            stage.initStyle(StageStyle.UNDECORATED);\n+            stage.addEventHandler(WindowEvent.WINDOW_SHOWN, e ->\n+                                    Platform.runLater(startupLatch::countDown));\n+            stage.setAlwaysOnTop(true);\n+            stage.show();\n+\n+            Thread.currentThread().setUncaughtExceptionHandler((t2, e) -> {\n+                exception = e;\n+            });\n+        }\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/robot\/javafx\/scene\/ContextMenuNPETest.java","additions":181,"deletions":0,"binary":false,"changes":181,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+This code is free software; you can redistribute it and\/or modify it\n+under the terms of the GNU General Public License version 2 only, as\n+published by the Free Software Foundation.  Oracle designates this\n+particular file as subject to the \"Classpath\" exception as provided\n+by Oracle in the LICENSE file that accompanied this code.\n+\n+This code is distributed in the hope that it will be useful, but WITHOUT\n+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+version 2 for more details (a copy is included in the LICENSE file that\n+accompanied this code).\n+\n+You should have received a copy of the GNU General Public License version\n+2 along with this work; if not, write to the Free Software Foundation,\n+Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+or visit www.oracle.com if you need additional information or have any\n+questions.\n+-->\n+\n+<?import javafx.scene.control.Menu?>\n+<?import javafx.scene.control.MenuButton?>\n+<?import javafx.scene.control.MenuItem?>\n+<?import javafx.scene.layout.AnchorPane?>\n+\n+\n+<AnchorPane prefHeight=\"200.0\" prefWidth=\"300.0\" stylesheets=\"@ContextMenuStyleSheet.css\" xmlns:fx=\"http:\/\/javafx.com\/fxml\">\n+    <children>\n+        <MenuButton fx:id=\"idMenuButton\" mnemonicParsing=\"false\" text=\"MenuButton\" AnchorPane.leftAnchor=\"50.0\" AnchorPane.topAnchor=\"50.0\">\n+            <items>\n+                <Menu mnemonicParsing=\"false\" text=\"Action 1\">\n+                    <items>\n+                        <MenuItem mnemonicParsing=\"false\" text=\"Sub Action 1\" \/>\n+                        <MenuItem mnemonicParsing=\"false\" text=\"Sub Action 2\" \/>\n+                        <MenuItem mnemonicParsing=\"false\" text=\"Sub Action 3\" \/>\n+                    <\/items>\n+                <\/Menu>\n+                <MenuItem mnemonicParsing=\"false\" text=\"Action 2\" \/>\n+                <MenuItem mnemonicParsing=\"false\" text=\"Action 3\" \/>\n+            <\/items>\n+        <\/MenuButton>\n+    <\/children>\n+<\/AnchorPane>\n","filename":"tests\/system\/src\/test\/resources\/test\/robot\/javafx\/scene\/ContextMenuNPEDemo.fxml","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+.context-menu {\n+-fx-skin: \"test.robot.javafx.customskins.ContextMenuCustomSkin\";\n+}\n","filename":"tests\/system\/src\/test\/resources\/test\/robot\/javafx\/scene\/ContextMenuStyleSheet.css","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"}]}