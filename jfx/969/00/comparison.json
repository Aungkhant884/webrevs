{"files":[{"patch":"@@ -61,1 +61,1 @@\n-                Class accessor = Class.forName(\n+                Class<?> accessor = Class.forName(\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/JavaBeanAccessHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-    private static final ReferenceQueue queue = new ReferenceQueue();\n-    private static final Map<Object, Runnable> records = new ConcurrentHashMap<>();\n+    private static final ReferenceQueue<Object> QUEUE = new ReferenceQueue<>();\n+    private static final Map<Reference<?>, Runnable> RECORDS = new ConcurrentHashMap<>();\n@@ -55,1 +55,1 @@\n-            new java.security.PrivilegedAction() {\n+            new java.security.PrivilegedAction<>() {\n@@ -84,2 +84,2 @@\n-        PhantomReference ref = new PhantomReference<>(target, queue);\n-        records.put(ref, rec);\n+        PhantomReference<Object> ref = new PhantomReference<>(target, QUEUE);\n+        RECORDS.put(ref, rec);\n@@ -92,3 +92,3 @@\n-                Object obj = queue.remove();\n-                ((Reference)obj).clear();\n-                Runnable rec = records.remove(obj);\n+                Reference<?> reference = QUEUE.remove();\n+                reference.clear();\n+                Runnable rec = RECORDS.remove(reference);\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/adapter\/Disposer.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class JavaBeanPropertyBuilderHelper {\n+public class JavaBeanPropertyBuilderHelper<T> {\n@@ -46,1 +46,1 @@\n-    private PropertyDescriptor descriptor;\n+    private PropertyDescriptor<T> descriptor;\n@@ -107,1 +107,1 @@\n-    public PropertyDescriptor getDescriptor() throws NoSuchMethodException {\n+    public PropertyDescriptor<T> getDescriptor() throws NoSuchMethodException {\n@@ -137,1 +137,1 @@\n-            descriptor = new PropertyDescriptor(propertyName, beanClass, getterMethod, setterMethod);\n+            descriptor = new PropertyDescriptor<>(propertyName, beanClass, getterMethod, setterMethod);\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/adapter\/JavaBeanPropertyBuilderHelper.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public class PropertyDescriptor extends ReadOnlyPropertyDescriptor {\n+public class PropertyDescriptor<T> extends ReadOnlyPropertyDescriptor<T> {\n@@ -145,1 +145,1 @@\n-    public class Listener<T> extends ReadOnlyListener<T> implements ChangeListener<T>, VetoableChangeListener {\n+    public class Listener extends ReadOnlyListener implements ChangeListener<T>, VetoableChangeListener {\n@@ -177,1 +177,1 @@\n-                if ((property instanceof Property) && (((Property)property).isBound()) && !updating) {\n+                if ((property instanceof Property) && (((Property<?>)property).isBound()) && !updating) {\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/adapter\/PropertyDescriptor.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public class ReadOnlyJavaBeanPropertyBuilderHelper {\n+public class ReadOnlyJavaBeanPropertyBuilderHelper<T> {\n@@ -43,1 +43,1 @@\n-    private ReadOnlyPropertyDescriptor descriptor;\n+    private ReadOnlyPropertyDescriptor<T> descriptor;\n@@ -90,1 +90,1 @@\n-    public ReadOnlyPropertyDescriptor getDescriptor() throws NoSuchMethodException {\n+    public ReadOnlyPropertyDescriptor<T> getDescriptor() throws NoSuchMethodException {\n@@ -110,1 +110,1 @@\n-            descriptor = new ReadOnlyPropertyDescriptor(propertyName, beanClass, getter);\n+            descriptor = new ReadOnlyPropertyDescriptor<>(propertyName, beanClass, getter);\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/adapter\/ReadOnlyJavaBeanPropertyBuilderHelper.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public class ReadOnlyPropertyDescriptor {\n+public class ReadOnlyPropertyDescriptor<T> {\n@@ -152,1 +152,1 @@\n-    public class ReadOnlyListener<T> implements PropertyChangeListener, WeakListener {\n+    public class ReadOnlyListener implements PropertyChangeListener, WeakListener {\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/adapter\/ReadOnlyPropertyDescriptor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -117,1 +117,3 @@\n-        final List list = (List)obj;\n+\n+        @SuppressWarnings(\"unchecked\")\n+        final List<E> list = (List<E>)obj;  \/\/ safe cast as elements are only referenced\n@@ -124,1 +126,1 @@\n-        ListIterator e2 = list.listIterator();\n+        ListIterator<E> e2 = list.listIterator();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/ReadOnlyListProperty.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -115,1 +115,4 @@\n-        Map<K,V> m = (Map<K,V>) obj;\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Map<K,V> m = (Map<K,V>) obj;  \/\/ safe cast as elements are only referenced\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/ReadOnlyMapProperty.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -114,1 +114,4 @@\n-        Set c = (Set) obj;\n+\n+        @SuppressWarnings(\"unchecked\")\n+        Set<E> c = (Set<E>) obj;  \/\/ safe cast as elements are only referenced\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/ReadOnlySetProperty.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-class DescriptorListenerCleaner implements Runnable{\n+class DescriptorListenerCleaner<T> implements Runnable {\n@@ -33,2 +33,2 @@\n-    private final ReadOnlyPropertyDescriptor pd;\n-    private final WeakReference<ReadOnlyPropertyDescriptor.ReadOnlyListener<?>> lRef;\n+    private final ReadOnlyPropertyDescriptor<T> pd;\n+    private final WeakReference<ReadOnlyPropertyDescriptor<T>.ReadOnlyListener> lRef;\n@@ -36,1 +36,1 @@\n-    DescriptorListenerCleaner(ReadOnlyPropertyDescriptor pd, ReadOnlyPropertyDescriptor.ReadOnlyListener<?> l) {\n+    DescriptorListenerCleaner(ReadOnlyPropertyDescriptor<T> pd, ReadOnlyPropertyDescriptor<T>.ReadOnlyListener l) {\n@@ -43,1 +43,1 @@\n-        ReadOnlyPropertyDescriptor.ReadOnlyListener<?> l = lRef.get();\n+        ReadOnlyPropertyDescriptor<T>.ReadOnlyListener l = lRef.get();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/DescriptorListenerCleaner.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<Boolean> listener;\n+    private final PropertyDescriptor<Boolean> descriptor;\n+    private final PropertyDescriptor<Boolean>.Listener listener;\n@@ -102,1 +102,1 @@\n-    JavaBeanBooleanProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanBooleanProperty(PropertyDescriptor<Boolean> descriptor, Object bean) {\n@@ -104,1 +104,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -106,1 +106,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanBooleanProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private final JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private final JavaBeanPropertyBuilderHelper<Boolean> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<Boolean> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanBooleanPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<Number> listener;\n+    private final PropertyDescriptor<Number> descriptor;\n+    private final PropertyDescriptor<Number>.Listener listener;\n@@ -102,1 +102,1 @@\n-    JavaBeanDoubleProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanDoubleProperty(PropertyDescriptor<Number> descriptor, Object bean) {\n@@ -104,1 +104,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -106,1 +106,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanDoubleProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private final JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private final JavaBeanPropertyBuilderHelper<Number> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanDoublePropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<Number> listener;\n+    private final PropertyDescriptor<Number> descriptor;\n+    private final PropertyDescriptor<Number>.Listener listener;\n@@ -102,1 +102,1 @@\n-    JavaBeanFloatProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanFloatProperty(PropertyDescriptor<Number> descriptor, Object bean) {\n@@ -104,1 +104,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -106,1 +106,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanFloatProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private JavaBeanPropertyBuilderHelper<Number> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanFloatPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<Number> listener;\n+    private final PropertyDescriptor<Number> descriptor;\n+    private final PropertyDescriptor<Number>.Listener listener;\n@@ -102,1 +102,1 @@\n-    JavaBeanIntegerProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanIntegerProperty(PropertyDescriptor<Number> descriptor, Object bean) {\n@@ -104,1 +104,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -106,1 +106,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanIntegerProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private JavaBeanPropertyBuilderHelper<Number> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanIntegerPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<Number> listener;\n+    private final PropertyDescriptor<Number> descriptor;\n+    private final PropertyDescriptor<Number>.Listener listener;\n@@ -102,1 +102,1 @@\n-    JavaBeanLongProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanLongProperty(PropertyDescriptor<Number> descriptor, Object bean) {\n@@ -104,1 +104,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -106,1 +106,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanLongProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private JavaBeanPropertyBuilderHelper<Number> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanLongPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,2 +95,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<T> listener;\n+    private final PropertyDescriptor<T> descriptor;\n+    private final PropertyDescriptor<T>.Listener listener;\n@@ -104,1 +104,1 @@\n-    JavaBeanObjectProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanObjectProperty(PropertyDescriptor<T> descriptor, Object bean) {\n@@ -106,1 +106,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -108,1 +108,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanObjectProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+\/\/ TODO Update API: all public methods should have type <T> added instead of returning raw types\n@@ -64,1 +65,1 @@\n-    private JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private JavaBeanPropertyBuilderHelper<T> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -74,1 +75,1 @@\n-        return new JavaBeanObjectPropertyBuilder();\n+        return new JavaBeanObjectPropertyBuilder<>();\n@@ -85,1 +86,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<T> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanObjectPropertyBuilder.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-    private final PropertyDescriptor descriptor;\n-    private final PropertyDescriptor.Listener<String> listener;\n+    private final PropertyDescriptor<String> descriptor;\n+    private final PropertyDescriptor<String>.Listener listener;\n@@ -102,1 +102,1 @@\n-    JavaBeanStringProperty(PropertyDescriptor descriptor, Object bean) {\n+    JavaBeanStringProperty(PropertyDescriptor<String> descriptor, Object bean) {\n@@ -104,1 +104,1 @@\n-        this.listener = descriptor.new Listener<>(bean, this);\n+        this.listener = descriptor.new Listener(bean, this);\n@@ -106,1 +106,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanStringProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private JavaBeanPropertyBuilderHelper helper = new JavaBeanPropertyBuilderHelper();\n+    private JavaBeanPropertyBuilderHelper<String> helper = new JavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final PropertyDescriptor descriptor = helper.getDescriptor();\n+        final PropertyDescriptor<String> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/JavaBeanStringPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<Boolean> listener;\n+    private final ReadOnlyPropertyDescriptor<Boolean> descriptor;\n+    private final ReadOnlyPropertyDescriptor<Boolean>.ReadOnlyListener listener;\n@@ -91,1 +91,1 @@\n-    ReadOnlyJavaBeanBooleanProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanBooleanProperty(ReadOnlyPropertyDescriptor<Boolean> descriptor, Object bean) {\n@@ -93,1 +93,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -95,1 +95,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanBooleanProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<Boolean> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -84,1 +84,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<Boolean> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanBooleanPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<Number> listener;\n+    private final ReadOnlyPropertyDescriptor<Number> descriptor;\n+    private final ReadOnlyPropertyDescriptor<Number>.ReadOnlyListener listener;\n@@ -91,1 +91,1 @@\n-    ReadOnlyJavaBeanDoubleProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanDoubleProperty(ReadOnlyPropertyDescriptor<Number> descriptor, Object bean) {\n@@ -93,1 +93,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -95,1 +95,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanDoubleProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<Number> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -84,1 +84,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanDoublePropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<Number> listener;\n+    private final ReadOnlyPropertyDescriptor<Number> descriptor;\n+    private final ReadOnlyPropertyDescriptor<Number>.ReadOnlyListener listener;\n@@ -91,1 +91,1 @@\n-    ReadOnlyJavaBeanFloatProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanFloatProperty(ReadOnlyPropertyDescriptor<Number> descriptor, Object bean) {\n@@ -93,1 +93,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -95,1 +95,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanFloatProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<Number> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -84,1 +84,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanFloatPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<Number> listener;\n+    private final ReadOnlyPropertyDescriptor<Number> descriptor;\n+    private final ReadOnlyPropertyDescriptor<Number>.ReadOnlyListener listener;\n@@ -91,1 +91,1 @@\n-    ReadOnlyJavaBeanIntegerProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanIntegerProperty(ReadOnlyPropertyDescriptor<Number> descriptor, Object bean) {\n@@ -93,1 +93,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -95,1 +95,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanIntegerProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<Number> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -84,1 +84,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanIntegerPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<Number> listener;\n+    private final ReadOnlyPropertyDescriptor<Number> descriptor;\n+    private final ReadOnlyPropertyDescriptor<Number>.ReadOnlyListener listener;\n@@ -91,1 +91,1 @@\n-    ReadOnlyJavaBeanLongProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanLongProperty(ReadOnlyPropertyDescriptor<Number> descriptor, Object bean) {\n@@ -93,1 +93,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -95,1 +95,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanLongProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<Number> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -84,1 +84,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<Number> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanLongPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<T> listener;\n+    private final ReadOnlyPropertyDescriptor<T> descriptor;\n+    private final ReadOnlyPropertyDescriptor<T>.ReadOnlyListener listener;\n@@ -93,1 +93,1 @@\n-    ReadOnlyJavaBeanObjectProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanObjectProperty(ReadOnlyPropertyDescriptor<T> descriptor, Object bean) {\n@@ -95,1 +95,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -97,1 +97,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanObjectProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<T> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -85,1 +85,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<T> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanObjectPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-    private final ReadOnlyPropertyDescriptor descriptor;\n-    private final ReadOnlyPropertyDescriptor.ReadOnlyListener<String> listener;\n+    private final ReadOnlyPropertyDescriptor<String> descriptor;\n+    private final ReadOnlyPropertyDescriptor<String>.ReadOnlyListener listener;\n@@ -91,1 +91,1 @@\n-    ReadOnlyJavaBeanStringProperty(ReadOnlyPropertyDescriptor descriptor, Object bean) {\n+    ReadOnlyJavaBeanStringProperty(ReadOnlyPropertyDescriptor<String> descriptor, Object bean) {\n@@ -93,1 +93,1 @@\n-        this.listener = descriptor.new ReadOnlyListener<>(bean, this);\n+        this.listener = descriptor.new ReadOnlyListener(bean, this);\n@@ -95,1 +95,1 @@\n-        Disposer.addRecord(this, new DescriptorListenerCleaner(descriptor, listener));\n+        Disposer.addRecord(this, new DescriptorListenerCleaner<>(descriptor, listener));\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanStringProperty.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final ReadOnlyJavaBeanPropertyBuilderHelper helper = new ReadOnlyJavaBeanPropertyBuilderHelper();\n+    private final ReadOnlyJavaBeanPropertyBuilderHelper<String> helper = new ReadOnlyJavaBeanPropertyBuilderHelper<>();\n@@ -84,1 +84,1 @@\n-        final ReadOnlyPropertyDescriptor descriptor = helper.getDescriptor();\n+        final ReadOnlyPropertyDescriptor<String> descriptor = helper.getDescriptor();\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/adapter\/ReadOnlyJavaBeanStringPropertyBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}