{"files":[{"patch":"@@ -176,2 +176,1 @@\n-                final ReadOnlyJavaBeanProperty<T> property = checkRef();\n-                if ((property instanceof Property) && (((Property<?>)property).isBound()) && !updating) {\n+                if ((checkRef() instanceof Property<?> property) && property.isBound() && !updating) {\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/property\/adapter\/PropertyDescriptor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import java.util.Objects;\n+\n@@ -114,8 +116,1 @@\n-        if (!(obj instanceof List)) {\n-            return false;\n-        }\n-\n-        @SuppressWarnings(\"unchecked\")\n-        final List<E> list = (List<E>)obj;  \/\/ safe cast as elements are only referenced\n-\n-        if (size() != list.size()) {\n+        if (!(obj instanceof List<?> otherList) || size() != otherList.size()) {\n@@ -126,1 +121,2 @@\n-        ListIterator<E> e2 = list.listIterator();\n+        ListIterator<?> e2 = otherList.listIterator();\n+\n@@ -128,3 +124,1 @@\n-            E o1 = e1.next();\n-            Object o2 = e2.next();\n-            if (!(o1==null ? o2==null : o1.equals(o2)))\n+            if (!Objects.equals(e1.next(), e2.next())) {\n@@ -132,0 +126,1 @@\n+            }\n@@ -133,0 +128,1 @@\n+\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/ReadOnlyListProperty.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}