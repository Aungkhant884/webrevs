{"files":[{"patch":"@@ -42,2 +42,5 @@\n- * A {@code PointLight} that radiates light in a cone in a specific direction. The direction of the {@code SpotLight} is\n- * defined by the {@link #directionProperty() direction} property.\n+ * A {@code SpotLight} is a {@code PointLight} that radiates light in a cone in a specific direction. The direction is\n+ * defined by the {@link #directionProperty() direction} vector property relative to the rotation of the\n+ * {@code SpotLight} that is set with the rotation transforms of the node. For example, if the direction vector is\n+ * {@code (1, 1, 1)} and the light is not rotated, it will point in the {@code (1, 1, 1)} direction, and if the light is\n+ * rotated 90 degrees on the y axis, it will point in the {@code (1, 1, -1)} direction.\n@@ -45,9 +48,20 @@\n- * The light cone is defined by 3 factors: an {@link #innerAngleProperty() inner angle}, an {@link #outerAngleProperty()\n- * outer angle}, and a {@link #falloffProperty() falloff} factor. For a point whose angle to the light is {@code a}, if\n- * {@code a < innerAngle} then that point receives maximum illumination, if {@code a > outerAngle} then that point\n- * receives no illumination, and if {@code innerAngle <= a <= outerAngle} then the illumination is determined by the\n- * formula\n- * <pre>I = pow((cos(a) - cos(outer)) \/ (cos(inner) - cos(outer)), falloff)<\/pre>\n- * which represents a drop in illumination from the inner angle to the outer angle. {@code falloff} determines the\n- * behavior of the drop. The valid ranges for these properties are {@code 0 <= innerAngle <= outerAngle <= 180} and\n- * {@code falloff >= 0}; values outside either of these ranges can produce unexpected results.\n+ * In addition to the attenuation factors defined in {@code PointLight}, the {@code Spotlight}'s intensity is also\n+ * affected by 3 factors:\n+ * <ul>\n+ * <li> {@link #innerAngleProperty() inner angle}: the angle of the inner cone\n+ * <li> {@link #outerAngleProperty() outer angle}: the angle of the outer cone\n+ * <li> {@link #falloffProperty() falloff}: the factor that controls the light's intensity drop inside the outer cone\n+ * <\/ul>\n+ * The valid ranges for these properties are {@code 0 <= innerAngle <= outerAngle <= 180} and {@code falloff >= 0};\n+ * values outside either of these ranges can produce unexpected results.\n+ * <p>\n+ * For a point whose vector to the light forms an angle {@code theta} with the direction of the light, if\n+ * <ul>\n+ * <li>{@code theta < innerAngle} then that point receives maximum illumination\n+ * <li>{@code theta > outerAngle} then that point receives no illumination\n+ * <li>{@code innerAngle <= theta <= outerAngle} then the illumination is determined by the formula\n+ *\n+ * <pre>I = pow((cos(theta) - cos(outer)) \/ (cos(inner) - cos(outer)), falloff)<\/pre>\n+ *\n+ * which represents a drop in illumination from the inner angle to the outer angle.\n+ * <\/ul>\n@@ -76,1 +90,1 @@\n-        \/\/ To initialize the class helper at the beginning each constructor of this class\n+        \/\/ To initialize the class helper at the beginning of each constructor of this class\n@@ -98,1 +112,1 @@\n-     * The direction the spotlight is facing. The vector need not be normalized.\n+     * The direction vector of the spotlight. The vector need not be normalized.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/SpotLight.java","additions":27,"deletions":13,"binary":false,"changes":40,"status":"modified"}]}