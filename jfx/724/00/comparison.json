{"files":[{"patch":"@@ -417,0 +417,1 @@\n+        \/\/ FIXME: JDK-8187314 must respect actual committed value\n@@ -418,5 +419,1 @@\n-        if (treeItem != null) {\n-            treeItem.setValue(newValue);\n-            updateTreeItem(treeItem);\n-            updateItem(newValue, false);\n-        }\n+        updateItem(newValue, false);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeCell.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -340,0 +340,2 @@\n+\n+        setOnEditCommit(DEFAULT_EDIT_COMMIT_HANDLER);\n@@ -848,0 +850,5 @@\n+    private EventHandler<TreeView.EditEvent<T>> DEFAULT_EDIT_COMMIT_HANDLER = t -> {\n+        TreeItem<T> editedItem = t.getTreeItem();\n+        if (editedItem == null) return;\n+        editedItem.setValue(t.getNewValue());\n+    };\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeView.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+import javafx.scene.control.cell.TextFieldTreeCell;\n@@ -891,0 +892,79 @@\n+\/\/------------- JDK-8187309: fix editing mechanics to comply to specification\n+\n+    @Test\n+    public void testTreeHasDefaultCommitHandler() {\n+        assertNotNull(\"treeView must have default commit handler\", tree.getOnEditCommit());\n+    }\n+\n+    @Test\n+    public void testDefaultCommitUpdatesData() {\n+        TreeItem<String> editingItem = setupForEditing(cell);\n+        tree.edit(editingItem);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"value committed\", value, editingItem.getValue());\n+    }\n+\n+    @Test\n+    public void testDefaultCommitUpdatesCell() {\n+        TreeCell<String> cell = TextFieldTreeCell.forTreeView().call(tree);\n+        TreeItem<String> editingItem = setupForEditing(cell);\n+        tree.edit(editingItem);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"cell text updated to committed value\", value, cell.getText());\n+    }\n+\n+    @Test\n+    public void testDoNothingCommitHandlerDoesNotUpdateData() {\n+        TreeItem<String> editingItem = setupForEditing(cell);\n+        String oldValue = editingItem.getValue();\n+        \/\/ do nothing handler\n+        tree.setOnEditCommit(e -> {});\n+        tree.edit(editingItem);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"edited value must not be committed\", oldValue, editingItem.getValue());\n+    }\n+\n+    @Ignore(\"JDK-8187314\")\n+    @Test\n+    public void testDoNothingCommitHandlerDoesNotUpdateCell() {\n+        TreeCell<String> cell = TextFieldTreeCell.forTreeView().call(tree);\n+        TreeItem<String> editingItem = setupForEditing(cell);\n+        String oldValue = editingItem.getValue();\n+        \/\/ do nothing handler\n+        tree.setOnEditCommit(e -> {});\n+        tree.edit(editingItem);\n+        String value = \"edited\";\n+        cell.commitEdit(value);\n+        assertEquals(\"cell text must not have changed\", oldValue, cell.getText());\n+    }\n+\n+\n+    \/**\n+     * Sets tree editable, configures the given cell for editing in tree at index 1\n+     * and returns the treeItem at that index.\n+     *\/\n+    private TreeItem<String> setupForEditing(TreeCell<String> editingCell) {\n+        tree.setEditable(true);\n+        editingCell.updateTreeView(tree);\n+        editingCell.updateIndex(1);\n+        return editingCell.getTreeItem();\n+    }\n+\n+    \/**\n+     * Test test setup.\n+     *\/\n+    @Test\n+    public void testSetupForEditing() {\n+        TreeCell<String> cell = new TreeCell<>();\n+        TreeItem<String> cellTreeItem = setupForEditing(cell);\n+        assertTrue(\"sanity: tree must be editable\", tree.isEditable());\n+        assertEquals(\"sanity: returned treeItem\", cellTreeItem, cell.getTreeItem());\n+        assertEquals(1, cell.getIndex());\n+        assertEquals(\"sanity: cell configured with tree's treeItem at index\",\n+                tree.getTreeItem(cell.getIndex()), cell.getTreeItem());\n+        assertNull(\"sanity: config doesn't change tree state\", tree.getEditingItem());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeCellTest.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -1198,1 +1198,2 @@\n-        treeView.setOnEditCommit(t -> {\n+        \/\/ Note: must add a commit handler to not replace the default (saving) handler\n+        treeView.addEventHandler(TreeView.editCommitEvent(), t -> {\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeViewTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}