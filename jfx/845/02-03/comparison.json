{"files":[{"patch":"@@ -245,1 +245,3 @@\n-                    throw new IllegalArgumentException(\"There must be 1:1 relationship between Skin and Skinnable\");\n+                    unbind();\n+                    set(oldValue);\n+                    throw new IllegalArgumentException(\"Skin does not correspond to this Skinnable\");\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Control.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * {@link #install()} method.  The recommended life cycle of a Skin implementation\n+ * {@link #install()} method.  The life cycle of a Skin implementation\n@@ -77,2 +77,2 @@\n-     * Called by {@link Skinnable#setSkin(Skin)} on a pristine control, or after the\n-     * previous skin has been uninstalled via its {@link #dispose()} method.\n+     * Called by {@link Skinnable#setSkin(Skin)} after the\n+     * previous skin, if any, has been uninstalled via its {@link #dispose()} method.\n@@ -81,0 +81,2 @@\n+     * <p>\n+     * The default implementation of this method does nothing.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Skin.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-     * @throws IllegalArgumentException if {@code Skin} does not correspond to this {@code Skinnable}\n+     * @throws IllegalArgumentException if {@link Skin#getSkinnable()} returns a different {@code Skinnable}\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Skinnable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}