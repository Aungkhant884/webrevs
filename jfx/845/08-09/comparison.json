{"files":[{"patch":"@@ -226,2 +226,3 @@\n-     * {@link Control#setSkin(Skin)} will check the return value of {@link Skin#getSkinnable()}\n-     * against this Control, and throw an {@code IllegalArgumentException} if it is not the same.\n+     * setting the {@link #skinProperty() skin property} triggers a check of the return value of\n+     * {@link Skin#getSkinnable()} against this Control, and throw an {@code IllegalArgumentException}\n+     * if it is not the same.\n@@ -232,1 +233,1 @@\n-     * @throws IllegalArgumentException if {@code skin != null && skin != getSkinnable()}\n+     * @throws IllegalArgumentException if {@code (skin != null && skin.getSkinnable() != Control.this)}\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Control.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-     * Called by {@link Skinnable#setSkin(Skin)} after the\n+     * Called once by {@link Skinnable#setSkin(Skin)} after the\n@@ -80,0 +80,2 @@\n+     * Client code must not call this method.\n+     * <p>\n@@ -83,1 +85,1 @@\n-     * Most implementations of Skin in the <code>javafx.controls<\/code> module\n+     * Most implementations of Skin\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Skin.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,8 +43,5 @@\n-     * There is typically a one-to-one relationship between a {@code Skinnable} and its\n-     * {@code Skin}. Every {@code Skin} maintains a back reference to the\n-     * {@code Skinnable}.\n-     * <p>\n-     * To ensure a one-to-one relationship between a {@code Skinnable} and its\n-     * {@code Skin}, some implementations of {@link Skinnable#setSkin(Skin)} method will check\n-     * the return value of {@link Skin#getSkinnable()} against this Skinnable,\n-     * and throw an {@code IllegalArgumentException} if it is not the same.\n+     * Some implementations of {@code Skinnable} define a one-to-one relationship between {@code Skinnable}\n+     * and its {@code Skin}. Every {@code Skin} maintains a back reference to the\n+     * {@code Skinnable}.  When required, this relationship is enforced inside {@link Skinnable#setSkin(Skin)} method\n+     * which checks the return value of {@link Skin#getSkinnable()} against this {@code Skinnable},\n+     * throwing an {@code IllegalArgumentException} if it is not the same.\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/Skinnable.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}