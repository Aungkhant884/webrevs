{"files":[{"patch":"@@ -31,1 +31,1 @@\n-import java.util.BitSet;\n+import java.util.ArrayList;\n@@ -176,10 +176,1 @@\n-        beginChange();\n-        boolean removed = false;\n-        for (int i = size()-1; i>=0; i--) {\n-            if (c.contains(get(i))) {\n-                remove(i);\n-                removed = true;\n-            }\n-        }\n-        endChange();\n-        return removed;\n+        return remove(c, true);\n@@ -201,6 +192,19 @@\n-        boolean retained = false;\n-        beginChange();\n-        for (int i = size()-1; i>=0; i--) {\n-            if (!c.contains(get(i))) {\n-                remove(i);\n-                retained = true;\n+        return remove(c, false);\n+    }\n+\n+    private boolean remove(Collection<?> c, boolean isRemoveAll) {\n+        List<Integer> runLengths = new ArrayList<>();\n+        {\n+            int run = 0;\n+            boolean flag = isRemoveAll;\n+            for (int i = size() - 1; i >= 0; i--) {\n+                if (c.contains(get(i)) == flag) {\n+                    run++;\n+                } else {\n+                    runLengths.add(run);\n+                    run = 1;\n+                    flag = !flag;\n+                }\n+            }\n+            if (run > 0 && flag == isRemoveAll) {\n+                runLengths.add(run);\n@@ -209,2 +213,20 @@\n-        endChange();\n-        return retained;\n+        boolean flag = true;\n+        boolean removed = false;\n+        if (!runLengths.isEmpty()) {\n+            beginChange();\n+            int cur = size() - 1;\n+            for (int run:runLengths) {\n+                if (flag) {\n+                    for (int to = cur-run; cur > to; cur--) {\n+                        remove(cur);\n+                        removed = true;\n+                    }\n+                } else {\n+                    cur -= run;\n+                }\n+                flag = !flag;\n+            }\n+            endChange();\n+            return removed;\n+        }\n+        return false;\n","filename":"modules\/javafx.base\/src\/main\/java\/com\/sun\/javafx\/collections\/ObservableListWrapper.java","additions":41,"deletions":19,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -74,14 +74,37 @@\n-        ObservableList<Integer> list = new ObservableListWrapper<>(new ArrayList<>(Arrays.asList(1, 2, 3)));\n-        assertFalse(list.removeAll(0));\n-        assertEquals(3, list.size());\n-        assertTrue(list.removeAll(1));\n-        assertEquals(2, list.size());\n-        assertFalse(list.removeAll(1));\n-        assertEquals(2, list.size());\n-        assertTrue(list.removeAll(1, 2));\n-        assertEquals(1, list.size());\n-        assertTrue(list.removeAll(3));\n-        assertEquals(0, list.size());\n-        assertFalse(list.removeAll(Collections.EMPTY_SET));\n-        assertFalse(list.removeAll(1));\n-        assertFalse(list.removeAll(1, 2));\n+        {\n+            ObservableList<Integer> list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(1, 2, 3)));\n+            assertFalse(list.removeAll(0));\n+            assertEquals(Arrays.asList(1, 2, 3), list);\n+            assertTrue(list.removeAll(1));\n+            assertEquals(Arrays.asList(2, 3), list);\n+            assertFalse(list.removeAll(1));\n+            assertEquals(Arrays.asList(2, 3), list);\n+            assertTrue(list.removeAll(1, 2));\n+            assertEquals(Arrays.asList(3), list);\n+            assertTrue(list.removeAll(3));\n+            assertEquals(0, list.size());\n+            assertFalse(list.removeAll(Collections.EMPTY_SET));\n+            assertFalse(list.removeAll(1));\n+            assertFalse(list.removeAll(1, 2));\n+        }\n+        {\n+            ObservableList<Integer> list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5)));\n+            assertTrue(list.removeAll(2, 4));\n+            assertEquals(Arrays.asList(1, 3, 5), list);\n+            assertTrue(list.removeAll(1, 5));\n+            assertEquals(Arrays.asList(3), list);\n+        }\n+        {\n+            ObservableList<Integer> list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\n+            assertTrue(list.removeAll(11));\n+            assertEquals(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), list);\n+            assertTrue(list.removeAll(1, 2, 9, 10));\n+            assertEquals(Arrays.asList(3, 4, 5, 6, 7, 8), list);\n+            assertTrue(list.removeAll(5, 6));\n+            assertEquals(Arrays.asList(3, 4, 7, 8), list);\n+            assertTrue(list.removeAll(8, 7, 4, 3));\n+            assertEquals(0, list.size());\n+        }\n@@ -92,14 +115,16 @@\n-        ObservableList<Integer> list = new ObservableListWrapper<>(new ArrayList<>(Arrays.asList(1, 2, 3)));\n-        assertFalse(list.retainAll(0, 1, 2, 3));\n-        assertEquals(3, list.size());\n-        assertFalse(list.retainAll(1, 2, 3));\n-        assertEquals(3, list.size());\n-        assertTrue(list.retainAll(2, 3));\n-        assertEquals(2, list.size());\n-        assertTrue(list.retainAll(3));\n-        assertEquals(1, list.size());\n-        assertTrue(list.retainAll(1,2));\n-        assertEquals(0, list.size());\n-        assertFalse(list.retainAll(Collections.EMPTY_SET));\n-        assertFalse(list.retainAll(2,3));\n-        assertFalse(list.retainAll(3));\n+        {\n+            ObservableList<Integer> list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(1, 2, 3)));\n+            assertFalse(list.retainAll(0, 1, 2, 3));\n+            assertEquals(Arrays.asList(1, 2, 3), list);\n+            assertFalse(list.retainAll(1, 2, 3));\n+            assertEquals(Arrays.asList(1, 2, 3), list);\n+            assertTrue(list.retainAll(2, 3));\n+            assertEquals(Arrays.asList(2, 3), list);\n+            assertTrue(list.retainAll(3));\n+            assertEquals(Arrays.asList(3), list);\n+            assertTrue(list.retainAll(1,2));\n+            assertEquals(0, list.size());\n+            assertFalse(list.retainAll(Collections.EMPTY_SET));\n+            assertFalse(list.retainAll(2,3));\n+            assertFalse(list.retainAll(3));\n@@ -107,3 +132,27 @@\n-        list = new ObservableListWrapper<>(new ArrayList<>(Arrays.asList(1, 2, 3)));\n-        assertTrue(list.retainAll(Collections.EMPTY_SET));\n-        assertEquals(0, list.size());\n+            list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(1, 2, 3)));\n+            assertTrue(list.retainAll(Collections.EMPTY_SET));\n+            assertEquals(0, list.size());\n+        }\n+        {\n+            ObservableList<Integer> list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5)));\n+            assertTrue(list.retainAll(1, 3, 5));\n+            assertEquals(Arrays.asList(1, 3, 5), list);\n+            assertTrue(list.retainAll(3));\n+            assertEquals(Arrays.asList(3), list);\n+        }\n+        {\n+            ObservableList<Integer> list = new ObservableListWrapper<>(\n+                new ArrayList<>(Arrays.asList(11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\n+            assertTrue(list.retainAll(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\n+            assertEquals(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), list);\n+            assertTrue(list.retainAll(3, 4, 5, 6, 7, 8));\n+            assertEquals(Arrays.asList(3, 4, 5, 6, 7, 8), list);\n+            assertTrue(list.retainAll(3, 4, 7, 8));\n+            assertEquals(Arrays.asList(3, 4, 7, 8), list);\n+            assertFalse(list.retainAll(3, 4, 7, 8));\n+            assertEquals(Arrays.asList(3, 4, 7, 8), list);\n+            assertTrue(list.retainAll(0));\n+            assertEquals(0, list.size());\n+        }\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/collections\/ObservableListWrapperTest.java","additions":80,"deletions":31,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -840,0 +840,16 @@\n+    @Test public void test_rt35857Back() {\n+        ObservableList<String> fxList = FXCollections.observableArrayList(\"A\", \"B\", \"C\");\n+        final ListView<String> listView = new ListView<String>(fxList);\n+\n+        listView.getSelectionModel().select(2);\n+\n+        ObservableList<String> selectedItems = listView.getSelectionModel().getSelectedItems();\n+        assertEquals(1, selectedItems.size());\n+        assertEquals(\"C\", selectedItems.get(0));\n+\n+        listView.getItems().removeAll(selectedItems);\n+        assertEquals(2, fxList.size());\n+        assertEquals(\"A\", fxList.get(0));\n+        assertEquals(\"B\", fxList.get(1));\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}