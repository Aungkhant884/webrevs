{"files":[{"patch":"@@ -48,0 +48,1 @@\n+import javafx.collections.transformation.FilteredList;\n@@ -148,1 +149,3 @@\n-        items.addListener((ListChangeListener.Change<? extends MenuItemBase> change) -> {\n+        final FilteredList<MenuItemBase> filteredItems = items.filtered(x -> x.isVisible());\n+\n+        filteredItems.addListener((ListChangeListener.Change<? extends MenuItemBase> change) -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassSystemMenu.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.javafx.stage;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import test.util.Util;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javafx.application.Platform;\n+import javafx.scene.control.MenuBar;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.control.Menu;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+public class SystemMenuBarTest {\n+    @BeforeClass\n+    public static void initFX() throws Exception {\n+        CountDownLatch startupLatch = new CountDownLatch(1);\n+        Platform.setImplicitExit(false);\n+\n+        Util.startup(startupLatch, () -> {\n+            startupLatch.countDown();\n+        });\n+    }\n+\n+    @AfterClass\n+    public static void teardownOnce() {\n+        Util.shutdown();\n+    }\n+\n+    CountDownLatch menubarLatch = new CountDownLatch(1);\n+    AtomicBoolean failed = new AtomicBoolean(false);\n+\n+    @Test\n+    public void testFailingMenuBar() throws InterruptedException {\n+        Util.runAndWait(() -> {\n+            Thread.currentThread().setUncaughtExceptionHandler((t,e) -> {\n+                e.printStackTrace();\n+                failed.set(true);\n+            });\n+            createMenuBarStage();\n+        });\n+\n+        menubarLatch.await();\n+\n+        System.err.println(\"FAILED IS: \" + failed.get());\n+        assertFalse(failed.get());\n+    }\n+\n+    public void createMenuBarStage() {\n+        Stage stage = new Stage();\n+        VBox root = new VBox();\n+\n+        root.getChildren().add(createFailingMenuBar());\n+\n+        Scene scene = new Scene(root);\n+        stage.setScene(scene);\n+        stage.show();\n+    }\n+\n+    public MenuBar createFailingMenuBar() {\n+        MenuBar menuBar = new MenuBar();\n+\n+        menuBar.setUseSystemMenuBar(true);\n+\n+        Menu systemMenu = new Menu(\"systemMenu\");\n+        menuBar.getMenus().add(systemMenu);\n+\n+        var newItem = new MenuItem();\n+        newItem.setVisible(false);\n+        systemMenu.getItems().add(newItem);\n+\n+        Platform.runLater(() -> {\n+            javafx.scene.control.Menu systemMenuContributions = new Menu(\"123\");\n+            systemMenu.getItems().add(systemMenuContributions);\n+            menubarLatch.countDown();\n+        });\n+\n+        return menuBar;\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/stage\/SystemMenuBarTest.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}