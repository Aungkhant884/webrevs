{"files":[{"patch":"@@ -151,0 +151,2 @@\n+    private final Object LOCK = new Object();\n+\n@@ -408,0 +410,48 @@\n+    private EmbeddedSceneInterface getScenePeer() {\n+        synchronized(LOCK) {\n+            return scenePeer;\n+        }\n+    }\n+\n+    private EmbeddedStageInterface getStagePeer() {\n+        synchronized(LOCK) {\n+            return stagePeer;\n+        }\n+    }\n+\n+    private SwingDnD getDnD() {\n+        synchronized(LOCK) {\n+            return dnd;\n+        }\n+    }\n+\n+    private void setDnD(SwingDnD val) {\n+        synchronized(LOCK) {\n+            dnd = val;\n+        }\n+    }\n+\n+    private int getCompWidth() {\n+        synchronized(LOCK) {\n+            return pWidth;\n+        }\n+    }\n+\n+    private int getCompHeight() {\n+        synchronized(LOCK) {\n+            return pHeight;\n+        }\n+    }\n+\n+    private double getScaleFactorX() {\n+        synchronized(LOCK) {\n+            return scaleFactorX;\n+        }\n+    }\n+\n+    private double getScaleFactorY() {\n+        synchronized(LOCK) {\n+            return scaleFactorY;\n+        }\n+    }\n+\n@@ -409,1 +459,5 @@\n-        if (scenePeer == null || !isFxEnabled()) {\n+        if (!isFxEnabled()) {\n+            return;\n+        }\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        if (lScenePeer == null) {\n@@ -458,1 +512,1 @@\n-            scenePeer.scrollEvent(AbstractEvents.MOUSEEVENT_VERTICAL_WHEEL,\n+            lScenePeer.scrollEvent(AbstractEvents.MOUSEEVENT_VERTICAL_WHEEL,\n@@ -469,1 +523,1 @@\n-            scenePeer.mouseEvent(\n+            lScenePeer.mouseEvent(\n@@ -483,1 +537,1 @@\n-            scenePeer.menuEvent(e.getX(), e.getY(), fxXOnScreen, fxYOnScreen, false);\n+            lScenePeer.menuEvent(e.getX(), e.getY(), fxXOnScreen, fxYOnScreen, false);\n@@ -503,1 +557,2 @@\n-                if (stagePeer != null) {\n+                EmbeddedStageInterface lStagePeer = getStagePeer();\n+                if (lStagePeer != null) {\n@@ -505,1 +560,1 @@\n-                    stagePeer.setFocused(true, focusCause);\n+                    lStagePeer.setFocused(true, focusCause);\n@@ -542,1 +597,5 @@\n-        if (scenePeer == null || !isFxEnabled()) {\n+        if (!isFxEnabled()) {\n+            return;\n+        }\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        if (lScenePeer == null) {\n@@ -550,1 +609,1 @@\n-        scenePeer.keyEvent(\n+        lScenePeer.keyEvent(\n@@ -570,2 +629,6 @@\n-        if (stagePeer != null) {\n-            stagePeer.setSize(pWidth, pHeight);\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        EmbeddedStageInterface lStagePeer = getStagePeer();\n+        int lWidth = getCompWidth();\n+        int lHeight = getCompHeight();\n+        if (lStagePeer != null) {\n+            lStagePeer.setSize(lWidth, lHeight);\n@@ -573,2 +636,2 @@\n-        if (scenePeer != null) {\n-            scenePeer.setSize(pWidth, pHeight);\n+        if (lScenePeer != null) {\n+            lScenePeer.setSize(lWidth, lHeight);\n@@ -609,2 +672,7 @@\n-        int oldWidth = pWidth;\n-        int oldHeight = pHeight;\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        int lWidth = getCompWidth();\n+        int lHeight = getCompHeight();\n+        double lScaleFactorX = getScaleFactorX();\n+        double lScaleFactorY = getScaleFactorY();\n+        int oldWidth = lWidth;\n+        int oldHeight = lHeight;\n@@ -613,2 +681,2 @@\n-            pWidth -= (i.left + i.right);\n-            pHeight -= (i.top + i.bottom);\n+            lWidth -= (i.left + i.right);\n+            lHeight -= (i.top + i.bottom);\n@@ -618,4 +686,8 @@\n-        pWidth = Math.max(0, getWidth());\n-        pHeight = Math.max(0, getHeight());\n-        double newScaleFactorX = scaleFactorX;\n-        double newScaleFactorY = scaleFactorY;\n+        lWidth = Math.max(0, getWidth());\n+        lHeight = Math.max(0, getHeight());\n+        synchronized(LOCK) {\n+            pWidth = lWidth;\n+            pHeight = lHeight;\n+        }\n+        double newScaleFactorX = lScaleFactorX;\n+        double newScaleFactorY = lScaleFactorY;\n@@ -629,1 +701,1 @@\n-        if (oldWidth == 0 && oldHeight == 0 && pWidth == 0 && pHeight == 0) {\n+        if (oldWidth == 0 && oldHeight == 0 && lWidth == 0 && lHeight == 0) {\n@@ -632,2 +704,2 @@\n-        if (oldWidth != pWidth || oldHeight != pHeight ||\n-            newScaleFactorX != scaleFactorX || newScaleFactorY != scaleFactorY)\n+        if (oldWidth != lWidth || oldHeight != lHeight ||\n+            newScaleFactorX != lScaleFactorX || newScaleFactorY != lScaleFactorY)\n@@ -636,2 +708,2 @@\n-            if (scenePeer != null) {\n-                scenePeer.setPixelScaleFactors((float) newScaleFactorX,\n+            if (lScenePeer != null) {\n+                lScenePeer.setPixelScaleFactors((float) newScaleFactorX,\n@@ -640,2 +712,4 @@\n-            scaleFactorX = newScaleFactorX;\n-            scaleFactorY = newScaleFactorY;\n+            synchronized(LOCK) {\n+                scaleFactorX = newScaleFactorX;\n+                scaleFactorY = newScaleFactorY;\n+            }\n@@ -661,1 +735,2 @@\n-        if (stagePeer == null) {\n+        EmbeddedStageInterface lStagePeer = getStagePeer();\n+        if (lStagePeer == null) {\n@@ -665,1 +740,1 @@\n-        stagePeer.setLocation(screenX, screenY);\n+        lStagePeer.setLocation(screenX, screenY);\n@@ -698,1 +773,5 @@\n-        if ((stage == null) || (stagePeer == null) || !isFxEnabled()) {\n+        if (!isFxEnabled()) {\n+            return;\n+        }\n+        EmbeddedStageInterface lStagePeer = getStagePeer();\n+        if ((stage == null) || (lStagePeer == null)) {\n@@ -713,1 +792,1 @@\n-        stagePeer.setFocused(focused, focusCause);\n+        lStagePeer.setFocused(focused, focusCause);\n@@ -732,1 +811,6 @@\n-        if (scenePeer == null || pWidth <= 0 || pHeight <= 0) {\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        int lWidth = getCompWidth();\n+        int lHeight = getCompHeight();\n+        double lScaleFactorX = getScaleFactorX();\n+        double lScaleFactorY = getScaleFactorY();\n+        if (lScenePeer == null || lWidth <= 0 || lHeight <= 0) {\n@@ -736,2 +820,2 @@\n-            int newPixelW = (int) Math.ceil(pWidth * newScaleFactorX);\n-            int newPixelH = (int) Math.ceil(pHeight * newScaleFactorY);\n+            int newPixelW = (int) Math.ceil(lWidth * newScaleFactorX);\n+            int newPixelH = (int) Math.ceil(lHeight * newScaleFactorY);\n@@ -740,1 +824,1 @@\n-                                             scenePeer.getPixelFormat(), null, false));\n+                                             lScenePeer.getPixelFormat(), null, false));\n@@ -742,2 +826,2 @@\n-                double ratioX = newScaleFactorX \/ scaleFactorX;\n-                double ratioY = newScaleFactorY \/ scaleFactorY;\n+                double ratioX = newScaleFactorX \/ lScaleFactorX;\n+                double ratioY = newScaleFactorY \/ lScaleFactorY;\n@@ -767,0 +851,1 @@\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n@@ -773,1 +858,1 @@\n-        scenePeer.inputMethodEvent(\n+        lScenePeer.inputMethodEvent(\n@@ -791,1 +876,6 @@\n-        if (scenePeer == null) {\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        int lWidth = getCompWidth();\n+        int lHeight = getCompHeight();\n+        double lScaleFactorX = getScaleFactorX();\n+        double lScaleFactorY = getScaleFactorY();\n+        if (lScenePeer == null) {\n@@ -795,1 +885,1 @@\n-            createResizePixelBuffer(scaleFactorX, scaleFactorY);\n+            createResizePixelBuffer(lScaleFactorX, lScaleFactorY);\n@@ -803,1 +893,1 @@\n-        if (!scenePeer.getPixels(buf, pWidth, pHeight)) {\n+        if (!lScenePeer.getPixels(buf, lWidth, lHeight)) {\n@@ -819,1 +909,1 @@\n-            gg.drawImage(pixelsIm, 0, 0, pWidth, pHeight, null);\n+            gg.drawImage(pixelsIm, 0, 0, lWidth, lHeight, null);\n@@ -821,2 +911,2 @@\n-            double newScaleFactorX = scaleFactorX;\n-            double newScaleFactorY = scaleFactorY;\n+            double newScaleFactorX = lScaleFactorX;\n+            double newScaleFactorY = lScaleFactorY;\n@@ -829,1 +919,1 @@\n-            if (scaleFactorX != newScaleFactorX || scaleFactorY != newScaleFactorY) {\n+            if (lScaleFactorX != newScaleFactorX || lScaleFactorY != newScaleFactorY) {\n@@ -832,1 +922,1 @@\n-                scenePeer.setPixelScaleFactors((float) newScaleFactorX,\n+                lScenePeer.setPixelScaleFactors((float) newScaleFactorX,\n@@ -834,2 +924,4 @@\n-                scaleFactorX = newScaleFactorX;\n-                scaleFactorY = newScaleFactorY;\n+                synchronized(LOCK) {\n+                    scaleFactorX = newScaleFactorX;\n+                    scaleFactorY = newScaleFactorY;\n+                }\n@@ -856,1 +948,2 @@\n-        if (isPreferredSizeSet() || scenePeer == null) {\n+        EmbeddedSceneInterface lScenePeer = getScenePeer();\n+        if (isPreferredSizeSet() || lScenePeer == null) {\n@@ -867,0 +960,1 @@\n+        SwingDnD lDnD = getDnD();\n@@ -869,2 +963,2 @@\n-                if (dnd != null) {\n-                    dnd.removeNotify();\n+                if (lDnD != null) {\n+                    lDnD.removeNotify();\n@@ -879,2 +973,2 @@\n-                if (dnd != null) {\n-                    dnd.addNotify();\n+                if (lDnD != null) {\n+                    lDnD.addNotify();\n@@ -889,1 +983,2 @@\n-                if (JFXPanel.this.stagePeer != null &&\n+                EmbeddedStageInterface lStagePeer = getStagePeer();\n+                if (lStagePeer != null &&\n@@ -893,1 +988,1 @@\n-                    JFXPanel.this.stagePeer.focusUngrab();\n+                    lStagePeer.focusUngrab();\n@@ -907,1 +1002,2 @@\n-                        if (JFXPanel.this.stagePeer != null) {\n+                        EmbeddedStageInterface lStagePeer = getStagePeer();\n+                        if (lStagePeer != null) {\n@@ -915,1 +1011,1 @@\n-                            JFXPanel.this.stagePeer.focusUngrab();\n+                            lStagePeer.focusUngrab();\n@@ -951,1 +1047,1 @@\n-        EmbeddedSceneInterface scene = scenePeer;\n+        EmbeddedSceneInterface scene = getScenePeer();\n@@ -972,2 +1068,4 @@\n-        pWidth = 0;\n-        pHeight = 0;\n+        synchronized(LOCK) {\n+            pWidth = 0;\n+            pHeight = 0;\n+        }\n@@ -1001,3 +1099,5 @@\n-            stagePeer = embeddedStage;\n-            if (stagePeer == null) {\n-                return;\n+            synchronized(LOCK) {\n+                stagePeer = embeddedStage;\n+                if (stagePeer == null) {\n+                    return;\n+                }\n@@ -1005,2 +1105,4 @@\n-            if (pWidth > 0 && pHeight > 0) {\n-                stagePeer.setSize(pWidth, pHeight);\n+            int lWidth = getCompWidth();\n+            int lHeight = getCompHeight();\n+            if (lWidth > 0 && lHeight > 0) {\n+                embeddedStage.setSize(lWidth, lHeight);\n@@ -1009,2 +1111,2 @@\n-                if (stagePeer != null && JFXPanel.this.isFocusOwner()) {\n-                    stagePeer.setFocused(true, AbstractEvents.FOCUSEVENT_ACTIVATED);\n+                if (JFXPanel.this.isFocusOwner()) {\n+                    embeddedStage.setFocused(true, AbstractEvents.FOCUSEVENT_ACTIVATED);\n@@ -1018,2 +1120,5 @@\n-            if (scenePeer == embeddedScene) {\n-                return;\n+            synchronized(LOCK) {\n+                if (scenePeer == embeddedScene) {\n+                    return;\n+                }\n+                scenePeer = embeddedScene;\n@@ -1021,2 +1126,1 @@\n-            scenePeer = embeddedScene;\n-            if (scenePeer == null) {\n+            if (embeddedScene == null) {\n@@ -1024,3 +1128,4 @@\n-                    if (dnd != null) {\n-                        dnd.removeNotify();\n-                        dnd = null;\n+                    SwingDnD lDnD = getDnD();\n+                    if (lDnD != null) {\n+                        lDnD.removeNotify();\n+                        lDnD = null;\n@@ -1028,0 +1133,1 @@\n+                    setDnD(lDnD);\n@@ -1031,2 +1137,6 @@\n-            if (pWidth > 0 && pHeight > 0) {\n-                scenePeer.setSize(pWidth, pHeight);\n+            int lWidth = getCompWidth();\n+            int lHeight = getCompHeight();\n+            double lScaleFactorX = getScaleFactorX();\n+            double lScaleFactorY = getScaleFactorY();\n+            if (lWidth > 0 && lHeight > 0) {\n+                embeddedScene.setSize(lWidth, lHeight);\n@@ -1034,1 +1144,1 @@\n-            scenePeer.setPixelScaleFactors((float) scaleFactorX, (float) scaleFactorY);\n+            embeddedScene.setPixelScaleFactors((float) lScaleFactorX, (float) lScaleFactorY);\n@@ -1037,5 +1147,5 @@\n-                dnd = new SwingDnD(JFXPanel.this, scenePeer);\n-                dnd.addNotify();\n-                if (scenePeer != null) {\n-                    scenePeer.setDragStartListener(dnd.getDragStartListener());\n-                }\n+                SwingDnD lDnD = getDnD();\n+                lDnD = new SwingDnD(JFXPanel.this, embeddedScene);\n+                lDnD.addNotify();\n+                setDnD(lDnD);\n+                embeddedScene.setDragStartListener(lDnD.getDragStartListener());\n","filename":"modules\/javafx.swing\/src\/main\/java\/javafx\/embed\/swing\/JFXPanel.java","additions":192,"deletions":82,"binary":false,"changes":274,"status":"modified"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.javafx.embed.swing;\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.scene.Scene;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.CountDownLatch;\n+\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import test.util.Util;\n+\n+public class JFXPanelNPETest {\n+    private static WebView webView;\n+    private static JFrame jFrame;\n+    private static JFXPanel contentPane;\n+    private static AtomicBoolean failure;\n+    \/\/ Used to launch the application before running any test\n+    private static final CountDownLatch launchLatch = new CountDownLatch(1);\n+\n+    \/\/ Application class. An instance is created and initialized before running\n+    \/\/ the first test, and it lives through the execution of all tests.\n+    public static class MyApp extends Application {\n+        @Override\n+        public void start(Stage primaryStage) throws Exception {\n+            Platform.setImplicitExit(false);\n+            Assert.assertTrue(Platform.isFxApplicationThread());\n+            Assert.assertNotNull(primaryStage);\n+\n+            launchLatch.countDown();\n+        }\n+    }\n+\n+    @BeforeClass\n+    public static void doSetupOnce() throws Exception {\n+        Util.launch(launchLatch, MyApp.class);\n+        Assert.assertEquals(0, launchLatch.getCount());\n+    }\n+\n+    @AfterClass\n+    public static void doTeardownOnce() {\n+        Util.shutdown();\n+    }\n+\n+    @After\n+    public void doCleanup() {\n+        if (jFrame != null) {\n+            SwingUtilities.invokeLater(() -> jFrame.dispose());\n+        }\n+    }\n+\n+    @Test\n+    public void testSceneNPE() throws Exception {\n+        failure = new AtomicBoolean(false);\n+        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n+            @Override\n+            public void uncaughtException(Thread t, Throwable e) {\n+                e.printStackTrace();\n+                failure.set(true);\n+            }\n+        });\n+        SwingUtilities.invokeAndWait(JFXPanelNPETest::createUI);\n+        for (int i = 0; i < 300; i++) {\n+            SwingUtilities.invokeLater(contentPane::repaint);\n+            Platform.runLater(() -> contentPane.setScene(null));\n+            Thread.sleep(100);\n+            Platform.runLater(() -> contentPane.setScene(webView.getScene()));\n+            Thread.sleep(100);\n+        }\n+        System.out.println(\"failure = \" + failure.get());\n+        Assert.assertFalse(failure.get());\n+    }\n+\n+    protected static void createUI() {\n+        jFrame = new JFrame();\n+        contentPane = new JFXPanel();\n+        Platform.runLater(() -> fx(contentPane));\n+        jFrame.setContentPane(contentPane);\n+        jFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        jFrame.setSize(400,400);\n+        jFrame.setVisible(true);\n+    }\n+\n+    private static void fx(final JFXPanel contentPane) {\n+        webView = new WebView();\n+        final var engine = webView.getEngine();\n+        engine.loadContent(\"hello!\");\n+        contentPane.setScene(new Scene(webView));\n+    }\n+}\n+\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/embed\/swing\/JFXPanelNPETest.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"}]}