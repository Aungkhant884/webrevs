{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.awt.Desktop;\n@@ -139,1 +138,2 @@\n-                    Desktop.getDesktop().browse(URI.create(uri));\n+                    Runtime.getRuntime().exec(\n+                            \"open \" + uri);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/HostServicesDelegate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.geometry.Insets;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.stage.Stage;\n+\n+public class HostServicesShowDocumentTest extends Application {\n+\n+    private final static String testHtmlUri = new File(\"test.html\").toURI().toString();\n+    private final static String testTxtUri  = new File(\"test.txt\").toURI().toString();\n+    private final static String testCsvUri  = new File(\"test.csv\").toURI().toString();\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        VBox instructions =  new VBox(\n+            new Label(\" This test can open and show three different document types (test.html, test.txt, test.csv)\"),\n+            new Label(\" via the platform default application registered for the respective types.\"),\n+            new Label(\"\"),\n+            new Label(\" STEPS:\"),\n+            new Label(\"  1. Click on all the buttons for the file types.\"),\n+            new Label(\"  2. Check whether the corresponding document is shown.\"),\n+            new Label(\"  3. When all three documents are shown press Pass, otherwise press Fail.\"));\n+\n+        Button showHtmlButton = new Button(\"HTML\");\n+        showHtmlButton.setOnAction(e -> {\n+            this.getHostServices().showDocument(testHtmlUri);\n+        });\n+\n+        Button showTxtButton = new Button(\"TXT\");\n+        showTxtButton.setOnAction(e -> {\n+            this.getHostServices().showDocument(testTxtUri);\n+        });\n+\n+        Button showCsvButton = new Button(\"CSV\");\n+        showCsvButton.setOnAction(e -> {\n+            this.getHostServices().showDocument(testCsvUri);\n+        });\n+\n+        Button passButton = new Button(\"Pass\");\n+        passButton.setOnAction(e -> {\n+            Platform.exit();\n+        });\n+\n+        Button failButton = new Button(\"Fail\");\n+        failButton.setOnAction(e -> {\n+            Platform.exit();\n+            throw new AssertionError(\"Documents could not be shown.\");\n+        });\n+\n+        HBox testButtons = new HBox(20, showHtmlButton, showTxtButton, showCsvButton);\n+        testButtons.setPadding(new Insets(10));\n+        HBox resultButtons = new HBox(20, passButton, failButton);\n+        resultButtons.setPadding(new Insets(10));\n+        VBox rootNode = new VBox(20, new HBox(instructions), testButtons, resultButtons);\n+        rootNode.setPadding(new Insets(10));\n+        Scene scene = new Scene(rootNode, 1000, 450);\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+}\n","filename":"tests\/manual\/desktop\/HostServicesShowDocumentTest.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+aaa, bbb, ccc\n+1, 2, 3\n+11, 22, 33\n","filename":"tests\/manual\/desktop\/test.csv","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,9 @@\n+<!DOCTYPE html>\n+<html>\n+    <head>\n+        <title>HTML Test<\/title>\n+    <\/head>\n+    <body>\n+        <p>Test page for HostServices.showDocument.<\/p>\n+    <\/body>\n+<\/html>\n","filename":"tests\/manual\/desktop\/test.html","additions":9,"deletions":0,"binary":false,"changes":9,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+TXT Test\n+Test page for HostServices.showDocument.\n\\ No newline at end of file\n","filename":"tests\/manual\/desktop\/test.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}