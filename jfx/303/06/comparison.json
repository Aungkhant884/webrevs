{"files":[{"patch":"@@ -4,1 +4,1 @@\n-OpenJFX is an open source project and we love to receive contributions from our community &mdash; you! There are many ways to contribute, from improving the documentation, submitting bug reports and feature requests or writing code which can be incorporated into OpenJFX itself.\n+OpenJFX is an open source project and we love to receive contributions from our community &mdash; you! There are many ways to contribute, from improving the documentation, submitting bug reports and feature requests, or writing code which can be incorporated into OpenJFX itself.\n@@ -9,1 +9,1 @@\n-If you think you have found a bug in OpenJFX, first make sure that you are testing against the latest version - your issue may already have been fixed. If not, search our [issues list](https:\/\/bugs.openjdk.java.net) in the Java Bug System (JBS) in case a similar issue has already been opened. More information on where and how to report a bug can be found at [bugreport.java.com](https:\/\/bugreport.java.com\/).\n+If you think you have found a bug in OpenJFX, first make sure that you are testing against the latest version - your issue may already have been fixed. If not, search our [issues list](https:\/\/bugs.openjdk.java.net\/issues\/?filter=39543) in the Java Bug System (JBS) in case a similar issue has already been opened. More information on where and how to report a bug can be found at [bugreport.java.com](https:\/\/bugreport.java.com\/).\n@@ -18,2 +18,2 @@\n-If you find yourself wishing for a feature that doesn't exist in OpenJFX, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that OpenJFX has today have been added because our users saw the need.\n-Open an issue on our [issues list](https:\/\/bugs.openjdk.java.net) on JBS which describes the feature you would like to see, why you need it, and how it should work.\n+All new feature requests, including any API changes, need prior discussion on the [openjfx-dev](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/openjfx-dev) mailing list, even if there is already an open\n+[JBS issue](https:\/\/bugs.openjdk.java.net). See the [New features \/ API additions](#new-features--api-additions) section at the end of this guide for more information.\n@@ -24,1 +24,1 @@\n-If you have a bug fix or new feature that you would like to contribute to OpenJFX, please find or open an issue about it first. Talk about what you would like to do. It may be that somebody is already working on it, or that there are particular issues that you should know about before implementing the change. Feature requests, in particular, should be discussed ahead of time and will require significant effort on your part.\n+If you have a bug fix or new feature that you would like to contribute to OpenJFX, please talk about what you would like to do on the [openjfx-dev](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/openjfx-dev) mailing list. It may be that somebody is already working on it, or that there are particular issues that you should know about before implementing the change.\n@@ -48,1 +48,1 @@\n-    Please read the entire section below on how to submit a pull request, as well as the [OpenJFX Code Review Policies](https:\/\/wiki.openjdk.java.net\/display\/OpenJFX\/Code+Reviews). If this is a feature request, please note the additional requirements and expectations in the [New features \/ API additions](https:\/\/wiki.openjdk.java.net\/display\/OpenJFX\/Code+Reviews#CodeReviews-NewFeaturesC.Newfeatures\/APIadditions.) section of the Code Review Policies doc.\n+    Please read the entire section below on how to submit a pull request, as well as the [OpenJFX Code Review Policies](https:\/\/wiki.openjdk.java.net\/display\/OpenJFX\/Code+Reviews). If this is a feature request, please note the additional requirements and expectations in the [New features \/ API additions](#new-features--api-additions) section at the end of this guide.\n@@ -57,1 +57,1 @@\n-TIP: A GitHub pull request (PR) should not be the first time we hear about your proposed change to OpenJFX. Unless clearly identified as experimental or work-in-progress (WIP), we will usually close a pull request that isn't associated with an existing bug report. Reading the policies below will help you in getting your change approved.\n+TIP: A GitHub pull request (PR) should not be the first time we hear about your proposed change to OpenJFX. Unless clearly identified as a `Draft` or work-in-progress (WIP), as described in the following section, we will usually close a pull request that isn't associated with an existing bug report. Reading the policies below will help you in getting your change approved.\n@@ -65,1 +65,1 @@\n-    Run the test suite to make sure that nothing is broken.\n+    Run the test suite to make sure that nothing is broken. For most code changes, you need to provide new tests covering those changes. At least one of the new tests should fail before your proposed fix and pass after your proposed fix.\n@@ -77,1 +77,3 @@\n-    and finally the bug title as taken from JBS. You should include\n+    and finally the bug title as taken from JBS. This title should _exactly_ match\n+    the JBS bug, else the Skara bot will warn about the mismatch.\n+    You should include\n@@ -88,1 +90,2 @@\n-    [openjfx-dev](mailto:openjfx-dev@openjdk.java.net) mailing list.\n+    [openjfx-dev](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/openjfx-dev) mailing list.\n+    The Skara bot will also cross-link the JBS Issue and the pull request.\n@@ -93,1 +96,1 @@\n-    TIP: prefix the pull request title with `WIP:` if you aren't yet\n+    TIP: Create a `Draft` pull request or prefix the pull request title with `WIP:` if you aren't yet\n@@ -95,7 +98,1 @@\n-    email unless the title starts with a 7-digit bug ID.\n-\n-    Please cross-link the JBS Issue and the pull request. A link to the\n-    JBS issue can be added as part of the pull request's Description. A\n-    link to the PR, can be added as an issue link in the JBS bug. If\n-    you don't have direct JBS access, one of the Project Committers or\n-    Authors will do this for you.\n+    email unless the PR is out of the `Draft` state and the title starts with a 7-digit bug ID.\n@@ -114,0 +111,2 @@\n+    See the [GitHub Help Documentation](https:\/\/docs.github.com\/en\/github)\n+    for additional help on using Git and GitHub.\n@@ -120,1 +119,1 @@\n-    will integrate the change to ensure that the code review policies\n+    will integrate or sponsor the change to ensure that the code review policies\n@@ -140,5 +139,10 @@\n-    NOTE: while the Skara tooling will indicate that the PR is\n-    ready to integrate once the first reviewer with a \"Reviewer\" role\n-    in the project has approved it, this may or may not be sufficient\n-    depending on the type of fix. For example, you must wait for a second\n-    approval for enhancements or high-impact bug fixes.\n+    NOTE: A Reviewer in the project can set the minimum number of reviewers\n+    for a PR using the Skara `\/reviewers` command. For example,\n+    `\/reviewers 2` is used for high-impact fixes and enhancements to indicate\n+    that two reviewers are needed, at least one of whom needs to have the\n+    Reviewer role in the project.\n+\n+    NOTE: A reviewer can indicate that a PR needs a\n+    [CSR](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) by\n+    entering the `\/csr` command. The Skara bot will then require an approved\n+    CSR before the PR can be integrated.\n@@ -164,24 +168,42 @@\n-\n-6. Resolve the JBS bug as \"Fixed\"\n-\n-    There is currently no automation for resolving JBS bugs, although\n-    a future Skara improvement will automate this. Until then,\n-    the Committer who integrated or sponsored the fix is responsible for\n-    resolving the JBS issue. You do this with the \"Resolve\" action in JBS,\n-    selecting \"Fixed\" as the resolution. You also need to add the commit\n-    notification message (minus the list of modified files) as a comment.\n-    This includes the URL of the commit. For example:\n-\n-    ```\n-    Changeset: 1de25a49\n-    Author:    Kevin Rushforth <kcr@openjdk.org>\n-    Date:      2019-09-23 08:15:36 +7000\n-    URL:       https:\/\/git.openjdk.java.net\/jfx\/commit\/1de25a49\n-\n-    8231126: libxslt.md has incorrect version string\n-\n-    Reviewed-by: ghb\n-    ```\n-\n-\n-Contributing to the OpenJFX codebase\n+    The Skara bot will automatically resolve the JBS issue as \"Fixed\"\n+    so there is no need to manually resolve it.\n+\n+\n+New features \/ API additions\n+----------------------------\n+\n+Adding a new feature to OpenJFX requires us to consider what it means to support that API forever; we take compatibility seriously.\n+The main idea is to think in terms of \"stewardship\" when evolving the JavaFX API. This will require significant effort on your part.\n+It begins before you submit a pull request for review, and continues after the new feature is integrated.\n+With that in mind, here are the needed steps to get a new feature into JavaFX.\n+\n+1. Discuss the proposed feature on the [openjfx-dev](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/openjfx-dev) mailing list.\n+You should start with _why_ you think\n+adding the API to the core of JavaFX is a good and useful addition for multiple applications (not just your own)\n+and for the evolution of the JavaFX UI Toolkit. Part of this is to see whether the Project Leads and Reviewers\n+are generally supportive of the idea, as well as to see whether other developers have any ideas as to whether\n+and how it would be useful in their applications. We want to make sure that the new feature fits in with the\n+existing API and will move the API forward in a direction we want to go. We need to ensure that the value\n+proposition of the new feature justifies the investment, which goes well beyond the initial cost of developing it.\n+Presuming that the feature meets the cost \/ benefit assessment (including opportunity cost), then discussion can\n+proceed to the API.\n+\n+2. Discuss the API needed to provide the feature. While this can't always be completely separated from its\n+implementation, it is the public API itself that is important to nail down and get right. While we don't currently\n+use the formal JEP process as is done for larger JDK features, the [JEP template](http:\/\/openjdk.java.net\/jeps\/2)\n+provides some ideas to consider when proposing an API, such as a summary of the changes, goals, motivation, testing,\n+dependencies, etc. A Draft (or WIP) pull request can be useful for illustrative purposes as long as the focus is on the public API.\n+If there are trade-offs to be made in the implementation, or different implementation approaches that you might take,\n+this is a good time to discuss it. Once this step is far enough along that there is general agreement as to the API,\n+then it's time to focus on the implementation.\n+\n+3. Submit a review of your proposed implementation. As noted in the\n+[New features \/ API additions](https:\/\/wiki.openjdk.java.net\/display\/OpenJFX\/Code+Reviews#CodeReviews-NewFeaturesC.Newfeatures\/APIadditions.)\n+section of the Code Review Policies doc, we also need a [CSR](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main), which documents the API change and its approval.\n+The CSR can be reviewed in parallel. Changes in the API that arise during the review need to be reflected in the CSR, meaning\n+that the final review \/ approval of the CSR usually happens late in the review cycle.\n+\n+TIP: a pull request is _not_ the starting point, since that skips the first two important steps and jumps right into\n+\"given this new feature, and an API definition that specifies it, please review my proposed implementation\".\n+\n+Coding style and testing guidelines\n@@ -190,7 +212,0 @@\n-JDK 11 (at a minimum) is required to build OpenJFX. You must have a JDK 11 installation\n-with the environment variable `JAVA_HOME` referencing the path to Java home for\n-your JDK 11 installation. By default, tests use the same runtime as `JAVA_HOME`.\n-Currently OpenJFX builds are running on JDK 11 (recommended) and JDK 12.\n-\n-It is possible to develop in any major Java IDE (Eclipse, IntelliJ, NetBeans). IDEs can automatically configure projects based on Gradle setup.\n-\n@@ -200,1 +215,1 @@\n-* Use Unix-style (LF) line endings not DOS-style (CRLF)\n+* Use Unix-style (LF) line endings, not DOS-style (CRLF)\n@@ -210,2 +225,3 @@\n-* Disable &ldquo;auto-format on save&rdquo; to prevent unnecessary format changes. This makes reviews much harder as it generates unnecessary formatting changes. If your IDE supports formatting only modified chunks that is fine to do.\n-* Wildcard imports (`import foo.bar.baz.*`) are forbidden and may cause the build to fail. Please attempt to tame your IDE so it doesn't make them and please send a PR against this document with instructions for your IDE if it doesn't contain them.\n+* Avoid making changes that are unrelated to the bug you are fixing. This includes fixing minor errors such as warnings, spacing \/ indentation, spelling errors, etc, in code that you aren't otherwise modifying as part of your fix.\n+* Disable &ldquo;auto-format on save&rdquo; to prevent your IDE from making unnecessary formatting changes. This makes reviews much harder as it generates unnecessary diffs. If your IDE supports formatting only modified chunks, that is fine to do.\n+* Wildcard imports &ndash; for example, `import java.util.*;` &ndash; are forbidden and may cause the build to fail. Please attempt to configure your IDE so it doesn't generate wildcard imports. An exception to this rule is that wildcard static imports in test classes are allowed, for example, `import static org.junit.Assert.*;`.\n@@ -214,0 +230,10 @@\n+### Building and testing\n+\n+JDK 11 (at a minimum) is required to build OpenJFX. You must have the JDK\n+installed on your system\n+with the environment variable `JAVA_HOME` referencing the path to Java home for\n+your JDK installation. By default, tests use the same runtime as `JAVA_HOME`.\n+Currently OpenJFX will build and run on JDK 11 through JDK 18. JDK 17 is recommended.\n+\n+It is possible to develop in any major Java IDE (Eclipse, IntelliJ, NetBeans). IDEs can automatically configure projects based on Gradle setup.\n+\n@@ -226,0 +252,2 @@\n+If you don't build WebKit (using the `-PCOMPILE_WEBKIT=true` option), you are likely to get test failures when running the web tests. See the [Web Testing](WEBKIT-MEDIA-STUBS.md) page for information on how to address this.\n+\n","filename":"CONTRIBUTING.md","additions":86,"deletions":58,"binary":false,"changes":144,"status":"modified"}]}