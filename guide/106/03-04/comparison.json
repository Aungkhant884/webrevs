{"files":[{"patch":"@@ -10,1 +10,1 @@\n-Development of the latest version of the JDK often results in bug fixes that might be interesting to include in some of the JDK update releases still being maintained. Moving a fix from a more recent release train (e.g. JDK 17) to an older release train (e.g. JDK 11) is called *backporting*.\n+Development of the latest version of the JDK often results in bug fixes that might be interesting to include in some of the JDK update releases still being maintained. Moving a fix from a more recent release train (e.g. JDK 21) to an older release train (e.g. JDK 17) is called *backporting*.\n@@ -39,1 +39,1 @@\n-There can be cases where it's desirable to create a backport issue before the fix is done, e.g. if a CSR needs to be filed. In these cases set the [Fix Version\/s]{.jbs-field} of the backport to `N-pool`, where `N` is the release train the backport is targeting. E.g. `17-pool`. Please note that even if a backport issue is created ahead of time, all work done in JBS for approvals and similar is still done in the main issue.\n+There can be cases where it's desirable to create a backport issue before the fix is done, e.g. if a CSR needs to be filed. In these cases set the [Fix Version\/s]{.jbs-field} of the backport to `N` or `N-pool`, where `N` is the release train the backport is targeting. E.g. `17-pool`. Please note that even if a backport issue is created ahead of time, all work done in JBS for approvals and similar is still done in the main issue.\n@@ -41,1 +41,1 @@\n-Obviously it's possible to set the [Fix Version\/s]{.jbs-field} to the exact release the backport is targeting, but in general this isn't recommended unless you are targeting a feature release in rampdown. When a change is pushed to an update release repository, the bots will look at the main issue as indicated in the PR title, and look for backports with the current `N.0.x` release version as [Fix Version\/s]{.jbs-field}, if no such backport is found they will look for `N-pool`, and if that isn't found either, a new backport issue will be created. This means that if the backport has an exact [Fix Version\/s]{.jbs-field} set, but is delayed and misses the release indicated by this [Fix Version\/s]{.jbs-field}, a new backport issue is created with a small mess as the result.\n+Obviously it's possible to set the [Fix Version\/s]{.jbs-field} to the exact release the backport is targeting, but in general this isn't recommended unless you are targeting a feature release in rampdown. When a change is pushed to an update release repository, the bots will look at the main issue as indicated in the PR title, and look for backports with the current `N.0.x` release version as [Fix Version\/s]{.jbs-field}, if no such backport is found they will look for `N-pool`, and if that isn't found either, a new backport issue will be created. This means that if the backport has an exact [Fix Version\/s]{.jbs-field} set, but is delayed and misses the release indicated by this [Fix Version\/s]{.jbs-field}, a new backport issue is created with a small mess as the result. (See [How to fix an incorrect backport creation in JBS](#how-to-fix-an-incorrect-backport-creation-in-jbs).)\n@@ -57,1 +57,1 @@\n-If a main bug is targeted to a release and a fix referring to that main bug is pushed to a different release, then a backport bug is automatically created in JBS. Usually this is a \"good thing\", e.g., when you are backporting a fix to an earlier release, but not always... If the main bug is targeted to a later release (due to schedule planning), but someone finds the time to fix that bug in the current release, then the bug should be retargeted to the current release before pushing the fix. However, sometimes we forget to do that.\n+If an issue is targeted to a release and a fix referring to that issue is pushed to a different release repository, then a backport issue is automatically created in JBS. Usually this is a \"good thing\", e.g., when you are backporting a fix to an earlier release, but not always... If the main issue is targeted to a later release (due to schedule planning) but someone finds the time to fix that issue in the current release, or if the main issue is targeted to a feature release in rampdown and the fix is pushed to the mainline repository, then the issue should be retargeted to the correct release before pushing the fix. However, sometimes we forget to do that.\n@@ -63,1 +63,1 @@\n-> In this example a fix was pushed to JDK N (a.k.a. the current release) while the JBS bug was targeted to JDK N+1 (a.k.a. a future release). The same procedure can be used in the opposite situation, when a fix has been pushed to JDK N+1 when the JBS bug was targeted to JDK N, by switching N and N+1 below. Remember, to keep the record clean for the future, what matters the most is that the **bug id used in the commit comment is the main bug**, and that **the \"backports\"** (regardless of if they are to earlier or later releases) **are Backport type issues of that main issue**. Also make sure there are never more than one Backport issue targeted to any given release.\n+> In this example a fix was pushed to JDK N+1 (the mainline repository) while the JBS bug was targeted to JDK N (a feature release in rampdown). The same procedure can be used in the opposite situation, when a fix has been pushed to JDK N when the JBS bug was targeted to JDK N+1, by switching N and N+1 below. Remember, to keep the record clean for the future, what matters the most is that the **bug id used in the commit comment is the main bug**, and that **the \"backports\"** (regardless of if they are to earlier or later releases) **are Backport type issues of that main issue**. Also make sure there are never more than one Backport issue of the same main issue targeted to any given release.\n@@ -67,1 +67,1 @@\n-#. Reopen the _backport_ bug that was created automatically\n+#. Reopen the _backport_ issue that was created automatically\n@@ -70,1 +70,1 @@\n-Fix was pushed while main bug was targeted to 'N+1'. Reset the main bug to fixed in 'N', reset this bug to fix in 'na' and closed as 'Not An Issue' since JDK N+1 will automatically get this fix from JDK N later.\n+Fix was pushed while main issue was targeted to 'N'. Reset the main issue to fixed in 'N+1', reset this issue to fix in 'na' and closed as [Not An Issue]{.jbs-value} to avoid confusion.\n@@ -72,2 +72,2 @@\n-   * Change the [Fix Version\/s]{.jbs-field} from 'N' to 'na'.\n-   * Close the _backport_ bug as \"Not an Issue\".\n+   * Change the [Fix Version\/s]{.jbs-field} from 'N+1' to 'na'.\n+   * Close the _backport_ issue as [Not an Issue]{.jbs-value}. Note: [Closed]{.jbs-value}, **not** [Resolved]{.jbs-value}\n@@ -75,2 +75,4 @@\n-#. Clean up the _main_ bug\n-   * Copy the push notification comment from the _backport_ bug to the _main_ bug, e.g.:\n+   Even if you intend to backport the issue from 'N+1' to 'N' you shouldn't reuse this backport issue. The existing (bad) push notification comment and the later to be added correct push notification comment will look very similar and it's just a disaster waiting to happen to deliberately add these to the same issue.\n+\n+#. Clean up the _main_ issue\n+   * Copy the push notification comment from the _backport_ issue to the _main_ issue, e.g.:\n@@ -83,1 +85,1 @@\n-   * Add a comment like the following to the _main_ bug:\n+   * Add a comment like the following to the _main_ issue:\n@@ -85,1 +87,1 @@\n-Fix was pushed while main bug was targeted to 'N+1'. Reset the main bug to fixed in 'N' and copied the Robo Duke entry here.\n+Fix was pushed while main issue was targeted to 'N'. Reset the main issue to fixed in 'N+1' and copied the Robo Duke entry here.\n@@ -87,2 +89,2 @@\n-   * Reset the _main_ bug [Fix Version\/s]{.jbs-field} from 'N+1' to 'N'.\n-   * Resolve the _main_ bug as \"Fixed\" in build \"team\" or in build \"master\" depending on where the fix was pushed - or to an actual build number if the change has already made it to a promoted build (look in the _backport_ bug if you are unsure). Pushes to 'openjdk\/jdk' are fixed in build \"master\" and pushes to project repositories are fixed in build \"team\".\n+   * Reset the _main_ issue [Fix Version\/s]{.jbs-field} from 'N' to 'N+1'.\n+   * Resolve the _main_ issue as [Fixed]{.jbs-value} in build \"team\" or in build \"master\" depending on where the fix was pushed - or to an actual build number if the change has already made it to a promoted build (look in the _backport_ issue if you are unsure). Pushes to 'openjdk\/jdk' are fixed in build \"master\" and pushes to project repositories are fixed in build \"team\".\n","filename":"src\/guide\/backporting.md","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"}]}