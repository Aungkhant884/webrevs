{"files":[{"patch":"@@ -1478,1 +1478,1 @@\n-Over time it's likely that the code base will diverge between mainline and any given update release, and the cost of backporting will increase. The cost in this case is not only the effort needed to perform the actual backport, but also the cost inferred by bugs introduced by the backport. This should be taken into consideration when deciding if a change should be backported or not. For more details on how to reson around what to backport, [this email from JDK 8 Updates Project lead Andrew Haley](https:\/\/mail.openjdk.java.net\/pipermail\/jdk8u-dev\/2020-June\/012002.html) has some guidelines for JDK 8u. The reasoning in this mail is specific to JDK 8u, but will in general apply to any JDK release in maintenance mode.\n+Over time it's likely that the code base will diverge between mainline and any given update release, and the cost of backporting will increase. The cost in this case is not only the effort needed to perform the actual backport, but also the cost inferred by bugs introduced by the backport. This should be taken into consideration when deciding if a change should be backported or not. For more details on how to reason around what to backport, [this email from JDK 8 Updates Project lead Andrew Haley](https:\/\/mail.openjdk.java.net\/pipermail\/jdk8u-dev\/2020-June\/012002.html) has some guidelines for JDK 8u. The reasoning in this mail is specific to JDK 8u, but will in general apply to any JDK release in maintenance mode.\n@@ -1492,1 +1492,1 @@\n-There can be cases where it is motivated to create a backport issue before the fix is done. In these cases set the fix version of the backport to `N-pool`, where `N` is the release train the backport is targeting. E.g. `17-pool`. Please note that even if a backport issue is created ahead of time, all work done in JBS is still done in the main issue.\n+There can be cases where it's desirable to create a backport issue before the fix is done, e.g. if a CSR needs to be filed. In these cases set the fix version of the backport to `N-pool`, where `N` is the release train the backport is targeting. E.g. `17-pool`. Please note that even if a backport issue is created ahead of time, all work done in JBS is still done in the main issue.\n@@ -1500,1 +1500,3 @@\n-In order to be allowed to push a change to one of the OpenJDK Update Release repositories, an approval is required. The [official process for how to request push approval for a backport](https:\/\/openjdk.java.net\/projects\/jdk-updates\/approval.html) describes in detail how to work with JBS when requesting approvals. In short, there's a label `jdk<release>u-fix-request` that should be added to the main JBS issue. Also put a motivation as to why the issue needs to be backported as a comment in the main issue. Once the label and motivation has been added, wait for the maintainers of the release to approve your request. The approval will be indicated with a label, `jdk<release>u-fix-yes`, added to the main issue.\n+In order to be allowed to push a change to one of the OpenJDK update development repositories (e.g. [`jdk17u-dev`](https:\/\/github.com\/openjdk\/jdk17u-dev)), an approval is required. The [official process for how to request push approval for a backport](https:\/\/openjdk.java.net\/projects\/jdk-updates\/approval.html) describes in detail how to work with JBS when requesting approvals. In short, there's a label `jdk<release>u-fix-request` that should be added to the main JBS issue. Also put a motivation as to why the issue needs to be backported as a comment in the main issue. Once the label and motivation has been added, wait for the maintainers of the release to approve your request. The approval will be indicated with a label, `jdk<release>u-fix-yes`, added to the main issue.\n+\n+If the update release is in rampdown, changes are pushed to the release repository (e.g. [`jdk17u`](https:\/\/github.com\/openjdk\/jdk17u)). During rampdown the bar to get changes in are significantly higher and fixes need to be approved with `jdk<release>u-critical-request` \/ `jdk<release>u-critical-yes`.\n@@ -1504,1 +1506,1 @@\n-The Skara tooling includes support for backports. [The official Skara documentation](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Backports) describes in detail how to work with the tooling to create backport PRs on GitHub or using the CLI tools. As described in the documentation, the [`\/backport`](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Commit+Commands#CommitCommands-\/backport) command can be used on a commit (not a PR!) to create the backport PR. If a backport PR is manually created, set the title to `Backport <original commit hash>`.\n+The Skara tooling includes support for backports. [The official Skara documentation](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Backports) describes in detail how to work with the tooling to create backport PRs on GitHub or using the CLI tools. As described in the documentation, the [`\/backport`](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Commit+Commands#CommitCommands-\/backport) command can be used on a commit (not a PR!) to create the backport PR. If a backport PR is manually created, set the PR title to `Backport <original commit hash>`. This ensures that the bots will recognize it as a backport as opposed to a main fix specifically targeting an older release. One can tell whether or not the bots recognized a PR as a backport by the `backport` label being added if it's recognized.\n","filename":"src\/index.md","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}