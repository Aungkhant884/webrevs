{"files":[{"patch":"@@ -19,1 +19,1 @@\n-    margin-top: 1em;\n+    margin-top: 2em;\n","filename":"src\/guidestyle.css","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-The OpenJDK code base for all [Projects](https:\/\/openjdk.java.net\/bylaws#_6) is stored in Mercurial repositories which contain the source files and their change history. Some Projects may choose to organize their code into multiple, possibly related, Mercurial repositories. For instance, [JDK 9](https:\/\/openjdk.java.net\/projects\/jdk9) uses a forest of multiple related repositories which contain components of the entire JDK. Projects which are based on the JDK, such as [IcedTea](https:\/\/openjdk.java.net\/projects\/icedtea) and [Jigsaw](https:\/\/openjdk.java.net\/projects\/jigsaw) also use this model. In contrast, [Code Tools](https:\/\/openjdk.java.net\/projects\/code-tools) uses an unrelated repository for each tool and [Graal](https:\/\/openjdk.java.net\/projects\/graal) uses only a single repository. Regardless of how a Project has chosen to store their code, each [Contributor](https:\/\/openjdk.java.net\/bylaws#contributor) clones the repository associated with the code they are modifying.\n+The OpenJDK code base for all [Projects](https:\/\/openjdk.java.net\/bylaws#project) is stored in Mercurial repositories which contain the source files and their change history. Some Projects may choose to organize their code into multiple, possibly related, Mercurial repositories. For instance, [JDK 9](https:\/\/openjdk.java.net\/projects\/jdk9) uses a forest of multiple related repositories which contain components of the entire JDK. Projects which are based on the JDK, such as [IcedTea](https:\/\/openjdk.java.net\/projects\/icedtea) and [Jigsaw](https:\/\/openjdk.java.net\/projects\/jigsaw) also use this model. In contrast, [Code Tools](https:\/\/openjdk.java.net\/projects\/code-tools) uses an unrelated repository for each tool and [Graal](https:\/\/openjdk.java.net\/projects\/graal) uses only a single repository. Regardless of how a Project has chosen to store their code, each [Contributor](https:\/\/openjdk.java.net\/bylaws#contributor) clones the repository associated with the code they are modifying.\n@@ -61,1 +61,1 @@\n-> _project_            ::   the short name of an OpenJDK [Project](https:\/\/openjdk.java.net\/bylaws#_6) such as \"jdk9\", \"openjfx\", or \"sumatra\"\n+> _project_            ::   the short name of an OpenJDK [Project](https:\/\/openjdk.java.net\/bylaws#project) such as \"jdk9\", \"openjfx\", or \"sumatra\"\n@@ -76,1 +76,1 @@\n-_openjdk\\_username_ is a plain lowercase, alphanumeric token (not an e-mail address) with twelve characters or less. The first character should be alphabetic. This username will be publicly visible in all Mercurial changeset logs. It will be used to verify that the changeset author is at least an [Author](https:\/\/openjdk.java.net\/bylaws#author) for the Project and that the person pushing the changeset is at least a [Committer](https:\/\/openjdk.java.net\/bylaws#committer). It is recommended that the _openjdk\\_username_ be somehow related to the Author's full name, such as the first character of the Author's first name followed by the Author's last name. Refer to the [Becoming an Author](..\/projects\/index.html#project-author) section of the [Project](..\/projects\/index.html) page for additional information.\n+_openjdk\\_username_ is a plain lowercase, alphanumeric token (not an e-mail address) with twelve characters or less. The first character should be alphabetic. This username will be publicly visible in all Mercurial changeset logs. It will be used to verify that the changeset author is at least an [Author](https:\/\/openjdk.java.net\/bylaws#author) for the Project and that the person pushing the changeset is at least a [Committer](https:\/\/openjdk.java.net\/bylaws#committer). It is recommended that the _openjdk\\_username_ be somehow related to the Author's full name, such as the first character of the Author's first name followed by the Author's last name. Refer to the [Becoming an Author](https:\/\/openjdk.java.net\/projects\/index.html#project-author) section of the [Project](https:\/\/openjdk.java.net\/projects\/index.html) page for additional information.\n@@ -78,1 +78,1 @@\n-An alphabetical list of all of the assigned _openjdk\\_usernames_ may be found on the [OpenJDK people](https:\/\/db.openjdk.java.net\/people) list. The [Census](..\/census) shows the structure of the OpenJDK Community.\n+An alphabetical list of all of the assigned _openjdk\\_usernames_ may be found on the [OpenJDK people](https:\/\/db.openjdk.java.net\/people) list. The [Census](https:\/\/openjdk.java.net\/census) shows the structure of the OpenJDK Community.\n@@ -178,1 +178,1 @@\n-The mailing lists are the key communications mechanism for all OpenJDK work. All participation in an OpenJDK project starts with joining the relevant mailing list. A subscriber to an OpenJDK mailing list is referred to as a Participant in the [Bylaws](https:\/\/openjdk.java.net\/bylaws). As a general recommendation we suggest to subscribe to [announce](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/announce), [discuss](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/discuss), and the `-dev` lists covering your explicit area of interest. All OpenJDK mailing lists are found here:\n+The mailing lists are the key communications mechanism for all OpenJDK work. All participation in an OpenJDK project starts with joining the relevant mailing list. A subscriber to an OpenJDK mailing list is referred to as a [Participant](https:\/\/openjdk.java.net\/bylaws#participant) in the [Bylaws](https:\/\/openjdk.java.net\/bylaws). As a general recommendation we suggest to subscribe to [announce](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/announce), [discuss](https:\/\/mail.openjdk.java.net\/mailman\/listinfo\/discuss), and the `-dev` lists covering your explicit area of interest. All OpenJDK mailing lists are found here:\n@@ -218,1 +218,1 @@\n-This section describes the development process of identifying a bug or enhancement (formerly \"Request for Enhancement\" (RFE)) and providing a solution. The instructions assume that the [Contributor](\/bylaws#contributor) already has a working build environment and has some familiarity with an existing OpenJDK [Project](bylaws#_6) and its repositories.\n+This section describes the development process of identifying a bug or enhancement (formerly \"Request for Enhancement\" (RFE)) and providing a solution. The instructions assume that the [Contributor](https:\/\/openjdk.java.net\/bylaws#contributor) already has a working build environment and has some familiarity with an existing OpenJDK [Project](https:\/\/openjdk.java.net\/bylaws#project) and its repositories.\n@@ -225,1 +225,1 @@\n-> Some steps refer to operations which can not be performed directly without the assistance of a [Project Committer](https:\/\/openjdk.java.net\/bylaws#committer). For example, any changes to the [bug database](https:\/\/bugs.openjdk.java.net) fall into this category. Since these steps are required, [Contributors](https:\/\/openjdk.java.net\/bylaws#contributor) are urged to work with their [Sponsors](\/sponsor\/) to complete these tasks.\n+> Some steps refer to operations which can not be performed directly without the assistance of a [Project Committer](https:\/\/openjdk.java.net\/bylaws#committer). For example, any changes to the [bug database](https:\/\/bugs.openjdk.java.net) fall into this category. Since these steps are required, [Contributors](https:\/\/openjdk.java.net\/bylaws#contributor) are urged to work with their [Sponsors](https:\/\/openjdk.java.net\/sponsor\/) to complete these tasks.\n@@ -266,1 +266,1 @@\n-   :   For bugs, provide a [jtreg](..\/jtreg\/) regression test as part of the changeset. For enhancements that directly affect one or more exported interfaces, add an adequate set of jtreg unit tests as part of the changeset. By convention all regression and unit tests should contain a [\\@bug tag](https:\/\/openjdk.java.net\/jtreg\/tag-spec.html#INFORMATIONAL_TAGS9) referencing at least one bugid.\n+   :   For bugs, provide a [jtreg](https:\/\/openjdk.java.net\/jtreg\/) regression test as part of the changeset. For enhancements that directly affect one or more exported interfaces, add an adequate set of jtreg unit tests as part of the changeset. By convention all regression and unit tests should contain a [\\@bug tag](https:\/\/openjdk.java.net\/jtreg\/tag-spec.html#INFORMATIONAL_TAGS9) referencing at least one bugid.\n@@ -307,1 +307,1 @@\n-   A patch can be submitted as described in [Contributing](..\/contribute\/). Alternatively, a [\"webrev\"](webrevHelp.html) may be generated and uploaded to the [community code review](https:\/\/cr.openjdk.java.net\/) server. The complete webrev generation and upload procedure is described at [https:\/\/cr.openjdk.java.net](https:\/\/cr.openjdk.java.net\/).\n+   A patch can be submitted as described in [Contributing](https:\/\/openjdk.java.net\/contribute\/). Alternatively, a [\"webrev\"](webrevHelp.html) may be generated and uploaded to the [community code review](https:\/\/cr.openjdk.java.net\/) server. The complete webrev generation and upload procedure is described at [https:\/\/cr.openjdk.java.net](https:\/\/cr.openjdk.java.net\/).\n@@ -309,1 +309,1 @@\n-   Changeset pushes before the [Feature Complete](\/projects\/jdk8\/milestones#Feature_Complete) require at least one [Reviewer](\/bylaws#reviewer); pushes after the Feature Complete require at least two Reviewers. In either case, the more the merrier. Some teams may require more Reviewers. Check with members of the Project.\n+   Changeset pushes before the [Feature Complete](https:\/\/openjdk.java.net\/projects\/jdk8\/milestones#Feature_Complete) require at least one [Reviewer](https:\/\/openjdk.java.net\/bylaws#reviewer); pushes after the Feature Complete require at least two Reviewers. In either case, the more the merrier. Some teams may require more Reviewers. Check with members of the Project.\n@@ -618,1 +618,1 @@\n-> Refer to the [Nominating a Contributor or Author to be a Committer](..\/projects\/index.html#project-committer) section of the [Project](..\/projects\/index.html) page for information about becoming a Project Committer.\n+> Refer to the [Nominating a Contributor or Author to be a Committer](https:\/\/openjdk.java.net\/projects\/index.html#project-committer) section of the [Project](https:\/\/openjdk.java.net\/projects\/index.html) page for information about becoming a Project Committer.\n@@ -628,1 +628,1 @@\n-When a new failure is found in the JDK a bug should be filed to describe and track the issue. Depending on your role in the OpenJDK you can either use the [Bug Report Tool](https:\/\/bugreport.java.com\/) or, if you are Author in an OpenJDK Project, report the bug directly in the [JDK Bug System](https:\/\/bugs.openjdk.java.net\/). Try to make the bug report as complete as possible to make it easier to triage and investigate the bug. It's not the reporter's responsibility to set a correct priority, but a qualified guess is always better than a default value. To help with setting the right priority consider things like how the bug impacts the product and our testing, how likely is it that the bug triggers, how difficult is it to work around the bug if it's not fixed soon, and whether it's a recent regression, since that may break existing applications. Regressions are often higher priority than long standing bugs and may block a release if not fixed.\n+When a new failure is found in the JDK a bug should be filed to describe and track the issue. Depending on your role in the OpenJDK you can either use the [Bug Report Tool](https:\/\/bugreport.java.com\/) or, if you are [Author](https:\/\/openjdk.java.net\/bylaws#author) in an OpenJDK [Project](https:\/\/openjdk.java.net\/bylaws#project), report the bug directly in the [JDK Bug System](https:\/\/bugs.openjdk.java.net\/). Try to make the bug report as complete as possible to make it easier to triage and investigate the bug. It's not the reporter's responsibility to set a correct priority, but a qualified guess is always better than a default value. To help with setting the right priority consider things like how the bug impacts the product and our testing, how likely is it that the bug triggers, how difficult is it to work around the bug if it's not fixed soon, and whether it's a recent regression, since that may break existing applications. Regressions are often higher priority than long standing bugs and may block a release if not fixed.\n@@ -635,1 +635,1 @@\n-* Add relevant labels like `intermittent`, `regression`, `noreg-self` etc.\n+* Add relevant labels like [`intermittent`](#intermittent), [`regression`](#regression), [`noreg-self`](#noreg-self) etc.\n@@ -749,2 +749,2 @@\n-* **Code review**: This is considered a [trivial](#trivial) change.\n-* **JBS issue**: A JBS issue is obviously created for the bug that caused the failure, we call this the _main issue_. To exclude the test, create a subtask to the main issue. Also add the label `problemlist` to the main issue.\n+* **Code review**: ProblemListing a test is considered a [trivial](#trivial) change.\n+* **JBS issue**: A JBS issue is obviously created for the bug that caused the failure, we call this the _main issue_. To exclude the test, create a subtask to the main issue. Also add the label [`problemlist`](#problemlist) to the main issue.\n@@ -826,1 +826,1 @@\n-:   A collection of [Participants](\/bylaws#participant) who engage in open conversation about a common interest. That interest may be in the creation, enhancement, or maintenance of a specific body of code or it may lie in other areas, e.g., quality, documentation, or evangelism. See the [Group overview](..\/groups\/).\n+:   A collection of [Participants](https:\/\/openjdk.java.net\/bylaws#participant) who engage in open conversation about a common interest. That interest may be in the creation, enhancement, or maintenance of a specific body of code or it may lie in other areas, e.g., quality, documentation, or evangelism. See the [Group overview](https:\/\/openjdk.java.net\/groups\/).\n@@ -832,1 +832,1 @@\n-:   A collaborative effort to produce a specific artifact, which may be a body of code, or documentation, or some other material. See the [Project overview](..\/projects\/).\n+:   A collaborative effort to produce a specific artifact, which may be a body of code, or documentation, or some other material. See the [Project overview](https:\/\/openjdk.java.net\/projects\/).\n","filename":"src\/index.md","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}