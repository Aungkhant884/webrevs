{"files":[{"patch":"@@ -680,27 +680,1 @@\n-      Used to indicate that the issue is a release note. The release-note issue is a sub-task to the main JBS issue containing the text to be used in the release note. The release note must also have one of the following labels:\n-\n-[**`RN-NewFeature`**]{#RN-NewFeature}\n-:   New Feature or enhancement.\n-\n-[**`RN-IssueFixed`**]{#RN-IssueFixed}\n-:   A significant issue which has been fixed, would normally be a regression or an issue which unknowingly released in a new feature.\n-\n-[**`RN-KnownIssue`**]{#RN-KnownIssue}\n-:   An issue that wasn't possible to fix by the time the release was GA'd.\n-\n-[**`RN-Removed`**]{#RN-Removed}\n-:   Covers an API, feature, tool etc. which has been removed from the JDK.\n-\n-[**`RN-Deprecated`**]{#RN-Deprecated}\n-:   Covers an API that has been marked as deprecated in the release.\n-\n-[**`RN-Important`**]{#RN-Important}\n-:   Used to indicate that the release note should be highlighted in some fashion, such as listing it at the beginning of the release notes.\n-\n-[**`RN-`(distro)**]{#RN-distro}\n-:   Used to indicate that the release note is only relevant for a specific JDK distribution. E.g. RN-Oracle\n-\n-[~~**`RN-Change`**~~]{#RN-Change}\n-:   Deprecated.\n-\n-<!-- Comment needed due to bug in Pandoc. -->\n+      Used to indicate that the issue is a release note. See [Release Notes](#release-notes).\n@@ -716,1 +690,1 @@\n-      Used to indicate wether a change requires a release note or not. The labels are always placed on the main JBS issue, never on the actual release note issue.\n+      Used to indicate whether a change requires a release note or not. The labels are always placed on the main JBS issue, never on the actual release note issue. See [Release Notes](#release-notes).\n@@ -721,0 +695,8 @@\n+  <tr>\n+    <td class=\"dictionary\">\n+      [**`RN-`**`.*`]{#rn}\n+    <\/td>\n+    <td class=\"dictionary\">\n+      Used to indicate what kind of change the release note is for. See [Release Notes](#release-notes).\n+    <\/td>\n+  <\/tr>\n@@ -1550,1 +1532,59 @@\n-# HotSpot development\n+# Release Notes\n+\n+::: {.box}\n+[Quick Links]{.boxheader}\n+\n+* [release-note label description](#release-note)\n+:::\n+\n+Release notes for a product (e.g. the JDK) are part of the release deliverables. They describe changes that are important for a user of the product to know about. This is usually things that may affect the user's decision to upgrade to the specific version.\n+\n+When writing a release note for your feature, be prepared for rather picky review comments about grammar, typos, and wording. This is for the sake of the Java community as a whole, as the language of the release note sets the tone for many blogs and news articles. For a widely used product like the JDK, the release notes are often copied (word by word, including typos) and published to highlight news in the release. This means that we need to take extra care to make sure the text in the release note is correct and has a professional language.\n+\n+The release note itself is written in a JBS sub-task to the issue that is used to push the change. There are a few steps to follow in order for the release note to find its way from JBS to the actual release note document.\n+\n+#. Do these steps for the main issue, that is, the JBS issue that is used to push the original change, **not** on backports or the CSR (if there is one).\n+   * Add the label `release-note=yes`.\n+   * Create a sub-task.\n+#. For the newly created sub-task do these steps:\n+   * The **Summary** should be a one sentence synopsis that is informative (and concise) enough to attract the attention of users, developers, and maintainers who might be impacted by the change. The **Summary** should succinctly describe what has actually changed, not be the original bug title, nor describe the problem that was being solved. It should read well as a sub-section heading in a document.\n+   * Prefix the **Summary** with \"Release Note:\".\n+   * Add the `release-note` label.\n+   * Add the proper `RN-`label (see below).\n+   * Add an **Assignee**.\n+   * Set the **Fix Version** to the same value that the main issue has.\n+   * Enter the text of the release note in the **Description** field using markdown formatting (even though it won't be rendered in JBS).\n+#. Ask your Reviewers to have a look at the release note.\n+#. When you are done, Resolve the release note sub-task as \"Delivered\".\n+\n+## RN-labels\n+\n+The RN-label is used to indicate what kind of change the release note is for. All release note sub-tasks must have at least one of these labels.\n+\n+[**`RN-NewFeature`**]{#RN-NewFeature}\n+:   New Feature or enhancement.\n+\n+[**`RN-IssueFixed`**]{#RN-IssueFixed}\n+:   A significant issue which has been fixed, would normally be a regression or an issue which unknowingly released in a new feature.\n+\n+[**`RN-KnownIssue`**]{#RN-KnownIssue}\n+:   An issue that wasn't possible to fix by the time the release was GA'd.\n+\n+[**`RN-Removed`**]{#RN-Removed}\n+:   Covers an API, feature, tool etc. which has been removed from the JDK.\n+\n+[**`RN-Deprecated`**]{#RN-Deprecated}\n+:   Covers an API that has been marked as deprecated in the release.\n+\n+[**`RN-Important`**]{#RN-Important}\n+:   Used to indicate that the release note should be highlighted in some fashion, such as listing it at the beginning of the release notes.\n+\n+[**`RN-`(distro)**]{#RN-distro}\n+:   Used to indicate that the release note is only relevant for a specific JDK distribution. E.g. RN-Oracle\n+\n+[~~**`RN-Change`**~~]{#RN-Change}\n+:   Deprecated.\n+\n+Also see [release-note](#release-note).\n+\n+# HotSpot Development\n","filename":"src\/index.md","additions":69,"deletions":29,"binary":false,"changes":98,"status":"modified"}]}