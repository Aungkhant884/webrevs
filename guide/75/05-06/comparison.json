{"files":[{"patch":"@@ -1543,1 +1543,1 @@\n-Release notes for a product (e.g. the JDK) are part of the release deliverables. They provide a way to highlight information about a fix, such as when it may have changed behavior, or when it's decided not to fix something. While what should go into a release note isn't something that can be precisely defined, it should describe changes that are important for a user of the product to know about. These are usually things that may affect the user's decision to upgrade to the specific version. In general, the release notes should not duplicate information in other documents but can serve to highlight that a change has been made.\n+Release notes for a product such as the JDK are part of the release deliverables providing a way to highlight information about a fix, such as when it may have changed behavior, or when it's decided not to fix something. While what should go into a release note isn't something that can be precisely defined, it should describe changes that are important for a user to take into account when they are upgrading to the specific version. While release notes should not duplicate information in other documents, they can serve to highlight that a change has been made.\n@@ -1545,1 +1545,1 @@\n-Release notes are associated with a JBS issue that has been fixed (or in some cases not been fixed) in a release. In the past these notes have been added as comments to the issue and collected at the end of a release into the official release notes. In order to allow the release notes to be generated during the course of the release (for each build) the model is now that the content of a release note is provided in a sub-task linked with the appropriate JBS issue. In OpenJDK, release notes are currently being generated for the JDK and JDK Updates projects.\n+Release notes are associated with a JBS issue that has been fixed (or in some cases not been fixed) in a release and are generated with each build of a release. Any note should be considered as an integral part of the fix process, rather than waiting until the end of the release to determine what to write. In OpenJDK, release notes are currently being generated for the JDK and JDK Updates projects.\n@@ -1549,1 +1549,1 @@\n-Writing the release note is the responsibility of the engineer who owns the issue. The note should be generated before the fix is reviewed, or when it's determined that a fix won't be addressed in the release it was found - in the case of known issues.\n+Writing the release note is the responsibility of the engineer who owns the issue. The note should be generated before the fix is reviewed, or in the case of known issues, when it's determined that a fix won't be possible in the release the issue was found in.\n@@ -1551,1 +1551,1 @@\n-When writing a release note, be prepared for rather picky review comments about grammar, typos, and wording. This is for the sake of the Java community as a whole, as the language of the release note sets the tone for many blogs and news articles. For a widely used product like the JDK, the release notes are often copied verbatim (including typos) and published to highlight news in the release. This means that we need to take extra care to make sure the text in the release note is correct and has a professional language.\n+When writing a release note, be prepared for rather picky review comments about grammar, typos, and wording. This is for the sake of the Java community as a whole, as the language of the release note sets the tone for many blogs and news articles. For a widely used product like the JDK, the release notes are often copied verbatim (including typos) and published to highlight news in the release. This means that we need to take extra care to make sure the text in the release note is correct and follows a similar style.\n","filename":"src\/index.md","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}