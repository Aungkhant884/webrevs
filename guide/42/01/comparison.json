{"files":[{"patch":"@@ -65,1 +65,1 @@\n-* **Stability and quality**. The JDK is used by millions of developers and as a widely deployed commercial product, it is held to a high standard of quality. Changes should include tests where practical, and core tests should pass at all times. The value of the change should outweigh the risk of introducing a bug or performance regression.\n+* **Stability and quality**. The JDK is used by millions of developers and as a widely deployed commercial product, it's held to a high standard of quality. Changes should include tests where practical, and core tests should pass at all times. The value of the change should outweigh the risk of introducing a bug or performance regression.\n@@ -75,1 +75,1 @@\n-* **Specification changes**. It is possible to change the API specifications, and this is done regularly. However, these changes require even more scrutiny than code changes. This extra review is handled by the [CSR Process](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main). Specifications are written in stylized, somewhat formal language, and they don't simply describe what the code does. Writing specifications is a separate skill from coding.\n+* **Specification changes**. It's possible to change the API specifications, and this is done regularly. However, these changes require even more scrutiny than code changes. This extra review is handled by the [CSR Process](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main). Specifications are written in stylized, somewhat formal language, and they don't simply describe what the code does. Writing specifications is a separate skill from coding.\n@@ -188,1 +188,1 @@\n-_openjdk\\_username_ is a plain lowercase, alphanumeric token (not an e-mail address) with twelve characters or less. The first character should be alphabetic. This username will be publicly visible in all Mercurial changeset logs. It will be used to verify that the changeset author is at least an [Author](https:\/\/openjdk.java.net\/bylaws#author) for the Project and that the person pushing the changeset is at least a [Committer](https:\/\/openjdk.java.net\/bylaws#committer). It is recommended that the _openjdk\\_username_ be somehow related to the Author's full name, such as the first character of the Author's first name followed by the Author's last name. Refer to the [Becoming an Author](https:\/\/openjdk.java.net\/projects\/index.html#project-author) section of the [Project](https:\/\/openjdk.java.net\/projects\/index.html) page for additional information.\n+_openjdk\\_username_ is a plain lowercase, alphanumeric token (not an e-mail address) with twelve characters or less. The first character should be alphabetic. This username will be publicly visible in all Mercurial changeset logs. It will be used to verify that the changeset author is at least an [Author](https:\/\/openjdk.java.net\/bylaws#author) for the Project and that the person pushing the changeset is at least a [Committer](https:\/\/openjdk.java.net\/bylaws#committer). It's recommended that the _openjdk\\_username_ be somehow related to the Author's full name, such as the first character of the Author's first name followed by the Author's last name. Refer to the [Becoming an Author](https:\/\/openjdk.java.net\/projects\/index.html#project-author) section of the [Project](https:\/\/openjdk.java.net\/projects\/index.html) page for additional information.\n@@ -239,1 +239,1 @@\n-If a Project uses a forest, It is strongly recommended for developers to clone an entire forest, rather than a single repository. This is the only means to ensure consistency in builds. The following examples illustrate two alternatives for cloning the entire _jdk9\/dev_ forest into the directory `9dev`.\n+If a Project uses a forest, It's strongly recommended for developers to clone an entire forest, rather than a single repository. This is the only means to ensure consistency in builds. The following examples illustrate two alternatives for cloning the entire _jdk9\/dev_ forest into the directory `9dev`.\n@@ -274,1 +274,1 @@\n-If the source for the Project is contained within a single repository or reading a limited portion of the source is the only goal, it is possible to clone a single repository (even if it's part of a forest). For instance, this example shows how to clone the `langtools` repository from _jdk9\/dev_ into the default destination directory.\n+If the source for the Project is contained within a single repository or reading a limited portion of the source is the only goal, it's possible to clone a single repository (even if it's part of a forest). For instance, this example shows how to clone the `langtools` repository from _jdk9\/dev_ into the default destination directory.\n@@ -330,1 +330,1 @@\n-* If the failure is not reproducible with an existing OpenJDK test, attach a reproducer if possible.\n+* If the failure isn't reproducible with an existing OpenJDK test, attach a reproducer if possible.\n@@ -333,1 +333,1 @@\n-  * If two crashes looks related but not similar enough to for sure be the same, it is easier to close a bug as a duplicate than it is to extract the relevant info from a bug to create a new one later.\n+  * If two crashes looks related but not similar enough to for sure be the same, it's easier to close a bug as a duplicate than it is to extract the relevant info from a bug to create a new one later.\n@@ -409,1 +409,1 @@\n-      Used to indicate that a bug would be suitable for backport to a release *(Rel)*. This is not a decision to backport, just a suggestion \/ recommendation. E.g., **`11-bp`**\n+      Used to indicate that a bug would be suitable for backport to a release *(Rel)*. This isn't a decision to backport, just a suggestion \/ recommendation. E.g., **`11-bp`**\n@@ -479,1 +479,1 @@\n-      Used to indicate that the issue does not affect release *(Rel)* or later. Could for instance be a bug in code that was removed in *(Rel)*.\n+      Used to indicate that the issue doesn't affect release *(Rel)* or later. Could for instance be a bug in code that was removed in *(Rel)*.\n@@ -632,1 +632,1 @@\n-      An intermittent issue is one that fails sometimes but not always. The exact reason for the intermittent failure is per definition unknown. Once the reason has been identified the issue is no more considered intermittent. An issue isn't intermittent if some characteristics has been found that triggers the failure consistently, even if the actual cause for the failure has not been found. For instance if a test fails every time it is executed on a specific host but not on other hosts it wouldn't be considered intermittent as it fails consistently on that specific host. In other cases it may be that we know that a test sometimes is unlucky in some respect and fails due to this. This test could still be considered intermittent even though we know what the reason is if the reason itself appears intermittently.\n+      An intermittent issue is one that fails sometimes but not always. The exact reason for the intermittent failure is per definition unknown. Once the reason has been identified the issue is no more considered intermittent. An issue isn't intermittent if some characteristics has been found that triggers the failure consistently, even if the actual cause for the failure hasn't been found. For instance if a test fails every time it's executed on a specific host but not on other hosts it wouldn't be considered intermittent as it fails consistently on that specific host. In other cases it may be that we know that a test sometimes is unlucky in some respect and fails due to this. This test could still be considered intermittent even though we know what the reason is if the reason itself appears intermittently.\n@@ -634,1 +634,1 @@\n-      Some issues may seem intermittent when looking at test results, even though the reason for failing is actually known. One example is where a test fails consistently on a specific host, or due to specific conditions in the environment. These failures should not be considered intermittent but it may still be valuable to tag these in JBS with one of the labels **`intermittent-hardware`** or **`intermittent-environment`**. This will help to faster identify that the cause of the failure is known without having to read through the entire bug.\n+      Some issues may seem intermittent when looking at test results, even though the reason for failing is actually known. One example is where a test fails consistently on a specific host, or due to specific conditions in the environment. These failures shouldn't be considered intermittent but it may still be valuable to tag these in JBS with one of the labels **`intermittent-hardware`** or **`intermittent-environment`**. This will help to faster identify that the cause of the failure is known without having to read through the entire bug.\n@@ -636,1 +636,1 @@\n-      A test that should be platform agnostic but is consistently failing on a specific OS would for instance be labeled with **`intermittent-environment`**, while a test that fails every time it is run on some specific hardware would be labeled with **`intermittent-hardware`**.\n+      A test that should be platform agnostic but is consistently failing on a specific OS would for instance be labeled with **`intermittent-environment`**, while a test that fails every time it's run on some specific hardware would be labeled with **`intermittent-hardware`**.\n@@ -694,1 +694,1 @@\n-:    It is too hard to write a regression or unit test for this bug (e.g., theoretical race condition, complex setup, reboot required, editing of installed files required, specific graphics card required); the bug should explain why.\n+:    It's too hard to write a regression or unit test for this bug (e.g., theoretical race condition, complex setup, reboot required, editing of installed files required, specific graphics card required); the bug should explain why.\n@@ -749,1 +749,1 @@\n-      A regression is a bug that did not exist in the previous release. Ideally all regressions must be fixed in order to release the next major version.\n+      A regression is a bug that didn't exist in the previous release. Ideally all regressions must be fixed in order to release the next major version.\n@@ -766,1 +766,1 @@\n-:   An issue that was not possible to fix by the time the release was GA'd.\n+:   An issue that wasn't possible to fix by the time the release was GA'd.\n@@ -866,1 +866,1 @@\n-> Some steps refer to operations which can not be performed directly without the assistance of a [Project Committer](https:\/\/openjdk.java.net\/bylaws#committer). For example, any changes to the [bug database](https:\/\/bugs.openjdk.java.net) fall into this category. Since these steps are required, [Contributors](https:\/\/openjdk.java.net\/bylaws#contributor) are urged to work with their [Sponsors](https:\/\/openjdk.java.net\/sponsor\/) to complete these tasks.\n+> Some steps refer to operations which can't be performed directly without the assistance of a [Project Committer](https:\/\/openjdk.java.net\/bylaws#committer). For example, any changes to the [bug database](https:\/\/bugs.openjdk.java.net) fall into this category. Since these steps are required, [Contributors](https:\/\/openjdk.java.net\/bylaws#contributor) are urged to work with their [Sponsors](https:\/\/openjdk.java.net\/sponsor\/) to complete these tasks.\n@@ -878,1 +878,1 @@\n-   where `6543210` is replaced with the actual bug id number or \"[NEW BUG]\" if the bug id is not known and `My favorite bug` is replaced with the bug's summary.  The message should describe the intended change, which components may be affected, and any other risks or concerns.\n+   where `6543210` is replaced with the actual bug id number or \"[NEW BUG]\" if the bug id isn't known and `My favorite bug` is replaced with the bug's summary.  The message should describe the intended change, which components may be affected, and any other risks or concerns.\n@@ -909,1 +909,1 @@\n-   :   An entirely new test (or tests) may not be required. For example, if the bug is an existing regression test failure, then when fixing the bug you should just add the new bug ID to the list of space-delimited bugs in the [\\@bug tag](https:\/\/openjdk.java.net\/jtreg\/tag-spec.html#INFORMATIONAL_TAGS) of the failing regression test, even if the test did not need to be updated.\n+   :   An entirely new test (or tests) may not be required. For example, if the bug is an existing regression test failure, then when fixing the bug you should just add the new bug ID to the list of space-delimited bugs in the [\\@bug tag](https:\/\/openjdk.java.net\/jtreg\/tag-spec.html#INFORMATIONAL_TAGS) of the failing regression test, even if the test didn't need to be updated.\n@@ -917,1 +917,1 @@\n-   :   It is often sufficient to build and test on a single platform, but sometimes it is not. Use discretion.\n+   :   It's often sufficient to build and test on a single platform, but sometimes it's not. Use discretion.\n@@ -954,1 +954,1 @@\n-   A change may require multiple Reviewers because it affects multiple areas.  Reviewers should be aware that they take full responsibility for the appropriateness and correctness of any changes in their area of expertise.  If something goes wrong (e.g., the build breaks) and the change&apos;s author is unavailable, they may be asked to deal with the problem.  Potential Reviewers are encouraged to refuse to review code for which they are not qualified.\n+   A change may require multiple Reviewers because it affects multiple areas.  Reviewers should be aware that they take full responsibility for the appropriateness and correctness of any changes in their area of expertise.  If something goes wrong (e.g., the build breaks) and the change&apos;s author is unavailable, they may be asked to deal with the problem. Potential Reviewers are encouraged to refuse to review code for which they aren't qualified.\n@@ -998,1 +998,1 @@\n-* Binary files should not be checked in, if your test needs to use one, the test should create it in some fashion\n+* Binary files shouldn't be checked in, if your test needs to use one, the test should create it in some fashion\n@@ -1023,1 +1023,1 @@\n-This example only utilizes three JTReg specific tags, `@test`, `@summary`, and `@run`. `@test` simply tells JTReg that this class is a test, and `@summary` provides a description of the test. `@run` tells JTReg how to execute the test. In this case we simply tell JTReg to execute the main method of the class `TestXY`. `@run` is not strictly necessary for JTReg to execute the test, an implicit `@run` tag will be added if none exists. However, for clarity and in order to avoid bugs it's recommended to always explicitly use the `@run` tag.\n+This example only utilizes three JTReg specific tags, `@test`, `@summary`, and `@run`. `@test` simply tells JTReg that this class is a test, and `@summary` provides a description of the test. `@run` tells JTReg how to execute the test. In this case we simply tell JTReg to execute the main method of the class `TestXY`. `@run` isn't strictly necessary for JTReg to execute the test, an implicit `@run` tag will be added if none exists. However, for clarity and in order to avoid bugs it's recommended to always explicitly use the `@run` tag.\n@@ -1277,1 +1277,1 @@\n-The _summary_ line is optional, but authors are strongly encouraged to include one if the nature of the change is not obvious from the synopsis. It's just one line, meant to give the reader a clue as to how the code changed. A more complete description of the change belongs in the bug report.\n+The _summary_ line is optional, but authors are strongly encouraged to include one if the nature of the change isn't obvious from the synopsis. It's just one line, meant to give the reader a clue as to how the code changed. A more complete description of the change belongs in the bug report.\n@@ -1281,1 +1281,1 @@\n-The _contributed-by_ line is optional. If present, it is a list of comma-separated email addresses. It should be included only when the author or authors of the change do not have commit rights to the target repository and thus would not otherwise receive acknowledgment.\n+The _contributed-by_ line is optional. If present, it's a list of comma-separated email addresses. It should be included only when the author or authors of the change don't have commit rights to the target repository and thus would not otherwise receive acknowledgment.\n@@ -1317,1 +1317,1 @@\n-It is often necessary to merge local changes with those made in the parent repositories. The first step in a merge process is to retrieve (or pull) the collection of changesets which have been pushed since the last merge or initial clone. If there if there are merge conflicts, then they must be resolved. [Chapter 3](http:\/\/hgbook.red-bean.com\/hgbookch3.html#x7-530003) of the Mercurial book contains detailed information on the merging process.\n+It's often necessary to merge local changes with those made in the parent repositories. The first step in a merge process is to retrieve (or pull) the collection of changesets which have been pushed since the last merge or initial clone. If there if there are merge conflicts, then they must be resolved. [Chapter 3](http:\/\/hgbook.red-bean.com\/hgbookch3.html#x7-530003) of the Mercurial book contains detailed information on the merging process.\n@@ -1359,1 +1359,1 @@\n-All pushes require an ssh key which must be installed on the Mercurial server. The `ssh-keygen` command generates an ssh key. The `-b` option overrides the default number of bits for the key. Allow a few minutes to generate a 4096 bit key; a key of at least 2048 bits is recommended. While it is possible to use ssh without a passphrase, this is **strongly** discouraged. Empty or insecure passphrases may be reset using `ssh-keygen -p`; this does not change the keys.\n+All pushes require an ssh key which must be installed on the Mercurial server. The `ssh-keygen` command generates an ssh key. The `-b` option overrides the default number of bits for the key. Allow a few minutes to generate a 4096 bit key; a key of at least 2048 bits is recommended. While it's possible to use ssh without a passphrase, this is **strongly** discouraged. Empty or insecure passphrases may be reset using `ssh-keygen -p`; this doesn't change the keys.\n@@ -1393,1 +1393,1 @@\n-> **It is recommended that all users check with their network administrators before installing any kind of TCP forwarding tool on their network. Many corporations and institutions have strict security policies in this area.**\n+> **It's recommended that all users check with their network administrators before installing any kind of TCP forwarding tool on their network. Many corporations and institutions have strict security policies in this area.**\n@@ -1442,1 +1442,1 @@\n-Changesets need to be _pushed_ via ssh to the read\/write repository which resides on the OpenJDK Mercurial server. The easiest way to do this is to have each repository define the \"default-push\" path in every repository's `.hg\/hgrc` file. The `.hg\/hgrc` file in is not a managed file - it is private to the repository. The following example defines the \"default\" and \"default-push\" paths for clones of the jdk9\/dev team repository.\n+Changesets need to be _pushed_ via ssh to the read\/write repository which resides on the OpenJDK Mercurial server. The easiest way to do this is to have each repository define the \"default-push\" path in every repository's `.hg\/hgrc` file. The `.hg\/hgrc` file in isn't a managed file - it's private to the repository. The following example defines the \"default\" and \"default-push\" paths for clones of the jdk9\/dev team repository.\n@@ -1497,1 +1497,1 @@\n-Most developers will only find a need to create changesets in one or two repositories. However, it is important that before any changesets are pushed, the corresponding forest pull and merge with the destination forest be performed; otherwise there is a risk of breaking the build.\n+Most developers will only find a need to create changesets in one or two repositories. However, it's important that before any changesets are pushed, the corresponding forest pull and merge with the destination forest be performed; otherwise there is a risk of breaking the build.\n@@ -1527,1 +1527,1 @@\n-   * Remember that comments are not brought over when cloning.\n+   * Remember that comments aren't brought over when cloning.\n@@ -1789,1 +1789,1 @@\n-:   A change that is small, well contained, and makes no semantic changes. Typically fixing obvious typos or renaming some local identifier. Trivial changes can also be pushing an already reviewed change that was missed in an earlier push (e.g. forgot to add a file) or generated changes like an [`hg backout`](#backing-out-a-change). It's up to the author of a change to claim that the change is trivial in the RFR, and it's up to the Reviewer whether to approve such a claim. A change is only trivial if the Reviewer says so. Trivial changes does not have to wait 24 hours before being pushed, and only needs one Reviewer, even in areas where stricter rules for pushing normally applies.\n+:   A change that is small, well contained, and that makes no semantic changes. Typical examples are fixing obvious typos or renaming a local identifier. A trivial change can also be pushing an already-reviewed change that was missed in an earlier push (e.g., forgot to add a file) or generated changes like a [`git revert`](#backing-out-a-change). It's up to the author of a change to claim that the change is trivial in the RFR, and it's up to the Reviewer whether to approve such a claim. A change is trivial only if the Reviewer agrees that it is. A trivial change doesn't need to wait 24 hours before being pushed, and it only needs one Reviewer, even in areas where stricter rules for pushing normally apply.\n","filename":"src\/index.md","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"}]}