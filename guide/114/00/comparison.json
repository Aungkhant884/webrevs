{"files":[{"patch":"@@ -59,1 +59,1 @@\n-The Skara tooling includes support for backports. [The official Skara documentation](https:\/\/wiki.openjdk.org\/display\/SKARA\/Backports) describes in detail how to work with the tooling to create backport PRs on GitHub or using the CLI tools. As described in the documentation, the [`\/backport`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Commit+Commands#CommitCommands-\/backport) command can be used on a commit (not a PR!) to create the backport PR. If a backport PR is manually created, set the PR title to `Backport <original commit hash>`. This ensures that the bots will recognize it as a backport as opposed to a main fix specifically targeting an older release. One can tell whether or not the bots recognized a PR as a backport by the [backport]{.label} label being added if it's recognized.\n+The Skara tooling includes support for backports. [The official Skara documentation](https:\/\/wiki.openjdk.org\/display\/SKARA\/Backports) describes in detail how to work with the tooling to create backport PRs on GitHub or using the CLI tools. As described in the documentation, the [`\/backport`](https:\/\/wiki.openjdk.org\/display\/SKARA\/Commit+Commands#CommitCommands-\/backport) command can be used on a commit or a PR to create the backport PR. If a backport PR is manually created, set the PR title to `Backport <original commit hash>`. This ensures that the bots will recognize it as a backport as opposed to a main fix specifically targeting an older release. One can tell whether or not the bots recognized a PR as a backport by the [backport]{.label} label being added if it's recognized.\n","filename":"src\/guide\/backporting.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}