{"files":[{"patch":"@@ -1001,1 +1001,1 @@\n-In the example above I cloned my personal fork of the JDK mainline repository. You should of course use your own GitHub username instead. Then, by adding a new *remote* named 'upstream', we associate this clone with [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) as well. Doing this will allow the tooling to automatically create a PR request on [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) whenever you push a change to your personal fork. The way that works is that once you have pushed a change to your private fork, and navigate to the [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) repository on GitHub, there will be a message saying that you just pushed a change and asking if you want to create a PR.\n+In the example above I cloned my personal fork of the JDK mainline repository. You should of course use your own GitHub username instead. Then, by adding a new *remote* named 'upstream', we associate this clone with [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) as well. Doing this will allow the tooling to automatically create a PR on [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) whenever you push a change to your personal fork. The way that works is that once you have pushed a change to your private fork, and navigate to the [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) repository on GitHub, there will be a message saying that you just pushed a change and asking if you want to create a PR.\n@@ -1006,1 +1006,1 @@\n-    $ git checkout -b my-fix\n+    $ git checkout -b JDK-8272373\n@@ -1008,1 +1008,1 @@\n-Here we `checkout` the `master` branch, this is safe to do even if you already have the `master` branch active. Then we create a new branch called `my-fix` and set the repository up to work in that branch.\n+Here we first `checkout` the `master` branch, this is safe to do even if you already have the `master` branch active. Then we create a new branch called `JDK-8272373` and set the repository up to work in that branch.\n@@ -1011,1 +1011,1 @@\n-If you're new to git you should read more about how to work with git in one of the many fine git tutorials available on the Internet. This guide doesn't aspire to become another git guide.\n+If you're new to git you should read more about how to work with git in one of the many fine git tutorials available on the Internet. For instance the [Pro Git book](https:\/\/git-scm.com\/book\/en\/v2). This guide doesn't aspire to become another git guide.\n@@ -1022,2 +1022,2 @@\n-    Your identification has been saved in \/Users\/jesper\/.ssh\/openjdk-jdk.\n-    Your public key has been saved in \/Users\/jesper\/.ssh\/openjdk-jdk.pub.\n+    Your identification has been saved in \/Users\/duke\/.ssh\/openjdk-jdk.\n+    Your public key has been saved in \/Users\/duke\/.ssh\/openjdk-jdk.pub.\n@@ -1078,1 +1078,2 @@\n-The second example is from a clean (newly installed) Mac running MacOS Big Sur. Please note that in this case there are some steps taken outside of the terminal. Here [Mac Ports](https:\/\/www.macports.org) is used to install `autoconf`. `autoconf` can also be installed using [Homebrew](https:\/\/brew.sh) and surely through other sources as well.\n+The second example is from a clean (newly installed) Mac running MacOS Big Sur. Please note that in this case there are some steps taken outside of the terminal. First XCode and the XCode command line tools must be installed. It could be that the most recent version of XCode that you get from App Store is too new to have been properly tested with the JDK build. See [the JDK build instructions](https:\/\/github.com\/openjdk\/jdk\/blob\/master\/doc\/building.md#apple-xcode) for supported versions and more details in case you need to install an older version of XCode.\n+In this example [Mac Ports](https:\/\/www.macports.org) is used to install `autoconf`. `autoconf` can also be installed using [Homebrew](https:\/\/brew.sh) and surely through other sources as well.\n@@ -1082,4 +1083,0 @@\n-    $ # Get XCode from Appstore\n-    $ sudo xcodebuild -license\n-    $ # Agree to license\n-    $ # Install Mac Ports: https:\/\/www.macports.org\/install.php\n","filename":"src\/index.md","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"}]}