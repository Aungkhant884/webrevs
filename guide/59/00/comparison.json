{"files":[{"patch":"@@ -614,1 +614,1 @@\n-      [~~**`hs-tier`**~~~~`[1-8]`~~]{#hs-tier}\n+      [~~**`hs-tier`**`[1-8]`~~]{#hs-tier}\n@@ -988,0 +988,15 @@\n+# Cloning the JDK\n+\n+::: {.box}\n+[Quick Links]{.boxheader}\n+\n+* [openjdk\/jdk GitHub project](https:\/\/github.com\/openjdk\/jdk)\n+:::\n+\n+The complete source code for the JDK is hosted at [GitHub](https:\/\/github.com\/openjdk\/jdk). If you intend to make changes and contribute patches to the JDK, you should first fork the JDK repository on GitHub and clone your own fork as shown below. To fork a project on GitHub, go to the [project page](https:\/\/github.com\/openjdk\/jdk) and click the 'Fork' button in the upper right corner and follow the on screen instructions. Once you have your private fork, go ahead and clone it.\n+\n+    $ git clone https:\/\/github.com\/jesperIRL\/jdk.git\n+    $ git remote add upstream https:\/\/github.com\/openjdk\/jdk.git\n+\n+In the example above I cloned my personal fork of the JDK mainline repository. When you do this you should of course use your own GitHub user name instead. Then, by adding a new remote named 'upsream', we associate this clone with [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) as well. Doing this will allow the tooling to automatically create a PR request on [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) whenever you push a change to your personal fork.\n+\n@@ -994,1 +1009,0 @@\n-* [openjdk\/jdk GitHub project](https:\/\/github.com\/openjdk\/jdk)\n@@ -1002,3 +1016,1 @@\n-The log below shows the steps taken to download and build the JDK source code from the mainline JDK development GIT repository. The configure script will tell you what additional packages you need. In this particular case several packages were needed since this build was performed on a clean Ubuntu installation. The configure script was run several times to get all the dependencies, but only the commands actually needed to get the JDK built are included in the log.\n-\n-This example was written in the JDK 17 development time frame which is why the boot JDK used here is JDK 16. To build JDK N, use JDK N-1 as the boot JDK. Note that the download link used here points to a Linux x64 JDK 16.\n+The examples below show the steps taken to build the JDK source code. Please see [Cloning the JDK](#cloning-the-jdk) for information on how to download it. These examples were written in the JDK 17 development time frame which is why the boot JDK used here is JDK 16. Note that the download links used here point to JDK 16 bundles. To build JDK N, use JDK N-1 as the boot JDK.\n@@ -1006,1 +1018,1 @@\n-This is just an example log, don't copy the `apt-get install` line. Instead run `sh .\/configure` once you have the boot JDK installed to see what packages you actually need on your system.\n+The configure script will tell you what additional packages you need. In this first example several packages were needed since this build was performed on a clean Ubuntu installation. The configure script was run several times to get all the dependencies, but only the commands actually needed to get the JDK built are included in the log. This is just an example log, don't copy the `apt-get install` line. Instead run `sh .\/configure` to see what packages you actually need on your system.\n@@ -1008,1 +1020,0 @@\n-    $ git clone https:\/\/github.com\/openjdk\/jdk.git\n@@ -1016,1 +1027,15 @@\n-In this case the built JDK can be found in `build\/linux-x86_64-server-release\/jdk`. The exact path depends on your build platform and selected configuration.\n+The built JDK can be found in `build\/linux-x86_64-server-release\/jdk`. The exact path depends on your build platform and selected configuration.\n+\n+The second example is from a clean (newly installed) Mac running MacOS Big Sur. Please note that in this case there are some steps taken outside of the terminal. Here [Mac Ports](https:\/\/www.macports.org) is used to install `autoconf`. `autoconf` can also be installed using [Homebrew](https:\/\/brew.sh) and surely through other sources as well.\n+\n+    $ curl https:\/\/download.java.net\/java\/GA\/jdk16.0.1\/7147401fd7354114ac51ef3e1328291f\/9\/GPL\/openjdk-16.0.1_osx-x64_bin.tar.gz --output openjdk-16.0.1_osx-x64_bin.tar.gz\n+    $ tar xzf openjdk-16.0.1_osx-x64_bin.tar.gz\n+    $ # Get XCode from Appstore\n+    $ sudo xcodebuild -license\n+    $ # Agree to license\n+    $ # Install Mac Ports: https:\/\/www.macports.org\/install.php\n+    $ sudo port install autoconf\n+    $ sh .\/configure --with-boot-jdk=$HOME\/jdk-16.0.1.jdk\/Contents\/Home\n+    $ make images\n+\n+In this case the built JDK can be found in `build\/macosx-x86_64-server-release\/jdk`.\n@@ -1293,1 +1318,1 @@\n- *\n+ *\/\n","filename":"src\/index.md","additions":34,"deletions":9,"binary":false,"changes":43,"status":"modified"}]}