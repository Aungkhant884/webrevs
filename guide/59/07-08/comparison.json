{"files":[{"patch":"@@ -1001,1 +1001,1 @@\n-If you intend to contribute patches to the JDK, you should first *fork* the JDK repository on GitHub and clone your own fork as shown below. To fork a project on GitHub, go to the [project page](https:\/\/github.com\/openjdk\/jdk) and click the 'Fork' button in the upper right corner, then follow the on screen instructions.\n+If you intend to contribute patches to the JDK, you should first *fork* the JDK repository on GitHub and clone your own *personal fork* as shown below. To fork a project on GitHub, go to the [project page](https:\/\/github.com\/openjdk\/jdk) and click the 'Fork' button in the upper right corner, then follow the on screen instructions.\n@@ -1003,1 +1003,1 @@\n-All pushes to [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) require an SSH key which must be installed on GitHub. If this is the first time you clone your personal fork of the [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) repository you may want to create an SSH key to use with it. See [Generating an SSH key] below. Once you have your private fork and an SSH key to go with it, go ahead and clone.\n+All pushes to [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) require an SSH key which must be installed on GitHub. If this is the first time you clone your personal fork of the [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) repository you may want to create an SSH key to use with it. See [Generating an SSH key] below. Once you have your personal fork and an SSH key to go with it, go ahead and clone.\n@@ -1009,1 +1009,1 @@\n-In the example above Duke cloned his personal fork of the JDK mainline repository using SSH. You should of course use your own GitHub username instead. Then, by adding a new *remote* named 'upstream', the clone is associated with [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk). Doing this will allow the tooling to automatically create a PR on [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) whenever a change is pushed to the personal fork. The way that works is that once the change has been pushed to the private fork, and you navigate to the [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) repository on GitHub, there will be a message saying that you just pushed a change and asking if you want to create a PR.\n+In the example above Duke cloned his personal fork of the JDK mainline repository using SSH. You should of course use your own GitHub username instead. Then, by adding a new *remote* named 'upstream', the clone is associated with [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk). Doing this will allow the tooling to automatically create a PR on [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) whenever a change is pushed to the personal fork. The way that works is that once the change has been pushed to the personal fork, and you navigate to the [openjdk\/jdk](https:\/\/github.com\/openjdk\/jdk) repository on GitHub, there will be a message saying that you just pushed a change and asking if you want to create a PR.\n","filename":"src\/index.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}