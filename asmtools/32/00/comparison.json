{"files":[{"patch":"@@ -0,0 +1,58 @@\n+package org.openjdk.asmtools.common.structure;\n+\n+import org.openjdk.asmtools.jdis.ClassData;\n+\n+import java.io.DataInputStream;\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+\n+public interface ToolInput {\n+\n+    String getFileName();\n+\n+    void provide(ClassData classData) throws IOException;\n+\n+    public static class FileInput implements  ToolInput {\n+        private final String file;\n+\n+        public FileInput(String file) {\n+            this.file = file;\n+        }\n+\n+        @Override\n+        public String getFileName() {\n+            return file;\n+        }\n+\n+        @Override\n+        public void provide(ClassData classData) throws IOException {\n+            classData.read(file);\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return getFileName();\n+        }\n+    }\n+\n+    public static class StdinInput implements  ToolInput {\n+\n+        @Override\n+        public String getFileName() {\n+            \/\/get parent is used\n+            return \"stdin\/in\";\n+        }\n+\n+        @Override\n+        public void provide(ClassData classData) throws IOException {\n+            try (DataInputStream dis = new DataInputStream(System.in)) {\n+                classData.read(dis, Paths.get(getFileName()));\n+            }\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return getFileName();\n+        }\n+    }\n+}\n","filename":"src\/org\/openjdk\/asmtools\/common\/structure\/ToolInput.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -123,1 +123,1 @@\n-            read(dis);\n+            read(dis, inputFile.toPath());\n@@ -125,1 +125,0 @@\n-        classFile = inputFile.toPath();\n@@ -130,1 +129,1 @@\n-            read(dis);\n+            read(dis, Paths.get(inputFileName));\n@@ -132,1 +131,0 @@\n-        classFile = Paths.get(inputFileName);\n@@ -253,1 +251,2 @@\n-    private void read(DataInputStream in) throws IOException {\n+    public void read(final DataInputStream in, final Path src) throws IOException {\n+        classFile = src;\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ClassData.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.structure.ToolInput;\n@@ -47,1 +48,1 @@\n-    private ArrayList<String> fileList = new ArrayList<>();\n+    private ArrayList<ToolInput> fileList = new ArrayList<>();\n@@ -72,1 +73,1 @@\n-        for (String inputFileName : fileList) {\n+        for (ToolInput inputFileName : fileList) {\n@@ -74,1 +75,1 @@\n-                environment.setInputFile(inputFileName);\n+                environment.setInputFile(inputFileName.getFileName());\n@@ -76,1 +77,1 @@\n-                classData.read(inputFileName);\n+                inputFileName.provide(classData);\n@@ -145,1 +146,7 @@\n-                    break;\n+                    System.exit(OK);\n+                case \"-h\":\n+                    usage();\n+                    System.exit(OK);\n+                case \"-help\":\n+                    usage();\n+                    System.exit(OK);\n@@ -152,1 +159,1 @@\n-                        fileList.add(arg);\n+                        fileList.add(new ToolInput.FileInput(arg));\n@@ -157,2 +164,1 @@\n-            usage();\n-            System.exit(FAILED);\n+            fileList.add(new ToolInput.StdinInput());\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/Main.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -24,1 +24,2 @@\n-where possible options include:\n+If no FILE.class is provided, stdin is awaited\\n\\\n+possible options include:\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/i18n.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+import java.io.FileInputStream;\n@@ -9,0 +10,1 @@\n+import java.io.InputStream;\n@@ -18,1 +20,0 @@\n-        \/\/for 0 file args, there is hardcoded System.exit\n@@ -39,0 +40,21 @@\n+        Assertions.assertTrue(outs.getToolBos().contains(\"invoke\"));\n+    }\n+\n+    @Test\n+    public void main3StreamsStdinCorrectStream() throws IOException {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        File in =  new File(\".\/target\/classes\/org\/openjdk\/asmtools\/jdis\/Main.class\");\n+        InputStream is = System.in;\n+        try {\n+            System.setIn(new FileInputStream(in));\n+            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput());\n+            int i = decoder.disasm();\n+            outs.flush();\n+            Assertions.assertEquals(0, i);\n+            Assertions.assertFalse(outs.getToolBos().isEmpty());\n+            Assertions.assertTrue(outs.getErrorBos().isEmpty());\n+            Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+            Assertions.assertTrue(outs.getToolBos().contains(\"invoke\"));\n+        }finally {\n+            System.setIn(is);\n+        }\n","filename":"test\/org\/openjdk\/asmtools\/jdis\/MainTest.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}