{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import java.util.Arrays;\n@@ -420,0 +421,10 @@\n+        \/**\n+         * Checks that this enum element is in an enum list\n+         *\n+         * @param tokens the list of enum elements for checking\n+         * @return true if a tokens list contains this enum element\n+         *\/\n+        public boolean in(Token... tokens) {\n+            return (tokens == null) ? false : Arrays.asList(tokens).contains(this);\n+        }\n+\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/JasmTokens.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -436,0 +436,5 @@\n+     * ldc MethodHandle REF_newInvokeSpecial:InterfaceMethod  LdcConDyTwice.\"<init>\":\n+     * ldc MethodHandle REF_invokeInterface:LdcConDyTwice.\"<init>\":\n+     * ldc MethodHandle REF_newInvokeSpecial:Method LdcConDyTwice.\"<init>\":\n+     * invokedynamic MethodHandle REF_invokeStatic:Method java\/lang\/invoke\/StringConcatFactory.makeConcatWithConstants:\n+     * invokedynamic MethodHandle REF_invokeStatic:java\/lang\/invoke\/StringConcatFactory.makeConcatWithConstants\n@@ -442,1 +447,1 @@\n-        if (scanner.token != COLON) {\n+        if ( ! scanner.token.in(COLON, SEMICOLON) ) {\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Parser.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}