{"files":[{"patch":"@@ -54,0 +54,1 @@\n+src\/test\/java\/org=..\/..\/..\/..\/test\/org\/\n","filename":"maven\/mvngen.sh","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-\n@@ -39,0 +38,5 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-surefire-plugin<\/artifactId>\n+                <version>3.0.0-M7<\/version>\n+            <\/plugin>\n@@ -55,0 +59,10 @@\n+    <dependencies>\n+      <!-- For tests -->\n+        <dependency>\n+            <groupId>org.junit.jupiter<\/groupId>\n+            <artifactId>junit-jupiter<\/artifactId>\n+            <version>5.9.0-M1<\/version>\n+            <scope>test<\/scope>\n+        <\/dependency>\n+    <\/dependencies>\n+\n","filename":"maven\/pom.xml.in","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+package org.openjdk.asmtools;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintWriter;\n+\n+public class ThreeStringWriters {\n+    private final ByteArrayOutputStream toolBos = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream errorBos = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream loggerBos = new ByteArrayOutputStream();\n+    private final PrintWriter toolOutput = new PrintWriter(toolBos);\n+    private final PrintWriter errorOutput = new PrintWriter(errorBos);\n+    private final PrintWriter loggerOutput = new PrintWriter(loggerBos);\n+\n+    public void flush(){\n+        toolOutput.flush();\n+        errorOutput.flush();\n+        loggerOutput.flush();\n+    }\n+\n+    public PrintWriter getToolOutput() {\n+        return toolOutput;\n+    }\n+\n+    public PrintWriter getErrorOutput() {\n+        return errorOutput;\n+    }\n+\n+    public PrintWriter getLoggerOutput() {\n+        return loggerOutput;\n+    }\n+\n+    public String getLoggerBos() {\n+        return loggerBos.toString();\n+    }\n+\n+    public String getErrorBos() {\n+        return errorBos.toString();\n+    }\n+\n+    public String getToolBos() {\n+        return toolBos.toString();\n+    }\n+}\n","filename":"test\/org\/openjdk\/asmtools\/ThreeStringWriters.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+package org.openjdk.asmtools.jdec;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.openjdk.asmtools.ThreeStringWriters;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+\n+class MainTest {\n+\n+    @Test\n+    public void main3StreamsNoSuchFileError() {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        String nonExisitngFile = \"someNonExiostingFile\";\n+        \/\/for 0 file args, there is hardcoded System.exit\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), new String[]{nonExisitngFile});\n+        int i = decoder.decode();\n+        outs.flush();\n+        Assertions.assertEquals(1, i);\n+        Assertions.assertTrue(outs.getToolBos().isEmpty());\n+        Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+        Assertions.assertTrue(outs.getErrorBos().contains(\"No such file\"));\n+        Assertions.assertTrue(outs.getErrorBos().contains(nonExisitngFile));\n+    }\n+\n+    @Test\n+    public void main3StreamsFileInCorrectStream() throws IOException {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        String nonExisitngFile = \"someNonExiostingFile\";\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), new String[]{\".\/target\/classes\/org\/openjdk\/asmtools\/jdec\/Main.class\"});\n+        int i = decoder.decode();\n+        outs.flush();\n+        Assertions.assertEquals(0, i);\n+        Assertions.assertFalse(outs.getToolBos().isEmpty());\n+        Assertions.assertTrue(outs.getErrorBos().isEmpty());\n+        Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/org\/openjdk\/asmtools\/jdec\/MainTest.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+package org.openjdk.asmtools.jdis;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.openjdk.asmtools.ThreeStringWriters;\n+\n+import java.io.IOException;\n+\n+class MainTest {\n+\n+    @Test\n+    public void main3StreamsNoSuchFileError() {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        String nonExisitngFile = \"someNonExiostingFile\";\n+        \/\/for 0 file args, there is hardcoded System.exit\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), new String[]{nonExisitngFile});\n+        int i = decoder.disasm();\n+        outs.flush();\n+        Assertions.assertEquals(1, i);\n+        Assertions.assertTrue(outs.getToolBos().isEmpty());\n+        Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+        Assertions.assertTrue(outs.getErrorBos().contains(\"No such file\"));\n+        Assertions.assertTrue(outs.getErrorBos().contains(nonExisitngFile));\n+    }\n+\n+    @Test\n+    public void main3StreamsFileInCorrectStream() throws IOException {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), new String[]{\".\/target\/classes\/org\/openjdk\/asmtools\/jdis\/Main.class\"});\n+        int i = decoder.disasm();\n+        outs.flush();\n+        Assertions.assertEquals(0, i);\n+        Assertions.assertFalse(outs.getToolBos().isEmpty());\n+        Assertions.assertTrue(outs.getErrorBos().isEmpty());\n+        Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/org\/openjdk\/asmtools\/jdis\/MainTest.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}