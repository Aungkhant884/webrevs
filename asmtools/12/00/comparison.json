{"files":[{"patch":"@@ -259,1 +259,4 @@\n-            verbose=\"${javac.verbose}\" deprecation=\"${javac.deprecation}\"\n+            verbose=\"${javac.verbose}\"\n+            deprecation=\"${javac.deprecation}\"\n+            encoding=\"UTF8\"\n+            includeantruntime=\"false\"\n@@ -301,0 +304,1 @@\n+                Encoding=\"UTF8\"\n","filename":"build\/build.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-PRODUCT_MILESTONE   = beta\n-PRODUCT_BUILDNUMBER = b02\n+PRODUCT_MILESTONE   = ea\n+PRODUCT_BUILDNUMBER = b09\n","filename":"build\/productinfo.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * PermittedSubtypes_attribute {\n+ * PermittedSubclasses_attribute {\n@@ -43,2 +43,2 @@\n- * u2 permitted_subtypes_count;\n- * u2 classes[permitted_subtypes_count];\n+ * u2 number_of_classes;\n+ * u2 classes[number_of_classes];\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/ClassArrayAttr.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-    \/\/ JEP 360 - PermittedSubtypes attribute since class file 59.65535\n-    private PermittedTypesAttr permittedTypesAttr;\n+    \/\/ JEP 360 - PermittedSubclasses attribute since class file 59.65535\n+    private PermittedSubclassesAttr permittedSubclassesAttr;\n@@ -314,3 +314,3 @@\n-    public void addPermittedSubtypes(List<ConstantPool.ConstCell> classes) {\n-        env.traceln(\"addPermittedSubtypes\");\n-        permittedTypesAttr = new PermittedTypesAttr(this, classes);\n+    public void addPermittedSubclasses(List<ConstantPool.ConstCell> classes) {\n+        env.traceln(\"addPermittedSubclasses\");\n+        permittedSubclassesAttr = new PermittedSubclassesAttr(this, classes);\n@@ -462,2 +462,2 @@\n-            if ( permittedSubtypesAttributesExist() )\n-                attrs.add(permittedTypesAttr);\n+            if ( permittedSubclassesAttributesExist() )\n+                attrs.add(permittedSubclassesAttr);\n@@ -518,1 +518,1 @@\n-    public boolean permittedSubtypesAttributesExist() { return permittedTypesAttr != null;  }\n+    public boolean permittedSubclassesAttributesExist() { return permittedSubclassesAttr != null;  }\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/ClassData.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -344,1 +344,1 @@\n-                ((ConstantPool.ConstCell) arg).setRank(0);\n+                ((ConstantPool.ConstCell) arg).setRank(ConstantPool.ReferenceRank.LDC);\n@@ -348,1 +348,1 @@\n-                    ((ConstantPool.ConstCell) arg).setRank(1);\n+                    ((ConstantPool.ConstCell) arg).setRank(ConstantPool.ReferenceRank.ANY);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/CodeAttr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Enumeration;\n@@ -32,0 +31,1 @@\n+import java.util.stream.Collectors;\n@@ -42,0 +42,10 @@\n+    static public enum ReferenceRank {\n+        LDC(0),  \/\/ 0 - highest - ref from ldc\n+        ANY(1),  \/\/ 1 - any ref\n+        NO(2);   \/\/ 2 - no ref\n+        final int rank;\n+        ReferenceRank(int rank) {\n+            this.rank = rank;\n+        }\n+    }\n+\n@@ -53,1 +63,1 @@\n-        private boolean vizited = false;\n+        private boolean visited = false;\n@@ -72,1 +82,1 @@\n-            if (vizited) {\n+            if (visited) {\n@@ -75,1 +85,1 @@\n-            vizited = true;\n+            visited = true;\n@@ -77,1 +87,1 @@\n-            vizited = false;\n+            visited = false;\n@@ -257,2 +267,0 @@\n-\/\/        @Override\n-\/\/        public Object value() { return value; }\n@@ -461,1 +469,2 @@\n-        int rank = 2; \/\/ 0 - highest - ref from ldc, 1 - any ref, 2 - no ref\n+        \/\/ 0 - highest - ref from ldc, 1 - any ref, 2 - no ref\n+        ReferenceRank rank = ReferenceRank.NO;\n@@ -486,2 +495,5 @@\n-        public void setRank(int rank) {\n-            this.rank = rank;\n+        public void setRank(ReferenceRank rank) {\n+            \/\/ don't change a short ref to long due to limitation of ldc - max 256 indexes allowed\n+            if( this.rank != ReferenceRank.LDC) {\n+                this.rank = rank;\n+            }\n@@ -592,1 +604,0 @@\n-        ;\n@@ -597,1 +608,0 @@\n-        ;\n@@ -602,1 +612,0 @@\n-        ;\n@@ -607,1 +616,0 @@\n-        ;\n@@ -612,1 +620,0 @@\n-        ;\n@@ -617,1 +624,0 @@\n-        ;\n@@ -622,1 +628,0 @@\n-        ;\n@@ -627,1 +632,0 @@\n-        ;\n@@ -632,1 +636,0 @@\n-        ;\n@@ -637,1 +640,0 @@\n-        ;\n@@ -642,1 +644,0 @@\n-        ;\n@@ -647,1 +648,0 @@\n-        ;\n@@ -652,1 +652,0 @@\n-        ;\n@@ -660,1 +659,0 @@\n-        ;\n@@ -665,1 +663,0 @@\n-        ;\n@@ -670,1 +667,0 @@\n-        ;\n@@ -674,1 +670,0 @@\n-        ;\n@@ -1173,9 +1168,6 @@\n-        Enumeration e;\n-        for (int rank = 0; rank < 3; rank++) {\n-            for (ConstCell cell : cpoolHashByValue.values()) {\n-                if (cell.rank != rank) {\n-                    continue;\n-                }\n-                if (cell.isSet()) {\n-                    continue;\n-                }\n+\n+        for (ReferenceRank rank : ReferenceRank.values()) {\n+            for (ConstCell cell : cpoolHashByValue.values().stream().\n+                     filter(v-> !v.isSet() && rank.equals(v.rank)).\n+                     collect(Collectors.toList())) {\n+\n@@ -1272,4 +1264,0 @@\n-\n-    public static void setEnableDebug(boolean newState) {\n-        debugCP = newState;\n-    }\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/ConstantPool.java","additions":29,"deletions":41,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.nio.file.Paths;\n@@ -97,3 +98,1 @@\n-            char separatorChar = (inputFileName.matches(\"^[A-Za-z]+:.*\")) ? '\/' : File.separatorChar;\n-            int index = inputFileName.lastIndexOf(separatorChar);\n-            simpleInputFileName = (index < 0) ? inputFileName.substring(0) : inputFileName.substring(index + 1);\n+            simpleInputFileName = Paths.get(inputFileName).getFileName().toString();\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Environment.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -383,1 +383,1 @@\n-        PERMITTEDSUBTYPES   (177, \"PERMITTEDSUBTYPES\", \"PermittedSubtypes\", EnumSet.of(TokenType.DECLARATION, TokenType.JASM_IDENT, TokenType.MODULE_NAME ), KeywordType.KEYWORD),\n+        PERMITTEDSUBCLASSES (177, \"PERMITTEDSUBCLASSES\", \"PermittedSubclasses\", EnumSet.of(TokenType.DECLARATION, TokenType.JASM_IDENT, TokenType.MODULE_NAME ), KeywordType.KEYWORD),\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/JasmTokens.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-            case PERMITTEDSUBTYPES:\n+            case PERMITTEDSUBCLASSES:\n@@ -370,1 +370,1 @@\n-            \/\/ then the constant_pool entry at that index must be a CONSTANT_Fieldref_info structure (ยง4.4.2)\n+            \/\/ then the constant_pool entry at that index must be a CONSTANT_Fieldref_info structure (4.4.2)\n@@ -380,2 +380,2 @@\n-            \/\/  then the constant_pool entry at that index must be a CONSTANT_Methodref_info structure (ยง4.4.2)\n-            \/\/  representing a class's method or constructor (ยง2.9.1) for which a method handle is to be created.\n+            \/\/  then the constant_pool entry at that index must be a CONSTANT_Methodref_info structure (4.4.2)\n+            \/\/  representing a class's method or constructor (2.9.1) for which a method handle is to be created.\n@@ -398,1 +398,1 @@\n-                \/\/ either a CONSTANT_Methodref_info structure or a CONSTANT_InterfaceMethodref_info structure (ยง4.4.2)\n+                \/\/ either a CONSTANT_Methodref_info structure or a CONSTANT_InterfaceMethodref_info structure (4.4.2)\n@@ -469,1 +469,1 @@\n-            case PERMITTEDSUBTYPES:\n+            case PERMITTEDSUBCLASSES:\n@@ -968,1 +968,1 @@\n-     * Parse a list of classes belonging to the [NestMembers | PermittedSubtypes]  entry\n+     * Parse a list of classes belonging to the [NestMembers | PermittedSubclasses]  entry\n@@ -974,1 +974,1 @@\n-        \/\/ (NESTMEMBERS|PERMITTEDSUBTYPES)? IDENT(, IDENT)*;\n+        \/\/ (NESTMEMBERS|PERMITTEDSUBCLASSES)? IDENT(, IDENT)*;\n@@ -1760,1 +1760,1 @@\n-                case PERMITTEDSUBTYPES:         \/\/ JEP 360\n+                case PERMITTEDSUBCLASSES:         \/\/ JEP 360\n@@ -1762,1 +1762,1 @@\n-                        env.error(scanner.pos, \"extra.permittedsubtypes.attribute\");\n+                        env.error(scanner.pos, \"extra.permittedsubclasses.attribute\");\n@@ -1766,1 +1766,1 @@\n-                    parseClasses(list -> cd.addPermittedSubtypes(list));\n+                    parseClasses(list -> cd.addPermittedSubclasses(list));\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Parser.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.asmtools.jasm;\n+\n+import java.util.List;\n+\n+\/**\n+ * The \"classes[]\" data of attributes\n+ * JEP 360 (Sealed types): class file 59.65535\n+ * PermittedSubclasses_attribute {\n+ * u2 attribute_name_index;\n+ * u4 attribute_length;\n+ * u2 number_of_classes;\n+ * u2 classes[number_of_classes];\n+ * }\n+ *\/\n+public class PermittedSubclassesAttr extends ClassArrayAttr {\n+    public PermittedSubclassesAttr(ClassData cdata, List<ConstantPool.ConstCell> classes) {\n+        super(Tables.AttrTag.ATT_PermittedSubclasses.parsekey(), cdata, classes);\n+    }\n+}\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/PermittedSubclassesAttr.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.asmtools.jasm;\n-\n-import java.util.List;\n-\n-\/**\n- * The \"classes[]\" data of attributes\n- * JEP 360 (Sealed types): class file 59.65535\n- * PermittedSubtypes_attribute {\n- * u2 attribute_name_index;\n- * u4 attribute_length;\n- * u2 permitted_subtypes_count;\n- * u2 classes[permitted_subtypes_count];\n- * }\n- *\/\n-public class PermittedTypesAttr extends ClassArrayAttr {\n-    public PermittedTypesAttr(ClassData cdata, List<ConstantPool.ConstCell> classes) {\n-        super(Tables.AttrTag.ATT_PermittedSubtypes.parsekey(), cdata, classes);\n-    }\n-}\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/PermittedTypesAttr.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -232,1 +232,1 @@\n-        \/\/ PermittedSubtypes_attribute {\n+        \/\/ PermittedSubclasses_attribute {\n@@ -235,2 +235,2 @@\n-        \/\/    u2 permitted_subtypes_count;\n-        \/\/    u2 classes[permitted_subtypes_count];\n+        \/\/    u2 number_of_classes;\n+        \/\/    u2 classes[number_of_classes];\n@@ -238,1 +238,1 @@\n-        ATT_PermittedSubtypes                       (35, \"ATT_PermittedSubtypes\", \"PermittedSubtypes\");\n+        ATT_PermittedSubclasses                       (35, \"ATT_PermittedSubclasses\", \"PermittedSubclasses\");\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Tables.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-err.extra.permittedsubtypes.attribute=There may be at most one PermittedSubtypes attribute.\n+err.extra.permittedsubclasses.attribute=There may be at most one PermittedSubclasses attribute.\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/i18n.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1011,1 +1011,1 @@\n-                    \/\/  PermittedSubtypes_attribute {\n+                    \/\/  PermittedSubclasses_attribute {\n@@ -1014,2 +1014,2 @@\n-                    \/\/    u2 permitted_subtypes_count;\n-                    \/\/    u2 classes[permitted_subtypes_count];\n+                    \/\/    u2 number_of_classes;\n+                    \/\/    u2 classes[number_of_classes];\n@@ -1017,1 +1017,1 @@\n-                case ATT_PermittedSubtypes:\n+                case ATT_PermittedSubclasses:\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/ClassData.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * PermittedSubtypes_attribute {\n+ * PermittedSubclasses_attribute {\n@@ -43,2 +43,2 @@\n- * u2 permitted_subtypes_count;\n- * u2 classes[permitted_subtypes_count];\n+ * u2 number_of_classes;\n+ * u2 classes[number_of_classes];\n@@ -48,1 +48,1 @@\n-public class ClassArrayData {\n+public class ClassArrayData extends Indenter {\n@@ -75,1 +75,1 @@\n-        cls.out.print(name + \" \");\n+        cls.out.print(getIndentString() + name + \" \");\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ClassArrayData.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -99,2 +99,2 @@\n-    \/\/ The PermittedSubtypes of this class (JEP 360 (Sealed types): class file 59.65535)\n-    protected PermittedSubtypesData permittedSubtypes;\n+    \/\/ The PermittedSubclasses of this class (JEP 360 (Sealed types): class file 59.65535)\n+    protected PermittedSubclassesData permittedSubclassesData;\n@@ -231,3 +231,3 @@\n-            case ATT_PermittedSubtypes:\n-                \/\/ Read PermittedSubtypes Attribute (JEP 360 (Sealed types): class file 59.65535)\n-                permittedSubtypes = new PermittedSubtypesData(this).read(in, attrlen);\n+            case ATT_PermittedSubclasses:\n+                \/\/ Read PermittedSubclasses Attribute (JEP 360 (Sealed types): class file 59.65535)\n+                permittedSubclassesData = new PermittedSubclassesData(this).read(in, attrlen);\n@@ -451,3 +451,3 @@\n-            \/\/ Print PermittedSubtypes Attribute (JEP 360 (Sealed types): class file 59.65535)\n-            if( permittedSubtypes  != null) {\n-                permittedSubtypes.print();\n+            \/\/ Print PermittedSubclasses Attribute (JEP 360 (Sealed types): class file 59.65535)\n+            if( permittedSubclassesData != null) {\n+                permittedSubclassesData.print();\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ClassData.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.asmtools.jdis;\n+\n+import org.openjdk.asmtools.jasm.JasmTokens;\n+\n+import java.io.DataInputStream;\n+import java.io.IOException;\n+\n+\/**\n+ * The PermittedSubclasses attribute data\n+ * <p>\n+ * JEP 360 (Sealed types): class file 59.65535\n+ * PermittedSubclasses_attribute {\n+ * u2 attribute_name_index;\n+ * u4 attribute_length;\n+ * u2 number_of_classes;\n+ * u2 classes[number_of_classes];\n+ * }\n+ *\/\n+public class PermittedSubclassesData extends ClassArrayData {\n+    public PermittedSubclassesData(ClassData cls) {\n+        super(cls, JasmTokens.Token.PERMITTEDSUBCLASSES.parseKey());\n+    }\n+\n+    public PermittedSubclassesData read(DataInputStream in, int attribute_length) throws IOException, ClassFormatError {\n+        return (PermittedSubclassesData) super.read(in, attribute_length);\n+    }\n+}\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/PermittedSubclassesData.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.asmtools.jdis;\n-\n-import org.openjdk.asmtools.jasm.JasmTokens;\n-\n-import java.io.DataInputStream;\n-import java.io.IOException;\n-\n-\/**\n- * The NestMembers attribute data\n- * <p>\n- * JEP 360 (Sealed types): class file 59.65535\n- * PermittedSubtypes_attribute {\n- * u2 attribute_name_index;\n- * u4 attribute_length;\n- * u2 permitted_subtypes_count;\n- * u2 classes[permitted_subtypes_count];\n- * }\n- *\/\n-public class PermittedSubtypesData extends ClassArrayData {\n-    public PermittedSubtypesData(ClassData cls) {\n-        super(cls, JasmTokens.Token.PERMITTEDSUBTYPES.parseKey());\n-    }\n-\n-    public PermittedSubtypesData read(DataInputStream in, int attribute_length) throws IOException, ClassFormatError {\n-        return (PermittedSubtypesData) super.read(in, attribute_length);\n-    }\n-}\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/PermittedSubtypesData.java","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"}]}