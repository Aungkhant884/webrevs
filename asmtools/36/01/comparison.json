{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.asmtools.common.Environment;\n@@ -35,0 +36,2 @@\n+    public static final String VERSION_SWITCH=\"-version\";\n+    public static final String STDIN_SWITCH=\"-\";\n@@ -47,2 +50,2 @@\n-            usage(null, 0);\n-        } else if (cmd.equals(\"-version\")) {\n+            usage(null, Environment.OK);\n+        } else if (cmd.equals(VERSION_SWITCH)) {\n@@ -50,0 +53,1 @@\n+            System.exit(Environment.OK);\n","filename":"src\/org\/openjdk\/asmtools\/Main.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,0 +88,10 @@\n+\n+    protected void addStdIn() {\n+        for (ToolInput toolInput: fileList) {\n+            if (toolInput instanceof ToolInput.StdinInput) {\n+                \/\/or throw?\n+                return;\n+            }\n+        }\n+        fileList.add(new ToolInput.StdinInput());\n+    }\n","filename":"src\/org\/openjdk\/asmtools\/common\/Tool.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        private final byte[] bytes;\n+        protected byte[] bytes;\n@@ -85,0 +85,4 @@\n+        protected ByteInput() {\n+\n+        }\n+\n@@ -100,0 +104,4 @@\n+        protected void init() {\n+\n+        }\n+\n@@ -102,0 +110,1 @@\n+            init();\n@@ -107,0 +116,1 @@\n+            init();\n@@ -123,0 +133,2 @@\n+        private final InputStream originalStream;\n+\n@@ -124,1 +136,8 @@\n-            super(drainIs(is));\n+            originalStream = is;\n+        }\n+\n+        @Override\n+        protected void init() {\n+            if (bytes == null){\n+                bytes=drainIs(originalStream);\n+            }\n","filename":"src\/org\/openjdk\/asmtools\/common\/ToolInput.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.ArrayList;\n@@ -148,1 +147,4 @@\n-                    case \"-version\" -> environment.println(FULL_VERSION);\n+                    case org.openjdk.asmtools.Main.VERSION_SWITCH -> {\n+                        environment.println(FULL_VERSION);\n+                        System.exit(OK);\n+                    }\n@@ -204,0 +206,4 @@\n+                    case org.openjdk.asmtools.Main.STDIN_SWITCH -> {\n+                        addStdIn();\n+                        break;\n+                    }\n@@ -215,2 +221,3 @@\n-            if (fileList.size() == 0) {\n-                fileList.add(new ToolInput.StdinInput());\n+            if (fileList.isEmpty()) {\n+                usage();\n+                System.exit(FAILED);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Main.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import static org.openjdk.asmtools.common.Environment.OK;\n@@ -877,1 +878,1 @@\n-            } else if (arg.equals(\"-version\")) {\n+            } else if (arg.equals(org.openjdk.asmtools.Main.VERSION_SWITCH)) {\n@@ -879,0 +880,1 @@\n+                System.exit(OK);\n","filename":"src\/org\/openjdk\/asmtools\/jcdec\/Main.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -143,1 +143,4 @@\n-                    case \"-version\" -> environment.println(FULL_VERSION);\n+                    case org.openjdk.asmtools.Main.VERSION_SWITCH -> {\n+                        environment.println(FULL_VERSION);\n+                        System.exit(OK);\n+                    }\n@@ -148,0 +151,4 @@\n+                    case org.openjdk.asmtools.Main.STDIN_SWITCH -> {\n+                        addStdIn();\n+                        break;\n+                    }\n@@ -159,2 +166,3 @@\n-            if (fileList.size() == 0) {\n-                fileList.add(new ToolInput.StdinInput());\n+            if (fileList.isEmpty()) {\n+                usage();\n+                System.exit(FAILED);\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/Main.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.ArrayList;\n@@ -109,1 +108,1 @@\n-                case \"-version\":\n+                case org.openjdk.asmtools.Main.VERSION_SWITCH:\n@@ -111,1 +110,1 @@\n-                    break;\n+                    System.exit(OK);\n@@ -115,0 +114,3 @@\n+                case org.openjdk.asmtools.Main.STDIN_SWITCH:\n+                    addStdIn();\n+                    break;\n@@ -126,1 +128,2 @@\n-            fileList.add(new ToolInput.StdinInput());\n+            usage();\n+            System.exit(FAILED);\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/Main.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-                case \"-version\":\n+                case org.openjdk.asmtools.Main.VERSION_SWITCH:\n@@ -150,0 +150,3 @@\n+                case org.openjdk.asmtools.Main.STDIN_SWITCH:\n+                    addStdIn();\n+                    break;\n@@ -164,1 +167,2 @@\n-            fileList.add(new ToolInput.StdinInput());\n+            usage();\n+            System.exit(FAILED);\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/Main.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,23 @@\n+package org.openjdk.asmtools;\n+\n+import org.junit.jupiter.api.Assertions;\n+\n+import java.io.File;\n+import java.util.regex.Pattern;\n+\n+public class ClassPathClassWork {\n+\n+    protected static Class clazz;\n+    protected static String classFile;\n+    protected static Pattern className;\n+    protected static Pattern packageName;\n+\n+    public static void initClassData(Class testsClass) {\n+        clazz = testsClass;\n+        classFile = \".\/target\/classes\/\" + clazz.getName().replace('.', '\/') + \".class\";\n+        Assertions.assertTrue(new File(classFile).exists());\n+        className  = Pattern.compile(\"public .*class .*\" + clazz.getSimpleName() + \" extends .*\");\n+        packageName = Pattern.compile(\"package \"+clazz.getPackageName() + \";\");\n+    }\n+\n+}\n","filename":"test\/org\/openjdk\/asmtools\/ClassPathClassWork.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"added"},{"patch":"@@ -4,0 +4,1 @@\n+import org.junit.jupiter.api.BeforeAll;\n@@ -5,0 +6,1 @@\n+import org.openjdk.asmtools.ClassPathClassWork;\n@@ -7,1 +9,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -12,1 +13,1 @@\n-import java.io.PrintWriter;\n+import java.util.regex.Pattern;\n@@ -14,1 +15,6 @@\n-class MainTest {\n+class MainTest extends ClassPathClassWork {\n+\n+    @BeforeAll\n+    public static void prepareClass() {\n+        initClassData(org.openjdk.asmtools.jdec.Main.class);\n+    }\n@@ -33,1 +39,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), \".\/target\/classes\/org\/openjdk\/asmtools\/jdec\/Main.class\");\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile);\n@@ -46,1 +52,1 @@\n-        File in =  new File(\".\/target\/classes\/org\/openjdk\/asmtools\/jdec\/Main.class\");\n+        File in =  new File(classFile);\n@@ -50,1 +56,1 @@\n-            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput());\n+            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), org.openjdk.asmtools.Main.STDIN_SWITCH);\n","filename":"test\/org\/openjdk\/asmtools\/jdec\/MainTest.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+import org.junit.jupiter.api.BeforeAll;\n@@ -5,0 +6,1 @@\n+import org.openjdk.asmtools.ClassPathClassWork;\n@@ -14,1 +16,6 @@\n-class MainTest {\n+class MainTest extends ClassPathClassWork {\n+\n+    @BeforeAll\n+    public static void prepareClass() {\n+        initClassData(org.openjdk.asmtools.jdis.Main.class);\n+    }\n@@ -33,1 +40,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), \".\/target\/classes\/org\/openjdk\/asmtools\/jdis\/Main.class\");\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile);\n@@ -41,0 +48,2 @@\n+        Assertions.assertEquals(1, packageName.matcher(outs.getToolBos()).results().count());\n+        Assertions.assertEquals(1, className.matcher(outs.getToolBos()).results().count());\n@@ -46,1 +55,1 @@\n-        File in =  new File(\".\/target\/classes\/org\/openjdk\/asmtools\/jdis\/Main.class\");\n+        File in = new File(classFile);\n@@ -50,1 +59,1 @@\n-            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput());\n+            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), org.openjdk.asmtools.Main.STDIN_SWITCH);\n@@ -58,1 +67,3 @@\n-        }finally {\n+            Assertions.assertEquals(1, packageName.matcher(outs.getToolBos()).results().count());\n+            Assertions.assertEquals(1, className.matcher(outs.getToolBos()).results().count());\n+        } finally {\n@@ -63,1 +74,0 @@\n-\n@@ -67,1 +77,1 @@\n-        String testClazz = \"org\/openjdk\/asmtools\/jdis\/Main\";\n+        String testClazz = clazz.getName().replace('.', '\/');\n@@ -69,1 +79,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), \".\/target\/classes\/\" + testClazz + \".class\");\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile);\n@@ -117,0 +127,23 @@\n+    @Test\n+    public void mainBothFileAndStreamIsRead() throws IOException {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        File in = new File(classFile);\n+        InputStream is = System.in;\n+        try {\n+            System.setIn(new FileInputStream(in));\n+            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile, org.openjdk.asmtools.Main.STDIN_SWITCH, classFile, org.openjdk.asmtools.Main.STDIN_SWITCH);\n+            int i = decoder.disasm();\n+            outs.flush();\n+            Assertions.assertEquals(0, i);\n+            Assertions.assertFalse(outs.getToolBos().isEmpty());\n+            Assertions.assertTrue(outs.getErrorBos().isEmpty());\n+            Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+            Assertions.assertTrue(outs.getToolBos().contains(\"invoke\"));\n+            \/\/3, both files, but stream only once, despite two are sets\n+            Assertions.assertEquals(3, packageName.matcher(outs.getToolBos()).results().count());\n+            Assertions.assertEquals(3, className.matcher(outs.getToolBos()).results().count());\n+        } finally {\n+            System.setIn(is);\n+        }\n+    }\n+\n","filename":"test\/org\/openjdk\/asmtools\/jdis\/MainTest.java","additions":41,"deletions":8,"binary":false,"changes":49,"status":"modified"}]}