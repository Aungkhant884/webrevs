{"files":[{"patch":"@@ -464,1 +464,1 @@\n-            return null;\n+            return null; \/\/If you are here, you probbaly wanted ToolOutput.ByteOutput for assmbled binary output\n","filename":"src\/org\/openjdk\/asmtools\/common\/ToolOutput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,2 +138,0 @@\n-                String fqn = parser.getClassesData()[0].myClassName;\n-                environment.getToolOutput().startClass(fqn, Optional.of(parser.getClassesData()[0].fileExtension), environment);\n@@ -142,0 +140,2 @@\n+                    String fqn = cd.myClassName;\n+                    environment.getToolOutput().startClass(fqn, Optional.of(cd.fileExtension), environment);\n@@ -146,0 +146,1 @@\n+                    environment.getToolOutput().finishClass(fqn);\n@@ -147,1 +148,0 @@\n-                environment.getToolOutput().finishClass(fqn);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Main.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+package org.openjdk.asmtools.jasm;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.openjdk.asmtools.common.ToolInput;\n+import org.openjdk.asmtools.common.ToolOutput;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+public class MultipleFilesInSingleJasmTest {\n+\n+    @Test\n+    public void clfacc00610m10pTest() throws IOException {\n+        byte[] jasmFile = getJasmFile(\"clfacc00610m10p.jasm\");\n+        ToolInput file = new ToolInput.ByteInput(jasmFile);\n+        ToolOutput.ByteOutput output = new ToolOutput.ByteOutput();\n+        ToolOutput.DualStreamToolOutput log = new ToolOutput.SingleDualOutputStreamOutput(); \/\/todo hide to ToolOutput.StringLog once done\n+        org.openjdk.asmtools.jasm.Main jasm = new org.openjdk.asmtools.jasm.Main(output, log, file, \"-v\");\n+        int i = jasm.compile();\n+        Assertions.assertEquals(0, i);\n+        Assertions.assertEquals(2, output.getOutputs().size());\n+    }\n+\n+    private byte[] getJasmFile(String s) throws IOException {\n+        InputStream is = this.getClass().getResourceAsStream(s);\n+        byte[] bytes = null;\n+        try (is) {\n+            bytes = is.readAllBytes();\n+        }\n+        Assertions.assertNotNull(bytes);\n+        String jasm = new String(bytes, StandardCharsets.UTF_8);\n+        Assertions.assertNotNull(jasm);\n+        return bytes;\n+    }\n+\n+    @Test\n+    public void spinum00101m10pTest() throws IOException {\n+        byte[] jasmFile = getJasmFile(\"spinum00101m10p.jasm\");\n+        ToolInput file = new ToolInput.ByteInput(jasmFile);\n+        ToolOutput.ByteOutput output = new ToolOutput.ByteOutput();\n+        ToolOutput.DualStreamToolOutput log = new ToolOutput.SingleDualOutputStreamOutput(); \/\/todo hide to ToolOutput.StringLog once done\n+        org.openjdk.asmtools.jasm.Main jasm = new org.openjdk.asmtools.jasm.Main(output, log, file, \"-v\");\n+        int i = jasm.compile();\n+        Assertions.assertEquals(0, i);\n+        Assertions.assertEquals(258, output.getOutputs().size());\n+\n+    }\n+}\n","filename":"test\/java\/org\/openjdk\/asmtools\/jasm\/MultipleFilesInSingleJasmTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+package org.openjdk.asmtools.jcoder;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.openjdk.asmtools.common.ToolInput;\n+import org.openjdk.asmtools.common.ToolOutput;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+public class MultipleFilesInSingleJcoderTest {\n+\n+    @Test\n+    public void jcod12Test() throws IOException {\n+        byte[] jcodFile = getJcodFile(\"12.jcod\");\n+        ToolInput file = new ToolInput.ByteInput(jcodFile);\n+        ToolOutput.ByteOutput output = new ToolOutput.ByteOutput();\n+        ToolOutput.DualStreamToolOutput log = new ToolOutput.SingleDualOutputStreamOutput(); \/\/todo hide to ToolOutput.StringLog once done\n+        org.openjdk.asmtools.jcoder.Main jcod = new org.openjdk.asmtools.jcoder.Main(output, log, file, \"-v\");\n+        int i = jcod.compile();\n+        Assertions.assertEquals(0, i);\n+        Assertions.assertEquals(2, output.getOutputs().size());\n+    }\n+\n+    private byte[] getJcodFile(String s) throws IOException {\n+        InputStream is = this.getClass().getResourceAsStream(s);\n+        byte[] bytes = null;\n+        try (is) {\n+            bytes = is.readAllBytes();\n+        }\n+        Assertions.assertNotNull(bytes);\n+        String jasm = new String(bytes, StandardCharsets.UTF_8);\n+        Assertions.assertNotNull(jasm);\n+        return bytes;\n+    }\n+\n+}\n","filename":"test\/java\/org\/openjdk\/asmtools\/jcoder\/MultipleFilesInSingleJcoderTest.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Ident: @(#)clfacc00610m10p.jasm generated from:%Z%%M% %I% %E%\n+ *\n+ * Copyright (c) 1996, 2018 Oracle and\/or its affiliates. All rights reserved.\n+ * ORACLE PROPRIETARY\/CONFIDENTIAL. Use is subject to license terms.\n+ *\/\n+\n+package javasoft\/sqe\/tests\/vm\/classfmt\/clf\/clfacc006\/clfacc00610m1;\n+\n+public class  clfacc00610m10p {\n+\n+public Method <init>:\"()V\"\n+\tstack 4 locals 1\n+{\n+\taload_0;\n+\tinvokespecial  Method java\/lang\/Object.<init>:\"()V\";\n+\n+\ticonst_1;\n+\tanewarray class clfacc00610m10p_;\n+\tpop;\n+\n+       \treturn;\n+}\n+} \n+\n+private class clfacc00610m10p_ {\n+\n+public Method <init>:\"()V\"\n+\tstack 1 locals 1\n+{\n+\taload_0;\n+\tinvokespecial  Method java\/lang\/Object.<init>:\"()V\";\n+\treturn;\n+}\n+}\n","filename":"test\/resources\/org\/openjdk\/asmtools\/jasm\/clfacc00610m10p.jasm","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,790 @@\n+\/*\n+ * Ident: @(#)spinum00101m10p.jasm generated from:%Z%%M% %I% %E%\n+ *\n+ * Copyright (c) 1996, 2018 Oracle and\/or its affiliates. All rights reserved.\n+ * ORACLE PROPRIETARY\/CONFIDENTIAL. Use is subject to license terms.\n+ *\/\n+\n+package javasoft\/sqe\/tests\/vm\/classfmt\/lmt\/spinum001\/spinum00101m1;\n+\n+interface spinum00101m1_0I  {\n+} \/\/ end interface\n+interface spinum00101m1_1I  {\n+} \/\/ end interface\n+interface spinum00101m1_2I  {\n+} \/\/ end interface\n+interface spinum00101m1_3I  {\n+} \/\/ end interface\n+interface spinum00101m1_4I  {\n+} \/\/ end interface\n+interface spinum00101m1_5I  {\n+} \/\/ end interface\n+interface spinum00101m1_6I  {\n+} \/\/ end interface\n+interface spinum00101m1_7I  {\n+} \/\/ end interface\n+interface spinum00101m1_8I  {\n+} \/\/ end interface\n+interface spinum00101m1_9I  {\n+} \/\/ end interface\n+interface spinum00101m1_10I  {\n+} \/\/ end interface\n+interface spinum00101m1_11I  {\n+} \/\/ end interface\n+interface spinum00101m1_12I  {\n+} \/\/ end interface\n+interface spinum00101m1_13I  {\n+} \/\/ end interface\n+interface spinum00101m1_14I  {\n+} \/\/ end interface\n+interface spinum00101m1_15I  {\n+} \/\/ end interface\n+interface spinum00101m1_16I  {\n+} \/\/ end interface\n+interface spinum00101m1_17I  {\n+} \/\/ end interface\n+interface spinum00101m1_18I  {\n+} \/\/ end interface\n+interface spinum00101m1_19I  {\n+} \/\/ end interface\n+interface spinum00101m1_20I  {\n+} \/\/ end interface\n+interface spinum00101m1_21I  {\n+} \/\/ end interface\n+interface spinum00101m1_22I  {\n+} \/\/ end interface\n+interface spinum00101m1_23I  {\n+} \/\/ end interface\n+interface spinum00101m1_24I  {\n+} \/\/ end interface\n+interface spinum00101m1_25I  {\n+} \/\/ end interface\n+interface spinum00101m1_26I  {\n+} \/\/ end interface\n+interface spinum00101m1_27I  {\n+} \/\/ end interface\n+interface spinum00101m1_28I  {\n+} \/\/ end interface\n+interface spinum00101m1_29I  {\n+} \/\/ end interface\n+interface spinum00101m1_30I  {\n+} \/\/ end interface\n+interface spinum00101m1_31I  {\n+} \/\/ end interface\n+interface spinum00101m1_32I  {\n+} \/\/ end interface\n+interface spinum00101m1_33I  {\n+} \/\/ end interface\n+interface spinum00101m1_34I  {\n+} \/\/ end interface\n+interface spinum00101m1_35I  {\n+} \/\/ end interface\n+interface spinum00101m1_36I  {\n+} \/\/ end interface\n+interface spinum00101m1_37I  {\n+} \/\/ end interface\n+interface spinum00101m1_38I  {\n+} \/\/ end interface\n+interface spinum00101m1_39I  {\n+} \/\/ end interface\n+interface spinum00101m1_40I  {\n+} \/\/ end interface\n+interface spinum00101m1_41I  {\n+} \/\/ end interface\n+interface spinum00101m1_42I  {\n+} \/\/ end interface\n+interface spinum00101m1_43I  {\n+} \/\/ end interface\n+interface spinum00101m1_44I  {\n+} \/\/ end interface\n+interface spinum00101m1_45I  {\n+} \/\/ end interface\n+interface spinum00101m1_46I  {\n+} \/\/ end interface\n+interface spinum00101m1_47I  {\n+} \/\/ end interface\n+interface spinum00101m1_48I  {\n+} \/\/ end interface\n+interface spinum00101m1_49I  {\n+} \/\/ end interface\n+interface spinum00101m1_50I  {\n+} \/\/ end interface\n+interface spinum00101m1_51I  {\n+} \/\/ end interface\n+interface spinum00101m1_52I  {\n+} \/\/ end interface\n+interface spinum00101m1_53I  {\n+} \/\/ end interface\n+interface spinum00101m1_54I  {\n+} \/\/ end interface\n+interface spinum00101m1_55I  {\n+} \/\/ end interface\n+interface spinum00101m1_56I  {\n+} \/\/ end interface\n+interface spinum00101m1_57I  {\n+} \/\/ end interface\n+interface spinum00101m1_58I  {\n+} \/\/ end interface\n+interface spinum00101m1_59I  {\n+} \/\/ end interface\n+interface spinum00101m1_60I  {\n+} \/\/ end interface\n+interface spinum00101m1_61I  {\n+} \/\/ end interface\n+interface spinum00101m1_62I  {\n+} \/\/ end interface\n+interface spinum00101m1_63I  {\n+} \/\/ end interface\n+interface spinum00101m1_64I  {\n+} \/\/ end interface\n+interface spinum00101m1_65I  {\n+} \/\/ end interface\n+interface spinum00101m1_66I  {\n+} \/\/ end interface\n+interface spinum00101m1_67I  {\n+} \/\/ end interface\n+interface spinum00101m1_68I  {\n+} \/\/ end interface\n+interface spinum00101m1_69I  {\n+} \/\/ end interface\n+interface spinum00101m1_70I  {\n+} \/\/ end interface\n+interface spinum00101m1_71I  {\n+} \/\/ end interface\n+interface spinum00101m1_72I  {\n+} \/\/ end interface\n+interface spinum00101m1_73I  {\n+} \/\/ end interface\n+interface spinum00101m1_74I  {\n+} \/\/ end interface\n+interface spinum00101m1_75I  {\n+} \/\/ end interface\n+interface spinum00101m1_76I  {\n+} \/\/ end interface\n+interface spinum00101m1_77I  {\n+} \/\/ end interface\n+interface spinum00101m1_78I  {\n+} \/\/ end interface\n+interface spinum00101m1_79I  {\n+} \/\/ end interface\n+interface spinum00101m1_80I  {\n+} \/\/ end interface\n+interface spinum00101m1_81I  {\n+} \/\/ end interface\n+interface spinum00101m1_82I  {\n+} \/\/ end interface\n+interface spinum00101m1_83I  {\n+} \/\/ end interface\n+interface spinum00101m1_84I  {\n+} \/\/ end interface\n+interface spinum00101m1_85I  {\n+} \/\/ end interface\n+interface spinum00101m1_86I  {\n+} \/\/ end interface\n+interface spinum00101m1_87I  {\n+} \/\/ end interface\n+interface spinum00101m1_88I  {\n+} \/\/ end interface\n+interface spinum00101m1_89I  {\n+} \/\/ end interface\n+interface spinum00101m1_90I  {\n+} \/\/ end interface\n+interface spinum00101m1_91I  {\n+} \/\/ end interface\n+interface spinum00101m1_92I  {\n+} \/\/ end interface\n+interface spinum00101m1_93I  {\n+} \/\/ end interface\n+interface spinum00101m1_94I  {\n+} \/\/ end interface\n+interface spinum00101m1_95I  {\n+} \/\/ end interface\n+interface spinum00101m1_96I  {\n+} \/\/ end interface\n+interface spinum00101m1_97I  {\n+} \/\/ end interface\n+interface spinum00101m1_98I  {\n+} \/\/ end interface\n+interface spinum00101m1_99I  {\n+} \/\/ end interface\n+interface spinum00101m1_100I  {\n+} \/\/ end interface\n+interface spinum00101m1_101I  {\n+} \/\/ end interface\n+interface spinum00101m1_102I  {\n+} \/\/ end interface\n+interface spinum00101m1_103I  {\n+} \/\/ end interface\n+interface spinum00101m1_104I  {\n+} \/\/ end interface\n+interface spinum00101m1_105I  {\n+} \/\/ end interface\n+interface spinum00101m1_106I  {\n+} \/\/ end interface\n+interface spinum00101m1_107I  {\n+} \/\/ end interface\n+interface spinum00101m1_108I  {\n+} \/\/ end interface\n+interface spinum00101m1_109I  {\n+} \/\/ end interface\n+interface spinum00101m1_110I  {\n+} \/\/ end interface\n+interface spinum00101m1_111I  {\n+} \/\/ end interface\n+interface spinum00101m1_112I  {\n+} \/\/ end interface\n+interface spinum00101m1_113I  {\n+} \/\/ end interface\n+interface spinum00101m1_114I  {\n+} \/\/ end interface\n+interface spinum00101m1_115I  {\n+} \/\/ end interface\n+interface spinum00101m1_116I  {\n+} \/\/ end interface\n+interface spinum00101m1_117I  {\n+} \/\/ end interface\n+interface spinum00101m1_118I  {\n+} \/\/ end interface\n+interface spinum00101m1_119I  {\n+} \/\/ end interface\n+interface spinum00101m1_120I  {\n+} \/\/ end interface\n+interface spinum00101m1_121I  {\n+} \/\/ end interface\n+interface spinum00101m1_122I  {\n+} \/\/ end interface\n+interface spinum00101m1_123I  {\n+} \/\/ end interface\n+interface spinum00101m1_124I  {\n+} \/\/ end interface\n+interface spinum00101m1_125I  {\n+} \/\/ end interface\n+interface spinum00101m1_126I  {\n+} \/\/ end interface\n+interface spinum00101m1_127I  {\n+} \/\/ end interface\n+interface spinum00101m1_128I  {\n+} \/\/ end interface\n+interface spinum00101m1_129I  {\n+} \/\/ end interface\n+interface spinum00101m1_130I  {\n+} \/\/ end interface\n+interface spinum00101m1_131I  {\n+} \/\/ end interface\n+interface spinum00101m1_132I  {\n+} \/\/ end interface\n+interface spinum00101m1_133I  {\n+} \/\/ end interface\n+interface spinum00101m1_134I  {\n+} \/\/ end interface\n+interface spinum00101m1_135I  {\n+} \/\/ end interface\n+interface spinum00101m1_136I  {\n+} \/\/ end interface\n+interface spinum00101m1_137I  {\n+} \/\/ end interface\n+interface spinum00101m1_138I  {\n+} \/\/ end interface\n+interface spinum00101m1_139I  {\n+} \/\/ end interface\n+interface spinum00101m1_140I  {\n+} \/\/ end interface\n+interface spinum00101m1_141I  {\n+} \/\/ end interface\n+interface spinum00101m1_142I  {\n+} \/\/ end interface\n+interface spinum00101m1_143I  {\n+} \/\/ end interface\n+interface spinum00101m1_144I  {\n+} \/\/ end interface\n+interface spinum00101m1_145I  {\n+} \/\/ end interface\n+interface spinum00101m1_146I  {\n+} \/\/ end interface\n+interface spinum00101m1_147I  {\n+} \/\/ end interface\n+interface spinum00101m1_148I  {\n+} \/\/ end interface\n+interface spinum00101m1_149I  {\n+} \/\/ end interface\n+interface spinum00101m1_150I  {\n+} \/\/ end interface\n+interface spinum00101m1_151I  {\n+} \/\/ end interface\n+interface spinum00101m1_152I  {\n+} \/\/ end interface\n+interface spinum00101m1_153I  {\n+} \/\/ end interface\n+interface spinum00101m1_154I  {\n+} \/\/ end interface\n+interface spinum00101m1_155I  {\n+} \/\/ end interface\n+interface spinum00101m1_156I  {\n+} \/\/ end interface\n+interface spinum00101m1_157I  {\n+} \/\/ end interface\n+interface spinum00101m1_158I  {\n+} \/\/ end interface\n+interface spinum00101m1_159I  {\n+} \/\/ end interface\n+interface spinum00101m1_160I  {\n+} \/\/ end interface\n+interface spinum00101m1_161I  {\n+} \/\/ end interface\n+interface spinum00101m1_162I  {\n+} \/\/ end interface\n+interface spinum00101m1_163I  {\n+} \/\/ end interface\n+interface spinum00101m1_164I  {\n+} \/\/ end interface\n+interface spinum00101m1_165I  {\n+} \/\/ end interface\n+interface spinum00101m1_166I  {\n+} \/\/ end interface\n+interface spinum00101m1_167I  {\n+} \/\/ end interface\n+interface spinum00101m1_168I  {\n+} \/\/ end interface\n+interface spinum00101m1_169I  {\n+} \/\/ end interface\n+interface spinum00101m1_170I  {\n+} \/\/ end interface\n+interface spinum00101m1_171I  {\n+} \/\/ end interface\n+interface spinum00101m1_172I  {\n+} \/\/ end interface\n+interface spinum00101m1_173I  {\n+} \/\/ end interface\n+interface spinum00101m1_174I  {\n+} \/\/ end interface\n+interface spinum00101m1_175I  {\n+} \/\/ end interface\n+interface spinum00101m1_176I  {\n+} \/\/ end interface\n+interface spinum00101m1_177I  {\n+} \/\/ end interface\n+interface spinum00101m1_178I  {\n+} \/\/ end interface\n+interface spinum00101m1_179I  {\n+} \/\/ end interface\n+interface spinum00101m1_180I  {\n+} \/\/ end interface\n+interface spinum00101m1_181I  {\n+} \/\/ end interface\n+interface spinum00101m1_182I  {\n+} \/\/ end interface\n+interface spinum00101m1_183I  {\n+} \/\/ end interface\n+interface spinum00101m1_184I  {\n+} \/\/ end interface\n+interface spinum00101m1_185I  {\n+} \/\/ end interface\n+interface spinum00101m1_186I  {\n+} \/\/ end interface\n+interface spinum00101m1_187I  {\n+} \/\/ end interface\n+interface spinum00101m1_188I  {\n+} \/\/ end interface\n+interface spinum00101m1_189I  {\n+} \/\/ end interface\n+interface spinum00101m1_190I  {\n+} \/\/ end interface\n+interface spinum00101m1_191I  {\n+} \/\/ end interface\n+interface spinum00101m1_192I  {\n+} \/\/ end interface\n+interface spinum00101m1_193I  {\n+} \/\/ end interface\n+interface spinum00101m1_194I  {\n+} \/\/ end interface\n+interface spinum00101m1_195I  {\n+} \/\/ end interface\n+interface spinum00101m1_196I  {\n+} \/\/ end interface\n+interface spinum00101m1_197I  {\n+} \/\/ end interface\n+interface spinum00101m1_198I  {\n+} \/\/ end interface\n+interface spinum00101m1_199I  {\n+} \/\/ end interface\n+interface spinum00101m1_200I  {\n+} \/\/ end interface\n+interface spinum00101m1_201I  {\n+} \/\/ end interface\n+interface spinum00101m1_202I  {\n+} \/\/ end interface\n+interface spinum00101m1_203I  {\n+} \/\/ end interface\n+interface spinum00101m1_204I  {\n+} \/\/ end interface\n+interface spinum00101m1_205I  {\n+} \/\/ end interface\n+interface spinum00101m1_206I  {\n+} \/\/ end interface\n+interface spinum00101m1_207I  {\n+} \/\/ end interface\n+interface spinum00101m1_208I  {\n+} \/\/ end interface\n+interface spinum00101m1_209I  {\n+} \/\/ end interface\n+interface spinum00101m1_210I  {\n+} \/\/ end interface\n+interface spinum00101m1_211I  {\n+} \/\/ end interface\n+interface spinum00101m1_212I  {\n+} \/\/ end interface\n+interface spinum00101m1_213I  {\n+} \/\/ end interface\n+interface spinum00101m1_214I  {\n+} \/\/ end interface\n+interface spinum00101m1_215I  {\n+} \/\/ end interface\n+interface spinum00101m1_216I  {\n+} \/\/ end interface\n+interface spinum00101m1_217I  {\n+} \/\/ end interface\n+interface spinum00101m1_218I  {\n+} \/\/ end interface\n+interface spinum00101m1_219I  {\n+} \/\/ end interface\n+interface spinum00101m1_220I  {\n+} \/\/ end interface\n+interface spinum00101m1_221I  {\n+} \/\/ end interface\n+interface spinum00101m1_222I  {\n+} \/\/ end interface\n+interface spinum00101m1_223I  {\n+} \/\/ end interface\n+interface spinum00101m1_224I  {\n+} \/\/ end interface\n+interface spinum00101m1_225I  {\n+} \/\/ end interface\n+interface spinum00101m1_226I  {\n+} \/\/ end interface\n+interface spinum00101m1_227I  {\n+} \/\/ end interface\n+interface spinum00101m1_228I  {\n+} \/\/ end interface\n+interface spinum00101m1_229I  {\n+} \/\/ end interface\n+interface spinum00101m1_230I  {\n+} \/\/ end interface\n+interface spinum00101m1_231I  {\n+} \/\/ end interface\n+interface spinum00101m1_232I  {\n+} \/\/ end interface\n+interface spinum00101m1_233I  {\n+} \/\/ end interface\n+interface spinum00101m1_234I  {\n+} \/\/ end interface\n+interface spinum00101m1_235I  {\n+} \/\/ end interface\n+interface spinum00101m1_236I  {\n+} \/\/ end interface\n+interface spinum00101m1_237I  {\n+} \/\/ end interface\n+interface spinum00101m1_238I  {\n+} \/\/ end interface\n+interface spinum00101m1_239I  {\n+} \/\/ end interface\n+interface spinum00101m1_240I  {\n+} \/\/ end interface\n+interface spinum00101m1_241I  {\n+} \/\/ end interface\n+interface spinum00101m1_242I  {\n+} \/\/ end interface\n+interface spinum00101m1_243I  {\n+} \/\/ end interface\n+interface spinum00101m1_244I  {\n+} \/\/ end interface\n+interface spinum00101m1_245I  {\n+} \/\/ end interface\n+interface spinum00101m1_246I  {\n+} \/\/ end interface\n+interface spinum00101m1_247I  {\n+} \/\/ end interface\n+interface spinum00101m1_248I  {\n+} \/\/ end interface\n+interface spinum00101m1_249I  {\n+} \/\/ end interface\n+interface spinum00101m1_250I  {\n+} \/\/ end interface\n+interface spinum00101m1_251I  {\n+} \/\/ end interface\n+interface spinum00101m1_252I  {\n+} \/\/ end interface\n+interface spinum00101m1_253I  {\n+} \/\/ end interface\n+interface spinum00101m1_254I  {\n+} \/\/ end interface\n+interface spinum00101m1_255I  {\n+} \/\/ end interface\n+interface spinum00101m1_256I  {\n+} \/\/ end interface\n+\n+public class spinum00101m10p implements \n+ spinum00101m1_0I, \n+ spinum00101m1_1I, \n+ spinum00101m1_2I, \n+ spinum00101m1_3I, \n+ spinum00101m1_4I, \n+ spinum00101m1_5I, \n+ spinum00101m1_6I, \n+ spinum00101m1_7I, \n+ spinum00101m1_8I, \n+ spinum00101m1_9I, \n+ spinum00101m1_10I, \n+ spinum00101m1_11I, \n+ spinum00101m1_12I, \n+ spinum00101m1_13I, \n+ spinum00101m1_14I, \n+ spinum00101m1_15I, \n+ spinum00101m1_16I, \n+ spinum00101m1_17I, \n+ spinum00101m1_18I, \n+ spinum00101m1_19I, \n+ spinum00101m1_20I, \n+ spinum00101m1_21I, \n+ spinum00101m1_22I, \n+ spinum00101m1_23I, \n+ spinum00101m1_24I, \n+ spinum00101m1_25I, \n+ spinum00101m1_26I, \n+ spinum00101m1_27I, \n+ spinum00101m1_28I, \n+ spinum00101m1_29I, \n+ spinum00101m1_30I, \n+ spinum00101m1_31I, \n+ spinum00101m1_32I, \n+ spinum00101m1_33I, \n+ spinum00101m1_34I, \n+ spinum00101m1_35I, \n+ spinum00101m1_36I, \n+ spinum00101m1_37I, \n+ spinum00101m1_38I, \n+ spinum00101m1_39I, \n+ spinum00101m1_40I, \n+ spinum00101m1_41I, \n+ spinum00101m1_42I, \n+ spinum00101m1_43I, \n+ spinum00101m1_44I, \n+ spinum00101m1_45I, \n+ spinum00101m1_46I, \n+ spinum00101m1_47I, \n+ spinum00101m1_48I, \n+ spinum00101m1_49I, \n+ spinum00101m1_50I, \n+ spinum00101m1_51I, \n+ spinum00101m1_52I, \n+ spinum00101m1_53I, \n+ spinum00101m1_54I, \n+ spinum00101m1_55I, \n+ spinum00101m1_56I, \n+ spinum00101m1_57I, \n+ spinum00101m1_58I, \n+ spinum00101m1_59I, \n+ spinum00101m1_60I, \n+ spinum00101m1_61I, \n+ spinum00101m1_62I, \n+ spinum00101m1_63I, \n+ spinum00101m1_64I, \n+ spinum00101m1_65I, \n+ spinum00101m1_66I, \n+ spinum00101m1_67I, \n+ spinum00101m1_68I, \n+ spinum00101m1_69I, \n+ spinum00101m1_70I, \n+ spinum00101m1_71I, \n+ spinum00101m1_72I, \n+ spinum00101m1_73I, \n+ spinum00101m1_74I, \n+ spinum00101m1_75I, \n+ spinum00101m1_76I, \n+ spinum00101m1_77I, \n+ spinum00101m1_78I, \n+ spinum00101m1_79I, \n+ spinum00101m1_80I, \n+ spinum00101m1_81I, \n+ spinum00101m1_82I, \n+ spinum00101m1_83I, \n+ spinum00101m1_84I, \n+ spinum00101m1_85I, \n+ spinum00101m1_86I, \n+ spinum00101m1_87I, \n+ spinum00101m1_88I, \n+ spinum00101m1_89I, \n+ spinum00101m1_90I, \n+ spinum00101m1_91I, \n+ spinum00101m1_92I, \n+ spinum00101m1_93I, \n+ spinum00101m1_94I, \n+ spinum00101m1_95I, \n+ spinum00101m1_96I, \n+ spinum00101m1_97I, \n+ spinum00101m1_98I, \n+ spinum00101m1_99I, \n+ spinum00101m1_100I, \n+ spinum00101m1_101I, \n+ spinum00101m1_102I, \n+ spinum00101m1_103I, \n+ spinum00101m1_104I, \n+ spinum00101m1_105I, \n+ spinum00101m1_106I, \n+ spinum00101m1_107I, \n+ spinum00101m1_108I, \n+ spinum00101m1_109I, \n+ spinum00101m1_110I, \n+ spinum00101m1_111I, \n+ spinum00101m1_112I, \n+ spinum00101m1_113I, \n+ spinum00101m1_114I, \n+ spinum00101m1_115I, \n+ spinum00101m1_116I, \n+ spinum00101m1_117I, \n+ spinum00101m1_118I, \n+ spinum00101m1_119I, \n+ spinum00101m1_120I, \n+ spinum00101m1_121I, \n+ spinum00101m1_122I, \n+ spinum00101m1_123I, \n+ spinum00101m1_124I, \n+ spinum00101m1_125I, \n+ spinum00101m1_126I, \n+ spinum00101m1_127I, \n+ spinum00101m1_128I, \n+ spinum00101m1_129I, \n+ spinum00101m1_130I, \n+ spinum00101m1_131I, \n+ spinum00101m1_132I, \n+ spinum00101m1_133I, \n+ spinum00101m1_134I, \n+ spinum00101m1_135I, \n+ spinum00101m1_136I, \n+ spinum00101m1_137I, \n+ spinum00101m1_138I, \n+ spinum00101m1_139I, \n+ spinum00101m1_140I, \n+ spinum00101m1_141I, \n+ spinum00101m1_142I, \n+ spinum00101m1_143I, \n+ spinum00101m1_144I, \n+ spinum00101m1_145I, \n+ spinum00101m1_146I, \n+ spinum00101m1_147I, \n+ spinum00101m1_148I, \n+ spinum00101m1_149I, \n+ spinum00101m1_150I, \n+ spinum00101m1_151I, \n+ spinum00101m1_152I, \n+ spinum00101m1_153I, \n+ spinum00101m1_154I, \n+ spinum00101m1_155I, \n+ spinum00101m1_156I, \n+ spinum00101m1_157I, \n+ spinum00101m1_158I, \n+ spinum00101m1_159I, \n+ spinum00101m1_160I, \n+ spinum00101m1_161I, \n+ spinum00101m1_162I, \n+ spinum00101m1_163I, \n+ spinum00101m1_164I, \n+ spinum00101m1_165I, \n+ spinum00101m1_166I, \n+ spinum00101m1_167I, \n+ spinum00101m1_168I, \n+ spinum00101m1_169I, \n+ spinum00101m1_170I, \n+ spinum00101m1_171I, \n+ spinum00101m1_172I, \n+ spinum00101m1_173I, \n+ spinum00101m1_174I, \n+ spinum00101m1_175I, \n+ spinum00101m1_176I, \n+ spinum00101m1_177I, \n+ spinum00101m1_178I, \n+ spinum00101m1_179I, \n+ spinum00101m1_180I, \n+ spinum00101m1_181I, \n+ spinum00101m1_182I, \n+ spinum00101m1_183I, \n+ spinum00101m1_184I, \n+ spinum00101m1_185I, \n+ spinum00101m1_186I, \n+ spinum00101m1_187I, \n+ spinum00101m1_188I, \n+ spinum00101m1_189I, \n+ spinum00101m1_190I, \n+ spinum00101m1_191I, \n+ spinum00101m1_192I, \n+ spinum00101m1_193I, \n+ spinum00101m1_194I, \n+ spinum00101m1_195I, \n+ spinum00101m1_196I, \n+ spinum00101m1_197I, \n+ spinum00101m1_198I, \n+ spinum00101m1_199I, \n+ spinum00101m1_200I, \n+ spinum00101m1_201I, \n+ spinum00101m1_202I, \n+ spinum00101m1_203I, \n+ spinum00101m1_204I, \n+ spinum00101m1_205I, \n+ spinum00101m1_206I, \n+ spinum00101m1_207I, \n+ spinum00101m1_208I, \n+ spinum00101m1_209I, \n+ spinum00101m1_210I, \n+ spinum00101m1_211I, \n+ spinum00101m1_212I, \n+ spinum00101m1_213I, \n+ spinum00101m1_214I, \n+ spinum00101m1_215I, \n+ spinum00101m1_216I, \n+ spinum00101m1_217I, \n+ spinum00101m1_218I, \n+ spinum00101m1_219I, \n+ spinum00101m1_220I, \n+ spinum00101m1_221I, \n+ spinum00101m1_222I, \n+ spinum00101m1_223I, \n+ spinum00101m1_224I, \n+ spinum00101m1_225I, \n+ spinum00101m1_226I, \n+ spinum00101m1_227I, \n+ spinum00101m1_228I, \n+ spinum00101m1_229I, \n+ spinum00101m1_230I, \n+ spinum00101m1_231I, \n+ spinum00101m1_232I, \n+ spinum00101m1_233I, \n+ spinum00101m1_234I, \n+ spinum00101m1_235I, \n+ spinum00101m1_236I, \n+ spinum00101m1_237I, \n+ spinum00101m1_238I, \n+ spinum00101m1_239I, \n+ spinum00101m1_240I, \n+ spinum00101m1_241I, \n+ spinum00101m1_242I, \n+ spinum00101m1_243I, \n+ spinum00101m1_244I, \n+ spinum00101m1_245I, \n+ spinum00101m1_246I, \n+ spinum00101m1_247I, \n+ spinum00101m1_248I, \n+ spinum00101m1_249I, \n+ spinum00101m1_250I, \n+ spinum00101m1_251I, \n+ spinum00101m1_252I, \n+ spinum00101m1_253I, \n+ spinum00101m1_254I, \n+ spinum00101m1_255I, \n+ spinum00101m1_256I \n+{\n+\n+public Method <init>:\"()V\" stack 1 {\n+\taload_0;\n+\tinvokespecial java\/lang\/Object.<init>:\"()V\";\n+\treturn;\n+}\n+} \/\/ end Class spinum00101m10p\n","filename":"test\/resources\/org\/openjdk\/asmtools\/jasm\/spinum00101m10p.jasm","additions":790,"deletions":0,"binary":false,"changes":790,"status":"added"},{"patch":"@@ -0,0 +1,128 @@\n+class IntAndClass$IntAndClassImp {\n+  0xCAFEBABE;\n+  0;                             \/\/ minor version\n+  55;                            \/\/ version\n+  [] {                           \/\/ Constant Pool\n+    ;                            \/\/ first element is empty\n+    Method #3 #12;               \/\/ #1\n+    class #13;                   \/\/ #2\n+    class #16;                   \/\/ #3\n+    class #17;                   \/\/ #4\n+    Utf8 \"<init>\";               \/\/ #5\n+    Utf8 \"()V\";                  \/\/ #6\n+    Utf8 \"Code\";                 \/\/ #7\n+    Utf8 \"LineNumberTable\";      \/\/ #8\n+    Utf8 \"SourceFile\";           \/\/ #9\n+    Utf8 \"IntAndClass.java\";     \/\/ #10\n+    Utf8 \"NestHost\";             \/\/ #11\n+    NameAndType #5 #6;           \/\/ #12\n+    Utf8 \"IntAndClass$IntAndClassImp\"; \/\/ #13\n+    Utf8 \"IntAndClassImp\";       \/\/ #14\n+    Utf8 \"InnerClasses\";         \/\/ #15\n+    Utf8 \"java\/lang\/Object\";     \/\/ #16\n+    Utf8 \"IntAndClass\";          \/\/ #17\n+  }\n+\n+  0x0021;                        \/\/ access\n+  #2;                            \/\/ this_cpx\n+  #3;                            \/\/ super_cpx\n+\n+  [] {                           \/\/ Interfaces\n+#4;\n+  }                              \/\/ end of Interfaces\n+\n+  [] {                           \/\/ Fields\n+  }                              \/\/ end of Fields\n+\n+  [] {                           \/\/ Methods\n+    {                            \/\/ method\n+      0x0001;                    \/\/ access\n+      #5;                        \/\/ name_index\n+      #6;                        \/\/ descriptor_index\n+      [] {                       \/\/ Attributes\n+        Attr(#7) {               \/\/ Code\n+          1;                     \/\/ max_stack\n+          1;                     \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] {                   \/\/ Traps\n+          }                      \/\/ end of Traps\n+          [] {                   \/\/ Attributes\n+            Attr(#8) {           \/\/ LineNumberTable\n+              [] {               \/\/ line_number_table\n+                0  3;\n+              }\n+            }                    \/\/ end of LineNumberTable\n+          }                      \/\/ end of Attributes\n+        }                        \/\/ end of Code\n+      }                          \/\/ end of Attributes\n+    }\n+  }                              \/\/ end of Methods\n+\n+  [] {                           \/\/ Attributes\n+    Attr(#9) {                   \/\/ SourceFile\n+      #10;\n+    }                            \/\/ end of SourceFile\n+    ;\n+    Attr(#11) {                  \/\/ NestHost\n+#4;\n+    }                            \/\/ end of NestHost\n+    ;\n+    Attr(#15) {                  \/\/ InnerClasses\n+      [] {                       \/\/ classes\n+        #2 #4 #14 9;\n+      }\n+    }                            \/\/ end of InnerClasses\n+  }                              \/\/ end of Attributes\n+}\n+class IntAndClass {\n+  0xCAFEBABE;\n+  0;                             \/\/ minor version\n+  55;                            \/\/ version\n+  [] {                           \/\/ Constant Pool\n+    ;                            \/\/ first element is empty\n+    class #9;                    \/\/ #1\n+    class #10;                   \/\/ #2\n+    class #11;                   \/\/ #3\n+    Utf8 \"IntAndClassImp\";       \/\/ #4\n+    Utf8 \"InnerClasses\";         \/\/ #5\n+    Utf8 \"SourceFile\";           \/\/ #6\n+    Utf8 \"IntAndClass.java\";     \/\/ #7\n+    Utf8 \"NestMembers\";          \/\/ #8\n+    Utf8 \"IntAndClass\";          \/\/ #9\n+    Utf8 \"java\/lang\/Object\";     \/\/ #10\n+    Utf8 \"IntAndClass$IntAndClassImp\"; \/\/ #11\n+  }\n+\n+  0x0601;                        \/\/ access\n+  #1;                            \/\/ this_cpx\n+  #2;                            \/\/ super_cpx\n+\n+  [] {                           \/\/ Interfaces\n+  }                              \/\/ end of Interfaces\n+\n+  [] {                           \/\/ Fields\n+  }                              \/\/ end of Fields\n+\n+  [] {                           \/\/ Methods\n+  }                              \/\/ end of Methods\n+\n+  [] {                           \/\/ Attributes\n+    Attr(#6) {                   \/\/ SourceFile\n+      #7;\n+    }                            \/\/ end of SourceFile\n+    ;\n+    Attr(#8) {                   \/\/ NestMembers\n+      [] {                       \/\/ classes\n+#3;\n+      }\n+    }                            \/\/ end of NestMembers\n+    ;\n+    Attr(#5) {                   \/\/ InnerClasses\n+      [] {                       \/\/ classes\n+        #3 #1 #4 9;\n+      }\n+    }                            \/\/ end of InnerClasses\n+  }                              \/\/ end of Attributes\n+}\n","filename":"test\/resources\/org\/openjdk\/asmtools\/jcoder\/12.jcod","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"patch":"@@ -1,1 +0,0 @@\n-Place for test-only resources; eg binary blobs or  jasm\/jdis sources\n","filename":"test\/resources\/placeholder","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"}]}