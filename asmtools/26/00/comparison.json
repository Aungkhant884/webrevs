{"files":[{"patch":"@@ -48,1 +48,4 @@\n-    ACC_SUPER(0x0020, \"super\", CLASS),                                    \/\/ <<ignored>>\n+    ACC_SUPER(0x0020, \"super\", CLASS),   \/\/ although this seems to be easily ignored, but not including it to the class, where it originally was,\n+                                                      \/\/ will cause running hotswap to fail, with\n+                                                      \/\/java.lang.UnsupportedOperationException: class redefinition failed: attempted to change the class modifiers\n+\n@@ -371,3 +374,3 @@\n-                    if (isName) {\n-                        list.add(ACC_SUPER.getFlagName());\n-                    }\n+                    \/\/ still we have to keep it in here (if it was here), as if the new class is used for hotswap, it s absence would casue\n+                    \/\/ java.lang.UnsupportedOperationException: class redefinition failed: attempted to change the class modifiers\n+                    flags = addTo(list, flags, isName, ACC_SUPER);\n","filename":"src\/org\/openjdk\/asmtools\/common\/structure\/EModifier.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -404,2 +404,2 @@\n-            \/\/ Skip printing \"super modifier\"\n-            access &= ~ACC_SUPER.getFlag();\n+            \/\/ however, to not print it where it was, would cause hotswap of such class to\n+            \/\/ throw java.lang.UnsupportedOperationException: class redefinition failed: attempted to change the class modifiers\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ClassData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,0 +38,21 @@\n+\n+    @Test\n+    public void superIsNotOmited() throws IOException {\n+        ThreeStringWriters outs = new ThreeStringWriters();\n+        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), \".\/target\/classes\/org\/openjdk\/asmtools\/jdis\/Main.class\");\n+        int i = decoder.disasm();\n+        outs.flush();\n+        Assertions.assertEquals(0, i);\n+        Assertions.assertFalse(outs.getToolBos().isEmpty());\n+        Assertions.assertTrue(outs.getErrorBos().isEmpty());\n+        Assertions.assertTrue(outs.getLoggerBos().isEmpty());\n+        String clazz = outs.getToolBos();\n+        for(String line: clazz.split(\"\\n\")) {\n+            if (line.contains(\"class Main extends JdisTool\")){\n+                Assertions.assertTrue(line.contains(\"super\"), \"class declaration had super omitted - \" + line);\n+                return;\n+            }\n+        }\n+        Assertions.assertTrue(false, \"class Main was not found in disassembled output\");\n+    }\n+\n","filename":"test\/org\/openjdk\/asmtools\/jdis\/MainTest.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"}]}