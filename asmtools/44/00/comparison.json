{"files":[{"patch":"@@ -145,1 +145,1 @@\n-        public PrintWriter toolOutput;\n+        public ToolOutput toolOutput;\n@@ -148,1 +148,1 @@\n-        public Builder(String programName, PrintWriter toolOutput, T toolLogger) {\n+        public Builder(String programName, ToolOutput toolOutput, T toolLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/common\/Environment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    protected Tool(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n+    protected Tool(ToolOutput toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n@@ -41,1 +41,1 @@\n-    protected Tool(PrintWriter errorLogger, PrintWriter outputLogger) {\n+    protected Tool(PrintWriter errorLogger, ToolOutput outputLogger) {\n@@ -60,1 +60,1 @@\n-    public T getEnvironment(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n+    public T getEnvironment(ToolOutput toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n@@ -64,1 +64,1 @@\n-    public T getEnvironment(PrintWriter errorLogger, PrintWriter outputLogger) {\n+    public T getEnvironment(PrintWriter errorLogger, ToolOutput outputLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/common\/Tool.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,164 @@\n+package org.openjdk.asmtools.common;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n+import java.util.ArrayList;\n+\n+\n+public interface ToolOutput {\n+\n+    String getCurrentClassName();\n+\n+    void startClass(String fqn) throws IOException;\n+\n+    void finishClass(String fqn) throws IOException;\n+\n+    void addClassOutputListener(ClassProgressListener l);\n+\n+    void removeClassOutputListener(ClassProgressListener l);\n+\n+    void println(String line);\n+    void print(String line);\n+    void print(char line);\n+\n+    public interface ClassProgressListener {\n+\n+        public void classStarted(String fqn);\n+\n+        public void classEnded(String fqn);\n+\n+    }\n+\n+\n+    public static abstract class ObservableToolOutput implements ToolOutput {\n+\n+        protected ArrayList<ClassProgressListener> classProgressListeners = new ArrayList<>();\n+        protected String currentFqn = null;\n+\n+        @Override\n+        public String getCurrentClassName() {\n+            return currentFqn;\n+        }\n+\n+        @Override\n+        public void addClassOutputListener(ClassProgressListener l) {\n+            classProgressListeners.add(l);\n+        }\n+\n+        @Override\n+        public void removeClassOutputListener(ClassProgressListener l) {\n+            if (!classProgressListeners.remove(l)) {\n+                throw new RuntimeException(\"ClassProgressListener \" + l + \" not registered\");\n+            }\n+        }\n+\n+        @Override\n+        public void startClass(String fqn) throws IOException {\n+            currentFqn = fqn;\n+            for (ClassProgressListener classProgressListener : classProgressListeners) {\n+                classProgressListener.classEnded(fqn);\n+            }\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            try {\n+                for (ClassProgressListener classProgressListener : classProgressListeners) {\n+                    classProgressListener.classEnded(fqn);\n+                }\n+            } finally {\n+                currentFqn = null;\n+            }\n+        }\n+    }\n+\n+\n+    public static class DirOutput extends ObservableToolOutput {\n+\n+        private final String dir;\n+        private final ClassProgressListener classProgressListener;\n+\n+        public DirOutput(String dir) {\n+            this.dir = dir;\n+            classProgressListener = new ClassProgressListener() {\n+\n+                @Override\n+                public void classStarted(String fqn) {\n+                    \/\/mkdir\n+                    \/\/fileopen\n+\n+                }\n+\n+                @Override\n+                public void classEnded(String fqn) {\n+                    \/\/fileclose\n+                }\n+            };\n+        }\n+\n+\n+        @Override\n+        public String toString() {\n+            return super.toString() + \" to \" + dir;\n+        }\n+\n+        @Override\n+        public void println(String line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+        @Override\n+        public void print(String line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+        @Override\n+        public void print(char line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+    }\n+\n+    public static class OutputStreamOutput extends ObservableToolOutput {\n+\n+        private PrintStream os;\n+\n+        public OutputStreamOutput(PrintStream os) {\n+            \/\/although it is usually System.out, it is set from Environment, or custom\n+            this.os = os;\n+        }\n+\n+        \/**\n+         * One can chane the stream as action to new class\n+         *\n+         * @param os\n+         *\/\n+        public void setOutputStream(PrintStream os) {\n+            this.os = os;\n+        }\n+\n+        @Override\n+        public void println(String line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+        @Override\n+        public void print(String line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+        @Override\n+        public void print(char line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            try {\n+                super.finishClass(fqn);\n+            } finally {\n+                os.flush();\n+            }\n+        }\n+\n+\n+    }\n+\n+}\n+\n","filename":"src\/org\/openjdk\/asmtools\/common\/ToolOutput.java","additions":164,"deletions":0,"binary":false,"changes":164,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -112,1 +113,1 @@\n-        public JcoderBuilder(PrintWriter errorLogger, PrintWriter outputLogger) {\n+        public JcoderBuilder(PrintWriter errorLogger, ToolOutput outputLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/JcoderEnvironment.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -33,1 +34,1 @@\n-        super(new PrintWriter(System.err, true), new PrintWriter(System.out, true));\n+        super(new PrintWriter(System.err, true), new ToolOutput.OutputStreamOutput(System.out));\n@@ -36,1 +37,1 @@\n-    protected JcoderTool(PrintWriter errorLogger, PrintWriter outputLogger) {\n+    protected JcoderTool(PrintWriter errorLogger, ToolOutput outputLogger) {\n@@ -41,1 +42,1 @@\n-    public JcoderEnvironment getEnvironment(PrintWriter errorLogger, PrintWriter outputLogger) {\n+    public JcoderEnvironment getEnvironment(PrintWriter errorLogger, ToolOutput outputLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/JcoderTool.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -37,2 +38,2 @@\n-    \/\/ Output stream\n-    private final PrintWriter toolOutput;\n+    \/\/ Output stream or files or custom Strings\n+    private final ToolOutput toolOutput;\n@@ -50,1 +51,1 @@\n-    public PrintWriter getToolOutput() {\n+    public ToolOutput getToolOutput() {\n@@ -66,1 +67,1 @@\n-        getToolOutput().println();\n+        getToolOutput().println(\"\");\n@@ -82,1 +83,1 @@\n-        public JDecBuilder(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n+        public JDecBuilder(ToolOutput toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/JdecEnvironment.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -46,1 +47,1 @@\n-    public JdecEnvironment getEnvironment(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n+    public JdecEnvironment getEnvironment(ToolOutput toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/JdecTool.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-                environment.getToolOutput().flush();\n+                environment.getToolOutput().finishClass(inputFileName.getFileName()\/*TODO replace by proper pkg.name?*\/);\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -35,2 +36,0 @@\n-    \/\/ Output stream\n-    private final PrintWriter toolOutput;\n@@ -40,1 +39,0 @@\n-        this.toolOutput = builder.toolOutput;\n@@ -54,3 +52,0 @@\n-    public PrintWriter getToolOutput() {\n-        return toolOutput;\n-    }\n@@ -60,1 +55,1 @@\n-        public JDecBuilder(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n+        public JDecBuilder(ToolOutput toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/JdisEnvironment.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"}]}