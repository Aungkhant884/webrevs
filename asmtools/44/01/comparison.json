{"files":[{"patch":"@@ -45,2 +45,2 @@\n-    public CompilerLogger(PrintWriter errLog, PrintWriter outLog) {\n-        super(errLog, outLog);\n+    public CompilerLogger(ToolOutput.DualStreamToolOutput oser) {\n+        super(oser);\n@@ -135,1 +135,1 @@\n-                PrintWriter output = msg.kind() == ERROR ? getErrLog() : getOutLog();\n+                ToolOutput output = msg.kind() == ERROR ? getOutputs().getEToolObject() : getOutputs().getSToolObject();\n@@ -140,1 +140,1 @@\n-                    output.println(msg.text());\n+                    output.printlns(msg.text());\n@@ -142,1 +142,1 @@\n-                    output.println(format(\"%s (%d:%d) %s\", getSimpleInputFileName(),\n+                    output.printlns(format(\"%s (%d:%d) %s\", getSimpleInputFileName(),\n@@ -156,1 +156,1 @@\n-                getOutLog().print(format(\"%d warning(s)%s\", nWarnings, nErrors != 0 ? \", \" : \"\"));\n+                getOutputs().printe(format(\"%d warning(s)%s\", nWarnings, nErrors != 0 ? \", \" : \"\"));\n@@ -158,2 +158,2 @@\n-                getOutLog().println(format(\"%d error(s)\", nErrors));\n-            getOutLog().flush();\n+                getOutputs().printlne(format(\"%d error(s)\", nErrors));\n+            getOutputs().flush();\n@@ -166,1 +166,1 @@\n-    private void printAffectedSourceLine(PrintWriter output, Pair<Integer, Integer> filePosition) {\n+    private void printAffectedSourceLine(ToolOutput output, Pair<Integer, Integer> filePosition) {\n@@ -171,2 +171,2 @@\n-        output.println(line);\n-        output.println(repeat(\" \", (int) linePosition) + \"^\");\n+        output.printlns(line);\n+        output.printlns(repeat(\" \", (int) linePosition) + \"^\");\n","filename":"src\/org\/openjdk\/asmtools\/common\/CompilerLogger.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n-    public DecompilerLogger(PrintWriter errLog, PrintWriter outLog) {\n-        super(errLog, outLog);\n+    public DecompilerLogger(ToolOutput.DualStreamToolOutput oser) {\n+        super(oser);\n","filename":"src\/org\/openjdk\/asmtools\/common\/DecompilerLogger.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.PrintWriter;\n@@ -47,0 +46,1 @@\n+    private ToolOutput toolOutput;\n@@ -57,0 +57,1 @@\n+        this.toolOutput = builder.toolOutput;\n@@ -118,2 +119,2 @@\n-    public PrintWriter getErrLog() {\n-        return toolLogger.getErrLog();\n+    public ToolOutput.DualStreamToolOutput getOutputs() {\n+        return getLogger().getOutputs();\n@@ -122,0 +123,1 @@\n+\n@@ -123,2 +125,2 @@\n-    public PrintWriter getOutLog() {\n-        return toolLogger.getOutLog();\n+    public ToolOutput getToolOutput() {\n+        return toolOutput;\n@@ -145,1 +147,1 @@\n-        public PrintWriter toolOutput;\n+        public ToolOutput toolOutput;\n@@ -148,1 +150,1 @@\n-        public Builder(String programName, PrintWriter toolOutput, T toolLogger) {\n+        public Builder(String programName, ToolOutput toolOutput, T toolLogger) {\n","filename":"src\/org\/openjdk\/asmtools\/common\/Environment.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        getOutLog().print(( args == null || args.length == 0) ? format : format(format, args));\n+        getOutputs().prints(( args == null || args.length == 0) ? format : format(format, args));\n@@ -45,1 +45,1 @@\n-        getErrLog().println(( args == null || args.length == 0) ? format : format(format, args));\n+        getOutputs().printlne(( args == null || args.length == 0) ? format : format(format, args));\n@@ -49,1 +49,1 @@\n-        getOutLog().println(( args == null || args.length == 0) ? format : format(format, args));\n+        getOutputs().printlns(( args == null || args.length == 0) ? format : format(format, args));\n@@ -53,1 +53,1 @@\n-        getOutLog().println();\n+        getOutputs().printlns(\"\");\n@@ -57,1 +57,1 @@\n-        getOutLog().print(( args == null || args.length == 0) ? format : format(format, args));\n+        getOutputs().prints(( args == null || args.length == 0) ? format : format(format, args));\n@@ -61,1 +61,1 @@\n-        getOutLog().print(ch);\n+        getOutputs().prints(ch);\n@@ -64,1 +64,1 @@\n-    PrintWriter getErrLog();\n+    ToolOutput.DualStreamToolOutput getOutputs();\n@@ -66,1 +66,3 @@\n-    PrintWriter getOutLog();\n+    default ToolOutput getToolOutput() {\n+        throw new NotImplementedException(\"implement wisely!\");\n+    }\n","filename":"src\/org\/openjdk\/asmtools\/common\/ILogger.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -8,0 +8,3 @@\n+    public NotImplementedException(String reason) {\n+        super(reason);\n+    }\n","filename":"src\/org\/openjdk\/asmtools\/common\/NotImplementedException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-    protected Tool(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n-        this.environment = getEnvironment(toolOutput, errorLogger, outputLogger);\n+    protected Tool(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput outerLog) {\n+        this.environment = getEnvironment(toolOutput, outerLog);\n@@ -41,2 +41,2 @@\n-    protected Tool(PrintWriter errorLogger, PrintWriter outputLogger) {\n-        this.environment = getEnvironment(errorLogger, outputLogger);\n+    protected Tool(ToolOutput.DualStreamToolOutput logger) {\n+        this.environment = getEnvironment(logger);\n@@ -60,1 +60,1 @@\n-    public T getEnvironment(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n+    public T getEnvironment(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput outerLog) {\n@@ -64,1 +64,1 @@\n-    public T getEnvironment(PrintWriter errorLogger, PrintWriter outputLogger) {\n+    public T getEnvironment(ToolOutput.DualStreamToolOutput log) {\n","filename":"src\/org\/openjdk\/asmtools\/common\/Tool.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.PrintWriter;\n@@ -41,3 +40,1 @@\n-    \/\/ Logger's streams\n-    final private PrintWriter errLog;\n-    final private PrintWriter outLog;\n+    ToolOutput.DualStreamToolOutput outerLog;\n@@ -48,3 +45,2 @@\n-    protected ToolLogger(PrintWriter errLog, PrintWriter outLog) {\n-        this.errLog = errLog;\n-        this.outLog = outLog;\n+    protected ToolLogger(ToolOutput.DualStreamToolOutput outerLog) {\n+        this.outerLog = outerLog;\n@@ -90,7 +86,2 @@\n-    public PrintWriter getErrLog() {\n-        return errLog;\n-    }\n-\n-    @Override\n-    public PrintWriter getOutLog() {\n-        return outLog;\n+    public ToolOutput.DualStreamToolOutput getOutputs() {\n+        return outerLog;\n@@ -105,1 +96,1 @@\n-        throwable.printStackTrace(errLog);\n+        getOutputs().stacktrace(throwable);\n@@ -108,0 +99,1 @@\n+\n","filename":"src\/org\/openjdk\/asmtools\/common\/ToolLogger.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,263 @@\n+package org.openjdk.asmtools.common;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n+import java.io.PrintWriter;\n+import java.io.Writer;\n+\n+\n+public interface ToolOutput {\n+\n+    String getCurrentClassName();\n+\n+    void startClass(String fqn) throws IOException;\n+\n+    void finishClass(String fqn) throws IOException;\n+\n+    void printlns(String line);\n+\n+    void prints(String line);\n+\n+    void prints(char line);\n+\n+    void flush();\n+\n+    public static interface DualStreamToolOutput extends ToolOutput {\n+        void printlne(String line);\n+\n+        void printe(String line);\n+\n+        void printe(char line);\n+\n+        void stacktrace(Throwable ex);\n+\n+        ToolOutput getSToolObject();\n+        ToolOutput getEToolObject();\n+    }\n+\n+    \/**\n+     * Historically, the output loggers for compilers had two stderrs, one to sdout and secon to stderr.\n+     * That should be removed, in favour of just dualstream tool output, printing output to stdout and log into stderr\n+     *\/\n+    public abstract class NamedToolOutput implements ToolOutput {\n+        private String fqn;\n+\n+        @Override\n+        public String getCurrentClassName() {\n+            return fqn;\n+        }\n+\n+        @Override\n+        public void startClass(String fqn) throws IOException {\n+            this.fqn = fqn;\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            this.fqn = null;\n+        }\n+    }\n+\n+\n+    public abstract class NamedDualStreamToolOutput implements DualStreamToolOutput {\n+        private String fqn;\n+\n+        @Override\n+        public String getCurrentClassName() {\n+            return fqn;\n+        }\n+\n+        @Override\n+        public void startClass(String fqn) throws IOException {\n+            this.fqn = fqn;\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            this.fqn = null;\n+        }\n+    }\n+\n+\n+    public static class DirOutput extends NamedToolOutput {\n+\n+        private final String dir;\n+\n+        public DirOutput(String dir) {\n+            this.dir = dir;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return super.toString() + \" to \" + dir;\n+        }\n+\n+        @Override\n+        public void printlns(String line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+\n+        @Override\n+        public void prints(String line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+\n+        @Override\n+        public void prints(char line) {\n+            throw new RuntimeException(\"Not yet implemented\");\n+        }\n+\n+        @Override\n+        public void startClass(String fqn) throws IOException {\n+            super.startClass(fqn);\n+            \/\/mkdir\n+            \/\/open file?\n+\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            super.finishClass(fqn);\n+        }\n+\n+        @Override\n+        public void flush() {\n+            \/\/todo flush to file\n+        }\n+    }\n+\n+    public static class PrintWriterOutput extends NamedToolOutput {\n+\n+        protected PrintWriter os;\n+\n+        public PrintWriterOutput(OutputStream os) {\n+            \/\/although it is usually System.out, it is set from Environment, or custom\n+            this.os = new PrintWriter(os, true);\n+        }\n+        public PrintWriterOutput(Writer os) {\n+            \/\/although it is usually System.out, it is set from Environment, or custom\n+            this.os = new PrintWriter(os, true);\n+        }\n+\n+        @Override\n+        public void printlns(String line) {\n+            os.println(line);\n+        }\n+\n+        @Override\n+        public void prints(String line) {\n+            os.print(line);\n+        }\n+\n+        @Override\n+        public void prints(char line) {\n+            os.print(line);\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            super.finishClass(fqn);\n+            os.flush();\n+        }\n+\n+        @Override\n+        public void flush() {\n+            os.flush();\n+        }\n+    }\n+\n+    public static class EscapedPrintStreamOutput extends PrintWriterOutput {\n+\n+        public EscapedPrintStreamOutput(OutputStream os) {\n+            super(new uEscWriter(os));\n+        }\n+    }\n+\n+    public static class DualOutputStreamOutput extends NamedDualStreamToolOutput {\n+\n+        protected PrintWriter os;\n+        protected PrintWriter es;\n+\n+\n+        public DualOutputStreamOutput() {\n+            this(System.out, System.err);\n+        }\n+\n+        \/\/todo, remove once tests asdapts\n+        public DualOutputStreamOutput(PrintWriter os, PrintWriter er) {\n+            this.os = os;\n+            this.es = er;\n+        }\n+        public DualOutputStreamOutput(PrintStream os, PrintStream er) {\n+            \/\/although it is usually System.out, it is set from Environment, or custom\n+            this.os = new PrintWriter(os, true);\n+            \/\/although it is usually System.err, it is set from Environment, or custom\n+            this.es = new PrintWriter(er, true);\n+        }\n+\n+        @Override\n+        public void printlns(String line) {\n+            os.println(line);\n+        }\n+\n+        @Override\n+        public void prints(String line) {\n+            os.print(line);\n+        }\n+\n+        @Override\n+        public void prints(char line) {\n+            os.print(line);\n+        }\n+\n+        @Override\n+        public void printlne(String line) {\n+            es.println(line);\n+        }\n+\n+        @Override\n+        public void printe(String line) {\n+            es.print(line);\n+        }\n+\n+        @Override\n+        public void printe(char line) {\n+            es.print(line);\n+        }\n+\n+        @Override\n+        public void finishClass(String fqn) throws IOException {\n+            super.finishClass(fqn);\n+            try {\n+                os.flush();\n+            } finally {\n+                es.flush();\n+            }\n+        }\n+\n+        @Override\n+        public void stacktrace(Throwable ex) {\n+            ex.printStackTrace(es);\n+        }\n+\n+        @Override\n+        public ToolOutput getSToolObject() {\n+            return new PrintWriterOutput(os);\n+        }\n+\n+        @Override\n+        public ToolOutput getEToolObject() {\n+            return new PrintWriterOutput(es);\n+        }\n+\n+        @Override\n+        public void flush() {\n+            this.os.flush();\n+            this.es.flush();\n+        }\n+    }\n+    \n+\n+}\n+\n","filename":"src\/org\/openjdk\/asmtools\/common\/ToolOutput.java","additions":263,"deletions":0,"binary":false,"changes":263,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -134,2 +135,2 @@\n-        public JasmBuilder(PrintWriter errorLogger, PrintWriter outputLogger) {\n-            super(\"jasm\", new CompilerLogger(errorLogger, outputLogger));\n+        public JasmBuilder(ToolOutput.DualStreamToolOutput logger) {\n+            super(\"jasm\", new CompilerLogger(logger));\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/JasmEnvironment.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -34,1 +35,1 @@\n-        super(new PrintWriter(System.err, true), new PrintWriter(System.out, true));\n+        super(new ToolOutput.DualOutputStreamOutput());\n@@ -37,2 +38,2 @@\n-    protected JasmTool(PrintWriter errorLogger, PrintWriter outputLogger) {\n-        super(errorLogger, outputLogger);\n+    protected JasmTool(ToolOutput.DualStreamToolOutput logger) {\n+        super(logger);\n@@ -42,2 +43,2 @@\n-    public JasmEnvironment getEnvironment(PrintWriter errorLogger, PrintWriter outputLogger) {\n-        JasmBuilder builder = new JasmBuilder(errorLogger, outputLogger);\n+    public JasmEnvironment getEnvironment(ToolOutput.DualStreamToolOutput logger) {\n+        JasmBuilder builder = new JasmBuilder(logger);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/JasmTool.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -70,2 +71,2 @@\n-    public Main(PrintWriter errorLogger, PrintWriter outputLogger, String... argv) {\n-        super(errorLogger, outputLogger);\n+    public Main(ToolOutput.DualStreamToolOutput log, String... argv) {\n+        super(log);\n@@ -77,2 +78,1 @@\n-        Main compiler = new Main(new PrintWriter(System.err, true),\n-                new PrintWriter(System.out, true), argv);\n+        Main compiler = new Main(new ToolOutput.DualOutputStreamOutput(), argv);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Main.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n-import org.openjdk.asmtools.common.uEscWriter;\n+\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -34,1 +35,0 @@\n-import java.io.PrintWriter;\n@@ -55,1 +55,1 @@\n-    PrintWriter out;\n+    ToolOutput out;\n@@ -83,3 +83,3 @@\n-    void printByteHex(PrintWriter out, int b) {\n-        out.print(hexTable[(b >> 4) & 0xF]);\n-        out.print(hexTable[b & 0xF]);\n+    void printByteHex(ToolOutput out, int b) {\n+        out.prints(hexTable[(b >> 4) & 0xF]);\n+        out.prints(hexTable[b & 0xF]);\n@@ -91,1 +91,1 @@\n-            out.print(\"  \");\n+            out.prints(\"  \");\n@@ -93,1 +93,1 @@\n-        out.println(s);\n+        out.printlns(s);\n@@ -99,1 +99,1 @@\n-            out.print(\"  \");\n+            out.prints(\"  \");\n@@ -101,1 +101,1 @@\n-        out.print(s);\n+        out.prints(s);\n@@ -106,1 +106,1 @@\n-            out.print(\"  \");\n+            out.prints(\"  \");\n@@ -108,1 +108,1 @@\n-        out.println(s);\n+        out.printlns(s);\n@@ -114,1 +114,1 @@\n-            out.print(\"  \");\n+            out.prints(\"  \");\n@@ -116,1 +116,1 @@\n-        out.println(s);\n+        out.printlns(s);\n@@ -131,1 +131,1 @@\n-                    out.println(\";\");\n+                    out.printlns(\";\");\n@@ -136,1 +136,1 @@\n-                out.println(\";\");\n+                out.printlns(\";\");\n@@ -203,1 +203,1 @@\n-            out.print(\"wrong magic: 0x\" + Integer.toString(EXPORT_MAGIC, 16) + \" expected\");\n+            out.prints(\"wrong magic: 0x\" + Integer.toString(EXPORT_MAGIC, 16) + \" expected\");\n@@ -207,1 +207,1 @@\n-        out.println();\n+        out.printlns(\"\");\n@@ -243,1 +243,1 @@\n-                    out.println(sb.append(\"\\\"; \/\/ #\").append(i).toString());\n+                    out.printlns(sb.append(\"\\\"; \/\/ #\").append(i).toString());\n@@ -285,1 +285,1 @@\n-            out.println(\"; \/\/ flags\");\n+            out.printlns(\"; \/\/ flags\");\n@@ -313,1 +313,1 @@\n-                out.println(\"; \/\/ flags\");\n+                out.printlns(\"; \/\/ flags\");\n@@ -338,1 +338,1 @@\n-                out.println(\"; \/\/ flags\");\n+                out.printlns(\"; \/\/ flags\");\n@@ -359,1 +359,1 @@\n-            out.print(\", \" + size);\n+            out.prints(\", \" + size);\n@@ -369,1 +369,1 @@\n-            out.println(\"=========== extra bytes:\");\n+            out.printlns(\"=========== extra bytes:\");\n@@ -378,1 +378,1 @@\n-                out.println(\"  there is also \" + avail + \" bytes available\");\n+                out.printlns(\"  there is also \" + avail + \" bytes available\");\n@@ -393,1 +393,1 @@\n-            out.print(\"wrong magic: 0x\" + Integer.toString(HEADER_MAGIC, 16) + \" expected\");\n+            out.prints(\"wrong magic: 0x\" + Integer.toString(HEADER_MAGIC, 16) + \" expected\");\n@@ -397,1 +397,1 @@\n-        out.println();\n+        out.printlns(\"\");\n@@ -516,1 +516,1 @@\n-                    out.print(\" \/\/ internal \");\n+                    out.prints(\" \/\/ internal \");\n@@ -518,2 +518,2 @@\n-                    out.print(info1 + \"b \" + info2 + \"b \" + info3 + \"b;\");\n-                    out.print(\" \/\/ external \");\n+                    out.prints(info1 + \"b \" + info2 + \"b \" + info3 + \"b;\");\n+                    out.prints(\" \/\/ external \");\n@@ -521,1 +521,1 @@\n-                out.println(refNames[tag - 1]);\n+                out.printlns(refNames[tag - 1]);\n@@ -523,2 +523,2 @@\n-                out.print(info1 + \"b \" + info2 + \"b \" + info3 + \"b;\");\n-                out.println(\" \/\/ unknown tag \");\n+                out.prints(info1 + \"b \" + info2 + \"b \" + info3 + \"b;\");\n+                out.printlns(\" \/\/ unknown tag \");\n@@ -553,1 +553,1 @@\n-            out.println(\"; \/\/ bitfield\");\n+            out.printlns(\"; \/\/ bitfield\");\n@@ -610,1 +610,1 @@\n-            out.println(\"; \/\/ flags\");\n+            out.printlns(\"; \/\/ flags\");\n@@ -631,1 +631,1 @@\n-                out.println(\"; \/\/ flags\");\n+                out.printlns(\"; \/\/ flags\");\n@@ -641,1 +641,1 @@\n-                        out.println(\" \/\/ internal field\");\n+                        out.printlns(\" \/\/ internal field\");\n@@ -643,2 +643,2 @@\n-                        out.print(info1 + \"b \" + info2 + \"b \" + info3 + \"b;\");\n-                        out.println(\" \/\/ external field\");\n+                        out.prints(info1 + \"b \" + info2 + \"b \" + info3 + \"b;\");\n+                        out.printlns(\" \/\/ external field\");\n@@ -654,1 +654,1 @@\n-                    out.println(\"; \/\/ primitive type\");\n+                    out.printlns(\"; \/\/ primitive type\");\n@@ -674,1 +674,1 @@\n-                out.println(\"; \/\/ flags\");\n+                out.printlns(\"; \/\/ flags\");\n@@ -716,1 +716,1 @@\n-            out.print(\"0x\");\n+            out.prints(\"0x\");\n@@ -719,2 +719,2 @@\n-            out.print(\", \" + in.readUnsignedShort() + \", \");\n-            out.println(in.readUnsignedShort() + \"; \/\/ handler \" + i);\n+            out.prints(\", \" + in.readUnsignedShort() + \", \");\n+            out.printlns(in.readUnsignedShort() + \"; \/\/ handler \" + i);\n@@ -725,1 +725,1 @@\n-            out.println(\"\/\/ Descriptor.cap absent - methods not printed\");\n+            out.printlns(\"\/\/ Descriptor.cap absent - methods not printed\");\n@@ -732,1 +732,1 @@\n-                    out.println(\"file offset=\" + f_offset + \" but m_offset=\" + m_offset);\n+                    out.printlns(\"file offset=\" + f_offset + \" but m_offset=\" + m_offset);\n@@ -739,1 +739,1 @@\n-                    out.println(\"; \/\/ flags, max_stack\");\n+                    out.printlns(\"; \/\/ flags, max_stack\");\n@@ -742,1 +742,1 @@\n-                    out.println(\"; \/\/ nargs, max_locals\");\n+                    out.printlns(\"; \/\/ nargs, max_locals\");\n@@ -747,1 +747,1 @@\n-                    out.println(\"; \/\/ flags, padding\");\n+                    out.printlns(\"; \/\/ flags, padding\");\n@@ -839,1 +839,1 @@\n-    public Main(PrintWriter out, String program) {\n+    public Main(ToolOutput out, String program) {\n@@ -845,1 +845,1 @@\n-        out.println(program + \": \" + msg);\n+        out.printlns(program + \": \" + msg);\n@@ -852,3 +852,3 @@\n-        out.println(i18n.getString(\"jcdec.usage\"));\n-        out.println(i18n.getString(\"jcdec.opt.g\"));\n-        out.println(i18n.getString(\"jcdec.opt.version\"));\n+        out.printlns(i18n.getString(\"jcdec.usage\"));\n+        out.printlns(i18n.getString(\"jcdec.opt.g\"));\n+        out.printlns(i18n.getString(\"jcdec.opt.version\"));\n@@ -877,1 +877,1 @@\n-                out.println(\"arg[\" + i + \"]=\" + argv[i] + \"\/verbose\");\n+                out.printlns(\"arg[\" + i + \"]=\" + argv[i] + \"\/verbose\");\n@@ -879,1 +879,1 @@\n-                out.println(ProductInfo.FULL_VERSION);\n+                out.printlns(ProductInfo.FULL_VERSION);\n@@ -882,1 +882,1 @@\n-\/\/out.println(\"arg[\"+i+\"]=\"+argv[i]+\"\/invalid flag\");\n+\/\/out.printlns(\"arg[\"+i+\"]=\"+argv[i]+\"\/invalid flag\");\n@@ -932,1 +932,1 @@\n-                    out.println(\"\");\n+                    out.printlns(\"\");\n@@ -935,1 +935,1 @@\n-                    out.println(\"\");\n+                    out.printlns(\"\");\n@@ -945,1 +945,1 @@\n-                error(i18n.getString(\"jcdec.error.fatal_exception\"));\n+                error(i18n.getString(\"jcdec.error.fatal_exceptPrintWriter ion\"));\n@@ -956,1 +956,1 @@\n-        Main decoder = new Main(new PrintWriter(new uEscWriter(System.out)), \"jcdec\");\n+        Main decoder = new Main(new ToolOutput.EscapedPrintStreamOutput(System.out), \"jcdec\");\n","filename":"src\/org\/openjdk\/asmtools\/jcdec\/Main.java","additions":61,"deletions":61,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import org.openjdk.asmtools.common.NotImplementedException;\n@@ -29,0 +30,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -112,2 +114,2 @@\n-        public JcoderBuilder(PrintWriter errorLogger, PrintWriter outputLogger) {\n-            super(\"jcoder\", new CompilerLogger(errorLogger, outputLogger));\n+        public JcoderBuilder(ToolOutput.DualStreamToolOutput log) {\n+            super(\"jcoder\", new CompilerLogger(log));\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/JcoderEnvironment.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -33,1 +34,1 @@\n-        super(new PrintWriter(System.err, true), new PrintWriter(System.out, true));\n+        super(new ToolOutput.DualOutputStreamOutput());\n@@ -36,2 +37,2 @@\n-    protected JcoderTool(PrintWriter errorLogger, PrintWriter outputLogger) {\n-        super(errorLogger, outputLogger);\n+    protected JcoderTool(ToolOutput.DualStreamToolOutput logger) {\n+        super(logger);\n@@ -41,2 +42,2 @@\n-    public JcoderEnvironment getEnvironment(PrintWriter errorLogger, PrintWriter outputLogger) {\n-        JcoderEnvironment.JcoderBuilder builder = new JcoderEnvironment.JcoderBuilder(errorLogger, outputLogger);\n+    public JcoderEnvironment getEnvironment(ToolOutput.DualStreamToolOutput log) {\n+        JcoderEnvironment.JcoderBuilder builder = new JcoderEnvironment.JcoderBuilder(log);\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/JcoderTool.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -58,2 +59,2 @@\n-    public Main(PrintWriter errorLogger, PrintWriter outputLogger, String... argv) {\n-        super(errorLogger, outputLogger);\n+    public Main(ToolOutput.DualStreamToolOutput log, String... argv) {\n+        super(log);\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/Main.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -452,1 +453,1 @@\n-    private void decodeElementValue(DataInputStream in, PrintWriter out) throws IOException {\n+    private void decodeElementValue(DataInputStream in, ToolOutput out) throws IOException {\n@@ -505,1 +506,1 @@\n-    private void decodeAnnotation(DataInputStream in, PrintWriter out) throws IOException {\n+    private void decodeAnnotation(DataInputStream in, ToolOutput out) throws IOException {\n@@ -516,1 +517,1 @@\n-    private void decodeElementValuePairs(int count, DataInputStream in, PrintWriter out) throws IOException {\n+    private void decodeElementValuePairs(int count, DataInputStream in, ToolOutput out) throws IOException {\n@@ -561,1 +562,1 @@\n-    private void decodeInfo(DataInputStream in, PrintWriter out, String elementName, boolean hasAccessFlag) throws IOException {\n+    private void decodeInfo(DataInputStream in, ToolOutput out, String elementName, boolean hasAccessFlag) throws IOException {\n@@ -580,1 +581,1 @@\n-    private void decodeTypeAnnotation(DataInputStream in, PrintWriter out) throws IOException {\n+    private void decodeTypeAnnotation(DataInputStream in, ToolOutput out) throws IOException {\n@@ -610,1 +611,1 @@\n-    private void decodeAttr(DataInputStream in, PrintWriter out) throws IOException {\n+    private void decodeAttr(DataInputStream in, ToolOutput out) throws IOException {\n@@ -1075,1 +1076,1 @@\n-    private void decodeAttrs(DataInputStream in, PrintWriter out) throws IOException {\n+    private void decodeAttrs(DataInputStream in, ToolOutput out) throws IOException {\n@@ -1091,1 +1092,1 @@\n-    private void decodeMembers(DataInputStream in, PrintWriter out, String groupName, String elementName) throws IOException {\n+    private void decodeMembers(DataInputStream in, ToolOutput out, String groupName, String elementName) throws IOException {\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/ClassData.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -37,2 +38,2 @@\n-    \/\/ Output stream\n-    private final PrintWriter toolOutput;\n+    \/\/ Output stream or files or custom Strings\n+    private final ToolOutput toolOutput;\n@@ -50,1 +51,1 @@\n-    public PrintWriter getToolOutput() {\n+    public ToolOutput getToolOutput() {\n@@ -61,1 +62,1 @@\n-        getToolOutput().println(( args == null || args.length == 0) ? format : format(format, args));\n+        getToolOutput().printlns(( args == null || args.length == 0) ? format : format(format, args));\n@@ -66,1 +67,1 @@\n-        getToolOutput().println();\n+        getToolOutput().printlns(\"\");\n@@ -71,1 +72,1 @@\n-        getToolOutput().print(( args == null || args.length == 0) ? format : format(format, args));\n+        getToolOutput().prints(( args == null || args.length == 0) ? format : format(format, args));\n@@ -76,1 +77,1 @@\n-        getToolOutput().print(ch);\n+        getToolOutput().prints(ch);\n@@ -82,2 +83,2 @@\n-        public JDecBuilder(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n-            super(\"jdec\", toolOutput, new DecompilerLogger(errorLogger, outputLogger));\n+        public JDecBuilder(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput log) {\n+            super(\"jdec\", toolOutput, new DecompilerLogger(log));\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/JdecEnvironment.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -33,2 +34,2 @@\n-    protected JdecTool(PrintWriter toolOutput, PrintWriter errorOutput, PrintWriter loggerOutput) {\n-        super(toolOutput, errorOutput, loggerOutput);\n+    protected JdecTool(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput log) {\n+        super(toolOutput, log);\n@@ -37,2 +38,2 @@\n-    protected JdecTool(PrintWriter toolOutput) {\n-        super(toolOutput, new PrintWriter(System.err, true), new PrintWriter(System.out, true));\n+    protected JdecTool(ToolOutput toolOutput) {\n+        super(toolOutput, new ToolOutput.DualOutputStreamOutput());\n@@ -42,1 +43,1 @@\n-        this(new PrintWriter(new uEscWriter(toolOutput)));\n+        this(new ToolOutput.EscapedPrintStreamOutput(toolOutput));\n@@ -46,2 +47,2 @@\n-    public JdecEnvironment getEnvironment(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n-        JdecEnvironment.JDecBuilder builder = new JdecEnvironment.JDecBuilder(toolOutput, errorLogger, outputLogger);\n+    public JdecEnvironment getEnvironment(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput log) {\n+        JdecEnvironment.JDecBuilder builder = new JdecEnvironment.JDecBuilder(toolOutput, log);\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/JdecTool.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -42,4 +43,0 @@\n-    public Main(PrintStream toolOutput, String... argv) {\n-        super(toolOutput);\n-        parseArgs(argv);\n-    }\n@@ -47,2 +44,2 @@\n-    public Main(PrintWriter toolOutput, String... argv) {\n-        super(toolOutput);\n+    public Main(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput log, String... argv) {\n+        super(toolOutput, log);\n@@ -52,3 +49,2 @@\n-    public Main(PrintWriter toolOutput, PrintWriter errorOutput, PrintWriter loggerOutput, String... argv) {\n-        super(toolOutput, errorOutput, loggerOutput);\n-        parseArgs(argv);\n+    public Main(ToolOutput.EscapedPrintStreamOutput toolOutput, String[] argv) {\n+        this(toolOutput, new ToolOutput.DualOutputStreamOutput());\n@@ -59,1 +55,1 @@\n-        Main decoder = new Main(new PrintWriter(new uEscWriter(System.out)), argv);\n+        Main decoder = new Main(new ToolOutput.EscapedPrintStreamOutput(System.out), argv);\n@@ -150,1 +146,1 @@\n-                environment.getToolOutput().flush();\n+                environment.getToolOutput().finishClass(inputFileName.getFileName()\/*TODO replace by proper pkg.name?*\/);\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/Main.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -566,2 +567,2 @@\n-        public void print(PrintWriter out, int spacePadding) {\n-            out.print(PadRight(tag.tagName(), spacePadding));\n+        public void print(ToolOutput out, int spacePadding) {\n+            out.prints(PadRight(tag.tagName(), spacePadding));\n@@ -627,1 +628,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n@@ -629,1 +630,1 @@\n-            out.println(stringVal() + \";\");\n+            out.printlns(stringVal() + \";\");\n@@ -651,1 +652,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n@@ -653,1 +654,1 @@\n-            out.println(stringVal() + \";\");\n+            out.printlns(stringVal() + \";\");\n@@ -676,1 +677,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n@@ -678,1 +679,1 @@\n-            out.println(stringVal() + \";\");\n+            out.printlns(stringVal() + \";\");\n@@ -709,1 +710,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n@@ -711,1 +712,1 @@\n-            out.println(stringVal() + \";\");\n+            out.printlns(stringVal() + \";\");\n@@ -738,1 +739,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n@@ -740,1 +741,1 @@\n-            out.println(stringVal() + \";\");\n+            out.printlns(stringVal() + \";\");\n@@ -774,1 +775,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n@@ -895,1 +896,1 @@\n-        public void print(PrintWriter out, int spacePadding) {\n+        public void print(ToolOutput out, int spacePadding) {\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/ConstantPool.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n+\n@@ -62,1 +64,1 @@\n-    protected PrintWriter toolOutput;\n+    protected ToolOutput toolOutput;\n@@ -72,1 +74,1 @@\n-    public Indenter(PrintWriter toolOutput) {\n+    public Indenter(ToolOutput toolOutput) {\n@@ -85,1 +87,1 @@\n-        toolOutput.println(Indent(s));\n+        toolOutput.printlns(Indent(s));\n@@ -90,1 +92,1 @@\n-        toolOutput.println();\n+        toolOutput.printlns(\"'\");\n@@ -99,1 +101,1 @@\n-        toolOutput.println(Indent(new Formatter().format(format, args).toString()));\n+        toolOutput.printlns(Indent(new Formatter().format(format, args).toString()));\n@@ -104,1 +106,1 @@\n-        toolOutput.print(Indent(new Formatter().format(format, args).toString()));\n+        toolOutput.prints(Indent(new Formatter().format(format, args).toString()));\n@@ -109,1 +111,1 @@\n-        toolOutput.print(Indent(s));\n+        toolOutput.prints(Indent(s));\n@@ -114,1 +116,1 @@\n-        toolOutput.print(getIndentString());\n+        toolOutput.prints(getIndentString());\n@@ -119,1 +121,1 @@\n-        toolOutput.print(PadRight(s, totalWidth));\n+        toolOutput.prints(PadRight(s, totalWidth));\n@@ -124,1 +126,1 @@\n-        toolOutput.print(PadLeft(s, totalWidth));\n+        toolOutput.prints(PadLeft(s, totalWidth));\n@@ -129,1 +131,1 @@\n-        toolOutput.print(IndentPadRight(str, totalWidth));\n+        toolOutput.prints(IndentPadRight(str, totalWidth));\n@@ -134,1 +136,1 @@\n-        toolOutput.print(s);\n+        toolOutput.prints(s);\n@@ -139,1 +141,1 @@\n-        toolOutput.print(new Formatter().format(format, args));\n+        toolOutput.prints(new Formatter().format(format, args).toString());\n@@ -144,1 +146,1 @@\n-        toolOutput.println(s);\n+        toolOutput.printlns(s);\n@@ -149,1 +151,1 @@\n-        toolOutput.println();\n+        toolOutput.printlns(\"\");\n@@ -155,1 +157,1 @@\n-            toolOutput.println();\n+            toolOutput.printlns(\"\");\n@@ -162,1 +164,1 @@\n-        toolOutput.println(new Formatter().format(format, args));\n+        toolOutput.printlns(new Formatter().format(format, args).toString());\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/Indenter.java","additions":19,"deletions":17,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -35,2 +36,0 @@\n-    \/\/ Output stream\n-    private final PrintWriter toolOutput;\n@@ -40,1 +39,0 @@\n-        this.toolOutput = builder.toolOutput;\n@@ -54,3 +52,0 @@\n-    public PrintWriter getToolOutput() {\n-        return toolOutput;\n-    }\n@@ -60,2 +55,2 @@\n-        public JDecBuilder(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n-            super(\"jdis\", toolOutput, new DecompilerLogger(errorLogger, outputLogger));\n+        public JDecBuilder(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput outerLog) {\n+            super(\"jdis\", toolOutput, new DecompilerLogger(outerLog));\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/JdisEnvironment.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import org.openjdk.asmtools.common.uEscWriter;\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -29,3 +29,0 @@\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n-\n@@ -34,6 +31,2 @@\n-    protected JdisTool(PrintWriter toolOutput, PrintWriter errorOutput, PrintWriter loggerOutput) {\n-        super(toolOutput, errorOutput, loggerOutput);\n-    }\n-\n-    protected JdisTool(PrintWriter toolOutput) {\n-        super(toolOutput, new PrintWriter(System.err, true), new PrintWriter(System.out, true));\n+    protected JdisTool(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput outerLog) {\n+        super(toolOutput, outerLog);\n@@ -42,2 +35,2 @@\n-    protected JdisTool(PrintStream toolOutput) {\n-        this(new PrintWriter(new uEscWriter(toolOutput)));\n+    protected JdisTool(ToolOutput toolOutput) {\n+        super(toolOutput, new ToolOutput.DualOutputStreamOutput());\n@@ -47,2 +40,2 @@\n-    public JdisEnvironment getEnvironment(PrintWriter toolOutput, PrintWriter errorLogger, PrintWriter outputLogger) {\n-        JDecBuilder builder = new JDecBuilder(toolOutput, errorLogger, outputLogger);\n+    public JdisEnvironment getEnvironment(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput outerLog) {\n+        JDecBuilder builder = new JDecBuilder(toolOutput, outerLog);\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/JdisTool.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -25,2 +25,0 @@\n-\/\/ import org.openjdk.asmtools.common.Tool;\n-\n@@ -28,1 +26,1 @@\n-import org.openjdk.asmtools.common.uEscWriter;\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -33,2 +31,0 @@\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n@@ -36,1 +32,0 @@\n-import java.util.ArrayList;\n@@ -51,6 +46,1 @@\n-    public Main(PrintStream toolOutput, String... argv) {\n-        super(toolOutput);\n-        parseArgs(argv);\n-    }\n-\n-    public Main(PrintWriter toolOutput, String... argv) {\n+    public Main(ToolOutput toolOutput, String... argv) {\n@@ -61,2 +51,2 @@\n-    public Main(PrintWriter toolOutput, PrintWriter errorOutput, PrintWriter loggerOutput, String... argv) {\n-        super(toolOutput, errorOutput, loggerOutput);\n+    public Main(ToolOutput toolOutput, ToolOutput.DualStreamToolOutput logger, String... argv) {\n+        super(toolOutput, logger);\n@@ -68,1 +58,1 @@\n-        Main disassembler = new Main(new PrintWriter(new uEscWriter(System.out)), argv);\n+        Main disassembler = new Main(new ToolOutput.EscapedPrintStreamOutput(System.out), argv);\n@@ -82,1 +72,1 @@\n-                environment.getToolOutput().flush();\n+                environment.getOutputs().flush();\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/Main.java","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-                    cn.toolOutput.println();\n+                    cn.toolOutput.printlns(\"\");\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/RecordData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,0 +3,2 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n+\n@@ -20,0 +22,3 @@\n+    public ToolOutput getToolOutputWrapper() {\n+        return new ToolOutput.PrintWriterOutput(toolOutput);\n+    }\n@@ -43,0 +48,4 @@\n+\n+    public ToolOutput.DualStreamToolOutput getLoggers() {\n+        return new ToolOutput.DualOutputStreamOutput(getLoggerOutput(), getErrorOutput());\n+    }\n","filename":"test\/org\/openjdk\/asmtools\/ThreeStringWriters.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-                    decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), \"-g\", clazz.getAbsolutePath());\n+                    decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), \"-g\", clazz.getAbsolutePath());\n@@ -30,1 +30,1 @@\n-                    decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), clazz.getAbsolutePath());\n+                    decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), clazz.getAbsolutePath());\n@@ -64,1 +64,1 @@\n-            org.openjdk.asmtools.jcoder.Main coder = new org.openjdk.asmtools.jcoder.Main(outs.getErrorOutput(), outs.getLoggerOutput(), savedCode.getAbsolutePath(), \"-d\", worker.getCompileDir().getAbsolutePath());\n+            org.openjdk.asmtools.jcoder.Main coder = new org.openjdk.asmtools.jcoder.Main(outs.getLoggers(), savedCode.getAbsolutePath(), \"-d\", worker.getCompileDir().getAbsolutePath());\n","filename":"test\/org\/openjdk\/asmtools\/jdec\/JdecJcod.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), nonExisitngFile);\n+        Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), nonExisitngFile);\n@@ -39,1 +39,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile);\n+        Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), classFile);\n@@ -56,1 +56,1 @@\n-            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), org.openjdk.asmtools.Main.STDIN_SWITCH);\n+            Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), org.openjdk.asmtools.Main.STDIN_SWITCH);\n","filename":"test\/org\/openjdk\/asmtools\/jdec\/MainTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+import org.openjdk.asmtools.common.ToolOutput;\n@@ -28,1 +29,1 @@\n-                    disassem = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), \"-g\", clazz.getAbsolutePath());\n+                    disassem = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), \"-g\", clazz.getAbsolutePath());\n@@ -30,1 +31,1 @@\n-                    disassem = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), clazz.getAbsolutePath());\n+                    disassem = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), clazz.getAbsolutePath());\n@@ -64,1 +65,1 @@\n-            org.openjdk.asmtools.jasm.Main asm = new org.openjdk.asmtools.jasm.Main(outs.getErrorOutput(), outs.getLoggerOutput(), savedAsm.getAbsolutePath(), \"-d\", worker.getCompileDir().getAbsolutePath());\n+            org.openjdk.asmtools.jasm.Main asm = new org.openjdk.asmtools.jasm.Main(outs.getLoggers(), savedAsm.getAbsolutePath(), \"-d\", worker.getCompileDir().getAbsolutePath());\n","filename":"test\/org\/openjdk\/asmtools\/jdis\/JdisJasm.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), nonExisitngFile);\n+        Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), nonExisitngFile);\n@@ -40,1 +40,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile);\n+        Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), classFile);\n@@ -59,1 +59,1 @@\n-            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), org.openjdk.asmtools.Main.STDIN_SWITCH);\n+            Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), org.openjdk.asmtools.Main.STDIN_SWITCH);\n@@ -63,0 +63,1 @@\n+            \/\/pise to do stder:-\/\n@@ -79,1 +80,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile);\n+        Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), classFile);\n@@ -110,1 +111,1 @@\n-        Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), dir.getAbsolutePath() + \"\/\" + fqn + \".class\");\n+        Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), dir.getAbsolutePath() + \"\/\" + fqn + \".class\");\n@@ -134,1 +135,1 @@\n-            Main decoder = new Main(outs.getToolOutput(), outs.getErrorOutput(), outs.getLoggerOutput(), classFile, org.openjdk.asmtools.Main.STDIN_SWITCH, classFile, org.openjdk.asmtools.Main.STDIN_SWITCH);\n+            Main decoder = new Main(outs.getToolOutputWrapper(), outs.getLoggers(), classFile, org.openjdk.asmtools.Main.STDIN_SWITCH, classFile, org.openjdk.asmtools.Main.STDIN_SWITCH);\n","filename":"test\/org\/openjdk\/asmtools\/jdis\/MainTest.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}