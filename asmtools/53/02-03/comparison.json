{"files":[{"patch":"@@ -33,0 +33,9 @@\n+\/**\n+ * This class is a generic interface, symbolising any input for jdis\/jasm\/jdec\/jcoder.\n+ * Asmtools as application internally uses FileInput and StdinInput.\n+ * UnitTests for asmtools uses mainly StringInput for assemblers  and ByteInput for disasemblers.\n+ *\n+ * String\/Byte\/Stream inputs can be used as any 3rd part code which do not need files, aka IDE, instrumetations or similar.\n+ *\n+ * The interface methods goes in favor of asmtools, and for details and help see individual implementations\n+ *\/\n","filename":"src\/org\/openjdk\/asmtools\/common\/inputs\/ToolInput.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,9 @@\n+package org.openjdk.asmtools.common.outputs;\n+\n+public class StdoutOutput extends EscapedPrintStreamOutput {\n+\n+    public StdoutOutput() {\n+        super(System.out);\n+    }\n+\n+}\n","filename":"src\/org\/openjdk\/asmtools\/common\/outputs\/StdoutOutput.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"added"},{"patch":"@@ -37,1 +37,9 @@\n-\n+\/**\n+ * This class is a generic interface, symbolising any output from jdis\/jasm\/jdec\/jcoder.\n+ * Asmtools as application internally uses DirOutput and StdoutOutput (via EscapedPrintStreamOutput).\n+ * UnitTests for asmtools uses mainly ByteOutput for assemblers  and TextOutput for disasemblers.\n+ *\n+ * Text\/Byte\/EscapedPrintStream outputs can be used as any 3rd part code which do not need files, aka IDE, instrumetations or similar.\n+ *\n+ * The interface methods goes in favor of asmtools, and for details and help see individual implementations\n+ *\/\n","filename":"src\/org\/openjdk\/asmtools\/common\/outputs\/ToolOutput.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,0 +31,10 @@\n+\/**\n+ * This is special case of output - for log and trace outputs form compilation, not for bytecode\/sources themselves.\n+ * Historically, asmtoosl had duals streamlooger, where tracing was polluting stdout.\n+ * This logic is by default off, but can be turned on by secret switch if needed.\n+ * For application, although logging is still done in two streams, the log is united into stderr via StderrLog.\n+ *\n+ * UnitTest and 3rd party applications such as IDE or instrumentation providers s should be using unified StringLog.\n+ *\n+ * Once (if ever) the historical dependants on duality of log are removed, the logger should be simple and direct to singlebuffer.\n+ *\/\n","filename":"src\/org\/openjdk\/asmtools\/common\/outputs\/log\/DualStreamToolOutput.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-    public SingleDualOutputStreamOutput() {\n-        this(System.err);\n-    }\n","filename":"src\/org\/openjdk\/asmtools\/common\/outputs\/log\/SingleDualOutputStreamOutput.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2023, Oracle, Red Hat  and\/or theirs affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.asmtools.common.outputs.log;\n+\n+\n+public class StderrLog extends SingleDualOutputStreamOutput {\n+\n+    public StderrLog() {\n+        super(System.err);\n+    }\n+}\n","filename":"src\/org\/openjdk\/asmtools\/common\/outputs\/log\/StderrLog.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -27,1 +27,0 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n@@ -29,0 +28,1 @@\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -34,1 +34,1 @@\n-        super(toolOutput, new SingleDualOutputStreamOutput());\n+        super(toolOutput, new StderrLog());\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/JasmTool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.asmtools.common.outputs.StdoutOutput;\n@@ -27,1 +28,0 @@\n-import org.openjdk.asmtools.common.outputs.EscapedPrintStreamOutput;\n@@ -30,1 +30,0 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n@@ -32,0 +31,1 @@\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -120,1 +120,1 @@\n-        Main compiler = new Main(new EscapedPrintStreamOutput(System.out), new SingleDualOutputStreamOutput(), argv);\n+        Main compiler = new Main(new StdoutOutput(), new StderrLog(), argv);\n","filename":"src\/org\/openjdk\/asmtools\/jasm\/Main.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n@@ -29,0 +28,1 @@\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -33,1 +33,1 @@\n-        super(toolOutput, new SingleDualOutputStreamOutput());\n+        super(toolOutput, new StderrLog());\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/JcoderTool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.outputs.StdoutOutput;\n@@ -28,1 +29,0 @@\n-import org.openjdk.asmtools.common.outputs.EscapedPrintStreamOutput;\n@@ -105,1 +105,1 @@\n-        Main compiler = new Main(new EscapedPrintStreamOutput(System.out), argv);\n+        Main compiler = new Main(new StdoutOutput(), argv);\n","filename":"src\/org\/openjdk\/asmtools\/jcoder\/Main.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n@@ -30,0 +29,1 @@\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -40,1 +40,1 @@\n-        super(toolOutput, new SingleDualOutputStreamOutput());\n+        super(toolOutput, new StderrLog());\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/JdecTool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.outputs.StdoutOutput;\n@@ -30,1 +31,0 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n@@ -32,0 +32,1 @@\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -67,1 +68,1 @@\n-        this(toolOutput, new SingleDualOutputStreamOutput(), argv);\n+        this(toolOutput, new StderrLog(), argv);\n@@ -72,1 +73,1 @@\n-        Main decoder = new Main(new EscapedPrintStreamOutput(System.out), argv);\n+        Main decoder = new Main(new StdoutOutput(), argv);\n","filename":"src\/org\/openjdk\/asmtools\/jdec\/Main.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n@@ -29,0 +28,1 @@\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -38,1 +38,1 @@\n-        super(toolOutput, new SingleDualOutputStreamOutput());\n+        super(toolOutput, new StderrLog());\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/JdisTool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.asmtools.common.outputs.StdoutOutput;\n@@ -28,1 +29,0 @@\n-import org.openjdk.asmtools.common.outputs.EscapedPrintStreamOutput;\n@@ -78,1 +78,1 @@\n-        Main disassembler = new Main(new EscapedPrintStreamOutput(System.out), argv);\n+        Main disassembler = new Main(new StdoutOutput(), argv);\n","filename":"src\/org\/openjdk\/asmtools\/jdis\/Main.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -22,1 +22,1 @@\n-        DualStreamToolOutput log = new SingleDualOutputStreamOutput(); \/\/todo hide to ToolOutput.StringLog once done\n+        DualStreamToolOutput log = new StderrLog(); \/\/todo hide to ToolOutput.StringLog once done\n@@ -46,1 +46,1 @@\n-        DualStreamToolOutput log = new SingleDualOutputStreamOutput(); \/\/todo hide to ToolOutput.StringLog once done\n+        DualStreamToolOutput log = new StderrLog(); \/\/todo hide to ToolOutput.StringLog once done\n","filename":"test\/java\/org\/openjdk\/asmtools\/jasm\/MultipleFilesInSingleJasmTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -22,1 +22,1 @@\n-        DualStreamToolOutput log = new SingleDualOutputStreamOutput(); \/\/todo hide to ToolOutput.StringLog once done\n+        DualStreamToolOutput log = new StderrLog(); \/\/todo hide to ToolOutput.StringLog once done\n","filename":"test\/java\/org\/openjdk\/asmtools\/jcoder\/MultipleFilesInSingleJcoderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,2 +8,2 @@\n-import org.openjdk.asmtools.common.outputs.EscapedPrintStreamOutput;\n-import org.openjdk.asmtools.common.outputs.log.SingleDualOutputStreamOutput;\n+import org.openjdk.asmtools.common.outputs.StdoutOutput;\n+import org.openjdk.asmtools.common.outputs.log.StderrLog;\n@@ -111,1 +111,1 @@\n-        org.openjdk.asmtools.jasm.Main jasmTool = new org.openjdk.asmtools.jasm.Main(new EscapedPrintStreamOutput(System.out), new SingleDualOutputStreamOutput(), sourceWithoutSuper.getAbsolutePath(), \"-d\", dir.getAbsolutePath());\n+        org.openjdk.asmtools.jasm.Main jasmTool = new org.openjdk.asmtools.jasm.Main(new StdoutOutput(), new StderrLog(), sourceWithoutSuper.getAbsolutePath(), \"-d\", dir.getAbsolutePath());\n","filename":"test\/java\/org\/openjdk\/asmtools\/jdis\/MainTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}