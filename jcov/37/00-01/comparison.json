{"files":[{"patch":"@@ -378,1 +378,0 @@\n-        <!--module tests-->\n@@ -380,0 +379,1 @@\n+            <arg value=\"-cpa:${build.dir}\/jcov.jar:${build.dir}\/jcov_file_saver.jar\"\/>\n@@ -386,11 +386,2 @@\n-            <arg value=\"-workDir:${result.dir}\/test\/workdir_mp\"\/>\n-            <arg value=\"-reportDir:${result.dir}\/test\/report_mp\"\/>\n-            <arg value=\"-jdk:${java.home}\"\/>\n-            <arg value=\"-v1\"\/>\n-            <arg value=\"..\/test\/module\"\/>\n-        <\/java>\n-        <!--classpath based tests-->\n-        <java jar=\"${jtreg.home}\/lib\/jtreg.jar\" fork=\"true\">\n-            <arg value=\"-cpa:${build.dir}\/jcov.jar:${build.dir}\/jcov_file_saver.jar\"\/>\n-            <arg value=\"-workDir:${result.dir}\/test\/workdir_cp\"\/>\n-            <arg value=\"-reportDir:${result.dir}\/test\/report_cp\"\/>\n+            <arg value=\"-workDir:${result.dir}\/test\/workdir\"\/>\n+            <arg value=\"-reportDir:${result.dir}\/test\/report\"\/>\n@@ -400,1 +391,1 @@\n-            <arg value=\"..\/test\/unit\"\/>\n+            <arg value=\"..\/test\"\/>\n","filename":"build\/build.xml","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -40,10 +40,11 @@\n-            try {\n-                Optional<InstrumentationPlugin> service = ServiceLoader.load(InstrumentationPlugin.class).findFirst();\n-                PLUGIN = service.isPresent() ? service.get() :\n-                        \/\/for backward compatibility for a non-modular jar\n-                        (InstrumentationPlugin)\n-                                Class.forName(\"com.sun.tdk.jcov.instrument.asm.ASMInstrumentationPlugin\")\n-                                        .getConstructor().newInstance();\n-            } catch (InstantiationException|IllegalAccessException|InvocationTargetException|NoSuchMethodException|ClassNotFoundException e) {\n-                throw new RuntimeException(e);\n-            }\n+            PLUGIN = ServiceLoader.load(InstrumentationPlugin.class).findFirst().orElseGet(() -> {\n+                try {\n+                    \/\/for backward compatibility for a non-modular jar\n+                    return (InstrumentationPlugin)\n+                            Class.forName(\"com.sun.tdk.jcov.instrument.asm.ASMInstrumentationPlugin\")\n+                                    .getConstructor().newInstance();\n+                } catch (InstantiationException | IllegalAccessException | InvocationTargetException |\n+                        NoSuchMethodException | ClassNotFoundException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            });\n@@ -56,10 +57,11 @@\n-            try {\n-                Optional<ModifiersFactory> service = ServiceLoader.load(ModifiersFactory.class).findFirst();\n-                MODIFIERS_FACTORY = service.isPresent() ? service.get() :\n-                        \/\/for backward compatibility for a non-modular jar\n-                        (ModifiersFactory)\n-                                Class.forName(\"com.sun.tdk.jcov.instrument.asm.ASMModifiers$ASMModfiersFactory\")\n-                                        .getConstructor().newInstance();\n-            } catch (InstantiationException|IllegalAccessException|InvocationTargetException|NoSuchMethodException|ClassNotFoundException e) {\n-                throw new RuntimeException(e);\n-            }\n+            MODIFIERS_FACTORY = ServiceLoader.load(ModifiersFactory.class).findFirst().orElseGet(() -> {\n+                try {\n+                    \/\/for backward compatibility for a non-modular jar\n+                    return (ModifiersFactory)\n+                            Class.forName(\"com.sun.tdk.jcov.instrument.asm.ASMModifiers$ASMModfiersFactory\")\n+                            .getConstructor().newInstance();\n+                } catch (InstantiationException | IllegalAccessException | InvocationTargetException |\n+                        NoSuchMethodException | ClassNotFoundException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            });\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/instrument\/Services.java","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"}]}