{"files":[{"patch":"@@ -4,1 +4,1 @@\n-  Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+  Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-            * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+            * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -220,0 +220,2 @@\n+        <property file=\"filesaver.replace.properties\"\/>\n+\n@@ -231,2 +233,3 @@\n-                    <replaceregex pattern=\"\\\/\\*@\" replace=\"@\"\/>\n-                    <replaceregex pattern=\"@\\*\\\/\" replace=\"@\"\/>\n+                    <replaceregex\n+                            pattern=\"\\\/\\\/@.*@\\\/\\\/\"\n+                            replace=\"${FILE_SAVER}\"\/>\n@@ -234,3 +237,0 @@\n-                <filterreader classname=\"org.apache.tools.ant.filters.ReplaceTokens\">\n-                    <param type=\"propertiesfile\" value=\"filesaver.replace.properties\"\/>\n-                <\/filterreader>\n@@ -256,0 +256,2 @@\n+        <property file=\"networksaver.replace.properties\"\/>\n+\n@@ -265,2 +267,3 @@\n-                    <replaceregex pattern=\"\\\/\\*@\" replace=\"@\"\/>\n-                    <replaceregex pattern=\"@\\*\\\/\" replace=\"@\"\/>\n+                    <replaceregex\n+                            pattern=\"\\\/\\\/@.*@\\\/\\\/\"\n+                            replace=\"${NETWORK_SAVER}\"\/>\n@@ -268,3 +271,0 @@\n-                <filterreader classname=\"org.apache.tools.ant.filters.ReplaceTokens\">\n-                    <param type=\"propertiesfile\" value=\"networksaver.replace.properties\"\/>\n-                <\/filterreader>\n@@ -290,1 +290,4 @@\n-        <javac includeantruntime=\"false\" encoding=\"iso-8859-1\" debug=\"true\" target=\"8\" source=\"8\"\n+        <javac includeantruntime=\"false\" encoding=\"iso-8859-1\"\n+               debug=\"no\"\n+               target=\"8\"\n+               source=\"8\"\n@@ -332,1 +335,4 @@\n-        <javac includeantruntime=\"false\" encoding=\"iso-8859-1\" debug=\"true\" target=\"8\" source=\"8\"\n+        <javac includeantruntime=\"false\" encoding=\"iso-8859-1\"\n+               debug=\"no\"\n+               target=\"8\"\n+               source=\"8\"\n","filename":"build\/build.xml","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-# Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\r\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\r\n@@ -24,1 +24,1 @@\n-BUILD_MODIFIED_SAVER_STRING = com.sun.tdk.jcov.runtime.TemplateFileSaver\n\\ No newline at end of file\n+ FILE_SAVER= saver = new TemplateFileSaver();\n\\ No newline at end of file\n","filename":"build\/filesaver.replace.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-# Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\r\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\r\n@@ -24,1 +24,1 @@\n-BUILD_MODIFIED_SAVER_STRING = com.sun.tdk.jcov.runtime.JCovSESocketSaver\n\\ No newline at end of file\n+NETWORK_SAVER= saver = new JCovSESocketSaver();\n\\ No newline at end of file\n","filename":"build\/networksaver.replace.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-# Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-build.number = 9\n+build.number = 13\n","filename":"build\/release.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    public final List<MemberDescr> members;\n+    public final List<MemberDescr> members = new ArrayList<>();\n@@ -49,1 +49,0 @@\n-        members = new ArrayList<MemberDescr>();\n@@ -79,2 +78,2 @@\n-     * @param name\n-     * @param signature\n+     * @param name method's name\n+     * @param signature  method's signature\n@@ -93,1 +92,1 @@\n-     * Finds a class method by its name and signature.\n+     * Finds a class method by its name.\n@@ -95,2 +94,1 @@\n-     * @param name\n-     * @param signature\n+     * @param name field name\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/api\/ClassDescr.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-        logger.log(Level.INFO, \"Instrumenting classfile ''{0}''...\", fname);\n+        \/\/ to suppress verbosity: logger.log(Level.INFO, \"Instrumenting classfile ''{0}''...\", fname);\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/insert\/AbstractUniversalInstrumenter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,2 @@\n+import static java.lang.String.format;\n+\n@@ -56,2 +58,0 @@\n-    \/\/    private List<String> instrumented = new ArrayList<String>();\n-\/\/    private HashSet<String> instrumented = new HashSet<String>(); \/\/ Set should work better\n@@ -106,1 +106,1 @@\n-            logger.log(Level.INFO, \"{0} - skipped (should not perform self-instrument)\", className);\n+            logger.log(Level.INFO, format(\"%s - skipped (should not perform self-instrument)\", className));\n@@ -111,1 +111,1 @@\n-            logger.log(Level.WARNING, \"{0} - skipped (should not instrument generated classes)\");\n+            logger.log(Level.WARNING, format(\"%s - skipped (should not instrument generated classes)\", className));\n@@ -143,1 +143,1 @@\n-            throw new IOException(\"Not a java classfile (0xCAFEBABE header not found)\");\n+            throw new IOException(\"Corrupted class file (0xCAFEBABE header not found)\");\n@@ -207,1 +207,1 @@\n-                        \"It's recomended to add saveatend at java\/lang\/Shutdown.runHooks method. Data could be lost otherwise.\");\n+                        \"It's recommended to add saveAtEnd at java\/lang\/Shutdown.runHooks method. Data could be lost otherwise.\");\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/instrument\/ClassMorph.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+\n+import static java.lang.String.format;\n@@ -34,0 +36,1 @@\n+\n@@ -36,0 +39,3 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n@@ -42,1 +48,1 @@\n-    private final DataClass k;\n+    private final DataClass dataClass;\n@@ -45,1 +51,3 @@\n-    public DeferringMethodClassAdapter(final ClassVisitor cv, DataClass k, InstrumentationParams params) {\n+    private static final Logger logger = Logger.getLogger(\"com.sun.tdk.jcov\");\n+\n+    public DeferringMethodClassAdapter(final ClassVisitor cv, DataClass dataClass, InstrumentationParams params) {\n@@ -47,1 +55,1 @@\n-        this.k = k;\n+        this.dataClass = dataClass;\n@@ -59,1 +67,1 @@\n-        k.setInfo(access, signature, superName, interfaces);\n+        dataClass.setInfo(access, signature, superName, interfaces);\n@@ -69,1 +77,1 @@\n-            DataField fld = new DataField(k, access, name, desc, signature, value);\n+            DataField fld = new DataField(dataClass, access, name, desc, signature, value);\n@@ -78,1 +86,1 @@\n-        k.setSource(source);\n+        dataClass.setSource(source);\n@@ -88,1 +96,2 @@\n-        if (!InstrumentationOptions.isSkipped(k.getFullname(), name, access)\n+\n+        if (!InstrumentationOptions.isSkipped(dataClass.getFullname(), name, access)\n@@ -92,1 +101,1 @@\n-                && !\"java\/lang\/invoke\/VarHandle\".equals(k.getFullname())) {\n+                && !\"java\/lang\/invoke\/VarHandle\".equals(dataClass.getFullname())) {\n@@ -113,1 +122,1 @@\n-            DataMethodEntryOnly meth = new DataMethodEntryOnly(k, access, name, desc, signature, exceptions);\n+            DataMethodEntryOnly meth = new DataMethodEntryOnly(dataClass, access, name, desc, signature, exceptions);\n@@ -116,0 +125,1 @@\n+\n@@ -121,0 +131,1 @@\n+\n@@ -122,3 +133,4 @@\n-        if (InstrumentationOptions.isSkipped(k.getFullname(), name, access) || mv == null\n-                || (access & ACC_ABSTRACT) != 0\n-                || (access & ACC_NATIVE) != 0) {\n+        if (InstrumentationOptions.isSkipped(dataClass.getFullname(), name, access) ||\n+                mv == null ||\n+                (access & ACC_ABSTRACT) != 0 ||\n+                (access & ACC_NATIVE) != 0) {\n@@ -128,2 +140,2 @@\n-                    || InstrumentationOptions.isSkipped(k.getFullname(), name, access)) {\n-                DataMethod meth = new DataMethodInvoked(k, access, name, desc, signature, exceptions);\n+                    || InstrumentationOptions.isSkipped(dataClass.getFullname(), name, access)) {\n+                DataMethod meth = new DataMethodInvoked(dataClass, access, name, desc, signature, exceptions);\n@@ -138,3 +150,2 @@\n-        if (k.getFullname().equals(\"sun\/awt\/X11\/XWindowPeer\")\n-                && name.equals(\"handleButtonPressRelease\")) {\n-            DataMethodEntryOnly meth = new DataMethodEntryOnly(k, access, name, desc, signature, exceptions);\n+        if (dataClass.getFullname().equals(\"sun\/awt\/X11\/XWindowPeer\") && name.equals(\"handleButtonPressRelease\")) {\n+            DataMethodEntryOnly meth = new DataMethodEntryOnly(dataClass, access, name, desc, signature, exceptions);\n@@ -147,1 +158,1 @@\n-                DataMethodEntryOnly meth = new DataMethodEntryOnly(k, access, name, desc, signature, exceptions);\n+                DataMethodEntryOnly meth = new DataMethodEntryOnly(dataClass, access, name, desc, signature, exceptions);\n@@ -151,1 +162,1 @@\n-                DataMethodWithBlocks meth = new DataMethodWithBlocks(k, access, name, desc, signature, exceptions);\n+                DataMethodWithBlocks meth = new DataMethodWithBlocks(dataClass, access, name, desc, signature, exceptions);\n@@ -155,1 +166,1 @@\n-                DataMethodWithBlocks meth = new DataMethodWithBlocks(k, access, name, desc, signature, exceptions);\n+                DataMethodWithBlocks meth = new DataMethodWithBlocks(dataClass, access, name, desc, signature, exceptions);\n@@ -165,0 +176,3 @@\n+    \/**\n+     * Visit a method declaration\n+     *\/\n@@ -166,1 +180,2 @@\n-    public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n+    public MethodVisitor visitMethod(int access, String methodName, String desc, String signature, String[] exceptions) {\n+\n@@ -168,1 +183,1 @@\n-            return super.visitMethod(access, name, desc, signature, exceptions);\n+            return super.visitMethod(access, methodName, desc, signature, exceptions);\n@@ -170,1 +185,0 @@\n-        MethodVisitor mv = visitMethodCoverage(access, name, desc, signature, exceptions);\n@@ -172,1 +186,5 @@\n-        if (\"<clinit>\".equals(name) && !params.isDynamicCollect() && (k.getPackageName().startsWith(\"java\/lang\/\"))) {\n+        MethodVisitor mv = visitMethodCoverage(access, methodName, desc, signature, exceptions);\n+\n+        if (\"<clinit>\".equals(methodName) &&\n+                !params.isDynamicCollect() &&\n+                (dataClass.getPackageName().startsWith(\"java\/lang\/\"))) {\n@@ -175,1 +193,3 @@\n-                    mv.visitMethodInsn(INVOKESTATIC, \"com\/sun\/tdk\/jcov\/runtime\/Collect\", \"init\", \"()V\", false);\n+                    mv.visitMethodInsn(INVOKESTATIC,\n+                            \"com\/sun\/tdk\/jcov\/runtime\/Collect\", \"init\", \"()V\",\n+                            false);\n@@ -182,1 +202,1 @@\n-                && params.isCallerFilterAccept(k.getFullname())\n+                && params.isCallerFilterAccept(dataClass.getFullname())\n@@ -185,2 +205,2 @@\n-            if (name.equals(\"<clinit>\")) {\n-                int id = (name + desc).hashCode();\n+            if (methodName.equals(\"<clinit>\")) {\n+                int id = (methodName + desc).hashCode();\n@@ -188,1 +208,3 @@\n-                mv.visitMethodInsn(INVOKESTATIC, \"com\/sun\/tdk\/jcov\/runtime\/CollectDetect\", \"setExpected\", \"(I)V\", false);\n+                mv.visitMethodInsn(INVOKESTATIC,\n+                        \"com\/sun\/tdk\/jcov\/runtime\/CollectDetect\", \"setExpected\", \"(I)V\",\n+                        false);\n@@ -193,2 +215,3 @@\n-        if (params.isInnerInvacationsOff() && Utils.isAdvanceStaticInstrAllowed(k.getFullname(), name)) {\n-            if (name.equals(\"<clinit>\")) {\n+        if (params.isInnerInvacationsOff() &&\n+                Utils.isAdvanceStaticInstrAllowed(dataClass.getFullname(), methodName)) {\n+            if (methodName.equals(\"<clinit>\")) {\n@@ -203,1 +226,1 @@\n-        if (params.isDataSaveFilterAccept(k.getFullname(), name, true)) {\n+        if (params.isDataSaveFilterAccept(dataClass.getFullname(), methodName, true)) {\n@@ -207,1 +230,1 @@\n-        if (params.isDataSaveFilterAccept(k.getFullname(), name, false)) {\n+        if (params.isDataSaveFilterAccept(dataClass.getFullname(), methodName, false)) {\n@@ -217,1 +240,1 @@\n-            mv = new InvokeMethodAdapter(mv, k.getFullname(), params);\n+            mv = new InvokeMethodAdapter(mv, dataClass.getFullname(), params);\n@@ -219,1 +242,1 @@\n-            mv = new StaticInvokeMethodAdapter(mv, k.getFullname(), name, access, params);\n+            mv = new StaticInvokeMethodAdapter(mv, dataClass.getFullname(), methodName, access, params);\n@@ -223,2 +246,2 @@\n-        if(plugin != null)\n-            mv = plugin.methodVisitor(access, k.getFullname(), name, desc, mv);\n+        if (plugin != null)\n+            mv = plugin.methodVisitor(access, dataClass.getFullname(), methodName, desc, mv);\n@@ -231,1 +254,1 @@\n-        k.addAnnotation(anno);\n+        dataClass.addAnnotation(anno);\n@@ -243,3 +266,3 @@\n-            if (k.getFullname().equals(fullClassName)) {\n-                k.setInner(true);\n-                k.setAnonym(className == null);\n+            if (dataClass.getFullname().equals(fullClassName)) {\n+                dataClass.setInner(true);\n+                dataClass.setAnonym(className == null);\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/instrument\/DeferringMethodClassAdapter.java","additions":65,"deletions":42,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,2 +90,2 @@\n-                        \"com\/sun\/tdk\/jcov\/runtime\/Collect\", \"hit\", \"(I)V\", false));\n-\n+                        \"com\/sun\/tdk\/jcov\/runtime\/Collect\", \"hit\", \"(I)V\",\n+                        false));\n@@ -98,0 +98,3 @@\n+    \/**\n+     * Visit the Code Attribute\n+     *\/\n@@ -108,1 +111,2 @@\n-                        \"com\/sun\/tdk\/jcov\/runtime\/Collect\", \"hit\", \"(I)V\", false));\n+                        \"com\/sun\/tdk\/jcov\/runtime\/Collect\", \"hit\", \"(I)V\",\n+                        false));\n@@ -124,1 +128,2 @@\n-        if (params.isInnerInvacationsOff() && Utils.isAdvanceStaticInstrAllowed(className, name)) {\n+        if (params.isInnerInvacationsOff() &&\n+                Utils.isAdvanceStaticInstrAllowed(this.className, name)) {\n@@ -148,1 +153,2 @@\n-                if (params.isInnerInvacationsOff() && Utils.isAdvanceStaticInstrAllowed(className, methName\/*\"<init>\"*\/)) {\n+                if (params.isInnerInvacationsOff() &&\n+                        Utils.isAdvanceStaticInstrAllowed(className, methName\/*\"<init>\"*\/)) {\n@@ -152,1 +158,3 @@\n-                        super.visitMethodInsn(INVOKESTATIC, \"com\/sun\/tdk\/jcov\/runtime\/CollectDetect\", \"setExpected\", \"(I)V\", false);\n+                        super.visitMethodInsn(INVOKESTATIC,\n+                                \"com\/sun\/tdk\/jcov\/runtime\/CollectDetect\", \"setExpected\", \"(I)V\",\n+                                false);\n@@ -154,1 +162,3 @@\n-                        super.visitMethodInsn(INVOKESTATIC, \"com\/sun\/tdk\/jcov\/runtime\/CollectDetect\", \"leaveClinit\", \"()V\", false);\n+                        super.visitMethodInsn(INVOKESTATIC,\n+                                \"com\/sun\/tdk\/jcov\/runtime\/CollectDetect\", \"leaveClinit\", \"()V\",\n+                                false);\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/instrument\/StaticInvokeMethodAdapter.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,3 @@\n-    \/\/ This constant is replaced in ANT build script (see files se.replace.properties, me.replace.properties and so on)\n-    private final static String saverClassnameString = \"\/*@BUILD_MODIFIED_SAVER_STRING@*\/\";\n+\n+    protected static boolean isVMReady = false;\n+\n@@ -262,1 +263,0 @@\n-\n@@ -266,1 +266,1 @@\n-                m = \"com.sun.tdk.jcov.runtime.NetworkSatelliteDecorator\";\n+                m = \"com.sun.tdk.jcov.NetworkSatelliteDecorator\";\n@@ -280,1 +280,0 @@\n-     * @param name Saver to create\n@@ -283,0 +282,6 @@\n+    private static JCovSaver instantiateSaver() {\n+        JCovSaver saver = null;\n+        \/\/ This line is replaced in ANT build script (see files filesaver.replace.properties, networksaver.replace.properties and so on)\n+        \/\/@BUILD_MODIFIED_SAVER_STRING@\/\/\n+        return saver;\n+    }\n@@ -313,1 +318,1 @@\n-            if (PropertyFinder.isVMReady()) {\n+            if (isVMReady || isVMReady()) {\n@@ -315,3 +320,1 @@\n-                if (!saverClassnameString.startsWith(\"\/*@\")) {\n-                    addSaver(instantiateSaver(saverClassnameString));\n-                }\n+                addSaver(instantiateSaver());\n@@ -329,0 +332,16 @@\n+\n+    \/**\n+     * <p> Checks whether VM is ready to initialize JCov RT (saver). Most savers\n+     * use shutdown hook to save data in time. Shutdown hook needs Thread to be\n+     * created but it can't be created in very early VM livetime. <\/p> <p> Due\n+     * to restrictions JCovME version should have it's own isVMReady()\n+     * implementation. <\/p>\n+     *\n+     * @return true if VM is ready to install shutdown hook and to read\n+     * properties\n+     *\/\n+    public static boolean isVMReady() {\n+        isVMReady = System.out != null && Runtime.getRuntime() != null;\n+        return isVMReady;\n+        \/\/ return jdk.internal.misc.VM.isBooted();\n+    }\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/runtime\/Collect.java","additions":29,"deletions":10,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,0 @@\n-    static int last = 0;\n-    static int prelast = 0;\n-\n@@ -47,1 +44,2 @@\n-        int instLevel; \/\/ not-zero instLevel means that this thread entered into instrumentation (agent) or saving code when it shouldn't collect hits\n+        int instLevel;      \/\/ not-zero instLevel means that this thread entered into instrumentation (agent) or\n+                            \/\/ saving code when it shouldn't collect hits\n@@ -66,1 +64,2 @@\n-            return ((expected == i && i != -1) || (expected == 0 && i == -1 && Collect.isInitialized)) && instLevel == 0;\n+            return ((expected == i && i != -1) ||\n+                    (expected == 0 && i == -1 && isInitialized)) && instLevel == 0;\n@@ -76,1 +75,0 @@\n-    static volatile boolean lock = false;\n@@ -79,1 +77,1 @@\n-        CollectDetect.init();\n+\/\/      CollectDetect.init();\n@@ -83,1 +81,1 @@\n-    public static void init() {\n+    static void initInfo() {\n@@ -88,5 +86,7 @@\n-            if (Thread.currentThread() != null) {\n-                info = new ThreadInfo[ThreadInfo.INFO_LENGTH];\n-                long id = Thread.currentThread().getId();\n-                prevInfo = infoForThread(id);\n-            }\n+            try {\n+                if (Thread.currentThread() != null) {\n+                    info = new ThreadInfo[ThreadInfo.INFO_LENGTH];\n+                    long id = Thread.currentThread().getId();\n+                    prevInfo = infoForThread(id);\n+                }\n+            } catch (Throwable t) {}\n@@ -101,0 +101,1 @@\n+        initInfo();\n@@ -123,11 +124,14 @@\n-        \/\/ this is a new thread, create a new ThreadInfo\n-        synchronized (underConstruction) {\n-            \/\/ set up a place holder to protect us\n-            underConstruction.id = id;\n-            underConstruction.next = info[hash];\n-            info[hash] = prevInfo = underConstruction;\n-\n-            \/\/ we are now protected, safe to create the real one\n-            ti = new ThreadInfo(id); \/\/ the new will trigger a track\n-            ti.next = underConstruction.next;\n-            info[hash] = prevInfo = ti;\n+        if (underConstruction != null) {\n+            synchronized (underConstruction) {\n+                \/\/ set up a placeholder to protect us\n+                underConstruction.id = id;\n+                underConstruction.next = info[hash];\n+                info[hash] = underConstruction;\n+                prevInfo = underConstruction;\n+\n+                \/\/ we are now protected, safe to create the real one\n+                ti = new ThreadInfo(id); \/\/ the new will trigger a track\n+                ti.next = underConstruction.next;\n+                info[hash] = ti;\n+                prevInfo = ti;\n+            }\n@@ -139,4 +143,5 @@\n-        Thread t = Thread.currentThread();\n-        if ( t != null ) {\n-            long id = Thread.currentThread().getId();\n-            ThreadInfo ti = prevInfo;\n+        if (Collect.isVMReady || Collect.isVMReady()) {\n+            Thread t = Thread.currentThread();\n+            if (t != null) {\n+                long id = Thread.currentThread().getId();\n+                ThreadInfo ti = prevInfo;\n@@ -144,3 +149,3 @@\n-            if (ti.id != id) {\n-                ti = infoForThread(id);\n-            }\n+                if (ti == null || ti.id != id) {\n+                    ti = infoForThread(id);\n+                }\n@@ -148,2 +153,3 @@\n-            if (ti.enabled()) {\n-                Collect.hit(slot);\n+                if (ti == null || ti.enabled()) {\n+                    Collect.hit(slot);\n+                }\n@@ -155,16 +161,21 @@\n-        Thread t = Thread.currentThread();\n-        if( t != null ) {\n-            long id = t.getId();\n-            ThreadInfo ti = prevInfo;\n-\n-            if (ti == null || ti.id != id) {\n-                ti = infoForThread(id);\n-            }\n-\n-            if (ti.enabled(hash)) {\n-                ti.expected = 0;\n-                Collect.hit(slot);\n-            }\n-            if (ti.enabledFull(fullHash)) {\n-                ti.expectedFull = 0;\n-                Collect.hit(slot);\n+        if (Collect.isVMReady || Collect.isVMReady()) {\n+            Thread t = Thread.currentThread();\n+            if (t != null) {\n+                long id = t.getId();\n+                ThreadInfo ti = prevInfo;\n+\n+                if (ti == null || ti.id != id) {\n+                    ti = infoForThread(id);\n+                }\n+                if ( ti == null ) {\n+                    Collect.hit(slot);\n+                } else {\n+                    if (ti.enabled(hash)) {\n+                        ti.expected = 0;\n+                        Collect.hit(slot);\n+                    }\n+                    if (ti.enabledFull(fullHash)) {\n+                        ti.expectedFull = 0;\n+                        Collect.hit(slot);\n+                    }\n+                }\n@@ -179,2 +190,1 @@\n-\n-            if (ti.id != id) {\n+            if (ti == null || ti.id != id) {\n@@ -183,1 +193,2 @@\n-            ti.instLevel++;\n+            if( ti != null )\n+                ti.instLevel++;\n@@ -192,1 +203,1 @@\n-            if (ti.id != id) {\n+            if (ti == null || ti.id != id) {\n@@ -195,1 +206,2 @@\n-            ti.expected = hash;\n+            if( ti != null )\n+                ti.expected = hash;\n@@ -204,1 +216,1 @@\n-            if (ti.id != id) {\n+            if (ti == null || ti.id != id) {\n@@ -207,1 +219,2 @@\n-            ti.clinitValue = ti.expected;\n+            if( ti != null )\n+                ti.clinitValue = ti.expected;\n@@ -216,1 +229,1 @@\n-            if (ti.id != id) {\n+            if (ti == null || ti.id != id) {\n@@ -219,1 +232,2 @@\n-            ti.expected = ti.clinitValue;\n+            if( ti != null )\n+                ti.expected = ti.clinitValue;\n@@ -228,1 +242,1 @@\n-            if (ti.id != id) {\n+            if (ti == null || ti.id != id) {\n@@ -231,1 +245,2 @@\n-            ti.expectedFull = fullHash;\n+            if( ti != null )\n+                ti.expectedFull = fullHash;\n@@ -248,1 +263,0 @@\n-\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/runtime\/CollectDetect.java","additions":76,"deletions":62,"binary":false,"changes":138,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-\n@@ -39,1 +38,1 @@\n- * <p> SE implementation of PropertyFinder <\/p>\n+ *  SE implementation of PropertyFinder\n@@ -47,2 +46,2 @@\n-     * <p> Reads input string substituting macros. No additional shortcarts\n-     * used. <\/p>\n+     *  Reads input string substituting macros. No additional shortcuts\n+     * used.\n@@ -58,2 +57,2 @@\n-     * <p> Reads input string substituting macros. Additional shortcarts can be\n-     * used to enhance or overwrite default macros. <\/p>\n+     *  Reads input string substituting macros. Additional shortcuts can be\n+     * used to enhance or overwrite default macros.\n@@ -62,1 +61,1 @@\n-     * @param shortcarts\n+     * @param shortcuts\n@@ -66,1 +65,1 @@\n-    public static String processMacroString(String str, char shortcarts[], String datas[]) {\n+    public static String processMacroString(String str, char shortcuts[], String datas[]) {\n@@ -91,3 +90,3 @@\n-                    if (shortcarts != null) {\n-                        for (int i = 0; i < shortcarts.length; ++i) {\n-                            if (shortcarts[i] == ch) {\n+                    if (shortcuts != null) {\n+                        for (int i = 0; i < shortcuts.length; ++i) {\n+                            if (shortcuts[i] == ch) {\n@@ -145,1 +144,1 @@\n-                        if (!f.isAccessible()) {\n+                        if (!  f.isAccessible()) {\n@@ -222,1 +221,1 @@\n-     * <p> Returns value specified by user. If sys prop defined the value is\n+     *  Returns value specified by user. If sys prop defined the value is\n@@ -224,1 +223,1 @@\n-     * the default value is taken in the last turn. <\/p>\n+     * the default value is taken in the last turn.\n@@ -247,1 +246,1 @@\n-     * <p> Returns value specified by user. If sys prop is defined the value is\n+     *  Returns value specified by user. If sys prop is defined the value is\n@@ -250,1 +249,1 @@\n-     * turn. <\/p>\n+     * turn.\n@@ -273,1 +272,1 @@\n-     * <p> Searches for jcov property file. First candidate to read is file in\n+     *  Searches for jcov property file. First candidate to read is file in\n@@ -276,2 +275,1 @@\n-     * \/com\/sun\/tdk\/jcov\/jcov.properties classpath resourse. Last candidate is\n-     * {user.home}\/.jcov\/jcov.properties file. <\/p> <p> Every filename is\n+     * {user.home}\/.jcov\/jcov.properties file.   Every filename is\n@@ -280,1 +278,1 @@\n-     * property file then classpath resource is checked. <\/p>\n+     * property file then classpath resource is checked.\n@@ -290,1 +288,1 @@\n-                p = readProperties(propfile);\n+                p = loadPropertiesFile(propfile, null);\n@@ -297,8 +295,0 @@\n-            if (propfile == null || !(\"\/com\/sun\/tdk\/jcov\/jcov.properties\".equals(propfile))) {\n-                p = readProperties(\"\/com\/sun\/tdk\/jcov\/jcov.properties\");\n-                if (p != null) {\n-                    propsFile = \"\/com\/sun\/tdk\/jcov\/jcov.properties\";\n-                    return p;\n-                }\n-            }\n-\n@@ -306,1 +296,5 @@\n-                p = readProperties(System.getProperty(\"user.home\") + File.separator + \".jcov\" + File.separator + \"jcov.properties\");\n+                p = loadPropertiesFile(System.getProperty(\"user.home\") +\n+                        File.separator +\n+                        \".jcov\" +\n+                        File.separator +\n+                        \"jcov.properties\", null);\n@@ -308,1 +302,3 @@\n-                    propsFile = System.getProperty(\"user.home\") + File.separator + \".jcov\" + File.separator + \"jcov.properties\";\n+                    propsFile = System.getProperty(\"user.home\") + File.separator +\n+                            \".jcov\" + File.separator +\n+                            \"jcov.properties\";\n@@ -329,25 +325,0 @@\n-    private static Properties loadPropertiesStream(String path, Properties properties) {\n-        try(InputStream in = JCovSaver.class.getResourceAsStream(path)) {\n-            Properties p = ( properties == null) ?  new Properties() : properties;\n-            p.load(in);\n-            resolveProps(p);\n-            properties = p;\n-        } catch (Exception ignore) {\n-            \/\/ warning message\n-        }\n-        return properties;\n-    }\n-\n-    \/**\n-     * <p> Reads jcov property file from specified path <\/p> <p>\n-     * If it can't be read then classpath resource is checked. <p>\n-     *\n-     * @param path Path to look for a property file.\n-     * @return Read properties or null if file was not found neither in file\n-     * system neither in classpath\n-     *\/\n-    public static Properties readProperties(String path) {\n-        Properties p = loadPropertiesFile(path, null);\n-        return  p == null ? loadPropertiesStream(path, null) : p;\n-    }\n-\n@@ -355,2 +326,2 @@\n-     * <p> Reads jcov property file from specified path <\/p> <p>\n-     * If it can't be read then classpath resource is checked. <p>\n+     *  Reads jcov property file from specified path\n+     *  If it can't be read then classpath resource is checked.\n@@ -366,2 +337,1 @@\n-        Properties p = loadPropertiesFile(path, properties);\n-        return  properties.equals(p) ? loadPropertiesStream(path, properties) : p;\n+        return loadPropertiesFile(path, properties);\n@@ -371,2 +341,1 @@\n-     * <p> Resolves all links of ${key} form on other keys in property values.\n-     * <\/p>\n+     *  Resolves all links of ${key} form on other keys in property values.\n@@ -393,1 +362,1 @@\n-     * <p> Read a single property from property file <\/p>\n+     *  Read a single property from property file\n@@ -401,6 +370,2 @@\n-        Properties props = readProperties(fileName);\n-        if (props != null) {\n-            return props.getProperty(PROPERTY_FILE_PREFIX + name);\n-        } else {\n-            return null;\n-        }\n+        Properties props = loadPropertiesFile(fileName, null);\n+        return props != null ? props.getProperty(PROPERTY_FILE_PREFIX + name) : null;\n@@ -410,2 +375,2 @@\n-     * <p> Describes source of a property by name. Returns a string containing\n-     * description of the property source. E.g.: <\/p> <ul> <li> \"JavaVM property\n+     *  Describes source of a property by name. Returns a string containing\n+     * description of the property source. E.g.:  <ul> <li> \"JavaVM property\n@@ -444,2 +409,1 @@\n-     * <p> Set path for properties file to read values. Can be used many times.\n-     * <\/p>\n+     * Set path for properties file to read values. Can be used many times.\n@@ -451,1 +415,1 @@\n-        p = readProperties(path);\n+        p = loadPropertiesFile(path, null);\n@@ -462,2 +426,1 @@\n-     * <p> Installs shutdown hook. ME\/Card version can't install shutdown hook.\n-     * <\/p>\n+     *  Installs shutdown hook.\n@@ -467,20 +430,18 @@\n-            try {\n-                Runtime.getRuntime().addShutdownHook(new Thread() {\n-                    @Override\n-                    public void run() {\n-                        Collect.disable();\n-                        Collect.saveResults();\n-                        Collect.enable();\n-                        Collect.saveAtShutdownEnabled = false;\n-                        Collect.saveEnabled = false;\n-                        String s = PropertyFinder.findValue(\"data-saver\", null);\n-                        if(s != null) {\n-                            try {\n-                                Class clz = Class.forName(s);\n-                                Object saver = clz.getConstructor().newInstance();\n-                                Method mthd = clz.getMethod(\"saveResults\", new Class[] {});\n-                                mthd.invoke(saver);\n-                            } catch (ClassNotFoundException | NoSuchMethodException | IllegalAccessException |\n-                                    InvocationTargetException | InstantiationException e) {\n-                                throw new RuntimeException(e);\n-                            }\n+            Thread hook = new Thread() {\n+                @Override\n+                public void run() {\n+                    Collect.disable();\n+                    Collect.saveResults();\n+                    Collect.enable();\n+                    Collect.saveAtShutdownEnabled = false;\n+                    Collect.saveEnabled = false;\n+                    String s = PropertyFinder.findValue(\"data-saver\", null);\n+                    if(s != null) {\n+                        try {\n+                            Class clz = Class.forName(s);\n+                            Object saver = clz.getConstructor().newInstance();\n+                            Method mthd = clz.getMethod(\"saveResults\", new Class[] {});\n+                            mthd.invoke(saver);\n+                        } catch (ClassNotFoundException | NoSuchMethodException | IllegalAccessException |\n+                                 InvocationTargetException | InstantiationException e) {\n+                            throw new RuntimeException(e);\n@@ -489,1 +450,4 @@\n-                });\n+                }\n+            };\n+            try {\n+                Runtime.getRuntime().addShutdownHook(hook);\n@@ -496,15 +460,0 @@\n-\n-    \/**\n-     * <p> Checks whether VM is ready to initialize JCov RT (saver). Most savers\n-     * use shutdown hook to save data in time. Shutdown hook needs Thread to be\n-     * created but it can't be created in very early VM livetime. <\/p> <p> Due\n-     * to restrictions JCovME version should have it's own isVMReady()\n-     * implementation. <\/p>\n-     *\n-     * @return true if VM is ready to install shutdown hook and to read\n-     * properties\n-     *\/\n-    public static boolean isVMReady() {\n-        return System.out != null && Runtime.getRuntime() != null;\/\/&& sun.misc.VM.isBooted();\n-    }\n-\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/runtime\/PropertyFinder.java","additions":62,"deletions":113,"binary":false,"changes":175,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,2 @@\n+import static java.lang.String.format;\n+\n@@ -72,7 +74,7 @@\n-        'q', 'w', 'r', 't', 'y', 'u', 'i', 'o', 'p', 's',\n-        'g', 'h', 'j', 'k', 'l', 'z', 'x', 'v', 'n', 'm',\n-        'Q', 'W', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', 'S',\n-        'G', 'H', 'J', 'K', 'L', 'Z', 'X', 'V', 'N', 'M',\n-        '!', '@', '#', '$', '%', '^', '&', '*', '(', ')',\n-        '_', '+', '|', '~', '-', '=', '\\\\', '[', ']', '{',\n-        '}', ';', '\\'', ':', '\\\"', ',', '.', '\/', '<', '>', '?'\n+            'q', 'w', 'r', 't', 'y', 'u', 'i', 'o', 'p', 's',\n+            'g', 'h', 'j', 'k', 'l', 'z', 'x', 'v', 'n', 'm',\n+            'Q', 'W', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', 'S',\n+            'G', 'H', 'J', 'K', 'L', 'Z', 'X', 'V', 'N', 'M',\n+            '!', '@', '#', '$', '%', '^', '&', '*', '(', ')',\n+            '_', '+', '|', '~', '-', '=', '\\\\', '[', ']', '{',\n+            '}', ';', '\\'', ':', '\\\"', ',', '.', '\/', '<', '>', '?'\n@@ -92,0 +94,1 @@\n+\n@@ -97,6 +100,6 @@\n-           for(FILE_TYPE ftype : fTypes) {\n-               if( fileName.endsWith(ftype.getExtension()) ) {\n-                   return true;\n-               }\n-           }\n-           return false;\n+            for (FILE_TYPE ftype : fTypes) {\n+                if (fileName.endsWith(ftype.getExtension())) {\n+                    return true;\n+                }\n+            }\n+            return false;\n@@ -110,1 +113,1 @@\n-    public static final List<String>  CUSTOM_CLASS_FILE_EXTENSIONS =\n+    public static final List<String> CUSTOM_CLASS_FILE_EXTENSIONS =\n@@ -114,1 +117,1 @@\n-        if(FILE_TYPE.hasExtension(fileName, FILE_TYPE.CLASS)) {\n+        if (FILE_TYPE.hasExtension(fileName, FILE_TYPE.CLASS)) {\n@@ -117,1 +120,1 @@\n-        return CUSTOM_CLASS_FILE_EXTENSIONS.stream().anyMatch(ext->fileName.endsWith(ext));\n+        return CUSTOM_CLASS_FILE_EXTENSIONS.stream().anyMatch(ext -> fileName.endsWith(ext));\n@@ -120,7 +123,9 @@\n-    public final static int VER1_6  = 160;  \/\/ 1.6\n-    public final static int VER1_7  = 160;  \/\/ 1.7\n-    public final static int VER1_8  = 160;  \/\/ 1.8\n-    public final static int VER9    = 900;  \/\/ 9\n-    public final static int VER10   = 1000;  \/\/ 10\n-    public final static int VER17   = 1700;  \/\/ 17\n-    public final static int VER18   = 1800;  \/\/ 18\n+    public final static int VER1_6 = 160;  \/\/ 1.6\n+    public final static int VER1_7 = 160;  \/\/ 1.7\n+    public final static int VER1_8 = 160;  \/\/ 1.8\n+    public final static int VER9 = 900;  \/\/ 9\n+    public final static int VER10 = 1000;  \/\/ 10\n+    public final static int VER17 = 1700;  \/\/ 17\n+    public final static int VER18 = 1800;  \/\/ 18\n+    public final static int VER19 = 1900;  \/\/ 19\n+    public final static int VER20 = 2000;  \/\/ 20\n@@ -134,1 +139,1 @@\n-        if (javaVersion == -1){\n+        if (javaVersion == -1) {\n@@ -136,3 +141,5 @@\n-            for(int i=1; i<=20; i++) {\n-                if( ver.startsWith(String.format( (i <= 8) ? \"1.%d\" : \"%d\" , i))) {\n-                    return (i <= 8) ? 100 + i*10 : i * 100;\n+            for (int i = 1; i < 30; i++) {\n+                if (ver.startsWith(format((i <= 8) ? \"1.%d\" : \"%d\", i))) {\n+                    return (i <= 8) ? 100 + i * 10 : i * 100;\n+                } else if(ver.startsWith(\"%d\", i)) {\n+                    return i* 100;\n@@ -149,2 +156,2 @@\n-     * @param buf array to be checked\n-     * @param length minimum required length\n+     * @param buf          array to be checked\n+     * @param length       minimum required length\n@@ -152,1 +159,1 @@\n-     * created array, if minimum length requirement is not met\n+     *                     created array, if minimum length requirement is not met\n@@ -294,1 +301,1 @@\n-     * @param val value to convert\n+     * @param val  value to convert\n@@ -296,1 +303,1 @@\n-     * @param ind starting index in sbuf\n+     * @param ind  starting index in sbuf\n@@ -461,3 +468,3 @@\n-     * @param start number of line to start from. -1 means start from 0.\n-     * @param end number of line to end with. -1 means read all lines till the\n-     * end.\n+     * @param start    number of line to start from. -1 means start from 0.\n+     * @param end      number of line to end with. -1 means read all lines till the\n+     *                 end.\n@@ -466,1 +473,1 @@\n-     * happened\n+     *                             happened\n@@ -576,1 +583,1 @@\n-                                    if(!file.getName().equalsIgnoreCase(\"jmods\")) {\n+                                    if (!file.getName().equalsIgnoreCase(\"jmods\")) {\n@@ -580,1 +587,1 @@\n-                                    if( FILE_TYPE.hasExtension(path, FILE_TYPE.ZIP, FILE_TYPE.JAR, FILE_TYPE.WAR) ) {\n+                                    if (FILE_TYPE.hasExtension(path, FILE_TYPE.ZIP, FILE_TYPE.JAR, FILE_TYPE.WAR)) {\n@@ -587,1 +594,1 @@\n-                if ( !Arrays.stream(classpath).anyMatch(cp -> cp.equals(path)) ) {\n+                if (!Arrays.stream(classpath).anyMatch(cp -> cp.equals(path))) {\n@@ -618,1 +625,1 @@\n-                if (FILE_TYPE.hasExtension(f.getAbsolutePath(), FILE_TYPE.JAR, FILE_TYPE.CLASS) ) {\n+                if (FILE_TYPE.hasExtension(f.getAbsolutePath(), FILE_TYPE.JAR, FILE_TYPE.CLASS)) {\n@@ -692,1 +699,2 @@\n-            } catch (Exception ignore) {}\n+            } catch (Exception ignore) {\n+            }\n@@ -702,1 +710,2 @@\n-            } catch (Exception ignore) {}\n+            } catch (Exception ignore) {\n+            }\n@@ -752,1 +761,9 @@\n-        BOOLEAN('Z', \"boolean\"), VOID('V', \"void\"), INT('I', \"int\"), LONG('J', \"long\"), CHAR('C', \"char\"), BYTE('B', \"byte\"), DOUBLE('D', \"double\"), SHORT('S', \"short\"), FLOAT('F', \"float\");\n+        BOOLEAN('Z', \"boolean\"),\n+        VOID('V', \"void\"),\n+        INT('I', \"int\"),\n+        LONG('J', \"long\"),\n+        CHAR('C', \"char\"),\n+        BYTE('B', \"byte\"),\n+        DOUBLE('D', \"double\"),\n+        SHORT('S', \"short\"),\n+        FLOAT('F', \"float\");\n@@ -790,1 +807,1 @@\n-            return String.format(\"%s %s(%s)\", convertVMType(m.group(2)), methName, getArgs(m.group(1)));\n+            return format(\"%s %s(%s)\", convertVMType(m.group(2)), methName, getArgs(m.group(1)));\n@@ -845,1 +862,1 @@\n-    public static Pattern[] concatFilters(String[] includes, String[] excludes){\n+    public static Pattern[] concatFilters(String[] includes, String[] excludes) {\n@@ -849,1 +866,1 @@\n-    public static Pattern[] concatModuleFilters(String[] includes, String[] excludes){\n+    public static Pattern[] concatModuleFilters(String[] includes, String[] excludes) {\n@@ -919,1 +936,0 @@\n-         *\n@@ -932,2 +948,1 @@\n-                    }\n-                    else{\n+                    } else {\n@@ -1050,1 +1065,1 @@\n-     * @param alls patterns to use\n+     * @param alls          patterns to use\n@@ -1052,2 +1067,2 @@\n-     * @param className class name to check\n-     * @param sig class's signature\n+     * @param className     class name to check\n+     * @param sig           class's signature\n@@ -1116,1 +1131,1 @@\n-     * @param hostname Hostname to check\n+     * @param hostname    Hostname to check\n@@ -1133,1 +1148,1 @@\n-     * @param filename File to check\n+     * @param filename    File to check\n@@ -1135,1 +1150,1 @@\n-     * @param opts criterias to check\n+     * @param opts        criterias to check\n@@ -1151,1 +1166,1 @@\n-     * @param filename File to check\n+     * @param filename    File to check\n@@ -1153,1 +1168,1 @@\n-     * @param opts criterias to check\n+     * @param opts        criterias to check\n@@ -1169,1 +1184,1 @@\n-     * @param file File to check. Can't be null.\n+     * @param file        File to check. Can't be null.\n@@ -1171,1 +1186,1 @@\n-     * @param opts criteria to check\n+     * @param opts        criteria to check\n@@ -1193,1 +1208,1 @@\n-                    if ( file.isFile() ) {\n+                    if (file.isFile()) {\n@@ -1195,2 +1210,2 @@\n-                        if( !file.canWrite() ) {\n-                        throw new EnvHandlingException(\"Incorrect \" + description + \" (\" + file.getPath() + \") - can't write\");\n+                        if (!file.canWrite()) {\n+                            throw new EnvHandlingException(\"Incorrect \" + description + \" (\" + file.getPath() + \") - can't write\");\n@@ -1201,1 +1216,1 @@\n-                        if ( parentDir == null || !parentDir.isDirectory() || ! Files.isWritable(parentDir.toPath()) ) {\n+                        if (parentDir == null || !parentDir.isDirectory() || !Files.isWritable(parentDir.toPath())) {\n@@ -1245,1 +1260,1 @@\n-        if( list != null && list.length > 0) {\n+        if (list != null && list.length > 0) {\n@@ -1255,1 +1270,1 @@\n-     * @param value String to convert\n+     * @param value       String to convert\n@@ -1257,1 +1272,1 @@\n-     * @param opts criterias to check\n+     * @param opts        criterias to check\n@@ -1321,1 +1336,1 @@\n-     * @param srcFolder directory to zip\n+     * @param srcFolder   directory to zip\n@@ -1413,32 +1428,43 @@\n-    public static boolean isAdvanceStaticInstrAllowed(String classname, String methodname) {\n-        if ((!classname.equals(\"java\/lang\/System\"))\n-                && (!classname.equals(\"java\/lang\/String\"))\n-                && (!classname.equals(\"java\/lang\/StringLatin1\"))\n-                && (!classname.equals(\"java\/lang\/String$CaseInsensitiveComparator\"))\n-                && (!classname.equals(\"java\/lang\/Thread\"))\n-                && (!classname.equals(\"java\/lang\/ThreadGroup\"))\n-                && (!classname.equals(\"java\/lang\/RuntimePermission\"))\n-                && (!classname.equals(\"java\/security\/Permission\"))\n-                && (!classname.equals(\"java\/security\/BasicPermission\"))\n-                && (!classname.equals(\"java\/lang\/Class\"))) {\n-            return true;\n-        }\n-        if (!methodname.equals(\"<clinit>\")\n-                && !methodname.equals(\"<init>\")\n-                && !methodname.equals(\"init\")\n-                && !methodname.equals(\"length\")\n-                && !methodname.equals(\"coder\")\n-                && !methodname.equals(\"isLatin1\")\n-                && !methodname.equals(\"charAt\")\n-                && !methodname.equals(\"equals\")\n-                && !methodname.equals(\"add\")\n-                && !methodname.equals(\"checkAccess\")\n-                && !methodname.equals(\"checkParentAccess\")\n-                && !methodname.equals(\"getSecurityManager\")\n-                && !methodname.equals(\"allowSecurityManager\")\n-                && !methodname.equals(\"registerNatives\")\n-                && !methodname.equals(\"currentTimeMillis\")\n-                && !methodname.equals(\"identityHashCode\")\n-                && !methodname.equals(\"nanoTime\")\n-                && !methodname.equals(\"getId\")) {\n-            return true;\n+    private static final HashSet<String> classNameExclusion = new HashSet() {{\n+        add(\"java\/lang\/System\");\n+        add(\"java\/lang\/String\");\n+        add(\"java\/lang\/StringLatin1\");\n+        add(\"java\/lang\/String$CaseInsensitiveComparator\");\n+        add(\"java\/lang\/Thread\");\n+        add(\"java\/lang\/ThreadGroup\");\n+        add(\"java\/lang\/RuntimePermission\");\n+        add(\"java\/security\/Permission\");\n+        add(\"java\/security\/BasicPermission\");\n+        add(\"java\/lang\/Class\");\n+        add(\"java\/lang\/Runtime\");\n+\n+    }};\n+\n+    private static final HashSet<String> methodNameExclusion = new HashSet() {{\n+        add(\"<clinit>\");\n+        add(\"<init>\");\n+        add(\"init\");\n+        add(\"length\");\n+        add(\"coder\");\n+        add(\"isLatin1\");\n+        add(\"charAt\");\n+        add(\"equals\");\n+        add(\"add\");\n+        add(\"checkAccess\");\n+        add(\"checkParentAccess\");\n+        add(\"getSecurityManager\");\n+        add(\"allowSecurityManager\");\n+        add(\"registerNatives\");\n+        add(\"currentTimeMillis\");\n+        add(\"identityHashCode\");\n+        add(\"nanoTime\");\n+        add(\"getId\");\n+        add(\"threadId\");\n+        add(\"getRuntime\");\n+    }};\n+\n+    public static boolean isAdvanceStaticInstrAllowed(String className, String methodName) {\n+        if (classNameExclusion.contains(className)) {\n+            if (methodNameExclusion.contains(methodName)) {\n+                return false;\n+            }\n@@ -1446,1 +1472,1 @@\n-        return false;\n+        return true;\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/util\/Utils.java","additions":127,"deletions":101,"binary":false,"changes":228,"status":"modified"}]}