{"files":[{"patch":"@@ -4,1 +4,1 @@\n-  Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+  Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-<project name=\"JCov\" default=\"build\" basedir=\".\">\n+<project name=\"JCov\" default=\"build\" basedir=\".\" xmlns:if=\"ant:if\">\n@@ -33,0 +33,2 @@\n+    \n+    <property environment=\"env\"\/>\n@@ -118,1 +120,1 @@\n-            <format property=\"date\" pattern=\"dd MMMM yyyy\" locale=\"en\"\/>\n+            <format property=\"date\" pattern=\"MMMM dd, yyyy\" locale=\"en\"\/>\n@@ -123,1 +125,1 @@\n-            * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+            * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -297,0 +299,7 @@\n+    <target name=\"-check-build-result\" description=\"checks the jars existence\">\n+        <fileset id=\"jars\" dir=\"${build.dir}\" includes=\"**\/*.jar\"\/>\n+        <condition property=\"jars.ok\">\n+            <resourcecount refid=\"jars\" when=\"eq\" count=\"4\"\/>\n+        <\/condition>\n+    <\/target>\n+\n@@ -298,1 +307,1 @@\n-            depends=\"build-jcov, build-file.saver, build-network.saver, build-jt.observer\"\n+            depends=\"build-jcov, build-file.saver, build-network.saver, build-jt.observer, -create-release.file\"\n@@ -300,0 +309,19 @@\n+    <\/target>\n+\n+    <target name=\"-create-release.file\" depends=\"-check-build-result\" if=\"jars.ok\">\n+        <available file=\"git\" filepath=\"${env.PATH}\" property=\"git.present\"\/>\n+        <exec executable=\"git\" failonerror=\"false\" failifexecutionfails=\"false\" outputproperty=\"git.revision\"\n+              if:set=\"git.present\">\n+            <arg line=\"log -1 --format=%H\"\/>\n+        <\/exec>\n+        <condition property=\"git.revision\" value=\"N\/A\">\n+            <not>\n+                <isset property=\"git.revision\"\/>\n+            <\/not>\n+        <\/condition>\n+        <echo file=\"${build.dir}\/release\">\n+SOURCE=\"git:${git.revision}\"\n+VERSION=\"${build.version}_${build.number}\"\n+VERSION_DATE=\"${date}\"\n+MILESTONE=\"${build.milestone}\"\n+        <\/echo>\n","filename":"build\/build.xml","additions":33,"deletions":5,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-# Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-build.number = 3\n+build.number = 7\n","filename":"build\/release.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-        ArrayList<String> list = new ArrayList<String>(testlist.length \/ 10);\n+        ArrayList<String> list = new ArrayList<>(testlist.length \/ 10);\n@@ -156,1 +156,1 @@\n-    public static interface CoverageFormatter {\n+    public interface CoverageFormatter {\n@@ -163,1 +163,1 @@\n-        public String format(CoverageData data);\n+        String format(CoverageData data);\n@@ -166,1 +166,1 @@\n-    public static interface CoverageANCFormatter {\n+    public interface CoverageANCFormatter {\n@@ -173,1 +173,1 @@\n-        public String format(CoverageData data, boolean withAnc);\n+        String format(CoverageData data, boolean withAnc);\n@@ -187,1 +187,2 @@\n-                return String.format(\"%0$4.0f%% (%d\/%d)\", (float) data.covered \/ data.total * 100., data.covered, data.total);\n+                return String.format(\"%4d%% (%d\/%d)\",\n+                        Math.floorDiv(data.covered * 100, data.total), data.covered, data.total);\n@@ -196,1 +197,2 @@\n-                    return String.format(\"%0$4.0f%% (%d\/%d)\", (float) data.covered \/ data.total * 100., data.covered, data.total);\n+                    return String.format(\"%4d%% (%d\/%d)\",\n+                            Math.floorDiv(data.covered * 100, data.total), data.covered, data.total);\n@@ -198,1 +200,2 @@\n-                return String.format(\"%0$4.0f%% (%d\/%d\/%d)\", (float) (data.covered + data.anc) \/ (data.total) * 100., data.covered, data.anc, data.total);\n+                return String.format(\"%4d%% (%d\/%d\/%d)\",\n+                        Math.floorDiv((data.covered + data.anc) * 100, data.total), data.covered, data.anc, data.total);\n","filename":"src\/classes\/com\/sun\/tdk\/jcov\/report\/AbstractCoverage.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}