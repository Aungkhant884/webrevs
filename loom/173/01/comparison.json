{"files":[{"patch":"@@ -373,0 +373,3 @@\n+\/\/ We skip virtual thread carriers under the assumption that the current scheduler, ForkJoinPool,\n+\/\/ doesn't hold any locks while mounting a virtual thread, so any owned monitor (or j.u.c., lock for that matter)\n+\/\/ on that JavaThread must be owned by the virtual thread, and we don't support deadlock detection for virtual threads.\n@@ -388,0 +391,1 @@\n+    if (jt->is_vthread_mounted()) continue;\n@@ -395,0 +399,1 @@\n+    if (jt->is_vthread_mounted()) continue;\n@@ -469,1 +474,1 @@\n-      if (currentThread == NULL) {\n+      if (currentThread == NULL || currentThread->is_vthread_mounted()) {\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -77,3 +77,1 @@\n-        long[] deadlockedThreads = bean.findDeadlockedThreads();\n-        if (deadlockedThreads != null)\n-            Arrays.sort(deadlockedThreads);\n+        long[] deadlockedThreads = sorted(bean.findDeadlockedThreads());\n@@ -82,1 +80,5 @@\n-        long[] expectedThreads = platformThreadsToIds(thread1, thread2);\n+        \/\/ deadlocks involving virtual threads are not detected\n+        long[] expectedThreads = (!thread1.isVirtual() && !thread2.isVirtual())\n+            ? sorted(thread1.threadId(), thread2.threadId())\n+            : null;\n+\n@@ -89,15 +91,3 @@\n-    \/**\n-     * Return an array of the thread identifiers of the platform threads in the\n-     * given array. Returns null if there are no platform threads.\n-     *\/\n-    static long[] platformThreadsToIds(Thread... threads) {\n-        long[] tids = Stream.of(threads)\n-                .filter(t -> !t.isVirtual())\n-                .mapToLong(Thread::threadId)\n-                .toArray();\n-        if (tids.length == 0) {\n-            return null;\n-        } else {\n-            Arrays.sort(tids);\n-            return tids;\n-        }\n+    static long[] sorted(long... array) {\n+        if (array != null) Arrays.sort(array);\n+        return array;\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreadDeadlocks.java","additions":9,"deletions":19,"binary":false,"changes":28,"status":"modified"}]}