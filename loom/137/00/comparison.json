{"files":[{"patch":"@@ -33,1 +33,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -43,1 +43,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -52,1 +52,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -58,1 +58,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -61,1 +61,1 @@\n-  return (frame_kind == chunk_frames::MIXED && is_interpreted())\n+  return (frame_kind == ChunkFrames::Mixed && is_interpreted())\n@@ -66,1 +66,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -73,1 +73,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -79,1 +79,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -85,1 +85,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -98,1 +98,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -107,1 +107,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -114,1 +114,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -129,1 +129,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map_pd(RegisterMap* map) {\n@@ -138,1 +138,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map_pd(RegisterMap* map) {\n@@ -145,1 +145,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n","filename":"src\/hotspot\/cpu\/aarch64\/stackChunkFrameStream_aarch64.inline.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -40,1 +40,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -46,1 +46,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -52,1 +52,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -58,1 +58,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -64,1 +64,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -70,1 +70,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -76,1 +76,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -81,1 +81,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -87,1 +87,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -93,1 +93,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -101,1 +101,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map_pd(RegisterMap* map) {\n@@ -107,1 +107,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map_pd(RegisterMap* map) {\n@@ -111,1 +111,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n","filename":"src\/hotspot\/cpu\/arm\/stackChunkFrameStream_arm.inline.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -40,1 +40,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -46,1 +46,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -52,1 +52,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -58,1 +58,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -64,1 +64,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -70,1 +70,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -76,1 +76,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -81,1 +81,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -87,1 +87,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -93,1 +93,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -101,1 +101,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map_pd(RegisterMap* map) {\n@@ -107,1 +107,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map_pd(RegisterMap* map) {\n@@ -111,1 +111,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n","filename":"src\/hotspot\/cpu\/ppc\/stackChunkFrameStream_ppc.inline.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -40,1 +40,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -46,1 +46,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -52,1 +52,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -58,1 +58,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -64,1 +64,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -70,1 +70,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -76,1 +76,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -81,1 +81,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -87,1 +87,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -93,1 +93,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -101,1 +101,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map_pd(RegisterMap* map) {\n@@ -107,1 +107,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map_pd(RegisterMap* map) {\n@@ -111,1 +111,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n","filename":"src\/hotspot\/cpu\/s390\/stackChunkFrameStream_s390.inline.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -43,1 +43,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -52,1 +52,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -58,1 +58,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -61,1 +61,1 @@\n-  return (frame_kind == chunk_frames::MIXED && is_interpreted())\n+  return (frame_kind == ChunkFrames::Mixed && is_interpreted())\n@@ -66,1 +66,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -73,1 +73,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -79,1 +79,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -85,1 +85,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -98,1 +98,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -107,1 +107,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -114,1 +114,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -129,1 +129,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map_pd(RegisterMap* map) {\n@@ -138,1 +138,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map_pd(RegisterMap* map) {\n@@ -145,1 +145,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n","filename":"src\/hotspot\/cpu\/x86\/stackChunkFrameStream_x86.inline.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -40,1 +40,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -46,1 +46,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -52,1 +52,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -58,1 +58,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -64,1 +64,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -70,1 +70,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -76,1 +76,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -81,1 +81,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -87,1 +87,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -93,1 +93,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -101,1 +101,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map_pd(RegisterMap* map) {\n@@ -107,1 +107,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map_pd(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map_pd(RegisterMap* map) {\n@@ -111,1 +111,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n","filename":"src\/hotspot\/cpu\/zero\/stackChunkFrameStream_zero.inline.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -136,7 +136,0 @@\n-  <Event name=\"ContinuationIterateOops\" experimental=\"true\" category=\"Java Virtual Machine\" label=\"Continuation Iterate OOPs\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n-    <Field type=\"ulong\" name=\"id\" label=\"Continuation ID\" \/>\n-    <Field type=\"boolean\" name=\"safepoint\" label=\"Safepoint\" \/>\n-    <Field type=\"ushort\" name=\"numFrames\" label=\"Frames\" \/>\n-    <Field type=\"ushort\" name=\"numOops\" label=\"Oops\" \/>\n-  <\/Event>\n-\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -54,1 +54,2 @@\n-  \/\/ see oopDesc::size_given_klass\n+  \/\/ Change the layout_helper to use the slow path because StackChunkOops are\n+  \/\/ variable sized InstanceOops.\n@@ -57,2 +58,0 @@\n-  assert(layout_helper_is_instance(layout_helper()), \"\");\n-  assert(layout_helper_needs_slow_path(layout_helper()), \"\");\n@@ -62,1 +61,0 @@\n-  \/\/ see oopDesc::size_given_klass\n@@ -79,1 +77,0 @@\n-  int _num_oops;\n@@ -83,2 +80,1 @@\n-      _bound(bound),\n-      _num_oops(0) {}\n+      _bound(bound) {}\n@@ -93,1 +89,0 @@\n-      _num_oops++;\n@@ -104,1 +99,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -114,1 +109,2 @@\n-      \/\/ there's no need to mark the Method, as class redefinition will walk the CodeCache, noting their Methods\n+      \/\/ There is no need to mark the Method, as class redefinition will walk the\n+      \/\/ CodeCache, noting their Methods\n@@ -131,3 +127,0 @@\n-  int _num_frames;\n-  int _num_oops;\n-\n@@ -137,3 +130,3 @@\n-      _do_metadata(_closure->do_metadata()),\n-      _num_frames(0),\n-      _num_oops(0) {}\n+      _do_metadata(_closure->do_metadata()) {\n+    assert(_closure != nullptr, \"must be set\");\n+  }\n@@ -141,1 +134,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -143,3 +136,0 @@\n-    _num_frames++;\n-    assert(_closure != nullptr, \"\");\n-\n@@ -152,1 +142,0 @@\n-    _num_oops += cl._num_oops;\n@@ -161,7 +150,0 @@\n-\n-  assert(frame_closure._num_frames >= 0, \"\");\n-  assert(frame_closure._num_oops >= 0, \"\");\n-\n-  if (closure != nullptr) {\n-    Continuation::emit_chunk_iterate_event(chunk, frame_closure._num_frames, frame_closure._num_oops);\n-  }\n@@ -187,1 +169,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -221,1 +203,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -225,1 +207,2 @@\n-      p2i(fs.sp()), fs.is_interpreted(), f.frame_size(), fs.is_interpreted() ? 0 : f.compiled_frame_stack_argsize());\n+                  p2i(fs.sp()), fs.is_interpreted(), f.frame_size(),\n+                  fs.is_interpreted() ? 0 : f.compiled_frame_stack_argsize());\n@@ -243,1 +226,1 @@\n-    p2i((oopDesc*)c), p2i(c->start_address()), p2i(c->end_address()), c->identity_hash());\n+               p2i((oopDesc*)c), p2i(c->start_address()), p2i(c->end_address()), c->identity_hash());\n@@ -245,1 +228,1 @@\n-    c->requires_barriers(), c->is_gc_mode(), c->has_bitmap(), p2i((oopDesc*)c->parent()));\n+               c->requires_barriers(), c->is_gc_mode(), c->has_bitmap(), p2i((oopDesc*)c->parent()));\n@@ -248,1 +231,1 @@\n-    c->stack_size(), c->argsize(), c->max_size(), c->sp(), p2i(c->pc()));\n+               c->stack_size(), c->argsize(), c->max_size(), c->sp(), p2i(c->pc()));\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":17,"deletions":34,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -37,2 +37,3 @@\n-\/\/ It has a header containing metadata, and a blob containing a stack segment\n-\/\/ (some integral number of stack frames)\n+\/\/\n+\/\/ The stackChunkOops have a header containing metadata, and a blob containing a\n+\/\/ stack segment (some integral number of stack frames).\n@@ -119,1 +120,2 @@\n-  static inline size_t bitmap_size(size_t stack_size_in_words); \/\/ in words\n+  static inline size_t bitmap_size_in_bits(size_t stack_size_in_words); \/\/ In bits\n+  static inline size_t bitmap_size(size_t stack_size_in_words); \/\/ In words\n@@ -138,1 +140,1 @@\n-  \/\/ The InstanceClassLoaderKlass iterators also visit the CLD pointer (or mirror of anonymous klasses.)\n+  \/\/ The InstanceClassLoaderKlass iterators also visit the CLD pointer (or mirror of anonymous klasses).\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -57,3 +57,6 @@\n-inline size_t InstanceStackChunkKlass::bitmap_size(size_t stack_size_in_words) {\n-  \/\/ One bit per potential narrowOop* or oop* address\n-  size_t size_in_bits = stack_size_in_words << (UseCompressedOops ? 1 : 0);\n+inline size_t InstanceStackChunkKlass::bitmap_size_in_bits(size_t stack_size_in_words) {\n+  \/\/ Need one bit per potential narrowOop* or oop* address.\n+  size_t size_in_bits = stack_size_in_words << (LogBitsPerWord - LogBitsPerHeapOop);\n+\n+  return align_up(size_in_bits, BitsPerWord);\n+}\n@@ -61,1 +64,2 @@\n-  return align_up(size_in_bits, BitsPerWord) >> LogBitsPerWord;\n+inline size_t InstanceStackChunkKlass::bitmap_size(size_t stack_size_in_words) {\n+  return bitmap_size_in_bits(stack_size_in_words) >> LogBitsPerWord;\n@@ -116,1 +120,1 @@\n-  if (chunk->has_bitmap()) { \/\/ LIKELY\n+  if (chunk->has_bitmap()) {\n@@ -134,1 +138,1 @@\n-  if (chunk->has_bitmap()) { \/\/ LIKELY\n+  if (chunk->has_bitmap()) {\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.inline.hpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  StackChunkFrameStream<chunk_frames::MIXED> fs(this);\n+  StackChunkFrameStream<ChunkFrames::Mixed> fs(this);\n@@ -68,1 +68,1 @@\n-  StackChunkFrameStream<chunk_frames::MIXED> fs(this, derelativize(f));\n+  StackChunkFrameStream<ChunkFrames::Mixed> fs(this, derelativize(f));\n@@ -96,1 +96,1 @@\n-static int num_java_frames(const StackChunkFrameStream<chunk_frames::MIXED>& f) {\n+static int num_java_frames(const StackChunkFrameStream<ChunkFrames::Mixed>& f) {\n@@ -104,1 +104,1 @@\n-  for (StackChunkFrameStream<chunk_frames::MIXED> f(const_cast<stackChunkOopDesc*>(this)); !f.is_done();\n+  for (StackChunkFrameStream<ChunkFrames::Mixed> f(const_cast<stackChunkOopDesc*>(this)); !f.is_done();\n@@ -113,1 +113,1 @@\n-template <stackChunkOopDesc::barrier_type barrier>\n+template <stackChunkOopDesc::BarrierType barrier>\n@@ -120,1 +120,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -127,1 +127,1 @@\n-template <stackChunkOopDesc::barrier_type barrier>\n+template <stackChunkOopDesc::BarrierType barrier>\n@@ -133,2 +133,2 @@\n-template void stackChunkOopDesc::do_barriers<stackChunkOopDesc::barrier_type::LOAD> ();\n-template void stackChunkOopDesc::do_barriers<stackChunkOopDesc::barrier_type::STORE>();\n+template void stackChunkOopDesc::do_barriers<stackChunkOopDesc::BarrierType::Load> ();\n+template void stackChunkOopDesc::do_barriers<stackChunkOopDesc::BarrierType::Store>();\n@@ -215,1 +215,1 @@\n-template <chunk_frames frame_kind, typename RegisterMapT>\n+template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -228,1 +228,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -294,1 +294,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -327,1 +327,1 @@\n-template <stackChunkOopDesc::barrier_type barrier, bool compressedOopsWithBitmap>\n+template <stackChunkOopDesc::BarrierType barrier, bool compressedOopsWithBitmap>\n@@ -339,1 +339,1 @@\n-    if (barrier == stackChunkOopDesc::barrier_type::STORE) {\n+    if (barrier == stackChunkOopDesc::BarrierType::Store) {\n@@ -345,1 +345,1 @@\n-template <stackChunkOopDesc::barrier_type barrier, chunk_frames frame_kind, typename RegisterMapT>\n+template <stackChunkOopDesc::BarrierType barrier, ChunkFrames frame_kind, typename RegisterMapT>\n@@ -347,1 +347,1 @@\n-  \/\/ we need to invoke the write barriers so as not to miss oops in old chunks that haven't yet been concurrently scanned\n+  \/\/ We need to invoke the write barriers so as not to miss oops in old chunks that haven't yet been concurrently scanned\n@@ -360,1 +360,2 @@\n-    \/\/ there's no need to mark the Method, as class redefinition will walk the CodeCache, noting their Methods\n+    \/\/ There is no need to mark the Method, as class redefinition will walk the\n+    \/\/ CodeCache, noting their Methods\n@@ -379,8 +380,8 @@\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::LOAD> (const StackChunkFrameStream<chunk_frames::MIXED>& f, const RegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::STORE>(const StackChunkFrameStream<chunk_frames::MIXED>& f, const RegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::LOAD> (const StackChunkFrameStream<chunk_frames::COMPILED_ONLY>& f, const RegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::STORE>(const StackChunkFrameStream<chunk_frames::COMPILED_ONLY>& f, const RegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::LOAD> (const StackChunkFrameStream<chunk_frames::MIXED>& f, const SmallRegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::STORE>(const StackChunkFrameStream<chunk_frames::MIXED>& f, const SmallRegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::LOAD> (const StackChunkFrameStream<chunk_frames::COMPILED_ONLY>& f, const SmallRegisterMap* map);\n-template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::barrier_type::STORE>(const StackChunkFrameStream<chunk_frames::COMPILED_ONLY>& f, const SmallRegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Load> (const StackChunkFrameStream<ChunkFrames::Mixed>& f, const RegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Store>(const StackChunkFrameStream<ChunkFrames::Mixed>& f, const RegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Load> (const StackChunkFrameStream<ChunkFrames::CompiledOnly>& f, const RegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Store>(const StackChunkFrameStream<ChunkFrames::CompiledOnly>& f, const RegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Load> (const StackChunkFrameStream<ChunkFrames::Mixed>& f, const SmallRegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Store>(const StackChunkFrameStream<ChunkFrames::Mixed>& f, const SmallRegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Load> (const StackChunkFrameStream<ChunkFrames::CompiledOnly>& f, const SmallRegisterMap* map);\n+template void stackChunkOopDesc::do_barriers0<stackChunkOopDesc::BarrierType::Store>(const StackChunkFrameStream<ChunkFrames::CompiledOnly>& f, const SmallRegisterMap* map);\n@@ -567,1 +568,1 @@\n-  template <chunk_frames frame_kind, typename RegisterMapT>\n+  template <ChunkFrames frame_kind, typename RegisterMapT>\n@@ -590,2 +591,2 @@\n-      \"young: %d num_frames: %d sp: \" INTPTR_FORMAT \" start: \" INTPTR_FORMAT \" end: \" INTPTR_FORMAT,\n-      !_chunk->requires_barriers(), _num_frames, p2i(f.sp()), p2i(_chunk->start_address()), p2i(_chunk->bottom_address()));\n+           \"young: %d num_frames: %d sp: \" INTPTR_FORMAT \" start: \" INTPTR_FORMAT \" end: \" INTPTR_FORMAT,\n+           !_chunk->requires_barriers(), _num_frames, p2i(f.sp()), p2i(_chunk->start_address()), p2i(_chunk->bottom_address()));\n@@ -654,3 +655,0 @@\n-  const bool gc_mode = is_gc_mode();\n-  const bool is_last = parent() == nullptr;\n-  const bool mixed = has_mixed_frames();\n@@ -658,2 +656,2 @@\n-  \/\/ if argsize == 0 and the chunk isn't mixed, the chunk contains the metadata (pc, fp -- frame::sender_sp_offset)\n-  \/\/ for the top frame (below sp), and *not* for the bottom frame\n+  \/\/ If argsize == 0 and the chunk isn't mixed, the chunk contains the metadata (pc, fp -- frame::sender_sp_offset)\n+  \/\/ for the top frame (below sp), and *not* for the bottom frame.\n@@ -664,1 +662,1 @@\n-  const StackChunkFrameStream<chunk_frames::MIXED> first(this);\n+  const StackChunkFrameStream<ChunkFrames::Mixed> first(this);\n@@ -668,2 +666,2 @@\n-    has_safepoint_stub_frame ? 1 : 0, \/\/ iterate_stack skips the safepoint stub\n-    has_safepoint_stub_frame ? first.frame_size() : 0);\n+                                       has_safepoint_stub_frame ? 1 : 0, \/\/ Iterate_stack skips the safepoint stub\n+                                       has_safepoint_stub_frame ? first.frame_size() : 0);\n@@ -684,2 +682,2 @@\n-      \"size: %d argsize: %d closure.size: %d end sp: \" PTR_FORMAT \" start sp: %d chunk size: %d\",\n-      size, argsize(), closure._size, closure._sp - start_address(), sp(), stack_size());\n+           \"size: %d argsize: %d closure.size: %d end sp: \" PTR_FORMAT \" start sp: %d chunk size: %d\",\n+           size, argsize(), closure._size, closure._sp - start_address(), sp(), stack_size());\n@@ -687,2 +685,2 @@\n-      \"argsize(): %d closure.argsize: %d closure.callee_interpreted: %d\",\n-      argsize(), closure._argsize, closure._callee_interpreted);\n+           \"argsize(): %d closure.argsize: %d closure.callee_interpreted: %d\",\n+           argsize(), closure._argsize, closure._callee_interpreted);\n@@ -692,2 +690,2 @@\n-      \"max_size(): %d calculated_max_size: %d argsize: %d num_i2c: %d\",\n-      max_size(), calculated_max_size, closure._argsize, closure._num_i2c);\n+           \"max_size(): %d calculated_max_size: %d argsize: %d num_i2c: %d\",\n+           max_size(), calculated_max_size, closure._argsize, closure._num_i2c);\n@@ -707,3 +705,4 @@\n-    assert(bitmap().size() == align_up((size_t)(stack_size() << (UseCompressedOops ? 1 : 0)), BitsPerWord),\n-      \"bitmap().size(): %zu stack_size: %d\",\n-      bitmap().size(), stack_size());\n+    assert(bitmap().size() == InstanceStackChunkKlass::bitmap_size_in_bits(stack_size()),\n+           \"bitmap().size(): %zu stack_size: %d\",\n+           bitmap().size(), stack_size());\n+\n@@ -714,2 +713,2 @@\n-        bit_index_for((narrowOop*)(sp_address() - frame::metadata_words)),\n-        bit_index_for((narrowOop*)end_address()));\n+                       bit_index_for((narrowOop*)(sp_address() - frame::metadata_words)),\n+                       bit_index_for((narrowOop*)end_address()));\n@@ -720,2 +719,2 @@\n-        bit_index_for((oop*)(sp_address() - frame::metadata_words)),\n-        bit_index_for((oop*)end_address()));\n+                       bit_index_for((oop*)(sp_address() - frame::metadata_words)),\n+                       bit_index_for((oop*)end_address()));\n@@ -725,1 +724,1 @@\n-      \"bitmap_closure._count: %d closure._num_oops: %d\", oop_count, closure._num_oops);\n+           \"bitmap_closure._count: %d closure._num_oops: %d\", oop_count, closure._num_oops);\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.cpp","additions":49,"deletions":50,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-  enum class barrier_type { LOAD, STORE };\n+  enum class BarrierType { Load, Store };\n@@ -51,1 +51,1 @@\n-  template <barrier_type barrier> friend class DoBarriersStackClosure;\n+  template <BarrierType barrier> friend class DoBarriersStackClosure;\n@@ -55,2 +55,2 @@\n-  static const uint8_t FLAG_GC_MODE = 1 << 2; \/\/ once true it and FLAG_HAS_INTERPRETED_FRAMES can't change\n-  static const uint8_t FLAG_HAS_BITMAP = 1 << 3; \/\/ can only be true if FLAG_GC_MODE is true\n+  static const uint8_t FLAG_GC_MODE = 1 << 2; \/\/ Once true it and FLAG_HAS_INTERPRETED_FRAMES can't change\n+  static const uint8_t FLAG_HAS_BITMAP = 1 << 3; \/\/ Can only be true if FLAG_GC_MODE is true\n@@ -125,1 +125,1 @@\n-  template <barrier_type>\n+  template <BarrierType>\n@@ -128,1 +128,1 @@\n-  template <barrier_type, chunk_frames frames, typename RegisterMapT>\n+  template <BarrierType, ChunkFrames frames, typename RegisterMapT>\n@@ -181,1 +181,1 @@\n-  template <barrier_type barrier, chunk_frames frames = chunk_frames::MIXED, typename RegisterMapT>\n+  template <BarrierType barrier, ChunkFrames frames = ChunkFrames::Mixed, typename RegisterMapT>\n@@ -184,1 +184,1 @@\n-  template <chunk_frames frames, class StackChunkFrameClosureType>\n+  template <ChunkFrames frames, class StackChunkFrameClosureType>\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-template <stackChunkOopDesc::barrier_type barrier, chunk_frames frame_kind, typename RegisterMapT>\n+template <stackChunkOopDesc::BarrierType barrier, ChunkFrames frame_kind, typename RegisterMapT>\n@@ -155,1 +155,1 @@\n-  if (frame_kind == chunk_frames::MIXED) {\n+  if (frame_kind == ChunkFrames::Mixed) {\n@@ -164,2 +164,2 @@\n-  has_mixed_frames() ? iterate_stack<chunk_frames::MIXED>(closure)\n-                     : iterate_stack<chunk_frames::COMPILED_ONLY>(closure);\n+  has_mixed_frames() ? iterate_stack<ChunkFrames::Mixed>(closure)\n+                     : iterate_stack<ChunkFrames::CompiledOnly>(closure);\n@@ -168,1 +168,1 @@\n-template <chunk_frames frame_kind, class StackChunkFrameClosureType>\n+template <ChunkFrames frame_kind, class StackChunkFrameClosureType>\n@@ -192,1 +192,1 @@\n-    if (frame_kind == chunk_frames::MIXED) {\n+    if (frame_kind == ChunkFrames::Mixed) {\n@@ -206,1 +206,1 @@\n-  \/\/ The bitmap is located after the stack\n+  \/\/ The bitmap is located after the stack.\n@@ -208,2 +208,1 @@\n-  size_t bitmap_size = InstanceStackChunkKlass::bitmap_size(stack_sz);\n-  size_t bitmap_size_in_bits = bitmap_size << LogBitsPerWord;\n+  size_t bitmap_size_in_bits = InstanceStackChunkKlass::bitmap_size_in_bits(stack_sz);\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.inline.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -472,1 +472,1 @@\n-  return StackChunkFrameStream<chunk_frames::MIXED>(chunk).to_frame();\n+  return StackChunkFrameStream<ChunkFrames::Mixed>(chunk).to_frame();\n@@ -885,11 +885,0 @@\n-void Continuation::emit_chunk_iterate_event(oop chunk, int num_frames, int num_oops) {\n-  EventContinuationIterateOops e;\n-  if (e.should_commit()) {\n-    e.set_id(cast_from_oop<u8>(chunk));\n-    e.set_safepoint(SafepointSynchronize::is_at_safepoint());\n-    e.set_numFrames((u2)num_frames);\n-    e.set_numOops((u2)num_oops);\n-    e.commit();\n-  }\n-}\n-\n@@ -1450,1 +1439,1 @@\n-        StackChunkFrameStream<chunk_frames::MIXED> last(chunk);\n+        StackChunkFrameStream<ChunkFrames::Mixed> last(chunk);\n@@ -1465,1 +1454,1 @@\n-          || unextended_sp == chunk->to_offset(StackChunkFrameStream<chunk_frames::MIXED>(chunk).unextended_sp()), \"\");\n+          || unextended_sp == chunk->to_offset(StackChunkFrameStream<ChunkFrames::Mixed>(chunk).unextended_sp()), \"\");\n@@ -1515,2 +1504,2 @@\n-  assert(!chunk->is_empty() || StackChunkFrameStream<chunk_frames::MIXED>(chunk).is_done(), \"\");\n-  assert(!chunk->is_empty() || StackChunkFrameStream<chunk_frames::MIXED>(chunk).to_frame().is_empty(), \"\");\n+  assert(!chunk->is_empty() || StackChunkFrameStream<ChunkFrames::Mixed>(chunk).is_done(), \"\");\n+  assert(!chunk->is_empty() || StackChunkFrameStream<ChunkFrames::Mixed>(chunk).to_frame().is_empty(), \"\");\n@@ -1531,1 +1520,1 @@\n-  caller = StackChunkFrameStream<chunk_frames::MIXED>(chunk).to_frame();\n+  caller = StackChunkFrameStream<ChunkFrames::Mixed>(chunk).to_frame();\n@@ -1757,1 +1746,1 @@\n-    _cont.tail()->do_barriers<stackChunkOopDesc::barrier_type::STORE>();\n+    _cont.tail()->do_barriers<stackChunkOopDesc::BarrierType::Store>();\n@@ -2135,1 +2124,1 @@\n-  StackChunkFrameStream<chunk_frames::MIXED> _stream;\n+  StackChunkFrameStream<ChunkFrames::Mixed> _stream;\n@@ -2266,1 +2255,1 @@\n-    StackChunkFrameStream<chunk_frames::COMPILED_ONLY> f(chunk);\n+    StackChunkFrameStream<ChunkFrames::CompiledOnly> f(chunk);\n@@ -2381,1 +2370,1 @@\n-  _stream = StackChunkFrameStream<chunk_frames::MIXED>(chunk);\n+  _stream = StackChunkFrameStream<ChunkFrames::Mixed>(chunk);\n@@ -2539,1 +2528,1 @@\n-    _cont.tail()->do_barriers<stackChunkOopDesc::barrier_type::STORE>(_stream, SmallRegisterMap::instance);\n+    _cont.tail()->do_barriers<stackChunkOopDesc::BarrierType::Store>(_stream, SmallRegisterMap::instance);\n@@ -2605,1 +2594,1 @@\n-    _cont.tail()->do_barriers<stackChunkOopDesc::barrier_type::STORE>(_stream, SmallRegisterMap::instance);\n+    _cont.tail()->do_barriers<stackChunkOopDesc::BarrierType::Store>(_stream, SmallRegisterMap::instance);\n@@ -2678,1 +2667,1 @@\n-      _cont.tail()->do_barriers<stackChunkOopDesc::barrier_type::STORE>(_stream, &map);\n+      _cont.tail()->do_barriers<stackChunkOopDesc::BarrierType::Store>(_stream, &map);\n@@ -3090,1 +3079,1 @@\n-    \/\/ if we want, we could templatize by king and have three different that entries\n+    \/\/ If we wanted, we could templatize by kind and have three different thaw entries\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":14,"deletions":25,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -106,1 +106,0 @@\n-  static void emit_chunk_iterate_event(oop chunk, int num_frames, int num_oops);\n","filename":"src\/hotspot\/share\/runtime\/continuation.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-template void StackChunkFrameStream<chunk_frames::MIXED>::print_on(outputStream* st) const;\n-template void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::print_on(outputStream* st) const;\n+template void StackChunkFrameStream<ChunkFrames::Mixed>::print_on(outputStream* st) const;\n+template void StackChunkFrameStream<ChunkFrames::CompiledOnly>::print_on(outputStream* st) const;\n@@ -33,1 +33,1 @@\n-template <chunk_frames frames>\n+template <ChunkFrames frames>\n@@ -36,1 +36,1 @@\n-    p2i(_chunk), _index, _chunk->to_offset(_sp), _chunk->stack_size());\n+               p2i(_chunk), _index, _chunk->to_offset(_sp), _chunk->stack_size());\n","filename":"src\/hotspot\/share\/runtime\/stackChunkFrameStream.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-enum chunk_frames { COMPILED_ONLY, MIXED };\n+enum ChunkFrames { CompiledOnly, Mixed };\n@@ -41,1 +41,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -76,1 +76,1 @@\n-  inline intptr_t* unextended_sp() const { return frame_kind == chunk_frames::MIXED ? _unextended_sp : _sp; }\n+  inline intptr_t* unextended_sp() const { return frame_kind == ChunkFrames::Mixed ? _unextended_sp : _sp; }\n","filename":"src\/hotspot\/share\/runtime\/stackChunkFrameStream.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -49,1 +49,1 @@\n-  assert(frame_kind == chunk_frames::MIXED || !chunk->has_mixed_frames(), \"\");\n+  assert(frame_kind == ChunkFrames::Mixed || !chunk->has_mixed_frames(), \"\");\n@@ -58,1 +58,1 @@\n-  if (frame_kind == chunk_frames::MIXED) {\n+  if (frame_kind == ChunkFrames::Mixed) {\n@@ -70,1 +70,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -74,1 +74,1 @@\n-  assert(frame_kind == chunk_frames::MIXED || !chunk->has_mixed_frames(), \"\");\n+  assert(frame_kind == ChunkFrames::Mixed || !chunk->has_mixed_frames(), \"\");\n@@ -83,1 +83,1 @@\n-  if (frame_kind == chunk_frames::MIXED) {\n+  if (frame_kind == ChunkFrames::Mixed) {\n@@ -104,1 +104,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -109,1 +109,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -115,1 +115,1 @@\n-inline bool StackChunkFrameStream<chunk_frames::MIXED>::is_interpreted() const {\n+inline bool StackChunkFrameStream<ChunkFrames::Mixed>::is_interpreted() const {\n@@ -120,1 +120,1 @@\n-inline bool StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::is_interpreted() const {\n+inline bool StackChunkFrameStream<ChunkFrames::CompiledOnly>::is_interpreted() const {\n@@ -124,1 +124,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -130,1 +130,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -144,1 +144,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -149,1 +149,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -154,1 +154,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -159,1 +159,1 @@\n-  if (frame_kind == chunk_frames::MIXED) {\n+  if (frame_kind == ChunkFrames::Mixed) {\n@@ -184,1 +184,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -189,1 +189,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -208,1 +208,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -217,1 +217,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -233,1 +233,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -243,1 +243,1 @@\n-inline void StackChunkFrameStream<chunk_frames::MIXED>::update_reg_map(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::Mixed>::update_reg_map(RegisterMap* map) {\n@@ -253,1 +253,1 @@\n-inline void StackChunkFrameStream<chunk_frames::COMPILED_ONLY>::update_reg_map(RegisterMap* map) {\n+inline void StackChunkFrameStream<ChunkFrames::CompiledOnly>::update_reg_map(RegisterMap* map) {\n@@ -262,1 +262,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -266,1 +266,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -284,1 +284,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -291,1 +291,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -298,1 +298,1 @@\n-template<chunk_frames frame_kind>\n+template<ChunkFrames frame_kind>\n@@ -321,1 +321,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -350,1 +350,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -380,1 +380,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -394,1 +394,1 @@\n-template <chunk_frames frame_kind>\n+template <ChunkFrames frame_kind>\n@@ -397,1 +397,1 @@\n-  assert(frame_kind == chunk_frames::MIXED, \"\");\n+  assert(frame_kind == ChunkFrames::Mixed, \"\");\n","filename":"src\/hotspot\/share\/runtime\/stackChunkFrameStream.inline.hpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -131,4 +131,0 @@\n-    <event name=\"jdk.ContinuationIterateOops\">\n-      <setting name=\"enabled\">true<\/setting>\n-    <\/event>\n-\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -131,4 +131,0 @@\n-    <event name=\"jdk.ContinuationIterateOops\">\n-      <setting name=\"enabled\">true<\/setting>\n-    <\/event>\n-\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}