{"files":[{"patch":"@@ -361,1 +361,0 @@\n-  \/\/ signature.append(T_INT);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -515,1 +515,1 @@\n-    do_alias(continuationDoYield_signature,     int_int_signature)                                                      \\\n+    do_alias(continuationDoYield_signature,     void_int_signature)                                                     \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7278,2 +7278,0 @@\n-  \/\/ Node* arg0 = argument(0); \/\/ type int - scopes\n-  \/\/ Node* arg0 = intcon(0); \/\/ type int - from interpreter\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -730,0 +730,1 @@\n+   \/\/ create input type (domain)\n@@ -731,2 +732,1 @@\n-  \/\/  fields[TypeFunc::Parms+0] = TypeInt::INT;\n-   const TypeTuple *args = TypeTuple::make(TypeFunc::Parms+0, fields);\n+   const TypeTuple *domain = TypeTuple::make(TypeFunc::Parms+0, fields);\n@@ -734,0 +734,1 @@\n+   \/\/ create result type (range)\n@@ -736,1 +737,1 @@\n-   const TypeTuple *result = TypeTuple::make(TypeFunc::Parms+1, fields);\n+   const TypeTuple *range = TypeTuple::make(TypeFunc::Parms+1, fields);\n@@ -738,1 +739,1 @@\n-   return TypeFunc::make(args, result);\n+   return TypeFunc::make(domain, range);\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-    private static int doYield(int scopes) { throw new Error(\"Intrinsic not installed\"); };\n+    private static int doYield() { throw new Error(\"Intrinsic not installed\"); };\n@@ -414,1 +414,1 @@\n-        int res = doYield(0);\n+        int res = doYield();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/Continuation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}