{"files":[{"patch":"@@ -42,1 +42,1 @@\n-\/\/ An InstanceStackChunkKlass is a specialization of the InstanceKlass. \n+\/\/ An InstanceStackChunkKlass is a specialization of the InstanceKlass.\n@@ -59,1 +59,1 @@\n-  template <bool mixed> friend class StackChunkFrameStream; \n+  template <bool mixed> friend class StackChunkFrameStream;\n@@ -107,1 +107,1 @@\n-  \n+\n@@ -122,1 +122,1 @@\n-  \n+\n@@ -158,1 +158,1 @@\n-  \n+\n@@ -167,1 +167,1 @@\n-  \n+\n@@ -187,1 +187,1 @@\n-  \n+\n@@ -246,1 +246,1 @@\n-  \n+\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-template<typename P> inline oop stackChunkOopDesc::cont() const { \n+template<typename P> inline oop stackChunkOopDesc::cont() const {\n@@ -97,1 +97,1 @@\n-  oop obj = jdk_internal_misc_StackChunk::cont_raw<P>(as_oop()); \n+  oop obj = jdk_internal_misc_StackChunk::cont_raw<P>(as_oop());\n@@ -110,1 +110,1 @@\n-  assert(is_in_chunk(p) || (p >= start_address() && (p - start_address()) <= stack_size() + InstanceStackChunkKlass::metadata_words()), \n+  assert(is_in_chunk(p) || (p >= start_address() && (p - start_address()) <= stack_size() + InstanceStackChunkKlass::metadata_words()),\n@@ -153,1 +153,1 @@\n-inline bool stackChunkOopDesc::requires_barriers() const { \n+inline bool stackChunkOopDesc::requires_barriers() const {\n@@ -311,1 +311,1 @@\n-  log_develop_trace(jvmcont)(\"Copying to h: \" INTPTR_FORMAT \"(%ld,%ld) - \" INTPTR_FORMAT \"(%ld,%ld) (%d words, %d bytes)\", \n+  log_develop_trace(jvmcont)(\"Copying to h: \" INTPTR_FORMAT \"(%ld,%ld) - \" INTPTR_FORMAT \"(%ld,%ld) (%d words, %d bytes)\",\n@@ -322,1 +322,1 @@\n-  log_develop_trace(jvmcont)(\"Copying from h: \" INTPTR_FORMAT \"(%ld,%ld) - \" INTPTR_FORMAT \"(%ld,%ld) (%d words, %d bytes)\", \n+  log_develop_trace(jvmcont)(\"Copying from h: \" INTPTR_FORMAT \"(%ld,%ld) - \" INTPTR_FORMAT \"(%ld,%ld) (%d words, %d bytes)\",\n@@ -392,1 +392,1 @@\n-    \n+\n@@ -448,1 +448,1 @@\n-  \n+\n@@ -461,1 +461,1 @@\n-  \n+\n@@ -497,2 +497,2 @@\n-inline bool StackChunkFrameStream<mixed>::is_interpreted() const { \n-  return mixed ? (!is_done() && Interpreter::contains(pc())) : false; \n+inline bool StackChunkFrameStream<mixed>::is_interpreted() const {\n+  return mixed ? (!is_done() && Interpreter::contains(pc())) : false;\n@@ -503,1 +503,1 @@\n-  return is_interpreted() ? interpreter_frame_size() \n+  return is_interpreted() ? interpreter_frame_size()\n@@ -568,2 +568,2 @@\n-  assert (pc() != nullptr && dbg_is_safe(pc(), -1), \n-  \"index: %d sp: \" INTPTR_FORMAT \" sp offset: %d end offset: %d size: %d chunk sp: %d\", \n+  assert (pc() != nullptr && dbg_is_safe(pc(), -1),\n+  \"index: %d sp: \" INTPTR_FORMAT \" sp offset: %d end offset: %d size: %d chunk sp: %d\",\n@@ -575,2 +575,2 @@\n-  assert (_cb != nullptr, \n-    \"index: %d sp: \" INTPTR_FORMAT \" sp offset: %d end offset: %d size: %d chunk sp: %d gc_flag: %d\", \n+  assert (_cb != nullptr,\n+    \"index: %d sp: \" INTPTR_FORMAT \" sp offset: %d end offset: %d size: %d chunk sp: %d gc_flag: %d\",\n@@ -578,2 +578,2 @@\n-  assert (is_interpreted() || ((is_stub() || is_compiled()) && _cb->frame_size() > 0), \n-    \"index: %d sp: \" INTPTR_FORMAT \" sp offset: %d end offset: %d size: %d chunk sp: %d is_stub: %d is_compiled: %d frame_size: %d mixed: %d\", \n+  assert (is_interpreted() || ((is_stub() || is_compiled()) && _cb->frame_size() > 0),\n+    \"index: %d sp: \" INTPTR_FORMAT \" sp offset: %d end offset: %d size: %d chunk sp: %d is_stub: %d is_compiled: %d frame_size: %d mixed: %d\",\n@@ -587,1 +587,1 @@\n-  get_oopmap(pc(), CodeCache::find_oopmap_slot_fast(pc())); \n+  get_oopmap(pc(), CodeCache::find_oopmap_slot_fast(pc()));\n@@ -727,1 +727,1 @@\n-  \n+\n@@ -732,1 +732,1 @@\n-    \n+\n@@ -740,1 +740,1 @@\n-    \n+\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.inline.hpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-#include \"runtime\/continuation.inline.hpp\"\n+#include \"runtime\/continuation.hpp\"\n@@ -593,1 +593,1 @@\n-  address last_pc() { return last_nonempty_chunk()->pc(); } \n+  address last_pc() { return last_nonempty_chunk()->pc(); }\n@@ -735,1 +735,1 @@\n-  \/\/   if (_tail != nullptr) _tail->print_on(tty);  \n+  \/\/   if (_tail != nullptr) _tail->print_on(tty);\n@@ -942,1 +942,1 @@\n-    return ((sw = StackWatermarkSet::get(_thread, StackWatermarkKind::gc)) != nullptr \n+    return ((sw = StackWatermarkSet::get(_thread, StackWatermarkKind::gc)) != nullptr\n@@ -958,1 +958,1 @@\n-    assert (_last_write == to + size, \"Missed a spot: _last_write: \" INTPTR_FORMAT \" to+size: \" INTPTR_FORMAT \" stack_size: %d _last_write offset: %ld to+size: %ld\", \n+    assert (_last_write == to + size, \"Missed a spot: _last_write: \" INTPTR_FORMAT \" to+size: \" INTPTR_FORMAT \" stack_size: %d _last_write offset: %ld to+size: %ld\",\n@@ -1093,1 +1093,1 @@\n-      \n+\n@@ -1110,1 +1110,1 @@\n-      \n+\n@@ -1128,1 +1128,1 @@\n-      \n+\n@@ -1216,1 +1216,1 @@\n-    \n+\n@@ -1228,1 +1228,1 @@\n-  \n+\n@@ -1374,1 +1374,1 @@\n-    \n+\n@@ -1434,1 +1434,1 @@\n-    \n+\n@@ -1473,1 +1473,1 @@\n-      \n+\n@@ -1499,1 +1499,1 @@\n-    \n+\n@@ -1522,1 +1522,1 @@\n-    \n+\n@@ -1873,1 +1873,1 @@\n-  \n+\n@@ -1888,1 +1888,1 @@\n-  \n+\n@@ -2163,1 +2163,1 @@\n-    return    !_barriers \n+    return    !_barriers\n@@ -2180,1 +2180,1 @@\n-    \n+\n@@ -2235,1 +2235,1 @@\n-      \n+\n@@ -2239,1 +2239,1 @@\n-      \n+\n@@ -2370,1 +2370,1 @@\n-    \n+\n@@ -2401,1 +2401,1 @@\n-  \n+\n@@ -2452,1 +2452,1 @@\n-    \n+\n@@ -2464,1 +2464,1 @@\n-    \n+\n@@ -2472,1 +2472,1 @@\n-  \n+\n@@ -2519,1 +2519,1 @@\n-    \n+\n@@ -2652,1 +2652,1 @@\n-    \n+\n@@ -3077,1 +3077,1 @@\n-  \n+\n@@ -3096,1 +3096,1 @@\n- \n+\n@@ -3571,1 +3571,1 @@\n-  \n+\n@@ -3583,1 +3583,1 @@\n-  \n+\n@@ -3591,1 +3591,1 @@\n-  \n+\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -1,33 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_VM_RUNTIME_CONTINUATION_INLINE_HPP\n-#define SHARE_VM_RUNTIME_CONTINUATION_INLINE_HPP\n-\n-\/\/ #include \"code\/vmreg.inline.hpp\"\n-\/\/ #include \"compiler\/oopMap.hpp\"\n-\/\/ #include \"logging\/log.hpp\"\n-#include \"runtime\/continuation.hpp\"\n-\n-#endif \/\/ SHARE_VM_RUNTIME_CONTINUATION_INLINE_HPP\n","filename":"src\/hotspot\/share\/runtime\/continuation.inline.hpp","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"}]}