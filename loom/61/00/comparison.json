{"files":[{"patch":"@@ -616,1 +616,1 @@\n-  \/\/ The second condition is needed to hide notification methods. \n+  \/\/ The second condition is needed to hide notification methods.\n@@ -1499,1 +1499,1 @@\n-  } \n+  }\n@@ -1687,1 +1687,1 @@\n-  \n+\n@@ -1784,1 +1784,1 @@\n-    \n+\n@@ -2205,0 +2205,22 @@\n+\n+void\n+PrintStackTraceClosure::do_thread(Thread *target) {\n+  JavaThread *java_thread = JavaThread::cast(target);\n+  Thread *current_thread = Thread::current();\n+  assert(SafepointSynchronize::is_at_safepoint() ||\n+      java_thread->is_handshake_safe_for(current_thread),\n+         \"call by myself \/ at safepoint \/ at handshake\");\n+  int count = 0;\n+  if (java_thread->has_last_Java_frame()) {\n+    RegisterMap reg_map(java_thread, true, true);\n+    ResourceMark rm(current_thread);\n+    HandleMark hm(current_thread);\n+\n+    javaVFrame *jvf = JvmtiEnvBase::get_last_java_vframe(java_thread, &reg_map);\n+    while (jvf != NULL) {\n+      tty->print_cr(\"%s\", jvf->method()->external_name());\n+      jvf = jvf->java_sender();\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -544,0 +544,8 @@\n+\/\/ HandshakeClosure to print stack trace.\n+class PrintStackTraceClosure : public HandshakeClosure {\n+ public:\n+  PrintStackTraceClosure()\n+      : HandshakeClosure(\"PrintStackTraceClosure\") {}\n+  void do_thread(Thread *target);\n+};\n+\n@@ -650,1 +658,1 @@\n-private: \n+private:\n@@ -662,1 +670,1 @@\n-  \n+\n@@ -794,1 +802,1 @@\n-                              jvmtiFrameInfo* frame_buffer, jint* count_ptr) \n+                              jvmtiFrameInfo* frame_buffer, jint* count_ptr)\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"runtime\/stackFrameStream.inline.hpp\"\n@@ -37,0 +38,1 @@\n+#include \"prims\/jvmtiEnvBase.hpp\"\n@@ -235,0 +237,1 @@\n+  int attempts = 10;\n@@ -236,1 +239,14 @@\n-    ml.wait();\n+    ml.wait(1000);\n+    attempts--;\n+    if (attempts <= 0) {\n+      tty->print_cr(\"VTMT disabled with count = %d. ThreadList: \\n\", _VTMT_count);\n+      for (JavaThreadIteratorWithHandle jtiwh; JavaThread *java_thread = jtiwh.next(); ) {\n+        tty->print_cr(\"Thread %s VTMT state %s. Info:\", java_thread->name(), (java_thread->is_in_VTMT() ? \"true\": \"false\"));\n+        \/\/ Handshake with target\n+        ResourceMark rm(thread);\n+        HandleMark   hm(thread);\n+        PrintStackTraceClosure pstc;\n+        Handshake::execute(&pstc, java_thread);\n+      }\n+      guarantee(--attempts > 0, \"stuck in VTMT disabler.\");\n+    }\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}