[{"commit":{"message":"Merge branch 'fibers' into build-ppc-s390-arm32-zero"},"files":[],"sha":"bc4ad8d588488d27f19c7f29df3cc8c4b64b897b"},{"commit":{"message":"Loom: Add missing stubs to fix build failures on PPC64, S390, ARM32 and Zero\n\nPPC64, S390, ARM32, Zero stubs were initially introduced to Loom in\ncommit 3a89cd5 [1]. However, necessary updates were missing afterward,\nleading to compilation failures.\n\n1. frame_helpers.inline.hpp\n\nIn commit 854a81a [2], platform specific implementation was extracted\nfrom continuation.cpp to frame_helpers.inline.hpp, and the corresponding\nheaders for only x86 and aarch64 were created then.\n\nThis same updates should be done to PPC64\/S390\/ARM32\/Zero as well.\nOtherwise, the following compilation error would be emitted.\n\n```\n~\/jdk_src\/src\/hotspot\/share\/runtime\/frame_helpers.inline.hpp:326:1:\nfatal error: frame_helpers_ppc.inline.hpp: No such file or directory\n\n  326 | #include CPU_HEADER_INLINE(frame_helpers)\n\n        | ^~~~~~~~~~~~~~~~~\n\n        compilation terminated.\n```\n\nFix: see the updates in continuation_XX.inline.hpp and\nframe_helpers_XX.inline.hpp.\n\n2. ZGC support for PPC64\n\nZGC support for Loom was implemented two years ago in commit 05b1b53\n[3]. Recently ZGC for PPC64 was supported in the mainline. See commit\n337b73a [4].\n\nHowever, stub `BarrierSetNMethod::arm()` is missing for PPC64 platform.\n\nHere is the snippet of error log when cross-compiling on PPC64 in my\nlocal test environment.\n\n```\n* For target\n* hotspot_variant-server_libjvm_gtest_objs_BUILD_GTEST_LIBJVM_link:\n\/usr\/lib\/gcc-cross\/powerpc64le-linux-gnu\/9\/..\/..\/..\/..\/powerpc64le-linux-gnu\/bin\/ld:\n~\/build-release\/hotspot\/variant-server\/libjvm\/objs\/zNMethod.o:\nin function `ZNMethod::arm(nmethod*, int)':\n~\/jdk_src\/src\/hotspot\/share\/gc\/z\/zNMethod.cpp:213:\nundefined reference to `BarrierSetNMethod::arm(nmethod*, int)'\n\/usr\/lib\/gcc-cross\/powerpc64le-linux-gnu\/9\/..\/..\/..\/..\/powerpc64le-linux-gnu\/bin\/ld:\n~\/jdk_src\/src\/hotspot\/share\/gc\/z\/zNMethod.cpp:213:\nundefined reference to `BarrierSetNMethod::arm(nmethod*, int)'\ncollect2: error: ld returned 1 exit status\n```\n\nIn this patch, we add the stub. See the update in file\nbarrierSetNMethod_ppc.cpp.\n\nTesting:\n\nLinux PPC64 cross-compilation\nLinux S390 cross-compilation\nLinux ARM32 cross-compilation\nLinux AArch64 Zero (Hotspot) compilation\nLinux x86_64 tier1_loom passes\nLinux AArch64 tier1_loom passes\n\n[1] https:\/\/github.com\/openjdk\/loom\/commit\/3a89cd5\n[2] https:\/\/github.com\/openjdk\/loom\/commit\/854a81a\n[3] https:\/\/github.com\/openjdk\/loom\/commit\/05b1b53\n[4] https:\/\/github.com\/openjdk\/loom\/commit\/337b73a"},"files":[{"filename":"src\/hotspot\/cpu\/arm\/continuation_arm.inline.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/frame_helpers_arm.inline.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/continuation_ppc.inline.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/frame_helpers_ppc.inline.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetNMethod_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/continuation_s390.inline.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/frame_helpers_s390.inline.hpp"},{"filename":"src\/hotspot\/cpu\/zero\/continuation_zero.inline.hpp"},{"filename":"src\/hotspot\/cpu\/zero\/frame_helpers_zero.inline.hpp"}],"sha":"a177ac7a0750faa33b789bb2e1a996f2b98874a1"}]