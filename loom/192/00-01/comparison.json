{"files":[{"patch":"@@ -52,1 +52,1 @@\n- * <p> An scoped value is bound, meaning it gets a value, when invoking an\n+ * <p> A scoped value is bound, meaning it gets a value, when invoking an\n@@ -57,1 +57,1 @@\n- * read the value of a bound scoped value. A scoped value reverts to being\n+ * read the value of a bound `ScopedValue`. A scoped value reverts to being\n@@ -65,1 +65,1 @@\n- * There may be cases when an operation might need to use the same scoped-value variable\n+ * There may be cases when an operation might need to use the same scoped value\n@@ -75,1 +75,1 @@\n- * scoped values can be shared across threads when used in conjunction with\n+ * Scoped-value bindings can be shared across threads when used in conjunction with\n@@ -79,2 +79,2 @@\n- * may bind an scoped-value variable and share its value in a structured concurrency\n- * context. Threads forked in the task scope that read the scoped-value variable will read\n+ * may bind a scoped value and share its value in a structured concurrency\n+ * context. Threads forked in the task scope that read the scoped value will read\n@@ -112,1 +112,1 @@\n- * scopes to find an scoped-value variable's innermost binding. It\n+ * scopes to find a scoped value's innermost binding. It\n@@ -127,1 +127,1 @@\n- * and then bind a single scoped-value variable to an instance of that\n+ * and then bind a single `ScopedValue` to an instance of that\n@@ -225,1 +225,1 @@\n-     * to invoke an operation with the scoped-value variable mappings bound to the thread\n+     * to invoke an operation with the scoped value mappings bound to the thread\n@@ -260,1 +260,1 @@\n-         * already has a mapping for the scoped-value variable {@code key} then the new\n+         * already has a mapping for the scoped value {@code key} then the new\n@@ -289,2 +289,2 @@\n-         * Returns the value of a variable in this map of scoped values.\n-         * @param key the ScopedValue variable\n+         * Returns the value bound to a {@link ScopedValue} in this map of scoped values.\n+         * @param key the {@link ScopedValue} instance\n@@ -310,4 +310,4 @@\n-         * Runs a value-returning operation with this map of scoped values bound\n-         * to values. Code invoked by {@code op} can use the {@link ScopedValue#get()\n-         * get} method to get the value of the scoped value. The scoped values\n-         * revert to their previous values or become {@linkplain #isBound() unbound} when\n+         * Runs a value-returning operation with this map of scoped-value\n+         * bindings. Code invoked by {@code op} can use the {@link ScopedValue#get() get} \n+         * method to get the value of the scoped value. The scoped values\n+         * revert to their previously-bound values or become {@linkplain #isBound() unbound} when\n@@ -316,1 +316,1 @@\n-         * <p> scoped values are intended to be used in a <em>structured\n+         * <p> Scoped values are intended to be used in a <em>structured\n@@ -346,1 +346,1 @@\n-         * Runs an operation with this map of ScopedValues bound to values. Code executed\n+         * Runs an operation with this map of scoped-value bindings. Code executed\n@@ -349,1 +349,1 @@\n-         * values or becomes {@linkplain #isBound() unbound} when the operation completes.\n+         * values or become {@linkplain #isBound() unbound} when the operation completes.\n@@ -351,1 +351,1 @@\n-         * <p> scoped values are intended to be used in a <em>structured\n+         * <p> Scoped values are intended to be used in a <em>structured\n@@ -379,1 +379,1 @@\n-     * Creates a binding for an scoped-value variable.\n+     * Creates a binding for a scoped value.\n@@ -394,1 +394,1 @@\n-     * Creates a binding for an scoped-value variable and runs a\n+     * Creates a binding for a scoped value and runs a\n@@ -409,1 +409,1 @@\n-     * Creates a binding for scoped-value variable and runs an\n+     * Creates a binding for a scoped value variable and runs an\n@@ -411,1 +411,1 @@\n-     * @param key the ScopedValue to bind\n+     * @param key the {@link ScopedValue} to bind\n@@ -413,1 +413,1 @@\n-     * @param <T> the type of the ScopedValue\n+     * @param <T> the type of the {@link ScopedValue}\n@@ -425,1 +425,1 @@\n-     * Creates an scoped-value variable to refer to a value of type T.\n+     * Creates a scoped value to refer to a value of type T.\n@@ -427,2 +427,2 @@\n-     * @param <T> the type of the scoped value's value.\n-     * @return an scoped-value variable\n+     * @param <T> the type of the scoped value.\n+     * @return a scoped value\n","filename":"src\/jdk.incubator.concurrent\/share\/classes\/jdk\/incubator\/concurrent\/ScopedValue.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"}]}