{"files":[{"patch":"@@ -876,1 +876,1 @@\n-\/\/ HandshakeClosure to set frame pop for a virtual thread..\n+\/\/ HandshakeClosure to set frame pop for a virtual thread.\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-     * @param message the detail messag, can be {@code null}\n+     * @param message the detail message, can be {@code null}\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/OpaqueFrameException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/ThreadGroupReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import com.sun.jdi.request.ThreadStartRequest;\n@@ -48,0 +47,1 @@\n+import com.sun.jdi.request.ThreadStartRequest;\n@@ -795,1 +795,1 @@\n-     * Determine if the target VM support virtual threads.\n+     * Determine if the target VM supports virtual threads.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/VirtualMachine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,2 +122,2 @@\n-            \/\/ then the ThreadDeathReqest was setup to filter out vthreads. So we'll need\n-            \/\/ to create a special ThreadDeathReqest just to detect when this vthread dies.\n+            \/\/ then the ThreadDeathRequest was setup to filter out vthreads. So we'll need\n+            \/\/ to create a special ThreadDeathRequest just to detect when this vthread dies.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/EventHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/StackFrameImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/EventRequestImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventFilter.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventFilter.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-            \/* This NULL will trigger a AGENT_ERROR_INVALID_EVENT_TYPE *\/\n+            \/* This NULL will trigger an AGENT_ERROR_INVALID_EVENT_TYPE *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/standardHandlers.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-                EXIT_ERROR(error, \"getting thread state\");\n+                EXIT_ERROR(error, \"getting vthread state\");\n@@ -1599,1 +1599,1 @@\n-                EXIT_ERROR(error, \"getting thread state\");\n+                EXIT_ERROR(error, \"getting vthread state\");\n@@ -1696,1 +1696,1 @@\n-             * compliment to this that happens during the resumeAll() is handled by\n+             * complement to this that happens during the resumeAll() is handled by\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    jboolean vthreadsSupported; \/* If true, debugging support for vthreads is enabled.*\/\n-    jboolean enumerateVThreads; \/* If true, JDWP APIs returns vthreads in thread lists. *\/\n+    jboolean vthreadsSupported; \/* If true, debugging support for vthreads is enabled. *\/\n+    jboolean enumerateVThreads; \/* If true, JDWP APIs return vthreads in thread lists. *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}