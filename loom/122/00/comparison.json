{"files":[{"patch":"@@ -177,4 +177,2 @@\n-NOINLINE static bool verify_continuation(oop continuation) { return Continuation::debug_verify_continuation(continuation); }\n-#define VERIFY_CONTINUATION(cont) verify_continuation((cont))\n-NOINLINE static bool verify_stack_chunk(oop chunk) { return InstanceStackChunkKlass::verify(chunk); }\n-#define VERIFY_STACK_CHUNK(chunk) verify_stack_chunk((chunk))\n+static void verify_continuation(oop continuation) { Continuation::debug_verify_continuation(continuation); }\n+static void verify_stack_chunk(oop chunk) { InstanceStackChunkKlass::verify(chunk); }\n@@ -185,0 +183,3 @@\n+#else\n+static void verify_continuation(oop continuation) { }\n+static void verify_stack_chunk(oop chunk) { }\n@@ -973,2 +974,2 @@\n-NOINLINE bool Continuation::debug_verify_continuation(oop contOop) {\n-  DEBUG_ONLY(if (!VerifyContinuations) return true;)\n+void Continuation::debug_verify_continuation(oop contOop) {\n+  DEBUG_ONLY(if (!VerifyContinuations) return;)\n@@ -1001,2 +1002,0 @@\n-\n-  return true;\n@@ -1005,2 +1004,1 @@\n-void Continuation::debug_print_continuation(oop contOop, outputStream* st) {\n-  if (st == nullptr) st = tty;\n+void Continuation::print(oop continuation) { print_on(tty, continuation); }\n@@ -1008,1 +1006,2 @@\n-  ContinuationWrapper cont(contOop);\n+void Continuation::print_on(outputStream* st, oop continuation) {\n+  ContinuationWrapper cont(continuation);\n@@ -1011,1 +1010,1 @@\n-    contOop->identity_hash(), jdk_internal_vm_Continuation::done(contOop));\n+    continuation->identity_hash(), jdk_internal_vm_Continuation::done(continuation));\n@@ -1343,1 +1342,1 @@\n-  assert(VERIFY_STACK_CHUNK(chunk), \"\");\n+  verify_stack_chunk(chunk);\n@@ -2012,1 +2011,1 @@\n-  assert(VERIFY_CONTINUATION(cont.continuation()), \"\");\n+  verify_continuation(cont.continuation());\n@@ -2023,1 +2022,1 @@\n-    assert(VERIFY_CONTINUATION(cont.continuation()), \"\");\n+    verify_continuation(cont.continuation());\n@@ -2058,1 +2057,1 @@\n-  assert(VERIFY_CONTINUATION(oopCont), \"\");\n+  verify_continuation(oopCont);\n@@ -2066,1 +2065,1 @@\n-    assert(VERIFY_CONTINUATION(cont.continuation()), \"\");\n+    verify_continuation(cont.continuation());\n@@ -2246,1 +2245,1 @@\n-  assert(VERIFY_CONTINUATION(continuation), \"\");\n+  verify_continuation(continuation);\n@@ -2256,1 +2255,1 @@\n-  assert(VERIFY_STACK_CHUNK(chunk), \"\");\n+  verify_stack_chunk(chunk);\n@@ -2363,1 +2362,1 @@\n-  assert(VERIFY_CONTINUATION(_cont.continuation()), \"\");\n+  verify_continuation(_cont.continuation());\n@@ -2961,1 +2960,1 @@\n-  assert(VERIFY_CONTINUATION(oopCont), \"\");\n+  verify_continuation(oopCont);\n@@ -2981,1 +2980,1 @@\n-  assert(VERIFY_CONTINUATION(cont.continuation()), \"\");\n+  verify_continuation(cont.continuation());\n@@ -3007,1 +3006,1 @@\n-  assert(VERIFY_CONTINUATION(cont.continuation()), \"\");\n+  verify_continuation(cont.continuation());\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -114,2 +114,3 @@\n-  static bool debug_verify_continuation(oop continuation);\n-  static void debug_print_continuation(oop continuation, outputStream* st = NULL);\n+  static void debug_verify_continuation(oop continuation);\n+  static void print(oop continuation);\n+  static void print_on(outputStream* st, oop continuation);\n","filename":"src\/hotspot\/share\/runtime\/continuation.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}