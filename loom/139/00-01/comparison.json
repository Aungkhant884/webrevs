{"files":[{"patch":"@@ -88,3 +88,2 @@\n-    \/\/ we need to re-read fp because it may be an oop and we might have had a safepoint in finalize_freeze,\n-    \/\/ after constructing f.\n-    \/\/ This comment doesn't make sense since we don't reread fp\n+    \/\/ We need to re-read fp out of the frame because it may be an oop and we might have\n+    \/\/ had a safepoint in finalize_freeze, after constructing f.\n","filename":"src\/hotspot\/cpu\/aarch64\/continuation_aarch64.inline.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -102,3 +102,2 @@\n-    \/\/ we need to re-read fp because it may be an oop and we might have had a safepoint in\n-    \/\/ finalize_freeze, after constructing f.\n-    \/\/ This comment doesn't make sense since we don't reread fp\n+    \/\/ We need to re-read fp out of the frame because it may be an oop and we might have\n+    \/\/ had a safepoint in finalize_freeze, after constructing f.\n@@ -232,1 +231,2 @@\n-    intptr_t* fp = *(intptr_t**)(hf.sp() - frame::sender_sp_offset); \/\/ we need to re-read fp because it may be an oop and we might have fixed the frame.\n+    \/\/ we need to re-read fp because it may be an oop and we might have fixed the frame.\n+    intptr_t* fp = *(intptr_t**)(hf.sp() - frame::sender_sp_offset);\n","filename":"src\/hotspot\/cpu\/x86\/continuation_x86.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1000,2 +1000,2 @@\n-  freeze_result try_freeze_fast(intptr_t* sp, bool chunk_available);\n-  bool freeze_fast(intptr_t* top_sp, bool chunk_available);\n+  template <bool chunk_available> freeze_result try_freeze_fast(intptr_t* sp);\n+  template <bool chunk_available> bool freeze_fast(intptr_t* top_sp);\n@@ -1061,2 +1061,3 @@\n-freeze_result Freeze<ConfigT>::try_freeze_fast(intptr_t* sp, bool chunk_available) {\n-  if (freeze_fast(sp, chunk_available)) {\n+template <bool chunk_available>\n+freeze_result Freeze<ConfigT>::try_freeze_fast(intptr_t* sp) {\n+  if (freeze_fast<chunk_available>(sp)) {\n@@ -1114,1 +1115,2 @@\n-bool Freeze<ConfigT>::freeze_fast(intptr_t* top_sp, bool chunk_available) {\n+template <bool chunk_available>\n+bool Freeze<ConfigT>::freeze_fast(intptr_t* top_sp) {\n@@ -1983,1 +1985,1 @@\n-    freeze_result res = fr.try_freeze_fast(sp, true);\n+    freeze_result res = fr.template try_freeze_fast<true>(sp);\n@@ -1994,1 +1996,1 @@\n-    freeze_result res = fast ? fr.try_freeze_fast(sp, false)\n+    freeze_result res = fast ? fr.template try_freeze_fast<false>(sp)\n@@ -2096,1 +2098,1 @@\n-  \/\/ 300 ?\n+  \/\/ Comment needed: 300 ?\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}