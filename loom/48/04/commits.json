[{"commit":{"message":"Or should the StackWatermarkSet::after_unwind go here?"},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"}],"sha":"e8292363127a3f3e29ddcaa110045657aeafb60f"},{"commit":{"message":"Shouldn't call update_poll_values on suspended thread, but I suppose we need to call StackWaterMark::after_unwind (actually no idea maybe that should be in the special_exit function instead."},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"}],"sha":"d2d372b6050ebfb96d61e9115ca0f8bd5b4adf27"},{"commit":{"message":"Better handling boolean for preempt"},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"}],"sha":"7b498ad7b27113fb1d6ccbaa67762d9c2f9e3988"},{"commit":{"message":"Make preempt a bool in ContMirror instead of holding the current thread."},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"}],"sha":"da21d190868833c6b682680f8127f141ed6eb9d2"},{"commit":{"message":"Fix some asserts, add another."},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"}],"sha":"3d1a72ee7181cbfb674d4d1c608cc966d033b671"},{"commit":{"message":"Preempt changes to use block_suspend (+whitespace changes)"},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"},{"filename":"test\/jdk\/java\/lang\/Continuation\/Preempt.java"}],"sha":"851adf36682984e79045d9c1471a2d46c56351eb"},{"commit":{"message":"Add thread specific suspension mechanism"},"files":[{"filename":"src\/hotspot\/share\/runtime\/handshake.cpp"},{"filename":"src\/hotspot\/share\/runtime\/handshake.hpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.hpp"},{"filename":"test\/hotspot\/gtest\/runtime\/test_suspend.cpp"}],"sha":"f1ceeead229925f074fde12fa24a115c18060535"}]