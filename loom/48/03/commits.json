[{"commit":{"message":"Or should the StackWatermarkSet::after_unwind go here?"},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"}],"sha":"c8b8f9fe8284be8ac2b5233a37e03d8bb90d5439"},{"commit":{"message":"Shouldn't call update_poll_values on suspended thread, but I suppose we need to call StackWaterMark::after_unwind (actually no idea maybe that should be in the special_exit function instead."},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"}],"sha":"9d584f6a991c8ceacaa97d696f342065a09f042e"},{"commit":{"message":"Better handling boolean for preempt"},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"}],"sha":"66017b5f0f43858af7410ebae91907c25958e172"},{"commit":{"message":"Make preempt a bool in ContMirror instead of holding the current thread."},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"}],"sha":"3b08104fec4f002572c4b98c57ac758b4fe92a2f"},{"commit":{"message":"Fix some asserts, add another."},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"}],"sha":"63ab6841c8cd5eab66fa92cd2cc963630d00cb27"},{"commit":{"message":"Preempt changes to use block_suspend (+whitespace changes)"},"files":[{"filename":"src\/hotspot\/share\/runtime\/continuation.cpp"},{"filename":"test\/jdk\/java\/lang\/Continuation\/Preempt.java"}],"sha":"b7cb9fce61f256f15a08032859cc1e997f6650d7"},{"commit":{"message":"Add thread specific suspension mechanism"},"files":[{"filename":"src\/hotspot\/share\/runtime\/handshake.cpp"},{"filename":"src\/hotspot\/share\/runtime\/handshake.hpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.hpp"},{"filename":"test\/hotspot\/gtest\/runtime\/test_suspend.cpp"}],"sha":"a57393bfb153d15733a218c8063a712002750e76"}]