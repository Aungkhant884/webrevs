{"files":[{"patch":"@@ -3448,0 +3448,12 @@\n+\n+void G1CollectedHeap::start_codecache_marking_cycle_if_inactive() {\n+  if (!CodeCache::is_marking_cycle_active()) {\n+    \/\/ This is the normal case when we do not call collect when a\n+    \/\/ concurrent mark is ongoing. We then start a new code marking\n+    \/\/ cycle. If, on the other hand, a concurrent mark is ongoing, we\n+    \/\/ will be conservative and use the last code marking cycle. Code\n+    \/\/ caches marked between the two concurrent marks will live a bit\n+    \/\/ longer than needed.\n+    CodeCache::start_marking_cycle();\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -939,0 +939,1 @@\n+  static void start_codecache_marking_cycle_if_inactive();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -817,9 +817,1 @@\n-  if (!CodeCache::is_marking_cycle_active()) {\n-    \/\/ This is the normal case when we do not call collect when a\n-    \/\/ concurrent mark is ongoing. We then start a new code marking\n-    \/\/ cycle. If, on the other hand, a concurrent mark is ongoing, we\n-    \/\/ will be conservative and use the last code marking cycle. Code\n-    \/\/ caches marked between the two concurrent marks will live a bit\n-    \/\/ longer than needed.\n-    CodeCache::start_marking_cycle();\n-  }\n+  G1CollectedHeap::start_codecache_marking_cycle_if_inactive(); \n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -191,10 +191,1 @@\n-  if (!CodeCache::is_marking_cycle_active()) {\n-    \/\/ This is the normal case when we do not call collect when a\n-    \/\/ concurrent mark is ongoing. We then start a new code marking\n-    \/\/ cycle. If, on the other hand, a concurrent mark is ongoing, we\n-    \/\/ will be conservative and use the last code marking cycle. Code\n-    \/\/ caches marked between the two concurrent marks will live a bit\n-    \/\/ longer than needed.\n-    CodeCache::start_marking_cycle();\n-  }\n-\n+  G1CollectedHeap::start_codecache_marking_cycle_if_inactive();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1085,3 +1085,3 @@\n-      \/\/ Initiate a user requested concurrent start or run to a breakpoint.\n-      \/\/ A concurrent start must be young only GC, so the collector state\n-      \/\/ must be updated to reflect this.\n+      \/\/ Initiate a concurrent start.  A concurrent start must be a\n+      \/\/ young only GC, so the collector state must be updated to\n+      \/\/ reflect this.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}