{"files":[{"patch":"@@ -45,0 +45,1 @@\n+#include \"runtime\/continuation.hpp\"\n@@ -6602,3 +6603,3 @@\n-    if (exception)           __ movw(c_rarg1, (uint32_t)2);\n-    else if (return_barrier) __ movw(c_rarg1, (uint32_t)1);\n-    else                     __ movw(c_rarg1, (uint32_t)0);\n+    if (exception)           __ movw(c_rarg1, (uint32_t)Continuation::thaw_exception);\n+    else if (return_barrier) __ movw(c_rarg1, (uint32_t)Continuation::thaw_return_barrier);\n+    else                     __ movw(c_rarg1, (uint32_t)Continuation::thaw_top);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7534,3 +7534,3 @@\n-    if (exception)           __ movl(c_rarg1, (int32_t)2);\n-    else if (return_barrier) __ movl(c_rarg1, (int32_t)1);\n-    else                     __ movl(c_rarg1, (int32_t)0);\n+    if (exception)           __ movl(c_rarg1, (int32_t)Continuation::thaw_exception);\n+    else if (return_barrier) __ movl(c_rarg1, (int32_t)Continuation::thaw_return_barrier);\n+    else                     __ movl(c_rarg1, (int32_t)Continuation::thaw_top);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,0 +61,7 @@\n+\n+  enum thaw_kind {\n+    thaw_top = 0,\n+    thaw_return_barrier = 1,\n+    thaw_exception = 2,\n+  };\n+\n","filename":"src\/hotspot\/share\/runtime\/continuation.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"runtime\/continuation.hpp\"\n@@ -214,6 +215,0 @@\n-enum thaw_kind {\n-  thaw_top = 0,\n-  thaw_return_barrier = 1,\n-  thaw_exception = 2,\n-};\n-\n@@ -221,1 +216,1 @@\n-template<typename ConfigT> static inline intptr_t* thaw_internal(JavaThread* thread, const thaw_kind kind);\n+template<typename ConfigT> static inline intptr_t* thaw_internal(JavaThread* thread, const Continuation::thaw_kind kind);\n@@ -248,1 +243,1 @@\n-  return ConfigT::thaw(thread, (thaw_kind)kind);\n+  return ConfigT::thaw(thread, (Continuation::thaw_kind)kind);\n@@ -270,1 +265,1 @@\n-  static intptr_t* thaw(JavaThread* thread, thaw_kind kind) {\n+  static intptr_t* thaw(JavaThread* thread, Continuation::thaw_kind kind) {\n@@ -1640,1 +1635,1 @@\n-  inline intptr_t* thaw(thaw_kind kind);\n+  inline intptr_t* thaw(Continuation::thaw_kind kind);\n@@ -1645,1 +1640,1 @@\n-inline intptr_t* Thaw<ConfigT>::thaw(thaw_kind kind) {\n+inline intptr_t* Thaw<ConfigT>::thaw(Continuation::thaw_kind kind) {\n@@ -1656,1 +1651,1 @@\n-                                        : thaw_slow(chunk, kind != thaw_top);\n+                                        : thaw_slow(chunk, kind != Continuation::thaw_top);\n@@ -2215,1 +2210,1 @@\n-static inline intptr_t* thaw_internal(JavaThread* thread, const thaw_kind kind) {\n+static inline intptr_t* thaw_internal(JavaThread* thread, const Continuation::thaw_kind kind) {\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"}]}