{"files":[{"patch":"@@ -71,2 +71,2 @@\n-template<typename FKind, typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map(const frame& f, RegisterMapT* map) {\n+template<typename FKind>\n+inline void ContinuationHelper::update_register_map(const frame& f, RegisterMap* map) {\n@@ -81,2 +81,1 @@\n-template<typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMapT* map) {\n+inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMap* map) {\n","filename":"src\/hotspot\/cpu\/aarch64\/continuation_aarch64.inline.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-template<typename FKind, typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map(const frame& f, RegisterMapT* map) {\n+template<typename FKind>\n+inline void ContinuationHelper::update_register_map(const frame& f, RegisterMap* map) {\n@@ -57,2 +57,1 @@\n-template<typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMapT* map) {\n+inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMap* map) {\n","filename":"src\/hotspot\/cpu\/arm\/continuation_arm.inline.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-template<typename FKind, typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map(const frame& f, RegisterMapT* map) {\n+template<typename FKind>\n+inline void ContinuationHelper::update_register_map(const frame& f, RegisterMap* map) {\n@@ -57,2 +57,1 @@\n-template<typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMapT* map) {\n+inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMap* map) {\n","filename":"src\/hotspot\/cpu\/ppc\/continuation_ppc.inline.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-template<typename FKind, typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map(const frame& f, RegisterMapT* map) {\n+template<typename FKind>\n+inline void ContinuationHelper::update_register_map(const frame& f, RegisterMap* map) {\n@@ -57,2 +57,1 @@\n-template<typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMapT* map) {\n+inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMap* map) {\n","filename":"src\/hotspot\/cpu\/s390\/continuation_s390.inline.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -70,2 +70,2 @@\n-template<typename FKind, typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map(const frame& f, RegisterMapT* map) {\n+template<typename FKind>\n+inline void ContinuationHelper::update_register_map(const frame& f, RegisterMap* map) {\n@@ -80,2 +80,1 @@\n-template<typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMapT* map) {\n+inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMap* map) {\n@@ -207,0 +206,2 @@\n+  address frame_pc = hf.pc();\n+\n@@ -212,0 +213,1 @@\n+  assert(frame_pc == Frame::real_pc(hf), \"\");\n","filename":"src\/hotspot\/cpu\/x86\/continuation_x86.inline.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-template<typename FKind, typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map(const frame& f, RegisterMapT* map) {\n+template<typename FKind>\n+inline void ContinuationHelper::update_register_map(const frame& f, RegisterMap* map) {\n@@ -57,2 +57,1 @@\n-template<typename RegisterMapT>\n-inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMapT* map) {\n+inline void ContinuationHelper::update_register_map_with_callee(const frame& f, RegisterMap* map) {\n","filename":"src\/hotspot\/cpu\/zero\/continuation_zero.inline.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -179,2 +179,2 @@\n-static bool do_verify_after_thaw(JavaThread* thread, int mode, bool barriers, stackChunkOop chunk, outputStream* st);\n-static void print_frames(JavaThread* thread, outputStream* st = tty);\n+static bool do_verify_after_thaw(JavaThread* thread, bool barriers, stackChunkOop chunk, outputStream* st);\n+static void log_frames(JavaThread* thread);\n@@ -245,4 +245,0 @@\n-\n-  static bool requires_barriers(stackChunkOop obj) {\n-    return obj->requires_barriers();\n-  }\n@@ -265,2 +261,2 @@\n-  template<typename FKind, typename RegisterMapT> static void update_register_map(const frame& f, RegisterMapT* map);\n-  template<typename RegisterMapT> static void update_register_map_with_callee(const frame& f, RegisterMapT* map);\n+  template<typename FKind> static void update_register_map(const frame& f, RegisterMap* map);\n+  static void update_register_map_with_callee(const frame& f, RegisterMap* map);\n@@ -908,1 +904,1 @@\n-    pc = ce->entry_pc();\n+    return ce->entry_pc();\n@@ -973,1 +969,3 @@\n-  DEBUG_ONLY(if (!VerifyContinuations) return;)\n+  if (!VerifyContinuations) {\n+    return;\n+  }\n@@ -1076,1 +1074,0 @@\n-  virtual bool requires_barriers(stackChunkOop chunk) = 0;\n@@ -1098,1 +1095,0 @@\n-  virtual bool requires_barriers(stackChunkOop chunk) override { return ConfigT::requires_barriers(chunk); }\n@@ -1183,1 +1179,1 @@\n-  if (chunk == nullptr || chunk->is_gc_mode() || ConfigT::requires_barriers(chunk) || chunk->has_mixed_frames()) {\n+  if (chunk == nullptr || chunk->is_gc_mode() || chunk->requires_barriers() || chunk->has_mixed_frames()) {\n@@ -1546,1 +1542,1 @@\n-  if (unextended_sp < _size || chunk->is_gc_mode() || (!_barriers && requires_barriers(chunk))) {\n+  if (unextended_sp < _size || chunk->is_gc_mode() || (!_barriers && chunk->requires_barriers())) {\n@@ -1551,2 +1547,3 @@\n-      if (chunk == nullptr) ls.print_cr(\"no chunk\");\n-      else {\n+      if (chunk == nullptr) {\n+        ls.print_cr(\"no chunk\");\n+      } else {\n@@ -1664,1 +1661,3 @@\n-    if (real_unextended_sp != nullptr) f.set_unextended_sp(real_unextended_sp); \/\/ can be null at a safepoint\n+    if (real_unextended_sp != nullptr) {\n+      f.set_unextended_sp(real_unextended_sp); \/\/ can be null at a safepoint\n+    }\n@@ -1794,1 +1793,3 @@\n-  if (UNLIKELY(result > freeze_ok_bottom)) return result;\n+  if (UNLIKELY(result > freeze_ok_bottom)) {\n+    return result;\n+  }\n@@ -1820,1 +1821,0 @@\n-  assert(top.pc() == Frame::real_pc(top), \"\");\n@@ -1890,1 +1890,1 @@\n-    _barriers = ConfigT::requires_barriers(chunk);\n+    _barriers = chunk->requires_barriers();\n@@ -1916,1 +1916,1 @@\n-    assert(!ConfigT::requires_barriers(chunk), \"Unfamiliar GC requires barriers on TLAB allocation\");\n+    assert(!chunk->requires_barriers(), \"Unfamiliar GC requires barriers on TLAB allocation\");\n@@ -1918,1 +1918,1 @@\n-    _barriers = ConfigT::requires_barriers(chunk);\n+    _barriers = chunk->requires_barriers();\n@@ -2029,1 +2029,1 @@\n-  assert(!current->has_pending_exception(), \"\"); \/\/ if (current->has_pending_exception()) return early_return(freeze_exception, current, fi);\n+  assert(!current->has_pending_exception(), \"\");\n@@ -2034,1 +2034,0 @@\n-  LogTarget(Trace, jvmcont) lt;\n@@ -2036,5 +2035,2 @@\n-  if (lt.develop_is_enabled()) {\n-    LogStream ls(lt);\n-    ls.print_cr(\"~~~~ freeze sp: \" INTPTR_FORMAT, p2i(current->last_continuation()->entry_sp()));\n-    print_frames(current, &ls);\n-  }\n+  log_trace(jvmcont)(\"~~~~ freeze sp: \" INTPTR_FORMAT, p2i(current->last_continuation()->entry_sp()));\n+  log_frames(current);\n@@ -2087,4 +2083,0 @@\n-  \/\/ if (current->held_monitor_count() > 0) {\n-  \/\/    return freeze_pinned_monitor;\n-  \/\/ }\n-\n@@ -2207,0 +2199,1 @@\n+\n@@ -2211,10 +2204,0 @@\n-\n-  LogTarget(Trace, jvmcont, preempt) lt;\n-  if (lt.is_enabled()) {\n-    ResourceMark rm;\n-    LogStream ls(lt);\n-    frame f = thread->last_frame();\n-    ls.print(\"is_safe_to_preempt %sSAFEPOINT \", Interpreter::contains(f.pc()) ? \"INTERPRETER \" : \"\");\n-    f.print_on(&ls);\n-  }\n-\n@@ -2286,1 +2269,0 @@\n-    int _mode; \/\/ TODO: remove\n@@ -2296,1 +2278,0 @@\n-    DEBUG_ONLY(_mode = 0;)\n@@ -2364,1 +2345,1 @@\n-  _barriers = ConfigT::requires_barriers(chunk);\n+  _barriers = chunk->requires_barriers();\n@@ -2391,2 +2372,2 @@\n-  int size = chunk->stack_size() - chunk_start_sp; \/\/ this initial size could be reduced if it's a partial thaw\n-  int argsize;\n+  const int full_chunk_size = chunk->stack_size() - chunk_start_sp; \/\/ this initial size could be reduced if it's a partial thaw\n+  int argsize, thaw_size;\n@@ -2397,3 +2378,2 @@\n-  if (LIKELY(!TEST_THAW_ONE_CHUNK_FRAME && (size < threshold))) {\n-    DEBUG_ONLY(_mode = 1;)\n-    prefetch_chunk_pd(chunk->start_address(), size); \/\/ prefetch anticipating memcpy starting at highest address\n+  if (LIKELY(!TEST_THAW_ONE_CHUNK_FRAME && (full_chunk_size < threshold))) {\n+    prefetch_chunk_pd(chunk->start_address(), full_chunk_size); \/\/ prefetch anticipating memcpy starting at highest address\n@@ -2408,1 +2388,0 @@\n-    \/\/ chunk->clear_flags();\n@@ -2410,2 +2389,2 @@\n-    log_develop_trace(jvmcont)(\"set max_size: 0\");\n-    \/\/ chunk->set_pc(nullptr);\n+\n+    thaw_size = full_chunk_size;\n@@ -2413,1 +2392,0 @@\n-    DEBUG_ONLY(_mode = 2;)\n@@ -2418,1 +2396,2 @@\n-    size = f.cb()->frame_size();\n+\n+    const int frame_size = f.cb()->frame_size();\n@@ -2420,0 +2399,1 @@\n+\n@@ -2428,2 +2408,0 @@\n-      log_develop_trace(jvmcont)(\"set max_size: 0\");\n-      \/\/ chunk->set_pc(nullptr);\n@@ -2431,3 +2409,3 @@\n-      chunk->set_sp(chunk->sp() + size);\n-      chunk->set_max_size(chunk->max_size() - size);\n-      address top_pc = *(address*)(chunk_sp + size - frame::sender_sp_ret_address_offset());\n+      chunk->set_sp(chunk->sp() + frame_size);\n+      chunk->set_max_size(chunk->max_size() - frame_size);\n+      address top_pc = *(address*)(chunk_sp + frame_size - frame::sender_sp_ret_address_offset());\n@@ -2437,1 +2415,1 @@\n-    size += argsize;\n+    thaw_size = frame_size + argsize;\n@@ -2443,1 +2421,1 @@\n-                              partial, is_last, empty, size, argsize);\n+                              partial, is_last, empty, thaw_size, argsize);\n@@ -2448,1 +2426,1 @@\n-  stack_sp -= size;\n+  stack_sp -= thaw_size;\n@@ -2454,4 +2432,4 @@\n-  copy_from_chunk(from, to, size + ContinuationHelper::frame_metadata);\n-  assert(_cont.entrySP() - 1 <= to + size + ContinuationHelper::frame_metadata\n-            && to + size + ContinuationHelper::frame_metadata <= _cont.entrySP(), \"\");\n-  assert(argsize != 0 || to + size + ContinuationHelper::frame_metadata == _cont.entrySP(), \"\");\n+  copy_from_chunk(from, to, thaw_size + ContinuationHelper::frame_metadata);\n+  assert(_cont.entrySP() - 1 <= to + thaw_size + ContinuationHelper::frame_metadata\n+            && to + thaw_size + ContinuationHelper::frame_metadata <= _cont.entrySP(), \"\");\n+  assert(argsize != 0 || to + thaw_size + ContinuationHelper::frame_metadata == _cont.entrySP(), \"\");\n@@ -2481,6 +2459,2 @@\n-  intptr_t* sp0 = stack_sp;\n-  ContinuationHelper::set_anchor(_thread, sp0);\n-  if (lt.develop_is_enabled()) {\n-    LogStream ls(lt);\n-    print_frames(_thread, &ls);\n-  }\n+  ContinuationHelper::set_anchor(_thread, stack_sp);\n+  log_frames(_thread);\n@@ -2529,1 +2503,0 @@\n-  DEBUG_ONLY(_mode = 3;)\n@@ -2935,5 +2908,2 @@\n-  LogTarget(Trace, jvmcont) lt;\n-#ifdef ASSERT\n-  LogStream ls(lt);\n-#endif\n-  \/\/ NoSafepointVerifier nsv;\n+  assert(thread == JavaThread::current(), \"Must be current thread\");\n+\n@@ -2942,3 +2912,0 @@\n-  if (kind != thaw_top) {\n-    log_develop_trace(jvmcont)(\"== RETURN BARRIER\");\n-  }\n@@ -2947,2 +2914,0 @@\n-  assert(thread == JavaThread::current(), \"\");\n-\n@@ -2962,4 +2927,3 @@\n-  if (lt.develop_is_enabled()) {\n-    ContinuationHelper::set_anchor_to_entry(thread, cont.entry());\n-    print_frames(thread, &ls);\n-  }\n+  ContinuationHelper::set_anchor_to_entry(thread, cont.entry());\n+  log_frames(thread);\n+  ContinuationHelper::clear_anchor(thread);\n@@ -2983,3 +2947,1 @@\n-  if (lt.develop_is_enabled()) {\n-    print_frames(thread, &ls);\n-  }\n+  log_frames(thread);\n@@ -2987,1 +2949,1 @@\n-    assert(do_verify_after_thaw(thread, thw._mode, thw.barriers(), cont.tail(), tty), \"\");\n+    assert(do_verify_after_thaw(thread, thw.barriers(), cont.tail(), tty), \"\");\n@@ -2992,0 +2954,1 @@\n+  LogTarget(Trace, jvmcont) lt;\n@@ -2993,0 +2956,1 @@\n+    LogStream ls(lt);\n@@ -3022,4 +2986,0 @@\n-static bool is_good_oop(oop o) {\n-  return dbg_is_safe(o, -1) && dbg_is_safe(o->klass(), -1) && oopDesc::is_oop(o) && o->klass()->is_klass();\n-}\n-\n@@ -3029,0 +2989,3 @@\n+  bool is_good_oop(oop o) {\n+    return dbg_is_safe(o, -1) && dbg_is_safe(o->klass(), -1) && oopDesc::is_oop(o) && o->klass()->is_klass();\n+  }\n@@ -3052,1 +3015,1 @@\n-static bool do_verify_after_thaw(JavaThread* thread, int mode, bool barriers, stackChunkOop chunk, outputStream* st) {\n+static bool do_verify_after_thaw(JavaThread* thread, bool barriers, stackChunkOop chunk, outputStream* st) {\n@@ -3072,1 +3035,1 @@\n-      st->print_cr(\"Failed for frame mode: %d barriers: %d %d\", mode, barriers, chunk->requires_barriers());\n+      st->print_cr(\"Failed for frame barriers: %d %d\", barriers, chunk->requires_barriers());\n@@ -3077,1 +3040,0 @@\n-  #ifdef ASSERT\n@@ -3082,1 +3044,0 @@\n-  #endif\n@@ -3092,3 +3053,11 @@\n-static void print_frames(JavaThread* thread, outputStream* st) {\n-  st->print_cr(\"------- frames ---------\");\n-  if (!thread->has_last_Java_frame()) st->print_cr(\"NO ANCHOR!\");\n+static void log_frames(JavaThread* thread) {\n+  LogTarget(Trace, jvmcont) lt;\n+  if (!lt.develop_is_enabled()) {\n+    return;\n+  }\n+  LogStream ls(lt);\n+\n+  ls.print_cr(\"------- frames ---------\");\n+  if (!thread->has_last_Java_frame()) {\n+    ls.print_cr(\"NO ANCHOR!\");\n+  }\n@@ -3100,1 +3069,3 @@\n-    for (frame f = thread->last_frame(); !f.is_entry_frame(); f = f.sender(&map)) f.print_on(st);\n+    for (frame f = thread->last_frame(); !f.is_entry_frame(); f = f.sender(&map)) {\n+      f.print_on(&ls);\n+    }\n@@ -3109,2 +3080,4 @@\n-    for (frame f = thread->last_frame(); !f.is_entry_frame(); f = f.sender(&map)) f.describe(values, i++, &map);\n-    values.print_on(thread, st);\n+    for (frame f = thread->last_frame(); !f.is_entry_frame(); f = f.sender(&map)) {\n+      f.describe(values, i++, &map);\n+    }\n+    values.print_on(thread, &ls);\n@@ -3113,1 +3086,1 @@\n-  st->print_cr(\"======= end frames =========\");\n+  ls.print_cr(\"======= end frames =========\");\n@@ -3204,1 +3177,0 @@\n-  assert(::thaw_entry != nullptr,  \"\");\n@@ -3209,1 +3181,0 @@\n-  assert(::freeze_entry != nullptr, \"\");\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":81,"deletions":110,"binary":false,"changes":191,"status":"modified"}]}