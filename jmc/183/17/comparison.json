{"files":[{"patch":"@@ -29,0 +29,1 @@\n+echo \t--installCore to install JMC core\n@@ -30,0 +31,3 @@\n+echo \t--packageAgent to package Agent\n+echo \t--runAgentExample to run Agent 'InstrumentMe' example, once it was packaged\n+echo \t--runAgentConverterExample to run Agent 'InstrumentMeConverter' example, once it was packaged\n@@ -39,0 +43,1 @@\n+if \"%1\" == \"--installCore\" goto installCore\n@@ -40,0 +45,3 @@\n+if \"%1\" == \"--packageAgent\" goto packageAgent\n+if \"%1\" == \"--runAgentExample\" goto runAgentExample\n+if \"%1\" == \"--runAgentConverterExample\" goto runAgentConverterExample\n@@ -50,1 +58,0 @@\n-set INSTALL_LOG=%cd%\\build_%TIMESTAMP%.3.install.log\n@@ -65,0 +72,11 @@\n+call :installCore\n+if not %ERRORLEVEL% == 0 (\n+\tcall :killJetty %1\n+\texit \/B 1\n+)\n+exit \/B 0\n+\n+:installCore\n+for \/f \"skip=1\" %%A in ('wmic os get localdatetime ^| findstr .') do (set LOCALDATETIME=%%A)\n+set TIMESTAMP=%LOCALDATETIME:~0,14%\n+set INSTALL_LOG=%cd%\\build_%TIMESTAMP%.3.install.log\n@@ -68,1 +86,0 @@\n-\tcall :killJetty %1\n@@ -118,0 +135,31 @@\n+:packageAgent\n+@REM generate a unique id for window title\n+@REM allow to filter uniquely to get PID associated later\n+for \/f \"skip=1\" %%A in ('wmic os get localdatetime ^| findstr .') do (set LOCALDATETIME=%%A)\n+set TIMESTAMP=%LOCALDATETIME:~0,14%\n+set PACKAGE_LOG=%cd%\\build_%TIMESTAMP%.5.package.log\n+cd agent\n+call mvn install --log-file \"%PACKAGE_LOG%\"\n+cd ..\n+if %ERRORLEVEL% == 0  (\n+\techo Agent library build complete. You can now run an example with the agent using --runAgentExample or --runAgentConverterExample\n+\techo See agent\/README.md for more information\n+) else {\n+\texit \/B 1\n+}\n+exit \/B 0\n+\n+:runAgentExample\n+echo %time% run Agent 'InstrumentMe' example\n+set PATH_TO_AGENT_TARGET_DIR=%cd%\\agent\\target\n+set PATH_TO_AGENT_JAR=\"%PATH_TO_AGENT_TARGET_DIR%\"\\org.openjdk.jmc.agent-1.0.0-SNAPSHOT.jar\n+call java --add-opens java.base\/jdk.internal.misc=ALL-UNNAMED -XX:+FlightRecorder -javaagent:\"%PATH_TO_AGENT_JAR%\"=\"%PATH_TO_AGENT_TARGET_DIR%\"\/test-classes\/org\/openjdk\/jmc\/agent\/test\/jfrprobes_template.xml -cp \"%PATH_TO_AGENT_JAR%\"=\"%PATH_TO_AGENT_TARGET_DIR%\"\/test-classes\/ org.openjdk.jmc.agent.test.InstrumentMe\n+exit \/B 0\n+\n+:runAgentConverterExample\n+echo %time% run Agent 'InstrumentMeConverter' example\n+set PATH_TO_AGENT_TARGET_DIR=%cd%\\agent\\target\n+set PATH_TO_AGENT_JAR=\"%PATH_TO_AGENT_TARGET_DIR%\"\\org.openjdk.jmc.agent-1.0.0-SNAPSHOT.jar\n+call java --add-opens java.base\/jdk.internal.misc=ALL-UNNAMED -XX:+FlightRecorder -javaagent:\"%PATH_TO_AGENT_JAR%\"=\"%PATH_TO_AGENT_TARGET_DIR%\"\/test-classes\/org\/openjdk\/jmc\/agent\/test\/jfrprobes_template.xml -cp \"%PATH_TO_AGENT_JAR%\"=\"%PATH_TO_AGENT_TARGET_DIR%\"\/test-classes\/ org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\n+exit \/B 0\n+\n@@ -124,0 +172,3 @@\n+cd agent\n+call mvn clean\n+cd ..\n","filename":"build.bat","additions":53,"deletions":2,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -10,0 +10,1 @@\n+JMC_DIR=\"\"\n@@ -23,0 +24,17 @@\n+function installCore() {\n+    local timestamp=\"$1\"\n+    local installLog=\"${BASEDIR}\/build_${timestamp}.3.install.log\"\n+    pushd core 1> \/dev\/null || {\n+        err_log \"directory core not found\"\n+        exit 1\n+    }\n+\n+    echo \"$(date +%T) installing core artifacts - logging output to ${installLog}\"\n+    mvn clean install --log-file \"${installLog}\"\n+\n+    popd 1> \/dev\/null || {\n+        err_log \"could not go to project root directory\"\n+        exit 1\n+    }\n+}\n+\n@@ -24,1 +42,1 @@\n-    local timestamp=\"$(date +%Y%m%d%H%M%S)\"\n+    local timestamp=$1\n@@ -27,1 +45,1 @@\n-    local installLog=\"${BASEDIR}\/build_${timestamp}.3.install.log\"\n+    \n@@ -47,12 +65,0 @@\n-    popd 1> \/dev\/null || {\n-        err_log \"could not go to project root directory\"\n-        exit 1\n-    }\n-    pushd core 1> \/dev\/null || {\n-        err_log \"directory core not found\"\n-        exit 1\n-    }\n-\n-    echo \"$(date +%T) installing core artifacts - logging output to ${installLog}\"\n-    mvn clean install --log-file \"${installLog}\"\n-\n@@ -77,0 +83,1 @@\n+        printf \" \\t%s\\t%s\\n\" \"--installCore\" \"install JMC core\"\n@@ -78,0 +85,1 @@\n+        printf \" \\t%s\\t%s\\n\" \"--packageAgent\" \"to package Agent\"\n@@ -80,0 +88,2 @@\n+        printf \" \\t%s\\t%s\\n\" \"--runAgentExample\" \"to run Agent 'InstrumentMe' example, once it was packaged\"\n+        printf \" \\t%s\\t%s\\n\" \"--runAgentConverterExample\" \"to run Agent 'InstrumentMeConverter' example, once it was packaged\"\n@@ -90,1 +100,3 @@\n-    echo \"$(date +%T) running tests\"\n+    local timestamp=$1\n+    startJetty $timestamp\n+    echo \"$${timestamp} running tests\"\n@@ -95,1 +107,3 @@\n-    startJetty\n+    local timestamp=$1\n+    startJetty $timestamp\n+    installCore $timestamp\n@@ -101,2 +115,4 @@\n-    startJetty\n-    local packageLog=\"${BASEDIR}\/build_$(date +%Y%m%d%H%M%S).4.package.log\"\n+    local timestamp=$1    \n+    startJetty $timestamp\n+    installCore $timestamp\n+    local packageLog=\"${BASEDIR}\/build_${timestamp}.4.package.log\"\n@@ -116,0 +132,26 @@\n+function packageAgent() {\n+    local timestamp=$1\n+    local packageLog=\"${BASEDIR}\/build_${timestamp}.5.package.log\"\n+\n+    pushd agent 1> \/dev\/null || {\n+        err_log \"directory agent not found\"\n+        exit 1\n+    }\n+    \n+    echo \"$(date +%T) packaging jmc agent - logging output to ${packageLog}\"\n+    mvn package --log-file \"${packageLog}\"\n+\n+    popd 1> \/dev\/null || {\n+        err_log \"could not go to project root directory\"\n+        exit 1\n+    }\n+\n+    if [[ \"${OSTYPE}\" =~ \"linux\"* ]] || [[ \"${OSTYPE}\" =~ \"darwin\"* ]]; then\n+       printf \"%s\\n\" \"Agent library build complete. You can now run an example with the agent using \\\"${PROGNAME} --runAgentExample or --runAgentConverterExample\\\"\"\n+       printf \"%s\\n\" \"See agent\/README.md for more information\"\n+    else\n+        err_log \"unknown OS type: \\\"${OSTYPE}\\\". Please coheck package in \\\"${JMC_DIR}\/agent\/target\\\"\"\n+        exit 1\n+    fi\n+}\n+\n@@ -130,0 +172,10 @@\n+    pushd agent 1> \/dev\/null || {\n+        err_log \"directory agent not found\"\n+        exit 1\n+    }\n+    mvn clean\n+    popd 1> \/dev\/null || {\n+        err_log \"could not go to project root directory\"\n+        exit 1\n+    }\n+\n@@ -160,0 +212,41 @@\n+function runAgentByClass() {\n+    local agentExampleClass=$1\n+    if [[ -z \"${agentExampleClass}\" ]]; then\n+        err_log \"error: try to run undefiend agent class, empty class\"\n+        printHelp\n+        exit 1\n+    else\n+        printf \"example agent class: %s\\n\" \"${agentExampleClass}\"\n+    fi\n+\n+    checkJava\n+    if [[ \"${OSTYPE}\" =~ \"linux\"* ]] || [[ \"${OSTYPE}\" =~ \"darwin\"* ]]; then\n+       printf \"%s\\n\" \"try to execute an agent example\"\n+    else\n+        err_log \"unknown OS type: \\\"${OSTYPE}\\\". Please coheck package ${JMC_DIR}\/agent README.MD\"\n+        exit 1\n+    fi\n+\n+\n+    local javaVersion=`java -version 2>&1 | head -1 | cut -d '\"' -f 2 | sed 's\/^1\\.\/\/' | cut -d '.' -f 1`\n+    printf \"Java Version:%d\\n\" \"${javaVersion}\"\n+    local pathToAgentTargetDir=\"${JMC_DIR}\/agent\/target\"\n+    local pathToAgentJar=\"${pathToAgentTargetDir}\/org.openjdk.jmc.agent-1.0.0-SNAPSHOT.jar\"\n+    printf \"Agent path:%s\\n\" \"${pathToAgentJar}\"\n+    if [ -f \"${pathToAgentJar}\" ]; then\n+        if [ \"$javaVersion\" -lt \"8\" ]; then\n+            echo \"min. required java version is 8\"\n+            exit 1\n+        elif [ \"$javaVersion\" -eq \"8\" ]; then\n+            java -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -javaagent:${pathToAgentJar}=${pathToAgentTargetDir}\/test-classes\/org\/openjdk\/jmc\/agent\/test\/jfrprobes_template.xml -cp ${pathToAgentJar}:${pathToAgentTargetDir}\/test-classes\/ ${agentExampleClass}\n+        elif [ \"$javaVersion\" -lt \"13\" ]; then \n+            java --add-opens java.base\/jdk.internal.misc=ALL-UNNAMED -XX:+FlightRecorder -javaagent:${pathToAgentJar}=${pathToAgentTargetDir}\/test-classes\/org\/openjdk\/jmc\/agent\/test\/jfrprobes_template.xml -cp ${pathToAgentJar}:${pathToAgentTargetDir}\/test-classes\/ ${agentExampleClass}\n+        else \n+            java --add-opens java.base\/jdk.internal.misc=ALL-UNNAMED -javaagent:${pathToAgentJar}=${pathToAgentTargetDir}\/test-classes\/org\/openjdk\/jmc\/agent\/test\/jfrprobes_template.xml -cp ${pathToAgentJar}:${pathToAgentTargetDir}\/test-classes\/ ${agentExampleClass}\n+        fi\n+    else\n+        err_log \"Agent not found in \\\"${pathToAgentJar}\\\". Did you call --packageAgent before?\"\n+        exit 1\n+    fi\n+}\n+\n@@ -161,0 +254,1 @@\n+    local timestamp=\"$(date +%Y%m%d%H%M%S)\"\n@@ -168,1 +262,1 @@\n-                runTests\n+                runTests $timestamp\n@@ -171,1 +265,4 @@\n-                runUiTests\n+                runUiTests $timestamp\n+                ;;\n+            --installCore)\n+                installCore $timestamp\n@@ -174,1 +271,4 @@\n-                packageJmc\n+                packageJmc $timestamp\n+                ;;\n+            --packageAgent)\n+                packageAgent $timestamp\n@@ -182,0 +282,6 @@\n+            --runAgentExample)\n+                runAgentByClass \"org.openjdk.jmc.agent.test.InstrumentMe\"\n+                ;;\n+            --runAgentConverterExample)\n+                runAgentByClass \"org.openjdk.jmc.agent.converters.test.InstrumentMeConverter\"\n+                ;;\n@@ -183,1 +289,1 @@\n-                err_log \"unknown argument \\\"$1\\\"\"\n+                err_log \"unknown arguments: $@\"\n@@ -192,4 +298,3 @@\n-function checkPreconditions() {\n-    if ! command -v   mvn &> \/dev\/null ; then\n-        err_log \"It seems you do not have maven installed. Please ensure you have it installed and executable as \\\"mvn\\\".\"\n-        exit 1\n+function checkJava() {\n+    if [[ -z \"$JAVA_HOME\" ]]; then \n+        echo \"JAVA_HOME is not defined\"\n@@ -198,1 +303,1 @@\n-    if ! command -v   java &> \/dev\/null ; then\n+    if ! command -v java &> \/dev\/null ; then\n@@ -202,0 +307,9 @@\n+}\n+\n+function checkPreconditions() {\n+    checkJava\n+\n+    if ! command -v mvn &> \/dev\/null ; then\n+        err_log \"It seems you do not have maven installed. Please ensure you have it installed and executable as \\\"mvn\\\".\"\n+        exit 1\n+    fi\n@@ -204,0 +318,1 @@\n+    JMC_DIR=$(pwd)\n@@ -208,1 +323,1 @@\n-parseArgs \"$@\"\n+parseArgs \"$@\"\n\\ No newline at end of file\n","filename":"build.sh","additions":143,"deletions":28,"binary":false,"changes":171,"status":"modified"}]}