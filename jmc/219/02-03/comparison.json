{"files":[{"patch":"@@ -56,1 +56,1 @@\n-import org.openjdk.jmc.flightrecorder.parser.synthetic.JdkTypeIDsPreJdk11;\n+import org.openjdk.jmc.flightrecorder.parser.synthetic.OracleJdkTypeIDsPre11;\n@@ -100,1 +100,1 @@\n-\t\t\t\tString typeId = JdkTypeIDsPreJdk11.translate(id);\n+\t\t\t\tString typeId = OracleJdkTypeIDsPre11.translate(id);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v0\/EventParserManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-public final class JdkTypeIDsPreJdk11 {\n+public final class OracleJdkTypeIDsPre11 {\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/parser\/synthetic\/OracleJdkTypeIDsPre11.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/parser\/synthetic\/JdkTypeIDsPreJdk11.java","status":"renamed"},{"patch":"@@ -129,18 +129,18 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.THREAD_PARK, \"klass\", \"parkedClass\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.MONITOR_ENTER, \"klass\", JdkAttributes.MONITOR_CLASS.getIdentifier());\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.MONITOR_WAIT, \"klass\", JdkAttributes.MONITOR_CLASS.getIdentifier());\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.INT_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.INT_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.UINT_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.UINT_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.LONG_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.LONG_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.ULONG_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.ULONG_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.DOUBLE_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.DOUBLE_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.BOOLEAN_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.BOOLEAN_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.STRING_FLAG_CHANGED, \"old_value\", \"oldValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.STRING_FLAG_CHANGED, \"new_value\", \"newValue\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.GC_DETAILED_EVACUATION_INFO, \"allocRegionsUsedBefore\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.THREAD_PARK, \"klass\", \"parkedClass\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.MONITOR_ENTER, \"klass\", JdkAttributes.MONITOR_CLASS.getIdentifier());\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.MONITOR_WAIT, \"klass\", JdkAttributes.MONITOR_CLASS.getIdentifier());\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.INT_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.INT_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.UINT_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.UINT_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.LONG_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.LONG_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.ULONG_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.ULONG_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.DOUBLE_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.DOUBLE_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.BOOLEAN_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.BOOLEAN_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.STRING_FLAG_CHANGED, \"old_value\", \"oldValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.STRING_FLAG_CHANGED, \"new_value\", \"newValue\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.GC_DETAILED_EVACUATION_INFO, \"allocRegionsUsedBefore\",\n@@ -148,1 +148,1 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.GC_DETAILED_EVACUATION_INFO, \"allocRegionsUsedAfter\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.GC_DETAILED_EVACUATION_INFO, \"allocRegionsUsedAfter\",\n@@ -150,2 +150,2 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.SWEEP_CODE_CACHE, \"sweepIndex\", \"sweepId\");\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.ALLOC_INSIDE_TLAB, \"class\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.SWEEP_CODE_CACHE, \"sweepIndex\", \"sweepId\");\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.ALLOC_INSIDE_TLAB, \"class\",\n@@ -153,1 +153,1 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.ALLOC_OUTSIDE_TLAB, \"class\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.ALLOC_OUTSIDE_TLAB, \"class\",\n@@ -155,2 +155,2 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.OBJECT_COUNT, \"class\", JdkAttributes.OBJECT_CLASS.getIdentifier());\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.COMPILER_PHASE, \"compileID\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.OBJECT_COUNT, \"class\", JdkAttributes.OBJECT_CLASS.getIdentifier());\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.COMPILER_PHASE, \"compileID\",\n@@ -158,1 +158,1 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.COMPILATION, \"compileID\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.COMPILATION, \"compileID\",\n@@ -160,1 +160,1 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.COMPILER_FAILURE, \"compileID\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.COMPILER_FAILURE, \"compileID\",\n@@ -162,1 +162,1 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.COMPILER_FAILURE, \"failure\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.COMPILER_FAILURE, \"failure\",\n@@ -164,1 +164,1 @@\n-\t\taddRenameEntry(map, JdkTypeIDsPreJdk11.GC_DETAILED_OBJECT_COUNT_AFTER_GC, \"class\",\n+\t\taddRenameEntry(map, OracleJdkTypeIDsPre11.GC_DETAILED_OBJECT_COUNT_AFTER_GC, \"class\",\n@@ -217,1 +217,1 @@\n-\t\t\ttype = new LabeledIdentifier(JdkTypeIDsPreJdk11.translate(type.getInterfaceId()),\n+\t\t\ttype = new LabeledIdentifier(OracleJdkTypeIDsPre11.translate(type.getInterfaceId()),\n@@ -281,2 +281,2 @@\n-\t\t\t\tif (JdkTypeIDsPreJdk11.RECORDING_SETTING.equals(identifier)\n-\t\t\t\t\t\t|| JdkTypeIDsPreJdk11.JDK9_RECORDING_SETTING.equals(identifier)) {\n+\t\t\t\tif (OracleJdkTypeIDsPre11.RECORDING_SETTING.equals(identifier)\n+\t\t\t\t\t\t|| OracleJdkTypeIDsPre11.JDK9_RECORDING_SETTING.equals(identifier)) {\n@@ -285,2 +285,2 @@\n-\t\t\t\t\tif ((JdkTypeIDsPreJdk11.RECORDING_SETTING.equals(identifier) && st.isValid())\n-\t\t\t\t\t\t\t|| (JdkTypeIDsPreJdk11.JDK9_RECORDING_SETTING.equals(identifier) && st.isValidV1())) {\n+\t\t\t\t\tif ((OracleJdkTypeIDsPre11.RECORDING_SETTING.equals(identifier) && st.isValid())\n+\t\t\t\t\t\t\t|| (OracleJdkTypeIDsPre11.JDK9_RECORDING_SETTING.equals(identifier) && st.isValidV1())) {\n@@ -293,1 +293,1 @@\n-\t\t\t\t} else if (JdkTypeIDsPreJdk11.RECORDINGS.equals(identifier)) {\n+\t\t\t\t} else if (OracleJdkTypeIDsPre11.RECORDINGS.equals(identifier)) {\n@@ -311,1 +311,1 @@\n-\t\t\t\t} else if (JdkTypeIDsPreJdk11.CODE_CACHE_STATISTICS.equals(identifier)) {\n+\t\t\t\t} else if (OracleJdkTypeIDsPre11.CODE_CACHE_STATISTICS.equals(identifier)) {\n@@ -314,2 +314,3 @@\n-\t\t\t\t\t\t\treturn new FixCodeCacheSink(i, subFactory.create(JdkTypeIDsPreJdk11.translate(identifier),\n-\t\t\t\t\t\t\t\t\tlabel, category, description, dataStructure));\n+\t\t\t\t\t\t\treturn new FixCodeCacheSink(i,\n+\t\t\t\t\t\t\t\t\tsubFactory.create(OracleJdkTypeIDsPre11.translate(identifier), label, category,\n+\t\t\t\t\t\t\t\t\t\t\tdescription, dataStructure));\n@@ -319,1 +320,1 @@\n-\t\t\t\treturn subFactory.create(JdkTypeIDsPreJdk11.translate(identifier), label, category, description,\n+\t\t\t\treturn subFactory.create(OracleJdkTypeIDsPre11.translate(identifier), label, category, description,\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/parser\/synthetic\/SettingsTransformer.java","additions":39,"deletions":38,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -186,2 +186,2 @@\n-\t\t\t\t&& (JdkTypeIDsPreJdk11.RECORDING_SETTING.equals(eventTypeId)\n-\t\t\t\t\t\t|| JdkTypeIDsPreJdk11.JDK9_RECORDING_SETTING.equals(eventTypeId)\n+\t\t\t\t&& (OracleJdkTypeIDsPre11.RECORDING_SETTING.equals(eventTypeId)\n+\t\t\t\t\t\t|| OracleJdkTypeIDsPre11.JDK9_RECORDING_SETTING.equals(eventTypeId)\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/parser\/synthetic\/SyntheticAttributeExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}