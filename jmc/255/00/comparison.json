{"files":[{"patch":"@@ -331,1 +331,1 @@\n-to use when launching, add -vm and the path to a directory where a JDK java launcher is located, for example -vm $JAVA_HOME\/bin.\n+to use when launching, add `-vm` and the path to a directory where a JDK java launcher is located, for example `-vm $JAVA_HOME\/bin`.\n","filename":"README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.util.Iterator;\n@@ -76,1 +75,1 @@\n-\t\tpopulateAttributeMaps(isSuitableForLineCharts(items, allTypes));\n+\t\tpopulateAttributeMaps();\n@@ -94,1 +93,1 @@\n-\tprivate void populateAttributeMaps(boolean allowLineCharts) {\n+\tprivate void populateAttributeMaps() {\n@@ -105,3 +104,1 @@\n-\t\t\t\t\tif (allowLineCharts) {\n-\t\t\t\t\t\tlineChartableAttributes.put(a.getKey(), qa);\n-\t\t\t\t\t}\n+\t\t\t\t\tlineChartableAttributes.put(a.getKey(), qa);\n@@ -115,0 +112,1 @@\n+\t\t\t\t\tlineChartableAttributes.put(a.getKey(), qa);\n@@ -120,12 +118,0 @@\n-\tprivate static boolean isSuitableForLineCharts(IItemCollection items, Map<String, IType<?>> types) {\n-\t\t\/\/ NOTE: JMC-4520 - Only allowing line charts for one event type, which only has one event array. \n-\t\tif (types.values().size() == 1) {\n-\t\t\tIterator<IItemIterable> iterator = items.iterator();\n-\t\t\tif (iterator.hasNext()) {\n-\t\t\t\titerator.next();\n-\t\t\t\treturn !iterator.hasNext();\n-\t\t\t}\n-\t\t}\n-\t\treturn false;\n-\t}\n-\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/itemhandler\/AttributeComponentConfiguration.java","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+import java.util.SortedMap;\n+import java.util.TreeMap;\n@@ -92,2 +94,1 @@\n-\t\tList<IQuantity> xValues = new ArrayList<>(100);\n-\t\tList<IQuantity> yValues = new ArrayList<>(100);\n+\t\tSortedMap<IQuantity, IQuantity> sortedMap = new TreeMap<>();\n@@ -96,2 +97,1 @@\n-\t\t\txValues.add(xValueAccessor.getMember(item));\n-\t\t\tyValues.add(yValueAccessor.getMember(item));\n+\t\t\tsortedMap.put(xValueAccessor.getMember(item), yValueAccessor.getMember(item));\n@@ -99,0 +99,2 @@\n+\t\tList<IQuantity> xValues = new ArrayList<>(sortedMap.keySet());\n+\t\tList<IQuantity> yValues = new ArrayList<>(sortedMap.values());\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/charts\/QuantitySeries.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    \n+\n@@ -115,1 +115,1 @@\n-    local timestamp=$1    \n+    local timestamp=$1\n@@ -140,1 +140,1 @@\n-    \n+\n@@ -237,1 +237,1 @@\n-           \n+\n@@ -242,1 +242,1 @@\n-    if [ -f \"${pathToAgentJar}\" ]; then        \n+    if [ -f \"${pathToAgentJar}\" ]; then\n@@ -248,1 +248,1 @@\n-        elif [ \"$javaVersion\" -lt \"13\" ]; then \n+        elif [ \"$javaVersion\" -lt \"13\" ]; then\n@@ -250,1 +250,1 @@\n-        else \n+        else\n@@ -305,1 +305,1 @@\n-    if [[ -z \"$JAVA_HOME\" ]]; then \n+    if [[ -z \"$JAVA_HOME\" ]]; then\n@@ -329,1 +329,1 @@\n-parseArgs \"$@\"\n\\ No newline at end of file\n+parseArgs \"$@\"\n","filename":"build.sh","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-\t<classpathentry kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/java\"\/>\n+\t<classpathentry kind=\"src\" output=\"target\/classes\" path=\"src\/test\/java\"\/>\n","filename":"core\/tests\/org.openjdk.jmc.common.test\/.classpath","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n-\t<classpathentry kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/java\"\/>\n-\t<classpathentry kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/resources\"\/>\n+\t<classpathentry kind=\"src\" output=\"target\/classes\" path=\"src\/test\/java\"\/>\n+\t<classpathentry kind=\"src\" output=\"target\/classes\" path=\"src\/test\/resources\"\/>\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.jdk.test\/.classpath","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-\t<classpathentry kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/java\"\/>\n+\t<classpathentry kind=\"src\" output=\"target\/classes\" path=\"src\/test\/java\"\/>\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.rules.test\/.classpath","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n-\t<classpathentry kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/java\"\/>\n-\t<classpathentry kind=\"src\" output=\"target\/test-classes\" path=\"src\/test\/resources\"\/>\n+\t<classpathentry kind=\"src\" output=\"target\/classes\" path=\"src\/test\/java\"\/>\n+\t<classpathentry kind=\"src\" output=\"target\/classes\" path=\"src\/test\/resources\"\/>\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.test\/.classpath","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-If you haven't already, you should now first build JMC using the instructions in the [README.md](..\/..\/README.md). \n+If you haven't already, you should now first build JMC using the instructions in the [README.md](..\/..\/README.md).\n@@ -84,1 +84,1 @@\n-For dynamic working sets, see http:\/\/hirt.se\/blog\/?p=1149.\n\\ No newline at end of file\n+For dynamic working sets, see http:\/\/hirt.se\/blog\/?p=1149.\n","filename":"docs\/devguide\/README.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}