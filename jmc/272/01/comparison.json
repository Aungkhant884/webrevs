{"files":[{"patch":"@@ -287,1 +287,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tlogger.log(Level.SEVERE, \"\", e);\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/impl\/DefaultTransformRegistry.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tAgent.getLogger().log(Level.SEVERE, \"\", e);\n@@ -98,1 +98,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tAgent.getLogger().log(Level.SEVERE, \"\", e);\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/jfrlegacy\/impl\/JFRUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.util.logging.Logger;\n@@ -54,0 +55,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.alert\"); \/\/$NON-NLS-1$\n@@ -85,1 +87,1 @@\n-\t\t\tSystem.out.println(data);\n+\t\t\tLOGGER.info(data);\n","filename":"application\/org.openjdk.jmc.alert\/src\/main\/java\/org\/openjdk\/jmc\/alert\/TriggerActionThreadStackDump.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+import java.util.logging.Logger;\n@@ -64,0 +65,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.browser.attach\"); \/\/$NON-NLS-1$\n@@ -159,1 +161,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.browser.attach\/src\/main\/java\/org\/openjdk\/jmc\/browser\/attach\/LocalConnectionDescriptor.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -51,0 +53,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.commands\"); \/\/$NON-NLS-1$\n@@ -87,1 +90,1 @@\n-\t\t\t\t\tSystem.err.println(e.getMessage());\n+\t\t\t\t\tLOGGER.severe(e.getMessage());\n@@ -122,1 +125,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.commands\/src\/main\/java\/org\/openjdk\/jmc\/commands\/CommandFactory.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,1 +155,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.console.twitter\/src\/main\/java\/org\/openjdk\/jmc\/console\/twitter\/TwitterPlugin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -156,1 +158,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tMBeanBrowserPlugin.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.console.ui.mbeanbrowser\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/mbeanbrowser\/tree\/MBeanTreeSectionPart.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -76,0 +78,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.console.ui.notification.widget\"); \/\/$NON-NLS-1$\n@@ -176,1 +179,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.console.ui.notification\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/notification\/widget\/ActionChooser.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -71,0 +73,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.console.ui.notification.widget\"); \/\/$NON-NLS-1$\n+\n@@ -144,1 +148,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.console.ui.notification\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/notification\/widget\/ConstraintChooser.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -67,0 +69,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.console.ui.subscriptions\"); \/\/$NON-NLS-1$\n@@ -216,1 +219,1 @@\n-\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.console.ui.subscriptions\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/subscriptions\/SubscriptionsSectionPart.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+import java.util.logging.Logger;\n@@ -322,2 +323,3 @@\n-\t\t\t\t\t\/\/ FIXME: Get a logger when this is in a better bundle.\n-\t\t\t\t\tSystem.out.println(r.getObject() + \": \" + r.getText()); \/\/$NON-NLS-1$\n+\t\t\t\t\tLogger logger = Logger\n+\t\t\t\t\t\t\t.getLogger(\"org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration.model.xml\"); \/\/$NON-NLS-1$\n+\t\t\t\t\tlogger.severe(r.getObject() + \": \" + r.getText()); \/\/$NON-NLS-1$\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLModel.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -70,0 +72,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.controlpanel.ui.actions\"); \/\/$NON-NLS-1$\n+\n@@ -109,1 +113,1 @@\n-\t\t\tt.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", t);\n@@ -221,1 +225,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n@@ -223,1 +227,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n@@ -225,1 +229,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/actions\/PrintRecordingDescriptorAction.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tControlPanel.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n@@ -116,1 +116,1 @@\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tControlPanel.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/ConfigurationRepositoryFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -240,1 +240,1 @@\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tControlPanel.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n@@ -242,1 +242,1 @@\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tControlPanel.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n@@ -246,1 +246,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tControlPanel.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/RecordingWizardModel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -383,1 +383,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/JfrEditor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -166,0 +168,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.ui.common\"); \/\/$NON-NLS-1$\n@@ -1103,2 +1106,1 @@\n-\t\t\t\t\t\t\/\/ FIXME: Add proper logging\n-\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/common\/DataPageToolkit.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -72,0 +74,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.ui.pages.itemhandler\"); \/\/$NON-NLS-1$\n@@ -162,1 +165,1 @@\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n@@ -179,1 +182,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/itemhandler\/HistogramSequence.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -211,1 +211,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/preferences\/RulesPage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.util.logging.Logger;\n@@ -52,0 +53,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.descriptors\"); \/\/$NON-NLS-1$\n@@ -442,1 +444,1 @@\n-\t\t\t\t\tSystem.err.println(\"CollectionDescriptors: Class \" + classNames[i] + \" not found\");\n+\t\t\t\t\tLOGGER.severe(\"CollectionDescriptors: Class \" + classNames[i] + \" not found\");\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/descriptors\/CollectionDescriptors.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import java.util.logging.Logger;\n+\n@@ -47,0 +49,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.descriptors\"); \/\/$NON-NLS-1$\n@@ -229,1 +232,1 @@\n-\t\t\t\t\t\tSystem.err.println(\"Unexpected nodeKeyField: \" + nodeKeyField.getClass().getName());\n+\t\t\t\t\t\tLOGGER.severe(\"Unexpected nodeKeyField: \" + nodeKeyField.getClass().getName());\n@@ -242,1 +245,1 @@\n-\t\t\t\t\t\tSystem.err.println(\"Unexpected nodeValField: \" + nodeValField.getClass().getName());\n+\t\t\t\t\t\tLOGGER.severe(\"Unexpected nodeValField: \" + nodeValField.getClass().getName());\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/descriptors\/ConcurrentHashMapDescriptorForJdk8.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import java.util.logging.Logger;\n@@ -60,0 +61,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.heap.parser\"); \/\/$NON-NLS-1$\n@@ -117,1 +119,1 @@\n-\t\tSystem.err.println(\"\\nDisk cache size set to \" + (memForCache >> 20) + \"MB\");\n+\t\tLOGGER.fine(\"\\nDisk cache size set to \" + (memForCache >> 20) + \"MB\");\n@@ -121,1 +123,1 @@\n-\t\t\tSystem.err.println(\"CRB: numPagesInPool = \" + numPgsInPool);\n+\t\t\tLOGGER.fine(\"CRB: numPagesInPool = \" + numPgsInPool);\n@@ -127,3 +129,3 @@\n-\t\t\t\t\t\tSystem.err.println(\"CRB: swps = \" + numPageSwaps + \", swps\/pg = \"\n-\t\t\t\t\t\t\t\t+ (numPageSwaps \/ numPagesInPool) + \", relpos = \" + (lastReadPos * 100 \/ fileSize) + \"%\"\n-\t\t\t\t\t\t\t\t+ \", reads\/swps = \" + (numReads \/ numPageSwaps) + \", numChanges = \" + numChanges);\n+\t\t\t\t\t\tLOGGER.fine(\"CRB: swps = \" + numPageSwaps + \", swps\/pg = \" + (numPageSwaps \/ numPagesInPool)\n+\t\t\t\t\t\t\t\t+ \", relpos = \" + (lastReadPos * 100 \/ fileSize) + \"%\" + \", reads\/swps = \"\n+\t\t\t\t\t\t\t\t+ (numReads \/ numPageSwaps) + \", numChanges = \" + numChanges);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/heap\/parser\/CachedReadBuffer.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -42,0 +44,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.heap.parser\"); \/\/$NON-NLS-1$\n+\n@@ -99,1 +103,1 @@\n-\t\t\tSystem.err.println(\"Failed to close file \" + file + \": \" + ex);\n+\t\t\tLOGGER.severe(\"Failed to close file \" + file + \": \" + ex);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/heap\/parser\/FileReadBuffer.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -251,1 +251,0 @@\n-\/\/\t\t\tSystem.out.println(\"Empty collection, impl size = \" + implSize);\n@@ -276,2 +275,0 @@\n-\/\/\t\t\t\tSystem.out.println(\n-\/\/\t\t\t\t\t\tproblemKind + \" collection, nEls = \" + nEls + \", capacity = \" + capacity + \", ovhd = \" + ovhd);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/DetailedStatsCalculator.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.logging.Logger;\n@@ -49,0 +50,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.stats\"); \/\/$NON-NLS-1$\n@@ -139,2 +141,2 @@\n-\t\t\tSystem.out.println(\"\\rDebug info:\");\n-\t\t\tSystem.out.println(\"Objects unreachable from GC roots: \" + (currentProcessedObjNo - nObjsBefore));\n+\t\t\tLOGGER.info(\"\\rDebug info:\");\n+\t\t\tLOGGER.info(\"Objects unreachable from GC roots: \" + (currentProcessedObjNo - nObjsBefore));\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/HeapScaner.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.logging.Logger;\n@@ -489,2 +490,4 @@\n-\t\tSystem.out.print(curRootRefChainElement.getRoot().getTypeName());\n-\t\tSystem.out.print(\"  \");\n+\t\tLogger logger = Logger.getLogger(\"org.openjdk.jmc.joverflow.stats\"); \/\/$NON-NLS-1$\n+\t\tStringBuilder sb = new StringBuilder();\n+\t\tsb.append(curRootRefChainElement.getRoot().getTypeName());\n+\t\tsb.append(\"  \");\n@@ -496,1 +499,1 @@\n-\t\t\tSystem.out.print(\"-->\" + getFullLinkDesc(javaHeapObj, idx));\n+\t\t\tsb.append(\"-->\" + getFullLinkDesc(javaHeapObj, idx));\n@@ -498,1 +501,1 @@\n-\t\tSystem.out.println();\n+\t\tlogger.fine(sb.toString());\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/InterimRefChainStack.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.util.logging.Logger;\n@@ -53,0 +54,2 @@\n+\tprivate static final Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.stats\"); \/\/$NON-NLS-1$\n+\n@@ -109,1 +112,1 @@\n-\t\tSystem.out.println(\"\\nLONG-LIVED FIELDS:\");\n+\t\tLOGGER.info(\"\\nLONG-LIVED FIELDS:\");\n@@ -111,1 +114,1 @@\n-\t\t\tSystem.out.println(longLivedField);\n+\t\t\tLOGGER.info(longLivedField);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/LongLivedStringClustersCalculator.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.logging.Logger;\n@@ -54,0 +55,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.joverflow.util\"); \/\/$NON-NLS-1$\n@@ -161,3 +163,3 @@\n-\t\tSystem.out.println(\"Table size: \" + table.length + \", null entries: \" + numNullEntries);\n-\t\tSystem.out.println(\"Num calls (may be off due to overflowing): \" + numCalls);\n-\t\tSystem.out.println(\"Num resets: \" + numResets);\n+\t\tLOGGER.info(\"Table size: \" + table.length + \", null entries: \" + numNullEntries);\n+\t\tLOGGER.info(\"Num calls (may be off due to overflowing): \" + numCalls);\n+\t\tLOGGER.info(\"Num resets: \" + numResets);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/util\/StringInterner.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -55,1 +57,2 @@\n-\n+\t\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.osgi.extension\"); \/\/$NON-NLS-1$\n@@ -93,1 +96,1 @@\n-\t\t\t\t\tSystem.err.println(t.getMessage());\n+\t\t\t\t\tLOGGER.severe(t.getMessage());\n@@ -121,1 +124,1 @@\n-\t\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n@@ -129,1 +132,1 @@\n-\t\t\tSystem.err.println(t.getMessage());\n+\t\t\tLOGGER.severe(t.getMessage());\n","filename":"application\/org.openjdk.jmc.osgi.extension\/src\/org\/openjdk\/jmc\/osgi\/extension\/ExtClassLoaderHook.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,0 +93,1 @@\n+\t\t\t\tgetLogger().log(Level.WARNING, \"\", e);\n@@ -102,0 +103,1 @@\n+\t\t\t\tgetLogger().log(Level.WARNING, \"\", e);\n@@ -117,0 +119,1 @@\n+\t\t\t\tgetLogger().log(Level.WARNING, \"\", e);\n","filename":"application\/org.openjdk.jmc.rcp.application\/src\/main\/java\/org\/openjdk\/jmc\/rcp\/logging\/LoggingToolkit.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -69,0 +71,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.rjmx.services.jfr.internal\"); \/\/$NON-NLS-1$\n+\n@@ -126,1 +130,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n@@ -148,2 +152,1 @@\n-\t\t\t\t\t\/\/ FIXME: Add proper logging here\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n@@ -193,2 +196,1 @@\n-\t\t\t\t\/\/ FIXME: Add proper logging here\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.rjmx.services.jfr\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/services\/jfr\/internal\/RecordingOptionsToolkitV1.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,0 @@\n-\t\t\te.printStackTrace();\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/subscription\/internal\/AbstractSyntheticNotification.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.logging.Logger;\n@@ -53,0 +54,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.rjmx.triggers.actions.internal\"); \/\/$NON-NLS-1$\n+\n@@ -62,2 +65,1 @@\n-\t\t\tSystem.out.println(\"Could not create the HotSpotDiagnostic MBean ObjectName!\"); \/\/$NON-NLS-1$\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"Could not create the HotSpotDiagnostic MBean ObjectName!\", e); \/\/$NON-NLS-1$\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/actions\/internal\/TriggerActionHPROF.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -51,0 +53,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.rjmx.triggers.extension.internal\"); \/\/$NON-NLS-1$\n+\n@@ -88,3 +92,1 @@\n-\t\t\t\/\/ FIXME: Better error handling\n-\t\t\tSystem.err.println(\"Extension point not valid.\"); \/\/$NON-NLS-1$\n-\t\t\tSystem.err.println(iroe.getMessage());\n+\t\t\tLOGGER.log(Level.SEVERE, \"Extension point not valid.\", iroe); \/\/$NON-NLS-1$\n@@ -107,1 +109,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/extension\/internal\/ExtensionLoader.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,3 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n@@ -54,0 +57,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.rjmx.triggers.extension.internal\"); \/\/$NON-NLS-1$\n+\n@@ -108,1 +113,1 @@\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/extension\/internal\/TriggerFactory.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.util.logging.Logger;\n@@ -50,0 +51,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.rjmx.triggers.fields.internal\"); \/\/$NON-NLS-1$\n+\n@@ -227,1 +230,1 @@\n-\t\t\tSystem.out.println('|' + object + '|');\n+\t\t\tLOGGER.severe('|' + object + '|');\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/fields\/internal\/Field.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,3 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n@@ -43,0 +46,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.ui.common.security\"); \/\/$NON-NLS-1$\n@@ -54,2 +58,2 @@\n-\t\t\tSystem.out.println(\"Could not create Security manager for className. Using default! Exception was:\"); \/\/$NON-NLS-1$\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"Could not create Security manager for className. Using default! Exception was:\", \/\/$NON-NLS-1$\n+\t\t\t\t\te);\n","filename":"application\/org.openjdk.jmc.ui.common\/src\/main\/java\/org\/openjdk\/jmc\/ui\/common\/security\/SecurityManagerFactory.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -58,0 +60,2 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.ui.charts\"); \/\/$NON-NLS-1$\n+\n@@ -355,1 +359,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/charts\/XYQuantities.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,3 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n@@ -115,0 +118,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.common.item\"); \/\/$NON-NLS-1$\n@@ -252,1 +256,1 @@\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/item\/PersistableItemFilter.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -60,0 +62,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.internal\"); \/\/$NON-NLS-1$\n@@ -83,1 +86,1 @@\n-\t\t\t\tSystem.err.println(\"Couldn't find file '\" + fileName + \"'\"); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n+\t\t\t\tLOGGER.severe(\"Couldn't find file '\" + fileName + \"'\"); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n@@ -86,2 +89,1 @@\n-\t\t\tSystem.err.println(\"Problem loading file '\" + fileName + \"'\"); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n-\t\t\te.printStackTrace();\n+\t\t\tLOGGER.log(Level.SEVERE, \"Problem loading file '\" + fileName + \"'\", e); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/EventAppearance.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import java.util.logging.Logger;\n@@ -60,0 +61,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.parser.synthetic\"); \/\/$NON-NLS-1$\n@@ -289,3 +291,1 @@\n-\t\t\t\t\t\t\/\/ FIXME: Avoid System.err.println\n-\t\t\t\t\t\tSystem.err\n-\t\t\t\t\t\t\t\t.println(\"Cannot create SettingsTransformer from fields: \" + dataStructure.toString()); \/\/$NON-NLS-1$\n+\t\t\t\t\t\tLOGGER.severe(\"Cannot create SettingsTransformer from fields: \" + dataStructure.toString()); \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/parser\/synthetic\/SettingsTransformer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -60,0 +62,1 @@\n+\tprivate final static Logger LOGGER = Logger.getLogger(\"org.openjdk.jmc.flightrecorder.util\"); \/\/$NON-NLS-1$\n@@ -119,1 +122,1 @@\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tLOGGER.log(Level.SEVERE, \"\", e);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/util\/ChunkReader.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}