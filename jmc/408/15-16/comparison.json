{"files":[{"patch":"@@ -48,1 +48,0 @@\n-application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/resources\/jslibs\/\n","filename":".gitignore","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -181,7 +181,0 @@\n-   <plugin\n-         id=\"org.openjdk.jmc.flightrecorder.flameview\"\n-         download-size=\"0\"\n-         install-size=\"0\"\n-         version=\"0.0.0\"\n-         unpack=\"false\"\/>\n-\n","filename":"application\/org.openjdk.jmc.feature.flightrecorder\/feature.xml","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-FLAME_VIEW_NAME=Flame Graph View\n+FLAME_GRAPH_VIEW_NAME=Flame Graph\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/plugin.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-\t\t\tname=\"%FLAME_VIEW_NAME\"\/>\n+\t\t\tname=\"%FLAME_GRAPH_VIEW_NAME\"\/>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/plugin.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-\t * Localized Flameview Message\n+\t * Localized Flamegraph Message\n@@ -55,1 +55,1 @@\n-\t *            flameview message\n+\t *            flamegraph message\n@@ -60,1 +60,1 @@\n-\tpublic static String getFlameviewMessage(String key, Object ... values) {\n+\tpublic static String getFlamegraphMessage(String key, Object ... values) {\n@@ -62,1 +62,1 @@\n-\t\t\treturn getFlameviewMessage(key);\n+\t\t\treturn getFlamegraphMessage(key);\n@@ -64,1 +64,1 @@\n-\t\t\treturn MessageFormat.format(getFlameviewMessage(key), values);\n+\t\t\treturn MessageFormat.format(getFlamegraphMessage(key), values);\n@@ -68,1 +68,1 @@\n-\tprivate static String getFlameviewMessage(String key) {\n+\tprivate static String getFlamegraphMessage(String key) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flamegraph\/MessagesUtils.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,21 +36,12 @@\n-import static java.util.Collections.reverseOrder;\n-import static java.util.Map.Entry.comparingByValue;\n-import static java.util.stream.Collectors.toMap;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_FLAME_GRAPH;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_ICICLE_GRAPH;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_JPEG_IMAGE;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PNG_IMAGE;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PRINT;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_RESET_ZOOM;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_AS;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_FLAME_GRAPH_AS;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_TOGGLE_MINIMAP;\n-import static org.openjdk.jmc.flightrecorder.flamegraph.MessagesUtils.getFlameviewMessage;\n-\n-import java.awt.image.BufferedImage;\n-import java.awt.image.RenderedImage;\n-import java.io.BufferedOutputStream;\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n+import io.github.bric3.fireplace.core.ui.Colors;\n+import io.github.bric3.fireplace.flamegraph.ColorMapper;\n+import io.github.bric3.fireplace.flamegraph.DimmingFrameColorProvider;\n+import io.github.bric3.fireplace.flamegraph.FlamegraphImage;\n+import io.github.bric3.fireplace.flamegraph.FlamegraphView;\n+import io.github.bric3.fireplace.flamegraph.FrameBox;\n+import io.github.bric3.fireplace.flamegraph.FrameFontProvider;\n+import io.github.bric3.fireplace.flamegraph.FrameModel;\n+import io.github.bric3.fireplace.flamegraph.FrameTextsProvider;\n+import io.github.bric3.fireplace.flamegraph.animation.ZoomAnimation;\n+import io.github.bric3.fireplace.swt_awt.EmbeddingComposite;\n+import io.github.bric3.fireplace.swt_awt.SWT_AWTBridge;\n@@ -58,0 +49,2 @@\n+import java.util.Collection;\n+import java.util.Collections;\n@@ -70,6 +63,0 @@\n-import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.function.Supplier;\n-import java.util.logging.Level;\n-import java.util.stream.Stream;\n-\n-import javax.imageio.ImageIO;\n@@ -78,1 +65,0 @@\n-\n@@ -81,0 +67,1 @@\n+import org.eclipse.jface.action.IToolBarManager;\n@@ -102,0 +89,1 @@\n+import org.openjdk.jmc.common.item.IAttribute;\n@@ -104,0 +92,2 @@\n+import org.openjdk.jmc.common.item.ItemFilters;\n+import org.openjdk.jmc.common.unit.IQuantity;\n@@ -105,0 +95,1 @@\n+import org.openjdk.jmc.common.util.Pair;\n@@ -110,0 +101,1 @@\n+import org.openjdk.jmc.flightrecorder.ui.common.AttributeSelection;\n@@ -116,12 +108,26 @@\n-import io.github.bric3.fireplace.core.ui.Colors;\n-import io.github.bric3.fireplace.flamegraph.ColorMapper;\n-import io.github.bric3.fireplace.flamegraph.DimmingFrameColorProvider;\n-import io.github.bric3.fireplace.flamegraph.FlamegraphImage;\n-import io.github.bric3.fireplace.flamegraph.FlamegraphView;\n-import io.github.bric3.fireplace.flamegraph.FrameBox;\n-import io.github.bric3.fireplace.flamegraph.FrameFontProvider;\n-import io.github.bric3.fireplace.flamegraph.FrameModel;\n-import io.github.bric3.fireplace.flamegraph.FrameTextsProvider;\n-import io.github.bric3.fireplace.flamegraph.animation.ZoomAnimation;\n-import io.github.bric3.fireplace.swt_awt.EmbeddingComposite;\n-import io.github.bric3.fireplace.swt_awt.SWT_AWTBridge;\n+import javax.imageio.ImageIO;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.RenderedImage;\n+import java.io.BufferedOutputStream;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.Supplier;\n+import java.util.logging.Level;\n+import java.util.stream.Stream;\n+\n+import static java.util.Collections.reverseOrder;\n+import static java.util.Map.Entry.comparingByValue;\n+import static java.util.stream.Collectors.toMap;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_FLAME_GRAPH;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_ICICLE_GRAPH;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_JPEG_IMAGE;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PNG_IMAGE;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_PRINT;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_RESET_ZOOM;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_AS;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_SAVE_FLAME_GRAPH_AS;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.Messages.FLAMEVIEW_TOGGLE_MINIMAP;\n+import static org.openjdk.jmc.flightrecorder.flamegraph.MessagesUtils.getFlamegraphMessage;\n@@ -132,1 +138,1 @@\n-\n+\tprivate static final String ATTRIBUTE_SELECTION_SEPARATOR_ID = \"AttrSelectionSep\"; \/\/$NON-NLS-1$\n@@ -136,1 +142,1 @@\n-\t\t\t\tprivate final ThreadGroup group = new ThreadGroup(\"FlameGraphModelCalculationGroup\"); \/\/$NON-NLS-1$\n+\t\t\t\tprivate final ThreadGroup group = new ThreadGroup(\"FlamegraphModelCalculationGroup\"); \/\/$NON-NLS-1$\n@@ -141,1 +147,1 @@\n-\t\t\t\t\tvar t = new Thread(group, r, \"FlamegraphJavaModelCalculation-\" + counter.getAndIncrement()); \/\/$NON-NLS-1$\n+\t\t\t\t\tvar t = new Thread(group, r, \"FlamegraphModelCalculation-\" + counter.getAndIncrement()); \/\/$NON-NLS-1$\n@@ -146,1 +152,0 @@\n-\tprivate FrameSeparator frameSeparator;\n@@ -148,1 +153,1 @@\n-\tprivate SashForm container;\n+\tprivate FrameSeparator frameSeparator;\n@@ -151,3 +156,0 @@\n-\n-\tprivate GroupByAction[] groupByActions;\n-\tprivate ViewModeAction[] groupByFlameviewActions;\n@@ -160,0 +162,3 @@\n+\tprivate IAttribute<IQuantity> currentAttribute;\n+\tprivate AttributeSelection attributeSelection;\n+\tprivate IToolBarManager toolBar;\n@@ -164,1 +169,1 @@\n-\t\tICICLE_GRAPH(getFlameviewMessage(FLAMEVIEW_ICICLE_GRAPH), IAction.AS_RADIO_BUTTON, flameviewImageDescriptor(\n+\t\tICICLE_GRAPH(getFlamegraphMessage(FLAMEVIEW_ICICLE_GRAPH), IAction.AS_RADIO_BUTTON, flamegraphImageDescriptor(\n@@ -166,1 +171,1 @@\n-\t\tFLAME_GRAPH(getFlameviewMessage(FLAMEVIEW_FLAME_GRAPH), IAction.AS_RADIO_BUTTON, flameviewImageDescriptor(\n+\t\tFLAME_GRAPH(getFlamegraphMessage(FLAMEVIEW_FLAME_GRAPH), IAction.AS_RADIO_BUTTON, flamegraphImageDescriptor(\n@@ -226,3 +231,3 @@\n-\t\t\tsuper(getFlameviewMessage(FLAMEVIEW_TOGGLE_MINIMAP), IAction.AS_CHECK_BOX);\n-\t\t\tsetToolTipText(getFlameviewMessage(FLAMEVIEW_TOGGLE_MINIMAP));\n-\t\t\tsetImageDescriptor(flameviewImageDescriptor(FlamegraphImages.ICON_MINIMAP));\n+\t\t\tsuper(getFlamegraphMessage(FLAMEVIEW_TOGGLE_MINIMAP), IAction.AS_CHECK_BOX);\n+\t\t\tsetToolTipText(getFlamegraphMessage(FLAMEVIEW_TOGGLE_MINIMAP));\n+\t\t\tsetImageDescriptor(flamegraphImageDescriptor(FlamegraphImages.ICON_MINIMAP));\n@@ -243,3 +248,3 @@\n-\t\t\tsuper(getFlameviewMessage(FLAMEVIEW_RESET_ZOOM), IAction.AS_PUSH_BUTTON);\n-\t\t\tsetToolTipText(getFlameviewMessage(FLAMEVIEW_RESET_ZOOM));\n-\t\t\tsetImageDescriptor(flameviewImageDescriptor(FlamegraphImages.ICON_RESET_ZOOM));\n+\t\t\tsuper(getFlamegraphMessage(FLAMEVIEW_RESET_ZOOM), IAction.AS_PUSH_BUTTON);\n+\t\t\tsetToolTipText(getFlamegraphMessage(FLAMEVIEW_RESET_ZOOM));\n+\t\t\tsetImageDescriptor(flamegraphImageDescriptor(FlamegraphImages.ICON_RESET_ZOOM));\n@@ -255,1 +260,1 @@\n-\t\tSAVE_AS(getFlameviewMessage(FLAMEVIEW_SAVE_AS), IAction.AS_PUSH_BUTTON, PlatformUI.getWorkbench()\n+\t\tSAVE_AS(getFlamegraphMessage(FLAMEVIEW_SAVE_AS), IAction.AS_PUSH_BUTTON, PlatformUI.getWorkbench()\n@@ -258,1 +263,1 @@\n-\t\tPRINT(getFlameviewMessage(FLAMEVIEW_PRINT), IAction.AS_PUSH_BUTTON, PlatformUI.getWorkbench().getSharedImages()\n+\t\tPRINT(getFlamegraphMessage(FLAMEVIEW_PRINT), IAction.AS_PUSH_BUTTON, PlatformUI.getWorkbench().getSharedImages()\n@@ -304,0 +309,1 @@\n+\t\tprivate final IAttribute<IQuantity> attribute;\n@@ -306,1 +312,1 @@\n-\t\tprivate ModelRebuildRunnable(FlamegraphSwingView view, IItemCollection items) {\n+\t\tprivate ModelRebuildRunnable(FlamegraphSwingView view, IItemCollection items, IAttribute<IQuantity> attribute) {\n@@ -309,0 +315,1 @@\n+\t\t\tthis.attribute = attribute;\n@@ -321,1 +328,6 @@\n-\t\t\tvar treeModel = new StacktraceTreeModel(items, view.frameSeparator, !view.threadRootAtTop);\n+\t\t\tvar filteredItems = items;\n+\t\t\tif (attribute != null) {\n+\t\t\t\tfilteredItems = filteredItems.apply(ItemFilters.hasAttribute(attribute));\n+\t\t\t}\n+\t\t\tvar treeModel = new StacktraceTreeModel(filteredItems, view.frameSeparator, !view.threadRootAtTop,\n+\t\t\t\t\tattribute);\n@@ -327,3 +339,1 @@\n-\t\t\tif (isInvalid) {\n-\t\t\t\treturn;\n-\t\t\t} else {\n+\t\t\tif (!isInvalid) {\n@@ -332,0 +342,5 @@\n+\t\t\t\tDisplayToolkit.inDisplayThread().execute(() -> {\n+\t\t\t\t\tvar attributeList = AttributeSelection.extractAttributes(items);\n+\t\t\t\t\tString attrName = attribute != null ? attribute.getName() : null;\n+\t\t\t\t\tview.createAttributeSelection(attrName, attributeList);\n+\t\t\t\t});\n@@ -383,0 +398,10 @@\n+\tprivate void createAttributeSelection(String attrName, Collection<Pair<String, IAttribute<IQuantity>>> items) {\n+\t\tif (attributeSelection != null) {\n+\t\t\ttoolBar.remove(attributeSelection.getId());\n+\t\t}\n+\t\tattributeSelection = new AttributeSelection(items, attrName, this::getCurrentAttribute,\n+\t\t\t\tthis::setCurrentAttribute, () -> triggerRebuildTask(currentItems));\n+\t\ttoolBar.insertAfter(ATTRIBUTE_SELECTION_SEPARATOR_ID, attributeSelection);\n+\t\ttoolBar.update(true);\n+\t}\n+\n@@ -387,7 +412,0 @@\n-\t\tgroupByActions = new GroupByAction[] {new GroupByAction(GroupActionType.LAST_FRAME),\n-\t\t\t\tnew GroupByAction(GroupActionType.THREAD_ROOT)};\n-\t\tgroupByFlameviewActions = new ViewModeAction[] {new ViewModeAction(GroupActionType.FLAME_GRAPH),\n-\t\t\t\tnew ViewModeAction(GroupActionType.ICICLE_GRAPH)};\n-\t\texportActions = new ExportAction[] {new ExportAction(ExportActionType.SAVE_AS),\n-\t\t\t\t\/* new ExportAction(ExportActionType.PRINT) *\/};\n-\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(false));\n@@ -396,12 +414,32 @@\n-\t\tsiteMenu.add(new Separator(MCContextMenuManager.GROUP_TOP));\n-\t\tsiteMenu.add(new Separator(MCContextMenuManager.GROUP_VIEWER_SETUP));\n-\n-\t\tvar toolBar = site.getActionBars().getToolBarManager();\n-\t\ttoolBar.add(new ResetZoomAction());\n-\t\ttoolBar.add(new ToggleMinimapAction());\n-\t\ttoolBar.add(new Separator());\n-\t\tStream.of(groupByFlameviewActions).forEach(toolBar::add);\n-\t\ttoolBar.add(new Separator());\n-\t\tStream.of(groupByActions).forEach(toolBar::add);\n-\t\ttoolBar.add(new Separator());\n-\t\tStream.of(exportActions).forEach(toolBar::add);\n+\t\t{\n+\t\t\tsiteMenu.add(new Separator(MCContextMenuManager.GROUP_TOP));\n+\t\t\tsiteMenu.add(new Separator(MCContextMenuManager.GROUP_VIEWER_SETUP));\n+\t\t}\n+\n+\t\ttoolBar = site.getActionBars().getToolBarManager();\n+\t\t{\n+\t\t\ttoolBar.add(new ResetZoomAction());\n+\t\t\ttoolBar.add(new ToggleMinimapAction());\n+\n+\t\t\ttoolBar.add(new Separator());\n+\n+\t\t\tViewModeAction[] groupByFlamegraphActions = new ViewModeAction[] {\n+\t\t\t\t\tnew ViewModeAction(GroupActionType.FLAME_GRAPH), new ViewModeAction(GroupActionType.ICICLE_GRAPH)};\n+\t\t\tStream.of(groupByFlamegraphActions).forEach(toolBar::add);\n+\n+\t\t\ttoolBar.add(new Separator());\n+\n+\t\t\tGroupByAction[] groupByActions = new GroupByAction[] {new GroupByAction(GroupActionType.LAST_FRAME),\n+\t\t\t\t\tnew GroupByAction(GroupActionType.THREAD_ROOT)};\n+\t\t\tStream.of(groupByActions).forEach(toolBar::add);\n+\n+\t\t\ttoolBar.add(new Separator());\n+\n+\t\t\texportActions = new ExportAction[] {new ExportAction(ExportActionType.SAVE_AS)};\n+\t\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(false));\n+\t\t\tStream.of(exportActions).forEach(toolBar::add);\n+\n+\t\t\ttoolBar.add(new Separator(ATTRIBUTE_SELECTION_SEPARATOR_ID));\n+\t\t\tcreateAttributeSelection(null, Collections.emptyList());\n+\t\t}\n+\n@@ -419,1 +457,1 @@\n-\t\tcontainer = new SashForm(parent, SWT.HORIZONTAL);\n+\t\tSashForm container = new SashForm(parent, SWT.HORIZONTAL);\n@@ -538,1 +576,1 @@\n-\t\tmodelRebuildRunnable = new ModelRebuildRunnable(this, items);\n+\t\tmodelRebuildRunnable = new ModelRebuildRunnable(this, items, currentAttribute);\n@@ -544,0 +582,8 @@\n+\tprivate IAttribute<IQuantity> getCurrentAttribute() {\n+\t\treturn currentAttribute;\n+\t}\n+\n+\tprivate void setCurrentAttribute(IAttribute<IQuantity> attr) {\n+\t\tcurrentAttribute = attr;\n+\t}\n+\n@@ -567,1 +613,1 @@\n-\t\t\tfd.setText(getFlameviewMessage(FLAMEVIEW_SAVE_FLAME_GRAPH_AS));\n+\t\t\tfd.setText(getFlamegraphMessage(FLAMEVIEW_SAVE_FLAME_GRAPH_AS));\n@@ -569,2 +615,2 @@\n-\t\t\t\t\tgetFlameviewMessage(FLAMEVIEW_PNG_IMAGE),\n-\t\t\t\t\tgetFlameviewMessage(FLAMEVIEW_JPEG_IMAGE)\n+\t\t\t\t\tgetFlamegraphMessage(FLAMEVIEW_PNG_IMAGE),\n+\t\t\t\t\tgetFlamegraphMessage(FLAMEVIEW_JPEG_IMAGE)\n@@ -662,1 +708,1 @@\n-\tprivate static ImageDescriptor flameviewImageDescriptor(String iconName) {\n+\tprivate static ImageDescriptor flamegraphImageDescriptor(String iconName) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flamegraph\/views\/FlamegraphSwingView.java","additions":134,"deletions":88,"binary":false,"changes":222,"status":"modified"},{"patch":"@@ -1,9 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<classpath>\n-\t<classpathentry kind=\"src\" path=\"src\/main\/java\"\/>\n-\t<classpathentry kind=\"src\" path=\"src\/main\/js\"\/>\n-\t<classpathentry kind=\"src\" path=\"src\/main\/resources\"\/>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType\/JavaSE-17\"\/>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.pde.core.requiredPlugins\"\/>\n-\t<classpathentry kind=\"output\" path=\"target\/classes\"\/>\n-<\/classpath>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/.classpath","additions":0,"deletions":9,"binary":false,"changes":9,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>org.openjdk.jmc.flightrecorder.flameview<\/name>\n-\t<comment><\/comment>\n-\t<projects>\n-\t<\/projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.pde.ManifestBuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.pde.SchemaBuilder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.m2e.core.maven2Builder<\/name>\n-\t\t\t<arguments>\n-\t\t\t<\/arguments>\n-\t\t<\/buildCommand>\n-\t<\/buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.m2e.core.maven2Nature<\/nature>\n-\t\t<nature>org.eclipse.jdt.core.javanature<\/nature>\n-\t\t<nature>org.eclipse.pde.PluginNature<\/nature>\n-\t<\/natures>\n-<\/projectDescription>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/.project","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,16 +0,0 @@\n-Manifest-Version: 1.0\n-Bundle-ManifestVersion: 2\n-Bundle-Localization: plugin\n-Bundle-Name: FlameView\n-Bundle-SymbolicName: org.openjdk.jmc.flightrecorder.flameview;singleton:=true\n-Bundle-Version: 9.0.0.qualifier\n-Require-Bundle: org.openjdk.jmc.flightrecorder,\n- org.openjdk.jmc.flightrecorder.serializers,\n- org.openjdk.jmc.flightrecorder.ui,\n- org.openjdk.jmc.flightrecorder.rules,\n- org.openjdk.jmc.common\n-Bundle-RequiredExecutionEnvironment: JavaSE-17\n-Bundle-Vendor: Oracle Corporation\n-Automatic-Module-Name: org.openjdk.jmc.flightrecorder.ext.flameview\n-Export-Package: org.openjdk.jmc.flightrecorder.flameview,\n- org.openjdk.jmc.flightrecorder.flameview.views\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/META-INF\/MANIFEST.MF","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,10 +0,0 @@\n-source.. = src\/main\/java\/,\\\n-           src\/main\/js\/,\\\n-           src\/main\/resources\/\n-output.. = target\/classes\/\n-bin.includes = META-INF\/,\\\n-               .,\\\n-               plugin.xml,\\\n-               plugin.properties,\\\n-               icons\/\n-pde.match.rule.bundle=compatible\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/build.properties","additions":0,"deletions":10,"binary":false,"changes":10,"status":"deleted"},{"filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/icons\/flame.png","binary":true,"status":"deleted"},{"filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/icons\/flame@2x.png","binary":true,"status":"deleted"},{"filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/icons\/flameflip.png","binary":true,"status":"deleted"},{"filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/icons\/flameflip@2x.png","binary":true,"status":"deleted"},{"filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/icons\/icicleflip.png","binary":true,"status":"deleted"},{"filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/icons\/icicleflip@2x.png","binary":true,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-#\n-#  Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n-#  Copyright (c) 2019, Datadog, Inc. All rights reserved.\n-#\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  The contents of this file are subject to the terms of either the Universal Permissive License\n-#  v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-#\n-#  or the following license:\n-#\n-#  Redistribution and use in source and binary forms, with or without modification, are permitted\n-#  provided that the following conditions are met:\n-#\n-#  1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-#  and the following disclaimer.\n-#\n-#  2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-#  conditions and the following disclaimer in the documentation and\/or other materials provided with\n-#  the distribution.\n-#\n-#  3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-#  endorse or promote products derived from this software without specific prior written permission.\n-#\n-#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-#\n-FLAME_VIEW_NAME=Flame View\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/plugin.properties","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,56 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-   Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n-   Copyright (c) 2019, 2020, Datadog, Inc. All rights reserved.\n-\n-   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-   The contents of this file are subject to the terms of either the Universal Permissive License\n-   v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-\n-   or the following license:\n-\n-   Redistribution and use in source and binary forms, with or without modification, are permitted\n-   provided that the following conditions are met:\n-\n-   1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-   and the following disclaimer.\n-\n-   2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-   conditions and the following disclaimer in the documentation and\/or other materials provided with\n-   the distribution.\n-\n-   3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-   endorse or promote products derived from this software without specific prior written permission.\n-\n-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-<?eclipse version=\"3.2\"?>\n-<plugin>\n-\t<extension point=\"org.eclipse.ui.views\">\n-\t\t<view\n-\t\t\tallowMultiple=\"false\"\n-\t\t\tcategory=\"org.openjdk.jmc.ui.main\"\n-\t\t\tclass=\"org.openjdk.jmc.flightrecorder.flameview.views.FlameGraphView\"\n-\t\t\ticon=\"icons\/flame.png\"\n-\t\t\tid=\"org.openjdk.jmc.flightrecorder.FlameView\"\n-\t\t\tname=\"%FLAME_VIEW_NAME\"\/>\n-\t<\/extension>\n-\t<extension point=\"org.eclipse.ui.perspectiveExtensions\">\n-\t\t<perspectiveExtension targetID=\"org.openjdk.jmc.ui.idesupport.StandardPerspective\">\n-\t\t\t<view\n-\t\t\t\tid=\"org.openjdk.jmc.flightrecorder.FlameView\"\n-\t\t\t\trelationship=\"stack\"\n-\t\t\t\trelative=\"org.openjdk.jmc.flightrecorder.ui.StacktraceView\"\n-\t\t\t\tshowTitle=\"true\"\n-\t\t\t\tvisible=\"true\"\/>\n-\t\t<\/perspectiveExtension>\n-\t<\/extension>\n-<\/plugin>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/plugin.xml","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -1,135 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-   Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n-   Copyright (c) 2019, 2023, Datadog, Inc. All rights reserved.\n-\n-   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-   The contents of this file are subject to the terms of either the Universal Permissive License\n-   v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-\n-   or the following license:\n-\n-   Redistribution and use in source and binary forms, with or without modification, are permitted\n-   provided that the following conditions are met:\n-\n-   1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-   and the following disclaimer.\n-\n-   2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-   conditions and the following disclaimer in the documentation and\/or other materials provided with\n-   the distribution.\n-\n-   3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-   endorse or promote products derived from this software without specific prior written permission.\n-\n-   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n-\txsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n-\t<modelVersion>4.0.0<\/modelVersion>\n-\t<parent>\n-\t\t<groupId>org.openjdk.jmc<\/groupId>\n-\t\t<artifactId>missioncontrol.application<\/artifactId>\n-\t\t<version>${revision}${changelist}<\/version>\n-\t<\/parent>\n-\t<artifactId>org.openjdk.jmc.flightrecorder.flameview<\/artifactId>\n-\t<packaging>eclipse-plugin<\/packaging>\n-\n-\t<properties>\n-\t\t<download.maven.plugin.version>1.6.7<\/download.maven.plugin.version>\n-\t\t<download-maven-plugin.phase>process-resources<\/download-maven-plugin.phase>\n-\t\t<download-maven-plugin.output>${project.basedir}\/src\/main\/resources\/jslibs<\/download-maven-plugin.output>\n-\t\t<spotless.config.path>${basedir}\/..\/..\/configuration\/ide\/eclipse\/formatting\/formatting.xml<\/spotless.config.path>\n-\t\t<spotless.config.path.js>${basedir}\/..\/..\/configuration\/ide\/eclipse\/formatting\/formattingjs.xml<\/spotless.config.path.js>\n-\t<\/properties>\n-\n-\t<build>\n-\t\t<plugins>\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>com.googlecode.maven-download-plugin<\/groupId>\n-\t\t\t\t<artifactId>download-maven-plugin<\/artifactId>\n-\t\t\t\t<version>${download.maven.plugin.version}<\/version>\n-\t\t\t\t<executions>\n-\t\t\t\t\t<execution>\n-\t\t\t\t\t\t<id>d3-flamegraph-css<\/id>\n-\t\t\t\t\t\t<phase>${download-maven-plugin.phase}<\/phase>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>wget<\/goal>\n-\t\t\t\t\t\t<\/goals>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.1.3\/dist\/d3-flamegraph.css<\/url>\n-\t\t\t\t\t\t\t<unpack>false<\/unpack>\n-\t\t\t\t\t\t\t<outputDirectory>${download-maven-plugin.output}<\/outputDirectory>\n-\t\t\t\t\t\t<\/configuration>\n-\t\t\t\t\t<\/execution>\n-\t\t\t\t\t<execution>\n-\t\t\t\t\t\t<id>download-d3<\/id>\n-\t\t\t\t\t\t<phase>${download-maven-plugin.phase}<\/phase>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>wget<\/goal>\n-\t\t\t\t\t\t<\/goals>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<url>https:\/\/d3js.org\/d3.v7.min.js<\/url>\n-\t\t\t\t\t\t\t<unpack>false<\/unpack>\n-\t\t\t\t\t\t\t<outputDirectory>${download-maven-plugin.output}<\/outputDirectory>\n-\t\t\t\t\t\t<\/configuration>\n-\t\t\t\t\t<\/execution>\n-\t\t\t\t\t<execution>\n-\t\t\t\t\t\t<id>d3-flamegraph-tooltip-js<\/id>\n-\t\t\t\t\t\t<phase>${download-maven-plugin.phase}<\/phase>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>wget<\/goal>\n-\t\t\t\t\t\t<\/goals>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.1.3\/dist\/d3-flamegraph-tooltip.js<\/url>\n-\t\t\t\t\t\t\t<unpack>false<\/unpack>\n-\t\t\t\t\t\t\t<outputDirectory>${download-maven-plugin.output}<\/outputDirectory>\n-\t\t\t\t\t\t<\/configuration>\n-\t\t\t\t\t<\/execution>\n-\t\t\t\t\t<execution>\n-\t\t\t\t\t\t<id>d3-flamegraph-js<\/id>\n-\t\t\t\t\t\t<phase>${download-maven-plugin.phase}<\/phase>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>wget<\/goal>\n-\t\t\t\t\t\t<\/goals>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.1.3\/dist\/d3-flamegraph.js<\/url>\n-\t\t\t\t\t\t\t<unpack>false<\/unpack>\n-\t\t\t\t\t\t\t<outputDirectory>${download-maven-plugin.output}<\/outputDirectory>\n-\t\t\t\t\t\t<\/configuration>\n-\t\t\t\t\t<\/execution>\n-\t\t\t\t<\/executions>\n-\t\t\t<\/plugin>\n-\t\t\t<!-- The formatter currently dislikes the javascript for some reason, but this is how to enable JavaScript formatting\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>com.diffplug.spotless<\/groupId>\n-\t\t\t\t<artifactId>spotless-maven-plugin<\/artifactId>\n-\t\t\t\t<version>${spotless.version}<\/version>\n-\t\t\t\t<configuration>\n-\t\t\t\t\t<formats>\n-\t\t\t\t\t\t<format>\n-\t\t\t\t\t\t\t<includes>\n-\t\t\t\t\t\t\t\t<include>src\/main\/js\/*.js<\/include>\n-\t\t\t\t\t\t\t<\/includes>\n-\t\t\t\t\t\t\t<eclipseWtp>\n-\t\t\t\t\t\t\t\t<type>JS<\/type>\n-\t\t\t\t\t\t\t\t<files>\n-\t\t\t\t\t\t\t\t\t<file>${spotless.config.path.js}<\/file>\n-\t\t\t\t\t\t\t\t<\/files>\n-\t\t\t\t\t\t\t<\/eclipseWtp>\n-\t\t\t\t\t\t<\/format>\n-\t\t\t\t\t<\/formats>\n-\t\t\t\t<\/configuration>\n-\t\t\t<\/plugin>\n-\t\t\t-->\n-\t\t<\/plugins>\n-\t<\/build>\n-<\/project>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/pom.xml","additions":0,"deletions":135,"binary":false,"changes":135,"status":"deleted"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2020, Datadog, Inc. All rights reserved.\n- *\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- *\n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.flameview;\n-\n-\/**\n- * Class that holds reference to the icons and images used by the Flight Recorder plug-in\n- *\/\n-public final class FlameviewImages {\n-\n-\tpublic static final String ICON_FLAME_FLIP = \"flameflip.png\"; \/\/$NON-NLS-1$\n-\tpublic static final String ICON_ICICLE_FLIP = \"icicleflip.png\"; \/\/$NON-NLS-1$\n-\n-}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/FlameviewImages.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,78 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2020, Datadog, Inc. All rights reserved.\n- *\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- *\n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.flameview;\n-\n-import java.util.MissingResourceException;\n-import java.util.ResourceBundle;\n-\n-public class Messages {\n-\tprivate static final String BUNDLE_NAME = \"org.openjdk.jmc.flightrecorder.flameview.messages\"; \/\/$NON-NLS-1$\n-\n-\tprivate static final ResourceBundle RESOURCE_BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);\n-\n-\tpublic static final String FLAMEVIEW_FLAME_GRAPH = \"FLAMEVIEW_FLAME_GRAPH\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_ICICLE_GRAPH = \"FLAMEVIEW_ICICLE_GRAPH\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SAVE_AS = \"FLAMEVIEW_SAVE_AS\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_PRINT = \"FLAMEVIEW_PRINT\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SAVE_FLAME_GRAPH_AS = \"FLAMEVIEW_SAVE_FLAME_GRAPH_AS\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_JPEG_IMAGE = \"FLAMEVIEW_JPEG_IMAGE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_PNG_IMAGE = \"FLAMEVIEW_PNG_IMAGE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE = \"FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE\"; \/\/$NON-NLS-1$\t\t\n-\tpublic static final String FLAMEVIEW_SELECT_ROOT_NODE_EVENT = \"FLAMEVIEW_SELECT_ROOT_NODE_EVENT\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_ROOT_NODE_EVENTS = \"FLAMEVIEW_SELECT_ROOT_NODE_EVENTS\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_ROOT_NODE_TYPE = \"FLAMEVIEW_SELECT_ROOT_NODE_TYPE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_ROOT_NODE_TYPES = \"FLAMEVIEW_SELECT_ROOT_NODE_TYPES\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_ROOT_NODE = \"FLAMEVIEW_SELECT_ROOT_NODE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_TITLE_EVENT_MORE_DELIMITER = \"FLAMEVIEW_SELECT_TITLE_EVENT_MORE_DELIMITER\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_TITLE_EVENT_PATTERN = \"FLAMEVIEW_SELECT_TITLE_EVENT_PATTERN\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TABLE_EVENT_PATTERN = \"FLAMEVIEW_SELECT_HTML_TABLE_EVENT_PATTERN\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN = \"FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_MORE = \"FLAMEVIEW_SELECT_HTML_MORE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TABLE_COUNT = \"FLAMEVIEW_SELECT_HTML_TABLE_COUNT\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE = \"FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE = \"FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES = \"FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES\"; \/\/$NON-NLS-1$\n-\tpublic static final String FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION = \"FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION\"; \/\/$NON-NLS-1$\n-\n-\tprivate Messages() {\n-\t}\n-\n-\tpublic static String getString(String key) {\n-\t\ttry {\n-\t\t\treturn RESOURCE_BUNDLE.getString(key);\n-\t\t} catch (MissingResourceException e) {\n-\t\t\treturn '!' + key + '!';\n-\t\t}\n-\t}\n-}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/Messages.java","additions":0,"deletions":78,"binary":false,"changes":78,"status":"deleted"},{"patch":"@@ -1,72 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2020, Datadog, Inc. All rights reserved.\n- *\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- *\n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.flameview;\n-\n-import java.text.MessageFormat;\n-\n-public final class MessagesUtils {\n-\n-\t\/**\n-\t * Localized Stack Trace message\n-\t * \n-\t * @param key\n-\t *            stack trace message\n-\t * @return message\n-\t *\/\n-\tpublic static String getStacktraceMessage(String key) {\n-\t\treturn org.openjdk.jmc.flightrecorder.stacktrace.Messages.getString(key);\n-\t}\n-\n-\t\/**\n-\t * Localized Flameview Message\n-\t * \n-\t * @param key\n-\t *            flameview message\n-\t * @param values\n-\t *            message values\n-\t * @return message\n-\t *\/\n-\tpublic static String getFlameviewMessage(String key, Object ... values) {\n-\t\tif (values == null || values.length == 0) {\n-\t\t\treturn getFlameviewMessage(key);\n-\t\t} else {\n-\t\t\treturn MessageFormat.format(getFlameviewMessage(key), values);\n-\t\t}\n-\t}\n-\n-\tprivate static String getFlameviewMessage(String key) {\n-\t\treturn org.openjdk.jmc.flightrecorder.flameview.Messages.getString(key);\n-\t}\n-\n-}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/MessagesUtils.java","additions":0,"deletions":72,"binary":false,"changes":72,"status":"deleted"},{"patch":"@@ -1,577 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2023, Datadog, Inc. All rights reserved.\n- *\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- *\n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- *\n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.flightrecorder.flameview.views;\n-\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_FLAME_GRAPH;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_ICICLE_GRAPH;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_JPEG_IMAGE;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_PNG_IMAGE;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_PRINT;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SAVE_AS;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SAVE_FLAME_GRAPH_AS;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SELECT_HTML_TABLE_COUNT;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE;\n-import static org.openjdk.jmc.flightrecorder.flameview.Messages.FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES;\n-import static org.openjdk.jmc.flightrecorder.flameview.MessagesUtils.getFlameviewMessage;\n-\n-import java.io.ByteArrayOutputStream;\n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.text.MessageFormat;\n-import java.util.Base64;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.concurrent.CancellationException;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.ThreadFactory;\n-import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.logging.Level;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n-import org.eclipse.jface.action.Action;\n-import org.eclipse.jface.action.IAction;\n-import org.eclipse.jface.action.IMenuManager;\n-import org.eclipse.jface.action.IToolBarManager;\n-import org.eclipse.jface.action.Separator;\n-import org.eclipse.jface.resource.ImageDescriptor;\n-import org.eclipse.jface.resource.ResourceLocator;\n-import org.eclipse.jface.viewers.ISelection;\n-import org.eclipse.jface.viewers.IStructuredSelection;\n-import org.eclipse.swt.SWT;\n-import org.eclipse.swt.browser.Browser;\n-import org.eclipse.swt.browser.BrowserFunction;\n-import org.eclipse.swt.browser.ProgressAdapter;\n-import org.eclipse.swt.browser.ProgressEvent;\n-import org.eclipse.swt.custom.SashForm;\n-import org.eclipse.swt.events.MenuDetectEvent;\n-import org.eclipse.swt.events.MenuDetectListener;\n-import org.eclipse.swt.graphics.Image;\n-import org.eclipse.swt.graphics.ImageData;\n-import org.eclipse.swt.graphics.ImageLoader;\n-import org.eclipse.swt.widgets.Composite;\n-import org.eclipse.swt.widgets.FileDialog;\n-import org.eclipse.ui.IMemento;\n-import org.eclipse.ui.ISelectionListener;\n-import org.eclipse.ui.ISharedImages;\n-import org.eclipse.ui.IViewSite;\n-import org.eclipse.ui.IWorkbenchPart;\n-import org.eclipse.ui.PartInitException;\n-import org.eclipse.ui.PlatformUI;\n-import org.eclipse.ui.part.ViewPart;\n-import org.openjdk.jmc.common.item.IAttribute;\n-import org.openjdk.jmc.common.item.IItemCollection;\n-import org.openjdk.jmc.common.item.ItemCollectionToolkit;\n-import org.openjdk.jmc.common.item.ItemFilters;\n-import org.openjdk.jmc.common.unit.IQuantity;\n-import org.openjdk.jmc.common.util.Pair;\n-import org.openjdk.jmc.common.util.StringToolkit;\n-import org.openjdk.jmc.flightrecorder.flameview.FlameviewImages;\n-import org.openjdk.jmc.flightrecorder.serializers.json.FlameGraphJsonSerializer;\n-import org.openjdk.jmc.flightrecorder.stacktrace.FrameSeparator;\n-import org.openjdk.jmc.flightrecorder.stacktrace.FrameSeparator.FrameCategorization;\n-import org.openjdk.jmc.flightrecorder.stacktrace.tree.StacktraceTreeModel;\n-import org.openjdk.jmc.flightrecorder.ui.FlightRecorderUI;\n-import org.openjdk.jmc.flightrecorder.ui.common.AttributeSelection;\n-import org.openjdk.jmc.flightrecorder.ui.common.ImageConstants;\n-import org.openjdk.jmc.flightrecorder.ui.messages.internal.Messages;\n-import org.openjdk.jmc.ui.CoreImages;\n-import org.openjdk.jmc.ui.common.util.AdapterUtil;\n-import org.openjdk.jmc.ui.handlers.MCContextMenuManager;\n-import org.openjdk.jmc.ui.misc.DisplayToolkit;\n-\n-public class FlameGraphView extends ViewPart implements ISelectionListener {\n-\tprivate static final String DIR_ICONS = \"icons\/\"; \/\/$NON-NLS-1$\n-\tprivate static final String PLUGIN_ID = \"org.openjdk.jmc.flightrecorder.flameview\"; \/\/$NON-NLS-1$\n-\tprivate static final String TABLE_COLUMN_COUNT = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TABLE_COUNT);\n-\tprivate static final String TABLE_COLUMN_EVENT_TYPE = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE);\n-\tprivate static final String TOOLTIP_PACKAGE = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE);\n-\tprivate static final String TOOLTIP_SAMPLES = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES);\n-\tprivate static final String TOOLTIP_DESCRIPTION = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION);\n-\tprivate static final String ATTRIBUTE_SELECTION_ID = \"AttributeSelection\"; \/\/$NON-NLS-1$\n-\tprivate static final String ATTRIBUTE_SELECTION_SEP_ID = \"AttrSelectionSep\"; \/\/$NON-NLS-1$\n-\tprivate static final String HTML_PAGE;\n-\tstatic {\n-\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.1.3\/dist\/d3-flamegraph.css\n-\t\tString cssD3Flamegraph = \"jslibs\/d3-flamegraph.css\";\n-\t\t\/\/ from: https:\/\/d3js.org\/d3.v7.min.js\n-\t\tString jsD3 = \"jslibs\/d3.v7.min.js\";\n-\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.1.3\/dist\/d3-flamegraph-tooltip.js\n-\t\tString jsD3Tip = \"jslibs\/d3-flamegraph-tooltip.js\";\n-\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.1.3\/dist\/d3-flamegraph.js\n-\t\tString jsD3FlameGraph = \"jslibs\/d3-flamegraph.js\";\n-\t\t\/\/ jmc flameview coloring, tooltip and other  functions\n-\t\tString jsFlameviewName = \"flameview.js\";\n-\t\tString cssFlameview = \"flameview.css\";\n-\n-\t\tString jsD3Lib = loadLibraries(jsD3, jsD3FlameGraph, jsD3Tip);\n-\t\tString styleheets = loadLibraries(cssD3Flamegraph, cssFlameview);\n-\t\tString jsFlameviewColoring = fileContent(jsFlameviewName);\n-\n-\t\tString magnifierIcon = getIconBase64(ImageConstants.ICON_MAGNIFIER);\n-\n-\t\t\/\/ formatter arguments for the template: %1 - CSSs stylesheets,\n-\t\t\/\/ %2 - Search Icon Base64, %3 - 3rd party scripts, %4 - Flameview Coloring,\n-\t\tHTML_PAGE = String.format(fileContent(\"page.template\"), styleheets, magnifierIcon, jsD3Lib,\n-\t\t\t\tjsFlameviewColoring);\n-\t}\n-\n-\tprivate static final int MODEL_EXECUTOR_THREADS_NUMBER = 3;\n-\tprivate static final ExecutorService MODEL_EXECUTOR = Executors.newFixedThreadPool(MODEL_EXECUTOR_THREADS_NUMBER,\n-\t\t\tnew ThreadFactory() {\n-\t\t\t\tprivate ThreadGroup group = new ThreadGroup(\"FlameGraphModelCalculationGroup\");\n-\t\t\t\tprivate AtomicInteger counter = new AtomicInteger();\n-\n-\t\t\t\t@Override\n-\t\t\t\tpublic Thread newThread(Runnable r) {\n-\t\t\t\t\tThread t = new Thread(group, r, \"FlameGraphModelCalculation-\" + counter.getAndIncrement());\n-\t\t\t\t\tt.setDaemon(true);\n-\t\t\t\t\treturn t;\n-\t\t\t\t}\n-\t\t\t});\n-\tprivate FrameSeparator frameSeparator;\n-\n-\tprivate Browser browser;\n-\tprivate SashForm container;\n-\tprivate GroupByAction[] groupByActions;\n-\tprivate GroupByFlameviewAction[] groupByFlameviewActions;\n-\tprivate ExportAction[] exportActions;\n-\tprivate boolean threadRootAtTop = true;\n-\tprivate boolean icicleViewActive = true;\n-\tprivate IItemCollection currentItems;\n-\tprivate volatile ModelState modelState = ModelState.NONE;\n-\tprivate ModelRebuildRunnable modelRebuildRunnable;\n-\tprivate IAttribute<IQuantity> currentAttribute;\n-\tprivate AttributeSelection attributeSelection;\n-\tprivate IToolBarManager toolBar;\n-\n-\tprivate enum GroupActionType {\n-\t\tTHREAD_ROOT(Messages.STACKTRACE_VIEW_THREAD_ROOT, IAction.AS_RADIO_BUTTON, CoreImages.THREAD),\n-\t\tLAST_FRAME(Messages.STACKTRACE_VIEW_LAST_FRAME, IAction.AS_RADIO_BUTTON, CoreImages.METHOD_NON_OPTIMIZED),\n-\t\tICICLE_GRAPH(getFlameviewMessage(FLAMEVIEW_ICICLE_GRAPH), IAction.AS_RADIO_BUTTON, flameviewImageDescriptor(\n-\t\t\t\tFlameviewImages.ICON_ICICLE_FLIP)),\n-\t\tFLAME_GRAPH(getFlameviewMessage(FLAMEVIEW_FLAME_GRAPH), IAction.AS_RADIO_BUTTON, flameviewImageDescriptor(\n-\t\t\t\tFlameviewImages.ICON_FLAME_FLIP));\n-\n-\t\tprivate final String message;\n-\t\tprivate final int action;\n-\t\tprivate final ImageDescriptor imageDescriptor;\n-\n-\t\tprivate GroupActionType(String message, int action, ImageDescriptor imageDescriptor) {\n-\t\t\tthis.message = message;\n-\t\t\tthis.action = action;\n-\t\t\tthis.imageDescriptor = imageDescriptor;\n-\t\t}\n-\t}\n-\n-\tprivate enum ModelState {\n-\t\tNOT_STARTED, STARTED, FINISHED, NONE;\n-\t}\n-\n-\tprivate class GroupByAction extends Action {\n-\t\tprivate final GroupActionType actionType;\n-\n-\t\tGroupByAction(GroupActionType actionType) {\n-\t\t\tsuper(actionType.message, actionType.action);\n-\t\t\tthis.actionType = actionType;\n-\t\t\tsetToolTipText(actionType.message);\n-\t\t\tsetImageDescriptor(actionType.imageDescriptor);\n-\t\t\tsetChecked(GroupActionType.THREAD_ROOT.equals(actionType) == threadRootAtTop);\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void run() {\n-\t\t\tboolean newValue = isChecked() == GroupActionType.THREAD_ROOT.equals(actionType);\n-\t\t\tif (newValue != threadRootAtTop) {\n-\t\t\t\tthreadRootAtTop = newValue;\n-\t\t\t\ttriggerRebuildTask(currentItems);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate class GroupByFlameviewAction extends Action {\n-\t\tprivate final GroupActionType actionType;\n-\n-\t\tGroupByFlameviewAction(GroupActionType actionType) {\n-\t\t\tsuper(actionType.message, actionType.action);\n-\t\t\tthis.actionType = actionType;\n-\t\t\tsetToolTipText(actionType.message);\n-\t\t\tsetImageDescriptor(actionType.imageDescriptor);\n-\t\t\tsetChecked(GroupActionType.ICICLE_GRAPH.equals(actionType) == icicleViewActive);\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void run() {\n-\t\t\ticicleViewActive = GroupActionType.ICICLE_GRAPH.equals(actionType);\n-\t\t\tbrowser.execute(String.format(\"icicleView(%s);\", icicleViewActive));\n-\t\t}\n-\t}\n-\n-\tprivate enum ExportActionType {\n-\t\tSAVE_AS(getFlameviewMessage(FLAMEVIEW_SAVE_AS), IAction.AS_PUSH_BUTTON, PlatformUI.getWorkbench()\n-\t\t\t\t.getSharedImages().getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT), PlatformUI.getWorkbench()\n-\t\t\t\t\t\t.getSharedImages().getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT_DISABLED)),\n-\t\tPRINT(getFlameviewMessage(FLAMEVIEW_PRINT), IAction.AS_PUSH_BUTTON, PlatformUI.getWorkbench().getSharedImages()\n-\t\t\t\t.getImageDescriptor(ISharedImages.IMG_ETOOL_PRINT_EDIT), PlatformUI.getWorkbench().getSharedImages()\n-\t\t\t\t\t\t.getImageDescriptor(ISharedImages.IMG_ETOOL_PRINT_EDIT_DISABLED));\n-\n-\t\tprivate final String message;\n-\t\tprivate final int action;\n-\t\tprivate final ImageDescriptor imageDescriptor;\n-\t\tprivate final ImageDescriptor disabledImageDescriptor;\n-\n-\t\tprivate ExportActionType(String message, int action, ImageDescriptor imageDescriptor,\n-\t\t\t\tImageDescriptor disabledImageDescriptor) {\n-\t\t\tthis.message = message;\n-\t\t\tthis.action = action;\n-\t\t\tthis.imageDescriptor = imageDescriptor;\n-\t\t\tthis.disabledImageDescriptor = disabledImageDescriptor;\n-\t\t}\n-\t}\n-\n-\tprivate class ExportAction extends Action {\n-\t\tprivate final ExportActionType actionType;\n-\n-\t\tprivate ExportAction(ExportActionType actionType) {\n-\t\t\tsuper(actionType.message, actionType.action);\n-\t\t\tthis.actionType = actionType;\n-\t\t\tsetToolTipText(actionType.message);\n-\t\t\tsetImageDescriptor(actionType.imageDescriptor);\n-\t\t\tsetDisabledImageDescriptor(actionType.disabledImageDescriptor);\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void run() {\n-\t\t\tswitch (actionType) {\n-\t\t\tcase SAVE_AS:\n-\t\t\t\tExecutors.newSingleThreadExecutor().execute(FlameGraphView.this::saveFlameGraph);\n-\t\t\t\tbreak;\n-\t\t\tcase PRINT:\n-\t\t\t\tbrowser.execute(\"window.print()\"); \/\/$NON-NLS-1$\n-\t\t\t\tbreak;\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate static class ModelRebuildRunnable implements Runnable {\n-\n-\t\tprivate final FlameGraphView view;\n-\t\tprivate final IItemCollection items;\n-\t\tprivate final IAttribute<IQuantity> attribute;\n-\t\tprivate volatile boolean isInvalid;\n-\n-\t\tprivate ModelRebuildRunnable(FlameGraphView view, IItemCollection items, IAttribute<IQuantity> attribute) {\n-\t\t\tthis.view = view;\n-\t\t\tthis.items = items;\n-\t\t\tthis.attribute = attribute;\n-\t\t}\n-\n-\t\tprivate void setInvalid() {\n-\t\t\tthis.isInvalid = true;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void run() {\n-\t\t\tview.modelState = ModelState.STARTED;\n-\t\t\tif (isInvalid) {\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\tIItemCollection filteredItems = items;\n-\t\t\tif (attribute != null) {\n-\t\t\t\tfilteredItems = filteredItems.apply(ItemFilters.hasAttribute(attribute));\n-\t\t\t}\n-\t\t\tStacktraceTreeModel treeModel = new StacktraceTreeModel(filteredItems, view.frameSeparator,\n-\t\t\t\t\t!view.threadRootAtTop, attribute);\n-\t\t\tif (isInvalid) {\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\tString flameGraphJson = FlameGraphJsonSerializer.toJson(treeModel);\n-\n-\t\t\tif (isInvalid) {\n-\t\t\t\treturn;\n-\t\t\t} else {\n-\t\t\t\tview.modelState = ModelState.FINISHED;\n-\t\t\t\tDisplayToolkit.inDisplayThread().execute(() -> {\n-\t\t\t\t\tview.setModel(items, flameGraphJson);\n-\n-\t\t\t\t\tList<Pair<String, IAttribute<IQuantity>>> attrList = AttributeSelection.extractAttributes(items);\n-\t\t\t\t\tString attrName = attribute != null ? attribute.getName() : null;\n-\t\t\t\t\tview.createAttributeSelection(attrName, attrList);\n-\t\t\t\t});\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate void createAttributeSelection(String attrName, Collection<Pair<String, IAttribute<IQuantity>>> items) {\n-\t\tif (attributeSelection != null) {\n-\t\t\ttoolBar.remove(attributeSelection.getId());\n-\t\t}\n-\t\tattributeSelection = new AttributeSelection(items, attrName, this::getCurrentAttribute,\n-\t\t\t\tthis::setCurrentAttribute, () -> triggerRebuildTask(currentItems));\n-\t\ttoolBar.insertAfter(ATTRIBUTE_SELECTION_SEP_ID, attributeSelection);\n-\t\ttoolBar.update(true);\n-\t}\n-\n-\t@Override\n-\tpublic void init(IViewSite site, IMemento memento) throws PartInitException {\n-\t\tsuper.init(site, memento);\n-\t\tframeSeparator = new FrameSeparator(FrameCategorization.METHOD, false);\n-\t\tgroupByActions = new GroupByAction[] {new GroupByAction(GroupActionType.LAST_FRAME),\n-\t\t\t\tnew GroupByAction(GroupActionType.THREAD_ROOT)};\n-\t\tgroupByFlameviewActions = new GroupByFlameviewAction[] {new GroupByFlameviewAction(GroupActionType.FLAME_GRAPH),\n-\t\t\t\tnew GroupByFlameviewAction(GroupActionType.ICICLE_GRAPH)};\n-\t\texportActions = new ExportAction[] {new ExportAction(ExportActionType.SAVE_AS),\n-\t\t\t\tnew ExportAction(ExportActionType.PRINT)};\n-\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(false));\n-\n-\t\t\/\/ methodFormatter = new MethodFormatter(null, () -> viewer.refresh());\n-\t\tIMenuManager siteMenu = site.getActionBars().getMenuManager();\n-\t\tsiteMenu.add(new Separator(MCContextMenuManager.GROUP_TOP));\n-\t\tsiteMenu.add(new Separator(MCContextMenuManager.GROUP_VIEWER_SETUP));\n-\t\t\/\/ addOptions(siteMenu);\n-\t\ttoolBar = site.getActionBars().getToolBarManager();\n-\n-\t\tStream.of(groupByFlameviewActions).forEach(toolBar::add);\n-\t\ttoolBar.add(new Separator());\n-\t\tStream.of(groupByActions).forEach(toolBar::add);\n-\t\ttoolBar.add(new Separator());\n-\t\tStream.of(exportActions).forEach(toolBar::add);\n-\n-\t\ttoolBar.add(new Separator(ATTRIBUTE_SELECTION_SEP_ID));\n-\t\tcreateAttributeSelection(null, Collections.emptyList());\n-\n-\t\tgetSite().getPage().addSelectionListener(this);\n-\t}\n-\n-\tprivate IAttribute<IQuantity> getCurrentAttribute() {\n-\t\treturn currentAttribute;\n-\t}\n-\n-\tprivate void setCurrentAttribute(IAttribute<IQuantity> attr) {\n-\t\tcurrentAttribute = attr;\n-\t}\n-\n-\t@Override\n-\tpublic void dispose() {\n-\t\tgetSite().getPage().removeSelectionListener(this);\n-\t\tsuper.dispose();\n-\t}\n-\n-\t@Override\n-\tpublic void createPartControl(Composite parent) {\n-\t\tcontainer = new SashForm(parent, SWT.HORIZONTAL);\n-\t\tbrowser = new Browser(container, SWT.NONE);\n-\t\tcontainer.setMaximizedControl(browser);\n-\t\tbrowser.addMenuDetectListener(new MenuDetectListener() {\n-\t\t\t@Override\n-\t\t\tpublic void menuDetected(MenuDetectEvent e) {\n-\t\t\t\te.doit = false;\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\t@Override\n-\tpublic void setFocus() {\n-\t\tbrowser.setFocus();\n-\t}\n-\n-\t@Override\n-\tpublic void saveState(IMemento memento) {\n-\t}\n-\n-\t@Override\n-\tpublic void selectionChanged(IWorkbenchPart part, ISelection selection) {\n-\t\tif (selection instanceof IStructuredSelection) {\n-\t\t\tObject first = ((IStructuredSelection) selection).getFirstElement();\n-\t\t\tIItemCollection items = AdapterUtil.getAdapter(first, IItemCollection.class);\n-\t\t\tif (items == null) {\n-\t\t\t\ttriggerRebuildTask(ItemCollectionToolkit.build(Stream.empty()));\n-\t\t\t} else if (!items.equals(currentItems)) {\n-\t\t\t\ttriggerRebuildTask(items);\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate void triggerRebuildTask(IItemCollection items) {\n-\t\t\/\/ Release old model calculation before building a new\n-\t\tif (modelRebuildRunnable != null) {\n-\t\t\tmodelRebuildRunnable.setInvalid();\n-\t\t}\n-\n-\t\tcurrentItems = items;\n-\t\tmodelState = ModelState.NOT_STARTED;\n-\t\tmodelRebuildRunnable = new ModelRebuildRunnable(this, items, currentAttribute);\n-\t\tif (!modelRebuildRunnable.isInvalid) {\n-\t\t\tMODEL_EXECUTOR.execute(modelRebuildRunnable);\n-\t\t}\n-\t}\n-\n-\tprivate void setModel(final IItemCollection items, final String json) {\n-\t\tif (ModelState.FINISHED.equals(modelState) && items.equals(currentItems) && !browser.isDisposed()) {\n-\t\t\tsetViewerInput(json);\n-\t\t}\n-\t}\n-\n-\tprivate void setViewerInput(String json) {\n-\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(false));\n-\t\tbrowser.setText(HTML_PAGE);\n-\t\tbrowser.addListener(SWT.Resize, event -> {\n-\t\t\tbrowser.execute(\"resizeFlameGraph();\");\n-\t\t});\n-\n-\t\tbrowser.addProgressListener(new ProgressAdapter() {\n-\t\t\tprivate boolean loaded = false;\n-\n-\t\t\t@Override\n-\t\t\tpublic void changed(ProgressEvent event) {\n-\t\t\t\tif (loaded) {\n-\t\t\t\t\tbrowser.removeProgressListener(this);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void completed(ProgressEvent event) {\n-\t\t\t\tbrowser.execute(String.format(\"configureTooltipText('%s', '%s', '%s', '%s', '%s');\", TABLE_COLUMN_COUNT,\n-\t\t\t\t\t\tTABLE_COLUMN_EVENT_TYPE, TOOLTIP_PACKAGE, TOOLTIP_SAMPLES, TOOLTIP_DESCRIPTION));\n-\t\t\t\tbrowser.execute(String.format(\"processGraph(%s, %s);\", json, icicleViewActive));\n-\t\t\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(true));\n-\t\t\t\tloaded = true;\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\tprivate void saveFlameGraph() {\n-\t\tCompletableFuture<String> future = new CompletableFuture<>();\n-\t\tString[] destination = new String[2];\n-\n-\t\tDisplayToolkit.inDisplayThread().execute(() -> {\n-\t\t\tFileDialog fd = new FileDialog(browser.getShell(), SWT.SAVE);\n-\t\t\tfd.setText(getFlameviewMessage(FLAMEVIEW_SAVE_FLAME_GRAPH_AS));\n-\t\t\tfd.setFilterNames(\n-\t\t\t\t\tnew String[] {getFlameviewMessage(FLAMEVIEW_JPEG_IMAGE), getFlameviewMessage(FLAMEVIEW_PNG_IMAGE)});\n-\t\t\tfd.setFilterExtensions(new String[] {\"*.jpg\", \"*.png\"}); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n-\t\t\tfd.setFileName(\"flame_graph\"); \/\/$NON-NLS-1$\n-\t\t\tfd.setOverwrite(true);\n-\t\t\tif (fd.open() == null) {\n-\t\t\t\tfuture.cancel(true);\n-\t\t\t\treturn;\n-\t\t\t}\n-\n-\t\t\tString type;\n-\t\t\tString fileName = fd.getFileName().toLowerCase();\n-\t\t\t\/\/ FIXME: FileDialog filterIndex returns -1 (https:\/\/bugs.eclipse.org\/bugs\/show_bug.cgi?id=546256)\n-\t\t\tif (fileName.endsWith(\".jpg\") || fileName.endsWith(\".jpeg\")) { \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n-\t\t\t\ttype = \"image\/jpeg\"; \/\/$NON-NLS-1$\n-\t\t\t} else if (fileName.endsWith(\".png\")) { \/\/$NON-NLS-1$\n-\t\t\t\ttype = \"image\/png\"; \/\/$NON-NLS-1$\n-\t\t\t} else {\n-\t\t\t\tfuture.completeExceptionally(new UnsupportedOperationException(\"Unsupported image format\")); \/\/$NON-NLS-1$\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\tdestination[0] = fd.getFilterPath();\n-\t\t\tdestination[1] = fd.getFileName();\n-\n-\t\t\tString callback = \"_saveFlameGraphCallback\"; \/\/$NON-NLS-1$\n-\t\t\tnew BrowserFunction(browser, callback) {\n-\t\t\t\t@Override\n-\t\t\t\tpublic Object function(Object[] arguments) {\n-\t\t\t\t\tif (arguments.length > 1) {\n-\t\t\t\t\t\tfuture.completeExceptionally(new RuntimeException((String) arguments[1]));\n-\t\t\t\t\t\treturn null;\n-\t\t\t\t\t}\n-\t\t\t\t\tfuture.complete((String) arguments[0]);\n-\n-\t\t\t\t\tsuper.dispose();\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t};\n-\n-\t\t\tbrowser.execute(\"exportFlameGraph('\" + type + \"', '\" + callback + \"')\"); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$ \/\/$NON-NLS-3$\n-\t\t});\n-\n-\t\ttry {\n-\t\t\tString b64 = future.get();\n-\t\t\tbyte[] bytes = Base64.getDecoder().decode(b64);\n-\t\t\tFileOutputStream fos = new FileOutputStream(new File(destination[0], destination[1]));\n-\t\t\tfos.write(bytes);\n-\t\t\tfos.close();\n-\t\t} catch (CancellationException e) {\n-\t\t\t\/\/ noop : model calculation is canceled when is still running\n-\t\t} catch (InterruptedException | ExecutionException | IOException e) {\n-\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to save flame graph\", e); \/\/$NON-NLS-1$\n-\t\t}\n-\t}\n-\n-\tprivate static String loadLibraries(String ... libs) {\n-\t\tif (libs == null || libs.length == 0) {\n-\t\t\treturn \"\";\n-\t\t} else {\n-\t\t\treturn Stream.of(libs).map(FlameGraphView::fileContent).collect(Collectors.joining(\"\\n\"));\n-\t\t}\n-\t}\n-\n-\tprivate static String fileContent(String fileName) {\n-\t\ttry {\n-\t\t\treturn StringToolkit.readString(FlameGraphView.class.getClassLoader().getResourceAsStream(fileName));\n-\t\t} catch (IOException e) {\n-\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.WARNING,\n-\t\t\t\t\tMessageFormat.format(\"Could not load script \\\"{0}\\\",\\\"{1}\\\"\", fileName, e.getMessage())); \/\/$NON-NLS-1$\n-\t\t\treturn \"\";\n-\t\t}\n-\t}\n-\n-\tprivate static ImageDescriptor flameviewImageDescriptor(String iconName) {\n-\t\treturn ResourceLocator.imageDescriptorFromBundle(PLUGIN_ID, DIR_ICONS + iconName).orElse(null); \/\/$NON-NLS-1$\n-\t}\n-\n-\tprivate static String getIconBase64(String iconName) {\n-\t\tImage image = FlightRecorderUI.getDefault().getImage(iconName);\n-\t\tif (image == null) {\n-\t\t\treturn \"\";\n-\t\t} else {\n-\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\tImageLoader loader = new ImageLoader();\n-\t\t\tloader.data = new ImageData[] {image.getImageData()};\n-\t\t\tloader.save(baos, SWT.IMAGE_PNG);\n-\t\t\treturn Base64.getEncoder().encodeToString(baos.toByteArray());\n-\t\t}\n-\t}\n-}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":0,"deletions":577,"binary":false,"changes":577,"status":"deleted"},{"patch":"@@ -1,39 +0,0 @@\n-input {\n-\tfont-family: Helvetica, Arial, Verdana, sans-serif;\n-\tfont-size: 12px;\n-\tmargin-right: 2px;\t\n-}\n-\n-svg, table {\n-\twidth: 100%;\n-}\n-\n-table {\n-\tmargin-top: 4px;\t\n-}\n-\n-table, th, td {\n-\tborder-collapse: collapse;\n-\tborder: 1px solid grey;\n-}\n-\n-\n-th, td {\n-\ttext-align: left;\n-\tpadding-left: 4px;\n-\tpadding-right: 4px;\n-\tpadding-top: 2px;\n-\tpadding-bottom: 2px;\n-}\n-\n-.tdLabel {\n-\twidth: 60px;\n-\tcolor: white;\n-\ttext-align: left;\t\n-}\n-\n-.tdCount {\n-\twidth: 60px;\n-\tcolor: white;\n-\ttext-align: right;\t\n-}\n\\ No newline at end of file\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/js\/flameview.css","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -1,221 +0,0 @@\n-\n-\/*\n- Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- Copyright (c) 2020, Datadog, Inc. All rights reserved.\n-\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- The contents of this file are subject to the terms of either the Universal Permissive License\n- v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-\n- or the following license:\n-\n- Redistribution and use in source and binary forms, with or without modification, are permitted\n- provided that the following conditions are met:\n-\n- 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- and the following disclaimer.\n-\n- 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- conditions and the following disclaimer in the documentation and\/or other materials provided with\n- the distribution.\n-\n- 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- endorse or promote products derived from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-\n-String.prototype.hashCode = function() {\n-\tvar hash = 0;\n-\tif (this.length === 0) return hash;\n-\tfor (var i = 0; i < this.length; i++) {\n-\t\tvar char = this.charCodeAt(i);\n-\t\thash = ((hash << 5) - hash) + char;\n-\t\thash = hash & hash;\n-\t}\n-\treturn hash;\n-};\n-\n-const htmlTagBr = \"\\u003Cbr\\u002F\\u003E\";\n-const rootPackageColor = \"darkred\";\n-const invalidPackageColor = \"snow\";\n-const packageJavaColorLightGray = \"lightgray\";\n-const packageComSunAndJdkColorDarkGray = \"darkgray\";\n-const packageSunDarkColorGray = \"gray\";\n-const packageRestValueHMax = 360;\n-const packageRestValueH = 0;\n-const packageRestSLValues = [42, 53];\n-const packageConsideredDepth = 3;\n-const packageMarkerJava = \"java\";\n-const packageMarkerSun = \"sun\";\n-const packageMarkerComSunAndJdk = \"comSunAndJdk\";\n-const packageMarkerRest = \"rest\";\n-const packagesIdentifierMap = new Map().set(\"java.\", packageMarkerJava).set(\"sun.\", packageMarkerSun).set(\"com.sun.\", \n-\t\tpackageMarkerComSunAndJdk).set(\"jdk.\", packageMarkerComSunAndJdk);\n-const packageColorMap = new Map().set(\"\", rootPackageColor);\n-const specialCharactersMap = new Map().set('#', '\\x23').set('$', '\\x24').set('(', '\\x28').set(')', '\\x29')\n-\t\t.set(',', '\\x2c').set('-', '\\x2d').set('.', '\\x2e').set('<', '\\x3c').set('>', '\\x3e').set('[', '\\x5b')\n-\t\t.set(']', '\\x5d').set('_', '\\x5f').set('{', '\\x7b').set('|', '\\x7c').set('}', '\\x7d').set('~', '\\x7e');\n-\n-const colorByPackage = function(p) {\n-\tif (p === undefined) {\n-\t\treturn invalidPackageColor;\n-\t} else {\n-\t\tconst packageNameStrip = stripPackageName(p);\n-\t\tconst packageSelectedColor = packageColorMap.get(packageNameStrip);\n-\t\tif (packageSelectedColor === undefined) {\n-\t\t\tconst packageMarkerSelected = getPackageMarker(packageNameStrip);\n-\t\t\tconst packageNameStripHash = packageNameStrip.hashCode();\n-\t\t\tswitch (packageMarkerSelected) {\n-\t\t\tcase packageMarkerJava:\n-\t\t\t\tpackageColorMap.set(packageNameStrip, packageJavaColorLightGray);\n-\t\t\t\tbreak;\n-\t\t\tcase packageMarkerComSunAndJdk:\n-\t\t\t\tpackageColorMap.set(packageNameStrip, packageComSunAndJdkColorDarkGray);\n-\t\t\t\tbreak;\n-\t\t\tcase packageMarkerSun:\n-\t\t\t\tpackageColorMap.set(packageNameStrip, packageSunDarkColorGray);\n-\t\t\t\tbreak;\n-\t\t\tcase packageMarkerRest:\n-\t\t\t\tconst packageRestSelectedColor = createHslColorString(adjustHslPropertyByHash(packageNameStripHash, packageRestValueH, packageRestValueHMax), packageRestSLValues[0], packageRestSLValues[1]);\n-\t\t\t\tpackageColorMap.set(packageNameStrip, packageRestSelectedColor);\n-\t\t\t\tbreak;\n-\t\t\t}\n-\t\t\treturn packageColorMap.get(packageNameStrip);\n-\t\t} else {\n-\t\t\treturn packageSelectedColor;\n-\t\t}\n-\t}\n-};\n-\n-const getPackageMarker = function(p) {\n-\tfor(let k of packagesIdentifierMap.keys()){\n-\t\tif(p.startsWith(k)){\n-\t\t\treturn packagesIdentifierMap.get(k);\n-\t\t}\n-\t}\n-\treturn packageMarkerRest;\n-};\n-\n-const stripPackageName = function(p) {\n-\tconst splitString = p.split(\"\\u002E\");\n-\tconst number = Math.min(splitString.length, packageConsideredDepth);\n-\treturn splitString.slice(0, number).join(\"\\u002E\");\n-};\n-\n-const adjustHslPropertyByHash = function (hash, min, max) {\n-\tconst proposedValue = hash % (max - min) + min;\n-\treturn Math.min(proposedValue, max);\n-};\n-\n-const createHslColorString = function(h,s,l) {\n-\treturn \"hsl\\u0028\" + h + \"\\u002c \" + s + \"\\u0025\\u002c \" + l + \"\\u0025\\u0029\";\n-};\n-\n-const colorCell = function(d) {\n-\tif (textToSearch !== \"\" && (evaluateSearchElement(d.data.p) || evaluateSearchElement(d.data.n))) {\n-\t\treturn \"magenta\";\n-\t} else {\n-\t\treturn colorByPackage(d.data.p);\n-\t}\n-};\n-\n-const evaluateSearchElement = function(text) {\n-\tvar adjustTextToSearch = removeSpecialCharacters(textToSearch);\n-\treturn text !== undefined && removeSpecialCharacters(text).includes(adjustTextToSearch);\n-};\n-\n-const removeSpecialCharacters = function(text) {\n-\treturn Array.prototype.map.call(text.trim().toLowerCase(), element => {\n-\t\tif (specialCharactersMap.has(element)) {\n-\t\t\treturn specialCharactersMap.get(element);\n-\t\t} else {\n-\t\t\treturn element;\n-\t\t}}).join('');\n-};\n-\n-\n-const adjustTip = function(d) {\n-\tvar tipMessage = \"\".concat(d.data.n, htmlTagBr);\n-\t\n-\tif (nodeContainsChildren(d.data)) {\n-\t\tif (d.data.d && d.data.d.includes(\"|\")) {\n-\t\t\ttipMessage += createRootTable(d.data.d);\n-\t\t} else {\n-\t\t\ttipMessage += createNodeTipTable(d.data);\n-\t\t}\n-\t}\n-\t\n-\treturn tipMessage;\n-}\n-\n-const nodeContainsChildren = function(data) {\n-\treturn Array.isArray(data.c) && data.c.length;\n-}\n-\n-const createNodeTipTable = function(data) {\n-\tvar table = \"\".concat(tagOpen(\"table class='d3-flame-graph-tip'\"), tagOpen(\"tbody\"))\n-\tif (data.d === undefined) {\n-\t\ttable = table.concat(addTableRow(tootlipPackage, data.p, \"tdLabel\"), \n-\t\t\t\taddTableRow(tootlipSamples, data.v, \"tdLabel\"));\n-\t} else {\n-\t\ttable += addTableRow(tootlipDescription, data.d, \"tdCount\");\n-\t}\n-\treturn table.concat(tagClose(\"tbody\"), tagClose(\"table\"));\n-}\n-\n-const createRootTable = function(input) {\n-\tvar table = \"\";\n-\tvar tableRows = input.split(\"|\");\n-\ttable = table.concat(tagOpen(\"table class='d3-flame-graph-tip'\"), createTableHeader(), tagOpen(\"tbody\"));\n-\tvar prevCount = 0;\n-\tfor(var i=0; i < tableRows.length - 1; i++) {\n-\t\tconst rowValue = tableRows[i].split(\":\");\n-\t\ttable += addTableRow(parseInt(rowValue[0]), rowValue[1], \"tdCount\");\n-\t}\n-\ttable = table.concat(tagClose(\"tbody\"), tagClose(\"table\"));\n-\treturn table;\n-}\n-\n-const tagOpen = function(tag, cssClass) {\n-\tvar result = \"\\u003C\" + tag;\n-\tif (cssClass === undefined) {\n-\t\tresult +=\"\\u003E\";\n-\t} else {\n-\t\tvar cssExtended = \" class='\" + cssClass + \"' \\u003E\";\n-\t\tresult += cssExtended;\n-\t}\n-\treturn result;\n-}\n-const tagClose = function(tag) {\n-\treturn \"\\u003C\\u002F \"+ tag + \"\\u003E\";\n-}\n-\n-const addTableRow = function(eventCount, eventName, cssStartTd) {\n-\treturn tableTr(tableTd(eventCount, cssStartTd), tableTd(eventName));\n-}\n-\n-const createTableHeader = function() { \n-\treturn tagOpen(\"thead\").concat(tableTr(tableTh(tooltipTableThCount, \"tdLabel\"), tableTh(tooltipTableThEventType)),tagClose(\"thead\"));\n-}\n-\n-const tableTh = function(value, css) {\n-\treturn tagOpen(\"th\", css).concat(value, tagClose(\"th\"));\n-}\n-\n-const tableTd = function(value, css) {\n-\treturn tagOpen(\"td\", css).concat(value, tagClose(\"td\"));\n-}\n-\n-const tableTr = function(...elements) {\n-\treturn tagOpen(\"tr\").concat(elements.join(\"\"), tagClose(\"tr\"));\n-}\n-\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/js\/flameview.js","additions":0,"deletions":221,"binary":false,"changes":221,"status":"deleted"},{"patch":"@@ -1,56 +0,0 @@\n-#\n-#  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-#  Copyright (c) 2020, Datadog, Inc. All rights reserved.\n-#\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  The contents of this file are subject to the terms of either the Universal Permissive License \n-#  v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-#   \n-#  or the following license:\n-#   \n-#  Redistribution and use in source and binary forms, with or without modification, are permitted\n-#  provided that the following conditions are met:\n-#   \n-#  1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-#  and the following disclaimer.\n-#   \n-#  2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-#  conditions and the following disclaimer in the documentation and\/or other materials provided with\n-#  the distribution.\n-#   \n-#  3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-#  endorse or promote products derived from this software without specific prior written permission.\n-#\n-#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-#\n-FLAMEVIEW_FLAME_GRAPH=Flame Graph\n-FLAMEVIEW_ICICLE_GRAPH=Icicle Graph\n-FLAMEVIEW_SAVE_AS=Save as...\n-FLAMEVIEW_PRINT=Print\n-FLAMEVIEW_SAVE_FLAME_GRAPH_AS=Save flame graph as...\n-FLAMEVIEW_JPEG_IMAGE=JPEG image\n-FLAMEVIEW_PNG_IMAGE=PNG image\n-FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE=Stack Trace not available\n-FLAMEVIEW_SELECT_ROOT_NODE_EVENT=event\n-FLAMEVIEW_SELECT_ROOT_NODE_EVENTS=events\n-FLAMEVIEW_SELECT_ROOT_NODE_TYPE=type\n-FLAMEVIEW_SELECT_ROOT_NODE_TYPES=types\n-FLAMEVIEW_SELECT_ROOT_NODE={0} {1} of {2} {3}:\\u0020\n-FLAMEVIEW_SELECT_TITLE_EVENT_MORE_DELIMITER=,\\u0020\n-FLAMEVIEW_SELECT_TITLE_EVENT_PATTERN={0}[{1}]\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_PATTERN={0}:{1}|\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN={0}:Others... ({1} types)|\n-FLAMEVIEW_SELECT_HTML_MORE=...\n-FLAMEVIEW_SELECT_HTML_TABLE_COUNT=Count\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE=Event Type\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE=Package\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES=Samples\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION=Description\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/flameview\/messages.properties","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -1,56 +0,0 @@\n-#\n-#  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-#  Copyright (c) 2020, Datadog, Inc. All rights reserved.\n-#\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  The contents of this file are subject to the terms of either the Universal Permissive License \n-#  v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-#   \n-#  or the following license:\n-#   \n-#  Redistribution and use in source and binary forms, with or without modification, are permitted\n-#  provided that the following conditions are met:\n-#   \n-#  1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-#  and the following disclaimer.\n-#   \n-#  2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-#  conditions and the following disclaimer in the documentation and\/or other materials provided with\n-#  the distribution.\n-#   \n-#  3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-#  endorse or promote products derived from this software without specific prior written permission.\n-#\n-#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-#\n-FLAMEVIEW_FLAME_GRAPH=Flame Graph\n-FLAMEVIEW_ICICLE_GRAPH=Icicle Graph\n-FLAMEVIEW_SAVE_AS=Save as...\n-FLAMEVIEW_PRINT=Print\n-FLAMEVIEW_SAVE_FLAME_GRAPH_AS=Save flame graph as...\n-FLAMEVIEW_JPEG_IMAGE=JPEG image\n-FLAMEVIEW_PNG_IMAGE=PNG image\n-FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE=Stack Trace not available\n-FLAMEVIEW_SELECT_ROOT_NODE_EVENT=event\n-FLAMEVIEW_SELECT_ROOT_NODE_EVENTS=events\n-FLAMEVIEW_SELECT_ROOT_NODE_TYPE=type\n-FLAMEVIEW_SELECT_ROOT_NODE_TYPES=types\n-FLAMEVIEW_SELECT_ROOT_NODE={0} {1} of {2} {3}:\\u0020\n-FLAMEVIEW_SELECT_TITLE_EVENT_MORE_DELIMITER=,\\u0020\n-FLAMEVIEW_SELECT_TITLE_EVENT_PATTERN={0}[{1}]\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_PATTERN={0}:{1}|\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN={0}:Others... ({1} types)|\n-FLAMEVIEW_SELECT_HTML_MORE=...\n-FLAMEVIEW_SELECT_HTML_TABLE_COUNT=Count\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE=Event Type\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE=Package\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES=Samples\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION=Description\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/flameview\/messages_ja.properties","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -1,56 +0,0 @@\n-#\n-#  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-#  Copyright (c) 2020, Datadog, Inc. All rights reserved.\n-#\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  The contents of this file are subject to the terms of either the Universal Permissive License \n-#  v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n-#   \n-#  or the following license:\n-#   \n-#  Redistribution and use in source and binary forms, with or without modification, are permitted\n-#  provided that the following conditions are met:\n-#   \n-#  1. Redistributions of source code must retain the above copyright notice, this list of conditions\n-#  and the following disclaimer.\n-#   \n-#  2. Redistributions in binary form must reproduce the above copyright notice, this list of\n-#  conditions and the following disclaimer in the documentation and\/or other materials provided with\n-#  the distribution.\n-#   \n-#  3. Neither the name of the copyright holder nor the names of its contributors may be used to\n-#  endorse or promote products derived from this software without specific prior written permission.\n-#\n-#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n-#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n-#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n-#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n-#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n-#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-#\n-FLAMEVIEW_FLAME_GRAPH=Flame Graph\n-FLAMEVIEW_ICICLE_GRAPH=Icicle Graph\n-FLAMEVIEW_SAVE_AS=Save as...\n-FLAMEVIEW_PRINT=Print\n-FLAMEVIEW_SAVE_FLAME_GRAPH_AS=Save flame graph as...\n-FLAMEVIEW_JPEG_IMAGE=JPEG image\n-FLAMEVIEW_PNG_IMAGE=PNG image\n-FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE=Stack Trace not available\n-FLAMEVIEW_SELECT_ROOT_NODE_EVENT=event\n-FLAMEVIEW_SELECT_ROOT_NODE_EVENTS=events\n-FLAMEVIEW_SELECT_ROOT_NODE_TYPE=type\n-FLAMEVIEW_SELECT_ROOT_NODE_TYPES=types\n-FLAMEVIEW_SELECT_ROOT_NODE={0} {1} of {2} {3}:\\u0020\n-FLAMEVIEW_SELECT_TITLE_EVENT_MORE_DELIMITER=,\\u0020\n-FLAMEVIEW_SELECT_TITLE_EVENT_PATTERN={0}[{1}]\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_PATTERN={0}:{1}|\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN={0}:Others... ({1} types)|\n-FLAMEVIEW_SELECT_HTML_MORE=...\n-FLAMEVIEW_SELECT_HTML_TABLE_COUNT=Count\n-FLAMEVIEW_SELECT_HTML_TABLE_EVENT_TYPE=Event Type\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_PACKAGE=Package\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_SAMPLES=Samples\n-FLAMEVIEW_SELECT_HTML_TOOLTIP_DESCRIPTION=Description\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/flameview\/messages_zh_CN.properties","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -1,181 +0,0 @@\n-<!DOCTYPE html \"-\/\/W3C\/\/DTD XHTML 1.0 Strict\/\/EN\" \"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-strict.dtd\">\n-<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n-\n-<head>\n-\t<meta http-equiv=\"content-type\" content=\"text\/html; charset=utf-8\" \/>\n-\t<style type=\"text\/css\">%1$s<\/style>\n-\t<style type=\"text\/css\" media=\"print\">\n-\t\tbody {\n-\t\t\tbackground: #fff;\n-\t\t}\n-\n-\t\t#search {\n-\t\t\tdisplay: none;\n-\t\t}\n-\t<\/style>\n-<\/head>\n-\n-<body>\n-\t<div id=\"search\" align=\"right\">\n-\t\t<input type=\"text\" id=\"searchInput\" size=\"30\" onfocusout=\"executeSearch()\" value=\"\">\n-\t\t<img src=\"data:image\/png;base64, %2$s\" width=\"12\" height=\"12\">\n-\t<\/div>\n-\t<div id=\"chart\"><\/div>\n-\t<script type=\"text\/javascript\">\n-\t%3$s\n-\t<\/script>\n-\t<script type=\"text\/javascript\">\n-\t%4$s\n-\t<\/script>\n-\t<script type=\"text\/javascript\">\n-\t\t\n-\t\tconst minSearchTextSize = 3;\n-\t\tvar tooltipTableThCount;\n-\t\tvar tooltipTableThEventType;\n-\t\tvar tootlipPackage;\n-\t\tvar tootlipDescription;\n-\t\tvar tootlipSamples;\n-\t\tvar textToSearch = \"\";\n-\t\tvar flameGraph;\n-\t\tvar currentJson;\n-\t\t\n-\t\tconst packageInputField = document.getElementById(\"searchInput\");\n-\t\tpackageInputField.addEventListener(\"keyup\", function(event) {\n-\t\t\t\tif (event.keyCode === 13) {\n-\t\t\t\t\texecuteSearch();\t\n-\t\t\t\t} else if (event.keyCode === 8 && packageInputField.value.length === 0) {\n-\t\t\t\t\texecuteSearch();\t\t\n-\t\t\t\t} else if (packageInputField.value.length > minSearchTextSize) {\n-\t\t\t\t\texecuteSearch();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t);\n-\t\t\n-\t\tfunction configureTooltipText(ct, et, pt, st, dt) {\n-\t\t\ttooltipTableThCount = ct;\n-\t\t\ttooltipTableThEventType = et;\n-\t\t\ttootlipPackage = pt;\n-\t\t\ttootlipSamples = st;\n-\t\t\ttootlipDescription = dt;\n-\t\t};\n-\t\t\n-\t\tconst tip = flamegraph.tooltip.defaultFlamegraphTooltip()\n-\t\t\t.html(adjustTip);\n-\n-\t\tfunction processGraph(jsonObj, viewInverted) {\n-\t\t\tflameGraph = flamegraph()\n-\t\t\t\t.width(windowSize())\n-\t\t\t\t.cellHeight(18)\n-\t\t\t\t.transitionDuration(320)\n-\t\t\t\t.minFrameSize(5)\n-\t\t\t\t.transitionEase(d3.easeCubic)\n-\t\t\t\t.sort(true)\n-\t\t\t\t.title(\"\")\n-\t\t\t\t.inverted(viewInverted)\n-\t\t\t\t.tooltip(tip)\n-\t\t\t\t.color(colorCell);\n-\t\t\tcurrentJson = jsonObj;\n-\t\t\td3.select(\"#chart\")\n-\t\t\t\t.datum(currentJson)\n-\t\t\t\t.call(flameGraph);\n-\t\t};\n-\t\t\n-\t\tfunction icicleView(viewInverted) {\n-\t\t\tflameGraph.inverted(viewInverted)\n-\t\t\t\t\t\t.resetZoom();\n-\t\t}\n-\n-\t\tfunction executeSearch() {\n-\t\t\tconst inputText = removeSpecialCharacters(packageInputField.value);\n-\t\t\tif (textToSearch !== inputText) {\n-\t\t\t\ttextToSearch = removeSpecialCharacters(inputText);\n-\t\t\t\tflameGraph.search(\"\");\n-\t\t\t}\t\t\n-\t\t};\n-\n-\t\tfunction windowSize() {\n-\t\t\treturn Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n-\t\t};\n-\n-\t\tfunction resizeFlameGraph() {\n-\t\t\tif (flameGraph) {\n-\t\t\t\tflameGraph.width(windowSize());\n-\t\t\t\td3.select(\"#chart\")\n-\t\t\t\t\t.datum(currentJson)\n-\t\t\t\t\t.call(flameGraph);\n-\t\t\t}\n-\t\t};\n-\n-\t\tfunction serializeFlameGraph(svgNode) {\n-\t\t\tvar clone = svgNode.cloneNode(true);\n-\t\t\tvar style = document.createElement('style');\n-\t\t\tstyle.innerHTML =\n-\t\t\t\t\t\".d3-flame-graph rect {\" +\n-\t\t\t\t\t\"\tstroke: #EEEEEE;\" +\n-\t\t\t\t\t\"\tfill-opacity: .8;\" +\n-\t\t\t\t\t\"}\" +\n-\t\t\t\t\t\".d3-flame-graph rect:hover {\" +\n-\t\t\t\t\t\"\tstroke: #474747;\" +\n-\t\t\t\t\t\"\tstroke-width: 0.5;\" +\n-\t\t\t\t\t\"\tcursor: pointer;\" +\n-\t\t\t\t\t\"}\" +\n-\t\t\t\t\t\".d3-flame-graph-label {\" +\n-\t\t\t\t\t\"\tpointer-events: none;\" +\n-\t\t\t\t\t\"\twhite-space: nowrap;\" +\n-\t\t\t\t\t\"\ttext-overflow: ellipsis;\" +\n-\t\t\t\t\t\"\toverflow: hidden;\" +\n-\t\t\t\t\t\"\tfont-size: 12px;\" +\n-\t\t\t\t\t\"\tfont-family: Verdana;\" +\n-\t\t\t\t\t\"\tmargin-left: 4px;\" +\n-\t\t\t\t\t\"\tmargin-right: 4px;\" +\n-\t\t\t\t\t\"\tline-height: 1.5;\" +\n-\t\t\t\t\t\"\tpadding: 0 0 0;\" +\n-\t\t\t\t\t\"\tfont-weight: 400;\" +\n-\t\t\t\t\t\"\tcolor: black;\" +\n-\t\t\t\t\t\"\ttext-align: left;\" +\n-\t\t\t\t\t\"}\";\n-\t\t\tclone.appendChild(style);\n-\n-\t\t\treturn new XMLSerializer().serializeToString(clone);\n-\t\t};\n-\n-\t\tfunction rasterizeSvg(xml, width, height, type, callback) {\n-\t\t\tvar image = document.createElement('img');\n-\t\t\timage.onload = function () {\n-\t\t\t\ttry {\n-\t\t\t\t\tvar canvas = document.createElement('canvas');\n-\t\t\t\t\tcanvas.setAttribute(\"width\", width);\n-\t\t\t\t\tcanvas.setAttribute(\"height\", height);\n-\n-\t\t\t\t\tif (type !== \"image\/png\") {\n-\t\t\t\t\t\t\/\/ fill opaque background\n-\t\t\t\t\t\tcanvas.getContext('2d').fillStyle = 'white';\n-\t\t\t\t\t\tcanvas.getContext('2d').fillRect(0, 0, width, height);\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tcanvas.getContext('2d').drawImage(image, 0, 0);\n-\n-\t\t\t\t\tvar b64 = canvas.toDataURL(type, 1);\n-\t\t\t\t\tcallback(b64.substring(b64.indexOf('base64,') + 7));\n-\t\t\t\t} catch (e) {\n-\t\t\t\t\tcallback(undefined, e.message)\n-\t\t\t\t}\n-\n-\t\t\t};\n-\t\t\timage.src = 'data:image\/svg+xml;base64,' + btoa(xml);\n-\t\t};\n-\n-\t\tfunction exportFlameGraph(type, callbackName) {\n-\t\t\tvar callback = window[callbackName].bind(this);\n-\t\t\ttry {\n-\t\t\t\tvar svg = document.querySelectorAll('#chart svg')[0];\n-\t\t\t\tvar xml = serializeFlameGraph(svg);\n-\t\t\t\trasterizeSvg(xml, svg.getAttribute(\"width\"), svg.getAttribute(\"height\"), type, callback);\n-\t\t\t} catch (e) {\n-\t\t\t\tcallback(undefined, e.message);\n-\t\t\t}\n-\t\t};\n-\n-\t<\/script>\n-<\/body>\n-<\/html>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/resources\/page.template","additions":0,"deletions":181,"binary":false,"changes":181,"status":"deleted"},{"patch":"@@ -90,1 +90,0 @@\n-\t\t<module>org.openjdk.jmc.flightrecorder.flameview<\/module>\n","filename":"application\/pom.xml","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}