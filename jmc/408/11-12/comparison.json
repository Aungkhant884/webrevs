{"files":[{"patch":"@@ -50,0 +50,1 @@\n+import java.awt.image.BufferedImage;\n@@ -423,2 +424,1 @@\n-\t\tvar embedSize = embeddingComposite.getSize();\n-\t\tjava.awt.Color bgColorAwtColor = SWT_AWTBridge.toAWTColor(container.getBackground());\n+\t\tvar bgColorAwtColor = SWT_AWTBridge.toAWTColor(container.getBackground());\n@@ -483,1 +483,1 @@\n-\t\t\tjava.awt.Point pointOnCanvas = SwingUtilities.convertPoint(scrollPane, mouseEvent.getPoint(), canvas);\n+\t\t\tvar pointOnCanvas = SwingUtilities.convertPoint(scrollPane, mouseEvent.getPoint(), canvas);\n@@ -485,2 +485,1 @@\n-\t\t\tjava.awt.Point componentPoint = SwingUtilities.convertPoint(canvas, pointOnCanvas,\n-\t\t\t\t\tflamegraphView.component);\n+\t\t\tvar componentPoint = SwingUtilities.convertPoint(canvas, pointOnCanvas, flamegraphView.component);\n@@ -630,2 +629,22 @@\n-                        ImageIO.write(\n-                                generator.get(),\n+                    \tvar renderImg = generator.get();\n+                    \t\n+                    \tvar img = switch(type) {\n+                    \t\tcase \"png\" -> renderImg;\n+                    \t\tcase \"jpg\" -> {\n+                    \t\t\t\/\/ JPG does not have an alpha channel, and ImageIO.write will simply write a 0 byte file\n+                    \t\t\t\/\/ to workaround this it is required to copy the image to a BufferedImage without alpha channel\n+                            \tvar newBufferedImage = new BufferedImage(\n+                            \t\t\trenderImg.getWidth(),\n+                            \t\t\trenderImg.getHeight(),\n+                            \t\t\tBufferedImage.TYPE_INT_RGB\n+                            \t\t\t);\n+\t\t\t\t\t\t\t\trenderImg.copyData(newBufferedImage.getRaster());\n+\t\t\t\t\t\t\t\t\n+                \t\t\t\tyield newBufferedImage;\n+                    \t\t}\n+                    \t\tdefault -> throw new IllegalStateException(\"Type is checked above\");\n+                    \t};\n+                    \t\n+                    \t\n+                        var result = ImageIO.write(\n+                                img,\n","filename":"application\/org.openjdk.jmc.flightrecorder.flamegraph\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flamegraph\/views\/FlamegraphSwingView.java","additions":26,"deletions":7,"binary":false,"changes":33,"status":"modified"}]}