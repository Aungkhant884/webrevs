{"files":[{"patch":"@@ -3,1 +3,1 @@\n- * \n+ *\n@@ -13,1 +13,1 @@\n- * \n+ *\n@@ -16,1 +16,1 @@\n- * \n+ *\n@@ -20,1 +20,1 @@\n- * \n+ *\n@@ -23,1 +23,1 @@\n- * \n+ *\n@@ -133,0 +133,4 @@\n+\t\/**\n+\t * Generates the transformation for instantiating the event type, setting its parameter and\n+\t * field attributes and call begin().\n+\t *\/\n@@ -138,0 +142,2 @@\n+\n+\t\t\/\/ write attribute for each parameter\n@@ -156,0 +162,1 @@\n+\t\t\/\/ write attribute for each event field\n@@ -164,1 +171,2 @@\n-\t\t\tif (transformDescriptor.isAllowedEventFieldType(field, refChain.getType())) {\n+\t\t\tType fieldType = refChain.getType();\n+\t\t\tif (transformDescriptor.isAllowedEventFieldType(field, fieldType)) {\n@@ -167,1 +175,11 @@\n-\t\t\t\twriteAttribute(field, refChain.getType());\n+\n+\t\t\t\tif (field.hasConverter()) {\n+\t\t\t\t\tfieldType = convertify(mv, field, fieldType);\n+\t\t\t\t} else {\n+\t\t\t\t\tif (TypeUtils.shouldStringify(field, fieldType)) {\n+\t\t\t\t\t\tTypeUtils.stringify(mv);\n+\t\t\t\t\t\tfieldType = TypeUtils.STRING_TYPE;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\twriteAttribute(field, fieldType);\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/jfr\/impl\/JFRMethodAdvisor.java","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"}]}