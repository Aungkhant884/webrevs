{"files":[{"patch":"@@ -3,2 +3,2 @@\n-   Copyright (c) 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n-   Copyright (c) 2020, 2021 Red Hat Inc. All rights reserved.\n+   Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2020, 2021, Red Hat Inc. All rights reserved.\n@@ -99,0 +99,39 @@\n+     <extension\n+       name=\"Menu contribution for create probe\"\n+       point=\"org.eclipse.ui.menus\">\n+        <menuContribution\n+           locationURI=\"popup:org.eclipse.ui.popup.any?after=group.top\">\n+        <command\n+              commandId=\"org.openjdk.jmc.console.agent.contribution.CreateMethodProbeHandler\"\n+              label=\"Create Method Probe\"\n+              defaultHandler=\"org.openjdk.jmc.console.agent.contribution.CreateMethodProbeHandler\">\n+           <visibleWhen>\n+              <with variable=\"activeMenuSelection\">\n+                 <iterate>\n+                    <or>\n+                       <adapt type=\"org.openjdk.jmc.common.IMCFrame\" \/>\n+                       <adapt type=\"org.openjdk.jmc.common.IMCMethod\" \/>\n+                    <\/or>\n+                 <\/iterate>\n+                 <count value=\"1\" \/>\n+              <\/with>\n+           <\/visibleWhen>\n+        <\/command>\n+     <\/menuContribution>\n+     <\/extension>\n+      <extension\n+       name=\"Commands for creating Probe\"\n+       point=\"org.eclipse.ui.commands\">\n+    <command\n+          defaultHandler=\"org.openjdk.jmc.console.agent.contribution.CreateMethodProbeHandler\"\n+          id=\"org.openjdk.jmc.console.agent.CreateMethodProbeHandler\"\n+          name=\"Create Method Probe\">\n+    <\/command>\n+    <\/extension>\n+      <extension\n+            point=\"org.eclipse.ui.handlers\">\n+         <handler\n+               class=\"org.openjdk.jmc.console.agent.contribution.CreateMethodProbeHandler\"\n+               commandId=\"org.openjdk.jmc.console.agent.contribution.CreateMethodProbeHandler\">\n+         <\/handler>\n+      <\/extension>\n","filename":"application\/org.openjdk.jmc.console.agent\/plugin.xml","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Red Hat Inc. All rights reserved.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ *\n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+package org.openjdk.jmc.console.agent.contribution;\n+\n+import org.eclipse.jface.dialogs.Dialog;\n+import org.eclipse.jface.wizard.IWizardPage;\n+import org.eclipse.swt.widgets.Shell;\n+import org.openjdk.jmc.console.agent.manager.model.IPreset;\n+import org.openjdk.jmc.ui.wizards.OnePageWizardDialog;\n+\n+public class CreateMethodProbeDialog extends OnePageWizardDialog {\n+\n+\tpublic CreateMethodProbeDialog(Shell parent, IWizardPage page) {\n+\t\tsuper(parent, page);\n+\t}\n+\n+\tpublic static Dialog create(Shell parent, IPreset preset) {\n+\t\tCreateMethodProbeDialog page = new CreateMethodProbeDialog(parent, new CreateMethodProbePage(preset));\n+\t\treturn page;\n+\t}\n+\n+}\n","filename":"application\/org.openjdk.jmc.console.agent\/src\/main\/java\/org\/openjdk\/jmc\/console\/agent\/contribution\/CreateMethodProbeDialog.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Red Hat Inc. All rights reserved.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ *\n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+package org.openjdk.jmc.console.agent.contribution;\n+\n+import java.io.IOException;\n+import java.util.logging.Logger;\n+\n+import org.eclipse.jface.dialogs.Dialog;\n+import org.eclipse.jface.viewers.ISelection;\n+import org.eclipse.jface.viewers.IStructuredSelection;\n+import org.eclipse.swt.widgets.Display;\n+import org.eclipse.swt.widgets.Shell;\n+import org.openjdk.jmc.common.IMCMethod;\n+import org.openjdk.jmc.console.agent.manager.model.IEvent;\n+import org.openjdk.jmc.console.agent.manager.model.IEvent.Location;\n+import org.openjdk.jmc.console.agent.manager.model.IPreset;\n+import org.openjdk.jmc.console.agent.manager.model.PresetRepository;\n+import org.openjdk.jmc.console.agent.manager.model.PresetRepositoryFactory;\n+import org.openjdk.jmc.flightrecorder.stacktrace.StacktraceFrame;\n+import org.openjdk.jmc.ui.common.util.AdapterUtil;\n+import org.openjdk.jmc.ui.idesupport.ObjectContributionMenuSelectionListener;\n+\n+public class CreateMethodProbeHandler extends ObjectContributionMenuSelectionListener {\n+\n+\tprivate static Logger logger = Logger.getLogger(CreateMethodProbeHandler.class.getName());\n+\n+\t@Override\n+\tpublic void execute(ISelection selection) {\n+\t\tif (selection instanceof IStructuredSelection && !selection.isEmpty()) {\n+\t\t\tIStructuredSelection structuredSelection = (IStructuredSelection) selection;\n+\t\t\tif (structuredSelection.getFirstElement() instanceof IMCMethod) {\n+\t\t\t\tIMCMethod method = AdapterUtil.getAdapter(((IStructuredSelection) selection).getFirstElement(),\n+\t\t\t\t\t\tIMCMethod.class);\n+\t\t\t\tcreateMethodProbe(method);\n+\t\t\t} else if (structuredSelection.getFirstElement() instanceof StacktraceFrame) {\n+\t\t\t\tStacktraceFrame frame = (StacktraceFrame) structuredSelection.getFirstElement();\n+\t\t\t\tcreateMethodProbe(frame.getFrame().getMethod());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void createMethodProbe(IMCMethod method) {\n+\t\tPresetRepository repository = PresetRepositoryFactory.createSingleton();\n+\t\tIPreset preset = repository.createPreset();\n+\t\tIEvent event = preset.createEvent();\n+\t\tpreset.setFileName(method.getMethodName() + \".xml\"); \/\/$NON-NLS-1$\n+\t\tevent.setMethodName(method.getMethodName());\n+\t\tevent.setMethodDescriptor(method.getFormalDescriptor());\n+\t\tevent.setClazz(method.getType().getFullName());\n+\t\tevent.setLocation(Location.WRAP);\n+\t\tpreset.addEvent(event);\n+\t\topenUserDialog(preset);\n+\t\tpreset.save();\n+\t\ttry {\n+\t\t\trepository.addPreset(preset);\n+\t\t} catch (IOException e) {\n+\t\t\tlogger.severe(e.toString());\n+\t\t}\n+\t}\n+\n+\tprivate void openUserDialog(IPreset preset) {\n+\t\tShell shell = Display.getCurrent().getActiveShell();\n+\t\tDialog dialog = CreateMethodProbeDialog.create(shell, preset);\n+\t\tdialog.setBlockOnOpen(true);\n+\t\tdialog.open();\n+\t}\n+\n+}\n","filename":"application\/org.openjdk.jmc.console.agent\/src\/main\/java\/org\/openjdk\/jmc\/console\/agent\/contribution\/CreateMethodProbeHandler.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Red Hat Inc. All rights reserved.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ *\n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+package org.openjdk.jmc.console.agent.contribution;\n+\n+import org.openjdk.jmc.console.agent.wizards.BaseWizardPage;\n+import org.eclipse.swt.SWT;\n+import org.eclipse.swt.custom.ScrolledComposite;\n+import org.eclipse.swt.events.ModifyListener;\n+import org.eclipse.swt.layout.GridData;\n+import org.eclipse.swt.layout.GridLayout;\n+import org.eclipse.swt.widgets.Composite;\n+import org.eclipse.swt.widgets.Text;\n+import org.openjdk.jmc.console.agent.manager.model.IPreset;\n+import org.openjdk.jmc.console.agent.messages.internal.Messages;\n+\n+public class CreateMethodProbePage extends BaseWizardPage {\n+\n+\tprivate Text presetName;\n+\tprivate IPreset preset;\n+\n+\tpublic CreateMethodProbePage(IPreset preset) {\n+\t\tsuper(Messages.ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_TITLE);\n+\t\tthis.preset = preset;\n+\t}\n+\n+\t@Override\n+\tpublic void createControl(Composite parent) {\n+\t\tinitializeDialogUnits(parent);\n+\n+\t\tsetTitle(Messages.ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_TITLE);\n+\t\tsetDescription(Messages.ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_DESCRIPTION);\n+\n+\t\tScrolledComposite sc = new ScrolledComposite(parent, SWT.H_SCROLL | SWT.V_SCROLL);\n+\t\tComposite container = new Composite(sc, SWT.NONE);\n+\t\tsc.setContent(container);\n+\n+\t\tGridLayout layout = new GridLayout();\n+\t\tcontainer.setLayout(layout);\n+\n+\t\tcreateFileNameContainer(container).setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));\n+\n+\t\tpopulateUI();\n+\t\tbindListeners();\n+\n+\t\tsc.setExpandHorizontal(true);\n+\t\tsc.setExpandVertical(true);\n+\t\tsc.setMinSize(container.computeSize(SWT.DEFAULT, SWT.DEFAULT));\n+\t\tsetControl(sc);\n+\t}\n+\n+\tprivate Composite createFileNameContainer(Composite parent) {\n+\t\tComposite container = new Composite(parent, SWT.NONE);\n+\t\tint cols = 5;\n+\t\tGridLayout layout = new GridLayout(cols, false);\n+\t\tlayout.horizontalSpacing = 8;\n+\t\tcontainer.setLayout(layout);\n+\n+\t\tpresetName = createTextInput(container, cols,\n+\t\t\t\tMessages.ProbeCreationPage_MESSAGE_PROBE_CREATION_SET_NAME_MESSAGE,\n+\t\t\t\tMessages.ProbeCreationPage_MESSAGE_PROBE_CREATION_SET_NAME_DESCRIPTION);\n+\n+\t\treturn container;\n+\t}\n+\n+\tprivate void bindListeners() {\n+\t\tpresetName.addModifyListener(\n+\t\t\t\thandleExceptionIfAny((ModifyListener) e -> preset.setFileName(presetName.getText())));\n+\t}\n+\n+\tprivate void populateUI() {\n+\t\tpresetName.setText(preset.getFileName());\n+\t}\n+\n+}\n","filename":"application\/org.openjdk.jmc.console.agent\/src\/main\/java\/org\/openjdk\/jmc\/console\/agent\/contribution\/CreateMethodProbePage.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -173,0 +173,4 @@\n+\tpublic static String ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_TITLE;\n+\tpublic static String ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_DESCRIPTION;\n+\tpublic static String ProbeCreationPage_MESSAGE_PROBE_CREATION_SET_NAME_MESSAGE;\n+\tpublic static String ProbeCreationPage_MESSAGE_PROBE_CREATION_SET_NAME_DESCRIPTION;\n","filename":"application\/org.openjdk.jmc.console.agent\/src\/main\/java\/org\/openjdk\/jmc\/console\/agent\/messages\/internal\/Messages.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -185,0 +185,5 @@\n+ProbeCreationPage_MESSAGE_PROBE_CREATION_SET_NAME_MESSAGE=Preset Name\n+ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_TITLE=Create Method Probe\n+ProbeCreationPage_MESSAGE_PROBE_CREATION_PAGE_DESCRIPTION=Provide a name for the generated probe preset.\n+ProbeCreationPage_MESSAGE_PROBE_CREATION_SET_NAME_DESCRIPTION=Name for the Generated Preset\n+\n","filename":"application\/org.openjdk.jmc.console.agent\/src\/main\/resources\/org\/openjdk\/jmc\/console\/agent\/messages\/internal\/messages.properties","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}