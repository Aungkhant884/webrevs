{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.io.IOException;\n@@ -108,10 +109,1 @@\n-\t\t\t\t\tLEB128Writer writer = chunkDataQueue.poll(500, TimeUnit.MILLISECONDS);\n-\t\t\t\t\tif (writer != null) {\n-\t\t\t\t\t\tList<LEB128Writer> writers = new ArrayList<>();\n-\t\t\t\t\t\twriters.add(writer);\n-\t\t\t\t\t\tchunkDataQueue.drainTo(writers);\n-\n-\t\t\t\t\t\tfor (LEB128Writer w : writers) {\n-\t\t\t\t\t\t\tglobalWriter.writeBytes(w.export());\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+\t\t\t\t\tprocessChunkDataQueue(500, TimeUnit.MILLISECONDS);\n@@ -119,0 +111,2 @@\n+\t\t\t\t\/\/ process any outstanding elements in the queue\n+\t\t\t\tprocessChunkDataQueue(1, TimeUnit.NANOSECONDS);\n@@ -125,0 +119,13 @@\n+\tprivate void processChunkDataQueue(long pollTimeout, TimeUnit timeUnit) throws InterruptedException {\n+\t\tLEB128Writer writer = chunkDataQueue.poll(pollTimeout, timeUnit);\n+\t\tif (writer != null) {\n+\t\t\tList<LEB128Writer> writers = new ArrayList<>();\n+\t\t\twriters.add(writer);\n+\t\t\tchunkDataQueue.drainTo(writers);\n+\n+\t\t\tfor (LEB128Writer w : writers) {\n+\t\t\t\tglobalWriter.writeBytes(w.export());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n@@ -127,0 +134,1 @@\n+\t\tSystem.err.println(\"=== rotate chunk\");\n@@ -142,1 +150,1 @@\n-\tpublic void close() throws Exception {\n+\tpublic void close() throws IOException {\n@@ -161,1 +169,7 @@\n-\t\t\t\tif (!chunkDataMergingService.awaitTermination(5, TimeUnit.SECONDS)) {\n+\t\t\t\tboolean flushed = false;\n+\t\t\t\ttry {\n+\t\t\t\t\tflushed = chunkDataMergingService.awaitTermination(5, TimeUnit.SECONDS);\n+\t\t\t\t} catch (InterruptedException e) {\n+\t\t\t\t\tThread.currentThread().interrupt();\n+\t\t\t\t}\n+\t\t\t\tif (!flushed) {\n","filename":"core\/org.openjdk.jmc.flightrecorder.writer\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/RecordingImpl.java","additions":26,"deletions":12,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.io.IOException;\n@@ -164,0 +165,3 @@\n+\n+\t@Override\n+\tpublic abstract void close() throws IOException;\n","filename":"core\/org.openjdk.jmc.flightrecorder.writer\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/api\/Recording.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}