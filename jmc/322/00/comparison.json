{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Red Hat Inc. All rights reserved.\n@@ -45,0 +45,2 @@\n+import org.eclipse.jface.viewers.Viewer;\n+import org.eclipse.jface.viewers.ViewerComparator;\n@@ -46,0 +48,2 @@\n+import org.eclipse.swt.events.SelectionEvent;\n+import org.eclipse.swt.events.SelectionListener;\n@@ -47,1 +51,0 @@\n-\n@@ -56,0 +59,5 @@\n+\tprivate static final String ELLIPSIS = \"...\"; \/\/$NON-NLS-1$\n+\tprivate static final String NAME_COLUMN = \"Name\"; \/\/$NON-NLS-1$\n+\tprivate static final String SIZE_COLUMN = \"Size\"; \/\/$NON-NLS-1$\n+\tprivate static final String VALUE_COLUMN = \"Value\"; \/\/$NON-NLS-1$\n+\n@@ -61,3 +69,3 @@\n-\t\tcreateTreeViewerColumn(\"Name\", T::getName);\n-\t\tcreateTreeViewerColumn(\"Value\", T::getValue);\n-\t\tcreateTreeViewerColumn(\"Size\", T::getSize);\n+\t\tcreateTreeViewerColumn(NAME_COLUMN, T::getName);\n+\t\tcreateTreeViewerColumn(VALUE_COLUMN, T::getValue);\n+\t\tcreateTreeViewerColumn(SIZE_COLUMN, T::getSize);\n@@ -67,0 +75,27 @@\n+\n+\t\tsetComparator(new ViewerComparator() {\n+\t\t\t@Override\n+\t\t\tpublic int compare(Viewer viewer, Object e1, Object e2) {\n+\t\t\t\tJavaThingItem item1 = (JavaThingItem) e1;\n+\t\t\t\tJavaThingItem item2 = (JavaThingItem) e2;\n+\t\t\t\t\/\/ keep the overflow ellipsis row at the bottom of the view\n+\t\t\t\tif (item1.getName().equals(ELLIPSIS)) {\n+\t\t\t\t\treturn SWT.MAX;\n+\t\t\t\t} else if (item2.getName().equals(ELLIPSIS)) {\n+\t\t\t\t\treturn -SWT.MAX;\n+\t\t\t\t}\n+\t\t\t\tint result = 0;\n+\t\t\t\tint sortDirection = getTree().getSortDirection() == SWT.UP ? 1\n+\t\t\t\t\t\t: getTree().getSortDirection() == SWT.DOWN ? -1 : SWT.NONE;\n+\t\t\t\tif (getTree().getSortColumn() != null) {\n+\t\t\t\t\tif (getTree().getSortColumn().getText().equals(NAME_COLUMN)) {\n+\t\t\t\t\t\tresult = item1.getName().compareTo(item2.getName());\n+\t\t\t\t\t} else if (getTree().getSortColumn().getText().equals(VALUE_COLUMN)) {\n+\t\t\t\t\t\tresult = item1.getValue().compareTo(item2.getValue());\n+\t\t\t\t\t} else if (getTree().getSortColumn().getText().equals(SIZE_COLUMN)) {\n+\t\t\t\t\t\tresult = Integer.parseInt(item1.getSize()) - Integer.parseInt(item2.getSize());\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn result * sortDirection;\n+\t\t\t}\n+\t\t});\n@@ -82,0 +117,18 @@\n+\n+\t\tcolumn.getColumn().addSelectionListener(new SelectionListener() {\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\tint newSortDirection = SWT.DOWN;\n+\t\t\t\tif (getTree().getSortColumn() != null\n+\t\t\t\t\t\t&& getTree().getSortColumn().getText().equals(column.getColumn().getText())) {\n+\t\t\t\t\tnewSortDirection = getTree().getSortDirection() == SWT.UP ? SWT.DOWN : SWT.UP;\n+\t\t\t\t}\n+\t\t\t\tgetTree().setSortColumn(column.getColumn());\n+\t\t\t\tgetTree().setSortDirection(newSortDirection);\n+\t\t\t\trefresh();\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetDefaultSelected(SelectionEvent e) {\n+\t\t\t}\n+\t\t});\n","filename":"application\/org.openjdk.jmc.joverflow.ui\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/ui\/viewers\/JavaThingTreeViewer.java","additions":59,"deletions":6,"binary":false,"changes":65,"status":"modified"}]}