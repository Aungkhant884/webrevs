{"files":[{"patch":"@@ -0,0 +1,23 @@\n+Manifest-Version: 1.0\n+Bundle-ManifestVersion: 2\n+Bundle-Name: RJMX Test\n+Bundle-SymbolicName: org.openjdk.jmc.kubernetes.test;singleton:=true\n+Bundle-Version: 8.3.0.qualifier\n+Bundle-Vendor: Oracle Corporation\n+Bundle-RequiredExecutionEnvironment: JavaSE-1.8\n+Bundle-ActivationPolicy: lazy\n+Require-Bundle: org.junit,\n+ org.openjdk.jmc.jolokia,\n+ org.openjdk.jmc.common.test,\n+ org.eclipse.osgi;bundle-version=\"3.16.200\",\n+ org.eclipse.ui.workbench,\n+ org.openjdk.jmc.rjmx;bundle-version=\"8.3.0\",\n+ org.eclipse.ui,\n+ org.awaitility;bundle-version=\"4.0.0\",\n+ org.hamcrest;bundle-version=\"2.1.0\",\n+ org.openjdk.jmc.kubernetes;bundle-version=\"8.3.0\",\n+ com.github.tomakehurst.wiremock-standalone;bundle-version=\"2.27.2\"\n+Automatic-Module-Name: org.openjdk.jmc.jolokia.test\n+Import-Package: io.fabric8.kubernetes.client,\n+ org.openjdk.jmc.rjmx.descriptorprovider\n+Bundle-Classpath: target\/dependency\/awaitility-4.0.0.jar\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/META-INF\/MANIFEST.MF","additions":23,"deletions":0,"binary":false,"changes":23,"status":"added"},{"patch":"","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/build.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"application\/tests\/org.openjdk.jmc.jolokia.test\/build.properties","status":"copied"},{"patch":"@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved. \n+\tCopyright (c) 2021, Kantega AS. All rights reserved. DO NOT ALTER OR REMOVE \n+\tCOPYRIGHT NOTICES OR THIS FILE HEADER. The contents of this file are subject \n+\tto the terms of either the Universal Permissive License v 1.0 as shown at \n+\thttp:\/\/oss.oracle.com\/licenses\/upl or the following license: Redistribution \n+\tand use in source and binary forms, with or without modification, are permitted \n+\tprovided that the following conditions are met: 1. Redistributions of source \n+\tcode must retain the above copyright notice, this list of conditions and \n+\tthe following disclaimer. 2. Redistributions in binary form must reproduce \n+\tthe above copyright notice, this list of conditions and the following disclaimer \n+\tin the documentation and\/or other materials provided with the distribution. \n+\t3. Neither the name of the copyright holder nor the names of its contributors \n+\tmay be used to endorse or promote products derived from this software without \n+\tspecific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT \n+\tHOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, \n+\tBUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS \n+\tFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT \n+\tHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \n+\tEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT \n+\tOF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n+\tINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n+\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n+\tANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY \n+\tOF SUCH DAMAGE. -->\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\"\n+\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0<\/modelVersion>\n+\t<parent>\n+\t\t<groupId>org.openjdk.jmc<\/groupId>\n+\t\t<artifactId>missioncontrol.application.tests<\/artifactId>\n+\t\t<version>${revision}${changelist}<\/version>\n+\t<\/parent>\n+\t<artifactId>org.openjdk.jmc.kubernetes.test<\/artifactId>\n+\t<packaging>eclipse-test-plugin<\/packaging>\n+\n+\t<properties>\n+\t\t<spotless.config.path>${basedir}\/..\/..\/..\/configuration\/ide\/eclipse\/formatting\/formatting.xml<\/spotless.config.path>\n+\t<\/properties>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.awaitility<\/groupId>\n+\t\t\t<artifactId>awaitility<\/artifactId>\n+\t\t\t<version>4.0.0<\/version>\n+\t\t<\/dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.tomakehurst<\/groupId>\n+\t\t\t<artifactId>wiremock-standalone<\/artifactId>\n+\t\t\t<version>2.27.2<\/version>\n+\t\t<\/dependency>\n+\t<\/dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.eclipse.tycho<\/groupId>\n+\t\t\t\t<artifactId>tycho-compiler-plugin<\/artifactId>\n+\t\t\t\t<version>${tycho.version}<\/version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<extraClasspathElements>\n+\t\t\t\t\t\t<dependency>\n+\n+\t\t\t\t\t\t\t<groupId>org.awaitility<\/groupId>\n+\t\t\t\t\t\t\t<artifactId>awaitility<\/artifactId>\n+\t\t\t\t\t\t\t<version>4.0.0<\/version>\n+\t\t\t\t\t\t<\/dependency>\n+\n+\t\t\t\t\t<\/extraClasspathElements>\n+\t\t\t\t<\/configuration>\n+\t\t\t<\/plugin>\n+\t\t<\/plugins>\n+\t<\/build>\n+<\/project>\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/pom.xml","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,166 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Kantega AS. All rights reserved. \n+ * \n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ * \n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ * \n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ * \n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ * \n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+package org.openjdk.jmc.kubernetes;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.time.Duration;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.management.AttributeNotFoundException;\n+import javax.management.InstanceNotFoundException;\n+import javax.management.InvalidAttributeValueException;\n+import javax.management.MBeanException;\n+import javax.management.MBeanServerConnection;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.ReflectionException;\n+import javax.management.remote.JMXConnector;\n+import javax.management.remote.JMXServiceURL;\n+\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.HttpClients;\n+import org.awaitility.Awaitility;\n+import org.eclipse.core.runtime.preferences.InstanceScope;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.openjdk.jmc.common.IDescribable;\n+import org.openjdk.jmc.kubernetes.preferences.PreferenceConstants;\n+import org.openjdk.jmc.rjmx.IConnectionDescriptor;\n+import org.openjdk.jmc.rjmx.IServerDescriptor;\n+import org.openjdk.jmc.rjmx.descriptorprovider.IDescriptorListener;\n+\n+import com.github.tomakehurst.wiremock.core.WireMockConfiguration;\n+import com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer;\n+import com.github.tomakehurst.wiremock.junit.WireMockRule;\n+\n+import io.fabric8.kubernetes.client.Config;\n+\n+\/**\n+ * I test that JMX connections done with JmcJolokiaJmxConnectionProvider are functional\n+ *\/\n+@SuppressWarnings(\"restriction\")\n+public class JmcKubernetesTest {\n+\t\n+\t@ClassRule\n+\tpublic static WireMockRule wiremock=new WireMockRule(WireMockConfiguration.options()\n+\t\t    .extensions(new ResponseTemplateTransformer(true)).port(0));\n+\n+\tstatic final String jolokiaUrl=\"service:jmx:kubernetes:\/\/\/ns1\/pod-abcdef\/jolokia\";\n+\n+\tprivate static Set<String> unsafeAttributes = new HashSet<>(\n+\t\t\tArrays.asList(\"BootClassPath\", \"UsageThreshold\", \"UsageThresholdExceeded\", \"UsageThresholdCount\",\n+\t\t\t\t\t\"CollectionUsageThreshold\", \"CollectionUsageThresholdExceeded\", \"CollectionUsageThresholdCount\"));\n+\n+\tprivate static KubernetesDiscoveryListener discoveryListener;\n+\n+\tprivate static MBeanServerConnection jolokiaConnection;\n+\n+\t@BeforeClass\n+\tpublic static void connect() throws Exception {\n+\t\tCloseableHttpResponse configResponse = HttpClients.createDefault().execute(new HttpGet(wiremock.baseUrl()+\"\/mock-kube-config.yml\"));\n+\t\tAssert.assertEquals(configResponse.getStatusLine().getStatusCode(), 200);\n+\t\tFile configFile = File.createTempFile(\"mock-kube-config\", \".yml\");\n+\t\tconfigResponse.getEntity().writeTo(new FileOutputStream(configFile));\n+\t\t\/\/we set this so the KubernetesDiscoveryListener will work\n+\t\tSystem.setProperty(Config.KUBERNETES_KUBECONFIG_FILE, configFile.getAbsolutePath());\n+\t\tjolokiaConnection = getKubernetesMBeanConnector();\n+\t\tdiscoveryListener=new KubernetesDiscoveryListener();\n+\t}\n+\n+\t@Test\n+\tpublic void testExecuteOperation() throws InstanceNotFoundException, MalformedObjectNameException, MBeanException,\n+\t\t\tReflectionException, MalformedURLException, IOException {\n+\t\tjolokiaConnection.invoke(new ObjectName(\"java.lang:type=Memory\"), \"gc\", new Object[0], new String[0]);\n+\t}\n+\n+\t@Test\n+\tpublic void testReadAttribute()\n+\t\t\tthrows InstanceNotFoundException, AttributeNotFoundException, InvalidAttributeValueException,\n+\t\t\tMalformedObjectNameException, MBeanException, ReflectionException, MalformedURLException, IOException {\n+\t\tObjectName objectName = new ObjectName(\"java.lang:type=Memory\");\n+\t\tString attribute = \"Verbose\";\n+\t\tAssert.assertEquals(false, jolokiaConnection.getAttribute(objectName, attribute));\n+\n+\t}\n+\n+\tprivate static MBeanServerConnection getKubernetesMBeanConnector() throws IOException, MalformedURLException {\n+\t\tJMXConnector connector = new JmcKubernetesJmxConnectionProvider().newJMXConnector(\n+\t\t\t\tnew JMXServiceURL(jolokiaUrl), Collections.emptyMap());\n+\t\tconnector.connect();\n+\t\tMBeanServerConnection connection = connector.getMBeanServerConnection();\n+\t\treturn connection;\n+\t}\n+\n+\t@Test\n+\tpublic void testDiscover() {\n+\n+\t\tfinal AtomicInteger foundVms = new AtomicInteger(0);\n+\n+\t\t\/\/Set config so that scanning takes place\n+\t\t\/\/new JmcKubernetesPlugin();\/\/instantiate singleton\n+\t\tInstanceScope.INSTANCE.getNode(JmcKubernetesPlugin.PLUGIN_ID).put(PreferenceConstants.P_SCAN_FOR_INSTANCES, \"true\");\n+\n+\t\tdiscoveryListener.addDescriptorListener(new IDescriptorListener() {\n+\t\t\tpublic void onDescriptorDetected(\n+\t\t\t\tIServerDescriptor serverDescriptor, String path, JMXServiceURL url,\n+\t\t\t\tIConnectionDescriptor connectionDescriptor, IDescribable provider) {\n+\t\t\t\tfoundVms.getAndIncrement();\n+\t\t\t}\n+\n+\t\t\tpublic void onDescriptorRemoved(String descriptorId) {\n+\t\t\t\tfoundVms.getAndDecrement();\n+\t\t\t}\n+\n+\t\t});\n+\t\t\/\/ Test that at least one VM (the one running the test was discovered)\n+\t\tAwaitility.await().atMost(Duration.ofSeconds(5)).until(() -> foundVms.get() > 0);\n+\t}\n+\n+\t@AfterClass\n+\tpublic static void stopServer() throws Exception {\n+\t\tdiscoveryListener.shutdown();\n+\t}\n+\n+}\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/java\/org\/openjdk\/jmc\/kubernetes\/JmcKubernetesTest.java","additions":166,"deletions":0,"binary":false,"changes":166,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+{\n+   \"request\" : {\n+      \"attribute\" : \"Verbose\",\n+      \"mbean\" : \"java.lang:type=Memory\",\n+      \"type\" : \"read\"\n+   },\n+   \"status\" : 200,\n+   \"timestamp\" : 1658563869,\n+   \"value\" : false\n+}\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/jolokia-attribute.json","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+{\n+   \"request\" : {\n+      \"mbean\" : \"java.lang:type=Memory\",\n+      \"operation\" : \"gc()\",\n+      \"type\" : \"exec\"\n+   },\n+   \"status\" : 200,\n+   \"timestamp\" : 1658567003,\n+   \"value\" : null\n+}\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/jolokia-exec.json","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+{\n+\t\"request\": {\n+\t\t\"type\": \"version\"\n+\t},\n+\t\"value\": {\n+\t\t\"agent\": \"1.7.1\",\n+\t\t\"protocol\": \"7.2\",\n+\t\t\"config\": {\n+\t\t\t\"listenForHttpService\": \"true\",\n+\t\t\t\"authIgnoreCerts\": \"false\",\n+\t\t\t\"agentId\": \"192.168.1.104-28660-5bd82fed-servlet\",\n+\t\t\t\"debug\": \"false\",\n+\t\t\t\"agentType\": \"servlet\",\n+\t\t\t\"policyLocation\": \"classpath:\\\/jolokia-access.xml\",\n+\t\t\t\"agentContext\": \"\\\/jolokia\",\n+\t\t\t\"serializeException\": \"false\",\n+\t\t\t\"mimeType\": \"text\\\/plain\",\n+\t\t\t\"dispatcherClasses\": \"org.jolokia.http.Jsr160ProxyNotEnabledByDefaultAnymoreDispatcher\",\n+\t\t\t\"authMode\": \"basic\",\n+\t\t\t\"authMatch\": \"any\",\n+\t\t\t\"streaming\": \"true\",\n+\t\t\t\"canonicalNaming\": \"true\",\n+\t\t\t\"historyMaxEntries\": \"10\",\n+\t\t\t\"allowErrorDetails\": \"false\",\n+\t\t\t\"allowDnsReverseLookup\": \"true\",\n+\t\t\t\"realm\": \"jolokia\",\n+\t\t\t\"includeStackTrace\": \"false\",\n+\t\t\t\"restrictorClass\": \"io.hawt.system.RBACRestrictor\",\n+\t\t\t\"mbeanQualifier\": \"qualifier=hawtio\",\n+\t\t\t\"useRestrictorService\": \"false\",\n+\t\t\t\"debugMaxEntries\": \"100\"\n+\t\t},\n+\t\t\"info\": {\n+\t\t\t\"product\": \"jetty\",\n+\t\t\t\"vendor\": \"Eclipse\",\n+\t\t\t\"version\": \"9.4.z-SNAPSHOT\"\n+\t\t}\n+\t},\n+\t\"timestamp\": 1658556959,\n+\t\"status\": 200\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/jolokia-version.json","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+{\n+   \"request\" : {\n+      \"path\" : \"java.lang\/type=Memory\",\n+      \"type\" : \"list\"\n+   },\n+   \"status\" : 200,\n+   \"timestamp\" : 1658566168,\n+   \"value\" : {\n+      \"attr\" : {\n+         \"HeapMemoryUsage\" : {\n+            \"desc\" : \"HeapMemoryUsage\",\n+            \"rw\" : false,\n+            \"type\" : \"javax.management.openmbean.CompositeData\"\n+         },\n+         \"NonHeapMemoryUsage\" : {\n+            \"desc\" : \"NonHeapMemoryUsage\",\n+            \"rw\" : false,\n+            \"type\" : \"javax.management.openmbean.CompositeData\"\n+         },\n+         \"ObjectName\" : {\n+            \"desc\" : \"ObjectName\",\n+            \"rw\" : false,\n+            \"type\" : \"javax.management.ObjectName\"\n+         },\n+         \"ObjectPendingFinalizationCount\" : {\n+            \"desc\" : \"ObjectPendingFinalizationCount\",\n+            \"rw\" : false,\n+            \"type\" : \"int\"\n+         },\n+         \"Verbose\" : {\n+            \"desc\" : \"Verbose\",\n+            \"rw\" : true,\n+            \"type\" : \"boolean\"\n+         }\n+      },\n+      \"class\" : \"sun.management.MemoryImpl\",\n+      \"desc\" : \"Information on the management interface of the MBean\",\n+      \"op\" : {\n+         \"gc\" : {\n+            \"args\" : [],\n+            \"desc\" : \"gc\",\n+            \"ret\" : \"void\"\n+         }\n+      }\n+   }\n+}\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/memory-list.json","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,18 @@\n+apiVersion: v1\n+clusters:\n+- cluster:\n+#    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1URXlPREE1TWpFek0xb1hEVE14TVRFeU5qQTVNakV6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUxtCnZPY2t1K3p4d2h3ZlhrRWF0TWF6Tm13dklVRVNDVDVrQncxZHJRZjUrZGJra014RWg3azlOcEJFbVlhWi9GUTAKOUJUT09ObG10S1F3dW9ZSVh1YXF2Y1QxS2ZBNW5Dc240d2puSkFlcW9ya2dUeXdYMGlzYmMwZkJqakE2WnJLaAp5RVBORGc2NUYwN21ENVlmU2taUi9zMzZTa3ZhdTRUdEF4aUpJS3dvL0p6aktkRzJXSTRFeDJqa2todnZsZEljCmk4ZnM3UHQ0Z0p5NEEyVWlWOEswd1RVN0Q1MjJPTTlBZWpBSzU0YlVVSWpmeHFtdWRtM3VwcFZlRG5KN0RkWlcKdEJnWWYrV3dLVVFCRmE2SW9xQy9Qcnk0NFYrOUNOUWhDSXVFdG04YWIxZGxOWWRDakxEcU1wcFVhVzJFc0dtNQpucUdZeFFHaENJejY4eTN1UDZrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGOWtqaDlXcGdzSytESXNJeUMvenMyQnZDUTdNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdmdqRnA5QytJcTk5cWJXZ1V5d1BKbmFYUTVBZFRVTzI1N0xzQk9vcEszVUVERnlBSQphaU8yRWYxNzV1SHI4SXRyOEx1c1JDYkRqMnlOMkJEbnNlME90QXRzbkg2aC9wY0wvYUp2QzRCb1I3Ykt1Y2pWCjN6dXRXSUtJTFJmdnJ5VklxK1g5WndoVWlMTDFORVg1M2FtSEZkSllmWDNaSnFTL0ZmaERROGVaK3pjSGpieEcKcFB5LzdhMDkzYzkxTDZQODZpTHRXeVBZWDJaSzNDQ0tHQkE2a2l0YUdQb1gxTG9DYWRYbUpjVEdFdncyUzV2Rwo2NWJEbkszQTFCUFlBVzdic0V1eHV5QUVXQ2dhNHdWOXdjcEZOeE1hZE1JQUFhdk5TaFFxK3pvQ1N0ZlBNMEtRCjNGOXJVSVVqVjBpc2RTMmV4Qk0reno0TkEvWTV6Y0d5TFB5TQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n+    server: {{request.baseUrl}}\/kubernetes\/\n+  name: test\n+contexts:\n+- context:\n+    cluster: test\n+    user: test\n+  name: test\n+current-context: test\n+kind: Config\n+preferences: {}\n+users:\n+- name: test\n+  user:\n+    token: eyJhbGciOiJSUzI1NiIsImtpZCI6ImxQNGNYc1htQ3Vxd0trV2IxRUEzQ090NlVXQUxDQ1ZJRWpMTjVxTEpfRWsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJqZnIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiam9sb2tpYS10b2tlbi1renBoYiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJqb2xva2lhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiZWM0MGQyODItZWY2YS00MWM2LWFlM2YtNzBiYmIzODMxYjZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Ompmcjpqb2xva2lhIn0.Ay9b6T8BxXnoEH3qbDHXctjY2TBN0Jng8t4EDGsmHhBG58Hm1sMs2nHkgnAXX92uuPPD3L7K76nA8hpJUkeyHtykhmIDcrEgJjZtiGy74bFDhfXdB8S10CIFmPxdR1zVS9IMZpSyB5B84IIg27saisLFePFQ6z4akD8rU_pO8cix1CtQt4Z0zcmg9D1YSdwn9dfSX4petEQaza6xfIIADdzJyuaj2NGVx1arYuQZ1L2_cVtNxalnPk2VcoFb1sGPEaJzo7E0uqxPqxgigRuhQ8GBT0lAC5-pFyvJOjiqg691lqwRtoOS_RclomBfgmXYcY72SFd7mNUXbKZO1ZdaIQ\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/mock-kube-config.yml","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -0,0 +1,11 @@\n+{\n+\t\"metadata\": {\n+\t\t\"clusterName\": \"test\",\n+\t\t\"labels\": {\n+\t\t\t\"jolokia\": true\n+\t\t},\n+\t\t\"name\": \"pod-abcdef\",\n+\t\t\"namespace\": \"ns1\",\n+\t\t\"selfLink\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/pod.json","additions":11,"deletions":0,"binary":false,"changes":11,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+{\n+\t\"items\": [{\n+\t\t\"metadata\": {\n+\t\t\t\"clusterName\": \"test\",\n+\t\t\t\"labels\": {\n+\t\t\t\t\"jolokia\": true\n+\t\t\t},\n+\t\t\t\"name\": \"pod-abcdef\",\n+\t\t\t\"namespace\": \"ns1\",\n+\t\t\t\"selfLink\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef\"\n+\t\t}\n+\t}]\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/pods.json","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+{\n+   \"request\" : {\n+      \"path\" : \"java.lang\/type=Runtime\",\n+      \"type\" : \"list\"\n+   },\n+   \"status\" : 200,\n+   \"timestamp\" : 1658564737,\n+   \"value\" : {\n+      \"attr\" : {\n+         \"BootClassPath\" : {\n+            \"desc\" : \"BootClassPath\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"BootClassPathSupported\" : {\n+            \"desc\" : \"BootClassPathSupported\",\n+            \"rw\" : false,\n+            \"type\" : \"boolean\"\n+         },\n+         \"ClassPath\" : {\n+            \"desc\" : \"ClassPath\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"InputArguments\" : {\n+            \"desc\" : \"InputArguments\",\n+            \"rw\" : false,\n+            \"type\" : \"[Ljava.lang.String;\"\n+         },\n+         \"LibraryPath\" : {\n+            \"desc\" : \"LibraryPath\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"ManagementSpecVersion\" : {\n+            \"desc\" : \"ManagementSpecVersion\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"Name\" : {\n+            \"desc\" : \"Name\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"ObjectName\" : {\n+            \"desc\" : \"ObjectName\",\n+            \"rw\" : false,\n+            \"type\" : \"javax.management.ObjectName\"\n+         },\n+         \"Pid\" : {\n+            \"desc\" : \"Pid\",\n+            \"rw\" : false,\n+            \"type\" : \"long\"\n+         },\n+         \"SpecName\" : {\n+            \"desc\" : \"SpecName\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"SpecVendor\" : {\n+            \"desc\" : \"SpecVendor\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"SpecVersion\" : {\n+            \"desc\" : \"SpecVersion\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"StartTime\" : {\n+            \"desc\" : \"StartTime\",\n+            \"rw\" : false,\n+            \"type\" : \"long\"\n+         },\n+         \"SystemProperties\" : {\n+            \"desc\" : \"SystemProperties\",\n+            \"rw\" : false,\n+            \"type\" : \"javax.management.openmbean.TabularData\"\n+         },\n+         \"Uptime\" : {\n+            \"desc\" : \"Uptime\",\n+            \"rw\" : false,\n+            \"type\" : \"long\"\n+         },\n+         \"VmName\" : {\n+            \"desc\" : \"VmName\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"VmVendor\" : {\n+            \"desc\" : \"VmVendor\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         },\n+         \"VmVersion\" : {\n+            \"desc\" : \"VmVersion\",\n+            \"rw\" : false,\n+            \"type\" : \"java.lang.String\"\n+         }\n+      },\n+      \"class\" : \"sun.management.RuntimeImpl\",\n+      \"desc\" : \"Information on the management interface of the MBean\"\n+   }\n+}\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/runtime-list.json","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+[\n+   {\n+      \"request\" : {\n+         \"attribute\" : \"Pid\",\n+         \"mbean\" : \"java.lang:type=Runtime\",\n+         \"type\" : \"read\"\n+      },\n+      \"status\" : 200,\n+      \"timestamp\" : 1658586915,\n+      \"value\" : 88774\n+   },\n+   {\n+      \"request\" : {\n+         \"attribute\" : \"Name\",\n+         \"mbean\" : \"java.lang:type=Runtime\",\n+         \"type\" : \"read\"\n+      },\n+      \"status\" : 200,\n+      \"timestamp\" : 1658586915,\n+      \"value\" : \"88774@Martins-MacBook-Pro-2.local\"\n+   },\n+   {\n+      \"request\" : {\n+         \"attribute\" : \"InputArguments\",\n+         \"mbean\" : \"java.lang:type=Runtime\",\n+         \"type\" : \"read\"\n+      },\n+      \"status\" : 200,\n+      \"timestamp\" : 1658586915,\n+      \"value\" : []\n+   },\n+   {\n+      \"request\" : {\n+         \"attribute\" : \"SystemProperties\",\n+         \"mbean\" : \"java.lang:type=Runtime\",\n+         \"type\" : \"read\"\n+      },\n+      \"status\" : 200,\n+      \"timestamp\" : 1658586915,\n+      \"value\" : {\n+         \"apple.awt.application.name\" : \"App\",\n+         \"file.encoding\" : \"UTF-8\",\n+         \"file.separator\" : \"\/\",\n+         \"ftp.nonProxyHosts\" : \"local|*.local|169.254\/16|*.169.254\/16\",\n+         \"hawtio.authenticationEnabled\" : \"false\",\n+         \"hawtio.redirect.scheme\" : \"http\",\n+         \"hawtio.url\" : \"http:\/\/localhost:9090\/hawtio\",\n+         \"http.nonProxyHosts\" : \"local|*.local|169.254\/16|*.169.254\/16\",\n+         \"java.class.path\" : \"\/Users\/marska\/Downloads\/hawtio-app-2.9.1.jar\",\n+         \"java.class.version\" : \"62.0\",\n+         \"java.home\" : \"\/Library\/Java\/JavaVirtualMachines\/temurin-18.jdk\/Contents\/Home\",\n+         \"java.io.tmpdir\" : \"\/var\/folders\/1f\/cdm0073x1mj1swnhtw181_4m0000gn\/T\/\",\n+         \"java.library.path\" : \"\/Users\/marska\/Library\/Java\/Extensions:\/Library\/Java\/Extensions:\/Network\/Library\/Java\/Extensions:\/System\/Library\/Java\/Extensions:\/usr\/lib\/java:.\",\n+         \"java.runtime.name\" : \"OpenJDK Runtime Environment\",\n+         \"java.runtime.version\" : \"18.0.1+10\",\n+         \"java.specification.name\" : \"Java Platform API Specification\",\n+         \"java.specification.vendor\" : \"Oracle Corporation\",\n+         \"java.specification.version\" : \"18\",\n+         \"java.vendor\" : \"Eclipse Adoptium\",\n+         \"java.vendor.url\" : \"https:\/\/adoptium.net\/\",\n+         \"java.vendor.url.bug\" : \"https:\/\/github.com\/adoptium\/adoptium-support\/issues\",\n+         \"java.vendor.version\" : \"Temurin-18.0.1+10\",\n+         \"java.version\" : \"18.0.1\",\n+         \"java.version.date\" : \"2022-04-19\",\n+         \"java.vm.compressedOopsMode\" : \"Zero based\",\n+         \"java.vm.info\" : \"mixed mode, sharing\",\n+         \"java.vm.name\" : \"OpenJDK 64-Bit Server VM\",\n+         \"java.vm.specification.name\" : \"Java Virtual Machine Specification\",\n+         \"java.vm.specification.vendor\" : \"Oracle Corporation\",\n+         \"java.vm.specification.version\" : \"18\",\n+         \"java.vm.vendor\" : \"Eclipse Adoptium\",\n+         \"java.vm.version\" : \"18.0.1+10\",\n+         \"jdk.debug\" : \"release\",\n+         \"line.separator\" : \"\\n\",\n+         \"native.encoding\" : \"UTF-8\",\n+         \"org.eclipse.jetty.util.log.class\" : \"org.eclipse.jetty.util.log.Slf4jLog\",\n+         \"os.arch\" : \"x86_64\",\n+         \"os.name\" : \"Mac OS X\",\n+         \"os.version\" : \"11.6.6\",\n+         \"path.separator\" : \":\",\n+         \"socksNonProxyHosts\" : \"local|*.local|169.254\/16|*.169.254\/16\",\n+         \"sun.arch.data.model\" : \"64\",\n+         \"sun.awt.enableExtraMouseButtons\" : \"true\",\n+         \"sun.boot.library.path\" : \"\/Library\/Java\/JavaVirtualMachines\/temurin-18.jdk\/Contents\/Home\/lib\",\n+         \"sun.cpu.endian\" : \"little\",\n+         \"sun.io.unicode.encoding\" : \"UnicodeBig\",\n+         \"sun.java.command\" : \"\/Users\/marska\/Downloads\/hawtio-app-2.9.1.jar --port 9090\",\n+         \"sun.java.launcher\" : \"SUN_STANDARD\",\n+         \"sun.jnu.encoding\" : \"UTF-8\",\n+         \"sun.management.compiler\" : \"HotSpot 64-Bit Tiered Compilers\",\n+         \"sun.stderr.encoding\" : \"UTF-8\",\n+         \"sun.stdout.encoding\" : \"UTF-8\",\n+         \"user.country\" : \"NO\",\n+         \"user.dir\" : \"\/Users\/marska\/Documents\/dev\/jmc\/jmc8\/releng\/third-party\",\n+         \"user.home\" : \"\/Users\/marska\",\n+         \"user.language\" : \"nb\",\n+         \"user.name\" : \"marska\",\n+         \"user.timezone\" : \"Asia\/Taipei\"\n+      }\n+   }\n+]\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/__files\/system-attributes.json","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPath\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef\/proxy\/jolokia\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"operation\\\":\\\"gc()\\\",\\\"mbean\\\":\\\"java.lang:type=Memory\\\",\\\"type\\\":\\\"EXEC\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"jolokia-exec.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-exec.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPath\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef\/proxy\/jolokia\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"path\\\":\\\"java.lang\/type=Memory\\\",\\\"type\\\":\\\"LIST\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"memory-list.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-list-memory.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPathPattern\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef.*\/proxy\/jolokia\/?\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"path\\\":\\\"java.lang\/type=Runtime\\\",\\\"type\\\":\\\"LIST\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"runtime-list.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-list-runtime.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPath\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef:8778\/proxy\/jolokia\/\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"type\\\":\\\"version\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"jolokia-version.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-probe-port.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPathPattern\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef.*\/proxy\/jolokia\/?\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"[{\\\"attribute\\\":\\\"Pid\\\",\\\"mbean\\\":\\\"java.lang:type=Runtime\\\",\\\"type\\\":\\\"READ\\\"},{\\\"attribute\\\":\\\"Name\\\",\\\"mbean\\\":\\\"java.lang:type=Runtime\\\",\\\"type\\\":\\\"READ\\\"},{\\\"attribute\\\":\\\"InputArguments\\\",\\\"mbean\\\":\\\"java.lang:type=Runtime\\\",\\\"type\\\":\\\"READ\\\"},{\\\"attribute\\\":\\\"SystemProperties\\\",\\\"mbean\\\":\\\"java.lang:type=Runtime\\\",\\\"type\\\":\\\"READ\\\"}]\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"system-attributes.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-probe.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPath\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef:8778\/proxy\/jolokia\/\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"type\\\":\\\"VERSION\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"jolokia-version.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-probe2-port.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPathPattern\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef.*\/proxy\/jolokia\/?\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"type\\\":\\\"VERSION\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"jolokia-version.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-probe2.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPath\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef\/proxy\/jolokia\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"attribute\\\":\\\"Verbose\\\",\\\"mbean\\\":\\\"java.lang:type=Memory\\\",\\\"type\\\":\\\"READ\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"jolokia-attribute.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jolokia-read-attribute.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"POST\",\n+\t\t\"urlPathPattern\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef.*\/proxy\/jolokia\/?\",\n+\t\t\"bodyPatterns\": [\n+\t\t\t{\n+\t\t\t\t\"equalToJson\": \"{\\\"type\\\":\\\"version\\\"}\"\n+\t\t\t}\n+\t\t]\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"jolokia-version.json\"\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/jvm-properties.json","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"GET\",\n+\t\t\"url\": \"\/mock-kube-config.yml\"\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"mock-kube-config.yml\",\n+\t\t\"transformers\": [\n+\t\t\t\"response-template\"\n+\t\t]\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/kube-config.json","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"GET\",\n+\t\t\"url\": \"\/kubernetes\/api\/v1\/namespaces\/ns1\/pods\/pod-abcdef\"\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"pod.json\",\n+\t\t\"transformers\": [\n+\t\t\t\"response-template\"\n+\t\t]\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/pod.json","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+{\n+\t\"request\": {\n+\t\t\"method\": \"GET\",\n+\t\t\"urlPath\": \"\/kubernetes\/api\/v1\/pods\"\n+\t},\n+\t\"response\": {\n+\t\t\"status\": 200,\n+\t\t\"bodyFileName\": \"pods.json\",\n+\t\t\"transformers\": [\n+\t\t\t\"response-template\"\n+\t\t]\n+\t}\n+}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.kubernetes.test\/src\/test\/resources\/mappings\/pods.json","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"}]}