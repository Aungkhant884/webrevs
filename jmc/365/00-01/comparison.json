{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2020, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Datadog, Inc. All rights reserved.\n@@ -116,0 +116,1 @@\n+import org.openjdk.jmc.common.item.ItemFilters;\n@@ -331,2 +332,6 @@\n-\t\t\tStacktraceTreeModel treeModel = new StacktraceTreeModel(items, view.frameSeparator, !view.threadRootAtTop,\n-\t\t\t\t\tattribute);\n+\t\t\tIItemCollection filteredItems = items;\n+\t\t\tif (attribute != null) {\n+\t\t\t\tfilteredItems = filteredItems.apply(ItemFilters.hasAttribute(attribute));\n+\t\t\t}\n+\t\t\tStacktraceTreeModel treeModel = new StacktraceTreeModel(filteredItems, view.frameSeparator,\n+\t\t\t\t\t!view.threadRootAtTop, attribute);\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Datadog, Inc. All rights reserved.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ *\n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n@@ -16,0 +48,1 @@\n+import org.eclipse.jface.action.Separator;\n@@ -49,1 +82,0 @@\n-\t\tsortedList.add(new Pair<>(SAMPLES, null));\n@@ -51,0 +83,2 @@\n+\t\tsortedList.add(0, new Pair<>(SAMPLES, null));\n+\t\tsortedList.add(1, new Pair<>(\"---\", null));\n@@ -91,3 +125,7 @@\n-\t\t\tActionContributionItem actionItem = new ActionContributionItem(\n-\t\t\t\t\tnew SetAttribute(item, item.right == getCurrentAttr.get()));\n-\t\t\tactionItem.fill(menu, -1);\n+\t\t\tif (item.left.equals(\"---\")) {\n+\t\t\t\t(new Separator()).fill(menu, 1);\n+\t\t\t} else {\n+\t\t\t\tActionContributionItem actionItem = new ActionContributionItem(\n+\t\t\t\t\t\tnew SetAttribute(item, item.right == getCurrentAttr.get()));\n+\t\t\t\tactionItem.fill(menu, -1);\n+\t\t\t}\n@@ -111,1 +149,0 @@\n-\t\t\t\t\/\/triggerRebuildTask(currentItems);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/common\/AttributeSelection.java","additions":42,"deletions":5,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/MethodProfilingPage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,0 +105,1 @@\n+import org.openjdk.jmc.common.item.ItemFilters;\n@@ -761,1 +762,5 @@\n-\t\treturn new StacktraceModel(threadRootAtTop, frameSeparatorManager.getFrameSeparator(), itemsToShow,\n+\t\tIItemCollection filteredItems = itemsToShow;\n+\t\tif (currentAttribute != null) {\n+\t\t\tfilteredItems = filteredItems.apply(ItemFilters.hasAttribute(currentAttribute));\n+\t\t}\n+\t\treturn new StacktraceModel(threadRootAtTop, frameSeparatorManager.getFrameSeparator(), filteredItems,\n@@ -800,1 +805,0 @@\n-\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/views\/stacktrace\/StacktraceView.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Datadog, Inc. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder.serializers\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/serializers\/json\/FlameGraphJsonSerializer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/StacktraceFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/StacktraceModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Datadog, Inc. All rights reserved.\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/tree\/StacktraceTreeModel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2020, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Datadog, Inc. All rights reserved.\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/test\/StacktraceTreeModelTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}