{"files":[{"patch":"@@ -59,1 +59,0 @@\n-import java.util.concurrent.Callable;\n@@ -65,1 +64,2 @@\n-import java.util.concurrent.Future;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.atomic.AtomicInteger;\n@@ -158,1 +158,13 @@\n-\tprivate static final ExecutorService MODEL_EXECUTOR = Executors.newFixedThreadPool(1);\n+\tprivate static final int MODEL_EXECUTOR_THREADS_NUMBER = 3;\n+\tprivate static final ExecutorService MODEL_EXECUTOR = Executors.newFixedThreadPool(MODEL_EXECUTOR_THREADS_NUMBER,\n+\t\t\tnew ThreadFactory() {\n+\t\t\t\tprivate ThreadGroup group = new ThreadGroup(\"FlameGraphModelCalculationGroup\");\n+\t\t\t\tprivate AtomicInteger counter = new AtomicInteger();\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic Thread newThread(Runnable r) {\n+\t\t\t\t\tThread t = new Thread(group, r, \"FlameGraphModelCalculation-\" + counter.getAndIncrement());\n+\t\t\t\t\tt.setDaemon(true);\n+\t\t\t\t\treturn t;\n+\t\t\t\t}\n+\t\t\t});\n@@ -170,2 +182,1 @@\n-\tprivate ModelRebuildCallable modelRebuildCallable;\n-\tprivate Future<Void> modelCalculationFuture;\n+\tprivate ModelRebuildRunnable modelRebuildRunnable;\n@@ -190,1 +201,0 @@\n-\n@@ -194,1 +204,1 @@\n-\t\tINIT, CALCULATION, READY, ABORTED, NONE;\n+\t\tNOT_STARTED, STARTED, FINISHED, NONE;\n@@ -256,1 +266,0 @@\n-\n@@ -283,1 +292,1 @@\n-\tprivate static class ModelRebuildCallable implements Callable<Void> {\n+\tprivate static class ModelRebuildRunnable implements Runnable {\n@@ -285,1 +294,0 @@\n-\t\tprivate volatile boolean isInvalid;\n@@ -288,0 +296,1 @@\n+\t\tprivate volatile boolean isInvalid;\n@@ -289,1 +298,1 @@\n-\t\tprivate ModelRebuildCallable(FlameGraphView view, IItemCollection items) {\n+\t\tprivate ModelRebuildRunnable(FlameGraphView view, IItemCollection items) {\n@@ -299,2 +308,2 @@\n-\t\tpublic Void call() throws Exception {\n-\t\t\tview.modelState = ModelState.CALCULATION;\n+\t\tpublic void run() {\n+\t\t\tview.modelState = ModelState.STARTED;\n@@ -303,0 +312,3 @@\n+\t\t\tif (isInvalid) {\n+\t\t\t\treturn;\n+\t\t\t}\n@@ -304,1 +316,0 @@\n-\t\t\tString jsonModel = view.toJSonModel(traceNode).toString();\n@@ -306,2 +317,8 @@\n-\t\t\t\tview.modelState = ModelState.ABORTED;\n-\t\t\t\treturn null;\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tString jsonModel = view.toJSonModel(traceNode, this).toString();\n+\t\t\tif (isInvalid) {\n+\t\t\t\treturn;\n+\t\t\t} else {\n+\t\t\t\tview.modelState = ModelState.FINISHED;\n+\t\t\t\tDisplayToolkit.inDisplayThread().execute(() -> view.setModel(items, jsonModel));\n@@ -309,3 +326,0 @@\n-\t\t\tview.modelState = ModelState.READY;\n-\t\t\tDisplayToolkit.inDisplayThread().execute(() -> view.setModel(items, jsonModel));\n-\t\t\treturn null;\n@@ -385,3 +399,2 @@\n-\t\tif (modelCalculationFuture != null) {\n-\t\t\tmodelRebuildCallable.setInvalid();\n-\t\t\tmodelCalculationFuture.cancel(true);\n+\t\tif (modelRebuildRunnable != null) {\n+\t\t\tmodelRebuildRunnable.setInvalid();\n@@ -390,1 +403,0 @@\n-\t\tmodelState = ModelState.INIT;\n@@ -392,2 +404,5 @@\n-\t\tmodelRebuildCallable = new ModelRebuildCallable(this, items);\n-\t\tmodelCalculationFuture = MODEL_EXECUTOR.submit(modelRebuildCallable);\n+\t\tmodelState = ModelState.NOT_STARTED;\n+\t\tmodelRebuildRunnable = new ModelRebuildRunnable(this, items);\n+\t\tif (!modelRebuildRunnable.isInvalid) {\n+\t\t\tMODEL_EXECUTOR.execute(modelRebuildRunnable);\n+\t\t}\n@@ -397,1 +412,1 @@\n-\t\tif (ModelState.READY.equals(modelState) && items.equals(currentItems) && !browser.isDisposed()) {\n+\t\tif (ModelState.FINISHED.equals(modelState) && items.equals(currentItems) && !browser.isDisposed()) {\n@@ -492,1 +507,1 @@\n-\tprivate StringBuilder toJSonModel(TraceNode root) {\n+\tprivate StringBuilder toJSonModel(TraceNode root, ModelRebuildRunnable rebuildCallable) {\n@@ -496,1 +511,1 @@\n-\t\trenderChildren(builder, root);\n+\t\trenderChildren(builder, root, rebuildCallable);\n@@ -501,1 +516,1 @@\n-\tprivate static void render(StringBuilder builder, TraceNode node) {\n+\tprivate static void render(StringBuilder builder, TraceNode node, ModelRebuildRunnable rebuildCallable) {\n@@ -505,1 +520,1 @@\n-\t\trenderChildren(builder, node);\n+\t\trenderChildren(builder, node, rebuildCallable);\n@@ -509,3 +524,4 @@\n-\tprivate static void renderChildren(StringBuilder builder, TraceNode node) {\n-\t\tfor (int i = 0; i < node.getChildren().size(); i++) {\n-\t\t\trender(builder, node.getChildren().get(i));\n+\tprivate static void renderChildren(StringBuilder builder, TraceNode node, ModelRebuildRunnable rebuildCallable) {\n+\t\tint i = 0;\n+\t\twhile (i < node.getChildren().size() && !rebuildCallable.isInvalid) {\n+\t\t\trender(builder, node.getChildren().get(i), rebuildCallable);\n@@ -515,0 +531,1 @@\n+\t\t\ti++;\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":50,"deletions":33,"binary":false,"changes":83,"status":"modified"}]}