{"files":[{"patch":"@@ -4,0 +4,1 @@\n+import java.time.Duration;\n@@ -10,0 +11,1 @@\n+import java.util.logging.Level;\n@@ -17,1 +19,0 @@\n-import org.eclipse.jetty.websocket.servlet.WebSocketUpgradeFilter;\n@@ -19,0 +20,1 @@\n+import org.eclipse.jetty.websocket.servlet.WebSocketUpgradeFilter;\n@@ -21,0 +23,1 @@\n+import org.openjdk.jmc.flightrecorder.ui.FlightRecorderUI;\n@@ -25,0 +28,1 @@\n+\tprivate static int IDLE_TIMEOUT_MINUTES = 5;\n@@ -46,1 +50,1 @@\n-\t\tJettyWebSocketServletContainerInitializer.configure(context, (servletContext, configuration) -> {\n+\t\tJettyWebSocketServletContainerInitializer.configure(context, (servletContext, container) -> {\n@@ -48,1 +52,0 @@\n-\n@@ -50,3 +53,3 @@\n-\n-\t\t\tconfiguration.addMapping(\"\/events\/*\", (req, resp) -> {\n-\t\t\t\tSystem.out.println(\"Creating connection handler\");\n+\t\t\tcontainer.setMaxBinaryMessageSize(MAX_MESSAGE_SIZE);\n+\t\t\tcontainer.setIdleTimeout(Duration.ofMinutes(IDLE_TIMEOUT_MINUTES));\n+\t\t\tcontainer.addMapping(\"\/events\/*\", (req, resp) -> {\n@@ -68,3 +71,2 @@\n-\t\t} catch (Throwable t) {\n-\t\t\t\/\/ TODO log error\n-\t\t\tt.printStackTrace(System.err);\n+\t\t} catch (Exception e) {\n+\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to start websocket server\", e);\n@@ -96,1 +98,2 @@\n-\t\t\t\tSystem.out.println(\"sending message to \" + getSession().getRemoteAddress().toString());\n+\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO,\n+\t\t\t\t\t\t\"Sending message to \" + getSession().getRemoteAddress().toString());\n@@ -100,2 +103,1 @@\n-\t\t\t\t\t\/\/ TODO Log error\n-\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to send websocket message\", e);\n@@ -109,1 +111,2 @@\n-\t\t\tSystem.out.println(\"Socket Connected: \" + sess);\n+\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO,\n+\t\t\t\t\t\"Socket connected to \" + sess.getRemoteAddress().toString());\n@@ -115,4 +118,2 @@\n-\t\t\t} catch (IOException ex) {\n-\t\t\t\t\/\/ TODO: log error\n-\t\t\t\tSystem.out.println(ex.getMessage());\n-\t\t\t\tex.printStackTrace();\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to show outline view\", e);\n@@ -130,1 +131,1 @@\n-\t\t\tSystem.out.println(\"Socket Closed: [\" + statusCode + \"] \" + reason);\n+\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO, \"Socket closed: [\" + statusCode + \"] \" + reason);\n@@ -138,1 +139,1 @@\n-\t\t\t\tSystem.out.println(\"Socket timeout\");\n+\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.INFO, \"Websocket timed out\");\n@@ -140,2 +141,1 @@\n-\t\t\t\t\/\/ TODO: log error\n-\t\t\t\tcause.printStackTrace(System.err);\n+\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Websocket error\", cause);\n@@ -148,1 +148,0 @@\n-\t\t\tSystem.out.println(\"Awaiting closure from remote\");\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/websocket\/WebsocketServer.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"}]}