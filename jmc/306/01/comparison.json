{"files":[{"patch":"@@ -2,1 +2,1 @@\n-<!--   \n+<!--\n@@ -4,1 +4,1 @@\n-   \n+\n@@ -6,2 +6,2 @@\n-   \n-   The contents of this file are subject to the terms of either the Universal Permissive License \n+\n+   The contents of this file are subject to the terms of either the Universal Permissive License\n@@ -9,1 +9,1 @@\n-   \n+\n@@ -11,1 +11,1 @@\n-   \n+\n@@ -14,1 +14,1 @@\n-   \n+\n@@ -17,1 +17,1 @@\n-   \n+\n@@ -21,1 +21,1 @@\n-   \n+\n@@ -24,1 +24,1 @@\n-   \n+\n","filename":"application\/org.openjdk.jmc.feature.core\/feature.xml","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,3 +2,4 @@\n-<!--   \n-   Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n-   \n+<!--\n+   Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+\n@@ -6,2 +7,2 @@\n-   \n-   The contents of this file are subject to the terms of either the Universal Permissive License \n+\n+   The contents of this file are subject to the terms of either the Universal Permissive License\n@@ -9,1 +10,1 @@\n-   \n+\n@@ -11,1 +12,1 @@\n-   \n+\n@@ -14,1 +15,1 @@\n-   \n+\n@@ -17,1 +18,1 @@\n-   \n+\n@@ -21,1 +22,1 @@\n-   \n+\n@@ -24,1 +25,1 @@\n-   \n+\n@@ -117,1 +118,1 @@\n-         \n+\n@@ -153,0 +154,35 @@\n+   <plugin\n+         id=\"org.apache.aries.spifly.dynamic.bundle\"\n+         download-size=\"0\"\n+         install-size=\"0\"\n+         version=\"0.0.0\"\n+         unpack=\"false\"\/>\n+\n+   <plugin\n+         id=\"org.eclipse.jetty.websocket.api\"\n+         download-size=\"0\"\n+         install-size=\"0\"\n+         version=\"0.0.0\"\n+         unpack=\"false\"\/>\n+\n+   <plugin\n+         id=\"org.eclipse.jetty.websocket.servlet\"\n+         download-size=\"0\"\n+         install-size=\"0\"\n+         version=\"0.0.0\"\n+         unpack=\"false\"\/>\n+\n+   <plugin\n+         id=\"org.eclipse.jetty.websocket.server\"\n+         download-size=\"0\"\n+         install-size=\"0\"\n+         version=\"0.0.0\"\n+         unpack=\"false\"\/>\n+\n+   <plugin\n+         id=\"org.eclipse.jetty.websocket.javax.server\"\n+         download-size=\"0\"\n+         install-size=\"0\"\n+         version=\"0.0.0\"\n+         unpack=\"false\"\/>\n+\n","filename":"application\/org.openjdk.jmc.feature.flightrecorder\/feature.xml","additions":48,"deletions":12,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -10,0 +10,1 @@\n+ org.apache.aries.spifly.dynamic.bundle,\n@@ -12,0 +13,1 @@\n+ org.openjdk.jmc.flightrecorder.serializers,\n@@ -17,1 +19,9 @@\n- org.hdrhistogram.HdrHistogram\n+ org.hdrhistogram.HdrHistogram,\n+ org.eclipse.jetty.io,\n+ org.eclipse.jetty.server,\n+ org.eclipse.jetty.servlet,\n+ org.eclipse.jetty.servlet-api,\n+ org.eclipse.jetty.websocket.api,\n+ org.eclipse.jetty.websocket.server,\n+ org.eclipse.jetty.websocket.servlet,\n+ org.eclipse.jetty.util\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/META-INF\/MANIFEST.MF","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,2 +2,3 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * \n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ *\n@@ -13,1 +14,1 @@\n- * \n+ *\n@@ -16,1 +17,1 @@\n- * \n+ *\n@@ -20,1 +21,1 @@\n- * \n+ *\n@@ -23,1 +24,1 @@\n- * \n+ *\n@@ -178,0 +179,4 @@\n+\tpublic boolean isWebsocketServerEnabled() {\n+\t\treturn getPreferenceStore().getBoolean(PreferenceKeys.PROPERTY_ENABLE_WEBSOCKET_SERVER);\n+\t}\n+\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/FlightRecorderUI.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * \n+ *\n@@ -13,1 +13,1 @@\n- * \n+ *\n@@ -16,1 +16,1 @@\n- * \n+ *\n@@ -20,1 +20,1 @@\n- * \n+ *\n@@ -23,1 +23,1 @@\n- * \n+ *\n@@ -86,0 +86,1 @@\n+import org.openjdk.jmc.flightrecorder.ui.websocket.WebsocketServer;\n@@ -115,0 +116,2 @@\n+\tprivate IPropertyChangeListener websocketServerEnabledListener;\n+\tprivate WebsocketServer websocketServer;\n@@ -126,0 +129,15 @@\n+\t\tif (FlightRecorderUI.getDefault().isWebsocketServerEnabled()) {\n+\t\t\twebsocketServer = new WebsocketServer();\n+\t\t}\n+\t\twebsocketServerEnabledListener = e -> {\n+\t\t\tif (e.getProperty().equals(PreferenceKeys.PROPERTY_ENABLE_WEBSOCKET_SERVER)) {\n+\t\t\t\tif ((Boolean) e.getNewValue()) {\n+\t\t\t\t\tif (websocketServer == null) {\n+\t\t\t\t\t\twebsocketServer = new WebsocketServer();\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\t\/\/ TODO: shutdown server\n+\t\t\t\t\tSystem.out.println(\"Stop websocket server\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t};\n@@ -127,0 +145,1 @@\n+\t\tFlightRecorderUI.getDefault().getPreferenceStore().addPropertyChangeListener(websocketServerEnabledListener);\n@@ -188,0 +207,3 @@\n+\t\tif (websocketServer != null) {\n+\t\t\twebsocketServer.notifyAll(selectionItems);\n+\t\t}\n@@ -400,0 +422,1 @@\n+\t\tFlightRecorderUI.getDefault().getPreferenceStore().removePropertyChangeListener(websocketServerEnabledListener);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/JfrEditor.java","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -3,1 +3,2 @@\n- * \n+ * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ *\n@@ -13,1 +14,1 @@\n- * \n+ *\n@@ -16,1 +17,1 @@\n- * \n+ *\n@@ -20,1 +21,1 @@\n- * \n+ *\n@@ -23,1 +24,1 @@\n- * \n+ *\n@@ -410,0 +411,1 @@\n+\tpublic static String PREFERENCES_ENABLE_WEBSOCKET_SERVER;\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/Messages.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,2 +2,3 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * \n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ *\n@@ -13,1 +14,1 @@\n- * \n+ *\n@@ -16,1 +17,1 @@\n- * \n+ *\n@@ -20,1 +21,1 @@\n- * \n+ *\n@@ -23,1 +24,1 @@\n- * \n+ *\n@@ -110,0 +111,2 @@\n+\t\tButton enableWebsocketCheckbox = createEnableWebsocketServerCheckBox(container);\n+\t\tenableWebsocketCheckbox.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false));\n@@ -368,0 +371,5 @@\n+\tprivate Button createEnableWebsocketServerCheckBox(Composite parent) {\n+\t\treturn createCheckBox(parent, Messages.PREFERENCES_ENABLE_WEBSOCKET_SERVER,\n+\t\t\t\tPreferenceKeys.PROPERTY_ENABLE_WEBSOCKET_SERVER);\n+\t}\n+\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/preferences\/GeneralPage.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,2 +2,3 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * \n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ *\n@@ -13,1 +14,1 @@\n- * \n+ *\n@@ -16,1 +17,1 @@\n- * \n+ *\n@@ -20,1 +21,1 @@\n- * \n+ *\n@@ -23,1 +24,1 @@\n- * \n+ *\n@@ -48,0 +49,1 @@\n+\tpublic static final String PROPERTY_ENABLE_WEBSOCKET_SERVER = \"flightrecorder.controlpanel.enable.websocket.server\"; \/\/$NON-NLS-1$\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/preferences\/PreferenceKeys.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,152 @@\n+package org.openjdk.jmc.flightrecorder.ui.websocket;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeoutException;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.ServerConnector;\n+import org.eclipse.jetty.servlet.ServletContextHandler;\n+import org.eclipse.jetty.websocket.api.Session;\n+import org.eclipse.jetty.websocket.api.WebSocketAdapter;\n+import org.eclipse.jetty.websocket.servlet.WebSocketUpgradeFilter;\n+import org.eclipse.jetty.websocket.server.config.JettyWebSocketServletContainerInitializer;\n+import org.openjdk.jmc.common.item.IItemCollection;\n+import org.openjdk.jmc.flightrecorder.serializers.json.IItemCollectionJsonSerializer;\n+\n+public class WebsocketServer {\n+\tprivate static int PORT = 8029;\n+\tprivate static int MAX_MESSAGE_SIZE = 1024 * 1024 * 1024;\n+\n+\tprivate List<WebSocketConnectionHandler> handlers = new ArrayList<>();\n+\tprivate final ExecutorService executorService = Executors.newSingleThreadExecutor();\n+\tprivate IItemCollection currentSelection = null;\n+\n+\tpublic WebsocketServer() {\n+\t\texecutorService.execute(() -> startServer());\n+\t}\n+\n+\tprivate void startServer() {\n+\t\tServer server = new Server();\n+\t\tServerConnector connector = new ServerConnector(server);\n+\t\tconnector.setPort(PORT);\n+\t\tserver.addConnector(connector);\n+\n+\t\t\/\/ Setup the basic application context at \"\/\"\n+\t\tServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);\n+\t\tcontext.setContextPath(\"\/\");\n+\t\tserver.setHandler(context);\n+\n+\t\t\/\/ Configure specific websocket behaviour\n+\t\tJettyWebSocketServletContainerInitializer.configure(context, (servletContext, configuration) -> {\n+\t\t\t\/\/ set idle timeout\n+\n+\t\t\t\/\/ configuration.getPolicy().setMaxTextMessageBufferSize(MAX_MESSAGE_SIZE);\n+\n+\t\t\tconfiguration.addMapping(\"\/events\/*\", (req, resp) -> {\n+\t\t\t\tSystem.out.println(\"Creating connection handler\");\n+\t\t\t\t\/\/ try to send the current selection when the client connects\n+\t\t\t\t\/\/ for simplicity, we serialise for every new connection\n+\t\t\t\tString eventsJson = currentSelection != null\n+\t\t\t\t\t\t? IItemCollectionJsonSerializer.toJsonString(currentSelection) : null;\n+\t\t\t\tWebSocketConnectionHandler handler = new WebSocketConnectionHandler(eventsJson);\n+\t\t\t\thandlers.add(handler);\n+\t\t\t\treturn handler;\n+\t\t\t});\n+\t\t});\n+\n+\t\ttry {\n+\t\t\t\/\/ Add generic filter that will accept WebSocket upgrade.\n+\t\t\tWebSocketUpgradeFilter.ensureFilter(context.getServletContext());\n+\t\t\tserver.start();\n+\t\t\tserver.join();\n+\t\t} catch (Throwable t) {\n+\t\t\t\/\/ TODO log error\n+\t\t\tt.printStackTrace(System.err);\n+\t\t}\n+\t}\n+\n+\tpublic void notifyAll(IItemCollection events) {\n+\t\tcurrentSelection = events;\n+\t\thandlers = handlers.stream().filter(h -> h.isConnected()).collect(Collectors.toList());\n+\t\tif (handlers.size() == 0) {\n+\t\t\t\/\/ do nothing if no handlers are registered\n+\t\t\treturn;\n+\t\t}\n+\t\tString eventsJson = IItemCollectionJsonSerializer.toJsonString(events);\n+\n+\t\thandlers.forEach(handler -> handler.sendMessage(eventsJson));\n+\t}\n+\n+\tprivate static class WebSocketConnectionHandler extends WebSocketAdapter {\n+\t\tprivate CountDownLatch closureLatch = new CountDownLatch(1);\n+\t\tprivate String firstMessage;\n+\n+\t\tWebSocketConnectionHandler(String firstMessage) {\n+\t\t\tthis.firstMessage = firstMessage;\n+\t\t}\n+\n+\t\tpublic void sendMessage(String message) {\n+\t\t\tif (getSession() != null && isConnected()) {\n+\t\t\t\tSystem.out.println(\"sending message to \" + getSession().getRemoteAddress().toString());\n+\t\t\t\ttry {\n+\t\t\t\t\tgetSession().getRemote().sendString(message);\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\/\/ TODO Log error\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onWebSocketConnect(Session sess) {\n+\t\t\tsuper.onWebSocketConnect(sess);\n+\t\t\tSystem.out.println(\"Socket Connected: \" + sess);\n+\t\t\ttry {\n+\t\t\t\tif (firstMessage != null) {\n+\t\t\t\t\tgetSession().getRemote().sendString(firstMessage);\n+\t\t\t\t\tfirstMessage = null;\n+\t\t\t\t}\n+\t\t\t} catch (IOException ex) {\n+\t\t\t\t\/\/ TODO: log error\n+\t\t\t\tSystem.out.println(ex.getMessage());\n+\t\t\t\tex.printStackTrace();\n+\t\t\t}\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onWebSocketText(String message) {\n+\t\t\tsuper.onWebSocketText(message);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onWebSocketClose(int statusCode, String reason) {\n+\t\t\tsuper.onWebSocketClose(statusCode, reason);\n+\t\t\tSystem.out.println(\"Socket Closed: [\" + statusCode + \"] \" + reason);\n+\t\t\tclosureLatch.countDown();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onWebSocketError(Throwable cause) {\n+\t\t\tsuper.onWebSocketError(cause);\n+\t\t\tif (cause.getCause() instanceof TimeoutException) {\n+\t\t\t\tSystem.out.println(\"Socket timeout\");\n+\t\t\t} else {\n+\t\t\t\t\/\/ TODO: log error\n+\t\t\t\tcause.printStackTrace(System.err);\n+\t\t\t}\n+\t\t}\n+\n+\t\t@SuppressWarnings(\"unused\")\n+\t\t\/\/ TODO: graceful shutdown\n+\t\tpublic void awaitClosure() throws InterruptedException {\n+\t\t\tSystem.out.println(\"Awaiting closure from remote\");\n+\t\t\tclosureLatch.await();\n+\t\t}\n+\t}\n+}\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/websocket\/WebsocketServer.java","additions":152,"deletions":0,"binary":false,"changes":152,"status":"added"},{"patch":"@@ -3,0 +3,1 @@\n+#  Copyright (c) 2021, Datadog, Inc. All rights reserved.\n@@ -350,0 +351,1 @@\n+PREFERENCES_ENABLE_WEBSOCKET_SERVER=Enable websocket server\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/messages.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+websocket\n","filename":"configuration\/ide\/eclipse\/dictionary\/dictionary.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+   Copyright (c) 2019, 2021 Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2019, 2021 Datadog, Inc. All rights reserved.\n+\n+   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+   The contents of this file are subject to the terms of either the Universal Permissive License\n+   v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+\n+   or the following license:\n+\n+   Redistribution and use in source and binary forms, with or without modification, are permitted\n+   provided that the following conditions are met:\n+\n+   1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+   and the following disclaimer.\n+\n+   2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+   conditions and the following disclaimer in the documentation and\/or other materials provided with\n+   the distribution.\n+\n+   3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+   endorse or promote products derived from this software without specific prior written permission.\n+\n+   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+   FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+   WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+-->\n+<?pde version=\"3.8\"?>\n+<target name=\"jmc-target-2019-12\" sequenceNumber=\"47\">\n+    <locations>\n+        <location includeAllPlatforms=\"false\" includeConfigurePhase=\"true\" includeMode=\"planner\" includeSource=\"true\" type=\"InstallableUnit\">\n+            <unit id=\"com.sun.mail.jakarta.mail\" version=\"1.6.5\"\/>\n+            <unit id=\"com.sun.activation.jakarta.activation\" version=\"1.2.1\"\/>\n+            <unit id=\"org.owasp.encoder\" version=\"1.2.2\"\/>\n+            <unit id=\"org.lz4.lz4-java\" version=\"1.7.1\"\/>\n+            <unit id=\"org.twitter4j.core\" version=\"4.0.7\"\/>\n+            <unit id=\"org.hdrhistogram.HdrHistogram\" version=\"2.1.12\"\/>\n+            <unit id=\"org.adoptopenjdk.jemmy-awt-input\" version=\"2.0.0\"\/>\n+            <unit id=\"org.adoptopenjdk.jemmy-browser\" version=\"2.0.0\"\/>\n+            <unit id=\"org.adoptopenjdk.jemmy-core\" version=\"2.0.0\"\/>\n+            <unit id=\"org.adoptopenjdk.jemmy-swt\" version=\"2.0.0\"\/>\n+            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n+            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n+            <repository location=\"http:\/\/localhost:8080\/site\"\/>\n+        <\/location>\n+        <location includeAllPlatforms=\"false\" includeConfigurePhase=\"true\" includeMode=\"planner\" includeSource=\"true\" type=\"InstallableUnit\">\n+            <unit id=\"org.eclipse.equinox.executable.feature.group\" version=\"3.8.600.v20191014-2025\"\/>\n+            <unit id=\"org.eclipse.pde.feature.group\" version=\"3.14.200.v20191210-0610\"\/>\n+            <unit id=\"org.eclipse.platform.sdk\" version=\"4.14.0.I20191210-0610\"\/>\n+            <repository location=\"http:\/\/download.eclipse.org\/releases\/2019-12\/\"\/>\n+        <\/location>\n+        <location includeAllPlatforms=\"false\" includeConfigurePhase=\"true\" includeMode=\"planner\" includeSource=\"true\" type=\"InstallableUnit\">\n+            <unit id=\"org.eclipse.babel.nls_eclipse_ja.feature.group\" version=\"4.14.0.v20200113020001\"\/>\n+            <unit id=\"org.eclipse.babel.nls_eclipse_zh.feature.group\" version=\"4.14.0.v20200113020001\"\/>\n+            <repository location=\"https:\/\/archive.eclipse.org\/technology\/babel\/update-site\/R0.17.1\/2019-12\/\"\/>\n+        <\/location>\n+    <\/locations>\n+    <targetJRE path=\"org.eclipse.jdt.launching.JRE_CONTAINER\/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType\/JavaSE-1.8\"\/>\n+<\/target>\n","filename":"releng\/platform-definitions\/platform-definition-2019-12\/platform-definition-2019-12.target","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -3,2 +3,2 @@\n-   Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-   Copyright (c) 2020, Datadog, Inc. All rights reserved.\n+   Copyright (c) 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2020, 2021 Datadog, Inc. All rights reserved.\n@@ -49,0 +49,3 @@\n+            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n+            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2020-06\/platform-definition-2020-06.target","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -49,0 +49,3 @@\n+            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n+            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2020-09\/platform-definition-2020-09.target","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,3 @@\n+            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n+            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2020-12\/platform-definition-2020-12.target","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,3 @@\n+            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n+            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2021-03\/platform-definition-2021-03.target","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,7 @@\n+            <unit id=\"org.eclipse.jetty.servlet-api\" version=\"4.0.6\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.api\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.servlet\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.javax.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.apache.aries.spifly.dynamic.bundle\" version=\"1.3.4\"\/>\n+            .servlet-api_4.0.6.jar\n","filename":"releng\/platform-definitions\/platform-definition-2021-06\/platform-definition-2021-06.target","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3,1 +3,2 @@\n-   Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2018, 2019, 2021 Oracle and\/or its affiliates. All rights reserved.\n+\t Copyright (c) 2021, Datadog, Inc. All rights reserved.\n@@ -48,0 +49,2 @@\n+\t\t<javax.websocket.version>1.1<\/javax.websocket.version>\n+\t\t<jetty.version>10.0.5<\/jetty.version>\n@@ -49,1 +52,1 @@\n-\t\t<jetty-maven-plugin.version>9.4.33.v20201020<\/jetty-maven-plugin.version>\n+\t\t<jetty-maven-plugin.version>9.4.43.v20210629<\/jetty-maven-plugin.version>\n@@ -112,0 +115,12 @@\n+\t\t\t\t\t\t\t\t<artifact>\n+\t\t\t\t\t\t\t\t\t<id>org.eclipse.jetty.websocket:websocket-jetty-server:${jetty.version}<\/id>\n+\t\t\t\t\t\t\t\t<\/artifact>\n+\t\t\t\t\t\t\t\t<artifact>\n+\t\t\t\t\t\t\t\t\t<id>org.eclipse.jetty.websocket:websocket-javax-server:${jetty.version}<\/id>\n+\t\t\t\t\t\t\t\t<\/artifact>\n+\t\t\t\t\t\t\t\t<artifact>\n+\t\t\t\t\t\t\t\t\t<id>org.eclipse.jetty.websocket:websocket-jetty-api:${jetty.version}<\/id>\n+\t\t\t\t\t\t\t\t<\/artifact>\n+\t\t\t\t\t\t\t\t<artifact>\n+\t\t\t\t\t\t\t\t\t<id>org.apache.aries.spifly:org.apache.aries.spifly.dynamic.bundle:1.3.4<\/id>\n+\t\t\t\t\t\t\t\t<\/artifact>\n","filename":"releng\/third-party\/pom.xml","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"}]}