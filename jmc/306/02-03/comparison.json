{"files":[{"patch":"@@ -147,0 +147,17 @@\n+\tpublic static int parseWebsocketPort(String port) {\n+\t\ttry {\n+\t\t\treturn Integer.valueOf(port);\n+\t\t} catch (NumberFormatException e) {\n+\t\t\treturn PreferenceKeys.DEFAULT_WEBSOCKET_PORT;\n+\t\t}\n+\t}\n+\n+\tpublic int getWebsocketPort() {\n+\t\treturn parseWebsocketPort(getPreferenceStore().getString(PreferenceKeys.PROPERTY_WEBSOCKET_SERVER_PORT));\n+\t}\n+\n+\tpublic boolean isWebsocketServerEnabled() {\n+\t\tint port = getWebsocketPort();\n+\t\treturn port > 0 && port < 65535;\n+\t}\n+\n@@ -179,4 +196,0 @@\n-\tpublic boolean isWebsocketServerEnabled() {\n-\t\treturn getPreferenceStore().getBoolean(PreferenceKeys.PROPERTY_ENABLE_WEBSOCKET_SERVER);\n-\t}\n-\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/FlightRecorderUI.java","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -130,1 +130,2 @@\n-\t\t\twebsocketServer = new WebsocketServer();\n+\t\t\tlong websocketServerPort = FlightRecorderUI.getDefault().getWebsocketPort();\n+\t\t\twebsocketServer = new WebsocketServer((int) websocketServerPort);\n@@ -133,4 +134,6 @@\n-\t\t\tif (e.getProperty().equals(PreferenceKeys.PROPERTY_ENABLE_WEBSOCKET_SERVER)) {\n-\t\t\t\tif ((Boolean) e.getNewValue()) {\n-\t\t\t\t\tif (websocketServer == null) {\n-\t\t\t\t\t\twebsocketServer = new WebsocketServer();\n+\t\t\tif (e.getProperty().equals(PreferenceKeys.PROPERTY_WEBSOCKET_SERVER_PORT)) {\n+\t\t\t\tint newWebsocketServerPort = FlightRecorderUI.parseWebsocketPort((String) e.getNewValue());\n+\t\t\t\tif (newWebsocketServerPort > 0) {\n+\t\t\t\t\tif (websocketServer != null) {\n+\t\t\t\t\t\twebsocketServer.shutdown();\n+\t\t\t\t\t\twebsocketServer = null;\n@@ -138,0 +141,1 @@\n+\t\t\t\t\twebsocketServer = new WebsocketServer(newWebsocketServerPort);\n@@ -139,2 +143,4 @@\n-\t\t\t\t\t\/\/ TODO: shutdown server\n-\t\t\t\t\tSystem.out.println(\"Stop websocket server\");\n+\t\t\t\t\tif (websocketServer != null) {\n+\t\t\t\t\t\twebsocketServer.shutdown();\n+\t\t\t\t\t\twebsocketServer = null;\n+\t\t\t\t\t}\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/JfrEditor.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -411,1 +411,0 @@\n-\tpublic static String PREFERENCES_ENABLE_WEBSOCKET_SERVER;\n@@ -423,0 +422,3 @@\n+\tpublic static String PREFERENCES_WEBSOCKET_SERVER_PORT_INVALID;\n+\tpublic static String PREFERENCES_WEBSOCKET_SERVER_PORT_TEXT;\n+\tpublic static String PREFERENCES_WEBSOCKET_SERVER_PORT_TOOLTIP;\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/Messages.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,0 +97,1 @@\n+\tprivate Text websocketPortValue;\n@@ -111,2 +112,0 @@\n-\t\tButton enableWebsocketCheckbox = createEnableWebsocketServerCheckBox(container);\n-\t\tenableWebsocketCheckbox.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false));\n@@ -175,0 +174,8 @@\n+\t\tLabel websocketPortLabel = new Label(defaultTimespanContainer, SWT.NONE);\n+\t\twebsocketPortLabel.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));\n+\t\twebsocketPortLabel.setText(Messages.PREFERENCES_WEBSOCKET_SERVER_PORT_TEXT);\n+\t\twebsocketPortLabel.setToolTipText(Messages.PREFERENCES_WEBSOCKET_SERVER_PORT_TOOLTIP);\n+\t\twebsocketPortValue = new Text(defaultTimespanContainer, SWT.BORDER);\n+\t\twebsocketPortValue.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));\n+\t\tQuantityKindProposal.install(websocketPortValue, UnitLookup.NUMBER);\n+\n@@ -181,0 +188,1 @@\n+\t\tloadWebsocketPortFromPrefStore(false);\n@@ -211,0 +219,6 @@\n+\t\twebsocketPortValue.addModifyListener(new ModifyListener() {\n+\t\t\t@Override\n+\t\t\tpublic void modifyText(ModifyEvent e) {\n+\t\t\t\tvalidatePage();\n+\t\t\t}\n+\t\t});\n@@ -231,1 +245,17 @@\n-\t\tsetValid(error == null && error2 == null && error3 == null && error4 == null);\n+\t\tString error5 = validateWebsocketPort(websocketPortValue.getText());\n+\t\tif (error == null && error2 == null && error3 == null) {\n+\t\t\tsetErrorMessage(error5);\n+\t\t}\n+\t\tsetValid(error == null && error2 == null && error3 == null && error4 == null && error5 == null);\n+\t}\n+\n+\tpublic static String validateWebsocketPort(String text) {\n+\t\ttry {\n+\t\t\tint port = Integer.valueOf(text);\n+\t\t\tif (port < 0 || port > 65535) {\n+\t\t\t\treturn Messages.PREFERENCES_WEBSOCKET_SERVER_PORT_INVALID;\n+\t\t\t}\n+\t\t} catch (NumberFormatException e) {\n+\t\t\treturn Messages.PREFERENCES_WEBSOCKET_SERVER_PORT_INVALID;\n+\t\t}\n+\t\treturn null;\n@@ -311,0 +341,6 @@\n+\tprivate void loadWebsocketPortFromPrefStore(boolean loadDefault) {\n+\t\tString port = loadDefault ? getPreferenceStore().getDefaultString(PreferenceKeys.PROPERTY_WEBSOCKET_SERVER_PORT)\n+\t\t\t\t: getPreferenceStore().getString(PreferenceKeys.PROPERTY_WEBSOCKET_SERVER_PORT);\n+\t\twebsocketPortValue.setText(Integer.toString(FlightRecorderUI.parseWebsocketPort(port)));\n+\t}\n+\n@@ -371,5 +407,0 @@\n-\tprivate Button createEnableWebsocketServerCheckBox(Composite parent) {\n-\t\treturn createCheckBox(parent, Messages.PREFERENCES_ENABLE_WEBSOCKET_SERVER,\n-\t\t\t\tPreferenceKeys.PROPERTY_ENABLE_WEBSOCKET_SERVER);\n-\t}\n-\n@@ -448,0 +479,8 @@\n+\t\ttry {\n+\t\t\tint port = Integer.valueOf(websocketPortValue.getText());\n+\t\t\tgetPreferenceStore().setValue(PreferenceKeys.PROPERTY_WEBSOCKET_SERVER_PORT, Integer.toString(port));\n+\t\t} catch (NumberFormatException e) {\n+\t\t\tsetErrorMessage(Messages.PREFERENCES_WEBSOCKET_SERVER_PORT_INVALID);\n+\t\t\treturn false;\n+\t\t}\n+\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/preferences\/GeneralPage.java","additions":47,"deletions":8,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -49,1 +49,2 @@\n-\tpublic static final String PROPERTY_ENABLE_WEBSOCKET_SERVER = \"flightrecorder.controlpanel.enable.websocket.server\"; \/\/$NON-NLS-1$\n+\tpublic static final int DEFAULT_WEBSOCKET_PORT = 0;\n+\tpublic static final String PROPERTY_WEBSOCKET_SERVER_PORT = \"flightrecorder.controlpanel.websocket.server.port\"; \/\/$NON-NLS-1$\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/preferences\/PreferenceKeys.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,0 @@\n-import java.util.concurrent.CountDownLatch;\n@@ -26,1 +25,1 @@\n-\tprivate static int PORT = 8029;\n+\n@@ -30,0 +29,2 @@\n+\tprivate final int port;\n+\tprivate Server server;\n@@ -34,1 +35,2 @@\n-\tpublic WebsocketServer() {\n+\tpublic WebsocketServer(int port) {\n+\t\tthis.port = port;\n@@ -38,0 +40,4 @@\n+\tpublic int getPort() {\n+\t\treturn port;\n+\t}\n+\n@@ -39,1 +45,1 @@\n-\t\tServer server = new Server();\n+\t\tserver = new Server();\n@@ -41,1 +47,2 @@\n-\t\tconnector.setPort(PORT);\n+\t\tconnector.setHost(\"127.0.0.1\");\n+\t\tconnector.setPort(port);\n@@ -44,1 +51,0 @@\n-\t\t\/\/ Setup the basic application context at \"\/\"\n@@ -49,1 +55,0 @@\n-\t\t\/\/ Configure specific websocket behaviour\n@@ -51,2 +56,0 @@\n-\t\t\t\/\/ set idle timeout\n-\t\t\t\/\/ configuration.getPolicy().setMaxTextMessageBufferSize(MAX_MESSAGE_SIZE);\n@@ -67,1 +70,0 @@\n-\t\t\t\/\/ Add generic filter that will accept WebSocket upgrade.\n@@ -88,0 +90,8 @@\n+\tpublic void shutdown() {\n+\t\ttry {\n+\t\t\tserver.stop();\n+\t\t} catch (Exception e) {\n+\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to stop websocket server\", e);\n+\t\t}\n+\t}\n+\n@@ -89,1 +99,0 @@\n-\t\tprivate CountDownLatch closureLatch = new CountDownLatch(1);\n@@ -132,1 +141,0 @@\n-\t\t\tclosureLatch.countDown();\n@@ -144,6 +152,0 @@\n-\n-\t\t@SuppressWarnings(\"unused\")\n-\t\t\/\/ TODO: graceful shutdown\n-\t\tpublic void awaitClosure() throws InterruptedException {\n-\t\t\tclosureLatch.await();\n-\t\t}\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/websocket\/WebsocketServer.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -351,1 +351,2 @@\n-PREFERENCES_ENABLE_WEBSOCKET_SERVER=Enable websocket server\n+PREFERENCES_WEBSOCKET_SERVER_PORT_TEXT=Websocket server port (0 - disabled)\n+PREFERENCES_WEBSOCKET_SERVER_PORT_TOOLTIP=Start a websocket server bound to 127.0.0.1 and the selected port. The server pushes updates whenever the selection changes in the UI.\n@@ -361,0 +362,1 @@\n+PREFERENCES_WEBSOCKET_SERVER_PORT_INVALID=Websocket server port must a number be between 0 and 65535\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/messages.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,3 +49,6 @@\n-            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n-            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n-            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n+            <unit id=\"org.eclipse.jetty.servlet-api\" version=\"4.0.6\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.api\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.servlet\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.javax.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.apache.aries.spifly.dynamic.bundle\" version=\"1.3.4\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2019-12\/platform-definition-2019-12.target","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,3 +49,6 @@\n-            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n-            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n-            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n+            <unit id=\"org.eclipse.jetty.servlet-api\" version=\"4.0.6\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.api\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.servlet\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.javax.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.apache.aries.spifly.dynamic.bundle\" version=\"1.3.4\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2020-06\/platform-definition-2020-06.target","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,3 +49,6 @@\n-            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n-            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n-            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n+            <unit id=\"org.eclipse.jetty.servlet-api\" version=\"4.0.6\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.api\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.servlet\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.javax.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.apache.aries.spifly.dynamic.bundle\" version=\"1.3.4\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2020-09\/platform-definition-2020-09.target","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,3 +49,6 @@\n-            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n-            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n-            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n+            <unit id=\"org.eclipse.jetty.servlet-api\" version=\"4.0.6\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.api\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.servlet\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.javax.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.apache.aries.spifly.dynamic.bundle\" version=\"1.3.4\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2020-12\/platform-definition-2020-12.target","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,3 +49,6 @@\n-            <unit id=\"javax.servlet-api\" version=\"3.1.0\"\/>\n-            <unit id=\"javax.websocket-api\" version=\"1.1.0\"\/>\n-            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"9.4.43.v20210629\"\/>\n+            <unit id=\"org.eclipse.jetty.servlet-api\" version=\"4.0.6\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.api\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.servlet\" version=\"10.0.5\"\/>\n+            <unit id=\"org.eclipse.jetty.websocket.javax.server\" version=\"10.0.5\"\/>\n+            <unit id=\"org.apache.aries.spifly.dynamic.bundle\" version=\"1.3.4\"\/>\n","filename":"releng\/platform-definitions\/platform-definition-2021-03\/platform-definition-2021-03.target","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-            .servlet-api_4.0.6.jar\n","filename":"releng\/platform-definitions\/platform-definition-2021-06\/platform-definition-2021-06.target","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+\t\t<spifly.version>1.3.4<\/spifly.version>\n@@ -125,1 +126,1 @@\n-\t\t\t\t\t\t\t\t\t<id>org.apache.aries.spifly:org.apache.aries.spifly.dynamic.bundle:1.3.4<\/id>\n+\t\t\t\t\t\t\t\t\t<id>org.apache.aries.spifly:org.apache.aries.spifly.dynamic.bundle:${spifly.version}<\/id>\n","filename":"releng\/third-party\/pom.xml","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}