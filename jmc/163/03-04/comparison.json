{"files":[{"patch":"@@ -39,0 +39,3 @@\n+\/**\n+ * Interface specifying result objects for use with {@link IRule} implementations. The default use is to use {@link ResultBuilder}, but this interface exists to allow further customization by downstream users.\n+ *\/\n@@ -41,0 +44,5 @@\n+\t\/**\n+\t * Returns an enum of type {@link Severity} describing the importance of this result.\n+\t * \n+\t * @return a {@linkplain Severity} describing the result\n+\t *\/\n@@ -43,0 +51,5 @@\n+\t\/**\n+\t * Returns the {@link IRule} that generated this result object.\n+\t * \n+\t * @return the {@linkplain IRule} that generated this result\n+\t *\/\n@@ -45,0 +58,6 @@\n+\t\/**\n+\t * A short, one sentence, summary of the results of the rule evaluation.\n+\t * This is intended to give a very quick overview of what the rule detected. If the severity is {@code OK} or {@code NA} this should not be expected to contain any information, but it may. If the severity is {@code INFO} or {@code WARNING} this is expected to provide a very short summary of the found problem.\n+\t * \n+\t * @return a short text describing the findings of the rule\n+\t *\/\n@@ -47,0 +66,5 @@\n+\t\/**\n+\t * A more detailed explanation of what kind of problem was identified and why the identified issue is a problem. This field is always optional, but when it exists it may be very long and detailed.\n+\t * \n+\t * @return a detailed explanation of why and how the result is relevant\n+\t *\/\n@@ -49,0 +73,5 @@\n+\t\/**\n+\t * An attempted solution for the identified problem. This field is always optional, but if included it can e.g. specify new JVM flags or suggest changes in the source code.\n+\t * \n+\t * @return a text describing a possible solution for the found problem\n+\t *\/\n@@ -51,0 +80,5 @@\n+\t\/**\n+\t * An optional field potentially used for rules that have a set of recording settings that may help the rule return more detailed information.\n+\t * \n+\t * @return a set of recording settings\n+\t *\/\n@@ -53,0 +87,7 @@\n+\t\/**\n+\t * Returns a collection of typed instances of a result contained in this result instance, i.e. is contained in {@code IRule.getResults()}.\n+\t * \n+\t * @param <T> a type parameter\n+\t * @param result the typed result that is to be retrieved\n+\t * @return a typed result instance\n+\t *\/\n@@ -55,0 +96,7 @@\n+\t\/**\n+\t * Returns a preference value that was used when evaluating the rule for this particular result.\n+\t * \n+\t * @param <T> a type parameter\n+ \t * @param preference a preference used by this rule, i.e. contained in {@code IRule.getConfigurationAttributes()}\n+\t * @return a preference value\n+\t *\/\n@@ -57,0 +105,7 @@\n+\t\/**\n+\t * Returns a typed instance of a result contained in this result instance, i.e. is contained in {@code IRule.getResults()}.\n+\t * \n+\t * @param <T> a type parameter\n+\t * @param result the typed result that is to be retrieved\n+\t * @return a typed result instance\n+\t *\/\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/IResult.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -222,3 +222,3 @@\n-\t\tsummary = ResultToolkit.populateMessage(result, result.getSummary(), true);\n-\t\texplanation = ResultToolkit.populateMessage(result, result.getExplanation(), true);\n-\t\tsolution = ResultToolkit.populateMessage(result, result.getSolution(), true);\n+\t\tsummary = ResultToolkit.populateMessage(result, summary, true);\n+\t\texplanation = ResultToolkit.populateMessage(result, explanation, true);\n+\t\tsolution = ResultToolkit.populateMessage(result, solution, true);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/report\/html\/internal\/RulesHtmlToolkit.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}