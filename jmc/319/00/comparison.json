{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.util.Collections;\n@@ -175,1 +174,1 @@\n-\t\tCollections.sort(list);\n+\t\tlist.sort(null);\n@@ -191,1 +190,1 @@\n-\t\tCollections.sort(list);\n+\t\tlist.sort(null);\n","filename":"application\/org.openjdk.jmc.commands\/src\/main\/java\/org\/openjdk\/jmc\/commands\/CommandsPlugin.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.util.Collections;\n@@ -56,1 +55,1 @@\n-\t\tCollections.sort(keys);\n+\t\tkeys.sort(null);\n","filename":"application\/org.openjdk.jmc.commands\/src\/main\/java\/org\/openjdk\/jmc\/commands\/internal\/executables\/PrintSystemProperties.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.util.Collections;\n@@ -65,1 +64,0 @@\n-\n@@ -201,2 +199,1 @@\n-\t\tCollections.sort(allAttributes, new Comparator<Entry<KindOfQuantity<?>, List<MRI>>>() {\n-\n+\t\tallAttributes.sort(new Comparator<Entry<KindOfQuantity<?>, List<MRI>>>() {\n","filename":"application\/org.openjdk.jmc.console.persistence\/src\/main\/java\/org\/openjdk\/jmc\/console\/persistence\/editors\/PersistenceEditor.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import java.util.Collections;\n@@ -71,1 +70,0 @@\n-\n@@ -418,1 +416,1 @@\n-\t\tCollections.sort(names);\n+\t\tnames.sort(null);\n","filename":"application\/org.openjdk.jmc.console.ui.notification\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/notification\/tab\/TriggerSectionPart.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -96,1 +95,1 @@\n-\t\tCollections.sort(pageElements, PAGE_COMPARATOR);\n+\t\tpageElements.sort(PAGE_COMPARATOR);\n","filename":"application\/org.openjdk.jmc.console.ui\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/editor\/internal\/ConsolePageContributionFactory.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n-import java.util.Collections;\n@@ -245,1 +244,1 @@\n-\t\tCollections.sort(variables);\n+\t\tvariables.sort(null);\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/JFCXMLValidator.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-\t\tCollections.sort(m_templates, COMPARATOR);\n+\t\tm_templates.sort(COMPARATOR);\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/model\/EventConfigurationRepository.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.util.Collections;\n@@ -120,1 +119,1 @@\n-\t\t\tCollections.sort(pageAttributes, (p1, p2) -> p1.groupTitle.compareTo(p2.groupTitle));\n+\t\t\tpageAttributes.sort((p1, p2) -> p1.groupTitle.compareTo(p2.groupTitle));\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/AttributeConfiguration.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -176,1 +175,1 @@\n-\t\tCollections.sort(getChildren(), new Comparator<Object>() {\n+\t\tgetChildren().sort(new Comparator<Object>() {\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/EventTypeFolderNode.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -287,1 +286,1 @@\n-\t\tCollections.sort(clusterList, ReferencedObjCluster.DEFAULT_COMPARATOR);\n+\t\tclusterList.sort(ReferencedObjCluster.DEFAULT_COMPARATOR);\n@@ -372,1 +371,1 @@\n-\t\tCollections.sort(clusterList, ReferencedObjCluster.DEFAULT_COMPARATOR);\n+\t\tclusterList.sort(ReferencedObjCluster.DEFAULT_COMPARATOR);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/batch\/BatchProblemRecorder.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -138,1 +137,1 @@\n-\t\tCollections.sort(result, new Comparator<CollectionClassDescriptor>() {\n+\t\tresult.sort(new Comparator<CollectionClassDescriptor>() {\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/descriptors\/CollectionDescriptors.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.util.Collections;\n@@ -609,1 +608,1 @@\n-\t\t\tCollections.sort(roots); \/\/ More interesting roots will be scanned first\n+\t\t\troots.sort(null); \/\/ More interesting roots will be scanned first\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/heap\/model\/Snapshot.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -70,1 +69,1 @@\n-\t\tCollections.sort(result, SPECIAL_LENGTH_COMPARATOR);\n+\t\tresult.sort(SPECIAL_LENGTH_COMPARATOR);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/LengthHistogram.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -91,1 +90,1 @@\n-\t\tCollections.sort(result, new Comparator<Entry>() {\n+\t\tresult.sort(new Comparator<Entry>() {\n@@ -147,1 +146,1 @@\n-\t\tCollections.sort(result, PROBLEM_OVERHEAD_COMPARATOR);\n+\t\tresult.sort(PROBLEM_OVERHEAD_COMPARATOR);\n@@ -165,1 +164,1 @@\n-\t\tCollections.sort(result, PROBLEM_OVERHEAD_COMPARATOR);\n+\t\tresult.sort(PROBLEM_OVERHEAD_COMPARATOR);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/ObjectHistogram.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.util.Collections;\n@@ -121,1 +120,1 @@\n-\t\tCollections.sort(result, new Comparator<DupArrayStats.Entry>() {\n+\t\tresult.sort(new Comparator<DupArrayStats.Entry>() {\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/PrimitiveArrayDuplicationMap.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -209,1 +208,1 @@\n-\t\tCollections.sort(dupStringList, new Comparator<DupStringStats.Entry>() {\n+\t\tdupStringList.sort(new Comparator<DupStringStats.Entry>() {\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/StringStatsCollector.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -59,1 +58,1 @@\n-\t\t\tCollections.sort(result);\n+\t\t\tresult.sort(null);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/support\/ClassAndOvhdComboList.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -59,1 +58,1 @@\n-\t\t\tCollections.sort(result);\n+\t\t\tresult.sort(null);\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/support\/ClassAndSizeComboList.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -63,1 +62,1 @@\n-\t\tCollections.sort(props, new ContentProposalComparator());\n+\t\tprops.sort(new ContentProposalComparator());\n","filename":"application\/org.openjdk.jmc.rcp.application\/src\/main\/java\/org\/openjdk\/jmc\/rcp\/application\/scripting\/ProposalProvider.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import java.util.Collections;\n@@ -56,1 +55,0 @@\n-\n@@ -85,1 +83,1 @@\n-\t\tCollections.sort(configurationElements, comparator);\n+\t\tconfigurationElements.sort(comparator);\n@@ -98,1 +96,1 @@\n-\t\tCollections.sort(addOnElements, comparator);\n+\t\taddOnElements.sort(comparator);\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/actionprovider\/internal\/ActionProviderRepository.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import java.util.Collections;\n@@ -96,1 +95,1 @@\n-\t\t\t\tCollections.sort(existingFiles, PersistenceFile.PERSISTENCE_FILE_START_COMPARATOR);\n+\t\t\t\texistingFiles.sort(PersistenceFile.PERSISTENCE_FILE_START_COMPARATOR);\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/persistence\/internal\/AttributeWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -279,1 +279,1 @@\n-\t\tCollections.sort(files, PersistenceFile.PERSISTENCE_FILE_START_COMPARATOR);\n+\t\tfiles.sort(PersistenceFile.PERSISTENCE_FILE_START_COMPARATOR);\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/persistence\/internal\/PersistenceReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-\t\tCollections.sort(rules, COMPARATOR);\n+\t\trules.sort(COMPARATOR);\n@@ -193,1 +193,1 @@\n-\t\tCollections.sort(rules, COMPARATOR);\n+\t\trules.sort(COMPARATOR);\n","filename":"application\/org.openjdk.jmc.ui.common\/src\/main\/java\/org\/openjdk\/jmc\/ui\/common\/labelingrules\/NameConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.util.Collections;\n@@ -44,1 +43,0 @@\n-\n@@ -70,1 +68,1 @@\n-\t\t\tCollections.sort(unitList);\n+\t\t\tunitList.sort(null);\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/misc\/LinearQuantityProposalProvider.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -279,1 +279,1 @@\n-\t\tCollections.sort(m_list);\n+\t\tm_list.sort(null);\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/misc\/MCToolBarManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -517,1 +517,1 @@\n-\t\tjava.util.Collections.sort(allEventNames);\n+\t\tallEventNames.sort(null);\n","filename":"application\/uitests\/org.openjdk.jmc.test.jemmy\/src\/test\/java\/org\/openjdk\/jmc\/test\/jemmy\/misc\/helpers\/EventSettingsData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -229,1 +229,1 @@\n-\t\t\t\t\tCollections.sort(values);\n+\t\t\t\t\tvalues.sort(null);\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/item\/GroupingAggregator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.util.Collections;\n@@ -219,1 +218,1 @@\n-\t\t\tCollections.sort(heaps);\n+\t\t\theaps.sort(null);\n@@ -241,1 +240,1 @@\n-\t\t\t\tCollections.sort(ratios);\n+\t\t\t\tratios.sort(null);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/compilation\/CodeCacheRule.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import java.util.Collections;\n@@ -172,1 +171,1 @@\n-\t\t\tCollections.sort(entries);\n+\t\t\tentries.sort(null);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/general\/ClassLeakingRule.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,1 +150,1 @@\n-\t\t\tCollections.sort(typesWithTruncatedTraces);\n+\t\t\ttypesWithTruncatedTraces.sort(null);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/general\/StackDepthSettingRule.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import java.util.Collections;\n@@ -171,1 +170,1 @@\n-\t\tCollections.sort(revocationClasses);\n+\t\trevocationClasses.sort(null);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/latency\/BiasedLockingRevocationRule.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,1 +140,1 @@\n-\t\t\tCollections.sort(settingPairs, new Comparator<Pair<IQuantity, IQuantity>>() {\n+\t\t\tsettingPairs.sort(new Comparator<Pair<IQuantity, IQuantity>>() {\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/latency\/MethodProfilingRule.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.util.Collections;\n@@ -200,1 +199,1 @@\n-\t\tCollections.sort(sortedEvents, new Comparator<IItem>() {\n+\t\tsortedEvents.sort(new Comparator<IItem>() {\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/latency\/VMOperationRule.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.util.Collections;\n@@ -263,1 +262,1 @@\n-\t\t\tCollections.sort(resultFutureList, new Comparator<Map.Entry<IRule, ?>>() {\n+\t\t\tresultFutureList.sort(new Comparator<Map.Entry<IRule, ?>>() {\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/report\/JfrRulesReport.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.util.Collections;\n@@ -264,1 +263,1 @@\n-\t\tCollections.sort(resultList, RESULT_SCORE_COMPARATOR);\n+\t\tresultList.sort(RESULT_SCORE_COMPARATOR);\n@@ -379,1 +378,1 @@\n-\t\tCollections.sort(sorted, RESULT_RULEID_COMPARATOR);\n+\t\tsorted.sort(RESULT_RULEID_COMPARATOR);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/report\/html\/internal\/RulesHtmlToolkit.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -82,1 +81,1 @@\n-\t\tCollections.sort(layers, LayerBreakdownVisitor.BREAKDOWN_COMPARATOR);\n+\t\tlayers.sort(LayerBreakdownVisitor.BREAKDOWN_COMPARATOR);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/tree\/traversal\/LayerBreakdownGenerator.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -77,1 +76,1 @@\n-\t\t\tCollections.sort(list, ENTRY_COMPARATOR);\n+\t\t\tlist.sort(ENTRY_COMPARATOR);\n@@ -151,1 +150,1 @@\n-\t\tCollections.sort(layers, BREAKDOWN_COMPARATOR);\n+\t\tlayers.sort(BREAKDOWN_COMPARATOR);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/tree\/traversal\/LayerBreakdownVisitor.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -813,1 +813,1 @@\n-\t\tCollections.sort(array);\n+\t\tarray.sort(null);\n@@ -931,1 +931,1 @@\n-\t\tCollections.sort(quotedNames);\n+\t\tquotedNames.sort(null);\n@@ -1345,1 +1345,1 @@\n-\t\tCollections.sort(entries, new Comparator<Map.Entry<String, Integer>>() {\n+\t\tentries.sort(new Comparator<Map.Entry<String, Integer>>() {\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/util\/RulesToolkit.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Collections;\n@@ -104,1 +103,1 @@\n-\t\t\tCollections.sort(list, CHRONOLOGICAL);\n+\t\t\tlist.sort(CHRONOLOGICAL);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v0\/ConstantEntryList.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,2 +166,1 @@\n-\t\tCollections.sort(allLanes, new Comparator<DisjointArray<?>>() {\n-\n+\t\tallLanes.sort(new Comparator<DisjointArray<?>>() {\n@@ -172,1 +171,0 @@\n-\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/util\/DisjointBuilder.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.util.Collections;\n@@ -439,1 +438,1 @@\n-\t\t\tCollections.sort(branchHeadFrames, COUNT_CMP);\n+\t\t\tbranchHeadFrames.sort(COUNT_CMP);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/StacktraceModel.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-import java.util.Collections;\n@@ -164,1 +163,1 @@\n-\t\tCollections.sort(events);\n+\t\tevents.sort(null);\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/test\/util\/PrintoutsToolkit.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}