{"files":[{"patch":"@@ -59,1 +59,1 @@\n-\t\t\t\tfalse);\n+\t\t\t\tfalse, false);\n@@ -67,1 +67,1 @@\n-\t\t\t\tfalse);\n+\t\t\t\tfalse, true);\n@@ -77,1 +77,1 @@\n-\t\t\t\ttrue);\n+\t\t\t\ttrue, true);\n@@ -87,1 +87,1 @@\n-\t\t\t\ttrue);\n+\t\t\t\ttrue, true);\n@@ -97,1 +97,1 @@\n-\t\t\t\ttrue);\n+\t\t\t\ttrue, true);\n@@ -107,1 +107,1 @@\n-\t\t\t\ttrue);\n+\t\t\t\ttrue, true);\n@@ -117,1 +117,1 @@\n-\t\t\t\tokName, true);\n+\t\t\t\tokName, true, true);\n@@ -124,0 +124,10 @@\n+\t@Test\n+\tpublic void testJfrArgsIfQuotedSpacePathsDefaultSettingsJdkHigherThen11() throws Exception {\n+\t\tJfrArgsBuilder options = new JfrArgsBuilder(true, true, okDuration, okDelay, spaceProfile, spaceFilename,\n+\t\t\t\tokName, true, false);\n+\t\tString jfrArgs = JfrArgsBuilder.joinToCommandline(options.getJfrArgs(true));\n+\t\tAssert.assertEquals(\n+\t\t\t\t\"-XX:+FlightRecorder -XX:StartFlightRecording=settings=\\\"default foobar\\\",dumponexit=true,name=kossa,filename=\\\"Kossa Apa\/apa.jfr\\\"\",\n+\t\t\t\tjfrArgs);\n+\t}\n+\n","filename":"application\/tests\/org.openjdk.jmc.ide.launch.test\/src\/test\/java\/org\/openjdk\/jmc\/ide\/launch\/model\/JfrArgsBuilderJfrArgsTest.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"}]}