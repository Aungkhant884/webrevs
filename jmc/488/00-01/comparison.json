{"files":[{"patch":"@@ -46,1 +46,1 @@\n-import org.openjdk.jmc.common.item.IItem;\n+import org.openjdk.jmc.common.item.IItemFilter;\n@@ -48,1 +48,2 @@\n-import org.openjdk.jmc.common.item.IItemIterable;\n+import org.openjdk.jmc.common.item.ItemFilters;\n+import org.openjdk.jmc.common.item.PersistableItemFilter.Kind;\n@@ -112,1 +113,0 @@\n-\t\t\t\t\tint exceededCount = 0;\n@@ -114,7 +114,1 @@\n-\t\t\t\t\tfor (IItemIterable item : g1mmuItems) {\n-\t\t\t\t\t\tfor (IItem event : item) {\n-\t\t\t\t\t\t\tif (RulesToolkit.getValue(event, JdkAttributes.GC_TIME).compareTo(pauseTarget) < 1) {\n-\t\t\t\t\t\t\t\texceededCount++;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+\t\t\t\t\tIItemFilter filter = ItemFilters.buildComparisonFilter(Kind.MORE, JdkAttributes.GC_TIME, pauseTarget);\n@@ -122,1 +116,1 @@\n-\t\t\t\t\tIQuantity g1mmuExceeded = UnitLookup.NUMBER_UNITY.quantity(exceededCount);\n+\t\t\t\t\tIQuantity g1mmuExceeded = g1mmuItems.apply(filter).getAggregate(Aggregators.count());\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/memory\/GcPauseTargetRule.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"}]}