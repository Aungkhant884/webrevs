{"files":[{"patch":"@@ -38,0 +38,2 @@\n+import javax.xml.stream.XMLStreamException;\n+\n@@ -86,0 +88,2 @@\n+\t * @throws XMLStreamException\n+\t *             if the supplied XML fails to validate.\n@@ -87,1 +91,1 @@\n-\tSet<String> modify(String xmlDescription);\n+\tSet<String> modify(String xmlDescription) throws XMLStreamException;\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/TransformRegistry.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -487,1 +487,1 @@\n-\tpublic Set<String> modify(String xmlDescription) {\n+\tpublic Set<String> modify(String xmlDescription) throws XMLStreamException {\n@@ -520,1 +520,1 @@\n-\t\t\treturn null;\n+\t\t\tthrow xse;\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/impl\/DefaultTransformRegistry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,7 +69,6 @@\n-\t\t\tSet<String> modifiedClasses = registry.modify(xmlDescription);\n-\t\t\tif (modifiedClasses == null) {\n-\t\t\t\tlogger.log(Level.SEVERE, \"Failed to identify transformations: \" + xmlDescription);\n-\t\t\t\treturn;\n-\t\t\t} else {\n-\t\t\t\tmodifiedClasses.addAll(initialClasses);\n-\t\t\t\tclassesToRetransformArray = retransformClasses(modifiedClasses);\n+\t\t\tSet<String> modifiedClasses;\n+\t\t\ttry {\n+\t\t\t\tmodifiedClasses = registry.modify(xmlDescription);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlogger.severe(\"Failed to identify transformations: \" + xmlDescription);\n+\t\t\t\tthrow e;\n@@ -77,0 +76,2 @@\n+\t\t\tmodifiedClasses.addAll(initialClasses);\n+\t\t\tclassesToRetransformArray = retransformClasses(modifiedClasses);\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/jmx\/AgentController.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -127,2 +127,8 @@\n-\t\tSet<String> modifiedClassNames = registry.modify(invalidSnippet);\n-\t\tassertNull(modifiedClassNames);\n+\t\tboolean exceptionThrown = false;\n+\t\ttry {\n+\t\t\tSet<String> modifiedClassNames = registry.modify(invalidSnippet);\n+\t\t} catch (Exception e) {\n+\t\t\te.printStackTrace(System.err);\n+\t\t\texceptionThrown = true;\n+\t\t}\n+\t\tassertTrue(exceptionThrown);\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/test\/TestDefaultTransformRegistry.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -83,0 +83,2 @@\n+\tprivate static final String MALFORMED_XML = \"<this>\" + \"<is>\" + \"<not>\" + \"<a>\" + \"<valid>\" + \"<probe>\"\n+\t\t\t+ \"<definition>\" + \"<\/definition>\" + \"<\/probe>\" + \"<\/valid>\" + \"<\/a>\" + \"<\/not>\" + \"<\/is>\" + \"<\/this>\";\n@@ -115,0 +117,12 @@\n+\t@Test\n+\tpublic void testMalformedProbeDefinition() throws Exception {\n+\t\tboolean exceptionThrown = false;\n+\t\ttry {\n+\t\t\tdoDefineEventProbes(MALFORMED_XML);\n+\t\t} catch (Exception e) {\n+\t\t\texceptionThrown = true;\n+\t\t\te.printStackTrace(System.err);\n+\t\t}\n+\t\tassertTrue(exceptionThrown);\n+\t}\n+\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/test\/TestDefineEventProbes.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}