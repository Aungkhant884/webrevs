{"files":[{"patch":"@@ -105,1 +105,1 @@\n-\t\t\tthrows XMLStreamException {\n+\t\t\tthrows XMLStreamException, XMLValidationException {\n@@ -135,1 +135,1 @@\n-\t\t\t} catch (XMLStreamException e) {\n+\t\t\t} catch (XMLStreamException | XMLValidationException e) {\n@@ -144,1 +144,1 @@\n-\t\t} catch (XMLStreamException | IOException e) {\n+\t\t} catch (XMLStreamException | IOException | XMLValidationException e) {\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/Agent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,2 @@\n+\t * @throws XMLValidationException\n+\t *             if the supplied XML fails to validate.\n@@ -87,1 +89,1 @@\n-\tSet<String> modify(String xmlDescription);\n+\tSet<String> modify(String xmlDescription) throws XMLValidationException;\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/TransformRegistry.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Red Hat Inc. All rights reserved.\n+ * \n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The contents of this file are subject to the terms of either the Universal Permissive License\n+ * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n+ *\n+ * or the following license:\n+ *\n+ * Redistribution and use in source and binary forms, with or without modification, are permitted\n+ * provided that the following conditions are met:\n+ * \n+ * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n+ * and the following disclaimer.\n+ * \n+ * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n+ * conditions and the following disclaimer in the documentation and\/or other materials provided with\n+ * the distribution.\n+ * \n+ * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n+ * endorse or promote products derived from this software without specific prior written permission.\n+ * \n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n+ * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+package org.openjdk.jmc.agent;\n+\n+\/**\n+ * Exception to throw when validating the agent probe definitino xml fails\n+ *\/\n+public class XMLValidationException extends Exception {\n+\n+\t\/**\n+\t *\/\n+\tprivate static final long serialVersionUID = -9001765953540356861L;\n+\n+\t\/**\n+\t * @param message\n+\t *\/\n+\tpublic XMLValidationException(String message) {\n+\t\tsuper(message);\n+\t}\n+\n+\t\/**\n+\t * @param message\n+\t * @param cause\n+\t *\/\n+\tpublic XMLValidationException(String message, Throwable cause) {\n+\t\tsuper(message, cause);\n+\t}\n+\n+}\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/XMLValidationException.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +71,1 @@\n+import org.openjdk.jmc.agent.XMLValidationException;\n@@ -124,1 +125,1 @@\n-\tpublic static void validateProbeDefinition(InputStream in) throws XMLStreamException {\n+\tpublic static void validateProbeDefinition(InputStream in) throws XMLValidationException {\n@@ -129,1 +130,1 @@\n-\t\t\tthrow new XMLStreamException(e);\n+\t\t\tthrow new XMLValidationException(e.getMessage(), e);\n@@ -133,1 +134,1 @@\n-\tpublic static void validateProbeDefinition(String configuration) throws XMLStreamException {\n+\tpublic static void validateProbeDefinition(String configuration) throws XMLValidationException {\n@@ -137,1 +138,1 @@\n-\tpublic static TransformRegistry from(InputStream in) throws XMLStreamException {\n+\tpublic static TransformRegistry from(InputStream in) throws XMLStreamException, XMLValidationException {\n@@ -148,0 +149,2 @@\n+\t\t} catch (XMLValidationException xve) {\n+\t\t\tthrow xve;\n@@ -487,1 +490,1 @@\n-\tpublic Set<String> modify(String xmlDescription) {\n+\tpublic Set<String> modify(String xmlDescription) throws XMLValidationException {\n@@ -520,1 +523,1 @@\n-\t\t\treturn null;\n+\t\t\tthrow new XMLValidationException(xse.getMessage(), xse);\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/impl\/DefaultTransformRegistry.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -69,7 +69,6 @@\n-\t\t\tSet<String> modifiedClasses = registry.modify(xmlDescription);\n-\t\t\tif (modifiedClasses == null) {\n-\t\t\t\tlogger.log(Level.SEVERE, \"Failed to identify transformations: \" + xmlDescription);\n-\t\t\t\treturn;\n-\t\t\t} else {\n-\t\t\t\tmodifiedClasses.addAll(initialClasses);\n-\t\t\t\tclassesToRetransformArray = retransformClasses(modifiedClasses);\n+\t\t\tSet<String> modifiedClasses;\n+\t\t\ttry {\n+\t\t\t\tmodifiedClasses = registry.modify(xmlDescription);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlogger.severe(\"Failed to identify transformations: \" + xmlDescription);\n+\t\t\t\tthrow e;\n@@ -77,0 +76,2 @@\n+\t\t\tmodifiedClasses.addAll(initialClasses);\n+\t\t\tclassesToRetransformArray = retransformClasses(modifiedClasses);\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/jmx\/AgentController.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import org.openjdk.jmc.agent.XMLValidationException;\n@@ -66,1 +67,2 @@\n-\tpublic void testRunConverterTransforms() throws XMLStreamException, IllegalClassFormatException, IOException {\n+\tpublic void testRunConverterTransforms()\n+\t\t\tthrows XMLStreamException, IllegalClassFormatException, IOException, XMLValidationException {\n@@ -87,1 +89,2 @@\n-\tpublic static void main(String[] args) throws XMLStreamException, IOException, IllegalClassFormatException {\n+\tpublic static void main(String[] args)\n+\t\t\tthrows XMLStreamException, IOException, IllegalClassFormatException, XMLValidationException {\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/converters\/test\/TestConverterTransforms.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+import org.openjdk.jmc.agent.XMLValidationException;\n@@ -67,1 +68,1 @@\n-\tpublic void testHasPendingTransforms() throws XMLStreamException, IOException {\n+\tpublic void testHasPendingTransforms() throws XMLStreamException, IOException, XMLValidationException {\n@@ -81,1 +82,1 @@\n-\tpublic void testFrom() throws XMLStreamException, IOException {\n+\tpublic void testFrom() throws XMLStreamException, IOException, XMLValidationException {\n@@ -88,1 +89,1 @@\n-\tpublic void testGetTransformData() throws XMLStreamException, IOException {\n+\tpublic void testGetTransformData() throws XMLStreamException, IOException, XMLValidationException {\n@@ -98,1 +99,1 @@\n-\tpublic void testModify() throws XMLStreamException, IOException {\n+\tpublic void testModify() throws XMLValidationException, IOException, XMLStreamException {\n@@ -110,1 +111,1 @@\n-\tpublic void testModifyNameCollision() throws XMLStreamException, IOException {\n+\tpublic void testModifyNameCollision() throws XMLValidationException, IOException, XMLStreamException {\n@@ -121,1 +122,1 @@\n-\tpublic void testModifyInvalidXml() throws XMLStreamException, IOException {\n+\tpublic void testModifyInvalidXml() throws XMLStreamException, IOException, XMLValidationException {\n@@ -127,2 +128,8 @@\n-\t\tSet<String> modifiedClassNames = registry.modify(invalidSnippet);\n-\t\tassertNull(modifiedClassNames);\n+\t\tboolean exceptionThrown = false;\n+\t\ttry {\n+\t\t\tSet<String> modifiedClassNames = registry.modify(invalidSnippet);\n+\t\t} catch (Exception e) {\n+\t\t\te.printStackTrace(System.err);\n+\t\t\texceptionThrown = true;\n+\t\t}\n+\t\tassertTrue(exceptionThrown);\n@@ -133,1 +140,1 @@\n-\tpublic void testClearAllTransformData() throws XMLStreamException, IOException {\n+\tpublic void testClearAllTransformData() throws XMLStreamException, IOException, XMLValidationException {\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/test\/TestDefaultTransformRegistry.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019, 2020, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Red Hat Inc. All rights reserved.\n@@ -83,0 +83,2 @@\n+\tprivate static final String MALFORMED_XML = \"<this>\" + \"<is>\" + \"<not>\" + \"<a>\" + \"<valid>\" + \"<probe>\"\n+\t\t\t+ \"<definition>\" + \"<\/definition>\" + \"<\/probe>\" + \"<\/valid>\" + \"<\/a>\" + \"<\/not>\" + \"<\/is>\" + \"<\/this>\";\n@@ -115,0 +117,12 @@\n+\t@Test\n+\tpublic void testMalformedProbeDefinition() throws Exception {\n+\t\tboolean exceptionThrown = false;\n+\t\ttry {\n+\t\t\tdoDefineEventProbes(MALFORMED_XML);\n+\t\t} catch (Exception e) {\n+\t\t\texceptionThrown = true;\n+\t\t\te.printStackTrace(System.err);\n+\t\t}\n+\t\tassertTrue(exceptionThrown);\n+\t}\n+\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/test\/TestDefineEventProbes.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import org.openjdk.jmc.agent.XMLValidationException;\n@@ -62,1 +63,2 @@\n-\tpublic void testRunTransforms() throws XMLStreamException, IllegalClassFormatException, IOException {\n+\tpublic void testRunTransforms()\n+\t\t\tthrows XMLStreamException, XMLValidationException, IllegalClassFormatException, IOException {\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/test\/TestJFRTransformer.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021 Red Hat Inc. All rights reserved.\n@@ -37,0 +37,1 @@\n+import org.openjdk.jmc.agent.XMLValidationException;\n@@ -39,1 +40,0 @@\n-import javax.xml.stream.XMLStreamException;\n@@ -48,1 +48,1 @@\n-\tpublic void testValidatingProbeDefinition() throws XMLStreamException {\n+\tpublic void testValidatingProbeDefinition() throws XMLValidationException {\n@@ -63,1 +63,1 @@\n-\tpublic void testValidatingFullyDefinedProbe() throws XMLStreamException {\n+\tpublic void testValidatingFullyDefinedProbe() throws XMLValidationException {\n@@ -95,2 +95,2 @@\n-\t@Test(expected = XMLStreamException.class)\n-\tpublic void testValidatingEmptyString() throws XMLStreamException {\n+\t@Test(expected = XMLValidationException.class)\n+\tpublic void testValidatingEmptyString() throws XMLValidationException {\n@@ -100,2 +100,2 @@\n-\t@Test(expected = XMLStreamException.class)\n-\tpublic void testValidatingNonXmlInput() throws XMLStreamException {\n+\t@Test(expected = XMLValidationException.class)\n+\tpublic void testValidatingNonXmlInput() throws XMLValidationException {\n@@ -106,1 +106,1 @@\n-\tpublic void testValidatingCorrectClassNames() throws XMLStreamException {\n+\tpublic void testValidatingCorrectClassNames() throws XMLValidationException {\n@@ -123,2 +123,2 @@\n-\t@Test(expected = XMLStreamException.class)\n-\tpublic void testValidatingEmptyClassName() throws XMLStreamException {\n+\t@Test(expected = XMLValidationException.class)\n+\tpublic void testValidatingEmptyClassName() throws XMLValidationException {\n@@ -136,2 +136,2 @@\n-\t@Test(expected = XMLStreamException.class)\n-\tpublic void testValidatingIncorrectClassPattern() throws XMLStreamException {\n+\t@Test(expected = XMLValidationException.class)\n+\tpublic void testValidatingIncorrectClassPattern() throws XMLValidationException {\n@@ -151,1 +151,1 @@\n-\tpublic void testValidatingMethodDescriptor() throws XMLStreamException {\n+\tpublic void testValidatingMethodDescriptor() throws XMLValidationException {\n@@ -170,2 +170,2 @@\n-\t@Test(expected = XMLStreamException.class)\n-\tpublic void testValidatingEmptyDescriptor() throws XMLStreamException {\n+\t@Test(expected = XMLValidationException.class)\n+\tpublic void testValidatingEmptyDescriptor() throws XMLValidationException {\n@@ -183,2 +183,2 @@\n-\t@Test(expected = XMLStreamException.class)\n-\tpublic void testValidatingIncorrectDescriptor() throws XMLStreamException {\n+\t@Test(expected = XMLValidationException.class)\n+\tpublic void testValidatingIncorrectDescriptor() throws XMLValidationException {\n@@ -198,1 +198,1 @@\n-\tpublic void testValidatingExpressions() throws XMLStreamException {\n+\tpublic void testValidatingExpressions() throws XMLValidationException {\n","filename":"agent\/src\/test\/java\/org\/openjdk\/jmc\/agent\/test\/TestProbeDefinitionValidation.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"}]}