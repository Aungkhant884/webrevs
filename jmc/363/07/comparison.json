{"files":[{"patch":"@@ -7,0 +7,3 @@\n+    strategy:\n+      matrix:\n+        jdk: ['11', '17']\n@@ -12,1 +15,1 @@\n-        java-version: '11'\n+        java-version: {{ matrix.jdk }}\n@@ -18,1 +21,1 @@\n-        key: ${{ runner.os }}-maven-${{ hashFiles('**\/pom.xml') }}\n+        key: ${{ runner.os }}-{{ matrix.jdk }}-maven-${{ hashFiles('**\/pom.xml') }}\n@@ -20,1 +23,1 @@\n-          ${{ runner.os }}-maven-\n+          ${{ runner.os }}-{{ matrix.jdk }}maven-\n@@ -31,0 +34,3 @@\n+    strategy:\n+      matrix:\n+        jdk: ['11', '17']\n@@ -36,1 +42,1 @@\n-        java-version: '11'\n+        java-version: {{ matrix.jdk }}\n@@ -42,1 +48,1 @@\n-        key: ${{ runner.os }}-maven-${{ hashFiles('**\/pom.xml') }}\n+        key: ${{ runner.os }}-{{ matrix.jdk }}-maven-${{ hashFiles('**\/pom.xml') }}\n@@ -44,1 +50,1 @@\n-          ${{ runner.os }}-maven-\n+          ${{ runner.os }}-{{ matrix.jdk }}-maven-\n@@ -55,0 +61,3 @@\n+    strategy:\n+      matrix:\n+        jdk: ['11', '17']\n@@ -60,1 +69,1 @@\n-        java-version: '11'\n+        java-version: {{ matrix.jdk }}\n@@ -66,1 +75,1 @@\n-        key: ${{ runner.os }}-maven-${{ hashFiles('**\/pom.xml') }}\n+        key: ${{ runner.os }}-{{ matrix.jdk }}-maven-${{ hashFiles('**\/pom.xml') }}\n@@ -68,1 +77,1 @@\n-          ${{ runner.os }}-maven-\n+          ${{ runner.os }}-{{ matrix.jdk }}-maven-\n","filename":".github\/workflows\/validate.yml","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+\t\t\t\t\t\t<args>-version<\/args><!-- see https:\/\/bugs.eclipse.org\/bugs\/show_bug.cgi?id=544016 -->\n","filename":"application\/org.openjdk.jmc.browser.attach\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+\t\t\t\t\t\t<args>-version<\/args>\n","filename":"application\/org.openjdk.jmc.browser\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-\t\t<maven.javadoc.version>3.2.0<\/maven.javadoc.version>\n+\t\t<maven.javadoc.version>3.3.1<\/maven.javadoc.version>\n","filename":"core\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-\t\t<maven.javadoc.version>3.2.0<\/maven.javadoc.version>\n+\t\t<maven.javadoc.version>3.3.1<\/maven.javadoc.version>\n@@ -65,2 +65,2 @@\n-\t\t<mockito.core.version>3.7.7<\/mockito.core.version>\n-\t\t<mockito.inline.version>3.7.7<\/mockito.inline.version>\n+\t\t<mockito.core.version>3.12.4<\/mockito.core.version>\n+\t\t<mockito.inline.version>3.12.4<\/mockito.inline.version>\n","filename":"core\/tests\/pom.xml","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -20,1 +20,1 @@\n-Next set up your JDKs in your Eclipse. Download and install a JDK 8 and JDK 11 (or the very latest update of the latest JDK), then open Window | Preferences and then select Java \/ Installed JREs. Add your favourite JKD 8 and JDK 11 JDKs (Add…) and then use Java \/ Installed JREs \/ Execution Environments to set them as defaults for the JDK 8 and JDK 11 execution environments.\n+Next set up your JDKs in your Eclipse. Download and install a JDK 8 and JDK 11 (or at most JDK 17), then open Window | Preferences and then select Java \/ Installed JREs. Add your favourite JKD 8 and JDK 11 JDKs (Add…) and then use Java \/ Installed JREs \/ Execution Environments to set them as defaults for the JDK 8 and JDK 11 execution environments.\n@@ -30,1 +30,3 @@\n-Okay, we now have our JDKs set up. If you want to import not only the JMC core project, you will next need to set up a user library for things that JMC will need from the JDK. Go to Preferences | Java\/Build Path\/User Libraries and create a new library named JMC_JDK. Add (Add External JARs…) the following JARs from a JDK 8 (u40 or above) to the User Library: tools.jar (\/lib\/tools.jar) and finally jconsole.jar (\/lib\/jconsole.jar).\n+On JDK 17: you might need to change the execution environment in this tab to \"JavaSE-11\" and select a JDK 17 as the used JDK.\n+\n+Okay, we now have our JDKs set up. If you want to import not only the JMC core project, you will next need to set up a user library for things that JMC will need from the JDK. Go to Preferences | Java\/Build Path\/User Libraries and create a new library named JMC_JDK. Add (Add External JARs…) the following JARs from a JDK 8 (u40 or above) to the User Library: tools.jar (\/lib\/tools.jar) and finally jconsole.jar (\/lib\/jconsole.jar). On JDK 17 you have to get these libraries from an JDK 8 package.\n@@ -84,1 +86,3 @@\n-For dynamic working sets, see http:\/\/hirt.se\/blog\/?p=1149.\n\\ No newline at end of file\n+For dynamic working sets, see http:\/\/hirt.se\/blog\/?p=1149.\n+\n+For testing: Run all tests as \"JUnit Plugin-In Test\" tests in eclipse and use the scripts in the `scripts` folder for running the tests.\n","filename":"docs\/devguide\/README.md","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-\t\t<p2-maven-plugin.version>1.5.0<\/p2-maven-plugin.version>\n+\t\t<p2-maven-plugin.version>2.0.0<\/p2-maven-plugin.version>\n","filename":"releng\/third-party\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}