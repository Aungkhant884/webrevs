{"files":[{"patch":"@@ -7,0 +7,3 @@\n+    strategy:\n+      matrix:\n+        jdk: ['11', '17']\n@@ -12,1 +15,1 @@\n-        java-version: '11'\n+        java-version: {{ matrix.jdk }}\n@@ -18,1 +21,1 @@\n-        key: ${{ runner.os }}-maven-${{ hashFiles('**\/pom.xml') }}\n+        key: ${{ runner.os }}-{{ matrix.jdk }}-maven-${{ hashFiles('**\/pom.xml') }}\n@@ -20,1 +23,1 @@\n-          ${{ runner.os }}-maven-\n+          ${{ runner.os }}-{{ matrix.jdk }}maven-\n@@ -31,0 +34,3 @@\n+    strategy:\n+      matrix:\n+        jdk: ['11', '17']\n@@ -36,1 +42,1 @@\n-        java-version: '11'\n+        java-version: {{ matrix.jdk }}\n@@ -42,1 +48,1 @@\n-        key: ${{ runner.os }}-maven-${{ hashFiles('**\/pom.xml') }}\n+        key: ${{ runner.os }}-{{ matrix.jdk }}-maven-${{ hashFiles('**\/pom.xml') }}\n@@ -44,1 +50,1 @@\n-          ${{ runner.os }}-maven-\n+          ${{ runner.os }}-{{ matrix.jdk }}-maven-\n@@ -55,0 +61,3 @@\n+    strategy:\n+      matrix:\n+        jdk: ['11', '17']\n@@ -60,1 +69,1 @@\n-        java-version: '11'\n+        java-version: {{ matrix.jdk }}\n@@ -66,1 +75,1 @@\n-        key: ${{ runner.os }}-maven-${{ hashFiles('**\/pom.xml') }}\n+        key: ${{ runner.os }}-{{ matrix.jdk }}-maven-${{ hashFiles('**\/pom.xml') }}\n@@ -68,1 +77,1 @@\n-          ${{ runner.os }}-maven-\n+          ${{ runner.os }}-{{ matrix.jdk }}-maven-\n","filename":".github\/workflows\/validate.yml","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+\t\t\t\t\t\t<args>-version<\/args><!-- see https:\/\/bugs.eclipse.org\/bugs\/show_bug.cgi?id=544016 -->\n","filename":"application\/org.openjdk.jmc.browser.attach\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+\t\t\t\t\t\t<args>-version<\/args>\n","filename":"application\/org.openjdk.jmc.browser\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.util.ArrayList;\n@@ -54,0 +55,1 @@\n+import org.openjdk.jmc.common.version.JavaVersionSupport;\n@@ -69,0 +71,1 @@\n+import org.openjdk.jmc.rjmx.ConnectionToolkit;\n@@ -90,1 +93,1 @@\n-\t\t\t\tpropertyRoots, \"root\");\n+\t\t\t\tremoveUnsupportedRootNodes(propertyRoots), \"root\");\n@@ -105,1 +108,1 @@\n-\t\t\t\t\t\"org\", \"IN_CONFIGURATION\"), propertyRoots, \"root\");\n+\t\t\t\t\t\"org\", \"IN_CONFIGURATION\"), removeUnsupportedRootNodes(propertyRoots), \"root\");\n@@ -116,1 +119,1 @@\n-\t\t\t\tpropertyRoots, \"root\");\n+\t\t\t\tremoveUnsupportedRootNodes(propertyRoots), \"root\");\n@@ -125,1 +128,1 @@\n-\t\t\t\tpropertyRoots, \"root\");\n+\t\t\t\tremoveUnsupportedRootNodes(propertyRoots), \"root\");\n@@ -149,1 +152,2 @@\n-\t\t\/\/ FIXME: Should we include extraTestOption and enabledButWrongForTest here, with either IN_CONFIGURATION style, or some new disabled\/error style?\n+\t\t\/\/ FIXME: Should we include extraTestOption and enabledButWrongForTest here,\n+\t\t\/\/ with either IN_CONFIGURATION style, or some new disabled\/error style?\n@@ -151,1 +155,2 @@\n-\t\tassertOptions(threadAllocation, Arrays.asList(\"Enabled\", \"IN_BOTH\", \"Period\", \"IN_BOTH\")); \/\/ \"extraTestOption\", \"IN_CONFIGURATION\"\n+\t\tassertOptions(threadAllocation, Arrays.asList(\"Enabled\", \"IN_BOTH\", \"Period\", \"IN_BOTH\")); \/\/ \"extraTestOption\",\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/ \"IN_CONFIGURATION\"\n@@ -154,1 +159,2 @@\n-\t\tassertOptions(classLoadingStatistics, Arrays.asList(\"Period\", \"IN_BOTH\", \"Enabled\", \"IN_BOTH\")); \/\/ \"enabledButWrongForTest\", \"IN_CONFIGURATION\"\n+\t\tassertOptions(classLoadingStatistics, Arrays.asList(\"Period\", \"IN_BOTH\", \"Enabled\", \"IN_BOTH\")); \/\/ \"enabledButWrongForTest\",\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/ \"IN_CONFIGURATION\"\n@@ -187,1 +193,2 @@\n-\t\t\/\/ FIXME: Should we include extraTestOption and enabledButWrongForTest here, with either IN_CONFIGURATION style, or some new disabled\/error style?\n+\t\t\/\/ FIXME: Should we include extraTestOption and enabledButWrongForTest here,\n+\t\t\/\/ with either IN_CONFIGURATION style, or some new disabled\/error style?\n@@ -189,1 +196,2 @@\n-\t\tassertOptions(threadAllocation, Arrays.asList(\"Enabled\", \"IN_BOTH\", \"Period\", \"IN_BOTH\")); \/\/ \"extraTestOption\", \"IN_CONFIGURATION\"\n+\t\tassertOptions(threadAllocation, Arrays.asList(\"Enabled\", \"IN_BOTH\", \"Period\", \"IN_BOTH\")); \/\/ \"extraTestOption\",\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/ \"IN_CONFIGURATION\"\n@@ -192,1 +200,2 @@\n-\t\tassertOptions(classLoadingStatistics, Arrays.asList(\"Period\", \"IN_BOTH\", \"Enabled\", \"IN_SERVER\")); \/\/ \"enabledButWrongForTest\", \"IN_CONFIGURATION\"\n+\t\tassertOptions(classLoadingStatistics, Arrays.asList(\"Period\", \"IN_BOTH\", \"Enabled\", \"IN_SERVER\")); \/\/ \"enabledButWrongForTest\",\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/ \"IN_CONFIGURATION\"\n@@ -244,0 +253,5 @@\n+\t\tString[] expected = new String[] {\"Enabled\", \"Period\", \"Stack Trace\", \"Threshold\"};\n+\t\tif (ConnectionToolkit.isJavaVersionAboveOrEqual(getConnectionHandle(), JavaVersionSupport.JDK_16)) {\n+\t\t\t\/\/ probably related to https:\/\/bugs.openjdk.java.net\/browse\/JDK-8257602\n+\t\t\texpected = new String[] {\"Enabled\", \"Event Emission Throttle\", \"Period\", \"Stack Trace\", \"Threshold\"};\n+\t\t}\n@@ -245,1 +259,1 @@\n-\t\t\t\tnew String[] {\"Enabled\", \"Period\", \"Stack Trace\", \"Threshold\"}, props.toArray());\n+\t\t\t\texpected, props.toArray());\n@@ -290,1 +304,2 @@\n-\t\/\/ TODO: Add more tests: Other categories, labels, descriptions, option label and descriptions, content types.\n+\t\/\/ TODO: Add more tests: Other categories, labels, descriptions, option label\n+\t\/\/ and descriptions, content types.\n@@ -321,0 +336,13 @@\n+\tprivate <T extends PathElement> Collection<T> removeUnsupportedRootNodes(Collection<T> actualNodes) {\n+\t\tList<T> res = new ArrayList<T>();\n+\t\tfor (T pathElement : actualNodes) {\n+\t\t\tif (!pathElement.getName().equals(\"jdk\")) {\n+\t\t\t\t\/\/ jdk named root nodes are related to nodes that are not supported in newer\n+\t\t\t\t\/\/ JDKs\n+\t\t\t\t\/\/ like jdk.SafepointWaitBlocked (removed in JDK 13)\n+\t\t\t\tres.add(pathElement);\n+\t\t\t}\n+\t\t}\n+\t\treturn res;\n+\t}\n+\n@@ -338,1 +366,1 @@\n-\t\t\t\tactualNodesNames.containsAll(expectedNodesNames) && expectedNodesNames.containsAll(actualNodesNames));\n+\t\t\t\tactualNodesNames.containsAll(expectedNodesNames));\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.controlpanel.ui.test\/src\/test\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/test\/PropertyContentBuilderTest.java","additions":41,"deletions":13,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -67,0 +67,5 @@\n+\tpublic static final JavaVersion JDK_13 = new JavaVersion(13, 0);\n+\tpublic static final JavaVersion JDK_14 = new JavaVersion(14, 0);\n+\tpublic static final JavaVersion JDK_15 = new JavaVersion(15, 0);\n+\tpublic static final JavaVersion JDK_16 = new JavaVersion(16, 0);\n+\tpublic static final JavaVersion JDK_17 = new JavaVersion(17, 0);\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/version\/JavaVersionSupport.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-\t\t<maven.javadoc.version>3.2.0<\/maven.javadoc.version>\n+\t\t<maven.javadoc.version>3.3.1<\/maven.javadoc.version>\n","filename":"core\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-\t\t<maven.javadoc.version>3.2.0<\/maven.javadoc.version>\n+\t\t<maven.javadoc.version>3.3.1<\/maven.javadoc.version>\n@@ -65,2 +65,2 @@\n-\t\t<mockito.core.version>3.7.7<\/mockito.core.version>\n-\t\t<mockito.inline.version>3.7.7<\/mockito.inline.version>\n+\t\t<mockito.core.version>3.12.4<\/mockito.core.version>\n+\t\t<mockito.inline.version>3.12.4<\/mockito.inline.version>\n","filename":"core\/tests\/pom.xml","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -20,1 +20,1 @@\n-Next set up your JDKs in your Eclipse. Download and install a JDK 8 and JDK 11 (or the very latest update of the latest JDK), then open Window | Preferences and then select Java \/ Installed JREs. Add your favourite JKD 8 and JDK 11 JDKs (Add…) and then use Java \/ Installed JREs \/ Execution Environments to set them as defaults for the JDK 8 and JDK 11 execution environments.\n+Next set up your JDKs in your Eclipse. Download and install a JDK 8 and JDK 11 (or at most JDK 17), then open Window | Preferences and then select Java \/ Installed JREs. Add your favourite JKD 8 and JDK 11 JDKs (Add…) and then use Java \/ Installed JREs \/ Execution Environments to set them as defaults for the JDK 8 and JDK 11 execution environments.\n@@ -30,1 +30,3 @@\n-Okay, we now have our JDKs set up. If you want to import not only the JMC core project, you will next need to set up a user library for things that JMC will need from the JDK. Go to Preferences | Java\/Build Path\/User Libraries and create a new library named JMC_JDK. Add (Add External JARs…) the following JARs from a JDK 8 (u40 or above) to the User Library: tools.jar (\/lib\/tools.jar) and finally jconsole.jar (\/lib\/jconsole.jar).\n+On JDK 17: you might need to change the execution environment in this tab to \"JavaSE-11\" and select a JDK 17 as the used JDK.\n+\n+Okay, we now have our JDKs set up. If you want to import not only the JMC core project, you will next need to set up a user library for things that JMC will need from the JDK. Go to Preferences | Java\/Build Path\/User Libraries and create a new library named JMC_JDK. Add (Add External JARs…) the following JARs from a JDK 8 (u40 or above) to the User Library: tools.jar (\/lib\/tools.jar) and finally jconsole.jar (\/lib\/jconsole.jar). On JDK 17 you have to get these libraries from an JDK 8 package.\n@@ -84,1 +86,3 @@\n-For dynamic working sets, see http:\/\/hirt.se\/blog\/?p=1149.\n\\ No newline at end of file\n+For dynamic working sets, see http:\/\/hirt.se\/blog\/?p=1149.\n+\n+For testing: Run all tests as \"JUnit Plugin-In Test\" tests in eclipse and use the scripts in the `scripts` folder for running the tests. Run the class `org.openjdk.jmc.rjmx.test.testutil.JVMKeepAlive` with the VM arguments `-Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false` alongside.\n","filename":"docs\/devguide\/README.md","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-\t\t<p2-maven-plugin.version>1.5.0<\/p2-maven-plugin.version>\n+\t\t<p2-maven-plugin.version>2.0.0<\/p2-maven-plugin.version>\n","filename":"releng\/third-party\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}