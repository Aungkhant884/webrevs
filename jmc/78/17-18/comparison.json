{"files":[{"patch":"@@ -45,1 +45,0 @@\n-\tprivate boolean valid = true;\n@@ -73,8 +72,0 @@\n-\tpublic boolean isValid() {\n-\t\treturn valid;\n-\t}\n-\n-\tpublic void setInvalid() {\n-\t\tthis.valid = false;\n-\t}\n-\n@@ -88,1 +79,0 @@\n-\t\tresult = prime * result + (valid ? 1231 : 1237);\n@@ -117,2 +107,0 @@\n-\t\tif (valid != other.valid)\n-\t\t\treturn false;\n@@ -125,2 +113,2 @@\n-\t\treturn \"TraceNode [name: \" + name + \", value: \" + value + \", valid:\" + valid + \", packageName: \" + packageName\n-\t\t\t\t+ \", children: \" + children.size() + \"]\";\n+\t\treturn \"TraceNode [name: \" + name + \", value: \" + value + \", packageName: \" + packageName + \", children: \"\n+\t\t\t\t+ children.size() + \"]\";\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceNode.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-\t\tif (Thread.currentThread().isAlive() && root.isValid()) {\n+\t\tif (Thread.currentThread().isAlive()) {\n@@ -101,2 +101,1 @@\n-\t\t\troot.setInvalid();\n-\t\t\treturn root;\n+\t\t\treturn TraceNode.EMPTY;\n@@ -107,0 +106,3 @@\n+\t\/**\n+\t * DescriptionContainer for the TraceNode model (title, content)\n+\t *\/\n@@ -110,1 +112,0 @@\n-\t\tprivate boolean valid = true;\n@@ -131,8 +132,0 @@\n-\n-\t\tprivate boolean isValid() {\n-\t\t\treturn valid;\n-\t\t}\n-\n-\t\tprivate void setInvalid() {\n-\t\t\tvalid = false;\n-\t\t}\n@@ -164,1 +157,1 @@\n-\t\tif (Thread.currentThread().isAlive() && descContainer.isValid()) {\n+\t\tif (Thread.currentThread().isAlive()) {\n@@ -167,3 +160,1 @@\n-\t\t\tTraceNode invalidTraceNode = TraceNode.EMPTY;\n-\t\t\tinvalidTraceNode.setInvalid();\n-\t\t\treturn invalidTraceNode;\n+\t\t\treturn TraceNode.EMPTY;\n@@ -204,1 +195,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && root.isValid() && i < frames.length) {\n+\t\twhile (Thread.currentThread().isAlive() && i < frames.length) {\n@@ -211,3 +202,1 @@\n-\t\tif (i < frames.length) {\n-\t\t\troot.setInvalid();\n-\t\t}\n+\n@@ -221,1 +210,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && node.isValid() && i < branches.length) {\n+\t\twhile (Thread.currentThread().isAlive() && i < branches.length) {\n@@ -225,3 +214,0 @@\n-\t\tif (i < branches.length) {\n-\t\t\tnode.setInvalid();\n-\t\t}\n@@ -305,3 +291,1 @@\n-\t\tif (i < orderedItemCountByType.size()) {\n-\t\t\tdescContainer.setInvalid();\n-\t\t} else {\n+\t\tif (i == orderedItemCountByType.size()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceTreeUtils.java","additions":11,"deletions":27,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -170,2 +170,0 @@\n-\tprivate volatile IItemCollection currentItems;\n-\tprivate Future<Void> modelCalculationFuture;\n@@ -175,0 +173,2 @@\n+\tprivate Future<Void> modelCalculationFuture;\n+\tprivate volatile IItemCollection currentItems;\n@@ -212,1 +212,1 @@\n-\t\t\t\trebuildModel();\n+\t\t\t\trebuildModel(currentItems);\n@@ -282,31 +282,0 @@\n-\t\/**\n-\t * JSonModelBuilder holds the calculated json string, can be canceled\n-\t *\/\n-\tprivate static class JSonModelBuilder {\n-\t\tprivate final StringBuilder builder = new StringBuilder();\n-\t\tprivate boolean valid = true;\n-\n-\t\tprivate JSonModelBuilder() {\n-\t\t}\n-\n-\t\tprivate JSonModelBuilder(String json) {\n-\t\t\tthis.builder.append(json);\n-\t\t}\n-\n-\t\tprivate void append(String s) {\n-\t\t\tthis.builder.append(s);\n-\t\t}\n-\n-\t\tprivate String build() {\n-\t\t\treturn builder.toString();\n-\t\t}\n-\n-\t\tprivate boolean isValid() {\n-\t\t\treturn valid;\n-\t\t}\n-\n-\t\tprivate void setInvalid() {\n-\t\t\tthis.valid = false;\n-\t\t}\n-\t}\n-\n@@ -374,1 +343,1 @@\n-\t\t\t\tsetItems(ItemCollectionToolkit.build(Stream.empty()));\n+\t\t\t\trebuildModel(ItemCollectionToolkit.build(Stream.empty()));\n@@ -376,1 +345,1 @@\n-\t\t\t\tsetItems(items);\n+\t\t\t\trebuildModel(items);\n@@ -381,6 +350,1 @@\n-\tprivate void setItems(IItemCollection items) {\n-\t\tcurrentItems = items;\n-\t\trebuildModel();\n-\t}\n-\n-\tprivate void rebuildModel() {\n+\tprivate void rebuildModel(IItemCollection items) {\n@@ -391,1 +355,2 @@\n-\t\tmodelCalculationFuture = getModelPreparer(currentItems, true);\n+\t\tmodelCalculationFuture = getModelPreparer(items, true);\n+\t\tcurrentItems = items;\n@@ -403,8 +368,6 @@\n-\t\t\tif (items.equals(currentItems)) {\n-\t\t\t\tStacktraceModel model = createStacktraceModel(items);\n-\t\t\t\tFork rootFork = model.getRootFork();\n-\t\t\t\tif (materializeSelectedBranches) {\n-\t\t\t\t\tBranch selectedBranch = StacktraceModel.getLastSelectedBranch(rootFork);\n-\t\t\t\t\tif (selectedBranch != null) {\n-\t\t\t\t\t\tselectedBranch.getEndFork();\n-\t\t\t\t\t}\n+\t\t\tStacktraceModel model = createStacktraceModel(items);\n+\t\t\tFork rootFork = model.getRootFork();\n+\t\t\tif (materializeSelectedBranches) {\n+\t\t\t\tBranch selectedBranch = StacktraceModel.getLastSelectedBranch(rootFork);\n+\t\t\t\tif (selectedBranch != null) {\n+\t\t\t\t\tselectedBranch.getEndFork();\n@@ -412,0 +375,1 @@\n+\t\t\t}\n@@ -413,4 +377,4 @@\n-\t\t\t\tTraceNode root = TraceTreeUtils.createRootWithDescription(items, rootFork.getBranchCount());\n-\t\t\t\tif (Thread.currentThread().isAlive() && root.isValid()) {\n-\t\t\t\t\tTraceNode traceNode = TraceTreeUtils.createTree(root, model);\n-\t\t\t\t\tJSonModelBuilder jsonModelBuilder = toJSonModel(root);\n+\t\t\tTraceNode root = TraceTreeUtils.createRootWithDescription(items, rootFork.getBranchCount());\n+\t\t\tif (Thread.currentThread().isAlive()) {\n+\t\t\t\tTraceNode traceNode = TraceTreeUtils.createTree(root, model);\n+\t\t\t\tStringBuilder jsonModelBuilder = toJSonModel(traceNode);\n@@ -418,4 +382,3 @@\n-\t\t\t\t\tif (Thread.currentThread().isAlive() && traceNode.isValid() && jsonModelBuilder.isValid()) {\n-\t\t\t\t\t\tDisplayToolkit.inDisplayThread()\n-\t\t\t\t\t\t\t\t.execute(() -> this.processModel(items, jsonModelBuilder.build()));\n-\t\t\t\t\t}\n+\t\t\t\tif (Thread.currentThread().isAlive()) {\n+\t\t\t\t\tDisplayToolkit.inDisplayThread()\n+\t\t\t\t\t\t\t.execute(() -> this.processModel(items, jsonModelBuilder.toString()));\n@@ -519,2 +482,2 @@\n-\tprivate JSonModelBuilder toJSonModel(TraceNode root) {\n-\t\tJSonModelBuilder builder = new JSonModelBuilder();\n+\tprivate StringBuilder toJSonModel(TraceNode root) {\n+\t\tStringBuilder builder = new StringBuilder();\n@@ -525,7 +488,1 @@\n-\t\tif (Thread.currentThread().isAlive() && builder.isValid()) {\n-\t\t\treturn builder;\n-\t\t} else {\n-\t\t\tbuilder.setInvalid();\n-\t\t\treturn builder;\n-\t\t}\n-\n+\t\treturn builder;\n@@ -534,2 +491,2 @@\n-\tprivate void render(JSonModelBuilder builder, TraceNode node) {\n-\t\tif (Thread.currentThread().isAlive() && builder.isValid()) {\n+\tprivate void render(StringBuilder builder, TraceNode node) {\n+\t\tif (Thread.currentThread().isAlive()) {\n@@ -541,2 +498,0 @@\n-\t\t} else {\n-\t\t\tbuilder.setInvalid();\n@@ -544,1 +499,0 @@\n-\n@@ -547,1 +501,1 @@\n-\tprivate void renderChildren(JSonModelBuilder builder, TraceNode node) {\n+\tprivate void renderChildren(StringBuilder builder, TraceNode node) {\n@@ -557,3 +511,0 @@\n-\t\tif (i < node.getChildren().size()) {\n-\t\t\tbuilder.setInvalid();\n-\t\t}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":28,"deletions":77,"binary":false,"changes":105,"status":"modified"}]}