{"files":[{"patch":"@@ -45,1 +45,1 @@\n-\tprivate boolean canceled = false;\n+\tprivate boolean valid = true;\n@@ -73,2 +73,2 @@\n-\tpublic boolean isCanceled() {\n-\t\treturn canceled;\n+\tpublic boolean isValid() {\n+\t\treturn valid;\n@@ -77,2 +77,2 @@\n-\tpublic void setCanceled() {\n-\t\tthis.canceled = true;\n+\tpublic void setInvalid() {\n+\t\tthis.valid = false;\n@@ -88,1 +88,1 @@\n-\t\tresult = prime * result + (canceled ? 1231 : 1237);\n+\t\tresult = prime * result + (valid ? 1231 : 1237);\n@@ -117,1 +117,1 @@\n-\t\tif (canceled != other.canceled)\n+\t\tif (valid != other.valid)\n@@ -125,2 +125,2 @@\n-\t\treturn \"TraceNode [name: \" + name + \", value: \" + value + \", canceled:\" + canceled + \", packageName: \"\n-\t\t\t\t+ packageName + \", children: \" + children.size() + \"]\";\n+\t\treturn \"TraceNode [name: \" + name + \", value: \" + value + \", valid:\" + valid + \", packageName: \" + packageName\n+\t\t\t\t+ \", children: \" + children.size() + \"]\";\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceNode.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && i < branches.length) {\n+\t\twhile (Thread.currentThread().isAlive() && root.isValid() && i < branches.length) {\n@@ -105,1 +105,1 @@\n-\t\t\troot.setCanceled();\n+\t\t\troot.setInvalid();\n@@ -166,1 +166,1 @@\n-\t\t\n+\n@@ -169,1 +169,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && i < frames.length) {\n+\t\twhile (Thread.currentThread().isAlive() && root.isValid() && i < frames.length) {\n@@ -176,2 +176,2 @@\n-\t\tif(i < frames.length) {\n-\t\t\troot.setCanceled();\n+\t\tif (i < frames.length) {\n+\t\t\troot.setInvalid();\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceTreeUtils.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-import static org.openjdk.jmc.flightrecorder.stacktrace.StacktraceModel.getLastSelectedBranch;\n@@ -301,1 +300,1 @@\n-\t\t\n+\n@@ -306,6 +305,3 @@\n-\t\tprivate boolean isEqualStacktraceModel(StacktraceModel m) {\n-\t\t\treturn Thread.currentThread().isAlive() ? model.equals(m) : false;\n-\t\t}\n-\n-\t\tprivate boolean isReady() {\n-\t\t\treturn root != null && !root.isCanceled() && model != null && json != null;\n+\t\tprivate boolean isReady(StacktraceModel m) {\n+\t\t\treturn Thread.currentThread().isAlive() && root != null && model != null && json != null && root.isValid()\n+\t\t\t\t\t&& model.equals(m);\n@@ -321,1 +317,1 @@\n-\t\tprivate boolean canceled = false;\n+\t\tprivate boolean valid = true;\n@@ -338,2 +334,2 @@\n-\t\tprivate boolean isCanceled() {\n-\t\t\treturn canceled;\n+\t\tprivate boolean isValid() {\n+\t\t\treturn valid;\n@@ -342,2 +338,2 @@\n-\t\tprivate void setCanceled() {\n-\t\t\tthis.canceled = true;\n+\t\tprivate void setInvalid() {\n+\t\t\tthis.valid = false;\n@@ -420,4 +416,0 @@\n-\tprivate void writeLog(String message) {\n-\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, message); \/\/$NON-NLS-1$\n-\t}\n-\t\n@@ -425,1 +417,1 @@\n-\t\tif(modelCalculationFuture != null) {\n+\t\tif (modelCalculationFuture != null) {\n@@ -427,1 +419,0 @@\n-\t\t\twriteLog(\"rebuildModel, canceled, from thread: \" + Thread.currentThread().getName() + \", feature done: \" + modelCalculationFuture.isDone());\n@@ -437,2 +428,2 @@\n-\tprivate Future<Void> getModelPreparer(final IItemCollection items, final boolean materializeSelectedBranches){\n-\t\t\n+\tprivate Future<Void> getModelPreparer(final IItemCollection items, final boolean materializeSelectedBranches) {\n+\n@@ -440,2 +431,2 @@\n-\t\tfinal Callable<Void> callable = () -> {\n-\t\t\t\n+\t\tfinal Callable<Void> modelPreparerTask = () -> {\n+\n@@ -444,1 +435,1 @@\n-\t\t\t\tBranch selectedBranch = getLastSelectedBranch(rootFork);\n+\t\t\t\tBranch selectedBranch = StacktraceModel.getLastSelectedBranch(rootFork);\n@@ -448,1 +439,1 @@\n-\t\t\t} \n+\t\t\t}\n@@ -450,1 +441,1 @@\n-\t\t\tif(Thread.currentThread().isAlive()) {\n+\t\t\tif (Thread.currentThread().isAlive()) {\n@@ -454,1 +445,1 @@\n-\t\t\t\tif(Thread.currentThread().isAlive()) {\n+\t\t\t\tif (Thread.currentThread().isAlive() && traceNode.isValid() && jsonModelBuilder.isValid()) {\n@@ -457,2 +448,0 @@\n-\t\t\t\t} else {\n-\t\t\t\t\twriteLog(\"callable, not alive, traceNode.isCanceled, jsonModelBuild.isCanceled, thread canceled:\" + Thread.currentThread().getName());\n@@ -460,2 +449,0 @@\n-\t\t\t}else {\n-\t\t\t\twriteLog(\"getModelPreparer Thread, canceled: \" + Thread.currentThread().getName());\n@@ -463,1 +450,0 @@\n-\t\t\t\n@@ -466,3 +452,3 @@\n-\t\t\n-\t\treturn  MODEL_EXECUTOR.submit(callable);\n-\t\t\n+\n+\t\treturn MODEL_EXECUTOR.submit(modelPreparerTask);\n+\n@@ -473,4 +459,2 @@\n-\t\tif (!browser.isDisposed() && container.isReady()\n-\t\t\t\t&& container.isEqualStacktraceModel(createCurrentStacktraceModel())\n-\t\t\t\t&& !currentTraceNode.equals(container.root())  \n-\t\t\t\t) {\n+\t\tif (!browser.isDisposed() && container.isReady(createCurrentStacktraceModel())\n+\t\t\t\t&& !container.root().equals(currentTraceNode)) {\n@@ -481,1 +465,1 @@\n-\t\n+\n@@ -493,6 +477,5 @@\n-\t\t\t\t\tbrowser.execute(\n-\t\t\t\t\t\t\tString.format(\"configureTooltipText('%s', '%s', '%s', '%s', '%s');\", TABLE_COLUMN_COUNT,\n-\t\t\t\t\t\t\t\t\tTABLE_COLUMN_EVENT_TYPE, TOOLTIP_PACKAGE, TOOLTIP_SAMPLES, TOOLTIP_DESCRIPTION));\n-\t\t\t\t\tbrowser.execute(String.format(\"processGraph(%s, %s);\", json, icicleViewActive));\n-\t\t\t\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(true));\n-\t\t\t\t}\n+\t\t\t\tbrowser.execute(String.format(\"configureTooltipText('%s', '%s', '%s', '%s', '%s');\", TABLE_COLUMN_COUNT,\n+\t\t\t\t\t\tTABLE_COLUMN_EVENT_TYPE, TOOLTIP_PACKAGE, TOOLTIP_SAMPLES, TOOLTIP_DESCRIPTION));\n+\t\t\t\tbrowser.execute(String.format(\"processGraph(%s, %s);\", json, icicleViewActive));\n+\t\t\t\tStream.of(exportActions).forEach((action) -> action.setEnabled(true));\n+\t\t\t}\n@@ -566,7 +549,0 @@\n-\tprivate static Void handleModelBuildException(Throwable ex) {\n-\t\tif (!(ex.getCause() instanceof CancellationException)) {\n-\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to build stacktrace view model\", ex); \/\/$NON-NLS-1$\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n@@ -589,1 +565,0 @@\n-\t\n@@ -597,1 +572,1 @@\n-\t\n+\n@@ -609,1 +584,1 @@\n-\t\t\tbuilder.setCanceled();\n+\t\t\tbuilder.setInvalid();\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":31,"deletions":56,"binary":false,"changes":87,"status":"modified"}]}