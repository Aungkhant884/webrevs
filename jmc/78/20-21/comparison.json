{"files":[{"patch":"@@ -153,5 +153,1 @@\n-\t\tif (Thread.currentThread().isAlive()) {\n-\t\t\treturn new TraceNode(descContainer.title(), 0, descContainer.desc());\n-\t\t} else {\n-\t\t\treturn new TraceNode(getFlameviewMessage(FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE), 0, null);\n-\t\t}\n+\t\treturn new TraceNode(descContainer.title(), 0, descContainer.desc());\n@@ -191,1 +187,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && i < frames.length) {\n+\t\twhile (i < frames.length) {\n@@ -198,2 +194,3 @@\n-\n-\t\taddFork(currentNode, branch.getEndFork());\n+\t\tif (i == frames.length) {\n+\t\t\taddFork(currentNode, branch.getEndFork());\n+\t\t}\n@@ -206,1 +203,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && i < branches.length) {\n+\t\twhile (i < branches.length) {\n@@ -264,1 +261,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && it.hasNext()) {\n+\t\twhile (it.hasNext()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceTreeUtils.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -63,1 +63,0 @@\n-import java.util.concurrent.ExecutorService;\n@@ -66,0 +65,2 @@\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n@@ -163,1 +164,1 @@\n-\tprivate static final ExecutorService MODEL_EXECUTOR = Executors.newFixedThreadPool(1);\n+\tprivate static final ScheduledExecutorService MODEL_EXECUTOR = Executors.newSingleThreadScheduledExecutor();\n@@ -352,1 +353,7 @@\n-\t\t\tmodelCalculationFuture.cancel(true);\n+\t\t\tif (modelCalculationFuture.isDone() || !modelCalculationFuture.cancel(true)) {\n+\t\t\t\ttry {\n+\t\t\t\t\tmodelCalculationFuture.get();\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Failed to rebuild flameview\", t); \/\/$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t}\n@@ -367,1 +374,1 @@\n-\t\t\tThread.sleep(200);\n+\t\t\tThread.sleep(100);\n@@ -378,3 +385,3 @@\n-\t\t\tif (Thread.currentThread().isAlive()) {\n-\t\t\t\tTraceNode traceNode = TraceTreeUtils.createTree(root, model);\n-\t\t\t\tStringBuilder jsonModelBuilder = toJSonModel(traceNode);\n+\t\t\tTraceNode traceNode = TraceTreeUtils.createTree(root, model);\n+\t\t\tStringBuilder jsonModelBuilder = toJSonModel(traceNode);\n+\t\t\tDisplayToolkit.inDisplayThread().execute(() -> this.processModel(items, jsonModelBuilder.toString()));\n@@ -382,5 +389,0 @@\n-\t\t\t\tif (Thread.currentThread().isAlive()) {\n-\t\t\t\t\tDisplayToolkit.inDisplayThread()\n-\t\t\t\t\t\t\t.execute(() -> this.processModel(items, jsonModelBuilder.toString()));\n-\t\t\t\t}\n-\t\t\t}\n@@ -390,1 +392,1 @@\n-\t\treturn MODEL_EXECUTOR.submit(modelPreparerTask);\n+\t\treturn MODEL_EXECUTOR.schedule(modelPreparerTask, 100, TimeUnit.MICROSECONDS);\n@@ -492,7 +494,5 @@\n-\t\tif (Thread.currentThread().isAlive()) {\n-\t\t\tString start = UNCLASSIFIABLE_FRAME.equals(node.getName()) ? createJsonDescTraceNode(node)\n-\t\t\t\t\t: createJsonTraceNode(node);\n-\t\t\tbuilder.append(start);\n-\t\t\trenderChildren(builder, node);\n-\t\t\tbuilder.append(\"]}\");\n-\t\t}\n+\t\tString start = UNCLASSIFIABLE_FRAME.equals(node.getName()) ? createJsonDescTraceNode(node)\n+\t\t\t\t: createJsonTraceNode(node);\n+\t\tbuilder.append(start);\n+\t\trenderChildren(builder, node);\n+\t\tbuilder.append(\"]}\");\n@@ -502,1 +502,0 @@\n-\n@@ -504,1 +503,1 @@\n-\t\twhile (Thread.currentThread().isAlive() && i < node.getChildren().size()) {\n+\t\twhile (i < node.getChildren().size()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"}]}