{"files":[{"patch":"@@ -211,1 +211,1 @@\n-\t\tif (!Thread.currentThread().isAlive() || i < frames.length) {\n+\t\tif (i < frames.length) {\n@@ -225,1 +225,1 @@\n-\t\tif (!Thread.currentThread().isAlive() || i < branches.length) {\n+\t\tif (i < branches.length) {\n@@ -305,1 +305,1 @@\n-\t\tif (!Thread.currentThread().isAlive() || i < orderedItemCountByType.size()) {\n+\t\tif (i < orderedItemCountByType.size()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceTreeUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -282,25 +282,0 @@\n-\t\/**\n-\t * Container for created {@link TraceNode}, {@link StacktraceModel} and json string\n-\t *\/\n-\tprivate static final class ModelsContainer {\n-\t\tprivate final IItemCollection items;\n-\t\tprivate final TraceNode root;\n-\t\tprivate final StacktraceModel model;\n-\t\tprivate final String json;\n-\n-\t\tprivate ModelsContainer(IItemCollection items, TraceNode root, StacktraceModel model, String json) {\n-\t\t\tthis.items = items;\n-\t\t\tthis.root = root;\n-\t\t\tthis.model = model;\n-\t\t\tthis.json = json;\n-\t\t}\n-\n-\t\tprivate String json() {\n-\t\t\treturn json;\n-\t\t}\n-\n-\t\tprivate boolean isReady(IItemCollection m) {\n-\t\t\treturn items != null && root != null && model != null && json != null && items.equals(m);\n-\t\t}\n-\t}\n-\n@@ -426,11 +401,1 @@\n-\t\t\tStacktraceModel model = createStacktraceModel(items);\n-\t\t\t;\n-\t\t\tFork rootFork = model.getRootFork();\n-\t\t\tif (materializeSelectedBranches) {\n-\t\t\t\tBranch selectedBranch = StacktraceModel.getLastSelectedBranch(rootFork);\n-\t\t\t\tif (selectedBranch != null) {\n-\t\t\t\t\tselectedBranch.getEndFork();\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t\/\/ reduce the pressure on ui during a scroll, ensure movement is final\n+\t\t\t\/\/ reduce the pressure on displayThread during a scrolling, ensure movement is final, seems there could be visibility issue\n@@ -439,0 +404,9 @@\n+\t\t\t\tStacktraceModel model = createStacktraceModel(items);\n+\t\t\t\tFork rootFork = model.getRootFork();\n+\t\t\t\tif (materializeSelectedBranches) {\n+\t\t\t\t\tBranch selectedBranch = StacktraceModel.getLastSelectedBranch(rootFork);\n+\t\t\t\t\tif (selectedBranch != null) {\n+\t\t\t\t\t\tselectedBranch.getEndFork();\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n@@ -445,3 +419,2 @@\n-\t\t\t\t\t\tModelsContainer modelContainer = new ModelsContainer(items, traceNode, model,\n-\t\t\t\t\t\t\t\tjsonModelBuilder.build());\n-\t\t\t\t\t\tDisplayToolkit.inDisplayThread().execute(() -> this.setModel(modelContainer));\n+\t\t\t\t\t\tDisplayToolkit.inDisplayThread()\n+\t\t\t\t\t\t\t\t.execute(() -> this.processModel(items, jsonModelBuilder.build()));\n@@ -458,3 +431,3 @@\n-\tprivate void setModel(ModelsContainer container) {\n-\t\tif (container.isReady(currentItems) && !browser.isDisposed()) {\n-\t\t\tsetViewerInput(container.json());\n+\tprivate void processModel(final IItemCollection items, final String json) {\n+\t\tif (items.equals(currentItems) && !browser.isDisposed()) {\n+\t\t\tsetViewerInput(json);\n@@ -584,1 +557,1 @@\n-\t\tif (!Thread.currentThread().isAlive() || i < node.getChildren().size()) {\n+\t\tif (i < node.getChildren().size()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":16,"deletions":43,"binary":false,"changes":59,"status":"modified"}]}