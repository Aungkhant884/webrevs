{"files":[{"patch":"@@ -52,0 +52,1 @@\n+import java.util.Iterator;\n@@ -96,9 +97,4 @@\n-\n-\t\tfinal Branch[] branches = rootFork.getBranches();\n-\t\tint i = 0;\n-\t\twhile (Thread.currentThread().isAlive() && root.isValid() && i < branches.length) {\n-\t\t\taddBranch(root, branches[i]);\n-\t\t\ti++;\n-\t\t}\n-\n-\t\tif (i < branches.length) {\n+\t\taddFork(root, rootFork);\n+\t\tif(Thread.currentThread().isAlive() && root.isValid()) {\n+\t\t\treturn root;\n+\t\t} else {\n@@ -106,0 +102,36 @@\n+\t\t\treturn root;\n+\t\t}\n+\t\t\n+\t}\n+\t\n+\tprivate static class DescriptionContainer {\n+\t\tprivate final StringBuilder titleSb = new StringBuilder();\n+\t\tprivate final StringBuilder descSb = new StringBuilder();\n+\t\tprivate boolean valid = true;\n+\t\t\n+\t\tprivate DescriptionContainer() {\n+\t\t\t\n+\t\t}\n+\t\t\n+\t\tprivate void appendTitle(String s) {\n+\t\t\ttitleSb.append(s);\n+\t\t}\n+\t\t\n+\t\tprivate String title() {\n+\t\t\treturn titleSb.toString();\n+\t\t}\n+\t\t\n+\t\tprivate void appendDesc(String s) {\n+\t\t\tdescSb.append(s);\n+\t\t}\n+\t\t\n+\t\tprivate String desc() {\n+\t\t\treturn descSb.toString();\n+\t\t}\n+\t\t\n+\t\tprivate boolean isValid() {\n+\t\t\treturn valid;\n+\t\t}\n+\t\t\n+\t\tprivate void setInvalid() {\n+\t\t\tvalid = false;\n@@ -107,2 +139,0 @@\n-\n-\t\treturn root;\n@@ -122,2 +152,1 @@\n-\t\tStringBuilder titleSb = new StringBuilder();\n-\t\tStringBuilder descSb = new StringBuilder();\n+\t\tfinal DescriptionContainer descContainer = new DescriptionContainer();\n@@ -127,1 +156,1 @@\n-\t\t\ttitleSb.append(getFlameviewMessage(FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE));\n+\t\t\tdescContainer.appendTitle(getFlameviewMessage(FLAMEVIEW_SELECT_STACKTRACE_NOT_AVAILABLE));\n@@ -131,2 +160,2 @@\n-\t\t\ttitleSb.append(selectionText);\n-\t\t\tcreateNodeTitleAndDescription(titleSb, descSb, orderedEventTypeNameWithCount);\n+\t\t\tdescContainer.appendTitle(selectionText);\n+\t\t\tcreateNodeTitleAndDescription(descContainer, orderedEventTypeNameWithCount);\n@@ -135,1 +164,7 @@\n-\t\treturn new TraceNode(titleSb.toString(), 0, descSb.toString());\n+\t\tif(Thread.currentThread().isAlive() && descContainer.isValid()) {\n+\t\t\treturn new TraceNode(descContainer.title(), 0, descContainer.desc()); \n+\t\t} else {\n+\t\t\tTraceNode invalidTraceNode = TraceNode.EMPTY;\n+\t\t\tinvalidTraceNode.setInvalid();\n+\t\t\treturn invalidTraceNode;\n+\t\t}\n@@ -176,1 +211,1 @@\n-\t\tif (i < frames.length) {\n+\t\tif (!Thread.currentThread().isAlive() || i < frames.length) {\n@@ -183,2 +218,9 @@\n-\t\tfor (Branch branch : fork.getBranches()) {\n-\t\t\taddBranch(node, branch);\n+\t\tfinal Branch[] branches = fork.getBranches();\n+\t\tint i = 0;\n+\t\t\n+\t\twhile (Thread.currentThread().isAlive() && node.isValid() && i < branches.length ) {\n+\t\t\taddBranch(node, branches[i]);\n+\t\t\ti++;\n+\t\t}\n+\t\tif(!Thread.currentThread().isAlive() || i < branches.length) {\n+\t\t\tnode.setInvalid();\n@@ -230,1 +272,1 @@\n-\t\tStringBuilder titleSb, StringBuilder descSb, Map<String, Integer> orderedItemCountByType) {\n+\t\tDescriptionContainer descContainer, Map<String, Integer> orderedItemCountByType) {\n@@ -232,1 +274,1 @@\n-\t\tint i = 0;\n+\t\tint rootEventsCount = 0;\n@@ -238,1 +280,4 @@\n-\t\tfor (Map.Entry<String, Integer> e : orderedItemCountByType.entrySet()) {\n+\t\tint i = 0;\n+\t\tIterator<Map.Entry<String, Integer>> it = orderedItemCountByType.entrySet().iterator();\n+\t\twhile(Thread.currentThread().isAlive() && it.hasNext()) {\n+\t\t\tMap.Entry<String, Integer> e = it.next();\n@@ -242,3 +287,3 @@\n-\t\t\t\ttitleSb.append(eventType);\n-\t\t\t\tif (i < maxEventsInTile) {\n-\t\t\t\t\ttitleSb.append(SELECT_EVENT_DELIMITER);\n+\t\t\t\tdescContainer.appendTitle(eventType);\n+\t\t\t\tif (rootEventsCount < maxEventsInTile) {\n+\t\t\t\t\tdescContainer.appendTitle(SELECT_EVENT_DELIMITER);\n@@ -249,1 +294,1 @@\n-\t\t\tif (i < DEFAULT_ROOT_EVENT_MAX) {\n+\t\t\tif (rootEventsCount < DEFAULT_ROOT_EVENT_MAX) {\n@@ -252,1 +297,1 @@\n-\t\t\t\tdescSb.append(tableEvent);\n+\t\t\t\tdescContainer.appendDesc(tableEvent);\n@@ -256,0 +301,1 @@\n+\t\t\trootEventsCount++;\n@@ -258,0 +304,12 @@\n+\t\t\n+\t\t\n+\t\tif(!Thread.currentThread().isAlive() || i < orderedItemCountByType.size()) {\n+\t\t\tdescContainer.setInvalid();\n+\t\t} else {\n+\t\t\tif (restEventCount > 0) {\n+\t\t\t\tString restEventCountText = String.valueOf(restEventCount);\n+\t\t\t\tString restItemCountText = String.valueOf(orderedItemCountByType.size() - DEFAULT_ROOT_EVENT_MAX);\n+\t\t\t\tString tableEventRest = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN,\n+\t\t\t\t\t\trestEventCountText, restItemCountText);\n+\t\t\t\tdescContainer.appendDesc(tableEventRest);\n+\t\t\t}\n@@ -259,10 +317,3 @@\n-\t\tif (restEventCount > 0) {\n-\t\t\tString restEventCountText = String.valueOf(restEventCount);\n-\t\t\tString restItemCountText = String.valueOf(orderedItemCountByType.size() - DEFAULT_ROOT_EVENT_MAX);\n-\t\t\tString tableEventRest = getFlameviewMessage(FLAMEVIEW_SELECT_HTML_TABLE_EVENT_REST_PATTERN,\n-\t\t\t\t\trestEventCountText, restItemCountText);\n-\t\t\tdescSb.append(tableEventRest);\n-\t\t}\n-\n-\t\tif (maxEventsInTile < orderedItemCountByType.size() - 1) {\n-\t\t\ttitleSb.append(getFlameviewMessage(FLAMEVIEW_SELECT_HTML_MORE)); \/\/ $NON-NLS-1$\n+\t\t\tif (maxEventsInTile < orderedItemCountByType.size() - 1) {\n+\t\t\t\tdescContainer.appendTitle(getFlameviewMessage(FLAMEVIEW_SELECT_HTML_MORE)); \/\/ $NON-NLS-1$\n+\t\t\t}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/tree\/TraceTreeUtils.java","additions":89,"deletions":38,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -170,2 +170,1 @@\n-\tprivate IItemCollection currentItems;\n-\tprivate TraceNode currentTraceNode = TraceNode.EMPTY;\n+\tprivate volatile IItemCollection currentItems;\n@@ -287,0 +286,1 @@\n+\t\tprivate final IItemCollection items;\n@@ -291,1 +291,2 @@\n-\t\tprivate ModelsContainer(TraceNode root, StacktraceModel model, String json) {\n+\t\tprivate ModelsContainer(IItemCollection items, TraceNode root, StacktraceModel model, String json) {\n+\t\t\tthis.items = items;\n@@ -297,4 +298,0 @@\n-\t\tprivate TraceNode root() {\n-\t\t\treturn root;\n-\t\t}\n-\n@@ -305,2 +302,2 @@\n-\t\tprivate boolean isReady(StacktraceModel m) {\n-\t\t\treturn Thread.currentThread().isAlive() && root != null && model != null && json != null && model.equals(m);\n+\t\tprivate boolean isReady(IItemCollection m) {\n+\t\t\treturn items != null && root != null && model != null && json != null && items.equals(m);\n@@ -314,1 +311,0 @@\n-\t\tprivate static final JSonModelBuilder EMPTY = new JSonModelBuilder(\"\\\"\\\"\");\n@@ -422,3 +418,3 @@\n-\n-\tprivate StacktraceModel createCurrentStacktraceModel() {\n-\t\treturn new StacktraceModel(threadRootAtTop, frameSeparator, currentItems);\n+\t\n+\tprivate StacktraceModel createStacktraceModel(IItemCollection items) {\n+\t\treturn new StacktraceModel(threadRootAtTop, frameSeparator, items);\n@@ -429,1 +425,1 @@\n-\t\tfinal StacktraceModel model = createCurrentStacktraceModel();\n+\t\t\n@@ -431,1 +427,1 @@\n-\n+\t\t\tStacktraceModel model =  createStacktraceModel(items);;\n@@ -439,8 +435,13 @@\n-\t\t\tTraceNode root = TraceTreeUtils.createRootWithDescription(items, rootFork.getBranchCount());\n-\t\t\tif (Thread.currentThread().isAlive()) {\n-\t\t\t\tTraceNode traceNode = TraceTreeUtils.createTree(root, model);\n-\t\t\t\tJSonModelBuilder jsonModelBuilder = toJSonModel(root);\n-\n-\t\t\t\tif (Thread.currentThread().isAlive() && traceNode.isValid() && jsonModelBuilder.isValid()) {\n-\t\t\t\t\tModelsContainer modelContainer = new ModelsContainer(traceNode, model, jsonModelBuilder.build());\n-\t\t\t\t\tDisplayToolkit.inDisplayThread().execute(() -> this.setModel(modelContainer));\n+\t\t\t\n+\t\t\t\/\/ reduce the pressure on ui during a scroll, ensure movement is final\n+\t\t\tThread.sleep(200);\n+\t\t\tif(items.equals(currentItems)) {\n+\t\t\t\tTraceNode root = TraceTreeUtils.createRootWithDescription(items, rootFork.getBranchCount());\n+\t\t\t\tif (Thread.currentThread().isAlive() && root.isValid()) {\n+\t\t\t\t\tTraceNode traceNode = TraceTreeUtils.createTree(root, model);\n+\t\t\t\t\tJSonModelBuilder jsonModelBuilder = toJSonModel(root);\n+\n+\t\t\t\t\tif (Thread.currentThread().isAlive() && traceNode.isValid() && jsonModelBuilder.isValid()) {\n+\t\t\t\t\t\tModelsContainer modelContainer = new ModelsContainer(items, traceNode, model, jsonModelBuilder.build());\n+\t\t\t\t\t\tDisplayToolkit.inDisplayThread().execute(() -> this.setModel(modelContainer));\n+\t\t\t\t\t}\n@@ -457,4 +458,1 @@\n-\t\t\/\/ Check that the model is prepared for current stacktrace and ui update is required \n-\t\tif (!browser.isDisposed() && container.isReady(createCurrentStacktraceModel())\n-\t\t\t\t&& !container.root().equals(currentTraceNode)) {\n-\t\t\tcurrentTraceNode = container.root();\n+\t\tif (container.isReady(currentItems) && !browser.isDisposed()) {\n@@ -475,1 +473,0 @@\n-\t\t\t\tbrowser.removeProgressListener(this);\n@@ -480,0 +477,1 @@\n+\t\t\t\tbrowser.removeProgressListener(this);\n@@ -482,1 +480,0 @@\n-\n@@ -549,7 +546,0 @@\n-\t\tif (root == null) {\n-\t\t\treturn JSonModelBuilder.EMPTY;\n-\t\t}\n-\t\treturn render(root);\n-\t}\n-\n-\tprivate JSonModelBuilder render(TraceNode root) {\n@@ -561,1 +551,7 @@\n-\t\treturn builder;\n+\t\tif(Thread.currentThread().isAlive() && builder.isValid()) {\n+\t\t\treturn builder;\n+\t\t} else {\n+\t\t\tbuilder.setInvalid();\n+\t\t\treturn builder;\n+\t\t}\n+\t\t\n@@ -565,5 +561,10 @@\n-\t\tString start = UNCLASSIFIABLE_FRAME.equals(node.getName()) ? createJsonDescTraceNode(node)\n-\t\t\t\t: createJsonTraceNode(node);\n-\t\tbuilder.append(start);\n-\t\trenderChildren(builder, node);\n-\t\tbuilder.append(\"]}\");\n+\t\tif(Thread.currentThread().isAlive() && builder.isValid()) {\n+\t\t\tString start = UNCLASSIFIABLE_FRAME.equals(node.getName()) ? createJsonDescTraceNode(node)\n+\t\t\t\t\t: createJsonTraceNode(node);\n+\t\t\tbuilder.append(start);\n+\t\t\trenderChildren(builder, node);\n+\t\t\tbuilder.append(\"]}\");\n+\t\t} else {\n+\t\t\tbuilder.setInvalid();\n+\t\t}\n+\t\t\n@@ -582,1 +583,1 @@\n-\t\tif (i < node.getChildren().size()) {\n+\t\tif (!Thread.currentThread().isAlive() || i < node.getChildren().size()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":44,"deletions":43,"binary":false,"changes":87,"status":"modified"}]}