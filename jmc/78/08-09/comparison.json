{"files":[{"patch":"@@ -172,1 +172,1 @@\n-\tprivate TraceNode currentTraceRoot = TraceNode.EMPTY;\n+\tprivate TraceNode currentTraceNode = TraceNode.EMPTY;\n@@ -287,2 +287,1 @@\n-\tprivate static final class ModelsContainer {\n-\t\tprivate static final ModelsContainer EMPTY = new ModelsContainer(null, null, null);\n+\tprivate final class ModelsContainer {\n@@ -308,2 +307,1 @@\n-\t\t\t\n-\t\t\treturn Thread.currentThread().isInterrupted() ? false : model.equals(m);\n+\t\t\treturn Thread.currentThread().isAlive() ? model.equals(m) : false;\n@@ -420,1 +418,0 @@\n-\n@@ -433,1 +430,1 @@\n-\t\tmodelCalculationFuture = getModelPreparer(createStacktraceModel(), true);\n+\t\tmodelCalculationFuture = getModelPreparer(currentItems, true);\n@@ -436,1 +433,1 @@\n-\tprivate StacktraceModel createStacktraceModel() {\n+\tprivate StacktraceModel createCurrentStacktraceModel() {\n@@ -440,1 +437,1 @@\n-\tprivate Future<Void> getModelPreparer(final StacktraceModel model, final boolean materializeSelectedBranches){\n+\tprivate Future<Void> getModelPreparer(final IItemCollection items, final boolean materializeSelectedBranches){\n@@ -442,0 +439,1 @@\n+\t\tfinal StacktraceModel model = createCurrentStacktraceModel();\n@@ -451,1 +449,1 @@\n-\t\t\tTraceNode root = TraceTreeUtils.createRootWithDescription(currentItems, rootFork.getBranchCount());\n+\t\t\tTraceNode root = TraceTreeUtils.createRootWithDescription(items, rootFork.getBranchCount());\n@@ -456,1 +454,1 @@\n-\t\t\t\tif(Thread.currentThread().isAlive() && !traceNode.isCanceled() && !jsonModelBuilder.isCanceled()) {\n+\t\t\t\tif(Thread.currentThread().isAlive()) {\n@@ -459,1 +457,0 @@\n-\n@@ -477,2 +474,2 @@\n-\t\t\t\t&& container.isEqualStacktraceModel(createStacktraceModel())\n-\t\t\t\t&& !currentTraceRoot.equals(container.root())  \n+\t\t\t\t&& container.isEqualStacktraceModel(createCurrentStacktraceModel())\n+\t\t\t\t&& !currentTraceNode.equals(container.root())  \n@@ -480,2 +477,1 @@\n-\t\t\twriteLog(\"setModel2: JSON: \" + Thread.currentThread().getName());\n-\t\t\tcurrentTraceRoot = container.root();\n+\t\t\tcurrentTraceNode = container.root();\n@@ -588,2 +584,0 @@\n-\/\/\t\tAtomicBoolean renderActive = new AtomicBoolean(true);\n-\/\/\t\trenderChildren(renderActive, builder, root);\n@@ -595,7 +589,0 @@\n-\/\/\tprivate void render(AtomicBoolean renderActive, JSonModelBuilder builder, TraceNode node) {\n-\/\/\t\tString start = UNCLASSIFIABLE_FRAME.equals(node.getName()) ? createJsonDescTraceNode(node)\n-\/\/\t\t\t\t: createJsonTraceNode(node);\n-\/\/\t\tbuilder.append(start);\n-\/\/\t\trenderChildren(renderActive, builder, node);\n-\/\/\t\tbuilder.append(\"]}\");\n-\/\/\t}\n@@ -611,33 +598,0 @@\n-\/\/\tprivate void renderChildren(AtomicBoolean renderActive, JSonModelBuilder builder, TraceNode node) {\n-\/\/\n-\/\/\t\tint i = 0;\n-\/\/\t\twhile (renderActive.get() && i < node.getChildren().size()) {\n-\/\/\t\t\tif (!modelCalculationActive.get()) {\n-\/\/\t\t\t\trenderActive.set(false);\n-\/\/\t\t\t\tbuilder.setCanceled();\n-\/\/\t\t\t}\n-\/\/\n-\/\/\t\t\trender(renderActive, builder, node.getChildren().get(i));\n-\/\/\t\t\tif (i < node.getChildren().size() - 1) {\n-\/\/\t\t\t\tbuilder.append(\",\");\n-\/\/\t\t\t}\n-\/\/\t\t\ti++;\n-\/\/\t\t}\n-\/\/\t}\n-\n-\/\/\tprivate void renderChildren(JSonModelBuilder builder, TraceNode node) {\n-\/\/\n-\/\/\t\tint i = 0;\n-\/\/\t\twhile (!Thread.currentThread().isInterrupted() && i < node.getChildren().size()) {\n-\/\/\t\t\tif (Thread.currentThread().isInterrupted()) {\n-\/\/\t\t\t\tbuilder.setCanceled();\n-\/\/\t\t\t}\n-\/\/\n-\/\/\t\t\trender(renderActive, builder, node.getChildren().get(i));\n-\/\/\t\t\tif (i < node.getChildren().size() - 1) {\n-\/\/\t\t\t\tbuilder.append(\",\");\n-\/\/\t\t\t}\n-\/\/\t\t\ti++;\n-\/\/\t\t}\n-\/\/\t}\n-\t\n@@ -647,1 +601,1 @@\n-\t\twhile (!Thread.currentThread().isInterrupted() && i < node.getChildren().size()) {\n+\t\twhile (Thread.currentThread().isAlive() && i < node.getChildren().size()) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":13,"deletions":59,"binary":false,"changes":72,"status":"modified"}]}