{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -573,1 +574,1 @@\n-\t\t\t\tString s = new String(b, 0, n, \"UTF-8\"); \/\/$NON-NLS-1$\n+\t\t\t\tString s = new String(b, 0, n, StandardCharsets.UTF_8);\n","filename":"application\/org.openjdk.jmc.browser.attach\/src\/main\/java\/org\/openjdk\/jmc\/browser\/attach\/LocalJVMToolkit.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -262,1 +263,1 @@\n-\t\tCharset charset = Charset.forName(\"UTF-8\"); \/\/$NON-NLS-1$\n+\t\tCharset charset = StandardCharsets.UTF_8;\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLModel.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -156,1 +157,1 @@\n-\t\t\treturn new ByteArrayInputStream(newProps.getBytes(\"UTF-8\")); \/\/$NON-NLS-1$\n+\t\t\treturn new ByteArrayInputStream(newProps.getBytes(StandardCharsets.UTF_8));\n","filename":"application\/org.openjdk.jmc.rcp.application\/src\/main\/java\/org\/openjdk\/jmc\/rcp\/logging\/LoggingToolkit.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -254,4 +255,1 @@\n-\t\t\tmri = MRI.createFromQualifiedName(URLDecoder.decode(attributeDir.getName(), \"UTF-8\")); \/\/$NON-NLS-1$\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\t\/\/ This should never happen\n-\t\t\tthrow new RuntimeException(e);\n+\t\t\tmri = MRI.createFromQualifiedName(URLDecoder.decode(attributeDir.getName(), StandardCharsets.UTF_8));\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/persistence\/internal\/PersistenceReader.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -41,0 +40,2 @@\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n@@ -48,1 +49,0 @@\n-\tprivate static final String UTF_8 = \"UTF-8\"; \/\/$NON-NLS-1$\n@@ -64,1 +64,17 @@\n-\t\treturn readString(in, UTF_8);\n+\t\treturn readString(in, StandardCharsets.UTF_8);\n+\t}\n+\n+\t\/**\n+\t * Reads the contents of a stream with specified character encoding to a string.\n+\t *\n+\t * @param in\n+\t *            the stream to read from\n+\t * @param charset\n+\t *            the {@link java.nio.charset.Charset charset}\n+\t * @return a string with the contents available from the stream\n+\t * @throws IOException\n+\t *             if something went wrong\n+\t *\/\n+\tpublic static String readString(InputStream in, Charset charset) throws IOException {\n+\t\tByteArrayOutputStream buf = read(in);\n+\t\treturn buf.toString(charset);\n@@ -79,0 +95,5 @@\n+\t\tByteArrayOutputStream buf = read(in);\n+\t\treturn buf.toString(charsetName);\n+\t}\n+\n+\tprivate static ByteArrayOutputStream read(InputStream in) throws IOException {\n@@ -86,1 +107,1 @@\n-\t\treturn buf.toString(charsetName);\n+\t\treturn buf;\n@@ -97,5 +118,1 @@\n-\t\ttry {\n-\t\t\treturn URLEncoder.encode(string, UTF_8);\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\treturn string.replaceAll(\"\\\\W+\", \"-\"); \/\/$NON-NLS-1$ \/\/$NON-NLS-2$\n-\t\t}\n+\t\treturn URLEncoder.encode(string, StandardCharsets.UTF_8);\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/util\/StringToolkit.java","additions":26,"deletions":9,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -453,1 +454,1 @@\n-\t\ttry (PrintWriter pw = new PrintWriter(file, \"UTF-8\")) { \/\/$NON-NLS-1$\n+\t\ttry (PrintWriter pw = new PrintWriter(file, StandardCharsets.UTF_8)) {\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/util\/XmlToolkit.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n@@ -45,1 +47,1 @@\n-\tprivate static final String CHARSET = \"UTF-8\"; \/\/$NON-NLS-1$\n+\tprivate static final Charset CHARSET = StandardCharsets.UTF_8;\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v0\/UTFStringParser.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -173,1 +174,1 @@\n-\t\treturn new String(buf, \"UTF-8\"); \/\/$NON-NLS-1$\n+\t\treturn new String(buf, StandardCharsets.UTF_8);\n","filename":"core\/org.openjdk.jmc.jdp\/src\/main\/java\/org\/openjdk\/jmc\/jdp\/common\/JDPPacket.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -119,2 +120,2 @@\n-\t\t\treaderExp = new BufferedReader(new InputStreamReader(expected.open(), \"UTF-8\"));\n-\t\t\treaderAct = new BufferedReader(new InputStreamReader(actual.open(), \"UTF-8\"));\n+\t\t\treaderExp = new BufferedReader(new InputStreamReader(expected.open(), StandardCharsets.UTF_8));\n+\t\t\treaderAct = new BufferedReader(new InputStreamReader(actual.open(), StandardCharsets.UTF_8));\n","filename":"core\/org.openjdk.jmc.testlib\/src\/main\/java\/org\/openjdk\/jmc\/test\/TestToolkit.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -42,0 +41,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -110,5 +110,1 @@\n-\t\ttry {\n-\t\t\treturn new String(bytes, \"UTF-8\");\n-\t\t} catch (UnsupportedEncodingException e) {\n-\t\t\treturn null;\n-\t\t}\n+\t\treturn new String(bytes, StandardCharsets.UTF_8);\n","filename":"core\/tests\/org.openjdk.jmc.jdp.test\/src\/main\/java\/org\/openjdk\/jmc\/jdp\/client\/TestToolkit.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}