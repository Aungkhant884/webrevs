{"files":[{"patch":"@@ -9,1 +9,1 @@\n-**You will need an Eclipse 2021-06 or later!**\n+**You will need an Eclipse 2022-09 or later!**\n@@ -33,1 +33,1 @@\n-![Se compiler comliance level](images\/setcompilercompliancelevel.png)\n+![Set compiler comliance level](images\/setcompilercompliancelevel.png)\n@@ -35,1 +35,1 @@\n-Creating the user library:\n+**Optional: Show diff against git**\n@@ -37,1 +37,1 @@\n-![Create User Library](images\/createuserlibrary.png)\n+By default Eclipse use the version on disk. It may be practical to use instead the git version. Open _Window | Preferences_ then _General | Editors | Text Editors | Quick Diff_. Select _Git Revision for the reference source.\n@@ -39,3 +39,1 @@\n-Adding the jars:\n-\n-![image](images\/addingjars.png)\n+![Set quick diff reference source](images\/setquickdiffreferencesource.png)\n@@ -46,2 +44,7 @@\n-* Is the Jetty server from the build instructions still up and running? (`mvn p2:site --file releng\/third-party\/pom.xml; mvn jetty:run --file releng\/third-party\/pom.xml`)\n-   ![](images\/p2site.png)\n+* Is the Jetty server from the build instructions still up and running? \n+\n+   ```\n+   mvn p2:site --file releng\/third-party\/pom.xml; mvn jetty:run --file releng\/third-party\/pom.xml\n+   ```\n+\n+   ![Jetty running](images\/p2site.png)\n@@ -69,1 +72,7 @@\n-Next select _File | Import…_ and select _Maven \/ Existing Maven Project_ again, but this time from the root.\n+Next select _File | Import…_ and select _Maven \/ Existing Maven Project_ again, but this time from the repository root (`jmc`). During that step, Eclipse should find the launchers\n+\n+![JMC Launchers](images\/launchers.png)\n+\n+<details><summary>Import launchers manually if not found<\/summary>\n+\n+If the launchers ar enot detected by Elipse they can be imported manually. Select _File | Import…_ and then select _Existing Projects into Workspace_. Find the `configuration\/ide\/eclipse` folder and click Ok.\n@@ -73,0 +82,8 @@\n+<\/details>\n+\n+The project should have build error because the `org.openjdk.jmc.browser.attach` project requires JDK internal module exports, this is not compatible with `--release` (which only tracks public symbols). Right click on this module, select _Properties_, then go to _Java Compiler_, and untick `Use '--release' option`.\n+\n+![Unset release on org.openjdk.jmc.browser.attach](images\/unsetrelease-on-jmc.browser.attach.png)\n+\n+Eclipse should propose the rebuild.\n+\n","filename":"docs\/devguide\/README.md","additions":27,"deletions":10,"binary":false,"changes":37,"status":"modified"},{"filename":"docs\/devguide\/images\/launchers.png","binary":true,"status":"added"},{"filename":"docs\/devguide\/images\/platformtarget.png","binary":true,"status":"modified"},{"filename":"docs\/devguide\/images\/setcompilercompliancelevel.png","binary":true,"status":"modified"},{"filename":"docs\/devguide\/images\/setexecutionenvironment.png","binary":true,"status":"modified"},{"filename":"docs\/devguide\/images\/setinstalledjre.png","binary":true,"status":"modified"},{"filename":"docs\/devguide\/images\/setquickdiffreferencesource.png","binary":true,"status":"added"}]}