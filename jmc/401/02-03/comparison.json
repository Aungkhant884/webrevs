{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import java.util.LinkedHashMap;\n@@ -95,0 +96,6 @@\n+\t\t\/*\n+\t\t * Maximum number of items the TYPE_CACHE will hold. The assumption is that the number of\n+\t\t * 'dynamic' frame types will be small, typically in ones rather than tens and as such 100\n+\t\t * items in the type cache should cover the vast majority of use cases.\n+\t\t *\/\n+\t\tprivate static final int TYPE_CACHE_MAX_SIZE = 100;\n@@ -100,1 +107,6 @@\n-\t\tprivate static final Map<String, Type> TYPE_CACHE = new HashMap<>();\n+\t\tprivate static final Map<String, Type> TYPE_CACHE = new LinkedHashMap<String, Type>() {\n+\t\t\t@Override\n+\t\t\tprotected boolean removeEldestEntry(Map.Entry eldest) {\n+\t\t\t\treturn size() > TYPE_CACHE_MAX_SIZE;\n+\t\t\t}\n+\t\t};\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/IMCFrame.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}