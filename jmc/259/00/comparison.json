{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import java.util.Map;\n@@ -38,0 +39,1 @@\n+import java.util.WeakHashMap;\n@@ -211,0 +213,1 @@\n+\tprivate Map<IItemCollection, Object[]> treeViewerExpandedItems = new WeakHashMap<>();\n@@ -706,0 +709,7 @@\n+\t\tif (viewer.getInput() != null && viewer instanceof TreeViewer && itemsToShow.hasItems()) {\n+\t\t\t\/\/ persist the older items expandedElements\n+\t\t\tObject[] expandedElements = ((TreeViewer) viewer).getExpandedElements();\n+\t\t\tif (expandedElements.length > 0) {\n+\t\t\t\ttreeViewerExpandedItems.put(itemsToShow, expandedElements);\n+\t\t\t}\n+\t\t}\n@@ -750,1 +760,7 @@\n-\t\tviewer.setInput(rootFork);\n+\t\tif (rootFork != null && viewer instanceof TreeViewer && treeViewerExpandedItems.containsKey(itemsToShow)) {\n+\t\t\tObject[] expandedElements = treeViewerExpandedItems.get(itemsToShow);\n+\t\t\tviewer.setInput(rootFork);\n+\t\t\t((TreeViewer) viewer).setExpandedElements(expandedElements);\n+\t\t} else {\n+\t\t\tviewer.setInput(rootFork);\n+\t\t}\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/views\/stacktrace\/StacktraceView.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,38 @@\n+\t@Override\n+\tpublic int hashCode() {\n+\t\tfinal int prime = 31;\n+\t\tint result = 1;\n+\t\tresult = prime * result + ((frame == null) ? 0 : frame.hashCode());\n+\t\tresult = prime * result + indexInBranch;\n+\t\tresult = prime * result + ((items == null) ? 0 : items.size());\n+\t\treturn result;\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object obj) {\n+\t\tif (this == obj)\n+\t\t\treturn true;\n+\t\tif (obj == null)\n+\t\t\treturn false;\n+\t\tif (getClass() != obj.getClass())\n+\t\t\treturn false;\n+\t\tStacktraceFrame other = (StacktraceFrame) obj;\n+\n+\t\tif (branch == null) {\n+\t\t\tif (other.branch != null)\n+\t\t\t\treturn false;\n+\t\t}\n+\t\tif (frame == null) {\n+\t\t\tif (other.frame != null) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\t\tif (indexInBranch != other.indexInBranch)\n+\t\t\treturn false;\n+\t\tif (items == null || other.items == null) {\n+\t\t\treturn false;\n+\t\t} else if (items.size() != other.items.size())\n+\t\t\treturn false;\n+\t\treturn true;\n+\t}\n+\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/StacktraceFrame.java","additions":39,"deletions":1,"binary":false,"changes":40,"status":"modified"}]}