{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,12 @@\n+\t\/**\n+\t * The frame was executed as native code, most probably a C function.\n+\t *\/\n+\tNATIVE,\n+\t\/**\n+\t * The frame was executed as native code compiled from C++.\n+\t *\/\n+\tCPP,\n+\t\/**\n+\t * The frame was executed as kernel native code.\n+\t *\/\n+\tKERNEL,\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/IMCFrame.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,9 @@\n+\t\tif (\"Native\".equals(type)) { \/\/$NON-NLS-1$\n+\t\t\treturn IMCFrame.Type.NATIVE;\n+\t\t}\n+\t\tif (\"C++\".equals(type)) { \/\/$NON-NLS-1$\n+\t\t\treturn IMCFrame.Type.CPP;\n+\t\t}\n+\t\tif (\"Kernel\".equals(type)) { \/\/$NON-NLS-1$\n+\t\t\treturn IMCFrame.Type.KERNEL;\n+\t\t}\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/util\/ParserToolkit.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}