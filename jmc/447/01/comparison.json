{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,2 @@\n+import java.util.Collections;\n+import java.util.HashMap;\n@@ -39,0 +41,1 @@\n+import java.util.Map;\n@@ -509,0 +512,1 @@\n+\t\tprivate final Map<String, Field> identifiersToFields;\n@@ -518,0 +522,1 @@\n+\t\t\tthis.identifiersToFields = IdentifierFieldCache.INSTANCE.get(klass);\n@@ -565,7 +570,5 @@\n-\t\t\ttry {\n-\t\t\t\ttry {\n-\t\t\t\t\tfields.add(klass.getField(identifier));\n-\t\t\t\t} catch (NoSuchFieldException e) {\n-\t\t\t\t\tfields.add(klass.getField(RESERVED_IDENTIFIER_PREFIX + identifier));\n-\t\t\t\t}\n-\t\t\t} catch (NoSuchFieldException e) {\n+\t\t\tField field = identifiersToFields.get(identifier);\n+\t\t\tif (field == null) {\n+\t\t\t\tfield = identifiersToFields.get(RESERVED_IDENTIFIER_PREFIX + identifier);\n+\t\t\t}\n+\t\t\tif (field == null) {\n@@ -575,1 +578,0 @@\n-\t\t\t\tfields.add(null);\n@@ -577,0 +579,16 @@\n+\t\t\tfields.add(field);\n+\t\t}\n+\t}\n+\n+\tstatic class IdentifierFieldCache extends ClassValue<Map<String, Field>> {\n+\n+\t\tpublic static final IdentifierFieldCache INSTANCE = new IdentifierFieldCache();\n+\n+\t\t@Override\n+\t\tprotected Map<String, Field> computeValue(Class<?> type) {\n+\t\t\tField[] fields = type.getFields();\n+\t\t\tMap<String, Field> map = new HashMap<>(fields.length);\n+\t\t\tfor (Field field : fields) {\n+\t\t\t\tmap.put(field.getName(), field);\n+\t\t\t}\n+\t\t\treturn Collections.unmodifiableMap(map);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/internal\/parser\/v1\/ValueReaders.java","additions":27,"deletions":9,"binary":false,"changes":36,"status":"modified"}]}