{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,0 +105,6 @@\n+\tpublic static final TypedPreference<IQuantity> MAX_TIMEOUT = new TypedPreference<>(\n+\t\t\t\"classLeaking.calculation.timeout\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT),\n+\t\t\tMessages.getString(Messages.ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT_LONG), NUMBER,\n+\t\t\tNUMBER_UNITY.quantity(5));\n+\n@@ -106,1 +112,1 @@\n-\t\t\tMAX_NUMBER_OF_CLASSES_TO_REPORT);\n+\t\t\tMAX_NUMBER_OF_CLASSES_TO_REPORT, MAX_TIMEOUT);\n@@ -128,0 +134,2 @@\n+\tpublic static int CONFIGURED_TIMEOUT = 0;\n+\n@@ -151,1 +159,1 @@\n-\n+\t\tCONFIGURED_TIMEOUT = (int) valueProvider.getPreferenceValue(MAX_TIMEOUT).longValue();\n@@ -224,1 +232,0 @@\n-\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/general\/ClassLeakingRule.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,2 @@\n+\tpublic static final String ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT = \"ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT\"; \/\/$NON-NLS-1$\n+\tpublic static final String ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT_LONG = \"ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT_LONG\"; \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/messages\/internal\/Messages.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+import org.openjdk.jmc.flightrecorder.rules.jdk.general.ClassLeakingRule;\n@@ -133,2 +134,2 @@\n-\t\t\t\t\/\/ Higher timeout value added for worst case\n-\t\t\t\texec.awaitTermination(1, TimeUnit.HOURS);\n+\t\t\t\t\/\/ Timeout can be configured in prefrences (default value is set to 5 minutes)\n+\t\t\t\texec.awaitTermination(ClassLeakingRule.CONFIGURED_TIMEOUT, TimeUnit.MINUTES);\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/util\/DefaultIItemResultSet.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#  Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,0 +107,2 @@\n+ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT=Calculation Timeout (in minutes)\n+ClassLeakingRule_CONFIG_CALCULATION_TIMEOUT_LONG=Maximum amount of time to calculate class leak rule (in minutes).\n","filename":"core\/org.openjdk.jmc.flightrecorder.rules.jdk\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/rules\/jdk\/messages\/internal\/messages.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}