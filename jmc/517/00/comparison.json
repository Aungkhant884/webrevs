{"files":[{"patch":"@@ -217,1 +217,1 @@\n-\t * Overriddden to lazily establish a service URL if needed. If the JVM is attachable, it will\n+\t * Overridden to lazily establish a service URL if needed. If the JVM is attachable, it will\n","filename":"application\/org.openjdk.jmc.browser.attach\/src\/main\/java\/org\/openjdk\/jmc\/browser\/attach\/LocalConnectionDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-\t * REturn the name of the command\n+\t * Returns the name of the command\n","filename":"application\/org.openjdk.jmc.commands\/src\/main\/java\/org\/openjdk\/jmc\/commands\/Command.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-\t * Initialize image regsitry\n+\t * Initialize image registry\n","filename":"application\/org.openjdk.jmc.console.ui.diagnostic\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/diagnostic\/DiagnosticPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- * Updates field when fokcus is lost in an item\n+ * Updates field when focus is lost in an item\n","filename":"application\/org.openjdk.jmc.console.ui.notification\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/notification\/uicomponents\/FieldFocusListener.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-\t\t\/\/ Try to select ApplicationAlet by default\n+\t\t\/\/ Try to select ApplicationAlert by default\n","filename":"application\/org.openjdk.jmc.console.ui.notification\/src\/main\/java\/org\/openjdk\/jmc\/console\/ui\/notification\/wizard\/RuleWizard.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-\t\t\t\/\/ Error message claims: '1 min' is not a valid timespan. Shoule be numeric value followed by a unit, i.e. 20 ms. Valid units are ns, us, s, m, h and d.\n+\t\t\t\/\/ Error message claims: '1 min' is not a valid timespan. Should be numeric value followed by a unit, i.e. 20 ms. Valid units are ns, us, s, m, h and d.\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/internal\/CommonConstraints.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-\t * writing to a output stream and for providing an input stream (for IResource destinations)\n+\t * writing to an output stream and for providing an input stream (for IResource destinations)\n@@ -73,1 +73,1 @@\n-\t * @return true iff the save operation succeded.\n+\t * @return true iff the save operation succeeded.\n","filename":"application\/org.openjdk.jmc.flightrecorder.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/configuration\/spi\/IConfigurationStorageDelegate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-\t * Saves the model to the given {@link File}. If successful, sets dirtyness to false, as\n+\t * Saves the model to the given {@link File}. If successful, sets dirtiness to false, as\n@@ -271,1 +271,1 @@\n-\t * Writes the model to the given {@link Writer}. Does not change dirtyness, as returned by\n+\t * Writes the model to the given {@link Writer}. Does not change dirtiness, as returned by\n@@ -296,1 +296,1 @@\n-\t\t * in-memory-model-change? Or is it that the observable state is the dirtyness? Still, only\n+\t\t * in-memory-model-change? Or is it that the observable state is the dirtiness? Still, only\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui.configuration\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/configuration\/model\/xml\/XMLModel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * LabelPovider for recording templates\n+ * LabelProvider for recording templates\n","filename":"application\/org.openjdk.jmc.flightrecorder.controlpanel.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/controlpanel\/ui\/wizards\/TemplateLabelProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-\t\t\t\t\t\/\/ oldObjectRef has more than 1 child, Select only thos node which are from OldObjectSampleRef (leaf node) Objects\n+\t\t\t\t\t\/\/ oldObjectRef has more than 1 child, Select only those nodes which are from OldObjectSampleRef (leaf node) Objects\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/MemoryLeakPage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-\t * @param attributees\n+\t * @param attributes\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/selection\/IFlavoredSelection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n- * Canvas typcially used for a grey chart that you want to make a selection on\n+ * Canvas typically used for a grey chart that you want to make a selection on\n","filename":"application\/org.openjdk.jmc.greychart.ui\/src\/main\/java\/org\/openjdk\/jmc\/greychart\/ui\/views\/SelectionCanvas.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-\t * @return true if grid lines will be painted from the tick markes on the background of the plot\n+\t * @return true if grid lines will be painted from the tick marks on the background of the plot\n@@ -203,1 +203,1 @@\n-\t * Set this attribute to true if you want grid lines to be painted on the backround of the plot\n+\t * Set this attribute to true if you want grid lines to be painted on the background of the plot\n","filename":"application\/org.openjdk.jmc.greychart\/src\/main\/java\/org\/openjdk\/jmc\/greychart\/AbstractAxis.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-\t *            if 0, the font size will be relatice to the graph size and calculated\n+\t *            if 0, the font size will be relative to the graph size and calculated\n","filename":"application\/org.openjdk.jmc.greychart\/src\/main\/java\/org\/openjdk\/jmc\/greychart\/AbstractChartRenderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-\t * @return samples in data series coordinates (not neccessarily the same as world coordinates)\n+\t * @return samples in data series coordinates (not necessarily the same as world coordinates)\n","filename":"application\/org.openjdk.jmc.greychart\/src\/main\/java\/org\/openjdk\/jmc\/greychart\/impl\/OptimizingProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n- * This is an averaging sampler. It will typically contains as many samples as the drawing area is\n- * pixles wide.\n+ * This is an averaging sampler. It will typically contain as many samples as the drawing area is\n+ * pixels wide.\n","filename":"application\/org.openjdk.jmc.greychart\/src\/main\/java\/org\/openjdk\/jmc\/greychart\/providers\/AveragingSampleBuffer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -417,1 +417,1 @@\n-\t * produces more approximatively a square. It checks if one of the aspect ratio values gives a\n+\t * produces more approximately a square. It checks if one of the aspect ratio values gives a\n","filename":"application\/org.openjdk.jmc.joverflow.ui\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/ui\/swt\/SquarifiedTreemap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * Implementaiton of ProblemRecorder that is used by the command-line (batch) JOverflow tool. It\n+ * Implementation of ProblemRecorder that is used by the command-line (batch) JOverflow tool. It\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/batch\/BatchProblemRecorder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-\t * their size is not taken into account when calculating implementation-inlcusive size for\n+\t * their size is not taken into account when calculating implementation-inclusive size for\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/descriptors\/AbstractArrayBasedCollectionDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-\t\t * elements in the colleciton.\n+\t\t * elements in the collection.\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/descriptors\/CollectionInstanceDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-\t\t\/\/ sum total of inclusive sizes for all classess will end up being greater\n+\t\t\/\/ sum total of inclusive sizes for all classes will end up being greater\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/descriptors\/TreeMapDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-\t\/** For array classes, it's the number of array dimensions; otherwize 0 *\/\n+\t\/** For array classes, it's the number of array dimensions; otherwise 0 *\/\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/heap\/model\/JavaClass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n- * than .hprof file size (which is rather surprising). It's inconvenietn to use a tool that needs an\n+ * than .hprof file size (which is rather surprising). It's inconvenient to use a tool that needs an\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/heap\/parser\/CachedReadBuffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * \"vertical\" (outer) dimension is considerably bigger than the \"horizonal\" one, i.e. which consist\n+ * \"vertical\" (outer) dimension is considerably bigger than the \"horizontal\" one, i.e. which consist\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/BarArrayHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-\t * instances (if percentile == 1.0), or in the given precentile of instances. For example, if\n+\t * instances (if percentile == 1.0), or in the given percentile of instances. For example, if\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/stats\/ObjectHistogram.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-\t * requires an explicit JVM otpion -XX:ObjectAlignmentInBytes=<n>, and it makes sense to use it\n+\t * requires an explicit JVM option -XX:ObjectAlignmentInBytes=<n>, and it makes sense to use it\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/support\/Constants.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-\t\t\/\/ takes rougly 100 bytes.\n+\t\t\/\/ takes roughly 100 bytes.\n","filename":"application\/org.openjdk.jmc.joverflow\/src\/main\/java\/org\/openjdk\/jmc\/joverflow\/util\/StringInterner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-\t *            the time the failure occured.\n+\t *            the time the failure occurred.\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/subscription\/internal\/AttributeExceptionEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-\t *             if an exception occured during initialization.\n+\t *             if an exception occurred during initialization.\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/ITriggerAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-\t *             if an exception occured during initialization.\n+\t *             if an exception occurred during initialization.\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/ITriggerConstraint.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-\t * Creates an evaluiator\n+\t * Creates an evaluator\n","filename":"application\/org.openjdk.jmc.rjmx\/src\/main\/java\/org\/openjdk\/jmc\/rjmx\/triggers\/internal\/INotificationFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-\t * Sets the position of the dial momentarily. Typically uised to set up the initial position.\n+\t * Sets the position of the dial momentarily. Typically used to set up the initial position.\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/dial\/MovingDial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * Provides type completion for a select coomand.\n+ * Provides type completion for a select command.\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/formpage\/commands\/internal\/SelectHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -565,1 +565,1 @@\n-\t * @return the alignment (SWT.FILL, SWT.BEGINING or SWT.END)\n+\t * @return the alignment (SWT.FILL, SWT.BEGINNING or SWT.END)\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/layout\/SimpleLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-\t * The default weight factor is MCLayout.INIFINITE_WEIGHT. If all controls have an infinitive\n+\t * The default weight factor is MCLayout.INFINITE_WEIGHT. If all controls have an infinitive\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/layout\/SimpleLayoutData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-\t\tint widthHint, int heightHint, int horizontalSpan, int vererticalSpan, boolean grabExcessiveHorizontal,\n+\t\tint widthHint, int heightHint, int horizontalSpan, int verticalSpan, boolean grabExcessiveHorizontal,\n@@ -146,1 +146,1 @@\n-\t\tlayoutData.verticalSpan = vererticalSpan;\n+\t\tlayoutData.verticalSpan = verticalSpan;\n@@ -174,2 +174,2 @@\n-\t * @param horisontalAlignment\n-\t *            horisontal alignment\n+\t * @param horizontalAlignment\n+\t *            horizontal alignment\n@@ -185,2 +185,2 @@\n-\t\tint horisontalAlignment, int verticalAlignment, int widthHint, int heightHint) {\n-\t\tGridData layoutData = new GridData(horisontalAlignment, verticalAlignment, false, false);\n+\t\tint horizontalAlignment, int verticalAlignment, int widthHint, int heightHint) {\n+\t\tGridData layoutData = new GridData(horizontalAlignment, verticalAlignment, false, false);\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/misc\/MCLayoutFactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n- * call super.initialize(IManangedForm) in {@link SectionPart#initialize(IManagedForm)} method if\n+ * call super.initialize(IManagedForm) in {@link SectionPart#initialize(IManagedForm)} method if\n@@ -81,1 +81,1 @@\n- * This happens when {@link MCSectionPart#initializePart()} is called and it typcally occurs the\n+ * This happens when {@link MCSectionPart#initializePart()} is called and it typically occurs the\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/misc\/MCSectionPart.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-\t * interval specicified in the constructor\n+\t * interval specified in the constructor\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/polling\/PollManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-\t * get some formatting on the accessibility options. It basicly wraps a {@link Composite} around\n+\t * get some formatting on the accessibility options. It basically wraps a {@link Composite} around\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/preferences\/MissionControlPage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-\t *            newly recieved argument, might be null.\n+\t *            newly received argument, might be null.\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/rate\/RateLimitedObserver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-\t *            the start time. currentTimeMilis is usually a good one.\n+\t *            the start time. currentTimeMillis is usually a good one.\n","filename":"application\/tests\/org.openjdk.jmc.greychart.test\/src\/test\/java\/org\/openjdk\/jmc\/greychart\/testutil\/DefaultSignalGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-\t * Relies on ConcurrentHashMap (CHM) implementaiton in JDK6. From JDK7 update ?, some CHM\n+\t * Relies on ConcurrentHashMap (CHM) implementation in JDK6. From JDK7 update ?, some CHM\n","filename":"application\/tests\/org.openjdk.jmc.joverflow.test\/src\/test\/java\/org\/openjdk\/jmc\/joverflow\/stats\/VariousIssueTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}