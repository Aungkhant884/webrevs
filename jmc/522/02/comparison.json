{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,0 @@\n-import java.lang.management.ManagementFactory;\n-\n@@ -43,2 +41,1 @@\n-\t\tString pidAtLocalhost = ManagementFactory.getRuntimeMXBean().getName(); \/\/ Returns something like 12345@localhost\n-\t\tint pid = Integer.parseInt(pidAtLocalhost.substring(0, pidAtLocalhost.indexOf('@')));\n+\t\tlong pid = ProcessHandle.current().pid();\n","filename":"application\/tests\/org.openjdk.jmc.joverflow.test\/src\/test\/java\/examples\/ExampleUtils.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.lang.management.ManagementFactory;\n@@ -135,11 +134,1 @@\n-\t\ttry {\n-\t\t\tString name = ManagementFactory.getRuntimeMXBean().getName();\n-\t\t\tif (name != null) {\n-\t\t\t\tString s = name.split(\"@\")[0]; \/\/$NON-NLS-1$\n-\t\t\t\treturn Integer.parseInt(s);\n-\t\t\t}\n-\t\t} catch (Exception e) {\n-\t\t\tLogger.getLogger(\"org.openjdk.jmc.common.mbean\").log(Level.FINE, \/\/$NON-NLS-1$\n-\t\t\t\t\t\"Could not retrieve PID of this running jvm instance\", e); \/\/$NON-NLS-1$\n-\t\t}\n-\t\treturn 0;\n+\t\treturn (int) ProcessHandle.current().pid();\n","filename":"core\/org.openjdk.jmc.common\/src\/main\/java\/org\/openjdk\/jmc\/common\/util\/Environment.java","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-\t\treturn PIDHelper.getPID();\n+\t\treturn String.valueOf(ProcessHandle.current().pid());\n","filename":"core\/tests\/org.openjdk.jmc.jdp.test\/src\/main\/java\/org\/openjdk\/jmc\/jdp\/server\/jmx\/JMXJDPServer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * \n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * The contents of this file are subject to the terms of either the Universal Permissive License\n- * v 1.0 as shown at http:\/\/oss.oracle.com\/licenses\/upl\n- *\n- * or the following license:\n- *\n- * Redistribution and use in source and binary forms, with or without modification, are permitted\n- * provided that the following conditions are met:\n- * \n- * 1. Redistributions of source code must retain the above copyright notice, this list of conditions\n- * and the following disclaimer.\n- * \n- * 2. Redistributions in binary form must reproduce the above copyright notice, this list of\n- * conditions and the following disclaimer in the documentation and\/or other materials provided with\n- * the distribution.\n- * \n- * 3. Neither the name of the copyright holder nor the names of its contributors may be used to\n- * endorse or promote products derived from this software without specific prior written permission.\n- * \n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n- * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- *\/\n-package org.openjdk.jmc.jdp.server.jmx;\n-\n-import java.lang.management.ManagementFactory;\n-\n-\/**\n- * Helper class to determine the PID in a way that works for both JRockit and Hotspot. According to\n- * Mandy, there will be a better way to retrieve this in JDK8. This class can in other words be\n- * deleted in JDK8.\n- *\/\n-@SuppressWarnings(\"nls\")\n-class PIDHelper {\n-\tprivate static String PID = parsePID(ManagementFactory.getRuntimeMXBean().getName());\n-\n-\tprivate static String parsePID(String s) {\n-\t\tif (s != null) {\n-\t\t\treturn s.split(\"@\")[0];\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic static String getPID() {\n-\t\treturn PID;\n-\t}\n-}\n","filename":"core\/tests\/org.openjdk.jmc.jdp.test\/src\/main\/java\/org\/openjdk\/jmc\/jdp\/server\/jmx\/PIDHelper.java","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"}]}