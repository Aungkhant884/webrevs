{"files":[{"patch":"@@ -166,1 +166,0 @@\n-\tprivate Future<Void> modelCalculationFuture;\n@@ -170,1 +169,3 @@\n-\tprivate volatile ModelState modelState;\n+\tprivate ModelState modelState = ModelState.NONE;\n+\tprivate ModelRebuildCallable modelRebuildCalculation;\n+\tprivate Future<Void> modelCalculationFuture;\n@@ -193,1 +194,1 @@\n-\t\tINIT, CALCULATION, READY, NONE\n+\t\tINIT, CALCULATION, READY, ABORTED, NONE;\n@@ -353,0 +354,1 @@\n+\t\t\tmodelRebuildCalculation.setInvalid();\n@@ -354,3 +356,0 @@\n-\t\t\tif (modelCalculationFuture.isDone()) {\n-\t\t\t\tfinishModelCalculationFuture(modelCalculationFuture);\n-\t\t\t}\n@@ -359,4 +358,4 @@\n-\t\tCallable<Void> modelPreparerTask = getModelPreparerTask(items);\n-\t\tmodelCalculationFuture = MODEL_EXECUTOR.submit(modelPreparerTask);\n-\t\tthis.currentItems = items;\n-\t\tthis.modelState = ModelState.INIT;\n+\t\tmodelState = ModelState.INIT;\n+\t\tcurrentItems = items;\n+\t\tmodelRebuildCalculation = new ModelRebuildCallable(this, items);\n+\t\tmodelCalculationFuture = MODEL_EXECUTOR.submit(modelRebuildCalculation);\n@@ -365,7 +364,10 @@\n-\tprivate void finishModelCalculationFuture(Future<Void> f) {\n-\t\ttry {\n-\t\t\tf.get();\n-\t\t} catch (CancellationException t) {\n-\t\t\t\/\/noop\n-\t\t} catch (InterruptedException | ExecutionException e) {\n-\t\t\tFlightRecorderUI.getDefault().getLogger().log(Level.SEVERE, \"Flameview build has failed\", e); \/\/$NON-NLS-1$\n+\tprivate static class ModelRebuildCallable implements Callable<Void> {\n+\n+\t\tprivate volatile boolean invalid;\n+\t\tprivate FlameGraphView view;\n+\t\tprivate IItemCollection items;\n+\n+\t\tprivate ModelRebuildCallable(FlameGraphView view, IItemCollection items) {\n+\t\t\tthis.invalid = false;\n+\t\t\tthis.view = view;\n+\t\t\tthis.items = items;\n@@ -373,1 +375,0 @@\n-\t}\n@@ -375,4 +376,3 @@\n-\tprivate Callable<Void> getModelPreparerTask(final IItemCollection items) {\n-\t\treturn () -> {\n-\t\t\tthis.modelState = ModelState.CALCULATION;\n-\t\t\tStacktraceModel model = new StacktraceModel(threadRootAtTop, frameSeparator, items);\n+\t\tprivate void setInvalid() {\n+\t\t\tthis.invalid = true;\n+\t\t}\n@@ -380,0 +380,4 @@\n+\t\t@Override\n+\t\tpublic Void call() throws Exception {\n+\t\t\tview.modelState = ModelState.CALCULATION;\n+\t\t\tStacktraceModel model = new StacktraceModel(view.threadRootAtTop, view.frameSeparator, items);\n@@ -382,5 +386,7 @@\n-\t\t\tString jsonModel = toJSonModel(traceNode).toString();\n-\n-\t\t\tthis.modelState = ModelState.READY;\n-\t\t\tDisplayToolkit.inDisplayThread().execute(() -> this.setModel(items, jsonModel));\n-\n+\t\t\tString jsonModel = view.toJSonModel(traceNode).toString();\n+\t\t\tif (invalid) {\n+\t\t\t\tview.modelState = ModelState.ABORTED;\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t\tview.modelState = ModelState.READY;\n+\t\t\tDisplayToolkit.inDisplayThread().execute(() -> view.setModel(items, jsonModel));\n@@ -388,1 +394,1 @@\n-\t\t};\n+\t\t}\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":34,"deletions":28,"binary":false,"changes":62,"status":"modified"}]}