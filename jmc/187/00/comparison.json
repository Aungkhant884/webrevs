{"files":[{"patch":"@@ -36,1 +36,0 @@\n-import static org.openjdk.jmc.common.item.ItemToolkit.accessor;\n@@ -83,2 +82,0 @@\n-\t@SuppressWarnings(\"deprecation\")\n-\tprivate final static IMemberAccessor<IMCStackTrace, IItem> ACCESSOR_STACKTRACE = accessor(EVENT_STACKTRACE);\n@@ -266,1 +263,5 @@\n-\t\t\titerable.forEach((item) -> addItem(item, getAccessor(iterable, attribute)));\n+\t\t\tIMemberAccessor<IMCStackTrace, IItem> stacktraceAccessor = getAccessor(iterable, EVENT_STACKTRACE);\n+\t\t\tif (stacktraceAccessor == null) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\titerable.forEach((item) -> addItem(item, stacktraceAccessor, getAccessor(iterable, attribute)));\n@@ -270,6 +271,2 @@\n-\tprivate static IMemberAccessor<IQuantity, IItem> getAccessor(IItemIterable iterable, IAttribute<IQuantity> attr) {\n-\t\tIMemberAccessor<IQuantity, IItem> accessor = null;\n-\t\tif (attr != null) {\n-\t\t\taccessor = iterable.getType().getAccessor(attr.getKey());\n-\t\t}\n-\t\treturn accessor;\n+\tprivate static <T> IMemberAccessor<T, IItem> getAccessor(IItemIterable iterable, IAttribute<T> attr) {\n+\t\treturn (attr != null) ? iterable.getType().getAccessor(attr.getKey()) : null;\n@@ -278,2 +275,4 @@\n-\tprivate void addItem(IItem item, IMemberAccessor<IQuantity, IItem> accessor) {\n-\t\tIMCStackTrace stackTrace = getStackTrace(item);\n+\tprivate void addItem(\n+\t\tIItem item, IMemberAccessor<IMCStackTrace, IItem> stackTraceAccessor,\n+\t\tIMemberAccessor<IQuantity, IItem> quantityAccessor) {\n+\t\tIMCStackTrace stackTrace = stackTraceAccessor.getMember(item);\n@@ -283,1 +282,1 @@\n-\t\tList<? extends IMCFrame> frames = getStackTrace(item).getFrames();\n+\t\tList<? extends IMCFrame> frames = stackTrace.getFrames();\n@@ -289,2 +288,2 @@\n-\t\tif (accessor != null) {\n-\t\t\tvalue = accessor.getMember(item).doubleValue();\n+\t\tif (quantityAccessor != null) {\n+\t\t\tvalue = quantityAccessor.getMember(item).doubleValue();\n@@ -353,4 +352,0 @@\n-\tprivate IMCStackTrace getStackTrace(IItem item) {\n-\t\treturn ACCESSOR_STACKTRACE.getMember(item);\n-\t}\n-\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/graph\/StacktraceGraphModel.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import static org.openjdk.jmc.common.item.ItemToolkit.accessor;\n@@ -54,2 +53,1 @@\n-\t@SuppressWarnings(\"deprecation\")\n-\tprivate static final IMemberAccessor<IMCStackTrace, IItem> ACCESSOR_STACKTRACE = accessor(EVENT_STACKTRACE);\n+\n@@ -144,2 +142,6 @@\n-\t\t\tIMemberAccessor<IQuantity, IItem> accessor = getAccessor(iterable, attribute);\n-\t\t\titerable.forEach((item) -> addItem(item, accessor));\n+\t\t\tIMemberAccessor<IMCStackTrace, IItem> stacktraceAccessor = getAccessor(iterable, EVENT_STACKTRACE);\n+\t\t\tif (stacktraceAccessor == null) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tIMemberAccessor<IQuantity, IItem> quantityAccessor = getAccessor(iterable, attribute);\n+\t\t\titerable.forEach((item) -> addItem(item, stacktraceAccessor, quantityAccessor));\n@@ -163,2 +165,4 @@\n-\tprivate void addItem(IItem item, IMemberAccessor<IQuantity, IItem> accessor) {\n-\t\tIMCStackTrace stacktrace = getStackTrace(item);\n+\tprivate void addItem(\n+\t\tIItem item, IMemberAccessor<IMCStackTrace, IItem> stacktraceAccessor,\n+\t\tIMemberAccessor<IQuantity, IItem> quantityAccessor) {\n+\t\tIMCStackTrace stacktrace = stacktraceAccessor.getMember(item);\n@@ -168,1 +172,1 @@\n-\t\tList<? extends IMCFrame> frames = getStackTrace(item).getFrames();\n+\t\tList<? extends IMCFrame> frames = stacktrace.getFrames();\n@@ -174,1 +178,1 @@\n-\t\tif (attribute != null && accessor == null) {\n+\t\tif (attribute != null && quantityAccessor == null) {\n@@ -179,1 +183,1 @@\n-\t\tdouble value = (accessor != null) ? accessor.getMember(item).doubleValue() : 1.0;\n+\t\tdouble value = (quantityAccessor != null) ? quantityAccessor.getMember(item).doubleValue() : 1.0;\n@@ -220,5 +224,1 @@\n-\tprivate IMCStackTrace getStackTrace(IItem item) {\n-\t\treturn ACCESSOR_STACKTRACE.getMember(item);\n-\t}\n-\n-\tprivate static IMemberAccessor<IQuantity, IItem> getAccessor(IItemIterable iterable, IAttribute<IQuantity> attr) {\n+\tprivate static <T> IMemberAccessor<T, IItem> getAccessor(IItemIterable iterable, IAttribute<T> attr) {\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/stacktrace\/tree\/StacktraceTreeModel.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}