{"files":[{"patch":"@@ -68,1 +68,1 @@\n-\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/gh\/spiermar\/d3-flame-graph@2.0.3\/dist\/d3-flamegraph.css<\/url>\n+\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.0.6\/dist\/d3-flamegraph.css<\/url>\n@@ -74,1 +74,1 @@\n-\t\t\t\t\t\t<id>ie-html5shiv-js<\/id>\n+\t\t\t\t\t\t<id>d3-v6-js<\/id>\n@@ -80,1 +80,1 @@\n-\t\t\t\t\t\t\t<url>https:\/\/oss.maxcdn.com\/html5shiv\/3.7.2\/html5shiv.min.js<\/url>\n+\t\t\t\t\t\t\t<url>https:\/\/d3js.org\/d3.v6.min.js<\/url>\n@@ -86,1 +86,1 @@\n-\t\t\t\t\t\t<id>ie-respond-js<\/id>\n+\t\t\t\t\t\t<id>d3-flamegraph-tooltip-js<\/id>\n@@ -92,25 +92,1 @@\n-\t\t\t\t\t\t\t<url>https:\/\/oss.maxcdn.com\/respond\/1.4.2\/respond.min.js<\/url>\n-\t\t\t\t\t\t\t<unpack>false<\/unpack>\n-\t\t\t\t\t\t\t<outputDirectory>${download-maven-plugin.output}<\/outputDirectory>\n-\t\t\t\t\t\t<\/configuration>\n-\t\t\t\t\t<\/execution>\n-\t\t\t\t\t<execution>\n-\t\t\t\t\t\t<id>d3-v4-js<\/id>\n-\t\t\t\t\t\t<phase>${download-maven-plugin.phase}<\/phase>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>wget<\/goal>\n-\t\t\t\t\t\t<\/goals>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<url>https:\/\/d3js.org\/d3.v4.min.js<\/url>\n-\t\t\t\t\t\t\t<unpack>false<\/unpack>\n-\t\t\t\t\t\t\t<outputDirectory>${download-maven-plugin.output}<\/outputDirectory>\n-\t\t\t\t\t\t<\/configuration>\n-\t\t\t\t\t<\/execution>\n-\t\t\t\t\t<execution>\n-\t\t\t\t\t\t<id>d3-tip-js<\/id>\n-\t\t\t\t\t\t<phase>${download-maven-plugin.phase}<\/phase>\n-\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t<goal>wget<\/goal>\n-\t\t\t\t\t\t<\/goals>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<url>https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/d3-tip\/0.9.1\/d3-tip.min.js<\/url>\n+\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.0.6\/dist\/d3-flamegraph-tooltip.js<\/url>\n@@ -128,1 +104,1 @@\n-\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/gh\/spiermar\/d3-flame-graph@2.0.3\/dist\/d3-flamegraph.min.js<\/url>\n+\t\t\t\t\t\t\t<url>https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.0.6\/dist\/d3-flamegraph.js<\/url>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/pom.xml","additions":6,"deletions":30,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-\t\tsb.append(addQuotes(\"v\")).append(\": \").append(addQuotes(String.valueOf((int) value)));\n+\t\tsb.append(addQuotes(\"v\")).append(\": \").append(String.valueOf((int) value));\n@@ -121,1 +121,1 @@\n-\tprivate static String createJsonProps(String frameName, String description) {\n+\tprivate static String createJsonProps(String frameName, String description, double value) {\n@@ -128,0 +128,2 @@\n+\t\tsb.append(\",\");\n+\t\tsb.append(addQuotes(\"v\")).append(\": \").append(String.valueOf((int) value));\n@@ -154,1 +156,2 @@\n-\t\treturn createJsonProps(rootTitle, rootDescription);\n+\t\treturn createJsonProps(rootTitle, rootDescription,\n+\t\t\t\teventCountsByType.values().stream().mapToLong(Long::longValue).sum());\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/FlameGraphJsonMarshaller.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/gh\/spiermar\/d3-flame-graph@2.0.3\/dist\/d3-flamegraph.css\n+\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.0.6\/dist\/d3-flamegraph.css\n@@ -125,10 +125,6 @@\n-\t\t\/\/ from: https:\/\/oss.maxcdn.com\/html5shiv\/3.7.2\/html5shiv.min.js\n-\t\tString jsHtml5shiv = \"jslibs\/html5shiv.min.js\";\n-\t\t\/\/ from: https:\/\/oss.maxcdn.com\/respond\/1.4.2\/respond.min.js\n-\t\tString jsRespond = \"jslibs\/respond.min.js\";\n-\t\t\/\/ from: https:\/\/d3js.org\/d3.v4.min.js\n-\t\tString jsD3V4 = \"jslibs\/d3.v4.min.js\";\n-\t\t\/\/ from: https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/d3-tip\/0.9.1\/d3-tip.min.js\n-\t\tString jsD3Tip = \"jslibs\/d3-tip.min.js\";\n-\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/gh\/spiermar\/d3-flame-graph@2.0.3\/dist\/d3-flamegraph.min.js\n-\t\tString jsD3FlameGraph = \"jslibs\/d3-flamegraph.min.js\";\n+\t\t\/\/ from: https:\/\/d3js.org\/d3.v6.min.js\n+\t\tString jsD3V6 = \"jslibs\/d3.v6.min.js\";\n+\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.0.6\/dist\/d3-flamegraph-tooltip.js\n+\t\tString jsD3Tip = \"jslibs\/d3-flamegraph-tooltip.js\";\n+\t\t\/\/ from: https:\/\/cdn.jsdelivr.net\/npm\/d3-flame-graph@4.0.6\/dist\/d3-flamegraph.js\n+\t\tString jsD3FlameGraph = \"jslibs\/d3-flamegraph.js\";\n@@ -139,2 +135,1 @@\n-\t\tString jsIeLibraries = loadLibraries(jsHtml5shiv, jsRespond);\n-\t\tString jsD3Libraries = loadLibraries(jsD3V4, jsD3Tip, jsD3FlameGraph);\n+\t\tString jsD3 = loadLibraries(jsD3V6, jsD3FlameGraph, jsD3Tip);\n@@ -146,4 +141,3 @@\n-\t\t\/\/ formatter arguments for the template: %1 - CSSs stylesheets, %2 - IE9 specific scripts,\n-\t\t\/\/ %3 - Search Icon Base64, %4 - 3rd party scripts, %5 - Flameview Coloring,\n-\t\tHTML_PAGE = String.format(fileContent(\"page.template\"), styleheets, jsIeLibraries, magnifierIcon, jsD3Libraries,\n-\t\t\t\tjsFlameviewColoring);\n+\t\t\/\/ formatter arguments for the template: %1 - CSSs stylesheets,\n+\t\t\/\/ %2 - Search Icon Base64, %3 - 3rd party scripts, %4 - Flameview Coloring,\n+\t\tHTML_PAGE = String.format(fileContent(\"page.template\"), styleheets, magnifierIcon, jsD3, jsFlameviewColoring);\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+\n@@ -149,1 +150,1 @@\n-\t\tif (d.data.v === undefined) {\n+\t\tif (d.data.d && d.data.d.includes(\"|\")) {\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/js\/flameview.js","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,4 +7,0 @@\n-\t<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n-\t<!--[if lt IE 9]>\n-\t\t<script>%2$s<\/script>\n-\t<![endif]-->\n@@ -25,1 +21,1 @@\n-\t\t<img src=\"data:image\/png;base64, %3$s\" width=\"12\" height=\"12\">\n+\t\t<img src=\"data:image\/png;base64, %2$s\" width=\"12\" height=\"12\">\n@@ -28,2 +24,6 @@\n-\t<script type=\"text\/javascript\">%4$s<\/script>\n-\t<script type=\"text\/javascript\">%5$s<\/script>\n+\t<script type=\"text\/javascript\">\n+\t%3$s\n+\t<\/script>\n+\t<script type=\"text\/javascript\">\n+\t%4$s\n+\t<\/script>\n@@ -62,5 +62,2 @@\n-\t\tconst tip = d3.tip()\n-        \t.direction(\"s\")\n-        \t.offset([8, 0])\n-        \t.attr('class', 'd3-flame-graph-tip')\n-        \t.html(adjustTip);\n+\t\tconst tip = flamegraph.tooltip.defaultFlamegraphTooltip()\n+\t\t\t.html(adjustTip);\n@@ -69,1 +66,1 @@\n-\t\t\tflameGraph = d3.flamegraph()\n+\t\t\tflameGraph = flamegraph()\n@@ -77,1 +74,0 @@\n-\t\t\t\t.differential(false)\n@@ -185,1 +181,1 @@\n-<\/html>\n\\ No newline at end of file\n+<\/html>\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/resources\/page.template","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\", \"c\": [ {\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": \"24\", \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": \"24\", \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"24\", \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"24\", \"c\": [ {\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"24\", \"c\": [ ]}]}]}]}]},{\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": \"112\", \"c\": [ {\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": \"112\", \"c\": [ ]}]},{\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": \"104\", \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": \"104\", \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": \"104\", \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"104\", \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"104\", \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": \"104\", \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": \"104\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"104\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"104\", \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": \"104\", \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": \"104\", \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"104\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"104\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"104\", \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": \"104\", \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": \"104\", \"c\": [ {\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": \"104\", \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n+{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\",\"v\": 468, \"c\": [ {\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": 24, \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": 24, \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 24, \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 24, \"c\": [ {\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 24, \"c\": [ ]}]}]}]}]},{\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": 112, \"c\": [ {\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": 112, \"c\": [ ]}]},{\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": 104, \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": 104, \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": 104, \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 104, \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 104, \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": 104, \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": 104, \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": 104, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 104, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 104, \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": 104, \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": 104, \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 104, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 104, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 104, \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": 104, \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": 104, \"c\": [ {\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": 104, \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.flameview.test\/src\/test\/resources\/flamegraph-attribute-inverted.json","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\", \"c\": [ {\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"24\", \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"24\", \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"24\", \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": \"24\", \"c\": [ {\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": \"24\", \"c\": [ ]}]}]}]}]},{\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": \"112\", \"c\": [ {\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": \"112\", \"c\": [ ]}]},{\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": \"104\", \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": \"104\", \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": \"104\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"104\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"104\", \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"104\", \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": \"104\", \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": \"104\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"104\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"104\", \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": \"104\", \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": \"104\", \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"104\", \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": \"104\", \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": \"104\", \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": \"104\", \"c\": [ {\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": \"104\", \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n+{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\",\"v\": 468, \"c\": [ {\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 24, \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 24, \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 24, \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": 24, \"c\": [ {\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": 24, \"c\": [ ]}]}]}]}]},{\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": 112, \"c\": [ {\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": 112, \"c\": [ ]}]},{\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": 104, \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": 104, \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": 104, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 104, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 104, \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 104, \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": 104, \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": 104, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 104, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 104, \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": 104, \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": 104, \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 104, \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 104, \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": 104, \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": 104, \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": 104, \"c\": [ {\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": 104, \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.flameview.test\/src\/test\/resources\/flamegraph-attribute.json","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\", \"c\": [ {\"n\": \"ObjectOutputStream$BlockDataOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectStreamClass.writeNonProxy(ObjectOutputStream)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeNonProxyDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeClassDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeOrdinaryObject(Object, ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeObject0(Object, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeObject(Object)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ArrayList.writeObject(ObjectOutputStream)\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ ]}]}]}]}]}]}]}]}]},{\"n\": \"Buffer.checkIndex(int)\",\"p\": \"java.nio\",\"v\": \"1\", \"c\": [ {\"n\": \"DirectByteBuffer.put(int, byte)\",\"p\": \"java.nio\",\"v\": \"1\", \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.release()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.finish(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"VMJFR.releaseThreadBuffer(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"InstantEvent.write()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"InstantEvent.commit()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ ]}]}]}]}]}]}]},{\"n\": \"Object.wait(long)\",\"p\": \"java.lang\",\"v\": \"108\", \"c\": [ {\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": \"10\", \"c\": [ {\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": \"10\", \"c\": [ ]}]},{\"n\": \"OGLRenderQueue$QueueFlusher.run()\",\"p\": \"sun.java2d.opengl\",\"v\": \"98\", \"c\": [ ]}]},{\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ ]}]}]}]}]},{\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ {\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ ]}]},{\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": \"1\", \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": \"1\", \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"1\", \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"1\", \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": \"1\", \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": \"1\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"1\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"1\", \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": \"1\", \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": \"1\", \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"1\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"1\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"1\", \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": \"1\", \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": \"1\", \"c\": [ {\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": \"1\", \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{\"n\": \"SocketInputStream.read(byte[], int, int, int)\",\"p\": \"java.net\",\"v\": \"9\", \"c\": [ {\"n\": \"SocketInputStream.read(byte[], int, int)\",\"p\": \"java.net\",\"v\": \"9\", \"c\": [ {\"n\": \"BufferedInputStream.fill()\",\"p\": \"java.io\",\"v\": \"9\", \"c\": [ {\"n\": \"BufferedInputStream.read()\",\"p\": \"java.io\",\"v\": \"9\", \"c\": [ {\"n\": \"FilterInputStream.read()\",\"p\": \"java.io\",\"v\": \"9\", \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"9\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"9\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"9\", \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": \"9\", \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": \"9\", \"c\": [ {\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": \"9\", \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n+{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\",\"v\": 468, \"c\": [ {\"n\": \"ObjectOutputStream$BlockDataOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectStreamClass.writeNonProxy(ObjectOutputStream)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeNonProxyDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeClassDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeOrdinaryObject(Object, ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeObject0(Object, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeObject(Object)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ArrayList.writeObject(ObjectOutputStream)\",\"p\": \"java.util\",\"v\": 1, \"c\": [ ]}]}]}]}]}]}]}]}]},{\"n\": \"Buffer.checkIndex(int)\",\"p\": \"java.nio\",\"v\": 1, \"c\": [ {\"n\": \"DirectByteBuffer.put(int, byte)\",\"p\": \"java.nio\",\"v\": 1, \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.release()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.finish(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"VMJFR.releaseThreadBuffer(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"InstantEvent.write()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"InstantEvent.commit()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": 1, \"c\": [ ]}]}]}]}]}]}]},{\"n\": \"Object.wait(long)\",\"p\": \"java.lang\",\"v\": 108, \"c\": [ {\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": 10, \"c\": [ {\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": 10, \"c\": [ ]}]},{\"n\": \"OGLRenderQueue$QueueFlusher.run()\",\"p\": \"sun.java2d.opengl\",\"v\": 98, \"c\": [ ]}]},{\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": 1, \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": 1, \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ ]}]}]}]}]},{\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": 1, \"c\": [ {\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": 1, \"c\": [ ]}]},{\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": 1, \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": 1, \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": 1, \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 1, \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 1, \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": 1, \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": 1, \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": 1, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 1, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 1, \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": 1, \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": 1, \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 1, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 1, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 1, \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": 1, \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": 1, \"c\": [ {\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": 1, \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{\"n\": \"SocketInputStream.read(byte[], int, int, int)\",\"p\": \"java.net\",\"v\": 9, \"c\": [ {\"n\": \"SocketInputStream.read(byte[], int, int)\",\"p\": \"java.net\",\"v\": 9, \"c\": [ {\"n\": \"BufferedInputStream.fill()\",\"p\": \"java.io\",\"v\": 9, \"c\": [ {\"n\": \"BufferedInputStream.read()\",\"p\": \"java.io\",\"v\": 9, \"c\": [ {\"n\": \"FilterInputStream.read()\",\"p\": \"java.io\",\"v\": 9, \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 9, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 9, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 9, \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": 9, \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": 9, \"c\": [ {\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": 9, \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.flameview.test\/src\/test\/resources\/flamegraph-counts-inverted.json","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\", \"c\": [ {\"n\": \"ArrayList.writeObject(ObjectOutputStream)\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeObject(Object)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeObject0(Object, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeOrdinaryObject(Object, ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeClassDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeNonProxyDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectStreamClass.writeNonProxy(ObjectOutputStream)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectOutputStream$BlockDataOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ ]}]}]}]}]}]}]}]}]},{\"n\": \"InstantEvent.commit()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"InstantEvent.write()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"VMJFR.releaseThreadBuffer(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.finish(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.release()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"DirectByteBuffer.put(int, byte)\",\"p\": \"java.nio\",\"v\": \"1\", \"c\": [ {\"n\": \"Buffer.checkIndex(int)\",\"p\": \"java.nio\",\"v\": \"1\", \"c\": [ ]}]}]}]}]}]}]},{\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": \"11\", \"c\": [ {\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": \"11\", \"c\": [ {\"n\": \"Object.wait(long)\",\"p\": \"java.lang\",\"v\": \"10\", \"c\": [ ]}]}]},{\"n\": \"OGLRenderQueue$QueueFlusher.run()\",\"p\": \"sun.java2d.opengl\",\"v\": \"98\", \"c\": [ {\"n\": \"Object.wait(long)\",\"p\": \"java.lang\",\"v\": \"98\", \"c\": [ ]}]},{\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": \"1\", \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ {\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ ]}]}]}]}]},{\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": \"10\", \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": \"10\", \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": \"10\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"10\", \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"10\", \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": \"10\", \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": \"1\", \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": \"1\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"1\", \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": \"1\", \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": \"1\", \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": \"1\", \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"1\", \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": \"1\", \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": \"1\", \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": \"1\", \"c\": [ {\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": \"1\", \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{\"n\": \"FilterInputStream.read()\",\"p\": \"java.io\",\"v\": \"9\", \"c\": [ {\"n\": \"BufferedInputStream.read()\",\"p\": \"java.io\",\"v\": \"9\", \"c\": [ {\"n\": \"BufferedInputStream.fill()\",\"p\": \"java.io\",\"v\": \"9\", \"c\": [ {\"n\": \"SocketInputStream.read(byte[], int, int)\",\"p\": \"java.net\",\"v\": \"9\", \"c\": [ {\"n\": \"SocketInputStream.read(byte[], int, int, int)\",\"p\": \"java.net\",\"v\": \"9\", \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n+{\"n\": \"468 events of 21 types: Recording Setting[255], Java Monitor Wait[108], Thread Allocation Statistics[44]...\",\"p\": \"\",\"d\": \"255:Recording Setting|108:Java Monitor Wait|44:Thread Allocation Statistics|9:Socket Read|9:Class Loading Statistics|9:Exception Statistics|9:Java Thread Statistics|8:CPU Load|3:Allocation in new TLAB|2:Method Profiling Sample|12:Others... (11 types)|\",\"v\": 468, \"c\": [ {\"n\": \"ArrayList.writeObject(ObjectOutputStream)\",\"p\": \"java.util\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeObject(Object)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeObject0(Object, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeOrdinaryObject(Object, ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeClassDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeNonProxyDesc(ObjectStreamClass, boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectStreamClass.writeNonProxy(ObjectOutputStream)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectOutputStream$BlockDataOutputStream.writeUTF(String)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ ]}]}]}]}]}]}]}]}]},{\"n\": \"InstantEvent.commit()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"InstantEvent.write()\",\"p\": \"com.oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"VMJFR.releaseThreadBuffer(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.finish(ByteBuffer, boolean)\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"VMJFR$ThreadBuffer.release()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"DirectByteBuffer.put(int, byte)\",\"p\": \"java.nio\",\"v\": 1, \"c\": [ {\"n\": \"Buffer.checkIndex(int)\",\"p\": \"java.nio\",\"v\": 1, \"c\": [ ]}]}]}]}]}]}]},{\"n\": \"TimerThread.run()\",\"p\": \"java.util\",\"v\": 11, \"c\": [ {\"n\": \"TimerThread.mainLoop()\",\"p\": \"java.util\",\"v\": 11, \"c\": [ {\"n\": \"Object.wait(long)\",\"p\": \"java.lang\",\"v\": 10, \"c\": [ ]}]}]},{\"n\": \"OGLRenderQueue$QueueFlusher.run()\",\"p\": \"sun.java2d.opengl\",\"v\": 98, \"c\": [ {\"n\": \"Object.wait(long)\",\"p\": \"java.lang\",\"v\": 98, \"c\": [ ]}]},{\"n\": \"JFRImpl.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"MetaProducer.onNewChunk()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"JFRImpl.getRecordings()\",\"p\": \"oracle.jrockit.jfr\",\"v\": 1, \"c\": [ {\"n\": \"ArrayList.<init>(Collection)\",\"p\": \"java.util\",\"v\": 1, \"c\": [ {\"n\": \"AbstractCollection.toArray()\",\"p\": \"java.util\",\"v\": 1, \"c\": [ ]}]}]}]}]},{\"n\": \"Thread.run()\",\"p\": \"java.lang\",\"v\": 10, \"c\": [ {\"n\": \"ThreadPoolExecutor$Worker.run()\",\"p\": \"java.util.concurrent\",\"v\": 10, \"c\": [ {\"n\": \"ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)\",\"p\": \"java.util.concurrent\",\"v\": 10, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 10, \"c\": [ {\"n\": \"TCPTransport$ConnectionHandler.run0()\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 10, \"c\": [ {\"n\": \"TCPTransport.handleMessages(Connection, boolean)\",\"p\": \"sun.rmi.transport.tcp\",\"v\": 10, \"c\": [ {\"n\": \"Transport.serviceCall(RemoteCall)\",\"p\": \"sun.rmi.transport\",\"v\": 1, \"c\": [ {\"n\": \"AccessController.doPrivileged(PrivilegedExceptionAction, AccessControlContext)\",\"p\": \"java.security\",\"v\": 1, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 1, \"c\": [ {\"n\": \"Transport$1.run()\",\"p\": \"sun.rmi.transport\",\"v\": 1, \"c\": [ {\"n\": \"UnicastServerRef.dispatch(Remote, RemoteCall)\",\"p\": \"sun.rmi.server\",\"v\": 1, \"c\": [ {\"n\": \"UnicastRef.unmarshalValue(Class, ObjectInput)\",\"p\": \"sun.rmi.server\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readOrdinaryObject(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readSerialData(Object, ObjectStreamClass)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectStreamClass.invokeReadObject(Object, ObjectInputStream)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"Method.invoke(Object, Object[])\",\"p\": \"java.lang.reflect\",\"v\": 1, \"c\": [ {\"n\": \"DelegatingMethodAccessorImpl.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 1, \"c\": [ {\"n\": \"GeneratedMethodAccessor3.invoke(Object, Object[])\",\"p\": \"sun.reflect\",\"v\": 1, \"c\": [ {\"n\": \"ObjectName.readObject(ObjectInputStream)\",\"p\": \"javax.management\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject()\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readObject0(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream.readString(boolean)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTF()\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"ObjectInputStream$BlockDataInputStream.readUTFBody(long)\",\"p\": \"java.io\",\"v\": 1, \"c\": [ {\"n\": \"StringBuilder.toString()\",\"p\": \"java.lang\",\"v\": 1, \"c\": [ {\"n\": \"String.<init>(char[], int, int)\",\"p\": \"java.lang\",\"v\": 1, \"c\": [ {\"n\": \"Arrays.copyOfRange(char[], int, int)\",\"p\": \"java.util\",\"v\": 1, \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{\"n\": \"FilterInputStream.read()\",\"p\": \"java.io\",\"v\": 9, \"c\": [ {\"n\": \"BufferedInputStream.read()\",\"p\": \"java.io\",\"v\": 9, \"c\": [ {\"n\": \"BufferedInputStream.fill()\",\"p\": \"java.io\",\"v\": 9, \"c\": [ {\"n\": \"SocketInputStream.read(byte[], int, int)\",\"p\": \"java.net\",\"v\": 9, \"c\": [ {\"n\": \"SocketInputStream.read(byte[], int, int, int)\",\"p\": \"java.net\",\"v\": 9, \"c\": [ ]}]}]}]}]}]}]}]}]}]}]}]}\n\\ No newline at end of file\n","filename":"application\/tests\/org.openjdk.jmc.flightrecorder.flameview.test\/src\/test\/resources\/flamegraph-counts.json","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -550,1 +550,1 @@\n-Copyright 2010-2017 Mike Bostock\n+Copyright 2010-2020 Mike Bostock\n","filename":"license\/THIRDPARTYREADME.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}