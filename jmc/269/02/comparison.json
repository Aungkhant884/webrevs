{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/common\/DataPageToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -544,0 +544,4 @@\n+\tpublic static String TlabPage_CLASS_TAB_NAME;\n+\tpublic static String TlabPage_SUMMARY_TAB_NAME;\n+\tpublic static String TlabPage_SUMMARY_TAB_INSIDE_ALLOCATION;\n+\tpublic static String TlabPage_SUMMARY_TAB_OUTSIDE_ALLOCATION;\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/Messages.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import org.eclipse.swt.custom.SashForm;\n@@ -45,0 +46,1 @@\n+import org.eclipse.ui.forms.widgets.Form;\n@@ -46,1 +48,1 @@\n-\n+import org.eclipse.ui.forms.widgets.Section;\n@@ -72,0 +74,1 @@\n+import org.openjdk.jmc.flightrecorder.ui.common.ItemAggregateViewer;\n@@ -77,0 +80,1 @@\n+import org.openjdk.jmc.ui.accessibility.SimpleTraverseListener;\n@@ -81,0 +85,1 @@\n+import org.openjdk.jmc.ui.misc.CompositeToolkit;\n@@ -139,0 +144,48 @@\n+\tprivate class TlabSummaryUI implements IPageUI {\n+\n+\t\tprotected Form form;\n+\n+\t\tTlabSummaryUI(Composite parent, FormToolkit toolkit, IPageContainer pageContainer, IState state) {\n+\t\t\tdisplay(parent, toolkit, pageContainer, state);\n+\t\t}\n+\n+\t\tpublic void display(Composite parent, FormToolkit toolkit, IPageContainer pageContainer, IState state) {\n+\t\t\tform = DataPageToolkit.createForm(parent, toolkit, getName(), getIcon());\n+\t\t\tSashForm container = new SashForm(form.getBody(), SWT.HORIZONTAL);\n+\t\t\tcontainer.addTraverseListener(new SimpleTraverseListener());\n+\n+\t\t\tSection insideSummarySection = CompositeToolkit.createSection(container, toolkit,\n+\t\t\t\t\tMessages.TlabPage_SUMMARY_TAB_INSIDE_ALLOCATION);\n+\t\t\tItemAggregateViewer insideSummary = new ItemAggregateViewer(insideSummarySection, toolkit);\n+\t\t\tinsideSummary.addAggregate(JdkAggregators.INSIDE_TLAB_COUNT);\n+\t\t\tinsideSummary.addAggregate(JdkAggregators.ALLOC_INSIDE_TLAB_MAX);\n+\t\t\tinsideSummary.addAggregate(JdkAggregators.ALLOC_INSIDE_TLAB_MIN);\n+\t\t\tinsideSummary.addAggregate(JdkAggregators.ALLOC_TLAB_AVG);\n+\t\t\tinsideSummary.addAggregate(JdkAggregators.ALLOC_INSIDE_TLAB_SUM);\n+\t\t\tinsideSummarySection.setClient(insideSummary.getControl());\n+\n+\t\t\tSection outsideSummarySection = CompositeToolkit.createSection(container, toolkit,\n+\t\t\t\t\tMessages.TlabPage_SUMMARY_TAB_OUTSIDE_ALLOCATION);\n+\t\t\tItemAggregateViewer outsideSummary = new ItemAggregateViewer(outsideSummarySection, toolkit);\n+\t\t\toutsideSummary.addAggregate(JdkAggregators.OUTSIDE_TLAB_COUNT);\n+\t\t\toutsideSummary.addAggregate(JdkAggregators.ALLOC_OUTSIDE_TLAB_MAX);\n+\t\t\toutsideSummary.addAggregate(JdkAggregators.ALLOC_OUTSIDE_TLAB_MIN);\n+\t\t\toutsideSummary.addAggregate(JdkAggregators.ALLOC_OUTSIDE_TLAB_AVG);\n+\t\t\toutsideSummary.addAggregate(JdkAggregators.ALLOC_OUTSIDE_TLAB_SUM);\n+\t\t\toutsideSummarySection.setClient(outsideSummary.getControl());\n+\n+\t\t\tinsideSummary.setValues(getDataSource().getItems());\n+\t\t\toutsideSummary.setValues(getDataSource().getItems());\n+\n+\t\t\taddResultActions(form);\n+\t\t}\n+\n+\t\tpublic Form getComponent() {\n+\t\t\treturn this.form;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void saveTo(IWritableState state) {\n+\t\t}\n+\t}\n+\n@@ -144,0 +197,2 @@\n+\t\tprivate TlabChartTable classCT;\n+\t\tprivate TlabSummaryUI summaryCT;\n@@ -156,0 +211,6 @@\n+\t\t\tclassCT = new TlabChartTable(tabFolder, toolkit, editor, state, JdkAttributes.ALLOCATION_CLASS);\n+\t\t\tDataPageToolkit.addTabItem(tabFolder, classCT.getComponent(), Messages.TlabPage_CLASS_TAB_NAME);\n+\n+\t\t\tsummaryCT = new TlabSummaryUI(tabFolder, toolkit, editor, state);\n+\t\t\tDataPageToolkit.addTabItem(tabFolder, summaryCT.getComponent(), Messages.TlabPage_SUMMARY_TAB_NAME);\n+\n@@ -163,1 +224,2 @@\n-\n+\t\t\tclassCT.saveTo(state);\n+\t\t\tsummaryCT.saveTo(state);\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/ui\/pages\/TlabPage.java","additions":65,"deletions":3,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -525,0 +525,4 @@\n+TlabPage_CLASS_TAB_NAME=By Class\n+TlabPage_SUMMARY_TAB_NAME=Summary\n+TlabPage_SUMMARY_TAB_INSIDE_ALLOCATION=Thread Local Allocation Buffer (TLAB) Statistics\n+TlabPage_SUMMARY_TAB_OUTSIDE_ALLOCATION=Statistics for Object Allocations (Outside TLABs)\n","filename":"application\/org.openjdk.jmc.flightrecorder.ui\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/ui\/messages\/internal\/messages.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,0 +187,2 @@\n+\tpublic static final IAggregator<IQuantity, ?> TLAB_MAX_SIZE = max(JdkAttributes.TLAB_MAX_SIZE.getName(), null,\n+\t\t\tGC_CONF_TLAB, JdkAttributes.TLAB_MAX_SIZE);\n@@ -326,0 +328,3 @@\n+\tpublic static final IAggregator<IQuantity, ?> ALLOC_TLAB_AVG = Aggregators.avg(\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_TLAB_AVG), Messages.getString(Messages.AGGR_ALLOC_TLAB_AVG_DESC),\n+\t\t\tJdkTypeIDs.ALLOC_INSIDE_TLAB, JdkAttributes.TLAB_SIZE);\n@@ -330,0 +335,16 @@\n+\tpublic static final IAggregator<IQuantity, ?> ALLOC_INSIDE_TLAB_MAX = Aggregators.max(\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_INSIDE_TLAB_MAX),\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_INSIDE_TLAB_MAX_DESC), JdkTypeIDs.ALLOC_INSIDE_TLAB,\n+\t\t\tJdkAttributes.TLAB_SIZE);\n+\tpublic static final IAggregator<IQuantity, ?> ALLOC_OUTSIDE_TLAB_MAX = Aggregators.max(\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_OUTSIDE_TLAB_MAX),\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_OUTSIDE_TLAB_MAX_DESC), JdkTypeIDs.ALLOC_OUTSIDE_TLAB,\n+\t\t\tJdkAttributes.ALLOCATION_SIZE);\n+\tpublic static final IAggregator<IQuantity, ?> ALLOC_INSIDE_TLAB_MIN = Aggregators.min(\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_INSIDE_TLAB_MIN),\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_INSIDE_TLAB_MIN_DESC), JdkTypeIDs.ALLOC_INSIDE_TLAB,\n+\t\t\tJdkAttributes.TLAB_SIZE);\n+\tpublic static final IAggregator<IQuantity, ?> ALLOC_OUTSIDE_TLAB_MIN = Aggregators.min(\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_OUTSIDE_TLAB_MIN),\n+\t\t\tMessages.getString(Messages.AGGR_ALLOC_OUTSIDE_TLAB_MIN_DESC), JdkTypeIDs.ALLOC_OUTSIDE_TLAB,\n+\t\t\tJdkAttributes.ALLOCATION_SIZE);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAggregators.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -678,0 +678,2 @@\n+\tpublic static final IAttribute<IQuantity> TLAB_MAX_SIZE = attr(\"maxTLABSize\", \/\/$NON-NLS-1$\n+\t\t\tMessages.getString(Messages.ATTR_TLAB_MAX_SIZE), MEMORY);\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/JdkAttributes.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,10 @@\n+\tpublic static final String AGGR_ALLOC_TLAB_AVG = \"AGGR_ALLOC_TLAB_AVG\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_TLAB_AVG_DESC = \"AGGR_ALLOC_TLAB_AVG_DESC\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_TLAB_DURATION = \"AGGR_ALLOC_TLAB_DURATION\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_TLAB_DURATION_DESC = \"AGGR_ALLOC_TLAB_DURATION_DESC\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_TLAB_OUTSIDE_DURATION = \"AGGR_ALLOC_TLAB_OUTSIDE_DURATION\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_TLAB_OUTSIDE_DURATION_DESC = \"AGGR_ALLOC_TLAB_OUTSIDE_DURATION_DESC\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_INSIDE_TLAB_MAX = \"AGGR_ALLOC_INSIDE_TLAB_MAX\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_INSIDE_TLAB_MAX_DESC = \"AGGR_ALLOC_INSIDE_TLAB_MAX_DESC\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_INSIDE_TLAB_MIN = \"AGGR_ALLOC_INSIDE_TLAB_MIN\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_INSIDE_TLAB_MIN_DESC = \"AGGR_ALLOC_INSIDE_TLAB_MIN_DESC\"; \/\/$NON-NLS-1$\n@@ -53,0 +63,4 @@\n+\tpublic static final String AGGR_ALLOC_OUTSIDE_TLAB_MAX = \"AGGR_ALLOC_OUTSIDE_TLAB_MAX\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_OUTSIDE_TLAB_MAX_DESC = \"AGGR_ALLOC_OUTSIDE_TLAB_MAX_DESC\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_OUTSIDE_TLAB_MIN = \"AGGR_ALLOC_OUTSIDE_TLAB_MIN\"; \/\/$NON-NLS-1$\n+\tpublic static final String AGGR_ALLOC_OUTSIDE_TLAB_MIN_DESC = \"AGGR_ALLOC_OUTSIDE_TLAB_MIN_DESC\"; \/\/$NON-NLS-1$\n@@ -456,0 +470,1 @@\n+\tpublic static final String ATTR_TLAB_MAX_SIZE = \"ATTR_TLAB_MAX_SIZE\"; \/\/$NON-NLS-1$\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/jdk\/messages\/internal\/Messages.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -170,0 +170,1 @@\n+ATTR_TLAB_MAX_SIZE=Maximum TLAB Size\n@@ -366,1 +367,1 @@\n-AGGR_INSIDE_TLAB_COUNT=New TLAB Count\n+AGGR_INSIDE_TLAB_COUNT=TLAB Count\n@@ -424,0 +425,10 @@\n+AGGR_ALLOC_TLAB_AVG=Average TLAB Size\n+AGGR_ALLOC_TLAB_AVG_DESC=The average size of TLABs\n+AGGR_ALLOC_INSIDE_TLAB_MAX=Maximum TLAB Size\n+AGGR_ALLOC_INSIDE_TLAB_MAX_DESC=An estimate of the maximum size of allocations inside TLABs\n+AGGR_ALLOC_OUTSIDE_TLAB_MAX=Maximum Object Size\n+AGGR_ALLOC_OUTSIDE_TLAB_MAX_DESC=The maximum size of allocations outside TLABs\n+AGGR_ALLOC_INSIDE_TLAB_MIN=Minimum TLAB Size\n+AGGR_ALLOC_INSIDE_TLAB_MIN_DESC=An estimate of the minimum size of allocations inside TLABs\n+AGGR_ALLOC_OUTSIDE_TLAB_MIN=Minimum Object Size\n+AGGR_ALLOC_OUTSIDE_TLAB_MIN_DESC=The minimum size of allocations outside TLABs\n","filename":"core\/org.openjdk.jmc.flightrecorder\/src\/main\/resources\/org\/openjdk\/jmc\/flightrecorder\/jdk\/messages\/internal\/messages.properties","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}