{"files":[{"patch":"@@ -3,1 +3,1 @@\n-   Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+   Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,2 @@\n+\t\t<maven.checkstyle.version>3.2.2<\/maven.checkstyle.version>\n+\t\t<checkstyle.config.path>${project.basedir}\/..\/configuration\/checkstyle\/checkstyle.xml<\/checkstyle.config.path>\n@@ -324,0 +326,21 @@\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins<\/groupId>\n+\t\t\t\t<artifactId>maven-checkstyle-plugin<\/artifactId>\n+\t\t\t\t<version>${maven.checkstyle.version}<\/version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t<id>validate<\/id>\n+\t\t\t\t\t<phase>validate<\/phase>\n+\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t<configLocation>${checkstyle.config.path}<\/configLocation>\n+\t\t\t\t\t\t<includeTestSourceDirectory>true<\/includeTestSourceDirectory>\n+\t\t\t\t\t\t<encoding>UTF-8<\/encoding>\n+\t\t\t\t\t\t<consoleOutput>true<\/consoleOutput>\n+\t\t\t\t\t\t<failsOnError>true<\/failsOnError>\n+\t\t\t\t\t<\/configuration>\n+\t\t\t\t\t<goals>\n+\t\t\t\t\t\t<goal>check<\/goal>\n+\t\t\t\t\t<\/goals>\n+\t\t\t\t\t<\/execution>\n+\t\t\t\t<\/executions>\n+\t\t\t<\/plugin>\n","filename":"agent\/pom.xml","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import java.util.logging.Level;\n","filename":"agent\/src\/main\/java\/org\/openjdk\/jmc\/agent\/jmx\/AgentController.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-import java.io.BufferedWriter;\n@@ -54,1 +53,0 @@\n-import java.io.FileWriter;\n@@ -57,2 +55,0 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n@@ -62,2 +58,0 @@\n-import java.util.Comparator;\n-import java.util.HashSet;\n@@ -65,1 +59,0 @@\n-import java.util.Set;\n@@ -78,1 +71,0 @@\n-import org.eclipse.jface.action.ActionContributionItem;\n@@ -80,2 +72,0 @@\n-import org.eclipse.jface.action.IContributionItem;\n-import org.eclipse.jface.action.IMenuCreator;\n@@ -101,1 +91,0 @@\n-import org.eclipse.swt.widgets.Control;\n@@ -103,1 +92,0 @@\n-import org.eclipse.swt.widgets.Menu;\n@@ -114,1 +102,0 @@\n-import org.openjdk.jmc.common.item.IItemIterable;\n@@ -117,1 +104,0 @@\n-import org.openjdk.jmc.common.unit.ContentType;\n@@ -119,1 +105,0 @@\n-import org.openjdk.jmc.common.unit.UnitLookup;\n@@ -123,1 +108,0 @@\n-import org.openjdk.jmc.flightrecorder.jdk.JdkAttributes;\n","filename":"application\/org.openjdk.jmc.flightrecorder.flameview\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/flameview\/views\/FlameGraphView.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-import org.eclipse.swt.graphics.GC;\n","filename":"application\/org.openjdk.jmc.greychart.ui\/src\/main\/java\/org\/openjdk\/jmc\/greychart\/ui\/views\/ChartComposite.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,0 @@\n-import org.openjdk.jmc.ui.celleditors.Messages;\n-\n","filename":"application\/org.openjdk.jmc.ui.celleditors\/src\/main\/java\/org\/openjdk\/jmc\/ui\/celleditors\/DateCellEditor.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,0 @@\n-import org.openjdk.jmc.ui.accessibility.FocusTracker;\n","filename":"application\/org.openjdk.jmc.ui\/src\/main\/java\/org\/openjdk\/jmc\/ui\/dial\/DialViewer.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE module PUBLIC\n+        \"-\/\/Checkstyle\/\/DTD Checkstyle Configuration 1.3\/\/EN\"\n+        \"https:\/\/checkstyle.org\/dtds\/configuration_1_3.dtd\">\n+\n+<module name=\"Checker\">\n+    <property name=\"charset\" value=\"UTF-8\"\/>\n+\n+    <property name=\"severity\" value=\"error\"\/>\n+\n+    <property name=\"fileExtensions\" value=\"java\"\/>\n+\n+    <module name=\"TreeWalker\">\n+        <module name=\"AvoidStarImport\"\/>\n+        <module name=\"RedundantImport\"\/>\n+        <module name=\"UnusedImports\"\/>\n+    <\/module>\n+\n+<\/module>\n","filename":"configuration\/checkstyle\/checkstyle.xml","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -45,1 +45,9 @@\n-import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.*;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.BOOLEAN;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.BYTE;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.CHAR;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.DOUBLE;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.FLOAT;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.INT;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.LONG;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.SHORT;\n+import static org.openjdk.jmc.flightrecorder.writer.api.Types.Builtin.STRING;\n","filename":"core\/org.openjdk.jmc.flightrecorder.writer\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/TypesImpl.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -62,0 +62,2 @@\n+\t\t<maven.checkstyle.version>3.2.2<\/maven.checkstyle.version>\n+\t\t<checkstyle.config.path>${session.executionRootDirectory}\/..\/configuration\/checkstyle\/checkstyle.xml<\/checkstyle.config.path>\n@@ -328,0 +330,21 @@\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins<\/groupId>\n+\t\t\t\t<artifactId>maven-checkstyle-plugin<\/artifactId>\n+\t\t\t\t<version>${maven.checkstyle.version}<\/version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t<id>validate<\/id>\n+\t\t\t\t\t<phase>validate<\/phase>\n+\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t<configLocation>${checkstyle.config.path}<\/configLocation>\n+\t\t\t\t\t\t<includeTestSourceDirectory>true<\/includeTestSourceDirectory>\n+\t\t\t\t\t\t<encoding>UTF-8<\/encoding>\n+\t\t\t\t\t\t<consoleOutput>true<\/consoleOutput>\n+\t\t\t\t\t\t<failsOnError>true<\/failsOnError>\n+\t\t\t\t\t<\/configuration>\n+\t\t\t\t\t<goals>\n+\t\t\t\t\t\t<goal>check<\/goal>\n+\t\t\t\t\t<\/goals>\n+\t\t\t\t\t<\/execution>\n+\t\t\t\t<\/executions>\n+\t\t\t<\/plugin>\n","filename":"core\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,6 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/CompositeTypeImplTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,7 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/ConstantPoolsTest.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,4 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/ResolvableTypeTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,1 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/SelfTypeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,4 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/TypedFieldValueTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,4 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/TypedValueBuilderImplTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, Datadog, Inc. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Datadog, Inc. All rights reserved.\n@@ -36,1 +36,7 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n","filename":"core\/tests\/org.openjdk.jmc.flightrecorder.writer.test\/src\/main\/java\/org\/openjdk\/jmc\/flightrecorder\/writer\/TypedValueImplTest.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -84,0 +84,2 @@\n+\t\t<maven.checkstyle.version>3.2.2<\/maven.checkstyle.version>\n+\t\t<checkstyle.config.path>${session.executionRootDirectory}\/configuration\/checkstyle\/checkstyle.xml<\/checkstyle.config.path>\n@@ -392,0 +394,21 @@\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins<\/groupId>\n+\t\t\t\t<artifactId>maven-checkstyle-plugin<\/artifactId>\n+\t\t\t\t<version>${maven.checkstyle.version}<\/version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t<id>validate<\/id>\n+\t\t\t\t\t<phase>validate<\/phase>\n+\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t<configLocation>${checkstyle.config.path}<\/configLocation>\n+\t\t\t\t\t\t<includeTestSourceDirectory>true<\/includeTestSourceDirectory>\n+\t\t\t\t\t\t<encoding>UTF-8<\/encoding>\n+\t\t\t\t\t\t<consoleOutput>true<\/consoleOutput>\n+\t\t\t\t\t\t<failsOnError>true<\/failsOnError>\n+\t\t\t\t\t<\/configuration>\n+\t\t\t\t\t<goals>\n+\t\t\t\t\t\t<goal>check<\/goal>\n+\t\t\t\t\t<\/goals>\n+\t\t\t\t\t<\/execution>\n+\t\t\t\t<\/executions>\n+\t\t\t<\/plugin>\n","filename":"pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}