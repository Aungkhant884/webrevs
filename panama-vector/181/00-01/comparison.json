{"files":[{"patch":"@@ -667,1 +667,1 @@\n-                    v0.uOp(m, (i, a) -> (byte) reverseBytes(a));\n+                    v0.uOp(m, (i, a) -> (byte) a);\n@@ -1812,3 +1812,0 @@\n-    static int reverseBytes(byte a) {\n-        return a;\n-    }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -667,1 +667,1 @@\n-                    v0.uOp(m, (i, a) -> (short) reverseBytes(a));\n+                    v0.uOp(m, (i, a) -> (short) Short.reverseBytes(a));\n@@ -1813,3 +1813,0 @@\n-    static int reverseBytes(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -694,2 +694,0 @@\n-            case VECTOR_OP_REVERSE_BYTES: return (v0, m) ->\n-                    v0.uOp(m, (i, a) -> ($type$) $Boxtype$.reverseBytes(a));\n@@ -705,2 +703,0 @@\n-            case VECTOR_OP_REVERSE_BYTES: return (v0, m) ->\n-                    v0.uOp(m, (i, a) -> ($type$) reverseBytes(a));\n@@ -708,0 +704,9 @@\n+#if[BITWISE]\n+#if[byte]\n+            case VECTOR_OP_REVERSE_BYTES: return (v0, m) ->\n+                    v0.uOp(m, (i, a) -> (byte) a);\n+#else[byte]\n+            case VECTOR_OP_REVERSE_BYTES: return (v0, m) ->\n+                    v0.uOp(m, (i, a) -> ($type$) $Boxtype$.reverseBytes(a));\n+#end[byte]\n+#end[BITWISE]\n@@ -2099,11 +2104,0 @@\n-#if[!FP]\n-#if[!intOrLong]\n-    static int reverseBytes($type$ a) {\n-#if[short]\n-        return (short) ((a << 8) | (a >>> 8));\n-#else[short]\n-        return a;\n-#end[short]\n-    }\n-#end[!intOrLong]\n-#end[!FP]\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1227,4 +1227,0 @@\n-\n-    static byte REVERSE_BYTES_scalar(byte a) {\n-        return (byte) a;\n-    }\n@@ -5461,0 +5457,6 @@\n+\n+\n+\n+\n+\n+\n@@ -5462,1 +5464,1 @@\n-        return (byte)(REVERSE_BYTES_scalar(a));\n+        return (byte)(a);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1227,4 +1227,0 @@\n-\n-    static byte REVERSE_BYTES_scalar(byte a) {\n-        return (byte) a;\n-    }\n@@ -5461,0 +5457,6 @@\n+\n+\n+\n+\n+\n+\n@@ -5462,1 +5464,1 @@\n-        return (byte)(REVERSE_BYTES_scalar(a));\n+        return (byte)(a);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1227,4 +1227,0 @@\n-\n-    static byte REVERSE_BYTES_scalar(byte a) {\n-        return (byte) a;\n-    }\n@@ -5461,0 +5457,6 @@\n+\n+\n+\n+\n+\n+\n@@ -5462,1 +5464,1 @@\n-        return (byte)(REVERSE_BYTES_scalar(a));\n+        return (byte)(a);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1227,4 +1227,0 @@\n-\n-    static byte REVERSE_BYTES_scalar(byte a) {\n-        return (byte) a;\n-    }\n@@ -5461,0 +5457,6 @@\n+\n+\n+\n+\n+\n+\n@@ -5462,1 +5464,1 @@\n-        return (byte)(REVERSE_BYTES_scalar(a));\n+        return (byte)(a);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1232,4 +1232,0 @@\n-\n-    static byte REVERSE_BYTES_scalar(byte a) {\n-        return (byte) a;\n-    }\n@@ -5466,0 +5462,6 @@\n+\n+\n+\n+\n+\n+\n@@ -5467,1 +5469,1 @@\n-        return (byte)(REVERSE_BYTES_scalar(a));\n+        return (byte)(a);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4677,0 +4677,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4677,0 +4677,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4677,0 +4677,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4677,0 +4677,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4682,0 +4682,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4645,0 +4645,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4645,0 +4645,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4645,0 +4645,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4643,0 +4643,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4650,0 +4650,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1184,4 +1184,0 @@\n-\n-    static int REVERSE_BYTES_scalar(int a) {\n-        return Integer.reverseBytes(a);\n-    }\n@@ -5424,1 +5420,1 @@\n-        return (int)(REVERSE_BYTES_scalar(a));\n+        return (int)(Integer.reverseBytes(a));\n@@ -5465,0 +5461,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1184,4 +1184,0 @@\n-\n-    static int REVERSE_BYTES_scalar(int a) {\n-        return Integer.reverseBytes(a);\n-    }\n@@ -5424,1 +5420,1 @@\n-        return (int)(REVERSE_BYTES_scalar(a));\n+        return (int)(Integer.reverseBytes(a));\n@@ -5465,0 +5461,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1184,4 +1184,0 @@\n-\n-    static int REVERSE_BYTES_scalar(int a) {\n-        return Integer.reverseBytes(a);\n-    }\n@@ -5424,1 +5420,1 @@\n-        return (int)(REVERSE_BYTES_scalar(a));\n+        return (int)(Integer.reverseBytes(a));\n@@ -5465,0 +5461,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1184,4 +1184,0 @@\n-\n-    static int REVERSE_BYTES_scalar(int a) {\n-        return Integer.reverseBytes(a);\n-    }\n@@ -5424,1 +5420,1 @@\n-        return (int)(REVERSE_BYTES_scalar(a));\n+        return (int)(Integer.reverseBytes(a));\n@@ -5465,0 +5461,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1189,4 +1189,0 @@\n-\n-    static int REVERSE_BYTES_scalar(int a) {\n-        return Integer.reverseBytes(a);\n-    }\n@@ -5429,1 +5425,1 @@\n-        return (int)(REVERSE_BYTES_scalar(a));\n+        return (int)(Integer.reverseBytes(a));\n@@ -5470,0 +5466,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1206,4 +1206,0 @@\n-\n-    static long REVERSE_BYTES_scalar(long a) {\n-        return Long.reverseBytes(a);\n-    }\n@@ -5374,1 +5370,1 @@\n-        return (long)(REVERSE_BYTES_scalar(a));\n+        return (long)(Long.reverseBytes(a));\n@@ -5415,0 +5411,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1206,4 +1206,0 @@\n-\n-    static long REVERSE_BYTES_scalar(long a) {\n-        return Long.reverseBytes(a);\n-    }\n@@ -5374,1 +5370,1 @@\n-        return (long)(REVERSE_BYTES_scalar(a));\n+        return (long)(Long.reverseBytes(a));\n@@ -5415,0 +5411,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1206,4 +1206,0 @@\n-\n-    static long REVERSE_BYTES_scalar(long a) {\n-        return Long.reverseBytes(a);\n-    }\n@@ -5374,1 +5370,1 @@\n-        return (long)(REVERSE_BYTES_scalar(a));\n+        return (long)(Long.reverseBytes(a));\n@@ -5415,0 +5411,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1206,4 +1206,0 @@\n-\n-    static long REVERSE_BYTES_scalar(long a) {\n-        return Long.reverseBytes(a);\n-    }\n@@ -5374,1 +5370,1 @@\n-        return (long)(REVERSE_BYTES_scalar(a));\n+        return (long)(Long.reverseBytes(a));\n@@ -5415,0 +5411,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1211,4 +1211,0 @@\n-\n-    static long REVERSE_BYTES_scalar(long a) {\n-        return Long.reverseBytes(a);\n-    }\n@@ -5379,1 +5375,1 @@\n-        return (long)(REVERSE_BYTES_scalar(a));\n+        return (long)(Long.reverseBytes(a));\n@@ -5420,0 +5416,6 @@\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1218,4 +1218,0 @@\n-\n-    static short REVERSE_BYTES_scalar(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n@@ -5452,0 +5448,3 @@\n+\n+\n+\n@@ -5453,1 +5452,1 @@\n-        return (short)(REVERSE_BYTES_scalar(a));\n+        return (short)(Short.reverseBytes(a));\n@@ -5494,0 +5493,3 @@\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1218,4 +1218,0 @@\n-\n-    static short REVERSE_BYTES_scalar(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n@@ -5452,0 +5448,3 @@\n+\n+\n+\n@@ -5453,1 +5452,1 @@\n-        return (short)(REVERSE_BYTES_scalar(a));\n+        return (short)(Short.reverseBytes(a));\n@@ -5494,0 +5493,3 @@\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1218,4 +1218,0 @@\n-\n-    static short REVERSE_BYTES_scalar(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n@@ -5452,0 +5448,3 @@\n+\n+\n+\n@@ -5453,1 +5452,1 @@\n-        return (short)(REVERSE_BYTES_scalar(a));\n+        return (short)(Short.reverseBytes(a));\n@@ -5494,0 +5493,3 @@\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1218,4 +1218,0 @@\n-\n-    static short REVERSE_BYTES_scalar(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n@@ -5452,0 +5448,3 @@\n+\n+\n+\n@@ -5453,1 +5452,1 @@\n-        return (short)(REVERSE_BYTES_scalar(a));\n+        return (short)(Short.reverseBytes(a));\n@@ -5494,0 +5493,3 @@\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1223,4 +1223,0 @@\n-\n-    static short REVERSE_BYTES_scalar(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n@@ -5457,0 +5453,3 @@\n+\n+\n+\n@@ -5458,1 +5457,1 @@\n-        return (short)(REVERSE_BYTES_scalar(a));\n+        return (short)(Short.reverseBytes(a));\n@@ -5499,0 +5498,3 @@\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -558,1 +558,3 @@\n-gen_unary_alu_op \"REVERSE_BYTES\" \"REVERSE_BYTES_scalar(a)\" \"BITWISE\"\n+gen_unary_alu_op \"REVERSE_BYTES\" \"\\$Boxtype\\$.reverseBytes(a)\" \"intOrLong\"\n+gen_unary_alu_op \"REVERSE_BYTES\" \"\\$Boxtype\\$.reverseBytes(a)\" \"short\"\n+gen_unary_alu_op \"REVERSE_BYTES\" \"a\" \"byte\"\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,12 +191,0 @@\n-#end[intOrLong]\n-    }\n-\n-    static $type$ REVERSE_BYTES_scalar($type$ a) {\n-#if[intOrLong]\n-        return $Wideboxtype$.reverseBytes(a);\n-#else[intOrLong]\n-#if[short]\n-        return (short) ((a << 8) | (a >>> 8));\n-#else[short]\n-        return (byte) a;\n-#end[short]\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Perf-Scalar-header.template","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1500,12 +1500,0 @@\n-#end[intOrLong]\n-    }\n-\n-    static $type$ REVERSE_BYTES_scalar($type$ a) {\n-#if[intOrLong]\n-        return $Wideboxtype$.reverseBytes(a);\n-#else[intOrLong]\n-#if[short]\n-        return (short) ((a << 8) | (a >>> 8));\n-#else[short]\n-        return (byte) a;\n-#end[short]\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2203,0 +2203,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte128Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte256Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte512Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte64Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteMaxVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -147,4 +147,0 @@\n-    static byte REVERSE_BYTES_scalar(byte a) {\n-        return (byte) a;\n-    }\n-\n@@ -1830,0 +1826,4 @@\n+\n+\n+\n+\n@@ -1838,1 +1838,1 @@\n-                rs[i] = (byte)(REVERSE_BYTES_scalar(a));\n+                rs[i] = (byte)(a);\n@@ -1857,1 +1857,1 @@\n-                rs[i] = (m ? (byte)(REVERSE_BYTES_scalar(a)) : a);\n+                rs[i] = (m ? (byte)(a) : a);\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteScalar.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double128Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double256Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double512Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double64Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/DoubleMaxVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1269,0 +1269,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/DoubleScalar.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float128Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float256Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float512Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float64Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1625,0 +1625,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/FloatMaxVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1269,0 +1269,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/FloatScalar.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int128Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int256Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int512Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int64Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntMaxVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,4 +144,0 @@\n-    static int REVERSE_BYTES_scalar(int a) {\n-        return Integer.reverseBytes(a);\n-    }\n-\n@@ -1835,1 +1831,1 @@\n-                rs[i] = (int)(REVERSE_BYTES_scalar(a));\n+                rs[i] = (int)(Integer.reverseBytes(a));\n@@ -1854,1 +1850,1 @@\n-                rs[i] = (m ? (int)(REVERSE_BYTES_scalar(a)) : a);\n+                rs[i] = (m ? (int)(Integer.reverseBytes(a)) : a);\n@@ -1861,0 +1857,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntScalar.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long128Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long256Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long512Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long64Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2237,0 +2237,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongMaxVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,4 +144,0 @@\n-    static long REVERSE_BYTES_scalar(long a) {\n-        return Long.reverseBytes(a);\n-    }\n-\n@@ -1835,1 +1831,1 @@\n-                rs[i] = (long)(REVERSE_BYTES_scalar(a));\n+                rs[i] = (long)(Long.reverseBytes(a));\n@@ -1854,1 +1850,1 @@\n-                rs[i] = (m ? (long)(REVERSE_BYTES_scalar(a)) : a);\n+                rs[i] = (m ? (long)(Long.reverseBytes(a)) : a);\n@@ -1861,0 +1857,4 @@\n+\n+\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongScalar.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2203,0 +2203,2 @@\n+\n+\n@@ -2237,0 +2239,2 @@\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short128Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,2 @@\n+\n+\n@@ -2237,0 +2239,2 @@\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short256Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,2 @@\n+\n+\n@@ -2237,0 +2239,2 @@\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short512Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,2 @@\n+\n+\n@@ -2237,0 +2239,2 @@\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short64Vector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2203,0 +2203,2 @@\n+\n+\n@@ -2237,0 +2239,2 @@\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ShortMaxVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -148,4 +148,0 @@\n-    static short REVERSE_BYTES_scalar(short a) {\n-        return (short) ((a << 8) | (a >>> 8));\n-    }\n-\n@@ -1831,0 +1827,2 @@\n+\n+\n@@ -1839,1 +1837,1 @@\n-                rs[i] = (short)(REVERSE_BYTES_scalar(a));\n+                rs[i] = (short)(Short.reverseBytes(a));\n@@ -1858,1 +1856,1 @@\n-                rs[i] = (m ? (short)(REVERSE_BYTES_scalar(a)) : a);\n+                rs[i] = (m ? (short)(Short.reverseBytes(a)) : a);\n@@ -1865,0 +1863,2 @@\n+\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ShortScalar.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}