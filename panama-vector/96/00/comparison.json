{"files":[{"patch":"@@ -279,1 +279,1 @@\n-        return (Byte128Vector) super.lanewiseTemplate(op, Byte128Mask.class, m);  \/\/ specialize\n+        return (Byte128Vector) super.lanewiseTemplate(op, Byte128Mask.class, (Byte128Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Byte128Vector) super.lanewiseTemplate(op, Byte128Mask.class, v, m);  \/\/ specialize\n+        return (Byte128Vector) super.lanewiseTemplate(op, Byte128Mask.class, v, (Byte128Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Byte128Vector) super.lanewiseTemplate(op, Byte128Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Byte128Vector) super.lanewiseTemplate(op, Byte128Mask.class, v1, v2, (Byte128Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Byte128Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Byte128Mask.class, (Byte128Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Byte128Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Byte128Mask.class, (Byte128Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Byte256Vector) super.lanewiseTemplate(op, Byte256Mask.class, m);  \/\/ specialize\n+        return (Byte256Vector) super.lanewiseTemplate(op, Byte256Mask.class, (Byte256Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Byte256Vector) super.lanewiseTemplate(op, Byte256Mask.class, v, m);  \/\/ specialize\n+        return (Byte256Vector) super.lanewiseTemplate(op, Byte256Mask.class, v, (Byte256Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Byte256Vector) super.lanewiseTemplate(op, Byte256Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Byte256Vector) super.lanewiseTemplate(op, Byte256Mask.class, v1, v2, (Byte256Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Byte256Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Byte256Mask.class, (Byte256Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Byte256Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Byte256Mask.class, (Byte256Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Byte512Vector) super.lanewiseTemplate(op, Byte512Mask.class, m);  \/\/ specialize\n+        return (Byte512Vector) super.lanewiseTemplate(op, Byte512Mask.class, (Byte512Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Byte512Vector) super.lanewiseTemplate(op, Byte512Mask.class, v, m);  \/\/ specialize\n+        return (Byte512Vector) super.lanewiseTemplate(op, Byte512Mask.class, v, (Byte512Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Byte512Vector) super.lanewiseTemplate(op, Byte512Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Byte512Vector) super.lanewiseTemplate(op, Byte512Mask.class, v1, v2, (Byte512Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Byte512Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Byte512Mask.class, (Byte512Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Byte512Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Byte512Mask.class, (Byte512Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Byte64Vector) super.lanewiseTemplate(op, Byte64Mask.class, m);  \/\/ specialize\n+        return (Byte64Vector) super.lanewiseTemplate(op, Byte64Mask.class, (Byte64Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Byte64Vector) super.lanewiseTemplate(op, Byte64Mask.class, v, m);  \/\/ specialize\n+        return (Byte64Vector) super.lanewiseTemplate(op, Byte64Mask.class, v, (Byte64Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Byte64Vector) super.lanewiseTemplate(op, Byte64Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Byte64Vector) super.lanewiseTemplate(op, Byte64Mask.class, v1, v2, (Byte64Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Byte64Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Byte64Mask.class, (Byte64Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Byte64Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Byte64Mask.class, (Byte64Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (ByteMaxVector) super.lanewiseTemplate(op, ByteMaxMask.class, m);  \/\/ specialize\n+        return (ByteMaxVector) super.lanewiseTemplate(op, ByteMaxMask.class, (ByteMaxMask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (ByteMaxVector) super.lanewiseTemplate(op, ByteMaxMask.class, v, m);  \/\/ specialize\n+        return (ByteMaxVector) super.lanewiseTemplate(op, ByteMaxMask.class, v, (ByteMaxMask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (ByteMaxVector) super.lanewiseTemplate(op, ByteMaxMask.class, v1, v2, m);  \/\/ specialize\n+        return (ByteMaxVector) super.lanewiseTemplate(op, ByteMaxMask.class, v1, v2, (ByteMaxMask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, ByteMaxMask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, ByteMaxMask.class, (ByteMaxMask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, ByteMaxMask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, ByteMaxMask.class, (ByteMaxMask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Double128Vector) super.lanewiseTemplate(op, Double128Mask.class, m);  \/\/ specialize\n+        return (Double128Vector) super.lanewiseTemplate(op, Double128Mask.class, (Double128Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Double128Vector) super.lanewiseTemplate(op, Double128Mask.class, v, m);  \/\/ specialize\n+        return (Double128Vector) super.lanewiseTemplate(op, Double128Mask.class, v, (Double128Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Double128Vector) super.lanewiseTemplate(op, Double128Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Double128Vector) super.lanewiseTemplate(op, Double128Mask.class, v1, v2, (Double128Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Double128Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Double128Mask.class, (Double128Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Double128Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Double128Mask.class, (Double128Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Double256Vector) super.lanewiseTemplate(op, Double256Mask.class, m);  \/\/ specialize\n+        return (Double256Vector) super.lanewiseTemplate(op, Double256Mask.class, (Double256Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Double256Vector) super.lanewiseTemplate(op, Double256Mask.class, v, m);  \/\/ specialize\n+        return (Double256Vector) super.lanewiseTemplate(op, Double256Mask.class, v, (Double256Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Double256Vector) super.lanewiseTemplate(op, Double256Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Double256Vector) super.lanewiseTemplate(op, Double256Mask.class, v1, v2, (Double256Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Double256Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Double256Mask.class, (Double256Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Double256Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Double256Mask.class, (Double256Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Double512Vector) super.lanewiseTemplate(op, Double512Mask.class, m);  \/\/ specialize\n+        return (Double512Vector) super.lanewiseTemplate(op, Double512Mask.class, (Double512Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Double512Vector) super.lanewiseTemplate(op, Double512Mask.class, v, m);  \/\/ specialize\n+        return (Double512Vector) super.lanewiseTemplate(op, Double512Mask.class, v, (Double512Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Double512Vector) super.lanewiseTemplate(op, Double512Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Double512Vector) super.lanewiseTemplate(op, Double512Mask.class, v1, v2, (Double512Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Double512Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Double512Mask.class, (Double512Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Double512Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Double512Mask.class, (Double512Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Double64Vector) super.lanewiseTemplate(op, Double64Mask.class, m);  \/\/ specialize\n+        return (Double64Vector) super.lanewiseTemplate(op, Double64Mask.class, (Double64Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Double64Vector) super.lanewiseTemplate(op, Double64Mask.class, v, m);  \/\/ specialize\n+        return (Double64Vector) super.lanewiseTemplate(op, Double64Mask.class, v, (Double64Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Double64Vector) super.lanewiseTemplate(op, Double64Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Double64Vector) super.lanewiseTemplate(op, Double64Mask.class, v1, v2, (Double64Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Double64Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Double64Mask.class, (Double64Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Double64Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Double64Mask.class, (Double64Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (DoubleMaxVector) super.lanewiseTemplate(op, DoubleMaxMask.class, m);  \/\/ specialize\n+        return (DoubleMaxVector) super.lanewiseTemplate(op, DoubleMaxMask.class, (DoubleMaxMask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (DoubleMaxVector) super.lanewiseTemplate(op, DoubleMaxMask.class, v, m);  \/\/ specialize\n+        return (DoubleMaxVector) super.lanewiseTemplate(op, DoubleMaxMask.class, v, (DoubleMaxMask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (DoubleMaxVector) super.lanewiseTemplate(op, DoubleMaxMask.class, v1, v2, m);  \/\/ specialize\n+        return (DoubleMaxVector) super.lanewiseTemplate(op, DoubleMaxMask.class, v1, v2, (DoubleMaxMask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, DoubleMaxMask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, DoubleMaxMask.class, (DoubleMaxMask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, DoubleMaxMask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, DoubleMaxMask.class, (DoubleMaxMask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Float128Vector) super.lanewiseTemplate(op, Float128Mask.class, m);  \/\/ specialize\n+        return (Float128Vector) super.lanewiseTemplate(op, Float128Mask.class, (Float128Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Float128Vector) super.lanewiseTemplate(op, Float128Mask.class, v, m);  \/\/ specialize\n+        return (Float128Vector) super.lanewiseTemplate(op, Float128Mask.class, v, (Float128Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Float128Vector) super.lanewiseTemplate(op, Float128Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Float128Vector) super.lanewiseTemplate(op, Float128Mask.class, v1, v2, (Float128Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Float128Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Float128Mask.class, (Float128Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Float128Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Float128Mask.class, (Float128Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Float256Vector) super.lanewiseTemplate(op, Float256Mask.class, m);  \/\/ specialize\n+        return (Float256Vector) super.lanewiseTemplate(op, Float256Mask.class, (Float256Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Float256Vector) super.lanewiseTemplate(op, Float256Mask.class, v, m);  \/\/ specialize\n+        return (Float256Vector) super.lanewiseTemplate(op, Float256Mask.class, v, (Float256Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Float256Vector) super.lanewiseTemplate(op, Float256Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Float256Vector) super.lanewiseTemplate(op, Float256Mask.class, v1, v2, (Float256Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Float256Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Float256Mask.class, (Float256Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Float256Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Float256Mask.class, (Float256Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Float512Vector) super.lanewiseTemplate(op, Float512Mask.class, m);  \/\/ specialize\n+        return (Float512Vector) super.lanewiseTemplate(op, Float512Mask.class, (Float512Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Float512Vector) super.lanewiseTemplate(op, Float512Mask.class, v, m);  \/\/ specialize\n+        return (Float512Vector) super.lanewiseTemplate(op, Float512Mask.class, v, (Float512Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Float512Vector) super.lanewiseTemplate(op, Float512Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Float512Vector) super.lanewiseTemplate(op, Float512Mask.class, v1, v2, (Float512Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Float512Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Float512Mask.class, (Float512Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Float512Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Float512Mask.class, (Float512Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Float64Vector) super.lanewiseTemplate(op, Float64Mask.class, m);  \/\/ specialize\n+        return (Float64Vector) super.lanewiseTemplate(op, Float64Mask.class, (Float64Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Float64Vector) super.lanewiseTemplate(op, Float64Mask.class, v, m);  \/\/ specialize\n+        return (Float64Vector) super.lanewiseTemplate(op, Float64Mask.class, v, (Float64Mask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (Float64Vector) super.lanewiseTemplate(op, Float64Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Float64Vector) super.lanewiseTemplate(op, Float64Mask.class, v1, v2, (Float64Mask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, Float64Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Float64Mask.class, (Float64Mask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, Float64Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Float64Mask.class, (Float64Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (FloatMaxVector) super.lanewiseTemplate(op, FloatMaxMask.class, m);  \/\/ specialize\n+        return (FloatMaxVector) super.lanewiseTemplate(op, FloatMaxMask.class, (FloatMaxMask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (FloatMaxVector) super.lanewiseTemplate(op, FloatMaxMask.class, v, m);  \/\/ specialize\n+        return (FloatMaxVector) super.lanewiseTemplate(op, FloatMaxMask.class, v, (FloatMaxMask) m);  \/\/ specialize\n@@ -309,1 +309,1 @@\n-        return (FloatMaxVector) super.lanewiseTemplate(op, FloatMaxMask.class, v1, v2, m);  \/\/ specialize\n+        return (FloatMaxVector) super.lanewiseTemplate(op, FloatMaxMask.class, v1, v2, (FloatMaxMask) m);  \/\/ specialize\n@@ -331,1 +331,1 @@\n-        return super.reduceLanesTemplate(op, FloatMaxMask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, FloatMaxMask.class, (FloatMaxMask) m);  \/\/ specialized\n@@ -344,1 +344,1 @@\n-        return (long) super.reduceLanesTemplate(op, FloatMaxMask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, FloatMaxMask.class, (FloatMaxMask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Int128Vector) super.lanewiseTemplate(op, Int128Mask.class, m);  \/\/ specialize\n+        return (Int128Vector) super.lanewiseTemplate(op, Int128Mask.class, (Int128Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Int128Vector) super.lanewiseTemplate(op, Int128Mask.class, v, m);  \/\/ specialize\n+        return (Int128Vector) super.lanewiseTemplate(op, Int128Mask.class, v, (Int128Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Int128Vector) super.lanewiseTemplate(op, Int128Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Int128Vector) super.lanewiseTemplate(op, Int128Mask.class, v1, v2, (Int128Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Int128Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Int128Mask.class, (Int128Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Int128Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Int128Mask.class, (Int128Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Int256Vector) super.lanewiseTemplate(op, Int256Mask.class, m);  \/\/ specialize\n+        return (Int256Vector) super.lanewiseTemplate(op, Int256Mask.class, (Int256Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Int256Vector) super.lanewiseTemplate(op, Int256Mask.class, v, m);  \/\/ specialize\n+        return (Int256Vector) super.lanewiseTemplate(op, Int256Mask.class, v, (Int256Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Int256Vector) super.lanewiseTemplate(op, Int256Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Int256Vector) super.lanewiseTemplate(op, Int256Mask.class, v1, v2, (Int256Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Int256Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Int256Mask.class, (Int256Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Int256Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Int256Mask.class, (Int256Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Int512Vector) super.lanewiseTemplate(op, Int512Mask.class, m);  \/\/ specialize\n+        return (Int512Vector) super.lanewiseTemplate(op, Int512Mask.class, (Int512Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Int512Vector) super.lanewiseTemplate(op, Int512Mask.class, v, m);  \/\/ specialize\n+        return (Int512Vector) super.lanewiseTemplate(op, Int512Mask.class, v, (Int512Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Int512Vector) super.lanewiseTemplate(op, Int512Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Int512Vector) super.lanewiseTemplate(op, Int512Mask.class, v1, v2, (Int512Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Int512Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Int512Mask.class, (Int512Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Int512Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Int512Mask.class, (Int512Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Int64Vector) super.lanewiseTemplate(op, Int64Mask.class, m);  \/\/ specialize\n+        return (Int64Vector) super.lanewiseTemplate(op, Int64Mask.class, (Int64Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Int64Vector) super.lanewiseTemplate(op, Int64Mask.class, v, m);  \/\/ specialize\n+        return (Int64Vector) super.lanewiseTemplate(op, Int64Mask.class, v, (Int64Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Int64Vector) super.lanewiseTemplate(op, Int64Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Int64Vector) super.lanewiseTemplate(op, Int64Mask.class, v1, v2, (Int64Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Int64Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Int64Mask.class, (Int64Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Int64Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Int64Mask.class, (Int64Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (IntMaxVector) super.lanewiseTemplate(op, IntMaxMask.class, m);  \/\/ specialize\n+        return (IntMaxVector) super.lanewiseTemplate(op, IntMaxMask.class, (IntMaxMask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (IntMaxVector) super.lanewiseTemplate(op, IntMaxMask.class, v, m);  \/\/ specialize\n+        return (IntMaxVector) super.lanewiseTemplate(op, IntMaxMask.class, v, (IntMaxMask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (IntMaxVector) super.lanewiseTemplate(op, IntMaxMask.class, v1, v2, m);  \/\/ specialize\n+        return (IntMaxVector) super.lanewiseTemplate(op, IntMaxMask.class, v1, v2, (IntMaxMask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, IntMaxMask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, IntMaxMask.class, (IntMaxMask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, IntMaxMask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, IntMaxMask.class, (IntMaxMask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-        return (Long128Vector) super.lanewiseTemplate(op, Long128Mask.class, m);  \/\/ specialize\n+        return (Long128Vector) super.lanewiseTemplate(op, Long128Mask.class, (Long128Mask) m);  \/\/ specialize\n@@ -286,1 +286,1 @@\n-        return (Long128Vector) super.lanewiseTemplate(op, Long128Mask.class, v, m);  \/\/ specialize\n+        return (Long128Vector) super.lanewiseTemplate(op, Long128Mask.class, v, (Long128Mask) m);  \/\/ specialize\n@@ -310,1 +310,1 @@\n-        return (Long128Vector) super.lanewiseTemplate(op, Long128Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Long128Vector) super.lanewiseTemplate(op, Long128Mask.class, v1, v2, (Long128Mask) m);  \/\/ specialize\n@@ -332,1 +332,1 @@\n-        return super.reduceLanesTemplate(op, Long128Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Long128Mask.class, (Long128Mask) m);  \/\/ specialized\n@@ -345,1 +345,1 @@\n-        return (long) super.reduceLanesTemplate(op, Long128Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Long128Mask.class, (Long128Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-        return (Long256Vector) super.lanewiseTemplate(op, Long256Mask.class, m);  \/\/ specialize\n+        return (Long256Vector) super.lanewiseTemplate(op, Long256Mask.class, (Long256Mask) m);  \/\/ specialize\n@@ -286,1 +286,1 @@\n-        return (Long256Vector) super.lanewiseTemplate(op, Long256Mask.class, v, m);  \/\/ specialize\n+        return (Long256Vector) super.lanewiseTemplate(op, Long256Mask.class, v, (Long256Mask) m);  \/\/ specialize\n@@ -310,1 +310,1 @@\n-        return (Long256Vector) super.lanewiseTemplate(op, Long256Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Long256Vector) super.lanewiseTemplate(op, Long256Mask.class, v1, v2, (Long256Mask) m);  \/\/ specialize\n@@ -332,1 +332,1 @@\n-        return super.reduceLanesTemplate(op, Long256Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Long256Mask.class, (Long256Mask) m);  \/\/ specialized\n@@ -345,1 +345,1 @@\n-        return (long) super.reduceLanesTemplate(op, Long256Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Long256Mask.class, (Long256Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-        return (Long512Vector) super.lanewiseTemplate(op, Long512Mask.class, m);  \/\/ specialize\n+        return (Long512Vector) super.lanewiseTemplate(op, Long512Mask.class, (Long512Mask) m);  \/\/ specialize\n@@ -286,1 +286,1 @@\n-        return (Long512Vector) super.lanewiseTemplate(op, Long512Mask.class, v, m);  \/\/ specialize\n+        return (Long512Vector) super.lanewiseTemplate(op, Long512Mask.class, v, (Long512Mask) m);  \/\/ specialize\n@@ -310,1 +310,1 @@\n-        return (Long512Vector) super.lanewiseTemplate(op, Long512Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Long512Vector) super.lanewiseTemplate(op, Long512Mask.class, v1, v2, (Long512Mask) m);  \/\/ specialize\n@@ -332,1 +332,1 @@\n-        return super.reduceLanesTemplate(op, Long512Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Long512Mask.class, (Long512Mask) m);  \/\/ specialized\n@@ -345,1 +345,1 @@\n-        return (long) super.reduceLanesTemplate(op, Long512Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Long512Mask.class, (Long512Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-        return (Long64Vector) super.lanewiseTemplate(op, Long64Mask.class, m);  \/\/ specialize\n+        return (Long64Vector) super.lanewiseTemplate(op, Long64Mask.class, (Long64Mask) m);  \/\/ specialize\n@@ -286,1 +286,1 @@\n-        return (Long64Vector) super.lanewiseTemplate(op, Long64Mask.class, v, m);  \/\/ specialize\n+        return (Long64Vector) super.lanewiseTemplate(op, Long64Mask.class, v, (Long64Mask) m);  \/\/ specialize\n@@ -310,1 +310,1 @@\n-        return (Long64Vector) super.lanewiseTemplate(op, Long64Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Long64Vector) super.lanewiseTemplate(op, Long64Mask.class, v1, v2, (Long64Mask) m);  \/\/ specialize\n@@ -332,1 +332,1 @@\n-        return super.reduceLanesTemplate(op, Long64Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Long64Mask.class, (Long64Mask) m);  \/\/ specialized\n@@ -345,1 +345,1 @@\n-        return (long) super.reduceLanesTemplate(op, Long64Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Long64Mask.class, (Long64Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-        return (LongMaxVector) super.lanewiseTemplate(op, LongMaxMask.class, m);  \/\/ specialize\n+        return (LongMaxVector) super.lanewiseTemplate(op, LongMaxMask.class, (LongMaxMask) m);  \/\/ specialize\n@@ -286,1 +286,1 @@\n-        return (LongMaxVector) super.lanewiseTemplate(op, LongMaxMask.class, v, m);  \/\/ specialize\n+        return (LongMaxVector) super.lanewiseTemplate(op, LongMaxMask.class, v, (LongMaxMask) m);  \/\/ specialize\n@@ -310,1 +310,1 @@\n-        return (LongMaxVector) super.lanewiseTemplate(op, LongMaxMask.class, v1, v2, m);  \/\/ specialize\n+        return (LongMaxVector) super.lanewiseTemplate(op, LongMaxMask.class, v1, v2, (LongMaxMask) m);  \/\/ specialize\n@@ -332,1 +332,1 @@\n-        return super.reduceLanesTemplate(op, LongMaxMask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, LongMaxMask.class, (LongMaxMask) m);  \/\/ specialized\n@@ -345,1 +345,1 @@\n-        return (long) super.reduceLanesTemplate(op, LongMaxMask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, LongMaxMask.class, (LongMaxMask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Short128Vector) super.lanewiseTemplate(op, Short128Mask.class, m);  \/\/ specialize\n+        return (Short128Vector) super.lanewiseTemplate(op, Short128Mask.class, (Short128Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Short128Vector) super.lanewiseTemplate(op, Short128Mask.class, v, m);  \/\/ specialize\n+        return (Short128Vector) super.lanewiseTemplate(op, Short128Mask.class, v, (Short128Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Short128Vector) super.lanewiseTemplate(op, Short128Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Short128Vector) super.lanewiseTemplate(op, Short128Mask.class, v1, v2, (Short128Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Short128Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Short128Mask.class, (Short128Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Short128Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Short128Mask.class, (Short128Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Short256Vector) super.lanewiseTemplate(op, Short256Mask.class, m);  \/\/ specialize\n+        return (Short256Vector) super.lanewiseTemplate(op, Short256Mask.class, (Short256Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Short256Vector) super.lanewiseTemplate(op, Short256Mask.class, v, m);  \/\/ specialize\n+        return (Short256Vector) super.lanewiseTemplate(op, Short256Mask.class, v, (Short256Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Short256Vector) super.lanewiseTemplate(op, Short256Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Short256Vector) super.lanewiseTemplate(op, Short256Mask.class, v1, v2, (Short256Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Short256Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Short256Mask.class, (Short256Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Short256Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Short256Mask.class, (Short256Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Short512Vector) super.lanewiseTemplate(op, Short512Mask.class, m);  \/\/ specialize\n+        return (Short512Vector) super.lanewiseTemplate(op, Short512Mask.class, (Short512Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Short512Vector) super.lanewiseTemplate(op, Short512Mask.class, v, m);  \/\/ specialize\n+        return (Short512Vector) super.lanewiseTemplate(op, Short512Mask.class, v, (Short512Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Short512Vector) super.lanewiseTemplate(op, Short512Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Short512Vector) super.lanewiseTemplate(op, Short512Mask.class, v1, v2, (Short512Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Short512Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Short512Mask.class, (Short512Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Short512Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Short512Mask.class, (Short512Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (Short64Vector) super.lanewiseTemplate(op, Short64Mask.class, m);  \/\/ specialize\n+        return (Short64Vector) super.lanewiseTemplate(op, Short64Mask.class, (Short64Mask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (Short64Vector) super.lanewiseTemplate(op, Short64Mask.class, v, m);  \/\/ specialize\n+        return (Short64Vector) super.lanewiseTemplate(op, Short64Mask.class, v, (Short64Mask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (Short64Vector) super.lanewiseTemplate(op, Short64Mask.class, v1, v2, m);  \/\/ specialize\n+        return (Short64Vector) super.lanewiseTemplate(op, Short64Mask.class, v1, v2, (Short64Mask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, Short64Mask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, Short64Mask.class, (Short64Mask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, Short64Mask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, Short64Mask.class, (Short64Mask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (ShortMaxVector) super.lanewiseTemplate(op, ShortMaxMask.class, m);  \/\/ specialize\n+        return (ShortMaxVector) super.lanewiseTemplate(op, ShortMaxMask.class, (ShortMaxMask) m);  \/\/ specialize\n@@ -291,1 +291,1 @@\n-        return (ShortMaxVector) super.lanewiseTemplate(op, ShortMaxMask.class, v, m);  \/\/ specialize\n+        return (ShortMaxVector) super.lanewiseTemplate(op, ShortMaxMask.class, v, (ShortMaxMask) m);  \/\/ specialize\n@@ -315,1 +315,1 @@\n-        return (ShortMaxVector) super.lanewiseTemplate(op, ShortMaxMask.class, v1, v2, m);  \/\/ specialize\n+        return (ShortMaxVector) super.lanewiseTemplate(op, ShortMaxMask.class, v1, v2, (ShortMaxMask) m);  \/\/ specialize\n@@ -337,1 +337,1 @@\n-        return super.reduceLanesTemplate(op, ShortMaxMask.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, ShortMaxMask.class, (ShortMaxMask) m);  \/\/ specialized\n@@ -350,1 +350,1 @@\n-        return (long) super.reduceLanesTemplate(op, ShortMaxMask.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, ShortMaxMask.class, (ShortMaxMask) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-        return ($vectortype$) super.lanewiseTemplate(op, $masktype$.class, m);  \/\/ specialize\n+        return ($vectortype$) super.lanewiseTemplate(op, $masktype$.class, ($masktype$) m);  \/\/ specialize\n@@ -293,1 +293,1 @@\n-        return ($vectortype$) super.lanewiseTemplate(op, $masktype$.class, v, m);  \/\/ specialize\n+        return ($vectortype$) super.lanewiseTemplate(op, $masktype$.class, v, ($masktype$) m);  \/\/ specialize\n@@ -319,1 +319,1 @@\n-        return ($vectortype$) super.lanewiseTemplate(op, $masktype$.class, v1, v2, m);  \/\/ specialize\n+        return ($vectortype$) super.lanewiseTemplate(op, $masktype$.class, v1, v2, ($masktype$) m);  \/\/ specialize\n@@ -341,1 +341,1 @@\n-        return super.reduceLanesTemplate(op, $masktype$.class, m);  \/\/ specialized\n+        return super.reduceLanesTemplate(op, $masktype$.class, ($masktype$) m);  \/\/ specialized\n@@ -354,1 +354,1 @@\n-        return (long) super.reduceLanesTemplate(op, $masktype$.class, m);  \/\/ specialized\n+        return (long) super.reduceLanesTemplate(op, $masktype$.class, ($masktype$) m);  \/\/ specialized\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}