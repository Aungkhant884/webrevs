{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/BooleanArrayCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import jdk.incubator.vector.VectorOperators;\n@@ -32,1 +33,0 @@\n-import jdk.incubator.vector.VectorOperators;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/ValueRangeCheckAndCastL2I.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import org.openjdk.jmh.annotations.*;\n-\n@@ -31,0 +29,1 @@\n+import org.openjdk.jmh.annotations.*;\n@@ -120,1 +119,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_128;\n@@ -122,7 +120,7 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        xSquareV = FloatVector.zero(SPECIES);\n-        ySquareV = FloatVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_128);\n+        xSquareV = FloatVector.zero(SPECIES_FLOAT_128);\n+        ySquareV = FloatVector.zero(SPECIES_FLOAT_128);;\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_128.length()) <= queryVectorFloat.length; i += SPECIES_FLOAT_128.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_128, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_128, inputVectorFloat, i);\n@@ -144,1 +142,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_256;\n@@ -146,7 +143,7 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        xSquareV = FloatVector.zero(SPECIES);\n-        ySquareV = FloatVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_256);\n+        xSquareV = FloatVector.zero(SPECIES_FLOAT_256);\n+        ySquareV = FloatVector.zero(SPECIES_FLOAT_256);;\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_256.length()) <= queryVectorFloat.length; i += SPECIES_FLOAT_256.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_256, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_256, inputVectorFloat, i);\n@@ -168,1 +165,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_MAX;\n@@ -170,7 +166,7 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        xSquareV = FloatVector.zero(SPECIES);\n-        ySquareV = FloatVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_MAX);\n+        xSquareV = FloatVector.zero(SPECIES_FLOAT_MAX);\n+        ySquareV = FloatVector.zero(SPECIES_FLOAT_MAX);;\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_MAX.length()) <= queryVectorFloat.length; i += SPECIES_FLOAT_MAX.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_MAX, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_MAX, inputVectorFloat, i);\n@@ -209,1 +205,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_128;\n@@ -211,7 +206,7 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        xSquareV = FloatVector.zero(SPECIES);\n-        ySquareV = FloatVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_128);\n+        xSquareV = FloatVector.zero(SPECIES_FLOAT_128);\n+        ySquareV = FloatVector.zero(SPECIES_FLOAT_128);;\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_128.length()) <= queryVectorFloat.length; i += SPECIES_FLOAT_128.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_128, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_128, inputVectorFloat, i);\n@@ -236,1 +231,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_256;\n@@ -238,7 +232,7 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        xSquareV = FloatVector.zero(SPECIES);\n-        ySquareV = FloatVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_256);\n+        xSquareV = FloatVector.zero(SPECIES_FLOAT_256);\n+        ySquareV = FloatVector.zero(SPECIES_FLOAT_256);;\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_256.length()) <= queryVectorFloat.length; i += SPECIES_FLOAT_256.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_256, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_256, inputVectorFloat, i);\n@@ -263,1 +257,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_MAX;\n@@ -265,7 +258,7 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        xSquareV = FloatVector.zero(SPECIES);\n-        ySquareV = FloatVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_MAX);\n+        xSquareV = FloatVector.zero(SPECIES_FLOAT_MAX);\n+        ySquareV = FloatVector.zero(SPECIES_FLOAT_MAX);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_MAX.length()) <= queryVectorFloat.length; i += SPECIES_FLOAT_MAX.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_MAX, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_MAX, inputVectorFloat, i);\n@@ -302,1 +295,0 @@\n-        VectorSpecies<Double> SPECIES = SPECIES_DOUBLE_128;\n@@ -304,7 +296,7 @@\n-        vecSum = DoubleVector.zero(SPECIES);\n-        xSquareV = DoubleVector.zero(SPECIES);\n-        ySquareV = DoubleVector.zero(SPECIES);\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorDouble.length; i += SPECIES.length()) {\n-            vecX = DoubleVector.fromArray(SPECIES, queryVectorDouble, i);\n-            vecY = DoubleVector.fromArray(SPECIES, inputVectorDouble, i);\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        xSquareV = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        ySquareV = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_128.length()) <= queryVectorDouble.length; i += SPECIES_DOUBLE_128.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_128, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_128, inputVectorDouble, i);\n@@ -326,1 +318,0 @@\n-        VectorSpecies<Double> SPECIES = SPECIES_DOUBLE_256;\n@@ -328,7 +319,7 @@\n-        vecSum = DoubleVector.zero(SPECIES);\n-        xSquareV = DoubleVector.zero(SPECIES);\n-        ySquareV = DoubleVector.zero(SPECIES);\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorDouble.length; i += SPECIES.length()) {\n-            vecX = DoubleVector.fromArray(SPECIES, queryVectorDouble, i);\n-            vecY = DoubleVector.fromArray(SPECIES, inputVectorDouble, i);\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        xSquareV = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        ySquareV = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_256.length()) <= queryVectorDouble.length; i += SPECIES_DOUBLE_256.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_256, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_256, inputVectorDouble, i);\n@@ -350,1 +341,0 @@\n-        VectorSpecies<Double> SPECIES = SPECIES_DOUBLE_MAX;\n@@ -352,7 +342,7 @@\n-        vecSum = DoubleVector.zero(SPECIES);\n-        xSquareV = DoubleVector.zero(SPECIES);\n-        ySquareV = DoubleVector.zero(SPECIES);\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorDouble.length; i += SPECIES.length()) {\n-            vecX = DoubleVector.fromArray(SPECIES, queryVectorDouble, i);\n-            vecY = DoubleVector.fromArray(SPECIES, inputVectorDouble, i);\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        xSquareV = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        ySquareV = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_MAX.length()) <= queryVectorDouble.length; i += SPECIES_DOUBLE_MAX.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_MAX, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_MAX, inputVectorDouble, i);\n@@ -388,1 +378,0 @@\n-        VectorSpecies<Double> SPECIES = SPECIES_DOUBLE_128;\n@@ -390,7 +379,7 @@\n-        vecSum = DoubleVector.zero(SPECIES);\n-        xSquareV = DoubleVector.zero(SPECIES);\n-        ySquareV = DoubleVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorDouble.length; i += SPECIES.length()) {\n-            vecX = DoubleVector.fromArray(SPECIES, queryVectorDouble, i);\n-            vecY = DoubleVector.fromArray(SPECIES, inputVectorDouble, i);\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        xSquareV = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        ySquareV = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_128.length()) <= queryVectorDouble.length; i += SPECIES_DOUBLE_128.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_128, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_128, inputVectorDouble, i);\n@@ -415,1 +404,0 @@\n-        VectorSpecies<Double> SPECIES = SPECIES_DOUBLE_256;\n@@ -417,7 +405,7 @@\n-        vecSum = DoubleVector.zero(SPECIES);\n-        xSquareV = DoubleVector.zero(SPECIES);\n-        ySquareV = DoubleVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorDouble.length; i += SPECIES.length()) {\n-            vecX = DoubleVector.fromArray(SPECIES, queryVectorDouble, i);\n-            vecY = DoubleVector.fromArray(SPECIES, inputVectorDouble, i);\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        xSquareV = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        ySquareV = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_256.length()) <= queryVectorDouble.length; i += SPECIES_DOUBLE_256.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_256, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_256, inputVectorDouble, i);\n@@ -442,1 +430,0 @@\n-        VectorSpecies<Double> SPECIES = SPECIES_DOUBLE_MAX;\n@@ -444,7 +431,7 @@\n-        vecSum = DoubleVector.zero(SPECIES);\n-        xSquareV = DoubleVector.zero(SPECIES);\n-        ySquareV = DoubleVector.zero(SPECIES);;\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= queryVectorDouble.length; i += SPECIES.length()) {\n-            vecX = DoubleVector.fromArray(SPECIES, queryVectorDouble, i);\n-            vecY = DoubleVector.fromArray(SPECIES, inputVectorDouble, i);\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        xSquareV = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        ySquareV = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_MAX.length()) <= queryVectorDouble.length; i += SPECIES_DOUBLE_MAX.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_MAX, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_MAX, inputVectorDouble, i);\n@@ -470,1 +457,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_128;\n@@ -472,5 +458,5 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= inputVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_128);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_128.length()) <= inputVectorFloat.length; i += SPECIES_FLOAT_128.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_128, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_128, inputVectorFloat, i);\n@@ -491,1 +477,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_256;\n@@ -493,5 +478,5 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= inputVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_256);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_256.length()) <= inputVectorFloat.length; i += SPECIES_FLOAT_256.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_256, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_256, inputVectorFloat, i);\n@@ -512,1 +497,0 @@\n-        VectorSpecies<Float> SPECIES = SPECIES_FLOAT_MAX;\n@@ -514,5 +498,5 @@\n-        vecSum = FloatVector.zero(SPECIES);\n-        int i= 0;\n-        for (i = 0; i + (SPECIES.length()) <= inputVectorFloat.length; i += SPECIES.length()) {\n-            vecX = FloatVector.fromArray(SPECIES, queryVectorFloat, i);\n-            vecY = FloatVector.fromArray(SPECIES, inputVectorFloat, i);\n+        vecSum = FloatVector.zero(SPECIES_FLOAT_MAX);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_FLOAT_MAX.length()) <= inputVectorFloat.length; i += SPECIES_FLOAT_MAX.length()) {\n+            vecX = FloatVector.fromArray(SPECIES_FLOAT_MAX, queryVectorFloat, i);\n+            vecY = FloatVector.fromArray(SPECIES_FLOAT_MAX, inputVectorFloat, i);\n@@ -531,0 +515,60 @@\n+    @Benchmark\n+    public double l2SquaredVectorDouble128() {\n+        DoubleVector vecX, vecY, vecSum, vecSquare, vecDiff;\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_128);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_128.length()) <= inputVectorDouble.length; i += SPECIES_DOUBLE_128.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_128, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_128, inputVectorDouble, i);\n+            vecDiff = vecX.sub(vecY);\n+            vecSquare = vecDiff.mul(vecDiff);\n+            vecSum = vecDiff.fma(vecDiff, vecSum);\n+        }\n+        double sum = vecSum.reduceLanes(VectorOperators.ADD);\n+        for (; i < inputVectorDouble.length; i++) {\n+            double diff = queryVectorDouble[i] - inputVectorDouble[i];\n+            sum += diff * diff;\n+        }\n+        return sum;\n+    }\n+\n+    @Benchmark\n+    public double l2SquaredVectorDouble256() {\n+        DoubleVector vecX, vecY, vecSum, vecSquare, vecDiff;\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_256);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_256.length()) <= inputVectorDouble.length; i += SPECIES_DOUBLE_256.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_256, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_256, inputVectorDouble, i);\n+            vecDiff = vecX.sub(vecY);\n+            vecSquare = vecDiff.mul(vecDiff);\n+            vecSum = vecDiff.fma(vecDiff, vecSum);\n+        }\n+        double sum = vecSum.reduceLanes(VectorOperators.ADD);\n+        for (; i < inputVectorDouble.length; i++) {\n+            double diff = queryVectorDouble[i] - inputVectorDouble[i];\n+            sum += diff * diff;\n+        }\n+        return sum;\n+    }\n+\n+    @Benchmark\n+    public double l2SquaredVectorDoubleMax() {\n+        DoubleVector vecX, vecY, vecSum, vecSquare, vecDiff;\n+        vecSum = DoubleVector.zero(SPECIES_DOUBLE_MAX);\n+        int i = 0;\n+        for (i = 0; i + (SPECIES_DOUBLE_MAX.length()) <= inputVectorDouble.length; i += SPECIES_DOUBLE_MAX.length()) {\n+            vecX = DoubleVector.fromArray(SPECIES_DOUBLE_MAX, queryVectorDouble, i);\n+            vecY = DoubleVector.fromArray(SPECIES_DOUBLE_MAX, inputVectorDouble, i);\n+            vecDiff = vecX.sub(vecY);\n+            vecSquare = vecDiff.mul(vecDiff);\n+            vecSum = vecDiff.fma(vecDiff, vecSum);\n+        }\n+        double sum = vecSum.reduceLanes(VectorOperators.ADD);\n+        for (; i < inputVectorDouble.length; i++) {\n+            double diff = queryVectorDouble[i] - inputVectorDouble[i];\n+            sum += diff * diff;\n+        }\n+        return sum;\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/VectorDistance.java","additions":161,"deletions":117,"binary":false,"changes":278,"status":"modified"}]}