{"files":[{"patch":"@@ -2478,0 +2478,1 @@\n+    case Op_CompressV:\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -152,0 +152,2 @@\n+      case Op_CompressV:\n+        return (bt == T_INT || bt == T_LONG);\n@@ -5428,0 +5430,15 @@\n+%}\n+\n+\/\/ ---------------------------- Compress\/Expand Operations ---------------------------\n+\n+instruct vcompress(vReg dst, vReg src, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  match(Set dst (CompressV src pg));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_compact $dst, $src, $pg\\t# vector compress (sve)\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    Assembler::SIMD_RegVariant size = __ elemType_to_regVariant(bt);\n+    __ sve_compact(as_FloatRegister($dst$$reg), size, as_FloatRegister($src$$reg), as_PRegister($pg$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -147,0 +147,2 @@\n+      case Op_CompressV:\n+        return (bt == T_INT || bt == T_LONG);\n@@ -3079,0 +3081,16 @@\n+\n+\n+\/\/ ---------------------------- Compress\/Expand Operations ---------------------------\n+\n+instruct vcompress(vReg dst, vReg src, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  match(Set dst (CompressV src pg));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_compact $dst, $src, $pg\\t# vector compress (sve)\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    Assembler::SIMD_RegVariant size = __ elemType_to_regVariant(bt);\n+    __ sve_compact(as_FloatRegister($dst$$reg), size, as_FloatRegister($src$$reg), as_PRegister($pg$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}dnl\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3624,0 +3624,8 @@\n+  \/\/ Shuffle active elements of vector to the right and fill with zero\n+  void sve_compact(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn, PRegister Pg) {\n+    starti;\n+    assert(T == S || T == D, \"invalid size\");\n+    f(0b00000101, 31, 24), f(T, 23, 22), f(0b100001100, 21, 13);\n+    pgrf(Pg, 10), rf(Zn, 5), rf(Zd, 0);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2715,1 +2715,1 @@\n-     * This is a cross-lane operation that expands the contguous lane\n+     * This is a cross-lane operation that expands the contiguous lane\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1690,0 +1690,2 @@\n+                        [\"compact\", \"__ sve_compact(z16, __ S, z16, p1);\",                \"compact\\tz16.s, p1, z16.s\"],\n+                        [\"compact\", \"__ sve_compact(z16, __ D, z16, p1);\",                \"compact\\tz16.d, p1, z16.d\"],\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -879,0 +879,2 @@\n+    __ sve_compact(z16, __ S, z16, p1);                \/\/       compact z16.s, p1, z16.s\n+    __ sve_compact(z16, __ D, z16, p1);                \/\/       compact z16.d, p1, z16.d\n@@ -1089,7 +1091,7 @@\n-    0x14000000,     0x17ffffd7,     0x14000378,     0x94000000,\n-    0x97ffffd4,     0x94000375,     0x3400000a,     0x34fffa2a,\n-    0x34006e4a,     0x35000008,     0x35fff9c8,     0x35006de8,\n-    0xb400000b,     0xb4fff96b,     0xb4006d8b,     0xb500001d,\n-    0xb5fff91d,     0xb5006d3d,     0x10000013,     0x10fff8b3,\n-    0x10006cd3,     0x90000013,     0x36300016,     0x3637f836,\n-    0x36306c56,     0x3758000c,     0x375ff7cc,     0x37586bec,\n+    0x14000000,     0x17ffffd7,     0x1400037a,     0x94000000,\n+    0x97ffffd4,     0x94000377,     0x3400000a,     0x34fffa2a,\n+    0x34006e8a,     0x35000008,     0x35fff9c8,     0x35006e28,\n+    0xb400000b,     0xb4fff96b,     0xb4006dcb,     0xb500001d,\n+    0xb5fff91d,     0xb5006d7d,     0x10000013,     0x10fff8b3,\n+    0x10006d13,     0x90000013,     0x36300016,     0x3637f836,\n+    0x36306c96,     0x3758000c,     0x375ff7cc,     0x37586c2c,\n@@ -1100,13 +1102,13 @@\n-    0x540069c0,     0x54000001,     0x54fff541,     0x54006961,\n-    0x54000002,     0x54fff4e2,     0x54006902,     0x54000002,\n-    0x54fff482,     0x540068a2,     0x54000003,     0x54fff423,\n-    0x54006843,     0x54000003,     0x54fff3c3,     0x540067e3,\n-    0x54000004,     0x54fff364,     0x54006784,     0x54000005,\n-    0x54fff305,     0x54006725,     0x54000006,     0x54fff2a6,\n-    0x540066c6,     0x54000007,     0x54fff247,     0x54006667,\n-    0x54000008,     0x54fff1e8,     0x54006608,     0x54000009,\n-    0x54fff189,     0x540065a9,     0x5400000a,     0x54fff12a,\n-    0x5400654a,     0x5400000b,     0x54fff0cb,     0x540064eb,\n-    0x5400000c,     0x54fff06c,     0x5400648c,     0x5400000d,\n-    0x54fff00d,     0x5400642d,     0x5400000e,     0x54ffefae,\n-    0x540063ce,     0x5400000f,     0x54ffef4f,     0x5400636f,\n+    0x54006a00,     0x54000001,     0x54fff541,     0x540069a1,\n+    0x54000002,     0x54fff4e2,     0x54006942,     0x54000002,\n+    0x54fff482,     0x540068e2,     0x54000003,     0x54fff423,\n+    0x54006883,     0x54000003,     0x54fff3c3,     0x54006823,\n+    0x54000004,     0x54fff364,     0x540067c4,     0x54000005,\n+    0x54fff305,     0x54006765,     0x54000006,     0x54fff2a6,\n+    0x54006706,     0x54000007,     0x54fff247,     0x540066a7,\n+    0x54000008,     0x54fff1e8,     0x54006648,     0x54000009,\n+    0x54fff189,     0x540065e9,     0x5400000a,     0x54fff12a,\n+    0x5400658a,     0x5400000b,     0x54fff0cb,     0x5400652b,\n+    0x5400000c,     0x54fff06c,     0x540064cc,     0x5400000d,\n+    0x54fff00d,     0x5400646d,     0x5400000e,     0x54ffefae,\n+    0x5400640e,     0x5400000f,     0x54ffef4f,     0x540063af,\n@@ -1144,1 +1146,1 @@\n-    0xbd1b1869,     0x580053bb,     0x1800000b,     0xf8945060,\n+    0xbd1b1869,     0x580053fb,     0x1800000b,     0xf8945060,\n@@ -1270,42 +1272,43 @@\n-    0x1e601000,     0x1e603000,     0x1e621000,     0x1e623000,\n-    0x1e641000,     0x1e643000,     0x1e661000,     0x1e663000,\n-    0x1e681000,     0x1e683000,     0x1e6a1000,     0x1e6a3000,\n-    0x1e6c1000,     0x1e6c3000,     0x1e6e1000,     0x1e6e3000,\n-    0x1e701000,     0x1e703000,     0x1e721000,     0x1e723000,\n-    0x1e741000,     0x1e743000,     0x1e761000,     0x1e763000,\n-    0x1e781000,     0x1e783000,     0x1e7a1000,     0x1e7a3000,\n-    0x1e7c1000,     0x1e7c3000,     0x1e7e1000,     0x1e7e3000,\n-    0xf8208193,     0xf83101b6,     0xf83c13fe,     0xf821239a,\n-    0xf824309e,     0xf826535e,     0xf8304109,     0xf82c7280,\n-    0xf8216058,     0xf8a08309,     0xf8ba03d0,     0xf8a312ea,\n-    0xf8aa21e4,     0xf8a2310b,     0xf8aa522f,     0xf8a2418a,\n-    0xf8ac71af,     0xf8a26287,     0xf8fa8090,     0xf8e20184,\n-    0xf8f01215,     0xf8f022ab,     0xf8f7334c,     0xf8f751dc,\n-    0xf8eb4038,     0xf8ec715f,     0xf8f06047,     0xf863826d,\n-    0xf8710070,     0xf86113cb,     0xf86521e8,     0xf87d301e,\n-    0xf8745287,     0xf87742bc,     0xf87b70b9,     0xf8616217,\n-    0xb83f8185,     0xb82901fc,     0xb83d13f6,     0xb83320bf,\n-    0xb82e33f0,     0xb830529b,     0xb830416c,     0xb82973c6,\n-    0xb831639b,     0xb8be8147,     0xb8b4008a,     0xb8b81231,\n-    0xb8b623a3,     0xb8af3276,     0xb8b35056,     0xb8af4186,\n-    0xb8b071ab,     0xb8b763c1,     0xb8f38225,     0xb8e202d0,\n-    0xb8ed12aa,     0xb8fd219b,     0xb8fb3023,     0xb8ff5278,\n-    0xb8f14389,     0xb8fb70ef,     0xb8f563f7,     0xb87983e2,\n-    0xb87b0150,     0xb8771073,     0xb8702320,     0xb87a3057,\n-    0xb870508c,     0xb87c43be,     0xb87070db,     0xb86961fd,\n-    0xce273c87,     0xce080ac9,     0xce7e8e9b,     0xce808b45,\n-    0xce79806e,     0xce758768,     0xcec0835a,     0xce608ad8,\n-    0x043100c4,     0x046105e3,     0x65c900a6,     0x65d60a87,\n-    0x65c80545,     0x0416a63e,     0x04001f8b,     0x045a179a,\n-    0x04d09e0d,     0x045aa1a5,     0x04990b4f,     0x049386cb,\n-    0x04918264,     0x04500dd1,     0x0497b062,     0x041ea4d7,\n-    0x04980f71,     0x04c80450,     0x048a04c3,     0x04810d93,\n-    0x04dcba68,     0x65808ae0,     0x65cd9db3,     0x658680e6,\n-    0x65879911,     0x65c296d6,     0x04dda1e2,     0x65c2a494,\n-    0x65c0a107,     0x65c1b493,     0x65cdb569,     0x65819e05,\n-    0x65ad8c36,     0x65af1334,     0x65e63104,     0x65fd5e04,\n-    0x65eb6c49,     0x049a4423,     0x04916d11,     0x043330b8,\n-    0x04b032d1,     0x04603274,     0x04e432f1,     0x05b96ae4,\n-    0x05686d02,     0x049a33d8,     0x04583c24,     0x04592c13,\n-    0x04083a27,     0x04ca253b,     0x65c72e17,     0x65c63696,\n-    0x65d829bc,     0x04413787,\n+    0x05a18610,     0x05e18610,     0x1e601000,     0x1e603000,\n+    0x1e621000,     0x1e623000,     0x1e641000,     0x1e643000,\n+    0x1e661000,     0x1e663000,     0x1e681000,     0x1e683000,\n+    0x1e6a1000,     0x1e6a3000,     0x1e6c1000,     0x1e6c3000,\n+    0x1e6e1000,     0x1e6e3000,     0x1e701000,     0x1e703000,\n+    0x1e721000,     0x1e723000,     0x1e741000,     0x1e743000,\n+    0x1e761000,     0x1e763000,     0x1e781000,     0x1e783000,\n+    0x1e7a1000,     0x1e7a3000,     0x1e7c1000,     0x1e7c3000,\n+    0x1e7e1000,     0x1e7e3000,     0xf8208193,     0xf83101b6,\n+    0xf83c13fe,     0xf821239a,     0xf824309e,     0xf826535e,\n+    0xf8304109,     0xf82c7280,     0xf8216058,     0xf8a08309,\n+    0xf8ba03d0,     0xf8a312ea,     0xf8aa21e4,     0xf8a2310b,\n+    0xf8aa522f,     0xf8a2418a,     0xf8ac71af,     0xf8a26287,\n+    0xf8fa8090,     0xf8e20184,     0xf8f01215,     0xf8f022ab,\n+    0xf8f7334c,     0xf8f751dc,     0xf8eb4038,     0xf8ec715f,\n+    0xf8f06047,     0xf863826d,     0xf8710070,     0xf86113cb,\n+    0xf86521e8,     0xf87d301e,     0xf8745287,     0xf87742bc,\n+    0xf87b70b9,     0xf8616217,     0xb83f8185,     0xb82901fc,\n+    0xb83d13f6,     0xb83320bf,     0xb82e33f0,     0xb830529b,\n+    0xb830416c,     0xb82973c6,     0xb831639b,     0xb8be8147,\n+    0xb8b4008a,     0xb8b81231,     0xb8b623a3,     0xb8af3276,\n+    0xb8b35056,     0xb8af4186,     0xb8b071ab,     0xb8b763c1,\n+    0xb8f38225,     0xb8e202d0,     0xb8ed12aa,     0xb8fd219b,\n+    0xb8fb3023,     0xb8ff5278,     0xb8f14389,     0xb8fb70ef,\n+    0xb8f563f7,     0xb87983e2,     0xb87b0150,     0xb8771073,\n+    0xb8702320,     0xb87a3057,     0xb870508c,     0xb87c43be,\n+    0xb87070db,     0xb86961fd,     0xce273c87,     0xce080ac9,\n+    0xce7e8e9b,     0xce808b45,     0xce79806e,     0xce758768,\n+    0xcec0835a,     0xce608ad8,     0x043100c4,     0x046105e3,\n+    0x65c900a6,     0x65d60a87,     0x65c80545,     0x0416a63e,\n+    0x04001f8b,     0x045a179a,     0x04d09e0d,     0x045aa1a5,\n+    0x04990b4f,     0x049386cb,     0x04918264,     0x04500dd1,\n+    0x0497b062,     0x041ea4d7,     0x04980f71,     0x04c80450,\n+    0x048a04c3,     0x04810d93,     0x04dcba68,     0x65808ae0,\n+    0x65cd9db3,     0x658680e6,     0x65879911,     0x65c296d6,\n+    0x04dda1e2,     0x65c2a494,     0x65c0a107,     0x65c1b493,\n+    0x65cdb569,     0x65819e05,     0x65ad8c36,     0x65af1334,\n+    0x65e63104,     0x65fd5e04,     0x65eb6c49,     0x049a4423,\n+    0x04916d11,     0x043330b8,     0x04b032d1,     0x04603274,\n+    0x04e432f1,     0x05b96ae4,     0x05686d02,     0x049a33d8,\n+    0x04583c24,     0x04592c13,     0x04083a27,     0x04ca253b,\n+    0x65c72e17,     0x65c63696,     0x65d829bc,     0x04413787,\n+\n","filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h","additions":66,"deletions":63,"binary":false,"changes":129,"status":"modified"}]}