{"files":[{"patch":"@@ -4057,2 +4057,2 @@\n-                                              Register tmp, int masklen, int masksize,\n-                                              int vec_enc) {\n+                                              int masklen, int masksize, int vec_enc) {\n+  assert(VM_Version::supports_bmi1(), \"Strange hardware\");\n@@ -4060,1 +4060,1 @@\n-    kmovql(tmp, mask);\n+    kmovql(dst, mask);\n@@ -4063,1 +4063,1 @@\n-    kmovwl(tmp, mask);\n+    kmovwl(dst, mask);\n@@ -4069,1 +4069,1 @@\n-    andq(tmp, (1 << masklen) - 1);\n+    andq(dst, (1 << masklen) - 1);\n@@ -4074,1 +4074,1 @@\n-      popcntq(dst, tmp);\n+      popcntq(dst, dst);\n@@ -4077,3 +4077,3 @@\n-      movl(dst, -1);\n-      bsrq(tmp, tmp);\n-      cmov32(Assembler::notZero, dst, tmp);\n+      lzcntq(dst, dst);\n+      notl(dst);\n+      addl(dst, 64);\n@@ -4082,1 +4082,0 @@\n-      assert(VM_Version::supports_bmi1(), \"\");\n@@ -4084,2 +4083,2 @@\n-        orl(tmp, 1 << masklen);\n-        tzcntl(dst, tmp);\n+        orl(dst, 1 << masklen);\n+        tzcntl(dst, dst);\n@@ -4087,1 +4086,1 @@\n-        tzcntl(dst, tmp);\n+        tzcntl(dst, dst);\n@@ -4089,1 +4088,1 @@\n-        tzcntq(dst, tmp);\n+        tzcntq(dst, dst);\n@@ -4149,3 +4148,9 @@\n-      movl(dst, -1);\n-      bsrl(tmp, tmp);\n-      cmov32(Assembler::notZero, dst, tmp);\n+      if (VM_Version::supports_bmi1()) {\n+        lzcntl(dst, tmp);\n+        notl(dst);\n+        addl(dst, 32);\n+      } else {\n+        movl(dst, -1);\n+        bsrl(tmp, tmp);\n+        cmov32(Assembler::notZero, dst, tmp);\n+      }\n@@ -4173,0 +4178,1 @@\n+      assert(dst == tmp, \"Dst and tmp should be the same for toLong operations\");\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":23,"deletions":17,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-  void vector_mask_operation(int opc, Register dst, KRegister mask, Register tmp, int masklen, int masksize, int vec_enc);\n+  void vector_mask_operation(int opc, Register dst, KRegister mask, int masklen, int masksize, int vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8655,1 +8655,1 @@\n-    __ vector_mask_operation(opcode, noreg, $mask$$KRegister, $dst$$Register,\n+    __ vector_mask_operation(opcode, $dst$$Register, $mask$$KRegister,\n@@ -8671,1 +8671,1 @@\n-    __ vector_mask_operation(opcode, noreg, $mask$$XMMRegister, $xtmp$$XMMRegister,\n+    __ vector_mask_operation(opcode, $dst$$Register, $mask$$XMMRegister, $xtmp$$XMMRegister,\n@@ -8687,1 +8687,1 @@\n-    __ vector_mask_operation(opcode, noreg, $mask$$XMMRegister, $xtmp$$XMMRegister,\n+    __ vector_mask_operation(opcode, $dst$$Register, $mask$$XMMRegister, $xtmp$$XMMRegister,\n@@ -8693,1 +8693,1 @@\n-instruct vmask_truecount_evex(rRegI dst, kReg mask, rRegL tmp, rFlagsReg cr) %{\n+instruct vmask_truecount_evex(rRegI dst, kReg mask, rFlagsReg cr) %{\n@@ -8696,2 +8696,2 @@\n-  effect(TEMP_DEF dst, TEMP tmp, KILL cr);\n-  format %{ \"vector_truecount_evex $dst, $mask \\t! using $tmp as TEMP\" %}\n+  effect(TEMP_DEF dst, KILL cr);\n+  format %{ \"vector_truecount_evex $dst, $mask \\t! vector mask truecount\" %}\n@@ -8704,1 +8704,1 @@\n-    __ vector_mask_operation(opcode, $dst$$Register, $mask$$KRegister, $tmp$$Register,\n+    __ vector_mask_operation(opcode, $dst$$Register, $mask$$KRegister,\n@@ -8742,1 +8742,1 @@\n-instruct vmask_first_or_last_true_evex(rRegI dst, kReg mask, rRegL tmp, rFlagsReg cr) %{\n+instruct vmask_first_or_last_true_evex(rRegI dst, kReg mask, rFlagsReg cr) %{\n@@ -8746,2 +8746,2 @@\n-  effect(TEMP_DEF dst, TEMP tmp, KILL cr);\n-  format %{ \"vector_mask_first_or_last_true_evex $dst, $mask \\t! using $tmp as TEMP\" %}\n+  effect(TEMP_DEF dst, KILL cr);\n+  format %{ \"vector_mask_first_or_last_true_evex $dst, $mask \\t! vector mask first or last true\" %}\n@@ -8754,2 +8754,2 @@\n-    __ vector_mask_operation(opcode, $dst$$Register, $mask$$KRegister, $tmp$$Register, mask_len,\n-                             mask_size, vlen_enc);\n+    __ vector_mask_operation(opcode, $dst$$Register, $mask$$KRegister,\n+                             mask_len, mask_size, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}