{"files":[{"patch":"@@ -228,2 +228,0 @@\n-      \/\/ Vector API specific\n-      case Op_VectorLoadConst:\n@@ -231,0 +229,2 @@\n+      \/\/ Vector API specific\n+      case Op_LoadVectorGather:\n@@ -4222,0 +4222,15 @@\n+\n+\/\/ ------------------------------ Vector Load Const -------------------------------\n+instruct loadconB(vReg dst, immI0 src)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE);\n+  match(Set dst (VectorLoadConst src));\n+  ins_cost(INSN_COST + SVE_COST);\n+  format %{ \"sve_ld1b $dst, CONSTANT_MEMORY\\t# load iota indices\" %}\n+  ins_encode %{\n+    __ lea(rscratch1, ExternalAddress(StubRoutines::aarch64::vector_iota_indices()));\n+    __ sve_ld1b(as_FloatRegister($dst$$reg), __ B, ptrue, Address(rscratch1, 0));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -223,2 +223,0 @@\n-      \/\/ Vector API specific\n-      case Op_VectorLoadConst:\n@@ -226,0 +224,2 @@\n+      \/\/ Vector API specific\n+      case Op_LoadVectorGather:\n@@ -2494,0 +2494,15 @@\n+\n+\/\/ ------------------------------ Vector Load Const -------------------------------\n+instruct loadconB(vReg dst, immI0 src)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE);\n+  match(Set dst (VectorLoadConst src));\n+  ins_cost(INSN_COST + SVE_COST);\n+  format %{ \"sve_ld1b $dst, CONSTANT_MEMORY\\t# load iota indices\" %}\n+  ins_encode %{\n+    __ lea(rscratch1, ExternalAddress(StubRoutines::aarch64::vector_iota_indices()));\n+    __ sve_ld1b(as_FloatRegister($dst$$reg), __ B, ptrue, Address(rscratch1, 0));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -625,0 +625,14 @@\n+    __ emit_data64(0x1716151413121110, relocInfo::none);\n+    __ emit_data64(0x1F1E1D1C1B1A1918, relocInfo::none);\n+    __ emit_data64(0x2726252423222120, relocInfo::none);\n+    __ emit_data64(0x2F2E2D2C2B2A2928, relocInfo::none);\n+    __ emit_data64(0x3736353433323130, relocInfo::none);\n+    __ emit_data64(0x3F3E3D3C3B3A3938, relocInfo::none);\n+    __ emit_data64(0x4746454443424140, relocInfo::none);\n+    __ emit_data64(0x4F4E4D4C4B4A4948, relocInfo::none);\n+    __ emit_data64(0x5756555453525150, relocInfo::none);\n+    __ emit_data64(0x5F5E5D5C5B5A5958, relocInfo::none);\n+    __ emit_data64(0x6766656463626160, relocInfo::none);\n+    __ emit_data64(0x6F6E6D6C6B6A6968, relocInfo::none);\n+    __ emit_data64(0x7776757473727170, relocInfo::none);\n+    __ emit_data64(0x7F7E7D7C7B7A7978, relocInfo::none);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}