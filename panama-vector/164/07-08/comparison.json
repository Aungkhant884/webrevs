{"files":[{"patch":"@@ -46,0 +46,2 @@\n+    \/** Definitions for FP16*\/\n+    public static final short NaN = (short)0xffff;\n@@ -73,11 +75,16 @@\n-        float f = Float.intBitsToFloat(((val&0x8000)<<16) | (((val&0x7c00)+0x1C000)<<13) | ((val&0x03FF)<<13));\n-        return f;\n-    }\n-\n-    \/**\n-     * Returns true if the number passed is finite\n-     * @param f float value to be checked\n-     * @return boolean value\n-     *\/\n-    public static boolean isFinite(float f) {\n-        return Math.abs(f) <= Halffloat.MAX_VALUE;\n+        float result;\n+        switch(val) {\n+          case Halffloat.POSITIVE_INFINITY:\n+               result = Float.POSITIVE_INFINITY;\n+               break;\n+          case Halffloat.NEGATIVE_INFINITY:\n+               result = Float.NEGATIVE_INFINITY;\n+               break;\n+          case Halffloat.NaN:\n+               result = Float.NaN;\n+               break;\n+          default:\n+               result = (Float.intBitsToFloat(((val&0x8000)<<16) | (((val&0x7c00)+0x1C000)<<13) | ((val&0x03FF)<<13)));\n+               break;\n+       }\n+       return result;\n@@ -92,1 +99,4 @@\n-        if (!isFinite(f)) return Halffloat.POSITIVE_INFINITY;\n+        if (!Float.isFinite(f)) return Halffloat.POSITIVE_INFINITY;\n+        if (Float.isNaN(f)) return Halffloat.NaN;\n+\n+        if (f == Float.NEGATIVE_INFINITY) return Halffloat.NEGATIVE_INFINITY;\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat.java","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"}]}