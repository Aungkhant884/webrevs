{"files":[{"patch":"@@ -38,1 +38,1 @@\n-   \/** Definitions for FP16*\/\n+    \/** Definitions for FP16*\/\n@@ -48,0 +48,4 @@\n+    \/** Definitions for FP16*\/\n+    private static final float MAX_FLOAT_VALUE = 0x1.ffep+15f;\n+    \/** Definitions for FP16*\/\n+    private static final float MIN_FLOAT_VALUE = 0x1.004p-14f;\n@@ -55,5 +59,6 @@\n-     \/**\n-     * Returns a new Halffloat.\n-     * @param f the species describing the element type\n-     * @return short value of float provided\n-    *\/    public static Halffloat valueOf(short f) {\n+    \/**\n+    * Returns a new Halffloat.\n+    * @param f the species describing the element type\n+    * @return short value of float provided\n+    *\/\n+    public static Halffloat valueOf(short f) {\n@@ -62,0 +67,1 @@\n+\n@@ -63,4 +69,4 @@\n-     * Halffloat constructor\n-     * @param value short value assigned to halffloat\n-     *\/\n-     public Halffloat(short value) {\n+    * Halffloat constructor\n+    * @param value short value assigned to halffloat\n+    *\/\n+    public Halffloat(short value) {\n@@ -69,4 +75,13 @@\n-     \/**\n-     * Returns floatvalue of a given short value.\n-     * @return a float value of short provided\n-     *\/\n+\n+    \/**\n+    * Halffloat constructor\n+    * @param f float value assigned to halffloat\n+    *\/\n+    public Halffloat(float f) {\n+        this.value = valueOf(f);\n+    }\n+\n+    \/**\n+    * Returns floatvalue of a given short value.\n+    * @return a float value of short provided\n+    *\/\n@@ -99,1 +114,1 @@\n-        if (!Float.isFinite(f)) return Halffloat.POSITIVE_INFINITY;\n+        if (f > Halffloat.MAX_FLOAT_VALUE) return Halffloat.POSITIVE_INFINITY;\n@@ -102,1 +117,1 @@\n-        if (f == Float.NEGATIVE_INFINITY) return Halffloat.NEGATIVE_INFINITY;\n+        if (f < Halffloat.MIN_FLOAT_VALUE) return Halffloat.NEGATIVE_INFINITY;\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat.java","additions":31,"deletions":16,"binary":false,"changes":47,"status":"modified"}]}