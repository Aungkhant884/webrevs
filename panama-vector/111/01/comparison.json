{"files":[{"patch":"@@ -1,27 +0,0 @@\n-Owner: CN=DST Root CA X3, O=Digital Signature Trust Co.\n-Issuer: CN=DST Root CA X3, O=Digital Signature Trust Co.\n-Serial number: 44afb080d6a327ba893039862ef8406b\n-Valid from: Sat Sep 30 21:12:19 GMT 2000 until: Thu Sep 30 14:01:15 GMT 2021\n-Signature algorithm name: SHA1withRSA\n-Subject Public Key Algorithm: 2048-bit RSA key\n-Version: 3\n------BEGIN CERTIFICATE-----\n-MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA\/\r\n-MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\r\n-DkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow\r\n-PzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD\r\n-Ew5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\r\n-AN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM\/IUmTrE4O\r\n-rz5Iy2Xu\/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq\r\n-OLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b\r\n-xiqKqy69cK3FCxolkHRyxXtqqzTWMIn\/5WgTe1QLyNau7Fqckh49ZLOMxt+\/yUFw\r\n-7BZy1SbsOFU5Q9D8\/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD\r\n-aeQQmxkqtilX4+U9m5\/wAl0CAwEAAaNCMEAwDwYDVR0TAQH\/BAUwAwEB\/zAOBgNV\r\n-HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX\/xBVghYkQMA0GCSqG\r\n-SIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69\r\n-ikugdB\/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr\r\n-AvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz\r\n-R8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir\/md2cXjbDaJWFBM5\r\n-JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo\r\n-Ob8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ\n------END CERTIFICATE-----\n","filename":"make\/data\/cacerts\/identrustdstx3","additions":0,"deletions":27,"binary":false,"changes":27,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -320,0 +320,2 @@\n+# KOSOVO - Not in ISO 3166\/4217\n+XK=EUR\n","filename":"make\/data\/currency\/CurrencyData.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -212,1 +212,2 @@\n-method name typeSwitch descriptor (Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/CallSite; thrownTypes java\/lang\/Throwable flags 89\n+method name typeSwitch descriptor (Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/CallSite; flags 89\n+method name enumSwitch descriptor (Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/CallSite; flags 89\n@@ -457,2 +458,1 @@\n-header extends jdk\/internal\/util\/random\/RandomSupport$AbstractSplittableGenerator flags 31 runtimeAnnotations @Ljdk\/internal\/util\/random\/RandomSupport$RandomGeneratorProperties;(name=\"SplittableRandom\",i=I64,j=I0,k=I0,equidistribution=I1)\n-innerclass innerClass jdk\/internal\/util\/random\/RandomSupport$AbstractSplittableGenerator outerClass jdk\/internal\/util\/random\/RandomSupport innerClassName AbstractSplittableGenerator flags 409\n+header extends java\/lang\/Object implements java\/util\/random\/RandomGenerator,java\/util\/random\/RandomGenerator$SplittableGenerator flags 31 runtimeAnnotations @Ljdk\/internal\/util\/random\/RandomSupport$RandomGeneratorProperties;(name=\"SplittableRandom\",i=I64,j=I0,k=I0,equidistribution=I1)\n","filename":"make\/data\/symbols\/java.base-H.sym.txt","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Ljavax\/tools\/FileObject;IIILjava\/lang\/String;)V flags 401\n@@ -35,0 +34,1 @@\n+method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Ljavax\/tools\/FileObject;IIILjava\/lang\/String;)V flags 1\n","filename":"make\/data\/symbols\/jdk.javadoc-H.sym.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-JMH_VERSION=1.28\n+JMH_VERSION=1.32\n","filename":"make\/devkit\/createJMHBundle.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -438,1 +438,1 @@\n-   BUILD_LIBFONTMANAGER_FONTLIB += $(LIBHARFBUZZ_LIBS)\n+   BUILD_LIBFONTMANAGER_FONTLIB += $(HARFBUZZ_LIBS)\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -365,2 +365,8 @@\n-                $CAT $OTHER_DIR\/$f | $SORT > $OTHER_FILE\n-                $CAT $THIS_DIR\/$f  | $SORT > $THIS_FILE\n+                # Also filter out the \"id: NNNN\" in the classlists\n+                if [[ \"$f\" = *\"\/lib\/classlist\" ]]; then\n+                    $CAT $OTHER_DIR\/$f | $SORT | $SED \"s| id: .*||g\" > $OTHER_FILE\n+                    $CAT $THIS_DIR\/$f  | $SORT | $SED \"s| id: .*||g\" > $THIS_FILE\n+                else\n+                    $CAT $OTHER_DIR\/$f | $SORT > $OTHER_FILE\n+                    $CAT $THIS_DIR\/$f  | $SORT > $THIS_FILE\n+                fi\n","filename":"make\/scripts\/compare.sh","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -866,1 +866,1 @@\n-  BUILD_HOTSPOT_JTREG_EXCLUDE += libtest-rw.c libtest-rwx.c libTestJNI.c \\\n+  BUILD_HOTSPOT_JTREG_EXCLUDE += libtest-rw.c libtest-rwx.c \\\n@@ -874,1 +874,1 @@\n-    BUILD_HOTSPOT_JTREG_EXCLUDE += exesigtest.c libterminatedThread.c\n+    BUILD_HOTSPOT_JTREG_EXCLUDE += exesigtest.c libterminatedThread.c libTestJNI.c\n","filename":"make\/test\/JtregNativeHotspot.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,49 +0,0 @@\n-<html>\n-<!-- Changed by: Shinsuke Fukuda,  4-Aug-2000 -->\n-<head>\n-<title>\n-Font2DTest Demo\n-<\/title>\n-<\/head>\n-\n-<BODY BGCOLOR=\"#FFFFFF\">\n-<font size=-1>\n-<hr>\n-<\/font>\n-\n-<h1>\n-Font2DTest\n-<\/h1>\n-\n-An encompassing font\/glyph demo application.\n-Source code is in <BR>\n-<a href=src\/Font2DTest.java>Font2DTest.java<\/a>,<BR>\n-<a href=src\/Font2DTestApplet.java>Font2DTestApplet.java<\/a>,<BR>\n-<a href=src\/RangeMenu.java>RangeMenu.java<\/a> and<BR>\n-<a href=src\/FontPanel.java>FontPanel.java<\/a>.<BR>\n-You can run this program either as an applet or as an application.<BR>\n-Detailed information about the program can be found in\n-<a href=README.txt>README.txt<\/a><BR>\n-\n-<p>To run it as an application,\n-execute the <code>Font2DTest<\/code> class.\n-For example:\n-\n-<blockquote>\n-<pre>\n-% <b>java -jar Font2DTest.jar<\/b>\n-<\/pre>\n-<\/blockquote>\n-\n-<p>\n-Note: If AWTPermission's showWindowWithoutWarningBanner permission is not given,<BR>\n-the zoom feature will not look as good, as characters may be hidden by the warning banner.<BR>\n-\n-<APPLET code=\"Font2DTestApplet.class\" archive=\"Font2DTest.jar\" width=\"850\" height=\"700\">\n-<\/APPLET>\n-\n-<hr>\n-<font size=-1>\n-<\/font>\n-<\/body>\n-<\/html>\n","filename":"src\/demo\/share\/jfc\/Font2DTest\/Font2DTest.html","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -136,1 +136,1 @@\n-    public Font2DTest( JFrame f, boolean isApplet ) {\n+    public Font2DTest( JFrame f) {\n@@ -168,2 +168,2 @@\n-        setupMenu( isApplet );\n-        setupDialog( isApplet );\n+        setupMenu();\n+        setupDialog();\n@@ -259,1 +259,1 @@\n-    private void setupMenu( boolean isApplet ) {\n+    private void setupMenu() {\n@@ -271,5 +271,1 @@\n-        if ( !isApplet )\n-          fileMenu.add( new MenuItemV2( \"Exit\", this ));\n-        else\n-          fileMenu.add( new MenuItemV2( \"Close\", this ));\n-\n+        fileMenu.add( new MenuItemV2( \"Exit\", this ));\n@@ -329,5 +325,2 @@\n-    private void setupDialog( boolean isApplet ) {\n-        if (!isApplet)\n-                filePromptDialog = new JFileChooser( );\n-        else\n-                filePromptDialog = null;\n+    private void setupDialog() {\n+        filePromptDialog = new JFileChooser();\n@@ -435,2 +428,0 @@\n-        \/\/\/ If this is not ran as an applet, use own status bar,\n-        \/\/\/ Otherwise, use the appletviewer\/browser's status bar\n@@ -1033,1 +1024,1 @@\n-        final Font2DTest f2dt = new Font2DTest( f, false );\n+        final Font2DTest f2dt = new Font2DTest( f);\n","filename":"src\/demo\/share\/jfc\/Font2DTest\/Font2DTest.java","additions":8,"deletions":17,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -7,2 +7,0 @@\n-    or \n-% appletviewer Font2DTest.html\n@@ -10,3 +8,2 @@\n-These instructions assume that the 1.7 versions of the java\n-and appletviewer commands are in your path.  If they aren't,\n-then you should either specify the complete path to the commands\n+These instructions assume that the java command is in your path.\n+If they aren't, then you should either specify the complete path to the commands\n@@ -16,3 +13,0 @@\n-To view Font2DTest within a web browser with Java Plugin,\n-load Font2DTest.html.\n-\n@@ -24,12 +18,0 @@\n-NOTE:\n-\n-When Font2DTest is ran as an applet, the browser plugin\/viewer needs\n-following permissions given in order to run properly:\n-\n-AWTPermission     \"showWindowWithoutWarningBanner\"\n-RuntimePermission \"queuePrintJob\"\n-\n-The program will run without these properties set,\n-but some of its features will be limited.\n-To enable all features, please add these permissions.\n-\n@@ -132,20 +114,0 @@\n-\n-Known Problems:\n-\n-- When a PostScript font is used, the characters may extend beyond the\n-enclosing grid or zoom rectangle. This is due to the problem with\n-FontMetrics.getMaxAscent() and getMaxDescent() functions; the functions\n-do not always return the right values for PostScript fonts.\n-\n-- There are still some bugs around the error handling.\n-Most of these problems will usually get fixed when some parameters\n-are changed, or the screen is refreshed.\n-\n-- Many fonts on Solaris fails to retrieve outlines properly,\n-and as the result, they do not align within the grid properly.\n-These are mainly F3 and fonts that was returned by X server.\n-\n-- When showWindowWithoutWarningBanner AWTPermission is not given,\n-the \"zoom\" window will look really bad because of the\n-Applet warning label tacked at the bottom of the zoom window.\n-To remove this, follow the \"NOTE:\" instruction at the top.\n","filename":"src\/demo\/share\/jfc\/Font2DTest\/README.txt","additions":2,"deletions":40,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -552,1 +552,4 @@\n-            public Class<?> getColumnClass(int c) {return getValueAt(0, c).getClass();}\n+            public Class<?> getColumnClass(int c) {\n+                Object obj = getValueAt(0, c);\n+                return obj != null ? obj.getClass() : Object.class;\n+            }\n","filename":"src\/demo\/share\/jfc\/SwingSet2\/TableDemo.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1298,24 +1298,0 @@\n-  static inline BasicType vector_element_basic_type(const MachNode* n) {\n-    const TypeVect* vt = n->bottom_type()->is_vect();\n-    return vt->element_basic_type();\n-  }\n-\n-  static inline BasicType vector_element_basic_type(const MachNode* use, const MachOper* opnd) {\n-    int def_idx = use->operand_index(opnd);\n-    Node* def = use->in(def_idx);\n-    const TypeVect* vt = def->bottom_type()->is_vect();\n-    return vt->element_basic_type();\n-  }\n-\n-  static inline uint vector_length(const MachNode* n) {\n-    const TypeVect* vt = n->bottom_type()->is_vect();\n-    return vt->length();\n-  }\n-\n-  static inline uint vector_length(const MachNode* use, const MachOper* opnd) {\n-    int def_idx = use->operand_index(opnd);\n-    Node* def = use->in(def_idx);\n-    const TypeVect* vt = def->bottom_type()->is_vect();\n-    return vt->length();\n-  }\n-\n@@ -2188,1 +2164,1 @@\n-          if (cbuf) {\n+        if (is64) {\n@@ -15019,1 +14995,1 @@\n-instruct clearArray_imm_reg(immL cnt, iRegP_R10 base, Universe dummy, rFlagsReg cr)\n+instruct clearArray_imm_reg(immL cnt, iRegP_R10 base, iRegL_R11 temp, Universe dummy, rFlagsReg cr)\n@@ -15024,1 +15000,1 @@\n-  effect(USE_KILL base);\n+  effect(TEMP temp, USE_KILL base, KILL cr);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":3,"deletions":27,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1853,1 +1853,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -1868,1 +1868,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -5355,1 +5355,1 @@\n-    __ movw(rscratch1, vector_length(this, $src));\n+    __ movw(rscratch1, Matcher::vector_length(this, $src));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -875,1 +875,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -890,1 +890,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -2297,1 +2297,1 @@\n-    __ movw(rscratch1, vector_length(this, $src));\n+    __ movw(rscratch1, Matcher::vector_length(this, $src));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -95,12 +95,0 @@\n-  static inline uint vector_length_in_bytes(const MachNode* n) {\n-    const TypeVect* vt = n->bottom_type()->is_vect();\n-    return vt->length_in_bytes();\n-  }\n-\n-  static inline uint vector_length_in_bytes(const MachNode* use, MachOper* opnd) {\n-    uint def_idx = use->operand_index(opnd);\n-    Node* def = use->in(def_idx);\n-    const TypeVect* vt = def->bottom_type()->is_vect();\n-    return vt->length_in_bytes();\n-  }\n-\n@@ -193,1 +181,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -209,1 +197,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -318,2 +306,3 @@\n-    BasicType bt = vector_element_basic_type(this);\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt), vector_length(this));\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt),\n+                          Matcher::vector_length(this));\n@@ -337,2 +326,3 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt), vector_length(this, $src));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt),\n+                          Matcher::vector_length(this, $src));\n@@ -369,2 +359,2 @@\n-    uint length_in_bytes_src = vector_length_in_bytes(this, $src);\n-    uint length_in_bytes_dst = vector_length_in_bytes(this);\n+    uint length_in_bytes_src = Matcher::vector_length_in_bytes(this, $src);\n+    uint length_in_bytes_dst = Matcher::vector_length_in_bytes(this);\n@@ -682,1 +672,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -702,1 +692,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -1077,1 +1067,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -1097,1 +1087,1 @@\n-      __ elemType_to_regVariant(vector_element_basic_type(this));\n+      __ elemType_to_regVariant(Matcher::vector_element_basic_type(this));\n@@ -1117,1 +1107,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -1280,1 +1270,1 @@\n-    BasicType to_vect_bt = vector_element_basic_type(this);\n+    BasicType to_vect_bt = Matcher::vector_element_basic_type(this);\n@@ -1299,1 +1289,1 @@\n-    BasicType to_vect_bt = vector_element_basic_type(this);\n+    BasicType to_vect_bt = Matcher::vector_element_basic_type(this);\n@@ -1318,1 +1308,1 @@\n-    BasicType from_vect_bt = vector_element_basic_type(this, $src);\n+    BasicType from_vect_bt = Matcher::vector_element_basic_type(this, $src);\n@@ -1339,1 +1329,1 @@\n-    BasicType from_vect_bt = vector_element_basic_type(this, $src);\n+    BasicType from_vect_bt = Matcher::vector_element_basic_type(this, $src);\n@@ -1360,1 +1350,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1384,1 +1374,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1386,1 +1376,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1424,1 +1415,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1453,1 +1445,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ S, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ S,\n+                          Matcher::vector_length(this, $src2));\n@@ -1479,1 +1472,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1496,1 +1490,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1521,1 +1515,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1523,1 +1517,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1563,1 +1558,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1582,1 +1578,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1607,1 +1603,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1609,1 +1605,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1649,1 +1646,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1668,1 +1666,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1693,1 +1691,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1695,1 +1693,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1735,1 +1734,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1757,1 +1757,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1778,1 +1778,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1780,1 +1780,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1815,1 +1816,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1850,1 +1852,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ S, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ S,\n+                          Matcher::vector_length(this, $src2));\n@@ -1883,1 +1886,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1903,1 +1907,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1924,1 +1928,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1926,1 +1930,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1961,1 +1966,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1996,1 +2002,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ S, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ S,\n+                          Matcher::vector_length(this, $src2));\n@@ -2029,1 +2036,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -3304,1 +3312,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -3324,1 +3332,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -3343,1 +3351,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -3345,1 +3353,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), size, vector_length(this, $src1));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), size,\n+                          Matcher::vector_length(this, $src1));\n@@ -3363,1 +3372,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -3365,1 +3374,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), size, vector_length(this, $src1));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), size,\n+                          Matcher::vector_length(this, $src1));\n@@ -3389,1 +3399,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -3436,1 +3446,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -3589,1 +3599,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -3608,1 +3618,2 @@\n-    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), ptrue,\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3624,1 +3635,2 @@\n-    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), ptrue,\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3642,2 +3654,4 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S, vector_length(this));\n-    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S,\n+                          Matcher::vector_length(this));\n+    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg),\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3660,1 +3674,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D, vector_length(this));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D,\n+                          Matcher::vector_length(this));\n@@ -3662,1 +3677,2 @@\n-    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg),\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3678,1 +3694,2 @@\n-    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue,\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3694,1 +3711,2 @@\n-    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue,\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3712,2 +3730,4 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S, vector_length(this, $src));\n-    __ sve_st1w_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S,\n+                          Matcher::vector_length(this, $src));\n+    __ sve_st1w_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg),\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3730,1 +3750,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src));\n@@ -3732,1 +3753,2 @@\n-    __ sve_st1d_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_st1d_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg),\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -3843,1 +3865,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ B, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ B,\n+                          Matcher::vector_length(this, $src));\n@@ -3858,1 +3881,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pgtmp$$reg), __ B, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($pgtmp$$reg), __ B,\n+                          Matcher::vector_length(this, $src));\n@@ -3873,1 +3897,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ B, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ B,\n+                          Matcher::vector_length(this, $src));\n@@ -3894,1 +3919,1 @@\n-                           ptrue, as_PRegister($ptmp$$reg), vector_length(this, $src));\n+                           ptrue, as_PRegister($ptmp$$reg), Matcher::vector_length(this, $src));\n@@ -3911,1 +3936,1 @@\n-                           ptrue, as_PRegister($ptmp$$reg), vector_length(this, $src));\n+                           ptrue, as_PRegister($ptmp$$reg), Matcher::vector_length(this, $src));\n@@ -3928,1 +3953,1 @@\n-                           ptrue, as_PRegister($ptmp$$reg), vector_length(this, $src));\n+                           ptrue, as_PRegister($ptmp$$reg), Matcher::vector_length(this, $src));\n@@ -3944,1 +3969,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src));\n@@ -3962,1 +3988,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pgtmp$$reg), variant, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($pgtmp$$reg), variant,\n+                          Matcher::vector_length(this, $src));\n@@ -3980,1 +4007,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":117,"deletions":89,"binary":false,"changes":206,"status":"modified"},{"patch":"@@ -90,12 +90,0 @@\n-  static inline uint vector_length_in_bytes(const MachNode* n) {\n-    const TypeVect* vt = n->bottom_type()->is_vect();\n-    return vt->length_in_bytes();\n-  }\n-\n-  static inline uint vector_length_in_bytes(const MachNode* use, MachOper* opnd) {\n-    uint def_idx = use->operand_index(opnd);\n-    Node* def = use->in(def_idx);\n-    const TypeVect* vt = def->bottom_type()->is_vect();\n-    return vt->length_in_bytes();\n-  }\n-\n@@ -196,1 +184,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -212,1 +200,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -255,2 +243,3 @@\n-    BasicType bt = vector_element_basic_type(this);\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt), vector_length(this));\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt),\n+                          Matcher::vector_length(this));\n@@ -274,2 +263,3 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt), vector_length(this, $src));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ elemType_to_regVariant(bt),\n+                          Matcher::vector_length(this, $src));\n@@ -307,2 +297,2 @@\n-    uint length_in_bytes_src = vector_length_in_bytes(this, $src);\n-    uint length_in_bytes_dst = vector_length_in_bytes(this);\n+    uint length_in_bytes_src = Matcher::vector_length_in_bytes(this, $src);\n+    uint length_in_bytes_dst = Matcher::vector_length_in_bytes(this);\n@@ -473,1 +463,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -493,1 +483,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -709,1 +699,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -729,1 +719,1 @@\n-      __ elemType_to_regVariant(vector_element_basic_type(this));\n+      __ elemType_to_regVariant(Matcher::vector_element_basic_type(this));\n@@ -749,1 +739,1 @@\n-    BasicType bt = vector_element_basic_type(this);\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n@@ -914,1 +904,1 @@\n-    BasicType to_vect_bt = vector_element_basic_type(this);\n+    BasicType to_vect_bt = Matcher::vector_element_basic_type(this);\n@@ -939,1 +929,1 @@\n-    BasicType from_vect_bt = vector_element_basic_type(this, $src);\n+    BasicType from_vect_bt = Matcher::vector_element_basic_type(this, $src);\n@@ -967,1 +957,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -991,1 +981,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -993,1 +983,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1031,1 +1022,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1067,1 +1059,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ $4, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ $4,\n+                          Matcher::vector_length(this, $src2));\n@@ -1089,1 +1082,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1114,1 +1107,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1116,1 +1109,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1156,1 +1150,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1175,1 +1170,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1200,1 +1195,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1202,1 +1197,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1242,1 +1238,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1261,1 +1258,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1286,1 +1283,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1288,1 +1285,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1328,1 +1326,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1351,1 +1350,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1394,1 +1393,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src2);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n@@ -1396,1 +1395,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), variant,\n+                          Matcher::vector_length(this, $src2));\n@@ -1418,1 +1418,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src2));\n@@ -1460,1 +1461,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ $4, vector_length(this, $src2));\n+    __ sve_whilelo_zr_imm(as_PRegister($ptmp$$reg), __ $4,\n+                          Matcher::vector_length(this, $src2));\n@@ -2074,1 +2076,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -2100,1 +2102,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -2102,1 +2104,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), size, vector_length(this, $src1));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), size,\n+                          Matcher::vector_length(this, $src1));\n@@ -2129,1 +2132,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -2176,1 +2179,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -2313,1 +2316,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src);\n@@ -2332,1 +2335,2 @@\n-    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), ptrue,\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2348,1 +2352,2 @@\n-    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), ptrue,\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2366,2 +2371,4 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S, vector_length(this));\n-    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S,\n+                          Matcher::vector_length(this));\n+    __ sve_ld1w_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg),\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2384,1 +2391,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D, vector_length(this));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D,\n+                          Matcher::vector_length(this));\n@@ -2386,1 +2394,2 @@\n-    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_ld1d_gather(as_FloatRegister($dst$$reg), as_PRegister($pTmp$$reg),\n+                       as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2402,1 +2411,2 @@\n-    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue,\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2418,1 +2428,2 @@\n-    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue,\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2436,2 +2447,4 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S, vector_length(this, $src));\n-    __ sve_st1w_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ S,\n+                          Matcher::vector_length(this, $src));\n+    __ sve_st1w_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg),\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2454,1 +2467,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister($pTmp$$reg), __ D,\n+                          Matcher::vector_length(this, $src));\n@@ -2456,1 +2470,2 @@\n-    __ sve_st1d_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg), as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+    __ sve_st1d_scatter(as_FloatRegister($src$$reg), as_PRegister($pTmp$$reg),\n+                        as_Register($mem$$base), as_FloatRegister($idx$$reg));\n@@ -2535,1 +2550,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister(ifelse($1, `firsttrue', `$pgtmp', `$ptmp')$$reg), __ B, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister(ifelse($1, `firsttrue', `$pgtmp', `$ptmp')$$reg), __ B,\n+                          Matcher::vector_length(this, $src));\n@@ -2562,1 +2578,1 @@\n-                           ptrue, as_PRegister($ptmp$$reg), vector_length(this, $src));\n+                           ptrue, as_PRegister($ptmp$$reg), Matcher::vector_length(this, $src));\n@@ -2586,1 +2602,2 @@\n-    __ sve_whilelo_zr_imm(as_PRegister(ifelse($1, `firsttrue', `$pgtmp', `$ptmp')$$reg), variant, vector_length(this, $src));\n+    __ sve_whilelo_zr_imm(as_PRegister(ifelse($1, `firsttrue', `$pgtmp', `$ptmp')$$reg), variant,\n+                          Matcher::vector_length(this, $src));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":87,"deletions":70,"binary":false,"changes":157,"status":"modified"},{"patch":"@@ -1130,2 +1130,2 @@\n-                       FrameMap::r2_oop_opr,\n-                       FrameMap::r5_oop_opr,\n+                       FrameMap::r10_oop_opr,\n+                       FrameMap::r11_oop_opr,\n@@ -1146,2 +1146,2 @@\n-  LIR_Opr tmp1 = FrameMap::r2_oop_opr;\n-  LIR_Opr tmp2 = FrameMap::r4_oop_opr;\n+  LIR_Opr tmp1 = FrameMap::r10_oop_opr;\n+  LIR_Opr tmp2 = FrameMap::r11_oop_opr;\n@@ -1175,2 +1175,2 @@\n-  LIR_Opr tmp1 = FrameMap::r2_oop_opr;\n-  LIR_Opr tmp2 = FrameMap::r4_oop_opr;\n+  LIR_Opr tmp1 = FrameMap::r10_oop_opr;\n+  LIR_Opr tmp2 = FrameMap::r11_oop_opr;\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2021, Red Hat Inc. All rights reserved.\n@@ -183,1 +183,4 @@\n-void C1_MacroAssembler::initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1) {\n+\/\/\n+\/\/ Scratch registers: t1 = r10, t2 = r11\n+\/\/\n+void C1_MacroAssembler::initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1, Register t2) {\n@@ -185,0 +188,2 @@\n+  assert(t1 == r10 && t2 == r11, \"must be\");\n+\n@@ -191,6 +196,5 @@\n-  \/\/ Preserve obj\n-  if (hdr_size_in_bytes)\n-    add(obj, obj, hdr_size_in_bytes);\n-  zero_memory(obj, len_in_bytes, t1);\n-  if (hdr_size_in_bytes)\n-    sub(obj, obj, hdr_size_in_bytes);\n+  \/\/ zero_words() takes ptr in r10 and count in words in r11\n+  mov(rscratch1, len_in_bytes);\n+  lea(t1, Address(obj, hdr_size_in_bytes));\n+  lsr(t2, rscratch1, LogBytesPerWord);\n+  zero_words(t1, t2);\n@@ -211,0 +215,1 @@\n+\/\/ Scratch registers: t1 = r10, t2 = r11\n@@ -221,1 +226,0 @@\n-     const int threshold = 16 * BytesPerWord;   \/\/ approximate break even point for code size (see comments below)\n@@ -224,10 +228,1 @@\n-       initialize_body(obj, index, hdr_size_in_bytes, t1);\n-     } else if (con_size_in_bytes <= threshold) {\n-       \/\/ use explicit null stores\n-       int i = hdr_size_in_bytes;\n-       if (i < con_size_in_bytes && (con_size_in_bytes % (2 * BytesPerWord))) {\n-         str(zr, Address(obj, i));\n-         i += BytesPerWord;\n-       }\n-       for (; i < con_size_in_bytes; i += 2 * BytesPerWord)\n-         stp(zr, zr, Address(obj, i));\n+       initialize_body(obj, index, hdr_size_in_bytes, t1, t2);\n@@ -235,25 +230,3 @@\n-       block_comment(\"zero memory\");\n-      \/\/ use loop to null out the fields\n-\n-       int words = (con_size_in_bytes - hdr_size_in_bytes) \/ BytesPerWord;\n-       mov(index,  words \/ 8);\n-\n-       const int unroll = 8; \/\/ Number of str(zr) instructions we'll unroll\n-       int remainder = words % unroll;\n-       lea(rscratch1, Address(obj, hdr_size_in_bytes + remainder * BytesPerWord));\n-\n-       Label entry_point, loop;\n-       b(entry_point);\n-\n-       bind(loop);\n-       sub(index, index, 1);\n-       for (int i = -unroll; i < 0; i++) {\n-         if (-i == remainder)\n-           bind(entry_point);\n-         str(zr, Address(rscratch1, i * wordSize));\n-       }\n-       if (remainder == 0)\n-         bind(entry_point);\n-       add(rscratch1, rscratch1, unroll * wordSize);\n-       cbnz(index, loop);\n-\n+       con_size_in_bytes -= hdr_size_in_bytes;\n+       lea(t1, Address(obj, hdr_size_in_bytes));\n+       zero_words(t1, con_size_in_bytes \/ BytesPerWord);\n@@ -294,2 +267,1 @@\n-  const Register len_zero = len;\n-  initialize_body(obj, arr_size, header_size * BytesPerWord, len_zero);\n+  initialize_body(obj, arr_size, header_size * BytesPerWord, t1, t2);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":18,"deletions":46,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2014, 2015, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Red Hat Inc. All rights reserved.\n@@ -51,1 +51,1 @@\n-  void initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1);\n+  void initialize_body(Register obj, Register len_in_bytes, int hdr_size_in_bytes, Register t1, Register t2);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2021, Red Hat Inc. All rights reserved.\n@@ -659,3 +659,3 @@\n-          Register obj_size = r2;\n-          Register t1       = r19;\n-          Register t2       = r4;\n+          Register obj_size = r19;\n+          Register t1       = r10;\n+          Register t2       = r11;\n@@ -772,3 +772,3 @@\n-          Register arr_size = r4;\n-          Register t1       = r2;\n-          Register t2       = r5;\n+          Register arr_size = r5;\n+          Register t1       = r10;\n+          Register t2       = r11;\n@@ -804,1 +804,1 @@\n-          __ initialize_body(t1, arr_size, 0, t2);\n+          __ initialize_body(t1, arr_size, 0, t1, t2);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-JavaFrameAnchor* OptimizedEntryBlob::jfa_for_frame(const frame& frame) const {\n+OptimizedEntryBlob::FrameData* OptimizedEntryBlob::frame_data_for_frame(const frame& frame) const {\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -239,0 +239,2 @@\n+  PRAGMA_DIAG_PUSH\n+  PRAGMA_NONNULL_IGNORED\n@@ -240,0 +242,1 @@\n+  PRAGMA_DIAG_POP\n@@ -246,0 +249,2 @@\n+  PRAGMA_DIAG_PUSH\n+  PRAGMA_NONNULL_IGNORED\n@@ -247,0 +252,1 @@\n+  PRAGMA_DIAG_POP\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"compiler\/compileTask.hpp\"\n@@ -4093,62 +4094,0 @@\n-\/\/ Zero words; len is in bytes\n-\/\/ Destroys all registers except addr\n-\/\/ len must be a nonzero multiple of wordSize\n-void MacroAssembler::zero_memory(Register addr, Register len, Register t1) {\n-  assert_different_registers(addr, len, t1, rscratch1, rscratch2);\n-\n-#ifdef ASSERT\n-  { Label L;\n-    tst(len, BytesPerWord - 1);\n-    br(Assembler::EQ, L);\n-    stop(\"len is not a multiple of BytesPerWord\");\n-    bind(L);\n-  }\n-#endif\n-\n-#ifndef PRODUCT\n-  block_comment(\"zero memory\");\n-#endif\n-\n-  Label loop;\n-  Label entry;\n-\n-\/\/  Algorithm:\n-\/\/\n-\/\/    scratch1 = cnt & 7;\n-\/\/    cnt -= scratch1;\n-\/\/    p += scratch1;\n-\/\/    switch (scratch1) {\n-\/\/      do {\n-\/\/        cnt -= 8;\n-\/\/          p[-8] = 0;\n-\/\/        case 7:\n-\/\/          p[-7] = 0;\n-\/\/        case 6:\n-\/\/          p[-6] = 0;\n-\/\/          \/\/ ...\n-\/\/        case 1:\n-\/\/          p[-1] = 0;\n-\/\/        case 0:\n-\/\/          p += 8;\n-\/\/      } while (cnt);\n-\/\/    }\n-\n-  const int unroll = 8; \/\/ Number of str(zr) instructions we'll unroll\n-\n-  lsr(len, len, LogBytesPerWord);\n-  andr(rscratch1, len, unroll - 1);  \/\/ tmp1 = cnt % unroll\n-  sub(len, len, rscratch1);      \/\/ cnt -= unroll\n-  \/\/ t1 always points to the end of the region we're about to zero\n-  add(t1, addr, rscratch1, Assembler::LSL, LogBytesPerWord);\n-  adr(rscratch2, entry);\n-  sub(rscratch2, rscratch2, rscratch1, Assembler::LSL, 2);\n-  br(rscratch2);\n-  bind(loop);\n-  sub(len, len, unroll);\n-  for (int i = -unroll; i < 0; i++)\n-    Assembler::str(zr, Address(t1, i * wordSize));\n-  bind(entry);\n-  add(t1, t1, unroll * wordSize);\n-  cbnz(len, loop);\n-}\n-\n@@ -4673,4 +4612,5 @@\n-\/\/ zero_words() is used by C2 ClearArray patterns.  It is as small as\n-\/\/ possible, handling small word counts locally and delegating\n-\/\/ anything larger to the zero_blocks stub.  It is expanded many times\n-\/\/ in compiled code, so it is important to keep it short.\n+\/\/ zero_words() is used by C2 ClearArray patterns and by\n+\/\/ C1_MacroAssembler.  It is as small as possible, handling small word\n+\/\/ counts locally and delegating anything larger to the zero_blocks\n+\/\/ stub.  It is expanded many times in compiled code, so it is\n+\/\/ important to keep it short.\n@@ -4685,1 +4625,0 @@\n-  assert(ptr == r10 && cnt == r11, \"mismatch in register usage\");\n@@ -4688,1 +4627,5 @@\n-  cmp(cnt, (u1)zero_words_block_size);\n+  assert(ptr == r10 && cnt == r11, \"mismatch in register usage\");\n+  RuntimeAddress zero_blocks = RuntimeAddress(StubRoutines::aarch64::zero_blocks());\n+  assert(zero_blocks.target() != NULL, \"zero_blocks stub has not been generated\");\n+\n+  subs(rscratch1, cnt, zero_words_block_size);\n@@ -4694,1 +4637,9 @@\n-    if (StubRoutines::aarch64::complete()) {\n+    \/\/ Make sure this is a C2 compilation. C1 allocates space only for\n+    \/\/ trampoline stubs generated by Call LIR ops, and in any case it\n+    \/\/ makes sense for a C1 compilation task to proceed as quickly as\n+    \/\/ possible.\n+    CompileTask* task;\n+    if (StubRoutines::aarch64::complete()\n+        && Thread::current()->is_Compiler_thread()\n+        && (task = ciEnv::current()->task())\n+        && is_c2_compile(task->comp_level())) {\n@@ -4698,1 +4649,1 @@\n-        postcond(pc() == badAddress);\n+        assert(false, \"failed to allocate space for trampoline\");\n@@ -4702,1 +4653,1 @@\n-      bl(zero_blocks);\n+      far_call(zero_blocks);\n@@ -4706,0 +4657,3 @@\n+\n+  \/\/ We have a few words left to do. zero_blocks has adjusted r10 and r11\n+  \/\/ for us.\n@@ -4710,1 +4664,1 @@\n-      stp(zr, zr, post(ptr, 16));\n+      stp(zr, zr, post(ptr, 2 * BytesPerWord));\n@@ -4720,0 +4674,1 @@\n+\n@@ -4721,1 +4676,0 @@\n-  postcond(pc() != badAddress);\n@@ -4727,1 +4681,2 @@\n-#define SmallArraySize (18 * BytesPerLong)\n+\/\/\n+\/\/ r10, r11, rscratch1, and rscratch2 are clobbered.\n@@ -4730,5 +4685,31 @@\n-  BLOCK_COMMENT(\"zero_words {\");\n-  int i = cnt & 1;  \/\/ store any odd word to start\n-  if (i) str(zr, Address(base));\n-\n-  if (cnt <= SmallArraySize \/ BytesPerLong) {\n+  guarantee(zero_words_block_size < BlockZeroingLowLimit,\n+            \"increase BlockZeroingLowLimit\");\n+  if (cnt <= (uint64_t)BlockZeroingLowLimit \/ BytesPerWord) {\n+#ifndef PRODUCT\n+    {\n+      char buf[64];\n+      snprintf(buf, sizeof buf, \"zero_words (count = %\" PRIu64 \") {\", cnt);\n+      BLOCK_COMMENT(buf);\n+    }\n+#endif\n+    if (cnt >= 16) {\n+      uint64_t loops = cnt\/16;\n+      if (loops > 1) {\n+        mov(rscratch2, loops - 1);\n+      }\n+      {\n+        Label loop;\n+        bind(loop);\n+        for (int i = 0; i < 16; i += 2) {\n+          stp(zr, zr, Address(base, i * BytesPerWord));\n+        }\n+        add(base, base, 16 * BytesPerWord);\n+        if (loops > 1) {\n+          subs(rscratch2, rscratch2, 1);\n+          br(GE, loop);\n+        }\n+      }\n+    }\n+    cnt %= 16;\n+    int i = cnt & 1;  \/\/ store any odd word to start\n+    if (i) str(zr, Address(base));\n@@ -4738,0 +4719,1 @@\n+    BLOCK_COMMENT(\"} zero_words\");\n@@ -4739,19 +4721,2 @@\n-    const int unroll = 4; \/\/ Number of stp(zr, zr) instructions we'll unroll\n-    int remainder = cnt % (2 * unroll);\n-    for (; i < remainder; i += 2) {\n-      stp(zr, zr, Address(base, i * wordSize));\n-    }\n-    Label loop;\n-    Register cnt_reg = rscratch1;\n-    Register loop_base = rscratch2;\n-    cnt = cnt - remainder;\n-    mov(cnt_reg, cnt);\n-    \/\/ adjust base and prebias by -2 * wordSize so we can pre-increment\n-    add(loop_base, base, (remainder - 2) * wordSize);\n-    bind(loop);\n-    sub(cnt_reg, cnt_reg, 2 * unroll);\n-    for (i = 1; i < unroll; i++) {\n-      stp(zr, zr, Address(loop_base, 2 * i * wordSize));\n-    }\n-    stp(zr, zr, Address(pre(loop_base, 2 * unroll * wordSize)));\n-    cbnz(cnt_reg, loop);\n+    mov(r10, base); mov(r11, cnt);\n+    zero_words(r10, r11);\n@@ -4759,1 +4724,0 @@\n-  BLOCK_COMMENT(\"} zero_words\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":63,"deletions":99,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -891,1 +891,0 @@\n-  void zero_memory(Register addr, Register len, Register t1);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -141,0 +141,5 @@\n+  \/\/ Does the CPU supports vector constant rotate instructions?\n+  static constexpr bool supports_vector_constant_rotates(int shift) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/matcher_aarch64.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-define_pd_global(bool, InlineIntrinsics,             false); \/\/ TODO: ARM\n+define_pd_global(bool, InlineIntrinsics,             true );\n","filename":"src\/hotspot\/cpu\/arm\/c1_globals_arm.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-define_pd_global(bool, InlineIntrinsics,             false);\n+define_pd_global(bool, InlineIntrinsics,             true);\n","filename":"src\/hotspot\/cpu\/arm\/c2_globals_arm.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -316,0 +316,5 @@\n+OptimizedEntryBlob::FrameData* OptimizedEntryBlob::frame_data_for_frame(const frame& frame) const {\n+  ShouldNotCallThis();\n+  return nullptr;\n+}\n+\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -134,0 +134,5 @@\n+  \/\/ Does the CPU supports vector constant rotate instructions?\n+  static constexpr bool supports_vector_constant_rotates(int shift) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/arm\/matcher_arm.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -127,5 +127,66 @@\n-  \/\/ TODO: ARM\n-  return NULL;\n-\n-  address entry_point = __ pc();\n-  STOP(\"generate_math_entry\");\n+  address entry_point = NULL;\n+  Register continuation = LR;\n+  bool use_runtime_call = false;\n+  switch (kind) {\n+  case Interpreter::java_lang_math_abs:\n+    entry_point = __ pc();\n+#ifdef __SOFTFP__\n+    use_runtime_call = true;\n+    __ ldrd(R0, Address(SP));\n+#else \/\/ !__SOFTFP__\n+    __ ldr_double(D0, Address(SP));\n+    __ abs_double(D0, D0);\n+#endif \/\/ __SOFTFP__\n+    break;\n+  case Interpreter::java_lang_math_sqrt:\n+    entry_point = __ pc();\n+#ifdef __SOFTFP__\n+    use_runtime_call = true;\n+    __ ldrd(R0, Address(SP));\n+#else \/\/ !__SOFTFP__\n+    __ ldr_double(D0, Address(SP));\n+    __ sqrt_double(D0, D0);\n+#endif \/\/ __SOFTFP__\n+    break;\n+  case Interpreter::java_lang_math_sin:\n+  case Interpreter::java_lang_math_cos:\n+  case Interpreter::java_lang_math_tan:\n+  case Interpreter::java_lang_math_log:\n+  case Interpreter::java_lang_math_log10:\n+  case Interpreter::java_lang_math_exp:\n+    entry_point = __ pc();\n+    use_runtime_call = true;\n+#ifdef __SOFTFP__\n+    __ ldrd(R0, Address(SP));\n+#else \/\/ !__SOFTFP__\n+    __ ldr_double(D0, Address(SP));\n+#endif \/\/ __SOFTFP__\n+    break;\n+  case Interpreter::java_lang_math_pow:\n+    entry_point = __ pc();\n+    use_runtime_call = true;\n+#ifdef __SOFTFP__\n+    __ ldrd(R0, Address(SP, 2 * Interpreter::stackElementSize));\n+    __ ldrd(R2, Address(SP));\n+#else \/\/ !__SOFTFP__\n+    __ ldr_double(D0, Address(SP, 2 * Interpreter::stackElementSize));\n+    __ ldr_double(D1, Address(SP));\n+#endif \/\/ __SOFTFP__\n+    break;\n+  case Interpreter::java_lang_math_fmaD:\n+  case Interpreter::java_lang_math_fmaF:\n+    \/\/ TODO: Implement intrinsic\n+    break;\n+  default:\n+    ShouldNotReachHere();\n+  }\n+\n+  if (entry_point != NULL) {\n+    __ mov(SP, Rsender_sp);\n+    if (use_runtime_call) {\n+      __ mov(Rtmp_save0, LR);\n+      continuation = Rtmp_save0;\n+      generate_math_runtime_call(kind);\n+    }\n+    __ ret(continuation);\n+  }\n@@ -135,0 +196,39 @@\n+void TemplateInterpreterGenerator::generate_math_runtime_call(AbstractInterpreter::MethodKind kind) {\n+  address fn;\n+  switch (kind) {\n+#ifdef __SOFTFP__\n+  case Interpreter::java_lang_math_abs:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dabs);\n+    break;\n+  case Interpreter::java_lang_math_sqrt:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dsqrt);\n+    break;\n+#endif \/\/ __SOFTFP__\n+  case Interpreter::java_lang_math_sin:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dsin);\n+    break;\n+  case Interpreter::java_lang_math_cos:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dcos);\n+    break;\n+  case Interpreter::java_lang_math_tan:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dtan);\n+    break;\n+  case Interpreter::java_lang_math_log:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dlog);\n+    break;\n+  case Interpreter::java_lang_math_log10:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dlog10);\n+    break;\n+  case Interpreter::java_lang_math_exp:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dexp);\n+    break;\n+  case Interpreter::java_lang_math_pow:\n+    fn = CAST_FROM_FN_PTR(address, SharedRuntime::dpow);\n+    break;\n+  default:\n+    ShouldNotReachHere();\n+    fn = NULL; \/\/ silence \"maybe uninitialized\" compiler warnings\n+  }\n+  __ call_VM_leaf(fn);\n+}\n+\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":105,"deletions":5,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -493,3 +493,1 @@\n-  Label Condy, exit;\n-#ifdef __ABI_HARD__\n-  Label NotDouble;\n+  Label Done, NotLong, NotDouble;\n@@ -498,0 +496,4 @@\n+#ifdef __SOFTFP__\n+  __ ldr(R0_tos_lo, Address(Rbase, base_offset + 0 * wordSize));\n+  __ ldr(R1_tos_hi, Address(Rbase, base_offset + 1 * wordSize));\n+#else \/\/ !__SOFTFP__\n@@ -499,1 +501,1 @@\n-\n+#endif \/\/ __SOFTFP__\n@@ -501,1 +503,1 @@\n-  __ b(exit);\n+  __ b(Done);\n@@ -503,1 +505,0 @@\n-#endif\n@@ -506,1 +507,1 @@\n-  __ b(Condy, ne);\n+  __ b(NotLong, ne);\n@@ -510,1 +511,2 @@\n-  __ b(exit);\n+  __ b(Done);\n+  __ bind(NotLong);\n@@ -512,2 +514,1 @@\n-  __ bind(Condy);\n-  condy_helper(exit);\n+  condy_helper(Done);\n@@ -515,1 +516,1 @@\n-  __ bind(exit);\n+  __ bind(Done);\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -827,0 +827,4 @@\n+\n+    \/\/ xxpermx\n+    XXPERMX_PREFIX_OPCODE = PREFIX_PRIMARY_OPCODE | (1u << PRE_TYPE_SHIFT),\n+    XXPERMX_SUFFIX_OPCODE = (34u << OPCODE_SHIFT),\n@@ -2351,0 +2355,1 @@\n+  inline void xxpermx(  VectorSRegister d, VectorSRegister a, VectorSRegister b, VectorSRegister c, int ui3);\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -145,0 +145,5 @@\n+inline void Assembler::xxpermx( VectorSRegister d, VectorSRegister a, VectorSRegister b, VectorSRegister c, int ui3) {\n+  emit_int32(XXPERMX_PREFIX_OPCODE | uimm(ui3, 3));\n+  emit_int32(XXPERMX_SUFFIX_OPCODE | vsrt(d) | vsra(a) | vsrb(b) | vsrc(c));\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -200,0 +200,5 @@\n+OptimizedEntryBlob::FrameData* OptimizedEntryBlob::frame_data_for_frame(const frame& frame) const {\n+  ShouldNotCallThis();\n+  return nullptr;\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -108,0 +108,4 @@\n+void MacroAssembler::align_prefix() {\n+  if (is_aligned(offset() + BytesPerInstWord, 64)) { nop(); }\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,0 +91,10 @@\n+  \/\/ Align prefix opcode to make sure it's not on the last word of a\n+  \/\/ 64-byte block.\n+  \/\/\n+  \/\/ Note: do not call align_prefix() in a .ad file (e.g. ppc.ad).  Instead\n+  \/\/ add ins_alignment(2) to the instruct definition and implement the\n+  \/\/ compute_padding() method of the instruct node to use\n+  \/\/ compute_prefix_padding().  See loadConI32Node::compute_padding() in\n+  \/\/ ppc.ad for an example.\n+  void align_prefix();\n+\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -141,0 +141,5 @@\n+  \/\/ Does the CPU supports vector constant rotate instructions?\n+  static constexpr bool supports_vector_constant_rotates(int shift) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/ppc\/matcher_ppc.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3646,0 +3646,4 @@\n+\/\/ For P10 (or later) only\n+#define VALID_B64 0x80\n+#define VB64(x) (VALID_B64 | x)\n+\n@@ -3648,0 +3652,2 @@\n+#define BLK_OFFSETOF(x) (offsetof(constant_block, x))\n+\n@@ -3663,89 +3669,117 @@\n-    static const signed char VEC_ALIGN offsetLUT_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      0,   0, PLS, DIG,  UC,  UC,  LC,  LC,\n-      0,   0,   0,   0,   0,   0,   0,   0 ) };\n-\n-    static const signed char VEC_ALIGN offsetLUT_URL_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      0,   0, HYP, DIG,  UC,  UC,  LC,  LC,\n-      0,   0,   0,   0,   0,   0,   0,   0 ) };\n-\n-    static const unsigned char VEC_ALIGN maskLUT_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      \/* 0        *\/ (unsigned char)0b10101000,\n-      \/* 1 .. 9   *\/ (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n-                     (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n-                     (unsigned char)0b11111000,\n-      \/* 10       *\/ (unsigned char)0b11110000,\n-      \/* 11       *\/ (unsigned char)0b01010100,\n-      \/* 12 .. 14 *\/ (unsigned char)0b01010000, (unsigned char)0b01010000, (unsigned char)0b01010000,\n-      \/* 15       *\/ (unsigned char)0b01010100 ) };\n-\n-    static const unsigned char VEC_ALIGN maskLUT_URL_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      \/* 0        *\/ (unsigned char)0b10101000,\n-      \/* 1 .. 9   *\/ (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n-                     (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n-                     (unsigned char)0b11111000,\n-      \/* 10       *\/ (unsigned char)0b11110000,\n-      \/* 11 .. 12 *\/ (unsigned char)0b01010000, (unsigned char)0b01010000,\n-      \/* 13       *\/ (unsigned char)0b01010100,\n-      \/* 14       *\/ (unsigned char)0b01010000,\n-      \/* 15       *\/ (unsigned char)0b01110000 ) };\n-\n-    static const unsigned char VEC_ALIGN bitposLUT_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, (unsigned char)0x80,\n-      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) };\n-\n-    static const unsigned char VEC_ALIGN pack_lshift_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      0, 6, 4, 2, 0, 6, 4, 2, 0, 6, 4, 2, 0, 6, 4, 2 ) };\n-\n-    static const unsigned char VEC_ALIGN pack_rshift_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-      0, 2, 4, 0, 0, 2, 4, 0, 0, 2, 4, 0, 0, 2, 4, 0 ) };\n-\n-    \/\/ The first 4 index values are \"don't care\" because\n-    \/\/ we only use the first 12 bytes of the vector,\n-    \/\/ which are decoded from 16 bytes of Base64 characters.\n-    static const unsigned char VEC_ALIGN pack_permute_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-       0, 0, 0, 0,\n-       0,  1,  2,\n-       4,  5,  6,\n-       8,  9, 10,\n-      12, 13, 14 ) };\n-\n-    static const unsigned char VEC_ALIGN p10_pack_permute_val[16] = {\n-      ARRAY_TO_LXV_ORDER(\n-       0,  0,  0,  0,  7,  6,  5,  4,\n-       3,  2, 15, 14, 13, 12, 11, 10 ) };\n-\n-    \/\/ loop_unrolls needs to be a power of two so that the rounding can be\n-    \/\/ done using a mask.\n-    \/\/\n-    \/\/ The amount of loop unrolling was determined by running a benchmark\n-    \/\/ that decodes a 20k block of Base64 data on a Power9 machine:\n-    \/\/ loop_unrolls = 1 :\n-    \/\/ (min, avg, max) = (108639.215, 110530.479, 110779.920), stdev = 568.437\n-    \/\/ loop_unrolls = 2 :\n-    \/\/ (min, avg, max) = (108259.029, 110174.202, 110399.642), stdev = 561.729\n-    \/\/ loop_unrolls = 4 :\n-    \/\/ (min, avg, max) = (106514.175, 108373.110, 108514.786), stdev = 392.237\n-    \/\/ loop_unrolls = 8 :\n-    \/\/ (min, avg, max) = (106281.283, 108316.668, 108539.953), stdev = 553.938\n-    \/\/ loop_unrolls = 16 :\n-    \/\/ (min, avg, max) = (108580.768, 110631.161, 110766.237), stdev = 430.510\n-    \/\/\n-    \/\/ Comparing only the max values, there's no reason to go past\n-    \/\/ loop_unrolls = 1.  Performance at loop_unrolls = 16 is similar but\n-    \/\/ has the disadvantage of requiring a larger minimum block of data to\n-    \/\/ work with.  A value of 1 gives a minimum of (16 + 12) = 28 bytes\n-    \/\/ before the intrinsic will decode any data.  See the reason for the\n-    \/\/ +12 in the following logic.\n-    const unsigned loop_unrolls = 1;\n-\n-    const unsigned vec_size = 16; \/\/ size of vector registers in bytes\n-    const unsigned block_size = vec_size * loop_unrolls;  \/\/ number of bytes to process in each pass through the loop\n-    const unsigned block_size_shift = exact_log2(block_size);\n+    typedef struct {\n+      signed char offsetLUT_val[16];\n+      signed char offsetLUT_URL_val[16];\n+      unsigned char maskLUT_val[16];\n+      unsigned char maskLUT_URL_val[16];\n+      unsigned char bitposLUT_val[16];\n+      unsigned char table_32_47_val[16];\n+      unsigned char table_32_47_URL_val[16];\n+      unsigned char table_48_63_val[16];\n+      unsigned char table_64_79_val[16];\n+      unsigned char table_80_95_val[16];\n+      unsigned char table_80_95_URL_val[16];\n+      unsigned char table_96_111_val[16];\n+      unsigned char table_112_127_val[16];\n+      unsigned char pack_lshift_val[16];\n+      unsigned char pack_rshift_val[16];\n+      unsigned char pack_permute_val[16];\n+    } constant_block;\n+\n+    static const constant_block VEC_ALIGN const_block = {\n+\n+      .offsetLUT_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        0,   0, PLS, DIG,  UC,  UC,  LC,  LC,\n+        0,   0,   0,   0,   0,   0,   0,   0 ) },\n+\n+      .offsetLUT_URL_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        0,   0, HYP, DIG,  UC,  UC,  LC,  LC,\n+        0,   0,   0,   0,   0,   0,   0,   0 ) },\n+\n+      .maskLUT_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        \/* 0        *\/ (unsigned char)0b10101000,\n+        \/* 1 .. 9   *\/ (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n+                       (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n+                       (unsigned char)0b11111000,\n+        \/* 10       *\/ (unsigned char)0b11110000,\n+        \/* 11       *\/ (unsigned char)0b01010100,\n+        \/* 12 .. 14 *\/ (unsigned char)0b01010000, (unsigned char)0b01010000, (unsigned char)0b01010000,\n+        \/* 15       *\/ (unsigned char)0b01010100 ) },\n+\n+      .maskLUT_URL_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        \/* 0        *\/ (unsigned char)0b10101000,\n+        \/* 1 .. 9   *\/ (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n+                       (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000, (unsigned char)0b11111000,\n+                       (unsigned char)0b11111000,\n+        \/* 10       *\/ (unsigned char)0b11110000,\n+        \/* 11 .. 12 *\/ (unsigned char)0b01010000, (unsigned char)0b01010000,\n+        \/* 13       *\/ (unsigned char)0b01010100,\n+        \/* 14       *\/ (unsigned char)0b01010000,\n+        \/* 15       *\/ (unsigned char)0b01110000 ) },\n+\n+      .bitposLUT_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, (unsigned char)0x80,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) },\n+\n+      \/\/ In the following table_*_val constants, a 0 value means the\n+      \/\/ character is not in the Base64 character set\n+      .table_32_47_val = {\n+        ARRAY_TO_LXV_ORDER (\n+         \/* space .. '*' = 0 *\/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \/* '+' = 62 *\/ VB64(62), \/* ',' .. '.' = 0 *\/ 0, 0, 0, \/* '\/' = 63 *\/ VB64(63) ) },\n+\n+      .table_32_47_URL_val = {\n+        ARRAY_TO_LXV_ORDER(\n+         \/* space .. ',' = 0 *\/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \/* '-' = 62 *\/ VB64(62), \/* '.' .. '\/' *\/ 0, 0 ) },\n+\n+      .table_48_63_val = {\n+        ARRAY_TO_LXV_ORDER(\n+         \/* '0' .. '9' = 52 .. 61 *\/ VB64(52), VB64(53), VB64(54), VB64(55), VB64(56), VB64(57), VB64(58), VB64(59), VB64(60), VB64(61),\n+         \/* ':' .. '?' = 0 *\/ 0, 0, 0, 0, 0, 0 ) },\n+\n+      .table_64_79_val = {\n+        ARRAY_TO_LXV_ORDER(\n+         \/* '@' = 0 *\/ 0, \/* 'A' .. 'O' = 0 .. 14 *\/ VB64(0), VB64(1), VB64(2), VB64(3), VB64(4), VB64(5), VB64(6), VB64(7), VB64(8),\n+         VB64(9), VB64(10), VB64(11), VB64(12), VB64(13), VB64(14) ) },\n+\n+      .table_80_95_val = {\n+        ARRAY_TO_LXV_ORDER(\/* 'P' .. 'Z' = 15 .. 25 *\/ VB64(15), VB64(16), VB64(17), VB64(18), VB64(19), VB64(20), VB64(21), VB64(22),\n+        VB64(23), VB64(24), VB64(25), \/* '[' .. '_' = 0 *\/ 0, 0, 0, 0, 0 ) },\n+\n+      .table_80_95_URL_val = {\n+        ARRAY_TO_LXV_ORDER(\/* 'P' .. 'Z' = 15 .. 25 *\/ VB64(15), VB64(16), VB64(17), VB64(18), VB64(19), VB64(20), VB64(21), VB64(22),\n+        VB64(23), VB64(24), VB64(25), \/* '[' .. '^' = 0 *\/ 0, 0, 0, 0, \/* '_' = 63 *\/ VB64(63) ) },\n+\n+      .table_96_111_val = {\n+        ARRAY_TO_LXV_ORDER(\/* '`' = 0 *\/ 0, \/* 'a' .. 'o' = 26 .. 40 *\/ VB64(26), VB64(27), VB64(28), VB64(29), VB64(30), VB64(31),\n+        VB64(32), VB64(33), VB64(34), VB64(35), VB64(36), VB64(37), VB64(38), VB64(39), VB64(40) ) },\n+\n+      .table_112_127_val = {\n+        ARRAY_TO_LXV_ORDER(\/* 'p' .. 'z' = 41 .. 51 *\/ VB64(41), VB64(42), VB64(43), VB64(44), VB64(45), VB64(46), VB64(47), VB64(48),\n+        VB64(49), VB64(50), VB64(51), \/* '{' .. DEL = 0 *\/ 0, 0, 0, 0, 0 ) },\n+\n+      .pack_lshift_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        0, 6, 4, 2, 0, 6, 4, 2, 0, 6, 4, 2, 0, 6, 4, 2 ) },\n+\n+      .pack_rshift_val = {\n+        ARRAY_TO_LXV_ORDER(\n+        0, 2, 4, 0, 0, 2, 4, 0, 0, 2, 4, 0, 0, 2, 4, 0 ) },\n+\n+      \/\/ The first 4 index values are \"don't care\" because\n+      \/\/ we only use the first 12 bytes of the vector,\n+      \/\/ which are decoded from 16 bytes of Base64 characters.\n+      .pack_permute_val = {\n+        ARRAY_TO_LXV_ORDER(\n+         0, 0, 0, 0,\n+         0,  1,  2,\n+         4,  5,  6,\n+         8,  9, 10,\n+        12, 13, 14 ) }\n+    };\n+\n+    const unsigned block_size = 16;  \/\/ number of bytes to process in each pass through the loop\n+    const unsigned block_size_shift = 4;\n@@ -3778,2 +3812,0 @@\n-    \/\/ P10+\n-    VectorRegister  vec_0x3fs               = VR4; \/\/ safe to reuse pack_rshift's register\n@@ -3789,2 +3821,9 @@\n-    \/\/ Variables for lookup\n-    \/\/ VR\n+    \/\/ P10 (or later) VSR lookup constants\n+    VectorSRegister table_32_47             = VSR0;\n+    VectorSRegister table_48_63             = VSR1;\n+    VectorSRegister table_64_79             = VSR2;\n+    VectorSRegister table_80_95             = VSR3;\n+    VectorSRegister table_96_111            = VSR4;\n+    VectorSRegister table_112_127           = VSR6;\n+\n+    \/\/ Data read in and later converted\n@@ -3792,0 +3831,4 @@\n+    \/\/ Variable for testing Base64 validity\n+    VectorRegister  non_match               = VR10;\n+\n+    \/\/ P9 VR Variables for lookup\n@@ -3795,1 +3838,0 @@\n-    VectorRegister  non_match               = VR10;\n@@ -3797,1 +3839,1 @@\n-    \/\/ VSR\n+    \/\/ P9 VSR lookup variables\n@@ -3802,0 +3844,4 @@\n+    \/\/ P10 (or later) VSR lookup variables\n+    VectorSRegister  xlate_a                = VSR7;\n+    VectorSRegister  xlate_b                = VSR8;\n+\n@@ -3806,1 +3852,1 @@\n-    VectorRegister  gathered                = VR9;  \/\/ reuse offsets's register\n+    VectorRegister  gathered                = VR10; \/\/ reuse non_match's register\n@@ -3808,1 +3854,1 @@\n-    Label not_URL, calculate_size, unrolled_loop_start, unrolled_loop_exit, return_zero;\n+    Label not_URL, calculate_size, loop_start, loop_exit, return_zero;\n@@ -3827,1 +3873,1 @@\n-    \/\/ Load CTR with the number of passes through the unrolled loop\n+    \/\/ Load CTR with the number of passes through the loop\n@@ -3839,12 +3885,5 @@\n-    __ load_const_optimized(const_ptr, (address)&bitposLUT_val, tmp_reg);\n-    __ lxv(bitposLUT, 0, const_ptr);\n-    if (PowerArchitecturePPC64 >= 10) {\n-        __ load_const_optimized(const_ptr, (address)&p10_pack_permute_val, tmp_reg);\n-    } else {\n-        __ load_const_optimized(const_ptr, (address)&pack_rshift_val, tmp_reg);\n-        __ lxv(pack_rshift->to_vsr(), 0, const_ptr);\n-        __ load_const_optimized(const_ptr, (address)&pack_lshift_val, tmp_reg);\n-        __ lxv(pack_lshift->to_vsr(), 0, const_ptr);\n-        __ load_const_optimized(const_ptr, (address)&pack_permute_val, tmp_reg);\n-    }\n-    __ lxv(pack_permute, 0, const_ptr);\n+    __ load_const_optimized(const_ptr, (address)&const_block, tmp_reg);\n+    __ lxv(bitposLUT, BLK_OFFSETOF(bitposLUT_val), const_ptr);\n+    __ lxv(pack_rshift->to_vsr(), BLK_OFFSETOF(pack_rshift_val), const_ptr);\n+    __ lxv(pack_lshift->to_vsr(), BLK_OFFSETOF(pack_lshift_val), const_ptr);\n+    __ lxv(pack_permute, BLK_OFFSETOF(pack_permute_val), const_ptr);\n@@ -3854,1 +3893,0 @@\n-    __ xxspltib(vec_4s->to_vsr(), 4);\n@@ -3856,1 +3894,0 @@\n-    __ xxspltib(vec_0xfs, 0xf);\n@@ -3858,1 +3895,17 @@\n-        __ xxspltib(vec_0x3fs->to_vsr(), 0x3f);\n+      \/\/ Using VALID_B64 for the offsets effectively strips the upper bit\n+      \/\/ of each byte that was selected from the table.  Setting the upper\n+      \/\/ bit gives us a way to distinguish between the 6-bit value of 0\n+      \/\/ from an error code of 0, which will happen if the character is\n+      \/\/ outside the range of the lookup, or is an illegal Base64\n+      \/\/ character, such as %.\n+      __ xxspltib(offsets->to_vsr(), VALID_B64);\n+\n+      __ lxv(table_48_63, BLK_OFFSETOF(table_48_63_val), const_ptr);\n+      __ lxv(table_64_79, BLK_OFFSETOF(table_64_79_val), const_ptr);\n+      __ lxv(table_80_95, BLK_OFFSETOF(table_80_95_val), const_ptr);\n+      __ lxv(table_96_111, BLK_OFFSETOF(table_96_111_val), const_ptr);\n+      __ lxv(table_112_127, BLK_OFFSETOF(table_112_127_val), const_ptr);\n+    } else {\n+      __ xxspltib(vec_4s->to_vsr(), 4);\n+      __ xxspltib(vec_0xfs, 0xf);\n+      __ lxv(bitposLUT, BLK_OFFSETOF(bitposLUT_val), const_ptr);\n@@ -3867,6 +3920,9 @@\n-    __ load_const_optimized(const_ptr, (address)&offsetLUT_URL_val, tmp_reg);\n-    __ lxv(offsetLUT, 0, const_ptr);\n-    __ load_const_optimized(const_ptr, (address)&maskLUT_URL_val, tmp_reg);\n-    __ lxv(maskLUT, 0, const_ptr);\n-    __ xxspltib(vec_special_case_char->to_vsr(), '_');\n-    __ xxspltib(vec_special_case_offset, (unsigned char)US);\n+    if (PowerArchitecturePPC64 >= 10) {\n+      __ lxv(table_32_47, BLK_OFFSETOF(table_32_47_URL_val), const_ptr);\n+      __ lxv(table_80_95, BLK_OFFSETOF(table_80_95_URL_val), const_ptr);\n+    } else {\n+      __ lxv(offsetLUT, BLK_OFFSETOF(offsetLUT_URL_val), const_ptr);\n+      __ lxv(maskLUT, BLK_OFFSETOF(maskLUT_URL_val), const_ptr);\n+      __ xxspltib(vec_special_case_char->to_vsr(), '_');\n+      __ xxspltib(vec_special_case_offset, (unsigned char)US);\n+    }\n@@ -3877,6 +3933,9 @@\n-    __ load_const_optimized(const_ptr, (address)&offsetLUT_val, tmp_reg);\n-    __ lxv(offsetLUT, 0, const_ptr);\n-    __ load_const_optimized(const_ptr, (address)&maskLUT_val, tmp_reg);\n-    __ lxv(maskLUT, 0, const_ptr);\n-    __ xxspltib(vec_special_case_char->to_vsr(), '\/');\n-    __ xxspltib(vec_special_case_offset, (unsigned char)SLS);\n+    if (PowerArchitecturePPC64 >= 10) {\n+      __ lxv(table_32_47, BLK_OFFSETOF(table_32_47_val), const_ptr);\n+      __ lxv(table_80_95, BLK_OFFSETOF(table_80_95_val), const_ptr);\n+    } else {\n+      __ lxv(offsetLUT, BLK_OFFSETOF(offsetLUT_val), const_ptr);\n+      __ lxv(maskLUT, BLK_OFFSETOF(maskLUT_val), const_ptr);\n+      __ xxspltib(vec_special_case_char->to_vsr(), '\/');\n+      __ xxspltib(vec_special_case_offset, (unsigned char)SLS);\n+    }\n@@ -3893,160 +3952,2 @@\n-    __ bind(unrolled_loop_start);\n-    for (unsigned unroll_cnt=0; unroll_cnt < loop_unrolls; unroll_cnt++) {\n-        \/\/ We can use a static displacement in the load since it's always a\n-        \/\/ multiple of 16, which is a requirement of lxv\/stxv.  This saves\n-        \/\/ an addi instruction.\n-        __ lxv(input->to_vsr(), unroll_cnt * 16, in);\n-        \/\/\n-        \/\/ Lookup\n-        \/\/\n-        \/\/ Isolate the upper 4 bits of each character by shifting it right 4 bits\n-        __ vsrb(higher_nibble, input, vec_4s);\n-        \/\/ Isolate the lower 4 bits by masking\n-        __ xxland(lower_nibble, input->to_vsr(), vec_0xfs);\n-\n-        \/\/ Get the offset (the value to subtract from the byte) by using\n-        \/\/ a lookup table indexed by the upper 4 bits of the character\n-        __ xxperm(offsets->to_vsr(), offsetLUT, higher_nibble->to_vsr());\n-\n-        \/\/ Find out which elements are the special case character (isURL ? '\/' : '-')\n-        __ vcmpequb(eq_special_case_char, input, vec_special_case_char);\n-\n-        \/\/ For each character in the input which is a special case\n-        \/\/ character, replace its offset with one that is special for that\n-        \/\/ character.\n-        __ xxsel(offsets->to_vsr(), offsets->to_vsr(), vec_special_case_offset, eq_special_case_char->to_vsr());\n-\n-        \/\/ Use the lower_nibble to select a mask \"M\" from the lookup table.\n-        __ xxperm(M, maskLUT, lower_nibble);\n-\n-        \/\/ \"bit\" is used to isolate which of the bits in M is relevant.\n-        __ xxperm(bit, bitposLUT, higher_nibble->to_vsr());\n-\n-        \/\/ Each element of non_match correspond to one each of the 16 input\n-        \/\/ characters.  Those elements that become 0x00 after the xxland\n-        \/\/ instuction are invalid Base64 characters.\n-        __ xxland(non_match->to_vsr(), M, bit);\n-\n-        \/\/ Compare each element to zero\n-        \/\/\n-        \/\/ vmcmpequb_ sets the EQ bit of CCR6 if no elements compare equal.\n-        \/\/ Any element comparing equal to zero means there is an error in\n-        \/\/ that element.  Note that the comparison result register\n-        \/\/ non_match is not referenced again.  Only CCR6-EQ matters.\n-        __ vcmpequb_(non_match, non_match, vec_0s);\n-        __ bne_predict_not_taken(CCR6, unrolled_loop_exit);\n-\n-        \/\/ The Base64 characters had no errors, so add the offsets\n-        __ vaddubm(input, input, offsets);\n-\n-        \/\/ Pack\n-        \/\/\n-        \/\/ In the tables below, b0, b1, .. b15 are the bytes of decoded\n-        \/\/ binary data, the first line of each of the cells (except for\n-        \/\/ the constants) uses the bit-field nomenclature from the\n-        \/\/ above-linked paper, whereas the second line is more specific\n-        \/\/ about which exact bits are present, and is constructed using the\n-        \/\/ Power ISA 3.x document style, where:\n-        \/\/\n-        \/\/ * The specifier after the colon depicts which bits are there.\n-        \/\/ * The bit numbering is big endian style (bit 0 is the most\n-        \/\/   significant).\n-        \/\/ * || is a concatenate operator.\n-        \/\/ * Strings of 0's are a field of zeros with the shown length, and\n-        \/\/   likewise for strings of 1's.\n-\n-        if (PowerArchitecturePPC64 >= 10) {\n-            \/\/ Note that only e8..e15 are shown here because the extract bit\n-            \/\/ pattern is the same in e0..e7.\n-            \/\/\n-            \/\/ +===============+=============+======================+======================+=============+=============+======================+======================+=============+\n-            \/\/ |    Vector     |     e8      |          e9          |         e10          |     e11     |     e12     |         e13          |         e14          |     e15     |\n-            \/\/ |    Element    |             |                      |                      |             |             |                      |                      |             |\n-            \/\/ +===============+=============+======================+======================+=============+=============+======================+======================+=============+\n-            \/\/ | after vaddudb |  00hhhhhh   |       00gggggg       |       00ffffff       |  00eeeeee   |  00dddddd   |       00cccccc       |       00bbbbbb       |  00aaaaaa   |\n-            \/\/ |               | 00||b5:2..7 | 00||b4:4..7||b5:0..1 | 00||b3:6..7||b4:0..3 | 00||b3:0..5 | 00||b2:2..7 | 00||b1:4..7||b2:0..1 | 00||b0:6..7||b1:0..3 | 00||b0:0..5 |\n-            \/\/ +---------------+-------------+----------------------+----------------------+-------------+-------------+----------------------+----------------------+-------------+\n-            \/\/ |  after xxbrd  |  00aaaaaa   |       00bbbbbb       |       00cccccc       |  00dddddd   |  00eeeeee   |       00ffffff       |       00gggggg       |  00hhhhhh   |\n-            \/\/ |               | 00||b0:0..5 | 00||b0:6..7||b1:0..3 | 00||b1:4..7||b2:0..1 | 00||b2:2..7 | 00||b3:0..5 | 00||b3:6..7||b4:0..3 | 00||b4:4..7||b5:0..1 | 00||b5:2..7 |\n-            \/\/ +---------------+-------------+----------------------+----------------------+-------------+-------------+----------------------+----------------------+-------------+\n-            \/\/ |   vec_0x3fs   |  00111111   |       00111111       |       00111111       |  00111111   |  00111111   |       00111111       |       00111111       |  00111111   |\n-            \/\/ +---------------+-------------+----------------------+----------------------+-------------+-------------+----------------------+----------------------+-------------+\n-            \/\/ | after vpextd  |  00000000   |       00000000       |       aaaaaabb       |  bbbbcccc   |  ccdddddd   |       eeeeeeff       |       ffffgggg       |  gghhhhhh   |\n-            \/\/ |               |  00000000   |       00000000       |       b0:0..7        |   b1:0..7   |   b2:0..7   |       b3:0..7        |       b4:0..7        |   b5:0..7   |\n-            \/\/ +===============+=============+======================+======================+=============+=============+======================+======================+=============+\n-\n-            __ xxbrd(input->to_vsr(), input->to_vsr());\n-            __ vpextd(gathered, input, vec_0x3fs);\n-\n-            \/\/ Final rearrangement of bytes into their correct positions.\n-            \/\/ +==================+====+====+====+====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+=====+=====+\n-            \/\/ |      Vector      | e0 | e1 | e2 | e3 | e4  | e5  | e6  | e7  | e8 | e9 | e10 | e11 | e12 | e13 | e14 | e15 |\n-            \/\/ |     Elements     |    |    |    |    |     |     |     |     |    |    |     |     |     |     |     |     |\n-            \/\/ +==================+====+====+====+====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+=====+=====+\n-            \/\/ |   after vpextd   | 0  | 0  | b6 | b7 | b8  | b9  | b10 | b11 | 0  | 0  | b0  | b1  | b2  | b3  | b4  | b5  |\n-            \/\/ +------------------+----+----+----+----+-----+-----+-----+-----+----+----+-----+-----+-----+-----+-----+-----+\n-            \/\/ | p10_pack_permute | 0  | 0  | 0  | 0  |  7  |  6  |  5  |  4  | 3  | 2  | 15  | 14  | 13  | 12  | 11  | 10  |\n-            \/\/ +------------------+----+----+----+----+-----+-----+-----+-----+----+----+-----+-----+-----+-----+-----+-----+\n-            \/\/ |   after xxperm   | 0  | 0  | 0  | 0  | b11 | b10 | b9  | b8  | b7 | b6 | b5  | b4  | b3  | b2  | b1  | b0  |\n-            \/\/ +==================+====+====+====+====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+=====+=====+\n-\n-        } else {\n-            \/\/ Note that only e12..e15 are shown here because the shifting\n-            \/\/ and OR'ing pattern replicates for e8..e11, e4..7, and\n-            \/\/ e0..e3.\n-            \/\/\n-            \/\/ +======================+=================+======================+======================+=============+\n-            \/\/ |        Vector        |       e12       |         e13          |         e14          |     e15     |\n-            \/\/ |       Element        |                 |                      |                      |             |\n-            \/\/ +======================+=================+======================+======================+=============+\n-            \/\/ |    after vaddubm     |    00dddddd     |       00cccccc       |       00bbbbbb       |  00aaaaaa   |\n-            \/\/ |                      |   00||b2:2..7   | 00||b1:4..7||b2:0..1 | 00||b0:6..7||b1:0..3 | 00||b0:0..5 |\n-            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n-            \/\/ |     pack_lshift      |                 |         << 6         |         << 4         |    << 2     |\n-            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n-            \/\/ |     l after vslb     |    00dddddd     |       cc000000       |       bbbb0000       |  aaaaaa00   |\n-            \/\/ |                      |   00||b2:2..7   |   b2:0..1||000000    |    b1:0..3||0000     | b0:0..5||00 |\n-            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n-            \/\/ |     l after vslo     |    cc000000     |       bbbb0000       |       aaaaaa00       |  00000000   |\n-            \/\/ |                      | b2:0..1||000000 |    b1:0..3||0000     |     b0:0..5||00      |  00000000   |\n-            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n-            \/\/ |     pack_rshift      |                 |         >> 2         |         >> 4         |             |\n-            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n-            \/\/ |     r after vsrb     |    00dddddd     |       0000cccc       |       000000bb       |  00aaaaaa   |\n-            \/\/ |                      |   00||b2:2..7   |    0000||b1:4..7     |   000000||b0:6..7    | 00||b0:0..5 |\n-            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n-            \/\/ | gathered after xxlor |    ccdddddd     |       bbbbcccc       |       aaaaaabb       |  00aaaaaa   |\n-            \/\/ |                      |     b2:0..7     |       b1:0..7        |       b0:0..7        | 00||b0:0..5 |\n-            \/\/ +======================+=================+======================+======================+=============+\n-            \/\/\n-            \/\/ Note: there is a typo in the above-linked paper that shows the result of the gathering process is:\n-            \/\/ [ddddddcc|bbbbcccc|aaaaaabb]\n-            \/\/ but should be:\n-            \/\/ [ccdddddd|bbbbcccc|aaaaaabb]\n-            \/\/\n-            __ vslb(l, input, pack_lshift);\n-            \/\/ vslo of vec_8s shifts the vector by one octet toward lower\n-            \/\/ element numbers, discarding element 0.  This means it actually\n-            \/\/ shifts to the right (not left) according to the order of the\n-            \/\/ table above.\n-            __ vslo(l, l, vec_8s);\n-            __ vsrb(r, input, pack_rshift);\n-            __ xxlor(gathered->to_vsr(), l->to_vsr(), r->to_vsr());\n-\n-            \/\/ Final rearrangement of bytes into their correct positions.\n-            \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n-            \/\/ |    Vector    |  e0  |  e1  |  e2  |  e3  | e4  | e5  | e6 | e7 | e8 | e9 | e10 | e11 | e12 | e13 | e14 | e15 |\n-            \/\/ |   Elements   |      |      |      |      |     |     |    |    |    |    |     |     |     |     |     |     |\n-            \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n-            \/\/ | after xxlor  | b11  | b10  |  b9  |  xx  | b8  | b7  | b6 | xx | b5 | b4 | b3  | xx  | b2  | b1  | b0  | xx  |\n-            \/\/ +--------------+------+------+------+------+-----+-----+----+----+----+----+-----+-----+-----+-----+-----+-----+\n-            \/\/ | pack_permute |  0   |  0   |  0   |  0   |  0  |  1  | 2  | 4  | 5  | 6  |  8  |  9  | 10  | 12  | 13  | 14  |\n-            \/\/ +--------------+------+------+------+------+-----+-----+----+----+----+----+-----+-----+-----+-----+-----+-----+\n-            \/\/ | after xxperm | b11* | b11* | b11* | b11* | b11 | b10 | b9 | b8 | b7 | b6 | b5  | b4  | b3  | b2  | b1  | b0  |\n-            \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n-            \/\/ xx bytes are not used to form the final data\n-            \/\/ b0..b15 are the decoded and reassembled 8-bit bytes of data\n-            \/\/ b11 with asterisk is a \"don't care\", because these bytes will be\n-            \/\/ overwritten on the next iteration.\n-        }\n-        __ xxperm(gathered->to_vsr(), gathered->to_vsr(), pack_permute);\n+    __ bind(loop_start);\n+    __ lxv(input->to_vsr(), 0, in); \/\/ offset=0\n@@ -4054,8 +3955,42 @@\n-        \/\/ We cannot use a static displacement on the store, since it's a\n-        \/\/ multiple of 12, not 16.  Note that this stxv instruction actually\n-        \/\/ writes 16 bytes, even though only the first 12 are valid data.\n-        __ stxv(gathered->to_vsr(), 0, out);\n-        __ addi(out, out, 12);\n-    }\n-    __ addi(in, in, 16 * loop_unrolls);\n-    __ bdnz(unrolled_loop_start);\n+    \/\/\n+    \/\/ Lookup\n+    \/\/\n+    if (PowerArchitecturePPC64 >= 10) {\n+      \/\/ Use xxpermx to do a lookup of each Base64 character in the\n+      \/\/ input vector and translate it to a 6-bit value + 0x80.\n+      \/\/ Characters which are not valid Base64 characters will result\n+      \/\/ in a zero in the corresponding byte.\n+      \/\/\n+      \/\/ Note that due to align(32) call above, the xxpermx instructions do\n+      \/\/ not require align_prefix() calls, since the final xxpermx\n+      \/\/ prefix+opcode is at byte 24.\n+      __ xxpermx(xlate_a, table_32_47, table_48_63, input->to_vsr(), 1);    \/\/ offset=4\n+      __ xxpermx(xlate_b, table_64_79, table_80_95, input->to_vsr(), 2);    \/\/ offset=12\n+      __ xxlor(xlate_b, xlate_a, xlate_b);                                  \/\/ offset=20\n+      __ xxpermx(xlate_a, table_96_111, table_112_127, input->to_vsr(), 3); \/\/ offset=24\n+      __ xxlor(input->to_vsr(), xlate_a, xlate_b);\n+      \/\/ Check for non-Base64 characters by comparing each byte to zero.\n+      __ vcmpequb_(non_match, input, vec_0s);\n+    } else {\n+      \/\/ Isolate the upper 4 bits of each character by shifting it right 4 bits\n+      __ vsrb(higher_nibble, input, vec_4s);\n+      \/\/ Isolate the lower 4 bits by masking\n+      __ xxland(lower_nibble, input->to_vsr(), vec_0xfs);\n+\n+      \/\/ Get the offset (the value to subtract from the byte) by using\n+      \/\/ a lookup table indexed by the upper 4 bits of the character\n+      __ xxperm(offsets->to_vsr(), offsetLUT, higher_nibble->to_vsr());\n+\n+      \/\/ Find out which elements are the special case character (isURL ? '\/' : '-')\n+      __ vcmpequb(eq_special_case_char, input, vec_special_case_char);\n+\n+      \/\/ For each character in the input which is a special case\n+      \/\/ character, replace its offset with one that is special for that\n+      \/\/ character.\n+      __ xxsel(offsets->to_vsr(), offsets->to_vsr(), vec_special_case_offset, eq_special_case_char->to_vsr());\n+\n+      \/\/ Use the lower_nibble to select a mask \"M\" from the lookup table.\n+      __ xxperm(M, maskLUT, lower_nibble);\n+\n+      \/\/ \"bit\" is used to isolate which of the bits in M is relevant.\n+      __ xxperm(bit, bitposLUT, higher_nibble->to_vsr());\n@@ -4063,1 +3998,104 @@\n-    __ bind(unrolled_loop_exit);\n+      \/\/ Each element of non_match correspond to one each of the 16 input\n+      \/\/ characters.  Those elements that become 0x00 after the xxland\n+      \/\/ instuction are invalid Base64 characters.\n+      __ xxland(non_match->to_vsr(), M, bit);\n+\n+      \/\/ Compare each element to zero\n+      \/\/\n+      __ vcmpequb_(non_match, non_match, vec_0s);\n+    }\n+    \/\/ vmcmpequb_ sets the EQ bit of CCR6 if no elements compare equal.\n+    \/\/ Any element comparing equal to zero means there is an error in\n+    \/\/ that element.  Note that the comparison result register\n+    \/\/ non_match is not referenced again.  Only CCR6-EQ matters.\n+    __ bne_predict_not_taken(CCR6, loop_exit);\n+\n+    \/\/ The Base64 characters had no errors, so add the offsets, which in\n+    \/\/ the case of Power10 is a constant vector of all 0x80's (see earlier\n+    \/\/ comment where the offsets register is loaded).\n+    __ vaddubm(input, input, offsets);\n+\n+    \/\/ Pack\n+    \/\/\n+    \/\/ In the tables below, b0, b1, .. b15 are the bytes of decoded\n+    \/\/ binary data, the first line of each of the cells (except for\n+    \/\/ the constants) uses the bit-field nomenclature from the\n+    \/\/ above-linked paper, whereas the second line is more specific\n+    \/\/ about which exact bits are present, and is constructed using the\n+    \/\/ Power ISA 3.x document style, where:\n+    \/\/\n+    \/\/ * The specifier after the colon depicts which bits are there.\n+    \/\/ * The bit numbering is big endian style (bit 0 is the most\n+    \/\/   significant).\n+    \/\/ * || is a concatenate operator.\n+    \/\/ * Strings of 0's are a field of zeros with the shown length, and\n+    \/\/   likewise for strings of 1's.\n+\n+    \/\/ Note that only e12..e15 are shown here because the shifting\n+    \/\/ and OR'ing pattern replicates for e8..e11, e4..7, and\n+    \/\/ e0..e3.\n+    \/\/\n+    \/\/ +======================+=================+======================+======================+=============+\n+    \/\/ |        Vector        |       e12       |         e13          |         e14          |     e15     |\n+    \/\/ |       Element        |                 |                      |                      |             |\n+    \/\/ +======================+=================+======================+======================+=============+\n+    \/\/ |    after vaddubm     |    00dddddd     |       00cccccc       |       00bbbbbb       |  00aaaaaa   |\n+    \/\/ |                      |   00||b2:2..7   | 00||b1:4..7||b2:0..1 | 00||b0:6..7||b1:0..3 | 00||b0:0..5 |\n+    \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+    \/\/ |     pack_lshift      |                 |         << 6         |         << 4         |    << 2     |\n+    \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+    \/\/ |     l after vslb     |    00dddddd     |       cc000000       |       bbbb0000       |  aaaaaa00   |\n+    \/\/ |                      |   00||b2:2..7   |   b2:0..1||000000    |    b1:0..3||0000     | b0:0..5||00 |\n+    \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+    \/\/ |     l after vslo     |    cc000000     |       bbbb0000       |       aaaaaa00       |  00000000   |\n+    \/\/ |                      | b2:0..1||000000 |    b1:0..3||0000     |     b0:0..5||00      |  00000000   |\n+    \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+    \/\/ |     pack_rshift      |                 |         >> 2         |         >> 4         |             |\n+    \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+    \/\/ |     r after vsrb     |    00dddddd     |       0000cccc       |       000000bb       |  00aaaaaa   |\n+    \/\/ |                      |   00||b2:2..7   |    0000||b1:4..7     |   000000||b0:6..7    | 00||b0:0..5 |\n+    \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+    \/\/ | gathered after xxlor |    ccdddddd     |       bbbbcccc       |       aaaaaabb       |  00aaaaaa   |\n+    \/\/ |                      |     b2:0..7     |       b1:0..7        |       b0:0..7        | 00||b0:0..5 |\n+    \/\/ +======================+=================+======================+======================+=============+\n+    \/\/\n+    \/\/ Note: there is a typo in the above-linked paper that shows the result of the gathering process is:\n+    \/\/ [ddddddcc|bbbbcccc|aaaaaabb]\n+    \/\/ but should be:\n+    \/\/ [ccdddddd|bbbbcccc|aaaaaabb]\n+    \/\/\n+    __ vslb(l, input, pack_lshift);\n+    \/\/ vslo of vec_8s shifts the vector by one octet toward lower\n+    \/\/ element numbers, discarding element 0.  This means it actually\n+    \/\/ shifts to the right (not left) according to the order of the\n+    \/\/ table above.\n+    __ vslo(l, l, vec_8s);\n+    __ vsrb(r, input, pack_rshift);\n+    __ xxlor(gathered->to_vsr(), l->to_vsr(), r->to_vsr());\n+\n+    \/\/ Final rearrangement of bytes into their correct positions.\n+    \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n+    \/\/ |    Vector    |  e0  |  e1  |  e2  |  e3  | e4  | e5  | e6 | e7 | e8 | e9 | e10 | e11 | e12 | e13 | e14 | e15 |\n+    \/\/ |   Elements   |      |      |      |      |     |     |    |    |    |    |     |     |     |     |     |     |\n+    \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n+    \/\/ | after xxlor  | b11  | b10  |  b9  |  xx  | b8  | b7  | b6 | xx | b5 | b4 | b3  | xx  | b2  | b1  | b0  | xx  |\n+    \/\/ +--------------+------+------+------+------+-----+-----+----+----+----+----+-----+-----+-----+-----+-----+-----+\n+    \/\/ | pack_permute |  0   |  0   |  0   |  0   |  0  |  1  | 2  | 4  | 5  | 6  |  8  |  9  | 10  | 12  | 13  | 14  |\n+    \/\/ +--------------+------+------+------+------+-----+-----+----+----+----+----+-----+-----+-----+-----+-----+-----+\n+    \/\/ | after xxperm | b11* | b11* | b11* | b11* | b11 | b10 | b9 | b8 | b7 | b6 | b5  | b4  | b3  | b2  | b1  | b0  |\n+    \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n+    \/\/ xx bytes are not used to form the final data\n+    \/\/ b0..b15 are the decoded and reassembled 8-bit bytes of data\n+    \/\/ b11 with asterisk is a \"don't care\", because these bytes will be\n+    \/\/ overwritten on the next iteration.\n+    __ xxperm(gathered->to_vsr(), gathered->to_vsr(), pack_permute);\n+\n+    \/\/ We cannot use a static displacement on the store, since it's a\n+    \/\/ multiple of 12, not 16.  Note that this stxv instruction actually\n+    \/\/ writes 16 bytes, even though only the first 12 are valid data.\n+    __ stxv(gathered->to_vsr(), 0, out);\n+    __ addi(out, out, 12);\n+    __ addi(in, in, 16);\n+    __ bdnz(loop_start);\n+\n+    __ bind(loop_exit);\n@@ -4191,4 +4229,6 @@\n-\/\/ lower 32 bytes of the lookup operation.  Power10 and beyond can save the\n-\/\/ compare instruction, because the comparison is done within xxpermx\n-\/\/ itself. TODO: use xxpermx,xxpermx,vor on P10 when instruction prefixes are\n-\/\/ available in assembler_ppc.*\n+\/\/ lower 32 bytes of the lookup operation.\n+\/\/\n+\/\/ Note: it's tempting to use a xxpermx,xxpermx,vor sequence here on\n+\/\/ Power10 (or later), but experiments doing so on Power10 yielded a slight\n+\/\/ performance drop, perhaps due to the need for xxpermx instruction\n+\/\/ prefixes.\n@@ -4286,1 +4326,0 @@\n-    #define BLK_OFFSETOF(x) (offsetof(constant_block, x))\n@@ -4309,1 +4348,1 @@\n-    Register num_blocks     = R11; \/\/ number of blocks to be processed by the unrolled loop\n+    Register num_blocks     = R11; \/\/ number of blocks to be processed by the loop\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":339,"deletions":300,"binary":false,"changes":639,"status":"modified"},{"patch":"@@ -211,0 +211,5 @@\n+OptimizedEntryBlob::FrameData* OptimizedEntryBlob::frame_data_for_frame(const frame& frame) const {\n+  ShouldNotCallThis();\n+  return nullptr;\n+}\n+\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -131,0 +131,5 @@\n+  \/\/ Does the CPU supports vector constant rotate instructions?\n+  static constexpr bool supports_vector_constant_rotates(int shift) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/s390\/matcher_s390.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -356,1 +356,2 @@\n-JavaFrameAnchor* OptimizedEntryBlob::jfa_for_frame(const frame& frame) const {\n+OptimizedEntryBlob::FrameData* OptimizedEntryBlob::frame_data_for_frame(const frame& frame) const {\n+  assert(frame.is_optimized_entry_frame(), \"wrong frame\");\n@@ -358,1 +359,2 @@\n-  return reinterpret_cast<JavaFrameAnchor*>(reinterpret_cast<char*>(frame.unextended_sp()) + in_bytes(jfa_sp_offset()));\n+  return reinterpret_cast<OptimizedEntryBlob::FrameData*>(\n+    reinterpret_cast<char*>(frame.unextended_sp()) + in_bytes(_frame_data_offset));\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -161,0 +161,5 @@\n+  \/\/ Does the CPU supports vector constant rotate instructions?\n+  static constexpr bool supports_vector_constant_rotates(int shift) {\n+    return -0x80 <= shift && shift < 0x80;\n+  }\n+\n@@ -181,5 +186,1 @@\n-    bool ret_value = false;\n-    if (UseAVX > 2) {\n-      ret_value = VM_Version::supports_avx512vl();\n-    }\n-    return ret_value;\n+    return VM_Version::supports_evex();\n","filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -319,41 +319,0 @@\n-void save_java_frame_anchor(MacroAssembler* _masm, ByteSize store_offset, Register thread) {\n-  __ block_comment(\"{ save_java_frame_anchor \");\n-  \/\/ upcall->jfa._last_Java_fp = _thread->_anchor._last_Java_fp;\n-  __ movptr(rscratch1, Address(thread, JavaThread::last_Java_fp_offset()));\n-  __ movptr(Address(rsp, store_offset + JavaFrameAnchor::last_Java_fp_offset()), rscratch1);\n-\n-  \/\/ upcall->jfa._last_Java_pc = _thread->_anchor._last_Java_pc;\n-  __ movptr(rscratch1, Address(thread, JavaThread::last_Java_pc_offset()));\n-  __ movptr(Address(rsp, store_offset + JavaFrameAnchor::last_Java_pc_offset()), rscratch1);\n-\n-  \/\/ upcall->jfa._last_Java_sp = _thread->_anchor._last_Java_sp;\n-  __ movptr(rscratch1, Address(thread, JavaThread::last_Java_sp_offset()));\n-  __ movptr(Address(rsp, store_offset + JavaFrameAnchor::last_Java_sp_offset()), rscratch1);\n-  __ block_comment(\"} save_java_frame_anchor \");\n-}\n-\n-void restore_java_frame_anchor(MacroAssembler* _masm, ByteSize load_offset, Register thread) {\n-  __ block_comment(\"{ restore_java_frame_anchor \");\n-  \/\/ thread->_last_Java_sp = NULL\n-  __ movptr(Address(thread, JavaThread::last_Java_sp_offset()), NULL_WORD);\n-\n-  \/\/ ThreadStateTransition::transition_from_java(_thread, _thread_in_vm);\n-  \/\/ __ movl(Address(r15_thread, JavaThread::thread_state_offset()), _thread_in_native_trans);\n-  __ movl(Address(r15_thread, JavaThread::thread_state_offset()), _thread_in_native);\n-\n-  \/\/_thread->frame_anchor()->copy(&_anchor);\n-\/\/  _thread->_last_Java_fp = upcall->_last_Java_fp;\n-\/\/  _thread->_last_Java_pc = upcall->_last_Java_pc;\n-\/\/  _thread->_last_Java_sp = upcall->_last_Java_sp;\n-\n-  __ movptr(rscratch1, Address(rsp, load_offset + JavaFrameAnchor::last_Java_fp_offset()));\n-  __ movptr(Address(thread, JavaThread::last_Java_fp_offset()), rscratch1);\n-\n-  __ movptr(rscratch1, Address(rsp, load_offset + JavaFrameAnchor::last_Java_pc_offset()));\n-  __ movptr(Address(thread, JavaThread::last_Java_pc_offset()), rscratch1);\n-\n-  __ movptr(rscratch1, Address(rsp, load_offset + JavaFrameAnchor::last_Java_sp_offset()));\n-  __ movptr(Address(thread, JavaThread::last_Java_sp_offset()), rscratch1);\n-  __ block_comment(\"} restore_java_frame_anchor \");\n-}\n-\n@@ -445,0 +404,54 @@\n+static int compute_res_save_area_size(const CallRegs& conv) {\n+  int result_size = 0;\n+  for (int i = 0; i < conv._rets_length; i++) {\n+    VMReg reg = conv._ret_regs[i];\n+    if (reg->is_Register()) {\n+      result_size += 8;\n+    } else if (reg->is_XMMRegister()) {\n+      \/\/ Java API doesn't support vector args\n+      result_size += 16;\n+    } else {\n+      ShouldNotReachHere(); \/\/ unhandled type\n+    }\n+  }\n+  return result_size;\n+}\n+\n+static void save_java_result(MacroAssembler* _masm, const CallRegs& conv, int res_save_area_offset) {\n+  int offset = res_save_area_offset;\n+  __ block_comment(\"{ save java result \");\n+  for (int i = 0; i < conv._rets_length; i++) {\n+    VMReg reg = conv._ret_regs[i];\n+    if (reg->is_Register()) {\n+      __ movptr(Address(rsp, offset), reg->as_Register());\n+      offset += 8;\n+    } else if (reg->is_XMMRegister()) {\n+      \/\/ Java API doesn't support vector args\n+      __ movdqu(Address(rsp, offset), reg->as_XMMRegister());\n+      offset += 16;\n+    } else {\n+      ShouldNotReachHere(); \/\/ unhandled type\n+    }\n+  }\n+  __ block_comment(\"} save java result \");\n+}\n+\n+static void restore_java_result(MacroAssembler* _masm, const CallRegs& conv, int res_save_area_offset) {\n+  int offset = res_save_area_offset;\n+  __ block_comment(\"{ restore java result \");\n+  for (int i = 0; i < conv._rets_length; i++) {\n+    VMReg reg = conv._ret_regs[i];\n+    if (reg->is_Register()) {\n+      __ movptr(reg->as_Register(), Address(rsp, offset));\n+      offset += 8;\n+    } else if (reg->is_XMMRegister()) {\n+      \/\/ Java API doesn't support vector args\n+      __ movdqu(reg->as_XMMRegister(), Address(rsp, offset));\n+      offset += 16;\n+    } else {\n+      ShouldNotReachHere(); \/\/ unhandled type\n+    }\n+  }\n+  __ block_comment(\"} restore java result \");\n+}\n+\n@@ -577,6 +590,0 @@\n-struct AuxiliarySaves {\n-  JavaFrameAnchor jfa;\n-  uintptr_t thread;\n-  bool should_detach;\n-};\n-\n@@ -611,0 +618,1 @@\n+  int res_save_area_size = compute_res_save_area_size(conv);\n@@ -616,1 +624,2 @@\n-  int arg_save_area_offset   = deopt_spill_offset     + deopt_spill_size;\n+  int res_save_area_offset   = deopt_spill_offset     + deopt_spill_size;\n+  int arg_save_area_offset   = res_save_area_offset   + res_save_area_size;\n@@ -618,6 +627,2 @@\n-  int auxiliary_saves_offset = reg_save_area_offset   + reg_save_area_size;\n-  int frame_bottom_offset    = auxiliary_saves_offset + sizeof(AuxiliarySaves);\n-\n-  ByteSize jfa_offset           = in_ByteSize(auxiliary_saves_offset) + byte_offset_of(AuxiliarySaves, jfa);\n-  ByteSize thread_offset        = in_ByteSize(auxiliary_saves_offset) + byte_offset_of(AuxiliarySaves, thread);\n-  ByteSize should_detach_offset = in_ByteSize(auxiliary_saves_offset) + byte_offset_of(AuxiliarySaves, should_detach);\n+  int frame_data_offset      = reg_save_area_offset   + reg_save_area_size;\n+  int frame_bottom_offset    = frame_data_offset      + sizeof(OptimizedEntryBlob::FrameData);\n@@ -634,2 +639,2 @@\n-  \/\/      | AuxiliarySaves      |\n-  \/\/      |---------------------| = auxiliary_saves_offset\n+  \/\/      | FrameData           |\n+  \/\/      |---------------------| = frame_data_offset\n@@ -643,0 +648,3 @@\n+  \/\/      | res_save_area       |\n+  \/\/      |---------------------| = res_save_are_offset\n+  \/\/      |                     |\n@@ -653,1 +661,0 @@\n-  Label call_return;\n@@ -669,1 +676,1 @@\n-  __ block_comment(\"{ get_thread\");\n+  __ block_comment(\"{ on_entry\");\n@@ -671,1 +678,1 @@\n-  __ lea(c_rarg0, Address(rsp, should_detach_offset));\n+  __ lea(c_rarg0, Address(rsp, frame_data_offset));\n@@ -673,1 +680,1 @@\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, ProgrammableUpcallHandler::maybe_attach_and_get_thread)));\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, ProgrammableUpcallHandler::on_entry)));\n@@ -676,40 +683,1 @@\n-  __ movptr(Address(rsp, thread_offset), r15_thread);\n-  __ block_comment(\"} get_thread\");\n-\n-  \/\/ TODO:\n-  \/\/ We expect not to be coming from JNI code, but we might be.\n-  \/\/ We should figure out what our stance is on supporting that and then maybe add\n-  \/\/ some more handling here for:\n-  \/\/   - handle blocks\n-  \/\/   - check for active exceptions (and emit an error)\n-\n-  __ block_comment(\"{ safepoint poll\");\n-  __ movl(Address(r15_thread, JavaThread::thread_state_offset()), _thread_in_native_trans);\n-\n-  if (os::is_MP()) {\n-    __ membar(Assembler::Membar_mask_bits(\n-                Assembler::LoadLoad  | Assembler::StoreLoad |\n-                Assembler::LoadStore | Assembler::StoreStore));\n-   }\n-\n-  \/\/ check for safepoint operation in progress and\/or pending suspend requests\n-  Label L_after_safepoint_poll;\n-  Label L_safepoint_poll_slow_path;\n-\n-  __ safepoint_poll(L_safepoint_poll_slow_path, r15_thread, false \/* at_return *\/, false \/* in_nmethod *\/);\n-\n-  __ cmpl(Address(r15_thread, JavaThread::suspend_flags_offset()), 0);\n-  __ jcc(Assembler::notEqual, L_safepoint_poll_slow_path);\n-\n-  __ bind(L_after_safepoint_poll);\n-  __ block_comment(\"} safepoint poll\");\n-  \/\/ change thread state\n-  __ movl(Address(r15_thread, JavaThread::thread_state_offset()), _thread_in_Java);\n-\n-  __ block_comment(\"{ reguard stack check\");\n-  Label L_reguard;\n-  Label L_after_reguard;\n-  __ cmpl(Address(r15_thread, JavaThread::stack_guard_state_offset()), StackOverflow::stack_guard_yellow_reserved_disabled);\n-  __ jcc(Assembler::equal, L_reguard);\n-  __ bind(L_after_reguard);\n-  __ block_comment(\"} reguard stack check\");\n+  __ block_comment(\"} on_entry\");\n@@ -731,0 +699,10 @@\n+\n+  __ call(Address(rbx, Method::from_compiled_offset()));\n+\n+  save_java_result(_masm, conv, res_save_area_offset);\n+\n+  __ block_comment(\"{ on_exit\");\n+  __ vzeroupper();\n+  __ lea(c_rarg0, Address(rsp, frame_data_offset));\n+  \/\/ stack already aligned\n+  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, ProgrammableUpcallHandler::on_exit)));\n@@ -732,0 +710,1 @@\n+  __ block_comment(\"} on_exit\");\n@@ -733,2 +712,1 @@\n-  save_java_frame_anchor(_masm, jfa_offset, r15_thread);\n-  __ reset_last_Java_frame(r15_thread, true);\n+  restore_callee_saved_registers(_masm, abi, reg_save_area_offset);\n@@ -736,1 +714,1 @@\n-  __ call(Address(rbx, Method::from_compiled_offset()));\n+  restore_java_result(_masm, conv, res_save_area_offset);\n@@ -738,0 +716,1 @@\n+  \/\/ return value shuffle\n@@ -764,21 +743,0 @@\n-  __ bind(call_return);\n-\n-  \/\/ also sets last Java frame\n-  __ movptr(r15_thread, Address(rsp, thread_offset));\n-  \/\/ TODO corrupted thread pointer causes havoc. Can we verify it here?\n-  restore_java_frame_anchor(_masm, jfa_offset, r15_thread); \/\/ also transitions to native state\n-\n-  __ block_comment(\"{ maybe_detach_thread\");\n-  Label L_after_detach;\n-  __ cmpb(Address(rsp, should_detach_offset), 0);\n-  __ jcc(Assembler::equal, L_after_detach);\n-  __ vzeroupper();\n-  __ mov(c_rarg0, r15_thread);\n-  \/\/ stack already aligned\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, ProgrammableUpcallHandler::detach_thread)));\n-  __ reinit_heapbase();\n-  __ bind(L_after_detach);\n-  __ block_comment(\"} maybe_detach_thread\");\n-\n-  restore_callee_saved_registers(_masm, abi, reg_save_area_offset);\n-\n@@ -790,23 +748,0 @@\n-  __ block_comment(\"{ L_safepoint_poll_slow_path\");\n-  __ bind(L_safepoint_poll_slow_path);\n-  __ vzeroupper();\n-  __ mov(c_rarg0, r15_thread);\n-  \/\/ stack already aligned\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans)));\n-  __ reinit_heapbase();\n-  __ jmp(L_after_safepoint_poll);\n-  __ block_comment(\"} L_safepoint_poll_slow_path\");\n-\n-  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-  __ block_comment(\"{ L_reguard\");\n-  __ bind(L_reguard);\n-  __ vzeroupper();\n-  \/\/ stack already aligned\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, SharedRuntime::reguard_yellow_pages)));\n-  __ reinit_heapbase();\n-  __ jmp(L_after_reguard);\n-  __ block_comment(\"} L_reguard\");\n-\n-  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n@@ -842,1 +777,1 @@\n-  OptimizedEntryBlob* blob = OptimizedEntryBlob::create(name, &buffer, exception_handler_offset, receiver, jfa_offset);\n+  OptimizedEntryBlob* blob = OptimizedEntryBlob::create(name, &buffer, exception_handler_offset, receiver, in_ByteSize(frame_data_offset));\n","filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp","additions":83,"deletions":148,"binary":false,"changes":231,"status":"modified"},{"patch":"@@ -951,1 +951,1 @@\n-  \"Core multi-processor leagacy mode\",\n+  \"Core multi-processor legacy mode\",\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_ext_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"utilities\/sizes.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_ext_x86.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"memory\/universe.hpp\"\n@@ -68,0 +69,16 @@\n+#ifdef _LP64\n+\n+bool VM_Version::supports_clflush() {\n+  \/\/ clflush should always be available on x86_64\n+  \/\/ if not we are in real trouble because we rely on it\n+  \/\/ to flush the code cache.\n+  \/\/ Unfortunately, Assembler::clflush is currently called as part\n+  \/\/ of generation of the code cache flush routine. This happens\n+  \/\/ under Universe::init before the processor features are set\n+  \/\/ up. Assembler::flush calls this routine to check that clflush\n+  \/\/ is allowed. So, we give the caller a free pass if Universe init\n+  \/\/ is still in progress.\n+  assert ((!Universe::is_fully_initialized() || (_features & CPU_FLUSH) != 0), \"clflush should be available\");\n+  return true;\n+}\n+#endif\n@@ -1722,0 +1739,3 @@\n+  if (FLAG_IS_DEFAULT(UseCopySignIntrinsic)) {\n+      FLAG_SET_DEFAULT(UseCopySignIntrinsic, true);\n+  }\n@@ -1792,0 +1812,4 @@\n+  case 0xA5:\n+    \/\/ Not in Intel documentation.\n+    \/\/ 06_A5H |    | 10th Generation Intel® Core™ Processor Family based on microarchitecture code name Comet Lake S\/H\n+    return true;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"memory\/universe.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"utilities\/sizes.hpp\"\n@@ -264,1 +264,3 @@\n-                           : 28;\n+                           : 10,\n+                 serialize : 1,\n+                           : 17;\n@@ -362,1 +364,2 @@\n-    decl(HV,                \"hv\",                46) \/* Hypervisor instructions *\/\n+    decl(HV,                \"hv\",                46) \/* Hypervisor instructions *\/ \\\n+    decl(SERIALIZE,         \"serialize\",         47) \/* CPU SERIALIZE *\/\n@@ -649,0 +652,2 @@\n+      if (_cpuid_info.sef_cpuid7_edx.bits.serialize != 0)\n+        result |= CPU_SERIALIZE;\n@@ -899,0 +904,1 @@\n+  static bool supports_serialize()    { return (_features & CPU_SERIALIZE) != 0; }\n@@ -1030,13 +1036,2 @@\n-  static bool supports_clflush() {\n-    \/\/ clflush should always be available on x86_64\n-    \/\/ if not we are in real trouble because we rely on it\n-    \/\/ to flush the code cache.\n-    \/\/ Unfortunately, Assembler::clflush is currently called as part\n-    \/\/ of generation of the code cache flush routine. This happens\n-    \/\/ under Universe::init before the processor features are set\n-    \/\/ up. Assembler::flush calls this routine to check that clflush\n-    \/\/ is allowed. So, we give the caller a free pass if Universe init\n-    \/\/ is still in progress.\n-    assert ((!Universe::is_fully_initialized() || (_features & CPU_FLUSH) != 0), \"clflush should be available\");\n-    return true;\n-  }\n+\n+  static bool supports_clflush(); \/\/ Can't inline due to header file conflict\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -1219,33 +1219,0 @@\n-\n-inline uint vector_length(const Node* n) {\n-  const TypeVect* vt = n->bottom_type()->is_vect();\n-  return vt->length();\n-}\n-\n-inline uint vector_length(const MachNode* use, MachOper* opnd) {\n-  uint def_idx = use->operand_index(opnd);\n-  Node* def = use->in(def_idx);\n-  return def->bottom_type()->is_vect()->length();\n-}\n-\n-inline uint vector_length_in_bytes(const Node* n) {\n-  const TypeVect* vt = n->bottom_type()->is_vect();\n-  return vt->length_in_bytes();\n-}\n-\n-inline uint vector_length_in_bytes(const MachNode* use, MachOper* opnd) {\n-  uint def_idx = use->operand_index(opnd);\n-  Node* def = use->in(def_idx);\n-  return def->bottom_type()->is_vect()->length_in_bytes();\n-}\n-\n-inline BasicType vector_element_basic_type(const Node *n) {\n-  return n->bottom_type()->is_vect()->element_basic_type();\n-}\n-\n-inline BasicType vector_element_basic_type(const MachNode *use, MachOper* opnd) {\n-  uint def_idx = use->operand_index(opnd);\n-  Node* def = use->in(def_idx);\n-  return def->bottom_type()->is_vect()->element_basic_type();\n-}\n-\n@@ -1268,1 +1235,1 @@\n-  return vector_length_encoding(vector_length_in_bytes(n));\n+  return vector_length_encoding(Matcher::vector_length_in_bytes(n));\n@@ -1596,0 +1563,9 @@\n+    case Op_CopySignD:\n+    case Op_CopySignF:\n+      if (UseAVX < 3 || !is_LP64)  {\n+        return false;\n+      }\n+      if (!VM_Version::supports_avx512vl()) {\n+        return false;\n+      }\n+      break;\n@@ -1674,0 +1650,3 @@\n+      if (bt != T_INT && bt != T_LONG) {\n+        return false;\n+      } \/\/ fallthrough\n@@ -3337,1 +3316,1 @@\n-  predicate(vector_length_in_bytes(n) == vector_length_in_bytes(n->in(1))); \/\/ dst == src\n+  predicate(Matcher::vector_length_in_bytes(n) == Matcher::vector_length_in_bytes(n->in(1))); \/\/ dst == src\n@@ -3349,1 +3328,1 @@\n-            (vector_length_in_bytes(n->in(1)) < vector_length_in_bytes(n))); \/\/ src < dst\n+            (Matcher::vector_length_in_bytes(n->in(1)) < Matcher::vector_length_in_bytes(n))); \/\/ src < dst\n@@ -3355,2 +3334,2 @@\n-    assert(vector_length_in_bytes(this)       <= 16, \"required\");\n-    assert(vector_length_in_bytes(this, $src) <=  8, \"required\");\n+    assert(Matcher::vector_length_in_bytes(this)       <= 16, \"required\");\n+    assert(Matcher::vector_length_in_bytes(this, $src) <=  8, \"required\");\n@@ -3358,1 +3337,1 @@\n-    int src_vlen_in_bytes = vector_length_in_bytes(this, $src);\n+    int src_vlen_in_bytes = Matcher::vector_length_in_bytes(this, $src);\n@@ -3372,2 +3351,2 @@\n-            (vector_length_in_bytes(n->in(1)) == 4) && \/\/ src\n-            (vector_length_in_bytes(n->in(1)) < vector_length_in_bytes(n))); \/\/ src < dst\n+            (Matcher::vector_length_in_bytes(n->in(1)) == 4) && \/\/ src\n+            (Matcher::vector_length_in_bytes(n->in(1)) < Matcher::vector_length_in_bytes(n))); \/\/ src < dst\n@@ -3387,2 +3366,2 @@\n-            (vector_length_in_bytes(n->in(1)) > 4) && \/\/ src\n-            (vector_length_in_bytes(n->in(1)) < vector_length_in_bytes(n))); \/\/ src < dst\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 4) && \/\/ src\n+            (Matcher::vector_length_in_bytes(n->in(1)) < Matcher::vector_length_in_bytes(n))); \/\/ src < dst\n@@ -3393,1 +3372,1 @@\n-    switch (vector_length_in_bytes(this, $src)) {\n+    switch (Matcher::vector_length_in_bytes(this, $src)) {\n@@ -3404,1 +3383,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) > vector_length_in_bytes(n)); \/\/ src > dst\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) > Matcher::vector_length_in_bytes(n)); \/\/ src > dst\n@@ -3409,1 +3388,1 @@\n-    switch (vector_length_in_bytes(this)) {\n+    switch (Matcher::vector_length_in_bytes(this)) {\n@@ -3458,1 +3437,1 @@\n-  predicate(vector_length(n) < 8);\n+  predicate(Matcher::vector_length(n) < 8);\n@@ -3470,1 +3449,1 @@\n-  predicate(vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 8);\n@@ -3481,1 +3460,1 @@\n-  predicate(vector_length(n) < 8);\n+  predicate(Matcher::vector_length(n) < 8);\n@@ -3493,1 +3472,1 @@\n-  predicate(vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 8);\n@@ -3571,1 +3550,1 @@\n-    switch (vector_length_in_bytes(this)) {\n+    switch (Matcher::vector_length_in_bytes(this)) {\n@@ -3589,1 +3568,1 @@\n-    switch (vector_length_in_bytes(this, $src)) {\n+    switch (Matcher::vector_length_in_bytes(this, $src)) {\n@@ -3606,1 +3585,1 @@\n-  predicate(vector_length_in_bytes(n) <= 32);\n+  predicate(Matcher::vector_length_in_bytes(n) <= 32);\n@@ -3614,1 +3593,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -3616,1 +3595,1 @@\n-    assert(vector_length_in_bytes(this) >= 16, \"sanity\");\n+    assert(Matcher::vector_length_in_bytes(this) >= 16, \"sanity\");\n@@ -3631,1 +3610,1 @@\n-  predicate(vector_length_in_bytes(n) == 64);\n+  predicate(Matcher::vector_length_in_bytes(n) == 64);\n@@ -3639,1 +3618,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -3661,1 +3640,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this, $src);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this, $src);\n@@ -3663,1 +3642,1 @@\n-    assert(vector_length_in_bytes(this, $src) >= 16, \"sanity\");\n+    assert(Matcher::vector_length_in_bytes(this, $src) >= 16, \"sanity\");\n@@ -3680,1 +3659,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3720,1 +3699,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3745,1 +3724,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3763,1 +3742,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3802,1 +3781,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3826,1 +3805,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3843,1 +3822,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3867,1 +3846,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3884,1 +3863,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3906,1 +3885,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3939,1 +3918,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3963,1 +3942,1 @@\n-  predicate(vector_length(n) <= 4);\n+  predicate(Matcher::vector_length(n) <= 4);\n@@ -3968,1 +3947,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -3992,1 +3971,1 @@\n-  predicate(vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 8);\n@@ -4020,1 +3999,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4038,1 +4017,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4057,1 +4036,1 @@\n-    int vlen = vector_length(this);\n+    int vlen = Matcher::vector_length(this);\n@@ -4086,1 +4065,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4105,1 +4084,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4122,1 +4101,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4140,1 +4119,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4159,1 +4138,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4176,1 +4155,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -4190,1 +4169,1 @@\n-  predicate(vector_length_in_bytes(n) < 32);\n+  predicate(Matcher::vector_length_in_bytes(n) < 32);\n@@ -4195,1 +4174,1 @@\n-    assert(vector_length_in_bytes(this) >= 8, \"required\");\n+    assert(Matcher::vector_length_in_bytes(this) >= 8, \"required\");\n@@ -4197,1 +4176,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -4200,1 +4179,1 @@\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4208,1 +4187,1 @@\n-  predicate(vector_length_in_bytes(n) == 32);\n+  predicate(Matcher::vector_length_in_bytes(n) == 32);\n@@ -4214,1 +4193,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -4219,1 +4198,1 @@\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4231,1 +4210,1 @@\n-  predicate(vector_length_in_bytes(n) == 64);\n+  predicate(Matcher::vector_length_in_bytes(n) == 64);\n@@ -4238,1 +4217,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -4243,1 +4222,1 @@\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4256,1 +4235,1 @@\n-  predicate(vector_length(n) == 2);\n+  predicate(Matcher::vector_length(n) == 2);\n@@ -4261,2 +4240,2 @@\n-    assert(vector_element_basic_type(this) == T_LONG, \"\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_LONG, \"\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4270,1 +4249,1 @@\n-  predicate(vector_length(n) == 4);\n+  predicate(Matcher::vector_length(n) == 4);\n@@ -4275,2 +4254,2 @@\n-    assert(vector_element_basic_type(this) == T_LONG, \"\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_LONG, \"\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4289,1 +4268,1 @@\n-  predicate(vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 8);\n@@ -4294,2 +4273,2 @@\n-    assert(vector_element_basic_type(this) == T_LONG, \"sanity\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_LONG, \"sanity\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4308,1 +4287,1 @@\n-  predicate(vector_length(n) < 8);\n+  predicate(Matcher::vector_length(n) < 8);\n@@ -4314,2 +4293,2 @@\n-    assert(vector_element_basic_type(this) == T_FLOAT, \"sanity\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_FLOAT, \"sanity\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4323,1 +4302,1 @@\n-  predicate(vector_length(n) >= 8);\n+  predicate(Matcher::vector_length(n) >= 8);\n@@ -4328,2 +4307,2 @@\n-    assert(vector_element_basic_type(this) == T_FLOAT, \"sanity\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_FLOAT, \"sanity\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4331,1 +4310,1 @@\n-    int vlen = vector_length(this);\n+    int vlen = Matcher::vector_length(this);\n@@ -4352,1 +4331,1 @@\n-  predicate(vector_length(n) == 2);\n+  predicate(Matcher::vector_length(n) == 2);\n@@ -4358,2 +4337,2 @@\n-    assert(vector_element_basic_type(this) == T_DOUBLE, \"sanity\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_DOUBLE, \"sanity\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4368,1 +4347,1 @@\n-  predicate(vector_length(n) == 4);\n+  predicate(Matcher::vector_length(n) == 4);\n@@ -4373,2 +4352,2 @@\n-    assert(vector_element_basic_type(this) == T_DOUBLE, \"sanity\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_DOUBLE, \"sanity\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4388,1 +4367,1 @@\n-  predicate(vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 8);\n@@ -4393,2 +4372,2 @@\n-    assert(vector_element_basic_type(this) == T_DOUBLE, \"sanity\");\n-    assert($idx$$constant < (int)vector_length(this), \"out of bounds\");\n+    assert(Matcher::vector_element_basic_type(this) == T_DOUBLE, \"sanity\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this), \"out of bounds\");\n@@ -4412,1 +4391,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_INT); \/\/ src2\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_INT); \/\/ src2\n@@ -4424,1 +4403,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4434,1 +4413,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_LONG && !VM_Version::supports_avx512dq());\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_LONG && !VM_Version::supports_avx512dq());\n@@ -4446,1 +4425,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4453,1 +4432,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_LONG && VM_Version::supports_avx512dq());\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_LONG && VM_Version::supports_avx512dq());\n@@ -4465,1 +4444,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4475,1 +4454,1 @@\n-  predicate(vector_length(n->in(2)) <= 4); \/\/ src\n+  predicate(Matcher::vector_length(n->in(2)) <= 4); \/\/ src\n@@ -4482,1 +4461,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4489,1 +4468,1 @@\n-  predicate(vector_length(n->in(2)) == 8); \/\/ src\n+  predicate(Matcher::vector_length(n->in(2)) == 8); \/\/ src\n@@ -4496,1 +4475,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4503,1 +4482,1 @@\n-  predicate(vector_length(n->in(2)) == 16); \/\/ src\n+  predicate(Matcher::vector_length(n->in(2)) == 16); \/\/ src\n@@ -4510,1 +4489,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4519,1 +4498,1 @@\n-  predicate(vector_length(n->in(2)) == 2); \/\/ src\n+  predicate(Matcher::vector_length(n->in(2)) == 2); \/\/ src\n@@ -4526,1 +4505,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4533,1 +4512,1 @@\n-  predicate(vector_length(n->in(2)) == 4); \/\/ src\n+  predicate(Matcher::vector_length(n->in(2)) == 4); \/\/ src\n@@ -4540,1 +4519,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4547,1 +4526,1 @@\n-  predicate(vector_length(n->in(2)) == 8); \/\/ src\n+  predicate(Matcher::vector_length(n->in(2)) == 8); \/\/ src\n@@ -4554,1 +4533,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4564,1 +4543,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_BYTE && !VM_Version::supports_avx512bw());\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE && !VM_Version::supports_avx512bw());\n@@ -4575,1 +4554,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4582,1 +4561,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_BYTE && VM_Version::supports_avx512bw());\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE && VM_Version::supports_avx512bw());\n@@ -4593,1 +4572,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4603,1 +4582,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_SHORT); \/\/ src2\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_SHORT); \/\/ src2\n@@ -4615,1 +4594,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4624,2 +4603,2 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_BYTE &&\n-            vector_length(n->in(2)) <= 32); \/\/ src2\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE &&\n+            Matcher::vector_length(n->in(2)) <= 32); \/\/ src2\n@@ -4631,1 +4610,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4638,2 +4617,2 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_BYTE &&\n-            vector_length(n->in(2)) == 64); \/\/ src2\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE &&\n+            Matcher::vector_length(n->in(2)) == 64); \/\/ src2\n@@ -4645,1 +4624,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4655,1 +4634,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_FLOAT &&\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_FLOAT &&\n@@ -4658,1 +4637,1 @@\n-            vector_length(n->in(2)) == 2);\n+            Matcher::vector_length(n->in(2)) == 2);\n@@ -4667,1 +4646,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4676,1 +4655,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_FLOAT &&\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_FLOAT &&\n@@ -4679,1 +4658,1 @@\n-            vector_length(n->in(2)) >= 4);\n+            Matcher::vector_length(n->in(2)) >= 4);\n@@ -4688,1 +4667,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4697,2 +4676,2 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_FLOAT &&\n-            vector_length(n->in(2)) == 2);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_FLOAT &&\n+            Matcher::vector_length(n->in(2)) == 2);\n@@ -4707,1 +4686,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4717,2 +4696,2 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_FLOAT &&\n-            vector_length(n->in(2)) >= 4);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_FLOAT &&\n+            Matcher::vector_length(n->in(2)) >= 4);\n@@ -4727,1 +4706,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4739,1 +4718,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n@@ -4742,1 +4721,1 @@\n-            vector_length(n->in(2)) == 2);\n+            Matcher::vector_length(n->in(2)) == 2);\n@@ -4751,1 +4730,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4761,1 +4740,1 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n@@ -4764,1 +4743,1 @@\n-            vector_length(n->in(2)) >= 4);\n+            Matcher::vector_length(n->in(2)) >= 4);\n@@ -4773,1 +4752,1 @@\n-    int vlen = vector_length(this, $src2);\n+    int vlen = Matcher::vector_length(this, $src2);\n@@ -4784,2 +4763,2 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n-            vector_length(n->in(2)) == 2);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n+            Matcher::vector_length(n->in(2)) == 2);\n@@ -4794,1 +4773,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4804,2 +4783,2 @@\n-  predicate(vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n-            vector_length(n->in(2)) >= 4);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_DOUBLE &&\n+            Matcher::vector_length(n->in(2)) >= 4);\n@@ -4814,1 +4793,1 @@\n-    int vlen = vector_length(this, $src);\n+    int vlen = Matcher::vector_length(this, $src);\n@@ -4849,1 +4828,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -4883,1 +4862,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -4918,1 +4897,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -4952,1 +4931,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -4986,1 +4965,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5020,1 +4999,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5056,1 +5035,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5091,1 +5070,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5125,1 +5104,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5160,1 +5139,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5194,1 +5173,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5228,1 +5207,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5242,2 +5221,2 @@\n-  predicate(vector_length(n) == 4 ||\n-            vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 4 ||\n+            Matcher::vector_length(n) == 8);\n@@ -5260,1 +5239,1 @@\n-  predicate(vector_length(n) == 16 && UseAVX <= 1);\n+  predicate(Matcher::vector_length(n) == 16 && UseAVX <= 1);\n@@ -5283,1 +5262,1 @@\n-  predicate(vector_length(n) == 16 && UseAVX > 1);\n+  predicate(Matcher::vector_length(n) == 16 && UseAVX > 1);\n@@ -5301,1 +5280,1 @@\n-  predicate(vector_length(n) == 32);\n+  predicate(Matcher::vector_length(n) == 32);\n@@ -5327,1 +5306,1 @@\n-  predicate(vector_length(n) == 64);\n+  predicate(Matcher::vector_length(n) == 64);\n@@ -5377,1 +5356,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5412,1 +5391,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5437,1 +5416,1 @@\n-              (vector_length_in_bytes(n->in(1)) > 8));\n+              (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5449,1 +5428,1 @@\n-  predicate(vector_length(n) == 2 && !VM_Version::supports_avx512dq());\n+  predicate(Matcher::vector_length(n) == 2 && !VM_Version::supports_avx512dq());\n@@ -5475,1 +5454,1 @@\n-  predicate(vector_length(n) == 4 && !VM_Version::supports_avx512dq());\n+  predicate(Matcher::vector_length(n) == 4 && !VM_Version::supports_avx512dq());\n@@ -5523,1 +5502,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5557,1 +5536,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5568,1 +5547,1 @@\n-  predicate(vector_length(n) == 8);\n+  predicate(Matcher::vector_length(n) == 8);\n@@ -5586,1 +5565,1 @@\n-  predicate(vector_length(n) == 4);\n+  predicate(Matcher::vector_length(n) == 4);\n@@ -5629,1 +5608,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5663,1 +5642,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -5677,1 +5656,1 @@\n-  predicate(is_integral_type(vector_element_basic_type(n)) && vector_element_basic_type(n) != T_LONG && \/\/ T_BYTE, T_SHORT, T_INT\n+  predicate(is_integral_type(Matcher::vector_element_basic_type(n)) && Matcher::vector_element_basic_type(n) != T_LONG && \/\/ T_BYTE, T_SHORT, T_INT\n@@ -5686,1 +5665,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5693,1 +5672,1 @@\n-  predicate(is_integral_type(vector_element_basic_type(n)) && vector_element_basic_type(n) != T_LONG && \/\/ T_BYTE, T_SHORT, T_INT\n+  predicate(is_integral_type(Matcher::vector_element_basic_type(n)) && Matcher::vector_element_basic_type(n) != T_LONG && \/\/ T_BYTE, T_SHORT, T_INT\n@@ -5701,1 +5680,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5710,1 +5689,1 @@\n-  predicate(vector_length_in_bytes(n) == 16 && vector_element_basic_type(n) == T_LONG &&\n+  predicate(Matcher::vector_length_in_bytes(n) == 16 && Matcher::vector_element_basic_type(n) == T_LONG &&\n@@ -5720,1 +5699,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5729,1 +5708,1 @@\n-  predicate(vector_length_in_bytes(n) <= 32 && vector_element_basic_type(n) == T_LONG &&\n+  predicate(Matcher::vector_length_in_bytes(n) <= 32 && Matcher::vector_element_basic_type(n) == T_LONG &&\n@@ -5738,1 +5717,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5747,2 +5726,2 @@\n-  predicate((vector_length_in_bytes(n) == 64 || VM_Version::supports_avx512vl()) &&\n-            vector_element_basic_type(n) == T_LONG);\n+  predicate((Matcher::vector_length_in_bytes(n) == 64 || VM_Version::supports_avx512vl()) &&\n+            Matcher::vector_element_basic_type(n) == T_LONG);\n@@ -5757,1 +5736,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5767,2 +5746,2 @@\n-  predicate(vector_length_in_bytes(n) <= 32 &&\n-            is_floating_point_type(vector_element_basic_type(n)) && \/\/ T_FLOAT, T_DOUBLE\n+  predicate(Matcher::vector_length_in_bytes(n) <= 32 &&\n+            is_floating_point_type(Matcher::vector_element_basic_type(n)) && \/\/ T_FLOAT, T_DOUBLE\n@@ -5779,1 +5758,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5789,2 +5768,2 @@\n-  predicate(vector_length_in_bytes(n) == 64 &&\n-            is_floating_point_type(vector_element_basic_type(n))); \/\/ T_FLOAT, T_DOUBLE\n+  predicate(Matcher::vector_length_in_bytes(n) == 64 &&\n+            is_floating_point_type(Matcher::vector_element_basic_type(n))); \/\/ T_FLOAT, T_DOUBLE\n@@ -5800,1 +5779,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -5809,1 +5788,1 @@\n-\/\/ --------------------------------- Signum ---------------------------\n+\/\/ --------------------------------- Signum\/CopySign ---------------------------\n@@ -5833,0 +5812,47 @@\n+\/\/ ---------------------------------------\n+\/\/ For copySign use 0xE4 as writemask for vpternlog\n+\/\/ Desired Truth Table: A -> xmm0 bit, B -> xmm1 bit, C -> xmm2 bit\n+\/\/ C (xmm2) is set to 0x7FFFFFFF\n+\/\/ Wherever xmm2 is 0, we want to pick from B (sign)\n+\/\/ Wherever xmm2 is 1, we want to pick from A (src)\n+\/\/\n+\/\/ A B C Result\n+\/\/ 0 0 0 0\n+\/\/ 0 0 1 0\n+\/\/ 0 1 0 1\n+\/\/ 0 1 1 0\n+\/\/ 1 0 0 0\n+\/\/ 1 0 1 1\n+\/\/ 1 1 0 1\n+\/\/ 1 1 1 1\n+\/\/\n+\/\/ Result going from high bit to low bit is 0x11100100 = 0xe4\n+\/\/ ---------------------------------------\n+\n+#ifdef _LP64\n+instruct copySignF_reg(regF dst, regF src, regF tmp1, rRegI tmp2) %{\n+  match(Set dst (CopySignF dst src));\n+  effect(TEMP tmp1, TEMP tmp2);\n+  format %{ \"CopySignF $dst, $src\\t! using $tmp1 and $tmp2 as TEMP\" %}\n+  ins_encode %{\n+    __ movl($tmp2$$Register, 0x7FFFFFFF);\n+    __ movdl($tmp1$$XMMRegister, $tmp2$$Register);\n+    __ vpternlogd($dst$$XMMRegister, 0xE4, $src$$XMMRegister, $tmp1$$XMMRegister, Assembler::AVX_128bit);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct copySignD_imm(regD dst, regD src, regD tmp1, rRegL tmp2, immD zero) %{\n+  match(Set dst (CopySignD dst (Binary src zero)));\n+  ins_cost(100);\n+  effect(TEMP tmp1, TEMP tmp2);\n+  format %{ \"CopySignD  $dst, $src\\t! using $tmp1 and $tmp2 as TEMP\" %}\n+  ins_encode %{\n+    __ mov64($tmp2$$Register, 0x7FFFFFFFFFFFFFFF);\n+    __ movq($tmp1$$XMMRegister, $tmp2$$Register);\n+    __ vpternlogq($dst$$XMMRegister, 0xE4, $src$$XMMRegister, $tmp1$$XMMRegister, Assembler::AVX_128bit);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+#endif \/\/ _LP64\n+\n@@ -5847,1 +5873,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) > 8);\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) > 8);\n@@ -5871,1 +5897,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) > 8);\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) > 8);\n@@ -5898,1 +5924,1 @@\n-  predicate(vector_length(n) <= 8 && VectorNode::is_vshift_cnt(n->in(2)));\n+  predicate(Matcher::vector_length(n) <= 8 && VectorNode::is_vshift_cnt(n->in(2)));\n@@ -5918,1 +5944,1 @@\n-  predicate(vector_length(n) == 16 && VectorNode::is_vshift_cnt(n->in(2)) &&\n+  predicate(Matcher::vector_length(n) == 16 && VectorNode::is_vshift_cnt(n->in(2)) &&\n@@ -5943,1 +5969,1 @@\n-  predicate(vector_length(n) == 16 && VectorNode::is_vshift_cnt(n->in(2)) &&\n+  predicate(Matcher::vector_length(n) == 16 && VectorNode::is_vshift_cnt(n->in(2)) &&\n@@ -5964,1 +5990,1 @@\n-  predicate(vector_length(n) == 32 && VectorNode::is_vshift_cnt(n->in(2)));\n+  predicate(Matcher::vector_length(n) == 32 && VectorNode::is_vshift_cnt(n->in(2)));\n@@ -5989,1 +6015,1 @@\n-  predicate(vector_length(n) == 64 && VectorNode::is_vshift_cnt(n->in(2)));\n+  predicate(Matcher::vector_length(n) == 64 && VectorNode::is_vshift_cnt(n->in(2)));\n@@ -6034,1 +6060,1 @@\n-      int vlen = vector_length(this);\n+      int vlen = Matcher::vector_length(this);\n@@ -6065,1 +6091,1 @@\n-      int vlen = vector_length(this);\n+      int vlen = Matcher::vector_length(this);\n@@ -6091,1 +6117,1 @@\n-      int vlen = vector_length(this);\n+      int vlen = Matcher::vector_length(this);\n@@ -6118,1 +6144,1 @@\n-      assert(vector_length(this) == 2, \"\");\n+      assert(Matcher::vector_length(this) == 2, \"\");\n@@ -6137,1 +6163,1 @@\n-      assert(vector_length(this) == 2, \"\");\n+      assert(Matcher::vector_length(this) == 2, \"\");\n@@ -6153,1 +6179,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -6190,1 +6216,1 @@\n-  predicate(vector_length(n) <= 8 &&\n+  predicate(Matcher::vector_length(n) <= 8 &&\n@@ -6210,1 +6236,1 @@\n-  predicate(vector_length(n) == 16 &&\n+  predicate(Matcher::vector_length(n) == 16 &&\n@@ -6238,1 +6264,1 @@\n-  predicate(vector_length(n) == 32 &&\n+  predicate(Matcher::vector_length(n) == 32 &&\n@@ -6274,1 +6300,1 @@\n-  predicate(vector_length(n) <= 32 &&\n+  predicate(Matcher::vector_length(n) <= 32 &&\n@@ -6293,1 +6319,1 @@\n-  predicate(vector_length(n) == 64 &&\n+  predicate(Matcher::vector_length(n) == 64 &&\n@@ -6317,1 +6343,1 @@\n-  predicate(vector_length(n) <= 8 &&\n+  predicate(Matcher::vector_length(n) <= 8 &&\n@@ -6342,1 +6368,1 @@\n-  predicate(vector_length(n) == 16 &&\n+  predicate(Matcher::vector_length(n) == 16 &&\n@@ -6432,1 +6458,1 @@\n-  predicate(vector_length(n) <= 4 &&\n+  predicate(Matcher::vector_length(n) <= 4 &&\n@@ -6485,1 +6511,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -6520,1 +6546,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -6555,1 +6581,1 @@\n-            (vector_length_in_bytes(n->in(1)) > 8));\n+            (Matcher::vector_length_in_bytes(n->in(1)) > 8));\n@@ -6573,1 +6599,1 @@\n-    BasicType to_elem_bt = vector_element_basic_type(this);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n@@ -6602,2 +6628,2 @@\n-            vector_length(n->in(1)) <= 8 && \/\/ src\n-            vector_element_basic_type(n) == T_BYTE);\n+            Matcher::vector_length(n->in(1)) <= 8 && \/\/ src\n+            Matcher::vector_element_basic_type(n) == T_BYTE);\n@@ -6618,2 +6644,2 @@\n-            vector_length(n->in(1)) == 16 && \/\/ src\n-            vector_element_basic_type(n) == T_BYTE);\n+            Matcher::vector_length(n->in(1)) == 16 && \/\/ src\n+            Matcher::vector_element_basic_type(n) == T_BYTE);\n@@ -6626,1 +6652,1 @@\n-    int vlen_enc = vector_length_encoding(vector_length_in_bytes(this, $src));\n+    int vlen_enc = vector_length_encoding(Matcher::vector_length_in_bytes(this, $src));\n@@ -6636,1 +6662,1 @@\n-            (vector_length_in_bytes(n) >= vector_length_in_bytes(n->in(1)))); \/\/ dst >= src\n+            (Matcher::vector_length_in_bytes(n) >= Matcher::vector_length_in_bytes(n->in(1)))); \/\/ dst >= src\n@@ -6640,1 +6666,1 @@\n-    BasicType to_elem_bt = vector_element_basic_type(this);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n@@ -6673,2 +6699,2 @@\n-            (vector_length_in_bytes(n->in(1)) <= 16) &&\n-            (vector_length_in_bytes(n) < vector_length_in_bytes(n->in(1)))); \/\/ dst < src\n+            (Matcher::vector_length_in_bytes(n->in(1)) <= 16) &&\n+            (Matcher::vector_length_in_bytes(n) < Matcher::vector_length_in_bytes(n->in(1)))); \/\/ dst < src\n@@ -6681,1 +6707,1 @@\n-    BasicType to_elem_bt = vector_element_basic_type(this);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n@@ -6699,2 +6725,2 @@\n-            (vector_length_in_bytes(n->in(1)) == 32) &&\n-            (vector_length_in_bytes(n) < vector_length_in_bytes(n->in(1)))); \/\/ dst < src\n+            (Matcher::vector_length_in_bytes(n->in(1)) == 32) &&\n+            (Matcher::vector_length_in_bytes(n) < Matcher::vector_length_in_bytes(n->in(1)))); \/\/ dst < src\n@@ -6707,1 +6733,1 @@\n-    BasicType to_elem_bt = vector_element_basic_type(this);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n@@ -6727,1 +6753,1 @@\n-            (vector_length_in_bytes(n) >= vector_length_in_bytes(n->in(1)))); \/\/ dst >= src\n+            (Matcher::vector_length_in_bytes(n) >= Matcher::vector_length_in_bytes(n->in(1)))); \/\/ dst >= src\n@@ -6733,1 +6759,1 @@\n-    BasicType dst_elem_bt = vector_element_basic_type(this);\n+    BasicType dst_elem_bt = Matcher::vector_element_basic_type(this);\n@@ -6766,1 +6792,1 @@\n-  predicate((vector_element_basic_type(n) == T_BYTE || vector_element_basic_type(n) == T_SHORT) &&\n+  predicate((Matcher::vector_element_basic_type(n) == T_BYTE || Matcher::vector_element_basic_type(n) == T_SHORT) &&\n@@ -6774,2 +6800,2 @@\n-    int vlen = vector_length_in_bytes(this, $src);\n-    BasicType to_elem_bt  = vector_element_basic_type(this);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src);\n+    BasicType to_elem_bt  = Matcher::vector_element_basic_type(this);\n@@ -6798,3 +6824,3 @@\n-            (vector_element_basic_type(n) == T_INT ||\n-             vector_element_basic_type(n) == T_FLOAT ||\n-             vector_element_basic_type(n) == T_DOUBLE));\n+            (Matcher::vector_element_basic_type(n) == T_INT ||\n+             Matcher::vector_element_basic_type(n) == T_FLOAT ||\n+             Matcher::vector_element_basic_type(n) == T_DOUBLE));\n@@ -6804,2 +6830,2 @@\n-    BasicType to_elem_bt = vector_element_basic_type(this);\n-    int vlen = vector_length_in_bytes(this, $src);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src);\n@@ -6857,1 +6883,1 @@\n-  predicate(vector_element_basic_type(n) == T_DOUBLE);\n+  predicate(Matcher::vector_element_basic_type(n) == T_DOUBLE);\n@@ -6868,1 +6894,1 @@\n-  predicate(vector_element_basic_type(n) == T_FLOAT);\n+  predicate(Matcher::vector_element_basic_type(n) == T_FLOAT);\n@@ -6881,3 +6907,3 @@\n-  predicate(vector_length_in_bytes(n->in(1)->in(1)) >=  8 && \/\/ src1\n-            vector_length_in_bytes(n->in(1)->in(1)) <= 32 && \/\/ src1\n-            is_floating_point_type(vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1 T_FLOAT, T_DOUBLE\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)->in(1)) >=  8 && \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <= 32 && \/\/ src1\n+            is_floating_point_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1 T_FLOAT, T_DOUBLE\n@@ -6889,1 +6915,1 @@\n-    if (vector_element_basic_type(this, $src1) == T_FLOAT) {\n+    if (Matcher::vector_element_basic_type(this, $src1) == T_FLOAT) {\n@@ -6899,2 +6925,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)->in(1)) == 64 && \/\/ src1\n-            is_floating_point_type(vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1 T_FLOAT, T_DOUBLE\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)->in(1)) == 64 && \/\/ src1\n+            is_floating_point_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1 T_FLOAT, T_DOUBLE\n@@ -6908,1 +6934,1 @@\n-    if (vector_element_basic_type(this, $src1) == T_FLOAT) {\n+    if (Matcher::vector_element_basic_type(this, $src1) == T_FLOAT) {\n@@ -6922,3 +6948,3 @@\n-            vector_length_in_bytes(n->in(1)->in(1)) >=  4 && \/\/ src1\n-            vector_length_in_bytes(n->in(1)->in(1)) <= 32 && \/\/ src1\n-            is_integral_type(vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >=  4 && \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <= 32 && \/\/ src1\n+            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n@@ -6931,1 +6957,1 @@\n-    Assembler::Width ww = widthForType(vector_element_basic_type(this, $src1));\n+    Assembler::Width ww = widthForType(Matcher::vector_element_basic_type(this, $src1));\n@@ -6940,3 +6966,3 @@\n-            vector_length_in_bytes(n->in(1)->in(1)) >=  8 && \/\/ src1\n-            vector_length_in_bytes(n->in(1)->in(1)) <= 16 && \/\/ src1\n-            is_integral_type(vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >=  8 && \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <= 16 && \/\/ src1\n+            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n@@ -6947,1 +6973,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -6949,1 +6975,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -6959,2 +6985,2 @@\n-            vector_length_in_bytes(n->in(1)->in(1)) == 32 && \/\/ src1\n-            is_integral_type(vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) == 32 && \/\/ src1\n+            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n@@ -6965,1 +6991,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -6967,1 +6993,1 @@\n-    BasicType bt = vector_element_basic_type(this, $src1);\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -6977,2 +7003,2 @@\n-             vector_length_in_bytes(n->in(1)->in(1)) == 64) && \/\/ src1\n-             is_integral_type(vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n+             Matcher::vector_length_in_bytes(n->in(1)->in(1)) == 64) && \/\/ src1\n+             is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n@@ -6990,1 +7016,1 @@\n-    BasicType src1_elem_bt = vector_element_basic_type(this, $src1);\n+    BasicType src1_elem_bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -7023,1 +7049,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) <= 16); \/\/ src\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) <= 16); \/\/ src\n@@ -7031,1 +7057,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7033,1 +7059,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this, $src);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this, $src);\n@@ -7040,2 +7066,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)) == 32 || \/\/ src\n-            vector_length_in_bytes(n->in(1)) == 64);  \/\/ src\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) == 32 || \/\/ src\n+            Matcher::vector_length_in_bytes(n->in(1)) == 64);  \/\/ src\n@@ -7050,1 +7076,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7052,1 +7078,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this, $src);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this, $src);\n@@ -7061,1 +7087,1 @@\n-  predicate(vector_length(n->in(1)) <= 2); \/\/ src\n+  predicate(Matcher::vector_length(n->in(1)) <= 2); \/\/ src\n@@ -7066,1 +7092,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7074,2 +7100,2 @@\n-  predicate(vector_length(n->in(1)) == 4 || \/\/ src\n-            vector_length(n->in(1)) == 8);  \/\/ src\n+  predicate(Matcher::vector_length(n->in(1)) == 4 || \/\/ src\n+            Matcher::vector_length(n->in(1)) == 8);  \/\/ src\n@@ -7080,1 +7106,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7090,1 +7116,1 @@\n-  predicate(vector_length(n->in(1)) <= 4);\n+  predicate(Matcher::vector_length(n->in(1)) <= 4);\n@@ -7095,1 +7121,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7103,2 +7129,2 @@\n-  predicate(vector_length(n->in(1)\/*src*\/) == 8 ||\n-            vector_length(n->in(1)\/*src*\/) == 16);\n+  predicate(Matcher::vector_length(n->in(1)\/*src*\/) == 8 ||\n+            Matcher::vector_length(n->in(1)\/*src*\/) == 16);\n@@ -7109,1 +7135,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7118,1 +7144,1 @@\n-  predicate(vector_length(n->in(1)) == 2); \/\/ src\n+  predicate(Matcher::vector_length(n->in(1)) == 2); \/\/ src\n@@ -7122,1 +7148,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7130,2 +7156,2 @@\n-  predicate(vector_length(n->in(1)) == 4 || \/\/ src\n-            vector_length(n->in(1)) == 8);  \/\/ src\n+  predicate(Matcher::vector_length(n->in(1)) == 4 || \/\/ src\n+            Matcher::vector_length(n->in(1)) == 8);  \/\/ src\n@@ -7136,1 +7162,1 @@\n-    assert($idx$$constant < (int)vector_length(this, $src), \"out of bounds\");\n+    assert($idx$$constant < (int)Matcher::vector_length(this, $src), \"out of bounds\");\n@@ -7164,2 +7190,2 @@\n-            vector_length_in_bytes(n) <= 32 &&\n-            is_integral_type(vector_element_basic_type(n)));\n+            Matcher::vector_length_in_bytes(n) <= 32 &&\n+            is_integral_type(Matcher::vector_element_basic_type(n)));\n@@ -7177,2 +7203,2 @@\n-            vector_length_in_bytes(n) <= 32 &&\n-            !is_integral_type(vector_element_basic_type(n)));\n+            Matcher::vector_length_in_bytes(n) <= 32 &&\n+            !is_integral_type(Matcher::vector_element_basic_type(n)));\n@@ -7189,1 +7215,1 @@\n-  predicate(vector_length_in_bytes(n) == 64);\n+  predicate(Matcher::vector_length_in_bytes(n) == 64);\n@@ -7195,1 +7221,1 @@\n-     BasicType elem_bt = vector_element_basic_type(this);\n+     BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -7208,1 +7234,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -7223,1 +7249,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -7238,1 +7264,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -7266,1 +7292,1 @@\n-  predicate(vector_length(n) != 4); \/\/ handled by 1-operand instruction vabsneg4F\n+  predicate(Matcher::vector_length(n) != 4); \/\/ handled by 1-operand instruction vabsneg4F\n@@ -7274,1 +7300,1 @@\n-    int vlen = vector_length(this);\n+    int vlen = Matcher::vector_length(this);\n@@ -7287,1 +7313,1 @@\n-  predicate(vector_length(n) == 4);\n+  predicate(Matcher::vector_length(n) == 4);\n@@ -7307,1 +7333,1 @@\n-    uint vlen = vector_length(this);\n+    uint vlen = Matcher::vector_length(this);\n@@ -7323,2 +7349,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)) >= 4 &&\n-            vector_length_in_bytes(n->in(1)) < 16 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) >= 4 &&\n+            Matcher::vector_length_in_bytes(n->in(1)) < 16 &&\n@@ -7330,1 +7356,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7339,2 +7365,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)) >= 16 &&\n-            vector_length_in_bytes(n->in(1)) <  64 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) >= 16 &&\n+            Matcher::vector_length_in_bytes(n->in(1)) <  64 &&\n@@ -7346,1 +7372,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7355,1 +7381,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) == 64 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) == 64 &&\n@@ -7361,1 +7387,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7370,2 +7396,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)) >= 4 &&\n-            vector_length_in_bytes(n->in(1)) < 16 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) >= 4 &&\n+            Matcher::vector_length_in_bytes(n->in(1)) < 16 &&\n@@ -7377,1 +7403,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7386,2 +7412,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)) >= 16 &&\n-            vector_length_in_bytes(n->in(1)) < 64  &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) >= 16 &&\n+            Matcher::vector_length_in_bytes(n->in(1)) < 64  &&\n@@ -7393,1 +7419,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7402,1 +7428,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) == 64 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) == 64 &&\n@@ -7408,1 +7434,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7417,2 +7443,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)->in(1)) >= 4 &&\n-            vector_length_in_bytes(n->in(1)->in(1)) < 16 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)->in(1)) >= 4 &&\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) < 16 &&\n@@ -7424,1 +7450,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7431,2 +7457,2 @@\n-  predicate(vector_length_in_bytes(n->in(1)->in(1)) >= 16 &&\n-            vector_length_in_bytes(n->in(1)->in(1)) <  64 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)->in(1)) >= 16 &&\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <  64 &&\n@@ -7437,1 +7463,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7444,1 +7470,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)->in(1)) == 64 &&\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)->in(1)) == 64 &&\n@@ -7450,1 +7476,1 @@\n-    int vlen = vector_length_in_bytes(this, $src1);\n+    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n@@ -7465,2 +7491,2 @@\n-    int vlen_in_bytes = vector_length_in_bytes(this);\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    int vlen_in_bytes = Matcher::vector_length_in_bytes(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -7479,2 +7505,2 @@\n-    int vlen_in_bytes = vector_length_in_bytes(this);\n-    BasicType elem_bt = vector_element_basic_type(this);\n+    int vlen_in_bytes = Matcher::vector_length_in_bytes(this);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this);\n@@ -7490,1 +7516,1 @@\n-  predicate(vector_length(n) < 64 || VM_Version::supports_avx512vlbw());\n+  predicate(Matcher::vector_length(n) < 64 || VM_Version::supports_avx512vlbw());\n@@ -7495,1 +7521,1 @@\n-    if (vector_length_in_bytes(this) <= 16) {\n+    if (Matcher::vector_length_in_bytes(this) <= 16) {\n@@ -7507,1 +7533,1 @@\n-  predicate(vector_length(n) <= 8);\n+  predicate(Matcher::vector_length(n) <= 8);\n@@ -7519,1 +7545,1 @@\n-  predicate(vector_length(n) == 16 && !VM_Version::supports_avx512bw());\n+  predicate(Matcher::vector_length(n) == 16 && !VM_Version::supports_avx512bw());\n@@ -7546,1 +7572,1 @@\n-  predicate (vector_length(n) <= 4 && UseAVX <= 2);\n+  predicate(Matcher::vector_length(n) <= 4 && UseAVX <= 2);\n@@ -7559,1 +7585,1 @@\n-  predicate(vector_length(n) == 8 && UseAVX <= 2);\n+  predicate(Matcher::vector_length(n) == 8 && UseAVX <= 2);\n@@ -7590,1 +7616,1 @@\n-  predicate(vector_length(n) == 2 && UseAVX <= 2);\n+  predicate(Matcher::vector_length(n) == 2 && UseAVX <= 2);\n@@ -7604,1 +7630,1 @@\n-  predicate(vector_length(n) == 4 && UseAVX <= 2);\n+  predicate(Matcher::vector_length(n) == 4 && UseAVX <= 2);\n@@ -7637,2 +7663,2 @@\n-  predicate((vector_length(n) == vector_length(n->in(1))) &&\n-            (vector_length_in_bytes(n) == vector_length_in_bytes(n->in(1))));\n+  predicate((Matcher::vector_length(n) == Matcher::vector_length(n->in(1))) &&\n+            (Matcher::vector_length_in_bytes(n) == Matcher::vector_length_in_bytes(n->in(1))));\n@@ -7651,1 +7677,1 @@\n-  predicate(vector_element_basic_type(n) == T_BYTE);\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE);\n@@ -7656,1 +7682,1 @@\n-     int vlen_in_bytes = vector_length_in_bytes(this);\n+     int vlen_in_bytes = Matcher::vector_length_in_bytes(this);\n@@ -7667,1 +7693,1 @@\n-  predicate(vector_element_basic_type(n) == T_BYTE);\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE);\n@@ -7677,2 +7703,2 @@\n-  predicate(vector_element_basic_type(n) == T_BYTE &&\n-            vector_length(n) < 32);\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE &&\n+            Matcher::vector_length(n) < 32);\n@@ -7689,2 +7715,2 @@\n-  predicate(vector_element_basic_type(n) == T_BYTE &&\n-            vector_length(n) == 32 && !VM_Version::supports_avx512_vbmi());\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE &&\n+            Matcher::vector_length(n) == 32 && !VM_Version::supports_avx512_vbmi());\n@@ -7711,2 +7737,2 @@\n-  predicate(vector_element_basic_type(n) == T_BYTE &&\n-            vector_length(n) >= 32 && VM_Version::supports_avx512_vbmi());\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE &&\n+            Matcher::vector_length(n) >= 32 && VM_Version::supports_avx512_vbmi());\n@@ -7725,2 +7751,2 @@\n-  predicate(vector_element_basic_type(n) == T_SHORT &&\n-            vector_length(n) <= 16 && !VM_Version::supports_avx512bw()); \/\/ NB! aligned with rearrangeS\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT &&\n+            Matcher::vector_length(n) <= 16 && !VM_Version::supports_avx512bw()); \/\/ NB! aligned with rearrangeS\n@@ -7733,1 +7759,1 @@\n-    int vlen_in_bytes = vector_length_in_bytes(this);\n+    int vlen_in_bytes = Matcher::vector_length_in_bytes(this);\n@@ -7767,2 +7793,2 @@\n-  predicate(vector_element_basic_type(n) == T_SHORT &&\n-            vector_length(n) <= 8 && !VM_Version::supports_avx512bw());\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT &&\n+            Matcher::vector_length(n) <= 8 && !VM_Version::supports_avx512bw());\n@@ -7779,2 +7805,2 @@\n-  predicate(vector_element_basic_type(n) == T_SHORT &&\n-            vector_length(n) == 16 && !VM_Version::supports_avx512bw());\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT &&\n+            Matcher::vector_length(n) == 16 && !VM_Version::supports_avx512bw());\n@@ -7801,1 +7827,1 @@\n-  predicate(vector_element_basic_type(n) == T_SHORT &&\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT &&\n@@ -7816,1 +7842,1 @@\n-  predicate(vector_element_basic_type(n) == T_SHORT &&\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT &&\n@@ -7833,2 +7859,2 @@\n-  predicate((vector_element_basic_type(n) == T_INT || vector_element_basic_type(n) == T_FLOAT) &&\n-            vector_length(n) == 4 && UseAVX < 2);\n+  predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n+            Matcher::vector_length(n) == 4 && UseAVX < 2);\n@@ -7863,2 +7889,2 @@\n- predicate((vector_element_basic_type(n) == T_INT || vector_element_basic_type(n) == T_FLOAT) &&\n-           vector_length(n) == 4 && UseAVX < 2);\n+ predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n+           Matcher::vector_length(n) == 4 && UseAVX < 2);\n@@ -7875,1 +7901,1 @@\n-  predicate((vector_element_basic_type(n) == T_INT || vector_element_basic_type(n) == T_FLOAT) &&\n+  predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n@@ -7887,1 +7913,1 @@\n-  predicate((vector_element_basic_type(n) == T_INT || vector_element_basic_type(n) == T_FLOAT) &&\n+  predicate((Matcher::vector_element_basic_type(n) == T_INT || Matcher::vector_element_basic_type(n) == T_FLOAT) &&\n@@ -7904,2 +7930,2 @@\n-  predicate(is_double_word_type(vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n-            vector_length(n) < 8 && !VM_Version::supports_avx512vl());\n+  predicate(is_double_word_type(Matcher::vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n+            Matcher::vector_length(n) < 8 && !VM_Version::supports_avx512vl());\n@@ -7931,2 +7957,2 @@\n-  predicate(is_double_word_type(vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n-            vector_length(n) < 8 && !VM_Version::supports_avx512vl());\n+  predicate(is_double_word_type(Matcher::vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n+            Matcher::vector_length(n) < 8 && !VM_Version::supports_avx512vl());\n@@ -7945,2 +7971,2 @@\n-  predicate(is_double_word_type(vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n-            (vector_length(n) == 8 || VM_Version::supports_avx512vl()));\n+  predicate(is_double_word_type(Matcher::vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n+            (Matcher::vector_length(n) == 8 || VM_Version::supports_avx512vl()));\n@@ -7959,2 +7985,2 @@\n-  predicate(is_double_word_type(vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n-            (vector_length(n) == 8 || VM_Version::supports_avx512vl()));\n+  predicate(is_double_word_type(Matcher::vector_element_basic_type(n)) && \/\/ T_LONG, T_DOUBLE\n+            (Matcher::vector_length(n) == 8 || VM_Version::supports_avx512vl()));\n@@ -7991,1 +8017,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) > 8);\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) > 8);\n@@ -8016,1 +8042,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)) > 8);\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) > 8);\n@@ -8094,1 +8120,1 @@\n-  predicate(vector_length_in_bytes(n->in(1)->in(1)) > 8);\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)->in(1)) > 8);\n@@ -8141,1 +8167,1 @@\n-    assert(vector_element_basic_type(this, $src1) == vector_element_basic_type(this, $src2), \"mismatch\");\n+    assert(Matcher::vector_element_basic_type(this, $src1) == Matcher::vector_element_basic_type(this, $src2), \"mismatch\");\n@@ -8145,1 +8171,1 @@\n-    BasicType elem_bt = vector_element_basic_type(this, $src1);\n+    BasicType elem_bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -8213,1 +8239,1 @@\n-    int mask_len = vector_length(this, $mask);\n+    int mask_len = Matcher::vector_length(this, $mask);\n@@ -8229,1 +8255,1 @@\n-    int mask_len = vector_length(this, $mask);\n+    int mask_len = Matcher::vector_length(this, $mask);\n@@ -8244,1 +8270,1 @@\n-    int mask_len = vector_length(this, $mask);\n+    int mask_len = Matcher::vector_length(this, $mask);\n@@ -8260,1 +8286,1 @@\n-    int mask_len = vector_length(this, $mask);\n+    int mask_len = Matcher::vector_length(this, $mask);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":431,"deletions":405,"binary":false,"changes":836,"status":"modified"},{"patch":"@@ -11723,1 +11723,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -11738,1 +11738,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -11753,1 +11753,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -11768,1 +11768,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -11783,1 +11783,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n@@ -11798,1 +11798,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n@@ -11813,1 +11813,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n@@ -11828,1 +11828,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n@@ -11844,1 +11844,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw());\n@@ -11860,1 +11860,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw());\n@@ -12038,1 +12038,1 @@\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -12055,1 +12055,1 @@\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -12072,1 +12072,1 @@\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -12089,1 +12089,1 @@\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -12106,1 +12106,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n@@ -12122,1 +12122,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n@@ -12139,1 +12139,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n@@ -12155,1 +12155,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n@@ -12172,1 +12172,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n@@ -12186,1 +12186,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -11285,1 +11285,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -11301,1 +11301,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -11317,1 +11317,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -11333,1 +11333,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -11349,1 +11349,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n@@ -11365,1 +11365,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n@@ -11381,1 +11381,1 @@\n-  predicate(UseAVX <= 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n@@ -11397,1 +11397,1 @@\n-  predicate(UseAVX > 2 && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n@@ -11580,1 +11580,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw());\n@@ -11596,1 +11596,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw());\n@@ -11613,1 +11613,1 @@\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -11629,1 +11629,1 @@\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -11645,1 +11645,1 @@\n-  predicate(UseAVX <= 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(!VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -11661,1 +11661,1 @@\n-  predicate(UseAVX > 2 && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n+  predicate(VM_Version::supports_avx512vlbw() && ((AryEqNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -11677,1 +11677,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n@@ -11693,1 +11693,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n@@ -11709,1 +11709,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n@@ -11726,1 +11726,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n@@ -11743,1 +11743,1 @@\n-  predicate(UseAVX <= 2);\n+  predicate(!VM_Version::supports_avx512vlbw() || !VM_Version::supports_bmi2());\n@@ -11757,1 +11757,1 @@\n-  predicate(UseAVX > 2);\n+  predicate(VM_Version::supports_avx512vlbw() && VM_Version::supports_bmi2());\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -64,0 +64,5 @@\n+OptimizedEntryBlob::FrameData* OptimizedEntryBlob::frame_data_for_frame(const frame& frame) const {\n+  ShouldNotCallThis();\n+  return nullptr;\n+}\n+\n","filename":"src\/hotspot\/cpu\/zero\/frame_zero.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -791,1 +791,1 @@\n-  \/\/ by 64K for small thread stacks (arbitrarily choosen to be < 4MB)\n+  \/\/ by 64K for small thread stacks (arbitrarily chosen to be < 4MB)\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -455,1 +455,3 @@\n-    set_boot_path('\/', ':');\n+    if (!set_boot_path('\/', ':')) {\n+        vm_exit_during_initialization(\"Failed setting boot class path.\", NULL);\n+    }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-\/\/ OS X doesn't support unamed POSIX semaphores, so the implementation in os_posix.cpp can't be used.\n+\/\/ OS X doesn't support unnamed POSIX semaphores, so the implementation in os_posix.cpp can't be used.\n","filename":"src\/hotspot\/os\/bsd\/semaphore_bsd.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-\/\/ OS X doesn't support unamed POSIX semaphores, so the implementation in os_posix.cpp can't be used.\n+\/\/ OS X doesn't support unnamed POSIX semaphores, so the implementation in os_posix.cpp can't be used.\n","filename":"src\/hotspot\/os\/bsd\/semaphore_bsd.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,3 @@\n+\/\/ controller names have to match the *_IDX indices\n+static const char* cg_controller_name[] = { \"cpu\", \"cpuset\", \"cpuacct\", \"memory\", \"pids\" };\n+\n@@ -42,0 +45,1 @@\n+  CgroupV1Controller* pids = NULL;\n@@ -96,12 +100,19 @@\n-    if (strcmp(info._name, \"memory\") == 0) {\n-      memory = new CgroupV1MemoryController(info._root_mount_path, info._mount_path);\n-      memory->set_subsystem_path(info._cgroup_path);\n-    } else if (strcmp(info._name, \"cpuset\") == 0) {\n-      cpuset = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n-      cpuset->set_subsystem_path(info._cgroup_path);\n-    } else if (strcmp(info._name, \"cpu\") == 0) {\n-      cpu = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n-      cpu->set_subsystem_path(info._cgroup_path);\n-    } else if (strcmp(info._name, \"cpuacct\") == 0) {\n-      cpuacct = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n-      cpuacct->set_subsystem_path(info._cgroup_path);\n+    if (info._data_complete) { \/\/ pids controller might have incomplete data\n+      if (strcmp(info._name, \"memory\") == 0) {\n+        memory = new CgroupV1MemoryController(info._root_mount_path, info._mount_path);\n+        memory->set_subsystem_path(info._cgroup_path);\n+      } else if (strcmp(info._name, \"cpuset\") == 0) {\n+        cpuset = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n+        cpuset->set_subsystem_path(info._cgroup_path);\n+      } else if (strcmp(info._name, \"cpu\") == 0) {\n+        cpu = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n+        cpu->set_subsystem_path(info._cgroup_path);\n+      } else if (strcmp(info._name, \"cpuacct\") == 0) {\n+        cpuacct = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n+        cpuacct->set_subsystem_path(info._cgroup_path);\n+      } else if (strcmp(info._name, \"pids\") == 0) {\n+        pids = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n+        pids->set_subsystem_path(info._cgroup_path);\n+      }\n+    } else {\n+      log_debug(os, container)(\"CgroupInfo for %s not complete\", cg_controller_name[i]);\n@@ -111,1 +122,1 @@\n-  return new CgroupV1Subsystem(cpuset, cpu, cpuacct, memory);\n+  return new CgroupV1Subsystem(cpuset, cpu, cpuacct, pids, memory);\n@@ -125,1 +136,1 @@\n-  \/\/ true iff all controllers, memory, cpu, cpuset, cpuacct are enabled\n+  \/\/ true iff all required controllers, memory, cpu, cpuset, cpuacct are enabled\n@@ -127,1 +138,2 @@\n-  bool all_controllers_enabled;\n+  \/\/ pids might not be enabled on older Linux distros (SLES 12.1, RHEL 7.1)\n+  bool all_required_controllers_enabled;\n@@ -139,4 +151,3 @@\n-      log_debug(os, container)(\"Can't open %s, %s\",\n-                               proc_cgroups, os::strerror(errno));\n-      *flags = INVALID_CGROUPS_GENERIC;\n-      return false;\n+    log_debug(os, container)(\"Can't open %s, %s\", proc_cgroups, os::strerror(errno));\n+    *flags = INVALID_CGROUPS_GENERIC;\n+    return false;\n@@ -170,0 +181,5 @@\n+    } else if (strcmp(name, \"pids\") == 0) {\n+      log_debug(os, container)(\"Detected optional pids controller entry in %s\", proc_cgroups);\n+      cg_infos[PIDS_IDX]._name = os::strdup(name);\n+      cg_infos[PIDS_IDX]._hierarchy_id = hierarchy_id;\n+      cg_infos[PIDS_IDX]._enabled = (enabled == 1);\n@@ -175,1 +191,1 @@\n-  all_controllers_enabled = true;\n+  all_required_controllers_enabled = true;\n@@ -177,2 +193,8 @@\n-    is_cgroupsV2 = is_cgroupsV2 && cg_infos[i]._hierarchy_id == 0;\n-    all_controllers_enabled = all_controllers_enabled && cg_infos[i]._enabled;\n+    \/\/ pids controller is optional. All other controllers are required\n+    if (i != PIDS_IDX) {\n+      is_cgroupsV2 = is_cgroupsV2 && cg_infos[i]._hierarchy_id == 0;\n+      all_required_controllers_enabled = all_required_controllers_enabled && cg_infos[i]._enabled;\n+    }\n+    if (log_is_enabled(Debug, os, container) && !cg_infos[i]._enabled) {\n+      log_debug(os, container)(\"controller %s is not enabled\\n\", cg_controller_name[i]);\n+    }\n@@ -181,2 +203,2 @@\n-  if (!all_controllers_enabled) {\n-    \/\/ one or more controllers disabled, disable container support\n+  if (!all_required_controllers_enabled) {\n+    \/\/ one or more required controllers disabled, disable container support\n@@ -223,1 +245,1 @@\n-        assert(hierarchy_id == cg_infos[MEMORY_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch\");\n+        assert(hierarchy_id == cg_infos[MEMORY_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch for memory\");\n@@ -226,1 +248,1 @@\n-        assert(hierarchy_id == cg_infos[CPUSET_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch\");\n+        assert(hierarchy_id == cg_infos[CPUSET_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch for cpuset\");\n@@ -229,1 +251,1 @@\n-        assert(hierarchy_id == cg_infos[CPU_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch\");\n+        assert(hierarchy_id == cg_infos[CPU_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch for cpu\");\n@@ -232,1 +254,1 @@\n-        assert(hierarchy_id == cg_infos[CPUACCT_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch\");\n+        assert(hierarchy_id == cg_infos[CPUACCT_IDX]._hierarchy_id, \"\/proc\/cgroups and \/proc\/self\/cgroup hierarchy mismatch for cpuacc\");\n@@ -234,0 +256,4 @@\n+      } else if (strcmp(token, \"pids\") == 0) {\n+        assert(hierarchy_id == cg_infos[PIDS_IDX]._hierarchy_id, \"\/proc\/cgroups (%d) and \/proc\/self\/cgroup (%d) hierarchy mismatch for pids\",\n+                                                                 cg_infos[PIDS_IDX]._hierarchy_id, hierarchy_id);\n+        cg_infos[PIDS_IDX]._cgroup_path = os::strdup(cgroup_path);\n@@ -284,1 +310,1 @@\n-     * Find the cgroup mount point for memory, cpuset, cpu, cpuacct\n+     * Find the cgroup mount point for memory, cpuset, cpu, cpuacct, pids\n@@ -291,0 +317,2 @@\n+     *\n+     * 44 31 0:39 \/ \/sys\/fs\/cgroup\/pids rw,nosuid,nodev,noexec,relatime shared:23 - cgroup cgroup rw,pids\n@@ -336,0 +364,6 @@\n+        } else if (strcmp(token, \"pids\") == 0) {\n+          any_cgroup_mounts_found = true;\n+          assert(cg_infos[PIDS_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n+          cg_infos[PIDS_IDX]._mount_path = os::strdup(tmpmount);\n+          cg_infos[PIDS_IDX]._root_mount_path = os::strdup(tmproot);\n+          cg_infos[PIDS_IDX]._data_complete = true;\n@@ -390,0 +424,4 @@\n+  if (log_is_enabled(Debug, os, container) && !cg_infos[PIDS_IDX]._data_complete) {\n+    log_debug(os, container)(\"Optional cgroup v1 pids subsystem not found\");\n+    \/\/ keep the other controller info, pids is optional\n+  }\n@@ -393,1 +431,0 @@\n-\n@@ -517,0 +554,19 @@\n+\n+jlong CgroupSubsystem::limit_from_str(char* limit_str) {\n+  if (limit_str == NULL) {\n+    return OSCONTAINER_ERROR;\n+  }\n+  \/\/ Unlimited memory in cgroups is the literal string 'max' for\n+  \/\/ some controllers, for example the pids controller.\n+  if (strcmp(\"max\", limit_str) == 0) {\n+    os::free(limit_str);\n+    return (jlong)-1;\n+  }\n+  julong limit;\n+  if (sscanf(limit_str, JULONG_FORMAT, &limit) != 1) {\n+    os::free(limit_str);\n+    return OSCONTAINER_ERROR;\n+  }\n+  os::free(limit_str);\n+  return (jlong)limit;\n+}\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":87,"deletions":31,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,2 @@\n-\/\/ Four controllers: cpu, cpuset, cpuacct, memory\n-#define CG_INFO_LENGTH 4\n+\/\/ Five controllers: cpu, cpuset, cpuacct, memory, pids\n+#define CG_INFO_LENGTH 5\n@@ -70,0 +70,1 @@\n+#define PIDS_IDX       4\n@@ -241,0 +242,1 @@\n+    jlong limit_from_str(char* limit_str);\n@@ -245,0 +247,1 @@\n+    virtual jlong pids_max() = 0;\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,0 +244,25 @@\n+\n+\n+char* CgroupV1Subsystem::pids_max_val() {\n+  GET_CONTAINER_INFO_CPTR(cptr, _pids, \"\/pids.max\",\n+                     \"Maximum number of tasks is: %s\", \"%s %*d\", pidsmax, 1024);\n+  if (pidsmax == NULL) {\n+    return NULL;\n+  }\n+  return os::strdup(pidsmax);\n+}\n+\n+\/* pids_max\n+ *\n+ * Return the maximum number of tasks available to the process\n+ *\n+ * return:\n+ *    maximum number of tasks\n+ *    -1 for unlimited\n+ *    OSCONTAINER_ERROR for not supported\n+ *\/\n+jlong CgroupV1Subsystem::pids_max() {\n+  if (_pids == NULL) return OSCONTAINER_ERROR;\n+  char * pidsmax_str = pids_max_val();\n+  return limit_from_str(pidsmax_str);\n+}\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,0 +90,2 @@\n+    jlong pids_max();\n+\n@@ -104,0 +106,3 @@\n+    CgroupV1Controller* _pids = NULL;\n+\n+    char * pids_max_val();\n@@ -109,0 +114,1 @@\n+                      CgroupV1Controller* pids,\n@@ -113,0 +119,1 @@\n+      _pids = pids;\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2021, Red Hat Inc.\n@@ -206,18 +206,0 @@\n-jlong CgroupV2Subsystem::limit_from_str(char* limit_str) {\n-  if (limit_str == NULL) {\n-    return OSCONTAINER_ERROR;\n-  }\n-  \/\/ Unlimited memory in Cgroups V2 is the literal string 'max'\n-  if (strcmp(\"max\", limit_str) == 0) {\n-    os::free(limit_str);\n-    return (jlong)-1;\n-  }\n-  julong limit;\n-  if (sscanf(limit_str, JULONG_FORMAT, &limit) != 1) {\n-    os::free(limit_str);\n-    return OSCONTAINER_ERROR;\n-  }\n-  os::free(limit_str);\n-  return (jlong)limit;\n-}\n-\n@@ -247,0 +229,23 @@\n+char* CgroupV2Subsystem::pids_max_val() {\n+  GET_CONTAINER_INFO_CPTR(cptr, _unified, \"\/pids.max\",\n+                     \"Maximum number of tasks is: %s\", \"%s %*d\", pidsmax, 1024);\n+  if (pidsmax == NULL) {\n+    return NULL;\n+  }\n+  return os::strdup(pidsmax);\n+}\n+\n+\/* pids_max\n+ *\n+ * Return the maximum number of tasks available to the process\n+ *\n+ * return:\n+ *    maximum number of tasks\n+ *    -1 for unlimited\n+ *    OSCONTAINER_ERROR for not supported\n+ *\/\n+jlong CgroupV2Subsystem::pids_max() {\n+  char * pidsmax_str = pids_max_val();\n+  return limit_from_str(pidsmax_str);\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    jlong limit_from_str(char* limit_str);\n+    char *pids_max_val();\n@@ -82,0 +82,2 @@\n+    jlong pids_max();\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,0 +132,5 @@\n+\n+jlong OSContainer::pids_max() {\n+  assert(cgroup_subsystem != NULL, \"cgroup subsystem not available\");\n+  return cgroup_subsystem->pids_max();\n+}\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+  static jlong pids_max();\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2151,10 +2151,1 @@\n-void os::Linux::print_process_memory_info(outputStream* st) {\n-\n-  st->print_cr(\"Process Memory:\");\n-\n-  \/\/ Print virtual and resident set size; peak values; swap; and for\n-  \/\/  rss its components if the kernel is recent enough.\n-  ssize_t vmsize = -1, vmpeak = -1, vmswap = -1,\n-      vmrss = -1, vmhwm = -1, rssanon = -1, rssfile = -1, rssshmem = -1;\n-  const int num_values = 8;\n-  int num_found = 0;\n+bool os::Linux::query_process_memory_info(os::Linux::meminfo_t* info) {\n@@ -2162,0 +2153,2 @@\n+  const int num_values = sizeof(os::Linux::meminfo_t) \/ sizeof(size_t);\n+  int num_found = 0;\n@@ -2163,0 +2156,2 @@\n+  info->vmsize = info->vmpeak = info->vmrss = info->vmhwm = info->vmswap =\n+      info->rssanon = info->rssfile = info->rssshmem = -1;\n@@ -2165,8 +2160,8 @@\n-      if ( (vmsize == -1    && sscanf(buf, \"VmSize: \" SSIZE_FORMAT \" kB\", &vmsize) == 1) ||\n-           (vmpeak == -1    && sscanf(buf, \"VmPeak: \" SSIZE_FORMAT \" kB\", &vmpeak) == 1) ||\n-           (vmswap == -1    && sscanf(buf, \"VmSwap: \" SSIZE_FORMAT \" kB\", &vmswap) == 1) ||\n-           (vmhwm == -1     && sscanf(buf, \"VmHWM: \" SSIZE_FORMAT \" kB\", &vmhwm) == 1) ||\n-           (vmrss == -1     && sscanf(buf, \"VmRSS: \" SSIZE_FORMAT \" kB\", &vmrss) == 1) ||\n-           (rssanon == -1   && sscanf(buf, \"RssAnon: \" SSIZE_FORMAT \" kB\", &rssanon) == 1) ||\n-           (rssfile == -1   && sscanf(buf, \"RssFile: \" SSIZE_FORMAT \" kB\", &rssfile) == 1) ||\n-           (rssshmem == -1  && sscanf(buf, \"RssShmem: \" SSIZE_FORMAT \" kB\", &rssshmem) == 1)\n+      if ( (info->vmsize == -1    && sscanf(buf, \"VmSize: \" SSIZE_FORMAT \" kB\", &info->vmsize) == 1) ||\n+           (info->vmpeak == -1    && sscanf(buf, \"VmPeak: \" SSIZE_FORMAT \" kB\", &info->vmpeak) == 1) ||\n+           (info->vmswap == -1    && sscanf(buf, \"VmSwap: \" SSIZE_FORMAT \" kB\", &info->vmswap) == 1) ||\n+           (info->vmhwm == -1     && sscanf(buf, \"VmHWM: \" SSIZE_FORMAT \" kB\", &info->vmhwm) == 1) ||\n+           (info->vmrss == -1     && sscanf(buf, \"VmRSS: \" SSIZE_FORMAT \" kB\", &info->vmrss) == 1) ||\n+           (info->rssanon == -1   && sscanf(buf, \"RssAnon: \" SSIZE_FORMAT \" kB\", &info->rssanon) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssfile == -1   && sscanf(buf, \"RssFile: \" SSIZE_FORMAT \" kB\", &info->rssfile) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: \" SSIZE_FORMAT \" kB\", &info->rssshmem) == 1)  \/\/ Needs Linux 4.5\n@@ -2179,0 +2174,4 @@\n+    return true;\n+  }\n+  return false;\n+}\n@@ -2180,3 +2179,11 @@\n-    st->print_cr(\"Virtual Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", vmsize, vmpeak);\n-    st->print(\"Resident Set Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", vmrss, vmhwm);\n-    if (rssanon != -1) { \/\/ requires kernel >= 4.5\n+void os::Linux::print_process_memory_info(outputStream* st) {\n+\n+  st->print_cr(\"Process Memory:\");\n+\n+  \/\/ Print virtual and resident set size; peak values; swap; and for\n+  \/\/  rss its components if the kernel is recent enough.\n+  meminfo_t info;\n+  if (query_process_memory_info(&info)) {\n+    st->print_cr(\"Virtual Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", info.vmsize, info.vmpeak);\n+    st->print(\"Resident Set Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", info.vmrss, info.vmhwm);\n+    if (info.rssanon != -1) { \/\/ requires kernel >= 4.5\n@@ -2184,1 +2191,1 @@\n-                  rssanon, rssfile, rssshmem);\n+                info.rssanon, info.rssfile, info.rssshmem);\n@@ -2187,2 +2194,2 @@\n-    if (vmswap != -1) { \/\/ requires kernel >= 2.6.34\n-      st->print_cr(\"Swapped out: \" SSIZE_FORMAT \"K\", vmswap);\n+    if (info.vmswap != -1) { \/\/ requires kernel >= 2.6.34\n+      st->print_cr(\"Swapped out: \" SSIZE_FORMAT \"K\", info.vmswap);\n@@ -2209,1 +2216,1 @@\n-    might_have_wrapped = (vmrss * K) > UINT_MAX && (vmrss * K) > (total_allocated + UINT_MAX);\n+    might_have_wrapped = (info.vmrss * K) > UINT_MAX && (info.vmrss * K) > (total_allocated + UINT_MAX);\n@@ -2234,0 +2241,1 @@\n+    st->print_cr(\"container information not found.\");\n@@ -2322,0 +2330,8 @@\n+  j = OSContainer::OSContainer::pids_max();\n+  st->print(\"maximum number of tasks: \");\n+  if (j > 0) {\n+    st->print_cr(JLONG_FORMAT, j);\n+  } else {\n+    st->print_cr(\"%s\", j == OSCONTAINER_ERROR ? \"not supported\" : \"unlimited\");\n+  }\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":41,"deletions":25,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -177,0 +177,17 @@\n+  \/\/ Output structure for query_process_memory_info()\n+  struct meminfo_t {\n+    ssize_t vmsize;     \/\/ current virtual size\n+    ssize_t vmpeak;     \/\/ peak virtual size\n+    ssize_t vmrss;      \/\/ current resident set size\n+    ssize_t vmhwm;      \/\/ peak resident set size\n+    ssize_t vmswap;     \/\/ swapped out\n+    ssize_t rssanon;    \/\/ resident set size (anonymous mappings, needs 4.5)\n+    ssize_t rssfile;    \/\/ resident set size (file mappings, needs 4.5)\n+    ssize_t rssshmem;   \/\/ resident set size (shared mappings, needs 4.5)\n+  };\n+\n+  \/\/ Attempts to query memory information about the current process and return it in the output structure.\n+  \/\/ May fail (returns false) or succeed (returns true) but not all output fields are available; unavailable\n+  \/\/ fields will contain -1.\n+  static bool query_process_memory_info(meminfo_t* info);\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"logging\/log.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+#include \"trimCHeapDCmd.hpp\"\n+\n+#include <malloc.h>\n+\n+void TrimCLibcHeapDCmd::execute(DCmdSource source, TRAPS) {\n+#ifdef __GLIBC__\n+  stringStream ss_report(1024); \/\/ Note: before calling trim\n+\n+  os::Linux::meminfo_t info1;\n+  os::Linux::meminfo_t info2;\n+  \/\/ Query memory before...\n+  bool have_info1 = os::Linux::query_process_memory_info(&info1);\n+\n+  _output->print_cr(\"Attempting trim...\");\n+  ::malloc_trim(0);\n+  _output->print_cr(\"Done.\");\n+\n+  \/\/ ...and after trim.\n+  bool have_info2 = os::Linux::query_process_memory_info(&info2);\n+\n+  \/\/ Print report both to output stream as well to UL\n+  bool wrote_something = false;\n+  if (have_info1 && have_info2) {\n+    if (info1.vmsize != -1 && info2.vmsize != -1) {\n+      ss_report.print_cr(\"Virtual size before: \" SSIZE_FORMAT \"k, after: \" SSIZE_FORMAT \"k, (\" SSIZE_FORMAT \"k)\",\n+                         info1.vmsize, info2.vmsize, (info2.vmsize - info1.vmsize));\n+      wrote_something = true;\n+    }\n+    if (info1.vmrss != -1 && info2.vmrss != -1) {\n+      ss_report.print_cr(\"RSS before: \" SSIZE_FORMAT \"k, after: \" SSIZE_FORMAT \"k, (\" SSIZE_FORMAT \"k)\",\n+                         info1.vmrss, info2.vmrss, (info2.vmrss - info1.vmrss));\n+      wrote_something = true;\n+    }\n+    if (info1.vmswap != -1 && info2.vmswap != -1) {\n+      ss_report.print_cr(\"Swap before: \" SSIZE_FORMAT \"k, after: \" SSIZE_FORMAT \"k, (\" SSIZE_FORMAT \"k)\",\n+                         info1.vmswap, info2.vmswap, (info2.vmswap - info1.vmswap));\n+      wrote_something = true;\n+    }\n+  }\n+  if (!wrote_something) {\n+    ss_report.print_raw(\"No details available.\");\n+  }\n+\n+  _output->print_raw(ss_report.base());\n+  log_info(os)(\"malloc_trim:\\n%s\", ss_report.base());\n+#else\n+  _output->print_cr(\"Not available.\");\n+#endif\n+}\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.cpp","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef OS_LINUX_TRIMCHEAPDCMD_HPP\n+#define OS_LINUX_TRIMCHEAPDCMD_HPP\n+\n+#include \"services\/diagnosticCommand.hpp\"\n+\n+class outputStream;\n+\n+class TrimCLibcHeapDCmd : public DCmd {\n+public:\n+  TrimCLibcHeapDCmd(outputStream* output, bool heap) : DCmd(output, heap) {}\n+  static const char* name() {\n+    return \"System.trim_native_heap\";\n+  }\n+  static const char* description() {\n+    return \"Attempts to free up memory by trimming the C-heap.\";\n+  }\n+  static const char* impact() {\n+    return \"Low\";\n+  }\n+  static const JavaPermission permission() {\n+    JavaPermission p = { \"java.lang.management.ManagementPermission\", \"control\", NULL };\n+    return p;\n+  }\n+  virtual void execute(DCmdSource source, TRAPS);\n+};\n+\n+#endif \/\/ OS_LINUX_TRIMCHEAPDCMD_HPP\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.hpp","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"runtime\/globals_extension.hpp\"\n@@ -1026,1 +1027,1 @@\n-\/\/ release a named shared memory region\n+\/\/ release a named shared memory region that was mmap-ed.\n@@ -1029,5 +1030,13 @@\n-#if defined(_AIX)\n-  \/\/ Do not rely on os::reserve_memory\/os::release_memory to use mmap.\n-  \/\/ Use os::reserve_memory\/os::release_memory for PerfDisableSharedMem=1, mmap\/munmap for PerfDisableSharedMem=0\n-  if (::munmap(addr, bytes) == -1) {\n-    warning(\"perfmemory: munmap failed (%d)\\n\", errno);\n+  int res;\n+  if (MemTracker::tracking_level() > NMT_minimal) {\n+    \/\/ Note: Tracker contains a ThreadCritical.\n+    Tracker tkr(Tracker::release);\n+    res = ::munmap(addr, bytes);\n+    if (res == 0) {\n+      tkr.record((address)addr, bytes);\n+    }\n+  } else {\n+    res = ::munmap(addr, bytes);\n+  }\n+  if (res != 0) {\n+    log_info(os)(\"os::release_memory failed (\" PTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), bytes);\n@@ -1035,3 +1044,0 @@\n-#else\n-  os::release_memory(addr, bytes);\n-#endif\n@@ -1237,1 +1243,1 @@\n-      PerfDisableSharedMem = true;\n+      FLAG_SET_ERGO(PerfDisableSharedMem, true);\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-\/\/ POSIX unamed semaphores are not supported on OS X.\n+\/\/ POSIX unnamed semaphores are not supported on OS X.\n","filename":"src\/hotspot\/os\/posix\/semaphore_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/globals_extension.hpp\"\n@@ -1748,1 +1749,1 @@\n-      PerfDisableSharedMem = true;\n+      FLAG_SET_ERGO(PerfDisableSharedMem, true);\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,2 +63,6 @@\n-  int idx = 0;\n-  __asm__ volatile (\"cpuid \" : \"+a\" (idx) : : \"ebx\", \"ecx\", \"edx\", \"memory\");\n+  if (VM_Version::supports_serialize()) {\n+    __asm__ volatile (\".byte 0x0f, 0x01, 0xe8\\n\\t\" : : :); \/\/serialize\n+  } else {\n+    int idx = 0;\n+    __asm__ volatile (\"cpuid \" : \"+a\" (idx) : : \"ebx\", \"ecx\", \"edx\", \"memory\");\n+  }\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/orderAccess_bsd_x86.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -59,1 +59,4 @@\n-  int idx = 0;\n+  if (VM_Version::supports_serialize()) {\n+    __asm__ volatile (\".byte 0x0f, 0x01, 0xe8\\n\\t\" : : :); \/\/serialize\n+  } else {\n+    int idx = 0;\n@@ -61,1 +64,1 @@\n-  __asm__ volatile (\"cpuid \" : \"+a\" (idx) : : \"ebx\", \"ecx\", \"edx\", \"memory\");\n+    __asm__ volatile (\"cpuid \" : \"+a\" (idx) : : \"ebx\", \"ecx\", \"edx\", \"memory\");\n@@ -63,3 +66,3 @@\n-  \/\/ On some x86 systems EBX is a reserved register that cannot be\n-  \/\/ clobbered, so we must protect it around the CPUID.\n-  __asm__ volatile (\"xchg %%esi, %%ebx; cpuid; xchg %%esi, %%ebx \" : \"+a\" (idx) : : \"esi\", \"ecx\", \"edx\", \"memory\");\n+    \/\/ On some x86 systems EBX is a reserved register that cannot be\n+    \/\/ clobbered, so we must protect it around the CPUID.\n+    __asm__ volatile (\"xchg %%esi, %%ebx; cpuid; xchg %%esi, %%ebx \" : \"+a\" (idx) : : \"esi\", \"ecx\", \"edx\", \"memory\");\n@@ -67,0 +70,1 @@\n+  }\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/orderAccess_linux_x86.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -61,1 +61,13 @@\n-inline void OrderAccess::cross_modify_fence_impl() {\n+inline void OrderAccess::cross_modify_fence_impl()\n+#if _MSC_VER >= 1928\n+{\n+\/\/_serialize() intrinsic is supported starting from VS2019-16.7.2\n+  if (VM_Version::supports_serialize()) {\n+    _serialize();\n+  } else {\n+    int regs[4];\n+    __cpuid(regs, 0);\n+  }\n+}\n+#else\n+{\n@@ -65,0 +77,1 @@\n+#endif\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/orderAccess_windows_x86.hpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -63,257 +63,11 @@\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b\n-) {\n-  assert(\n-    a != b,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT \"\", p2i(a), p2i(b)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c\n-) {\n-  assert(\n-    a != b && a != c\n-           && b != c,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d\n-) {\n-  assert(\n-    a != b && a != c && a != d\n-           && b != c && b != d\n-                     && c != d,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e\n-           && b != c && b != d && b != e\n-                     && c != d && c != e\n-                               && d != e,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f\n-           && b != c && b != d && b != e && b != f\n-                     && c != d && c != e && c != f\n-                               && d != e && d != f\n-                                         && e != f,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f,\n-  AbstractRegister g\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f && a != g\n-           && b != c && b != d && b != e && b != f && b != g\n-                     && c != d && c != e && c != f && c != g\n-                               && d != e && d != f && d != g\n-                                         && e != f && e != g\n-                                                   && f != g,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \", g=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f), p2i(g)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f,\n-  AbstractRegister g,\n-  AbstractRegister h\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f && a != g && a != h\n-           && b != c && b != d && b != e && b != f && b != g && b != h\n-                     && c != d && c != e && c != f && c != g && c != h\n-                               && d != e && d != f && d != g && d != h\n-                                         && e != f && e != g && e != h\n-                                                   && f != g && f != h\n-                                                             && g != h,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \", g=\" INTPTR_FORMAT \", h=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f), p2i(g), p2i(h)\n-  );\n-}\n-\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f,\n-  AbstractRegister g,\n-  AbstractRegister h,\n-  AbstractRegister i\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f && a != g && a != h && a != i\n-           && b != c && b != d && b != e && b != f && b != g && b != h && b != i\n-                     && c != d && c != e && c != f && c != g && c != h && c != i\n-                               && d != e && d != f && d != g && d != h && d != i\n-                                         && e != f && e != g && e != h && e != i\n-                                                   && f != g && f != h && f != i\n-                                                             && g != h && g != i\n-                                                                       && h != i,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \", g=\" INTPTR_FORMAT \", h=\" INTPTR_FORMAT\n-    \", i=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f), p2i(g), p2i(h), p2i(i)\n-  );\n-}\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f,\n-  AbstractRegister g,\n-  AbstractRegister h,\n-  AbstractRegister i,\n-  AbstractRegister j\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f && a != g && a != h && a != i && a != j\n-           && b != c && b != d && b != e && b != f && b != g && b != h && b != i && b != j\n-                     && c != d && c != e && c != f && c != g && c != h && c != i && c != j\n-                               && d != e && d != f && d != g && d != h && d != i && d != j\n-                                         && e != f && e != g && e != h && e != i && e != j\n-                                                   && f != g && f != h && f != i && f != j\n-                                                             && g != h && g != i && g != j\n-                                                                       && h != i && h != j\n-                                                                                 && i != j,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \", g=\" INTPTR_FORMAT \", h=\" INTPTR_FORMAT\n-    \", i=\" INTPTR_FORMAT \", j=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f), p2i(g), p2i(h), p2i(i), p2i(j)\n-  );\n-}\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f,\n-  AbstractRegister g,\n-  AbstractRegister h,\n-  AbstractRegister i,\n-  AbstractRegister j,\n-  AbstractRegister k\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f && a != g && a != h && a != i && a != j && a !=k\n-           && b != c && b != d && b != e && b != f && b != g && b != h && b != i && b != j && b !=k\n-                     && c != d && c != e && c != f && c != g && c != h && c != i && c != j && c !=k\n-                               && d != e && d != f && d != g && d != h && d != i && d != j && d !=k\n-                                         && e != f && e != g && e != h && e != i && e != j && e !=k\n-                                                   && f != g && f != h && f != i && f != j && f !=k\n-                                                             && g != h && g != i && g != j && g !=k\n-                                                                       && h != i && h != j && h !=k\n-                                                                                 && i != j && i !=k\n-                                                                                           && j !=k,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \", g=\" INTPTR_FORMAT \", h=\" INTPTR_FORMAT\n-    \", i=\" INTPTR_FORMAT \", j=\" INTPTR_FORMAT \", k=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f), p2i(g), p2i(h), p2i(i), p2i(j), p2i(k)\n-  );\n-}\n-\n-inline void assert_different_registers(\n-  AbstractRegister a,\n-  AbstractRegister b,\n-  AbstractRegister c,\n-  AbstractRegister d,\n-  AbstractRegister e,\n-  AbstractRegister f,\n-  AbstractRegister g,\n-  AbstractRegister h,\n-  AbstractRegister i,\n-  AbstractRegister j,\n-  AbstractRegister k,\n-  AbstractRegister l\n-) {\n-  assert(\n-    a != b && a != c && a != d && a != e && a != f && a != g && a != h && a != i && a != j && a !=k && a !=l\n-           && b != c && b != d && b != e && b != f && b != g && b != h && b != i && b != j && b !=k && b !=l\n-                     && c != d && c != e && c != f && c != g && c != h && c != i && c != j && c !=k && c !=l\n-                               && d != e && d != f && d != g && d != h && d != i && d != j && d !=k && d !=l\n-                                         && e != f && e != g && e != h && e != i && e != j && e !=k && e !=l\n-                                                   && f != g && f != h && f != i && f != j && f !=k && f !=l\n-                                                             && g != h && g != i && g != j && g !=k && g !=l\n-                                                                       && h != i && h != j && h !=k && h !=l\n-                                                                                 && i != j && i !=k && i !=l\n-                                                                                           && j !=k && j !=l\n-                                                                                                    && k !=l,\n-    \"registers must be different: a=\" INTPTR_FORMAT \", b=\" INTPTR_FORMAT\n-    \", c=\" INTPTR_FORMAT \", d=\" INTPTR_FORMAT \", e=\" INTPTR_FORMAT\n-    \", f=\" INTPTR_FORMAT \", g=\" INTPTR_FORMAT \", h=\" INTPTR_FORMAT\n-    \", i=\" INTPTR_FORMAT \", j=\" INTPTR_FORMAT \", k=\" INTPTR_FORMAT\n-    \", l=\" INTPTR_FORMAT \"\",\n-    p2i(a), p2i(b), p2i(c), p2i(d), p2i(e), p2i(f), p2i(g), p2i(h), p2i(i), p2i(j), p2i(k), p2i(l)\n-  );\n+template<typename R, typename... Rx>\n+inline void assert_different_registers(R first_register, Rx... more_registers) {\n+#ifdef ASSERT\n+  const R regs[] = { first_register, more_registers... };\n+  \/\/ Verify there are no equal entries.\n+  for (size_t i = 0; i < ARRAY_SIZE(regs) - 1; ++i) {\n+    for (size_t j = i + 1; j < ARRAY_SIZE(regs); ++j) {\n+      assert(regs[i] != regs[j], \"Multiple uses of register: %s\", regs[i]->name());\n+    }\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/asm\/register.hpp","additions":11,"deletions":257,"binary":false,"changes":268,"status":"modified"},{"patch":"@@ -601,0 +601,3 @@\n+  \/\/ simulate crash during compilation\n+  assert(CICrashAt < 0 || (uintx)_env->compile_id() != (uintx)CICrashAt, \"just as planned\");\n+\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1004,1 +1004,1 @@\n-            if (instr != NULL) instr = ai->array();\n+            if (instr == NULL) instr = ai->array();\n","filename":"src\/hotspot\/share\/c1\/c1_RangeCheckElimination.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,3 +164,0 @@\n-  _num_instance_klasses(0),\n-  _num_obj_array_klasses(0),\n-  _num_type_array_klasses(0),\n@@ -225,8 +222,0 @@\n-      if (klass->is_instance_klass()) {\n-        _num_instance_klasses ++;\n-      } else if (klass->is_objArray_klass()) {\n-        _num_obj_array_klasses ++;\n-      } else {\n-        assert(klass->is_typeArray_klass(), \"sanity\");\n-        _num_type_array_klasses ++;\n-      }\n@@ -261,6 +250,0 @@\n-  log_info(cds)(\"Number of classes %d\", _num_instance_klasses + _num_obj_array_klasses + _num_type_array_klasses);\n-  log_info(cds)(\"    instance classes   = %5d\", _num_instance_klasses);\n-  log_info(cds)(\"    obj array classes  = %5d\", _num_obj_array_klasses);\n-  log_info(cds)(\"    type array classes = %5d\", _num_type_array_klasses);\n-  log_info(cds)(\"               symbols = %5d\", _symbols->length());\n-\n@@ -734,0 +717,10 @@\n+  int num_instance_klasses = 0;\n+  int num_boot_klasses = 0;\n+  int num_platform_klasses = 0;\n+  int num_app_klasses = 0;\n+  int num_hidden_klasses = 0;\n+  int num_unlinked_klasses = 0;\n+  int num_unregistered_klasses = 0;\n+  int num_obj_array_klasses = 0;\n+  int num_type_array_klasses = 0;\n+\n@@ -735,0 +728,3 @@\n+    const char* type;\n+    const char* unlinked = \"\";\n+    const char* hidden = \"\";\n@@ -740,0 +736,2 @@\n+      num_obj_array_klasses ++;\n+      type = \"array\";\n@@ -741,0 +739,2 @@\n+      num_type_array_klasses ++;\n+      type = \"array\";\n@@ -744,0 +744,1 @@\n+      num_instance_klasses ++;\n@@ -749,0 +750,24 @@\n+      if (ik->is_shared_boot_class()) {\n+        type = \"boot\";\n+        num_boot_klasses ++;\n+      } else if (ik->is_shared_platform_class()) {\n+        type = \"plat\";\n+        num_platform_klasses ++;\n+      } else if (ik->is_shared_app_class()) {\n+        type = \"app\";\n+        num_app_klasses ++;\n+      } else {\n+        assert(ik->is_shared_unregistered_class(), \"must be\");\n+        type = \"unreg\";\n+        num_unregistered_klasses ++;\n+      }\n+\n+      if (!ik->is_linked()) {\n+        num_unlinked_klasses ++;\n+        unlinked = \" ** unlinked\";\n+      }\n+\n+      if (ik->is_hidden()) {\n+        num_hidden_klasses ++;\n+        hidden = \" ** hidden\";\n+      }\n@@ -752,0 +777,1 @@\n+    }\n@@ -753,4 +779,3 @@\n-      if (log_is_enabled(Debug, cds, class)) {\n-        ResourceMark rm;\n-        log_debug(cds, class)(\"klasses[%4d] = \" PTR_FORMAT \" %s\", i, p2i(to_requested(ik)), ik->external_name());\n-      }\n+    if (log_is_enabled(Debug, cds, class)) {\n+      ResourceMark rm;\n+      log_debug(cds, class)(\"klasses[%5d] = \" PTR_FORMAT \" %-5s %s%s%s\", i, p2i(to_requested(k)), type, k->external_name(), hidden, unlinked);\n@@ -759,0 +784,12 @@\n+\n+  log_info(cds)(\"Number of classes %d\", num_instance_klasses + num_obj_array_klasses + num_type_array_klasses);\n+  log_info(cds)(\"    instance classes   = %5d\", num_instance_klasses);\n+  log_info(cds)(\"      boot             = %5d\", num_boot_klasses);\n+  log_info(cds)(\"      app              = %5d\", num_app_klasses);\n+  log_info(cds)(\"      platform         = %5d\", num_platform_klasses);\n+  log_info(cds)(\"      unregistered     = %5d\", num_unregistered_klasses);\n+  log_info(cds)(\"      (hidden)         = %5d\", num_hidden_klasses);\n+  log_info(cds)(\"      (unlinked)       = %5d\", num_unlinked_klasses);\n+  log_info(cds)(\"    obj array classes  = %5d\", num_obj_array_klasses);\n+  log_info(cds)(\"    type array classes = %5d\", num_type_array_klasses);\n+  log_info(cds)(\"               symbols = %5d\", _symbols->length());\n@@ -1083,1 +1120,1 @@\n-    _total_closed_heap_region_size = mapinfo->write_archive_heap_regions(\n+    _total_closed_heap_region_size = mapinfo->write_heap_regions(\n@@ -1086,3 +1123,3 @@\n-                                        MetaspaceShared::first_closed_archive_heap_region,\n-                                        MetaspaceShared::max_closed_archive_heap_region);\n-    _total_open_heap_region_size = mapinfo->write_archive_heap_regions(\n+                                        MetaspaceShared::first_closed_heap_region,\n+                                        MetaspaceShared::max_closed_heap_region);\n+    _total_open_heap_region_size = mapinfo->write_heap_regions(\n@@ -1091,2 +1128,2 @@\n-                                        MetaspaceShared::first_open_archive_heap_region,\n-                                        MetaspaceShared::max_open_archive_heap_region);\n+                                        MetaspaceShared::first_open_heap_region,\n+                                        MetaspaceShared::max_open_heap_region);\n@@ -1158,1 +1195,1 @@\n-void ArchiveBuilder::print_heap_region_stats(GrowableArray<MemRegion> *heap_mem,\n+void ArchiveBuilder::print_heap_region_stats(GrowableArray<MemRegion>* regions,\n@@ -1160,1 +1197,1 @@\n-  int arr_len = heap_mem == NULL ? 0 : heap_mem->length();\n+  int arr_len = regions == NULL ? 0 : regions->length();\n@@ -1162,2 +1199,2 @@\n-      char* start = (char*)heap_mem->at(i).start();\n-      size_t size = heap_mem->at(i).byte_size();\n+      char* start = (char*)regions->at(i).start();\n+      size_t size = regions->at(i).byte_size();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":68,"deletions":31,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -208,3 +208,0 @@\n-  int _num_instance_klasses;\n-  int _num_obj_array_klasses;\n-  int _num_type_array_klasses;\n@@ -219,1 +216,1 @@\n-  void print_heap_region_stats(GrowableArray<MemRegion> *heap_mem,\n+  void print_heap_region_stats(GrowableArray<MemRegion>* regions,\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#include \"utilities\/formatBuffer.hpp\"\n@@ -310,1 +311,1 @@\n-  if (CompressedOops::is_null(o) || !HeapShared::open_archive_heap_region_mapped()) {\n+  if (CompressedOops::is_null(o) || !HeapShared::open_regions_mapped()) {\n@@ -315,1 +316,1 @@\n-    assert(HeapShared::open_archive_heap_region_mapped(),\n+    assert(HeapShared::open_regions_mapped(),\n@@ -332,2 +333,0 @@\n-fileStream* ClassListWriter::_classlist_file = NULL;\n-\n@@ -337,1 +336,0 @@\n-      ResourceMark rm(THREAD);\n@@ -339,8 +337,13 @@\n-      int pool_index = bootstrap_specifier->bss_index();\n-      ClassListWriter w;\n-      w.stream()->print(\"%s %s\", LAMBDA_PROXY_TAG, pool->pool_holder()->name()->as_C_string());\n-      CDSIndyInfo cii;\n-      ClassListParser::populate_cds_indy_info(pool, pool_index, &cii, CHECK);\n-      GrowableArray<const char*>* indy_items = cii.items();\n-      for (int i = 0; i < indy_items->length(); i++) {\n-        w.stream()->print(\" %s\", indy_items->at(i));\n+      if (SystemDictionaryShared::is_builtin_loader(pool->pool_holder()->class_loader_data())) {\n+        \/\/ Currently lambda proxy classes are supported only for the built-in loaders.\n+        ResourceMark rm(THREAD);\n+        int pool_index = bootstrap_specifier->bss_index();\n+        ClassListWriter w;\n+        w.stream()->print(\"%s %s\", LAMBDA_PROXY_TAG, pool->pool_holder()->name()->as_C_string());\n+        CDSIndyInfo cii;\n+        ClassListParser::populate_cds_indy_info(pool, pool_index, &cii, CHECK);\n+        GrowableArray<const char*>* indy_items = cii.items();\n+        for (int i = 0; i < indy_items->length(); i++) {\n+          w.stream()->print(\" %s\", indy_items->at(i));\n+        }\n+        w.stream()->cr();\n@@ -348,1 +351,0 @@\n-      w.stream()->cr();\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,175 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"cds\/classListWriter.hpp\"\n+#include \"classfile\/classFileStream.hpp\"\n+#include \"classfile\/classLoader.hpp\"\n+#include \"classfile\/classLoaderData.hpp\"\n+#include \"classfile\/moduleEntry.hpp\"\n+#include \"classfile\/systemDictionaryShared.hpp\"\n+#include \"memory\/resourceArea.hpp\"\n+#include \"oops\/instanceKlass.hpp\"\n+#include \"runtime\/mutexLocker.hpp\"\n+\n+fileStream* ClassListWriter::_classlist_file = NULL;\n+\n+void ClassListWriter::init() {\n+  \/\/ For -XX:DumpLoadedClassList=<file> option\n+  if (DumpLoadedClassList != NULL) {\n+    const char* list_name = make_log_name(DumpLoadedClassList, NULL);\n+    _classlist_file = new(ResourceObj::C_HEAP, mtInternal)\n+                         fileStream(list_name);\n+    _classlist_file->print_cr(\"# NOTE: Do not modify this file.\");\n+    _classlist_file->print_cr(\"#\");\n+    _classlist_file->print_cr(\"# This file is generated via the -XX:DumpLoadedClassList=<class_list_file> option\");\n+    _classlist_file->print_cr(\"# and is used at CDS archive dump time (see -Xshare:dump).\");\n+    _classlist_file->print_cr(\"#\");\n+    FREE_C_HEAP_ARRAY(char, list_name);\n+  }\n+}\n+\n+void ClassListWriter::write(const InstanceKlass* k, const ClassFileStream* cfs) {\n+  assert(is_enabled(), \"must be\");\n+\n+  if (!ClassLoader::has_jrt_entry()) {\n+    warning(\"DumpLoadedClassList and CDS are not supported in exploded build\");\n+    DumpLoadedClassList = NULL;\n+    return;\n+  }\n+\n+  ClassListWriter w;\n+  write_to_stream(k, w.stream(), cfs);\n+}\n+\n+class ClassListWriter::IDTable : public ResourceHashtable<\n+  const InstanceKlass*, int,\n+  15889, \/\/ prime number\n+  ResourceObj::C_HEAP> {};\n+\n+ClassListWriter::IDTable* ClassListWriter::_id_table = NULL;\n+int ClassListWriter::_total_ids = 0;\n+\n+int ClassListWriter::get_id(const InstanceKlass* k) {\n+  assert_locked();\n+  if (_id_table == NULL) {\n+    _id_table = new (ResourceObj::C_HEAP, mtClass)IDTable();\n+  }\n+  bool created;\n+  int* v = _id_table->put_if_absent(k, &created);\n+  if (created) {\n+    *v = _total_ids++;\n+  }\n+  return *v;\n+}\n+\n+bool ClassListWriter::has_id(const InstanceKlass* k) {\n+  assert_locked();\n+  if (_id_table != NULL) {\n+    return _id_table->get(k) != NULL;\n+  } else {\n+    return false;\n+  }\n+}\n+\n+void ClassListWriter::handle_class_unloading(const InstanceKlass* klass) {\n+  assert_locked();\n+  if (_id_table != NULL) {\n+    _id_table->remove(klass);\n+  }\n+}\n+\n+void ClassListWriter::write_to_stream(const InstanceKlass* k, outputStream* stream, const ClassFileStream* cfs) {\n+  assert_locked();\n+  ClassLoaderData* loader_data = k->class_loader_data();\n+\n+  if (!SystemDictionaryShared::is_builtin_loader(loader_data)) {\n+    if (cfs == NULL || strncmp(cfs->source(), \"file:\", 5) != 0) {\n+      return;\n+    }\n+    if (!SystemDictionaryShared::add_unregistered_class(Thread::current(), (InstanceKlass*)k)) {\n+      return;\n+    }\n+  }\n+\n+\n+  {\n+    InstanceKlass* super = k->java_super();\n+    if (super != NULL && !has_id(super)) {\n+      return;\n+    }\n+\n+    Array<InstanceKlass*>* interfaces = k->local_interfaces();\n+    int len = interfaces->length();\n+    for (int i = 0; i < len; i++) {\n+      InstanceKlass* intf = interfaces->at(i);\n+      if (!has_id(intf)) {\n+        return;\n+      }\n+    }\n+  }\n+\n+  if (k->is_hidden()) {\n+    return;\n+  }\n+\n+  if (k->module()->is_patched()) {\n+    return;\n+  }\n+\n+  ResourceMark rm;\n+  stream->print(\"%s id: %d\", k->name()->as_C_string(), get_id(k));\n+  if (!SystemDictionaryShared::is_builtin_loader(loader_data)) {\n+    InstanceKlass* super = k->java_super();\n+    assert(super != NULL, \"must be\");\n+    stream->print(\" super: %d\", get_id(super));\n+\n+    Array<InstanceKlass*>* interfaces = k->local_interfaces();\n+    int len = interfaces->length();\n+    if (len > 0) {\n+      stream->print(\" interfaces:\");\n+      for (int i = 0; i < len; i++) {\n+        InstanceKlass* intf = interfaces->at(i);\n+        stream->print(\" %d\", get_id(intf));\n+      }\n+    }\n+\n+#ifdef _WINDOWS\n+    \/\/ \"file:\/C:\/dir\/foo.jar\" -> \"C:\/dir\/foo.jar\"\n+    stream->print(\" source: %s\", cfs->source() + 6);\n+#else\n+    \/\/ \"file:\/dir\/foo.jar\" -> \"\/dir\/foo.jar\"\n+    stream->print(\" source: %s\", cfs->source() + 5);\n+#endif\n+  }\n+\n+  stream->cr();\n+  stream->flush();\n+}\n+\n+void ClassListWriter::delete_classlist() {\n+  if (_classlist_file != NULL) {\n+    delete _classlist_file;\n+  }\n+}\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":175,"deletions":0,"binary":false,"changes":175,"status":"added"},{"patch":"@@ -32,2 +32,1 @@\n-class ClassListWriter {\n-  friend const char* make_log_name(const char* log_name, const char* force_directory);\n+class ClassFileStream;\n@@ -35,0 +34,3 @@\n+class ClassListWriter {\n+#if INCLUDE_CDS\n+  class IDTable;\n@@ -36,0 +38,2 @@\n+  static IDTable* _id_table;\n+  static int _total_ids;\n@@ -37,0 +41,4 @@\n+\n+  static int get_id(const InstanceKlass* k);\n+  static bool has_id(const InstanceKlass* k);\n+  static void assert_locked() { assert_lock_strong(ClassListFile_lock); }\n@@ -38,1 +46,0 @@\n-#if INCLUDE_CDS\n@@ -40,3 +47,0 @@\n-#else\n-  ClassListWriter() : _locker(Thread::current(), NULL, Mutex::_no_safepoint_check_flag) {}\n-#endif\n@@ -48,0 +52,2 @@\n+  void handle_class_unloading(const InstanceKlass* klass);\n+\n@@ -49,1 +55,0 @@\n-#if INCLUDE_CDS\n@@ -51,0 +56,2 @@\n+  }\n+\n@@ -52,0 +59,2 @@\n+public:\n+  static bool is_enabled() {\n@@ -53,1 +62,0 @@\n-#endif\n@@ -55,0 +63,1 @@\n+#endif \/\/ INCLUDE_CDS\n@@ -56,16 +65,0 @@\n-  static void init() {\n-#if INCLUDE_CDS\n-  \/\/ For -XX:DumpLoadedClassList=<file> option\n-  if (DumpLoadedClassList != NULL) {\n-    const char* list_name = make_log_name(DumpLoadedClassList, NULL);\n-    _classlist_file = new(ResourceObj::C_HEAP, mtInternal)\n-                         fileStream(list_name);\n-    _classlist_file->print_cr(\"# NOTE: Do not modify this file.\");\n-    _classlist_file->print_cr(\"#\");\n-    _classlist_file->print_cr(\"# This file is generated via the -XX:DumpLoadedClassList=<class_list_file> option\");\n-    _classlist_file->print_cr(\"# and is used at CDS archive dump time (see -Xshare:dump).\");\n-    _classlist_file->print_cr(\"#\");\n-    FREE_C_HEAP_ARRAY(char, list_name);\n-  }\n-#endif\n-  }\n@@ -73,7 +66,4 @@\n-  static void delete_classlist() {\n-#if INCLUDE_CDS\n-    if (_classlist_file != NULL) {\n-        delete _classlist_file;\n-    }\n-#endif\n-  }\n+  static void init() NOT_CDS_RETURN;\n+  static void write(const InstanceKlass* k, const ClassFileStream* cfs) NOT_CDS_RETURN;\n+  static void write_to_stream(const InstanceKlass* k, outputStream* stream, const ClassFileStream* cfs = NULL) NOT_CDS_RETURN;\n+  static void delete_classlist() NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/cds\/classListWriter.hpp","additions":21,"deletions":31,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -174,2 +174,0 @@\n-  &DumpTimeSharedClassTable_hash,\n-  primitive_equals<InstanceKlass*>,\n@@ -177,1 +175,3 @@\n-  ResourceObj::C_HEAP>\n+  ResourceObj::C_HEAP,\n+  mtClassShared,\n+  &DumpTimeSharedClassTable_hash>\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -273,2 +273,8 @@\n-  ik->vtable().initialize_vtable();\n-  ik->itable().initialize_itable();\n+  if (ik->is_linked()) {\n+    \/\/ If the class has already been linked, we must relayout the i\/v tables, whose order depends\n+    \/\/ on the method sorting order.\n+    \/\/ If the class is unlinked, we cannot layout the i\/v tables yet. This is OK, as the\n+    \/\/ i\/v tables will be initialized at runtime after bytecode verification.\n+    ik->vtable().initialize_vtable();\n+    ik->itable().initialize_itable();\n+  }\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1409,1 +1409,1 @@\n-\/\/ produces the 'heap_mem' array.\n+\/\/ produces the 'regions' array.\n@@ -1415,1 +1415,1 @@\n-\/\/ the 'heap_mem' array may contain more than one consolidated MemRegions. When\n+\/\/ the 'regions' array may contain more than one consolidated MemRegions. When\n@@ -1438,3 +1438,3 @@\n-size_t FileMapInfo::write_archive_heap_regions(GrowableArray<MemRegion> *heap_mem,\n-                                               GrowableArray<ArchiveHeapOopmapInfo> *oopmaps,\n-                                               int first_region_id, int max_num_regions) {\n+size_t FileMapInfo::write_heap_regions(GrowableArray<MemRegion>* regions,\n+                                       GrowableArray<ArchiveHeapOopmapInfo>* oopmaps,\n+                                       int first_region_id, int max_num_regions) {\n@@ -1443,2 +1443,2 @@\n-  int arr_len = heap_mem == NULL ? 0 : heap_mem->length();\n-  if(arr_len > max_num_regions) {\n+  int arr_len = regions == NULL ? 0 : regions->length();\n+  if (arr_len > max_num_regions) {\n@@ -1457,2 +1457,2 @@\n-      start = (char*)heap_mem->at(i).start();\n-      size = heap_mem->at(i).byte_size();\n+      start = (char*)regions->at(i).start();\n+      size = regions->at(i).byte_size();\n@@ -1769,4 +1769,4 @@\n-static MemRegion *closed_archive_heap_ranges = NULL;\n-static MemRegion *open_archive_heap_ranges = NULL;\n-static int num_closed_archive_heap_ranges = 0;\n-static int num_open_archive_heap_ranges = 0;\n+static MemRegion *closed_heap_regions = NULL;\n+static MemRegion *open_heap_regions = NULL;\n+static int num_closed_heap_regions = 0;\n+static int num_open_heap_regions = 0;\n@@ -1776,1 +1776,1 @@\n-  return (space_at(MetaspaceShared::first_closed_archive_heap_region)->used() > 0);\n+  return (space_at(MetaspaceShared::first_closed_heap_region)->used() > 0);\n@@ -1787,1 +1787,1 @@\n-  for (int i = MetaspaceShared::first_closed_archive_heap_region;\n+  for (int i = MetaspaceShared::first_closed_heap_region;\n@@ -1902,1 +1902,1 @@\n-  FileMapRegion* si = space_at(MetaspaceShared::first_closed_archive_heap_region);\n+  FileMapRegion* si = space_at(MetaspaceShared::first_closed_heap_region);\n@@ -1921,14 +1921,13 @@\n-  \/\/ Map the closed_archive_heap regions, GC does not write into the regions.\n-  if (map_heap_data(&closed_archive_heap_ranges,\n-                    MetaspaceShared::first_closed_archive_heap_region,\n-                    MetaspaceShared::max_closed_archive_heap_region,\n-                    &num_closed_archive_heap_ranges)) {\n-    HeapShared::set_closed_archive_heap_region_mapped();\n-\n-    \/\/ Now, map open_archive heap regions, GC can write into the regions.\n-    if (map_heap_data(&open_archive_heap_ranges,\n-                      MetaspaceShared::first_open_archive_heap_region,\n-                      MetaspaceShared::max_open_archive_heap_region,\n-                      &num_open_archive_heap_ranges,\n-                      true \/* open *\/)) {\n-      HeapShared::set_open_archive_heap_region_mapped();\n+  \/\/ Map the closed heap regions: GC does not write into these regions.\n+  if (map_heap_regions(MetaspaceShared::first_closed_heap_region,\n+                       MetaspaceShared::max_closed_heap_region,\n+                       \/*is_open_archive=*\/ false,\n+                       &closed_heap_regions, &num_closed_heap_regions)) {\n+    HeapShared::set_closed_regions_mapped();\n+\n+    \/\/ Now, map the open heap regions: GC can write into these regions.\n+    if (map_heap_regions(MetaspaceShared::first_open_heap_region,\n+                         MetaspaceShared::max_open_heap_region,\n+                         \/*is_open_archive=*\/ true,\n+                         &open_heap_regions, &num_open_heap_regions)) {\n+      HeapShared::set_open_regions_mapped();\n@@ -1945,3 +1944,3 @@\n-  if (!HeapShared::closed_archive_heap_region_mapped()) {\n-    assert(closed_archive_heap_ranges == NULL &&\n-           num_closed_archive_heap_ranges == 0, \"sanity\");\n+  if (!HeapShared::closed_regions_mapped()) {\n+    assert(closed_heap_regions == NULL &&\n+           num_closed_heap_regions == 0, \"sanity\");\n@@ -1950,2 +1949,2 @@\n-  if (!HeapShared::open_archive_heap_region_mapped()) {\n-    assert(open_archive_heap_ranges == NULL && num_open_archive_heap_ranges == 0, \"sanity\");\n+  if (!HeapShared::open_regions_mapped()) {\n+    assert(open_heap_regions == NULL && num_open_heap_regions == 0, \"sanity\");\n@@ -1956,2 +1955,2 @@\n-bool FileMapInfo::map_heap_data(MemRegion **heap_mem, int first,\n-                                int max, int* num, bool is_open_archive) {\n+bool FileMapInfo::map_heap_regions(int first, int max,  bool is_open_archive,\n+                                   MemRegion** regions_ret, int* num_regions_ret) {\n@@ -1969,1 +1968,1 @@\n-  int region_num = 0;\n+  int num_regions = 0;\n@@ -1977,2 +1976,2 @@\n-      regions[region_num] = MemRegion(start, size \/ HeapWordSize);\n-      region_num ++;\n+      regions[num_regions] = MemRegion(start, size \/ HeapWordSize);\n+      num_regions ++;\n@@ -1984,1 +1983,1 @@\n-  if (region_num == 0) {\n+  if (num_regions == 0) {\n@@ -1988,2 +1987,2 @@\n-  \/\/ Check that ranges are within the java heap\n-  if (!G1CollectedHeap::heap()->check_archive_addresses(regions, region_num)) {\n+  \/\/ Check that regions are within the java heap\n+  if (!G1CollectedHeap::heap()->check_archive_addresses(regions, num_regions)) {\n@@ -1996,1 +1995,1 @@\n-             regions, region_num, is_open_archive)) {\n+             regions, num_regions, is_open_archive)) {\n@@ -2004,1 +2003,1 @@\n-  for (int i = 0; i < region_num; i++) {\n+  for (int i = 0; i < num_regions; i++) {\n@@ -2012,1 +2011,1 @@\n-      dealloc_archive_heap_regions(regions, region_num);\n+      dealloc_heap_regions(regions, num_regions);\n@@ -2021,1 +2020,1 @@\n-      dealloc_archive_heap_regions(regions, region_num);\n+      dealloc_heap_regions(regions, num_regions);\n@@ -2029,2 +2028,2 @@\n-  *heap_mem = regions;\n-  *num = region_num;\n+  *regions_ret = regions;\n+  *num_regions_ret = num_regions;\n@@ -2034,1 +2033,1 @@\n-void FileMapInfo::patch_archived_heap_embedded_pointers() {\n+void FileMapInfo::patch_heap_embedded_pointers() {\n@@ -2040,3 +2039,3 @@\n-  patch_archived_heap_embedded_pointers(closed_archive_heap_ranges,\n-                                        num_closed_archive_heap_ranges,\n-                                        MetaspaceShared::first_closed_archive_heap_region);\n+  patch_heap_embedded_pointers(closed_heap_regions,\n+                               num_closed_heap_regions,\n+                               MetaspaceShared::first_closed_heap_region);\n@@ -2044,3 +2043,3 @@\n-  patch_archived_heap_embedded_pointers(open_archive_heap_ranges,\n-                                        num_open_archive_heap_ranges,\n-                                        MetaspaceShared::first_open_archive_heap_region);\n+  patch_heap_embedded_pointers(open_heap_regions,\n+                               num_open_heap_regions,\n+                               MetaspaceShared::first_open_heap_region);\n@@ -2049,2 +2048,2 @@\n-void FileMapInfo::patch_archived_heap_embedded_pointers(MemRegion* ranges, int num_ranges,\n-                                                        int first_region_idx) {\n+void FileMapInfo::patch_heap_embedded_pointers(MemRegion* regions, int num_regions,\n+                                               int first_region_idx) {\n@@ -2055,1 +2054,1 @@\n-  for (int i=0; i<num_ranges; i++) {\n+  for (int i=0; i<num_regions; i++) {\n@@ -2057,2 +2056,2 @@\n-    HeapShared::patch_archived_heap_embedded_pointers(\n-      ranges[i],\n+    HeapShared::patch_embedded_pointers(\n+      regions[i],\n@@ -2069,6 +2068,6 @@\n-  \/\/ Note that closed_archive_heap_ranges may be non-NULL even if no ranges were found.\n-  if (num_closed_archive_heap_ranges != 0) {\n-    assert(closed_archive_heap_ranges != NULL,\n-           \"Null closed_archive_heap_ranges array with non-zero count\");\n-    G1CollectedHeap::heap()->fill_archive_regions(closed_archive_heap_ranges,\n-                                                  num_closed_archive_heap_ranges);\n+  \/\/ Note that closed_heap_regions may be non-NULL even if no regions were found.\n+  if (num_closed_heap_regions != 0) {\n+    assert(closed_heap_regions != NULL,\n+           \"Null closed_heap_regions array with non-zero count\");\n+    G1CollectedHeap::heap()->fill_archive_regions(closed_heap_regions,\n+                                                  num_closed_heap_regions);\n@@ -2078,4 +2077,4 @@\n-  if (num_open_archive_heap_ranges != 0) {\n-    assert(open_archive_heap_ranges != NULL, \"NULL open_archive_heap_ranges array with non-zero count\");\n-    G1CollectedHeap::heap()->fill_archive_regions(open_archive_heap_ranges,\n-                                                  num_open_archive_heap_ranges);\n+  if (num_open_heap_regions != 0) {\n+    assert(open_heap_regions != NULL, \"NULL open_heap_regions array with non-zero count\");\n+    G1CollectedHeap::heap()->fill_archive_regions(open_heap_regions,\n+                                                  num_open_heap_regions);\n@@ -2092,2 +2091,2 @@\n-    G1CollectedHeap::heap()->populate_archive_regions_bot_part(open_archive_heap_ranges,\n-                                                               num_open_archive_heap_ranges);\n+    G1CollectedHeap::heap()->populate_archive_regions_bot_part(open_heap_regions,\n+                                                               num_open_heap_regions);\n@@ -2098,1 +2097,1 @@\n-void FileMapInfo::dealloc_archive_heap_regions(MemRegion* regions, int num) {\n+void FileMapInfo::dealloc_heap_regions(MemRegion* regions, int num) {\n@@ -2100,1 +2099,1 @@\n-    assert(regions != NULL, \"Null archive ranges array with non-zero count\");\n+    assert(regions != NULL, \"Null archive regions array with non-zero count\");\n@@ -2364,4 +2363,4 @@\n-    map_info->dealloc_archive_heap_regions(open_archive_heap_ranges,\n-                                           num_open_archive_heap_ranges);\n-    map_info->dealloc_archive_heap_regions(closed_archive_heap_ranges,\n-                                           num_closed_archive_heap_ranges);\n+    map_info->dealloc_heap_regions(open_heap_regions,\n+                                   num_open_heap_regions);\n+    map_info->dealloc_heap_regions(closed_heap_regions,\n+                                   num_closed_heap_regions);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":78,"deletions":79,"binary":false,"changes":157,"status":"modified"},{"patch":"@@ -463,3 +463,3 @@\n-  size_t write_archive_heap_regions(GrowableArray<MemRegion> *heap_mem,\n-                                    GrowableArray<ArchiveHeapOopmapInfo> *oopmaps,\n-                                    int first_region_id, int max_num_regions);\n+  size_t write_heap_regions(GrowableArray<MemRegion>* regions,\n+                            GrowableArray<ArchiveHeapOopmapInfo>* oopmaps,\n+                            int first_region_id, int max_num_regions);\n@@ -473,3 +473,3 @@\n-  void  patch_archived_heap_embedded_pointers() NOT_CDS_JAVA_HEAP_RETURN;\n-  void  patch_archived_heap_embedded_pointers(MemRegion* ranges, int num_ranges,\n-                                              int first_region_idx) NOT_CDS_JAVA_HEAP_RETURN;\n+  void  patch_heap_embedded_pointers() NOT_CDS_JAVA_HEAP_RETURN;\n+  void  patch_heap_embedded_pointers(MemRegion* regions, int num_regions,\n+                                     int first_region_idx) NOT_CDS_JAVA_HEAP_RETURN;\n@@ -573,2 +573,2 @@\n-  bool  map_heap_data(MemRegion **heap_mem, int first, int max, int* num,\n-                      bool is_open = false) NOT_CDS_JAVA_HEAP_RETURN_(false);\n+  bool  map_heap_regions(int first, int max, bool is_open_archive,\n+                         MemRegion** regions_ret, int* num_regions_ret) NOT_CDS_JAVA_HEAP_RETURN_(false);\n@@ -576,1 +576,1 @@\n-  void  dealloc_archive_heap_regions(MemRegion* regions, int num) NOT_CDS_JAVA_HEAP_RETURN;\n+  void  dealloc_heap_regions(MemRegion* regions, int num) NOT_CDS_JAVA_HEAP_RETURN;\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -70,3 +70,2 @@\n-bool HeapShared::_closed_archive_heap_region_mapped = false;\n-bool HeapShared::_open_archive_heap_region_mapped = false;\n-bool HeapShared::_archive_heap_region_fixed = false;\n+bool HeapShared::_closed_regions_mapped = false;\n+bool HeapShared::_open_regions_mapped = false;\n@@ -120,0 +119,8 @@\n+#ifdef ASSERT\n+bool HeapShared::is_archived_object_during_dumptime(oop p) {\n+  assert(HeapShared::is_heap_object_archiving_allowed(), \"must be\");\n+  assert(DumpSharedSpaces, \"this function is only used with -Xshare:dump\");\n+  return Universe::heap()->is_archived_object(p);\n+}\n+#endif\n+\n@@ -125,1 +132,1 @@\n-void HeapShared::fixup_mapped_heap_regions() {\n+void HeapShared::fixup_mapped_regions() {\n@@ -128,1 +135,0 @@\n-  set_archive_heap_region_fixed();\n@@ -216,1 +222,1 @@\n-  assert(open_archive_heap_region_mapped(), \"must be\");\n+  assert(open_regions_mapped(), \"must be\");\n@@ -241,1 +247,1 @@\n-  if (open_archive_heap_region_mapped()) {\n+  if (open_regions_mapped()) {\n@@ -250,1 +256,1 @@\n-oop HeapShared::archive_heap_object(oop obj) {\n+oop HeapShared::archive_object(oop obj) {\n@@ -336,2 +342,2 @@\n-void HeapShared::archive_java_heap_objects(GrowableArray<MemRegion>* closed,\n-                                           GrowableArray<MemRegion>* open) {\n+void HeapShared::archive_objects(GrowableArray<MemRegion>* closed_regions,\n+                                 GrowableArray<MemRegion>* open_regions) {\n@@ -350,1 +356,1 @@\n-    copy_closed_archive_heap_objects(closed);\n+    copy_closed_objects(closed_regions);\n@@ -353,1 +359,1 @@\n-    copy_open_archive_heap_objects(open);\n+    copy_open_objects(open_regions);\n@@ -361,2 +367,1 @@\n-void HeapShared::copy_closed_archive_heap_objects(\n-                                    GrowableArray<MemRegion> * closed_archive) {\n+void HeapShared::copy_closed_objects(GrowableArray<MemRegion>* closed_regions) {\n@@ -375,1 +380,1 @@\n-  G1CollectedHeap::heap()->end_archive_alloc_range(closed_archive,\n+  G1CollectedHeap::heap()->end_archive_alloc_range(closed_regions,\n@@ -379,2 +384,1 @@\n-void HeapShared::copy_open_archive_heap_objects(\n-                                    GrowableArray<MemRegion> * open_archive) {\n+void HeapShared::copy_open_objects(GrowableArray<MemRegion>* open_regions) {\n@@ -403,1 +407,1 @@\n-  G1CollectedHeap::heap()->end_archive_alloc_range(open_archive,\n+  G1CollectedHeap::heap()->end_archive_alloc_range(open_regions,\n@@ -880,1 +884,1 @@\n-      assert(!HeapShared::is_archived_object(obj),\n+      assert(!HeapShared::is_archived_object_during_dumptime(obj),\n@@ -899,1 +903,1 @@\n-      assert(HeapShared::is_archived_object(archived), \"must be\");\n+      assert(HeapShared::is_archived_object_during_dumptime(archived), \"must be\");\n@@ -911,1 +915,1 @@\n-void HeapShared::check_closed_archive_heap_region_object(InstanceKlass* k) {\n+void HeapShared::check_closed_region_object(InstanceKlass* k) {\n@@ -955,1 +959,1 @@\n-  assert(!is_archived_object(orig_obj), \"sanity\");\n+  assert(!is_archived_object_during_dumptime(orig_obj), \"sanity\");\n@@ -993,1 +997,1 @@\n-    archived_obj = archive_heap_object(orig_obj);\n+    archived_obj = archive_object(orig_obj);\n@@ -1021,1 +1025,1 @@\n-                java_lang_ClassLoader::loader_data_raw(orig_obj) == NULL, \"must be\");\n+                java_lang_ClassLoader::loader_data(orig_obj) == NULL, \"must be\");\n@@ -1034,1 +1038,1 @@\n-    check_closed_archive_heap_region_object(InstanceKlass::cast(orig_k));\n+    check_closed_region_object(InstanceKlass::cast(orig_k));\n@@ -1173,1 +1177,1 @@\n-      assert(is_archived_object(obj), \"must be\");\n+      assert(is_archived_object_during_dumptime(obj), \"must be\");\n@@ -1176,1 +1180,1 @@\n-      assert(!is_archived_object(obj), \"must be\");\n+      assert(!is_archived_object_during_dumptime(obj), \"must be\");\n@@ -1436,2 +1440,4 @@\n-void HeapShared::patch_archived_heap_embedded_pointers(MemRegion region, address oopmap,\n-                                                       size_t oopmap_size_in_bits) {\n+\/\/ Patch all the non-null pointers that are embedded in the archived heap objects\n+\/\/ in this region\n+void HeapShared::patch_embedded_pointers(MemRegion region, address oopmap,\n+                                         size_t oopmap_size_in_bits) {\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":35,"deletions":29,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -146,3 +146,2 @@\n-  static bool _closed_archive_heap_region_mapped;\n-  static bool _open_archive_heap_region_mapped;\n-  static bool _archive_heap_region_fixed;\n+  static bool _closed_regions_mapped;\n+  static bool _open_regions_mapped;\n@@ -152,3 +151,0 @@\n-  static bool oop_equals(oop const& p1, oop const& p2) {\n-    return p1 == p2;\n-  }\n@@ -162,2 +158,0 @@\n-      HeapShared::oop_hash,\n-      HeapShared::oop_equals,\n@@ -165,1 +159,3 @@\n-      ResourceObj::C_HEAP> ArchivedObjectCache;\n+      ResourceObj::C_HEAP,\n+      mtClassShared,\n+      HeapShared::oop_hash> ArchivedObjectCache;\n@@ -168,4 +164,0 @@\n-  static bool klass_equals(Klass* const& p1, Klass* const& p2) {\n-    return primitive_equals<Klass*>(p1, p2);\n-  }\n-\n@@ -179,2 +171,0 @@\n-                               HeapShared::klass_hash,\n-                               HeapShared::klass_equals,\n@@ -182,1 +172,3 @@\n-                               ResourceObj::C_HEAP> {\n+                               ResourceObj::C_HEAP,\n+                               mtClassShared,\n+                               HeapShared::klass_hash> {\n@@ -203,1 +195,1 @@\n-  static void check_closed_archive_heap_region_object(InstanceKlass* k);\n+  static void check_closed_region_object(InstanceKlass* k);\n@@ -234,2 +226,0 @@\n-      HeapShared::oop_hash,\n-      HeapShared::oop_equals,\n@@ -237,1 +227,3 @@\n-      ResourceObj::C_HEAP> SeenObjectsTable;\n+      ResourceObj::C_HEAP,\n+      mtClassShared,\n+      HeapShared::oop_hash> SeenObjectsTable;\n@@ -300,1 +292,1 @@\n-  static oop archive_heap_object(oop obj);\n+  static oop archive_object(oop obj);\n@@ -304,11 +296,4 @@\n-  static void set_archive_heap_region_fixed() {\n-    _archive_heap_region_fixed = true;\n-  }\n-  static bool archive_heap_region_fixed() {\n-    return _archive_heap_region_fixed;\n-  }\n-\n-  static void archive_java_heap_objects(GrowableArray<MemRegion> *closed,\n-                                        GrowableArray<MemRegion> *open);\n-  static void copy_closed_archive_heap_objects(GrowableArray<MemRegion> * closed_archive);\n-  static void copy_open_archive_heap_objects(GrowableArray<MemRegion> * open_archive);\n+  static void archive_objects(GrowableArray<MemRegion>* closed_regions,\n+                              GrowableArray<MemRegion>* open_regions);\n+  static void copy_closed_objects(GrowableArray<MemRegion>* closed_regions);\n+  static void copy_open_objects(GrowableArray<MemRegion>* open_regions);\n@@ -360,2 +345,2 @@\n-    CDS_JAVA_HEAP_ONLY(return (idx >= MetaspaceShared::first_closed_archive_heap_region &&\n-                               idx <= MetaspaceShared::last_open_archive_heap_region);)\n+    CDS_JAVA_HEAP_ONLY(return (idx >= MetaspaceShared::first_closed_heap_region &&\n+                               idx <= MetaspaceShared::last_open_heap_region);)\n@@ -365,2 +350,2 @@\n-  static void set_closed_archive_heap_region_mapped() {\n-    CDS_JAVA_HEAP_ONLY(_closed_archive_heap_region_mapped = true;)\n+  static void set_closed_regions_mapped() {\n+    CDS_JAVA_HEAP_ONLY(_closed_regions_mapped = true;)\n@@ -369,2 +354,2 @@\n-  static bool closed_archive_heap_region_mapped() {\n-    CDS_JAVA_HEAP_ONLY(return _closed_archive_heap_region_mapped;)\n+  static bool closed_regions_mapped() {\n+    CDS_JAVA_HEAP_ONLY(return _closed_regions_mapped;)\n@@ -373,2 +358,2 @@\n-  static void set_open_archive_heap_region_mapped() {\n-    CDS_JAVA_HEAP_ONLY(_open_archive_heap_region_mapped = true;)\n+  static void set_open_regions_mapped() {\n+    CDS_JAVA_HEAP_ONLY(_open_regions_mapped = true;)\n@@ -377,2 +362,2 @@\n-  static bool open_archive_heap_region_mapped() {\n-    CDS_JAVA_HEAP_ONLY(return _open_archive_heap_region_mapped;)\n+  static bool open_regions_mapped() {\n+    CDS_JAVA_HEAP_ONLY(return _open_regions_mapped;)\n@@ -382,1 +367,1 @@\n-    return closed_archive_heap_region_mapped() && open_archive_heap_region_mapped();\n+    return closed_regions_mapped() && open_regions_mapped();\n@@ -385,1 +370,1 @@\n-  static void fixup_mapped_heap_regions() NOT_CDS_JAVA_HEAP_RETURN;\n+  static void fixup_mapped_regions() NOT_CDS_JAVA_HEAP_RETURN;\n@@ -387,1 +372,1 @@\n-  inline static bool is_archived_object(oop p) NOT_CDS_JAVA_HEAP_RETURN_(false);\n+  static bool is_archived_object_during_dumptime(oop p) NOT_CDS_JAVA_HEAP_RETURN_(false);\n@@ -400,2 +385,2 @@\n-  static void patch_archived_heap_embedded_pointers(MemRegion mem, address  oopmap,\n-                                                    size_t oopmap_in_bits) NOT_CDS_JAVA_HEAP_RETURN;\n+  static void patch_embedded_pointers(MemRegion region, address oopmap,\n+                                      size_t oopmap_in_bits) NOT_CDS_JAVA_HEAP_RETURN;\n@@ -411,2 +396,0 @@\n-                           HeapShared::string_oop_hash,\n-                           HeapShared::oop_equals,\n@@ -414,1 +397,3 @@\n-                           ResourceObj::C_HEAP>\n+                           ResourceObj::C_HEAP,\n+                           mtClassShared,\n+                           HeapShared::string_oop_hash>\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":35,"deletions":50,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-\n-#include \"gc\/shared\/collectedHeap.inline.hpp\"\n@@ -36,4 +34,0 @@\n-bool HeapShared::is_archived_object(oop p) {\n-  return Universe::heap()->is_archived_object(p);\n-}\n-\n","filename":"src\/hotspot\/share\/cds\/heapShared.inline.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -159,2 +159,0 @@\n-                             LambdaProxyClassKey::DUMPTIME_HASH,\n-                             LambdaProxyClassKey::DUMPTIME_EQUALS,\n@@ -162,1 +160,4 @@\n-                             ResourceObj::C_HEAP> {\n+                             ResourceObj::C_HEAP,\n+                             mtClassShared,\n+                             LambdaProxyClassKey::DUMPTIME_HASH,\n+                             LambdaProxyClassKey::DUMPTIME_EQUALS> {\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/classListWriter.hpp\"\n@@ -78,0 +79,1 @@\n+#include \"utilities\/resourceHash.hpp\"\n@@ -117,1 +119,1 @@\n-\/\/ The ca0\/ca1 and oa0\/oa1 regions are populated inside HeapShared::archive_java_heap_objects.\n+\/\/ The ca0\/ca1 and oa0\/oa1 regions are populated inside HeapShared::archive_objects.\n@@ -151,0 +153,3 @@\n+  static const int INITIAL_TABLE_SIZE = 1987;\n+  static const int MAX_TABLE_SIZE = 61333;\n+\n@@ -152,0 +157,23 @@\n+  ResizeableResourceHashtable<InstanceKlass*, bool,\n+                              ResourceObj::C_HEAP, mtClassShared> _dumped_classes;\n+\n+  void dump(InstanceKlass* ik) {\n+    bool created;\n+    _dumped_classes.put_if_absent(ik, &created);\n+    if (!created) {\n+      return;\n+    }\n+    if (_dumped_classes.maybe_grow(MAX_TABLE_SIZE)) {\n+      log_info(cds, hashtables)(\"Expanded _dumped_classes table to %d\", _dumped_classes.table_size());\n+    }\n+    if (ik->java_super()) {\n+      dump(ik->java_super());\n+    }\n+    Array<InstanceKlass*>* interfaces = ik->local_interfaces();\n+    int len = interfaces->length();\n+    for (int i = 0; i < len; i++) {\n+      dump(interfaces->at(i));\n+    }\n+    ClassListWriter::write_to_stream(ik, _stream);\n+  }\n+\n@@ -153,1 +181,5 @@\n-  DumpClassListCLDClosure(fileStream* f) : CLDClosure() { _stream = f; }\n+  DumpClassListCLDClosure(fileStream* f)\n+  : CLDClosure(), _dumped_classes(INITIAL_TABLE_SIZE) {\n+    _stream = f;\n+  }\n+\n@@ -157,4 +189,1 @@\n-        InstanceKlass* ik = InstanceKlass::cast(klass);\n-        if (ik->is_shareable()) {\n-          _stream->print_cr(\"%s\", ik->name()->as_C_string());\n-        }\n+        dump(InstanceKlass::cast(klass));\n@@ -170,0 +199,1 @@\n+    MutexLocker lock2(ClassListFile_lock, Mutex::_no_safepoint_check_flag);\n@@ -395,1 +425,1 @@\n-    if (ik->can_be_verified_at_dumptime()) {\n+    if (ik->can_be_verified_at_dumptime() && ik->is_linked()) {\n@@ -406,2 +436,2 @@\n-  GrowableArray<MemRegion> *_closed_archive_heap_regions;\n-  GrowableArray<MemRegion> *_open_archive_heap_regions;\n+  GrowableArray<MemRegion> *_closed_heap_regions;\n+  GrowableArray<MemRegion> *_open_heap_regions;\n@@ -409,2 +439,2 @@\n-  GrowableArray<ArchiveHeapOopmapInfo> *_closed_archive_heap_oopmaps;\n-  GrowableArray<ArchiveHeapOopmapInfo> *_open_archive_heap_oopmaps;\n+  GrowableArray<ArchiveHeapOopmapInfo> *_closed_heap_oopmaps;\n+  GrowableArray<ArchiveHeapOopmapInfo> *_open_heap_oopmaps;\n@@ -413,2 +443,2 @@\n-  void dump_archive_heap_oopmaps() NOT_CDS_JAVA_HEAP_RETURN;\n-  void dump_archive_heap_oopmaps(GrowableArray<MemRegion>* regions,\n+  void dump_heap_oopmaps() NOT_CDS_JAVA_HEAP_RETURN;\n+  void dump_heap_oopmaps(GrowableArray<MemRegion>* regions,\n@@ -426,4 +456,4 @@\n-    _closed_archive_heap_regions(NULL),\n-    _open_archive_heap_regions(NULL),\n-    _closed_archive_heap_oopmaps(NULL),\n-    _open_archive_heap_oopmaps(NULL) {}\n+    _closed_heap_regions(NULL),\n+    _open_heap_regions(NULL),\n+    _closed_heap_oopmaps(NULL),\n+    _open_heap_oopmaps(NULL) {}\n@@ -475,1 +505,1 @@\n-  dump_archive_heap_oopmaps();\n+  dump_heap_oopmaps();\n@@ -533,4 +563,4 @@\n-                        _closed_archive_heap_regions,\n-                        _open_archive_heap_regions,\n-                        _closed_archive_heap_oopmaps,\n-                        _open_archive_heap_oopmaps);\n+                        _closed_heap_regions,\n+                        _open_heap_regions,\n+                        _closed_heap_oopmaps,\n+                        _open_heap_oopmaps);\n@@ -574,4 +604,20 @@\n-bool MetaspaceShared::linking_required(InstanceKlass* ik) {\n-  \/\/ For static CDS dump, do not link old classes.\n-  \/\/ For dynamic CDS dump, only link classes loaded by the builtin class loaders.\n-  return DumpSharedSpaces ? ik->can_be_verified_at_dumptime() : !ik->is_shared_unregistered_class();\n+\/\/ Check if we can eagerly link this class at dump time, so we can avoid the\n+\/\/ runtime linking overhead (especially verification)\n+bool MetaspaceShared::may_be_eagerly_linked(InstanceKlass* ik) {\n+  if (!ik->can_be_verified_at_dumptime()) {\n+    \/\/ For old classes, try to leave them in the unlinked state, so\n+    \/\/ we can still store them in the archive. They must be\n+    \/\/ linked\/verified at runtime.\n+    return false;\n+  }\n+  if (DynamicDumpSharedSpaces && ik->is_shared_unregistered_class()) {\n+    \/\/ Linking of unregistered classes at this stage may cause more\n+    \/\/ classes to be resolved, resulting in calls to ClassLoader.loadClass()\n+    \/\/ that may not be expected by custom class loaders.\n+    \/\/\n+    \/\/ It's OK to do this for the built-in loaders as we know they can\n+    \/\/ tolerate this. (Note that unregistered classes are loaded by the NULL\n+    \/\/ loader during DumpSharedSpaces).\n+    return false;\n+  }\n+  return true;\n@@ -617,1 +663,1 @@\n-          if (linking_required(ik)) {\n+          if (may_be_eagerly_linked(ik)) {\n@@ -812,5 +858,4 @@\n-  \/\/ See FileMapInfo::write_archive_heap_regions() for details.\n-  _closed_archive_heap_regions = new GrowableArray<MemRegion>(2);\n-  _open_archive_heap_regions = new GrowableArray<MemRegion>(2);\n-  HeapShared::archive_java_heap_objects(_closed_archive_heap_regions,\n-                                        _open_archive_heap_regions);\n+  \/\/ See FileMapInfo::write_heap_regions() for details.\n+  _closed_heap_regions = new GrowableArray<MemRegion>(2);\n+  _open_heap_regions = new GrowableArray<MemRegion>(2);\n+  HeapShared::archive_objects(_closed_heap_regions, _open_heap_regions);\n@@ -821,1 +866,1 @@\n-void VM_PopulateDumpSharedSpace::dump_archive_heap_oopmaps() {\n+void VM_PopulateDumpSharedSpace::dump_heap_oopmaps() {\n@@ -823,2 +868,2 @@\n-    _closed_archive_heap_oopmaps = new GrowableArray<ArchiveHeapOopmapInfo>(2);\n-    dump_archive_heap_oopmaps(_closed_archive_heap_regions, _closed_archive_heap_oopmaps);\n+    _closed_heap_oopmaps = new GrowableArray<ArchiveHeapOopmapInfo>(2);\n+    dump_heap_oopmaps(_closed_heap_regions, _closed_heap_oopmaps);\n@@ -826,2 +871,2 @@\n-    _open_archive_heap_oopmaps = new GrowableArray<ArchiveHeapOopmapInfo>(2);\n-    dump_archive_heap_oopmaps(_open_archive_heap_regions, _open_archive_heap_oopmaps);\n+    _open_heap_oopmaps = new GrowableArray<ArchiveHeapOopmapInfo>(2);\n+    dump_heap_oopmaps(_open_heap_regions, _open_heap_oopmaps);\n@@ -831,2 +876,2 @@\n-void VM_PopulateDumpSharedSpace::dump_archive_heap_oopmaps(GrowableArray<MemRegion>* regions,\n-                                                           GrowableArray<ArchiveHeapOopmapInfo>* oopmaps) {\n+void VM_PopulateDumpSharedSpace::dump_heap_oopmaps(GrowableArray<MemRegion>* regions,\n+                                                   GrowableArray<ArchiveHeapOopmapInfo>* oopmaps) {\n@@ -1387,1 +1432,1 @@\n-  static_mapinfo->patch_archived_heap_embedded_pointers();\n+  static_mapinfo->patch_heap_embedded_pointers();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":85,"deletions":40,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-    rw = 0,  \/\/ read-write shared space in the heap\n-    ro = 1,  \/\/ read-only shared space in the heap\n+    rw = 0,  \/\/ read-write shared space\n+    ro = 1,  \/\/ read-only shared space\n@@ -68,8 +68,8 @@\n-    first_closed_archive_heap_region = bm + 1,\n-    max_closed_archive_heap_region = 2,\n-    last_closed_archive_heap_region = first_closed_archive_heap_region + max_closed_archive_heap_region - 1,\n-    first_open_archive_heap_region = last_closed_archive_heap_region + 1,\n-    max_open_archive_heap_region = 2,\n-    last_open_archive_heap_region = first_open_archive_heap_region + max_open_archive_heap_region - 1,\n-\n-    last_valid_region = last_open_archive_heap_region,\n+    first_closed_heap_region = bm + 1,\n+    max_closed_heap_region = 2,\n+    last_closed_heap_region = first_closed_heap_region + max_closed_heap_region - 1,\n+    first_open_heap_region = last_closed_heap_region + 1,\n+    max_open_heap_region = 2,\n+    last_open_heap_region = first_open_heap_region + max_open_heap_region - 1,\n+\n+    last_valid_region = last_open_heap_region,\n@@ -107,1 +107,1 @@\n-  \/\/ mapped shared heap regions.)\n+  \/\/ mapped heap regions.)\n@@ -134,1 +134,1 @@\n-  static bool linking_required(InstanceKlass* ik) NOT_CDS_RETURN_(false);\n+  static bool may_be_eagerly_linked(InstanceKlass* ik) NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -883,1 +883,1 @@\n-    int counter_life;\n+    int counter_life = method_data()->invocation_count();\n@@ -885,7 +885,4 @@\n-    \/\/ In tiered the MDO's life is measured directly, so just use the snapshotted counters\n-    counter_life = MAX2(method_data()->invocation_count(), method_data()->backedge_count());\n-\n-    \/\/ counter_life due to backedge_counter could be > method_life\n-    if (counter_life > method_life)\n-      counter_life = method_life;\n-    if (0 < counter_life && counter_life <= method_life) {\n+    if (method_life < counter_life) { \/\/ may happen because of the snapshot timing\n+      method_life = counter_life;\n+    }\n+    if (counter_life > 0) {\n@@ -894,0 +891,2 @@\n+    } else {\n+      count = 1;\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,1 @@\n+      256, ResourceObj::RESOURCE_AREA, mtInternal,\n","filename":"src\/hotspot\/share\/classfile\/bytecodeAssembler.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2120,0 +2120,1 @@\n+                            256, ResourceObj::RESOURCE_AREA, mtInternal,\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -100,4 +100,0 @@\n-  static bool oop_equals(oop const& s1, oop const& s2) {\n-    return s1 == s2;\n-  }\n-\n@@ -119,1 +115,2 @@\n-      ClassLoaderStatsClosure::oop_hash, ClassLoaderStatsClosure::oop_equals> StatsTable;\n+                            256, ResourceObj::RESOURCE_AREA, mtInternal,\n+                            ClassLoaderStatsClosure::oop_hash> StatsTable;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderStats.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"gc\/shared\/collectedHeap.inline.hpp\"\n@@ -819,8 +820,5 @@\n-  if (HeapShared::is_archived_object(mirror())) {\n-    \/\/ Archive the String field and update the pointer.\n-    oop s = mirror()->obj_field(fd->offset());\n-    oop archived_s = StringTable::create_archived_string(s);\n-    mirror()->obj_field_put(fd->offset(), archived_s);\n-  } else {\n-    guarantee(false, \"Unexpected\");\n-  }\n+  assert(HeapShared::is_archived_object_during_dumptime(mirror()), \"must be\");\n+  \/\/ Archive the String field and update the pointer.\n+  oop s = mirror()->obj_field(fd->offset());\n+  oop archived_s = StringTable::create_archived_string(s);\n+  mirror()->obj_field_put(fd->offset(), archived_s);\n@@ -908,1 +906,1 @@\n-    if (HeapShared::open_archive_heap_region_mapped()) {\n+    if (HeapShared::open_regions_mapped()) {\n@@ -1159,1 +1157,1 @@\n-      oop archived_m = HeapShared::archive_heap_object(m);\n+      oop archived_m = HeapShared::archive_object(m);\n@@ -1218,1 +1216,1 @@\n-  oop archived_mirror = HeapShared::archive_heap_object(mirror);\n+  oop archived_mirror = HeapShared::archive_object(mirror);\n@@ -1345,1 +1343,1 @@\n-  assert(HeapShared::is_archived_object(m), \"must be archived mirror object\");\n+  assert(Universe::heap()->is_archived_object(m), \"must be archived mirror object\");\n@@ -1385,8 +1383,0 @@\n-int  java_lang_Class::oop_size(oop java_class) {\n-  assert(_oop_size_offset != 0, \"must be set\");\n-  int size = java_class->int_field(_oop_size_offset);\n-  assert(size > 0, \"Oop size must be greater than zero, not %d\", size);\n-  return size;\n-}\n-\n-\n@@ -1404,5 +1394,0 @@\n-int  java_lang_Class::static_oop_field_count_raw(oop java_class) {\n-  assert(_static_oop_field_count_offset != 0, \"must be set\");\n-  return java_class->int_field_raw(_static_oop_field_count_offset);\n-}\n-\n@@ -1515,10 +1500,0 @@\n-\n-Klass* java_lang_Class::as_Klass_raw(oop java_class) {\n-  \/\/%note memory_2\n-  assert(java_lang_Class::is_instance(java_class), \"must be a Class object\");\n-  Klass* k = ((Klass*)java_class->metadata_field_raw(_klass_offset));\n-  assert(k == NULL || k->is_klass(), \"type check\");\n-  return k;\n-}\n-\n-\n@@ -2672,0 +2647,45 @@\n+Handle java_lang_Throwable::get_cause_with_stack_trace(Handle throwable, TRAPS) {\n+  \/\/ Call to JVM to fill in the stack trace and clear declaringClassObject to\n+  \/\/ not keep classes alive in the stack trace.\n+  \/\/ call this:  public StackTraceElement[] getStackTrace()\n+  assert(throwable.not_null(), \"shouldn't be\");\n+\n+  JavaValue result(T_ARRAY);\n+  JavaCalls::call_virtual(&result, throwable,\n+                          vmClasses::Throwable_klass(),\n+                          vmSymbols::getStackTrace_name(),\n+                          vmSymbols::getStackTrace_signature(),\n+                          CHECK_NH);\n+  Handle stack_trace(THREAD, result.get_oop());\n+  assert(stack_trace->is_objArray(), \"Should be an array\");\n+\n+  \/\/ Throw ExceptionInInitializerError as the cause with this exception in\n+  \/\/ the message and stack trace.\n+\n+  \/\/ Now create the message with the original exception and thread name.\n+  Symbol* message = java_lang_Throwable::detail_message(throwable());\n+  ResourceMark rm(THREAD);\n+  stringStream st;\n+  st.print(\"Exception %s%s \", throwable()->klass()->name()->as_klass_external_name(),\n+             message == nullptr ? \"\" : \":\");\n+  if (message == NULL) {\n+    st.print(\"[in thread \\\"%s\\\"]\", THREAD->name());\n+  } else {\n+    st.print(\"%s [in thread \\\"%s\\\"]\", message->as_C_string(), THREAD->name());\n+  }\n+\n+  Symbol* exception_name = vmSymbols::java_lang_ExceptionInInitializerError();\n+  Handle h_cause = Exceptions::new_exception(THREAD, exception_name, st.as_string());\n+\n+  \/\/ If new_exception returns a different exception while creating the exception, return null.\n+  if (h_cause->klass()->name() != exception_name) {\n+    log_info(class, init)(\"Exception thrown while saving initialization exception %s\",\n+                          h_cause->klass()->external_name());\n+    return Handle();\n+  }\n+  java_lang_Throwable::set_stacktrace(h_cause(), stack_trace());\n+  \/\/ Clear backtrace because the stacktrace should be used instead.\n+  set_backtrace(h_cause(), NULL);\n+  return h_cause;\n+}\n+\n@@ -4268,1 +4288,1 @@\n-ClassLoaderData* java_lang_ClassLoader::loader_data_raw(oop loader) {\n+ClassLoaderData* java_lang_ClassLoader::loader_data(oop loader) {\n@@ -4271,1 +4291,1 @@\n-  return RawAccess<>::load_at(loader, _loader_data_offset);\n+  return HeapAccess<>::load_at(loader, _loader_data_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":57,"deletions":37,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -325,1 +325,0 @@\n-  static Klass* as_Klass_raw(oop java_class);\n@@ -371,1 +370,0 @@\n-  static int oop_size_raw(oop java_class);\n@@ -374,1 +372,0 @@\n-  static int static_oop_field_count_raw(oop java_class);\n@@ -569,0 +566,4 @@\n+\n+  \/\/ For recreating class initialization error exceptions.\n+  static Handle get_cause_with_stack_trace(Handle throwable, TRAPS);\n+\n@@ -1357,1 +1358,1 @@\n-  static ClassLoaderData* loader_data_raw(oop loader);\n+  static ClassLoaderData* loader_data(oop loader);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-inline int java_lang_Class::oop_size_raw(oop java_class) {\n+inline int java_lang_Class::oop_size(oop java_class) {\n@@ -266,1 +266,1 @@\n-  int size = java_class->int_field_raw(_oop_size_offset);\n+  int size = java_class->int_field(_oop_size_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -375,2 +375,0 @@\n-  primitive_hash<const ModuleEntry*>,\n-  primitive_equals<const ModuleEntry*>,\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -701,1 +701,1 @@\n-      ls.print(\"get_module(): Unamed Module\");\n+      ls.print(\"get_module(): Unnamed Module\");\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -200,2 +200,0 @@\n-  primitive_hash<const PackageEntry*>,\n-  primitive_equals<const PackageEntry*>,\n","filename":"src\/hotspot\/share\/classfile\/packageEntry.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-  assert(!HeapShared::is_archived_object(s), \"sanity\");\n+  assert(!HeapShared::is_archived_object_during_dumptime(s), \"sanity\");\n@@ -727,1 +727,1 @@\n-  typeArrayOop new_v = (typeArrayOop)HeapShared::archive_heap_object(v);\n+  typeArrayOop new_v = (typeArrayOop)HeapShared::archive_object(v);\n@@ -731,1 +731,1 @@\n-  new_s = HeapShared::archive_heap_object(s);\n+  new_s = HeapShared::archive_object(s);\n@@ -782,1 +782,1 @@\n-  } else if (!HeapShared::closed_archive_heap_region_mapped()) {\n+  } else if (!HeapShared::closed_regions_mapped()) {\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1626,0 +1626,2 @@\n+\n+    InstanceKlass::clean_initialization_error_table();\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/classListWriter.hpp\"\n@@ -265,0 +266,6 @@\n+  if (k->is_scratch_class()) {\n+    return warn_excluded(k, \"A scratch class\");\n+  }\n+  if (!k->is_loaded()) {\n+    return warn_excluded(k, \"Not in loaded state\");\n+  }\n@@ -286,11 +293,2 @@\n-  if (k->init_state() < InstanceKlass::linked) {\n-    \/\/ In CDS dumping, we will attempt to link all classes. Those that fail to link will\n-    \/\/ be recorded in DumpTimeClassInfo.\n-    Arguments::assert_is_dumping_archive();\n-\n-    \/\/ TODO -- rethink how this can be handled.\n-    \/\/ We should try to link ik, however, we can't do it here because\n-    \/\/ 1. We are at VM exit\n-    \/\/ 2. linking a class may cause other classes to be loaded, which means\n-    \/\/    a custom ClassLoader.loadClass() may be called, at a point where the\n-    \/\/    class loader doesn't expect it.\n+\n+  if (!k->is_linked()) {\n@@ -299,4 +297,0 @@\n-    } else {\n-      if (k->can_be_verified_at_dumptime()) {\n-        return warn_excluded(k, \"Not linked\");\n-      }\n@@ -304,12 +298,10 @@\n-  }\n-  if (DynamicDumpSharedSpaces && k->major_version() < 50 \/*JAVA_6_VERSION*\/) {\n-    \/\/ In order to support old classes during dynamic dump, class rewriting needs to\n-    \/\/ be reverted. This would result in more complex code and testing but not much gain.\n-    ResourceMark rm;\n-    log_warning(cds)(\"Pre JDK 6 class not supported by CDS: %u.%u %s\",\n-                     k->major_version(),  k->minor_version(), k->name()->as_C_string());\n-    return true;\n-  }\n-\n-  if (!k->can_be_verified_at_dumptime() && k->is_linked()) {\n-    return warn_excluded(k, \"Old class has been linked\");\n+  } else {\n+    if (!k->can_be_verified_at_dumptime()) {\n+      \/\/ We have an old class that has been linked (e.g., it's been executed during\n+      \/\/ dump time). This class has been verified using the old verifier, which\n+      \/\/ doesn't save the verification constraints, so check_verification_constraints()\n+      \/\/ won't work at runtime.\n+      \/\/ As a result, we cannot store this class. It must be loaded and fully verified\n+      \/\/ at runtime.\n+      return warn_excluded(k, \"Old class has been linked\");\n+    }\n@@ -344,1 +336,1 @@\n-bool SystemDictionaryShared::is_sharing_possible(ClassLoaderData* loader_data) {\n+bool SystemDictionaryShared::is_builtin_loader(ClassLoaderData* loader_data) {\n@@ -436,2 +428,0 @@\n-  primitive_hash<Symbol*>,\n-  primitive_equals<Symbol*>,\n@@ -447,1 +437,1 @@\n-  Arguments::assert_is_dumping_archive();\n+  assert(Arguments::is_dumping_archive() || ClassListWriter::is_enabled(), \"sanity\");\n@@ -561,1 +551,3 @@\n-  remove_dumptime_info(klass);\n+  if (Arguments::is_dumping_archive()) {\n+    remove_dumptime_info(klass);\n+  }\n@@ -573,0 +565,5 @@\n+\n+  if (ClassListWriter::is_enabled()) {\n+    ClassListWriter cw;\n+    cw.handle_class_unloading((const InstanceKlass*)klass);\n+  }\n@@ -1666,1 +1663,1 @@\n-  if (!HeapShared::open_archive_heap_region_mapped()) {\n+  if (!HeapShared::open_regions_mapped()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":30,"deletions":33,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -209,2 +209,1 @@\n-  \/\/ Check if sharing is supported for the class loader.\n-  static bool is_sharing_possible(ClassLoaderData* loader_data);\n+  static bool is_builtin_loader(ClassLoaderData* loader_data);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -274,2 +274,1 @@\n-typedef ResourceHashtable<int, sig_as_verification_types*,\n-                          primitive_hash<int>, primitive_equals<int>, 1007>\n+typedef ResourceHashtable<int, sig_as_verification_types*, 1007>\n","filename":"src\/hotspot\/share\/classfile\/verifier.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-    \/\/ HeapShared::fixup_mapped_heap_regions() fills the empty\n+    \/\/ HeapShared::fixup_mapped_regions() fills the empty\n@@ -142,1 +142,1 @@\n-    HeapShared::fixup_mapped_heap_regions();\n+    HeapShared::fixup_mapped_regions();\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -372,0 +372,1 @@\n+  template(getStackTrace_name,                        \"getStackTrace\")                            \\\n@@ -598,1 +599,3 @@\n-  template(reflect_method_signature,                  \"Ljava\/lang\/reflect\/Method;\")                                                    \\\n+  template(reflect_method_signature,                  \"Ljava\/lang\/reflect\/Method;\")                               \\\n+  template(getStackTrace_signature,                    \"()[Ljava\/lang\/StackTraceElement;\")                        \\\n+                                                                                                                  \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+#include \"runtime\/javaFrameAnchor.hpp\"\n+#include \"runtime\/jniHandles.hpp\"\n@@ -716,1 +718,1 @@\n-                     jobject receiver, ByteSize jfa_sp_offset) :\n+                                       jobject receiver, ByteSize frame_data_offset) :\n@@ -720,1 +722,1 @@\n-  _jfa_sp_offset(jfa_sp_offset) {\n+  _frame_data_offset(frame_data_offset) {\n@@ -725,1 +727,1 @@\n-                             jobject receiver, ByteSize jfa_sp_offset) {\n+                                               jobject receiver, ByteSize frame_data_offset) {\n@@ -732,1 +734,1 @@\n-    blob = new (size) OptimizedEntryBlob(name, size, cb, exception_handler_offset, receiver, jfa_sp_offset);\n+    blob = new (size) OptimizedEntryBlob(name, size, cb, exception_handler_offset, receiver, frame_data_offset);\n@@ -739,0 +741,8 @@\n+\n+void OptimizedEntryBlob::oops_do(OopClosure* f, const frame& frame) {\n+  frame_data_for_frame(frame)->old_handles->oops_do(f);\n+}\n+\n+JavaFrameAnchor* OptimizedEntryBlob::jfa_for_frame(const frame& frame) const {\n+  return &frame_data_for_frame(frame)->jfa;\n+}\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/javaFrameAnchor.hpp\"\n@@ -37,0 +38,1 @@\n+class JNIHandleBlock;\n@@ -80,1 +82,1 @@\n-class JavaFrameAnchor; \/\/ for EntryBlob::jfa_for_frame\n+class JavaFrameAnchor; \/\/ for OptimizedEntryBlob::jfa_for_frame\n@@ -729,1 +731,2 @@\n-\/\/ For optimized upcall stubs\n+class ProgrammableUpcallHandler;\n+\n@@ -731,0 +734,1 @@\n+  friend class ProgrammableUpcallHandler;\n@@ -734,1 +738,1 @@\n-  ByteSize _jfa_sp_offset;\n+  ByteSize _frame_data_offset;\n@@ -737,1 +741,9 @@\n-            jobject receiver, ByteSize jfa_sp_offset);\n+                     jobject receiver, ByteSize frame_data_offset);\n+\n+  struct FrameData {\n+    JavaFrameAnchor jfa;\n+    JavaThread* thread;\n+    JNIHandleBlock* old_handles;\n+    JNIHandleBlock* new_handles;\n+    bool should_detach;\n+  };\n@@ -739,0 +751,2 @@\n+  \/\/ defined in frame_ARCH.cpp\n+  FrameData* frame_data_for_frame(const frame& frame) const;\n@@ -742,2 +756,2 @@\n-                           intptr_t exception_handler_offset, jobject receiver,\n-                           ByteSize jfa_sp_offset);\n+                                    intptr_t exception_handler_offset, jobject receiver,\n+                                    ByteSize frame_data_offset);\n@@ -747,1 +761,0 @@\n-  ByteSize jfa_sp_offset() const { return _jfa_sp_offset; }\n@@ -749,1 +762,0 @@\n-  \/\/ defined in frame_ARCH.cpp\n@@ -752,0 +764,2 @@\n+  void oops_do(OopClosure* f, const frame& frame);\n+\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1240,0 +1240,1 @@\n+ public:\n@@ -1242,1 +1243,0 @@\n- public:\n@@ -1755,0 +1755,34 @@\n+\/\/ Try to determine whether root method in some context is concrete or not based on the information about the unique method\n+\/\/ in that context. It exploits the fact that concrete root method is always inherited into the context when there's a unique method.\n+\/\/ Hence, unique method holder is always a supertype of the context class when root method is concrete.\n+\/\/ Examples for concrete_root_method\n+\/\/      C (C.m uniqm)\n+\/\/      |\n+\/\/      CX (ctxk) uniqm is inherited into context.\n+\/\/\n+\/\/      CX (ctxk) (CX.m uniqm) here uniqm is defined in ctxk.\n+\/\/ Examples for !concrete_root_method\n+\/\/      CX (ctxk)\n+\/\/      |\n+\/\/      C (C.m uniqm) uniqm is in subtype of ctxk.\n+bool Dependencies::is_concrete_root_method(Method* uniqm, InstanceKlass* ctxk) {\n+  if (uniqm == NULL) {\n+    return false; \/\/ match Dependencies::is_concrete_method() behavior\n+  }\n+  \/\/ Theoretically, the \"direction\" of subtype check matters here.\n+  \/\/ On one hand, in case of interface context with a single implementor, uniqm can be in a superclass of the implementor which\n+  \/\/ is not related to context class.\n+  \/\/ On another hand, uniqm could come from an interface unrelated to the context class, but right now it is not possible:\n+  \/\/ it is required that uniqm->method_holder() is the participant (uniqm->method_holder() <: ctxk), hence a default method\n+  \/\/ can't be used as unique.\n+  if (ctxk->is_interface()) {\n+    InstanceKlass* implementor = ctxk->implementor();\n+    assert(implementor != ctxk, \"single implementor only\"); \/\/ should have been invalidated earlier\n+    ctxk = implementor;\n+  }\n+  InstanceKlass* holder = uniqm->method_holder();\n+  assert(!holder->is_interface(), \"no default methods allowed\");\n+  assert(ctxk->is_subclass_of(holder) || holder->is_subclass_of(ctxk), \"not related\");\n+  return ctxk->is_subclass_of(holder);\n+}\n+\n@@ -1760,4 +1794,0 @@\n-  \/\/ Here is a missing optimization:  If uniqm->is_final(),\n-  \/\/ we don't really need to search beneath it for overrides.\n-  \/\/ This is probably not important, since we don't use dependencies\n-  \/\/ to track final methods.  (They can't be \"definalized\".)\n@@ -1766,1 +1796,11 @@\n-  return k;\n+  if (k != NULL) {\n+    return k;\n+  }\n+  if (!Dependencies::is_concrete_root_method(uniqm, ctxk) || changes != NULL) {\n+    Klass* conck = find_witness_AME(ctxk, uniqm, changes);\n+    if (conck != NULL) {\n+      \/\/ Found a concrete subtype 'conck' which does not override abstract root method.\n+      return conck;\n+    }\n+  }\n+  return NULL;\n@@ -1769,0 +1809,30 @@\n+\/\/ Search for AME.\n+\/\/ There are two version of checks.\n+\/\/   1) Spot checking version(Classload time). Newly added class is checked for AME.\n+\/\/      Checks whether abstract\/overpass method is inherited into\/declared in newly added concrete class.\n+\/\/   2) Compile time analysis for abstract\/overpass(abstract klass) root_m. The non uniqm subtrees are checked for concrete classes.\n+Klass* Dependencies::find_witness_AME(InstanceKlass* ctxk, Method* m, KlassDepChange* changes) {\n+  if (m != NULL) {\n+    if (changes != NULL) {\n+      \/\/ Spot checking version.\n+      ConcreteMethodFinder wf(m);\n+      Klass* new_type = changes->as_new_klass_change()->new_type();\n+      if (wf.witnessed_reabstraction_in_supers(new_type)) {\n+        return new_type;\n+      }\n+    } else {\n+      \/\/ Note: It is required that uniqm->method_holder() is the participant (see ClassHierarchyWalker::found_method()).\n+      ConcreteSubtypeFinder wf(m->method_holder());\n+      Klass* conck = wf.find_witness(ctxk);\n+      if (conck != NULL) {\n+        Method* cm = InstanceKlass::cast(conck)->find_instance_method(m->name(), m->signature(), Klass::PrivateLookupMode::skip);\n+        if (!Dependencies::is_concrete_method(cm, conck)) {\n+          return conck;\n+        }\n+      }\n+    }\n+  }\n+  return NULL;\n+}\n+\n+\n@@ -1790,0 +1860,3 @@\n+  if (!Dependencies::is_concrete_method(fm, NULL)) {\n+    fm = NULL; \/\/ ignore abstract methods\n+  }\n@@ -1799,0 +1872,3 @@\n+  } else if (Dependencies::find_witness_AME(ctxk, fm) != NULL) {\n+    \/\/ Found a concrete subtype which does not override abstract root method.\n+    return NULL;\n@@ -1800,0 +1876,1 @@\n+  assert(Dependencies::is_concrete_root_method(fm, ctxk) == Dependencies::is_concrete_method(m, ctxk), \"mismatch\");\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":83,"deletions":6,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -387,0 +387,3 @@\n+  static bool is_concrete_root_method(Method* uniqm, InstanceKlass* ctxk);\n+  static Klass* find_witness_AME(InstanceKlass* ctxk, Method* m, KlassDepChange* changes = NULL);\n+\n","filename":"src\/hotspot\/share\/code\/dependencies.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2230,2 +2230,4 @@\n-  typedef ResourceHashtable<DependencySignature, int, &DependencySignature::hash,\n-                            &DependencySignature::equals, 11027> DepTable;\n+  typedef ResourceHashtable<DependencySignature, int, 11027,\n+                            ResourceObj::RESOURCE_AREA, mtInternal,\n+                            &DependencySignature::hash,\n+                            &DependencySignature::equals> DepTable;\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -143,0 +143,1 @@\n+volatile jint CompileBroker::_native_compilation_id = 0;\n@@ -1591,1 +1592,1 @@\n-    return Atomic::add(&_compilation_id, 1);\n+    return Atomic::add(CICountNative ? &_native_compilation_id : &_compilation_id, 1);\n@@ -2128,2 +2129,0 @@\n-  \/\/ simulate crash during compilation\n-  assert(task->compile_id() != CICrashAt, \"just as planned\");\n@@ -2477,0 +2476,2 @@\n+  } else if (CICountNative && method->is_native()) {\n+    last_compile_type = native_compile;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -177,0 +177,1 @@\n+  static volatile jint _native_compilation_id;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+  develop(bool, CICountNative, false,                                       \\\n+          \"use a separate counter when assigning ids to native \"            \\\n+          \"compilations\")                                                   \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/compiler\/compiler_globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -169,6 +169,0 @@\n-    static unsigned hash(const address& a) {\n-      return primitive_hash<address>(a);\n-    }\n-    static bool equals(const address& a0, const address& a1) {\n-      return primitive_equals<address>(a0, a1);\n-    }\n@@ -196,2 +190,0 @@\n-      SourceFileInfo::hash,\n-      SourceFileInfo::equals,\n","filename":"src\/hotspot\/share\/compiler\/disassembler.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-          error_msg = \"Method pattern uses '\/' together with '::'\";\n+          error_msg = \"Method pattern uses '\/' together with '::' (tips: replace '\/' with '+' for hidden classes)\";\n","filename":"src\/hotspot\/share\/compiler\/methodMatcher.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,5 +251,10 @@\n-    result = survivor_gc_alloc_region(node_index)->attempt_allocation_locked(min_word_size,\n-                                                                             desired_word_size,\n-                                                                             actual_word_size);\n-    if (result == NULL) {\n-      set_survivor_full();\n+    \/\/ Multiple threads may have queued at the FreeList_lock above after checking whether there\n+    \/\/ actually is still memory available. Redo the check under the lock to avoid unnecessary work;\n+    \/\/ the memory may have been used up as the threads waited to acquire the lock.\n+    if (!survivor_is_full()) {\n+      result = survivor_gc_alloc_region(node_index)->attempt_allocation_locked(min_word_size,\n+                                                                              desired_word_size,\n+                                                                              actual_word_size);\n+      if (result == NULL) {\n+        set_survivor_full();\n+      }\n@@ -275,5 +280,10 @@\n-    result = old_gc_alloc_region()->attempt_allocation_locked(min_word_size,\n-                                                              desired_word_size,\n-                                                              actual_word_size);\n-    if (result == NULL) {\n-      set_old_full();\n+    \/\/ Multiple threads may have queued at the FreeList_lock above after checking whether there\n+    \/\/ actually is still memory available. Redo the check under the lock to avoid unnecessary work;\n+    \/\/ the memory may have been used up as the threads waited to acquire the lock.\n+    if (!old_is_full()) {\n+      result = old_gc_alloc_region()->attempt_allocation_locked(min_word_size,\n+                                                                desired_word_size,\n+                                                                actual_word_size);\n+      if (result == NULL) {\n+        set_old_full();\n+      }\n@@ -432,1 +442,1 @@\n-  _g1h->g1mm()->update_sizes();\n+  _g1h->monitoring_support()->update_sizes();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -78,1 +78,0 @@\n-  _next_offset_index(0),\n@@ -239,1 +238,0 @@\n-  if (addr >= _hr->top()) return _hr->top();\n@@ -249,1 +247,1 @@\n-    alloc_block_work(&next_boundary, &next_index, q, n);\n+    alloc_block_work(&next_boundary, q, n);\n@@ -264,2 +262,2 @@\n-void G1BlockOffsetTablePart::alloc_block_work(HeapWord** threshold_, size_t* index_,\n-                                              HeapWord* blk_start, HeapWord* blk_end) {\n+void G1BlockOffsetTablePart::alloc_block_work(HeapWord** threshold_, HeapWord* blk_start,\n+                                              HeapWord* blk_end) {\n@@ -268,1 +266,1 @@\n-  size_t    index = *index_;\n+  size_t    index =  _bot->index_for_raw(threshold);\n@@ -286,2 +284,2 @@\n-  \/\/ that _next_offset_index and _next_offset_threshold are not\n-  \/\/ updated until the end of this method.\n+  \/\/ that _next_offset_threshold is not updated until the end\n+  \/\/ of this method.\n@@ -310,1 +308,0 @@\n-  \/\/ index_ and threshold_ updated here.\n@@ -312,1 +309,0 @@\n-  *index_ = index;\n@@ -344,1 +340,2 @@\n-  size_t end_card = MIN2(_bot->index_for(_hr->top() - 1), _next_offset_index - 1);\n+  size_t next_offset_index = _bot->index_for_raw(_next_offset_threshold);\n+  size_t end_card = MIN2(_bot->index_for(_hr->top() - 1), next_offset_index - 1);\n@@ -401,1 +398,0 @@\n-  out->print_cr(\"  next offset index:     \" SIZE_FORMAT, _next_offset_index);\n@@ -406,2 +402,1 @@\n-  _next_offset_index = _bot->index_for_raw(_hr->bottom());\n-  _next_offset_index++;\n+  size_t next_offset_index = _bot->index_for_raw(_hr->bottom()) + 1;\n@@ -409,1 +404,1 @@\n-    _bot->address_for_index_raw(_next_offset_index);\n+    _bot->address_for_index_raw(next_offset_index);\n@@ -421,2 +416,1 @@\n-  _next_offset_index = _bot->index_for(_hr->bottom());\n-  _next_offset_index++;\n+  size_t next_offset_index = _bot->index_for(_hr->bottom()) + 1 ;\n@@ -424,1 +418,1 @@\n-    _bot->address_for_index(_next_offset_index);\n+    _bot->address_for_index(next_offset_index);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -115,1 +115,0 @@\n-  size_t    _next_offset_index;      \/\/ index corresponding to that boundary\n@@ -169,2 +168,1 @@\n-  \/\/ above \"blk_start\", and that \"*index_\" be the corresponding array\n-  \/\/ index.  If the block starts at or crosses \"*threshold_\", records\n+  \/\/ above \"blk_start\".  If the block starts at or crosses \"*threshold_\", records\n@@ -173,4 +171,5 @@\n-  \/\/ block.  Updates \"*threshold_\" and \"*index_\" to correspond to the first\n-  \/\/ index after the block end.\n-  void alloc_block_work(HeapWord** threshold_, size_t* index_,\n-                        HeapWord* blk_start, HeapWord* blk_end);\n+  \/\/ block.  Updates \"*threshold_\" to correspond to the first index after\n+  \/\/ the block end.\n+  void alloc_block_work(HeapWord** threshold_,\n+                        HeapWord* blk_start,\n+                        HeapWord* blk_end);\n@@ -217,1 +216,1 @@\n-      alloc_block_work(&_next_offset_threshold, &_next_offset_index, blk_start, blk_end);\n+      alloc_block_work(&_next_offset_threshold, blk_start, blk_end);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-  size_t index = _bot->index_for(addr);\n+\n@@ -113,1 +113,3 @@\n-  assert(index < _next_offset_index, \"Precondition\");\n+  assert(addr < _next_offset_threshold, \"Precondition\");\n+\n+  size_t index = _bot->index_for(addr);\n@@ -133,1 +135,0 @@\n-  if (addr >= _hr->top()) return _hr->top();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-  _inline_ptr_bits_per_card(HeapRegion::LogOfHRGrainBytes - CardTable::card_shift) {\n+  _inline_ptr_bits_per_card(HeapRegion::LogCardsPerRegion) {\n@@ -197,0 +197,2 @@\n+    G1CardSetHashTableFound() : _value(nullptr) { }\n+\n@@ -250,1 +252,1 @@\n-  CardSetPtr get(uint region_idx) {\n+  G1CardSetHashTableValue* get(uint region_idx) {\n@@ -254,4 +256,2 @@\n-    if (_table.get(Thread::current(), lookup, found)) {\n-      return found.value()->_card_set;\n-    }\n-    return nullptr;\n+    _table.get(Thread::current(), lookup, found);\n+    return found.value();\n@@ -614,2 +614,3 @@\n-    bool should_grow_table = false;\n-    G1CardSetHashTableValue* table_entry = get_or_add_card_set(card_region, &should_grow_table);\n+    G1CardSetHashTableValue* table_entry = get_card_set(card_region);\n+    assert(table_entry != nullptr, \"Table entry not found for transferred cards\");\n+\n@@ -659,1 +660,1 @@\n-G1CardSet::CardSetPtr G1CardSet::get_card_set(uint card_region) {\n+G1CardSetHashTableValue* G1CardSet::get_card_set(uint card_region) {\n@@ -712,2 +713,2 @@\n-  CardSetPtr card_set = get_card_set(card_region);\n-  if (card_set == nullptr) {\n+  G1CardSetHashTableValue* table_entry = get_card_set(card_region);\n+  if (table_entry == nullptr) {\n@@ -715,1 +716,4 @@\n-  } else if (card_set == FullCardSet) {\n+  }\n+\n+  CardSetPtr card_set = table_entry->_card_set;\n+  if (card_set == FullCardSet) {\n@@ -739,2 +743,2 @@\n-  CardSetPtr card_set = get_card_set(card_region);\n-  if (card_set == nullptr) {\n+  G1CardSetHashTableValue* table_entry = get_card_set(card_region);\n+  if (table_entry == nullptr) {\n@@ -743,1 +747,4 @@\n-  } else if (card_set == FullCardSet) {\n+  }\n+\n+  CardSetPtr card_set = table_entry->_card_set;\n+  if (card_set == FullCardSet) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":22,"deletions":15,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -50,0 +50,2 @@\n+  \/\/ Holds the number of bits required to cover the maximum card index for the\n+  \/\/ regions covered by this card set.\n@@ -51,0 +53,1 @@\n+\n@@ -257,1 +260,1 @@\n-  CardSetPtr get_card_set(uint card_region);\n+  G1CardSetHashTableValue* get_card_set(uint card_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,0 +39,31 @@\n+\/\/ A helper class to encode a few card indexes within a CardSetPtr.\n+\/\/\n+\/\/ The pointer value (either 32 or 64 bits) is split into two areas:\n+\/\/\n+\/\/ - Header containing identifying tag and number of encoded cards.\n+\/\/ - Data area containing the card indexes themselves\n+\/\/\n+\/\/ The header starts (from LSB) with the identifying tag (two bits,\n+\/\/ always 00), and three bits size. The size stores the number of\n+\/\/ valid card indexes after the header.\n+\/\/\n+\/\/ The data area makes up the remainder of the word, with card indexes\n+\/\/ put one after another at increasing bit positions. The separate\n+\/\/ card indexes use just enough space (bits) to represent the whole\n+\/\/ range of cards needed for covering the whole range of values\n+\/\/ (typically in a region). There may be unused space at the top of\n+\/\/ the word.\n+\/\/\n+\/\/ Example:\n+\/\/\n+\/\/   64 bit pointer size, with 8M-size regions (8M == 2^23)\n+\/\/ -> 2^14 (2^23 \/ 2^9) cards; each card represents 512 bytes in a region\n+\/\/ -> 14 bits per card; must have enough bits to hold the max card index\n+\/\/ -> may encode up to 4 cards into it, using 61 bits (5 bits header + 4 * 14)\n+\/\/\n+\/\/ M                                                     L\n+\/\/ S                                                     S\n+\/\/ B                                                     B\n+\/\/ +------+         +---------------+--------------+-----+\n+\/\/ |unused|   ...   |  card_index1  | card_index0  |SSS00|\n+\/\/ +------+         +---------------+--------------+-----+\n@@ -66,0 +97,3 @@\n+\n+  uint find(uint const card_idx, uint const bits_per_card, uint start_at, uint num_elems);\n+\n@@ -70,1 +104,1 @@\n-    assert(((uintptr_t)_value & G1CardSet::CardSetInlinePtr) == G1CardSet::CardSetInlinePtr, \"Value \" PTR_FORMAT \" is not a valid G1CardSetInPtr.\", p2i(_value));\n+    assert(G1CardSet::card_set_type(_value) == G1CardSet::CardSetInlinePtr, \"Value \" PTR_FORMAT \" is not a valid G1CardSetInPtr.\", p2i(_value));\n@@ -74,1 +108,1 @@\n-    assert(((uintptr_t)_value & G1CardSet::CardSetInlinePtr) == G1CardSet::CardSetInlinePtr, \"Value \" PTR_FORMAT \" is not a valid G1CardSetInPtr.\", p2i(_value));\n+    assert(G1CardSet::card_set_type(_value) == G1CardSet::CardSetInlinePtr, \"Value \" PTR_FORMAT \" is not a valid G1CardSetInPtr.\", p2i(_value));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetContainers.hpp","additions":36,"deletions":2,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+  uint cur_idx = 0;\n@@ -52,0 +53,3 @@\n+    if (num_elems > 0) {\n+      cur_idx = find(card_idx, bits_per_card, cur_idx, num_elems);\n+    }\n@@ -53,1 +57,1 @@\n-    if (contains(card_idx, bits_per_card)) {\n+    if (cur_idx < num_elems) {\n@@ -75,2 +79,3 @@\n-inline bool G1CardSetInlinePtr::contains(uint card_idx, uint bits_per_card) {\n-  uint num_elems = num_cards_in(_value);\n+inline uint G1CardSetInlinePtr::find(uint card_idx, uint bits_per_card, uint start_at, uint num_elems) {\n+  assert(start_at < num_elems, \"Precondition!\");\n+\n@@ -78,0 +83,1 @@\n+  uintptr_t value = ((uintptr_t)_value) >> card_pos_for(start_at, bits_per_card);\n@@ -79,1 +85,0 @@\n-  uintptr_t value = ((uintptr_t)_value) >> card_pos_for(0, bits_per_card);\n@@ -81,1 +86,1 @@\n-  for (uint cur_idx = 0; cur_idx < num_elems; cur_idx++) {\n+  for (uint cur_idx = start_at; cur_idx < num_elems; cur_idx++) {\n@@ -83,1 +88,1 @@\n-      return true;\n+      return cur_idx;\n@@ -87,1 +92,10 @@\n-  return false;\n+  return num_elems;\n+}\n+\n+inline bool G1CardSetInlinePtr::contains(uint card_idx, uint bits_per_card) {\n+  uint num_elems = num_cards_in(_value);\n+  if (num_elems == 0) {\n+    return false;\n+  }\n+  uint cur_idx = find(card_idx, bits_per_card, 0, num_elems);\n+  return cur_idx < num_elems;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetContainers.inline.hpp","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+#include \"gc\/g1\/g1GCCounters.hpp\"\n@@ -166,1 +167,1 @@\n-  if (res == NULL && do_expand && _expand_heap_after_alloc_failure) {\n+  if (res == NULL && do_expand) {\n@@ -169,2 +170,1 @@\n-    \/\/ safepoint. If this assumption changes we might have to\n-    \/\/ reconsider the use of _expand_heap_after_alloc_failure.\n+    \/\/ safepoint.\n@@ -185,2 +185,0 @@\n-    } else {\n-      _expand_heap_after_alloc_failure = false;\n@@ -350,1 +348,1 @@\n-    g1mm()->update_sizes();\n+    monitoring_support()->update_sizes();\n@@ -1031,0 +1029,3 @@\n+  if (!VerifyBeforeGC) {\n+    return;\n+  }\n@@ -1076,0 +1077,3 @@\n+  if (!VerifyAfterGC) {\n+    return;\n+  }\n@@ -1452,2 +1456,1 @@\n-  _expand_heap_after_alloc_failure(true),\n-  _g1mm(NULL),\n+  _monitoring_support(nullptr),\n@@ -1766,1 +1769,1 @@\n-  _g1mm = new G1MonitoringSupport(this);\n+  _monitoring_support = new G1MonitoringSupport(this);\n@@ -1779,0 +1782,4 @@\n+bool G1CollectedHeap::concurrent_mark_is_terminating() const {\n+  return _cm_thread->should_terminate();\n+}\n+\n@@ -1841,2 +1848,4 @@\n-                           (ConcGCThreads > 1),                            \/\/ mt discovery\n-                           ConcGCThreads,                                  \/\/ degree of mt discovery\n+                           \/\/ We discover with the gc worker threads during Remark, so both\n+                           \/\/ thread counts must be considered for discovery.\n+                           (ParallelGCThreads > 1) || (ConcGCThreads > 1), \/\/ mt discovery\n+                           MAX2(ParallelGCThreads, ConcGCThreads),         \/\/ degree of mt discovery\n@@ -2006,0 +2015,6 @@\n+\/\/ Helper for collect().\n+static G1GCCounters collection_counters(G1CollectedHeap* g1h) {\n+  MutexLocker ml(Heap_lock);\n+  return G1GCCounters(g1h);\n+}\n+\n@@ -2007,1 +2022,1 @@\n-  try_collect(cause);\n+  try_collect(cause, collection_counters(this));\n@@ -2202,14 +2217,2 @@\n-bool G1CollectedHeap::try_collect(GCCause::Cause cause) {\n-  assert_heap_not_locked();\n-\n-  \/\/ Lock to get consistent set of values.\n-  uint gc_count_before;\n-  uint full_gc_count_before;\n-  uint old_marking_started_before;\n-  {\n-    MutexLocker ml(Heap_lock);\n-    gc_count_before = total_collections();\n-    full_gc_count_before = total_full_collections();\n-    old_marking_started_before = _old_marking_cycles_started;\n-  }\n-\n+bool G1CollectedHeap::try_collect(GCCause::Cause cause,\n+                                  const G1GCCounters& counters_before) {\n@@ -2218,3 +2221,3 @@\n-                                    gc_count_before,\n-                                    old_marking_started_before);\n-  } else if (GCLocker::should_discard(cause, gc_count_before)) {\n+                                    counters_before.total_collections(),\n+                                    counters_before.old_marking_cycles_started());\n+  } else if (GCLocker::should_discard(cause, counters_before.total_collections())) {\n@@ -2231,1 +2234,1 @@\n-                                 gc_count_before,\n+                                 counters_before.total_collections(),\n@@ -2238,1 +2241,3 @@\n-    VM_G1CollectFull op(gc_count_before, full_gc_count_before, cause);\n+    VM_G1CollectFull op(counters_before.total_collections(),\n+                        counters_before.total_full_collections(),\n+                        cause);\n@@ -2870,15 +2875,0 @@\n-void G1CollectedHeap::gc_tracer_report_gc_start() {\n-  _gc_timer_stw->register_gc_start();\n-  _gc_tracer_stw->report_gc_start(gc_cause(), _gc_timer_stw->gc_start());\n-}\n-\n-void G1CollectedHeap::gc_tracer_report_gc_end(bool concurrent_operation_is_full_mark,\n-                                              G1EvacuationInfo& evacuation_info) {\n-  _gc_tracer_stw->report_evacuation_info(&evacuation_info);\n-  _gc_tracer_stw->report_tenuring_threshold(_policy->tenuring_threshold());\n-\n-  _gc_timer_stw->register_gc_end();\n-  _gc_tracer_stw->report_gc_end(_gc_timer_stw->gc_end(),\n-  _gc_timer_stw->time_partitions());\n-}\n-\n@@ -3013,18 +3003,0 @@\n-bool G1CollectedHeap::determine_start_concurrent_mark_gc(){\n-  \/\/ We should not be doing concurrent start unless the concurrent mark thread is running\n-  if (!_cm_thread->should_terminate()) {\n-    \/\/ This call will decide whether this pause is a concurrent start\n-    \/\/ pause. If it is, in_concurrent_start_gc() will return true\n-    \/\/ for the duration of this pause.\n-    policy()->decide_on_conc_mark_initiation();\n-  }\n-\n-  \/\/ We do not allow concurrent start to be piggy-backed on a mixed GC.\n-  assert(!collector_state()->in_concurrent_start_gc() ||\n-         collector_state()->in_young_only_phase(), \"sanity\");\n-  \/\/ We also do not allow mixed GCs during marking.\n-  assert(!collector_state()->mark_or_rebuild_in_progress() || collector_state()->in_young_only_phase(), \"sanity\");\n-\n-  return collector_state()->in_concurrent_start_gc();\n-}\n-\n@@ -3067,0 +3039,1 @@\n+  policy()->decide_on_concurrent_start_pause();\n@@ -3070,1 +3043,1 @@\n-  bool should_start_concurrent_mark_operation = determine_start_concurrent_mark_gc();\n+  bool should_start_concurrent_mark_operation = collector_state()->in_concurrent_start_gc();\n@@ -3091,1 +3064,1 @@\n-    G1MonitoringScope ms(g1mm(),\n+    G1MonitoringScope ms(monitoring_support(),\n@@ -3291,1 +3264,4 @@\n-    _pss.state_for_worker(index)->set_ref_discoverer(nullptr);\n+\n+    G1ParScanThreadState* pss = _pss.state_for_worker(index);\n+    pss->set_ref_discoverer(nullptr);\n+\n@@ -3293,2 +3269,2 @@\n-    G1CopyingKeepAliveClosure keep_alive(&_g1h, _pss.state_for_worker(index));\n-    G1ParEvacuateFollowersClosure complete_gc(&_g1h, _pss.state_for_worker(index), &_task_queues, _tm == RefProcThreadModel::Single ? nullptr : &_terminator, G1GCPhaseTimes::ObjCopy);\n+    G1CopyingKeepAliveClosure keep_alive(&_g1h, pss);\n+    G1ParEvacuateFollowersClosure complete_gc(&_g1h, pss, &_task_queues, _tm == RefProcThreadModel::Single ? nullptr : &_terminator, G1GCPhaseTimes::ObjCopy);\n@@ -3296,0 +3272,3 @@\n+\n+    \/\/ We have completed copying any necessary live referent objects.\n+    assert(pss->queue_is_empty(), \"both queue and overflow should be empty\");\n@@ -3306,1 +3285,1 @@\n-  double ref_proc_start = os::elapsedTime();\n+  Ticks start = Ticks::now();\n@@ -3311,9 +3290,0 @@\n-  \/\/ Use only a single queue for this PSS.\n-  G1ParScanThreadState*          pss = per_thread_states->state_for_worker(0);\n-  pss->set_ref_discoverer(NULL);\n-  assert(pss->queue_is_empty(), \"pre-condition\");\n-\n-\n-  ReferenceProcessorPhaseTimes& pt = *phase_times()->ref_phase_times();\n-\n-  ReferenceProcessorStats stats;\n@@ -3321,6 +3291,0 @@\n-\n-  \/\/ Parallel reference processing\n-  assert(no_of_gc_workers <= rp->max_num_queues(),\n-         \"Mismatch between the number of GC workers %u and the maximum number of Reference process queues %u\",\n-         no_of_gc_workers,  rp->max_num_queues());\n-\n@@ -3328,0 +3292,1 @@\n+\n@@ -3329,1 +3294,2 @@\n-  stats = rp->process_discovered_references(task, pt);\n+  ReferenceProcessorPhaseTimes& pt = *phase_times()->ref_phase_times();\n+  ReferenceProcessorStats stats = rp->process_discovered_references(task, pt);\n@@ -3333,3 +3299,0 @@\n-  \/\/ We have completed copying any necessary live referent objects.\n-  assert(pss->queue_is_empty(), \"both queue and overflow should be empty\");\n-\n@@ -3338,1 +3301,0 @@\n-  assert(!rp->discovery_enabled(), \"Postcondition\");\n@@ -3341,2 +3303,1 @@\n-  double ref_proc_time = os::elapsedTime() - ref_proc_start;\n-  phase_times()->record_ref_proc_time(ref_proc_time * 1000.0);\n+  phase_times()->record_ref_proc_time((Ticks::now() - start).seconds() * MILLIUNITS);\n@@ -3556,1 +3517,0 @@\n-  _expand_heap_after_alloc_failure = true;\n@@ -3756,3 +3716,5 @@\n-    \/\/ Closing the inner scope will execute the destructor for the G1RootProcessor object.\n-    \/\/ To extract its code root fixup time we measure total time of this scope and\n-    \/\/ subtract from the time the WorkGang task took.\n+    \/\/ Closing the inner scope will execute the destructor for the\n+    \/\/ G1RootProcessor object. By subtracting the WorkGang task from the total\n+    \/\/ time of this scope, we get the \"NMethod List Cleanup\" time. This list is\n+    \/\/ constructed during \"STW two-phase nmethod root processing\", see more in\n+    \/\/ nmethod.hpp\n@@ -3763,1 +3725,1 @@\n-  p->record_or_add_code_root_fixup_time((total_processing - task_time).seconds() * 1000.0);\n+  p->record_or_add_nmethod_list_cleanup_time((total_processing - task_time).seconds() * 1000.0);\n@@ -3788,0 +3750,1 @@\n+  \/\/ To access the protected constructor\/destructor\n@@ -3797,1 +3760,1 @@\n-    \/\/ See comment in evacuate_collection_set() for the reason of the scope.\n+    \/\/ See comment in evacuate_initial_collection_set() for the reason of the scope.\n@@ -3802,1 +3765,1 @@\n-  p->record_or_add_code_root_fixup_time((total_processing - task_time).seconds() * 1000.0);\n+  p->record_or_add_nmethod_list_cleanup_time((total_processing - task_time).seconds() * 1000.0);\n@@ -4189,1 +4152,1 @@\n-  g1mm()->update_eden_size();\n+  monitoring_support()->update_eden_size();\n@@ -4389,1 +4352,1 @@\n-  _g1mm->initialize_serviceability();\n+  _monitoring_support->initialize_serviceability();\n@@ -4393,1 +4356,1 @@\n-  return _g1mm->memory_usage();\n+  return _monitoring_support->memory_usage();\n@@ -4397,1 +4360,1 @@\n-  return _g1mm->memory_managers();\n+  return _monitoring_support->memory_managers();\n@@ -4401,1 +4364,1 @@\n-  return _g1mm->memory_pools();\n+  return _monitoring_support->memory_pools();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":67,"deletions":104,"binary":false,"changes":171,"status":"modified"},{"patch":"@@ -84,0 +84,1 @@\n+class G1GCCounters;\n@@ -242,8 +243,0 @@\n-  \/\/ It specifies whether we should attempt to expand the heap after a\n-  \/\/ region allocation failure. If heap expansion fails we set this to\n-  \/\/ false so that we don't re-attempt the heap expansion (it's likely\n-  \/\/ that subsequent expansion attempts will also fail if one fails).\n-  \/\/ Currently, it is only consulted during GC and it's reset at the\n-  \/\/ start of each GC.\n-  bool _expand_heap_after_alloc_failure;\n-\n@@ -251,1 +244,1 @@\n-  G1MonitoringSupport* _g1mm;\n+  G1MonitoringSupport* _monitoring_support;\n@@ -406,3 +399,0 @@\n-  void gc_tracer_report_gc_start();\n-  void gc_tracer_report_gc_end(bool concurrent_operation_is_full_mark, G1EvacuationInfo& evacuation_info);\n-\n@@ -583,3 +573,3 @@\n-  G1MonitoringSupport* g1mm() {\n-    assert(_g1mm != NULL, \"should have been initialized\");\n-    return _g1mm;\n+  G1MonitoringSupport* monitoring_support() {\n+    assert(_monitoring_support != nullptr, \"should have been initialized\");\n+    return _monitoring_support;\n@@ -676,1 +666,5 @@\n-  uint old_marking_cycles_completed() {\n+  uint old_marking_cycles_started() const {\n+    return _old_marking_cycles_started;\n+  }\n+\n+  uint old_marking_cycles_completed() const {\n@@ -807,2 +801,0 @@\n-  bool determine_start_concurrent_mark_gc();\n-\n@@ -1010,0 +1002,3 @@\n+  \/\/ Returns whether concurrent mark threads (and the VM) are about to terminate.\n+  bool concurrent_mark_is_terminating() const;\n+\n@@ -1141,1 +1136,1 @@\n-  bool try_collect(GCCause::Cause cause);\n+  bool try_collect(GCCause::Cause cause, const G1GCCounters& counters_before);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -461,7 +461,1 @@\n-  if (a > b) {\n-    return 1;\n-  } else if (a == b) {\n-    return 0;\n-  } else {\n-    return -1;\n-  }\n+  return static_cast<int>(a-b);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -380,1 +380,1 @@\n-  _max_num_tasks(ParallelGCThreads),\n+  _max_num_tasks(MAX2(ConcGCThreads, ParallelGCThreads)),\n@@ -1312,1 +1312,1 @@\n-  _g1h->g1mm()->update_sizes();\n+  _g1h->monitoring_support()->update_sizes();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,0 +83,1 @@\n+  const bool _is_young;\n@@ -97,0 +98,1 @@\n+    _is_young(hr->is_young()),\n@@ -143,13 +145,8 @@\n-      \/\/ While we were processing RSet buffers during the collection,\n-      \/\/ we actually didn't scan any cards on the collection set,\n-      \/\/ since we didn't want to update remembered sets with entries\n-      \/\/ that point into the collection set, given that live objects\n-      \/\/ from the collection set are about to move and such entries\n-      \/\/ will be stale very soon.\n-      \/\/ This change also dealt with a reliability issue which\n-      \/\/ involved scanning a card in the collection set and coming\n-      \/\/ across an array that was being chunked and looking malformed.\n-      \/\/ The problem is that, if evacuation fails, we might have\n-      \/\/ remembered set entries missing given that we skipped cards on\n-      \/\/ the collection set. So, we'll recreate such entries now.\n-      obj->oop_iterate(_log_buffer_cl);\n+      \/\/ During evacuation failure we do not record inter-region\n+      \/\/ references referencing regions that need a remembered set\n+      \/\/ update originating from young regions (including eden) that\n+      \/\/ failed evacuation. Make up for that omission now by rescanning\n+      \/\/ these failed objects.\n+      if (_is_young) {\n+        obj->oop_iterate(_log_buffer_cl);\n+      }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    _scope(heap->g1mm(), explicit_gc, clear_soft_refs, do_maximum_compaction),\n+    _scope(heap->monitoring_support(), explicit_gc, clear_soft_refs, do_maximum_compaction),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/g1\/g1CollectedHeap.hpp\"\n+#include \"gc\/g1\/g1GCCounters.hpp\"\n+\n+G1GCCounters::G1GCCounters(G1CollectedHeap* g1h) :\n+  _total_collections(g1h->total_collections()),\n+  _total_full_collections(g1h->total_full_collections()),\n+  _old_marking_cycles_started(g1h->old_marking_cycles_started())\n+{}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCCounters.cpp","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_G1_G1GCCOUNTERS_HPP\n+#define SHARE_GC_G1_G1GCCOUNTERS_HPP\n+\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+class G1CollectedHeap;\n+\n+\/\/ Record collection counters for later use when deciding whether a GC has\n+\/\/ been run since the counter state was recorded.\n+class G1GCCounters {\n+  uint _total_collections;\n+  uint _total_full_collections;\n+  uint _old_marking_cycles_started;\n+\n+public:\n+  G1GCCounters() {}             \/\/ Uninitialized\n+\n+  \/\/ Capture the current counters from the heap.  The caller must ensure no\n+  \/\/ collections will occur while this constructor is executing.\n+  explicit G1GCCounters(G1CollectedHeap* g1h);\n+\n+  uint total_collections() const { return _total_collections; }\n+  uint total_full_collections() const { return _total_full_collections; }\n+  uint old_marking_cycles_started() const { return _old_marking_cycles_started; }\n+};\n+\n+#endif \/\/ SHARE_GC_G1_G1GCCOUNTERS_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCCounters.hpp","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -157,1 +157,1 @@\n-  _cur_collection_code_root_fixup_time_ms = 0.0;\n+  _cur_collection_nmethod_list_cleanup_time_ms = 0.0;\n@@ -451,1 +451,1 @@\n-  const double sum_ms = _cur_collection_code_root_fixup_time_ms +\n+  const double sum_ms = _cur_collection_nmethod_list_cleanup_time_ms +\n@@ -464,1 +464,1 @@\n-  debug_time(\"Code Roots Fixup\", _cur_collection_code_root_fixup_time_ms);\n+  debug_time(\"NMethod List Cleanup\", _cur_collection_nmethod_list_cleanup_time_ms);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-  double _cur_collection_code_root_fixup_time_ms;\n+  double _cur_collection_nmethod_list_cleanup_time_ms;\n@@ -286,2 +286,2 @@\n-  void record_or_add_code_root_fixup_time(double ms) {\n-    _cur_collection_code_root_fixup_time_ms += ms;\n+  void record_or_add_nmethod_list_cleanup_time(double ms) {\n+    _cur_collection_nmethod_list_cleanup_time_ms += ms;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  _g1mm(g1h->g1mm()) {\n+  _g1mm(g1h->monitoring_support()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MemoryPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  G1MonitoringSupport* _g1mm;\n+  G1MonitoringSupport* _monitoring_support;\n@@ -39,1 +39,1 @@\n-  G1GenerationCounters(G1MonitoringSupport* g1mm,\n+  G1GenerationCounters(G1MonitoringSupport* monitoring_support,\n@@ -44,1 +44,2 @@\n-                       max_capacity, curr_capacity), _g1mm(g1mm) { }\n+                       max_capacity, curr_capacity),\n+    _monitoring_support(monitoring_support) { }\n@@ -51,2 +52,2 @@\n-  G1YoungGenerationCounters(G1MonitoringSupport* g1mm, const char* name, size_t max_size)\n-  : G1GenerationCounters(g1mm, name, 0 \/* ordinal *\/, 3 \/* spaces *\/,\n+  G1YoungGenerationCounters(G1MonitoringSupport* monitoring_support, const char* name, size_t max_size)\n+  : G1GenerationCounters(monitoring_support, name, 0 \/* ordinal *\/, 3 \/* spaces *\/,\n@@ -63,1 +64,1 @@\n-              G1MonitoringSupport::pad_capacity(_g1mm->young_gen_committed(), 3);\n+              G1MonitoringSupport::pad_capacity(_monitoring_support->young_gen_committed(), 3);\n@@ -70,2 +71,2 @@\n-  G1OldGenerationCounters(G1MonitoringSupport* g1mm, const char* name, size_t max_size)\n-  : G1GenerationCounters(g1mm, name, 1 \/* ordinal *\/, 1 \/* spaces *\/,\n+  G1OldGenerationCounters(G1MonitoringSupport* monitoring_support, const char* name, size_t max_size)\n+  : G1GenerationCounters(monitoring_support, name, 1 \/* ordinal *\/, 1 \/* spaces *\/,\n@@ -82,1 +83,1 @@\n-              G1MonitoringSupport::pad_capacity(_g1mm->old_gen_committed());\n+              G1MonitoringSupport::pad_capacity(_monitoring_support->old_gen_committed());\n@@ -345,4 +346,4 @@\n-G1MonitoringScope::G1MonitoringScope(G1MonitoringSupport* g1mm, bool full_gc, bool all_memory_pools_affected) :\n-  _g1mm(g1mm),\n-  _tcs(full_gc ? g1mm->_full_collection_counters : g1mm->_incremental_collection_counters),\n-  _tms(full_gc ? &g1mm->_full_gc_memory_manager : &g1mm->_incremental_memory_manager,\n+G1MonitoringScope::G1MonitoringScope(G1MonitoringSupport* monitoring_support, bool full_gc, bool all_memory_pools_affected) :\n+  _monitoring_support(monitoring_support),\n+  _tcs(full_gc ? monitoring_support->_full_collection_counters : monitoring_support->_incremental_collection_counters),\n+  _tms(full_gc ? &monitoring_support->_full_gc_memory_manager : &monitoring_support->_incremental_memory_manager,\n@@ -353,1 +354,1 @@\n-  _g1mm->update_sizes();\n+  _monitoring_support->update_sizes();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.cpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-  G1MonitoringSupport* _g1mm;\n+  G1MonitoringSupport* _monitoring_support;\n@@ -245,1 +245,1 @@\n-  G1MonitoringScope(G1MonitoringSupport* g1mm, bool full_gc, bool all_memory_pools_affected);\n+  G1MonitoringScope(G1MonitoringSupport* monitoring_support, bool full_gc, bool all_memory_pools_affected);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,5 +97,0 @@\n-  \/\/ The dest for Young is used when the objects are aged enough to\n-  \/\/ need to be moved to the next space.\n-  _dest[G1HeapRegionAttr::Young] = G1HeapRegionAttr::Old;\n-  _dest[G1HeapRegionAttr::Old]   = G1HeapRegionAttr::Old;\n-\n@@ -359,0 +354,2 @@\n+  assert(region_attr.is_young() || region_attr.is_old(), \"must be either Young or Old\");\n+\n@@ -366,1 +363,2 @@\n-  return dest(region_attr);\n+  \/\/ young-to-old (promotion) or old-to-old; destination is old in both cases.\n+  return G1HeapRegionAttr::Old;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-  G1HeapRegionAttr _dest[G1HeapRegionAttr::Num];\n@@ -91,8 +90,0 @@\n-  G1HeapRegionAttr dest(G1HeapRegionAttr original) const {\n-    assert(original.is_valid(),\n-           \"Original region attr invalid: %s\", original.get_type_str());\n-    assert(_dest[original.type()].is_valid_gen(),\n-           \"Dest region attr is invalid: %s\", _dest[original.type()].get_type_str());\n-    return _dest[original.type()];\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"gc\/g1\/g1GCCounters.hpp\"\n@@ -30,0 +31,1 @@\n+#include \"gc\/shared\/suspendibleThreadSet.hpp\"\n@@ -35,2 +37,5 @@\n-bool G1PeriodicGCTask::should_start_periodic_gc() {\n-  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+bool G1PeriodicGCTask::should_start_periodic_gc(G1CollectedHeap* g1h,\n+                                                G1GCCounters* counters) {\n+  \/\/ Ensure no GC safepoints while we're doing the checks, to avoid data races.\n+  SuspendibleThreadSetJoiner sts;\n+\n@@ -59,0 +64,5 @@\n+\n+  \/\/ Record counters with GC safepoints blocked, to get a consistent snapshot.\n+  \/\/ These are passed to try_collect so a GC between our release of the\n+  \/\/ STS-joiner and the GC VMOp can be detected and cancel the request.\n+  *counters = G1GCCounters(g1h);\n@@ -69,2 +79,4 @@\n-  if (should_start_periodic_gc()) {\n-    if (!G1CollectedHeap::heap()->try_collect(GCCause::_g1_periodic_collection)) {\n+  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+  G1GCCounters counters;\n+  if (should_start_periodic_gc(g1h, &counters)) {\n+    if (!g1h->try_collect(GCCause::_g1_periodic_collection, counters)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1PeriodicGCTask.cpp","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+class G1CollectedHeap;\n+class G1GCCounters;\n+\n@@ -32,1 +35,2 @@\n-  bool should_start_periodic_gc();\n+  bool should_start_periodic_gc(G1CollectedHeap* g1h,\n+                                G1GCCounters* counters);\n@@ -40,1 +44,1 @@\n-#endif \/\/ SHARE_GC_G1_G1PERIODICGCTASK_HPP\n\\ No newline at end of file\n+#endif \/\/ SHARE_GC_G1_G1PERIODICGCTASK_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1PeriodicGCTask.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1049,1 +1049,1 @@\n-void G1Policy::decide_on_conc_mark_initiation() {\n+void G1Policy::decide_on_concurrent_start_pause() {\n@@ -1059,0 +1059,6 @@\n+  \/\/ We should not be starting a concurrent start pause if the concurrent mark\n+  \/\/ thread is terminating.\n+  if (_g1h->concurrent_mark_is_terminating()) {\n+    return;\n+  }\n+\n@@ -1107,0 +1113,6 @@\n+  \/\/ Result consistency checks.\n+  \/\/ We do not allow concurrent start to be piggy-backed on a mixed GC.\n+  assert(!collector_state()->in_concurrent_start_gc() ||\n+         collector_state()->in_young_only_phase(), \"sanity\");\n+  \/\/ We also do not allow mixed GCs during marking.\n+  assert(!collector_state()->mark_or_rebuild_in_progress() || collector_state()->in_young_only_phase(), \"sanity\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -376,7 +376,7 @@\n-  \/\/ This is called at the very beginning of an evacuation pause (it\n-  \/\/ has to be the first thing that the pause does). If\n-  \/\/ initiate_conc_mark_if_possible() is true, and the concurrent\n-  \/\/ marking thread has completed its work during the previous cycle,\n-  \/\/ it will set in_concurrent_start_gc() to so that the pause does\n-  \/\/ the concurrent start work and start a marking cycle.\n-  void decide_on_conc_mark_initiation();\n+  \/\/ Decide whether this garbage collection pause should be a concurrent start\n+  \/\/ pause and update the collector state accordingly.\n+  \/\/ We decide on a concurrent start pause if initiate_conc_mark_if_possible() is\n+  \/\/ true, the concurrent marking thread has completed its work for the previous\n+  \/\/ cycle, and we are not shutting down the VM.\n+  \/\/ This must be called at the very beginning of an evacuation pause.\n+  void decide_on_concurrent_start_pause();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -110,2 +110,1 @@\n-  \/\/ Cleans the card table from temporary duplicate detection information.\n-  void cleanup_after_scan_heap_roots();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    _monitor(Mutex::nonleaf,\n+    _monitor(Mutex::leaf,\n@@ -74,1 +74,1 @@\n-void G1ServiceThread::schedule(G1ServiceTask* task, jlong delay_ms) {\n+void G1ServiceThread::schedule(G1ServiceTask* task, jlong delay_ms, bool notify) {\n@@ -82,1 +82,1 @@\n-  MutexLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n@@ -84,0 +84,3 @@\n+  if (notify) {\n+    ml.notify();\n+  }\n@@ -90,17 +93,1 @@\n-  schedule(task, delay_ms);\n-  notify();\n-}\n-\n-int64_t G1ServiceThread::time_to_next_task_ms() {\n-  assert(_monitor.owned_by_self(), \"Must be owner of lock\");\n-  assert(!_task_queue.is_empty(), \"Should not be called for empty list\");\n-\n-  jlong time_diff = _task_queue.peek()->time() - os::elapsed_counter();\n-  if (time_diff < 0) {\n-    \/\/ Run without sleeping.\n-    return 0;\n-  }\n-\n-  \/\/ Return sleep time in milliseconds. Using ceil to make sure we never\n-  \/\/ schedule a task too early.\n-  return (int64_t) ceil(TimeHelper::counter_to_millis(time_diff));\n+  schedule(task, delay_ms, true \/* notify *\/);\n@@ -109,10 +96,1 @@\n-void G1ServiceThread::notify() {\n-  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n-  ml.notify();\n-}\n-\n-void G1ServiceThread::sleep_before_next_cycle() {\n-  if (should_terminate()) {\n-    return;\n-  }\n-\n+G1ServiceTask* G1ServiceThread::wait_for_task() {\n@@ -120,9 +98,20 @@\n-  if (_task_queue.is_empty()) {\n-    \/\/ Sleep until new task is registered if no tasks available.\n-    log_trace(gc, task)(\"G1 Service Thread (wait for new tasks)\");\n-    ml.wait(0);\n-  } else {\n-    int64_t sleep_ms = time_to_next_task_ms();\n-    if (sleep_ms > 0) {\n-      log_trace(gc, task)(\"G1 Service Thread (wait) %1.3fs\", sleep_ms \/ 1000.0);\n-      ml.wait(sleep_ms);\n+  while (!should_terminate()) {\n+    if (_task_queue.is_empty()) {\n+      log_trace(gc, task)(\"G1 Service Thread (wait for new tasks)\");\n+      ml.wait();\n+    } else {\n+      G1ServiceTask* task = _task_queue.front();\n+      jlong scheduled = task->time();\n+      jlong now = os::elapsed_counter();\n+      if (scheduled <= now) {\n+        _task_queue.remove_front();\n+        return task;\n+      } else {\n+        \/\/ Round up to try not to wake up early, and to avoid round down to\n+        \/\/ zero (which has special meaning of wait forever) by conversion.\n+        double delay = ceil(TimeHelper::counter_to_millis(scheduled - now));\n+        log_trace(gc, task)(\"G1 Service Thread (wait %1.3fs)\", (delay \/ 1000.0));\n+        int64_t delay_ms = static_cast<int64_t>(delay);\n+        assert(delay_ms > 0, \"invariant\");\n+        ml.wait(delay_ms);\n+      }\n@@ -131,9 +120,1 @@\n-}\n-\n-G1ServiceTask* G1ServiceThread::pop_due_task() {\n-  MutexLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n-  if (_task_queue.is_empty() || time_to_next_task_ms() != 0) {\n-    return NULL;\n-  }\n-\n-  return _task_queue.pop();\n+  return nullptr;               \/\/ Return nullptr when terminating.\n@@ -143,1 +124,1 @@\n-  double start = os::elapsedTime();\n+  jlong start = os::elapsed_counter();\n@@ -146,1 +127,7 @@\n-  log_debug(gc, task, start)(\"G1 Service Thread (%s) (run)\", task->name());\n+  assert(task->time() <= start,\n+         \"task run early: \" JLONG_FORMAT \" > \" JLONG_FORMAT,\n+         task->time(), start);\n+  log_debug(gc, task, start)(\"G1 Service Thread (%s) (run %1.3fms after schedule)\",\n+                             task->name(),\n+                             TimeHelper::counter_to_millis(start - task->time()));\n+\n@@ -149,4 +136,4 @@\n-  double duration = os::elapsedTime() - start;\n-  double vduration = os::elapsedVTime() - vstart;\n-  log_debug(gc, task)(\"G1 Service Thread (%s) (run) %1.3fms (cpu: %1.3fms)\",\n-                      task->name(), duration * MILLIUNITS, vduration * MILLIUNITS);\n+  log_debug(gc, task)(\"G1 Service Thread (%s) (run: %1.3fms) (cpu: %1.3fms)\",\n+                      task->name(),\n+                      TimeHelper::counter_to_millis(os::elapsed_counter() - start),\n+                      (os::elapsedVTime() - vstart) * MILLIUNITS);\n@@ -156,7 +143,4 @@\n-  while (!should_terminate()) {\n-    G1ServiceTask* task = pop_due_task();\n-    if (task != NULL) {\n-      run_task(task);\n-    }\n-\n-    sleep_before_next_cycle();\n+  while (true) {\n+    G1ServiceTask* task = wait_for_task();\n+    if (task == nullptr) break;\n+    run_task(task);\n@@ -164,1 +148,1 @@\n-\n+  assert(should_terminate(), \"invariant\");\n@@ -169,1 +153,2 @@\n-  notify();\n+  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  ml.notify();\n@@ -189,1 +174,2 @@\n-  _service_thread->schedule(this, delay_ms);\n+  \/\/ No need to notify, since we *are* the service thread.\n+  _service_thread->schedule(this, delay_ms, false \/* notify *\/);\n@@ -215,1 +201,1 @@\n-G1ServiceTask* G1ServiceTaskQueue::pop() {\n+void G1ServiceTaskQueue::remove_front() {\n@@ -221,2 +207,0 @@\n-\n-  return task;\n@@ -225,1 +209,1 @@\n-G1ServiceTask* G1ServiceTaskQueue::peek() {\n+G1ServiceTask* G1ServiceTaskQueue::front() {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.cpp","additions":53,"deletions":69,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,2 +90,5 @@\n-  G1ServiceTask* pop();\n-  G1ServiceTask* peek();\n+\n+  \/\/ precondition: !is_empty().\n+  G1ServiceTask* front();\n+  \/\/ precondition: !is_empty().\n+  void remove_front();\n@@ -110,5 +113,3 @@\n-  \/\/ Returns the time in milliseconds until the next task is due.\n-  \/\/ Used both to determine if there are tasks ready to run and\n-  \/\/ how long to sleep when nothing is ready.\n-  int64_t time_to_next_task_ms();\n-  void sleep_before_next_cycle();\n+  \/\/ Return the next ready task, waiting until a task is ready.\n+  \/\/ Instead returns nullptr if termination requested.\n+  G1ServiceTask* wait_for_task();\n@@ -116,1 +117,0 @@\n-  G1ServiceTask* pop_due_task();\n@@ -121,5 +121,1 @@\n-  void schedule(G1ServiceTask* task, jlong delay);\n-\n-  \/\/ Notify a change to the service thread. Used to either stop\n-  \/\/ the service or to force check for new tasks.\n-  void notify();\n+  void schedule(G1ServiceTask* task, jlong delay, bool notify);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.hpp","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -39,0 +39,11 @@\n+bool VM_G1CollectFull::skip_operation() const {\n+  \/\/ There is a race between the periodic collection task's checks for\n+  \/\/ wanting a collection and processing its request.  A collection in that\n+  \/\/ gap should cancel the request.\n+  if ((_gc_cause == GCCause::_g1_periodic_collection) &&\n+      (G1CollectedHeap::heap()->total_collections() != _gc_count_before)) {\n+    return true;\n+  }\n+  return VM_GC_Operation::skip_operation();\n+}\n+\n@@ -77,1 +88,1 @@\n-  _terminating = g1h->_cm_thread->should_terminate();\n+  _terminating = g1h->concurrent_mark_is_terminating();\n@@ -173,1 +184,1 @@\n-  TraceCollectorStats tcs(g1h->g1mm()->conc_collection_counters());\n+  TraceCollectorStats tcs(g1h->monitoring_support()->conc_collection_counters());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,3 @@\n+protected:\n+  bool skip_operation() const override;\n+\n@@ -42,2 +45,2 @@\n-  virtual VMOp_Type type() const { return VMOp_G1CollectFull; }\n-  virtual void doit();\n+  VMOp_Type type() const override { return VMOp_G1CollectFull; }\n+  void doit() override;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -181,3 +181,1 @@\n-  if (addr == top()) {\n-    return pointer_delta(end(), addr);\n-  }\n+  assert(addr < top(), \"precondition\");\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  nonstatic_field(G1CollectedHeap, _g1mm,               G1MonitoringSupport*) \\\n+  nonstatic_field(G1CollectedHeap, _monitoring_support, G1MonitoringSupport*) \\\n","filename":"src\/hotspot\/share\/gc\/g1\/vmStructs_g1.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -787,8 +787,0 @@\n-ParallelScavengeHeap::ParStrongRootsScope::ParStrongRootsScope() {\n-  \/\/ nothing particular\n-}\n-\n-ParallelScavengeHeap::ParStrongRootsScope::~ParStrongRootsScope() {\n-  \/\/ nothing particular\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -250,7 +250,0 @@\n-  \/\/ Call these in sequential code around the processing of strong roots.\n-  class ParStrongRootsScope : public MarkScope {\n-   public:\n-    ParStrongRootsScope();\n-    ~ParStrongRootsScope();\n-  };\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -320,1 +320,1 @@\n-      log_trace(gc)(\"PSYoung generation size at minium: \" SIZE_FORMAT \"K\", orig_size\/K);\n+      log_trace(gc)(\"PSYoung generation size at minimum: \" SIZE_FORMAT \"K\", orig_size\/K);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psYoungGen.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -151,1 +151,0 @@\n-          constraint(ConcGCThreadsConstraintFunc,AfterErgo)                 \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -70,15 +70,0 @@\n-\/\/ As ConcGCThreads should be smaller than ParallelGCThreads,\n-\/\/ we need constraint function.\n-JVMFlag::Error ConcGCThreadsConstraintFunc(uint value, bool verbose) {\n-  \/\/ G1 GC use ConcGCThreads.\n-  if (GCConfig::is_gc_selected(CollectedHeap::G1) && (value > ParallelGCThreads)) {\n-    JVMFlag::printError(verbose,\n-                        \"ConcGCThreads (\" UINT32_FORMAT \") must be \"\n-                        \"less than or equal to ParallelGCThreads (\" UINT32_FORMAT \")\\n\",\n-                        value, ParallelGCThreads);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-\n-  return JVMFlag::SUCCESS;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n- f(uint,   ConcGCThreadsConstraintFunc)                        \\\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -572,0 +572,1 @@\n+  assert(v <= max_num_queues(), \"Mt degree %u too high, maximum %u\", v,  max_num_queues());\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  } else if (!UseG1GC && !UseShenandoahGC) {\n+  } else if (!UseG1GC && !UseShenandoahGC && !UseZGC) {\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupConfig.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -319,0 +319,22 @@\n+void ShenandoahAsserts::assert_marked_weak(void *interior_loc, oop obj, const char *file, int line) {\n+  assert_correct(interior_loc, obj, file, line);\n+\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n+  if (!heap->marking_context()->is_marked_weak(obj)) {\n+    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_marked_weak failed\",\n+                  \"Object should be marked weakly\",\n+                  file, line);\n+  }\n+}\n+\n+void ShenandoahAsserts::assert_marked_strong(void *interior_loc, oop obj, const char *file, int line) {\n+  assert_correct(interior_loc, obj, file, line);\n+\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n+  if (!heap->marking_context()->is_marked_strong(obj)) {\n+    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_marked_strong failed\",\n+                  \"Object should be marked strongly\",\n+                  file, line);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -64,0 +64,2 @@\n+  static void assert_marked_weak(void* interior_loc, oop obj, const char* file, int line);\n+  static void assert_marked_strong(void* interior_loc, oop obj, const char* file, int line);\n@@ -110,0 +112,14 @@\n+#define shenandoah_assert_marked_weak_if(interior_loc, obj, condition) \\\n+  if (condition)    ShenandoahAsserts::assert_marked_weak(interior_loc, obj, __FILE__, __LINE__)\n+#define shenandoah_assert_marked_weak_except(interior_loc, obj, exception) \\\n+  if (!(exception)) ShenandoahAsserts::assert_marked_weak(interior_loc, obj, __FILE__, __LINE__)\n+#define shenandoah_assert_marked_weak(interior_loc, obj) \\\n+                    ShenandoahAsserts::assert_marked_weak(interior_loc, obj, __FILE__, __LINE__)\n+\n+#define shenandoah_assert_marked_strong_if(interior_loc, obj, condition) \\\n+  if (condition)    ShenandoahAsserts::assert_marked_strong(interior_loc, obj, __FILE__, __LINE__)\n+#define shenandoah_assert_marked_strong_except(interior_loc, obj, exception) \\\n+  if (!(exception)) ShenandoahAsserts::assert_marked_strong(interior_loc, obj, __FILE__, __LINE__)\n+#define shenandoah_assert_marked_strong(interior_loc, obj) \\\n+                    ShenandoahAsserts::assert_marked_strong(interior_loc, obj, __FILE__, __LINE__)\n+\n@@ -171,0 +187,8 @@\n+#define shenandoah_assert_marked_weak_if(interior_loc, obj, condition)\n+#define shenandoah_assert_marked_weak_except(interior_loc, obj, exception)\n+#define shenandoah_assert_marked_weak(interior_loc, obj)\n+\n+#define shenandoah_assert_marked_strong_if(interior_loc, obj, condition)\n+#define shenandoah_assert_marked_strong_except(interior_loc, obj, exception)\n+#define shenandoah_assert_marked_strong(interior_loc, obj)\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.hpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -271,0 +271,1 @@\n+  const TypeAryPtr* ary_ptr = src->get_ptr_type()->isa_aryptr();\n@@ -272,8 +273,5 @@\n-  if (ac->is_clone_array()) {\n-    const TypeAryPtr* ary_ptr = src->get_ptr_type()->isa_aryptr();\n-    BasicType bt;\n-    if (ary_ptr == NULL) {\n-      \/\/ ary_ptr can be null iff we are running with StressReflectiveCode\n-      \/\/ This code will be unreachable\n-      assert(StressReflectiveCode, \"Guard against surprises\");\n-      bt = T_LONG;\n+  if (ac->is_clone_array() && ary_ptr != NULL) {\n+    BasicType bt = ary_ptr->elem()->array_element_basic_type();\n+    if (is_reference_type(bt)) {\n+      \/\/ Clone object array\n+      bt = T_OBJECT;\n@@ -281,8 +279,2 @@\n-      bt = ary_ptr->elem()->array_element_basic_type();\n-      if (is_reference_type(bt)) {\n-        \/\/ Clone object array\n-        bt = T_OBJECT;\n-      } else {\n-        \/\/ Clone primitive array\n-        bt = T_LONG;\n-      }\n+      \/\/ Clone primitive array\n+      bt = T_LONG;\n@@ -299,0 +291,15 @@\n+    if (bt == T_OBJECT) {\n+      \/\/ BarrierSetC2::clone sets the offsets via BarrierSetC2::arraycopy_payload_base_offset\n+      \/\/ which 8-byte aligns them to allow for word size copies. Make sure the offsets point\n+      \/\/ to the first element in the array when cloning object arrays. Otherwise, load\n+      \/\/ barriers are applied to parts of the header. Also adjust the length accordingly.\n+      assert(src_offset == dest_offset, \"should be equal\");\n+      jlong offset = src_offset->get_long();\n+      if (offset != arrayOopDesc::base_offset_in_bytes(T_OBJECT)) {\n+        assert(!UseCompressedClassPointers, \"should only happen without compressed class pointers\");\n+        assert((arrayOopDesc::base_offset_in_bytes(T_OBJECT) - offset) == BytesPerLong, \"unexpected offset\");\n+        length = phase->transform_later(new SubLNode(length, phase->longcon(1))); \/\/ Size is in longs\n+        src_offset = phase->longcon(arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n+        dest_offset = src_offset;\n+      }\n+    }\n@@ -321,1 +328,0 @@\n-  assert(ac->is_clone_inst(), \"Sanity check\");\n@@ -326,1 +332,1 @@\n-  Node* const base_offset = phase->longcon(arraycopy_payload_base_offset(false) >> LogBytesPerLong);\n+  Node* const base_offset = phase->longcon(arraycopy_payload_base_offset(ac->is_clone_array()) >> LogBytesPerLong);\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":24,"deletions":18,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-    const uintptr_t prev_addr = Atomic::cmpxchg((volatile uintptr_t*)p, addr, heal_addr);\n+    const uintptr_t prev_addr = Atomic::cmpxchg((volatile uintptr_t*)p, addr, heal_addr, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -215,2 +215,1 @@\n-  const double more_safety_for_fewer_workers = (ConcGCThreads - actual_gc_workers) * sample_interval;\n-  const double time_until_gc = time_until_oom - actual_gc_duration - sample_interval - more_safety_for_fewer_workers;\n+  const double time_until_gc = time_until_oom - actual_gc_duration - sample_interval;\n","filename":"src\/hotspot\/share\/gc\/z\/zDirector.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -139,0 +139,4 @@\n+  \/\/ Make sure that object copy is finished\n+  \/\/ before forwarding table installation\n+  OrderAccess::release();\n+\n@@ -140,1 +144,1 @@\n-    const ZForwardingEntry prev_entry = Atomic::cmpxchg(entries() + *cursor, old_entry, new_entry);\n+    const ZForwardingEntry prev_entry = Atomic::cmpxchg(entries() + *cursor, old_entry, new_entry, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/z\/zForwarding.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"classfile\/javaClasses.inline.hpp\"\n@@ -29,0 +30,1 @@\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n@@ -36,0 +38,1 @@\n+#include \"gc\/z\/zMarkContext.inline.hpp\"\n@@ -282,1 +285,21 @@\n-void ZMark::mark_and_follow(ZMarkCache* cache, ZMarkStackEntry entry) {\n+static void try_deduplicate(ZMarkContext* context, oop obj) {\n+  if (!StringDedup::is_enabled()) {\n+    \/\/ Not enabled\n+    return;\n+  }\n+\n+  if (!java_lang_String::is_instance_inlined(obj)) {\n+    \/\/ Not a String object\n+    return;\n+  }\n+\n+  if (java_lang_String::test_and_set_deduplication_requested(obj)) {\n+    \/\/ Already requested deduplication\n+    return;\n+  }\n+\n+  \/\/ Request deduplication\n+  context->string_dedup_requests()->add(obj);\n+}\n+\n+void ZMark::mark_and_follow(ZMarkContext* context, ZMarkStackEntry entry) {\n@@ -314,1 +337,1 @@\n-    cache->inc_live(page, aligned_size);\n+    context->cache()->inc_live(page, aligned_size);\n@@ -322,1 +345,5 @@\n-      follow_object(ZOop::from_address(addr), finalizable);\n+      const oop obj = ZOop::from_address(addr);\n+      follow_object(obj, finalizable);\n+\n+      \/\/ Try deduplicate\n+      try_deduplicate(context, obj);\n@@ -328,1 +355,3 @@\n-bool ZMark::drain(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, ZMarkCache* cache, T* timeout) {\n+bool ZMark::drain(ZMarkContext* context, T* timeout) {\n+  ZMarkStripe* const stripe = context->stripe();\n+  ZMarkThreadLocalStacks* const stacks = context->stacks();\n@@ -333,1 +362,1 @@\n-    mark_and_follow(cache, entry);\n+    mark_and_follow(context, entry);\n@@ -346,1 +375,4 @@\n-bool ZMark::try_steal_local(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks) {\n+bool ZMark::try_steal_local(ZMarkContext* context) {\n+  ZMarkStripe* const stripe = context->stripe();\n+  ZMarkThreadLocalStacks* const stacks = context->stacks();\n+\n@@ -363,1 +395,4 @@\n-bool ZMark::try_steal_global(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks) {\n+bool ZMark::try_steal_global(ZMarkContext* context) {\n+  ZMarkStripe* const stripe = context->stripe();\n+  ZMarkThreadLocalStacks* const stacks = context->stacks();\n+\n@@ -380,2 +415,2 @@\n-bool ZMark::try_steal(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks) {\n-  return try_steal_local(stripe, stacks) || try_steal_global(stripe, stacks);\n+bool ZMark::try_steal(ZMarkContext* context) {\n+  return try_steal_local(context) || try_steal_global(context);\n@@ -499,1 +534,1 @@\n-void ZMark::work_without_timeout(ZMarkCache* cache, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks) {\n+void ZMark::work_without_timeout(ZMarkContext* context) {\n@@ -504,1 +539,1 @@\n-    if (!drain(stripe, stacks, cache, &no_timeout)) {\n+    if (!drain(context, &no_timeout)) {\n@@ -509,1 +544,1 @@\n-    if (try_steal(stripe, stacks)) {\n+    if (try_steal(context)) {\n@@ -564,1 +599,1 @@\n-void ZMark::work_with_timeout(ZMarkCache* cache, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, uint64_t timeout_in_micros) {\n+void ZMark::work_with_timeout(ZMarkContext* context, uint64_t timeout_in_micros) {\n@@ -569,1 +604,1 @@\n-    if (!drain(stripe, stacks, cache, &timeout)) {\n+    if (!drain(context, &timeout)) {\n@@ -574,1 +609,1 @@\n-    if (try_steal(stripe, stacks)) {\n+    if (try_steal(context)) {\n@@ -585,1 +620,0 @@\n-  ZMarkCache cache(_stripes.nstripes());\n@@ -588,0 +622,1 @@\n+  ZMarkContext context(_stripes.nstripes(), stripe, stacks);\n@@ -590,1 +625,1 @@\n-    work_without_timeout(&cache, stripe, stacks);\n+    work_without_timeout(&context);\n@@ -592,1 +627,1 @@\n-    work_with_timeout(&cache, stripe, stacks, timeout_in_micros);\n+    work_with_timeout(&context, timeout_in_micros);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":53,"deletions":18,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class ZMarkCache;\n+class ZMarkContext;\n@@ -67,9 +67,6 @@\n-  void mark_and_follow(ZMarkCache* cache, ZMarkStackEntry entry);\n-\n-  template <typename T> bool drain(ZMarkStripe* stripe,\n-                                   ZMarkThreadLocalStacks* stacks,\n-                                   ZMarkCache* cache,\n-                                   T* timeout);\n-  bool try_steal_local(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks);\n-  bool try_steal_global(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks);\n-  bool try_steal(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks);\n+  void mark_and_follow(ZMarkContext* context, ZMarkStackEntry entry);\n+\n+  template <typename T> bool drain(ZMarkContext* context, T* timeout);\n+  bool try_steal_local(ZMarkContext* context);\n+  bool try_steal_global(ZMarkContext* context);\n+  bool try_steal(ZMarkContext* context);\n@@ -87,7 +84,2 @@\n-  void work_without_timeout(ZMarkCache* cache,\n-                            ZMarkStripe* stripe,\n-                            ZMarkThreadLocalStacks* stacks);\n-  void work_with_timeout(ZMarkCache* cache,\n-                         ZMarkStripe* stripe,\n-                         ZMarkThreadLocalStacks* stacks,\n-                         uint64_t timeout_in_micros);\n+  void work_without_timeout(ZMarkContext* context);\n+  void work_with_timeout(ZMarkContext* context, uint64_t timeout_in_micros);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.hpp","additions":9,"deletions":17,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef SHARE_GC_Z_ZMARKCONTEXT_HPP\n+#define SHARE_GC_Z_ZMARKCONTEXT_HPP\n+\n+#include \"gc\/z\/zMarkCache.hpp\"\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n+#include \"memory\/allocation.hpp\"\n+\n+class ZMarkStripe;\n+class ZMarkThreadLocalStacks;\n+\n+class ZMarkContext : public StackObj {\n+private:\n+  ZMarkCache                    _cache;\n+  ZMarkStripe* const            _stripe;\n+  ZMarkThreadLocalStacks* const _stacks;\n+  StringDedup::Requests         _string_dedup_requests;\n+\n+public:\n+  ZMarkContext(size_t nstripes,\n+               ZMarkStripe* stripe,\n+               ZMarkThreadLocalStacks* stacks);\n+\n+  ZMarkCache* cache();\n+  ZMarkStripe* stripe();\n+  ZMarkThreadLocalStacks* stacks();\n+  StringDedup::Requests* string_dedup_requests();\n+};\n+\n+#endif \/\/ SHARE_GC_Z_ZMARKCONTEXT_HPP\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.hpp","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef SHARE_GC_Z_ZMARKCONTEXT_INLINE_HPP\n+#define SHARE_GC_Z_ZMARKCONTEXT_INLINE_HPP\n+\n+#include \"gc\/z\/zMarkContext.hpp\"\n+\n+inline ZMarkContext::ZMarkContext(size_t nstripes,\n+                                  ZMarkStripe* stripe,\n+                                  ZMarkThreadLocalStacks* stacks) :\n+    _cache(nstripes),\n+    _stripe(stripe),\n+    _stacks(stacks),\n+    _string_dedup_requests() {}\n+\n+inline ZMarkCache* ZMarkContext::cache() {\n+  return &_cache;\n+}\n+\n+inline ZMarkStripe* ZMarkContext::stripe() {\n+  return _stripe;\n+}\n+\n+inline ZMarkThreadLocalStacks* ZMarkContext::stacks() {\n+  return _stacks;\n+}\n+\n+inline StringDedup::Requests* ZMarkContext::string_dedup_requests() {\n+  return &_string_dedup_requests;\n+}\n+\n+#endif \/\/ SHARE_GC_Z_ZMARKCACHE_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.inline.hpp","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -763,2 +763,4 @@\n-  LogTarget(Debug, gc, start) log;\n-  log_start(log, true \/* thread *\/);\n+  \/\/ This is called from sensitive contexts, for example before an allocation stall\n+  \/\/ has been resolved. This means we must not access any oops in here since that\n+  \/\/ could lead to infinite recursion. Without access to the thread name we can't\n+  \/\/ really log anything useful here.\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -574,1 +574,0 @@\n-    assert(!klass->can_be_verified_at_dumptime(), \"only shared old classes aren't rewritten\");\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,0 +117,4 @@\n+#ifdef ARM32\n+  void generate_math_runtime_call(AbstractInterpreter::MethodKind kind);\n+#endif \/\/ ARM32\n+\n","filename":"src\/hotspot\/share\/interpreter\/templateInterpreterGenerator.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -157,12 +157,10 @@\n-    LogMessage(jfr,startup) msg;\n-    objArrayOop lines = objArrayOop(content);\n-    assert(lines != NULL, \"invariant\");\n-    assert(lines->is_array(), \"must be array\");\n-    const int length = lines->length();\n-    for (int i = 0; i < length; ++i) {\n-      const char* text = JfrJavaSupport::c_str(lines->obj_at(i), THREAD);\n-      if (text == NULL) {\n-        \/\/ An oome has been thrown and is pending.\n-        break;\n-      }\n-      msg.info(\"%s\", text);\n+  LogMessage(jfr,startup) msg;\n+  objArrayOop lines = objArrayOop(content);\n+  assert(lines != NULL, \"invariant\");\n+  assert(lines->is_array(), \"must be array\");\n+  const int length = lines->length();\n+  for (int i = 0; i < length; ++i) {\n+    const char* text = JfrJavaSupport::c_str(lines->obj_at(i), THREAD);\n+    if (text == NULL) {\n+      \/\/ An oome has been thrown and is pending.\n+      break;\n@@ -170,0 +168,2 @@\n+    msg.info(\"%s\", text);\n+  }\n@@ -218,0 +218,2 @@\n+JfrDCmd::JfrDCmd(outputStream* output, bool heap, int num_arguments) : DCmd(output, heap), _args(NULL), _num_arguments(num_arguments), _delimiter('\\0') {}\n+\n@@ -277,0 +279,14 @@\n+static void initialize_dummy_descriptors(GrowableArray<DCmdArgumentInfo*>* array) {\n+  assert(array != NULL, \"invariant\");\n+  DCmdArgumentInfo * const dummy = new DCmdArgumentInfo(NULL,\n+                                                        NULL,\n+                                                        NULL,\n+                                                        NULL,\n+                                                        false,\n+                                                        true, \/\/ a DcmdFramework \"option\"\n+                                                        false);\n+  for (int i = 0; i < array->max_length(); ++i) {\n+    array->append(dummy);\n+  }\n+}\n+\n@@ -343,0 +359,1 @@\n+  GrowableArray<DCmdArgumentInfo*>* const array = new GrowableArray<DCmdArgumentInfo*>(_num_arguments);\n@@ -346,0 +363,12 @@\n+  if (thread->has_pending_exception()) {\n+    \/\/ Most likely an OOME, but the DCmdFramework is not the best place to handle it.\n+    \/\/ We handle it locally by clearing the exception and returning an array with dummy descriptors.\n+    \/\/ This lets the MBean server initialization routine complete successfully,\n+    \/\/ but this particular command will have no argument descriptors exposed.\n+    \/\/ Hence we postpone, or delegate, handling of OOME's to code that is better suited.\n+    log_debug(jfr, system)(\"Exception in DCmd getArgumentInfos\");\n+    thread->clear_pending_exception();\n+    initialize_dummy_descriptors(array);\n+    assert(array->length() == _num_arguments, \"invariant\");\n+    return array;\n+  }\n@@ -349,2 +378,2 @@\n-  GrowableArray<DCmdArgumentInfo*>* const array = new GrowableArray<DCmdArgumentInfo*>();\n-  const int length = arguments->length();\n+  const int num_arguments = arguments->length();\n+  assert(num_arguments == _num_arguments, \"invariant\");\n@@ -352,1 +381,1 @@\n-  for (int i = 0; i < length; ++i) {\n+  for (int i = 0; i < num_arguments; ++i) {\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.cpp","additions":44,"deletions":15,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+  const int _num_arguments;\n@@ -35,0 +36,4 @@\n+ protected:\n+  JfrDCmd(outputStream* output, bool heap, int num_arguments);\n+  virtual const char* javaClass() const = 0;\n+  void invoke(JfrJavaArguments& method, TRAPS) const;\n@@ -36,2 +41,0 @@\n-  JfrDCmd(outputStream* output, bool heap) : DCmd(output,heap), _args(NULL), _delimiter('\\0')  {}\n-\n@@ -43,3 +46,0 @@\n- protected:\n-  virtual const char* javaClass() const = 0;\n-  void invoke(JfrJavaArguments& method, TRAPS) const;\n@@ -50,1 +50,1 @@\n-  JfrStartFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap) {}\n+  JfrStartFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap, num_arguments()) {}\n@@ -75,1 +75,1 @@\n-  JfrDumpFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap) {}\n+  JfrDumpFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap, num_arguments()) {}\n@@ -100,1 +100,1 @@\n-  JfrCheckFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap) {}\n+  JfrCheckFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap, num_arguments()) {}\n@@ -125,1 +125,1 @@\n-  JfrStopFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap) {}\n+  JfrStopFlightRecordingDCmd(outputStream* output, bool heap) : JfrDCmd(output, heap, num_arguments()) {}\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -458,1 +458,1 @@\n-  if (_new_checkpoint.is_signaled()) {\n+  if (_new_checkpoint.is_signaled_with_reset()) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrCheckpointManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1104,0 +1104,4 @@\n+  \/\/ JfrTraceIdEpoch::has_changed_tag_state_no_reset() is a load-acquire we issue to see side-effects (i.e. tags).\n+  \/\/ The JfrRecorderThread does this as part of normal processing, but with concurrent class unloading, which can\n+  \/\/ happen in arbitrary threads, we invoke it explicitly.\n+  JfrTraceIdEpoch::has_changed_tag_state_no_reset();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,0 +111,4 @@\n+    return _tag_state.is_signaled_with_reset();\n+  }\n+\n+  static bool has_changed_tag_state_no_reset() {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdEpoch.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  return _new_string.is_signaled();\n+  return _new_string.is_signaled_with_reset();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stringpool\/jfrStringPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,3 +37,1 @@\n-    if (!Atomic::load_acquire(&_signaled)) {\n-      Atomic::release_store(&_signaled, true);\n-    }\n+    Atomic::release_store(&_signaled, true);\n@@ -43,2 +41,6 @@\n-    if (Atomic::load_acquire(&_signaled)) {\n-      Atomic::release_store(&_signaled, false); \/\/ auto-reset\n+    return Atomic::load_acquire(&_signaled);\n+  }\n+\n+  bool is_signaled_with_reset() const {\n+    if (is_signaled()) {\n+      Atomic::release_store(&_signaled, false);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrSignal.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -461,4 +461,0 @@\n-  if (method->is_abstract()) {\n-    return NULL;\n-  }\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -289,1 +289,3 @@\n-  ResourceHashtable<const char*, JVMCIObject, &CompilerToVM::cstring_hash, &CompilerToVM::cstring_equals> strings;\n+  ResourceHashtable<const char*, JVMCIObject,\n+                    256, ResourceObj::RESOURCE_AREA, mtInternal,\n+                    &CompilerToVM::cstring_hash, &CompilerToVM::cstring_equals> strings;\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,2 +113,0 @@\n-                          primitive_hash<LogFileOutput*>,\n-                          primitive_equals<LogFileOutput*>,\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+#include \"utilities\/align.hpp\"\n+#include \"utilities\/debug.hpp\"\n@@ -35,0 +37,7 @@\n+\/\/ Pre-defined default chunk sizes must be arena-aligned, see Chunk::operator new()\n+STATIC_ASSERT(is_aligned((int)Chunk::tiny_size, ARENA_AMALLOC_ALIGNMENT));\n+STATIC_ASSERT(is_aligned((int)Chunk::init_size, ARENA_AMALLOC_ALIGNMENT));\n+STATIC_ASSERT(is_aligned((int)Chunk::medium_size, ARENA_AMALLOC_ALIGNMENT));\n+STATIC_ASSERT(is_aligned((int)Chunk::size, ARENA_AMALLOC_ALIGNMENT));\n+STATIC_ASSERT(is_aligned((int)Chunk::non_pool_size, ARENA_AMALLOC_ALIGNMENT));\n+\n@@ -38,1 +47,1 @@\n-\/\/ MT-safe pool of chunks to reduce malloc\/free thrashing\n+\/\/ MT-safe pool of same-sized chunks to reduce malloc\/free thrashing\n@@ -40,1 +49,1 @@\n-class ChunkPool: public CHeapObj<mtInternal> {\n+class ChunkPool {\n@@ -43,2 +52,1 @@\n-  size_t       _num_used;     \/\/ number of chunks currently checked out\n-  const size_t _size;         \/\/ size of each chunk (must be uniform)\n+  const size_t _size;         \/\/ (inner payload) size of the chunks this pool serves\n@@ -47,4 +55,5 @@\n-  static ChunkPool* _large_pool;\n-  static ChunkPool* _medium_pool;\n-  static ChunkPool* _small_pool;\n-  static ChunkPool* _tiny_pool;\n+  static const int _num_pools = 4;\n+  static ChunkPool _pools[_num_pools];\n+\n+ public:\n+  ChunkPool(size_t size) : _first(NULL), _num_chunks(0), _size(size) {}\n@@ -52,2 +61,3 @@\n-  \/\/ return first element or null\n-  void* get_first() {\n+  \/\/ Allocate a chunk from the pool; returns NULL if pool is empty.\n+  Chunk* allocate() {\n+    ThreadCritical tc;\n@@ -55,1 +65,1 @@\n-    if (_first) {\n+    if (_first != nullptr) {\n@@ -62,21 +72,0 @@\n- public:\n-  \/\/ All chunks in a ChunkPool has the same size\n-   ChunkPool(size_t size) : _size(size) { _first = NULL; _num_chunks = _num_used = 0; }\n-\n-  \/\/ Allocate a new chunk from the pool (might expand the pool)\n-  NOINLINE void* allocate(size_t bytes, AllocFailType alloc_failmode) {\n-    assert(bytes == _size, \"bad size\");\n-    void* p = NULL;\n-    \/\/ No VM lock can be taken inside ThreadCritical lock, so os::malloc\n-    \/\/ should be done outside ThreadCritical lock due to NMT\n-    { ThreadCritical tc;\n-      _num_used++;\n-      p = get_first();\n-    }\n-    if (p == NULL) p = os::malloc(bytes, mtChunk, CURRENT_PC);\n-    if (p == NULL && alloc_failmode == AllocFailStrategy::EXIT_OOM) {\n-      vm_exit_out_of_memory(bytes, OOM_MALLOC_ERROR, \"ChunkPool::allocate\");\n-    }\n-    return p;\n-  }\n-\n@@ -85,1 +74,1 @@\n-    assert(chunk->length() + Chunk::aligned_overhead_size() == _size, \"bad size\");\n+    assert(chunk->length() == _size, \"wrong pool for this chunk\");\n@@ -87,3 +76,0 @@\n-    _num_used--;\n-\n-    \/\/ Add chunk to list\n@@ -96,1 +82,2 @@\n-  void free_all_but(size_t n) {\n+  void prune() {\n+    static const int blocksToKeep = 5;\n@@ -99,22 +86,22 @@\n-    {\n-      \/\/ if we have more than n chunks, free all of them\n-      ThreadCritical tc;\n-      if (_num_chunks > n) {\n-        \/\/ free chunks at end of queue, for better locality\n-        cur = _first;\n-        for (size_t i = 0; i < (n - 1) && cur != NULL; i++) cur = cur->next();\n-\n-        if (cur != NULL) {\n-          next = cur->next();\n-          cur->set_next(NULL);\n-          cur = next;\n-\n-          \/\/ Free all remaining chunks while in ThreadCritical lock\n-          \/\/ so NMT adjustment is stable.\n-          while(cur != NULL) {\n-            next = cur->next();\n-            os::free(cur);\n-            _num_chunks--;\n-            cur = next;\n-          }\n-        }\n+    \/\/ if we have more than n chunks, free all of them\n+    ThreadCritical tc;\n+    if (_num_chunks > blocksToKeep) {\n+      \/\/ free chunks at end of queue, for better locality\n+      cur = _first;\n+      for (size_t i = 0; i < (blocksToKeep - 1); i++) {\n+        assert(cur != NULL, \"counter out of sync?\");\n+        cur = cur->next();\n+      }\n+      assert(cur != NULL, \"counter out of sync?\");\n+\n+      next = cur->next();\n+      cur->set_next(NULL);\n+      cur = next;\n+\n+      \/\/ Free all remaining chunks while in ThreadCritical lock\n+      \/\/ so NMT adjustment is stable.\n+      while(cur != NULL) {\n+        next = cur->next();\n+        os::free(cur);\n+        _num_chunks--;\n+        cur = next;\n@@ -125,13 +112,0 @@\n-  \/\/ Accessors to preallocated pool's\n-  static ChunkPool* large_pool()  { assert(_large_pool  != NULL, \"must be initialized\"); return _large_pool;  }\n-  static ChunkPool* medium_pool() { assert(_medium_pool != NULL, \"must be initialized\"); return _medium_pool; }\n-  static ChunkPool* small_pool()  { assert(_small_pool  != NULL, \"must be initialized\"); return _small_pool;  }\n-  static ChunkPool* tiny_pool()   { assert(_tiny_pool   != NULL, \"must be initialized\"); return _tiny_pool;   }\n-\n-  static void initialize() {\n-    _large_pool  = new ChunkPool(Chunk::size        + Chunk::aligned_overhead_size());\n-    _medium_pool = new ChunkPool(Chunk::medium_size + Chunk::aligned_overhead_size());\n-    _small_pool  = new ChunkPool(Chunk::init_size   + Chunk::aligned_overhead_size());\n-    _tiny_pool   = new ChunkPool(Chunk::tiny_size   + Chunk::aligned_overhead_size());\n-  }\n-\n@@ -139,5 +113,3 @@\n-    enum { BlocksToKeep = 5 };\n-     _tiny_pool->free_all_but(BlocksToKeep);\n-     _small_pool->free_all_but(BlocksToKeep);\n-     _medium_pool->free_all_but(BlocksToKeep);\n-     _large_pool->free_all_but(BlocksToKeep);\n+    for (int i = 0; i < _num_pools; i++) {\n+      _pools[i].prune();\n+    }\n@@ -145,1 +117,0 @@\n-};\n@@ -147,4 +118,9 @@\n-ChunkPool* ChunkPool::_large_pool  = NULL;\n-ChunkPool* ChunkPool::_medium_pool = NULL;\n-ChunkPool* ChunkPool::_small_pool  = NULL;\n-ChunkPool* ChunkPool::_tiny_pool   = NULL;\n+  \/\/ Given a (inner payload) size, return the pool responsible for it, or NULL if the size is non-standard\n+  static ChunkPool* get_pool_for_size(size_t size) {\n+    for (int i = 0; i < _num_pools; i++) {\n+      if (_pools[i]._size == size) {\n+        return _pools + i;\n+      }\n+    }\n+    return NULL;\n+  }\n@@ -152,3 +128,1 @@\n-void chunkpool_init() {\n-  ChunkPool::initialize();\n-}\n+};\n@@ -156,0 +130,1 @@\n+ChunkPool ChunkPool::_pools[] = { Chunk::size, Chunk::medium_size, Chunk::init_size, Chunk::tiny_size };\n@@ -174,19 +149,36 @@\n-void* Chunk::operator new (size_t requested_size, AllocFailType alloc_failmode, size_t length) throw() {\n-  \/\/ requested_size is equal to sizeof(Chunk) but in order for the arena\n-  \/\/ allocations to come out aligned as expected the size must be aligned\n-  \/\/ to expected arena alignment.\n-  \/\/ expect requested_size but if sizeof(Chunk) doesn't match isn't proper size we must align it.\n-  assert(ARENA_ALIGN(requested_size) == aligned_overhead_size(), \"Bad alignment\");\n-  size_t bytes = ARENA_ALIGN(requested_size) + length;\n-  switch (length) {\n-   case Chunk::size:        return ChunkPool::large_pool()->allocate(bytes, alloc_failmode);\n-   case Chunk::medium_size: return ChunkPool::medium_pool()->allocate(bytes, alloc_failmode);\n-   case Chunk::init_size:   return ChunkPool::small_pool()->allocate(bytes, alloc_failmode);\n-   case Chunk::tiny_size:   return ChunkPool::tiny_pool()->allocate(bytes, alloc_failmode);\n-   default: {\n-     void* p = os::malloc(bytes, mtChunk, CALLER_PC);\n-     if (p == NULL && alloc_failmode == AllocFailStrategy::EXIT_OOM) {\n-       vm_exit_out_of_memory(bytes, OOM_MALLOC_ERROR, \"Chunk::new\");\n-     }\n-     return p;\n-   }\n+void* Chunk::operator new (size_t sizeofChunk, AllocFailType alloc_failmode, size_t length) throw() {\n+  \/\/ - requested_size = sizeof(Chunk)\n+  \/\/ - length = payload size\n+  \/\/ We must ensure that the boundaries of the payload (C and D) are aligned to 64-bit:\n+  \/\/\n+  \/\/ +-----------+--+--------------------------------------------+\n+  \/\/ |           |g |                                            |\n+  \/\/ | Chunk     |a |               Payload                      |\n+  \/\/ |           |p |                                            |\n+  \/\/ +-----------+--+--------------------------------------------+\n+  \/\/ A           B  C                                            D\n+  \/\/\n+  \/\/ - The Chunk is allocated from C-heap, therefore its start address (A) should be\n+  \/\/   64-bit aligned on all our platforms, including 32-bit.\n+  \/\/ - sizeof(Chunk) (B) may not be aligned to 64-bit, and we have to take that into\n+  \/\/   account when calculating the Payload bottom (C) (see Chunk::bottom())\n+  \/\/ - the payload size (length) must be aligned to 64-bit, which takes care of 64-bit\n+  \/\/   aligning (D)\n+\n+  assert(sizeofChunk == sizeof(Chunk), \"weird request size\");\n+  assert(is_aligned(length, ARENA_AMALLOC_ALIGNMENT), \"chunk payload length misaligned: \"\n+         SIZE_FORMAT \".\", length);\n+  \/\/ Try to reuse a freed chunk from the pool\n+  ChunkPool* pool = ChunkPool::get_pool_for_size(length);\n+  if (pool != NULL) {\n+    Chunk* c = pool->allocate();\n+    if (c != NULL) {\n+      assert(c->length() == length, \"wrong length?\");\n+      return c;\n+    }\n+  }\n+  \/\/ Either the pool was empty, or this is a non-standard length. Allocate a new Chunk from C-heap.\n+  size_t bytes = ARENA_ALIGN(sizeofChunk) + length;\n+  void* p = os::malloc(bytes, mtChunk, CALLER_PC);\n+  if (p == NULL && alloc_failmode == AllocFailStrategy::EXIT_OOM) {\n+    vm_exit_out_of_memory(bytes, OOM_MALLOC_ERROR, \"Chunk::new\");\n@@ -194,0 +186,3 @@\n+  \/\/ We rely on arena alignment <= malloc alignment.\n+  assert(is_aligned(p, ARENA_AMALLOC_ALIGNMENT), \"Chunk start address misaligned.\");\n+  return p;\n@@ -197,0 +192,1 @@\n+  \/\/ If this is a standard-sized chunk, return it to its pool; otherwise free it.\n@@ -198,8 +194,6 @@\n-  switch (c->length()) {\n-   case Chunk::size:        ChunkPool::large_pool()->free(c); break;\n-   case Chunk::medium_size: ChunkPool::medium_pool()->free(c); break;\n-   case Chunk::init_size:   ChunkPool::small_pool()->free(c); break;\n-   case Chunk::tiny_size:   ChunkPool::tiny_pool()->free(c); break;\n-   default:\n-     ThreadCritical tc;  \/\/ Free chunks under TC lock so that NMT adjustment is stable.\n-     os::free(c);\n+  ChunkPool* pool = ChunkPool::get_pool_for_size(c->length());\n+  if (pool != NULL) {\n+    pool->free(c);\n+  } else {\n+    ThreadCritical tc;  \/\/ Free chunks under TC lock so that NMT adjustment is stable.\n+    os::free(c);\n@@ -242,2 +236,1 @@\n-  size_t round_size = (sizeof (char *)) - 1;\n-  init_size = (init_size+round_size) & ~round_size;\n+  init_size = ARENA_ALIGN(init_size);\n@@ -343,1 +336,2 @@\n-  size_t len = MAX2(x, (size_t) Chunk::size);\n+  \/\/ (Note: all chunk sizes have to be 64-bit aligned)\n+  size_t len = MAX2(ARENA_ALIGN(x), (size_t) Chunk::size);\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":109,"deletions":115,"binary":false,"changes":224,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    \/\/ Note: please keep these constants 64-bit aligned.\n@@ -59,1 +60,1 @@\n-    slack      = 20,            \/\/ suspected sizeof(Chunk) + internal malloc headers\n+    slack      = 24,            \/\/ suspected sizeof(Chunk) + internal malloc headers\n@@ -137,0 +138,5 @@\n+    \/\/ Amalloc guarantees 64-bit alignment and we need to ensure that in case the preceding\n+    \/\/ allocation was AmallocWords. Only needed on 32-bit - on 64-bit Amalloc and AmallocWords are\n+    \/\/ identical.\n+    assert(is_aligned(_max, ARENA_AMALLOC_ALIGNMENT), \"chunk end unaligned?\");\n+    NOT_LP64(_hwm = ARENA_ALIGN(_hwm));\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -344,11 +344,0 @@\n-\n-  \/\/ Clear LSB in symbol address; it can be set by CPSlot.\n-  static Symbol* load_symbol(Symbol** p) {\n-    return (Symbol*)(intptr_t(*p) & ~1);\n-  }\n-\n-  \/\/ Store symbol, adjusting new pointer if the original pointer was adjusted\n-  \/\/ (symbol references in constant pool slots have their LSB set to 1).\n-  static void store_symbol(Symbol** p, Symbol* sym) {\n-    *p = (Symbol*)(intptr_t(sym) | (intptr_t(*p) & 1));\n-  }\n","filename":"src\/hotspot\/share\/memory\/iterator.hpp","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-\/\/         or 0, which means the best scale is choosen dynamically.\n+\/\/         or 0, which means the best scale is chosen dynamically.\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceCommon.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-\/\/         or 0, which means the best scale is choosen dynamically.\n+\/\/         or 0, which means the best scale is chosen dynamically.\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceCommon.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-         \"or \\\"dynamic\\\" for a dynamically choosen scale.\",\n+         \"or \\\"dynamic\\\" for a dynamically chosen scale.\",\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -131,2 +131,2 @@\n-      \/\/ In some rare cases (see CPSlot in constantPool.hpp) we store some flags in the lowest\n-      \/\/ 2 bits of a MetaspaceObj pointer. Unmask these when manipulating the pointer.\n+      \/\/ In some rare cases we store some flags in the lowest 2 bits of a\n+      \/\/ MetaspaceObj pointer. Unmask these when manipulating the pointer.\n","filename":"src\/hotspot\/share\/memory\/metaspaceClosure.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -436,1 +436,1 @@\n-        HeapShared::open_archive_heap_region_mapped() &&\n+        HeapShared::open_regions_mapped() &&\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -290,1 +290,1 @@\n-    oop archived = HeapShared::archive_heap_object(rr);\n+    oop archived = HeapShared::archive_object(rr);\n@@ -293,1 +293,1 @@\n-    \/\/ the return value of archive_heap_object here. At runtime, the\n+    \/\/ the return value of archive_object() here. At runtime, the\n@@ -350,1 +350,1 @@\n-    if (HeapShared::open_archive_heap_region_mapped() &&\n+    if (HeapShared::open_regions_mapped() &&\n@@ -373,0 +373,6 @@\n+  \/\/ Shared ConstantPools are in the RO region, so the _flags cannot be modified.\n+  \/\/ The _on_stack flag is used to prevent ConstantPools from deallocation during\n+  \/\/ class redefinition. Since shared ConstantPools cannot be deallocated anyway,\n+  \/\/ we always set _on_stack to true to avoid having to change _flags during runtime.\n+  _flags |= (_on_stack | _is_shared);\n+\n@@ -385,5 +391,0 @@\n-  \/\/ Shared ConstantPools are in the RO region, so the _flags cannot be modified.\n-  \/\/ The _on_stack flag is used to prevent ConstantPools from deallocation during\n-  \/\/ class redefinition. Since shared ConstantPools cannot be deallocated anyway,\n-  \/\/ we always set _on_stack to true to avoid having to change _flags during runtime.\n-  _flags |= (_on_stack | _is_shared);\n@@ -2393,2 +2394,2 @@\n-      CPSlot entry = slot_at(i);\n-      guarantee(entry.get_symbol()->refcount() != 0, \"should have nonzero reference count\");\n+      Symbol* entry = symbol_at(i);\n+      guarantee(entry->refcount() != 0, \"should have nonzero reference count\");\n@@ -2396,2 +2397,2 @@\n-      CPSlot entry = slot_at(i);\n-      guarantee(entry.get_symbol()->refcount() != 0, \"should have nonzero reference count\");\n+      Symbol* entry = unresolved_string_at(i);\n+      guarantee(entry->refcount() != 0, \"should have nonzero reference count\");\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -52,16 +52,0 @@\n-class CPSlot {\n- friend class ConstantPool;\n-  intptr_t _ptr;\n-  enum TagBits  {_pseudo_bit = 1};\n- public:\n-\n-  CPSlot(intptr_t ptr): _ptr(ptr) {}\n-  CPSlot(Symbol* ptr, int tag_bits = 0): _ptr((intptr_t)ptr | tag_bits) {}\n-\n-  intptr_t value()   { return _ptr; }\n-\n-  Symbol* get_symbol() {\n-    return (Symbol*)(_ptr & ~_pseudo_bit);\n-  }\n-};\n-\n@@ -155,7 +139,0 @@\n-  CPSlot slot_at(int which) const;\n-\n-  void slot_at_put(int which, CPSlot s) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    assert(s.value() != 0, \"Caught something\");\n-    *(intptr_t*)&base()[which] = s.value();\n-  }\n@@ -346,2 +323,6 @@\n-    release_tag_at_put(which, JVM_CONSTANT_String);\n-    slot_at_put(which, CPSlot(s));\n+    assert(s->refcount() != 0, \"should have nonzero refcount\");\n+    \/\/ Note that release_tag_at_put is not needed here because this is called only\n+    \/\/ when constructing a ConstantPool in a single thread, with no possibility\n+    \/\/ of concurrent access.\n+    tag_at_put(which, JVM_CONSTANT_String);\n+    *symbol_at_addr(which) = s;\n@@ -500,2 +481,1 @@\n-    Symbol* sym = slot_at(which).get_symbol();\n-    return sym;\n+    return *symbol_at_addr(which);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":7,"deletions":27,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -33,9 +33,0 @@\n-inline CPSlot ConstantPool::slot_at(int which) const {\n-  assert(is_within_bounds(which), \"index out of bounds\");\n-  assert(!tag_at(which).is_unresolved_klass() && !tag_at(which).is_unresolved_klass_in_error(), \"Corrupted constant pool\");\n-  \/\/ Uses volatile because the klass slot changes without a lock.\n-  intptr_t adr = Atomic::load_acquire(obj_at_addr(which));\n-  assert(adr != 0 || which == 0, \"cp entry for klass should not be zero\");\n-  return CPSlot(adr);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/constantPool.inline.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ClassLoaderData* cld = java_lang_ClassLoader::loader_data_raw(obj);\n+    ClassLoaderData* cld = java_lang_ClassLoader::loader_data(obj);\n@@ -65,1 +65,1 @@\n-      ClassLoaderData* cld = java_lang_ClassLoader::loader_data_raw(obj);\n+      ClassLoaderData* cld = java_lang_ClassLoader::loader_data(obj);\n","filename":"src\/hotspot\/share\/oops\/instanceClassLoaderKlass.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+#include \"utilities\/pair.hpp\"\n@@ -678,3 +679,1 @@\n-  if (Arguments::is_dumping_archive()) {\n-    SystemDictionaryShared::handle_class_unloading(this);\n-  }\n+  SystemDictionaryShared::handle_class_unloading(this);\n@@ -904,0 +903,3 @@\n+        if (is_shared()) {\n+          assert(!verified_at_dump_time(), \"must be\");\n+        }\n@@ -935,1 +937,2 @@\n-      \/\/ 2) the class is loaded by built-in class loader but failed to add archived loader constraints\n+      \/\/ 2) the class is loaded by built-in class loader but failed to add archived loader constraints or\n+      \/\/ 3) the class was not verified during dump time\n@@ -937,1 +940,2 @@\n-      if (is_shared() && SystemDictionaryShared::check_linking_constraints(THREAD, this)) {\n+      if (is_shared() && verified_at_dump_time() &&\n+          SystemDictionaryShared::check_linking_constraints(THREAD, this)) {\n@@ -1014,0 +1018,48 @@\n+ResourceHashtable<const InstanceKlass*, OopHandle, 107, ResourceObj::C_HEAP, mtClass>\n+      _initialization_error_table;\n+\n+void InstanceKlass::add_initialization_error(JavaThread* current, Handle exception) {\n+  \/\/ Create the same exception with a message indicating the thread name,\n+  \/\/ and the StackTraceElements.\n+  \/\/ If the initialization error is OOM, this might not work, but if GC kicks in\n+  \/\/ this would be still be helpful.\n+  JavaThread* THREAD = current;\n+  Handle cause = java_lang_Throwable::get_cause_with_stack_trace(exception, THREAD);\n+  if (HAS_PENDING_EXCEPTION || cause.is_null()) {\n+    CLEAR_PENDING_EXCEPTION;\n+    return;\n+  }\n+\n+  MutexLocker ml(THREAD, ClassInitError_lock);\n+  OopHandle elem = OopHandle(Universe::vm_global(), cause());\n+  bool created = false;\n+  _initialization_error_table.put_if_absent(this, elem, &created);\n+  assert(created, \"Initialization is single threaded\");\n+  ResourceMark rm(THREAD);\n+  log_trace(class, init)(\"Initialization error added for class %s\", external_name());\n+}\n+\n+oop InstanceKlass::get_initialization_error(JavaThread* current) {\n+  MutexLocker ml(current, ClassInitError_lock);\n+  OopHandle* h = _initialization_error_table.get(this);\n+  return (h != nullptr) ? h->resolve() : nullptr;\n+}\n+\n+\/\/ Need to remove entries for unloaded classes.\n+void InstanceKlass::clean_initialization_error_table() {\n+  struct InitErrorTableCleaner {\n+    bool do_entry(const InstanceKlass* ik, OopHandle h) {\n+      if (!ik->is_loader_alive()) {\n+        h.release(Universe::vm_global());\n+        return true;\n+      } else {\n+        return false;\n+      }\n+    }\n+  };\n+\n+  MutexLocker ml(ClassInitError_lock);\n+  InitErrorTableCleaner cleaner;\n+  _initialization_error_table.unlink(&cleaner);\n+}\n+\n@@ -1060,7 +1112,6 @@\n-      const char* desc = \"Could not initialize class \";\n-      const char* className = external_name();\n-      size_t msglen = strlen(desc) + strlen(className) + 1;\n-      char* message = NEW_RESOURCE_ARRAY(char, msglen);\n-      if (NULL == message) {\n-        \/\/ Out of memory: can't create detailed error message\n-          THROW_MSG(vmSymbols::java_lang_NoClassDefFoundError(), className);\n+      Handle cause(THREAD, get_initialization_error(THREAD));\n+\n+      stringStream ss;\n+      ss.print(\"Could not initialize class %s\", external_name());\n+      if (cause.is_null()) {\n+        THROW_MSG(vmSymbols::java_lang_NoClassDefFoundError(), ss.as_string());\n@@ -1068,2 +1119,2 @@\n-        jio_snprintf(message, msglen, \"%s%s\", desc, className);\n-          THROW_MSG(vmSymbols::java_lang_NoClassDefFoundError(), message);\n+        THROW_MSG_CAUSE(vmSymbols::java_lang_NoClassDefFoundError(),\n+                        ss.as_string(), cause);\n@@ -1100,0 +1151,1 @@\n+        add_initialization_error(THREAD, e);\n@@ -1135,3 +1187,1 @@\n-    {\n-      debug_only(vtable().verify(tty, true);)\n-    }\n+    debug_only(vtable().verify(tty, true);)\n@@ -1148,0 +1198,1 @@\n+      add_initialization_error(THREAD, e);\n@@ -1621,5 +1672,0 @@\n-\n-static int compare_fields_by_offset(int* a, int* b) {\n-  return a[0] - b[0];\n-}\n-\n@@ -1633,3 +1679,0 @@\n-  \/\/ In DebugInfo nonstatic fields are sorted by offset.\n-  int* fields_sorted = NEW_C_HEAP_ARRAY(int, 2*(length+1), mtClass);\n-  int j = 0;\n@@ -1639,3 +1682,1 @@\n-      fields_sorted[j + 0] = fd.offset();\n-      fields_sorted[j + 1] = i;\n-      j += 2;\n+      cl->do_field(&fd);\n@@ -1644,2 +1685,28 @@\n-  if (j > 0) {\n-    length = j;\n+}\n+\n+\/\/ first in Pair is offset, second is index.\n+static int compare_fields_by_offset(Pair<int,int>* a, Pair<int,int>* b) {\n+  return a->first - b->first;\n+}\n+\n+void InstanceKlass::print_nonstatic_fields(FieldClosure* cl) {\n+  InstanceKlass* super = superklass();\n+  if (super != NULL) {\n+    super->print_nonstatic_fields(cl);\n+  }\n+  ResourceMark rm;\n+  fieldDescriptor fd;\n+  \/\/ In DebugInfo nonstatic fields are sorted by offset.\n+  GrowableArray<Pair<int,int> > fields_sorted;\n+  int i = 0;\n+  for (AllFieldStream fs(this); !fs.done(); fs.next()) {\n+    if (!fs.access_flags().is_static()) {\n+      fd = fs.field_descriptor();\n+      Pair<int,int> f(fs.offset(), fs.index());\n+      fields_sorted.push(f);\n+      i++;\n+    }\n+  }\n+  if (i > 0) {\n+    int length = i;\n+    assert(length == fields_sorted.length(), \"duh\");\n@@ -1647,4 +1714,4 @@\n-    qsort(fields_sorted, length\/2, 2*sizeof(int), (_sort_Fn)compare_fields_by_offset);\n-    for (int i = 0; i < length; i += 2) {\n-      fd.reinitialize(this, fields_sorted[i + 1]);\n-      assert(!fd.is_static() && fd.offset() == fields_sorted[i], \"only nonstatic fields\");\n+    fields_sorted.sort(compare_fields_by_offset);\n+    for (int i = 0; i < length; i++) {\n+      fd.reinitialize(this, fields_sorted.at(i).second);\n+      assert(!fd.is_static() && fd.offset() == fields_sorted.at(i).first, \"only nonstatic fields\");\n@@ -1654,1 +1721,0 @@\n-  FREE_C_HEAP_ARRAY(int, fields_sorted);\n@@ -1657,1 +1723,0 @@\n-\n@@ -2398,1 +2463,2 @@\n-  if (can_be_verified_at_dumptime()) {\n+  if (is_linked()) {\n+    assert(can_be_verified_at_dumptime(), \"must be\");\n@@ -2602,3 +2668,1 @@\n-  if (Arguments::is_dumping_archive()) {\n-    SystemDictionaryShared::handle_class_unloading(ik);\n-  }\n+  SystemDictionaryShared::handle_class_unloading(ik);\n@@ -3434,1 +3498,1 @@\n-  ik->do_nonstatic_fields(&print_nonstatic_field);\n+  ik->print_nonstatic_fields(&print_nonstatic_field);\n@@ -3476,1 +3540,0 @@\n-      if (!WizardMode)  return;  \/\/ that is enough\n@@ -3482,1 +3545,1 @@\n-  do_nonstatic_fields(&print_field);\n+  print_nonstatic_fields(&print_field);\n@@ -3488,10 +3551,0 @@\n-    Klass* mirrored_klass = java_lang_Class::as_Klass(obj);\n-    st->print(BULLET\"fake entry for mirror: \");\n-    Metadata::print_value_on_maybe_null(st, mirrored_klass);\n-    st->cr();\n-    Klass* array_klass = java_lang_Class::array_klass_acquire(obj);\n-    st->print(BULLET\"fake entry for array: \");\n-    Metadata::print_value_on_maybe_null(st, array_klass);\n-    st->cr();\n-    st->print_cr(BULLET\"fake entry for oop_size: %d\", java_lang_Class::oop_size(obj));\n-    st->print_cr(BULLET\"fake entry for static_oop_field_count: %d\", java_lang_Class::static_oop_field_count(obj));\n@@ -3500,0 +3553,1 @@\n+      st->print_cr(BULLET\"---- static fields (%d words):\", java_lang_Class::static_oop_field_count(obj));\n@@ -3583,1 +3637,3 @@\n-  log_to_classlist();\n+  if (ClassListWriter::is_enabled()) {\n+    ClassListWriter::write(this, cfs);\n+  }\n@@ -4124,39 +4180,0 @@\n-bool InstanceKlass::is_shareable() const {\n-#if INCLUDE_CDS\n-  ClassLoaderData* loader_data = class_loader_data();\n-  if (!SystemDictionaryShared::is_sharing_possible(loader_data)) {\n-    return false;\n-  }\n-\n-  if (is_hidden()) {\n-    return false;\n-  }\n-\n-  if (module()->is_patched()) {\n-    return false;\n-  }\n-\n-  return true;\n-#else\n-  return false;\n-#endif\n-}\n-\n-void InstanceKlass::log_to_classlist() const {\n-#if INCLUDE_CDS\n-  ResourceMark rm;\n-  if (ClassListWriter::is_enabled()) {\n-    if (!ClassLoader::has_jrt_entry()) {\n-       warning(\"DumpLoadedClassList and CDS are not supported in exploded build\");\n-       DumpLoadedClassList = NULL;\n-       return;\n-    }\n-    if (is_shareable()) {\n-      ClassListWriter w;\n-      w.stream()->print_cr(\"%s\", name()->as_C_string());\n-      w.stream()->flush();\n-    }\n-  }\n-#endif \/\/ INCLUDE_CDS\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":110,"deletions":93,"binary":false,"changes":203,"status":"modified"},{"patch":"@@ -1010,0 +1010,1 @@\n+  void print_nonstatic_fields(FieldClosure* cl); \/\/ including inherited and injected fields\n@@ -1198,0 +1199,1 @@\n+  static void clean_initialization_error_table();\n@@ -1209,0 +1211,3 @@\n+  void add_initialization_error(JavaThread* current, Handle exception);\n+  oop get_initialization_error(JavaThread* current);\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  return java_lang_Class::oop_size_raw(obj);\n+  return java_lang_Class::oop_size(obj);\n","filename":"src\/hotspot\/share\/oops\/instanceMirrorKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  T* const end = p + java_lang_Class::static_oop_field_count_raw(obj);\n+  T* const end = p + java_lang_Class::static_oop_field_count(obj);\n@@ -53,1 +53,1 @@\n-    Klass* klass = java_lang_Class::as_Klass_raw(obj);\n+    Klass* klass = java_lang_Class::as_Klass(obj);\n@@ -100,1 +100,1 @@\n-  T* end = p + java_lang_Class::static_oop_field_count_raw(obj);\n+  T* end = p + java_lang_Class::static_oop_field_count(obj);\n@@ -126,1 +126,1 @@\n-      Klass* klass = java_lang_Class::as_Klass_raw(obj);\n+      Klass* klass = java_lang_Class::as_Klass(obj);\n","filename":"src\/hotspot\/share\/oops\/instanceMirrorKlass.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -525,3 +525,8 @@\n-  it->push((Klass**)&_subklass);\n-  it->push((Klass**)&_next_sibling);\n-  it->push(&_next_link);\n+  if (!Arguments::is_dumping_archive()) {\n+    \/\/ If dumping archive, these may point to excluded classes. There's no need\n+    \/\/ to follow these pointers anyway, as they will be set to NULL in\n+    \/\/ remove_unshareable_info().\n+    it->push((Klass**)&_subklass);\n+    it->push((Klass**)&_next_sibling);\n+    it->push(&_next_link);\n+  }\n@@ -602,1 +607,1 @@\n-    if (HeapShared::open_archive_heap_region_mapped()) {\n+    if (HeapShared::open_regions_mapped()) {\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"cds\/heapShared.inline.hpp\"\n@@ -29,0 +28,2 @@\n+#include \"gc\/shared\/collectedHeap.inline.hpp\"\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -188,1 +189,0 @@\n-Metadata* oopDesc::metadata_field_raw(int offset) const               { return RawAccess<>::load_at(as_oop(), offset); }\n@@ -221,1 +221,1 @@\n-  assert(!HeapShared::is_archived_object(forwardee) && !HeapShared::is_archived_object(this),\n+  assert(!Universe::heap()->is_archived_object(forwardee) && !Universe::heap()->is_archived_object(this),\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+  inline markWord  mark_acquire()  const;\n@@ -149,1 +150,0 @@\n-  Metadata* metadata_field_raw(int offset) const;\n@@ -167,1 +167,0 @@\n-  jint int_field_raw(int offset) const;\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,0 +52,5 @@\n+markWord oopDesc::mark_acquire() const {\n+  uintptr_t v = HeapAccess<MO_ACQUIRE>::load_at(as_oop(), mark_offset_in_bytes());\n+  return markWord(v);\n+}\n+\n@@ -237,1 +242,0 @@\n-inline jint oopDesc::int_field_raw(int offset) const                { return RawAccess<>::load_at(as_oop(), offset);   }\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n-\/\/ to a field of a persistent variable (e.g., the _name filed in\n-\/\/ fieldDescriptor or _ptr in a CPSlot) is reference counted.\n+\/\/ to a field of a persistent variable (e.g., the _name field in\n+\/\/ fieldDescriptor or symbol in a constant pool) is reference counted.\n","filename":"src\/hotspot\/share\/oops\/symbol.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-  return t->object_size();\n+  return t->object_size(this);\n","filename":"src\/hotspot\/share\/oops\/typeArrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-  inline int object_size();\n+  inline int object_size(const TypeArrayKlass* tk) const;\n","filename":"src\/hotspot\/share\/oops\/typeArrayOop.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,2 +34,1 @@\n-int typeArrayOopDesc::object_size() {\n-  TypeArrayKlass* tk = TypeArrayKlass::cast(klass());\n+int typeArrayOopDesc::object_size(const TypeArrayKlass* tk) const {\n","filename":"src\/hotspot\/share\/oops\/typeArrayOop.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -438,0 +438,6 @@\n+  \/\/ Check if a block between early and LCA block of uses is cheaper by\n+  \/\/ frequency-based policy, latency-based policy and random-based policy\n+  bool is_cheaper_block(Block* LCA, Node* self, uint target_latency,\n+                        uint end_latency, double least_freq,\n+                        int cand_cnt, bool in_latency);\n+\n","filename":"src\/hotspot\/share\/opto\/block.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -609,0 +609,9 @@\n+      if (is_CountedLoop()) {\n+        Node* opaq = as_CountedLoop()->is_canonical_loop_entry();\n+        if (opaq != NULL) {\n+          \/\/ This is not a loop anymore. No need to keep the Opaque1 node on the test that guards the loop as it won't be\n+          \/\/ subject to further loop opts.\n+          assert(opaq->Opcode() == Op_Opaque1, \"\");\n+          igvn->replace_node(opaq, opaq->in(1));\n+        }\n+      }\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -478,0 +478,3 @@\n+  \/\/ simulate crash during compilation\n+  assert(CICrashAt < 0 || _compile->compile_id() != CICrashAt, \"just as planned\");\n+\n@@ -2111,4 +2114,0 @@\n-  \/\/ Now that all inlining is over, cut edge from root to loop\n-  \/\/ safepoints\n-  remove_root_to_sfpts_edges(igvn);\n-\n@@ -2152,0 +2151,4 @@\n+  \/\/ Now that all inlining is over and no PhaseRemoveUseless will run, cut edge from root to loop\n+  \/\/ safepoints\n+  remove_root_to_sfpts_edges(igvn);\n+\n@@ -2225,1 +2228,1 @@\n-  print_method(PHASE_CPP1, 2);\n+  print_method(PHASE_CCP1, 2);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1133,0 +1133,31 @@\n+\/\/------------------------------is_cheaper_block-------------------------\n+\/\/ Check if a block between early and LCA block of uses is cheaper by\n+\/\/ frequency-based policy, latency-based policy and random-based policy\n+bool PhaseCFG::is_cheaper_block(Block* LCA, Node* self, uint target_latency,\n+                                uint end_latency, double least_freq,\n+                                int cand_cnt, bool in_latency) {\n+  if (StressGCM) {\n+    \/\/ Should be randomly accepted in stress mode\n+    return C->randomized_select(cand_cnt);\n+  }\n+\n+  \/\/ Better Frequency\n+  if (LCA->_freq < least_freq) {\n+    return true;\n+  }\n+\n+  \/\/ Otherwise, choose with latency\n+  const double delta = 1 + PROB_UNLIKELY_MAG(4);\n+  if (!in_latency                     &&  \/\/ No block containing latency\n+      LCA->_freq < least_freq * delta &&  \/\/ No worse frequency\n+      target_latency >= end_latency   &&  \/\/ within latency range\n+      !self->is_iteratively_computed()    \/\/ But don't hoist IV increments\n+            \/\/ because they may end up above other uses of their phi forcing\n+            \/\/ their result register to be different from their input.\n+  ) {\n+    return true;\n+  }\n+\n+  return false;\n+}\n+\n@@ -1134,2 +1165,2 @@\n-\/\/ Pick a block for node self, between early and LCA, that is a cheaper\n-\/\/ alternative to LCA.\n+\/\/ Pick a block for node self, between early and LCA block of uses, that is a\n+\/\/ cheaper alternative to LCA.\n@@ -1137,1 +1168,0 @@\n-  const double delta = 1+PROB_UNLIKELY_MAG(4);\n@@ -1174,1 +1204,2 @@\n-  \/\/ the earliest legal location.  Capture the least execution frequency.\n+  \/\/ the earliest legal location. Capture the least execution frequency,\n+  \/\/ or choose a random block if -XX:+StressGCM, or using latency-based policy\n@@ -1208,10 +1239,1 @@\n-    if (LCA_freq < least_freq              || \/\/ Better Frequency\n-        (StressGCM && C->randomized_select(cand_cnt)) || \/\/ Should be randomly accepted in stress mode\n-         (!StressGCM                    &&    \/\/ Otherwise, choose with latency\n-          !in_latency                   &&    \/\/ No block containing latency\n-          LCA_freq < least_freq * delta &&    \/\/ No worse frequency\n-          target >= end_lat             &&    \/\/ within latency range\n-          !self->is_iteratively_computed() )  \/\/ But don't hoist IV increments\n-             \/\/ because they may end up above other uses of their phi forcing\n-             \/\/ their result register to be different from their input.\n-       ) {\n+    if (is_cheaper_block(LCA, self, target, end_lat, least_freq, cand_cnt, in_latency)) {\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":36,"deletions":14,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -117,4 +117,5 @@\n-  Node *r = iff->in(0);\n-  if( !r->is_Region() ) return NULL;\n-  if (r->is_Loop()) return NULL;\n-  if( phi->region() != r ) return NULL;\n+  Node* r = iff->in(0);\n+  if (!r->is_Region() || r->is_Loop() || phi->region() != r || r->as_Region()->is_copy()) {\n+    return NULL;\n+  }\n+\n@@ -246,0 +247,2 @@\n+      \/\/ Bail out if splitting through a region with a predicate input (could\n+      \/\/ also be a loop header before loop opts creates a LoopNode for it).\n@@ -252,1 +255,9 @@\n-  if((r->req() - req_c) == 1) {\n+  if ((r->req() - req_c) == 1) {\n+    return NULL;\n+  }\n+\n+  \/\/ At this point we know that we can apply the split if optimization. If the region is still on the worklist,\n+  \/\/ we should wait until it is processed. The region might be removed which makes this optimization redundant.\n+  \/\/ This also avoids the creation of dead data loops when rewiring data nodes below when a region is dying.\n+  if (igvn->_worklist.member(r)) {\n+    igvn->_worklist.push(iff); \/\/ retry split if later again\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -339,0 +339,1 @@\n+  bool arch_supports_vector_rotate(int opc, int num_elem, BasicType elem_bt, bool has_scalar_args = false);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -882,0 +882,2 @@\n+  const int stride_con = cl->stride_con();\n+\n@@ -883,1 +885,5 @@\n-  if (abs(cl->stride_con()) > (1<<2)*future_unroll_cnt) return false;\n+  const int initial_stride_sz = MAX2(1<<2, Matcher::max_vector_size(T_BYTE) \/ 2);\n+  \/\/ Maximum stride size should protect against overflow, when doubling stride unroll_count times\n+  const int max_stride_size = MIN2<int>(max_jint \/ 2 - 2, initial_stride_sz * future_unroll_cnt);\n+  \/\/ No abs() use; abs(min_jint) = min_jint\n+  if (stride_con < -max_stride_size || stride_con > max_stride_size) return false;\n@@ -909,1 +915,0 @@\n-  int stride_con = cl->stride_con();\n@@ -1993,1 +1998,2 @@\n-    if (!is_canonical_loop_entry(loop_head)) {\n+    opaq = loop_head->is_canonical_loop_entry();\n+    if (opaq == NULL) {\n@@ -1996,1 +2002,0 @@\n-    opaq = loop_head->skip_predicates()->in(0)->in(1)->in(1)->in(2);\n@@ -2008,2 +2013,2 @@\n-  assert(old_trip_count > 1 &&\n-      (!adjust_min_trip || stride_p <= (1<<3)*loop_head->unrolled_count()), \"sanity\");\n+  assert(old_trip_count > 1 && (!adjust_min_trip || stride_p <=\n+    MIN2<int>(max_jint \/ 2 - 2, MAX2(1<<3, Matcher::max_vector_size(T_BYTE)) * loop_head->unrolled_count())), \"sanity\");\n@@ -2611,1 +2616,1 @@\n-  if (!is_canonical_loop_entry(cl)) {\n+  if (cl->is_canonical_loop_entry() == NULL) {\n@@ -2940,1 +2945,3 @@\n-  if (!is_canonical_loop_entry(legacy_cl)) return multi_version_succeeded;\n+  if (legacy_cl->is_canonical_loop_entry() == NULL) {\n+    return multi_version_succeeded;\n+  }\n@@ -3363,0 +3370,1 @@\n+      return false; \/\/ need to recalculate idom data\n@@ -3381,1 +3389,1 @@\n-      return true;\n+      return false; \/\/ need to recalculate idom data\n@@ -3494,0 +3502,1 @@\n+        return false; \/\/ need to recalculate idom data\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2048,1 +2048,1 @@\n-  if (is_strip_mined() && is_valid_counted_loop(T_INT)) {\n+  if (is_strip_mined() && in(EntryControl) != NULL && in(EntryControl)->is_OuterStripMinedLoop()) {\n@@ -2142,3 +2142,4 @@\n-    while (ctrl != NULL && ctrl->is_Proj() && ctrl->in(0)->is_If() &&\n-           ctrl->in(0)->as_If()->proj_out(1-ctrl->as_Proj()->_con)->outcnt() == 1 &&\n-           ctrl->in(0)->as_If()->proj_out(1-ctrl->as_Proj()->_con)->unique_out()->Opcode() == Op_Halt) {\n+    while (ctrl != NULL && ctrl->is_Proj() && ctrl->in(0) != NULL && ctrl->in(0)->is_If() &&\n+            (ctrl->in(0)->as_If()->proj_out_or_null(1-ctrl->as_Proj()->_con) == NULL ||\n+             (ctrl->in(0)->as_If()->proj_out(1-ctrl->as_Proj()->_con)->outcnt() == 1 &&\n+              ctrl->in(0)->as_If()->proj_out(1-ctrl->as_Proj()->_con)->unique_out()->Opcode() == Op_Halt))) {\n@@ -4923,3 +4924,3 @@\n-bool PhaseIdealLoop::is_canonical_loop_entry(CountedLoopNode* cl) {\n-  if (!cl->is_main_loop() && !cl->is_post_loop()) {\n-    return false;\n+Node* CountedLoopNode::is_canonical_loop_entry() {\n+  if (!is_main_loop() && !is_post_loop()) {\n+    return NULL;\n@@ -4927,1 +4928,1 @@\n-  Node* ctrl = cl->skip_predicates();\n+  Node* ctrl = skip_predicates();\n@@ -4930,1 +4931,1 @@\n-    return false;\n+    return NULL;\n@@ -4934,1 +4935,1 @@\n-    return false;\n+    return NULL;\n@@ -4938,1 +4939,1 @@\n-    return false;\n+    return NULL;\n@@ -4942,1 +4943,1 @@\n-    return false;\n+    return NULL;\n@@ -4944,1 +4945,7 @@\n-  \/\/ compares can get conditionally flipped\n+\n+  uint input = is_main_loop() ? 2 : 1;\n+  if (input >= cmpzm->req() || cmpzm->in(input) == NULL) {\n+    return NULL;\n+  }\n+  bool res = cmpzm->in(input)->Opcode() == Op_Opaque1;\n+#ifdef ASSERT\n@@ -4953,4 +4960,3 @@\n-  if (!found_opaque) {\n-    return false;\n-  }\n-  return true;\n+  assert(found_opaque == res, \"wrong pattern\");\n+#endif\n+  return res ? cmpzm->in(input) : NULL;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":23,"deletions":17,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -353,0 +353,2 @@\n+  Node* is_canonical_loop_entry();\n+\n@@ -934,2 +936,0 @@\n-  static bool is_canonical_loop_entry(CountedLoopNode* cl);\n-\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -236,2 +236,7 @@\n-  assert( iff->is_If(), \"\" );\n-  assert(iff->Opcode() == Op_If || iff->Opcode() == Op_CountedLoopEnd || iff->Opcode() == Op_RangeCheck, \"Check this code when new subtype is added\");\n+  assert(iff->is_If(), \"must be\");\n+  assert(iff->Opcode() == Op_If ||\n+         iff->Opcode() == Op_CountedLoopEnd ||\n+         iff->Opcode() == Op_LongCountedLoopEnd ||\n+         iff->Opcode() == Op_RangeCheck,\n+        \"Check this code when new subtype is added\");\n+\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -310,2 +310,2 @@\n-  const TypeInt* src_offset_inttype  = _igvn.find_int_type(src_offset);;\n-  const TypeInt* dest_offset_inttype = _igvn.find_int_type(dest_offset);;\n+  const TypeInt* src_offset_inttype  = _igvn.find_int_type(src_offset);\n+  const TypeInt* dest_offset_inttype = _igvn.find_int_type(dest_offset);\n@@ -834,1 +834,3 @@\n-  _igvn.replace_node(_callprojs.fallthrough_ioproj, *io);\n+  if (_callprojs.fallthrough_ioproj != NULL) {\n+    _igvn.replace_node(_callprojs.fallthrough_ioproj, *io);\n+  }\n@@ -1098,2 +1100,8 @@\n-  *io = _callprojs.fallthrough_ioproj->clone();\n-  transform_later(*io);\n+  \/\/ When src is negative and arraycopy is before an infinite loop,_callprojs.fallthrough_ioproj\n+  \/\/ could be NULL. Skip clone and update NULL fallthrough_ioproj.\n+  if (_callprojs.fallthrough_ioproj != NULL) {\n+    *io = _callprojs.fallthrough_ioproj->clone();\n+    transform_later(*io);\n+  } else {\n+    *io = NULL;\n+  }\n@@ -1336,1 +1344,3 @@\n-    _igvn.replace_node(_callprojs.fallthrough_ioproj, io);\n+    if (_callprojs.fallthrough_ioproj != NULL) {\n+      _igvn.replace_node(_callprojs.fallthrough_ioproj, io);\n+    }\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2689,0 +2689,33 @@\n+uint Matcher::vector_length(const Node* n) {\n+  const TypeVect* vt = n->bottom_type()->is_vect();\n+  return vt->length();\n+}\n+\n+uint Matcher::vector_length(const MachNode* use, const MachOper* opnd) {\n+  int def_idx = use->operand_index(opnd);\n+  Node* def = use->in(def_idx);\n+  return def->bottom_type()->is_vect()->length();\n+}\n+\n+uint Matcher::vector_length_in_bytes(const Node* n) {\n+  const TypeVect* vt = n->bottom_type()->is_vect();\n+  return vt->length_in_bytes();\n+}\n+\n+uint Matcher::vector_length_in_bytes(const MachNode* use, const MachOper* opnd) {\n+  uint def_idx = use->operand_index(opnd);\n+  Node* def = use->in(def_idx);\n+  return def->bottom_type()->is_vect()->length_in_bytes();\n+}\n+\n+BasicType Matcher::vector_element_basic_type(const Node* n) {\n+  const TypeVect* vt = n->bottom_type()->is_vect();\n+  return vt->element_basic_type();\n+}\n+\n+BasicType Matcher::vector_element_basic_type(const MachNode* use, const MachOper* opnd) {\n+  int def_idx = use->operand_index(opnd);\n+  Node* def = use->in(def_idx);\n+  return def->bottom_type()->is_vect()->element_basic_type();\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -352,0 +352,12 @@\n+  \/\/ Vector length\n+  static uint vector_length(const Node* n);\n+  static uint vector_length(const MachNode* use, const MachOper* opnd);\n+\n+  \/\/ Vector length in bytes\n+  static uint vector_length_in_bytes(const Node* n);\n+  static uint vector_length_in_bytes(const MachNode* use, const MachOper* opnd);\n+\n+  \/\/ Vector element basic type\n+  static BasicType vector_element_basic_type(const Node* n);\n+  static BasicType vector_element_basic_type(const MachNode* use, const MachOper* opnd);\n+\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -158,0 +158,3 @@\n+  if (phase->type(in(IfTrue)) == Type::TOP || phase->type(in(IfFalse)) == Type::TOP) {\n+    return Type::TOP;\n+  }\n","filename":"src\/hotspot\/share\/opto\/movenode.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-  assert((Opcode() != Op_If && Opcode() != Op_RangeCheck) || outcnt() == 2, \"bad if #1\");\n@@ -78,0 +77,1 @@\n+  assert((Opcode() != Op_If && Opcode() != Op_RangeCheck) || outcnt() == 2, \"bad if #1\");\n","filename":"src\/hotspot\/share\/opto\/multnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-  PHASE_CPP1,\n+  PHASE_CCP1,\n@@ -98,1 +98,1 @@\n-      case PHASE_CPP1:                       return \"PhaseCPP 1\";\n+      case PHASE_CCP1:                       return \"PhaseCCP 1\";\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-    int size = ((typeArrayOop)result)->object_size();\n+    int size = TypeArrayKlass::cast(array_type)->oop_size(result);\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2491,1 +2491,0 @@\n-        assert(in2->bottom_type()->isa_int(), \"Shift must always be an int value\");\n@@ -2493,1 +2492,1 @@\n-        if (!in2->is_Con() || -0x80 > in2->get_int() || in2->get_int() >= 0x80) {\n+        if (!in2->is_Con() || !Matcher::supports_vector_constant_rotates(in2->get_int())) {\n@@ -3607,1 +3606,1 @@\n-  if (!PhaseIdealLoop::is_canonical_loop_entry(cl)) {\n+  if (cl->is_canonical_loop_entry() == NULL) {\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -62,0 +62,42 @@\n+bool LibraryCallKit::arch_supports_vector_rotate(int opc, int num_elem, BasicType elem_bt, bool has_scalar_args) {\n+    bool is_supported = true;\n+    \/\/ has_scalar_args flag is true only for non-constant scalar shift count,\n+    \/\/ since in this case shift needs to be broadcasted.\n+    if (!Matcher::match_rule_supported_vector(opc, num_elem, elem_bt) ||\n+         (has_scalar_args &&\n+           !arch_supports_vector(VectorNode::replicate_opcode(elem_bt), num_elem, elem_bt, VecMaskNotUsed))) {\n+      is_supported = false;\n+    }\n+\n+    int lshiftopc, rshiftopc;\n+    switch(elem_bt) {\n+      case T_BYTE:\n+        lshiftopc = Op_LShiftI;\n+        rshiftopc = Op_URShiftB;\n+        break;\n+      case T_SHORT:\n+        lshiftopc = Op_LShiftI;\n+        rshiftopc = Op_URShiftS;\n+        break;\n+      case T_INT:\n+        lshiftopc = Op_LShiftI;\n+        rshiftopc = Op_URShiftI;\n+        break;\n+      case T_LONG:\n+        lshiftopc = Op_LShiftL;\n+        rshiftopc = Op_URShiftL;\n+        break;\n+      default:\n+        assert(false, \"Unexpected type\");\n+    }\n+    int lshiftvopc = VectorNode::opcode(lshiftopc, elem_bt);\n+    int rshiftvopc = VectorNode::opcode(rshiftopc, elem_bt);\n+    if (!is_supported &&\n+        arch_supports_vector(lshiftvopc, num_elem, elem_bt, VecMaskNotUsed, has_scalar_args) &&\n+        arch_supports_vector(rshiftvopc, num_elem, elem_bt, VecMaskNotUsed, has_scalar_args) &&\n+        arch_supports_vector(Op_OrV, num_elem, elem_bt, VecMaskNotUsed)) {\n+      is_supported = true;\n+    }\n+    return is_supported;\n+}\n+\n@@ -115,2 +157,2 @@\n-  \/\/ Check that architecture supports this op-size-type combination.\n-  if (!Matcher::match_rule_supported_vector(sopc, num_elem, type)) {\n+  if (VectorNode::is_vector_rotate(sopc)) {\n+    if(!arch_supports_vector_rotate(sopc, num_elem, type, has_scalar_args)) {\n@@ -118,4 +160,4 @@\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support it\",\n-                    NodeClassNames[sopc], type2name(type), num_elem);\n-    }\n+      if (C->print_intrinsics()) {\n+        tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support variable vector shifts\",\n+                      NodeClassNames[sopc], type2name(type), num_elem);\n+      }\n@@ -123,1 +165,2 @@\n-    return false;\n+      return false;\n+    }\n@@ -125,1 +168,12 @@\n-    assert(Matcher::match_rule_supported(sopc), \"must be supported\");\n+    \/\/ Check that architecture supports this op-size-type combination.\n+    if (!Matcher::match_rule_supported_vector(sopc, num_elem, type)) {\n+#ifndef PRODUCT\n+      if (C->print_intrinsics()) {\n+        tty->print_cr(\"  ** Rejected vector op (%s,%s,%d) because architecture does not support it\",\n+                      NodeClassNames[sopc], type2name(type), num_elem);\n+      }\n+#endif\n+      return false;\n+    } else {\n+      assert(Matcher::match_rule_supported(sopc), \"must be supported\");\n+    }\n@@ -1514,1 +1568,3 @@\n-  if (opc == 0 || !VectorNode::is_shift_opcode(opc)) {\n+  bool is_shift  = VectorNode::is_shift_opcode(opc);\n+  bool is_rotate = VectorNode::is_rotate_opcode(opc);\n+  if (opc == 0 || (!is_shift && !is_rotate)) {\n@@ -1527,0 +1583,1 @@\n+  Node* cnt  = argument(5);\n@@ -1529,0 +1586,1 @@\n+  const TypeInt* cnt_type = cnt->bottom_type()->isa_int();\n@@ -1530,1 +1588,5 @@\n-  if (!arch_supports_vector(sopc, num_elem, elem_bt, VecMaskNotUsed, true \/*has_scalar_args*\/)) {\n+  \/\/ If CPU supports vector constant rotate instructions pass it directly\n+  bool is_const_rotate = is_rotate && cnt_type && cnt_type->is_con() &&\n+                         Matcher::supports_vector_constant_rotates(cnt_type->get_con());\n+  bool has_scalar_args = is_rotate ? !is_const_rotate : true;\n+  if (!arch_supports_vector(sopc, num_elem, elem_bt, VecMaskNotUsed, has_scalar_args)) {\n@@ -1538,1 +1600,14 @@\n-  Node* opd2 = vector_shift_count(argument(5), opc, elem_bt, num_elem);\n+  Node* opd2 = NULL;\n+  if (is_shift) {\n+    opd2 = vector_shift_count(cnt, opc, elem_bt, num_elem);\n+  } else {\n+    assert(is_rotate, \"unexpected operation\");\n+    if (!is_const_rotate) {\n+      const Type * type_bt = Type::get_const_basic_type(elem_bt);\n+      cnt = elem_bt == T_LONG ? gvn().transform(new ConvI2LNode(cnt)) : cnt;\n+      opd2 = gvn().transform(VectorNode::scalar2vector(cnt, num_elem, type_bt));\n+    } else {\n+      \/\/ Constant shift value.\n+      opd2 = cnt;\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":86,"deletions":11,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"opto\/convertnode.hpp\"\n@@ -145,1 +146,1 @@\n-    return (bt == T_LONG || bt == T_INT ? Op_RotateLeftV : 0);\n+    return (is_integral_type(bt) ? Op_RotateLeftV : 0);\n@@ -147,1 +148,1 @@\n-    return (bt == T_LONG || bt == T_INT ? Op_RotateRightV : 0);\n+    return (is_integral_type(bt) ? Op_RotateRightV : 0);\n@@ -264,1 +265,1 @@\n-    if (vopc == Op_RotateLeftV || vopc == Op_RotateRightV) {\n+    if (VectorNode::is_vector_rotate(vopc)) {\n@@ -298,7 +299,0 @@\n-bool VectorNode::is_scalar_rotate(Node* n) {\n-  if (n->Opcode() == Op_RotateLeft || n->Opcode() == Op_RotateRight) {\n-    return true;\n-  }\n-  return false;\n-}\n-\n@@ -306,1 +300,1 @@\n-  assert(vopc == Op_RotateLeftV || vopc == Op_RotateRightV, \"wrong opcode\");\n+  assert(VectorNode::is_vector_rotate(vopc), \"wrong opcode\");\n@@ -314,0 +308,8 @@\n+  \/\/ If target does not support variable shift operations then no point\n+  \/\/ in creating a rotate vector node since it will not be disintegratable.\n+  \/\/ Adding a pessimistic check to avoid complex pattern mathing which\n+  \/\/ may not be full proof.\n+  if (!Matcher::supports_vector_variable_shifts()) {\n+     return false;\n+  }\n+\n@@ -350,0 +352,17 @@\n+bool VectorNode::is_rotate_opcode(int opc) {\n+  switch (opc) {\n+  case Op_RotateRight:\n+  case Op_RotateLeft:\n+    return true;\n+  default:\n+    return false;\n+  }\n+}\n+\n+bool VectorNode::is_scalar_rotate(Node* n) {\n+  if (is_rotate_opcode(n->Opcode())) {\n+    return true;\n+  }\n+  return false;\n+}\n+\n@@ -581,0 +600,10 @@\n+bool VectorNode::is_vector_rotate(int opc) {\n+  switch (opc) {\n+  case Op_RotateLeftV:\n+  case Op_RotateRightV:\n+    return true;\n+  default:\n+    return false;\n+  }\n+}\n+\n@@ -1134,1 +1163,1 @@\n-  assert(bt == T_INT || bt == T_LONG, \"sanity\");\n+  assert(is_integral_type(bt), \"sanity\");\n@@ -1137,3 +1166,12 @@\n-  int shift_mask = (bt == T_INT) ? 0x1F : 0x3F;\n-  int shiftLOpc = (bt == T_INT) ? Op_LShiftI : Op_LShiftL;\n-  int shiftROpc = (bt == T_INT) ? Op_URShiftI: Op_URShiftL;\n+  int shift_mask = (type2aelembytes(bt) * 8) - 1;\n+  int shiftLOpc = (bt == T_LONG) ? Op_LShiftL : Op_LShiftI;\n+  auto urshiftopc = [=]() {\n+    switch(bt) {\n+      case T_INT: return Op_URShiftI;\n+      case T_LONG: return Op_URShiftL;\n+      case T_BYTE: return Op_URShiftB;\n+      case T_SHORT: return Op_URShiftS;\n+      default: return (Opcodes)0;\n+    }\n+  };\n+  int shiftROpc = urshiftopc();\n@@ -1145,3 +1183,5 @@\n-  if (cnt->is_Con() && cnt->bottom_type()->isa_int()) {\n-    \/\/ Constant shift case.\n-    int shift = cnt->get_int() & shift_mask;\n+  const TypeInt* cnt_type = cnt->bottom_type()->isa_int();\n+  bool is_binary_vector_op = false;\n+  if (cnt_type && cnt_type->is_con()) {\n+    \/\/ Constant shift.\n+    int shift = cnt_type->get_con() & shift_mask;\n@@ -1150,3 +1190,2 @@\n-  } else {\n-    \/\/ Variable shift case.\n-    assert(VectorNode::is_invariant_vector(cnt), \"Broadcast expected\");\n+  } else if (VectorNode::is_invariant_vector(cnt)) {\n+    \/\/ Scalar variable shift, handle replicates generated by auto vectorizer.\n@@ -1156,2 +1195,7 @@\n-      assert(cnt->Opcode() == Op_ConvI2L, \"ConvI2L expected\");\n-      cnt = cnt->in(1);\n+      if (cnt->Opcode() == Op_ConvI2L) {\n+         cnt = cnt->in(1);\n+      } else {\n+         assert(cnt->bottom_type()->isa_long() &&\n+                cnt->bottom_type()->is_long()->is_con(), \"Long constant expected\");\n+         cnt = phase->transform(new ConvL2INode(cnt));\n+      }\n@@ -1161,0 +1205,31 @@\n+  } else {\n+    \/\/ Variable vector rotate count.\n+    assert(Matcher::supports_vector_variable_shifts(), \"\");\n+\n+    int subVopc = 0;\n+    int addVopc = 0;\n+    Node* shift_mask_node = NULL;\n+    Node* const_one_node = NULL;\n+\n+    assert(cnt->bottom_type()->isa_vect(), \"Unexpected shift\");\n+    const Type* elem_ty = Type::get_const_basic_type(bt);\n+\n+    if (bt == T_LONG) {\n+      shift_mask_node = phase->longcon(shift_mask);\n+      const_one_node = phase->longcon(1L);\n+      subVopc = VectorNode::opcode(Op_SubL, bt);\n+      addVopc = VectorNode::opcode(Op_AddL, bt);\n+    } else {\n+      shift_mask_node = phase->intcon(shift_mask);\n+      const_one_node = phase->intcon(1);\n+      subVopc = VectorNode::opcode(Op_SubI, bt);\n+      addVopc = VectorNode::opcode(Op_AddI, bt);\n+    }\n+    Node* vector_mask = phase->transform(VectorNode::scalar2vector(shift_mask_node, vlen, elem_ty));\n+    Node* vector_one = phase->transform(VectorNode::scalar2vector(const_one_node, vlen, elem_ty));\n+\n+    shiftRCnt = cnt;\n+    shiftRCnt = phase->transform(VectorNode::make(Op_AndV, shiftRCnt, vector_mask, vt));\n+    vector_mask = phase->transform(VectorNode::make(addVopc, vector_one, vector_mask, vt));\n+    shiftLCnt = phase->transform(VectorNode::make(subVopc, vector_mask, shiftRCnt, vt));\n+    is_binary_vector_op = true;\n@@ -1168,2 +1243,4 @@\n-  shiftLCnt = phase->transform(new LShiftCntVNode(shiftLCnt, vt));\n-  shiftRCnt = phase->transform(new RShiftCntVNode(shiftRCnt, vt));\n+  if (!is_binary_vector_op) {\n+    shiftLCnt = phase->transform(new LShiftCntVNode(shiftLCnt, vt));\n+    shiftRCnt = phase->transform(new RShiftCntVNode(shiftRCnt, vt));\n+  }\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":102,"deletions":25,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+  static bool is_rotate_opcode(int opc);\n@@ -90,1 +91,1 @@\n-  static bool is_vector_rotate_supported(int vopc, uint vlen, BasicType bt);\n+  static bool is_vector_rotate_supported(int opc, uint vlen, BasicType bt);\n@@ -102,0 +103,1 @@\n+  static bool is_vector_rotate(int opc);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivmp(jt, eos);\n+        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivmp(jt, eos, true \/* allow_suspend *\/);\n@@ -387,1 +387,1 @@\n-        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivmp(jt, eos);\n+        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivmp(jt, eos, true \/* allow_suspend *\/);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -247,0 +247,1 @@\n+  { CC\"Java_jdk_test_whitebox_WhiteBox_registerNatives\",           NULL, FN_PTR(JVM_RegisterWhiteBoxMethods)     },\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-Thread* ProgrammableUpcallHandler::maybe_attach_and_get_thread(bool* should_detach) {\n-  Thread* thread = Thread::current_or_null();\n+JavaThread* ProgrammableUpcallHandler::maybe_attach_and_get_thread(bool* should_detach) {\n+  JavaThread* thread = JavaThread::current_or_null();\n@@ -62,1 +62,2 @@\n-    thread = Thread::current();\n+    thread = JavaThread::current();\n+    assert(!thread->has_last_Java_frame(), \"newly-attached thread not expected to have last Java frame\");\n@@ -69,1 +70,1 @@\n-void ProgrammableUpcallHandler::detach_thread(Thread* thread) {\n+void ProgrammableUpcallHandler::detach_current_thread() {\n@@ -74,0 +75,79 @@\n+\/\/ modelled after JavaCallWrapper::JavaCallWrapper\n+JavaThread* ProgrammableUpcallHandler::on_entry(OptimizedEntryBlob::FrameData* context) {\n+  JavaThread* thread = maybe_attach_and_get_thread(&context->should_detach);\n+  context->thread = thread;\n+\n+  assert(thread->can_call_java(), \"must be able to call Java\");\n+\n+  \/\/ Allocate handle block for Java code. This must be done before we change thread_state to _thread_in_Java,\n+  \/\/ since it can potentially block.\n+  context->new_handles = JNIHandleBlock::allocate_block(thread);\n+\n+  \/\/ After this, we are officially in Java Code. This needs to be done before we change any of the thread local\n+  \/\/ info, since we cannot find oops before the new information is set up completely.\n+  ThreadStateTransition::transition_from_native(thread, _thread_in_Java);\n+\n+  \/\/ Make sure that we handle asynchronous stops and suspends _before_ we clear all thread state\n+  \/\/ in OptimizedEntryBlob::FrameData. This way, we can decide if we need to do any pd actions\n+  \/\/ to prepare for stop\/suspend (cache sp, or other state).\n+  bool clear_pending_exception = true;\n+  if (thread->has_special_runtime_exit_condition()) {\n+    thread->handle_special_runtime_exit_condition();\n+    if (thread->has_pending_exception()) {\n+      clear_pending_exception = false;\n+    }\n+  }\n+\n+  context->old_handles = thread->active_handles();\n+\n+  \/\/ For the profiler, the last_Java_frame information in thread must always be in\n+  \/\/ legal state. We have no last Java frame if last_Java_sp == NULL so\n+  \/\/ the valid transition is to clear _last_Java_sp and then reset the rest of\n+  \/\/ the (platform specific) state.\n+\n+  context->jfa.copy(thread->frame_anchor());\n+  thread->frame_anchor()->clear();\n+\n+  debug_only(thread->inc_java_call_counter());\n+  thread->set_active_handles(context->new_handles);     \/\/ install new handle block and reset Java frame linkage\n+\n+  \/\/ clear any pending exception in thread (native calls start with no exception pending)\n+  if (clear_pending_exception) {\n+    thread->clear_pending_exception();\n+  }\n+\n+  MACOS_AARCH64_ONLY(thread->enable_wx(WXExec));\n+\n+  return thread;\n+}\n+\n+\/\/ modelled after JavaCallWrapper::~JavaCallWrapper\n+void ProgrammableUpcallHandler::on_exit(OptimizedEntryBlob::FrameData* context) {\n+  JavaThread* thread = context->thread;\n+  assert(thread == JavaThread::current(), \"must still be the same thread\");\n+\n+  MACOS_AARCH64_ONLY(thread->enable_wx(WXWrite));\n+\n+  \/\/ restore previous handle block\n+  thread->set_active_handles(context->old_handles);\n+\n+  thread->frame_anchor()->zap();\n+\n+  debug_only(thread->dec_java_call_counter());\n+\n+  \/\/ Old thread-local info. has been restored. We are now back in native code.\n+  ThreadStateTransition::transition_from_java(thread, _thread_in_native);\n+\n+  thread->frame_anchor()->copy(&context->jfa);\n+\n+  \/\/ Release handles after we are marked as being in native code again, since this\n+  \/\/ operation might block\n+  JNIHandleBlock::release_block(context->new_handles, thread);\n+\n+  assert(!thread->has_pending_exception(), \"Upcall can not throw an exception\");\n+\n+  if (context->should_detach) {\n+    detach_current_thread();\n+  }\n+}\n+\n@@ -76,1 +156,1 @@\n-  Thread* thread = maybe_attach_and_get_thread(&should_detach);\n+  JavaThread* thread = maybe_attach_and_get_thread(&should_detach);\n@@ -80,1 +160,1 @@\n-    upcall_helper(JavaThread::cast(thread), rec, buff);\n+    upcall_helper(thread, rec, buff);\n@@ -84,1 +164,1 @@\n-    detach_thread(thread);\n+    detach_current_thread();\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp","additions":87,"deletions":7,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"code\/codeBlob.hpp\"\n@@ -50,2 +51,5 @@\n-  static Thread* maybe_attach_and_get_thread(bool* should_detach);\n-  static void detach_thread(Thread* thread);\n+  static JavaThread* maybe_attach_and_get_thread(bool* should_detach);\n+  static void detach_current_thread();\n+\n+  static JavaThread* on_entry(OptimizedEntryBlob::FrameData* context);\n+  static void on_exit(OptimizedEntryBlob::FrameData* context);\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -377,0 +377,20 @@\n+    case VECTOR_OP_LROTATE: {\n+      switch (bt) {\n+        case T_BYTE:   \/\/ fall-through\n+        case T_SHORT:  \/\/ fall-through\n+        case T_INT:    \/\/ fall-through\n+        case T_LONG:  return Op_RotateLeft;\n+        default: fatal(\"LROTATE: %s\", type2name(bt));\n+      }\n+      break;\n+    }\n+    case VECTOR_OP_RROTATE: {\n+      switch (bt) {\n+        case T_BYTE:   \/\/ fall-through\n+        case T_SHORT:  \/\/ fall-through\n+        case T_INT:    \/\/ fall-through\n+        case T_LONG:  return Op_RotateRight;\n+        default: fatal(\"RROTATE: %s\", type2name(bt));\n+      }\n+      break;\n+    }\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -86,0 +86,4 @@\n+    \/\/ Rotate operations\n+    VECTOR_OP_LROTATE = 22,\n+    VECTOR_OP_RROTATE = 23,\n+\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  const char* enum_sig = \"Lsun\/hotspot\/parser\/DiagnosticCommand$DiagnosticArgumentType;\";\n+  const char* enum_sig = \"Ljdk\/test\/whitebox\/parser\/DiagnosticCommand$DiagnosticArgumentType;\";\n","filename":"src\/hotspot\/share\/prims\/wbtestmethods\/parserTests.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -998,1 +998,1 @@\n-  CgroupInfo cg_infos[4];\n+  CgroupInfo cg_infos[CG_INFO_LENGTH];\n@@ -1936,1 +1936,9 @@\n-  return HeapShared::is_archived_object(obj_oop);\n+  return Universe::heap()->is_archived_object(obj_oop);\n+WB_END\n+\n+WB_ENTRY(jboolean, WB_IsSharedInternedString(JNIEnv* env, jobject wb, jobject str))\n+  ResourceMark rm(THREAD);\n+  oop str_oop = JNIHandles::resolve(str);\n+  int length;\n+  jchar* chars = java_lang_String::as_unicode_string(str_oop, length, CHECK_(false));\n+  return StringTable::lookup_shared(chars, length) == str_oop;\n@@ -1943,2 +1951,2 @@\n-WB_ENTRY(jboolean, WB_AreSharedStringsIgnored(JNIEnv* env))\n-  return !HeapShared::closed_archive_heap_region_mapped();\n+WB_ENTRY(jboolean, WB_AreSharedStringsMapped(JNIEnv* env))\n+  return HeapShared::closed_regions_mapped();\n@@ -1969,1 +1977,1 @@\n-  return HeapShared::open_archive_heap_region_mapped();\n+  return HeapShared::open_regions_mapped();\n@@ -2125,1 +2133,26 @@\n-\/\/Some convenience methods to deal with objects from java\n+static volatile int _emulated_lock = 0;\n+\n+WB_ENTRY(void, WB_LockAndBlock(JNIEnv* env, jobject wb, jboolean suspender))\n+  JavaThread* self = JavaThread::current();\n+\n+  {\n+    \/\/ Before trying to acquire the lock transition into a safepoint safe state.\n+    \/\/ Otherwise if either suspender or suspendee blocks for a safepoint\n+    \/\/ in ~ThreadBlockInVM the other one could loop forever trying to acquire\n+    \/\/ the lock without allowing the safepoint to progress.\n+    ThreadBlockInVM tbivm(self);\n+\n+    \/\/ We will deadlock here if we are 'suspender' and 'suspendee'\n+    \/\/ suspended in ~ThreadBlockInVM. This verifies we only suspend\n+    \/\/ at the right place.\n+    while (Atomic::cmpxchg(&_emulated_lock, 0, 1) != 0) {}\n+    assert(_emulated_lock == 1, \"Must be locked\");\n+\n+    \/\/ Sleep much longer in suspendee to force situation where\n+    \/\/ 'suspender' is waiting above to acquire lock.\n+    os::naked_short_sleep(suspender ? 1 : 10);\n+  }\n+  Atomic::store(&_emulated_lock, 0);\n+WB_END\n+\n+\/\/ Some convenience methods to deal with objects from java\n@@ -2175,0 +2208,3 @@\n+  Klass* klass = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(wbclass));\n+  const char* klass_name = klass->external_name();\n+\n@@ -2190,2 +2226,2 @@\n-          tty->print_cr(\"Warning: 'NoSuchMethodError' on register of sun.hotspot.WhiteBox::%s%s\",\n-              method_array[i].name, method_array[i].signature);\n+          tty->print_cr(\"Warning: 'NoSuchMethodError' on register of %s::%s%s\",\n+              klass_name, method_array[i].name, method_array[i].signature);\n@@ -2195,2 +2231,2 @@\n-        tty->print_cr(\"Warning: unexpected error on register of sun.hotspot.WhiteBox::%s%s. All methods will be unregistered\",\n-            method_array[i].name, method_array[i].signature);\n+        tty->print_cr(\"Warning: unexpected error on register of %s::%s%s. All methods will be unregistered\",\n+            klass_name, method_array[i].name, method_array[i].signature);\n@@ -2411,1 +2447,1 @@\n-      CC\"(Ljava\/lang\/String;C[Lsun\/hotspot\/parser\/DiagnosticCommand;)[Ljava\/lang\/Object;\",\n+      CC\"(Ljava\/lang\/String;C[Ljdk\/test\/whitebox\/parser\/DiagnosticCommand;)[Ljava\/lang\/Object;\",\n@@ -2600,0 +2636,1 @@\n+  {CC\"isSharedInternedString\", CC\"(Ljava\/lang\/String;)Z\", (void*)&WB_IsSharedInternedString },\n@@ -2601,1 +2638,1 @@\n-  {CC\"areSharedStringsIgnored\",           CC\"()Z\",    (void*)&WB_AreSharedStringsIgnored },\n+  {CC\"areSharedStringsMapped\",            CC\"()Z\",    (void*)&WB_AreSharedStringsMapped },\n@@ -2616,0 +2653,1 @@\n+  {CC\"lockAndBlock\", CC\"(Z)V\",                        (void*)&WB_LockAndBlock},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":50,"deletions":12,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-#include \"services\/memTracker.hpp\"\n+#include \"services\/nmtCommon.hpp\"\n@@ -528,0 +528,1 @@\n+  { \"FilterSpuriousWakeups\",        JDK_Version::jdk(18), JDK_Version::jdk(19), JDK_Version::jdk(20) },\n@@ -1993,11 +1994,0 @@\n-  if (PrintNMTStatistics) {\n-#if INCLUDE_NMT\n-    if (MemTracker::tracking_level() == NMT_off) {\n-#endif \/\/ INCLUDE_NMT\n-      warning(\"PrintNMTStatistics is disabled, because native memory tracking is not enabled\");\n-      PrintNMTStatistics = false;\n-#if INCLUDE_NMT\n-    }\n-#endif\n-  }\n-\n@@ -3710,23 +3700,0 @@\n-    if (match_option(option, \"-XX:NativeMemoryTracking\", &tail)) {\n-#if INCLUDE_NMT\n-      \/\/ The launcher did not setup nmt environment variable properly.\n-      if (!MemTracker::check_launcher_nmt_support(tail)) {\n-        warning(\"Native Memory Tracking did not setup properly, using wrong launcher?\");\n-      }\n-\n-      \/\/ Verify if nmt option is valid.\n-      if (MemTracker::verify_nmt_option()) {\n-        \/\/ Late initialization, still in single-threaded mode.\n-        if (MemTracker::tracking_level() >= NMT_summary) {\n-          MemTracker::init();\n-        }\n-      } else {\n-        vm_exit_during_initialization(\"Syntax error, expecting -XX:NativeMemoryTracking=[off|summary|detail]\", NULL);\n-      }\n-      continue;\n-#else\n-      jio_fprintf(defaultStream::error_stream(),\n-        \"Native Memory Tracking is not supported in this VM\\n\");\n-      return JNI_ERR;\n-#endif\n-    }\n@@ -3984,0 +3951,20 @@\n+#if INCLUDE_NMT\n+  \/\/ Verify NMT arguments\n+  const NMT_TrackingLevel lvl = NMTUtil::parse_tracking_level(NativeMemoryTracking);\n+  if (lvl == NMT_unknown) {\n+    jio_fprintf(defaultStream::error_stream(),\n+                \"Syntax error, expecting -XX:NativeMemoryTracking=[off|summary|detail]\", NULL);\n+    return JNI_ERR;\n+  }\n+  if (PrintNMTStatistics && lvl == NMT_off) {\n+    warning(\"PrintNMTStatistics is disabled, because native memory tracking is not enabled\");\n+    FLAG_SET_DEFAULT(PrintNMTStatistics, false);\n+  }\n+#else\n+  if (!FLAG_IS_DEFAULT(NativeMemoryTracking) || PrintNMTStatistics) {\n+    warning(\"Native Memory Tracking is not supported in this VM\");\n+    FLAG_SET_DEFAULT(NativeMemoryTracking, \"off\");\n+    FLAG_SET_DEFAULT(PrintNMTStatistics, false);\n+  }\n+#endif \/\/ INCLUDE_NMT\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":22,"deletions":35,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -113,2 +113,0 @@\n-  assert(!f->is_internal(), \"regular Java fields only\");\n-\n@@ -128,1 +126,2 @@\n-    assert(_index < field_holder()->java_fields_count(), \"oob\");\n+    assert(access_flags().is_internal() ||\n+           _index < field_holder()->java_fields_count(), \"oob\");\n@@ -136,0 +135,1 @@\n+  if (access_flags().is_internal()) st->print(\"internal \");\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1071,3 +1071,1 @@\n-   \/\/ Nothing to do\n-   \/\/ receiver is a global ref\n-   \/\/ handle block is for JNI\n+    _cb->as_optimized_entry_blob()->oops_do(f, *this);\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -726,2 +726,2 @@\n-          \"When true prevents OS-level spurious, or premature, wakeups \"    \\\n-          \"from Object.wait (Ignored for Windows)\")                         \\\n+          \"(Deprecated) When true prevents OS-level spurious, or premature,\"\\\n+          \" wakeups from Object.wait (Ignored for Windows)\")                \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+  bool is_suspend()                { return _handshake_cl->is_suspend(); }\n@@ -379,0 +380,1 @@\n+      \/\/ Will not suspend here.\n@@ -428,1 +430,5 @@\n-HandshakeOperation* HandshakeState::get_op_for_self() {\n+static bool no_suspend_filter(HandshakeOperation* op) {\n+  return !op->is_suspend();\n+}\n+\n+HandshakeOperation* HandshakeState::get_op_for_self(bool allow_suspend) {\n@@ -431,2 +437,6 @@\n-  return _queue.peek();\n-};\n+  if (allow_suspend) {\n+    return _queue.peek();\n+  } else {\n+    return _queue.peek(no_suspend_filter);\n+  }\n+}\n@@ -444,0 +454,5 @@\n+bool HandshakeState::has_a_non_suspend_operation() {\n+  MutexLocker ml(&_lock, Mutex::_no_safepoint_check_flag);\n+  return _queue.contains(no_suspend_filter);\n+}\n+\n@@ -457,1 +472,1 @@\n-bool HandshakeState::process_by_self() {\n+bool HandshakeState::process_by_self(bool allow_suspend) {\n@@ -462,0 +477,1 @@\n+\n@@ -463,8 +479,4 @@\n-  {\n-    \/\/ Handshakes cannot safely safepoint.\n-    \/\/ The exception to this rule is the asynchronous suspension handshake.\n-    \/\/ It by-passes the NSV by manually doing the transition.\n-    NoSafepointVerifier nsv;\n-    return process_self_inner();\n-  }\n-}\n+  \/\/ Handshakes cannot safely safepoint.\n+  \/\/ The exception to this rule is the asynchronous suspension handshake.\n+  \/\/ It by-passes the NSV by manually doing the transition.\n+  NoSafepointVerifier nsv;\n@@ -472,1 +484,0 @@\n-bool HandshakeState::process_self_inner() {\n@@ -475,1 +486,2 @@\n-    HandshakeOperation* op = get_op_for_self();\n+\n+    HandshakeOperation* op = get_op_for_self(allow_suspend);\n@@ -603,1 +615,2 @@\n-  JavaThreadState jts = _handshakee->thread_state();\n+  assert(_handshakee->thread_state() == _thread_blocked, \"Caller should have transitioned to _thread_blocked\");\n+\n@@ -605,1 +618,0 @@\n-    _handshakee->set_thread_state(_thread_blocked);\n@@ -609,2 +621,0 @@\n-  _handshakee->set_thread_state(jts);\n-  set_async_suspend_handshake(false);\n@@ -622,0 +632,3 @@\n+    JavaThreadState jts = current->thread_state();\n+\n+    current->set_thread_state(_thread_blocked);\n@@ -623,0 +636,2 @@\n+    current->set_thread_state(jts);\n+    current->handshake_state()->set_async_suspend_handshake(false);\n@@ -624,0 +639,1 @@\n+  virtual bool is_suspend() { return true; }\n@@ -670,3 +686,14 @@\n-  SuspendThreadHandshake st;\n-  Handshake::execute(&st, _handshakee);\n-  return st.did_suspend();\n+  JavaThread* self = JavaThread::current();\n+  if (_handshakee == self) {\n+    \/\/ If target is the current thread we can bypass the handshake machinery\n+    \/\/ and just suspend directly\n+    ThreadBlockInVM tbivm(self);\n+    MutexLocker ml(&_lock, Mutex::_no_safepoint_check_flag);\n+    set_suspended(true);\n+    do_self_suspend();\n+    return true;\n+  } else {\n+    SuspendThreadHandshake st;\n+    Handshake::execute(&st, _handshakee);\n+    return st.did_suspend();\n+  }\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":48,"deletions":21,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+  virtual bool is_suspend()                        { return false; }\n@@ -95,7 +96,0 @@\n-  \/\/ Returns false if the JavaThread finished all its handshake operations.\n-  \/\/ If the method returns true there is still potential work to be done,\n-  \/\/ but we need to check for a safepoint before.\n-  \/\/ (This is due to a suspension handshake which put the JavaThread in blocked\n-  \/\/ state so a safepoint may be in-progress.)\n-  bool process_self_inner();\n-\n@@ -103,1 +97,1 @@\n-  HandshakeOperation* get_op_for_self();\n+  HandshakeOperation* get_op_for_self(bool allow_suspend);\n@@ -126,0 +120,1 @@\n+  bool has_a_non_suspend_operation();\n@@ -129,1 +124,4 @@\n-  bool process_by_self();\n+  \/\/ If the method returns true we need to check for a possible safepoint.\n+  \/\/ This is due to a suspension handshake which put the JavaThread in blocked\n+  \/\/ state so a safepoint may be in-progress.\n+  bool process_by_self(bool allow_suspend);\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-void chunkpool_init();\n@@ -107,1 +106,0 @@\n-  chunkpool_init();\n","filename":"src\/hotspot\/share\/runtime\/init.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-template <typename PRE_PROC>\n+template <typename PRE_PROC = void(JavaThread*)>\n@@ -246,0 +246,1 @@\n+  bool _allow_suspend;\n@@ -247,1 +248,2 @@\n-  ThreadBlockInVMPreprocess(JavaThread* thread, PRE_PROC& pr) : ThreadStateTransition(thread), _pr(pr) {\n+  ThreadBlockInVMPreprocess(JavaThread* thread, PRE_PROC& pr = emptyOp, bool allow_suspend = false)\n+    : ThreadStateTransition(thread), _pr(pr), _allow_suspend(allow_suspend) {\n@@ -260,1 +262,1 @@\n-    if (SafepointMechanism::should_process(_thread)) {\n+    if (SafepointMechanism::should_process(_thread, _allow_suspend)) {\n@@ -262,1 +264,1 @@\n-      SafepointMechanism::process_if_requested(_thread);\n+      SafepointMechanism::process_if_requested(_thread, _allow_suspend);\n@@ -267,1 +269,0 @@\n-};\n@@ -269,11 +270,1 @@\n-class InFlightMutexRelease {\n- private:\n-  Mutex** _in_flight_mutex_addr;\n- public:\n-  InFlightMutexRelease(Mutex** in_flight_mutex_addr) : _in_flight_mutex_addr(in_flight_mutex_addr) {}\n-  void operator()(JavaThread* current) {\n-    if (_in_flight_mutex_addr != NULL && *_in_flight_mutex_addr != NULL) {\n-      (*_in_flight_mutex_addr)->release_for_safepoint();\n-      *_in_flight_mutex_addr = NULL;\n-    }\n-  }\n+  static void emptyOp(JavaThread* current) {}\n@@ -282,12 +273,2 @@\n-\/\/ Parameter in_flight_mutex_addr is only used by class Mutex to avoid certain deadlock\n-\/\/ scenarios while making transitions that might block for a safepoint or handshake.\n-\/\/ It's the address of a pointer to the mutex we are trying to acquire. This will be used to\n-\/\/ access and release said mutex when transitioning back from blocked to vm (destructor) in\n-\/\/ case we need to stop for a safepoint or handshake.\n-class ThreadBlockInVM {\n-  InFlightMutexRelease _ifmr;\n-  ThreadBlockInVMPreprocess<InFlightMutexRelease> _tbivmpp;\n- public:\n-  ThreadBlockInVM(JavaThread* thread, Mutex** in_flight_mutex_addr = NULL)\n-    : _ifmr(in_flight_mutex_addr), _tbivmpp(thread, _ifmr) {}\n-};\n+typedef ThreadBlockInVMPreprocess<> ThreadBlockInVM;\n+\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":9,"deletions":28,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+class ProgrammableUpcallHandler;\n+class ZeroFrame;\n@@ -55,0 +57,1 @@\n+friend class ProgrammableUpcallHandler;\n","filename":"src\/hotspot\/share\/runtime\/javaFrameAnchor.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,14 @@\n+class InFlightMutexRelease {\n+ private:\n+  Mutex* _in_flight_mutex;\n+ public:\n+  InFlightMutexRelease(Mutex* in_flight_mutex) : _in_flight_mutex(in_flight_mutex) {\n+    assert(in_flight_mutex != NULL, \"must be\");\n+  }\n+  void operator()(JavaThread* current) {\n+    _in_flight_mutex->release_for_safepoint();\n+    _in_flight_mutex = NULL;\n+  }\n+  bool not_released() { return _in_flight_mutex != NULL; }\n+};\n+\n@@ -75,1 +89,0 @@\n-  Mutex *in_flight_mutex = NULL;\n@@ -87,0 +100,1 @@\n+      InFlightMutexRelease ifmr(this);\n@@ -88,2 +102,2 @@\n-      { ThreadBlockInVM tbivmdc(JavaThread::cast(self), &in_flight_mutex);\n-        in_flight_mutex = this;  \/\/ save for ~ThreadBlockInVM\n+      {\n+        ThreadBlockInVMPreprocess<InFlightMutexRelease> tbivmdc(JavaThread::cast(self), ifmr);\n@@ -92,2 +106,2 @@\n-      if (in_flight_mutex != NULL) {\n-        \/\/ Not unlocked by ~ThreadBlockInVM\n+      if (ifmr.not_released()) {\n+        \/\/ Not unlocked by ~ThreadBlockInVMPreprocess\n@@ -237,1 +251,1 @@\n-  Mutex* in_flight_mutex = NULL;\n+  InFlightMutexRelease ifmr(this);\n@@ -240,1 +254,1 @@\n-    ThreadBlockInVM tbivmdc(self, &in_flight_mutex);\n+    ThreadBlockInVMPreprocess<InFlightMutexRelease> tbivmdc(self, ifmr);\n@@ -244,1 +258,0 @@\n-    in_flight_mutex = this;  \/\/ save for ~ThreadBlockInVM\n@@ -247,2 +260,2 @@\n-  if (in_flight_mutex != NULL) {\n-    \/\/ Not unlocked by ~ThreadBlockInVM\n+  if (ifmr.not_released()) {\n+    \/\/ Not unlocked by ~ThreadBlockInVMPreprocess\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+Monitor* ClassInitError_lock          = NULL;\n@@ -259,0 +260,1 @@\n+  def(ClassInitError_lock          , PaddedMonitor, leaf+1,      true,  _safepoint_check_always);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+extern Monitor* ClassInitError_lock;             \/\/ a lock on the class initialization error table\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -433,1 +433,1 @@\n-        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivs(current, eos);\n+        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivs(current, eos, true \/* allow_suspend *\/);\n@@ -978,1 +978,1 @@\n-        ThreadBlockInVMPreprocess<ClearSuccOnSuspend> tbivs(current, csos);\n+        ThreadBlockInVMPreprocess<ClearSuccOnSuspend> tbivs(current, csos, true \/* allow_suspend *\/);\n@@ -1539,1 +1539,1 @@\n-      ThreadBlockInVMPreprocess<ClearSuccOnSuspend> tbivs(current, csos);\n+      ThreadBlockInVMPreprocess<ClearSuccOnSuspend> tbivs(current, csos, true \/* allow_suspend *\/);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/vm_version.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/orderAccess.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+#include \"services\/nmtPreInit.hpp\"\n@@ -649,0 +650,9 @@\n+#if INCLUDE_NMT\n+  {\n+    void* rc = NULL;\n+    if (NMTPreInit::handle_malloc(&rc, size)) {\n+      return rc;\n+    }\n+  }\n+#endif\n+\n@@ -708,0 +718,9 @@\n+#if INCLUDE_NMT\n+  {\n+    void* rc = NULL;\n+    if (NMTPreInit::handle_realloc(&rc, memblock, size)) {\n+      return rc;\n+    }\n+  }\n+#endif\n+\n@@ -758,0 +777,7 @@\n+\n+#if INCLUDE_NMT\n+  if (NMTPreInit::handle_free(memblock)) {\n+    return;\n+  }\n+#endif\n+\n@@ -992,1 +1018,3 @@\n-        st->print_cr(\"%s\", envvar);\n+        st->print(\"%s\", envvar);\n+        \/\/ Use separate cr() printing to avoid unnecessary buffer operations that might cause truncation.\n+        st->cr();\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -280,1 +280,2 @@\n-                                _all->length(), _sampled->length(), _constants->length());\n+                                _all->length(), _sampled == NULL ? 0 : _sampled->length(),\n+                                _constants == NULL ? 0 : _constants->length());\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -708,0 +708,1 @@\n+  assert(is_a_block_safe_state(state), \"Illegal threadstate encountered: %d\", state);\n@@ -711,10 +712,0 @@\n-  \/\/ Check that we have a valid thread_state at this point\n-  switch(state) {\n-    case _thread_in_vm_trans:\n-    case _thread_in_Java:        \/\/ From compiled code\n-    case _thread_in_native_trans:\n-    case _thread_blocked_trans:\n-    case _thread_new_trans:\n-\n-      \/\/ We have no idea where the VMThread is, it might even be at next safepoint.\n-      \/\/ So we can miss this poll, but stop at next.\n@@ -722,2 +713,2 @@\n-      \/\/ Load dependent store, it must not pass loading of safepoint_id.\n-      thread->safepoint_state()->set_safepoint_id(safepoint_id); \/\/ Release store\n+  \/\/ We have no idea where the VMThread is, it might even be at next safepoint.\n+  \/\/ So we can miss this poll, but stop at next.\n@@ -725,4 +716,2 @@\n-      \/\/ This part we can skip if we notice we miss or are in a future safepoint.\n-      OrderAccess::storestore();\n-      \/\/ Load in wait barrier should not float up\n-      thread->set_thread_state_fence(_thread_blocked);\n+  \/\/ Load dependent store, it must not pass loading of safepoint_id.\n+  thread->safepoint_state()->set_safepoint_id(safepoint_id); \/\/ Release store\n@@ -730,2 +719,4 @@\n-      _wait_barrier->wait(static_cast<int>(safepoint_id));\n-      assert(_state != _synchronized, \"Can't be\");\n+  \/\/ This part we can skip if we notice we miss or are in a future safepoint.\n+  OrderAccess::storestore();\n+  \/\/ Load in wait barrier should not float up\n+  thread->set_thread_state_fence(_thread_blocked);\n@@ -733,3 +724,2 @@\n-      \/\/ If barrier is disarmed stop store from floating above loads in barrier.\n-      OrderAccess::loadstore();\n-      thread->set_thread_state(state);\n+  _wait_barrier->wait(static_cast<int>(safepoint_id));\n+  assert(_state != _synchronized, \"Can't be\");\n@@ -737,2 +727,3 @@\n-      \/\/ Then we reset the safepoint id to inactive.\n-      thread->safepoint_state()->reset_safepoint_id(); \/\/ Release store\n+  \/\/ If barrier is disarmed stop store from floating above loads in barrier.\n+  OrderAccess::loadstore();\n+  thread->set_thread_state(state);\n@@ -740,1 +731,2 @@\n-      OrderAccess::fence();\n+  \/\/ Then we reset the safepoint id to inactive.\n+  thread->safepoint_state()->reset_safepoint_id(); \/\/ Release store\n@@ -742,1 +734,1 @@\n-      break;\n+  OrderAccess::fence();\n@@ -744,3 +736,0 @@\n-    default:\n-     fatal(\"Illegal threadstate encountered: %d\", state);\n-  }\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":17,"deletions":28,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -129,0 +129,13 @@\n+  static bool is_a_block_safe_state(JavaThreadState state) {\n+    \/\/ Check that we have a valid thread_state before blocking for safepoints\n+    switch(state) {\n+      case _thread_in_vm_trans:\n+      case _thread_in_Java:        \/\/ From compiled code\n+      case _thread_in_native_trans:\n+      case _thread_blocked_trans:\n+      case _thread_new_trans:\n+        return true;\n+      default:\n+        return false;\n+    }\n+  }\n","filename":"src\/hotspot\/share\/runtime\/safepoint.hpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -79,23 +79,0 @@\n-void SafepointMechanism::process(JavaThread *thread) {\n-  bool need_rechecking;\n-  do {\n-    if (global_poll()) {\n-      \/\/ Any load in ::block() must not pass the global poll load.\n-      \/\/ Otherwise we might load an old safepoint counter (for example).\n-      OrderAccess::loadload();\n-      SafepointSynchronize::block(thread);\n-    }\n-\n-    \/\/ The call to on_safepoint fixes the thread's oops and the first few frames.\n-    \/\/\n-    \/\/ The call has been carefully placed here to cater to a few situations:\n-    \/\/ 1) After we exit from block after a global poll\n-    \/\/ 2) After a thread races with the disarming of the global poll and transitions from native\/blocked\n-    \/\/ 3) Before the handshake code is run\n-    StackWatermarkSet::on_safepoint(thread);\n-\n-    need_rechecking = thread->handshake_state()->has_operation() && thread->handshake_state()->process_by_self();\n-\n-  } while (need_rechecking);\n-}\n-\n@@ -137,1 +114,1 @@\n-void SafepointMechanism::process_if_requested_slow(JavaThread *thread) {\n+void SafepointMechanism::process(JavaThread *thread, bool allow_suspend) {\n@@ -142,1 +119,22 @@\n-  process(thread);\n+  bool need_rechecking;\n+  do {\n+    JavaThreadState state = thread->thread_state();\n+    guarantee(SafepointSynchronize::is_a_block_safe_state(state), \"Illegal threadstate encountered: %d\", state);\n+    if (global_poll()) {\n+      \/\/ Any load in ::block() must not pass the global poll load.\n+      \/\/ Otherwise we might load an old safepoint counter (for example).\n+      OrderAccess::loadload();\n+      SafepointSynchronize::block(thread);\n+    }\n+\n+    \/\/ The call to on_safepoint fixes the thread's oops and the first few frames.\n+    \/\/\n+    \/\/ The call has been carefully placed here to cater to a few situations:\n+    \/\/ 1) After we exit from block after a global poll\n+    \/\/ 2) After a thread races with the disarming of the global poll and transitions from native\/blocked\n+    \/\/ 3) Before the handshake code is run\n+    StackWatermarkSet::on_safepoint(thread);\n+\n+    need_rechecking = thread->handshake_state()->has_operation() && thread->handshake_state()->process_by_self(allow_suspend);\n+  } while (need_rechecking);\n+\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.cpp","additions":23,"deletions":25,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -53,2 +53,3 @@\n-  static void process(JavaThread *thread);\n-  static void process_if_requested_slow(JavaThread *thread);\n+  static void process(JavaThread *thread, bool allow_suspend);\n+\n+  static inline bool should_process_no_suspend(JavaThread* thread);\n@@ -63,1 +64,1 @@\n-public:\n+ public:\n@@ -82,1 +83,1 @@\n-  static inline bool should_process(JavaThread* thread);\n+  static inline bool should_process(JavaThread* thread, bool allow_suspend = true);\n@@ -85,1 +86,1 @@\n-  static inline void process_if_requested(JavaThread* thread);\n+  static inline void process_if_requested(JavaThread* thread, bool allow_suspend = true);\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"runtime\/handshake.hpp\"\n@@ -64,2 +65,20 @@\n-bool SafepointMechanism::should_process(JavaThread* thread) {\n-  return local_poll_armed(thread);\n+bool SafepointMechanism::should_process_no_suspend(JavaThread* thread) {\n+  if (global_poll() || thread->handshake_state()->has_a_non_suspend_operation()) {\n+    return true;\n+  } else {\n+    \/\/ We ignore suspend requests if any and just check before returning if we need\n+    \/\/ to fix the thread's oops and first few frames due to a possible safepoint.\n+    StackWatermarkSet::on_safepoint(thread);\n+    update_poll_values(thread);\n+    OrderAccess::cross_modify_fence();\n+    return false;\n+  }\n+}\n+\n+bool SafepointMechanism::should_process(JavaThread* thread, bool allow_suspend) {\n+  if (!local_poll_armed(thread)) {\n+    return false;\n+  } else if (allow_suspend) {\n+    return true;\n+  }\n+  return should_process_no_suspend(thread);\n@@ -68,1 +87,1 @@\n-void SafepointMechanism::process_if_requested(JavaThread* thread) {\n+void SafepointMechanism::process_if_requested(JavaThread* thread, bool allow_suspend) {\n@@ -80,1 +99,1 @@\n-    process_if_requested_slow(thread);\n+    process(thread, allow_suspend);\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.inline.hpp","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -684,1 +684,1 @@\n-  markWord mark = obj->mark();\n+  markWord mark = obj->mark_acquire();\n@@ -691,1 +691,1 @@\n-    markWord mark = obj->mark();\n+    markWord mark = obj->mark_acquire();\n@@ -725,1 +725,1 @@\n-        while (obj->mark() == markWord::INFLATING()) {\n+        while (obj->mark_acquire() == markWord::INFLATING()) {\n@@ -1105,1 +1105,1 @@\n-  markWord mark = obj->mark();\n+  markWord mark = obj->mark_acquire();\n@@ -1120,1 +1120,1 @@\n-    const markWord mark = object->mark();\n+    const markWord mark = object->mark_acquire();\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  ~PeriodicTask();\n+  virtual ~PeriodicTask();\n","filename":"src\/hotspot\/share\/runtime\/task.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,0 @@\n-#include \"runtime\/prefetch.inline.hpp\"\n@@ -858,1 +857,1 @@\n-  for (JavaThreadIteratorWithHandle jtiwh; JavaThread *tp = jtiwh.next(); ) {\n+  for (JavaThread* tp : ThreadsListHandle()) {\n@@ -919,1 +918,1 @@\n-    for (JavaThreadIteratorWithHandle jtiwh; JavaThread *tp = jtiwh.next(); ) {\n+    for (JavaThread* tp : ThreadsListHandle()) {\n@@ -1932,0 +1931,9 @@\n+#ifdef ASSERT\n+void JavaThread::verify_frame_info() {\n+  assert((!has_last_Java_frame() && java_call_counter() == 0) ||\n+         (has_last_Java_frame() && java_call_counter() > 0),\n+         \"unexpected frame info: has_last_frame=%s, java_call_counter=%d\",\n+         has_last_Java_frame() ? \"true\" : \"false\", java_call_counter());\n+}\n+#endif\n+\n@@ -1939,2 +1947,1 @@\n-  assert((!has_last_Java_frame() && java_call_counter() == 0) ||\n-         (has_last_Java_frame() && java_call_counter() > 0), \"wrong java_sp info!\");\n+  DEBUG_ONLY(verify_frame_info();)\n@@ -1988,4 +1995,1 @@\n-  assert((!has_last_Java_frame() && java_call_counter() == 0) ||\n-         (has_last_Java_frame() && java_call_counter() > 0),\n-         \"unexpected frame info: has_last_frame=%d, java_call_counter=%d\",\n-         has_last_Java_frame(), java_call_counter());\n+  verify_frame_info();\n@@ -1996,4 +2000,1 @@\n-  assert((!has_last_Java_frame() && java_call_counter() == 0) ||\n-         (has_last_Java_frame() && java_call_counter() > 0),\n-         \"unexpected frame info: has_last_frame=%d, java_call_counter=%d\",\n-         has_last_Java_frame(), java_call_counter());\n+  DEBUG_ONLY(verify_frame_info();)\n@@ -2479,22 +2480,0 @@\n-static inline void *prefetch_and_load_ptr(void **addr, intx prefetch_interval) {\n-  Prefetch::read((void*)addr, prefetch_interval);\n-  return *addr;\n-}\n-\n-\/\/ Possibly the ugliest for loop the world has seen. C++ does not allow\n-\/\/ multiple types in the declaration section of the for loop. In this case\n-\/\/ we are only dealing with pointers and hence can cast them. It looks ugly\n-\/\/ but macros are ugly and therefore it's fine to make things absurdly ugly.\n-#define DO_JAVA_THREADS(LIST, X)                                                                                          \\\n-    for (JavaThread *MACRO_scan_interval = (JavaThread*)(uintptr_t)PrefetchScanIntervalInBytes,                           \\\n-             *MACRO_list = (JavaThread*)(LIST),                                                                           \\\n-             **MACRO_end = ((JavaThread**)((ThreadsList*)MACRO_list)->threads()) + ((ThreadsList*)MACRO_list)->length(),  \\\n-             **MACRO_current_p = (JavaThread**)((ThreadsList*)MACRO_list)->threads(),                                     \\\n-             *X = (JavaThread*)prefetch_and_load_ptr((void**)MACRO_current_p, (intx)MACRO_scan_interval);                 \\\n-         MACRO_current_p != MACRO_end;                                                                                    \\\n-         MACRO_current_p++,                                                                                               \\\n-             X = (JavaThread*)prefetch_and_load_ptr((void**)MACRO_current_p, (intx)MACRO_scan_interval))\n-\n-\/\/ All JavaThreads\n-#define ALL_JAVA_THREADS(X) DO_JAVA_THREADS(ThreadsSMRSupport::get_java_thread_list(), X)\n-\n@@ -2509,0 +2488,4 @@\n+\/\/ All JavaThreads\n+#define ALL_JAVA_THREADS(X) \\\n+  for (JavaThread* X : *ThreadsSMRSupport::get_java_thread_list())\n+\n@@ -2727,0 +2710,5 @@\n+#if INCLUDE_NMT\n+  \/\/ Initialize NMT right after argument parsing to keep the pre-NMT-init window small.\n+  MemTracker::initialize();\n+#endif \/\/ INCLUDE_NMT\n+\n@@ -3642,1 +3630,1 @@\n-  DO_JAVA_THREADS(t_list, p) {\n+  for (JavaThread* p : *t_list) {\n@@ -3663,1 +3651,1 @@\n-  DO_JAVA_THREADS(t_list, p) {\n+  for (JavaThread* p : *t_list) {\n@@ -3678,1 +3666,1 @@\n-  DO_JAVA_THREADS(t_list, q) {\n+  for (JavaThread* q : *t_list) {\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":26,"deletions":38,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -1129,0 +1129,2 @@\n+  DEBUG_ONLY(void verify_frame_info();)\n+\n@@ -1430,0 +1432,3 @@\n+  \/\/ Returns the current thread as a JavaThread, or NULL if not attached\n+  static inline JavaThread* current_or_null();\n+\n@@ -1614,0 +1619,5 @@\n+inline JavaThread* JavaThread::current_or_null() {\n+  Thread* current = Thread::current_or_null();\n+  return current != nullptr ? JavaThread::cast(current) : nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -186,4 +187,0 @@\n-  static bool ptr_equals(void * const& s1, void * const& s2) {\n-    return s1 == s2;\n-  }\n-\n@@ -197,3 +194,3 @@\n-  typedef ResourceHashtable<void *, int, &ThreadScanHashtable::ptr_hash,\n-                            &ThreadScanHashtable::ptr_equals, 1031,\n-                            ResourceObj::C_HEAP, mtThread> PtrTable;\n+  typedef ResourceHashtable<void *, int, 1031,\n+                            ResourceObj::C_HEAP, mtThread,\n+                            &ThreadScanHashtable::ptr_hash> PtrTable;\n@@ -636,0 +633,23 @@\n+#ifdef ASSERT\n+\n+ThreadsList::Iterator::Iterator() : _thread_ptr(nullptr), _list(nullptr) {}\n+\n+uint ThreadsList::Iterator::check_index(ThreadsList* list, uint i) {\n+  assert(i <= list->length(), \"invalid index %u\", i);\n+  return i;\n+}\n+\n+void ThreadsList::Iterator::assert_not_singular() const {\n+  assert(_list != nullptr, \"singular iterator\");\n+}\n+\n+void ThreadsList::Iterator::assert_dereferenceable() const {\n+  assert(_thread_ptr < (_list->threads() + _list->length()), \"not dereferenceable\");\n+}\n+\n+void ThreadsList::Iterator::assert_same_list(Iterator i) const {\n+  assert(_list == i._list, \"iterators from different lists\");\n+}\n+\n+#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -195,0 +196,4 @@\n+  class Iterator;\n+  inline Iterator begin();\n+  inline Iterator end();\n+\n@@ -214,0 +219,23 @@\n+class ThreadsList::Iterator {\n+  JavaThread* const* _thread_ptr;\n+  DEBUG_ONLY(ThreadsList* _list;)\n+\n+  static uint check_index(ThreadsList* list, uint i) NOT_DEBUG({ return i; });\n+  void assert_not_singular() const NOT_DEBUG_RETURN;\n+  void assert_dereferenceable() const NOT_DEBUG_RETURN;\n+  void assert_same_list(Iterator i) const NOT_DEBUG_RETURN;\n+\n+public:\n+  Iterator() NOT_DEBUG(= default); \/\/ Singular iterator.\n+  inline Iterator(ThreadsList* list, uint i);\n+\n+  inline bool operator==(Iterator other) const;\n+  inline bool operator!=(Iterator other) const;\n+\n+  inline JavaThread* operator*() const;\n+  inline JavaThread* operator->() const;\n+\n+  inline Iterator& operator++();\n+  inline Iterator operator++(int);\n+};\n+\n@@ -303,0 +331,4 @@\n+  using Iterator = ThreadsList::Iterator;\n+  inline Iterator begin();\n+  inline Iterator end();\n+\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.hpp","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -36,0 +36,51 @@\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+ThreadsList::Iterator::Iterator(ThreadsList* list, uint i) :\n+  _thread_ptr(list->threads() + check_index(list, i))\n+  DEBUG_ONLY(COMMA _list(list))\n+{}\n+\n+bool ThreadsList::Iterator::operator==(Iterator i) const {\n+  assert_not_singular();\n+  assert_same_list(i);\n+  return _thread_ptr == i._thread_ptr;\n+}\n+\n+bool ThreadsList::Iterator::operator!=(Iterator i) const {\n+  return !operator==(i);\n+}\n+\n+JavaThread* ThreadsList::Iterator::operator*() const {\n+  assert_not_singular();\n+  assert_dereferenceable();\n+  Prefetch::read(const_cast<JavaThread**>(_thread_ptr), PrefetchScanIntervalInBytes);\n+  return *_thread_ptr;\n+}\n+\n+JavaThread* ThreadsList::Iterator::operator->() const {\n+  return operator*();\n+}\n+\n+ThreadsList::Iterator& ThreadsList::Iterator::operator++() {\n+  assert_not_singular();\n+  assert_dereferenceable();\n+  ++_thread_ptr;\n+  return *this;\n+}\n+\n+ThreadsList::Iterator ThreadsList::Iterator::operator++(int) {\n+  assert_not_singular();\n+  assert_dereferenceable();\n+  Iterator result = *this;\n+  ++_thread_ptr;\n+  return result;\n+}\n+\n+ThreadsList::Iterator ThreadsList::begin() {\n+  return Iterator(this, 0);\n+}\n+\n+ThreadsList::Iterator ThreadsList::end() {\n+  return Iterator(this, length());\n+}\n@@ -59,0 +110,3 @@\n+ThreadsListHandle::Iterator ThreadsListHandle::begin() { return list()->begin(); }\n+ThreadsListHandle::Iterator ThreadsListHandle::end() { return list()->end(); }\n+\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.inline.hpp","additions":54,"deletions":0,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -577,1 +577,6 @@\n-    assert(_frame.is_compiled_frame() || _frame.is_native_frame(), \"expected compiled Java frame\");\n+    compiledVFrame* cvf;\n+    if (_frame.is_native_frame()) {\n+      cvf = compiledVFrame::cast(vframe::new_vframe(&_frame, &_reg_map, _thread));\n+      assert(cvf->cb() == cb(), \"wrong code blob\");\n+    } else {\n+      assert(_frame.is_compiled_frame(), \"expected compiled Java frame\");\n@@ -579,4 +584,4 @@\n-    \/\/ lazy update to register map\n-    bool update_map = true;\n-    RegisterMap map(_thread, update_map);\n-    frame f = _prev_frame.sender(&map);\n+      \/\/ lazy update to register map\n+      bool update_map = true;\n+      RegisterMap map(_thread, update_map);\n+      frame f = _prev_frame.sender(&map);\n@@ -584,1 +589,1 @@\n-    assert(f.is_compiled_frame() || f.is_native_frame(), \"expected compiled Java frame\");\n+      assert(f.is_compiled_frame(), \"expected compiled Java frame\");\n@@ -586,1 +591,1 @@\n-    compiledVFrame* cvf = compiledVFrame::cast(vframe::new_vframe(&f, &map, _thread));\n+      cvf = compiledVFrame::cast(vframe::new_vframe(&f, &map, _thread));\n@@ -588,1 +593,1 @@\n-    assert(cvf->cb() == cb(), \"wrong code blob\");\n+      assert(cvf->cb() == cb(), \"wrong code blob\");\n@@ -590,4 +595,0 @@\n-    if (cvf->scope() == NULL) {\n-      \/\/ native nmethods have no scope\n-      assert(f.is_native_frame(), \"expected native frame\");\n-    } else {\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -63,2 +63,2 @@\n-      fatal(\"VM operation took too long: \" JLONG_FORMAT \" ms (timeout: \" INTX_FORMAT \" ms)\",\n-            delay, AbortVMOnVMOperationTimeoutDelay);\n+      fatal(\"%s VM operation took too long: \" JLONG_FORMAT \" ms elapsed since VM-op start (timeout: \" INTX_FORMAT \" ms)\",\n+            _vm_op_name, delay, AbortVMOnVMOperationTimeoutDelay);\n@@ -73,1 +73,2 @@\n-void VMOperationTimeoutTask::arm() {\n+void VMOperationTimeoutTask::arm(const char* vm_op_name) {\n+  _vm_op_name = vm_op_name;\n@@ -80,0 +81,13 @@\n+\n+  \/\/ The two stores to `_armed` are counted in VM-op, but they should be\n+  \/\/ insignificant compared to the actual VM-op duration.\n+  jlong vm_op_duration = nanos_to_millis(os::javaTimeNanos() - _arm_time);\n+\n+  \/\/ Repeat the timeout-check logic on the VM thread, because\n+  \/\/ VMOperationTimeoutTask might miss the arm-disarm window depending on\n+  \/\/ the scheduling.\n+  if (vm_op_duration > AbortVMOnVMOperationTimeoutDelay) {\n+    fatal(\"%s VM operation took too long: completed in \" JLONG_FORMAT \" ms (timeout: \" INTX_FORMAT \" ms)\",\n+          _vm_op_name, vm_op_duration, AbortVMOnVMOperationTimeoutDelay);\n+  }\n+  _vm_op_name = nullptr;\n@@ -406,0 +420,1 @@\n+  bool has_timeout_task = (_timeout_task != nullptr);\n@@ -409,2 +424,2 @@\n-    if (_timeout_task != NULL) {\n-      _timeout_task->arm();\n+    if (has_timeout_task) {\n+      _timeout_task->arm(_cur_vm_operation->name());\n@@ -418,1 +433,1 @@\n-    if (_timeout_task != NULL) {\n+    if (has_timeout_task) {\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-\n+  const char* _vm_op_name;\n@@ -45,1 +45,1 @@\n-          PeriodicTask(interval_time), _armed(0), _arm_time(0) {}\n+          PeriodicTask(interval_time), _armed(0), _arm_time(0), _vm_op_name(nullptr) {}\n@@ -50,1 +50,1 @@\n-  void arm();\n+  void arm(const char* vm_op_name);\n","filename":"src\/hotspot\/share\/runtime\/vmThread.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"runtime\/globals.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/vm_version.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,1 +61,3 @@\n-\n+#ifdef LINUX\n+#include \"trimCHeapDCmd.hpp\"\n+#endif\n@@ -121,0 +123,1 @@\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<TrimCLibcHeapDCmd>(full_export, true, false));\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-    return \"Print a list of all loaded classes, indented to show the class hiearchy. \"\n+    return \"Print a list of all loaded classes, indented to show the class hierarchy. \"\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1308,1 +1308,1 @@\n-  Symbol* sym = load_symbol(p);\n+  Symbol* sym = *p;\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logStream.hpp\"\n@@ -28,0 +30,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -35,0 +38,2 @@\n+#include \"services\/nmtCommon.hpp\"\n+#include \"services\/nmtPreInit.hpp\"\n@@ -48,1 +53,0 @@\n-bool MemTracker::_is_nmt_env_valid = true;\n@@ -50,1 +54,8 @@\n-static const size_t buffer_size = 64;\n+void MemTracker::initialize() {\n+  bool rc = true;\n+  assert(_tracking_level == NMT_unknown, \"only call once\");\n+\n+  NMT_TrackingLevel level = NMTUtil::parse_tracking_level(NativeMemoryTracking);\n+  \/\/ Should have been validated before in arguments.cpp\n+  assert(level == NMT_off || level == NMT_summary || level == NMT_detail,\n+         \"Invalid setting for NativeMemoryTracking (%s)\", NativeMemoryTracking);\n@@ -52,1 +63,0 @@\n-NMT_TrackingLevel MemTracker::init_tracking_level() {\n@@ -57,37 +67,7 @@\n-  char nmt_env_variable[buffer_size];\n-  jio_snprintf(nmt_env_variable, sizeof(nmt_env_variable), \"NMT_LEVEL_%d\", os::current_process_id());\n-  const char* nmt_env_value;\n-#ifdef _WINDOWS\n-  \/\/ Read the NMT environment variable from the PEB instead of the CRT\n-  char value[buffer_size];\n-  nmt_env_value = GetEnvironmentVariable(nmt_env_variable, value, (DWORD)sizeof(value)) != 0 ? value : NULL;\n-#else\n-  nmt_env_value = ::getenv(nmt_env_variable);\n-#endif\n-  NMT_TrackingLevel level = NMT_off;\n-  if (nmt_env_value != NULL) {\n-    if (strcmp(nmt_env_value, \"summary\") == 0) {\n-      level = NMT_summary;\n-    } else if (strcmp(nmt_env_value, \"detail\") == 0) {\n-      level = NMT_detail;\n-    } else if (strcmp(nmt_env_value, \"off\") != 0) {\n-      \/\/ The value of the environment variable is invalid\n-      _is_nmt_env_valid = false;\n-    }\n-    \/\/ Remove the environment variable to avoid leaking to child processes\n-    os::unsetenv(nmt_env_variable);\n-  }\n-\n-  if (!MallocTracker::initialize(level) ||\n-      !VirtualMemoryTracker::initialize(level)) {\n-    level = NMT_off;\n-  }\n-  return level;\n-}\n-\n-void MemTracker::init() {\n-  NMT_TrackingLevel level = tracking_level();\n-  if (level >= NMT_summary) {\n-    if (!VirtualMemoryTracker::late_initialize(level) ||\n-        !ThreadStackTracker::late_initialize(level)) {\n-      shutdown();\n+  if (level > NMT_off) {\n+    if (!MallocTracker::initialize(level) ||\n+        !VirtualMemoryTracker::initialize(level) ||\n+        !ThreadStackTracker::initialize(level)) {\n+      assert(false, \"NMT initialization failed\");\n+      level = NMT_off;\n+      log_warning(nmt)(\"NMT initialization failed. NMT disabled.\");\n@@ -97,1 +77,0 @@\n-}\n@@ -99,16 +78,1 @@\n-bool MemTracker::check_launcher_nmt_support(const char* value) {\n-  if (strcmp(value, \"=detail\") == 0) {\n-    if (MemTracker::tracking_level() != NMT_detail) {\n-      return false;\n-    }\n-  } else if (strcmp(value, \"=summary\") == 0) {\n-    if (MemTracker::tracking_level() != NMT_summary) {\n-      return false;\n-    }\n-  } else if (strcmp(value, \"=off\") == 0) {\n-    if (MemTracker::tracking_level() != NMT_off) {\n-      return false;\n-    }\n-  } else {\n-    _is_nmt_env_valid = false;\n-  }\n+  NMTPreInit::pre_to_post();\n@@ -116,2 +80,1 @@\n-  return true;\n-}\n+  _tracking_level = _cmdline_tracking_level = level;\n@@ -119,2 +82,9 @@\n-bool MemTracker::verify_nmt_option() {\n-  return _is_nmt_env_valid;\n+  \/\/ Log state right after NMT initialization\n+  if (log_is_enabled(Info, nmt)) {\n+    LogTarget(Info, nmt) lt;\n+    LogStream ls(lt);\n+    ls.print_cr(\"NMT initialized: %s\", NMTUtil::tracking_level_to_string(_tracking_level));\n+    ls.print_cr(\"Preinit state: \");\n+    NMTPreInit::print_state(&ls);\n+    ls.cr();\n+  }\n@@ -177,0 +147,2 @@\n+    output->print(\"Preinit state:\");\n+    NMTPreInit::print_state(output);\n@@ -217,0 +189,1 @@\n+  out->print_cr(\"State: %s\", NMTUtil::tracking_level_to_string(_tracking_level));\n@@ -222,0 +195,4 @@\n+  out->cr();\n+  out->print_cr(\"Preinit state:\");\n+  NMTPreInit::print_state(out);\n+  out->cr();\n","filename":"src\/hotspot\/share\/services\/memTracker.cpp","additions":38,"deletions":61,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,0 +118,5 @@\n+  \/\/ Helper; asserts that we are in post-NMT-init phase\n+  static void assert_post_init() {\n+    assert(is_initialized(), \"NMT not yet initialized.\");\n+  }\n+\n@@ -119,0 +124,11 @@\n+\n+  \/\/ Initializes NMT to whatever -XX:NativeMemoryTracking says.\n+  \/\/  - Can only be called once.\n+  \/\/  - NativeMemoryTracking must be validated beforehand.\n+  static void initialize();\n+\n+  \/\/ Returns true if NMT had been initialized.\n+  static bool is_initialized()  {\n+    return _tracking_level != NMT_unknown;\n+  }\n+\n@@ -120,6 +136,0 @@\n-    if (_tracking_level == NMT_unknown) {\n-      \/\/ No fencing is needed here, since JVM is in single-threaded\n-      \/\/ mode.\n-      _tracking_level = init_tracking_level();\n-      _cmdline_tracking_level = _tracking_level;\n-    }\n@@ -129,6 +139,4 @@\n-  \/\/ A late initialization, for the stuff(s) can not be\n-  \/\/ done in init_tracking_level(), which can NOT malloc\n-  \/\/ any memory.\n-  static void init();\n-\n-  \/\/ Shutdown native memory tracking\n+  \/\/ Shutdown native memory tracking.\n+  \/\/ This transitions the tracking level:\n+  \/\/  summary -> minimal\n+  \/\/  detail  -> minimal\n@@ -137,17 +145,0 @@\n-  \/\/ Verify native memory tracking command line option.\n-  \/\/ This check allows JVM to detect if compatible launcher\n-  \/\/ is used.\n-  \/\/ If an incompatible launcher is used, NMT may not be\n-  \/\/ able to start, even it is enabled by command line option.\n-  \/\/ A warning message should be given if it is encountered.\n-  static bool check_launcher_nmt_support(const char* value);\n-\n-  \/\/ This method checks native memory tracking environment\n-  \/\/ variable value passed by launcher.\n-  \/\/ Launcher only obligated to pass native memory tracking\n-  \/\/ option value, but not obligated to validate the value,\n-  \/\/ and launcher has option to discard native memory tracking\n-  \/\/ option from the command line once it sets up the environment\n-  \/\/ variable, so NMT has to catch the bad value here.\n-  static bool verify_nmt_option();\n-\n@@ -210,0 +201,3 @@\n+  \/\/ Note: virtual memory operations should only ever be called after NMT initialization\n+  \/\/  (we do not do any reservations before that).\n+\n@@ -212,0 +206,1 @@\n+    assert_post_init();\n@@ -223,0 +218,1 @@\n+    assert_post_init();\n@@ -234,0 +230,1 @@\n+    assert_post_init();\n@@ -249,0 +246,1 @@\n+    assert_post_init();\n@@ -259,0 +257,1 @@\n+    assert_post_init();\n@@ -268,0 +267,1 @@\n+    assert_post_init();\n@@ -275,0 +275,1 @@\n+    assert_post_init();\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":31,"deletions":30,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -63,0 +63,24 @@\n+const char* NMTUtil::tracking_level_to_string(NMT_TrackingLevel lvl) {\n+  switch(lvl) {\n+    case NMT_unknown: return \"unknown\"; break;\n+    case NMT_off:     return \"off\"; break;\n+    case NMT_minimal: return \"minimal\"; break;\n+    case NMT_summary: return \"summary\"; break;\n+    case NMT_detail:  return \"detail\"; break;\n+    default:          return \"invalid\"; break;\n+  }\n+}\n+\n+\/\/ Returns the parsed level; NMT_unknown if string is invalid\n+NMT_TrackingLevel NMTUtil::parse_tracking_level(const char* s) {\n+  if (s != NULL) {\n+    if (strcmp(s, \"summary\") == 0) {\n+      return NMT_summary;\n+    } else if (strcmp(s, \"detail\") == 0) {\n+      return NMT_detail;\n+    } else if (strcmp(s, \"off\") == 0) {\n+      return NMT_off;\n+    }\n+  }\n+  return NMT_unknown;\n+}\n","filename":"src\/hotspot\/share\/services\/nmtCommon.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -35,0 +35,40 @@\n+\/\/\n+\/\/ The meaning of the different states:\n+\/\/\n+\/\/ \"unknown\": pre-init phase (before parsing NMT arguments)\n+\/\/\n+\/\/ \"off\":     after initialization - NMT confirmed off.\n+\/\/             - nothing is tracked\n+\/\/             - no malloc headers are used\n+\/\/\n+\/\/ \"minimal\": after shutdown - NMT had been on at some point but has been switched off\n+\/\/             - nothing is tracked\n+\/\/             - malloc headers are allocated but not initialized not used\n+\/\/\n+\/\/ \"summary\": after initialization with NativeMemoryTracking=summary - NMT in summary mode\n+\/\/             - category summaries per tag are tracked\n+\/\/             - thread stacks are tracked\n+\/\/             - malloc headers are used\n+\/\/             - malloc call site table is allocated and used\n+\/\/\n+\/\/ \"detail\":  after initialization with NativeMemoryTracking=detail - NMT in detail mode\n+\/\/             - category summaries per tag are tracked\n+\/\/             - malloc details per call site are tracked\n+\/\/             - virtual memory mapping info is tracked\n+\/\/             - thread stacks are tracked\n+\/\/             - malloc headers are used\n+\/\/             - malloc call site table is allocated and used\n+\/\/\n+\/\/ Valid state transitions:\n+\/\/\n+\/\/ unknown ----> off\n+\/\/          |\n+\/\/          |--> summary --\n+\/\/          |              |\n+\/\/          |--> detail  --+--> minimal\n+\/\/\n+\n+\n+\/\/ Please keep relation of numerical values!\n+\/\/ unknown < off < minimal < summary < detail\n+\/\/\n@@ -36,5 +76,5 @@\n-  NMT_unknown = 0xFF,\n-  NMT_off     = 0x00,\n-  NMT_minimal = 0x01,\n-  NMT_summary = 0x02,\n-  NMT_detail  = 0x03\n+  NMT_unknown = 0,\n+  NMT_off     = 1,\n+  NMT_minimal = 2,\n+  NMT_summary = 3,\n+  NMT_detail  = 4\n@@ -86,0 +126,8 @@\n+\n+  \/\/ Parses the tracking level from a string. Returns NMT_unknown if\n+  \/\/ string is not a valid level.\n+  static NMT_TrackingLevel parse_tracking_level(const char* s);\n+\n+  \/\/ Returns textual representation of a tracking level.\n+  static const char* tracking_level_to_string(NMT_TrackingLevel level);\n+\n","filename":"src\/hotspot\/share\/services\/nmtCommon.hpp","additions":53,"deletions":5,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-           \"with memory usage summary by each subsytem.\",\n+           \"with memory usage summary by each subsystem.\",\n","filename":"src\/hotspot\/share\/services\/nmtDCmd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,194 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"services\/nmtPreInit.hpp\"\n+#include \"utilities\/align.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+#if INCLUDE_NMT\n+\n+\/\/ Obviously we cannot use os::malloc for any dynamic allocation during pre-NMT-init, so we must use\n+\/\/ raw malloc; to make this very clear, wrap them.\n+static void* raw_malloc(size_t s)               { return ::malloc(s); }\n+static void* raw_realloc(void* old, size_t s)   { return ::realloc(old, s); }\n+static void  raw_free(void* p)                  { ::free(p); }\n+\n+\/\/ We must ensure that the start of the payload area of the nmt lookup table nodes is malloc-aligned\n+static const size_t malloc_alignment = 2 * sizeof(void*); \/\/ could we use max_align_t?\n+STATIC_ASSERT(is_aligned(sizeof(NMTPreInitAllocation), malloc_alignment));\n+\n+\/\/ --------- NMTPreInitAllocation --------------\n+\n+NMTPreInitAllocation* NMTPreInitAllocation::do_alloc(size_t payload_size) {\n+  const size_t outer_size = sizeof(NMTPreInitAllocation) + payload_size;\n+  void* p = raw_malloc(outer_size);\n+  NMTPreInitAllocation* a = new(p) NMTPreInitAllocation(payload_size);\n+  return a;\n+}\n+\n+NMTPreInitAllocation* NMTPreInitAllocation::do_reallocate(NMTPreInitAllocation* old, size_t new_payload_size) {\n+  assert(old->next == NULL, \"unhang from map first\");\n+  \/\/ We just reallocate the old block, header and all.\n+  const size_t new_outer_size = sizeof(NMTPreInitAllocation) + new_payload_size;\n+  void* p = raw_realloc(old, new_outer_size);\n+  \/\/ re-stamp header with new size\n+  NMTPreInitAllocation* a = new(p) NMTPreInitAllocation(new_payload_size);\n+  return a;\n+}\n+\n+void NMTPreInitAllocation::do_free(NMTPreInitAllocation* p) {\n+  assert(p->next == NULL, \"unhang from map first\");\n+  raw_free(p);\n+}\n+\n+\/\/ --------- NMTPreInitAllocationTable --------------\n+\n+NMTPreInitAllocationTable::NMTPreInitAllocationTable() {\n+  ::memset(_entries, 0, sizeof(_entries));\n+}\n+\n+\/\/ print a string describing the current state\n+void NMTPreInitAllocationTable::print_state(outputStream* st) const {\n+  \/\/ Collect some statistics and print them\n+  int num_entries = 0;\n+  int num_primary_entries = 0;\n+  int longest_chain = 0;\n+  size_t sum_bytes = 0;\n+  for (int i = 0; i < table_size; i++) {\n+    int chain_len = 0;\n+    for (NMTPreInitAllocation* a = _entries[i]; a != NULL; a = a->next) {\n+      chain_len++;\n+      sum_bytes += a->size;\n+    }\n+    if (chain_len > 0) {\n+      num_primary_entries++;\n+    }\n+    num_entries += chain_len;\n+    longest_chain = MAX2(chain_len, longest_chain);\n+  }\n+  st->print(\"entries: %d (primary: %d, empties: %d), sum bytes: \" SIZE_FORMAT\n+            \", longest chain length: %d\",\n+            num_entries, num_primary_entries, table_size - num_primary_entries,\n+            sum_bytes, longest_chain);\n+}\n+\n+#ifdef ASSERT\n+void NMTPreInitAllocationTable::print_map(outputStream* st) const {\n+  for (int i = 0; i < table_size; i++) {\n+    st->print(\"[%d]: \", i);\n+    for (NMTPreInitAllocation* a = _entries[i]; a != NULL; a = a->next) {\n+      st->print( PTR_FORMAT \"(\" SIZE_FORMAT \") \", p2i(a->payload()), a->size);\n+    }\n+    st->cr();\n+  }\n+}\n+\n+void NMTPreInitAllocationTable::verify() const {\n+  \/\/ This verifies the buildup of the lookup table, including the load and the chain lengths.\n+  \/\/ We should see chain lens of 0-1 under normal conditions. Under artificial conditions\n+  \/\/ (20000 VM args) we should see maybe 6-7. From a certain length on we can be sure something\n+  \/\/ is broken.\n+  const int longest_acceptable_chain_len = 30;\n+  int num_chains_too_long = 0;\n+  for (index_t i = 0; i < table_size; i++) {\n+    int len = 0;\n+    for (const NMTPreInitAllocation* a = _entries[i]; a != NULL; a = a->next) {\n+      index_t i2 = index_for_key(a->payload());\n+      assert(i2 == i, \"wrong hash\");\n+      assert(a->size > 0, \"wrong size\");\n+      len++;\n+      \/\/ very paranoid: search for dups\n+      bool found = false;\n+      for (const NMTPreInitAllocation* a2 = _entries[i]; a2 != NULL; a2 = a2->next) {\n+        if (a == a2) {\n+          assert(!found, \"dup!\");\n+          found = true;\n+        }\n+      }\n+    }\n+    if (len > longest_acceptable_chain_len) {\n+      num_chains_too_long++;\n+    }\n+  }\n+  if (num_chains_too_long > 0) {\n+    assert(false, \"NMT preinit lookup table degenerated (%d\/%d chains longer than %d)\",\n+                  num_chains_too_long, table_size, longest_acceptable_chain_len);\n+  }\n+}\n+#endif \/\/ ASSERT\n+\n+\/\/ --------- NMTPreinit --------------\n+\n+NMTPreInitAllocationTable* NMTPreInit::_table = NULL;\n+bool NMTPreInit::_nmt_was_initialized = false;\n+\n+\/\/ Some statistics\n+unsigned NMTPreInit::_num_mallocs_pre = 0;\n+unsigned NMTPreInit::_num_reallocs_pre = 0;\n+unsigned NMTPreInit::_num_frees_pre = 0;\n+\n+void NMTPreInit::create_table() {\n+  assert(_table == NULL, \"just once\");\n+  void* p = raw_malloc(sizeof(NMTPreInitAllocationTable));\n+  _table = new(p) NMTPreInitAllocationTable();\n+}\n+\n+\/\/ Allocate with os::malloc (hidden to prevent having to include os.hpp)\n+void* NMTPreInit::do_os_malloc(size_t size) {\n+  return os::malloc(size, mtNMT);\n+}\n+\n+\/\/ Switches from NMT pre-init state to NMT post-init state;\n+\/\/  in post-init, no modifications to the lookup table are possible.\n+void NMTPreInit::pre_to_post() {\n+  assert(_nmt_was_initialized == false, \"just once\");\n+  _nmt_was_initialized = true;\n+  DEBUG_ONLY(verify();)\n+}\n+\n+#ifdef ASSERT\n+void NMTPreInit::verify() {\n+  if (_table != NULL) {\n+    _table->verify();\n+  }\n+  assert(_num_reallocs_pre <= _num_mallocs_pre &&\n+         _num_frees_pre <= _num_mallocs_pre, \"stats are off\");\n+}\n+#endif \/\/ ASSERT\n+\n+void NMTPreInit::print_state(outputStream* st) {\n+  if (_table != NULL) {\n+    _table->print_state(st);\n+    st->cr();\n+  }\n+  st->print_cr(\"pre-init mallocs: %u, pre-init reallocs: %u, pre-init frees: %u\",\n+               _num_mallocs_pre, _num_reallocs_pre, _num_frees_pre);\n+}\n+\n+#endif \/\/ INCLUDE_NMT\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.cpp","additions":194,"deletions":0,"binary":false,"changes":194,"status":"added"},{"patch":"@@ -0,0 +1,359 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_SERVICES_NMT_PREINIT_HPP\n+#define SHARE_SERVICES_NMT_PREINIT_HPP\n+\n+#include \"memory\/allStatic.hpp\"\n+#ifdef ASSERT\n+#include \"runtime\/atomic.hpp\"\n+#endif\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+#if INCLUDE_NMT\n+\n+class outputStream;\n+\n+\/\/ NMTPreInit is the solution to a specific problem:\n+\/\/\n+\/\/ NMT tracks C-heap allocations (os::malloc and friends). Those can happen at all VM life stages,\n+\/\/ including very early during the dynamic C++ initialization of the hotspot, and in CreateJavaVM\n+\/\/ before argument parsing.\n+\/\/\n+\/\/ However, before the VM parses NMT arguments, we do not know whether NMT is enabled or not. Can we\n+\/\/ just ignore early allocations? If the only problem were statistical correctness, sure: footprint-wise\n+\/\/ they are not really relevant.\n+\/\/\n+\/\/ But there is one big problem: NMT uses malloc headers to keep meta information of malloced blocks.\n+\/\/ We have to consider those in os::free() when calling free(3).\n+\/\/\n+\/\/ So:\n+\/\/ 1) NMT off:\n+\/\/   a) pre-NMT-init allocations have no header\n+\/\/   b) post-NMT-init allocations have no header\n+\/\/ 2) NMT on:\n+\/\/   a) pre-NMT-init allocations have no header\n+\/\/   b) post-NMT-init allocations do have a header\n+\/\/\n+\/\/ The problem is that inside os::free(p), we only get an opaque void* p; we do not know if p had been\n+\/\/ allocated in (a) or (b) phase. Therefore, we do not know if p is preceded by an NMT header which we\n+\/\/ would need to subtract from the pointer before calling free(3). There is no safe way to \"guess\" here\n+\/\/ without risking C-heap corruption.\n+\/\/\n+\/\/ To solve this, we need a way to quickly determine, at os::free(p), whether p was a pre-NMT-init\n+\/\/ allocation. There are several ways to do this, see discussion under JDK-8256844.\n+\/\/\n+\/\/ One of the easiest and most elegant ways is to store early allocation pointers in a lookup table.\n+\/\/ This is what NMTPreInit does.\n+\/\/\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\/\/\n+\/\/ VM initialization wrt NMT:\n+\/\/\n+\/\/---------------------------------------------------------------\n+\/\/-> launcher dlopen's libjvm                           ^\n+\/\/   -> dynamic C++ initialization                      |\n+\/\/           of libjvm                                  |\n+\/\/                                                      |\n+\/\/-> launcher starts new thread (maybe)          NMT pre-init phase : store allocated pointers in lookup table\n+\/\/                                                      |\n+\/\/-> launcher invokes CreateJavaVM                      |\n+\/\/   -> VM initialization before arg parsing            |\n+\/\/   -> VM argument parsing                             v\n+\/\/   -> NMT initialization  -------------------------------------\n+\/\/                                                      ^\n+\/\/   ...                                                |\n+\/\/   -> VM life...                               NMT post-init phase : lookup table is read-only; use it in os::free() and os::realloc().\n+\/\/   ...                                                |\n+\/\/                                                      v\n+\/\/----------------------------------------------------------------\n+\/\/\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\/\/\n+\/\/ Notes:\n+\/\/ - The VM will malloc() and realloc() several thousand times before NMT initialization.\n+\/\/   Starting with a lot of arguments increases this number since argument parsing strdups\n+\/\/   around a lot.\n+\/\/ - However, *surviving* allocations (allocations not freed immediately) are much rarer:\n+\/\/   typically only about 300-500. Again, mainly depending on the number of VM args.\n+\/\/ - There are a few cases of pre-to-post-init reallocs where pre-init allocations get\n+\/\/   reallocated after NMT initialization. Those we need to handle with special care (see\n+\/\/   NMTPreInit::handle_realloc()). Because of them we need to store allocation size with\n+\/\/   every pre-init allocation.\n+\n+\/\/ For the lookup table, design considerations are:\n+\/\/   - lookup speed is paramount since lookup is done for every os::free() call.\n+\/\/   - insert\/delete speed only matters for VM startup - after NMT initialization the lookup\n+\/\/     table is readonly\n+\/\/   - memory consumption of the lookup table matters since we always pay for it, NMT on or off.\n+\/\/   - Obviously, nothing here can use *os::malloc*. Any dynamic allocations - if they cannot\n+\/\/     be avoided - should use raw malloc(3).\n+\/\/\n+\/\/ We use a basic open hashmap, dimensioned generously - hash collisions should be very rare.\n+\/\/   The table is customized for holding malloced pointers. One main point of this map is that we do\n+\/\/   not allocate memory for the nodes themselves. Instead we piggy-back on the user allocation:\n+\/\/   the hashmap entry structure precedes, as a header, the malloced block. That way we avoid extra\n+\/\/   allocations just to hold the map nodes. This keeps runtime\/memory overhead as small as possible.\n+\n+struct NMTPreInitAllocation {\n+  NMTPreInitAllocation* next;\n+  const size_t size; \/\/ (inner) payload size without header\n+  \/\/ <-- USER ALLOCATION (PAYLOAD) STARTS HERE -->\n+\n+  NMTPreInitAllocation(size_t size) : next(NULL), size(size) {};\n+\n+  \/\/ Returns start of the user data area\n+  void* payload()             { return this + 1; }\n+  const void* payload() const { return this + 1; }\n+\n+  \/\/ These functions do raw-malloc\/realloc\/free a C-heap block of given payload size,\n+  \/\/  preceded with a NMTPreInitAllocation header.\n+  static NMTPreInitAllocation* do_alloc(size_t payload_size);\n+  static NMTPreInitAllocation* do_reallocate(NMTPreInitAllocation* old, size_t new_payload_size);\n+  static void do_free(NMTPreInitAllocation* p);\n+};\n+\n+class NMTPreInitAllocationTable {\n+\n+  \/\/ Table_size: keep table size a prime and the hash function simple; this\n+  \/\/  seems to give a good distribution for malloced pointers on all our libc variants.\n+  \/\/ 8000ish is really plenty: normal VM runs have ~500 pre-init allocations to hold,\n+  \/\/  VMs with insanely long command lines maybe ~700-1000. Which gives us an expected\n+  \/\/  load factor of ~.1. Hash collisions should be very rare.\n+  \/\/ ~8000 entries cost us ~64K for this table (64-bit), which is acceptable.\n+  static const int table_size = 7919;\n+\n+  NMTPreInitAllocation* _entries[table_size];\n+\n+  typedef int index_t;\n+  const index_t invalid_index = -1;\n+\n+  static unsigned calculate_hash(const void* p) {\n+    uintptr_t tmp = p2i(p);\n+    unsigned hash = (unsigned)tmp\n+                     LP64_ONLY( ^ (unsigned)(tmp >> 32));\n+    return hash;\n+  }\n+\n+  static index_t index_for_key(const void* p) {\n+    const unsigned hash = calculate_hash(p);\n+    return hash % table_size;\n+  }\n+\n+  const NMTPreInitAllocation* const * find_entry(const void* p) const {\n+    return const_cast<NMTPreInitAllocationTable*>(this)->find_entry(p);\n+  }\n+\n+  NMTPreInitAllocation** find_entry(const void* p) {\n+    const unsigned index = index_for_key(p);\n+    NMTPreInitAllocation** aa = (&(_entries[index]));\n+    while ((*aa) != NULL && (*aa)->payload() != p) {\n+      aa = &((*aa)->next);\n+    }\n+    assert((*aa) == NULL || p == (*aa)->payload(),\n+           \"retrieve mismatch \" PTR_FORMAT \" vs \" PTR_FORMAT \".\",\n+           p2i(p), p2i((*aa)->payload()));\n+    return aa;\n+  }\n+\n+public:\n+\n+  NMTPreInitAllocationTable();\n+\n+  \/\/ Adds an entry to the table\n+  void add(NMTPreInitAllocation* a) {\n+    void* payload = a->payload();\n+    const unsigned index = index_for_key(payload);\n+    assert(a->next == NULL, \"entry already in table?\");\n+    a->next = _entries[index]; \/\/ add to front\n+    _entries[index] = a;        \/\/   of list\n+    assert(find(payload) == a, \"add: reverse lookup error?\");\n+  }\n+\n+  \/\/ Find - but does not remove - an entry in this map.\n+  \/\/ Returns NULL if not found.\n+  const NMTPreInitAllocation* find(const void* p) const {\n+    return *(find_entry(p));\n+  }\n+\n+  \/\/ Find and removes an entry from the table. Asserts if not found.\n+  NMTPreInitAllocation* find_and_remove(void* p) {\n+    NMTPreInitAllocation** aa = find_entry(p);\n+    assert((*aa) != NULL, \"Entry not found: \" PTR_FORMAT, p2i(p));\n+    NMTPreInitAllocation* a = (*aa);\n+    (*aa) = (*aa)->next;         \/\/ remove from its list\n+    DEBUG_ONLY(a->next = NULL;)  \/\/ mark as removed\n+    return a;\n+  }\n+\n+  void print_state(outputStream* st) const;\n+  DEBUG_ONLY(void print_map(outputStream* st) const;)\n+  DEBUG_ONLY(void verify() const;)\n+};\n+\n+\/\/ NMTPreInit is the outside interface to all of NMT preinit handling.\n+class NMTPreInit : public AllStatic {\n+\n+  static NMTPreInitAllocationTable* _table;\n+  static bool _nmt_was_initialized;\n+\n+  \/\/ Some statistics\n+  static unsigned _num_mallocs_pre;           \/\/ Number of pre-init mallocs\n+  static unsigned _num_reallocs_pre;          \/\/ Number of pre-init reallocs\n+  static unsigned _num_frees_pre;             \/\/ Number of pre-init frees\n+\n+  static void create_table();\n+\n+  static void add_to_map(NMTPreInitAllocation* a) {\n+    assert(!_nmt_was_initialized, \"lookup map cannot be modified after NMT initialization\");\n+    \/\/ Only on add, we create the table on demand. Only needed on add, since everything should start\n+    \/\/ with a call to os::malloc().\n+    if (_table == NULL) {\n+      create_table();\n+    }\n+    return _table->add(a);\n+  }\n+\n+  static const NMTPreInitAllocation* find_in_map(void* p) {\n+    assert(_table != NULL, \"stray allocation?\");\n+    return _table->find(p);\n+  }\n+\n+  static NMTPreInitAllocation* find_and_remove_in_map(void* p) {\n+    assert(!_nmt_was_initialized, \"lookup map cannot be modified after NMT initialization\");\n+    assert(_table != NULL, \"stray allocation?\");\n+    return _table->find_and_remove(p);\n+  }\n+\n+  \/\/ Just a wrapper for os::malloc to avoid including os.hpp here.\n+  static void* do_os_malloc(size_t size);\n+\n+public:\n+\n+  \/\/ Switches from NMT pre-init state to NMT post-init state;\n+  \/\/  in post-init, no modifications to the lookup table are possible.\n+  static void pre_to_post();\n+\n+  \/\/ Returns true if we are still in pre-init phase, false if post-init\n+  static bool in_preinit_phase()  { return _nmt_was_initialized == false; }\n+\n+  \/\/ Called from os::malloc.\n+  \/\/ Returns true if allocation was handled here; in that case,\n+  \/\/ *rc contains the return address.\n+  static bool handle_malloc(void** rc, size_t size) {\n+    size = MAX2((size_t)1, size);         \/\/ malloc(0)\n+    if (!_nmt_was_initialized) {\n+      \/\/ pre-NMT-init:\n+      \/\/ Allocate entry and add address to lookup table\n+      NMTPreInitAllocation* a = NMTPreInitAllocation::do_alloc(size);\n+      add_to_map(a);\n+      (*rc) = a->payload();\n+      _num_mallocs_pre++;\n+      return true;\n+    }\n+    return false;\n+  }\n+\n+  \/\/ Called from os::realloc.\n+  \/\/ Returns true if reallocation was handled here; in that case,\n+  \/\/ *rc contains the return address.\n+  static bool handle_realloc(void** rc, void* old_p, size_t new_size) {\n+    if (old_p == NULL) {                  \/\/ realloc(NULL, n)\n+      return handle_malloc(rc, new_size);\n+    }\n+    new_size = MAX2((size_t)1, new_size); \/\/ realloc(.., 0)\n+    if (!_nmt_was_initialized) {\n+      \/\/ pre-NMT-init:\n+      \/\/ - the address must already be in the lookup table\n+      \/\/ - find the old entry, remove from table, reallocate, add to table\n+      NMTPreInitAllocation* a = find_and_remove_in_map(old_p);\n+      a = NMTPreInitAllocation::do_reallocate(a, new_size);\n+      add_to_map(a);\n+      (*rc) = a->payload();\n+      _num_reallocs_pre++;\n+      return true;\n+    } else {\n+      \/\/ post-NMT-init:\n+      \/\/ If the old block was allocated during pre-NMT-init, we must relocate it: the\n+      \/\/  new block must be allocated with \"normal\" os::malloc.\n+      \/\/ We do this by:\n+      \/\/ - look up (but not remove! lu table is read-only here.) the old entry\n+      \/\/ - allocate new memory via os::malloc()\n+      \/\/ - manually copy the old content over\n+      \/\/ - return the new memory\n+      \/\/ - The lu table is readonly so we keep the old address in the table. And we leave\n+      \/\/   the old block allocated too, to prevent the libc from returning the same address\n+      \/\/   and confusing us.\n+      const NMTPreInitAllocation* a = find_in_map(old_p);\n+      if (a != NULL) { \/\/ this was originally a pre-init allocation\n+        void* p_new = do_os_malloc(new_size);\n+        ::memcpy(p_new, a->payload(), MIN2(a->size, new_size));\n+        (*rc) = p_new;\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  \/\/ Called from os::free.\n+  \/\/ Returns true if free was handled here.\n+  static bool handle_free(void* p) {\n+    if (p == NULL) { \/\/ free(NULL)\n+      return true;\n+    }\n+    if (!_nmt_was_initialized) {\n+      \/\/ pre-NMT-init:\n+      \/\/ - the allocation must be in the hash map, since all allocations went through\n+      \/\/   NMTPreInit::handle_malloc()\n+      \/\/ - find the old entry, unhang from map, free it\n+      NMTPreInitAllocation* a = find_and_remove_in_map(p);\n+      NMTPreInitAllocation::do_free(a);\n+      _num_frees_pre++;\n+      return true;\n+    } else {\n+      \/\/ post-NMT-init:\n+      \/\/ - look up (but not remove! lu table is read-only here.) the entry\n+      \/\/ - if found, we do nothing: the lu table is readonly, so we keep the old address\n+      \/\/   in the table. We leave the block allocated to prevent the libc from returning\n+      \/\/   the same address and confusing us.\n+      \/\/ - if not found, we let regular os::free() handle this pointer\n+      if (find_in_map(p) != NULL) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  static void print_state(outputStream* st);\n+  static void print_map(outputStream* st);\n+  DEBUG_ONLY(static void verify();)\n+};\n+\n+#endif \/\/ INCLUDE_NMT\n+\n+#endif \/\/ SHARE_SERVICES_NMT_PREINIT_HPP\n+\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.hpp","additions":359,"deletions":0,"binary":false,"changes":359,"status":"added"},{"patch":"@@ -877,1 +877,4 @@\n-  _thread_status = java_lang_Thread::get_thread_status(threadObj);\n+  \/\/ If thread is still attaching then threadObj will be NULL.\n+  _thread_status = threadObj == NULL ? JavaThreadStatus::NEW\n+                                     : java_lang_Thread::get_thread_status(threadObj);\n+\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-bool ThreadStackTracker::late_initialize(NMT_TrackingLevel level) {\n+bool ThreadStackTracker::initialize(NMT_TrackingLevel level) {\n","filename":"src\/hotspot\/share\/services\/threadStackTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,2 +74,1 @@\n-  \/\/ Late phase initialization\n-  static bool late_initialize(NMT_TrackingLevel level);\n+  static bool initialize(NMT_TrackingLevel level);\n","filename":"src\/hotspot\/share\/services\/threadStackTracker.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -323,0 +323,1 @@\n+  assert(_reserved_regions == NULL, \"only call once\");\n@@ -325,6 +326,0 @@\n-  }\n-  return true;\n-}\n-\n-bool VirtualMemoryTracker::late_initialize(NMT_TrackingLevel level) {\n-  if (level >= NMT_summary) {\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -374,3 +374,0 @@\n-  \/\/ Late phase initialization\n-  static bool late_initialize(NMT_TrackingLevel level);\n-\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    K, V, HASH, EQUALS, ALLOC_TYPE, MEM_TYPE> {\n+    K, V, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS> {\n@@ -85,1 +85,1 @@\n-                                     K, V, HASH, EQUALS, ALLOC_TYPE, MEM_TYPE>;\n+                                     K, V, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS>;\n","filename":"src\/hotspot\/share\/utilities\/resizeableResourceHash.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-    unsigned (*HASH)  (K const&),\n-    bool     (*EQUALS)(K const&, K const&),\n@@ -52,1 +50,3 @@\n-    MEMFLAGS MEM_TYPE\n+    MEMFLAGS MEM_TYPE,\n+    unsigned (*HASH)  (K const&),\n+    bool     (*EQUALS)(K const&, K const&)\n@@ -59,1 +59,6 @@\n-  Node** bucket_at(unsigned index) const {\n+  Node** bucket_at(unsigned index) {\n+    Node** t = table();\n+    return &t[index];\n+  }\n+\n+  const Node* const* bucket_at(unsigned index) const {\n@@ -213,0 +218,26 @@\n+\n+  \/\/ ITER contains bool do_entry(K const&, V const&), which will be\n+  \/\/ called for each entry in the table.  If do_entry() returns true,\n+  \/\/ the entry is deleted.\n+  template<class ITER>\n+  void unlink(ITER* iter) {\n+    const unsigned sz = table_size();\n+    for (unsigned index = 0; index < sz; index++) {\n+      Node** ptr = bucket_at(index);\n+      while (*ptr != NULL) {\n+        Node* node = *ptr;\n+        \/\/ do_entry must clean up the key and value in Node.\n+        bool clean = iter->do_entry(node->_key, node->_value);\n+        if (clean) {\n+          *ptr = node->_next;\n+          if (ALLOC_TYPE == ResourceObj::C_HEAP) {\n+            delete node;\n+          }\n+          _number_of_entries --;\n+        } else {\n+          ptr = &(node->_next);\n+        }\n+      }\n+    }\n+  }\n+\n@@ -235,2 +266,0 @@\n-    unsigned (*HASH)  (K const&)           = primitive_hash<K>,\n-    bool     (*EQUALS)(K const&, K const&) = primitive_equals<K>,\n@@ -239,1 +268,3 @@\n-    MEMFLAGS MEM_TYPE = mtInternal\n+    MEMFLAGS MEM_TYPE = mtInternal,\n+    unsigned (*HASH)  (K const&)           = primitive_hash<K>,\n+    bool     (*EQUALS)(K const&, K const&) = primitive_equals<K>\n@@ -243,1 +274,1 @@\n-    K, V, HASH, EQUALS, ALLOC_TYPE, MEM_TYPE> {\n+    K, V, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS> {\n@@ -247,1 +278,1 @@\n-                                              K, V, HASH, EQUALS, ALLOC_TYPE, MEM_TYPE>() {}\n+                                              K, V, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS>() {}\n","filename":"src\/hotspot\/share\/utilities\/resourceHash.hpp","additions":40,"deletions":9,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -152,0 +152,5 @@\n+    @Override\n+    public long getPidsMax() {\n+        return subsystem.getPidsMax();\n+    }\n+\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupMetrics.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,0 +39,8 @@\n+    public static final String MAX_VAL = \"max\";\n+\n+    public static long limitFromString(String strVal) {\n+        if (strVal == null || MAX_VAL.equals(strVal)) {\n+            return CgroupSubsystem.LONG_RETVAL_UNLIMITED;\n+        }\n+        return Long.parseLong(strVal);\n+    }\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystem.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    private static final String PIDS_CTRL = \"pids\";\n@@ -152,0 +153,1 @@\n+            case PIDS_CTRL:     infos.put(PIDS_CTRL, info); break;\n@@ -254,0 +256,1 @@\n+                    case PIDS_CTRL:\n@@ -305,0 +308,1 @@\n+                        case PIDS_CTRL:\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+    private CgroupV1SubsystemController pids;\n@@ -129,0 +130,9 @@\n+            case \"pids\": {\n+                if (info.getMountRoot() != null && info.getMountPoint() != null) {\n+                    CgroupV1SubsystemController controller = new CgroupV1SubsystemController(info.getMountRoot(), info.getMountPoint());\n+                    controller.setPath(info.getCgroupPath());\n+                    subsystem.setPidsController(controller);\n+                    anyActiveControllers = true;\n+                }\n+                break;\n+            }\n@@ -173,0 +183,4 @@\n+    private void setPidsController(CgroupV1SubsystemController pids) {\n+        this.pids = pids;\n+    }\n+\n@@ -397,0 +411,7 @@\n+    \/*****************************************************************\n+     *  pids subsystem\n+     ****************************************************************\/\n+    public long getPidsMax() {\n+        String pidsMaxStr = CgroupSubsystemController.getStringValue(pids, \"pids.max\");\n+        return CgroupSubsystem.limitFromString(pidsMaxStr);\n+    }\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2021, Red Hat Inc.\n@@ -48,1 +48,0 @@\n-    private static final String MAX_VAL = \"max\";\n@@ -152,8 +151,1 @@\n-        return limitFromString(quota);\n-    }\n-\n-    private long limitFromString(String strVal) {\n-        if (strVal == null || MAX_VAL.equals(strVal)) {\n-            return CgroupSubsystem.LONG_RETVAL_UNLIMITED;\n-        }\n-        return Long.parseLong(strVal);\n+        return CgroupSubsystem.limitFromString(quota);\n@@ -254,1 +246,1 @@\n-        return limitFromString(strVal);\n+        return CgroupSubsystem.limitFromString(strVal);\n@@ -282,1 +274,1 @@\n-        long swapLimit = limitFromString(strVal);\n+        long swapLimit = CgroupSubsystem.limitFromString(strVal);\n@@ -313,1 +305,7 @@\n-        return limitFromString(softLimitStr);\n+        return CgroupSubsystem.limitFromString(softLimitStr);\n+    }\n+\n+    @Override\n+    public long getPidsMax() {\n+        String pidsMaxStr = CgroupSubsystemController.getStringValue(unified, \"pids.max\");\n+        return CgroupSubsystem.limitFromString(pidsMaxStr);\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -204,2 +204,1 @@\n-                Integer num = Integer.valueOf(mode.substring(offset));\n-                numInt = num.intValue();\n+                numInt = Integer.parseInt(mode.substring(offset));\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherCore.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,1 @@\n-                        ((internal[offset+1] & 0xff << 8));\n+                        (((internal[offset+1] & 0xff) << 8));\n","filename":"src\/java.base\/share\/classes\/com\/sun\/security\/ntlm\/NTLM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -357,0 +357,18 @@\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    public long transferTo(OutputStream out) throws IOException {\n+        long transferred = 0L;\n+        if (out instanceof FileOutputStream fos) {\n+            FileChannel fc = getChannel();\n+            long pos = fc.position();\n+            transferred = fc.transferTo(pos, Long.MAX_VALUE, fos.getChannel());\n+            long newPos = pos + transferred;\n+            fc.position(newPos);\n+            if (newPos >= fc.size()) {\n+                return transferred;\n+            }\n+        }\n+        return transferred + super.transferTo(out);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileInputStream.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n- *                 \/\/ Prepend a filter to reject all UNDECIDED results\n+ *                 \/\/ Wrap the filter to reject UNDECIDED results\n@@ -214,1 +214,1 @@\n- *                 \/\/ Prepend the next filter to the thread filter, if any\n+ *                 \/\/ Merge the next filter with the thread filter, if any\n@@ -216,1 +216,1 @@\n- *                 \/\/ Append the filter to reject all UNDECIDED results\n+ *                 \/\/ Wrap the filter to reject UNDECIDED results\n@@ -225,1 +225,1 @@\n- *             \/\/ If there is a stream-specific filter prepend it and a filter to recheck for undecided\n+ *             \/\/ If there is a stream-specific filter wrap it and a filter to recheck for undecided\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputFilter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -356,1 +356,1 @@\n-        return StringUTF16.charAt(value, index);\n+        return StringUTF16.getChar(value, index);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -208,1 +208,1 @@\n-        return b ? \"true\" : \"false\";\n+        return String.valueOf(b);\n@@ -219,0 +219,1 @@\n+    @Override\n@@ -220,1 +221,1 @@\n-        return value ? \"true\" : \"false\";\n+        return String.valueOf(value);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Boolean.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        return Integer.toString((int)b, 10);\n+        return Integer.toString(b);\n@@ -439,0 +439,1 @@\n+    @Override\n@@ -440,1 +441,1 @@\n-        return Integer.toString((int)value);\n+        return Integer.toString(value);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Byte.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -8660,0 +8660,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -235,2 +235,2 @@\n-        return (isInterface() ? \"interface \" : (isPrimitive() ? \"\" : \"class \"))\n-            + getName();\n+        String kind = isInterface() ? \"interface \" : isPrimitive() ? \"\" : \"class \";\n+        return kind.concat(getName());\n@@ -895,1 +895,1 @@\n-        ClassLoader cl = getClassLoader0();\n+        ClassLoader cl = classLoader;\n@@ -1044,1 +1044,1 @@\n-        ClassLoader cl = getClassLoader0();\n+        ClassLoader cl = classLoader;\n@@ -1660,1 +1660,1 @@\n-            return getComponentType().getSimpleName() + \"[]\";\n+            return getComponentType().getSimpleName().concat(\"[]\");\n@@ -1685,1 +1685,1 @@\n-                return cl.getName() + \"[]\".repeat(dimensions);\n+                return cl.getName().concat(\"[]\".repeat(dimensions));\n@@ -1720,1 +1720,1 @@\n-                return canonicalName + \"[]\";\n+                return canonicalName.concat(\"[]\");\n@@ -2826,1 +2826,1 @@\n-            ClassLoader cl = getClassLoader0();\n+            ClassLoader cl = classLoader;\n@@ -2846,1 +2846,1 @@\n-        ClassLoader cl = getClassLoader0();\n+        ClassLoader cl = classLoader;\n@@ -2922,1 +2922,1 @@\n-            ClassLoader cl = getClassLoader0();\n+            ClassLoader cl = classLoader;\n@@ -2935,1 +2935,1 @@\n-        ClassLoader cl = getClassLoader0();\n+        ClassLoader cl = classLoader;\n@@ -3049,1 +3049,1 @@\n-            final ClassLoader cl = getClassLoader0();\n+            final ClassLoader cl = classLoader;\n@@ -3066,1 +3066,1 @@\n-        final ClassLoader cl = getClassLoader0();\n+        final ClassLoader cl = classLoader;\n@@ -3095,1 +3095,1 @@\n-        final ClassLoader cl = subClasses[0].getClassLoader0();\n+        final ClassLoader cl = subClasses[0].classLoader;\n@@ -3720,1 +3720,1 @@\n-        ClassLoader loader = getClassLoader0();\n+        ClassLoader loader = classLoader;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -880,2 +880,1 @@\n-        long bits = doubleToLongBits(value);\n-        return (int)(bits ^ (bits >>> 32));\n+        return Long.hashCode(doubleToLongBits(value));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1416,1 +1416,1 @@\n-        Integer result;\n+        int result;\n@@ -1446,2 +1446,2 @@\n-            result = Integer.valueOf(nm.substring(index), radix);\n-            result = negative ? Integer.valueOf(-result.intValue()) : result;\n+            result = parseInt(nm, index, nm.length(), radix);\n+            result = negative ? -result : result;\n@@ -1454,1 +1454,1 @@\n-            result = Integer.valueOf(constant, radix);\n+            result = parseInt(constant, radix);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1257,1 +1257,1 @@\n-        Long result;\n+        long result;\n@@ -1287,2 +1287,2 @@\n-            result = Long.valueOf(nm.substring(index), radix);\n-            result = negative ? Long.valueOf(-result.longValue()) : result;\n+            result = parseLong(nm, index, nm.length(), radix);\n+            result = negative ? -result : result;\n@@ -1295,1 +1295,1 @@\n-            result = Long.valueOf(constant, radix);\n+            result = parseLong(constant, radix);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -94,7 +94,2 @@\n- * overflow errors need to be detected, the methods {@code addExact},\n- * {@code subtractExact}, {@code multiplyExact}, {@code toIntExact},\n- * {@code incrementExact}, {@code decrementExact} and {@code negateExact}\n- * throw an {@code ArithmeticException} when the results overflow.\n- * For the arithmetic operations divide and absolute value, overflow\n- * occurs only with a specific minimum or maximum value and\n- * should be checked against the minimum or maximum as appropriate.\n+ * overflow errors need to be detected, the methods whose names end with\n+ * {@code Exact} throw an {@code ArithmeticException} when the results overflow.\n@@ -1010,0 +1005,54 @@\n+    \/**\n+     * Returns the quotient of the arguments, throwing an exception if the\n+     * result overflows an {@code int}.  Such overflow occurs in this method if\n+     * {@code x} is {@link Integer#MIN_VALUE} and {@code y} is {@code -1}.\n+     * In contrast, if {@code Integer.MIN_VALUE \/ -1} were evaluated directly,\n+     * the result would be {@code Integer.MIN_VALUE} and no exception would be\n+     * thrown.\n+     * <p>\n+     * If {@code y} is zero, an {@code ArithmeticException} is thrown\n+     * (JLS {@jls 15.17.2}).\n+     *\n+     * @param x the dividend\n+     * @param y the divisor\n+     * @return the quotient {@code x \/ y}\n+     * @throws ArithmeticException if {@code y} is zero or the quotient\n+     * overflows an int\n+     * @jls 15.17.2 Division Operator \/\n+     * @since 18\n+     *\/\n+    public static int divideExact(int x, int y) {\n+        int q = x \/ y;\n+        if ((x & y & q) >= 0) {\n+            return q;\n+        }\n+        throw new ArithmeticException(\"integer overflow\");\n+    }\n+\n+    \/**\n+     * Returns the quotient of the arguments, throwing an exception if the\n+     * result overflows a {@code long}.  Such overflow occurs in this method if\n+     * {@code x} is {@link Long#MIN_VALUE} and {@code y} is {@code -1}.\n+     * In contrast, if {@code Long.MIN_VALUE \/ -1} were evaluated directly,\n+     * the result would be {@code Long.MIN_VALUE} and no exception would be\n+     * thrown.\n+     * <p>\n+     * If {@code y} is zero, an {@code ArithmeticException} is thrown\n+     * (JLS {@jls 15.17.2}).\n+     *\n+     * @param x the dividend\n+     * @param y the divisor\n+     * @return the quotient {@code x \/ y}\n+     * @throws ArithmeticException if {@code y} is zero or the quotient\n+     * overflows a long\n+     * @jls 15.17.2 Division Operator \/\n+     * @since 18\n+     *\/\n+    public static long divideExact(long x, long y) {\n+        long q = x \/ y;\n+        if ((x & y & q) >= 0) {\n+            return q;\n+        }\n+        throw new ArithmeticException(\"long overflow\");\n+    }\n+\n@@ -1201,1 +1250,1 @@\n-     * There is one special case, if the dividend is the\n+     * There is one special case: if the dividend is\n@@ -1210,1 +1259,1 @@\n-     * when the exact result is negative.\n+     * when the exact quotient is not an integer and is negative.\n@@ -1215,3 +1264,5 @@\n-     *   <li>If the signs of the arguments are different,  the quotient is negative and\n-     *       {@code floorDiv} returns the integer less than or equal to the quotient\n-     *       and the {@code \/} operator returns the integer closest to zero.<br>\n+     *   <li>If the signs of the arguments are different, {@code floorDiv}\n+     *       returns the largest integer less than or equal to the quotient\n+     *       while the {@code \/} operator returns the smallest integer greater\n+     *       than or equal to the quotient.\n+     *       They differ if and only if the quotient is not an integer.<br>\n@@ -1244,1 +1295,1 @@\n-     * There is one special case, if the dividend is the\n+     * There is one special case: if the dividend is\n@@ -1253,1 +1304,1 @@\n-     * when the exact result is negative.\n+     * when the exact result is not an integer and is negative.\n@@ -1273,1 +1324,1 @@\n-     * There is one special case, if the dividend is the\n+     * There is one special case: if the dividend is\n@@ -1282,1 +1333,1 @@\n-     * when the exact result is negative.\n+     * when the exact result is not an integer and is negative.\n@@ -1307,2 +1358,2 @@\n-     * The floor modulus is {@code x - (floorDiv(x, y) * y)},\n-     * has the same sign as the divisor {@code y}, and\n+     * The floor modulus is {@code r = x - (floorDiv(x, y) * y)},\n+     * has the same sign as the divisor {@code y} or is zero, and\n@@ -1314,1 +1365,1 @@\n-     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}\n+     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}<\/li>\n@@ -1317,4 +1368,3 @@\n-     * The difference in values between {@code floorMod} and\n-     * the {@code %} operator is due to the difference between\n-     * {@code floorDiv} that returns the integer less than or equal to the quotient\n-     * and the {@code \/} operator that returns the integer closest to zero.\n+     * The difference in values between {@code floorMod} and the {@code %} operator\n+     * is due to the difference between {@code floorDiv} and the {@code \/}\n+     * operator, as detailed in {@linkplain #floorDiv(int, int)}.\n@@ -1324,2 +1374,4 @@\n-     *   <li>If the signs of the arguments are the same, the results\n-     *       of {@code floorMod} and the {@code %} operator are the same.<br>\n+     *   <li>Regardless of the signs of the arguments, {@code floorMod}(x, y)\n+     *       is zero exactly when {@code x % y} is zero as well.<\/li>\n+     *   <li>If neither of {@code floorMod}(x, y) or {@code x % y} is zero,\n+     *       their results differ exactly when the signs of the arguments differ.<br>\n@@ -1329,4 +1381,0 @@\n-     *       <\/ul>\n-     *   <li>If the signs of the arguments are different, the results\n-     *       differ from the {@code %} operator.<br>\n-     *       <ul>\n@@ -1338,3 +1386,0 @@\n-     * <p>\n-     * If the signs of arguments are unknown and a positive modulus\n-     * is needed it can be computed as {@code (floorMod(x, y) + abs(y)) % abs(y)}.\n@@ -1352,1 +1397,1 @@\n-        if ((mod ^ y) < 0 && mod != 0) {\n+        if ((x ^ y) < 0 && mod != 0) {\n@@ -1361,2 +1406,2 @@\n-     * The floor modulus is {@code x - (floorDiv(x, y) * y)},\n-     * has the same sign as the divisor {@code y}, and\n+     * The floor modulus is {@code r = x - (floorDiv(x, y) * y)},\n+     * has the same sign as the divisor {@code y} or is zero, and\n@@ -1368,1 +1413,1 @@\n-     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}\n+     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}<\/li>\n@@ -1388,2 +1433,2 @@\n-     * The floor modulus is {@code x - (floorDiv(x, y) * y)},\n-     * has the same sign as the divisor {@code y}, and\n+     * The floor modulus is {@code r = x - (floorDiv(x, y) * y)},\n+     * has the same sign as the divisor {@code y} or is zero, and\n@@ -1395,1 +1440,1 @@\n-     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}\n+     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}<\/li>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Math.java","additions":84,"deletions":39,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        return Integer.toString((int)s, 10);\n+        return Integer.toString(s);\n@@ -444,0 +444,1 @@\n+    @Override\n@@ -445,1 +446,1 @@\n-        return Integer.toString((int)value);\n+        return Integer.toString(value);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Short.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -69,7 +69,2 @@\n- * overflow errors need to be detected, the methods {@code addExact},\n- * {@code subtractExact}, {@code multiplyExact}, {@code toIntExact},\n- * {@code incrementExact}, {@code decrementExact} and {@code negateExact}\n- * throw an {@code ArithmeticException} when the results overflow.\n- * For the arithmetic operations divide and absolute value, overflow\n- * occurs only with a specific minimum or maximum value and\n- * should be checked against the minimum or maximum as appropriate.\n+ * overflow errors need to be detected, the methods whose names end with\n+ * {@code Exact} throw an {@code ArithmeticException} when the results overflow.\n@@ -861,0 +856,48 @@\n+    \/**\n+     * Returns the quotient of the arguments, throwing an exception if the\n+     * result overflows an {@code int}.  Such overflow occurs in this method if\n+     * {@code x} is {@link Integer#MIN_VALUE} and {@code y} is {@code -1}.\n+     * In contrast, if {@code Integer.MIN_VALUE \/ -1} were evaluated directly,\n+     * the result would be {@code Integer.MIN_VALUE} and no exception would be\n+     * thrown.\n+     * <p>\n+     * If {@code y} is zero, an {@code ArithmeticException} is thrown\n+     * (JLS {@jls 15.17.2}).\n+     *\n+     * @param x the dividend\n+     * @param y the divisor\n+     * @return the quotient {@code x \/ y}\n+     * @throws ArithmeticException if {@code y} is zero or the quotient\n+     * overflows an int\n+     * @jls 15.17.2 Division Operator \/\n+     * @see Math#divideExact(int,int)\n+     * @since 18\n+     *\/\n+    public static int divideExact(int x, int y) {\n+        return Math.divideExact(x, y);\n+    }\n+\n+    \/**\n+     * Returns the quotient of the arguments, throwing an exception if the\n+     * result overflows a {@code long}.  Such overflow occurs in this method if\n+     * {@code x} is {@link Long#MIN_VALUE} and {@code y} is {@code -1}.\n+     * In contrast, if {@code Long.MIN_VALUE \/ -1} were evaluated directly,\n+     * the result would be {@code Long.MIN_VALUE} and no exception would be\n+     * thrown.\n+     * <p>\n+     * If {@code y} is zero, an {@code ArithmeticException} is thrown\n+     * (JLS {@jls 15.17.2}).\n+     *\n+     * @param x the dividend\n+     * @param y the divisor\n+     * @return the quotient {@code x \/ y}\n+     * @throws ArithmeticException if {@code y} is zero or the quotient\n+     * overflows a long\n+     * @jls 15.17.2 Division Operator \/\n+     * @see Math#divideExact(long,long)\n+     * @since 18\n+     *\/\n+    public static long divideExact(long x, long y) {\n+        return Math.divideExact(x, y);\n+    }\n+\n@@ -1011,1 +1054,1 @@\n-     * There is one special case, if the dividend is the\n+     * There is one special case: if the dividend is\n@@ -1014,1 +1057,1 @@\n-     * the result is equal to the {@code Integer.MIN_VALUE}.\n+     * the result is equal to {@code Integer.MIN_VALUE}.\n@@ -1035,1 +1078,1 @@\n-     * There is one special case, if the dividend is the\n+     * There is one special case: if the dividend is\n@@ -1059,1 +1102,1 @@\n-     * There is one special case, if the dividend is the\n+     * There is one special case: if the dividend is\n@@ -1062,1 +1105,1 @@\n-     * the result is equal to the {@code Long.MIN_VALUE}.\n+     * the result is equal to {@code Long.MIN_VALUE}.\n@@ -1083,2 +1126,2 @@\n-     * The floor modulus is {@code x - (floorDiv(x, y) * y)},\n-     * has the same sign as the divisor {@code y}, and\n+     * The floor modulus is {@code r = x - (floorDiv(x, y) * y)},\n+     * has the same sign as the divisor {@code y} or is zero, and\n@@ -1086,0 +1129,1 @@\n+     *\n@@ -1089,1 +1133,1 @@\n-     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}\n+     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}<\/li>\n@@ -1110,2 +1154,2 @@\n-     * The floor modulus is {@code x - (floorDiv(x, y) * y)},\n-     * has the same sign as the divisor {@code y}, and\n+     * The floor modulus is {@code r = x - (floorDiv(x, y) * y)},\n+     * has the same sign as the divisor {@code y} or is zero, and\n@@ -1117,1 +1161,1 @@\n-     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}\n+     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}<\/li>\n@@ -1138,2 +1182,2 @@\n-     * The floor modulus is {@code x - (floorDiv(x, y) * y)},\n-     * has the same sign as the divisor {@code y}, and\n+     * The floor modulus is {@code r = x - (floorDiv(x, y) * y)},\n+     * has the same sign as the divisor {@code y} or is zero, and\n@@ -1141,0 +1185,1 @@\n+     *\n@@ -1144,1 +1189,1 @@\n-     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}\n+     *   <li>{@code floorDiv(x, y) * y + floorMod(x, y) == x}<\/li>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StrictMath.java","additions":66,"deletions":21,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Objects;\n@@ -34,1 +33,0 @@\n-import java.util.stream.IntStream;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -420,4 +420,0 @@\n-        \/* checkAccess regardless of whether or not threadgroup is\n-           explicitly passed in. *\/\n-        g.checkAccess();\n-\n@@ -428,0 +424,4 @@\n+            \/* checkAccess regardless of whether or not threadgroup is\n+               explicitly passed in. *\/\n+            security.checkAccess(g);\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * be applicable are specified in JLS 9.6.4.1, and denoted in source code by\n+ * be applicable are specified in JLS {@jls 9.6.4.1}, and denoted in source code by\n@@ -36,1 +36,1 @@\n- * a modifier for any declaration except a type parameter declaration.\n+ * a modifier for any declaration.\n@@ -40,1 +40,1 @@\n- * enum constants, in line with JLS 9.7.4.\n+ * enum constants, in line with JLS {@jls 9.7.4}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Target.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -624,1 +624,1 @@\n-            cw.visit(V1_6, NOT_ACC_PUBLIC + ACC_FINAL + ACC_SUPER, className, null, superClassName, null);\n+            cw.visit(CLASSFILE_VERSION, NOT_ACC_PUBLIC + ACC_FINAL + ACC_SUPER, className, null, superClassName, null);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import static java.lang.invoke.MethodHandleStatics.CLASSFILE_VERSION;\n@@ -507,1 +508,1 @@\n-        cw.visit(Opcodes.V1_8, Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER,\n+        cw.visit(CLASSFILE_VERSION, Opcodes.ACC_PRIVATE + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.internal.misc.VM;\n@@ -59,1 +60,1 @@\n-    private static final int CLASSFILE_VERSION = 59;\n+    private static final int CLASSFILE_VERSION = VM.classFileVersion();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-        cw.visit(Opcodes.V1_8, NOT_ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER,\n+        cw.visit(CLASSFILE_VERSION, NOT_ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1159,1 +1159,1 @@\n-            cw.visit(52, ACC_PRIVATE | ACC_SUPER, \"InjectedInvoker\", null, \"java\/lang\/Object\", null);\n+            cw.visit(CLASSFILE_VERSION, ACC_PRIVATE | ACC_SUPER, \"InjectedInvoker\", null, \"java\/lang\/Object\", null);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import jdk.internal.misc.VM;\n@@ -49,0 +50,1 @@\n+    static final int CLASSFILE_VERSION = VM.classFileVersion();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleStatics.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-        if (sm != null) sm.checkPermission(ACCESS_PERMISSION);\n+        if (sm != null) sm.checkPermission(SecurityConstants.ACCESS_PERMISSION);\n@@ -446,1 +446,1 @@\n-        if (smgr != null)  smgr.checkPermission(ACCESS_PERMISSION);\n+        if (smgr != null)  smgr.checkPermission(SecurityConstants.ACCESS_PERMISSION);\n@@ -450,3 +450,0 @@\n-    \/\/ Copied from AccessibleObject, as used by Method.setAccessible, etc.:\n-    private static final java.security.Permission ACCESS_PERMISSION =\n-        new ReflectPermission(\"suppressAccessChecks\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2450,1 +2450,1 @@\n-     * a packager finder is not used to find additional packages when the\n+     * a package finder is not used to find additional packages when the\n@@ -2519,1 +2519,1 @@\n-     * packager finder is not used to find additional packages when the module\n+     * package finder is not used to find additional packages when the module\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -72,0 +72,4 @@\n+    boolean refersToImpl(T obj) {\n+        return refersTo0(obj);\n+    }\n+\n@@ -73,1 +77,1 @@\n-    native final boolean refersTo0(Object o);\n+    private native boolean refersTo0(Object o);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/PhantomReference.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -366,1 +366,1 @@\n-        return refersTo0(obj);\n+        return refersToImpl(obj);\n@@ -370,0 +370,3 @@\n+     * This method exists only to avoid making refersTo0() virtual. Making\n+     * refersTo0() virtual has the undesirable effect of C2 often preferring\n+     * to call the native implementation over the intrinsic.\n@@ -371,0 +374,4 @@\n+    boolean refersToImpl(T obj) {\n+        return refersTo0(obj);\n+    }\n+\n@@ -372,1 +379,1 @@\n-    native boolean refersTo0(Object o);\n+    private native boolean refersTo0(Object o);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -530,1 +530,1 @@\n-                    throw new InternalError(\"ununamed module: \" + m);\n+                    throw new InternalError(\"unnamed module: \" + m);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import jdk.internal.misc.VM;\n@@ -43,1 +44,0 @@\n-import java.util.LinkedList;\n@@ -58,1 +58,1 @@\n-\n+    private static final int CLASSFILE_VERSION = VM.classFileVersion();\n@@ -247,1 +247,1 @@\n-        LinkedList<Class<?>> uncoveredReturnTypes = new LinkedList<>();\n+        List<Class<?>> uncoveredReturnTypes = new ArrayList<>(1);\n@@ -458,1 +458,1 @@\n-        visit(V14, accessFlags, dotToSlash(className), null,\n+        visit(CLASSFILE_VERSION, accessFlags, dotToSlash(className), null,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2109,0 +2109,1 @@\n+        oddPart.clear();\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,4 +29,0 @@\n-import java.io.InputStream;\n-import java.io.File;\n-import java.io.OutputStream;\n-import java.util.Hashtable;\n@@ -35,1 +31,0 @@\n-import sun.net.www.ParseUtil;\n@@ -161,2 +156,1 @@\n-                if (limit > queryStart)\n-                    limit = queryStart;\n+                limit = queryStart;\n@@ -167,1 +161,1 @@\n-        int i = 0;\n+        int i;\n@@ -252,1 +246,1 @@\n-            if (authority != null && !authority.isEmpty())\n+            if (!authority.isEmpty())\n@@ -262,0 +256,1 @@\n+            String specStr = spec.substring(start, limit);\n@@ -263,1 +258,1 @@\n-                path = spec.substring(start, limit);\n+                path = specStr;\n@@ -267,6 +262,5 @@\n-                String separator = \"\";\n-                if (ind == -1 && authority != null)\n-                    separator = \"\/\";\n-                path = path.substring(0, ind + 1) + separator +\n-                         spec.substring(start, limit);\n-\n+                if (ind == -1 && authority != null) {\n+                    path = \"\/\".concat(specStr);\n+                } else {\n+                    path = path.substring(0, ind + 1).concat(specStr);\n+                }\n@@ -274,2 +268,1 @@\n-                path = spec.substring(start, limit);\n-                path = (authority != null) ? \"\/\" + path : path;\n+                path = (authority != null) ? \"\/\".concat(specStr) : specStr;\n@@ -279,3 +272,5 @@\n-            if (ind < 0)\n-                ind = 0;\n-            path = path.substring(0, ind) + \"\/\";\n+            if (ind < 0) {\n+                path = \"\/\";\n+            } else {\n+                path = path.substring(0, ind + 1);\n+            }\n@@ -302,1 +297,1 @@\n-                    path = path.substring(0, limit) + path.substring(i + 3);\n+                    path = path.substring(0, limit).concat(path.substring(i + 3));\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLStreamHandler.java","additions":17,"deletions":22,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -416,1 +416,1 @@\n-     * Path}\"{@code foo\/bar}\" with the {@code String} \"{@code bar\/}\" returns\n+     * Path} \"{@code foo\/bar}\" with the {@code String} \"{@code bar\/}\" returns\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -656,8 +656,1 @@\n-        Object[] candidatesArray = candidates.toArray();\n-        Provider[] result = new Provider[candidatesArray.length];\n-\n-        for (int i = 0; i < result.length; i++) {\n-            result[i] = (Provider)candidatesArray[i];\n-        }\n-\n-        return result;\n+        return candidates.toArray(new Provider[0]);\n","filename":"src\/java.base\/share\/classes\/java\/security\/Security.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -585,0 +585,14 @@\n+    \/**\n+     * Checks if this duration is positive, excluding zero.\n+     * <p>\n+     * A {@code Duration} represents a directed distance between two points on\n+     * the time-line and can therefore be positive, zero or negative.\n+     * This method checks whether the length is greater than zero.\n+     *\n+     * @return true if this duration has a total length greater than zero\n+     * @since 18\n+     *\/\n+    public boolean isPositive() {\n+        return (seconds | nanos) > 0;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1599,2 +1599,1 @@\n-        long nod = toNanoOfDay();\n-        return (int) (nod ^ (nod >>> 32));\n+        return Long.hashCode(toNanoOfDay());\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-        return (int) (hash ^ (hash >>> 32));\n+        return Long.hashCode(hash);\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/ValueRange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -433,1 +433,4 @@\n-     * Reads the state from the stream.\n+     * Reads the state from the stream. The 1,024 limit to the lengths\n+     * of stdTrans and savSize is intended to be the size well enough\n+     * to accommodate the max number of transitions in current tzdb data\n+     * (203 for Asia\/Tehran).\n@@ -441,0 +444,3 @@\n+        if (stdSize > 1024) {\n+            throw new InvalidObjectException(\"Too many transitions\");\n+        }\n@@ -451,0 +457,3 @@\n+        if (savSize > 1024) {\n+            throw new InvalidObjectException(\"Too many saving offsets\");\n+        }\n@@ -461,0 +470,3 @@\n+        if (ruleSize > 16) {\n+            throw new InvalidObjectException(\"Too many transition rules\");\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneRules.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2891,1 +2891,1 @@\n-                    List<Locale> bokmalList = new LinkedList<>();\n+                    List<Locale> bokmalList = new ArrayList<>();\n@@ -2931,1 +2931,1 @@\n-                    variants = new LinkedList<>();\n+                    variants = new ArrayList<>();\n@@ -2939,1 +2939,1 @@\n-                List<Locale> list = new LinkedList<>();\n+                List<Locale> list = new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/java\/util\/ResourceBundle.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -422,1 +422,7 @@\n-                        jv = new JarVerifier(b);\n+                        if (JUZFA.getManifestNum(this) == 1) {\n+                            jv = new JarVerifier(manEntry.getName(), b);\n+                        } else {\n+                            if (JarVerifier.debug != null) {\n+                                JarVerifier.debug.println(\"Multiple MANIFEST.MF found. Treat JAR file as unsigned\");\n+                            }\n+                        }\n@@ -748,1 +754,1 @@\n-                if (name.equals(MANIFEST_NAME)) {\n+                if (name.equalsIgnoreCase(MANIFEST_NAME)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarFile.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-                jv = new JarVerifier(bytes);\n+                jv = new JarVerifier(e.getName(), bytes);\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,0 +87,3 @@\n+    \/** the manifest name this JarVerifier is created upon *\/\n+    final String manifestName;\n+\n@@ -96,1 +99,2 @@\n-    public JarVerifier(byte rawBytes[]) {\n+    public JarVerifier(String name, byte rawBytes[]) {\n+        manifestName = name;\n@@ -183,1 +187,1 @@\n-        if (!name.equals(JarFile.MANIFEST_NAME)) {\n+        if (!name.equalsIgnoreCase(JarFile.MANIFEST_NAME)) {\n@@ -273,1 +277,2 @@\n-                            sfv.process(sigFileSigners, manifestDigests);\n+                            sfv.process(sigFileSigners, manifestDigests,\n+                                    manifestName);\n@@ -316,1 +321,1 @@\n-                sfv.process(sigFileSigners, manifestDigests);\n+                sfv.process(sigFileSigners, manifestDigests, manifestName);\n@@ -422,3 +427,3 @@\n-        if (sigFileSigners.containsKey(JarFile.MANIFEST_NAME)) {\n-            CodeSigner[] codeSigners = sigFileSigners.remove(JarFile.MANIFEST_NAME);\n-            verifiedSigners.put(JarFile.MANIFEST_NAME, codeSigners);\n+        if (sigFileSigners.containsKey(manifestName)) {\n+            CodeSigner[] codeSigners = sigFileSigners.remove(manifestName);\n+            verifiedSigners.put(manifestName, codeSigners);\n@@ -876,1 +881,1 @@\n-        CodeSigner[] forMan = verifiedSigners.get(JarFile.MANIFEST_NAME);\n+        CodeSigner[] forMan = verifiedSigners.get(manifestName);\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarVerifier.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -758,0 +758,8 @@\n+ *    <li><p><i>Free-spacing mode<\/i> in Perl (called <i>comments\n+ *    mode<\/i> in this class) denoted by {@code (?x)} in the regular\n+ *    expression (or by the {@link Pattern#COMMENTS} flag when compiling\n+ *    the expression) will not ignore whitespace inside of character classes. In\n+ *    this class, whitespace inside of character classes must be escaped to be\n+ *    considered as part of the regular expression when in comments mode.\n+ *    <\/p><\/li>\n+ *\n@@ -819,1 +827,3 @@\n-     * with {@code #} are ignored until the end of a line.\n+     * with {@code #} are ignored until the end of a line. Comments mode ignores\n+     * whitespace within a character class contained in a pattern string. Such\n+     * whitespace must be escaped in order to be considered significant.  <\/p>\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/Pattern.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,3 @@\n-            for (int i = 0; i < index; i++) sb.append(' ');\n+            for (int i = 0; i < index; i++) {\n+                sb.append((pattern.charAt(i) == '\\t') ? '\\t' : ' ');\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/PatternSyntaxException.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -72,0 +71,1 @@\n+import sun.nio.fs.DefaultFileSystemProvider;\n@@ -229,0 +229,1 @@\n+        file = new File(name);\n@@ -1035,0 +1036,12 @@\n+    \/**\n+     * Returns the number of the META-INF\/MANIFEST.MF entries, case insensitive.\n+     * When this number is greater than 1, JarVerifier will treat a file as\n+     * unsigned.\n+     *\/\n+    private int getManifestNum() {\n+        synchronized (this) {\n+            ensureOpen();\n+            return res.zsrc.manifestNum;\n+        }\n+    }\n+\n@@ -1082,0 +1095,4 @@\n+                public int getManifestNum(JarFile jar) {\n+                    return ((ZipFile)jar).getManifestNum();\n+                }\n+                @Override\n@@ -1134,0 +1151,1 @@\n+        private int   manifestNum = 0;       \/\/ number of META-INF\/MANIFEST.MF, case insensitive\n@@ -1240,1 +1258,6 @@\n-\n+        \/**\n+         * Use the platform's default file system to avoid\n+         * issues when the VM is configured to use a custom file system provider.\n+         *\/\n+        private static final java.nio.file.FileSystem builtInFS =\n+                DefaultFileSystemProvider.theFileSystem();\n@@ -1246,2 +1269,2 @@\n-                        Files.readAttributes(file.toPath(), BasicFileAttributes.class),\n-                        zc);\n+                        Files.readAttributes(builtInFS.getPath(file.getPath()),\n+                                BasicFileAttributes.class), zc);\n@@ -1316,0 +1339,1 @@\n+            manifestNum = 0;\n@@ -1507,0 +1531,1 @@\n+            manifestNum = 0;\n@@ -1525,0 +1550,1 @@\n+                        manifestNum++;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":30,"deletions":4,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -275,1 +275,2 @@\n-        if (!JceSecurityManager.INSTANCE.isCallerTrusted(provider)) {\n+        if (!JceSecurityManager.INSTANCE.isCallerTrusted(\n+                JceSecurityManager.WALKER.getCallerClass(), provider)) {\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.lang.StackWalker.*;\n@@ -42,2 +43,0 @@\n- * <p>Note that this security manager is never installed, only instantiated.\n- *\n@@ -48,3 +47,1 @@\n-\n-@SuppressWarnings(\"removal\")\n-final class JceSecurityManager extends SecurityManager {\n+final class JceSecurityManager {\n@@ -64,0 +61,1 @@\n+    static final StackWalker WALKER;\n@@ -69,6 +67,13 @@\n-        INSTANCE = AccessController.doPrivileged(\n-                new PrivilegedAction<>() {\n-                    public JceSecurityManager run() {\n-                        return new JceSecurityManager();\n-                    }\n-                });\n+\n+        PrivilegedAction<JceSecurityManager> paSM = JceSecurityManager::new;\n+        @SuppressWarnings(\"removal\")\n+        JceSecurityManager dummySecurityManager =\n+                AccessController.doPrivileged(paSM);\n+        INSTANCE = dummySecurityManager;\n+\n+        PrivilegedAction<StackWalker> paWalker =\n+                () -> StackWalker.getInstance(Option.RETAIN_CLASS_REFERENCE);\n+        @SuppressWarnings(\"removal\")\n+        StackWalker dummyWalker = AccessController.doPrivileged(paWalker);\n+\n+        WALKER = dummyWalker;\n@@ -85,1 +90,2 @@\n-    CryptoPermission getCryptoPermission(String alg) {\n+    CryptoPermission getCryptoPermission(String theAlg) {\n+\n@@ -88,1 +94,1 @@\n-        alg = alg.toUpperCase(Locale.ENGLISH);\n+        final String alg = theAlg.toUpperCase(Locale.ENGLISH);\n@@ -103,21 +109,10 @@\n-        Class<?>[] context = getClassContext();\n-        URL callerCodeBase = null;\n-        int i;\n-        for (i=0; i<context.length; i++) {\n-            Class<?> cls = context[i];\n-            callerCodeBase = JceSecurity.getCodeBase(cls);\n-            if (callerCodeBase != null) {\n-                break;\n-            } else {\n-                if (cls.getName().startsWith(\"javax.crypto.\")) {\n-                    \/\/ skip jce classes since they aren't the callers\n-                    continue;\n-                }\n-                \/\/ use default permission when the caller is system classes\n-                return defaultPerm;\n-            }\n-        }\n-\n-        if (i == context.length) {\n-            return defaultPerm;\n-        }\n+        return WALKER.walk(s -> s.map(StackFrame::getDeclaringClass)\n+                .filter(c -> !c.getPackageName().equals(\"javax.crypto\"))\n+                .map(cls -> {\n+                    URL callerCodeBase = JceSecurity.getCodeBase(cls);\n+                    return (callerCodeBase != null) ?\n+                            getCryptoPermissionFromURL(callerCodeBase,\n+                                    alg, defaultPerm) : defaultPerm;})\n+                .findFirst().get()         \/\/ nulls not possible for Optional\n+        );\n+    }\n@@ -125,0 +120,2 @@\n+    CryptoPermission getCryptoPermissionFromURL(URL callerCodeBase,\n+            String alg, CryptoPermission defaultPerm) {\n@@ -234,1 +231,1 @@\n-    boolean isCallerTrusted(Provider provider) {\n+    boolean isCallerTrusted(Class<?> caller, Provider provider) {\n@@ -236,6 +233,1 @@\n-        Class<?>[] context = getClassContext();\n-        if (context.length >= 3) {\n-            \/\/ context[0]: class javax.crypto.JceSecurityManager\n-            \/\/ context[1]: class javax.crypto.Cipher (or other JCE API class)\n-            \/\/ context[2]: this is what we are gonna check\n-            Class<?> caller = context[2];\n+        if (caller != null) {\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/JceSecurityManager.java","additions":33,"deletions":41,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+    public int getManifestNum(JarFile zip);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaUtilZipFileAccess.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n@@ -486,3 +488,10 @@\n-        nativeLibraryLockMap.compute(libraryName, (name, currentLock) -> {\n-            if (currentLock == null) {\n-                currentLock = new CountedLock();\n+        nativeLibraryLockMap.compute(libraryName,\n+            new BiFunction<>() {\n+                public CountedLock apply(String name, CountedLock currentLock) {\n+                    if (currentLock == null) {\n+                        currentLock = new CountedLock();\n+                    }\n+                    \/\/ safe as compute BiFunction<> is executed atomically\n+                    currentLock.increment();\n+                    return currentLock;\n+                }\n@@ -490,4 +499,1 @@\n-            \/\/ safe as compute lambda is executed atomically\n-            currentLock.increment();\n-            return currentLock;\n-        }).lock();\n+        ).lock();\n@@ -497,9 +503,13 @@\n-        CountedLock lock = nativeLibraryLockMap.computeIfPresent(libraryName, (name, currentLock) -> {\n-            if (currentLock.getCounter() == 1) {\n-                \/\/ unlock and release the object if no other threads are queued\n-                currentLock.unlock();\n-                \/\/ remove the element\n-                return null;\n-            } else {\n-                currentLock.decrement();\n-                return currentLock;\n+        CountedLock lock = nativeLibraryLockMap.computeIfPresent(libraryName,\n+            new BiFunction<>() {\n+                public CountedLock apply(String name, CountedLock currentLock) {\n+                    if (currentLock.getCounter() == 1) {\n+                        \/\/ unlock and release the object if no other threads are queued\n+                        currentLock.unlock();\n+                        \/\/ remove the element\n+                        return null;\n+                    } else {\n+                        currentLock.decrement();\n+                        return currentLock;\n+                    }\n+                }\n@@ -507,1 +517,1 @@\n-        });\n+        );\n@@ -524,1 +534,5 @@\n-                    t -> new ArrayDeque<>(8));\n+                    new Function<>() {\n+                        public Deque<NativeLibraryImpl> apply(Thread t) {\n+                            return new ArrayDeque<>(8);\n+                        }\n+                    });\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/NativeLibraries.java","additions":32,"deletions":18,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-import java.util.LinkedList;\n@@ -222,1 +221,1 @@\n-        List<IOException> result = new LinkedList<>();\n+        List<IOException> result = new ArrayList<>();\n@@ -964,1 +963,1 @@\n-            LinkedList<String> jarFilesList = null;\n+            List<String> jarFilesList;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/URLClassPath.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -154,0 +154,8 @@\n+    \/**\n+     * Returns the class file version of the current release.\n+     * @jvms 4.1 Table 4.1-A. class file format major versions\n+     *\/\n+    public static int classFileVersion() {\n+        return classFileMajorVersion;\n+    }\n+\n@@ -267,2 +275,2 @@\n-            classFileMajorVersion = Integer.valueOf(s.substring(0, index));\n-            classFileMinorVersion = Integer.valueOf(s.substring(index+1, s.length()));\n+            classFileMajorVersion = Integer.parseInt(s.substring(0, index));\n+            classFileMinorVersion = Integer.parseInt(s.substring(index + 1));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -541,0 +541,3 @@\n+                if (attributeLength > classFileBuffer.length - currentAttributeOffset) {\n+                    throw new IllegalArgumentException();\n+                }\n@@ -1551,0 +1554,3 @@\n+        if (codeLength > classFileBuffer.length - currentOffset) {\n+            throw new IllegalArgumentException();\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/ClassReader.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -355,0 +355,13 @@\n+    \/*****************************************************************\n+     * pids subsystem\n+     ****************************************************************\/\n+\n+    \/**\n+     * Returns the maximum number of tasks that may be created in the Isolation Group.\n+     *\n+     * @return The maximum number of tasks, -1 if the quota is unlimited or\n+     *         -2 if not supported.\n+     *\n+     *\/\n+    public long getPidsMax();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/platform\/Metrics.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    private HashMap<String,LinkedList<String>> indexMap;\n+    private final HashMap<String, List<String>> indexMap;\n@@ -61,1 +61,1 @@\n-    private HashMap<String,LinkedList<String>> jarMap;\n+    private final HashMap<String, List<String>> jarMap;\n@@ -135,1 +135,1 @@\n-     * be put in a linked list which is created if necessary.\n+     * be put in a list which is created if necessary.\n@@ -138,2 +138,2 @@\n-                           HashMap<String,LinkedList<String>> t) {\n-        LinkedList<String> list = t.get(key);\n+                           HashMap<String, List<String>> t) {\n+        List<String> list = t.get(key);\n@@ -141,1 +141,1 @@\n-            list = new LinkedList<>();\n+            list = new ArrayList<>(1);\n@@ -154,2 +154,2 @@\n-    public LinkedList<String> get(String fileName) {\n-        LinkedList<String> jarFiles = null;\n+    public List<String> get(String fileName) {\n+        List<String> jarFiles;\n@@ -169,1 +169,1 @@\n-     * specified file before, a new linked list will be created,\n+     * specified file before, a new list will be created,\n@@ -264,1 +264,1 @@\n-                LinkedList<String> jarlist = jarMap.get(jar);\n+                List<String> jarlist = jarMap.get(jar);\n@@ -287,1 +287,1 @@\n-        String line = null;\n+        String line;\n@@ -291,1 +291,1 @@\n-        Vector<String> jars = new Vector<>();\n+        ArrayList<String> jars = new ArrayList<>();\n@@ -323,1 +323,1 @@\n-        Iterator<Map.Entry<String,LinkedList<String>>> itr = indexMap.entrySet().iterator();\n+        Iterator<Map.Entry<String, List<String>>> itr = indexMap.entrySet().iterator();\n@@ -325,1 +325,1 @@\n-            Map.Entry<String,LinkedList<String>> e = itr.next();\n+            Map.Entry<String, List<String>> e = itr.next();\n@@ -327,1 +327,1 @@\n-            LinkedList<String> from_list = e.getValue();\n+            List<String> from_list = e.getValue();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/JarIndex.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -73,0 +73,4 @@\n+    \/\/ Rotate operations\n+    public static final int VECTOR_OP_LROTATE = 22;\n+    public static final int VECTOR_OP_RROTATE = 23;\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -408,0 +408,3 @@\n+        limit = c.getPidsMax();\n+        ostream.println(formatLimitString(limit, INDENT + \"Maximum Processes Limit: \",\n+                                          longRetvalNotSupported, false));\n@@ -412,0 +415,4 @@\n+        return formatLimitString(limit, prefix, unavailable, true);\n+    }\n+\n+    private static String formatLimitString(long limit, String prefix, long unavailable, boolean scale) {\n@@ -413,1 +420,5 @@\n-            return prefix + SizePrefix.scaleValue(limit);\n+            if (scale) {\n+                return prefix + SizePrefix.scaleValue(limit);\n+            } else {\n+                return prefix + limit;\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -27,2 +27,20 @@\n-import java.net.*;\n-import java.io.*;\n+\n+\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n+import java.io.BufferedReader;\n+import java.io.Closeable;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n+import java.io.UnsupportedEncodingException;\n+import java.net.Inet6Address;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.net.SocketAddress;\n@@ -31,0 +49,1 @@\n+import java.security.PrivilegedExceptionAction;\n@@ -37,0 +56,1 @@\n+import java.util.Arrays;\n@@ -47,1 +67,5 @@\n-import sun.net.ftp.*;\n+import sun.net.ftp.FtpDirEntry;\n+import sun.net.ftp.FtpDirParser;\n+import sun.net.ftp.FtpProtocolException;\n+import sun.net.ftp.FtpReplyCode;\n+import sun.net.util.IPAddressUtil;\n@@ -110,1 +134,1 @@\n-\n+    private static final boolean acceptPasvAddressVal;\n@@ -113,0 +137,1 @@\n+        final String acceptPasvAddress[] = {null};\n@@ -117,0 +142,1 @@\n+                        acceptPasvAddress[0] = System.getProperty(\"jdk.net.ftp.trustPasvAddress\", \"false\");\n@@ -147,0 +173,2 @@\n+\n+        acceptPasvAddressVal = Boolean.parseBoolean(acceptPasvAddress[0]);\n@@ -613,1 +641,0 @@\n-\n@@ -625,1 +652,7 @@\n-            dest = new InetSocketAddress(s, port);\n+            if (!IPAddressUtil.isIPv4LiteralAddress(s))\n+                throw new FtpProtocolException(\"PASV failed : \"  + serverAnswer);\n+            if (acceptPasvAddressVal) {\n+                dest = new InetSocketAddress(s, port);\n+            } else {\n+                dest = validatePasvAddress(port, s, server.getInetAddress());\n+            }\n@@ -627,0 +660,1 @@\n+\n@@ -681,0 +715,74 @@\n+    static final String ERROR_MSG = \"Address should be the same as originating server\";\n+\n+    \/**\n+     * Returns an InetSocketAddress, based on value of acceptPasvAddressVal\n+     * and other conditions such as the server address returned by pasv\n+     * is not a hostname, is a socks proxy, or the loopback. An exception\n+     * is thrown if none of the valid conditions are met.\n+     *\/\n+    private InetSocketAddress validatePasvAddress(int port, String s, InetAddress address)\n+        throws FtpProtocolException\n+    {\n+        if (address == null) {\n+            return InetSocketAddress.createUnresolved(serverAddr.getHostName(), port);\n+        }\n+        String serverAddress = address.getHostAddress();\n+        if (serverAddress.equals(s)) {\n+            return new InetSocketAddress(s, port);\n+        } else if (address.isLoopbackAddress() && s.startsWith(\"127.\")) { \/\/ can be 127.0\n+            return new InetSocketAddress(s, port);\n+        } else if (address.isLoopbackAddress()) {\n+            if (privilegedLocalHost().getHostAddress().equals(s)) {\n+                return new InetSocketAddress(s, port);\n+            } else {\n+                throw new FtpProtocolException(ERROR_MSG);\n+            }\n+        } else if (s.startsWith(\"127.\")) {\n+            if (privilegedLocalHost().equals(address)) {\n+                return new InetSocketAddress(s, port);\n+            } else {\n+                throw new FtpProtocolException(ERROR_MSG);\n+            }\n+        }\n+        String hostName = address.getHostName();\n+        if (!(IPAddressUtil.isIPv4LiteralAddress(hostName) || IPAddressUtil.isIPv6LiteralAddress(hostName))) {\n+            InetAddress[] names = privilegedGetAllByName(hostName);\n+            String resAddress = Arrays\n+                .stream(names)\n+                .map(InetAddress::getHostAddress)\n+                .filter(s::equalsIgnoreCase)\n+                .findFirst()\n+                .orElse(null);\n+            if (resAddress != null) {\n+                return new InetSocketAddress(s, port);\n+            }\n+        }\n+        throw new FtpProtocolException(ERROR_MSG);\n+    }\n+\n+    private static InetAddress privilegedLocalHost() throws FtpProtocolException {\n+        PrivilegedExceptionAction<InetAddress> action = InetAddress::getLocalHost;\n+        try {\n+            @SuppressWarnings(\"removal\")\n+            var tmp = AccessController.doPrivileged(action);\n+            return tmp;\n+        } catch (Exception e) {\n+            var ftpEx = new FtpProtocolException(ERROR_MSG);\n+            ftpEx.initCause(e);\n+            throw ftpEx;\n+        }\n+    }\n+\n+    private static InetAddress[] privilegedGetAllByName(String hostName) throws FtpProtocolException {\n+        PrivilegedExceptionAction<InetAddress[]> pAction = () -> InetAddress.getAllByName(hostName);\n+        try {\n+            @SuppressWarnings(\"removal\")\n+            var tmp =AccessController.doPrivileged(pAction);\n+            return tmp;\n+        } catch (Exception e) {\n+            var ftpEx = new FtpProtocolException(ERROR_MSG);\n+            ftpEx.initCause(e);\n+            throw ftpEx;\n+        }\n+    }\n+\n@@ -691,1 +799,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/impl\/FtpClient.java","additions":114,"deletions":7,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.util.ArrayList;\n@@ -45,3 +46,0 @@\n-import java.util.Vector;\n-\n-import javax.security.auth.x500.X500Principal;\n@@ -151,1 +149,1 @@\n-            Vector<String>      v = new Vector<String>();\n+            ArrayList<String>   v = new ArrayList<>();\n@@ -155,1 +153,1 @@\n-                v.addElement(tokenizer.nextToken());\n+                v.add(tokenizer.nextToken());\n@@ -158,1 +156,1 @@\n-                ciphers [i] = v.elementAt(i);\n+                ciphers [i] = v.get(i);\n@@ -175,1 +173,1 @@\n-            Vector<String>      v = new Vector<String>();\n+            ArrayList<String>   v = new ArrayList<>();\n@@ -179,1 +177,1 @@\n-                v.addElement(tokenizer.nextToken());\n+                v.add(tokenizer.nextToken());\n@@ -182,1 +180,1 @@\n-                protocols [i] = v.elementAt(i);\n+                protocols [i] = v.get(i);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/https\/HttpsClient.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,0 +68,3 @@\n+    \/\/ Maximum direct transfer size\n+    private static final int MAX_DIRECT_TRANSFER_SIZE;\n+\n@@ -585,0 +588,9 @@\n+        if (target == this) {\n+            long posThis = position();\n+            if (posThis - count + 1 <= position &&\n+                position - count + 1 <= posThis &&\n+                !nd.canTransferToFromOverlappedMap()) {\n+                return IOStatus.UNSUPPORTED_CASE;\n+            }\n+        }\n+\n@@ -625,1 +637,1 @@\n-    private long transferToArbitraryChannel(long position, int icount,\n+    private long transferToArbitraryChannel(long position, long count,\n@@ -630,1 +642,1 @@\n-        int c = Math.min(icount, TRANSFER_SIZE);\n+        int c = (int)Math.min(count, TRANSFER_SIZE);\n@@ -635,2 +647,2 @@\n-            while (tw < icount) {\n-                bb.limit(Math.min((int)(icount - tw), TRANSFER_SIZE));\n+            while (tw < count) {\n+                bb.limit((int)Math.min(count - tw, TRANSFER_SIZE));\n@@ -675,3 +687,0 @@\n-        int icount = (int)Math.min(count, Integer.MAX_VALUE);\n-        if ((sz - position) < icount)\n-            icount = (int)(sz - position);\n@@ -679,1 +688,2 @@\n-        long n;\n+        if ((sz - position) < count)\n+            count = sz - position;\n@@ -681,1 +691,4 @@\n-        \/\/ Attempt a direct transfer, if the kernel supports it\n+        \/\/ Attempt a direct transfer, if the kernel supports it, limiting\n+        \/\/ the number of bytes according to which platform\n+        int icount = (int)Math.min(count, MAX_DIRECT_TRANSFER_SIZE);\n+        long n;\n@@ -686,1 +699,1 @@\n-        if ((n = transferToTrustedChannel(position, icount, target)) >= 0)\n+        if ((n = transferToTrustedChannel(position, count, target)) >= 0)\n@@ -690,1 +703,1 @@\n-        return transferToArbitraryChannel(position, icount, target);\n+        return transferToArbitraryChannel(position, count, target);\n@@ -703,0 +716,8 @@\n+            if (src == this) {\n+                if (position() - max + 1 <= pos &&\n+                    pos - max + 1 <= position() &&\n+                    !nd.canTransferToFromOverlappedMap()) {\n+                    return IOStatus.UNSUPPORTED_CASE;\n+                }\n+            }\n+\n@@ -778,3 +799,6 @@\n-        if (src instanceof FileChannelImpl)\n-           return transferFromFileChannel((FileChannelImpl)src,\n-                                          position, count);\n+\n+        if (src instanceof FileChannelImpl fci) {\n+            long n = transferFromFileChannel(fci, position, count);\n+            if (n >= 0)\n+                return n;\n+        }\n@@ -1351,0 +1375,3 @@\n+    \/\/ Retrieves the maximum size of a transfer\n+    private static native int maxDirectTransferSize0();\n+\n@@ -1357,0 +1384,1 @@\n+        MAX_DIRECT_TRANSFER_SIZE = maxDirectTransferSize0();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":43,"deletions":15,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,2 @@\n+    abstract boolean canTransferToFromOverlappedMap();\n+\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileDispatcher.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import java.util.LinkedList;\n+import java.util.ArrayList;\n@@ -97,1 +97,1 @@\n-            keys = new LinkedList<>();\n+            keys = new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/MembershipRegistry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-    \/\/ list of requests pending to the poller thread\n-    private final LinkedList<Request> requestList;\n+    \/\/ requests pending to the poller thread\n+    private final ArrayDeque<Request> requests;\n@@ -50,1 +50,1 @@\n-        this.requestList = new LinkedList<>();\n+        this.requests = new ArrayDeque<>();\n@@ -219,1 +219,1 @@\n-        synchronized (requestList) {\n+        synchronized (requests) {\n@@ -223,1 +223,1 @@\n-            requestList.add(req);\n+            requests.add(req);\n@@ -246,1 +246,1 @@\n-        synchronized (requestList) {\n+        synchronized (requests) {\n@@ -248,1 +248,1 @@\n-            while ((req = requestList.poll()) != null) {\n+            while ((req = requests.poll()) != null) {\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/AbstractPoller.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -581,1 +581,1 @@\n-        Vector<SignerInfo> intResult = new Vector<>();\n+        ArrayList<SignerInfo> intResult = new ArrayList<>();\n@@ -586,1 +586,1 @@\n-                intResult.addElement(signerInfo);\n+                intResult.add(signerInfo);\n@@ -592,2 +592,1 @@\n-            intResult.copyInto(result);\n-            return result;\n+            return intResult.toArray(result);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,4 +244,2 @@\n-        Object[] attribVals = attributes.values().toArray();\n-\n-        out.putOrderedSetOf(DerValue.tag_SetOf,\n-                            castToDerEncoder(attribVals));\n+        DerEncoder[] attribVals = attributes.values().toArray(new DerEncoder[0]);\n+        out.putOrderedSetOf(DerValue.tag_SetOf, attribVals);\n@@ -351,13 +349,0 @@\n-    \/**\n-     * Cast an object array whose components are\n-     * <code>DerEncoder<\/code>s to <code>DerEncoder[]<\/code>.\n-     *\/\n-    static DerEncoder[] castToDerEncoder(Object[] objs) {\n-\n-        DerEncoder[] encoders = new DerEncoder[objs.length];\n-\n-        for (int i=0; i < encoders.length; i++)\n-            encoders[i] = (DerEncoder) objs[i];\n-\n-        return encoders;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attributes.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -334,1 +334,12 @@\n-            Timestamp timestamp = getTimestamp();\n+            Timestamp timestamp = null;\n+            try {\n+                timestamp = getTimestamp();\n+            } catch (Exception e) {\n+                \/\/ Log exception and continue. This allows for the case\n+                \/\/ where, if there are no other errors, the code is\n+                \/\/ signed but w\/o a timestamp.\n+                if (debug != null) {\n+                    debug.println(\"Unexpected exception while getting\" +\n+                                  \" timestamp: \" + e);\n+                }\n+            }\n@@ -474,1 +485,1 @@\n-        } catch (IOException | CertificateException e) {\n+        } catch (IOException e) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -190,1 +190,0 @@\n-            nsae.printStackTrace();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAParameterGenerator.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,38 +66,0 @@\n-    \/**\n-     * Return the X509CRLs matching this selector. The selector must be\n-     * an X509CRLSelector with certificateChecking set.\n-     *\/\n-    public static Collection<X509CRL> getCRLs(X509CRLSelector selector,\n-            boolean signFlag, PublicKey prevKey, String provider,\n-            List<CertStore> certStores, boolean[] reasonsMask,\n-            Set<TrustAnchor> trustAnchors, Date validity, String variant)\n-            throws CertStoreException\n-    {\n-        return getCRLs(selector, signFlag, prevKey, null, provider, certStores,\n-                reasonsMask, trustAnchors, validity, variant, null);\n-    }\n-    \/**\n-     * Return the X509CRLs matching this selector. The selector must be\n-     * an X509CRLSelector with certificateChecking set.\n-     *\/\n-    \/\/ Called by com.sun.deploy.security.RevocationChecker\n-    public static Collection<X509CRL> getCRLs(X509CRLSelector selector,\n-                                              boolean signFlag,\n-                                              PublicKey prevKey,\n-                                              String provider,\n-                                              List<CertStore> certStores,\n-                                              boolean[] reasonsMask,\n-                                              Set<TrustAnchor> trustAnchors,\n-                                              Date validity)\n-        throws CertStoreException\n-    {\n-        if (trustAnchors.isEmpty()) {\n-            throw new CertStoreException(\n-                \"at least one TrustAnchor must be specified\");\n-        }\n-        TrustAnchor anchor = trustAnchors.iterator().next();\n-        return getCRLs(selector, signFlag, prevKey, null, provider, certStores,\n-                reasonsMask, trustAnchors, validity,\n-                Validator.VAR_PLUGIN_CODE_SIGNING, anchor);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/DistributionPointFetcher.java","additions":1,"deletions":39,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import java.util.Collections;\n@@ -59,0 +58,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -101,61 +102,0 @@\n-\n-    \/**\n-     * Obtains the revocation status of a certificate using OCSP.\n-     *\n-     * @param cert the certificate to be checked\n-     * @param issuerCert the issuer certificate\n-     * @param responderURI the URI of the OCSP responder\n-     * @param responderCert the OCSP responder's certificate\n-     * @param date the time the validity of the OCSP responder's certificate\n-     *    should be checked against. If null, the current time is used.\n-     * @return the RevocationStatus\n-     * @throws IOException if there is an exception connecting to or\n-     *    communicating with the OCSP responder\n-     * @throws CertPathValidatorException if an exception occurs while\n-     *    encoding the OCSP Request or validating the OCSP Response\n-     *\/\n-\n-    \/\/ Called by com.sun.deploy.security.TrustDecider\n-    public static RevocationStatus check(X509Certificate cert,\n-                                         X509Certificate issuerCert,\n-                                         URI responderURI,\n-                                         X509Certificate responderCert,\n-                                         Date date)\n-        throws IOException, CertPathValidatorException\n-    {\n-        return check(cert, issuerCert, responderURI, responderCert, date,\n-                     Collections.<Extension>emptyList(),\n-                     Validator.VAR_PLUGIN_CODE_SIGNING);\n-    }\n-\n-\n-    public static RevocationStatus check(X509Certificate cert,\n-            X509Certificate issuerCert, URI responderURI,\n-            X509Certificate responderCert, Date date, List<Extension> extensions,\n-            String variant)\n-        throws IOException, CertPathValidatorException\n-    {\n-        return check(cert, responderURI, null, issuerCert, responderCert, date,\n-                extensions, variant);\n-    }\n-\n-    public static RevocationStatus check(X509Certificate cert,\n-            URI responderURI, TrustAnchor anchor, X509Certificate issuerCert,\n-            X509Certificate responderCert, Date date,\n-            List<Extension> extensions, String variant)\n-            throws IOException, CertPathValidatorException\n-    {\n-        CertId certId;\n-        try {\n-            X509CertImpl certImpl = X509CertImpl.toImpl(cert);\n-            certId = new CertId(issuerCert, certImpl.getSerialNumberObject());\n-        } catch (CertificateException | IOException e) {\n-            throw new CertPathValidatorException\n-                (\"Exception while encoding OCSPRequest\", e);\n-        }\n-        OCSPResponse ocspResponse = check(Collections.singletonList(certId),\n-                responderURI, new OCSPResponse.IssuerInfo(anchor, issuerCert),\n-                responderCert, date, extensions, variant);\n-        return (RevocationStatus) ocspResponse.getSingleResponse(certId);\n-    }\n-\n@@ -241,1 +181,1 @@\n-                            \"UTF-8\");\n+                                      UTF_8);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSP.java","additions":3,"deletions":63,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,2 +162,1 @@\n-                    (variant.equals(Validator.VAR_CODE_SIGNING) ||\n-                     variant.equals(Validator.VAR_PLUGIN_CODE_SIGNING))) {\n+                    variant.equals(Validator.VAR_CODE_SIGNING)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PKIX.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,6 +28,2 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;\n+\n@@ -860,0 +856,33 @@\n+    private static final Map<Integer, CipherSuite> cipherSuiteIds;\n+    private static final Map<String, CipherSuite> cipherSuiteNames;\n+    private static final List<CipherSuite> allowedCipherSuites;\n+    private static final List<CipherSuite> defaultCipherSuites;\n+\n+    static {\n+        Map<Integer, CipherSuite> ids = new HashMap<>();\n+        Map<String, CipherSuite> names = new HashMap<>();\n+        List<CipherSuite> allowedCS = new ArrayList<>();\n+        List<CipherSuite> defaultCS = new ArrayList<>();\n+\n+        for(CipherSuite cs : CipherSuite.values()) {\n+            ids.put(cs.id, cs);\n+            names.put(cs.name, cs);\n+            for (String alias : cs.aliases) {\n+                names.put(alias, cs);\n+            }\n+\n+            if (!cs.supportedProtocols.isEmpty()) {\n+                allowedCS.add(cs);\n+            }\n+\n+            if (cs.isDefaultEnabled) {\n+                defaultCS.add(cs);\n+            }\n+        }\n+\n+        cipherSuiteIds = Map.copyOf(ids);\n+        cipherSuiteNames = Map.copyOf(names);\n+        allowedCipherSuites = List.copyOf(allowedCS);\n+        defaultCipherSuites = List.copyOf(defaultCS);\n+    }\n+\n@@ -897,8 +926,1 @@\n-        for (CipherSuite cs : CipherSuite.values()) {\n-            if (cs.name.equals(ciperSuiteName) ||\n-                    cs.aliases.contains(ciperSuiteName)) {\n-                return cs;\n-            }\n-        }\n-\n-        return null;\n+        return cipherSuiteNames.get(ciperSuiteName);\n@@ -908,7 +930,1 @@\n-        for (CipherSuite cs : CipherSuite.values()) {\n-            if (cs.id == id) {\n-                return cs;\n-            }\n-        }\n-\n-        return null;\n+        return cipherSuiteIds.get(id);\n@@ -918,4 +934,4 @@\n-        for (CipherSuite cs : CipherSuite.values()) {\n-            if (cs.id == id) {\n-                return cs.name;\n-            }\n+        CipherSuite cs = cipherSuiteIds.get(id);\n+\n+        if (cs != null) {\n+            return cs.name;\n@@ -928,11 +944,1 @@\n-        Collection<CipherSuite> cipherSuites = new LinkedList<>();\n-        for (CipherSuite cs : CipherSuite.values()) {\n-            if (!cs.supportedProtocols.isEmpty()) {\n-                cipherSuites.add(cs);\n-            } else {\n-                \/\/ values() is ordered, remaining cipher suites are\n-                \/\/ not supported.\n-                break;\n-            }\n-        }\n-        return cipherSuites;\n+        return allowedCipherSuites;\n@@ -942,11 +948,1 @@\n-        Collection<CipherSuite> cipherSuites = new LinkedList<>();\n-        for (CipherSuite cs : CipherSuite.values()) {\n-            if (cs.isDefaultEnabled) {\n-                cipherSuites.add(cs);\n-            } else {\n-                \/\/ values() is ordered, remaining cipher suites are\n-                \/\/ not enabled.\n-                break;\n-            }\n-        }\n-        return cipherSuites;\n+        return defaultCipherSuites;\n@@ -975,13 +971,5 @@\n-            for (CipherSuite cs : CipherSuite.values()) {\n-                if (!cs.supportedProtocols.isEmpty()) {\n-                    if (cs.name.equals(name) ||\n-                            cs.aliases.contains(name)) {\n-                        cipherSuites.add(cs);\n-                        found = true;\n-                        break;\n-                    }\n-                } else {\n-                    \/\/ values() is ordered, remaining cipher suites are\n-                    \/\/ not supported.\n-                    break;\n-                }\n+            CipherSuite cs;\n+            if ((cs = cipherSuiteNames.get(name)) != null\n+                    && !cs.supportedProtocols.isEmpty()) {\n+                cipherSuites.add(cs);\n+                found = true;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CipherSuite.java","additions":48,"deletions":60,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -239,2 +239,1 @@\n-                    SSLLogger.fine(\"RSA premaster secret generation error:\");\n-                    iae.printStackTrace(System.out);\n+                    SSLLogger.fine(\"RSA premaster secret generation error\", iae);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RSAKeyExchange.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -73,2 +73,8 @@\n-                                certs.add(X509CertImpl.getFingerprint(HASH, cert));\n-                                certIssuers.add(cert.getSubjectX500Principal());\n+                                String fp =\n+                                    X509CertImpl.getFingerprint(HASH, cert, debug);\n+                                \/\/ only add trust anchor if fingerprint can\n+                                \/\/ be calculated\n+                                if (fp != null) {\n+                                    certs.add(fp);\n+                                    certIssuers.add(cert.getSubjectX500Principal());\n+                                }\n@@ -96,2 +102,2 @@\n-        String key = X509CertImpl.getFingerprint(HASH, cert);\n-        boolean result = certs.contains(key);\n+        String key = X509CertImpl.getFingerprint(HASH, cert, debug);\n+        boolean result = (key == null ? false : certs.contains(key));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AnchorCertificates.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -808,1 +808,0 @@\n-                            variant.equals(Validator.VAR_PLUGIN_CODE_SIGNING) ||\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -273,1 +273,1 @@\n-            List<Object> manifestDigests)\n+            List<Object> manifestDigests, String manifestName)\n@@ -282,1 +282,1 @@\n-            processImpl(signers, manifestDigests);\n+            processImpl(signers, manifestDigests, manifestName);\n@@ -290,1 +290,1 @@\n-            List<Object> manifestDigests)\n+            List<Object> manifestDigests, String manifestName)\n@@ -371,1 +371,1 @@\n-        updateSigners(newSigners, signers, JarFile.MANIFEST_NAME);\n+        updateSigners(newSigners, signers, manifestName);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureFileVerifier.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.security.cert.CertificateException;\n@@ -83,11 +82,3 @@\n-        String key;\n-        if (cert instanceof X509CertImpl) {\n-            key = ((X509CertImpl)cert).getFingerprint(algorithm);\n-        } else {\n-            try {\n-                key = new X509CertImpl(cert.getEncoded()).getFingerprint(algorithm);\n-            } catch (CertificateException cee) {\n-                return false;\n-            }\n-        }\n-        return props.containsKey(key);\n+        \/\/ if fingerprint cannot be calculated, also treat it as untrusted\n+        String key = X509CertImpl.getFingerprint(algorithm, cert, debug);\n+        return (key == null || props.containsKey(key));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/UntrustedCertificates.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,4 +56,0 @@\n- * <li>Plugin code signing. WebStart and Plugin require their own variant\n- * which is equivalent to VAR_CODE_SIGNING with additional checks for\n- * compatibility\/special cases. See also PKIXValidator.\n- *\n@@ -159,2 +155,0 @@\n-        } else if (variant.equals(Validator.VAR_PLUGIN_CODE_SIGNING)) {\n-            checkCodeSigning(chain[0], exts);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/EndEntityChecker.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.util.*;\n-\n@@ -32,1 +30,1 @@\n-\n+import java.util.*;\n@@ -84,2 +82,0 @@\n-    private final boolean plugin;\n-\n@@ -107,1 +103,0 @@\n-        plugin = variant.equals(VAR_PLUGIN_CODE_SIGNING);\n@@ -129,2 +124,0 @@\n-        plugin = variant.equals(VAR_PLUGIN_CODE_SIGNING);\n-\n@@ -273,2 +266,1 @@\n-        if (trustedSubjects.containsKey(issuer) &&\n-                isSignatureValid(trustedSubjects.get(issuer), last)) {\n+        if (trustedSubjects.containsKey(issuer)) {\n@@ -278,26 +270,0 @@\n-        \/\/ don't fallback to builder if called from plugin\/webstart\n-        if (plugin) {\n-            \/\/ Validate chain even if no trust anchor is found. This\n-            \/\/ allows plugin\/webstart to make sure the chain is\n-            \/\/ otherwise valid\n-            if (chain.length > 1) {\n-                X509Certificate[] newChain =\n-                    new X509Certificate[chain.length-1];\n-                System.arraycopy(chain, 0, newChain, 0, newChain.length);\n-\n-                \/\/ temporarily set last cert as sole trust anchor\n-                try {\n-                    pkixParameters.setTrustAnchors\n-                        (Collections.singleton(new TrustAnchor\n-                            (chain[chain.length-1], null)));\n-                } catch (InvalidAlgorithmParameterException iape) {\n-                    \/\/ should never occur, but ...\n-                    throw new CertificateException(iape);\n-                }\n-                doValidate(newChain, pkixParameters);\n-            }\n-            \/\/ if the rest of the chain is valid, throw exception\n-            \/\/ indicating no trust anchor was found\n-            throw new ValidatorException\n-                (ValidatorException.T_NO_TRUST_ANCHOR);\n-        }\n@@ -305,1 +271,0 @@\n-\n@@ -309,16 +274,0 @@\n-    private boolean isSignatureValid(List<PublicKey> keys,\n-            X509Certificate sub) {\n-        if (plugin) {\n-            for (PublicKey key: keys) {\n-                try {\n-                    sub.verify(key);\n-                    return true;\n-                } catch (Exception ex) {\n-                    continue;\n-                }\n-            }\n-            return false;\n-        }\n-        return true; \/\/ only check if PLUGIN is set\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/PKIXValidator.java","additions":3,"deletions":54,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import sun.security.util.Debug;\n@@ -43,0 +44,2 @@\n+    private static final Debug debug = Debug.getInstance(\"certpath\");\n+\n@@ -157,1 +160,6 @@\n-        if (FINGERPRINTS.contains(fingerprint(anchor))) {\n+        String fp = fingerprint(anchor);\n+        if (fp == null) {\n+            throw new ValidatorException(\"Cannot generate fingerprint for \"\n+                + \"trust anchor of TLS server certificate\");\n+        }\n+        if (FINGERPRINTS.contains(fp)) {\n@@ -164,1 +172,6 @@\n-                LocalDate distrustDate = EXEMPT_SUBCAS.get(fingerprint(subCA));\n+                fp = fingerprint(subCA);\n+                if (fp == null) {\n+                    throw new ValidatorException(\"Cannot generate fingerprint \"\n+                        + \"for intermediate CA of TLS server certificate\");\n+                }\n+                LocalDate distrustDate = EXEMPT_SUBCAS.get(fp);\n@@ -177,3 +190,1 @@\n-        return (cert instanceof X509CertImpl)\n-               ? ((X509CertImpl)cert).getFingerprint(\"SHA-256\")\n-               : X509CertImpl.getFingerprint(\"SHA-256\", cert);\n+        return X509CertImpl.getFingerprint(\"SHA-256\", cert, debug);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/SymantecTLSPolicy.java","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,0 @@\n- * <li>VAR_PLUGIN_CODE_SIGNING (Plugin\/WebStart code signing specific checks).\n@@ -139,7 +138,0 @@\n-    \/**\n-     * Constant for a Code Signing variant of a validator for use by\n-     * the J2SE Plugin\/WebStart code.\n-     * @see #getInstance\n-     *\/\n-    public static final String VAR_PLUGIN_CODE_SIGNING = \"plugin code signing\";\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/Validator.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1920,1 +1920,1 @@\n-    public String getFingerprint(String algorithm) {\n+    private String getFingerprint(String algorithm, Debug debug) {\n@@ -1922,1 +1922,25 @@\n-            x -> getFingerprint(x, this));\n+            x -> {\n+                try {\n+                    return getFingerprintInternal(x, getEncodedInternal(), debug);\n+                } catch (CertificateEncodingException e) {\n+                    if (debug != null) {\n+                        debug.println(\"Cannot encode certificate: \" + e);\n+                    }\n+                    return null;\n+                }\n+            });\n+    }\n+\n+    private static String getFingerprintInternal(String algorithm,\n+            byte[] encodedCert, Debug debug) {\n+        try {\n+            MessageDigest md = MessageDigest.getInstance(algorithm);\n+            byte[] digest = md.digest(encodedCert);\n+            return HexFormat.of().withUpperCase().formatHex(digest);\n+        } catch (NoSuchAlgorithmException e) {\n+            if (debug != null) {\n+                debug.println(\"Cannot create \" + algorithm\n+                    + \" MessageDigest: \" + e);\n+            }\n+            return null;\n+        }\n@@ -1926,1 +1950,1 @@\n-     * Gets the requested finger print of the certificate. The result\n+     * Gets the requested fingerprint of the certificate. The result\n@@ -1928,0 +1952,5 @@\n+     *\n+     * @param algorithm the MessageDigest algorithm\n+     * @param cert the X509Certificate\n+     * @return the fingerprint, or null if it cannot be calculated because\n+     *     of an exception\n@@ -1930,8 +1959,12 @@\n-            X509Certificate cert) {\n-        try {\n-            byte[] encCertInfo = cert.getEncoded();\n-            MessageDigest md = MessageDigest.getInstance(algorithm);\n-            byte[] digest = md.digest(encCertInfo);\n-            return HexFormat.of().withUpperCase().formatHex(digest);\n-        } catch (NoSuchAlgorithmException | CertificateEncodingException e) {\n-            \/\/ ignored\n+            X509Certificate cert, Debug debug) {\n+        if (cert instanceof X509CertImpl) {\n+            return ((X509CertImpl)cert).getFingerprint(algorithm, debug);\n+        } else {\n+            try {\n+                return getFingerprintInternal(algorithm, cert.getEncoded(), debug);\n+            } catch (CertificateEncodingException e) {\n+                if (debug != null) {\n+                    debug.println(\"Cannot encode certificate: \" + e);\n+                }\n+                return null;\n+            }\n@@ -1939,1 +1972,0 @@\n-        return \"\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":45,"deletions":13,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,1 +132,1 @@\n-        values[(int)index] = value;\n+        values[index] = value;\n@@ -329,1 +329,0 @@\n-            values = null;\n@@ -335,5 +334,0 @@\n-    private byte[] getArray()\n-    {\n-        return values;\n-    }\n-\n@@ -350,1 +344,1 @@\n-};\n+}\n","filename":"src\/java.base\/share\/classes\/sun\/text\/CompactByteArray.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import java.util.LinkedList;\n+import java.util.ArrayList;\n@@ -101,1 +101,1 @@\n-        List<String[]> zones = new LinkedList<>();\n+        List<String[]> zones = new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/TimeZoneNameUtility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1750,0 +1750,3 @@\n+.PP\n+If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it expands to the JVM\\[aq]s\n+PID and the current timestamp, respectively.\n@@ -1816,0 +1819,24 @@\n+Event settings and .jfc options can be specified using the following\n+syntax:\n+.TP\n+.B \\f[CB]option=\\f[R]\\f[I]value\\f[R]\n+Specifies the option value to modify.\n+To list available options, use the \\f[CB]JAVA_HOME\\f[R]\/bin\/jfr tool.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]event\\-setting\\f[R]=\\f[I]value\\f[R]\n+Specifies the event setting value to modify.\n+Use the form: #= To add a new event setting, prefix the event name with\n+\\[aq]+\\[aq].\n+.RS\n+.RE\n+.PP\n+You can specify values for multiple event settings and .jfc options by\n+separating them with a comma.\n+In case of a conflict between a parameter and a .jfc option, the\n+parameter will take precedence.\n+The whitespace delimiter can be omitted for timespan values, i.e.\n+20ms.\n+For more information about the settings syntax, see Javadoc of the\n+jdk.jfr package.\n","filename":"src\/java.base\/share\/man\/java.1","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-.TH \"KEYTOOL\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"KEYTOOL\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -385,0 +385,4 @@\n+{\\f[CB]\\-signer\\f[R] \\f[I]alias\\f[R]}: Signer alias\n+.IP \\[bu] 2\n+[\\f[CB]\\-signerkeypass\\f[R] \\f[I]arg\\f[R]]: Signer key password\n+.IP \\[bu] 2\n@@ -420,4 +424,9 @@\n-Wraps the public key in an X.509 v3 self\\-signed certificate, which is\n-stored as a single\\-element certificate chain.\n-This certificate chain and the private key are stored in a new keystore\n-entry that is identified by its alias.\n+When the \\f[CB]\\-signer\\f[R] option is not specified, the public key is\n+wrapped in an X.509 v3 self\\-signed certificate and stored as a\n+single\\-element certificate chain.\n+When the \\f[CB]\\-signer\\f[R] option is specified, a new certificate is\n+generated and signed by the designated signer and stored as a\n+multiple\\-element certificate chain (containing the generated\n+certificate itself, and the signer???s certificate chain).\n+The certificate chain and private key are stored in a new keystore entry\n+that is identified by its alias.\n@@ -429,1 +438,1 @@\n-to sign the self\\-signed certificate.\n+to sign the certificate.\n@@ -438,0 +447,15 @@\n+The \\f[CB]\\-signer\\f[R] value specifies the alias of a\n+\\f[CB]PrivateKeyEntry\\f[R] for the signer that already exists in the\n+keystore.\n+This option is used to sign the certificate with the signer???s private\n+key.\n+This is especially useful for key agreement algorithms (i.e.\n+the \\f[CB]\\-keyalg\\f[R] value is \\f[CB]XDH\\f[R], \\f[CB]X25519\\f[R],\n+\\f[CB]X448\\f[R], or \\f[CB]DH\\f[R]) as these keys cannot be used for digital\n+signatures, and therefore a self\\-signed certificate cannot be created.\n+.PP\n+The \\f[CB]\\-signerkeypass\\f[R] value specifies the password of the\n+signer???s private key.\n+It can be specified if the private key of the signer entry is protected\n+by a password different from the store password.\n+.PP\n@@ -439,2 +463,8 @@\n-associated with the value of \\f[CB]\\-alias\\f[R], and is used as the issuer\n-and subject fields in the self\\-signed certificate.\n+associated with the value of \\f[CB]\\-alias\\f[R].\n+If the \\f[CB]\\-signer\\f[R] option is not specified, the issuer and subject\n+fields of the self\\-signed certificate are populated with the specified\n+distinguished name.\n+If the \\f[CB]\\-signer\\f[R] option is specified, the subject field of the\n+certificate is populated with the specified distinguished name and the\n+issuer field is populated with the subject field of the signer\\[aq]s\n+certificate.\n@@ -1534,1 +1564,1 @@\n-\\ \\ \\ \\ 2048\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"RSA\",\\ \"DSA\",\\ or\\ \"RSASSA\\-PSS\")\n+\\ \\ \\ \\ 2048\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"RSA\",\\ \"DSA\",\\ \"RSASSA\\-PSS\",\\ or\\ \"DH\")\n@@ -1536,1 +1566,1 @@\n-\\ \\ \\ \\ 255\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"EdDSA\")\n+\\ \\ \\ \\ 255\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"EdDSA\",\\ or\\ \"XDH)\n@@ -2534,2 +2564,2 @@\n-When keys are first generated, the chain starts off containing a single\n-element, a self\\-signed certificate.\n+When keys are first generated, the chain usually starts off containing a\n+single element, a self\\-signed certificate.\n@@ -2541,1 +2571,1 @@\n-Whenever the \\f[CB]\\-genkeypair\\f[R] command is called to generate a new\n+When the \\f[CB]\\-genkeypair\\f[R] command is called to generate a new\n@@ -2543,1 +2573,2 @@\n-self\\-signed certificate.\n+self\\-signed certificate (unless the \\f[CB]\\-signer\\f[R] option is\n+specified).\n","filename":"src\/java.base\/share\/man\/keytool.1","additions":45,"deletions":14,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -111,1 +111,0 @@\n-static void SetJvmEnvironment(int argc, char **argv);\n@@ -287,3 +286,0 @@\n-    \/* Set env. Must be done before LoadJavaVM. *\/\n-    SetJvmEnvironment(argc, argv);\n-\n@@ -801,78 +797,0 @@\n-\/*\n- * This method must be called before the VM is loaded, primarily\n- * used to parse and set any VM related options or env variables.\n- * This function is non-destructive leaving the argument list intact.\n- *\/\n-static void\n-SetJvmEnvironment(int argc, char **argv) {\n-\n-    static const char*  NMT_Env_Name    = \"NMT_LEVEL_\";\n-    const char* NMT_Arg_Name = IsJavaArgs() ? \"-J-XX:NativeMemoryTracking=\" : \"-XX:NativeMemoryTracking=\";\n-    int i;\n-    \/* process only the launcher arguments *\/\n-    for (i = 0; i < argc; i++) {\n-        char *arg = argv[i];\n-        \/*\n-         * Java launcher (!IsJavaArgs()):\n-         *   Since this must be a VM flag we stop processing once we see\n-         *   an argument the launcher would not have processed beyond (such\n-         *   as -version or -h), or an argument that indicates the following\n-         *   arguments are for the application (i.e. the main class name, or\n-         *   the -jar argument).\n-         * Other launchers (IsJavaArgs()):\n-         *   All arguments have to be scanned to see if it is a -J argument.\n-         *\/\n-        if (!IsJavaArgs() && i > 0) {\n-            char *prev = argv[i - 1];\n-            \/\/ skip non-dash arg preceded by class path specifiers\n-            if (*arg != '-' && IsWhiteSpaceOption(prev)) {\n-                continue;\n-            }\n-\n-            if (*arg != '-' || isTerminalOpt(arg)) {\n-                return;\n-            }\n-        }\n-        \/*\n-         * The following case checks for \"-XX:NativeMemoryTracking=value\".\n-         * If value is non null, an environmental variable set to this value\n-         * will be created to be used by the JVM.\n-         * The argument is passed to the JVM, which will check validity.\n-         * The JVM is responsible for removing the env variable.\n-         *\/\n-        if (JLI_StrCCmp(arg, NMT_Arg_Name) == 0) {\n-            int retval;\n-            \/\/ get what follows this parameter, include \"=\"\n-            size_t pnlen = JLI_StrLen(NMT_Arg_Name);\n-            if (JLI_StrLen(arg) > pnlen) {\n-                char* value = arg + pnlen;\n-                size_t pbuflen = pnlen + JLI_StrLen(value) + 10; \/\/ 10 max pid digits\n-\n-                \/*\n-                 * ensures that malloc successful\n-                 * DONT JLI_MemFree() pbuf.  JLI_PutEnv() uses system call\n-                 *   that could store the address.\n-                 *\/\n-                char * pbuf = (char*)JLI_MemAlloc(pbuflen);\n-\n-                JLI_Snprintf(pbuf, pbuflen, \"%s%d=%s\", NMT_Env_Name, JLI_GetPid(), value);\n-                retval = JLI_PutEnv(pbuf);\n-                if (JLI_IsTraceLauncher()) {\n-                    char* envName;\n-                    char* envBuf;\n-\n-                    \/\/ ensures that malloc successful\n-                    envName = (char*)JLI_MemAlloc(pbuflen);\n-                    JLI_Snprintf(envName, pbuflen, \"%s%d\", NMT_Env_Name, JLI_GetPid());\n-\n-                    printf(\"TRACER_MARKER: NativeMemoryTracking: env var is %s\\n\",envName);\n-                    printf(\"TRACER_MARKER: NativeMemoryTracking: putenv arg %s\\n\",pbuf);\n-                    envBuf = getenv(envName);\n-                    printf(\"TRACER_MARKER: NativeMemoryTracking: got value %s\\n\",envBuf);\n-                    free(envName);\n-                }\n-            }\n-        }\n-    }\n-}\n-\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":0,"deletions":82,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -96,2 +96,0 @@\n-#define JLI_PutEnv                      _putenv\n-#define JLI_GetPid                      _getpid\n@@ -105,2 +103,0 @@\n-#define JLI_PutEnv                      putenv\n-#define JLI_GetPid                      getpid\n","filename":"src\/java.base\/share\/native\/libjli\/jli_util.h","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import java.util.LinkedList;\n+import java.util.ArrayList;\n@@ -59,1 +59,1 @@\n-    private LinkedList<String> resolvconf(String keyword,\n+    private ArrayList<String> resolvconf(String keyword,\n@@ -63,1 +63,1 @@\n-        LinkedList<String> ll = new LinkedList<>();\n+        ArrayList<String> ll = new ArrayList<>();\n@@ -114,2 +114,2 @@\n-    private LinkedList<String> searchlist;\n-    private LinkedList<String> nameservers;\n+    private ArrayList<String> searchlist;\n+    private ArrayList<String> nameservers;\n@@ -136,1 +136,1 @@\n-                    public LinkedList<String> run() {\n+                    public ArrayList<String> run() {\n@@ -154,1 +154,1 @@\n-    private LinkedList<String> getSearchList() {\n+    private ArrayList<String> getSearchList() {\n@@ -156,1 +156,1 @@\n-        LinkedList<String> sl;\n+        ArrayList<String> sl;\n@@ -162,2 +162,2 @@\n-                    public LinkedList<String> run() {\n-                        LinkedList<String> ll;\n+                    public ArrayList<String> run() {\n+                        ArrayList<String> ll;\n@@ -186,2 +186,2 @@\n-                    public LinkedList<String> run() {\n-                        LinkedList<String> ll;\n+                    public ArrayList<String> run() {\n+                        ArrayList<String> ll;\n@@ -204,1 +204,1 @@\n-        sl = new LinkedList<>();\n+        sl = new ArrayList<>();\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/dns\/ResolverConfigurationImpl.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,0 +129,4 @@\n+    boolean canTransferToFromOverlappedMap() {\n+        return canTransferToFromOverlappedMap0();\n+    }\n+\n@@ -187,0 +191,2 @@\n+    static native boolean canTransferToFromOverlappedMap0();\n+\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/FileDispatcherImpl.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+ * Second parameter is a hint about the type of a file. JNI_TRUE is for\n+ * shared libraries and JNI_FALSE is for executables.\n@@ -52,1 +54,1 @@\n-TruncatePath(char *buf)\n+TruncatePath(char *buf, jboolean pathisdll)\n@@ -54,2 +56,8 @@\n-    \/\/ try bin directory, maybe an executable\n-    char *p = findLastPathComponent(buf, \"\/bin\/\");\n+    \/*\n+     * If the file is a library, try lib directory first and then bin\n+     * directory.\n+     * If the file is an executable, try bin directory first and then lib\n+     * directory.\n+     *\/\n+\n+    char *p = findLastPathComponent(buf, pathisdll ? \"\/lib\/\" : \"\/bin\/\");\n@@ -60,2 +68,1 @@\n-    \/\/ try lib directory, maybe a library\n-    p = findLastPathComponent(buf, \"\/lib\/\");\n+    p = findLastPathComponent(buf, pathisdll ? \"\/bin\/\" : \"\/lib\/\");\n@@ -83,1 +90,1 @@\n-    return TruncatePath(buf);\n+    return TruncatePath(buf, JNI_FALSE);\n@@ -98,1 +105,1 @@\n-            return TruncatePath(buf);\n+            return TruncatePath(buf, JNI_TRUE);\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md_common.c","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,0 +255,9 @@\n+JNIEXPORT jint JNICALL\n+Java_sun_nio_ch_FileChannelImpl_maxDirectTransferSize0(JNIEnv* env, jobject this)\n+{\n+#if defined(LINUX)\n+    return 0x7ffff000; \/\/ 2,147,479,552 maximum for sendfile()\n+#else\n+    return java_lang_Integer_MAX_VALUE;\n+#endif\n+}\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/FileChannelImpl.c","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -341,0 +341,10 @@\n+JNIEXPORT jboolean JNICALL\n+Java_sun_nio_ch_FileDispatcherImpl_canTransferToFromOverlappedMap0(JNIEnv *env, jclass clazz)\n+{\n+#ifdef MACOSX\n+    return JNI_FALSE;\n+#else\n+    return JNI_TRUE;\n+#endif\n+}\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,4 @@\n+    boolean canTransferToFromOverlappedMap() {\n+        return true;\n+    }\n+\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/FileDispatcherImpl.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,3 @@\n+\/\/ Integer.MAX_VALUE - 1 is the maximum transfer size for TransmitFile()\n+#define MAX_TRANSMIT_SIZE (java_lang_Integer_MAX_VALUE - 1)\n+\n@@ -159,2 +162,2 @@\n-    DWORD chunkSize = (count > java_lang_Integer_MAX_VALUE) ?\n-        java_lang_Integer_MAX_VALUE : (DWORD)count;\n+    DWORD chunkSize = (count > MAX_TRANSMIT_SIZE) ?\n+        MAX_TRANSMIT_SIZE : (DWORD)count;\n@@ -192,0 +195,7 @@\n+\n+\n+JNIEXPORT jint JNICALL\n+Java_sun_nio_ch_FileChannelImpl_maxDirectTransferSize0(JNIEnv* env, jobject this)\n+{\n+    return MAX_TRANSMIT_SIZE;\n+}\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileChannelImpl.c","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,0 +129,4 @@\n+    \/\/ Maintenance note: check if the default implementation of\n+    \/\/ Elements.getOutermostTypeElement needs updating when new kind\n+    \/\/ constants are added.\n+\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ElementKind.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -536,0 +536,61 @@\n+    \/**\n+     * {@return the outermost type element an element is contained in\n+     * if such a containing element exists; otherwise returns {@code\n+     * null}}\n+     *\n+     * {@linkplain ModuleElement Modules} and {@linkplain\n+     * PackageElement packages} do <em>not<\/em> have a containing type\n+     * element and therefore {@code null} is returned for those kinds\n+     * of elements.\n+     *\n+     * A {@link NestingKind#TOP_LEVEL top-level} class or\n+     * interface is its own outermost type element.\n+     *\n+     * @implSpec\n+     * The default implementation of this method first checks the kind\n+     * of the argument. For elements of kind {@code PACKAGE}, {@code\n+     * MODULE}, and {@code OTHER}, {@code null} is returned. For\n+     * elements of other kinds, the element is examined to see if it\n+     * is a top-level class or interface. If so, that element is\n+     * returned; otherwise, the {@linkplain\n+     * Element#getEnclosingElement enclosing element} chain is\n+     * followed until a top-level class or interface is found. The\n+     * element for the eventual top-level class or interface is\n+     * returned.\n+     *\n+     * @param e the element being examined\n+     * @see Element#getEnclosingElement\n+     * @since 18\n+     *\/\n+    default TypeElement getOutermostTypeElement(Element e) {\n+        return switch (e.getKind()) {\n+        case PACKAGE,\n+             MODULE  -> null; \/\/ Per the general spec above.\n+        case OTHER   -> null; \/\/ Outside of base model of the javax.lang.model API\n+\n+        \/\/ Elements of all remaining kinds should be enclosed in some\n+        \/\/ sort of class or interface. Check to see if the element is\n+        \/\/ a top-level type; if so, return it. Otherwise, keep going\n+        \/\/ up the enclosing element chain until a top-level type is\n+        \/\/ found.\n+        default -> {\n+            Element enclosing = e;\n+            \/\/ This implementation is susceptible to infinite loops\n+            \/\/ for misbehaving element implementations.\n+            while (true) {\n+                \/\/ Conceptual instanceof TypeElement check. If the\n+                \/\/ argument is a type element, put it into a\n+                \/\/ one-element list, otherwise an empty list.\n+                List<TypeElement> possibleTypeElement = ElementFilter.typesIn(List.of(enclosing));\n+                if (!possibleTypeElement.isEmpty()) {\n+                    TypeElement typeElement = possibleTypeElement.get(0);\n+                    if (typeElement.getNestingKind() == NestingKind.TOP_LEVEL) {\n+                        yield typeElement;\n+                    }\n+                }\n+                enclosing = enclosing.getEnclosingElement();\n+            }\n+        }\n+        };\n+    }\n+\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -324,3 +325,6 @@\n-            byte[] ba = new byte[in.readInt()];\n-            in.readFully(ba);\n-            s = new String(ba);\n+            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+            int len = in.readInt();\n+            while (len-- > 0) {\n+                baos.write(in.readByte());\n+            }\n+            s = baos.toString();\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/MimeType.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -114,2 +114,1 @@\n-            final long bits = Double.doubleToLongBits(doubleValue);\n-            return (int)(bits ^ (bits >>> 32));\n+            return Double.hashCode(doubleValue);\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIConstants.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-    static boolean isBigSurOrAbove = isMacOSXBigSurOrAbove();\n@@ -42,1 +41,2 @@\n-        return currentMacOSXVersionMatchesGivenVersionRange(16, true, false, true);\n+        return currentMacOSXVersionMatchesGivenVersionRange(10, 16, true,\n+                false, true);\n@@ -50,1 +50,2 @@\n-        return currentMacOSXVersionMatchesGivenVersionRange(6, true, true, false);\n+        return currentMacOSXVersionMatchesGivenVersionRange(10, 6, true,\n+                true, false);\n@@ -54,1 +55,5 @@\n-        return currentMacOSXVersionMatchesGivenVersionRange(version, true, false, false);\n+        return isCurrentMacOSXVersion(10, version);\n+    }\n+\n+    static boolean isCurrentMacOSXVersion(final int major, final int minor) {\n+        return currentMacOSXVersionMatchesGivenVersionRange(major, minor, true, false, false);\n@@ -60,1 +65,7 @@\n-        \/\/ split the \"10.x.y\" version number\n+        return currentMacOSXVersionMatchesGivenVersionRange(10, version, inclusive, matchBelow, matchAbove);\n+    }\n+\n+    static boolean currentMacOSXVersionMatchesGivenVersionRange(\n+            final int majorVersion, final int minorVersion, final boolean inclusive,\n+            final boolean matchBelow, final boolean matchAbove) {\n+        \/\/ split the \"x.y.z\" version number\n@@ -65,2 +76,0 @@\n-        \/\/ sanity check the \"10.\" part of the version\n-        if (!fragments[0].equals(\"10\")) return false;\n@@ -71,0 +80,1 @@\n+            int majorVers = Integer.parseInt(fragments[0]);\n@@ -73,3 +83,7 @@\n-            if (inclusive && minorVers == version) return true;\n-            if (matchBelow && minorVers < version) return true;\n-            if (matchAbove && minorVers > version) return true;\n+            if (inclusive && majorVers == majorVersion && minorVers == minorVersion) return true;\n+            if (matchBelow &&\n+                    (majorVers < majorVersion ||\n+                            (majorVers == majorVersion && minorVers < minorVersion))) return true;\n+            if (matchAbove &&\n+                    (majorVers > majorVersion ||\n+                            (majorVers == majorVersion && minorVers > minorVersion))) return true;\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIUtils.java","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -59,0 +58,5 @@\n+        loadOSXLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadOSXLibrary() {\n@@ -135,0 +139,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -149,0 +154,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -163,0 +169,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -177,0 +184,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -191,0 +199,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -254,0 +263,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -281,0 +291,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -332,0 +343,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -350,0 +362,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -371,0 +384,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -394,0 +408,1 @@\n+                @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eio\/FileManager.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,2 +28,5 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedList;\n+import java.util.Map;\n@@ -37,1 +40,3 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ JDK implementation class\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+@SuppressWarnings(\"serial\") \/\/ JDK implementation class\n@@ -60,0 +65,5 @@\n+        loadOSXUILibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadOSXUILibrary() {\n@@ -109,5 +119,1 @@\n-            try {\n-                pathBytes = absolutePath.getBytes(\"UTF-8\");\n-            } catch (final UnsupportedEncodingException e) {\n-                pathBytes = new byte[0];\n-            }\n+            pathBytes = absolutePath.getBytes(UTF_8);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileView.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ JDK implementation class\n+@SuppressWarnings(\"serial\") \/\/ JDK implementation class\n@@ -45,0 +45,5 @@\n+        loadAWTLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadAWTLibrary() {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenu.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+    private static native void nativeSetOpaque(long layerPtr, boolean opaque);\n@@ -107,1 +108,5 @@\n-    \/\/ ----------------------------------------------------------------------\n+    @Override\n+    public void setOpaque(boolean opaque) {\n+        execute(ptr -> nativeSetOpaque(ptr, opaque));\n+    }\n+\/\/ ----------------------------------------------------------------------\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLLayer.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -199,1 +199,0 @@\n-\n@@ -523,1 +522,4 @@\n-        textured = isTextured;\n+        if (textured != isTextured) {\n+            textured = isTextured;\n+            updateOpaque();\n+        }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWWindowPeer.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.lang.annotation.Native;\n@@ -42,0 +43,1 @@\n+import java.util.Arrays;\n@@ -60,0 +62,2 @@\n+import javax.swing.JList;\n+import javax.swing.JTree;\n@@ -65,1 +69,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -70,1 +73,6 @@\n-        \/\/ Need to load the native library for this code.\n+        loadAWTLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadAWTLibrary() {\n+            \/\/ Need to load the native library for this code.\n@@ -119,6 +127,1 @@\n-        if (c != null) {\n-            try {\n-                return LWCToolkit.invokeAndWait(callable, c);\n-            } catch (final Exception e) { e.printStackTrace(); }\n-        }\n-        return null;\n+        return invokeAndWait(callable, c, null);\n@@ -554,0 +557,4 @@\n+                if (parent instanceof JList) {\n+                    ((JList) parent).setSelectedIndex(i);\n+                    return;\n+                }\n@@ -654,3 +661,3 @@\n-    static final int JAVA_AX_ALL_CHILDREN = -1;\n-    static final int JAVA_AX_SELECTED_CHILDREN = -2;\n-    static final int JAVA_AX_VISIBLE_CHILDREN = -3;\n+    @Native static final int JAVA_AX_ALL_CHILDREN = -1;\n+    @Native static final int JAVA_AX_SELECTED_CHILDREN = -2;\n+    @Native static final int JAVA_AX_VISIBLE_CHILDREN = -3;\n@@ -663,47 +670,50 @@\n-                ArrayList<Object> childrenAndRoles = new ArrayList<Object>();\n-                _addChildren(a, whichChildren, allowIgnored, childrenAndRoles);\n-\n-                \/* In the case of fetching a selection, need to check to see if\n-                 * the active descendant is at the beginning of the list.  If it\n-                 * is not it needs to be moved to the beginning of the list so\n-                 * VoiceOver will annouce it correctly.  The list returned\n-                 * from Java is always in order from top to bottom, but when shift\n-                 * selecting downward (extending the list) or multi-selecting using\n-                 * the VO keys control+option+command+return the active descendant\n-                 * is not at the top of the list in the shift select down case and\n-                 * may not be in the multi select case.\n-                 *\/\n-                if (whichChildren == JAVA_AX_SELECTED_CHILDREN) {\n-                    if (!childrenAndRoles.isEmpty()) {\n-                        AccessibleContext activeDescendantAC =\n-                            CAccessible.getActiveDescendant(a);\n-                        if (activeDescendantAC != null) {\n-                            String activeDescendantName =\n-                                activeDescendantAC.getAccessibleName();\n-                            AccessibleRole activeDescendantRole =\n-                                activeDescendantAC.getAccessibleRole();\n-                            \/\/ Move active descendant to front of list.\n-                            \/\/ List contains pairs of each selected item's\n-                            \/\/ Accessible and AccessibleRole.\n-                            ArrayList<Object> newArray  = new ArrayList<Object>();\n-                            int count = childrenAndRoles.size();\n-                            Accessible currentAccessible = null;\n-                            AccessibleContext currentAC = null;\n-                            String currentName = null;\n-                            AccessibleRole currentRole = null;\n-                            for (int i = 0; i < count; i+=2) {\n-                                \/\/ Is this the active descendant?\n-                                currentAccessible = (Accessible)childrenAndRoles.get(i);\n-                                currentAC = currentAccessible.getAccessibleContext();\n-                                currentName = currentAC.getAccessibleName();\n-                                currentRole = (AccessibleRole)childrenAndRoles.get(i+1);\n-                                if (currentName != null && currentName.equals(activeDescendantName) &&\n-                                     currentRole.equals(activeDescendantRole) ) {\n-                                    newArray.add(0, currentAccessible);\n-                                    newArray.add(1, currentRole);\n-                                } else {\n-                                    newArray.add(currentAccessible);\n-                                    newArray.add(currentRole);\n-                                }\n-                            }\n-                            childrenAndRoles = newArray;\n+                return getChildrenAndRolesImpl(a, c, whichChildren, allowIgnored);\n+            }\n+        }, c);\n+    }\n+\n+    private static Object[] getChildrenAndRolesImpl(final Accessible a, final Component c, final int whichChildren, final boolean allowIgnored) {\n+        if (a == null) return null;\n+\n+        ArrayList<Object> childrenAndRoles = new ArrayList<Object>();\n+        _addChildren(a, whichChildren, allowIgnored, childrenAndRoles);\n+\n+        \/* In case of fetching a selection, we need to check if\n+* the active descendant is at the beginning of the list, or\n+* otherwise move it, so that VoiceOver announces it correctly.\n+                * The java list is always in order from top to bottom, but when\n+                * (1) shift-selecting downward (extending the list) or (2) multi-selecting with\n+                * the VO keys (CTRL+ALT+CMD+RETURN) the active descendant\n+                * is not at the top of the list in the 1st case and may not be in the 2nd.\n+                *\/\n+        if (whichChildren == JAVA_AX_SELECTED_CHILDREN) {\n+            if (!childrenAndRoles.isEmpty()) {\n+                AccessibleContext activeDescendantAC =\n+                        CAccessible.getActiveDescendant(a);\n+                if (activeDescendantAC != null) {\n+                    String activeDescendantName =\n+                            activeDescendantAC.getAccessibleName();\n+                    AccessibleRole activeDescendantRole =\n+                            activeDescendantAC.getAccessibleRole();\n+                    \/\/ Move active descendant to front of list.\n+                    \/\/ List contains pairs of each selected item's\n+                    \/\/ Accessible and AccessibleRole.\n+                    ArrayList<Object> newArray = new ArrayList<Object>();\n+                    int count = childrenAndRoles.size();\n+                    Accessible currentAccessible = null;\n+                    AccessibleContext currentAC = null;\n+                    String currentName = null;\n+                    AccessibleRole currentRole = null;\n+                    for (int i = 0; i < count; i += 2) {\n+                        \/\/ Is this the active descendant?\n+                        currentAccessible = (Accessible) childrenAndRoles.get(i);\n+                        currentAC = currentAccessible.getAccessibleContext();\n+                        currentName = currentAC.getAccessibleName();\n+                        currentRole = (AccessibleRole) childrenAndRoles.get(i + 1);\n+                        if (currentName != null && currentName.equals(activeDescendantName) &&\n+                                currentRole.equals(activeDescendantRole)) {\n+                            newArray.add(0, currentAccessible);\n+                            newArray.add(1, currentRole);\n+                        } else {\n+                            newArray.add(currentAccessible);\n+                            newArray.add(currentRole);\n@@ -712,0 +722,1 @@\n+                    childrenAndRoles = newArray;\n@@ -713,0 +724,69 @@\n+            }\n+        }\n+\n+        if ((whichChildren < 0) || (whichChildren * 2 >= childrenAndRoles.size())) {\n+            return childrenAndRoles.toArray();\n+        }\n+\n+        return new Object[]{childrenAndRoles.get(whichChildren * 2), childrenAndRoles.get((whichChildren * 2) + 1)};\n+    }\n+\n+    \/\/ This method is called from the native\n+    \/\/ Each child takes up three entries in the array: one for itself, one for its role, and one for the recursion level\n+    private static Object[] getChildrenAndRolesRecursive(final Accessible a, final Component c, final int whichChildren, final boolean allowIgnored, final int level) {\n+        if (a == null) return null;\n+        return invokeAndWait(new Callable<Object[]>() {\n+            public Object[] call() throws Exception {\n+                ArrayList<Object> currentLevelChildren = new ArrayList<Object>();\n+                ArrayList<Object> allChildren = new ArrayList<Object>();\n+                ArrayList<Accessible> parentStack = new ArrayList<Accessible>();\n+                parentStack.add(a);\n+                ArrayList<Integer> indexses = new ArrayList<Integer>();\n+                Integer index = 0;\n+                int currentLevel = level;\n+                while (!parentStack.isEmpty()) {\n+                    Accessible p = parentStack.get(parentStack.size() - 1);\n+\n+                    currentLevelChildren.addAll(Arrays.asList(getChildrenAndRolesImpl(p, c, JAVA_AX_ALL_CHILDREN, allowIgnored)));\n+                    if ((currentLevelChildren.size() == 0) || (index >= currentLevelChildren.size())) {\n+                        if (!parentStack.isEmpty()) parentStack.remove(parentStack.size() - 1);\n+                        if (!indexses.isEmpty()) index = indexses.remove(indexses.size() - 1);\n+                        currentLevel -= 1;\n+                        currentLevelChildren.clear();\n+                        continue;\n+                    }\n+\n+                    Accessible ca = null;\n+                    Object obj = currentLevelChildren.get(index);\n+                    if (!(obj instanceof Accessible)) {\n+                        index += 2;\n+                        currentLevelChildren.clear();\n+                        continue;\n+                    }\n+                    ca = (Accessible) obj;\n+                    Object role = currentLevelChildren.get(index + 1);\n+                    currentLevelChildren.clear();\n+\n+                    AccessibleContext cac = ca.getAccessibleContext();\n+                    if (cac == null) {\n+                        index += 2;\n+                        continue;\n+                    }\n+\n+                    if ((cac.getAccessibleStateSet().contains(AccessibleState.SELECTED) && (whichChildren == JAVA_AX_SELECTED_CHILDREN)) ||\n+                            (cac.getAccessibleStateSet().contains(AccessibleState.VISIBLE) && (whichChildren == JAVA_AX_VISIBLE_CHILDREN)) ||\n+                            (whichChildren == JAVA_AX_ALL_CHILDREN)) {\n+                        allChildren.add(ca);\n+                        allChildren.add(role);\n+                        allChildren.add(String.valueOf(currentLevel));\n+                    }\n+\n+                    index += 2;\n+\n+                    if (cac.getAccessibleStateSet().contains(AccessibleState.EXPANDED)) {\n+                        parentStack.add(ca);\n+                        indexses.add(index);\n+                        index = 0;\n+                        currentLevel += 1;\n+                        continue;\n+                    }\n@@ -714,2 +794,0 @@\n-                if ((whichChildren < 0) || (whichChildren * 2 >= childrenAndRoles.size())) {\n-                    return childrenAndRoles.toArray();\n@@ -718,1 +796,1 @@\n-                return new Object[] { childrenAndRoles.get(whichChildren * 2), childrenAndRoles.get((whichChildren * 2) + 1) };\n+                return allChildren.toArray();\n@@ -723,2 +801,2 @@\n-    private static final int JAVA_AX_ROWS = 1;\n-    private static final int JAVA_AX_COLS = 2;\n+    @Native private static final int JAVA_AX_ROWS = 1;\n+    @Native private static final int JAVA_AX_COLS = 2;\n@@ -743,0 +821,17 @@\n+    private static int[] getTableSelectedInfo(final Accessible a, final Component c,\n+                                              final int info) {\n+        if (a == null) return null;\n+        return invokeAndWait(() -> {\n+            AccessibleContext ac = a.getAccessibleContext();\n+            AccessibleTable table = ac.getAccessibleTable();\n+            if (table != null) {\n+                if (info == JAVA_AX_COLS) {\n+                    return table.getSelectedAccessibleColumns();\n+                } else if (info == JAVA_AX_ROWS) {\n+                    return table.getSelectedAccessibleRows();\n+                }\n+            }\n+            return null;\n+        }, c);\n+    }\n+\n@@ -861,0 +956,14 @@\n+\n+    private static boolean isTreeRootVisible(Accessible a, Component c) {\n+        if (a == null) return false;\n+\n+        return invokeAndWait(new Callable<Boolean>() {\n+            public Boolean call() throws Exception {\n+                Accessible sa = CAccessible.getSwingAccessible(a);\n+                if (sa instanceof JTree) {\n+                    return ((JTree) sa).isRootVisible();\n+                }\n+                return false;\n+            }\n+        }, c);\n+    }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":172,"deletions":63,"binary":false,"changes":235,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javax.swing.JProgressBar;\n@@ -36,3 +35,0 @@\n-import javax.swing.JSlider;\n-import javax.swing.event.ChangeEvent;\n-import javax.swing.event.ChangeListener;\n@@ -78,0 +74,2 @@\n+    private static native void treeNodeExpanded(long ptr);\n+    private static native void treeNodeCollapsed(long ptr);\n@@ -140,0 +138,7 @@\n+\n+                    if (newValue == AccessibleState.EXPANDED) {\n+                        treeNodeExpanded(ptr);\n+                    } else if (newValue == AccessibleState.COLLAPSED) {\n+                        treeNodeCollapsed(ptr);\n+                    }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -3,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,5 +28,6 @@\n-import java.awt.*;\n-\n-import java.io.*;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n+import java.awt.Image;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.datatransfer.UnsupportedFlavorException;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n@@ -38,5 +38,11 @@\n-import java.util.*;\n-import java.util.regex.*;\n-import java.awt.datatransfer.*;\n-import java.nio.charset.StandardCharsets;\n-import sun.awt.datatransfer.*;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import sun.awt.datatransfer.DataTransferer;\n+import sun.awt.datatransfer.ToolkitThreadBlockedHandler;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -136,1 +142,1 @@\n-                    charset = new String((byte[]) transferable.getTransferData(javaTextEncodingFlavor), StandardCharsets.UTF_8);\n+                    charset = new String((byte[]) transferable.getTransferData(javaTextEncodingFlavor), UTF_8);\n@@ -163,1 +169,2 @@\n-            bytes = Normalizer.normalize(new String(bytes, \"UTF8\"), Form.NFC).getBytes(\"UTF8\");\n+            String src = new String(bytes, UTF_8);\n+            bytes = Normalizer.normalize(src, Form.NFC).getBytes(UTF_8);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDataTransferer.java","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -73,0 +73,4 @@\n+    public void setOpaque(boolean opaque) {\n+        \/\/ Default is no op (works well for OGL)\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CFLayer.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import sun.lwawt.macosx.CFLayer;\n@@ -138,0 +137,4 @@\n+    public void setWindowLayerOpaque(boolean opaque) {\n+        windowLayer.setOpaque(opaque);\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformView.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -931,0 +931,1 @@\n+        contentView.setWindowLayerOpaque(isOpaque);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformWindow.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -134,1 +134,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -150,0 +149,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -179,6 +179,0 @@\n-        inAWT = AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n-            @Override\n-            public Boolean run() {\n-                return !Boolean.parseBoolean(System.getProperty(\"javafx.embed.singleThread\", \"false\"));\n-            }\n-        });\n@@ -191,1 +185,9 @@\n-    private static final boolean inAWT;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean inAWT\n+            = AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n+        @Override\n+        public Boolean run() {\n+            return !Boolean.parseBoolean(\n+                    System.getProperty(\"javafx.embed.singleThread\", \"false\"));\n+        }\n+    });\n@@ -193,0 +195,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -251,0 +254,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -589,0 +593,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/LWCToolkit.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,2 +30,1 @@\n-#import \"JavaComponentAccessibility.h\"\n-#import \"JavaTextAccessibility.h\"\n+#import \"a11y\/CommonComponentAccessibility.h\"\n@@ -614,1 +613,1 @@\n-    id ax = [[[JavaComponentAccessibility alloc] initWithParent:self withEnv:env withAccessible:jcomponent withIndex:-1 withView:self withJavaRole:nil] autorelease];\n+    id ax = [[[CommonComponentAccessibility alloc] initWithParent:self withEnv:env withAccessible:jcomponent withIndex:-1 withView:self withJavaRole:nil] autorelease];\n@@ -619,5 +618,0 @@\n-- (NSArray *)accessibilityAttributeNames\n-{\n-    return [[super accessibilityAttributeNames] arrayByAddingObject:NSAccessibilityChildrenAttribute];\n-}\n-\n@@ -625,2 +619,1 @@\n-\/\/ attribute methods\n-- (id)accessibilityAttributeValue:(NSString *)attribute\n+- (id)accessibilityChildren\n@@ -629,0 +622,1 @@\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n@@ -630,5 +624,1 @@\n-    if ([attribute isEqualToString:NSAccessibilityChildrenAttribute])\n-    {\n-        JNIEnv *env = [ThreadUtilities getJNIEnv];\n-\n-        (*env)->PushLocalFrame(env, 4);\n+    (*env)->PushLocalFrame(env, 4);\n@@ -636,1 +626,1 @@\n-        id result = NSAccessibilityUnignoredChildrenForOnlyChild([self getAxData:env]);\n+    id result = NSAccessibilityUnignoredChildrenForOnlyChild([self getAxData:env]);\n@@ -638,1 +628,1 @@\n-        (*env)->PopLocalFrame(env, NULL);\n+    (*env)->PopLocalFrame(env, NULL);\n@@ -640,6 +630,1 @@\n-        return result;\n-    }\n-    else\n-    {\n-        return [super accessibilityAttributeValue:attribute];\n-    }\n+    return result;\n@@ -647,1 +632,2 @@\n-- (BOOL)accessibilityIsIgnored\n+\n+- (BOOL)isAccessibilityElement\n@@ -649,1 +635,1 @@\n-    return YES;\n+    return NO;\n@@ -659,1 +645,1 @@\n-    id result = [[self getAxData:env] accessibilityHitTest:point withEnv:env];\n+    id result = [[self getAxData:env] accessibilityHitTest:point];\n@@ -684,1 +670,1 @@\n-- (NSString *)accessibleSelectedText\n+- (NSString *)accessibilitySelectedText\n@@ -687,2 +673,9 @@\n-    if (![focused isKindOfClass:[JavaTextAccessibility class]]) return nil;\n-    return [(JavaTextAccessibility *)focused accessibilitySelectedTextAttribute];\n+    if (![focused respondsToSelector:@selector(accessibilitySelectedText)]) return nil;\n+    return [focused accessibilitySelectedText];\n+}\n+\n+- (void)setAccessibilitySelectedText:(NSString *)accessibilitySelectedText {\n+    id focused = [self accessibilityFocusedUIElement];\n+    if ([focused respondsToSelector:@selector(setAccessibilitySelectedText:)]) {\n+    [focused setAccessibilitySelectedText:accessibilitySelectedText];\n+}\n@@ -694,1 +687,1 @@\n-    NSString *selectedText = [self accessibleSelectedText];\n+    NSString *selectedText = [self accessibilitySelectedText];\n@@ -707,2 +700,2 @@\n-    if (![focused isKindOfClass:[JavaTextAccessibility class]]) return NO;\n-    [(JavaTextAccessibility *)focused accessibilitySetSelectedTextAttribute:text];\n+    if (![focused respondsToSelector:@selector(setAccessibilitySelectedText)]) return NO;\n+    [focused setAccessibilitySelectedText:text];\n@@ -718,1 +711,1 @@\n-        NSString *selectedText = [self accessibleSelectedText];\n+        NSString *selectedText = [self accessibilitySelectedText];\n@@ -731,1 +724,1 @@\n-        return [pboard setString:[self accessibleSelectedText] forType:NSStringPboardType];\n+        return [pboard setString:[self accessibilitySelectedText] forType:NSStringPboardType];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/AWTView.m","additions":27,"deletions":34,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -29,0 +29,4 @@\n+extern NSMutableDictionary *sActions;\n+extern NSMutableDictionary *sActionSelectors;\n+extern NSMutableArray *sAllActionSelectors;\n+void initializeActions();\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaAccessibilityAction.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,4 @@\n+NSMutableDictionary *sActions = nil;\n+NSMutableDictionary *sActionSelectors = nil;\n+NSMutableArray *sAllActionSelectors = nil;\n+void initializeActions();\n@@ -151,0 +155,28 @@\n+\n+void initializeActions() {\n+    int actionsCount = 5;\n+\n+    sActions = [[NSMutableDictionary alloc] initWithCapacity:actionsCount];\n+\n+    [sActions setObject:NSAccessibilityPressAction forKey:@\"click\"];\n+    [sActions setObject:NSAccessibilityIncrementAction forKey:@\"increment\"];\n+    [sActions setObject:NSAccessibilityDecrementAction forKey:@\"decrement\"];\n+    [sActions setObject:NSAccessibilityShowMenuAction forKey:@\"togglePopup\"];\n+    [sActions setObject:NSAccessibilityPressAction forKey:@\"toggleExpand\"];\n+\n+    sActionSelectors = [[NSMutableDictionary alloc] initWithCapacity:actionsCount];\n+\n+    [sActionSelectors setObject:NSStringFromSelector(@selector(accessibilityPerformPress)) forKey:NSAccessibilityPressAction];\n+    [sActionSelectors setObject:NSStringFromSelector(@selector(accessibilityPerformShowMenu)) forKey:NSAccessibilityShowMenuAction];\n+    [sActionSelectors setObject:NSStringFromSelector(@selector(accessibilityPerformDecrement)) forKey:NSAccessibilityDecrementAction];\n+    [sActionSelectors setObject:NSStringFromSelector(@selector(accessibilityPerformIncrement)) forKey:NSAccessibilityIncrementAction];\n+    [sActionSelectors setObject:NSStringFromSelector(@selector(accessibilityPerformPick)) forKey:NSAccessibilityPickAction];\n+\n+    sAllActionSelectors = [[NSMutableArray alloc] initWithCapacity:actionsCount];\n+\n+    [sAllActionSelectors addObject:NSStringFromSelector(@selector(accessibilityPerformPick))];\n+    [sAllActionSelectors addObject:NSStringFromSelector(@selector(accessibilityPerformIncrement))];\n+    [sAllActionSelectors addObject:NSStringFromSelector(@selector(accessibilityPerformDecrement))];\n+    [sAllActionSelectors addObject:NSStringFromSelector(@selector(accessibilityPerformShowMenu))];\n+    [sAllActionSelectors addObject:NSStringFromSelector(@selector(accessibilityPerformPress))];\n+}\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaAccessibilityAction.m","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+BOOL isExpanded(JNIEnv *env, jobject axContext, jobject component);\n@@ -63,0 +64,3 @@\n+BOOL ObjectEquals(JNIEnv *env, jobject a, jobject b, jobject component);\n+NSNumber* JavaNumberToNSNumber(JNIEnv *env, jobject jnumber);\n+NSValue *javaIntArrayToNSRangeValue(JNIEnv* env, jintArray array);\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaAccessibilityUtilities.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#import \"ThreadUtilities.h\"\n@@ -202,0 +203,14 @@\n+BOOL isExpanded(JNIEnv *env, jobject axContext, jobject component)\n+{\n+    GET_ACCESSIBLESTATE_CLASS_RETURN(NO);\n+    DECLARE_STATIC_FIELD_RETURN(jm_EXPANDED,\n+                                    sjc_AccessibleState,\n+                                    \"EXPANDED\",\n+                                    \"Ljavax\/accessibility\/AccessibleState;\", NO );\n+    jobject axExpandedState = (*env)->GetStaticObjectField(env, sjc_AccessibleState, jm_EXPANDED);\n+    CHECK_EXCEPTION_NULL_RETURN(axExpandedState, NO);\n+    BOOL expanded = containsAxState(env, axContext, axExpandedState, component);\n+    (*env)->DeleteLocalRef(env, axExpandedState);\n+    return expanded;\n+}\n+\n@@ -351,0 +366,69 @@\n+\/*\n+ * Returns Object.equals for the two items\n+ * This may use LWCToolkit.invokeAndWait(); don't call while holding fLock\n+ * and try to pass a component so the event happens on the correct thread.\n+ *\/\n+BOOL ObjectEquals(JNIEnv *env, jobject a, jobject b, jobject component)\n+{\n+    DECLARE_CLASS_RETURN(sjc_Object, \"java\/lang\/Object\", NO);\n+    DECLARE_METHOD_RETURN(jm_equals, sjc_Object, \"equals\", \"(Ljava\/lang\/Object;)Z\", NO);\n+\n+    if ((a == NULL) && (b == NULL)) return YES;\n+    if ((a == NULL) || (b == NULL)) return NO;\n+\n+    if (pthread_main_np() != 0) {\n+        \/\/ If we are on the AppKit thread\n+        DECLARE_CLASS_RETURN(sjc_LWCToolkit, \"sun\/lwawt\/macosx\/LWCToolkit\", NO);\n+        DECLARE_STATIC_METHOD_RETURN(jm_doEquals, sjc_LWCToolkit, \"doEquals\",\n+                                     \"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/awt\/Component;)Z\", NO);\n+        return (*env)->CallStaticBooleanMethod(env, sjc_LWCToolkit, jm_doEquals, a, b, component);\n+        CHECK_EXCEPTION();\n+    }\n+\n+    jboolean jb = (*env)->CallBooleanMethod(env, a, jm_equals, b);\n+    CHECK_EXCEPTION();\n+    return jb;\n+}\n+\n+\/*\n+ * The java\/lang\/Number concrete class could be for any of the Java primitive\n+ * numerical types or some other subclass.\n+ * All existing A11Y code uses Integer so that is what we look for first\n+ * But all must be able to return a double and NSNumber accepts a double,\n+ * so that's the fall back.\n+ *\/\n+NSNumber* JavaNumberToNSNumber(JNIEnv *env, jobject jnumber) {\n+    if (jnumber == NULL) {\n+        return nil;\n+    }\n+    DECLARE_CLASS_RETURN(jnumber_Class, \"java\/lang\/Number\", nil);\n+    DECLARE_CLASS_RETURN(jinteger_Class, \"java\/lang\/Integer\", nil);\n+    DECLARE_METHOD_RETURN(jm_intValue, jnumber_Class, \"intValue\", \"()I\", nil);\n+    DECLARE_METHOD_RETURN(jm_doubleValue, jnumber_Class, \"doubleValue\", \"()D\", nil);\n+    if ((*env)->IsInstanceOf(env, jnumber, jinteger_Class)) {\n+        jint i = (*env)->CallIntMethod(env, jnumber, jm_intValue);\n+        CHECK_EXCEPTION();\n+        return [NSNumber numberWithInteger:i];\n+    } else {\n+        jdouble d = (*env)->CallDoubleMethod(env, jnumber, jm_doubleValue);\n+        CHECK_EXCEPTION();\n+        return [NSNumber numberWithDouble:d];\n+    }\n+}\n+\n+\/*\n+ * Converts an int array to an NSRange wrapped inside an NSValue\n+ * takes [start, end] values and returns [start, end - start]\n+ *\/\n+NSValue *javaIntArrayToNSRangeValue(JNIEnv* env, jintArray array) {\n+    jint *values = (*env)->GetIntArrayElements(env, array, 0);\n+    if (values == NULL) {\n+        \/\/ Note: Java will not be on the stack here so a java exception can't happen and no need to call ExceptionCheck.\n+        NSLog(@\"%s failed calling GetIntArrayElements\", __FUNCTION__);\n+        return nil;\n+    };\n+    NSValue *value = [NSValue valueWithRange:NSMakeRange(values[0], values[1] - values[0])];\n+    (*env)->ReleaseIntArrayElements(env, array, values, 0);\n+    return value;\n+}\n+\n@@ -420,1 +504,1 @@\n-    [sRoles setObject:NSAccessibilityGridRole forKey:@\"table\"];\n+    [sRoles setObject:NSAccessibilityTableRole forKey:@\"table\"];\n@@ -426,1 +510,1 @@\n-    [sRoles setObject:NSAccessibilityBrowserRole forKey:@\"tree\"];\n+    [sRoles setObject:NSAccessibilityOutlineRole forKey:@\"tree\"];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaAccessibilityUtilities.m","additions":86,"deletions":2,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#import \"a11y\/CommonComponentAccessibility.h\"\n@@ -48,0 +47,6 @@\n+\/\/ these constants are duplicated in CAccessibility.java\n+#define JAVA_AX_ALL_CHILDREN (-1)\n+#define JAVA_AX_SELECTED_CHILDREN (-2)\n+#define JAVA_AX_VISIBLE_CHILDREN (-3)\n+\/\/ If the value is >=0, it's an index\n+\n@@ -85,1 +90,1 @@\n-@interface TabGroupAccessibility : JavaComponentAccessibility {\n+@interface TabGroupLegacyAccessibility : JavaComponentAccessibility {\n@@ -115,1 +120,1 @@\n-@interface TableAccessibility : JavaComponentAccessibility {\n+@interface TableLegacyAccessibility : JavaComponentAccessibility {\n@@ -365,6 +370,10 @@\n-    newChild = [CommonComponentAccessibility getComponentAccessibility:javaRole];\n-    if (newChild == nil) {\n-        if ([javaRole isEqualToString:@\"pagetablist\"]) {\n-            newChild = [TabGroupAccessibility alloc];\n-        } else if ([javaRole isEqualToString:@\"table\"]) {\n-            newChild = [TableAccessibility alloc];\n+    if ([javaRole isEqualToString:@\"pagetablist\"]) {\n+        newChild = [TabGroupLegacyAccessibility alloc];\n+    } else if ([javaRole isEqualToString:@\"table\"]) {\n+        newChild = [TableLegacyAccessibility alloc];\n+    } else {\n+        NSString *nsRole = [sRoles objectForKey:javaRole];\n+        if ([nsRole isEqualToString:NSAccessibilityStaticTextRole] ||\n+            [nsRole isEqualToString:NSAccessibilityTextAreaRole] ||\n+            [nsRole isEqualToString:NSAccessibilityTextFieldRole]) {\n+            newChild = [JavaTextAccessibility alloc];\n@@ -372,8 +381,1 @@\n-            NSString *nsRole = [sRoles objectForKey:javaRole];\n-            if ([nsRole isEqualToString:NSAccessibilityStaticTextRole] ||\n-                [nsRole isEqualToString:NSAccessibilityTextAreaRole] ||\n-                [nsRole isEqualToString:NSAccessibilityTextFieldRole]) {\n-                newChild = [JavaTextAccessibility alloc];\n-            } else {\n-                newChild = [JavaComponentAccessibility alloc];\n-            }\n+            newChild = [JavaComponentAccessibility alloc];\n@@ -390,1 +392,1 @@\n-         ![[parent javaRole] isEqualToString:@\"combobox\"] ) {\n+        ![[parent javaRole] isEqualToString:@\"combobox\"] ) {\n@@ -907,26 +909,0 @@\n-\/*\n- * The java\/lang\/Number concrete class could be for any of the Java primitive\n- * numerical types or some other subclass.\n- * All existing A11Y code uses Integer so that is what we look for first\n- * But all must be able to return a double and NSNumber accepts a double,\n- * so that's the fall back.\n- *\/\n-static NSNumber* JavaNumberToNSNumber(JNIEnv *env, jobject jnumber) {\n-    if (jnumber == NULL) {\n-        return nil;\n-    }\n-    DECLARE_CLASS_RETURN(jnumber_Class, \"java\/lang\/Number\", nil);\n-    DECLARE_CLASS_RETURN(jinteger_Class, \"java\/lang\/Integer\", nil);\n-    DECLARE_METHOD_RETURN(jm_intValue, jnumber_Class, \"intValue\", \"()I\", nil);\n-    DECLARE_METHOD_RETURN(jm_doubleValue, jnumber_Class, \"doubleValue\", \"()D\", nil);\n-    if ((*env)->IsInstanceOf(env, jnumber, jinteger_Class)) {\n-        jint i = (*env)->CallIntMethod(env, jnumber, jm_intValue);\n-        CHECK_EXCEPTION();\n-        return [NSNumber numberWithInteger:i];\n-    } else {\n-        jdouble d = (*env)->CallDoubleMethod(env, jnumber, jm_doubleValue);\n-        CHECK_EXCEPTION();\n-        return [NSNumber numberWithDouble:d];\n-    }\n-}\n-\n@@ -1603,1 +1579,1 @@\n-@implementation TabGroupAccessibility\n+@implementation TabGroupLegacyAccessibility\n@@ -1805,3 +1781,0 @@\n-\n-static BOOL ObjectEquals(JNIEnv *env, jobject a, jobject b, jobject component);\n-\n@@ -1876,1 +1849,1 @@\n-@implementation TableAccessibility\n+@implementation TableLegacyAccessibility\n@@ -1910,27 +1883,0 @@\n-\n-\/*\n- * Returns Object.equals for the two items\n- * This may use LWCToolkit.invokeAndWait(); don't call while holding fLock\n- * and try to pass a component so the event happens on the correct thread.\n- *\/\n-static BOOL ObjectEquals(JNIEnv *env, jobject a, jobject b, jobject component)\n-{\n-    DECLARE_CLASS_RETURN(sjc_Object, \"java\/lang\/Object\", NO);\n-    DECLARE_METHOD_RETURN(jm_equals, sjc_Object, \"equals\", \"(Ljava\/lang\/Object;)Z\", NO);\n-\n-    if ((a == NULL) && (b == NULL)) return YES;\n-    if ((a == NULL) || (b == NULL)) return NO;\n-\n-    if (pthread_main_np() != 0) {\n-        \/\/ If we are on the AppKit thread\n-        DECLARE_CLASS_RETURN(sjc_LWCToolkit, \"sun\/lwawt\/macosx\/LWCToolkit\", NO);\n-        DECLARE_STATIC_METHOD_RETURN(jm_doEquals, sjc_LWCToolkit, \"doEquals\",\n-                                     \"(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/awt\/Component;)Z\", NO);\n-        return (*env)->CallStaticBooleanMethod(env, sjc_LWCToolkit, jm_doEquals, a, b, component);\n-        CHECK_EXCEPTION();\n-    }\n-\n-    jboolean jb = (*env)->CallBooleanMethod(env, a, jm_equals, b);\n-    CHECK_EXCEPTION();\n-    return jb;\n-}\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":22,"deletions":76,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -56,17 +56,0 @@\n-\n-\/*\n- * Converts an int array to an NSRange wrapped inside an NSValue\n- * takes [start, end] values and returns [start, end - start]\n- *\/\n-NSValue *javaIntArrayToNSRangeValue(JNIEnv* env, jintArray array) {\n-    jint *values = (*env)->GetIntArrayElements(env, array, 0);\n-    if (values == NULL) {\n-        \/\/ Note: Java will not be on the stack here so a java exception can't happen and no need to call ExceptionCheck.\n-        NSLog(@\"%s failed calling GetIntArrayElements\", __FUNCTION__);\n-        return nil;\n-    };\n-    NSValue *value = [NSValue valueWithRange:NSMakeRange(values[0], values[1] - values[0])];\n-    (*env)->ReleaseIntArrayElements(env, array, values, 0);\n-    return value;\n-}\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaTextAccessibility.m","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    return [self accessibilityTitleAttribute];\n+    return [super accessibilityLabel];\n@@ -47,0 +47,10 @@\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.m","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface CellAccessibility : CommonComponentAccessibility\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CellAccessibility.h","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CellAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"TableAccessibility.h\"\n+\n+@implementation CellAccessibility\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    return NSAccessibilityCellRole;;\n+}\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    NSArray *children = [super accessibilityChildren];\n+    if (children == NULL) {\n+        NSString *javaRole = [self  javaRole];\n+        CommonComponentAccessibility *newChild = [CommonComponentAccessibility createWithParent:self\n+                                                                       accessible:self->fAccessible\n+                                                                             role:javaRole\n+                                                                            index:self->fIndex\n+                                                                          withEnv:[ThreadUtilities getJNIEnv]\n+                                                                         withView:self->fView\n+                                                                        isWrapped:NO];\n+        return [NSArray arrayWithObject:newChild];\n+    } else {\n+        return children;\n+    }\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+- (NSRange)accessibilityRowIndexRange {\n+    NSInteger location = -1;\n+    if ([[(CommonComponentAccessibility *)fParent accessibilityParent] isKindOfClass:[TableAccessibility class]]) {\n+        TableAccessibility *table = [(CommonComponentAccessibility *)fParent accessibilityParent];\n+        location = [table accessibleRowAtIndex:fIndex];\n+    }\n+\n+    return NSMakeRange(location, 1);\n+}\n+\n+- (NSRange)accessibilityColumnIndexRange {\n+    NSInteger location = -1;\n+    if ([[(CommonComponentAccessibility *)fParent accessibilityParent] isKindOfClass:[TableAccessibility class]]) {\n+        TableAccessibility *table = [(CommonComponentAccessibility *)fParent accessibilityParent];\n+        location = [table accessibleColumnAtIndex:fIndex];\n+    }\n+\n+    return NSMakeRange(location, 1);\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CellAccessibility.m","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -42,1 +42,1 @@\n-    return [self accessibilityValueAttribute];\n+    return [super accessibilityValue];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CheckboxAccessibility.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface ColumnAccessibility : CommonComponentAccessibility\n+\n+@property(readonly) NSUInteger columnNumberInTable;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ColumnAccessibility.h","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#import \"JavaAccessibilityAction.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"CellAccessibility.h\"\n+#import \"ColumnAccessibility.h\"\n+#import \"TableAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+\n+static jmethodID jm_getChildrenAndRoles = NULL;\n+#define GET_CHILDRENANDROLES_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(jm_getChildrenAndRoles, sjc_CAccessibility, \"getChildrenAndRoles\",\\\n+                      \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;IZ)[Ljava\/lang\/Object;\", ret);\n+\n+@implementation ColumnAccessibility\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    return NSAccessibilityColumnRole;\n+}\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    NSArray *children = [super accessibilityChildren];\n+    if (children == NULL) {\n+        JNIEnv *env = [ThreadUtilities getJNIEnv];\n+        CommonComponentAccessibility *parent = [self accessibilityParent];\n+        if (parent->fAccessible == NULL) return nil;\n+        GET_CHILDRENANDROLES_METHOD_RETURN(nil);\n+        jobjectArray jchildrenAndRoles = (jobjectArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getChildrenAndRoles,\n+                                                                                      parent->fAccessible, parent->fComponent, sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN, NO);\n+        CHECK_EXCEPTION();\n+        if (jchildrenAndRoles == NULL) return nil;\n+\n+        jsize arrayLen = (*env)->GetArrayLength(env, jchildrenAndRoles);\n+        NSMutableArray *childrenCells = [NSMutableArray arrayWithCapacity:arrayLen\/2];\n+\n+        NSUInteger childIndex = fIndex;\n+\n+        int inc = [(TableAccessibility *)[self accessibilityParent] accessibilityRowCount] * 2;\n+        NSInteger i = childIndex * 2;\n+        for(i; i < arrayLen; i += inc)\n+        {\n+            jobject \/* Accessible *\/ jchild = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i);\n+            jobject \/* String *\/ jchildJavaRole = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i+1);\n+\n+            NSString *childJavaRole = nil;\n+            if (jchildJavaRole != NULL) {\n+                DECLARE_CLASS_RETURN(sjc_AccessibleRole, \"javax\/accessibility\/AccessibleRole\", nil);\n+                DECLARE_FIELD_RETURN(sjf_key, sjc_AccessibleRole, \"key\", \"Ljava\/lang\/String;\", nil);\n+                jobject jkey = (*env)->GetObjectField(env, jchildJavaRole, sjf_key);\n+                CHECK_EXCEPTION();\n+                childJavaRole = JavaStringToNSString(env, jkey);\n+                (*env)->DeleteLocalRef(env, jkey);\n+            }\n+\n+            CellAccessibility *child = [[CellAccessibility alloc] initWithParent:self\n+                                                                         withEnv:env\n+                                                                  withAccessible:jchild\n+                                                                       withIndex:childIndex\n+                                                                        withView:self->fView\n+                                                                    withJavaRole:childJavaRole];\n+            [childrenCells addObject:[[child retain] autorelease]];\n+\n+            (*env)->DeleteLocalRef(env, jchild);\n+            (*env)->DeleteLocalRef(env, jchildJavaRole);\n+\n+            childIndex += (inc \/ 2);\n+        }\n+        (*env)->DeleteLocalRef(env, jchildrenAndRoles);\n+        return childrenCells;\n+    } else {\n+        return children;\n+    }\n+}\n+\n+- (NSInteger)accessibilityIndex\n+{\n+    return fIndex;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ColumnAccessibility.m","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface ComboBoxAccessibility : CommonComponentAccessibility\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ComboBoxAccessibility.h","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ComboBoxAccessibility.h\"\n+#import \"..\/JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+\n+static jmethodID sjm_getAccessibleName = NULL;\n+#define GET_ACCESSIBLENAME_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleName, sjc_CAccessibility, \"getAccessibleName\", \\\n+                     \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", ret);\n+\n+@implementation ComboBoxAccessibility\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (id)accessibilityValue {\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    if (axContext == NULL) return nil;\n+    jclass axContextClass = (*env)->GetObjectClass(env, axContext);\n+    DECLARE_METHOD_RETURN(jm_getAccessibleSelection, axContextClass, \"getAccessibleSelection\", \"(I)Ljavax\/accessibility\/Accessible;\", nil);\n+    jobject axSelectedChild = (*env)->CallObjectMethod(env, axContext, jm_getAccessibleSelection, 0);\n+    CHECK_EXCEPTION();\n+    (*env)->DeleteLocalRef(env, axContext);\n+    if (axSelectedChild == NULL) {\n+        return nil;\n+    }\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    GET_ACCESSIBLENAME_METHOD_RETURN(nil);\n+    jobject childName = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, sjm_getAccessibleName, axSelectedChild, fComponent);\n+    CHECK_EXCEPTION();\n+    if (childName == NULL) {\n+        (*env)->DeleteLocalRef(env, axSelectedChild);\n+        return nil;\n+    }\n+    NSString *selectedText = JavaStringToNSString(env, childName);\n+    (*env)->DeleteLocalRef(env, axSelectedChild);\n+    (*env)->DeleteLocalRef(env, childName);\n+    return selectedText;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ComboBoxAccessibility.m","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -29,1 +29,3 @@\n-#import \"JavaComponentAccessibility.h\"\n+#include \"jni.h\"\n+\n+#import <AppKit\/AppKit.h>\n@@ -32,5 +34,6 @@\n-\/\/ these constants are duplicated in CAccessibility.java\n-#define JAVA_AX_ALL_CHILDREN (-1)\n-#define JAVA_AX_SELECTED_CHILDREN (-2)\n-#define JAVA_AX_VISIBLE_CHILDREN (-3)\n-\/\/ If the value is >=0, it's an index\n+@interface CommonComponentAccessibility : NSAccessibilityElement {\n+    NSView *fView;\n+    NSObject *fParent;\n+\n+    NSString *fNSRole;\n+    NSString *fJavaRole;\n@@ -38,1 +41,3 @@\n-@interface CommonComponentAccessibility : JavaComponentAccessibility <NSAccessibilityElement> {\n+    jint fIndex;\n+    jobject fAccessible;\n+    jobject fComponent;\n@@ -40,0 +45,3 @@\n+    NSMutableDictionary *fActions;\n+    NSMutableArray *fActionSelectors;\n+    NSObject *fActionsLOCK;\n@@ -41,0 +49,16 @@\n+\n+@property(nonnull, readonly) NSArray *actionSelectors;\n+\n+- (id _Nonnull)initWithParent:(NSObject* _Nonnull)parent withEnv:(JNIEnv _Nonnull * _Nonnull)env withAccessible:(jobject _Nullable)accessible withIndex:(jint)index withView:(NSView* _Nonnull)view withJavaRole:(NSString* _Nullable)javaRole;\n+- (void)unregisterFromCocoaAXSystem;\n+- (void)postValueChanged;\n+- (void)postSelectedTextChanged;\n+- (void)postSelectionChanged;\n+- (void)postTitleChanged;\n+- (void)postTreeNodeExpanded;\n+- (void)postTreeNodeCollapsed;\n+- (BOOL)isEqual:(nonnull id)anObject;\n+- (BOOL)isAccessibleWithEnv:(JNIEnv _Nonnull * _Nonnull)env forAccessible:(nonnull jobject)accessible;\n+\n++ (void)postFocusChanged:(nullable id)message;\n+\n@@ -42,1 +66,38 @@\n-+ (JavaComponentAccessibility * _Nullable) getComponentAccessibility:(NSString * _Nonnull)role;\n+\n++ (CommonComponentAccessibility* _Nullable) getComponentAccessibility:(NSString* _Nonnull)role;\n++ (CommonComponentAccessibility * _Nullable) getComponentAccessibility:(NSString * _Nonnull)role andParent:(CommonComponentAccessibility * _Nonnull)parent;\n+\n++ (NSArray* _Nullable)childrenOfParent:(CommonComponentAccessibility* _Nonnull)parent withEnv:(JNIEnv _Nonnull * _Nonnull)env withChildrenCode:(NSInteger)whichChildren allowIgnored:(BOOL)allowIgnored;\n++ (NSArray* _Nullable)childrenOfParent:(CommonComponentAccessibility* _Nonnull)parent withEnv:(JNIEnv _Nonnull * _Nonnull)env withChildrenCode:(NSInteger)whichChildren allowIgnored:(BOOL)allowIgnored recursive:(BOOL)recursive;\n++ (CommonComponentAccessibility* _Nullable) createWithParent:(CommonComponentAccessibility* _Nullable)parent accessible:(jobject _Nonnull)jaccessible role:(NSString* _Nonnull)javaRole index:(jint)index withEnv:(JNIEnv _Nonnull * _Nonnull)env withView:(NSView* _Nonnull)view;\n++ (CommonComponentAccessibility* _Nullable) createWithAccessible:(jobject _Nonnull)jaccessible role:(NSString* _Nonnull)role index:(jint)index withEnv:(JNIEnv _Nonnull * _Nonnull)env withView:(NSView* _Nonnull)view;\n++ (CommonComponentAccessibility* _Nullable) createWithAccessible:(jobject _Nonnull)jaccessible withEnv:(JNIEnv _Nonnull * _Nonnull)env withView:(NSView* _Nonnull)view;\n+\n+\/\/ If the isWraped parameter is true, then the object passed as a parent was created based on the same java component,\n+\/\/ but performs a different NSAccessibilityRole of a table cell, or a list row, or tree row,\n+\/\/ and we need to create an element whose role corresponds to the role in Java.\n++ (CommonComponentAccessibility* _Nullable) createWithParent:(CommonComponentAccessibility* _Nullable)parent accessible:(jobject _Nonnull)jaccessible role:(NSString* _Nonnull)javaRole index:(jint)index withEnv:(JNIEnv _Nonnull * _Nonnull)env withView:(NSView* _Nonnull)view isWrapped:(BOOL)wrapped;\n+\n+\/\/ The current parameter is used to bypass the check for an item's index on the parent so that the item is created. This is necessary,\n+\/\/ for example, for AccessibleJTreeNode, whose currentComponent has index -1\n++ (CommonComponentAccessibility* _Nullable) createWithAccessible:(jobject _Nonnull)jaccessible withEnv:(JNIEnv _Nonnull * _Nonnull)env withView:(NSView* _Nonnull)view isCurrent:(BOOL)current;\n+\n+- (jobject _Nullable)axContextWithEnv:(JNIEnv _Nonnull * _Nonnull)env;\n+- (NSView* _Nonnull)view;\n+- (NSWindow* _Nonnull)window;\n+- (id _Nonnull)parent;\n+- (NSString* _Nonnull)javaRole;\n+\n+- (BOOL)isMenu;\n+- (BOOL)isSelected:(JNIEnv _Nonnull * _Nonnull)env;\n+- (BOOL)isSelectable:(JNIEnv _Nonnull * _Nonnull)env;\n+- (BOOL)isVisible:(JNIEnv _Nonnull * _Nonnull)env;\n+\n+- (NSArray* _Nullable)accessibleChildrenWithChildCode:(NSInteger)childCode;\n+\n+- (NSDictionary* _Nullable)getActions:(JNIEnv _Nonnull * _Nonnull)env;\n+- (void)getActionsWithEnv:(JNIEnv _Nonnull * _Nonnull)env;\n+- (BOOL)accessiblePerformAction:(NSAccessibilityActionName _Nonnull)actionName;\n+\n+- (BOOL)performAccessibleAction:(int)index;\n+\n@@ -45,1 +106,0 @@\n-- (BOOL)performAccessibleAction:(int)index;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":69,"deletions":9,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -27,1 +27,5 @@\n-#import \"JNIUtilities.h\"\n+#import <AppKit\/AppKit.h>\n+#import <JavaRuntimeSupport\/JavaRuntimeSupport.h>\n+#import <dlfcn.h>\n+#import \"JavaAccessibilityAction.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n@@ -29,0 +33,4 @@\n+#import \"JNIUtilities.h\"\n+#import \"AWTView.h\"\n+#import \"sun_lwawt_macosx_CAccessible.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n@@ -30,0 +38,2 @@\n+\n+\/\/ GET* macros defined in JavaAccessibilityUtilities.h, so they can be shared.\n@@ -31,1 +41,0 @@\n-static jmethodID sjm_getAccessibleComponent = NULL;\n@@ -33,0 +42,19 @@\n+static jmethodID sjm_getAccessibleName = NULL;\n+#define GET_ACCESSIBLENAME_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleName, sjc_CAccessibility, \"getAccessibleName\", \\\n+                     \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", ret);\n+\n+static jmethodID jm_getChildrenAndRoles = NULL;\n+#define GET_CHILDRENANDROLES_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(jm_getChildrenAndRoles, sjc_CAccessibility, \"getChildrenAndRoles\",\\\n+                      \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;IZ)[Ljava\/lang\/Object;\", ret);\n+\n+static jmethodID jm_getChildrenAndRolesRecursive = NULL;\n+#define GET_CHILDRENANDROLESRECURSIVE_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(jm_getChildrenAndRolesRecursive, sjc_CAccessibility, \"getChildrenAndRolesRecursive\",\\\n+                      \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;IZI)[Ljava\/lang\/Object;\", ret);\n+\n+static jmethodID sjm_getAccessibleComponent = NULL;\n@@ -38,0 +66,10 @@\n+static jmethodID sjm_getAccessibleIndexInParent = NULL;\n+#define GET_ACCESSIBLEINDEXINPARENT_STATIC_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleIndexInParent, sjc_CAccessibility, \"getAccessibleIndexInParent\", \\\n+                             \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)I\", ret);\n+\n+static jclass sjc_CAccessible = NULL;\n+#define GET_CACCESSIBLE_CLASS_RETURN(ret) \\\n+    GET_CLASS_RETURN(sjc_CAccessible, \"sun\/lwawt\/macosx\/CAccessible\", ret);\n+\n@@ -39,0 +77,1 @@\n+static NSMutableDictionary * _Nullable rowRolesMapForParent;\n@@ -47,0 +86,35 @@\n+- (BOOL)isMenu\n+{\n+    id role = [self accessibilityRole];\n+    return [role isEqualToString:NSAccessibilityMenuBarRole] || [role isEqualToString:NSAccessibilityMenuRole] || [role isEqualToString:NSAccessibilityMenuItemRole];\n+}\n+\n+- (BOOL)isSelected:(JNIEnv *)env\n+{\n+    if (fIndex == -1) {\n+        return NO;\n+    }\n+\n+    return isChildSelected(env, ((CommonComponentAccessibility *)[self parent])->fAccessible, fIndex, fComponent);\n+}\n+\n+- (BOOL)isSelectable:(JNIEnv *)env\n+{\n+    jobject axContext = [self axContextWithEnv:env];\n+    BOOL selectable = isSelectable(env, axContext, fComponent);\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return selectable;\n+}\n+\n+- (BOOL)isVisible:(JNIEnv *)env\n+{\n+    if (fIndex == -1) {\n+        return NO;\n+    }\n+\n+    jobject axContext = [self axContextWithEnv:env];\n+    BOOL showing = isShowing(env, axContext, fComponent);\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return showing;\n+}\n+\n@@ -51,1 +125,1 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:37];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:46];\n@@ -72,0 +146,9 @@\n+    [rolesMap setObject:@\"NavigableTextAccessibility\" forKey:@\"textarea\"];\n+    [rolesMap setObject:@\"NavigableTextAccessibility\" forKey:@\"text\"];\n+    [rolesMap setObject:@\"NavigableTextAccessibility\" forKey:@\"passwordtext\"];\n+    [rolesMap setObject:@\"NavigableTextAccessibility\" forKey:@\"dateeditor\"];\n+    [rolesMap setObject:@\"ComboBoxAccessibility\" forKey:@\"combobox\"];\n+    [rolesMap setObject:@\"TabGroupAccessibility\" forKey:@\"pagetablist\"];\n+    [rolesMap setObject:@\"ListAccessibility\" forKey:@\"list\"];\n+    [rolesMap setObject:@\"OutlineAccessibility\" forKey:@\"tree\"];\n+    [rolesMap setObject:@\"TableAccessibility\" forKey:@\"table\"];\n@@ -97,0 +180,5 @@\n+    rowRolesMapForParent = [[NSMutableDictionary alloc] initWithCapacity:2];\n+\n+    [rowRolesMapForParent setObject:@\"ListRowAccessibility\" forKey:@\"ListAccessibility\"];\n+    [rowRolesMapForParent setObject:@\"OutlineRowAccessibility\" forKey:@\"OutlineAccessibility\"];\n+\n@@ -135,1 +223,1 @@\n-+ (JavaComponentAccessibility *) getComponentAccessibility:(NSString *)role\n++ (CommonComponentAccessibility *) getComponentAccessibility:(NSString *)role\n@@ -146,1 +234,479 @@\n-    return nil;\n+    return [CommonComponentAccessibility alloc];\n+}\n+\n++ (CommonComponentAccessibility *) getComponentAccessibility:(NSString *)role andParent:(CommonComponentAccessibility *)parent\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    if (rolesMap == nil) {\n+        [self initializeRolesMap];\n+    }\n+    NSString *className = [rowRolesMapForParent objectForKey:[[parent class] className]];\n+    if (className == nil) {\n+        return [CommonComponentAccessibility getComponentAccessibility:role];\n+    }\n+    return [NSClassFromString(className) alloc];\n+}\n+\n+- (id)initWithParent:(NSObject *)parent withEnv:(JNIEnv *)env withAccessible:(jobject)accessible withIndex:(jint)index withView:(NSView *)view withJavaRole:(NSString *)javaRole\n+{\n+    self = [super init];\n+    if (self)\n+    {\n+        fParent = [parent retain];\n+        fView = [view retain];\n+        fJavaRole = [javaRole retain];\n+\n+        if (accessible != NULL) {\n+            fAccessible = (*env)->NewWeakGlobalRef(env, accessible);\n+            CHECK_EXCEPTION();\n+        }\n+\n+        jobject jcomponent = [(AWTView *)fView awtComponent:env];\n+        fComponent = (*env)->NewWeakGlobalRef(env, jcomponent);\n+        CHECK_EXCEPTION();\n+\n+        (*env)->DeleteLocalRef(env, jcomponent);\n+\n+        fIndex = index;\n+\n+        fActions = nil;\n+        fActionSelectors = nil;\n+        fActionsLOCK = [[NSObject alloc] init];\n+    }\n+    return self;\n+}\n+\n+- (void)unregisterFromCocoaAXSystem\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    static dispatch_once_t initialize_unregisterUniqueId_once;\n+    static void (*unregisterUniqueId)(id);\n+    dispatch_once(&initialize_unregisterUniqueId_once, ^{\n+        void *jrsFwk = dlopen(\"\/System\/Library\/Frameworks\/JavaVM.framework\/Frameworks\/JavaRuntimeSupport.framework\/JavaRuntimeSupport\", RTLD_LAZY | RTLD_LOCAL);\n+        unregisterUniqueId = dlsym(jrsFwk, \"JRSAccessibilityUnregisterUniqueIdForUIElement\");\n+    });\n+    if (unregisterUniqueId) unregisterUniqueId(self);\n+}\n+\n+- (void)dealloc\n+{\n+    [self unregisterFromCocoaAXSystem];\n+\n+    JNIEnv *env = [ThreadUtilities getJNIEnvUncached];\n+\n+    (*env)->DeleteWeakGlobalRef(env, fAccessible);\n+    fAccessible = NULL;\n+\n+    (*env)->DeleteWeakGlobalRef(env, fComponent);\n+    fComponent = NULL;\n+\n+    [fParent release];\n+    fParent = nil;\n+\n+    [fNSRole release];\n+    fNSRole = nil;\n+\n+    [fJavaRole release];\n+    fJavaRole = nil;\n+\n+    [fView release];\n+    fView = nil;\n+\n+    [fActions release];\n+    fActions = nil;\n+\n+    [fActionsLOCK release];\n+    fActionsLOCK = nil;\n+\n+    [fActionSelectors release];\n+    fActionSelectors = nil;\n+\n+    [super dealloc];\n+}\n+\n+- (void)postValueChanged\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, NSAccessibilityValueChangedNotification);\n+}\n+\n+- (void)postSelectedTextChanged\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, NSAccessibilitySelectedTextChangedNotification);\n+}\n+\n+- (void)postSelectionChanged\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, NSAccessibilitySelectedChildrenChangedNotification);\n+}\n+\n+-(void)postTitleChanged\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, NSAccessibilityTitleChangedNotification);\n+}\n+\n+- (void)postMenuOpened\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, (NSString *)kAXMenuOpenedNotification);\n+}\n+\n+- (void)postMenuClosed\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, (NSString *)kAXMenuClosedNotification);\n+}\n+\n+- (void)postMenuItemSelected\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, (NSString *)kAXMenuItemSelectedNotification);\n+}\n+\n+- (void)postTreeNodeExpanded\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification([[self accessibilitySelectedRows] firstObject], NSAccessibilityRowExpandedNotification);\n+}\n+\n+- (void)postTreeNodeCollapsed\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification([[self accessibilitySelectedRows] firstObject], NSAccessibilityRowCollapsedNotification);\n+}\n+\n+- (BOOL)isEqual:(id)anObject\n+{\n+    if (![anObject isKindOfClass:[self class]]) return NO;\n+    CommonComponentAccessibility *accessibility = (CommonComponentAccessibility *)anObject;\n+\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    return (*env)->IsSameObject(env, accessibility->fAccessible, fAccessible);\n+}\n+\n+- (BOOL)isAccessibleWithEnv:(JNIEnv *)env forAccessible:(jobject)accessible\n+{\n+    return (*env)->IsSameObject(env, fAccessible, accessible);\n+}\n+\n++ (void)initialize\n+{\n+    if (sRoles == nil) {\n+        initializeRoles();\n+    }\n+    if (sActions == nil) {\n+        initializeActions();\n+    }\n+}\n+\n++ (void)postFocusChanged:(id)message\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification([NSApp accessibilityFocusedUIElement], NSAccessibilityFocusedUIElementChangedNotification);\n+}\n+\n++ (jobject) getCAccessible:(jobject)jaccessible withEnv:(JNIEnv *)env {\n+    DECLARE_CLASS_RETURN(sjc_Accessible, \"javax\/accessibility\/Accessible\", NULL);\n+    GET_CACCESSIBLE_CLASS_RETURN(NULL);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_getCAccessible, sjc_CAccessible, \"getCAccessible\",\n+                                \"(Ljavax\/accessibility\/Accessible;)Lsun\/lwawt\/macosx\/CAccessible;\", NULL);\n+    if ((*env)->IsInstanceOf(env, jaccessible, sjc_CAccessible)) {\n+        return jaccessible;\n+    } else if ((*env)->IsInstanceOf(env, jaccessible, sjc_Accessible)) {\n+        jobject o = (*env)->CallStaticObjectMethod(env, sjc_CAccessible,  sjm_getCAccessible, jaccessible);\n+        CHECK_EXCEPTION();\n+        return o;\n+    }\n+    return NULL;\n+}\n+\n++ (NSArray *)childrenOfParent:(CommonComponentAccessibility *)parent withEnv:(JNIEnv *)env withChildrenCode:(NSInteger)whichChildren allowIgnored:(BOOL)allowIgnored\n+{\n+    return [CommonComponentAccessibility childrenOfParent:parent withEnv:env withChildrenCode:whichChildren allowIgnored:allowIgnored recursive:NO];\n+}\n+\n++ (NSArray *)childrenOfParent:(CommonComponentAccessibility *)parent withEnv:(JNIEnv *)env withChildrenCode:(NSInteger)whichChildren allowIgnored:(BOOL)allowIgnored recursive:(BOOL)recursive\n+{\n+    if (parent->fAccessible == NULL) return nil;\n+    jobjectArray jchildrenAndRoles = NULL;\n+    if (recursive) {\n+        GET_CHILDRENANDROLESRECURSIVE_METHOD_RETURN(nil);\n+        jchildrenAndRoles = (jobjectArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getChildrenAndRolesRecursive,\n+                      parent->fAccessible, parent->fComponent, whichChildren, allowIgnored, 0);\n+        CHECK_EXCEPTION();\n+    } else {\n+        GET_CHILDRENANDROLES_METHOD_RETURN(nil);\n+        jchildrenAndRoles = (jobjectArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getChildrenAndRoles,\n+                      parent->fAccessible, parent->fComponent, whichChildren, allowIgnored);\n+        CHECK_EXCEPTION();\n+    }\n+    if (jchildrenAndRoles == NULL) return nil;\n+\n+    jsize arrayLen = (*env)->GetArrayLength(env, jchildrenAndRoles);\n+    NSMutableArray *children = [NSMutableArray arrayWithCapacity:(recursive ? arrayLen\/3 : arrayLen\/2)]; \/\/childrenAndRoles array contains two elements (child, role) for each child\n+\n+    NSInteger i;\n+    NSUInteger childIndex = (whichChildren >= 0) ? whichChildren : 0; \/\/ if we're getting one particular child, make sure to set its index correctly\n+    int inc = recursive ? 3 : 2;\n+    for(i = 0; i < arrayLen; i+=inc)\n+    {\n+        jobject \/* Accessible *\/ jchild = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i);\n+        jobject \/* String *\/ jchildJavaRole = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i+1);\n+\n+        NSString *childJavaRole = nil;\n+        if (jchildJavaRole != NULL) {\n+            DECLARE_CLASS_RETURN(sjc_AccessibleRole, \"javax\/accessibility\/AccessibleRole\", nil);\n+            DECLARE_FIELD_RETURN(sjf_key, sjc_AccessibleRole, \"key\", \"Ljava\/lang\/String;\", nil);\n+            jobject jkey = (*env)->GetObjectField(env, jchildJavaRole, sjf_key);\n+            CHECK_EXCEPTION();\n+            childJavaRole = JavaStringToNSString(env, jkey);\n+            (*env)->DeleteLocalRef(env, jkey);\n+        }\n+\n+        CommonComponentAccessibility *child = [self createWithParent:parent accessible:jchild role:childJavaRole index:childIndex withEnv:env withView:parent->fView];\n+\n+        if (recursive && [child respondsToSelector:@selector(accessibleLevel)]) {\n+            jobject jLevel = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i+2);\n+            NSString *sLevel = nil;\n+            if (jLevel != NULL) {\n+                sLevel = JavaStringToNSString(env, jLevel);\n+                if (sLevel != nil) {\n+                    int level = sLevel.intValue;\n+                    [child setAccessibleLevel:level];\n+                }\n+                (*env)->DeleteLocalRef(env, jLevel);\n+            }\n+        }\n+\n+        (*env)->DeleteLocalRef(env, jchild);\n+        (*env)->DeleteLocalRef(env, jchildJavaRole);\n+\n+        [children addObject:child];\n+        childIndex++;\n+    }\n+    (*env)->DeleteLocalRef(env, jchildrenAndRoles);\n+\n+    return children;\n+}\n+\n++ (CommonComponentAccessibility *) createWithAccessible:(jobject)jaccessible withEnv:(JNIEnv *)env withView:(NSView *)view\n+{\n+    return [CommonComponentAccessibility createWithAccessible:jaccessible withEnv:env withView:view isCurrent:NO];\n+}\n+\n++ (CommonComponentAccessibility *) createWithAccessible:(jobject)jaccessible withEnv:(JNIEnv *)env withView:(NSView *)view isCurrent:(BOOL)current\n+{\n+    GET_ACCESSIBLEINDEXINPARENT_STATIC_METHOD_RETURN(nil);\n+    CommonComponentAccessibility *ret = nil;\n+    jobject jcomponent = [(AWTView *)view awtComponent:env];\n+    jint index = (*env)->CallStaticIntMethod(env, sjc_CAccessibility, sjm_getAccessibleIndexInParent, jaccessible, jcomponent);\n+    CHECK_EXCEPTION();\n+    if (index >= 0 || current) {\n+      NSString *javaRole = getJavaRole(env, jaccessible, jcomponent);\n+      ret = [self createWithAccessible:jaccessible role:javaRole index:index withEnv:env withView:view];\n+    }\n+    (*env)->DeleteLocalRef(env, jcomponent);\n+    return ret;\n+}\n+\n++ (CommonComponentAccessibility *) createWithAccessible:(jobject)jaccessible role:(NSString *)javaRole index:(jint)index withEnv:(JNIEnv *)env withView:(NSView *)view\n+{\n+    return [self createWithParent:nil accessible:jaccessible role:javaRole index:index withEnv:env withView:view];\n+}\n+\n++ (CommonComponentAccessibility *) createWithParent:(CommonComponentAccessibility *)parent accessible:(jobject)jaccessible role:(NSString *)javaRole index:(jint)index withEnv:(JNIEnv *)env withView:(NSView *)view\n+{\n+    return [CommonComponentAccessibility createWithParent:parent accessible:jaccessible role:javaRole index:index withEnv:env withView:view isWrapped:NO];\n+}\n+\n++ (CommonComponentAccessibility *) createWithParent:(CommonComponentAccessibility *)parent accessible:(jobject)jaccessible role:(NSString *)javaRole index:(jint)index withEnv:(JNIEnv *)env withView:(NSView *)view isWrapped:(BOOL)wrapped\n+{\n+    GET_CACCESSIBLE_CLASS_RETURN(NULL);\n+    DECLARE_FIELD_RETURN(jf_ptr, sjc_CAccessible, \"ptr\", \"J\", NULL);\n+    \/\/ try to fetch the jCAX from Java, and return autoreleased\n+    jobject jCAX = [CommonComponentAccessibility getCAccessible:jaccessible withEnv:env];\n+    if (jCAX == NULL) return nil;\n+    if (!wrapped) { \/\/ If wrapped is true, then you don't need to get an existing instance, you need to create a new one\n+        CommonComponentAccessibility *value = (CommonComponentAccessibility *) jlong_to_ptr((*env)->GetLongField(env, jCAX, jf_ptr));\n+        if (value != nil) {\n+            (*env)->DeleteLocalRef(env, jCAX);\n+            return [[value retain] autorelease];\n+        }\n+    }\n+\n+    \/\/ otherwise, create a new instance\n+    CommonComponentAccessibility *newChild = [CommonComponentAccessibility getComponentAccessibility:javaRole andParent:parent];\n+\n+    \/\/ must init freshly -alloc'd object\n+    [newChild initWithParent:parent withEnv:env withAccessible:jCAX withIndex:index withView:view withJavaRole:javaRole]; \/\/ must init new instance\n+\n+    \/\/ If creating a JPopupMenu (not a combobox popup list) need to fire menuOpened.\n+    \/\/ This is the only way to know if the menu is opening; visible state change\n+    \/\/ can't be caught because the listeners are not set up in time.\n+    if ( [javaRole isEqualToString:@\"popupmenu\"] &&\n+         ![[parent javaRole] isEqualToString:@\"combobox\"] ) {\n+        [newChild postMenuOpened];\n+    }\n+\n+    \/\/ must hard retain pointer poked into Java object\n+    [newChild retain];\n+    (*env)->SetLongField(env, jCAX, jf_ptr, ptr_to_jlong(newChild));\n+\n+    \/\/ the link is removed in the wrapper\n+    if (!wrapped) {\n+        (*env)->DeleteLocalRef(env, jCAX);\n+    }\n+\n+    \/\/ return autoreleased instance\n+    return [newChild autorelease];\n+}\n+\n+- (NSDictionary *)getActions:(JNIEnv *)env\n+{\n+    @synchronized(fActionsLOCK) {\n+        if (fActions == nil) {\n+            [self getActionsWithEnv:env];\n+        }\n+    }\n+\n+    return fActions;\n+}\n+\n+- (void)getActionsWithEnv:(JNIEnv *)env\n+{\n+    GET_CACCESSIBILITY_CLASS();\n+    DECLARE_STATIC_METHOD(jm_getAccessibleAction, sjc_CAccessibility, \"getAccessibleAction\",\n+                           \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleAction;\");\n+\n+    jobject axAction = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getAccessibleAction, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axAction != NULL) {\n+        jclass jc_AccessibleAction = NULL;\n+        GET_CLASS(jc_AccessibleAction, \"javax\/accessibility\/AccessibleAction\");\n+        jmethodID jm_getAccessibleActionCount = NULL;\n+        GET_METHOD(jm_getAccessibleActionCount, jc_AccessibleAction, \"getAccessibleActionCount\", \"()I\");\n+        jint count = (*env)->CallIntMethod(env, axAction, jm_getAccessibleActionCount);\n+        fActions = [[NSMutableDictionary alloc] initWithCapacity:count];\n+        fActionSelectors = [[NSMutableArray alloc] initWithCapacity:count];\n+        for (int i =0; i < count; i++) {\n+            JavaAxAction *action = [[JavaAxAction alloc] initWithEnv:env withAccessibleAction:axAction withIndex:i withComponent:fComponent];\n+            if ([fParent isKindOfClass:[CommonComponentAccessibility class]] &&\n+                [(CommonComponentAccessibility *)fParent isMenu] &&\n+                [[sActions objectForKey:[action getDescription]] isEqualToString:NSAccessibilityPressAction]) {\n+                [fActions setObject:action forKey:NSAccessibilityPickAction];\n+                [fActionSelectors addObject:[sActionSelectors objectForKey:NSAccessibilityPickAction]];\n+            } else {\n+                [fActions setObject:action forKey:[sActions objectForKey:[action getDescription]]];\n+                [fActionSelectors addObject:[sActionSelectors objectForKey:[sActions objectForKey:[action getDescription]]]];\n+            }\n+            [action release];\n+        }\n+        (*env)->DeleteLocalRef(env, axAction);\n+    }\n+}\n+\n+- (BOOL)accessiblePerformAction:(NSAccessibilityActionName)actionName {\n+    NSMutableDictionary *currentAction = [self getActions:[ThreadUtilities getJNIEnv]];\n+    if (currentAction == nil) {\n+        return NO;\n+    }\n+    if ([[currentAction allKeys] containsObject:actionName]) {\n+        [(JavaAxAction *)[currentAction objectForKey:actionName] perform];\n+        return YES;;\n+    }\n+    return NO;\n+}\n+\n+- (NSArray *)actionSelectors {\n+    @synchronized(fActionsLOCK) {\n+        if (fActionSelectors == nil) {\n+            [self getActionsWithEnv:[ThreadUtilities getJNIEnv]];\n+        }\n+    }\n+\n+    return [NSArray arrayWithArray:fActionSelectors];\n+}\n+\n+- (NSArray *)accessibleChildrenWithChildCode:(NSInteger)childCode\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    NSArray *children = [CommonComponentAccessibility childrenOfParent:self\n+                                                    withEnv:env\n+                                                    withChildrenCode:childCode\n+                                                    allowIgnored:([[self accessibilityRole] isEqualToString:NSAccessibilityListRole] || [[self accessibilityRole] isEqualToString:NSAccessibilityOutlineRole] || [[self accessibilityRole] isEqualToString:NSAccessibilityTableRole])\n+                                                             recursive:[[self accessibilityRole] isEqualToString:NSAccessibilityOutlineRole]];\n+\n+    NSArray *value = nil;\n+    if ([children count] > 0) {\n+        value = children;\n+    }\n+\n+    return value;\n+}\n+\n+- (NSView *)view\n+{\n+    return fView;\n+}\n+\n+- (NSWindow *)window\n+{\n+    return [[self view] window];\n+}\n+\n+- (id)parent\n+{\n+    if(fParent == nil) {\n+        JNIEnv* env = [ThreadUtilities getJNIEnv];\n+        GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+        DECLARE_STATIC_METHOD_RETURN(sjm_getAccessibleParent, sjc_CAccessibility, \"getAccessibleParent\",\n+                                 \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/Accessible;\", nil);\n+        GET_CACCESSIBLE_CLASS_RETURN(nil);\n+        DECLARE_STATIC_METHOD_RETURN(sjm_getSwingAccessible, sjc_CAccessible, \"getSwingAccessible\",\n+                                 \"(Ljavax\/accessibility\/Accessible;)Ljavax\/accessibility\/Accessible;\", nil);\n+        DECLARE_CLASS_RETURN(sjc_Window, \"java\/awt\/Window\", nil);\n+\n+        jobject jparent = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,  sjm_getAccessibleParent, fAccessible, fComponent);\n+        CHECK_EXCEPTION();\n+\n+        if (jparent == NULL) {\n+            fParent = fView;\n+        } else {\n+            AWTView *view = fView;\n+            jobject jax = (*env)->CallStaticObjectMethod(env, sjc_CAccessible, sjm_getSwingAccessible, fAccessible);\n+            CHECK_EXCEPTION();\n+\n+            if ((*env)->IsInstanceOf(env, jax, sjc_Window)) {\n+                \/\/ In this case jparent is an owner toplevel and we should retrieve its own view\n+                view = [AWTView awtView:env ofAccessible:jparent];\n+            }\n+            if (view != nil) {\n+                fParent = [CommonComponentAccessibility createWithAccessible:jparent withEnv:env withView:view];\n+            }\n+            if (fParent == nil) {\n+                fParent = fView;\n+            }\n+            (*env)->DeleteLocalRef(env, jparent);\n+            (*env)->DeleteLocalRef(env, jax );\n+        }\n+        [fParent retain];\n+    }\n+    return fParent;\n+}\n+\n+- (NSString *)javaRole\n+{\n+    if(fJavaRole == nil) {\n+        JNIEnv* env = [ThreadUtilities getJNIEnv];\n+        fJavaRole = getJavaRole(env, fAccessible, fComponent);\n+        [fJavaRole retain];\n+    }\n+    return fJavaRole;\n+}\n+\n+- (jobject)axContextWithEnv:(JNIEnv *)env\n+{\n+    return getAxContext(env, fAccessible, fComponent);\n@@ -150,0 +716,54 @@\n+\n+- (BOOL)isAccessibilityElement\n+{\n+    return ![[self accessibilityRole] isEqualToString:JavaAccessibilityIgnore];\n+}\n+\n+- (NSString *)accessibilityLabel\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    GET_ACCESSIBLENAME_METHOD_RETURN(nil);\n+    jobject val = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, sjm_getAccessibleName, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (val == NULL) {\n+        return nil;\n+    }\n+    NSString* str = JavaStringToNSString(env, val);\n+    (*env)->DeleteLocalRef(env, val);\n+    return str;\n+}\n+\n+- (NSString *)accessibilityHelp\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_getAccessibleDescription, sjc_CAccessibility, \"getAccessibleDescription\",\n+                                 \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+    jobject val = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                                   sjm_getAccessibleDescription, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (val == NULL) {\n+        return nil;\n+    }\n+    NSString* str = JavaStringToNSString(env, val);\n+    (*env)->DeleteLocalRef(env, val);\n+    return str;\n+}\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    return [self accessibleChildrenWithChildCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN];\n+}\n+\n+- (NSArray *)accessibilitySelectedChildren\n+{\n+    return [self accessibleChildrenWithChildCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_SELECTED_CHILDREN];\n+}\n+\n+- (NSArray *)accessibilityVisibleChildren\n+{\n+    return [self accessibleChildrenWithChildCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_VISIBLE_CHILDREN];\n+}\n+\n@@ -171,1 +791,360 @@\n-    return [self accessibilityParentAttribute];\n+    return NSAccessibilityUnignoredAncestor([self parent]);\n+}\n+\n+- (BOOL)isAccessibilityEnabled\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(NO);\n+    DECLARE_STATIC_METHOD_RETURN(jm_isEnabled, sjc_CAccessibility, \"isEnabled\", \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Z\", NO);\n+\n+    BOOL value = (*env)->CallStaticBooleanMethod(env, sjc_CAccessibility, jm_isEnabled, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+\n+    return value;\n+}\n+\n+- (id)accessibilityApplicationFocusedUIElement\n+{\n+    return [self accessibilityFocusedUIElement];\n+}\n+\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    if (fNSRole == nil) {\n+        NSString *javaRole = [self javaRole];\n+        fNSRole = [sRoles objectForKey:javaRole];\n+        \/\/ The sRoles NSMutableDictionary maps popupmenu to Mac's popup button.\n+        \/\/ JComboBox behavior currently relies on this.  However this is not the\n+        \/\/ proper mapping for a JPopupMenu so fix that.\n+        if ( [javaRole isEqualToString:@\"popupmenu\"] &&\n+             ![[[self parent] javaRole] isEqualToString:@\"combobox\"] ) {\n+             fNSRole = NSAccessibilityMenuRole;\n+        }\n+        if (fNSRole == nil) {\n+            \/\/ this component has assigned itself a custom AccessibleRole not in the sRoles array\n+            fNSRole = javaRole;\n+        }\n+        [fNSRole retain];\n+    }\n+    return fNSRole;\n+}\n+\n+- (NSString *)accessibilityRoleDescription\n+{\n+    \/\/ first ask AppKit for its accessible role description for a given AXRole\n+    NSString *value = NSAccessibilityRoleDescription([self accessibilityRole], nil);\n+\n+    if (value == nil) {\n+        \/\/ query java if necessary\n+        JNIEnv* env = [ThreadUtilities getJNIEnv];\n+        GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+        DECLARE_STATIC_METHOD_RETURN(jm_getAccessibleRoleDisplayString, sjc_CAccessibility, \"getAccessibleRoleDisplayString\",\n+                                     \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+\n+        jobject axRole = (*env)->CallStaticObjectMethod(env, jm_getAccessibleRoleDisplayString, fAccessible, fComponent);\n+        CHECK_EXCEPTION();\n+        if (axRole != NULL) {\n+            value = JavaStringToNSString(env, axRole);\n+            (*env)->DeleteLocalRef(env, axRole);\n+        } else {\n+            value = @\"unknown\";\n+        }\n+    }\n+\n+    return value;\n+}\n+\n+- (BOOL)isAccessibilityFocused\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(NO);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_isFocusTraversable, sjc_CAccessibility, \"isFocusTraversable\",\n+                                 \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Z\", NO);\n+    \/\/ According to javadoc, a component that is focusable will return true from isFocusTraversable,\n+    \/\/ as well as having AccessibleState.FOCUSABLE in its AccessibleStateSet.\n+    \/\/ We use the former heuristic; if the component focus-traversable, add a focused attribute\n+    \/\/ See also initializeAttributeNamesWithEnv:\n+    if ((*env)->CallStaticBooleanMethod(env, sjc_CAccessibility, sjm_isFocusTraversable, fAccessible, fComponent)) {\n+        return [self isEqual:[NSApp accessibilityFocusedUIElement]];\n+    }\n+    CHECK_EXCEPTION();\n+\n+    return NO;\n+}\n+\n+- (void)setAccessibilityFocused:(BOOL)accessibilityFocused\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    GET_CACCESSIBILITY_CLASS();\n+    DECLARE_STATIC_METHOD(jm_requestFocus, sjc_CAccessibility, \"requestFocus\", \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)V\");\n+\n+    if (accessibilityFocused)\n+    {\n+        (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_requestFocus, fAccessible, fComponent);\n+        CHECK_EXCEPTION();\n+    }\n+}\n+\n+- (NSUInteger)accessibilityIndexOfChild:(id)child\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_ACCESSIBLEINDEXINPARENT_STATIC_METHOD_RETURN(0);\n+    jint returnValue =\n+        (*env)->CallStaticIntMethod( env,\n+                                sjc_CAccessibility,\n+                                sjm_getAccessibleIndexInParent,\n+                                ((CommonComponentAccessibility *)child)->fAccessible,\n+                                ((CommonComponentAccessibility *)child)->fComponent );\n+    CHECK_EXCEPTION();\n+    return (returnValue == -1) ? NSNotFound : returnValue;\n+}\n+\n+- (NSInteger)accessibilityIndex\n+{\n+    int index = 0;\n+    if (fParent != NULL) {\n+        index = [fParent accessibilityIndexOfChild:self];\n+    }\n+    return index;\n+}\n+\n+- (id)accessibilityMaxValue\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getMaximumAccessibleValue, sjc_CAccessibility, \"getMaximumAccessibleValue\",\n+                                  \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/Number;\", nil);\n+\n+    jobject axValue = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getMaximumAccessibleValue, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axValue == NULL) {\n+        return [NSNumber numberWithInt:0];\n+    }\n+    NSNumber* num = JavaNumberToNSNumber(env, axValue);\n+    (*env)->DeleteLocalRef(env, axValue);\n+    return num;\n+}\n+\n+- (id)accessibilityMinValue\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getMinimumAccessibleValue, sjc_CAccessibility, \"getMinimumAccessibleValue\",\n+                                  \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/Number;\", nil);\n+\n+    jobject axValue = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getMinimumAccessibleValue, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axValue == NULL) {\n+        return [NSNumber numberWithInt:0];\n+    }\n+    NSNumber* num = JavaNumberToNSNumber(env, axValue);\n+    (*env)->DeleteLocalRef(env, axValue);\n+    return num;\n+}\n+\n+- (NSAccessibilityOrientation)accessibilityOrientation\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+\n+    \/\/ cmcnote - should batch these two calls into one that returns an array of two bools, one for vertical and one for horiz\n+    if (isVertical(env, axContext, fComponent)) {\n+        (*env)->DeleteLocalRef(env, axContext);\n+        return NSAccessibilityOrientationVertical;\n+    }\n+    if (isHorizontal(env, axContext, fComponent)) {\n+        (*env)->DeleteLocalRef(env, axContext);\n+        return NSAccessibilityOrientationHorizontal;\n+    }\n+    return NSAccessibilityOrientationUnknown;\n+}\n+\n+- (NSPoint)accessibilityActivationPoint\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_ACCESSIBLECOMPONENT_STATIC_METHOD_RETURN(NSPointFromString(@\"\"));\n+    jobject axComponent = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, sjm_getAccessibleComponent,\n+                           fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+\n+    \/\/ NSAccessibility wants the bottom left point of the object in\n+    \/\/ bottom left based screen coords\n+\n+    \/\/ Get the java screen coords, and make a NSPoint of the bottom left of the AxComponent.\n+    NSSize size = getAxComponentSize(env, axComponent, fComponent);\n+    NSPoint point = getAxComponentLocationOnScreen(env, axComponent, fComponent);\n+    (*env)->DeleteLocalRef(env, axComponent);\n+\n+    point.y += size.height;\n+\n+    \/\/ Now make it into Cocoa screen coords.\n+    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n+\n+    return point;\n+}\n+\n+- (BOOL)isAccessibilitySelected\n+{\n+    return [self isSelected:[ThreadUtilities getJNIEnv]];\n+}\n+\n+- (void)setAccessibilitySelected:(BOOL)accessibilitySelected\n+{\n+   JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS();\n+    DECLARE_STATIC_METHOD(jm_requestSelection,\n+                          sjc_CAccessibility,\n+                          \"requestSelection\",\n+                          \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)V\");\n+\n+    if (accessibilitySelected) {\n+        (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_requestSelection, fAccessible, fComponent);\n+        CHECK_EXCEPTION();\n+    }\n+}\n+\n+- (id)accessibilityValue\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    \/\/ Need to handle popupmenus differently.\n+    \/\/\n+    \/\/ At least for now don't handle combo box menus.\n+    \/\/ This may change when later fixing issues which currently\n+    \/\/ exist for combo boxes, but for now the following is only\n+    \/\/ for JPopupMenus, not for combobox menus.\n+    id parent = [self parent];\n+    if ( [[self javaRole] isEqualToString:@\"popupmenu\"] &&\n+         ![[parent javaRole] isEqualToString:@\"combobox\"] ) {\n+        NSArray *children =\n+            [CommonComponentAccessibility childrenOfParent:self\n+                                        withEnv:env\n+                                        withChildrenCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN\n+                                        allowIgnored:YES];\n+        if ([children count] > 0) {\n+            \/\/ handle case of AXMenuItem\n+            \/\/ need to ask menu what is selected\n+            NSArray *selectedChildrenOfMenu =\n+                [self accessibilitySelectedChildren];\n+            CommonComponentAccessibility *selectedMenuItem =\n+                [selectedChildrenOfMenu objectAtIndex:0];\n+            if (selectedMenuItem != nil) {\n+                GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+                GET_ACCESSIBLENAME_METHOD_RETURN(nil);\n+                jobject itemValue =\n+                        (*env)->CallStaticObjectMethod( env,\n+                                                   sjm_getAccessibleName,\n+                                                   selectedMenuItem->fAccessible,\n+                                                   selectedMenuItem->fComponent );\n+                CHECK_EXCEPTION();\n+                if (itemValue == NULL) {\n+                    return nil;\n+                }\n+                NSString* itemString = JavaStringToNSString(env, itemValue);\n+                (*env)->DeleteLocalRef(env, itemValue);\n+                return itemString;\n+            } else {\n+                return nil;\n+            }\n+        }\n+    }\n+\n+    \/\/ ask Java for the component's accessibleValue. In java, the \"accessibleValue\" just means a numerical value\n+    \/\/ a text value is taken care of in JavaTextAccessibility\n+\n+    \/\/ cmcnote should coalesce these calls into one java call\n+    NSNumber *num = nil;\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_getAccessibleValue, sjc_CAccessibility, \"getAccessibleValue\",\n+                \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleValue;\", nil);\n+    jobject axValue = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, sjm_getAccessibleValue, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axValue != NULL) {\n+        DECLARE_STATIC_METHOD_RETURN(jm_getCurrentAccessibleValue, sjc_CAccessibility, \"getCurrentAccessibleValue\",\n+                                     \"(Ljavax\/accessibility\/AccessibleValue;Ljava\/awt\/Component;)Ljava\/lang\/Number;\", nil);\n+        jobject str = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getCurrentAccessibleValue, axValue, fComponent);\n+        CHECK_EXCEPTION();\n+        if (str != NULL) {\n+            num = JavaNumberToNSNumber(env, str);\n+            (*env)->DeleteLocalRef(env, str);\n+        }\n+        (*env)->DeleteLocalRef(env, axValue);\n+    }\n+    if (num == nil) {\n+        num = [NSNumber numberWithInt:0];\n+    }\n+    return num;\n+}\n+\n+- (id)accessibilityHitTest:(NSPoint)point\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    DECLARE_CLASS_RETURN(jc_Container, \"java\/awt\/Container\", nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_accessibilityHitTest, sjc_CAccessibility, \"accessibilityHitTest\",\n+                                 \"(Ljava\/awt\/Container;FF)Ljavax\/accessibility\/Accessible;\", nil);\n+\n+    \/\/ Make it into java screen coords\n+    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n+\n+    jobject jparent = fComponent;\n+\n+    id value = nil;\n+    if ((*env)->IsInstanceOf(env, jparent, jc_Container)) {\n+        jobject jaccessible = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_accessibilityHitTest,\n+                               jparent, (jfloat)point.x, (jfloat)point.y);\n+        CHECK_EXCEPTION();\n+        if (jaccessible != NULL) {\n+            value = [CommonComponentAccessibility createWithAccessible:jaccessible withEnv:env withView:fView];\n+            (*env)->DeleteLocalRef(env, jaccessible);\n+        }\n+    }\n+\n+    if (value == nil) {\n+        value = self;\n+    }\n+\n+    if (![value isAccessibilityElement]) {\n+        value = NSAccessibilityUnignoredAncestor(value);\n+    }\n+\n+#ifdef JAVA_AX_DEBUG\n+    NSLog(@\"%s: %@\", __FUNCTION__, value);\n+#endif\n+    return value;\n+}\n+\n+- (id)accessibilityFocusedUIElement\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getFocusOwner, sjc_CAccessibility, \"getFocusOwner\",\n+                                  \"(Ljava\/awt\/Component;)Ljavax\/accessibility\/Accessible;\", nil);\n+    id value = nil;\n+\n+    NSWindow* hostWindow = [[self->fView window] retain];\n+    jobject focused = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getFocusOwner, fComponent);\n+    [hostWindow release];\n+    CHECK_EXCEPTION();\n+\n+    if (focused != NULL) {\n+        DECLARE_CLASS_RETURN(sjc_Accessible, \"javax\/accessibility\/Accessible\", nil);\n+        if ((*env)->IsInstanceOf(env, focused, sjc_Accessible)) {\n+            value = [CommonComponentAccessibility createWithAccessible:focused withEnv:env withView:fView];\n+        }\n+        CHECK_EXCEPTION();\n+        (*env)->DeleteLocalRef(env, focused);\n+    }\n+\n+    if (value == nil) {\n+        value = self;\n+    }\n+#ifdef JAVA_AX_DEBUG\n+    NSLog(@\"%s: %@\", __FUNCTION__, value);\n+#endif\n+    return value;\n+}\n+\n+- (id)accessibilityWindow {\n+    return [self window];\n@@ -175,0 +1154,1 @@\n+\n@@ -190,2 +1170,28 @@\n-- (BOOL)isAccessibilityElement {\n-    return YES;\n+\/\/ NSAccessibilityActions methods\n+\n+- (BOOL)isAccessibilitySelectorAllowed:(SEL)selector {\n+    if ([sAllActionSelectors containsObject:NSStringFromSelector(selector)] &&\n+        ![[self actionSelectors] containsObject:NSStringFromSelector(selector)]) {\n+        return NO;\n+    }\n+    return [super isAccessibilitySelectorAllowed:selector];\n+}\n+\n+- (BOOL)accessibilityPerformPick {\n+    return [self accessiblePerformAction:NSAccessibilityPickAction];\n+}\n+\n+- (BOOL)accessibilityPerformPress {\n+    return [self accessiblePerformAction:NSAccessibilityPressAction];\n+}\n+\n+- (BOOL)accessibilityPerformShowMenu {\n+    return [self accessiblePerformAction:NSAccessibilityShowMenuAction];\n+}\n+\n+- (BOOL)accessibilityPerformDecrement {\n+    return [self accessiblePerformAction:NSAccessibilityDecrementAction];\n+}\n+\n+- (BOOL)accessibilityPerformIncrement {\n+    return [self accessiblePerformAction:NSAccessibilityIncrementAction];\n@@ -195,0 +1201,32 @@\n+\n+\/*\n+ * Class:     sun_lwawt_macosx_CAccessible\n+ * Method:    treeNodeExpanded\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_lwawt_macosx_CAccessible_treeNodeExpanded\n+  (JNIEnv *env, jclass jklass, jlong element)\n+{\n+    JNI_COCOA_ENTER(env);\n+        [ThreadUtilities performOnMainThread:@selector(postTreeNodeExpanded)\n+                         on:(CommonComponentAccessibility *)jlong_to_ptr(element)\n+                         withObject:nil\n+                         waitUntilDone:NO];\n+    JNI_COCOA_EXIT(env);\n+}\n+\n+\/*\n+ * Class:     sun_lwawt_macosx_CAccessible\n+ * Method:    treeNodeCollapsed\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_lwawt_macosx_CAccessible_treeNodeCollapsed\n+  (JNIEnv *env, jclass jklass, jlong element)\n+{\n+    JNI_COCOA_ENTER(env);\n+        [ThreadUtilities performOnMainThread:@selector(postTreeNodeCollapsed)\n+                         on:(CommonComponentAccessibility *)jlong_to_ptr(element)\n+                         withObject:nil\n+                         waitUntilDone:NO];\n+    JNI_COCOA_EXIT(env);\n+}\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":1046,"deletions":8,"binary":false,"changes":1054,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    if ([[self accessibilityRoleAttribute] isEqualToString:NSAccessibilityStaticTextRole]) {\n+    if ([[self accessibilityRole] isEqualToString:NSAccessibilityStaticTextRole]) {\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonTextAccessibility.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n@@ -46,1 +47,1 @@\n-    NSArray *children = [JavaComponentAccessibility childrenOfParent:self\n+    NSArray *children = [CommonComponentAccessibility childrenOfParent:self\n@@ -48,1 +49,1 @@\n-                                                    withChildrenCode:JAVA_AX_ALL_CHILDREN\n+                                                    withChildrenCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN\n@@ -58,0 +59,10 @@\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/GroupAccessibility.m","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -39,1 +39,11 @@\n-    return [self accessibilityTitleAttribute];\n+    return [super accessibilityLabel];\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ImageAccessibility.m","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface ListAccessibility : CommonComponentAccessibility <NSAccessibilityList>\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListAccessibility.h","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ListAccessibility.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+\n+@implementation ListAccessibility\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (nullable NSArray<id<NSAccessibilityRow>> *)accessibilityRows\n+{\n+    return [self accessibilityChildren];\n+}\n+\n+- (nullable NSArray<id<NSAccessibilityRow>> *)accessibilitySelectedRows\n+{\n+    return [self accessibilitySelectedChildren];\n+}\n+\n+- (NSString *)accessibilityLabel\n+{\n+    return [super accessibilityLabel] == NULL ? @\"list\" : [super accessibilityLabel];\n+}\n+\n+\/\/ to avoid warning (why?): method in protocol 'NSAccessibilityElement' not implemented\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+\/\/ to avoid warning (why?): method in protocol 'NSAccessibilityElement' not implemented\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+@end\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListAccessibility.m","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface ListRowAccessibility : CommonComponentAccessibility <NSAccessibilityRow>\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListRowAccessibility.h","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#import \"ListRowAccessibility.h\"\n+#import \"JavaAccessibilityAction.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"ListAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+\n+@implementation ListRowAccessibility\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    return NSAccessibilityRowRole;\n+}\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    NSArray *children = [super accessibilityChildren];\n+    if (children == NULL) {\n+\n+        \/\/ Since the row element has already been created, we should no create it again, but just retrieve it by a pointer, that's why isWrapped is set to YES.\n+        CommonComponentAccessibility *newChild = [CommonComponentAccessibility createWithParent:self\n+                                                                       accessible:self->fAccessible\n+                                                                             role:self->fJavaRole\n+                                                                            index:self->fIndex\n+                                                                          withEnv:[ThreadUtilities getJNIEnv]\n+                                                                         withView:self->fView\n+                                                                        isWrapped:YES];\n+        return [NSArray arrayWithObject:newChild];\n+    } else {\n+        return children;\n+    }\n+}\n+\n+- (NSInteger)accessibilityIndex\n+{\n+    return [[self accessibilityParent] accessibilityIndexOfChild:self];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListRowAccessibility.m","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface NavigableTextAccessibility : CommonComponentAccessibility <NSAccessibilityNavigableStaticText>\n+\n+@property(readonly) BOOL accessibleIsPasswordText;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/NavigableTextAccessibility.h","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,316 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"NavigableTextAccessibility.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+#define GET_CACCESSIBLITY_CLASS() \\\n+     GET_CLASS(sjc_CAccessibility, \"sun\/lwawt\/macosx\/CAccessibility\");\n+#define GET_CACCESSIBLITY_CLASS_RETURN(ret) \\\n+     GET_CLASS_RETURN(sjc_CAccessibility, \"sun\/lwawt\/macosx\/CAccessibility\", ret);\n+\n+static jmethodID sjm_getAccessibleText = NULL;\n+#define GET_ACCESSIBLETEXT_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBLITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleText, sjc_CAccessibility, \"getAccessibleText\", \\\n+              \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleText;\", ret);\n+\n+static jclass sjc_CAccessibleText = NULL;\n+#define GET_CACCESSIBLETEXT_CLASS() \\\n+    GET_CLASS(sjc_CAccessibleText, \"sun\/lwawt\/macosx\/CAccessibleText\");\n+#define GET_CACCESSIBLETEXT_CLASS_RETURN(ret) \\\n+    GET_CLASS_RETURN(sjc_CAccessibleText, \"sun\/lwawt\/macosx\/CAccessibleText\", ret);\n+\n+static jmethodID sjm_getAccessibleEditableText = NULL;\n+#define GET_ACCESSIBLEEDITABLETEXT_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleEditableText, sjc_CAccessibleText, \"getAccessibleEditableText\", \\\n+              \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleEditableText;\", ret);\n+\n+\n+@implementation NavigableTextAccessibility\n+\n+- (BOOL)accessibleIsPasswordText {\n+    return [fJavaRole isEqualToString:@\"passwordtext\"];\n+}\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSRect)accessibilityFrameForRange:(NSRange)range\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(NSMakeRect(0, 0, 0, 0));\n+    DECLARE_STATIC_METHOD_RETURN(jm_getBoundsForRange, sjc_CAccessibleText, \"getBoundsForRange\",\n+                         \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;II)[D\", NSMakeRect(0, 0, 0, 0));\n+    jdoubleArray axBounds = (jdoubleArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getBoundsForRange,\n+                              fAccessible, fComponent, range.location, range.length);\n+    CHECK_EXCEPTION();\n+    if (axBounds == NULL) return NSMakeRect(0, 0, 0, 0);\n+\n+    \/\/ We cheat because we know that the array is 4 elements long (x, y, width, height)\n+    jdouble *values = (*env)->GetDoubleArrayElements(env, axBounds, 0);\n+    CHECK_EXCEPTION();\n+\n+    NSRect bounds;\n+    bounds.origin.x = values[0];\n+    bounds.origin.y = [[[[self view] window] screen] frame].size.height - values[1] - values[3]; \/\/values[1] is y-coord from top-left of screen. Flip. Account for the height (values[3]) when flipping\n+    bounds.size.width = values[2];\n+    bounds.size.height = values[3];\n+    (*env)->ReleaseDoubleArrayElements(env, axBounds, values, 0);\n+    return bounds;\n+}\n+\n+- (NSInteger)accessibilityLineForIndex:(NSInteger)index\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(-1);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getLineNumberForIndex, sjc_CAccessibleText, \"getLineNumberForIndex\",\n+                           \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;I)I\", -1);\n+    jint row = (*env)->CallStaticIntMethod(env, sjc_CAccessibleText, jm_getLineNumberForIndex,\n+                       fAccessible, fComponent, index);\n+    CHECK_EXCEPTION();\n+    if (row < 0) return -1;\n+    return row;\n+}\n+\n+- (NSRange)accessibilityRangeForLine:(NSInteger)line\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(NSRangeFromString(@\"\"));\n+    DECLARE_STATIC_METHOD_RETURN(jm_getRangeForLine, sjc_CAccessibleText, \"getRangeForLine\",\n+                 \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;I)[I\", NSRangeFromString(@\"\"));\n+    jintArray axTextRange = (jintArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibleText,\n+                jm_getRangeForLine, fAccessible, fComponent, line);\n+    CHECK_EXCEPTION();\n+    if (axTextRange == NULL) return NSRangeFromString(@\"\");\n+\n+    NSRange range = [javaIntArrayToNSRangeValue(env,axTextRange) rangeValue];\n+    (*env)->DeleteLocalRef(env, axTextRange);\n+    return range;\n+}\n+\n+- (NSString *)accessibilityStringForRange:(NSRange)range\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getStringForRange, sjc_CAccessibleText, \"getStringForRange\",\n+                 \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;II)Ljava\/lang\/String;\", nil);\n+    jstring jstringForRange = (jstring)(*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getStringForRange,\n+                            fAccessible, fComponent, range.location, range.length);\n+    CHECK_EXCEPTION();\n+    if (jstringForRange == NULL) return @\"\";\n+    NSString* str = JavaStringToNSString(env, jstringForRange);\n+    (*env)->DeleteLocalRef(env, jstringForRange);\n+    return str;\n+}\n+\n+- (id)accessibilityValue\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_getAccessibleName, sjc_CAccessibility, \"getAccessibleName\",\n+                          \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+    \/\/ cmcnote: inefficient to make three distinct JNI calls. Coalesce. radr:\/\/3951923\n+    GET_ACCESSIBLETEXT_METHOD_RETURN(@\"\");\n+    jobject axText = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                      sjm_getAccessibleText, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axText == NULL) return nil;\n+    (*env)->DeleteLocalRef(env, axText);\n+\n+    GET_ACCESSIBLEEDITABLETEXT_METHOD_RETURN(nil);\n+    jobject axEditableText = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText,\n+                       sjm_getAccessibleEditableText, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axEditableText == NULL) return nil;\n+\n+    DECLARE_STATIC_METHOD_RETURN(jm_getTextRange, sjc_CAccessibleText, \"getTextRange\",\n+                    \"(Ljavax\/accessibility\/AccessibleEditableText;IILjava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+    jobject jrange = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getTextRange,\n+                       axEditableText, 0, getAxTextCharCount(env, axEditableText, fComponent), fComponent);\n+    CHECK_EXCEPTION();\n+    NSString *string = JavaStringToNSString(env, jrange);\n+\n+    (*env)->DeleteLocalRef(env, jrange);\n+    (*env)->DeleteLocalRef(env, axEditableText);\n+\n+    if (string == nil) string = @\"\";\n+    return string;\n+}\n+\n+- (NSAccessibilitySubrole)accessibilitySubrole {\n+    if ([self accessibleIsPasswordText]) {\n+        return NSAccessibilitySecureTextFieldSubrole;\n+    }\n+    return nil;\n+}\n+\n+- (NSRange)accessibilityRangeForIndex:(NSInteger)index\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(NSRangeFromString(@\"\"));\n+    DECLARE_STATIC_METHOD_RETURN(jm_getRangeForIndex, sjc_CAccessibleText, \"getRangeForIndex\",\n+                    \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;I)[I\", NSRangeFromString(@\"\"));\n+    jintArray axTextRange = (jintArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getRangeForIndex,\n+                              fAccessible, fComponent, index);\n+    CHECK_EXCEPTION();\n+    if (axTextRange == NULL) return NSRangeFromString(@\"\");\n+\n+    return [javaIntArrayToNSRangeValue(env, axTextRange) rangeValue];\n+}\n+\n+- (NSAccessibilityRole)accessibilityRole {\n+    return [sRoles objectForKey:self.javaRole];\n+}\n+\n+- (NSRange)accessibilityRangeForPosition:(NSPoint)point\n+{\n+   point.y = [[[[self view] window] screen] frame].size.height - point.y; \/\/ flip into java screen coords (0 is at upper-left corner of screen)\n+\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(NSRangeFromString(@\"\"));\n+    DECLARE_STATIC_METHOD_RETURN(jm_getCharacterIndexAtPosition, sjc_CAccessibleText, \"getCharacterIndexAtPosition\",\n+                           \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;II)I\", NSRangeFromString(@\"\"));\n+    jint charIndex = (*env)->CallStaticIntMethod(env, sjc_CAccessibleText, jm_getCharacterIndexAtPosition,\n+                            fAccessible, fComponent, point.x, point.y);\n+    CHECK_EXCEPTION();\n+    if (charIndex == -1) return NSRangeFromString(@\"\");\n+\n+    \/\/ AccessibleText.getIndexAtPoint returns -1 for an invalid point\n+    NSRange range = NSMakeRange(charIndex, 1); \/\/range's length is 1 - one-character range\n+    return range;\n+}\n+\n+- (NSString *)accessibilitySelectedText\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getSelectedText, sjc_CAccessibleText, \"getSelectedText\",\n+              \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+    jobject axText = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getSelectedText,\n+                        fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axText == NULL) return @\"\";\n+    NSString* str = JavaStringToNSString(env, axText);\n+    (*env)->DeleteLocalRef(env, axText);\n+    return str;\n+}\n+\n+- (NSRange)accessibilitySelectedTextRange\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(NSRangeFromString(@\"\"));\n+    DECLARE_STATIC_METHOD_RETURN(jm_getSelectedTextRange, sjc_CAccessibleText, \"getSelectedTextRange\",\n+           \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)[I\", NSRangeFromString(@\"\"));\n+    jintArray axTextRange = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText,\n+                jm_getSelectedTextRange, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axTextRange == NULL) return NSRangeFromString(@\"\");\n+\n+    return [javaIntArrayToNSRangeValue(env, axTextRange) rangeValue];\n+}\n+\n+- (NSInteger)accessibilityNumberOfCharacters\n+{\n+    \/\/ cmcnote: should coalesce these two calls - radr:\/\/3951923\n+    \/\/ also, static text doesn't always have accessibleText. if axText is null, should get the charcount of the accessibleName instead\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_ACCESSIBLETEXT_METHOD_RETURN(0);\n+    jobject axText = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                     sjm_getAccessibleText, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    NSInteger num = getAxTextCharCount(env, axText, fComponent);\n+    (*env)->DeleteLocalRef(env, axText);\n+    return num;\n+}\n+\n+- (NSInteger)accessibilityInsertionPointLineNumber\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(0);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getLineNumberForInsertionPoint, sjc_CAccessibleText,\n+             \"getLineNumberForInsertionPoint\", \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)I\", 0);\n+    jint row = (*env)->CallStaticIntMethod(env, sjc_CAccessibleText,\n+                  jm_getLineNumberForInsertionPoint, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    return row >= 0 ? row : 0;\n+}\n+\n+- (void)setAccessibilitySelectedText:(NSString *)accessibilitySelectedText\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jstring jstringValue = NSStringToJavaString(env, accessibilitySelectedText);\n+    GET_CACCESSIBLETEXT_CLASS();\n+    DECLARE_STATIC_METHOD(jm_setSelectedText, sjc_CAccessibleText, \"setSelectedText\",\n+                   \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;Ljava\/lang\/String;)V\");\n+    (*env)->CallStaticVoidMethod(env, sjc_CAccessibleText, jm_setSelectedText,\n+              fAccessible, fComponent, jstringValue);\n+    CHECK_EXCEPTION();\n+}\n+\n+- (void)setAccessibilitySelectedTextRange:(NSRange)accessibilitySelectedTextRange\n+{\n+   jint startIndex = accessibilitySelectedTextRange.location;\n+    jint endIndex = startIndex + accessibilitySelectedTextRange.length;\n+\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS();\n+    DECLARE_STATIC_METHOD(jm_setSelectedTextRange, sjc_CAccessibleText, \"setSelectedTextRange\",\n+                  \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;II)V\");\n+    (*env)->CallStaticVoidMethod(env, sjc_CAccessibleText, jm_setSelectedTextRange,\n+                  fAccessible, fComponent, startIndex, endIndex);\n+    CHECK_EXCEPTION();\n+}\n+\n+- (BOOL)isAccessibilityEdited {\n+    return YES;\n+}\n+\n+- (BOOL)isAccessibilityEnabled {\n+    return YES;\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+\/*\n+* Other text methods\n+- (NSRange)accessibilitySharedCharacterRange;\n+- (NSArray *)accessibilitySharedTextUIElements;\n+- (NSData *)accessibilityRTFForRange:(NSRange)range;\n+- (NSRange)accessibilityStyleRangeForIndex:(NSInteger)index;\n+*\/\n+\n+@end\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/NavigableTextAccessibility.m","additions":316,"deletions":0,"binary":false,"changes":316,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ListAccessibility.h\"\n+\n+\/\/ This is a tree representation. See: https:\/\/developer.apple.com\/documentation\/appkit\/nsoutlineview\n+\n+@interface OutlineAccessibility : ListAccessibility <NSAccessibilityOutline>\n+\n+@property(readonly) BOOL isTreeRootVisible;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineAccessibility.h","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"OutlineAccessibility.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+\n+static jmethodID sjm_isTreeRootVisible = NULL;\n+#define GET_ISTREEROOTVISIBLE_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_isTreeRootVisible, sjc_CAccessibility, \"isTreeRootVisible\", \\\n+                     \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Z\", ret);\n+\n+@implementation OutlineAccessibility\n+\n+- (BOOL)isTreeRootVisible\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_ISTREEROOTVISIBLE_METHOD_RETURN(NO);\n+    bool isTreeRootVisible = (*env)->CallStaticBooleanMethod(env, sjc_CAccessibility, sjm_isTreeRootVisible, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    return isTreeRootVisible;\n+}\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSString *)accessibilityLabel\n+{\n+    return [[super accessibilityLabel] isEqualToString:@\"list\"] ? @\"tree\" : [super accessibilityLabel];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineAccessibility.m","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ListRowAccessibility.h\"\n+\n+@interface OutlineRowAccessibility : ListRowAccessibility\n+\n+@property(readwrite) int accessibleLevel;\n+\n+- (jobject)currentAccessibleWithENV:(JNIEnv *)env;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineRowAccessibility.h","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#import \"OutlineRowAccessibility.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+#import \"OutlineAccessibility.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n+\n+static jclass sjc_CAccessible = NULL;\n+#define GET_CACCESSIBLE_CLASS_RETURN(ret) \\\n+    GET_CLASS_RETURN(sjc_CAccessible, \"sun\/lwawt\/macosx\/CAccessible\", ret);\n+\n+@implementation OutlineRowAccessibility\n+\n+@synthesize accessibleLevel;\n+\n+- (jobject)currentAccessibleWithENV:(JNIEnv *)env\n+{\n+    jobject jAxContext = getAxContext(env, fAccessible, fComponent);\n+    if (jAxContext == NULL) return NULL;\n+    jclass axContextClass = (*env)->GetObjectClass(env, jAxContext);\n+    DECLARE_METHOD_RETURN(jm_getCurrentComponent, axContextClass, \"getCurrentComponent\", \"()Ljava\/awt\/Component;\", NULL);\n+    jobject newComponent = (*env)->CallObjectMethod(env, jAxContext, jm_getCurrentComponent);\n+    CHECK_EXCEPTION();\n+    (*env)->DeleteLocalRef(env, jAxContext);\n+    if (newComponent != NULL) {\n+        GET_CACCESSIBLE_CLASS_RETURN(NULL);\n+        DECLARE_STATIC_METHOD_RETURN(sjm_getCAccessible, sjc_CAccessible, \"getCAccessible\", \"(Ljavax\/accessibility\/Accessible;)Lsun\/lwawt\/macosx\/CAccessible;\", NULL);\n+        jobject currentAccessible = (*env)->CallStaticObjectMethod(env, sjc_CAccessible, sjm_getCAccessible, newComponent);\n+        CHECK_EXCEPTION();\n+        (*env)->DeleteLocalRef(env, newComponent);\n+        return currentAccessible;\n+    } else {\n+        return NULL;\n+    }\n+}\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject currentAccessible = [self currentAccessibleWithENV:env];\n+    if (currentAccessible != NULL) {\n+        CommonComponentAccessibility *currentElement = [CommonComponentAccessibility createWithAccessible:currentAccessible withEnv:env withView:self->fView isCurrent:YES];\n+        NSArray *children = [CommonComponentAccessibility childrenOfParent:currentElement withEnv:env withChildrenCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n+        if ([children count] != 0) {\n+            return children;\n+        }\n+    }\n+\n+    return [NSArray arrayWithObject:[CommonComponentAccessibility createWithParent:self\n+                                                                        accessible:self->fAccessible\n+                                                                              role:self->fJavaRole\n+                                                                             index:self->fIndex\n+                                                                           withEnv:env\n+                                                                          withView:self->fView\n+                                                                         isWrapped:YES]];\n+}\n+\n+- (NSInteger)accessibilityDisclosureLevel\n+{\n+    int level = [self accessibleLevel];\n+    return [(OutlineAccessibility *)[self accessibilityParent] isTreeRootVisible] ? level - 1 : level;\n+}\n+\n+- (BOOL)isAccessibilityDisclosed\n+{\n+    return isExpanded([ThreadUtilities getJNIEnv], [self axContextWithEnv:[ThreadUtilities getJNIEnv]], self->fComponent);\n+}\n+\n+- (NSAccessibilitySubrole)accessibilitySubrole\n+{\n+    return NSAccessibilityOutlineRowSubrole;;\n+}\n+\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    return NSAccessibilityRowRole;;\n+}\n+\n+- (BOOL)isAccessibilitySelected\n+{\n+    return YES;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineRowAccessibility.m","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -42,1 +42,1 @@\n-    return [self accessibilityValueAttribute];\n+    return [super accessibilityValue];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/RadiobuttonAccessibility.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n@@ -38,1 +39,1 @@\n-    NSArray *children = [JavaComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n+    NSArray *children = [CommonComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n@@ -45,3 +46,3 @@\n-    JavaComponentAccessibility *aElement;\n-    while ((aElement = (JavaComponentAccessibility *)[enumerator nextObject])) {\n-        if (![[aElement accessibilityRoleAttribute] isEqualToString:NSAccessibilityScrollBarRole]) {\n+    CommonComponentAccessibility *aElement;\n+    while ((aElement = (CommonComponentAccessibility *)[enumerator nextObject])) {\n+        if (![[aElement accessibilityRole] isEqualToString:NSAccessibilityScrollBarRole]) {\n@@ -59,1 +60,1 @@\n-    NSArray *children = [JavaComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n+    NSArray *children = [CommonComponentAccessibility childrenOfParent:self withEnv:env withChildrenCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN allowIgnored:YES];\n@@ -63,1 +64,1 @@\n-    JavaComponentAccessibility *aElement;\n+    CommonComponentAccessibility *aElement;\n@@ -65,2 +66,2 @@\n-    while ((aElement = (JavaComponentAccessibility *)[enumerator nextObject])) {\n-        if ([[aElement accessibilityRoleAttribute] isEqualToString:NSAccessibilityScrollBarRole]) {\n+    while ((aElement = (CommonComponentAccessibility *)[enumerator nextObject])) {\n+        if ([[aElement accessibilityRole] isEqualToString:NSAccessibilityScrollBarRole]) {\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ScrollAreaAccessibility.m","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    return [self accessibilityTitleAttribute];\n+    return [super accessibilityLabel];\n@@ -47,1 +47,1 @@\n-    return [self accessibilityValueAttribute];\n+    return [super accessibilityValue];\n@@ -60,0 +60,10 @@\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/SliderAccessibility.m","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    return [self accessibilityTitleAttribute];\n+    return [super accessibilityLabel];\n@@ -47,1 +47,1 @@\n-    return [self accessibilityValueAttribute];\n+    return [super accessibilityValue];\n@@ -61,0 +61,10 @@\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/SpinboxAccessibility.m","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -50,0 +50,10 @@\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/StaticTextAccessibility.m","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface TabButtonAccessibility : CommonComponentAccessibility {\n+    jobject fTabGroupAxContext;\n+}\n+\n+@property(readonly) jobject tabGroup;\n+\n+\/\/ from TabGroup controller\n+- (id)initWithParent:(NSObject *)parent withEnv:(JNIEnv *)env withAccessible:(jobject)accessible withIndex:(jint)index withTabGroup:(jobject)tabGroup withView:(NSView *)view withJavaRole:(NSString *)javaRole;\n+- (void)performPressAction;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabButtonAccessibility.h","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"TabButtonAccessibility.h\"\n+#import \"JavaAccessibilityAction.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+\n+@implementation TabButtonAccessibility\n+\n+- (id)initWithParent:(NSObject *)parent withEnv:(JNIEnv *)env withAccessible:(jobject)accessible withIndex:(jint)index withTabGroup:(jobject)tabGroup withView:(NSView *)view withJavaRole:(NSString *)javaRole\n+{\n+    self = [super initWithParent:parent withEnv:env withAccessible:accessible withIndex:index withView:view withJavaRole:javaRole];\n+    if (self) {\n+        if (tabGroup != NULL) {\n+            fTabGroupAxContext = (*env)->NewWeakGlobalRef(env, tabGroup);\n+            CHECK_EXCEPTION();\n+        } else {\n+            fTabGroupAxContext = NULL;\n+        }\n+    }\n+    return self;\n+}\n+\n+- (void)dealloc\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnvUncached];\n+\n+    if (fTabGroupAxContext != NULL) {\n+        (*env)->DeleteWeakGlobalRef(env, fTabGroupAxContext);\n+        fTabGroupAxContext = NULL;\n+    }\n+\n+    [super dealloc];\n+}\n+\n+- (jobject)tabGroup\n+{\n+    if (fTabGroupAxContext == NULL) {\n+        JNIEnv* env = [ThreadUtilities getJNIEnv];\n+        jobject tabGroupAxContext = [(CommonComponentAccessibility *)[self parent] axContextWithEnv:env];\n+        fTabGroupAxContext = (*env)->NewWeakGlobalRef(env, tabGroupAxContext);\n+        CHECK_EXCEPTION();\n+        (*env)->DeleteLocalRef(env, tabGroupAxContext);\n+    }\n+    return fTabGroupAxContext;\n+}\n+\n+- (void)performPressAction {\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    TabGroupAction *action = [[TabGroupAction alloc] initWithEnv:env withTabGroup:[self tabGroup] withIndex:fIndex withComponent:fComponent];\n+    [action perform];\n+    [action release];\n+}\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSAccessibilitySubrole)accessibilitySubrole\n+{\n+    if (@available(macOS 10.13, *)) {\n+        return NSAccessibilityTabButtonSubrole;\n+    }\n+    return NSAccessibilityUnknownSubrole;\n+}\n+\n+- (id)accessibilityValue\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    jobject selAccessible = getAxContextSelection(env, [self tabGroup], fIndex, fComponent);\n+\n+    \/\/ Returns the current selection of the page tab list\n+    id val = [NSNumber numberWithBool:ObjectEquals(env, axContext, selAccessible, fComponent)];\n+\n+    (*env)->DeleteLocalRef(env, selAccessible);\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return val;\n+}\n+\n+- (BOOL)accessibilityPerformPress {\n+    [self performPressAction];\n+    return YES;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabButtonAccessibility.m","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface TabGroupAccessibility : CommonComponentAccessibility {\n+    NSInteger _numTabs;\n+}\n+\n+@property(readonly) NSInteger numTabs;\n+\n+- (id)currentTabWithEnv:(JNIEnv *)env withAxContext:(jobject)axContext;\n+- (NSArray *)tabButtonsWithEnv:(JNIEnv *)env withTabGroupAxContext:(jobject)axContext withTabCode:(NSInteger)whichTabs allowIgnored:(BOOL)allowIgnored;\n+- (NSArray *)contentsWithEnv:(JNIEnv *)env withTabGroupAxContext:(jobject)axContext withTabCode:(NSInteger)whichTabs allowIgnored:(BOOL)allowIgnored;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabGroupAccessibility.h","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,204 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"TabGroupAccessibility.h\"\n+#import \"TabButtonAccessibility.h\"\n+#import \"..\/JavaAccessibilityUtilities.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+\n+static jmethodID jm_getChildrenAndRoles = NULL;\n+#define GET_CHILDRENANDROLES_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(jm_getChildrenAndRoles, sjc_CAccessibility, \"getChildrenAndRoles\",\\\n+                      \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;IZ)[Ljava\/lang\/Object;\", ret);\n+\n+@implementation TabGroupAccessibility\n+\n+- (id)currentTabWithEnv:(JNIEnv *)env withAxContext:(jobject)axContext\n+{\n+    NSArray *tabs = [self tabButtonsWithEnv:env withTabGroupAxContext:axContext withTabCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN allowIgnored:NO];\n+\n+    \/\/ Looking at the JTabbedPane sources, there is always one AccessibleSelection.\n+    jobject selAccessible = getAxContextSelection(env, axContext, 0, fComponent);\n+    if (selAccessible == NULL) return nil;\n+\n+    \/\/ Go through the tabs and find selAccessible\n+    _numTabs = [tabs count];\n+    CommonComponentAccessibility *aTab;\n+    NSInteger i;\n+    for (i = 0; i < _numTabs; i++) {\n+        aTab = (CommonComponentAccessibility *)[tabs objectAtIndex:i];\n+        if ([aTab isAccessibleWithEnv:env forAccessible:selAccessible]) {\n+            (*env)->DeleteLocalRef(env, selAccessible);\n+            return aTab;\n+        }\n+    }\n+    (*env)->DeleteLocalRef(env, selAccessible);\n+    return nil;\n+}\n+\n+- (NSArray *)tabButtonsWithEnv:(JNIEnv *)env withTabGroupAxContext:(jobject)axContext withTabCode:(NSInteger)whichTabs allowIgnored:(BOOL)allowIgnored\n+{\n+    GET_CHILDRENANDROLES_METHOD_RETURN(nil);\n+    jobjectArray jtabsAndRoles = (jobjectArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getChildrenAndRoles,\n+                                  fAccessible, fComponent, whichTabs, allowIgnored);\n+    CHECK_EXCEPTION();\n+    if(jtabsAndRoles == NULL) return nil;\n+\n+    jsize arrayLen = (*env)->GetArrayLength(env, jtabsAndRoles);\n+    if (arrayLen == 0) {\n+        (*env)->DeleteLocalRef(env, jtabsAndRoles);\n+        return nil;\n+    }\n+    NSMutableArray *tabs = [NSMutableArray arrayWithCapacity:(arrayLen\/2)];\n+\n+    \/\/ all of the tabs have the same role, so we can just find out what that is here and use it for all the tabs\n+    jobject jtabJavaRole = (*env)->GetObjectArrayElement(env, jtabsAndRoles, 1); \/\/ the array entries alternate between tab\/role, starting with tab. so the first role is entry 1.\n+    if (jtabJavaRole == NULL) {\n+        (*env)->DeleteLocalRef(env, jtabsAndRoles);\n+        return nil;\n+    }\n+    DECLARE_CLASS_RETURN(sjc_AccessibleRole, \"javax\/accessibility\/AccessibleRole\", nil);\n+    DECLARE_FIELD_RETURN(sjf_key, sjc_AccessibleRole, \"key\", \"Ljava\/lang\/String;\", nil);\n+    jobject jkey = (*env)->GetObjectField(env, jtabJavaRole, sjf_key);\n+    CHECK_EXCEPTION();\n+    NSString *tabJavaRole = JavaStringToNSString(env, jkey);\n+    (*env)->DeleteLocalRef(env, jkey);\n+\n+    NSInteger i;\n+    NSUInteger tabIndex = (whichTabs >= 0) ? whichTabs : 0; \/\/ if we're getting one particular child, make sure to set its index correctly\n+    for(i = 0; i < arrayLen; i+=2) {\n+        jobject jtab = (*env)->GetObjectArrayElement(env, jtabsAndRoles, i);\n+        CommonComponentAccessibility *tab = [[[TabButtonAccessibility alloc] initWithParent:self withEnv:env withAccessible:jtab withIndex:tabIndex withTabGroup:axContext withView:[self view] withJavaRole:tabJavaRole] autorelease];\n+        (*env)->DeleteLocalRef(env, jtab);\n+        [tabs addObject:tab];\n+        tabIndex++;\n+    }\n+    (*env)->DeleteLocalRef(env, jtabsAndRoles);\n+    return tabs;\n+}\n+\n+- (NSArray *)contentsWithEnv:(JNIEnv *)env withTabGroupAxContext:(jobject)axContext withTabCode:(NSInteger)whichTabs allowIgnored:(BOOL)allowIgnored\n+{\n+    \/\/ Contents are the children of the selected tab.\n+    id currentTab = [self currentTabWithEnv:env withAxContext:axContext];\n+    if (currentTab == nil) return nil;\n+\n+    NSArray *contents = [CommonComponentAccessibility childrenOfParent:currentTab withEnv:env withChildrenCode:whichTabs allowIgnored:allowIgnored];\n+    if ([contents count] <= 0) return nil;\n+    return contents;\n+}\n+\n+- (NSInteger)numTabs\n+{\n+    if (_numTabs == -1) {\n+        _numTabs = [[self accessibilityTabsAttribute] count];\n+    }\n+    return _numTabs;\n+}\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSArray *)accessibilityTabs\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    id tabs = [self tabButtonsWithEnv:env withTabGroupAxContext:axContext withTabCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN allowIgnored:NO];\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return tabs;\n+}\n+\n+- (NSArray *)accessibilityContents\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    NSArray* cont = [self contentsWithEnv:env withTabGroupAxContext:axContext withTabCode:sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN allowIgnored:NO];\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return cont;\n+}\n+\n+- (id)accessibilityValue\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    id val = [self currentTabWithEnv:env withAxContext:axContext];\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return val;\n+}\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    \/\/children = AXTabs + AXContents\n+    NSArray *tabs = [self accessibilityTabs];\n+    NSArray *contents = [self accessibilityContents];\n+\n+    NSMutableArray *children = [NSMutableArray arrayWithCapacity:[tabs count] + [contents count]];\n+    [children addObjectsFromArray:tabs];\n+    [children addObjectsFromArray:contents];\n+\n+    return (NSArray *)children;\n+}\n+\n+- (NSArray *)accessibilityArrayAttributeValues:(NSAccessibilityAttributeName)attribute index:(NSUInteger)index maxCount:(NSUInteger)maxCount\n+{\n+    NSArray *result = nil;\n+    if ( (maxCount == 1) && [attribute isEqualToString:NSAccessibilityChildrenAttribute]) {\n+        \/\/ Children codes for ALL, SELECTED, VISIBLE are <0. If the code is >=0, we treat it as an index to a single child\n+        JNIEnv *env = [ThreadUtilities getJNIEnv];\n+        jobject axContext = [self axContextWithEnv:env];\n+\n+        \/\/children = AXTabs + AXContents\n+        NSArray *children = [self tabButtonsWithEnv:env withTabGroupAxContext:axContext withTabCode:index allowIgnored:NO]; \/\/ first look at the tabs\n+        if ([children count] > 0) {\n+            result = children;\n+         } else {\n+            children= [self contentsWithEnv:env withTabGroupAxContext:axContext withTabCode:(index-[self numTabs]) allowIgnored:NO];\n+            if ([children count] > 0) {\n+                result = children;\n+            }\n+        }\n+        (*env)->DeleteLocalRef(env, axContext);\n+    } else {\n+        result = [super accessibilityArrayAttributeValues:attribute index:index maxCount:maxCount];\n+    }\n+    return result;\n+}\n+\n+- (void)setAccessibilityValue:(id)accessibilityValue\n+{\n+    \/\/ set the current tab\n+    NSNumber *number = (NSNumber *)accessibilityValue;\n+    if (![number boolValue]) return;\n+\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    setAxContextSelection(env, axContext, fIndex, fComponent);\n+    (*env)->DeleteLocalRef(env, axContext);\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabGroupAccessibility.m","additions":204,"deletions":0,"binary":false,"changes":204,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface TableAccessibility : CommonComponentAccessibility <NSAccessibilityTable>\n+\n+- (BOOL)isAccessibleChildSelectedFromIndex:(int)index;\n+- (int) accessibleRowAtIndex:(int)index;\n+- (int) accessibleColumnAtIndex:(int)index;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableAccessibility.h","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,241 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#import \"TableRowAccessibility.h\"\n+#import \"JavaAccessibilityAction.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"TableAccessibility.h\"\n+#import \"CellAccessibility.h\"\n+#import \"ColumnAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+#import \"CellAccessibility.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+\n+static jmethodID sjm_getAccessibleName = NULL;\n+#define GET_ACCESSIBLENAME_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleName, sjc_CAccessibility, \"getAccessibleName\", \\\n+                     \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", ret);\n+\n+@implementation TableAccessibility\n+\n+- (id)getTableInfo:(jint)info\n+{\n+    if (fAccessible == NULL) return 0;\n+\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getTableInfo, sjc_CAccessibility, \"getTableInfo\",\n+                          \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;I)I\", nil);\n+    jint count = (*env)->CallStaticIntMethod(env, sjc_CAccessibility, jm_getTableInfo, fAccessible,\n+                                        fComponent, info);\n+    CHECK_EXCEPTION();\n+    NSNumber *index = [NSNumber numberWithInt:count];\n+    return index;\n+}\n+\n+- (NSArray<NSNumber *> *)getTableSelectedInfo:(jint)info\n+{\n+    if (fAccessible == NULL) return 0;\n+\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getTableSelectedInfo, sjc_CAccessibility, \"getTableSelectedInfo\",\n+                          \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;I)[I\", nil);\n+    jintArray selected = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getTableSelectedInfo, fAccessible,\n+                                        fComponent, info);\n+    CHECK_EXCEPTION();\n+    if (selected == NULL) {\n+        return nil;\n+    }\n+    jsize arrayLen = (*env)->GetArrayLength(env, selected);\n+    jint *indexsis = (*env)->GetIntArrayElements(env, selected, 0);\n+    NSMutableArray<NSNumber *> *nsArraySelected = [NSMutableArray<NSNumber *> arrayWithCapacity:arrayLen];\n+    for (int i = 0; i < arrayLen; i++) {\n+        [nsArraySelected addObject:[NSNumber numberWithInt:indexsis[i]]];\n+    }\n+    (*env)->DeleteLocalRef(env, selected);\n+    return [NSArray<NSNumber *> arrayWithArray:nsArraySelected];\n+}\n+\n+- (int)accessibleRowAtIndex:(int)index\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    if (axContext == NULL) return 0;\n+    jclass clsInfo = (*env)->GetObjectClass(env, axContext);\n+    DECLARE_METHOD_RETURN(jm_getAccessibleRowAtIndex, clsInfo, \"getAccessibleRowAtIndex\", \"(I)I\", -1);\n+    jint rowAtIndex = (*env)->CallIntMethod(env, axContext, jm_getAccessibleRowAtIndex, (jint)index);\n+    CHECK_EXCEPTION();\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return (int)rowAtIndex;\n+}\n+\n+- (int)accessibleColumnAtIndex:(int)index\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    if (axContext == NULL) return 0;\n+    jclass clsInfo = (*env)->GetObjectClass(env, axContext);\n+    DECLARE_METHOD_RETURN(jm_getAccessibleColumnAtIndex, clsInfo, \"getAccessibleColumnAtIndex\", \"(I)I\", -1);\n+    jint columnAtIndex = (*env)->CallIntMethod(env, axContext, jm_getAccessibleColumnAtIndex, (jint)index);\n+    CHECK_EXCEPTION();\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return (int)columnAtIndex;\n+}\n+\n+- (BOOL) isAccessibleChildSelectedFromIndex:(int)index\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    jobject axContext = [self axContextWithEnv:env];\n+    if (axContext == NULL) return NO;\n+    jclass clsInfo = (*env)->GetObjectClass(env, axContext);\n+    DECLARE_METHOD_RETURN(jm_isAccessibleChildSelected, clsInfo, \"isAccessibleChildSelected\", \"(I)Z\", NO);\n+    jboolean isAccessibleChildSelected = (*env)->CallIntMethod(env, axContext, jm_isAccessibleChildSelected, (jint)index);\n+    CHECK_EXCEPTION();\n+    (*env)->DeleteLocalRef(env, axContext);\n+    return isAccessibleChildSelected;\n+}\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    return [self accessibilityRows];\n+}\n+\n+- (NSArray *)accessibilitySelectedChildren\n+{\n+    return [self accessibilitySelectedRows];\n+}\n+\n+- (NSArray *)accessibilityRows\n+{\n+    int rowCount = [self accessibilityRowCount];\n+    NSMutableArray *children = [NSMutableArray arrayWithCapacity:rowCount];\n+    for (int i = 0; i < rowCount; i++) {\n+        [children addObject:[[TableRowAccessibility alloc] initWithParent:self\n+                                                                      withEnv:[ThreadUtilities getJNIEnv]\n+                                                               withAccessible:NULL\n+                                                                    withIndex:i\n+                                                                     withView:[self view]\n+                                                                 withJavaRole:JavaAccessibilityIgnore]];\n+    }\n+    return [NSArray arrayWithArray:children];\n+}\n+\n+- (nullable NSArray<id<NSAccessibilityRow>> *)accessibilitySelectedRows\n+{\n+    NSArray<NSNumber *> *selectedRowIndexses = [self getTableSelectedInfo:sun_lwawt_macosx_CAccessibility_JAVA_AX_ROWS];\n+    NSMutableArray *children = [NSMutableArray arrayWithCapacity:[selectedRowIndexses count]];\n+    for (NSNumber *index in selectedRowIndexses) {\n+        [children addObject:[[TableRowAccessibility alloc] initWithParent:self\n+                                                                      withEnv:[ThreadUtilities getJNIEnv]\n+                                                               withAccessible:NULL\n+                                                                    withIndex:index.unsignedIntValue\n+                                                                     withView:[self view]\n+                                                                 withJavaRole:JavaAccessibilityIgnore]];\n+    }\n+    return [NSArray arrayWithArray:children];\n+}\n+\n+- (NSString *)accessibilityLabel\n+{\n+    return [super accessibilityLabel] == NULL ? @\"table\" : [super accessibilityLabel];\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+    return [super accessibilityFrame];\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+- (nullable NSArray *)accessibilityColumns\n+{\n+    int colCount = [self accessibilityColumnCount];\n+    NSMutableArray *columns = [NSMutableArray arrayWithCapacity:colCount];\n+    for (int i = 0; i < colCount; i++) {\n+        [columns addObject:[[ColumnAccessibility alloc] initWithParent:self\n+                                                                   withEnv:[ThreadUtilities getJNIEnv]\n+                                                            withAccessible:NULL\n+                                                                 withIndex:i\n+                                                                  withView:self->fView\n+                                                              withJavaRole:JavaAccessibilityIgnore]];\n+    }\n+    return [NSArray arrayWithArray:columns];\n+}\n+\n+- (nullable NSArray *)accessibilitySelectedColumns\n+{\n+    NSArray<NSNumber *> *indexes = [self getTableSelectedInfo:sun_lwawt_macosx_CAccessibility_JAVA_AX_COLS];\n+    NSMutableArray *columns = [NSMutableArray arrayWithCapacity:[indexes count]];\n+    for (NSNumber *i in indexes) {\n+        [columns addObject:[[ColumnAccessibility alloc] initWithParent:self\n+                                                                   withEnv:[ThreadUtilities getJNIEnv]\n+                                                            withAccessible:NULL\n+                                                                 withIndex:i.unsignedIntValue\n+                                                                  withView:self->fView\n+                                                              withJavaRole:JavaAccessibilityIgnore]];\n+    }\n+    return [NSArray arrayWithArray:columns];\n+}\n+\n+- (NSInteger)accessibilityRowCount\n+{\n+    return [[self getTableInfo:sun_lwawt_macosx_CAccessibility_JAVA_AX_ROWS] integerValue];\n+}\n+\n+- (NSInteger)accessibilityColumnCount\n+{\n+    return [[self getTableInfo:sun_lwawt_macosx_CAccessibility_JAVA_AX_COLS] integerValue];\n+}\n+\n+- (nullable NSArray *)accessibilitySelectedCells\n+{\n+    NSArray *children = [super accessibilitySelectedChildren];\n+    NSMutableArray *cells = [NSMutableArray arrayWithCapacity:[children count]];\n+    for (CommonComponentAccessibility *child in children) {\n+        [cells addObject:[[CellAccessibility alloc] initWithParent:self\n+                                                           withEnv:[ThreadUtilities getJNIEnv]\n+                                                    withAccessible:child->fAccessible\n+                                                         withIndex:child->fIndex\n+                                                          withView:fView\n+                                                      withJavaRole:child->fJavaRole]];\n+    }\n+    return [NSArray arrayWithArray:cells];\n+}\n+\n+- (id)accessibilityCellForColumn:(NSInteger)column row:(NSInteger)row {\n+    return [[(TableRowAccessibility *)[[self accessibilityRows] objectAtIndex:row] accessibilityChildren] objectAtIndex:column];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableAccessibility.m","additions":241,"deletions":0,"binary":false,"changes":241,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+\n+@interface TableRowAccessibility : CommonComponentAccessibility <NSAccessibilityRow>\n+\n+@property(readonly) NSUInteger rowNumberInTable;\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableRowAccessibility.h","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"TableRowAccessibility.h\"\n+#import \"JavaAccessibilityAction.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+#import \"TableAccessibility.h\"\n+#import \"CellAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+#import \"sun_lwawt_macosx_CAccessibility.h\"\n+\n+static jclass sjc_CAccessibility = NULL;\n+\n+static jmethodID jm_getChildrenAndRoles = NULL;\n+#define GET_CHILDRENANDROLES_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(jm_getChildrenAndRoles, sjc_CAccessibility, \"getChildrenAndRoles\",\\\n+                      \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;IZ)[Ljava\/lang\/Object;\", ret);\n+\n+@implementation TableRowAccessibility\n+\n+\/\/ NSAccessibilityElement protocol methods\n+\n+- (NSAccessibilityRole)accessibilityRole\n+{\n+    return NSAccessibilityRowRole;\n+}\n+\n+- (NSAccessibilitySubrole)accessibilitySubrole\n+{\n+    return NSAccessibilityTableRowSubrole;\n+}\n+\n+- (NSArray *)accessibilityChildren\n+{\n+    NSArray *children = [super accessibilityChildren];\n+    if (children == nil) {\n+        JNIEnv *env = [ThreadUtilities getJNIEnv];\n+        CommonComponentAccessibility *parent = [self accessibilityParent];\n+        if (parent->fAccessible == NULL) return nil;\n+        GET_CHILDRENANDROLES_METHOD_RETURN(nil);\n+        jobjectArray jchildrenAndRoles = (jobjectArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getChildrenAndRoles,\n+                                                                                      parent->fAccessible, parent->fComponent, sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN, NO);\n+        CHECK_EXCEPTION();\n+        if (jchildrenAndRoles == NULL) return nil;\n+\n+        jsize arrayLen = (*env)->GetArrayLength(env, jchildrenAndRoles);\n+        NSMutableArray *childrenCells = [NSMutableArray arrayWithCapacity:arrayLen\/2];\n+\n+        NSUInteger childIndex = fIndex * [(TableAccessibility *)parent accessibilityColumnCount];\n+        NSInteger i = childIndex * 2;\n+        NSInteger n = (fIndex + 1) * [(TableAccessibility *)parent accessibilityColumnCount] * 2;\n+        for(i; i < n; i+=2)\n+        {\n+            jobject \/* Accessible *\/ jchild = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i);\n+            jobject \/* String *\/ jchildJavaRole = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i+1);\n+\n+            NSString *childJavaRole = nil;\n+            if (jchildJavaRole != NULL) {\n+                DECLARE_CLASS_RETURN(sjc_AccessibleRole, \"javax\/accessibility\/AccessibleRole\", nil);\n+                DECLARE_FIELD_RETURN(sjf_key, sjc_AccessibleRole, \"key\", \"Ljava\/lang\/String;\", nil);\n+                jobject jkey = (*env)->GetObjectField(env, jchildJavaRole, sjf_key);\n+                CHECK_EXCEPTION();\n+                childJavaRole = JavaStringToNSString(env, jkey);\n+                (*env)->DeleteLocalRef(env, jkey);\n+            }\n+\n+            CellAccessibility *child = [[CellAccessibility alloc] initWithParent:self\n+                                                                         withEnv:env\n+                                                                  withAccessible:jchild\n+                                                                       withIndex:childIndex\n+                                                                        withView:self->fView\n+                                                                    withJavaRole:childJavaRole];\n+            [childrenCells addObject:[[child retain] autorelease]];\n+\n+            (*env)->DeleteLocalRef(env, jchild);\n+            (*env)->DeleteLocalRef(env, jchildJavaRole);\n+\n+            childIndex++;\n+        }\n+        (*env)->DeleteLocalRef(env, jchildrenAndRoles);\n+        return childrenCells;\n+    } else {\n+        return children;\n+    }\n+}\n+\n+- (NSInteger)accessibilityIndex\n+{\n+    return self->fIndex;\n+}\n+\n+- (NSString *)accessibilityLabel\n+{\n+    NSString *accessibilityName = @\"\";\n+    NSArray *children = [self accessibilityChildren];\n+        for (id cell in children) {\n+            if ([accessibilityName isEqualToString:@\"\"]) {\n+                accessibilityName = [cell accessibilityLabel];\n+            } else {\n+                accessibilityName = [accessibilityName stringByAppendingFormat:@\", %@\", [cell accessibilityLabel]];\n+            }\n+        }\n+        return accessibilityName;\n+}\n+\n+- (id)accessibilityParent\n+{\n+    return [super accessibilityParent];\n+}\n+\n+- (NSRect)accessibilityFrame\n+{\n+        int height = [[[self accessibilityChildren] objectAtIndex:0] accessibilityFrame].size.height;\n+        int width = 0;\n+        NSPoint point = [[[self accessibilityChildren] objectAtIndex:0] accessibilityFrame].origin;\n+        for (id cell in [self accessibilityChildren]) {\n+            width += [cell accessibilityFrame].size.width;\n+        }\n+        return NSMakeRect(point.x, point.y, width, height);\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableRowAccessibility.m","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"},{"patch":"@@ -74,1 +74,1 @@\n-    self.opaque = FALSE;\n+    self.opaque = YES;\n@@ -291,0 +291,14 @@\n+\n+JNIEXPORT void JNICALL\n+Java_sun_java2d_metal_MTLLayer_nativeSetOpaque\n+(JNIEnv *env, jclass cls, jlong layerPtr, jboolean opaque)\n+{\n+    JNI_COCOA_ENTER(env);\n+\n+    MTLLayer *mtlLayer = OBJC(layerPtr);\n+    [ThreadUtilities performOnMainThreadWaiting:NO block:^(){\n+        [mtlLayer setOpaque:(opaque == JNI_TRUE)];\n+    }];\n+\n+    JNI_COCOA_EXIT(env);\n+}\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLLayer.m","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,5 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.imageio.ImageTypeSpecifier;\n@@ -34,2 +29,0 @@\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -37,2 +30,1 @@\n-import org.w3c.dom.Node;\n-import com.sun.imageio.plugins.common.I18N;\n+import javax.imageio.metadata.IIOMetadataNode;\n@@ -40,0 +32,1 @@\n+import com.sun.imageio.plugins.common.I18N;\n@@ -41,0 +34,3 @@\n+import org.w3c.dom.Node;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n@@ -117,5 +113,1 @@\n-        try {\n-            return new String(data, \"ISO-8859-1\");\n-        } catch (UnsupportedEncodingException e) {\n-            return \"\";\n-        }\n+        return new String(data, ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPMetadata.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n-import java.util.ArrayList;\n@@ -32,1 +30,1 @@\n-import javax.imageio.ImageTypeSpecifier;\n+\n@@ -34,3 +32,0 @@\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -38,0 +33,2 @@\n+import javax.imageio.metadata.IIOMetadataNode;\n+\n@@ -40,0 +37,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -135,5 +134,1 @@\n-        try {\n-            return new String(data, \"ISO-8859-1\");\n-        } catch (UnsupportedEncodingException e) {\n-            return \"\";\n-        }\n+        return new String(data, ISO_8859_1);\n@@ -387,6 +382,1 @@\n-            String s = null;\n-            try {\n-                s = new String(comment, \"ISO-8859-1\");\n-            } catch (UnsupportedEncodingException e) {\n-                throw new RuntimeException(\"Encoding ISO-8859-1 unknown!\");\n-            }\n+            String s = new String(comment, ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFImageMetadata.java","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -31,3 +30,1 @@\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.imageio.ImageTypeSpecifier;\n+\n@@ -35,3 +32,0 @@\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -39,0 +33,2 @@\n+import javax.imageio.metadata.IIOMetadataNode;\n+\n@@ -41,0 +37,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -98,5 +96,1 @@\n-        try {\n-            return data.getBytes(\"ISO-8859-1\");\n-        } catch (UnsupportedEncodingException e) {\n-            return \"\".getBytes();\n-        }\n+        return data.getBytes(ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFWritableImageMetadata.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import java.io.IOException;\n+\n+import javax.imageio.metadata.IIOInvalidTreeException;\n@@ -30,4 +33,0 @@\n-import javax.imageio.metadata.IIOInvalidTreeException;\n-\n-import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n@@ -37,0 +36,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -48,1 +49,0 @@\n-    private static final String ENCODING = \"ISO-8859-1\";\n@@ -99,4 +99,1 @@\n-        try {\n-            return new String (data, ENCODING);\n-        } catch (UnsupportedEncodingException e) {}  \/\/ Won't happen\n-        return null;\n+        return new String(data, ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/COMMarkerSegment.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,12 +28,0 @@\n-import javax.imageio.IIOException;\n-import javax.imageio.IIOImage;\n-import javax.imageio.ImageTypeSpecifier;\n-import javax.imageio.ImageReader;\n-import javax.imageio.metadata.IIOInvalidTreeException;\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.stream.ImageInputStream;\n-import javax.imageio.stream.ImageOutputStream;\n-import javax.imageio.stream.MemoryCacheImageOutputStream;\n-import javax.imageio.event.IIOReadProgressListener;\n-\n@@ -41,2 +29,0 @@\n-import java.awt.color.ICC_Profile;\n-import java.awt.color.ICC_ColorSpace;\n@@ -44,0 +30,3 @@\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.awt.image.BufferedImage;\n@@ -45,2 +34,0 @@\n-import java.awt.image.SampleModel;\n-import java.awt.image.IndexColorModel;\n@@ -48,1 +35,0 @@\n-import java.awt.image.BufferedImage;\n@@ -51,0 +37,1 @@\n+import java.awt.image.IndexColorModel;\n@@ -52,0 +39,1 @@\n+import java.awt.image.SampleModel;\n@@ -53,1 +41,0 @@\n-import java.io.IOException;\n@@ -55,1 +42,1 @@\n-import java.util.List;\n+import java.io.IOException;\n@@ -58,0 +45,1 @@\n+import java.util.List;\n@@ -59,0 +47,12 @@\n+import javax.imageio.IIOException;\n+import javax.imageio.IIOImage;\n+import javax.imageio.ImageReader;\n+import javax.imageio.ImageTypeSpecifier;\n+import javax.imageio.event.IIOReadProgressListener;\n+import javax.imageio.metadata.IIOInvalidTreeException;\n+import javax.imageio.metadata.IIOMetadataNode;\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n+import javax.imageio.stream.MemoryCacheImageOutputStream;\n+\n+import org.w3c.dom.NamedNodeMap;\n@@ -61,1 +61,2 @@\n-import org.w3c.dom.NamedNodeMap;\n+\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n@@ -1356,1 +1357,1 @@\n-            byte [] id = ID.getBytes(\"US-ASCII\");\n+            byte[] id = ID.getBytes(US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JFIFMarkerSegment.java","additions":22,"deletions":21,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -41,1 +42,0 @@\n-import java.io.InputStream;\n@@ -43,0 +43,1 @@\n+import java.io.InputStream;\n@@ -50,0 +51,1 @@\n+\n@@ -51,1 +53,0 @@\n-import javax.imageio.ImageReader;\n@@ -53,0 +54,1 @@\n+import javax.imageio.ImageReader;\n@@ -57,0 +59,1 @@\n+\n@@ -60,1 +63,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -63,0 +65,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -489,1 +494,1 @@\n-            text = new String(inflate(b), \"UTF8\");\n+            text = new String(inflate(b), UTF_8);\n@@ -491,1 +496,1 @@\n-            text = new String(b, \"UTF8\");\n+            text = new String(b, UTF_8);\n@@ -592,1 +597,1 @@\n-        metadata.tEXt_text.add(new String(b, \"ISO-8859-1\"));\n+        metadata.tEXt_text.add(new String(b, ISO_8859_1));\n@@ -693,1 +698,1 @@\n-        metadata.zTXt_text.add(new String(inflate(b), \"ISO-8859-1\"));\n+        metadata.zTXt_text.add(new String(inflate(b), ISO_8859_1));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageReader.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.awt.image.WritableRaster;\n@@ -34,0 +33,1 @@\n+import java.awt.image.WritableRaster;\n@@ -40,0 +40,1 @@\n+\n@@ -50,0 +51,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -804,2 +808,1 @@\n-\n-            cs.write(translatedKeywordIter.next().getBytes(\"UTF8\"));\n+            cs.write(translatedKeywordIter.next().getBytes(UTF_8));\n@@ -810,1 +813,1 @@\n-                cs.write(deflate(text.getBytes(\"UTF8\")));\n+                cs.write(deflate(text.getBytes(UTF_8)));\n@@ -812,1 +815,1 @@\n-                cs.write(text.getBytes(\"UTF8\"));\n+                cs.write(text.getBytes(UTF_8));\n@@ -836,1 +839,1 @@\n-            cs.write(deflate(text.getBytes(\"ISO-8859-1\")));\n+            cs.write(deflate(text.getBytes(ISO_8859_1)));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageWriter.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -29,1 +30,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -35,0 +35,1 @@\n+\n@@ -36,2 +37,0 @@\n-import javax.imageio.stream.ImageInputStream;\n-import javax.imageio.stream.ImageOutputStream;\n@@ -43,0 +42,4 @@\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n+\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n@@ -286,2 +289,1 @@\n-                                        index - prevIndex,\n-                                        StandardCharsets.US_ASCII);\n+                                        index - prevIndex, US_ASCII);\n@@ -322,1 +324,1 @@\n-                            stream.readFully(unit, bytesRead, sz);\n+                            stream.readFully(unit, 0, sz);\n@@ -458,1 +460,1 @@\n-                        stream.readFully(unit, shortsRead, sz);\n+                        stream.readFully(unit, 0, sz);\n@@ -489,1 +491,1 @@\n-                        stream.readFully(unit, intsToRead, sz);\n+                        stream.readFully(unit, 0, sz);\n@@ -521,1 +523,1 @@\n-                        stream.readFully(unit, (srationalsToRead * 2), (sz * 2));\n+                        stream.readFully(unit, 0, (sz * 2));\n@@ -555,1 +557,1 @@\n-                        stream.readFully(unit, floatsToRead, sz);\n+                        stream.readFully(unit, 0, sz);\n@@ -586,1 +588,1 @@\n-                        stream.readFully(unit, doublesToRead, sz);\n+                        stream.readFully(unit, 0, sz);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFIFD.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -37,1 +38,0 @@\n-import java.awt.image.RenderedImage;\n@@ -39,0 +39,1 @@\n+import java.awt.image.RenderedImage;\n@@ -47,0 +48,1 @@\n+\n@@ -49,0 +51,1 @@\n+import javax.imageio.ImageTypeSpecifier;\n@@ -51,1 +54,0 @@\n-import javax.imageio.ImageTypeSpecifier;\n@@ -55,4 +57,0 @@\n-import javax.imageio.spi.ImageWriterSpi;\n-import javax.imageio.stream.ImageOutputStream;\n-import org.w3c.dom.Node;\n-import com.sun.imageio.plugins.common.ImageUtil;\n@@ -65,0 +63,4 @@\n+import javax.imageio.spi.ImageWriterSpi;\n+import javax.imageio.stream.ImageOutputStream;\n+\n+import com.sun.imageio.plugins.common.ImageUtil;\n@@ -67,1 +69,3 @@\n-import java.nio.charset.StandardCharsets;\n+import org.w3c.dom.Node;\n+\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n@@ -1515,1 +1519,1 @@\n-                         ExifTIFFTagSet.EXIF_VERSION_2_2.getBytes(StandardCharsets.US_ASCII));\n+                         ExifTIFFTagSet.EXIF_VERSION_2_2.getBytes(US_ASCII));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFImageWriter.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,5 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.imageio.ImageTypeSpecifier;\n@@ -34,2 +29,0 @@\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -37,2 +30,1 @@\n-import org.w3c.dom.Node;\n-import com.sun.imageio.plugins.common.I18N;\n+import javax.imageio.metadata.IIOMetadataNode;\n@@ -40,0 +32,1 @@\n+import com.sun.imageio.plugins.common.I18N;\n@@ -41,0 +34,1 @@\n+import org.w3c.dom.Node;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/wbmp\/WBMPMetadata.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-package com.sun.java.swing.plaf.gtk;\n@@ -27,3 +26,1 @@\n-import sun.swing.SwingUtilities2;\n-import com.sun.java.swing.plaf.gtk.GTKConstants.ArrowType;\n-import com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType;\n+package com.sun.java.swing.plaf.gtk;\n@@ -31,0 +28,48 @@\n+import java.awt.AlphaComposite;\n+import java.awt.BasicStroke;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Composite;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.GradientPaint;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.Stroke;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.PathIterator;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.geom.RectangularShape;\n+import java.awt.image.FilteredImageSource;\n+import java.awt.image.ImageProducer;\n+import java.awt.image.RGBImageFilter;\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.StringTokenizer;\n+\n+import javax.swing.Icon;\n+import javax.swing.ImageIcon;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n@@ -33,9 +78,6 @@\n-import javax.swing.plaf.synth.*;\n-\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.image.*;\n-import java.io.*;\n-import java.net.*;\n-import java.security.*;\n-import java.util.*;\n+import javax.swing.plaf.synth.ColorType;\n+import javax.swing.plaf.synth.SynthConstants;\n+import javax.swing.plaf.synth.SynthContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n@@ -43,3 +85,6 @@\n-import javax.swing.*;\n-\n-import javax.xml.parsers.*;\n+import com.sun.java.swing.plaf.gtk.GTKConstants.ArrowType;\n+import com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n@@ -47,1 +92,3 @@\n-import org.w3c.dom.*;\n+import sun.swing.SwingUtilities2;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n@@ -539,1 +586,2 @@\n-                    Reader reader = new InputStreamReader(url.openStream(), \"ISO-8859-1\");\n+                    Reader reader = new InputStreamReader(url.openStream(),\n+                                                          ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/Metacity.java","additions":66,"deletions":18,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Objects;\n@@ -84,2 +85,1 @@\n-            if (off < 0 || len < 0 || len > b.length - off)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkFromIndexSize(off, len, b.length);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/AudioFloatInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -1150,1 +1152,1 @@\n-        int len = value.getBytes(\"ascii\").length;\n+        int len = value.getBytes(US_ASCII).length;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/DLSSoundbank.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -79,1 +81,1 @@\n-        this.fourcc = new String(fourcc, \"ascii\");\n+        this.fourcc = new String(fourcc, US_ASCII);\n@@ -86,1 +88,1 @@\n-            this.riff_type = new String(format, \"ascii\");\n+            this.riff_type = new String(format, US_ASCII);\n@@ -230,1 +232,1 @@\n-                return new String(buff, 0, i, \"ascii\");\n+                return new String(buff, 0, i, US_ASCII);\n@@ -233,1 +235,1 @@\n-        return new String(buff, \"ascii\");\n+        return new String(buff, US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/RIFFReader.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -211,1 +213,1 @@\n-            raf.write(\"RIFF\".getBytes(\"ascii\"));\n+            raf.write(\"RIFF\".getBytes(US_ASCII));\n@@ -213,1 +215,1 @@\n-            raf.write(\"LIST\".getBytes(\"ascii\"));\n+            raf.write(\"LIST\".getBytes(US_ASCII));\n@@ -215,1 +217,1 @@\n-            raf.write((format + \"    \").substring(0, 4).getBytes(\"ascii\"));\n+            raf.write((format + \"    \").substring(0, 4).getBytes(US_ASCII));\n@@ -223,2 +225,1 @@\n-            raf.write((format + \"    \").substring(0, 4).getBytes(\"ascii\"));\n-\n+            raf.write((format + \"    \").substring(0, 4).getBytes(US_ASCII));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/RIFFWriter.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -542,1 +544,1 @@\n-        int len = value.getBytes(\"ascii\").length;\n+        int len = value.getBytes(US_ASCII).length;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/SF2Soundbank.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -33,0 +32,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -102,5 +103,1 @@\n-                    try {\n-                        name = new String(data, 6, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 6, 16, US_ASCII);\n@@ -138,5 +135,1 @@\n-                    try {\n-                        name = new String(data, 7, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 7, 16, US_ASCII);\n@@ -159,5 +152,1 @@\n-                    try {\n-                        name = new String(data, 7, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 7, 16, US_ASCII);\n@@ -177,5 +166,1 @@\n-                    try {\n-                        name = new String(data, 7, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 7, 16, US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/SoftTuning.java","additions":7,"deletions":22,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -97,1 +97,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -195,2 +194,0 @@\n-    private static boolean fxAppThreadIsDispatchThread;\n-\n@@ -233,7 +230,0 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-            public Object run() {\n-                fxAppThreadIsDispatchThread =\n-                        \"true\".equals(System.getProperty(\"javafx.embed.singleThread\"));\n-                return null;\n-            }\n-        });\n@@ -242,0 +232,8 @@\n+    @SuppressWarnings(\"removal\")\n+    private static boolean fxAppThreadIsDispatchThread =\n+            AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n+                public Boolean run() {\n+                    return \"true\".equals(System.getProperty(\"javafx.embed.singleThread\"));\n+                }\n+            });\n+\n@@ -737,0 +735,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -738,0 +737,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -739,0 +739,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -753,0 +754,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/EventQueue.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -388,1 +388,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -408,4 +407,2 @@\n-    public static final String hostEncoding;\n-\n-    static {\n-        hostEncoding =\n+    @SuppressWarnings(\"removal\")\n+    public static final String hostEncoding =\n@@ -414,1 +411,0 @@\n-    }\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/DocFlavor.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ Same-version serialization only\n+@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n@@ -108,0 +108,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -109,1 +110,19 @@\n-    protected static final Component component;\n+    protected static final Component component\n+            = AccessController.doPrivileged(new PrivilegedAction<Component>() {\n+        public Component run() {\n+            try {\n+                final Component component = createNoPermsComponent();\n+\n+                \/\/ 6482575 - clear the appContext field so as not to leak it\n+                AWTAccessor.getComponentAccessor().\n+                        setAppContext(component, null);\n+\n+                return component;\n+            } catch (Throwable e) {\n+                \/\/ We don't care about component.\n+                \/\/ So don't prevent class initialisation.\n+                e.printStackTrace();\n+                return null;\n+            }\n+        }\n+    });\n@@ -117,23 +136,1 @@\n-    protected static final MediaTracker tracker;\n-\n-    static {\n-        component = AccessController.doPrivileged(new PrivilegedAction<Component>() {\n-            public Component run() {\n-                try {\n-                    final Component component = createNoPermsComponent();\n-\n-                    \/\/ 6482575 - clear the appContext field so as not to leak it\n-                    AWTAccessor.getComponentAccessor().\n-                            setAppContext(component, null);\n-\n-                    return component;\n-                } catch (Throwable e) {\n-                    \/\/ We don't care about component.\n-                    \/\/ So don't prevent class initialisation.\n-                    e.printStackTrace();\n-                    return null;\n-                }\n-            }\n-        });\n-        tracker = new MediaTracker(component);\n-    }\n+    protected static final MediaTracker tracker = new MediaTracker(component);\n@@ -141,0 +138,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ImageIcon.java","additions":23,"deletions":25,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -4194,1 +4194,1 @@\n-        if (propertyName == \"opaque\") {\n+        if (\"opaque\".equals(propertyName)) {\n@@ -4199,1 +4199,1 @@\n-        } else if (propertyName == \"autoscrolls\") {\n+        } else if (\"autoscrolls\".equals(propertyName)) {\n@@ -4204,1 +4204,1 @@\n-        } else if (propertyName == \"focusTraversalKeysForward\") {\n+        } else if (\"focusTraversalKeysForward\".equals(propertyName)) {\n@@ -4212,1 +4212,1 @@\n-        } else if (propertyName == \"focusTraversalKeysBackward\") {\n+        } else if (\"focusTraversalKeysBackward\".equals(propertyName)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JComponent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n- *     dialog.show();\n+ *     dialog.setVisible(true);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JOptionPane.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"})\n+@SuppressWarnings(\"serial\")\n@@ -120,4 +120,3 @@\n-    static boolean popupPostionFixDisabled = false;\n-\n-    static {\n-        popupPostionFixDisabled = java.security.AccessController.doPrivileged(\n+    @SuppressWarnings(\"removal\")\n+    static boolean popupPostionFixDisabled =\n+            java.security.AccessController.doPrivileged(\n@@ -125,3 +124,1 @@\n-                \"javax.swing.adjustPopupLocationToFit\",\"\")).equals(\"false\");\n-\n-    }\n+                    \"javax.swing.adjustPopupLocationToFit\",\"\")).equals(\"false\");\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JPopupMenu.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"})\n+@SuppressWarnings(\"serial\")\n@@ -211,1 +211,4 @@\n-    private static final boolean LOG_DISABLE_TRUE_DOUBLE_BUFFERING;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean LOG_DISABLE_TRUE_DOUBLE_BUFFERING\n+            = AccessController.doPrivileged(new GetBooleanAction(\n+                                   \"swing.logDoubleBufferingDisable\"));\n@@ -217,1 +220,4 @@\n-    private static final boolean IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING\n+            = AccessController.doPrivileged(new GetBooleanAction(\n+                                   \"swing.ignoreDoubleBufferingDisable\"));\n@@ -329,9 +335,0 @@\n-    static {\n-        LOG_DISABLE_TRUE_DOUBLE_BUFFERING =\n-            AccessController.doPrivileged(new GetBooleanAction(\n-                                   \"swing.logDoubleBufferingDisable\"));\n-        IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING =\n-            AccessController.doPrivileged(new GetBooleanAction(\n-                                   \"swing.ignoreDoubleBufferingDisable\"));\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JRootPane.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import java.util.Objects;\n@@ -1793,1 +1794,1 @@\n-            throw new IndexOutOfBoundsException(\"Index: \"+index+\", Tab count: \"+pages.size());\n+            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Tab count: \" + pages.size());\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTabbedPane.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -99,6 +98,4 @@\n-    private static final boolean legacySortingFTPEnabled;\n-\n-    static {\n-        legacySortingFTPEnabled = \"true\".equals(AccessController.doPrivileged(\n-            new GetPropertyAction(\"swing.legacySortingFTPEnabled\", \"true\")));\n-    }\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean legacySortingFTPEnabled = \"true\".equals(\n+            AccessController.doPrivileged(\n+                    new GetPropertyAction(\"swing.legacySortingFTPEnabled\", \"true\")));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SortingFocusTraversalPolicy.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-class NimbusIcon implements SynthIcon, UIResource {\n+class NimbusIcon implements SynthIcon {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/NimbusIcon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25754,1 +25754,1 @@\n-                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" componentPropertyName=\"background\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n@@ -25860,1 +25860,1 @@\n-                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" componentPropertyName=\"background\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n@@ -27355,1 +27355,1 @@\n-               <matte red=\"0\" green=\"0\" blue=\"0\" alpha=\"0\" uiDefaultParentName=\"text\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n+               <matte red=\"0\" green=\"0\" blue=\"0\" alpha=\"0\" uiDefaultParentName=\"text\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n@@ -27358,1 +27358,1 @@\n-               <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n+               <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n@@ -27382,1 +27382,1 @@\n-                  <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectedText\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n+                  <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectedText\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n@@ -27385,1 +27385,1 @@\n-                  <matte red=\"57\" green=\"105\" blue=\"138\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectionBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n+                  <matte red=\"57\" green=\"105\" blue=\"138\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectionBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-package javax.swing.text.html;\n@@ -27,1 +26,1 @@\n-import sun.awt.AppContext;\n+package javax.swing.text.html;\n@@ -29,3 +28,26 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Cursor;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ComponentListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.io.Serializable;\n+import java.io.StringReader;\n+import java.io.Writer;\n+import java.lang.ref.Reference;\n+import java.lang.ref.WeakReference;\n@@ -34,7 +56,0 @@\n-import javax.swing.text.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.TextUI;\n-import java.util.*;\n-import javax.accessibility.*;\n-import java.lang.ref.*;\n@@ -43,0 +58,37 @@\n+import java.util.Enumeration;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.Action;\n+import javax.swing.JComponent;\n+import javax.swing.JEditorPane;\n+import javax.swing.JViewport;\n+import javax.swing.SizeRequirements;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.CaretEvent;\n+import javax.swing.event.CaretListener;\n+import javax.swing.event.HyperlinkEvent;\n+import javax.swing.plaf.TextUI;\n+import javax.swing.text.AbstractDocument;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.BoxView;\n+import javax.swing.text.ComponentView;\n+import javax.swing.text.DefaultHighlighter;\n+import javax.swing.text.Document;\n+import javax.swing.text.EditorKit;\n+import javax.swing.text.Element;\n+import javax.swing.text.ElementIterator;\n+import javax.swing.text.Highlighter;\n+import javax.swing.text.IconView;\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.LabelView;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.Position;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyledDocument;\n+import javax.swing.text.StyledEditorKit;\n+import javax.swing.text.TextAction;\n+import javax.swing.text.View;\n+import javax.swing.text.ViewFactory;\n@@ -45,0 +97,4 @@\n+import sun.awt.AppContext;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -406,1 +462,1 @@\n-                        new InputStreamReader(is, \"ISO-8859-1\"));\n+                        new InputStreamReader(is, ISO_8859_1));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLEditorKit.java","additions":69,"deletions":13,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,3 +28,0 @@\n-import java.lang.*;\n-import java.util.*;\n-import java.io.*;\n@@ -31,0 +29,6 @@\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.io.StreamTokenizer;\n@@ -33,1 +37,16 @@\n-import javax.swing.text.*;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Vector;\n+\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.Style;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyleContext;\n+import javax.swing.text.StyledDocument;\n+import javax.swing.text.TabStop;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n@@ -595,1 +614,1 @@\n-            new InputStreamReader(strm, \"ISO-8859-1\")));\n+            new InputStreamReader(strm, ISO_8859_1)));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/RTFReader.java","additions":24,"deletions":5,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -28,1 +29,0 @@\n-import java.io.OutputStreamWriter;\n@@ -30,0 +30,1 @@\n+import java.io.OutputStreamWriter;\n@@ -32,1 +33,3 @@\n-import java.nio.charset.StandardCharsets;\n+\n+import static java.nio.charset.StandardCharsets.UTF_16BE;\n+import static java.nio.charset.StandardCharsets.UTF_16LE;\n@@ -112,3 +115,2 @@\n-                this.unicodeEncoder = isLE?\n-                    StandardCharsets.UTF_16LE.newEncoder():\n-                    StandardCharsets.UTF_16BE.newEncoder();\n+                this.unicodeEncoder = isLE ? UTF_16LE.newEncoder():\n+                                             UTF_16BE.newEncoder();\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/FontDescriptor.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-\n@@ -38,1 +37,5 @@\n-\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.RenderedImage;\n+import java.awt.image.WritableRaster;\n@@ -43,0 +46,2 @@\n+import java.io.FilePermission;\n+import java.io.IOException;\n@@ -45,1 +50,0 @@\n-import java.io.IOException;\n@@ -51,1 +55,2 @@\n-\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Modifier;\n@@ -54,1 +59,0 @@\n-\n@@ -60,1 +64,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -62,4 +65,0 @@\n-\n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Modifier;\n-\n@@ -71,14 +70,16 @@\n-\n-import java.util.*;\n-\n-import sun.datatransfer.DataFlavorUtil;\n-\n-import sun.awt.AppContext;\n-import sun.awt.ComponentFactory;\n-import sun.awt.SunToolkit;\n-\n-import java.awt.image.BufferedImage;\n-import java.awt.image.ImageObserver;\n-import java.awt.image.RenderedImage;\n-import java.awt.image.WritableRaster;\n-import java.awt.image.ColorModel;\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedMap;\n+import java.util.Stack;\n+import java.util.TreeMap;\n+import java.util.stream.Stream;\n@@ -87,1 +88,0 @@\n-import javax.imageio.ImageReader;\n@@ -89,1 +89,1 @@\n-import javax.imageio.ImageWriter;\n+import javax.imageio.ImageReader;\n@@ -91,1 +91,1 @@\n-\n+import javax.imageio.ImageWriter;\n@@ -93,1 +93,0 @@\n-\n@@ -97,0 +96,3 @@\n+import sun.awt.AppContext;\n+import sun.awt.ComponentFactory;\n+import sun.awt.SunToolkit;\n@@ -99,0 +101,1 @@\n+import sun.datatransfer.DataFlavorUtil;\n@@ -100,3 +103,1 @@\n-import java.io.FilePermission;\n-import java.util.stream.Stream;\n-\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -553,1 +554,1 @@\n-                charset = new String(charsetNameBytes, StandardCharsets.UTF_8);\n+                charset = new String(charsetNameBytes, UTF_8);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/datatransfer\/DataTransferer.java","additions":33,"deletions":32,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -429,1 +429,0 @@\n-                t.printStackTrace();\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/CMap.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -59,0 +58,2 @@\n+        initStatic();\n+    }\n@@ -60,0 +61,2 @@\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/FontUtilities.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -138,0 +137,5 @@\n+        initStatic();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/StrikeCache.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3355,8 +3355,1 @@\n-            String[] fontNames = null;\n-            if (fontMapNames.size() > 0) {\n-                fontNames = new String[fontMapNames.size()];\n-                Object [] keyNames = fontMapNames.keySet().toArray();\n-                for (int i=0; i < keyNames.length; i++) {\n-                    fontNames[i] = (String)keyNames[i];\n-                }\n-            }\n+            String[] fontNames = fontMapNames.keySet().toArray(new String[0]);\n@@ -3431,5 +3424,1 @@\n-        String[] retval =  new String[familyNames.size()];\n-        Object [] keyNames = familyNames.keySet().toArray();\n-        for (int i=0; i < keyNames.length; i++) {\n-            retval[i] = familyNames.get(keyNames[i]);\n-        }\n+        String[] retval = familyNames.values().toArray(new String[0]);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/SunFontManager.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -521,0 +521,4 @@\n+            ByteBuffer maxpTable = getTableBuffer(maxpTag);\n+            if (maxpTable.getChar(4) == 0) {\n+                throw new FontFormatException(\"zero glyphs\");\n+            }\n@@ -984,2 +988,2 @@\n-            stSize = .05f;\n-            stPos = -.4f;\n+            stSize = 0.05f;\n+            stPos = -0.4f;\n@@ -991,0 +995,6 @@\n+        if (stSize < 0f) {\n+            stSize = 0.05f;\n+        }\n+        if (Math.abs(stPos) > 2.0f) {\n+            stPos = -0.4f;\n+        }\n@@ -995,2 +1005,2 @@\n-            ulSize = .05f;\n-            ulPos = .1f;\n+            ulSize = 0.05f;\n+            ulPos = 0.1f;\n@@ -1002,0 +1012,6 @@\n+        if (ulSize < 0f) {\n+            ulSize = 0.05f;\n+        }\n+        if (Math.abs(ulPos) > 2.0f) {\n+            ulPos = 0.1f;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/TrueTypeFont.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.lang.ref.WeakReference;\n@@ -33,1 +32,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -35,0 +33,1 @@\n+import java.nio.BufferUnderflowException;\n@@ -37,1 +36,0 @@\n-import java.nio.BufferUnderflowException;\n@@ -40,0 +38,3 @@\n+import java.util.HashMap;\n+import java.util.HashSet;\n+\n@@ -42,3 +43,2 @@\n-import java.util.HashSet;\n-import java.util.HashMap;\n-import java.awt.Font;\n+\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n@@ -612,5 +612,1 @@\n-        try {\n-            return new String(nameBytes, \"US-ASCII\");\n-        } catch (UnsupportedEncodingException e) {\n-            return new String(nameBytes);\n-        }\n+        return new String(nameBytes, US_ASCII);\n@@ -626,5 +622,1 @@\n-        try {\n-            return new String(nameBytes, \"US-ASCII\");\n-        } catch (UnsupportedEncodingException e) {\n-            return new String(nameBytes);\n-        }\n+        return new String(nameBytes, US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/Type1Font.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -69,2 +68,4 @@\n-    private static final boolean uiScaleEnabled;\n-    private static final double debugScale;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean uiScaleEnabled\n+            = \"true\".equals(AccessController.doPrivileged(\n+            new GetPropertyAction(\"sun.java2d.uiScale.enabled\", \"true\")));\n@@ -72,5 +73,2 @@\n-    static {\n-        uiScaleEnabled = \"true\".equals(AccessController.doPrivileged(\n-                new GetPropertyAction(\"sun.java2d.uiScale.enabled\", \"true\")));\n-        debugScale = uiScaleEnabled ? getScaleFactor(\"sun.java2d.uiScale\") : -1;\n-    }\n+    private static final double debugScale =\n+            uiScaleEnabled ? getScaleFactor(\"sun.java2d.uiScale\") : -1;\n@@ -191,5 +189,1 @@\n-            String[] retval =  new String[map.size()];\n-            Object [] keyNames = map.keySet().toArray();\n-            for (int i=0; i < keyNames.length; i++) {\n-                retval[i] = map.get(keyNames[i]);\n-            }\n+            String[] retval = map.values().toArray(new String[0]);\n@@ -302,0 +296,1 @@\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SunGraphicsEnvironment.java","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.concurrent.locks.StampedLock;\n@@ -37,0 +38,5 @@\n+    \/**\n+     * Prevent changing profiles data during transform creation.\n+     *\/\n+    private static final StampedLock lock = new StampedLock();\n+\n@@ -83,2 +89,7 @@\n-    public synchronized void setTagData(Profile p, int tagSignature, byte[] data) {\n-        getLcmsProfile(p).setTag(tagSignature, data);\n+    public void setTagData(Profile p, int tagSignature, byte[] data) {\n+        long stamp = lock.writeLock();\n+        try {\n+            getLcmsProfile(p).setTag(tagSignature, data);\n+        } finally {\n+            lock.unlockWrite(stamp);\n+        }\n@@ -97,5 +108,13 @@\n-\n-        for (int i = 0; i < profiles.length; i++) {\n-            if (profiles[i] == null) throw new CMMException(\"Unknown profile ID\");\n-\n-            ptrs[i] = profiles[i].getLcmsPtr();\n+        long stamp = lock.readLock();\n+        try {\n+            for (int i = 0; i < profiles.length; i++) {\n+                if (profiles[i] == null) {\n+                    throw new CMMException(\"Unknown profile ID\");\n+                }\n+                ptrs[i] = profiles[i].getLcmsPtr();\n+            }\n+\n+            return createNativeTransform(ptrs, renderType, inFormatter,\n+                    isInIntPacked, outFormatter, isOutIntPacked, disposerRef);\n+        } finally {\n+            lock.unlockRead(stamp);\n@@ -103,3 +122,0 @@\n-\n-        return createNativeTransform(ptrs, renderType, inFormatter,\n-                isInIntPacked, outFormatter, isOutIntPacked, disposerRef);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMS.java","additions":26,"deletions":10,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.awt.print.Pageable;\n@@ -31,3 +32,0 @@\n-import java.io.UnsupportedEncodingException;\n-\n-import java.awt.print.Pageable;\n@@ -60,3 +58,1 @@\n-   public Reader getReaderForText()\n-      throws UnsupportedEncodingException, IOException {\n-\n+   public Reader getReaderForText() throws IOException {\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PageableDoc.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ JDK-implementation class\n+@SuppressWarnings(\"serial\") \/\/ JDK-implementation class\n@@ -86,13 +86,0 @@\n-    \/**\n-     * {@code copyBufferEnabled}, true by default, defines the following strategy.\n-     * A duplicating (copy) buffer is created for the original pixel buffer.\n-     * The copy buffer is synchronized with the original buffer every time the\n-     * latter changes. {@code JLightweightFrame} passes the copy buffer array\n-     * to the {@link LightweightContent#imageBufferReset} method. The code spot\n-     * which synchronizes two buffers becomes the only critical section guarded\n-     * by the lock (managed with the {@link LightweightContent#paintLock()},\n-     * {@link LightweightContent#paintUnlock()} methods).\n-     *\/\n-    private static boolean copyBufferEnabled;\n-    private int[] copyBuffer;\n-\n@@ -109,2 +96,0 @@\n-        copyBufferEnabled = \"true\".equals(AccessController.\n-            doPrivileged(new GetPropertyAction(\"swing.jlf.copyBufferEnabled\", \"true\")));\n@@ -113,0 +98,15 @@\n+    \/**\n+     * {@code copyBufferEnabled}, true by default, defines the following strategy.\n+     * A duplicating (copy) buffer is created for the original pixel buffer.\n+     * The copy buffer is synchronized with the original buffer every time the\n+     * latter changes. {@code JLightweightFrame} passes the copy buffer array\n+     * to the {@link LightweightContent#imageBufferReset} method. The code spot\n+     * which synchronizes two buffers becomes the only critical section guarded\n+     * by the lock (managed with the {@link LightweightContent#paintLock()},\n+     * {@link LightweightContent#paintUnlock()} methods).\n+     *\/\n+    @SuppressWarnings(\"removal\")\n+    private static boolean copyBufferEnabled = \"true\".equals(AccessController.\n+            doPrivileged(new GetPropertyAction(\"swing.jlf.copyBufferEnabled\", \"true\")));\n+    private int[] copyBuffer;\n+\n@@ -117,0 +117,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -333,1 +334,1 @@\n-    @SuppressWarnings(\"serial\") \/\/ anonymous class inside\n+    @SuppressWarnings({\"removal\",\"serial\"}) \/\/ anonymous class inside\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/JLightweightFrame.java","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,0 @@\n-import jdk.internal.misc.Unsafe;\n@@ -64,0 +63,5 @@\n+import jdk.internal.misc.Unsafe;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -311,6 +315,1 @@\n-        byte[] bdata = null;\n-        try {\n-            bdata = str.getBytes(\"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            uee.printStackTrace();\n-        }\n+        byte[] bdata = str.getBytes(UTF_8);\n@@ -330,6 +329,1 @@\n-        byte[] bdata = null;\n-        try {\n-            bdata = str.getBytes(\"ISO-8859-1\");\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            uee.printStackTrace();\n-        }\n+        byte[] bdata = str.getBytes(ISO_8859_1);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XAtom.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-     * A method for a subsytem to express its interest in a certain\n+     * A method for a subsystem to express its interest in a certain\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XMSelection.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-\n@@ -30,0 +29,1 @@\n+import java.nio.charset.Charset;\n@@ -34,0 +34,3 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -385,1 +388,1 @@\n-        String charSet = \"UTF8\";\n+        Charset charSet = UTF_8;\n@@ -389,1 +392,1 @@\n-            charSet = \"ASCII\";\n+            charSet = US_ASCII;\n@@ -395,6 +398,2 @@\n-        try {\n-            net_wm_name_cache = new String(net_wm_name, charSet);\n-            return net_wm_name_cache;\n-        } catch (java.io.UnsupportedEncodingException uex) {\n-            return null;\n-        }\n+        net_wm_name_cache = new String(net_wm_name, charSet);\n+        return net_wm_name_cache;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XNETProtocol.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -70,0 +69,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -1361,6 +1362,1 @@\n-        final byte[] message;\n-        try {\n-            message = messageBuilder.toString().getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException cannotHappen) {\n-            return;\n-        }\n+        final byte[] message = messageBuilder.toString().getBytes(UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindowPeer.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -60,0 +59,5 @@\n+        initStatic();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n@@ -298,0 +302,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -320,0 +325,1 @@\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsEnvironment.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,3 +29,0 @@\n-\n-import java.io.UnsupportedEncodingException;\n-\n@@ -35,0 +32,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -201,6 +199,1 @@\n-            String str = null;\n-            try {\n-                str = new String(data, idx, len, \"UTF-8\");\n-            } catch (UnsupportedEncodingException e) {\n-                \/\/ XXX: cannot happen, \"UTF-8\" is always supported\n-            }\n+            String str = new String(data, idx, len, UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/XSettings.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -42,0 +41,1 @@\n+\n@@ -46,2 +46,0 @@\n-import sun.font.CompositeFontDescriptor;\n-import sun.font.FontConfigManager.FontConfigInfo;\n@@ -50,0 +48,1 @@\n+import sun.font.FontConfigManager.FontConfigInfo;\n@@ -52,0 +51,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -181,1 +182,1 @@\n-            ret[i] = new FontDescriptor(componentFaceNames[i], StandardCharsets.ISO_8859_1.newEncoder(), new int[0]);\n+            ret[i] = new FontDescriptor(componentFaceNames[i], ISO_8859_1.newEncoder(), new int[0]);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/FcFontConfiguration.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,0 @@\n-import java.io.UnsupportedEncodingException;\n-import java.lang.ref.WeakReference;\n@@ -39,0 +37,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -216,7 +216,1 @@\n-        byte[] bytes = null;\n-        try {\n-            bytes = xlfd.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            bytes = xlfd.getBytes();\n-        }\n-        return haveBitmapFonts(bytes);\n+        return haveBitmapFonts(xlfd.getBytes(UTF_8));\n@@ -226,7 +220,1 @@\n-        byte[] bytes = null;\n-        try {\n-            bytes = xlfd.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            bytes = xlfd.getBytes();\n-        }\n-        return fontExists(bytes);\n+        return fontExists(xlfd.getBytes(UTF_8));\n@@ -383,7 +371,1 @@\n-        byte[] bytes = null;\n-        try {\n-            bytes = xlfd.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            bytes = xlfd.getBytes();\n-        }\n-        return bytes;\n+        return xlfd.getBytes(UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/NativeFont.java","additions":6,"deletions":24,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,1 +28,0 @@\n-import java.util.Objects;\n@@ -29,0 +29,3 @@\n+import java.util.Objects;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -190,4 +193,1 @@\n-            try {\n-                strVal = new String(strBytes, \"UTF-8\");\n-            } catch (java.io.UnsupportedEncodingException uee) {\n-            }\n+            strVal = new String(strBytes, UTF_8);\n@@ -222,4 +222,1 @@\n-                try {\n-                    valueArray[i] = new String(bufBytes, \"UTF-8\");\n-                } catch (java.io.UnsupportedEncodingException uee) {\n-                }\n+                valueArray[i] = new String(bufBytes, UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/AttributeClass.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -84,0 +83,5 @@\n+        initStatic();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n@@ -286,0 +290,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -386,0 +391,1 @@\n+                @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/CUPSPrinter.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,21 +30,3 @@\n-import javax.print.attribute.*;\n-import javax.print.attribute.standard.*;\n-import javax.print.DocFlavor;\n-import javax.print.DocPrintJob;\n-import javax.print.PrintService;\n-import javax.print.ServiceUIFactory;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Locale;\n-import java.util.Date;\n-import java.util.Arrays;\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n-import javax.print.event.PrintServiceAttributeListener;\n-\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.URL;\n-import java.net.URLConnection;\n-import java.net.HttpURLConnection;\n+import java.io.BufferedReader;\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataInputStream;\n@@ -53,0 +35,1 @@\n+import java.io.InputStreamReader;\n@@ -55,8 +38,8 @@\n-import java.io.DataInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.ByteArrayInputStream;\n-import java.io.BufferedReader;\n-import java.io.InputStreamReader;\n-import java.nio.charset.Charset;\n-\n-import java.util.Iterator;\n+import java.net.HttpURLConnection;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n@@ -64,0 +47,1 @@\n+import java.util.Locale;\n@@ -66,0 +50,56 @@\n+import javax.print.DocFlavor;\n+import javax.print.DocPrintJob;\n+import javax.print.PrintService;\n+import javax.print.ServiceUIFactory;\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.AttributeSet;\n+import javax.print.attribute.AttributeSetUtilities;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.HashAttributeSet;\n+import javax.print.attribute.HashPrintServiceAttributeSet;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.PrintServiceAttributeSet;\n+import javax.print.attribute.Size2DSyntax;\n+import javax.print.attribute.standard.Chromaticity;\n+import javax.print.attribute.standard.ColorSupported;\n+import javax.print.attribute.standard.Copies;\n+import javax.print.attribute.standard.CopiesSupported;\n+import javax.print.attribute.standard.Destination;\n+import javax.print.attribute.standard.DialogOwner;\n+import javax.print.attribute.standard.DialogTypeSelection;\n+import javax.print.attribute.standard.Fidelity;\n+import javax.print.attribute.standard.Finishings;\n+import javax.print.attribute.standard.JobName;\n+import javax.print.attribute.standard.JobSheets;\n+import javax.print.attribute.standard.Media;\n+import javax.print.attribute.standard.MediaPrintableArea;\n+import javax.print.attribute.standard.MediaSize;\n+import javax.print.attribute.standard.MediaSizeName;\n+import javax.print.attribute.standard.MediaTray;\n+import javax.print.attribute.standard.NumberUp;\n+import javax.print.attribute.standard.OrientationRequested;\n+import javax.print.attribute.standard.PDLOverrideSupported;\n+import javax.print.attribute.standard.PageRanges;\n+import javax.print.attribute.standard.PagesPerMinute;\n+import javax.print.attribute.standard.PagesPerMinuteColor;\n+import javax.print.attribute.standard.PrinterInfo;\n+import javax.print.attribute.standard.PrinterIsAcceptingJobs;\n+import javax.print.attribute.standard.PrinterLocation;\n+import javax.print.attribute.standard.PrinterMakeAndModel;\n+import javax.print.attribute.standard.PrinterMessageFromOperator;\n+import javax.print.attribute.standard.PrinterMoreInfo;\n+import javax.print.attribute.standard.PrinterMoreInfoManufacturer;\n+import javax.print.attribute.standard.PrinterName;\n+import javax.print.attribute.standard.PrinterResolution;\n+import javax.print.attribute.standard.PrinterState;\n+import javax.print.attribute.standard.PrinterStateReasons;\n+import javax.print.attribute.standard.PrinterURI;\n+import javax.print.attribute.standard.QueuedJobCount;\n+import javax.print.attribute.standard.RequestingUserName;\n+import javax.print.attribute.standard.SheetCollate;\n+import javax.print.attribute.standard.Sides;\n+import javax.print.event.PrintServiceAttributeListener;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -328,5 +368,1 @@\n-        try {\n-            printer = java.net.URLDecoder.decode(name, \"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException e) {\n-            printer = name;\n-        }\n+        printer = java.net.URLDecoder.decode(name, UTF_8);\n@@ -362,5 +398,1 @@\n-        try {\n-            printer = java.net.URLDecoder.decode(name, \"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException e) {\n-            printer = name;\n-        }\n+        printer = java.net.URLDecoder.decode(name, UTF_8);\n@@ -1738,3 +1770,2 @@\n-                       BufferedReader d =\n-                           new BufferedReader(new InputStreamReader(is,\n-                                                          Charset.forName(\"ISO-8859-1\")));\n+                       BufferedReader d = new BufferedReader(\n+                               new InputStreamReader(is, ISO_8859_1));\n@@ -1832,7 +1863,1 @@\n-        OutputStreamWriter osw;\n-        try {\n-            osw = new OutputStreamWriter(os, \"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException exc) {\n-            debug_println(debugPrefix+\"writeIPPRequest, UTF-8 not supported? Exception: \"+exc);\n-            return false;\n-        }\n+        OutputStreamWriter osw = new OutputStreamWriter(os, UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/IPPPrintService.java","additions":74,"deletions":49,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -79,2 +78,3 @@\n-\n-    static String osname;\n+    @SuppressWarnings(\"removal\")\n+    static String osname = java.security.AccessController.doPrivileged(\n+            new sun.security.action.GetPropertyAction(\"os.name\"));\n@@ -100,0 +100,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -115,0 +116,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -129,3 +131,0 @@\n-        osname = java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\"os.name\"));\n-\n@@ -138,0 +137,1 @@\n+            @SuppressWarnings(\"removal\")\n@@ -225,0 +225,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -563,0 +564,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -626,0 +628,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -635,0 +638,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -868,0 +872,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/PrintServiceLookupProvider.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -312,1 +312,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -539,1 +538,2 @@\n-        java.security.AccessController.doPrivileged(po);\n+        @SuppressWarnings(\"removal\")\n+        var dummy = java.security.AccessController.doPrivileged(po);\n@@ -612,1 +612,2 @@\n-            java.security.AccessController.doPrivileged(spooler);\n+            @SuppressWarnings(\"removal\")\n+            var dummy2 = java.security.AccessController.doPrivileged(spooler);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintJob.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -84,1 +83,0 @@\n-    private static String encoding = \"ISO8859_1\";\n@@ -150,2 +148,2 @@\n-    static {\n-        encoding = java.security.AccessController.doPrivileged(\n+    @SuppressWarnings(\"removal\")\n+    private static String encoding = java.security.AccessController.doPrivileged(\n@@ -153,1 +151,0 @@\n-    }\n@@ -424,0 +421,1 @@\n+      @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintService.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -51,7 +50,4 @@\n-    private static TrueTypeFont eudcFont;\n-\n-    static {\n-\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-\n-                public Object run() {\n+    @SuppressWarnings(\"removal\")\n+    private static final TrueTypeFont eudcFont =\n+            AccessController.doPrivileged(new PrivilegedAction<TrueTypeFont>() {\n+                public TrueTypeFont run() {\n@@ -64,1 +60,1 @@\n-                            eudcFont = new TrueTypeFont(eudcFile, null, 0,\n+                            return new TrueTypeFont(eudcFile, null, 0,\n@@ -71,1 +67,0 @@\n-\n@@ -73,1 +68,0 @@\n-    }\n@@ -87,0 +81,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -221,0 +216,1 @@\n+            @SuppressWarnings(\"removal\")\n@@ -255,0 +251,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/Win32FontManager.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.awt.Image;\n@@ -30,0 +29,1 @@\n+import java.awt.Image;\n@@ -31,1 +31,0 @@\n-\n@@ -33,1 +32,0 @@\n-\n@@ -38,1 +36,0 @@\n-\n@@ -40,1 +37,0 @@\n-\n@@ -51,1 +47,0 @@\n-\n@@ -54,0 +49,3 @@\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n@@ -56,4 +54,0 @@\n-import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n-import java.io.File;\n-\n@@ -61,1 +55,0 @@\n-\n@@ -63,0 +56,1 @@\n+import java.util.ArrayList;\n@@ -72,1 +66,0 @@\n-\n@@ -76,3 +69,2 @@\n-import java.util.ArrayList;\n-\n-import java.io.ByteArrayOutputStream;\n+import static java.nio.charset.StandardCharsets.UTF_16LE;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -252,1 +244,1 @@\n-            String st = new String(bytes, 0, bytes.length, \"UTF-16LE\");\n+            String st = new String(bytes, 0, bytes.length, UTF_16LE);\n@@ -278,1 +270,1 @@\n-                        getTransferData(javaTextEncodingFlavor), \"UTF-8\");\n+                        getTransferData(javaTextEncodingFlavor), UTF_8);\n@@ -551,2 +543,0 @@\n-    \/\/static section\n-    public static final String ENCODING = \"UTF-8\";\n@@ -674,7 +664,2 @@\n-        byte[] headerBytes = null, trailerBytes = null;\n-\n-        try {\n-            headerBytes = header.toString().getBytes(ENCODING);\n-            trailerBytes = htmlSuffix.getBytes(ENCODING);\n-        } catch (UnsupportedEncodingException cannotHappen) {\n-        }\n+        byte[] headerBytes = header.toString().getBytes(UTF_8);\n+        byte[] trailerBytes = htmlSuffix.getBytes(UTF_8);\n@@ -789,1 +774,1 @@\n-                        ENCODING\n+                        UTF_8\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WDataTransferer.java","additions":12,"deletions":27,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,6 +92,1 @@\n-        Object[]  keys = map.keySet().toArray();\n-        String[]  sortedKeys = new String[keys.length];\n-\n-        for ( int nkey = 0; nkey < keys.length; nkey++ ) {\n-            sortedKeys[nkey] = keys[nkey].toString();\n-        }\n+        String[] sortedKeys = map.keySet().toArray(new String[0]);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WDesktopProperties.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -51,0 +50,5 @@\n+        loadAWTLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadAWTLibrary() {\n@@ -105,0 +109,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -205,0 +210,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -270,0 +276,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -279,0 +286,1 @@\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/windows\/classes\/sun\/print\/PrintServiceLookupProvider.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,16 +106,0 @@\n-\/*\n- * Terminate all utf processing\n- *\/\n-static void\n-utfTerminate(void)\n-{\n-    if ( iconvFromPlatform!=(iconv_t)-1 ) {\n-        (void)iconv_close(iconvFromPlatform);\n-    }\n-    if ( iconvToPlatform!=(iconv_t)-1 ) {\n-        (void)iconv_close(iconvToPlatform);\n-    }\n-    iconvToPlatform   = (iconv_t)-1;\n-    iconvFromPlatform = (iconv_t)-1;\n-}\n-\n@@ -179,10 +163,0 @@\n-\/*\n- * Convert Platform Encoding to UTF-8.\n- *    Returns length or -1 if output overflows.\n- *\/\n-static int\n-platformToUtf8(char *str, int len, char *output, int outputMaxLen)\n-{\n-    return iconvConvert(iconvFromPlatform, str, len, output, outputMaxLen);\n-}\n-\n","filename":"src\/java.instrument\/unix\/native\/libinstrument\/EncodingSupport_md.c","additions":1,"deletions":27,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.nio.charset.Charset;\n-import java.nio.charset.StandardCharsets;\n@@ -44,0 +42,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -142,1 +142,1 @@\n-            byte[] hash = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n+            byte[] hash = digest.digest(password.getBytes(UTF_8));\n@@ -170,1 +170,1 @@\n-            String str = new String(data, StandardCharsets.UTF_8);\n+            String str = new String(data, UTF_8);\n@@ -178,1 +178,1 @@\n-                    OutputStreamWriter out = new OutputStreamWriter(fout, StandardCharsets.UTF_8);\n+                    OutputStreamWriter out = new OutputStreamWriter(fout, UTF_8);\n@@ -202,1 +202,1 @@\n-                ByteBuffer byteBuffer = Charset.forName(\"UTF-8\").encode(CharBuffer.wrap(inputPassword));\n+                ByteBuffer byteBuffer = UTF_8.encode(CharBuffer.wrap(inputPassword));\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/HashedPasswordManager.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -167,1 +168,1 @@\n-                                                             \"UTF-8\"));\n+                                                             UTF_8));\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLetParser.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,2 @@\n-import java.io.UnsupportedEncodingException;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -130,8 +131,1 @@\n-        try {\n-            name = new String(symbolBytes, \"UTF-8\");\n-        }\n-        catch (UnsupportedEncodingException e) {\n-            \/\/ should not reach here\n-            \/\/ \"UTF-8\" is always a known encoding\n-            throw new InternalError(e.getMessage(), e);\n-        }\n+        name = new String(symbolBytes, UTF_8);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/counter\/perf\/PerfDataEntry.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-import java.io.UnsupportedEncodingException;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -91,7 +91,2 @@\n-        try {\n-            byte[] b = c.getBytes(\"UTF-8\");\n-            this.value = b[0];\n-        } catch (UnsupportedEncodingException e) {\n-            \/\/ ignore, \"UTF-8\" is always a known encoding\n-            throw new InternalError(\"Unknown encoding\", e);\n-        }\n+        byte[] b = c.getBytes(UTF_8);\n+        this.value = b[0];\n","filename":"src\/java.management\/share\/classes\/sun\/management\/counter\/perf\/PerfDataType.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -53,1 +55,1 @@\n-            outStream.write(tag.getBytes(\"UTF8\"));\n+            outStream.write(tag.getBytes(UTF_8));\n@@ -63,1 +65,1 @@\n-                    \"Ber.dumpBER(): error encountered\\n\".getBytes(\"UTF8\"));\n+                    \"Ber.dumpBER(): error encountered\\n\".getBytes(UTF_8));\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Ber.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-import java.io.UnsupportedEncodingException;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -269,5 +270,1 @@\n-                try {\n-                    retstr = new String(buf2, \"UTF8\");\n-                } catch (UnsupportedEncodingException e) {\n-                    throw new DecodeException(\"UTF8 not available on platform\");\n-                }\n+                retstr = new String(buf2, UTF_8);\n@@ -275,5 +272,1 @@\n-                try {\n-                    retstr = new String(buf2, \"8859_1\");\n-                } catch (UnsupportedEncodingException e) {\n-                    throw new DecodeException(\"8859_1 not available on platform\");\n-                }\n+                retstr = new String(buf2, ISO_8859_1);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/BerDecoder.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-import java.io.UnsupportedEncodingException;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -319,6 +320,2 @@\n-            try {\n-                bytes = str.getBytes(\"UTF8\");\n-                count = bytes.length;\n-            } catch (UnsupportedEncodingException e) {\n-                throw new EncodeException(\"UTF8 not available on platform\");\n-            }\n+            bytes = str.getBytes(UTF_8);\n+            count = bytes.length;\n@@ -326,6 +323,2 @@\n-            try {\n-                bytes = str.getBytes(\"8859_1\");\n-                count = bytes.length;\n-            } catch (UnsupportedEncodingException e) {\n-                throw new EncodeException(\"8859_1 not available on platform\");\n-            }\n+            bytes = str.getBytes(ISO_8859_1);\n+            count = bytes.length;\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/BerEncoder.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -62,1 +65,1 @@\n-            filter = filterStr.getBytes(\"UTF8\");\n+            filter = filterStr.getBytes(UTF_8);\n@@ -64,1 +67,1 @@\n-            filter = filterStr.getBytes(\"8859_1\");\n+            filter = filterStr.getBytes(ISO_8859_1);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Filter.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -424,1 +427,1 @@\n-                return ((String)pw).getBytes(\"UTF8\");\n+                return ((String)pw).getBytes(UTF_8);\n@@ -426,1 +429,1 @@\n-                return ((String)pw).getBytes(\"8859_1\");\n+                return ((String)pw).getBytes(ISO_8859_1);\n@@ -1156,1 +1159,1 @@\n-                            value.getBytes(\"UTF8\") : value.getBytes(\"8859_1\");\n+                            value.getBytes(UTF_8) : value.getBytes(ISO_8859_1);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -903,5 +904,1 @@\n-                            try {\n-                                buf.append(new String(utf8, \"UTF8\"));\n-                            } catch (java.io.UnsupportedEncodingException e) {\n-                                \/\/ shouldn't happen\n-                            }\n+                            buf.append(new String(utf8, UTF_8));\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapName.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -63,1 +65,1 @@\n-            String orig = new String((byte[])cred, \"UTF8\");\n+            String orig = new String((byte[])cred, UTF_8);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/sasl\/DefaultCallbackHandler.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -646,5 +648,1 @@\n-                            try {\n-                                builder.append(new String(utf8, \"UTF8\"));\n-                            } catch (java.io.UnsupportedEncodingException e) {\n-                                \/\/ shouldn't happen\n-                            }\n+                            builder.append(new String(utf8, UTF_8));\n","filename":"src\/java.naming\/share\/classes\/javax\/naming\/ldap\/Rdn.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -162,1 +163,1 @@\n-                var str = new String(bytes, \"UTF-8\");\n+                var str = new String(bytes, UTF_8);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ResponseContent.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"RMIREGISTRY\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"RMIREGISTRY\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/java.rmi\/share\/man\/rmiregistry.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JRUNSCRIPT\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JRUNSCRIPT\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/java.scripting\/share\/man\/jrunscript.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,2 @@\n-     * client to itself using the S4U2self extension.\n-     * @param client the client to impersonate\n+     * user to itself using the S4U2self extension.\n+     * @param user the user to impersonate\n@@ -59,1 +59,1 @@\n-     * @return the new creds (cname=client, sname=middle)\n+     * @return the new creds (cname=user, sname=middle)\n@@ -61,1 +61,1 @@\n-    public static Credentials acquireS4U2selfCreds(PrincipalName client,\n+    public static Credentials acquireS4U2selfCreds(PrincipalName user,\n@@ -67,1 +67,1 @@\n-        String uRealm = client.getRealmString();\n+        String uRealm = user.getRealmString();\n@@ -71,1 +71,1 @@\n-            \/\/ and the client impersonated are on different realms.\n+            \/\/ and the user impersonated are on different realms.\n@@ -90,2 +90,2 @@\n-                ccreds, ccreds.getClient(), sname, null,\n-                new PAData[] {\n+                ccreds, ccreds.getClient(), sname, user,\n+                null, new PAData[] {\n@@ -93,1 +93,1 @@\n-                                new PAForUserEnc(client,\n+                                new PAForUserEnc(user,\n@@ -101,1 +101,1 @@\n-        if (!creds.getClient().equals(client)) {\n+        if (!creds.getClient().equals(user)) {\n@@ -139,1 +139,1 @@\n-                ccreds, ccreds.getClient(), backendPrincipal,\n+                ccreds, ccreds.getClient(), backendPrincipal, null,\n@@ -316,1 +316,1 @@\n-                S4U2Type.NONE);\n+                null, S4U2Type.NONE);\n@@ -328,2 +328,2 @@\n-            Ticket[] additionalTickets, PAData[] extraPAs,\n-            S4U2Type s4u2Type)\n+            PrincipalName user, Ticket[] additionalTickets,\n+            PAData[] extraPAs, S4U2Type s4u2Type)\n@@ -334,1 +334,1 @@\n-                        s4u2Type, additionalTickets, extraPAs);\n+                        s4u2Type, user, additionalTickets, extraPAs);\n@@ -342,1 +342,1 @@\n-                additionalTickets, extraPAs);\n+                user, additionalTickets, extraPAs);\n@@ -352,2 +352,2 @@\n-            S4U2Type s4u2Type, Ticket[] additionalTickets,\n-            PAData[] extraPAs)\n+            S4U2Type s4u2Type, PrincipalName user,\n+            Ticket[] additionalTickets, PAData[] extraPAs)\n@@ -365,1 +365,2 @@\n-                    ReferralsCache.get(cname, sname, refSname.getRealmString());\n+                    ReferralsCache.get(cname, sname, user,\n+                            additionalTickets, refSname.getRealmString());\n@@ -370,1 +371,1 @@\n-                        additionalTickets, extraPAs);\n+                        user, additionalTickets, extraPAs);\n@@ -381,9 +382,3 @@\n-                        if (s4u2Type == S4U2Type.NONE) {\n-                            \/\/ Do not store S4U2Self or S4U2Proxy referral\n-                            \/\/ TGTs in the cache. Caching such tickets is not\n-                            \/\/ defined in MS-SFU and may cause unexpected\n-                            \/\/ results when using them in a different context.\n-                            ReferralsCache.put(cname, sname,\n-                                    server.getRealmString(),\n-                                    serverNameStrings[1], creds);\n-                        }\n+                        ReferralsCache.put(cname, sname, user,\n+                                additionalTickets, server.getRealmString(),\n+                                serverNameStrings[1], creds);\n@@ -414,1 +409,1 @@\n-                    handleS4U2SelfReferral(extraPAs, asCreds, creds);\n+                    handleS4U2SelfReferral(extraPAs, user, creds);\n@@ -443,2 +438,2 @@\n-            S4U2Type s4u2Type, Ticket[] additionalTickets,\n-            PAData[] extraPAs)\n+            S4U2Type s4u2Type, PrincipalName user,\n+            Ticket[] additionalTickets, PAData[] extraPAs)\n@@ -472,1 +467,1 @@\n-                handleS4U2SelfReferral(extraPAs, asCreds, newTgt);\n+                handleS4U2SelfReferral(extraPAs, user, newTgt);\n@@ -501,1 +496,1 @@\n-            Credentials oldCeds, Credentials newCreds)\n+            PrincipalName user, Credentials newCreds)\n@@ -509,3 +504,0 @@\n-                PAForUserEnc paForUser = new PAForUserEnc(\n-                        new DerValue(pa.getValue()),\n-                        oldCeds.getSessionKey());\n@@ -513,1 +505,1 @@\n-                        new PAForUserEnc(paForUser.getName(),\n+                        new PAForUserEnc(user,\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/CredentialsUtil.java","additions":31,"deletions":39,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Red Hat, Inc.\n+ * Copyright (c) 2019, 2021, Red Hat, Inc.\n@@ -28,0 +28,1 @@\n+import java.util.Arrays;\n@@ -34,0 +35,1 @@\n+import java.util.Objects;\n@@ -54,1 +56,4 @@\n-        ReferralCacheKey (PrincipalName cname, PrincipalName sname) {\n+        private PrincipalName user; \/\/ S4U2Self only\n+        private byte[] userSvcTicketEnc; \/\/ S4U2Proxy only\n+        ReferralCacheKey (PrincipalName cname, PrincipalName sname,\n+                PrincipalName user, Ticket userSvcTicket) {\n@@ -57,0 +62,7 @@\n+            this.user = user;\n+            if (userSvcTicket != null && userSvcTicket.encPart != null) {\n+                byte[] userSvcTicketEnc = userSvcTicket.encPart.getBytes();\n+                if (userSvcTicketEnc.length > 0) {\n+                    this.userSvcTicketEnc = userSvcTicketEnc;\n+                }\n+            }\n@@ -63,1 +75,3 @@\n-                    sname.equals(that.sname);\n+                    sname.equals(that.sname) &&\n+                    Objects.equals(user, that.user) &&\n+                    Arrays.equals(userSvcTicketEnc, that.userSvcTicketEnc);\n@@ -66,1 +80,3 @@\n-            return cname.hashCode() + sname.hashCode();\n+            return cname.hashCode() + sname.hashCode() +\n+                    Objects.hashCode(user) +\n+                    Arrays.hashCode(userSvcTicketEnc);\n@@ -87,1 +103,2 @@\n-     * service principal, source KDC realm, destination KDC realm and\n+     * service principal, user principal (S4U2Self only), client service\n+     * ticket (S4U2Proxy only), source KDC realm, destination KDC realm and\n@@ -97,2 +114,6 @@\n-            String fromRealm, String toRealm, Credentials creds) {\n-        ReferralCacheKey k = new ReferralCacheKey(cname, service);\n+            PrincipalName user, Ticket[] userSvcTickets, String fromRealm,\n+            String toRealm, Credentials creds) {\n+        Ticket userSvcTicket = (userSvcTickets != null ?\n+                userSvcTickets[0] : null);\n+        ReferralCacheKey k = new ReferralCacheKey(cname, service,\n+                user, userSvcTicket);\n@@ -128,1 +149,2 @@\n-     * service principal and a source KDC realm.\n+     * a service principal, a user principal (S4U2Self only), a client\n+     * service ticket (S4U2Proxy only) and a source KDC realm.\n@@ -131,2 +153,6 @@\n-            PrincipalName service, String fromRealm) {\n-        ReferralCacheKey k = new ReferralCacheKey(cname, service);\n+            PrincipalName service, PrincipalName user,\n+            Ticket[] userSvcTickets, String fromRealm) {\n+        Ticket userSvcTicket = (userSvcTickets != null ?\n+                userSvcTickets[0] : null);\n+        ReferralCacheKey k = new ReferralCacheKey(cname, service,\n+                user, userSvcTicket);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/ReferralsCache.java","additions":36,"deletions":10,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -430,7 +430,1 @@\n-        Object [] arr = vecTableNames.toArray();\n-        String []strArr = new String[arr.length];\n-\n-        for( int i = 0;i < arr.length; i++) {\n-           strArr[i] = arr[i].toString();\n-        }\n-\n+        String[] strArr = vecTableNames.toArray(new String[0]);\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/JoinRowSetImpl.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,2 @@\n+ *\n+ * @LastModified: Apr 2021\n@@ -699,1 +701,1 @@\n-                                               null,\n+                                               new Object[]{rawname},\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XML11EntityScanner.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,1 @@\n+ * @LastModified: Apr 2021\n@@ -863,0 +864,8 @@\n+                    int startLocal = index +1;\n+                    if (!XMLChar.isNCNameStart(fCurrentEntity.ch[startLocal])){\n+                        fErrorReporter.reportError(XMLMessageFormatter.XML_DOMAIN,\n+                                                 \"IllegalQName\",\n+                                                  new Object[]{rawname},\n+                                                  XMLErrorReporter.SEVERITY_FATAL_ERROR);\n+                    }\n+\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLEntityScanner.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -126,2 +126,1 @@\n-            long v = Double.doubleToLongBits(value);\n-            return (int) (v ^ (v >>> 32));\n+            return Double.hashCode(value);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/dv\/xs\/DoubleDV.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-        IllegalQName = Element or attribute do not match QName production: QName::=(NCName':')?NCName. \n+        IllegalQName = Element or attribute \\\"{0}\\\" do not match QName production: QName::=(NCName':')?NCName.\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/msg\/XMLMessages.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import jdk.xml.internal.JdkXmlUtils;\n@@ -1981,4 +1982,6 @@\n-                if (null == doctypePublic)\n-                    writer.write(\" SYSTEM \\\"\");\n-                else\n-                    writer.write(\" \\\"\");\n+                char quote = JdkXmlUtils.getQuoteChar(doctypeSystem);\n+                if (null == doctypePublic) {\n+                    writer.write(\" SYSTEM\");\n+                }\n+                writer.write(\" \");\n+                writer.write(quote);\n@@ -1987,1 +1990,1 @@\n-\n+                writer.write(quote);\n@@ -1990,1 +1993,1 @@\n-                    writer.write(\"\\\">\");\n+                    writer.write(\">\");\n@@ -1994,2 +1997,0 @@\n-                else\n-                    writer.write('\\\"');\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/ToStream.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import jdk.xml.internal.JdkXmlUtils;\n@@ -65,1 +66,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Apr 2021\n@@ -504,1 +505,1 @@\n-                    StringBuffer dtd = new StringBuffer();\n+                    StringBuilder dtd = new StringBuilder();\n@@ -515,0 +516,1 @@\n+                        char quote = JdkXmlUtils.getQuoteChar(systemId);\n@@ -516,1 +518,1 @@\n-                            dtd.append(\" SYSTEM \\\"\");\n+                            dtd.append(\" SYSTEM \").append(quote);\n@@ -518,1 +520,1 @@\n-                            dtd.append(\" \\\"\");\n+                            dtd.append(\" \").append(quote);\n@@ -521,1 +523,1 @@\n-                        dtd.append('\\\"');\n+                        dtd.append(quote);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/DOM3TreeWalker.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -31,0 +30,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -96,7 +97,3 @@\n-        try {\n-            urn = URLEncoder.encode(urn, \"UTF-8\");\n-            urn = urn.replace(\"::\", \";\");\n-            urn = urn.replace(\"\/\/\", \":\");\n-        } catch (UnsupportedEncodingException ex) {\n-            CatalogMessages.reportRunTimeError(CatalogMessages.ERR_OTHER, ex);\n-        }\n+        urn = URLEncoder.encode(urn, UTF_8);\n+        urn = urn.replace(\"::\", \";\");\n+        urn = urn.replace(\"\/\/\", \":\");\n@@ -122,7 +119,3 @@\n-        try {\n-            publicId = publicId.replace(\":\", \"\/\/\");\n-            publicId = publicId.replace(\";\", \"::\");\n-            publicId = URLDecoder.decode(publicId, \"UTF-8\");\n-        } catch (UnsupportedEncodingException ex) {\n-            CatalogMessages.reportRunTimeError(CatalogMessages.ERR_OTHER, ex);\n-        }\n+        publicId = publicId.replace(\":\", \"\/\/\");\n+        publicId = publicId.replace(\";\", \"::\");\n+        publicId = URLDecoder.decode(publicId, UTF_8);\n@@ -144,1 +137,0 @@\n-        byte[] bytes;\n@@ -146,6 +138,1 @@\n-        try {\n-            bytes = uriref.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException uee) {\n-            \/\/ this can't happen\n-            return uriref;\n-        }\n+        byte[] bytes = uriref.getBytes(UTF_8);\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/Normalizer.java","additions":10,"deletions":23,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -369,0 +369,16 @@\n+    \/**\n+     * Returns the character to be used to quote the input content. Between\n+     * single and double quotes, this method returns the one that is not found\n+     * in the input. Returns double quote by default.\n+     *\n+     * @param s the input string\n+     * @return returns the quote not found in the input\n+     *\/\n+    public static char getQuoteChar(String s) {\n+        if (s != null && s.indexOf('\"') > -1) {\n+            return '\\'';\n+        } else {\n+            return '\"';\n+        }\n+    }\n+\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/JdkXmlUtils.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -53,12 +53,1 @@\n-    \/**\n-     * The current component with keyboard focus.\n-     *\n-     * @see #getComponentWithFocus\n-     *\n-     * @deprecated This field is unused; to get the component with focus use the\n-     * getComponentWithFocus method.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected Component componentWithFocus = null;\n-\n-    static private Component componentWithFocus_private = null;\n+    static private Component componentWithFocus = null;\n@@ -67,91 +56,7 @@\n-    \/**\n-     * The current list of registered ComponentListener classes.\n-     *\n-     * @see #addComponentListener\n-     * @see #removeComponentListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected ComponentListener     componentListener     = null;\n-\n-    static private ComponentListener componentListener_private = null;\n-\n-    \/**\n-     * The current list of registered ContainerListener classes.\n-     *\n-     * @see #addContainerListener\n-     * @see #removeContainerListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected ContainerListener     containerListener     = null;\n-\n-    static private ContainerListener containerListener_private = null;\n-\n-    \/**\n-     * The current list of registered FocusListener classes.\n-     *\n-     * @see #addFocusListener\n-     * @see #removeFocusListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected FocusListener         focusListener         = null;\n-\n-    static private FocusListener focusListener_private = null;\n-\n-    \/**\n-     * The current list of registered KeyListener classes.\n-     *\n-     * @see #addKeyListener\n-     * @see #removeKeyListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected KeyListener           keyListener           = null;\n-\n-    static private KeyListener keyListener_private = null;\n-\n-    \/**\n-     * The current list of registered MouseListener classes.\n-     *\n-     * @see #addMouseListener\n-     * @see #removeMouseListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected MouseListener         mouseListener         = null;\n-\n-    static private MouseListener mouseListener_private = null;\n-\n-    \/**\n-     * The current list of registered MouseMotionListener classes.\n-     *\n-     * @see #addMouseMotionListener\n-     * @see #removeMouseMotionListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected MouseMotionListener   mouseMotionListener   = null;\n-\n-    static private MouseMotionListener mouseMotionListener_private = null;\n-\n-    \/**\n-     * The current list of registered WindowListener classes.\n-     *\n-     * @see #addWindowListener\n-     * @see #removeWindowListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected WindowListener        windowListener        = null;\n-\n-    static private WindowListener windowListener_private = null;\n-\n+    static private ComponentListener componentListener = null;\n+    static private ContainerListener containerListener = null;\n+    static private FocusListener focusListener = null;\n+    static private KeyListener keyListener = null;\n+    static private MouseListener mouseListener = null;\n+    static private MouseMotionListener mouseMotionListener = null;\n+    static private WindowListener windowListener = null;\n@@ -160,52 +65,4 @@\n-    \/**\n-     * The current list of registered ActionListener classes.\n-     *\n-     * @see #addActionListener\n-     * @see #removeActionListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected ActionListener        actionListener        = null;\n-\n-    static private ActionListener actionListener_private = null;\n-\n-    \/**\n-     * The current list of registered AdjustmentListener classes.\n-     *\n-     * @see #addAdjustmentListener\n-     * @see #removeAdjustmentListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected AdjustmentListener    adjustmentListener    = null;\n-\n-    static private AdjustmentListener adjustmentListener_private = null;\n-\n-    \/**\n-     * The current list of registered ItemListener classes.\n-     *\n-     * @see #addItemListener\n-     * @see #removeItemListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected ItemListener          itemListener          = null;\n-\n-    static private ItemListener itemListener_private = null;\n-\n-    \/**\n-     * The current list of registered TextListener classes.\n-     *\n-     * @see #addTextListener\n-     * @see #removeTextListener\n-     *\n-     * @deprecated This field is unused.\n-     *\/\n-    @Deprecated(since=\"8\", forRemoval=true)\n-    static protected TextListener          textListener          = null;\n-\n-    static private TextListener textListener_private = null;\n-\n+    static private ActionListener actionListener = null;\n+    static private AdjustmentListener adjustmentListener = null;\n+    static private ItemListener itemListener = null;\n+    static private TextListener textListener = null;\n@@ -228,1 +85,1 @@\n-        return componentWithFocus_private;\n+        return componentWithFocus;\n@@ -253,1 +110,1 @@\n-        if (componentListener_private == null) {\n+        if (componentListener == null) {\n@@ -257,1 +114,1 @@\n-        componentListener_private = AWTEventMulticaster.add(componentListener_private, l);\n+        componentListener = AWTEventMulticaster.add(componentListener, l);\n@@ -268,2 +125,2 @@\n-        componentListener_private = AWTEventMulticaster.remove(componentListener_private, l);\n-        if (componentListener_private == null) {\n+        componentListener = AWTEventMulticaster.remove(componentListener, l);\n+        if (componentListener == null) {\n@@ -285,1 +142,1 @@\n-        containerListener_private = AWTEventMulticaster.add(containerListener_private, l);\n+        containerListener = AWTEventMulticaster.add(containerListener, l);\n@@ -296,1 +153,1 @@\n-        containerListener_private = AWTEventMulticaster.remove(containerListener_private, l);\n+        containerListener = AWTEventMulticaster.remove(containerListener, l);\n@@ -310,1 +167,1 @@\n-        focusListener_private = AWTEventMulticaster.add(focusListener_private, l);\n+        focusListener = AWTEventMulticaster.add(focusListener, l);\n@@ -321,1 +178,1 @@\n-        focusListener_private = AWTEventMulticaster.remove(focusListener_private, l);\n+        focusListener = AWTEventMulticaster.remove(focusListener, l);\n@@ -335,1 +192,1 @@\n-        if (keyListener_private == null) {\n+        if (keyListener == null) {\n@@ -339,1 +196,1 @@\n-        keyListener_private = AWTEventMulticaster.add(keyListener_private, l);\n+        keyListener = AWTEventMulticaster.add(keyListener, l);\n@@ -350,2 +207,2 @@\n-        keyListener_private = AWTEventMulticaster.remove(keyListener_private, l);\n-        if (keyListener_private == null)  {\n+        keyListener = AWTEventMulticaster.remove(keyListener, l);\n+        if (keyListener == null)  {\n@@ -367,1 +224,1 @@\n-        if (mouseListener_private == null) {\n+        if (mouseListener == null) {\n@@ -371,1 +228,1 @@\n-        mouseListener_private = AWTEventMulticaster.add(mouseListener_private, l);\n+        mouseListener = AWTEventMulticaster.add(mouseListener, l);\n@@ -382,2 +239,2 @@\n-        mouseListener_private = AWTEventMulticaster.remove(mouseListener_private, l);\n-        if (mouseListener_private == null) {\n+        mouseListener = AWTEventMulticaster.remove(mouseListener, l);\n+        if (mouseListener == null) {\n@@ -399,1 +256,1 @@\n-        if (mouseMotionListener_private == null) {\n+        if (mouseMotionListener == null) {\n@@ -403,1 +260,1 @@\n-        mouseMotionListener_private = AWTEventMulticaster.add(mouseMotionListener_private, l);\n+        mouseMotionListener = AWTEventMulticaster.add(mouseMotionListener, l);\n@@ -414,2 +271,2 @@\n-        mouseMotionListener_private = AWTEventMulticaster.remove(mouseMotionListener_private, l);\n-        if (mouseMotionListener_private == null) {\n+        mouseMotionListener = AWTEventMulticaster.remove(mouseMotionListener, l);\n+        if (mouseMotionListener == null) {\n@@ -431,1 +288,1 @@\n-        if (windowListener_private == null) {\n+        if (windowListener == null) {\n@@ -435,1 +292,1 @@\n-        windowListener_private = AWTEventMulticaster.add(windowListener_private, l);\n+        windowListener = AWTEventMulticaster.add(windowListener, l);\n@@ -446,2 +303,2 @@\n-        windowListener_private = AWTEventMulticaster.remove(windowListener_private, l);\n-        if (windowListener_private == null) {\n+        windowListener = AWTEventMulticaster.remove(windowListener, l);\n+        if (windowListener == null) {\n@@ -463,1 +320,1 @@\n-        if (actionListener_private == null) {\n+        if (actionListener == null) {\n@@ -467,1 +324,1 @@\n-        actionListener_private = AWTEventMulticaster.add(actionListener_private, l);\n+        actionListener = AWTEventMulticaster.add(actionListener, l);\n@@ -478,2 +335,2 @@\n-        actionListener_private = AWTEventMulticaster.remove(actionListener_private, l);\n-        if (actionListener_private == null) {\n+        actionListener = AWTEventMulticaster.remove(actionListener, l);\n+        if (actionListener == null) {\n@@ -496,1 +353,1 @@\n-        if (adjustmentListener_private == null) {\n+        if (adjustmentListener == null) {\n@@ -500,1 +357,1 @@\n-        adjustmentListener_private = AWTEventMulticaster.add(adjustmentListener_private, l);\n+        adjustmentListener = AWTEventMulticaster.add(adjustmentListener, l);\n@@ -511,2 +368,2 @@\n-        adjustmentListener_private = AWTEventMulticaster.remove(adjustmentListener_private, l);\n-        if (adjustmentListener_private == null) {\n+        adjustmentListener = AWTEventMulticaster.remove(adjustmentListener, l);\n+        if (adjustmentListener == null) {\n@@ -528,1 +385,1 @@\n-        if (itemListener_private == null) {\n+        if (itemListener == null) {\n@@ -532,1 +389,1 @@\n-        itemListener_private = AWTEventMulticaster.add(itemListener_private, l);\n+        itemListener = AWTEventMulticaster.add(itemListener, l);\n@@ -543,2 +400,2 @@\n-        itemListener_private = AWTEventMulticaster.remove(itemListener_private, l);\n-        if (itemListener_private == null) {\n+        itemListener = AWTEventMulticaster.remove(itemListener, l);\n+        if (itemListener == null) {\n@@ -560,1 +417,1 @@\n-        if (textListener_private == null) {\n+        if (textListener == null) {\n@@ -564,1 +421,1 @@\n-        textListener_private = AWTEventMulticaster.add(textListener_private, l);\n+        textListener = AWTEventMulticaster.add(textListener, l);\n@@ -575,2 +432,2 @@\n-        textListener_private = AWTEventMulticaster.remove(textListener_private, l);\n-        if (textListener_private == null) {\n+        textListener = AWTEventMulticaster.remove(textListener, l);\n+        if (textListener == null) {\n@@ -715,1 +572,1 @@\n-            if (AWTEventMonitor.componentListener_private != null) {\n+            if (AWTEventMonitor.componentListener != null) {\n@@ -718,1 +575,1 @@\n-            if (AWTEventMonitor.keyListener_private != null) {\n+            if (AWTEventMonitor.keyListener != null) {\n@@ -721,1 +578,1 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n+            if (AWTEventMonitor.mouseListener != null) {\n@@ -724,1 +581,1 @@\n-            if (AWTEventMonitor.mouseMotionListener_private != null) {\n+            if (AWTEventMonitor.mouseMotionListener != null) {\n@@ -727,1 +584,1 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n+            if (AWTEventMonitor.windowListener != null) {\n@@ -733,1 +590,1 @@\n-            if (AWTEventMonitor.actionListener_private != null) {\n+            if (AWTEventMonitor.actionListener != null) {\n@@ -736,1 +593,1 @@\n-            if (AWTEventMonitor.adjustmentListener_private != null) {\n+            if (AWTEventMonitor.adjustmentListener != null) {\n@@ -739,1 +596,1 @@\n-            if (AWTEventMonitor.itemListener_private != null) {\n+            if (AWTEventMonitor.itemListener != null) {\n@@ -742,1 +599,1 @@\n-            if (AWTEventMonitor.textListener_private != null) {\n+            if (AWTEventMonitor.textListener != null) {\n@@ -771,1 +628,1 @@\n-                        componentWithFocus_private = last;\n+                        componentWithFocus = last;\n@@ -774,1 +631,1 @@\n-                        componentWithFocus_private = penult;\n+                        componentWithFocus = penult;\n@@ -779,1 +636,1 @@\n-                componentWithFocus_private = focusOwner;\n+                componentWithFocus = focusOwner;\n@@ -968,1 +825,1 @@\n-            if (AWTEventMonitor.componentListener_private != null) {\n+            if (AWTEventMonitor.componentListener != null) {\n@@ -971,1 +828,1 @@\n-            if (AWTEventMonitor.keyListener_private != null) {\n+            if (AWTEventMonitor.keyListener != null) {\n@@ -974,1 +831,1 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n+            if (AWTEventMonitor.mouseListener != null) {\n@@ -977,1 +834,1 @@\n-            if (AWTEventMonitor.mouseMotionListener_private != null) {\n+            if (AWTEventMonitor.mouseMotionListener != null) {\n@@ -980,1 +837,1 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n+            if (AWTEventMonitor.windowListener != null) {\n@@ -986,1 +843,1 @@\n-            if (AWTEventMonitor.actionListener_private != null) {\n+            if (AWTEventMonitor.actionListener != null) {\n@@ -989,1 +846,1 @@\n-            if (AWTEventMonitor.adjustmentListener_private != null) {\n+            if (AWTEventMonitor.adjustmentListener != null) {\n@@ -992,1 +849,1 @@\n-            if (AWTEventMonitor.itemListener_private != null) {\n+            if (AWTEventMonitor.itemListener != null) {\n@@ -995,1 +852,1 @@\n-            if (AWTEventMonitor.textListener_private != null) {\n+            if (AWTEventMonitor.textListener != null) {\n@@ -1171,2 +1028,2 @@\n-            if (AWTEventMonitor.actionListener_private != null) {\n-                AWTEventMonitor.actionListener_private.actionPerformed(e);\n+            if (AWTEventMonitor.actionListener != null) {\n+                AWTEventMonitor.actionListener.actionPerformed(e);\n@@ -1184,2 +1041,2 @@\n-            if (AWTEventMonitor.adjustmentListener_private != null) {\n-                AWTEventMonitor.adjustmentListener_private.adjustmentValueChanged(e);\n+            if (AWTEventMonitor.adjustmentListener != null) {\n+                AWTEventMonitor.adjustmentListener.adjustmentValueChanged(e);\n@@ -1197,2 +1054,2 @@\n-            if (AWTEventMonitor.componentListener_private != null) {\n-                AWTEventMonitor.componentListener_private.componentHidden(e);\n+            if (AWTEventMonitor.componentListener != null) {\n+                AWTEventMonitor.componentListener.componentHidden(e);\n@@ -1208,2 +1065,2 @@\n-            if (AWTEventMonitor.componentListener_private != null) {\n-                AWTEventMonitor.componentListener_private.componentMoved(e);\n+            if (AWTEventMonitor.componentListener != null) {\n+                AWTEventMonitor.componentListener.componentMoved(e);\n@@ -1219,2 +1076,2 @@\n-            if (AWTEventMonitor.componentListener_private != null) {\n-                AWTEventMonitor.componentListener_private.componentResized(e);\n+            if (AWTEventMonitor.componentListener != null) {\n+                AWTEventMonitor.componentListener.componentResized(e);\n@@ -1230,2 +1087,2 @@\n-            if (AWTEventMonitor.componentListener_private != null) {\n-                AWTEventMonitor.componentListener_private.componentShown(e);\n+            if (AWTEventMonitor.componentListener != null) {\n+                AWTEventMonitor.componentListener.componentShown(e);\n@@ -1244,2 +1101,2 @@\n-            if (AWTEventMonitor.containerListener_private != null) {\n-                AWTEventMonitor.containerListener_private.componentAdded(e);\n+            if (AWTEventMonitor.containerListener != null) {\n+                AWTEventMonitor.containerListener.componentAdded(e);\n@@ -1256,2 +1113,2 @@\n-            if (AWTEventMonitor.containerListener_private != null) {\n-                AWTEventMonitor.containerListener_private.componentRemoved(e);\n+            if (AWTEventMonitor.containerListener != null) {\n+                AWTEventMonitor.containerListener.componentRemoved(e);\n@@ -1269,3 +1126,3 @@\n-            AWTEventMonitor.componentWithFocus_private = (Component) e.getSource();\n-            if (AWTEventMonitor.focusListener_private != null) {\n-                AWTEventMonitor.focusListener_private.focusGained(e);\n+            AWTEventMonitor.componentWithFocus = (Component) e.getSource();\n+            if (AWTEventMonitor.focusListener != null) {\n+                AWTEventMonitor.focusListener.focusGained(e);\n@@ -1281,3 +1138,3 @@\n-            AWTEventMonitor.componentWithFocus_private = null;\n-            if (AWTEventMonitor.focusListener_private != null) {\n-                AWTEventMonitor.focusListener_private.focusLost(e);\n+            AWTEventMonitor.componentWithFocus = null;\n+            if (AWTEventMonitor.focusListener != null) {\n+                AWTEventMonitor.focusListener.focusLost(e);\n@@ -1295,2 +1152,2 @@\n-            if (AWTEventMonitor.itemListener_private != null) {\n-                AWTEventMonitor.itemListener_private.itemStateChanged(e);\n+            if (AWTEventMonitor.itemListener != null) {\n+                AWTEventMonitor.itemListener.itemStateChanged(e);\n@@ -1308,2 +1165,2 @@\n-            if (AWTEventMonitor.keyListener_private != null) {\n-                AWTEventMonitor.keyListener_private.keyPressed(e);\n+            if (AWTEventMonitor.keyListener != null) {\n+                AWTEventMonitor.keyListener.keyPressed(e);\n@@ -1319,2 +1176,2 @@\n-            if (AWTEventMonitor.keyListener_private != null) {\n-                AWTEventMonitor.keyListener_private.keyReleased(e);\n+            if (AWTEventMonitor.keyListener != null) {\n+                AWTEventMonitor.keyListener.keyReleased(e);\n@@ -1330,2 +1187,2 @@\n-            if (AWTEventMonitor.keyListener_private != null) {\n-                AWTEventMonitor.keyListener_private.keyTyped(e);\n+            if (AWTEventMonitor.keyListener != null) {\n+                AWTEventMonitor.keyListener.keyTyped(e);\n@@ -1343,2 +1200,2 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n-                AWTEventMonitor.mouseListener_private.mouseClicked(e);\n+            if (AWTEventMonitor.mouseListener != null) {\n+                AWTEventMonitor.mouseListener.mouseClicked(e);\n@@ -1354,2 +1211,2 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n-                AWTEventMonitor.mouseListener_private.mouseEntered(e);\n+            if (AWTEventMonitor.mouseListener != null) {\n+                AWTEventMonitor.mouseListener.mouseEntered(e);\n@@ -1365,2 +1222,2 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n-                AWTEventMonitor.mouseListener_private.mouseExited(e);\n+            if (AWTEventMonitor.mouseListener != null) {\n+                AWTEventMonitor.mouseListener.mouseExited(e);\n@@ -1376,2 +1233,2 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n-                AWTEventMonitor.mouseListener_private.mousePressed(e);\n+            if (AWTEventMonitor.mouseListener != null) {\n+                AWTEventMonitor.mouseListener.mousePressed(e);\n@@ -1387,2 +1244,2 @@\n-            if (AWTEventMonitor.mouseListener_private != null) {\n-                AWTEventMonitor.mouseListener_private.mouseReleased(e);\n+            if (AWTEventMonitor.mouseListener != null) {\n+                AWTEventMonitor.mouseListener.mouseReleased(e);\n@@ -1400,2 +1257,2 @@\n-            if (AWTEventMonitor.mouseMotionListener_private != null) {\n-                AWTEventMonitor.mouseMotionListener_private.mouseDragged(e);\n+            if (AWTEventMonitor.mouseMotionListener != null) {\n+                AWTEventMonitor.mouseMotionListener.mouseDragged(e);\n@@ -1411,2 +1268,2 @@\n-            if (AWTEventMonitor.mouseMotionListener_private != null) {\n-                AWTEventMonitor.mouseMotionListener_private.mouseMoved(e);\n+            if (AWTEventMonitor.mouseMotionListener != null) {\n+                AWTEventMonitor.mouseMotionListener.mouseMoved(e);\n@@ -1424,2 +1281,2 @@\n-            if (AWTEventMonitor.textListener_private != null) {\n-                AWTEventMonitor.textListener_private.textValueChanged(e);\n+            if (AWTEventMonitor.textListener != null) {\n+                AWTEventMonitor.textListener.textValueChanged(e);\n@@ -1437,2 +1294,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowOpened(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowOpened(e);\n@@ -1448,2 +1305,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowClosing(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowClosing(e);\n@@ -1459,2 +1316,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowClosed(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowClosed(e);\n@@ -1470,2 +1327,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowIconified(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowIconified(e);\n@@ -1481,2 +1338,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowDeiconified(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowDeiconified(e);\n@@ -1492,2 +1349,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowActivated(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowActivated(e);\n@@ -1503,2 +1360,2 @@\n-            if (AWTEventMonitor.windowListener_private != null) {\n-                AWTEventMonitor.windowListener_private.windowDeactivated(e);\n+            if (AWTEventMonitor.windowListener != null) {\n+                AWTEventMonitor.windowListener.windowDeactivated(e);\n","filename":"src\/jdk.accessibility\/share\/classes\/com\/sun\/java\/accessibility\/util\/AWTEventMonitor.java","additions":134,"deletions":277,"binary":false,"changes":411,"status":"modified"},{"patch":"@@ -2240,2 +2240,1 @@\n-            Type result = asType().getReceiverType();\n-            return (result == null) ? Type.noType : result;\n+            return asType().getReceiverType();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1489,1 +1489,3 @@\n-        public Type              getReceiverType()   { return recvtype; }\n+        public Type              getReceiverType()   {\n+            return (recvtype == null) ? Type.noType : recvtype;\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,3 +122,0 @@\n-        dfltTargetMeta = new Name[] { names.PACKAGE, names.TYPE,\n-            names.FIELD, names.RECORD_COMPONENT, names.METHOD, names.CONSTRUCTOR,\n-            names.ANNOTATION_TYPE, names.LOCAL_VARIABLE, names.PARAMETER, names.MODULE };\n@@ -164,0 +161,1 @@\n+        allowModules = Feature.MODULES.allowedInSource(source);\n@@ -197,0 +195,4 @@\n+    \/** Are modules allowed\n+     *\/\n+    private final boolean allowModules;\n+\n@@ -3218,14 +3220,1 @@\n-            Set<Name> targets = new HashSet<>();\n-            targets.add(names.ANNOTATION_TYPE);\n-            targets.add(names.CONSTRUCTOR);\n-            targets.add(names.FIELD);\n-            if (allowRecords) {\n-                targets.add(names.RECORD_COMPONENT);\n-            }\n-            targets.add(names.LOCAL_VARIABLE);\n-            targets.add(names.METHOD);\n-            targets.add(names.PACKAGE);\n-            targets.add(names.PARAMETER);\n-            targets.add(names.TYPE);\n-\n-            defaultTargets = java.util.Collections.unmodifiableSet(targets);\n+            defaultTargets = Set.of(defaultTargetMetaInfo());\n@@ -3431,1 +3420,1 @@\n-    public final Name[] dfltTargetMeta;\n+    private Name[] dfltTargetMeta;\n@@ -3433,0 +3422,18 @@\n+        if (dfltTargetMeta == null) {\n+            ArrayList<Name> defaultTargets = new ArrayList<>();\n+            defaultTargets.add(names.PACKAGE);\n+            defaultTargets.add(names.TYPE);\n+            defaultTargets.add(names.FIELD);\n+            defaultTargets.add(names.METHOD);\n+            defaultTargets.add(names.CONSTRUCTOR);\n+            defaultTargets.add(names.ANNOTATION_TYPE);\n+            defaultTargets.add(names.LOCAL_VARIABLE);\n+            defaultTargets.add(names.PARAMETER);\n+            if (allowRecords) {\n+              defaultTargets.add(names.RECORD_COMPONENT);\n+            }\n+            if (allowModules) {\n+              defaultTargets.add(names.MODULE);\n+            }\n+            dfltTargetMeta = defaultTargets.toArray(new Name[0]);\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":25,"deletions":18,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -574,0 +574,6 @@\n+    @DefinedBy(Api.LANGUAGE_MODEL)\n+    public TypeElement getOutermostTypeElement(Element e) {\n+        Symbol sym = cast(Symbol.class, e);\n+        return sym.outermostClass();\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * so by stripping the leading whitespace and comment starts from\n+ * so by stripping the leading whitespace and comment stars from\n@@ -92,1 +92,1 @@\n-         * Pattern used to detect a well formed @deprecated tag in a JaavDoc\n+         * Pattern used to detect a well formed @deprecated tag in a Javadoc\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavadocTokenizer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,0 +88,5 @@\n+    \/**\n+     * true if the last character was derived from an unicode escape sequence.\n+     *\/\n+    private boolean wasUnicodeEscape;\n+\n@@ -108,0 +113,1 @@\n+        this.wasUnicodeEscape = false;\n@@ -164,6 +170,2 @@\n-        \/\/ If second backslash is detected.\n-        if (wasBackslash) {\n-            \/\/ Treat like a normal character (not part of unicode escape.)\n-            wasBackslash = false;\n-        } else if (character == '\\\\') {\n-            \/\/ May be an unicode escape.\n+        if (character == '\\\\' && (!wasBackslash || wasUnicodeEscape)) {\n+            \/\/ Is a backslash and may be an unicode escape.\n@@ -171,2 +173,8 @@\n-                case BACKSLASH -> wasBackslash = true;\n-                case VALID_ESCAPE -> wasBackslash = false;\n+                case BACKSLASH -> {\n+                    wasUnicodeEscape = false;\n+                    wasBackslash = !wasBackslash;\n+                }\n+                case VALID_ESCAPE -> {\n+                    wasUnicodeEscape = true;\n+                    wasBackslash = character == '\\\\' && !wasBackslash;\n+                }\n@@ -175,0 +183,3 @@\n+        } else {\n+            wasBackslash = false;\n+            wasUnicodeEscape = false;\n@@ -300,0 +311,1 @@\n+        wasUnicodeEscape = false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/UnicodeReader.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -551,2 +551,7 @@\n-                if (node.errs != null && node.errs.nonEmpty())\n-                    return getStartPos(node.errs.head);\n+                if (node.errs != null && node.errs.nonEmpty()) {\n+                    int pos = getStartPos(node.errs.head);\n+                    if (pos != Position.NOPOS) {\n+                        return pos;\n+                    }\n+                }\n+                break;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAVAC\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JAVAC\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -363,0 +363,5 @@\n+.B \\f[CB]\\-\\-help\\-lint\\f[R]\n+Prints the supported keys for the \\f[CB]\\-Xlint\\f[R] option.\n+.RS\n+.RE\n+.TP\n@@ -2114,1 +2119,1 @@\n-type of exception.\n+type of annotation.\n@@ -2118,1 +2123,1 @@\n-\\f[B]Source file AnnocProc.java\\f[R]:\n+\\f[B]Source file AnnoProc.java\\f[R]:\n@@ -2125,1 +2130,1 @@\n-import\\ javaz.lang.model.element.*;\n+import\\ javax.lang.model.element.*;\n","filename":"src\/jdk.compiler\/share\/man\/javac.1","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"SERIALVER\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"SERIALVER\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.compiler\/share\/man\/serialver.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,5 @@\n-      for (OopMapStream oms = new OopMapStream(map, OopMapValue.OopTypes.DERIVED_OOP_VALUE); !oms.isDone(); oms.next()) {\n+      for (OopMapStream oms = new OopMapStream(map); !oms.isDone(); oms.next()) {\n+        omv = oms.getCurrent();\n+        if (omv.getType() != OopMapValue.OopTypes.DERIVED_OOP_VALUE) {\n+          continue;\n+        }\n@@ -208,1 +212,0 @@\n-        omv = oms.getCurrent();\n@@ -219,4 +222,0 @@\n-    OopMapValue.OopTypes[] values = new OopMapValue.OopTypes[] {\n-        OopMapValue.OopTypes.OOP_VALUE, OopMapValue.OopTypes.NARROWOOP_VALUE\n-    };\n-\n@@ -224,1 +223,1 @@\n-      for (OopMapStream oms = new OopMapStream(map, values); !oms.isDone(); oms.next()) {\n+      for (OopMapStream oms = new OopMapStream(map); !oms.isDone(); oms.next()) {\n@@ -281,1 +280,1 @@\n-    for (OopMapStream oms = new OopMapStream(map, OopMapValue.OopTypes.CALLEE_SAVED_VALUE); !oms.isDone(); oms.next()) {\n+    for (OopMapStream oms = new OopMapStream(map); !oms.isDone(); oms.next()) {\n@@ -283,0 +282,3 @@\n+      if (omv.getType() != OopMapValue.OopTypes.CALLEE_SAVED_VALUE) {\n+        continue;\n+      }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/compiler\/ImmutableOopMapSet.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-  private int mask;\n@@ -39,9 +38,0 @@\n-    this(oopMap, (OopMapValue.OopTypes[]) null);\n-  }\n-\n-  public OopMapStream(ImmutableOopMap oopMap, OopMapValue.OopTypes type) {\n-    this(oopMap, (OopMapValue.OopTypes[]) null);\n-    mask = type.getValue();\n-  }\n-\n-  public OopMapStream(ImmutableOopMap oopMap, OopMapValue.OopTypes[] types) {\n@@ -49,1 +39,0 @@\n-    mask = computeMask(types);\n@@ -75,10 +64,0 @@\n-  private int computeMask(OopMapValue.OopTypes[] types) {\n-    mask = 0;\n-    if (types != null) {\n-      for (int i = 0; i < types.length; i++) {\n-        mask |= types[i].getValue();\n-      }\n-    }\n-    return mask;\n-  }\n-\n@@ -86,1 +65,1 @@\n-    while (position++ < size) {\n+    if (position++ < size) {\n@@ -88,4 +67,2 @@\n-      if ((omv.getType().getValue() & mask) > 0) {\n-        omvValid = true;\n-        return;\n-      }\n+      omvValid = true;\n+      return;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/compiler\/OopMapStream.java","additions":4,"deletions":27,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-    \/\/ G1MonitoringSupport* _g1mm;\n-    static private AddressField g1mmField;\n+    \/\/ G1MonitoringSupport* _monitoring_support;\n+    static private AddressField monitoringSupportField;\n@@ -78,1 +78,1 @@\n-        g1mmField = type.getAddressField(\"_g1mm\");\n+        monitoringSupportField = type.getAddressField(\"_monitoring_support\");\n@@ -102,3 +102,3 @@\n-    public G1MonitoringSupport g1mm() {\n-        Address g1mmAddr = g1mmField.getValue(addr);\n-        return (G1MonitoringSupport) VMObjectFactory.newObject(G1MonitoringSupport.class, g1mmAddr);\n+    public G1MonitoringSupport monitoringSupport() {\n+        Address monitoringSupportAddr = monitoringSupportField.getValue(addr);\n+        return (G1MonitoringSupport) VMObjectFactory.newObject(G1MonitoringSupport.class, monitoringSupportAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/G1CollectedHeap.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-  PHASE_CPP1 (\"PhaseCPP 1\"),\n+  PHASE_CCP1 (\"PhaseCCP 1\"),\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/CompilerPhaseType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -247,3 +247,3 @@\n-      G1MonitoringSupport g1mm = g1h.g1mm();\n-      long edenSpaceRegionNum = g1mm.edenSpaceRegionNum();\n-      long survivorSpaceRegionNum = g1mm.survivorSpaceRegionNum();\n+      G1MonitoringSupport monitoringSupport = g1h.monitoringSupport();\n+      long edenSpaceRegionNum = monitoringSupport.edenSpaceRegionNum();\n+      long survivorSpaceRegionNum = monitoringSupport.survivorSpaceRegionNum();\n@@ -258,1 +258,1 @@\n-                   g1mm.edenSpaceUsed(), g1mm.edenSpaceCommitted());\n+                   monitoringSupport.edenSpaceUsed(), monitoringSupport.edenSpaceCommitted());\n@@ -260,1 +260,1 @@\n-                   g1mm.survivorSpaceUsed(), g1mm.survivorSpaceCommitted());\n+                   monitoringSupport.survivorSpaceUsed(), monitoringSupport.survivorSpaceCommitted());\n@@ -262,1 +262,1 @@\n-                   g1mm.oldGenUsed(), g1mm.oldGenCommitted());\n+                   monitoringSupport.oldGenUsed(), monitoringSupport.oldGenCommitted());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/HeapSummary.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -237,2 +237,1 @@\n-         JavaVFrame[] jvframes = new JavaVFrame[tmp.size()];\n-         System.arraycopy(tmp.toArray(), 0, jvframes, 0, jvframes.length);\n+         JavaVFrame[] jvframes = tmp.toArray(new JavaVFrame[0]);\n@@ -289,2 +288,1 @@\n-      String[] res = new String[names.size()];\n-      System.arraycopy(names.toArray(), 0, res, 0, res.length);\n+      String[] res = names.toArray(new String[0]);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/PStack.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1183,1 +1183,2 @@\n-         final Formatter iterate(OopMapStream oms, String type, boolean printContentReg) {\n+         final Formatter iterate(OopMapStream oms, String type, boolean printContentReg,\n+                                 OopMapValue.OopTypes filter) {\n@@ -1191,1 +1192,1 @@\n-               if (omv == null) {\n+               if (omv == null || omv.getType() != filter) {\n@@ -1227,2 +1228,3 @@\n-      OopMapStream oms = new OopMapStream(map, OopMapValue.OopTypes.OOP_VALUE);\n-      buf.append(omvIterator.iterate(oms, \"Oops:\", false));\n+      OopMapStream oms = new OopMapStream(map);\n+      buf.append(omvIterator.iterate(oms, \"Oops:\", false,\n+                                     OopMapValue.OopTypes.OOP_VALUE));\n@@ -1230,2 +1232,3 @@\n-      oms = new OopMapStream(map, OopMapValue.OopTypes.NARROWOOP_VALUE);\n-      buf.append(omvIterator.iterate(oms, \"NarrowOops:\", false));\n+      oms = new OopMapStream(map);\n+      buf.append(omvIterator.iterate(oms, \"NarrowOops:\", false,\n+                                     OopMapValue.OopTypes.NARROWOOP_VALUE));\n@@ -1233,2 +1236,3 @@\n-      oms = new OopMapStream(map, OopMapValue.OopTypes.CALLEE_SAVED_VALUE);\n-      buf.append(omvIterator.iterate(oms, \"Callee saved:\",  true));\n+      oms = new OopMapStream(map);\n+      buf.append(omvIterator.iterate(oms, \"Callee saved:\", true,\n+                                     OopMapValue.OopTypes.CALLEE_SAVED_VALUE));\n@@ -1236,2 +1240,3 @@\n-      oms = new OopMapStream(map, OopMapValue.OopTypes.DERIVED_OOP_VALUE);\n-      buf.append(omvIterator.iterate(oms, \"Derived oops:\", true));\n+      oms = new OopMapStream(map);\n+      buf.append(omvIterator.iterate(oms, \"Derived oops:\", true,\n+                                     OopMapValue.OopTypes.DERIVED_OOP_VALUE));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/classbrowser\/HTMLGenerator.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,3 +68,1 @@\n-      Object[] tmpArray = tmp.toArray();\n-      klasses = new InstanceKlass[tmpArray.length];\n-      System.arraycopy(tmpArray, 0, klasses, 0, tmpArray.length);\n+      klasses = tmp.toArray(new InstanceKlass[0]);\n@@ -94,3 +92,1 @@\n-      Object[] tmpArray = tmp.toArray();\n-      InstanceKlass[] searchResult = new InstanceKlass[tmpArray.length];\n-      System.arraycopy(tmpArray, 0, searchResult, 0, tmpArray.length);\n+      InstanceKlass[] searchResult = tmp.toArray(new InstanceKlass[0]);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/SystemDictionaryHelper.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-.TH \"JHSDB\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JHSDB\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -34,2 +34,2 @@\n-\\f[CB]\\-\\-exe\\f[R] \\f[I]executable\\f[R] \\f[CB]\\-\\-core\\f[R] \\f[I]coredump\\f[R] |\n-\\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R]\\]\n+\\f[CB]\\-\\-exe\\f[R] \\f[I]executable\\f[R] \\f[CB]\\-\\-core\\f[R]\n+\\f[I]coredump\\f[R]]\n@@ -38,2 +38,2 @@\n-\\f[CB]\\-\\-exe\\f[R] \\f[I]executable\\f[R] \\f[CB]\\-\\-core\\f[R] \\f[I]coredump\\f[R] |\n-\\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R]\\]\n+\\f[CB]\\-\\-exe\\f[R] \\f[I]executable\\f[R] \\f[CB]\\-\\-core\\f[R]\n+\\f[I]coredump\\f[R]]\n@@ -47,1 +47,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host\\f[R])\n@@ -52,1 +52,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host\\f[R])\n@@ -57,1 +57,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host\\f[R])\n@@ -62,1 +62,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host\\f[R])\n@@ -84,1 +84,1 @@\n-.B \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R]\n+.B \\f[I][server\\-id\\@]debugd\\-host\\f[R]\n@@ -161,1 +161,1 @@\n-.B \\f[CB]\\-\\-serverid\\f[R] \\f[I]serverid\\f[R]\n+.B \\f[CB]\\-\\-serverid\\f[R] \\f[I]server\\-id\\f[R]\n@@ -163,2 +163,1 @@\n-This is required if multiple debug servers are run on the same server instance.\n-It would be added to RMI object name for server instance.\n+This is required if multiple debug servers are run on the same machine.\n@@ -183,10 +182,0 @@\n-.B \\f[CB]\\-\\-disable-registry\\f[R]\n-Disable starting RMI registry on startup.\n-This option overrides the system property\n-\\[aq]sun.jvm.hotspot.rmi.startRegistry\\[aq].\n-If not specified, RMI registry will be started on startup.\n-Otherwise it will not be started, and the already started RMI registry\n-will be used instead.\n-.RS\n-.RE\n-.TP\n@@ -202,7 +191,0 @@\n-.TP\n-.B \\f[CB]\\-\\-servername\\f[R] \\f[I]servername\\f[R]\n-Sets the instance name of debugd server to distinguish SA debugee.\n-It is used for RMI object name for server instance.\n-If not specified, \"SARemoteDebugger\" will be used.\n-.RS\n-.RE\n","filename":"src\/jdk.hotspot.agent\/share\/man\/jhsdb.1","additions":13,"deletions":31,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.lang.reflect.InvocationTargetException;\n@@ -99,6 +100,11 @@\n-            @SuppressWarnings(\"deprecation\")\n-            Object o = Class.forName(cn, true,\n-                                     ClassLoader.getSystemClassLoader()).newInstance();\n-            provider = (HttpServerProvider)o;\n-            return true;\n-        } catch (ClassNotFoundException |\n+            var cls = Class.forName(cn, false, ClassLoader.getSystemClassLoader());\n+            if (HttpServerProvider.class.isAssignableFrom(cls)) {\n+                provider = (HttpServerProvider) cls.getDeclaredConstructor().newInstance();\n+                return true;\n+            } else {\n+                throw new ServiceConfigurationError(\"not assignable to HttpServerProvider: \"\n+                        + cls.getName());\n+            }\n+        } catch (InvocationTargetException |\n+                 NoSuchMethodException |\n+                 ClassNotFoundException |\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/spi\/HttpServerProvider.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        String s = null;\n+        final var sb = new StringBuilder(HttpConnection.class.getSimpleName());\n@@ -71,1 +71,3 @@\n-            s = chan.toString();\n+            sb.append(\" (\");\n+            sb.append(chan);\n+            sb.append(\")\");\n@@ -73,1 +75,1 @@\n-        return s;\n+        return sb.toString();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/HttpConnection.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -585,1 +585,15 @@\n-                String s = headers.getFirst (\"Transfer-encoding\");\n+                \/* check key for illegal characters *\/\n+                for (var k : headers.keySet()) {\n+                    if (!isValidHeaderKey(k)) {\n+                        reject(Code.HTTP_BAD_REQUEST, requestLine,\n+                                \"Header key contains illegal characters\");\n+                        return;\n+                    }\n+                }\n+                \/* checks for unsupported combinations of lengths and encodings *\/\n+                if (headers.containsKey(\"Content-Length\") &&\n+                        (headers.containsKey(\"Transfer-encoding\") || headers.get(\"Content-Length\").size() > 1)) {\n+                    reject(Code.HTTP_BAD_REQUEST, requestLine,\n+                            \"Conflicting or malformed headers detected\");\n+                    return;\n+                }\n@@ -587,2 +601,13 @@\n-                if (s !=null && s.equalsIgnoreCase (\"chunked\")) {\n-                    clen = -1L;\n+                String headerValue = null;\n+                List<String> teValueList = headers.get(\"Transfer-encoding\");\n+                if (teValueList != null && !teValueList.isEmpty()) {\n+                    headerValue = teValueList.get(0);\n+                }\n+                if (headerValue != null) {\n+                    if (headerValue.equalsIgnoreCase(\"chunked\") && teValueList.size() == 1) {\n+                        clen = -1L;\n+                    } else {\n+                        reject(Code.HTTP_NOT_IMPLEMENTED,\n+                                requestLine, \"Unsupported Transfer-Encoding value\");\n+                        return;\n+                    }\n@@ -590,3 +615,3 @@\n-                    s = headers.getFirst (\"Content-Length\");\n-                    if (s != null) {\n-                        clen = Long.parseLong(s);\n+                    headerValue = headers.getFirst(\"Content-Length\");\n+                    if (headerValue != null) {\n+                        clen = Long.parseLong(headerValue);\n@@ -595,1 +620,1 @@\n-                        requestCompleted (connection);\n+                        requestCompleted(connection);\n@@ -910,0 +935,20 @@\n+\n+    \/*\n+     * Validates a RFC 7230 header-key.\n+     *\/\n+    static boolean isValidHeaderKey(String token) {\n+        if (token == null) return false;\n+\n+        boolean isValidChar;\n+        char[] chars = token.toCharArray();\n+        String validSpecialChars = \"!#$%&'*+-.^_`|~\";\n+        for (char c : chars) {\n+            isValidChar = ((c >= 'a') && (c <= 'z')) ||\n+                          ((c >= 'A') && (c <= 'Z')) ||\n+                          ((c >= '0') && (c <= '9'));\n+            if (!isValidChar && validSpecialChars.indexOf(c) == -1) {\n+                return false;\n+            }\n+        }\n+        return !token.isEmpty();\n+    }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":52,"deletions":7,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -383,0 +383,12 @@\n+    \/*package-private*\/\n+    @ForceInline\n+    static byte rotateLeft(byte a, int n) {\n+        return (byte)(((((byte)a) & Byte.toUnsignedInt((byte)-1)) << (n & Byte.SIZE-1)) | ((((byte)a) & Byte.toUnsignedInt((byte)-1)) >>> (Byte.SIZE - (n & Byte.SIZE-1))));\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    static byte rotateRight(byte a, int n) {\n+        return (byte)(((((byte)a) & Byte.toUnsignedInt((byte)-1)) >>> (n & Byte.SIZE-1)) | ((((byte)a) & Byte.toUnsignedInt((byte)-1)) << (Byte.SIZE - (n & Byte.SIZE-1))));\n+    }\n+\n@@ -603,6 +615,1 @@\n-            if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-                ByteVector neg = that.lanewise(NEG);\n-                ByteVector hi = this.lanewise(LSHL, (op == ROR) ? neg : that);\n-                ByteVector lo = this.lanewise(LSHR, (op == ROR) ? that : neg);\n-                return hi.lanewise(OR, lo);\n-            } else if (op == AND_NOT) {\n+            if (op == AND_NOT) {\n@@ -649,0 +656,4 @@\n+                case VECTOR_OP_LROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateRight(a, (int)n));\n@@ -795,5 +806,0 @@\n-        if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-            ByteVector hi = this.lanewise(LSHL, (op == ROR) ? -e : e);\n-            ByteVector lo = this.lanewise(LSHR, (op == ROR) ? e : -e);\n-            return hi.lanewise(OR, lo);\n-        }\n@@ -812,0 +818,4 @@\n+                case VECTOR_OP_LROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateRight(a, (int)n));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -383,0 +383,1 @@\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -383,0 +383,1 @@\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -383,0 +383,12 @@\n+    \/*package-private*\/\n+    @ForceInline\n+    static int rotateLeft(int a, int n) {\n+        return Integer.rotateLeft(a, n);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    static int rotateRight(int a, int n) {\n+        return Integer.rotateRight(a, n);\n+    }\n+\n@@ -603,6 +615,1 @@\n-            if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-                IntVector neg = that.lanewise(NEG);\n-                IntVector hi = this.lanewise(LSHL, (op == ROR) ? neg : that);\n-                IntVector lo = this.lanewise(LSHR, (op == ROR) ? that : neg);\n-                return hi.lanewise(OR, lo);\n-            } else if (op == AND_NOT) {\n+            if (op == AND_NOT) {\n@@ -649,0 +656,4 @@\n+                case VECTOR_OP_LROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateRight(a, (int)n));\n@@ -795,5 +806,0 @@\n-        if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-            IntVector hi = this.lanewise(LSHL, (op == ROR) ? -e : e);\n-            IntVector lo = this.lanewise(LSHR, (op == ROR) ? e : -e);\n-            return hi.lanewise(OR, lo);\n-        }\n@@ -812,0 +818,4 @@\n+                case VECTOR_OP_LROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateRight(a, (int)n));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -383,0 +383,12 @@\n+    \/*package-private*\/\n+    @ForceInline\n+    static long rotateLeft(long a, int n) {\n+        return Long.rotateLeft(a, n);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    static long rotateRight(long a, int n) {\n+        return Long.rotateRight(a, n);\n+    }\n+\n@@ -561,6 +573,1 @@\n-            if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-                LongVector neg = that.lanewise(NEG);\n-                LongVector hi = this.lanewise(LSHL, (op == ROR) ? neg : that);\n-                LongVector lo = this.lanewise(LSHR, (op == ROR) ? that : neg);\n-                return hi.lanewise(OR, lo);\n-            } else if (op == AND_NOT) {\n+            if (op == AND_NOT) {\n@@ -607,0 +614,4 @@\n+                case VECTOR_OP_LROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateRight(a, (int)n));\n@@ -713,5 +724,0 @@\n-        if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-            LongVector hi = this.lanewise(LSHL, (op == ROR) ? -e : e);\n-            LongVector lo = this.lanewise(LSHR, (op == ROR) ? e : -e);\n-            return hi.lanewise(OR, lo);\n-        }\n@@ -730,0 +736,4 @@\n+                case VECTOR_OP_LROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateRight(a, (int)n));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -383,0 +383,12 @@\n+    \/*package-private*\/\n+    @ForceInline\n+    static short rotateLeft(short a, int n) {\n+        return (short)(((((short)a) & Short.toUnsignedInt((short)-1)) << (n & Short.SIZE-1)) | ((((short)a) & Short.toUnsignedInt((short)-1)) >>> (Short.SIZE - (n & Short.SIZE-1))));\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    static short rotateRight(short a, int n) {\n+        return (short)(((((short)a) & Short.toUnsignedInt((short)-1)) >>> (n & Short.SIZE-1)) | ((((short)a) & Short.toUnsignedInt((short)-1)) << (Short.SIZE - (n & Short.SIZE-1))));\n+    }\n+\n@@ -603,6 +615,1 @@\n-            if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-                ShortVector neg = that.lanewise(NEG);\n-                ShortVector hi = this.lanewise(LSHL, (op == ROR) ? neg : that);\n-                ShortVector lo = this.lanewise(LSHR, (op == ROR) ? that : neg);\n-                return hi.lanewise(OR, lo);\n-            } else if (op == AND_NOT) {\n+            if (op == AND_NOT) {\n@@ -649,0 +656,4 @@\n+                case VECTOR_OP_LROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateRight(a, (int)n));\n@@ -795,5 +806,0 @@\n-        if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-            ShortVector hi = this.lanewise(LSHL, (op == ROR) ? -e : e);\n-            ShortVector lo = this.lanewise(LSHR, (op == ROR) ? e : -e);\n-            return hi.lanewise(OR, lo);\n-        }\n@@ -812,0 +818,4 @@\n+                case VECTOR_OP_LROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateRight(a, (int)n));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -554,1 +554,1 @@\n-    public static final \/*bitwise*\/ Binary ROL = binary(\"ROL\", \"rotateLeft\", -1 \/*VectorSupport.VECTOR_OP_LROTATE*\/, VO_SHIFT | VO_SPECIAL);\n+    public static final \/*bitwise*\/ Binary ROL = binary(\"ROL\", \"rotateLeft\", VectorSupport.VECTOR_OP_LROTATE, VO_SHIFT);\n@@ -556,1 +556,1 @@\n-    public static final \/*bitwise*\/ Binary ROR = binary(\"ROR\", \"rotateRight\", -1 \/*VectorSupport.VECTOR_OP_RROTATE*\/, VO_SHIFT | VO_SPECIAL);\n+    public static final \/*bitwise*\/ Binary ROR = binary(\"ROR\", \"rotateRight\", VectorSupport.VECTOR_OP_RROTATE, VO_SHIFT);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorOperators.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -387,0 +387,22 @@\n+#if[BITWISE]\n+    \/*package-private*\/\n+    @ForceInline\n+    static $type$ rotateLeft($type$ a, int n) {\n+#if[intOrLong]\n+        return $Boxtype$.rotateLeft(a, n);\n+#else[intOrLong]\n+        return ($type$)((((($type$)a) & $Boxtype$.toUnsignedInt(($type$)-1)) << (n & $Boxtype$.SIZE-1)) | (((($type$)a) & $Boxtype$.toUnsignedInt(($type$)-1)) >>> ($Boxtype$.SIZE - (n & $Boxtype$.SIZE-1))));\n+#end[intOrLong]\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    static $type$ rotateRight($type$ a, int n) {\n+#if[intOrLong]\n+        return $Boxtype$.rotateRight(a, n);\n+#else[intOrLong]\n+        return ($type$)((((($type$)a) & $Boxtype$.toUnsignedInt(($type$)-1)) >>> (n & $Boxtype$.SIZE-1)) | (((($type$)a) & $Boxtype$.toUnsignedInt(($type$)-1)) << ($Boxtype$.SIZE - (n & $Boxtype$.SIZE-1))));\n+#end[intOrLong]\n+    }\n+#end[BITWISE]\n+\n@@ -660,6 +682,1 @@\n-            if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-                $abstractvectortype$ neg = that.lanewise(NEG);\n-                $abstractvectortype$ hi = this.lanewise(LSHL, (op == ROR) ? neg : that);\n-                $abstractvectortype$ lo = this.lanewise(LSHR, (op == ROR) ? that : neg);\n-                return hi.lanewise(OR, lo);\n-            } else if (op == AND_NOT) {\n+            if (op == AND_NOT) {\n@@ -708,0 +725,4 @@\n+                case VECTOR_OP_LROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v0, v1) ->\n+                        v0.bOp(v1, (i, a, n) -> rotateRight(a, (int)n));\n@@ -872,5 +893,0 @@\n-        if (op == ROR || op == ROL) {  \/\/ FIXME: JIT should do this\n-            $abstractvectortype$ hi = this.lanewise(LSHL, (op == ROR) ? -e : e);\n-            $abstractvectortype$ lo = this.lanewise(LSHR, (op == ROR) ? e : -e);\n-            return hi.lanewise(OR, lo);\n-        }\n@@ -889,0 +905,4 @@\n+                case VECTOR_OP_LROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateLeft(a, (int)n));\n+                case VECTOR_OP_RROTATE: return (v, n) ->\n+                        v.uOp((i, a) -> rotateRight(a, (int)n));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":31,"deletions":11,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -223,0 +223,1 @@\n+        SERIALIZE,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.amd64\/src\/jdk\/vm\/ci\/amd64\/AMD64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -798,2 +798,6 @@\n-                    hasUnsignedEntry |= !je.isDirectory() && !isSigned\n-                                        && !signatureRelated(name);\n+\n+                    boolean unsignedEntry = !isSigned\n+                            && ((!je.isDirectory() && !signatureRelated(name))\n+                            \/\/ a directory entry but with a suspicious size\n+                            || (je.isDirectory() && je.getSize() > 0));\n+                    hasUnsignedEntry |= unsignedEntry;\n@@ -821,1 +825,3 @@\n-                                .append((inStoreWithAlias & NOT_ALIAS) != 0 ? 'X' : ' ')\n+                                .append((inStoreWithAlias & NOT_ALIAS) != 0 ?\n+                                 rb.getString(\"X\") : rb.getString(\"SPACE\"))\n+                                .append(unsignedEntry ? rb.getString(\"q\") : rb.getString(\"SPACE\"))\n@@ -849,1 +855,1 @@\n-                        } else {\n+                        } else if (unsignedEntry) {\n@@ -853,0 +859,4 @@\n+                        } else {\n+                            sb.append('\\n').append(tab)\n+                                    .append(rb.getString(\".Directory.entries.\"))\n+                                    .append(\"\\n\\n\");\n@@ -927,0 +937,5 @@\n+\n+                if (hasUnsignedEntry) {\n+                    System.out.println(rb.getString(\n+                            \".q.unsigned.entry\"));\n+                }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,0 +136,2 @@\n+        {\"X\", \"X\"},\n+        {\"q\", \"?\"},\n@@ -145,0 +147,2 @@\n+        {\".q.unsigned.entry\",\n+                \"  ? = unsigned entry\"},\n@@ -148,0 +152,1 @@\n+        {\".Directory.entries.\", \"(Directory entries)\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAR\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JAR\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-.TH \"JARSIGNER\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JARSIGNER\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -557,8 +557,11 @@\n-manifest file is that one or more files were added to the JAR file (with\n-the \\f[CB]jar\\f[R] tool) after the signature and \\f[CB]\\&.SF\\f[R] file were\n-generated.\n-When the \\f[CB]jar\\f[R] tool is used to add files, the manifest file is\n-changed by adding sections to it for the new files, but the\n-\\f[CB]\\&.SF\\f[R] file isn\\[aq]t changed.\n-A verification is still considered successful when none of the files\n-that were in the JAR file when the signature was generated have been\n+manifest file is that it might contain sections for newly added files\n+after the file was signed.\n+For example, suppose one or more files were added to the signed JAR file\n+(using the \\f[CB]jar\\f[R] tool) that already contains a signature and a\n+\\f[CB]\\&.SF\\f[R] file.\n+If the JAR file is signed again by a different signer, then the manifest\n+file is changed (sections are added to it for the new files by the\n+\\f[CB]jarsigner\\f[R] tool) and a new \\f[CB]\\&.SF\\f[R] file is created, but\n+the original \\f[CB]\\&.SF\\f[R] file is unchanged.\n+A verification is still considered successful if none of the files that\n+were in the JAR file when the original signature was generated have been\n@@ -566,1 +569,1 @@\n-This happens when the hashes in the non\\-header sections of the\n+This is because the hashes in the non\\-header sections of the\n","filename":"src\/jdk.jartool\/share\/man\/jarsigner.1","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -338,1 +338,1 @@\n-            writer.addSummaryLinkComment(this, element, desc);\n+            writer.addSummaryLinkComment(element, desc);\n@@ -366,1 +366,1 @@\n-        writer.addSummaryLinkComment(this, member, firstSentenceTrees, desc);\n+        writer.addSummaryLinkComment(member, firstSentenceTrees, desc);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1165,1 +1165,1 @@\n-        addCommentTags(element, tag, description, false, false, false, htmltree);\n+        addCommentTags(element, description, false, false, false, htmltree);\n@@ -1252,16 +1252,0 @@\n-        addCommentTags(element, null, tags, depr, first, inSummary, htmltree);\n-    }\n-\n-    \/**\n-     * Adds the comment tags.\n-     *\n-     * @param element for which the comment tags will be generated\n-     * @param holderTag the block tag context for the inline tags\n-     * @param tags the first sentence tags for the doc\n-     * @param depr true if it is deprecated\n-     * @param first true if the first sentence tags should be added\n-     * @param inSummary true if the comment tags are added into the summary section\n-     * @param htmltree the documentation tree to which the comment tags will be added\n-     *\/\n-    private void addCommentTags(Element element, DocTree holderTag, List<? extends DocTree> tags, boolean depr,\n-            boolean first, boolean inSummary, Content htmltree) {\n@@ -1849,2 +1833,2 @@\n-            \/\/ If the annotation is synthesized, do not print the container.\n-            if (utils.configuration.workArounds.isSynthesized(aDesc)) {\n+            \/\/ If the annotation is mandated, do not print the container.\n+            if (utils.configuration.workArounds.isMandated(aDesc)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n@@ -139,1 +138,0 @@\n-     * @param mw the writer for the member being documented\n@@ -143,1 +141,1 @@\n-    public void addSummaryLinkComment(AbstractMemberWriter mw, Element member, Content contentTree) {\n+    public void addSummaryLinkComment(Element member, Content contentTree) {\n@@ -145,1 +143,1 @@\n-        addSummaryLinkComment(mw, member, tags, contentTree);\n+        addSummaryLinkComment(member, tags, contentTree);\n@@ -151,1 +149,0 @@\n-     * @param mw the writer for the member being documented\n@@ -156,2 +153,1 @@\n-    public void addSummaryLinkComment(AbstractMemberWriter mw,\n-            Element member, List<? extends DocTree> firstSentenceTags, Content tdSummary) {\n+    public void addSummaryLinkComment(Element member, List<? extends DocTree> firstSentenceTags, Content tdSummary) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -125,3 +125,2 @@\n-    \/\/ TODO: fix jx.l.m add this method.\n-    public boolean isSynthesized(AnnotationMirror aDesc) {\n-        return ((Attribute)aDesc).isSynthesized();\n+    public boolean isMandated(AnnotationMirror aDesc) {\n+        return elementUtils.getOrigin(null, aDesc) == Elements.Origin.MANDATED;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/WorkArounds.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -273,3 +273,0 @@\n-                        \/\/ let the comment helper know of the overridden element\n-                        CommentHelper ch = utils.getCommentHelper(member);\n-                        ch.setOverrideElement(inheritedDoc.holder);\n@@ -489,1 +486,1 @@\n-            if (field == null || builder.utils.getDocCommentTree(field) == null) {\n+            if (field == null || !builder.utils.hasDocCommentTree(field)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -100,1 +100,0 @@\n-                ch.setOverrideElement(inheritedDoc.holder);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -209,3 +209,1 @@\n-                    CommentHelper ch = utils.getCommentHelper(holder);\n-                    ch.setOverrideElement(inheritedDoc.holder);\n-                    Content content = processParamTag(holder, kind, writer,\n+                    Content content = processParamTag(inheritedDoc.holder, kind, writer,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,3 +124,1 @@\n-            CommentHelper ch = utils.getCommentHelper(input.element);\n-            ch.setOverrideElement(inheritedDoc.holder);\n-            return writer.returnTagOutput(holder, (ReturnTree) inheritedDoc.holderTag, false);\n+            return writer.returnTagOutput(inheritedDoc.holder, (ReturnTree) inheritedDoc.holderTag, false);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import javax.lang.model.element.ExecutableElement;\n@@ -90,1 +91,0 @@\n-    private Element overriddenElement;\n@@ -109,7 +109,0 @@\n-    public void setOverrideElement(Element ove) {\n-        if (this.element == ove) {\n-            throw new AssertionError(\"cannot set given element as overridden element\");\n-        }\n-        overriddenElement = ove;\n-    }\n-\n@@ -168,14 +161,1 @@\n-        \/\/ case A: the element contains no comments associated and\n-        \/\/ the comments need to be copied from ancestor\n-        \/\/ case B: the element has @inheritDoc, then the ancestral comment\n-        \/\/ as appropriate has to be copied over.\n-\n-        \/\/ Case A.\n-        if (dcTree == null && overriddenElement != null) {\n-            CommentHelper ovch = utils.getCommentHelper(overriddenElement);\n-            return ovch.getElement(rtree);\n-        }\n-        if (dcTree == null) {\n-            return null;\n-        }\n-        DocTreePath docTreePath = DocTreePath.getPath(path, dcTree, rtree);\n+        DocTreePath docTreePath = getDocTreePath(rtree);\n@@ -183,5 +163,0 @@\n-            \/\/ Case B.\n-            if (overriddenElement != null) {\n-                CommentHelper ovch = utils.getCommentHelper(overriddenElement);\n-                return ovch.getElement(rtree);\n-            }\n@@ -195,4 +170,1 @@\n-        \/\/ Workaround for JDK-8269706\n-        if (path == null || dcTree == null || rtree == null)\n-            return null;\n-        DocTreePath docTreePath = DocTreePath.getPath(path, dcTree, rtree);\n+        DocTreePath docTreePath = getDocTreePath(rtree);\n@@ -703,1 +675,4 @@\n-        if (path == null || dcTree == null || dtree == null)\n+        if (dcTree == null && element instanceof ExecutableElement ee) {\n+            return getInheritedDocTreePath(dtree, ee);\n+        }\n+        if (path == null || dcTree == null || dtree == null) {\n@@ -705,1 +680,7 @@\n-        return DocTreePath.getPath(path, dcTree, dtree);\n+        }\n+        DocTreePath dtPath = DocTreePath.getPath(path, dcTree, dtree);\n+        if (dtPath == null && element instanceof ExecutableElement ee) {\n+            \/\/ The overriding element has a doc tree, but it doesn't contain what we're looking for.\n+            return getInheritedDocTreePath(dtree, ee);\n+        }\n+        return dtPath;\n@@ -708,2 +689,8 @@\n-    public Element getOverriddenElement() {\n-        return overriddenElement;\n+    private DocTreePath getInheritedDocTreePath(DocTree dtree, ExecutableElement ee) {\n+        Utils utils = configuration.utils;\n+        DocFinder.Output inheritedDoc =\n+                DocFinder.search(configuration,\n+                        new DocFinder.Input(utils, ee));\n+        return inheritedDoc == null || inheritedDoc.holder == ee\n+                ? null\n+                : utils.getCommentHelper(inheritedDoc.holder).getDocTreePath(dtree);\n@@ -723,8 +710,0 @@\n-        sb.append(\", overriddenElement=\");\n-        if (overriddenElement != null) {\n-            sb.append(overriddenElement.getEnclosingElement());\n-            sb.append(\"::\");\n-            sb.append(overriddenElement);\n-        } else {\n-            sb.append(\"<none>\");\n-        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":22,"deletions":43,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -950,7 +950,8 @@\n-        SoftReference<ImplementedMethods> imf = implementMethodsFinders.get(method);\n-        \/\/ IMF does not exist or referent was gc'ed away ?\n-        if (imf == null || imf.get() == null) {\n-            imf = new SoftReference<>(new ImplementedMethods(method));\n-            implementMethodsFinders.put(method, imf);\n-        }\n-        return imf.get();\n+        SoftReference<ImplementedMethods> ref = implementMethodsFinders.get(method);\n+        ImplementedMethods imf = ref == null ? null : ref.get();\n+        \/\/ imf does not exist or was gc'ed away?\n+        if (imf == null) {\n+            imf = new ImplementedMethods(method);\n+            implementMethodsFinders.put(method, new SoftReference<>(imf));\n+        }\n+        return imf;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -185,0 +185,3 @@\n+\n+\n+\n@@ -187,1 +190,5 @@\n-                if (!isSynthetic() && !isOverridingMethod)\n+                if (isDefaultConstructor()) {\n+                    if (isNormalClass(p.getParentPath())) {\n+                        reportMissing(\"dc.default.constructor\");\n+                    }\n+                } else if (!isOverridingMethod) {\n@@ -189,0 +196,1 @@\n+                }\n@@ -1145,1 +1153,1 @@\n-    private boolean isSynthetic() {\n+    private boolean isDefaultConstructor() {\n@@ -1156,0 +1164,8 @@\n+    private boolean isNormalClass(TreePath p) {\n+        return switch (p.getLeaf().getKind()) {\n+            case ENUM, RECORD -> false;\n+            case CLASS -> true;\n+            default -> throw new IllegalArgumentException(p.getLeaf().getKind().name());\n+        };\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+dc.default.constructor = use of default constructor, which does not provide a comment\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/resources\/doclint.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAVADOC\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JAVADOC\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -1098,3 +1098,3 @@\n-them with a colon (\\f[CB]:\\f[R]).\n-The \\f[CB]javadoc\\f[R] tool searches all subdirectories of the specified\n-paths.\n+them with the platform path separator (\\f[CB];\\f[R] on Windows; \\f[CB]:\\f[R]\n+on other platforms.) The \\f[CB]javadoc\\f[R] tool searches all\n+subdirectories of the specified paths.\n","filename":"src\/jdk.javadoc\/share\/man\/javadoc.1","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JCMD\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JCMD\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -444,0 +444,2 @@\n+If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it\n+expands to the JVM\\[aq]s PID and the current timestamp, respectively.\n@@ -512,0 +514,2 @@\n+If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it\n+expands to the JVM\\[aq]s PID and the current timestamp, respectively.\n@@ -566,1 +570,1 @@\n-Event settings and .jfc options can also be specified using the following\n+Event settings and .jfc options can be specified using the following\n@@ -568,13 +572,17 @@\n-.TP\n-.B \\f[CB]option=\\f[R]\\f[I]value\\f[R]\n-Specifies the option value to modify. To list available options, use the\n-JAVA_HOME\/bin\/jfr tool.\n-.TP\n-.B \\f[CB]event-setting=\\f[R]\\f[I]value\\f[R]\n-Specifies the event setting value to modify. Use the form:\n-<event-name>#<setting-name>=<value>\n-To add a new event setting, prefix the event name with '+'.\n-.PP\n-In case of a conflict between a parameter and a .jfc option, the parameter\n-will take precedence. The whitespace delimiter can be omitted for timespan values, i.e. 20ms. For\n-more information about the settings syntax, see Javadoc of the jdk.jfr package.\n+.IP \\[bu] 2\n+\\f[CB]option\\f[R]: (Optional) Specifies the option value to modify.\n+To list available options, use the \\f[CB]JAVA_HOME\\f[R]\/bin\/jfr tool.\n+.IP \\[bu] 2\n+\\f[CB]event\\-setting\\f[R]: (Optional) Specifies the event setting value to\n+modify.\n+Use the form: #= To add a new event setting, prefix the event name with\n+\\[aq]+\\[aq].\n+.PP\n+You can specify values for multiple event settings and .jfc options by\n+separating them with a whitespace.\n+In case of a conflict between a parameter and a .jfc option, the\n+parameter will take precedence.\n+The whitespace delimiter can be omitted for timespan values, i.e.\n+20ms.\n+For more information about the settings syntax, see Javadoc of the\n+jdk.jfr package.\n@@ -599,0 +607,2 @@\n+If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it\n+expands to the JVM\\[aq]s PID and the current timestamp, respectively.\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":25,"deletions":15,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JINFO\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JINFO\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jinfo.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JMAP\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JMAP\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jmap.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JPS\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JPS\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jps.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JSTACK\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JSTACK\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jstack.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JSTAT\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JSTAT\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jstat.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JCONSOLE\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JCONSOLE\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jconsole\/share\/man\/jconsole.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAVAP\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JAVAP\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/javap.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JDEPRSCAN\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JDEPRSCAN\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/jdeprscan.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JDEPS\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JDEPS\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/jdeps.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JDB\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JDB\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jdi\/share\/man\/jdb.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -734,4 +734,0 @@\n-    private int stiFileTableIndex(int sti, int lti) {\n-        return fileTableIndex(sti, lineTable[lti].fileId);\n-    }\n-\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/SDE.c","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.time.LocalDateTime;\n@@ -194,1 +195,1 @@\n-        currentLine.append(String.format(s, args));\n+        currentLine.append(args.length > 0 ? String.format(s, args) : s);\n@@ -272,0 +273,37 @@\n+\n+    static String expandFilename(String filename) {\n+        if (filename == null || filename.indexOf('%') == -1) {\n+            return filename;\n+        }\n+\n+        String pid = null;\n+        String time = null;\n+        StringBuilder sb = new StringBuilder();\n+        for (int i = 0; i < filename.length(); i++) {\n+            char c = filename.charAt(i);\n+            if (c == '%' && i < filename.length() - 1) {\n+                char nc = filename.charAt(i + 1);\n+                if (nc == '%') { \/\/ %% ==> %\n+                    sb.append('%');\n+                    i++;\n+                } else if (nc == 'p') {\n+                    if (pid == null) {\n+                        pid = JVM.getJVM().getPid();\n+                    }\n+                    sb.append(pid);\n+                    i++;\n+                } else if (nc == 't') {\n+                    if (time == null) {\n+                        time = Utils.formatDateTime(LocalDateTime.now());\n+                    }\n+                    sb.append(time);\n+                    i++;\n+                } else {\n+                    sb.append('%');\n+                }\n+            } else {\n+                sb.append(c);\n+            }\n+        }\n+        return sb.toString();\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/AbstractDCmd.java","additions":39,"deletions":1,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        String filename = parser.getOption(\"filename\");\n+        String filename = expandFilename(parser.getOption(\"filename\"));\n@@ -235,0 +235,4 @@\n+                                 Note: If a filename is given, '%%p' in the filename will be\n+                                 replaced by the PID, and '%%t' will be replaced by the time in\n+                                 'yyyy_MM_dd_HH_mm_ss' format.\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdDump.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        String path = parser.getOption(\"filename\");\n+        String path = expandFilename(parser.getOption(\"filename\"));\n@@ -342,0 +342,4 @@\n+                                 Note: If a filename is given, '%%p' in the filename will be\n+                                 replaced by the PID, and '%%t' will be replaced by the time in\n+                                 'yyyy_MM_dd_HH_mm_ss' format.\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStart.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        String filename = parser.getOption(\"filename\");\n+        String filename = expandFilename(parser.getOption(\"filename\"));\n@@ -85,0 +85,3 @@\n+                           Note: If a path is given, '%%p' in the path will be replaced by the PID,\n+                           and '%%t' will be replaced by the time in 'yyyy_MM_dd_HH_mm_ss' format.\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStop.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JFR\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JFR\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jfr\/share\/man\/jfr.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JLINK\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JLINK\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jlink\/share\/man\/jlink.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JMOD\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JMOD\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jlink\/share\/man\/jmod.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -128,1 +129,1 @@\n-        if (Optional.ofNullable(MacAppImageBuilder.\n+        if (Optional.ofNullable(\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppBundler.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,0 +69,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -146,10 +147,0 @@\n-    public static final StandardBundlerParam<Boolean> SIGN_BUNDLE  =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_SIGN.getId(),\n-            Boolean.class,\n-            params -> false,\n-            \/\/ valueOf(null) is false, we actually do want null in some cases\n-            (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n-                    null : Boolean.valueOf(s)\n-        );\n-\n@@ -866,1 +857,0 @@\n-\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.util.Optional;\n@@ -44,0 +45,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -137,0 +139,14 @@\n+            if (Optional.ofNullable(\n+                    SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.FALSE)) {\n+                \/\/ if signing bundle with app-image, warn user if app-image\n+                \/\/ is not allready signed.\n+                try {\n+                    if (!(AppImageFile.load(applicationImage).isSigned())) {\n+                        Log.info(MessageFormat.format(I18N.getString(\n+                                 \"warning.unsigned.app.image\"), getID()));\n+                    }\n+                } catch (IOException ioe) {\n+                    \/\/ Ignore - In case of a forign or tampered with app-image,\n+                    \/\/ user is notified of this when the name is extracted.\n+                }\n+            }\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacBaseInstallerBundler.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -502,1 +503,1 @@\n-            if (Optional.ofNullable(MacAppImageBuilder.\n+            if (Optional.ofNullable(\n@@ -606,1 +607,1 @@\n-            if (Optional.ofNullable(MacAppImageBuilder.\n+            if (Optional.ofNullable(\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,0 +91,1 @@\n+warning.unsigned.app.image=Warning: Using unsigned app-image to build signed {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+warning.unsigned.app.image=Warning: Using unsigned app-image to build signed {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_ja.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+warning.unsigned.app.image=Warning: Using unsigned app-image to build signed {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -61,0 +62,1 @@\n+    private final boolean signed;\n@@ -70,1 +72,1 @@\n-        this(null, null, null, null);\n+        this(null, null, null, null, null);\n@@ -74,1 +76,1 @@\n-            String creatorVersion, String creatorPlatform) {\n+            String creatorVersion, String creatorPlatform, String signedStr) {\n@@ -79,0 +81,1 @@\n+        this.signed = \"true\".equals(signedStr);\n@@ -97,0 +100,4 @@\n+    boolean isSigned() {\n+        return signed;\n+    }\n+\n@@ -132,0 +139,4 @@\n+            xml.writeStartElement(\"signed\");\n+            xml.writeCharacters(SIGN_BUNDLE.fetchFrom(params).toString());\n+            xml.writeEndElement();\n+\n@@ -174,0 +185,3 @@\n+            String signedStr = xpathQueryNullable(xPath,\n+                    \"\/jpackage-state\/@signed\", doc);\n+\n@@ -190,1 +204,1 @@\n-                    mainLauncher, launcherInfos, version, platform);\n+                    mainLauncher, launcherInfos, version, platform, signedStr);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -488,0 +488,10 @@\n+    static final StandardBundlerParam<Boolean> SIGN_BUNDLE =\n+            new StandardBundlerParam<>(\n+                    Arguments.CLIOptions.MAC_SIGN.getId(),\n+                    Boolean.class,\n+                    params -> false,\n+                    (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n+                    null : Boolean.valueOf(s)\n+        );\n+\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-.TH \"JPACKAGE\" \"1\" \"2019\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JPACKAGE\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n@@ -53,1 +53,1 @@\n-Read options and\/or mode from a file.\n+Read options from a file.\n@@ -71,1 +71,1 @@\n-Version of the application and\/or package`\n+Version of the application and\/or package\n@@ -76,1 +76,1 @@\n-Copyright for the application.\n+Copyright for the application\n@@ -81,1 +81,1 @@\n-Description of the application.\n+Description of the application\n@@ -91,0 +91,6 @@\n+.B \\f[CB]\\-\\-icon\\f[R] <icon file path>\n+Path of the icon of the application package (absolute path or relative\n+to the current directory)\n+.RS\n+.RE\n+.TP\n@@ -92,1 +98,1 @@\n-Name of the application and\/or package.\n+Name of the application and\/or package\n@@ -104,1 +110,1 @@\n-.B \\f[CB]\\-\\-temp\\f[R] <file path>\n+.B \\f[CB]\\-\\-temp\\f[R] <directory path>\n@@ -106,1 +112,1 @@\n-(absolute path or relative to the current directory).\n+(absolute path or relative to the current directory)\n@@ -117,1 +123,1 @@\n-Vendor of the application.\n+Vendor of the application\n@@ -133,1 +139,1 @@\n-A comma (\",\") separated list of modules to add.\n+A comma (\",\") separated list of modules to add\n@@ -146,1 +152,1 @@\n-A File.pathSeparator separated list of paths.\n+A File.pathSeparator separated list of paths\n@@ -165,1 +171,1 @@\n-.B \\f[CB]\\-\\-runtime\\-image\\f[R] <file paths>\n+.B \\f[CB]\\-\\-runtime\\-image\\f[R] <directory path>\n@@ -167,1 +173,1 @@\n-application image (absolute path or relative to the current directory).\n+application image (absolute path or relative to the current directory)\n@@ -171,3 +177,1 @@\n-create the runtime image using options: \\-\\-strip\\-debug,\n-\\-\\-no\\-header\\-files, \\-\\-no\\-man\\-pages, and\n-\\-\\-strip\\-native\\-commands.\n+create the runtime image using options specified by \\-\\-jlink\\-options.\n@@ -177,6 +181,0 @@\n-.B \\f[CB]\\-\\-icon\\f[R] <icon file path>\n-Path of the icon of the application bundle (absolute path or relative to\n-the current directory).\n-.RS\n-.RE\n-.TP\n@@ -185,1 +183,1 @@\n-(absolute path or relative to the current directory).\n+(absolute path or relative to the current directory)\n@@ -195,2 +193,1 @@\n-of key, value pairs (absolute path or relative to the current\n-directory).\n+of key, value pairs (absolute path or relative to the current directory)\n@@ -199,3 +196,3 @@\n-The keys \"module\", \"add\\-modules\", \"main\\-jar\", \"main\\-class\",\n-\"arguments\", \"java\\-options\", \"app\\-version\", \"icon\", and \"win\\-console\"\n-can be used.\n+The keys \"module\", \"main\\-jar\", \"main\\-class\", \"arguments\",\n+\"java\\-options\", \"app\\-version\", \"icon\", \"linux\\-app\\-category\",\n+\"linux\\-app\\-release\", and \"win\\-console\" can be used.\n@@ -214,1 +211,1 @@\n-arguments are given to the launcher.\n+arguments are given to the launcher\n@@ -221,1 +218,1 @@\n-Options to pass to the Java runtime.\n+Options to pass to the Java runtime\n@@ -228,1 +225,1 @@\n-Qualified name of the application main class to execute.\n+Qualified name of the application main class to execute\n@@ -236,1 +233,1 @@\n-a path relative to the input path).\n+a path relative to the input path)\n@@ -243,2 +240,1 @@\n-The main module (and optionally main class) of the application This\n-module must be located on the module path.\n+The main module (and optionally main class) of the application\n@@ -247,0 +243,2 @@\n+This module must be located on the module path.\n+.PP\n@@ -262,1 +260,1 @@\n-An identifier that uniquely identifies the application for macOSX.\n+An identifier that uniquely identifies the application for macOS\n@@ -272,1 +270,1 @@\n-Name of the application as it appears in the Menu Bar.\n+Name of the application as it appears in the Menu Bar\n@@ -282,4 +280,4 @@\n-.B \\f[CB]\\-\\-mac\\-bundle\\-signing\\-prefix\\f[R] <prefix string>\n-When signing the application bundle, this value is prefixed to all\n-components that need to be signed that don\\[aq]t have an existing bundle\n-identifier.\n+.B \\f[CB]\\-\\-mac\\-package\\-signing\\-prefix\\f[R] <prefix string>\n+When signing the application package, this value is prefixed to all\n+components that need to be signed that don\\[aq]t have an existing\n+package identifier.\n@@ -294,3 +292,2 @@\n-.B \\f[CB]\\-\\-mac\\-signing\\-keychain\\f[R] <file path>\n-Path of the keychain to search for the signing identity (absolute path\n-or relative to the current directory).\n+.B \\f[CB]\\-\\-mac\\-signing\\-keychain\\f[R] <keychain name>\n+Name of the keychain to search for the signing identity\n@@ -303,1 +300,17 @@\n-Team name portion in Apple signing identities\\[aq] names.\n+Team or user name portion in Apple signing identities\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-\\-mac\\-app\\-store\\f[R]\n+Indicates that the jpackage output is intended for the Mac App Store.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-\\-mac\\-entitlements\\f[R] <file path>\n+Path to file containing entitlements to use when signing executables and\n+libraries in the bundle\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-\\-mac\\-app\\-category\\f[R] <category string>\n+String used to construct LSApplicationCategoryType in application plist\n@@ -306,1 +319,1 @@\n-For example \"Developer ID Application: <team name>\"\n+The default value is \"utilities\".\n@@ -310,1 +323,6 @@\n-.B \\f[CB]\\-\\-app\\-image\\f[R] <file path>\n+.B \\f[CB]\\-\\-about\\-url\\f[R] <url>\n+URL of the application\\[aq]s home page\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-\\-app\\-image\\f[R] <directory path>\n@@ -312,2 +330,1 @@\n-installable package (absolute path or relative to the current\n-directory).\n+installable package\n@@ -316,0 +333,2 @@\n+(absolute path or relative to the current directory).\n+.PP\n@@ -321,1 +340,1 @@\n-(absolute path or relative to the current directory).\n+(absolute path or relative to the current directory)\n@@ -330,5 +349,4 @@\n-.B \\f[CB]\\-\\-install\\-dir\\f[R] <file path>\n-Absolute path of the installation directory of the application on OS X\n-or Linux.\n-Relative sub\\-path of the installation location of the application such\n-as \"Program Files\" or \"AppData\" on Windows.\n+.B \\f[CB]\\-\\-install\\-dir\\f[R] <directory path>\n+Absolute path of the installation directory of the application (on macos\n+or linux), or relative sub\\-path of the installation directory such as\n+\"Program Files\" or \"AppData\" (on Windows)\n@@ -340,1 +358,1 @@\n-directory).\n+directory)\n@@ -344,1 +362,1 @@\n-.B \\f[CB]\\-\\-resource\\-dir\\f[R] <path>\n+.B \\f[CB]\\-\\-resource\\-dir\\f[R] <directory path>\n@@ -346,1 +364,1 @@\n-current directory).\n+current directory)\n@@ -353,1 +371,1 @@\n-.B \\f[CB]\\-\\-runtime\\-image\\f[R] <file\\-path>\n+.B \\f[CB]\\-\\-runtime\\-image\\f[R] <directory path>\n@@ -355,1 +373,1 @@\n-relative to the current directory).\n+relative to the current directory)\n@@ -369,0 +387,5 @@\n+.B \\f[CB]\\-\\-win\\-help\\-url\\f[R] <url>\n+URL where user can obtain further information or technical support\n+.RS\n+.RE\n+.TP\n@@ -370,1 +393,1 @@\n-Adds the application to the system menu.\n+Request to add a Start Menu shortcut for this application\n@@ -375,1 +398,1 @@\n-Start Menu group this application is placed in.\n+Start Menu group this application is placed in\n@@ -380,1 +403,1 @@\n-Request to perform an install on a per\\-user basis.\n+Request to perform an install on a per\\-user basis\n@@ -385,1 +408,12 @@\n-Creates a desktop shortcut for the application.\n+Request to create a desktop shortcut for this application\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-\\-win\\-shortcut\\-prompt\\f[R]\n+Adds a dialog to enable the user to choose if shortcuts will be created\n+by installer\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-\\-win\\-update\\-url\\f[R] <url>\n+URL of available application update information\n@@ -390,1 +424,1 @@\n-UUID associated with upgrades for this package.\n+UUID associated with upgrades for this package\n@@ -396,1 +430,1 @@\n-Name for Linux package, defaults to the application name.\n+Name for Linux package\n@@ -398,0 +432,2 @@\n+.PP\n+Defaults to the application name.\n@@ -401,1 +437,1 @@\n-Maintainer for .deb bundle.\n+Maintainer for .deb bundle\n@@ -406,1 +442,1 @@\n-Menu group this application is placed in.\n+Menu group this application is placed in\n@@ -416,1 +452,1 @@\n-Type of the license (\"License: <value>\" of the RPM .spec).\n+Type of the license (\"License: <value>\" of the RPM .spec)\n@@ -422,1 +458,1 @@\n-the DEB control file.\n+the DEB control file\n@@ -428,1 +464,1 @@\n-file.\n+file\n@@ -433,1 +469,1 @@\n-Creates a shortcut for the application\n+Creates a shortcut for the application.\n@@ -471,1 +507,2 @@\n-\\ \\ \\ \\ jlink\\ \\-\\-output\\ appRuntimeImage\\ \\-p\\ modulePath\\ \\-m\\ moduleName\\ \\\\\n+\\ \\ \\ \\ jlink\\ \\-\\-output\\ appRuntimeImage\\ \\-p\\ modulePath\\ \\\\\n+\\ \\ \\ \\ \\ \\ \\ \\ \\-\\-add\\-modules\\ moduleName\\ \\\\\n","filename":"src\/jdk.jpackage\/share\/man\/jpackage.1","additions":110,"deletions":73,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -94,0 +94,18 @@\n+bool AppLauncher::libEnvVariableContainsAppDir() const {\n+    tstring value = SysInfo::getEnvVariable(std::nothrow,\n+            libEnvVarName, tstring());\n+#ifdef _WIN32\n+    value = tstrings::toLower(value);\n+#endif\n+\n+    const tstring_array tokens = tstrings::split(value,\n+            tstring(1, FileUtils::pathSeparator));\n+    return tokens.end() != std::find(tokens.begin(), tokens.end(),\n+#ifdef _WIN32\n+        tstrings::toLower(appDirPath)\n+#else\n+        appDirPath\n+#endif\n+    );\n+}\n+\n@@ -115,2 +133,6 @@\n-    SysInfo::setEnvVariable(libEnvVarName, SysInfo::getEnvVariable(\n-            std::nothrow, libEnvVarName) + _T(\";\") + appDirPath);\n+    if (!libEnvVariableContainsAppDir()) {\n+        SysInfo::setEnvVariable(libEnvVarName, SysInfo::getEnvVariable(\n+                std::nothrow, libEnvVarName)\n+                + FileUtils::pathSeparator\n+                + appDirPath);\n+    }\n","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -68,0 +68,2 @@\n+    bool libEnvVariableContainsAppDir() const;\n+\n","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.text.MessageFormat;\n@@ -45,3 +46,5 @@\n-        if (components.length > 3) {\n-            throw new IllegalArgumentException(I18N.getString(\n-                    \"error.msi-product-version-too-many-components\"));\n+\n+        if (components.length < 2 || components.length > 4) {\n+            throw new IllegalArgumentException(MessageFormat.format(\n+                    I18N.getString(\"error.msi-product-version-components\"),\n+                    value));\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/MsiVersion.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-error.version-string-wrong-format.advice=Set value of --app-version parameter according to these rules: https:\/\/msdn.microsoft.com\/en-us\/library\/aa370859%28v\\=VS.85%29.aspx\n-error.msi-product-version-too-many-components=Version sting may have between 1 and 3 components: 1, 1.2, 1.2.3.\n+error.version-string-wrong-format.advice=Set value of --app-version parameter to a valid Windows Installer ProductVersion.\n+error.msi-product-version-components=Version string [{0}] must have between 2 and 4 components.\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-error.version-string-wrong-format.advice=--app-version\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u306E\\u5024\\u3092\\u6B21\\u306E\\u898F\\u5247\\u306B\\u5F93\\u3063\\u3066\\u8A2D\\u5B9A\\u3057\\u307E\\u3059: https:\/\/msdn.microsoft.com\/en-us\/library\/aa370859%28v=VS.85%29.aspx\n-error.msi-product-version-too-many-components=\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u6587\\u5B57\\u5217\\u306B\\u306F\\u30011\\u30011.2\\u30011.2.3\\u306A\\u30691\\u304B\\u30893\\u306E\\u69CB\\u6210\\u8981\\u7D20\\u3092\\u4F7F\\u7528\\u3067\\u304D\\u307E\\u3059\\u3002\n+error.version-string-wrong-format.advice=Set value of --app-version parameter to a valid Windows Installer ProductVersion.\n+error.msi-product-version-components=Version string [{0}] must have between 2 and 4 components.\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-error.version-string-wrong-format.advice=\\u6839\\u636E\\u4EE5\\u4E0B\\u89C4\\u5219\\u8BBE\\u7F6E --app-version \\u53C2\\u6570\\u7684\\u503C\\uFF1Ahttps:\/\/msdn.microsoft.com\/en-us\/library\/aa370859%28v=VS.85%29.aspx\n-error.msi-product-version-too-many-components=\\u7248\\u672C\\u5B57\\u7B26\\u4E32\\u53EF\\u4EE5\\u5305\\u542B 1 \\u5230 3 \\u4E2A\\u7EC4\\u4EF6\\uFF1A1\\u30011.2\\u30011.2.3\\u3002\n+error.version-string-wrong-format.advice=Set value of --app-version parameter to a valid Windows Installer ProductVersion.\n+error.msi-product-version-components=Version string [{0}] must have between 2 and 4 components.\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -141,0 +141,1 @@\n+    const tstring appDirPath = FileUtils::mkpath() << appImageRoot << _T(\"app\");\n@@ -144,2 +145,1 @@\n-    std::unique_ptr<Jvm> jvm(AppLauncher()\n-        .setImageRoot(appImageRoot)\n+    const AppLauncher appLauncher = AppLauncher().setImageRoot(appImageRoot)\n@@ -147,1 +147,1 @@\n-        .setAppDir(FileUtils::mkpath() << appImageRoot << _T(\"app\"))\n+        .setAppDir(appDirPath)\n@@ -150,2 +150,40 @@\n-                << _T(\"runtime\"))\n-        .createJvmLauncher());\n+            << _T(\"runtime\"));\n+\n+    const bool restart = !appLauncher.libEnvVariableContainsAppDir();\n+\n+    std::unique_ptr<Jvm> jvm(appLauncher.createJvmLauncher());\n+\n+    if (restart) {\n+        jvm = std::unique_ptr<Jvm>();\n+\n+        STARTUPINFOW si;\n+        ZeroMemory(&si, sizeof(si));\n+        si.cb = sizeof(si);\n+\n+        PROCESS_INFORMATION pi;\n+        ZeroMemory(&pi, sizeof(pi));\n+\n+        if (!CreateProcessW(launcherPath.c_str(), GetCommandLineW(),\n+                NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi)) {\n+            JP_THROW(SysError(tstrings::any() << \"CreateProcessW() failed\",\n+                                                            CreateProcessW));\n+        }\n+\n+        WaitForSingleObject(pi.hProcess, INFINITE);\n+\n+        UniqueHandle childProcessHandle(pi.hProcess);\n+        UniqueHandle childThreadHandle(pi.hThread);\n+\n+        DWORD exitCode;\n+        if (!GetExitCodeProcess(pi.hProcess, &exitCode)) {\n+            JP_THROW(SysError(tstrings::any() << \"GetExitCodeProcess() failed\",\n+                                                        GetExitCodeProcess));\n+        }\n+\n+        if (exitCode != 0) {\n+            JP_THROW(tstrings::any() << \"Child process exited with code \"\n+                                                                << exitCode);\n+        }\n+\n+        return;\n+    }\n","filename":"src\/jdk.jpackage\/windows\/native\/applauncher\/WinLauncher.cpp","additions":43,"deletions":5,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,4 +125,0 @@\n-\n-    if (0 != _tputenv_s(name.c_str(), value.c_str())) {\n-        JP_THROW(tstrings::any() << \"_tputenv_s(\" << name << \", \" << value << \") failed: \" << lastCRTError());\n-    }\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        return (int) (asBits() ^ (asBits() >>> 32));\n+        return Long.hashCode(asBits());\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/Selector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-.TH \"JSHELL\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JSHELL\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jshell\/share\/man\/jshell.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JSTATD\" \"1\" \"2021\" \"JDK 17\\-ea\" \"JDK Commands\"\n+.TH \"JSTATD\" \"1\" \"2021\" \"JDK 18\\-ea\" \"JDK Commands\"\n","filename":"src\/jdk.jstatd\/share\/man\/jstatd.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,5 @@\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.DoubleSupplier;\n+import java.util.function.LongSupplier;\n+import java.util.function.ToDoubleFunction;\n+\n@@ -31,2 +36,0 @@\n-\n-import java.util.concurrent.TimeUnit;\n@@ -45,2 +48,131 @@\n-    private long usageTicks = 0; \/\/ used for cpu load calculation\n-    private long totalTicks = 0; \/\/ used for cpu load calculation\n+    private ContainerCpuTicks systemLoadTicks = new SystemCpuTicks();\n+    private ContainerCpuTicks processLoadTicks = new ProcessCpuTicks();\n+\n+    private abstract class ContainerCpuTicks {\n+        private long usageTicks = 0;\n+        private long totalTicks = 0;\n+\n+        private double getUsageDividesTotal(long usageTicks, long totalTicks) {\n+            \/\/ If cpu quota or cpu shares are in effect. Calculate the cpu load\n+            \/\/ based on the following formula (similar to how\n+            \/\/ getCpuLoad0() is being calculated):\n+            \/\/\n+            \/\/   | usageTicks - usageTicks' |\n+            \/\/  ------------------------------\n+            \/\/   | totalTicks - totalTicks' |\n+            \/\/\n+            \/\/ where usageTicks' and totalTicks' are historical values\n+            \/\/ retrieved via an earlier call of this method.\n+            if (usageTicks < 0 || totalTicks <= 0) {\n+                return -1;\n+            }\n+            long distance = usageTicks - this.usageTicks;\n+            this.usageTicks = usageTicks;\n+            long totalDistance = totalTicks - this.totalTicks;\n+            this.totalTicks = totalTicks;\n+            double systemLoad = 0.0;\n+            if (distance > 0 && totalDistance > 0) {\n+                systemLoad = ((double)distance) \/ totalDistance;\n+            }\n+            \/\/ Ensure the return value is in the range 0.0 -> 1.0\n+            systemLoad = Math.max(0.0, systemLoad);\n+            systemLoad = Math.min(1.0, systemLoad);\n+            return systemLoad;\n+        }\n+\n+        public double getContainerCpuLoad() {\n+            assert(containerMetrics != null);\n+            long quota = containerMetrics.getCpuQuota();\n+            long share = containerMetrics.getCpuShares();\n+            if (quota > 0) {\n+                long numPeriods = containerMetrics.getCpuNumPeriods();\n+                long quotaNanos = TimeUnit.MICROSECONDS.toNanos(quota * numPeriods);\n+                return getUsageDividesTotal(cpuUsageSupplier().getAsLong(), quotaNanos);\n+            } else if (share > 0) {\n+                long hostTicks = getHostTotalCpuTicks0();\n+                int totalCPUs = getHostOnlineCpuCount0();\n+                int containerCPUs = getAvailableProcessors();\n+                \/\/ scale the total host load to the actual container cpus\n+                hostTicks = hostTicks * containerCPUs \/ totalCPUs;\n+                return getUsageDividesTotal(cpuUsageSupplier().getAsLong(), hostTicks);\n+            } else {\n+                \/\/ If CPU quotas and shares are not active then find the average load for\n+                \/\/ all online CPUs that are allowed to run this container.\n+\n+                \/\/ If the cpuset is the same as the host's one there is no need to iterate over each CPU\n+                if (isCpuSetSameAsHostCpuSet()) {\n+                    return defaultCpuLoadSupplier().getAsDouble();\n+                } else {\n+                    int[] cpuSet = containerMetrics.getEffectiveCpuSetCpus();\n+                    \/\/ in case the effectiveCPUSetCpus are not available, attempt to use just cpusets.cpus\n+                    if (cpuSet == null || cpuSet.length <= 0) {\n+                        cpuSet = containerMetrics.getCpuSetCpus();\n+                    }\n+                    if (cpuSet == null) {\n+                        \/\/ cgroups is mounted, but CPU resource is not limited.\n+                        \/\/ We can assume the VM is run on the host CPUs.\n+                        return defaultCpuLoadSupplier().getAsDouble();\n+                    } else if (cpuSet.length > 0) {\n+                        return cpuSetCalc().applyAsDouble(cpuSet);\n+                    }\n+                    return -1;\n+                }\n+            }\n+        }\n+\n+        protected abstract DoubleSupplier defaultCpuLoadSupplier();\n+        protected abstract ToDoubleFunction<int[]> cpuSetCalc();\n+        protected abstract LongSupplier cpuUsageSupplier();\n+    }\n+\n+    private class ProcessCpuTicks extends ContainerCpuTicks {\n+\n+        @Override\n+        protected DoubleSupplier defaultCpuLoadSupplier() {\n+            return () -> getProcessCpuLoad0();\n+        }\n+\n+        @Override\n+        protected ToDoubleFunction<int[]> cpuSetCalc() {\n+            return (int[] cpuSet) -> {\n+                int totalCPUs = getHostOnlineCpuCount0();\n+                int containerCPUs = getAvailableProcessors();\n+                return Math.min(1.0, getProcessCpuLoad0() * totalCPUs \/ containerCPUs);\n+            };\n+        }\n+\n+        @Override\n+        protected LongSupplier cpuUsageSupplier() {\n+            return () ->  getProcessCpuTime();\n+        }\n+\n+    }\n+\n+    private class SystemCpuTicks extends ContainerCpuTicks {\n+\n+        @Override\n+        protected DoubleSupplier defaultCpuLoadSupplier() {\n+            return () -> getCpuLoad0();\n+        }\n+\n+        @Override\n+        protected ToDoubleFunction<int[]> cpuSetCalc() {\n+            return (int[] cpuSet) -> {\n+                double systemLoad = 0.0;\n+                for (int cpu : cpuSet) {\n+                    double cpuLoad = getSingleCpuLoad0(cpu);\n+                    if (cpuLoad < 0) {\n+                        return -1;\n+                    }\n+                    systemLoad += cpuLoad;\n+                }\n+                return systemLoad \/ cpuSet.length;\n+            };\n+        }\n+\n+        @Override\n+        protected LongSupplier cpuUsageSupplier() {\n+            return () -> containerMetrics.getCpuUsage();\n+        }\n+\n+    }\n@@ -137,32 +269,0 @@\n-    private double getUsageDividesTotal(long usageTicks, long totalTicks) {\n-        \/\/ If cpu quota or cpu shares are in effect calculate the cpu load\n-        \/\/ based on the following formula (similar to how\n-        \/\/ getCpuLoad0() is being calculated):\n-        \/\/\n-        \/\/   | usageTicks - usageTicks' |\n-        \/\/  ------------------------------\n-        \/\/   | totalTicks - totalTicks' |\n-        \/\/\n-        \/\/ where usageTicks' and totalTicks' are historical values\n-        \/\/ retrieved via an earlier call of this method.\n-        \/\/\n-        \/\/ Total ticks should be scaled to the container effective number\n-        \/\/ of cpus, if cpu shares are in effect.\n-        if (usageTicks < 0 || totalTicks <= 0) {\n-            return -1;\n-        }\n-        long distance = usageTicks - this.usageTicks;\n-        this.usageTicks = usageTicks;\n-        long totalDistance = totalTicks - this.totalTicks;\n-        this.totalTicks = totalTicks;\n-\n-        double systemLoad = 0.0;\n-        if (distance > 0 && totalDistance > 0) {\n-            systemLoad = ((double)distance) \/ totalDistance;\n-        }\n-        \/\/ Ensure the return value is in the range 0.0 -> 1.0\n-        systemLoad = Math.max(0.0, systemLoad);\n-        systemLoad = Math.min(1.0, systemLoad);\n-        return systemLoad;\n-    }\n-\n@@ -171,45 +271,1 @@\n-            long quota = containerMetrics.getCpuQuota();\n-            long share = containerMetrics.getCpuShares();\n-            long usageNanos = containerMetrics.getCpuUsage();\n-            if (quota > 0) {\n-                long numPeriods = containerMetrics.getCpuNumPeriods();\n-                long quotaNanos = TimeUnit.MICROSECONDS.toNanos(quota * numPeriods);\n-                return getUsageDividesTotal(usageNanos, quotaNanos);\n-            } else if (share > 0) {\n-                long hostTicks = getHostTotalCpuTicks0();\n-                int totalCPUs = getHostOnlineCpuCount0();\n-                int containerCPUs = getAvailableProcessors();\n-                \/\/ scale the total host load to the actual container cpus\n-                hostTicks = hostTicks * containerCPUs \/ totalCPUs;\n-                return getUsageDividesTotal(usageNanos, hostTicks);\n-            } else {\n-                \/\/ If CPU quotas and shares are not active then find the average system load for\n-                \/\/ all online CPUs that are allowed to run this container.\n-\n-                \/\/ If the cpuset is the same as the host's one there is no need to iterate over each CPU\n-                if (isCpuSetSameAsHostCpuSet()) {\n-                    return getCpuLoad0();\n-                } else {\n-                    int[] cpuSet = containerMetrics.getEffectiveCpuSetCpus();\n-                    \/\/ in case the effectiveCPUSetCpus are not available, attempt to use just cpusets.cpus\n-                    if (cpuSet == null || cpuSet.length <= 0) {\n-                        cpuSet = containerMetrics.getCpuSetCpus();\n-                    }\n-                    if (cpuSet == null) {\n-                        \/\/ cgroups is mounted, but CPU resource is not limited.\n-                        \/\/ We can assume the VM is run on the host CPUs.\n-                        return getCpuLoad0();\n-                    } else if (cpuSet.length > 0) {\n-                        double systemLoad = 0.0;\n-                        for (int cpu : cpuSet) {\n-                            double cpuLoad = getSingleCpuLoad0(cpu);\n-                            if (cpuLoad < 0) {\n-                                return -1;\n-                            }\n-                            systemLoad += cpuLoad;\n-                        }\n-                        return systemLoad \/ cpuSet.length;\n-                    }\n-                    return -1;\n-                }\n-            }\n+            return systemLoadTicks.getContainerCpuLoad();\n@@ -221,0 +277,3 @@\n+        if (containerMetrics != null) {\n+            return processLoadTicks.getContainerCpuLoad();\n+        }\n","filename":"src\/jdk.management\/unix\/classes\/com\/sun\/management\/internal\/OperatingSystemImpl.java","additions":140,"deletions":81,"binary":false,"changes":221,"status":"modified"},{"patch":"@@ -122,0 +122,5 @@\n+\n+    \/\/ a threshold, in bytes, to decide whether to create a temp file\n+    \/\/ for outputstream of a zip entry\n+    private final int tempFileCreationThreshold = 10 * 1024 * 1024; \/\/ 10 MB\n+\n@@ -1573,0 +1578,4 @@\n+            if (hasDotOrDotDot(inode.name)) {\n+                throw new ZipException(\"ZIP file can't be opened as a file system \" +\n+                        \"because an entry has a '.' or '..' element in its name\");\n+            }\n@@ -1589,0 +1598,38 @@\n+    \/**\n+     * Check Inode.name to see if it includes a \".\" or \"..\" in the name array\n+     * @param path  the path as stored in Inode.name to verify\n+     * @return true if the path contains a \".\" or \"..\" entry; false otherwise\n+     *\/\n+    private boolean hasDotOrDotDot(byte[] path) {\n+        \/\/ Inode.name always includes \"\/\" in path[0]\n+        assert path[0] == '\/';\n+        if (path.length == 1) {\n+            return false;\n+        }\n+        int index = 1;\n+        while (index < path.length) {\n+            int starting = index;\n+            while (index < path.length && path[index] != '\/') {\n+                index++;\n+            }\n+            \/\/ Check the path snippet for a \".\" or \"..\"\n+            if (isDotOrDotDotPath(path, starting, index)) {\n+                return true;\n+            }\n+            index++;\n+        }\n+        return false;\n+    }\n+\n+    \/**\n+     * Check the path to see if it includes a \".\" or \"..\"\n+     * @param path  the path to check\n+     * @return true if the path contains a \".\" or \"..\" entry; false otherwise\n+     *\/\n+    private boolean isDotOrDotDotPath(byte[] path, int start, int index) {\n+        int pathLen = index - start;\n+        if ((pathLen == 1 && path[start] == '.'))\n+            return true;\n+        return (pathLen == 2 && path[start] == '.') && path[start + 1] == '.';\n+    }\n+\n@@ -1947,1 +1994,1 @@\n-        if (useTempFile) {\n+        if (useTempFile || e.size >= tempFileCreationThreshold) {\n@@ -1951,1 +1998,1 @@\n-            os = new ByteArrayOutputStream((e.size > 0)? (int)e.size : 8192);\n+            os = new FileRolloverOutputStream(e);\n@@ -1991,2 +2038,3 @@\n-            if (out instanceof ByteArrayOutputStream)\n-                e.bytes = ((ByteArrayOutputStream)out).toByteArray();\n+            if (out instanceof FileRolloverOutputStream fros && fros.tmpFileOS == null) {\n+                e.bytes = fros.toByteArray();\n+            }\n@@ -2027,2 +2075,3 @@\n-            if (out instanceof ByteArrayOutputStream)\n-                e.bytes = ((ByteArrayOutputStream)out).toByteArray();\n+            if (out instanceof FileRolloverOutputStream fros && fros.tmpFileOS == null) {\n+                e.bytes = fros.toByteArray();\n+            }\n@@ -2110,0 +2159,105 @@\n+    \/\/ A wrapper around the ByteArrayOutputStream. This FileRolloverOutputStream\n+    \/\/ uses a threshold size to decide if the contents being written need to be\n+    \/\/ rolled over into a temporary file. Until the threshold is reached, writes\n+    \/\/ on this outputstream just write it to the internal in-memory byte array\n+    \/\/ held by the ByteArrayOutputStream. Once the threshold is reached, the\n+    \/\/ write operation on this outputstream first (and only once) creates a temporary file\n+    \/\/ and transfers the data that has so far been written in the internal\n+    \/\/ byte array, to that newly created file. The temp file is then opened\n+    \/\/ in append mode and any subsequent writes, including the one which triggered\n+    \/\/ the temporary file creation, will be written to the file.\n+    \/\/ Implementation note: the \"write\" and the \"close\" methods of this implementation\n+    \/\/ aren't \"synchronized\" because this FileRolloverOutputStream gets called\n+    \/\/ only from either DeflatingEntryOutputStream or EntryOutputStream, both of which\n+    \/\/ already have the necessary \"synchronized\" before calling these methods.\n+    private class FileRolloverOutputStream extends OutputStream {\n+        private ByteArrayOutputStream baos = new ByteArrayOutputStream(8192);\n+        private final Entry entry;\n+        private OutputStream tmpFileOS;\n+        private long totalWritten = 0;\n+\n+        private FileRolloverOutputStream(final Entry e) {\n+            this.entry = e;\n+        }\n+\n+        @Override\n+        public void write(final int b) throws IOException {\n+            if (tmpFileOS != null) {\n+                \/\/ already rolled over, write to the file that has been created previously\n+                writeToFile(b);\n+                return;\n+            }\n+            if (totalWritten + 1 < tempFileCreationThreshold) {\n+                \/\/ write to our in-memory byte array\n+                baos.write(b);\n+                totalWritten++;\n+                return;\n+            }\n+            \/\/ rollover into a file\n+            transferToFile();\n+            writeToFile(b);\n+        }\n+\n+        @Override\n+        public void write(final byte[] b) throws IOException {\n+            write(b, 0, b.length);\n+        }\n+\n+        @Override\n+        public void write(final byte[] b, final int off, final int len) throws IOException {\n+            if (tmpFileOS != null) {\n+                \/\/ already rolled over, write to the file that has been created previously\n+                writeToFile(b, off, len);\n+                return;\n+            }\n+            if (totalWritten + len < tempFileCreationThreshold) {\n+                \/\/ write to our in-memory byte array\n+                baos.write(b, off, len);\n+                totalWritten += len;\n+                return;\n+            }\n+            \/\/ rollover into a file\n+            transferToFile();\n+            writeToFile(b, off, len);\n+        }\n+\n+        @Override\n+        public void flush() throws IOException {\n+            if (tmpFileOS != null) {\n+                tmpFileOS.flush();\n+            }\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            baos = null;\n+            if (tmpFileOS != null) {\n+                tmpFileOS.close();\n+            }\n+        }\n+\n+        private void writeToFile(int b) throws IOException {\n+            tmpFileOS.write(b);\n+            totalWritten++;\n+        }\n+\n+        private void writeToFile(byte[] b, int off, int len) throws IOException {\n+            tmpFileOS.write(b, off, len);\n+            totalWritten += len;\n+        }\n+\n+        private void transferToFile() throws IOException {\n+            \/\/ create a tempfile\n+            entry.file = getTempPathForEntry(null);\n+            tmpFileOS = new BufferedOutputStream(Files.newOutputStream(entry.file));\n+            \/\/ transfer the already written data from the byte array buffer into this tempfile\n+            baos.writeTo(tmpFileOS);\n+            \/\/ release the underlying byte array\n+            baos = null;\n+        }\n+\n+        private byte[] toByteArray() {\n+            return baos == null ? null : baos.toByteArray();\n+        }\n+    }\n+\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":160,"deletions":6,"binary":false,"changes":166,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,3 @@\n+ * The Zip file system provider does not support opening an existing Zip file\n+ * that contains entries with \".\" or \"..\" in its name elements.\n+ *\n","filename":"src\/jdk.zipfs\/share\/classes\/module-info.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n@@ -48,1 +51,4 @@\n-                for (TopComponent t : manager.getOpenedTopComponents(m)) {\n+                List<TopComponent> l = new ArrayList<>();\n+                l.add(m.getSelectedTopComponent());\n+                l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n+                for (TopComponent t : l) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,2 +145,3 @@\n-    while (queue.peek()->time() < now) {\n-      TestTask* task = (TestTask*) queue.pop();\n+    while (queue.front()->time() < now) {\n+      TestTask* task = (TestTask*) queue.front();\n+      queue.remove_front();\n@@ -156,1 +157,2 @@\n-    G1ServiceTask* task = queue.pop();\n+    G1ServiceTask* task = queue.front();\n+    queue.remove_front();\n@@ -162,1 +164,1 @@\n-TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, pop_empty,\n+TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, remove_from_empty,\n@@ -165,1 +167,1 @@\n-  queue.pop();\n+  queue.remove_front();\n@@ -168,1 +170,1 @@\n-TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, peek_empty,\n+TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, get_from_empty,\n@@ -171,1 +173,1 @@\n-  queue.peek();\n+  queue.front();\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1ServiceThread.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -64,2 +64,1 @@\n-\n-static int init_jvm(int argc, char **argv, bool disable_error_handling) {\n+static int init_jvm(int argc, char **argv, bool disable_error_handling, JavaVM** jvm_ptr) {\n@@ -93,1 +92,0 @@\n-  JavaVM* jvm;\n@@ -96,1 +94,1 @@\n-  int ret = JNI_CreateJavaVM(&jvm, (void**)&env, &args);\n+  int ret = JNI_CreateJavaVM(jvm_ptr, (void**)&env, &args);\n@@ -114,4 +112,1 @@\n-  bool _is_initialized;\n-\n-  void initialize_jvm() {\n-  }\n+  JavaVM* _jvm;\n@@ -121,1 +116,1 @@\n-    _argc(argc), _argv(argv), _is_initialized(false) {\n+    _argc(argc), _argv(argv), _jvm(nullptr) {\n@@ -126,1 +121,1 @@\n-    if (!_is_initialized && is_same_vm_test(name)) {\n+    if (_jvm == nullptr && is_same_vm_test(name)) {\n@@ -128,1 +123,1 @@\n-      int ret_val = init_jvm(_argc, _argv, false);\n+      int ret_val = init_jvm(_argc, _argv, false, &_jvm);\n@@ -130,1 +125,1 @@\n-        ADD_FAILURE() << \"Could not initialize the JVM\";\n+        ADD_FAILURE() << \"Could not initialize the JVM: \" << ret_val;\n@@ -133,1 +128,9 @@\n-      _is_initialized = true;\n+    }\n+  }\n+\n+  void destroy_jvm() {\n+    if (_jvm != NULL) {\n+      int ret = _jvm->DestroyJavaVM();\n+      if (ret != 0) {\n+        fprintf(stderr, \"Warning: DestroyJavaVM error %d\\n\", ret);\n+      }\n@@ -211,0 +214,12 @@\n+\/\/ This is generally run once for a set of tests. But if that set includes a vm_assert or\n+\/\/ other_vm test, then a new process is forked, and runUnitTestsInner is called, passing\n+\/\/ just that test as the one to be executed.\n+\/\/\n+\/\/ When we execute a vm_assert or other_vm test we create and initialize the JVM below.\n+\/\/\n+\/\/ A vm_assert test crashes the VM so no cleanup is needed, but for other_vm we call\n+\/\/ DestroyJavaVM via the TEST_OTHER_VM macro prior to the call to exit().\n+\/\/\n+\/\/ For same_vm tests we use an event listener to create the JVM when the first same_vm\n+\/\/ test is executed. Once all tests are completed we can then call DestroyJavaVM on that\n+\/\/ JVM directly.\n@@ -256,0 +271,3 @@\n+\n+  JVMInitializerListener* jvm_listener = NULL;\n+\n@@ -257,0 +275,1 @@\n+    JavaVM* jvm = NULL;\n@@ -259,1 +278,3 @@\n-    if (init_jvm(argc, argv, is_vmassert_test) != 0) {\n+    int ret;\n+    if ((ret = init_jvm(argc, argv, is_vmassert_test, &jvm)) != 0) {\n+      fprintf(stderr, \"ERROR: JNI_CreateJavaVM failed: %d\\n\", ret);\n@@ -264,1 +285,2 @@\n-    listeners.Append(new JVMInitializerListener(argc, argv));\n+    jvm_listener = new JVMInitializerListener(argc, argv);\n+    listeners.Append(jvm_listener);\n@@ -268,0 +290,5 @@\n+\n+  \/\/ vm_assert and other_vm tests never reach this point as they either abort, or call\n+  \/\/ exit() - see TEST_OTHER_VM macro. We will reach here when all same_vm tests have\n+  \/\/ completed for this run, so we can terminate the VM used for that case.\n+\n@@ -272,0 +299,4 @@\n+\n+  if (jvm_listener != NULL) {\n+    jvm_listener->destroy_jvm();\n+  }\n","filename":"test\/hotspot\/gtest\/gtestMain.cpp","additions":46,"deletions":15,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -0,0 +1,399 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"memory\/arena.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"utilities\/align.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"unittest.hpp\"\n+#include \"testutils.hpp\"\n+\n+#define ASSERT_CONTAINS(ar, p) ASSERT_TRUE(ar.contains(p))\n+\n+\/\/ Note:\n+\/\/ - Amalloc returns 64bit aligned pointer (also on 32-bit)\n+\/\/ - AmallocWords returns word-aligned pointer\n+#define ASSERT_ALIGN_AMALLOC(p)       ASSERT_ALIGN(p, ARENA_AMALLOC_ALIGNMENT)\n+#define ASSERT_ALIGN_AMALLOCWORDS(p)  ASSERT_ALIGN(p, BytesPerWords)\n+\n+\/\/ Do a couple of checks on the return of a successful Amalloc\n+#define ASSERT_AMALLOC(ar, p) \\\n+  ASSERT_NOT_NULL(p); \\\n+  ASSERT_CONTAINS(ar, p); \\\n+  ASSERT_ALIGN_AMALLOC(p);\n+\n+\/\/ #define LOG(s) tty->print_cr s;\n+#define LOG(s)\n+\n+\/\/ Test behavior for Amalloc(0).\n+\/\/ Amalloc just ignores Amalloc(0) and returns the current hwm without increasing it.\n+\/\/ Therefore, the returned pointer should be not null, aligned, but not (!) contained\n+\/\/ in the arena since hwm points beyond the arena.\n+TEST_VM(Arena, alloc_size_0) {\n+  Arena ar(mtTest);\n+  void* p = ar.Amalloc(0);\n+  ASSERT_NOT_NULL(p);\n+  ASSERT_ALIGN_AMALLOC(p);\n+  if (!UseMallocOnly) {\n+    \/\/ contains works differently for malloced mode (and there its broken anyway)\n+    ASSERT_FALSE(ar.contains(p));\n+  }\n+  \/\/ Allocate again. The new allocations should have the same position as the 0-sized\n+  \/\/ first one.\n+  if (!UseMallocOnly) {\n+    void* p2 = ar.Amalloc(1);\n+    ASSERT_AMALLOC(ar, p2);\n+    ASSERT_EQ(p2, p);\n+  }\n+}\n+\n+\/\/ Test behavior for Arealloc(p, 0)\n+TEST_VM(Arena, realloc_size_0) {\n+  \/\/ Arealloc(p, 0) behaves like Afree(p). It should release the memory\n+  \/\/ and, if top position, roll back the hwm.\n+  Arena ar(mtTest);\n+  void* p1 = ar.Amalloc(0x10);\n+  ASSERT_AMALLOC(ar, p1);\n+  void* p2 = ar.Arealloc(p1, 0x10, 0);\n+  ASSERT_NULL(p2);\n+\n+  \/\/ a subsequent allocation should get the same pointer\n+  if (!UseMallocOnly) {\n+    void* p3 = ar.Amalloc(0x20);\n+    ASSERT_EQ(p3, p1);\n+  }\n+}\n+\n+\/\/ Realloc equal sizes is a noop\n+TEST_VM(Arena, realloc_same_size) {\n+  Arena ar(mtTest);\n+  void* p1 = ar.Amalloc(0x200);\n+  ASSERT_AMALLOC(ar, p1);\n+  GtestUtils::mark_range(p1, 0x200);\n+\n+  void* p2 = ar.Arealloc(p1, 0x200, 0x200);\n+\n+  if (!UseMallocOnly) {\n+    ASSERT_EQ(p2, p1);\n+  }\n+  ASSERT_RANGE_IS_MARKED(p2, 0x200);\n+}\n+\n+\/\/ Test behavior for Afree(NULL) and Arealloc(NULL, x)\n+TEST_VM(Arena, free_null) {\n+  Arena ar(mtTest);\n+  ar.Afree(NULL, 10); \/\/ should just be ignored\n+}\n+\n+TEST_VM(Arena, realloc_null) {\n+  Arena ar(mtTest);\n+  void* p = ar.Arealloc(NULL, 0, 20); \/\/ equivalent to Amalloc(20)\n+  ASSERT_AMALLOC(ar, p);\n+}\n+\n+\/\/ Check Arena.Afree in a non-top position.\n+\/\/ The free'd allocation should be zapped (debug only),\n+\/\/ surrounding blocks should be unaffected.\n+TEST_VM(Arena, free_nontop) {\n+  Arena ar(mtTest);\n+\n+  void* p_before = ar.Amalloc(0x10);\n+  ASSERT_AMALLOC(ar, p_before);\n+  GtestUtils::mark_range(p_before, 0x10);\n+\n+  void* p = ar.Amalloc(0x10);\n+  ASSERT_AMALLOC(ar, p);\n+  GtestUtils::mark_range_with(p, 0x10, 'Z');\n+\n+  void* p_after = ar.Amalloc(0x10);\n+  ASSERT_AMALLOC(ar, p_after);\n+  GtestUtils::mark_range(p_after, 0x10);\n+\n+  ASSERT_RANGE_IS_MARKED(p_before, 0x10);\n+  ASSERT_RANGE_IS_MARKED_WITH(p, 0x10, 'Z');\n+  ASSERT_RANGE_IS_MARKED(p_after, 0x10);\n+\n+  ar.Afree(p, 0x10);\n+\n+  ASSERT_RANGE_IS_MARKED(p_before, 0x10);\n+  DEBUG_ONLY(ASSERT_RANGE_IS_MARKED_WITH(p, 0x10, badResourceValue);)\n+  ASSERT_RANGE_IS_MARKED(p_after, 0x10);\n+}\n+\n+\/\/ Check Arena.Afree in a top position.\n+\/\/ The free'd allocation (non-top) should be zapped (debug only),\n+\/\/ the hwm should have been rolled back.\n+TEST_VM(Arena, free_top) {\n+  Arena ar(mtTest);\n+\n+  void* p = ar.Amalloc(0x10);\n+  ASSERT_AMALLOC(ar, p);\n+  GtestUtils::mark_range_with(p, 0x10, 'Z');\n+\n+  ar.Afree(p, 0x10);\n+  DEBUG_ONLY(ASSERT_RANGE_IS_MARKED_WITH(p, 0x10, badResourceValue);)\n+\n+  \/\/ a subsequent allocation should get the same pointer\n+  if (!UseMallocOnly) {\n+    void* p2 = ar.Amalloc(0x20);\n+    ASSERT_EQ(p2, p);\n+  }\n+}\n+\n+\/\/ In-place shrinking.\n+TEST_VM(Arena, realloc_top_shrink) {\n+  if (!UseMallocOnly) {\n+    Arena ar(mtTest);\n+\n+    void* p1 = ar.Amalloc(0x200);\n+    ASSERT_AMALLOC(ar, p1);\n+    GtestUtils::mark_range(p1, 0x200);\n+\n+    void* p2 = ar.Arealloc(p1, 0x200, 0x100);\n+    ASSERT_EQ(p1, p2);\n+    ASSERT_RANGE_IS_MARKED(p2, 0x100); \/\/ realloc should preserve old content\n+\n+    \/\/ A subsequent allocation should be placed right after the end of the first, shrunk, allocation\n+    void* p3 = ar.Amalloc(1);\n+    ASSERT_EQ(p3, ((char*)p1) + 0x100);\n+  }\n+}\n+\n+\/\/ not-in-place shrinking.\n+TEST_VM(Arena, realloc_nontop_shrink) {\n+  Arena ar(mtTest);\n+\n+  void* p1 = ar.Amalloc(200);\n+  ASSERT_AMALLOC(ar, p1);\n+  GtestUtils::mark_range(p1, 200);\n+\n+  void* p_other = ar.Amalloc(20); \/\/ new top, p1 not top anymore\n+\n+  void* p2 = ar.Arealloc(p1, 200, 100);\n+  if (!UseMallocOnly) {\n+    ASSERT_EQ(p1, p2); \/\/ should still shrink in place\n+  }\n+  ASSERT_RANGE_IS_MARKED(p2, 100); \/\/ realloc should preserve old content\n+}\n+\n+\/\/ in-place growing.\n+TEST_VM(Arena, realloc_top_grow) {\n+  Arena ar(mtTest); \/\/ initial chunk size large enough to ensure below allocation grows in-place.\n+\n+  void* p1 = ar.Amalloc(0x10);\n+  ASSERT_AMALLOC(ar, p1);\n+  GtestUtils::mark_range(p1, 0x10);\n+\n+  void* p2 = ar.Arealloc(p1, 0x10, 0x20);\n+  if (!UseMallocOnly) {\n+    ASSERT_EQ(p1, p2);\n+  }\n+  ASSERT_RANGE_IS_MARKED(p2, 0x10); \/\/ realloc should preserve old content\n+}\n+\n+\/\/ not-in-place growing.\n+TEST_VM(Arena, realloc_nontop_grow) {\n+  Arena ar(mtTest);\n+\n+  void* p1 = ar.Amalloc(10);\n+  ASSERT_AMALLOC(ar, p1);\n+  GtestUtils::mark_range(p1, 10);\n+\n+  void* p_other = ar.Amalloc(20); \/\/ new top, p1 not top anymore\n+\n+  void* p2 = ar.Arealloc(p1, 10, 20);\n+  ASSERT_AMALLOC(ar, p2);\n+  ASSERT_RANGE_IS_MARKED(p2, 10); \/\/ realloc should preserve old content\n+}\n+\n+\/\/ -------- random alloc test -------------\n+\n+static uint8_t canary(int i) {\n+  return (uint8_t)('A' + i % 26);\n+}\n+\n+\/\/ Randomly allocate and reallocate with random sizes and differing alignments;\n+\/\/  check alignment; check for overwriters.\n+\/\/ We do this a number of times, to give chunk pool handling a good workout too.\n+TEST_VM(Arena, random_allocs) {\n+\n+  const int num_allocs = 250 * 1000;\n+  const int avg_alloc_size = 64;\n+\n+  void** ptrs = NEW_C_HEAP_ARRAY(void*, num_allocs, mtTest);\n+  size_t* sizes = NEW_C_HEAP_ARRAY(size_t, num_allocs, mtTest);\n+  size_t* alignments = NEW_C_HEAP_ARRAY(size_t, num_allocs, mtTest);\n+\n+  Arena ar(mtTest);\n+\n+  \/\/ Allocate\n+  for (int i = 0; i < num_allocs; i ++) {\n+    size_t size = os::random() % (avg_alloc_size * 2); \/\/ Note: size==0 is okay; we want to test that too\n+    size_t alignment = 0;\n+    void* p = NULL;\n+    if (os::random() % 2) { \/\/ randomly switch between Amalloc and AmallocWords\n+      p = ar.Amalloc(size);\n+      alignment = BytesPerLong;\n+    } else {\n+      \/\/ Inconsistency: AmallocWords wants its input size word aligned, whereas Amalloc takes\n+      \/\/  care of alignment itself. We may want to clean this up, but for now just go with it.\n+      size = align_up(size, BytesPerWord);\n+      p = ar.AmallocWords(size);\n+      alignment = BytesPerWord;\n+    }\n+    LOG((\"[%d]: \" PTR_FORMAT \", size \" SIZE_FORMAT \", aligned \" SIZE_FORMAT,\n+         i, p2i(p), size, alignment));\n+    ASSERT_NOT_NULL(p);\n+    ASSERT_ALIGN(p, alignment);\n+    if (size > 0) {\n+      ASSERT_CONTAINS(ar, p);\n+    }\n+    GtestUtils::mark_range_with(p, size, canary(i));\n+    ptrs[i] = p; sizes[i] = size; alignments[i] = alignment;\n+  }\n+\n+  \/\/ Check pattern in allocations for overwriters.\n+  for (int i = 0; i < num_allocs; i ++) {\n+    ASSERT_RANGE_IS_MARKED_WITH(ptrs[i], sizes[i], canary(i));\n+  }\n+\n+  \/\/ realloc all of them\n+  for (int i = 0; i < num_allocs; i ++) {\n+    size_t new_size = os::random() % (avg_alloc_size * 2);  \/\/ Note: 0 is possible and should work\n+    void* p2 = ar.Arealloc(ptrs[i], sizes[i], new_size);\n+    if (new_size > 0) {\n+      ASSERT_NOT_NULL(p2);\n+      ASSERT_CONTAINS(ar, p2);\n+      ASSERT_ALIGN(p2, alignments[i]); \/\/ Realloc guarantees at least the original alignment\n+      ASSERT_RANGE_IS_MARKED_WITH(p2, MIN2(sizes[i], new_size), canary(i)); \/\/ old content should have been preserved\n+\n+      GtestUtils::mark_range_with(p2, new_size, canary(i)); \/\/ mark new range with canary\n+    } else {\n+      ASSERT_NULL(p2);\n+    }\n+    ptrs[i] = p2; sizes[i] = new_size;\n+    LOG((\"[%d]: realloc \" PTR_FORMAT \", size \" SIZE_FORMAT \", aligned \" SIZE_FORMAT,\n+         i, p2i(p2), new_size, alignments[i]));\n+  }\n+\n+  \/\/ Check test pattern again\n+  \/\/  Note that we don't check the gap pattern anymore since if allocations had been shrunk in place\n+  \/\/  this now gets difficult.\n+  for (int i = 0; i < num_allocs; i ++) {\n+    ASSERT_RANGE_IS_MARKED_WITH(ptrs[i], sizes[i], canary(i));\n+  }\n+\n+  \/\/ Randomly free a bunch of allocations.\n+  for (int i = 0; i < num_allocs; i ++) {\n+    if (os::random() % 10 == 0) {\n+      ar.Afree(ptrs[i], sizes[i]);\n+      \/\/ In debug builds the freed space should be filled the space with badResourceValue\n+      DEBUG_ONLY(ASSERT_RANGE_IS_MARKED_WITH(ptrs[i], sizes[i], badResourceValue));\n+      ptrs[i] = NULL;\n+    }\n+  }\n+\n+  \/\/ Check test pattern again\n+  for (int i = 0; i < num_allocs; i ++) {\n+    ASSERT_RANGE_IS_MARKED_WITH(ptrs[i], sizes[i], canary(i));\n+  }\n+\n+  \/\/ Free temp data\n+  FREE_C_HEAP_ARRAY(char*, ptrs);\n+  FREE_C_HEAP_ARRAY(size_t, sizes);\n+  FREE_C_HEAP_ARRAY(size_t, alignments);\n+}\n+\n+#ifndef LP64\n+\/\/ These tests below are about alignment issues when mixing Amalloc and AmallocWords.\n+\/\/ Since on 64-bit these APIs offer the same alignment, they only matter for 32-bit.\n+\n+TEST_VM(Arena, mixed_alignment_allocation) {\n+  \/\/ Test that mixed alignment allocations work and provide allocations with the correct\n+  \/\/ alignment\n+  Arena ar(mtTest);\n+  void* p1 = ar.AmallocWords(BytesPerWord);\n+  void* p2 = ar.Amalloc(BytesPerLong);\n+  ASSERT_TRUE(is_aligned(p1, BytesPerWord));\n+  ASSERT_TRUE(is_aligned(p2, ARENA_AMALLOC_ALIGNMENT));\n+}\n+\n+TEST_VM(Arena, Arena_with_crooked_initial_size) {\n+  \/\/ Test that an arena with a crooked, not 64-bit aligned initial size\n+  \/\/ works\n+  Arena ar(mtTest, 4097);\n+  void* p1 = ar.AmallocWords(BytesPerWord);\n+  void* p2 = ar.Amalloc(BytesPerLong);\n+  ASSERT_TRUE(is_aligned(p1, BytesPerWord));\n+  ASSERT_TRUE(is_aligned(p2, ARENA_AMALLOC_ALIGNMENT));\n+}\n+\n+TEST_VM(Arena, Arena_grows_large_unaligned) {\n+  \/\/ Test that if the arena grows with a large unaligned value, nothing bad happens.\n+  \/\/ We trigger allocation of a new, large, unaligned chunk with a non-standard size\n+  \/\/ (only possible on 32-bit when allocating with word alignment).\n+  \/\/ Then we alloc some more. If Arena::grow() does not correctly align, on 32-bit\n+  \/\/ something should assert at some point.\n+  Arena ar(mtTest, 100); \/\/ first chunk is small\n+  void* p = ar.AmallocWords(Chunk::size + BytesPerWord); \/\/ if Arena::grow() misaligns, this asserts\n+  \/\/ some more allocations for good measure\n+  for (int i = 0; i < 100; i ++) {\n+    ar.Amalloc(1);\n+  }\n+}\n+\n+#endif \/\/  LP64\n+\n+static size_t random_arena_chunk_size() {\n+  \/\/ Return with a 50% rate a standard size, otherwise some random size\n+  if (os::random() % 10 < 5) {\n+    static const size_t standard_sizes[4] = {\n+        Chunk::tiny_size, Chunk::init_size, Chunk::size, Chunk::medium_size\n+    };\n+    return standard_sizes[os::random() % 4];\n+  }\n+  return ARENA_ALIGN(os::random() % 1024);\n+}\n+\n+TEST_VM(Arena, different_chunk_sizes) {\n+  \/\/ Test the creation\/pooling of chunks; since ChunkPool is hidden, the\n+  \/\/  only way to test this is to create\/destroy arenas with different init sizes,\n+  \/\/  which determines the initial chunk size.\n+  \/\/ Note that since the chunk pools are global and get cleaned out periodically,\n+  \/\/  there is no safe way to actually test their occupancy here.\n+  for (int i = 0; i < 1000; i ++) {\n+    \/\/ Unfortunately, Arenas cannot be newed,\n+    \/\/ so we are left with awkwardly placing a few on the stack.\n+    Arena ar0(mtTest, random_arena_chunk_size());\n+    Arena ar1(mtTest, random_arena_chunk_size());\n+    Arena ar2(mtTest, random_arena_chunk_size());\n+    Arena ar3(mtTest, random_arena_chunk_size());\n+    Arena ar4(mtTest, random_arena_chunk_size());\n+    Arena ar5(mtTest, random_arena_chunk_size());\n+    Arena ar6(mtTest, random_arena_chunk_size());\n+    Arena ar7(mtTest, random_arena_chunk_size());\n+  }\n+}\n","filename":"test\/hotspot\/gtest\/memory\/test_arena.cpp","additions":399,"deletions":0,"binary":false,"changes":399,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"memory\/allocation.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"services\/nmtPreInit.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+#include \"unittest.hpp\"\n+\n+\/\/ convenience log. switch on if debugging tests. Don't use tty, plain stdio only.\n+\/\/#define LOG(...) { printf(__VA_ARGS__); printf(\"\\n\"); fflush(stdout); }\n+#define LOG(...)\n+\n+\n+\/\/ This tests the ability of the NMT pre-init system to deal with various combinations\n+\/\/ of pre- and post-init-allocations.\n+\n+\/\/ The tests consist of two phases:\n+\/\/ 1) before NMT initialization (pre-NMT-init) we allocate and reallocate a bunch of\n+\/\/    blocks via os::malloc() and os::realloc(), and free some of them via os::free()\n+\/\/ 2) after NMT initialization, we reallocate some more, then free all of them.\n+\/\/\n+\/\/ The intent is to check that blocks allocated in pre-init phase and potentially realloced\n+\/\/ in pre-init phase are handled correctly if further realloc'ed or free'd post-init.\n+\n+\/\/ We manage to run tests in different phases with this technique:\n+\/\/ - for the pre-init phase, we start the tests in the constructor of a global object; that constructor will\n+\/\/   run as part of the dyn. C++ initialization of the gtestlauncher binary. Since the gtestlauncher links\n+\/\/   *statically* against the libjvm, gtestlauncher and libjvm initialization fold into one and are the same.\n+\/\/ - for the post-init phase, we just start it inside a TEST_VM scope, which needs to create the VM for\n+\/\/   us. So inside that scope VM initialization ran and with it the NMT initialization.\n+\/\/ To be sure, we assert those assumptions.\n+\n+#if INCLUDE_NMT\n+\n+\/\/ Some shorts to save writing out the flags every time\n+static void* os_malloc(size_t s)              { return os::malloc(s, mtTest); }\n+static void* os_realloc(void* old, size_t s)  { return os::realloc(old, s, mtTest); }\n+\n+static void log_state() {\n+  \/\/ Don't use tty! the only safe thing to use at all times is stringStream.\n+  char tmp[256];\n+  stringStream ss(tmp, sizeof(tmp));\n+  NMTPreInit::print_state(&ss);\n+  LOG(\"%s\", tmp);\n+}\n+\n+class TestAllocations {\n+  void* p1, *p2, *p3, *p4;\n+public:\n+  TestAllocations() {\n+    test_pre();\n+  }\n+  void test_pre() {\n+    \/\/ Note that this part will run every time a gtestlauncher execs (so, for every TEST_OTHER_VM).\n+    assert(NMTPreInit::in_preinit_phase(),\n+           \"This should be run in pre-init phase (as part of C++ dyn. initialization)\");\n+    LOG(\"corner cases, pre-init (%d)\", os::current_process_id());\n+    log_state();\n+\n+    p1 = os_malloc(100);                 \/\/ normal allocation\n+    os::free(os_malloc(0));              \/\/ 0-sized allocation, should be free-able\n+    p2 = os_realloc(os_malloc(10), 20);  \/\/ realloc, growing\n+    p3 = os_realloc(os_malloc(20), 10);  \/\/ realloc, shrinking\n+    p4 = os_realloc(NULL, 10);           \/\/ realloc with NULL pointer\n+    os_realloc(os_realloc(os_malloc(20), 0), 30);  \/\/ realloc to size 0 and back up again\n+    os::free(os_malloc(20));             \/\/ malloc, free\n+    os::free(os_realloc(os_malloc(20), 30));  \/\/ malloc, realloc, free\n+    os::free(NULL);                      \/\/ free(null)\n+    DEBUG_ONLY(NMTPreInit::verify();)\n+\n+    log_state();\n+  }\n+  void test_post() {\n+    assert(NMTPreInit::in_preinit_phase() == false,\n+           \"This should be run in post-init phase (from inside a TEST_VM test)\");\n+    LOG(\"corner cases, post-init (%d)\", os::current_process_id());\n+    log_state();\n+\n+    p1 = os_realloc(p1, 140);  \/\/ realloc from pre-init-phase, growing\n+    p2 = os_realloc(p2, 150);  \/\/ realloc from pre-init-phase, growing\n+    p3 = os_realloc(p3, 50);   \/\/ realloc from pre-init-phase, growing\n+    p4 = os_realloc(p4, 8);    \/\/ realloc from pre-init-phase, shrinking\n+    DEBUG_ONLY(NMTPreInit::verify();)\n+\n+    log_state();\n+  }\n+  void free_all() {\n+    assert(NMTPreInit::in_preinit_phase() == false,\n+           \"This should be run in post-init phase (from inside a TEST_VM test)\");\n+    LOG(\"corner cases, free-all (%d)\", os::current_process_id());\n+    log_state();\n+\n+    os::free(p1); os::free(p2); os::free(p3); os::free(p4);\n+    DEBUG_ONLY(NMTPreInit::verify();)\n+\n+    log_state();\n+  }\n+};\n+\n+static TestAllocations g_test_allocations;\n+\n+TEST_VM(NMTPreInit, pre_to_post_allocs) {\n+  g_test_allocations.test_post();\n+  g_test_allocations.free_all();\n+}\n+\n+#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmtpreinit.cpp","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"jvm_io.h\"\n+#include \"memory\/allocation.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"services\/nmtPreInit.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+#include \"unittest.hpp\"\n+\n+#if INCLUDE_NMT\n+\n+\/\/ This tests the NMTPreInitAllocationTable hash table used to store C-heap allocations before NMT initialization ran.\n+\n+static size_t small_random_nonzero_size() {\n+  \/\/ We keep the sizes random but not too random; the more regular the sizes, the\n+  \/\/ more regular the malloc return pointers and the better we see how our hash\n+  \/\/ function copes in the NMT preinit lu table.\n+  switch (os::random() % 4) {\n+  case 0: return 0x10;\n+  case 1: return 0x42;\n+  case 2: return 0x20;\n+  case 3: return 0x80;\n+  }\n+  return 1;\n+}\n+\n+\/\/#define VERBOSE\n+\n+static void print_and_check_table(NMTPreInitAllocationTable& table, int expected_num_entries) {\n+  char tmp[256];\n+  stringStream ss(tmp, sizeof(tmp));\n+  char expected[256];\n+  jio_snprintf(expected, sizeof(expected), \"entries: %d\", expected_num_entries);\n+  table.print_state(&ss);\n+  EXPECT_EQ(::strncmp(tmp, expected, strlen(expected)), 0);\n+#ifdef VERBOSE\n+  tty->print_raw(tmp);\n+  tty->cr();\n+#endif\n+  DEBUG_ONLY(table.verify();)\n+}\n+\n+TEST_VM(NMTPreInit, stress_test_map) {\n+  NMTPreInitAllocationTable table;\n+  const int num_allocs = 32 * K; \/\/ about factor 100 more than normally expected\n+  NMTPreInitAllocation** allocations = NEW_C_HEAP_ARRAY(NMTPreInitAllocation*, num_allocs, mtTest);\n+\n+  \/\/ Fill table with allocations\n+  for (int i = 0; i < num_allocs; i++) {\n+    NMTPreInitAllocation* a = NMTPreInitAllocation::do_alloc(small_random_nonzero_size());\n+    table.add(a);\n+    allocations[i] = a;\n+  }\n+\n+  print_and_check_table(table, num_allocs);\n+\n+  \/\/ look them all up\n+  for (int i = 0; i < num_allocs; i++) {\n+    const NMTPreInitAllocation* a = table.find(allocations[i]->payload());\n+    ASSERT_EQ(a, allocations[i]);\n+  }\n+\n+  \/\/ Randomly realloc\n+  for (int j = 0; j < num_allocs\/2; j++) {\n+    int pos = os::random() % num_allocs;\n+    NMTPreInitAllocation* a1 = allocations[pos];\n+    NMTPreInitAllocation* a2 = table.find_and_remove(a1->payload());\n+    ASSERT_EQ(a1, a2);\n+    NMTPreInitAllocation* a3 = NMTPreInitAllocation::do_reallocate(a2, small_random_nonzero_size());\n+    table.add(a3);\n+    allocations[pos] = a3;\n+  }\n+\n+  print_and_check_table(table, num_allocs);\n+\n+  \/\/ look them all up\n+  for (int i = 0; i < num_allocs; i++) {\n+    const NMTPreInitAllocation* a = table.find(allocations[i]->payload());\n+    ASSERT_EQ(a, allocations[i]);\n+  }\n+\n+  \/\/ free all\n+  for (int i = 0; i < num_allocs; i++) {\n+    NMTPreInitAllocation* a = table.find_and_remove(allocations[i]->payload());\n+    ASSERT_EQ(a, allocations[i]);\n+    NMTPreInitAllocation::do_free(a);\n+    allocations[i] = NULL;\n+  }\n+\n+  print_and_check_table(table, 0);\n+\n+  FREE_C_HEAP_ARRAY(NMTPreInitAllocation*, allocations);\n+}\n+\n+#ifdef ASSERT\n+\/\/ Test that we will assert if the lookup table is seriously over-booked.\n+TEST_VM_ASSERT_MSG(NMTPreInit, assert_on_lu_table_overflow, \".*NMT preinit lookup table degenerated.*\") {\n+  NMTPreInitAllocationTable table;\n+  const int num_allocs = 400 * 1000; \/\/ anything above ~250K entries should trigger the assert (note: normal number of entries is ~500)\n+  for (int i = 0; i < num_allocs; i++) {\n+    NMTPreInitAllocation* a = NMTPreInitAllocation::do_alloc(1);\n+    table.add(a);\n+  }\n+#ifdef VERBOSE\n+  table.print_state(tty);\n+  tty->cr();\n+#endif\n+  table.verify();\n+}\n+#endif \/\/ ASSERT\n+\n+#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmtpreinitmap.cpp","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"classfile\/systemDictionary.hpp\"\n@@ -28,0 +29,1 @@\n+#include \"oops\/klass.inline.hpp\"\n@@ -40,0 +42,23 @@\n+\n+TEST_VM(InstanceKlass, class_loader_printer) {\n+  ResourceMark rm;\n+  oop loader = SystemDictionary::java_platform_loader();\n+  stringStream st;\n+  loader->print_on(&st);\n+  \/\/ See if injected loader_data field is printed in string\n+  ASSERT_TRUE(strstr(st.as_string(), \"internal 'loader_data'\") != NULL) << \"Must contain internal fields\";\n+  st.reset();\n+  \/\/ See if mirror injected fields are printed.\n+  oop mirror = vmClasses::ClassLoader_klass()->java_mirror();\n+  mirror->print_on(&st);\n+  ASSERT_TRUE(strstr(st.as_string(), \"internal 'protection_domain'\") != NULL) << \"Must contain internal fields\";\n+  \/\/ We should test other printing functions too.\n+#ifndef PRODUCT\n+  st.reset();\n+  \/\/ method printing is non-product\n+  Method* method = vmClasses::ClassLoader_klass()->methods()->at(0);  \/\/ we know there's a method here!\n+  method->print_on(&st);\n+  ASSERT_TRUE(strstr(st.as_string(), \"method holder:\") != NULL) << \"Must contain method_holder field\";\n+  ASSERT_TRUE(strstr(st.as_string(), \"'java\/lang\/ClassLoader'\") != NULL) << \"Must be in ClassLoader\";\n+#endif\n+}\n","filename":"test\/hotspot\/gtest\/oops\/test_instanceKlass.cpp","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -211,2 +211,0 @@\n-  VirtualMemoryTracker::initialize(NMT_detail);\n-  VirtualMemoryTracker::late_initialize(NMT_detail);\n@@ -214,3 +212,13 @@\n-  CommittedVirtualMemoryTest::test();\n-  CommittedVirtualMemoryTest::test_committed_region();\n-  CommittedVirtualMemoryTest::test_partial_region();\n+  \/\/  This tests the VM-global NMT facility. The test must *not* modify global state,\n+  \/\/  since that interferes with other tests!\n+  \/\/ The gtestLauncher are called with and without -XX:NativeMemoryTracking during jtreg-controlled\n+  \/\/  gtests.\n+\n+  if (MemTracker::tracking_level() >= NMT_detail) {\n+    CommittedVirtualMemoryTest::test();\n+    CommittedVirtualMemoryTest::test_committed_region();\n+    CommittedVirtualMemoryTest::test_partial_region();\n+  } else {\n+    tty->print_cr(\"skipped.\");\n+  }\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"services\/memTracker.hpp\"\n@@ -415,1 +416,1 @@\n-#if defined(__APPLE__) && !defined(AARCH64) \/\/ JDK-8267339\n+#if defined(__APPLE__) && !defined(AARCH64)  \/\/ See JDK-8267341.\n@@ -420,0 +421,6 @@\n+\n+  \/\/ With NMT enabled, this will trigger JDK-8263464. For now disable the test if NMT=on.\n+  if (MemTracker::tracking_level() > NMT_off) {\n+    return;\n+  }\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,0 +24,9 @@\n+\/\/ Tests here test the VM-global NMT facility.\n+\/\/  The tests must *not* modify global state! E.g. switch NMT on or off. Instead, they\n+\/\/  should work passively with whatever setting the gtestlauncher had been started with\n+\/\/  - if NMT is enabled, test NMT, otherwise do whatever minimal tests make sense if NMT\n+\/\/  is off.\n+\/\/\n+\/\/ The gtestLauncher then are called with various levels of -XX:NativeMemoryTracking during\n+\/\/  jtreg-controlled gtests (see test\/hotspot\/jtreg\/gtest\/NMTGtests.java)\n+\n@@ -31,0 +40,1 @@\n+#include \"memory\/virtualspace.hpp\"\n@@ -35,0 +45,4 @@\n+#include <stdio.h>\n+\n+\/\/ #define LOG(...) printf(__VA_ARGS__); printf(\"\\n\"); fflush(stdout);\n+#define LOG(...)\n@@ -50,0 +64,8 @@\n+static void diagnostic_print(ReservedMemoryRegion* rmr) {\n+  CommittedRegionIterator iter = rmr->iterate_committed_regions();\n+  LOG(\"In reserved region \" PTR_FORMAT \", size \" SIZE_FORMAT_HEX \":\", p2i(rmr->base()), rmr->size());\n+  for (const CommittedMemoryRegion* region = iter.next(); region != NULL; region = iter.next()) {\n+    LOG(\"   committed region: \" PTR_FORMAT \", size \" SIZE_FORMAT_HEX, p2i(region->base()), region->size());\n+  }\n+}\n+\n@@ -55,0 +77,3 @@\n+  \/\/ Helpful log\n+  diagnostic_print(rmr);\n+\n@@ -72,2 +97,0 @@\n-    VirtualMemoryTracker::initialize(NMT_detail);\n-    VirtualMemoryTracker::late_initialize(NMT_detail);\n@@ -75,1 +98,0 @@\n-    address addr = (address)0x10000000;\n@@ -77,0 +99,2 @@\n+    ReservedSpace rs(size);\n+    address addr = (address)rs.base();\n@@ -84,4 +108,1 @@\n-    \/\/ Add the reserved memory\n-    VirtualMemoryTracker::add_reserved_region(addr, size, stack, mtTest);\n-\n-    \/\/ Fetch the added RMR added above\n+    \/\/ Fetch the added RMR for the space\n@@ -150,2 +171,0 @@\n-    VirtualMemoryTracker::initialize(NMT_detail);\n-    VirtualMemoryTracker::late_initialize(NMT_detail);\n@@ -153,1 +172,0 @@\n-    address addr = (address)0x10000000;\n@@ -155,0 +173,2 @@\n+    ReservedSpace rs(size);\n+    address addr = (address)rs.base();\n@@ -165,1 +185,1 @@\n-    \/\/ Fetch the added RMR added above\n+    \/\/ Fetch the added RMR for the space\n@@ -238,2 +258,0 @@\n-    VirtualMemoryTracker::initialize(NMT_detail);\n-    VirtualMemoryTracker::late_initialize(NMT_detail);\n@@ -241,1 +259,0 @@\n-    address addr = (address)0x10000000;\n@@ -243,0 +260,2 @@\n+    ReservedSpace rs(size);\n+    address addr = (address)rs.base();\n@@ -250,4 +269,1 @@\n-    \/\/ Add the reserved memory\n-    VirtualMemoryTracker::add_reserved_region(addr, size, stack, mtTest);\n-\n-    \/\/ Fetch the added RMR added above\n+    \/\/ Fetch the added RMR for the space\n@@ -413,2 +429,0 @@\n-    VirtualMemoryTracker::initialize(NMT_detail);\n-    VirtualMemoryTracker::late_initialize(NMT_detail);\n@@ -416,1 +430,0 @@\n-    address addr = (address)0x10000000;\n@@ -418,0 +431,2 @@\n+    ReservedSpace rs(size);\n+    address addr = (address)rs.base();\n@@ -425,4 +440,1 @@\n-    \/\/ Add the reserved memory\n-    VirtualMemoryTracker::add_reserved_region(addr, size, stack, mtTest);\n-\n-    \/\/ Fetch the added RMR added above\n+    \/\/ Fetch the added RMR for the space\n@@ -542,2 +554,6 @@\n-TEST_VM(VirtualMemoryTracker, add_committed_region) {\n-  VirtualMemoryTrackerTest::test_add_committed_region();\n+TEST_VM(NMT_VirtualMemoryTracker, add_committed_region) {\n+  if (MemTracker::tracking_level() >= NMT_detail) {\n+    VirtualMemoryTrackerTest::test_add_committed_region();\n+  } else {\n+    tty->print_cr(\"skipped.\");\n+  }\n@@ -546,2 +562,6 @@\n-TEST_VM(VirtualMemoryTracker, remove_uncommitted_region) {\n-  VirtualMemoryTrackerTest::test_remove_uncommitted_region();\n+TEST_VM(NMT_VirtualMemoryTracker, remove_uncommitted_region) {\n+  if (MemTracker::tracking_level() >= NMT_detail) {\n+    VirtualMemoryTrackerTest::test_remove_uncommitted_region();\n+  } else {\n+    tty->print_cr(\"skipped.\");\n+  }\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":49,"deletions":29,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"utilities\/align.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+\n+#include \"testutils.hpp\"\n+#include \"unittest.hpp\"\n+\n+#include <string.h>\n+\n+\/\/ Note: these could be made more suitable for covering large ranges (e.g. just mark one byte per page).\n+\n+void GtestUtils::mark_range_with(void* p, size_t s, uint8_t mark) {\n+  if (p != NULL && s > 0) {\n+    ::memset(p, mark, s);\n+  }\n+}\n+\n+bool GtestUtils::check_range(const void* p, size_t s, uint8_t expected) {\n+  if (p == NULL || s == 0) {\n+    return true;\n+  }\n+\n+  const char* first_wrong = NULL;\n+  char* p2 = (char*)p;\n+  const char* const end = p2 + s;\n+  while (p2 < end) {\n+    if (*p2 != (char)expected) {\n+      first_wrong = p2;\n+      break;\n+    }\n+    p2 ++;\n+  }\n+\n+  if (first_wrong != NULL) {\n+    tty->print_cr(\"wrong pattern around \" PTR_FORMAT, p2i(first_wrong));\n+    \/\/ Note: We deliberately print the surroundings too without bounds check. Might be interesting,\n+    \/\/ and os::print_hex_dump uses SafeFetch, so this is fine without bounds checks.\n+    os::print_hex_dump(tty, (address)(align_down(p2, 0x10) - 0x10),\n+                            (address)(align_up(end, 0x10) + 0x10), 1);\n+  }\n+\n+  return first_wrong == NULL;\n+}\n","filename":"test\/hotspot\/gtest\/testutils.cpp","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef TESTUTILS_HPP\n+#define TESTUTILS_HPP\n+\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"unittest.hpp\"\n+\n+class GtestUtils : public AllStatic {\n+public:\n+\n+  \/\/ Fill range with a byte mark.\n+  \/\/ Tolerates p == NULL or s == 0.\n+  static void mark_range_with(void* p, size_t s, uint8_t mark);\n+\n+  \/\/ Given a memory range, check that the whole range is filled with the expected byte.\n+  \/\/ If not, hex dump around first non-matching address and return false.\n+  \/\/ If p == NULL or size == 0, returns true.\n+  static bool check_range(const void* p, size_t s, uint8_t expected);\n+\n+  \/\/ Convenience method with a predefined byte mark.\n+  static void mark_range(void* p, size_t s)           { mark_range_with(p, s, 32); }\n+  static bool check_range(const void* p, size_t s)    { return check_range(p, s, 32); }\n+\n+};\n+\n+#define ASSERT_RANGE_IS_MARKED_WITH(p, size, mark)  ASSERT_TRUE(GtestUtils::check_range(p, size, mark))\n+#define ASSERT_RANGE_IS_MARKED(p, size)             ASSERT_TRUE(GtestUtils::check_range(p, size))\n+\n+\/\/ Convenience asserts\n+#define ASSERT_NOT_NULL(p)  ASSERT_NE(p, (char*)NULL)\n+#define ASSERT_NULL(p)      ASSERT_EQ(p, (char*)NULL)\n+\n+#define ASSERT_ALIGN(p, n) ASSERT_TRUE(is_aligned(p, n))\n+\n+#endif \/\/ TESTUTILS_HPP\n","filename":"test\/hotspot\/gtest\/testutils.hpp","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,0 +91,9 @@\n+    JavaVM* jvm[1];                                                 \\\n+    jsize nVMs = 0;                                                 \\\n+    JNI_GetCreatedJavaVMs(&jvm[0], 1, &nVMs);                       \\\n+    if (nVMs == 1) {                                                \\\n+      int ret = jvm[0]->DestroyJavaVM();                            \\\n+      if (ret != 0) {                                               \\\n+        fprintf(stderr, \"Warning: DestroyJavaVM error %d\\n\", ret);  \\\n+      }                                                             \\\n+    }                                                               \\\n","filename":"test\/hotspot\/gtest\/unittest.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,15 @@\n+  class DeleterTestIter {\n+    int _val;\n+   public:\n+    DeleterTestIter(int i) : _val(i) {}\n+\n+    bool do_entry(K const& k, V const& v) {\n+      if ((uintptr_t) k == (uintptr_t) _val) {\n+        \/\/ Delete me!\n+        return true;\n+      } else {\n+        return false; \/\/ continue iteration\n+      }\n+    }\n+  };\n+\n@@ -79,1 +94,1 @@\n-      ResourceHashtable<K, V, HASH, EQUALS, SIZE, ALLOC_TYPE, MEM_TYPE> rh;\n+      ResourceHashtable<K, V, SIZE, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS> rh;\n@@ -211,1 +226,1 @@\n-      ResourceHashtable<K, V, HASH, EQUALS, SIZE, ALLOC_TYPE, MEM_TYPE> rh;\n+      ResourceHashtable<K, V, SIZE, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS> rh;\n@@ -236,0 +251,9 @@\n+\n+      \/\/ Add more entries in and then delete one.\n+      for (uintptr_t i = 10; i > 0; --i) {\n+        uintptr_t index = i - 1;\n+        ASSERT_TRUE(rh.put(as_K(index), index));\n+      }\n+      DeleterTestIter dt(5);\n+      rh.unlink(&dt);\n+      ASSERT_FALSE(rh.get(as_K(5)));\n","filename":"test\/hotspot\/gtest\/utilities\/test_resourceHash.cpp","additions":27,"deletions":3,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-serviceability\/sa\/TestJmapCore.java                           8268722,8268283   macosx-x64,linux-aarch64\n+serviceability\/sa\/TestJmapCore.java                           8268722,8268283,8270202   macosx-x64,linux-aarch64,linux-x64\n@@ -43,0 +43,4 @@\n+\n+serviceability\/sa\/TestJhsdbJstackMixed.java                   8248912   generic-all\n+serviceability\/sa\/ClhsdbPstack.java#id0                       8248912   generic-all\n+serviceability\/sa\/ClhsdbPstack.java#id1                       8248912   generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+compiler\/codecache\/TestStressCodeBuffers.java 8272094 generic-aarch64\n@@ -94,0 +95,1 @@\n+runtime\/InvocationTests\/invokevirtualTests.java 8271125 generic-all\n@@ -102,0 +104,2 @@\n+applications\/jcstress\/copy.java 8229852 linux-x64\n+\n@@ -106,1 +110,1 @@\n-serviceability\/sa\/sadebugd\/DebugdConnectTest.java 8239062 macosx-x64\n+serviceability\/sa\/sadebugd\/DebugdConnectTest.java 8239062,8270326 macosx-x64,macosx-aarch64\n@@ -110,4 +114,0 @@\n-serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatIntervalTest.java 8214032 generic-all\n-serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorInterpreterObjectTest.java 8225313 linux-i586,linux-x64,windows-x64\n-serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatArrayCorrectnessTest.java 8224150 generic-all\n-serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatObjectCorrectnessTest.java 8225313 linux-i586,linux-x64,windows-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-requires.extraPropDefns.bootlibs = ..\/..\/lib\/sun\n+requires.extraPropDefns.bootlibs = ..\/..\/lib\/jdk\/test\/whitebox\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,2 @@\n-  gtest\/LargePageGtests.java\n+  gtest\/LargePageGtests.java \\\n+  gtest\/NMTGtests.java \\\n@@ -303,1 +304,0 @@\n- -runtime\/NMT \\\n@@ -478,1 +478,2 @@\n-  runtime\/NMT\n+  runtime\/NMT \\\n+  gtest\/NMTGtests.java\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8272131\n+ * @requires vm.compiler2.enabled\n+ * @summary ArrayCopy with negative index before infinite loop\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation\n+ *                   -XX:CompileCommand=compileonly,\"*TestIllegalArrayCopyBeforeInfiniteLoop::foo\"\n+ *                   compiler.arraycopy.TestIllegalArrayCopyBeforeInfiniteLoop\n+ *\/\n+\n+package compiler.arraycopy;\n+\n+import java.util.Arrays;\n+\n+public class TestIllegalArrayCopyBeforeInfiniteLoop {\n+    private static char src[] = new char[10];\n+    private static int count = 0;\n+    private static final int iter = 10_000;\n+\n+    public static void main(String[] args) throws Exception {\n+        for (int i = 0; i < iter; ++i) {\n+            foo();\n+        }\n+        if (count != iter) {\n+            throw new RuntimeException(\"test failed\");\n+        }\n+    }\n+\n+    static void foo() {\n+        try {\n+            Arrays.copyOfRange(src, -1, 128);\n+            do {\n+            } while (true);\n+        } catch (ArrayIndexOutOfBoundsException ex) {\n+            count++;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestIllegalArrayCopyBeforeInfiniteLoop.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -26,2 +26,3 @@\n- * @bug 8155643\n- * @summary Test Object.clone() intrinsic if ReduceInitialCardMarks is disabled.\n+ * @bug 8155643 8268125 8270461 8270098\n+ * @summary Test Object.clone() intrinsic.\n+ * @modules java.base\/java.lang:+open\n@@ -31,0 +32,1 @@\n+ *                   -XX:CompileCommand=compileonly,jdk.internal.reflect.GeneratedMethodAccessor*::invoke\n@@ -32,2 +34,8 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.arraycopy.TestObjectArrayClone::testClone*\n+ *                   -XX:CompileCommand=compileonly,jdk.internal.reflect.GeneratedMethodAccessor*::invoke\n+ *                   compiler.arraycopy.TestObjectArrayClone\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedClassPointers -Xmx128m\n+ *                   -XX:CompileCommand=compileonly,compiler.arraycopy.TestObjectArrayClone::testClone*\n+ *                   -XX:CompileCommand=compileonly,jdk.internal.reflect.GeneratedMethodAccessor*::invoke\n+ *                   compiler.arraycopy.TestObjectArrayClone\n+ * @run main\/othervm -Xbatch -XX:-UseTypeProfile\n@@ -35,0 +43,1 @@\n+ *                   -XX:CompileCommand=compileonly,jdk.internal.reflect.GeneratedMethodAccessor*::invoke\n@@ -40,0 +49,4 @@\n+import java.lang.invoke.*;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n@@ -61,1 +74,1 @@\n-        } catch(CloneNotSupportedException e) {\n+        } catch (CloneNotSupportedException e) {\n@@ -138,0 +151,11 @@\n+    public static String[] testCloneShortObjectArray2(Method clone) throws Exception {\n+        String[] arr = new String[5];\n+        arr[0] = str1;\n+        arr[1] = str2;\n+        arr[2] = str3;\n+        arr[3] = str4;\n+        arr[4] = str5;\n+        escape_arr = arr;\n+        return (String[]) testCloneObject(clone, arr);\n+    }\n+\n@@ -163,1 +187,8 @@\n-    public static void main(String[] args) {\n+    public static Object testCloneObject(Method clone, Object obj) throws Exception {\n+        return clone.invoke(obj);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Method clone = Object.class.getDeclaredMethod(\"clone\");\n+        clone.setAccessible(true);\n+\n@@ -180,0 +211,14 @@\n+        for (int i = 0; i < 50_000; i++) {\n+            for (int j = 0; j < arr1.length; j++) {\n+                arr1[j] = new String(Integer.toString(j));\n+            }\n+            String[] arr2 = (String[]) testCloneObject(clone, arr1);\n+            verifyStr(arr1, arr2);\n+            String[] arr3 = (String[]) testCloneObject(clone, arr1);\n+            verifyStr(arr1, arr3);\n+            String[] arr4 = (String[]) testCloneObject(clone, arr1);\n+            verifyStr(arr1, arr4);\n+            verifyStr(arr1, arr3);\n+            verifyStr(arr1, arr2);\n+        }\n+\n@@ -187,0 +232,3 @@\n+            String[] value4 = testCloneShortObjectArray2(clone);\n+            verifyStr(value4, escape_arr);\n+            verifyStr(value, value4);\n@@ -213,0 +261,4 @@\n+        int[] arr2 = new int[42];\n+        for (int i = 0; i < arr2.length; i++) {\n+            arr2[i] = i;\n+        }\n@@ -214,1 +266,10 @@\n-            testClonePrimitiveArray(new int[42]);\n+            int[] res1 = testClonePrimitiveArray(arr2);\n+            int[] res2 = (int[])testCloneObject(clone, arr2);\n+            for (int j = 0; j < arr2.length; j++) {\n+                if (res1[j] != j) {\n+                    throw new RuntimeException(\"Unexpected result: \" + res1[j] + \" != \" + j);\n+                }\n+                if (res2[j] != j) {\n+                    throw new RuntimeException(\"Unexpected result: \" + res2[j] + \" != \" + j);\n+                }\n+            }\n@@ -229,0 +290,11 @@\n+        for (int i = 0; i < 50_000; i++) {\n+            Payload p1 = (Payload) testCloneObject(clone, ref);\n+            verifyPayload(ref, p1);\n+            Payload p2 = (Payload) testCloneObject(clone, ref);\n+            verifyPayload(ref, p2);\n+            Payload p3 = (Payload) testCloneObject(clone, ref);\n+            verifyPayload(ref, p3);\n+            verifyPayload(p2, p3);\n+            verifyPayload(p1, p3);\n+        }\n+\n@@ -240,0 +312,11 @@\n+\n+        for (int i = 0; i < 50_000; i++) {\n+            Payload2 p1 = (Payload2) testCloneObject(clone, ref2);\n+            verifyPayload2(ref2, p1);\n+            Payload2 p2 = (Payload2) testCloneObject(clone, ref2);\n+            verifyPayload2(ref2, p2);\n+            Payload2 p3 = (Payload2) testCloneObject(clone, ref2);\n+            verifyPayload2(ref2, p3);\n+            verifyPayload2(p2, p3);\n+            verifyPayload2(p1, p3);\n+        }\n@@ -325,1 +408,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestObjectArrayClone.java","additions":90,"deletions":8,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271203\n+ * @summary C2: assert(iff->Opcode() == Op_If || iff->Opcode() == Op_CountedLoopEnd || iff->Opcode() == Op_RangeCheck) failed: Check this code when new subtype is added\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation -XX:CompileOnly=compiler.c2.LongCountedLoopAsUnswitchIff::test compiler.c2.LongCountedLoopAsUnswitchIff\n+ *\/\n+\n+package compiler.c2;\n+\n+public class LongCountedLoopAsUnswitchIff {\n+    static int iArrFld[] = new int[400];\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 10; i++) {\n+            test();\n+        }\n+    }\n+\n+    static void test() {\n+        int i = 56, i2 = 22257;\n+\n+        do {\n+            do {\n+                int i24 = 1;\n+                while (++i24 < 2) {\n+                }\n+                for (long l1 = i; l1 < 2; ++l1) {\n+                    iArrFld[0] += 5;\n+                }\n+            } while ((i2 -= 2) > 0);\n+            for (long l3 = 8; l3 < 194; ++l3) {\n+            }\n+        } while (--i > 0);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/LongCountedLoopAsUnswitchIff.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8270307\n+ * @summary C2: assert(false) failed: bad AD file after JDK-8267687\n+ * @library \/test\/lib\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=TestCMoveHasTopInput.vMeth TestCMoveHasTopInput\n+ *\/\n+\n+public class TestCMoveHasTopInput {\n+    public static boolean arr[] = new boolean[20];\n+\n+    public void vMeth(long l) {\n+        for (int a = 2; a < 155; a++) {\n+            for (int b = 1; b < 10; ++b) {\n+                for (int c = 1; c < 2; c++) {\n+                    l += 3 * l;\n+                    arr[b - 1] = false;\n+                    switch (a) {\n+                        case 14:\n+                        case 17:\n+                            l -= b;\n+                            break;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void main(String... args) {\n+        TestCMoveHasTopInput test = new TestCMoveHasTopInput();\n+        for (int i = 0; i < 10; i++) {\n+            test.vMeth(i);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestCMoveHasTopInput.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @requires vm.compiler2.enabled\n+ * @bug 8268019\n+ * @summary Splitting an If through a dying loop header region that is not a LoopNode, yet, results in a dead data loop.\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadLoopSplitIfLoop::test -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+StressIGVN -XX:StressSeed=2382674767 -XX:CompileCommand=dontinline,compiler.c2.TestDeadLoopSplitIfLoop::test\n+ *                   compiler.c2.TestDeadLoopSplitIfLoop\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadLoopSplitIfLoop::test -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+StressIGVN -XX:CompileCommand=dontinline,compiler.c2.TestDeadLoopSplitIfLoop::test\n+ *                   compiler.c2.TestDeadLoopSplitIfLoop\n+ *\/\n+package compiler.c2;\n+\n+public class TestDeadLoopSplitIfLoop {\n+    int a;\n+    int b;\n+    boolean c;\n+\n+    public static void main(String[] g) {\n+        TestDeadLoopSplitIfLoop h = new TestDeadLoopSplitIfLoop();\n+        h.test();\n+    }\n+\n+    void test() {\n+        int e = 4;\n+        long f[] = new long[a];\n+        if (c) {\n+        } else if (c) {\n+            \/\/ Dead path is removed after parsing which results in a dead data loop for certain node orderings in IGVN.\n+            switch (126) {\n+                case 126:\n+                    do {\n+                        f[e] = b;\n+                        switch (6) {\n+                            case 7:\n+                                f = f;\n+                        }\n+                    } while (e++ < 93);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestDeadLoopSplitIfLoop.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8270886\n+ * @library \/test\/lib\n+ * @summary Crash in PhaseIdealLoop::verify_strip_mined_scheduling\n+ *\n+ * @run main TestRenumberLiveNodesInfiniteLoop\n+ *\n+ *\/\n+\n+import jdk.test.lib.Utils;\n+\n+public class TestRenumberLiveNodesInfiniteLoop {\n+    public long m2 (double a_do0, byte a_by1){\n+        double do3 = -2074076350.2364243247;\n+        int in4 = 129;\n+        do3 = do3;\n+        return -3480877547L;\n+    }\n+\n+    public void mainTest (String[] args){\n+        byte by14 = (byte)9;\n+        long lo15 = 1502432357L;\n+        short sha16[] = new short[473];\n+\n+        for (short sh17 : sha16) {\n+            try {\n+                sha16[2] = (short)23;\n+                for (int i18 = 0; i18 < 17; i18++) {\n+                    sha16[i18] = sh17;\n+                    m2(1120187380.53448312, by14);\n+                }\n+            } catch (ArithmeticException a_e) {}\n+            sha16[1] = sh17;\n+            sha16[2] = sh17;\n+        }\n+        m2(825278101.1289499682, by14);\n+        by14 = (byte)(by14 - by14);\n+        for (int i19 = 0; i19 < 20; i19++) {\n+            if (i19 == i19) {\n+                sha16[i19] *= (short)-24;\n+                i19 = i19;\n+            }\n+            for (short sh20 : sha16) {\n+                for (int i21 = 0; i21 < 83; i21++) {\n+                    sha16[0] -= (short)-46;\n+                    i19 += 127;\n+                }\n+                for (int i22 = 0; i22 < 89; i22++) {\n+                    i22 = 8;\n+                }\n+            }\n+            ;\n+        }\n+        ;\n+        ;\n+        for (int i23 = 0; i23 < 33; i23++) {\n+            sha16[i23] = (short)46;\n+            for (int i24 = 0; i24 < 94; i24++) {\n+                sha16[2] = (short)-3;\n+            }\n+        }\n+        sha16[0] = (short)14;\n+        for (int i25 = 0; i25 < 35; i25++) {\n+            for (short sh26 : sha16) {\n+                if (i25 > 5) {\n+                    m2(1121925038.1118634045, by14);\n+                }\n+            }\n+            m2(-1914069692.1375346593, (byte)16);\n+        }\n+        ;\n+        for (int i27 = 0; i27 < 10; i27++) {\n+            for (int i28 = 0; i28 < 44; i28++) {\n+                if (i28 == i28) {\n+                    break;\n+                }\n+                sha16[i27] = (short)62;\n+                for (int i29 = 0; i29 < 95; i29++) {\n+                    sha16[2] = (short)50;\n+                    sha16[2] = (short)30;\n+                    m2(1250986231.1599386644, by14);\n+                }\n+            }\n+            sha16[2] = (short)28;\n+            m2(672818118.3111172289, (byte)0);\n+        }\n+        sha16[0] = (short)19;\n+        sha16[5] = (short)((short)-11 * (short)60);\n+        for (int i30 = 0; i30 < 38; i30++) {\n+            sha16[i30] = (short)43;\n+            sha16[i30] = (short)49;\n+            try {\n+                for (short sh31 : sha16) {\n+                    m2(720645491.3777510146, by14);\n+                    sha16[i30] -= (short)-44;\n+                    sha16[i30] = (short)58;\n+                }\n+                for (short sh32 : sha16) {\n+                    m2(-3548500610.1703635180 % -2696439975.1456774235 % 2299457624.855537726, by14);\n+                    sha16[2] = (short)12;\n+                    sha16[i30] = (short)8;\n+                }\n+                i30 = 4;\n+            } catch (ArithmeticException a_e) {}\n+        }\n+        for (int i33 = 0; i33 < 31; i33++) {\n+            for (int i34 = 0; i34 < i33; i34++) {\n+                try {\n+                    sha16[i34] \/= (short)-25;\n+                    i34 = -65536;\n+                    i33 = i33;\n+                } catch (ArithmeticException a_e) {}\n+                for (short sh35 : sha16) {\n+                    sha16[i34] += sha16[i33];\n+                    sha16[i34] = sh35;\n+                    sha16[i33] = (short)15;\n+                }\n+                for (short sh36 : sha16) {\n+                    m2(3573835015.2140351447, by14);\n+                    m2(2984270380.1830267895, by14);\n+                }\n+            }\n+            sha16[i33] = (short)57;\n+            m2(-3061961160.3118322232, (byte)-4);\n+        }\n+        sha16[256] -= (short)50;\n+    }\n+\n+    public static void main(String[] args) throws Exception{\n+        Thread thread = new Thread() {\n+                public void run() {\n+                    TestRenumberLiveNodesInfiniteLoop instance = new TestRenumberLiveNodesInfiniteLoop();\n+                    for (int i = 0; i < 100; ++i) {\n+                        instance.mainTest(args);\n+                    }\n+                }\n+            };\n+        \/\/ Give thread some time to trigger compilation\n+        thread.setDaemon(true);\n+        thread.start();\n+        Thread.sleep(Utils.adjustTimeout(4000));\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestRenumberLiveNodesInfiniteLoop.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -40,0 +40,1 @@\n+  private static final int REPCOUNT = 16;\n@@ -47,0 +48,9 @@\n+  private static final int [] rolRes = {\n+    15, 32, 68, 144, 304, 640, 1344, 2816, 5888, 12288, 25600, 53248, 110592, 229376, 475136, 983040\n+  };\n+\n+  private static final int [] rorRes = {\n+    15, 8, 1073741828, 1073741826, 805306369, -1610612736, 1409286144, 738197504, 385875968, 201326592,\n+    104857600, 54525952, 28311552, 14680064, 7602176, 3932160\n+  };\n+\n@@ -61,0 +71,2 @@\n+  static int[] a2 = new int[ARRLEN];\n+  static int[] a3 = new int[ARRLEN];\n@@ -67,0 +79,2 @@\n+      a2[i] = (i & (REPCOUNT-1)) + VALUE;\n+      a3[i] = i & (REPCOUNT-1);\n@@ -96,0 +110,3 @@\n+\n+      test_rolv_vec(a0, a2, a3);\n+      test_rorv_vec(a0, a2, a3);\n@@ -191,1 +208,8 @@\n-\n+    test_rolv_vec(a0, a2, a3);\n+    for (int i=0; i<ARRLEN; i++) {\n+      errn += verify(\"test_rolv_vec: \", i, a0[i], rolRes[i & (REPCOUNT-1)]);\n+    }\n+    test_rorv_vec(a0, a2, a3);\n+    for (int i=0; i<ARRLEN; i++) {\n+      errn += verify(\"test_rorv_vec: \", i, a0[i], rorRes[i & (REPCOUNT-1)]);\n+    }\n@@ -361,0 +385,14 @@\n+\n+    start = System.currentTimeMillis();\n+    for (int i=0; i<ITERS; i++) {\n+      test_rorv_vec(a0, a2, a3);\n+    }\n+    end = System.currentTimeMillis();\n+    System.out.println(\"test_rorv_vec: \" + (end - start));\n+\n+    start = System.currentTimeMillis();\n+    for (int i=0; i<ITERS; i++) {\n+      test_rolv_vec(a0, a2, a3);\n+    }\n+    end = System.currentTimeMillis();\n+    System.out.println(\"test_rolv_vec: \" + (end - start));\n@@ -387,0 +425,13 @@\n+  static void test_rolv_vec(int[] a0, int[] a1, int [] a2) {\n+    for (int i = 0; i < a0.length; i+=1) {\n+      a0[i] = (int)(Integer.rotateLeft(a1[i], a2[i]));\n+    }\n+  }\n+\n+  static void test_rorv_vec(int[] a0, int[] a1, int [] a2) {\n+    for (int i = 0; i < a0.length; i+=1) {\n+      a0[i] = (int)(Integer.rotateRight(a1[i], a2[i]));\n+    }\n+  }\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestIntVectRotate.java","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-        \"-XX:CICrashAt=1\", \"-XX:+DumpReplayDataOnError\",\n-        \"-XX:+PreferInterpreterNativeStubs\", REPLAY_FILE_OPTION};\n+        \"-XX:+CICountNative\", \"-XX:CICrashAt=1\", \"-XX:+DumpReplayDataOnError\",\n+        REPLAY_FILE_OPTION};\n@@ -79,0 +79,4 @@\n+    static interface Lambda {\n+        int value();\n+    }\n+\n@@ -81,1 +85,4 @@\n-            for (int i = 0; i < 20_000; i++) {\n+            \/\/ explicitly trigger native compilation\n+            Lambda start = () -> 0;\n+\n+            for (int i = start.value(); i < 20_000; i++) {\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/CiReplayBase.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8270925\n+ * @library \/ \/test\/lib\n+ * @summary testing of ciReplay with inlining\n+ * @requires vm.flightRecorder != true & vm.compMode != \"Xint\" & vm.debug == true & vm.compiler2.enabled\n+ * @modules java.base\/jdk.internal.misc\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *      compiler.ciReplay.TestInlining\n+ *\/\n+\n+package compiler.ciReplay;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+import jdk.test.lib.Asserts;\n+\n+public class TestInlining extends CiReplayBase {\n+    public static void main(String args[]) {\n+        new TestInlining().runTest(false, TIERED_DISABLED_VM_OPTION);\n+    }\n+\n+    @Override\n+    public void testAction() {\n+        try {\n+            Path replayFilePath = Paths.get(REPLAY_FILE_NAME);\n+            List<String> replayContent = Files.readAllLines(replayFilePath);\n+            boolean found = false;\n+            for (int i = 0; i < replayContent.size(); i++) {\n+                String line = replayContent.get(i);\n+                if (line.startsWith(\"compile \")) {\n+                    StringTokenizer tokenizer = new StringTokenizer(line, \" \");\n+                    Asserts.assertEQ(tokenizer.nextToken(), \"compile\");\n+                    tokenizer.nextToken(); \/\/ class\n+                    tokenizer.nextToken(); \/\/ method\n+                    tokenizer.nextToken(); \/\/ signature\n+                    tokenizer.nextToken(); \/\/ bci\n+                    Asserts.assertEQ(tokenizer.nextToken(), \"4\"); \/\/ level\n+                    Asserts.assertEQ(tokenizer.nextToken(), \"inline\");\n+                    found = true;\n+                }\n+            }\n+            Asserts.assertEQ(found, true);\n+        } catch (IOException ioe) {\n+            throw new Error(\"Failed to read\/write replay data: \" + ioe, ioe);\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/TestInlining.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -40,1 +40,1 @@\n- *        sun.hotspot.WhiteBox sun.hotspot.parser.DiagnosticCommand\n+ *        sun.hotspot.WhiteBox jdk.test.whitebox.parser.DiagnosticCommand\n@@ -42,1 +42,1 @@\n- *                                sun.hotspot.parser.DiagnosticCommand\n+ *                                jdk.test.whitebox.parser.DiagnosticCommand\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/AllocateCompileIdTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,4 +81,7 @@\n-            \/* a method is not mature in Xcomp mode with tiered compilation disabled,\n-               see NonTieredCompPolicy::is_mature *\/\n-            Asserts.assertEQ(isMature, !(Platform.isComp() && !TIERED),\n-                    \"Unexpected isMature state for multiple times invoked method\");\n+            \/\/ The method may or may not be mature if it's compiled with limited profile.\n+            if (compLevel != CompilerWhiteBoxTest.COMP_LEVEL_LIMITED_PROFILE) {\n+               \/* a method is not mature in Xcomp mode with tiered compilation disabled,\n+                 see NonTieredCompPolicy::is_mature *\/\n+               Asserts.assertEQ(isMature, !(Platform.isComp() && !TIERED),\n+                       \"Unexpected isMature state for multiple times invoked method\");\n+            }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/IsMatureTest.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,5 +28,1 @@\n- * @requires vm.jvmci & vm.compMode == \"Xmixed\"\n- * @requires vm.opt.final.EliminateAllocations == true\n- *\n- * @comment no \"-Xcomp -XX:-TieredCompilation\" combination allowed until JDK-8140018 is resolved\n- * @requires vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == true\n+ * @requires vm.jvmci\n@@ -49,1 +45,7 @@\n- *                   -XX:+DoEscapeAnalysis -XX:-UseCounterDecay\n+ *                   compiler.jvmci.compilerToVM.IterateFramesNative\n+ * @run main\/othervm -Xcomp -Xbootclasspath\/a:.\n+ *                   -XX:CompileOnly=compiler.jvmci.compilerToVM.IterateFramesNative::callerNative\n+ *                   -XX:CompileOnly=jdk.vm.ci.hotspot.CompilerToVM::iterateFrames\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI\n+ *                   -Dcompiler.jvmci.compilerToVM.IterateFramesNative.checkCompiled=true\n@@ -56,1 +58,0 @@\n-import compiler.testlibrary.CompilerUtils;\n@@ -59,1 +60,1 @@\n-import jdk.vm.ci.code.stack.InspectedFrame;\n+import jdk.vm.ci.code.stack.InspectedFrameVisitor;\n@@ -63,1 +64,0 @@\n-import jtreg.SkippedException;\n@@ -71,1 +71,2 @@\n-    private static final int COMPILE_THRESHOLD;\n+    private static final Method NATIVE_METHOD;\n+    private static final Method ITERATE_FRAMES_METHOD;\n@@ -74,0 +75,1 @@\n+    private static final boolean CHECK_COMPILED;\n@@ -76,1 +78,0 @@\n-        Method nativeMethod;\n@@ -80,1 +81,1 @@\n-            nativeMethod = IterateFramesNative.class.getDeclaredMethod(\"callerNative\",\n+            NATIVE_METHOD = IterateFramesNative.class.getDeclaredMethod(\"callerNative\",\n@@ -84,0 +85,6 @@\n+            ITERATE_FRAMES_METHOD = CompilerToVMHelper.CompilerToVMClass().getDeclaredMethod(\n+                    \"iterateFrames\",\n+                    ResolvedJavaMethod[].class,\n+                    ResolvedJavaMethod[].class,\n+                    int.class,\n+                    InspectedFrameVisitor.class);\n@@ -87,1 +94,1 @@\n-        NATIVE_METHOD_RESOLVED = CTVMUtilities.getResolvedMethod(nativeMethod);\n+        NATIVE_METHOD_RESOLVED = CTVMUtilities.getResolvedMethod(NATIVE_METHOD);\n@@ -89,3 +96,2 @@\n-        COMPILE_THRESHOLD = WB.getBooleanVMFlag(\"TieredCompilation\")\n-                ? CompilerWhiteBoxTest.THRESHOLD\n-                : CompilerWhiteBoxTest.THRESHOLD * 2;\n+        CHECK_COMPILED = Boolean.getBoolean(\n+                \"compiler.jvmci.compilerToVM.IterateFramesNative.checkCompiled\");\n@@ -97,6 +103,0 @@\n-        int levels[] = CompilerUtils.getAvailableCompilationLevels();\n-        \/\/ we need compilation level 4 to use EscapeAnalysis\n-        if (levels.length < 1 || levels[levels.length - 1] != 4) {\n-            throw new SkippedException(\"Test needs compilation level 4\");\n-        }\n-\n@@ -119,0 +119,2 @@\n+    public static native void callerNative(Runnable runnable);\n+\n@@ -120,1 +122,2 @@\n-        Helper innerHelper = new Helper(\"foo\");\n+        Helper innerHelper = new Helper(str);\n+\n@@ -125,1 +128,0 @@\n-    }\n@@ -127,1 +129,7 @@\n-    public static native void callerNative(Runnable runnable);\n+        if (CHECK_COMPILED) {\n+            Asserts.assertTrue(WB.isMethodCompiled(ITERATE_FRAMES_METHOD),\n+                \"Expected native method to be compiled: \" + ITERATE_FRAMES_METHOD);\n+            Asserts.assertTrue(WB.isMethodCompiled(NATIVE_METHOD),\n+                \"Expected native method to be compiled: \" + NATIVE_METHOD);\n+        }\n+    }\n@@ -130,0 +138,13 @@\n+        HotSpotStackFrameReference initialFrame = CompilerToVMHelper.iterateFrames(\n+            null,\n+            null,\n+            0,\n+            f -> {\n+                HotSpotStackFrameReference frame = (HotSpotStackFrameReference) f;\n+                Asserts.assertNotNull(frame, \"got null frame for native method\");\n+                return frame;\n+            });\n+        Asserts.assertNotNull(initialFrame, \"frame must not be null\");\n+        Asserts.assertEQ(initialFrame.getMethod().getName(), \"iterateFrames\",\n+            \"Expected initial frame method to be CompilerToVM.iterateFrames\");\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/IterateFramesNative.java","additions":46,"deletions":25,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -27,2 +27,3 @@\n-import compiler.lib.ir_framework.shared.TestFormat;\n-import compiler.lib.ir_framework.shared.TestFormatException;\n+import compiler.lib.ir_framework.shared.*;\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -32,1 +33,0 @@\n-import java.util.regex.Pattern;\n@@ -51,0 +51,4 @@\n+    private static final String COMPOSITE_PREFIX = \"#PRE#\"; \/\/ Prefix for regexes that require an additional user-defined string.\n+    private static final String IS_REPLACED = \"#IS_REPLACED#\"; \/\/ Is replaced by an additional user-defined string.\n+    private static final String STORE_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n+    private static final String LOAD_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n@@ -52,4 +56,4 @@\n-    public static final String ALLOC = \"(.*precise klass .*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_instance_Java\" + END;\n-    public static final String ALLOC_OF = \"(.*precise klass .*\";\n-    public static final String ALLOC_ARRAY = \"(.*precise klass \\\\[L.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_array_Java\" + END;\n-    public static final String ALLOC_ARRAY_OF = \"(.*precise klass \\\\[L.*\";\n+    public static final String ALLOC = \"(.*precise klass .*\\\\R((.*(?i:mov|xorl|nop|spill).*|\\\\s*|.*LGHI.*)\\\\R)*.*(?i:call,static).*wrapper for: _new_instance_Java\" + END;\n+    public static final String ALLOC_OF = COMPOSITE_PREFIX + \"(.*precise klass .*\" + IS_REPLACED + \":.*\\\\R((.*(?i:mov|xorl|nop|spill).*|\\\\s*|.*LGHI.*)\\\\R)*.*(?i:call,static).*wrapper for: _new_instance_Java\" + END;\n+    public static final String ALLOC_ARRAY = \"(.*precise klass \\\\[L.*\\\\R((.*(?i:mov|xor|nop|spill).*|\\\\s*|.*LGHI.*)\\\\R)*.*(?i:call,static).*wrapper for: _new_array_Java\" + END;\n+    public static final String ALLOC_ARRAY_OF = COMPOSITE_PREFIX + \"(.*precise klass \\\\[L.*\" + IS_REPLACED + \";:.*\\\\R((.*(?i:mov|xorl|nop|spill).*|\\\\s*|.*LGHI.*)\\\\R)*.*(?i:call,static).*wrapper for: _new_array_Java\" + END;\n@@ -57,3 +61,4 @@\n-    public static final String CHECKCAST_ARRAY = \"(cmp.*precise klass \\\\[.*;:\" + END;\n-    public static final String CHECKCAST_ARRAY_OF = \"(cmp.*precise klass \\\\[.*\";\n-    public static final String CHECKCAST_ARRAYCOPY = \"(.*call_leaf_nofp,runtime  checkcast_arraycopy.*\" + END;\n+    public static final String CHECKCAST_ARRAY = \"(((?i:cmp|CLFI|CLR).*precise klass \\\\[.*;:|.*(?i:mov|or).*precise klass \\\\[.*;:.*\\\\R.*(cmp|CMP|CLR))\" + END;\n+    public static final String CHECKCAST_ARRAY_OF = COMPOSITE_PREFIX + \"(((?i:cmp|CLFI|CLR).*precise klass \\\\[.*\" + IS_REPLACED + \";:|.*(?i:mov|or).*precise klass \\\\[.*\" + IS_REPLACED + \";:.*\\\\R.*(cmp|CMP|CLR))\" + END;\n+    \/\/ Does not work on s390 (a rule containing this regex will be skipped on s390).\n+    public static final String CHECKCAST_ARRAYCOPY = \"(.*((?i:call_leaf_nofp,runtime)|CALL,\\\\s?runtime leaf nofp|BCTRL.*.leaf call).*checkcast_arraycopy.*\" + END;\n@@ -72,10 +77,10 @@\n-    public static final String STORE_OF_CLASS = START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + \"@\\\\S*\";\n-    public static final String STORE_B_OF_CLASS = START + \"StoreB\" + MID + \"@\\\\S*\";\n-    public static final String STORE_C_OF_CLASS = START + \"StoreC\" + MID + \"@\\\\S*\";\n-    public static final String STORE_I_OF_CLASS = START + \"StoreI\" + MID + \"@\\\\S*\";\n-    public static final String STORE_L_OF_CLASS = START + \"StoreL\" + MID + \"@\\\\S*\";\n-    public static final String STORE_F_OF_CLASS = START + \"StoreF\" + MID + \"@\\\\S*\";\n-    public static final String STORE_D_OF_CLASS = START + \"StoreD\" + MID + \"@\\\\S*\";\n-    public static final String STORE_P_OF_CLASS = START + \"StoreP\" + MID + \"@\\\\S*\";\n-    public static final String STORE_N_OF_CLASS = START + \"StoreN\" + MID + \"@\\\\S*\";\n-    public static final String STORE_OF_FIELD = START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + \"@.*name=\";\n+    public static final String STORE_OF_CLASS = COMPOSITE_PREFIX + START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_B_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreB\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_C_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreC\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_I_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreI\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_L_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreL\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_F_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreF\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_D_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreD\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_P_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreP\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_N_OF_CLASS = COMPOSITE_PREFIX + START + \"StoreN\" + MID + \"@\\\\S*\" + IS_REPLACED + STORE_OF_CLASS_POSTFIX;\n+    public static final String STORE_OF_FIELD = COMPOSITE_PREFIX + START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + \"@.*name=\" + IS_REPLACED + \",.*\" + END;\n@@ -94,12 +99,12 @@\n-    public static final String LOAD_OF_CLASS = START + \"Load(B|UB|S|US|I|L|F|D|P|N)\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_B_OF_CLASS = START + \"LoadB\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_UB_OF_CLASS = START + \"LoadUB\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_S_OF_CLASS = START + \"LoadS\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_US_OF_CLASS = START + \"LoadUS\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_I_OF_CLASS = START + \"LoadI\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_L_OF_CLASS = START + \"LoadL\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_F_OF_CLASS = START + \"LoadF\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_D_OF_CLASS = START + \"LoadD\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_P_OF_CLASS = START + \"LoadP\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_N_OF_CLASS = START + \"LoadN\" + MID + \"@\\\\S*\";\n-    public static final String LOAD_OF_FIELD = START + \"Load(B|C|S|I|L|F|D|P|N)\" + MID + \"@.*name=\";\n+    public static final String LOAD_OF_CLASS = COMPOSITE_PREFIX + START + \"Load(B|UB|S|US|I|L|F|D|P|N)\" + MID + \"@\\\\S*\"+  IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_B_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadB\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_UB_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadUB\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_S_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadS\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_US_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadUS\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_I_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadI\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_L_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadL\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_F_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadF\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_D_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadD\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_P_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadP\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_N_OF_CLASS = COMPOSITE_PREFIX + START + \"LoadN\" + MID + \"@\\\\S*\" + IS_REPLACED + LOAD_OF_CLASS_POSTFIX;\n+    public static final String LOAD_OF_FIELD = COMPOSITE_PREFIX + START + \"Load(B|C|S|I|L|F|D|P|N)\" + MID + \"@.*name=\" + IS_REPLACED + \",.*\" + END;\n@@ -108,2 +113,2 @@\n-    public static final String LOOP   = START + \"Loop\" + MID + \"\" + END;\n-    public static final String COUNTEDLOOP = START + \"CountedLoop\\\\b\" + MID + \"\" + END;\n+    public static final String LOOP   = START + \"Loop\" + MID + END;\n+    public static final String COUNTEDLOOP = START + \"CountedLoop\\\\b\" + MID + END;\n@@ -121,0 +126,1 @@\n+    \/\/ Does not work for VM builds without JVMCI like x86_32 (a rule containing this regex will be skipped without having JVMCI built).\n@@ -126,9 +132,0 @@\n-\n-    private static final String ALLOC_OF_POSTFIX =  \":.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_instance_Java\" + END;\n-    private static final String ALLOC_ARRAY_OF_POSTFIX = \";:.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_array_Java\" + END;\n-    private static final String CHECKCAST_ARRAY_OF_POSTFIX = \";:\" + END;\n-    private static final String STORE_OF_FIELD_POSTFIX = \",.*\" + END;\n-    private static final String STORE_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n-    private static final String LOAD_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n-    private static final String LOAD_OF_FIELD_POSTFIX = \",.*\" + END;\n-\n@@ -142,15 +139,3 @@\n-            switch (node) {\n-                case ALLOC_OF -> mergeCompositeNodes(nodes, mergedNodes, i, node, ALLOC_OF_POSTFIX, \"ALLOC_OF\");\n-                case ALLOC_ARRAY_OF -> mergeCompositeNodes(nodes, mergedNodes, i, node, ALLOC_ARRAY_OF_POSTFIX, \"ALLOC_ARRAY_OF\");\n-                case CHECKCAST_ARRAY_OF -> mergeCompositeNodes(nodes, mergedNodes, i, node, CHECKCAST_ARRAY_OF_POSTFIX, \"CHECKCAST_ARRAY_OF\");\n-                case STORE_OF_CLASS, STORE_B_OF_CLASS, STORE_C_OF_CLASS, STORE_D_OF_CLASS, STORE_F_OF_CLASS, STORE_I_OF_CLASS,\n-                        STORE_L_OF_CLASS, STORE_N_OF_CLASS, STORE_P_OF_CLASS\n-                        -> mergeCompositeNodes(nodes, mergedNodes, i, node, STORE_OF_CLASS_POSTFIX, \"STORE_OF_CLASS\");\n-                case STORE_OF_FIELD -> mergeCompositeNodes(nodes, mergedNodes, i, node, STORE_OF_FIELD_POSTFIX, \"STORE_OF_FIELD\");\n-                case LOAD_OF_CLASS, LOAD_B_OF_CLASS, LOAD_UB_OF_CLASS, LOAD_D_OF_CLASS, LOAD_F_OF_CLASS, LOAD_I_OF_CLASS, LOAD_L_OF_CLASS,\n-                        LOAD_N_OF_CLASS, LOAD_P_OF_CLASS, LOAD_S_OF_CLASS, LOAD_US_OF_CLASS\n-                        -> mergeCompositeNodes(nodes, mergedNodes, i, node, LOAD_OF_CLASS_POSTFIX, \"LOAD_OF_CLASS\");\n-                case LOAD_OF_FIELD -> mergeCompositeNodes(nodes, mergedNodes, i, node, LOAD_OF_FIELD_POSTFIX, \"LOAD_OF_FIELD\");\n-                default -> {\n-                    i--; \/\/ No composite node, do not increment by 2.\n-                    mergedNodes.add(node);\n+            if (node.startsWith(COMPOSITE_PREFIX)) {\n+                if (i + 1 == nodes.length) {\n+                    reportMissingCompositeValue(node, i);\n@@ -158,0 +143,4 @@\n+                \/\/ Replace placeholder with user defined string.\n+                node = node.substring(COMPOSITE_PREFIX.length()).replaceAll(IS_REPLACED, nodes[i + 1]);\n+            } else {\n+                i--; \/\/ No composite node, do not increment by 2.\n@@ -159,0 +148,1 @@\n+            mergedNodes.add(node);\n@@ -163,3 +153,53 @@\n-    private static void mergeCompositeNodes(String[] nodes, List<String> mergedNodes, int i, String node, String postFix, String varName) {\n-        TestFormat.check(i + 1 < nodes.length, \"Must provide class name at index \" + (i + 1) + \" right after \" + varName);\n-        mergedNodes.add(node + Pattern.quote(nodes[i + 1]) + postFix);\n+    \/**\n+     * Is default regex supported on current platform, used VM build, etc.?\n+     * Throws a {@link CheckedTestFrameworkException} if the default regex is unsupported.\n+     *\/\n+    public static void checkDefaultRegexSupported(String node) throws CheckedTestFrameworkException {\n+        switch (node) {\n+            case INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP -> {\n+                if (!WhiteBox.getWhiteBox().isJVMCISupportedByGC()) {\n+                    throw new CheckedTestFrameworkException(\"INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP is unsupported in builds without JVMCI.\");\n+                }\n+            }\n+            case CHECKCAST_ARRAYCOPY -> {\n+                if (Platform.isS390x()) {\n+                    throw new CheckedTestFrameworkException(\"CHECKCAST_ARRAYCOPY is unsupported on s390.\");\n+                }\n+            }\n+            \/\/ default: do nothing -> default regex is supported\n+        }\n+    }\n+\n+    \/**\n+     * Mapping from string variable value to string variable name for better error reporting.\n+     *\/\n+    private static void reportMissingCompositeValue(String node, int i) {\n+        String varName = switch (node) {\n+            case ALLOC_OF -> \"ALLOC_OF\";\n+            case ALLOC_ARRAY_OF -> \"ALLOC_ARRAY_OF\";\n+            case CHECKCAST_ARRAY_OF -> \"CHECKCAST_ARRAY_OF\";\n+            case STORE_OF_CLASS -> \"STORE_OF_CLASS\";\n+            case STORE_B_OF_CLASS -> \"STORE_B_OF_CLASS\";\n+            case STORE_C_OF_CLASS -> \"STORE_C_OF_CLASS\";\n+            case STORE_D_OF_CLASS -> \"STORE_D_OF_CLASS\";\n+            case STORE_F_OF_CLASS -> \"STORE_F_OF_CLASS\";\n+            case STORE_I_OF_CLASS -> \"STORE_I_OF_CLASS\";\n+            case STORE_L_OF_CLASS -> \"STORE_L_OF_CLASS\";\n+            case STORE_N_OF_CLASS -> \"STORE_N_OF_CLASS\";\n+            case STORE_P_OF_CLASS -> \"STORE_P_OF_CLASS\";\n+            case STORE_OF_FIELD -> \"STORE_OF_FIELD\";\n+            case LOAD_OF_CLASS -> \"LOAD_OF_CLASS\";\n+            case LOAD_B_OF_CLASS -> \"LOAD_B_OF_CLASS\";\n+            case LOAD_UB_OF_CLASS -> \"LOAD_UB_OF_CLASS\";\n+            case LOAD_D_OF_CLASS -> \"LOAD_D_OF_CLASS\";\n+            case LOAD_F_OF_CLASS -> \"LOAD_F_OF_CLASS\";\n+            case LOAD_I_OF_CLASS -> \"LOAD_I_OF_CLASS\";\n+            case LOAD_L_OF_CLASS -> \"LOAD_L_OF_CLASS\";\n+            case LOAD_N_OF_CLASS -> \"LOAD_N_OF_CLASS\";\n+            case LOAD_P_OF_CLASS -> \"LOAD_P_OF_CLASS\";\n+            case LOAD_S_OF_CLASS -> \"LOAD_S_OF_CLASS\";\n+            case LOAD_US_OF_CLASS -> \"LOAD_US_OF_CLASS\";\n+            case LOAD_OF_FIELD -> \"LOAD_OF_FIELD\";\n+            default -> throw new TestFrameworkException(\"Missing variable mapping for \" + node);\n+        };\n+        TestFormat.fail(\"Must provide additional value at index \" + (i + 1) + \" right after \" + varName);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":101,"deletions":61,"binary":false,"changes":162,"status":"modified"},{"patch":"@@ -74,2 +74,2 @@\n- * Examples on how to write base tests can be found in {@link jdk.test.lib.hotspot.ir_framework.examples.BaseTestExample}\n- * and also as part of the internal testing in the package {@link jdk.test.lib.hotspot.ir_framework.tests}.\n+ * Examples on how to write base tests can be found in {@link ir_framework.examples.BaseTestExample}\n+ * and also as part of the internal testing in the package {@link ir_framework.tests}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,2 @@\n+    public static final String SAFEPOINT_WHILE_PRINTING_MESSAGE = \"<!-- safepoint while printing -->\";\n+\n@@ -490,1 +492,10 @@\n-            throw new IRViolationException(failuresBuilder.toString(), compilationsBuilder.toString());\n+\n+            \/\/ In some very rare cases, the VM output to regex match on contains \"<!-- safepoint while printing -->\"\n+            \/\/ (emitted by ttyLocker::break_tty_for_safepoint) which might be the reason for a matching error.\n+            \/\/ Do not throw an exception in this case (i.e. bailout).\n+            String compilations = compilationsBuilder.toString();\n+            if (!compilations.contains(SAFEPOINT_WHILE_PRINTING_MESSAGE)) {\n+                throw new IRViolationException(failuresBuilder.toString(), compilationsBuilder.toString());\n+            } else {\n+                System.out.println(\"Found \" + SAFEPOINT_WHILE_PRINTING_MESSAGE + \", bail out of IR matching\");\n+            }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/IRMatcher.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        processSocketOutput(socket.getOutput());\n+        processSocketOutput(socket);\n@@ -166,3 +166,6 @@\n-    private void processSocketOutput(String output) {\n-        if (TestFramework.TESTLIST || TestFramework.EXCLUDELIST) {\n-            StringBuilder builder = new StringBuilder();\n+    private void processSocketOutput(TestFrameworkSocket socket) {\n+        String output = socket.getOutput();\n+        if (socket.hasStdOut()) {\n+            StringBuilder testListBuilder = new StringBuilder();\n+            StringBuilder messagesBuilder = new StringBuilder();\n+            StringBuilder nonStdOutBuilder = new StringBuilder();\n@@ -170,2 +173,0 @@\n-            System.out.println(System.lineSeparator() + \"Run flag defined test list\");\n-            System.out.println(\"--------------------------\");\n@@ -175,2 +176,9 @@\n-                    line = \"> \" + line.substring(TestFrameworkSocket.STDOUT_PREFIX.length());\n-                    System.out.println(line);\n+                    \/\/ Exclude [STDOUT] from message.\n+                    line = line.substring(TestFrameworkSocket.STDOUT_PREFIX.length());\n+                    if (line.startsWith(TestFrameworkSocket.TESTLIST_TAG)) {\n+                        \/\/ Exclude [TESTLIST] from message for better formatting.\n+                        line = \"> \" + line.substring(TestFrameworkSocket.TESTLIST_TAG.length() + 1);\n+                        testListBuilder.append(line).append(System.lineSeparator());\n+                    } else {\n+                        messagesBuilder.append(line).append(System.lineSeparator());\n+                    }\n@@ -178,1 +186,1 @@\n-                    builder.append(line).append(System.lineSeparator());\n+                    nonStdOutBuilder.append(line).append(System.lineSeparator());\n@@ -182,1 +190,12 @@\n-            irEncoding = builder.toString();\n+            if (!testListBuilder.isEmpty()) {\n+                System.out.println(\"Run flag defined test list\");\n+                System.out.println(\"--------------------------\");\n+                System.out.println(testListBuilder.toString());\n+                System.out.println();\n+            }\n+            if (!messagesBuilder.isEmpty()) {\n+                System.out.println(\"Messages from Test VM\");\n+                System.out.println(\"---------------------\");\n+                System.out.println(messagesBuilder.toString());\n+            }\n+            irEncoding = nonStdOutBuilder.toString();\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/TestVMProcess.java","additions":29,"deletions":10,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -42,0 +42,3 @@\n+    public static final String TESTLIST_TAG = \"[TESTLIST]\";\n+    public static final String DEFAULT_REGEX_TAG = \"[DEFAULT_REGEX]\";\n+\n@@ -54,0 +57,1 @@\n+    private boolean receivedStdOut = false;\n@@ -91,0 +95,3 @@\n+                    if (next.startsWith(STDOUT_PREFIX)) {\n+                        receivedStdOut = true;\n+                    }\n@@ -111,2 +118,2 @@\n-    public static void write(String msg, String type) {\n-        write(msg, type, false);\n+    public static void write(String msg, String tag) {\n+        write(msg, tag, false);\n@@ -118,1 +125,1 @@\n-    public static void write(String msg, String type, boolean stdout) {\n+    public static void write(String msg, String tag, boolean stdout) {\n@@ -132,1 +139,1 @@\n-                msg = STDOUT_PREFIX + msg;\n+                msg = STDOUT_PREFIX + tag + \" \" + msg;\n@@ -148,1 +155,1 @@\n-            System.out.println(\"Written \" + type + \" to socket:\");\n+            System.out.println(\"Written \" + tag + \" to socket:\");\n@@ -181,0 +188,7 @@\n+\n+    \/**\n+     * Return whether test VM sent messages to be put on stdout (starting with {@link ::STDOUT_PREFIX}).\n+     *\/\n+    public boolean hasStdOut() {\n+        return receivedStdOut;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/shared\/TestFrameworkSocket.java","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -99,0 +99,3 @@\n+        if (isDefaultRegexUnsupported(irAnno)) {\n+            return false;\n+        }\n@@ -144,0 +147,1 @@\n+    }\n@@ -145,0 +149,13 @@\n+    private boolean isDefaultRegexUnsupported(IR irAnno) {\n+        try {\n+            for (String s : irAnno.failOn()) {\n+                IRNode.checkDefaultRegexSupported(s);\n+            }\n+            for (String s : irAnno.counts()) {\n+                IRNode.checkDefaultRegexSupported(s);\n+            }\n+        } catch (CheckedTestFrameworkException e) {\n+            TestFrameworkSocket.write(\"Skip Rule \" + ruleIndex + \": \" + e.getMessage(), TestFrameworkSocket.DEFAULT_REGEX_TAG, true);\n+            return true;\n+        }\n+        return false;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/IREncodingPrinter.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-                       irMatchRulePrinter.emitRuleEncoding(m, baseTest.isSkipped());\n+                        irMatchRulePrinter.emitRuleEncoding(m, baseTest.isSkipped());\n@@ -455,2 +455,2 @@\n-            CompLevel complevel = forceCompileAnno.value();\n-            TestFormat.check(complevel != CompLevel.SKIP && complevel != CompLevel.WAIT_FOR_COMPILATION,\n+            CompLevel compLevel = forceCompileAnno.value();\n+            TestFormat.check(compLevel != CompLevel.SKIP && compLevel != CompLevel.WAIT_FOR_COMPILATION,\n@@ -458,1 +458,1 @@\n-            complevel = restrictCompLevel(forceCompileAnno.value());\n+            compLevel = restrictCompLevel(forceCompileAnno.value());\n@@ -460,1 +460,2 @@\n-                complevel = complevel.flipCompLevel();\n+                compLevel = compLevel.flipCompLevel();\n+                compLevel = restrictCompLevel(compLevel.flipCompLevel());\n@@ -463,1 +464,1 @@\n-                complevel = complevel.excludeCompilationRandomly(ex);\n+                compLevel = compLevel.excludeCompilationRandomly(ex);\n@@ -465,3 +466,3 @@\n-            if (complevel != CompLevel.SKIP) {\n-                enqueueForCompilation(ex, complevel);\n-                forceCompileMap.put(ex, complevel);\n+            if (compLevel != CompLevel.SKIP) {\n+                enqueueForCompilation(ex, compLevel);\n+                forceCompileMap.put(ex, compLevel);\n@@ -497,1 +498,1 @@\n-                                     \"Found @Warmup annotation on non-@Test or non-@Run method \" + m);\n+                                            \"Found @Warmup annotation on non-@Test or non-@Run method \" + m);\n@@ -523,0 +524,1 @@\n+            compLevel = restrictCompLevel(compLevel.flipCompLevel());\n@@ -714,2 +716,2 @@\n-                         \"Cannot set @Warmup at @Test method \" + testMethod + \" when used with its @Run method \"\n-                         + m + \". Use @Warmup at @Run method instead.\");\n+                                \"Cannot set @Warmup at @Test method \" + testMethod + \" when used with its @Run method \"\n+                                + m + \". Use @Warmup at @Run method instead.\");\n@@ -797,1 +799,1 @@\n-                TestFrameworkSocket.write(\"Run \" + test.toString(), \"testfilter\", true);\n+                TestFrameworkSocket.write(\"Run \" + test.toString(), TestFrameworkSocket.TESTLIST_TAG, true);\n@@ -851,1 +853,1 @@\n-                         \"Invalid compilation request with level \" + compLevel);\n+                      \"Invalid compilation request with level \" + compLevel);\n@@ -894,1 +896,1 @@\n-               (!EXCLUDE_RANDOM || WHITE_BOX.isMethodCompilable(m, level.getValue(), false)));\n+                (!EXCLUDE_RANDOM || WHITE_BOX.isMethodCompilable(m, level.getValue(), false)));\n@@ -949,1 +951,1 @@\n-        if (!USE_COMPILER || XCOMP || TEST_C1 || IGNORE_COMPILER_CONTROLS ||\n+        if (!USE_COMPILER || XCOMP || TEST_C1 || IGNORE_COMPILER_CONTROLS || FLIP_C1_C2 ||\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/TestVM.java","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8268261\n+ * @summary Test idom data after unswitching loop following by full unroll.\n+ * @run main\/othervm -XX:CompileCommand=compileonly,TestIdomAfterLoopUnswitching::*\n+ *                   -Xcomp -XX:-TieredCompilation TestIdomAfterLoopUnswitching\n+ *\/\n+\n+public class TestIdomAfterLoopUnswitching {\n+\n+    public static void main(String[] k) {\n+        test1();\n+        test2();\n+    }\n+\n+    public static void test1() {\n+        float h = 0;\n+        for (int j = 0; j < 3; ++j) {\n+            float k = 9;\n+            float[] fla = new float[2];\n+            for (int n = 0; n < 5; ++n) {\n+                if (j >= 1) {\n+                    if (n <= 1) {\n+                        h += k;\n+                    }\n+                }\n+            }\n+            for (int l12 = 0; l12 < 9; ++l12) {\n+                for (int o = 0; o < 1; ++o) {\n+                    fla[0] += 1.0f;\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void test2() {\n+        float[] fla = new float[1000];\n+        for (int i = 0; i < 1000; i++) {\n+            for (float fl2 : fla) {\n+                fla[100] = 1.0f;\n+            }\n+        }\n+        for (int i = 0; i < 3; i++) {\n+            for (int j = 0; j < 14; j++) {\n+                fla[2] = fla[j];\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestIdomAfterLoopUnswitching.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8269752\n+ * @summary C2: assert(false) failed: Bad graph detected in build_loop_late\n+ *\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=TestMainBodyExecutedOnce TestMainBodyExecutedOnce\n+ *\n+ *\/\n+\n+\n+public class TestMainBodyExecutedOnce {\n+    static int N;\n+    static long vMeth_check_sum;\n+\n+    public static void main(String[] strArr) {\n+        TestMainBodyExecutedOnce _instance = new TestMainBodyExecutedOnce();\n+        for (int i = 0; i < 10; i++) {\n+            _instance.test();\n+        }\n+    }\n+\n+    void test() {\n+        vMeth(3);\n+    }\n+\n+    void vMeth(int i2) {\n+        double d = 1.74287;\n+        int i3 = -36665, i4, iArr[] = new int[N];\n+        short s;\n+        long lArr[] = new long[N];\n+        while (++i3 < 132) {\n+            if (i2 != 0) {\n+                vMeth_check_sum += i3;\n+                return;\n+            }\n+            i4 = 1;\n+            while (++i4 < 12) {\n+                i2 += i4;\n+            }\n+        }\n+        vMeth_check_sum += i3;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestMainBodyExecutedOnce.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8271272\n+ * @summary C2: assert(!had_error) failed: bad dominance\n+ *\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=TestMainNeverExecuted TestMainNeverExecuted\n+ *\n+ *\/\n+\n+public class TestMainNeverExecuted {\n+    public static long y;\n+    static int iArrFld[] = new int[400];\n+    static long x = 0;\n+\n+    public static void main(String[] strArr) {\n+        for (int i1 = 0; i1 < 100; i1++)\n+            vMeth(3, 5);\n+    }\n+    static void vMeth(int f, int g) {\n+        int i3 = 23;\n+        int i11 = 2, i12 = 12, i13 = 32901, i14 = 43741;\n+        for (i11 = 7; i11 < 325; ++i11) {\n+            i13 = 1;\n+            while ((i13 += 3) < 5) {\n+                iArrFld[i13 - 1] = 906;\n+                for (i14 = i13; i14 < 5; i14 += 2) {\n+                    y += i14;\n+                    i3 += i14;\n+                }\n+            }\n+        }\n+        x += i11 + i12 + i13 + i14;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestMainNeverExecuted.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2021, Red Hat Inc.\n@@ -108,0 +108,1 @@\n+            \"pids 0 1 1\\n\" +\n@@ -171,1 +172,1 @@\n-            \"pids    3   80  1\";\n+            \"pids    9   80  1\";  \/\/ hierarchy has to match procSelfCgroupHybridContent\n","filename":"test\/hotspot\/jtreg\/containers\/cgroup\/CgroupSubsystemFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -108,1 +108,2 @@\n-            \"memory_max_usage_in_bytes\"\n+            \"memory_max_usage_in_bytes\",\n+            \"maximum number of tasks\"\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,142 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @key cgroups\n+ * @summary Test JVM's awareness of pids controller\n+ * @requires docker.support\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @build sun.hotspot.WhiteBox PrintContainerInfo\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar whitebox.jar sun.hotspot.WhiteBox\n+ * @run driver TestPids\n+ *\/\n+import java.util.List;\n+import jdk.test.lib.containers.docker.Common;\n+import jdk.test.lib.containers.docker.DockerRunOptions;\n+import jdk.test.lib.containers.docker.DockerTestUtils;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.Utils;\n+\n+public class TestPids {\n+    private static final String imageName = Common.imageName(\"pids\");\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!DockerTestUtils.canTestDocker()) {\n+            return;\n+        }\n+\n+        Common.prepareWhiteBox();\n+        DockerTestUtils.buildJdkDockerImage(imageName, \"Dockerfile-BasicTest\", \"jdk-docker\");\n+\n+        try {\n+            testPids();\n+        } finally {\n+            if (!DockerTestUtils.RETAIN_IMAGE_AFTER_TEST) {\n+                DockerTestUtils.removeDockerImage(imageName);\n+            }\n+        }\n+    }\n+\n+    private static void testPids() throws Exception {\n+        System.out.println(\"Testing pids controller ...\");\n+        testPids(\"400\");\n+        testPids(\"800\");\n+        testPids(\"2000\");\n+        testPids(\"Unlimited\");\n+    }\n+\n+    private static DockerRunOptions commonOpts() {\n+        DockerRunOptions opts = new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", \"PrintContainerInfo\");\n+        opts.addDockerOpts(\"--volume\", Utils.TEST_CLASSES + \":\/test-classes\/\");\n+        opts.addJavaOpts(\"-Xlog:os+container=trace\", \"-cp\", \"\/test-classes\/\");\n+        Common.addWhiteBoxOpts(opts);\n+        return opts;\n+    }\n+\n+    private static void checkResult(List<String> lines, String lineMarker, String expectedValue) {\n+        boolean lineMarkerFound = false;\n+\n+        for (String line : lines) {\n+            if (line.contains(\"WARNING: Your kernel does not support pids limit capabilities\")) {\n+                System.out.println(\"Docker pids limitation seems not to work, avoiding check\");\n+                return;\n+            }\n+\n+            if (line.contains(lineMarker)) {\n+                lineMarkerFound = true;\n+                String[] parts = line.split(\":\");\n+                System.out.println(\"DEBUG: line = \" + line);\n+                System.out.println(\"DEBUG: parts.length = \" + parts.length);\n+\n+                Asserts.assertEquals(parts.length, 2);\n+                String actual = parts[1].replaceAll(\"\\\\s\",\"\");\n+                \/\/ Unlimited pids leads on some setups not to \"max\" in the output, but to a high number\n+                if (expectedValue.equals(\"max\")) {\n+                    if (actual.equals(\"max\")) {\n+                        System.out.println(\"Found expected max for unlimited pids value.\");\n+                    } else {\n+                        try {\n+                            int ai = Integer.parseInt(actual);\n+                            if (ai > 20000) {\n+                                System.out.println(\"Limit value \" + ai + \" got accepted as unlimited, log line was \" + line);\n+                            } else {\n+                                throw new RuntimeException(\"Limit value \" + ai + \" is not accepted as unlimited, log line was \" + line);\n+                            }\n+                        } catch (NumberFormatException ex) {\n+                            throw new RuntimeException(\"Could not convert \" + actual + \" to an integer, log line was \" + line);\n+                        }\n+                    }\n+                } else {\n+                    Asserts.assertEquals(actual, expectedValue);\n+                }\n+                break;\n+            }\n+        }\n+        Asserts.assertTrue(lineMarkerFound);\n+    }\n+\n+    private static void testPids(String value) throws Exception {\n+        Common.logNewTestCase(\"pids controller test, limiting value = \" + value);\n+\n+        DockerRunOptions opts = commonOpts();\n+        if (value.equals(\"Unlimited\")) {\n+            opts.addDockerOpts(\"--pids-limit=-1\");\n+        } else {\n+            opts.addDockerOpts(\"--pids-limit=\"+value);\n+        }\n+\n+        List<String> lines = Common.run(opts).asLines();\n+        if (value.equals(\"Unlimited\")) {\n+            checkResult(lines, \"Maximum number of tasks is: \", \"max\");\n+        } else {\n+            checkResult(lines, \"Maximum number of tasks is: \", value);\n+        }\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestPids.java","additions":142,"deletions":0,"binary":false,"changes":142,"status":"added"},{"patch":"@@ -54,1 +54,3 @@\n-            testFlag(new String[] { \"-XX:+UseParallelGC\" }, true);\n+            testFlag(new String[] { \"-XX:+UseParallelGC\", \"-XX:ParallelGCThreads=1\" }, false);\n+            testFlag(new String[] { \"-XX:+UseParallelGC\", \"-XX:ParallelGCThreads=2\" }, true);\n+            testFlag(new String[] { \"-XX:+UseParallelGC\", \"-XX:-ParallelRefProcEnabled\", \"-XX:ParallelGCThreads=2\" }, false);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelRefProc.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n@@ -47,0 +49,2 @@\n+import sun.hotspot.WhiteBox;\n+\n@@ -66,4 +70,10 @@\n-        testVerifyFlags(false, false, filteredOpts);\n-        testVerifyFlags(true,  true,  filteredOpts);\n-        testVerifyFlags(true,  false, filteredOpts);\n-        testVerifyFlags(false, true,  filteredOpts);\n+        \/\/ Young GC\n+        testVerifyFlags(false, false, false, filteredOpts);\n+        testVerifyFlags(true,  true,  false, filteredOpts);\n+        testVerifyFlags(true,  false, false, filteredOpts);\n+        testVerifyFlags(false, true,  false, filteredOpts);\n+        \/\/ Full GC\n+        testVerifyFlags(false, false, true, filteredOpts);\n+        testVerifyFlags(true,  true,  true, filteredOpts);\n+        testVerifyFlags(true,  false, true, filteredOpts);\n+        testVerifyFlags(false, true,  true, filteredOpts);\n@@ -74,0 +84,1 @@\n+                                       boolean doFullGC,\n@@ -80,0 +91,3 @@\n+                                       \"-Xbootclasspath\/a:.\",\n+                                       \"-XX:+UnlockDiagnosticVMOptions\",\n+                                       \"-XX:+WhiteBoxAPI\",\n@@ -84,1 +98,0 @@\n-                                       \"-XX:+UnlockDiagnosticVMOptions\",\n@@ -89,1 +102,2 @@\n-                                       GarbageProducer.class.getName() });\n+                                       GarbageProducer.class.getName(),\n+                                       doFullGC ? \"t\" : \"f\" });\n@@ -114,4 +128,6 @@\n-            int j = 0;\n-            for(int i = 0; i<1000; i++) {\n-                garbage[j] = new long[10000];\n-                j = (j+1)%garbage.length;\n+            WhiteBox wb = WhiteBox.getWhiteBox();\n+\n+            if (args[0].equals(\"t\")) {\n+                wb.fullGC();\n+            } else {\n+                wb.youngGC();\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestVerifyBeforeAndAfterGCFlags.java","additions":27,"deletions":11,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -159,0 +159,4 @@\n+\n+        \/\/ NMethod List Cleanup\n+        new LogMessageWithLevel(\"NMethod List Cleanup\", Level.DEBUG),\n+\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        runTest(false, \"-XX:ConcGCThreads=4\", \"-XX:ParallelGCThreads=3\");\n+        runTest(true, \"-XX:ConcGCThreads=4\", \"-XX:ParallelGCThreads=3\");\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMarkStackSizes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,3 +27,3 @@\n- * @test TestMixedGCLiveThreshold\n- * @summary Test G1MixedGCLiveThresholdPercent. Fill up a region to at least 1\/3 region-size,\n- * the region should not be selected for mixed GC cycle if liveness is above threshold.\n+ * @test id=0percent\n+ * @summary Test G1MixedGCLiveThresholdPercent=0. Fill up a region to at least 33 percent,\n+ * the region should not be selected for mixed GC cycle.\n@@ -34,1 +34,23 @@\n- * @run driver gc.g1.TestMixedGCLiveThreshold\n+ * @run driver gc.g1.TestMixedGCLiveThreshold 0 false\n+ *\/\n+\n+\/*\n+ * @test id=25percent\n+ * @summary Test G1MixedGCLiveThresholdPercent=25. Fill up a region to at least 33 percent,\n+ * the region should not be selected for mixed GC cycle.\n+ * @requires vm.gc.G1\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run driver gc.g1.TestMixedGCLiveThreshold 25 false\n+ *\/\n+\n+\/*\n+ * @test id=100percent\n+ * @summary Test G1MixedGCLiveThresholdPercent=100. Fill up a region to at least 33 percent,\n+ * the region should be selected for mixed GC cycle.\n+ * @requires vm.gc.G1\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run driver gc.g1.TestMixedGCLiveThreshold 100 true\n@@ -51,8 +73,3 @@\n-        \/\/ -XX:G1MixedGCLiveThresholdPercent=0\n-        testMixedGCLiveThresholdPercent(0, false);\n-\n-        \/\/ -XX:G1MixedGCLiveThresholdPercent=25\n-        testMixedGCLiveThresholdPercent(25, false);\n-\n-        \/\/ -XX:G1MixedGCLiveThresholdPercent=100\n-        testMixedGCLiveThresholdPercent(100, true);\n+        int liveThresholdPercent = Integer.parseInt(args[0]);\n+        boolean expectRebuild = Boolean.parseBoolean(args[1]);\n+        testMixedGCLiveThresholdPercent(liveThresholdPercent, expectRebuild);\n@@ -74,0 +91,1 @@\n+        output.reportDiagnosticSummary();\n@@ -84,0 +102,2 @@\n+                                       \/\/ Parallel full gc can distribute live objects into different regions.\n+                                       \"-XX:ParallelGCThreads=1\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMixedGCLiveThreshold.java","additions":32,"deletions":12,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc == \"null\" | vm.gc == \"G1\" | vm.gc == \"Shenandoah\"\n+ * @requires vm.gc.G1\n@@ -36,1 +36,27 @@\n- * @run driver gc.stringdedup.TestStringDeduplicationAgeThreshold\n+ * @run driver gc.stringdedup.TestStringDeduplicationAgeThreshold G1\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationAgeThreshold\n+ * @summary Test string deduplication age threshold\n+ * @bug 8029075\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationAgeThreshold Shenandoah\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationAgeThreshold\n+ * @summary Test string deduplication age threshold\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationAgeThreshold Z\n@@ -41,0 +67,1 @@\n+        TestStringDeduplicationTools.selectGC(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationAgeThreshold.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc == \"null\" | vm.gc == \"G1\" | vm.gc == \"Shenandoah\"\n+ * @requires vm.gc.G1\n@@ -36,1 +36,27 @@\n- * @run driver gc.stringdedup.TestStringDeduplicationFullGC\n+ * @run driver gc.stringdedup.TestStringDeduplicationFullGC G1\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationFullGC\n+ * @summary Test string deduplication during full GC\n+ * @bug 8029075\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationFullGC Shenandoah\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationFullGC\n+ * @summary Test string deduplication during full GC\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationFullGC Z\n@@ -41,0 +67,1 @@\n+        TestStringDeduplicationTools.selectGC(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationFullGC.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc == \"null\" | vm.gc == \"G1\"\n+ * @requires vm.gc.G1\n@@ -36,1 +36,14 @@\n- * @run driver gc.stringdedup.TestStringDeduplicationInterned\n+ * @run driver gc.stringdedup.TestStringDeduplicationInterned G1\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationInterned\n+ * @summary Test string deduplication of interned strings\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationInterned Z\n@@ -41,0 +54,1 @@\n+        TestStringDeduplicationTools.selectGC(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationInterned.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc == \"null\" | vm.gc == \"G1\" | vm.gc == \"Shenandoah\"\n+ * @requires vm.gc.G1\n@@ -36,1 +36,27 @@\n- * @run driver gc.stringdedup.TestStringDeduplicationPrintOptions\n+ * @run driver gc.stringdedup.TestStringDeduplicationPrintOptions G1\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationPrintOptions\n+ * @summary Test string deduplication print options\n+ * @bug 8029075\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationPrintOptions Shenandoah\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationPrintOptions\n+ * @summary Test string deduplication print options\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationPrintOptions Z\n@@ -41,0 +67,1 @@\n+        TestStringDeduplicationTools.selectGC(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationPrintOptions.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc == \"null\" | vm.gc == \"G1\" | vm.gc == \"Shenandoah\"\n+ * @requires vm.gc.G1\n@@ -36,1 +36,27 @@\n- * @run driver gc.stringdedup.TestStringDeduplicationTableResize\n+ * @run driver gc.stringdedup.TestStringDeduplicationTableResize G1\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationTableResize\n+ * @summary Test string deduplication table resize\n+ * @bug 8029075\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationTableResize Shenandoah\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationTableResize\n+ * @summary Test string deduplication table resize\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationTableResize Z\n@@ -41,0 +67,1 @@\n+        TestStringDeduplicationTools.selectGC(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTableResize.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -53,0 +53,2 @@\n+    private static String selectedGC = null;\n+\n@@ -66,0 +68,4 @@\n+    public static void selectGC(String[] args) {\n+        selectedGC = args[0];\n+    }\n+\n@@ -229,0 +235,1 @@\n+        args.add(\"-XX:+Use\" + selectedGC + \"GC\");\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTools.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.gc == \"null\" | vm.gc == \"G1\" | vm.gc == \"Shenandoah\"\n+ * @requires vm.gc.G1\n@@ -36,1 +36,27 @@\n- * @run driver gc.stringdedup.TestStringDeduplicationYoungGC\n+ * @run driver gc.stringdedup.TestStringDeduplicationYoungGC G1\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationYoungGC\n+ * @summary Test string deduplication during young GC\n+ * @bug 8029075\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationYoungGC Shenandoah\n+ *\/\n+\n+\/*\n+ * @test TestStringDeduplicationYoungGC\n+ * @summary Test string deduplication during young GC\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationYoungGC Z\n@@ -41,0 +67,1 @@\n+        TestStringDeduplicationTools.selectGC(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationYoungGC.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * Note: This runs the Arena portion of the gtests with UseMallocOnly\n+ * (restricted to debug since UseMallocOnly is debug-only)\n+ *\/\n+\n+\/* @test\n+ * @bug 8271242\n+ * @summary Run arena tests with UseMallocOnly\n+ * @requires vm.debug\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @requires vm.flagless\n+ * @run main\/native GTestWrapper --gtest_filter=Arena* -XX:+UseMallocOnly\n+ *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/ArenaGtests.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * This tests NMT by running gtests with NMT enabled.\n+ *\n+ * To save time, we just run them for debug builds (where we would catch assertions) and only a selection of tests\n+ * (namely, NMT tests themselves, and - for the detail statistics - os tests, since those reserve a lot and stress NMT)\n+ *\/\n+\n+\/* @test id=nmt-summary\n+ * @summary Run NMT-related gtests with summary statistics\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @requires vm.debug\n+ * @run main\/native GTestWrapper --gtest_filter=NMT* -XX:NativeMemoryTracking=summary\n+ *\/\n+\n+\/* @test id=nmt-detail\n+ * @summary Run NMT-related gtests with detailed statistics\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @requires vm.debug\n+ * @run main\/native GTestWrapper --gtest_filter=NMT*:os* -XX:NativeMemoryTracking=detail\n+ *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/NMTGtests.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CDSCompressedKPtrs\/CDSCompressedKPtrs.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CDSCompressedKPtrs\/XShareAuto.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/FormatCheckingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+ * @requires vm.flagless\n@@ -77,0 +78,1 @@\n+        output.shouldNotHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/JsrRewriting.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+ * @requires vm.flagless\n@@ -76,0 +77,1 @@\n+        output.shouldNotHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/OomWhileParsingRepeatedJsr.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/TestCheckedExceptions.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,1 @@\n- * @compile -XDignore.symbol.file UnsupportedClassFileVersion.java\n- * @run main UnsupportedClassFileVersion\n+ * @run driver UnsupportedClassFileVersion\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/UnsupportedClassFileVersion.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8048190\n+ * @summary Test that the NCDFE saves the stack trace for the original exception\n+ *          during class initialization with ExceptionInInitializationError,\n+ *          and doesn't prevent the classes in the stacktrace to be unloaded.\n+ * @requires vm.opt.final.ClassUnloading\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -Xmn8m -XX:+UnlockDiagnosticVMOptions -Xlog:class+unload -XX:+WhiteBoxAPI InitExceptionUnloadTest\n+ *\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+import sun.hotspot.WhiteBox;\n+import jdk.test.lib.classloader.ClassUnloadCommon;\n+\n+public class InitExceptionUnloadTest {\n+    static public class ThrowsRuntimeException { static int x = 1\/0; }\n+    static public class ThrowsError { static { if (true) throw new Error(); } }\n+    static public class SpecialException extends RuntimeException {\n+        SpecialException(int count, String message) {\n+            super(message + count);\n+        }\n+    }\n+    static public class ThrowsSpecialException {\n+        static {\n+            if (true) throw new SpecialException(3, \"Very Special \");\n+        }\n+    }\n+\n+    static public class ThrowsOOM {\n+        static {\n+            if (true) {\n+                \/\/ Actually getting an OOM might be fragile but it was tested.\n+                throw new OutOfMemoryError(\"Java heap space\");\n+            }\n+        }\n+    }\n+\n+    private static void verify_stack(Throwable e, String expected, String cause) throws Exception {\n+        ByteArrayOutputStream byteOS = new ByteArrayOutputStream();\n+        PrintStream printStream = new PrintStream(byteOS);\n+        e.printStackTrace(printStream);\n+        printStream.close();\n+        String stackTrace = byteOS.toString(\"ASCII\");\n+        if (!stackTrace.contains(expected) || (cause != null && !stackTrace.contains(cause))) {\n+            throw new RuntimeException(expected + \" and \" + cause + \" missing from stacktrace\");\n+        }\n+    }\n+\n+    static String[] expected = new String[] {\n+        \"java.lang.ExceptionInInitializerError\",\n+        \"Caused by: java.lang.ArithmeticException: \/ by zero\",\n+        \"java.lang.NoClassDefFoundError: Could not initialize class InitExceptionUnloadTest$ThrowsRuntimeException\",\n+        \"Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.ArithmeticException: \/ by zero [in thread\",\n+        \"java.lang.Error\",\n+        null,\n+        \"java.lang.NoClassDefFoundError: Could not initialize class InitExceptionUnloadTest$ThrowsError\",\n+        \"Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.Error [in thread\",\n+        \"java.lang.ExceptionInInitializerError\",\n+        \"Caused by: InitExceptionUnloadTest$SpecialException: Very Special 3\",\n+        \"java.lang.NoClassDefFoundError: Could not initialize class InitExceptionUnloadTest$ThrowsSpecialException\",\n+        \"Caused by: java.lang.ExceptionInInitializerError: Exception InitExceptionUnloadTest$SpecialException: Very Special 3\",\n+        \"java.lang.OutOfMemoryError\",\n+        \"Java heap space\",\n+        \"java.lang.NoClassDefFoundError: Could not initialize class InitExceptionUnloadTest$ThrowsOOM\",\n+        \"Caused by: java.lang.ExceptionInInitializerError: Exception java.lang.OutOfMemoryError: Java heap space [in thread\"\n+    };\n+\n+    static String[] classNames = new String[] {\n+        \"InitExceptionUnloadTest$ThrowsRuntimeException\",\n+        \"InitExceptionUnloadTest$ThrowsError\",\n+        \"InitExceptionUnloadTest$ThrowsSpecialException\",\n+        \"InitExceptionUnloadTest$ThrowsOOM\" };\n+\n+    public static WhiteBox wb = WhiteBox.getWhiteBox();\n+\n+    static void test() throws Throwable {\n+        ClassLoader cl = ClassUnloadCommon.newClassLoader();\n+        int i = 0;\n+        for (String className : classNames) {\n+            for (int tries = 2; tries-- > 0; ) {\n+                System.err.println(\"--- try to load \" + className);\n+                try {\n+                    Class<?> c = cl.loadClass(className);\n+                    Object inst = c.newInstance();\n+                } catch (Throwable t) {\n+                    t.printStackTrace();\n+                    System.err.println();\n+                    System.err.println(\"Check results\");\n+                    verify_stack(t, expected[i], expected[i+1]);\n+                    i += 2;\n+                    System.err.println();\n+                }\n+            }\n+        }\n+        cl = null;\n+        ClassUnloadCommon.triggerUnloading();  \/\/ should unload these classes\n+        for (String className : classNames) {\n+          ClassUnloadCommon.failIf(wb.isClassAlive(className), \"should be unloaded\");\n+        }\n+    }\n+    public static void main(java.lang.String[] unused) throws Throwable {\n+        test();\n+        test();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassInitErrors\/InitExceptionUnloadTest.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassPointers.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassSpaceSize.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedKlassPointerAndOops.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/ObjectAlignment.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/UseCompressedOops.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Dictionary\/CleanProtectionDomain.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Dictionary\/ProtectionDomainCacheTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+        output.shouldNotHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/EnclosingMethodAttr\/EnclMethodAttr.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271003\n+ * @summary CLASSPATH env variable setting should not be truncated in a hs err log.\n+ * @requires vm.debug\n+ * @library \/test\/lib\n+ * @run driver ClassPathEnvVar\n+ *\/\n+import java.io.File;\n+import java.util.Map;\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class ClassPathEnvVar {\n+    private static final String pathSep = File.pathSeparator;\n+    private static final String sep = File.separator;\n+    private static final String classPathEnv = \"CLASSPATH\";\n+    private static final String endPath = \"end-path\";\n+\n+    public static void main(String[] args) throws Exception {\n+        OutputAnalyzer output = runCrasher().shouldContain(\"CreateCoredumpOnCrash turned off, no core file dumped\")\n+                                             .shouldNotHaveExitValue(0);\n+\n+        checkErrorLog(output);\n+\n+    }\n+    private static OutputAnalyzer runCrasher() throws Exception {\n+        ProcessBuilder pb =\n+            ProcessTools.createJavaProcessBuilder(\"-XX:-CreateCoredumpOnCrash\",\n+                                                  \"-XX:ErrorHandlerTest=14\",\n+                                                  \"-XX:+ErrorFileToStdout\");\n+\n+        \/\/ Obtain the CLASSPATH setting and expand it to more than 2000 chars.\n+        Map<String, String> envMap = pb.environment();\n+        String cp = envMap.get(classPathEnv);\n+        if (cp == null) {\n+            cp = \"this\" + sep + \"is\" + sep + \"dummy\" + sep + \"path\";\n+        }\n+        while (cp.length() < 2000) {\n+            cp += pathSep + cp;\n+        }\n+        cp += pathSep + endPath;\n+        envMap.put(classPathEnv, cp);\n+\n+        return new OutputAnalyzer(pb.start());\n+    }\n+\n+    private static void checkErrorLog(OutputAnalyzer output) throws Exception {\n+        String classPathLine = output.firstMatch(\"CLASSPATH=.*\");\n+\n+        if (classPathLine == null) {\n+            throw new RuntimeException(\"CLASSPATH setting not found in hs err log.\");\n+        }\n+\n+        \/\/ Check if the CLASSPATH line has been truncated.\n+        if (!classPathLine.endsWith(endPath)) {\n+            throw new RuntimeException(\"CLASSPATH was truncated in the hs err log.\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ClassPathEnvVar.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationC1Tests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationOldCHATests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokeinterfaceTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokespecialTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokevirtualTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LoadClassNegative.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LongBCP.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestResize.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/MaxMetaspaceSizeEnvVarTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/MaxMetaspaceSizeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/CDS.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/CheckJNI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/Instrumentation.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/JMX.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/JVMTI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/NMT.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ * @requires vm.flagless\n@@ -96,0 +97,1 @@\n+            output_detail.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorUsedDeflationThresholdTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @requires vm.flagless\n@@ -94,0 +95,1 @@\n+            output.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/SyncOnValueBasedClassTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * With JDK-8256844 \"Make NMT late-initializable\", NMT should work out of the box with jdk launchers other than\n+ * java.exe.\n+ *\n+ * Test that assumption (we test with javac and jar and leave it at that, other tools should be fine as well)\n+ *\/\n+\n+\/**\n+ * @test id=javac\n+ * @bug 8256844\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver NMTForOtherLaunchersTest javac\n+ *\/\n+\n+\/**\n+ * @test id=jar\n+ * @bug 8256844\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver NMTForOtherLaunchersTest jar\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.JDKToolFinder;\n+\n+public class NMTForOtherLaunchersTest {\n+    public static void main(String args[]) throws Exception {\n+        String tool = args[0];\n+        ProcessBuilder pb = new ProcessBuilder();\n+        pb.command(new String[]{\n+                JDKToolFinder.getJDKTool(tool),\n+                \"-J-XX:NativeMemoryTracking=summary\",\n+                \"-J-XX:+UnlockDiagnosticVMOptions\",\n+                \"-J-XX:+PrintNMTStatistics\",\n+                \"--help\"});\n+        System.out.println(pb.command());\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        \/\/ We should not see the \"wrong launcher?\" message, which would indicate\n+        \/\/ an older JDK, and we should see the NMT stat output when the VM shuts down.\n+        output.shouldNotContain(\"wrong launcher\");\n+        output.shouldContain(\"Native Memory Tracking:\");\n+        output.shouldMatch(\"Total: reserved=\\\\d+, committed=\\\\d+.*\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/NMTForOtherLaunchersTest.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,220 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * This test tests the ability of NMT to work correctly when masses of allocations happen before NMT is initialized;\n+ * That pre-NMT-init phase starts when the libjvm is loaded and the C++ dynamic initialization runs, and ends when\n+ * NMT is initialized after the VM parsed its arguments in CreateJavaVM.\n+ *\n+ * During that phase, NMT is not yet initialized fully; C-heap allocations are kept in a special lookup table to\n+ * be able to tell them apart from post-NMT-init initializations later. For details, see nmtPreInit.hpp.\n+ *\n+ * The size of this table is limited, and its load factor affects lookup time; that lookup time is paid throughout\n+ * the VM life for all os::free() calls, regardless if NMT is on or not. Therefore we are interested in keeping the\n+ * number of pre-NMT-init allocations low.\n+ *\n+ * Normally, the VM allocates about 500 surviving allocations (allocations which are not freed before NMT initialization\n+ * finishes). The number is mainly influenced by the number of VM arguments, since those get strdup'ed around.\n+ * Therefore, the only direct way to test pre-NMT-init allocations is by feeding the VM a lot of arguments, and this is\n+ * what this test does.\n+ *\n+ *\/\n+\n+\/**\n+ * @test id=normal-off\n+ * @bug 8256844\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver NMTInitializationTest normal off\n+ *\/\n+\n+\/**\n+ * @test id=normal-detail\n+ * @bug 8256844\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver NMTInitializationTest normal detail\n+ *\/\n+\n+\/**\n+ * @test id=default_long-off\n+ * @bug 8256844\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver NMTInitializationTest long off\n+ *\/\n+\n+\/**\n+ * @test id=default_long-detail\n+ * @bug 8256844\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver NMTInitializationTest long detail\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.io.FileWriter;\n+import java.io.PrintWriter;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Random;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class NMTInitializationTest {\n+\n+    final static boolean debug = true;\n+\n+    static String randomString() {\n+        Random r = new Random();\n+        int len = r.nextInt(100) + 100;\n+        StringBuilder bld = new StringBuilder();\n+        for (int i = 0; i < len; i ++) {\n+            bld.append(r.nextInt(26) + 'A');\n+        }\n+        return bld.toString();\n+    }\n+\n+    static Path createCommandFile(int numlines) throws Exception {\n+        String fileName = \"commands_\" + numlines + \".txt\";\n+        FileWriter fileWriter = new FileWriter(fileName);\n+        PrintWriter printWriter = new PrintWriter(fileWriter);\n+        String line = \"-XX:ErrorFile=\" + randomString();\n+        for (long i = 0; i < numlines \/ 2; i++) {\n+            printWriter.println(line);\n+        }\n+        printWriter.close();\n+        return Paths.get(fileName);\n+    }\n+\n+    enum TestMode {\n+        \/\/ call the VM with a normal-ish command line (long but not oudlandishly so). We expect the lookup table after\n+        \/\/ initialization to be sparsely populated and sport very short chain lengths.\n+        mode_normal(30, 5),\n+        \/\/ call the VM with an outlandishly long command line. We expect the lookup table after initialization\n+        \/\/ to be densely populated but hopefully evenly distributed.\n+        mode_long(20000, 20);\n+\n+        final int num_command_line_args;\n+        final int expected_max_chain_len;\n+\n+        TestMode(int num_command_line_args, int expected_max_chain_len) {\n+            this.num_command_line_args = num_command_line_args;\n+            this.expected_max_chain_len = expected_max_chain_len;\n+        }\n+    };\n+\n+    enum NMTMode {\n+      off, summary, detail\n+    };\n+\n+    public static void main(String args[]) throws Exception {\n+        TestMode testMode = TestMode.valueOf(\"mode_\" + args[0]);\n+        NMTMode nmtMode = NMTMode.valueOf(args[1]);\n+\n+        System.out.println(\"Test mode: \" + testMode + \", NMT mode: \" + nmtMode);\n+\n+        Path commandLineFile = createCommandFile(testMode.num_command_line_args);\n+\n+        ArrayList<String> vmArgs = new ArrayList<>();\n+        vmArgs.add(\"-Xlog:nmt\");\n+        vmArgs.add(\"-XX:NativeMemoryTracking=\" + nmtMode.name());\n+        vmArgs.add(\"-XX:+UnlockDiagnosticVMOptions\");\n+        vmArgs.add(\"-XX:+PrintNMTStatistics\");\n+\n+        if (commandLineFile != null) {\n+            vmArgs.add(\"@\" + commandLineFile.getFileName());\n+        }\n+        vmArgs.add(\"-version\");\n+\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vmArgs);\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        if (debug) {\n+            output.reportDiagnosticSummary();\n+        }\n+\n+        output.shouldHaveExitValue(0);\n+\n+        \/\/ Now evaluate the output of -Xlog:nmt\n+        \/\/ We expect something like:\n+        \/\/ [0.001s][info][nmt] NMT initialized: detail\n+        \/\/ [0.001s][info][nmt] Preinit state:\n+        \/\/ [0.001s][info][nmt] entries: 342 (primary: 342, empties: 7577), sum bytes: 12996, longest chain length: 1\n+        \/\/ [0.001s][info][nmt] pre-init mallocs: 375, pre-init reallocs: 6, pre-init frees: 33, pre-to-post reallocs: 4, pre-to-post frees: 0\n+\n+        output.shouldContain(\"NMT initialized: \" + nmtMode.name());\n+        output.shouldContain(\"Preinit state:\");\n+        String regex = \".*entries: (\\\\d+).*sum bytes: (\\\\d+).*longest chain length: (\\\\d+).*\";\n+        output.shouldMatch(regex);\n+        String line = output.firstMatch(regex, 0);\n+        if (line == null) {\n+            throw new RuntimeException(\"expected: \" + regex);\n+        }\n+        System.out.println(line);\n+        Pattern p = Pattern.compile(regex);\n+        Matcher mat = p.matcher(line);\n+        mat.matches();\n+        int entries = Integer.parseInt(mat.group(1));\n+        int sum_bytes = Integer.parseInt(mat.group(2));\n+        int longest_chain = Integer.parseInt(mat.group(3));\n+        System.out.println(\"found: \" + entries + \" - \" + sum_bytes + longest_chain + \".\");\n+\n+        \/\/ Now we test the state of the internal lookup table, and through our assumptions about\n+        \/\/   early pre-NMT-init allocations:\n+        \/\/ The normal allocation count of surviving pre-init allocations is around 300-500, with the sum of allocated\n+        \/\/   bytes of a few dozen KB. We check these boundaries (with a very generous overhead) to see if the numbers are\n+        \/\/   way off. If they are, we may either have a leak or just a lot more allocations than we thought before\n+        \/\/   NMT initialization. Both cases should be investigated. Even if the allocations are valid, too many of them\n+        \/\/   stretches the limits of the lookup map, and therefore may cause slower lookup. We should then either change\n+        \/\/   the coding, reducing the number of allocations. Or enlarge the lookup table.\n+\n+        \/\/ Apply some sensible assumptions\n+        if (entries > testMode.num_command_line_args + 2000) { \/\/ Note: normal baseline is 400-500\n+            throw new RuntimeException(\"Suspiciously high number of pre-init allocations.\");\n+        }\n+        if (sum_bytes > 128 * 1024 * 1024) { \/\/ Note: normal baseline is ~30-40KB\n+            throw new RuntimeException(\"Suspiciously high pre-init memory usage.\");\n+        }\n+        if (longest_chain > testMode.expected_max_chain_len) {\n+            \/\/ Under normal circumstances, load factor of the map should be about 0.1. With a good hash distribution, we\n+            \/\/ should rarely see even a chain > 1. Warn if we see exceedingly long bucket chains, since this indicates\n+            \/\/ either that the hash algorithm is inefficient or we have a bug somewhere.\n+            throw new RuntimeException(\"Suspiciously long bucket chains in lookup table.\");\n+        }\n+\n+        \/\/ Finally, check that we see our final NMT report:\n+        if (nmtMode != NMTMode.off) {\n+            output.shouldContain(\"Native Memory Tracking:\");\n+            output.shouldMatch(\"Total: reserved=\\\\d+, committed=\\\\d+.*\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/NMTInitializationTest.java","additions":220,"deletions":0,"binary":false,"changes":220,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/PerfMemDestroy\/PerfMemDestroy.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/PrintStringTableStats\/PrintStringTableStatsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @bug 8181143\n+ * @bug 8181143 8269523\n@@ -31,0 +31,1 @@\n+ * @requires vm.flagless\n@@ -39,0 +40,3 @@\n+    \/\/ A static array is unlikely to be optimised away by the JIT.\n+    static Object[] arr;\n+\n@@ -41,1 +45,1 @@\n-            Object[] arr = new Object[10_000_000];\n+            arr = new Object[10_000_000];\n@@ -45,0 +49,2 @@\n+            \/\/ Try to force at least one full GC cycle.\n+            System.gc();\n@@ -54,3 +60,3 @@\n-        \/\/ These should fail: Serial is not very fast. Traversing 10M objects in 5 ms\n-        \/\/ means less than 0.5 ns per object, which is not doable.\n-        for (int delay : new int[]{0, 1, 5}) {\n+        \/\/ These should fail: Serial is not very fast but we have seen the test\n+        \/\/ execute as quickly as 2ms!\n+        for (int delay : new int[]{0, 1}) {\n@@ -69,0 +75,1 @@\n+                \"-Xlog:gc\",\n@@ -77,1 +84,1 @@\n-            output.shouldMatch(\"VM operation took too long\");\n+            output.shouldContain(\"VM operation took too long\");\n@@ -80,0 +87,1 @@\n+        output.reportDiagnosticSummary();\n@@ -82,1 +90,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortOnVMOperationTimeout.java","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @requires vm.flagless\n@@ -34,1 +35,1 @@\n- * @build TestAbortVMOnSafepointTimeout\n+ * @build sun.hotspot.WhiteBox\n@@ -36,1 +37,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI TestAbortVMOnSafepointTimeout\n+ * @run driver TestAbortVMOnSafepointTimeout\n@@ -58,1 +59,1 @@\n-        output.shouldMatch(\"Timed out while spinning to reach a safepoint.\");\n+        output.shouldContain(\"Timed out while spinning to reach a safepoint.\");\n@@ -60,1 +61,1 @@\n-            output.shouldMatch(\"Safepoint sync time longer than\");\n+            output.shouldContain(\"Safepoint sync time longer than\");\n@@ -62,1 +63,1 @@\n-            output.shouldMatch(\"SIGILL\");\n+            output.shouldContain(\"SIGILL\");\n@@ -64,1 +65,1 @@\n-                output.shouldMatch(\"(sent by kill)\");\n+                output.shouldContain(\"(sent by kill)\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortVMOnSafepointTimeout.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,1 @@\n- * @compile LargeClassTest.java\n- * @run main LargeClassTest\n+ * @run driver LargeClassTest\n","filename":"test\/hotspot\/jtreg\/runtime\/StackTrace\/LargeClassTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @requires !(os.family == \"linux\" & os.maxMemory < 512M)\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/Fibonacci.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,5 +88,0 @@\n-\n-    static void usage() {\n-        System.err.println(\"Usage: java TestThreadDumpSMRInfo [-v]\");\n-        System.exit(1);\n-    }\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestThreadDumpSMRInfo.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/StackTraceLogging.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/TestCatchThrowableOOM.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/TestMaxJavaStackTraceDepth.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        \/\/ Force -Xlog:cds=warning to supress the CDS logs.\n+        \/\/ Force the log level to warning for all tags to supressed the CDS logs. Also disable the timestamp.\n@@ -54,1 +54,1 @@\n-        opts.addSuffix(\"-showversion\", \"-Xlog:cds=warning\", \"ServiceLoaderApp\");\n+        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"ServiceLoaderApp\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ServiceLoaderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,33 @@\n- * @run driver SharedBaseAddress\n+ * @run driver SharedBaseAddress 0\n+ *\/\n+\n+\/**\n+ * @test SharedBaseAddress\n+ * @bug 8265705 8267351\n+ * @summary Test variety of values for SharedBaseAddress, making sure\n+ *          VM handles normal values as well as edge values w\/o a crash.\n+ * @requires vm.cds\n+ * @library \/test\/lib\n+ * @run driver SharedBaseAddress 1\n+ *\/\n+\n+\/**\n+ * @test SharedBaseAddress\n+ * @bug 8265705 8267351\n+ * @summary Test variety of values for SharedBaseAddress, making sure\n+ *          VM handles normal values as well as edge values w\/o a crash.\n+ * @requires vm.cds\n+ * @requires vm.bits == 64\n+ * @library \/test\/lib\n+ * @run driver SharedBaseAddress 0 provoke\n+ *\/\n+\n+\/**\n+ * @test SharedBaseAddress\n+ * @bug 8265705 8267351\n+ * @summary Test variety of values for SharedBaseAddress, making sure\n+ *          VM handles normal values as well as edge values w\/o a crash.\n+ * @requires vm.cds\n+ * @requires vm.bits == 64\n+ * @library \/test\/lib\n+ * @run driver SharedBaseAddress 1 provoke\n@@ -61,0 +93,8 @@\n+        int mid = testTable.length \/ 2;\n+        int start = args[0].equals(\"0\") ? 0 : mid;\n+        int end   = args[0].equals(\"0\") ? mid : testTable.length;\n+        boolean provoke = (args.length > 1 && args[1].equals(\"provoke\"));\n+\n+        \/\/ provoke == true: we want to increase the chance that mapping the generated archive at the designated base\n+        \/\/ succeeds, to test Klass pointer encoding at that weird location. We do this by sizing heap + class space\n+        \/\/ small, and by switching off compressed oops.\n@@ -62,11 +102,7 @@\n-        for (int run = 0; run < 2; run ++) {\n-            \/\/ We run twice:\n-            \/\/ Once, where we want to increase the chance that mapping the generated archive at the designated base\n-            \/\/ succeeds, to test Klass pointer encoding at that weird location. We do this by sizing heap + class space\n-            \/\/ small, and by switching off compressed oops.\n-            \/\/ On the second run, we don't do this but instead go with default parameters. This is more of a test of\n-            \/\/ CDS' ability to recover if mapping at runtime fails.\n-            for (String testEntry : testTable) {\n-                String filename = \"SharedBaseAddress-base\" + testEntry + \"-run\" + run + \".jsa\";\n-                System.out.println(\"sharedBaseAddress = \" + testEntry);\n-                CDSOptions opts = (new CDSOptions())\n+        \/\/ provoke == false:  we just go with default parameters. This is more of a test of\n+        \/\/ CDS' ability to recover if mapping at runtime fails.\n+        for (int i = start; i < end; i++) {\n+            String testEntry = testTable[i];\n+            String filename = \"SharedBaseAddress-base\" + testEntry + \".jsa\";\n+            System.out.println(\"sharedBaseAddress = \" + testEntry);\n+            CDSOptions opts = (new CDSOptions())\n@@ -82,12 +118,16 @@\n-                if (run == 0 && Platform.is64bit()) {\n-                    opts.addPrefix(\"-Xmx128m\")\n-                        .addPrefix(\"-XX:CompressedClassSpaceSize=32m\")\n-                        .addPrefix(\"-XX:-UseCompressedOops\");\n-                }\n-                CDSTestUtils.createArchiveAndCheck(opts);\n-                OutputAnalyzer out = CDSTestUtils.runWithArchiveAndCheck(opts);\n-                if (testEntry.equals(\"0\")) {\n-                    out.shouldContain(\"Archive(s) were created with -XX:SharedBaseAddress=0. Always map at os-selected address.\")\n-                            .shouldContain(\"Try to map archive(s) at an alternative address\")\n-                            .shouldNotMatch(failedPattern);\n-                }\n+            if (provoke) {\n+                opts.addPrefix(\"-Xmx128m\")\n+                    .addPrefix(\"-XX:CompressedClassSpaceSize=32m\")\n+                    .addPrefix(\"-XX:-UseCompressedOops\");\n+            }\n+            if (Platform.isDebugBuild()) {\n+                \/\/ Make VM start faster in debug build with large heap.\n+                opts.addPrefix(\"-XX:-ZapUnusedHeapArea\");\n+            }\n+\n+            CDSTestUtils.createArchiveAndCheck(opts);\n+            OutputAnalyzer out = CDSTestUtils.runWithArchiveAndCheck(opts);\n+            if (testEntry.equals(\"0\")) {\n+                out.shouldContain(\"Archive(s) were created with -XX:SharedBaseAddress=0. Always map at os-selected address.\")\n+                   .shouldContain(\"Try to map archive(s) at an alternative address\")\n+                   .shouldNotMatch(failedPattern);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedBaseAddress.java","additions":64,"deletions":24,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,2 @@\n-        if (wb.areSharedStringsIgnored()) {\n-            System.out.println(\"Shared strings are ignored, assuming PASS\");\n+        if (!wb.areSharedStringsMapped()) {\n+            System.out.println(\"Shared strings are not mapped, assuming PASS\");\n@@ -46,1 +46,1 @@\n-        if (wb.isShared(internedS)) {\n+        if (wb.isSharedInternedString(internedS)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStringsWb.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @modules jdk.jfr\n@@ -31,1 +32,1 @@\n- * @compile test-classes\/ArrayListTest.java\n+ * @compile test-classes\/DumpClassListApp.java\n@@ -43,1 +44,1 @@\n-        String[] appClass = new String[] {\"ArrayListTest\"};\n+        String[] appClass = new String[] {\"DumpClassListApp\"};\n@@ -50,1 +51,1 @@\n-        String source = \"package java.lang; \"                       +\n+        String source = \"package jdk.jfr; \"                         +\n@@ -57,2 +58,2 @@\n-        ClassFileInstaller.writeClassToDisk(\"java\/lang\/NewClass\",\n-             InMemoryJavaCompiler.compile(\"java.lang.NewClass\", source, \"--patch-module=java.base\"),\n+        ClassFileInstaller.writeClassToDisk(\"jdk\/jfr\/NewClass\",\n+             InMemoryJavaCompiler.compile(\"jdk.jfr.NewClass\", source, \"--patch-module=jdk.jfr\"),\n@@ -61,1 +62,1 @@\n-        String patchJar = JarBuilder.build(\"javabase\", \"java\/lang\/NewClass\");\n+        String patchJar = JarBuilder.build(\"jdk_jfr\", \"jdk\/jfr\/NewClass\");\n@@ -79,1 +80,1 @@\n-                                   \"--patch-module=java.base=\" + patchJar,\n+                                   \"--patch-module=jdk.jfr=\" + patchJar,\n@@ -93,0 +94,1 @@\n+                       \"-Xlog:cds+class=debug\",\n@@ -97,1 +99,4 @@\n-            .shouldContain(\"[info][class,load] boot.append.Foo\");\n+            .shouldNotContain(\"Preload Warning: Cannot find jdk\/jfr\/NewClass\")\n+            .shouldMatch(\"class,load *. boot.append.Foo\")      \/\/ from -Xlog:class+load\n+            .shouldMatch(\"cds,class.*boot  boot.append.Foo\")   \/\/ from -Xlog:cds+class\n+            .shouldNotMatch(\"class,load *. jdk.jfr.NewClass\"); \/\/ from -Xlog:class+load\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassList.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -134,1 +134,2 @@\n-    \/\/ we support only sun\/hotspot\/WhiteBox$WhiteBoxPermission. See JDK-8199290\n+    \/\/ we support only jdk\/test\/whitebox\/WhiteBox$WhiteBoxPermission and\n+    \/\/ sun\/hotspot\/WhiteBox$WhiteBoxPermission. See JDK-8199290\n@@ -136,2 +137,4 @@\n-        boolean seenWB = false;\n-        boolean seenWBInner = false;\n+        boolean seenNewWb = false;\n+        boolean seenNewWbInner = false;\n+        boolean seenOldWb = false;\n+        boolean seenOldWbInner = false;\n@@ -140,2 +143,4 @@\n-        final String wb = \"sun\/hotspot\/WhiteBox\";\n-        final String wbInner = \"sun\/hotspot\/WhiteBox$WhiteBoxPermission\";\n+        final String newWb = \"jdk\/test\/whitebox\/WhiteBox\";\n+        final String newWbInner = newWb + \"$WhiteBoxPermission\";\n+        final String oldWb = \"sun\/hotspot\/WhiteBox\";\n+        final String oldWbInner = oldWb + \"$WhiteBoxPermission\";\n@@ -149,2 +154,4 @@\n-            case wb:      seenWB      = true; break;\n-            case wbInner: seenWBInner = true; break;\n+            case newWb:      seenNewWb      = true; break;\n+            case newWbInner: seenNewWbInner = true; break;\n+            case oldWb:      seenOldWb      = true; break;\n+            case oldWbInner: seenOldWbInner = true; break;\n@@ -153,2 +160,5 @@\n-        if (seenWB && !seenWBInner) {\n-            list.add(wbInner);\n+        if (seenNewWb && !seenNewWbInner) {\n+            list.add(newWbInner);\n+        }\n+        if (seenOldWb && !seenOldWbInner) {\n+            list.add(oldWbInner);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/JarBuilder.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @bug 8272345\n@@ -29,1 +30,2 @@\n- * @requires os.family == \"linux\"\n+ * @comment This test doesn't work on Windows because it depends on symlinks\n+ * @requires os.family != \"windows\"\n@@ -35,4 +37,0 @@\n-\/\/ This test works only on Linux because it depends on symlinks and the name of the hotspot DLL (libjvm.so).\n-\/\/ It probably doesn't work on Windows.\n-\/\/ TODO: change libjvm.so to libjvm.dylib on MacOS, before adding \"@requires os.family == mac\"\n-\n@@ -57,1 +55,2 @@\n-            TestCommon.executeAndLog(pb, \"dump\");\n+            TestCommon.executeAndLog(pb, \"dump\")\n+                      .shouldHaveExitValue(0);\n@@ -66,0 +65,1 @@\n+            out.shouldHaveExitValue(0);\n@@ -81,0 +81,1 @@\n+            out.shouldHaveExitValue(0);\n@@ -94,1 +95,2 @@\n-            TestCommon.executeAndLog(pb, \"dump\");\n+            TestCommon.executeAndLog(pb, \"dump\")\n+                      .shouldHaveExitValue(0);\n@@ -105,0 +107,1 @@\n+            out.shouldHaveExitValue(0);\n@@ -132,0 +135,1 @@\n+        final String jvmLib = System.mapLibraryName(\"jvm\");\n@@ -143,1 +147,1 @@\n-                if (child.equals(\"libjvm.so\") || child.equals(\"java\")) {\n+                if (child.equals(jvmLib) || child.equals(\"java\")) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/MoveJDKTest.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-                               \"Pre JDK 6 class not supported by CDS\");\n+                               \"Skipping Hello: Old class has been linked\");\n@@ -86,1 +86,1 @@\n-                               \"Pre JDK 6 class not supported by CDS\");\n+                               \"Skipping Hello: Old class has been linked\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/OldClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                                   \"Pre JDK 6 class not supported by CDS: 49.0 OldInfDefMeth\");\n+                                   \"Skipping OldInfDefMeth: Old class has been linked\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/OldInfExtendsInfDefMeth.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                                   \"Pre JDK 6 class not supported by CDS: 49.0 OldSuper\",\n+                                   \"Skipping OldSuper: Old class has been linked\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/OldSuperClass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-                                   \"Pre JDK 6 class not supported by CDS: 49.0 OldInf\",\n+                                   \"Skipping OldInf: Old class has been linked\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/OldSuperInf.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                                   \"Pre JDK 6 class not supported by CDS: 49.0 OldInf\",\n+                                   \"Skipping OldInf: Old class has been linked\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/OldSuperInfIndirect.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import jdk.test.lib.cds.CDSArchiveUtils;\n@@ -38,1 +39,0 @@\n-import jdk.test.lib.Utils;\n@@ -40,2 +40,0 @@\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n@@ -43,15 +41,0 @@\n-import java.nio.ByteBuffer;\n-import java.nio.ByteOrder;\n-import java.nio.channels.FileChannel;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n-import java.nio.file.StandardOpenOption;\n-import static java.nio.file.StandardOpenOption.READ;\n-import static java.nio.file.StandardOpenOption.WRITE;\n-import java.util.ArrayList;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Random;\n-import sun.hotspot.WhiteBox;\n@@ -60,13 +43,0 @@\n-    public static WhiteBox wb;\n-    public static int offset_magic;     \/\/ CDSFileMapHeaderBase::_magic\n-    public static int offset_version;   \/\/ CDSFileMapHeaderBase::_version\n-    public static int offset_jvm_ident; \/\/ FileMapHeader::_jvm_ident\n-    public static int sp_offset_crc;    \/\/ CDSFileMapRegion::_crc\n-    public static int file_header_size = -1;\/\/ total size of header, variant, need calculation\n-    public static int CDSFileMapRegion_size; \/\/ size of CDSFileMapRegion\n-    public static int sp_offset;       \/\/ offset of CDSFileMapRegion\n-    public static int sp_used_offset;  \/\/ offset of CDSFileMapRegion::_used\n-    public static int size_t_size;     \/\/ size of size_t\n-    public static int int_size;        \/\/ size of int\n-    public static long alignment;      \/\/ MetaspaceShared::core_region_alignment\n-\n@@ -97,186 +67,0 @@\n-    public static void getFileOffsetInfo() throws Exception {\n-        wb = WhiteBox.getWhiteBox();\n-        offset_magic = wb.getOffsetForName(\"FileMapHeader::_magic\");\n-        offset_version = wb.getOffsetForName(\"FileMapHeader::_version\");\n-        offset_jvm_ident = wb.getOffsetForName(\"FileMapHeader::_jvm_ident\");\n-        sp_offset_crc = wb.getOffsetForName(\"CDSFileMapRegion::_crc\");\n-        try {\n-            int nonExistOffset = wb.getOffsetForName(\"FileMapHeader::_non_exist_offset\");\n-            System.exit(-1); \/\/ should fail\n-        } catch (Exception e) {\n-            \/\/ success\n-        }\n-\n-        sp_offset = wb.getOffsetForName(\"FileMapHeader::_space[0]\") - offset_magic;\n-        sp_used_offset = wb.getOffsetForName(\"CDSFileMapRegion::_used\") - sp_offset_crc;\n-        size_t_size = wb.getOffsetForName(\"size_t_size\");\n-        CDSFileMapRegion_size  = wb.getOffsetForName(\"CDSFileMapRegion_size\");\n-        alignment = wb.metaspaceSharedRegionAlignment();\n-    }\n-\n-    public static int getFileHeaderSize(FileChannel fc) throws Exception {\n-        if (file_header_size != -1) {\n-            return file_header_size;\n-        }\n-        \/\/ this is not real header size, it is struct size\n-        int_size = wb.getOffsetForName(\"int_size\");\n-        file_header_size = wb.getOffsetForName(\"file_header_size\");\n-        System.out.println(\"file_header_size      = \" + file_header_size);\n-        file_header_size = (int)align_up_page(file_header_size);\n-        System.out.println(\"file_header_size (aligned to page) = \" + file_header_size);\n-        return file_header_size;\n-    }\n-\n-    public static long align_up_page(long l) throws Exception {\n-        \/\/ wb is obtained in getFileOffsetInfo() which is called first in main() else we should call\n-        \/\/ WhiteBox.getWhiteBox() here first.\n-        int pageSize = wb.getVMPageSize();\n-        return (l + pageSize -1) & (~ (pageSize - 1));\n-    }\n-\n-    private static long getRandomBetween(long start, long end) throws Exception {\n-        if (start > end) {\n-            throw new IllegalArgumentException(\"start must be less than end\");\n-        }\n-        Random aRandom = Utils.getRandomInstance();\n-        int d = aRandom.nextInt((int)(end - start));\n-        if (d < 1) {\n-            d = 1;\n-        }\n-        return start + d;\n-    }\n-\n-    public static long readInt(FileChannel fc, long offset, int nbytes) throws Exception {\n-        ByteBuffer bb = ByteBuffer.allocate(nbytes);\n-        bb.order(ByteOrder.nativeOrder());\n-        fc.position(offset);\n-        fc.read(bb);\n-        return  (nbytes > 4 ? bb.getLong(0) : bb.getInt(0));\n-    }\n-\n-    public static void writeData(FileChannel fc, long offset, ByteBuffer bb) throws Exception {\n-        fc.position(offset);\n-        fc.write(bb);\n-    }\n-\n-    public static FileChannel getFileChannel(File jsaFile) throws Exception {\n-        List<StandardOpenOption> arry = new ArrayList<StandardOpenOption>();\n-        arry.add(READ);\n-        arry.add(WRITE);\n-        return FileChannel.open(jsaFile.toPath(), new HashSet<StandardOpenOption>(arry));\n-    }\n-\n-    public static void modifyJsaContentRandomly(File jsaFile) throws Exception {\n-        FileChannel fc = getFileChannel(jsaFile);\n-        \/\/ corrupt random area in the data areas\n-        long[] used    = new long[num_regions];       \/\/ record used bytes\n-        long start0, start, end, off;\n-        int used_offset, path_info_size;\n-\n-        int bufSize;\n-        System.out.printf(\"%-24s%12s%12s%16s\\n\", \"Space Name\", \"Used bytes\", \"Reg Start\", \"Random Offset\");\n-        start0 = getFileHeaderSize(fc);\n-        for (int i = 0; i < num_regions; i++) {\n-            used[i] = get_region_used_size_aligned(fc, i);\n-            start = start0;\n-            for (int j = 0; j < i; j++) {\n-                start += align_up_page(used[j]);\n-            }\n-            end = start + used[i];\n-            if (start == end) {\n-                continue; \/\/ Ignore empty regions\n-            }\n-            off = getRandomBetween(start, end);\n-            System.out.printf(\"%-24s%12d%12d%16d\\n\", shared_region_name[i], used[i], start, off);\n-            if (end - off < 1024) {\n-                bufSize = (int)(end - off + 1);\n-            } else {\n-                bufSize = 1024;\n-            }\n-            ByteBuffer bbuf = ByteBuffer.wrap(new byte[bufSize]);\n-            writeData(fc, off, bbuf);\n-        }\n-        if (fc.isOpen()) {\n-            fc.close();\n-        }\n-    }\n-\n-    static long get_region_used_size_aligned(FileChannel fc, int region) throws Exception {\n-        long n = sp_offset + CDSFileMapRegion_size * region + sp_used_offset;\n-        long used = readInt(fc, n, size_t_size);\n-        used = (used + alignment - 1) & ~(alignment - 1);\n-        return used;\n-    }\n-\n-    public static boolean modifyJsaContent(int region, File jsaFile) throws Exception {\n-        FileChannel fc = getFileChannel(jsaFile);\n-        byte[] buf = new byte[4096];\n-        ByteBuffer bbuf = ByteBuffer.wrap(buf);\n-\n-        long total = 0L;\n-        long[] used = new long[num_regions];\n-        System.out.printf(\"%-24s%12s\\n\", \"Space name\", \"Used bytes\");\n-        for (int i = 0; i < num_regions; i++) {\n-            used[i] = get_region_used_size_aligned(fc, i);\n-            System.out.printf(\"%-24s%12d\\n\", shared_region_name[i], used[i]);\n-            total += used[i];\n-        }\n-        System.out.printf(\"%-24s%12d\\n\", \"Total: \", total);\n-        long header_size = getFileHeaderSize(fc);\n-        long region_start_offset = header_size;\n-        for (int i=0; i<region; i++) {\n-            region_start_offset += used[i];\n-        }\n-        if (used[region] == 0) {\n-            System.out.println(\"Region \" + shared_region_name[region] + \" is empty. Nothing to corrupt.\");\n-            return false;\n-        }\n-        System.out.println(\"Corrupt \" + shared_region_name[region] + \" section, start = \" + region_start_offset\n-                           + \" (header_size + 0x\" + Long.toHexString(region_start_offset-header_size) + \")\");\n-        long bytes_written = 0L;\n-        while (bytes_written < used[region]) {\n-            writeData(fc, region_start_offset + bytes_written, bbuf);\n-            bbuf.clear();\n-            bytes_written += 4096;\n-        }\n-        if (fc.isOpen()) {\n-            fc.close();\n-        }\n-        return true;\n-    }\n-\n-    public static void modifyJsaHeader(File jsaFile) throws Exception {\n-        FileChannel fc = getFileChannel(jsaFile);\n-        \/\/ screw up header info\n-        byte[] buf = new byte[getFileHeaderSize(fc)];\n-        ByteBuffer bbuf = ByteBuffer.wrap(buf);\n-        writeData(fc, 0L, bbuf);\n-        if (fc.isOpen()) {\n-            fc.close();\n-        }\n-    }\n-\n-    public static void modifyJvmIdent(File jsaFile) throws Exception {\n-        FileChannel fc = getFileChannel(jsaFile);\n-        int headerSize = getFileHeaderSize(fc);\n-        System.out.println(\"    offset_jvm_ident \" + offset_jvm_ident);\n-        byte[] buf = new byte[256];\n-        ByteBuffer bbuf = ByteBuffer.wrap(buf);\n-        writeData(fc, (long)offset_jvm_ident, bbuf);\n-        if (fc.isOpen()) {\n-            fc.close();\n-        }\n-    }\n-\n-    public static void modifyHeaderIntField(File jsaFile, long offset, int value) throws Exception {\n-        FileChannel fc = getFileChannel(jsaFile);\n-        int headerSize = getFileHeaderSize(fc);\n-        System.out.println(\"    offset \" + offset);\n-        byte[] buf = ByteBuffer.allocate(4).putInt(value).array();\n-        ByteBuffer bbuf = ByteBuffer.wrap(buf);\n-        writeData(fc, offset, bbuf);\n-        if (fc.isOpen()) {\n-            fc.close();\n-        }\n-    }\n-\n@@ -284,1 +68,1 @@\n-    public static String startNewTestArchive(String testName) {\n+    public static String startNewArchive(String testName) {\n@@ -291,56 +75,0 @@\n-    public static File copyFile(File orgJsaFile, String testName) throws Exception {\n-        File newJsaFile = new File(startNewTestArchive(testName));\n-        if (newJsaFile.exists()) {\n-            if (!newJsaFile.delete()) {\n-                throw new IOException(\"Could not delete file \" + newJsaFile);\n-            }\n-        }\n-        Files.copy(orgJsaFile.toPath(), newJsaFile.toPath(), REPLACE_EXISTING);\n-\n-        \/\/ orgJsaFile is read only, and Files.copy passes on this attribute to newJsaFile.\n-        \/\/ Since we need to modify newJsaFile later, let's set it to r\/w\n-        setReadWritePermission(newJsaFile);\n-\n-        return newJsaFile;\n-    }\n-\n-    \/\/ Copy file with bytes deleted or inserted\n-    \/\/ del -- true, deleted, false, inserted\n-    public static File insertOrDeleteBytes(File orgJsaFile, boolean del) throws Exception {\n-        File newJsaFile = new File(startNewTestArchive(del ? \"delete-bytes\" : \"insert-bytes\"));\n-        try (\n-            FileChannel inputChannel = new FileInputStream(orgJsaFile).getChannel();\n-            FileChannel outputChannel = new FileOutputStream(newJsaFile).getChannel()\n-        ) {\n-            long size = inputChannel.size();\n-            int init_size = getFileHeaderSize(inputChannel);\n-            outputChannel.transferFrom(inputChannel, 0, init_size);\n-            int n = (int)getRandomBetween(0, 1024);\n-            if (del) {\n-                System.out.println(\"Delete \" + n + \" bytes at data start section\");\n-                inputChannel.position(init_size + n);\n-                outputChannel.transferFrom(inputChannel, init_size, size - init_size - n);\n-            } else {\n-                System.out.println(\"Insert \" + n + \" bytes at data start section\");\n-                outputChannel.position(init_size);\n-                outputChannel.write(ByteBuffer.wrap(new byte[n]));\n-                outputChannel.transferFrom(inputChannel, init_size + n , size - init_size);\n-            }\n-        }\n-\n-        return newJsaFile;\n-    }\n-\n-    public static void setReadWritePermission(File file) throws Exception {\n-        if (!file.canRead()) {\n-            if (!file.setReadable(true)) {\n-                throw new IOException(\"Cannot modify file \" + file + \" as readable\");\n-            }\n-        }\n-        if (!file.canWrite()) {\n-            if (!file.setWritable(true)) {\n-                throw new IOException(\"Cannot modify file \" + file + \" as writable\");\n-            }\n-        }\n-    }\n-\n@@ -368,1 +96,1 @@\n-    \/\/   7) randomly corrupt data in each region specified by shared_region_name[]\n+    \/\/   7) randomly corrupt data in each region in shared_region_name[]\n@@ -377,7 +105,0 @@\n-\n-        \/\/ must call to get offset info first!!!\n-        getFileOffsetInfo();\n-        Path currentRelativePath = Paths.get(\"\");\n-        String currentDir = currentRelativePath.toAbsolutePath().toString();\n-        System.out.println(\"Current relative path is: \" + currentDir);\n-        \/\/ get jar file\n@@ -412,0 +133,2 @@\n+        String modifyHeader = startNewArchive(\"modify-header\");\n+        File copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, modifyHeader);\n@@ -413,1 +136,1 @@\n-        modifyJsaHeader(copyFile(orgJsaFile, \"corrupt-header\"));\n+        CDSArchiveUtils.modifyFileHeader(copiedJsa);\n@@ -423,1 +146,4 @@\n-        modifyJvmIdent(copyFile(orgJsaFile, \"modify-jvm-ident\"));\n+\n+        String modJvmIdent = startNewArchive(\"modify-jvm-ident\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, modJvmIdent);\n+        CDSArchiveUtils.modifyJvmIdent(copiedJsa, \"My non-exist jdk 1.000001\");\n@@ -433,1 +159,3 @@\n-        modifyHeaderIntField(copyFile(orgJsaFile, \"modify-magic\"), offset_magic, 0x00000000);\n+        String modMagic = startNewArchive(\"modify-magic\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, modMagic);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetMagic, -1);\n@@ -443,1 +171,3 @@\n-        modifyHeaderIntField(copyFile(orgJsaFile, \"modify-version\"), offset_version, 0x00000000);\n+        String modVersion = startNewArchive(\"modify-version\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, modVersion);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion, 0x00000000);\n@@ -454,2 +184,3 @@\n-            File newJsaFile = copyFile(orgJsaFile, (shared_region_name[i]));\n-            if (modifyJsaContent(i, newJsaFile)) {\n+            String newArchiveName = startNewArchive(shared_region_name[i]);\n+            copiedJsa  = CDSArchiveUtils.copyArchiveFile(orgJsaFile, newArchiveName);\n+            if (CDSArchiveUtils.modifyRegionContent(i, copiedJsa)) {\n@@ -462,3 +193,4 @@\n-        File newJsaFile = copyFile(orgJsaFile, \"header-and-content\");\n-        modifyJsaHeader(newJsaFile);\n-        modifyJsaContent(0, newJsaFile);  \/\/ this will not be reached since failed on header change first\n+        String headerAndContent = startNewArchive(\"header-and-content\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, headerAndContent);\n+        CDSArchiveUtils.modifyFileHeader(copiedJsa);\n+        CDSArchiveUtils.modifyRegionContent(0, copiedJsa);  \/\/ this will not be reached since failed on header change first\n@@ -472,3 +204,4 @@\n-        \/\/ delete bytes in data section\n-        System.out.println(\"\\n5. Delete bytes at beginning of data section, should fail\\n\");\n-        insertOrDeleteBytes(orgJsaFile, true);\n+        \/\/ insert  bytes in data section\n+        System.out.println(\"\\n5. Insert bytes at beginning of data section, should fail\\n\");\n+        String insertBytes = startNewArchive(\"insert-bytes\");\n+        CDSArchiveUtils.insertBytesRandomlyAfterHeader(orgJsaFile, insertBytes, new byte[4096]);\n@@ -477,3 +210,4 @@\n-        \/\/ insert bytes in data section forward\n-        System.out.println(\"\\n6. Insert bytes at beginning of data section, should fail\\n\");\n-        insertOrDeleteBytes(orgJsaFile, false);\n+        \/\/ delete bytes in data section forward\n+        System.out.println(\"\\n6. Delete bytes at beginning of data section, should fail\\n\");\n+        String deleteBytes = startNewArchive(\"delete-bytes\");\n+        CDSArchiveUtils.deleteBytesAtRandomPositionAfterHeader(orgJsaFile, deleteBytes, 4096 \/*bytes*\/);\n@@ -483,1 +217,3 @@\n-        modifyJsaContentRandomly(copyFile(orgJsaFile, \"random-areas\"));\n+        String randomAreas = startNewArchive(\"random-areas\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, randomAreas);\n+        CDSArchiveUtils.modifyRegionContentRandomly(copiedJsa);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":34,"deletions":298,"binary":false,"changes":332,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,2 +65,2 @@\n-        if (wb.areSharedStringsIgnored()) {\n-          System.out.println(\"Shared strings are ignored.\");\n+        if (!wb.areSharedStringsMapped()) {\n+          System.out.println(\"Shared strings are not mapped.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/GCStressApp.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        if (wb.areSharedStringsIgnored()) {\n+        if (!wb.areSharedStringsMapped()) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/RedefineClassApp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary -XX:DumpLoadedClassList should support custom loaders\n+ * @bug 8265602\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @library \/test\/lib\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ *          test-classes\n+ * @build CustomLoaderApp OldClass CustomLoadee CustomLoadee2\n+ *        CustomLoadee3Child CustomLoadee4WithLambda\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar app.jar CustomLoaderApp\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar custom.jar\n+ *             OldClass CustomLoadee\n+ *             CustomLoadee2 CustomInterface2_ia CustomInterface2_ib\n+ *             CustomLoadee3 CustomLoadee3Child\n+ *             CustomLoadee4WithLambda\n+ * @run driver CustomClassListDump\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+\n+public class CustomClassListDump {\n+    private static String appJar = ClassFileInstaller.getJarPath(\"app.jar\");\n+    private static String customJar = ClassFileInstaller.getJarPath(\"custom.jar\");\n+    private static String classList = \"app.list\";\n+    private static String commandLine[] = {\n+        \"-cp\", appJar,\n+        \"CustomLoaderApp\",\n+        customJar,\n+        \"unregistered\",\n+        \"CustomLoadee\",\n+        \"CustomLoadee2\",\n+        \"CustomLoadee3Child\",\n+        \"CustomLoadee4WithLambda\",\n+        \"OldClass\",\n+    };\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Dump the classlist and check that custom-loader classes are in there.\n+        CDSTestUtils.dumpClassList(classList, commandLine)\n+            .assertNormalExit();\n+\n+        String listData = new String(Files.readAllBytes(Paths.get(classList)));\n+        check(listData, true, \"CustomLoaderApp id: [0-9]+\");\n+        check(listData, true, \"CustomLoadee id: [0-9]+ super: [0-9]+ source: .*\/custom.jar\");\n+        check(listData, true, \"CustomInterface2_ia id: [0-9]+ super: [0-9]+ source: .*\/custom.jar\");\n+        check(listData, true, \"CustomInterface2_ib id: [0-9]+ super: [0-9]+ source: .*\/custom.jar\");\n+        check(listData, true, \"CustomLoadee2 id: [0-9]+ super: [0-9]+ interfaces: [0-9]+ [0-9]+ source: .*\/custom.jar\");\n+        check(listData, true, \"CustomLoadee3 id: [0-9]+ super: [0-9]+ source: .*\/custom.jar\");\n+        check(listData, true, \"CustomLoadee3Child id: [0-9]+ super: [0-9]+ source: .*\/custom.jar\");\n+        check(listData, true, \"CustomLoadee4WithLambda id: [0-9]+ super: [0-9]+ source: .*\/custom.jar\");\n+\n+        \/\/ We don't support archiving of Lambda proxies for custom loaders.\n+        check(listData, false, \"@lambda-proxy.*CustomLoadee4WithLambda\");\n+\n+        \/\/ Dump the static archive\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-cp\", appJar,\n+                       \"-Xlog:cds+class=debug\",\n+                       \"-XX:SharedClassListFile=\" + classList);\n+        CDSTestUtils.createArchiveAndCheck(opts)\n+            .shouldContain(\"unreg CustomLoadee\")\n+            .shouldContain(\"unreg CustomLoadee2\")\n+            .shouldContain(\"unreg CustomLoadee3Child\")\n+            .shouldContain(\"unreg OldClass ** unlinked\");\n+\n+        \/\/ Use the dumped static archive\n+        opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .addPrefix(\"-cp\", appJar)\n+            .addSuffix(\"-Xlog:class+load,verification\")\n+            .addSuffix(commandLine);\n+        CDSTestUtils.run(opts)\n+            .assertNormalExit(\"CustomLoadee source: shared objects file\",\n+                              \"CustomLoadee2 source: shared objects file\",\n+                              \"CustomLoadee3Child source: shared objects file\",\n+                              \"OldClass source: shared objects file\",\n+                              \"Verifying class OldClass with old format\");\n+    }\n+\n+    static void check(String listData, boolean mustMatch, String regexp) throws Exception {\n+        Pattern pattern = Pattern.compile(regexp, Pattern.MULTILINE);\n+        Matcher matcher = pattern.matcher(listData);\n+        boolean found = matcher.find();\n+        if (mustMatch && !found) {\n+            System.out.println(listData);\n+            throw new RuntimeException(\"Pattern \\\"\" + regexp + \"\\\" not found in classlist\");\n+        }\n+\n+        if (!mustMatch && found) {\n+            throw new RuntimeException(\"Pattern \\\"\" + regexp + \"\\\" found in in classlist: \\\"\"\n+                                       + matcher.group() + \"\\\"\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/CustomClassListDump.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,0 @@\n-        String testClass = args[2];\n-        log(\"testClass = \" + testClass);\n@@ -69,6 +67,11 @@\n-        switch(loaderType) {\n-        case \"unregistered\":\n-            loadAndUseWithUnregisteredLoader(urls, testClass);\n-            break;\n-        default:\n-            throw new IllegalArgumentException(\"loader type is wrong: \" + loaderType);\n+        for (int i = 2; i < args.length; i++) {\n+            String testClass = args[i];\n+            log(\"testClass = \" + testClass);\n+\n+            switch(loaderType) {\n+            case \"unregistered\":\n+                loadAndUseWithUnregisteredLoader(urls, testClass);\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\"loader type is wrong: \" + loaderType);\n+            }\n@@ -90,1 +93,1 @@\n-        log(\"class =\" + c);\n+        log(\"class  = \" + c);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/CustomLoaderApp.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+public class CustomLoadee4WithLambda {\n+    public static void test() {\n+        doit(() -> {\n+                System.out.println(\"Hello inside a Lambda expression\");\n+            });\n+    }\n+\n+    static void doit(Runnable r) {\n+        r.run();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/CustomLoadee4WithLambda.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -49,0 +49,1 @@\n+        \/\/ 1. Host class loaded by a custom loader is initialized during dump time.\n@@ -51,1 +52,1 @@\n-            \"-cp\", appJar, mainClass, appJar)\n+            \"-cp\", appJar, mainClass, appJar, \"init\")\n@@ -59,1 +60,1 @@\n-            \"-cp\", appJar, mainClass, appJar)\n+            \"-cp\", appJar, mainClass, appJar, \"init\")\n@@ -62,0 +63,17 @@\n+                      .shouldContain(\"LambHello source: shared objects file (top)\")\n+                      .shouldHaveExitValue(0);\n+            });\n+\n+        \/\/ 2. Host class loaded by a custom loader is NOT initialized during dump time.\n+        dump(topArchiveName,\n+            \"-Xlog:class+load,cds=debug,cds+dynamic\",\n+            \"-cp\", appJar, mainClass, appJar)\n+            .assertNormalExit(output -> {\n+                output.shouldHaveExitValue(0);\n+            });\n+\n+        run(topArchiveName,\n+            \"-Xlog:class+load,class+unload\",\n+            \"-cp\", appJar, mainClass, appJar)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"LambHello source: shared objects file (top)\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaCustomLoader.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -63,2 +63,2 @@\n-                \/\/ Nest host should be skipped since it is not in the linked state.\n-                output.shouldContain(\"Skipping Outer: Not linked\")\n+                \/\/ Nest host should not be skipped although it is not in the linked state.\n+                output.shouldNotContain(\"Skipping Outer: Not linked\")\n@@ -78,2 +78,1 @@\n-                \/\/ Only the Inner class is loaded from the dynamic archive.\n-                \/\/ The nest host (Outer) and its lambda proxy are not loaded\n+                \/\/ Only the nest host (Outer) and the Inner class are loaded\n@@ -81,1 +80,2 @@\n-                output.shouldMatch(\"class.load.*Outer.source:.*lambda_proxy_shutdown.jar\")\n+                \/\/ The lambda proxy is not loaded from the dynamic archive.\n+                output.shouldMatch(\"class.load.*Outer.source:.*shared.*objects.*file.*(top)\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaProxyDuringShutdown.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -87,3 +87,0 @@\n-                       .shouldContain(\"Pre JDK 6 class not supported by CDS: 49.0 \" + loadeesArray[0])\n-                       .shouldMatch(\"Skipping \" + loadeesArray[1] +\":.*\" + loadeesArray[0] + \" is excluded\")\n-                       .shouldMatch(\"Skipping \" + loadeesArray[2] +\": super.*\" + loadeesArray[1] + \" is excluded\")\n@@ -108,1 +105,1 @@\n-                    output.shouldMatch(\".class.load. \" + loadee + \" source:.*\" + loadeesJar);\n+                    output.shouldContain(loadee + \" source: shared objects file (top)\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/OldClassAndInf.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,0 +39,5 @@\n+        boolean init = false;\n+        if (args.length ==2 && args[1].equals(\"init\")) {\n+            init = true;\n+        }\n+\n@@ -41,1 +46,1 @@\n-        Class c = Class.forName(className, true, urlClassLoader);\n+        Class c = Class.forName(className, init, urlClassLoader);\n@@ -44,2 +49,0 @@\n-        Object o = c.newInstance();\n-\n@@ -51,3 +54,6 @@\n-        Method method = c.getMethod(\"main\", String[].class);\n-        String[] params = null;\n-        method.invoke(null, (Object)params);\n+        if (init) {\n+            Object o = c.newInstance();\n+            Method method = c.getMethod(\"main\", String[].class);\n+            String[] params = null;\n+            method.invoke(null, (Object)params);\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/CustomLoaderApp.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        if (!wb.areSharedStringsIgnored() && !wb.isShared(s)) {\n+        if (wb.areSharedStringsMapped() && !wb.isSharedInternedString(s)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/javaldr\/GCSharedStringsDuringDumpWb.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import jdk.test.lib.cds.CDSTestUtils;\n@@ -58,2 +57,0 @@\n-        boolean dynamicMode = CDSTestUtils.DYNAMIC_DUMP;\n-\n@@ -61,7 +58,2 @@\n-        \/\/ which have been linked during static CDS dump.\n-        \/\/ Dynamic CDS dump doesn't support old class.\n-        if (!dynamicMode) {\n-            output.shouldContain(\"Skipping OldSuper: Old class has been linked\");\n-        } else {\n-            output.shouldContain(\"Pre JDK 6 class not supported by CDS: 49.0 OldSuper\");\n-        }\n+        \/\/ which have been linked during CDS dump.\n+        output.shouldContain(\"Skipping OldSuper: Old class has been linked\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/dumpingWithAgent\/OldClassWithJavaAgent.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/ExerciseGC.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n@@ -39,0 +40,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/FlagCombo.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        if (!wb.isShared(testString1) && !wb.areSharedStringsIgnored()) {\n+        if (wb.areSharedStringsMapped() && !wb.isSharedInternedString(testString1)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/HelloStringGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        if (!wb.isShared(testString1) && !wb.areSharedStringsIgnored()) {\n+        if (wb.areSharedStringsMapped() && !wb.isSharedInternedString(testString1)) {\n@@ -69,1 +69,1 @@\n-        if (!wb.isShared(empty)) {\n+        if (wb.areSharedStringsMapped() && !wb.isSharedInternedString(empty)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/HelloStringPlus.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/InternSharedString.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,4 +41,6 @@\n-        if (wb.areSharedStringsIgnored() || wb.isShared(interned1)) {\n-            System.out.println(passed_output1);\n-        } else {\n-            throw new RuntimeException(\"Failed: String is not shared.\");\n+        if (wb.areSharedStringsMapped()) {\n+            if (wb.isSharedInternedString(interned1)) {\n+                System.out.println(passed_output1);\n+            } else {\n+                throw new RuntimeException(\"Failed: String is not shared.\");\n+            }\n@@ -61,4 +63,6 @@\n-            if (wb.areSharedStringsIgnored() || wb.isShared(b)) {\n-                System.out.println(passed_output3);\n-            } else {\n-                throw new RuntimeException(\"Failed: expected shared string with latin1-supplement chars.\");\n+            if (wb.areSharedStringsMapped()) {\n+                if (wb.isSharedInternedString(b)) {\n+                    System.out.println(passed_output3);\n+                } else {\n+                    throw new RuntimeException(\"Failed: expected shared string with latin1-supplement chars.\");\n+                }\n@@ -72,4 +76,6 @@\n-            if (wb.areSharedStringsIgnored() || wb.isShared(b)) {\n-                System.out.println(passed_output4);\n-            } else {\n-                throw new RuntimeException(\"Failed: expected shared string with non-western chars.\");\n+            if (wb.areSharedStringsMapped()) {\n+                if (wb.isSharedInternedString(b)) {\n+                    System.out.println(passed_output4);\n+                } else {\n+                    throw new RuntimeException(\"Failed: expected shared string with non-western chars.\");\n+                }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/InternStringTest.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/LargePages.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/LockSharedStrings.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-        if (wb.areSharedStringsIgnored()) {\n-            System.out.println(\"The shared strings are ignored\");\n+        if (!wb.areSharedStringsMapped()) {\n+            System.out.println(\"The shared strings are not mapped\");\n@@ -40,1 +40,1 @@\n-        if (!wb.isShared(LockStringTest.class)) {\n+        if (!wb.isSharedClass(LockStringTest.class)) {\n@@ -60,1 +60,1 @@\n-        if (!wb.isShared(lock)) {\n+        if (!wb.isSharedInternedString(lock)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/LockStringTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n-        if (wb.areSharedStringsIgnored()) {\n-            System.out.println(\"The shared strings are ignored\");\n+        if (!wb.areSharedStringsMapped()) {\n+            System.out.println(\"The shared strings are not mapped\");\n@@ -42,1 +42,1 @@\n-        if (!wb.isShared(s)) {\n+        if (!wb.isSharedInternedString(s)) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/LockStringValueTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsBasicPlus.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,4 +32,6 @@\n-        if (wb.areSharedStringsIgnored() || wb.isShared(s)) {\n-            System.out.println(\"Found shared string.\");\n-        } else {\n-            throw new RuntimeException(\"String is not shared.\");\n+        if (wb.areSharedStringsMapped()) {\n+            if (wb.isSharedInternedString(s)) {\n+                System.out.println(\"Found shared string.\");\n+            } else {\n+                throw new RuntimeException(\"String is not shared.\");\n+            }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsWb.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsWbTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @requires vm.gc == null\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SysDictCrash.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-import java.util.*;\n-\n-\/\/ This is a test case executed by DumpClassList.java to load classes\n-\/\/ from various places to ensure that they are not written to the class list.\n-public class ArrayListTest {\n-    public static void main(String args[]) throws Exception {\n-        \/\/ The following lambda usage should generate various classes like\n-        \/\/ java.lang.invoke.LambdaForm$MH\/1146743572. All of them should be excluded from\n-        \/\/ the class list.\n-        List<String> a = new ArrayList<>();\n-        a.add(\"hello world.\");\n-        a.forEach(str -> System.out.println(str));\n-\n-        System.out.println(Class.forName(\"java.lang.NewClass\")); \/\/ should be excluded from the class list.\n-        System.out.println(Class.forName(\"boot.append.Foo\"));    \/\/ should be excluded from the class list.\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/ArrayListTest.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import java.util.*;\n+\n+\/\/ This is a test case executed by DumpClassList.java to load classes\n+\/\/ from various places to ensure that they are not written to the class list.\n+public class DumpClassListApp {\n+    public static void main(String args[]) throws Exception {\n+        \/\/ The following lambda usage should generate various classes like\n+        \/\/ java.lang.invoke.LambdaForm$MH\/1146743572. All of them should be excluded from\n+        \/\/ the class list.\n+        List<String> a = new ArrayList<>();\n+        a.add(\"hello world.\");\n+        a.forEach(str -> System.out.println(str));\n+\n+        System.out.println(Class.forName(\"jdk.jfr.NewClass\")); \/\/ should be excluded from the class list.\n+        System.out.println(Class.forName(\"boot.append.Foo\"));    \/\/ should be excluded from the class list.\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/DumpClassListApp.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/ClassFileParserBug.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/TestBadPackageWithInterface.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/TestEmptyBootstrapMethodsAttr.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/BadBSMUseTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyLDCTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyNewInvokeSpecialTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/escapeAnalysis\/TestEscapeCondy.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/staticInit\/TestInitException.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+        output.shouldNotHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/duplAttributes\/DuplAttributesTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/getSysPackage\/GetPackageXbootclasspath.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/getSysPackage\/GetSysPkgTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @run main HandshakeTimeoutTest\n+ * @run driver HandshakeTimeoutTest\n@@ -60,0 +60,1 @@\n+        output.shouldNotHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeTimeoutTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test SuspendBlocked\n+ * @bug 8270085\n+ * @library \/test\/lib\n+ * @build SuspendBlocked\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI SuspendBlocked\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.hotspot.WhiteBox;\n+\n+public class SuspendBlocked {\n+\n+    public static void main(String... args) throws Exception {\n+        Thread suspend_thread = new Thread(() -> run_loop());\n+        suspend_thread.start();\n+        WhiteBox wb = WhiteBox.getWhiteBox();\n+        for (int i = 0; i < 100; i++) {\n+            suspend_thread.suspend();\n+            wb.lockAndBlock(\/* suspender= *\/ true);\n+            suspend_thread.resume();\n+            Thread.sleep(1);\n+        }\n+        suspend_thread.join();\n+    }\n+\n+    public static void run_loop() {\n+        WhiteBox wb = WhiteBox.getWhiteBox();\n+        for (int i = 0; i < 100; i++) {\n+            wb.lockAndBlock(\/* suspender= *\/ false);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/SuspendBlocked.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/CalleeSavedRegisters\/FPRegs.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run main\/native\/othervm FindClassUtf8 test\n+ * @run main\/native FindClassUtf8 test\n@@ -31,0 +31,1 @@\n+import jdk.test.lib.Utils;\n@@ -45,1 +46,4 @@\n-            ProcessTools.executeTestJvm(\"-Xcheck:jni\", \"-XX:-CreateCoredumpOnCrash\", \"FindClassUtf8\")\n+            ProcessTools.executeTestJvm(\"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH,\n+                                        \"-Xcheck:jni\",\n+                                        \"-XX:-CreateCoredumpOnCrash\",\n+                                        \"FindClassUtf8\")\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/FindClassUtf8\/FindClassUtf8.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import jdk.test.lib.Utils;\n@@ -157,0 +158,1 @@\n+        oa.shouldHaveExitValue(0);\n@@ -178,2 +180,1 @@\n-            }\n-            else if (line.startsWith(EXPECT_WARNING_START)) {\n+            } else if (line.startsWith(EXPECT_WARNING_START)) {\n@@ -182,2 +183,1 @@\n-            }\n-            else if (line.startsWith(EXPECT_WARNING_END)) {\n+            } else if (line.startsWith(EXPECT_WARNING_END)) {\n@@ -192,0 +192,3 @@\n+        if (!testStartLine) {\n+            throw new RuntimeException(\"Missing test start line after \" + lineNo + \" lines\");\n+        }\n@@ -206,1 +209,2 @@\n-                                                                  \"TestCheckedJniExceptionCheck\"));\n+                                                                 \"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH,\n+                                                                 \"TestCheckedJniExceptionCheck\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestCheckedJniExceptionCheck.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestCheckedReleaseArrayElements.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @requires (os.family == \"linux\")\n+ * @requires os.family != \"windows\"\n","filename":"test\/hotspot\/jtreg\/runtime\/jsig\/Testjsig.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+        out.shouldNotHaveExitValue(0);\n@@ -72,0 +73,1 @@\n+        out.shouldNotHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassInitializationTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+        o.shouldHaveExitValue(0);\n@@ -73,0 +74,1 @@\n+        o.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassResolutionTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,1 @@\n+        o.shouldHaveExitValue(0);\n@@ -53,0 +54,1 @@\n+        o.shouldHaveExitValue(0);\n@@ -61,0 +63,1 @@\n+        o.shouldHaveExitValue(0);\n@@ -71,0 +74,1 @@\n+        o.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/CondyIndyTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @build test.Empty\n@@ -71,0 +72,1 @@\n+        out.shouldHaveExitValue(0);\n@@ -76,0 +78,1 @@\n+        out.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/LoaderConstraintsTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+        o.shouldHaveExitValue(0);\n@@ -55,0 +56,1 @@\n+        o.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MonitorMismatchTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @summary Tests how large pages are choosen depending on the given large pages flag combinations.\n+ * @summary Tests how large pages are chosen depending on the given large pages flag combinations.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n@@ -332,0 +333,1 @@\n+    output.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/LargePages\/TestLargePagesFlags.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n@@ -65,0 +66,1 @@\n+    output.shouldNotHaveExitValue(0);\n@@ -79,1 +81,0 @@\n-      throw new Exception(\"Call of readFromNoaccessArea succeeded! This is wrong. Crash expected. Test failed.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReadFromNoaccessArea.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n@@ -47,0 +48,1 @@\n+      \/\/ expected to crash\n@@ -48,18 +50,0 @@\n-\n-      throw new Exception(\"Read of reserved\/uncommitted memory unexpectedly succeeded, expected crash!\");\n-    }\n-\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-          \"-Xbootclasspath\/a:.\",\n-          \"-XX:+UnlockDiagnosticVMOptions\",\n-          \"-XX:+WhiteBoxAPI\",\n-          \"-XX:-CreateCoredumpOnCrash\",\n-          \"-Xmx128m\",\n-          \"ReserveMemory\",\n-          \"test\");\n-\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-    if (Platform.isWindows()) {\n-      output.shouldContain(\"EXCEPTION_ACCESS_VIOLATION\");\n-    } else if (Platform.isOSX()) {\n-      output.shouldContain(\"SIGBUS\");\n@@ -67,1 +51,18 @@\n-      output.shouldContain(\"SIGSEGV\");\n+      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-Xbootclasspath\/a:.\",\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+WhiteBoxAPI\",\n+            \"-XX:-CreateCoredumpOnCrash\",\n+            \"-Xmx128m\",\n+            \"ReserveMemory\",\n+            \"test\");\n+\n+      OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+      output.shouldNotHaveExitValue(0);\n+      if (Platform.isWindows()) {\n+        output.shouldContain(\"EXCEPTION_ACCESS_VIOLATION\");\n+      } else if (Platform.isOSX()) {\n+        output.shouldContain(\"SIGBUS\");\n+      } else {\n+        output.shouldContain(\"SIGSEGV\");\n+      }\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReserveMemory.java","additions":20,"deletions":19,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/AvailableProcessors.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestUseCpuAllocPath.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-import sun.hotspot.parser.DiagnosticCommand;\n-import sun.hotspot.parser.DiagnosticCommand.DiagnosticArgumentType;\n+import jdk.test.whitebox.parser.DiagnosticCommand;\n+import jdk.test.whitebox.parser.DiagnosticCommand.DiagnosticArgumentType;\n","filename":"test\/hotspot\/jtreg\/serviceability\/ParserTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        this(className, new ArgumentHandler(new String[0]));\n+        this(className, new ArgumentHandler(new String[] {\"-transport.address=dynamic\"}));\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/framework\/TestProcessLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run testng HeapDumpAllTest\n+ * @run testng\/timeout=240 HeapDumpAllTest\n@@ -42,1 +42,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/HeapDumpAllTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import jdk.test.lib.dcmd.CommandExecutor;\n+import jdk.test.lib.dcmd.JMXExecutor;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\/*\n+ * @test\n+ * @summary Test of diagnostic command VM.trim_libc_heap\n+ * @library \/test\/lib\n+ * @requires os.family == \"linux\"\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.compiler\n+ *          java.management\n+ *          jdk.internal.jvmstat\/sun.jvmstat.monitor\n+ * @run testng TrimLibcHeapTest\n+ *\/\n+public class TrimLibcHeapTest {\n+    public void run(CommandExecutor executor) {\n+        OutputAnalyzer output = executor.execute(\"System.trim_native_heap\");\n+        output.reportDiagnosticSummary();\n+        output.shouldMatch(\"(Done|Not available)\"); \/\/ Not available could happen on Linux + non-glibc (eg. muslc)\n+        if (output.firstMatch(\"Done\") != null) {\n+            output.shouldMatch(\"(Virtual size before|RSS before|Swap before|No details available)\");\n+        }\n+    }\n+\n+    @Test\n+    public void jmx() {\n+        run(new JMXExecutor());\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/TrimLibcHeapTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -57,0 +57,1 @@\n+        output.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetObjectSizeClass.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-  \/\/ Do 100000 iterations and expect maxIteration \/ multiplier samples.\n-  private static final int maxIteration = 100000;\n+  \/\/ Do 200000 iterations and expect maxIteration \/ multiplier samples.\n+  private static final int maxIteration = 200_000;\n@@ -43,0 +43,6 @@\n+  \/\/ 15% error ensures a sanity test without becoming flaky.\n+  \/\/ Flakiness is due to the fact that this test is dependent on the sampling interval, which is a\n+  \/\/ statistical geometric variable around the sampling interval. This means that the test could be\n+  \/\/ unlucky and not achieve the mean average fast enough for the test case.\n+  private static final int acceptedErrorPercentage = 15;\n+\n@@ -88,5 +94,1 @@\n-        \/\/ 10% error ensures a sanity test without becoming flaky.\n-        \/\/ Flakiness is due to the fact that this test is dependent on the sampling interval, which is a\n-        \/\/ statistical geometric variable around the sampling interval. This means that the test could be\n-        \/\/ unlucky and not achieve the mean average fast enough for the test case.\n-        if (HeapMonitor.statsHaveExpectedNumberSamples((int) expected, 10)) {\n+        if (HeapMonitor.statsHaveExpectedNumberSamples((int) expected, acceptedErrorPercentage)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatArrayCorrectnessTest.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    int allocationIterations = 10;\n+    int allocationIterations = 20;\n@@ -61,1 +61,1 @@\n-    boolean success = (errorPercentage < 10.0);\n+    boolean success = (errorPercentage < 15.0);\n@@ -67,1 +67,1 @@\n-      throw new RuntimeException(\"Interval average over 10% for interval \" + interval + \" -> \"\n+      throw new RuntimeException(\"Interval average over 15% for interval \" + interval + \" -> \"\n@@ -77,1 +77,1 @@\n-    \/\/ the 10% mark. So try again to squash flakiness.\n+    \/\/ the 15% mark. So try again to squash flakiness.\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatIntervalTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-  \/\/ Do 200000 iterations and expect maxIteration \/ multiplier samples.\n-  private static final int maxIteration = 200000;\n+  \/\/ Do 400000 iterations and expect maxIteration \/ multiplier samples.\n+  private static final int maxIteration = 400_000;\n@@ -43,1 +43,5 @@\n-  private native static boolean statsHaveExpectedNumberSamples(int expected, int percentError);\n+  \/\/ 15% error ensures a sanity test without becoming flaky.\n+  \/\/ Flakiness is due to the fact that this test is dependent on the sampling interval, which is a\n+  \/\/ statistical geometric variable around the sampling interval. This means that the test could be\n+  \/\/ unlucky and not achieve the mean average fast enough for the test case.\n+  private static final int acceptedErrorPercentage = 15;\n@@ -86,5 +90,1 @@\n-    \/\/ 10% error ensures a sanity test without becoming flaky.\n-    \/\/ Flakiness is due to the fact that this test is dependent on the sampling interval, which is a\n-    \/\/ statistical geometric variable around the sampling interval. This means that the test could be\n-    \/\/ unlucky and not achieve the mean average fast enough for the test case.\n-    if (!HeapMonitor.statsHaveExpectedNumberSamples((int) expected, 10)) {\n+    if (!HeapMonitor.statsHaveExpectedNumberSamples((int) expected, acceptedErrorPercentage)) {\n@@ -111,5 +111,1 @@\n-    \/\/ 10% error ensures a sanity test without becoming flaky.\n-    \/\/ Flakiness is due to the fact that this test is dependent on the sampling interval, which is a\n-    \/\/ statistical geometric variable around the sampling interval. This means that the test could be\n-    \/\/ unlucky and not achieve the mean average fast enough for the test case.\n-    if (!HeapMonitor.statsHaveExpectedNumberSamples((int) expected, 10)) {\n+    if (!HeapMonitor.statsHaveExpectedNumberSamples((int) expected, acceptedErrorPercentage)) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorStatObjectCorrectnessTest.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -128,2 +128,2 @@\n-            if (testJavaOpts.contains(\"-Xcomp\") && testJavaOpts.contains(\"-XX:TieredStopAtLevel=1\")) {\n-                \/\/ No MDOs are allocated in -XX:TieredStopAtLevel=1 + -Xcomp mode\n+            if (testJavaOpts.contains(\"-XX:TieredStopAtLevel=1\")) {\n+                \/\/ No MDOs are allocated in -XX:TieredStopAtLevel=1\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbCDSCore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-WB_SRC_FILES = $(shell find $(TESTLIBRARY_DIR)\/sun\/hotspot -name '*.java')\n+WB_SRC_FILES = $(shell find $(TESTLIBRARY_DIR)\/sun\/hotspot $(TESTLIBRARY_DIR)\/jdk\/test\/whitebox -name '*.java')\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/Makefile","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -43,2 +45,5 @@\n- * @library \/test\/lib \/\n- * @run main\/othervm -DPrintIREncoding=true ir_framework.tests.TestIRMatching\n+ * @library \/test\/lib \/testlibrary_tests \/\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm\/timeout=240 -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n+ *                               -XX:+WhiteBoxAPI -DPrintIREncoding=true  ir_framework.tests.TestIRMatching\n@@ -49,0 +54,7 @@\n+    private static final List<Exception> exceptions = new ArrayList<>();\n+\n+    private static void addException(Exception e) {\n+        System.out.println(TestFramework.getLastTestVMOutput());\n+        exceptions.add(e);\n+    }\n+\n@@ -58,1 +70,1 @@\n-        String[] allocMatches = { \"MyClass\", \"call,static  wrapper for: _new_instance_Java\" };\n+        String[] allocMatches = { \"MyClass\", \"wrapper for: _new_instance_Java\" };\n@@ -91,1 +103,1 @@\n-        String[] allocArrayMatches = { \"MyClass\", \"call,static  wrapper for: _new_array_Java\"};\n+        String[] allocArrayMatches = { \"MyClass\", \"wrapper for: _new_array_Java\"};\n@@ -108,1 +120,1 @@\n-        runCheck(new String[] {\"-XX:-UseCompressedClassPointers\"},\n+        runCheck(new String[] {\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseCompressedClassPointers\"},\n@@ -173,1 +185,3 @@\n-                 BadFailOnConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"intrinsic_or_type_checked_inlining\"),\n+                 WhiteBox.getWhiteBox().isJVMCISupportedByGC() ?\n+                    BadFailOnConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"intrinsic_or_type_checked_inlining\")\n+                    : GoodRuleConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 2),\n@@ -187,3 +201,12 @@\n-        runCheck(BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 1, \"cmp\", \"precise klass\"),\n-                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 1,\"cmp\", \"precise klass\", \"MyClass\"),\n-                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 2,\"cmp\", \"precise klass\", \"ir_framework\/tests\/MyClass\"),\n+\n+        String cmp;\n+        if (Platform.isPPC() || Platform.isX86()) {\n+            cmp = \"CMP\";\n+        } else if (Platform.isS390x()){\n+            cmp = \"CLFI\";\n+        } else {\n+            cmp = \"cmp\";\n+        }\n+        runCheck(BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 1, cmp, \"precise klass\"),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 1,cmp, \"precise klass\", \"MyClass\"),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 2,cmp, \"precise klass\", \"ir_framework\/tests\/MyClass\"),\n@@ -191,1 +214,3 @@\n-                 BadFailOnConstraint.create(CheckCastArray.class, \"arrayCopy(java.lang.Object[],java.lang.Class)\", 1, \"checkcast_arraycopy\")\n+                 Platform.isS390x() ? \/\/ There is no checkcast_arraycopy stub for C2 on s390\n+                     GoodFailOnConstraint.create(CheckCastArray.class, \"arrayCopy(java.lang.Object[],java.lang.Class)\", 1)\n+                     : BadFailOnConstraint.create(CheckCastArray.class, \"arrayCopy(java.lang.Object[],java.lang.Class)\", 1, \"checkcast_arraycopy\")\n@@ -201,2 +226,2 @@\n-            runWithArguments(CompilationOutputOfFails.class);\n-            shouldNotReach();\n+            runWithArgumentsFail(CompilationOutputOfFails.class);\n+            Utils.shouldHaveThrownException();\n@@ -204,22 +229,42 @@\n-            System.out.flush();\n-            String output = baos.toString();\n-            baos.reset();\n-            Pattern pattern = Pattern.compile(\">>> Compilation.*both\\\\d.*\\\\RPrintIdeal:(?:(?!PrintOpto|>>> Compilation)[\\\\S\\\\s])+PrintOptoAssembly\");\n-            Matcher matcher = pattern.matcher(output);\n-            Asserts.assertEQ(matcher.results().count(), (long)7, \"Could not find all both methods: \" + output);\n-            pattern = Pattern.compile(\">>> Compilation.*ideal\\\\d.*\\\\RPrintIdeal:(?:(?!>>> Compilation)[\\\\S\\\\s])+\");\n-            matcher = pattern.matcher(output);\n-            int count = 0;\n-            while (matcher.find()) {\n-                String match = matcher.group();\n-                Asserts.assertFalse(match.contains(\"PrintOptoAssembly\"), \"Cannot contain opto assembly: \" + output);\n-                count++;\n-            }\n-            Asserts.assertEQ(count, 7, \"Could not find all ideal methods: \" + output);\n-            pattern = Pattern.compile(\">>> Compilation.*opto\\\\d.*\\\\RPrintOptoAssembly:(?:(?!>>> Compilation)[\\\\S\\\\s])+\");\n-            matcher = pattern.matcher(output);\n-            count = 0;\n-            while (matcher.find()) {\n-                String match = matcher.group();\n-                Asserts.assertFalse(match.contains(\"PrintIdeal\"), \"Cannot contain opto assembly: \" + output);\n-                count++;\n+            try {\n+                boolean failed = false;\n+                System.out.flush();\n+                String output = baos.toString();\n+                baos.reset();\n+                Pattern pattern = Pattern.compile(\">>> Compilation.*both\\\\d.*\\\\RPrintIdeal:(?:(?!PrintOpto|>>> Compilation)[\\\\S\\\\s])+PrintOptoAssembly\");\n+                Matcher matcher = pattern.matcher(output);\n+                long bothCount = matcher.results().count();\n+                if (bothCount != 7L) {\n+                    exceptions.add(new RuntimeException(\"Could not find all both() methods, expected 7 but found \" + bothCount));\n+                    failed = true;\n+                }\n+                pattern = Pattern.compile(\">>> Compilation.*ideal\\\\d.*\\\\RPrintIdeal:(?:(?!>>> Compilation)[\\\\S\\\\s])+\");\n+                matcher = pattern.matcher(output);\n+                int count = 0;\n+                while (matcher.find()) {\n+                    String match = matcher.group();\n+                    Asserts.assertFalse(match.contains(\"PrintOptoAssembly\"), \"Cannot contain opto assembly: \" + output);\n+                    count++;\n+                }\n+                if (count != 7) {\n+                    exceptions.add(new RuntimeException(\"Could not find all ideal() methods, expected 7 but found \" + count));\n+                    failed = true;\n+                }\n+                pattern = Pattern.compile(\">>> Compilation.*opto\\\\d.*\\\\RPrintOptoAssembly:(?:(?!>>> Compilation)[\\\\S\\\\s])+\");\n+                matcher = pattern.matcher(output);\n+                count = 0;\n+                while (matcher.find()) {\n+                    String match = matcher.group();\n+                    Asserts.assertFalse(match.contains(\"PrintIdeal\"), \"Cannot contain opto assembly: \" + output);\n+                    count++;\n+                }\n+                if (count != 7) {\n+                    exceptions.add(new RuntimeException(\"Could not find all opto() methods, expected 7 but found \" + count));\n+                    failed = true;\n+                }\n+                if (failed) {\n+                    System.err.println(TestFramework.getLastTestVMOutput());\n+                    System.err.println(output);\n+                }\n+            } catch (Exception e1) {\n+                addException(e1);\n@@ -227,1 +272,2 @@\n-            Asserts.assertEQ(count, 7, \"Could not find all opto methods\");\n+        } catch (Exception e) {\n+            addException(e);\n@@ -251,0 +297,10 @@\n+\n+        if (!exceptions.isEmpty()) {\n+            System.err.println(\"TestIRMatching failed with one or more exceptions:\");\n+            for (Exception e : exceptions) {\n+                System.err.println(e.getMessage());\n+                e.printStackTrace(System.err);\n+                System.err.println(\"---------\");\n+            }\n+            throw new RuntimeException(\"TestIRMatching failed with one or more exceptions - check stderr and stdout\");\n+        }\n@@ -254,0 +310,8 @@\n+        try {\n+            new TestFramework(clazz).addFlags(args).start();\n+        } catch (Exception e) {\n+            addException(e);\n+        }\n+    }\n+\n+    private static void runWithArgumentsFail(Class<?> clazz, String... args) {\n@@ -260,1 +324,1 @@\n-            shouldNotReach();\n+            Utils.shouldHaveThrownException();\n@@ -263,0 +327,2 @@\n+        } catch (Exception e) {\n+            addException(e);\n@@ -269,1 +335,1 @@\n-            shouldNotReach();\n+            Utils.shouldHaveThrownException();\n@@ -272,0 +338,2 @@\n+        } catch (Exception e) {\n+            addException(e);\n@@ -284,1 +352,1 @@\n-            throw e1;\n+            exceptions.add(e1);\n@@ -292,1 +360,1 @@\n-            shouldNotReach();\n+            Utils.shouldHaveThrownException();\n@@ -294,1 +362,7 @@\n-            constraint.checkConstraint(e);\n+            try {\n+                constraint.checkConstraint(e);\n+            } catch (Exception e1) {\n+                addException(e);\n+            }\n+        } catch (Exception e) {\n+            addException(e);\n@@ -298,4 +372,0 @@\n-    public static void shouldNotReach() {\n-        throw new ShouldNotReachException(\"Framework did not fail but it should have!\");\n-    }\n-\n@@ -396,1 +466,1 @@\n-    private MyClass myClass;\n+    private MyClassEmpty myClass;\n@@ -429,1 +499,1 @@\n-    @IR(failOn = {IRNode.STORE_OF_CLASS, \"MyClass\", IRNode.ALLOC, IRNode.CALL})\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"MyClassEmpty\", IRNode.ALLOC, IRNode.CALL})\n@@ -431,1 +501,1 @@\n-        myClass = new MyClass();\n+        myClass = new MyClassEmpty();\n@@ -435,1 +505,1 @@\n-    @IR(failOn = {IRNode.STORE_OF_CLASS, \"UnknownClass\", IRNode.ALLOC_OF, \"MyClass\"})\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"UnknownClass\", IRNode.ALLOC_OF, \"MyClassEmpty\"})\n@@ -437,1 +507,1 @@\n-        myClass = new MyClass();\n+        myClass = new MyClassEmpty();\n@@ -441,1 +511,1 @@\n-    @IR(failOn = {IRNode.STORE_OF_CLASS, \"UnknownClass\", IRNode.ALLOC_OF, \"ir_framework\/tests\/MyClassSub\"})\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"UnknownClass\", IRNode.ALLOC_OF, \"ir_framework\/tests\/MyClassEmptySub\"})\n@@ -443,1 +513,1 @@\n-        myClass = new MyClassSub();\n+        myClass = new MyClassEmptySub();\n@@ -567,0 +637,1 @@\n+    MyClassEmpty myClassEmpty = new MyClassEmpty();\n@@ -650,3 +721,3 @@\n-    @IR(counts = {IRNode.STORE_OF_FIELD, \"myClass\", \"1\", IRNode.STORE_OF_CLASS, \"GoodCount\", \"1\",\n-                  IRNode.STORE_OF_CLASS, \"\/GoodCount\", \"1\", IRNode.STORE_OF_CLASS, \"MyClass\", \"0\"},\n-        failOn = {IRNode.STORE_OF_CLASS, \"MyClass\"})\n+    @IR(counts = {IRNode.STORE_OF_FIELD, \"myClassEmpty\", \"1\", IRNode.STORE_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_OF_CLASS, \"\/GoodCount\", \"1\", IRNode.STORE_OF_CLASS, \"MyClassEmpty\", \"0\"},\n+        failOn = {IRNode.STORE_OF_CLASS, \"MyClassEmpty\"})\n@@ -654,1 +725,1 @@\n-        myClass = new MyClass();\n+        myClassEmpty = new MyClassEmpty();\n@@ -1125,1 +1196,1 @@\n-        arrayCopy(mArr, MyClass2[].class);\n+        arrayCopy(mArr, MyClassEmpty[].class);\n@@ -1174,1 +1245,1 @@\n-    @IR(counts = {\"call\", \"1\"})\n+    @IR(counts = {\"call\", \"0\"})\n@@ -1183,1 +1254,1 @@\n-    @IR(counts = {\"call\", \"1\"})\n+    @IR(counts = {\"call\", \"0\"})\n@@ -1278,1 +1349,1 @@\n-    @IR(counts = {\"call\", \"1\"})\n+    @IR(counts = {\"call\", \"0\"})\n@@ -1287,1 +1358,1 @@\n-    @IR(counts = {\"call\", \"1\"})\n+    @IR(counts = {\"call\", \"0\"})\n@@ -1296,1 +1367,1 @@\n-    @IR(counts = {\"call\", \"1\"})\n+    @IR(counts = {\"call\", \"0\"})\n@@ -1305,1 +1376,1 @@\n-    @IR(counts = {\"call\", \"1\"})\n+    @IR(counts = {\"call\", \"0\"})\n@@ -1331,1 +1402,3 @@\n-class MyClass2 {}\n+class MyClassEmpty {}\n+\n+class MyClassEmptySub extends MyClassEmpty {}\n@@ -1338,6 +1411,0 @@\n-class ShouldNotReachException extends RuntimeException {\n-    ShouldNotReachException(String s) {\n-        super(s);\n-    }\n-}\n-\n@@ -1378,1 +1445,1 @@\n-        return \"Constraint \" + getClass().getSimpleName() + \", method: \" + methodName + \", rule: \" + ruleIdx;\n+        return \"Constraint \" + getClass().getSimpleName() + \", \" + errorPrefix();\n@@ -1386,1 +1453,1 @@\n-        return \"Method \" + methodName + \", Rule \" + ruleIdx;\n+        return \"Class \" + klass.getSimpleName() + \", Method \" + methodName + \", Rule \" + ruleIdx;\n@@ -1408,2 +1475,0 @@\n-\n-    protected void checkOnMethod(String method) {}\n@@ -1541,1 +1606,3 @@\n-                            Asserts.assertTrue(matches.stream().allMatch(regexString::contains),\n+                            \/\/ Do matching on actual match and not on regex string\n+                            String actualMatch = regexString.split(\"\\\\R\", 2)[1];\n+                            Asserts.assertTrue(matches.stream().allMatch(actualMatch::contains),\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java","additions":141,"deletions":74,"binary":false,"changes":215,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * @library \/test\/lib \/\n+ * @library \/test\/lib \/testlibrary_tests \/\n@@ -47,1 +47,1 @@\n-            throw new RuntimeException(\"Should not reach\");\n+            Utils.shouldHaveThrownException();\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestRunTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @library \/test\/lib \/\n+ * @library \/test\/lib \/testlibrary_tests \/\n@@ -47,1 +47,4 @@\n-            Asserts.fail(\"Should not reach\");\n+            if (Utils.notAllBailedOut(sDefault, s1, s3)) {\n+                \/\/ Not all scenarios had a bailout which means that at least one exception should have been thrown.\n+                Asserts.fail(\"Should have thrown an exception\");\n+            }\n@@ -49,1 +52,4 @@\n-            Asserts.assertTrue(e.getMessage().contains(\"The following scenarios have failed: #0, #1, #3\"), e.getMessage());\n+            if (!e.getMessage().contains(\"The following scenarios have failed: #0, #1, #3\")) {\n+                \/\/ Was there a bailout in a scenario? If not fail.\n+                Asserts.assertTrue(Utils.anyBailedOut(sDefault, s1, s3), e.getMessage());\n+            }\n@@ -53,1 +59,4 @@\n-            Asserts.fail(\"Should not reach\");\n+            if (Utils.notAllBailedOut(s1, s3)) {\n+                \/\/ Not all scenarios had a bailout which means that at least one exception should have been thrown.\n+                Asserts.fail(\"Should have thrown an exception\");\n+            }\n@@ -55,1 +64,4 @@\n-            Asserts.assertTrue(e.getMessage().contains(\"The following scenarios have failed: #1, #3\"), e.getMessage());\n+            if (!e.getMessage().contains(\"The following scenarios have failed: #1, #3\")) {\n+                \/\/ Was there a bailout in a scenario? If not fail.\n+                Asserts.assertTrue(Utils.anyBailedOut(sDefault, s1, s3), e.getMessage());\n+            }\n@@ -74,1 +86,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestScenarios.java","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package ir_framework.tests;\n+\n+import compiler.lib.ir_framework.Scenario;\n+import compiler.lib.ir_framework.driver.IRMatcher;\n+import compiler.lib.ir_framework.driver.TestVMProcess;\n+import jdk.test.lib.Asserts;\n+\n+import java.util.Arrays;\n+\n+public class Utils {\n+    public static void shouldHaveThrownException() {\n+        \/\/ Do not throw an exception if we hit a safepoint while printing which could possibly let the IR matching fail.\n+        \/\/ This happens very rarely. If there is a problem with the test, then we will catch that on the next test invocation.\n+        if (!TestVMProcess.getLastTestVMOutput().contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE)) {\n+            Asserts.fail(\"Should have thrown exception\");\n+        }\n+    }\n+\n+    \/**\n+     * Is there at least one scenario which hit a safepoint while printing (i.e. a bailout)?\n+     *\/\n+    public static boolean anyBailedOut(Scenario... scenarios) {\n+        return Arrays.stream(scenarios).anyMatch(s -> s.getTestVMOutput().contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE));\n+    }\n+\n+    \/**\n+     * Is there at least one scenario which did not hit a safepoint while printing (i.e. a bailout)?\n+     *\/\n+    public static boolean notAllBailedOut(Scenario... scenarios) {\n+        return Arrays.stream(scenarios).anyMatch(s -> !s.getTestVMOutput().contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE));\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/Utils.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -97,1 +97,1 @@\n-    class Test implements Runnable {\n+    class Test implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/PhantomReference\/phantom001\/phantom001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+import nsk.share.gc.OOMStress;\n@@ -102,1 +103,1 @@\n-    class Test implements Runnable {\n+    class Test implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/SoftReference\/soft001\/soft001.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/SoftReference\/soft003\/soft003.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/SoftReference\/soft004\/soft004.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/SoftReference\/soft005\/soft005.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+import nsk.share.gc.OOMStress;\n@@ -102,1 +103,1 @@\n-    class Test implements Runnable {\n+    class Test implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak001\/weak001.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak003\/weak003.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak004\/weak004.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak005\/weak005.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak006\/weak006.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    class Worker implements Runnable {\n+    class Worker implements Runnable, OOMStress {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak007\/weak007.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import vm.share.gc.HeapOOMEException;\n@@ -33,1 +34,0 @@\n-import metaspace.stressHierarchy.common.exceptions.GotWrongOOMEException;\n@@ -112,2 +112,2 @@\n-        } catch (GotWrongOOMEException e) {\n-            log.info(\"GotWrongOOMEExc: \" + e.getMessage());\n+        } catch (HeapOOMEException e) {\n+            log.info(\"HeapOOMEException: \" + e.getMessage());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/stressHierarchy\/common\/StressHierarchyBaseClass.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package metaspace.stressHierarchy.common.exceptions;\n-\n-\/**\n- * Usually this means that we got OOME:heap while trying to gain OOME:metaspace.\n- * We pass test in this case as this breaks test logic. We have dedicated test configurations\n- * for OOME:heap provoking class unloading, that why we are not missing test coverage here.\n- *\/\n-public class GotWrongOOMEException extends RuntimeException {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    public GotWrongOOMEException(String string) {\n-        super(string);\n-    }\n-\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/stressHierarchy\/common\/exceptions\/GotWrongOOMEException.java","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n- *     choosen: ignore tail elements in Lists that are too long. This is also what\n+ *     chosen: ignore tail elements in Lists that are too long. This is also what\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ArrayReference\/setValues_l\/setvaluesl002\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.test.lib.JDWP;\n@@ -72,3 +73,0 @@\n-        String port;\n-        String listenPort;\n-        Process proc;\n@@ -99,3 +97,0 @@\n-        port = argHandler.getTransportPort();\n-        listenPort = argHandler.getTransportPort();\n-\n@@ -104,3 +99,3 @@\n-        String cmd = java +\n-                \" -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=\" +\n-                listenPort + \" \" + DEBUGEE_CLASS;\n+        String cmd = java\n+                + \" -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=0\"\n+                + \" \" + DEBUGEE_CLASS;\n@@ -111,1 +106,2 @@\n-        debugee.redirectOutput(log);\n+        JDWP.ListenAddress listenAddress = debugee.redirectOutputAndDetectListeningAddress(log);\n+        String port = listenAddress.address();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attach\/attach001.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.test.lib.JDWP;\n@@ -72,3 +73,0 @@\n-        String port;\n-        String listenPort;\n-        Process proc;\n@@ -99,3 +97,0 @@\n-        port = argHandler.getTransportPort();\n-        listenPort = argHandler.getTransportPort();\n-\n@@ -104,3 +99,3 @@\n-        String cmd = java +\n-                \" -Xdebug -Xnoagent -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=\" +\n-                listenPort + \" \" + DEBUGEE_CLASS;\n+        String cmd = java\n+                + \" -Xdebug -Xnoagent -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0\"\n+                + \" \" + DEBUGEE_CLASS;\n@@ -111,1 +106,2 @@\n-        debugee.redirectOutput(log);\n+        JDWP.ListenAddress listenAddress = debugee.redirectOutputAndDetectListeningAddress(log);\n+        String port = listenAddress.address();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attachnosuspend\/attachnosuspend001.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- *         Debugger in loop sends commad to debuggee to load class and waits READY answer.\n+ *         Debugger in loop sends command to debuggee to load class and waits READY answer.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/stress\/ClassPrepareEvents\/ClassPrepareEvents001\/ClassPrepareEvents001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that VM_INIT and choosen events were sent.\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that VM_INIT and chosen events were sent.\n@@ -45,3 +45,3 @@\n- *         - changes callbacks for choosen events\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that choosen events were sent\n+ *         - changes callbacks for chosen events\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that chosen events were sent\n@@ -50,1 +50,1 @@\n- *         - sets off callbacks for choosen events\n+ *         - sets off callbacks for chosen events\n@@ -52,1 +52,1 @@\n- *         - checks that no choosen events are sent until VMDeath event.\n+ *         - checks that no chosen events are sent until VMDeath event.\n@@ -54,1 +54,1 @@\n- *     (a) except for choosen events no other optional events are generated on\n+ *     (a) except for chosen events no other optional events are generated on\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t001\/TestDescription.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that VM_INIT and choosen events were sent.\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that VM_INIT and chosen events were sent.\n@@ -48,3 +48,3 @@\n- *         - changes callbacks for choosen events\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that choosen events were sent\n+ *         - changes callbacks for chosen events\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that chosen events were sent\n@@ -53,1 +53,1 @@\n- *         - sets off callbacks for choosen events\n+ *         - sets off callbacks for chosen events\n@@ -55,1 +55,1 @@\n- *         - checks that no choosen events are sent until VMDeath event.\n+ *         - checks that no chosen events are sent until VMDeath event.\n@@ -57,1 +57,1 @@\n- *     (a) except for choosen events no other optional events are generated on\n+ *     (a) except for chosen events no other optional events are generated on\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t002\/TestDescription.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- *         - sets callbacks for VM_INIT and choosen events during the OnLoad phase\n+ *         - sets callbacks for VM_INIT and chosen events during the OnLoad phase\n@@ -42,2 +42,2 @@\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that VM_INIT and choosen events were sent\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that VM_INIT and chosen events were sent\n@@ -45,3 +45,3 @@\n- *         - changes callbacks for choosen events\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that choosen events were sent\n+ *         - changes callbacks for chosen events\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that chosen events were sent\n@@ -50,1 +50,1 @@\n- *         - sets off callbacks for choosen events\n+ *         - sets off callbacks for chosen events\n@@ -52,1 +52,1 @@\n- *         - checks that no choosen events are sent until VMDeath event.\n+ *         - checks that no chosen events are sent until VMDeath event.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t003\/TestDescription.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that VM_INIT and choosen events were sent.\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that VM_INIT and chosen events were sent.\n@@ -45,3 +45,3 @@\n- *         - changes callbacks for choosen events\n- *         - provides the state to provoke generation of choosen events\n- *         - checks that choosen events were sent\n+ *         - changes callbacks for chosen events\n+ *         - provides the state to provoke generation of chosen events\n+ *         - checks that chosen events were sent\n@@ -50,1 +50,1 @@\n- *         - sets off callbacks for choosen events\n+ *         - sets off callbacks for chosen events\n@@ -52,1 +52,1 @@\n- *         - checks that no choosen events are sent until VMDeath event.\n+ *         - checks that no chosen events are sent until VMDeath event.\n@@ -54,1 +54,1 @@\n- *     (a) except for choosen events no other optional events are generated on\n+ *     (a) except for chosen events no other optional events are generated on\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t004\/TestDescription.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- *     - sets callbacks for VM_INIT and choosen events during the OnLoad phase;\n+ *     - sets callbacks for VM_INIT and chosen events during the OnLoad phase;\n@@ -44,1 +44,1 @@\n- *     - changes callbacks for choosen event;\n+ *     - changes callbacks for chosen event;\n@@ -49,1 +49,1 @@\n- *     - sets off callbacks for choosen event;\n+ *     - sets off callbacks for chosen event;\n@@ -51,1 +51,1 @@\n- *     - checks that no choosen events are sent until VMDeath event.\n+ *     - checks that no chosen events are sent until VMDeath event.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t008\/TestDescription.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- *     - sets callbacks for VM_INIT and choosen events during the OnLoad phase;\n+ *     - sets callbacks for VM_INIT and chosen events during the OnLoad phase;\n@@ -43,1 +43,1 @@\n- *     - changes callbacks for choosen event;\n+ *     - changes callbacks for chosen event;\n@@ -48,1 +48,1 @@\n- *     - sets off callbacks for choosen event;\n+ *     - sets off callbacks for chosen event;\n@@ -50,1 +50,1 @@\n- *     - checks that no choosen events are sent until VMDeath event.\n+ *     - checks that no chosen events are sent until VMDeath event.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t009\/TestDescription.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- *     - sets callbacks for VM_INIT and choosen events during the OnLoad phase;\n+ *     - sets callbacks for VM_INIT and chosen events during the OnLoad phase;\n@@ -42,1 +42,1 @@\n- *     - expects that each of choosen events is sent at least 1 time.\n+ *     - expects that each of chosen events is sent at least 1 time.\n@@ -44,1 +44,1 @@\n- *     - changes callbacks for choosen event;\n+ *     - changes callbacks for chosen event;\n@@ -46,1 +46,1 @@\n- *     - checks that altered callback works and each of choosen events\n+ *     - checks that altered callback works and each of chosen events\n@@ -49,1 +49,1 @@\n- *     - sets off callbacks for choosen event;\n+ *     - sets off callbacks for chosen event;\n@@ -51,1 +51,1 @@\n- *     - checks that no choosen events are sent until VMDeath event.\n+ *     - checks that no chosen events are sent until VMDeath event.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t010\/TestDescription.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- *     - sets callbacks for VM_INIT and choosen events during the OnLoad phase;\n+ *     - sets callbacks for VM_INIT and chosen events during the OnLoad phase;\n@@ -41,1 +41,1 @@\n- *     - expects that each of choosen events is sent at least 1 time.\n+ *     - expects that each of chosen events is sent at least 1 time.\n@@ -43,1 +43,1 @@\n- *     - changes callbacks for choosen event;\n+ *     - changes callbacks for chosen event;\n@@ -45,1 +45,1 @@\n- *     - checks that altered callback works and each of choosen events\n+ *     - checks that altered callback works and each of chosen events\n@@ -48,1 +48,1 @@\n- *     - sets off callbacks for choosen event;\n+ *     - sets off callbacks for chosen event;\n@@ -50,1 +50,1 @@\n- *     - checks that no choosen events are sent until VMDeath event.\n+ *     - checks that no chosen events are sent until VMDeath event.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t011\/TestDescription.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- *     - changes callbacks for choosen event;\n+ *     - changes callbacks for chosen event;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t012\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- *    <li>provides the state to provoke generation of choosen events (see details below);<\/li>\n+ *    <li>provides the state to provoke generation of chosen events (see details below);<\/li>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- *     (4) provides the state to provoke generation of choosen events (see details\n+ *     (4) provides the state to provoke generation of chosen events (see details\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM07\/em07t002\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-                \/\/ This is choosen to have one scenario of each type and recursionType.\n+                \/\/ This is chosen to have one scenario of each type and recursionType.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/StandardThreadMonitoringScenarioFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.function.Consumer;\n@@ -34,7 +37,1 @@\n-    private PrintStream    pout = null;\n-    private Log            log  = null;\n-\n-    \/**\n-     * Few symbols to precede every text line being redirected.\n-     *\/\n-    private String prefix = \"\";\n+    private List<Consumer<String>> processors = new LinkedList<>();\n@@ -57,1 +54,1 @@\n-    public IORedirector(InputStream in, OutputStream out) {\n+    public IORedirector(InputStream in, OutputStream out, String prefix) {\n@@ -60,1 +57,7 @@\n-        pout = new PrintStream(out);\n+        PrintStream pout = new PrintStream(out);\n+        addProcessor(s -> {\n+            synchronized (pout) {\n+                pout.println(prefix + s);\n+                pout.flush();\n+            }\n+        });\n@@ -70,1 +73,0 @@\n-        this.prefix = prefix;\n@@ -72,1 +74,1 @@\n-        this.log = log;\n+        addProcessor(s -> log.println(prefix + s));\n@@ -75,5 +77,6 @@\n-    \/**\n-     * Set the prefix for redirected messages;\n-     *\/\n-    public void setPrefix(String prefix) {\n-        this.prefix = prefix;\n+    public void addProcessor(Consumer<String> lineProcessor) {\n+        processors.add(lineProcessor);\n+    }\n+\n+    private void processLine(String line) {\n+        processors.stream().forEach(processor -> processor.accept(line));\n@@ -107,2 +110,1 @@\n-        String logPrefix = \"IORedirector-\" + prefix;\n-        if (bin == null || (pout == null && log == null))\n+        if (bin == null || processors.isEmpty()) {\n@@ -110,0 +112,1 @@\n+        }\n@@ -115,10 +118,1 @@\n-                String message = prefix + line;\n-                if (log != null) {\n-                    \/\/ It's synchronized and auto-flushed:\n-                    log.println(message);\n-                } else if (pout != null) {\n-                    synchronized (pout) {\n-                        pout.println(message);\n-                        pout.flush();\n-                    }\n-                }\n+                processLine(line);\n@@ -129,11 +123,1 @@\n-            if (log != null) {\n-                log.println(msg);\n-            } else if (pout != null) {\n-                synchronized (pout) {\n-                    pout.println(msg);\n-                    pout.flush();\n-                }\n-            } else {\n-                System.err.println(msg);\n-                System.err.flush();\n-            }\n+            processLine(msg);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/IORedirector.java","additions":23,"deletions":39,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,3 +26,0 @@\n-import java.io.*;\n-import java.util.*;\n-\n@@ -32,0 +29,2 @@\n+import java.io.PrintStream;\n+\n@@ -41,5 +40,3 @@\n-    private Node root;\n-    private int numberOfNodes;\n-    private float branchiness;\n-    private int size;\n-    private ExecutionController controller;\n+    private final Node root;\n+    private final float branchiness;\n+    private final ExecutionController controller;\n@@ -65,1 +62,0 @@\n-        initTree();\n@@ -69,8 +65,0 @@\n-        this.numberOfNodes = numberOfNodes;\n-        this.branchiness = branchiness;\n-        this.size = size;\n-        this.controller = controller;\n-        initTree();\n-    }\n-\n-    private void initTree() {\n@@ -79,2 +67,1 @@\n-                                             + numberOfNodes + \", must be at \"\n-                                             + \"least 1.\");\n+                    + numberOfNodes + \", must be at least 1.\");\n@@ -82,1 +69,1 @@\n-        if ( (branchiness >= 1) || (branchiness <= 0) ) {\n+        if ((branchiness >= 1) || (branchiness <= 0)) {\n@@ -84,3 +71,1 @@\n-                                             + numberOfNodes + \", must be at \"\n-                                             + \"greater than 0 and less than \"\n-                                             + \" 1.\");\n+                    + branchiness + \", must be greater than 0 and less than 1.\");\n@@ -90,1 +75,1 @@\n-                                             + size + \", must be at least 1.\");\n+                    + size + \", must be at least 1.\");\n@@ -94,1 +79,3 @@\n-        root = createTree(numberOfNodes, size);\n+        this.branchiness = branchiness;\n+        this.controller = controller;\n+        this.root = createTree(numberOfNodes, size);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/NonbranchyTree.java","additions":13,"deletions":26,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import jdk.test.lib.JDWP;\n@@ -29,0 +30,1 @@\n+import java.util.function.Consumer;\n@@ -305,2 +307,1 @@\n-     * given <code>out<\/code> stream. If the debugee's stdout\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>out<\/code> stream.\n@@ -315,3 +316,1 @@\n-\/\/            throw new TestBug(\"Debugee's stdout is already redirected\");\n-        stdoutRedirector = new IORedirector(getOutPipe(),out);\n-        stdoutRedirector.setPrefix(DEBUGEE_STDOUT_LOG_PREFIX);\n+        stdoutRedirector = new IORedirector(getOutPipe(), out, DEBUGEE_STDOUT_LOG_PREFIX);\n@@ -325,2 +324,1 @@\n-     * given <code>Log<\/code>. If the debugee's stdout\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>Log<\/code>.\n@@ -329,0 +327,4 @@\n+        redirectStdout(log, prefix, null);\n+    }\n+\n+    private void redirectStdout(Log log, String prefix, Consumer<String> stdoutProcessor) {\n@@ -330,1 +332,0 @@\n-\/\/            stdoutRedirector.setPrefix(prefix);\n@@ -332,1 +333,0 @@\n-\/\/            throw new TestBug(\"the debugee's stdout is already redirected\");\n@@ -335,0 +335,3 @@\n+        if (stdoutProcessor != null) {\n+            stdoutRedirector.addProcessor(stdoutProcessor);\n+        }\n@@ -342,2 +345,1 @@\n-     * given <code>err<\/code> stream. If the debugee's stderr\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>err<\/code> stream.\n@@ -352,3 +354,1 @@\n-\/\/            throw new TestBug(\"Debugee's stderr is already redirected\");\n-        stderrRedirector = new IORedirector(getErrPipe(),err);\n-        stderrRedirector.setPrefix(DEBUGEE_STDERR_LOG_PREFIX);\n+        stderrRedirector = new IORedirector(getErrPipe(), err, DEBUGEE_STDERR_LOG_PREFIX);\n@@ -362,2 +362,1 @@\n-     * given <code>Log<\/code>. If the debugee's stderr\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>Log<\/code>.\n@@ -367,1 +366,0 @@\n-\/\/            stderrRedirector.setPrefix(prefix);\n@@ -369,1 +367,0 @@\n-\/\/            throw new TestBug(\"Debugee's stderr is already redirected\");\n@@ -380,2 +377,0 @@\n-     * If the debugee's stdout\/stderr were already redirected,\n-     * the TestBug exception is thrown.\n@@ -384,2 +379,40 @@\n-        redirectStdout(log, \"debugee.stdout> \");\n-        redirectStderr(log, \"debugee.stderr> \");\n+        redirectStdout(log, DEBUGEE_STDOUT_LOG_PREFIX);\n+        redirectStderr(log, DEBUGEE_STDERR_LOG_PREFIX);\n+    }\n+\n+    \/**\n+     * Starts redirecting of the debugee's stdout\/stderr to the\n+     * given <code>Log<\/code> using standard prefixes\n+     * and detects listening address from the debuggee stdout.\n+     *\/\n+    public JDWP.ListenAddress redirectOutputAndDetectListeningAddress(Log log) {\n+        JDWP.ListenAddress listenAddress[] = new JDWP.ListenAddress[1];\n+        Consumer<String> stdoutProcessor = line -> {\n+            JDWP.ListenAddress addr = JDWP.parseListenAddress(line);\n+            if (addr != null) {\n+                synchronized (listenAddress) {\n+                    listenAddress[0] = addr;\n+                    listenAddress.notifyAll();\n+                }\n+            }\n+        };\n+\n+        redirectStdout(log, DEBUGEE_STDOUT_LOG_PREFIX, stdoutProcessor);\n+        redirectStderr(log, DEBUGEE_STDERR_LOG_PREFIX);\n+\n+        synchronized (listenAddress) {\n+            while (!terminated() && listenAddress[0] == null) {\n+                try {\n+                    listenAddress.wait(500);\n+                } catch (InterruptedException e) {\n+                    \/\/ ignore\n+                }\n+            }\n+        }\n+        if (terminated()) {\n+            throw new Failure(\"Failed to detect debuggee listening port\");\n+        }\n+\n+        log.display(\"Debuggee is listening on port \" + listenAddress[0].address());\n+\n+        return listenAddress[0];\n@@ -387,0 +420,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeProcess.java","additions":56,"deletions":22,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -44,0 +44,8 @@\n+\n+\/\/ Checks return code for JNI calls that don't raise exceptions\n+\/\/ and generate fatal error\n+#define CHECK(jniCall) do { \\\n+  if ((jniCall) != 0) { \\\n+    env->FatalError(\"Error invoking JNI method: \" #jniCall); \\\n+  } \\\n+} while (0)\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/jnihelper.h","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n-    const char **str;\n-    char **checkstr;\n+  const char **str;\n+  char **checkstr;\n@@ -41,3 +41,3 @@\n-    const jchar **str;\n-    char **checkstr;\n-    int *size;\n+  const jchar **str;\n+  char **checkstr;\n+  int *size;\n@@ -48,26 +48,27 @@\n-                    jint nstr, jint printperiod) {\n-\n-    int i,j;\n-    size_t k;\n-    static CHAR_ARRAY *element;\n-    unsigned char digest[DIGESTLENGTH];\n-    static int allocs=0;\n-    static size_t strsize=0;\n-    static unsigned int compared=1;\n-\n-    const char *clsName = \"nsk\/stress\/jni\/JNIter001\";\n-    const char *name=\"setpass\";\n-    const char *sig=\"(Z)V\";\n-    const char *halt=\"halt\";\n-    const char *haltSig=\"()V\";\n-    jstring tmpstr;\n-    jclass clazz;\n-    jmethodID methodID;\n-\n-    env->MonitorEnter(jobj); CE\n-    if (!allocs) {\n-        element = (CHAR_ARRAY *)c_malloc(env, sizeof(CHAR_ARRAY));\n-        element->str = (const char **)c_malloc(env, nstr*sizeof(const char *));\n-        element->checkstr = (char **)c_malloc(env, nstr*sizeof(char *));\n-        for (j=0;j<nstr;j++)\n-            element->checkstr[j] = (char *)c_malloc(env, DIGESTLENGTH*sizeof(char));\n+                                         jint nstr, jint printperiod) {\n+\n+  int i, j;\n+  size_t k;\n+  static CHAR_ARRAY *element;\n+  unsigned char digest[DIGESTLENGTH];\n+  static int allocs = 0;\n+  static size_t strsize = 0;\n+  static unsigned int compared = 1;\n+\n+  const char *clsName = \"nsk\/stress\/jni\/JNIter001\";\n+  const char *name = \"setpass\";\n+  const char *sig = \"(Z)V\";\n+  const char *halt = \"halt\";\n+  const char *haltSig = \"()V\";\n+  jstring tmpstr;\n+  jclass clazz;\n+  jmethodID methodID;\n+\n+  CHECK(env->MonitorEnter(jobj));\n+\n+  if (!allocs) {\n+    element = (CHAR_ARRAY *)c_malloc(env, sizeof(CHAR_ARRAY));\n+    element->str = (const char **)c_malloc(env, nstr * sizeof(const char*));\n+    element->checkstr = (char **)c_malloc(env, nstr * sizeof(char*));\n+    for (j = 0; j < nstr; j++) {\n+      element->checkstr[j] = (char *)c_malloc(env, DIGESTLENGTH * sizeof(char));\n@@ -75,2 +76,19 @@\n-    for (j=0;j<DIGESTLENGTH;j++) {\n-        digest[j]=0;\n+  }\n+  for (j = 0; j < DIGESTLENGTH; j++) {\n+    digest[j] = 0;\n+  }\n+  element->str[allocs] = env->GetStringUTFChars(jstr, 0); CE\n+  if (strlen(element->str[allocs]) != (size_t) env->GetStringUTFLength(jstr)) {\n+    printf(\"Length is wrong in string No. %d\\n\", allocs);\n+  } else {\n+    strsize += strlen(element->str[allocs]) + 1;\n+  }\n+  for (k = 0; k < strlen(element->str[allocs]); k++) {\n+    digest[k % DIGESTLENGTH] += element->str[allocs][k];\n+  }\n+  memcpy(element->checkstr[allocs], digest, DIGESTLENGTH);\n+  allocs++;\n+  if (allocs % printperiod == 0) {\n+    printf(\"Check string for thread %s is \", element->str[allocs - 1]);\n+    for (j = 0; j < DIGESTLENGTH; j++) {\n+      printf(\"%02x\", digest[j]);\n@@ -78,8 +96,27 @@\n-    element->str[allocs] = env->GetStringUTFChars(jstr,0); CE\n-    if (strlen(element->str[allocs]) !=\n-        (size_t) env->GetStringUTFLength(jstr))\n-        printf(\"Length is wrong in string No. %d\\n\",allocs);\n-    else\n-        strsize += strlen(element->str[allocs])+1;\n-    for (k = 0; k < strlen(element->str[allocs]); k++) {\n-       digest[k % DIGESTLENGTH] += element->str[allocs][k];\n+    printf(\"\\n\");\n+  }\n+  if (allocs == nstr) {\n+    printf(\"JNI UTF8 strings memory = %zd\\n\", strsize);\n+    tmpstr = env->NewStringUTF(element->str[allocs - 1]); CE\n+    for (j = 0; j < nstr; j++) {\n+\n+      for (i = 0; i < DIGESTLENGTH; i++) {\n+        digest[i] = 0;\n+      }\n+      for (k = 0; k < strlen(element->str[j]); k++) {\n+        digest[k % DIGESTLENGTH] += element->str[j][k];\n+      }\n+      if (memcmp(digest, element->checkstr[j], DIGESTLENGTH) == 0) {\n+        env->ReleaseStringUTFChars(jstr, element->str[j]); CE\n+        element->str[j] = NULL;\n+        element->checkstr[j] = NULL;\n+      } else {\n+        compared = 0;\n+        printf(\"The element No. %d has been corrupted %s vs %s\\n\", j,\n+               element->str[j], element->checkstr[j]);\n+        printf(\"Digest string  is %s [\", element->str[j]);\n+        for (i = 0; i < DIGESTLENGTH; i++) {\n+          printf(\"ch[%d] = %02x\", i, digest[i]);\n+        }\n+        printf(\"Digest end\\n\");\n+      }\n@@ -87,7 +124,4 @@\n-    memcpy(element->checkstr[allocs],digest,DIGESTLENGTH);\n-    allocs++;\n-    if (allocs % printperiod == 0) {\n-        printf(\"Check string for thread %s is \", element->str[allocs-1]);\n-        for (j=0;j<DIGESTLENGTH;j++)\n-            printf(\"%02x\", digest[j]);\n-        printf(\"\\n\");\n+    allocs = 0;\n+    strsize = 0;\n+    for (j = 0; j < nstr; j++) {\n+      free(element->checkstr[j]);\n@@ -95,40 +129,7 @@\n-    if (allocs == nstr) {\n-        printf(\"JNI UTF8 strings memory=%zd\\n\", strsize);\n-        tmpstr=env->NewStringUTF(element->str[allocs-1]); CE\n-        for (j=0; j<nstr; j++) {\n-\n-            for (i=0;i<DIGESTLENGTH;i++) {\n-                digest[i]=0;\n-            }\n-            for (k=0; k < strlen(element->str[j]); k++) {\n-                digest[k % DIGESTLENGTH] += element->str[j][k];\n-            }\n-            if (memcmp(digest,element->checkstr[j],DIGESTLENGTH) == 0) {\n-                env->ReleaseStringUTFChars(jstr,element->str[j]); CE\n-                element->str[j] = NULL;\n-                element->checkstr[j] = NULL;\n-            }\n-            else {\n-                compared=0;\n-                printf(\"The element No. %d has been corrupted %s vs %s\\n\",j, element->str[j],element->checkstr[j]);\n-                printf(\"Digest string  is %s [\", element->str[j]);\n-                for (i=0;i<DIGESTLENGTH;i++)\n-                    printf(\"ch[%d]=%02x\", i, digest[i]);\n-                printf(\"Digest end\\n\");\n-            }\n-        }\n-        allocs=0;\n-        strsize = 0;\n-        for (j=0;j<nstr;j++)\n-            free(element->checkstr[j]);\n-        free(element->checkstr);\n-        free((void *)(element->str));\n-        free(element);\n-        clazz=env->FindClass(clsName); CE\n-        if (!compared) {\n-            methodID=env->GetStaticMethodID(clazz, name, sig); CE\n-            env->CallStaticVoidMethod(clazz, methodID, JNI_FALSE); CE\n-        }\n-        \/\/methodID=env->GetStaticMethodID(clazz, halt, haltSig); CE\n-        \/\/env->CallStaticVoidMethod(clazz, methodID); CE\n-        return(tmpstr);\n+    free(element->checkstr);\n+    free((void *)(element->str));\n+    free(element);\n+    clazz = env->FindClass(clsName); CE\n+    if (!compared) {\n+      methodID = env->GetStaticMethodID(clazz, name, sig); CE\n+      env->CallStaticVoidMethod(clazz, methodID, JNI_FALSE); CE\n@@ -136,2 +137,6 @@\n-    env->MonitorExit(jobj); CE\n-    return (env->NewStringUTF(element->str[allocs-1]));\n+    \/\/methodID = env->GetStaticMethodID(clazz, halt, haltSig); CE\n+    \/\/env->CallStaticVoidMethod(clazz, methodID); CE\n+    return tmpstr;\n+  }\n+  CHECK(env->MonitorExit(jobj));\n+  return (env->NewStringUTF(element->str[allocs - 1]));\n@@ -142,31 +147,28 @@\n-                    jint nstr, jint printperiod) {\n-\n-    int i,j;\n-    static JCHAR_ARRAY *javachars;\n-    unsigned char digest[DIGESTLENGTH];\n-    static int index=0;\n-    static long len=0;\n-    static unsigned int equal=1;\n-    char *elem;\n-    int elem_len = -1;\n-\n-    const char *clsName = \"nsk\/stress\/jni\/JNIter001\";\n-    const char *name=\"setpass\";\n-    const char *sig=\"(Z)V\";\n-    const char *halt=\"halt\";\n-    const char *haltSig=\"()V\";\n-    jstring tmpstr;\n-    jclass clazz;\n-    jmethodID methodID;\n-\n-    env->MonitorEnter(jobj); CE\n-    if (!index) {\n-        javachars = (JCHAR_ARRAY *)c_malloc(env, sizeof(JCHAR_ARRAY));\n-        javachars->str = (const jchar **)c_malloc(env, nstr*sizeof(const jchar *));\n-        javachars->checkstr = (char **)c_malloc(env, nstr*sizeof(char *));\n-        javachars->size = (int *)c_malloc(env, nstr*sizeof(int));\n-        for (j=0;j<nstr;j++)\n-            javachars->checkstr[j] = (char *)c_malloc(env, DIGESTLENGTH*sizeof(char));\n-    }\n-    for (j=0;j<DIGESTLENGTH;j++) {\n-        digest[j]=0;\n+                                         jint nstr, jint printperiod) {\n+\n+  int i, j;\n+  static JCHAR_ARRAY *javachars;\n+  unsigned char digest[DIGESTLENGTH];\n+  static int index = 0;\n+  static long len = 0;\n+  static unsigned int equal = 1;\n+  char *elem;\n+  int elem_len = -1;\n+\n+  const char *clsName = \"nsk\/stress\/jni\/JNIter001\";\n+  const char *name = \"setpass\";\n+  const char *sig = \"(Z)V\";\n+  const char *halt = \"halt\";\n+  const char *haltSig = \"()V\";\n+  jstring tmpstr;\n+  jclass clazz;\n+  jmethodID methodID;\n+\n+  CHECK(env->MonitorEnter(jobj));\n+  if (!index) {\n+    javachars = (JCHAR_ARRAY *)c_malloc(env, sizeof(JCHAR_ARRAY));\n+    javachars->str = (const jchar **)c_malloc(env, nstr * sizeof(const jchar*));\n+    javachars->checkstr = (char **)c_malloc(env, nstr * sizeof(char*));\n+    javachars->size = (int *)c_malloc(env, nstr * sizeof(int));\n+    for (j = 0; j < nstr; j++) {\n+      javachars->checkstr[j] = (char *)c_malloc(env, DIGESTLENGTH * sizeof(char));\n@@ -174,7 +176,22 @@\n-    javachars->str[index] = env->GetStringChars(jstr,0); CE\n-    javachars->size[index] = env->GetStringUTFLength(jstr); CE\n-    elem_len = javachars->size[index];\n-    len += elem_len;\n-    elem = (char*) c_malloc(env, elem_len*sizeof(char));\n-    for (j=0; j < elem_len; j++) {\n-        elem[j] = (char) javachars->str[index][j];\n+  }\n+  for (j = 0; j < DIGESTLENGTH; j++) {\n+    digest[j] = 0;\n+  }\n+  javachars->str[index] = env->GetStringChars(jstr, 0); CE\n+  javachars->size[index] = env->GetStringUTFLength(jstr); CE\n+  elem_len = javachars->size[index];\n+  len += elem_len;\n+  elem = (char*) c_malloc(env, elem_len * sizeof(char));\n+  for (j = 0; j < elem_len; j++) {\n+    elem[j] = (char) javachars->str[index][j];\n+  }\n+\n+  \/\/memcpy(digest, elem, javachars->size[index]);\n+  for (j = 0; j < elem_len; j++) {\n+    digest[j % DIGESTLENGTH] += elem[j];\n+  }\n+  memcpy(javachars->checkstr[index++], digest, DIGESTLENGTH);\n+  if (index % printperiod == 0) {\n+    printf(\"Check string sum for thread %.*s is \", elem_len, elem);\n+    for (j = 0; j < DIGESTLENGTH; j++) {\n+      printf(\"%02x\", digest[j]);\n@@ -182,4 +199,31 @@\n-\n-    \/\/memcpy(digest, elem, javachars->size[index]);\n-    for (j=0;j<elem_len; j++) {\n-        digest[j % DIGESTLENGTH]+=elem[j];\n+    printf(\"\\n\");\n+  }\n+  free(elem);\n+  if (index == nstr) {\n+    printf(\"JNI Unicode strings memory = %ld\\n\", len);\n+    tmpstr = env->NewString(javachars->str[index - 1], elem_len); CE\n+    for (j = 0; j < nstr; j++) {\n+      elem = (char*) c_malloc(env, javachars->size[j] * sizeof(char));\n+      for (i = 0; i < javachars->size[j]; i++) {\n+        elem[i] = (char) javachars->str[j][i];\n+      }\n+      \/\/memcpy(digest, elem, javachars->size[j]);\n+      for (i = 0; i < DIGESTLENGTH; i++) {\n+        digest[i] = 0;\n+      }\n+      for (i = 0; i < javachars->size[j]; i++) {\n+        digest[i % DIGESTLENGTH] += elem[i];\n+      }\n+      free(elem);\n+      if (memcmp(digest, javachars->checkstr[j], javachars->size[j]) == 0) {\n+        env->ReleaseStringChars(jstr, javachars->str[j]); CE\n+        javachars->str[j] = NULL;\n+        javachars->checkstr[j] = NULL;\n+        javachars->size[j] = 0;\n+      } else {\n+        equal = 0;\n+        printf(\"The Unicode element No. %d has been corrupted\\n\", j);\n+        for (i = 0; i < DIGESTLENGTH; i++) {\n+          printf(\"digest[%d] = %02x checkstr[%d] = %02x\\n\", i, digest[i], i, javachars->checkstr[j][i]);\n+        }\n+      }\n@@ -187,6 +231,4 @@\n-    memcpy(javachars->checkstr[index++],digest,DIGESTLENGTH);\n-    if (index % printperiod == 0) {\n-        printf(\"Check string sum for thread %.*s is \", elem_len, elem);\n-        for (j=0;j<DIGESTLENGTH;j++)\n-            printf(\"%02x\", digest[j]);\n-        printf(\"\\n\");\n+    index = 0;\n+    len = 0;\n+    for (j = 0; j < nstr; j++) {\n+      free(javachars->checkstr[j]);\n@@ -194,47 +236,8 @@\n-    free(elem);\n-    if (index == nstr) {\n-        printf(\"JNI Unicode strings memory=%ld\\n\",len);\n-        tmpstr=env->NewString(javachars->str[index-1],elem_len); CE\n-        for (j=0; j<nstr; j++) {\n-            elem = (char*) c_malloc(env, javachars->size[j]*sizeof(char));\n-            for (i=0; i < javachars->size[j]; i++) {\n-                elem[i] = (char) javachars->str[j][i];\n-            }\n-            \/\/memcpy(digest, elem, javachars->size[j]);\n-            for (i=0;i<DIGESTLENGTH;i++) {\n-                digest[i]=0;\n-            }\n-            for (i=0;i<javachars->size[j]; i++) {\n-                digest[i % DIGESTLENGTH]+=elem[i];\n-            }\n-            free(elem);\n-            if (memcmp(digest,javachars->checkstr[j],javachars->size[j]) == 0) {\n-                env->ReleaseStringChars(jstr,javachars->str[j]); CE\n-                javachars->str[j] = NULL;\n-                javachars->checkstr[j] = NULL;\n-                javachars->size[j] = 0;\n-            }\n-            else {\n-                equal=0;\n-                printf(\"The Unicode element No. %d has been corrupted\\n\",j);\n-                for (i=0;i<DIGESTLENGTH;i++) {\n-                    printf(\"digest[%d]=%02x checkstr[%d]=%02x\\n\",i,digest[i],i,javachars->checkstr[j][i]);\n-                }\n-            }\n-        }\n-        index=0;\n-        len = 0;\n-        for (j=0;j<nstr;j++)\n-            free(javachars->checkstr[j]);\n-        free(javachars->checkstr);\n-        free((void *)(javachars->str));\n-        free(javachars->size);\n-        free(javachars);\n-        clazz=env->FindClass(clsName); CE\n-        if (!equal) {\n-            methodID=env->GetStaticMethodID(clazz, name, sig); CE\n-            env->CallStaticVoidMethod(clazz, methodID, JNI_FALSE); CE\n-        }\n-        \/\/methodID=env->GetStaticMethodID(clazz, halt, haltSig); CE\n-        \/\/env->CallStaticVoidMethod(clazz, methodID); CE\n-        return(tmpstr);\n+    free(javachars->checkstr);\n+    free((void *)(javachars->str));\n+    free(javachars->size);\n+    free(javachars);\n+    clazz = env->FindClass(clsName); CE\n+    if (!equal) {\n+      methodID = env->GetStaticMethodID(clazz, name, sig); CE\n+      env->CallStaticVoidMethod(clazz, methodID, JNI_FALSE); CE\n@@ -242,2 +245,6 @@\n-    env->MonitorExit(jobj); CE\n-    return(env->NewString(javachars->str[index-1],elem_len));\n+    \/\/methodID = env->GetStaticMethodID(clazz, halt, haltSig); CE\n+    \/\/env->CallStaticVoidMethod(clazz, methodID); CE\n+    return tmpstr;\n+  }\n+  CHECK(env->MonitorExit(jobj));\n+  return env->NewString(javachars->str[index - 1], elem_len);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress001.cpp","additions":195,"deletions":188,"binary":false,"changes":383,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-  va_start(ap,methodID);\n-  tmp=env->NewObjectV(clazz, methodID, ap);\n+  va_start(ap, methodID);\n+  tmp = env->NewObjectV(clazz, methodID, ap);\n@@ -42,1 +42,1 @@\n-              jlong lng, jcharArray jChArr, jfloat flt, jdouble dbl) {\n+                                          jlong lng, jcharArray jChArr, jfloat flt, jdouble dbl) {\n@@ -49,8 +49,9 @@\n-  const char *classname=\"nsk\/stress\/jni\/objectsJNI\";\n-  const char *name=\"<init>\";\n-  const char *sig=\"(Ljava\/lang\/String;IJ[CFD)V\";\n-  const char *upperClassName=\"nsk\/stress\/jni\/jnistress002\";\n-  const char *fieldName=\"jniStringAllocSize\";\n-  const char *fieldSig=\"I\";\n-  const char *setpass=\"halt\";\n-  const char *setpassSig=\"()V\";\n+  jfieldID fieldID;\n+  const char *classname = \"nsk\/stress\/jni\/objectsJNI\";\n+  const char *name = \"<init>\";\n+  const char *sig = \"(Ljava\/lang\/String;IJ[CFD)V\";\n+  const char *upperClassName = \"nsk\/stress\/jni\/jnistress002\";\n+  const char *fieldName = \"jniStringAllocSize\";\n+  const char *fieldSig = \"I\";\n+  const char *setpass = \"halt\";\n+  const char *setpassSig = \"()V\";\n@@ -59,1 +60,1 @@\n-  env->MonitorEnter(jobj); CE\n+  CHECK(env->MonitorEnter(jobj));\n@@ -61,7 +62,7 @@\n-  env->MonitorExit(jobj); CE\n-  paramArr[0].l=jstr;\n-  paramArr[1].i=intgr;\n-  paramArr[2].j=lng;\n-  paramArr[3].l=jChArr;\n-  paramArr[4].f=flt;\n-  paramArr[5].d=dbl;\n+  CHECK(env->MonitorExit(jobj));\n+  paramArr[0].l = jstr;\n+  paramArr[1].i = intgr;\n+  paramArr[2].j = lng;\n+  paramArr[3].l = jChArr;\n+  paramArr[4].f = flt;\n+  paramArr[5].d = dbl;\n@@ -69,7 +70,3 @@\n-  clazz=env->FindClass(classname); CE\n-  obj=env->NewObjectArray((jsize)3,clazz,\n-                 env->AllocObject(clazz)); CE\n-  if (obj == NULL) {\n-    fprintf(stderr,\"Can not construct the object Array for  %s\\n\", classname);\n-    return(NULL);\n-  }\n+  clazz = env->FindClass(classname); CE\n+  element = env->AllocObject(clazz); CE\n+  obj = env->NewObjectArray((jsize)3, clazz, element); CE\n@@ -77,5 +74,1 @@\n-  methodID=env->GetMethodID(clazz,name,sig); CE\n-  if (methodID == NULL) {\n-    fprintf(stderr,\"Can not get the ID of <init> for %s\\n\", classname);\n-    return(NULL);\n-  }\n+  methodID = env->GetMethodID(clazz, name, sig); CE\n@@ -83,5 +76,5 @@\n-  element=env->NewObject(clazz,methodID,\n-                jstr, intgr, lng, jChArr, flt, dbl); CE\n-  env->SetObjectArrayElement(obj,0,element); CE\n-  element=env->NewObjectA(clazz,methodID,paramArr); CE\n-  env->SetObjectArrayElement(obj,1,element); CE\n+  element = env->NewObject(clazz, methodID,\n+                           jstr, intgr, lng, jChArr, flt, dbl); CE\n+  env->SetObjectArrayElement(obj, 0, element); CE\n+  element = env->NewObjectA(clazz, methodID, paramArr); CE\n+  env->SetObjectArrayElement(obj, 1, element); CE\n@@ -89,2 +82,2 @@\n-                jstr, intgr, lng, jChArr, flt, dbl); CE\n-  env->SetObjectArrayElement(obj,2,element); CE\n+                            jstr, intgr, lng, jChArr, flt, dbl); CE\n+  env->SetObjectArrayElement(obj, 2, element); CE\n@@ -92,6 +85,6 @@\n-  clazzUp=env->FindClass(upperClassName); CE\n-  if (classCount == env->GetStaticIntField(clazzUp,\n-      env->GetStaticFieldID(clazzUp,fieldName,fieldSig))) {\n-    classname=\"nsk\/stress\/jni\/JNIter002\";\n-    clazz=env->FindClass(classname); CE\n-    methodID=env->GetStaticMethodID(clazz, setpass, setpassSig); CE\n+  clazzUp = env->FindClass(upperClassName); CE\n+  fieldID = env->GetStaticFieldID(clazzUp, fieldName, fieldSig); CE\n+  if (classCount == env->GetStaticIntField(clazzUp, fieldID)) {\n+    classname = \"nsk\/stress\/jni\/JNIter002\";\n+    clazz = env->FindClass(classname); CE\n+    methodID = env->GetStaticMethodID(clazz, setpass, setpassSig); CE\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress002.cpp","additions":38,"deletions":45,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,10 +43,10 @@\n-    jarray *arrayArray;\n-    jboolean *boolBuf;\n-    jbyte *byteBuf;\n-    jchar *charBuf;\n-    jshort *shortBuf;\n-    jint *intBuf;\n-    jlong *longBuf;\n-    jfloat *floatBuf;\n-    jdouble *doubleBuf;\n-    jobjectArray objectsArray;\n+  jarray *arrayArray;\n+  jboolean *boolBuf;\n+  jbyte *byteBuf;\n+  jchar *charBuf;\n+  jshort *shortBuf;\n+  jint *intBuf;\n+  jlong *longBuf;\n+  jfloat *floatBuf;\n+  jdouble *doubleBuf;\n+  jobjectArray objectsArray;\n@@ -54,5 +54,6 @@\n-    int i;\n-    int SIZE=size;\n-    const char *classname=\"java\/lang\/Object\";\n-    jclass clazz = env->FindClass(classname); CE\n-    objectsArray = env->NewObjectArray(8,clazz, env->AllocObject(clazz));\n+  int i;\n+  int SIZE = size;\n+  const char *classname = \"java\/lang\/Object\";\n+  jclass clazz = env->FindClass(classname); CE\n+  jobject obj = env->AllocObject(clazz); CE\n+  objectsArray = env->NewObjectArray(8, clazz, obj); CE\n@@ -60,9 +61,9 @@\n-    arrayArray=(jarray *)malloc(8*sizeof(jarray)); CE\n-    arrayArray[BOOL]=env->NewBooleanArray(SIZE); CE\n-    arrayArray[BYTE]=env->NewByteArray(SIZE); CE\n-    arrayArray[CHAR]=env->NewCharArray(SIZE); CE\n-    arrayArray[SHORT]=env->NewShortArray(SIZE); CE\n-    arrayArray[INT]=env->NewIntArray(SIZE); CE\n-    arrayArray[LONG]=env->NewLongArray(SIZE); CE\n-    arrayArray[FLOAT]=env->NewFloatArray(SIZE); CE\n-    arrayArray[DOUBLE]=env->NewDoubleArray(SIZE); CE\n+  arrayArray = (jarray *)c_malloc(env, 8*sizeof(jarray));\n+  arrayArray[BOOL] = env->NewBooleanArray(SIZE); CE\n+  arrayArray[BYTE] = env->NewByteArray(SIZE); CE\n+  arrayArray[CHAR] = env->NewCharArray(SIZE); CE\n+  arrayArray[SHORT] = env->NewShortArray(SIZE); CE\n+  arrayArray[INT] = env->NewIntArray(SIZE); CE\n+  arrayArray[LONG] = env->NewLongArray(SIZE); CE\n+  arrayArray[FLOAT] = env->NewFloatArray(SIZE); CE\n+  arrayArray[DOUBLE] = env->NewDoubleArray(SIZE); CE\n@@ -70,2 +71,3 @@\n-    for (i=0;i<8;i++)\n-    { env->SetObjectArrayElement(objectsArray,i,arrayArray[i]); CE }\n+  for (i = 0; i < 8; i++) {\n+    env->SetObjectArrayElement(objectsArray, i,arrayArray[i]); CE\n+  }\n@@ -73,8 +75,8 @@\n-    boolBuf=(jboolean *)malloc(SIZE*sizeof(jboolean));\n-    byteBuf=(jbyte *)malloc(SIZE*sizeof(jbyte));\n-    charBuf=(jchar *)malloc(SIZE*sizeof(jchar));\n-    shortBuf=(jshort *)malloc(SIZE*sizeof(jshort));\n-    intBuf=(jint *)malloc(SIZE*sizeof(jint));\n-    longBuf=(jlong *)malloc(SIZE*sizeof(jlong));\n-    floatBuf=(jfloat *)malloc(SIZE*sizeof(jfloat));\n-    doubleBuf=(jdouble *)malloc(SIZE*sizeof(jdouble));\n+  boolBuf = (jboolean *)c_malloc(env, SIZE * sizeof(jboolean));\n+  byteBuf = (jbyte *)c_malloc(env, SIZE * sizeof(jbyte));\n+  charBuf = (jchar *)c_malloc(env, SIZE * sizeof(jchar));\n+  shortBuf = (jshort *)c_malloc(env, SIZE * sizeof(jshort));\n+  intBuf = (jint *)c_malloc(env, SIZE * sizeof(jint));\n+  longBuf = (jlong *)c_malloc(env, SIZE * sizeof(jlong));\n+  floatBuf = (jfloat *)c_malloc(env, SIZE * sizeof(jfloat));\n+  doubleBuf = (jdouble *)c_malloc(env, SIZE * sizeof(jdouble));\n@@ -82,3 +84,2 @@\n-    for (i=0;i<SIZE;i++) {\n-    if (i%2 == 0) boolBuf[i]=JNI_TRUE;\n-    else boolBuf[i]=JNI_FALSE;\n+  for (i = 0; i < SIZE; i++) {\n+    boolBuf[i] = (i % 2 == 0) ? JNI_TRUE : JNI_FALSE;\n@@ -86,7 +87,7 @@\n-      byteBuf[i]=(jbyte)random();\n-      charBuf[i]=(jchar)random();\n-      shortBuf[i]=(jshort)random();\n-      intBuf[i]=(jint)random();\n-      longBuf[i]=(jlong)random();\n-      floatBuf[i]=(jfloat)((random()));\n-      doubleBuf[i]=(jdouble)((random()));\n+      byteBuf[i] = (jbyte)random();\n+      charBuf[i] = (jchar)random();\n+      shortBuf[i] = (jshort)random();\n+      intBuf[i] = (jint)random();\n+      longBuf[i] = (jlong)random();\n+      floatBuf[i] = (jfloat)((random()));\n+      doubleBuf[i] = (jdouble)((random()));\n@@ -94,16 +95,16 @@\n-    byteBuf[i]=(jbyte)109;\n-    charBuf[i]=(jchar)214;\n-    shortBuf[i]=(jshort)9223;\n-    intBuf[i]=(jint)872634;\n-    longBuf[i]=(jlong)276458276;\n-    floatBuf[i]=(jfloat)235.4576284;\n-    doubleBuf[i]=(jdouble)98275.716253567;\n-    }\n-    env->SetBooleanArrayRegion((jbooleanArray) arrayArray[BOOL],0,i,boolBuf); CE\n-    env->SetByteArrayRegion((jbyteArray) arrayArray[BYTE],0,i,byteBuf); CE\n-    env->SetCharArrayRegion((jcharArray) arrayArray[CHAR],0,i,charBuf); CE\n-    env->SetShortArrayRegion((jshortArray) arrayArray[SHORT],0,i,shortBuf); CE\n-    env->SetIntArrayRegion((jintArray) arrayArray[INT],0,i,intBuf); CE\n-    env->SetLongArrayRegion((jlongArray) arrayArray[LONG],0,i,longBuf); CE\n-    env->SetFloatArrayRegion((jfloatArray) arrayArray[FLOAT],0,i,floatBuf); CE\n-    env->SetDoubleArrayRegion((jdoubleArray) arrayArray[DOUBLE],0,i,doubleBuf); CE\n+    byteBuf[i] = (jbyte)109;\n+    charBuf[i] = (jchar)214;\n+    shortBuf[i] = (jshort)9223;\n+    intBuf[i] = (jint)872634;\n+    longBuf[i] = (jlong)276458276;\n+    floatBuf[i] = (jfloat)235.4576284;\n+    doubleBuf[i] = (jdouble)98275.716253567;\n+  }\n+  env->SetBooleanArrayRegion((jbooleanArray) arrayArray[BOOL], 0, i, boolBuf); CE\n+  env->SetByteArrayRegion((jbyteArray) arrayArray[BYTE], 0, i, byteBuf); CE\n+  env->SetCharArrayRegion((jcharArray) arrayArray[CHAR], 0, i, charBuf); CE\n+  env->SetShortArrayRegion((jshortArray) arrayArray[SHORT], 0, i, shortBuf); CE\n+  env->SetIntArrayRegion((jintArray) arrayArray[INT], 0, i, intBuf); CE\n+  env->SetLongArrayRegion((jlongArray) arrayArray[LONG], 0, i, longBuf); CE\n+  env->SetFloatArrayRegion((jfloatArray) arrayArray[FLOAT], 0, i, floatBuf); CE\n+  env->SetDoubleArrayRegion((jdoubleArray) arrayArray[DOUBLE], 0, i, doubleBuf); CE\n@@ -111,9 +112,9 @@\n-    free(doubleBuf);\n-    free(floatBuf);\n-    free(longBuf);\n-    free(intBuf);\n-    free(shortBuf);\n-    free(byteBuf);\n-    free(charBuf);\n-    free(boolBuf);\n-    free(arrayArray);\n+  free(doubleBuf);\n+  free(floatBuf);\n+  free(longBuf);\n+  free(intBuf);\n+  free(shortBuf);\n+  free(byteBuf);\n+  free(charBuf);\n+  free(boolBuf);\n+  free(arrayArray);\n@@ -121,1 +122,1 @@\n-    return objectsArray;\n+  return objectsArray;\n@@ -126,1 +127,1 @@\n-                jobjectArray orig, jobjectArray clone, jint limit) {\n+                                                  jobjectArray orig, jobjectArray clone, jint limit) {\n@@ -128,1 +129,1 @@\n-#define SWAP(param1, param2) tmparr=param2; param2=param1; param1=tmparr;\n+#define SWAP(param1, param2) tmparr = param2; param2 = param1; param1 = tmparr;\n@@ -131,11 +132,11 @@\n-    static volatile long count=0;\n-    jarray *arrayOrig, *arrayClone;\n-    jboolean *boolOrig, *boolClone;\n-    jbyte *byteOrig, *byteClone;\n-    jchar *charOrig, *charClone;\n-    jshort *shortOrig, *shortClone;\n-    jint *intOrig, *intClone;\n-    jlong *longOrig, *longClone;\n-    jfloat *floatOrig, *floatClone;\n-    jdouble *doubleOrig, *doubleClone;\n-    int i;\n+  static volatile long count = 0;\n+  jarray *arrayOrig, *arrayClone;\n+  jboolean *boolOrig, *boolClone;\n+  jbyte *byteOrig, *byteClone;\n+  jchar *charOrig, *charClone;\n+  jshort *shortOrig, *shortClone;\n+  jint *intOrig, *intClone;\n+  jlong *longOrig, *longClone;\n+  jfloat *floatOrig, *floatClone;\n+  jdouble *doubleOrig, *doubleClone;\n+  int i;\n@@ -143,2 +144,2 @@\n-    if ((orig == NULL) || (clone == NULL)) {\n-    fprintf(stderr,\"JNI received a NULL array from Java\\n\");\n+  if ((orig == NULL) || (clone == NULL)) {\n+    fprintf(stderr, \"JNI received a NULL array from Java\\n\");\n@@ -146,2 +147,2 @@\n-    }\n-    if (count == limit) {\n+  }\n+  if (count == limit) {\n@@ -155,3 +156,3 @@\n-    clazz=env->FindClass(classname); CE\n-        jmethod=env->GetMethodID(clazz, setdone, setdonesig); CE\n-        env->CallVoidMethod(jobj, jmethod); CE\n+    clazz = env->FindClass(classname); CE\n+    jmethod = env->GetMethodID(clazz, setdone, setdonesig); CE\n+    env->CallVoidMethod(jobj, jmethod); CE\n@@ -160,10 +161,10 @@\n-    }\n-    env->MonitorEnter(jobj); CE\n-    ++count;\n-    env->MonitorExit(jobj); CE\n-    arrayOrig=(jarray *)malloc(8*sizeof(jarray));\n-    arrayClone=(jarray *)malloc(8*sizeof(jarray));\n-    for (i=0;i<8;i++) {\n-    arrayOrig[i]=(jarray) env->GetObjectArrayElement(orig,i); CE\n-    arrayClone[i]=(jarray) env->GetObjectArrayElement(clone,i); CE\n-    }\n+  }\n+  CHECK(env->MonitorEnter(jobj));\n+  ++count;\n+  CHECK(env->MonitorExit(jobj));\n+  arrayOrig = (jarray *)c_malloc(env, 8 * sizeof(jarray));\n+  arrayClone = (jarray *)c_malloc(env, 8 * sizeof(jarray));\n+  for (i = 0; i < 8; i++) {\n+    arrayOrig[i] = (jarray) env->GetObjectArrayElement(orig, i); CE\n+    arrayClone[i] = (jarray) env->GetObjectArrayElement(clone, i); CE\n+  }\n@@ -171,10 +172,10 @@\n-    \/* Take the elements from Java arrays into native buffers *\/\n-    \/* Use Get<Type>ArrayElements *\/\n-    boolOrig = env->GetBooleanArrayElements((jbooleanArray) arrayOrig[BOOL],0); CE\n-    byteOrig = env->GetByteArrayElements((jbyteArray) arrayOrig[BYTE],0); CE\n-    charOrig = env->GetCharArrayElements((jcharArray) arrayOrig[CHAR],0); CE\n-    shortOrig = env->GetShortArrayElements((jshortArray) arrayOrig[SHORT],0); CE\n-    intOrig = env->GetIntArrayElements((jintArray) arrayOrig[INT],0); CE\n-    longOrig = env->GetLongArrayElements((jlongArray) arrayOrig[LONG],0); CE\n-    floatOrig = env->GetFloatArrayElements((jfloatArray) arrayOrig[FLOAT],0); CE\n-    doubleOrig = env->GetDoubleArrayElements((jdoubleArray) arrayOrig[DOUBLE],0); CE\n+  \/* Take the elements from Java arrays into native buffers *\/\n+  \/* Use Get<Type>ArrayElements *\/\n+  boolOrig = env->GetBooleanArrayElements((jbooleanArray) arrayOrig[BOOL], 0); CE\n+  byteOrig = env->GetByteArrayElements((jbyteArray) arrayOrig[BYTE], 0); CE\n+  charOrig = env->GetCharArrayElements((jcharArray) arrayOrig[CHAR], 0); CE\n+  shortOrig = env->GetShortArrayElements((jshortArray) arrayOrig[SHORT], 0); CE\n+  intOrig = env->GetIntArrayElements((jintArray) arrayOrig[INT], 0); CE\n+  longOrig = env->GetLongArrayElements((jlongArray) arrayOrig[LONG], 0); CE\n+  floatOrig = env->GetFloatArrayElements((jfloatArray) arrayOrig[FLOAT], 0); CE\n+  doubleOrig = env->GetDoubleArrayElements((jdoubleArray) arrayOrig[DOUBLE], 0); CE\n@@ -182,9 +183,9 @@\n-    \/* Alloc some memory for cloned arrays buffers *\/\n-    boolClone=(jboolean *)malloc(SIZE(BOOL)*sizeof(jboolean));\n-    byteClone=(jbyte *)malloc(SIZE(BYTE)*sizeof(jbyte));\n-    charClone=(jchar *)malloc(SIZE(CHAR)*sizeof(jchar));\n-    shortClone=(jshort *)malloc(SIZE(SHORT)*sizeof(jshort));\n-    intClone=(jint *)malloc(SIZE(INT)*sizeof(jint));\n-    longClone=(jlong *)malloc(SIZE(LONG)*sizeof(jlong));\n-    floatClone=(jfloat *)malloc(SIZE(FLOAT)*sizeof(jfloat));\n-    doubleClone=(jdouble *)malloc(SIZE(DOUBLE)*sizeof(jdouble));\n+  \/* Alloc some memory for cloned arrays buffers *\/\n+  boolClone = (jboolean *)c_malloc(env, SIZE(BOOL) * sizeof(jboolean));\n+  byteClone = (jbyte *)c_malloc(env, SIZE(BYTE) * sizeof(jbyte));\n+  charClone = (jchar *)c_malloc(env, SIZE(CHAR) * sizeof(jchar));\n+  shortClone = (jshort *)c_malloc(env, SIZE(SHORT) * sizeof(jshort));\n+  intClone = (jint *)c_malloc(env, SIZE(INT) * sizeof(jint));\n+  longClone = (jlong *)c_malloc(env, SIZE(LONG) * sizeof(jlong));\n+  floatClone = (jfloat *)c_malloc(env, SIZE(FLOAT) * sizeof(jfloat));\n+  doubleClone = (jdouble *)c_malloc(env, SIZE(DOUBLE) * sizeof(jdouble));\n@@ -194,8 +195,8 @@\n-    env->GetBooleanArrayRegion((jbooleanArray) arrayClone[BOOL],0,SIZE(BOOL),boolClone); CE\n-    env->GetByteArrayRegion((jbyteArray) arrayClone[BYTE],0,SIZE(BYTE),byteClone); CE\n-    env->GetCharArrayRegion((jcharArray) arrayClone[CHAR],0,SIZE(CHAR),charClone); CE\n-    env->GetShortArrayRegion((jshortArray) arrayClone[SHORT],0,SIZE(SHORT),shortClone); CE\n-    env->GetIntArrayRegion((jintArray) arrayClone[INT],0,SIZE(INT),intClone); CE\n-    env->GetLongArrayRegion((jlongArray) arrayClone[LONG],0,SIZE(LONG),longClone); CE\n-    env->GetFloatArrayRegion((jfloatArray) arrayClone[FLOAT],0,SIZE(FLOAT),floatClone); CE\n-    env->GetDoubleArrayRegion((jdoubleArray) arrayClone[DOUBLE],0,SIZE(DOUBLE),doubleClone); CE\n+  env->GetBooleanArrayRegion((jbooleanArray) arrayClone[BOOL], 0, SIZE(BOOL), boolClone); CE\n+  env->GetByteArrayRegion((jbyteArray) arrayClone[BYTE], 0, SIZE(BYTE), byteClone); CE\n+  env->GetCharArrayRegion((jcharArray) arrayClone[CHAR], 0, SIZE(CHAR), charClone); CE\n+  env->GetShortArrayRegion((jshortArray) arrayClone[SHORT], 0, SIZE(SHORT), shortClone); CE\n+  env->GetIntArrayRegion((jintArray) arrayClone[INT], 0, SIZE(INT), intClone); CE\n+  env->GetLongArrayRegion((jlongArray) arrayClone[LONG], 0, SIZE(LONG), longClone); CE\n+  env->GetFloatArrayRegion((jfloatArray) arrayClone[FLOAT], 0, SIZE(FLOAT), floatClone); CE\n+  env->GetDoubleArrayRegion((jdoubleArray) arrayClone[DOUBLE], 0, SIZE(DOUBLE), doubleClone); CE\n@@ -206,11 +207,11 @@\n-\/*\n-Can't change the pointer into the Java structure.  It's illegal JNI.\n-    SWAP(boolOrig,boolClone)\n-    SWAP(byteOrig,byteClone)\n-    SWAP(charOrig,charClone)\n-    SWAP(shortOrig,shortClone)\n-    SWAP(intOrig,intClone)\n-    SWAP(longOrig,longClone)\n-    SWAP(floatOrig,floatClone)\n-    SWAP(doubleOrig,doubleClone)\n-*\/\n+  \/*\n+    Can't change the pointer into the Java structure.  It's illegal JNI.\n+    SWAP(boolOrig, boolClone)\n+    SWAP(byteOrig, byteClone)\n+    SWAP(charOrig, charClone)\n+    SWAP(shortOrig, shortClone)\n+    SWAP(intOrig, intClone)\n+    SWAP(longOrig, longClone)\n+    SWAP(floatOrig, floatClone)\n+    SWAP(doubleOrig, doubleClone)\n+  *\/\n@@ -218,21 +219,21 @@\n-    \/* Coping new values of elements back to Java and releasing native buffers *\/\n-    \/* Use Set<Type>ArrayRegion *\/\n-\/*\n-Use Orig pointers to get the original effect of the test.\n-    env->SetBooleanArrayRegion(arrayClone[BOOL],0,SIZE(BOOL),boolClone);\n-    env->SetByteArrayRegion(arrayClone[BYTE],0,SIZE(BYTE),byteClone);\n-    env->SetCharArrayRegion(arrayClone[CHAR],0,SIZE(CHAR),charClone);\n-    env->SetShortArrayRegion(arrayClone[SHORT],0,SIZE(SHORT),shortClone);\n-    env->SetIntArrayRegion(arrayClone[INT],0,SIZE(INT),intClone);\n-    env->SetLongArrayRegion(arrayClone[LONG],0,SIZE(LONG),longClone);\n-    env->SetFloatArrayRegion(arrayClone[FLOAT],0,SIZE(FLOAT),floatClone);\n-    env->SetDoubleArrayRegion(arrayClone[DOUBLE],0,SIZE(DOUBLE),doubleClone);\n-*\/\n-    env->SetBooleanArrayRegion((jbooleanArray) arrayClone[BOOL],0,SIZE(BOOL),boolOrig); CE\n-    env->SetByteArrayRegion((jbyteArray) arrayClone[BYTE],0,SIZE(BYTE),byteOrig); CE\n-    env->SetCharArrayRegion((jcharArray) arrayClone[CHAR],0,SIZE(CHAR),charOrig); CE\n-    env->SetShortArrayRegion((jshortArray) arrayClone[SHORT],0,SIZE(SHORT),shortOrig); CE\n-    env->SetIntArrayRegion((jintArray) arrayClone[INT],0,SIZE(INT),intOrig); CE\n-    env->SetLongArrayRegion((jlongArray) arrayClone[LONG],0,SIZE(LONG),longOrig); CE\n-    env->SetFloatArrayRegion((jfloatArray) arrayClone[FLOAT],0,SIZE(FLOAT),floatOrig); CE\n-    env->SetDoubleArrayRegion((jdoubleArray) arrayClone[DOUBLE],0,SIZE(DOUBLE),doubleOrig); CE\n+  \/* Coping new values of elements back to Java and releasing native buffers *\/\n+  \/* Use Set<Type>ArrayRegion *\/\n+  \/*\n+    Use Orig pointers to get the original effect of the test.\n+    env->SetBooleanArrayRegion(arrayClone[BOOL], 0,SIZE(BOOL), boolClone);\n+    env->SetByteArrayRegion(arrayClone[BYTE], 0,SIZE(BYTE), byteClone);\n+    env->SetCharArrayRegion(arrayClone[CHAR], 0,SIZE(CHAR), charClone);\n+    env->SetShortArrayRegion(arrayClone[SHORT], 0,SIZE(SHORT), shortClone);\n+    env->SetIntArrayRegion(arrayClone[INT], 0,SIZE(INT), intClone);\n+    env->SetLongArrayRegion(arrayClone[LONG], 0,SIZE(LONG), longClone);\n+    env->SetFloatArrayRegion(arrayClone[FLOAT], 0,SIZE(FLOAT), floatClone);\n+    env->SetDoubleArrayRegion(arrayClone[DOUBLE], 0,SIZE(DOUBLE), doubleClone);\n+  *\/\n+  env->SetBooleanArrayRegion((jbooleanArray) arrayClone[BOOL], 0, SIZE(BOOL), boolOrig); CE\n+  env->SetByteArrayRegion((jbyteArray) arrayClone[BYTE], 0, SIZE(BYTE), byteOrig); CE\n+  env->SetCharArrayRegion((jcharArray) arrayClone[CHAR], 0, SIZE(CHAR), charOrig); CE\n+  env->SetShortArrayRegion((jshortArray) arrayClone[SHORT], 0, SIZE(SHORT), shortOrig); CE\n+  env->SetIntArrayRegion((jintArray) arrayClone[INT], 0, SIZE(INT), intOrig); CE\n+  env->SetLongArrayRegion((jlongArray) arrayClone[LONG], 0, SIZE(LONG), longOrig); CE\n+  env->SetFloatArrayRegion((jfloatArray) arrayClone[FLOAT], 0, SIZE(FLOAT), floatOrig); CE\n+  env->SetDoubleArrayRegion((jdoubleArray) arrayClone[DOUBLE], 0, SIZE(DOUBLE), doubleOrig); CE\n@@ -240,10 +241,10 @@\n-    \/* Use Release<Type>ArrayElements *\/\n-    env->ReleaseDoubleArrayElements((jdoubleArray) arrayOrig[DOUBLE],doubleOrig,0); CE\n-    env->ReleaseFloatArrayElements((jfloatArray) arrayOrig[FLOAT],floatOrig,0); CE\n-    env->ReleaseLongArrayElements((jlongArray) arrayOrig[LONG],longOrig,0); CE\n-    env->ReleaseIntArrayElements((jintArray) arrayOrig[INT],intOrig,0); CE\n-    env->ReleaseShortArrayElements((jshortArray) arrayOrig[SHORT],shortOrig,0); CE\n-    env->ReleaseCharArrayElements((jcharArray) arrayOrig[CHAR],charOrig,0); CE\n-    env->ReleaseByteArrayElements((jbyteArray) arrayOrig[BYTE],byteOrig,0); CE\n-    env->ReleaseBooleanArrayElements((jbooleanArray) arrayOrig[BOOL],boolOrig,0); CE\n-    free(arrayOrig);\n+  \/* Use Release<Type>ArrayElements *\/\n+  env->ReleaseDoubleArrayElements((jdoubleArray) arrayOrig[DOUBLE], doubleOrig, 0); CE\n+  env->ReleaseFloatArrayElements((jfloatArray) arrayOrig[FLOAT], floatOrig, 0); CE\n+  env->ReleaseLongArrayElements((jlongArray) arrayOrig[LONG], longOrig, 0); CE\n+  env->ReleaseIntArrayElements((jintArray) arrayOrig[INT], intOrig, 0); CE\n+  env->ReleaseShortArrayElements((jshortArray) arrayOrig[SHORT], shortOrig, 0); CE\n+  env->ReleaseCharArrayElements((jcharArray) arrayOrig[CHAR], charOrig, 0); CE\n+  env->ReleaseByteArrayElements((jbyteArray) arrayOrig[BYTE], byteOrig, 0); CE\n+  env->ReleaseBooleanArrayElements((jbooleanArray) arrayOrig[BOOL], boolOrig, 0); CE\n+  free(arrayOrig);\n@@ -251,9 +252,9 @@\n-    free(doubleClone);\n-    free(floatClone);\n-    free(longClone);\n-    free(intClone);\n-    free(shortClone);\n-    free(byteClone);\n-    free(charClone);\n-    free(boolClone);\n-    free(arrayClone);\n+  free(doubleClone);\n+  free(floatClone);\n+  free(longClone);\n+  free(intClone);\n+  free(shortClone);\n+  free(byteClone);\n+  free(charClone);\n+  free(boolClone);\n+  free(arrayClone);\n@@ -261,1 +262,1 @@\n-    return JNI_TRUE;\n+  return JNI_TRUE;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress003.cpp","additions":181,"deletions":180,"binary":false,"changes":361,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,23 +37,21 @@\n-    unsigned char digest[DIGESTLENGTH];\n-    jchar *tmp;\n-    static jint upper = 0;\n-    jcharArray jArr;\n-    int i;\n-    const jchar *critstr;\n-    char *str;\n-    jint len=env->GetStringUTFLength(jstr); CE\n-\n-    for (i=0;i<DIGESTLENGTH;i++) {\n-      digest[i]=0;\n-    }\n-    str=(char *)malloc(len*sizeof(char));\n-\/*     const char *threadName=env->GetStringUTFChars(jstr, 0); *\/\n-\n-    env->MonitorEnter(jobj); CE\n-    if (upper == 0) tmp = (jchar *) malloc(DIGESTLENGTH*sizeof(char));\n-    if (env->ExceptionOccurred()) {\n-        env->ExceptionDescribe();\n-        env->ExceptionClear();\n-    }\n-    critstr=env->GetStringCritical(jstr, 0); CE\n-    for (i=0;i<len;i++)\n+  unsigned char digest[DIGESTLENGTH];\n+  jchar *tmp;\n+  static jint upper = 0;\n+  jcharArray jArr;\n+  int i;\n+  const jchar *critstr;\n+  char *str;\n+  jint len = env->GetStringUTFLength(jstr); CE\n+\n+  for (i = 0; i < DIGESTLENGTH; i++) {\n+    digest[i] = 0;\n+  }\n+  str = (char *)c_malloc(env, len * sizeof(char));\n+  \/*     const char *threadName = env->GetStringUTFChars(jstr, 0); *\/\n+\n+  CHECK(env->MonitorEnter(jobj));\n+  if (upper == 0) {\n+    tmp = (jchar *) c_malloc(env, DIGESTLENGTH * sizeof(char));\n+  }\n+  critstr = env->GetStringCritical(jstr, 0); CE\n+  for (i = 0; i < len; i++) {\n@@ -61,17 +59,13 @@\n-    env->ReleaseStringCritical(jstr,critstr); CE\n-    for (i=0;i<len;i++) {\n-        digest[i % DIGESTLENGTH]+=str[i];\n-    }\n-    free(str);\n-\n-    if (env->ExceptionOccurred()) {\n-        env->ExceptionDescribe();\n-        env->ExceptionClear();\n-    }\n-    memcpy(tmp,digest,DIGESTLENGTH);\n-    jArr=env->NewCharArray(DIGESTLENGTH\/sizeof(jchar)); CE\n-    len=env->GetArrayLength(jArr); CE\n-    env->SetCharArrayRegion(jArr,0,len,tmp); CE\n-\/*     ++upper; *\/\n-    env->MonitorExit(jobj); CE\n-    return jArr;\n+  }\n+  env->ReleaseStringCritical(jstr, critstr); CE\n+  for (i = 0; i < len; i++) {\n+    digest[i % DIGESTLENGTH] += str[i];\n+  }\n+  free(str);\n+  memcpy(tmp, digest, DIGESTLENGTH);\n+  jArr = env->NewCharArray(DIGESTLENGTH \/ sizeof(jchar)); CE\n+  len = env->GetArrayLength(jArr); CE\n+  env->SetCharArrayRegion(jArr, 0, len, tmp); CE\n+  \/*     ++upper; *\/\n+  CHECK(env->MonitorExit(jobj));\n+  return jArr;\n@@ -82,25 +76,25 @@\n-            jcharArray cArr, jint limit) {\n-\n-    unsigned char digest[DIGESTLENGTH];\n-    jchar *tmp;\n-\/*     jcharArray jArr; *\/\n-    const jchar *critstr;\n-    jint strlen;\n-    char *str;\n-    jboolean ret=JNI_TRUE;\n-    int i;\n-    static jint upper = 0;\n-    jint len;\n-    jchar *ch;\n-\n-    for (i=0;i<DIGESTLENGTH;i++) {\n-      digest[i]=0;\n-    }\n-    strlen =  env->GetStringUTFLength(jstr); CE\n-    str = (char *)malloc(strlen*sizeof(char));\n-\n-    len =env->GetArrayLength(cArr); CE\n-\n-    env->MonitorEnter(jobj); CE\n-    if (upper>limit) {\n-    env->MonitorExit(jobj); CE\n+                                            jcharArray cArr, jint limit) {\n+\n+  unsigned char digest[DIGESTLENGTH];\n+  jchar *tmp;\n+  \/*     jcharArray jArr; *\/\n+  const jchar *critstr;\n+  jint strlen;\n+  char *str;\n+  jboolean ret = JNI_TRUE;\n+  int i;\n+  static jint upper = 0;\n+  jint len;\n+  jchar *ch;\n+\n+  for (i = 0; i < DIGESTLENGTH; i++) {\n+    digest[i] = 0;\n+  }\n+  strlen =  env->GetStringUTFLength(jstr); CE\n+  str = (char *)c_malloc(env, strlen * sizeof(char));\n+\n+  len =env->GetArrayLength(cArr); CE\n+\n+  CHECK(env->MonitorEnter(jobj));\n+  if (upper > limit) {\n+    CHECK(env->MonitorExit(jobj));\n@@ -108,8 +102,4 @@\n-    }\n-    tmp=(jchar *)malloc(DIGESTLENGTH*sizeof(char));\n-    if (env->ExceptionOccurred()) {\n-        env->ExceptionDescribe();\n-        env->ExceptionClear();\n-    }\n-    critstr=env->GetStringCritical(jstr, 0); CE\n-    for (i=0;i<strlen;i++)\n+  }\n+  tmp = (jchar *)c_malloc(env, DIGESTLENGTH * sizeof(char));\n+  critstr = env->GetStringCritical(jstr, 0); CE\n+  for (i = 0; i < strlen; i++) {\n@@ -117,26 +107,21 @@\n-    env->ReleaseStringCritical(jstr,critstr); CE\n-    for (i=0;i<strlen; i++) {\n-      digest[i % DIGESTLENGTH]+=str[i % DIGESTLENGTH];\n-    }\n-\n-    free(str);\n-\n-    if (env->ExceptionOccurred()) {\n-        env->ExceptionDescribe();\n-        env->ExceptionClear();\n-    }\n-    memcpy(tmp,digest,DIGESTLENGTH);\n-\n-\/*     jArr=env->NewCharArray(DIGESTLENGTH\/sizeof(jchar)); *\/\n-\/*     len=env->GetArrayLength(jArr); *\/\n-\/*     env->SetCharArrayRegion(jArr,0,len,tmp); *\/\n-\/*     ++upper; *\/\n-\/*     env->MonitorExit(jobj); *\/\n-\n-\/* Compare  *\/\n-\/*     env->MonitorEnter(jobj); *\/\n-\n-    ch=(jchar *)env->GetPrimitiveArrayCritical(cArr,0); CE\n-\n-    printf(\"Comparing: \");\n-    for (i=0;i<len;i++)\n+  }\n+  env->ReleaseStringCritical(jstr, critstr); CE\n+  for (i = 0; i < strlen; i++) {\n+    digest[i % DIGESTLENGTH] += str[i % DIGESTLENGTH];\n+  }\n+  free(str);\n+  memcpy(tmp, digest, DIGESTLENGTH);\n+\n+  \/*     jArr = env->NewCharArray(DIGESTLENGTH\/sizeof(jchar)); *\/\n+  \/*     len = env->GetArrayLength(jArr); *\/\n+  \/*     env->SetCharArrayRegion(jArr, 0, len, tmp); *\/\n+  \/*     ++upper; *\/\n+  \/*     env->MonitorExit(jobj); *\/\n+\n+  \/* Compare  *\/\n+  \/*     env->MonitorEnter(jobj); *\/\n+\n+  ch = (jchar *)env->GetPrimitiveArrayCritical(cArr, 0); CE\n+\n+  printf(\"Comparing: \");\n+  for (i = 0; i < len; i++) {\n@@ -144,3 +129,5 @@\n-        printf(\"Error in %d\\n\",i);\n-        printf(\"ch[%d]=%02x tmp[%d]=%02x\\n\",i,ch[i],i,tmp[i]);\n-        ret=JNI_FALSE;\n+      printf(\"Error in %d\\n\", i);\n+      printf(\"ch[%d] = %02x tmp[%d] = %02x\\n\", i, ch[i], i, tmp[i]);\n+      ret = JNI_FALSE;\n+    } else {\n+      printf(\"ch[%d] = %02x tmp[%d] = %02x\\n\", i, ch[i], i, tmp[i]);\n@@ -148,9 +135,8 @@\n-    else {\n-        printf(\"ch[%d]=%02x tmp[%d]=%02x\\n\",i,ch[i],i,tmp[i]);\n-    }\n-    printf(\"\\n\");\n-    env->ReleasePrimitiveArrayCritical(cArr,ch,0); CE\n-    ++upper;\n-    if (!(upper % 500))\n-    fprintf(stderr,\"There are %d elements now.\\n\", upper);\n-    if (upper == limit) {\n+  }\n+  printf(\"\\n\");\n+  env->ReleasePrimitiveArrayCritical(cArr, ch, 0); CE\n+  ++upper;\n+  if ((upper % 500) == 0) {\n+    fprintf(stderr, \"There are %d elements now.\\n\", upper);\n+  }\n+  if (upper == limit) {\n@@ -159,2 +145,2 @@\n-    char *name = (char*) \"halt\";\n-    char *sig = (char*) \"()V\";\n+    const char* name = \"halt\";\n+    const char* sig = \"()V\";\n@@ -162,2 +148,2 @@\n-    clazz=env->GetObjectClass(jobj); CE\n-    methodID=env->GetStaticMethodID(clazz, name, sig); CE\n+    clazz = env->GetObjectClass(jobj); CE\n+    methodID = env->GetStaticMethodID(clazz, name, sig); CE\n@@ -166,4 +152,4 @@\n-    ret=JNI_TRUE;\n-    }\n-    env->MonitorExit(jobj); CE\n-    return ret;\n+    ret = JNI_TRUE;\n+  }\n+  CHECK(env->MonitorExit(jobj));\n+  return ret;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress004.cpp","additions":106,"deletions":120,"binary":false,"changes":226,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#include \"jnihelper.h\"\n@@ -30,2 +31,0 @@\n-#define CHECK_EXCEPTION     { if (env->ExceptionOccurred()) { fprintf(stderr, \"Unexpected exception:\\n\"); env->ExceptionDescribe(); env->ExceptionClear(); exit(97); } }\n-\n@@ -34,10 +33,16 @@\n-    jclass clazz;\n-    static int Exceptcalls=0;\n-    const char *name;\n-    const char *mess;\n-    jmethodID jmethod;\n-    const char *iter = \"nsk\/stress\/jni\/JNIter005\";\n-\/\/    const char *inc = \"nsk\/stress\/jni\/jnistress005\/incCount\";\n-    const char *incSig = \"()V\";\n-    const char *fldName = \"counts\";\n-    const char *fldSig = \"I\";\n+  jclass clazz;\n+  static int Exceptcalls = 0;\n+  const char *name;\n+  const char *mess;\n+  jmethodID jmethod;\n+  const char *iter = \"nsk\/stress\/jni\/JNIter005\";\n+  \/\/    const char *inc = \"nsk\/stress\/jni\/jnistress005\/incCount\";\n+  const char *incSig = \"()V\";\n+  const char *fldName = \"counts\";\n+  const char *fldSig = \"I\";\n+\n+  \/*     incClazz = env->FindClass(iter); *\/\n+  \/*     jmethod = env->GetStaticMethodID(incClazz, inc, incSig); *\/\n+  \/*     env->CallStaticVoidMethod(incClazz, jmethod); *\/\n+  \/*     jfld = env->GetFieldID(incClazz, fldName, fldSig); *\/\n+  \/*     printf(\"JNI: Count is %d\\n\", env->GetIntField(jobj, jfld)); *\/\n@@ -45,9 +50,1 @@\n-\/*     incClazz = env->FindClass(iter); *\/\n-\/*     CHECK_EXCEPTION *\/\n-\/*     jmethod=env->GetStaticMethodID(incClazz, inc, incSig); *\/\n-\/*     CHECK_EXCEPTION *\/\n-\/*     env->CallStaticVoidMethod(incClazz, jmethod); *\/\n-\/*     CHECK_EXCEPTION *\/\n-\/*     jfld = env->GetFieldID(incClazz, fldName, fldSig); *\/\n-\/*     printf(\"JNI: Count is %d\\n\", env->GetIntField(jobj, jfld)); *\/\n-\/*     CHECK_EXCEPTION *\/\n+  CHECK(env->MonitorEnter(jobj));\n@@ -55,6 +52,6 @@\n-    env->MonitorEnter(jobj);\n-    CHECK_EXCEPTION\n-    if (!env->Throw(tobj)) {\n-    if (env->ExceptionOccurred())\n-        if (Exceptcalls % 1000 == 0)\n-        fprintf(stderr, \"NATIVE: Throw has been catched in native\\n\");\n+  if (env->Throw(tobj) == 0) {\n+    if (env->ExceptionOccurred()) {\n+      if (Exceptcalls % 1000 == 0) {\n+        fprintf(stderr, \"NATIVE: Throw has been caught in native\\n\");\n+      }\n+    }\n@@ -63,1 +60,3 @@\n-    } else fprintf(stderr, \"Throw failed\\n\");\n+  } else {\n+    fprintf(stderr, \"Throw failed\\n\");\n+  }\n@@ -65,2 +64,1 @@\n-    env->MonitorExit(jobj);\n-    CHECK_EXCEPTION\n+  CHECK(env->MonitorExit(jobj));\n@@ -68,27 +66,27 @@\n-    switch (Exceptcalls % 23) {\n-      case 0: name=\"java\/lang\/ArithmeticException\"; break;\n-      case 1: name=\"java\/lang\/ArrayIndexOutOfBoundsException\"; break;\n-      case 2: name=\"java\/lang\/ArrayStoreException\"; break;\n-      case 3: name=\"java\/lang\/ClassCastException\"; break;\n-      case 4: name=\"java\/lang\/ClassNotFoundException\"; break;\n-      case 5: name=\"java\/lang\/CloneNotSupportedException\"; break;\n-      case 6: name=\"java\/lang\/IllegalAccessException\"; break;\n-      case 7: name=\"java\/lang\/IllegalArgumentException\"; break;\n-      case 8: name=\"java\/lang\/IllegalMonitorStateException\"; break;\n-      case 9: name=\"java\/lang\/IllegalStateException\"; break;\n-      case 10: name=\"java\/lang\/IllegalThreadStateException\"; break;\n-      case 11: name=\"java\/lang\/IndexOutOfBoundsException\"; break;\n-      case 12: name=\"java\/lang\/InstantiationException\"; break;\n-      case 13: name=\"java\/lang\/InterruptedException\"; break;\n-      case 14: name=\"java\/lang\/NegativeArraySizeException\"; break;\n-      case 15: name=\"java\/lang\/NoSuchFieldException\"; break;\n-      case 16: name=\"java\/lang\/NoSuchMethodException\"; break;\n-      case 17: name=\"java\/lang\/NullPointerException\"; break;\n-      case 18: name=\"java\/lang\/NumberFormatException\"; break;\n-      case 19: name=\"java\/lang\/RuntimeException\"; break;\n-      case 20: name=\"java\/lang\/SecurityException\"; break;\n-      case 21: name=\"java\/lang\/StringIndexOutOfBoundsException\"; break;\n-      case 22: name=\"java\/lang\/UnsupportedOperationException\"; break;\n-      default: name=\"java\/lang\/Exception\";\n-    }\n-    mess=name;\n+  switch (Exceptcalls % 23) {\n+  case 0: name = \"java\/lang\/ArithmeticException\"; break;\n+  case 1: name = \"java\/lang\/ArrayIndexOutOfBoundsException\"; break;\n+  case 2: name = \"java\/lang\/ArrayStoreException\"; break;\n+  case 3: name = \"java\/lang\/ClassCastException\"; break;\n+  case 4: name = \"java\/lang\/ClassNotFoundException\"; break;\n+  case 5: name = \"java\/lang\/CloneNotSupportedException\"; break;\n+  case 6: name = \"java\/lang\/IllegalAccessException\"; break;\n+  case 7: name = \"java\/lang\/IllegalArgumentException\"; break;\n+  case 8: name = \"java\/lang\/IllegalMonitorStateException\"; break;\n+  case 9: name = \"java\/lang\/IllegalStateException\"; break;\n+  case 10: name = \"java\/lang\/IllegalThreadStateException\"; break;\n+  case 11: name = \"java\/lang\/IndexOutOfBoundsException\"; break;\n+  case 12: name = \"java\/lang\/InstantiationException\"; break;\n+  case 13: name = \"java\/lang\/InterruptedException\"; break;\n+  case 14: name = \"java\/lang\/NegativeArraySizeException\"; break;\n+  case 15: name = \"java\/lang\/NoSuchFieldException\"; break;\n+  case 16: name = \"java\/lang\/NoSuchMethodException\"; break;\n+  case 17: name = \"java\/lang\/NullPointerException\"; break;\n+  case 18: name = \"java\/lang\/NumberFormatException\"; break;\n+  case 19: name = \"java\/lang\/RuntimeException\"; break;\n+  case 20: name = \"java\/lang\/SecurityException\"; break;\n+  case 21: name = \"java\/lang\/StringIndexOutOfBoundsException\"; break;\n+  case 22: name = \"java\/lang\/UnsupportedOperationException\"; break;\n+  default: name = \"java\/lang\/Exception\";\n+  }\n+  mess = name;\n@@ -96,17 +94,13 @@\n-    CHECK_EXCEPTION\n-    clazz = env->FindClass(name);\n-    CHECK_EXCEPTION\n-    if (env->ThrowNew(clazz, mess)) {\n-      const char *pass = \"setpass\";\n-      const char *passSig = \"(Z)V\";\n-      jclass incClazz;\n-      fprintf(stderr, \"ThrowNew failed\\n\");\n-      CHECK_EXCEPTION;\n-      incClazz = env->FindClass(iter);\n-      CHECK_EXCEPTION;\n-      jmethod=env->GetStaticMethodID(incClazz, pass, passSig);\n-      CHECK_EXCEPTION\n-      env->CallStaticVoidMethod(incClazz, jmethod, JNI_FALSE);\n-      CHECK_EXCEPTION\n-    }\n-\/*     printf(\"JNI: count %d\\n\", Exceptcalls); *\/\n+  clazz = env->FindClass(name); CE\n+  if (env->ThrowNew(clazz, mess) != 0) {\n+    const char *pass = \"setpass\";\n+    const char *passSig = \"(Z)V\";\n+    jclass incClazz;\n+    fprintf(stderr, \"ThrowNew failed\\n\");\n+    CE;\n+    \/\/ ThrowNew failed but didn't itself raise an exception\n+    incClazz = env->FindClass(iter); CE\n+    jmethod=env->GetStaticMethodID(incClazz, pass, passSig); CE\n+    env->CallStaticVoidMethod(incClazz, jmethod, JNI_FALSE); CE\n+  }\n+  \/*     printf(\"JNI: count %d\\n\", Exceptcalls); *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress005.cpp","additions":69,"deletions":75,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-    static jobject *globRefsArray = 0;\n-    static int upper = 0;\n+  static jobject *globRefsArray = 0;\n+  static int upper = 0;\n@@ -37,11 +37,11 @@\n-    jclass clazz;\n-    jmethodID jmethod;\n-    jboolean res=JNI_FALSE;\n-    const char *classname = \"nsk\/stress\/jni\/JNIter006\";\n-    const char *getmethodname=\"get_i\";\n-    const char *setmethodname=\"set_i\";\n-    const char *getsig=\"()I\";\n-    const char *setsig=\"(I)V\";\n-    const char *setdone = \"halt\";\n-    const char *setdonesig = \"()V\";\n-    int i = 0;\n+  jclass clazz;\n+  jmethodID jmethod;\n+  jboolean res = JNI_FALSE;\n+  const char *classname = \"nsk\/stress\/jni\/JNIter006\";\n+  const char *getmethodname = \"get_i\";\n+  const char *setmethodname = \"set_i\";\n+  const char *getsig = \"()I\";\n+  const char *setsig = \"(I)V\";\n+  const char *setdone = \"halt\";\n+  const char *setdonesig = \"()V\";\n+  int i = 0;\n@@ -49,1 +49,3 @@\n-    if (upper >= LIMIT) return JNI_TRUE;\n+  if (upper >= LIMIT) {\n+    return JNI_TRUE;\n+  }\n@@ -51,3 +53,3 @@\n-    if (upper == 0) {\n-        globRefsArray=(jobject*)(malloc(LIMIT*sizeof(jobject)));\n-    }\n+  if (upper == 0) {\n+    globRefsArray = (jobject*)c_malloc(env, LIMIT * sizeof(jobject));\n+  }\n@@ -55,2 +57,2 @@\n-    globRefsArray[upper]=env->NewGlobalRef(tobj); CE\n-    if (env->IsSameObject(tobj, globRefsArray[upper])) {\n+  globRefsArray[upper] = env->NewGlobalRef(tobj); CE\n+  if (env->IsSameObject(tobj, globRefsArray[upper])) {\n@@ -58,5 +60,4 @@\n-    clazz=env->GetObjectClass(globRefsArray[upper]); CE\n-    }\n-    else {\n-    fprintf(stderr,\"Objects are different\\n\");\n-    env->MonitorExit(jobj); CE\n+    clazz = env->GetObjectClass(globRefsArray[upper]); CE\n+  } else {\n+    fprintf(stderr, \"Objects are different\\n\");\n+    CHECK(env->MonitorExit(jobj));\n@@ -64,14 +65,14 @@\n-    }\n-    jmethod=env->GetStaticMethodID(clazz, setmethodname, setsig); CE\n-    env->CallStaticVoidMethod(clazz, jmethod, (jint)upper); CE\n-    env->MonitorEnter(jobj); CE\n-    ++upper;\n-    res=JNI_TRUE;\n-    env->MonitorExit(jobj); CE\n-\/* If upper == LIMIT than flush ref's array and set *\/\n-\/* 'done' flag in JNIter006 class to JNI_TRUE *\/\n-    if (upper == LIMIT) {\n-    fprintf(stderr,\"\\n\\tTotal memory allocated: %zd bytes\\n\",\n-        LIMIT*sizeof(jobject));\n-    clazz=env->FindClass(classname); CE\n-    jmethod=env->GetMethodID(clazz, setdone, setdonesig); CE\n+  }\n+  jmethod = env->GetStaticMethodID(clazz, setmethodname, setsig); CE\n+  env->CallStaticVoidMethod(clazz, jmethod, (jint)upper); CE\n+  CHECK(env->MonitorEnter(jobj));\n+  ++upper;\n+  res = JNI_TRUE;\n+  CHECK(env->MonitorExit(jobj));\n+  \/* If upper == LIMIT than flush ref's array and set *\/\n+  \/* 'done' flag in JNIter006 class to JNI_TRUE *\/\n+  if (upper == LIMIT) {\n+    fprintf(stderr, \"\\n\\tTotal memory allocated: %zd bytes\\n\",\n+            LIMIT * sizeof(jobject));\n+    clazz = env->FindClass(classname); CE\n+    jmethod = env->GetMethodID(clazz, setdone, setdonesig); CE\n@@ -80,2 +81,2 @@\n-    for (i=0;i<LIMIT;i++) {\n-        env->DeleteGlobalRef(globRefsArray[i]); CE\n+    for (i = 0; i < LIMIT; i++) {\n+      env->DeleteGlobalRef(globRefsArray[i]); CE\n@@ -83,3 +84,3 @@\n-        free(globRefsArray);\n-    }\n-    return res;\n+    free(globRefsArray);\n+  }\n+  return res;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress006.cpp","additions":45,"deletions":44,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,4 +32,4 @@\n-    jclass clazz;\n-    jfieldID fld;\n-    jint value;\n-    const char *str = env->GetStringUTFChars(name, 0); CE\n+  jclass clazz;\n+  jfieldID fld;\n+  jint value;\n+  const char *str = env->GetStringUTFChars(name, 0); CE\n@@ -37,9 +37,9 @@\n-    if (env->MonitorEnter(jobj))\n-        printf(\"Error in monitor lock\\n\");\n-    clazz = env->GetObjectClass(jobj); CE\n-    fld = env->GetStaticFieldID(clazz, \"nativeCount\", \"I\"); CE\n-    value = env->GetStaticIntField(clazz, fld); CE\n-    env->SetStaticIntField(clazz, fld, (jint)(++value)); CE\n-    env->MonitorExit(jobj); CE\n-    if (value % 1000 == 0)\n-        printf(\"in %s Count after %u\\n\", str, value);\n+  CHECK(env->MonitorEnter(jobj));\n+  clazz = env->GetObjectClass(jobj); CE\n+  fld = env->GetStaticFieldID(clazz, \"nativeCount\", \"I\"); CE\n+  value = env->GetStaticIntField(clazz, fld); CE\n+  env->SetStaticIntField(clazz, fld, (jint)(++value)); CE\n+  CHECK(env->MonitorExit(jobj));\n+  if (value % 1000 == 0) {\n+    printf(\"in %s Count after %u\\n\", str, value);\n+  }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress007.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package vm.share.gc;\n+\n+\/**\n+ * This class is used to distinguish between OOME in metaspace and OOME in heap when triggering class unloading.\n+ *\/\n+public class HeapOOMEException extends RuntimeException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public HeapOOMEException(String string) {\n+        super(string);\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/share\/gc\/HeapOOMEException.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import metaspace.stressHierarchy.common.exceptions.GotWrongOOMEException;\n@@ -53,1 +52,1 @@\n-                    throw new GotWrongOOMEException(\"Got OOME in heap while triggering OOME in metaspace. Test result can't be valid.\");\n+                    throw new HeapOOMEException(\"Got OOME in heap while triggering OOME in metaspace. Test result can't be valid.\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/share\/gc\/TriggerUnloadingByFillingMetaspace.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java 7019055 windows-all,linux-all\n+java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java 7019055,8266245 windows-all,linux-all,macosx-aarch64\n@@ -229,1 +229,0 @@\n-java\/awt\/Window\/MultiWindowApp\/MultiWindowAppTest.java 8159904 linux-all\n@@ -246,1 +245,1 @@\n-java\/awt\/image\/multiresolution\/MultiresolutionIconTest.java 8169187 macosx-all,windows-all\n+java\/awt\/image\/multiresolution\/MultiresolutionIconTest.java 8169187,8252812 macosx-all,windows-all,linux-x64\n@@ -268,1 +267,1 @@\n-java\/awt\/Frame\/MiscUndecorated\/RepaintTest.java 8079267 windows-all,linux-all\n+java\/awt\/Frame\/MiscUndecorated\/RepaintTest.java 8079267,8266244 windows-all,linux-all,macosx-aarch64\n@@ -532,0 +531,3 @@\n+java\/awt\/Window\/GetScreenLocation\/GetScreenLocationTest.java 8225787 linux-x64\n+java\/awt\/Dialog\/MakeWindowAlwaysOnTop\/MakeWindowAlwaysOnTop.java 8266243 macosx-aarch64\n+\n@@ -556,0 +558,1 @@\n+java\/lang\/invoke\/RicochetTest.java                              8251969 generic-all\n@@ -665,4 +668,0 @@\n-security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/BuypassCA.java  8243543 generic-all\n-security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/ComodoCA.java   8263059 generic-all\n-security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/QuoVadisCA.java 8248899 generic-all\n-security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/LetsEncryptCA.java 8270280 generic-all\n@@ -705,0 +704,1 @@\n+javax\/sound\/midi\/Sequencer\/Looping.java 8136897 generic-all\n@@ -729,0 +729,1 @@\n+javax\/swing\/JFrame\/NSTexturedJFrame\/NSTexturedJFrame.java 8272481 macosx-all\n@@ -747,0 +748,1 @@\n+javax\/swing\/JButton\/8151303\/PressedIconTest.java 8266246 macosx-aarch64\n@@ -789,0 +791,3 @@\n+java\/util\/Locale\/LocaleProvidersRun.java                        8268379 macosx-x64\n+sun\/util\/locale\/provider\/CalendarDataRegression.java            8268379 macosx-x64\n+\n","filename":"test\/jdk\/ProblemList.txt","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-requires.extraPropDefns.bootlibs = ..\/lib\/sun\n+requires.extraPropDefns.bootlibs = ..\/lib\/jdk\/test\/whitebox\n","filename":"test\/jdk\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8270286\n+ * @summary Test for HttpServerProvider::loadProviderFromProperty\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderP\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderPNPC\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderNP\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderT\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=DoesNotExist\n+ *      HttpServerProviderTest\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.net.InetSocketAddress;\n+import java.util.ServiceConfigurationError;\n+import com.sun.net.httpserver.HttpServer;\n+import com.sun.net.httpserver.HttpsServer;\n+import com.sun.net.httpserver.spi.HttpServerProvider;\n+import org.testng.annotations.Test;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertNull;\n+import static org.testng.Assert.expectThrows;\n+\n+public class HttpServerProviderTest {\n+    public final static String PROPERTY_KEY = \"com.sun.net.httpserver.HttpServerProvider\";\n+\n+    @Test\n+    public void test() throws Exception {\n+        var provider = System.getProperty(PROPERTY_KEY);\n+        switch (provider) {\n+            case \"HttpServerProviderTest$ProviderP\" -> testPublic();\n+            case \"HttpServerProviderTest$ProviderPNPC\" -> testPublicNonPublicConstructor();\n+            case \"HttpServerProviderTest$ProviderNP\" -> testNonPublic();\n+            case \"HttpServerProviderTest$ProviderT\" -> testThrowingConstructor();\n+            default -> testBadData();\n+        }\n+    }\n+\n+    private void testPublic() throws Exception {\n+        var n = ProviderP.class.getName();\n+        assertEquals(System.getProperty(PROPERTY_KEY), n);\n+\n+        var p = HttpServerProvider.provider();\n+        assertNull(p.createHttpServer(null, 0));\n+        assertNull(p.createHttpsServer(null, 0));\n+    }\n+\n+    private void testPublicNonPublicConstructor() {\n+        var n = ProviderPNPC.class.getName();\n+        assertEquals(System.getProperty(PROPERTY_KEY), n);\n+\n+        var e = expectThrows(ServiceConfigurationError.class, HttpServerProvider::provider);\n+        assertEquals(e.getClass(), ServiceConfigurationError.class);\n+        assertEquals(e.getCause().getClass(), IllegalAccessException.class);\n+    }\n+\n+    private void testNonPublic() {\n+        var n = ProviderNP.class.getName();\n+        assertEquals(System.getProperty(PROPERTY_KEY), n);\n+\n+        var e = expectThrows(ServiceConfigurationError.class, HttpServerProvider::provider);\n+        assertEquals(e.getClass(), ServiceConfigurationError.class);\n+        assertEquals(e.getCause().getClass(), IllegalAccessException.class);\n+    }\n+\n+    private void testThrowingConstructor() {\n+        var cn = ProviderT.class.getName();\n+        assertEquals(System.getProperty(PROPERTY_KEY), cn);\n+\n+        var e = expectThrows(ServiceConfigurationError.class, HttpServerProvider::provider);\n+        assertEquals(e.getClass(), ServiceConfigurationError.class);\n+        assertEquals(e.getCause().getClass(), InvocationTargetException.class);\n+        assertEquals(e.getCause().getCause().getMessage(), \"throwing constructor\");\n+    }\n+\n+    private void testBadData() {\n+        var cn = \"DoesNotExist\";\n+        assertEquals(System.getProperty(PROPERTY_KEY), cn);\n+\n+        var e = expectThrows(ServiceConfigurationError.class, HttpServerProvider::provider);\n+        assertEquals(e.getClass(), ServiceConfigurationError.class);\n+        assertEquals(e.getCause().getClass(), ClassNotFoundException.class);\n+    }\n+\n+    \/**\n+     * Test provider that is public (P)\n+     *\/\n+    public static class ProviderP extends HttpServerProvider {\n+        public ProviderP() { super(); }\n+        @Override\n+        public HttpServer createHttpServer(InetSocketAddress addr, int backlog) { return null; }\n+        @Override\n+        public HttpsServer createHttpsServer(InetSocketAddress addr, int backlog) { return null; }\n+    }\n+\n+    \/**\n+     * Test provider that is public with a non-public constructor (PNPC)\n+     *\/\n+    public static class ProviderPNPC extends HttpServerProvider {\n+        \/*package-private*\/ ProviderPNPC() { super(); }\n+        @Override\n+        public HttpServer createHttpServer(InetSocketAddress addr, int backlog) { return null; }\n+        @Override\n+        public HttpsServer createHttpsServer(InetSocketAddress addr, int backlog) { return null; }\n+    }\n+\n+    \/**\n+     * Test provider that is not public (NP)\n+     *\/\n+    \/*package-private*\/ static class ProviderNP extends HttpServerProvider {\n+        \/*package-private*\/ ProviderNP() { super(); }\n+        @Override\n+        public HttpServer createHttpServer(InetSocketAddress addr, int backlog) { return null; }\n+        @Override\n+        public HttpsServer createHttpsServer(InetSocketAddress addr, int backlog) { return null; }\n+    }\n+\n+    \/**\n+     * Test provider with a constructor that throws\n+     *\/\n+    public static class ProviderT extends HttpServerProvider {\n+        public ProviderT() { throw new AssertionError(\"throwing constructor\"); }\n+        @Override\n+        public HttpServer createHttpServer(InetSocketAddress addr, int backlog) { return null; }\n+        @Override\n+        public HttpsServer createHttpsServer(InetSocketAddress addr, int backlog) { return null; }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpServerProviderTest.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -28,1 +28,2 @@\n- * @modules java.xml.crypto\n+ * @modules java.xml.crypto\/com.sun.org.apache.xml.internal.security\n+ *          java.xml.crypto\/com.sun.org.apache.xml.internal.security.signature\n@@ -31,0 +32,2 @@\n+import com.sun.org.apache.xml.internal.security.Init;\n+import com.sun.org.apache.xml.internal.security.signature.XMLSignature;\n@@ -94,0 +97,12 @@\n+\n+        \/\/ Internal way\n+        Init.init();\n+        XMLSignature signature = new XMLSignature(document, null,\n+                SignatureMethod.ECDSA_SHA256, CanonicalizationMethod.INCLUSIVE);\n+        signature.sign(privateKey);\n+        sig = signature.getSignatureValue();\n+        if (sig.length != 64) {\n+            System.out.println(\"Length: \" + sig.length);\n+            System.out.println(HexFormat.ofDelimiter(\":\").formatHex(sig));\n+            throw new RuntimeException(\"Failed\");\n+        }\n","filename":"test\/jdk\/com\/sun\/org\/apache\/xml\/internal\/security\/ShortECDSA.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,238 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 8266079\n+ * @summary [macosx] window rendering alpha composite test\n+ * @author Alexey Ushakov\n+ * @run main WindowAlphaCompositeTest\n+ * @requires (os.family == \"mac\")\n+ *\/\n+\n+import java.awt.*;\n+import java.awt.image.BufferedImage;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.*;\n+\n+public class WindowAlphaCompositeTest\n+{\n+    interface Validate {\n+        boolean validate(int x, int y, Color c);\n+    }\n+    static Color RED128 = new Color(128, 0, 0);\n+    static Color BLUE128 = new Color(0, 0, 128);\n+    static Color PURPLE128 = new Color(128, 0, 128);\n+    static Color RED_BLUE24 = new Color(230, 0, 24);\n+    static Validate redBlackCheck = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        if (x > 24 && x < 75) {\n+            expColor = Color.BLACK;\n+        }\n+        return validateColor(c, expColor);\n+    };\n+\n+    static Validate redBlueCheck = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        if (x > 24 && x < 75) {\n+            expColor = Color.BLUE;\n+        }\n+        return validateColor(c, expColor);\n+    };\n+\n+    static Validate redCheck = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        return validateColor(c, expColor);\n+    };\n+\n+    static Validate redRed128Check = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        if (x > 24 && x < 75) {\n+            expColor = RED128;\n+        }\n+        return validateColor(c, expColor);\n+    };\n+\n+    static Validate redBlue128Check = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        if (x > 24 && x < 75) {\n+            expColor = BLUE128;\n+        }\n+        return validateColor(c, expColor);\n+    };\n+\n+    static Validate purple128Check = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        if (x > 24 && x < 75) {\n+            expColor = PURPLE128;\n+        }\n+        return validateColor(c, expColor);\n+    };\n+    static Validate redBlue24Check = (int x, int y, Color c) -> {\n+        Color expColor = Color.RED;\n+        if (x > 24 && x < 75) {\n+            expColor = RED_BLUE24;\n+        }\n+        return validateColor(c, expColor);\n+    };\n+    static Object[][] alphaComposites = {\n+            {AlphaComposite.Clear, redBlackCheck},\n+            {AlphaComposite.Dst, redCheck},\n+            {AlphaComposite.DstAtop, redCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.DST_IN, 1.0f), redCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.DST_IN, 0.5f), redRed128Check},\n+            {AlphaComposite.getInstance(AlphaComposite.DST_OUT, 1.0f), redBlackCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.DST_OUT, 0.5f), redRed128Check},\n+            {AlphaComposite.DstOver, redCheck},\n+            {AlphaComposite.Src, redBlueCheck},\n+            {AlphaComposite.SrcAtop, redBlueCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_IN, 1.0f), redBlueCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_IN, 0.5f), redBlue128Check},\n+            {AlphaComposite.SrcOut, redBlackCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1.0f), redBlueCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f), purple128Check},\n+            \/\/Uncomment after resolving issues with Xor mode on Metal\n+            \/\/{AlphaComposite.Xor, redBlackCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.DST_OUT, 0.0f), redCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_IN, 0.0f), redBlackCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.01f), redCheck},\n+            {AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.099f), redBlue24Check}\n+    };\n+\n+    private static final int TD = 10;\n+    static WindowAlphaCompositeTest theTest;\n+    private final Robot robot;\n+    private JFrame frame;\n+\n+    private final static int DELAY = 1000;\n+\n+    public WindowAlphaCompositeTest() {\n+        try {\n+            robot = new Robot();\n+        } catch (AWTException ex) {\n+            throw new RuntimeException(ex);\n+        }\n+    }\n+\n+    public void performTest(final AlphaComposite ac, Validate validate) {\n+\n+        runSwing(() -> {\n+            frame = new JFrame();\n+            frame.setBounds(100, 100, 100, 150);\n+            JComponent contentPane = (JComponent) frame.getContentPane();\n+            JPanel comp = new JPanel() {\n+                @Override\n+                protected void paintComponent(Graphics g) {\n+                    super.paintComponent(g);\n+                    renderComposite((Graphics2D) g, ac, 100, 100);\n+                }\n+            };\n+            contentPane.add(comp);\n+            comp.setBackground(Color.BLACK);\n+            frame.setVisible(true);\n+        });\n+\n+        robot.delay(DELAY);\n+\n+        for (int px = 10; px <= 90; px += 20) {\n+            Color c = getTestPixel(px, 90);\n+\n+            if (!validate.validate(px, 90, c)) {\n+                throw new RuntimeException(\"Test failed. Incorrect color \" + c +\n+                        \" at (\" + px + \",\" + 90 + \") with composite rule=\" + ac.getRule() +\n+                        \" alpha=\" + ac.getAlpha());\n+            }\n+        }\n+\n+        runSwing(() -> frame.dispose());\n+\n+        frame = null;\n+    }\n+\n+    public void renderComposite(Graphics2D g, AlphaComposite ac,\n+                                int w, int h)\n+    {\n+        \/\/ draw stage\n+        \/\/ outer rect\n+        g.setComposite(AlphaComposite.SrcOver); \/\/ as default\n+        g.setPaint(Color.red);\n+        g.fillRect(0, 0, w, h);\n+\n+        \/\/ inner rect\n+        g.setComposite(ac);\n+        g.setPaint(Color.blue);\n+        g.fillRect(w\/4, h\/4, w\/2, h\/2);\n+    }\n+\n+    private Color getTestPixel(int x, int y) {\n+        Rectangle bounds = frame.getBounds();\n+        BufferedImage screenImage = robot.createScreenCapture(bounds);\n+        int rgb = screenImage.getRGB(x, y);\n+        int red = (rgb >> 16) & 0xFF;\n+        int green = (rgb >> 8) & 0xFF;\n+        int blue = rgb & 0xFF;\n+        return new Color(red, green, blue);\n+    }\n+\n+    private static boolean validateColor(Color c, Color expected) {\n+        return Math.abs(c.getRed() - expected.getRed()) <= TD &&\n+            Math.abs(c.getGreen() - expected.getGreen()) <= TD &&\n+            Math.abs(c.getBlue() - expected.getBlue()) <= TD;\n+    }\n+\n+    public void dispose() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+    private static void runSwing(Runnable r) {\n+        try {\n+            SwingUtilities.invokeAndWait(r);\n+        } catch (InterruptedException | InvocationTargetException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        if (!System.getProperty(\"os.name\").contains(\"OS X\")) {\n+            System.out.println(\"This test is for MacOS only. Automatically passed on other platforms.\");\n+            return;\n+        }\n+\n+        try {\n+            for (Object[] alphaComposite : alphaComposites) {\n+                if (alphaComposite[1] == null) continue;\n+                runSwing(() -> theTest = new WindowAlphaCompositeTest());\n+                theTest.performTest((AlphaComposite) alphaComposite[0], (Validate) alphaComposite[1]);\n+            }\n+        } finally {\n+            if (theTest != null) {\n+                runSwing(() -> theTest.dispose());\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/AlphaComposite\/WindowAlphaCompositeTest.java","additions":238,"deletions":0,"binary":false,"changes":238,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,3 @@\n-import java.awt.*;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n@@ -44,1 +46,5 @@\n-        app.start();\n+        try {\n+            app.start();\n+        } finally {\n+            frame.dispose();\n+        }\n@@ -64,0 +70,1 @@\n+        robot.delay(1000);\n@@ -82,0 +89,1 @@\n+        robot.delay(500);\n@@ -86,0 +94,1 @@\n+        robot.delay(500);\n","filename":"test\/jdk\/java\/awt\/Focus\/DeiconifiedFrameLoosesFocus\/DeiconifiedFrameLoosesFocus.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.Arrays;\n@@ -53,2 +54,4 @@\n-    static int nx = 3;\n-    static int ny = 3;\n+    private static final int NX = 3;\n+    private static final int NY = 3;\n+\n+    private static final int[] focusCnt = new int[NX * NY];\n@@ -56,1 +59,0 @@\n-    static int focusCnt[] = new int[nx * ny];\n@@ -58,0 +60,1 @@\n+    private static Robot robot;\n@@ -60,0 +63,2 @@\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n@@ -61,12 +66,15 @@\n-        try {\n-            SwingUtilities.invokeAndWait(() -> changeLAF());\n-            SwingUtilities.invokeAndWait(() -> initLayout(nx, ny));\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(100);\n-            robot.waitForIdle();\n-            robot.delay(1000);\n-\n-            for (int i = 0; i < nx * ny - nx * ny \/ 2 - 1; i++) {\n-                robot.keyPress(KeyEvent.VK_RIGHT);\n-                robot.keyRelease(KeyEvent.VK_RIGHT);\n-                robot.waitForIdle();\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            try {\n+                SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+                SwingUtilities.invokeAndWait(() -> initLayout(NX, NY));\n+                test();\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (window != null) {\n+                        window.dispose();\n+                    }\n+                    window = null;\n+                    synchronized (focusCnt) {\n+                        Arrays.fill(focusCnt, 0);\n+                    }\n+                });\n@@ -74,0 +82,2 @@\n+        }\n+    }\n@@ -75,5 +85,0 @@\n-            for (int i = 0; i < nx * ny \/ 2; i++) {\n-                robot.keyPress(KeyEvent.VK_TAB);\n-                robot.keyRelease(KeyEvent.VK_TAB);\n-                robot.waitForIdle();\n-            }\n@@ -81,1 +86,15 @@\n-            robot.delay(200);\n+    private static void test() {\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+\n+        for (int i = 0; i < NX * NY - NX * NY \/ 2 - 1; i++) {\n+            robot.keyPress(KeyEvent.VK_RIGHT);\n+            robot.keyRelease(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+        }\n+\n+        for (int i = 0; i < NX * NY \/ 2; i++) {\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            robot.waitForIdle();\n+        }\n@@ -83,1 +102,4 @@\n-            for (int i = 0; i < nx * ny; i++) {\n+        robot.delay(200);\n+\n+        synchronized (focusCnt) {\n+            for (int i = 0; i < NX * NY; i++) {\n@@ -86,1 +108,1 @@\n-                        + \" is not reachable in the forward focus cycle\");\n+                            + \" is not reachable in the forward focus cycle\");\n@@ -89,1 +111,1 @@\n-                        + \" got focus more than once in the forward focus cycle\");\n+                            + \" got focus more than once in the forward focus cycle\");\n@@ -92,0 +114,1 @@\n+        }\n@@ -93,14 +116,1 @@\n-            for (int i = 0; i < nx * ny \/ 2; i++) {\n-                robot.keyPress(KeyEvent.VK_SHIFT);\n-                robot.keyPress(KeyEvent.VK_TAB);\n-                robot.keyRelease(KeyEvent.VK_TAB);\n-                robot.keyRelease(KeyEvent.VK_SHIFT);\n-                robot.waitForIdle();\n-            }\n-\n-            for (int i = 0; i < nx * ny - nx * ny \/ 2 - 1; i++) {\n-                robot.keyPress(KeyEvent.VK_LEFT);\n-                robot.keyRelease(KeyEvent.VK_LEFT);\n-                robot.waitForIdle();\n-            }\n-\n+        for (int i = 0; i < NX * NY \/ 2; i++) {\n@@ -112,0 +122,1 @@\n+        }\n@@ -113,1 +124,5 @@\n-            robot.delay(200);\n+        for (int i = 0; i < NX * NY - NX * NY \/ 2 - 1; i++) {\n+            robot.keyPress(KeyEvent.VK_LEFT);\n+            robot.keyRelease(KeyEvent.VK_LEFT);\n+            robot.waitForIdle();\n+        }\n@@ -115,1 +130,10 @@\n-            for (int i = 0; i < nx * ny; i++) {\n+        robot.keyPress(KeyEvent.VK_SHIFT);\n+        robot.keyPress(KeyEvent.VK_TAB);\n+        robot.keyRelease(KeyEvent.VK_TAB);\n+        robot.keyRelease(KeyEvent.VK_SHIFT);\n+        robot.waitForIdle();\n+\n+        robot.delay(200);\n+\n+        synchronized (focusCnt) {\n+            for (int i = 0; i < NX * NY; i++) {\n@@ -118,1 +142,1 @@\n-                        + \" is not reachable in the backward focus cycle\");\n+                            + \" is not reachable in the backward focus cycle\");\n@@ -121,1 +145,1 @@\n-                        + \" got focus more than once in the backward focus cycle\");\n+                            + \" got focus more than once in the backward focus cycle\");\n@@ -124,6 +148,0 @@\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (window != null) {\n-                    window.dispose();\n-                }\n-            });\n@@ -131,0 +149,1 @@\n+\n@@ -133,12 +152,9 @@\n-    private static void changeLAF() {\n-        String currentLAF = UIManager.getLookAndFeel().toString();\n-        currentLAF = currentLAF.toLowerCase();\n-        if (currentLAF.contains(\"aqua\") || currentLAF.contains(\"nimbus\")) {\n-            try {\n-                UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n-            } catch (ClassNotFoundException\n-                    | IllegalAccessException\n-                    | InstantiationException\n-                    | UnsupportedLookAndFeelException ex) {\n-                ex.printStackTrace();\n-            }\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+            System.out.println(laf.getName());\n+        } catch (UnsupportedLookAndFeelException ignored){\n+            System.out.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException |\n+                         IllegalAccessException e) {\n+            throw new RuntimeException(e);\n@@ -171,10 +187,10 @@\n-                    focusCnt[fi]++;\n-                    if (focusCnt[fi] == 1) {\n-                        ((JComponent) e.getSource())\n-                                .setBackground(Color.yellow);\n-                    } else if (focusCnt[fi] == 2) {\n-                        ((JComponent) e.getSource())\n-                                .setBackground(Color.green);\n-                    } else {\n-                        ((JComponent) e.getSource())\n-                                .setBackground(Color.red);\n+                    synchronized (focusCnt) {\n+                        focusCnt[fi]++;\n+                        JComponent btn = (JComponent) e.getSource();\n+                        if (focusCnt[fi] == 1) {\n+                            btn.setBackground(Color.yellow);\n+                        } else if (focusCnt[fi] == 2) {\n+                            btn.setBackground(Color.green);\n+                        } else {\n+                            btn.setBackground(Color.red);\n+                        }\n","filename":"test\/jdk\/java\/awt\/Focus\/FocusTraversalPolicy\/ButtonGroupLayoutTraversal\/ButtonGroupLayoutTraversalTest.java","additions":86,"deletions":70,"binary":false,"changes":156,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -41,0 +41,2 @@\n+        int delay = 300;\n+\n@@ -46,1 +48,1 @@\n-        robot.delay(200);\n+        robot.delay(delay);\n@@ -52,1 +54,1 @@\n-        robot.delay(200);\n+        robot.delay(delay);\n@@ -56,1 +58,1 @@\n-        robot.delay(200);\n+        robot.delay(delay);\n@@ -69,1 +71,1 @@\n-        robot.delay(200);\n+        robot.delay(delay);\n","filename":"test\/jdk\/java\/awt\/Window\/MultiWindowApp\/MultiWindowAppTest.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.*;\n+import java.security.PublicKey;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.CountDownLatch;\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.GridBagLayout;\n+\n+import javax.swing.JPanel;\n+import javax.swing.JFrame;\n+import javax.swing.JTextArea;\n+import javax.swing.JButton;\n+\n+public abstract class AccessibleComponentTest {\n+\n+    protected static volatile boolean testResult = true;\n+    protected static volatile CountDownLatch countDownLatch;\n+    protected static String INSTRUCTIONS;\n+    protected static String exceptionString;\n+    protected JFrame mainFrame;\n+    protected static AccessibleComponentTest a11yTest;\n+\n+    public abstract CountDownLatch createCountDownLatch();\n+\n+    public void createUI(JPanel component, String testName) {\n+        mainFrame = new JFrame(testName);\n+        GridBagLayout layout = new GridBagLayout();\n+        JPanel mainControlPanel = new JPanel(layout);\n+        JPanel resultButtonPanel = new JPanel(layout);\n+\n+        GridBagConstraints gbc = new GridBagConstraints();\n+\n+        JTextArea instructionTextArea = new JTextArea();\n+        instructionTextArea.setText(INSTRUCTIONS);\n+        instructionTextArea.setEditable(false);\n+        instructionTextArea.setBackground(Color.white);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 0;\n+        gbc.fill = GridBagConstraints.HORIZONTAL;\n+        mainControlPanel.add(instructionTextArea, gbc);\n+        gbc.gridx = 0;\n+        gbc.gridy = 1;\n+        mainControlPanel.add(component);\n+\n+        JButton passButton = new JButton(\"Pass\");\n+        passButton.setActionCommand(\"Pass\");\n+        passButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                mainFrame.dispose();\n+                countDownLatch.countDown();\n+            }\n+        });\n+\n+        JButton failButton = new JButton(\"Fail\");\n+        failButton.setActionCommand(\"Fail\");\n+        failButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                testResult = false;\n+                mainFrame.dispose();\n+                countDownLatch.countDown();\n+            }\n+        });\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 0;\n+        resultButtonPanel.add(passButton, gbc);\n+\n+        gbc.gridx = 1;\n+        gbc.gridy = 0;\n+        resultButtonPanel.add(failButton, gbc);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 2;\n+        mainControlPanel.add(resultButtonPanel, gbc);\n+\n+        mainFrame.add(mainControlPanel);\n+        mainFrame.pack();\n+\n+        mainFrame.addWindowListener(new WindowAdapter() {\n+\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                mainFrame.dispose();\n+                countDownLatch.countDown();\n+            }\n+        });\n+        mainFrame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleComponentTest.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8264287\n+ * @summary Test implementation of NSAccessibilityComboBox protocol peer\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleJComboboxTest\n+ * @requires (os.family == \"windows\" | os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JPanel;\n+import javax.swing.JLabel;\n+import javax.swing.SwingUtilities;\n+import java.awt.FlowLayout;\n+import java.util.concurrent.CountDownLatch;\n+\n+public class AccessibleJComboboxTest extends AccessibleComponentTest {\n+\n+    @java.lang.Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+    void createCombobox() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JCombobox.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the combobox.\\n\\n\"\n+                + \"If you can hear combobox selected item tab further and press PASS, otherwise press FAIL.\";\n+\n+        JPanel frame = new JPanel();\n+\n+        String[] NAMES = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\"};\n+        JComboBox<String> combo = new JComboBox<>(NAMES);\n+\n+        JLabel label = new JLabel(\"This is combobox:\");\n+        label.setLabelFor(combo);\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(label);\n+        frame.add(combo);\n+        exceptionString = \"AccessibleJCombobox test failed!\";\n+        super.createUI(frame, \"AccessibleJComboboxTest\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        AccessibleJComboboxTest test = new AccessibleJComboboxTest();\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeLater(test::createCombobox);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJComboboxTest.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,330 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8264292\n+ * @summary Test implementation of NSAccessibilityList protocol peer\n+  * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleJListTest\n+ * @requires (os.family == \"windows\" | os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JList;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JWindow;\n+import javax.swing.JPanel;\n+import javax.swing.JLabel;\n+import javax.swing.ListCellRenderer;\n+import javax.swing.SwingUtilities;\n+import javax.swing.Popup;\n+import javax.swing.PopupFactory;\n+\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import java.awt.Rectangle;\n+import java.awt.Dimension;\n+import java.awt.Component;\n+import java.awt.FlowLayout;\n+import java.awt.Window;\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.util.ArrayList;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+public class AccessibleJListTest extends AccessibleComponentTest {\n+\n+    private static final String[] NAMES = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\"};\n+    static JWindow window;\n+\n+    public static void main(String[] args) throws Exception {\n+        a11yTest = new AccessibleJListTest();\n+\n+        countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(((AccessibleJListTest) a11yTest)::createSimpleList);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+\n+        countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(((AccessibleJListTest) a11yTest)::createSimpleListRenderer);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+\n+        countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(((AccessibleJListTest) a11yTest)::createSimpleListNamed);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+\n+        countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(((AccessibleJListTest) a11yTest)::createCombobox);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+\n+        countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(((AccessibleJListTest) a11yTest)::createPushButton);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+\n+        countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(((AccessibleJListTest) a11yTest)::createPushButtonHeavyWeight);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+    }\n+\n+    @java.lang.Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+    public void createSimpleList() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JList.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the list.\\n\"\n+                + \"Press the up and down arrow buttons to move through the list.\\n\\n\"\n+                + \"If you can hear menu items tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JList<String> list = new JList<>(NAMES);\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(list);\n+        exceptionString = \"Accessible JList simple list test failed!\";\n+        super.createUI(frame, \"Accessible JList test\");\n+    }\n+\n+    public void createSimpleListRenderer() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JList with renderer.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the list.\\n\"\n+                + \"Press the up and down arrow buttons to move through the list.\\n\\n\"\n+                + \"If you can hear menu items tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JList<String> list = new JList<>(NAMES);\n+        list.setCellRenderer(new AccessibleJListTestRenderer());\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(list);\n+        exceptionString = \"Accessible JList with renderer simple list test failed!\";\n+        super.createUI(frame, \"Accessible JList test\");\n+    }\n+\n+    public void createSimpleListNamed() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of named JList.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the list.\\n\"\n+                + \"Press the tab button to move to second list.\\n\\n\"\n+                + \"If you can hear second list name: \\\"second list\\\" - tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JList<String> list = new JList<>(NAMES);\n+        JList<String> secondList = new JList<>(NAMES);\n+        secondList.getAccessibleContext().setAccessibleName(\"Second list\");\n+        frame.setLayout(new FlowLayout());\n+        frame.add(list);\n+        frame.add(secondList);\n+        exceptionString = \"Accessible JList simple list named test failed!\";\n+        super.createUI(frame, \"Accessible JList test\");\n+    }\n+\n+\n+    public void createCombobox() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JList in a combobox.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the combobox.\\n\"\n+                + \"Press the up and down arrow buttons to move through the list.\\n\\n\"\n+                + \"If you can hear combobox items tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JComboBox<String> combo = new JComboBox<>(NAMES);\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(combo);\n+        exceptionString = \"Accessible JList combobox test failed!\";\n+        super.createUI(frame, \"Accessible JList test\");\n+    }\n+\n+    public void createPushButton() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JList in a popup in a simple window.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the show button and press space.\\n\"\n+                + \"Press the up and down arrow buttons to move through the list.\\n\\n\"\n+                + \"If you can hear popup menu items tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JButton button = new JButton(\"show\");\n+        button.setPreferredSize(new Dimension(100, 35));\n+\n+        button.addActionListener(new ActionListener() {\n+\n+            final Runnable dispose = () -> {\n+                window.dispose();\n+                window = null;\n+                button.setText(\"show\");\n+            };\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                if (window == null) {\n+                    Rectangle bounds = frame.getBounds();\n+                    window = new JWindow(mainFrame);\n+                    JList<String> winList = new JList<>(NAMES);\n+                    winList.addKeyListener(new KeyAdapter() {\n+                        @Override\n+                        public void keyPressed(KeyEvent e) {\n+                            if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {\n+                                dispose.run();\n+                            }\n+                        }\n+                    });\n+                    window.add(winList);\n+                    window.setLocation(bounds.x + bounds.width + 20, bounds.y);\n+                    window.pack();\n+                    window.setVisible(true);\n+                    button.setText(\"hide (ESC)\");\n+                } else {\n+                    dispose.run();\n+                }\n+            }\n+        });\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(button);\n+        exceptionString = \"Accessible JList push button with simple window test failed!\";\n+        super.createUI(frame, \"Accessible JList test\");\n+    }\n+\n+    public void createPushButtonHeavyWeight() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JList in a popup in a heavy weight window.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the show button and press space.\\n\"\n+                + \"Press the up and down arrow buttons to move through the list.\\n\\n\"\n+                + \"If you can hear popup menu items tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JButton button = new JButton(\"show\");\n+        button.setPreferredSize(new Dimension(100, 35));\n+\n+        button.addActionListener(new ActionListener() {\n+            private Popup popup = null;\n+\n+            final Runnable dispose = () -> {\n+                popup.hide();\n+                popup = null;\n+                button.requestFocus();\n+                button.setText(\"show\");\n+            };\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                if (popup == null) {\n+                    Rectangle bounds = frame.getBounds();\n+                    PopupFactory factory = PopupFactory.getSharedInstance();\n+                    JList<String> winList = new JList<>(NAMES);\n+                    winList.addKeyListener(new KeyAdapter() {\n+                        @Override\n+                        public void keyPressed(KeyEvent e) {\n+                            if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {\n+                                dispose.run();\n+                            }\n+                        }\n+                    });\n+                    popup = factory.getPopup(frame, winList, bounds.x + bounds.width + 20, bounds.y);\n+                    Window c = SwingUtilities.getWindowAncestor(winList);\n+                    if (c != null) {\n+                        c.setAutoRequestFocus(true);\n+                        c.setFocusableWindowState(true);\n+                    }\n+                    popup.show();\n+                    button.setText(\"hide (ESC)\");\n+                } else {\n+                    dispose.run();\n+                }\n+            }\n+        });\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(button);\n+        exceptionString = \"Accessible JList push button with heavy weight window test failed!\";\n+        super.createUI(frame, \"Accessible JList test\");\n+    }\n+\n+    public static class AccessibleJListTestRenderer extends JPanel implements ListCellRenderer {\n+        private JLabel labelAJT = new JLabel(\"AJL\");\n+        private JLabel itemName = new JLabel();\n+\n+        AccessibleJListTestRenderer() {\n+            super(new FlowLayout());\n+            setFocusable(false);\n+            layoutComponents();\n+        }\n+\n+        private void layoutComponents() {\n+            add(labelAJT);\n+            add(itemName);\n+        }\n+\n+        @Override\n+        public Dimension getPreferredSize() {\n+            Dimension size = super.getPreferredSize();\n+            return new Dimension(Math.min(size.width, 245), size.height);\n+        }\n+\n+        @Override\n+        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n+            itemName.setText(((String) value));\n+\n+            getAccessibleContext().setAccessibleName(labelAJT.getText() + \", \" + itemName.getText());\n+            return this;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJListTest.java","additions":330,"deletions":0,"binary":false,"changes":330,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8264303\n+ * @summary Test implementation of NSAccessibilityTabPanel protocol peer\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleJTabbedPaneTest\n+ * @requires (os.family == \"windows\" | os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JTabbedPane;\n+import javax.swing.JPanel;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JTextField;\n+import javax.swing.JCheckBox;\n+import javax.swing.SwingUtilities;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+public class AccessibleJTabbedPaneTest extends AccessibleComponentTest {\n+\n+    @Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+    void createTabPane() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTabbedPane.\\n\\n\"\n+                + \"Turn screen reader on, and tab to the JTabbedPane.\\n\"\n+                + \"Use page up and page down arrow buttons to move through the tabs.\\n\\n\"\n+                + \"If you can hear selected tab names tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JTabbedPane tabbedPane = new JTabbedPane();\n+\n+        JPanel panel1 = new JPanel();\n+        String[] names = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\"};\n+        JList list = new JList(names);\n+        JLabel fieldName = new JLabel(\"Text field:\");\n+        JTextField textField = new JTextField(\"some text\");\n+        fieldName.setLabelFor(textField);\n+        panel1.add(fieldName);\n+        panel1.add(textField);\n+        panel1.add(list);\n+        tabbedPane.addTab(\"Tab 1\", panel1);\n+        JPanel panel2 = new JPanel();\n+        for (int i = 0; i < 5; i++) {\n+            panel2.add(new JCheckBox(\"CheckBox \" + String.valueOf(i + 1)));\n+        }\n+        tabbedPane.addTab(\"tab 2\", panel2);\n+        JPanel panel = new JPanel();\n+        panel.add(tabbedPane);\n+\n+        exceptionString = \"AccessibleJTabbedPane test failed!\";\n+        createUI(panel, \"AccessibleJTabbedPaneTest\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        AccessibleJTabbedPaneTest test = new AccessibleJTabbedPaneTest();\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeLater(test::createTabPane);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJTabbedPaneTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8267388\n+ * @summary Test implementation of NSAccessibilityTable protocol peer\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleJTableTest\n+ * @requires (os.family == \"windows\" | os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JTable;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+\n+import java.awt.FlowLayout;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+public class AccessibleJTableTest extends AccessibleComponentTest {\n+    private static final String[] columnNames = {\"One\", \"Two\", \"Three\"};\n+    private static final String[][] data = {\n+            {\"One1\", \"Two1\", \"Three1\"},\n+            {\"One2\", \"Two2\", \"Three2\"},\n+            {\"One3\", \"Two3\", \"Three3\"},\n+            {\"One4\", \"Two4\", \"Three4\"},\n+            {\"One5\", \"Two5\", \"Three5\"}\n+    };\n+\n+    @Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+    public void  createUI() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTable.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the table.\\n\"\n+                + \"On Windows press the arrow buttons to move through the table.\\n\\n\"\n+                + \"On MacOS, use the up and down arrow buttons to move through rows, and VoiceOver fast navigation to move through columns.\\n\\n\"\n+                + \"If you can hear table cells ctrl+tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JTable table = new JTable(data, columnNames);\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        JScrollPane scrollPane = new JScrollPane(table);\n+        panel.add(scrollPane);\n+        panel.setFocusable(false);\n+        exceptionString = \"AccessibleJTable test failed!\";\n+        super.createUI(panel, \"AccessibleJTableTest\");\n+    }\n+\n+    public void  createUINamed() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of named JTable.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the table.\\n\"\n+                + \"Press the ctrl+tab button to move to second table.\\n\\n\"\n+                + \"If you can hear second table name: \\\"second table\\\" - ctrl+tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JTable table = new JTable(data, columnNames);\n+        JTable secondTable = new JTable(data, columnNames);\n+        secondTable.getAccessibleContext().setAccessibleName(\"Second table\");\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        JScrollPane scrollPane = new JScrollPane(table);\n+        JScrollPane secondScrollPane = new JScrollPane(secondTable);\n+        panel.add(scrollPane);\n+        panel.add(secondScrollPane);\n+        panel.setFocusable(false);\n+        exceptionString = \"AccessibleJTable test failed!\";\n+        super.createUI(panel, \"AccessibleJTableTest\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        AccessibleJTableTest test = new AccessibleJTableTest();\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createUI);\n+        countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createUINamed);\n+        countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJTableTest.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,239 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8267387\n+ * @summary Test implementation of NSAccessibilityOutLine protocol peer\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleJTreeTest\n+ * @requires (os.family == \"windows\" | os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JTree;\n+import javax.swing.JPanel;\n+import javax.swing.JLabel;\n+import javax.swing.JScrollPane;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.TreeCellRenderer;\n+import javax.swing.SwingUtilities;\n+\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.util.Hashtable;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+public class AccessibleJTreeTest extends AccessibleComponentTest {\n+\n+    @Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+    public void createSampleTree() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTree.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the tree.\\n\"\n+                + \"Press the arrow buttons to move through the tree.\\n\\n\"\n+                + \"If you can hear tree components tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        String root = \"Root\";\n+        String[] nodes = new String[] {\"One node\", \"Two node\"};\n+        String[][] leafs = new String[][]{{\"leaf 1.1\", \"leaf 1.2\", \"leaf 1.3\", \"leaf 1.4\"},\n+                {\"leaf 2.1\", \"leaf 2.2\", \"leaf 2.3\", \"leaf 2.4\"}};\n+\n+        Hashtable<String, String[]> data = new Hashtable<String, String[]>();\n+        for (int i = 0; i < nodes.length; i++) {\n+            data.put(nodes[i], leafs[i]);\n+        }\n+\n+        JTree tree = new JTree(data);\n+        tree.setRootVisible(true);\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        JScrollPane scrollPane = new JScrollPane(tree);\n+        panel.add(scrollPane);\n+        panel.setFocusable(false);\n+        exceptionString = \"AccessibleJTree sample item test failed!\";\n+        super.createUI(panel, \"AccessibleJTreeTest\");\n+    }\n+\n+    public void createSampleTreeUnvisableRoot() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTree with invisible root.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the tree.\\n\"\n+                + \"Press the arrow buttons to move through the tree.\\n\\n\"\n+                + \"If you can hear tree components tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        String root = \"Root\";\n+        String[] nodes = new String[] {\"One node\", \"Two node\"};\n+        String[][] leafs = new String[][]{{\"leaf 1.1\", \"leaf 1.2\", \"leaf 1.3\", \"leaf 1.4\"},\n+                {\"leaf 2.1\", \"leaf 2.2\", \"leaf 2.3\", \"leaf 2.4\"}};\n+\n+        Hashtable<String, String[]> data = new Hashtable<String, String[]>();\n+        for (int i = 0; i < nodes.length; i++) {\n+            data.put(nodes[i], leafs[i]);\n+        }\n+\n+        JTree tree = new JTree(data);\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        JScrollPane scrollPane = new JScrollPane(tree);\n+        panel.add(scrollPane);\n+        panel.setFocusable(false);\n+        exceptionString = \"AccessibleJTree sample item invisible root test failed!\";\n+        super.createUI(panel, \"AccessibleJTreeTest\");\n+    }\n+\n+    public void createSampleTreeNamed() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of named JTree.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the tree.\\n\"\n+                + \"Press the tab button to move to second tree.\\\\n\\n\"\n+                + \"If you can hear second tree name: \\\"second tree\\\" - tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        String root = \"Root\";\n+        String[] nodes = new String[] {\"One node\", \"Two node\"};\n+        String[][] leafs = new String[][]{{\"leaf 1.1\", \"leaf 1.2\", \"leaf 1.3\", \"leaf 1.4\"},\n+                {\"leaf 2.1\", \"leaf 2.2\", \"leaf 2.3\", \"leaf 2.4\"}};\n+\n+        Hashtable<String, String[]> data = new Hashtable<String, String[]>();\n+        for (int i = 0; i < nodes.length; i++) {\n+            data.put(nodes[i], leafs[i]);\n+        }\n+\n+        JTree tree = new JTree(data);\n+        JTree secondTree = new JTree(data);\n+        secondTree.getAccessibleContext().setAccessibleName(\"Second tree\");\n+        tree.setRootVisible(true);\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        JScrollPane scrollPane = new JScrollPane(tree);\n+        JScrollPane secondScrollPane = new JScrollPane(secondTree);\n+        panel.add(scrollPane);\n+        panel.add(secondScrollPane);\n+        panel.setFocusable(false);\n+        exceptionString = \"AccessibleJTree named test failed!\";\n+        super.createUI(panel, \"AccessibleJTreeTest\");\n+    }\n+\n+\n+    public void createRendererTree() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTree using renderer.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the tree.\\n\"\n+                + \"Press the arrow buttons to move through the tree.\\n\\n\"\n+                + \"If you can hear tree components tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        String root = \"Root\";\n+        String[] nodes = new String[] {\"One node\", \"Two node\"};\n+        String[][] leafs = new String[][]{{\"leaf 1.1\", \"leaf 1.2\", \"leaf 1.3\", \"leaf 1.4\"},\n+                {\"leaf 2.1\", \"leaf 2.2\", \"leaf 2.3\", \"leaf 2.4\"}};\n+\n+        Hashtable<String, String[]> data = new Hashtable<String, String[]>();\n+        for (int i = 0; i < nodes.length; i++) {\n+            data.put(nodes[i], leafs[i]);\n+        }\n+\n+        JTree tree = new JTree(data);\n+        tree.setRootVisible(true);\n+        tree.setCellRenderer(new AccessibleJTreeTestRenderer());\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        JScrollPane scrollPane = new JScrollPane(tree);\n+        panel.add(scrollPane);\n+        panel.setFocusable(false);\n+        exceptionString = \"AccessibleJTree renderer item test failed!\";\n+        super.createUI(panel, \"AccessibleJTreeTest\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        AccessibleJTreeTest test = new AccessibleJTreeTest();\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createSampleTree);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createSampleTreeNamed);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createSampleTreeUnvisableRoot);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createRendererTree);\n+        countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(AccessibleComponentTest.exceptionString);\n+        }\n+    }\n+\n+    public static class AccessibleJTreeTestRenderer extends JPanel implements TreeCellRenderer {\n+        private JLabel labelAJT = new JLabel(\"AJT\");\n+        private JLabel itemName = new JLabel();\n+\n+        AccessibleJTreeTestRenderer() {\n+            super(new FlowLayout());\n+            setFocusable(false);\n+            layoutComponents();\n+        }\n+\n+        private void layoutComponents() {\n+            add(labelAJT);\n+            add(itemName);\n+        }\n+\n+        @Override\n+        public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n+                itemName.setText((String) (((DefaultMutableTreeNode) value).getUserObject()));\n+\n+            getAccessibleContext().setAccessibleName(labelAJT.getText() + \", \" + itemName.getText());\n+            return this;\n+        }\n+\n+        @Override\n+        public Dimension getPreferredSize() {\n+            Dimension size = super.getPreferredSize();\n+            return new Dimension(Math.min(size.width, 245), size.height);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJTreeTest.java","additions":239,"deletions":0,"binary":false,"changes":239,"status":"added"},{"patch":"@@ -0,0 +1,293 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8262031\n+ * @summary Test implementation of NSAccessibilityNavigableStaticTest and NSAccessibilityStaticText protocols peer\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleTextTest\n+ * @requires (os.family == \"windows\" | os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JPasswordField;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+\n+import java.awt.FlowLayout;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyAdapter;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+public class AccessibleTextTest extends AccessibleComponentTest {\n+    @Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+    private void createSimpleLabel() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JLabel.\\n\\n\"\n+                + \"Turn screen reader on.\\n\"\n+                + \"On MacOS, use the VO navigation keys to read the label text;\\n\"\n+                + \"ON Windows with JAWS, use window virtualization (insert+alt+w and arrows) to read the label text;\\n\"\n+                + \"ON Windows with NVDA, use the browse cursor (insert+num4 or insert+num6) to read the label text;\\n\\n\"\n+                + \"If you can hear text from label tab further and press PASS, otherwise press FAIL.\";\n+\n+        JLabel label = new JLabel(\"this is a label\");\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(label);\n+        exceptionString = \"Simple label test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createOneLineTexField() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTextField.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the text field and type some characters.\\n\\n\"\n+                + \"If you can hear input results according to your screen reader settings, tab further and press PASS, otherwise press FAIL.\";\n+\n+        JTextField textField = new JTextField(\"some text to edit\");\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(textField);\n+        exceptionString = \"Simple text field test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createPassField() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JPasswordField.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the password field and type some characters.\\n\\n\"\n+                + \"If you can hear  sounds specific to your screen reader when interacting with password fields, tab further and press PASS, otherwise press FAIL.\";\n+\n+        JPasswordField passwordField = new JPasswordField(\"12345678\");\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(passwordField);\n+        exceptionString = \"Simple passfield field test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createNamedTextField() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of named JTextField.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the text field.\\n\\n\"\n+                + \"If you can hear in addition to the fact that this text field is also the names of these fields, tab further and press PASS, otherwise press FAIL.\";\n+\n+        JTextField textField = new JTextField(\"some text 1\");\n+        textField.getAccessibleContext().setAccessibleName(\"This is the first text field:\");\n+\n+        JLabel label = new JLabel(\"This is the second text field:\");\n+        JTextField secondTextField = new JTextField(\"some text 2\");\n+        label.setLabelFor(secondTextField);\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(textField);\n+        panel.add(label);\n+        panel.add(secondTextField);\n+        exceptionString = \"Named text field test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createTextArea() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JTextArea.\\n\\n\"\n+                + \"Turn screen reader on and press the arrow keys.\\n\\n\"\n+                + \"If you can hear this instructions, tab further and press PASS, otherwise press FAIL.\";\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        exceptionString = \"Simple text area test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createEditableTextArea() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of editable JTextArea.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the text area and type some characters.\\n\\n\"\n+                + \"If you can hear input results according to your screen reader settings, tab further and press PASS, otherwise press FAIL.\";\n+\n+        JTextArea textArea = new JTextArea(\"some text to edit\");\n+        JLabel label = new JLabel(textArea.getText().length() + \" chars\");\n+        label.setLabelFor(textArea);\n+        textArea.setEditable(true);\n+        textArea.addKeyListener(new KeyAdapter() {\n+            @Override\n+            public void keyReleased(KeyEvent e) {\n+                label.setText(String.valueOf(textArea.getText().length()) + \" chars\");\n+            }\n+        });\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(textArea);\n+        panel.add(label);\n+        exceptionString = \"Editable text area test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createTextPane() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of text in JTextPane.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the text pane and press the arrow keys.\\n\\n\"\n+                + \"If you can hear text, tab further and press PASS, otherwise press FAIL.\";\n+\n+        String str = \"Line 1\\nLine 2\\nLine 3\";\n+        JTextPane textPane = new JTextPane();\n+        textPane.setEditable(false);\n+        textPane.setText(str);\n+        JTextArea textArea = new JTextArea();\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(textPane);\n+        exceptionString = \"Simple text pane test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createHTMLTextPane() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of html text in JTextPane.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the text pane and press the arrow keys.\\n\\n\"\n+                + \"If you can hear text, tab further and press PASS, otherwise press FAIL.\";\n+\n+        String str = \"<html><h1>Header<\/h1><ul><li>Item 1<\/li><li>Item 2<\/li><li>Item 3<\/li><\/ul><\/html>\";\n+        JTextPane textPane = new JTextPane();\n+        textPane.setEditable(false);\n+        textPane.setContentType(\"text\/html\");\n+        textPane.setText(str);\n+        JTextArea textArea = new JTextArea();\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(textPane);\n+        exceptionString = \"HTML text pane test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    private void createEditableTextPane() {\n+        AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of editable JTextPane.\\n\\n\"\n+                + \"Turn screen reader on and press Tab to move to the text pane and type some characters.\\n\\n\"\n+                + \"If you can hear input results according to your screen reader settings, tab further and press PASS, otherwise press FAIL.\";\n+\n+        JTextPane textPane = new JTextPane();\n+        textPane.setText(\"some text to edit\");\n+        JLabel label = new JLabel(textPane.getText().length() + \" chars\");\n+        label.setLabelFor(textPane);\n+        textPane.addKeyListener(new KeyAdapter() {\n+            @Override\n+            public void keyReleased(KeyEvent e) {\n+                label.setText(String.valueOf(textPane.getText().length()) + \" chars\");\n+            }\n+        });\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        panel.add(textPane);\n+        panel.add(label);\n+        exceptionString = \"Editable text pane test failed!\";\n+        super.createUI(panel, \"AccessibleTextTest\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        AccessibleTextTest test = new AccessibleTextTest();\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createSimpleLabel);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createOneLineTexField);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createPassField);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createNamedTextField);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createTextArea);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createEditableTextArea);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createTextPane);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createHTMLTextPane);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+\n+        countDownLatch = test.createCountDownLatch();\n+        SwingUtilities.invokeAndWait(test::createEditableTextPane);\n+        AccessibleComponentTest.countDownLatch.await(15, TimeUnit.MINUTES);\n+        if (!testResult) {\n+            throw new RuntimeException(exceptionString);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleTextTest.java","additions":293,"deletions":0,"binary":false,"changes":293,"status":"added"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+\/**\n+ * @test\n+ * @bug 8271718\n+ * @summary Verifies MT safety of color transformation while profile is changed\n+ *\/\n+public final class MTTransformReplacedProfile {\n+\n+    private static volatile long endtime;\n+\n+    public static void main(String[] args) throws Exception {\n+        ICC_Profile[] profiles = {\n+                ICC_Profile.getInstance(ColorSpace.CS_sRGB),\n+                ICC_Profile.getInstance(ColorSpace.CS_LINEAR_RGB),\n+                ICC_Profile.getInstance(ColorSpace.CS_CIEXYZ),\n+                ICC_Profile.getInstance(ColorSpace.CS_PYCC),\n+                ICC_Profile.getInstance(ColorSpace.CS_GRAY)\n+        };\n+\n+        List<Integer> tags = new ArrayList<>();\n+        for (Field field : ICC_Profile.class.getDeclaredFields()) {\n+            if (Modifier.isStatic(field.getModifiers())\n+                    && Modifier.isPublic(field.getModifiers())\n+                    && Modifier.isFinal(field.getModifiers())\n+                    && field.getType() == int.class) {\n+                tags.add(field.getInt(null));\n+            }\n+        }\n+\n+        List<Thread> tasks = new ArrayList<>();\n+        for (int tag : tags) {\n+            for (ICC_Profile profile1 : profiles) {\n+                for (ICC_Profile profile2 : profiles) {\n+                    byte[] d1 = profile1.getData(tag);\n+                    byte[] d2 = profile2.getData(tag);\n+                    if (d1 == null || d2 == null) {\n+                        continue;\n+                    }\n+                    tasks.add(new Thread(() -> {\n+                        try {\n+                            test(profile1.getData(), d1, d2, tag);\n+                        } catch (Throwable ignored) {\n+                            \/\/ only the crash is the test failure\n+                        }\n+                    }));\n+                }\n+            }\n+        }\n+\n+        \/\/ Try to run the test no more than 15 seconds\n+        endtime = System.nanoTime() + TimeUnit.SECONDS.toNanos(15);\n+        for (Thread t : tasks) {\n+            t.start();\n+        }\n+        for (Thread t : tasks) {\n+            t.join();\n+        }\n+    }\n+\n+    private static void test(byte[] all, byte[] data1, byte[] data2, int tag)\n+            throws Exception {\n+        ICC_Profile icc = ICC_Profile.getInstance(all);\n+        ColorSpace cs = new ICC_ColorSpace(icc);\n+        AtomicBoolean stop = new AtomicBoolean();\n+        Thread swap = new Thread(() -> {\n+            try {\n+                while (!isComplete()) {\n+                    icc.setData(tag, data1);\n+                    icc.setData(tag, data2);\n+                }\n+            } catch (Throwable ignored) {\n+                \/\/ only the crash is the test failure\n+            }\n+            stop.set(true);\n+        });\n+\n+        float[] colorvalue = new float[3];\n+        Thread transform = new Thread(() -> {\n+            boolean rgb = true;\n+            while (!stop.get()) {\n+                try {\n+                    if (rgb) {\n+                        cs.toRGB(colorvalue);\n+                    } else {\n+                        cs.toCIEXYZ(colorvalue);\n+                    }\n+                } catch (Throwable ignored) {\n+                    \/\/ only the crash is the test failure\n+                }\n+                rgb = !rgb;\n+            }\n+        });\n+\n+        swap.start();\n+        transform.start();\n+        swap.join();\n+        transform.join();\n+    }\n+\n+    private static boolean isComplete() {\n+        return endtime - System.nanoTime() < 0;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/ICC_ColorSpace\/MTTransformReplacedProfile.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -101,1 +101,1 @@\n-       \"For On Top tests all windows should stay behind the owner window.\\n\" +\n+       \"For On Top tests all windows should stay behind the print dialog \\n\" +\n","filename":"test\/jdk\/java\/awt\/print\/Dialog\/DialogOwnerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.Objects;\n@@ -199,4 +200,1 @@\n-\n-        if (pageIndex < 0 || pageIndex >= getNumberOfPages()) {\n-            throw new IndexOutOfBoundsException();\n-        }\n+        Objects.checkIndex(pageIndex, getNumberOfPages());\n@@ -228,0 +226,1 @@\n+        Objects.checkIndex(pageIndex, getNumberOfPages());\n@@ -229,3 +228,0 @@\n-        if (pageIndex < 0 || pageIndex >= getNumberOfPages()) {\n-            throw new IndexOutOfBoundsException();\n-        }\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ImagePrinting\/ClippedImages.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=default_gc\n@@ -50,0 +50,57 @@\n+\/*\n+ * @test id=zgc\n+ * @requires (((os.arch == \"amd64\" | os.arch == \"x86_64\") & sun.arch.data.model == \"64\") | os.arch == \"aarch64\")\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=true\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseZGC\n+ *   TestAsyncStackWalk\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=false\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseZGC\n+ *   TestAsyncStackWalk\n+ *\/\n+\/*\n+ * @test id=shenandoah\n+ * @requires (((os.arch == \"amd64\" | os.arch == \"x86_64\") & sun.arch.data.model == \"64\") | os.arch == \"aarch64\")\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=true\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseShenandoahGC\n+ *   TestAsyncStackWalk\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=false\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseShenandoahGC\n+ *   TestAsyncStackWalk\n+ *\/\n+\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java","additions":58,"deletions":1,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=default_gc\n@@ -50,0 +50,57 @@\n+\/*\n+ * @test id=zgc\n+ * @requires (((os.arch == \"amd64\" | os.arch == \"x86_64\") & sun.arch.data.model == \"64\") | os.arch == \"aarch64\")\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=true\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseZGC\n+ *   TestStackWalk\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=false\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseZGC\n+ *   TestStackWalk\n+ *\/\n+\/*\n+ * @test id=shenandoah\n+ * @requires (((os.arch == \"amd64\" | os.arch == \"x86_64\") & sun.arch.data.model == \"64\") | os.arch == \"aarch64\")\n+ * @requires vm.gc.Shenandoah\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=true\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseShenandoahGC\n+ *   TestStackWalk\n+ *\n+ * @run main\/othervm\n+ *   -Xbootclasspath\/a:.\n+ *   -XX:+UnlockDiagnosticVMOptions\n+ *   -XX:+WhiteBoxAPI\n+ *   -Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=false\n+ *   --enable-native-access=ALL-UNNAMED\n+ *   -Xbatch\n+ *   -XX:+UseShenandoahGC\n+ *   TestStackWalk\n+ *\/\n+\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java","additions":58,"deletions":1,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -0,0 +1,130 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.RandomFactory\n+ * @run main TransferTo\n+ * @bug 8272297\n+ * @summary Test FileInputStream.transferTo(FileOutputStream)\n+ * @key randomness\n+ *\/\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.Random;\n+import jdk.test.lib.RandomFactory;\n+\n+public class TransferTo {\n+    private static int MIN_SIZE      = 10_000;\n+    private static int MAX_SIZE_INCR = 100_000_000 - MIN_SIZE;\n+\n+    private static int ITERATIONS = 10;\n+\n+    private static final Random RND = RandomFactory.getRandom();\n+\n+    public static void main(String[] args) throws IOException {\n+        File dir = new File(\".\");\n+        File in = File.createTempFile(\"src\", \".dat\", dir);\n+        in.deleteOnExit();\n+\n+        int length = MIN_SIZE + RND.nextInt(MAX_SIZE_INCR);\n+        byte[] bytes = new byte[length];\n+\n+        try (RandomAccessFile rafi = new RandomAccessFile(in, \"rw\")) {\n+            rafi.write(bytes);\n+        }\n+\n+        File out = File.createTempFile(\"dst\", \".dat\", dir);\n+        out.deleteOnExit();\n+\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            int posIn = RND.nextInt(length);\n+            int posOut = RND.nextInt(MIN_SIZE);\n+\n+            try (RandomAccessFile rafo = new RandomAccessFile(out, \"rw\")) {\n+                rafo.setLength(posOut);\n+            }\n+\n+            test(in, posIn, out, posOut);\n+\n+            out.delete();\n+            out = File.createTempFile(\"dst\", \".dat\", dir);\n+            out.deleteOnExit();\n+        }\n+    }\n+\n+    private static void test(File in, int posIn, File out, int posOut)\n+        throws IOException {\n+        try (FileInputStream fis = new FileInputStream(in)) {\n+            try (FileChannel fci = fis.getChannel()) {\n+                fci.position(posIn);\n+                long size = fci.size();\n+                long length = size - posIn;\n+                int count = Math.toIntExact(length);\n+\n+                try (FileOutputStream fos = new FileOutputStream(out)) {\n+                    try (FileChannel fco = fos.getChannel()) {\n+                        fco.position(posOut);\n+\n+                        long transferred = fis.transferTo(fos);\n+                        if (transferred != count)\n+                            fail(posIn, size, posOut,\n+                                \"Transferred \" + transferred +\n+                                \", expected \" + count);\n+\n+                        if (fci.position() != posIn + count)\n+                            fail(posIn, size, posOut,\n+                                \"Input position \" + fci.position() +\n+                                \", expected \" + posIn + count);\n+\n+                        if (fco.position() != posOut + count)\n+                            fail(posIn, size, posOut,\n+                                \"Output position \" + fco.position() +\n+                                \", expected \" + posOut + count);\n+\n+                        byte[] bytesIn = Files.readAllBytes(in.toPath());\n+                        byte[] bytesOut = Files.readAllBytes(out.toPath());\n+                        if (!Arrays.equals(bytesIn, posIn, posIn + count,\n+                                           bytesOut, posOut, posOut + count))\n+                            fail(posIn, size, posOut, \"Contents unequal\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void fail(int posIn, long size, int posOut,\n+                             String msg) {\n+        System.out.printf(\"Failure for posIn %s, size %d, posOut %d%n\",\n+                          posIn, size, posOut);\n+        throw new RuntimeException(msg);\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/FileInputStream\/TransferTo.java","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @bug 6708398\n+ * @bug 6708398 8075806\n@@ -59,2 +59,3 @@\n-     * Test Math.addExact, multiplyExact, subtractExact, incrementExact,\n-     * decrementExact, negateExact methods with {@code int} arguments.\n+     * Test Math.addExact, multiplyExact, divideExact, subtractExact,\n+     * incrementExact, decrementExact, negateExact methods with\n+     * {@code int} arguments.\n@@ -135,0 +136,33 @@\n+        boolean exceptionExpected = false;\n+        try {\n+            \/\/ Test divideExact\n+            BigInteger q = null;\n+            try {\n+                q = BigInteger.valueOf(x).divide(BigInteger.valueOf(y));\n+            } catch (ArithmeticException e) {\n+                exceptionExpected = true;\n+            }\n+            int quotient = 0;\n+            if (q != null) {\n+                try {\n+                    quotient = q.intValueExact();\n+                } catch (ArithmeticException e) {\n+                    exceptionExpected = true;\n+                }\n+            }\n+            int z = Math.divideExact(x, y);\n+            if (exceptionExpected) {\n+                fail(\"FAIL: int Math.divideExact(\" + x + \" \/ \" + y + \")\" +\n+                    \"; expected ArithmeticException not thrown\");\n+            }\n+            if (z != quotient) {\n+                fail(\"FAIL: int Math.divideExact(\" + x + \" \/ \" + y + \") = \" +\n+                    z + \"; expected: \" + quotient);\n+            }\n+        } catch (ArithmeticException ex) {\n+            if (!exceptionExpected) {\n+                fail(\"FAIL: int Math.divideExact(\" + x + \" \/ \" + y + \")\" +\n+                    \"; Unexpected exception: \" + ex);\n+            }\n+        }\n+\n@@ -185,2 +219,3 @@\n-     * Test Math.addExact, multiplyExact, subtractExact, incrementExact,\n-     * decrementExact, negateExact, toIntExact methods with {@code long} arguments.\n+     * Test Math.addExact, multiplyExact, divideExact, subtractExact,\n+     * incrementExact, decrementExact, negateExact, toIntExact methods\n+     * with {@code long} arguments.\n@@ -272,0 +307,20 @@\n+        try {\n+            \/\/ Test divideExact\n+            resultBig = null;\n+            try {\n+                resultBig = xBig.divide(yBig);\n+            } catch (ArithmeticException ex) {\n+            }\n+            long quotient = Math.divideExact(x, y);\n+            if (resultBig == null) {\n+                fail(\"FAIL: long Math.divideExact(\" + x + \" \/ \" + y + \")\" +\n+                    \"; expected ArithmeticException not thrown\");\n+            }\n+            checkResult(\"long Math.divideExact\", x, y, quotient, resultBig);\n+        } catch (ArithmeticException ex) {\n+            if (resultBig != null && inLongRange(resultBig)) {\n+                fail(\"FAIL: long Math.divideExact(\" + x + \" \/ \" + y + \")\" +\n+                    \"; Unexpected exception: \" + ex);\n+            }\n+        }\n+\n","filename":"test\/jdk\/java\/lang\/Math\/ExactArithTests.java","additions":61,"deletions":6,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,9 @@\n+    static int testStrictVsNonstrictPowCase(double input1, double input2) {\n+        double smResult = StrictMath.pow(input1, input2);\n+        double mResult = Math.pow(input1, input2);\n+        return Tests.testUlpDiff(\n+            \"StrictMath.pow(double, double) vs Math.pow(double, double)\",\n+            input1, input2, mResult, smResult, 2.0\n+        );\n+    }\n+\n@@ -209,0 +218,1 @@\n+                    failures += testStrictVsNonstrictPowCase(x, y);\n@@ -211,0 +221,1 @@\n+                    failures += testStrictVsNonstrictPowCase(x, y);\n","filename":"test\/jdk\/java\/lang\/Math\/PowTests.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271732\n+ * @summary Basic test that charAt throws IIOBE as expected for out of bounds indexes.\n+ * @run testng CharAt\n+ *\/\n+\n+import java.util.List;\n+\n+import org.testng.annotations.Test;\n+import org.testng.annotations.DataProvider;\n+import static org.testng.Assert.*;\n+\n+public class CharAt {\n+\n+    \/**\n+     * StringBuilder\/-Buffer.charAt throws:\n+     * IndexOutOfBoundsException - if index is negative or greater than or equal to length().\n+     * the test inputs, expected to throw IndexOutOfBoundsException.\n+     *\/\n+    @Test\n+    public void charAtIIOBE() {\n+        StringBuilder sb = new StringBuilder(\"test\");\n+        StringBuffer sbuf = new StringBuffer(\"test\");\n+\n+        StringBuilder sbUtf16 = new StringBuilder(\"\\uFF34est\"); \/\/ Fullwidth Latin Capital Letter T\n+        StringBuffer sbufUtf16 = new StringBuffer(\"\\uFF34est\");\n+\n+        List<Integer> outOfBoundsIndices = List.of(Integer.MIN_VALUE, -2, -1, 4, 5, Integer.MAX_VALUE);\n+\n+        for (int index : outOfBoundsIndices) {\n+            try {\n+                sb.charAt(index);\n+                fail(\"StringBuilder.charAt index: \" + index + \" does not throw IOOBE as expected\");\n+            } catch (IndexOutOfBoundsException ex) {\n+                \/\/ OK\n+            }\n+\n+            try {\n+                sbUtf16.charAt(index);\n+                fail(\"StringBuilder.charAt index: \" + index + \" does not throw IOOBE as expected (UTF-16)\");\n+            } catch (IndexOutOfBoundsException ex) {\n+                \/\/ OK\n+            }\n+\n+            try {\n+                sbuf.charAt(index);\n+                fail(\"StringBuffer.charAt index: \" + index + \" does not throw IOOBE as expected\");\n+            } catch (IndexOutOfBoundsException ex) {\n+                \/\/ OK\n+            }\n+\n+            try {\n+                sbufUtf16.charAt(index);\n+                fail(\"StringBuffer.charAt index: \" + index + \" does not throw IOOBE as expected (UTF-16)\");\n+            } catch (IndexOutOfBoundsException ex) {\n+                \/\/ OK\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/StringBuilder\/CharAt.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,143 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271308\n+ * @summary Verify that transferTo() copies more than Integer.MAX_VALUE bytes\n+ * @library .. \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main Transfer2GPlus\n+ *\/\n+\n+import java.io.File;\n+import java.io.DataOutputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.Channels;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.WritableByteChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n+import java.util.Arrays;\n+import java.util.Random;\n+import jdk.test.lib.Platform;\n+\n+public class Transfer2GPlus {\n+    private static final long BASE   = (long)Integer.MAX_VALUE;\n+    private static final int  EXTRA  = 1024;\n+    private static final long LENGTH = BASE + EXTRA;\n+\n+    public static void main(String[] args) throws IOException {\n+        Path src = Files.createTempFile(\"src\", \".dat\");\n+        src.toFile().deleteOnExit();\n+        byte[] b = createSrcFile(src);\n+        testToFileChannel(src, b);\n+        testToWritableByteChannel(src, b);\n+    }\n+\n+    \/\/ Create a file of size LENGTH with EXTRA random bytes at offset BASE.\n+    private static byte[] createSrcFile(Path src)\n+        throws IOException {\n+        RandomAccessFile raf = new RandomAccessFile(src.toString(), \"rw\");\n+        raf.setLength(LENGTH);\n+        raf.seek(BASE);\n+        Random r = new Random(System.nanoTime());\n+        byte[] b = new byte[EXTRA];\n+        r.nextBytes(b);\n+        raf.write(b);\n+        return b;\n+    }\n+\n+    \/\/ Exercises transferToDirectly() on Linux and transferToTrustedChannel()\n+    \/\/ on macOS and Windows.\n+    private static void testToFileChannel(Path src, byte[] expected)\n+        throws IOException {\n+        Path dst = Files.createTempFile(\"dst\", \".dat\");\n+        dst.toFile().deleteOnExit();\n+        try (FileChannel srcCh = FileChannel.open(src)) {\n+            try (FileChannel dstCh = FileChannel.open(dst,\n+                 StandardOpenOption.READ, StandardOpenOption.WRITE)) {\n+                long total = 0L;\n+                if ((total = srcCh.transferTo(0, LENGTH, dstCh)) < LENGTH) {\n+                    if (!Platform.isLinux())\n+                        throw new RuntimeException(\"Transfer too small: \" + total);\n+\n+                    \/\/ If this point is reached we're on Linux which cannot\n+                    \/\/ transfer all LENGTH bytes in one call to sendfile(2),\n+                    \/\/ so loop to get the rest.\n+                    do {\n+                        long n = srcCh.transferTo(total, LENGTH, dstCh);\n+                        if (n == 0)\n+                            break;\n+                        total += n;\n+                    } while (total < LENGTH);\n+                }\n+\n+                if (dstCh.size() < LENGTH)\n+                    throw new RuntimeException(\"Target file too small: \" +\n+                        dstCh.size() + \" < \" + LENGTH);\n+\n+                System.out.println(\"Transferred \" + total + \" bytes\");\n+\n+                dstCh.position(BASE);\n+                ByteBuffer bb = ByteBuffer.allocate(EXTRA);\n+                dstCh.read(bb);\n+                if (!Arrays.equals(bb.array(), expected))\n+                    throw new RuntimeException(\"Unexpected values\");\n+            }\n+        }\n+    }\n+\n+    \/\/ Exercises transferToArbitraryChannel() on all platforms.\n+    private static void testToWritableByteChannel(Path src, byte[] expected)\n+        throws IOException {\n+        File file = File.createTempFile(\"dst\", \".dat\");\n+        file.deleteOnExit();\n+        try (FileChannel srcCh = FileChannel.open(src)) {\n+            \/\/ The FileOutputStream is wrapped so that newChannel() does not\n+            \/\/ return a FileChannelImpl and so make a faster path be taken.\n+            try (DataOutputStream stream =\n+                new DataOutputStream(new FileOutputStream(file))) {\n+                try (WritableByteChannel wbc = Channels.newChannel(stream)) {\n+                    long n;\n+                    if ((n = srcCh.transferTo(0, LENGTH, wbc)) < LENGTH)\n+                        throw new RuntimeException(\"Too few bytes transferred: \" +\n+                            n + \" < \" + LENGTH);\n+\n+                    System.out.println(\"Transferred \" + n + \" bytes\");\n+\n+                    RandomAccessFile raf = new RandomAccessFile(file, \"r\");\n+                    raf.seek(BASE);\n+                    byte[] b = new byte[EXTRA];\n+                    raf.read(b);\n+                    if (!Arrays.equals(b, expected))\n+                        throw new RuntimeException(\"Unexpected values\");\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/Transfer2GPlus.java","additions":143,"deletions":0,"binary":false,"changes":143,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8140241\n+ * @summary Test transferring to and from same file channel\n+ *\/\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.OutputStream;\n+import java.io.RandomAccessFile;\n+import java.io.IOException;\n+import java.nio.channels.FileChannel;\n+import java.util.Random;\n+\n+public class TransferOverlappedFileChannel {\n+\n+    public static void main(String[] args) throws Exception {\n+        File file = File.createTempFile(\"readingin\", null);\n+        file.deleteOnExit();\n+        generateBigFile(file);\n+        RandomAccessFile raf = new RandomAccessFile(file, \"rw\");\n+        try (FileChannel channel = raf.getChannel()) {\n+            transferToNoOverlap(file, channel);\n+            transferToOverlap(file, channel);\n+            transferFromNoOverlap(file, channel);\n+            transferFromOverlap(file, channel);\n+        } finally {\n+            file.delete();\n+        }\n+    }\n+\n+    private static void transferToNoOverlap(File file, FileChannel channel)\n+        throws IOException {\n+        final long length = file.length();\n+\n+        \/\/ position at three quarters\n+        channel.position(length*3\/4);\n+        \/\/ copy last quarter to third quarter\n+        \/\/ (copied and overwritten regions do NOT overlap)\n+        \/\/ So: 1 2 3 4 -> 1 2 4 4\n+        channel.transferTo(length \/ 2, length \/ 4, channel);\n+        System.out.println(\"transferToNoOverlap: OK\");\n+    }\n+\n+    private static void transferToOverlap(File file, FileChannel channel)\n+        throws IOException {\n+        final long length = file.length();\n+\n+        \/\/ position at half\n+        channel.position(length\/2);\n+        \/\/ copy last half to second quarter\n+        \/\/ (copied and overwritten regions DO overlap)\n+        \/\/ So: 1 2 3 4 -> 1 3 4 4\n+        channel.transferTo(length \/ 4, length \/ 2, channel);\n+        System.out.println(\"transferToOverlap: OK\");\n+    }\n+\n+    private static void transferFromNoOverlap(File file, FileChannel channel)\n+        throws IOException {\n+        final long length = file.length();\n+\n+        \/\/ position at three quarters\n+        channel.position(length*3\/4);\n+        \/\/ copy last quarter to third quarter\n+        \/\/ (copied and overwritten regions do NOT overlap)\n+        \/\/ So: 1 2 3 4 -> 1 2 4 4\n+        channel.transferFrom(channel, length \/ 2, length \/ 4);\n+        System.out.println(\"transferFromNoOverlap: OK\");\n+    }\n+\n+    private static void transferFromOverlap(File file, FileChannel channel)\n+        throws IOException {\n+        final long length = file.length();\n+\n+        \/\/ position at half\n+        channel.position(length\/2);\n+        \/\/ copy last half to second quarter\n+        \/\/ (copied and overwritten regions DO overlap)\n+        \/\/ So: 1 2 3 4 -> 1 3 4 4\n+        channel.transferFrom(channel, length \/ 4, length \/ 2);\n+        System.out.println(\"transferFromOverlap: OK\");\n+    }\n+\n+    private static void generateBigFile(File file) throws Exception {\n+        try (OutputStream out = new BufferedOutputStream(\n+                new FileOutputStream(file))) {\n+            byte[] randomBytes = new byte[1024];\n+            Random rand = new Random(0);\n+            rand.nextBytes(randomBytes);\n+            for (int i = 0; i < 1024; i++) {\n+                out.write(randomBytes);\n+            }\n+            out.flush();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/TransferOverlappedFileChannel.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266345\n+ * @bug 4313887 7006126 8142968 8178380 8183320 8210112 8266345 8263940\n@@ -40,0 +40,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -41,0 +43,2 @@\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -44,1 +48,0 @@\n-import org.testng.annotations.BeforeTest;\n@@ -76,0 +79,39 @@\n+    \/**\n+     * Test override of default FileSystemProvider with a\n+     * FileSystemProvider jar and the main application on the class path.\n+     *\/\n+    public void testClassPathWithFileSystemProviderJar() throws Exception {\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path jar = Path.of(\"testFileSystemProvider.jar\");\n+        Files.deleteIfExists(jar);\n+        createFileSystemProviderJar(jar, Path.of(testClasses));\n+        String classpath = jar + File.pathSeparator + testClasses\n+                + File.separator + \"modules\" + File.separator + \"m\";\n+        int exitValue = exec(SET_DEFAULT_FSP, \"-cp\", classpath, \"p.Main\");\n+        assertTrue(exitValue == 0);\n+    }\n+\n+    \/**\n+     * Creates a JAR containing the FileSystemProvider used to override the\n+     * default FileSystemProvider\n+     *\/\n+    private void createFileSystemProviderJar(Path jar, Path dir) throws IOException {\n+\n+        List<String>  args = new ArrayList<>();\n+        args.add(\"--create\");\n+        args.add(\"--file=\" + jar);\n+        try (Stream<Path> stream = Files.list(dir)) {\n+            List<String> paths = stream\n+                    .map(path -> path.getFileName().toString())\n+                    .filter(f -> f.startsWith(\"TestProvider\"))\n+                    .toList();\n+            for(var p : paths) {\n+                args.add(\"-C\");\n+                args.add(dir.toString());\n+                args.add(p);\n+            }\n+        }\n+        int ret = JAR_TOOL.run(System.out, System.out, args.toArray(new String[0]));\n+        assertTrue(ret == 0);\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/file\/spi\/SetDefaultProvider.java","additions":44,"deletions":2,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,1 +152,1 @@\n-    public void testClientInUnamedModule() throws Exception {\n+    public void testClientInUnnamedModule() throws Exception {\n","filename":"test\/jdk\/java\/rmi\/module\/ModuleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -393,1 +393,1 @@\n-                        \/\/difficulty in accessing unamed package class. This\n+                        \/\/difficulty in accessing unnamed package class. This\n","filename":"test\/jdk\/java\/rmi\/reliability\/benchmark\/bench\/rmi\/Main.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -911,0 +911,14 @@\n+    @Test\n+    public void test_isPositive() {\n+        assertEquals(Duration.ofNanos(0).isPositive(), false);\n+        assertEquals(Duration.ofSeconds(0).isPositive(), false);\n+        assertEquals(Duration.ofNanos(1).isPositive(), true);\n+        assertEquals(Duration.ofSeconds(1).isPositive(), true);\n+        assertEquals(Duration.ofSeconds(1, 1).isPositive(), true);\n+        assertEquals(Duration.ofSeconds(Long.MAX_VALUE, 999_999_999).isPositive(), true);\n+        assertEquals(Duration.ofNanos(-1).isPositive(), false);\n+        assertEquals(Duration.ofSeconds(-1).isPositive(), false);\n+        assertEquals(Duration.ofSeconds(-1, -1).isPositive(), false);\n+        assertEquals(Duration.ofSeconds(Long.MIN_VALUE).isPositive(), false);\n+    }\n+\n@@ -918,0 +932,1 @@\n+        assertEquals(Duration.ofSeconds(Long.MAX_VALUE, 999_999_999).isNegative(), false);\n@@ -921,0 +936,1 @@\n+        assertEquals(Duration.ofSeconds(Long.MIN_VALUE).isNegative(), true);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/TCKDuration.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,2 @@\n- *    6488442 7036905 8008577 8039317 8074350 8074351 8150324 8167143\n+ *      6488442 7036905 8008577 8039317 8074350 8074351 8150324 8167143\n+ *      8264792\n@@ -107,1 +108,1 @@\n-                ctryCode.matches(\"AA|Q[M-Z]|X[A-Z]|ZZ\" + \/\/ user defined codes\n+                ctryCode.matches(\"AA|Q[M-Z]|X[A-JL-Z]|ZZ\" + \/\/ user defined codes, excluding \"XK\" (Kosovo)\n","filename":"test\/jdk\/java\/util\/Currency\/CurrencyTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- *      8208746 8209775\n+ *      8208746 8209775 8264792\n@@ -80,1 +80,1 @@\n-         * it. On the othe hand, both code and minor unit are defined in\n+         * it. On the other hand, both code and minor unit are defined in\n@@ -95,0 +95,3 @@\n+\n+        \/* Defined neither in ISO 4217 nor ISO 3166 list *\/\n+        {\"XK\", \"EUR\", \"978\", \"2\"},      \/\/ Kosovo\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * 8216332 8214245 8237599 8241055 8247546 8258259 8037397\n+ * 8216332 8214245 8237599 8241055 8247546 8258259 8037397 8269753\n@@ -201,0 +201,1 @@\n+        errorMessageCaretIndentation();\n@@ -5292,0 +5293,18 @@\n+        report(\"Dropped classes with intersection.\");\n+\n+    }\n+\n+    \/\/This test is for 8269753\n+    private static void errorMessageCaretIndentation() {\n+        String pattern = \"\\t**\";\n+\n+        try {\n+            var res = Pattern.compile(pattern);\n+        } catch (PatternSyntaxException e) {\n+            var message = e.getMessage();\n+            var sep = System.lineSeparator();\n+            if (!message.contains(sep + \"\\t ^\")){\n+                failCount++;\n+            }\n+        }\n+        report(\"Correct caret indentation for patterns with tabs\");\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.Objects;\n@@ -117,2 +118,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -126,2 +126,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -135,2 +134,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -153,2 +151,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -168,2 +165,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n","filename":"test\/jdk\/javax\/imageio\/AppletResourceTest.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.Objects;\n@@ -90,2 +91,1 @@\n-            if (imageIndex >= 1 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 1);\n@@ -104,2 +104,1 @@\n-            if (imageIndex >= 1 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 1);\n","filename":"test\/jdk\/javax\/imageio\/ImageReaderReadAll.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.util.Objects;\n@@ -118,2 +119,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -127,2 +127,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -136,2 +135,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -153,2 +151,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n@@ -172,2 +169,1 @@\n-            if (imageIndex >= 5 || imageIndex < 0)\n-                throw new IndexOutOfBoundsException();\n+            Objects.checkIndex(imageIndex, 5);\n","filename":"test\/jdk\/javax\/imageio\/metadata\/IIOMetadataFormat\/UserPluginMetadataFormatTest.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8270893\n+ * @summary Ensure that we don't throw IndexOutOfBoundsException when\n+ *          we read TIFF tag with content more than 1024000 bytes\n+ * @run main LargeTIFFTagTest\n+ *\/\n+\n+import javax.imageio.ImageIO;\n+import javax.imageio.ImageReader;\n+import javax.imageio.stream.ImageInputStream;\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+public class LargeTIFFTagTest {\n+    public static void main(String[] args) throws IOException {\n+        \/\/ TIFF stream length to hold 22 bytes of TIFF header\n+        \/\/ plus 1024002 bytes of data in one TIFFTag\n+        int length = 1024024;\n+        byte[] ba = new byte[length];\n+        \/\/ Little endian TIFF stream with header and only one\n+        \/\/ IFD entry at offset 22 having count value 1024002.\n+        byte[] header = new byte[] { (byte)0x49, (byte) 0x49,\n+                (byte)0x2a, (byte)0x00, (byte)0x08, (byte)0x00,\n+                (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00,\n+                (byte)0x73, (byte)0x87, (byte)0x07, (byte)0x00,\n+                (byte)0x02, (byte)0xA0, (byte)0x0F, (byte)0x00,\n+                (byte)0x16, (byte)0x00, (byte)0x00, (byte)0x00};\n+        \/\/ copy first 22 bytes of TIFF header to byte array\n+        for (int i = 0; i < 22; i++) {\n+            ba[i] = header[i];\n+        }\n+        ByteArrayInputStream bais = new ByteArrayInputStream(ba);\n+        ImageInputStream stream = ImageIO.createImageInputStream(bais);\n+        Iterator<ImageReader> readers = ImageIO.getImageReaders(stream);\n+\n+        if(readers.hasNext()) {\n+            ImageReader reader = readers.next();\n+            reader.setInput(stream);\n+            try {\n+                reader.readAll(0, null);\n+            } catch (IllegalArgumentException e) {\n+                \/\/ do nothing we expect IllegalArgumentException but we\n+                \/\/ should not throw IndexOutOfBoundsException.\n+                System.out.println(e.toString());\n+                System.out.println(\"Caught IllegalArgumentException ignore it\");\n+            }\n+        } else {\n+            throw new RuntimeException(\"No readers available for TIFF format\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/tiff\/LargeTIFFTagTest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+import java.util.Arrays;\n@@ -26,0 +27,1 @@\n+import java.util.List;\n@@ -40,4 +42,4 @@\n-    public final String supportedProtocols;\n-    public final String enabledProtocols;\n-    public final String supportedCipherSuites;\n-    public final String enabledCipherSuites;\n+    public final List<String> supportedProtocols;\n+    public final List<String> enabledProtocols;\n+    public final List<String> supportedCipherSuites;\n+    public final List<String> enabledCipherSuites;\n@@ -57,7 +59,20 @@\n-        version = attributes[0].replaceAll(\".*=\", \"\");\n-        supportedProtocols = attributes[1].replaceAll(\".*=\", \"\");\n-        enabledProtocols = attributes[2].replaceAll(\".*=\", \"\");\n-        supportedCipherSuites = attributes[3].replaceAll(\".*=\", \"\");\n-        enabledCipherSuites = attributes[4].replaceAll(\".*=\", \"\");\n-        supportsSNI = Boolean.valueOf(attributes[5].replaceAll(\".*=\", \"\"));\n-        supportsALPN = Boolean.valueOf(attributes[6].replaceAll(\".*=\", \"\"));\n+        version = parseAttribute(attributes[0]);\n+        supportedProtocols = parseListAttribute(attributes[1]);\n+        enabledProtocols = parseListAttribute(attributes[2]);\n+        supportedCipherSuites = parseListAttribute(attributes[3]);\n+        enabledCipherSuites = parseListAttribute(attributes[4]);\n+        supportsSNI = parseBooleanAttribute(attributes[5]);\n+        supportsALPN = parseBooleanAttribute(attributes[6]);\n+    }\n+\n+    private List<String> parseListAttribute(String attribute) {\n+        attribute = parseAttribute(attribute);\n+        return Arrays.asList(attribute.split(\",\"));\n+    }\n+\n+    private boolean parseBooleanAttribute(String attribute) {\n+        attribute = parseAttribute(attribute);\n+        return Boolean.parseBoolean(attribute);\n+    }\n+    private String parseAttribute(String attribute) {\n+        return attribute.replaceAll(\".*=\", \"\");\n","filename":"test\/jdk\/javax\/net\/ssl\/compatibility\/JdkInfo.java","additions":27,"deletions":12,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    private static int locx, locy, frw, frh;\n+    private static volatile int locx, locy, frw, frh;\n@@ -79,0 +79,1 @@\n+                    frame.setUndecorated(true);\n@@ -105,6 +106,8 @@\n-            Rectangle bounds = frame.getBounds();\n-            Insets insets = frame.getInsets();\n-            locx = bounds.x + insets.left;\n-            locy = bounds.y + insets.top;\n-            frw = bounds.width - insets.left - insets.right;\n-            frh = bounds.height - insets.top - insets.bottom;\n+            SwingUtilities.invokeAndWait(() -> {\n+                        Rectangle bounds = frame.getBounds();\n+                        Insets insets = frame.getInsets();\n+                        locx = bounds.x + insets.left;\n+                        locy = bounds.y + insets.top;\n+                        frw = bounds.width - insets.left - insets.right;\n+                        frh = bounds.height - insets.top - insets.bottom;\n+                    });\n","filename":"test\/jdk\/javax\/swing\/JComponent\/7154030\/bug7154030.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -190,1 +190,1 @@\n-            + \"   cannot accommadate the title completely.\\n\"\n+            + \"   cannot accommodate the title completely.\\n\"\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/4310381\/bug4310381.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2008, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @author Denis Sharypov\n@@ -33,2 +32,8 @@\n-import java.awt.*;\n-import javax.swing.*;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.JLabel;\n@@ -39,0 +44,1 @@\n+    private static JFrame mainFrame;\n@@ -42,1 +48,0 @@\n-        robot.setAutoDelay(50);\n@@ -44,1 +49,2 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n@@ -46,5 +52,5 @@\n-            @Override\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+                @Override\n+                public void run() {\n+                    createAndShowGUI();\n+                }\n+            });\n@@ -52,1 +58,2 @@\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -54,1 +61,1 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n@@ -56,3 +63,3 @@\n-            @Override\n-            public void run() {\n-                boolean passed = false;\n+                @Override\n+                public void run() {\n+                    boolean passed = false;\n@@ -60,4 +67,4 @@\n-                Point p = htmlComponent.getLocationOnScreen();\n-                Dimension d = htmlComponent.getSize();\n-                int x0 = p.x;\n-                int y = p.y + d.height \/ 2;\n+                    Point p = htmlComponent.getLocationOnScreen();\n+                    Dimension d = htmlComponent.getSize();\n+                    int x0 = p.x;\n+                    int y = p.y + d.height \/ 2;\n@@ -65,4 +72,5 @@\n-                for (int x = x0; x < x0 + d.width; x++) {\n-                    if (robot.getPixelColor(x, y).equals(Color.blue)) {\n-                        passed = true;\n-                        break;\n+                    for (int x = x0; x < x0 + d.width; x++) {\n+                        if (robot.getPixelColor(x, y).equals(Color.blue)) {\n+                            passed = true;\n+                            break;\n+                        }\n@@ -70,1 +78,0 @@\n-                }\n@@ -72,3 +79,3 @@\n-                if (!passed) {\n-                    throw new RuntimeException(\"Test failed.\");\n-                }\n+                    if (!passed) {\n+                        throw new RuntimeException(\"Test failed.\");\n+                    }\n@@ -76,2 +83,9 @@\n-            }\n-        });\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (mainFrame != null) {\n+                    mainFrame.dispose();\n+                }\n+            });\n+        }\n@@ -89,1 +103,1 @@\n-        JFrame mainFrame = new JFrame(\"bug4251579\");\n+        mainFrame = new JFrame(\"bug4251579\");\n@@ -95,0 +109,1 @@\n+        mainFrame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicHTML\/4251579\/bug4251579.java","additions":46,"deletions":31,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -1,100 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import javax.swing.UIManager;\n-import javax.swing.UnsupportedLookAndFeelException;\n-import javax.swing.plaf.UIResource;\n-import javax.swing.plaf.nimbus.NimbusLookAndFeel;\n-import java.awt.Color;\n-\n-\/**\n- * @test\n- * @bug 8249674\n- * @summary  Nimbus JTree renderer properties persist across L&F changes\n- * @key headful\n- * @run main NimbusPropertiesDoNotImplUIResource\n- *\/\n-\n-public class NimbusPropertiesDoNotImplUIResource {\n-    private static final String[] defPropertyKeys = new String[] {\n-            \"Tree.leafIcon\", \"Tree.closedIcon\",\n-            \"Tree.openIcon\", \"Tree.selectionForeground\",\n-            \"Tree.textForeground\", \"Tree.selectionBackground\",\n-            \"Tree.textBackground\", \"Tree.selectionBorderColor\"};\n-    private static String failedKeys = null;\n-\n-    public static void main(String[] args) throws Exception {\n-        UIManager.LookAndFeelInfo[] installedLookAndFeels;\n-        installedLookAndFeels = UIManager.getInstalledLookAndFeels();\n-\n-        for (UIManager.LookAndFeelInfo LF : installedLookAndFeels) {\n-            try {\n-                UIManager.setLookAndFeel(LF.getClassName());\n-                failedKeys = null;\n-                for (String propertyKey : defPropertyKeys) {\n-                    verifyProperty(propertyKey);\n-                }\n-                if(failedKeys != null) {\n-                    throw new RuntimeException(\"JTree renderer Properties \" +\n-                            failedKeys + \" are not instance of UIResource for \"\n-                            + LF.getClassName());\n-                }\n-            } catch(UnsupportedLookAndFeelException e) {\n-                System.out.println(\"Note: LookAndFeel \" + LF.getClassName()\n-                        + \" is not supported on this configuration\");\n-            }\n-        }\n-\n-        \/\/Check that the both uiResource option true and false are working for\n-        \/\/getDerivedColor method of NimbusLookAndFeel\n-        UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n-        Color color1 = ((NimbusLookAndFeel)UIManager.getLookAndFeel())\n-                .getDerivedColor(\"text\", 0, 0, 0, 0, false);\n-        if(color1 instanceof UIResource) {\n-            throw new RuntimeException(\"color1 should not be instance of \" +\n-                    \"UIResource\");\n-        }\n-\n-        Color color2 = ((NimbusLookAndFeel)UIManager.getLookAndFeel())\n-                .getDerivedColor(\"text\", 0, 0, 0, 0, true);\n-        if(!(color2 instanceof UIResource)) {\n-            throw new RuntimeException(\"color2 should be instance of \" +\n-                    \"UIResource\");\n-        }\n-\n-    }\n-\n-    private static void verifyProperty(String propertyKey) {\n-        Object property = UIManager.get(propertyKey);\n-        if (property == null) {\n-            return;\n-        }\n-        if (!(property instanceof UIResource)) {\n-            if(failedKeys == null) {\n-                failedKeys = \":\" + propertyKey;\n-            } else {\n-                failedKeys += \",\" + propertyKey;\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/NimbusPropertiesDoNotImplUIResource.java","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8058704 6789980\n+ * @key headful\n+ * @summary  Verifies if Nimbus honor JTextPane and JEditorPane background color\n+ * @run main TestNimbusBGColor\n+ *\/\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+import javax.swing.JEditorPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.text.JTextComponent;\n+\n+public class TestNimbusBGColor {\n+\n+    static JFrame frame;\n+    static volatile Point pt;\n+    static volatile Rectangle bounds;\n+    static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        testTextPane();\n+        testEditorPane();\n+    }\n+\n+    private interface ComponentCreator<T extends JTextComponent> {\n+        T createComponent();\n+    }\n+\n+    private static void testTextPane() throws Exception {\n+        testComponent(JTextPane::new);\n+    }\n+\n+    private static void testEditorPane() throws Exception {\n+        testComponent(() -> {\n+            JEditorPane ep = new JEditorPane();\n+            ep.setContentType(\"text\/plain\");\n+            return ep;\n+        });\n+    }\n+\n+    private static void testComponent(ComponentCreator<? extends JTextComponent> creator)\n+            throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                try {\n+                    UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+                } catch (Exception checkedExceptionsPleaseDie) {\n+                    throw new RuntimeException(checkedExceptionsPleaseDie);\n+                }\n+                JTextComponent tc = creator.createComponent();\n+                tc.setEditable(false);\n+                tc.setForeground(Color.GREEN);\n+                tc.setBackground(Color.RED);\n+                tc.setText(\"This text should be green on red\");\n+\n+                frame = new JFrame(tc.getClass().getName());\n+                frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);\n+                frame.add(tc);\n+                frame.setSize(new Dimension(480, 360));\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pt = frame.getLocationOnScreen();\n+                bounds = frame.getBounds();\n+            });\n+            if (!(robot.getPixelColor(pt.x + bounds.width\/2,\n+                                      pt.y + bounds.height\/2)\n+                                .equals(Color.RED))) {\n+                throw new RuntimeException(\"bg Color not same as the color being set\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/TestNimbusBGColor.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -1156,0 +1156,8 @@\n+    static byte ROL_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) << (b & 7)) | ((((byte)a) & 0xFF) >>> (8 - (b & 7))));\n+    }\n+\n+    static byte ROR_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) >>> (b & 7)) | ((((byte)a) & 0xFF) << (8 - (b & 7))));\n+    }\n+\n@@ -2325,1 +2333,1 @@\n-    static void LSHLByte128VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHLByte128VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2343,1 +2351,1 @@\n-    static void LSHLByte128VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHLByte128VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2371,1 +2379,1 @@\n-    static void LSHRByte128VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHRByte128VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2389,1 +2397,1 @@\n-    static void LSHRByte128VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHRByte128VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2417,1 +2425,1 @@\n-    static void ASHRByte128VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void ASHRByte128VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2435,1 +2443,1 @@\n-    static void ASHRByte128VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void ASHRByte128VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2455,0 +2463,172 @@\n+\n+    static byte ROR(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte128VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte128VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte128VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte128VectorTests::ROR);\n+    }\n+\n+\n+    static byte ROL(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte128VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte128VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte128VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte128VectorTests::ROL);\n+    }\n+\n+\n+    static byte ROR_unary(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte128VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte128VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte128VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte128VectorTests::ROR_unary);\n+    }\n+\n+\n+    static byte ROL_unary(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte128VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte128VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte128VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte128VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1156,0 +1156,8 @@\n+    static byte ROL_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) << (b & 7)) | ((((byte)a) & 0xFF) >>> (8 - (b & 7))));\n+    }\n+\n+    static byte ROR_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) >>> (b & 7)) | ((((byte)a) & 0xFF) << (8 - (b & 7))));\n+    }\n+\n@@ -2325,1 +2333,1 @@\n-    static void LSHLByte256VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHLByte256VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2343,1 +2351,1 @@\n-    static void LSHLByte256VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHLByte256VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2371,1 +2379,1 @@\n-    static void LSHRByte256VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHRByte256VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2389,1 +2397,1 @@\n-    static void LSHRByte256VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHRByte256VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2417,1 +2425,1 @@\n-    static void ASHRByte256VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void ASHRByte256VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2435,1 +2443,1 @@\n-    static void ASHRByte256VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void ASHRByte256VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2455,0 +2463,172 @@\n+\n+    static byte ROR(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte256VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte256VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte256VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte256VectorTests::ROR);\n+    }\n+\n+\n+    static byte ROL(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte256VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte256VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte256VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte256VectorTests::ROL);\n+    }\n+\n+\n+    static byte ROR_unary(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte256VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte256VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte256VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte256VectorTests::ROR_unary);\n+    }\n+\n+\n+    static byte ROL_unary(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte256VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte256VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte256VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte256VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1156,0 +1156,8 @@\n+    static byte ROL_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) << (b & 7)) | ((((byte)a) & 0xFF) >>> (8 - (b & 7))));\n+    }\n+\n+    static byte ROR_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) >>> (b & 7)) | ((((byte)a) & 0xFF) << (8 - (b & 7))));\n+    }\n+\n@@ -2325,1 +2333,1 @@\n-    static void LSHLByte512VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHLByte512VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2343,1 +2351,1 @@\n-    static void LSHLByte512VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHLByte512VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2371,1 +2379,1 @@\n-    static void LSHRByte512VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHRByte512VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2389,1 +2397,1 @@\n-    static void LSHRByte512VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHRByte512VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2417,1 +2425,1 @@\n-    static void ASHRByte512VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void ASHRByte512VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2435,1 +2443,1 @@\n-    static void ASHRByte512VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void ASHRByte512VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2455,0 +2463,172 @@\n+\n+    static byte ROR(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte512VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte512VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte512VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte512VectorTests::ROR);\n+    }\n+\n+\n+    static byte ROL(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte512VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte512VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte512VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte512VectorTests::ROL);\n+    }\n+\n+\n+    static byte ROR_unary(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte512VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte512VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte512VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte512VectorTests::ROR_unary);\n+    }\n+\n+\n+    static byte ROL_unary(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte512VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte512VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte512VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte512VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1156,0 +1156,8 @@\n+    static byte ROL_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) << (b & 7)) | ((((byte)a) & 0xFF) >>> (8 - (b & 7))));\n+    }\n+\n+    static byte ROR_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) >>> (b & 7)) | ((((byte)a) & 0xFF) << (8 - (b & 7))));\n+    }\n+\n@@ -2325,1 +2333,1 @@\n-    static void LSHLByte64VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHLByte64VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2343,1 +2351,1 @@\n-    static void LSHLByte64VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHLByte64VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2371,1 +2379,1 @@\n-    static void LSHRByte64VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHRByte64VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2389,1 +2397,1 @@\n-    static void LSHRByte64VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHRByte64VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2417,1 +2425,1 @@\n-    static void ASHRByte64VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void ASHRByte64VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2435,1 +2443,1 @@\n-    static void ASHRByte64VectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void ASHRByte64VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2455,0 +2463,172 @@\n+\n+    static byte ROR(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte64VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte64VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte64VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte64VectorTests::ROR);\n+    }\n+\n+\n+    static byte ROL(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte64VectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Byte64VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte64VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Byte64VectorTests::ROL);\n+    }\n+\n+\n+    static byte ROR_unary(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByte64VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte64VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByte64VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte64VectorTests::ROR_unary);\n+    }\n+\n+\n+    static byte ROL_unary(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByte64VectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Byte64VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByte64VectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Byte64VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1161,0 +1161,8 @@\n+    static byte ROL_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) << (b & 7)) | ((((byte)a) & 0xFF) >>> (8 - (b & 7))));\n+    }\n+\n+    static byte ROR_scalar(byte a, byte b) {\n+        return (byte)(((((byte)a) & 0xFF) >>> (b & 7)) | ((((byte)a) & 0xFF) << (8 - (b & 7))));\n+    }\n+\n@@ -2330,1 +2338,1 @@\n-    static void LSHLByteMaxVectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHLByteMaxVectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2348,1 +2356,1 @@\n-    static void LSHLByteMaxVectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHLByteMaxVectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2376,1 +2384,1 @@\n-    static void LSHRByteMaxVectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void LSHRByteMaxVectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2394,1 +2402,1 @@\n-    static void LSHRByteMaxVectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void LSHRByteMaxVectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2422,1 +2430,1 @@\n-    static void ASHRByteMaxVectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+    static void ASHRByteMaxVectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n@@ -2440,1 +2448,1 @@\n-    static void ASHRByteMaxVectorTestsShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+    static void ASHRByteMaxVectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n@@ -2460,0 +2468,172 @@\n+\n+    static byte ROR(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByteMaxVectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, ByteMaxVectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByteMaxVectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, ByteMaxVectorTests::ROR);\n+    }\n+\n+\n+    static byte ROL(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByteMaxVectorTests(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, ByteMaxVectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByteMaxVectorTestsMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, ByteMaxVectorTests::ROL);\n+    }\n+\n+\n+    static byte ROR_unary(byte a, byte b) {\n+        return (byte)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void RORByteMaxVectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, ByteMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void RORByteMaxVectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, ByteMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+    static byte ROL_unary(byte a, byte b) {\n+        return (byte)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"byteBinaryOpProvider\")\n+    static void ROLByteMaxVectorTestsScalarShift(IntFunction<byte[]> fa, IntFunction<byte[]> fb) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, ByteMaxVectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"byteBinaryOpMaskProvider\")\n+    static void ROLByteMaxVectorTestsScalarShiftMasked(IntFunction<byte[]> fa, IntFunction<byte[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] b = fb.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, ByteMaxVectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1928,0 +1928,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1928,0 +1928,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1928,0 +1928,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1946,0 +1946,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1951,0 +1951,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1956,0 +1956,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1956,0 +1956,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1956,0 +1956,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1956,0 +1956,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1961,0 +1961,8 @@\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1116,0 +1116,8 @@\n+    static int ROL_scalar(int a, int b) {\n+        return Integer.rotateLeft(a, ((int)b));\n+    }\n+\n+    static int ROR_scalar(int a, int b) {\n+        return Integer.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2288,1 +2296,1 @@\n-    static void LSHLInt128VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHLInt128VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2306,1 +2314,1 @@\n-    static void LSHLInt128VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHLInt128VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2334,1 +2342,1 @@\n-    static void LSHRInt128VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHRInt128VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2352,1 +2360,1 @@\n-    static void LSHRInt128VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHRInt128VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2380,1 +2388,1 @@\n-    static void ASHRInt128VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void ASHRInt128VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2398,1 +2406,1 @@\n-    static void ASHRInt128VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void ASHRInt128VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2420,0 +2428,172 @@\n+\n+    static int ROR(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt128VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int128VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt128VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int128VectorTests::ROR);\n+    }\n+\n+\n+    static int ROL(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt128VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int128VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt128VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int128VectorTests::ROL);\n+    }\n+\n+\n+    static int ROR_unary(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt128VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int128VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt128VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int128VectorTests::ROR_unary);\n+    }\n+\n+\n+    static int ROL_unary(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt128VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int128VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt128VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int128VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1116,0 +1116,8 @@\n+    static int ROL_scalar(int a, int b) {\n+        return Integer.rotateLeft(a, ((int)b));\n+    }\n+\n+    static int ROR_scalar(int a, int b) {\n+        return Integer.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2288,1 +2296,1 @@\n-    static void LSHLInt256VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHLInt256VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2306,1 +2314,1 @@\n-    static void LSHLInt256VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHLInt256VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2334,1 +2342,1 @@\n-    static void LSHRInt256VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHRInt256VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2352,1 +2360,1 @@\n-    static void LSHRInt256VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHRInt256VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2380,1 +2388,1 @@\n-    static void ASHRInt256VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void ASHRInt256VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2398,1 +2406,1 @@\n-    static void ASHRInt256VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void ASHRInt256VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2420,0 +2428,172 @@\n+\n+    static int ROR(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt256VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int256VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt256VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int256VectorTests::ROR);\n+    }\n+\n+\n+    static int ROL(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt256VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int256VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt256VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int256VectorTests::ROL);\n+    }\n+\n+\n+    static int ROR_unary(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt256VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int256VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt256VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int256VectorTests::ROR_unary);\n+    }\n+\n+\n+    static int ROL_unary(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt256VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int256VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt256VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int256VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1116,0 +1116,8 @@\n+    static int ROL_scalar(int a, int b) {\n+        return Integer.rotateLeft(a, ((int)b));\n+    }\n+\n+    static int ROR_scalar(int a, int b) {\n+        return Integer.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2288,1 +2296,1 @@\n-    static void LSHLInt512VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHLInt512VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2306,1 +2314,1 @@\n-    static void LSHLInt512VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHLInt512VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2334,1 +2342,1 @@\n-    static void LSHRInt512VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHRInt512VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2352,1 +2360,1 @@\n-    static void LSHRInt512VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHRInt512VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2380,1 +2388,1 @@\n-    static void ASHRInt512VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void ASHRInt512VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2398,1 +2406,1 @@\n-    static void ASHRInt512VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void ASHRInt512VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2420,0 +2428,172 @@\n+\n+    static int ROR(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt512VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int512VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt512VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int512VectorTests::ROR);\n+    }\n+\n+\n+    static int ROL(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt512VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int512VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt512VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int512VectorTests::ROL);\n+    }\n+\n+\n+    static int ROR_unary(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt512VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int512VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt512VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int512VectorTests::ROR_unary);\n+    }\n+\n+\n+    static int ROL_unary(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt512VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int512VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt512VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int512VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1116,0 +1116,8 @@\n+    static int ROL_scalar(int a, int b) {\n+        return Integer.rotateLeft(a, ((int)b));\n+    }\n+\n+    static int ROR_scalar(int a, int b) {\n+        return Integer.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2288,1 +2296,1 @@\n-    static void LSHLInt64VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHLInt64VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2306,1 +2314,1 @@\n-    static void LSHLInt64VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHLInt64VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2334,1 +2342,1 @@\n-    static void LSHRInt64VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHRInt64VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2352,1 +2360,1 @@\n-    static void LSHRInt64VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHRInt64VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2380,1 +2388,1 @@\n-    static void ASHRInt64VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void ASHRInt64VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2398,1 +2406,1 @@\n-    static void ASHRInt64VectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void ASHRInt64VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2420,0 +2428,172 @@\n+\n+    static int ROR(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt64VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int64VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt64VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int64VectorTests::ROR);\n+    }\n+\n+\n+    static int ROL(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt64VectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Int64VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt64VectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Int64VectorTests::ROL);\n+    }\n+\n+\n+    static int ROR_unary(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORInt64VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int64VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORInt64VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int64VectorTests::ROR_unary);\n+    }\n+\n+\n+    static int ROL_unary(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLInt64VectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Int64VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLInt64VectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Int64VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1121,0 +1121,8 @@\n+    static int ROL_scalar(int a, int b) {\n+        return Integer.rotateLeft(a, ((int)b));\n+    }\n+\n+    static int ROR_scalar(int a, int b) {\n+        return Integer.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2293,1 +2301,1 @@\n-    static void LSHLIntMaxVectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHLIntMaxVectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2311,1 +2319,1 @@\n-    static void LSHLIntMaxVectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHLIntMaxVectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2339,1 +2347,1 @@\n-    static void LSHRIntMaxVectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void LSHRIntMaxVectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2357,1 +2365,1 @@\n-    static void LSHRIntMaxVectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void LSHRIntMaxVectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2385,1 +2393,1 @@\n-    static void ASHRIntMaxVectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+    static void ASHRIntMaxVectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n@@ -2403,1 +2411,1 @@\n-    static void ASHRIntMaxVectorTestsShift(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+    static void ASHRIntMaxVectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n@@ -2425,0 +2433,172 @@\n+\n+    static int ROR(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORIntMaxVectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, IntMaxVectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORIntMaxVectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, IntMaxVectorTests::ROR);\n+    }\n+\n+\n+    static int ROL(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLIntMaxVectorTests(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, IntMaxVectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLIntMaxVectorTestsMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                IntVector bv = IntVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, IntMaxVectorTests::ROL);\n+    }\n+\n+\n+    static int ROR_unary(int a, int b) {\n+        return (int)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void RORIntMaxVectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, IntMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void RORIntMaxVectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, IntMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+    static int ROL_unary(int a, int b) {\n+        return (int)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"intBinaryOpProvider\")\n+    static void ROLIntMaxVectorTestsScalarShift(IntFunction<int[]> fa, IntFunction<int[]> fb) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, IntMaxVectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"intBinaryOpMaskProvider\")\n+    static void ROLIntMaxVectorTestsScalarShiftMasked(IntFunction<int[]> fa, IntFunction<int[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] b = fb.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, IntMaxVectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1138,0 +1138,8 @@\n+    static long ROL_scalar(long a, long b) {\n+        return Long.rotateLeft(a, ((int)b));\n+    }\n+\n+    static long ROR_scalar(long a, long b) {\n+        return Long.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2310,1 +2318,1 @@\n-    static void LSHLLong128VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHLLong128VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2328,1 +2336,1 @@\n-    static void LSHLLong128VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHLLong128VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2356,1 +2364,1 @@\n-    static void LSHRLong128VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHRLong128VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2374,1 +2382,1 @@\n-    static void LSHRLong128VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHRLong128VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2402,1 +2410,1 @@\n-    static void ASHRLong128VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void ASHRLong128VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2420,1 +2428,1 @@\n-    static void ASHRLong128VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void ASHRLong128VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2442,0 +2450,172 @@\n+\n+    static long ROR(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong128VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long128VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong128VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long128VectorTests::ROR);\n+    }\n+\n+\n+    static long ROL(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong128VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long128VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong128VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long128VectorTests::ROL);\n+    }\n+\n+\n+    static long ROR_unary(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong128VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long128VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong128VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long128VectorTests::ROR_unary);\n+    }\n+\n+\n+    static long ROL_unary(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong128VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long128VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong128VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long128VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1138,0 +1138,8 @@\n+    static long ROL_scalar(long a, long b) {\n+        return Long.rotateLeft(a, ((int)b));\n+    }\n+\n+    static long ROR_scalar(long a, long b) {\n+        return Long.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2310,1 +2318,1 @@\n-    static void LSHLLong256VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHLLong256VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2328,1 +2336,1 @@\n-    static void LSHLLong256VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHLLong256VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2356,1 +2364,1 @@\n-    static void LSHRLong256VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHRLong256VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2374,1 +2382,1 @@\n-    static void LSHRLong256VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHRLong256VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2402,1 +2410,1 @@\n-    static void ASHRLong256VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void ASHRLong256VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2420,1 +2428,1 @@\n-    static void ASHRLong256VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void ASHRLong256VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2442,0 +2450,172 @@\n+\n+    static long ROR(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong256VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long256VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong256VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long256VectorTests::ROR);\n+    }\n+\n+\n+    static long ROL(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong256VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long256VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong256VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long256VectorTests::ROL);\n+    }\n+\n+\n+    static long ROR_unary(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong256VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long256VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong256VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long256VectorTests::ROR_unary);\n+    }\n+\n+\n+    static long ROL_unary(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong256VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long256VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong256VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long256VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1138,0 +1138,8 @@\n+    static long ROL_scalar(long a, long b) {\n+        return Long.rotateLeft(a, ((int)b));\n+    }\n+\n+    static long ROR_scalar(long a, long b) {\n+        return Long.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2310,1 +2318,1 @@\n-    static void LSHLLong512VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHLLong512VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2328,1 +2336,1 @@\n-    static void LSHLLong512VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHLLong512VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2356,1 +2364,1 @@\n-    static void LSHRLong512VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHRLong512VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2374,1 +2382,1 @@\n-    static void LSHRLong512VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHRLong512VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2402,1 +2410,1 @@\n-    static void ASHRLong512VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void ASHRLong512VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2420,1 +2428,1 @@\n-    static void ASHRLong512VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void ASHRLong512VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2442,0 +2450,172 @@\n+\n+    static long ROR(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong512VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long512VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong512VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long512VectorTests::ROR);\n+    }\n+\n+\n+    static long ROL(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong512VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long512VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong512VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long512VectorTests::ROL);\n+    }\n+\n+\n+    static long ROR_unary(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong512VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long512VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong512VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long512VectorTests::ROR_unary);\n+    }\n+\n+\n+    static long ROL_unary(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong512VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long512VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong512VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long512VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1138,0 +1138,8 @@\n+    static long ROL_scalar(long a, long b) {\n+        return Long.rotateLeft(a, ((int)b));\n+    }\n+\n+    static long ROR_scalar(long a, long b) {\n+        return Long.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2310,1 +2318,1 @@\n-    static void LSHLLong64VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHLLong64VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2328,1 +2336,1 @@\n-    static void LSHLLong64VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHLLong64VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2356,1 +2364,1 @@\n-    static void LSHRLong64VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHRLong64VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2374,1 +2382,1 @@\n-    static void LSHRLong64VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHRLong64VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2402,1 +2410,1 @@\n-    static void ASHRLong64VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void ASHRLong64VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2420,1 +2428,1 @@\n-    static void ASHRLong64VectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void ASHRLong64VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2442,0 +2450,172 @@\n+\n+    static long ROR(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong64VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long64VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong64VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long64VectorTests::ROR);\n+    }\n+\n+\n+    static long ROL(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong64VectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Long64VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong64VectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Long64VectorTests::ROL);\n+    }\n+\n+\n+    static long ROR_unary(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLong64VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long64VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLong64VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long64VectorTests::ROR_unary);\n+    }\n+\n+\n+    static long ROL_unary(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLong64VectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Long64VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLong64VectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Long64VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1143,0 +1143,8 @@\n+    static long ROL_scalar(long a, long b) {\n+        return Long.rotateLeft(a, ((int)b));\n+    }\n+\n+    static long ROR_scalar(long a, long b) {\n+        return Long.rotateRight(a, ((int)b));\n+    }\n+\n@@ -2315,1 +2323,1 @@\n-    static void LSHLLongMaxVectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHLLongMaxVectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2333,1 +2341,1 @@\n-    static void LSHLLongMaxVectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHLLongMaxVectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2361,1 +2369,1 @@\n-    static void LSHRLongMaxVectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void LSHRLongMaxVectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2379,1 +2387,1 @@\n-    static void LSHRLongMaxVectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void LSHRLongMaxVectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2407,1 +2415,1 @@\n-    static void ASHRLongMaxVectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+    static void ASHRLongMaxVectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n@@ -2425,1 +2433,1 @@\n-    static void ASHRLongMaxVectorTestsShift(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+    static void ASHRLongMaxVectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n@@ -2447,0 +2455,172 @@\n+\n+    static long ROR(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLongMaxVectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, LongMaxVectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLongMaxVectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, LongMaxVectorTests::ROR);\n+    }\n+\n+\n+    static long ROL(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLongMaxVectorTests(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, LongMaxVectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLongMaxVectorTestsMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                LongVector bv = LongVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, LongMaxVectorTests::ROL);\n+    }\n+\n+\n+    static long ROR_unary(long a, long b) {\n+        return (long)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void RORLongMaxVectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, LongMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void RORLongMaxVectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, LongMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+    static long ROL_unary(long a, long b) {\n+        return (long)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"longBinaryOpProvider\")\n+    static void ROLLongMaxVectorTestsScalarShift(IntFunction<long[]> fa, IntFunction<long[]> fb) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, LongMaxVectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"longBinaryOpMaskProvider\")\n+    static void ROLLongMaxVectorTestsScalarShiftMasked(IntFunction<long[]> fa, IntFunction<long[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] b = fb.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, LongMaxVectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1146,0 +1146,8 @@\n+    static short ROL_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) << (b & 15)) | ((((short)a) & 0xFFFF) >>> (16 - (b & 15))));\n+    }\n+\n+    static short ROR_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) >>> (b & 15)) | ((((short)a) & 0xFFFF) << (16 - (b & 15))));\n+    }\n+\n@@ -2317,1 +2325,1 @@\n-    static void LSHLShort128VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHLShort128VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2335,1 +2343,1 @@\n-    static void LSHLShort128VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHLShort128VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2363,1 +2371,1 @@\n-    static void LSHRShort128VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHRShort128VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2381,1 +2389,1 @@\n-    static void LSHRShort128VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHRShort128VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2409,1 +2417,1 @@\n-    static void ASHRShort128VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void ASHRShort128VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2427,1 +2435,1 @@\n-    static void ASHRShort128VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void ASHRShort128VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2444,0 +2452,172 @@\n+\n+\n+    static short ROR(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort128VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short128VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort128VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short128VectorTests::ROR);\n+    }\n+\n+\n+    static short ROL(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort128VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short128VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort128VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short128VectorTests::ROL);\n+    }\n+\n+\n+    static short ROR_unary(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort128VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short128VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort128VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short128VectorTests::ROR_unary);\n+    }\n+\n+\n+    static short ROL_unary(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort128VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short128VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort128VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short128VectorTests::ROL_unary);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1146,0 +1146,8 @@\n+    static short ROL_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) << (b & 15)) | ((((short)a) & 0xFFFF) >>> (16 - (b & 15))));\n+    }\n+\n+    static short ROR_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) >>> (b & 15)) | ((((short)a) & 0xFFFF) << (16 - (b & 15))));\n+    }\n+\n@@ -2317,1 +2325,1 @@\n-    static void LSHLShort256VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHLShort256VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2335,1 +2343,1 @@\n-    static void LSHLShort256VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHLShort256VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2363,1 +2371,1 @@\n-    static void LSHRShort256VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHRShort256VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2381,1 +2389,1 @@\n-    static void LSHRShort256VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHRShort256VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2409,1 +2417,1 @@\n-    static void ASHRShort256VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void ASHRShort256VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2427,1 +2435,1 @@\n-    static void ASHRShort256VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void ASHRShort256VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2444,0 +2452,172 @@\n+\n+\n+    static short ROR(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort256VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short256VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort256VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short256VectorTests::ROR);\n+    }\n+\n+\n+    static short ROL(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort256VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short256VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort256VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short256VectorTests::ROL);\n+    }\n+\n+\n+    static short ROR_unary(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort256VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short256VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort256VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short256VectorTests::ROR_unary);\n+    }\n+\n+\n+    static short ROL_unary(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort256VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short256VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort256VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short256VectorTests::ROL_unary);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1146,0 +1146,8 @@\n+    static short ROL_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) << (b & 15)) | ((((short)a) & 0xFFFF) >>> (16 - (b & 15))));\n+    }\n+\n+    static short ROR_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) >>> (b & 15)) | ((((short)a) & 0xFFFF) << (16 - (b & 15))));\n+    }\n+\n@@ -2317,1 +2325,1 @@\n-    static void LSHLShort512VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHLShort512VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2335,1 +2343,1 @@\n-    static void LSHLShort512VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHLShort512VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2363,1 +2371,1 @@\n-    static void LSHRShort512VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHRShort512VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2381,1 +2389,1 @@\n-    static void LSHRShort512VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHRShort512VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2409,1 +2417,1 @@\n-    static void ASHRShort512VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void ASHRShort512VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2427,1 +2435,1 @@\n-    static void ASHRShort512VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void ASHRShort512VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2444,0 +2452,172 @@\n+\n+\n+    static short ROR(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort512VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short512VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort512VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short512VectorTests::ROR);\n+    }\n+\n+\n+    static short ROL(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort512VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short512VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort512VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short512VectorTests::ROL);\n+    }\n+\n+\n+    static short ROR_unary(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort512VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short512VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort512VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short512VectorTests::ROR_unary);\n+    }\n+\n+\n+    static short ROL_unary(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort512VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short512VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort512VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short512VectorTests::ROL_unary);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1146,0 +1146,8 @@\n+    static short ROL_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) << (b & 15)) | ((((short)a) & 0xFFFF) >>> (16 - (b & 15))));\n+    }\n+\n+    static short ROR_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) >>> (b & 15)) | ((((short)a) & 0xFFFF) << (16 - (b & 15))));\n+    }\n+\n@@ -2317,1 +2325,1 @@\n-    static void LSHLShort64VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHLShort64VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2335,1 +2343,1 @@\n-    static void LSHLShort64VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHLShort64VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2363,1 +2371,1 @@\n-    static void LSHRShort64VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHRShort64VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2381,1 +2389,1 @@\n-    static void LSHRShort64VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHRShort64VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2409,1 +2417,1 @@\n-    static void ASHRShort64VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void ASHRShort64VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2427,1 +2435,1 @@\n-    static void ASHRShort64VectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void ASHRShort64VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2445,0 +2453,172 @@\n+\n+    static short ROR(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort64VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short64VectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort64VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short64VectorTests::ROR);\n+    }\n+\n+\n+    static short ROL(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort64VectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, Short64VectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort64VectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, Short64VectorTests::ROL);\n+    }\n+\n+\n+    static short ROR_unary(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShort64VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short64VectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShort64VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short64VectorTests::ROR_unary);\n+    }\n+\n+\n+    static short ROL_unary(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShort64VectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, Short64VectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShort64VectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, Short64VectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -1151,0 +1151,8 @@\n+    static short ROL_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) << (b & 15)) | ((((short)a) & 0xFFFF) >>> (16 - (b & 15))));\n+    }\n+\n+    static short ROR_scalar(short a, short b) {\n+        return (short)(((((short)a) & 0xFFFF) >>> (b & 15)) | ((((short)a) & 0xFFFF) << (16 - (b & 15))));\n+    }\n+\n@@ -2322,1 +2330,1 @@\n-    static void LSHLShortMaxVectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHLShortMaxVectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2340,1 +2348,1 @@\n-    static void LSHLShortMaxVectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHLShortMaxVectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2368,1 +2376,1 @@\n-    static void LSHRShortMaxVectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void LSHRShortMaxVectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2386,1 +2394,1 @@\n-    static void LSHRShortMaxVectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void LSHRShortMaxVectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2414,1 +2422,1 @@\n-    static void ASHRShortMaxVectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+    static void ASHRShortMaxVectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n@@ -2432,1 +2440,1 @@\n-    static void ASHRShortMaxVectorTestsShift(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+    static void ASHRShortMaxVectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n@@ -2450,0 +2458,172 @@\n+\n+    static short ROR(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShortMaxVectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, ShortMaxVectorTests::ROR);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShortMaxVectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROR, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, ShortMaxVectorTests::ROR);\n+    }\n+\n+\n+    static short ROL(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShortMaxVectorTests(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, ShortMaxVectorTests::ROL);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShortMaxVectorTestsMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+                av.lanewise(VectorOperators.ROL, bv, vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertArraysEquals(r, a, b, mask, ShortMaxVectorTests::ROL);\n+    }\n+\n+\n+    static short ROR_unary(short a, short b) {\n+        return (short)(ROR_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void RORShortMaxVectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, ShortMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void RORShortMaxVectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROR, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, ShortMaxVectorTests::ROR_unary);\n+    }\n+\n+\n+    static short ROL_unary(short a, short b) {\n+        return (short)(ROL_scalar(a,b));\n+    }\n+\n+    @Test(dataProvider = \"shortBinaryOpProvider\")\n+    static void ROLShortMaxVectorTestsScalarShift(IntFunction<short[]> fa, IntFunction<short[]> fb) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i]).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, ShortMaxVectorTests::ROL_unary);\n+    }\n+\n+\n+\n+    @Test(dataProvider = \"shortBinaryOpMaskProvider\")\n+    static void ROLShortMaxVectorTestsScalarShiftMasked(IntFunction<short[]> fa, IntFunction<short[]> fb,\n+                                          IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] b = fb.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.ROL, (int)b[i], vmask).intoArray(r, i);\n+            }\n+        }\n+\n+        assertShiftArraysEquals(r, a, b, mask, ShortMaxVectorTests::ROL_unary);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":186,"deletions":6,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-    local kernel_escaped=$(echo -e \"$kernel\" | tr '\\n' '|')\n+    local kernel_escaped=$(echo -e \"$kernel\" | tr '\\n' '`')\n@@ -104,1 +104,1 @@\n-    cat ${filename}.current1 | tr '|' \"\\n\" > ${filename}.current\n+    cat ${filename}.current1 | tr '`' \"\\n\" > ${filename}.current\n@@ -159,1 +159,1 @@\n-        local kernel_smoke_escaped=$(echo -e \"$kernel_smoke\" | tr '\\n' '|')\n+        local kernel_smoke_escaped=$(echo -e \"$kernel_smoke\" | tr '\\n' '`')\n@@ -161,1 +161,1 @@\n-        cat ${filename}.scurrent1 | tr '|' \"\\n\" > ${filename}.scurrent\n+        cat ${filename}.scurrent1 | tr '`' \"\\n\" > ${filename}.scurrent\n@@ -448,0 +448,4 @@\n+gen_binary_alu_op \"ROR\" \"ROR_scalar(a,b)\" \"BITWISE\"\n+gen_binary_alu_op \"ROL\" \"ROL_scalar(a,b)\" \"BITWISE\"\n+gen_shift_cst_op  \"ROR\" \"ROR_scalar(a,b)\" \"BITWISE\"\n+gen_shift_cst_op  \"ROL\" \"ROL_scalar(a,b)\" \"BITWISE\"\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-    static void [[TEST]]$vectorteststype$Shift(IntFunction<$type$[]> fa, IntFunction<$type$[]> fb,\n+    static void [[TEST]]$vectorteststype$ScalarShiftMasked(IntFunction<$type$[]> fa, IntFunction<$type$[]> fb,\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Shift-Masked-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-    static void [[TEST]]$vectorteststype$Shift(IntFunction<$type$[]> fa, IntFunction<$type$[]> fb) {\n+    static void [[TEST]]$vectorteststype$ScalarShift(IntFunction<$type$[]> fa, IntFunction<$type$[]> fb) {\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Shift-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1386,0 +1386,24 @@\n+\n+    static $type$ ROL_scalar($type$ a, $type$ b) {\n+#if[intOrLong]\n+        return $Wideboxtype$.rotateLeft(a, ((int)b));\n+#else[intOrLong]\n+#if[short]\n+        return (short)(((((short)a) & 0xFFFF) << (b & 15)) | ((((short)a) & 0xFFFF) >>> (16 - (b & 15))));\n+#else[short]\n+        return (byte)(((((byte)a) & 0xFF) << (b & 7)) | ((((byte)a) & 0xFF) >>> (8 - (b & 7))));\n+#end[short]\n+#end[intOrLong]\n+    }\n+\n+    static $type$ ROR_scalar($type$ a, $type$ b) {\n+#if[intOrLong]\n+        return $Wideboxtype$.rotateRight(a, ((int)b));\n+#else[intOrLong]\n+#if[short]\n+        return (short)(((((short)a) & 0xFFFF) >>> (b & 15)) | ((((short)a) & 0xFFFF) << (16 - (b & 15))));\n+#else[short]\n+        return (byte)(((((byte)a) & 0xFF) >>> (b & 7)) | ((((byte)a) & 0xFF) << (8 - (b & 7))));\n+#end[short]\n+#end[intOrLong]\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key cgroups\n+ * @summary Test JDK Metrics class when running inside a docker container with limited pids\n+ * @bug 8266490\n+ * @requires docker.support\n+ * @library \/test\/lib\n+ * @build TestPidsLimit\n+ * @run driver TestPidsLimit\n+ *\/\n+import java.util.ArrayList;\n+import java.util.List;\n+import jdk.test.lib.containers.docker.Common;\n+import jdk.test.lib.containers.docker.DockerRunOptions;\n+import jdk.test.lib.containers.docker.DockerTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.Asserts;\n+\n+public class TestPidsLimit {\n+    private static final String imageName = Common.imageName(\"pids\");\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!DockerTestUtils.canTestDocker()) {\n+            return;\n+        }\n+\n+        DockerTestUtils.buildJdkDockerImage(imageName, \"Dockerfile-BasicTest\", \"jdk-docker\");\n+\n+        try {\n+            testPidsLimit(\"1000\");\n+            testPidsLimit(\"2000\");\n+            testPidsLimit(\"Unlimited\");\n+        } finally {\n+            if (!DockerTestUtils.RETAIN_IMAGE_AFTER_TEST) {\n+                DockerTestUtils.removeDockerImage(imageName);\n+            }\n+        }\n+    }\n+\n+    private static void checkResult(List<String> lines, String lineMarker, String expectedValue) {\n+        boolean lineMarkerFound = false;\n+\n+        for (String line : lines) {\n+            if (line.contains(\"WARNING: Your kernel does not support pids limit capabilities\")) {\n+                System.out.println(\"Docker pids limitation seems not to work, avoiding check\");\n+                return;\n+            }\n+\n+            if (line.contains(lineMarker)) {\n+                lineMarkerFound = true;\n+                String[] parts = line.split(\":\");\n+                System.out.println(\"DEBUG: line = \" + line);\n+                System.out.println(\"DEBUG: parts.length = \" + parts.length);\n+\n+                Asserts.assertEquals(parts.length, 2);\n+                String actual = parts[1].replaceAll(\"\\\\s\",\"\");\n+                \/\/ Unlimited pids leads on some setups not to \"max\" in the output, but to a high number\n+                if (expectedValue.equals(\"Unlimited\")) {\n+                    if (actual.equals(\"Unlimited\")) {\n+                        System.out.println(\"Found expected value for unlimited pids.\");\n+                    } else {\n+                        try {\n+                            int ai = Integer.parseInt(actual);\n+                            if (ai > 20000) {\n+                                System.out.println(\"Limit value \" + ai + \" got accepted as unlimited, log line was \" + line);\n+                            } else {\n+                                throw new RuntimeException(\"Limit value \" + ai + \" is not accepted as unlimited, log line was \" + line);\n+                            }\n+                        } catch (NumberFormatException ex) {\n+                            throw new RuntimeException(\"Could not convert \" + actual + \" to an integer, log line was \" + line);\n+                        }\n+                    }\n+                } else {\n+                    Asserts.assertEquals(actual, expectedValue);\n+                }\n+                break;\n+            }\n+        }\n+        Asserts.assertTrue(lineMarkerFound);\n+    }\n+\n+    private static void testPidsLimit(String pidsLimit) throws Exception {\n+        Common.logNewTestCase(\"testPidsLimit (limit: \" + pidsLimit + \")\");\n+        DockerRunOptions opts = Common.newOptsShowSettings(imageName);\n+        if (pidsLimit.equals(\"Unlimited\")) {\n+            opts.addDockerOpts(\"--pids-limit=-1\");\n+        } else {\n+            opts.addDockerOpts(\"--pids-limit=\"+pidsLimit);\n+        }\n+\n+        OutputAnalyzer out = DockerTestUtils.dockerRunJava(opts);\n+        out.shouldHaveExitValue(0);\n+        \/\/ some docker enviroments do not have the pids limit capabilities\n+        String sdr = out.getOutput();\n+        if (sdr.contains(\"WARNING: Your kernel does not support pids limit capabilities\")) {\n+            System.out.println(\"Docker pids limitation seems not to work, avoiding check\");\n+        } else {\n+            List<String> lines = new ArrayList<>();\n+            sdr.lines().forEach(s -> lines.add(s));\n+            checkResult(lines, \"Maximum Processes Limit: \", pidsLimit);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/TestPidsLimit.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -66,2 +66,2 @@\n-            Events.assertField(e, \"onOutOfMemoryError\").equals(false);\n-            Events.assertField(e, \"size\").equals(Files.size(path));\n+            Events.assertField(e, \"onOutOfMemoryError\").equal(false);\n+            Events.assertField(e, \"size\").equal(Files.size(path));\n","filename":"test\/jdk\/jdk\/jfr\/event\/diagnostics\/TestHeapDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Iterator;\n@@ -121,0 +122,12 @@\n+\n+    public static String readFilename(OutputAnalyzer output) throws Exception {\n+        Iterator<String> it = output.asLines().iterator();\n+        while (it.hasNext()) {\n+            String line = it.next();\n+            if (line.contains(\"written to\")) {\n+                line = it.next(); \/\/ blank line\n+                return it.next();\n+            }\n+        }\n+        throw new Exception(\"Could not find filename of dumped recording.\");\n+    }\n","filename":"test\/jdk\/jdk\/jfr\/jcmd\/JcmdHelper.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jfr.jcmd;\n+\n+import java.io.File;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.jfr.FileHelper;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\/**\n+ * @test\n+ * @summary The test verifies JFR.start\/dump\/stop commands\n+ * @key jfr\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib \/test\/jdk\n+ * @run main\/othervm jdk.jfr.jcmd.TestFilenameExpansion\n+ *\/\n+public class TestFilenameExpansion {\n+\n+    public static void main(String[] args) throws Exception {\n+        String pid = Long.toString(ProcessHandle.current().pid());\n+        String name = \"output_%p_%t_%%.jfr\";\n+        String pattern = \"output_\" + pid + \"_\" + \"\\\\d{4}_\\\\d{2}_\\\\d{2}_\\\\d{2}_\\\\d{2}_\\\\d{2}\" + \"_%\\\\.jfr\";\n+\n+        JcmdHelper.jcmd(\"JFR.start name=test\");\n+        String filename = JcmdHelper.readFilename(JcmdHelper.jcmd(\"JFR.dump name=test filename=\" + name));\n+        File file = new File(filename);\n+        Asserts.assertTrue(file.exists(), file.getAbsolutePath() + \" does not exist\");\n+        Asserts.assertTrue(file.isFile(), file.getAbsolutePath() + \" is not a file\");\n+        Asserts.assertTrue(Pattern.compile(pattern).matcher(filename).find());\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/jcmd\/TestFilenameExpansion.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Iterator;\n@@ -63,1 +62,1 @@\n-        verifyFile(readFilename(output), null);\n+        verifyFile(JcmdHelper.readFilename(output), null);\n@@ -68,1 +67,1 @@\n-        verifyFile(readFilename(output), r.getId());\n+        verifyFile(JcmdHelper.readFilename(output), r.getId());\n@@ -74,1 +73,1 @@\n-        String filename = readFilename(output);\n+        String filename = JcmdHelper.readFilename(output);\n@@ -82,1 +81,1 @@\n-        String filename = readFilename(output);\n+        String filename = JcmdHelper.readFilename(output);\n@@ -101,12 +100,0 @@\n-\n-    private static String readFilename(OutputAnalyzer output) throws Exception {\n-        Iterator<String> it = output.asLines().iterator();\n-        while (it.hasNext()) {\n-            String line = it.next();\n-            if (line.contains(\"written to\")) {\n-                line = it.next(); \/\/ blank line\n-                return it.next();\n-            }\n-        }\n-        throw new Exception(\"Could not find filename of dumped recording.\");\n-    }\n","filename":"test\/jdk\/jdk\/jfr\/jcmd\/TestJcmdDumpGeneratedFilename.java","additions":4,"deletions":17,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+import java.util.zip.CRC32;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+\n+import static org.testng.Assert.assertThrows;\n+import static org.testng.Assert.assertTrue;\n+\/**\n+ * @test\n+ * @bug 8251329\n+ * @summary Excercise Zip FS with \".\" or \"..\" in a Zip Entry name\n+ * @modules jdk.zipfs\n+ * @run testng\/othervm HasDotDotTest\n+ *\/\n+public class HasDotDotTest {\n+    \/\/ Zip file to be created\n+    private static final Path ZIPFILE = Path.of(\"zipfsDotDotTest.zip\");\n+    \/\/ Data for Zip entries\n+    private static final byte[] ENTRY_DATA =\n+            \"Tennis Anyone\".getBytes(StandardCharsets.UTF_8);\n+    \/\/ Display output\n+    private static final boolean DEBUG = false;\n+\n+    \/**\n+     * DataProvider containing Zip entry names which should result in an IOException\n+     * @return Array of Zip entry names\n+     *\/\n+    @DataProvider\n+    private Object[][] checkForDotOrDotDotPaths() {\n+        return new Object[][]{\n+                {\"\/.\/foo\"},\n+                {\"\/..\/foo\"},\n+                {\"\/..\/foo\/..\"},\n+                {\"\/foo\/..\"},\n+                {\"\/foo\/.\"},\n+                {\"\/..\"},\n+                {\"\/.\"},\n+                {\"\/.foo\/.\/\"},\n+                {\"\/..\/.\/\"},\n+        };\n+    }\n+\n+    \/\/ Zip entry names to create a Zip file with for validating they are not\n+    \/\/ interpreted as a \".\" or \"..\" entry\n+    private final String[] VALID_PATHS =\n+            {\"\/foo.txt\", \"\/..foo.txt\", \"\/.foo.txt\", \"\/.foo\/bar.txt\", \"\/foo\/bar.txt\"};\n+    \/\/ Paths to be returned from Files::walk via Zip FS\n+    private final String[] EXPECTED_PATHS =\n+            {\"\/\", \"\/..foo.txt\", \"\/foo.txt\", \"\/.foo.txt\", \"\/.foo\",\n+                    \"\/.foo\/bar.txt\", \"\/foo\/bar.txt\", \"\/foo\"};\n+\n+    \/**\n+     * Creates a Zip file\n+     * @param zip path for Zip to be created\n+     * @param entries  the entries to add to the Zip file\n+     * @throws IOException  if an error occurs\n+     *\/\n+    private static void createZip(Path zip, String... entries) throws IOException {\n+        try (var os = Files.newOutputStream(zip);\n+             ZipOutputStream zos = new ZipOutputStream(os)) {\n+            for (var e : entries) {\n+                var ze = new ZipEntry(e);\n+                var crc = new CRC32();\n+                ze.setMethod(ZipEntry.STORED);\n+                crc.update(ENTRY_DATA);\n+                ze.setCrc(crc.getValue());\n+                ze.setSize(ENTRY_DATA.length);\n+                zos.putNextEntry(ze);\n+                zos.write(ENTRY_DATA);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Test to validate an IOException is thrown when opening a Zip file using\n+     * Zip FS and the path contains a \".\" or \"..\"\n+     * @param path\n+     * @throws IOException\n+     *\/\n+    @Test(dataProvider = \"checkForDotOrDotDotPaths\")\n+    public void hasDotOrDotDotTest(String path) throws IOException {\n+        if (DEBUG) {\n+            System.out.printf(\"Validating entry: %s%n\", path);\n+        }\n+        Files.deleteIfExists(ZIPFILE);\n+        createZip(ZIPFILE, path);\n+        assertThrows(IOException.class, () ->\n+                FileSystems.newFileSystem(ZIPFILE, Map.of()));\n+        Files.deleteIfExists(ZIPFILE);\n+    }\n+\n+    \/**\n+     * Validate that an entry with a name containing a \".\" or \"..\" can be\n+     * accessed via Files::walk\n+     * @throws IOException if an error occurs\n+     *\/\n+    @Test\n+    public void validPaths() throws IOException {\n+        Files.deleteIfExists(ZIPFILE);\n+        createZip(ZIPFILE, VALID_PATHS);\n+        \/*\n+          Walk through the Zip file and collect the Zip FS entries\n+         *\/\n+        try (FileSystem zipfs = FileSystems.newFileSystem(ZIPFILE)) {\n+            Path zipRoot = zipfs.getPath(\"\/\");\n+            try (Stream<Path> files = Files.walk(zipRoot, Integer.MAX_VALUE)) {\n+                var entries = files.map(Path::toString)\n+                        .sorted()\n+                        .toArray(String[]::new);\n+                if (DEBUG) {\n+                    for (String zipEntry : entries) {\n+                        System.out.println(zipEntry);\n+                    }\n+                }\n+                Arrays.sort(EXPECTED_PATHS);\n+                assertTrue(Arrays.equals(entries, EXPECTED_PATHS));\n+            }\n+        }\n+        Files.deleteIfExists(ZIPFILE);\n+    }\n+}\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/HasDotDotTest.java","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * @test\n+ * @bug 8190753 8011146\n+ * @summary Verify that using zip filesystem for opening an outputstream for a zip entry whose\n+ * compressed size is large, doesn't run into \"Negative initial size\" exception\n+ * @run testng\/manual\/othervm LargeCompressedEntrySizeTest\n+ *\/\n+public class LargeCompressedEntrySizeTest {\n+\n+    private static final String LARGE_FILE_NAME = \"LargeZipEntry.txt\";\n+    private static final String ZIP_FILE_NAME = \"8190753-test-compressed-size.zip\";\n+\n+    @BeforeMethod\n+    public void setUp() throws IOException {\n+        deleteFiles();\n+    }\n+\n+    @AfterMethod\n+    public void tearDown() throws IOException {\n+        deleteFiles();\n+    }\n+\n+    \/**\n+     * Delete the files created for use by the test\n+     *\n+     * @throws IOException if an error occurs deleting the files\n+     *\/\n+    private static void deleteFiles() throws IOException {\n+        Files.deleteIfExists(Path.of(ZIP_FILE_NAME));\n+    }\n+\n+\n+    \/**\n+     * Using zip filesystem, creates a zip file and writes out a zip entry whose compressed size is\n+     * expected to be greater than 2gb.\n+     *\/\n+    @Test\n+    public void testLargeCompressedSizeWithZipFS() throws Exception {\n+        final Path zipFile = Path.of(ZIP_FILE_NAME);\n+        final long largeEntrySize = 6L * 1024L * 1024L * 1024L; \/\/ large value which exceeds Integer.MAX_VALUE\n+        try (FileSystem fs = FileSystems.newFileSystem(zipFile, Collections.singletonMap(\"create\", \"true\"))) {\n+            try (OutputStream os = Files.newOutputStream(fs.getPath(LARGE_FILE_NAME))) {\n+                long remaining = largeEntrySize;\n+                \/\/ create a chunk of random bytes which we keep writing out\n+                final int chunkSize = 102400;\n+                final byte[] chunk = new byte[chunkSize];\n+                new Random().nextBytes(chunk);\n+                final long start = System.currentTimeMillis();\n+                for (long l = 0; l < largeEntrySize; l += chunkSize) {\n+                    final int numToWrite = (int) Math.min(remaining, chunkSize);\n+                    os.write(chunk, 0, numToWrite);\n+                    remaining -= numToWrite;\n+                }\n+                System.out.println(\"Took \" + TimeUnit.SECONDS.toSeconds(System.currentTimeMillis() - start)\n+                        + \" seconds to generate entry of size \" + largeEntrySize);\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/LargeCompressedEntrySizeTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,140 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Map;\n+import java.util.Random;\n+\n+\n+\/**\n+ * @test\n+ * @summary Verify that the outputstream created for zip file entries, through the ZipFileSystem\n+ * works fine for varying sizes of the zip file entries\n+ * @bug 8190753 8011146\n+ * @run testng\/timeout=300 ZipFSOutputStreamTest\n+ *\/\n+public class ZipFSOutputStreamTest {\n+    \/\/ List of files to be added to the ZIP file along with their sizes in bytes\n+    private static final Map<String, Long> ZIP_ENTRIES = Map.of(\n+            \"f1\", Integer.MAX_VALUE + 1L, \/\/ a value which when cast to an integer, becomes a negative value\n+            \"f2\", 25L * 1024L * 1024L, \/\/ 25 MB\n+            \"d1\/f3\", 1234L,\n+            \"d1\/d2\/f4\", 0L);\n+\n+    private static final Path ZIP_FILE = Path.of(\"zipfs-outputstream-test.zip\");\n+\n+    @BeforeMethod\n+    public void setUp() throws IOException {\n+        deleteFiles();\n+    }\n+\n+    @AfterMethod\n+    public void tearDown() throws IOException {\n+        deleteFiles();\n+    }\n+\n+    private static void deleteFiles() throws IOException {\n+        Files.deleteIfExists(ZIP_FILE);\n+    }\n+\n+    @DataProvider(name = \"zipFSCreationEnv\")\n+    private Object[][] zipFSCreationEnv() {\n+        return new Object[][]{\n+                {Map.of(\"create\", \"true\", \"noCompression\", \"true\")}, \/\/ STORED\n+                {Map.of(\"create\", \"true\", \"noCompression\", \"false\")} \/\/ DEFLATED\n+\n+        };\n+    }\n+\n+    \/**\n+     * Create a zip filesystem and write out entries of varying sizes using the outputstream returned\n+     * by the ZipFileSystem. Then verify that the generated zip file entries are as expected,\n+     * both in size and content\n+     *\/\n+    @Test(dataProvider = \"zipFSCreationEnv\")\n+    public void testOutputStream(final Map<String, ?> env) throws Exception {\n+        final byte[] chunk = new byte[1024];\n+        new Random().nextBytes(chunk);\n+        try (final FileSystem zipfs = FileSystems.newFileSystem(ZIP_FILE, env)) {\n+            \/\/ create the zip with varying sized entries\n+            for (final Map.Entry<String, Long> entry : ZIP_ENTRIES.entrySet()) {\n+                final Path entryPath = zipfs.getPath(entry.getKey());\n+                if (entryPath.getParent() != null) {\n+                    Files.createDirectories(entryPath.getParent());\n+                }\n+                try (final OutputStream os = Files.newOutputStream(entryPath)) {\n+                    writeAsChunks(os, chunk, entry.getValue());\n+                }\n+            }\n+        }\n+        \/\/ now verify the written content\n+        try (final FileSystem zipfs = FileSystems.newFileSystem(ZIP_FILE)) {\n+            for (final Map.Entry<String, Long> entry : ZIP_ENTRIES.entrySet()) {\n+                final Path entryPath = zipfs.getPath(entry.getKey());\n+                try (final InputStream is = Files.newInputStream(entryPath)) {\n+                    final byte[] buf = new byte[chunk.length];\n+                    int numRead;\n+                    long totalRead = 0;\n+                    while ((numRead = is.read(buf)) != -1) {\n+                        totalRead += numRead;\n+                        \/\/ verify the content\n+                        for (int i = 0, chunkoffset = (int) ((totalRead - numRead) % chunk.length);\n+                             i < numRead; i++, chunkoffset++) {\n+                            Assert.assertEquals(buf[i], chunk[chunkoffset % chunk.length],\n+                                    \"Unexpected content in \" + entryPath);\n+                        }\n+                    }\n+                    Assert.assertEquals(totalRead, (long) entry.getValue(),\n+                            \"Unexpected number of bytes read from zip entry \" + entryPath);\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Repeatedly writes out to the outputstream, the chunk of data, till the number of bytes\n+     * written to the stream equals the totalSize\n+     *\/\n+    private static void writeAsChunks(final OutputStream os, final byte[] chunk,\n+                                      final long totalSize) throws IOException {\n+        long remaining = totalSize;\n+        for (long l = 0; l < totalSize; l += chunk.length) {\n+            final int numToWrite = (int) Math.min(remaining, chunk.length);\n+            os.write(chunk, 0, numToWrite);\n+            remaining -= numToWrite;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/ZipFSOutputStreamTest.java","additions":140,"deletions":0,"binary":false,"changes":140,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import jdk.test.lib.Asserts;\n+\n+\/**\n+ * @test\n+ * @bug 8141690\n+ * @summary MakeJavaSecurity.java functions\n+ * @library \/test\/lib \/test\/jdk\n+ * @run main MakeJavaSecurityTest\n+ *\/\n+public class MakeJavaSecurityTest {\n+\n+    private static final String TEST_SRC = System.getProperty(\"test.src\", \".\");\n+\n+    public static void main(String[] args) throws Exception {\n+        Path toolPath = getMakeJavaSecPath();\n+\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                toolPath.toString(),\n+                TEST_SRC + \"\/raw_java_security\",\n+                \"outfile\",\n+                \"solaris\",\n+                \"sparc\",\n+                \"somepolicy\",\n+                TEST_SRC + \"\/more_restricted\");\n+\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+\n+        verifyOutputFile();\n+    }\n+\n+    private static Path getMakeJavaSecPath() {\n+        String testRoot = System.getProperty(\"test.root\", \".\");\n+        Path toolPath = Paths.get(testRoot).getParent().getParent();\n+        toolPath = toolPath.resolve(\"make\/jdk\/src\/classes\/build\/tools\" +\n+                \"\/makejavasecurity\/MakeJavaSecurity.java\");\n+\n+        Asserts.assertTrue(Files.exists(toolPath),\n+                String.format(\"Cannot find %s. Maybe not all code repos are available\",\n+                        toolPath));\n+        return toolPath;\n+    }\n+\n+    private static void verifyOutputFile() throws IOException {\n+        Path actualFile = Path.of(\".\/outfile\");\n+        Path expectedFile = Path.of(TEST_SRC + \"\/final_java_security\");\n+\n+        List<String> list1 = Files.readAllLines(actualFile);\n+        List<String> list2 = Files.readAllLines(expectedFile);\n+        list1 = removeEmptyLines(list1);\n+        list2 = removeEmptyLines(list2);\n+\n+        String errorMessage = String.format(\"\"\"\n+                Expected file content:\n+                 %s\\s\n+                not equal to actual:\n+                 %s\\s\n+                \"\"\", list2, list1);\n+\n+        Asserts.assertTrue(list1.equals(list2), errorMessage);\n+    }\n+\n+    private static List<String> removeEmptyLines(List<String> list) {\n+        return list.stream()\n+                .filter(item -> !item.isBlank())\n+                .collect(Collectors.toList());\n+    }\n+}\n","filename":"test\/jdk\/jdk\/security\/JavaDotSecurity\/MakeJavaSecurityTest.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -1,58 +0,0 @@\n-#\n-# Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8141690\n-# @summary MakeJavaSecurity.java functions\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-    TESTSRC=\".\"\n-fi\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-    JAVAC_CMD=`which javac`\n-    TESTJAVA=`dirname $JAVAC_CMD`\/..\n-    COMPILEJAVA=${TESTJAVA}\n-fi\n-\n-JAVAC=\"${COMPILEJAVA}\/bin\/javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS}\"\n-JAVA=\"${TESTJAVA}\/bin\/java ${TESTVMOPTS}\"\n-TOOLSRC=\"${TESTSRC}\/..\/..\/..\/..\/make\/src\/classes\/build\/tools\/makejavasecurity\/MakeJavaSecurity.java\"\n-TOOLNAME=build.tools.makejavasecurity.MakeJavaSecurity\n-\n-if [ ! -f $TOOLSRC ]; then\n-    echo \"Cannot find $TOOLSRC. Maybe not all code repos are available\"\n-    exit 0\n-fi\n-\n-$JAVAC -d . $TOOLSRC\n-$JAVA $TOOLNAME \\\n-    $TESTSRC\/raw_java_security \\\n-    outfile \\\n-    solaris \\\n-    sparc \\\n-    somepolicy \\\n-    $TESTSRC\/more_restricted\n-\n-# On Windows, line end could be different. -b is a cross-platform option.\n-diff -b outfile $TESTSRC\/final_java_security\n","filename":"test\/jdk\/jdk\/security\/JavaDotSecurity\/ifdefs.sh","additions":0,"deletions":58,"binary":false,"changes":58,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,7 +35,18 @@\n- *  Class 2:\n- *      https:\/\/valid.domainplus.ca22.ssl.buypass.no\/CA2Class2   (valid)\n- *      https:\/\/revoked.domainplus.ca22.ssl.buypass.no        (revoked)\n- *\n- *  Class3:\n- *      https:\/\/valid.business.ca23.ssl.buypass.no    (valid)\n- *      https:\/\/revoked.business.ca23.ssl.buypass.no    (revoked)\n+ *  Buypass Class 3 CA 2\n+ *  https:\/\/valid.qcevident.ca23.ssl.buypass.no\/\n+ *  https:\/\/revoked.qcevident.ca23.ssl.buypass.no\/\n+ *  https:\/\/expired.qcevident.ca23.ssl.buypass.no\/\n+ *  https:\/\/valid.evident.ca23.ssl.buypass.no\/\n+ *  https:\/\/revoked.evident.ca23.ssl.buypass.no\/\n+ *  https:\/\/expired.evident.ca23.ssl.buypass.no\/\n+ *  https:\/\/valid.businessplus.ca23.ssl.buypass.no\n+ *  https:\/\/revoked.businessplus.ca23.ssl.buypass.no\n+ *  https:\/\/expired.businessplus.ca23.ssl.buypass.no\n+\n+ *  Buypass Class 2 CA 2\n+ *  https:\/\/valid.business.ca22.ssl.buypass.no\n+ *  https:\/\/revoked.business.ca22.ssl.buypass.no\n+ *  https:\/\/expired.business.ca22.ssl.buypass.no\n+ *  https:\/\/valid.domain.ca22.ssl.buypass.no\n+ *  https:\/\/revoked.domain.ca22.ssl.buypass.no\n+ *  https:\/\/expired.domain.ca22.ssl.buypass.no\/\n@@ -68,29 +79,32 @@\n-    private static final String INT_CLASS_2 = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIFCzCCAvOgAwIBAgIBGDANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEd\\n\"\n-            + \"MBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3Mg\\n\"\n-            + \"Q2xhc3MgMiBSb290IENBMB4XDTEwMTAyNjEwMTYxN1oXDTMwMTAyNjEwMTYxN1ow\\n\"\n-            + \"SzELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MR0w\\n\"\n-            + \"GwYDVQQDDBRCdXlwYXNzIENsYXNzIDIgQ0EgMjCCASIwDQYJKoZIhvcNAQEBBQAD\\n\"\n-            + \"ggEPADCCAQoCggEBAJyrZ8aWSw0PkdLsyswzK\/Ny\/A5\/uU6EqQ99c6omDMpI+yNo\\n\"\n-            + \"HjUO42ryrATs4YHla+xj+MieWyvz9HYaCnrGL0CE4oX8M7WzD+g8h6tUCS0AakJx\\n\"\n-            + \"dC5PBocUkjQGZ5ZAoF92ms6C99qfQXhHx7lBP\/AZT8sCWP0chOf9\/cNxCplspYVJ\\n\"\n-            + \"HkQjKN3VGa+JISavCcBqf33ihbPZ+RaLjOTxoaRaWTvlkFxHqsaZ3AsW71qSJwaE\\n\"\n-            + \"55l9\/qH45vn5mPrHQJ8h5LjgQcN5KBmxUMoA2iT\/VSLThgcgl+Iklbcv9rs6aaMC\\n\"\n-            + \"JH+zKbub+RyRijmyzD9YBr+ZTaowHvJs9G59uZMCAwEAAaOB9jCB8zAPBgNVHRMB\\n\"\n-            + \"Af8EBTADAQH\/MB8GA1UdIwQYMBaAFMmAd+BikoL1RpzzuvdMw964o605MB0GA1Ud\\n\"\n-            + \"DgQWBBSSrWWJsgAPy1ENwSPslE6PwQQ\/dzAOBgNVHQ8BAf8EBAMCAQYwEQYDVR0g\\n\"\n-            + \"BAowCDAGBgRVHSAAMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwuYnV5cGFz\\n\"\n-            + \"cy5uby9jcmwvQlBDbGFzczJSb290Q0EuY3JsMD4GCCsGAQUFBwEBBDIwMDAuBggr\\n\"\n-            + \"BgEFBQcwAYYiaHR0cDovL29jc3AuYnV5cGFzcy5uby9vY3NwL0JQT2NzcDANBgkq\\n\"\n-            + \"hkiG9w0BAQsFAAOCAgEAq8IVUouNdeHQljyp8xpa9GC7rpSRXGRRTolSXNa9TUfU\\n\"\n-            + \"48Z0Vj3x9jT58I+I8P7fKp+p4Wdu0kcwxOXsooP8hdGLqXY4nV9amkNRiTs99xa3\\n\"\n-            + \"Qu\/KdLeAPEeeKztxDCLXGmsC4+1G6DuDrOkwSm9Tm+HxSZRGR4Qo3mU3CCSz37us\\n\"\n-            + \"q7I0mnY4cCeBPQ3zW5J7k7KmMpUlxOPnLpaASY2JhoeiWIWddH6LUsMkZk1jDv+M\\n\"\n-            + \"Hyw2JWZUEUMCZoxLZ7F+4xP7v8wcEtICFo6tZIaawq9p\/S6+mJLcoQ7wdQBM0+NA\\n\"\n-            + \"cc1MnSbPz75WP4cFhVf1SFq5gBBMCgzYaw+A9bJxDgqV3IMG6TtWfOWz7KhMV+EL\\n\"\n-            + \"iVp0fXua2GITRwr+htWnID3ShbHOtCMUm9qrqC6aWNPvJqqKLdhgU9bQ\/s5o05a0\\n\"\n-            + \"D8NFT07l8yY6+ge+PPHOidnZrTNFIF9dtEdtyXGNrcqhZF0QvqeV1yZ\/Kf2+W4pa\\n\"\n-            + \"Wor82CuDZNfcf0lje3guk+oZexxpIO57eGJQh9iGLM5dBeEMF7+f5j\/1\/rGsf6vA\\n\"\n-            + \"KkudpjiTl1v\/GoO2zMDTTQVcjEsLSYSV0+s2p5QTXuAXrL0\/ER3KQRvewIAtmzFg\\n\"\n-            + \"IaPy7t2TV0olHISRMvaEz4Guh2biuO\/N6SP3pkk3dsMxiEVw7Xc+ouCb03Rz3aA=\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Serial number: 1b781c6d5e34ce1f77\n+    \/\/ Valid from: Mon Mar 25 05:17:10 PDT 2019 until: Sat Oct 26 02:16:17 PDT 2030\n+    private static final String INT_CLASS_2 = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIFKTCCAxGgAwIBAgIJG3gcbV40zh93MA0GCSqGSIb3DQEBCwUAME4xCzAJBgNV\\n\" +\n+            \"BAYTAk5PMR0wGwYDVQQKDBRCdXlwYXNzIEFTLTk4MzE2MzMyNzEgMB4GA1UEAwwX\\n\" +\n+            \"QnV5cGFzcyBDbGFzcyAyIFJvb3QgQ0EwHhcNMTkwMzI1MTIxNzEwWhcNMzAxMDI2\\n\" +\n+            \"MDkxNjE3WjBLMQswCQYDVQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMx\\n\" +\n+            \"NjMzMjcxHTAbBgNVBAMMFEJ1eXBhc3MgQ2xhc3MgMiBDQSAyMIIBIjANBgkqhkiG\\n\" +\n+            \"9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnKtnxpZLDQ+R0uzKzDMr83L8Dn+5ToSpD31z\\n\" +\n+            \"qiYMykj7I2geNQ7javKsBOzhgeVr7GP4yJ5bK\/P0dhoKesYvQITihfwztbMP6DyH\\n\" +\n+            \"q1QJLQBqQnF0Lk8GhxSSNAZnlkCgX3aazoL32p9BeEfHuUE\/8BlPywJY\/RyE5\/39\\n\" +\n+            \"w3EKmWylhUkeRCMo3dUZr4khJq8JwGp\/feKFs9n5FouM5PGhpFpZO+WQXEeqxpnc\\n\" +\n+            \"CxbvWpInBoTnmX3+ofjm+fmY+sdAnyHkuOBBw3koGbFQygDaJP9VItOGByCX4iSV\\n\" +\n+            \"ty\/2uzppowIkf7Mpu5v5HJGKObLMP1gGv5lNqjAe8mz0bn25kwIDAQABo4IBCzCC\\n\" +\n+            \"AQcwDwYDVR0TAQH\/BAUwAwEB\/zAfBgNVHSMEGDAWgBTJgHfgYpKC9Uac87r3TMPe\\n\" +\n+            \"uKOtOTAdBgNVHQ4EFgQUkq1libIAD8tRDcEj7JROj8EEP3cwDgYDVR0PAQH\/BAQD\\n\" +\n+            \"AgEGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjARBgNVHSAECjAIMAYG\\n\" +\n+            \"BFUdIAAwPQYDVR0fBDYwNDAyoDCgLoYsaHR0cDovL2NybC5idXlwYXNzLm5vL2Ny\\n\" +\n+            \"bC9CUENsYXNzMlJvb3RDQS5jcmwwMwYIKwYBBQUHAQEEJzAlMCMGCCsGAQUFBzAB\\n\" +\n+            \"hhdodHRwOi8vb2NzcC5idXlwYXNzLmNvbTANBgkqhkiG9w0BAQsFAAOCAgEApNka\\n\" +\n+            \"48a+qhJXXS9R24p34CWnirlyxPMhxFfQyvPFXnwBQGHvrm7H5KY3\/9\/etShFXdY\/\\n\" +\n+            \"N05Aq6UnE8my8jR4iHMm2e9iEf4v+O2E2JGH\/5\/H8wup160GBAsp4zAmJIT8KEgh\\n\" +\n+            \"YAA1j+NaClVryZfEaaDfAdF6LbU3cW0ZgooILPMeeCEXso23KsdCD1Q+SMvD6nQJ\\n\" +\n+            \"86iTvzWPY2GFJyEmvG\/N2f29nBaHxWwZBwCfWB4Hqsw9wdKfY5M9SE\/AGSLZ7LRM\\n\" +\n+            \"BmkkF9nqkWxxISadx12nbxn0LsU2k8Xyt830DqhHGSoYHEC\/iGxbU4Bub8NC0uw\/\\n\" +\n+            \"QNBj5Gd5cXLFhRUWLLBTq4p6P6kLc7JudpM4FNQ+stWK\/eDZylbDLN3iCBRnHH4p\\n\" +\n+            \"qg6HAlWuieiAKVsidBMxPUyDLJ\/8Dt+aW8Z3vCNcYC2n7wqrLZz5e4FG+Wn9teFW\\n\" +\n+            \"Rt5pO6ZUZAkDS59ZVojbbjOdQzNw3QHtZl0IMHeNYXJlPIUlHi4hGL3maGZ9sBF+\\n\" +\n+            \"AMfMLDu56+J2DewIuTXPzCeJeSTam\/ybNt5FxTznxCSCIDqwmZMy3AQEz9nGSbE8\\n\" +\n+            \"zfwB5VT2ijLB0PpPX4YbLf33Vodf0NAkBUv6N5It30XiTUPhdk+caBYPoljz\/J9U\\n\" +\n+            \"15T5+EGHs8ccHQWyYQ6gqYk8o4JgP4rSJqO1sMI=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -98,1 +112,1 @@\n-    \/\/ Owner: CN=valid.domainplus.ca22.ssl.buypass.no\n+    \/\/ Owner: CN=valid.domain.ca22.ssl.buypass.no\n@@ -100,29 +114,36 @@\n-    \/\/ Serial number: f0673c7183c95b38c93\n-    \/\/ Valid from: Mon Jan 25 00:20:55 PST 2016 until: Fri Jan 25 14:59:00 PST 2019\n-    private static final String VALID_CLASS_2 = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIEgzCCA2ugAwIBAgIKDwZzxxg8lbOMkzANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\"\n-            + \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\"\n-            + \"FEJ1eXBhc3MgQ2xhc3MgMiBDQSAyMB4XDTE2MDEyNTA4MjA1NVoXDTE5MDEyNTIy\\n\"\n-            + \"NTkwMFowLzEtMCsGA1UEAwwkdmFsaWQuZG9tYWlucGx1cy5jYTIyLnNzbC5idXlw\\n\"\n-            + \"YXNzLm5vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwhA0eVz8ADqx\\n\"\n-            + \"dcrIZUzCf1n+kaBFyEF4WteUMtM4ta7szTm19f1\/O4LRwr+pI5qQDgWHnHMX9sit\\n\"\n-            + \"rKOJPfMRgWrViaQ5y9QCZ4h2BIuDe61XVGkEcUiOoNojLRvDrbjpknI69nb1wbjn\\n\"\n-            + \"fpmCQVjYXoandr7RsexdWG4e+s6rk5Jk\/zAUzU3Vbi0lmDJ62Dd+Dk3\/IVrSebOp\\n\"\n-            + \"eIDniRX4vjIeucnDDTQ1VqSIN+gYNR\/bMxXKFbScGAG+BpgZMwetJBJhTi7zlOgR\\n\"\n-            + \"4zAtdvvpJNN1pmNCsmJaM25WQgH6a05cTQtgYN\/\/MKqTDww7z+LfK37mOxh3vBTu\\n\"\n-            + \"TR5S6VxzQQIDAQABo4IBgzCCAX8wCQYDVR0TBAIwADAfBgNVHSMEGDAWgBSSrWWJ\\n\"\n-            + \"sgAPy1ENwSPslE6PwQQ\/dzAdBgNVHQ4EFgQUIs9OWkfc6S1c8mbYgi6Ns1kzh0Mw\\n\"\n-            + \"DgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAf\\n\"\n-            + \"BgNVHSAEGDAWMAoGCGCEQgEaAQIEMAgGBmeBDAECATA6BgNVHR8EMzAxMC+gLaAr\\n\"\n-            + \"hilodHRwOi8vY3JsLmJ1eXBhc3Mubm8vY3JsL0JQQ2xhc3MyQ0EyLmNybDAvBgNV\\n\"\n-            + \"HREEKDAmgiR2YWxpZC5kb21haW5wbHVzLmNhMjIuc3NsLmJ1eXBhc3Mubm8wdQYI\\n\"\n-            + \"KwYBBQUHAQEEaTBnMC4GCCsGAQUFBzABhiJodHRwOi8vb2NzcC5idXlwYXNzLm5v\\n\"\n-            + \"L29jc3AvQlBPY3NwMDUGCCsGAQUFBzAChilodHRwOi8vY3J0LmJ1eXBhc3Mubm8v\\n\"\n-            + \"Y3J0L0JQQ2xhc3MyQ0EyLmNlcjANBgkqhkiG9w0BAQsFAAOCAQEAjDPxDQnnzH+v\\n\"\n-            + \"Mnj8dRM6NPBVXl4JNofWlwqzYdu+HauFeF3AOZVVyr\/YbOR9\/ewDrScOvrGohndV\\n\"\n-            + \"7Si0l5hz3fo51Ra81TyR8kWR7nJC2joidT1X4a0hF9zu8CNQNVmkOhoACgeuv42R\\n\"\n-            + \"NDwmj9TfpNRyC4RA7\/NzXMeRJYfOrh18S9VHhCzsWScd9td3u7hrhBOPPOql9f2K\\n\"\n-            + \"t9Hcevo+cceE6bGYwbW6xNr3iPOh31shMxgRUMojVamtH70tYMi+0e0lrzXdxgGO\\n\"\n-            + \"ISnXBS2HptakUIxF3feTOjBhhh5vb9RJxfdJA\/\/\/ggkR3L51MfjrusucpNoz3k3P\\n\"\n-            + \"f5e7ZlSJ6g==\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Serial number: 34e2bff8063debd18d79\n+    \/\/ Valid from: Mon Sep 23 04:12:34 PDT 2019 until: Mon Oct 11 14:59:00 PDT 2021\n+    private static final String VALID_CLASS_2 = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIF8jCCBNqgAwIBAgIKNOK\/+AY969GNeTANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\" +\n+            \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\" +\n+            \"FEJ1eXBhc3MgQ2xhc3MgMiBDQSAyMB4XDTE5MDkyMzExMTIzNFoXDTIxMTAxMTIx\\n\" +\n+            \"NTkwMFowKzEpMCcGA1UEAwwgdmFsaWQuZG9tYWluLmNhMjIuc3NsLmJ1eXBhc3Mu\\n\" +\n+            \"bm8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCeu\/8j7y55R3OucDek\\n\" +\n+            \"gtdoVOEJQb2XaCR4OwiRzn74hLYhKGdFmFwSp+bPCT62NzjdK1urVeKrCQdC1Gkm\\n\" +\n+            \"e7iSOsHHO5aC8oxkgdv8mwEwwvH7xHCcpEVLDlE5Oc0d4cS4QIwFAhNIC77slixL\\n\" +\n+            \"fEdupc5e8FfQf3MlnhX+8gpgRzTx3iw8sb3gUwi3+7PRommHOhC7Ll+iI9LiLODJ\\n\" +\n+            \"qrkHnCbM2HJMK+SGTOQ\/whiQwMCnkLaEG0WO1rYc4BGRGfFb8qmQWw\/tDKkEey7X\\n\" +\n+            \"nLIFHSC33OiexQshAwRIAE7r1h9gMY1aAAB2Uxwi9\/3l6fsd\/VPmK7s7lYTBsrpK\\n\" +\n+            \"r4bTAgMBAAGjggL2MIIC8jAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFJKtZYmyAA\/L\\n\" +\n+            \"UQ3BI+yUTo\/BBD93MB0GA1UdDgQWBBSy+COaEmU2\/BeF4g1OglFvAEYkIDAOBgNV\\n\" +\n+            \"HQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB8GA1Ud\\n\" +\n+            \"IAQYMBYwCgYIYIRCARoBAgQwCAYGZ4EMAQIBMDoGA1UdHwQzMDEwL6AtoCuGKWh0\\n\" +\n+            \"dHA6Ly9jcmwuYnV5cGFzcy5uby9jcmwvQlBDbGFzczJDQTIuY3JsMCsGA1UdEQQk\\n\" +\n+            \"MCKCIHZhbGlkLmRvbWFpbi5jYTIyLnNzbC5idXlwYXNzLm5vMGoGCCsGAQUFBwEB\\n\" +\n+            \"BF4wXDAjBggrBgEFBQcwAYYXaHR0cDovL29jc3AuYnV5cGFzcy5jb20wNQYIKwYB\\n\" +\n+            \"BQUHMAKGKWh0dHA6Ly9jcnQuYnV5cGFzcy5uby9jcnQvQlBDbGFzczJDQTIuY2Vy\\n\" +\n+            \"MIIBfgYKKwYBBAHWeQIEAgSCAW4EggFqAWgAdwC72d+8H4pxtZOUI5eqkntHOFeV\\n\" +\n+            \"CqtS6BqQlmQ2jh7RhQAAAW1d0tivAAAEAwBIMEYCIQDFRAH98gYpvMMTVa3d5Wcq\\n\" +\n+            \"0tOwpZZyUHiOjUlR3SD14QIhAKZp0cdwFpm+hh0taFVSTmluGsHmXPMCIQq9hLAB\\n\" +\n+            \"VYgyAHYApLkJkLQYWBSHuxOizGdwCjw1mAT5G9+443fNDsgN3BAAAAFtXdLbFwAA\\n\" +\n+            \"BAMARzBFAiBhr7KQc9yO3zb1iLlE0JW9whR0\/bhrPDkk5BYnBKjzFAIhAMMTdHfk\\n\" +\n+            \"1ljso5jKzIUcBpSW0HnTcuKiB3VxGpL7GFVWAHUAb1N2rDHwMRnYmQCkURX\/dxUc\\n\" +\n+            \"EdkCwQApBo2yCJo32RMAAAFtXdLYSAAABAMARjBEAiADoZr6Cp5AGM1eT2aUeRaQ\\n\" +\n+            \"kv0vRaegjRGIhKRCvRGyFAIgWLU\/7zh28LI8vAyWr8mpDqlUXvF13i3zSD3whq4L\\n\" +\n+            \"Lu4wDQYJKoZIhvcNAQELBQADggEBAJH1RhTuMbhEOYlw+Efbx7PP7EEC\/GQ1ijET\\n\" +\n+            \"vZS45jFQyTKhFUcdP2QPAtEVo1nS8PBs0txQJBf0xceWUjer9ruxiAS+JlW21AOi\\n\" +\n+            \"Uq9Kahpj5k63Z7tN8KTeOUE8wZGmHyvVcPP6mkC94RbjYIb4gd13eYxd2Vv1a7YX\\n\" +\n+            \"dNI+J3g7sX5ijssfJxzDd0hORj2584YY2WiKKvIGxwDnLkxk09i3IvjEKsAi4Cgn\\n\" +\n+            \"5798X5sSL1Q9C6gHEWt+cB5UtfILCfbLNRczS9zGku6gjh1c8dB7zc63mn7oCf1C\\n\" +\n+            \"gnQ2xqwbZb3Wau8CPwcMqJWgQZLQFPbZd+4Xo5SDDqYppV4oN2A=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -130,1 +151,1 @@\n-    \/\/ Owner: CN=revoked.domainplus.ca22.ssl.buypass.no\n+    \/\/ Owner: CN=revoked.domain.ca22.ssl.buypass.no\n@@ -132,29 +153,36 @@\n-    \/\/ Serial number: f07a517dfc19ea8bf8f\n-    \/\/ Valid from: Mon Jan 25 00:22:09 PST 2016 until: Fri Jan 25 14:59:00 PST 2019\n-    private static final String REVOKED_CLASS_2 = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIEhzCCA2+gAwIBAgIKDwelF9\/Bnqi\/jzANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\"\n-            + \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\"\n-            + \"FEJ1eXBhc3MgQ2xhc3MgMiBDQSAyMB4XDTE2MDEyNTA4MjIwOVoXDTE5MDEyNTIy\\n\"\n-            + \"NTkwMFowMTEvMC0GA1UEAwwmcmV2b2tlZC5kb21haW5wbHVzLmNhMjIuc3NsLmJ1\\n\"\n-            + \"eXBhc3Mubm8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDjp\/5BLRjH\\n\"\n-            + \"03XNNT2YXqg+txclRaUu88Rjbj4oEudFbkGTl+oBhmXX4QjM4WGvgw1AHW7nePWF\\n\"\n-            + \"\/j3aR1kWJCl\/ZOe097mb0V0dIwK6u6RVx9ERd4ITa\/cmUJjy1+D+vCsT0elJY1vf\\n\"\n-            + \"vbwCdaloS7MZDG3wmJGxrUz7fo7t\/JdsW481Ymau3xVTQ+45MusPmOE8RZ6nggIQ\\n\"\n-            + \"dZIA00XPhlQwg5ivuPwtcNNZIkk1fkU+5J+RUOI5qHA9zH2s1Hly6PzTATCxSDSi\\n\"\n-            + \"zqAmBH0ehrWqCWiKH5P3J8dCRA6qa2n5pD71CweLrUsbmztkBHUlYKlZ0fP6bGiI\\n\"\n-            + \"ZDMBLL\/aFQybAgMBAAGjggGFMIIBgTAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFJKt\\n\"\n-            + \"ZYmyAA\/LUQ3BI+yUTo\/BBD93MB0GA1UdDgQWBBQZICByGObE\/pJISOcMavbKRl2L\\n\"\n-            + \"+zAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC\\n\"\n-            + \"MB8GA1UdIAQYMBYwCgYIYIRCARoBAgQwCAYGZ4EMAQIBMDoGA1UdHwQzMDEwL6At\\n\"\n-            + \"oCuGKWh0dHA6Ly9jcmwuYnV5cGFzcy5uby9jcmwvQlBDbGFzczJDQTIuY3JsMDEG\\n\"\n-            + \"A1UdEQQqMCiCJnJldm9rZWQuZG9tYWlucGx1cy5jYTIyLnNzbC5idXlwYXNzLm5v\\n\"\n-            + \"MHUGCCsGAQUFBwEBBGkwZzAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuYnV5cGFz\\n\"\n-            + \"cy5uby9vY3NwL0JQT2NzcDA1BggrBgEFBQcwAoYpaHR0cDovL2NydC5idXlwYXNz\\n\"\n-            + \"Lm5vL2NydC9CUENsYXNzMkNBMi5jZXIwDQYJKoZIhvcNAQELBQADggEBAAdjMdlP\\n\"\n-            + \"qYNK+YkrqTgQV0dblIazL\/cIhMPByjnEkfxew9tDxpcMWafIFKcgM\/QxYJG\/mzoL\\n\"\n-            + \"sSQ9pzzuGLQX7eAPA3rlWoQBusOeOaC3HQqy73kGStd7H8HPa3m+q47Z6JG0w+Fb\\n\"\n-            + \"rk8odrml+8rAEPLBlldB39xJuNVHjmlyTEDSC4azEXjfV4+kj8uE86sm+AoTt4Ba\\n\"\n-            + \"tEZSbKp70oH63QKBAEHORMM4gXeP+WG276p3kTcL1VUfgQw7vVmGN0C8DjhK4BAC\\n\"\n-            + \"0PUChr8agu0F5YcqpGxjLemMnDrqW+Bi\/JYmGhEjWTiLSyYSlvJb1dAFUyPlc958\\n\"\n-            + \"pmOu5xTMEatiPFI=\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Serial number: 34e4b97261795f98c495\n+    \/\/ Valid from: Mon Sep 23 04:52:42 PDT 2019 until: Thu Sep 23 14:59:00 PDT 2021\n+    private static final String REVOKED_CLASS_2 = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIF9zCCBN+gAwIBAgIKNOS5cmF5X5jElTANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\" +\n+            \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\" +\n+            \"FEJ1eXBhc3MgQ2xhc3MgMiBDQSAyMB4XDTE5MDkyMzExNTI0MloXDTIxMDkyMzIx\\n\" +\n+            \"NTkwMFowLTErMCkGA1UEAwwicmV2b2tlZC5kb21haW4uY2EyMi5zc2wuYnV5cGFz\\n\" +\n+            \"cy5ubzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOiChajGbQktGjbl\\n\" +\n+            \"k\/i5PtqfMN6cMyjJdOirxzXdUG8dT+QErC5zcElCwuyy5MH7DQJRbSYsPxQmr6z5\\n\" +\n+            \"OSheBxX0lPPLjJFfEafBZ+Fw1xmCVy3Xjt3GEl85iqv5y0\/E\/UlQPc0f7s6WxU0L\\n\" +\n+            \"cItkyN0rWAa+uQY018qDFn+gDYIKWPzTCf5nkXIgob\/IgBM1Bj7vSZ\/LI1iB+I+G\\n\" +\n+            \"dgLbSGBlJgK6lhCTc1tunZlSbKdPM2Th8Hbl6Uk7WormR\/8SrGQA9AAd7BWa43V5\\n\" +\n+            \"HHvf\/oArsx0afp3zXNiMw9RgHVHI5uUAzkNnL8NMUpI1sK7\/ndTlm0nXsHpPKrPo\\n\" +\n+            \"e+NpKaMCAwEAAaOCAvkwggL1MAkGA1UdEwQCMAAwHwYDVR0jBBgwFoAUkq1libIA\\n\" +\n+            \"D8tRDcEj7JROj8EEP3cwHQYDVR0OBBYEFDoBaIahoDhRhA3WVyT\/XukqZzmAMA4G\\n\" +\n+            \"A1UdDwEB\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYD\\n\" +\n+            \"VR0gBBgwFjAKBghghEIBGgECBDAIBgZngQwBAgEwOgYDVR0fBDMwMTAvoC2gK4Yp\\n\" +\n+            \"aHR0cDovL2NybC5idXlwYXNzLm5vL2NybC9CUENsYXNzMkNBMi5jcmwwLQYDVR0R\\n\" +\n+            \"BCYwJIIicmV2b2tlZC5kb21haW4uY2EyMi5zc2wuYnV5cGFzcy5ubzBqBggrBgEF\\n\" +\n+            \"BQcBAQReMFwwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLmJ1eXBhc3MuY29tMDUG\\n\" +\n+            \"CCsGAQUFBzAChilodHRwOi8vY3J0LmJ1eXBhc3Mubm8vY3J0L0JQQ2xhc3MyQ0Ey\\n\" +\n+            \"LmNlcjCCAX8GCisGAQQB1nkCBAIEggFvBIIBawFpAHYAu9nfvB+KcbWTlCOXqpJ7\\n\" +\n+            \"RzhXlQqrUugakJZkNo4e0YUAAAFtXfeApgAABAMARzBFAiARoEDgK57YWEW2R21d\\n\" +\n+            \"jFMphF5c9PypIwbZFHiWxdyCyAIhALsjjtPGgcrT\/7KebYFPuKDyQO6rc8YYvm0z\\n\" +\n+            \"Q+Xt7NhxAHYApLkJkLQYWBSHuxOizGdwCjw1mAT5G9+443fNDsgN3BAAAAFtXfeD\\n\" +\n+            \"eQAABAMARzBFAiBCXKlCGkqa85QVqMR5dYDDz3F5aQgLXPubrQLX7cAZ0wIhALRr\\n\" +\n+            \"p8F6OfIdccSUhzEcNdtensQ\/7zxgn81bUzn1ar9EAHcAb1N2rDHwMRnYmQCkURX\/\\n\" +\n+            \"dxUcEdkCwQApBo2yCJo32RMAAAFtXfeBSQAABAMASDBGAiEAyrR31T85HGekHZdD\\n\" +\n+            \"r\/m6flxqQaUIGcAJ5WcrBuIBuYkCIQD0rDdm+vM5\/lNXIfjjrPLhATFEvrxpXJvu\\n\" +\n+            \"+sW4Ntm94jANBgkqhkiG9w0BAQsFAAOCAQEAjbMEFeNXFy3YQSr8O0+fY7qwaAzk\\n\" +\n+            \"vq65Ef\/B2zvqO375+JI21grUikmFUnDiAaM8Y+8PJkOXDiuxR2\/XCLsXpxCcPqQh\\n\" +\n+            \"V0MZlqXtjKZjBACILBX7aqGibojJTIlo0Dkd+LfPwswfXscTbb1CUXpUPn7CiUj5\\n\" +\n+            \"0WwfvjjQXny0NAB6WEkBMEBx6\/Q75dvltoV9N1BZVer9hov6UTDuSad86faX2QF2\\n\" +\n+            \"aIEjrTJY3m2HqnIYf\/lQxuDUDW0h7ddGGsIEBDM8z7M\/rvT068ssRqJ8uecGjMaz\\n\" +\n+            \"JElX8VDgMux2kyjTAiAFD5QO+KTfySri9QXptik3wo66zDOmkVES1snvVQ==\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -170,1 +198,1 @@\n-                \"Mon Jan 25 00:24:47 PST 2016\", System.out);\n+                \"Mon Sep 23 04:53:18 PDT 2019\", System.out);\n@@ -178,29 +206,32 @@\n-    private static final String INT_CLASS_3 = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIFCzCCAvOgAwIBAgIBGDANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEd\\n\"\n-            + \"MBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3Mg\\n\"\n-            + \"Q2xhc3MgMyBSb290IENBMB4XDTEwMTAyNjA5MTYxN1oXDTMwMTAyNjA5MTYxN1ow\\n\"\n-            + \"SzELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MR0w\\n\"\n-            + \"GwYDVQQDDBRCdXlwYXNzIENsYXNzIDMgQ0EgMjCCASIwDQYJKoZIhvcNAQEBBQAD\\n\"\n-            + \"ggEPADCCAQoCggEBAL1OFdoURRXuCuwTBJpuCKDE8Euzcg0AeCRGq3VdagbChyCE\\n\"\n-            + \"CQ5vYWwmpHCyFl1b+r2KyWdQBBdG+msAcIYZal5cjZzrTWvbkfiAD\/OneMjhqYB0\\n\"\n-            + \"pTQIXbTjpPUMOjFM8waNZcqGJqC9H+Z9NkjK5THAK0oOOfKNPHg1MeImbOHVw0fR\\n\"\n-            + \"48WnNrPpnQDt+SbPFSvw+dACDAybx1XgjMPq7pmZDWbkajOz4yCvrgZm6jvAPeT3\\n\"\n-            + \"qkBFh7zOZ3IZVdfmRjVahx0iXp5TJ1SsrRr\/uCiae1O+NR\/\/XDG3dl9j17HsFlhY\\n\"\n-            + \"Rl6EvEfVV0OcW94Ret9uBUF73ANZl0b+gwCXnV0CAwEAAaOB9jCB8zAPBgNVHRMB\\n\"\n-            + \"Af8EBTADAQH\/MB8GA1UdIwQYMBaAFEe4zf\/lb+74suwvTg75JbCOPGvDMB0GA1Ud\\n\"\n-            + \"DgQWBBQiMC7S+\/ZLysC4O9IExOly5pebDDAOBgNVHQ8BAf8EBAMCAQYwEQYDVR0g\\n\"\n-            + \"BAowCDAGBgRVHSAAMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwuYnV5cGFz\\n\"\n-            + \"cy5uby9jcmwvQlBDbGFzczNSb290Q0EuY3JsMD4GCCsGAQUFBwEBBDIwMDAuBggr\\n\"\n-            + \"BgEFBQcwAYYiaHR0cDovL29jc3AuYnV5cGFzcy5uby9vY3NwL0JQT2NzcDANBgkq\\n\"\n-            + \"hkiG9w0BAQsFAAOCAgEAaOLyxpj2t9k9Rzkxkcj\/teTNOWxBLPZDi+eFx3u7laf2\\n\"\n-            + \"mX\/ZUSSE4g7OiKnD7ozWk9Qgocn3rBWGDKsp676RwWV97Elofz73Oebei6P3Gg\/9\\n\"\n-            + \"CD8y6rf8xHRxru5d1ZQ1NkWdPwYI38jlt3LaDjJKZjJW7pOPIMRvw1Y1AY3mYgCJ\\n\"\n-            + \"Qqpw8jgukHIP0454DPzkUXzg\/ZVJG0swmFmjYfARleSPidcs5BJx5ngpcUS4745g\\n\"\n-            + \"mN9PQ578+ROIbML4Jx83myivlyTQSPdYSwzSswb1RVBJmiF9qC0B1hivCrs4BATu\\n\"\n-            + \"YeaPV6CiNDr0jGnbxAskz7QDNR6uJSUKX3L9iY2TB\/4\/5hJ9TZ\/YDI6OEG\/wVtBz\\n\"\n-            + \"5FkU0ucztyQa4UG1mXR8Zbs\/zt9Fj0Xn8f5IM3dB\/s\/r8c1AFDIcLRUqP\/LkI9Wj\\n\"\n-            + \"XovWr79PEJcIfIln0AfzYfBBxCRE+4QHcVhci6p\/mbyl2a+Rf8ZGNTiDLaWSZp5x\\n\"\n-            + \"jqdaq5UQaoZK8XQ+JVR0etep\/KPgVMXq5Zv16YEb2vjs\/\/RfxT8psDZLe\/37+Bs4\\n\"\n-            + \"AG9sdT\/bsH7HDQwodTon\/HvMmxt4EiU\/1Sjco4Fok9VmSE2UVjIghajbbTSKR3LV\\n\"\n-            + \"UuU19x12fKp+htO8L+wVlGgxXb9WvDBNHCe6RmR4jqavmvrAyCPtrx3cXwqGmXA=\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Serial number: 1be0dc6a3e7f220475\n+    \/\/ Valid from: Mon Mar 25 05:12:16 PDT 2019 until: Sat Oct 26 01:16:17 PDT 2030\n+    private static final String INT_CLASS_3 = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIFKTCCAxGgAwIBAgIJG+Dcaj5\/IgR1MA0GCSqGSIb3DQEBCwUAME4xCzAJBgNV\\n\" +\n+            \"BAYTAk5PMR0wGwYDVQQKDBRCdXlwYXNzIEFTLTk4MzE2MzMyNzEgMB4GA1UEAwwX\\n\" +\n+            \"QnV5cGFzcyBDbGFzcyAzIFJvb3QgQ0EwHhcNMTkwMzI1MTIxMjE2WhcNMzAxMDI2\\n\" +\n+            \"MDgxNjE3WjBLMQswCQYDVQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMx\\n\" +\n+            \"NjMzMjcxHTAbBgNVBAMMFEJ1eXBhc3MgQ2xhc3MgMyBDQSAyMIIBIjANBgkqhkiG\\n\" +\n+            \"9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvU4V2hRFFe4K7BMEmm4IoMTwS7NyDQB4JEar\\n\" +\n+            \"dV1qBsKHIIQJDm9hbCakcLIWXVv6vYrJZ1AEF0b6awBwhhlqXlyNnOtNa9uR+IAP\\n\" +\n+            \"86d4yOGpgHSlNAhdtOOk9Qw6MUzzBo1lyoYmoL0f5n02SMrlMcArSg458o08eDUx\\n\" +\n+            \"4iZs4dXDR9Hjxac2s+mdAO35Js8VK\/D50AIMDJvHVeCMw+rumZkNZuRqM7PjIK+u\\n\" +\n+            \"BmbqO8A95PeqQEWHvM5nchlV1+ZGNVqHHSJenlMnVKytGv+4KJp7U741H\/9cMbd2\\n\" +\n+            \"X2PXsewWWFhGXoS8R9VXQ5xb3hF6324FQXvcA1mXRv6DAJedXQIDAQABo4IBCzCC\\n\" +\n+            \"AQcwDwYDVR0TAQH\/BAUwAwEB\/zAfBgNVHSMEGDAWgBRHuM3\/5W\/u+LLsL04O+SWw\\n\" +\n+            \"jjxrwzAdBgNVHQ4EFgQUIjAu0vv2S8rAuDvSBMTpcuaXmwwwDgYDVR0PAQH\/BAQD\\n\" +\n+            \"AgEGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjARBgNVHSAECjAIMAYG\\n\" +\n+            \"BFUdIAAwPQYDVR0fBDYwNDAyoDCgLoYsaHR0cDovL2NybC5idXlwYXNzLm5vL2Ny\\n\" +\n+            \"bC9CUENsYXNzM1Jvb3RDQS5jcmwwMwYIKwYBBQUHAQEEJzAlMCMGCCsGAQUFBzAB\\n\" +\n+            \"hhdodHRwOi8vb2NzcC5idXlwYXNzLmNvbTANBgkqhkiG9w0BAQsFAAOCAgEAo42Y\\n\" +\n+            \"fp96nUiZbZsqvYBID3Sqtx3jJfU8gNHFeXgkS0pxYHHYUwsVSVRjw+BGVEGUswpF\\n\" +\n+            \"MaYMCZD37ZL0JpvvXWrCDaMb\/GqDJAQHLLTyVKPGGGIWCZH\/FrhnNvcpt2XXA8lU\\n\" +\n+            \"Ujzp5nZPuqvenzQ\/aXHI4sH5sN\/QjyKVMSa\/6RbWBeQmvIdgyM+0jIR5\/r6UGiKM\\n\" +\n+            \"ar55trZgnlIbvQJ\/w8QTmI\/NwvA5CtRaOslQBxeKoAR0BuA\/lRWnocXa\/BM5uO6P\\n\" +\n+            \"ULL7ct\/uI1bS+YThHXHmFybI6kDf+RhRzWY9165ZP96PBph6smQkxPDAz2b8v+mh\\n\" +\n+            \"LThH+5hkqnoetYfK2MdBYinceGPP3gZ+uBSDDI2o6vdVvdg7G96GP1OEtgTEqZa3\\n\" +\n+            \"glVafckpn\/8F5CisypdQuZ5zyy\/6SXZCKkPcikR87ysSKnjtteXbxMWVtwkeBALT\\n\" +\n+            \"K7DbJA+5aOCYRNj6CJGULQKiGlC01\/ipORKewf5J3yus81lLHzBmgQMA5l9RL8rV\\n\" +\n+            \"6dI246mPpQ+8WDLsDrK3ydSDv5izgdVHzhL0tT2u4vwSq2WUqCgi4xLIA1N\/fA2H\\n\" +\n+            \"xEW7zh0X\/3YVz++g\/6bd7iqRD9nRRZxACekRbza7AqU5xN1UjvVtCJQ9VC74K9KP\\n\" +\n+            \"pBoLWE2Bz5ksL9VUc4kS+WGORvZrSE1EpBq6cHc=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -208,2 +239,2 @@\n-    \/\/ Owner: SERIALNUMBER=983163327, CN=valid.business.ca23.ssl.buypass.no,\n-    \/\/ O=BUYPASS AS, L=OSLO, OID.2.5.4.17=0484, C=NO\n+    \/\/ Owner: SERIALNUMBER=983163327, CN=valid.businessplus.ca23.ssl.buypass.no, O=BUYPASS AS,\n+    \/\/ L=OSLO, OID.2.5.4.17=0484, C=NO\n@@ -211,30 +242,38 @@\n-    \/\/ Serial number: 97631b91e98293b35c8\n-    \/\/ Valid from: Fri Feb 06 00:57:04 PST 2015 until: Fri Feb 09 14:59:00 PST 2018\n-    private static final String VALID_CLASS_3 = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIE1DCCA7ygAwIBAgIKCXYxuR6YKTs1yDANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\"\n-            + \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\"\n-            + \"FEJ1eXBhc3MgQ2xhc3MgMyBDQSAyMB4XDTE1MDIwNjA4NTcwNFoXDTE4MDIwOTIy\\n\"\n-            + \"NTkwMFowgYExCzAJBgNVBAYTAk5PMQ0wCwYDVQQRDAQwNDg0MQ0wCwYDVQQHDARP\\n\"\n-            + \"U0xPMRMwEQYDVQQKDApCVVlQQVNTIEFTMSswKQYDVQQDDCJ2YWxpZC5idXNpbmVz\\n\"\n-            + \"cy5jYTIzLnNzbC5idXlwYXNzLm5vMRIwEAYDVQQFEwk5ODMxNjMzMjcwggEiMA0G\\n\"\n-            + \"CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCbahUoF2A7upqIxDQKraZ+aEOzNkHF\\n\"\n-            + \"1fIQEtUMQS1OTB8la7pWsBnv1gk9Ja2ifIrwdSxAjefL3SXR47h4vxUMnufMnkTk\\n\"\n-            + \"PERXft\/XR8\/jZQZRpznnN\/V89ctb8qcVhHCooTIELOBzF9QAmDnawZQogwhDNLNy\\n\"\n-            + \"kLtWsl75X547DS\/Z5hsqCqXPyOiFzkHY59uamYu48TF9d7HwQ741H0YhehoxTl\/O\\n\"\n-            + \"YqzW2wqYxqhQuCX5IuYER7G\/P3G6UAm+VB9aujtWW+TBT9+iWh0aT+C7ezDtREse\\n\"\n-            + \"lwb44svf8S3iW18KlSF8EMT0qwqNpA8njOCQiSgluYD+Uk9E5f8505UzAgMBAAGj\\n\"\n-            + \"ggGBMIIBfTAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFCIwLtL79kvKwLg70gTE6XLm\\n\"\n-            + \"l5sMMB0GA1UdDgQWBBQncKIaP6HdQV8RIBO+dddWDSKvJjAOBgNVHQ8BAf8EBAMC\\n\"\n-            + \"BaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB8GA1UdIAQYMBYwCgYI\\n\"\n-            + \"YIRCARoBAwQwCAYGZ4EMAQICMDoGA1UdHwQzMDEwL6AtoCuGKWh0dHA6Ly9jcmwu\\n\"\n-            + \"YnV5cGFzcy5uby9jcmwvQlBDbGFzczNDQTIuY3JsMC0GA1UdEQQmMCSCInZhbGlk\\n\"\n-            + \"LmJ1c2luZXNzLmNhMjMuc3NsLmJ1eXBhc3Mubm8wdQYIKwYBBQUHAQEEaTBnMC4G\\n\"\n-            + \"CCsGAQUFBzABhiJodHRwOi8vb2NzcC5idXlwYXNzLm5vL29jc3AvQlBPY3NwMDUG\\n\"\n-            + \"CCsGAQUFBzAChilodHRwOi8vY3J0LmJ1eXBhc3Mubm8vY3J0L0JQQ2xhc3MzQ0Ey\\n\"\n-            + \"LmNlcjANBgkqhkiG9w0BAQsFAAOCAQEAqeA3IqMPn\/az52twbNnimXIhIb7tWj7U\\n\"\n-            + \"NSBqr+httoQvNo7NbtVCgO\/fM3\/t0YN7rgZfP07QTn7L7CwoddrgHbnuCuFr9UhD\\n\"\n-            + \"df7cfY3cwDhWx+YKgXTkRZpXXrOPqeY2+9gaJlcQCnw66t5EBa4lSBnN0ZtkB4lT\\n\"\n-            + \"ujFP6BAyzZAjRdXWUidtErDWZri1uLmWAP0kQNez2toOcQ0XpbrbL8+nQtvOVOJv\\n\"\n-            + \"b\/c8WoaoC14C32mAeC5bx4dQ3mpf3hQv9man1SPjY\/rsDsWWjsaJAijl3YPtP2bU\\n\"\n-            + \"JRCCM7qfZWrY8\/uBLG2llfjviKV9I6sT76w7TnawPsz+SkDXFm\/nwg==\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Serial number: 267b7a9f0c3da9b94b39\n+    \/\/ Valid from: Mon Sep 23 04:17:42 PDT 2019 until: Mon Oct 11 14:59:00 PDT 2021\n+    private static final String VALID_CLASS_3 = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIGUTCCBTmgAwIBAgIKJnt6nww9qblLOTANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\" +\n+            \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\" +\n+            \"FEJ1eXBhc3MgQ2xhc3MgMyBDQSAyMB4XDTE5MDkyMzExMTc0MloXDTIxMTAxMTIx\\n\" +\n+            \"NTkwMFowgYUxCzAJBgNVBAYTAk5PMQ0wCwYDVQQRDAQwNDg0MQ0wCwYDVQQHDARP\\n\" +\n+            \"U0xPMRMwEQYDVQQKDApCVVlQQVNTIEFTMS8wLQYDVQQDDCZ2YWxpZC5idXNpbmVz\\n\" +\n+            \"c3BsdXMuY2EyMy5zc2wuYnV5cGFzcy5ubzESMBAGA1UEBRMJOTgzMTYzMzI3MIIB\\n\" +\n+            \"IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArqj6dPVIQUULBV\/S+u2\/Rfko\\n\" +\n+            \"3BljX\/KMEAclJHPu6AbJ2Dw5oLqCynOfTwLmGl3IRBQuDUAuoLdaptIhaXR2VTsF\\n\" +\n+            \"8SWdHNXkykC2eD0XkAUdTuKgRm\/3U4f0T3XQsjwKOEQGECwGEWJekBL73retSRWe\\n\" +\n+            \"Ccc19NpSKZ5rmRnQSlKLfqUyihmw2xXmIWwEmBq0OOyG8ic3C11Zxh6yUOtlZJqB\\n\" +\n+            \"lWqbAAOK5SXTNV0qozwgkSvtAtJvUo2++rng35Oj8MvjKQjLi92NnSpjbj3rUivW\\n\" +\n+            \"++44X94IgoF9dITkSMnubXhaTLnciM08R8jmCFj877NRrVJRmcJhPfP1yHnR3wID\\n\" +\n+            \"AQABo4IC+jCCAvYwCQYDVR0TBAIwADAfBgNVHSMEGDAWgBQiMC7S+\/ZLysC4O9IE\\n\" +\n+            \"xOly5pebDDAdBgNVHQ4EFgQUKJCKAxRR7K6pedVONDSn58EOzQcwDgYDVR0PAQH\/\\n\" +\n+            \"BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSAEGDAW\\n\" +\n+            \"MAoGCGCEQgEaAQMEMAgGBmeBDAECAjA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8v\\n\" +\n+            \"Y3JsLmJ1eXBhc3Mubm8vY3JsL0JQQ2xhc3MzQ0EyLmNybDAxBgNVHREEKjAogiZ2\\n\" +\n+            \"YWxpZC5idXNpbmVzc3BsdXMuY2EyMy5zc2wuYnV5cGFzcy5ubzBqBggrBgEFBQcB\\n\" +\n+            \"AQReMFwwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLmJ1eXBhc3MuY29tMDUGCCsG\\n\" +\n+            \"AQUFBzAChilodHRwOi8vY3J0LmJ1eXBhc3Mubm8vY3J0L0JQQ2xhc3MzQ0EyLmNl\\n\" +\n+            \"cjCCAXwGCisGAQQB1nkCBAIEggFsBIIBaAFmAHYAu9nfvB+KcbWTlCOXqpJ7RzhX\\n\" +\n+            \"lQqrUugakJZkNo4e0YUAAAFtXdd3CgAABAMARzBFAiEA\/pTOtw6i2DJS0R56KwVF\\n\" +\n+            \"Huy+LonG7bICWAe1vnCNud4CIE7\/KRDu9Jys24rtmLz9yCNYJfZDvooK5PT9+rWR\\n\" +\n+            \"OC4+AHUApLkJkLQYWBSHuxOizGdwCjw1mAT5G9+443fNDsgN3BAAAAFtXdd54gAA\\n\" +\n+            \"BAMARjBEAiB09qp4sGA+Kxg823hea3ZyTV7mU1ZQ9j9fqqX8KZ1mpwIgUICM2H0Y\\n\" +\n+            \"8z+V9m+6SutZ5WTD+Arg3K8O6\/dvyKu0QmEAdQBvU3asMfAxGdiZAKRRFf93FRwR\\n\" +\n+            \"2QLBACkGjbIImjfZEwAAAW1d13cSAAAEAwBGMEQCIFLqxvNOKVFlTjHPXwk93VeW\\n\" +\n+            \"zCqFtcxJkunD\/iiv0Kn9AiBoyvUrjYn4MPTht9zb0OyaSMWb00\/HXP\/4AVmUzHrz\\n\" +\n+            \"YzANBgkqhkiG9w0BAQsFAAOCAQEAsmQAOn1f1CbvnOpggS2efmy1pQXvvw+YeCYP\\n\" +\n+            \"bElO578h7scn8al4N7huQZ\/z14BELe0chGWNA\/ReW5nAu3SUOiv+E8\/kv9i9Y8ul\\n\" +\n+            \"MJPL62nXW6Z\/mkyystuBNtON420iWL\/gS\/vduxSZE\/iBB4znctDpXS917\/XWf31Y\\n\" +\n+            \"ZonemF3MSfi\/s9V0Ic82ZY\/+HZ4NLTDyKRd4kFF58OoH9RZNb6g8MbTp+gPadiUG\\n\" +\n+            \"UcfPGV3yGiugQa7WHTl7QJ9ishyafiZ4hpeKem6TMDEztgGyLIZ4MSxQvoeI2jJP\\n\" +\n+            \"KjHd5fW\/HClbEcrN+w0a0MUNMaAOaZfMS7jS6sDpaVL8D0EX5A==\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -242,2 +281,2 @@\n-    \/\/ Owner: SERIALNUMBER=983163327, CN=revoked.business.ca23.ssl.buypass.no,\n-    \/\/ O=BUYPASS AS, L=OSLO, OID.2.5.4.17=0402, C=NO\n+    \/\/ Owner: SERIALNUMBER=983163327, CN=revoked.businessplus.ca23.ssl.buypass.no, O=BUYPASS AS,\n+    \/\/ L=OSLO, OID.2.5.4.17=0484, C=NO\n@@ -245,28 +284,38 @@\n-    private static final String REVOKED_CLASS_3 = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIE2DCCA8CgAwIBAgIKARno\/wYhPtNtmjANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\"\n-            + \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\"\n-            + \"FEJ1eXBhc3MgQ2xhc3MgMyBDQSAyMB4XDTEzMDIwMTA5MTE0NFoXDTE2MDIwMTA5\\n\"\n-            + \"MTE0NFowgYMxCzAJBgNVBAYTAk5PMQ0wCwYDVQQRDAQwNDAyMQ0wCwYDVQQHDARP\\n\"\n-            + \"U0xPMRMwEQYDVQQKDApCVVlQQVNTIEFTMS0wKwYDVQQDDCRyZXZva2VkLmJ1c2lu\\n\"\n-            + \"ZXNzLmNhMjMuc3NsLmJ1eXBhc3Mubm8xEjAQBgNVBAUTCTk4MzE2MzMyNzCCASIw\\n\"\n-            + \"DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMmBUI0wNCz4kLikR5wog4QTUEmO\\n\"\n-            + \"XoGgjnQv0cKfDogbewK+0ngdyyR8dZOqSauQTGLlPTpo6DEWpD3Jqrr444MV6Vc1\\n\"\n-            + \"AGWnjk3T+KT5tKl6qJOQq17Y+HEnsTEzCo1kieVygpSu7FBa2OnhHNmLWThhGUEi\\n\"\n-            + \"mLqrEyfjMSb9zacvo06Zr7S8BauLRB3aM5BeMVF7Bj\/9f\/FvnB\/y1cRDLG32WRCx\\n\"\n-            + \"K9IAFwCaJkfWsXx+bnaO4uEQwLFZ96p7L5mr+QNvI6QuweIY1hDM3RDM6HQkGTK9\\n\"\n-            + \"8iHSzGBSCGwOM24Ym3XM5vTbiV5uLno+QEYlJL\/+qbYvarbO2gPF+6A6M10CAwEA\\n\"\n-            + \"AaOCAYMwggF\/MAkGA1UdEwQCMAAwHwYDVR0jBBgwFoAUIjAu0vv2S8rAuDvSBMTp\\n\"\n-            + \"cuaXmwwwHQYDVR0OBBYEFNI2C2XKZkNRHZrHLkBhCMeDRN0KMA4GA1UdDwEB\/wQE\\n\"\n-            + \"AwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0gBBgwFjAK\\n\"\n-            + \"BghghEIBGgEDBDAIBgZngQwBAgIwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2Ny\\n\"\n-            + \"bC5idXlwYXNzLm5vL2NybC9CUENsYXNzM0NBMi5jcmwwLwYDVR0RBCgwJoIkcmV2\\n\"\n-            + \"b2tlZC5idXNpbmVzcy5jYTIzLnNzbC5idXlwYXNzLm5vMHUGCCsGAQUFBwEBBGkw\\n\"\n-            + \"ZzAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuYnV5cGFzcy5uby9vY3NwL0JQT2Nz\\n\"\n-            + \"cDA1BggrBgEFBQcwAoYpaHR0cDovL2NydC5idXlwYXNzLm5vL2NydC9CUENsYXNz\\n\"\n-            + \"M0NBMi5jZXIwDQYJKoZIhvcNAQELBQADggEBAGNQe9cgrw\/mN7bChof205NRS+TH\\n\"\n-            + \"A8f0JcKk1KrPYYW+ilyp6j3My26Sm9a4ZyKRhAS8fCxYUXWzfNvJNFYv2ttLuegl\\n\"\n-            + \"SFfeXjSJJZW9+wC5oRLta++62UTTxXp0Zf5UkMsHZCIjvnk0yGWZa0phyRCH89ca\\n\"\n-            + \"4vfRTOGNTNfX3d0jm\/+fm70UNYHKZ\/VcxVj0vH2Ij\/kDUy7r2cw1gQ65RDUotnTu\\n\"\n-            + \"Yt59y3COyMZeYNMcuoss2XWnedFoD7fwCSkNqVbwjCxGVkL1+ivbWhqlCefaniZX\\n\"\n-            + \"Wy35oP1635RSxHbCMU9msmUO7FS8n1VH2edEC797gduK5pn2aBhy\/MW0unU=\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Serial number: 267cee3fab06c615fb27\n+    \/\/ Valid from: Mon Sep 23 04:56:56 PDT 2019 until: Thu Sep 23 14:59:00 PDT 2021\n+    private static final String REVOKED_CLASS_3 = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIGWDCCBUCgAwIBAgIKJnzuP6sGxhX7JzANBgkqhkiG9w0BAQsFADBLMQswCQYD\\n\" +\n+            \"VQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMM\\n\" +\n+            \"FEJ1eXBhc3MgQ2xhc3MgMyBDQSAyMB4XDTE5MDkyMzExNTY1NloXDTIxMDkyMzIx\\n\" +\n+            \"NTkwMFowgYcxCzAJBgNVBAYTAk5PMQ0wCwYDVQQRDAQwNDg0MQ0wCwYDVQQHDARP\\n\" +\n+            \"U0xPMRMwEQYDVQQKDApCVVlQQVNTIEFTMTEwLwYDVQQDDChyZXZva2VkLmJ1c2lu\\n\" +\n+            \"ZXNzcGx1cy5jYTIzLnNzbC5idXlwYXNzLm5vMRIwEAYDVQQFEwk5ODMxNjMzMjcw\\n\" +\n+            \"ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDtpNExWd+hjl\/ouL\/B\/pdc\\n\" +\n+            \"InUzEywQO3rzXs3psBdQ1lDhG\/9Fcq78uqyri4edtJNDGb1XadktKeRC+NtUqMkE\\n\" +\n+            \"IFOXvaVjLxa61c8K5mh3CVDrAiPyxVcnm8vkuQPMsy1BTOl9TZq9heIukG\/lcfzW\\n\" +\n+            \"6tU6mOD9yx1NzXSVN5cvDCbbDnEZiJSuazXI4O02as66SWI27WKsk21+SKCGAtGC\\n\" +\n+            \"kI0PW4FrXm43\/jxX1CoImIfTLkDInMq7HHsQRsGQ3OjbJLfRz\/2obyjHUU5ki6vd\\n\" +\n+            \"z16mA5ITLFIG36HxbPn337175R9RwOpWkN84xVlL3VQdznCVoiOjzBiOMpdm0Jwp\\n\" +\n+            \"AgMBAAGjggL\/MIIC+zAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFCIwLtL79kvKwLg7\\n\" +\n+            \"0gTE6XLml5sMMB0GA1UdDgQWBBSGUQTUB4BilG\/EMaHHDAYNPewf8zAOBgNVHQ8B\\n\" +\n+            \"Af8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB8GA1UdIAQY\\n\" +\n+            \"MBYwCgYIYIRCARoBAwQwCAYGZ4EMAQICMDoGA1UdHwQzMDEwL6AtoCuGKWh0dHA6\\n\" +\n+            \"Ly9jcmwuYnV5cGFzcy5uby9jcmwvQlBDbGFzczNDQTIuY3JsMDMGA1UdEQQsMCqC\\n\" +\n+            \"KHJldm9rZWQuYnVzaW5lc3NwbHVzLmNhMjMuc3NsLmJ1eXBhc3Mubm8wagYIKwYB\\n\" +\n+            \"BQUHAQEEXjBcMCMGCCsGAQUFBzABhhdodHRwOi8vb2NzcC5idXlwYXNzLmNvbTA1\\n\" +\n+            \"BggrBgEFBQcwAoYpaHR0cDovL2NydC5idXlwYXNzLm5vL2NydC9CUENsYXNzM0NB\\n\" +\n+            \"Mi5jZXIwggF\/BgorBgEEAdZ5AgQCBIIBbwSCAWsBaQB2ALvZ37wfinG1k5Qjl6qS\\n\" +\n+            \"e0c4V5UKq1LoGpCWZDaOHtGFAAABbV37Y7oAAAQDAEcwRQIgYbaNSR3R5x9p9sYJ\\n\" +\n+            \"UzRDdd\/lbELb05u9GqlLtl4M61YCIQCTBecXTbMs4zuG\/wu722HZy\/XgD6fiQySp\\n\" +\n+            \"FhHDO3CYagB2AKS5CZC0GFgUh7sTosxncAo8NZgE+RvfuON3zQ7IDdwQAAABbV37\\n\" +\n+            \"Y7wAAAQDAEcwRQIgD8j40M03oLMCg5WmFBN7VL6169F7rKatE12btLQRYtYCIQC0\\n\" +\n+            \"rDhQiZP7j14Y4JqEFQx6UHl3dvxLxZTDW34Z54IUWQB3AG9Tdqwx8DEZ2JkApFEV\\n\" +\n+            \"\/3cVHBHZAsEAKQaNsgiaN9kTAAABbV37YOUAAAQDAEgwRgIhANTGHD1g2pbsTtoN\\n\" +\n+            \"CJ2m6nfxm9jB3huftKGDjeo7EyxHAiEA3EYNUc6hr+4Q9lMAphUgpW6oyaNCsIzl\\n\" +\n+            \"izbNhq8dBRYwDQYJKoZIhvcNAQELBQADggEBADUuO4MmYjPkmkik5tjUPiiDDXEQ\\n\" +\n+            \"A41jr72qmdleYdkhnaKAJa8Enn6j\/ySRV0enA7yqJeNp1qgPQFvlOh3TqFB3Ae5b\\n\" +\n+            \"XAfL2B7vKbegpjKm8dVH5RurqVm9xZcXb1nbwfu2k3lqqsp\/uwqvLBItJDvA8pfi\\n\" +\n+            \"2R46sEtj2gFpAlKFDwepuaklqhrvEoIjIaAL0RrGfKY0oRQw1YMbPNIebsVaWr04\\n\" +\n+            \"rt6tlxrq7PyW1w9Mt3445WA1NzSWc7pAjFLfY6u87QaPHI4ES31H9xxRDsxmr6Y3\\n\" +\n+            \"BJmiWd5uUxev0nVw0saqvlo4yAEBq4rI\/DieKcQI4qEI8myzoS0R0azMfLM=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -280,6 +329,0 @@\n-        if (ocspEnabled) {\n-            \/\/ Revoked test certificate is expired\n-            \/\/ and backdated revocation check is only possible with OCSP\n-            pathValidator.setValidationDate(\"July 01, 2013\");\n-        }\n-\n@@ -289,1 +332,1 @@\n-                \"Wed Feb 06 02:56:32 PST 2013\", System.out);\n+                \"Mon Sep 23 04:57:31 PDT 2019\", System.out);\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/BuypassCA.java","additions":239,"deletions":196,"binary":false,"changes":435,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,4 +113,54 @@\n-    \/\/ Owner: CN=comodorsacertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL, O=Sectigo Limited,\n-    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford,\n-    \/\/ OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB,\n-    \/\/ SERIALNUMBER=04058690\n+    \/\/ Owner: CN=comodorsacertificationauthority-ev.comodoca.com,\n+    \/\/ O=Sectigo Limited, STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road,\n+    \/\/ L=Salford, ST=Manchester, OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization,\n+    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n+    \/\/ Issuer: CN=COMODO RSA Extended Validation Secure Server CA, O=COMODO CA Limited, L=Salford,\n+    \/\/ ST=Greater Manchester, C=GB\n+    \/\/ Serial number: 9eb246629030e0b527ca2f93e5ebf25a\n+    \/\/ Valid from: Mon Mar 01 16:00:00 PST 2021 until: Sat Apr 02 16:59:59 PDT 2022\n+    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIHSzCCBjOgAwIBAgIRAJ6yRmKQMOC1J8ovk+Xr8lowDQYJKoZIhvcNAQELBQAw\\n\" +\n+            \"gZIxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO\\n\" +\n+            \"BgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMTgwNgYD\\n\" +\n+            \"VQQDEy9DT01PRE8gUlNBIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZl\\n\" +\n+            \"ciBDQTAeFw0yMTAzMDIwMDAwMDBaFw0yMjA0MDIyMzU5NTlaMIIBNzERMA8GA1UE\\n\" +\n+            \"BRMIMDQwNTg2OTAxEzARBgsrBgEEAYI3PAIBAxMCR0IxHTAbBgNVBA8TFFByaXZh\\n\" +\n+            \"dGUgT3JnYW5pemF0aW9uMQswCQYDVQQGEwJHQjEPMA0GA1UEERMGTTUgM0VRMRMw\\n\" +\n+            \"EQYDVQQIEwpNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRYwFAYDVQQJEw1U\\n\" +\n+            \"cmFmZm9yZCBSb2FkMRYwFAYDVQQJEw1FeGNoYW5nZSBRdWF5MSUwIwYDVQQJExwz\\n\" +\n+            \"cmQgRmxvb3IsIDI2IE9mZmljZSBWaWxsYWdlMRgwFgYDVQQKEw9TZWN0aWdvIExp\\n\" +\n+            \"bWl0ZWQxODA2BgNVBAMTL2NvbW9kb3JzYWNlcnRpZmljYXRpb25hdXRob3JpdHkt\\n\" +\n+            \"ZXYuY29tb2RvY2EuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n\" +\n+            \"0P95lAFOOkEOy614rCX7OlOK0Xy0nPAcCFxAcLYBosX8YmXWuePHg596UyEqE3U5\\n\" +\n+            \"30pTqiccY53bDiYPgSJgr1OlfC7BPLN+QKaeSrFmNgrcoAk3TXejgv7zLXOwZVS6\\n\" +\n+            \"Wk38Z8xrFNvhd2Z5J6RM\/3U+HDfF7OKMGrexr77Ws7lEFpPUgd4eEe+IL1Y2sbwI\\n\" +\n+            \"iD+PkzIL2LjctkeJFcsRHUvNP8wIhGyIbkARuJhdXkE13lKKIe0EnWrRkkf4DEvY\\n\" +\n+            \"RFpPjVUKmluhnBOGYkYaiTL0VaOnrPxToSfHR8Awkhk0TNbosAkUo8TKcRTTTiMU\\n\" +\n+            \"UIS6Y9SqoILiiDG6WmFjzQIDAQABo4IC8jCCAu4wHwYDVR0jBBgwFoAUOdr\/yigU\\n\" +\n+            \"iqh0Ewi55A6p0vp+nWkwHQYDVR0OBBYEFD5LhmEivA6h4az0EFPi5erz1TH+MA4G\\n\" +\n+            \"A1UdDwEB\/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMB\\n\" +\n+            \"BggrBgEFBQcDAjBJBgNVHSAEQjBAMDUGDCsGAQQBsjEBAgEFATAlMCMGCCsGAQUF\\n\" +\n+            \"BwIBFhdodHRwczovL3NlY3RpZ28uY29tL0NQUzAHBgVngQwBATBWBgNVHR8ETzBN\\n\" +\n+            \"MEugSaBHhkVodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9SU0FFeHRlbmRl\\n\" +\n+            \"ZFZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5jcmwwgYcGCCsGAQUFBwEBBHsweTBR\\n\" +\n+            \"BggrBgEFBQcwAoZFaHR0cDovL2NydC5jb21vZG9jYS5jb20vQ09NT0RPUlNBRXh0\\n\" +\n+            \"ZW5kZWRWYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3J0MCQGCCsGAQUFBzABhhho\\n\" +\n+            \"dHRwOi8vb2NzcC5jb21vZG9jYS5jb20wOgYDVR0RBDMwMYIvY29tb2RvcnNhY2Vy\\n\" +\n+            \"dGlmaWNhdGlvbmF1dGhvcml0eS1ldi5jb21vZG9jYS5jb20wggEEBgorBgEEAdZ5\\n\" +\n+            \"AgQCBIH1BIHyAPAAdgBGpVXrdfqRIDC1oolp9PN9ESxBdL79SbiFq\/L8cP5tRwAA\\n\" +\n+            \"AXfyqEfyAAAEAwBHMEUCIQDJbHPgbqK21\/Nugwl5mgMO81YQSHOm4VcQ8UvOJjnN\\n\" +\n+            \"JQIgWw9fortwJBtv2Mts6xJYr5D6itPpEYP8uegURneBwRsAdgBvU3asMfAxGdiZ\\n\" +\n+            \"AKRRFf93FRwR2QLBACkGjbIImjfZEwAAAXfyqEjyAAAEAwBHMEUCIDifAsuw37D4\\n\" +\n+            \"beHZ9Ed5\/Pab0Eg6Cobrh4jv3bjfA6KIAiEAmiA\/XD+AccfI85c+C2zH9wNIs+Zm\\n\" +\n+            \"\/V\/uo\/sv0i9eCAYwDQYJKoZIhvcNAQELBQADggEBADRFnOFgb3mzCUpXxiU5\/mM5\\n\" +\n+            \"ECRj3NzXKXjcYlSMhVcWA7Eqa5rhJuh11vbPoDQzQcGxntS\/zhRwJFRF3hnyFa3m\\n\" +\n+            \"4t+7ZnUaJN+GOMTABh4kYiOSpE9id12URdJzWv2IHg4CU3OLnsBHGh7H9eWfbPvn\\n\" +\n+            \"OW4owV1ChpiEHh40i\/NQkTn9JzjlZepI9+EsSdhn2tpis7tko6PX\/plgw8bRgm7f\\n\" +\n+            \"ong2QaX\/DE6z4VIdomW8TQhB9turhKxwjzPTbtYDQIgZfRP\/H1S5jYutqbE5yL5B\\n\" +\n+            \"r+VOiSuB8234P4xWg1IBL2EFbxPdgOSMTWRJutUcj44kJKmwp5GUQtySSccw4gk=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n+    \/\/ Owner: CN=comodorsacertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL,\n+    \/\/ O=Sectigo Limited, STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road,\n+    \/\/ L=Salford, OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization,\n+    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n@@ -121,1 +171,1 @@\n-    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n@@ -166,54 +216,0 @@\n-    \/\/ Owner: CN=comodorsacertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL, O=Sectigo Limited,\n-    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford,\n-    \/\/ ST=Greater Manchester, OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization,\n-    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n-    \/\/ Issuer: CN=COMODO RSA Extended Validation Secure Server CA, O=COMODO CA Limited, L=Salford,\n-    \/\/ ST=Greater Manchester, C=GB\n-    \/\/ Serial number: d3df2597cbed1ab6e02ee82021771614\n-    \/\/ Valid from: Wed Nov 28 16:00:00 PST 2018 until: Fri Feb 26 15:59:59 PST 2021\n-    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n-            \"MIIH7jCCBtagAwIBAgIRANPfJZfL7Rq24C7oICF3FhQwDQYJKoZIhvcNAQELBQAw\\n\" +\n-            \"gZIxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO\\n\" +\n-            \"BgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMTgwNgYD\\n\" +\n-            \"VQQDEy9DT01PRE8gUlNBIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZl\\n\" +\n-            \"ciBDQTAeFw0xODExMjkwMDAwMDBaFw0yMTAyMjYyMzU5NTlaMIIBWzERMA8GA1UE\\n\" +\n-            \"BRMIMDQwNTg2OTAxEzARBgsrBgEEAYI3PAIBAxMCR0IxHTAbBgNVBA8TFFByaXZh\\n\" +\n-            \"dGUgT3JnYW5pemF0aW9uMQswCQYDVQQGEwJHQjEPMA0GA1UEERMGTTUgM0VRMRsw\\n\" +\n-            \"GQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxFjAU\\n\" +\n-            \"BgNVBAkTDVRyYWZmb3JkIFJvYWQxFjAUBgNVBAkTDUV4Y2hhbmdlIFF1YXkxJTAj\\n\" +\n-            \"BgNVBAkTHDNyZCBGbG9vciwgMjYgT2ZmaWNlIFZpbGxhZ2UxGDAWBgNVBAoTD1Nl\\n\" +\n-            \"Y3RpZ28gTGltaXRlZDEaMBgGA1UECxMRQ09NT0RPIEVWIFNHQyBTU0wxODA2BgNV\\n\" +\n-            \"BAMTL2NvbW9kb3JzYWNlcnRpZmljYXRpb25hdXRob3JpdHktZXYuY29tb2RvY2Eu\\n\" +\n-            \"Y29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0P95lAFOOkEOy614\\n\" +\n-            \"rCX7OlOK0Xy0nPAcCFxAcLYBosX8YmXWuePHg596UyEqE3U530pTqiccY53bDiYP\\n\" +\n-            \"gSJgr1OlfC7BPLN+QKaeSrFmNgrcoAk3TXejgv7zLXOwZVS6Wk38Z8xrFNvhd2Z5\\n\" +\n-            \"J6RM\/3U+HDfF7OKMGrexr77Ws7lEFpPUgd4eEe+IL1Y2sbwIiD+PkzIL2LjctkeJ\\n\" +\n-            \"FcsRHUvNP8wIhGyIbkARuJhdXkE13lKKIe0EnWrRkkf4DEvYRFpPjVUKmluhnBOG\\n\" +\n-            \"YkYaiTL0VaOnrPxToSfHR8Awkhk0TNbosAkUo8TKcRTTTiMUUIS6Y9SqoILiiDG6\\n\" +\n-            \"WmFjzQIDAQABo4IDcTCCA20wHwYDVR0jBBgwFoAUOdr\/yigUiqh0Ewi55A6p0vp+\\n\" +\n-            \"nWkwHQYDVR0OBBYEFD5LhmEivA6h4az0EFPi5erz1TH+MA4GA1UdDwEB\/wQEAwIF\\n\" +\n-            \"oDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBP\\n\" +\n-            \"BgNVHSAESDBGMDsGDCsGAQQBsjEBAgEFATArMCkGCCsGAQUFBwIBFh1odHRwczov\\n\" +\n-            \"L3NlY3VyZS5jb21vZG8uY29tL0NQUzAHBgVngQwBATBWBgNVHR8ETzBNMEugSaBH\\n\" +\n-            \"hkVodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9SU0FFeHRlbmRlZFZhbGlk\\n\" +\n-            \"YXRpb25TZWN1cmVTZXJ2ZXJDQS5jcmwwgYcGCCsGAQUFBwEBBHsweTBRBggrBgEF\\n\" +\n-            \"BQcwAoZFaHR0cDovL2NydC5jb21vZG9jYS5jb20vQ09NT0RPUlNBRXh0ZW5kZWRW\\n\" +\n-            \"YWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3J0MCQGCCsGAQUFBzABhhhodHRwOi8v\\n\" +\n-            \"b2NzcC5jb21vZG9jYS5jb20wOgYDVR0RBDMwMYIvY29tb2RvcnNhY2VydGlmaWNh\\n\" +\n-            \"dGlvbmF1dGhvcml0eS1ldi5jb21vZG9jYS5jb20wggF9BgorBgEEAdZ5AgQCBIIB\\n\" +\n-            \"bQSCAWkBZwB1AO5Lvbd1zmC64UJpH6vhnmajD35fsHLYgwDEe4l6qP3LAAABZ2Bx\\n\" +\n-            \"+EAAAAQDAEYwRAIgXot8xi2N4oV6A8n2aXJ\/TI6oI5t30ZgiyR3jF8nY8tYCIGBB\\n\" +\n-            \"e7sTFniA3vzfxhMbYsyAEy50PNFCaqLjNoyOaGNqAHYAb1N2rDHwMRnYmQCkURX\/\\n\" +\n-            \"dxUcEdkCwQApBo2yCJo32RMAAAFnYHH4LQAABAMARzBFAiBq8utPzn0fL5zPPQNB\\n\" +\n-            \"gueIXEFDXPw8s5D+pzD6+ySwegIhAJUCgsW++nO2JwYNwJTxPsHOWs7WpXqXCsVC\\n\" +\n-            \"\/FlJ1HHbAHYAu9nfvB+KcbWTlCOXqpJ7RzhXlQqrUugakJZkNo4e0YUAAAFnYHH4\\n\" +\n-            \"OAAABAMARzBFAiA7rSUo9XVQDb3CBLo85qFMzYzsylF223s0u4WXQTUGqQIhAKJq\\n\" +\n-            \"j602nEd4imaE9Wr7OWdIbbhLcNm5dhVZerk4MD6GMA0GCSqGSIb3DQEBCwUAA4IB\\n\" +\n-            \"AQBPeidaCGBGyFDK60+Eh8GyKQSMowcRA74B6C+JlQYTBtl024xAV7d3fnbULtzY\\n\" +\n-            \"rs5EGxlEPIR\/ZLAETTdEi1mAalXAi2l1QDrmTeOGW+FZXlcXQuNeg56D9gkApftR\\n\" +\n-            \"yFFRLNScchNDsMwR3UOlJnD05DJk1J+SeNvOlefwfDHIlZBiQIrSxdWS8GIIkKLp\\n\" +\n-            \"4PIy+N4lgNEudi2LuRheEjmrkN9+NcKlU+v7lzlwCfWCDna2hacGRPRo5fAao5O0\\n\" +\n-            \"mlUzAYm76dn5dGGBVVqA0cfWnUeVfSTrlVb\/QN+uYno4vIrpR5VBYPuJYU47vgzL\\n\" +\n-            \"YrTYerPngjPbZB0bfLOja0vb\\n\" +\n-            \"-----END CERTIFICATE-----\";\n-\n@@ -228,1 +224,1 @@\n-                \"Wed Oct 02 06:06:24 PDT 2019\", System.out);\n+                \"Tue Mar 02 02:51:39 PST 2021\", System.out);\n@@ -263,0 +259,41 @@\n+    \/\/ Owner: CN=comodoecccertificationauthority-ev.comodoca.com, O=Sectigo Limited, STREET=\"3rd Floor,\n+    \/\/ 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford, ST=Manchester, OID.2.5.4.17=M5 3EQ,\n+    \/\/ C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n+    \/\/ Issuer: CN=COMODO ECC Extended Validation Secure Server CA, O=COMODO CA Limited, L=Salford,\n+    \/\/ ST=Greater Manchester, C=GB\n+    \/\/ Serial number: db437a31e5be29a62443e3caa1479001\n+    \/\/ Valid from: Mon Mar 01 16:00:00 PST 2021 until: Sat Apr 02 16:59:59 PDT 2022\n+    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIFvzCCBWWgAwIBAgIRANtDejHlvimmJEPjyqFHkAEwCgYIKoZIzj0EAwIwgZIx\\n\" +\n+            \"CzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNV\\n\" +\n+            \"BAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMTgwNgYDVQQD\\n\" +\n+            \"Ey9DT01PRE8gRUNDIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBD\\n\" +\n+            \"QTAeFw0yMTAzMDIwMDAwMDBaFw0yMjA0MDIyMzU5NTlaMIIBNzERMA8GA1UEBRMI\\n\" +\n+            \"MDQwNTg2OTAxEzARBgsrBgEEAYI3PAIBAxMCR0IxHTAbBgNVBA8TFFByaXZhdGUg\\n\" +\n+            \"T3JnYW5pemF0aW9uMQswCQYDVQQGEwJHQjEPMA0GA1UEERMGTTUgM0VRMRMwEQYD\\n\" +\n+            \"VQQIEwpNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRYwFAYDVQQJEw1UcmFm\\n\" +\n+            \"Zm9yZCBSb2FkMRYwFAYDVQQJEw1FeGNoYW5nZSBRdWF5MSUwIwYDVQQJExwzcmQg\\n\" +\n+            \"Rmxvb3IsIDI2IE9mZmljZSBWaWxsYWdlMRgwFgYDVQQKEw9TZWN0aWdvIExpbWl0\\n\" +\n+            \"ZWQxODA2BgNVBAMTL2NvbW9kb2VjY2NlcnRpZmljYXRpb25hdXRob3JpdHktZXYu\\n\" +\n+            \"Y29tb2RvY2EuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEt26qBS7TRu\/y\\n\" +\n+            \"fR+RiqLAzW2C+UspFZlORc4EhLfNYMgFkoZKjEnwJzudH6a+uRPqPOhPgUd6PFfR\\n\" +\n+            \"QFOcLjmhgaOCAvIwggLuMB8GA1UdIwQYMBaAFNNOwxm6WFnRHGC3YVNHO6d3j\/iK\\n\" +\n+            \"MB0GA1UdDgQWBBTpZ0tzKscFw6Z3vCEDFzGR5VSkVzAOBgNVHQ8BAf8EBAMCBYAw\\n\" +\n+            \"DAYDVR0TAQH\/BAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwSQYD\\n\" +\n+            \"VR0gBEIwQDA1BgwrBgEEAbIxAQIBBQEwJTAjBggrBgEFBQcCARYXaHR0cHM6Ly9z\\n\" +\n+            \"ZWN0aWdvLmNvbS9DUFMwBwYFZ4EMAQEwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDov\\n\" +\n+            \"L2NybC5jb21vZG9jYS5jb20vQ09NT0RPRUNDRXh0ZW5kZWRWYWxpZGF0aW9uU2Vj\\n\" +\n+            \"dXJlU2VydmVyQ0EuY3JsMIGHBggrBgEFBQcBAQR7MHkwUQYIKwYBBQUHMAKGRWh0\\n\" +\n+            \"dHA6Ly9jcnQuY29tb2RvY2EuY29tL0NPTU9ET0VDQ0V4dGVuZGVkVmFsaWRhdGlv\\n\" +\n+            \"blNlY3VyZVNlcnZlckNBLmNydDAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuY29t\\n\" +\n+            \"b2RvY2EuY29tMDoGA1UdEQQzMDGCL2NvbW9kb2VjY2NlcnRpZmljYXRpb25hdXRo\\n\" +\n+            \"b3JpdHktZXYuY29tb2RvY2EuY29tMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHYA\\n\" +\n+            \"RqVV63X6kSAwtaKJafTzfREsQXS+\/Um4havy\/HD+bUcAAAF38qtH4AAABAMARzBF\\n\" +\n+            \"AiBsKoB1TTfoUYUNqF160\/vlOENHyK1zzARcnfGKYURHTwIhANKYWg1CO7jyCPk+\\n\" +\n+            \"IrrLaR+461snNK4LJZXJm4o\/9GeeAHYAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQAp\\n\" +\n+            \"Bo2yCJo32RMAAAF38qtJIAAABAMARzBFAiEA1hgxkYZb5Tc9+vQsDnsfXVewClN2\\n\" +\n+            \"7gzwd4hZdqAsOSYCID9CWcBvkKrL44mfe9ky1Z6BnAWHUBMCxTjt8MO\/IMZ8MAoG\\n\" +\n+            \"CCqGSM49BAMCA0gAMEUCIBa3sfOiVb0q4LcXU9umKjzVw3Ib8VdiPTtXSnyl0oLb\\n\" +\n+            \"AiEAnpRB53UtLAF7xw98ELmK\/LEk1b5KSlqoO8sFHgwQ8vI=\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n@@ -264,3 +301,2 @@\n-    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford,\n-    \/\/ OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB,\n-    \/\/ SERIALNUMBER=04058690\n+    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford, OID.2.5.4.17=M5 3EQ,\n+    \/\/ C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n@@ -271,1 +307,1 @@\n-    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n@@ -308,46 +344,0 @@\n-    \/\/ Owner: CN=comodoecccertificationauthority-ev.comodoca.com, OU=COMODO EV SSL, O=Sectigo Limited,\n-    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford,\n-    \/\/ ST=Greater Manchester, OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization,\n-    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n-    \/\/ Issuer: CN=COMODO ECC Extended Validation Secure Server CA, O=COMODO CA Limited, L=Salford,\n-    \/\/ ST=Greater Manchester, C=GB\n-    \/\/ Serial number: 603a5c2f85b63e00ba46ce8c3f6000b0\n-    \/\/ Valid from: Wed Nov 28 16:00:00 PST 2018 until: Fri Feb 26 15:59:59 PST 2021\n-    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n-            \"MIIGXzCCBgWgAwIBAgIQYDpcL4W2PgC6Rs6MP2AAsDAKBggqhkjOPQQDAjCBkjEL\\n\" +\n-            \"MAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE\\n\" +\n-            \"BxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxODA2BgNVBAMT\\n\" +\n-            \"L0NPTU9ETyBFQ0MgRXh0ZW5kZWQgVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENB\\n\" +\n-            \"MB4XDTE4MTEyOTAwMDAwMFoXDTIxMDIyNjIzNTk1OVowggFXMREwDwYDVQQFEwgw\\n\" +\n-            \"NDA1ODY5MDETMBEGCysGAQQBgjc8AgEDEwJHQjEdMBsGA1UEDxMUUHJpdmF0ZSBP\\n\" +\n-            \"cmdhbml6YXRpb24xCzAJBgNVBAYTAkdCMQ8wDQYDVQQREwZNNSAzRVExGzAZBgNV\\n\" +\n-            \"BAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEWMBQGA1UE\\n\" +\n-            \"CRMNVHJhZmZvcmQgUm9hZDEWMBQGA1UECRMNRXhjaGFuZ2UgUXVheTElMCMGA1UE\\n\" +\n-            \"CRMcM3JkIEZsb29yLCAyNiBPZmZpY2UgVmlsbGFnZTEYMBYGA1UEChMPU2VjdGln\\n\" +\n-            \"byBMaW1pdGVkMRYwFAYDVQQLEw1DT01PRE8gRVYgU1NMMTgwNgYDVQQDEy9jb21v\\n\" +\n-            \"ZG9lY2NjZXJ0aWZpY2F0aW9uYXV0aG9yaXR5LWV2LmNvbW9kb2NhLmNvbTBZMBMG\\n\" +\n-            \"ByqGSM49AgEGCCqGSM49AwEHA0IABLduqgUu00bv8n0fkYqiwM1tgvlLKRWZTkXO\\n\" +\n-            \"BIS3zWDIBZKGSoxJ8Cc7nR+mvrkT6jzoT4FHejxX0UBTnC45oYGjggNzMIIDbzAf\\n\" +\n-            \"BgNVHSMEGDAWgBTTTsMZulhZ0Rxgt2FTRzund4\/4ijAdBgNVHQ4EFgQU6WdLcyrH\\n\" +\n-            \"BcOmd7whAxcxkeVUpFcwDgYDVR0PAQH\/BAQDAgWAMAwGA1UdEwEB\/wQCMAAwHQYD\\n\" +\n-            \"VR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCME8GA1UdIARIMEYwOwYMKwYBBAGy\\n\" +\n-            \"MQECAQUBMCswKQYIKwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5jb20v\\n\" +\n-            \"Q1BTMAcGBWeBDAEBMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwuY29tb2Rv\\n\" +\n-            \"Y2EuY29tL0NPTU9ET0VDQ0V4dGVuZGVkVmFsaWRhdGlvblNlY3VyZVNlcnZlckNB\\n\" +\n-            \"LmNybDCBhwYIKwYBBQUHAQEEezB5MFEGCCsGAQUFBzAChkVodHRwOi8vY3J0LmNv\\n\" +\n-            \"bW9kb2NhLmNvbS9DT01PRE9FQ0NFeHRlbmRlZFZhbGlkYXRpb25TZWN1cmVTZXJ2\\n\" +\n-            \"ZXJDQS5jcnQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmNvbW9kb2NhLmNvbTA6\\n\" +\n-            \"BgNVHREEMzAxgi9jb21vZG9lY2NjZXJ0aWZpY2F0aW9uYXV0aG9yaXR5LWV2LmNv\\n\" +\n-            \"bW9kb2NhLmNvbTCCAX8GCisGAQQB1nkCBAIEggFvBIIBawFpAHYA7ku9t3XOYLrh\\n\" +\n-            \"Qmkfq+GeZqMPfl+wctiDAMR7iXqo\/csAAAFnYHQLpwAABAMARzBFAiB0pm9GZG\/W\\n\" +\n-            \"REFW\/umEd07eSzGsPZpRkOXahkiAmXiuxgIhAOiYZKB4Gr4JlAuQsajqbrS715L9\\n\" +\n-            \"03E7walRViBHMA3XAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMA\\n\" +\n-            \"AAFnYHQLmwAABAMASDBGAiEAqUN6xU8mcNaYExuxUSZQR1WP5SZrgrDnAl+DN4t3\\n\" +\n-            \"R1MCIQCJseJMXtpzP2jB1d1sz\/WS6pDERjutjYc0ko\/\/m+WjlAB2ALvZ37wfinG1\\n\" +\n-            \"k5Qjl6qSe0c4V5UKq1LoGpCWZDaOHtGFAAABZ2B0C6cAAAQDAEcwRQIgI42QfFzd\\n\" +\n-            \"f9W0a383BnL3nGgLQinrd7usIbA81LwOvlECIQD+fmSDEs6lwsS5EGtIvygWMs2F\\n\" +\n-            \"7FWI1I8ucE0ikP+wCjAKBggqhkjOPQQDAgNIADBFAiB3P9kNVyLpA8tovSGeRvdx\\n\" +\n-            \"VfA0Slz\/\/EIeeHhbHz7D\/AIhAN+WFuDimGKE1XcKrmucSBLSrYGWlY8XJcF6en3v\\n\" +\n-            \"KOC7\\n\" +\n-            \"-----END CERTIFICATE-----\";\n-\n@@ -362,1 +352,1 @@\n-                \"Wed Oct 02 06:05:57 PDT 2019\", System.out);\n+                \"Tue Mar 02 02:53:40 PST 2021\", System.out);\n@@ -373,1 +363,1 @@\n-    private static final String INT_VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+    private static final String INT = \"-----BEGIN CERTIFICATE-----\\n\" +\n@@ -410,41 +400,49 @@\n-    \/\/ Owner: CN=USERTrust RSA Extended Validation Secure Server CA,\n-    \/\/ O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US\n-    \/\/ Issuer: CN=USERTrust RSA Certification Authority, O=The USERTRUST Network,\n-    \/\/ L=Jersey City, ST=New Jersey, C=US\n-    \/\/ Serial number: f6bb751efa7d2e8368e606407334f83\n-    \/\/ Valid from: Sat Feb 11 16:00:00 PST 2012 until: Thu Feb 11 15:59:59 PST 2027\n-    private static final String INT_REVOKED = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIGGTCCBAGgAwIBAgIQD2u3Ue+n0ug2jmBkBzNPgzANBgkqhkiG9w0BAQwFADCB\\n\"\n-            + \"iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0pl\\n\"\n-            + \"cnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV\\n\"\n-            + \"BAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTIw\\n\"\n-            + \"MjEyMDAwMDAwWhcNMjcwMjExMjM1OTU5WjCBlTELMAkGA1UEBhMCVVMxEzARBgNV\\n\"\n-            + \"BAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU\\n\"\n-            + \"aGUgVVNFUlRSVVNUIE5ldHdvcmsxOzA5BgNVBAMTMlVTRVJUcnVzdCBSU0EgRXh0\\n\"\n-            + \"ZW5kZWQgVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENBMIIBIjANBgkqhkiG9w0B\\n\"\n-            + \"AQEFAAOCAQ8AMIIBCgKCAQEAlJwjjGNzAgMFwLu05RnhYFJS1PpbcyPH6VZOij+z\\n\"\n-            + \"PyvCILGvwXC8A+EgBthY080+kIlSxrNyOdnrUfNj8IsBtBlmtOF9nMWgD0Cb4HB1\\n\"\n-            + \"Y\/tCNas8IHMtKr6eI4nJa4NjPhTcST+GtC8r+bVGHk0QpX4LbT+Z8WeE7pXIOUGs\\n\"\n-            + \"9j66\/hsMwgnBxkQ9xXN0jhTFITUZfnCuM0vOo5hRYlCNtwD8iaHJPaKxYe6qHSKH\\n\"\n-            + \"WCBK7GUQiQRngry+YKLx3YtC3k\/NQIyhaTLY\/gUFi57kPcpZoa0h3RGfS9MpPFoe\\n\"\n-            + \"mk3rGH3jwjVFxR1ep1FtP\/kprzLaR1UL81gxENhWvZEWXQIDAQABo4IBbjCCAWow\\n\"\n-            + \"HwYDVR0jBBgwFoAUU3m\/WqorSs9UgOHYm8Cd8rIDZsswHQYDVR0OBBYEFC+BT+Jm\\n\"\n-            + \"+rxov5lDhFKJIDqC86SlMA4GA1UdDwEB\/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH\/\\n\"\n-            + \"AgEAMDoGA1UdIAQzMDEwLwYEVR0gADAnMCUGCCsGAQUFBwIBFhlodHRwczovL2Nw\\n\"\n-            + \"cy51c2VydHJ1c3QuY29tMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwudXNl\\n\"\n-            + \"cnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNy\\n\"\n-            + \"bDB2BggrBgEFBQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6Ly9jcnQudXNlcnRy\\n\"\n-            + \"dXN0LmNvbS9VU0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAlBggrBgEFBQcwAYYZ\\n\"\n-            + \"aHR0cDovL29jc3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAa2bX\\n\"\n-            + \"Xf22zjY\/QLzzdZwJ9JO86qH\/czwCFPK4o9Cb7rixQL9S7zHw1dm3n\/+Lx5kT9lqx\\n\"\n-            + \"wB0dqoZ8o0XwFgVcksGz7QRhEBjrB0nSUNYG8kuFaMxRWa9ze6Ovov44WDrq1uyF\\n\"\n-            + \"npi3eeQiwMr3xHmY76b1NX0WqvlTTFw4L5DrcIohBz1zKVkRp7LH\/s5vxjDECM+\/\\n\"\n-            + \"erdy1WTILNFv09gwz4iFyfu\/WmYYNUKlQJaSoUqja\/KHcqY8zYKKjq5o982Ji3Ti\\n\"\n-            + \"\/Odkx1NJA1Yf5ivDxxRFQmij6knL1pi1wgQxGjd67V3\/+HfHF7MCRWk8mXnT32B9\\n\"\n-            + \"1Hk3jm10GL0R6y\/XFsLhv0mGkmKD1vTP7vz1hdMLlVgxEs1k5dLMybtjUJ3LuENz\\n\"\n-            + \"avmZ\/G\/vOi284ZRo\/gA\/YjT5CeeWgI11IHbpRDAqKy4BWhmtIi11u12i9ftPxxrD\\n\"\n-            + \"\/VwHtC0hTTOBnYgbJAK9ZLvaJUBU22EimU4Jv3ELkeV7SWedbAdfjXolI1mCcAbq\\n\"\n-            + \"RgzRC+RaTloSmO2dWicDBW7KlRHmKZXrkDUAExSBY\/1j9HmNcYzWv4NCTtK7t0en\\n\"\n-            + \"gsE\/OP2b7zHrHWtC\/F1JwOCrH1JkbPA7c\/6nNJVY2AscGM16pIU89OL0Ez1PyZYG\\n\"\n-            + \"4fokbdNREXoShKClNIPbB5iY+WdSzb9CKLyb96g=\\n\"\n-            + \"-----END CERTIFICATE-----\";\n+    \/\/ Owner: CN=usertrustrsacertificationauthority-ev.comodoca.com, O=Sectigo Limited, STREET=\"3rd Floor,\n+    \/\/ 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford, ST=Manchester, OID.2.5.4.17=M5 3EQ,\n+    \/\/ C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n+    \/\/ Issuer: CN=Sectigo RSA Extended Validation Secure Server CA, O=Sectigo Limited, L=Salford,\n+    \/\/ ST=Greater Manchester, C=GB\n+    \/\/ Serial number: 4e484426dbfed0c222b2ed152465614a\n+    \/\/ Valid from: Mon Mar 01 16:00:00 PST 2021 until: Sat Apr 02 16:59:59 PDT 2022\n+    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIHTzCCBjegAwIBAgIQTkhEJtv+0MIisu0VJGVhSjANBgkqhkiG9w0BAQsFADCB\\n\" +\n+            \"kTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\\n\" +\n+            \"A1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMTkwNwYDVQQD\\n\" +\n+            \"EzBTZWN0aWdvIFJTQSBFeHRlbmRlZCBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIg\\n\" +\n+            \"Q0EwHhcNMjEwMzAyMDAwMDAwWhcNMjIwNDAyMjM1OTU5WjCCAToxETAPBgNVBAUT\\n\" +\n+            \"CDA0MDU4NjkwMRMwEQYLKwYBBAGCNzwCAQMTAkdCMR0wGwYDVQQPExRQcml2YXRl\\n\" +\n+            \"IE9yZ2FuaXphdGlvbjELMAkGA1UEBhMCR0IxDzANBgNVBBETBk01IDNFUTETMBEG\\n\" +\n+            \"A1UECBMKTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEWMBQGA1UECRMNVHJh\\n\" +\n+            \"ZmZvcmQgUm9hZDEWMBQGA1UECRMNRXhjaGFuZ2UgUXVheTElMCMGA1UECRMcM3Jk\\n\" +\n+            \"IEZsb29yLCAyNiBPZmZpY2UgVmlsbGFnZTEYMBYGA1UEChMPU2VjdGlnbyBMaW1p\\n\" +\n+            \"dGVkMTswOQYDVQQDEzJ1c2VydHJ1c3Ryc2FjZXJ0aWZpY2F0aW9uYXV0aG9yaXR5\\n\" +\n+            \"LWV2LmNvbW9kb2NhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\\n\" +\n+            \"AJ4f68XomMKS2uudXi7xp0fkRK4Q1pE2bamXB8PTsuyS9rhC8hD2zPr9Gs+NHAR0\\n\" +\n+            \"tG0GSWW1plzbpDFDEsCG+M+7fDl5cc\/br8RLn75agZeKngv89y6RQUURxHq6N8hi\\n\" +\n+            \"lcJKHtWj9j6u1HYvu4u3lWWXQNbYnMWVqP1AVPZsGyDmKn\/+Mc2ehvPdYSm\/jQLr\\n\" +\n+            \"hH8Rudr12ZfKHTE4Xx7g5ZH0u52TEAWjuNCiXkhAYa\/uUyEu3e7VlsnvxeqBENPn\\n\" +\n+            \"RwYhfT8mdXV6DvGrnv\/NJj\/tBTGE5kRbCh4HumY6I3x\/XC5UeZE6rT+U6oeRgUOM\\n\" +\n+            \"6d7siAQVOspSqfTzR5HsBlECAwEAAaOCAvUwggLxMB8GA1UdIwQYMBaAFCxp\/4DJ\\n\" +\n+            \"h5CuNOG050yThZlA6aeyMB0GA1UdDgQWBBR8+3Lw59S2HtjPs+KZcEJ+67fd\/DAO\\n\" +\n+            \"BgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH\/BAIwADAdBgNVHSUEFjAUBggrBgEFBQcD\\n\" +\n+            \"AQYIKwYBBQUHAwIwSQYDVR0gBEIwQDA1BgwrBgEEAbIxAQIBBQEwJTAjBggrBgEF\\n\" +\n+            \"BQcCARYXaHR0cHM6Ly9zZWN0aWdvLmNvbS9DUFMwBwYFZ4EMAQEwVgYDVR0fBE8w\\n\" +\n+            \"TTBLoEmgR4ZFaHR0cDovL2NybC5zZWN0aWdvLmNvbS9TZWN0aWdvUlNBRXh0ZW5k\\n\" +\n+            \"ZWRWYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3JsMIGGBggrBgEFBQcBAQR6MHgw\\n\" +\n+            \"UQYIKwYBBQUHMAKGRWh0dHA6Ly9jcnQuc2VjdGlnby5jb20vU2VjdGlnb1JTQUV4\\n\" +\n+            \"dGVuZGVkVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNydDAjBggrBgEFBQcwAYYX\\n\" +\n+            \"aHR0cDovL29jc3Auc2VjdGlnby5jb20wPQYDVR0RBDYwNIIydXNlcnRydXN0cnNh\\n\" +\n+            \"Y2VydGlmaWNhdGlvbmF1dGhvcml0eS1ldi5jb21vZG9jYS5jb20wggEFBgorBgEE\\n\" +\n+            \"AdZ5AgQCBIH2BIHzAPEAdwBGpVXrdfqRIDC1oolp9PN9ESxBdL79SbiFq\/L8cP5t\\n\" +\n+            \"RwAAAXfyrRCwAAAEAwBIMEYCIQCeOHfnABa6cl0EHTzyMj2t2qBqORBAC16hJIIl\\n\" +\n+            \"Y52W4QIhAKHDk1m9lW0kmcZJWEko3eA9QKJSDLNLpdUoBPzNNc76AHYAb1N2rDHw\\n\" +\n+            \"MRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAF38q0R6wAABAMARzBFAiEAywsh\\n\" +\n+            \"8Ki6fFOExwR6de0qzTmf7bJMuQcY0Ry463\/9R44CIDeAcX7Z9S1vlRB9gzVomNIN\\n\" +\n+            \"vkcnUazq7dowPnr5rYMOMA0GCSqGSIb3DQEBCwUAA4IBAQA3a+PBgH1SBVEDpgAN\\n\" +\n+            \"mWaqIQzJzMRfSgvopQ6nC8iD95SfYD\/rvic7aOeBLh\/5aEs\/CknJsg6o0qB3wz1v\\n\" +\n+            \"T5JXd5JldRWw3nP80jkIaYgq97RUIkjcHhuw4hTyQP6wk7XVlPVLvBo9ePWxJjmn\\n\" +\n+            \"whxlSyxQ5A5NdrTqZOJmu9nFr2HXpX75kGwCkUKZI050FAZZydsK3LfMBTqe1Xwi\\n\" +\n+            \"PKyjXDWd40LjOEg31sA43ofO8n2pySP5LG5XAsvoAyPCy3zXhx5cdtmQFLIkntus\\n\" +\n+            \"DCfN+n51HPUo8r4PUhQtOiRUB3K871LTdwyv4\/CRXS2fIhtO1pxYNKFOw0yrUf6j\\n\" +\n+            \"ECgk\\n\" +\n+            \"-----END CERTIFICATE-----\";\n@@ -454,2 +452,1 @@\n-    \/\/ OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB,\n-    \/\/ SERIALNUMBER=04058690\n+    \/\/ OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n@@ -460,1 +457,1 @@\n-    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n@@ -506,54 +503,0 @@\n-    \/\/ Owner: CN=usertrustrsacertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL, O=Sectigo Limited,\n-    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford,\n-    \/\/ ST=Greater Manchester, OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization,\n-    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n-    \/\/ Issuer: CN=USERTrust RSA Extended Validation Secure Server CA, O=The USERTRUST Network, L=Jersey City,\n-    \/\/ ST=New Jersey, C=US\n-    \/\/ Serial number: d3c204e8df6a1539568cf15e97e57b1d\n-    \/\/ Valid from: Wed Nov 28 16:00:00 PST 2018 until: Fri Feb 26 15:59:59 PST 2021\n-    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n-            \"MIIIADCCBuigAwIBAgIRANPCBOjfahU5VozxXpflex0wDQYJKoZIhvcNAQELBQAw\\n\" +\n-            \"gZUxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5MRQwEgYDVQQHEwtK\\n\" +\n-            \"ZXJzZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMTswOQYD\\n\" +\n-            \"VQQDEzJVU0VSVHJ1c3QgUlNBIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNl\\n\" +\n-            \"cnZlciBDQTAeFw0xODExMjkwMDAwMDBaFw0yMTAyMjYyMzU5NTlaMIIBXjERMA8G\\n\" +\n-            \"A1UEBRMIMDQwNTg2OTAxEzARBgsrBgEEAYI3PAIBAxMCR0IxHTAbBgNVBA8TFFBy\\n\" +\n-            \"aXZhdGUgT3JnYW5pemF0aW9uMQswCQYDVQQGEwJHQjEPMA0GA1UEERMGTTUgM0VR\\n\" +\n-            \"MRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQx\\n\" +\n-            \"FjAUBgNVBAkTDVRyYWZmb3JkIFJvYWQxFjAUBgNVBAkTDUV4Y2hhbmdlIFF1YXkx\\n\" +\n-            \"JTAjBgNVBAkTHDNyZCBGbG9vciwgMjYgT2ZmaWNlIFZpbGxhZ2UxGDAWBgNVBAoT\\n\" +\n-            \"D1NlY3RpZ28gTGltaXRlZDEaMBgGA1UECxMRQ09NT0RPIEVWIFNHQyBTU0wxOzA5\\n\" +\n-            \"BgNVBAMTMnVzZXJ0cnVzdHJzYWNlcnRpZmljYXRpb25hdXRob3JpdHktZXYuY29t\\n\" +\n-            \"b2RvY2EuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnh\/rxeiY\\n\" +\n-            \"wpLa651eLvGnR+RErhDWkTZtqZcHw9Oy7JL2uELyEPbM+v0az40cBHS0bQZJZbWm\\n\" +\n-            \"XNukMUMSwIb4z7t8OXlxz9uvxEufvlqBl4qeC\/z3LpFBRRHEero3yGKVwkoe1aP2\\n\" +\n-            \"Pq7Udi+7i7eVZZdA1ticxZWo\/UBU9mwbIOYqf\/4xzZ6G891hKb+NAuuEfxG52vXZ\\n\" +\n-            \"l8odMThfHuDlkfS7nZMQBaO40KJeSEBhr+5TIS7d7tWWye\/F6oEQ0+dHBiF9PyZ1\\n\" +\n-            \"dXoO8aue\/80mP+0FMYTmRFsKHge6ZjojfH9cLlR5kTqtP5Tqh5GBQ4zp3uyIBBU6\\n\" +\n-            \"ylKp9PNHkewGUQIDAQABo4IDfTCCA3kwHwYDVR0jBBgwFoAUL4FP4mb6vGi\/mUOE\\n\" +\n-            \"UokgOoLzpKUwHQYDVR0OBBYEFHz7cvDn1LYe2M+z4plwQn7rt938MA4GA1UdDwEB\\n\" +\n-            \"\/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEF\\n\" +\n-            \"BQcDAjBLBgNVHSAERDBCMDcGDCsGAQQBsjEBAgEFATAnMCUGCCsGAQUFBwIBFhlo\\n\" +\n-            \"dHRwczovL2Nwcy51c2VydHJ1c3QuY29tMAcGBWeBDAEBMFoGA1UdHwRTMFEwT6BN\\n\" +\n-            \"oEuGSWh0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FFeHRlbmRl\\n\" +\n-            \"ZFZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5jcmwwgY0GCCsGAQUFBwEBBIGAMH4w\\n\" +\n-            \"VQYIKwYBBQUHMAKGSWh0dHA6Ly9jcnQudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RS\\n\" +\n-            \"U0FFeHRlbmRlZFZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5jcnQwJQYIKwYBBQUH\\n\" +\n-            \"MAGGGWh0dHA6Ly9vY3NwLnVzZXJ0cnVzdC5jb20wPQYDVR0RBDYwNIIydXNlcnRy\\n\" +\n-            \"dXN0cnNhY2VydGlmaWNhdGlvbmF1dGhvcml0eS1ldi5jb21vZG9jYS5jb20wggGA\\n\" +\n-            \"BgorBgEEAdZ5AgQCBIIBcASCAWwBagB3AO5Lvbd1zmC64UJpH6vhnmajD35fsHLY\\n\" +\n-            \"gwDEe4l6qP3LAAABZ2ElLBIAAAQDAEgwRgIhAM33ah4mcEfxzv4a8+BLysZKJygV\\n\" +\n-            \"jeARvesL\/mH6y51bAiEA4hzW9aDRmEnuCcagONmIexMl0s3gMWfaU8\/0s4ESJecA\\n\" +\n-            \"dgBvU3asMfAxGdiZAKRRFf93FRwR2QLBACkGjbIImjfZEwAAAWdhJSwQAAAEAwBH\\n\" +\n-            \"MEUCIQDCZ7GZayfWD3blSOWgk8PrAs\/GVVpc5gJG3V+wq8LHMwIgH6n8DkoA46v1\\n\" +\n-            \"0UrmkVo7ND18ykuWyNH83QafsolTYSIAdwC72d+8H4pxtZOUI5eqkntHOFeVCqtS\\n\" +\n-            \"6BqQlmQ2jh7RhQAAAWdhJSwSAAAEAwBIMEYCIQC\/XcbvfZzEqDpUthm3gYzndaiB\\n\" +\n-            \"8djqlQ89Mo29WDMS8AIhAKcWwmE5F2SuoTojiO0pPC5w5T38uW0vTXzb+fkj+6d5\\n\" +\n-            \"MA0GCSqGSIb3DQEBCwUAA4IBAQAmq2kRR74802+YMB2AaqklGcFRCuBVxU\/ExbvE\\n\" +\n-            \"loNpNk64KH2eHwMK13ad0Lbc8\/LaVgIJPtPz87LNqu00kQh0DL\/kCnoO94+Z+usU\\n\" +\n-            \"ulQNYr8y3sg8+NZd9ui\/VQTOcXrlovL+mnJnTgsCUzNYcoBIPq7lHxtZv5MG99AR\\n\" +\n-            \"6NyGTG28Aw8ZByCzhaasDOyT4YwlfveVUtsx1jKUC+0e6IhsGhxADnYOnrDD0cNd\\n\" +\n-            \"4bgX6SkpM0MCg6Nc3X\/C4fo3WaSRM6FO4S98NY4g2DhNskT\/7TmX2DsPwS005t0r\\n\" +\n-            \"3Ld31zbQaywKdpCsT74\/hEBMfcDiP02mmtyrlqHD4R3tdYne\\n\" +\n-            \"-----END CERTIFICATE-----\";\n-\n@@ -562,1 +505,1 @@\n-        pathValidator.validate(new String[]{VALID, INT_VALID},\n+        pathValidator.validate(new String[]{VALID, INT},\n@@ -566,1 +509,1 @@\n-        pathValidator.validate(new String[]{REVOKED, INT_REVOKED},\n+        pathValidator.validate(new String[]{REVOKED, INT},\n@@ -568,1 +511,1 @@\n-                \"Wed Oct 02 06:07:12 PDT 2019\", System.out);\n+                \"Tue Mar 02 02:55:42 PST 2021\", System.out);\n@@ -579,1 +522,1 @@\n-    private static final String INT_VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+    private static final String INT = \"-----BEGIN CERTIFICATE-----\\n\" +\n@@ -603,31 +546,1 @@\n-    \/\/ Owner: CN=USERTrust ECC Extended Validation Secure Server CA, O=The USERTRUST Network,\n-    \/\/ L=Jersey City, ST=New Jersey, C=US\n-    \/\/ Issuer: CN=USERTrust ECC Certification Authority, O=The USERTRUST Network,\n-    \/\/ L=Jersey City, ST=New Jersey, C=US\n-    \/\/ Serial number: 3d09b24f5c08a7ce8eb85a51d3c1aa52\n-    \/\/ Valid from: Sun Apr 14 17:00:00 PDT 2013 until: Fri Apr 14 16:59:59 PDT 2028\n-    private static final String INT_REVOKED = \"-----BEGIN CERTIFICATE-----\\n\"\n-            + \"MIIDwTCCA0igAwIBAgIQPQmyT1wIp86OuFpR08GqUjAKBggqhkjOPQQDAzCBiDEL\\n\"\n-            + \"MAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNl\\n\"\n-            + \"eSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMT\\n\"\n-            + \"JVVTRVJUcnVzdCBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTMwNDE1\\n\"\n-            + \"MDAwMDAwWhcNMjgwNDE0MjM1OTU5WjCBlTELMAkGA1UEBhMCVVMxEzARBgNVBAgT\\n\"\n-            + \"Ck5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVUaGUg\\n\"\n-            + \"VVNFUlRSVVNUIE5ldHdvcmsxOzA5BgNVBAMTMlVTRVJUcnVzdCBFQ0MgRXh0ZW5k\\n\"\n-            + \"ZWQgVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENBMFkwEwYHKoZIzj0CAQYIKoZI\\n\"\n-            + \"zj0DAQcDQgAEkSRGk0F0N82ZCZ+kVZ\/StqVUiWRirw1ebViS06+j+HgS9xZKRGh7\\n\"\n-            + \"bqSas\/gNMyg1LZusGu5IvEmXmNC5hzOT06OCAYMwggF\/MB8GA1UdIwQYMBaAFDrh\\n\"\n-            + \"CYbUzxnClnZ0SXbc4DXGY2OaMB0GA1UdDgQWBBQqnFr5TqEw2kBLK+lL8fWc3AL5\\n\"\n-            + \"LjAOBgNVHQ8BAf8EBAMCAYYwEgYDVR0TAQH\/BAgwBgEB\/wIBADA\/BgNVHSAEODA2\\n\"\n-            + \"MDQGBFUdIAAwLDAqBggrBgEFBQcCARYeaHR0cHM6Ly9jcHMudHJ1c3QtcHJvdmlk\\n\"\n-            + \"ZXIuY29tMFUGA1UdHwROMEwwSqBIoEaGRGh0dHA6Ly9jcmwudHJ1c3QtcHJvdmlk\\n\"\n-            + \"ZXIuY29tL1VTRVJUcnVzdEVDQ0NlcnRpZmljYXRpb25BdXRob3JpdHkuY3JsMIGA\\n\"\n-            + \"BggrBgEFBQcBAQR0MHIwRAYIKwYBBQUHMAKGOGh0dHA6Ly9jcnQudHJ1c3QtcHJv\\n\"\n-            + \"dmlkZXIuY29tL1VTRVJUcnVzdEVDQ0FkZFRydXN0Q0EuY3J0MCoGCCsGAQUFBzAB\\n\"\n-            + \"hh5odHRwOi8vb2NzcC50cnVzdC1wcm92aWRlci5jb20wCgYIKoZIzj0EAwMDZwAw\\n\"\n-            + \"ZAIwSzIqrW8TN9\/aCfkhUtz0t8IIK+Z46z3wm+crwjThpQ\/VoPgTNbvP\/lGTi1xR\\n\"\n-            + \"qJvLAjBFa27l4uqeAQZHNJnIx1Mu9OXzoJelx1cYP7ToQUms\/g+PK77yImJcXUU3\\n\"\n-            + \"s1rWGRU=\\n\"\n-            + \"-----END CERTIFICATE-----\";\n-\n-    \/\/ Owner: CN=usertrustecccertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL, O=Sectigo Limited,\n+    \/\/ Owner: CN=usertrustecccertificationauthority-ev.comodoca.com, O=Sectigo Limited,\n@@ -635,2 +548,44 @@\n-    \/\/ OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB,\n-    \/\/ SERIALNUMBER=04058690\n+    \/\/ ST=Manchester, OID.2.5.4.17=M5 3EQ,\n+    \/\/ C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n+    \/\/ Issuer: CN=Sectigo ECC Extended Validation Secure Server CA, O=Sectigo Limited, L=Salford,\n+    \/\/ ST=Greater Manchester, C=GB\n+    \/\/ Serial number: 9aa5da67480446fd7bf408fd5fdaa1d8\n+    \/\/ Valid from: Mon Mar 01 16:00:00 PST 2021 until: Sat Apr 02 16:59:59 PDT 2022\n+    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+            \"MIIFwTCCBWigAwIBAgIRAJql2mdIBEb9e\/QI\/V\/aodgwCgYIKoZIzj0EAwIwgZEx\\n\" +\n+            \"CzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNV\\n\" +\n+            \"BAcTB1NhbGZvcmQxGDAWBgNVBAoTD1NlY3RpZ28gTGltaXRlZDE5MDcGA1UEAxMw\\n\" +\n+            \"U2VjdGlnbyBFQ0MgRXh0ZW5kZWQgVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENB\\n\" +\n+            \"MB4XDTIxMDMwMjAwMDAwMFoXDTIyMDQwMjIzNTk1OVowggE6MREwDwYDVQQFEwgw\\n\" +\n+            \"NDA1ODY5MDETMBEGCysGAQQBgjc8AgEDEwJHQjEdMBsGA1UEDxMUUHJpdmF0ZSBP\\n\" +\n+            \"cmdhbml6YXRpb24xCzAJBgNVBAYTAkdCMQ8wDQYDVQQREwZNNSAzRVExEzARBgNV\\n\" +\n+            \"BAgTCk1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxFjAUBgNVBAkTDVRyYWZm\\n\" +\n+            \"b3JkIFJvYWQxFjAUBgNVBAkTDUV4Y2hhbmdlIFF1YXkxJTAjBgNVBAkTHDNyZCBG\\n\" +\n+            \"bG9vciwgMjYgT2ZmaWNlIFZpbGxhZ2UxGDAWBgNVBAoTD1NlY3RpZ28gTGltaXRl\\n\" +\n+            \"ZDE7MDkGA1UEAxMydXNlcnRydXN0ZWNjY2VydGlmaWNhdGlvbmF1dGhvcml0eS1l\\n\" +\n+            \"di5jb21vZG9jYS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQtMl8R33Za\\n\" +\n+            \"WD6H8BW0+wybBf0+6+L5YYK\/eyAVGm6vwjLaQZWlcdFBMKfaP1qTLi0VAabs4baS\\n\" +\n+            \"UkD8wR568pVpo4IC8zCCAu8wHwYDVR0jBBgwFoAU78EqlQwy2vtzMNyKE9gVS\/cT\\n\" +\n+            \"6PgwHQYDVR0OBBYEFLOtYfOaIfDHZGubtKNELRR6A2srMA4GA1UdDwEB\/wQEAwIH\\n\" +\n+            \"gDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJ\\n\" +\n+            \"BgNVHSAEQjBAMDUGDCsGAQQBsjEBAgEFATAlMCMGCCsGAQUFBwIBFhdodHRwczov\\n\" +\n+            \"L3NlY3RpZ28uY29tL0NQUzAHBgVngQwBATBWBgNVHR8ETzBNMEugSaBHhkVodHRw\\n\" +\n+            \"Oi8vY3JsLnNlY3RpZ28uY29tL1NlY3RpZ29FQ0NFeHRlbmRlZFZhbGlkYXRpb25T\\n\" +\n+            \"ZWN1cmVTZXJ2ZXJDQS5jcmwwgYYGCCsGAQUFBwEBBHoweDBRBggrBgEFBQcwAoZF\\n\" +\n+            \"aHR0cDovL2NydC5zZWN0aWdvLmNvbS9TZWN0aWdvRUNDRXh0ZW5kZWRWYWxpZGF0\\n\" +\n+            \"aW9uU2VjdXJlU2VydmVyQ0EuY3J0MCMGCCsGAQUFBzABhhdodHRwOi8vb2NzcC5z\\n\" +\n+            \"ZWN0aWdvLmNvbTA9BgNVHREENjA0gjJ1c2VydHJ1c3RlY2NjZXJ0aWZpY2F0aW9u\\n\" +\n+            \"YXV0aG9yaXR5LWV2LmNvbW9kb2NhLmNvbTCCAQMGCisGAQQB1nkCBAIEgfQEgfEA\\n\" +\n+            \"7wB2AEalVet1+pEgMLWiiWn0830RLEF0vv1JuIWr8vxw\/m1HAAABd\/Kung0AAAQD\\n\" +\n+            \"AEcwRQIhAI16l52NctGAphhc6eh2kK2vO5QYk5nyouL3P6U\/gG\/dAiBfJRJ+iqE\/\\n\" +\n+            \"noco35RpNtlV4GABrwmw1I\/1R+L79VzwEAB1AG9Tdqwx8DEZ2JkApFEV\/3cVHBHZ\\n\" +\n+            \"AsEAKQaNsgiaN9kTAAABd\/KunvwAAAQDAEYwRAIgS+r3C10ua38DPJKvUJvW5bvL\\n\" +\n+            \"SCQ949n3sBJvhV6aXq4CIH\/oEGgvJmKtMEjVKUQg8TrZO6LwQ+0sYfL79Qvm8wL3\\n\" +\n+            \"MAoGCCqGSM49BAMCA0cAMEQCID4Q9cc8OQ9tmKnnKZyplPsPipI5apVGkBqFRUSt\\n\" +\n+            \"zzM3AiAw5tw3cv\/oabDsYdU+lmp5kZ\/S3Z97ANAAaHE0AfXe\/Q==\\n\" +\n+            \"-----END CERTIFICATE-----\";\n+\n+    \/\/ Owner: CN=usertrustecccertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL,\n+    \/\/ O=Sectigo Limited, STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road,\n+    \/\/ L=Salford, OID.2.5.4.17=M5 3EQ,\n+    \/\/ C=GB, OID.2.5.4.15=Private Organization, OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n@@ -641,1 +596,1 @@\n-    private static final String VALID = \"-----BEGIN CERTIFICATE-----\\n\" +\n+    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n@@ -678,46 +633,0 @@\n-    \/\/ Owner: CN=usertrustecccertificationauthority-ev.comodoca.com, OU=COMODO EV SGC SSL, O=Sectigo Limited,\n-    \/\/ STREET=\"3rd Floor, 26 Office Village\", STREET=Exchange Quay, STREET=Trafford Road, L=Salford,\n-    \/\/ ST=Greater Manchester, OID.2.5.4.17=M5 3EQ, C=GB, OID.2.5.4.15=Private Organization,\n-    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=GB, SERIALNUMBER=04058690\n-    \/\/ Issuer: CN=USERTrust ECC Extended Validation Secure Server CA, O=The USERTRUST Network, L=Jersey City,\n-    \/\/ ST=New Jersey, C=US\n-    \/\/ Serial number: ab1455f9833ae7783f95de8744181f6a\n-    \/\/ Valid from: Wed Nov 28 16:00:00 PST 2018 until: Fri Feb 26 15:59:59 PST 2021\n-    private static final String REVOKED = \"-----BEGIN CERTIFICATE-----\\n\" +\n-            \"MIIGhjCCBiygAwIBAgIRAKsUVfmDOud4P5Xeh0QYH2owCgYIKoZIzj0EAwIwgZUx\\n\" +\n-            \"CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5MRQwEgYDVQQHEwtKZXJz\\n\" +\n-            \"ZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMTswOQYDVQQD\\n\" +\n-            \"EzJVU0VSVHJ1c3QgRUNDIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZl\\n\" +\n-            \"ciBDQTAeFw0xODExMjkwMDAwMDBaFw0yMTAyMjYyMzU5NTlaMIIBXjERMA8GA1UE\\n\" +\n-            \"BRMIMDQwNTg2OTAxEzARBgsrBgEEAYI3PAIBAxMCR0IxHTAbBgNVBA8TFFByaXZh\\n\" +\n-            \"dGUgT3JnYW5pemF0aW9uMQswCQYDVQQGEwJHQjEPMA0GA1UEERMGTTUgM0VRMRsw\\n\" +\n-            \"GQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxFjAU\\n\" +\n-            \"BgNVBAkTDVRyYWZmb3JkIFJvYWQxFjAUBgNVBAkTDUV4Y2hhbmdlIFF1YXkxJTAj\\n\" +\n-            \"BgNVBAkTHDNyZCBGbG9vciwgMjYgT2ZmaWNlIFZpbGxhZ2UxGDAWBgNVBAoTD1Nl\\n\" +\n-            \"Y3RpZ28gTGltaXRlZDEaMBgGA1UECxMRQ09NT0RPIEVWIFNHQyBTU0wxOzA5BgNV\\n\" +\n-            \"BAMTMnVzZXJ0cnVzdGVjY2NlcnRpZmljYXRpb25hdXRob3JpdHktZXYuY29tb2Rv\\n\" +\n-            \"Y2EuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAELTJfEd92Wlg+h\/AVtPsM\\n\" +\n-            \"mwX9Puvi+WGCv3sgFRpur8Iy2kGVpXHRQTCn2j9aky4tFQGm7OG2klJA\/MEeevKV\\n\" +\n-            \"aaOCA48wggOLMB8GA1UdIwQYMBaAFCqcWvlOoTDaQEsr6Uvx9ZzcAvkuMB0GA1Ud\\n\" +\n-            \"DgQWBBSzrWHzmiHwx2Rrm7SjRC0UegNrKzAOBgNVHQ8BAf8EBAMCBYAwDAYDVR0T\\n\" +\n-            \"AQH\/BAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwUAYDVR0gBEkw\\n\" +\n-            \"RzA8BgwrBgEEAbIxAQIBBQEwLDAqBggrBgEFBQcCARYeaHR0cHM6Ly9jcHMudHJ1\\n\" +\n-            \"c3QtcHJvdmlkZXIuY29tMAcGBWeBDAEBMF8GA1UdHwRYMFYwVKBSoFCGTmh0dHA6\\n\" +\n-            \"Ly9jcmwudHJ1c3QtcHJvdmlkZXIuY29tL1VTRVJUcnVzdEVDQ0V4dGVuZGVkVmFs\\n\" +\n-            \"aWRhdGlvblNlY3VyZVNlcnZlckNBLmNybDCBmAYIKwYBBQUHAQEEgYswgYgwWgYI\\n\" +\n-            \"KwYBBQUHMAKGTmh0dHA6Ly9jcnQudHJ1c3QtcHJvdmlkZXIuY29tL1VTRVJUcnVz\\n\" +\n-            \"dEVDQ0V4dGVuZGVkVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNydDAqBggrBgEF\\n\" +\n-            \"BQcwAYYeaHR0cDovL29jc3AudHJ1c3QtcHJvdmlkZXIuY29tMD0GA1UdEQQ2MDSC\\n\" +\n-            \"MnVzZXJ0cnVzdGVjY2NlcnRpZmljYXRpb25hdXRob3JpdHktZXYuY29tb2RvY2Eu\\n\" +\n-            \"Y29tMIIBfQYKKwYBBAHWeQIEAgSCAW0EggFpAWcAdgDuS723dc5guuFCaR+r4Z5m\\n\" +\n-            \"ow9+X7By2IMAxHuJeqj9ywAAAWdhJc3KAAAEAwBHMEUCIQCPBqO6bw8GSm3HxUf5\\n\" +\n-            \"vRcv74BOEAwZxEr0+PyszJHDbQIgCDXHPzlznU2jbaPdbZ65OQ78mRL5aDDMt1vf\\n\" +\n-            \"\/foQr\/wAdQBvU3asMfAxGdiZAKRRFf93FRwR2QLBACkGjbIImjfZEwAAAWdhJc3B\\n\" +\n-            \"AAAEAwBGMEQCICIvBLk08NTaEWtKdH8xl2VjjYUo+yQmtdqwMiVMjEB8AiAc50at\\n\" +\n-            \"gCogvZhdlIlGAqg5oND0K74+iglilBVvuTcIoQB2ALvZ37wfinG1k5Qjl6qSe0c4\\n\" +\n-            \"V5UKq1LoGpCWZDaOHtGFAAABZ2ElzcsAAAQDAEcwRQIhALDnAxdhUQvt2HkslYbG\\n\" +\n-            \"J8mYzWbDSSoidZzF4EF4bredAiB3xrSKOKFdTF3KUFHJANqT0c6Xxmo5dVUtovwM\\n\" +\n-            \"QMb1vTAKBggqhkjOPQQDAgNIADBFAiEA2ZwNj\/BD8n2yR5BMBQvw7utv9XWrJvKQ\\n\" +\n-            \"11EPtBSCEhUCIBcyI0yl5dRff6+4x8IeCrLiAOYsfzM7Y\/a5uRKFnbYz\\n\" +\n-            \"-----END CERTIFICATE-----\";\n-\n@@ -726,1 +635,1 @@\n-        pathValidator.validate(new String[]{VALID, INT_VALID},\n+        pathValidator.validate(new String[]{VALID, INT},\n@@ -730,1 +639,1 @@\n-        pathValidator.validate(new String[]{REVOKED, INT_REVOKED},\n+        pathValidator.validate(new String[]{REVOKED, INT},\n@@ -732,1 +641,1 @@\n-                \"Wed Oct 02 06:06:50 PDT 2019\", System.out);\n+                \"Tue Mar 02 02:59:25 PST 2021\", System.out);\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/ComodoCA.java","additions":207,"deletions":298,"binary":false,"changes":505,"status":"modified"},{"patch":"@@ -119,2 +119,2 @@\n-    \/\/ Serial number: 3626488cf28e94f1719074128bbb58a7829\n-    \/\/ Valid from: Thu Apr 08 15:58:32 PDT 2021 until: Wed Jul 07 15:58:32 PDT 2021\n+    \/\/ Serial number: 4f1333011635d76d6356c5f1fb8a7273617\n+    \/\/ Valid from: Fri Jun 25 08:18:10 PDT 2021 until: Thu Sep 23 08:18:09 PDT 2021\n@@ -122,1 +122,1 @@\n-            \"MIIFSjCCBDKgAwIBAgISA2JkiM8o6U8XGQdBKLu1ingpMA0GCSqGSIb3DQEBCwUA\\n\" +\n+            \"MIIFSTCCBDGgAwIBAgISBPEzMBFjXXbWNWxfH7inJzYXMA0GCSqGSIb3DQEBCwUA\\n\" +\n@@ -124,1 +124,1 @@\n-            \"EwJSMzAeFw0yMTA0MDgyMjU4MzJaFw0yMTA3MDcyMjU4MzJaMC0xKzApBgNVBAMT\\n\" +\n+            \"EwJSMzAeFw0yMTA2MjUxNTE4MTBaFw0yMTA5MjMxNTE4MDlaMC0xKzApBgNVBAMT\\n\" +\n@@ -126,8 +126,8 @@\n-            \"DQEBAQUAA4IBDwAwggEKAoIBAQC1NecSgcQLX4K94pR0HBaUun8wi++lyNTGkpoY\\n\" +\n-            \"4xGB7M\/WMnJpR8Y+49sO6QSe7fyU18zMjunT3Z5ahQtQi27dGU+xS7KUJUZl2NSJ\\n\" +\n-            \"4MLf717cSbBmDBvZiqmuXmUuy5Ehhabk1jBx1NgsR9uqsJFyILPc9sEAKq6MwT7N\\n\" +\n-            \"CnaVW1QhpUB9F5Zlc8cmHuhMsyrxGTM3h6P7QeVpqBT91mBEukvWUb01eifk134v\\n\" +\n-            \"Sv1gXblr2bksHd9fiIoQvEUnSK9hXcRilDpOjaF5qkiNsQPpuEZqM56XyfOSeaCr\\n\" +\n-            \"1HtEYa5Y+SXZ4G4Jt4AZt44WKoDwika9Iex826rETvAFaiTFAgMBAAGjggJdMIIC\\n\" +\n-            \"WTAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC\\n\" +\n-            \"MAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFEwvrwbqSUpGjtFPPpoXpNO77gJuMB8G\\n\" +\n+            \"DQEBAQUAA4IBDwAwggEKAoIBAQCkCp4fq7FnN5lfAWX0vhCcyC5WO9TuU6ckuYYj\\n\" +\n+            \"8\/wQ8GQ\/FIl+vXCAmHIfIX14irQN8TISeVdMOP0C7sa73d3GSawX7qMaRhddXn7V\\n\" +\n+            \"EL+4CbHQ6qit5YkakwhHz9tKbYX16wPj+inn22kJVwi8iLbhYB9WWSvv7OyiNSHv\\n\" +\n+            \"nmlYUkMv8+9UhgPT4yCKF1OEI5ajUOuecjOKc+EzsT\/JqPRErvBOIKn3PRn4h8UM\\n\" +\n+            \"0BJDrDtZMpkvD4\/lyRs3g\/BLsf3DQjlEgKit0hvc72yyhiDbKd41EmBoQC5rNF7o\\n\" +\n+            \"B0CnBXhDLHbC\/YRunVrYGsF0h2J9hw4055BdaXbS2BJnPEFnAgMBAAGjggJcMIIC\\n\" +\n+            \"WDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC\\n\" +\n+            \"MAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFJBkf3Z\/ICoCTUx3JCgrBeoMyedQMB8G\\n\" +\n@@ -139,12 +139,12 @@\n-            \"cmcwggEEBgorBgEEAdZ5AgQCBIH1BIHyAPAAdgBElGUusO7Or8RAB9io\/ijA2uaC\\n\" +\n-            \"vtjLMbU\/0zOWtbaBqAAAAXiz7FLbAAAEAwBHMEUCIA8aoTszzeBJMP0aOhnMVizJ\\n\" +\n-            \"mQe6c+OHAjG+dP1y9bD2AiEA0oJOb9ZKys+OE0JP5JT0kjdYH8U3ibJ+k6nHKMOI\\n\" +\n-            \"CdgAdgD2XJQv0XcwIhRUGAgwlFaO400TGTO\/3wwvIAvMTvFk4wAAAXiz7FLQAAAE\\n\" +\n-            \"AwBHMEUCIGTdYSTO0IXQ6HSLwwGw1rlkH+lmg7EFpC+A25lhgtWCAiEAgi\/7FtTG\\n\" +\n-            \"KWKkWLU7ZP1AqIaaWlyXzRK2myrYKcBE804wDQYJKoZIhvcNAQELBQADggEBAByr\\n\" +\n-            \"Q4mfzlT+4OBDI4hFjdrPHeHgePUK0HsmQ7GPNwe3pIxTQYs6fKIv+jb4mzKiggLy\\n\" +\n-            \"882L+cYLfafggIpRjcoV9bAR2ceea+7uiyat54w5UZYLAmHgAdd4Y7OAUcrTL8rg\\n\" +\n-            \"SAXNECrCGIfh0PwxyoJEgxcJnOoGgD5lVAycspUl3u3itmu9tcjcZA7CD5t2xPTQ\\n\" +\n-            \"j\/eoqH+5fHGXIvZuZxRVllWRwtLHRNafYiotLAW0P1i0i3wevTqmQ8ABVUuzYmJE\\n\" +\n-            \"hjTktcZqbYIZqkDalLcGXJm8FFILQHv\/vhXd\/G2IbPODYgjTS7e4jCTXg2eIf17Z\\n\" +\n-            \"yzs5yR8FPDdK48UWPgU=\\n\" +\n+            \"cmcwggEDBgorBgEEAdZ5AgQCBIH0BIHxAO8AdQCUILwejtWNbIhzH4KLIiwN0dpN\\n\" +\n+            \"XmxPlD1h204vWE2iwgAAAXpD9t6nAAAEAwBGMEQCIHwF9NcPqsovYp56lhqFkWYj\\n\" +\n+            \"QCATATrLzzxgUoLDYRwgAiBBecqe5Ub32I+q9oqH1nbK\/s8QadcafIL3bkrRVbFB\\n\" +\n+            \"TAB2AH0+8viP\/4hVaCTCwMqeUol5K8UOeAl\/LmqXaJl+IvDXAAABekP23sYAAAQD\\n\" +\n+            \"AEcwRQIgGli\/1mmKKnZ0uxDIX7ySqAyD2C7FTf+y3py2S0Xcv4YCIQCZve3cqKZ2\\n\" +\n+            \"lrEyyaMeLZA+PIxUMniHx3gDkro0sKLzOzANBgkqhkiG9w0BAQsFAAOCAQEAle42\\n\" +\n+            \"p58OTusm7DAOcdK4ld+pJu2bz9F940Wrnql08rciRjGIVpp5PhMNFm9AOaptKPNY\\n\" +\n+            \"h62V2GEOVaLxmvr9\/8EDFcCCPAGV1DNYrG9aTKaiXk7IzO4UxKbzox4iUcuop\/zB\\n\" +\n+            \"uofxT8uBLmT4XYZrQXXKj1KdfJGzgeoXqBv5PPCiP3hmBQixoJnSKImnUIXWh4O8\\n\" +\n+            \"kBtmgII5ug0q+jI3LvpJuv7xQsaNYFBcmFiQQ7YRt4W99GMdbYGjhzT8iBDEH7nG\\n\" +\n+            \"MsqWuwB5TN5vIuw2aWxcfaqKayq7UPA4rJePWdD\/5RzKlQKLQx0BA3AL+3Nnj1fT\\n\" +\n+            \"NEKwCWWylIND6z\/9Xw==\\n\" +\n@@ -171,3 +171,0 @@\n-        \/\/ Perform backdate check as test artifacts expire in July 2021\n-        pathValidator.setValidationDate(\"June 15, 2021\");\n-\n@@ -181,1 +178,1 @@\n-                \"Thu Apr 08 17:05:26 PDT 2021\", System.out);\n+                \"Fri Jun 25 09:18:12 PDT 2021\", System.out);\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/LetsEncryptCA.java","additions":25,"deletions":28,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * https:\/\/www.quovadisglobal.com\/QVRepository\/TestCertificates.aspx\n+ * https:\/\/www.quovadisglobal.com\/download-roots-crl\/\n@@ -60,1 +60,4 @@\n-    \/\/ Owner: CN=QuoVadis QVRCA1G3 SSL ICA, O=QuoVadis Limited, C=BM\n+    \/\/ Owner: CN=DigiCert QuoVadis TLS ICA QV Root CA 1 G3, O=\"DigiCert, Inc\", C=US\n+    \/\/ Issuer: CN=QuoVadis Root CA 1 G3, O=QuoVadis Limited, C=BM\n+    \/\/ Serial number: 2837d5c3c2b57294becf99afe8bbdcd1bb0b20f1\n+    \/\/ Valid from: Wed Jan 06 12:50:51 PST 2021 until: Sat Jan 04 12:50:51 PST 2031\n@@ -62,1 +65,1 @@\n-            \"MIIGszCCBJugAwIBAgIUdJ4w\/GwP08WekbUIXvYTsQrO+a8wDQYJKoZIhvcNAQEL\\n\" +\n+            \"MIIFgDCCA2igAwIBAgIUKDfVw8K1cpS+z5mv6Lvc0bsLIPEwDQYJKoZIhvcNAQEL\\n\" +\n@@ -64,34 +67,28 @@\n-            \"BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMSBHMzAeFw0xNzA0MTkxNTAzMzZaFw0y\\n\" +\n-            \"NzA0MTkxNTAzMzZaMEwxCzAJBgNVBAYTAkJNMRkwFwYDVQQKDBBRdW9WYWRpcyBM\\n\" +\n-            \"aW1pdGVkMSIwIAYDVQQDDBlRdW9WYWRpcyBRVlJDQTFHMyBTU0wgSUNBMIICIjAN\\n\" +\n-            \"BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAqVn6XxE+YKKifggi6EPcx7mOOrhA\\n\" +\n-            \"HVxHFsFV\/OR\/dtQlx2oOTAGPpa8o3ZPVubtNH5QiiMBBiPDW1KqBaU+rmgUeGCj0\\n\" +\n-            \"hWKbdNGRQ5h3rV+4Vhs45BYxQcUzGTZ+oobao8gNo1LuhPIhOQComGOjZtUP0+qQ\\n\" +\n-            \"nXsWJn5004TvCzu7mmt3aTlMeyjSbpoXa3ojwU2BvUzJwcLg0BD49kNXZsM0JLbY\\n\" +\n-            \"QgfEfluWFkb5QzjnE45sBni4LJNfSodhNB+mL\/VmETO+0m\/A1H6in1rG1n4Ao2G6\\n\" +\n-            \"KYgtk9rXWfF3g7JqwuZUULfI0467h14oG1PzqVcLgZ1B+wrdyiBJJSpRmhf00xSB\\n\" +\n-            \"WM\/p93s2xkyQZ2Uh0b0tP90S6spwwpL8PSW3J8x46LaZDEVON\/Gm9H891ZgwHLaf\\n\" +\n-            \"3idGX93XHFafve8CrJFMhK2AZElwYaz2H6iJuPftyhR3oQIgLst8l+\/2LoqDRyaI\\n\" +\n-            \"6c+tVnk8LcvUgDEPuA70aNthQQ6PWA7iuI2Oies6GEPm7gKVNxIrg6rp2T9RghLm\\n\" +\n-            \"vLnf6Gyn1ONLI7Ib3EyzjE8CJIAtor5KZcs8xm8iPNsDQza+1ugx8D8Zsla64vVw\\n\" +\n-            \"w2W2qNH4orutsAQKRImtbDkEnMb3nGDe0ZPohVyw3Fy+b9g6MX7wQzFjIx3UkzZG\\n\" +\n-            \"QQqGdIh940Qq3wUCAwEAAaOCAY8wggGLMBIGA1UdEwEB\/wQIMAYBAf8CAQAwSQYD\\n\" +\n-            \"VR0gBEIwQDA+BgRVHSAAMDYwNAYIKwYBBQUHAgEWKGh0dHA6Ly93d3cucXVvdmFk\\n\" +\n-            \"aXNnbG9iYWwuY29tL3JlcG9zaXRvcnkwdAYIKwYBBQUHAQEEaDBmMCoGCCsGAQUF\\n\" +\n-            \"BzABhh5odHRwOi8vb2NzcC5xdW92YWRpc2dsb2JhbC5jb20wOAYIKwYBBQUHMAKG\\n\" +\n-            \"LGh0dHA6Ly90cnVzdC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2ExZzMuY3J0MA4G\\n\" +\n-            \"A1UdDwEB\/wQEAwIBBjAnBgNVHSUEIDAeBggrBgEFBQcDAQYIKwYBBQUHAwIGCCsG\\n\" +\n-            \"AQUFBwMJMB8GA1UdIwQYMBaAFKOX1vNeohDhq0WfPBdkPO4BcJzMMDsGA1UdHwQ0\\n\" +\n-            \"MDIwMKAuoCyGKmh0dHA6Ly9jcmwucXVvdmFkaXNnbG9iYWwuY29tL3F2cmNhMWcz\\n\" +\n-            \"LmNybDAdBgNVHQ4EFgQUIAYNQkuk2dMocCdjvExpRiGBHTwwDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQADggIBAEu\/Bea66BZPfGNE4Np+PCRrTag\/U7EBK\/Yhjmf3mHtFMZzZ94QLH1km\\n\" +\n-            \"4iJ5dPKTR\/+1iYYNHfO7fY2Lj\/Tg\/E+q2SEfA0n6Y\/lYHAlbmnaYGGdtfTOjaQgL\\n\" +\n-            \"0Bf0TmLPyc\/gf9uKHe230vIaN4QcodBnCmCJOAk\/lvIl7b7gRNPN\/HuJNQlBohNx\\n\" +\n-            \"ih9VAtLXJ6xO6Xfs5o8ZkZkHb2nG\/M1yxySEyU3mqQ5PTgy8kg59szWr2ufT8PvL\\n\" +\n-            \"JuyGNQmT\/PHcLp2zaCC0+5Ra65umjhG8IW2haXu8g8aRAgr9ZRPrcgg2npLBA0Qf\\n\" +\n-            \"MTEJPPptGx2GQgE+lMdn5Gff82d3Y35pDmxNTA7hy+4CnWKfmoey7ll8kwGxC+W1\\n\" +\n-            \"OUVgzfdXcpsm+HP2z4E\/zw6uB0cAFgMJbxgnm6ZW9+R2yEbD6EOpqR8HqCvhVkkv\\n\" +\n-            \"CdQBNkk432pKD3+L7o6vkwONFOFWVpbXHIxDf9ys8Jr4B8qYWDUnR6jz\/HG9aWPV\\n\" +\n-            \"k4vBYYWuahANZCfCKH2B9SqCdK6DjwKihYmallClwsUQnSwW8H7xqmLtAHX0ek7z\\n\" +\n-            \"1Ipj\/BNS6c52cPxeAoFbUcVt6+M8xURIJ5qrobTYVaJ8AtfW+3Ml2oqT\/EiItXOk\\n\" +\n-            \"W1319hZuAGD5qaG3dg9aLYUqpD948xJVhYVxwIIwvL4G9ZEVyYmE\\n\" +\n+            \"BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMSBHMzAeFw0yMTAxMDYyMDUwNTFaFw0z\\n\" +\n+            \"MTAxMDQyMDUwNTFaMFkxCzAJBgNVBAYTAlVTMRYwFAYDVQQKDA1EaWdpQ2VydCwg\\n\" +\n+            \"SW5jMTIwMAYDVQQDDClEaWdpQ2VydCBRdW9WYWRpcyBUTFMgSUNBIFFWIFJvb3Qg\\n\" +\n+            \"Q0EgMSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALMrbkb9kz\/4\\n\" +\n+            \"y00r7tfK+uDRomMNd5iCDVMWOvSx1VygKoBn3aavw7gq9Vfb2fIMIWkWG0GMxWbG\\n\" +\n+            \"cx3wDHLWemd7yl9MxRUTGXkvH6\/dNEavAQhUTL9TSf\/N2e8f7q2dRDNYT7lXi\/vR\\n\" +\n+            \"fTBiYlY7BLNha8C3sPHsKduaJN32cjdjVFH51rFDRdhUXlo2hhOjgB6bqoqs75A3\\n\" +\n+            \"Y3w88AdbMkapT63oGsCDO6N\/uX2Mo9GSWREvlxHiXSMFf5qFw41vn5QIa5ADL1MP\\n\" +\n+            \"CzlLmJSHXE138H1+cG5IutD7tIieKjo\/t+66PGMo8xicj3yUd8rHEmBqClG4Ty3d\\n\" +\n+            \"fF+bETFjLIUCAwEAAaOCAU8wggFLMBIGA1UdEwEB\/wQIMAYBAf8CAQAwHwYDVR0j\\n\" +\n+            \"BBgwFoAUo5fW816iEOGrRZ88F2Q87gFwnMwwdAYIKwYBBQUHAQEEaDBmMDgGCCsG\\n\" +\n+            \"AQUFBzAChixodHRwOi8vdHJ1c3QucXVvdmFkaXNnbG9iYWwuY29tL3F2cmNhMWcz\\n\" +\n+            \"LmNydDAqBggrBgEFBQcwAYYeaHR0cDovL29jc3AucXVvdmFkaXNnbG9iYWwuY29t\\n\" +\n+            \"MBMGA1UdIAQMMAowCAYGZ4EMAQICMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEF\\n\" +\n+            \"BQcDATA7BgNVHR8ENDAyMDCgLqAshipodHRwOi8vY3JsLnF1b3ZhZGlzZ2xvYmFs\\n\" +\n+            \"LmNvbS9xdnJjYTFnMy5jcmwwHQYDVR0OBBYEFJkRfemwrS1iWnDTPI2HIK3a2i5B\\n\" +\n+            \"MA4GA1UdDwEB\/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAb6tTptzzi4ssb+jA\\n\" +\n+            \"n2O2vAjAo7ydlfN9v+QH0ZuGHlUc9bm8dpNpBo9yt6fWHIprGLJjVOF7HwVDQcJD\\n\" +\n+            \"DhX4638Q7ETDrbTVQ4\/edX6Yesq6C1G8Pza1LwStXD\/jCQHFvWbPud86V0ikS4rS\\n\" +\n+            \"qlmu3fzUrGZ2\/Q+n5jrnRqM5IS8TXYcnzLD3azH1+aZjkwQt9HP4IuvAe\/Bg9aWE\\n\" +\n+            \"XeDmksbg0SqQInrWn+BVYtD+hCZNz8K0GnKKpx3Q9VxzRv+BMbO5e9iqK1Hcj5Wv\\n\" +\n+            \"ZXvU45j2r5y9WML4fc8CvphzbF6ezr1e51i+yabNmfld33gRX48V5oNk16wX32ed\\n\" +\n+            \"kQ83sKNomQm1dXURWK8aSDcZFAvJQ8vKTLIE9wiQmtjfSGoJzQhKLaN+egrp4L9y\\n\" +\n+            \"fjpFIeK4zgAH39P4s4kaPWTdfXe2n6P5o7Xolp4R22SVkI76d8d+5Iv7Rtqd+mqI\\n\" +\n+            \"y1hkwyTBbOBLtyF7yMtJQewkkZ0MWxkPvWg193RbYVRx8w1EycnxMgNwy2sJw7MR\\n\" +\n+            \"XM6Mihkw910BkvlbsFUXw4uSvRkkRWSBWVrkM5hvZGtbIJkqrdnj55RSk4DLOOT\/\\n\" +\n+            \"LUyji\/KpgD7YCi7emFA4tH6OpkNrjUJ3gdRnD4GwQj\/87tYeoQWZ6uCl0MHDUCmw\\n\" +\n+            \"73bpxSkjPrYbmKo9mGEAMhW1ZxY=\\n\" +\n@@ -100,2 +97,4 @@\n-    \/\/ Owner: CN=qvsslrca1g3-ssl-v.quovadisglobal.com, O=QuoVadis Limited, L=Hamilton,\n-    \/\/ ST=Pembroke, C=BM\n+    \/\/ Owner: CN=quovadis-root-ca-1-g3.chain-demos.digicert.com, O=\"DigiCert, Inc.\", L=Lehi, ST=Utah, C=US\n+    \/\/ Issuer: CN=DigiCert QuoVadis TLS ICA QV Root CA 1 G3, O=\"DigiCert, Inc\", C=US\n+    \/\/ Serial number: 2b9bf892d8abbde06c26d764263bfa8\n+    \/\/ Valid from: Tue Jan 19 16:00:00 PST 2021 until: Sun Feb 20 15:59:59 PST 2022\n@@ -103,33 +102,35 @@\n-            \"MIIGJzCCBA+gAwIBAgIUGCzNOZhcLiPYbOjRFAp5n04dPNowDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQAwTDELMAkGA1UEBhMCQk0xGTAXBgNVBAoMEFF1b1ZhZGlzIExpbWl0ZWQxIjAg\\n\" +\n-            \"BgNVBAMMGVF1b1ZhZGlzIFFWUkNBMUczIFNTTCBJQ0EwHhcNMTcwNTAyMTcwMDA4\\n\" +\n-            \"WhcNMjAwNTAyMTcxMDAwWjB9MQswCQYDVQQGEwJCTTERMA8GA1UECAwIUGVtYnJv\\n\" +\n-            \"a2UxETAPBgNVBAcMCEhhbWlsdG9uMRkwFwYDVQQKDBBRdW9WYWRpcyBMaW1pdGVk\\n\" +\n-            \"MS0wKwYDVQQDDCRxdnNzbHJjYTFnMy1zc2wtdi5xdW92YWRpc2dsb2JhbC5jb20w\\n\" +\n-            \"ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCLgSX0nduUm87\/qmfTdofL\\n\" +\n-            \"5P\/Xtrly8Z9GaiLPLu1syNqT\/Sri4ngYQGXXwF8h6gnHgEb6gDI2p3Q3gb75NthO\\n\" +\n-            \"WfWMD6FqafV47pUeNml6JvNbsYAPc8qGxMPtgQ8HhQuU+Trykx3onq\/Se5HRYlve\\n\" +\n-            \"7MMJixiYQKYwwThHh9G1uGYPMQJT2TQfueIAu0MT6Ljc2YB6noXpzTzU63dvmC1Q\\n\" +\n-            \"8TMmFoJYL276lQ3p3vRKEW1nVmjeVoqvK\/3Vpg440KbQL5D7Gj\/pQPL4d7ljyS\/I\\n\" +\n-            \"UN3q7QPS7BojsvF90u0YpvYEuBXsxdFnqivj5owSuSENG4nqcZUO8\/nY+4b+NbJd\\n\" +\n-            \"AgMBAAGjggHOMIIByjB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6\\n\" +\n-            \"Ly90cnVzdC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2ExZzNzc2xpY2EuY3J0MCoG\\n\" +\n-            \"CCsGAQUFBzABhh5odHRwOi8vb2NzcC5xdW92YWRpc2dsb2JhbC5jb20wHQYDVR0O\\n\" +\n-            \"BBYEFIDk6mMLdh49CFbFiUDnjZhWatYzMB8GA1UdIwQYMBaAFCAGDUJLpNnTKHAn\\n\" +\n-            \"Y7xMaUYhgR08MGkGA1UdIARiMGAwRgYMKwYBBAG+WAABZAEBMDYwNAYIKwYBBQUH\\n\" +\n-            \"AgEWKGh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL3JlcG9zaXRvcnkwCAYG\\n\" +\n-            \"Z4EMAQICMAwGCisGAQQBvlgBhFgwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2Ny\\n\" +\n-            \"bC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2ExZzNzc2xpY2EuY3JsMA4GA1UdDwEB\\n\" +\n-            \"\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwLwYDVR0RBCgw\\n\" +\n-            \"JoIkcXZzc2xyY2ExZzMtc3NsLXYucXVvdmFkaXNnbG9iYWwuY29tMA0GCSqGSIb3\\n\" +\n-            \"DQEBCwUAA4ICAQB2XiV2msE7M8Qp0YIcihD86T8U91PJH7Pb3F\/3+8fyX08\/oKDo\\n\" +\n-            \"s80sE50tiI5lw+tSFQZuvpOFefejEh1uAwu1slZOlvICHOAJNG1EXPa8pEmDU2i5\\n\" +\n-            \"nd5r7rM757\/+cgsPLvwegVuIL4vIYhnoKzPiXpkl8FkNrhRjqeUIAXf2sLjbbbng\\n\" +\n-            \"oYRCypkSovpijPf7Cid19wKh\/ipp8DxCNnGMit55mnx7eFNAWpb9cFljd+WaABCA\\n\" +\n-            \"IcvcZhZrLKYrbUErdQzzu0sa3IlEC5QBgz+IvT62RHT+vWRiv0LYhkHVLsDQUHpJ\\n\" +\n-            \"uTa1xi0qvBVGIP1jxIQv5W3hGPLYt7B\/8A8v+xOn4m1VWfGIa4V3RGpbBMw19DH+\\n\" +\n-            \"JvLjg8coDWKhqZ150V31Ve8wczSjT+KZHFRWTb4TZt8GSXa56kJV5xadPW8A3EKV\\n\" +\n-            \"kulcspO1njb73ImrwTPIOLnDAsMDrAO41FEob87bdZacpg+kHjiAP9BzpgSSX1x5\\n\" +\n-            \"b\/qy2uRtsf3ZlOb1J6fCqb8lRwSU7uGUStUx4tVMpjR5LQfNVroiDEthN5BE6sye\\n\" +\n-            \"zVRq8vyGvG40jSMBZF1KyW4GW6JlgM1THr1egNFhNkHBs7pSTHJp1Ea+QJjB1uVe\\n\" +\n-            \"A8kBL0iUlI5PPOqe5KdEXcFy3L+gRh34gyckC4vrLzfNLjKHQvdRHYnQBA==\\n\" +\n+            \"MIIGhjCCBW6gAwIBAgIQArm\/iS2Ku94Gwm12QmO\/qDANBgkqhkiG9w0BAQsFADBZ\\n\" +\n+            \"MQswCQYDVQQGEwJVUzEWMBQGA1UECgwNRGlnaUNlcnQsIEluYzEyMDAGA1UEAwwp\\n\" +\n+            \"RGlnaUNlcnQgUXVvVmFkaXMgVExTIElDQSBRViBSb290IENBIDEgRzMwHhcNMjEw\\n\" +\n+            \"MTIwMDAwMDAwWhcNMjIwMjIwMjM1OTU5WjB9MQswCQYDVQQGEwJVUzENMAsGA1UE\\n\" +\n+            \"CBMEVXRhaDENMAsGA1UEBxMETGVoaTEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4x\\n\" +\n+            \"NzA1BgNVBAMTLnF1b3ZhZGlzLXJvb3QtY2EtMS1nMy5jaGFpbi1kZW1vcy5kaWdp\\n\" +\n+            \"Y2VydC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUqAk3cOpq\\n\" +\n+            \"E+70B1WMI5R3QEqbrF4TE9jpXFIy2HQV60HSyxrsh2xDpU\/zD0BF2mwOGZvQKc1F\\n\" +\n+            \"JcVpwWXJ4vjS\/lqDvZBNlzDejr4sQbzZVGFkqP6wu+KrAa+Eu7Lvayke3vi99Ba3\\n\" +\n+            \"MmcauuHQsLwh\/A+nLzUZIL56HKREDA6YmvF2Bkz6La+f3y4BhiFcQLWQOSr4LgvD\\n\" +\n+            \"7qqdtd550sT4agIh6G1C3CDgUU2OYX8d70YOokO+msZXppD2le5HJDAUwrEKXB\/L\\n\" +\n+            \"3+jxA2wxgxmGzWigkRFl7UlsuLezUZKIHj8YoQu\/0LGLZZUcW0OEHj5sspifmQJ7\\n\" +\n+            \"DccQrGWyqU6XAgMBAAGjggMkMIIDIDAfBgNVHSMEGDAWgBSZEX3psK0tYlpw0zyN\\n\" +\n+            \"hyCt2touQTAdBgNVHQ4EFgQUDBReNH49ishzOagWgVaxd7nSyrgwOQYDVR0RBDIw\\n\" +\n+            \"MIIucXVvdmFkaXMtcm9vdC1jYS0xLWczLmNoYWluLWRlbW9zLmRpZ2ljZXJ0LmNv\\n\" +\n+            \"bTAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC\\n\" +\n+            \"MIGXBgNVHR8EgY8wgYwwRKBCoECGPmh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9E\\n\" +\n+            \"aWdpQ2VydFF1b1ZhZGlzVExTSUNBUVZSb290Q0ExRzMuY3JsMESgQqBAhj5odHRw\\n\" +\n+            \"Oi8vY3JsNC5kaWdpY2VydC5jb20vRGlnaUNlcnRRdW9WYWRpc1RMU0lDQVFWUm9v\\n\" +\n+            \"dENBMUczLmNybDA+BgNVHSAENzA1MDMGBmeBDAECAjApMCcGCCsGAQUFBwIBFhto\\n\" +\n+            \"dHRwOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwgYMGCCsGAQUFBwEBBHcwdTAkBggr\\n\" +\n+            \"BgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tME0GCCsGAQUFBzAChkFo\\n\" +\n+            \"dHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRRdW9WYWRpc1RMU0lD\\n\" +\n+            \"QVFWUm9vdENBMUczLmNydDAMBgNVHRMBAf8EAjAAMIIBBAYKKwYBBAHWeQIEAgSB\\n\" +\n+            \"9QSB8gDwAHUAKXm+8J45OSHwVnOfY6V35b5XfZxgCvj5TV0mXCVdx4QAAAF3IHgp\\n\" +\n+            \"NQAABAMARjBEAiBNOisRzreFHgpQYJmdzN8pKAGcerQHCWfeWeWyDDD8hQIgP2sh\\n\" +\n+            \"8KGW4sOt\/BqEUNhGdD+ZAbv2+xrT57aSRONrG\/UAdwAiRUUHWVUkVpY\/oS\/x922G\\n\" +\n+            \"4CMmY63AS39dxoNcbuIPAgAAAXcgeCmLAAAEAwBIMEYCIQCKVxPY+JbJX4IMcbVc\\n\" +\n+            \"HypoqNyozayPjzuHPZXsr5sZfAIhAIdS8wHmUZz6w5Frqa\/CTUSugoNgx9H0K9dN\\n\" +\n+            \"Cl6gsvdcMA0GCSqGSIb3DQEBCwUAA4IBAQB35ONSVAMAhFpTwQl6HEFEmhh++JaF\\n\" +\n+            \"3WLMUODAa79N\/GXe0JMvPuTbLsB\/H1WXP\/27D9ImvWlqLQU3EgqRp0fTdWCnnP4q\\n\" +\n+            \"8FKsKslnKPoiqNyTjpKHWk+gugFAyAAUXEFP4QYSMgye7kBNQZoX9MX4LhPBtqTa\\n\" +\n+            \"cPXLprb\/gZMrNbbf9FdOGQXQgpFoaGnvyGw2oGU1Spb+Tx1QbK8NUWCdc8KNo1WB\\n\" +\n+            \"XH37EY8XJJxdjjoocLlFxRBUothYEUk+HdE5MGNqF3egtFKVvDk2OC8redCQ6dDC\\n\" +\n+            \"MKkGc7Avhn43gkRpzuush9Ph79aT1lf4Mm4Rs0FSYm8e62bQspH8UTdh\\n\" +\n@@ -138,2 +139,4 @@\n-    \/\/ Owner: CN=qvsslrca1g3-ssl-r.quovadisglobal.com, O=QuoVadis Limited, L=Hamilton,\n-    \/\/ ST=Pembroke, C=BM\n+    \/\/ Owner: CN=quovadis-root-ca-1-g3-revoked.chain-demos.digicert.com, O=\"DigiCert, Inc.\", L=Lehi, ST=Utah, C=US\n+    \/\/ Issuer: CN=DigiCert QuoVadis TLS ICA QV Root CA 1 G3, O=\"DigiCert, Inc\", C=US\n+    \/\/ Serial number: 8fb833dd0472302df1ddc134d36840d\n+    \/\/ Valid from: Tue Jan 19 16:00:00 PST 2021 until: Sun Feb 20 15:59:59 PST 2022\n@@ -141,33 +144,37 @@\n-            \"MIIGJzCCBA+gAwIBAgIUGeTgdhQ6UoMWie3kBh4IGxDH4AQwDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQAwTDELMAkGA1UEBhMCQk0xGTAXBgNVBAoMEFF1b1ZhZGlzIExpbWl0ZWQxIjAg\\n\" +\n-            \"BgNVBAMMGVF1b1ZhZGlzIFFWUkNBMUczIFNTTCBJQ0EwHhcNMTcwNTAyMTY1OTQ4\\n\" +\n-            \"WhcNMjAwNTAyMTcwOTAwWjB9MQswCQYDVQQGEwJCTTERMA8GA1UECAwIUGVtYnJv\\n\" +\n-            \"a2UxETAPBgNVBAcMCEhhbWlsdG9uMRkwFwYDVQQKDBBRdW9WYWRpcyBMaW1pdGVk\\n\" +\n-            \"MS0wKwYDVQQDDCRxdnNzbHJjYTFnMy1zc2wtci5xdW92YWRpc2dsb2JhbC5jb20w\\n\" +\n-            \"ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDR\/0pcsSc4mmqVkzCO5h1m\\n\" +\n-            \"BlZ0uxmakNTNnWqeOXmMgl2KBni6MzIdxBkPmII5TI3nc+DXrWrtBCJKRtww3mbF\\n\" +\n-            \"ZoBhrscODv3OjfVqsVfhUPjqLwUEE9X\/8IlxFpcsKRH1mC7weLg56kfnHuK2WHPQ\\n\" +\n-            \"dbnVgzzjk8mSi8HL3szIiojGC0ZwilrV\/LCXBqETC3aMe8PtGnMW96TcvqQEdYFa\\n\" +\n-            \"4MEXuYnUwXB0WoKAJkHw\/MMc0RytrICtlpaMQ7ZnloW8LvoQ1wIM7nWwCr+dieh6\\n\" +\n-            \"lZCWRN\/Au+h6qdyDUDUPQFoGpp7AfE2OJmeCY30gp4GdAKtGpTG++gfJrtkc8FnZ\\n\" +\n-            \"AgMBAAGjggHOMIIByjB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6\\n\" +\n-            \"Ly90cnVzdC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2ExZzNzc2xpY2EuY3J0MCoG\\n\" +\n-            \"CCsGAQUFBzABhh5odHRwOi8vb2NzcC5xdW92YWRpc2dsb2JhbC5jb20wHQYDVR0O\\n\" +\n-            \"BBYEFGffDkPGAcip01jKnnvEt1jpKNRnMB8GA1UdIwQYMBaAFCAGDUJLpNnTKHAn\\n\" +\n-            \"Y7xMaUYhgR08MGkGA1UdIARiMGAwRgYMKwYBBAG+WAABZAEBMDYwNAYIKwYBBQUH\\n\" +\n-            \"AgEWKGh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL3JlcG9zaXRvcnkwCAYG\\n\" +\n-            \"Z4EMAQICMAwGCisGAQQBvlgBhFgwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2Ny\\n\" +\n-            \"bC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2ExZzNzc2xpY2EuY3JsMA4GA1UdDwEB\\n\" +\n-            \"\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwLwYDVR0RBCgw\\n\" +\n-            \"JoIkcXZzc2xyY2ExZzMtc3NsLXIucXVvdmFkaXNnbG9iYWwuY29tMA0GCSqGSIb3\\n\" +\n-            \"DQEBCwUAA4ICAQBI\/zlzisJLwBNaVZkQDMh1gYY8uRUad6Jn7yBFQbJ796VVlD1A\\n\" +\n-            \"yxJD+y9cpwzXvwKau8jIMi96OXo6xtsTDxKY9PzW8DkrlrxqdzLI7s5M30tGu8Sk\\n\" +\n-            \"WitIWPC3FU0oZqa9jBPkfujllR5FNuYikMOFIi2+\/3haEK\/6kviLpe5WyK4yJ3a9\\n\" +\n-            \"7dLq0If4vhNbKsuW1ROnq5CpPy+iIuZy3CWtq8WJSHDyZzhzrW48QHmTkoAU5lAb\\n\" +\n-            \"3KLMBo\/gtUTjABVauADeVZVN6GgLflSIdz1P\/aMJQ88q\/88w+6KYJlBtg3mWSRHc\\n\" +\n-            \"Vh+BkIiKmfTG+N9SJ5jv7VKt8PjcKgqCzOHUslLHgUDFhJ5gdYIixD24ikRHYriH\\n\" +\n-            \"UCO3ltEppIUm\/xgins75F6V9YBxHA1Ks\/S5MfMnI6N+fFurIwIsas5w6gTPNwbBC\\n\" +\n-            \"z6G1fu6schk73uvfK4W6PiuMTURsQ1M746K2BlV+FIclTk8jYHe+EyLFgIsgVigo\\n\" +\n-            \"JJs0DsIp0RoGvw+bxxyA9CHeFFi+MlAVEj2+qJnwrD3ZqNFFw87\/HDIWW+Ue8ERs\\n\" +\n-            \"HfPDZvEQZ1BHGzD\/H04F0+HwwfItxvgiQVC2L\/yjmh7St311OLiK8RM3Ur0X15bZ\\n\" +\n-            \"3g4c1gsHx9Gmlk3l8YIOk0yxvLaF03YsNbrfykXHuJM9Phy8Ya3nTpsqtw==\\n\" +\n+            \"MIIG1TCCBb2gAwIBAgIQCPuDPdBHIwLfHdwTTTaEDTANBgkqhkiG9w0BAQsFADBZ\\n\" +\n+            \"MQswCQYDVQQGEwJVUzEWMBQGA1UECgwNRGlnaUNlcnQsIEluYzEyMDAGA1UEAwwp\\n\" +\n+            \"RGlnaUNlcnQgUXVvVmFkaXMgVExTIElDQSBRViBSb290IENBIDEgRzMwHhcNMjEw\\n\" +\n+            \"MTIwMDAwMDAwWhcNMjIwMjIwMjM1OTU5WjCBhTELMAkGA1UEBhMCVVMxDTALBgNV\\n\" +\n+            \"BAgTBFV0YWgxDTALBgNVBAcTBExlaGkxFzAVBgNVBAoTDkRpZ2lDZXJ0LCBJbmMu\\n\" +\n+            \"MT8wPQYDVQQDEzZxdW92YWRpcy1yb290LWNhLTEtZzMtcmV2b2tlZC5jaGFpbi1k\\n\" +\n+            \"ZW1vcy5kaWdpY2VydC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n\" +\n+            \"AQC\/YHOKNPYW2a\/aji68VN4EYwz5ANxRuCSHXOe6mg8pYaelrnky3hmNT3Ro86wc\\n\" +\n+            \"3UaXE07+fVGjXbbe4eRF5zj1pWsMe81n7NySoLud5C9CU\/3okywv6SEPc\/RiFKJk\\n\" +\n+            \"ic\/BpRTE2pMtFfGsqWALjyDhM+W7SvM5eAXqcVVnqHgO5oToe2Cd0IqhgTgOUDdm\\n\" +\n+            \"+JuY\/kY8gRmFyzfs4Oqe8nkgrdsvsyvRtQt1ldc9XKb+C\/gnl8ZMiuLpuKWqezce\\n\" +\n+            \"2ED0SW4bVDbaDIhf97CNFeuMHHyZzI7Z0DH29WDcACOVBqVhGJl56T89COM3ISle\\n\" +\n+            \"WpYCOUgyzlPVODisfq\/1zgepAgMBAAGjggNqMIIDZjAfBgNVHSMEGDAWgBSZEX3p\\n\" +\n+            \"sK0tYlpw0zyNhyCt2touQTAdBgNVHQ4EFgQUdZf0H3+QjsIMtfpwZUf3YNaVBQ0w\\n\" +\n+            \"fQYDVR0RBHYwdII2cXVvdmFkaXMtcm9vdC1jYS0xLWczLXJldm9rZWQuY2hhaW4t\\n\" +\n+            \"ZGVtb3MuZGlnaWNlcnQuY29tgjp3d3cucXVvdmFkaXMtcm9vdC1jYS0xLWczLXJl\\n\" +\n+            \"dm9rZWQuY2hhaW4tZGVtb3MuZGlnaWNlcnQuY29tMA4GA1UdDwEB\/wQEAwIFoDAd\\n\" +\n+            \"BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwgZcGA1UdHwSBjzCBjDBEoEKg\\n\" +\n+            \"QIY+aHR0cDovL2NybDMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0UXVvVmFkaXNUTFNJ\\n\" +\n+            \"Q0FRVlJvb3RDQTFHMy5jcmwwRKBCoECGPmh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNv\\n\" +\n+            \"bS9EaWdpQ2VydFF1b1ZhZGlzVExTSUNBUVZSb290Q0ExRzMuY3JsMD4GA1UdIAQ3\\n\" +\n+            \"MDUwMwYGZ4EMAQICMCkwJwYIKwYBBQUHAgEWG2h0dHA6Ly93d3cuZGlnaWNlcnQu\\n\" +\n+            \"Y29tL0NQUzCBgwYIKwYBBQUHAQEEdzB1MCQGCCsGAQUFBzABhhhodHRwOi8vb2Nz\\n\" +\n+            \"cC5kaWdpY2VydC5jb20wTQYIKwYBBQUHMAKGQWh0dHA6Ly9jYWNlcnRzLmRpZ2lj\\n\" +\n+            \"ZXJ0LmNvbS9EaWdpQ2VydFF1b1ZhZGlzVExTSUNBUVZSb290Q0ExRzMuY3J0MAwG\\n\" +\n+            \"A1UdEwEB\/wQCMAAwggEGBgorBgEEAdZ5AgQCBIH3BIH0APIAdwApeb7wnjk5IfBW\\n\" +\n+            \"c59jpXflvld9nGAK+PlNXSZcJV3HhAAAAXcgeVnsAAAEAwBIMEYCIQCBIKm+1buq\\n\" +\n+            \"Ws6nDYt1OMGxHa7yaxwQu5yaWCq6wk3kXQIhAL0ImrZZWp0Uq2i3QhDVjAfsP9lF\\n\" +\n+            \"LRf2f0qbqJUXzTV7AHcAIkVFB1lVJFaWP6Ev8fdthuAjJmOtwEt\/XcaDXG7iDwIA\\n\" +\n+            \"AAF3IHlaMwAABAMASDBGAiEAm+RVoIBHAiMN+m\/fuo65CLCwTRa\/YVrP8wjUT4pM\\n\" +\n+            \"5toCIQDhV6pbmxbwGl9rM56ypsKZLJeB4LeCWqJmb7yf61E9WzANBgkqhkiG9w0B\\n\" +\n+            \"AQsFAAOCAQEAh82J\/F2rBZ6GUFmOdIS8mhzO\/ItkpAX+bta5lyPasCgP3JEmHONr\\n\" +\n+            \"HBX1UIvKYo7\/McgFBt1V90ncQXfuutIyh0hPXSbTqK\/b7XCVarh9J0ZXp8gLstQ5\\n\" +\n+            \"39DiuiS+qWBSc8C14VIOjeTblTBM6hjvkdnYhTZt2ip3aKYu8sHyC+3DpAYuD2og\\n\" +\n+            \"Lzs8Q7wvPwvBE2HMsr6c8dFjC9S8HZvrfJTwuh\/7QhafueuwPEfr6a2\/TExF\/3B1\\n\" +\n+            \"QXxgYPg7pQ2gPUqucO47FcEhr5GHzTwNoGAropkFj3g0byEt0i+EwLMjdAlDABzP\\n\" +\n+            \"CFww1aRfNklbdRBZ\/rr7QzmGtn39JzZKMQ==\\n\" +\n@@ -185,1 +192,1 @@\n-                \"Tue May 02 10:15:37 PDT 2017\", System.out);\n+                \"Wed Jan 20 07:46:23 PST 2021\", System.out);\n@@ -191,1 +198,4 @@\n-    \/\/ Owner: CN=QuoVadis EV SSL ICA G3, O=QuoVadis Limited, C=BM\n+    \/\/ Owner: CN=DigiCert QV EV TLS ICA G1, O=\"DigiCert, Inc.\", C=US\n+    \/\/ Issuer: CN=QuoVadis Root CA 2 G3, O=QuoVadis Limited, C=BM\n+    \/\/ Serial number: 65e9bcd53e791df22dffeb5ecc2bc7a5588d0883\n+    \/\/ Valid from: Mon Mar 16 12:39:42 PDT 2020 until: Thu Mar 14 12:39:42 PDT 2030\n@@ -193,1 +203,1 @@\n-            \"MIIGuDCCBKCgAwIBAgIUUk\/B8W400XArhKE\/sEK7zHw8kDIwDQYJKoZIhvcNAQEL\\n\" +\n+            \"MIIFbzCCA1egAwIBAgIUZem81T55HfIt\/+tezCvHpViNCIMwDQYJKoZIhvcNAQEL\\n\" +\n@@ -195,34 +205,28 @@\n-            \"BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMiBHMzAeFw0xNjExMzAxNjIxMDFaFw0y\\n\" +\n-            \"NjExMzAxNjIxMDFaMEkxCzAJBgNVBAYTAkJNMRkwFwYDVQQKDBBRdW9WYWRpcyBM\\n\" +\n-            \"aW1pdGVkMR8wHQYDVQQDDBZRdW9WYWRpcyBFViBTU0wgSUNBIEczMIICIjANBgkq\\n\" +\n-            \"hkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAonyczmwRSnw5BhWIrfcD19EbE7bYu5dF\\n\" +\n-            \"tD8o\/5NtQCW+XdoLX+X9uNTuvnPw9Hv2RdhYrJgeLgF2wZ52XMGknRdB8tQYrknA\\n\" +\n-            \"l\/j0N5f8DD82xP2eBkCpIB0UED4zNVwwWcdWvBUgNEdNobz9vQKb7B5LlbXm9kaO\\n\" +\n-            \"uxYgcv8WsNMivSP3mkJShEOh4RZ3ZdBM\/vtJyuvUyEPjyiSzfN94tZHx\/H194S4D\\n\" +\n-            \"VAPgE7ny3ISzN+Aa3kjyLebP\/sPzI1AY0DWx8Yg4STG1j0PJeuTb6Ago2kmx4Kqn\\n\" +\n-            \"4q4kSPL8CgITYHiKaJx6Dt8Q90ieJ7ywG4Mb\/YADOIlmoXZ6kXhzGAxyWXFgolLb\\n\" +\n-            \"4UToIh6U66v3Iyq+gXyCeMXGT4nUgs3+PduzOei9668jeKQaoU5d7LjJUL+ZH2+Y\\n\" +\n-            \"1bPmMAypHFLZryziOzC5kRo4TamgAf3LHHr2C7yIUuo+avlv3cic3NUodcfMi7Ax\\n\" +\n-            \"OQFLb32CtDoDeVb5v3x88R0tIEJTizk6M1B\/0pGtZiFfXtrNVfHmEYvY2rOLbgWK\\n\" +\n-            \"M831ykqZSYHUpiqgnaNJb4Qs8WcxqUw1xki64WwiPclUSn5XgGMIwxSDGjUIJHKR\\n\" +\n-            \"rzgQ9lneHOHVb8pXHNFkdBDHTb1KNmDOyLsg3q0LJP6P3nzT\/aWDAj3glpJvGQ5d\\n\" +\n-            \"kjAbjx+NFk8CAwEAAaOCAZcwggGTMBIGA1UdEwEB\/wQIMAYBAf8CAQAwUQYDVR0g\\n\" +\n-            \"BEowSDBGBgwrBgEEAb5YAAJkAQIwNjA0BggrBgEFBQcCARYoaHR0cDovL3d3dy5x\\n\" +\n-            \"dW92YWRpc2dsb2JhbC5jb20vcmVwb3NpdG9yeTB0BggrBgEFBQcBAQRoMGYwKgYI\\n\" +\n-            \"KwYBBQUHMAGGHmh0dHA6Ly9vY3NwLnF1b3ZhZGlzZ2xvYmFsLmNvbTA4BggrBgEF\\n\" +\n-            \"BQcwAoYsaHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdnJjYTJnMy5j\\n\" +\n-            \"cnQwDgYDVR0PAQH\/BAQDAgEGMCcGA1UdJQQgMB4GCCsGAQUFBwMBBggrBgEFBQcD\\n\" +\n-            \"AgYIKwYBBQUHAwkwHwYDVR0jBBgwFoAU7edvdlq\/YOxJW8ald7tyFnGbxD0wOwYD\\n\" +\n-            \"VR0fBDQwMjAwoC6gLIYqaHR0cDovL2NybC5xdW92YWRpc2dsb2JhbC5jb20vcXZy\\n\" +\n-            \"Y2EyZzMuY3JsMB0GA1UdDgQWBBTlhFTQkEmfOLryyeEqCMVOn6BIPzANBgkqhkiG\\n\" +\n-            \"9w0BAQsFAAOCAgEAY\/EHWbpNwCgGVQ1B7cIn530n6Rnht8ryN6E4Sis2GG09801s\\n\" +\n-            \"eCVMoGUB1uBCWm7uqQqydjTbjLhuub7hTjSJ1J30SOK1CZbk+c1VP9DcjY46hycy\\n\" +\n-            \"tUKQ2WbgkaY+l\/tZNDKu0djc2hA5apljQCmiIzckbcHr6yRnFK7ZPjSPCAUKm20D\\n\" +\n-            \"vORQ7hsIaomsIlqXm5BPssMcxjI48Ezgv\/s8ynASI8S5P2vOnBo08sJBM\/a0Kbuw\\n\" +\n-            \"351SubTzjxG+o1SHe6lAzvIQMuSwxUca8YkiB19w5YZt+Ss2JXNc6F2jZwpr0hto\\n\" +\n-            \"IXe+N9\/x0CohYRRa+IivRGgdDQc3w2P+pffNQP\/qdPuUYyMkYWiuHH\/YvwXyuDxv\\n\" +\n-            \"yGQfvKmHr1uq\/qiqbK1bDSUoEq4Su8yX8YoF9TuxYraIpp9iErO5rarDO6GTNVHh\\n\" +\n-            \"1OXAJ\/ePhOWzqo3flLTlAdTcs3Mq97kKW8XWCnu\/cjJJglf2zVfLAlv95p56B9If\\n\" +\n-            \"0pXbN74qDkYEC8TdLOwryhcv8yyimh90\/AvW9LpB7swkWnUUYNTep\/XMX\/RLpHLn\\n\" +\n-            \"JOVtnRpn3coVfSR\/0rz0XKVXeZGnKztGdIMQhWMTxvZ1UpmRAH2Ab2QnVo1fkPVy\\n\" +\n-            \"qNSJces5Y\/VKpIvLBk5Jj55fvK8ME\/9ASa+LtLrIms8iYHl75cupuYZZlg8=\\n\" +\n+            \"BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMiBHMzAeFw0yMDAzMTYxOTM5NDJaFw0z\\n\" +\n+            \"MDAzMTQxOTM5NDJaMEoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKDA5EaWdpQ2VydCwg\\n\" +\n+            \"SW5jLjEiMCAGA1UEAwwZRGlnaUNlcnQgUVYgRVYgVExTIElDQSBHMTCCASIwDQYJ\\n\" +\n+            \"KoZIhvcNAQEBBQADggEPADCCAQoCggEBAMhwn6I+pGrJsnisnzP7EU5cFN9UT5XF\\n\" +\n+            \"auA13F3jHeUUZmBOcMSOJEhx\/e7oeVScTnmKpe7t7uey7lIIC9DWFmP8klbtLBgL\\n\" +\n+            \"0jY4MPlCkVyxUIhZ73EHCPqDCX9bo+rMB6C758\/tKZOPcoWRixQypPwoC4cXNOOk\\n\" +\n+            \"ntqFPRxFSZoBdTDNlAmkAQJCRsXGCEC5pZ0JqzGcAA0\/Pw1fB8lSPAti3trubYmd\\n\" +\n+            \"aaPFAKzGK7vsexxpuSUKO0opNkFWbLdHZ8jkr86R80oo1vhURJXWNeMS74ws5nbt\\n\" +\n+            \"Ll9sJTDW33MQPS0\/JO3xYI7bQcW3K1sPSERa4BahqgOJvEXMk1eWRcUCAwEAAaOC\\n\" +\n+            \"AU0wggFJMBIGA1UdEwEB\/wQIMAYBAf8CAQAwHwYDVR0jBBgwFoAU7edvdlq\/YOxJ\\n\" +\n+            \"W8ald7tyFnGbxD0wOgYIKwYBBQUHAQEELjAsMCoGCCsGAQUFBzABhh5odHRwOi8v\\n\" +\n+            \"b2NzcC5xdW92YWRpc2dsb2JhbC5jb20wSwYDVR0gBEQwQjAHBgVngQwBATA3Bglg\\n\" +\n+            \"hkgBhv1sAgEwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly93d3cuZGlnaWNlcnQuY29t\\n\" +\n+            \"L0NQUzAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwOwYDVR0fBDQwMjAw\\n\" +\n+            \"oC6gLIYqaHR0cDovL2NybC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2EyZzMuY3Js\\n\" +\n+            \"MB0GA1UdDgQWBBQTL6fobnFR9uIMmEeDnn+deHk08zAOBgNVHQ8BAf8EBAMCAYYw\\n\" +\n+            \"DQYJKoZIhvcNAQELBQADggIBAEoOxze3kgnR39LX8M63EjiNxx0LThZHROqYqev6\\n\" +\n+            \"5ox\/c5NNitk8\/ODA8osdPpvnUBAlmE0+gqBvnTBRPVrJFd9bOr5BK8z6Os9\/U0ed\\n\" +\n+            \"c3UINkWLS05B7ChC9s6Zw1Vd\/WlW08TQJ80GpvAIbEKcg8EO\/DXPniHxC4cMtv1T\\n\" +\n+            \"jtNeh98XiVgQXHL1FY+u\/l413J8C4utKi4ZOQeCJDqvlSDzRsOi+tHsXrCJxnMWN\\n\" +\n+            \"2QBgMGgdPW37zwf0EffoH0Gee3pTgg7I5SzmvBq0t5xRDfv4N0OdM\/sN1mc5f3o7\\n\" +\n+            \"0YCd9WXhyDCV5W2O8QIbrd42CK5k1rlM6gXwOyDmYY5CVAl1QeXEeRfDk\/zNjU\/1\\n\" +\n+            \"+LnH\/Dv88VcZhODYq+VGbyM8bpNr0v95PY3yaH4kzpWGqWAN5i9LosfcaqRPmyL4\\n\" +\n+            \"PcKTQwcA9AVTjITExFua\/QtGrXLPvMVxR248G9IQpJMxP3JEGkjlKCenmc29r2u1\\n\" +\n+            \"KE4TeCs2xxjR1PusTfX91bBW3YAoAPDTRQKZjolegLUY44j3uKSzAdhMEbZQhovH\\n\" +\n+            \"Lraqx1WjTayTuq1Vuakcia5shmgFVSNcE+NVgLEIe32oTOm\/G6Kd1lcm9C4Ph1Cg\\n\" +\n+            \"nfDuqohZrk76kJTk8poAY5aFCQHhVzbpSw3zooMGjjvWnkG+\/DC6SZM8rKoOdKiB\\n\" +\n+            \"cy+N\\n\" +\n@@ -231,3 +235,6 @@\n-    \/\/ Owner: CN=qvsslrca2g3-ev-v.quovadisglobal.com, O=QuoVadis Limited, L=Hamilton,\n-    \/\/ ST=Pembroke, C=BM, SERIALNUMBER=28474, OID.2.5.4.15=Private Organization,\n-    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=BM\n+    \/\/ Owner: CN=quovadis-root-ca-2-g3.chain-demos.digicert.com, O=\"DigiCert, Inc.\", L=Lehi, ST=Utah, C=US,\n+    \/\/ SERIALNUMBER=5299537-0142, OID.1.3.6.1.4.1.311.60.2.1.2=Utah, OID.1.3.6.1.4.1.311.60.2.1.3=US,\n+    \/\/ OID.2.5.4.15=Private Organization\n+    \/\/ Issuer: CN=DigiCert QV EV TLS ICA G1, O=\"DigiCert, Inc.\", C=US\n+    \/\/ Serial number: a54e525a61f2552f65885c6dce9fe21\n+    \/\/ Valid from: Mon Feb 01 16:00:00 PST 2021 until: Sat Mar 05 15:59:59 PST 2022\n@@ -235,43 +242,36 @@\n-            \"MIIH4DCCBcigAwIBAgIUUZsNAKy8C5AlCfpCZWUQY2R6VawwDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQAwSTELMAkGA1UEBhMCQk0xGTAXBgNVBAoMEFF1b1ZhZGlzIExpbWl0ZWQxHzAd\\n\" +\n-            \"BgNVBAMMFlF1b1ZhZGlzIEVWIFNTTCBJQ0EgRzMwHhcNMTcwNDE4MTg1NjEyWhcN\\n\" +\n-            \"MTkwNDE4MTkwNjAwWjCBwDETMBEGCysGAQQBgjc8AgEDEwJCTTEdMBsGA1UEDwwU\\n\" +\n-            \"UHJpdmF0ZSBPcmdhbml6YXRpb24xDjAMBgNVBAUTBTI4NDc0MQswCQYDVQQGEwJC\\n\" +\n-            \"TTERMA8GA1UECAwIUGVtYnJva2UxETAPBgNVBAcMCEhhbWlsdG9uMRkwFwYDVQQK\\n\" +\n-            \"DBBRdW9WYWRpcyBMaW1pdGVkMSwwKgYDVQQDDCNxdnNzbHJjYTJnMy1ldi12LnF1\\n\" +\n-            \"b3ZhZGlzZ2xvYmFsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\\n\" +\n-            \"ALo9QJVNVNVfG\/\/nZiOPX\/j2O8GTVlSAfIMliEj78G0xmPZiQD3n\/70KcYlsI7No\\n\" +\n-            \"ilytC8e\/m4Mic9PpYfmhAwiUSmb3ba8qjekUgmBFXuQqj3fH6Na+8f5WC9cYpwlc\\n\" +\n-            \"Ew3NuL2WBs86mjM\/3GIa61IXrGpRxN6UQJwSxhqlb1QqEGtuwBiy9FJQd0xekCTC\\n\" +\n-            \"GBe2zFT1WhyVSMWlxwkcy1p2LeUmlvnV6FHQYcM9te8UPhgY53O6+u0tnnnsED37\\n\" +\n-            \"UOU3MLev8T++WL7VPOrjgjXydMC9ndXKRttQFIeJ1r+W7rdMLCWkrTzvJ6GtBZZr\\n\" +\n-            \"8jjHNabWPkBslML7oGwvUHMCAwEAAaOCA0YwggNCMHgGCCsGAQUFBwEBBGwwajA5\\n\" +\n-            \"BggrBgEFBQcwAoYtaHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdmV2\\n\" +\n-            \"c3NsZzMuY3J0MC0GCCsGAQUFBzABhiFodHRwOi8vZXYub2NzcC5xdW92YWRpc2ds\\n\" +\n-            \"b2JhbC5jb20wHQYDVR0OBBYEFLVK7rSs4x+DZrwYaWl2mjhhAtV\/MAwGA1UdEwEB\\n\" +\n-            \"\/wQCMAAwHwYDVR0jBBgwFoAU5YRU0JBJnzi68snhKgjFTp+gSD8wWgYDVR0gBFMw\\n\" +\n-            \"UTBGBgwrBgEEAb5YAAJkAQIwNjA0BggrBgEFBQcCARYoaHR0cDovL3d3dy5xdW92\\n\" +\n-            \"YWRpc2dsb2JhbC5jb20vcmVwb3NpdG9yeTAHBgVngQwBATA8BgNVHR8ENTAzMDGg\\n\" +\n-            \"L6AthitodHRwOi8vY3JsLnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdmV2c3NsZzMuY3Js\\n\" +\n-            \"MA4GA1UdDwEB\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEw\\n\" +\n-            \"LgYDVR0RBCcwJYIjcXZzc2xyY2EyZzMtZXYtdi5xdW92YWRpc2dsb2JhbC5jb20w\\n\" +\n-            \"ggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2ALvZ37wfinG1k5Qjl6qSe0c4V5UK\\n\" +\n-            \"q1LoGpCWZDaOHtGFAAABW4J1OtsAAAQDAEcwRQIhANABKS1i5uxEm\/HMivDJFyNJ\\n\" +\n-            \"gOKRrApqmx3KV0\/pWMzqAiAui21HV9lVJ1OT6dEA9mlZAH4NmzklmY9WI978GMYG\\n\" +\n-            \"mgB2AFYUBpov18Ls0\/XhvUSyPsdGdrm8mRFcwO+UmFXWidDdAAABW4J1Os0AAAQD\\n\" +\n-            \"AEcwRQIgTWLHrhex17UyIlr0HC9LXNUv0kyOudo7MpxoWFy1xGICIQCHFSoQGwvv\\n\" +\n-            \"zzpQ3JmHSLHy0AQQfWlbV9rFv37F4A7AaAB1AKS5CZC0GFgUh7sTosxncAo8NZgE\\n\" +\n-            \"+RvfuON3zQ7IDdwQAAABW4J1OvYAAAQDAEYwRAIgWLm8u\/bcMZt5oXAPIqP9\/Qqj\\n\" +\n-            \"Q61VYX+II6RFK+EJCnwCIBrXxQgngqO7X\/aaeWnEjfQeSu7WCK9Md3tcqXsn+gMd\\n\" +\n-            \"MA0GCSqGSIb3DQEBCwUAA4ICAQAu0Y29voXdwt\/68hwbdj8L50yecl2Z0OkOA31v\\n\" +\n-            \"UhAHgRVhQ+WiAgoeGEgjdntQ5pL7Wtr314gHpG6iR849Zr56WOliA6pfBYDk3qkH\\n\" +\n-            \"UiRgqQBUEV8oRzgp0E+Ebev+p9leM4RPYmUNsP3K4Z\/BY24HNOtNKMC3clqKO35K\\n\" +\n-            \"D7B9ObYUb0+IjreKgUyQB7wMgFi7393gXDraVDhDoLrcktAkvkv3Mbt+A3IO5VrO\\n\" +\n-            \"4mQwjrLHzj8nFCmsP4RbCIKFO2QZE8sJYwplKUWOk1ngjpOvObPYpMt5M1kiRvau\\n\" +\n-            \"agkQ+WvnvuMEgAgafHtI4uu0ZNDW1ib0H+xq5X\/x2w1RjEElbXCKMbnf3Pdvh9FG\\n\" +\n-            \"mLpkVITXIKzT0Jm+oIs+Vk4ktNEe8hQIzcqimmtlVl2hgMWkmIfRio1+41EY4Din\\n\" +\n-            \"QXBVsbRqftamzSpLbW54ryGJB8dSiGe4P53DOcNKiyie7une95ouZY\/1DfQIlVG\/\\n\" +\n-            \"9XexhqdGMKp6qUjgd9hOfHrD+mZHeBdIIONOHOhy6ESIUgpSzaAAM7QXZFqlzLzY\\n\" +\n-            \"okRp6cJKDfUmXrk80MopQMhRHJwdxfeZ\/A\/xAkrWlVPshG+qltSGIZWrNjhQIwk3\\n\" +\n-            \"49zFQCuDS+FrkubRueV+MB8Abp+V1nv5PNbhwfPzGSqwn9XX3vUnsp9uLv+3WlrL\\n\" +\n-            \"Kl1DeA==\\n\" +\n+            \"MIIGuzCCBaOgAwIBAgIQClTlJaYfJVL2WIXG3On+ITANBgkqhkiG9w0BAQsFADBK\\n\" +\n+            \"MQswCQYDVQQGEwJVUzEXMBUGA1UECgwORGlnaUNlcnQsIEluYy4xIjAgBgNVBAMM\\n\" +\n+            \"GURpZ2lDZXJ0IFFWIEVWIFRMUyBJQ0EgRzEwHhcNMjEwMjAyMDAwMDAwWhcNMjIw\\n\" +\n+            \"MzA1MjM1OTU5WjCB3zEdMBsGA1UEDwwUUHJpdmF0ZSBPcmdhbml6YXRpb24xEzAR\\n\" +\n+            \"BgsrBgEEAYI3PAIBAxMCVVMxFTATBgsrBgEEAYI3PAIBAhMEVXRhaDEVMBMGA1UE\\n\" +\n+            \"BRMMNTI5OTUzNy0wMTQyMQswCQYDVQQGEwJVUzENMAsGA1UECBMEVXRhaDENMAsG\\n\" +\n+            \"A1UEBxMETGVoaTEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xNzA1BgNVBAMTLnF1\\n\" +\n+            \"b3ZhZGlzLXJvb3QtY2EtMi1nMy5jaGFpbi1kZW1vcy5kaWdpY2VydC5jb20wggEi\\n\" +\n+            \"MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDfknHK7boXh9ysZ0FLDQKEyT2x\\n\" +\n+            \"Swtyecb5kkVgJU75XpXccV724mntCu5hpZ7Yt4tOmDZvbpYcqWbhIJgxGFNLyPdB\\n\" +\n+            \"Fn8jgZ4N0WoD7u295HI9izEmbM0XrO2rvHUc6ZhFFyx0jhvJPf\/k9QbQB4TwKZri\\n\" +\n+            \"Iuf1E1Ek70DkTWAg6OrPHMe2ER3aSz2S2rNkMSopURvZuabzPovsGaz+XEZNfE4N\\n\" +\n+            \"UfkBLa0DUjFCamOMZKIfkzxpH\/NhQcigGnZgxiyUb6KRhu9ydpWeOvOHwPWwR\/fV\\n\" +\n+            \"7WT+X1DUHojoXeCk2RtIRMihDWPd+lqiUppM8IlEW\/gxWbK1wP41qioiK9j5AgMB\\n\" +\n+            \"AAGjggMFMIIDATAfBgNVHSMEGDAWgBQTL6fobnFR9uIMmEeDnn+deHk08zAdBgNV\\n\" +\n+            \"HQ4EFgQUtAEN4g3bzwES6MoOINihiZQrt+owOQYDVR0RBDIwMIIucXVvdmFkaXMt\\n\" +\n+            \"cm9vdC1jYS0yLWczLmNoYWluLWRlbW9zLmRpZ2ljZXJ0LmNvbTAOBgNVHQ8BAf8E\\n\" +\n+            \"BAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMHsGA1UdHwR0MHIw\\n\" +\n+            \"N6A1oDOGMWh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydFFWRVZUTFNJ\\n\" +\n+            \"Q0FHMS5jcmwwN6A1oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2Vy\\n\" +\n+            \"dFFWRVZUTFNJQ0FHMS5jcmwwSgYDVR0gBEMwQTALBglghkgBhv1sAgEwMgYFZ4EM\\n\" +\n+            \"AQEwKTAnBggrBgEFBQcCARYbaHR0cDovL3d3dy5kaWdpY2VydC5jb20vQ1BTMHYG\\n\" +\n+            \"CCsGAQUFBwEBBGowaDAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQu\\n\" +\n+            \"Y29tMEAGCCsGAQUFBzAChjRodHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGln\\n\" +\n+            \"aUNlcnRRVkVWVExTSUNBRzEuY3J0MAwGA1UdEwEB\/wQCMAAwggEEBgorBgEEAdZ5\\n\" +\n+            \"AgQCBIH1BIHyAPAAdgApeb7wnjk5IfBWc59jpXflvld9nGAK+PlNXSZcJV3HhAAA\\n\" +\n+            \"AXdkNiYhAAAEAwBHMEUCIQDg62+lrhAGdZcklHTEzYpVIki6v6fYgsbxmkTqV6M2\\n\" +\n+            \"BgIgOcYjjM1DGT2FWFK5OO4Qs7T7V28neWwqbMPqLBZgRCoAdgAiRUUHWVUkVpY\/\\n\" +\n+            \"oS\/x922G4CMmY63AS39dxoNcbuIPAgAAAXdkNiaKAAAEAwBHMEUCIQC0ZH0YX6BP\\n\" +\n+            \"k4QAm22mVvXXG9EVBWIS5LP49f9VFhb67QIgfYqYV\/wJt3czP5rA4NbJXBeFxZXy\\n\" +\n+            \"DVnewfs2mz7kNOIwDQYJKoZIhvcNAQELBQADggEBAHIFaq9Edv37sXl07n3H93ym\\n\" +\n+            \"AzvQKJGD1khWwHQCGBXVzpUBi2v9Il0oS2pTATGD3ZB81Clryy9X3gHgkJcHFRn0\\n\" +\n+            \"cVr88GcyEWrxE8D6sx1X4WhlQknbKXNw8eL97EpZ4zKF1nDaYmf+e\/lbmjnZIcdr\\n\" +\n+            \"DRcMmWD6LZBWP8MMD+5uJvooO4eBYM\/WKVRgg6jAj1HELBHi9E6Xwm5jPx3DKt6W\\n\" +\n+            \"voJqcRJg3d4TiV8U\/yOs8+514iAw+1YJFtAaxg5\/eUQM\/22BGXki8QCJ3NaaUGrj\\n\" +\n+            \"UNASswMDevD8rVwZ5Bc2iC+c0WVIgHZepyioNC2XSVPovV9pF4Q3ppkSvEGQGSo=\\n\" +\n@@ -280,3 +280,6 @@\n-    \/\/ Owner: CN=qvsslrca2g3-ev-r.quovadisglobal.com, O=QuoVadis Limited, L=Hamilton,\n-    \/\/ ST=Pembroke, C=BM, SERIALNUMBER=28474, OID.2.5.4.15=Private Organization,\n-    \/\/ OID.1.3.6.1.4.1.311.60.2.1.3=BM\n+    \/\/ Owner: CN=quovadis-root-ca-2-g3-revoked.chain-demos.digicert.com, O=\"DigiCert, Inc.\", L=Lehi, ST=Utah, C=US,\n+    \/\/ SERIALNUMBER=5299537-0142, OID.1.3.6.1.4.1.311.60.2.1.2=Utah, OID.1.3.6.1.4.1.311.60.2.1.3=US,\n+    \/\/ OID.2.5.4.15=Private Organization\n+    \/\/ Issuer: CN=DigiCert QV EV TLS ICA G1, O=\"DigiCert, Inc.\", C=US\n+    \/\/ Serial number: 27c8845dc98ebf433dc5ce8618570d1\n+    \/\/ Valid from: Mon Feb 01 16:00:00 PST 2021 until: Sat Mar 05 15:59:59 PST 2022\n@@ -284,43 +287,37 @@\n-            \"MIIH4TCCBcmgAwIBAgIUZTuy16qm4LnioIRmiaQZuThb38gwDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQAwSTELMAkGA1UEBhMCQk0xGTAXBgNVBAoMEFF1b1ZhZGlzIExpbWl0ZWQxHzAd\\n\" +\n-            \"BgNVBAMMFlF1b1ZhZGlzIEVWIFNTTCBJQ0EgRzMwHhcNMTcwNDE4MTg1NjQ0WhcN\\n\" +\n-            \"MTkwNDE4MTkwNjAwWjCBwDETMBEGCysGAQQBgjc8AgEDEwJCTTEdMBsGA1UEDwwU\\n\" +\n-            \"UHJpdmF0ZSBPcmdhbml6YXRpb24xDjAMBgNVBAUTBTI4NDc0MQswCQYDVQQGEwJC\\n\" +\n-            \"TTERMA8GA1UECAwIUGVtYnJva2UxETAPBgNVBAcMCEhhbWlsdG9uMRkwFwYDVQQK\\n\" +\n-            \"DBBRdW9WYWRpcyBMaW1pdGVkMSwwKgYDVQQDDCNxdnNzbHJjYTJnMy1ldi1yLnF1\\n\" +\n-            \"b3ZhZGlzZ2xvYmFsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\\n\" +\n-            \"ALXMNTuogjC2wpziEXbKztdgzBflORLxoAo5Y8HNAZVo8MgJJucshZ5S6cmRjreY\\n\" +\n-            \"fOlwo85Vu9s39EMRR+I0AZLbxw2PZxNSHUxTCzWlmJ4yValRPRZjz2LXJ+mjpkc3\\n\" +\n-            \"hsVHtCawvPqh2uNwM2qUD6zKfRGdKC27NeICjYe7RtfhLRdrZ8MNtVWMrrFt3Dzd\\n\" +\n-            \"SRJXFcLkN4rPzRFCxldU2yH6V4cZwnVz4XxV\/nbljVtGyMJWGVzU0Bhy1fedAJ9x\\n\" +\n-            \"KGJbM6wackOlpUm0XMQdFxHF2tW4Sus6Mcf+2N8FgXk4PnwXarIc\/Sj5Tx+Bvf5y\\n\" +\n-            \"TwBOGS02Hzs07ILV3w4dp00CAwEAAaOCA0cwggNDMHgGCCsGAQUFBwEBBGwwajA5\\n\" +\n-            \"BggrBgEFBQcwAoYtaHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdmV2\\n\" +\n-            \"c3NsZzMuY3J0MC0GCCsGAQUFBzABhiFodHRwOi8vZXYub2NzcC5xdW92YWRpc2ds\\n\" +\n-            \"b2JhbC5jb20wHQYDVR0OBBYEFALFAuUwkAiTXc+DIW861Mu1o\/7RMAwGA1UdEwEB\\n\" +\n-            \"\/wQCMAAwHwYDVR0jBBgwFoAU5YRU0JBJnzi68snhKgjFTp+gSD8wWgYDVR0gBFMw\\n\" +\n-            \"UTBGBgwrBgEEAb5YAAJkAQIwNjA0BggrBgEFBQcCARYoaHR0cDovL3d3dy5xdW92\\n\" +\n-            \"YWRpc2dsb2JhbC5jb20vcmVwb3NpdG9yeTAHBgVngQwBATA8BgNVHR8ENTAzMDGg\\n\" +\n-            \"L6AthitodHRwOi8vY3JsLnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdmV2c3NsZzMuY3Js\\n\" +\n-            \"MA4GA1UdDwEB\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEw\\n\" +\n-            \"LgYDVR0RBCcwJYIjcXZzc2xyY2EyZzMtZXYtci5xdW92YWRpc2dsb2JhbC5jb20w\\n\" +\n-            \"ggF+BgorBgEEAdZ5AgQCBIIBbgSCAWoBaAB2AFYUBpov18Ls0\/XhvUSyPsdGdrm8\\n\" +\n-            \"mRFcwO+UmFXWidDdAAABW4J1uUEAAAQDAEcwRQIhAK2LD7cJrN7YYjyBqFDoZva+\\n\" +\n-            \"fae1CiuYyxpREVes1c8OAiBLVt\/dGKnvwY2CW2TN3\/WyRM7al2sLnM+XwNUGZDrJ\\n\" +\n-            \"pgB2ALvZ37wfinG1k5Qjl6qSe0c4V5UKq1LoGpCWZDaOHtGFAAABW4J1uVQAAAQD\\n\" +\n-            \"AEcwRQIhAIA9IjxIT69JGX+sl1okMiGsXfCOPq5crSX+m04Q7LcgAiBJWUsLDtm9\\n\" +\n-            \"5TKsGZvlJRKOn1CcA94sApQ4v+1D+uz+JQB2AKS5CZC0GFgUh7sTosxncAo8NZgE\\n\" +\n-            \"+RvfuON3zQ7IDdwQAAABW4J1uWwAAAQDAEcwRQIhAIWbEqGnZSIwrI5eWCIzfMRY\\n\" +\n-            \"A+onO3IjQrVAE6ZuGu2bAiAlyoRSfH4s8+lVL225AYD45OkJJfG41T6k+wVLM5Hg\\n\" +\n-            \"ezANBgkqhkiG9w0BAQsFAAOCAgEAPwvRI5GmzR72cDoh+7VPj7PihQDG4HBYq5Ta\\n\" +\n-            \"bF7NK2v9DoaU99vv01K3WBNIydjQX4j+IK8MoGp9dXV+LDUTsebnsY+nr3O4R0pK\\n\" +\n-            \"I2TAazN7zcy3SYc\/MtaW7JI+\/ckjHaJw+AT+qUz+l20p9shBFlg4QvH2cx2OOCat\\n\" +\n-            \"\/CRnG2Nqc5nN1xVcS3aVDrGl36XIcjV+ab+3zicm3OhWqn\/hlfBBWimuhix68i\/L\\n\" +\n-            \"k+qUyN6A8Bz7NwsouzG7keS17VZbLFkOuczq9KxJLHtlI1OYFNzrLEx6aXeM5VoH\\n\" +\n-            \"mlwETxagSL6fjRvcCaM6As9WVRS08p\/RldUrEw+O6r3ob7FaOywwIzSMFV1GbVFG\\n\" +\n-            \"eIrSMuSVwbQRa5Duakoe5vz1vOddrZPm3kqpvyT7j51nuedrjc8YgisuyMbxkf5s\\n\" +\n-            \"8tesqxdltXjFNwpwveYlgHAi3sZvO2dm6bEZcioxLEWEpwmYXrkBJWLhcILdfY99\\n\" +\n-            \"SWFAmwGtmCqh8Sxla77o+gaZkNKf3zBn\/34Q91Z96qKgqjXDAGefsZiy4tQeEUJc\\n\" +\n-            \"2qIqjb2rWi5Vo7hn2eolNXzp6ZdanicpecpqwpmW9\/v6YRxKLGTsdVz82TGWPnpt\\n\" +\n-            \"q3rCll0NIAfcjekFmRzmBWF1jOn4fCcF\/WOxKW1T4JcMIcNoa5iI9M1WcVKQvJKA\\n\" +\n-            \"Zd5LLu4=\\n\" +\n+            \"MIIGzDCCBbSgAwIBAgIQAnyIRdyY6\/Qz3FzoYYVw0TANBgkqhkiG9w0BAQsFADBK\\n\" +\n+            \"MQswCQYDVQQGEwJVUzEXMBUGA1UECgwORGlnaUNlcnQsIEluYy4xIjAgBgNVBAMM\\n\" +\n+            \"GURpZ2lDZXJ0IFFWIEVWIFRMUyBJQ0EgRzEwHhcNMjEwMjAyMDAwMDAwWhcNMjIw\\n\" +\n+            \"MzA1MjM1OTU5WjCB5zEdMBsGA1UEDwwUUHJpdmF0ZSBPcmdhbml6YXRpb24xEzAR\\n\" +\n+            \"BgsrBgEEAYI3PAIBAxMCVVMxFTATBgsrBgEEAYI3PAIBAhMEVXRhaDEVMBMGA1UE\\n\" +\n+            \"BRMMNTI5OTUzNy0wMTQyMQswCQYDVQQGEwJVUzENMAsGA1UECBMEVXRhaDENMAsG\\n\" +\n+            \"A1UEBxMETGVoaTEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xPzA9BgNVBAMTNnF1\\n\" +\n+            \"b3ZhZGlzLXJvb3QtY2EtMi1nMy1yZXZva2VkLmNoYWluLWRlbW9zLmRpZ2ljZXJ0\\n\" +\n+            \"LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL8H5MLxLmlUrb\/C\\n\" +\n+            \"+GndqTYyAWf7dlxmqK4bRtIQf6YIAum8sZwo7M+av3lNQAqRa9PsV4ms50lUSP6u\\n\" +\n+            \"sFPAKINoOIu3ABT3qlSNb7ChxYCaZAiW3D1N4Jc9SU4Pa6tfPM3mSWc2HR7kSqj+\\n\" +\n+            \"PtdDHgB8\/wjgQwvGRFXTacM\/dQVtd8cSLYGMaSgPTKqV87aps7gvd0a9jvJRPmzr\\n\" +\n+            \"vJihL8K5MRiKTwXofT2s8\/+\/XMn0qWzWzBPe\/bQuTT3Ot0Ee5u54FVPi0659rDtj\\n\" +\n+            \"hDIf1M7GmSA\/kuhcxI6vGusPZhrr+BbSbX8bRyXMPyE\/V2qN2rGMVqDgo8CYP9oY\\n\" +\n+            \"BXBocaECAwEAAaOCAw4wggMKMB8GA1UdIwQYMBaAFBMvp+hucVH24gyYR4Oef514\\n\" +\n+            \"eTTzMB0GA1UdDgQWBBSxl5QSK4J6HfhClE1Vq1ElwnnNDzBBBgNVHREEOjA4gjZx\\n\" +\n+            \"dW92YWRpcy1yb290LWNhLTItZzMtcmV2b2tlZC5jaGFpbi1kZW1vcy5kaWdpY2Vy\\n\" +\n+            \"dC5jb20wDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEF\\n\" +\n+            \"BQcDAjB7BgNVHR8EdDByMDegNaAzhjFodHRwOi8vY3JsMy5kaWdpY2VydC5jb20v\\n\" +\n+            \"RGlnaUNlcnRRVkVWVExTSUNBRzEuY3JsMDegNaAzhjFodHRwOi8vY3JsNC5kaWdp\\n\" +\n+            \"Y2VydC5jb20vRGlnaUNlcnRRVkVWVExTSUNBRzEuY3JsMEoGA1UdIARDMEEwCwYJ\\n\" +\n+            \"YIZIAYb9bAIBMDIGBWeBDAEBMCkwJwYIKwYBBQUHAgEWG2h0dHA6Ly93d3cuZGln\\n\" +\n+            \"aWNlcnQuY29tL0NQUzB2BggrBgEFBQcBAQRqMGgwJAYIKwYBBQUHMAGGGGh0dHA6\\n\" +\n+            \"Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBABggrBgEFBQcwAoY0aHR0cDovL2NhY2VydHMu\\n\" +\n+            \"ZGlnaWNlcnQuY29tL0RpZ2lDZXJ0UVZFVlRMU0lDQUcxLmNydDAMBgNVHRMBAf8E\\n\" +\n+            \"AjAAMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHcAKXm+8J45OSHwVnOfY6V35b5X\\n\" +\n+            \"fZxgCvj5TV0mXCVdx4QAAAF3ZDY16wAABAMASDBGAiEAxiHgWMmElnreF1ItPryX\\n\" +\n+            \"1zHYYy8MswsWwPSLCRoNIh8CIQCoMhTfGdeb\/YfgU7ADy0zo1ktLjnoWUXy57e2s\\n\" +\n+            \"syevwAB2ACJFRQdZVSRWlj+hL\/H3bYbgIyZjrcBLf13Gg1xu4g8CAAABd2Q2Nh0A\\n\" +\n+            \"AAQDAEcwRQIhAIEUtUcXMIj\/5+uNhqtRuzeppiC0dU9pcWuCkOqazlSsAiBeuAjH\\n\" +\n+            \"z1EyH5zDDR2dJoVJekXsihpIoXUiClDNBgCNUjANBgkqhkiG9w0BAQsFAAOCAQEA\\n\" +\n+            \"s\/QeNaPZt8WftrnUqWI+neGyFlh6odWgpKxudOKVdvlGIUZ1bZlNzPcoHvdqgeVy\\n\" +\n+            \"Vys3NxfSAX812lYo+IvPM9l3CmuaHkb7l\/5O8bwnEPZuLd6EExp8BVYCIwfW+9cm\\n\" +\n+            \"uyHXBJUEm1gkF2Utd8EYdf4jEcBCdDIXgNJI+DY05OlHE0E2IseQIHf9kttZzQHH\\n\" +\n+            \"QEVtowJsaa2EksksBAmDDHH6ybyee7bZl8W2xkpbzvUvb6SuK+M\/XyUjS9SYtun3\\n\" +\n+            \"z82BhOhRMbpokpK2Eba6IeC7WoVX2Y8Wsqj198qTVvuyRiw2B3SdZarKV5VTySY3\\n\" +\n+            \"aqsEyxenca5EjxU7QZDAHQ==\\n\" +\n@@ -338,1 +335,1 @@\n-                \"Tue Apr 18 12:23:14 PDT 2017\", System.out);\n+                \"Tue Feb 02 11:26:52 PST 2021\", System.out);\n@@ -344,1 +341,4 @@\n-    \/\/ Owner: CN=QuoVadis QVRCA3G3 SSL ICA, O=QuoVadis Limited, C=BM\n+    \/\/ Owner: CN=DigiCert QuoVadis TLS ICA QV Root CA 3 G3, O=\"DigiCert, Inc\", C=US\n+    \/\/ Issuer: CN=QuoVadis Root CA 3 G3, O=QuoVadis Limited, C=BM\n+    \/\/ Serial number: 427dd33a8ff51d8152e813c7dec93ba76312a7d8\n+    \/\/ Valid from: Wed Jan 06 12:55:40 PST 2021 until: Sat Jan 04 12:55:40 PST 2031\n@@ -346,1 +346,1 @@\n-            \"MIIGszCCBJugAwIBAgIURUME8OY\/YBHyokbgxoTKpPcoiHYwDQYJKoZIhvcNAQEL\\n\" +\n+            \"MIIFgDCCA2igAwIBAgIUQn3TOo\/1HYFS6BPH3sk7p2MSp9gwDQYJKoZIhvcNAQEL\\n\" +\n@@ -348,34 +348,28 @@\n-            \"BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMyBHMzAeFw0xNzA0MTkxNDQ4NDBaFw0y\\n\" +\n-            \"NzA0MTkxNDQ4NDBaMEwxCzAJBgNVBAYTAkJNMRkwFwYDVQQKDBBRdW9WYWRpcyBM\\n\" +\n-            \"aW1pdGVkMSIwIAYDVQQDDBlRdW9WYWRpcyBRVlJDQTNHMyBTU0wgSUNBMIICIjAN\\n\" +\n-            \"BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAt8UIgFvcneWgv29aR2\/UV810uW9N\\n\" +\n-            \"VpvdEgQDPHao5+i3IwCH1GrV8KeC25vfJAuW2TJ5gHeN5fmWAtWU8NDaNwGxJq\/w\\n\" +\n-            \"jlOe\/UW0KSosuuOBltLY9fl+7lDYqBjEwmCGvZMQOzpsbm8QUYTuZmtw96sT5beZ\\n\" +\n-            \"Kwqub\/NBDE59IZ+b82obreNFFOgwcHv9E00bfRW7kizNfaC8AiwgV9WfIFgvtb4+\\n\" +\n-            \"YflcgGbdWnmNvwL8aZGWpGYjw\/H\/0kpwfMgrVF3Q7h8Y0yTg\/jj8ZdXLdaE\/PQzx\\n\" +\n-            \"8RUU4xJGxply\/RrNUEvm9xeXZG3ssLW56WDEhRLkORX\/zF4\/mVyO2DpGJs06IUSP\\n\" +\n-            \"VWe+JuJGT1UxWqIsDIIHqJNa2BYl6O\/XOjE2oGxiCb9w0\/kQ8tKWWynFx4XOtrjA\\n\" +\n-            \"pGktsjw66tqE08XWOuoKwAXH2Llwz+VGSMzrCDH98VHtAu\/XpEjuW3iP+I7EHksm\\n\" +\n-            \"W2eLdQdvTJ5DBdLsspIG4HC9Ke+c\/gCEJHvOURPXoY7j9JPcQLc+5O7kBqiIjEBU\\n\" +\n-            \"NpPX37x7z3msac\/IiG\/SOYl+kiBESV44QFIOl8sHYmj9HGNlkQz4B\/inuGwifIux\\n\" +\n-            \"rfdvm6nrpC7jhd\/5Ptk4PO1kcAtgwcB99BnRCw47Xl7hrERTpoRISReNG0JMK7Op\\n\" +\n-            \"wVFqyi7bV1U\/l4MCAwEAAaOCAY8wggGLMBIGA1UdEwEB\/wQIMAYBAf8CAQAwSQYD\\n\" +\n-            \"VR0gBEIwQDA+BgRVHSAAMDYwNAYIKwYBBQUHAgEWKGh0dHA6Ly93d3cucXVvdmFk\\n\" +\n-            \"aXNnbG9iYWwuY29tL3JlcG9zaXRvcnkwdAYIKwYBBQUHAQEEaDBmMCoGCCsGAQUF\\n\" +\n-            \"BzABhh5odHRwOi8vb2NzcC5xdW92YWRpc2dsb2JhbC5jb20wOAYIKwYBBQUHMAKG\\n\" +\n-            \"LGh0dHA6Ly90cnVzdC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2EzZzMuY3J0MA4G\\n\" +\n-            \"A1UdDwEB\/wQEAwIBBjAnBgNVHSUEIDAeBggrBgEFBQcDAQYIKwYBBQUHAwIGCCsG\\n\" +\n-            \"AQUFBwMJMB8GA1UdIwQYMBaAFMYX0Lyo6gJD8hsGmV0rkCC515zkMDsGA1UdHwQ0\\n\" +\n-            \"MDIwMKAuoCyGKmh0dHA6Ly9jcmwucXVvdmFkaXNnbG9iYWwuY29tL3F2cmNhM2cz\\n\" +\n-            \"LmNybDAdBgNVHQ4EFgQUTknx5HQLmDQSOuWxVX3EknK1r6QwDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQADggIBAHfmIJkd+URmnVm0X1\/43QXu08RTzUr1zjf4ZBVtzUFoEkfZm+zKlhb7\\n\" +\n-            \"QeYJ5lprX1tdRfHLI+JC7oyI5+7\/0q1j2FN2g0oKYN63dIgtppoCNpBu58f69YxL\\n\" +\n-            \"Y3GPSCfgs+ld+HegNSTjQVzelr16aFo9sj1fzUwY4Xj+xEYDjYxFmNGSXY37+DdN\\n\" +\n-            \"3WPm1iahBNNCZGfXq5T4qr6+R6RWwxsaBdQfZh3efGB1WG4DVSQBoiCKjS7Eg+Mf\\n\" +\n-            \"LT+KEZgawLUVrt\/sT5lNfw23XA1gxIOcNRBHjsTWbtTBHJeb8hYvXB38UGK4GfIo\\n\" +\n-            \"NxtvRyXgG\/U8+OuCQPS2SpJ1VH+yZ4Tn3G4k2+WillxfpqCVgHDVuT8wigw1xUNb\\n\" +\n-            \"0Ft9F3OWftWCVILaYEcyuJrnL3jjcZXc\/zG01wIGDFvlPshRifVs\/69Xq9UQmMfB\\n\" +\n-            \"GUh6MteDIsN9NdiArcumSC1dNoA\/9eESp1pb186lDx9KxRQ\/3NJRDMOIsMYN8Lyu\\n\" +\n-            \"cDNzsnymtQyIm3YG7VmZi\/6k99n9vT8Ff9PvQ49cdfPl8GIONMdYmhTtLtuC00AU\\n\" +\n-            \"550HVLnpFW8d1NX3+XKxQ5FG04nsTxUD2FtT+trEQouktPq9iFqZN+PLPi8UdrBW\\n\" +\n-            \"AGUDCnO\/TNo7IPW6arQrFpYbRLStiOJw7204Mjuqco\/1KcqnEiIC\\n\" +\n+            \"BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMyBHMzAeFw0yMTAxMDYyMDU1NDBaFw0z\\n\" +\n+            \"MTAxMDQyMDU1NDBaMFkxCzAJBgNVBAYTAlVTMRYwFAYDVQQKDA1EaWdpQ2VydCwg\\n\" +\n+            \"SW5jMTIwMAYDVQQDDClEaWdpQ2VydCBRdW9WYWRpcyBUTFMgSUNBIFFWIFJvb3Qg\\n\" +\n+            \"Q0EgMyBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALxNTdqnFD+A\\n\" +\n+            \"MhketYfVfVUWQKPkVEuyYj7Y2uwXBMRP4RStO4CoQih+hX\/h94vRlObOIsqcNnyC\\n\" +\n+            \"ElwBnLbmusaWYLYnDEWoROL8uN0pkWk0asfhhEsXTkAJ6FLHUD85WBkED4gIVWPi\\n\" +\n+            \"Sp4AOwiA+\/zpbwgVAgdjJTO3jjMsp4F1lBrdViYSwoPRACH1ZMjJG572oXTpZkQX\\n\" +\n+            \"uWmEKLUOnik1i5cbqGLnwXiDvTAhxit7aBlj\/C5IDvONWVQL34ZTYppvo8S3Hhy9\\n\" +\n+            \"xX0S4HCpTpeBe3mas7VOrjsXNlEoFvejrxcQ+fB\/gUf6fLUPxUhcPtm8keBPQuxc\\n\" +\n+            \"qP12\/+KG0WECAwEAAaOCAU8wggFLMBIGA1UdEwEB\/wQIMAYBAf8CAQAwHwYDVR0j\\n\" +\n+            \"BBgwFoAUxhfQvKjqAkPyGwaZXSuQILnXnOQwdAYIKwYBBQUHAQEEaDBmMDgGCCsG\\n\" +\n+            \"AQUFBzAChixodHRwOi8vdHJ1c3QucXVvdmFkaXNnbG9iYWwuY29tL3F2cmNhM2cz\\n\" +\n+            \"LmNydDAqBggrBgEFBQcwAYYeaHR0cDovL29jc3AucXVvdmFkaXNnbG9iYWwuY29t\\n\" +\n+            \"MBMGA1UdIAQMMAowCAYGZ4EMAQICMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEF\\n\" +\n+            \"BQcDATA7BgNVHR8ENDAyMDCgLqAshipodHRwOi8vY3JsLnF1b3ZhZGlzZ2xvYmFs\\n\" +\n+            \"LmNvbS9xdnJjYTNnMy5jcmwwHQYDVR0OBBYEFDNm+y+RBcyzYlLvzTz1fhzOpxeW\\n\" +\n+            \"MA4GA1UdDwEB\/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAY0ZuDgyM4I4MO9ll\\n\" +\n+            \"D8qFUPQ8xtcGOuJgSRhDS2onIJ0M8yOGOYJCobIEGIgqyx94kI\/n\/1Xw+Wvsnhwb\\n\" +\n+            \"OYOtVedx6VGDu6IuSKTVgPPhzwKP5ZA7wtmgKR8+W4E3DM1VerA9Po9ycDK9qCdl\\n\" +\n+            \"K4tuF37grKEzlQKovG+kn0z+Zi0D\/E1kN1Q8YmX35HHRenJWKEnAL9QROh0X9jFi\\n\" +\n+            \"SlsHPrxWC3adOdAW+B+kVG0cM2nurd0Ic2YkiLKOOaSd5hbCQY\/fCZwohtest+ZU\\n\" +\n+            \"Ajyd+FVzSNvEFrwPzZwKfcdemvD4kew8lx5sG6BUL4GkFWnotxSr+F9Huwgj4pC+\\n\" +\n+            \"cxE2841a\/9r\/gliuwDM\/8jkt16epFAdw0fXemyM8FdHJDnB++3d8SyjOOQ8j+VHW\\n\" +\n+            \"31NWx27sORa5CgRchlldXWDzIIEwbc82a1OAfGUmNAsdEHjMl1HMcZHbjCmdSdsw\\n\" +\n+            \"fmyldZrj2YmvOI5ZlE9z4vzi35KyqlxWCtu9O\/SJq\/rBvYS0TPmm8HbhJQbeMe6p\\n\" +\n+            \"vJGrxcb1muSBANn9T9wvukjiNNw32ciSDCjZ0h4N+CGxbzoZtgIAQ29IunYdnJix\\n\" +\n+            \"ZiP+ED6xvwgVRBkDSgWD2W\/hex\/+z4fNmGQJDcri51\/tZCqHHv2Y7XReuf4Fk+nP\\n\" +\n+            \"l8Sd\/Kpqwde\/sJkoqwDcBSJygh0=\\n\" +\n@@ -384,2 +378,4 @@\n-    \/\/ Owner: CN=qvsslrca3g3-ssl-v.quovadisglobal.com, O=QuoVadis Limited, L=Hamilton,\n-    \/\/ ST=Pembroke, C=BM\n+    \/\/ Owner: CN=quovadis-root-ca-3-g3.chain-demos.digicert.com, O=\"DigiCert, Inc.\", L=Lehi, ST=Utah, C=US\n+    \/\/ Issuer: CN=DigiCert QuoVadis TLS ICA QV Root CA 3 G3, O=\"DigiCert, Inc\", C=US\n+    \/\/ Serial number: 19a05758f4ac7061ce9b3badd54d9b3\n+    \/\/ Valid from: Tue Jan 19 16:00:00 PST 2021 until: Sun Feb 20 15:59:59 PST 2022\n@@ -387,33 +383,35 @@\n-            \"MIIGJzCCBA+gAwIBAgIUatc95M2rfpt\/opXnck37WXW2RpAwDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQAwTDELMAkGA1UEBhMCQk0xGTAXBgNVBAoMEFF1b1ZhZGlzIExpbWl0ZWQxIjAg\\n\" +\n-            \"BgNVBAMMGVF1b1ZhZGlzIFFWUkNBM0czIFNTTCBJQ0EwHhcNMTcwNTAyMTY1OTAy\\n\" +\n-            \"WhcNMjAwNTAyMTcwOTAwWjB9MQswCQYDVQQGEwJCTTERMA8GA1UECAwIUGVtYnJv\\n\" +\n-            \"a2UxETAPBgNVBAcMCEhhbWlsdG9uMRkwFwYDVQQKDBBRdW9WYWRpcyBMaW1pdGVk\\n\" +\n-            \"MS0wKwYDVQQDDCRxdnNzbHJjYTNnMy1zc2wtdi5xdW92YWRpc2dsb2JhbC5jb20w\\n\" +\n-            \"ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC+S725uLLelMIYHWuh6fbT\\n\" +\n-            \"lGdi7wf1BlsfQY\/ZnLvsFbT1KHodE407RXP0NB6AeEBOlO8xQxaZ5b38aF+HROJw\\n\" +\n-            \"TcvUAgQHmNE+ER0JCMi42jSFC2dc93PhdcUEeesxIfu1iIKXxFmlbJtJxG3l27yJ\\n\" +\n-            \"L4ufum9iQYeZeoGXAr54x6JMY29kl5t9QM018d9sA9bHY+0iVJevM3xgxVe7xApw\\n\" +\n-            \"MSKoZH\/OmkX8FaEW9b7TqrWfWcAdD8fkXK8lHCDqmUzSiDGJP16YeQA\/4dmFO2vr\\n\" +\n-            \"ItXY8rTPjXoaolebHxf5WG5Qosxv0mPyklUb+SVSJagv66zl\/H2Uk0bLyFFmuNAd\\n\" +\n-            \"AgMBAAGjggHOMIIByjB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6\\n\" +\n-            \"Ly90cnVzdC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2EzZzNzc2xpY2EuY3J0MCoG\\n\" +\n-            \"CCsGAQUFBzABhh5odHRwOi8vb2NzcC5xdW92YWRpc2dsb2JhbC5jb20wHQYDVR0O\\n\" +\n-            \"BBYEFFhZXE0P1SMuntLc7JYoHTcD8JKfMB8GA1UdIwQYMBaAFE5J8eR0C5g0Ejrl\\n\" +\n-            \"sVV9xJJyta+kMGkGA1UdIARiMGAwRgYMKwYBBAG+WAADZAEBMDYwNAYIKwYBBQUH\\n\" +\n-            \"AgEWKGh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL3JlcG9zaXRvcnkwCAYG\\n\" +\n-            \"Z4EMAQICMAwGCisGAQQBvlgBhFgwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2Ny\\n\" +\n-            \"bC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2EzZzNzc2xpY2EuY3JsMA4GA1UdDwEB\\n\" +\n-            \"\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwLwYDVR0RBCgw\\n\" +\n-            \"JoIkcXZzc2xyY2EzZzMtc3NsLXYucXVvdmFkaXNnbG9iYWwuY29tMA0GCSqGSIb3\\n\" +\n-            \"DQEBCwUAA4ICAQB6QV56jPZzFbFNnKq4xRglTkZSLDMnyrmquWJr4xUWkWIqhQqC\\n\" +\n-            \"s+wAchy39Uuu+Nv99N1AxJhorpdbyIOd7B2NAnUXPeOa1Rm34mh2a\/df0gTVrrWJ\\n\" +\n-            \"YSUd3Tv7tcGrMXa7kNaP0N3lTITC0F0fu0rLyCH5I28t4zkCXadcWTqHUKIDNS1h\\n\" +\n-            \"fwx1Y6Dq4fBhKQGpqBq4ThEpBgJdj5aGCNiYfKO\/MTDrLxD1BpIjV88O+54cdtYp\\n\" +\n-            \"3K+UDN2lP03PNH4Z\/0jF4K43DHpwDM0r6qP4yLqFf3K1NlzGkYgNlMrKUPSlu+M8\\n\" +\n-            \"F6R45TWkcHndk3SUxbtGsxhiLG4xJKY7Zm\/0vSxNqia+UJ5wL5s+IoiXhj22RrPe\\n\" +\n-            \"kcx7u3MxB+KWSrtQd8y624J6tqbE7R+aaAX95KTQZoawjypX99P8Kir\/NynFHYri\\n\" +\n-            \"RAX9qFU8nYQEAe47oxl0bIr7URiQrlz+FJ\/bzJZQwROWY723JPXgv7wUMifCYvJz\\n\" +\n-            \"4pLkuc4KE+LIEqk5LUuoYGEhKhKVu8YnmDifPPrBBADNvAnnGfDZF9FRvIcD6h8H\\n\" +\n-            \"icZBXJHOgu70Rh8Zc77x+v29tKlAJVtswLlV0mVClDUk7U36XL+mAvYntnG9kH5x\\n\" +\n-            \"qQ2Fl7AkUewOd4tLeiN4fl+S+ceW9sOZPSWx5aLui9p2mmxuyxhC5egCzg==\\n\" +\n+            \"MIIGhjCCBW6gAwIBAgIQAZoFdY9KxwYc6bO63VTZszANBgkqhkiG9w0BAQsFADBZ\\n\" +\n+            \"MQswCQYDVQQGEwJVUzEWMBQGA1UECgwNRGlnaUNlcnQsIEluYzEyMDAGA1UEAwwp\\n\" +\n+            \"RGlnaUNlcnQgUXVvVmFkaXMgVExTIElDQSBRViBSb290IENBIDMgRzMwHhcNMjEw\\n\" +\n+            \"MTIwMDAwMDAwWhcNMjIwMjIwMjM1OTU5WjB9MQswCQYDVQQGEwJVUzENMAsGA1UE\\n\" +\n+            \"CBMEVXRhaDENMAsGA1UEBxMETGVoaTEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4x\\n\" +\n+            \"NzA1BgNVBAMTLnF1b3ZhZGlzLXJvb3QtY2EtMy1nMy5jaGFpbi1kZW1vcy5kaWdp\\n\" +\n+            \"Y2VydC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCm\/KON4FI\\n\" +\n+            \"zslgCHcJkdamTiryUif9w+BD1xGb7W7hCo+JuLkMzDSH+gGAdwdjYK1NY5c0gFiw\\n\" +\n+            \"Ud3OeHbNe7dZJSXhBP1oF3Xwl0f0DWIfa9nJObzQrN94PnYzDNGuFZut69dqzghO\\n\" +\n+            \"1QGG\/+dVdITvzqyA\/Mqy7TUsZyoaG4OALTdOXAlFmeMf5UP7EDrAEC0dlUoYJnwK\\n\" +\n+            \"0BeRNZDPYc\/OsHviNa6\/PnBli81C1QSrAT93STEAnWsCJrG8KlbSElYz2zwPwBZ7\\n\" +\n+            \"ye1m8vH\/K7npIIL0d\/vSCxLUbC1pstOUahXvZE\/Wl1zIV+JyCRmZS7sxTy6s5M4+\\n\" +\n+            \"31Va8Y9jdbeBAgMBAAGjggMkMIIDIDAfBgNVHSMEGDAWgBQzZvsvkQXMs2JS7808\\n\" +\n+            \"9X4czqcXljAdBgNVHQ4EFgQUsVGPx+H0EHp+wefHsSq0rN9eOzMwOQYDVR0RBDIw\\n\" +\n+            \"MIIucXVvdmFkaXMtcm9vdC1jYS0zLWczLmNoYWluLWRlbW9zLmRpZ2ljZXJ0LmNv\\n\" +\n+            \"bTAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC\\n\" +\n+            \"MIGXBgNVHR8EgY8wgYwwRKBCoECGPmh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9E\\n\" +\n+            \"aWdpQ2VydFF1b1ZhZGlzVExTSUNBUVZSb290Q0EzRzMuY3JsMESgQqBAhj5odHRw\\n\" +\n+            \"Oi8vY3JsNC5kaWdpY2VydC5jb20vRGlnaUNlcnRRdW9WYWRpc1RMU0lDQVFWUm9v\\n\" +\n+            \"dENBM0czLmNybDA+BgNVHSAENzA1MDMGBmeBDAECAjApMCcGCCsGAQUFBwIBFhto\\n\" +\n+            \"dHRwOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwgYMGCCsGAQUFBwEBBHcwdTAkBggr\\n\" +\n+            \"BgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tME0GCCsGAQUFBzAChkFo\\n\" +\n+            \"dHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRRdW9WYWRpc1RMU0lD\\n\" +\n+            \"QVFWUm9vdENBM0czLmNydDAMBgNVHRMBAf8EAjAAMIIBBAYKKwYBBAHWeQIEAgSB\\n\" +\n+            \"9QSB8gDwAHYAKXm+8J45OSHwVnOfY6V35b5XfZxgCvj5TV0mXCVdx4QAAAF3IHx1\\n\" +\n+            \"rwAABAMARzBFAiAHK4QuN606ween6tDb2EiNdYTNGhWayvJemSNKuGIELgIhAKaF\\n\" +\n+            \"1\/emwlNTMJDlG+kqEhqeO\/+XjtfUfhdIeT8dR7dPAHYAIkVFB1lVJFaWP6Ev8fdt\\n\" +\n+            \"huAjJmOtwEt\/XcaDXG7iDwIAAAF3IHx13QAABAMARzBFAiEA7qBblGimuzeSA3S5\\n\" +\n+            \"hkE+fVi0DLn\/eElclZRk\/RSCcsECIDN91iQV6iQryAeD597RExuxunvz+DXn6iz7\\n\" +\n+            \"43\/4LdbkMA0GCSqGSIb3DQEBCwUAA4IBAQBZl4PoBJhh6j32nW39aRpOWTEhxZt+\\n\" +\n+            \"NItfFhaQSrJWWmWkKyIQ6roKf8mDyf2x6PGiWV1+ZLEJ5iUmuFtcjlvdd6PjP2J9\\n\" +\n+            \"qEev\/kWfdnBY0Ocvfo6ZYhXy\/9lW\/1s9RQSNiEXTAi+C3R6iTQ5RYW6w4mStynqH\\n\" +\n+            \"dDO763+aE7vxSh6BxvbZugbkDkrHpjrpoWceT0huwbS7y7U0mk94eXXnTzisBHPY\\n\" +\n+            \"zbWlJNJVmt2ut9L9TIAZfqTmdWNKVXiVd2tOB2vKwHYzKM55\/LqwcX+XfSpT2FQP\\n\" +\n+            \"OQ1TllgAl+B+4PexVRfO7MNuZgKwT8LuJp1d6xZNvXiNx6dhNBnaY7eE\\n\" +\n@@ -422,2 +420,4 @@\n-    \/\/ Owner: CN=qvsslrca3g3-ssl-r.quovadisglobal.com, O=QuoVadis Limited, L=Hamilton,\n-    \/\/ ST=Pembroke, C=BM\n+    \/\/ Owner: CN=quovadis-root-ca-3-g3-revoked.chain-demos.digicert.com, O=\"DigiCert, Inc.\", L=Lehi, ST=Utah, C=US\n+    \/\/ Issuer: CN=DigiCert QuoVadis TLS ICA QV Root CA 3 G3, O=\"DigiCert, Inc\", C=US\n+    \/\/ Serial number: 804a1f35d45fb0f799c9dd1e54f0a41\n+    \/\/ Valid from: Tue Jan 19 16:00:00 PST 2021 until: Sun Feb 20 15:59:59 PST 2022\n@@ -425,33 +425,36 @@\n-            \"MIIGJzCCBA+gAwIBAgIUTgJvLquqZ+Padg\/W5Y0bTu9jimswDQYJKoZIhvcNAQEL\\n\" +\n-            \"BQAwTDELMAkGA1UEBhMCQk0xGTAXBgNVBAoMEFF1b1ZhZGlzIExpbWl0ZWQxIjAg\\n\" +\n-            \"BgNVBAMMGVF1b1ZhZGlzIFFWUkNBM0czIFNTTCBJQ0EwHhcNMTcwNTAyMTY1ODQy\\n\" +\n-            \"WhcNMjAwNTAyMTcwODAwWjB9MQswCQYDVQQGEwJCTTERMA8GA1UECAwIUGVtYnJv\\n\" +\n-            \"a2UxETAPBgNVBAcMCEhhbWlsdG9uMRkwFwYDVQQKDBBRdW9WYWRpcyBMaW1pdGVk\\n\" +\n-            \"MS0wKwYDVQQDDCRxdnNzbHJjYTNnMy1zc2wtci5xdW92YWRpc2dsb2JhbC5jb20w\\n\" +\n-            \"ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCOdbnnY8GsO002xJ6Snu2W\\n\" +\n-            \"snpPmW9ZJ4cEKzdBA4fYKP2V\/8ibbOZVH5gI4tSSW+mcMrepS9Jw49sZaKOOGf\/7\\n\" +\n-            \"YsjFOp4DQ0+w\/7FOj4WrKWBhymDGKI8SsDqoCkxjCYkAc7cutm5Ge67Yto2mvkzW\\n\" +\n-            \"vThV7o9pJ4z2kMg+Q527908zvP1eqT2g+72X1L3o3RSdGM5V35R+lGiBDum8ojZm\\n\" +\n-            \"+QGCGuc6zROgumfYrh11iTNhXJw6KVAS9KJ5GSHzmua\/Cu1dwC2SPxp\/hRRHlvPp\\n\" +\n-            \"07EjY2oGhfe6Hvsu9YuoQCm95H4HPTmTDUCKURRIGcC8jdrjXBowEuH15vUocSIJ\\n\" +\n-            \"AgMBAAGjggHOMIIByjB6BggrBgEFBQcBAQRuMGwwPgYIKwYBBQUHMAKGMmh0dHA6\\n\" +\n-            \"Ly90cnVzdC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2EzZzNzc2xpY2EuY3J0MCoG\\n\" +\n-            \"CCsGAQUFBzABhh5odHRwOi8vb2NzcC5xdW92YWRpc2dsb2JhbC5jb20wHQYDVR0O\\n\" +\n-            \"BBYEFLzYzgqJRXrnLc5OYHF\/koTdbIzeMB8GA1UdIwQYMBaAFE5J8eR0C5g0Ejrl\\n\" +\n-            \"sVV9xJJyta+kMGkGA1UdIARiMGAwRgYMKwYBBAG+WAADZAEBMDYwNAYIKwYBBQUH\\n\" +\n-            \"AgEWKGh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL3JlcG9zaXRvcnkwCAYG\\n\" +\n-            \"Z4EMAQICMAwGCisGAQQBvlgBhFgwQQYDVR0fBDowODA2oDSgMoYwaHR0cDovL2Ny\\n\" +\n-            \"bC5xdW92YWRpc2dsb2JhbC5jb20vcXZyY2EzZzNzc2xpY2EuY3JsMA4GA1UdDwEB\\n\" +\n-            \"\/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwLwYDVR0RBCgw\\n\" +\n-            \"JoIkcXZzc2xyY2EzZzMtc3NsLXIucXVvdmFkaXNnbG9iYWwuY29tMA0GCSqGSIb3\\n\" +\n-            \"DQEBCwUAA4ICAQAge+6VZgaEFxN38q0MYKs\/QbdGowLd5n2CfQfpdOTRnpOtKQw6\\n\" +\n-            \"Bc\/o1O8O\/y0XUl1Be7TCgfXKWgw+rKX+ZrI6wCm7MxYlWXV2guWU\/AeEl2uv14s\/\\n\" +\n-            \"KnKhzZHfb0eQyItfk23flubc7pbh99LaVqozsLCTL78lOB7N7ZQwsNCrEghHWMxl\\n\" +\n-            \"w1\/IX\/h9XOJoBzu4ulebJoQ3hdIYJY7+lkw64uH1FNrCu7P\/jjU9ZlPaobZOUy64\\n\" +\n-            \"sYIt4GsZbMFaUiamNzBUvULw+ZkZq0hTK0cuyA85MXd+3rm5z2AMemC\/29XTUYRU\\n\" +\n-            \"L9LkxMF71w8BJzgpVx3s0a6dfi6XtgacP407IhMc3EW1McsSWdT6jL0zidbjXisU\\n\" +\n-            \"vfvuzA50b3HwYz8PsRN0Zfi2R1BubaZQ9fQW2fe1EWgq80CqOdO7eNZeaBxbW\/qB\\n\" +\n-            \"smGA1wiHIVEtyHbwZslcKNy8VPKurfKClwZQxf17\/oK6QrhOgxiKJGYBUDTa7Ln7\\n\" +\n-            \"Qslp\/y3G721NOXzborchs8XB+BYEETtWWkKoWFDiV7vkfyn3x2cYNiv5JCWDszhZ\\n\" +\n-            \"RyVrW26YOQ3MqBAiYqgbU2jMdqeRRfMIFqUvvXwoTvYXuN4Yc2ZAOmCBPpUxo66V\\n\" +\n-            \"zHDu+QK\/2\/pI1SMLvU3KG526gUtDd67t8JUHqxyo3NsXUCD8tUYpaJy\/vg==\\n\" +\n+            \"MIIGlzCCBX+gAwIBAgIQCASh811F+w95nJ3R5U8KQTANBgkqhkiG9w0BAQsFADBZ\\n\" +\n+            \"MQswCQYDVQQGEwJVUzEWMBQGA1UECgwNRGlnaUNlcnQsIEluYzEyMDAGA1UEAwwp\\n\" +\n+            \"RGlnaUNlcnQgUXVvVmFkaXMgVExTIElDQSBRViBSb290IENBIDMgRzMwHhcNMjEw\\n\" +\n+            \"MTIwMDAwMDAwWhcNMjIwMjIwMjM1OTU5WjCBhTELMAkGA1UEBhMCVVMxDTALBgNV\\n\" +\n+            \"BAgTBFV0YWgxDTALBgNVBAcTBExlaGkxFzAVBgNVBAoTDkRpZ2lDZXJ0LCBJbmMu\\n\" +\n+            \"MT8wPQYDVQQDEzZxdW92YWRpcy1yb290LWNhLTMtZzMtcmV2b2tlZC5jaGFpbi1k\\n\" +\n+            \"ZW1vcy5kaWdpY2VydC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\n\" +\n+            \"AQC1ZjOf9P8AsZUMI2utVu8I9Ap1xOfIrZ0CGh5ZT1O\/+PqE27hnqwG7Ed0yuQs7\\n\" +\n+            \"OMyo0BP5d8Fg7dbW4LqaA+al3vRH+CQQoeD8zsQd1jWS6ZuitB3CQecZpCaMdzBe\\n\" +\n+            \"kQrmj0ofmyEcI5tvQTh4UeGkT66ONB0t4Urol0PCanX8Y3jQVt3FdPDdDTiIHRnl\\n\" +\n+            \"maOD1nCkkEEKGbRhxHH\/8p8NCQD+i1Rn6KVMjy\/hdMVEJCdFDMfKETgfcs2ZgKce\\n\" +\n+            \"A8UyPo5pfpvPEptss2Ndj80ou4X0ACV8x0nqWpOojFsml5BYIzRK8s8adAmcUUkG\\n\" +\n+            \"uukBGeJTQLd3Ygt6wa2gkeP\/AgMBAAGjggMsMIIDKDAfBgNVHSMEGDAWgBQzZvsv\\n\" +\n+            \"kQXMs2JS78089X4czqcXljAdBgNVHQ4EFgQUidJlKGbvtsxFbZ+KM2iajjjrEdcw\\n\" +\n+            \"QQYDVR0RBDowOII2cXVvdmFkaXMtcm9vdC1jYS0zLWczLXJldm9rZWQuY2hhaW4t\\n\" +\n+            \"ZGVtb3MuZGlnaWNlcnQuY29tMA4GA1UdDwEB\/wQEAwIFoDAdBgNVHSUEFjAUBggr\\n\" +\n+            \"BgEFBQcDAQYIKwYBBQUHAwIwgZcGA1UdHwSBjzCBjDBEoEKgQIY+aHR0cDovL2Ny\\n\" +\n+            \"bDMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0UXVvVmFkaXNUTFNJQ0FRVlJvb3RDQTNH\\n\" +\n+            \"My5jcmwwRKBCoECGPmh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydFF1\\n\" +\n+            \"b1ZhZGlzVExTSUNBUVZSb290Q0EzRzMuY3JsMD4GA1UdIAQ3MDUwMwYGZ4EMAQIC\\n\" +\n+            \"MCkwJwYIKwYBBQUHAgEWG2h0dHA6Ly93d3cuZGlnaWNlcnQuY29tL0NQUzCBgwYI\\n\" +\n+            \"KwYBBQUHAQEEdzB1MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5j\\n\" +\n+            \"b20wTQYIKwYBBQUHMAKGQWh0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9EaWdp\\n\" +\n+            \"Q2VydFF1b1ZhZGlzVExTSUNBUVZSb290Q0EzRzMuY3J0MAwGA1UdEwEB\/wQCMAAw\\n\" +\n+            \"ggEEBgorBgEEAdZ5AgQCBIH1BIHyAPAAdQApeb7wnjk5IfBWc59jpXflvld9nGAK\\n\" +\n+            \"+PlNXSZcJV3HhAAAAXcgfZ+yAAAEAwBGMEQCIC\/jlb+hFwAO0CDUL1hJSIQ9QZOH\\n\" +\n+            \"y0fR4gQ3dIXicm26AiAeYJl\/ldEn2ojtlL5SYlkpMyf0ry6dNVP0iD8ctUNyngB3\\n\" +\n+            \"ACJFRQdZVSRWlj+hL\/H3bYbgIyZjrcBLf13Gg1xu4g8CAAABdyB9oAUAAAQDAEgw\\n\" +\n+            \"RgIhAMc2AQO\/4o79MHwNZAaAFicxyvLCxjKbmR2kPxmL6oSUAiEA1ue6oGS9cIoy\\n\" +\n+            \"gTYMxvrLLcETbvapKRFu49dUeger7aUwDQYJKoZIhvcNAQELBQADggEBAG9vJ2sF\\n\" +\n+            \"Q\/guZdJr8tnMcHNISmZSTCXPvc20kjkVF0M0kW979sskISxEmV9pI49FJqQB1hoz\\n\" +\n+            \"4YJhtOKAg5a9PsvOlMaeM\/QNtGHdIf+BKJelpH38klHZ51zMPoWJZVDs+FX1s2fZ\\n\" +\n+            \"O9kJyU6u22eKhsea2Zt726sIQpL+d4cfBqyXWdUBFp+Kapa\/tYhVYW5wo3lxGdf+\\n\" +\n+            \"ZgtZMd8tRrYtqD7Zz4fxB9SQj4uqbUydb6n95CR4agO+yNH0mzkD3csoeFfTyKkU\\n\" +\n+            \"93P11+3GMBIMY+Tqtm37eDQlZiJZt8zxdjQLO8oM8MgwimKvNeOIdETvZq6dHu8L\\n\" +\n+            \"d9QqGEKe5acHUL0=\\n\" +\n@@ -469,1 +472,1 @@\n-                \"Tue May 02 10:15:53 PDT 2017\", System.out);\n+                \"Wed Jan 20 07:51:03 PST 2021\", System.out);\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/QuoVadisCA.java","additions":348,"deletions":345,"binary":false,"changes":693,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-import java.util.LinkedList;\n+import java.util.List;\n@@ -67,1 +67,1 @@\n-        LinkedList<String> jarLists = (LinkedList<String>)jarIndex2.get(file);\n+        List<String> jarLists = (List<String>)jarIndex2.get(file);\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/JarIndexMergeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-   If http.auth.preference is not set, the internal order choosen is:\n+   If http.auth.preference is not set, the internal order chosen is:\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/spnegoReadme","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Red Hat, Inc.\n+ * Copyright (c) 2019, 2021, Red Hat, Inc.\n@@ -290,0 +290,10 @@\n+        testImpersonationSingle();\n+\n+        \/\/ Try a second time to force the use of the Referrals Cache.\n+        \/\/ During this execution, the referral ticket from RABBIT.HOLE\n+        \/\/ to DEV.RABBIT.HOLE (upon the initial S4U2Self message) will\n+        \/\/ be obtained from the Cache.\n+        testImpersonationSingle();\n+    }\n+\n+    private static void testImpersonationSingle() throws Exception {\n@@ -309,0 +319,10 @@\n+        testDelegationWithReferralsSingle();\n+\n+        \/\/ Try a second time to force the use of the Referrals Cache.\n+        \/\/ During this execution, the referral ticket from RABBIT.HOLE\n+        \/\/ to DEV.RABBIT.HOLE (upon the initial S4U2Proxy message) will\n+        \/\/ be obtained from the Cache.\n+        testDelegationWithReferralsSingle();\n+    }\n+\n+    private static void testDelegationWithReferralsSingle() throws Exception {\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ReferralsTest.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- *      8243559 8225072 8258630 8259312 8256421 8225081\n+ *      8243559 8225072 8258630 8259312 8256421 8225081 8225082\n@@ -57,1 +57,1 @@\n-    private static final int COUNT = 91;\n+    private static final int COUNT = 90;\n@@ -62,1 +62,1 @@\n-            = \"9B:C3:0B:24:D4:26:E4:A9:4F:2C:96:25:06:9B:08:E5:13:5B:0B:33:74:5F:78:DB:BD:91:CD:31:D4:37:07:28\";\n+            = \"A2:36:27:B7:F6:99:7A:C7:7E:2D:55:47:66:57:08:3F:F8:8C:F2:28:77:29:30:40:A2:D3:6D:1A:B6:C7:32:6F\";\n@@ -151,2 +151,0 @@\n-            put(\"identrustdstx3 [jdk]\",\n-                    \"06:87:26:03:31:A7:24:03:D9:09:F1:05:E6:9B:CF:0D:32:E1:BD:24:93:FF:C6:D9:20:6D:11:BC:D6:77:07:39\");\n@@ -271,2 +269,0 @@\n-            \/\/ Valid until: Thu Sep 30 14:01:15 GMT 2021\n-            add(\"identrustdstx3 [jdk]\");\n","filename":"test\/jdk\/sun\/security\/lib\/cacerts\/VerifyCACerts.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6802846 8172529 8227758\n+ * @bug 6802846 8172529 8227758 8260960\n@@ -115,1 +115,2 @@\n-        \/\/ 4 groups: MANIFST, unrelated, signed, unsigned\n+        \/\/ 5 groups: MANIFEST, signature related entries, directory entries,\n+        \/\/ signed entries, and unsigned entries.\n@@ -119,1 +120,1 @@\n-                .count() == 4);\n+                .count() == 5);\n@@ -121,1 +122,2 @@\n-        \/\/ still 4 groups, but MANIFEST group has no other file\n+        \/\/ still 5 groups, but MANIFEST group and directiry entry group\n+        \/\/ have no other file\n@@ -127,1 +129,2 @@\n-        \/\/ 5 groups: MANIFEST, unrelated, signed by a1\/a2, signed by a2, unsigned\n+        \/\/ 6 groups: MANIFEST, signature related entries, directory entries,\n+        \/\/ signed entries by a1\/a2, signed entries by a2, and unsigned entries.\n@@ -131,1 +134,1 @@\n-                .count() == 5);\n+                .count() == 6);\n@@ -151,1 +154,2 @@\n-        \/\/ still 5 groups, but MANIFEST group has no other file\n+        \/\/ still 6 groups, but MANIFEST group and directory entry group\n+        \/\/ have no other file\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/ConciseJarsigner.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -407,15 +407,0 @@\n-\n-        \/\/ Case 6: Provide a null variant\n-        \/\/ Expected result: throw NullPointerException\n-        System.out.println(\"Constructor test 6: null variant\");\n-        try {\n-            valNoGood = Validator.getInstance(Validator.TYPE_PKIX, null,\n-                    certSet);\n-            \/\/ Throw something non Runtime-related to indicate we shouldn't\n-            \/\/ have succeeded on construction.\n-            throw new IOException(\n-                    \"Constructor did not throw NullPointerException\");\n-        } catch (NullPointerException npe) {\n-            System.out.println(\"\\tCaught RuntimeException (\" + npe.toString() +\n-                    \") [PASS])\");\n-        }\n@@ -432,1 +417,1 @@\n-        \/\/ Case 7: Make a PKIXValidator with valid arguments\n+        \/\/ Case 6: Make a PKIXValidator with valid arguments\n@@ -434,1 +419,1 @@\n-        System.out.println(\"Constructor test 7: Valid inputs\");\n+        System.out.println(\"Constructor test 6: Valid inputs\");\n@@ -453,1 +438,1 @@\n-        \/\/ Case 8: Make a PKIXValidator but provide a null PKIXBuilderParameters\n+        \/\/ Case 7: Make a PKIXValidator but provide a null PKIXBuilderParameters\n@@ -455,1 +440,1 @@\n-        System.out.println(\"Constructor test 8: null params\");\n+        System.out.println(\"Constructor test 7: null params\");\n","filename":"test\/jdk\/sun\/security\/validator\/ConstructorTest.java","additions":5,"deletions":20,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8270946\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.x509\n+ *          java.base\/sun.security.util\n+ * @summary Check that X509CertImpl.getFingerprint does not return null when\n+ *          there are errors calculating the fingerprint\n+ *\/\n+\n+import java.security.cert.CertificateEncodingException;\n+import java.security.cert.X509Certificate;\n+import sun.security.x509.X509CertImpl;\n+import sun.security.util.Debug;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.security.CertUtils;\n+\n+public class GetFingerprintError {\n+\n+    private static final Debug dbg = Debug.getInstance(\"certpath\");\n+\n+    public static void main(String[] args) throws Exception {\n+        X509Certificate cert = CertUtils.getCertFromString(CertUtils.RSA_CERT);\n+\n+        \/\/ test invalid MessageDigest algorithm\n+        Asserts.assertNull(X509CertImpl.getFingerprint(\"NoSuchAlg\", cert, dbg));\n+\n+        \/\/ test cert with bad encoding\n+        X509Certificate fcert = new X509CertificateWithBadEncoding(cert);\n+        Asserts.assertNull(X509CertImpl.getFingerprint(\"SHA-256\", fcert, dbg));\n+    }\n+\n+    private static class X509CertificateWithBadEncoding\n+            extends CertUtils.ForwardingX509Certificate {\n+        private X509CertificateWithBadEncoding(X509Certificate cert) {\n+            super(cert);\n+        }\n+        @Override\n+        public byte[] getEncoded() throws CertificateEncodingException {\n+            throw new CertificateEncodingException();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/x509\/X509CertImpl\/GetFingerprintError.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-# -e option with JavaScript explicitly choosen as language\n+# -e option with JavaScript explicitly chosen as language\n","filename":"test\/jdk\/sun\/tools\/jrunscript\/jrunscript-eTest.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"","filename":"test\/jdk\/tools\/jpackage\/apps\/Hello.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/tools\/jpackage\/apps\/image\/Hello.java","status":"renamed"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.List;\n+import java.util.ArrayList;\n+\n+public class PrintEnv {\n+\n+    public static void main(String[] args) {\n+        List<String> lines = printArgs(args);\n+        lines.forEach(System.out::println);\n+    }\n+\n+    private static List<String> printArgs(String[] args) {\n+        List<String> lines = new ArrayList<>();\n+\n+        for (String arg : args) {\n+            if (arg.startsWith(PRINT_ENV_VAR)) {\n+                String name = arg.substring(PRINT_ENV_VAR.length());\n+                lines.add(name + \"=\" + System.getenv(name));\n+            } else if (arg.startsWith(PRINT_SYS_PROP)) {\n+                String name = arg.substring(PRINT_SYS_PROP.length());\n+                lines.add(name + \"=\" + System.getProperty(name));\n+            } else {\n+                throw new IllegalArgumentException();\n+            }\n+        }\n+\n+        return lines;\n+    }\n+\n+    private final static String PRINT_ENV_VAR = \"--print-env-var=\";\n+    private final static String PRINT_SYS_PROP = \"--print-sys-prop=\";\n+}\n","filename":"test\/jdk\/tools\/jpackage\/apps\/PrintEnv.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -1,113 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.io.BufferedWriter;\n-import java.io.File;\n-import java.io.FileWriter;\n-import java.io.PrintWriter;\n-import java.awt.Desktop;\n-import java.awt.desktop.OpenFilesEvent;\n-import java.awt.desktop.OpenFilesHandler;\n-import java.util.List;\n-\n-public class Hello implements OpenFilesHandler {\n-\n-    private static final String MSG = \"jpackage test application\";\n-    private static final int EXPECTED_NUM_OF_PARAMS = 3; \/\/ Starts at 1\n-    private static List<File> files;\n-\n-    public static void main(String[] args) {\n-        if(Desktop.getDesktop().isSupported(Desktop.Action.APP_OPEN_FILE)) {\n-            Desktop.getDesktop().setOpenFileHandler(new Hello());\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-        printToStdout(args);\n-        if (args.length == 1 || (files != null && files.size() == 1)) { \/\/ Called via file association\n-            printToFile(args);\n-        }\n-    }\n-\n-    private static void printToStdout(String[] args) {\n-        System.out.println(MSG);\n-\n-        System.out.println(\"args.length: \" + (files == null ? args.length : args.length + files.size()));\n-\n-        for (String arg : args) {\n-            System.out.println(arg);\n-        }\n-\n-        if (files != null) {\n-            for (File file : files) {\n-                System.out.println(file.getAbsolutePath());\n-            }\n-        }\n-\n-        for (int index = 1; index <= EXPECTED_NUM_OF_PARAMS; index++) {\n-            String value = System.getProperty(\"param\" + index);\n-            if (value != null) {\n-                System.out.println(\"-Dparam\" + index + \"=\" + value);\n-            }\n-        }\n-    }\n-\n-    private static void printToFile(String[] args) {\n-        File inputFile = files == null ? new File(args[0]) : files.get(0);\n-        String outputFile = inputFile.getParent() + File.separator + \"appOutput.txt\";\n-        File file = new File(outputFile);\n-\n-        try (PrintWriter out\n-                = new PrintWriter(new BufferedWriter(new FileWriter(file)))) {\n-            out.println(MSG);\n-\n-            out.println(\"args.length: \" + (files == null ? args.length : args.length + files.size()));\n-\n-            for (String arg : args) {\n-                out.println(arg);\n-            }\n-\n-            if (files != null) {\n-                for (File f : files) {\n-                    out.println(f.getAbsolutePath());\n-                }\n-            }\n-\n-            for (int index = 1; index <= EXPECTED_NUM_OF_PARAMS; index++) {\n-                String value = System.getProperty(\"param\" + index);\n-                if (value != null) {\n-                    out.println(\"-Dparam\" + index + \"=\" + value);\n-                }\n-            }\n-        } catch (Exception ex) {\n-            System.err.println(ex.getMessage());\n-        }\n-    }\n-\n-    @Override\n-    public void openFiles(OpenFilesEvent e) {\n-        files = e.getFiles();\n-    }\n-}\n","filename":"test\/jdk\/tools\/jpackage\/apps\/installer\/Hello.java","additions":0,"deletions":113,"binary":false,"changes":113,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,2 @@\n+        final String srcClassName = appDesc.srcClassName();\n+\n@@ -86,1 +88,1 @@\n-        Pattern classNameRegex = Pattern.compile(\"\\\\bHello\\\\b\");\n+        Pattern classNameRegex = Pattern.compile(\"\\\\b\" + srcClassName + \"\\\\b\");\n@@ -88,1 +90,1 @@\n-                \"(^.*\\\\bclass\\\\s+)\\\\bHello\\\\b(.*$)\");\n+                \"(^.*\\\\bclass\\\\s+)\\\\b\" + srcClassName + \"\\\\b(.*$)\");\n@@ -100,1 +102,2 @@\n-        Files.write(srcFile, Files.readAllLines(HELLO_JAVA).stream().map(line -> {\n+        Files.write(srcFile,\n+                Files.readAllLines(appDesc.srcJavaPath()).stream().map(line -> {\n@@ -147,1 +150,2 @@\n-        if (moduleName == null && CLASS_NAME.equals(qualifiedClassName)) {\n+        if (moduleName == null && CLASS_NAME.equals(qualifiedClassName)\n+                && HELLO_JAVA.equals(appDesc.srcJavaPath())) {\n@@ -153,1 +157,1 @@\n-                            HELLO_JAVA).create();\n+                            appDesc.srcJavaPath()).create();\n@@ -162,1 +166,1 @@\n-            \/\/ Modular app in .jar file\n+            \/\/ Modular\/non-modular app in .jar file\n@@ -198,1 +202,1 @@\n-        return new JavaAppDesc().setClassName(CLASS_NAME).setBundleFileName(\"hello.jar\");\n+        return new JavaAppDesc().setSrcJavaPath(HELLO_JAVA).setClassName(CLASS_NAME).setBundleFileName(\"hello.jar\");\n@@ -465,1 +469,1 @@\n-            \"apps\/image\/Hello.java\");\n+            \"apps\/Hello.java\");\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/HelloApp.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,5 @@\n+    public JavaAppDesc setSrcJavaPath(Path v) {\n+        srcJavaPath = v;\n+        return this;\n+    }\n+\n@@ -58,0 +63,9 @@\n+    public Path srcJavaPath() {\n+        return srcJavaPath;\n+    }\n+\n+    public String srcClassName() {\n+        String fname = srcJavaPath().getFileName().toString();\n+        return fname.substring(0, fname.lastIndexOf('.'));\n+    }\n+\n@@ -116,0 +130,3 @@\n+        if (srcJavaPath != null) {\n+            sb.append(srcJavaPath.toString()).append('*');\n+        }\n@@ -138,1 +155,1 @@\n-     * [(jar_file|jmods_file|exploded_jmods_file):][module_name\/]qualified_class_name[!][@module_version].\n+     * [src_java_file*][(jar_file|jmods_file|exploded_jmods_file):][module_name\/]qualified_class_name[!][@module_version].\n@@ -171,0 +188,8 @@\n+        String srcJavaPathAndOther = Functional.identity(() -> {\n+            String[] components = javaAppDesc.split(\"\\\\*\", 2);\n+            if (components.length == 2) {\n+                desc.setSrcJavaPath(Path.of(components[0]));\n+            }\n+            return components[components.length - 1];\n+        }).get();\n+\n@@ -172,1 +197,1 @@\n-            String[] components = javaAppDesc.split(\":\", 2);\n+            String[] components = srcJavaPathAndOther.split(\":\", 2);\n@@ -209,0 +234,1 @@\n+    private Path srcJavaPath;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JavaAppDesc.java","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -54,2 +54,1 @@\n-            \"255\",\n-            \"0\",\n+            \"0.0\",\n@@ -57,0 +56,1 @@\n+            \"0.0.0\",\n@@ -58,3 +58,2 @@\n-            \"1.0\",\n-            \"1\",\n-            \"01.02.6\"\n+            \"0.0.0.0\",\n+            \"255.255.65535.999999\"\n@@ -64,1 +63,2 @@\n-            \"256\",\n+            \"0\",\n+            \"256.01\",\n@@ -67,1 +67,1 @@\n-            \"1.2.3.4\"\n+            \"1.2.3.4.5\"\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/PlatformVersionTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Annotations.Parameter;\n+import jdk.jpackage.test.JPackageCommand;\n+\n+\/*\n+ * @test\n+ * @summary jpackage with values of --dest parameter breaking jpackage launcher\n+ * @requires (os.family == \"linux\")\n+ * @bug 8268974\n+ * @library ..\/helpers\n+ * @build jdk.jpackage.test.*\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @compile LinuxWeirdOutputDirTest.java\n+ * @run main\/othervm\/timeout=540 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=LinuxWeirdOutputDirTest\n+ *\/\n+public class LinuxWeirdOutputDirTest {\n+\n+    @Test\n+    @Parameter(\"bin\")\n+    @Parameter(\"lib\")\n+    public void test(String outputPath) {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage();\n+        cmd.setArgumentValue(\"--dest\", cmd.outputDir().resolve(outputPath));\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LinuxWeirdOutputDirTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,0 +188,5 @@\n+        final String expectedMod = JavaAppDesc.parse(modularAppDesc.toString())\n+                .setBundleFileName(null)\n+                .setSrcJavaPath(null)\n+                .toString();\n+\n@@ -189,2 +194,1 @@\n-        .addRawProperties(Map.entry(\"module\", JavaAppDesc.parse(\n-                modularAppDesc.toString()).setBundleFileName(null).toString()))\n+        .addRawProperties(Map.entry(\"module\", expectedMod))\n@@ -211,2 +215,0 @@\n-        String expectedMod = JavaAppDesc.parse(\n-                modularAppDesc.toString()).setBundleFileName(null).toString();\n","filename":"test\/jdk\/tools\/jpackage\/share\/AddLauncherTest.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.BiFunction;\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Executor;\n+import jdk.jpackage.test.TKit;\n+\n+\/**\n+ * Tests values of environment variables altered by jpackage launcher.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Tests values of environment variables altered by jpackage launcher\n+ * @library ..\/helpers\n+ * @library \/test\/lib\n+ * @build AppLauncherEnvTest\n+ * @build jdk.jpackage.test.*\n+ * @build AppLauncherEnvTest\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @run main\/othervm -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=AppLauncherEnvTest\n+ *\/\n+public class AppLauncherEnvTest {\n+\n+    @Test\n+    public static void test() throws Exception {\n+        final String testAddDirProp = \"jpackage.test.AppDir\";\n+\n+        JPackageCommand cmd = JPackageCommand\n+                .helloAppImage(TEST_APP_JAVA + \"*Hello\")\n+                .addArguments(\"--java-options\", \"-D\" + testAddDirProp\n+                        + \"=$APPDIR\");\n+\n+        cmd.executeAndAssertImageCreated();\n+\n+        final String envVarName = envVarName();\n+\n+        final int attempts = 3;\n+        final int waitBetweenAttemptsSeconds = 5;\n+        List<String> output = new Executor()\n+                .saveOutput()\n+                .setExecutable(cmd.appLauncherPath().toAbsolutePath())\n+                .addArguments(\"--print-env-var=\" + envVarName)\n+                .addArguments(\"--print-sys-prop=\" + testAddDirProp)\n+                .addArguments(\"--print-sys-prop=\" + \"java.library.path\")\n+                .executeAndRepeatUntilExitCode(0, attempts,\n+                        waitBetweenAttemptsSeconds).getOutput();\n+\n+        BiFunction<Integer, String, String> getValue = (idx, name) -> {\n+            return  output.get(idx).substring((name + \"=\").length());\n+        };\n+\n+        final String actualEnvVarValue = getValue.apply(0, envVarName);\n+        final String appDir = getValue.apply(1, testAddDirProp);\n+\n+        final String expectedEnvVarValue = Optional.ofNullable(System.getenv(\n+                envVarName)).orElse(\"\") + File.pathSeparator + appDir;\n+\n+        TKit.assertEquals(expectedEnvVarValue, actualEnvVarValue, String.format(\n+                \"Check value of %s env variable\", envVarName));\n+\n+        final String javaLibraryPath = getValue.apply(2, \"java.library.path\");\n+        TKit.assertTrue(\n+                List.of(javaLibraryPath.split(File.pathSeparator)).contains(\n+                        appDir), String.format(\n+                        \"Check java.library.path system property [%s] contains app dir [%s]\",\n+                        javaLibraryPath, appDir));\n+    }\n+\n+    private static String envVarName() {\n+        if (TKit.isLinux()) {\n+            return \"LD_LIBRARY_PATH\";\n+        } else if (TKit.isWindows()) {\n+            return \"PATH\";\n+        } else if (TKit.isOSX()) {\n+            return \"DYLD_LIBRARY_PATH\";\n+        } else {\n+            throw new IllegalStateException();\n+        }\n+    }\n+\n+    private static final Path TEST_APP_JAVA = TKit.TEST_SRC_ROOT.resolve(\n+            \"apps\/PrintEnv.java\");\n+}\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppLauncherEnvTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -27,2 +27,1 @@\n- * @summary Checks for Launcher special flags, such as MacOSX specific flags,\n- *          and JVM NativeMemoryTracking flags.\n+ * @summary Checks for Launcher special flags, such as MacOSX specific flags.\n@@ -114,161 +113,0 @@\n-    @Test\n-    void testNativeMemoryTracking() {\n-        final Map<String, String> envMap = new HashMap<>();\n-        envMap.put(\"_JAVA_LAUNCHER_DEBUG\", \"true\");\n-        TestResult tr;\n-        \/*\n-         * test argument : -XX:NativeMemoryTracking=value\n-         * A JVM flag, comsumed by the JVM, but requiring launcher\n-         * to set an environmental variable if and only if value is supplied.\n-         * Test and order:\n-         * 1) execute with valid parameter: -XX:NativeMemoryTracking=MyValue\n-         *    a) check for correct env variable name: \"NMT_LEVEL_\" + pid\n-         *    b) check that \"MyValue\" was found in local env.\n-         * 2) execute with invalid parameter: -XX:NativeMemoryTracking=\n-         *    !) Won't find \"NativeMemoryTracking:\"\n-         *       Code to create env variable not executed.\n-         * 3) execute with invalid parameter: -XX:NativeMemoryTracking\n-         *    !) Won't find \"NativeMemoryTracking:\"\n-         *       Code to create env variable not executed.\n-         * 4) give and invalid value and check to make sure JVM commented\n-         *\/\n-        String envVarPidString = \"TRACER_MARKER: NativeMemoryTracking: env var is NMT_LEVEL_\";\n-        String NMT_Option_Value = \"off\";\n-        String myClassName = \"helloworld\";\n-\n-        \/\/ === Run the tests ===\n-        \/\/ ---Test 1a\n-        tr = doExec(envMap, javaCmd, \"-XX:NativeMemoryTracking=\" + NMT_Option_Value,\n-                \"-version\");\n-\n-        \/\/ get the PID from the env var we set for the JVM\n-        String envVarPid = null;\n-        for (String line : tr.testOutput) {\n-            if (line.contains(envVarPidString)) {\n-                int sindex = envVarPidString.length();\n-                envVarPid = line.substring(sindex);\n-                break;\n-            }\n-        }\n-        \/\/ did we find envVarPid?\n-        if (envVarPid == null) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: failed to find env Var Pid in tracking info\");\n-        }\n-        \/\/ we think we found the pid string.  min test, not \"\".\n-        if (envVarPid.length() < 1) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: env Var Pid in tracking info is empty string\");\n-        }\n-\n-        \/\/ --- Test 1b\n-        if (!tr.contains(\"NativeMemoryTracking: got value \" + NMT_Option_Value)) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: Valid param failed to set env variable\");\n-        }\n-\n-        \/\/ --- Test 2\n-        tr = doExec(envMap, javaCmd, \"-XX:NativeMemoryTracking=\",\n-                \"-version\");\n-        if (tr.contains(\"NativeMemoryTracking:\")) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: invalid param caused env variable to be erroneously created\");\n-        }\n-        if (!tr.contains(\"Syntax error, expecting -XX:NativeMemoryTracking=\")) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: invalid param not checked by JVM\");\n-        }\n-\n-        \/\/ --- Test 3\n-        tr = doExec(envMap, javaCmd, \"-XX:NativeMemoryTracking\",\n-                \"-version\");\n-        if (tr.contains(\"NativeMemoryTracking:\")) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: invalid param caused env variable to be erroneously created\");\n-        }\n-        if (!tr.contains(\"Syntax error, expecting -XX:NativeMemoryTracking=\")) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: invalid param not checked by JVM\");\n-        }\n-        \/\/ --- Test 4\n-        tr = doExec(envMap, javaCmd, \"-XX:NativeMemoryTracking=BADVALUE\",\n-                \"-version\");\n-        if (!tr.contains(\"expecting -XX:NativeMemoryTracking\")) {\n-            System.out.println(tr);\n-            throw new RuntimeException(\"Error: invalid param did not get JVM Syntax error message\");\n-        }\n-    }\n-\n-    @Test\n-    void testNMArgumentProcessing() throws FileNotFoundException {\n-        TestResult tr;\n-        \/\/ the direct invokers of the VM\n-        String options[] = {\n-            \"-version\", \"-fullversion\", \"-help\", \"-?\", \"-X\"\n-        };\n-        for (String option : options) {\n-            tr = doExec(javaCmd, option, \"-XX:NativeMemoryTracking=summary\");\n-            checkTestResult(tr);\n-        }\n-\n-        \/\/ create a test jar\n-        File jarFile = new File(\"test.jar\");\n-        createJar(jarFile, \"public static void main(String... args){}\");\n-\n-        \/\/ ones that involve main-class of some sort\n-        tr = doExec(javaCmd, \"-jar\", jarFile.getName(),\n-                \"-XX:NativeMemoryTracking=summary\");\n-        checkTestResult(tr);\n-\n-        tr = doExec(javaCmd, \"-cp\", jarFile.getName(), \"Foo\",\n-                \"-XX:NativeMemoryTracking=summary\");\n-        checkTestResult(tr);\n-\n-        final Map<String, String> envMap = new HashMap<>();\n-        \/\/ checkwith CLASSPATH set ie. no -cp or -classpath\n-        envMap.put(\"CLASSPATH\", \".\");\n-        tr = doExec(envMap, javaCmd, \"Foo\", \"-XX:NativeMemoryTracking=summary\");\n-        checkTestResult(tr);\n-\n-        \/\/ should accept with no warnings\n-        tr = doExec(javaCmd, \"-cp\", jarFile.getName(),\n-                    \"-XX:NativeMemoryTracking=summary\", \"Foo\");\n-        ensureNoWarnings(tr);\n-\n-        \/\/ should accept with no warnings\n-        tr = doExec(javaCmd, \"-classpath\", jarFile.getName(),\n-                    \"-XX:NativeMemoryTracking=summary\", \"Foo\");\n-        ensureNoWarnings(tr);\n-\n-        \/\/ make sure a missing class is handled correctly, because the class\n-        \/\/ resolution is performed by the JVM.\n-        tr = doExec(javaCmd, \"AbsentClass\", \"-XX:NativeMemoryTracking=summary\");\n-        if (!tr.contains(\"Error: Could not find or load main class AbsentClass\")) {\n-            throw new RuntimeException(\"Test Fails\");\n-        }\n-\n-        \/\/ Make sure we handle correctly the module long form (--module=)\n-        tr = doExec(javaCmd, \"-XX:NativeMemoryTracking=summary\", \"--module=jdk.compiler\/com.sun.tools.javac.Main\", \"--help\");\n-        ensureNoWarnings(tr);\n-    }\n-\n-    @Test\n-    void testNMTTools() throws FileNotFoundException {\n-        TestResult tr;\n-        \/\/ Tools (non-java launchers) should handle NTM (no \"wrong launcher\" warning).\n-        tr = doExec(jarCmd, \"-J-XX:NativeMemoryTracking=summary\", \"--help\");\n-        ensureNoWarnings(tr);\n-\n-        \/\/ And java terminal args (like \"--help\") don't stop \"-J\" args parsing.\n-        tr = doExec(jarCmd, \"--help\", \"-J-XX:NativeMemoryTracking=summary\");\n-        ensureNoWarnings(tr);\n-    }\n-\n-    void ensureNoWarnings(TestResult tr) {\n-        checkTestResult(tr);\n-        if (tr.contains(\"warning: Native Memory Tracking\")) {\n-            System.err.println(tr.toString());\n-            throw new RuntimeException(\"Test Fails\");\n-        }\n-    }\n-\n","filename":"test\/jdk\/tools\/launcher\/TestSpecialArgs.java","additions":1,"deletions":163,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -47,4 +47,4 @@\n-import sun.hotspot.code.Compiler;\n-import sun.hotspot.cpuinfo.CPUInfo;\n-import sun.hotspot.gc.GC;\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.code.Compiler;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.gc.GC;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-tools\/jdeprscan\/tests\/jdk\/jdeprscan\/TestRelease.java                            8270060    generic-all    java.util.SplittableRandom extends a non-exported class\n","filename":"test\/langtools\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+                \"-Xdoclint:none\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDiagsLineCaret\/TestDiagsLineCaret.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -184,1 +184,5 @@\n-            Iterable<String> options = List.of(\"-taglet\", MyTaglet.class.getName(), \"-XDaccessInternalAPI\", \"p\");\n+            Iterable<String> options = List.of(\n+                    \"-taglet\", MyTaglet.class.getName(),\n+                    \"-XDaccessInternalAPI\",\n+                    \"-Xdoclint:all,-missing\",\n+                    \"p\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDocTreeDiags\/TestDocTreeDiags.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8269722\n+ * @bug 8269722 8270866\n@@ -70,0 +70,8 @@\n+        checkOutput(\"BadParam.Base.html\", true, \"\"\"\n+                <dt>Parameters:<\/dt>\n+                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                \"\"\");\n+        checkOutput(\"BadParam.Sub.html\", true, \"\"\"\n+                <dt>Parameters:<\/dt>\n+                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                \"\"\");\n@@ -94,0 +102,59 @@\n+        checkOutput(\"BadReturn.Base.html\", true, \"\"\"\n+                <dt>Returns:<\/dt>\n+                <dd>a &lt; b<\/dd>\n+                \"\"\");\n+        checkOutput(\"BadReturn.Sub.html\", true, \"\"\"\n+                <dt>Returns:<\/dt>\n+                <dd>a &lt; b<\/dd>\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void testBadInheritedReference(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                public class BadReference {\n+                    public interface Intf {\n+                        \/**\n+                         * {@link NonExistingClass}\n+                         *\/\n+                        public void m();\n+                    }\n+\n+                    public static class Impl1 implements Intf {\n+                        public void m() { }\n+                    }\n+\n+                    public static class Impl2 implements Intf {\n+                        \/**\n+                         * {@inheritDoc}\n+                         *\/\n+                        public void m() { }\n+                    }\n+\n+                    \/\/ subclass has doc comment but inherits main description\n+                    public static class Impl3 implements Intf {\n+                        \/**\n+                         * @since 1\n+                         *\/\n+                        public void m() { }\n+                    }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"-Xdoclint:-reference\",\n+                src.resolve(\"BadReference.java\").toString());\n+        checkExit(Exit.OK);\n+        checkOutput(\"BadReference.Intf.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n+        checkOutput(\"BadReference.Impl1.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n+        checkOutput(\"BadReference.Impl2.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n+        checkOutput(\"BadReference.Impl3.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n@@ -95,1 +162,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInherited\/TestInherited.java","additions":69,"deletions":2,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-                \"-Xdoclint:all\",\n+                \"-Xdoclint:all,-missing\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testJavaFX\/TestJavaFX.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,159 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8269774\n+ * @summary doclint reports missing javadoc comments for JavaFX properties if the docs are on the property method\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox javadoc.tester.*\n+ * @run main TestJavaFXMissingPropComments\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestJavaFXMissingPropComments extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        TestJavaFXMissingPropComments tester = new TestJavaFXMissingPropComments();\n+        tester.runTests(m -> new Object[] { Path.of(m.getName()) });\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @Test\n+    public void testMissingFieldComments(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/** Class comment. *\/\n+                public class C {\n+                    \/** Dummy class. *\/\n+                    public static class BooleanProperty { }\n+\n+                    \/\/ no comment\n+                    private BooleanProperty value;\n+\n+                    \/**\n+                     * The value property (property method comment).\n+                     * @return the property object\n+                     *\/\n+                    public BooleanProperty valueProperty() {\n+                        return value;\n+                    }\n+\n+                    \/\/ no comment\n+                    public boolean getValue() {\n+                        return true;\n+                    }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"--javafx\",\n+                \"--disable-javafx-strict-checks\",\n+                \"-sourcepath\", src.toString(),\n+                \"p\"\n+                );\n+        checkExit(Exit.OK);\n+\n+        \/\/ no warnings for any missing comments\n+        checkOutput(Output.OUT, false,\n+                \"warning: no comment\");\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <section class=\"detail\" id=\"getValue()\">\n+                    <h3>getValue<\/h3>\n+                    <div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span c\\\n+                    lass=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">getValue<\/span\\\n+                    >()<\/div>\n+                    <div class=\"block\">Gets the value of the property value.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Property description:<\/dt>\n+                    <dd>The value property (property method comment).<\/dd>\n+                    <\/dl>\n+                    <\/section>\"\"\"\n+                );\n+    }\n+\n+    @Test\n+    public void testWithFieldComments(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/** Class comment. *\/\n+                public class C {\n+                    \/** Dummy class. *\/\n+                    public static class BooleanProperty { }\n+\n+                    \/** The value property (field comment). *\/\n+                    private BooleanProperty value;\n+\n+                    \/**\n+                     * The value property (property method comment).\n+                     * @return the property object\n+                     *\/\n+                    public BooleanProperty valueProperty() {\n+                        return value;\n+                    }\n+\n+                    \/\/ no comment\n+                    public boolean getValue() {\n+                        return true;\n+                    }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"--javafx\",\n+                \"--disable-javafx-strict-checks\",\n+                \"-sourcepath\", src.toString(),\n+                \"p\"\n+        );\n+        checkExit(Exit.OK);\n+\n+        \/\/ no warnings for any missing comments\n+        checkOutput(Output.OUT, false,\n+                \"warning: no comment\");\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <section class=\"detail\" id=\"getValue()\">\n+                    <h3>getValue<\/h3>\n+                    <div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span c\\\n+                    lass=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">getValue<\/span\\\n+                    >()<\/div>\n+                    <div class=\"block\">Gets the value of the property value.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Property description:<\/dt>\n+                    <dd>The value property (field comment).<\/dd>\n+                    <\/dl>\n+                    <\/section>\"\"\"\n+        );\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testJavaFX\/TestJavaFXMissingPropComments.java","additions":159,"deletions":0,"binary":false,"changes":159,"status":"added"},{"patch":"@@ -52,1 +52,3 @@\n-                    public class C { }\n+                    public class C {\n+                        \/** . *\/ C() { }\n+                    }\n@@ -56,1 +58,1 @@\n-                    public class C { }\n+                    public class C {\n@@ -68,0 +70,1 @@\n+                        \/** . *\/ C() { }\n@@ -84,0 +87,1 @@\n+                        \/** . *\/ C() { }\n@@ -99,1 +103,4 @@\n-                        public class Nested { }\n+                        public class Nested {\n+                            \/** . *\/ Nested() { }\n+                        }\n+                        \/** . *\/ C() { }\n@@ -104,1 +111,1 @@\n-                        public class Nested { }\n+                        public class Nested {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMissingComment\/TestMissingComment.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        \/* 02 *\/    \"public class Test {\\n\" +\n+        \/* 02 *\/    \"public class Test { \/** *\/ Test() { }\\n\" +\n@@ -88,1 +88,1 @@\n-        \/* 02 *\/    \"public class P1Test {\\n\" +\n+        \/* 02 *\/    \"public class P1Test { \/** *\/ P1Test() { }\\n\" +\n@@ -95,1 +95,1 @@\n-        \/* 02 *\/    \"public class P2Test {\\n\" +\n+        \/* 02 *\/    \"public class P2Test { \/** *\/ P2Test() { }\\n\" +\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/doclint\/DocLintTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-public class AccessTest {\n+public class AccessTest { \/** *\/ AccessTest() { }\n@@ -45,1 +45,1 @@\n-class AccessTest2 {\n+class AccessTest2 { \/** *\/ AccessTest2() { }\n","filename":"test\/langtools\/tools\/doclint\/AccessTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:-accessibility AccessibilityTest.java\n- * @run main DocLintTester -ref AccessibilityTest.out AccessibilityTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing,-accessibility AccessibilityTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref AccessibilityTest.out AccessibilityTest.java\n","filename":"test\/langtools\/tools\/doclint\/AccessibilityTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -ref AnchorTest.out AnchorTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorTest.out AnchorTest.java\n","filename":"test\/langtools\/tools\/doclint\/AnchorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -ref AnchorTest2.out AnchorTest2.java AnchorTest2a.java\n- * @run main DocLintTester -ref AnchorTest2.out AnchorTest2a.java AnchorTest2.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorTest2.out AnchorTest2.java AnchorTest2a.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorTest2.out AnchorTest2a.java AnchorTest2.java\n","filename":"test\/langtools\/tools\/doclint\/AnchorTest2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=CrashInAnnotateTest.out -Xdoclint -XDrawDiagnostics CrashInAnnotateTest.java\n+ * @compile\/fail\/ref=CrashInAnnotateTest.out -Xdoclint:all,-missing -XDrawDiagnostics CrashInAnnotateTest.java\n","filename":"test\/langtools\/tools\/doclint\/CrashInAnnotateTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n-CrashInAnnotateTest.java:18:10: compiler.warn.proc.messager: no comment\n@@ -8,4 +7,1 @@\n-CrashInAnnotateTest.java:28:5: compiler.warn.proc.messager: no comment\n-CrashInAnnotateTest.java:29:16: compiler.warn.proc.messager: no comment\n-6 errors\n-3 warnings\n\\ No newline at end of file\n+6 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/doclint\/CrashInAnnotateTest.out","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -20,0 +20,1 @@\n+    \/** *\/ CustomTagTest() { }\n","filename":"test\/langtools\/tools\/doclint\/CustomTagTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:-reference DuplicateParamTest.java\n- * @run main DocLintTester -ref DuplicateParamTest.out DuplicateParamTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing,-reference DuplicateParamTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref DuplicateParamTest.out DuplicateParamTest.java\n","filename":"test\/langtools\/tools\/doclint\/DuplicateParamTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:-reference DuplicateReturnTest.java\n- * @run main DocLintTester -ref DuplicateReturnTest.out DuplicateReturnTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing,-reference DuplicateReturnTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref DuplicateReturnTest.out DuplicateReturnTest.java\n","filename":"test\/langtools\/tools\/doclint\/DuplicateReturnTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -13,0 +13,1 @@\n+    \/** *\/ EmptyAuthorTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyAuthorTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyExceptionTest {\n+public class EmptyExceptionTest {  \/** *\/ EmptyExceptionTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyExceptionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyParamTest {\n+public class EmptyParamTest { \/** . *\/ EmptyParamTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyParamTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyReturnTest {\n+public class EmptyReturnTest { \/** . *\/ EmptyReturnTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyReturnTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-public class EmptySerialDataTest implements Serializable {\n+public class EmptySerialDataTest implements Serializable { \/** . *\/ EmptySerialDataTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptySerialDataTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-public class EmptySerialFieldTest implements Serializable {\n+public class EmptySerialFieldTest implements Serializable { \/** . *\/ EmptySerialFieldTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptySerialFieldTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptySinceTest {\n+public class EmptySinceTest { \/** . *\/ EmptySinceTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptySinceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyTagsTest {\n+public class EmptyTagsTest { \/** . *\/ EmptyTagsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyVersionTest {\n+public class EmptyVersionTest { \/** . *\/ EmptyVersionTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:-html EndTagsTest.java\n- * @run main DocLintTester -ref EndTagsTest.out EndTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing,-html EndTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref EndTagsTest.out EndTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/EndTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,3 @@\n+\n+    \/** . *\/\n+    EndWithIdentifierTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EndWithIdentifierTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:-html HtmlAttrsTest.java\n- * @run main DocLintTester -ref HtmlAttrsTest.out HtmlAttrsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing,-html HtmlAttrsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref HtmlAttrsTest.out HtmlAttrsTest.java\n","filename":"test\/langtools\/tools\/doclint\/HtmlAttrsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:-html HtmlTagsTest.java\n- * @run main DocLintTester -ref HtmlTagsTest.out HtmlTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing,-html HtmlTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref HtmlTagsTest.out HtmlTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/HtmlTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main DocLintTester -Xmsgs:all SyntheticTest.java\n+ * @run main DocLintTester -Xmsgs:all LambdaTest.java\n@@ -44,0 +44,2 @@\n+    \/** *\/ LambdaTest() { }\n+\n","filename":"test\/langtools\/tools\/doclint\/LambdaTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -17,0 +17,3 @@\n+\n+    \/** *\/\n+    LiteralTest() { }\n","filename":"test\/langtools\/tools\/doclint\/LiteralTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -15,0 +15,3 @@\n+\n+    \/** *\/\n+    MissingThrowsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/MissingThrowsTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -12,0 +12,3 @@\n+\n+    \/** *\/\n+    MultipleDocLintOptionsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/MultipleDocLintOptionsTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,26 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.doclint\n+ * @build DocLintTester\n+ * @run main DocLintTester -Xmsgs:-missing NoArgsConstructorTest.java\n+ * @run main DocLintTester -Xmsgs:missing\/protected -ref NoArgsConstructorTest.out NoArgsConstructorTest.java\n+ *\/\n+\n+\/** Main Comment. *\/\n+public class NoArgsConstructorTest {\n+    \/\/ default constructor\n+\n+    \/** PublicConstructor comment. *\/\n+    public static class PublicConstructor {\n+        public PublicConstructor() { }\n+    }\n+\n+    \/** PrivateConstructor comment. *\/\n+    public static class PrivateConstructor {\n+        private PrivateConstructor() { }\n+    }\n+\n+    \/** PublicInterface comment. *\/\n+    public interface PublicInterface {\n+    }\n+}\n","filename":"test\/langtools\/tools\/doclint\/NoArgsConstructorTest.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,7 @@\n+NoArgsConstructorTest.java:10: warning: use of default constructor, which does not provide a comment\n+public class NoArgsConstructorTest {\n+       ^\n+NoArgsConstructorTest.java:15: warning: no comment\n+        public PublicConstructor() { }\n+               ^\n+2 warnings\n","filename":"test\/langtools\/tools\/doclint\/NoArgsConstructorTest.out","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,1 @@\n+    \/** . *\/ C1() { }\n@@ -67,0 +68,1 @@\n+    \/** . *\/ C2() { }\n@@ -72,0 +74,1 @@\n+    \/** . *\/ C3() { }\n@@ -77,0 +80,1 @@\n+    \/** . *\/ C4() { }\n@@ -83,0 +87,1 @@\n+    \/** . *\/ C5() { }\n@@ -89,0 +94,1 @@\n+    \/** . *\/ C6() { }\n@@ -94,0 +100,1 @@\n+    \/** . *\/ C7() { }\n","filename":"test\/langtools\/tools\/doclint\/OverridesTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,3 @@\n+\n+    \/** . *\/\n+    ParaTagTest() { }\n","filename":"test\/langtools\/tools\/doclint\/ParaTagTest.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -ref ProvidesTest.out ProvidesTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref ProvidesTest.out ProvidesTest.java\n","filename":"test\/langtools\/tools\/doclint\/ProvidesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -21,1 +21,1 @@\n-    public class InvalidParam { }\n+    public class InvalidParam { \/** . *\/ private InvalidParam() { } }\n@@ -31,1 +31,1 @@\n-    public class typaram_name_not_found { }\n+    public class typaram_name_not_found { \/** . *\/ private typaram_name_not_found() { } }\n@@ -78,0 +78,3 @@\n+\n+    \/** . *\/\n+    private ReferenceTest() { }\n","filename":"test\/langtools\/tools\/doclint\/ReferenceTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,0 +19,3 @@\n+\n+    \/** . *\/\n+    private SummaryTest() { }\n","filename":"test\/langtools\/tools\/doclint\/SummaryTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -17,0 +17,3 @@\n+\n+    \/** *\/\n+    private SyntaxTest() { }\n","filename":"test\/langtools\/tools\/doclint\/SyntaxTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8004832\n+ * @bug 8004832 8249634\n@@ -30,1 +30,1 @@\n- * @run main DocLintTester -Xmsgs:all SyntheticTest.java\n+ * @run main DocLintTester -Xmsgs:all -ref SyntheticTest.out SyntheticTest.java\n@@ -35,1 +35,1 @@\n- * such as default constructors and enum methods.\n+ * such as enum methods, and that a message *is* generated for a default constructor\n@@ -41,1 +41,1 @@\n-    enum E {\n+    public enum E {\n","filename":"test\/langtools\/tools\/doclint\/SyntheticTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,5 @@\n+SyntheticTest.java:37: warning: use of default constructor, which does not provide a comment\n+public class SyntheticTest {\n+       ^\n+1 warning\n+\n","filename":"test\/langtools\/tools\/doclint\/SyntheticTest.out","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -17,0 +17,1 @@\n+    \/** . *\/ private UnfinishedInlineTagTest() { }\n","filename":"test\/langtools\/tools\/doclint\/UnfinishedInlineTagTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -ref UsesTest.out UsesTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref UsesTest.out UsesTest.java\n","filename":"test\/langtools\/tools\/doclint\/UsesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -ref ValueTest.out ValueTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref ValueTest.out ValueTest.java\n","filename":"test\/langtools\/tools\/doclint\/ValueTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,0 +53,3 @@\n+\n+        \/** . *\/\n+        private Nested() { }\n@@ -54,0 +57,3 @@\n+\n+    \/** . *\/\n+    private Test() { }\n","filename":"test\/langtools\/tools\/doclint\/anchorTests\/p\/Test.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmaxerrs 200 -ref HtmlVersionTagsAttrsTest.out HtmlVersionTagsAttrsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -Xmaxerrs 200 -ref HtmlVersionTagsAttrsTest.out HtmlVersionTagsAttrsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main DocLintTester -Xmsgs -ref InlineTagTest.out InlineTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref InlineTagTest.out InlineTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/InlineTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs -ref ListTagsTest.out ListTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref ListTagsTest.out ListTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/ListTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs -ref OtherTagsTest.out OtherTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref OtherTagsTest.out OtherTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/OtherTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main DocLintTester -Xmsgs -ref TableTagTest.out TableTagsTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref TableTagTest.out TableTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/TableTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref TagNotAllowed.out TagNotAllowed.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref TagNotAllowed.out TagNotAllowed.java\n","filename":"test\/langtools\/tools\/doclint\/html\/TagNotAllowed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref TextNotAllowed.out TextNotAllowed.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref TextNotAllowed.out TextNotAllowed.java\n","filename":"test\/langtools\/tools\/doclint\/html\/TextNotAllowed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs -ref UnknownTagTest.out UnknownTagTest.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref UnknownTagTest.out UnknownTagTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/UnknownTagTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -16,1 +16,3 @@\n-class Test { }\n+class Test {\n+    \/** *\/ Test() { }\n+}\n","filename":"test\/langtools\/tools\/doclint\/packageTests\/bad\/Test.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref AnchorAlreadyDefined.out AnchorAlreadyDefined.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorAlreadyDefined.out AnchorAlreadyDefined.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/AnchorAlreadyDefined.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref BadEnd.out BadEnd.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref BadEnd.out BadEnd.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/BadEnd.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref InsertImplicit.out InsertImplicit.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref InsertImplicit.out InsertImplicit.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InsertImplicit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref InvalidEntity.out InvalidEntity.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidEntity.out InvalidEntity.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidEntity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref InvalidName.out InvalidName.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidName.out InvalidName.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref InvalidTag.out InvalidTag.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidTag.out InvalidTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref InvalidURI.out InvalidURI.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidURI.out InvalidURI.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidURI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref MissingGT.out MissingGT.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref MissingGT.out MissingGT.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/MissingGT.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref MissingTag.out MissingTag.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref MissingTag.out MissingTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/MissingTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref NestedTag.out NestedTag.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref NestedTag.out NestedTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/NestedTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref ParaInPre.out ParaInPre.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref ParaInPre.out ParaInPre.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/ParaInPre.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref RepeatedAttr.out RepeatedAttr.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref RepeatedAttr.out RepeatedAttr.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/RepeatedAttr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref TextNotAllowed.out TextNotAllowed.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref TextNotAllowed.out TextNotAllowed.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/TextNotAllowed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref TrimmingEmptyTag.out TrimmingEmptyTag.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref TrimmingEmptyTag.out TrimmingEmptyTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/TrimmingEmptyTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -ref UnescapedOrUnknownEntity.out UnescapedOrUnknownEntity.java\n+ * @run main DocLintTester -Xmsgs:all,-missing -ref UnescapedOrUnknownEntity.out UnescapedOrUnknownEntity.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/UnescapedOrUnknownEntity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,0 +22,2 @@\n+\n+    \/** *\/ MaxDiagsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/tool\/MaxDiagsTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -20,0 +20,2 @@\n+\n+    \/** *\/ StatsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/tool\/StatsTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8269150\n+ * @summary Unicode \\ u 0 0 5 C not treated as an escaping backslash\n+ * @run main UnicodeBackslash\n+ *\/\n+\n+public class UnicodeBackslash {\n+    static boolean failed = false;\n+\n+    public static void main(String... args) {\n+        \/\/   id     source                       expected\n+        test(\"1.1\", \"\\\\]\",                       \"\\\\]\");\n+        test(\"1.2\", \"\\u005C\\]\",                  \"\\\\]\");\n+        test(\"1.3\", \"\\\\u005C]\",                  \"\\\\u005C]\");\n+        test(\"1.4\", \"\\u005C\\u005C]\",             \"\\\\]\");\n+\n+        test(\"2.1\", \"\\\\\\\\]\",                     \"\\\\\\\\]\");\n+        test(\"2.2\", \"\\u005C\\\\\\]\",                \"\\\\\\\\]\");\n+        test(\"2.3\", \"\\\\u005C\\\\]\",                \"\\\\u005C\\\\]\");\n+        test(\"2.4\", \"\\\\\\u005C\\]\",                \"\\\\\\\\]\");\n+        test(\"2.5\", \"\\\\\\\\u005C]\",                \"\\\\\\\\u005C]\");\n+\n+        test(\"3.1\", \"\\u005C\\u005C\\\\]\",           \"\\\\\\\\]\");\n+        test(\"3.2\", \"\\u005C\\\\u005C\\]\",           \"\\\\\\\\]\");\n+        test(\"3.3\", \"\\u005C\\\\\\u005C]\",           \"\\\\\\\\u005C]\");\n+        test(\"3.4\", \"\\\\u005C\\u005C\\]\",           \"\\\\u005C\\\\]\");\n+        test(\"3.5\", \"\\\\u005C\\\\u005C]\",           \"\\\\u005C\\\\u005C]\");\n+        test(\"3.6\", \"\\\\\\u005C\\u005C]\",           \"\\\\\\\\]\");\n+\n+        test(\"4.1\", \"\\u005C\\u005C\\u005C\\]\",      \"\\\\\\\\]\");\n+        test(\"4.2\", \"\\u005C\\\\u005C\\u005C]\",      \"\\\\\\\\]\");\n+        test(\"4.3\", \"\\u005C\\u005C\\\\u005C]\",      \"\\\\\\\\u005C]\");\n+        test(\"4.4\", \"\\\\u005C\\u005C\\u005C]\",      \"\\\\u005C\\\\]\");\n+\n+        test(\"5.1\", \"\\u005C\\u005C\\u005C\\u005C]\", \"\\\\\\\\]\");\n+\n+        if (failed) {\n+            throw new RuntimeException(\"Unicode escapes not handled correctly\");\n+        }\n+    }\n+\n+    static void test(String id, String source, String expected) {\n+        if (!source.equals(expected)) {\n+            System.err.println(id + \": expected: \" +  expected + \", found: \" + source);\n+            failed = true;\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/UnicodeBackslash\/UnicodeBackslash.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Alphabet LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8261088\n+ * @summary Repeatable annotations without Target cannot have containers that target module declarations\n+ * @compile T8261088.java\n+ *\/\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Repeatable;\n+import java.lang.annotation.Target;\n+\n+@Target(ElementType.MODULE)\n+@interface TC {\n+    T[] value() default {};\n+}\n+\n+@Repeatable(TC.class)\n+@interface T {}\n","filename":"test\/langtools\/tools\/javac\/annotations\/8261088\/T8261088.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8006547\n+ * @bug 8006547 8261088\n@@ -45,1 +45,2 @@\n-    ElementType.RECORD_COMPONENT\n+    ElementType.RECORD_COMPONENT,\n+    ElementType.MODULE,\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/NoTargetOnContainer.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8006547\n+ * @bug 8006547 8261088\n@@ -47,1 +47,2 @@\n-    ElementType.RECORD_COMPONENT\n+    ElementType.RECORD_COMPONENT,\n+    ElementType.MODULE,\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/NoTargetOnContainer2.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-                  .options(\"-XDrawDiagnostics\", \"-Xdoclint\")\n+                  .options(\"-XDrawDiagnostics\", \"-Xdoclint:all,-missing\")\n","filename":"test\/langtools\/tools\/javac\/doclint\/DocLintFormatTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        \/* 02 *\/    \"public class Test {\\n\" +\n+        \/* 02 *\/    \"public class Test { \/** *\/ Test() { }\\n\" +\n","filename":"test\/langtools\/tools\/javac\/doclint\/DocLintTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,4 +66,6 @@\n-        \"package p1;\\n\" +\n-        \"\/** Syntax < error. *\/\\n\" +\n-        \"public class p1T {\\n\" +\n-        \"}\\n\",\n+        \"\"\"\n+            package p1;\n+            \/** Syntax < error. *\/\n+            public class p1T {\n+            }\n+            \"\"\",\n@@ -71,4 +73,6 @@\n-        \"package p1.sp1;\\n\" +\n-        \"\/** Syntax < error. *\/\\n\" +\n-        \"public class p1sp1T {\\n\" +\n-        \"}\\n\",\n+        \"\"\"\n+            package p1.sp1;\n+            \/** Syntax < error. *\/\n+            public class p1sp1T {\n+            }\n+            \"\"\",\n@@ -76,4 +80,6 @@\n-        \"package p1.sp1.sp2;\\n\" +\n-        \"\/** Syntax < error. *\/\\n\" +\n-        \"public class p1sp1sp2T {\\n\" +\n-        \"}\\n\",\n+        \"\"\"\n+            package p1.sp1.sp2;\n+            \/** Syntax < error. *\/\n+            public class p1sp1sp2T {\n+            }\n+            \"\"\",\n@@ -81,4 +87,6 @@\n-        \"package p2;\\n\" +\n-        \"\/** Syntax < error. *\/\\n\" +\n-        \"public class p2T {\\n\" +\n-        \"}\\n\",\n+        \"\"\"\n+            package p2;\n+            \/** Syntax < error. *\/\n+            public class p2T {\n+            }\n+            \"\"\",\n@@ -86,3 +94,5 @@\n-        \"\/** Syntax < error. *\/\\n\" +\n-        \"public class Default {\\n\" +\n-        \"}\\n\",\n+        \"\"\"\n+            \/** Syntax < error. *\/\n+            public class Default {\n+            }\n+            \"\"\",\n@@ -133,1 +143,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\"),\n@@ -138,1 +148,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:p1\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:p1\"),\n@@ -142,1 +152,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:p1.*\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:p1.*\"),\n@@ -146,1 +156,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:p1.*,-p1.sp1\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:p1.*,-p1.sp1\"),\n@@ -150,1 +160,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:-p1.sp1\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:-p1.sp1\"),\n@@ -154,1 +164,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:wrong+package\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:wrong+package\"),\n","filename":"test\/langtools\/tools\/javac\/doclint\/IncludePackagesTest.java","additions":36,"deletions":26,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-                  .options(\"-XDrawDiagnostics\", \"-Xdoclint:all\", \"-XDdev\")\n+                  .options(\"-XDrawDiagnostics\", \"-Xdoclint:all,-missing\", \"-XDdev\")\n","filename":"test\/langtools\/tools\/javac\/doclint\/NPEDuplicateClassNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import java.io.Writer;\n@@ -27,0 +28,1 @@\n+import javax.lang.model.element.*;\n@@ -267,0 +269,56 @@\n+\n+    \/**\n+     * Vacuous implementation of javax.lang.model.util.Elements to aid\n+     * in test development. Methods with defaults in the interface are\n+     * *not* overridden to allow them to be tested.\n+     *\/\n+    public static class VacuousElements implements Elements {\n+        public VacuousElements() {}\n+\n+        @Override\n+        public PackageElement getPackageElement(CharSequence name) {return null;}\n+\n+        @Override\n+        public TypeElement getTypeElement(CharSequence name) {return null;}\n+\n+        @Override\n+        public Map<? extends ExecutableElement, ? extends AnnotationValue>\n+                                                          getElementValuesWithDefaults(AnnotationMirror a) {return null;}\n+        @Override\n+        public String getDocComment(Element e) {return null;}\n+\n+        @Override\n+        public boolean isDeprecated(Element e) {return false;}\n+\n+        @Override\n+        public  Name getBinaryName(TypeElement type) {return null;}\n+\n+        @Override\n+        public PackageElement getPackageOf(Element e) {return null;}\n+\n+        @Override\n+        public List<? extends Element> getAllMembers(TypeElement type) {return null;}\n+\n+        @Override\n+        public List<? extends AnnotationMirror> getAllAnnotationMirrors(Element e) {return null;}\n+\n+        @Override\n+        public boolean hides(Element hider, Element hidden) {return false;}\n+\n+        @Override\n+        public boolean overrides(ExecutableElement overrider,\n+                             ExecutableElement overridden,\n+                             TypeElement type) {return false;}\n+\n+        @Override\n+        public String getConstantExpression(Object value) {return null;}\n+\n+        @Override\n+        public void printElements(Writer w, Element... elements) {}\n+\n+        @Override\n+        public Name getName(CharSequence cs)  {return null;}\n+\n+        @Override\n+        public boolean isFunctionalInterface(TypeElement type) {return false;}\n+    }\n","filename":"test\/langtools\/tools\/javac\/lib\/JavacTestingAbstractProcessor.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928\n@@ -1798,0 +1798,25 @@\n+    @Test \/\/JDK-8271928\n+    void testX() throws IOException {\n+        String code = \"\"\"\n+                      package test;\n+                          public static void test() {\n+                              return test;\n+                          }\n+                      \"\"\";\n+\n+        JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(null, fm, null,\n+                null, null, Arrays.asList(new MyFileObject(code)));\n+        CompilationUnitTree cut = ct.parse().iterator().next();\n+        SourcePositions sp = Trees.instance(ct).getSourcePositions();\n+        new TreePathScanner<Void, Void>() {\n+            @Override\n+            public Void visitErroneous(ErroneousTree tree, Void p) {\n+                int pos = (int) sp.getStartPosition(cut, tree);\n+                if (pos == (-1)) {\n+                    fail(\"Invalid source position for an ErroneousTree\");\n+                }\n+                return scan(tree.getErrorTrees(), p);\n+            }\n+        }.scan(cut, null);\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8222369\n+ * @bug 8222369 8225488\n@@ -83,0 +83,15 @@\n+\n+        \/\/ Get kind from the type of the executable directly\n+        TypeKind kindFromType = new TypeKindVisitor<TypeKind, Object>(null) {\n+            @Override\n+            public TypeKind visitExecutable(ExecutableType t, Object p) {\n+                return t.getReceiverType().getKind();\n+            }\n+        }.visit(executable.asType());\n+\n+        if (kindFromType != expectedKind) {\n+            messager.printMessage(ERROR,\n+                                  String.format(\"Unexpected TypeKind on executable's asType() of %s:\" +\n+                                                \" expected %s\\t got %s%n\",\n+                                                executable, expectedKind, kindFromType));\n+        }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestExecutableReceiverType.java","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+import javax.lang.model.type.TypeKind;\n@@ -329,1 +330,1 @@\n-            scan(t.getReceiverType());\n+            scan(t.getReceiverType(), p);\n@@ -474,1 +475,1 @@\n-    @Test(posn=2, annoType=TA.class, expect=\"4\")\n+    @Test(posn=3, annoType=TA.class, expect=\"4\")\n@@ -480,1 +481,1 @@\n-    @Test(posn=3, annoType=TA.class, expect=\"6\")\n+    @Test(posn=4, annoType=TA.class, expect=\"6\")\n@@ -484,1 +485,1 @@\n-    @Test(posn=7, annoType=TA.class, expect=\"8\")\n+    @Test(posn=8, annoType=TA.class, expect=\"8\")\n@@ -531,2 +532,2 @@\n-    @Test(posn=5, annoType = TA.class, expect = \"25\")\n-    @Test(posn=5, annoType = TB.class, expect = \"26\")\n+    @Test(posn=6, annoType = TA.class, expect = \"25\")\n+    @Test(posn=6, annoType = TB.class, expect = \"26\")\n@@ -542,1 +543,1 @@\n-    @Test(posn=5, annoType = TB.class, expect = \"41\")\n+    @Test(posn=6, annoType = TB.class, expect = \"41\")\n@@ -551,2 +552,2 @@\n-    @Test(posn=5, annoType = TA.class, expect = \"60\")\n-    @Test(posn=5, annoType = TB.class, expect = \"61\")\n+    @Test(posn=6, annoType = TA.class, expect = \"60\")\n+    @Test(posn=6, annoType = TB.class, expect = \"61\")\n@@ -562,1 +563,1 @@\n-    @Test(posn=5, annoType = TB.class, expect = \"81\")\n+    @Test(posn=6, annoType = TB.class, expect = \"81\")\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            if ((new TestElements()).isAutomaticModule(null) != false) {\n+            if ((new VacuousElements()).isAutomaticModule(null) != false) {\n@@ -71,53 +71,0 @@\n-\n-    \/\/ Use default methods of javax.lang.model.util.Elements; define\n-    \/\/ vacuous methods to override the abstract methods.\n-    private static class TestElements implements Elements {\n-        public TestElements() {}\n-\n-        @Override\n-        public PackageElement getPackageElement(CharSequence name) {return null;}\n-\n-        @Override\n-        public TypeElement getTypeElement(CharSequence name) {return null;}\n-\n-        @Override\n-        public Map<? extends ExecutableElement, ? extends AnnotationValue>\n-                                                          getElementValuesWithDefaults(AnnotationMirror a) {return null;}\n-        @Override\n-        public String getDocComment(Element e) {return null;}\n-\n-        @Override\n-        public boolean isDeprecated(Element e) {return false;}\n-\n-        @Override\n-        public  Name getBinaryName(TypeElement type) {return null;}\n-\n-        @Override\n-        public PackageElement getPackageOf(Element e) {return null;}\n-\n-        @Override\n-        public List<? extends Element> getAllMembers(TypeElement type) {return null;}\n-\n-        @Override\n-        public List<? extends AnnotationMirror> getAllAnnotationMirrors(Element e) {return null;}\n-\n-        @Override\n-        public boolean hides(Element hider, Element hidden) {return false;}\n-\n-        @Override\n-        public boolean overrides(ExecutableElement overrider,\n-                             ExecutableElement overridden,\n-                             TypeElement type) {return false;}\n-\n-        @Override\n-        public String getConstantExpression(Object value) {return null;}\n-\n-        @Override\n-        public void printElements(Writer w, Element... elements) {}\n-\n-        @Override\n-        public Name getName(CharSequence cs)  {return null;}\n-\n-        @Override\n-        public boolean isFunctionalInterface(TypeElement type) {return false;}\n-    }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestIsAutomaticMod.java","additions":1,"deletions":54,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -0,0 +1,138 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8140442\n+ * @summary Test Elements.getOutermostTypeElement\n+ * @library \/tools\/javac\/lib\n+ * @build   JavacTestingAbstractProcessor TestOutermostTypeElement\n+ * @compile -processor TestOutermostTypeElement -proc:only TestOutermostTypeElement.java\n+ *\/\n+\n+import java.io.Writer;\n+import java.util.*;\n+import javax.annotation.processing.*;\n+import javax.lang.model.element.*;\n+import javax.lang.model.util.*;\n+\n+\/**\n+ * Test basic workings of Elements.getOutermostTypeElement\n+ *\/\n+public class TestOutermostTypeElement extends JavacTestingAbstractProcessor {\n+    public boolean process(Set<? extends TypeElement> annotations,\n+                           RoundEnvironment roundEnv) {\n+        if (!roundEnv.processingOver()) {\n+            Elements vacuousElts = new VacuousElements();\n+\n+            ModuleElement javaBaseMod = eltUtils.getModuleElement(\"java.base\");\n+            checkOuter(javaBaseMod, null, vacuousElts);\n+            checkOuter(javaBaseMod, null, eltUtils);\n+\n+            PackageElement javaLangPkg = eltUtils.getPackageElement(\"java.lang\");\n+            checkOuter(javaLangPkg, null, vacuousElts);\n+            checkOuter(javaLangPkg, null, eltUtils);\n+\n+            \/\/ Starting from the root elements, traverse over all\n+            \/\/ enclosed elements and type parameters. The outermost\n+            \/\/ enclosing type element should equal the root\n+            \/\/ element. This traversal does *not* hit elements\n+            \/\/ corresponding to structures inside of a method.\n+            for (TypeElement e : ElementFilter.typesIn(roundEnv.getRootElements()) ) {\n+                var outerScaner = new OuterScanner(e);\n+                outerScaner.scan(e, vacuousElts);\n+                outerScaner.scan(e, eltUtils);\n+             }\n+        }\n+        return true;\n+    }\n+\n+    private class OuterScanner extends ElementScanner<Void, Elements> {\n+        private TypeElement expectedOuter;\n+        public OuterScanner(TypeElement expectedOuter) {\n+            this.expectedOuter = expectedOuter;\n+        }\n+\n+        @Override\n+        public Void scan(Element e, Elements elts) {\n+            checkOuter(e, expectedOuter, elts);\n+            super.scan(e, elts);\n+            return null;\n+        }\n+    }\n+\n+    private void checkOuter(Element e, TypeElement expectedOuter, Elements elts) {\n+        var actualOuter = elts.getOutermostTypeElement(e);\n+        if (!Objects.equals(actualOuter, expectedOuter)) {\n+            throw new RuntimeException(String.format(\"Unexpected outermost ``%s''' for %s, expected ``%s.''%n\",\n+                                                     actualOuter,\n+                                                     e,\n+                                                     expectedOuter));\n+        }\n+    }\n+}\n+\n+\/**\n+ * Outer class to host a variety of kinds of inner elements with Outer\n+ * as their outermost class.\n+ *\/\n+class Outer {\n+    private Outer() {}\n+\n+    public enum InnerEnum {\n+        VALUE1,\n+        VALUE2;\n+\n+        private int field;\n+    }\n+\n+    public static class InnerClass {\n+        private static int field;\n+        static {\n+            field = 5;\n+        }\n+\n+        public <C> InnerClass(C c) {}\n+\n+        void foo() {return;}\n+        static void bar() {return;}\n+        static <R> R baz(Class<? extends R> clazz) {return null;}\n+\n+        private class InnerInnerClass {\n+            public InnerInnerClass() {}\n+        }\n+    }\n+\n+    public interface InnerInterface {\n+        final int field = 42;\n+        void foo();\n+    }\n+\n+    public @interface InnerAnnotation {\n+        int value() default 1;\n+    }\n+\n+    public record InnerRecord(double rpm, double diameter) {\n+        void foo() {return;}\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestOutermostTypeElement.java","additions":138,"deletions":0,"binary":false,"changes":138,"status":"added"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n@@ -37,1 +37,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/BlobSanityTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/BlobSanityTest.java","status":"renamed"},{"patch":"@@ -28,2 +28,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n@@ -38,2 +38,2 @@\n-import sun.hotspot.WhiteBox;\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.WhiteBox;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/CPUInfoTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/CPUInfoTest.java","status":"renamed"},{"patch":"@@ -32,2 +32,2 @@\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-CheckIntrinsics sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-CheckIntrinsics jdk.test.whitebox.WhiteBox\n@@ -36,1 +36,1 @@\n-package sun.hotspot;\n+package jdk.test.whitebox;\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/MismatchedWhiteBox\/WhiteBox.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/MismatchedWhiteBox\/WhiteBox.java","status":"renamed"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test id=without-inner-class\n+ * @summary verify that sun.hotspot.WhiteBox class still can be used\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI OldWhiteBox\n+ *\/\n+\n+\/*\n+ * @test id=with-inner-class\n+ * @summary verify that sun.hotspot.WhiteBox class still can be used\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox sun.hotspot.WhiteBox$WhiteBoxPermission\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI OldWhiteBox\n+ *\/\n+\n+import sun.hotspot.WhiteBox;\n+\n+public class OldWhiteBox {\n+    public static void main(String[] args) {\n+        WhiteBox wb = WhiteBox.getWhiteBox();\n+        if (wb.getHeapOopSize() < 0) {\n+            throw new Error(\"wb.getHeapOopSize() < 0\");\n+        }\n+    }\n+}\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/OldWhiteBox.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -29,2 +29,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n@@ -34,1 +34,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/WBApi.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/WBApi.java","status":"renamed"},{"patch":"@@ -32,2 +32,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n@@ -39,1 +39,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/BooleanTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/BooleanTest.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/DoubleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/DoubleTest.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/IntxTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/IntxTest.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/SizeTTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/SizeTTest.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/StringTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/StringTest.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/Uint64Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/Uint64Test.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/UintxTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/UintxTest.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/VmFlagTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib-test\/sun\/hotspot\/whitebox\/vm_flags\/VmFlagTest.java","status":"renamed"},{"patch":"@@ -0,0 +1,314 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.test.lib.cds;\n+\n+import java.io.IOException;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Random;\n+\n+import java.nio.file.Files;\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.nio.channels.FileChannel;\n+import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n+import java.nio.file.StandardOpenOption;\n+import static java.nio.file.StandardOpenOption.READ;\n+import static java.nio.file.StandardOpenOption.WRITE;\n+\n+import jdk.test.lib.Utils;\n+import sun.hotspot.WhiteBox;\n+\n+\/\/ This class performs operations on shared archive file\n+public class CDSArchiveUtils {\n+    public static int offsetMagic;           \/\/ CDSFileMapHeaderBase::_magic\n+    public static int offsetVersion;         \/\/ CDSFileMapHeaderBase::_version\n+    public static int offsetJvmIdent;        \/\/ FileMapHeader::_jvm_ident\n+    public static int spOffsetCrc;           \/\/ CDSFileMapRegion::_crc\n+    public static int fileHeaderSize;        \/\/ total size of header, aligned with alignment\n+    public static int cdsFileMapRegionSize;  \/\/ size of CDSFileMapRegion\n+    public static int spOffset;              \/\/ offset of CDSFileMapRegion\n+    public static int spUsedOffset;          \/\/ offset of CDSFileMapRegion::_used\n+    public static int sizetSize;             \/\/ size of size_t\n+    public static int intSize;               \/\/ size of int\n+    public static long alignment;            \/\/ MetaspaceShared::core_region_alignment\n+\n+    \/\/ The following should be consistent with the enum in the C++ MetaspaceShared class\n+    public static String[] shared_region_name = {\n+        \"rw\",          \/\/ ReadWrite\n+        \"ro\",          \/\/ ReadOnly\n+        \"bm\",          \/\/ relocation bitmaps\n+        \"first_closed_archive\",\n+        \"last_closed_archive\",\n+        \"first_open_archive\",\n+        \"last_open_archive\"\n+    };\n+    public static int num_regions = shared_region_name.length;\n+\n+    static {\n+        WhiteBox wb;\n+        try {\n+            wb = WhiteBox.getWhiteBox();\n+            offsetMagic = wb.getOffsetForName(\"FileMapHeader::_magic\");\n+            offsetVersion = wb.getOffsetForName(\"FileMapHeader::_version\");\n+            offsetJvmIdent = wb.getOffsetForName(\"FileMapHeader::_jvm_ident\");\n+            spOffsetCrc = wb.getOffsetForName(\"CDSFileMapRegion::_crc\");\n+            spOffset = wb.getOffsetForName(\"FileMapHeader::_space[0]\") - offsetMagic;\n+            spUsedOffset = wb.getOffsetForName(\"CDSFileMapRegion::_used\") - spOffsetCrc;\n+            sizetSize = wb.getOffsetForName(\"size_t_size\");\n+            intSize = wb.getOffsetForName(\"int_size\");\n+            cdsFileMapRegionSize  = wb.getOffsetForName(\"CDSFileMapRegion_size\");\n+            alignment = wb.metaspaceSharedRegionAlignment();\n+            \/\/ file_header_size is structure size, real size aligned with alignment\n+            \/\/ so must be calculated after alignment is available\n+            fileHeaderSize = (int)alignUpWithAlignment(wb.getOffsetForName(\"file_header_size\"));\n+        } catch (Exception e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+\n+        try {\n+            int nonExistOffset = wb.getOffsetForName(\"FileMapHeader::_non_exist_offset\");\n+            System.exit(-1); \/\/ should fail\n+        } catch (Exception e) {\n+            \/\/ success\n+        }\n+    }\n+\n+    private static long alignUpWithAlignment(long l) {\n+        return (l + alignment - 1) & (~ (alignment - 1));\n+    }\n+\n+    private static void setReadWritePermission(File file) throws Exception {\n+        if (!file.canRead()) {\n+            if (!file.setReadable(true)) {\n+                throw new IOException(\"Cannot modify file \" + file + \" as readable\");\n+            }\n+        }\n+        if (!file.canWrite()) {\n+            if (!file.setWritable(true)) {\n+                throw new IOException(\"Cannot modify file \" + file + \" as writable\");\n+            }\n+        }\n+    }\n+\n+    public static long getRandomBetween(long start, long end) throws Exception {\n+        if (start > end) {\n+            throw new IllegalArgumentException(\"start must be less than end\");\n+        }\n+        Random aRandom = Utils.getRandomInstance();\n+        int d = aRandom.nextInt((int)(end - start));\n+        if (d < 1) {\n+            d = 1;\n+        }\n+        return start + d;\n+    }\n+\n+    public static void modifyContentRandomly(File jsaFile) throws Exception {\n+        \/\/ corrupt random area in the data areas\n+        long[] used = new long[num_regions]; \/\/ record used bytes\n+        long start0, start, end, offset;\n+        int bufSize;\n+\n+        System.out.printf(\"%-24s%12s%12s%16s\\n\", \"Space Name\", \"Used bytes\", \"Reg Start\", \"Random Offset\");\n+        start0 = fileHeaderSize;\n+        for (int i = 0; i < num_regions; i++) {\n+            used[i] = usedRegionSizeAligned(jsaFile, i);\n+            start = start0;\n+            for (int j = 0; j < i; j++) {\n+                start += alignUpWithAlignment(used[j]);\n+            }\n+            end = start + used[i];\n+            if (start == end) {\n+                continue; \/\/ Ignore empty regions\n+            }\n+            offset = getRandomBetween(start, end);\n+            System.out.printf(\"%-24s%12d%12d%16d\\n\", shared_region_name[i], used[i], start, offset);\n+            if (end - offset < 1024) {\n+                bufSize = (int)(end - offset + 1);\n+            } else {\n+                bufSize = 1024;\n+            }\n+            writeData(jsaFile, offset, new byte[bufSize]);\n+        }\n+    }\n+\n+    public static void modifyRegionContentRandomly(File jsaFile) throws Exception {\n+        \/\/ corrupt random area in the data areas\n+        long[] used = new long[num_regions]; \/\/ record used bytes\n+        long start0, start, end, offset;\n+        int bufSize;\n+\n+        System.out.printf(\"%-24s%12s%12s%16s\\n\", \"Space Name\", \"Used bytes\", \"Reg Start\", \"Random Offset\");\n+        start0 = fileHeaderSize;\n+        for (int i = 0; i < num_regions; i++) {\n+            used[i] = usedRegionSizeAligned(jsaFile, i);\n+            start = start0;\n+            for (int j = 0; j < i; j++) {\n+                start += alignUpWithAlignment(used[j]);\n+            }\n+            end = start + used[i];\n+            if (start == end) {\n+                continue; \/\/ Ignore empty regions\n+            }\n+            offset = getRandomBetween(start, end);\n+            System.out.printf(\"%-24s%12d%12d%16d\\n\", shared_region_name[i], used[i], start, offset);\n+            if (end - offset < 1024) {\n+                bufSize = (int)(end - offset + 1);\n+            } else {\n+                bufSize = 1024;\n+            }\n+            writeData(jsaFile, offset, new byte[bufSize]);\n+        }\n+    }\n+\n+    public static boolean modifyRegionContent(int region, File jsaFile) throws Exception {\n+        long total = 0L;\n+        long[] used = new long[num_regions];\n+        System.out.printf(\"%-24s%12s\\n\", \"Space name\", \"Used bytes\");\n+        for (int i = 0; i < num_regions; i++) {\n+            used[i] = usedRegionSizeAligned(jsaFile, i);\n+            System.out.printf(\"%-24s%12d\\n\", shared_region_name[i], used[i]);\n+            total += used[i];\n+        }\n+        if (used[region] == 0) {\n+            System.out.println(\"Region \" + shared_region_name[region] + \" is empty. Nothing to corrupt.\");\n+            return false;\n+        }\n+        byte[] buf = new byte[4096];\n+        System.out.printf(\"%-24s%12d\\n\", \"Total: \", total);\n+        long regionStartOffset = fileHeaderSize;\n+        for (int i = 0; i < region; i++) {\n+            regionStartOffset += used[i];\n+        }\n+        System.out.println(\"Corrupt \" + shared_region_name[region] + \" section, start = \" + regionStartOffset\n+                           + \" (header_size + 0x\" + Long.toHexString(regionStartOffset - fileHeaderSize) + \")\");\n+        long bytesWritten = 0L;\n+        while (bytesWritten < used[region]) {\n+            bytesWritten += writeData(jsaFile, regionStartOffset + bytesWritten, buf);\n+        }\n+        return true;\n+    }\n+\n+    public static void modifyFileHeader(File jsaFile) throws Exception {\n+        \/\/ screw up header info\n+        byte[] buf = new byte[fileHeaderSize];\n+        writeData(jsaFile, 0, buf);\n+    }\n+\n+    public static void modifyJvmIdent(File jsaFile, String newJvmIdent) throws Exception {\n+        byte[] buf = newJvmIdent.getBytes();\n+        writeData(jsaFile, (long)offsetJvmIdent, buf);\n+    }\n+\n+    public static void modifyHeaderIntField(File jsaFile, long offset, int value) throws Exception {\n+        System.out.println(\"    offset \" + offset);\n+\n+        byte[] bytes = ByteBuffer.allocate(4).putInt(value).array();\n+        writeData(jsaFile, offset, bytes);\n+    }\n+\n+    \/\/ copy archive and set copied read\/write permit\n+    public static File copyArchiveFile(File orgJsaFile, String newName) throws Exception {\n+        File newJsaFile = new File(newName);\n+        if (newJsaFile.exists()) {\n+            if (!newJsaFile.delete()) {\n+                throw new IOException(\"Could not delete file \" + newJsaFile);\n+            }\n+        }\n+        Files.copy(orgJsaFile.toPath(), newJsaFile.toPath(), REPLACE_EXISTING);\n+\n+        \/\/ change permission\n+        setReadWritePermission(newJsaFile);\n+\n+        return newJsaFile;\n+    }\n+\n+    private static FileChannel getFileChannel(File file) throws Exception {\n+        List<StandardOpenOption> arry = new ArrayList<StandardOpenOption>();\n+        arry.add(READ);\n+        arry.add(WRITE);\n+        return FileChannel.open(file.toPath(), new HashSet<StandardOpenOption>(arry));\n+    }\n+\n+    public static long readInt(File file, long offset, int nBytes) throws Exception {\n+        try (FileChannel fc = getFileChannel(file)) {\n+            ByteBuffer bb = ByteBuffer.allocate(nBytes);\n+            bb.order(ByteOrder.nativeOrder());\n+            fc.position(offset);\n+            fc.read(bb);\n+            return  (nBytes > 4 ? bb.getLong(0) : bb.getInt(0));\n+        }\n+    }\n+\n+    private static long writeData(FileChannel fc, long offset, ByteBuffer bb) throws Exception {\n+        fc.position(offset);\n+        return fc.write(bb);\n+    }\n+\n+    public static long writeData(File file, long offset, byte[] array) throws Exception {\n+        try (FileChannel fc = getFileChannel(file)) {\n+            ByteBuffer bbuf = ByteBuffer.wrap(array);\n+            return writeData(fc, offset, bbuf);\n+         }\n+    }\n+\n+    \/\/ dstFile will keep original size so will remove corresponding bytes.length bytes at end of file\n+    public static File insertBytesRandomlyAfterHeader(File orgFile, String newFileName, byte[] bytes) throws Exception {\n+        long offset = fileHeaderSize + getRandomBetween(0L, 4096L);\n+        File dstFile = new File(newFileName);\n+        try (FileChannel inputChannel = new FileInputStream(orgFile).getChannel();\n+             FileChannel outputChannel = new FileOutputStream(dstFile).getChannel()) {\n+            long orgSize = inputChannel.size();\n+            outputChannel.transferFrom(inputChannel, 0, offset);\n+            outputChannel.position(offset);\n+            outputChannel.write(ByteBuffer.wrap(bytes));\n+            outputChannel.transferFrom(inputChannel, offset + bytes.length, orgSize - bytes.length);\n+        }\n+        return dstFile;\n+    }\n+\n+    \/\/ delete nBytes bytes from offset, so new file will be smaller than the original\n+    public static File deleteBytesAtRandomPositionAfterHeader(File orgFile, String newFileName, int nBytes) throws Exception {\n+        long offset = fileHeaderSize + getRandomBetween(0L, 4096L);\n+        File dstFile = new File(newFileName);\n+        try (FileChannel inputChannel = new FileInputStream(orgFile).getChannel();\n+             FileChannel outputChannel = new FileOutputStream(dstFile).getChannel()) {\n+            long orgSize = inputChannel.size();\n+            outputChannel.transferFrom(inputChannel, 0, offset);\n+            inputChannel.position(offset + nBytes);\n+            outputChannel.transferFrom(inputChannel, offset, orgSize - nBytes);\n+        }\n+        return dstFile;\n+    }\n+\n+    \/\/ used region size\n+    public static long usedRegionSizeAligned(File archiveFile, int region) throws Exception {\n+        long offset = spOffset + cdsFileMapRegionSize * region + spUsedOffset;\n+        long used = readInt(archiveFile, offset, sizetSize);\n+        return alignUpWithAlignment(used);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSArchiveUtils.java","additions":314,"deletions":0,"binary":false,"changes":314,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,4 @@\n+    public static DockerRunOptions newOptsShowSettings(String imageNameAndTag) {\n+        return new DockerRunOptions(imageNameAndTag, \"\/jdk\/bin\/java\", \"-version\", \"-XshowSettings:system\");\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/Common.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -105,1 +105,2 @@\n-    \/\/ we support only sun.hotspot.WhiteBox$WhiteBoxPermission. See JDK-8199290\n+    \/\/ we support only jdk.test.whitebox.WhiteBox$WhiteBoxPermission and\n+    \/\/ sun\/hotspot\/WhiteBox$WhiteBoxPermission. See JDK-8199290\n@@ -107,4 +108,8 @@\n-        boolean seenWB = false;\n-        boolean seenWBInner = false;\n-        final String wb = \"sun.hotspot.WhiteBox\";\n-        final String wbInner = \"sun.hotspot.WhiteBox$WhiteBoxPermission\";\n+        boolean seenNewWb = false;\n+        boolean seenNewWbInner = false;\n+        boolean seenOldWb = false;\n+        boolean seenOldWbInner = false;\n+        final String newWb = \"jdk.test.whitebox.WhiteBox\";\n+        final String newWbInner = newWb + \"$WhiteBoxPermission\";\n+        final String oldWb = \"sun.hotspot.WhiteBox\";\n+        final String oldWbInner = oldWb + \"$WhiteBoxPermission\";\n@@ -118,2 +123,4 @@\n-            case wb:      seenWB      = true; break;\n-            case wbInner: seenWBInner = true; break;\n+            case newWb:      seenNewWb      = true; break;\n+            case newWbInner: seenNewWbInner = true; break;\n+            case oldWb:      seenOldWb      = true; break;\n+            case oldWbInner: seenOldWbInner = true; break;\n@@ -122,2 +129,5 @@\n-        if (seenWB && !seenWBInner) {\n-            list.add(wbInner);\n+        if (seenNewWb && !seenNewWbInner) {\n+            list.add(newWbInner);\n+        }\n+        if (seenOldWb && !seenOldWbInner) {\n+            list.add(oldWbInner);\n","filename":"test\/lib\/jdk\/test\/lib\/helpers\/ClassFileInstaller.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -88,2 +88,3 @@\n-        try (PositionDataInputStream in = new PositionDataInputStream(\n-                new BufferedInputStream(new FileInputStream(heapFile)))) {\n+        try (FileInputStream fis = new FileInputStream(heapFile);\n+             BufferedInputStream bis = new BufferedInputStream(fis);\n+             PositionDataInputStream in = new PositionDataInputStream(bis)) {\n@@ -98,3 +99,3 @@\n-                try (PositionDataInputStream in2 = new PositionDataInputStream(\n-                        new BufferedInputStream(access.asStream(0)))) {\n-                    i = in2.readInt();\n+                try (BufferedInputStream gzBis = new BufferedInputStream(access.asStream(0));\n+                     PositionDataInputStream pdin = new PositionDataInputStream(gzBis)) {\n+                    i = pdin.readInt();\n@@ -103,1 +104,1 @@\n-                            = new HprofReader(access.asFileBuffer(), in2, dumpNumber,\n+                            = new HprofReader(access.asFileBuffer(), pdin, dumpNumber,\n@@ -139,2 +140,3 @@\n-        try (PositionDataInputStream in = new PositionDataInputStream(\n-                new BufferedInputStream(new FileInputStream(heapFile)))) {\n+        try (FileInputStream fis= new FileInputStream(heapFile);\n+             BufferedInputStream bis = new BufferedInputStream(fis);\n+             PositionDataInputStream in = new PositionDataInputStream(bis)) {\n@@ -154,3 +156,3 @@\n-                try {\n-                    GZIPInputStream gis = new GZIPInputStream(new FileInputStream(heapFile));\n-                    FileOutputStream fos = new FileOutputStream(out);\n+                try (FileInputStream heapFis = new FileInputStream(heapFile);\n+                     GZIPInputStream gis = new GZIPInputStream(heapFis);\n+                     FileOutputStream fos = new FileOutputStream(out)) {\n@@ -167,4 +169,4 @@\n-                try {\n-                    PositionDataInputStream in2 = new PositionDataInputStream(\n-                        new BufferedInputStream(new FileInputStream(out)));\n-                    i = in2.readInt();\n+                try (FileInputStream outFis = new FileInputStream(out);\n+                     BufferedInputStream outBis = new BufferedInputStream(outFis);\n+                     PositionDataInputStream pdin = new PositionDataInputStream(outBis)) {\n+                    i = pdin.readInt();\n@@ -173,1 +175,1 @@\n-                            = new HprofReader(deCompressedFile, in2, dumpNumber,\n+                            = new HprofReader(deCompressedFile, pdin, dumpNumber,\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/parser\/Reader.java","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.math.BigInteger;\n@@ -41,0 +42,1 @@\n+import java.security.InvalidKeyException;\n@@ -43,0 +45,2 @@\n+import java.security.NoSuchProviderException;\n+import java.security.Principal;\n@@ -44,0 +48,2 @@\n+import java.security.PublicKey;\n+import java.security.SignatureException;\n@@ -49,0 +55,1 @@\n+import java.security.cert.CertificateEncodingException;\n@@ -50,0 +57,1 @@\n+import java.security.cert.CertificateExpiredException;\n@@ -51,0 +59,1 @@\n+import java.security.cert.CertificateNotYetValidException;\n@@ -62,0 +71,1 @@\n+import java.util.Date;\n@@ -633,0 +643,63 @@\n+\n+    \/**\n+     * This class is useful for overriding one or more methods of an\n+     * X509Certificate for testing purposes.\n+     *\/\n+    public static class ForwardingX509Certificate extends X509Certificate {\n+        private final X509Certificate cert;\n+        public ForwardingX509Certificate(X509Certificate cert) {\n+            this.cert = cert;\n+        }\n+        public Set<String> getCriticalExtensionOIDs() {\n+           return cert.getCriticalExtensionOIDs();\n+        }\n+        public byte[] getExtensionValue(String oid) {\n+            return cert.getExtensionValue(oid);\n+        }\n+        public Set<String> getNonCriticalExtensionOIDs() {\n+            return cert.getNonCriticalExtensionOIDs();\n+        }\n+        public boolean hasUnsupportedCriticalExtension() {\n+            return cert.hasUnsupportedCriticalExtension();\n+        }\n+        public void checkValidity() throws CertificateExpiredException,\n+            CertificateNotYetValidException { \/* always pass *\/ }\n+        public void checkValidity(Date date) throws CertificateExpiredException,\n+            CertificateNotYetValidException { \/* always pass *\/ }\n+        public int getVersion() { return cert.getVersion(); }\n+        public BigInteger getSerialNumber() { return cert.getSerialNumber(); }\n+        public Principal getIssuerDN() { return cert.getIssuerDN(); }\n+        public Principal getSubjectDN() { return cert.getSubjectDN(); }\n+        public Date getNotBefore() { return cert.getNotBefore(); }\n+        public Date getNotAfter() { return cert.getNotAfter(); }\n+        public byte[] getTBSCertificate() throws CertificateEncodingException {\n+            return cert.getTBSCertificate();\n+        }\n+        public byte[] getSignature() { return cert.getSignature(); }\n+        public String getSigAlgName() { return cert.getSigAlgName(); }\n+        public String getSigAlgOID() { return cert.getSigAlgOID(); }\n+        public byte[] getSigAlgParams() { return cert.getSigAlgParams(); }\n+        public boolean[] getIssuerUniqueID() {\n+            return cert.getIssuerUniqueID();\n+        }\n+        public boolean[] getSubjectUniqueID() {\n+            return cert.getSubjectUniqueID();\n+        }\n+        public boolean[] getKeyUsage() { return cert.getKeyUsage(); }\n+        public int getBasicConstraints() { return cert.getBasicConstraints(); }\n+        public byte[] getEncoded() throws CertificateEncodingException {\n+            return cert.getEncoded();\n+        }\n+        public void verify(PublicKey key) throws CertificateException,\n+            InvalidKeyException, NoSuchAlgorithmException,\n+            NoSuchProviderException, SignatureException {\n+            cert.verify(key);\n+        }\n+        public void verify(PublicKey key, String sigProvider) throws\n+            CertificateException, InvalidKeyException, NoSuchAlgorithmException,\n+            NoSuchProviderException, SignatureException {\n+            cert.verify(key, sigProvider);\n+        }\n+        public PublicKey getPublicKey() { return cert.getPublicKey(); }\n+        public String toString() { return cert.toString(); }\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/security\/CertUtils.java","additions":74,"deletions":1,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-package sun.hotspot;\n+package jdk.test.whitebox;\n@@ -35,1 +35,1 @@\n-import sun.hotspot.parser.DiagnosticCommand;\n+import jdk.test.whitebox.parser.DiagnosticCommand;\n@@ -418,1 +418,1 @@\n-  \/\/ Use sun.hotspot.gc.GC class instead.\n+  \/\/ Use jdk.test.whitebox.gc.GC class instead.\n@@ -594,1 +594,2 @@\n-  public native boolean areSharedStringsIgnored();\n+  public native boolean areSharedStringsMapped();\n+  public native boolean isSharedInternedString(String s);\n@@ -611,0 +612,2 @@\n+  public native void lockAndBlock(boolean suspender);\n+\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":7,"deletions":4,"binary":false,"changes":11,"previous_filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","status":"copied"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.whitebox.code;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.MemoryPoolMXBean;\n+import java.util.EnumSet;\n+\n+import jdk.test.whitebox.WhiteBox;\n+\n+public enum BlobType {\n+    \/\/ Execution level 1 and 4 (non-profiled) nmethods (including native nmethods)\n+    MethodNonProfiled(0, \"CodeHeap 'non-profiled nmethods'\", \"NonProfiledCodeHeapSize\") {\n+        @Override\n+        public boolean allowTypeWhenOverflow(BlobType type) {\n+            return super.allowTypeWhenOverflow(type)\n+                    || type == BlobType.MethodProfiled;\n+        }\n+    },\n+    \/\/ Execution level 2 and 3 (profiled) nmethods\n+    MethodProfiled(1, \"CodeHeap 'profiled nmethods'\", \"ProfiledCodeHeapSize\") {\n+        @Override\n+        public boolean allowTypeWhenOverflow(BlobType type) {\n+            return super.allowTypeWhenOverflow(type)\n+                    || type == BlobType.MethodNonProfiled;\n+        }\n+    },\n+    \/\/ Non-nmethods like Buffers, Adapters and Runtime Stubs\n+    NonNMethod(2, \"CodeHeap 'non-nmethods'\", \"NonNMethodCodeHeapSize\") {\n+        @Override\n+        public boolean allowTypeWhenOverflow(BlobType type) {\n+            return super.allowTypeWhenOverflow(type)\n+                    || type == BlobType.MethodNonProfiled\n+                    || type == BlobType.MethodProfiled;\n+        }\n+    },\n+    \/\/ All types (No code cache segmentation)\n+    All(3, \"CodeCache\", \"ReservedCodeCacheSize\");\n+\n+    public final int id;\n+    public final String sizeOptionName;\n+    public final String beanName;\n+\n+    private BlobType(int id, String beanName, String sizeOptionName) {\n+        this.id = id;\n+        this.beanName = beanName;\n+        this.sizeOptionName = sizeOptionName;\n+    }\n+\n+    public MemoryPoolMXBean getMemoryPool() {\n+        for (MemoryPoolMXBean bean : ManagementFactory.getMemoryPoolMXBeans()) {\n+            String name = bean.getName();\n+            if (beanName.equals(name)) {\n+                return bean;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public boolean allowTypeWhenOverflow(BlobType type) {\n+        return type == this;\n+    }\n+\n+    public static EnumSet<BlobType> getAvailable() {\n+        WhiteBox whiteBox = WhiteBox.getWhiteBox();\n+        if (!whiteBox.getBooleanVMFlag(\"SegmentedCodeCache\")) {\n+            \/\/ only All for non segmented world\n+            return EnumSet.of(All);\n+        }\n+        if (System.getProperty(\"java.vm.info\").startsWith(\"interpreted \")) {\n+            \/\/ only NonNMethod for -Xint\n+            return EnumSet.of(NonNMethod);\n+        }\n+\n+        EnumSet<BlobType> result = EnumSet.complementOf(EnumSet.of(All));\n+        if (!whiteBox.getBooleanVMFlag(\"TieredCompilation\")\n+                || whiteBox.getIntxVMFlag(\"TieredStopAtLevel\") <= 1) {\n+            \/\/ there is no MethodProfiled in non tiered world or pure C1\n+            result.remove(MethodProfiled);\n+        }\n+        return result;\n+    }\n+\n+    public long getSize() {\n+        return WhiteBox.getWhiteBox().getUintxVMFlag(sizeOptionName);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/whitebox\/code\/BlobType.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -24,1 +24,1 @@\n-package sun.hotspot.code;\n+package jdk.test.whitebox.code;\n@@ -26,1 +26,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib\/jdk\/test\/whitebox\/code\/CodeBlob.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib\/sun\/hotspot\/code\/CodeBlob.java","status":"copied"},{"patch":"@@ -0,0 +1,171 @@\n+\/*\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.whitebox.code;\n+\n+import java.lang.reflect.Executable;\n+import jdk.test.whitebox.WhiteBox;\n+\n+\/**\n+ * API to obtain information about enabled JIT compilers\n+ * retrieved from the VM with the WhiteBox API.\n+ *\/\n+public class Compiler {\n+\n+    private static final WhiteBox WB = WhiteBox.getWhiteBox();\n+\n+    \/**\n+     * Check if C2 or JVMCI were included in the VM build\n+     *\n+     * @return true if either C2 or JVMCI were included in the VM build.\n+     *\/\n+    public static boolean isC2OrJVMCIIncluded() {\n+        return WB.isC2OrJVMCIIncluded();\n+    }\n+\n+    \/**\n+     * Check if JVMCI is enabled.\n+     *\n+     * @return true if JVMCI is enabled\n+     *\/\n+    public static boolean isJVMCIEnabled() {\n+        Boolean enableJvmci = WB.getBooleanVMFlag(\"EnableJVMCI\");\n+        if (enableJvmci == null || !enableJvmci) {\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    \/**\n+     * Check if Graal is used as JIT compiler.\n+     *\n+     * Graal is enabled if following conditions are true:\n+     * - we are not in Interpreter mode\n+     * - UseJVMCICompiler flag is true\n+     * - jvmci.Compiler variable is equal to 'graal'\n+     * - TieredCompilation is not used or TieredStopAtLevel is greater than 3\n+     * No need to check client mode because it set UseJVMCICompiler to false.\n+     *\n+     * @return true if Graal is used as JIT compiler.\n+     *\/\n+    public static boolean isGraalEnabled() {\n+        Boolean useCompiler = WB.getBooleanVMFlag(\"UseCompiler\");\n+        if (useCompiler == null || !useCompiler) {\n+            return false;\n+        }\n+        Boolean useJvmciComp = WB.getBooleanVMFlag(\"UseJVMCICompiler\");\n+        if (useJvmciComp == null || !useJvmciComp) {\n+            return false;\n+        }\n+\n+        Boolean tieredCompilation = WB.getBooleanVMFlag(\"TieredCompilation\");\n+        Long compLevel = WB.getIntxVMFlag(\"TieredStopAtLevel\");\n+        \/\/ if TieredCompilation is enabled and compilation level is <= 3 then no Graal is used\n+        if (tieredCompilation != null && tieredCompilation &&\n+            compLevel != null && compLevel <= 3) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    \/**\n+     * Check if C2 is used as JIT compiler.\n+     *\n+     * C2 is enabled if following conditions are true:\n+     * - we are not in Interpreter mode\n+     * - we are in Server compilation mode\n+     * - TieredCompilation is not used or TieredStopAtLevel is greater than 3\n+     * - Graal is not used\n+     *\n+     * @return true if C2 is used as JIT compiler.\n+     *\/\n+    public static boolean isC2Enabled() {\n+        Boolean useCompiler = WB.getBooleanVMFlag(\"UseCompiler\");\n+        if (useCompiler == null || !useCompiler) {\n+            return false;\n+        }\n+        Boolean serverMode = WB.getBooleanVMFlag(\"ProfileInterpreter\");\n+        if (serverMode == null || !serverMode) {\n+            return false;\n+        }\n+\n+        Boolean tieredCompilation = WB.getBooleanVMFlag(\"TieredCompilation\");\n+        Long compLevel = WB.getIntxVMFlag(\"TieredStopAtLevel\");\n+        \/\/ if TieredCompilation is enabled and compilation level is <= 3 then no Graal is used\n+        if (tieredCompilation != null && tieredCompilation &&\n+            compLevel != null && compLevel <= 3) {\n+            return false;\n+        }\n+\n+        if (isGraalEnabled()) {\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    \/*\n+     * Check if C1 is used as JIT compiler.\n+     *\n+     * C1 is enabled if following conditions are true:\n+     * - we are not in Interpreter mode\n+     * - we are not in Server compilation mode\n+     * - TieredCompilation is used in Server mode\n+     *\n+     * @return true if C1 is used as JIT compiler.\n+     *\/\n+    public static boolean isC1Enabled() {\n+        Boolean useCompiler = WB.getBooleanVMFlag(\"UseCompiler\");\n+        if (useCompiler == null || !useCompiler) {\n+            return false;\n+        }\n+        Boolean serverMode = WB.getBooleanVMFlag(\"ProfileInterpreter\");\n+        if (serverMode == null || !serverMode) {\n+            return true; \/\/ Client mode\n+        }\n+\n+        Boolean tieredCompilation = WB.getBooleanVMFlag(\"TieredCompilation\");\n+        \/\/ C1 is not used in server mode if TieredCompilation is off.\n+        if (tieredCompilation != null && !tieredCompilation) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    \/*\n+     * Determine if the compiler corresponding to the compilation level 'compLevel'\n+     * provides an intrinsic for 'class'.'method'.\n+     *\/\n+    public static boolean isIntrinsicAvailable(int compLevel, String klass, String method, Class<?>... parameterTypes) {\n+        Executable intrinsicMethod;\n+        try {\n+            intrinsicMethod = Class.forName(klass).getDeclaredMethod(method, parameterTypes);\n+        } catch (NoSuchMethodException e) {\n+            throw new RuntimeException(\"Test bug, '\" + method + \"' method unavailable. \" + e);\n+        } catch (ClassNotFoundException e) {\n+            throw new RuntimeException(\"Test bug, '\" + klass + \"' class unavailable. \" + e);\n+        }\n+        return WB.isIntrinsicAvailable(intrinsicMethod, compLevel);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/whitebox\/code\/Compiler.java","additions":171,"deletions":0,"binary":false,"changes":171,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package sun.hotspot.code;\n+package jdk.test.whitebox.code;\n@@ -27,1 +27,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib\/jdk\/test\/whitebox\/code\/NMethod.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/lib\/sun\/hotspot\/code\/NMethod.java","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package sun.hotspot.cpuinfo;\n+package jdk.test.whitebox.cpuinfo;\n@@ -32,1 +32,1 @@\n-import sun.hotspot.WhiteBox;\n+import jdk.test.whitebox.WhiteBox;\n","filename":"test\/lib\/jdk\/test\/whitebox\/cpuinfo\/CPUInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/lib\/sun\/hotspot\/cpuinfo\/CPUInfo.java","status":"copied"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.whitebox.gc;\n+\n+import jdk.test.whitebox.WhiteBox;\n+\n+\/**\n+ * API to obtain information about selected and supported Garbage Collectors\n+ * retrieved from the VM with the WhiteBox API.\n+ *\/\n+public enum GC {\n+    \/*\n+     * Enum values must match CollectedHeap::Name\n+     *\/\n+    Serial(1),\n+    Parallel(2),\n+    G1(3),\n+    Epsilon(4),\n+    Z(5),\n+    Shenandoah(6);\n+\n+    private static final WhiteBox WB = WhiteBox.getWhiteBox();\n+\n+    private final int name;\n+\n+    private GC(int name) {\n+        this.name = name;\n+    }\n+\n+    \/**\n+     * @return true if this GC is supported by the VM, i.e., it is built into the VM.\n+     *\/\n+    public boolean isSupported() {\n+        return WB.isGCSupported(name);\n+    }\n+\n+    \/**\n+     * @return true if this GC is supported by the JVMCI compiler\n+     *\/\n+    public boolean isSupportedByJVMCICompiler() {\n+        return WB.isGCSupportedByJVMCICompiler(name);\n+    }\n+\n+    \/**\n+     * @return true if this GC is currently selected\/used\n+     *\/\n+    public boolean isSelected() {\n+        return WB.isGCSelected(name);\n+    }\n+\n+    \/**\n+     * @return true if GC was selected ergonomically, as opposed\n+     *         to being explicitly specified on the command line\n+     *\/\n+    public static boolean isSelectedErgonomically() {\n+        return WB.isGCSelectedErgonomically();\n+    }\n+\n+    \/**\n+     * @return the selected GC.\n+     *\/\n+    public static GC selected() {\n+      for (GC gc : values()) {\n+        if (gc.isSelected()) {\n+          return gc;\n+        }\n+      }\n+      throw new IllegalStateException(\"No selected GC found\");\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/whitebox\/gc\/GC.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package sun.hotspot.parser;\n+package jdk.test.whitebox.parser;\n","filename":"test\/lib\/jdk\/test\/whitebox\/parser\/DiagnosticCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/lib\/sun\/hotspot\/parser\/DiagnosticCommand.java","status":"renamed"},{"patch":"@@ -35,1 +35,1 @@\n-import sun.hotspot.parser.DiagnosticCommand;\n+import jdk.test.whitebox.parser.DiagnosticCommand;\n@@ -37,0 +37,1 @@\n+@Deprecated\n@@ -61,1 +62,1 @@\n-      sm.checkPermission(new WhiteBoxPermission(\"getInstance\"));\n+      throw new SecurityException(\"can't use old whitebox with SecurityManager, please switch to jdk.test.whitebox.WhiteBox\");\n@@ -594,1 +595,2 @@\n-  public native boolean areSharedStringsIgnored();\n+  public native boolean areSharedStringsMapped();\n+  public native boolean isSharedInternedString(String s);\n@@ -611,0 +613,2 @@\n+  public native void lockAndBlock(boolean suspender);\n+\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+@Deprecated\n","filename":"test\/lib\/sun\/hotspot\/code\/CodeBlob.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+@Deprecated\n","filename":"test\/lib\/sun\/hotspot\/code\/NMethod.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+@Deprecated\n","filename":"test\/lib\/sun\/hotspot\/cpuinfo\/CPUInfo.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,1 +42,1 @@\n- * Tests java.lang.Integer\n+ * Test various java.lang.Integer operations\n@@ -44,0 +47,3 @@\n+@Warmup(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n+@Fork(3)\n@@ -50,0 +56,2 @@\n+    private int[] intsSmall;\n+    private int[] intsBig;\n@@ -55,0 +63,2 @@\n+        intsSmall = new int[size];\n+        intsBig = new int[size];\n@@ -56,1 +66,3 @@\n-            strings[i] = \"\" + (r.nextInt(10000) - 5000);\n+            strings[i] = \"\" + (r.nextInt(10000) - (5000));\n+            intsSmall[i] = 100 * i + i + 103;\n+            intsBig[i] = ((100 * i + i) << 24) + 4543 + i * 4;\n@@ -66,0 +78,23 @@\n+\n+    @Benchmark\n+    public void decode(Blackhole bh) {\n+        for (String s : strings) {\n+            bh.consume(Integer.decode(s));\n+        }\n+    }\n+\n+    \/** Performs toString on small values, just a couple of digits. *\/\n+    @Benchmark\n+    public void toStringSmall(Blackhole bh) {\n+        for (int i : intsSmall) {\n+            bh.consume(Integer.toString(i));\n+        }\n+    }\n+\n+    \/** Performs toString on large values, roughly 10 digits. *\/\n+    @Benchmark\n+    public void toStringBig(Blackhole bh) {\n+        for (int i : intsBig) {\n+            bh.consume(Integer.toString(i));\n+        }\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/Integers.java","additions":38,"deletions":3,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,1 +35,1 @@\n-import org.openjdk.jmh.annotations.Threads;\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -36,0 +38,1 @@\n+import java.util.concurrent.ThreadLocalRandom;\n@@ -41,0 +44,3 @@\n+@Warmup(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n+@Fork(3)\n@@ -46,0 +52,1 @@\n+    private String[] strings;\n@@ -51,0 +58,2 @@\n+        var random = ThreadLocalRandom.current();\n+        strings = new String[size];\n@@ -54,0 +63,1 @@\n+            strings[i] = \"\" + (random.nextLong(10000) - 5000);\n@@ -55,1 +65,1 @@\n-            longArrayBig[i] = ((100L * i + i) << 32) + 4543 + i * 4;\n+            longArrayBig[i] = ((100L * i + i) << 32) + 4543 + i * 4L;\n@@ -59,1 +69,1 @@\n-    \/** Performs toString on a bunch of java.lang.Long:s, all with small values, just a couple of digits. *\/\n+    \/** Performs toString on small values, just a couple of digits. *\/\n@@ -61,1 +71,0 @@\n-    @Threads(Threads.MAX)\n@@ -68,1 +77,0 @@\n-    \/** Performs toString on a bunch of java.lang.Long:s, all with large values, around 10 digits. *\/\n@@ -70,1 +78,8 @@\n-    @Threads(Threads.MAX)\n+    public void decode(Blackhole bh) {\n+        for (String s : strings) {\n+            bh.consume(Long.decode(s));\n+        }\n+    }\n+\n+    \/** Performs toString on large values, around 10 digits. *\/\n+    @Benchmark\n@@ -83,1 +98,0 @@\n-    @Threads(Threads.MAX)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/Longs.java","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+import org.openjdk.jmh.annotations.CompilerControl;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +36,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +43,3 @@\n+@Warmup(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n+@Fork(3)\n@@ -333,0 +340,14 @@\n+    public int charAt_index = 3;\n+\n+    @Benchmark\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    public char charAtLatin1() {\n+        return sbLatin1.charAt(charAt_index);\n+    }\n+\n+    @Benchmark\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    public char charAtUtf16() {\n+        return sbUtf16.charAt(charAt_index);\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package org.openjdk.bench.java.security;\n+\n+import org.openjdk.jmh.annotations.*;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+\n+@Fork(jvmArgsAppend = {\"--add-exports\", \"java.base\/sun.security.ssl=ALL-UNNAMED\", \"--add-opens\", \"java.base\/sun.security.ssl=ALL-UNNAMED\"})\n+@State(Scope.Benchmark)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@BenchmarkMode(Mode.Throughput)\n+public class CipherSuiteBench {\n+\n+    Method nameOf;\n+\n+    @Param({\"TLS_AES_256_GCM_SHA384\",\n+            \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\n+            \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",\n+            \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\" })\n+    String cipherSuite;\n+\n+    @Setup\n+    public void initilizeClass() throws ClassNotFoundException, NoSuchMethodException {\n+        Class<?> cs = Class.forName(\"sun.security.ssl.CipherSuite\");\n+        nameOf = cs.getDeclaredMethod(\"nameOf\", String.class);\n+        nameOf.setAccessible(true);\n+    }\n+\n+    @Benchmark\n+    public Object benchmarkCipherSuite() throws InvocationTargetException, IllegalAccessException {\n+        return nameOf.invoke(null,cipherSuite);\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/CipherSuiteBench.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,215 @@\n+\/*\n+ *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+\n+package org.openjdk.bench.jdk.incubator.vector;\n+\n+import java.util.Random;\n+import jdk.incubator.vector.*;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@OutputTimeUnit(TimeUnit.MILLISECONDS)\n+@State(Scope.Thread)\n+public class RotateBenchmark {\n+    @Param({\"256\",\"512\"})\n+    int size;\n+\n+    @Param({\"128\",\"256\", \"512\"})\n+    int bits;\n+\n+    @Param({\"7\",\"15\",\"31\"})\n+    int shift;\n+\n+    byte[] byteinp;\n+    byte[] byteres;\n+\n+    short[] shortinp;\n+    short[] shortres;\n+\n+    int[] intinp;\n+    int[] intres;\n+\n+    long[] longinp;\n+    long[] longres;\n+\n+    VectorSpecies<Byte> bspecies;\n+    VectorSpecies<Short> sspecies;\n+    VectorSpecies<Integer> ispecies;\n+    VectorSpecies<Long> lspecies;\n+\n+    static final byte[] specialvalsbyte = {0, -0, Byte.MIN_VALUE, Byte.MAX_VALUE};\n+    static final short[] specialvalsshort = {0, -0, Short.MIN_VALUE, Short.MAX_VALUE};\n+    static final int[] specialvalsint = {0, -0, Integer.MIN_VALUE, Integer.MAX_VALUE};\n+    static final long[] specialvalslong = {0L, -0L, Long.MIN_VALUE, Long.MAX_VALUE};\n+\n+    @Setup(Level.Trial)\n+    public void BmSetup() {\n+        Random r = new Random(1024);\n+        byteinp = new byte[size];\n+        byteres = new byte[size];\n+        shortinp = new short[size];\n+        shortres = new short[size];\n+        intinp = new int[size];\n+        intres = new int[size];\n+        longinp = new long[size];\n+        longres = new long[size];\n+\n+        bspecies = VectorSpecies.of(byte.class, VectorShape.forBitSize(bits));\n+        sspecies = VectorSpecies.of(short.class, VectorShape.forBitSize(bits));\n+        ispecies = VectorSpecies.of(int.class, VectorShape.forBitSize(bits));\n+        lspecies = VectorSpecies.of(long.class, VectorShape.forBitSize(bits));\n+\n+        for (int i = 4; i < size; i++) {\n+            byteinp[i] = (byte)i;\n+            shortinp[i] = (short)i;\n+            intinp[i] = i;\n+            longinp[i] = i;\n+        }\n+        for (int i = 0; i < specialvalsbyte.length; i++) {\n+            byteinp[i] = specialvalsbyte[i];\n+        }\n+        for (int i = 0; i < specialvalsshort.length; i++) {\n+            shortinp[i] = specialvalsshort[i];\n+        }\n+        for (int i = 0; i < specialvalsint.length; i++) {\n+            intinp[i] = specialvalsint[i];\n+        }\n+        for (int i = 0; i < specialvalslong.length; i++) {\n+            longinp[i] = specialvalslong[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateLeftB() {\n+        for (int j = 0; j < size; j += bspecies.length()) {\n+            ByteVector.fromArray(bspecies, byteinp, j)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift).intoArray(byteres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateRightB() {\n+        for (int j = 0; j < size; j += bspecies.length()) {\n+            ByteVector.fromArray(bspecies, byteinp, j)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift).intoArray(byteres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateLeftS() {\n+        for (int j = 0; j < size; j += sspecies.length()) {\n+            ShortVector.fromArray(sspecies, shortinp, j)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift).intoArray(shortres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateRightS() {\n+        for (int j = 0; j < size; j += sspecies.length()) {\n+            ShortVector.fromArray(sspecies, shortinp, j)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift).intoArray(shortres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateLeftI() {\n+        for (int j = 0; j < size; j += ispecies.length()) {\n+            IntVector.fromArray(ispecies, intinp, j)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift)\n+                .lanewise(VectorOperators.ROL, shift).intoArray(intres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateRightI() {\n+        for (int j = 0; j < size; j += ispecies.length()) {\n+            IntVector.fromArray(ispecies, intinp, j)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift)\n+                .lanewise(VectorOperators.ROR, shift).intoArray(intres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateLeftL() {\n+        for (int j = 0; j < size; j += lspecies.length()) {\n+            LongVector.fromArray(lspecies, longinp, j)\n+                   .lanewise(VectorOperators.ROL, shift)\n+                   .lanewise(VectorOperators.ROL, shift)\n+                   .lanewise(VectorOperators.ROL, shift)\n+                   .lanewise(VectorOperators.ROL, shift)\n+                   .lanewise(VectorOperators.ROL, shift)\n+                   .lanewise(VectorOperators.ROL, shift)\n+                   .lanewise(VectorOperators.ROL, shift).intoArray(longres, j);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void testRotateRightL() {\n+        for (int j = 0; j < size; j += lspecies.length()) {\n+            LongVector.fromArray(lspecies, longinp, j)\n+                   .lanewise(VectorOperators.ROR, shift)\n+                   .lanewise(VectorOperators.ROR, shift)\n+                   .lanewise(VectorOperators.ROR, shift)\n+                   .lanewise(VectorOperators.ROR, shift)\n+                   .lanewise(VectorOperators.ROR, shift)\n+                   .lanewise(VectorOperators.ROR, shift)\n+                   .lanewise(VectorOperators.ROR, shift).intoArray(longres, j);\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/RotateBenchmark.java","additions":215,"deletions":0,"binary":false,"changes":215,"status":"added"},{"patch":"@@ -0,0 +1,252 @@\n+\/*\n+ *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+package org.openjdk.bench.jdk.incubator.vector;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.concurrent.TimeUnit;\n+import jdk.incubator.foreign.CLinker;\n+import jdk.incubator.foreign.MemoryAccess;\n+import jdk.incubator.foreign.MemoryAddress;\n+import jdk.incubator.foreign.MemorySegment;\n+import jdk.incubator.foreign.ResourceScope;\n+import jdk.incubator.vector.ByteVector;\n+import jdk.incubator.vector.VectorOperators;\n+import jdk.incubator.vector.VectorSpecies;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.CompilerControl;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@Warmup(iterations = 5, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@State(org.openjdk.jmh.annotations.Scope.Thread)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Fork(value = 1, jvmArgsAppend = {\n+    \"--add-modules=jdk.incubator.foreign,jdk.incubator.vector\",\n+    \"-Dforeign.restricted=permit\",\n+    \"--enable-native-access\", \"ALL-UNNAMED\",\n+    \"-Djdk.incubator.vector.VECTOR_ACCESS_OOB_CHECK=1\"})\n+public class TestLoadStoreBytes {\n+  private static final VectorSpecies<Byte> SPECIES = VectorSpecies.ofLargestShape(byte.class);\n+\n+  @Param(\"1024\")\n+  private int size;\n+\n+  private byte[] srcArray;\n+\n+  private byte[] dstArray;\n+\n+\n+  private ByteBuffer srcBufferHeap;\n+\n+  private ByteBuffer dstBufferHeap;\n+\n+  private ByteBuffer srcBufferNative;\n+\n+  private ByteBuffer dstBufferNative;\n+\n+\n+  private ResourceScope implicitScope;\n+\n+  private MemorySegment srcSegmentImplicit;\n+\n+  private MemorySegment dstSegmentImplicit;\n+\n+  private ByteBuffer srcBufferSegmentImplicit;\n+\n+  private ByteBuffer dstBufferSegmentImplicit;\n+\n+\n+  private MemoryAddress srcAddress;\n+\n+  private MemoryAddress dstAddress;\n+\n+  byte[] a, b, c;\n+\n+  @Setup\n+  public void setup() {\n+    srcArray = new byte[size];\n+    dstArray = srcArray.clone();\n+    for (int i = 0; i < srcArray.length; i++) {\n+      srcArray[i] = (byte) i;\n+    }\n+\n+\n+    srcBufferHeap = ByteBuffer.allocate(size);\n+    dstBufferHeap = ByteBuffer.allocate(size);\n+\n+    srcBufferNative = ByteBuffer.allocateDirect(size);\n+    dstBufferNative = ByteBuffer.allocateDirect(size);\n+\n+\n+    implicitScope = ResourceScope.newImplicitScope();\n+    srcSegmentImplicit = MemorySegment.allocateNative(size, SPECIES.vectorByteSize(), implicitScope);\n+    srcBufferSegmentImplicit = srcSegmentImplicit.asByteBuffer();\n+    dstSegmentImplicit = MemorySegment.allocateNative(size, SPECIES.vectorByteSize(), implicitScope);\n+    dstBufferSegmentImplicit = dstSegmentImplicit.asByteBuffer();\n+\n+\n+    srcAddress = CLinker.allocateMemory(size);\n+    dstAddress = CLinker.allocateMemory(size);\n+\n+    a = new byte[size];\n+    b = new byte[size];\n+    c = new byte[size];\n+  }\n+\n+\n+  @Benchmark\n+  public void array() {\n+\/\/    final var srcArray = this.srcArray;\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ByteVector.fromArray(SPECIES, srcArray, i);\n+      v.intoArray(dstArray, i);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void array2() {\n+\/\/    final var srcArray = this.srcArray;\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ByteVector.fromByteArray(SPECIES, srcArray, i, ByteOrder.nativeOrder());\n+      v.intoByteArray(dstArray, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void arrayScalar() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i ++) {\n+      var v = srcArray[i];\n+      dstArray[i] = v;\n+    }\n+  }\n+\n+  @Benchmark\n+  public void vectAdd1() {\n+    var a = this.a;\n+    var b = this.b;\n+    var c = this.c;\n+\n+    for (int i = 0; i < a.length; i += SPECIES.length()) {\n+      ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+      ByteVector bv = ByteVector.fromArray(SPECIES, b, i);\n+      av.lanewise(VectorOperators.ADD, bv).intoArray(c, i);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void vectAdd2() {\n+    var a = this.a;\n+    var b = this.b;\n+    var c = this.c;\n+\n+    for (int i = 0; i < a.length\/SPECIES.length(); i++) {\n+      ByteVector av = ByteVector.fromArray(SPECIES, a, (i*SPECIES.length()));\n+      ByteVector bv = ByteVector.fromArray(SPECIES, b, (i*SPECIES.length()));\n+      av.lanewise(VectorOperators.ADD, bv).intoArray(c, (i*SPECIES.length()));\n+    }\n+  }\n+\n+  @Benchmark\n+  public void arrayAdd() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ByteVector.fromArray(SPECIES, srcArray, i);\n+      v = v.add(v);\n+      v.intoArray(dstArray, i);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferHeap() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ByteVector.fromByteBuffer(SPECIES, srcBufferHeap, i, ByteOrder.nativeOrder());\n+      v.intoByteBuffer(dstBufferHeap, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferHeapScalar() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i++) {\n+      var v = srcBufferHeap.get(i);\n+      dstBufferHeap.put(i, v);\n+    }\n+  }\n+\n+  @Benchmark\n+  @CompilerControl(CompilerControl.Mode.PRINT)\n+  public void bufferNative() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ByteVector.fromByteBuffer(SPECIES, srcBufferNative, i, ByteOrder.nativeOrder());\n+      v.intoByteBuffer(dstBufferNative, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferNativeScalar() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i++) {\n+      var v = srcBufferNative.get(i);\n+      dstBufferNative.put(i, v);\n+    }\n+  }\n+\n+\n+  @Benchmark\n+  public void bufferSegmentImplicit() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ByteVector.fromByteBuffer(SPECIES, srcBufferSegmentImplicit, i, ByteOrder.nativeOrder());\n+      v.intoByteBuffer(dstBufferSegmentImplicit, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  @CompilerControl(CompilerControl.Mode.PRINT)\n+  public void segmentImplicitScalar() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i++) {\n+      var v = MemoryAccess.getByteAtOffset(srcSegmentImplicit, i);\n+      MemoryAccess.setByteAtOffset(dstSegmentImplicit, i, v);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferSegmentConfined() {\n+    try (final var scope = ResourceScope.newConfinedScope()) {\n+      final var srcBufferSegmentConfined = srcAddress.asSegment(size, scope).asByteBuffer();\n+      final var dstBufferSegmentConfined = dstAddress.asSegment(size, scope).asByteBuffer();\n+\n+      for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+        var v = ByteVector.fromByteBuffer(SPECIES, srcBufferSegmentConfined, i, ByteOrder.nativeOrder());\n+        v.intoByteBuffer(dstBufferSegmentConfined, i, ByteOrder.nativeOrder());\n+      }\n+    }\n+  }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java","additions":252,"deletions":0,"binary":false,"changes":252,"status":"added"},{"patch":"@@ -0,0 +1,228 @@\n+\/*\n+ *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+package org.openjdk.bench.jdk.incubator.vector;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.concurrent.TimeUnit;\n+import jdk.incubator.foreign.CLinker;\n+import jdk.incubator.foreign.MemoryAddress;\n+import jdk.incubator.foreign.MemorySegment;\n+import jdk.incubator.foreign.ResourceScope;\n+import jdk.incubator.vector.ShortVector;\n+import jdk.incubator.vector.VectorOperators;\n+import jdk.incubator.vector.VectorSpecies;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.CompilerControl;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@Warmup(iterations = 5, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@Measurement(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n+@State(org.openjdk.jmh.annotations.Scope.Thread)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Fork(value = 1, jvmArgsAppend = {\n+    \"--add-modules=jdk.incubator.foreign,jdk.incubator.vector\",\n+    \"-Dforeign.restricted=permit\",\n+    \"--enable-native-access\", \"ALL-UNNAMED\"})\n+public class TestLoadStoreShort {\n+  private static final VectorSpecies<Short> SPECIES = VectorSpecies.ofLargestShape(short.class);\n+\n+  @Param(\"256\")\n+  private int size;\n+\n+  private int longSize;\n+\n+  private short[] srcArray;\n+\n+  private short[] dstArray;\n+\n+\n+  private ByteBuffer srcBufferHeap;\n+\n+  private ByteBuffer dstBufferHeap;\n+\n+  private ByteBuffer srcBufferNative;\n+\n+  private ByteBuffer dstBufferNative;\n+\n+\n+  private ResourceScope implicitScope;\n+\n+  private MemorySegment srcSegmentImplicit;\n+\n+  private MemorySegment dstSegmentImplicit;\n+\n+  private ByteBuffer srcBufferSegmentImplicit;\n+\n+  private ByteBuffer dstBufferSegmentImplicit;\n+\n+\n+  private MemoryAddress srcAddress;\n+\n+  private MemoryAddress dstAddress;\n+\n+\/\/  private byte[] bigArray = new byte[Integer.MAX_VALUE];\n+\n+  private volatile short[] a, b, c;\n+  @Setup\n+  public void setup() {\n+    var longSize = size \/ Short.BYTES;\n+    srcArray = new short[longSize];\n+    dstArray = srcArray.clone();\n+    for (int i = 0; i < srcArray.length; i++) {\n+      srcArray[i] = (short) i;\n+    }\n+\n+\n+    srcBufferHeap = ByteBuffer.allocate(size);\n+    dstBufferHeap = ByteBuffer.allocate(size);\n+\n+    srcBufferNative = ByteBuffer.allocateDirect(size);\n+    dstBufferNative = ByteBuffer.allocateDirect(size);\n+\n+\n+    implicitScope = ResourceScope.newImplicitScope();\n+    srcSegmentImplicit = MemorySegment.allocateNative(size, SPECIES.vectorByteSize(), implicitScope);\n+    srcBufferSegmentImplicit = srcSegmentImplicit.asByteBuffer();\n+    dstSegmentImplicit = MemorySegment.allocateNative(size, SPECIES.vectorByteSize(), implicitScope);\n+    dstBufferSegmentImplicit = dstSegmentImplicit.asByteBuffer();\n+\n+\n+    srcAddress = CLinker.allocateMemory(size);\n+    dstAddress = CLinker.allocateMemory(size);\n+\n+    this.longSize = longSize;\n+\n+    a = new short[size];\n+    b = new short[size];\n+    c = new short[size];\n+\n+  }\n+\n+  @TearDown\n+  public void tearDown() {\n+    CLinker.freeMemory(srcAddress);\n+    CLinker.freeMemory(dstAddress);\n+  }\n+\n+  @Benchmark\n+  @CompilerControl(CompilerControl.Mode.PRINT)\n+  public void array() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ShortVector.fromArray(SPECIES, srcArray, i);\n+      v.intoArray(dstArray, i);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void vectAdd1() {\n+    var a = this.a;\n+    var b = this.b;\n+    var c = this.c;\n+\n+    for (int i = 0; i < a.length; i += SPECIES.length()) {\n+      ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+      ShortVector bv = ShortVector.fromArray(SPECIES, b, i);\n+      av.lanewise(VectorOperators.ADD, bv).intoArray(c, i);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void vectAdd2() {\n+    var a = this.a;\n+    var b = this.b;\n+    var c = this.c;\n+\n+    for (int i = 0; i < a.length\/SPECIES.length(); i++) {\n+      ShortVector av = ShortVector.fromArray(SPECIES, a, (i*SPECIES.length()));\n+      ShortVector bv = ShortVector.fromArray(SPECIES, b, (i*SPECIES.length()));\n+      av.lanewise(VectorOperators.ADD, bv).intoArray(c, (i*SPECIES.length()));\n+    }\n+  }\n+\n+  @Benchmark\n+  public void arrayAdd() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ShortVector.fromArray(SPECIES, srcArray, i);\n+      v = v.add(v);\n+      v.intoArray(dstArray, i);\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferHeap() {\n+    for (int i = 0; i < SPECIES.loopBound(longSize); i += SPECIES.length()) {\n+      var v = ShortVector.fromByteBuffer(SPECIES, srcBufferHeap, i, ByteOrder.nativeOrder());\n+      v.intoByteBuffer(dstBufferHeap, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferNative() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ShortVector.fromByteBuffer(SPECIES, srcBufferNative, i, ByteOrder.nativeOrder());\n+      v.intoByteBuffer(dstBufferNative, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferNativeAdd() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ShortVector.fromByteBuffer(SPECIES, srcBufferNative, i, ByteOrder.nativeOrder());\n+      v = v.add(v);\n+      v.intoByteBuffer(dstBufferNative, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferSegmentImplicit() {\n+    for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+      var v = ShortVector.fromByteBuffer(SPECIES, srcBufferSegmentImplicit, i, ByteOrder.nativeOrder());\n+      v.intoByteBuffer(dstBufferSegmentImplicit, i, ByteOrder.nativeOrder());\n+    }\n+  }\n+\n+  @Benchmark\n+  public void bufferSegmentConfined() {\n+    try (final var scope = ResourceScope.newConfinedScope()) {\n+      final var srcBufferSegmentConfined = srcAddress.asSegment(size, scope).asByteBuffer();\n+      final var dstBufferSegmentConfined = dstAddress.asSegment(size, scope).asByteBuffer();\n+\n+      for (int i = 0; i < SPECIES.loopBound(srcArray.length); i += SPECIES.length()) {\n+        var v = ShortVector.fromByteBuffer(SPECIES, srcBufferSegmentConfined, i, ByteOrder.nativeOrder());\n+        v.intoByteBuffer(dstBufferSegmentConfined, i, ByteOrder.nativeOrder());\n+      }\n+    }\n+  }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShort.java","additions":228,"deletions":0,"binary":false,"changes":228,"status":"added"},{"patch":"@@ -103,0 +103,10 @@\n+    private static double Copysign_Kernel(double data, double sign)\n+    {\n+        return Math.copySign(data, sign);\n+    }\n+\n+    private static float Copysign_Kernel(float data, float sign)\n+    {\n+        return Math.copySign(data, sign);\n+    }\n+\n@@ -142,0 +152,41 @@\n+\n+    @Benchmark\n+    @OperationsPerInvocation(ITERATIONS * 17)\n+    public void _5_copySignFloatTest(Blackhole bh) {\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            for (float f : float_values) {\n+                bh.consume(Copysign_Kernel(floatValue, f));\n+            }\n+        }\n+    }\n+\n+    @Benchmark\n+    @OperationsPerInvocation(ITERATIONS * 17)\n+    public void _6_overheadCopySignFloat(Blackhole bh) {\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            for (float f : float_values) {\n+                bh.consume(f);\n+            }\n+       }\n+    }\n+\n+    @Benchmark\n+    @OperationsPerInvocation(ITERATIONS * 17)\n+    public void _7_copySignDoubleTest(Blackhole bh) {\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            for (double d : double_values) {\n+                bh.consume(Copysign_Kernel(doubleValue, d));\n+            }\n+        }\n+    }\n+\n+    @Benchmark\n+    @OperationsPerInvocation(ITERATIONS * 17)\n+    public void _8_overheadCopySignDouble(Blackhole bh) {\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            for (double d : double_values) {\n+                bh.consume(d);\n+            }\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/Signum.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -0,0 +1,28732 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.vm.gc;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+\/\/ Test the raw allocation rate for long arrays. Allocate 1 megabyte\n+\/\/ of memory, in chunks of varying size. The resulting score is the\n+\/\/ allocation rate in megabytes per second.\n+\n+@OutputTimeUnit(TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 1)\n+@Warmup(iterations = 15, time = 1)\n+@Fork(value = 1)\n+@State(Scope.Thread)\n+public class RawAllocationRate {\n+\n+    @Param({\"32\", \"64\", \"256\", \"1024\", \"2048\", \"4096\", \"8192\", \"16384\", \"65536\", \"131072\"})  \/\/ Object size in bytes.\n+    public int size;\n+\n+    Object[] objects;\n+\n+    private static final long megabyte = 1024 * 1024;\n+    private static final long bytesPerLong = 8;\n+    private static final int longsPerHeader = 2;\n+\n+    @Setup(Level.Iteration)\n+    public void up() throws Throwable {\n+        if (size % bytesPerLong != 0) {\n+            throw new RuntimeException(\"I'm sorry Dave, I can't do that\");\n+        }\n+        objects = new Object[1_000_000];\n+    }\n+\n+    @TearDown(Level.Iteration)\n+    public void down() throws Throwable {\n+        objects = null;\n+    }\n+\n+    @Benchmark\n+    public Object[] arrayTest() {\n+        var arrays = objects;\n+        final int longElements = (int)(size\/bytesPerLong) - longsPerHeader;\n+        int i, j;\n+        for (i = 0, j = 0; ; i += size, j++) {\n+            if (i + size < megabyte) {\n+                arrays[j] = new long[longElements];\n+            } else {\n+                long remaining = megabyte - i;\n+                int elements = (int)(remaining\/bytesPerLong) - longsPerHeader;\n+                if (elements >= 0) {\n+                    arrays[j] = new long[elements];\n+                }\n+                break;\n+            }\n+        }\n+        return arrays;\n+    }\n+\n+    @Benchmark\n+    @Fork(jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n+    public Object[] arrayTest_C1() {\n+        return arrayTest();\n+    }\n+\n+    @Benchmark\n+    public Object[] instanceTest() {\n+        var objects = this.objects;\n+        final int longElements = (int)(size);\n+        int i, j;\n+        for (i = 0, j = 0; ; i += size, j++) {\n+            if (i + size < megabyte) {\n+                objects[j] = newInstance(longElements);\n+            } else {\n+                long remaining = megabyte - i;\n+                int elements = (int)(remaining\/bytesPerLong) - longsPerHeader;\n+                if (elements >= 0) {\n+                    objects[j] = new long[elements];\n+                }\n+                break;\n+            }\n+        }\n+        return objects;\n+    }\n+\n+    @Benchmark\n+    @Fork(jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n+    public Object[] instanceTest_C1() {\n+        return instanceTest();\n+    }\n+\n+    static class BaseClass {\n+    }\n+\n+    static class Class32 extends BaseClass {\n+       long i0;\n+       long i1;\n+    }\n+    static class Class64 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+    }\n+    static class Class256 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+    }\n+    static class Class1024 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+    }\n+    static class Class2048 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+       long i126;\n+       long i127;\n+       long i128;\n+       long i129;\n+       long i130;\n+       long i131;\n+       long i132;\n+       long i133;\n+       long i134;\n+       long i135;\n+       long i136;\n+       long i137;\n+       long i138;\n+       long i139;\n+       long i140;\n+       long i141;\n+       long i142;\n+       long i143;\n+       long i144;\n+       long i145;\n+       long i146;\n+       long i147;\n+       long i148;\n+       long i149;\n+       long i150;\n+       long i151;\n+       long i152;\n+       long i153;\n+       long i154;\n+       long i155;\n+       long i156;\n+       long i157;\n+       long i158;\n+       long i159;\n+       long i160;\n+       long i161;\n+       long i162;\n+       long i163;\n+       long i164;\n+       long i165;\n+       long i166;\n+       long i167;\n+       long i168;\n+       long i169;\n+       long i170;\n+       long i171;\n+       long i172;\n+       long i173;\n+       long i174;\n+       long i175;\n+       long i176;\n+       long i177;\n+       long i178;\n+       long i179;\n+       long i180;\n+       long i181;\n+       long i182;\n+       long i183;\n+       long i184;\n+       long i185;\n+       long i186;\n+       long i187;\n+       long i188;\n+       long i189;\n+       long i190;\n+       long i191;\n+       long i192;\n+       long i193;\n+       long i194;\n+       long i195;\n+       long i196;\n+       long i197;\n+       long i198;\n+       long i199;\n+       long i200;\n+       long i201;\n+       long i202;\n+       long i203;\n+       long i204;\n+       long i205;\n+       long i206;\n+       long i207;\n+       long i208;\n+       long i209;\n+       long i210;\n+       long i211;\n+       long i212;\n+       long i213;\n+       long i214;\n+       long i215;\n+       long i216;\n+       long i217;\n+       long i218;\n+       long i219;\n+       long i220;\n+       long i221;\n+       long i222;\n+       long i223;\n+       long i224;\n+       long i225;\n+       long i226;\n+       long i227;\n+       long i228;\n+       long i229;\n+       long i230;\n+       long i231;\n+       long i232;\n+       long i233;\n+       long i234;\n+       long i235;\n+       long i236;\n+       long i237;\n+       long i238;\n+       long i239;\n+       long i240;\n+       long i241;\n+       long i242;\n+       long i243;\n+       long i244;\n+       long i245;\n+       long i246;\n+       long i247;\n+       long i248;\n+       long i249;\n+       long i250;\n+       long i251;\n+       long i252;\n+       long i253;\n+    }\n+    static class Class4096 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+       long i126;\n+       long i127;\n+       long i128;\n+       long i129;\n+       long i130;\n+       long i131;\n+       long i132;\n+       long i133;\n+       long i134;\n+       long i135;\n+       long i136;\n+       long i137;\n+       long i138;\n+       long i139;\n+       long i140;\n+       long i141;\n+       long i142;\n+       long i143;\n+       long i144;\n+       long i145;\n+       long i146;\n+       long i147;\n+       long i148;\n+       long i149;\n+       long i150;\n+       long i151;\n+       long i152;\n+       long i153;\n+       long i154;\n+       long i155;\n+       long i156;\n+       long i157;\n+       long i158;\n+       long i159;\n+       long i160;\n+       long i161;\n+       long i162;\n+       long i163;\n+       long i164;\n+       long i165;\n+       long i166;\n+       long i167;\n+       long i168;\n+       long i169;\n+       long i170;\n+       long i171;\n+       long i172;\n+       long i173;\n+       long i174;\n+       long i175;\n+       long i176;\n+       long i177;\n+       long i178;\n+       long i179;\n+       long i180;\n+       long i181;\n+       long i182;\n+       long i183;\n+       long i184;\n+       long i185;\n+       long i186;\n+       long i187;\n+       long i188;\n+       long i189;\n+       long i190;\n+       long i191;\n+       long i192;\n+       long i193;\n+       long i194;\n+       long i195;\n+       long i196;\n+       long i197;\n+       long i198;\n+       long i199;\n+       long i200;\n+       long i201;\n+       long i202;\n+       long i203;\n+       long i204;\n+       long i205;\n+       long i206;\n+       long i207;\n+       long i208;\n+       long i209;\n+       long i210;\n+       long i211;\n+       long i212;\n+       long i213;\n+       long i214;\n+       long i215;\n+       long i216;\n+       long i217;\n+       long i218;\n+       long i219;\n+       long i220;\n+       long i221;\n+       long i222;\n+       long i223;\n+       long i224;\n+       long i225;\n+       long i226;\n+       long i227;\n+       long i228;\n+       long i229;\n+       long i230;\n+       long i231;\n+       long i232;\n+       long i233;\n+       long i234;\n+       long i235;\n+       long i236;\n+       long i237;\n+       long i238;\n+       long i239;\n+       long i240;\n+       long i241;\n+       long i242;\n+       long i243;\n+       long i244;\n+       long i245;\n+       long i246;\n+       long i247;\n+       long i248;\n+       long i249;\n+       long i250;\n+       long i251;\n+       long i252;\n+       long i253;\n+       long i254;\n+       long i255;\n+       long i256;\n+       long i257;\n+       long i258;\n+       long i259;\n+       long i260;\n+       long i261;\n+       long i262;\n+       long i263;\n+       long i264;\n+       long i265;\n+       long i266;\n+       long i267;\n+       long i268;\n+       long i269;\n+       long i270;\n+       long i271;\n+       long i272;\n+       long i273;\n+       long i274;\n+       long i275;\n+       long i276;\n+       long i277;\n+       long i278;\n+       long i279;\n+       long i280;\n+       long i281;\n+       long i282;\n+       long i283;\n+       long i284;\n+       long i285;\n+       long i286;\n+       long i287;\n+       long i288;\n+       long i289;\n+       long i290;\n+       long i291;\n+       long i292;\n+       long i293;\n+       long i294;\n+       long i295;\n+       long i296;\n+       long i297;\n+       long i298;\n+       long i299;\n+       long i300;\n+       long i301;\n+       long i302;\n+       long i303;\n+       long i304;\n+       long i305;\n+       long i306;\n+       long i307;\n+       long i308;\n+       long i309;\n+       long i310;\n+       long i311;\n+       long i312;\n+       long i313;\n+       long i314;\n+       long i315;\n+       long i316;\n+       long i317;\n+       long i318;\n+       long i319;\n+       long i320;\n+       long i321;\n+       long i322;\n+       long i323;\n+       long i324;\n+       long i325;\n+       long i326;\n+       long i327;\n+       long i328;\n+       long i329;\n+       long i330;\n+       long i331;\n+       long i332;\n+       long i333;\n+       long i334;\n+       long i335;\n+       long i336;\n+       long i337;\n+       long i338;\n+       long i339;\n+       long i340;\n+       long i341;\n+       long i342;\n+       long i343;\n+       long i344;\n+       long i345;\n+       long i346;\n+       long i347;\n+       long i348;\n+       long i349;\n+       long i350;\n+       long i351;\n+       long i352;\n+       long i353;\n+       long i354;\n+       long i355;\n+       long i356;\n+       long i357;\n+       long i358;\n+       long i359;\n+       long i360;\n+       long i361;\n+       long i362;\n+       long i363;\n+       long i364;\n+       long i365;\n+       long i366;\n+       long i367;\n+       long i368;\n+       long i369;\n+       long i370;\n+       long i371;\n+       long i372;\n+       long i373;\n+       long i374;\n+       long i375;\n+       long i376;\n+       long i377;\n+       long i378;\n+       long i379;\n+       long i380;\n+       long i381;\n+       long i382;\n+       long i383;\n+       long i384;\n+       long i385;\n+       long i386;\n+       long i387;\n+       long i388;\n+       long i389;\n+       long i390;\n+       long i391;\n+       long i392;\n+       long i393;\n+       long i394;\n+       long i395;\n+       long i396;\n+       long i397;\n+       long i398;\n+       long i399;\n+       long i400;\n+       long i401;\n+       long i402;\n+       long i403;\n+       long i404;\n+       long i405;\n+       long i406;\n+       long i407;\n+       long i408;\n+       long i409;\n+       long i410;\n+       long i411;\n+       long i412;\n+       long i413;\n+       long i414;\n+       long i415;\n+       long i416;\n+       long i417;\n+       long i418;\n+       long i419;\n+       long i420;\n+       long i421;\n+       long i422;\n+       long i423;\n+       long i424;\n+       long i425;\n+       long i426;\n+       long i427;\n+       long i428;\n+       long i429;\n+       long i430;\n+       long i431;\n+       long i432;\n+       long i433;\n+       long i434;\n+       long i435;\n+       long i436;\n+       long i437;\n+       long i438;\n+       long i439;\n+       long i440;\n+       long i441;\n+       long i442;\n+       long i443;\n+       long i444;\n+       long i445;\n+       long i446;\n+       long i447;\n+       long i448;\n+       long i449;\n+       long i450;\n+       long i451;\n+       long i452;\n+       long i453;\n+       long i454;\n+       long i455;\n+       long i456;\n+       long i457;\n+       long i458;\n+       long i459;\n+       long i460;\n+       long i461;\n+       long i462;\n+       long i463;\n+       long i464;\n+       long i465;\n+       long i466;\n+       long i467;\n+       long i468;\n+       long i469;\n+       long i470;\n+       long i471;\n+       long i472;\n+       long i473;\n+       long i474;\n+       long i475;\n+       long i476;\n+       long i477;\n+       long i478;\n+       long i479;\n+       long i480;\n+       long i481;\n+       long i482;\n+       long i483;\n+       long i484;\n+       long i485;\n+       long i486;\n+       long i487;\n+       long i488;\n+       long i489;\n+       long i490;\n+       long i491;\n+       long i492;\n+       long i493;\n+       long i494;\n+       long i495;\n+       long i496;\n+       long i497;\n+       long i498;\n+       long i499;\n+       long i500;\n+       long i501;\n+       long i502;\n+       long i503;\n+       long i504;\n+       long i505;\n+       long i506;\n+       long i507;\n+       long i508;\n+       long i509;\n+    }\n+    static class Class8192 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+       long i126;\n+       long i127;\n+       long i128;\n+       long i129;\n+       long i130;\n+       long i131;\n+       long i132;\n+       long i133;\n+       long i134;\n+       long i135;\n+       long i136;\n+       long i137;\n+       long i138;\n+       long i139;\n+       long i140;\n+       long i141;\n+       long i142;\n+       long i143;\n+       long i144;\n+       long i145;\n+       long i146;\n+       long i147;\n+       long i148;\n+       long i149;\n+       long i150;\n+       long i151;\n+       long i152;\n+       long i153;\n+       long i154;\n+       long i155;\n+       long i156;\n+       long i157;\n+       long i158;\n+       long i159;\n+       long i160;\n+       long i161;\n+       long i162;\n+       long i163;\n+       long i164;\n+       long i165;\n+       long i166;\n+       long i167;\n+       long i168;\n+       long i169;\n+       long i170;\n+       long i171;\n+       long i172;\n+       long i173;\n+       long i174;\n+       long i175;\n+       long i176;\n+       long i177;\n+       long i178;\n+       long i179;\n+       long i180;\n+       long i181;\n+       long i182;\n+       long i183;\n+       long i184;\n+       long i185;\n+       long i186;\n+       long i187;\n+       long i188;\n+       long i189;\n+       long i190;\n+       long i191;\n+       long i192;\n+       long i193;\n+       long i194;\n+       long i195;\n+       long i196;\n+       long i197;\n+       long i198;\n+       long i199;\n+       long i200;\n+       long i201;\n+       long i202;\n+       long i203;\n+       long i204;\n+       long i205;\n+       long i206;\n+       long i207;\n+       long i208;\n+       long i209;\n+       long i210;\n+       long i211;\n+       long i212;\n+       long i213;\n+       long i214;\n+       long i215;\n+       long i216;\n+       long i217;\n+       long i218;\n+       long i219;\n+       long i220;\n+       long i221;\n+       long i222;\n+       long i223;\n+       long i224;\n+       long i225;\n+       long i226;\n+       long i227;\n+       long i228;\n+       long i229;\n+       long i230;\n+       long i231;\n+       long i232;\n+       long i233;\n+       long i234;\n+       long i235;\n+       long i236;\n+       long i237;\n+       long i238;\n+       long i239;\n+       long i240;\n+       long i241;\n+       long i242;\n+       long i243;\n+       long i244;\n+       long i245;\n+       long i246;\n+       long i247;\n+       long i248;\n+       long i249;\n+       long i250;\n+       long i251;\n+       long i252;\n+       long i253;\n+       long i254;\n+       long i255;\n+       long i256;\n+       long i257;\n+       long i258;\n+       long i259;\n+       long i260;\n+       long i261;\n+       long i262;\n+       long i263;\n+       long i264;\n+       long i265;\n+       long i266;\n+       long i267;\n+       long i268;\n+       long i269;\n+       long i270;\n+       long i271;\n+       long i272;\n+       long i273;\n+       long i274;\n+       long i275;\n+       long i276;\n+       long i277;\n+       long i278;\n+       long i279;\n+       long i280;\n+       long i281;\n+       long i282;\n+       long i283;\n+       long i284;\n+       long i285;\n+       long i286;\n+       long i287;\n+       long i288;\n+       long i289;\n+       long i290;\n+       long i291;\n+       long i292;\n+       long i293;\n+       long i294;\n+       long i295;\n+       long i296;\n+       long i297;\n+       long i298;\n+       long i299;\n+       long i300;\n+       long i301;\n+       long i302;\n+       long i303;\n+       long i304;\n+       long i305;\n+       long i306;\n+       long i307;\n+       long i308;\n+       long i309;\n+       long i310;\n+       long i311;\n+       long i312;\n+       long i313;\n+       long i314;\n+       long i315;\n+       long i316;\n+       long i317;\n+       long i318;\n+       long i319;\n+       long i320;\n+       long i321;\n+       long i322;\n+       long i323;\n+       long i324;\n+       long i325;\n+       long i326;\n+       long i327;\n+       long i328;\n+       long i329;\n+       long i330;\n+       long i331;\n+       long i332;\n+       long i333;\n+       long i334;\n+       long i335;\n+       long i336;\n+       long i337;\n+       long i338;\n+       long i339;\n+       long i340;\n+       long i341;\n+       long i342;\n+       long i343;\n+       long i344;\n+       long i345;\n+       long i346;\n+       long i347;\n+       long i348;\n+       long i349;\n+       long i350;\n+       long i351;\n+       long i352;\n+       long i353;\n+       long i354;\n+       long i355;\n+       long i356;\n+       long i357;\n+       long i358;\n+       long i359;\n+       long i360;\n+       long i361;\n+       long i362;\n+       long i363;\n+       long i364;\n+       long i365;\n+       long i366;\n+       long i367;\n+       long i368;\n+       long i369;\n+       long i370;\n+       long i371;\n+       long i372;\n+       long i373;\n+       long i374;\n+       long i375;\n+       long i376;\n+       long i377;\n+       long i378;\n+       long i379;\n+       long i380;\n+       long i381;\n+       long i382;\n+       long i383;\n+       long i384;\n+       long i385;\n+       long i386;\n+       long i387;\n+       long i388;\n+       long i389;\n+       long i390;\n+       long i391;\n+       long i392;\n+       long i393;\n+       long i394;\n+       long i395;\n+       long i396;\n+       long i397;\n+       long i398;\n+       long i399;\n+       long i400;\n+       long i401;\n+       long i402;\n+       long i403;\n+       long i404;\n+       long i405;\n+       long i406;\n+       long i407;\n+       long i408;\n+       long i409;\n+       long i410;\n+       long i411;\n+       long i412;\n+       long i413;\n+       long i414;\n+       long i415;\n+       long i416;\n+       long i417;\n+       long i418;\n+       long i419;\n+       long i420;\n+       long i421;\n+       long i422;\n+       long i423;\n+       long i424;\n+       long i425;\n+       long i426;\n+       long i427;\n+       long i428;\n+       long i429;\n+       long i430;\n+       long i431;\n+       long i432;\n+       long i433;\n+       long i434;\n+       long i435;\n+       long i436;\n+       long i437;\n+       long i438;\n+       long i439;\n+       long i440;\n+       long i441;\n+       long i442;\n+       long i443;\n+       long i444;\n+       long i445;\n+       long i446;\n+       long i447;\n+       long i448;\n+       long i449;\n+       long i450;\n+       long i451;\n+       long i452;\n+       long i453;\n+       long i454;\n+       long i455;\n+       long i456;\n+       long i457;\n+       long i458;\n+       long i459;\n+       long i460;\n+       long i461;\n+       long i462;\n+       long i463;\n+       long i464;\n+       long i465;\n+       long i466;\n+       long i467;\n+       long i468;\n+       long i469;\n+       long i470;\n+       long i471;\n+       long i472;\n+       long i473;\n+       long i474;\n+       long i475;\n+       long i476;\n+       long i477;\n+       long i478;\n+       long i479;\n+       long i480;\n+       long i481;\n+       long i482;\n+       long i483;\n+       long i484;\n+       long i485;\n+       long i486;\n+       long i487;\n+       long i488;\n+       long i489;\n+       long i490;\n+       long i491;\n+       long i492;\n+       long i493;\n+       long i494;\n+       long i495;\n+       long i496;\n+       long i497;\n+       long i498;\n+       long i499;\n+       long i500;\n+       long i501;\n+       long i502;\n+       long i503;\n+       long i504;\n+       long i505;\n+       long i506;\n+       long i507;\n+       long i508;\n+       long i509;\n+       long i510;\n+       long i511;\n+       long i512;\n+       long i513;\n+       long i514;\n+       long i515;\n+       long i516;\n+       long i517;\n+       long i518;\n+       long i519;\n+       long i520;\n+       long i521;\n+       long i522;\n+       long i523;\n+       long i524;\n+       long i525;\n+       long i526;\n+       long i527;\n+       long i528;\n+       long i529;\n+       long i530;\n+       long i531;\n+       long i532;\n+       long i533;\n+       long i534;\n+       long i535;\n+       long i536;\n+       long i537;\n+       long i538;\n+       long i539;\n+       long i540;\n+       long i541;\n+       long i542;\n+       long i543;\n+       long i544;\n+       long i545;\n+       long i546;\n+       long i547;\n+       long i548;\n+       long i549;\n+       long i550;\n+       long i551;\n+       long i552;\n+       long i553;\n+       long i554;\n+       long i555;\n+       long i556;\n+       long i557;\n+       long i558;\n+       long i559;\n+       long i560;\n+       long i561;\n+       long i562;\n+       long i563;\n+       long i564;\n+       long i565;\n+       long i566;\n+       long i567;\n+       long i568;\n+       long i569;\n+       long i570;\n+       long i571;\n+       long i572;\n+       long i573;\n+       long i574;\n+       long i575;\n+       long i576;\n+       long i577;\n+       long i578;\n+       long i579;\n+       long i580;\n+       long i581;\n+       long i582;\n+       long i583;\n+       long i584;\n+       long i585;\n+       long i586;\n+       long i587;\n+       long i588;\n+       long i589;\n+       long i590;\n+       long i591;\n+       long i592;\n+       long i593;\n+       long i594;\n+       long i595;\n+       long i596;\n+       long i597;\n+       long i598;\n+       long i599;\n+       long i600;\n+       long i601;\n+       long i602;\n+       long i603;\n+       long i604;\n+       long i605;\n+       long i606;\n+       long i607;\n+       long i608;\n+       long i609;\n+       long i610;\n+       long i611;\n+       long i612;\n+       long i613;\n+       long i614;\n+       long i615;\n+       long i616;\n+       long i617;\n+       long i618;\n+       long i619;\n+       long i620;\n+       long i621;\n+       long i622;\n+       long i623;\n+       long i624;\n+       long i625;\n+       long i626;\n+       long i627;\n+       long i628;\n+       long i629;\n+       long i630;\n+       long i631;\n+       long i632;\n+       long i633;\n+       long i634;\n+       long i635;\n+       long i636;\n+       long i637;\n+       long i638;\n+       long i639;\n+       long i640;\n+       long i641;\n+       long i642;\n+       long i643;\n+       long i644;\n+       long i645;\n+       long i646;\n+       long i647;\n+       long i648;\n+       long i649;\n+       long i650;\n+       long i651;\n+       long i652;\n+       long i653;\n+       long i654;\n+       long i655;\n+       long i656;\n+       long i657;\n+       long i658;\n+       long i659;\n+       long i660;\n+       long i661;\n+       long i662;\n+       long i663;\n+       long i664;\n+       long i665;\n+       long i666;\n+       long i667;\n+       long i668;\n+       long i669;\n+       long i670;\n+       long i671;\n+       long i672;\n+       long i673;\n+       long i674;\n+       long i675;\n+       long i676;\n+       long i677;\n+       long i678;\n+       long i679;\n+       long i680;\n+       long i681;\n+       long i682;\n+       long i683;\n+       long i684;\n+       long i685;\n+       long i686;\n+       long i687;\n+       long i688;\n+       long i689;\n+       long i690;\n+       long i691;\n+       long i692;\n+       long i693;\n+       long i694;\n+       long i695;\n+       long i696;\n+       long i697;\n+       long i698;\n+       long i699;\n+       long i700;\n+       long i701;\n+       long i702;\n+       long i703;\n+       long i704;\n+       long i705;\n+       long i706;\n+       long i707;\n+       long i708;\n+       long i709;\n+       long i710;\n+       long i711;\n+       long i712;\n+       long i713;\n+       long i714;\n+       long i715;\n+       long i716;\n+       long i717;\n+       long i718;\n+       long i719;\n+       long i720;\n+       long i721;\n+       long i722;\n+       long i723;\n+       long i724;\n+       long i725;\n+       long i726;\n+       long i727;\n+       long i728;\n+       long i729;\n+       long i730;\n+       long i731;\n+       long i732;\n+       long i733;\n+       long i734;\n+       long i735;\n+       long i736;\n+       long i737;\n+       long i738;\n+       long i739;\n+       long i740;\n+       long i741;\n+       long i742;\n+       long i743;\n+       long i744;\n+       long i745;\n+       long i746;\n+       long i747;\n+       long i748;\n+       long i749;\n+       long i750;\n+       long i751;\n+       long i752;\n+       long i753;\n+       long i754;\n+       long i755;\n+       long i756;\n+       long i757;\n+       long i758;\n+       long i759;\n+       long i760;\n+       long i761;\n+       long i762;\n+       long i763;\n+       long i764;\n+       long i765;\n+       long i766;\n+       long i767;\n+       long i768;\n+       long i769;\n+       long i770;\n+       long i771;\n+       long i772;\n+       long i773;\n+       long i774;\n+       long i775;\n+       long i776;\n+       long i777;\n+       long i778;\n+       long i779;\n+       long i780;\n+       long i781;\n+       long i782;\n+       long i783;\n+       long i784;\n+       long i785;\n+       long i786;\n+       long i787;\n+       long i788;\n+       long i789;\n+       long i790;\n+       long i791;\n+       long i792;\n+       long i793;\n+       long i794;\n+       long i795;\n+       long i796;\n+       long i797;\n+       long i798;\n+       long i799;\n+       long i800;\n+       long i801;\n+       long i802;\n+       long i803;\n+       long i804;\n+       long i805;\n+       long i806;\n+       long i807;\n+       long i808;\n+       long i809;\n+       long i810;\n+       long i811;\n+       long i812;\n+       long i813;\n+       long i814;\n+       long i815;\n+       long i816;\n+       long i817;\n+       long i818;\n+       long i819;\n+       long i820;\n+       long i821;\n+       long i822;\n+       long i823;\n+       long i824;\n+       long i825;\n+       long i826;\n+       long i827;\n+       long i828;\n+       long i829;\n+       long i830;\n+       long i831;\n+       long i832;\n+       long i833;\n+       long i834;\n+       long i835;\n+       long i836;\n+       long i837;\n+       long i838;\n+       long i839;\n+       long i840;\n+       long i841;\n+       long i842;\n+       long i843;\n+       long i844;\n+       long i845;\n+       long i846;\n+       long i847;\n+       long i848;\n+       long i849;\n+       long i850;\n+       long i851;\n+       long i852;\n+       long i853;\n+       long i854;\n+       long i855;\n+       long i856;\n+       long i857;\n+       long i858;\n+       long i859;\n+       long i860;\n+       long i861;\n+       long i862;\n+       long i863;\n+       long i864;\n+       long i865;\n+       long i866;\n+       long i867;\n+       long i868;\n+       long i869;\n+       long i870;\n+       long i871;\n+       long i872;\n+       long i873;\n+       long i874;\n+       long i875;\n+       long i876;\n+       long i877;\n+       long i878;\n+       long i879;\n+       long i880;\n+       long i881;\n+       long i882;\n+       long i883;\n+       long i884;\n+       long i885;\n+       long i886;\n+       long i887;\n+       long i888;\n+       long i889;\n+       long i890;\n+       long i891;\n+       long i892;\n+       long i893;\n+       long i894;\n+       long i895;\n+       long i896;\n+       long i897;\n+       long i898;\n+       long i899;\n+       long i900;\n+       long i901;\n+       long i902;\n+       long i903;\n+       long i904;\n+       long i905;\n+       long i906;\n+       long i907;\n+       long i908;\n+       long i909;\n+       long i910;\n+       long i911;\n+       long i912;\n+       long i913;\n+       long i914;\n+       long i915;\n+       long i916;\n+       long i917;\n+       long i918;\n+       long i919;\n+       long i920;\n+       long i921;\n+       long i922;\n+       long i923;\n+       long i924;\n+       long i925;\n+       long i926;\n+       long i927;\n+       long i928;\n+       long i929;\n+       long i930;\n+       long i931;\n+       long i932;\n+       long i933;\n+       long i934;\n+       long i935;\n+       long i936;\n+       long i937;\n+       long i938;\n+       long i939;\n+       long i940;\n+       long i941;\n+       long i942;\n+       long i943;\n+       long i944;\n+       long i945;\n+       long i946;\n+       long i947;\n+       long i948;\n+       long i949;\n+       long i950;\n+       long i951;\n+       long i952;\n+       long i953;\n+       long i954;\n+       long i955;\n+       long i956;\n+       long i957;\n+       long i958;\n+       long i959;\n+       long i960;\n+       long i961;\n+       long i962;\n+       long i963;\n+       long i964;\n+       long i965;\n+       long i966;\n+       long i967;\n+       long i968;\n+       long i969;\n+       long i970;\n+       long i971;\n+       long i972;\n+       long i973;\n+       long i974;\n+       long i975;\n+       long i976;\n+       long i977;\n+       long i978;\n+       long i979;\n+       long i980;\n+       long i981;\n+       long i982;\n+       long i983;\n+       long i984;\n+       long i985;\n+       long i986;\n+       long i987;\n+       long i988;\n+       long i989;\n+       long i990;\n+       long i991;\n+       long i992;\n+       long i993;\n+       long i994;\n+       long i995;\n+       long i996;\n+       long i997;\n+       long i998;\n+       long i999;\n+       long i1000;\n+       long i1001;\n+       long i1002;\n+       long i1003;\n+       long i1004;\n+       long i1005;\n+       long i1006;\n+       long i1007;\n+       long i1008;\n+       long i1009;\n+       long i1010;\n+       long i1011;\n+       long i1012;\n+       long i1013;\n+       long i1014;\n+       long i1015;\n+       long i1016;\n+       long i1017;\n+       long i1018;\n+       long i1019;\n+       long i1020;\n+       long i1021;\n+    }\n+    static class Class16384 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+       long i126;\n+       long i127;\n+       long i128;\n+       long i129;\n+       long i130;\n+       long i131;\n+       long i132;\n+       long i133;\n+       long i134;\n+       long i135;\n+       long i136;\n+       long i137;\n+       long i138;\n+       long i139;\n+       long i140;\n+       long i141;\n+       long i142;\n+       long i143;\n+       long i144;\n+       long i145;\n+       long i146;\n+       long i147;\n+       long i148;\n+       long i149;\n+       long i150;\n+       long i151;\n+       long i152;\n+       long i153;\n+       long i154;\n+       long i155;\n+       long i156;\n+       long i157;\n+       long i158;\n+       long i159;\n+       long i160;\n+       long i161;\n+       long i162;\n+       long i163;\n+       long i164;\n+       long i165;\n+       long i166;\n+       long i167;\n+       long i168;\n+       long i169;\n+       long i170;\n+       long i171;\n+       long i172;\n+       long i173;\n+       long i174;\n+       long i175;\n+       long i176;\n+       long i177;\n+       long i178;\n+       long i179;\n+       long i180;\n+       long i181;\n+       long i182;\n+       long i183;\n+       long i184;\n+       long i185;\n+       long i186;\n+       long i187;\n+       long i188;\n+       long i189;\n+       long i190;\n+       long i191;\n+       long i192;\n+       long i193;\n+       long i194;\n+       long i195;\n+       long i196;\n+       long i197;\n+       long i198;\n+       long i199;\n+       long i200;\n+       long i201;\n+       long i202;\n+       long i203;\n+       long i204;\n+       long i205;\n+       long i206;\n+       long i207;\n+       long i208;\n+       long i209;\n+       long i210;\n+       long i211;\n+       long i212;\n+       long i213;\n+       long i214;\n+       long i215;\n+       long i216;\n+       long i217;\n+       long i218;\n+       long i219;\n+       long i220;\n+       long i221;\n+       long i222;\n+       long i223;\n+       long i224;\n+       long i225;\n+       long i226;\n+       long i227;\n+       long i228;\n+       long i229;\n+       long i230;\n+       long i231;\n+       long i232;\n+       long i233;\n+       long i234;\n+       long i235;\n+       long i236;\n+       long i237;\n+       long i238;\n+       long i239;\n+       long i240;\n+       long i241;\n+       long i242;\n+       long i243;\n+       long i244;\n+       long i245;\n+       long i246;\n+       long i247;\n+       long i248;\n+       long i249;\n+       long i250;\n+       long i251;\n+       long i252;\n+       long i253;\n+       long i254;\n+       long i255;\n+       long i256;\n+       long i257;\n+       long i258;\n+       long i259;\n+       long i260;\n+       long i261;\n+       long i262;\n+       long i263;\n+       long i264;\n+       long i265;\n+       long i266;\n+       long i267;\n+       long i268;\n+       long i269;\n+       long i270;\n+       long i271;\n+       long i272;\n+       long i273;\n+       long i274;\n+       long i275;\n+       long i276;\n+       long i277;\n+       long i278;\n+       long i279;\n+       long i280;\n+       long i281;\n+       long i282;\n+       long i283;\n+       long i284;\n+       long i285;\n+       long i286;\n+       long i287;\n+       long i288;\n+       long i289;\n+       long i290;\n+       long i291;\n+       long i292;\n+       long i293;\n+       long i294;\n+       long i295;\n+       long i296;\n+       long i297;\n+       long i298;\n+       long i299;\n+       long i300;\n+       long i301;\n+       long i302;\n+       long i303;\n+       long i304;\n+       long i305;\n+       long i306;\n+       long i307;\n+       long i308;\n+       long i309;\n+       long i310;\n+       long i311;\n+       long i312;\n+       long i313;\n+       long i314;\n+       long i315;\n+       long i316;\n+       long i317;\n+       long i318;\n+       long i319;\n+       long i320;\n+       long i321;\n+       long i322;\n+       long i323;\n+       long i324;\n+       long i325;\n+       long i326;\n+       long i327;\n+       long i328;\n+       long i329;\n+       long i330;\n+       long i331;\n+       long i332;\n+       long i333;\n+       long i334;\n+       long i335;\n+       long i336;\n+       long i337;\n+       long i338;\n+       long i339;\n+       long i340;\n+       long i341;\n+       long i342;\n+       long i343;\n+       long i344;\n+       long i345;\n+       long i346;\n+       long i347;\n+       long i348;\n+       long i349;\n+       long i350;\n+       long i351;\n+       long i352;\n+       long i353;\n+       long i354;\n+       long i355;\n+       long i356;\n+       long i357;\n+       long i358;\n+       long i359;\n+       long i360;\n+       long i361;\n+       long i362;\n+       long i363;\n+       long i364;\n+       long i365;\n+       long i366;\n+       long i367;\n+       long i368;\n+       long i369;\n+       long i370;\n+       long i371;\n+       long i372;\n+       long i373;\n+       long i374;\n+       long i375;\n+       long i376;\n+       long i377;\n+       long i378;\n+       long i379;\n+       long i380;\n+       long i381;\n+       long i382;\n+       long i383;\n+       long i384;\n+       long i385;\n+       long i386;\n+       long i387;\n+       long i388;\n+       long i389;\n+       long i390;\n+       long i391;\n+       long i392;\n+       long i393;\n+       long i394;\n+       long i395;\n+       long i396;\n+       long i397;\n+       long i398;\n+       long i399;\n+       long i400;\n+       long i401;\n+       long i402;\n+       long i403;\n+       long i404;\n+       long i405;\n+       long i406;\n+       long i407;\n+       long i408;\n+       long i409;\n+       long i410;\n+       long i411;\n+       long i412;\n+       long i413;\n+       long i414;\n+       long i415;\n+       long i416;\n+       long i417;\n+       long i418;\n+       long i419;\n+       long i420;\n+       long i421;\n+       long i422;\n+       long i423;\n+       long i424;\n+       long i425;\n+       long i426;\n+       long i427;\n+       long i428;\n+       long i429;\n+       long i430;\n+       long i431;\n+       long i432;\n+       long i433;\n+       long i434;\n+       long i435;\n+       long i436;\n+       long i437;\n+       long i438;\n+       long i439;\n+       long i440;\n+       long i441;\n+       long i442;\n+       long i443;\n+       long i444;\n+       long i445;\n+       long i446;\n+       long i447;\n+       long i448;\n+       long i449;\n+       long i450;\n+       long i451;\n+       long i452;\n+       long i453;\n+       long i454;\n+       long i455;\n+       long i456;\n+       long i457;\n+       long i458;\n+       long i459;\n+       long i460;\n+       long i461;\n+       long i462;\n+       long i463;\n+       long i464;\n+       long i465;\n+       long i466;\n+       long i467;\n+       long i468;\n+       long i469;\n+       long i470;\n+       long i471;\n+       long i472;\n+       long i473;\n+       long i474;\n+       long i475;\n+       long i476;\n+       long i477;\n+       long i478;\n+       long i479;\n+       long i480;\n+       long i481;\n+       long i482;\n+       long i483;\n+       long i484;\n+       long i485;\n+       long i486;\n+       long i487;\n+       long i488;\n+       long i489;\n+       long i490;\n+       long i491;\n+       long i492;\n+       long i493;\n+       long i494;\n+       long i495;\n+       long i496;\n+       long i497;\n+       long i498;\n+       long i499;\n+       long i500;\n+       long i501;\n+       long i502;\n+       long i503;\n+       long i504;\n+       long i505;\n+       long i506;\n+       long i507;\n+       long i508;\n+       long i509;\n+       long i510;\n+       long i511;\n+       long i512;\n+       long i513;\n+       long i514;\n+       long i515;\n+       long i516;\n+       long i517;\n+       long i518;\n+       long i519;\n+       long i520;\n+       long i521;\n+       long i522;\n+       long i523;\n+       long i524;\n+       long i525;\n+       long i526;\n+       long i527;\n+       long i528;\n+       long i529;\n+       long i530;\n+       long i531;\n+       long i532;\n+       long i533;\n+       long i534;\n+       long i535;\n+       long i536;\n+       long i537;\n+       long i538;\n+       long i539;\n+       long i540;\n+       long i541;\n+       long i542;\n+       long i543;\n+       long i544;\n+       long i545;\n+       long i546;\n+       long i547;\n+       long i548;\n+       long i549;\n+       long i550;\n+       long i551;\n+       long i552;\n+       long i553;\n+       long i554;\n+       long i555;\n+       long i556;\n+       long i557;\n+       long i558;\n+       long i559;\n+       long i560;\n+       long i561;\n+       long i562;\n+       long i563;\n+       long i564;\n+       long i565;\n+       long i566;\n+       long i567;\n+       long i568;\n+       long i569;\n+       long i570;\n+       long i571;\n+       long i572;\n+       long i573;\n+       long i574;\n+       long i575;\n+       long i576;\n+       long i577;\n+       long i578;\n+       long i579;\n+       long i580;\n+       long i581;\n+       long i582;\n+       long i583;\n+       long i584;\n+       long i585;\n+       long i586;\n+       long i587;\n+       long i588;\n+       long i589;\n+       long i590;\n+       long i591;\n+       long i592;\n+       long i593;\n+       long i594;\n+       long i595;\n+       long i596;\n+       long i597;\n+       long i598;\n+       long i599;\n+       long i600;\n+       long i601;\n+       long i602;\n+       long i603;\n+       long i604;\n+       long i605;\n+       long i606;\n+       long i607;\n+       long i608;\n+       long i609;\n+       long i610;\n+       long i611;\n+       long i612;\n+       long i613;\n+       long i614;\n+       long i615;\n+       long i616;\n+       long i617;\n+       long i618;\n+       long i619;\n+       long i620;\n+       long i621;\n+       long i622;\n+       long i623;\n+       long i624;\n+       long i625;\n+       long i626;\n+       long i627;\n+       long i628;\n+       long i629;\n+       long i630;\n+       long i631;\n+       long i632;\n+       long i633;\n+       long i634;\n+       long i635;\n+       long i636;\n+       long i637;\n+       long i638;\n+       long i639;\n+       long i640;\n+       long i641;\n+       long i642;\n+       long i643;\n+       long i644;\n+       long i645;\n+       long i646;\n+       long i647;\n+       long i648;\n+       long i649;\n+       long i650;\n+       long i651;\n+       long i652;\n+       long i653;\n+       long i654;\n+       long i655;\n+       long i656;\n+       long i657;\n+       long i658;\n+       long i659;\n+       long i660;\n+       long i661;\n+       long i662;\n+       long i663;\n+       long i664;\n+       long i665;\n+       long i666;\n+       long i667;\n+       long i668;\n+       long i669;\n+       long i670;\n+       long i671;\n+       long i672;\n+       long i673;\n+       long i674;\n+       long i675;\n+       long i676;\n+       long i677;\n+       long i678;\n+       long i679;\n+       long i680;\n+       long i681;\n+       long i682;\n+       long i683;\n+       long i684;\n+       long i685;\n+       long i686;\n+       long i687;\n+       long i688;\n+       long i689;\n+       long i690;\n+       long i691;\n+       long i692;\n+       long i693;\n+       long i694;\n+       long i695;\n+       long i696;\n+       long i697;\n+       long i698;\n+       long i699;\n+       long i700;\n+       long i701;\n+       long i702;\n+       long i703;\n+       long i704;\n+       long i705;\n+       long i706;\n+       long i707;\n+       long i708;\n+       long i709;\n+       long i710;\n+       long i711;\n+       long i712;\n+       long i713;\n+       long i714;\n+       long i715;\n+       long i716;\n+       long i717;\n+       long i718;\n+       long i719;\n+       long i720;\n+       long i721;\n+       long i722;\n+       long i723;\n+       long i724;\n+       long i725;\n+       long i726;\n+       long i727;\n+       long i728;\n+       long i729;\n+       long i730;\n+       long i731;\n+       long i732;\n+       long i733;\n+       long i734;\n+       long i735;\n+       long i736;\n+       long i737;\n+       long i738;\n+       long i739;\n+       long i740;\n+       long i741;\n+       long i742;\n+       long i743;\n+       long i744;\n+       long i745;\n+       long i746;\n+       long i747;\n+       long i748;\n+       long i749;\n+       long i750;\n+       long i751;\n+       long i752;\n+       long i753;\n+       long i754;\n+       long i755;\n+       long i756;\n+       long i757;\n+       long i758;\n+       long i759;\n+       long i760;\n+       long i761;\n+       long i762;\n+       long i763;\n+       long i764;\n+       long i765;\n+       long i766;\n+       long i767;\n+       long i768;\n+       long i769;\n+       long i770;\n+       long i771;\n+       long i772;\n+       long i773;\n+       long i774;\n+       long i775;\n+       long i776;\n+       long i777;\n+       long i778;\n+       long i779;\n+       long i780;\n+       long i781;\n+       long i782;\n+       long i783;\n+       long i784;\n+       long i785;\n+       long i786;\n+       long i787;\n+       long i788;\n+       long i789;\n+       long i790;\n+       long i791;\n+       long i792;\n+       long i793;\n+       long i794;\n+       long i795;\n+       long i796;\n+       long i797;\n+       long i798;\n+       long i799;\n+       long i800;\n+       long i801;\n+       long i802;\n+       long i803;\n+       long i804;\n+       long i805;\n+       long i806;\n+       long i807;\n+       long i808;\n+       long i809;\n+       long i810;\n+       long i811;\n+       long i812;\n+       long i813;\n+       long i814;\n+       long i815;\n+       long i816;\n+       long i817;\n+       long i818;\n+       long i819;\n+       long i820;\n+       long i821;\n+       long i822;\n+       long i823;\n+       long i824;\n+       long i825;\n+       long i826;\n+       long i827;\n+       long i828;\n+       long i829;\n+       long i830;\n+       long i831;\n+       long i832;\n+       long i833;\n+       long i834;\n+       long i835;\n+       long i836;\n+       long i837;\n+       long i838;\n+       long i839;\n+       long i840;\n+       long i841;\n+       long i842;\n+       long i843;\n+       long i844;\n+       long i845;\n+       long i846;\n+       long i847;\n+       long i848;\n+       long i849;\n+       long i850;\n+       long i851;\n+       long i852;\n+       long i853;\n+       long i854;\n+       long i855;\n+       long i856;\n+       long i857;\n+       long i858;\n+       long i859;\n+       long i860;\n+       long i861;\n+       long i862;\n+       long i863;\n+       long i864;\n+       long i865;\n+       long i866;\n+       long i867;\n+       long i868;\n+       long i869;\n+       long i870;\n+       long i871;\n+       long i872;\n+       long i873;\n+       long i874;\n+       long i875;\n+       long i876;\n+       long i877;\n+       long i878;\n+       long i879;\n+       long i880;\n+       long i881;\n+       long i882;\n+       long i883;\n+       long i884;\n+       long i885;\n+       long i886;\n+       long i887;\n+       long i888;\n+       long i889;\n+       long i890;\n+       long i891;\n+       long i892;\n+       long i893;\n+       long i894;\n+       long i895;\n+       long i896;\n+       long i897;\n+       long i898;\n+       long i899;\n+       long i900;\n+       long i901;\n+       long i902;\n+       long i903;\n+       long i904;\n+       long i905;\n+       long i906;\n+       long i907;\n+       long i908;\n+       long i909;\n+       long i910;\n+       long i911;\n+       long i912;\n+       long i913;\n+       long i914;\n+       long i915;\n+       long i916;\n+       long i917;\n+       long i918;\n+       long i919;\n+       long i920;\n+       long i921;\n+       long i922;\n+       long i923;\n+       long i924;\n+       long i925;\n+       long i926;\n+       long i927;\n+       long i928;\n+       long i929;\n+       long i930;\n+       long i931;\n+       long i932;\n+       long i933;\n+       long i934;\n+       long i935;\n+       long i936;\n+       long i937;\n+       long i938;\n+       long i939;\n+       long i940;\n+       long i941;\n+       long i942;\n+       long i943;\n+       long i944;\n+       long i945;\n+       long i946;\n+       long i947;\n+       long i948;\n+       long i949;\n+       long i950;\n+       long i951;\n+       long i952;\n+       long i953;\n+       long i954;\n+       long i955;\n+       long i956;\n+       long i957;\n+       long i958;\n+       long i959;\n+       long i960;\n+       long i961;\n+       long i962;\n+       long i963;\n+       long i964;\n+       long i965;\n+       long i966;\n+       long i967;\n+       long i968;\n+       long i969;\n+       long i970;\n+       long i971;\n+       long i972;\n+       long i973;\n+       long i974;\n+       long i975;\n+       long i976;\n+       long i977;\n+       long i978;\n+       long i979;\n+       long i980;\n+       long i981;\n+       long i982;\n+       long i983;\n+       long i984;\n+       long i985;\n+       long i986;\n+       long i987;\n+       long i988;\n+       long i989;\n+       long i990;\n+       long i991;\n+       long i992;\n+       long i993;\n+       long i994;\n+       long i995;\n+       long i996;\n+       long i997;\n+       long i998;\n+       long i999;\n+       long i1000;\n+       long i1001;\n+       long i1002;\n+       long i1003;\n+       long i1004;\n+       long i1005;\n+       long i1006;\n+       long i1007;\n+       long i1008;\n+       long i1009;\n+       long i1010;\n+       long i1011;\n+       long i1012;\n+       long i1013;\n+       long i1014;\n+       long i1015;\n+       long i1016;\n+       long i1017;\n+       long i1018;\n+       long i1019;\n+       long i1020;\n+       long i1021;\n+       long i1022;\n+       long i1023;\n+       long i1024;\n+       long i1025;\n+       long i1026;\n+       long i1027;\n+       long i1028;\n+       long i1029;\n+       long i1030;\n+       long i1031;\n+       long i1032;\n+       long i1033;\n+       long i1034;\n+       long i1035;\n+       long i1036;\n+       long i1037;\n+       long i1038;\n+       long i1039;\n+       long i1040;\n+       long i1041;\n+       long i1042;\n+       long i1043;\n+       long i1044;\n+       long i1045;\n+       long i1046;\n+       long i1047;\n+       long i1048;\n+       long i1049;\n+       long i1050;\n+       long i1051;\n+       long i1052;\n+       long i1053;\n+       long i1054;\n+       long i1055;\n+       long i1056;\n+       long i1057;\n+       long i1058;\n+       long i1059;\n+       long i1060;\n+       long i1061;\n+       long i1062;\n+       long i1063;\n+       long i1064;\n+       long i1065;\n+       long i1066;\n+       long i1067;\n+       long i1068;\n+       long i1069;\n+       long i1070;\n+       long i1071;\n+       long i1072;\n+       long i1073;\n+       long i1074;\n+       long i1075;\n+       long i1076;\n+       long i1077;\n+       long i1078;\n+       long i1079;\n+       long i1080;\n+       long i1081;\n+       long i1082;\n+       long i1083;\n+       long i1084;\n+       long i1085;\n+       long i1086;\n+       long i1087;\n+       long i1088;\n+       long i1089;\n+       long i1090;\n+       long i1091;\n+       long i1092;\n+       long i1093;\n+       long i1094;\n+       long i1095;\n+       long i1096;\n+       long i1097;\n+       long i1098;\n+       long i1099;\n+       long i1100;\n+       long i1101;\n+       long i1102;\n+       long i1103;\n+       long i1104;\n+       long i1105;\n+       long i1106;\n+       long i1107;\n+       long i1108;\n+       long i1109;\n+       long i1110;\n+       long i1111;\n+       long i1112;\n+       long i1113;\n+       long i1114;\n+       long i1115;\n+       long i1116;\n+       long i1117;\n+       long i1118;\n+       long i1119;\n+       long i1120;\n+       long i1121;\n+       long i1122;\n+       long i1123;\n+       long i1124;\n+       long i1125;\n+       long i1126;\n+       long i1127;\n+       long i1128;\n+       long i1129;\n+       long i1130;\n+       long i1131;\n+       long i1132;\n+       long i1133;\n+       long i1134;\n+       long i1135;\n+       long i1136;\n+       long i1137;\n+       long i1138;\n+       long i1139;\n+       long i1140;\n+       long i1141;\n+       long i1142;\n+       long i1143;\n+       long i1144;\n+       long i1145;\n+       long i1146;\n+       long i1147;\n+       long i1148;\n+       long i1149;\n+       long i1150;\n+       long i1151;\n+       long i1152;\n+       long i1153;\n+       long i1154;\n+       long i1155;\n+       long i1156;\n+       long i1157;\n+       long i1158;\n+       long i1159;\n+       long i1160;\n+       long i1161;\n+       long i1162;\n+       long i1163;\n+       long i1164;\n+       long i1165;\n+       long i1166;\n+       long i1167;\n+       long i1168;\n+       long i1169;\n+       long i1170;\n+       long i1171;\n+       long i1172;\n+       long i1173;\n+       long i1174;\n+       long i1175;\n+       long i1176;\n+       long i1177;\n+       long i1178;\n+       long i1179;\n+       long i1180;\n+       long i1181;\n+       long i1182;\n+       long i1183;\n+       long i1184;\n+       long i1185;\n+       long i1186;\n+       long i1187;\n+       long i1188;\n+       long i1189;\n+       long i1190;\n+       long i1191;\n+       long i1192;\n+       long i1193;\n+       long i1194;\n+       long i1195;\n+       long i1196;\n+       long i1197;\n+       long i1198;\n+       long i1199;\n+       long i1200;\n+       long i1201;\n+       long i1202;\n+       long i1203;\n+       long i1204;\n+       long i1205;\n+       long i1206;\n+       long i1207;\n+       long i1208;\n+       long i1209;\n+       long i1210;\n+       long i1211;\n+       long i1212;\n+       long i1213;\n+       long i1214;\n+       long i1215;\n+       long i1216;\n+       long i1217;\n+       long i1218;\n+       long i1219;\n+       long i1220;\n+       long i1221;\n+       long i1222;\n+       long i1223;\n+       long i1224;\n+       long i1225;\n+       long i1226;\n+       long i1227;\n+       long i1228;\n+       long i1229;\n+       long i1230;\n+       long i1231;\n+       long i1232;\n+       long i1233;\n+       long i1234;\n+       long i1235;\n+       long i1236;\n+       long i1237;\n+       long i1238;\n+       long i1239;\n+       long i1240;\n+       long i1241;\n+       long i1242;\n+       long i1243;\n+       long i1244;\n+       long i1245;\n+       long i1246;\n+       long i1247;\n+       long i1248;\n+       long i1249;\n+       long i1250;\n+       long i1251;\n+       long i1252;\n+       long i1253;\n+       long i1254;\n+       long i1255;\n+       long i1256;\n+       long i1257;\n+       long i1258;\n+       long i1259;\n+       long i1260;\n+       long i1261;\n+       long i1262;\n+       long i1263;\n+       long i1264;\n+       long i1265;\n+       long i1266;\n+       long i1267;\n+       long i1268;\n+       long i1269;\n+       long i1270;\n+       long i1271;\n+       long i1272;\n+       long i1273;\n+       long i1274;\n+       long i1275;\n+       long i1276;\n+       long i1277;\n+       long i1278;\n+       long i1279;\n+       long i1280;\n+       long i1281;\n+       long i1282;\n+       long i1283;\n+       long i1284;\n+       long i1285;\n+       long i1286;\n+       long i1287;\n+       long i1288;\n+       long i1289;\n+       long i1290;\n+       long i1291;\n+       long i1292;\n+       long i1293;\n+       long i1294;\n+       long i1295;\n+       long i1296;\n+       long i1297;\n+       long i1298;\n+       long i1299;\n+       long i1300;\n+       long i1301;\n+       long i1302;\n+       long i1303;\n+       long i1304;\n+       long i1305;\n+       long i1306;\n+       long i1307;\n+       long i1308;\n+       long i1309;\n+       long i1310;\n+       long i1311;\n+       long i1312;\n+       long i1313;\n+       long i1314;\n+       long i1315;\n+       long i1316;\n+       long i1317;\n+       long i1318;\n+       long i1319;\n+       long i1320;\n+       long i1321;\n+       long i1322;\n+       long i1323;\n+       long i1324;\n+       long i1325;\n+       long i1326;\n+       long i1327;\n+       long i1328;\n+       long i1329;\n+       long i1330;\n+       long i1331;\n+       long i1332;\n+       long i1333;\n+       long i1334;\n+       long i1335;\n+       long i1336;\n+       long i1337;\n+       long i1338;\n+       long i1339;\n+       long i1340;\n+       long i1341;\n+       long i1342;\n+       long i1343;\n+       long i1344;\n+       long i1345;\n+       long i1346;\n+       long i1347;\n+       long i1348;\n+       long i1349;\n+       long i1350;\n+       long i1351;\n+       long i1352;\n+       long i1353;\n+       long i1354;\n+       long i1355;\n+       long i1356;\n+       long i1357;\n+       long i1358;\n+       long i1359;\n+       long i1360;\n+       long i1361;\n+       long i1362;\n+       long i1363;\n+       long i1364;\n+       long i1365;\n+       long i1366;\n+       long i1367;\n+       long i1368;\n+       long i1369;\n+       long i1370;\n+       long i1371;\n+       long i1372;\n+       long i1373;\n+       long i1374;\n+       long i1375;\n+       long i1376;\n+       long i1377;\n+       long i1378;\n+       long i1379;\n+       long i1380;\n+       long i1381;\n+       long i1382;\n+       long i1383;\n+       long i1384;\n+       long i1385;\n+       long i1386;\n+       long i1387;\n+       long i1388;\n+       long i1389;\n+       long i1390;\n+       long i1391;\n+       long i1392;\n+       long i1393;\n+       long i1394;\n+       long i1395;\n+       long i1396;\n+       long i1397;\n+       long i1398;\n+       long i1399;\n+       long i1400;\n+       long i1401;\n+       long i1402;\n+       long i1403;\n+       long i1404;\n+       long i1405;\n+       long i1406;\n+       long i1407;\n+       long i1408;\n+       long i1409;\n+       long i1410;\n+       long i1411;\n+       long i1412;\n+       long i1413;\n+       long i1414;\n+       long i1415;\n+       long i1416;\n+       long i1417;\n+       long i1418;\n+       long i1419;\n+       long i1420;\n+       long i1421;\n+       long i1422;\n+       long i1423;\n+       long i1424;\n+       long i1425;\n+       long i1426;\n+       long i1427;\n+       long i1428;\n+       long i1429;\n+       long i1430;\n+       long i1431;\n+       long i1432;\n+       long i1433;\n+       long i1434;\n+       long i1435;\n+       long i1436;\n+       long i1437;\n+       long i1438;\n+       long i1439;\n+       long i1440;\n+       long i1441;\n+       long i1442;\n+       long i1443;\n+       long i1444;\n+       long i1445;\n+       long i1446;\n+       long i1447;\n+       long i1448;\n+       long i1449;\n+       long i1450;\n+       long i1451;\n+       long i1452;\n+       long i1453;\n+       long i1454;\n+       long i1455;\n+       long i1456;\n+       long i1457;\n+       long i1458;\n+       long i1459;\n+       long i1460;\n+       long i1461;\n+       long i1462;\n+       long i1463;\n+       long i1464;\n+       long i1465;\n+       long i1466;\n+       long i1467;\n+       long i1468;\n+       long i1469;\n+       long i1470;\n+       long i1471;\n+       long i1472;\n+       long i1473;\n+       long i1474;\n+       long i1475;\n+       long i1476;\n+       long i1477;\n+       long i1478;\n+       long i1479;\n+       long i1480;\n+       long i1481;\n+       long i1482;\n+       long i1483;\n+       long i1484;\n+       long i1485;\n+       long i1486;\n+       long i1487;\n+       long i1488;\n+       long i1489;\n+       long i1490;\n+       long i1491;\n+       long i1492;\n+       long i1493;\n+       long i1494;\n+       long i1495;\n+       long i1496;\n+       long i1497;\n+       long i1498;\n+       long i1499;\n+       long i1500;\n+       long i1501;\n+       long i1502;\n+       long i1503;\n+       long i1504;\n+       long i1505;\n+       long i1506;\n+       long i1507;\n+       long i1508;\n+       long i1509;\n+       long i1510;\n+       long i1511;\n+       long i1512;\n+       long i1513;\n+       long i1514;\n+       long i1515;\n+       long i1516;\n+       long i1517;\n+       long i1518;\n+       long i1519;\n+       long i1520;\n+       long i1521;\n+       long i1522;\n+       long i1523;\n+       long i1524;\n+       long i1525;\n+       long i1526;\n+       long i1527;\n+       long i1528;\n+       long i1529;\n+       long i1530;\n+       long i1531;\n+       long i1532;\n+       long i1533;\n+       long i1534;\n+       long i1535;\n+       long i1536;\n+       long i1537;\n+       long i1538;\n+       long i1539;\n+       long i1540;\n+       long i1541;\n+       long i1542;\n+       long i1543;\n+       long i1544;\n+       long i1545;\n+       long i1546;\n+       long i1547;\n+       long i1548;\n+       long i1549;\n+       long i1550;\n+       long i1551;\n+       long i1552;\n+       long i1553;\n+       long i1554;\n+       long i1555;\n+       long i1556;\n+       long i1557;\n+       long i1558;\n+       long i1559;\n+       long i1560;\n+       long i1561;\n+       long i1562;\n+       long i1563;\n+       long i1564;\n+       long i1565;\n+       long i1566;\n+       long i1567;\n+       long i1568;\n+       long i1569;\n+       long i1570;\n+       long i1571;\n+       long i1572;\n+       long i1573;\n+       long i1574;\n+       long i1575;\n+       long i1576;\n+       long i1577;\n+       long i1578;\n+       long i1579;\n+       long i1580;\n+       long i1581;\n+       long i1582;\n+       long i1583;\n+       long i1584;\n+       long i1585;\n+       long i1586;\n+       long i1587;\n+       long i1588;\n+       long i1589;\n+       long i1590;\n+       long i1591;\n+       long i1592;\n+       long i1593;\n+       long i1594;\n+       long i1595;\n+       long i1596;\n+       long i1597;\n+       long i1598;\n+       long i1599;\n+       long i1600;\n+       long i1601;\n+       long i1602;\n+       long i1603;\n+       long i1604;\n+       long i1605;\n+       long i1606;\n+       long i1607;\n+       long i1608;\n+       long i1609;\n+       long i1610;\n+       long i1611;\n+       long i1612;\n+       long i1613;\n+       long i1614;\n+       long i1615;\n+       long i1616;\n+       long i1617;\n+       long i1618;\n+       long i1619;\n+       long i1620;\n+       long i1621;\n+       long i1622;\n+       long i1623;\n+       long i1624;\n+       long i1625;\n+       long i1626;\n+       long i1627;\n+       long i1628;\n+       long i1629;\n+       long i1630;\n+       long i1631;\n+       long i1632;\n+       long i1633;\n+       long i1634;\n+       long i1635;\n+       long i1636;\n+       long i1637;\n+       long i1638;\n+       long i1639;\n+       long i1640;\n+       long i1641;\n+       long i1642;\n+       long i1643;\n+       long i1644;\n+       long i1645;\n+       long i1646;\n+       long i1647;\n+       long i1648;\n+       long i1649;\n+       long i1650;\n+       long i1651;\n+       long i1652;\n+       long i1653;\n+       long i1654;\n+       long i1655;\n+       long i1656;\n+       long i1657;\n+       long i1658;\n+       long i1659;\n+       long i1660;\n+       long i1661;\n+       long i1662;\n+       long i1663;\n+       long i1664;\n+       long i1665;\n+       long i1666;\n+       long i1667;\n+       long i1668;\n+       long i1669;\n+       long i1670;\n+       long i1671;\n+       long i1672;\n+       long i1673;\n+       long i1674;\n+       long i1675;\n+       long i1676;\n+       long i1677;\n+       long i1678;\n+       long i1679;\n+       long i1680;\n+       long i1681;\n+       long i1682;\n+       long i1683;\n+       long i1684;\n+       long i1685;\n+       long i1686;\n+       long i1687;\n+       long i1688;\n+       long i1689;\n+       long i1690;\n+       long i1691;\n+       long i1692;\n+       long i1693;\n+       long i1694;\n+       long i1695;\n+       long i1696;\n+       long i1697;\n+       long i1698;\n+       long i1699;\n+       long i1700;\n+       long i1701;\n+       long i1702;\n+       long i1703;\n+       long i1704;\n+       long i1705;\n+       long i1706;\n+       long i1707;\n+       long i1708;\n+       long i1709;\n+       long i1710;\n+       long i1711;\n+       long i1712;\n+       long i1713;\n+       long i1714;\n+       long i1715;\n+       long i1716;\n+       long i1717;\n+       long i1718;\n+       long i1719;\n+       long i1720;\n+       long i1721;\n+       long i1722;\n+       long i1723;\n+       long i1724;\n+       long i1725;\n+       long i1726;\n+       long i1727;\n+       long i1728;\n+       long i1729;\n+       long i1730;\n+       long i1731;\n+       long i1732;\n+       long i1733;\n+       long i1734;\n+       long i1735;\n+       long i1736;\n+       long i1737;\n+       long i1738;\n+       long i1739;\n+       long i1740;\n+       long i1741;\n+       long i1742;\n+       long i1743;\n+       long i1744;\n+       long i1745;\n+       long i1746;\n+       long i1747;\n+       long i1748;\n+       long i1749;\n+       long i1750;\n+       long i1751;\n+       long i1752;\n+       long i1753;\n+       long i1754;\n+       long i1755;\n+       long i1756;\n+       long i1757;\n+       long i1758;\n+       long i1759;\n+       long i1760;\n+       long i1761;\n+       long i1762;\n+       long i1763;\n+       long i1764;\n+       long i1765;\n+       long i1766;\n+       long i1767;\n+       long i1768;\n+       long i1769;\n+       long i1770;\n+       long i1771;\n+       long i1772;\n+       long i1773;\n+       long i1774;\n+       long i1775;\n+       long i1776;\n+       long i1777;\n+       long i1778;\n+       long i1779;\n+       long i1780;\n+       long i1781;\n+       long i1782;\n+       long i1783;\n+       long i1784;\n+       long i1785;\n+       long i1786;\n+       long i1787;\n+       long i1788;\n+       long i1789;\n+       long i1790;\n+       long i1791;\n+       long i1792;\n+       long i1793;\n+       long i1794;\n+       long i1795;\n+       long i1796;\n+       long i1797;\n+       long i1798;\n+       long i1799;\n+       long i1800;\n+       long i1801;\n+       long i1802;\n+       long i1803;\n+       long i1804;\n+       long i1805;\n+       long i1806;\n+       long i1807;\n+       long i1808;\n+       long i1809;\n+       long i1810;\n+       long i1811;\n+       long i1812;\n+       long i1813;\n+       long i1814;\n+       long i1815;\n+       long i1816;\n+       long i1817;\n+       long i1818;\n+       long i1819;\n+       long i1820;\n+       long i1821;\n+       long i1822;\n+       long i1823;\n+       long i1824;\n+       long i1825;\n+       long i1826;\n+       long i1827;\n+       long i1828;\n+       long i1829;\n+       long i1830;\n+       long i1831;\n+       long i1832;\n+       long i1833;\n+       long i1834;\n+       long i1835;\n+       long i1836;\n+       long i1837;\n+       long i1838;\n+       long i1839;\n+       long i1840;\n+       long i1841;\n+       long i1842;\n+       long i1843;\n+       long i1844;\n+       long i1845;\n+       long i1846;\n+       long i1847;\n+       long i1848;\n+       long i1849;\n+       long i1850;\n+       long i1851;\n+       long i1852;\n+       long i1853;\n+       long i1854;\n+       long i1855;\n+       long i1856;\n+       long i1857;\n+       long i1858;\n+       long i1859;\n+       long i1860;\n+       long i1861;\n+       long i1862;\n+       long i1863;\n+       long i1864;\n+       long i1865;\n+       long i1866;\n+       long i1867;\n+       long i1868;\n+       long i1869;\n+       long i1870;\n+       long i1871;\n+       long i1872;\n+       long i1873;\n+       long i1874;\n+       long i1875;\n+       long i1876;\n+       long i1877;\n+       long i1878;\n+       long i1879;\n+       long i1880;\n+       long i1881;\n+       long i1882;\n+       long i1883;\n+       long i1884;\n+       long i1885;\n+       long i1886;\n+       long i1887;\n+       long i1888;\n+       long i1889;\n+       long i1890;\n+       long i1891;\n+       long i1892;\n+       long i1893;\n+       long i1894;\n+       long i1895;\n+       long i1896;\n+       long i1897;\n+       long i1898;\n+       long i1899;\n+       long i1900;\n+       long i1901;\n+       long i1902;\n+       long i1903;\n+       long i1904;\n+       long i1905;\n+       long i1906;\n+       long i1907;\n+       long i1908;\n+       long i1909;\n+       long i1910;\n+       long i1911;\n+       long i1912;\n+       long i1913;\n+       long i1914;\n+       long i1915;\n+       long i1916;\n+       long i1917;\n+       long i1918;\n+       long i1919;\n+       long i1920;\n+       long i1921;\n+       long i1922;\n+       long i1923;\n+       long i1924;\n+       long i1925;\n+       long i1926;\n+       long i1927;\n+       long i1928;\n+       long i1929;\n+       long i1930;\n+       long i1931;\n+       long i1932;\n+       long i1933;\n+       long i1934;\n+       long i1935;\n+       long i1936;\n+       long i1937;\n+       long i1938;\n+       long i1939;\n+       long i1940;\n+       long i1941;\n+       long i1942;\n+       long i1943;\n+       long i1944;\n+       long i1945;\n+       long i1946;\n+       long i1947;\n+       long i1948;\n+       long i1949;\n+       long i1950;\n+       long i1951;\n+       long i1952;\n+       long i1953;\n+       long i1954;\n+       long i1955;\n+       long i1956;\n+       long i1957;\n+       long i1958;\n+       long i1959;\n+       long i1960;\n+       long i1961;\n+       long i1962;\n+       long i1963;\n+       long i1964;\n+       long i1965;\n+       long i1966;\n+       long i1967;\n+       long i1968;\n+       long i1969;\n+       long i1970;\n+       long i1971;\n+       long i1972;\n+       long i1973;\n+       long i1974;\n+       long i1975;\n+       long i1976;\n+       long i1977;\n+       long i1978;\n+       long i1979;\n+       long i1980;\n+       long i1981;\n+       long i1982;\n+       long i1983;\n+       long i1984;\n+       long i1985;\n+       long i1986;\n+       long i1987;\n+       long i1988;\n+       long i1989;\n+       long i1990;\n+       long i1991;\n+       long i1992;\n+       long i1993;\n+       long i1994;\n+       long i1995;\n+       long i1996;\n+       long i1997;\n+       long i1998;\n+       long i1999;\n+       long i2000;\n+       long i2001;\n+       long i2002;\n+       long i2003;\n+       long i2004;\n+       long i2005;\n+       long i2006;\n+       long i2007;\n+       long i2008;\n+       long i2009;\n+       long i2010;\n+       long i2011;\n+       long i2012;\n+       long i2013;\n+       long i2014;\n+       long i2015;\n+       long i2016;\n+       long i2017;\n+       long i2018;\n+       long i2019;\n+       long i2020;\n+       long i2021;\n+       long i2022;\n+       long i2023;\n+       long i2024;\n+       long i2025;\n+       long i2026;\n+       long i2027;\n+       long i2028;\n+       long i2029;\n+       long i2030;\n+       long i2031;\n+       long i2032;\n+       long i2033;\n+       long i2034;\n+       long i2035;\n+       long i2036;\n+       long i2037;\n+       long i2038;\n+       long i2039;\n+       long i2040;\n+       long i2041;\n+       long i2042;\n+       long i2043;\n+       long i2044;\n+       long i2045;\n+    }\n+    static class Class65536 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+       long i126;\n+       long i127;\n+       long i128;\n+       long i129;\n+       long i130;\n+       long i131;\n+       long i132;\n+       long i133;\n+       long i134;\n+       long i135;\n+       long i136;\n+       long i137;\n+       long i138;\n+       long i139;\n+       long i140;\n+       long i141;\n+       long i142;\n+       long i143;\n+       long i144;\n+       long i145;\n+       long i146;\n+       long i147;\n+       long i148;\n+       long i149;\n+       long i150;\n+       long i151;\n+       long i152;\n+       long i153;\n+       long i154;\n+       long i155;\n+       long i156;\n+       long i157;\n+       long i158;\n+       long i159;\n+       long i160;\n+       long i161;\n+       long i162;\n+       long i163;\n+       long i164;\n+       long i165;\n+       long i166;\n+       long i167;\n+       long i168;\n+       long i169;\n+       long i170;\n+       long i171;\n+       long i172;\n+       long i173;\n+       long i174;\n+       long i175;\n+       long i176;\n+       long i177;\n+       long i178;\n+       long i179;\n+       long i180;\n+       long i181;\n+       long i182;\n+       long i183;\n+       long i184;\n+       long i185;\n+       long i186;\n+       long i187;\n+       long i188;\n+       long i189;\n+       long i190;\n+       long i191;\n+       long i192;\n+       long i193;\n+       long i194;\n+       long i195;\n+       long i196;\n+       long i197;\n+       long i198;\n+       long i199;\n+       long i200;\n+       long i201;\n+       long i202;\n+       long i203;\n+       long i204;\n+       long i205;\n+       long i206;\n+       long i207;\n+       long i208;\n+       long i209;\n+       long i210;\n+       long i211;\n+       long i212;\n+       long i213;\n+       long i214;\n+       long i215;\n+       long i216;\n+       long i217;\n+       long i218;\n+       long i219;\n+       long i220;\n+       long i221;\n+       long i222;\n+       long i223;\n+       long i224;\n+       long i225;\n+       long i226;\n+       long i227;\n+       long i228;\n+       long i229;\n+       long i230;\n+       long i231;\n+       long i232;\n+       long i233;\n+       long i234;\n+       long i235;\n+       long i236;\n+       long i237;\n+       long i238;\n+       long i239;\n+       long i240;\n+       long i241;\n+       long i242;\n+       long i243;\n+       long i244;\n+       long i245;\n+       long i246;\n+       long i247;\n+       long i248;\n+       long i249;\n+       long i250;\n+       long i251;\n+       long i252;\n+       long i253;\n+       long i254;\n+       long i255;\n+       long i256;\n+       long i257;\n+       long i258;\n+       long i259;\n+       long i260;\n+       long i261;\n+       long i262;\n+       long i263;\n+       long i264;\n+       long i265;\n+       long i266;\n+       long i267;\n+       long i268;\n+       long i269;\n+       long i270;\n+       long i271;\n+       long i272;\n+       long i273;\n+       long i274;\n+       long i275;\n+       long i276;\n+       long i277;\n+       long i278;\n+       long i279;\n+       long i280;\n+       long i281;\n+       long i282;\n+       long i283;\n+       long i284;\n+       long i285;\n+       long i286;\n+       long i287;\n+       long i288;\n+       long i289;\n+       long i290;\n+       long i291;\n+       long i292;\n+       long i293;\n+       long i294;\n+       long i295;\n+       long i296;\n+       long i297;\n+       long i298;\n+       long i299;\n+       long i300;\n+       long i301;\n+       long i302;\n+       long i303;\n+       long i304;\n+       long i305;\n+       long i306;\n+       long i307;\n+       long i308;\n+       long i309;\n+       long i310;\n+       long i311;\n+       long i312;\n+       long i313;\n+       long i314;\n+       long i315;\n+       long i316;\n+       long i317;\n+       long i318;\n+       long i319;\n+       long i320;\n+       long i321;\n+       long i322;\n+       long i323;\n+       long i324;\n+       long i325;\n+       long i326;\n+       long i327;\n+       long i328;\n+       long i329;\n+       long i330;\n+       long i331;\n+       long i332;\n+       long i333;\n+       long i334;\n+       long i335;\n+       long i336;\n+       long i337;\n+       long i338;\n+       long i339;\n+       long i340;\n+       long i341;\n+       long i342;\n+       long i343;\n+       long i344;\n+       long i345;\n+       long i346;\n+       long i347;\n+       long i348;\n+       long i349;\n+       long i350;\n+       long i351;\n+       long i352;\n+       long i353;\n+       long i354;\n+       long i355;\n+       long i356;\n+       long i357;\n+       long i358;\n+       long i359;\n+       long i360;\n+       long i361;\n+       long i362;\n+       long i363;\n+       long i364;\n+       long i365;\n+       long i366;\n+       long i367;\n+       long i368;\n+       long i369;\n+       long i370;\n+       long i371;\n+       long i372;\n+       long i373;\n+       long i374;\n+       long i375;\n+       long i376;\n+       long i377;\n+       long i378;\n+       long i379;\n+       long i380;\n+       long i381;\n+       long i382;\n+       long i383;\n+       long i384;\n+       long i385;\n+       long i386;\n+       long i387;\n+       long i388;\n+       long i389;\n+       long i390;\n+       long i391;\n+       long i392;\n+       long i393;\n+       long i394;\n+       long i395;\n+       long i396;\n+       long i397;\n+       long i398;\n+       long i399;\n+       long i400;\n+       long i401;\n+       long i402;\n+       long i403;\n+       long i404;\n+       long i405;\n+       long i406;\n+       long i407;\n+       long i408;\n+       long i409;\n+       long i410;\n+       long i411;\n+       long i412;\n+       long i413;\n+       long i414;\n+       long i415;\n+       long i416;\n+       long i417;\n+       long i418;\n+       long i419;\n+       long i420;\n+       long i421;\n+       long i422;\n+       long i423;\n+       long i424;\n+       long i425;\n+       long i426;\n+       long i427;\n+       long i428;\n+       long i429;\n+       long i430;\n+       long i431;\n+       long i432;\n+       long i433;\n+       long i434;\n+       long i435;\n+       long i436;\n+       long i437;\n+       long i438;\n+       long i439;\n+       long i440;\n+       long i441;\n+       long i442;\n+       long i443;\n+       long i444;\n+       long i445;\n+       long i446;\n+       long i447;\n+       long i448;\n+       long i449;\n+       long i450;\n+       long i451;\n+       long i452;\n+       long i453;\n+       long i454;\n+       long i455;\n+       long i456;\n+       long i457;\n+       long i458;\n+       long i459;\n+       long i460;\n+       long i461;\n+       long i462;\n+       long i463;\n+       long i464;\n+       long i465;\n+       long i466;\n+       long i467;\n+       long i468;\n+       long i469;\n+       long i470;\n+       long i471;\n+       long i472;\n+       long i473;\n+       long i474;\n+       long i475;\n+       long i476;\n+       long i477;\n+       long i478;\n+       long i479;\n+       long i480;\n+       long i481;\n+       long i482;\n+       long i483;\n+       long i484;\n+       long i485;\n+       long i486;\n+       long i487;\n+       long i488;\n+       long i489;\n+       long i490;\n+       long i491;\n+       long i492;\n+       long i493;\n+       long i494;\n+       long i495;\n+       long i496;\n+       long i497;\n+       long i498;\n+       long i499;\n+       long i500;\n+       long i501;\n+       long i502;\n+       long i503;\n+       long i504;\n+       long i505;\n+       long i506;\n+       long i507;\n+       long i508;\n+       long i509;\n+       long i510;\n+       long i511;\n+       long i512;\n+       long i513;\n+       long i514;\n+       long i515;\n+       long i516;\n+       long i517;\n+       long i518;\n+       long i519;\n+       long i520;\n+       long i521;\n+       long i522;\n+       long i523;\n+       long i524;\n+       long i525;\n+       long i526;\n+       long i527;\n+       long i528;\n+       long i529;\n+       long i530;\n+       long i531;\n+       long i532;\n+       long i533;\n+       long i534;\n+       long i535;\n+       long i536;\n+       long i537;\n+       long i538;\n+       long i539;\n+       long i540;\n+       long i541;\n+       long i542;\n+       long i543;\n+       long i544;\n+       long i545;\n+       long i546;\n+       long i547;\n+       long i548;\n+       long i549;\n+       long i550;\n+       long i551;\n+       long i552;\n+       long i553;\n+       long i554;\n+       long i555;\n+       long i556;\n+       long i557;\n+       long i558;\n+       long i559;\n+       long i560;\n+       long i561;\n+       long i562;\n+       long i563;\n+       long i564;\n+       long i565;\n+       long i566;\n+       long i567;\n+       long i568;\n+       long i569;\n+       long i570;\n+       long i571;\n+       long i572;\n+       long i573;\n+       long i574;\n+       long i575;\n+       long i576;\n+       long i577;\n+       long i578;\n+       long i579;\n+       long i580;\n+       long i581;\n+       long i582;\n+       long i583;\n+       long i584;\n+       long i585;\n+       long i586;\n+       long i587;\n+       long i588;\n+       long i589;\n+       long i590;\n+       long i591;\n+       long i592;\n+       long i593;\n+       long i594;\n+       long i595;\n+       long i596;\n+       long i597;\n+       long i598;\n+       long i599;\n+       long i600;\n+       long i601;\n+       long i602;\n+       long i603;\n+       long i604;\n+       long i605;\n+       long i606;\n+       long i607;\n+       long i608;\n+       long i609;\n+       long i610;\n+       long i611;\n+       long i612;\n+       long i613;\n+       long i614;\n+       long i615;\n+       long i616;\n+       long i617;\n+       long i618;\n+       long i619;\n+       long i620;\n+       long i621;\n+       long i622;\n+       long i623;\n+       long i624;\n+       long i625;\n+       long i626;\n+       long i627;\n+       long i628;\n+       long i629;\n+       long i630;\n+       long i631;\n+       long i632;\n+       long i633;\n+       long i634;\n+       long i635;\n+       long i636;\n+       long i637;\n+       long i638;\n+       long i639;\n+       long i640;\n+       long i641;\n+       long i642;\n+       long i643;\n+       long i644;\n+       long i645;\n+       long i646;\n+       long i647;\n+       long i648;\n+       long i649;\n+       long i650;\n+       long i651;\n+       long i652;\n+       long i653;\n+       long i654;\n+       long i655;\n+       long i656;\n+       long i657;\n+       long i658;\n+       long i659;\n+       long i660;\n+       long i661;\n+       long i662;\n+       long i663;\n+       long i664;\n+       long i665;\n+       long i666;\n+       long i667;\n+       long i668;\n+       long i669;\n+       long i670;\n+       long i671;\n+       long i672;\n+       long i673;\n+       long i674;\n+       long i675;\n+       long i676;\n+       long i677;\n+       long i678;\n+       long i679;\n+       long i680;\n+       long i681;\n+       long i682;\n+       long i683;\n+       long i684;\n+       long i685;\n+       long i686;\n+       long i687;\n+       long i688;\n+       long i689;\n+       long i690;\n+       long i691;\n+       long i692;\n+       long i693;\n+       long i694;\n+       long i695;\n+       long i696;\n+       long i697;\n+       long i698;\n+       long i699;\n+       long i700;\n+       long i701;\n+       long i702;\n+       long i703;\n+       long i704;\n+       long i705;\n+       long i706;\n+       long i707;\n+       long i708;\n+       long i709;\n+       long i710;\n+       long i711;\n+       long i712;\n+       long i713;\n+       long i714;\n+       long i715;\n+       long i716;\n+       long i717;\n+       long i718;\n+       long i719;\n+       long i720;\n+       long i721;\n+       long i722;\n+       long i723;\n+       long i724;\n+       long i725;\n+       long i726;\n+       long i727;\n+       long i728;\n+       long i729;\n+       long i730;\n+       long i731;\n+       long i732;\n+       long i733;\n+       long i734;\n+       long i735;\n+       long i736;\n+       long i737;\n+       long i738;\n+       long i739;\n+       long i740;\n+       long i741;\n+       long i742;\n+       long i743;\n+       long i744;\n+       long i745;\n+       long i746;\n+       long i747;\n+       long i748;\n+       long i749;\n+       long i750;\n+       long i751;\n+       long i752;\n+       long i753;\n+       long i754;\n+       long i755;\n+       long i756;\n+       long i757;\n+       long i758;\n+       long i759;\n+       long i760;\n+       long i761;\n+       long i762;\n+       long i763;\n+       long i764;\n+       long i765;\n+       long i766;\n+       long i767;\n+       long i768;\n+       long i769;\n+       long i770;\n+       long i771;\n+       long i772;\n+       long i773;\n+       long i774;\n+       long i775;\n+       long i776;\n+       long i777;\n+       long i778;\n+       long i779;\n+       long i780;\n+       long i781;\n+       long i782;\n+       long i783;\n+       long i784;\n+       long i785;\n+       long i786;\n+       long i787;\n+       long i788;\n+       long i789;\n+       long i790;\n+       long i791;\n+       long i792;\n+       long i793;\n+       long i794;\n+       long i795;\n+       long i796;\n+       long i797;\n+       long i798;\n+       long i799;\n+       long i800;\n+       long i801;\n+       long i802;\n+       long i803;\n+       long i804;\n+       long i805;\n+       long i806;\n+       long i807;\n+       long i808;\n+       long i809;\n+       long i810;\n+       long i811;\n+       long i812;\n+       long i813;\n+       long i814;\n+       long i815;\n+       long i816;\n+       long i817;\n+       long i818;\n+       long i819;\n+       long i820;\n+       long i821;\n+       long i822;\n+       long i823;\n+       long i824;\n+       long i825;\n+       long i826;\n+       long i827;\n+       long i828;\n+       long i829;\n+       long i830;\n+       long i831;\n+       long i832;\n+       long i833;\n+       long i834;\n+       long i835;\n+       long i836;\n+       long i837;\n+       long i838;\n+       long i839;\n+       long i840;\n+       long i841;\n+       long i842;\n+       long i843;\n+       long i844;\n+       long i845;\n+       long i846;\n+       long i847;\n+       long i848;\n+       long i849;\n+       long i850;\n+       long i851;\n+       long i852;\n+       long i853;\n+       long i854;\n+       long i855;\n+       long i856;\n+       long i857;\n+       long i858;\n+       long i859;\n+       long i860;\n+       long i861;\n+       long i862;\n+       long i863;\n+       long i864;\n+       long i865;\n+       long i866;\n+       long i867;\n+       long i868;\n+       long i869;\n+       long i870;\n+       long i871;\n+       long i872;\n+       long i873;\n+       long i874;\n+       long i875;\n+       long i876;\n+       long i877;\n+       long i878;\n+       long i879;\n+       long i880;\n+       long i881;\n+       long i882;\n+       long i883;\n+       long i884;\n+       long i885;\n+       long i886;\n+       long i887;\n+       long i888;\n+       long i889;\n+       long i890;\n+       long i891;\n+       long i892;\n+       long i893;\n+       long i894;\n+       long i895;\n+       long i896;\n+       long i897;\n+       long i898;\n+       long i899;\n+       long i900;\n+       long i901;\n+       long i902;\n+       long i903;\n+       long i904;\n+       long i905;\n+       long i906;\n+       long i907;\n+       long i908;\n+       long i909;\n+       long i910;\n+       long i911;\n+       long i912;\n+       long i913;\n+       long i914;\n+       long i915;\n+       long i916;\n+       long i917;\n+       long i918;\n+       long i919;\n+       long i920;\n+       long i921;\n+       long i922;\n+       long i923;\n+       long i924;\n+       long i925;\n+       long i926;\n+       long i927;\n+       long i928;\n+       long i929;\n+       long i930;\n+       long i931;\n+       long i932;\n+       long i933;\n+       long i934;\n+       long i935;\n+       long i936;\n+       long i937;\n+       long i938;\n+       long i939;\n+       long i940;\n+       long i941;\n+       long i942;\n+       long i943;\n+       long i944;\n+       long i945;\n+       long i946;\n+       long i947;\n+       long i948;\n+       long i949;\n+       long i950;\n+       long i951;\n+       long i952;\n+       long i953;\n+       long i954;\n+       long i955;\n+       long i956;\n+       long i957;\n+       long i958;\n+       long i959;\n+       long i960;\n+       long i961;\n+       long i962;\n+       long i963;\n+       long i964;\n+       long i965;\n+       long i966;\n+       long i967;\n+       long i968;\n+       long i969;\n+       long i970;\n+       long i971;\n+       long i972;\n+       long i973;\n+       long i974;\n+       long i975;\n+       long i976;\n+       long i977;\n+       long i978;\n+       long i979;\n+       long i980;\n+       long i981;\n+       long i982;\n+       long i983;\n+       long i984;\n+       long i985;\n+       long i986;\n+       long i987;\n+       long i988;\n+       long i989;\n+       long i990;\n+       long i991;\n+       long i992;\n+       long i993;\n+       long i994;\n+       long i995;\n+       long i996;\n+       long i997;\n+       long i998;\n+       long i999;\n+       long i1000;\n+       long i1001;\n+       long i1002;\n+       long i1003;\n+       long i1004;\n+       long i1005;\n+       long i1006;\n+       long i1007;\n+       long i1008;\n+       long i1009;\n+       long i1010;\n+       long i1011;\n+       long i1012;\n+       long i1013;\n+       long i1014;\n+       long i1015;\n+       long i1016;\n+       long i1017;\n+       long i1018;\n+       long i1019;\n+       long i1020;\n+       long i1021;\n+       long i1022;\n+       long i1023;\n+       long i1024;\n+       long i1025;\n+       long i1026;\n+       long i1027;\n+       long i1028;\n+       long i1029;\n+       long i1030;\n+       long i1031;\n+       long i1032;\n+       long i1033;\n+       long i1034;\n+       long i1035;\n+       long i1036;\n+       long i1037;\n+       long i1038;\n+       long i1039;\n+       long i1040;\n+       long i1041;\n+       long i1042;\n+       long i1043;\n+       long i1044;\n+       long i1045;\n+       long i1046;\n+       long i1047;\n+       long i1048;\n+       long i1049;\n+       long i1050;\n+       long i1051;\n+       long i1052;\n+       long i1053;\n+       long i1054;\n+       long i1055;\n+       long i1056;\n+       long i1057;\n+       long i1058;\n+       long i1059;\n+       long i1060;\n+       long i1061;\n+       long i1062;\n+       long i1063;\n+       long i1064;\n+       long i1065;\n+       long i1066;\n+       long i1067;\n+       long i1068;\n+       long i1069;\n+       long i1070;\n+       long i1071;\n+       long i1072;\n+       long i1073;\n+       long i1074;\n+       long i1075;\n+       long i1076;\n+       long i1077;\n+       long i1078;\n+       long i1079;\n+       long i1080;\n+       long i1081;\n+       long i1082;\n+       long i1083;\n+       long i1084;\n+       long i1085;\n+       long i1086;\n+       long i1087;\n+       long i1088;\n+       long i1089;\n+       long i1090;\n+       long i1091;\n+       long i1092;\n+       long i1093;\n+       long i1094;\n+       long i1095;\n+       long i1096;\n+       long i1097;\n+       long i1098;\n+       long i1099;\n+       long i1100;\n+       long i1101;\n+       long i1102;\n+       long i1103;\n+       long i1104;\n+       long i1105;\n+       long i1106;\n+       long i1107;\n+       long i1108;\n+       long i1109;\n+       long i1110;\n+       long i1111;\n+       long i1112;\n+       long i1113;\n+       long i1114;\n+       long i1115;\n+       long i1116;\n+       long i1117;\n+       long i1118;\n+       long i1119;\n+       long i1120;\n+       long i1121;\n+       long i1122;\n+       long i1123;\n+       long i1124;\n+       long i1125;\n+       long i1126;\n+       long i1127;\n+       long i1128;\n+       long i1129;\n+       long i1130;\n+       long i1131;\n+       long i1132;\n+       long i1133;\n+       long i1134;\n+       long i1135;\n+       long i1136;\n+       long i1137;\n+       long i1138;\n+       long i1139;\n+       long i1140;\n+       long i1141;\n+       long i1142;\n+       long i1143;\n+       long i1144;\n+       long i1145;\n+       long i1146;\n+       long i1147;\n+       long i1148;\n+       long i1149;\n+       long i1150;\n+       long i1151;\n+       long i1152;\n+       long i1153;\n+       long i1154;\n+       long i1155;\n+       long i1156;\n+       long i1157;\n+       long i1158;\n+       long i1159;\n+       long i1160;\n+       long i1161;\n+       long i1162;\n+       long i1163;\n+       long i1164;\n+       long i1165;\n+       long i1166;\n+       long i1167;\n+       long i1168;\n+       long i1169;\n+       long i1170;\n+       long i1171;\n+       long i1172;\n+       long i1173;\n+       long i1174;\n+       long i1175;\n+       long i1176;\n+       long i1177;\n+       long i1178;\n+       long i1179;\n+       long i1180;\n+       long i1181;\n+       long i1182;\n+       long i1183;\n+       long i1184;\n+       long i1185;\n+       long i1186;\n+       long i1187;\n+       long i1188;\n+       long i1189;\n+       long i1190;\n+       long i1191;\n+       long i1192;\n+       long i1193;\n+       long i1194;\n+       long i1195;\n+       long i1196;\n+       long i1197;\n+       long i1198;\n+       long i1199;\n+       long i1200;\n+       long i1201;\n+       long i1202;\n+       long i1203;\n+       long i1204;\n+       long i1205;\n+       long i1206;\n+       long i1207;\n+       long i1208;\n+       long i1209;\n+       long i1210;\n+       long i1211;\n+       long i1212;\n+       long i1213;\n+       long i1214;\n+       long i1215;\n+       long i1216;\n+       long i1217;\n+       long i1218;\n+       long i1219;\n+       long i1220;\n+       long i1221;\n+       long i1222;\n+       long i1223;\n+       long i1224;\n+       long i1225;\n+       long i1226;\n+       long i1227;\n+       long i1228;\n+       long i1229;\n+       long i1230;\n+       long i1231;\n+       long i1232;\n+       long i1233;\n+       long i1234;\n+       long i1235;\n+       long i1236;\n+       long i1237;\n+       long i1238;\n+       long i1239;\n+       long i1240;\n+       long i1241;\n+       long i1242;\n+       long i1243;\n+       long i1244;\n+       long i1245;\n+       long i1246;\n+       long i1247;\n+       long i1248;\n+       long i1249;\n+       long i1250;\n+       long i1251;\n+       long i1252;\n+       long i1253;\n+       long i1254;\n+       long i1255;\n+       long i1256;\n+       long i1257;\n+       long i1258;\n+       long i1259;\n+       long i1260;\n+       long i1261;\n+       long i1262;\n+       long i1263;\n+       long i1264;\n+       long i1265;\n+       long i1266;\n+       long i1267;\n+       long i1268;\n+       long i1269;\n+       long i1270;\n+       long i1271;\n+       long i1272;\n+       long i1273;\n+       long i1274;\n+       long i1275;\n+       long i1276;\n+       long i1277;\n+       long i1278;\n+       long i1279;\n+       long i1280;\n+       long i1281;\n+       long i1282;\n+       long i1283;\n+       long i1284;\n+       long i1285;\n+       long i1286;\n+       long i1287;\n+       long i1288;\n+       long i1289;\n+       long i1290;\n+       long i1291;\n+       long i1292;\n+       long i1293;\n+       long i1294;\n+       long i1295;\n+       long i1296;\n+       long i1297;\n+       long i1298;\n+       long i1299;\n+       long i1300;\n+       long i1301;\n+       long i1302;\n+       long i1303;\n+       long i1304;\n+       long i1305;\n+       long i1306;\n+       long i1307;\n+       long i1308;\n+       long i1309;\n+       long i1310;\n+       long i1311;\n+       long i1312;\n+       long i1313;\n+       long i1314;\n+       long i1315;\n+       long i1316;\n+       long i1317;\n+       long i1318;\n+       long i1319;\n+       long i1320;\n+       long i1321;\n+       long i1322;\n+       long i1323;\n+       long i1324;\n+       long i1325;\n+       long i1326;\n+       long i1327;\n+       long i1328;\n+       long i1329;\n+       long i1330;\n+       long i1331;\n+       long i1332;\n+       long i1333;\n+       long i1334;\n+       long i1335;\n+       long i1336;\n+       long i1337;\n+       long i1338;\n+       long i1339;\n+       long i1340;\n+       long i1341;\n+       long i1342;\n+       long i1343;\n+       long i1344;\n+       long i1345;\n+       long i1346;\n+       long i1347;\n+       long i1348;\n+       long i1349;\n+       long i1350;\n+       long i1351;\n+       long i1352;\n+       long i1353;\n+       long i1354;\n+       long i1355;\n+       long i1356;\n+       long i1357;\n+       long i1358;\n+       long i1359;\n+       long i1360;\n+       long i1361;\n+       long i1362;\n+       long i1363;\n+       long i1364;\n+       long i1365;\n+       long i1366;\n+       long i1367;\n+       long i1368;\n+       long i1369;\n+       long i1370;\n+       long i1371;\n+       long i1372;\n+       long i1373;\n+       long i1374;\n+       long i1375;\n+       long i1376;\n+       long i1377;\n+       long i1378;\n+       long i1379;\n+       long i1380;\n+       long i1381;\n+       long i1382;\n+       long i1383;\n+       long i1384;\n+       long i1385;\n+       long i1386;\n+       long i1387;\n+       long i1388;\n+       long i1389;\n+       long i1390;\n+       long i1391;\n+       long i1392;\n+       long i1393;\n+       long i1394;\n+       long i1395;\n+       long i1396;\n+       long i1397;\n+       long i1398;\n+       long i1399;\n+       long i1400;\n+       long i1401;\n+       long i1402;\n+       long i1403;\n+       long i1404;\n+       long i1405;\n+       long i1406;\n+       long i1407;\n+       long i1408;\n+       long i1409;\n+       long i1410;\n+       long i1411;\n+       long i1412;\n+       long i1413;\n+       long i1414;\n+       long i1415;\n+       long i1416;\n+       long i1417;\n+       long i1418;\n+       long i1419;\n+       long i1420;\n+       long i1421;\n+       long i1422;\n+       long i1423;\n+       long i1424;\n+       long i1425;\n+       long i1426;\n+       long i1427;\n+       long i1428;\n+       long i1429;\n+       long i1430;\n+       long i1431;\n+       long i1432;\n+       long i1433;\n+       long i1434;\n+       long i1435;\n+       long i1436;\n+       long i1437;\n+       long i1438;\n+       long i1439;\n+       long i1440;\n+       long i1441;\n+       long i1442;\n+       long i1443;\n+       long i1444;\n+       long i1445;\n+       long i1446;\n+       long i1447;\n+       long i1448;\n+       long i1449;\n+       long i1450;\n+       long i1451;\n+       long i1452;\n+       long i1453;\n+       long i1454;\n+       long i1455;\n+       long i1456;\n+       long i1457;\n+       long i1458;\n+       long i1459;\n+       long i1460;\n+       long i1461;\n+       long i1462;\n+       long i1463;\n+       long i1464;\n+       long i1465;\n+       long i1466;\n+       long i1467;\n+       long i1468;\n+       long i1469;\n+       long i1470;\n+       long i1471;\n+       long i1472;\n+       long i1473;\n+       long i1474;\n+       long i1475;\n+       long i1476;\n+       long i1477;\n+       long i1478;\n+       long i1479;\n+       long i1480;\n+       long i1481;\n+       long i1482;\n+       long i1483;\n+       long i1484;\n+       long i1485;\n+       long i1486;\n+       long i1487;\n+       long i1488;\n+       long i1489;\n+       long i1490;\n+       long i1491;\n+       long i1492;\n+       long i1493;\n+       long i1494;\n+       long i1495;\n+       long i1496;\n+       long i1497;\n+       long i1498;\n+       long i1499;\n+       long i1500;\n+       long i1501;\n+       long i1502;\n+       long i1503;\n+       long i1504;\n+       long i1505;\n+       long i1506;\n+       long i1507;\n+       long i1508;\n+       long i1509;\n+       long i1510;\n+       long i1511;\n+       long i1512;\n+       long i1513;\n+       long i1514;\n+       long i1515;\n+       long i1516;\n+       long i1517;\n+       long i1518;\n+       long i1519;\n+       long i1520;\n+       long i1521;\n+       long i1522;\n+       long i1523;\n+       long i1524;\n+       long i1525;\n+       long i1526;\n+       long i1527;\n+       long i1528;\n+       long i1529;\n+       long i1530;\n+       long i1531;\n+       long i1532;\n+       long i1533;\n+       long i1534;\n+       long i1535;\n+       long i1536;\n+       long i1537;\n+       long i1538;\n+       long i1539;\n+       long i1540;\n+       long i1541;\n+       long i1542;\n+       long i1543;\n+       long i1544;\n+       long i1545;\n+       long i1546;\n+       long i1547;\n+       long i1548;\n+       long i1549;\n+       long i1550;\n+       long i1551;\n+       long i1552;\n+       long i1553;\n+       long i1554;\n+       long i1555;\n+       long i1556;\n+       long i1557;\n+       long i1558;\n+       long i1559;\n+       long i1560;\n+       long i1561;\n+       long i1562;\n+       long i1563;\n+       long i1564;\n+       long i1565;\n+       long i1566;\n+       long i1567;\n+       long i1568;\n+       long i1569;\n+       long i1570;\n+       long i1571;\n+       long i1572;\n+       long i1573;\n+       long i1574;\n+       long i1575;\n+       long i1576;\n+       long i1577;\n+       long i1578;\n+       long i1579;\n+       long i1580;\n+       long i1581;\n+       long i1582;\n+       long i1583;\n+       long i1584;\n+       long i1585;\n+       long i1586;\n+       long i1587;\n+       long i1588;\n+       long i1589;\n+       long i1590;\n+       long i1591;\n+       long i1592;\n+       long i1593;\n+       long i1594;\n+       long i1595;\n+       long i1596;\n+       long i1597;\n+       long i1598;\n+       long i1599;\n+       long i1600;\n+       long i1601;\n+       long i1602;\n+       long i1603;\n+       long i1604;\n+       long i1605;\n+       long i1606;\n+       long i1607;\n+       long i1608;\n+       long i1609;\n+       long i1610;\n+       long i1611;\n+       long i1612;\n+       long i1613;\n+       long i1614;\n+       long i1615;\n+       long i1616;\n+       long i1617;\n+       long i1618;\n+       long i1619;\n+       long i1620;\n+       long i1621;\n+       long i1622;\n+       long i1623;\n+       long i1624;\n+       long i1625;\n+       long i1626;\n+       long i1627;\n+       long i1628;\n+       long i1629;\n+       long i1630;\n+       long i1631;\n+       long i1632;\n+       long i1633;\n+       long i1634;\n+       long i1635;\n+       long i1636;\n+       long i1637;\n+       long i1638;\n+       long i1639;\n+       long i1640;\n+       long i1641;\n+       long i1642;\n+       long i1643;\n+       long i1644;\n+       long i1645;\n+       long i1646;\n+       long i1647;\n+       long i1648;\n+       long i1649;\n+       long i1650;\n+       long i1651;\n+       long i1652;\n+       long i1653;\n+       long i1654;\n+       long i1655;\n+       long i1656;\n+       long i1657;\n+       long i1658;\n+       long i1659;\n+       long i1660;\n+       long i1661;\n+       long i1662;\n+       long i1663;\n+       long i1664;\n+       long i1665;\n+       long i1666;\n+       long i1667;\n+       long i1668;\n+       long i1669;\n+       long i1670;\n+       long i1671;\n+       long i1672;\n+       long i1673;\n+       long i1674;\n+       long i1675;\n+       long i1676;\n+       long i1677;\n+       long i1678;\n+       long i1679;\n+       long i1680;\n+       long i1681;\n+       long i1682;\n+       long i1683;\n+       long i1684;\n+       long i1685;\n+       long i1686;\n+       long i1687;\n+       long i1688;\n+       long i1689;\n+       long i1690;\n+       long i1691;\n+       long i1692;\n+       long i1693;\n+       long i1694;\n+       long i1695;\n+       long i1696;\n+       long i1697;\n+       long i1698;\n+       long i1699;\n+       long i1700;\n+       long i1701;\n+       long i1702;\n+       long i1703;\n+       long i1704;\n+       long i1705;\n+       long i1706;\n+       long i1707;\n+       long i1708;\n+       long i1709;\n+       long i1710;\n+       long i1711;\n+       long i1712;\n+       long i1713;\n+       long i1714;\n+       long i1715;\n+       long i1716;\n+       long i1717;\n+       long i1718;\n+       long i1719;\n+       long i1720;\n+       long i1721;\n+       long i1722;\n+       long i1723;\n+       long i1724;\n+       long i1725;\n+       long i1726;\n+       long i1727;\n+       long i1728;\n+       long i1729;\n+       long i1730;\n+       long i1731;\n+       long i1732;\n+       long i1733;\n+       long i1734;\n+       long i1735;\n+       long i1736;\n+       long i1737;\n+       long i1738;\n+       long i1739;\n+       long i1740;\n+       long i1741;\n+       long i1742;\n+       long i1743;\n+       long i1744;\n+       long i1745;\n+       long i1746;\n+       long i1747;\n+       long i1748;\n+       long i1749;\n+       long i1750;\n+       long i1751;\n+       long i1752;\n+       long i1753;\n+       long i1754;\n+       long i1755;\n+       long i1756;\n+       long i1757;\n+       long i1758;\n+       long i1759;\n+       long i1760;\n+       long i1761;\n+       long i1762;\n+       long i1763;\n+       long i1764;\n+       long i1765;\n+       long i1766;\n+       long i1767;\n+       long i1768;\n+       long i1769;\n+       long i1770;\n+       long i1771;\n+       long i1772;\n+       long i1773;\n+       long i1774;\n+       long i1775;\n+       long i1776;\n+       long i1777;\n+       long i1778;\n+       long i1779;\n+       long i1780;\n+       long i1781;\n+       long i1782;\n+       long i1783;\n+       long i1784;\n+       long i1785;\n+       long i1786;\n+       long i1787;\n+       long i1788;\n+       long i1789;\n+       long i1790;\n+       long i1791;\n+       long i1792;\n+       long i1793;\n+       long i1794;\n+       long i1795;\n+       long i1796;\n+       long i1797;\n+       long i1798;\n+       long i1799;\n+       long i1800;\n+       long i1801;\n+       long i1802;\n+       long i1803;\n+       long i1804;\n+       long i1805;\n+       long i1806;\n+       long i1807;\n+       long i1808;\n+       long i1809;\n+       long i1810;\n+       long i1811;\n+       long i1812;\n+       long i1813;\n+       long i1814;\n+       long i1815;\n+       long i1816;\n+       long i1817;\n+       long i1818;\n+       long i1819;\n+       long i1820;\n+       long i1821;\n+       long i1822;\n+       long i1823;\n+       long i1824;\n+       long i1825;\n+       long i1826;\n+       long i1827;\n+       long i1828;\n+       long i1829;\n+       long i1830;\n+       long i1831;\n+       long i1832;\n+       long i1833;\n+       long i1834;\n+       long i1835;\n+       long i1836;\n+       long i1837;\n+       long i1838;\n+       long i1839;\n+       long i1840;\n+       long i1841;\n+       long i1842;\n+       long i1843;\n+       long i1844;\n+       long i1845;\n+       long i1846;\n+       long i1847;\n+       long i1848;\n+       long i1849;\n+       long i1850;\n+       long i1851;\n+       long i1852;\n+       long i1853;\n+       long i1854;\n+       long i1855;\n+       long i1856;\n+       long i1857;\n+       long i1858;\n+       long i1859;\n+       long i1860;\n+       long i1861;\n+       long i1862;\n+       long i1863;\n+       long i1864;\n+       long i1865;\n+       long i1866;\n+       long i1867;\n+       long i1868;\n+       long i1869;\n+       long i1870;\n+       long i1871;\n+       long i1872;\n+       long i1873;\n+       long i1874;\n+       long i1875;\n+       long i1876;\n+       long i1877;\n+       long i1878;\n+       long i1879;\n+       long i1880;\n+       long i1881;\n+       long i1882;\n+       long i1883;\n+       long i1884;\n+       long i1885;\n+       long i1886;\n+       long i1887;\n+       long i1888;\n+       long i1889;\n+       long i1890;\n+       long i1891;\n+       long i1892;\n+       long i1893;\n+       long i1894;\n+       long i1895;\n+       long i1896;\n+       long i1897;\n+       long i1898;\n+       long i1899;\n+       long i1900;\n+       long i1901;\n+       long i1902;\n+       long i1903;\n+       long i1904;\n+       long i1905;\n+       long i1906;\n+       long i1907;\n+       long i1908;\n+       long i1909;\n+       long i1910;\n+       long i1911;\n+       long i1912;\n+       long i1913;\n+       long i1914;\n+       long i1915;\n+       long i1916;\n+       long i1917;\n+       long i1918;\n+       long i1919;\n+       long i1920;\n+       long i1921;\n+       long i1922;\n+       long i1923;\n+       long i1924;\n+       long i1925;\n+       long i1926;\n+       long i1927;\n+       long i1928;\n+       long i1929;\n+       long i1930;\n+       long i1931;\n+       long i1932;\n+       long i1933;\n+       long i1934;\n+       long i1935;\n+       long i1936;\n+       long i1937;\n+       long i1938;\n+       long i1939;\n+       long i1940;\n+       long i1941;\n+       long i1942;\n+       long i1943;\n+       long i1944;\n+       long i1945;\n+       long i1946;\n+       long i1947;\n+       long i1948;\n+       long i1949;\n+       long i1950;\n+       long i1951;\n+       long i1952;\n+       long i1953;\n+       long i1954;\n+       long i1955;\n+       long i1956;\n+       long i1957;\n+       long i1958;\n+       long i1959;\n+       long i1960;\n+       long i1961;\n+       long i1962;\n+       long i1963;\n+       long i1964;\n+       long i1965;\n+       long i1966;\n+       long i1967;\n+       long i1968;\n+       long i1969;\n+       long i1970;\n+       long i1971;\n+       long i1972;\n+       long i1973;\n+       long i1974;\n+       long i1975;\n+       long i1976;\n+       long i1977;\n+       long i1978;\n+       long i1979;\n+       long i1980;\n+       long i1981;\n+       long i1982;\n+       long i1983;\n+       long i1984;\n+       long i1985;\n+       long i1986;\n+       long i1987;\n+       long i1988;\n+       long i1989;\n+       long i1990;\n+       long i1991;\n+       long i1992;\n+       long i1993;\n+       long i1994;\n+       long i1995;\n+       long i1996;\n+       long i1997;\n+       long i1998;\n+       long i1999;\n+       long i2000;\n+       long i2001;\n+       long i2002;\n+       long i2003;\n+       long i2004;\n+       long i2005;\n+       long i2006;\n+       long i2007;\n+       long i2008;\n+       long i2009;\n+       long i2010;\n+       long i2011;\n+       long i2012;\n+       long i2013;\n+       long i2014;\n+       long i2015;\n+       long i2016;\n+       long i2017;\n+       long i2018;\n+       long i2019;\n+       long i2020;\n+       long i2021;\n+       long i2022;\n+       long i2023;\n+       long i2024;\n+       long i2025;\n+       long i2026;\n+       long i2027;\n+       long i2028;\n+       long i2029;\n+       long i2030;\n+       long i2031;\n+       long i2032;\n+       long i2033;\n+       long i2034;\n+       long i2035;\n+       long i2036;\n+       long i2037;\n+       long i2038;\n+       long i2039;\n+       long i2040;\n+       long i2041;\n+       long i2042;\n+       long i2043;\n+       long i2044;\n+       long i2045;\n+       long i2046;\n+       long i2047;\n+       long i2048;\n+       long i2049;\n+       long i2050;\n+       long i2051;\n+       long i2052;\n+       long i2053;\n+       long i2054;\n+       long i2055;\n+       long i2056;\n+       long i2057;\n+       long i2058;\n+       long i2059;\n+       long i2060;\n+       long i2061;\n+       long i2062;\n+       long i2063;\n+       long i2064;\n+       long i2065;\n+       long i2066;\n+       long i2067;\n+       long i2068;\n+       long i2069;\n+       long i2070;\n+       long i2071;\n+       long i2072;\n+       long i2073;\n+       long i2074;\n+       long i2075;\n+       long i2076;\n+       long i2077;\n+       long i2078;\n+       long i2079;\n+       long i2080;\n+       long i2081;\n+       long i2082;\n+       long i2083;\n+       long i2084;\n+       long i2085;\n+       long i2086;\n+       long i2087;\n+       long i2088;\n+       long i2089;\n+       long i2090;\n+       long i2091;\n+       long i2092;\n+       long i2093;\n+       long i2094;\n+       long i2095;\n+       long i2096;\n+       long i2097;\n+       long i2098;\n+       long i2099;\n+       long i2100;\n+       long i2101;\n+       long i2102;\n+       long i2103;\n+       long i2104;\n+       long i2105;\n+       long i2106;\n+       long i2107;\n+       long i2108;\n+       long i2109;\n+       long i2110;\n+       long i2111;\n+       long i2112;\n+       long i2113;\n+       long i2114;\n+       long i2115;\n+       long i2116;\n+       long i2117;\n+       long i2118;\n+       long i2119;\n+       long i2120;\n+       long i2121;\n+       long i2122;\n+       long i2123;\n+       long i2124;\n+       long i2125;\n+       long i2126;\n+       long i2127;\n+       long i2128;\n+       long i2129;\n+       long i2130;\n+       long i2131;\n+       long i2132;\n+       long i2133;\n+       long i2134;\n+       long i2135;\n+       long i2136;\n+       long i2137;\n+       long i2138;\n+       long i2139;\n+       long i2140;\n+       long i2141;\n+       long i2142;\n+       long i2143;\n+       long i2144;\n+       long i2145;\n+       long i2146;\n+       long i2147;\n+       long i2148;\n+       long i2149;\n+       long i2150;\n+       long i2151;\n+       long i2152;\n+       long i2153;\n+       long i2154;\n+       long i2155;\n+       long i2156;\n+       long i2157;\n+       long i2158;\n+       long i2159;\n+       long i2160;\n+       long i2161;\n+       long i2162;\n+       long i2163;\n+       long i2164;\n+       long i2165;\n+       long i2166;\n+       long i2167;\n+       long i2168;\n+       long i2169;\n+       long i2170;\n+       long i2171;\n+       long i2172;\n+       long i2173;\n+       long i2174;\n+       long i2175;\n+       long i2176;\n+       long i2177;\n+       long i2178;\n+       long i2179;\n+       long i2180;\n+       long i2181;\n+       long i2182;\n+       long i2183;\n+       long i2184;\n+       long i2185;\n+       long i2186;\n+       long i2187;\n+       long i2188;\n+       long i2189;\n+       long i2190;\n+       long i2191;\n+       long i2192;\n+       long i2193;\n+       long i2194;\n+       long i2195;\n+       long i2196;\n+       long i2197;\n+       long i2198;\n+       long i2199;\n+       long i2200;\n+       long i2201;\n+       long i2202;\n+       long i2203;\n+       long i2204;\n+       long i2205;\n+       long i2206;\n+       long i2207;\n+       long i2208;\n+       long i2209;\n+       long i2210;\n+       long i2211;\n+       long i2212;\n+       long i2213;\n+       long i2214;\n+       long i2215;\n+       long i2216;\n+       long i2217;\n+       long i2218;\n+       long i2219;\n+       long i2220;\n+       long i2221;\n+       long i2222;\n+       long i2223;\n+       long i2224;\n+       long i2225;\n+       long i2226;\n+       long i2227;\n+       long i2228;\n+       long i2229;\n+       long i2230;\n+       long i2231;\n+       long i2232;\n+       long i2233;\n+       long i2234;\n+       long i2235;\n+       long i2236;\n+       long i2237;\n+       long i2238;\n+       long i2239;\n+       long i2240;\n+       long i2241;\n+       long i2242;\n+       long i2243;\n+       long i2244;\n+       long i2245;\n+       long i2246;\n+       long i2247;\n+       long i2248;\n+       long i2249;\n+       long i2250;\n+       long i2251;\n+       long i2252;\n+       long i2253;\n+       long i2254;\n+       long i2255;\n+       long i2256;\n+       long i2257;\n+       long i2258;\n+       long i2259;\n+       long i2260;\n+       long i2261;\n+       long i2262;\n+       long i2263;\n+       long i2264;\n+       long i2265;\n+       long i2266;\n+       long i2267;\n+       long i2268;\n+       long i2269;\n+       long i2270;\n+       long i2271;\n+       long i2272;\n+       long i2273;\n+       long i2274;\n+       long i2275;\n+       long i2276;\n+       long i2277;\n+       long i2278;\n+       long i2279;\n+       long i2280;\n+       long i2281;\n+       long i2282;\n+       long i2283;\n+       long i2284;\n+       long i2285;\n+       long i2286;\n+       long i2287;\n+       long i2288;\n+       long i2289;\n+       long i2290;\n+       long i2291;\n+       long i2292;\n+       long i2293;\n+       long i2294;\n+       long i2295;\n+       long i2296;\n+       long i2297;\n+       long i2298;\n+       long i2299;\n+       long i2300;\n+       long i2301;\n+       long i2302;\n+       long i2303;\n+       long i2304;\n+       long i2305;\n+       long i2306;\n+       long i2307;\n+       long i2308;\n+       long i2309;\n+       long i2310;\n+       long i2311;\n+       long i2312;\n+       long i2313;\n+       long i2314;\n+       long i2315;\n+       long i2316;\n+       long i2317;\n+       long i2318;\n+       long i2319;\n+       long i2320;\n+       long i2321;\n+       long i2322;\n+       long i2323;\n+       long i2324;\n+       long i2325;\n+       long i2326;\n+       long i2327;\n+       long i2328;\n+       long i2329;\n+       long i2330;\n+       long i2331;\n+       long i2332;\n+       long i2333;\n+       long i2334;\n+       long i2335;\n+       long i2336;\n+       long i2337;\n+       long i2338;\n+       long i2339;\n+       long i2340;\n+       long i2341;\n+       long i2342;\n+       long i2343;\n+       long i2344;\n+       long i2345;\n+       long i2346;\n+       long i2347;\n+       long i2348;\n+       long i2349;\n+       long i2350;\n+       long i2351;\n+       long i2352;\n+       long i2353;\n+       long i2354;\n+       long i2355;\n+       long i2356;\n+       long i2357;\n+       long i2358;\n+       long i2359;\n+       long i2360;\n+       long i2361;\n+       long i2362;\n+       long i2363;\n+       long i2364;\n+       long i2365;\n+       long i2366;\n+       long i2367;\n+       long i2368;\n+       long i2369;\n+       long i2370;\n+       long i2371;\n+       long i2372;\n+       long i2373;\n+       long i2374;\n+       long i2375;\n+       long i2376;\n+       long i2377;\n+       long i2378;\n+       long i2379;\n+       long i2380;\n+       long i2381;\n+       long i2382;\n+       long i2383;\n+       long i2384;\n+       long i2385;\n+       long i2386;\n+       long i2387;\n+       long i2388;\n+       long i2389;\n+       long i2390;\n+       long i2391;\n+       long i2392;\n+       long i2393;\n+       long i2394;\n+       long i2395;\n+       long i2396;\n+       long i2397;\n+       long i2398;\n+       long i2399;\n+       long i2400;\n+       long i2401;\n+       long i2402;\n+       long i2403;\n+       long i2404;\n+       long i2405;\n+       long i2406;\n+       long i2407;\n+       long i2408;\n+       long i2409;\n+       long i2410;\n+       long i2411;\n+       long i2412;\n+       long i2413;\n+       long i2414;\n+       long i2415;\n+       long i2416;\n+       long i2417;\n+       long i2418;\n+       long i2419;\n+       long i2420;\n+       long i2421;\n+       long i2422;\n+       long i2423;\n+       long i2424;\n+       long i2425;\n+       long i2426;\n+       long i2427;\n+       long i2428;\n+       long i2429;\n+       long i2430;\n+       long i2431;\n+       long i2432;\n+       long i2433;\n+       long i2434;\n+       long i2435;\n+       long i2436;\n+       long i2437;\n+       long i2438;\n+       long i2439;\n+       long i2440;\n+       long i2441;\n+       long i2442;\n+       long i2443;\n+       long i2444;\n+       long i2445;\n+       long i2446;\n+       long i2447;\n+       long i2448;\n+       long i2449;\n+       long i2450;\n+       long i2451;\n+       long i2452;\n+       long i2453;\n+       long i2454;\n+       long i2455;\n+       long i2456;\n+       long i2457;\n+       long i2458;\n+       long i2459;\n+       long i2460;\n+       long i2461;\n+       long i2462;\n+       long i2463;\n+       long i2464;\n+       long i2465;\n+       long i2466;\n+       long i2467;\n+       long i2468;\n+       long i2469;\n+       long i2470;\n+       long i2471;\n+       long i2472;\n+       long i2473;\n+       long i2474;\n+       long i2475;\n+       long i2476;\n+       long i2477;\n+       long i2478;\n+       long i2479;\n+       long i2480;\n+       long i2481;\n+       long i2482;\n+       long i2483;\n+       long i2484;\n+       long i2485;\n+       long i2486;\n+       long i2487;\n+       long i2488;\n+       long i2489;\n+       long i2490;\n+       long i2491;\n+       long i2492;\n+       long i2493;\n+       long i2494;\n+       long i2495;\n+       long i2496;\n+       long i2497;\n+       long i2498;\n+       long i2499;\n+       long i2500;\n+       long i2501;\n+       long i2502;\n+       long i2503;\n+       long i2504;\n+       long i2505;\n+       long i2506;\n+       long i2507;\n+       long i2508;\n+       long i2509;\n+       long i2510;\n+       long i2511;\n+       long i2512;\n+       long i2513;\n+       long i2514;\n+       long i2515;\n+       long i2516;\n+       long i2517;\n+       long i2518;\n+       long i2519;\n+       long i2520;\n+       long i2521;\n+       long i2522;\n+       long i2523;\n+       long i2524;\n+       long i2525;\n+       long i2526;\n+       long i2527;\n+       long i2528;\n+       long i2529;\n+       long i2530;\n+       long i2531;\n+       long i2532;\n+       long i2533;\n+       long i2534;\n+       long i2535;\n+       long i2536;\n+       long i2537;\n+       long i2538;\n+       long i2539;\n+       long i2540;\n+       long i2541;\n+       long i2542;\n+       long i2543;\n+       long i2544;\n+       long i2545;\n+       long i2546;\n+       long i2547;\n+       long i2548;\n+       long i2549;\n+       long i2550;\n+       long i2551;\n+       long i2552;\n+       long i2553;\n+       long i2554;\n+       long i2555;\n+       long i2556;\n+       long i2557;\n+       long i2558;\n+       long i2559;\n+       long i2560;\n+       long i2561;\n+       long i2562;\n+       long i2563;\n+       long i2564;\n+       long i2565;\n+       long i2566;\n+       long i2567;\n+       long i2568;\n+       long i2569;\n+       long i2570;\n+       long i2571;\n+       long i2572;\n+       long i2573;\n+       long i2574;\n+       long i2575;\n+       long i2576;\n+       long i2577;\n+       long i2578;\n+       long i2579;\n+       long i2580;\n+       long i2581;\n+       long i2582;\n+       long i2583;\n+       long i2584;\n+       long i2585;\n+       long i2586;\n+       long i2587;\n+       long i2588;\n+       long i2589;\n+       long i2590;\n+       long i2591;\n+       long i2592;\n+       long i2593;\n+       long i2594;\n+       long i2595;\n+       long i2596;\n+       long i2597;\n+       long i2598;\n+       long i2599;\n+       long i2600;\n+       long i2601;\n+       long i2602;\n+       long i2603;\n+       long i2604;\n+       long i2605;\n+       long i2606;\n+       long i2607;\n+       long i2608;\n+       long i2609;\n+       long i2610;\n+       long i2611;\n+       long i2612;\n+       long i2613;\n+       long i2614;\n+       long i2615;\n+       long i2616;\n+       long i2617;\n+       long i2618;\n+       long i2619;\n+       long i2620;\n+       long i2621;\n+       long i2622;\n+       long i2623;\n+       long i2624;\n+       long i2625;\n+       long i2626;\n+       long i2627;\n+       long i2628;\n+       long i2629;\n+       long i2630;\n+       long i2631;\n+       long i2632;\n+       long i2633;\n+       long i2634;\n+       long i2635;\n+       long i2636;\n+       long i2637;\n+       long i2638;\n+       long i2639;\n+       long i2640;\n+       long i2641;\n+       long i2642;\n+       long i2643;\n+       long i2644;\n+       long i2645;\n+       long i2646;\n+       long i2647;\n+       long i2648;\n+       long i2649;\n+       long i2650;\n+       long i2651;\n+       long i2652;\n+       long i2653;\n+       long i2654;\n+       long i2655;\n+       long i2656;\n+       long i2657;\n+       long i2658;\n+       long i2659;\n+       long i2660;\n+       long i2661;\n+       long i2662;\n+       long i2663;\n+       long i2664;\n+       long i2665;\n+       long i2666;\n+       long i2667;\n+       long i2668;\n+       long i2669;\n+       long i2670;\n+       long i2671;\n+       long i2672;\n+       long i2673;\n+       long i2674;\n+       long i2675;\n+       long i2676;\n+       long i2677;\n+       long i2678;\n+       long i2679;\n+       long i2680;\n+       long i2681;\n+       long i2682;\n+       long i2683;\n+       long i2684;\n+       long i2685;\n+       long i2686;\n+       long i2687;\n+       long i2688;\n+       long i2689;\n+       long i2690;\n+       long i2691;\n+       long i2692;\n+       long i2693;\n+       long i2694;\n+       long i2695;\n+       long i2696;\n+       long i2697;\n+       long i2698;\n+       long i2699;\n+       long i2700;\n+       long i2701;\n+       long i2702;\n+       long i2703;\n+       long i2704;\n+       long i2705;\n+       long i2706;\n+       long i2707;\n+       long i2708;\n+       long i2709;\n+       long i2710;\n+       long i2711;\n+       long i2712;\n+       long i2713;\n+       long i2714;\n+       long i2715;\n+       long i2716;\n+       long i2717;\n+       long i2718;\n+       long i2719;\n+       long i2720;\n+       long i2721;\n+       long i2722;\n+       long i2723;\n+       long i2724;\n+       long i2725;\n+       long i2726;\n+       long i2727;\n+       long i2728;\n+       long i2729;\n+       long i2730;\n+       long i2731;\n+       long i2732;\n+       long i2733;\n+       long i2734;\n+       long i2735;\n+       long i2736;\n+       long i2737;\n+       long i2738;\n+       long i2739;\n+       long i2740;\n+       long i2741;\n+       long i2742;\n+       long i2743;\n+       long i2744;\n+       long i2745;\n+       long i2746;\n+       long i2747;\n+       long i2748;\n+       long i2749;\n+       long i2750;\n+       long i2751;\n+       long i2752;\n+       long i2753;\n+       long i2754;\n+       long i2755;\n+       long i2756;\n+       long i2757;\n+       long i2758;\n+       long i2759;\n+       long i2760;\n+       long i2761;\n+       long i2762;\n+       long i2763;\n+       long i2764;\n+       long i2765;\n+       long i2766;\n+       long i2767;\n+       long i2768;\n+       long i2769;\n+       long i2770;\n+       long i2771;\n+       long i2772;\n+       long i2773;\n+       long i2774;\n+       long i2775;\n+       long i2776;\n+       long i2777;\n+       long i2778;\n+       long i2779;\n+       long i2780;\n+       long i2781;\n+       long i2782;\n+       long i2783;\n+       long i2784;\n+       long i2785;\n+       long i2786;\n+       long i2787;\n+       long i2788;\n+       long i2789;\n+       long i2790;\n+       long i2791;\n+       long i2792;\n+       long i2793;\n+       long i2794;\n+       long i2795;\n+       long i2796;\n+       long i2797;\n+       long i2798;\n+       long i2799;\n+       long i2800;\n+       long i2801;\n+       long i2802;\n+       long i2803;\n+       long i2804;\n+       long i2805;\n+       long i2806;\n+       long i2807;\n+       long i2808;\n+       long i2809;\n+       long i2810;\n+       long i2811;\n+       long i2812;\n+       long i2813;\n+       long i2814;\n+       long i2815;\n+       long i2816;\n+       long i2817;\n+       long i2818;\n+       long i2819;\n+       long i2820;\n+       long i2821;\n+       long i2822;\n+       long i2823;\n+       long i2824;\n+       long i2825;\n+       long i2826;\n+       long i2827;\n+       long i2828;\n+       long i2829;\n+       long i2830;\n+       long i2831;\n+       long i2832;\n+       long i2833;\n+       long i2834;\n+       long i2835;\n+       long i2836;\n+       long i2837;\n+       long i2838;\n+       long i2839;\n+       long i2840;\n+       long i2841;\n+       long i2842;\n+       long i2843;\n+       long i2844;\n+       long i2845;\n+       long i2846;\n+       long i2847;\n+       long i2848;\n+       long i2849;\n+       long i2850;\n+       long i2851;\n+       long i2852;\n+       long i2853;\n+       long i2854;\n+       long i2855;\n+       long i2856;\n+       long i2857;\n+       long i2858;\n+       long i2859;\n+       long i2860;\n+       long i2861;\n+       long i2862;\n+       long i2863;\n+       long i2864;\n+       long i2865;\n+       long i2866;\n+       long i2867;\n+       long i2868;\n+       long i2869;\n+       long i2870;\n+       long i2871;\n+       long i2872;\n+       long i2873;\n+       long i2874;\n+       long i2875;\n+       long i2876;\n+       long i2877;\n+       long i2878;\n+       long i2879;\n+       long i2880;\n+       long i2881;\n+       long i2882;\n+       long i2883;\n+       long i2884;\n+       long i2885;\n+       long i2886;\n+       long i2887;\n+       long i2888;\n+       long i2889;\n+       long i2890;\n+       long i2891;\n+       long i2892;\n+       long i2893;\n+       long i2894;\n+       long i2895;\n+       long i2896;\n+       long i2897;\n+       long i2898;\n+       long i2899;\n+       long i2900;\n+       long i2901;\n+       long i2902;\n+       long i2903;\n+       long i2904;\n+       long i2905;\n+       long i2906;\n+       long i2907;\n+       long i2908;\n+       long i2909;\n+       long i2910;\n+       long i2911;\n+       long i2912;\n+       long i2913;\n+       long i2914;\n+       long i2915;\n+       long i2916;\n+       long i2917;\n+       long i2918;\n+       long i2919;\n+       long i2920;\n+       long i2921;\n+       long i2922;\n+       long i2923;\n+       long i2924;\n+       long i2925;\n+       long i2926;\n+       long i2927;\n+       long i2928;\n+       long i2929;\n+       long i2930;\n+       long i2931;\n+       long i2932;\n+       long i2933;\n+       long i2934;\n+       long i2935;\n+       long i2936;\n+       long i2937;\n+       long i2938;\n+       long i2939;\n+       long i2940;\n+       long i2941;\n+       long i2942;\n+       long i2943;\n+       long i2944;\n+       long i2945;\n+       long i2946;\n+       long i2947;\n+       long i2948;\n+       long i2949;\n+       long i2950;\n+       long i2951;\n+       long i2952;\n+       long i2953;\n+       long i2954;\n+       long i2955;\n+       long i2956;\n+       long i2957;\n+       long i2958;\n+       long i2959;\n+       long i2960;\n+       long i2961;\n+       long i2962;\n+       long i2963;\n+       long i2964;\n+       long i2965;\n+       long i2966;\n+       long i2967;\n+       long i2968;\n+       long i2969;\n+       long i2970;\n+       long i2971;\n+       long i2972;\n+       long i2973;\n+       long i2974;\n+       long i2975;\n+       long i2976;\n+       long i2977;\n+       long i2978;\n+       long i2979;\n+       long i2980;\n+       long i2981;\n+       long i2982;\n+       long i2983;\n+       long i2984;\n+       long i2985;\n+       long i2986;\n+       long i2987;\n+       long i2988;\n+       long i2989;\n+       long i2990;\n+       long i2991;\n+       long i2992;\n+       long i2993;\n+       long i2994;\n+       long i2995;\n+       long i2996;\n+       long i2997;\n+       long i2998;\n+       long i2999;\n+       long i3000;\n+       long i3001;\n+       long i3002;\n+       long i3003;\n+       long i3004;\n+       long i3005;\n+       long i3006;\n+       long i3007;\n+       long i3008;\n+       long i3009;\n+       long i3010;\n+       long i3011;\n+       long i3012;\n+       long i3013;\n+       long i3014;\n+       long i3015;\n+       long i3016;\n+       long i3017;\n+       long i3018;\n+       long i3019;\n+       long i3020;\n+       long i3021;\n+       long i3022;\n+       long i3023;\n+       long i3024;\n+       long i3025;\n+       long i3026;\n+       long i3027;\n+       long i3028;\n+       long i3029;\n+       long i3030;\n+       long i3031;\n+       long i3032;\n+       long i3033;\n+       long i3034;\n+       long i3035;\n+       long i3036;\n+       long i3037;\n+       long i3038;\n+       long i3039;\n+       long i3040;\n+       long i3041;\n+       long i3042;\n+       long i3043;\n+       long i3044;\n+       long i3045;\n+       long i3046;\n+       long i3047;\n+       long i3048;\n+       long i3049;\n+       long i3050;\n+       long i3051;\n+       long i3052;\n+       long i3053;\n+       long i3054;\n+       long i3055;\n+       long i3056;\n+       long i3057;\n+       long i3058;\n+       long i3059;\n+       long i3060;\n+       long i3061;\n+       long i3062;\n+       long i3063;\n+       long i3064;\n+       long i3065;\n+       long i3066;\n+       long i3067;\n+       long i3068;\n+       long i3069;\n+       long i3070;\n+       long i3071;\n+       long i3072;\n+       long i3073;\n+       long i3074;\n+       long i3075;\n+       long i3076;\n+       long i3077;\n+       long i3078;\n+       long i3079;\n+       long i3080;\n+       long i3081;\n+       long i3082;\n+       long i3083;\n+       long i3084;\n+       long i3085;\n+       long i3086;\n+       long i3087;\n+       long i3088;\n+       long i3089;\n+       long i3090;\n+       long i3091;\n+       long i3092;\n+       long i3093;\n+       long i3094;\n+       long i3095;\n+       long i3096;\n+       long i3097;\n+       long i3098;\n+       long i3099;\n+       long i3100;\n+       long i3101;\n+       long i3102;\n+       long i3103;\n+       long i3104;\n+       long i3105;\n+       long i3106;\n+       long i3107;\n+       long i3108;\n+       long i3109;\n+       long i3110;\n+       long i3111;\n+       long i3112;\n+       long i3113;\n+       long i3114;\n+       long i3115;\n+       long i3116;\n+       long i3117;\n+       long i3118;\n+       long i3119;\n+       long i3120;\n+       long i3121;\n+       long i3122;\n+       long i3123;\n+       long i3124;\n+       long i3125;\n+       long i3126;\n+       long i3127;\n+       long i3128;\n+       long i3129;\n+       long i3130;\n+       long i3131;\n+       long i3132;\n+       long i3133;\n+       long i3134;\n+       long i3135;\n+       long i3136;\n+       long i3137;\n+       long i3138;\n+       long i3139;\n+       long i3140;\n+       long i3141;\n+       long i3142;\n+       long i3143;\n+       long i3144;\n+       long i3145;\n+       long i3146;\n+       long i3147;\n+       long i3148;\n+       long i3149;\n+       long i3150;\n+       long i3151;\n+       long i3152;\n+       long i3153;\n+       long i3154;\n+       long i3155;\n+       long i3156;\n+       long i3157;\n+       long i3158;\n+       long i3159;\n+       long i3160;\n+       long i3161;\n+       long i3162;\n+       long i3163;\n+       long i3164;\n+       long i3165;\n+       long i3166;\n+       long i3167;\n+       long i3168;\n+       long i3169;\n+       long i3170;\n+       long i3171;\n+       long i3172;\n+       long i3173;\n+       long i3174;\n+       long i3175;\n+       long i3176;\n+       long i3177;\n+       long i3178;\n+       long i3179;\n+       long i3180;\n+       long i3181;\n+       long i3182;\n+       long i3183;\n+       long i3184;\n+       long i3185;\n+       long i3186;\n+       long i3187;\n+       long i3188;\n+       long i3189;\n+       long i3190;\n+       long i3191;\n+       long i3192;\n+       long i3193;\n+       long i3194;\n+       long i3195;\n+       long i3196;\n+       long i3197;\n+       long i3198;\n+       long i3199;\n+       long i3200;\n+       long i3201;\n+       long i3202;\n+       long i3203;\n+       long i3204;\n+       long i3205;\n+       long i3206;\n+       long i3207;\n+       long i3208;\n+       long i3209;\n+       long i3210;\n+       long i3211;\n+       long i3212;\n+       long i3213;\n+       long i3214;\n+       long i3215;\n+       long i3216;\n+       long i3217;\n+       long i3218;\n+       long i3219;\n+       long i3220;\n+       long i3221;\n+       long i3222;\n+       long i3223;\n+       long i3224;\n+       long i3225;\n+       long i3226;\n+       long i3227;\n+       long i3228;\n+       long i3229;\n+       long i3230;\n+       long i3231;\n+       long i3232;\n+       long i3233;\n+       long i3234;\n+       long i3235;\n+       long i3236;\n+       long i3237;\n+       long i3238;\n+       long i3239;\n+       long i3240;\n+       long i3241;\n+       long i3242;\n+       long i3243;\n+       long i3244;\n+       long i3245;\n+       long i3246;\n+       long i3247;\n+       long i3248;\n+       long i3249;\n+       long i3250;\n+       long i3251;\n+       long i3252;\n+       long i3253;\n+       long i3254;\n+       long i3255;\n+       long i3256;\n+       long i3257;\n+       long i3258;\n+       long i3259;\n+       long i3260;\n+       long i3261;\n+       long i3262;\n+       long i3263;\n+       long i3264;\n+       long i3265;\n+       long i3266;\n+       long i3267;\n+       long i3268;\n+       long i3269;\n+       long i3270;\n+       long i3271;\n+       long i3272;\n+       long i3273;\n+       long i3274;\n+       long i3275;\n+       long i3276;\n+       long i3277;\n+       long i3278;\n+       long i3279;\n+       long i3280;\n+       long i3281;\n+       long i3282;\n+       long i3283;\n+       long i3284;\n+       long i3285;\n+       long i3286;\n+       long i3287;\n+       long i3288;\n+       long i3289;\n+       long i3290;\n+       long i3291;\n+       long i3292;\n+       long i3293;\n+       long i3294;\n+       long i3295;\n+       long i3296;\n+       long i3297;\n+       long i3298;\n+       long i3299;\n+       long i3300;\n+       long i3301;\n+       long i3302;\n+       long i3303;\n+       long i3304;\n+       long i3305;\n+       long i3306;\n+       long i3307;\n+       long i3308;\n+       long i3309;\n+       long i3310;\n+       long i3311;\n+       long i3312;\n+       long i3313;\n+       long i3314;\n+       long i3315;\n+       long i3316;\n+       long i3317;\n+       long i3318;\n+       long i3319;\n+       long i3320;\n+       long i3321;\n+       long i3322;\n+       long i3323;\n+       long i3324;\n+       long i3325;\n+       long i3326;\n+       long i3327;\n+       long i3328;\n+       long i3329;\n+       long i3330;\n+       long i3331;\n+       long i3332;\n+       long i3333;\n+       long i3334;\n+       long i3335;\n+       long i3336;\n+       long i3337;\n+       long i3338;\n+       long i3339;\n+       long i3340;\n+       long i3341;\n+       long i3342;\n+       long i3343;\n+       long i3344;\n+       long i3345;\n+       long i3346;\n+       long i3347;\n+       long i3348;\n+       long i3349;\n+       long i3350;\n+       long i3351;\n+       long i3352;\n+       long i3353;\n+       long i3354;\n+       long i3355;\n+       long i3356;\n+       long i3357;\n+       long i3358;\n+       long i3359;\n+       long i3360;\n+       long i3361;\n+       long i3362;\n+       long i3363;\n+       long i3364;\n+       long i3365;\n+       long i3366;\n+       long i3367;\n+       long i3368;\n+       long i3369;\n+       long i3370;\n+       long i3371;\n+       long i3372;\n+       long i3373;\n+       long i3374;\n+       long i3375;\n+       long i3376;\n+       long i3377;\n+       long i3378;\n+       long i3379;\n+       long i3380;\n+       long i3381;\n+       long i3382;\n+       long i3383;\n+       long i3384;\n+       long i3385;\n+       long i3386;\n+       long i3387;\n+       long i3388;\n+       long i3389;\n+       long i3390;\n+       long i3391;\n+       long i3392;\n+       long i3393;\n+       long i3394;\n+       long i3395;\n+       long i3396;\n+       long i3397;\n+       long i3398;\n+       long i3399;\n+       long i3400;\n+       long i3401;\n+       long i3402;\n+       long i3403;\n+       long i3404;\n+       long i3405;\n+       long i3406;\n+       long i3407;\n+       long i3408;\n+       long i3409;\n+       long i3410;\n+       long i3411;\n+       long i3412;\n+       long i3413;\n+       long i3414;\n+       long i3415;\n+       long i3416;\n+       long i3417;\n+       long i3418;\n+       long i3419;\n+       long i3420;\n+       long i3421;\n+       long i3422;\n+       long i3423;\n+       long i3424;\n+       long i3425;\n+       long i3426;\n+       long i3427;\n+       long i3428;\n+       long i3429;\n+       long i3430;\n+       long i3431;\n+       long i3432;\n+       long i3433;\n+       long i3434;\n+       long i3435;\n+       long i3436;\n+       long i3437;\n+       long i3438;\n+       long i3439;\n+       long i3440;\n+       long i3441;\n+       long i3442;\n+       long i3443;\n+       long i3444;\n+       long i3445;\n+       long i3446;\n+       long i3447;\n+       long i3448;\n+       long i3449;\n+       long i3450;\n+       long i3451;\n+       long i3452;\n+       long i3453;\n+       long i3454;\n+       long i3455;\n+       long i3456;\n+       long i3457;\n+       long i3458;\n+       long i3459;\n+       long i3460;\n+       long i3461;\n+       long i3462;\n+       long i3463;\n+       long i3464;\n+       long i3465;\n+       long i3466;\n+       long i3467;\n+       long i3468;\n+       long i3469;\n+       long i3470;\n+       long i3471;\n+       long i3472;\n+       long i3473;\n+       long i3474;\n+       long i3475;\n+       long i3476;\n+       long i3477;\n+       long i3478;\n+       long i3479;\n+       long i3480;\n+       long i3481;\n+       long i3482;\n+       long i3483;\n+       long i3484;\n+       long i3485;\n+       long i3486;\n+       long i3487;\n+       long i3488;\n+       long i3489;\n+       long i3490;\n+       long i3491;\n+       long i3492;\n+       long i3493;\n+       long i3494;\n+       long i3495;\n+       long i3496;\n+       long i3497;\n+       long i3498;\n+       long i3499;\n+       long i3500;\n+       long i3501;\n+       long i3502;\n+       long i3503;\n+       long i3504;\n+       long i3505;\n+       long i3506;\n+       long i3507;\n+       long i3508;\n+       long i3509;\n+       long i3510;\n+       long i3511;\n+       long i3512;\n+       long i3513;\n+       long i3514;\n+       long i3515;\n+       long i3516;\n+       long i3517;\n+       long i3518;\n+       long i3519;\n+       long i3520;\n+       long i3521;\n+       long i3522;\n+       long i3523;\n+       long i3524;\n+       long i3525;\n+       long i3526;\n+       long i3527;\n+       long i3528;\n+       long i3529;\n+       long i3530;\n+       long i3531;\n+       long i3532;\n+       long i3533;\n+       long i3534;\n+       long i3535;\n+       long i3536;\n+       long i3537;\n+       long i3538;\n+       long i3539;\n+       long i3540;\n+       long i3541;\n+       long i3542;\n+       long i3543;\n+       long i3544;\n+       long i3545;\n+       long i3546;\n+       long i3547;\n+       long i3548;\n+       long i3549;\n+       long i3550;\n+       long i3551;\n+       long i3552;\n+       long i3553;\n+       long i3554;\n+       long i3555;\n+       long i3556;\n+       long i3557;\n+       long i3558;\n+       long i3559;\n+       long i3560;\n+       long i3561;\n+       long i3562;\n+       long i3563;\n+       long i3564;\n+       long i3565;\n+       long i3566;\n+       long i3567;\n+       long i3568;\n+       long i3569;\n+       long i3570;\n+       long i3571;\n+       long i3572;\n+       long i3573;\n+       long i3574;\n+       long i3575;\n+       long i3576;\n+       long i3577;\n+       long i3578;\n+       long i3579;\n+       long i3580;\n+       long i3581;\n+       long i3582;\n+       long i3583;\n+       long i3584;\n+       long i3585;\n+       long i3586;\n+       long i3587;\n+       long i3588;\n+       long i3589;\n+       long i3590;\n+       long i3591;\n+       long i3592;\n+       long i3593;\n+       long i3594;\n+       long i3595;\n+       long i3596;\n+       long i3597;\n+       long i3598;\n+       long i3599;\n+       long i3600;\n+       long i3601;\n+       long i3602;\n+       long i3603;\n+       long i3604;\n+       long i3605;\n+       long i3606;\n+       long i3607;\n+       long i3608;\n+       long i3609;\n+       long i3610;\n+       long i3611;\n+       long i3612;\n+       long i3613;\n+       long i3614;\n+       long i3615;\n+       long i3616;\n+       long i3617;\n+       long i3618;\n+       long i3619;\n+       long i3620;\n+       long i3621;\n+       long i3622;\n+       long i3623;\n+       long i3624;\n+       long i3625;\n+       long i3626;\n+       long i3627;\n+       long i3628;\n+       long i3629;\n+       long i3630;\n+       long i3631;\n+       long i3632;\n+       long i3633;\n+       long i3634;\n+       long i3635;\n+       long i3636;\n+       long i3637;\n+       long i3638;\n+       long i3639;\n+       long i3640;\n+       long i3641;\n+       long i3642;\n+       long i3643;\n+       long i3644;\n+       long i3645;\n+       long i3646;\n+       long i3647;\n+       long i3648;\n+       long i3649;\n+       long i3650;\n+       long i3651;\n+       long i3652;\n+       long i3653;\n+       long i3654;\n+       long i3655;\n+       long i3656;\n+       long i3657;\n+       long i3658;\n+       long i3659;\n+       long i3660;\n+       long i3661;\n+       long i3662;\n+       long i3663;\n+       long i3664;\n+       long i3665;\n+       long i3666;\n+       long i3667;\n+       long i3668;\n+       long i3669;\n+       long i3670;\n+       long i3671;\n+       long i3672;\n+       long i3673;\n+       long i3674;\n+       long i3675;\n+       long i3676;\n+       long i3677;\n+       long i3678;\n+       long i3679;\n+       long i3680;\n+       long i3681;\n+       long i3682;\n+       long i3683;\n+       long i3684;\n+       long i3685;\n+       long i3686;\n+       long i3687;\n+       long i3688;\n+       long i3689;\n+       long i3690;\n+       long i3691;\n+       long i3692;\n+       long i3693;\n+       long i3694;\n+       long i3695;\n+       long i3696;\n+       long i3697;\n+       long i3698;\n+       long i3699;\n+       long i3700;\n+       long i3701;\n+       long i3702;\n+       long i3703;\n+       long i3704;\n+       long i3705;\n+       long i3706;\n+       long i3707;\n+       long i3708;\n+       long i3709;\n+       long i3710;\n+       long i3711;\n+       long i3712;\n+       long i3713;\n+       long i3714;\n+       long i3715;\n+       long i3716;\n+       long i3717;\n+       long i3718;\n+       long i3719;\n+       long i3720;\n+       long i3721;\n+       long i3722;\n+       long i3723;\n+       long i3724;\n+       long i3725;\n+       long i3726;\n+       long i3727;\n+       long i3728;\n+       long i3729;\n+       long i3730;\n+       long i3731;\n+       long i3732;\n+       long i3733;\n+       long i3734;\n+       long i3735;\n+       long i3736;\n+       long i3737;\n+       long i3738;\n+       long i3739;\n+       long i3740;\n+       long i3741;\n+       long i3742;\n+       long i3743;\n+       long i3744;\n+       long i3745;\n+       long i3746;\n+       long i3747;\n+       long i3748;\n+       long i3749;\n+       long i3750;\n+       long i3751;\n+       long i3752;\n+       long i3753;\n+       long i3754;\n+       long i3755;\n+       long i3756;\n+       long i3757;\n+       long i3758;\n+       long i3759;\n+       long i3760;\n+       long i3761;\n+       long i3762;\n+       long i3763;\n+       long i3764;\n+       long i3765;\n+       long i3766;\n+       long i3767;\n+       long i3768;\n+       long i3769;\n+       long i3770;\n+       long i3771;\n+       long i3772;\n+       long i3773;\n+       long i3774;\n+       long i3775;\n+       long i3776;\n+       long i3777;\n+       long i3778;\n+       long i3779;\n+       long i3780;\n+       long i3781;\n+       long i3782;\n+       long i3783;\n+       long i3784;\n+       long i3785;\n+       long i3786;\n+       long i3787;\n+       long i3788;\n+       long i3789;\n+       long i3790;\n+       long i3791;\n+       long i3792;\n+       long i3793;\n+       long i3794;\n+       long i3795;\n+       long i3796;\n+       long i3797;\n+       long i3798;\n+       long i3799;\n+       long i3800;\n+       long i3801;\n+       long i3802;\n+       long i3803;\n+       long i3804;\n+       long i3805;\n+       long i3806;\n+       long i3807;\n+       long i3808;\n+       long i3809;\n+       long i3810;\n+       long i3811;\n+       long i3812;\n+       long i3813;\n+       long i3814;\n+       long i3815;\n+       long i3816;\n+       long i3817;\n+       long i3818;\n+       long i3819;\n+       long i3820;\n+       long i3821;\n+       long i3822;\n+       long i3823;\n+       long i3824;\n+       long i3825;\n+       long i3826;\n+       long i3827;\n+       long i3828;\n+       long i3829;\n+       long i3830;\n+       long i3831;\n+       long i3832;\n+       long i3833;\n+       long i3834;\n+       long i3835;\n+       long i3836;\n+       long i3837;\n+       long i3838;\n+       long i3839;\n+       long i3840;\n+       long i3841;\n+       long i3842;\n+       long i3843;\n+       long i3844;\n+       long i3845;\n+       long i3846;\n+       long i3847;\n+       long i3848;\n+       long i3849;\n+       long i3850;\n+       long i3851;\n+       long i3852;\n+       long i3853;\n+       long i3854;\n+       long i3855;\n+       long i3856;\n+       long i3857;\n+       long i3858;\n+       long i3859;\n+       long i3860;\n+       long i3861;\n+       long i3862;\n+       long i3863;\n+       long i3864;\n+       long i3865;\n+       long i3866;\n+       long i3867;\n+       long i3868;\n+       long i3869;\n+       long i3870;\n+       long i3871;\n+       long i3872;\n+       long i3873;\n+       long i3874;\n+       long i3875;\n+       long i3876;\n+       long i3877;\n+       long i3878;\n+       long i3879;\n+       long i3880;\n+       long i3881;\n+       long i3882;\n+       long i3883;\n+       long i3884;\n+       long i3885;\n+       long i3886;\n+       long i3887;\n+       long i3888;\n+       long i3889;\n+       long i3890;\n+       long i3891;\n+       long i3892;\n+       long i3893;\n+       long i3894;\n+       long i3895;\n+       long i3896;\n+       long i3897;\n+       long i3898;\n+       long i3899;\n+       long i3900;\n+       long i3901;\n+       long i3902;\n+       long i3903;\n+       long i3904;\n+       long i3905;\n+       long i3906;\n+       long i3907;\n+       long i3908;\n+       long i3909;\n+       long i3910;\n+       long i3911;\n+       long i3912;\n+       long i3913;\n+       long i3914;\n+       long i3915;\n+       long i3916;\n+       long i3917;\n+       long i3918;\n+       long i3919;\n+       long i3920;\n+       long i3921;\n+       long i3922;\n+       long i3923;\n+       long i3924;\n+       long i3925;\n+       long i3926;\n+       long i3927;\n+       long i3928;\n+       long i3929;\n+       long i3930;\n+       long i3931;\n+       long i3932;\n+       long i3933;\n+       long i3934;\n+       long i3935;\n+       long i3936;\n+       long i3937;\n+       long i3938;\n+       long i3939;\n+       long i3940;\n+       long i3941;\n+       long i3942;\n+       long i3943;\n+       long i3944;\n+       long i3945;\n+       long i3946;\n+       long i3947;\n+       long i3948;\n+       long i3949;\n+       long i3950;\n+       long i3951;\n+       long i3952;\n+       long i3953;\n+       long i3954;\n+       long i3955;\n+       long i3956;\n+       long i3957;\n+       long i3958;\n+       long i3959;\n+       long i3960;\n+       long i3961;\n+       long i3962;\n+       long i3963;\n+       long i3964;\n+       long i3965;\n+       long i3966;\n+       long i3967;\n+       long i3968;\n+       long i3969;\n+       long i3970;\n+       long i3971;\n+       long i3972;\n+       long i3973;\n+       long i3974;\n+       long i3975;\n+       long i3976;\n+       long i3977;\n+       long i3978;\n+       long i3979;\n+       long i3980;\n+       long i3981;\n+       long i3982;\n+       long i3983;\n+       long i3984;\n+       long i3985;\n+       long i3986;\n+       long i3987;\n+       long i3988;\n+       long i3989;\n+       long i3990;\n+       long i3991;\n+       long i3992;\n+       long i3993;\n+       long i3994;\n+       long i3995;\n+       long i3996;\n+       long i3997;\n+       long i3998;\n+       long i3999;\n+       long i4000;\n+       long i4001;\n+       long i4002;\n+       long i4003;\n+       long i4004;\n+       long i4005;\n+       long i4006;\n+       long i4007;\n+       long i4008;\n+       long i4009;\n+       long i4010;\n+       long i4011;\n+       long i4012;\n+       long i4013;\n+       long i4014;\n+       long i4015;\n+       long i4016;\n+       long i4017;\n+       long i4018;\n+       long i4019;\n+       long i4020;\n+       long i4021;\n+       long i4022;\n+       long i4023;\n+       long i4024;\n+       long i4025;\n+       long i4026;\n+       long i4027;\n+       long i4028;\n+       long i4029;\n+       long i4030;\n+       long i4031;\n+       long i4032;\n+       long i4033;\n+       long i4034;\n+       long i4035;\n+       long i4036;\n+       long i4037;\n+       long i4038;\n+       long i4039;\n+       long i4040;\n+       long i4041;\n+       long i4042;\n+       long i4043;\n+       long i4044;\n+       long i4045;\n+       long i4046;\n+       long i4047;\n+       long i4048;\n+       long i4049;\n+       long i4050;\n+       long i4051;\n+       long i4052;\n+       long i4053;\n+       long i4054;\n+       long i4055;\n+       long i4056;\n+       long i4057;\n+       long i4058;\n+       long i4059;\n+       long i4060;\n+       long i4061;\n+       long i4062;\n+       long i4063;\n+       long i4064;\n+       long i4065;\n+       long i4066;\n+       long i4067;\n+       long i4068;\n+       long i4069;\n+       long i4070;\n+       long i4071;\n+       long i4072;\n+       long i4073;\n+       long i4074;\n+       long i4075;\n+       long i4076;\n+       long i4077;\n+       long i4078;\n+       long i4079;\n+       long i4080;\n+       long i4081;\n+       long i4082;\n+       long i4083;\n+       long i4084;\n+       long i4085;\n+       long i4086;\n+       long i4087;\n+       long i4088;\n+       long i4089;\n+       long i4090;\n+       long i4091;\n+       long i4092;\n+       long i4093;\n+       long i4094;\n+       long i4095;\n+       long i4096;\n+       long i4097;\n+       long i4098;\n+       long i4099;\n+       long i4100;\n+       long i4101;\n+       long i4102;\n+       long i4103;\n+       long i4104;\n+       long i4105;\n+       long i4106;\n+       long i4107;\n+       long i4108;\n+       long i4109;\n+       long i4110;\n+       long i4111;\n+       long i4112;\n+       long i4113;\n+       long i4114;\n+       long i4115;\n+       long i4116;\n+       long i4117;\n+       long i4118;\n+       long i4119;\n+       long i4120;\n+       long i4121;\n+       long i4122;\n+       long i4123;\n+       long i4124;\n+       long i4125;\n+       long i4126;\n+       long i4127;\n+       long i4128;\n+       long i4129;\n+       long i4130;\n+       long i4131;\n+       long i4132;\n+       long i4133;\n+       long i4134;\n+       long i4135;\n+       long i4136;\n+       long i4137;\n+       long i4138;\n+       long i4139;\n+       long i4140;\n+       long i4141;\n+       long i4142;\n+       long i4143;\n+       long i4144;\n+       long i4145;\n+       long i4146;\n+       long i4147;\n+       long i4148;\n+       long i4149;\n+       long i4150;\n+       long i4151;\n+       long i4152;\n+       long i4153;\n+       long i4154;\n+       long i4155;\n+       long i4156;\n+       long i4157;\n+       long i4158;\n+       long i4159;\n+       long i4160;\n+       long i4161;\n+       long i4162;\n+       long i4163;\n+       long i4164;\n+       long i4165;\n+       long i4166;\n+       long i4167;\n+       long i4168;\n+       long i4169;\n+       long i4170;\n+       long i4171;\n+       long i4172;\n+       long i4173;\n+       long i4174;\n+       long i4175;\n+       long i4176;\n+       long i4177;\n+       long i4178;\n+       long i4179;\n+       long i4180;\n+       long i4181;\n+       long i4182;\n+       long i4183;\n+       long i4184;\n+       long i4185;\n+       long i4186;\n+       long i4187;\n+       long i4188;\n+       long i4189;\n+       long i4190;\n+       long i4191;\n+       long i4192;\n+       long i4193;\n+       long i4194;\n+       long i4195;\n+       long i4196;\n+       long i4197;\n+       long i4198;\n+       long i4199;\n+       long i4200;\n+       long i4201;\n+       long i4202;\n+       long i4203;\n+       long i4204;\n+       long i4205;\n+       long i4206;\n+       long i4207;\n+       long i4208;\n+       long i4209;\n+       long i4210;\n+       long i4211;\n+       long i4212;\n+       long i4213;\n+       long i4214;\n+       long i4215;\n+       long i4216;\n+       long i4217;\n+       long i4218;\n+       long i4219;\n+       long i4220;\n+       long i4221;\n+       long i4222;\n+       long i4223;\n+       long i4224;\n+       long i4225;\n+       long i4226;\n+       long i4227;\n+       long i4228;\n+       long i4229;\n+       long i4230;\n+       long i4231;\n+       long i4232;\n+       long i4233;\n+       long i4234;\n+       long i4235;\n+       long i4236;\n+       long i4237;\n+       long i4238;\n+       long i4239;\n+       long i4240;\n+       long i4241;\n+       long i4242;\n+       long i4243;\n+       long i4244;\n+       long i4245;\n+       long i4246;\n+       long i4247;\n+       long i4248;\n+       long i4249;\n+       long i4250;\n+       long i4251;\n+       long i4252;\n+       long i4253;\n+       long i4254;\n+       long i4255;\n+       long i4256;\n+       long i4257;\n+       long i4258;\n+       long i4259;\n+       long i4260;\n+       long i4261;\n+       long i4262;\n+       long i4263;\n+       long i4264;\n+       long i4265;\n+       long i4266;\n+       long i4267;\n+       long i4268;\n+       long i4269;\n+       long i4270;\n+       long i4271;\n+       long i4272;\n+       long i4273;\n+       long i4274;\n+       long i4275;\n+       long i4276;\n+       long i4277;\n+       long i4278;\n+       long i4279;\n+       long i4280;\n+       long i4281;\n+       long i4282;\n+       long i4283;\n+       long i4284;\n+       long i4285;\n+       long i4286;\n+       long i4287;\n+       long i4288;\n+       long i4289;\n+       long i4290;\n+       long i4291;\n+       long i4292;\n+       long i4293;\n+       long i4294;\n+       long i4295;\n+       long i4296;\n+       long i4297;\n+       long i4298;\n+       long i4299;\n+       long i4300;\n+       long i4301;\n+       long i4302;\n+       long i4303;\n+       long i4304;\n+       long i4305;\n+       long i4306;\n+       long i4307;\n+       long i4308;\n+       long i4309;\n+       long i4310;\n+       long i4311;\n+       long i4312;\n+       long i4313;\n+       long i4314;\n+       long i4315;\n+       long i4316;\n+       long i4317;\n+       long i4318;\n+       long i4319;\n+       long i4320;\n+       long i4321;\n+       long i4322;\n+       long i4323;\n+       long i4324;\n+       long i4325;\n+       long i4326;\n+       long i4327;\n+       long i4328;\n+       long i4329;\n+       long i4330;\n+       long i4331;\n+       long i4332;\n+       long i4333;\n+       long i4334;\n+       long i4335;\n+       long i4336;\n+       long i4337;\n+       long i4338;\n+       long i4339;\n+       long i4340;\n+       long i4341;\n+       long i4342;\n+       long i4343;\n+       long i4344;\n+       long i4345;\n+       long i4346;\n+       long i4347;\n+       long i4348;\n+       long i4349;\n+       long i4350;\n+       long i4351;\n+       long i4352;\n+       long i4353;\n+       long i4354;\n+       long i4355;\n+       long i4356;\n+       long i4357;\n+       long i4358;\n+       long i4359;\n+       long i4360;\n+       long i4361;\n+       long i4362;\n+       long i4363;\n+       long i4364;\n+       long i4365;\n+       long i4366;\n+       long i4367;\n+       long i4368;\n+       long i4369;\n+       long i4370;\n+       long i4371;\n+       long i4372;\n+       long i4373;\n+       long i4374;\n+       long i4375;\n+       long i4376;\n+       long i4377;\n+       long i4378;\n+       long i4379;\n+       long i4380;\n+       long i4381;\n+       long i4382;\n+       long i4383;\n+       long i4384;\n+       long i4385;\n+       long i4386;\n+       long i4387;\n+       long i4388;\n+       long i4389;\n+       long i4390;\n+       long i4391;\n+       long i4392;\n+       long i4393;\n+       long i4394;\n+       long i4395;\n+       long i4396;\n+       long i4397;\n+       long i4398;\n+       long i4399;\n+       long i4400;\n+       long i4401;\n+       long i4402;\n+       long i4403;\n+       long i4404;\n+       long i4405;\n+       long i4406;\n+       long i4407;\n+       long i4408;\n+       long i4409;\n+       long i4410;\n+       long i4411;\n+       long i4412;\n+       long i4413;\n+       long i4414;\n+       long i4415;\n+       long i4416;\n+       long i4417;\n+       long i4418;\n+       long i4419;\n+       long i4420;\n+       long i4421;\n+       long i4422;\n+       long i4423;\n+       long i4424;\n+       long i4425;\n+       long i4426;\n+       long i4427;\n+       long i4428;\n+       long i4429;\n+       long i4430;\n+       long i4431;\n+       long i4432;\n+       long i4433;\n+       long i4434;\n+       long i4435;\n+       long i4436;\n+       long i4437;\n+       long i4438;\n+       long i4439;\n+       long i4440;\n+       long i4441;\n+       long i4442;\n+       long i4443;\n+       long i4444;\n+       long i4445;\n+       long i4446;\n+       long i4447;\n+       long i4448;\n+       long i4449;\n+       long i4450;\n+       long i4451;\n+       long i4452;\n+       long i4453;\n+       long i4454;\n+       long i4455;\n+       long i4456;\n+       long i4457;\n+       long i4458;\n+       long i4459;\n+       long i4460;\n+       long i4461;\n+       long i4462;\n+       long i4463;\n+       long i4464;\n+       long i4465;\n+       long i4466;\n+       long i4467;\n+       long i4468;\n+       long i4469;\n+       long i4470;\n+       long i4471;\n+       long i4472;\n+       long i4473;\n+       long i4474;\n+       long i4475;\n+       long i4476;\n+       long i4477;\n+       long i4478;\n+       long i4479;\n+       long i4480;\n+       long i4481;\n+       long i4482;\n+       long i4483;\n+       long i4484;\n+       long i4485;\n+       long i4486;\n+       long i4487;\n+       long i4488;\n+       long i4489;\n+       long i4490;\n+       long i4491;\n+       long i4492;\n+       long i4493;\n+       long i4494;\n+       long i4495;\n+       long i4496;\n+       long i4497;\n+       long i4498;\n+       long i4499;\n+       long i4500;\n+       long i4501;\n+       long i4502;\n+       long i4503;\n+       long i4504;\n+       long i4505;\n+       long i4506;\n+       long i4507;\n+       long i4508;\n+       long i4509;\n+       long i4510;\n+       long i4511;\n+       long i4512;\n+       long i4513;\n+       long i4514;\n+       long i4515;\n+       long i4516;\n+       long i4517;\n+       long i4518;\n+       long i4519;\n+       long i4520;\n+       long i4521;\n+       long i4522;\n+       long i4523;\n+       long i4524;\n+       long i4525;\n+       long i4526;\n+       long i4527;\n+       long i4528;\n+       long i4529;\n+       long i4530;\n+       long i4531;\n+       long i4532;\n+       long i4533;\n+       long i4534;\n+       long i4535;\n+       long i4536;\n+       long i4537;\n+       long i4538;\n+       long i4539;\n+       long i4540;\n+       long i4541;\n+       long i4542;\n+       long i4543;\n+       long i4544;\n+       long i4545;\n+       long i4546;\n+       long i4547;\n+       long i4548;\n+       long i4549;\n+       long i4550;\n+       long i4551;\n+       long i4552;\n+       long i4553;\n+       long i4554;\n+       long i4555;\n+       long i4556;\n+       long i4557;\n+       long i4558;\n+       long i4559;\n+       long i4560;\n+       long i4561;\n+       long i4562;\n+       long i4563;\n+       long i4564;\n+       long i4565;\n+       long i4566;\n+       long i4567;\n+       long i4568;\n+       long i4569;\n+       long i4570;\n+       long i4571;\n+       long i4572;\n+       long i4573;\n+       long i4574;\n+       long i4575;\n+       long i4576;\n+       long i4577;\n+       long i4578;\n+       long i4579;\n+       long i4580;\n+       long i4581;\n+       long i4582;\n+       long i4583;\n+       long i4584;\n+       long i4585;\n+       long i4586;\n+       long i4587;\n+       long i4588;\n+       long i4589;\n+       long i4590;\n+       long i4591;\n+       long i4592;\n+       long i4593;\n+       long i4594;\n+       long i4595;\n+       long i4596;\n+       long i4597;\n+       long i4598;\n+       long i4599;\n+       long i4600;\n+       long i4601;\n+       long i4602;\n+       long i4603;\n+       long i4604;\n+       long i4605;\n+       long i4606;\n+       long i4607;\n+       long i4608;\n+       long i4609;\n+       long i4610;\n+       long i4611;\n+       long i4612;\n+       long i4613;\n+       long i4614;\n+       long i4615;\n+       long i4616;\n+       long i4617;\n+       long i4618;\n+       long i4619;\n+       long i4620;\n+       long i4621;\n+       long i4622;\n+       long i4623;\n+       long i4624;\n+       long i4625;\n+       long i4626;\n+       long i4627;\n+       long i4628;\n+       long i4629;\n+       long i4630;\n+       long i4631;\n+       long i4632;\n+       long i4633;\n+       long i4634;\n+       long i4635;\n+       long i4636;\n+       long i4637;\n+       long i4638;\n+       long i4639;\n+       long i4640;\n+       long i4641;\n+       long i4642;\n+       long i4643;\n+       long i4644;\n+       long i4645;\n+       long i4646;\n+       long i4647;\n+       long i4648;\n+       long i4649;\n+       long i4650;\n+       long i4651;\n+       long i4652;\n+       long i4653;\n+       long i4654;\n+       long i4655;\n+       long i4656;\n+       long i4657;\n+       long i4658;\n+       long i4659;\n+       long i4660;\n+       long i4661;\n+       long i4662;\n+       long i4663;\n+       long i4664;\n+       long i4665;\n+       long i4666;\n+       long i4667;\n+       long i4668;\n+       long i4669;\n+       long i4670;\n+       long i4671;\n+       long i4672;\n+       long i4673;\n+       long i4674;\n+       long i4675;\n+       long i4676;\n+       long i4677;\n+       long i4678;\n+       long i4679;\n+       long i4680;\n+       long i4681;\n+       long i4682;\n+       long i4683;\n+       long i4684;\n+       long i4685;\n+       long i4686;\n+       long i4687;\n+       long i4688;\n+       long i4689;\n+       long i4690;\n+       long i4691;\n+       long i4692;\n+       long i4693;\n+       long i4694;\n+       long i4695;\n+       long i4696;\n+       long i4697;\n+       long i4698;\n+       long i4699;\n+       long i4700;\n+       long i4701;\n+       long i4702;\n+       long i4703;\n+       long i4704;\n+       long i4705;\n+       long i4706;\n+       long i4707;\n+       long i4708;\n+       long i4709;\n+       long i4710;\n+       long i4711;\n+       long i4712;\n+       long i4713;\n+       long i4714;\n+       long i4715;\n+       long i4716;\n+       long i4717;\n+       long i4718;\n+       long i4719;\n+       long i4720;\n+       long i4721;\n+       long i4722;\n+       long i4723;\n+       long i4724;\n+       long i4725;\n+       long i4726;\n+       long i4727;\n+       long i4728;\n+       long i4729;\n+       long i4730;\n+       long i4731;\n+       long i4732;\n+       long i4733;\n+       long i4734;\n+       long i4735;\n+       long i4736;\n+       long i4737;\n+       long i4738;\n+       long i4739;\n+       long i4740;\n+       long i4741;\n+       long i4742;\n+       long i4743;\n+       long i4744;\n+       long i4745;\n+       long i4746;\n+       long i4747;\n+       long i4748;\n+       long i4749;\n+       long i4750;\n+       long i4751;\n+       long i4752;\n+       long i4753;\n+       long i4754;\n+       long i4755;\n+       long i4756;\n+       long i4757;\n+       long i4758;\n+       long i4759;\n+       long i4760;\n+       long i4761;\n+       long i4762;\n+       long i4763;\n+       long i4764;\n+       long i4765;\n+       long i4766;\n+       long i4767;\n+       long i4768;\n+       long i4769;\n+       long i4770;\n+       long i4771;\n+       long i4772;\n+       long i4773;\n+       long i4774;\n+       long i4775;\n+       long i4776;\n+       long i4777;\n+       long i4778;\n+       long i4779;\n+       long i4780;\n+       long i4781;\n+       long i4782;\n+       long i4783;\n+       long i4784;\n+       long i4785;\n+       long i4786;\n+       long i4787;\n+       long i4788;\n+       long i4789;\n+       long i4790;\n+       long i4791;\n+       long i4792;\n+       long i4793;\n+       long i4794;\n+       long i4795;\n+       long i4796;\n+       long i4797;\n+       long i4798;\n+       long i4799;\n+       long i4800;\n+       long i4801;\n+       long i4802;\n+       long i4803;\n+       long i4804;\n+       long i4805;\n+       long i4806;\n+       long i4807;\n+       long i4808;\n+       long i4809;\n+       long i4810;\n+       long i4811;\n+       long i4812;\n+       long i4813;\n+       long i4814;\n+       long i4815;\n+       long i4816;\n+       long i4817;\n+       long i4818;\n+       long i4819;\n+       long i4820;\n+       long i4821;\n+       long i4822;\n+       long i4823;\n+       long i4824;\n+       long i4825;\n+       long i4826;\n+       long i4827;\n+       long i4828;\n+       long i4829;\n+       long i4830;\n+       long i4831;\n+       long i4832;\n+       long i4833;\n+       long i4834;\n+       long i4835;\n+       long i4836;\n+       long i4837;\n+       long i4838;\n+       long i4839;\n+       long i4840;\n+       long i4841;\n+       long i4842;\n+       long i4843;\n+       long i4844;\n+       long i4845;\n+       long i4846;\n+       long i4847;\n+       long i4848;\n+       long i4849;\n+       long i4850;\n+       long i4851;\n+       long i4852;\n+       long i4853;\n+       long i4854;\n+       long i4855;\n+       long i4856;\n+       long i4857;\n+       long i4858;\n+       long i4859;\n+       long i4860;\n+       long i4861;\n+       long i4862;\n+       long i4863;\n+       long i4864;\n+       long i4865;\n+       long i4866;\n+       long i4867;\n+       long i4868;\n+       long i4869;\n+       long i4870;\n+       long i4871;\n+       long i4872;\n+       long i4873;\n+       long i4874;\n+       long i4875;\n+       long i4876;\n+       long i4877;\n+       long i4878;\n+       long i4879;\n+       long i4880;\n+       long i4881;\n+       long i4882;\n+       long i4883;\n+       long i4884;\n+       long i4885;\n+       long i4886;\n+       long i4887;\n+       long i4888;\n+       long i4889;\n+       long i4890;\n+       long i4891;\n+       long i4892;\n+       long i4893;\n+       long i4894;\n+       long i4895;\n+       long i4896;\n+       long i4897;\n+       long i4898;\n+       long i4899;\n+       long i4900;\n+       long i4901;\n+       long i4902;\n+       long i4903;\n+       long i4904;\n+       long i4905;\n+       long i4906;\n+       long i4907;\n+       long i4908;\n+       long i4909;\n+       long i4910;\n+       long i4911;\n+       long i4912;\n+       long i4913;\n+       long i4914;\n+       long i4915;\n+       long i4916;\n+       long i4917;\n+       long i4918;\n+       long i4919;\n+       long i4920;\n+       long i4921;\n+       long i4922;\n+       long i4923;\n+       long i4924;\n+       long i4925;\n+       long i4926;\n+       long i4927;\n+       long i4928;\n+       long i4929;\n+       long i4930;\n+       long i4931;\n+       long i4932;\n+       long i4933;\n+       long i4934;\n+       long i4935;\n+       long i4936;\n+       long i4937;\n+       long i4938;\n+       long i4939;\n+       long i4940;\n+       long i4941;\n+       long i4942;\n+       long i4943;\n+       long i4944;\n+       long i4945;\n+       long i4946;\n+       long i4947;\n+       long i4948;\n+       long i4949;\n+       long i4950;\n+       long i4951;\n+       long i4952;\n+       long i4953;\n+       long i4954;\n+       long i4955;\n+       long i4956;\n+       long i4957;\n+       long i4958;\n+       long i4959;\n+       long i4960;\n+       long i4961;\n+       long i4962;\n+       long i4963;\n+       long i4964;\n+       long i4965;\n+       long i4966;\n+       long i4967;\n+       long i4968;\n+       long i4969;\n+       long i4970;\n+       long i4971;\n+       long i4972;\n+       long i4973;\n+       long i4974;\n+       long i4975;\n+       long i4976;\n+       long i4977;\n+       long i4978;\n+       long i4979;\n+       long i4980;\n+       long i4981;\n+       long i4982;\n+       long i4983;\n+       long i4984;\n+       long i4985;\n+       long i4986;\n+       long i4987;\n+       long i4988;\n+       long i4989;\n+       long i4990;\n+       long i4991;\n+       long i4992;\n+       long i4993;\n+       long i4994;\n+       long i4995;\n+       long i4996;\n+       long i4997;\n+       long i4998;\n+       long i4999;\n+       long i5000;\n+       long i5001;\n+       long i5002;\n+       long i5003;\n+       long i5004;\n+       long i5005;\n+       long i5006;\n+       long i5007;\n+       long i5008;\n+       long i5009;\n+       long i5010;\n+       long i5011;\n+       long i5012;\n+       long i5013;\n+       long i5014;\n+       long i5015;\n+       long i5016;\n+       long i5017;\n+       long i5018;\n+       long i5019;\n+       long i5020;\n+       long i5021;\n+       long i5022;\n+       long i5023;\n+       long i5024;\n+       long i5025;\n+       long i5026;\n+       long i5027;\n+       long i5028;\n+       long i5029;\n+       long i5030;\n+       long i5031;\n+       long i5032;\n+       long i5033;\n+       long i5034;\n+       long i5035;\n+       long i5036;\n+       long i5037;\n+       long i5038;\n+       long i5039;\n+       long i5040;\n+       long i5041;\n+       long i5042;\n+       long i5043;\n+       long i5044;\n+       long i5045;\n+       long i5046;\n+       long i5047;\n+       long i5048;\n+       long i5049;\n+       long i5050;\n+       long i5051;\n+       long i5052;\n+       long i5053;\n+       long i5054;\n+       long i5055;\n+       long i5056;\n+       long i5057;\n+       long i5058;\n+       long i5059;\n+       long i5060;\n+       long i5061;\n+       long i5062;\n+       long i5063;\n+       long i5064;\n+       long i5065;\n+       long i5066;\n+       long i5067;\n+       long i5068;\n+       long i5069;\n+       long i5070;\n+       long i5071;\n+       long i5072;\n+       long i5073;\n+       long i5074;\n+       long i5075;\n+       long i5076;\n+       long i5077;\n+       long i5078;\n+       long i5079;\n+       long i5080;\n+       long i5081;\n+       long i5082;\n+       long i5083;\n+       long i5084;\n+       long i5085;\n+       long i5086;\n+       long i5087;\n+       long i5088;\n+       long i5089;\n+       long i5090;\n+       long i5091;\n+       long i5092;\n+       long i5093;\n+       long i5094;\n+       long i5095;\n+       long i5096;\n+       long i5097;\n+       long i5098;\n+       long i5099;\n+       long i5100;\n+       long i5101;\n+       long i5102;\n+       long i5103;\n+       long i5104;\n+       long i5105;\n+       long i5106;\n+       long i5107;\n+       long i5108;\n+       long i5109;\n+       long i5110;\n+       long i5111;\n+       long i5112;\n+       long i5113;\n+       long i5114;\n+       long i5115;\n+       long i5116;\n+       long i5117;\n+       long i5118;\n+       long i5119;\n+       long i5120;\n+       long i5121;\n+       long i5122;\n+       long i5123;\n+       long i5124;\n+       long i5125;\n+       long i5126;\n+       long i5127;\n+       long i5128;\n+       long i5129;\n+       long i5130;\n+       long i5131;\n+       long i5132;\n+       long i5133;\n+       long i5134;\n+       long i5135;\n+       long i5136;\n+       long i5137;\n+       long i5138;\n+       long i5139;\n+       long i5140;\n+       long i5141;\n+       long i5142;\n+       long i5143;\n+       long i5144;\n+       long i5145;\n+       long i5146;\n+       long i5147;\n+       long i5148;\n+       long i5149;\n+       long i5150;\n+       long i5151;\n+       long i5152;\n+       long i5153;\n+       long i5154;\n+       long i5155;\n+       long i5156;\n+       long i5157;\n+       long i5158;\n+       long i5159;\n+       long i5160;\n+       long i5161;\n+       long i5162;\n+       long i5163;\n+       long i5164;\n+       long i5165;\n+       long i5166;\n+       long i5167;\n+       long i5168;\n+       long i5169;\n+       long i5170;\n+       long i5171;\n+       long i5172;\n+       long i5173;\n+       long i5174;\n+       long i5175;\n+       long i5176;\n+       long i5177;\n+       long i5178;\n+       long i5179;\n+       long i5180;\n+       long i5181;\n+       long i5182;\n+       long i5183;\n+       long i5184;\n+       long i5185;\n+       long i5186;\n+       long i5187;\n+       long i5188;\n+       long i5189;\n+       long i5190;\n+       long i5191;\n+       long i5192;\n+       long i5193;\n+       long i5194;\n+       long i5195;\n+       long i5196;\n+       long i5197;\n+       long i5198;\n+       long i5199;\n+       long i5200;\n+       long i5201;\n+       long i5202;\n+       long i5203;\n+       long i5204;\n+       long i5205;\n+       long i5206;\n+       long i5207;\n+       long i5208;\n+       long i5209;\n+       long i5210;\n+       long i5211;\n+       long i5212;\n+       long i5213;\n+       long i5214;\n+       long i5215;\n+       long i5216;\n+       long i5217;\n+       long i5218;\n+       long i5219;\n+       long i5220;\n+       long i5221;\n+       long i5222;\n+       long i5223;\n+       long i5224;\n+       long i5225;\n+       long i5226;\n+       long i5227;\n+       long i5228;\n+       long i5229;\n+       long i5230;\n+       long i5231;\n+       long i5232;\n+       long i5233;\n+       long i5234;\n+       long i5235;\n+       long i5236;\n+       long i5237;\n+       long i5238;\n+       long i5239;\n+       long i5240;\n+       long i5241;\n+       long i5242;\n+       long i5243;\n+       long i5244;\n+       long i5245;\n+       long i5246;\n+       long i5247;\n+       long i5248;\n+       long i5249;\n+       long i5250;\n+       long i5251;\n+       long i5252;\n+       long i5253;\n+       long i5254;\n+       long i5255;\n+       long i5256;\n+       long i5257;\n+       long i5258;\n+       long i5259;\n+       long i5260;\n+       long i5261;\n+       long i5262;\n+       long i5263;\n+       long i5264;\n+       long i5265;\n+       long i5266;\n+       long i5267;\n+       long i5268;\n+       long i5269;\n+       long i5270;\n+       long i5271;\n+       long i5272;\n+       long i5273;\n+       long i5274;\n+       long i5275;\n+       long i5276;\n+       long i5277;\n+       long i5278;\n+       long i5279;\n+       long i5280;\n+       long i5281;\n+       long i5282;\n+       long i5283;\n+       long i5284;\n+       long i5285;\n+       long i5286;\n+       long i5287;\n+       long i5288;\n+       long i5289;\n+       long i5290;\n+       long i5291;\n+       long i5292;\n+       long i5293;\n+       long i5294;\n+       long i5295;\n+       long i5296;\n+       long i5297;\n+       long i5298;\n+       long i5299;\n+       long i5300;\n+       long i5301;\n+       long i5302;\n+       long i5303;\n+       long i5304;\n+       long i5305;\n+       long i5306;\n+       long i5307;\n+       long i5308;\n+       long i5309;\n+       long i5310;\n+       long i5311;\n+       long i5312;\n+       long i5313;\n+       long i5314;\n+       long i5315;\n+       long i5316;\n+       long i5317;\n+       long i5318;\n+       long i5319;\n+       long i5320;\n+       long i5321;\n+       long i5322;\n+       long i5323;\n+       long i5324;\n+       long i5325;\n+       long i5326;\n+       long i5327;\n+       long i5328;\n+       long i5329;\n+       long i5330;\n+       long i5331;\n+       long i5332;\n+       long i5333;\n+       long i5334;\n+       long i5335;\n+       long i5336;\n+       long i5337;\n+       long i5338;\n+       long i5339;\n+       long i5340;\n+       long i5341;\n+       long i5342;\n+       long i5343;\n+       long i5344;\n+       long i5345;\n+       long i5346;\n+       long i5347;\n+       long i5348;\n+       long i5349;\n+       long i5350;\n+       long i5351;\n+       long i5352;\n+       long i5353;\n+       long i5354;\n+       long i5355;\n+       long i5356;\n+       long i5357;\n+       long i5358;\n+       long i5359;\n+       long i5360;\n+       long i5361;\n+       long i5362;\n+       long i5363;\n+       long i5364;\n+       long i5365;\n+       long i5366;\n+       long i5367;\n+       long i5368;\n+       long i5369;\n+       long i5370;\n+       long i5371;\n+       long i5372;\n+       long i5373;\n+       long i5374;\n+       long i5375;\n+       long i5376;\n+       long i5377;\n+       long i5378;\n+       long i5379;\n+       long i5380;\n+       long i5381;\n+       long i5382;\n+       long i5383;\n+       long i5384;\n+       long i5385;\n+       long i5386;\n+       long i5387;\n+       long i5388;\n+       long i5389;\n+       long i5390;\n+       long i5391;\n+       long i5392;\n+       long i5393;\n+       long i5394;\n+       long i5395;\n+       long i5396;\n+       long i5397;\n+       long i5398;\n+       long i5399;\n+       long i5400;\n+       long i5401;\n+       long i5402;\n+       long i5403;\n+       long i5404;\n+       long i5405;\n+       long i5406;\n+       long i5407;\n+       long i5408;\n+       long i5409;\n+       long i5410;\n+       long i5411;\n+       long i5412;\n+       long i5413;\n+       long i5414;\n+       long i5415;\n+       long i5416;\n+       long i5417;\n+       long i5418;\n+       long i5419;\n+       long i5420;\n+       long i5421;\n+       long i5422;\n+       long i5423;\n+       long i5424;\n+       long i5425;\n+       long i5426;\n+       long i5427;\n+       long i5428;\n+       long i5429;\n+       long i5430;\n+       long i5431;\n+       long i5432;\n+       long i5433;\n+       long i5434;\n+       long i5435;\n+       long i5436;\n+       long i5437;\n+       long i5438;\n+       long i5439;\n+       long i5440;\n+       long i5441;\n+       long i5442;\n+       long i5443;\n+       long i5444;\n+       long i5445;\n+       long i5446;\n+       long i5447;\n+       long i5448;\n+       long i5449;\n+       long i5450;\n+       long i5451;\n+       long i5452;\n+       long i5453;\n+       long i5454;\n+       long i5455;\n+       long i5456;\n+       long i5457;\n+       long i5458;\n+       long i5459;\n+       long i5460;\n+       long i5461;\n+       long i5462;\n+       long i5463;\n+       long i5464;\n+       long i5465;\n+       long i5466;\n+       long i5467;\n+       long i5468;\n+       long i5469;\n+       long i5470;\n+       long i5471;\n+       long i5472;\n+       long i5473;\n+       long i5474;\n+       long i5475;\n+       long i5476;\n+       long i5477;\n+       long i5478;\n+       long i5479;\n+       long i5480;\n+       long i5481;\n+       long i5482;\n+       long i5483;\n+       long i5484;\n+       long i5485;\n+       long i5486;\n+       long i5487;\n+       long i5488;\n+       long i5489;\n+       long i5490;\n+       long i5491;\n+       long i5492;\n+       long i5493;\n+       long i5494;\n+       long i5495;\n+       long i5496;\n+       long i5497;\n+       long i5498;\n+       long i5499;\n+       long i5500;\n+       long i5501;\n+       long i5502;\n+       long i5503;\n+       long i5504;\n+       long i5505;\n+       long i5506;\n+       long i5507;\n+       long i5508;\n+       long i5509;\n+       long i5510;\n+       long i5511;\n+       long i5512;\n+       long i5513;\n+       long i5514;\n+       long i5515;\n+       long i5516;\n+       long i5517;\n+       long i5518;\n+       long i5519;\n+       long i5520;\n+       long i5521;\n+       long i5522;\n+       long i5523;\n+       long i5524;\n+       long i5525;\n+       long i5526;\n+       long i5527;\n+       long i5528;\n+       long i5529;\n+       long i5530;\n+       long i5531;\n+       long i5532;\n+       long i5533;\n+       long i5534;\n+       long i5535;\n+       long i5536;\n+       long i5537;\n+       long i5538;\n+       long i5539;\n+       long i5540;\n+       long i5541;\n+       long i5542;\n+       long i5543;\n+       long i5544;\n+       long i5545;\n+       long i5546;\n+       long i5547;\n+       long i5548;\n+       long i5549;\n+       long i5550;\n+       long i5551;\n+       long i5552;\n+       long i5553;\n+       long i5554;\n+       long i5555;\n+       long i5556;\n+       long i5557;\n+       long i5558;\n+       long i5559;\n+       long i5560;\n+       long i5561;\n+       long i5562;\n+       long i5563;\n+       long i5564;\n+       long i5565;\n+       long i5566;\n+       long i5567;\n+       long i5568;\n+       long i5569;\n+       long i5570;\n+       long i5571;\n+       long i5572;\n+       long i5573;\n+       long i5574;\n+       long i5575;\n+       long i5576;\n+       long i5577;\n+       long i5578;\n+       long i5579;\n+       long i5580;\n+       long i5581;\n+       long i5582;\n+       long i5583;\n+       long i5584;\n+       long i5585;\n+       long i5586;\n+       long i5587;\n+       long i5588;\n+       long i5589;\n+       long i5590;\n+       long i5591;\n+       long i5592;\n+       long i5593;\n+       long i5594;\n+       long i5595;\n+       long i5596;\n+       long i5597;\n+       long i5598;\n+       long i5599;\n+       long i5600;\n+       long i5601;\n+       long i5602;\n+       long i5603;\n+       long i5604;\n+       long i5605;\n+       long i5606;\n+       long i5607;\n+       long i5608;\n+       long i5609;\n+       long i5610;\n+       long i5611;\n+       long i5612;\n+       long i5613;\n+       long i5614;\n+       long i5615;\n+       long i5616;\n+       long i5617;\n+       long i5618;\n+       long i5619;\n+       long i5620;\n+       long i5621;\n+       long i5622;\n+       long i5623;\n+       long i5624;\n+       long i5625;\n+       long i5626;\n+       long i5627;\n+       long i5628;\n+       long i5629;\n+       long i5630;\n+       long i5631;\n+       long i5632;\n+       long i5633;\n+       long i5634;\n+       long i5635;\n+       long i5636;\n+       long i5637;\n+       long i5638;\n+       long i5639;\n+       long i5640;\n+       long i5641;\n+       long i5642;\n+       long i5643;\n+       long i5644;\n+       long i5645;\n+       long i5646;\n+       long i5647;\n+       long i5648;\n+       long i5649;\n+       long i5650;\n+       long i5651;\n+       long i5652;\n+       long i5653;\n+       long i5654;\n+       long i5655;\n+       long i5656;\n+       long i5657;\n+       long i5658;\n+       long i5659;\n+       long i5660;\n+       long i5661;\n+       long i5662;\n+       long i5663;\n+       long i5664;\n+       long i5665;\n+       long i5666;\n+       long i5667;\n+       long i5668;\n+       long i5669;\n+       long i5670;\n+       long i5671;\n+       long i5672;\n+       long i5673;\n+       long i5674;\n+       long i5675;\n+       long i5676;\n+       long i5677;\n+       long i5678;\n+       long i5679;\n+       long i5680;\n+       long i5681;\n+       long i5682;\n+       long i5683;\n+       long i5684;\n+       long i5685;\n+       long i5686;\n+       long i5687;\n+       long i5688;\n+       long i5689;\n+       long i5690;\n+       long i5691;\n+       long i5692;\n+       long i5693;\n+       long i5694;\n+       long i5695;\n+       long i5696;\n+       long i5697;\n+       long i5698;\n+       long i5699;\n+       long i5700;\n+       long i5701;\n+       long i5702;\n+       long i5703;\n+       long i5704;\n+       long i5705;\n+       long i5706;\n+       long i5707;\n+       long i5708;\n+       long i5709;\n+       long i5710;\n+       long i5711;\n+       long i5712;\n+       long i5713;\n+       long i5714;\n+       long i5715;\n+       long i5716;\n+       long i5717;\n+       long i5718;\n+       long i5719;\n+       long i5720;\n+       long i5721;\n+       long i5722;\n+       long i5723;\n+       long i5724;\n+       long i5725;\n+       long i5726;\n+       long i5727;\n+       long i5728;\n+       long i5729;\n+       long i5730;\n+       long i5731;\n+       long i5732;\n+       long i5733;\n+       long i5734;\n+       long i5735;\n+       long i5736;\n+       long i5737;\n+       long i5738;\n+       long i5739;\n+       long i5740;\n+       long i5741;\n+       long i5742;\n+       long i5743;\n+       long i5744;\n+       long i5745;\n+       long i5746;\n+       long i5747;\n+       long i5748;\n+       long i5749;\n+       long i5750;\n+       long i5751;\n+       long i5752;\n+       long i5753;\n+       long i5754;\n+       long i5755;\n+       long i5756;\n+       long i5757;\n+       long i5758;\n+       long i5759;\n+       long i5760;\n+       long i5761;\n+       long i5762;\n+       long i5763;\n+       long i5764;\n+       long i5765;\n+       long i5766;\n+       long i5767;\n+       long i5768;\n+       long i5769;\n+       long i5770;\n+       long i5771;\n+       long i5772;\n+       long i5773;\n+       long i5774;\n+       long i5775;\n+       long i5776;\n+       long i5777;\n+       long i5778;\n+       long i5779;\n+       long i5780;\n+       long i5781;\n+       long i5782;\n+       long i5783;\n+       long i5784;\n+       long i5785;\n+       long i5786;\n+       long i5787;\n+       long i5788;\n+       long i5789;\n+       long i5790;\n+       long i5791;\n+       long i5792;\n+       long i5793;\n+       long i5794;\n+       long i5795;\n+       long i5796;\n+       long i5797;\n+       long i5798;\n+       long i5799;\n+       long i5800;\n+       long i5801;\n+       long i5802;\n+       long i5803;\n+       long i5804;\n+       long i5805;\n+       long i5806;\n+       long i5807;\n+       long i5808;\n+       long i5809;\n+       long i5810;\n+       long i5811;\n+       long i5812;\n+       long i5813;\n+       long i5814;\n+       long i5815;\n+       long i5816;\n+       long i5817;\n+       long i5818;\n+       long i5819;\n+       long i5820;\n+       long i5821;\n+       long i5822;\n+       long i5823;\n+       long i5824;\n+       long i5825;\n+       long i5826;\n+       long i5827;\n+       long i5828;\n+       long i5829;\n+       long i5830;\n+       long i5831;\n+       long i5832;\n+       long i5833;\n+       long i5834;\n+       long i5835;\n+       long i5836;\n+       long i5837;\n+       long i5838;\n+       long i5839;\n+       long i5840;\n+       long i5841;\n+       long i5842;\n+       long i5843;\n+       long i5844;\n+       long i5845;\n+       long i5846;\n+       long i5847;\n+       long i5848;\n+       long i5849;\n+       long i5850;\n+       long i5851;\n+       long i5852;\n+       long i5853;\n+       long i5854;\n+       long i5855;\n+       long i5856;\n+       long i5857;\n+       long i5858;\n+       long i5859;\n+       long i5860;\n+       long i5861;\n+       long i5862;\n+       long i5863;\n+       long i5864;\n+       long i5865;\n+       long i5866;\n+       long i5867;\n+       long i5868;\n+       long i5869;\n+       long i5870;\n+       long i5871;\n+       long i5872;\n+       long i5873;\n+       long i5874;\n+       long i5875;\n+       long i5876;\n+       long i5877;\n+       long i5878;\n+       long i5879;\n+       long i5880;\n+       long i5881;\n+       long i5882;\n+       long i5883;\n+       long i5884;\n+       long i5885;\n+       long i5886;\n+       long i5887;\n+       long i5888;\n+       long i5889;\n+       long i5890;\n+       long i5891;\n+       long i5892;\n+       long i5893;\n+       long i5894;\n+       long i5895;\n+       long i5896;\n+       long i5897;\n+       long i5898;\n+       long i5899;\n+       long i5900;\n+       long i5901;\n+       long i5902;\n+       long i5903;\n+       long i5904;\n+       long i5905;\n+       long i5906;\n+       long i5907;\n+       long i5908;\n+       long i5909;\n+       long i5910;\n+       long i5911;\n+       long i5912;\n+       long i5913;\n+       long i5914;\n+       long i5915;\n+       long i5916;\n+       long i5917;\n+       long i5918;\n+       long i5919;\n+       long i5920;\n+       long i5921;\n+       long i5922;\n+       long i5923;\n+       long i5924;\n+       long i5925;\n+       long i5926;\n+       long i5927;\n+       long i5928;\n+       long i5929;\n+       long i5930;\n+       long i5931;\n+       long i5932;\n+       long i5933;\n+       long i5934;\n+       long i5935;\n+       long i5936;\n+       long i5937;\n+       long i5938;\n+       long i5939;\n+       long i5940;\n+       long i5941;\n+       long i5942;\n+       long i5943;\n+       long i5944;\n+       long i5945;\n+       long i5946;\n+       long i5947;\n+       long i5948;\n+       long i5949;\n+       long i5950;\n+       long i5951;\n+       long i5952;\n+       long i5953;\n+       long i5954;\n+       long i5955;\n+       long i5956;\n+       long i5957;\n+       long i5958;\n+       long i5959;\n+       long i5960;\n+       long i5961;\n+       long i5962;\n+       long i5963;\n+       long i5964;\n+       long i5965;\n+       long i5966;\n+       long i5967;\n+       long i5968;\n+       long i5969;\n+       long i5970;\n+       long i5971;\n+       long i5972;\n+       long i5973;\n+       long i5974;\n+       long i5975;\n+       long i5976;\n+       long i5977;\n+       long i5978;\n+       long i5979;\n+       long i5980;\n+       long i5981;\n+       long i5982;\n+       long i5983;\n+       long i5984;\n+       long i5985;\n+       long i5986;\n+       long i5987;\n+       long i5988;\n+       long i5989;\n+       long i5990;\n+       long i5991;\n+       long i5992;\n+       long i5993;\n+       long i5994;\n+       long i5995;\n+       long i5996;\n+       long i5997;\n+       long i5998;\n+       long i5999;\n+       long i6000;\n+       long i6001;\n+       long i6002;\n+       long i6003;\n+       long i6004;\n+       long i6005;\n+       long i6006;\n+       long i6007;\n+       long i6008;\n+       long i6009;\n+       long i6010;\n+       long i6011;\n+       long i6012;\n+       long i6013;\n+       long i6014;\n+       long i6015;\n+       long i6016;\n+       long i6017;\n+       long i6018;\n+       long i6019;\n+       long i6020;\n+       long i6021;\n+       long i6022;\n+       long i6023;\n+       long i6024;\n+       long i6025;\n+       long i6026;\n+       long i6027;\n+       long i6028;\n+       long i6029;\n+       long i6030;\n+       long i6031;\n+       long i6032;\n+       long i6033;\n+       long i6034;\n+       long i6035;\n+       long i6036;\n+       long i6037;\n+       long i6038;\n+       long i6039;\n+       long i6040;\n+       long i6041;\n+       long i6042;\n+       long i6043;\n+       long i6044;\n+       long i6045;\n+       long i6046;\n+       long i6047;\n+       long i6048;\n+       long i6049;\n+       long i6050;\n+       long i6051;\n+       long i6052;\n+       long i6053;\n+       long i6054;\n+       long i6055;\n+       long i6056;\n+       long i6057;\n+       long i6058;\n+       long i6059;\n+       long i6060;\n+       long i6061;\n+       long i6062;\n+       long i6063;\n+       long i6064;\n+       long i6065;\n+       long i6066;\n+       long i6067;\n+       long i6068;\n+       long i6069;\n+       long i6070;\n+       long i6071;\n+       long i6072;\n+       long i6073;\n+       long i6074;\n+       long i6075;\n+       long i6076;\n+       long i6077;\n+       long i6078;\n+       long i6079;\n+       long i6080;\n+       long i6081;\n+       long i6082;\n+       long i6083;\n+       long i6084;\n+       long i6085;\n+       long i6086;\n+       long i6087;\n+       long i6088;\n+       long i6089;\n+       long i6090;\n+       long i6091;\n+       long i6092;\n+       long i6093;\n+       long i6094;\n+       long i6095;\n+       long i6096;\n+       long i6097;\n+       long i6098;\n+       long i6099;\n+       long i6100;\n+       long i6101;\n+       long i6102;\n+       long i6103;\n+       long i6104;\n+       long i6105;\n+       long i6106;\n+       long i6107;\n+       long i6108;\n+       long i6109;\n+       long i6110;\n+       long i6111;\n+       long i6112;\n+       long i6113;\n+       long i6114;\n+       long i6115;\n+       long i6116;\n+       long i6117;\n+       long i6118;\n+       long i6119;\n+       long i6120;\n+       long i6121;\n+       long i6122;\n+       long i6123;\n+       long i6124;\n+       long i6125;\n+       long i6126;\n+       long i6127;\n+       long i6128;\n+       long i6129;\n+       long i6130;\n+       long i6131;\n+       long i6132;\n+       long i6133;\n+       long i6134;\n+       long i6135;\n+       long i6136;\n+       long i6137;\n+       long i6138;\n+       long i6139;\n+       long i6140;\n+       long i6141;\n+       long i6142;\n+       long i6143;\n+       long i6144;\n+       long i6145;\n+       long i6146;\n+       long i6147;\n+       long i6148;\n+       long i6149;\n+       long i6150;\n+       long i6151;\n+       long i6152;\n+       long i6153;\n+       long i6154;\n+       long i6155;\n+       long i6156;\n+       long i6157;\n+       long i6158;\n+       long i6159;\n+       long i6160;\n+       long i6161;\n+       long i6162;\n+       long i6163;\n+       long i6164;\n+       long i6165;\n+       long i6166;\n+       long i6167;\n+       long i6168;\n+       long i6169;\n+       long i6170;\n+       long i6171;\n+       long i6172;\n+       long i6173;\n+       long i6174;\n+       long i6175;\n+       long i6176;\n+       long i6177;\n+       long i6178;\n+       long i6179;\n+       long i6180;\n+       long i6181;\n+       long i6182;\n+       long i6183;\n+       long i6184;\n+       long i6185;\n+       long i6186;\n+       long i6187;\n+       long i6188;\n+       long i6189;\n+       long i6190;\n+       long i6191;\n+       long i6192;\n+       long i6193;\n+       long i6194;\n+       long i6195;\n+       long i6196;\n+       long i6197;\n+       long i6198;\n+       long i6199;\n+       long i6200;\n+       long i6201;\n+       long i6202;\n+       long i6203;\n+       long i6204;\n+       long i6205;\n+       long i6206;\n+       long i6207;\n+       long i6208;\n+       long i6209;\n+       long i6210;\n+       long i6211;\n+       long i6212;\n+       long i6213;\n+       long i6214;\n+       long i6215;\n+       long i6216;\n+       long i6217;\n+       long i6218;\n+       long i6219;\n+       long i6220;\n+       long i6221;\n+       long i6222;\n+       long i6223;\n+       long i6224;\n+       long i6225;\n+       long i6226;\n+       long i6227;\n+       long i6228;\n+       long i6229;\n+       long i6230;\n+       long i6231;\n+       long i6232;\n+       long i6233;\n+       long i6234;\n+       long i6235;\n+       long i6236;\n+       long i6237;\n+       long i6238;\n+       long i6239;\n+       long i6240;\n+       long i6241;\n+       long i6242;\n+       long i6243;\n+       long i6244;\n+       long i6245;\n+       long i6246;\n+       long i6247;\n+       long i6248;\n+       long i6249;\n+       long i6250;\n+       long i6251;\n+       long i6252;\n+       long i6253;\n+       long i6254;\n+       long i6255;\n+       long i6256;\n+       long i6257;\n+       long i6258;\n+       long i6259;\n+       long i6260;\n+       long i6261;\n+       long i6262;\n+       long i6263;\n+       long i6264;\n+       long i6265;\n+       long i6266;\n+       long i6267;\n+       long i6268;\n+       long i6269;\n+       long i6270;\n+       long i6271;\n+       long i6272;\n+       long i6273;\n+       long i6274;\n+       long i6275;\n+       long i6276;\n+       long i6277;\n+       long i6278;\n+       long i6279;\n+       long i6280;\n+       long i6281;\n+       long i6282;\n+       long i6283;\n+       long i6284;\n+       long i6285;\n+       long i6286;\n+       long i6287;\n+       long i6288;\n+       long i6289;\n+       long i6290;\n+       long i6291;\n+       long i6292;\n+       long i6293;\n+       long i6294;\n+       long i6295;\n+       long i6296;\n+       long i6297;\n+       long i6298;\n+       long i6299;\n+       long i6300;\n+       long i6301;\n+       long i6302;\n+       long i6303;\n+       long i6304;\n+       long i6305;\n+       long i6306;\n+       long i6307;\n+       long i6308;\n+       long i6309;\n+       long i6310;\n+       long i6311;\n+       long i6312;\n+       long i6313;\n+       long i6314;\n+       long i6315;\n+       long i6316;\n+       long i6317;\n+       long i6318;\n+       long i6319;\n+       long i6320;\n+       long i6321;\n+       long i6322;\n+       long i6323;\n+       long i6324;\n+       long i6325;\n+       long i6326;\n+       long i6327;\n+       long i6328;\n+       long i6329;\n+       long i6330;\n+       long i6331;\n+       long i6332;\n+       long i6333;\n+       long i6334;\n+       long i6335;\n+       long i6336;\n+       long i6337;\n+       long i6338;\n+       long i6339;\n+       long i6340;\n+       long i6341;\n+       long i6342;\n+       long i6343;\n+       long i6344;\n+       long i6345;\n+       long i6346;\n+       long i6347;\n+       long i6348;\n+       long i6349;\n+       long i6350;\n+       long i6351;\n+       long i6352;\n+       long i6353;\n+       long i6354;\n+       long i6355;\n+       long i6356;\n+       long i6357;\n+       long i6358;\n+       long i6359;\n+       long i6360;\n+       long i6361;\n+       long i6362;\n+       long i6363;\n+       long i6364;\n+       long i6365;\n+       long i6366;\n+       long i6367;\n+       long i6368;\n+       long i6369;\n+       long i6370;\n+       long i6371;\n+       long i6372;\n+       long i6373;\n+       long i6374;\n+       long i6375;\n+       long i6376;\n+       long i6377;\n+       long i6378;\n+       long i6379;\n+       long i6380;\n+       long i6381;\n+       long i6382;\n+       long i6383;\n+       long i6384;\n+       long i6385;\n+       long i6386;\n+       long i6387;\n+       long i6388;\n+       long i6389;\n+       long i6390;\n+       long i6391;\n+       long i6392;\n+       long i6393;\n+       long i6394;\n+       long i6395;\n+       long i6396;\n+       long i6397;\n+       long i6398;\n+       long i6399;\n+       long i6400;\n+       long i6401;\n+       long i6402;\n+       long i6403;\n+       long i6404;\n+       long i6405;\n+       long i6406;\n+       long i6407;\n+       long i6408;\n+       long i6409;\n+       long i6410;\n+       long i6411;\n+       long i6412;\n+       long i6413;\n+       long i6414;\n+       long i6415;\n+       long i6416;\n+       long i6417;\n+       long i6418;\n+       long i6419;\n+       long i6420;\n+       long i6421;\n+       long i6422;\n+       long i6423;\n+       long i6424;\n+       long i6425;\n+       long i6426;\n+       long i6427;\n+       long i6428;\n+       long i6429;\n+       long i6430;\n+       long i6431;\n+       long i6432;\n+       long i6433;\n+       long i6434;\n+       long i6435;\n+       long i6436;\n+       long i6437;\n+       long i6438;\n+       long i6439;\n+       long i6440;\n+       long i6441;\n+       long i6442;\n+       long i6443;\n+       long i6444;\n+       long i6445;\n+       long i6446;\n+       long i6447;\n+       long i6448;\n+       long i6449;\n+       long i6450;\n+       long i6451;\n+       long i6452;\n+       long i6453;\n+       long i6454;\n+       long i6455;\n+       long i6456;\n+       long i6457;\n+       long i6458;\n+       long i6459;\n+       long i6460;\n+       long i6461;\n+       long i6462;\n+       long i6463;\n+       long i6464;\n+       long i6465;\n+       long i6466;\n+       long i6467;\n+       long i6468;\n+       long i6469;\n+       long i6470;\n+       long i6471;\n+       long i6472;\n+       long i6473;\n+       long i6474;\n+       long i6475;\n+       long i6476;\n+       long i6477;\n+       long i6478;\n+       long i6479;\n+       long i6480;\n+       long i6481;\n+       long i6482;\n+       long i6483;\n+       long i6484;\n+       long i6485;\n+       long i6486;\n+       long i6487;\n+       long i6488;\n+       long i6489;\n+       long i6490;\n+       long i6491;\n+       long i6492;\n+       long i6493;\n+       long i6494;\n+       long i6495;\n+       long i6496;\n+       long i6497;\n+       long i6498;\n+       long i6499;\n+       long i6500;\n+       long i6501;\n+       long i6502;\n+       long i6503;\n+       long i6504;\n+       long i6505;\n+       long i6506;\n+       long i6507;\n+       long i6508;\n+       long i6509;\n+       long i6510;\n+       long i6511;\n+       long i6512;\n+       long i6513;\n+       long i6514;\n+       long i6515;\n+       long i6516;\n+       long i6517;\n+       long i6518;\n+       long i6519;\n+       long i6520;\n+       long i6521;\n+       long i6522;\n+       long i6523;\n+       long i6524;\n+       long i6525;\n+       long i6526;\n+       long i6527;\n+       long i6528;\n+       long i6529;\n+       long i6530;\n+       long i6531;\n+       long i6532;\n+       long i6533;\n+       long i6534;\n+       long i6535;\n+       long i6536;\n+       long i6537;\n+       long i6538;\n+       long i6539;\n+       long i6540;\n+       long i6541;\n+       long i6542;\n+       long i6543;\n+       long i6544;\n+       long i6545;\n+       long i6546;\n+       long i6547;\n+       long i6548;\n+       long i6549;\n+       long i6550;\n+       long i6551;\n+       long i6552;\n+       long i6553;\n+       long i6554;\n+       long i6555;\n+       long i6556;\n+       long i6557;\n+       long i6558;\n+       long i6559;\n+       long i6560;\n+       long i6561;\n+       long i6562;\n+       long i6563;\n+       long i6564;\n+       long i6565;\n+       long i6566;\n+       long i6567;\n+       long i6568;\n+       long i6569;\n+       long i6570;\n+       long i6571;\n+       long i6572;\n+       long i6573;\n+       long i6574;\n+       long i6575;\n+       long i6576;\n+       long i6577;\n+       long i6578;\n+       long i6579;\n+       long i6580;\n+       long i6581;\n+       long i6582;\n+       long i6583;\n+       long i6584;\n+       long i6585;\n+       long i6586;\n+       long i6587;\n+       long i6588;\n+       long i6589;\n+       long i6590;\n+       long i6591;\n+       long i6592;\n+       long i6593;\n+       long i6594;\n+       long i6595;\n+       long i6596;\n+       long i6597;\n+       long i6598;\n+       long i6599;\n+       long i6600;\n+       long i6601;\n+       long i6602;\n+       long i6603;\n+       long i6604;\n+       long i6605;\n+       long i6606;\n+       long i6607;\n+       long i6608;\n+       long i6609;\n+       long i6610;\n+       long i6611;\n+       long i6612;\n+       long i6613;\n+       long i6614;\n+       long i6615;\n+       long i6616;\n+       long i6617;\n+       long i6618;\n+       long i6619;\n+       long i6620;\n+       long i6621;\n+       long i6622;\n+       long i6623;\n+       long i6624;\n+       long i6625;\n+       long i6626;\n+       long i6627;\n+       long i6628;\n+       long i6629;\n+       long i6630;\n+       long i6631;\n+       long i6632;\n+       long i6633;\n+       long i6634;\n+       long i6635;\n+       long i6636;\n+       long i6637;\n+       long i6638;\n+       long i6639;\n+       long i6640;\n+       long i6641;\n+       long i6642;\n+       long i6643;\n+       long i6644;\n+       long i6645;\n+       long i6646;\n+       long i6647;\n+       long i6648;\n+       long i6649;\n+       long i6650;\n+       long i6651;\n+       long i6652;\n+       long i6653;\n+       long i6654;\n+       long i6655;\n+       long i6656;\n+       long i6657;\n+       long i6658;\n+       long i6659;\n+       long i6660;\n+       long i6661;\n+       long i6662;\n+       long i6663;\n+       long i6664;\n+       long i6665;\n+       long i6666;\n+       long i6667;\n+       long i6668;\n+       long i6669;\n+       long i6670;\n+       long i6671;\n+       long i6672;\n+       long i6673;\n+       long i6674;\n+       long i6675;\n+       long i6676;\n+       long i6677;\n+       long i6678;\n+       long i6679;\n+       long i6680;\n+       long i6681;\n+       long i6682;\n+       long i6683;\n+       long i6684;\n+       long i6685;\n+       long i6686;\n+       long i6687;\n+       long i6688;\n+       long i6689;\n+       long i6690;\n+       long i6691;\n+       long i6692;\n+       long i6693;\n+       long i6694;\n+       long i6695;\n+       long i6696;\n+       long i6697;\n+       long i6698;\n+       long i6699;\n+       long i6700;\n+       long i6701;\n+       long i6702;\n+       long i6703;\n+       long i6704;\n+       long i6705;\n+       long i6706;\n+       long i6707;\n+       long i6708;\n+       long i6709;\n+       long i6710;\n+       long i6711;\n+       long i6712;\n+       long i6713;\n+       long i6714;\n+       long i6715;\n+       long i6716;\n+       long i6717;\n+       long i6718;\n+       long i6719;\n+       long i6720;\n+       long i6721;\n+       long i6722;\n+       long i6723;\n+       long i6724;\n+       long i6725;\n+       long i6726;\n+       long i6727;\n+       long i6728;\n+       long i6729;\n+       long i6730;\n+       long i6731;\n+       long i6732;\n+       long i6733;\n+       long i6734;\n+       long i6735;\n+       long i6736;\n+       long i6737;\n+       long i6738;\n+       long i6739;\n+       long i6740;\n+       long i6741;\n+       long i6742;\n+       long i6743;\n+       long i6744;\n+       long i6745;\n+       long i6746;\n+       long i6747;\n+       long i6748;\n+       long i6749;\n+       long i6750;\n+       long i6751;\n+       long i6752;\n+       long i6753;\n+       long i6754;\n+       long i6755;\n+       long i6756;\n+       long i6757;\n+       long i6758;\n+       long i6759;\n+       long i6760;\n+       long i6761;\n+       long i6762;\n+       long i6763;\n+       long i6764;\n+       long i6765;\n+       long i6766;\n+       long i6767;\n+       long i6768;\n+       long i6769;\n+       long i6770;\n+       long i6771;\n+       long i6772;\n+       long i6773;\n+       long i6774;\n+       long i6775;\n+       long i6776;\n+       long i6777;\n+       long i6778;\n+       long i6779;\n+       long i6780;\n+       long i6781;\n+       long i6782;\n+       long i6783;\n+       long i6784;\n+       long i6785;\n+       long i6786;\n+       long i6787;\n+       long i6788;\n+       long i6789;\n+       long i6790;\n+       long i6791;\n+       long i6792;\n+       long i6793;\n+       long i6794;\n+       long i6795;\n+       long i6796;\n+       long i6797;\n+       long i6798;\n+       long i6799;\n+       long i6800;\n+       long i6801;\n+       long i6802;\n+       long i6803;\n+       long i6804;\n+       long i6805;\n+       long i6806;\n+       long i6807;\n+       long i6808;\n+       long i6809;\n+       long i6810;\n+       long i6811;\n+       long i6812;\n+       long i6813;\n+       long i6814;\n+       long i6815;\n+       long i6816;\n+       long i6817;\n+       long i6818;\n+       long i6819;\n+       long i6820;\n+       long i6821;\n+       long i6822;\n+       long i6823;\n+       long i6824;\n+       long i6825;\n+       long i6826;\n+       long i6827;\n+       long i6828;\n+       long i6829;\n+       long i6830;\n+       long i6831;\n+       long i6832;\n+       long i6833;\n+       long i6834;\n+       long i6835;\n+       long i6836;\n+       long i6837;\n+       long i6838;\n+       long i6839;\n+       long i6840;\n+       long i6841;\n+       long i6842;\n+       long i6843;\n+       long i6844;\n+       long i6845;\n+       long i6846;\n+       long i6847;\n+       long i6848;\n+       long i6849;\n+       long i6850;\n+       long i6851;\n+       long i6852;\n+       long i6853;\n+       long i6854;\n+       long i6855;\n+       long i6856;\n+       long i6857;\n+       long i6858;\n+       long i6859;\n+       long i6860;\n+       long i6861;\n+       long i6862;\n+       long i6863;\n+       long i6864;\n+       long i6865;\n+       long i6866;\n+       long i6867;\n+       long i6868;\n+       long i6869;\n+       long i6870;\n+       long i6871;\n+       long i6872;\n+       long i6873;\n+       long i6874;\n+       long i6875;\n+       long i6876;\n+       long i6877;\n+       long i6878;\n+       long i6879;\n+       long i6880;\n+       long i6881;\n+       long i6882;\n+       long i6883;\n+       long i6884;\n+       long i6885;\n+       long i6886;\n+       long i6887;\n+       long i6888;\n+       long i6889;\n+       long i6890;\n+       long i6891;\n+       long i6892;\n+       long i6893;\n+       long i6894;\n+       long i6895;\n+       long i6896;\n+       long i6897;\n+       long i6898;\n+       long i6899;\n+       long i6900;\n+       long i6901;\n+       long i6902;\n+       long i6903;\n+       long i6904;\n+       long i6905;\n+       long i6906;\n+       long i6907;\n+       long i6908;\n+       long i6909;\n+       long i6910;\n+       long i6911;\n+       long i6912;\n+       long i6913;\n+       long i6914;\n+       long i6915;\n+       long i6916;\n+       long i6917;\n+       long i6918;\n+       long i6919;\n+       long i6920;\n+       long i6921;\n+       long i6922;\n+       long i6923;\n+       long i6924;\n+       long i6925;\n+       long i6926;\n+       long i6927;\n+       long i6928;\n+       long i6929;\n+       long i6930;\n+       long i6931;\n+       long i6932;\n+       long i6933;\n+       long i6934;\n+       long i6935;\n+       long i6936;\n+       long i6937;\n+       long i6938;\n+       long i6939;\n+       long i6940;\n+       long i6941;\n+       long i6942;\n+       long i6943;\n+       long i6944;\n+       long i6945;\n+       long i6946;\n+       long i6947;\n+       long i6948;\n+       long i6949;\n+       long i6950;\n+       long i6951;\n+       long i6952;\n+       long i6953;\n+       long i6954;\n+       long i6955;\n+       long i6956;\n+       long i6957;\n+       long i6958;\n+       long i6959;\n+       long i6960;\n+       long i6961;\n+       long i6962;\n+       long i6963;\n+       long i6964;\n+       long i6965;\n+       long i6966;\n+       long i6967;\n+       long i6968;\n+       long i6969;\n+       long i6970;\n+       long i6971;\n+       long i6972;\n+       long i6973;\n+       long i6974;\n+       long i6975;\n+       long i6976;\n+       long i6977;\n+       long i6978;\n+       long i6979;\n+       long i6980;\n+       long i6981;\n+       long i6982;\n+       long i6983;\n+       long i6984;\n+       long i6985;\n+       long i6986;\n+       long i6987;\n+       long i6988;\n+       long i6989;\n+       long i6990;\n+       long i6991;\n+       long i6992;\n+       long i6993;\n+       long i6994;\n+       long i6995;\n+       long i6996;\n+       long i6997;\n+       long i6998;\n+       long i6999;\n+       long i7000;\n+       long i7001;\n+       long i7002;\n+       long i7003;\n+       long i7004;\n+       long i7005;\n+       long i7006;\n+       long i7007;\n+       long i7008;\n+       long i7009;\n+       long i7010;\n+       long i7011;\n+       long i7012;\n+       long i7013;\n+       long i7014;\n+       long i7015;\n+       long i7016;\n+       long i7017;\n+       long i7018;\n+       long i7019;\n+       long i7020;\n+       long i7021;\n+       long i7022;\n+       long i7023;\n+       long i7024;\n+       long i7025;\n+       long i7026;\n+       long i7027;\n+       long i7028;\n+       long i7029;\n+       long i7030;\n+       long i7031;\n+       long i7032;\n+       long i7033;\n+       long i7034;\n+       long i7035;\n+       long i7036;\n+       long i7037;\n+       long i7038;\n+       long i7039;\n+       long i7040;\n+       long i7041;\n+       long i7042;\n+       long i7043;\n+       long i7044;\n+       long i7045;\n+       long i7046;\n+       long i7047;\n+       long i7048;\n+       long i7049;\n+       long i7050;\n+       long i7051;\n+       long i7052;\n+       long i7053;\n+       long i7054;\n+       long i7055;\n+       long i7056;\n+       long i7057;\n+       long i7058;\n+       long i7059;\n+       long i7060;\n+       long i7061;\n+       long i7062;\n+       long i7063;\n+       long i7064;\n+       long i7065;\n+       long i7066;\n+       long i7067;\n+       long i7068;\n+       long i7069;\n+       long i7070;\n+       long i7071;\n+       long i7072;\n+       long i7073;\n+       long i7074;\n+       long i7075;\n+       long i7076;\n+       long i7077;\n+       long i7078;\n+       long i7079;\n+       long i7080;\n+       long i7081;\n+       long i7082;\n+       long i7083;\n+       long i7084;\n+       long i7085;\n+       long i7086;\n+       long i7087;\n+       long i7088;\n+       long i7089;\n+       long i7090;\n+       long i7091;\n+       long i7092;\n+       long i7093;\n+       long i7094;\n+       long i7095;\n+       long i7096;\n+       long i7097;\n+       long i7098;\n+       long i7099;\n+       long i7100;\n+       long i7101;\n+       long i7102;\n+       long i7103;\n+       long i7104;\n+       long i7105;\n+       long i7106;\n+       long i7107;\n+       long i7108;\n+       long i7109;\n+       long i7110;\n+       long i7111;\n+       long i7112;\n+       long i7113;\n+       long i7114;\n+       long i7115;\n+       long i7116;\n+       long i7117;\n+       long i7118;\n+       long i7119;\n+       long i7120;\n+       long i7121;\n+       long i7122;\n+       long i7123;\n+       long i7124;\n+       long i7125;\n+       long i7126;\n+       long i7127;\n+       long i7128;\n+       long i7129;\n+       long i7130;\n+       long i7131;\n+       long i7132;\n+       long i7133;\n+       long i7134;\n+       long i7135;\n+       long i7136;\n+       long i7137;\n+       long i7138;\n+       long i7139;\n+       long i7140;\n+       long i7141;\n+       long i7142;\n+       long i7143;\n+       long i7144;\n+       long i7145;\n+       long i7146;\n+       long i7147;\n+       long i7148;\n+       long i7149;\n+       long i7150;\n+       long i7151;\n+       long i7152;\n+       long i7153;\n+       long i7154;\n+       long i7155;\n+       long i7156;\n+       long i7157;\n+       long i7158;\n+       long i7159;\n+       long i7160;\n+       long i7161;\n+       long i7162;\n+       long i7163;\n+       long i7164;\n+       long i7165;\n+       long i7166;\n+       long i7167;\n+       long i7168;\n+       long i7169;\n+       long i7170;\n+       long i7171;\n+       long i7172;\n+       long i7173;\n+       long i7174;\n+       long i7175;\n+       long i7176;\n+       long i7177;\n+       long i7178;\n+       long i7179;\n+       long i7180;\n+       long i7181;\n+       long i7182;\n+       long i7183;\n+       long i7184;\n+       long i7185;\n+       long i7186;\n+       long i7187;\n+       long i7188;\n+       long i7189;\n+       long i7190;\n+       long i7191;\n+       long i7192;\n+       long i7193;\n+       long i7194;\n+       long i7195;\n+       long i7196;\n+       long i7197;\n+       long i7198;\n+       long i7199;\n+       long i7200;\n+       long i7201;\n+       long i7202;\n+       long i7203;\n+       long i7204;\n+       long i7205;\n+       long i7206;\n+       long i7207;\n+       long i7208;\n+       long i7209;\n+       long i7210;\n+       long i7211;\n+       long i7212;\n+       long i7213;\n+       long i7214;\n+       long i7215;\n+       long i7216;\n+       long i7217;\n+       long i7218;\n+       long i7219;\n+       long i7220;\n+       long i7221;\n+       long i7222;\n+       long i7223;\n+       long i7224;\n+       long i7225;\n+       long i7226;\n+       long i7227;\n+       long i7228;\n+       long i7229;\n+       long i7230;\n+       long i7231;\n+       long i7232;\n+       long i7233;\n+       long i7234;\n+       long i7235;\n+       long i7236;\n+       long i7237;\n+       long i7238;\n+       long i7239;\n+       long i7240;\n+       long i7241;\n+       long i7242;\n+       long i7243;\n+       long i7244;\n+       long i7245;\n+       long i7246;\n+       long i7247;\n+       long i7248;\n+       long i7249;\n+       long i7250;\n+       long i7251;\n+       long i7252;\n+       long i7253;\n+       long i7254;\n+       long i7255;\n+       long i7256;\n+       long i7257;\n+       long i7258;\n+       long i7259;\n+       long i7260;\n+       long i7261;\n+       long i7262;\n+       long i7263;\n+       long i7264;\n+       long i7265;\n+       long i7266;\n+       long i7267;\n+       long i7268;\n+       long i7269;\n+       long i7270;\n+       long i7271;\n+       long i7272;\n+       long i7273;\n+       long i7274;\n+       long i7275;\n+       long i7276;\n+       long i7277;\n+       long i7278;\n+       long i7279;\n+       long i7280;\n+       long i7281;\n+       long i7282;\n+       long i7283;\n+       long i7284;\n+       long i7285;\n+       long i7286;\n+       long i7287;\n+       long i7288;\n+       long i7289;\n+       long i7290;\n+       long i7291;\n+       long i7292;\n+       long i7293;\n+       long i7294;\n+       long i7295;\n+       long i7296;\n+       long i7297;\n+       long i7298;\n+       long i7299;\n+       long i7300;\n+       long i7301;\n+       long i7302;\n+       long i7303;\n+       long i7304;\n+       long i7305;\n+       long i7306;\n+       long i7307;\n+       long i7308;\n+       long i7309;\n+       long i7310;\n+       long i7311;\n+       long i7312;\n+       long i7313;\n+       long i7314;\n+       long i7315;\n+       long i7316;\n+       long i7317;\n+       long i7318;\n+       long i7319;\n+       long i7320;\n+       long i7321;\n+       long i7322;\n+       long i7323;\n+       long i7324;\n+       long i7325;\n+       long i7326;\n+       long i7327;\n+       long i7328;\n+       long i7329;\n+       long i7330;\n+       long i7331;\n+       long i7332;\n+       long i7333;\n+       long i7334;\n+       long i7335;\n+       long i7336;\n+       long i7337;\n+       long i7338;\n+       long i7339;\n+       long i7340;\n+       long i7341;\n+       long i7342;\n+       long i7343;\n+       long i7344;\n+       long i7345;\n+       long i7346;\n+       long i7347;\n+       long i7348;\n+       long i7349;\n+       long i7350;\n+       long i7351;\n+       long i7352;\n+       long i7353;\n+       long i7354;\n+       long i7355;\n+       long i7356;\n+       long i7357;\n+       long i7358;\n+       long i7359;\n+       long i7360;\n+       long i7361;\n+       long i7362;\n+       long i7363;\n+       long i7364;\n+       long i7365;\n+       long i7366;\n+       long i7367;\n+       long i7368;\n+       long i7369;\n+       long i7370;\n+       long i7371;\n+       long i7372;\n+       long i7373;\n+       long i7374;\n+       long i7375;\n+       long i7376;\n+       long i7377;\n+       long i7378;\n+       long i7379;\n+       long i7380;\n+       long i7381;\n+       long i7382;\n+       long i7383;\n+       long i7384;\n+       long i7385;\n+       long i7386;\n+       long i7387;\n+       long i7388;\n+       long i7389;\n+       long i7390;\n+       long i7391;\n+       long i7392;\n+       long i7393;\n+       long i7394;\n+       long i7395;\n+       long i7396;\n+       long i7397;\n+       long i7398;\n+       long i7399;\n+       long i7400;\n+       long i7401;\n+       long i7402;\n+       long i7403;\n+       long i7404;\n+       long i7405;\n+       long i7406;\n+       long i7407;\n+       long i7408;\n+       long i7409;\n+       long i7410;\n+       long i7411;\n+       long i7412;\n+       long i7413;\n+       long i7414;\n+       long i7415;\n+       long i7416;\n+       long i7417;\n+       long i7418;\n+       long i7419;\n+       long i7420;\n+       long i7421;\n+       long i7422;\n+       long i7423;\n+       long i7424;\n+       long i7425;\n+       long i7426;\n+       long i7427;\n+       long i7428;\n+       long i7429;\n+       long i7430;\n+       long i7431;\n+       long i7432;\n+       long i7433;\n+       long i7434;\n+       long i7435;\n+       long i7436;\n+       long i7437;\n+       long i7438;\n+       long i7439;\n+       long i7440;\n+       long i7441;\n+       long i7442;\n+       long i7443;\n+       long i7444;\n+       long i7445;\n+       long i7446;\n+       long i7447;\n+       long i7448;\n+       long i7449;\n+       long i7450;\n+       long i7451;\n+       long i7452;\n+       long i7453;\n+       long i7454;\n+       long i7455;\n+       long i7456;\n+       long i7457;\n+       long i7458;\n+       long i7459;\n+       long i7460;\n+       long i7461;\n+       long i7462;\n+       long i7463;\n+       long i7464;\n+       long i7465;\n+       long i7466;\n+       long i7467;\n+       long i7468;\n+       long i7469;\n+       long i7470;\n+       long i7471;\n+       long i7472;\n+       long i7473;\n+       long i7474;\n+       long i7475;\n+       long i7476;\n+       long i7477;\n+       long i7478;\n+       long i7479;\n+       long i7480;\n+       long i7481;\n+       long i7482;\n+       long i7483;\n+       long i7484;\n+       long i7485;\n+       long i7486;\n+       long i7487;\n+       long i7488;\n+       long i7489;\n+       long i7490;\n+       long i7491;\n+       long i7492;\n+       long i7493;\n+       long i7494;\n+       long i7495;\n+       long i7496;\n+       long i7497;\n+       long i7498;\n+       long i7499;\n+       long i7500;\n+       long i7501;\n+       long i7502;\n+       long i7503;\n+       long i7504;\n+       long i7505;\n+       long i7506;\n+       long i7507;\n+       long i7508;\n+       long i7509;\n+       long i7510;\n+       long i7511;\n+       long i7512;\n+       long i7513;\n+       long i7514;\n+       long i7515;\n+       long i7516;\n+       long i7517;\n+       long i7518;\n+       long i7519;\n+       long i7520;\n+       long i7521;\n+       long i7522;\n+       long i7523;\n+       long i7524;\n+       long i7525;\n+       long i7526;\n+       long i7527;\n+       long i7528;\n+       long i7529;\n+       long i7530;\n+       long i7531;\n+       long i7532;\n+       long i7533;\n+       long i7534;\n+       long i7535;\n+       long i7536;\n+       long i7537;\n+       long i7538;\n+       long i7539;\n+       long i7540;\n+       long i7541;\n+       long i7542;\n+       long i7543;\n+       long i7544;\n+       long i7545;\n+       long i7546;\n+       long i7547;\n+       long i7548;\n+       long i7549;\n+       long i7550;\n+       long i7551;\n+       long i7552;\n+       long i7553;\n+       long i7554;\n+       long i7555;\n+       long i7556;\n+       long i7557;\n+       long i7558;\n+       long i7559;\n+       long i7560;\n+       long i7561;\n+       long i7562;\n+       long i7563;\n+       long i7564;\n+       long i7565;\n+       long i7566;\n+       long i7567;\n+       long i7568;\n+       long i7569;\n+       long i7570;\n+       long i7571;\n+       long i7572;\n+       long i7573;\n+       long i7574;\n+       long i7575;\n+       long i7576;\n+       long i7577;\n+       long i7578;\n+       long i7579;\n+       long i7580;\n+       long i7581;\n+       long i7582;\n+       long i7583;\n+       long i7584;\n+       long i7585;\n+       long i7586;\n+       long i7587;\n+       long i7588;\n+       long i7589;\n+       long i7590;\n+       long i7591;\n+       long i7592;\n+       long i7593;\n+       long i7594;\n+       long i7595;\n+       long i7596;\n+       long i7597;\n+       long i7598;\n+       long i7599;\n+       long i7600;\n+       long i7601;\n+       long i7602;\n+       long i7603;\n+       long i7604;\n+       long i7605;\n+       long i7606;\n+       long i7607;\n+       long i7608;\n+       long i7609;\n+       long i7610;\n+       long i7611;\n+       long i7612;\n+       long i7613;\n+       long i7614;\n+       long i7615;\n+       long i7616;\n+       long i7617;\n+       long i7618;\n+       long i7619;\n+       long i7620;\n+       long i7621;\n+       long i7622;\n+       long i7623;\n+       long i7624;\n+       long i7625;\n+       long i7626;\n+       long i7627;\n+       long i7628;\n+       long i7629;\n+       long i7630;\n+       long i7631;\n+       long i7632;\n+       long i7633;\n+       long i7634;\n+       long i7635;\n+       long i7636;\n+       long i7637;\n+       long i7638;\n+       long i7639;\n+       long i7640;\n+       long i7641;\n+       long i7642;\n+       long i7643;\n+       long i7644;\n+       long i7645;\n+       long i7646;\n+       long i7647;\n+       long i7648;\n+       long i7649;\n+       long i7650;\n+       long i7651;\n+       long i7652;\n+       long i7653;\n+       long i7654;\n+       long i7655;\n+       long i7656;\n+       long i7657;\n+       long i7658;\n+       long i7659;\n+       long i7660;\n+       long i7661;\n+       long i7662;\n+       long i7663;\n+       long i7664;\n+       long i7665;\n+       long i7666;\n+       long i7667;\n+       long i7668;\n+       long i7669;\n+       long i7670;\n+       long i7671;\n+       long i7672;\n+       long i7673;\n+       long i7674;\n+       long i7675;\n+       long i7676;\n+       long i7677;\n+       long i7678;\n+       long i7679;\n+       long i7680;\n+       long i7681;\n+       long i7682;\n+       long i7683;\n+       long i7684;\n+       long i7685;\n+       long i7686;\n+       long i7687;\n+       long i7688;\n+       long i7689;\n+       long i7690;\n+       long i7691;\n+       long i7692;\n+       long i7693;\n+       long i7694;\n+       long i7695;\n+       long i7696;\n+       long i7697;\n+       long i7698;\n+       long i7699;\n+       long i7700;\n+       long i7701;\n+       long i7702;\n+       long i7703;\n+       long i7704;\n+       long i7705;\n+       long i7706;\n+       long i7707;\n+       long i7708;\n+       long i7709;\n+       long i7710;\n+       long i7711;\n+       long i7712;\n+       long i7713;\n+       long i7714;\n+       long i7715;\n+       long i7716;\n+       long i7717;\n+       long i7718;\n+       long i7719;\n+       long i7720;\n+       long i7721;\n+       long i7722;\n+       long i7723;\n+       long i7724;\n+       long i7725;\n+       long i7726;\n+       long i7727;\n+       long i7728;\n+       long i7729;\n+       long i7730;\n+       long i7731;\n+       long i7732;\n+       long i7733;\n+       long i7734;\n+       long i7735;\n+       long i7736;\n+       long i7737;\n+       long i7738;\n+       long i7739;\n+       long i7740;\n+       long i7741;\n+       long i7742;\n+       long i7743;\n+       long i7744;\n+       long i7745;\n+       long i7746;\n+       long i7747;\n+       long i7748;\n+       long i7749;\n+       long i7750;\n+       long i7751;\n+       long i7752;\n+       long i7753;\n+       long i7754;\n+       long i7755;\n+       long i7756;\n+       long i7757;\n+       long i7758;\n+       long i7759;\n+       long i7760;\n+       long i7761;\n+       long i7762;\n+       long i7763;\n+       long i7764;\n+       long i7765;\n+       long i7766;\n+       long i7767;\n+       long i7768;\n+       long i7769;\n+       long i7770;\n+       long i7771;\n+       long i7772;\n+       long i7773;\n+       long i7774;\n+       long i7775;\n+       long i7776;\n+       long i7777;\n+       long i7778;\n+       long i7779;\n+       long i7780;\n+       long i7781;\n+       long i7782;\n+       long i7783;\n+       long i7784;\n+       long i7785;\n+       long i7786;\n+       long i7787;\n+       long i7788;\n+       long i7789;\n+       long i7790;\n+       long i7791;\n+       long i7792;\n+       long i7793;\n+       long i7794;\n+       long i7795;\n+       long i7796;\n+       long i7797;\n+       long i7798;\n+       long i7799;\n+       long i7800;\n+       long i7801;\n+       long i7802;\n+       long i7803;\n+       long i7804;\n+       long i7805;\n+       long i7806;\n+       long i7807;\n+       long i7808;\n+       long i7809;\n+       long i7810;\n+       long i7811;\n+       long i7812;\n+       long i7813;\n+       long i7814;\n+       long i7815;\n+       long i7816;\n+       long i7817;\n+       long i7818;\n+       long i7819;\n+       long i7820;\n+       long i7821;\n+       long i7822;\n+       long i7823;\n+       long i7824;\n+       long i7825;\n+       long i7826;\n+       long i7827;\n+       long i7828;\n+       long i7829;\n+       long i7830;\n+       long i7831;\n+       long i7832;\n+       long i7833;\n+       long i7834;\n+       long i7835;\n+       long i7836;\n+       long i7837;\n+       long i7838;\n+       long i7839;\n+       long i7840;\n+       long i7841;\n+       long i7842;\n+       long i7843;\n+       long i7844;\n+       long i7845;\n+       long i7846;\n+       long i7847;\n+       long i7848;\n+       long i7849;\n+       long i7850;\n+       long i7851;\n+       long i7852;\n+       long i7853;\n+       long i7854;\n+       long i7855;\n+       long i7856;\n+       long i7857;\n+       long i7858;\n+       long i7859;\n+       long i7860;\n+       long i7861;\n+       long i7862;\n+       long i7863;\n+       long i7864;\n+       long i7865;\n+       long i7866;\n+       long i7867;\n+       long i7868;\n+       long i7869;\n+       long i7870;\n+       long i7871;\n+       long i7872;\n+       long i7873;\n+       long i7874;\n+       long i7875;\n+       long i7876;\n+       long i7877;\n+       long i7878;\n+       long i7879;\n+       long i7880;\n+       long i7881;\n+       long i7882;\n+       long i7883;\n+       long i7884;\n+       long i7885;\n+       long i7886;\n+       long i7887;\n+       long i7888;\n+       long i7889;\n+       long i7890;\n+       long i7891;\n+       long i7892;\n+       long i7893;\n+       long i7894;\n+       long i7895;\n+       long i7896;\n+       long i7897;\n+       long i7898;\n+       long i7899;\n+       long i7900;\n+       long i7901;\n+       long i7902;\n+       long i7903;\n+       long i7904;\n+       long i7905;\n+       long i7906;\n+       long i7907;\n+       long i7908;\n+       long i7909;\n+       long i7910;\n+       long i7911;\n+       long i7912;\n+       long i7913;\n+       long i7914;\n+       long i7915;\n+       long i7916;\n+       long i7917;\n+       long i7918;\n+       long i7919;\n+       long i7920;\n+       long i7921;\n+       long i7922;\n+       long i7923;\n+       long i7924;\n+       long i7925;\n+       long i7926;\n+       long i7927;\n+       long i7928;\n+       long i7929;\n+       long i7930;\n+       long i7931;\n+       long i7932;\n+       long i7933;\n+       long i7934;\n+       long i7935;\n+       long i7936;\n+       long i7937;\n+       long i7938;\n+       long i7939;\n+       long i7940;\n+       long i7941;\n+       long i7942;\n+       long i7943;\n+       long i7944;\n+       long i7945;\n+       long i7946;\n+       long i7947;\n+       long i7948;\n+       long i7949;\n+       long i7950;\n+       long i7951;\n+       long i7952;\n+       long i7953;\n+       long i7954;\n+       long i7955;\n+       long i7956;\n+       long i7957;\n+       long i7958;\n+       long i7959;\n+       long i7960;\n+       long i7961;\n+       long i7962;\n+       long i7963;\n+       long i7964;\n+       long i7965;\n+       long i7966;\n+       long i7967;\n+       long i7968;\n+       long i7969;\n+       long i7970;\n+       long i7971;\n+       long i7972;\n+       long i7973;\n+       long i7974;\n+       long i7975;\n+       long i7976;\n+       long i7977;\n+       long i7978;\n+       long i7979;\n+       long i7980;\n+       long i7981;\n+       long i7982;\n+       long i7983;\n+       long i7984;\n+       long i7985;\n+       long i7986;\n+       long i7987;\n+       long i7988;\n+       long i7989;\n+       long i7990;\n+       long i7991;\n+       long i7992;\n+       long i7993;\n+       long i7994;\n+       long i7995;\n+       long i7996;\n+       long i7997;\n+       long i7998;\n+       long i7999;\n+       long i8000;\n+       long i8001;\n+       long i8002;\n+       long i8003;\n+       long i8004;\n+       long i8005;\n+       long i8006;\n+       long i8007;\n+       long i8008;\n+       long i8009;\n+       long i8010;\n+       long i8011;\n+       long i8012;\n+       long i8013;\n+       long i8014;\n+       long i8015;\n+       long i8016;\n+       long i8017;\n+       long i8018;\n+       long i8019;\n+       long i8020;\n+       long i8021;\n+       long i8022;\n+       long i8023;\n+       long i8024;\n+       long i8025;\n+       long i8026;\n+       long i8027;\n+       long i8028;\n+       long i8029;\n+       long i8030;\n+       long i8031;\n+       long i8032;\n+       long i8033;\n+       long i8034;\n+       long i8035;\n+       long i8036;\n+       long i8037;\n+       long i8038;\n+       long i8039;\n+       long i8040;\n+       long i8041;\n+       long i8042;\n+       long i8043;\n+       long i8044;\n+       long i8045;\n+       long i8046;\n+       long i8047;\n+       long i8048;\n+       long i8049;\n+       long i8050;\n+       long i8051;\n+       long i8052;\n+       long i8053;\n+       long i8054;\n+       long i8055;\n+       long i8056;\n+       long i8057;\n+       long i8058;\n+       long i8059;\n+       long i8060;\n+       long i8061;\n+       long i8062;\n+       long i8063;\n+       long i8064;\n+       long i8065;\n+       long i8066;\n+       long i8067;\n+       long i8068;\n+       long i8069;\n+       long i8070;\n+       long i8071;\n+       long i8072;\n+       long i8073;\n+       long i8074;\n+       long i8075;\n+       long i8076;\n+       long i8077;\n+       long i8078;\n+       long i8079;\n+       long i8080;\n+       long i8081;\n+       long i8082;\n+       long i8083;\n+       long i8084;\n+       long i8085;\n+       long i8086;\n+       long i8087;\n+       long i8088;\n+       long i8089;\n+       long i8090;\n+       long i8091;\n+       long i8092;\n+       long i8093;\n+       long i8094;\n+       long i8095;\n+       long i8096;\n+       long i8097;\n+       long i8098;\n+       long i8099;\n+       long i8100;\n+       long i8101;\n+       long i8102;\n+       long i8103;\n+       long i8104;\n+       long i8105;\n+       long i8106;\n+       long i8107;\n+       long i8108;\n+       long i8109;\n+       long i8110;\n+       long i8111;\n+       long i8112;\n+       long i8113;\n+       long i8114;\n+       long i8115;\n+       long i8116;\n+       long i8117;\n+       long i8118;\n+       long i8119;\n+       long i8120;\n+       long i8121;\n+       long i8122;\n+       long i8123;\n+       long i8124;\n+       long i8125;\n+       long i8126;\n+       long i8127;\n+       long i8128;\n+       long i8129;\n+       long i8130;\n+       long i8131;\n+       long i8132;\n+       long i8133;\n+       long i8134;\n+       long i8135;\n+       long i8136;\n+       long i8137;\n+       long i8138;\n+       long i8139;\n+       long i8140;\n+       long i8141;\n+       long i8142;\n+       long i8143;\n+       long i8144;\n+       long i8145;\n+       long i8146;\n+       long i8147;\n+       long i8148;\n+       long i8149;\n+       long i8150;\n+       long i8151;\n+       long i8152;\n+       long i8153;\n+       long i8154;\n+       long i8155;\n+       long i8156;\n+       long i8157;\n+       long i8158;\n+       long i8159;\n+       long i8160;\n+       long i8161;\n+       long i8162;\n+       long i8163;\n+       long i8164;\n+       long i8165;\n+       long i8166;\n+       long i8167;\n+       long i8168;\n+       long i8169;\n+       long i8170;\n+       long i8171;\n+       long i8172;\n+       long i8173;\n+       long i8174;\n+       long i8175;\n+       long i8176;\n+       long i8177;\n+       long i8178;\n+       long i8179;\n+       long i8180;\n+       long i8181;\n+       long i8182;\n+       long i8183;\n+       long i8184;\n+       long i8185;\n+       long i8186;\n+       long i8187;\n+       long i8188;\n+       long i8189;\n+    }\n+    static class Class131072 extends BaseClass {\n+       long i0;\n+       long i1;\n+       long i2;\n+       long i3;\n+       long i4;\n+       long i5;\n+       long i6;\n+       long i7;\n+       long i8;\n+       long i9;\n+       long i10;\n+       long i11;\n+       long i12;\n+       long i13;\n+       long i14;\n+       long i15;\n+       long i16;\n+       long i17;\n+       long i18;\n+       long i19;\n+       long i20;\n+       long i21;\n+       long i22;\n+       long i23;\n+       long i24;\n+       long i25;\n+       long i26;\n+       long i27;\n+       long i28;\n+       long i29;\n+       long i30;\n+       long i31;\n+       long i32;\n+       long i33;\n+       long i34;\n+       long i35;\n+       long i36;\n+       long i37;\n+       long i38;\n+       long i39;\n+       long i40;\n+       long i41;\n+       long i42;\n+       long i43;\n+       long i44;\n+       long i45;\n+       long i46;\n+       long i47;\n+       long i48;\n+       long i49;\n+       long i50;\n+       long i51;\n+       long i52;\n+       long i53;\n+       long i54;\n+       long i55;\n+       long i56;\n+       long i57;\n+       long i58;\n+       long i59;\n+       long i60;\n+       long i61;\n+       long i62;\n+       long i63;\n+       long i64;\n+       long i65;\n+       long i66;\n+       long i67;\n+       long i68;\n+       long i69;\n+       long i70;\n+       long i71;\n+       long i72;\n+       long i73;\n+       long i74;\n+       long i75;\n+       long i76;\n+       long i77;\n+       long i78;\n+       long i79;\n+       long i80;\n+       long i81;\n+       long i82;\n+       long i83;\n+       long i84;\n+       long i85;\n+       long i86;\n+       long i87;\n+       long i88;\n+       long i89;\n+       long i90;\n+       long i91;\n+       long i92;\n+       long i93;\n+       long i94;\n+       long i95;\n+       long i96;\n+       long i97;\n+       long i98;\n+       long i99;\n+       long i100;\n+       long i101;\n+       long i102;\n+       long i103;\n+       long i104;\n+       long i105;\n+       long i106;\n+       long i107;\n+       long i108;\n+       long i109;\n+       long i110;\n+       long i111;\n+       long i112;\n+       long i113;\n+       long i114;\n+       long i115;\n+       long i116;\n+       long i117;\n+       long i118;\n+       long i119;\n+       long i120;\n+       long i121;\n+       long i122;\n+       long i123;\n+       long i124;\n+       long i125;\n+       long i126;\n+       long i127;\n+       long i128;\n+       long i129;\n+       long i130;\n+       long i131;\n+       long i132;\n+       long i133;\n+       long i134;\n+       long i135;\n+       long i136;\n+       long i137;\n+       long i138;\n+       long i139;\n+       long i140;\n+       long i141;\n+       long i142;\n+       long i143;\n+       long i144;\n+       long i145;\n+       long i146;\n+       long i147;\n+       long i148;\n+       long i149;\n+       long i150;\n+       long i151;\n+       long i152;\n+       long i153;\n+       long i154;\n+       long i155;\n+       long i156;\n+       long i157;\n+       long i158;\n+       long i159;\n+       long i160;\n+       long i161;\n+       long i162;\n+       long i163;\n+       long i164;\n+       long i165;\n+       long i166;\n+       long i167;\n+       long i168;\n+       long i169;\n+       long i170;\n+       long i171;\n+       long i172;\n+       long i173;\n+       long i174;\n+       long i175;\n+       long i176;\n+       long i177;\n+       long i178;\n+       long i179;\n+       long i180;\n+       long i181;\n+       long i182;\n+       long i183;\n+       long i184;\n+       long i185;\n+       long i186;\n+       long i187;\n+       long i188;\n+       long i189;\n+       long i190;\n+       long i191;\n+       long i192;\n+       long i193;\n+       long i194;\n+       long i195;\n+       long i196;\n+       long i197;\n+       long i198;\n+       long i199;\n+       long i200;\n+       long i201;\n+       long i202;\n+       long i203;\n+       long i204;\n+       long i205;\n+       long i206;\n+       long i207;\n+       long i208;\n+       long i209;\n+       long i210;\n+       long i211;\n+       long i212;\n+       long i213;\n+       long i214;\n+       long i215;\n+       long i216;\n+       long i217;\n+       long i218;\n+       long i219;\n+       long i220;\n+       long i221;\n+       long i222;\n+       long i223;\n+       long i224;\n+       long i225;\n+       long i226;\n+       long i227;\n+       long i228;\n+       long i229;\n+       long i230;\n+       long i231;\n+       long i232;\n+       long i233;\n+       long i234;\n+       long i235;\n+       long i236;\n+       long i237;\n+       long i238;\n+       long i239;\n+       long i240;\n+       long i241;\n+       long i242;\n+       long i243;\n+       long i244;\n+       long i245;\n+       long i246;\n+       long i247;\n+       long i248;\n+       long i249;\n+       long i250;\n+       long i251;\n+       long i252;\n+       long i253;\n+       long i254;\n+       long i255;\n+       long i256;\n+       long i257;\n+       long i258;\n+       long i259;\n+       long i260;\n+       long i261;\n+       long i262;\n+       long i263;\n+       long i264;\n+       long i265;\n+       long i266;\n+       long i267;\n+       long i268;\n+       long i269;\n+       long i270;\n+       long i271;\n+       long i272;\n+       long i273;\n+       long i274;\n+       long i275;\n+       long i276;\n+       long i277;\n+       long i278;\n+       long i279;\n+       long i280;\n+       long i281;\n+       long i282;\n+       long i283;\n+       long i284;\n+       long i285;\n+       long i286;\n+       long i287;\n+       long i288;\n+       long i289;\n+       long i290;\n+       long i291;\n+       long i292;\n+       long i293;\n+       long i294;\n+       long i295;\n+       long i296;\n+       long i297;\n+       long i298;\n+       long i299;\n+       long i300;\n+       long i301;\n+       long i302;\n+       long i303;\n+       long i304;\n+       long i305;\n+       long i306;\n+       long i307;\n+       long i308;\n+       long i309;\n+       long i310;\n+       long i311;\n+       long i312;\n+       long i313;\n+       long i314;\n+       long i315;\n+       long i316;\n+       long i317;\n+       long i318;\n+       long i319;\n+       long i320;\n+       long i321;\n+       long i322;\n+       long i323;\n+       long i324;\n+       long i325;\n+       long i326;\n+       long i327;\n+       long i328;\n+       long i329;\n+       long i330;\n+       long i331;\n+       long i332;\n+       long i333;\n+       long i334;\n+       long i335;\n+       long i336;\n+       long i337;\n+       long i338;\n+       long i339;\n+       long i340;\n+       long i341;\n+       long i342;\n+       long i343;\n+       long i344;\n+       long i345;\n+       long i346;\n+       long i347;\n+       long i348;\n+       long i349;\n+       long i350;\n+       long i351;\n+       long i352;\n+       long i353;\n+       long i354;\n+       long i355;\n+       long i356;\n+       long i357;\n+       long i358;\n+       long i359;\n+       long i360;\n+       long i361;\n+       long i362;\n+       long i363;\n+       long i364;\n+       long i365;\n+       long i366;\n+       long i367;\n+       long i368;\n+       long i369;\n+       long i370;\n+       long i371;\n+       long i372;\n+       long i373;\n+       long i374;\n+       long i375;\n+       long i376;\n+       long i377;\n+       long i378;\n+       long i379;\n+       long i380;\n+       long i381;\n+       long i382;\n+       long i383;\n+       long i384;\n+       long i385;\n+       long i386;\n+       long i387;\n+       long i388;\n+       long i389;\n+       long i390;\n+       long i391;\n+       long i392;\n+       long i393;\n+       long i394;\n+       long i395;\n+       long i396;\n+       long i397;\n+       long i398;\n+       long i399;\n+       long i400;\n+       long i401;\n+       long i402;\n+       long i403;\n+       long i404;\n+       long i405;\n+       long i406;\n+       long i407;\n+       long i408;\n+       long i409;\n+       long i410;\n+       long i411;\n+       long i412;\n+       long i413;\n+       long i414;\n+       long i415;\n+       long i416;\n+       long i417;\n+       long i418;\n+       long i419;\n+       long i420;\n+       long i421;\n+       long i422;\n+       long i423;\n+       long i424;\n+       long i425;\n+       long i426;\n+       long i427;\n+       long i428;\n+       long i429;\n+       long i430;\n+       long i431;\n+       long i432;\n+       long i433;\n+       long i434;\n+       long i435;\n+       long i436;\n+       long i437;\n+       long i438;\n+       long i439;\n+       long i440;\n+       long i441;\n+       long i442;\n+       long i443;\n+       long i444;\n+       long i445;\n+       long i446;\n+       long i447;\n+       long i448;\n+       long i449;\n+       long i450;\n+       long i451;\n+       long i452;\n+       long i453;\n+       long i454;\n+       long i455;\n+       long i456;\n+       long i457;\n+       long i458;\n+       long i459;\n+       long i460;\n+       long i461;\n+       long i462;\n+       long i463;\n+       long i464;\n+       long i465;\n+       long i466;\n+       long i467;\n+       long i468;\n+       long i469;\n+       long i470;\n+       long i471;\n+       long i472;\n+       long i473;\n+       long i474;\n+       long i475;\n+       long i476;\n+       long i477;\n+       long i478;\n+       long i479;\n+       long i480;\n+       long i481;\n+       long i482;\n+       long i483;\n+       long i484;\n+       long i485;\n+       long i486;\n+       long i487;\n+       long i488;\n+       long i489;\n+       long i490;\n+       long i491;\n+       long i492;\n+       long i493;\n+       long i494;\n+       long i495;\n+       long i496;\n+       long i497;\n+       long i498;\n+       long i499;\n+       long i500;\n+       long i501;\n+       long i502;\n+       long i503;\n+       long i504;\n+       long i505;\n+       long i506;\n+       long i507;\n+       long i508;\n+       long i509;\n+       long i510;\n+       long i511;\n+       long i512;\n+       long i513;\n+       long i514;\n+       long i515;\n+       long i516;\n+       long i517;\n+       long i518;\n+       long i519;\n+       long i520;\n+       long i521;\n+       long i522;\n+       long i523;\n+       long i524;\n+       long i525;\n+       long i526;\n+       long i527;\n+       long i528;\n+       long i529;\n+       long i530;\n+       long i531;\n+       long i532;\n+       long i533;\n+       long i534;\n+       long i535;\n+       long i536;\n+       long i537;\n+       long i538;\n+       long i539;\n+       long i540;\n+       long i541;\n+       long i542;\n+       long i543;\n+       long i544;\n+       long i545;\n+       long i546;\n+       long i547;\n+       long i548;\n+       long i549;\n+       long i550;\n+       long i551;\n+       long i552;\n+       long i553;\n+       long i554;\n+       long i555;\n+       long i556;\n+       long i557;\n+       long i558;\n+       long i559;\n+       long i560;\n+       long i561;\n+       long i562;\n+       long i563;\n+       long i564;\n+       long i565;\n+       long i566;\n+       long i567;\n+       long i568;\n+       long i569;\n+       long i570;\n+       long i571;\n+       long i572;\n+       long i573;\n+       long i574;\n+       long i575;\n+       long i576;\n+       long i577;\n+       long i578;\n+       long i579;\n+       long i580;\n+       long i581;\n+       long i582;\n+       long i583;\n+       long i584;\n+       long i585;\n+       long i586;\n+       long i587;\n+       long i588;\n+       long i589;\n+       long i590;\n+       long i591;\n+       long i592;\n+       long i593;\n+       long i594;\n+       long i595;\n+       long i596;\n+       long i597;\n+       long i598;\n+       long i599;\n+       long i600;\n+       long i601;\n+       long i602;\n+       long i603;\n+       long i604;\n+       long i605;\n+       long i606;\n+       long i607;\n+       long i608;\n+       long i609;\n+       long i610;\n+       long i611;\n+       long i612;\n+       long i613;\n+       long i614;\n+       long i615;\n+       long i616;\n+       long i617;\n+       long i618;\n+       long i619;\n+       long i620;\n+       long i621;\n+       long i622;\n+       long i623;\n+       long i624;\n+       long i625;\n+       long i626;\n+       long i627;\n+       long i628;\n+       long i629;\n+       long i630;\n+       long i631;\n+       long i632;\n+       long i633;\n+       long i634;\n+       long i635;\n+       long i636;\n+       long i637;\n+       long i638;\n+       long i639;\n+       long i640;\n+       long i641;\n+       long i642;\n+       long i643;\n+       long i644;\n+       long i645;\n+       long i646;\n+       long i647;\n+       long i648;\n+       long i649;\n+       long i650;\n+       long i651;\n+       long i652;\n+       long i653;\n+       long i654;\n+       long i655;\n+       long i656;\n+       long i657;\n+       long i658;\n+       long i659;\n+       long i660;\n+       long i661;\n+       long i662;\n+       long i663;\n+       long i664;\n+       long i665;\n+       long i666;\n+       long i667;\n+       long i668;\n+       long i669;\n+       long i670;\n+       long i671;\n+       long i672;\n+       long i673;\n+       long i674;\n+       long i675;\n+       long i676;\n+       long i677;\n+       long i678;\n+       long i679;\n+       long i680;\n+       long i681;\n+       long i682;\n+       long i683;\n+       long i684;\n+       long i685;\n+       long i686;\n+       long i687;\n+       long i688;\n+       long i689;\n+       long i690;\n+       long i691;\n+       long i692;\n+       long i693;\n+       long i694;\n+       long i695;\n+       long i696;\n+       long i697;\n+       long i698;\n+       long i699;\n+       long i700;\n+       long i701;\n+       long i702;\n+       long i703;\n+       long i704;\n+       long i705;\n+       long i706;\n+       long i707;\n+       long i708;\n+       long i709;\n+       long i710;\n+       long i711;\n+       long i712;\n+       long i713;\n+       long i714;\n+       long i715;\n+       long i716;\n+       long i717;\n+       long i718;\n+       long i719;\n+       long i720;\n+       long i721;\n+       long i722;\n+       long i723;\n+       long i724;\n+       long i725;\n+       long i726;\n+       long i727;\n+       long i728;\n+       long i729;\n+       long i730;\n+       long i731;\n+       long i732;\n+       long i733;\n+       long i734;\n+       long i735;\n+       long i736;\n+       long i737;\n+       long i738;\n+       long i739;\n+       long i740;\n+       long i741;\n+       long i742;\n+       long i743;\n+       long i744;\n+       long i745;\n+       long i746;\n+       long i747;\n+       long i748;\n+       long i749;\n+       long i750;\n+       long i751;\n+       long i752;\n+       long i753;\n+       long i754;\n+       long i755;\n+       long i756;\n+       long i757;\n+       long i758;\n+       long i759;\n+       long i760;\n+       long i761;\n+       long i762;\n+       long i763;\n+       long i764;\n+       long i765;\n+       long i766;\n+       long i767;\n+       long i768;\n+       long i769;\n+       long i770;\n+       long i771;\n+       long i772;\n+       long i773;\n+       long i774;\n+       long i775;\n+       long i776;\n+       long i777;\n+       long i778;\n+       long i779;\n+       long i780;\n+       long i781;\n+       long i782;\n+       long i783;\n+       long i784;\n+       long i785;\n+       long i786;\n+       long i787;\n+       long i788;\n+       long i789;\n+       long i790;\n+       long i791;\n+       long i792;\n+       long i793;\n+       long i794;\n+       long i795;\n+       long i796;\n+       long i797;\n+       long i798;\n+       long i799;\n+       long i800;\n+       long i801;\n+       long i802;\n+       long i803;\n+       long i804;\n+       long i805;\n+       long i806;\n+       long i807;\n+       long i808;\n+       long i809;\n+       long i810;\n+       long i811;\n+       long i812;\n+       long i813;\n+       long i814;\n+       long i815;\n+       long i816;\n+       long i817;\n+       long i818;\n+       long i819;\n+       long i820;\n+       long i821;\n+       long i822;\n+       long i823;\n+       long i824;\n+       long i825;\n+       long i826;\n+       long i827;\n+       long i828;\n+       long i829;\n+       long i830;\n+       long i831;\n+       long i832;\n+       long i833;\n+       long i834;\n+       long i835;\n+       long i836;\n+       long i837;\n+       long i838;\n+       long i839;\n+       long i840;\n+       long i841;\n+       long i842;\n+       long i843;\n+       long i844;\n+       long i845;\n+       long i846;\n+       long i847;\n+       long i848;\n+       long i849;\n+       long i850;\n+       long i851;\n+       long i852;\n+       long i853;\n+       long i854;\n+       long i855;\n+       long i856;\n+       long i857;\n+       long i858;\n+       long i859;\n+       long i860;\n+       long i861;\n+       long i862;\n+       long i863;\n+       long i864;\n+       long i865;\n+       long i866;\n+       long i867;\n+       long i868;\n+       long i869;\n+       long i870;\n+       long i871;\n+       long i872;\n+       long i873;\n+       long i874;\n+       long i875;\n+       long i876;\n+       long i877;\n+       long i878;\n+       long i879;\n+       long i880;\n+       long i881;\n+       long i882;\n+       long i883;\n+       long i884;\n+       long i885;\n+       long i886;\n+       long i887;\n+       long i888;\n+       long i889;\n+       long i890;\n+       long i891;\n+       long i892;\n+       long i893;\n+       long i894;\n+       long i895;\n+       long i896;\n+       long i897;\n+       long i898;\n+       long i899;\n+       long i900;\n+       long i901;\n+       long i902;\n+       long i903;\n+       long i904;\n+       long i905;\n+       long i906;\n+       long i907;\n+       long i908;\n+       long i909;\n+       long i910;\n+       long i911;\n+       long i912;\n+       long i913;\n+       long i914;\n+       long i915;\n+       long i916;\n+       long i917;\n+       long i918;\n+       long i919;\n+       long i920;\n+       long i921;\n+       long i922;\n+       long i923;\n+       long i924;\n+       long i925;\n+       long i926;\n+       long i927;\n+       long i928;\n+       long i929;\n+       long i930;\n+       long i931;\n+       long i932;\n+       long i933;\n+       long i934;\n+       long i935;\n+       long i936;\n+       long i937;\n+       long i938;\n+       long i939;\n+       long i940;\n+       long i941;\n+       long i942;\n+       long i943;\n+       long i944;\n+       long i945;\n+       long i946;\n+       long i947;\n+       long i948;\n+       long i949;\n+       long i950;\n+       long i951;\n+       long i952;\n+       long i953;\n+       long i954;\n+       long i955;\n+       long i956;\n+       long i957;\n+       long i958;\n+       long i959;\n+       long i960;\n+       long i961;\n+       long i962;\n+       long i963;\n+       long i964;\n+       long i965;\n+       long i966;\n+       long i967;\n+       long i968;\n+       long i969;\n+       long i970;\n+       long i971;\n+       long i972;\n+       long i973;\n+       long i974;\n+       long i975;\n+       long i976;\n+       long i977;\n+       long i978;\n+       long i979;\n+       long i980;\n+       long i981;\n+       long i982;\n+       long i983;\n+       long i984;\n+       long i985;\n+       long i986;\n+       long i987;\n+       long i988;\n+       long i989;\n+       long i990;\n+       long i991;\n+       long i992;\n+       long i993;\n+       long i994;\n+       long i995;\n+       long i996;\n+       long i997;\n+       long i998;\n+       long i999;\n+       long i1000;\n+       long i1001;\n+       long i1002;\n+       long i1003;\n+       long i1004;\n+       long i1005;\n+       long i1006;\n+       long i1007;\n+       long i1008;\n+       long i1009;\n+       long i1010;\n+       long i1011;\n+       long i1012;\n+       long i1013;\n+       long i1014;\n+       long i1015;\n+       long i1016;\n+       long i1017;\n+       long i1018;\n+       long i1019;\n+       long i1020;\n+       long i1021;\n+       long i1022;\n+       long i1023;\n+       long i1024;\n+       long i1025;\n+       long i1026;\n+       long i1027;\n+       long i1028;\n+       long i1029;\n+       long i1030;\n+       long i1031;\n+       long i1032;\n+       long i1033;\n+       long i1034;\n+       long i1035;\n+       long i1036;\n+       long i1037;\n+       long i1038;\n+       long i1039;\n+       long i1040;\n+       long i1041;\n+       long i1042;\n+       long i1043;\n+       long i1044;\n+       long i1045;\n+       long i1046;\n+       long i1047;\n+       long i1048;\n+       long i1049;\n+       long i1050;\n+       long i1051;\n+       long i1052;\n+       long i1053;\n+       long i1054;\n+       long i1055;\n+       long i1056;\n+       long i1057;\n+       long i1058;\n+       long i1059;\n+       long i1060;\n+       long i1061;\n+       long i1062;\n+       long i1063;\n+       long i1064;\n+       long i1065;\n+       long i1066;\n+       long i1067;\n+       long i1068;\n+       long i1069;\n+       long i1070;\n+       long i1071;\n+       long i1072;\n+       long i1073;\n+       long i1074;\n+       long i1075;\n+       long i1076;\n+       long i1077;\n+       long i1078;\n+       long i1079;\n+       long i1080;\n+       long i1081;\n+       long i1082;\n+       long i1083;\n+       long i1084;\n+       long i1085;\n+       long i1086;\n+       long i1087;\n+       long i1088;\n+       long i1089;\n+       long i1090;\n+       long i1091;\n+       long i1092;\n+       long i1093;\n+       long i1094;\n+       long i1095;\n+       long i1096;\n+       long i1097;\n+       long i1098;\n+       long i1099;\n+       long i1100;\n+       long i1101;\n+       long i1102;\n+       long i1103;\n+       long i1104;\n+       long i1105;\n+       long i1106;\n+       long i1107;\n+       long i1108;\n+       long i1109;\n+       long i1110;\n+       long i1111;\n+       long i1112;\n+       long i1113;\n+       long i1114;\n+       long i1115;\n+       long i1116;\n+       long i1117;\n+       long i1118;\n+       long i1119;\n+       long i1120;\n+       long i1121;\n+       long i1122;\n+       long i1123;\n+       long i1124;\n+       long i1125;\n+       long i1126;\n+       long i1127;\n+       long i1128;\n+       long i1129;\n+       long i1130;\n+       long i1131;\n+       long i1132;\n+       long i1133;\n+       long i1134;\n+       long i1135;\n+       long i1136;\n+       long i1137;\n+       long i1138;\n+       long i1139;\n+       long i1140;\n+       long i1141;\n+       long i1142;\n+       long i1143;\n+       long i1144;\n+       long i1145;\n+       long i1146;\n+       long i1147;\n+       long i1148;\n+       long i1149;\n+       long i1150;\n+       long i1151;\n+       long i1152;\n+       long i1153;\n+       long i1154;\n+       long i1155;\n+       long i1156;\n+       long i1157;\n+       long i1158;\n+       long i1159;\n+       long i1160;\n+       long i1161;\n+       long i1162;\n+       long i1163;\n+       long i1164;\n+       long i1165;\n+       long i1166;\n+       long i1167;\n+       long i1168;\n+       long i1169;\n+       long i1170;\n+       long i1171;\n+       long i1172;\n+       long i1173;\n+       long i1174;\n+       long i1175;\n+       long i1176;\n+       long i1177;\n+       long i1178;\n+       long i1179;\n+       long i1180;\n+       long i1181;\n+       long i1182;\n+       long i1183;\n+       long i1184;\n+       long i1185;\n+       long i1186;\n+       long i1187;\n+       long i1188;\n+       long i1189;\n+       long i1190;\n+       long i1191;\n+       long i1192;\n+       long i1193;\n+       long i1194;\n+       long i1195;\n+       long i1196;\n+       long i1197;\n+       long i1198;\n+       long i1199;\n+       long i1200;\n+       long i1201;\n+       long i1202;\n+       long i1203;\n+       long i1204;\n+       long i1205;\n+       long i1206;\n+       long i1207;\n+       long i1208;\n+       long i1209;\n+       long i1210;\n+       long i1211;\n+       long i1212;\n+       long i1213;\n+       long i1214;\n+       long i1215;\n+       long i1216;\n+       long i1217;\n+       long i1218;\n+       long i1219;\n+       long i1220;\n+       long i1221;\n+       long i1222;\n+       long i1223;\n+       long i1224;\n+       long i1225;\n+       long i1226;\n+       long i1227;\n+       long i1228;\n+       long i1229;\n+       long i1230;\n+       long i1231;\n+       long i1232;\n+       long i1233;\n+       long i1234;\n+       long i1235;\n+       long i1236;\n+       long i1237;\n+       long i1238;\n+       long i1239;\n+       long i1240;\n+       long i1241;\n+       long i1242;\n+       long i1243;\n+       long i1244;\n+       long i1245;\n+       long i1246;\n+       long i1247;\n+       long i1248;\n+       long i1249;\n+       long i1250;\n+       long i1251;\n+       long i1252;\n+       long i1253;\n+       long i1254;\n+       long i1255;\n+       long i1256;\n+       long i1257;\n+       long i1258;\n+       long i1259;\n+       long i1260;\n+       long i1261;\n+       long i1262;\n+       long i1263;\n+       long i1264;\n+       long i1265;\n+       long i1266;\n+       long i1267;\n+       long i1268;\n+       long i1269;\n+       long i1270;\n+       long i1271;\n+       long i1272;\n+       long i1273;\n+       long i1274;\n+       long i1275;\n+       long i1276;\n+       long i1277;\n+       long i1278;\n+       long i1279;\n+       long i1280;\n+       long i1281;\n+       long i1282;\n+       long i1283;\n+       long i1284;\n+       long i1285;\n+       long i1286;\n+       long i1287;\n+       long i1288;\n+       long i1289;\n+       long i1290;\n+       long i1291;\n+       long i1292;\n+       long i1293;\n+       long i1294;\n+       long i1295;\n+       long i1296;\n+       long i1297;\n+       long i1298;\n+       long i1299;\n+       long i1300;\n+       long i1301;\n+       long i1302;\n+       long i1303;\n+       long i1304;\n+       long i1305;\n+       long i1306;\n+       long i1307;\n+       long i1308;\n+       long i1309;\n+       long i1310;\n+       long i1311;\n+       long i1312;\n+       long i1313;\n+       long i1314;\n+       long i1315;\n+       long i1316;\n+       long i1317;\n+       long i1318;\n+       long i1319;\n+       long i1320;\n+       long i1321;\n+       long i1322;\n+       long i1323;\n+       long i1324;\n+       long i1325;\n+       long i1326;\n+       long i1327;\n+       long i1328;\n+       long i1329;\n+       long i1330;\n+       long i1331;\n+       long i1332;\n+       long i1333;\n+       long i1334;\n+       long i1335;\n+       long i1336;\n+       long i1337;\n+       long i1338;\n+       long i1339;\n+       long i1340;\n+       long i1341;\n+       long i1342;\n+       long i1343;\n+       long i1344;\n+       long i1345;\n+       long i1346;\n+       long i1347;\n+       long i1348;\n+       long i1349;\n+       long i1350;\n+       long i1351;\n+       long i1352;\n+       long i1353;\n+       long i1354;\n+       long i1355;\n+       long i1356;\n+       long i1357;\n+       long i1358;\n+       long i1359;\n+       long i1360;\n+       long i1361;\n+       long i1362;\n+       long i1363;\n+       long i1364;\n+       long i1365;\n+       long i1366;\n+       long i1367;\n+       long i1368;\n+       long i1369;\n+       long i1370;\n+       long i1371;\n+       long i1372;\n+       long i1373;\n+       long i1374;\n+       long i1375;\n+       long i1376;\n+       long i1377;\n+       long i1378;\n+       long i1379;\n+       long i1380;\n+       long i1381;\n+       long i1382;\n+       long i1383;\n+       long i1384;\n+       long i1385;\n+       long i1386;\n+       long i1387;\n+       long i1388;\n+       long i1389;\n+       long i1390;\n+       long i1391;\n+       long i1392;\n+       long i1393;\n+       long i1394;\n+       long i1395;\n+       long i1396;\n+       long i1397;\n+       long i1398;\n+       long i1399;\n+       long i1400;\n+       long i1401;\n+       long i1402;\n+       long i1403;\n+       long i1404;\n+       long i1405;\n+       long i1406;\n+       long i1407;\n+       long i1408;\n+       long i1409;\n+       long i1410;\n+       long i1411;\n+       long i1412;\n+       long i1413;\n+       long i1414;\n+       long i1415;\n+       long i1416;\n+       long i1417;\n+       long i1418;\n+       long i1419;\n+       long i1420;\n+       long i1421;\n+       long i1422;\n+       long i1423;\n+       long i1424;\n+       long i1425;\n+       long i1426;\n+       long i1427;\n+       long i1428;\n+       long i1429;\n+       long i1430;\n+       long i1431;\n+       long i1432;\n+       long i1433;\n+       long i1434;\n+       long i1435;\n+       long i1436;\n+       long i1437;\n+       long i1438;\n+       long i1439;\n+       long i1440;\n+       long i1441;\n+       long i1442;\n+       long i1443;\n+       long i1444;\n+       long i1445;\n+       long i1446;\n+       long i1447;\n+       long i1448;\n+       long i1449;\n+       long i1450;\n+       long i1451;\n+       long i1452;\n+       long i1453;\n+       long i1454;\n+       long i1455;\n+       long i1456;\n+       long i1457;\n+       long i1458;\n+       long i1459;\n+       long i1460;\n+       long i1461;\n+       long i1462;\n+       long i1463;\n+       long i1464;\n+       long i1465;\n+       long i1466;\n+       long i1467;\n+       long i1468;\n+       long i1469;\n+       long i1470;\n+       long i1471;\n+       long i1472;\n+       long i1473;\n+       long i1474;\n+       long i1475;\n+       long i1476;\n+       long i1477;\n+       long i1478;\n+       long i1479;\n+       long i1480;\n+       long i1481;\n+       long i1482;\n+       long i1483;\n+       long i1484;\n+       long i1485;\n+       long i1486;\n+       long i1487;\n+       long i1488;\n+       long i1489;\n+       long i1490;\n+       long i1491;\n+       long i1492;\n+       long i1493;\n+       long i1494;\n+       long i1495;\n+       long i1496;\n+       long i1497;\n+       long i1498;\n+       long i1499;\n+       long i1500;\n+       long i1501;\n+       long i1502;\n+       long i1503;\n+       long i1504;\n+       long i1505;\n+       long i1506;\n+       long i1507;\n+       long i1508;\n+       long i1509;\n+       long i1510;\n+       long i1511;\n+       long i1512;\n+       long i1513;\n+       long i1514;\n+       long i1515;\n+       long i1516;\n+       long i1517;\n+       long i1518;\n+       long i1519;\n+       long i1520;\n+       long i1521;\n+       long i1522;\n+       long i1523;\n+       long i1524;\n+       long i1525;\n+       long i1526;\n+       long i1527;\n+       long i1528;\n+       long i1529;\n+       long i1530;\n+       long i1531;\n+       long i1532;\n+       long i1533;\n+       long i1534;\n+       long i1535;\n+       long i1536;\n+       long i1537;\n+       long i1538;\n+       long i1539;\n+       long i1540;\n+       long i1541;\n+       long i1542;\n+       long i1543;\n+       long i1544;\n+       long i1545;\n+       long i1546;\n+       long i1547;\n+       long i1548;\n+       long i1549;\n+       long i1550;\n+       long i1551;\n+       long i1552;\n+       long i1553;\n+       long i1554;\n+       long i1555;\n+       long i1556;\n+       long i1557;\n+       long i1558;\n+       long i1559;\n+       long i1560;\n+       long i1561;\n+       long i1562;\n+       long i1563;\n+       long i1564;\n+       long i1565;\n+       long i1566;\n+       long i1567;\n+       long i1568;\n+       long i1569;\n+       long i1570;\n+       long i1571;\n+       long i1572;\n+       long i1573;\n+       long i1574;\n+       long i1575;\n+       long i1576;\n+       long i1577;\n+       long i1578;\n+       long i1579;\n+       long i1580;\n+       long i1581;\n+       long i1582;\n+       long i1583;\n+       long i1584;\n+       long i1585;\n+       long i1586;\n+       long i1587;\n+       long i1588;\n+       long i1589;\n+       long i1590;\n+       long i1591;\n+       long i1592;\n+       long i1593;\n+       long i1594;\n+       long i1595;\n+       long i1596;\n+       long i1597;\n+       long i1598;\n+       long i1599;\n+       long i1600;\n+       long i1601;\n+       long i1602;\n+       long i1603;\n+       long i1604;\n+       long i1605;\n+       long i1606;\n+       long i1607;\n+       long i1608;\n+       long i1609;\n+       long i1610;\n+       long i1611;\n+       long i1612;\n+       long i1613;\n+       long i1614;\n+       long i1615;\n+       long i1616;\n+       long i1617;\n+       long i1618;\n+       long i1619;\n+       long i1620;\n+       long i1621;\n+       long i1622;\n+       long i1623;\n+       long i1624;\n+       long i1625;\n+       long i1626;\n+       long i1627;\n+       long i1628;\n+       long i1629;\n+       long i1630;\n+       long i1631;\n+       long i1632;\n+       long i1633;\n+       long i1634;\n+       long i1635;\n+       long i1636;\n+       long i1637;\n+       long i1638;\n+       long i1639;\n+       long i1640;\n+       long i1641;\n+       long i1642;\n+       long i1643;\n+       long i1644;\n+       long i1645;\n+       long i1646;\n+       long i1647;\n+       long i1648;\n+       long i1649;\n+       long i1650;\n+       long i1651;\n+       long i1652;\n+       long i1653;\n+       long i1654;\n+       long i1655;\n+       long i1656;\n+       long i1657;\n+       long i1658;\n+       long i1659;\n+       long i1660;\n+       long i1661;\n+       long i1662;\n+       long i1663;\n+       long i1664;\n+       long i1665;\n+       long i1666;\n+       long i1667;\n+       long i1668;\n+       long i1669;\n+       long i1670;\n+       long i1671;\n+       long i1672;\n+       long i1673;\n+       long i1674;\n+       long i1675;\n+       long i1676;\n+       long i1677;\n+       long i1678;\n+       long i1679;\n+       long i1680;\n+       long i1681;\n+       long i1682;\n+       long i1683;\n+       long i1684;\n+       long i1685;\n+       long i1686;\n+       long i1687;\n+       long i1688;\n+       long i1689;\n+       long i1690;\n+       long i1691;\n+       long i1692;\n+       long i1693;\n+       long i1694;\n+       long i1695;\n+       long i1696;\n+       long i1697;\n+       long i1698;\n+       long i1699;\n+       long i1700;\n+       long i1701;\n+       long i1702;\n+       long i1703;\n+       long i1704;\n+       long i1705;\n+       long i1706;\n+       long i1707;\n+       long i1708;\n+       long i1709;\n+       long i1710;\n+       long i1711;\n+       long i1712;\n+       long i1713;\n+       long i1714;\n+       long i1715;\n+       long i1716;\n+       long i1717;\n+       long i1718;\n+       long i1719;\n+       long i1720;\n+       long i1721;\n+       long i1722;\n+       long i1723;\n+       long i1724;\n+       long i1725;\n+       long i1726;\n+       long i1727;\n+       long i1728;\n+       long i1729;\n+       long i1730;\n+       long i1731;\n+       long i1732;\n+       long i1733;\n+       long i1734;\n+       long i1735;\n+       long i1736;\n+       long i1737;\n+       long i1738;\n+       long i1739;\n+       long i1740;\n+       long i1741;\n+       long i1742;\n+       long i1743;\n+       long i1744;\n+       long i1745;\n+       long i1746;\n+       long i1747;\n+       long i1748;\n+       long i1749;\n+       long i1750;\n+       long i1751;\n+       long i1752;\n+       long i1753;\n+       long i1754;\n+       long i1755;\n+       long i1756;\n+       long i1757;\n+       long i1758;\n+       long i1759;\n+       long i1760;\n+       long i1761;\n+       long i1762;\n+       long i1763;\n+       long i1764;\n+       long i1765;\n+       long i1766;\n+       long i1767;\n+       long i1768;\n+       long i1769;\n+       long i1770;\n+       long i1771;\n+       long i1772;\n+       long i1773;\n+       long i1774;\n+       long i1775;\n+       long i1776;\n+       long i1777;\n+       long i1778;\n+       long i1779;\n+       long i1780;\n+       long i1781;\n+       long i1782;\n+       long i1783;\n+       long i1784;\n+       long i1785;\n+       long i1786;\n+       long i1787;\n+       long i1788;\n+       long i1789;\n+       long i1790;\n+       long i1791;\n+       long i1792;\n+       long i1793;\n+       long i1794;\n+       long i1795;\n+       long i1796;\n+       long i1797;\n+       long i1798;\n+       long i1799;\n+       long i1800;\n+       long i1801;\n+       long i1802;\n+       long i1803;\n+       long i1804;\n+       long i1805;\n+       long i1806;\n+       long i1807;\n+       long i1808;\n+       long i1809;\n+       long i1810;\n+       long i1811;\n+       long i1812;\n+       long i1813;\n+       long i1814;\n+       long i1815;\n+       long i1816;\n+       long i1817;\n+       long i1818;\n+       long i1819;\n+       long i1820;\n+       long i1821;\n+       long i1822;\n+       long i1823;\n+       long i1824;\n+       long i1825;\n+       long i1826;\n+       long i1827;\n+       long i1828;\n+       long i1829;\n+       long i1830;\n+       long i1831;\n+       long i1832;\n+       long i1833;\n+       long i1834;\n+       long i1835;\n+       long i1836;\n+       long i1837;\n+       long i1838;\n+       long i1839;\n+       long i1840;\n+       long i1841;\n+       long i1842;\n+       long i1843;\n+       long i1844;\n+       long i1845;\n+       long i1846;\n+       long i1847;\n+       long i1848;\n+       long i1849;\n+       long i1850;\n+       long i1851;\n+       long i1852;\n+       long i1853;\n+       long i1854;\n+       long i1855;\n+       long i1856;\n+       long i1857;\n+       long i1858;\n+       long i1859;\n+       long i1860;\n+       long i1861;\n+       long i1862;\n+       long i1863;\n+       long i1864;\n+       long i1865;\n+       long i1866;\n+       long i1867;\n+       long i1868;\n+       long i1869;\n+       long i1870;\n+       long i1871;\n+       long i1872;\n+       long i1873;\n+       long i1874;\n+       long i1875;\n+       long i1876;\n+       long i1877;\n+       long i1878;\n+       long i1879;\n+       long i1880;\n+       long i1881;\n+       long i1882;\n+       long i1883;\n+       long i1884;\n+       long i1885;\n+       long i1886;\n+       long i1887;\n+       long i1888;\n+       long i1889;\n+       long i1890;\n+       long i1891;\n+       long i1892;\n+       long i1893;\n+       long i1894;\n+       long i1895;\n+       long i1896;\n+       long i1897;\n+       long i1898;\n+       long i1899;\n+       long i1900;\n+       long i1901;\n+       long i1902;\n+       long i1903;\n+       long i1904;\n+       long i1905;\n+       long i1906;\n+       long i1907;\n+       long i1908;\n+       long i1909;\n+       long i1910;\n+       long i1911;\n+       long i1912;\n+       long i1913;\n+       long i1914;\n+       long i1915;\n+       long i1916;\n+       long i1917;\n+       long i1918;\n+       long i1919;\n+       long i1920;\n+       long i1921;\n+       long i1922;\n+       long i1923;\n+       long i1924;\n+       long i1925;\n+       long i1926;\n+       long i1927;\n+       long i1928;\n+       long i1929;\n+       long i1930;\n+       long i1931;\n+       long i1932;\n+       long i1933;\n+       long i1934;\n+       long i1935;\n+       long i1936;\n+       long i1937;\n+       long i1938;\n+       long i1939;\n+       long i1940;\n+       long i1941;\n+       long i1942;\n+       long i1943;\n+       long i1944;\n+       long i1945;\n+       long i1946;\n+       long i1947;\n+       long i1948;\n+       long i1949;\n+       long i1950;\n+       long i1951;\n+       long i1952;\n+       long i1953;\n+       long i1954;\n+       long i1955;\n+       long i1956;\n+       long i1957;\n+       long i1958;\n+       long i1959;\n+       long i1960;\n+       long i1961;\n+       long i1962;\n+       long i1963;\n+       long i1964;\n+       long i1965;\n+       long i1966;\n+       long i1967;\n+       long i1968;\n+       long i1969;\n+       long i1970;\n+       long i1971;\n+       long i1972;\n+       long i1973;\n+       long i1974;\n+       long i1975;\n+       long i1976;\n+       long i1977;\n+       long i1978;\n+       long i1979;\n+       long i1980;\n+       long i1981;\n+       long i1982;\n+       long i1983;\n+       long i1984;\n+       long i1985;\n+       long i1986;\n+       long i1987;\n+       long i1988;\n+       long i1989;\n+       long i1990;\n+       long i1991;\n+       long i1992;\n+       long i1993;\n+       long i1994;\n+       long i1995;\n+       long i1996;\n+       long i1997;\n+       long i1998;\n+       long i1999;\n+       long i2000;\n+       long i2001;\n+       long i2002;\n+       long i2003;\n+       long i2004;\n+       long i2005;\n+       long i2006;\n+       long i2007;\n+       long i2008;\n+       long i2009;\n+       long i2010;\n+       long i2011;\n+       long i2012;\n+       long i2013;\n+       long i2014;\n+       long i2015;\n+       long i2016;\n+       long i2017;\n+       long i2018;\n+       long i2019;\n+       long i2020;\n+       long i2021;\n+       long i2022;\n+       long i2023;\n+       long i2024;\n+       long i2025;\n+       long i2026;\n+       long i2027;\n+       long i2028;\n+       long i2029;\n+       long i2030;\n+       long i2031;\n+       long i2032;\n+       long i2033;\n+       long i2034;\n+       long i2035;\n+       long i2036;\n+       long i2037;\n+       long i2038;\n+       long i2039;\n+       long i2040;\n+       long i2041;\n+       long i2042;\n+       long i2043;\n+       long i2044;\n+       long i2045;\n+       long i2046;\n+       long i2047;\n+       long i2048;\n+       long i2049;\n+       long i2050;\n+       long i2051;\n+       long i2052;\n+       long i2053;\n+       long i2054;\n+       long i2055;\n+       long i2056;\n+       long i2057;\n+       long i2058;\n+       long i2059;\n+       long i2060;\n+       long i2061;\n+       long i2062;\n+       long i2063;\n+       long i2064;\n+       long i2065;\n+       long i2066;\n+       long i2067;\n+       long i2068;\n+       long i2069;\n+       long i2070;\n+       long i2071;\n+       long i2072;\n+       long i2073;\n+       long i2074;\n+       long i2075;\n+       long i2076;\n+       long i2077;\n+       long i2078;\n+       long i2079;\n+       long i2080;\n+       long i2081;\n+       long i2082;\n+       long i2083;\n+       long i2084;\n+       long i2085;\n+       long i2086;\n+       long i2087;\n+       long i2088;\n+       long i2089;\n+       long i2090;\n+       long i2091;\n+       long i2092;\n+       long i2093;\n+       long i2094;\n+       long i2095;\n+       long i2096;\n+       long i2097;\n+       long i2098;\n+       long i2099;\n+       long i2100;\n+       long i2101;\n+       long i2102;\n+       long i2103;\n+       long i2104;\n+       long i2105;\n+       long i2106;\n+       long i2107;\n+       long i2108;\n+       long i2109;\n+       long i2110;\n+       long i2111;\n+       long i2112;\n+       long i2113;\n+       long i2114;\n+       long i2115;\n+       long i2116;\n+       long i2117;\n+       long i2118;\n+       long i2119;\n+       long i2120;\n+       long i2121;\n+       long i2122;\n+       long i2123;\n+       long i2124;\n+       long i2125;\n+       long i2126;\n+       long i2127;\n+       long i2128;\n+       long i2129;\n+       long i2130;\n+       long i2131;\n+       long i2132;\n+       long i2133;\n+       long i2134;\n+       long i2135;\n+       long i2136;\n+       long i2137;\n+       long i2138;\n+       long i2139;\n+       long i2140;\n+       long i2141;\n+       long i2142;\n+       long i2143;\n+       long i2144;\n+       long i2145;\n+       long i2146;\n+       long i2147;\n+       long i2148;\n+       long i2149;\n+       long i2150;\n+       long i2151;\n+       long i2152;\n+       long i2153;\n+       long i2154;\n+       long i2155;\n+       long i2156;\n+       long i2157;\n+       long i2158;\n+       long i2159;\n+       long i2160;\n+       long i2161;\n+       long i2162;\n+       long i2163;\n+       long i2164;\n+       long i2165;\n+       long i2166;\n+       long i2167;\n+       long i2168;\n+       long i2169;\n+       long i2170;\n+       long i2171;\n+       long i2172;\n+       long i2173;\n+       long i2174;\n+       long i2175;\n+       long i2176;\n+       long i2177;\n+       long i2178;\n+       long i2179;\n+       long i2180;\n+       long i2181;\n+       long i2182;\n+       long i2183;\n+       long i2184;\n+       long i2185;\n+       long i2186;\n+       long i2187;\n+       long i2188;\n+       long i2189;\n+       long i2190;\n+       long i2191;\n+       long i2192;\n+       long i2193;\n+       long i2194;\n+       long i2195;\n+       long i2196;\n+       long i2197;\n+       long i2198;\n+       long i2199;\n+       long i2200;\n+       long i2201;\n+       long i2202;\n+       long i2203;\n+       long i2204;\n+       long i2205;\n+       long i2206;\n+       long i2207;\n+       long i2208;\n+       long i2209;\n+       long i2210;\n+       long i2211;\n+       long i2212;\n+       long i2213;\n+       long i2214;\n+       long i2215;\n+       long i2216;\n+       long i2217;\n+       long i2218;\n+       long i2219;\n+       long i2220;\n+       long i2221;\n+       long i2222;\n+       long i2223;\n+       long i2224;\n+       long i2225;\n+       long i2226;\n+       long i2227;\n+       long i2228;\n+       long i2229;\n+       long i2230;\n+       long i2231;\n+       long i2232;\n+       long i2233;\n+       long i2234;\n+       long i2235;\n+       long i2236;\n+       long i2237;\n+       long i2238;\n+       long i2239;\n+       long i2240;\n+       long i2241;\n+       long i2242;\n+       long i2243;\n+       long i2244;\n+       long i2245;\n+       long i2246;\n+       long i2247;\n+       long i2248;\n+       long i2249;\n+       long i2250;\n+       long i2251;\n+       long i2252;\n+       long i2253;\n+       long i2254;\n+       long i2255;\n+       long i2256;\n+       long i2257;\n+       long i2258;\n+       long i2259;\n+       long i2260;\n+       long i2261;\n+       long i2262;\n+       long i2263;\n+       long i2264;\n+       long i2265;\n+       long i2266;\n+       long i2267;\n+       long i2268;\n+       long i2269;\n+       long i2270;\n+       long i2271;\n+       long i2272;\n+       long i2273;\n+       long i2274;\n+       long i2275;\n+       long i2276;\n+       long i2277;\n+       long i2278;\n+       long i2279;\n+       long i2280;\n+       long i2281;\n+       long i2282;\n+       long i2283;\n+       long i2284;\n+       long i2285;\n+       long i2286;\n+       long i2287;\n+       long i2288;\n+       long i2289;\n+       long i2290;\n+       long i2291;\n+       long i2292;\n+       long i2293;\n+       long i2294;\n+       long i2295;\n+       long i2296;\n+       long i2297;\n+       long i2298;\n+       long i2299;\n+       long i2300;\n+       long i2301;\n+       long i2302;\n+       long i2303;\n+       long i2304;\n+       long i2305;\n+       long i2306;\n+       long i2307;\n+       long i2308;\n+       long i2309;\n+       long i2310;\n+       long i2311;\n+       long i2312;\n+       long i2313;\n+       long i2314;\n+       long i2315;\n+       long i2316;\n+       long i2317;\n+       long i2318;\n+       long i2319;\n+       long i2320;\n+       long i2321;\n+       long i2322;\n+       long i2323;\n+       long i2324;\n+       long i2325;\n+       long i2326;\n+       long i2327;\n+       long i2328;\n+       long i2329;\n+       long i2330;\n+       long i2331;\n+       long i2332;\n+       long i2333;\n+       long i2334;\n+       long i2335;\n+       long i2336;\n+       long i2337;\n+       long i2338;\n+       long i2339;\n+       long i2340;\n+       long i2341;\n+       long i2342;\n+       long i2343;\n+       long i2344;\n+       long i2345;\n+       long i2346;\n+       long i2347;\n+       long i2348;\n+       long i2349;\n+       long i2350;\n+       long i2351;\n+       long i2352;\n+       long i2353;\n+       long i2354;\n+       long i2355;\n+       long i2356;\n+       long i2357;\n+       long i2358;\n+       long i2359;\n+       long i2360;\n+       long i2361;\n+       long i2362;\n+       long i2363;\n+       long i2364;\n+       long i2365;\n+       long i2366;\n+       long i2367;\n+       long i2368;\n+       long i2369;\n+       long i2370;\n+       long i2371;\n+       long i2372;\n+       long i2373;\n+       long i2374;\n+       long i2375;\n+       long i2376;\n+       long i2377;\n+       long i2378;\n+       long i2379;\n+       long i2380;\n+       long i2381;\n+       long i2382;\n+       long i2383;\n+       long i2384;\n+       long i2385;\n+       long i2386;\n+       long i2387;\n+       long i2388;\n+       long i2389;\n+       long i2390;\n+       long i2391;\n+       long i2392;\n+       long i2393;\n+       long i2394;\n+       long i2395;\n+       long i2396;\n+       long i2397;\n+       long i2398;\n+       long i2399;\n+       long i2400;\n+       long i2401;\n+       long i2402;\n+       long i2403;\n+       long i2404;\n+       long i2405;\n+       long i2406;\n+       long i2407;\n+       long i2408;\n+       long i2409;\n+       long i2410;\n+       long i2411;\n+       long i2412;\n+       long i2413;\n+       long i2414;\n+       long i2415;\n+       long i2416;\n+       long i2417;\n+       long i2418;\n+       long i2419;\n+       long i2420;\n+       long i2421;\n+       long i2422;\n+       long i2423;\n+       long i2424;\n+       long i2425;\n+       long i2426;\n+       long i2427;\n+       long i2428;\n+       long i2429;\n+       long i2430;\n+       long i2431;\n+       long i2432;\n+       long i2433;\n+       long i2434;\n+       long i2435;\n+       long i2436;\n+       long i2437;\n+       long i2438;\n+       long i2439;\n+       long i2440;\n+       long i2441;\n+       long i2442;\n+       long i2443;\n+       long i2444;\n+       long i2445;\n+       long i2446;\n+       long i2447;\n+       long i2448;\n+       long i2449;\n+       long i2450;\n+       long i2451;\n+       long i2452;\n+       long i2453;\n+       long i2454;\n+       long i2455;\n+       long i2456;\n+       long i2457;\n+       long i2458;\n+       long i2459;\n+       long i2460;\n+       long i2461;\n+       long i2462;\n+       long i2463;\n+       long i2464;\n+       long i2465;\n+       long i2466;\n+       long i2467;\n+       long i2468;\n+       long i2469;\n+       long i2470;\n+       long i2471;\n+       long i2472;\n+       long i2473;\n+       long i2474;\n+       long i2475;\n+       long i2476;\n+       long i2477;\n+       long i2478;\n+       long i2479;\n+       long i2480;\n+       long i2481;\n+       long i2482;\n+       long i2483;\n+       long i2484;\n+       long i2485;\n+       long i2486;\n+       long i2487;\n+       long i2488;\n+       long i2489;\n+       long i2490;\n+       long i2491;\n+       long i2492;\n+       long i2493;\n+       long i2494;\n+       long i2495;\n+       long i2496;\n+       long i2497;\n+       long i2498;\n+       long i2499;\n+       long i2500;\n+       long i2501;\n+       long i2502;\n+       long i2503;\n+       long i2504;\n+       long i2505;\n+       long i2506;\n+       long i2507;\n+       long i2508;\n+       long i2509;\n+       long i2510;\n+       long i2511;\n+       long i2512;\n+       long i2513;\n+       long i2514;\n+       long i2515;\n+       long i2516;\n+       long i2517;\n+       long i2518;\n+       long i2519;\n+       long i2520;\n+       long i2521;\n+       long i2522;\n+       long i2523;\n+       long i2524;\n+       long i2525;\n+       long i2526;\n+       long i2527;\n+       long i2528;\n+       long i2529;\n+       long i2530;\n+       long i2531;\n+       long i2532;\n+       long i2533;\n+       long i2534;\n+       long i2535;\n+       long i2536;\n+       long i2537;\n+       long i2538;\n+       long i2539;\n+       long i2540;\n+       long i2541;\n+       long i2542;\n+       long i2543;\n+       long i2544;\n+       long i2545;\n+       long i2546;\n+       long i2547;\n+       long i2548;\n+       long i2549;\n+       long i2550;\n+       long i2551;\n+       long i2552;\n+       long i2553;\n+       long i2554;\n+       long i2555;\n+       long i2556;\n+       long i2557;\n+       long i2558;\n+       long i2559;\n+       long i2560;\n+       long i2561;\n+       long i2562;\n+       long i2563;\n+       long i2564;\n+       long i2565;\n+       long i2566;\n+       long i2567;\n+       long i2568;\n+       long i2569;\n+       long i2570;\n+       long i2571;\n+       long i2572;\n+       long i2573;\n+       long i2574;\n+       long i2575;\n+       long i2576;\n+       long i2577;\n+       long i2578;\n+       long i2579;\n+       long i2580;\n+       long i2581;\n+       long i2582;\n+       long i2583;\n+       long i2584;\n+       long i2585;\n+       long i2586;\n+       long i2587;\n+       long i2588;\n+       long i2589;\n+       long i2590;\n+       long i2591;\n+       long i2592;\n+       long i2593;\n+       long i2594;\n+       long i2595;\n+       long i2596;\n+       long i2597;\n+       long i2598;\n+       long i2599;\n+       long i2600;\n+       long i2601;\n+       long i2602;\n+       long i2603;\n+       long i2604;\n+       long i2605;\n+       long i2606;\n+       long i2607;\n+       long i2608;\n+       long i2609;\n+       long i2610;\n+       long i2611;\n+       long i2612;\n+       long i2613;\n+       long i2614;\n+       long i2615;\n+       long i2616;\n+       long i2617;\n+       long i2618;\n+       long i2619;\n+       long i2620;\n+       long i2621;\n+       long i2622;\n+       long i2623;\n+       long i2624;\n+       long i2625;\n+       long i2626;\n+       long i2627;\n+       long i2628;\n+       long i2629;\n+       long i2630;\n+       long i2631;\n+       long i2632;\n+       long i2633;\n+       long i2634;\n+       long i2635;\n+       long i2636;\n+       long i2637;\n+       long i2638;\n+       long i2639;\n+       long i2640;\n+       long i2641;\n+       long i2642;\n+       long i2643;\n+       long i2644;\n+       long i2645;\n+       long i2646;\n+       long i2647;\n+       long i2648;\n+       long i2649;\n+       long i2650;\n+       long i2651;\n+       long i2652;\n+       long i2653;\n+       long i2654;\n+       long i2655;\n+       long i2656;\n+       long i2657;\n+       long i2658;\n+       long i2659;\n+       long i2660;\n+       long i2661;\n+       long i2662;\n+       long i2663;\n+       long i2664;\n+       long i2665;\n+       long i2666;\n+       long i2667;\n+       long i2668;\n+       long i2669;\n+       long i2670;\n+       long i2671;\n+       long i2672;\n+       long i2673;\n+       long i2674;\n+       long i2675;\n+       long i2676;\n+       long i2677;\n+       long i2678;\n+       long i2679;\n+       long i2680;\n+       long i2681;\n+       long i2682;\n+       long i2683;\n+       long i2684;\n+       long i2685;\n+       long i2686;\n+       long i2687;\n+       long i2688;\n+       long i2689;\n+       long i2690;\n+       long i2691;\n+       long i2692;\n+       long i2693;\n+       long i2694;\n+       long i2695;\n+       long i2696;\n+       long i2697;\n+       long i2698;\n+       long i2699;\n+       long i2700;\n+       long i2701;\n+       long i2702;\n+       long i2703;\n+       long i2704;\n+       long i2705;\n+       long i2706;\n+       long i2707;\n+       long i2708;\n+       long i2709;\n+       long i2710;\n+       long i2711;\n+       long i2712;\n+       long i2713;\n+       long i2714;\n+       long i2715;\n+       long i2716;\n+       long i2717;\n+       long i2718;\n+       long i2719;\n+       long i2720;\n+       long i2721;\n+       long i2722;\n+       long i2723;\n+       long i2724;\n+       long i2725;\n+       long i2726;\n+       long i2727;\n+       long i2728;\n+       long i2729;\n+       long i2730;\n+       long i2731;\n+       long i2732;\n+       long i2733;\n+       long i2734;\n+       long i2735;\n+       long i2736;\n+       long i2737;\n+       long i2738;\n+       long i2739;\n+       long i2740;\n+       long i2741;\n+       long i2742;\n+       long i2743;\n+       long i2744;\n+       long i2745;\n+       long i2746;\n+       long i2747;\n+       long i2748;\n+       long i2749;\n+       long i2750;\n+       long i2751;\n+       long i2752;\n+       long i2753;\n+       long i2754;\n+       long i2755;\n+       long i2756;\n+       long i2757;\n+       long i2758;\n+       long i2759;\n+       long i2760;\n+       long i2761;\n+       long i2762;\n+       long i2763;\n+       long i2764;\n+       long i2765;\n+       long i2766;\n+       long i2767;\n+       long i2768;\n+       long i2769;\n+       long i2770;\n+       long i2771;\n+       long i2772;\n+       long i2773;\n+       long i2774;\n+       long i2775;\n+       long i2776;\n+       long i2777;\n+       long i2778;\n+       long i2779;\n+       long i2780;\n+       long i2781;\n+       long i2782;\n+       long i2783;\n+       long i2784;\n+       long i2785;\n+       long i2786;\n+       long i2787;\n+       long i2788;\n+       long i2789;\n+       long i2790;\n+       long i2791;\n+       long i2792;\n+       long i2793;\n+       long i2794;\n+       long i2795;\n+       long i2796;\n+       long i2797;\n+       long i2798;\n+       long i2799;\n+       long i2800;\n+       long i2801;\n+       long i2802;\n+       long i2803;\n+       long i2804;\n+       long i2805;\n+       long i2806;\n+       long i2807;\n+       long i2808;\n+       long i2809;\n+       long i2810;\n+       long i2811;\n+       long i2812;\n+       long i2813;\n+       long i2814;\n+       long i2815;\n+       long i2816;\n+       long i2817;\n+       long i2818;\n+       long i2819;\n+       long i2820;\n+       long i2821;\n+       long i2822;\n+       long i2823;\n+       long i2824;\n+       long i2825;\n+       long i2826;\n+       long i2827;\n+       long i2828;\n+       long i2829;\n+       long i2830;\n+       long i2831;\n+       long i2832;\n+       long i2833;\n+       long i2834;\n+       long i2835;\n+       long i2836;\n+       long i2837;\n+       long i2838;\n+       long i2839;\n+       long i2840;\n+       long i2841;\n+       long i2842;\n+       long i2843;\n+       long i2844;\n+       long i2845;\n+       long i2846;\n+       long i2847;\n+       long i2848;\n+       long i2849;\n+       long i2850;\n+       long i2851;\n+       long i2852;\n+       long i2853;\n+       long i2854;\n+       long i2855;\n+       long i2856;\n+       long i2857;\n+       long i2858;\n+       long i2859;\n+       long i2860;\n+       long i2861;\n+       long i2862;\n+       long i2863;\n+       long i2864;\n+       long i2865;\n+       long i2866;\n+       long i2867;\n+       long i2868;\n+       long i2869;\n+       long i2870;\n+       long i2871;\n+       long i2872;\n+       long i2873;\n+       long i2874;\n+       long i2875;\n+       long i2876;\n+       long i2877;\n+       long i2878;\n+       long i2879;\n+       long i2880;\n+       long i2881;\n+       long i2882;\n+       long i2883;\n+       long i2884;\n+       long i2885;\n+       long i2886;\n+       long i2887;\n+       long i2888;\n+       long i2889;\n+       long i2890;\n+       long i2891;\n+       long i2892;\n+       long i2893;\n+       long i2894;\n+       long i2895;\n+       long i2896;\n+       long i2897;\n+       long i2898;\n+       long i2899;\n+       long i2900;\n+       long i2901;\n+       long i2902;\n+       long i2903;\n+       long i2904;\n+       long i2905;\n+       long i2906;\n+       long i2907;\n+       long i2908;\n+       long i2909;\n+       long i2910;\n+       long i2911;\n+       long i2912;\n+       long i2913;\n+       long i2914;\n+       long i2915;\n+       long i2916;\n+       long i2917;\n+       long i2918;\n+       long i2919;\n+       long i2920;\n+       long i2921;\n+       long i2922;\n+       long i2923;\n+       long i2924;\n+       long i2925;\n+       long i2926;\n+       long i2927;\n+       long i2928;\n+       long i2929;\n+       long i2930;\n+       long i2931;\n+       long i2932;\n+       long i2933;\n+       long i2934;\n+       long i2935;\n+       long i2936;\n+       long i2937;\n+       long i2938;\n+       long i2939;\n+       long i2940;\n+       long i2941;\n+       long i2942;\n+       long i2943;\n+       long i2944;\n+       long i2945;\n+       long i2946;\n+       long i2947;\n+       long i2948;\n+       long i2949;\n+       long i2950;\n+       long i2951;\n+       long i2952;\n+       long i2953;\n+       long i2954;\n+       long i2955;\n+       long i2956;\n+       long i2957;\n+       long i2958;\n+       long i2959;\n+       long i2960;\n+       long i2961;\n+       long i2962;\n+       long i2963;\n+       long i2964;\n+       long i2965;\n+       long i2966;\n+       long i2967;\n+       long i2968;\n+       long i2969;\n+       long i2970;\n+       long i2971;\n+       long i2972;\n+       long i2973;\n+       long i2974;\n+       long i2975;\n+       long i2976;\n+       long i2977;\n+       long i2978;\n+       long i2979;\n+       long i2980;\n+       long i2981;\n+       long i2982;\n+       long i2983;\n+       long i2984;\n+       long i2985;\n+       long i2986;\n+       long i2987;\n+       long i2988;\n+       long i2989;\n+       long i2990;\n+       long i2991;\n+       long i2992;\n+       long i2993;\n+       long i2994;\n+       long i2995;\n+       long i2996;\n+       long i2997;\n+       long i2998;\n+       long i2999;\n+       long i3000;\n+       long i3001;\n+       long i3002;\n+       long i3003;\n+       long i3004;\n+       long i3005;\n+       long i3006;\n+       long i3007;\n+       long i3008;\n+       long i3009;\n+       long i3010;\n+       long i3011;\n+       long i3012;\n+       long i3013;\n+       long i3014;\n+       long i3015;\n+       long i3016;\n+       long i3017;\n+       long i3018;\n+       long i3019;\n+       long i3020;\n+       long i3021;\n+       long i3022;\n+       long i3023;\n+       long i3024;\n+       long i3025;\n+       long i3026;\n+       long i3027;\n+       long i3028;\n+       long i3029;\n+       long i3030;\n+       long i3031;\n+       long i3032;\n+       long i3033;\n+       long i3034;\n+       long i3035;\n+       long i3036;\n+       long i3037;\n+       long i3038;\n+       long i3039;\n+       long i3040;\n+       long i3041;\n+       long i3042;\n+       long i3043;\n+       long i3044;\n+       long i3045;\n+       long i3046;\n+       long i3047;\n+       long i3048;\n+       long i3049;\n+       long i3050;\n+       long i3051;\n+       long i3052;\n+       long i3053;\n+       long i3054;\n+       long i3055;\n+       long i3056;\n+       long i3057;\n+       long i3058;\n+       long i3059;\n+       long i3060;\n+       long i3061;\n+       long i3062;\n+       long i3063;\n+       long i3064;\n+       long i3065;\n+       long i3066;\n+       long i3067;\n+       long i3068;\n+       long i3069;\n+       long i3070;\n+       long i3071;\n+       long i3072;\n+       long i3073;\n+       long i3074;\n+       long i3075;\n+       long i3076;\n+       long i3077;\n+       long i3078;\n+       long i3079;\n+       long i3080;\n+       long i3081;\n+       long i3082;\n+       long i3083;\n+       long i3084;\n+       long i3085;\n+       long i3086;\n+       long i3087;\n+       long i3088;\n+       long i3089;\n+       long i3090;\n+       long i3091;\n+       long i3092;\n+       long i3093;\n+       long i3094;\n+       long i3095;\n+       long i3096;\n+       long i3097;\n+       long i3098;\n+       long i3099;\n+       long i3100;\n+       long i3101;\n+       long i3102;\n+       long i3103;\n+       long i3104;\n+       long i3105;\n+       long i3106;\n+       long i3107;\n+       long i3108;\n+       long i3109;\n+       long i3110;\n+       long i3111;\n+       long i3112;\n+       long i3113;\n+       long i3114;\n+       long i3115;\n+       long i3116;\n+       long i3117;\n+       long i3118;\n+       long i3119;\n+       long i3120;\n+       long i3121;\n+       long i3122;\n+       long i3123;\n+       long i3124;\n+       long i3125;\n+       long i3126;\n+       long i3127;\n+       long i3128;\n+       long i3129;\n+       long i3130;\n+       long i3131;\n+       long i3132;\n+       long i3133;\n+       long i3134;\n+       long i3135;\n+       long i3136;\n+       long i3137;\n+       long i3138;\n+       long i3139;\n+       long i3140;\n+       long i3141;\n+       long i3142;\n+       long i3143;\n+       long i3144;\n+       long i3145;\n+       long i3146;\n+       long i3147;\n+       long i3148;\n+       long i3149;\n+       long i3150;\n+       long i3151;\n+       long i3152;\n+       long i3153;\n+       long i3154;\n+       long i3155;\n+       long i3156;\n+       long i3157;\n+       long i3158;\n+       long i3159;\n+       long i3160;\n+       long i3161;\n+       long i3162;\n+       long i3163;\n+       long i3164;\n+       long i3165;\n+       long i3166;\n+       long i3167;\n+       long i3168;\n+       long i3169;\n+       long i3170;\n+       long i3171;\n+       long i3172;\n+       long i3173;\n+       long i3174;\n+       long i3175;\n+       long i3176;\n+       long i3177;\n+       long i3178;\n+       long i3179;\n+       long i3180;\n+       long i3181;\n+       long i3182;\n+       long i3183;\n+       long i3184;\n+       long i3185;\n+       long i3186;\n+       long i3187;\n+       long i3188;\n+       long i3189;\n+       long i3190;\n+       long i3191;\n+       long i3192;\n+       long i3193;\n+       long i3194;\n+       long i3195;\n+       long i3196;\n+       long i3197;\n+       long i3198;\n+       long i3199;\n+       long i3200;\n+       long i3201;\n+       long i3202;\n+       long i3203;\n+       long i3204;\n+       long i3205;\n+       long i3206;\n+       long i3207;\n+       long i3208;\n+       long i3209;\n+       long i3210;\n+       long i3211;\n+       long i3212;\n+       long i3213;\n+       long i3214;\n+       long i3215;\n+       long i3216;\n+       long i3217;\n+       long i3218;\n+       long i3219;\n+       long i3220;\n+       long i3221;\n+       long i3222;\n+       long i3223;\n+       long i3224;\n+       long i3225;\n+       long i3226;\n+       long i3227;\n+       long i3228;\n+       long i3229;\n+       long i3230;\n+       long i3231;\n+       long i3232;\n+       long i3233;\n+       long i3234;\n+       long i3235;\n+       long i3236;\n+       long i3237;\n+       long i3238;\n+       long i3239;\n+       long i3240;\n+       long i3241;\n+       long i3242;\n+       long i3243;\n+       long i3244;\n+       long i3245;\n+       long i3246;\n+       long i3247;\n+       long i3248;\n+       long i3249;\n+       long i3250;\n+       long i3251;\n+       long i3252;\n+       long i3253;\n+       long i3254;\n+       long i3255;\n+       long i3256;\n+       long i3257;\n+       long i3258;\n+       long i3259;\n+       long i3260;\n+       long i3261;\n+       long i3262;\n+       long i3263;\n+       long i3264;\n+       long i3265;\n+       long i3266;\n+       long i3267;\n+       long i3268;\n+       long i3269;\n+       long i3270;\n+       long i3271;\n+       long i3272;\n+       long i3273;\n+       long i3274;\n+       long i3275;\n+       long i3276;\n+       long i3277;\n+       long i3278;\n+       long i3279;\n+       long i3280;\n+       long i3281;\n+       long i3282;\n+       long i3283;\n+       long i3284;\n+       long i3285;\n+       long i3286;\n+       long i3287;\n+       long i3288;\n+       long i3289;\n+       long i3290;\n+       long i3291;\n+       long i3292;\n+       long i3293;\n+       long i3294;\n+       long i3295;\n+       long i3296;\n+       long i3297;\n+       long i3298;\n+       long i3299;\n+       long i3300;\n+       long i3301;\n+       long i3302;\n+       long i3303;\n+       long i3304;\n+       long i3305;\n+       long i3306;\n+       long i3307;\n+       long i3308;\n+       long i3309;\n+       long i3310;\n+       long i3311;\n+       long i3312;\n+       long i3313;\n+       long i3314;\n+       long i3315;\n+       long i3316;\n+       long i3317;\n+       long i3318;\n+       long i3319;\n+       long i3320;\n+       long i3321;\n+       long i3322;\n+       long i3323;\n+       long i3324;\n+       long i3325;\n+       long i3326;\n+       long i3327;\n+       long i3328;\n+       long i3329;\n+       long i3330;\n+       long i3331;\n+       long i3332;\n+       long i3333;\n+       long i3334;\n+       long i3335;\n+       long i3336;\n+       long i3337;\n+       long i3338;\n+       long i3339;\n+       long i3340;\n+       long i3341;\n+       long i3342;\n+       long i3343;\n+       long i3344;\n+       long i3345;\n+       long i3346;\n+       long i3347;\n+       long i3348;\n+       long i3349;\n+       long i3350;\n+       long i3351;\n+       long i3352;\n+       long i3353;\n+       long i3354;\n+       long i3355;\n+       long i3356;\n+       long i3357;\n+       long i3358;\n+       long i3359;\n+       long i3360;\n+       long i3361;\n+       long i3362;\n+       long i3363;\n+       long i3364;\n+       long i3365;\n+       long i3366;\n+       long i3367;\n+       long i3368;\n+       long i3369;\n+       long i3370;\n+       long i3371;\n+       long i3372;\n+       long i3373;\n+       long i3374;\n+       long i3375;\n+       long i3376;\n+       long i3377;\n+       long i3378;\n+       long i3379;\n+       long i3380;\n+       long i3381;\n+       long i3382;\n+       long i3383;\n+       long i3384;\n+       long i3385;\n+       long i3386;\n+       long i3387;\n+       long i3388;\n+       long i3389;\n+       long i3390;\n+       long i3391;\n+       long i3392;\n+       long i3393;\n+       long i3394;\n+       long i3395;\n+       long i3396;\n+       long i3397;\n+       long i3398;\n+       long i3399;\n+       long i3400;\n+       long i3401;\n+       long i3402;\n+       long i3403;\n+       long i3404;\n+       long i3405;\n+       long i3406;\n+       long i3407;\n+       long i3408;\n+       long i3409;\n+       long i3410;\n+       long i3411;\n+       long i3412;\n+       long i3413;\n+       long i3414;\n+       long i3415;\n+       long i3416;\n+       long i3417;\n+       long i3418;\n+       long i3419;\n+       long i3420;\n+       long i3421;\n+       long i3422;\n+       long i3423;\n+       long i3424;\n+       long i3425;\n+       long i3426;\n+       long i3427;\n+       long i3428;\n+       long i3429;\n+       long i3430;\n+       long i3431;\n+       long i3432;\n+       long i3433;\n+       long i3434;\n+       long i3435;\n+       long i3436;\n+       long i3437;\n+       long i3438;\n+       long i3439;\n+       long i3440;\n+       long i3441;\n+       long i3442;\n+       long i3443;\n+       long i3444;\n+       long i3445;\n+       long i3446;\n+       long i3447;\n+       long i3448;\n+       long i3449;\n+       long i3450;\n+       long i3451;\n+       long i3452;\n+       long i3453;\n+       long i3454;\n+       long i3455;\n+       long i3456;\n+       long i3457;\n+       long i3458;\n+       long i3459;\n+       long i3460;\n+       long i3461;\n+       long i3462;\n+       long i3463;\n+       long i3464;\n+       long i3465;\n+       long i3466;\n+       long i3467;\n+       long i3468;\n+       long i3469;\n+       long i3470;\n+       long i3471;\n+       long i3472;\n+       long i3473;\n+       long i3474;\n+       long i3475;\n+       long i3476;\n+       long i3477;\n+       long i3478;\n+       long i3479;\n+       long i3480;\n+       long i3481;\n+       long i3482;\n+       long i3483;\n+       long i3484;\n+       long i3485;\n+       long i3486;\n+       long i3487;\n+       long i3488;\n+       long i3489;\n+       long i3490;\n+       long i3491;\n+       long i3492;\n+       long i3493;\n+       long i3494;\n+       long i3495;\n+       long i3496;\n+       long i3497;\n+       long i3498;\n+       long i3499;\n+       long i3500;\n+       long i3501;\n+       long i3502;\n+       long i3503;\n+       long i3504;\n+       long i3505;\n+       long i3506;\n+       long i3507;\n+       long i3508;\n+       long i3509;\n+       long i3510;\n+       long i3511;\n+       long i3512;\n+       long i3513;\n+       long i3514;\n+       long i3515;\n+       long i3516;\n+       long i3517;\n+       long i3518;\n+       long i3519;\n+       long i3520;\n+       long i3521;\n+       long i3522;\n+       long i3523;\n+       long i3524;\n+       long i3525;\n+       long i3526;\n+       long i3527;\n+       long i3528;\n+       long i3529;\n+       long i3530;\n+       long i3531;\n+       long i3532;\n+       long i3533;\n+       long i3534;\n+       long i3535;\n+       long i3536;\n+       long i3537;\n+       long i3538;\n+       long i3539;\n+       long i3540;\n+       long i3541;\n+       long i3542;\n+       long i3543;\n+       long i3544;\n+       long i3545;\n+       long i3546;\n+       long i3547;\n+       long i3548;\n+       long i3549;\n+       long i3550;\n+       long i3551;\n+       long i3552;\n+       long i3553;\n+       long i3554;\n+       long i3555;\n+       long i3556;\n+       long i3557;\n+       long i3558;\n+       long i3559;\n+       long i3560;\n+       long i3561;\n+       long i3562;\n+       long i3563;\n+       long i3564;\n+       long i3565;\n+       long i3566;\n+       long i3567;\n+       long i3568;\n+       long i3569;\n+       long i3570;\n+       long i3571;\n+       long i3572;\n+       long i3573;\n+       long i3574;\n+       long i3575;\n+       long i3576;\n+       long i3577;\n+       long i3578;\n+       long i3579;\n+       long i3580;\n+       long i3581;\n+       long i3582;\n+       long i3583;\n+       long i3584;\n+       long i3585;\n+       long i3586;\n+       long i3587;\n+       long i3588;\n+       long i3589;\n+       long i3590;\n+       long i3591;\n+       long i3592;\n+       long i3593;\n+       long i3594;\n+       long i3595;\n+       long i3596;\n+       long i3597;\n+       long i3598;\n+       long i3599;\n+       long i3600;\n+       long i3601;\n+       long i3602;\n+       long i3603;\n+       long i3604;\n+       long i3605;\n+       long i3606;\n+       long i3607;\n+       long i3608;\n+       long i3609;\n+       long i3610;\n+       long i3611;\n+       long i3612;\n+       long i3613;\n+       long i3614;\n+       long i3615;\n+       long i3616;\n+       long i3617;\n+       long i3618;\n+       long i3619;\n+       long i3620;\n+       long i3621;\n+       long i3622;\n+       long i3623;\n+       long i3624;\n+       long i3625;\n+       long i3626;\n+       long i3627;\n+       long i3628;\n+       long i3629;\n+       long i3630;\n+       long i3631;\n+       long i3632;\n+       long i3633;\n+       long i3634;\n+       long i3635;\n+       long i3636;\n+       long i3637;\n+       long i3638;\n+       long i3639;\n+       long i3640;\n+       long i3641;\n+       long i3642;\n+       long i3643;\n+       long i3644;\n+       long i3645;\n+       long i3646;\n+       long i3647;\n+       long i3648;\n+       long i3649;\n+       long i3650;\n+       long i3651;\n+       long i3652;\n+       long i3653;\n+       long i3654;\n+       long i3655;\n+       long i3656;\n+       long i3657;\n+       long i3658;\n+       long i3659;\n+       long i3660;\n+       long i3661;\n+       long i3662;\n+       long i3663;\n+       long i3664;\n+       long i3665;\n+       long i3666;\n+       long i3667;\n+       long i3668;\n+       long i3669;\n+       long i3670;\n+       long i3671;\n+       long i3672;\n+       long i3673;\n+       long i3674;\n+       long i3675;\n+       long i3676;\n+       long i3677;\n+       long i3678;\n+       long i3679;\n+       long i3680;\n+       long i3681;\n+       long i3682;\n+       long i3683;\n+       long i3684;\n+       long i3685;\n+       long i3686;\n+       long i3687;\n+       long i3688;\n+       long i3689;\n+       long i3690;\n+       long i3691;\n+       long i3692;\n+       long i3693;\n+       long i3694;\n+       long i3695;\n+       long i3696;\n+       long i3697;\n+       long i3698;\n+       long i3699;\n+       long i3700;\n+       long i3701;\n+       long i3702;\n+       long i3703;\n+       long i3704;\n+       long i3705;\n+       long i3706;\n+       long i3707;\n+       long i3708;\n+       long i3709;\n+       long i3710;\n+       long i3711;\n+       long i3712;\n+       long i3713;\n+       long i3714;\n+       long i3715;\n+       long i3716;\n+       long i3717;\n+       long i3718;\n+       long i3719;\n+       long i3720;\n+       long i3721;\n+       long i3722;\n+       long i3723;\n+       long i3724;\n+       long i3725;\n+       long i3726;\n+       long i3727;\n+       long i3728;\n+       long i3729;\n+       long i3730;\n+       long i3731;\n+       long i3732;\n+       long i3733;\n+       long i3734;\n+       long i3735;\n+       long i3736;\n+       long i3737;\n+       long i3738;\n+       long i3739;\n+       long i3740;\n+       long i3741;\n+       long i3742;\n+       long i3743;\n+       long i3744;\n+       long i3745;\n+       long i3746;\n+       long i3747;\n+       long i3748;\n+       long i3749;\n+       long i3750;\n+       long i3751;\n+       long i3752;\n+       long i3753;\n+       long i3754;\n+       long i3755;\n+       long i3756;\n+       long i3757;\n+       long i3758;\n+       long i3759;\n+       long i3760;\n+       long i3761;\n+       long i3762;\n+       long i3763;\n+       long i3764;\n+       long i3765;\n+       long i3766;\n+       long i3767;\n+       long i3768;\n+       long i3769;\n+       long i3770;\n+       long i3771;\n+       long i3772;\n+       long i3773;\n+       long i3774;\n+       long i3775;\n+       long i3776;\n+       long i3777;\n+       long i3778;\n+       long i3779;\n+       long i3780;\n+       long i3781;\n+       long i3782;\n+       long i3783;\n+       long i3784;\n+       long i3785;\n+       long i3786;\n+       long i3787;\n+       long i3788;\n+       long i3789;\n+       long i3790;\n+       long i3791;\n+       long i3792;\n+       long i3793;\n+       long i3794;\n+       long i3795;\n+       long i3796;\n+       long i3797;\n+       long i3798;\n+       long i3799;\n+       long i3800;\n+       long i3801;\n+       long i3802;\n+       long i3803;\n+       long i3804;\n+       long i3805;\n+       long i3806;\n+       long i3807;\n+       long i3808;\n+       long i3809;\n+       long i3810;\n+       long i3811;\n+       long i3812;\n+       long i3813;\n+       long i3814;\n+       long i3815;\n+       long i3816;\n+       long i3817;\n+       long i3818;\n+       long i3819;\n+       long i3820;\n+       long i3821;\n+       long i3822;\n+       long i3823;\n+       long i3824;\n+       long i3825;\n+       long i3826;\n+       long i3827;\n+       long i3828;\n+       long i3829;\n+       long i3830;\n+       long i3831;\n+       long i3832;\n+       long i3833;\n+       long i3834;\n+       long i3835;\n+       long i3836;\n+       long i3837;\n+       long i3838;\n+       long i3839;\n+       long i3840;\n+       long i3841;\n+       long i3842;\n+       long i3843;\n+       long i3844;\n+       long i3845;\n+       long i3846;\n+       long i3847;\n+       long i3848;\n+       long i3849;\n+       long i3850;\n+       long i3851;\n+       long i3852;\n+       long i3853;\n+       long i3854;\n+       long i3855;\n+       long i3856;\n+       long i3857;\n+       long i3858;\n+       long i3859;\n+       long i3860;\n+       long i3861;\n+       long i3862;\n+       long i3863;\n+       long i3864;\n+       long i3865;\n+       long i3866;\n+       long i3867;\n+       long i3868;\n+       long i3869;\n+       long i3870;\n+       long i3871;\n+       long i3872;\n+       long i3873;\n+       long i3874;\n+       long i3875;\n+       long i3876;\n+       long i3877;\n+       long i3878;\n+       long i3879;\n+       long i3880;\n+       long i3881;\n+       long i3882;\n+       long i3883;\n+       long i3884;\n+       long i3885;\n+       long i3886;\n+       long i3887;\n+       long i3888;\n+       long i3889;\n+       long i3890;\n+       long i3891;\n+       long i3892;\n+       long i3893;\n+       long i3894;\n+       long i3895;\n+       long i3896;\n+       long i3897;\n+       long i3898;\n+       long i3899;\n+       long i3900;\n+       long i3901;\n+       long i3902;\n+       long i3903;\n+       long i3904;\n+       long i3905;\n+       long i3906;\n+       long i3907;\n+       long i3908;\n+       long i3909;\n+       long i3910;\n+       long i3911;\n+       long i3912;\n+       long i3913;\n+       long i3914;\n+       long i3915;\n+       long i3916;\n+       long i3917;\n+       long i3918;\n+       long i3919;\n+       long i3920;\n+       long i3921;\n+       long i3922;\n+       long i3923;\n+       long i3924;\n+       long i3925;\n+       long i3926;\n+       long i3927;\n+       long i3928;\n+       long i3929;\n+       long i3930;\n+       long i3931;\n+       long i3932;\n+       long i3933;\n+       long i3934;\n+       long i3935;\n+       long i3936;\n+       long i3937;\n+       long i3938;\n+       long i3939;\n+       long i3940;\n+       long i3941;\n+       long i3942;\n+       long i3943;\n+       long i3944;\n+       long i3945;\n+       long i3946;\n+       long i3947;\n+       long i3948;\n+       long i3949;\n+       long i3950;\n+       long i3951;\n+       long i3952;\n+       long i3953;\n+       long i3954;\n+       long i3955;\n+       long i3956;\n+       long i3957;\n+       long i3958;\n+       long i3959;\n+       long i3960;\n+       long i3961;\n+       long i3962;\n+       long i3963;\n+       long i3964;\n+       long i3965;\n+       long i3966;\n+       long i3967;\n+       long i3968;\n+       long i3969;\n+       long i3970;\n+       long i3971;\n+       long i3972;\n+       long i3973;\n+       long i3974;\n+       long i3975;\n+       long i3976;\n+       long i3977;\n+       long i3978;\n+       long i3979;\n+       long i3980;\n+       long i3981;\n+       long i3982;\n+       long i3983;\n+       long i3984;\n+       long i3985;\n+       long i3986;\n+       long i3987;\n+       long i3988;\n+       long i3989;\n+       long i3990;\n+       long i3991;\n+       long i3992;\n+       long i3993;\n+       long i3994;\n+       long i3995;\n+       long i3996;\n+       long i3997;\n+       long i3998;\n+       long i3999;\n+       long i4000;\n+       long i4001;\n+       long i4002;\n+       long i4003;\n+       long i4004;\n+       long i4005;\n+       long i4006;\n+       long i4007;\n+       long i4008;\n+       long i4009;\n+       long i4010;\n+       long i4011;\n+       long i4012;\n+       long i4013;\n+       long i4014;\n+       long i4015;\n+       long i4016;\n+       long i4017;\n+       long i4018;\n+       long i4019;\n+       long i4020;\n+       long i4021;\n+       long i4022;\n+       long i4023;\n+       long i4024;\n+       long i4025;\n+       long i4026;\n+       long i4027;\n+       long i4028;\n+       long i4029;\n+       long i4030;\n+       long i4031;\n+       long i4032;\n+       long i4033;\n+       long i4034;\n+       long i4035;\n+       long i4036;\n+       long i4037;\n+       long i4038;\n+       long i4039;\n+       long i4040;\n+       long i4041;\n+       long i4042;\n+       long i4043;\n+       long i4044;\n+       long i4045;\n+       long i4046;\n+       long i4047;\n+       long i4048;\n+       long i4049;\n+       long i4050;\n+       long i4051;\n+       long i4052;\n+       long i4053;\n+       long i4054;\n+       long i4055;\n+       long i4056;\n+       long i4057;\n+       long i4058;\n+       long i4059;\n+       long i4060;\n+       long i4061;\n+       long i4062;\n+       long i4063;\n+       long i4064;\n+       long i4065;\n+       long i4066;\n+       long i4067;\n+       long i4068;\n+       long i4069;\n+       long i4070;\n+       long i4071;\n+       long i4072;\n+       long i4073;\n+       long i4074;\n+       long i4075;\n+       long i4076;\n+       long i4077;\n+       long i4078;\n+       long i4079;\n+       long i4080;\n+       long i4081;\n+       long i4082;\n+       long i4083;\n+       long i4084;\n+       long i4085;\n+       long i4086;\n+       long i4087;\n+       long i4088;\n+       long i4089;\n+       long i4090;\n+       long i4091;\n+       long i4092;\n+       long i4093;\n+       long i4094;\n+       long i4095;\n+       long i4096;\n+       long i4097;\n+       long i4098;\n+       long i4099;\n+       long i4100;\n+       long i4101;\n+       long i4102;\n+       long i4103;\n+       long i4104;\n+       long i4105;\n+       long i4106;\n+       long i4107;\n+       long i4108;\n+       long i4109;\n+       long i4110;\n+       long i4111;\n+       long i4112;\n+       long i4113;\n+       long i4114;\n+       long i4115;\n+       long i4116;\n+       long i4117;\n+       long i4118;\n+       long i4119;\n+       long i4120;\n+       long i4121;\n+       long i4122;\n+       long i4123;\n+       long i4124;\n+       long i4125;\n+       long i4126;\n+       long i4127;\n+       long i4128;\n+       long i4129;\n+       long i4130;\n+       long i4131;\n+       long i4132;\n+       long i4133;\n+       long i4134;\n+       long i4135;\n+       long i4136;\n+       long i4137;\n+       long i4138;\n+       long i4139;\n+       long i4140;\n+       long i4141;\n+       long i4142;\n+       long i4143;\n+       long i4144;\n+       long i4145;\n+       long i4146;\n+       long i4147;\n+       long i4148;\n+       long i4149;\n+       long i4150;\n+       long i4151;\n+       long i4152;\n+       long i4153;\n+       long i4154;\n+       long i4155;\n+       long i4156;\n+       long i4157;\n+       long i4158;\n+       long i4159;\n+       long i4160;\n+       long i4161;\n+       long i4162;\n+       long i4163;\n+       long i4164;\n+       long i4165;\n+       long i4166;\n+       long i4167;\n+       long i4168;\n+       long i4169;\n+       long i4170;\n+       long i4171;\n+       long i4172;\n+       long i4173;\n+       long i4174;\n+       long i4175;\n+       long i4176;\n+       long i4177;\n+       long i4178;\n+       long i4179;\n+       long i4180;\n+       long i4181;\n+       long i4182;\n+       long i4183;\n+       long i4184;\n+       long i4185;\n+       long i4186;\n+       long i4187;\n+       long i4188;\n+       long i4189;\n+       long i4190;\n+       long i4191;\n+       long i4192;\n+       long i4193;\n+       long i4194;\n+       long i4195;\n+       long i4196;\n+       long i4197;\n+       long i4198;\n+       long i4199;\n+       long i4200;\n+       long i4201;\n+       long i4202;\n+       long i4203;\n+       long i4204;\n+       long i4205;\n+       long i4206;\n+       long i4207;\n+       long i4208;\n+       long i4209;\n+       long i4210;\n+       long i4211;\n+       long i4212;\n+       long i4213;\n+       long i4214;\n+       long i4215;\n+       long i4216;\n+       long i4217;\n+       long i4218;\n+       long i4219;\n+       long i4220;\n+       long i4221;\n+       long i4222;\n+       long i4223;\n+       long i4224;\n+       long i4225;\n+       long i4226;\n+       long i4227;\n+       long i4228;\n+       long i4229;\n+       long i4230;\n+       long i4231;\n+       long i4232;\n+       long i4233;\n+       long i4234;\n+       long i4235;\n+       long i4236;\n+       long i4237;\n+       long i4238;\n+       long i4239;\n+       long i4240;\n+       long i4241;\n+       long i4242;\n+       long i4243;\n+       long i4244;\n+       long i4245;\n+       long i4246;\n+       long i4247;\n+       long i4248;\n+       long i4249;\n+       long i4250;\n+       long i4251;\n+       long i4252;\n+       long i4253;\n+       long i4254;\n+       long i4255;\n+       long i4256;\n+       long i4257;\n+       long i4258;\n+       long i4259;\n+       long i4260;\n+       long i4261;\n+       long i4262;\n+       long i4263;\n+       long i4264;\n+       long i4265;\n+       long i4266;\n+       long i4267;\n+       long i4268;\n+       long i4269;\n+       long i4270;\n+       long i4271;\n+       long i4272;\n+       long i4273;\n+       long i4274;\n+       long i4275;\n+       long i4276;\n+       long i4277;\n+       long i4278;\n+       long i4279;\n+       long i4280;\n+       long i4281;\n+       long i4282;\n+       long i4283;\n+       long i4284;\n+       long i4285;\n+       long i4286;\n+       long i4287;\n+       long i4288;\n+       long i4289;\n+       long i4290;\n+       long i4291;\n+       long i4292;\n+       long i4293;\n+       long i4294;\n+       long i4295;\n+       long i4296;\n+       long i4297;\n+       long i4298;\n+       long i4299;\n+       long i4300;\n+       long i4301;\n+       long i4302;\n+       long i4303;\n+       long i4304;\n+       long i4305;\n+       long i4306;\n+       long i4307;\n+       long i4308;\n+       long i4309;\n+       long i4310;\n+       long i4311;\n+       long i4312;\n+       long i4313;\n+       long i4314;\n+       long i4315;\n+       long i4316;\n+       long i4317;\n+       long i4318;\n+       long i4319;\n+       long i4320;\n+       long i4321;\n+       long i4322;\n+       long i4323;\n+       long i4324;\n+       long i4325;\n+       long i4326;\n+       long i4327;\n+       long i4328;\n+       long i4329;\n+       long i4330;\n+       long i4331;\n+       long i4332;\n+       long i4333;\n+       long i4334;\n+       long i4335;\n+       long i4336;\n+       long i4337;\n+       long i4338;\n+       long i4339;\n+       long i4340;\n+       long i4341;\n+       long i4342;\n+       long i4343;\n+       long i4344;\n+       long i4345;\n+       long i4346;\n+       long i4347;\n+       long i4348;\n+       long i4349;\n+       long i4350;\n+       long i4351;\n+       long i4352;\n+       long i4353;\n+       long i4354;\n+       long i4355;\n+       long i4356;\n+       long i4357;\n+       long i4358;\n+       long i4359;\n+       long i4360;\n+       long i4361;\n+       long i4362;\n+       long i4363;\n+       long i4364;\n+       long i4365;\n+       long i4366;\n+       long i4367;\n+       long i4368;\n+       long i4369;\n+       long i4370;\n+       long i4371;\n+       long i4372;\n+       long i4373;\n+       long i4374;\n+       long i4375;\n+       long i4376;\n+       long i4377;\n+       long i4378;\n+       long i4379;\n+       long i4380;\n+       long i4381;\n+       long i4382;\n+       long i4383;\n+       long i4384;\n+       long i4385;\n+       long i4386;\n+       long i4387;\n+       long i4388;\n+       long i4389;\n+       long i4390;\n+       long i4391;\n+       long i4392;\n+       long i4393;\n+       long i4394;\n+       long i4395;\n+       long i4396;\n+       long i4397;\n+       long i4398;\n+       long i4399;\n+       long i4400;\n+       long i4401;\n+       long i4402;\n+       long i4403;\n+       long i4404;\n+       long i4405;\n+       long i4406;\n+       long i4407;\n+       long i4408;\n+       long i4409;\n+       long i4410;\n+       long i4411;\n+       long i4412;\n+       long i4413;\n+       long i4414;\n+       long i4415;\n+       long i4416;\n+       long i4417;\n+       long i4418;\n+       long i4419;\n+       long i4420;\n+       long i4421;\n+       long i4422;\n+       long i4423;\n+       long i4424;\n+       long i4425;\n+       long i4426;\n+       long i4427;\n+       long i4428;\n+       long i4429;\n+       long i4430;\n+       long i4431;\n+       long i4432;\n+       long i4433;\n+       long i4434;\n+       long i4435;\n+       long i4436;\n+       long i4437;\n+       long i4438;\n+       long i4439;\n+       long i4440;\n+       long i4441;\n+       long i4442;\n+       long i4443;\n+       long i4444;\n+       long i4445;\n+       long i4446;\n+       long i4447;\n+       long i4448;\n+       long i4449;\n+       long i4450;\n+       long i4451;\n+       long i4452;\n+       long i4453;\n+       long i4454;\n+       long i4455;\n+       long i4456;\n+       long i4457;\n+       long i4458;\n+       long i4459;\n+       long i4460;\n+       long i4461;\n+       long i4462;\n+       long i4463;\n+       long i4464;\n+       long i4465;\n+       long i4466;\n+       long i4467;\n+       long i4468;\n+       long i4469;\n+       long i4470;\n+       long i4471;\n+       long i4472;\n+       long i4473;\n+       long i4474;\n+       long i4475;\n+       long i4476;\n+       long i4477;\n+       long i4478;\n+       long i4479;\n+       long i4480;\n+       long i4481;\n+       long i4482;\n+       long i4483;\n+       long i4484;\n+       long i4485;\n+       long i4486;\n+       long i4487;\n+       long i4488;\n+       long i4489;\n+       long i4490;\n+       long i4491;\n+       long i4492;\n+       long i4493;\n+       long i4494;\n+       long i4495;\n+       long i4496;\n+       long i4497;\n+       long i4498;\n+       long i4499;\n+       long i4500;\n+       long i4501;\n+       long i4502;\n+       long i4503;\n+       long i4504;\n+       long i4505;\n+       long i4506;\n+       long i4507;\n+       long i4508;\n+       long i4509;\n+       long i4510;\n+       long i4511;\n+       long i4512;\n+       long i4513;\n+       long i4514;\n+       long i4515;\n+       long i4516;\n+       long i4517;\n+       long i4518;\n+       long i4519;\n+       long i4520;\n+       long i4521;\n+       long i4522;\n+       long i4523;\n+       long i4524;\n+       long i4525;\n+       long i4526;\n+       long i4527;\n+       long i4528;\n+       long i4529;\n+       long i4530;\n+       long i4531;\n+       long i4532;\n+       long i4533;\n+       long i4534;\n+       long i4535;\n+       long i4536;\n+       long i4537;\n+       long i4538;\n+       long i4539;\n+       long i4540;\n+       long i4541;\n+       long i4542;\n+       long i4543;\n+       long i4544;\n+       long i4545;\n+       long i4546;\n+       long i4547;\n+       long i4548;\n+       long i4549;\n+       long i4550;\n+       long i4551;\n+       long i4552;\n+       long i4553;\n+       long i4554;\n+       long i4555;\n+       long i4556;\n+       long i4557;\n+       long i4558;\n+       long i4559;\n+       long i4560;\n+       long i4561;\n+       long i4562;\n+       long i4563;\n+       long i4564;\n+       long i4565;\n+       long i4566;\n+       long i4567;\n+       long i4568;\n+       long i4569;\n+       long i4570;\n+       long i4571;\n+       long i4572;\n+       long i4573;\n+       long i4574;\n+       long i4575;\n+       long i4576;\n+       long i4577;\n+       long i4578;\n+       long i4579;\n+       long i4580;\n+       long i4581;\n+       long i4582;\n+       long i4583;\n+       long i4584;\n+       long i4585;\n+       long i4586;\n+       long i4587;\n+       long i4588;\n+       long i4589;\n+       long i4590;\n+       long i4591;\n+       long i4592;\n+       long i4593;\n+       long i4594;\n+       long i4595;\n+       long i4596;\n+       long i4597;\n+       long i4598;\n+       long i4599;\n+       long i4600;\n+       long i4601;\n+       long i4602;\n+       long i4603;\n+       long i4604;\n+       long i4605;\n+       long i4606;\n+       long i4607;\n+       long i4608;\n+       long i4609;\n+       long i4610;\n+       long i4611;\n+       long i4612;\n+       long i4613;\n+       long i4614;\n+       long i4615;\n+       long i4616;\n+       long i4617;\n+       long i4618;\n+       long i4619;\n+       long i4620;\n+       long i4621;\n+       long i4622;\n+       long i4623;\n+       long i4624;\n+       long i4625;\n+       long i4626;\n+       long i4627;\n+       long i4628;\n+       long i4629;\n+       long i4630;\n+       long i4631;\n+       long i4632;\n+       long i4633;\n+       long i4634;\n+       long i4635;\n+       long i4636;\n+       long i4637;\n+       long i4638;\n+       long i4639;\n+       long i4640;\n+       long i4641;\n+       long i4642;\n+       long i4643;\n+       long i4644;\n+       long i4645;\n+       long i4646;\n+       long i4647;\n+       long i4648;\n+       long i4649;\n+       long i4650;\n+       long i4651;\n+       long i4652;\n+       long i4653;\n+       long i4654;\n+       long i4655;\n+       long i4656;\n+       long i4657;\n+       long i4658;\n+       long i4659;\n+       long i4660;\n+       long i4661;\n+       long i4662;\n+       long i4663;\n+       long i4664;\n+       long i4665;\n+       long i4666;\n+       long i4667;\n+       long i4668;\n+       long i4669;\n+       long i4670;\n+       long i4671;\n+       long i4672;\n+       long i4673;\n+       long i4674;\n+       long i4675;\n+       long i4676;\n+       long i4677;\n+       long i4678;\n+       long i4679;\n+       long i4680;\n+       long i4681;\n+       long i4682;\n+       long i4683;\n+       long i4684;\n+       long i4685;\n+       long i4686;\n+       long i4687;\n+       long i4688;\n+       long i4689;\n+       long i4690;\n+       long i4691;\n+       long i4692;\n+       long i4693;\n+       long i4694;\n+       long i4695;\n+       long i4696;\n+       long i4697;\n+       long i4698;\n+       long i4699;\n+       long i4700;\n+       long i4701;\n+       long i4702;\n+       long i4703;\n+       long i4704;\n+       long i4705;\n+       long i4706;\n+       long i4707;\n+       long i4708;\n+       long i4709;\n+       long i4710;\n+       long i4711;\n+       long i4712;\n+       long i4713;\n+       long i4714;\n+       long i4715;\n+       long i4716;\n+       long i4717;\n+       long i4718;\n+       long i4719;\n+       long i4720;\n+       long i4721;\n+       long i4722;\n+       long i4723;\n+       long i4724;\n+       long i4725;\n+       long i4726;\n+       long i4727;\n+       long i4728;\n+       long i4729;\n+       long i4730;\n+       long i4731;\n+       long i4732;\n+       long i4733;\n+       long i4734;\n+       long i4735;\n+       long i4736;\n+       long i4737;\n+       long i4738;\n+       long i4739;\n+       long i4740;\n+       long i4741;\n+       long i4742;\n+       long i4743;\n+       long i4744;\n+       long i4745;\n+       long i4746;\n+       long i4747;\n+       long i4748;\n+       long i4749;\n+       long i4750;\n+       long i4751;\n+       long i4752;\n+       long i4753;\n+       long i4754;\n+       long i4755;\n+       long i4756;\n+       long i4757;\n+       long i4758;\n+       long i4759;\n+       long i4760;\n+       long i4761;\n+       long i4762;\n+       long i4763;\n+       long i4764;\n+       long i4765;\n+       long i4766;\n+       long i4767;\n+       long i4768;\n+       long i4769;\n+       long i4770;\n+       long i4771;\n+       long i4772;\n+       long i4773;\n+       long i4774;\n+       long i4775;\n+       long i4776;\n+       long i4777;\n+       long i4778;\n+       long i4779;\n+       long i4780;\n+       long i4781;\n+       long i4782;\n+       long i4783;\n+       long i4784;\n+       long i4785;\n+       long i4786;\n+       long i4787;\n+       long i4788;\n+       long i4789;\n+       long i4790;\n+       long i4791;\n+       long i4792;\n+       long i4793;\n+       long i4794;\n+       long i4795;\n+       long i4796;\n+       long i4797;\n+       long i4798;\n+       long i4799;\n+       long i4800;\n+       long i4801;\n+       long i4802;\n+       long i4803;\n+       long i4804;\n+       long i4805;\n+       long i4806;\n+       long i4807;\n+       long i4808;\n+       long i4809;\n+       long i4810;\n+       long i4811;\n+       long i4812;\n+       long i4813;\n+       long i4814;\n+       long i4815;\n+       long i4816;\n+       long i4817;\n+       long i4818;\n+       long i4819;\n+       long i4820;\n+       long i4821;\n+       long i4822;\n+       long i4823;\n+       long i4824;\n+       long i4825;\n+       long i4826;\n+       long i4827;\n+       long i4828;\n+       long i4829;\n+       long i4830;\n+       long i4831;\n+       long i4832;\n+       long i4833;\n+       long i4834;\n+       long i4835;\n+       long i4836;\n+       long i4837;\n+       long i4838;\n+       long i4839;\n+       long i4840;\n+       long i4841;\n+       long i4842;\n+       long i4843;\n+       long i4844;\n+       long i4845;\n+       long i4846;\n+       long i4847;\n+       long i4848;\n+       long i4849;\n+       long i4850;\n+       long i4851;\n+       long i4852;\n+       long i4853;\n+       long i4854;\n+       long i4855;\n+       long i4856;\n+       long i4857;\n+       long i4858;\n+       long i4859;\n+       long i4860;\n+       long i4861;\n+       long i4862;\n+       long i4863;\n+       long i4864;\n+       long i4865;\n+       long i4866;\n+       long i4867;\n+       long i4868;\n+       long i4869;\n+       long i4870;\n+       long i4871;\n+       long i4872;\n+       long i4873;\n+       long i4874;\n+       long i4875;\n+       long i4876;\n+       long i4877;\n+       long i4878;\n+       long i4879;\n+       long i4880;\n+       long i4881;\n+       long i4882;\n+       long i4883;\n+       long i4884;\n+       long i4885;\n+       long i4886;\n+       long i4887;\n+       long i4888;\n+       long i4889;\n+       long i4890;\n+       long i4891;\n+       long i4892;\n+       long i4893;\n+       long i4894;\n+       long i4895;\n+       long i4896;\n+       long i4897;\n+       long i4898;\n+       long i4899;\n+       long i4900;\n+       long i4901;\n+       long i4902;\n+       long i4903;\n+       long i4904;\n+       long i4905;\n+       long i4906;\n+       long i4907;\n+       long i4908;\n+       long i4909;\n+       long i4910;\n+       long i4911;\n+       long i4912;\n+       long i4913;\n+       long i4914;\n+       long i4915;\n+       long i4916;\n+       long i4917;\n+       long i4918;\n+       long i4919;\n+       long i4920;\n+       long i4921;\n+       long i4922;\n+       long i4923;\n+       long i4924;\n+       long i4925;\n+       long i4926;\n+       long i4927;\n+       long i4928;\n+       long i4929;\n+       long i4930;\n+       long i4931;\n+       long i4932;\n+       long i4933;\n+       long i4934;\n+       long i4935;\n+       long i4936;\n+       long i4937;\n+       long i4938;\n+       long i4939;\n+       long i4940;\n+       long i4941;\n+       long i4942;\n+       long i4943;\n+       long i4944;\n+       long i4945;\n+       long i4946;\n+       long i4947;\n+       long i4948;\n+       long i4949;\n+       long i4950;\n+       long i4951;\n+       long i4952;\n+       long i4953;\n+       long i4954;\n+       long i4955;\n+       long i4956;\n+       long i4957;\n+       long i4958;\n+       long i4959;\n+       long i4960;\n+       long i4961;\n+       long i4962;\n+       long i4963;\n+       long i4964;\n+       long i4965;\n+       long i4966;\n+       long i4967;\n+       long i4968;\n+       long i4969;\n+       long i4970;\n+       long i4971;\n+       long i4972;\n+       long i4973;\n+       long i4974;\n+       long i4975;\n+       long i4976;\n+       long i4977;\n+       long i4978;\n+       long i4979;\n+       long i4980;\n+       long i4981;\n+       long i4982;\n+       long i4983;\n+       long i4984;\n+       long i4985;\n+       long i4986;\n+       long i4987;\n+       long i4988;\n+       long i4989;\n+       long i4990;\n+       long i4991;\n+       long i4992;\n+       long i4993;\n+       long i4994;\n+       long i4995;\n+       long i4996;\n+       long i4997;\n+       long i4998;\n+       long i4999;\n+       long i5000;\n+       long i5001;\n+       long i5002;\n+       long i5003;\n+       long i5004;\n+       long i5005;\n+       long i5006;\n+       long i5007;\n+       long i5008;\n+       long i5009;\n+       long i5010;\n+       long i5011;\n+       long i5012;\n+       long i5013;\n+       long i5014;\n+       long i5015;\n+       long i5016;\n+       long i5017;\n+       long i5018;\n+       long i5019;\n+       long i5020;\n+       long i5021;\n+       long i5022;\n+       long i5023;\n+       long i5024;\n+       long i5025;\n+       long i5026;\n+       long i5027;\n+       long i5028;\n+       long i5029;\n+       long i5030;\n+       long i5031;\n+       long i5032;\n+       long i5033;\n+       long i5034;\n+       long i5035;\n+       long i5036;\n+       long i5037;\n+       long i5038;\n+       long i5039;\n+       long i5040;\n+       long i5041;\n+       long i5042;\n+       long i5043;\n+       long i5044;\n+       long i5045;\n+       long i5046;\n+       long i5047;\n+       long i5048;\n+       long i5049;\n+       long i5050;\n+       long i5051;\n+       long i5052;\n+       long i5053;\n+       long i5054;\n+       long i5055;\n+       long i5056;\n+       long i5057;\n+       long i5058;\n+       long i5059;\n+       long i5060;\n+       long i5061;\n+       long i5062;\n+       long i5063;\n+       long i5064;\n+       long i5065;\n+       long i5066;\n+       long i5067;\n+       long i5068;\n+       long i5069;\n+       long i5070;\n+       long i5071;\n+       long i5072;\n+       long i5073;\n+       long i5074;\n+       long i5075;\n+       long i5076;\n+       long i5077;\n+       long i5078;\n+       long i5079;\n+       long i5080;\n+       long i5081;\n+       long i5082;\n+       long i5083;\n+       long i5084;\n+       long i5085;\n+       long i5086;\n+       long i5087;\n+       long i5088;\n+       long i5089;\n+       long i5090;\n+       long i5091;\n+       long i5092;\n+       long i5093;\n+       long i5094;\n+       long i5095;\n+       long i5096;\n+       long i5097;\n+       long i5098;\n+       long i5099;\n+       long i5100;\n+       long i5101;\n+       long i5102;\n+       long i5103;\n+       long i5104;\n+       long i5105;\n+       long i5106;\n+       long i5107;\n+       long i5108;\n+       long i5109;\n+       long i5110;\n+       long i5111;\n+       long i5112;\n+       long i5113;\n+       long i5114;\n+       long i5115;\n+       long i5116;\n+       long i5117;\n+       long i5118;\n+       long i5119;\n+       long i5120;\n+       long i5121;\n+       long i5122;\n+       long i5123;\n+       long i5124;\n+       long i5125;\n+       long i5126;\n+       long i5127;\n+       long i5128;\n+       long i5129;\n+       long i5130;\n+       long i5131;\n+       long i5132;\n+       long i5133;\n+       long i5134;\n+       long i5135;\n+       long i5136;\n+       long i5137;\n+       long i5138;\n+       long i5139;\n+       long i5140;\n+       long i5141;\n+       long i5142;\n+       long i5143;\n+       long i5144;\n+       long i5145;\n+       long i5146;\n+       long i5147;\n+       long i5148;\n+       long i5149;\n+       long i5150;\n+       long i5151;\n+       long i5152;\n+       long i5153;\n+       long i5154;\n+       long i5155;\n+       long i5156;\n+       long i5157;\n+       long i5158;\n+       long i5159;\n+       long i5160;\n+       long i5161;\n+       long i5162;\n+       long i5163;\n+       long i5164;\n+       long i5165;\n+       long i5166;\n+       long i5167;\n+       long i5168;\n+       long i5169;\n+       long i5170;\n+       long i5171;\n+       long i5172;\n+       long i5173;\n+       long i5174;\n+       long i5175;\n+       long i5176;\n+       long i5177;\n+       long i5178;\n+       long i5179;\n+       long i5180;\n+       long i5181;\n+       long i5182;\n+       long i5183;\n+       long i5184;\n+       long i5185;\n+       long i5186;\n+       long i5187;\n+       long i5188;\n+       long i5189;\n+       long i5190;\n+       long i5191;\n+       long i5192;\n+       long i5193;\n+       long i5194;\n+       long i5195;\n+       long i5196;\n+       long i5197;\n+       long i5198;\n+       long i5199;\n+       long i5200;\n+       long i5201;\n+       long i5202;\n+       long i5203;\n+       long i5204;\n+       long i5205;\n+       long i5206;\n+       long i5207;\n+       long i5208;\n+       long i5209;\n+       long i5210;\n+       long i5211;\n+       long i5212;\n+       long i5213;\n+       long i5214;\n+       long i5215;\n+       long i5216;\n+       long i5217;\n+       long i5218;\n+       long i5219;\n+       long i5220;\n+       long i5221;\n+       long i5222;\n+       long i5223;\n+       long i5224;\n+       long i5225;\n+       long i5226;\n+       long i5227;\n+       long i5228;\n+       long i5229;\n+       long i5230;\n+       long i5231;\n+       long i5232;\n+       long i5233;\n+       long i5234;\n+       long i5235;\n+       long i5236;\n+       long i5237;\n+       long i5238;\n+       long i5239;\n+       long i5240;\n+       long i5241;\n+       long i5242;\n+       long i5243;\n+       long i5244;\n+       long i5245;\n+       long i5246;\n+       long i5247;\n+       long i5248;\n+       long i5249;\n+       long i5250;\n+       long i5251;\n+       long i5252;\n+       long i5253;\n+       long i5254;\n+       long i5255;\n+       long i5256;\n+       long i5257;\n+       long i5258;\n+       long i5259;\n+       long i5260;\n+       long i5261;\n+       long i5262;\n+       long i5263;\n+       long i5264;\n+       long i5265;\n+       long i5266;\n+       long i5267;\n+       long i5268;\n+       long i5269;\n+       long i5270;\n+       long i5271;\n+       long i5272;\n+       long i5273;\n+       long i5274;\n+       long i5275;\n+       long i5276;\n+       long i5277;\n+       long i5278;\n+       long i5279;\n+       long i5280;\n+       long i5281;\n+       long i5282;\n+       long i5283;\n+       long i5284;\n+       long i5285;\n+       long i5286;\n+       long i5287;\n+       long i5288;\n+       long i5289;\n+       long i5290;\n+       long i5291;\n+       long i5292;\n+       long i5293;\n+       long i5294;\n+       long i5295;\n+       long i5296;\n+       long i5297;\n+       long i5298;\n+       long i5299;\n+       long i5300;\n+       long i5301;\n+       long i5302;\n+       long i5303;\n+       long i5304;\n+       long i5305;\n+       long i5306;\n+       long i5307;\n+       long i5308;\n+       long i5309;\n+       long i5310;\n+       long i5311;\n+       long i5312;\n+       long i5313;\n+       long i5314;\n+       long i5315;\n+       long i5316;\n+       long i5317;\n+       long i5318;\n+       long i5319;\n+       long i5320;\n+       long i5321;\n+       long i5322;\n+       long i5323;\n+       long i5324;\n+       long i5325;\n+       long i5326;\n+       long i5327;\n+       long i5328;\n+       long i5329;\n+       long i5330;\n+       long i5331;\n+       long i5332;\n+       long i5333;\n+       long i5334;\n+       long i5335;\n+       long i5336;\n+       long i5337;\n+       long i5338;\n+       long i5339;\n+       long i5340;\n+       long i5341;\n+       long i5342;\n+       long i5343;\n+       long i5344;\n+       long i5345;\n+       long i5346;\n+       long i5347;\n+       long i5348;\n+       long i5349;\n+       long i5350;\n+       long i5351;\n+       long i5352;\n+       long i5353;\n+       long i5354;\n+       long i5355;\n+       long i5356;\n+       long i5357;\n+       long i5358;\n+       long i5359;\n+       long i5360;\n+       long i5361;\n+       long i5362;\n+       long i5363;\n+       long i5364;\n+       long i5365;\n+       long i5366;\n+       long i5367;\n+       long i5368;\n+       long i5369;\n+       long i5370;\n+       long i5371;\n+       long i5372;\n+       long i5373;\n+       long i5374;\n+       long i5375;\n+       long i5376;\n+       long i5377;\n+       long i5378;\n+       long i5379;\n+       long i5380;\n+       long i5381;\n+       long i5382;\n+       long i5383;\n+       long i5384;\n+       long i5385;\n+       long i5386;\n+       long i5387;\n+       long i5388;\n+       long i5389;\n+       long i5390;\n+       long i5391;\n+       long i5392;\n+       long i5393;\n+       long i5394;\n+       long i5395;\n+       long i5396;\n+       long i5397;\n+       long i5398;\n+       long i5399;\n+       long i5400;\n+       long i5401;\n+       long i5402;\n+       long i5403;\n+       long i5404;\n+       long i5405;\n+       long i5406;\n+       long i5407;\n+       long i5408;\n+       long i5409;\n+       long i5410;\n+       long i5411;\n+       long i5412;\n+       long i5413;\n+       long i5414;\n+       long i5415;\n+       long i5416;\n+       long i5417;\n+       long i5418;\n+       long i5419;\n+       long i5420;\n+       long i5421;\n+       long i5422;\n+       long i5423;\n+       long i5424;\n+       long i5425;\n+       long i5426;\n+       long i5427;\n+       long i5428;\n+       long i5429;\n+       long i5430;\n+       long i5431;\n+       long i5432;\n+       long i5433;\n+       long i5434;\n+       long i5435;\n+       long i5436;\n+       long i5437;\n+       long i5438;\n+       long i5439;\n+       long i5440;\n+       long i5441;\n+       long i5442;\n+       long i5443;\n+       long i5444;\n+       long i5445;\n+       long i5446;\n+       long i5447;\n+       long i5448;\n+       long i5449;\n+       long i5450;\n+       long i5451;\n+       long i5452;\n+       long i5453;\n+       long i5454;\n+       long i5455;\n+       long i5456;\n+       long i5457;\n+       long i5458;\n+       long i5459;\n+       long i5460;\n+       long i5461;\n+       long i5462;\n+       long i5463;\n+       long i5464;\n+       long i5465;\n+       long i5466;\n+       long i5467;\n+       long i5468;\n+       long i5469;\n+       long i5470;\n+       long i5471;\n+       long i5472;\n+       long i5473;\n+       long i5474;\n+       long i5475;\n+       long i5476;\n+       long i5477;\n+       long i5478;\n+       long i5479;\n+       long i5480;\n+       long i5481;\n+       long i5482;\n+       long i5483;\n+       long i5484;\n+       long i5485;\n+       long i5486;\n+       long i5487;\n+       long i5488;\n+       long i5489;\n+       long i5490;\n+       long i5491;\n+       long i5492;\n+       long i5493;\n+       long i5494;\n+       long i5495;\n+       long i5496;\n+       long i5497;\n+       long i5498;\n+       long i5499;\n+       long i5500;\n+       long i5501;\n+       long i5502;\n+       long i5503;\n+       long i5504;\n+       long i5505;\n+       long i5506;\n+       long i5507;\n+       long i5508;\n+       long i5509;\n+       long i5510;\n+       long i5511;\n+       long i5512;\n+       long i5513;\n+       long i5514;\n+       long i5515;\n+       long i5516;\n+       long i5517;\n+       long i5518;\n+       long i5519;\n+       long i5520;\n+       long i5521;\n+       long i5522;\n+       long i5523;\n+       long i5524;\n+       long i5525;\n+       long i5526;\n+       long i5527;\n+       long i5528;\n+       long i5529;\n+       long i5530;\n+       long i5531;\n+       long i5532;\n+       long i5533;\n+       long i5534;\n+       long i5535;\n+       long i5536;\n+       long i5537;\n+       long i5538;\n+       long i5539;\n+       long i5540;\n+       long i5541;\n+       long i5542;\n+       long i5543;\n+       long i5544;\n+       long i5545;\n+       long i5546;\n+       long i5547;\n+       long i5548;\n+       long i5549;\n+       long i5550;\n+       long i5551;\n+       long i5552;\n+       long i5553;\n+       long i5554;\n+       long i5555;\n+       long i5556;\n+       long i5557;\n+       long i5558;\n+       long i5559;\n+       long i5560;\n+       long i5561;\n+       long i5562;\n+       long i5563;\n+       long i5564;\n+       long i5565;\n+       long i5566;\n+       long i5567;\n+       long i5568;\n+       long i5569;\n+       long i5570;\n+       long i5571;\n+       long i5572;\n+       long i5573;\n+       long i5574;\n+       long i5575;\n+       long i5576;\n+       long i5577;\n+       long i5578;\n+       long i5579;\n+       long i5580;\n+       long i5581;\n+       long i5582;\n+       long i5583;\n+       long i5584;\n+       long i5585;\n+       long i5586;\n+       long i5587;\n+       long i5588;\n+       long i5589;\n+       long i5590;\n+       long i5591;\n+       long i5592;\n+       long i5593;\n+       long i5594;\n+       long i5595;\n+       long i5596;\n+       long i5597;\n+       long i5598;\n+       long i5599;\n+       long i5600;\n+       long i5601;\n+       long i5602;\n+       long i5603;\n+       long i5604;\n+       long i5605;\n+       long i5606;\n+       long i5607;\n+       long i5608;\n+       long i5609;\n+       long i5610;\n+       long i5611;\n+       long i5612;\n+       long i5613;\n+       long i5614;\n+       long i5615;\n+       long i5616;\n+       long i5617;\n+       long i5618;\n+       long i5619;\n+       long i5620;\n+       long i5621;\n+       long i5622;\n+       long i5623;\n+       long i5624;\n+       long i5625;\n+       long i5626;\n+       long i5627;\n+       long i5628;\n+       long i5629;\n+       long i5630;\n+       long i5631;\n+       long i5632;\n+       long i5633;\n+       long i5634;\n+       long i5635;\n+       long i5636;\n+       long i5637;\n+       long i5638;\n+       long i5639;\n+       long i5640;\n+       long i5641;\n+       long i5642;\n+       long i5643;\n+       long i5644;\n+       long i5645;\n+       long i5646;\n+       long i5647;\n+       long i5648;\n+       long i5649;\n+       long i5650;\n+       long i5651;\n+       long i5652;\n+       long i5653;\n+       long i5654;\n+       long i5655;\n+       long i5656;\n+       long i5657;\n+       long i5658;\n+       long i5659;\n+       long i5660;\n+       long i5661;\n+       long i5662;\n+       long i5663;\n+       long i5664;\n+       long i5665;\n+       long i5666;\n+       long i5667;\n+       long i5668;\n+       long i5669;\n+       long i5670;\n+       long i5671;\n+       long i5672;\n+       long i5673;\n+       long i5674;\n+       long i5675;\n+       long i5676;\n+       long i5677;\n+       long i5678;\n+       long i5679;\n+       long i5680;\n+       long i5681;\n+       long i5682;\n+       long i5683;\n+       long i5684;\n+       long i5685;\n+       long i5686;\n+       long i5687;\n+       long i5688;\n+       long i5689;\n+       long i5690;\n+       long i5691;\n+       long i5692;\n+       long i5693;\n+       long i5694;\n+       long i5695;\n+       long i5696;\n+       long i5697;\n+       long i5698;\n+       long i5699;\n+       long i5700;\n+       long i5701;\n+       long i5702;\n+       long i5703;\n+       long i5704;\n+       long i5705;\n+       long i5706;\n+       long i5707;\n+       long i5708;\n+       long i5709;\n+       long i5710;\n+       long i5711;\n+       long i5712;\n+       long i5713;\n+       long i5714;\n+       long i5715;\n+       long i5716;\n+       long i5717;\n+       long i5718;\n+       long i5719;\n+       long i5720;\n+       long i5721;\n+       long i5722;\n+       long i5723;\n+       long i5724;\n+       long i5725;\n+       long i5726;\n+       long i5727;\n+       long i5728;\n+       long i5729;\n+       long i5730;\n+       long i5731;\n+       long i5732;\n+       long i5733;\n+       long i5734;\n+       long i5735;\n+       long i5736;\n+       long i5737;\n+       long i5738;\n+       long i5739;\n+       long i5740;\n+       long i5741;\n+       long i5742;\n+       long i5743;\n+       long i5744;\n+       long i5745;\n+       long i5746;\n+       long i5747;\n+       long i5748;\n+       long i5749;\n+       long i5750;\n+       long i5751;\n+       long i5752;\n+       long i5753;\n+       long i5754;\n+       long i5755;\n+       long i5756;\n+       long i5757;\n+       long i5758;\n+       long i5759;\n+       long i5760;\n+       long i5761;\n+       long i5762;\n+       long i5763;\n+       long i5764;\n+       long i5765;\n+       long i5766;\n+       long i5767;\n+       long i5768;\n+       long i5769;\n+       long i5770;\n+       long i5771;\n+       long i5772;\n+       long i5773;\n+       long i5774;\n+       long i5775;\n+       long i5776;\n+       long i5777;\n+       long i5778;\n+       long i5779;\n+       long i5780;\n+       long i5781;\n+       long i5782;\n+       long i5783;\n+       long i5784;\n+       long i5785;\n+       long i5786;\n+       long i5787;\n+       long i5788;\n+       long i5789;\n+       long i5790;\n+       long i5791;\n+       long i5792;\n+       long i5793;\n+       long i5794;\n+       long i5795;\n+       long i5796;\n+       long i5797;\n+       long i5798;\n+       long i5799;\n+       long i5800;\n+       long i5801;\n+       long i5802;\n+       long i5803;\n+       long i5804;\n+       long i5805;\n+       long i5806;\n+       long i5807;\n+       long i5808;\n+       long i5809;\n+       long i5810;\n+       long i5811;\n+       long i5812;\n+       long i5813;\n+       long i5814;\n+       long i5815;\n+       long i5816;\n+       long i5817;\n+       long i5818;\n+       long i5819;\n+       long i5820;\n+       long i5821;\n+       long i5822;\n+       long i5823;\n+       long i5824;\n+       long i5825;\n+       long i5826;\n+       long i5827;\n+       long i5828;\n+       long i5829;\n+       long i5830;\n+       long i5831;\n+       long i5832;\n+       long i5833;\n+       long i5834;\n+       long i5835;\n+       long i5836;\n+       long i5837;\n+       long i5838;\n+       long i5839;\n+       long i5840;\n+       long i5841;\n+       long i5842;\n+       long i5843;\n+       long i5844;\n+       long i5845;\n+       long i5846;\n+       long i5847;\n+       long i5848;\n+       long i5849;\n+       long i5850;\n+       long i5851;\n+       long i5852;\n+       long i5853;\n+       long i5854;\n+       long i5855;\n+       long i5856;\n+       long i5857;\n+       long i5858;\n+       long i5859;\n+       long i5860;\n+       long i5861;\n+       long i5862;\n+       long i5863;\n+       long i5864;\n+       long i5865;\n+       long i5866;\n+       long i5867;\n+       long i5868;\n+       long i5869;\n+       long i5870;\n+       long i5871;\n+       long i5872;\n+       long i5873;\n+       long i5874;\n+       long i5875;\n+       long i5876;\n+       long i5877;\n+       long i5878;\n+       long i5879;\n+       long i5880;\n+       long i5881;\n+       long i5882;\n+       long i5883;\n+       long i5884;\n+       long i5885;\n+       long i5886;\n+       long i5887;\n+       long i5888;\n+       long i5889;\n+       long i5890;\n+       long i5891;\n+       long i5892;\n+       long i5893;\n+       long i5894;\n+       long i5895;\n+       long i5896;\n+       long i5897;\n+       long i5898;\n+       long i5899;\n+       long i5900;\n+       long i5901;\n+       long i5902;\n+       long i5903;\n+       long i5904;\n+       long i5905;\n+       long i5906;\n+       long i5907;\n+       long i5908;\n+       long i5909;\n+       long i5910;\n+       long i5911;\n+       long i5912;\n+       long i5913;\n+       long i5914;\n+       long i5915;\n+       long i5916;\n+       long i5917;\n+       long i5918;\n+       long i5919;\n+       long i5920;\n+       long i5921;\n+       long i5922;\n+       long i5923;\n+       long i5924;\n+       long i5925;\n+       long i5926;\n+       long i5927;\n+       long i5928;\n+       long i5929;\n+       long i5930;\n+       long i5931;\n+       long i5932;\n+       long i5933;\n+       long i5934;\n+       long i5935;\n+       long i5936;\n+       long i5937;\n+       long i5938;\n+       long i5939;\n+       long i5940;\n+       long i5941;\n+       long i5942;\n+       long i5943;\n+       long i5944;\n+       long i5945;\n+       long i5946;\n+       long i5947;\n+       long i5948;\n+       long i5949;\n+       long i5950;\n+       long i5951;\n+       long i5952;\n+       long i5953;\n+       long i5954;\n+       long i5955;\n+       long i5956;\n+       long i5957;\n+       long i5958;\n+       long i5959;\n+       long i5960;\n+       long i5961;\n+       long i5962;\n+       long i5963;\n+       long i5964;\n+       long i5965;\n+       long i5966;\n+       long i5967;\n+       long i5968;\n+       long i5969;\n+       long i5970;\n+       long i5971;\n+       long i5972;\n+       long i5973;\n+       long i5974;\n+       long i5975;\n+       long i5976;\n+       long i5977;\n+       long i5978;\n+       long i5979;\n+       long i5980;\n+       long i5981;\n+       long i5982;\n+       long i5983;\n+       long i5984;\n+       long i5985;\n+       long i5986;\n+       long i5987;\n+       long i5988;\n+       long i5989;\n+       long i5990;\n+       long i5991;\n+       long i5992;\n+       long i5993;\n+       long i5994;\n+       long i5995;\n+       long i5996;\n+       long i5997;\n+       long i5998;\n+       long i5999;\n+       long i6000;\n+       long i6001;\n+       long i6002;\n+       long i6003;\n+       long i6004;\n+       long i6005;\n+       long i6006;\n+       long i6007;\n+       long i6008;\n+       long i6009;\n+       long i6010;\n+       long i6011;\n+       long i6012;\n+       long i6013;\n+       long i6014;\n+       long i6015;\n+       long i6016;\n+       long i6017;\n+       long i6018;\n+       long i6019;\n+       long i6020;\n+       long i6021;\n+       long i6022;\n+       long i6023;\n+       long i6024;\n+       long i6025;\n+       long i6026;\n+       long i6027;\n+       long i6028;\n+       long i6029;\n+       long i6030;\n+       long i6031;\n+       long i6032;\n+       long i6033;\n+       long i6034;\n+       long i6035;\n+       long i6036;\n+       long i6037;\n+       long i6038;\n+       long i6039;\n+       long i6040;\n+       long i6041;\n+       long i6042;\n+       long i6043;\n+       long i6044;\n+       long i6045;\n+       long i6046;\n+       long i6047;\n+       long i6048;\n+       long i6049;\n+       long i6050;\n+       long i6051;\n+       long i6052;\n+       long i6053;\n+       long i6054;\n+       long i6055;\n+       long i6056;\n+       long i6057;\n+       long i6058;\n+       long i6059;\n+       long i6060;\n+       long i6061;\n+       long i6062;\n+       long i6063;\n+       long i6064;\n+       long i6065;\n+       long i6066;\n+       long i6067;\n+       long i6068;\n+       long i6069;\n+       long i6070;\n+       long i6071;\n+       long i6072;\n+       long i6073;\n+       long i6074;\n+       long i6075;\n+       long i6076;\n+       long i6077;\n+       long i6078;\n+       long i6079;\n+       long i6080;\n+       long i6081;\n+       long i6082;\n+       long i6083;\n+       long i6084;\n+       long i6085;\n+       long i6086;\n+       long i6087;\n+       long i6088;\n+       long i6089;\n+       long i6090;\n+       long i6091;\n+       long i6092;\n+       long i6093;\n+       long i6094;\n+       long i6095;\n+       long i6096;\n+       long i6097;\n+       long i6098;\n+       long i6099;\n+       long i6100;\n+       long i6101;\n+       long i6102;\n+       long i6103;\n+       long i6104;\n+       long i6105;\n+       long i6106;\n+       long i6107;\n+       long i6108;\n+       long i6109;\n+       long i6110;\n+       long i6111;\n+       long i6112;\n+       long i6113;\n+       long i6114;\n+       long i6115;\n+       long i6116;\n+       long i6117;\n+       long i6118;\n+       long i6119;\n+       long i6120;\n+       long i6121;\n+       long i6122;\n+       long i6123;\n+       long i6124;\n+       long i6125;\n+       long i6126;\n+       long i6127;\n+       long i6128;\n+       long i6129;\n+       long i6130;\n+       long i6131;\n+       long i6132;\n+       long i6133;\n+       long i6134;\n+       long i6135;\n+       long i6136;\n+       long i6137;\n+       long i6138;\n+       long i6139;\n+       long i6140;\n+       long i6141;\n+       long i6142;\n+       long i6143;\n+       long i6144;\n+       long i6145;\n+       long i6146;\n+       long i6147;\n+       long i6148;\n+       long i6149;\n+       long i6150;\n+       long i6151;\n+       long i6152;\n+       long i6153;\n+       long i6154;\n+       long i6155;\n+       long i6156;\n+       long i6157;\n+       long i6158;\n+       long i6159;\n+       long i6160;\n+       long i6161;\n+       long i6162;\n+       long i6163;\n+       long i6164;\n+       long i6165;\n+       long i6166;\n+       long i6167;\n+       long i6168;\n+       long i6169;\n+       long i6170;\n+       long i6171;\n+       long i6172;\n+       long i6173;\n+       long i6174;\n+       long i6175;\n+       long i6176;\n+       long i6177;\n+       long i6178;\n+       long i6179;\n+       long i6180;\n+       long i6181;\n+       long i6182;\n+       long i6183;\n+       long i6184;\n+       long i6185;\n+       long i6186;\n+       long i6187;\n+       long i6188;\n+       long i6189;\n+       long i6190;\n+       long i6191;\n+       long i6192;\n+       long i6193;\n+       long i6194;\n+       long i6195;\n+       long i6196;\n+       long i6197;\n+       long i6198;\n+       long i6199;\n+       long i6200;\n+       long i6201;\n+       long i6202;\n+       long i6203;\n+       long i6204;\n+       long i6205;\n+       long i6206;\n+       long i6207;\n+       long i6208;\n+       long i6209;\n+       long i6210;\n+       long i6211;\n+       long i6212;\n+       long i6213;\n+       long i6214;\n+       long i6215;\n+       long i6216;\n+       long i6217;\n+       long i6218;\n+       long i6219;\n+       long i6220;\n+       long i6221;\n+       long i6222;\n+       long i6223;\n+       long i6224;\n+       long i6225;\n+       long i6226;\n+       long i6227;\n+       long i6228;\n+       long i6229;\n+       long i6230;\n+       long i6231;\n+       long i6232;\n+       long i6233;\n+       long i6234;\n+       long i6235;\n+       long i6236;\n+       long i6237;\n+       long i6238;\n+       long i6239;\n+       long i6240;\n+       long i6241;\n+       long i6242;\n+       long i6243;\n+       long i6244;\n+       long i6245;\n+       long i6246;\n+       long i6247;\n+       long i6248;\n+       long i6249;\n+       long i6250;\n+       long i6251;\n+       long i6252;\n+       long i6253;\n+       long i6254;\n+       long i6255;\n+       long i6256;\n+       long i6257;\n+       long i6258;\n+       long i6259;\n+       long i6260;\n+       long i6261;\n+       long i6262;\n+       long i6263;\n+       long i6264;\n+       long i6265;\n+       long i6266;\n+       long i6267;\n+       long i6268;\n+       long i6269;\n+       long i6270;\n+       long i6271;\n+       long i6272;\n+       long i6273;\n+       long i6274;\n+       long i6275;\n+       long i6276;\n+       long i6277;\n+       long i6278;\n+       long i6279;\n+       long i6280;\n+       long i6281;\n+       long i6282;\n+       long i6283;\n+       long i6284;\n+       long i6285;\n+       long i6286;\n+       long i6287;\n+       long i6288;\n+       long i6289;\n+       long i6290;\n+       long i6291;\n+       long i6292;\n+       long i6293;\n+       long i6294;\n+       long i6295;\n+       long i6296;\n+       long i6297;\n+       long i6298;\n+       long i6299;\n+       long i6300;\n+       long i6301;\n+       long i6302;\n+       long i6303;\n+       long i6304;\n+       long i6305;\n+       long i6306;\n+       long i6307;\n+       long i6308;\n+       long i6309;\n+       long i6310;\n+       long i6311;\n+       long i6312;\n+       long i6313;\n+       long i6314;\n+       long i6315;\n+       long i6316;\n+       long i6317;\n+       long i6318;\n+       long i6319;\n+       long i6320;\n+       long i6321;\n+       long i6322;\n+       long i6323;\n+       long i6324;\n+       long i6325;\n+       long i6326;\n+       long i6327;\n+       long i6328;\n+       long i6329;\n+       long i6330;\n+       long i6331;\n+       long i6332;\n+       long i6333;\n+       long i6334;\n+       long i6335;\n+       long i6336;\n+       long i6337;\n+       long i6338;\n+       long i6339;\n+       long i6340;\n+       long i6341;\n+       long i6342;\n+       long i6343;\n+       long i6344;\n+       long i6345;\n+       long i6346;\n+       long i6347;\n+       long i6348;\n+       long i6349;\n+       long i6350;\n+       long i6351;\n+       long i6352;\n+       long i6353;\n+       long i6354;\n+       long i6355;\n+       long i6356;\n+       long i6357;\n+       long i6358;\n+       long i6359;\n+       long i6360;\n+       long i6361;\n+       long i6362;\n+       long i6363;\n+       long i6364;\n+       long i6365;\n+       long i6366;\n+       long i6367;\n+       long i6368;\n+       long i6369;\n+       long i6370;\n+       long i6371;\n+       long i6372;\n+       long i6373;\n+       long i6374;\n+       long i6375;\n+       long i6376;\n+       long i6377;\n+       long i6378;\n+       long i6379;\n+       long i6380;\n+       long i6381;\n+       long i6382;\n+       long i6383;\n+       long i6384;\n+       long i6385;\n+       long i6386;\n+       long i6387;\n+       long i6388;\n+       long i6389;\n+       long i6390;\n+       long i6391;\n+       long i6392;\n+       long i6393;\n+       long i6394;\n+       long i6395;\n+       long i6396;\n+       long i6397;\n+       long i6398;\n+       long i6399;\n+       long i6400;\n+       long i6401;\n+       long i6402;\n+       long i6403;\n+       long i6404;\n+       long i6405;\n+       long i6406;\n+       long i6407;\n+       long i6408;\n+       long i6409;\n+       long i6410;\n+       long i6411;\n+       long i6412;\n+       long i6413;\n+       long i6414;\n+       long i6415;\n+       long i6416;\n+       long i6417;\n+       long i6418;\n+       long i6419;\n+       long i6420;\n+       long i6421;\n+       long i6422;\n+       long i6423;\n+       long i6424;\n+       long i6425;\n+       long i6426;\n+       long i6427;\n+       long i6428;\n+       long i6429;\n+       long i6430;\n+       long i6431;\n+       long i6432;\n+       long i6433;\n+       long i6434;\n+       long i6435;\n+       long i6436;\n+       long i6437;\n+       long i6438;\n+       long i6439;\n+       long i6440;\n+       long i6441;\n+       long i6442;\n+       long i6443;\n+       long i6444;\n+       long i6445;\n+       long i6446;\n+       long i6447;\n+       long i6448;\n+       long i6449;\n+       long i6450;\n+       long i6451;\n+       long i6452;\n+       long i6453;\n+       long i6454;\n+       long i6455;\n+       long i6456;\n+       long i6457;\n+       long i6458;\n+       long i6459;\n+       long i6460;\n+       long i6461;\n+       long i6462;\n+       long i6463;\n+       long i6464;\n+       long i6465;\n+       long i6466;\n+       long i6467;\n+       long i6468;\n+       long i6469;\n+       long i6470;\n+       long i6471;\n+       long i6472;\n+       long i6473;\n+       long i6474;\n+       long i6475;\n+       long i6476;\n+       long i6477;\n+       long i6478;\n+       long i6479;\n+       long i6480;\n+       long i6481;\n+       long i6482;\n+       long i6483;\n+       long i6484;\n+       long i6485;\n+       long i6486;\n+       long i6487;\n+       long i6488;\n+       long i6489;\n+       long i6490;\n+       long i6491;\n+       long i6492;\n+       long i6493;\n+       long i6494;\n+       long i6495;\n+       long i6496;\n+       long i6497;\n+       long i6498;\n+       long i6499;\n+       long i6500;\n+       long i6501;\n+       long i6502;\n+       long i6503;\n+       long i6504;\n+       long i6505;\n+       long i6506;\n+       long i6507;\n+       long i6508;\n+       long i6509;\n+       long i6510;\n+       long i6511;\n+       long i6512;\n+       long i6513;\n+       long i6514;\n+       long i6515;\n+       long i6516;\n+       long i6517;\n+       long i6518;\n+       long i6519;\n+       long i6520;\n+       long i6521;\n+       long i6522;\n+       long i6523;\n+       long i6524;\n+       long i6525;\n+       long i6526;\n+       long i6527;\n+       long i6528;\n+       long i6529;\n+       long i6530;\n+       long i6531;\n+       long i6532;\n+       long i6533;\n+       long i6534;\n+       long i6535;\n+       long i6536;\n+       long i6537;\n+       long i6538;\n+       long i6539;\n+       long i6540;\n+       long i6541;\n+       long i6542;\n+       long i6543;\n+       long i6544;\n+       long i6545;\n+       long i6546;\n+       long i6547;\n+       long i6548;\n+       long i6549;\n+       long i6550;\n+       long i6551;\n+       long i6552;\n+       long i6553;\n+       long i6554;\n+       long i6555;\n+       long i6556;\n+       long i6557;\n+       long i6558;\n+       long i6559;\n+       long i6560;\n+       long i6561;\n+       long i6562;\n+       long i6563;\n+       long i6564;\n+       long i6565;\n+       long i6566;\n+       long i6567;\n+       long i6568;\n+       long i6569;\n+       long i6570;\n+       long i6571;\n+       long i6572;\n+       long i6573;\n+       long i6574;\n+       long i6575;\n+       long i6576;\n+       long i6577;\n+       long i6578;\n+       long i6579;\n+       long i6580;\n+       long i6581;\n+       long i6582;\n+       long i6583;\n+       long i6584;\n+       long i6585;\n+       long i6586;\n+       long i6587;\n+       long i6588;\n+       long i6589;\n+       long i6590;\n+       long i6591;\n+       long i6592;\n+       long i6593;\n+       long i6594;\n+       long i6595;\n+       long i6596;\n+       long i6597;\n+       long i6598;\n+       long i6599;\n+       long i6600;\n+       long i6601;\n+       long i6602;\n+       long i6603;\n+       long i6604;\n+       long i6605;\n+       long i6606;\n+       long i6607;\n+       long i6608;\n+       long i6609;\n+       long i6610;\n+       long i6611;\n+       long i6612;\n+       long i6613;\n+       long i6614;\n+       long i6615;\n+       long i6616;\n+       long i6617;\n+       long i6618;\n+       long i6619;\n+       long i6620;\n+       long i6621;\n+       long i6622;\n+       long i6623;\n+       long i6624;\n+       long i6625;\n+       long i6626;\n+       long i6627;\n+       long i6628;\n+       long i6629;\n+       long i6630;\n+       long i6631;\n+       long i6632;\n+       long i6633;\n+       long i6634;\n+       long i6635;\n+       long i6636;\n+       long i6637;\n+       long i6638;\n+       long i6639;\n+       long i6640;\n+       long i6641;\n+       long i6642;\n+       long i6643;\n+       long i6644;\n+       long i6645;\n+       long i6646;\n+       long i6647;\n+       long i6648;\n+       long i6649;\n+       long i6650;\n+       long i6651;\n+       long i6652;\n+       long i6653;\n+       long i6654;\n+       long i6655;\n+       long i6656;\n+       long i6657;\n+       long i6658;\n+       long i6659;\n+       long i6660;\n+       long i6661;\n+       long i6662;\n+       long i6663;\n+       long i6664;\n+       long i6665;\n+       long i6666;\n+       long i6667;\n+       long i6668;\n+       long i6669;\n+       long i6670;\n+       long i6671;\n+       long i6672;\n+       long i6673;\n+       long i6674;\n+       long i6675;\n+       long i6676;\n+       long i6677;\n+       long i6678;\n+       long i6679;\n+       long i6680;\n+       long i6681;\n+       long i6682;\n+       long i6683;\n+       long i6684;\n+       long i6685;\n+       long i6686;\n+       long i6687;\n+       long i6688;\n+       long i6689;\n+       long i6690;\n+       long i6691;\n+       long i6692;\n+       long i6693;\n+       long i6694;\n+       long i6695;\n+       long i6696;\n+       long i6697;\n+       long i6698;\n+       long i6699;\n+       long i6700;\n+       long i6701;\n+       long i6702;\n+       long i6703;\n+       long i6704;\n+       long i6705;\n+       long i6706;\n+       long i6707;\n+       long i6708;\n+       long i6709;\n+       long i6710;\n+       long i6711;\n+       long i6712;\n+       long i6713;\n+       long i6714;\n+       long i6715;\n+       long i6716;\n+       long i6717;\n+       long i6718;\n+       long i6719;\n+       long i6720;\n+       long i6721;\n+       long i6722;\n+       long i6723;\n+       long i6724;\n+       long i6725;\n+       long i6726;\n+       long i6727;\n+       long i6728;\n+       long i6729;\n+       long i6730;\n+       long i6731;\n+       long i6732;\n+       long i6733;\n+       long i6734;\n+       long i6735;\n+       long i6736;\n+       long i6737;\n+       long i6738;\n+       long i6739;\n+       long i6740;\n+       long i6741;\n+       long i6742;\n+       long i6743;\n+       long i6744;\n+       long i6745;\n+       long i6746;\n+       long i6747;\n+       long i6748;\n+       long i6749;\n+       long i6750;\n+       long i6751;\n+       long i6752;\n+       long i6753;\n+       long i6754;\n+       long i6755;\n+       long i6756;\n+       long i6757;\n+       long i6758;\n+       long i6759;\n+       long i6760;\n+       long i6761;\n+       long i6762;\n+       long i6763;\n+       long i6764;\n+       long i6765;\n+       long i6766;\n+       long i6767;\n+       long i6768;\n+       long i6769;\n+       long i6770;\n+       long i6771;\n+       long i6772;\n+       long i6773;\n+       long i6774;\n+       long i6775;\n+       long i6776;\n+       long i6777;\n+       long i6778;\n+       long i6779;\n+       long i6780;\n+       long i6781;\n+       long i6782;\n+       long i6783;\n+       long i6784;\n+       long i6785;\n+       long i6786;\n+       long i6787;\n+       long i6788;\n+       long i6789;\n+       long i6790;\n+       long i6791;\n+       long i6792;\n+       long i6793;\n+       long i6794;\n+       long i6795;\n+       long i6796;\n+       long i6797;\n+       long i6798;\n+       long i6799;\n+       long i6800;\n+       long i6801;\n+       long i6802;\n+       long i6803;\n+       long i6804;\n+       long i6805;\n+       long i6806;\n+       long i6807;\n+       long i6808;\n+       long i6809;\n+       long i6810;\n+       long i6811;\n+       long i6812;\n+       long i6813;\n+       long i6814;\n+       long i6815;\n+       long i6816;\n+       long i6817;\n+       long i6818;\n+       long i6819;\n+       long i6820;\n+       long i6821;\n+       long i6822;\n+       long i6823;\n+       long i6824;\n+       long i6825;\n+       long i6826;\n+       long i6827;\n+       long i6828;\n+       long i6829;\n+       long i6830;\n+       long i6831;\n+       long i6832;\n+       long i6833;\n+       long i6834;\n+       long i6835;\n+       long i6836;\n+       long i6837;\n+       long i6838;\n+       long i6839;\n+       long i6840;\n+       long i6841;\n+       long i6842;\n+       long i6843;\n+       long i6844;\n+       long i6845;\n+       long i6846;\n+       long i6847;\n+       long i6848;\n+       long i6849;\n+       long i6850;\n+       long i6851;\n+       long i6852;\n+       long i6853;\n+       long i6854;\n+       long i6855;\n+       long i6856;\n+       long i6857;\n+       long i6858;\n+       long i6859;\n+       long i6860;\n+       long i6861;\n+       long i6862;\n+       long i6863;\n+       long i6864;\n+       long i6865;\n+       long i6866;\n+       long i6867;\n+       long i6868;\n+       long i6869;\n+       long i6870;\n+       long i6871;\n+       long i6872;\n+       long i6873;\n+       long i6874;\n+       long i6875;\n+       long i6876;\n+       long i6877;\n+       long i6878;\n+       long i6879;\n+       long i6880;\n+       long i6881;\n+       long i6882;\n+       long i6883;\n+       long i6884;\n+       long i6885;\n+       long i6886;\n+       long i6887;\n+       long i6888;\n+       long i6889;\n+       long i6890;\n+       long i6891;\n+       long i6892;\n+       long i6893;\n+       long i6894;\n+       long i6895;\n+       long i6896;\n+       long i6897;\n+       long i6898;\n+       long i6899;\n+       long i6900;\n+       long i6901;\n+       long i6902;\n+       long i6903;\n+       long i6904;\n+       long i6905;\n+       long i6906;\n+       long i6907;\n+       long i6908;\n+       long i6909;\n+       long i6910;\n+       long i6911;\n+       long i6912;\n+       long i6913;\n+       long i6914;\n+       long i6915;\n+       long i6916;\n+       long i6917;\n+       long i6918;\n+       long i6919;\n+       long i6920;\n+       long i6921;\n+       long i6922;\n+       long i6923;\n+       long i6924;\n+       long i6925;\n+       long i6926;\n+       long i6927;\n+       long i6928;\n+       long i6929;\n+       long i6930;\n+       long i6931;\n+       long i6932;\n+       long i6933;\n+       long i6934;\n+       long i6935;\n+       long i6936;\n+       long i6937;\n+       long i6938;\n+       long i6939;\n+       long i6940;\n+       long i6941;\n+       long i6942;\n+       long i6943;\n+       long i6944;\n+       long i6945;\n+       long i6946;\n+       long i6947;\n+       long i6948;\n+       long i6949;\n+       long i6950;\n+       long i6951;\n+       long i6952;\n+       long i6953;\n+       long i6954;\n+       long i6955;\n+       long i6956;\n+       long i6957;\n+       long i6958;\n+       long i6959;\n+       long i6960;\n+       long i6961;\n+       long i6962;\n+       long i6963;\n+       long i6964;\n+       long i6965;\n+       long i6966;\n+       long i6967;\n+       long i6968;\n+       long i6969;\n+       long i6970;\n+       long i6971;\n+       long i6972;\n+       long i6973;\n+       long i6974;\n+       long i6975;\n+       long i6976;\n+       long i6977;\n+       long i6978;\n+       long i6979;\n+       long i6980;\n+       long i6981;\n+       long i6982;\n+       long i6983;\n+       long i6984;\n+       long i6985;\n+       long i6986;\n+       long i6987;\n+       long i6988;\n+       long i6989;\n+       long i6990;\n+       long i6991;\n+       long i6992;\n+       long i6993;\n+       long i6994;\n+       long i6995;\n+       long i6996;\n+       long i6997;\n+       long i6998;\n+       long i6999;\n+       long i7000;\n+       long i7001;\n+       long i7002;\n+       long i7003;\n+       long i7004;\n+       long i7005;\n+       long i7006;\n+       long i7007;\n+       long i7008;\n+       long i7009;\n+       long i7010;\n+       long i7011;\n+       long i7012;\n+       long i7013;\n+       long i7014;\n+       long i7015;\n+       long i7016;\n+       long i7017;\n+       long i7018;\n+       long i7019;\n+       long i7020;\n+       long i7021;\n+       long i7022;\n+       long i7023;\n+       long i7024;\n+       long i7025;\n+       long i7026;\n+       long i7027;\n+       long i7028;\n+       long i7029;\n+       long i7030;\n+       long i7031;\n+       long i7032;\n+       long i7033;\n+       long i7034;\n+       long i7035;\n+       long i7036;\n+       long i7037;\n+       long i7038;\n+       long i7039;\n+       long i7040;\n+       long i7041;\n+       long i7042;\n+       long i7043;\n+       long i7044;\n+       long i7045;\n+       long i7046;\n+       long i7047;\n+       long i7048;\n+       long i7049;\n+       long i7050;\n+       long i7051;\n+       long i7052;\n+       long i7053;\n+       long i7054;\n+       long i7055;\n+       long i7056;\n+       long i7057;\n+       long i7058;\n+       long i7059;\n+       long i7060;\n+       long i7061;\n+       long i7062;\n+       long i7063;\n+       long i7064;\n+       long i7065;\n+       long i7066;\n+       long i7067;\n+       long i7068;\n+       long i7069;\n+       long i7070;\n+       long i7071;\n+       long i7072;\n+       long i7073;\n+       long i7074;\n+       long i7075;\n+       long i7076;\n+       long i7077;\n+       long i7078;\n+       long i7079;\n+       long i7080;\n+       long i7081;\n+       long i7082;\n+       long i7083;\n+       long i7084;\n+       long i7085;\n+       long i7086;\n+       long i7087;\n+       long i7088;\n+       long i7089;\n+       long i7090;\n+       long i7091;\n+       long i7092;\n+       long i7093;\n+       long i7094;\n+       long i7095;\n+       long i7096;\n+       long i7097;\n+       long i7098;\n+       long i7099;\n+       long i7100;\n+       long i7101;\n+       long i7102;\n+       long i7103;\n+       long i7104;\n+       long i7105;\n+       long i7106;\n+       long i7107;\n+       long i7108;\n+       long i7109;\n+       long i7110;\n+       long i7111;\n+       long i7112;\n+       long i7113;\n+       long i7114;\n+       long i7115;\n+       long i7116;\n+       long i7117;\n+       long i7118;\n+       long i7119;\n+       long i7120;\n+       long i7121;\n+       long i7122;\n+       long i7123;\n+       long i7124;\n+       long i7125;\n+       long i7126;\n+       long i7127;\n+       long i7128;\n+       long i7129;\n+       long i7130;\n+       long i7131;\n+       long i7132;\n+       long i7133;\n+       long i7134;\n+       long i7135;\n+       long i7136;\n+       long i7137;\n+       long i7138;\n+       long i7139;\n+       long i7140;\n+       long i7141;\n+       long i7142;\n+       long i7143;\n+       long i7144;\n+       long i7145;\n+       long i7146;\n+       long i7147;\n+       long i7148;\n+       long i7149;\n+       long i7150;\n+       long i7151;\n+       long i7152;\n+       long i7153;\n+       long i7154;\n+       long i7155;\n+       long i7156;\n+       long i7157;\n+       long i7158;\n+       long i7159;\n+       long i7160;\n+       long i7161;\n+       long i7162;\n+       long i7163;\n+       long i7164;\n+       long i7165;\n+       long i7166;\n+       long i7167;\n+       long i7168;\n+       long i7169;\n+       long i7170;\n+       long i7171;\n+       long i7172;\n+       long i7173;\n+       long i7174;\n+       long i7175;\n+       long i7176;\n+       long i7177;\n+       long i7178;\n+       long i7179;\n+       long i7180;\n+       long i7181;\n+       long i7182;\n+       long i7183;\n+       long i7184;\n+       long i7185;\n+       long i7186;\n+       long i7187;\n+       long i7188;\n+       long i7189;\n+       long i7190;\n+       long i7191;\n+       long i7192;\n+       long i7193;\n+       long i7194;\n+       long i7195;\n+       long i7196;\n+       long i7197;\n+       long i7198;\n+       long i7199;\n+       long i7200;\n+       long i7201;\n+       long i7202;\n+       long i7203;\n+       long i7204;\n+       long i7205;\n+       long i7206;\n+       long i7207;\n+       long i7208;\n+       long i7209;\n+       long i7210;\n+       long i7211;\n+       long i7212;\n+       long i7213;\n+       long i7214;\n+       long i7215;\n+       long i7216;\n+       long i7217;\n+       long i7218;\n+       long i7219;\n+       long i7220;\n+       long i7221;\n+       long i7222;\n+       long i7223;\n+       long i7224;\n+       long i7225;\n+       long i7226;\n+       long i7227;\n+       long i7228;\n+       long i7229;\n+       long i7230;\n+       long i7231;\n+       long i7232;\n+       long i7233;\n+       long i7234;\n+       long i7235;\n+       long i7236;\n+       long i7237;\n+       long i7238;\n+       long i7239;\n+       long i7240;\n+       long i7241;\n+       long i7242;\n+       long i7243;\n+       long i7244;\n+       long i7245;\n+       long i7246;\n+       long i7247;\n+       long i7248;\n+       long i7249;\n+       long i7250;\n+       long i7251;\n+       long i7252;\n+       long i7253;\n+       long i7254;\n+       long i7255;\n+       long i7256;\n+       long i7257;\n+       long i7258;\n+       long i7259;\n+       long i7260;\n+       long i7261;\n+       long i7262;\n+       long i7263;\n+       long i7264;\n+       long i7265;\n+       long i7266;\n+       long i7267;\n+       long i7268;\n+       long i7269;\n+       long i7270;\n+       long i7271;\n+       long i7272;\n+       long i7273;\n+       long i7274;\n+       long i7275;\n+       long i7276;\n+       long i7277;\n+       long i7278;\n+       long i7279;\n+       long i7280;\n+       long i7281;\n+       long i7282;\n+       long i7283;\n+       long i7284;\n+       long i7285;\n+       long i7286;\n+       long i7287;\n+       long i7288;\n+       long i7289;\n+       long i7290;\n+       long i7291;\n+       long i7292;\n+       long i7293;\n+       long i7294;\n+       long i7295;\n+       long i7296;\n+       long i7297;\n+       long i7298;\n+       long i7299;\n+       long i7300;\n+       long i7301;\n+       long i7302;\n+       long i7303;\n+       long i7304;\n+       long i7305;\n+       long i7306;\n+       long i7307;\n+       long i7308;\n+       long i7309;\n+       long i7310;\n+       long i7311;\n+       long i7312;\n+       long i7313;\n+       long i7314;\n+       long i7315;\n+       long i7316;\n+       long i7317;\n+       long i7318;\n+       long i7319;\n+       long i7320;\n+       long i7321;\n+       long i7322;\n+       long i7323;\n+       long i7324;\n+       long i7325;\n+       long i7326;\n+       long i7327;\n+       long i7328;\n+       long i7329;\n+       long i7330;\n+       long i7331;\n+       long i7332;\n+       long i7333;\n+       long i7334;\n+       long i7335;\n+       long i7336;\n+       long i7337;\n+       long i7338;\n+       long i7339;\n+       long i7340;\n+       long i7341;\n+       long i7342;\n+       long i7343;\n+       long i7344;\n+       long i7345;\n+       long i7346;\n+       long i7347;\n+       long i7348;\n+       long i7349;\n+       long i7350;\n+       long i7351;\n+       long i7352;\n+       long i7353;\n+       long i7354;\n+       long i7355;\n+       long i7356;\n+       long i7357;\n+       long i7358;\n+       long i7359;\n+       long i7360;\n+       long i7361;\n+       long i7362;\n+       long i7363;\n+       long i7364;\n+       long i7365;\n+       long i7366;\n+       long i7367;\n+       long i7368;\n+       long i7369;\n+       long i7370;\n+       long i7371;\n+       long i7372;\n+       long i7373;\n+       long i7374;\n+       long i7375;\n+       long i7376;\n+       long i7377;\n+       long i7378;\n+       long i7379;\n+       long i7380;\n+       long i7381;\n+       long i7382;\n+       long i7383;\n+       long i7384;\n+       long i7385;\n+       long i7386;\n+       long i7387;\n+       long i7388;\n+       long i7389;\n+       long i7390;\n+       long i7391;\n+       long i7392;\n+       long i7393;\n+       long i7394;\n+       long i7395;\n+       long i7396;\n+       long i7397;\n+       long i7398;\n+       long i7399;\n+       long i7400;\n+       long i7401;\n+       long i7402;\n+       long i7403;\n+       long i7404;\n+       long i7405;\n+       long i7406;\n+       long i7407;\n+       long i7408;\n+       long i7409;\n+       long i7410;\n+       long i7411;\n+       long i7412;\n+       long i7413;\n+       long i7414;\n+       long i7415;\n+       long i7416;\n+       long i7417;\n+       long i7418;\n+       long i7419;\n+       long i7420;\n+       long i7421;\n+       long i7422;\n+       long i7423;\n+       long i7424;\n+       long i7425;\n+       long i7426;\n+       long i7427;\n+       long i7428;\n+       long i7429;\n+       long i7430;\n+       long i7431;\n+       long i7432;\n+       long i7433;\n+       long i7434;\n+       long i7435;\n+       long i7436;\n+       long i7437;\n+       long i7438;\n+       long i7439;\n+       long i7440;\n+       long i7441;\n+       long i7442;\n+       long i7443;\n+       long i7444;\n+       long i7445;\n+       long i7446;\n+       long i7447;\n+       long i7448;\n+       long i7449;\n+       long i7450;\n+       long i7451;\n+       long i7452;\n+       long i7453;\n+       long i7454;\n+       long i7455;\n+       long i7456;\n+       long i7457;\n+       long i7458;\n+       long i7459;\n+       long i7460;\n+       long i7461;\n+       long i7462;\n+       long i7463;\n+       long i7464;\n+       long i7465;\n+       long i7466;\n+       long i7467;\n+       long i7468;\n+       long i7469;\n+       long i7470;\n+       long i7471;\n+       long i7472;\n+       long i7473;\n+       long i7474;\n+       long i7475;\n+       long i7476;\n+       long i7477;\n+       long i7478;\n+       long i7479;\n+       long i7480;\n+       long i7481;\n+       long i7482;\n+       long i7483;\n+       long i7484;\n+       long i7485;\n+       long i7486;\n+       long i7487;\n+       long i7488;\n+       long i7489;\n+       long i7490;\n+       long i7491;\n+       long i7492;\n+       long i7493;\n+       long i7494;\n+       long i7495;\n+       long i7496;\n+       long i7497;\n+       long i7498;\n+       long i7499;\n+       long i7500;\n+       long i7501;\n+       long i7502;\n+       long i7503;\n+       long i7504;\n+       long i7505;\n+       long i7506;\n+       long i7507;\n+       long i7508;\n+       long i7509;\n+       long i7510;\n+       long i7511;\n+       long i7512;\n+       long i7513;\n+       long i7514;\n+       long i7515;\n+       long i7516;\n+       long i7517;\n+       long i7518;\n+       long i7519;\n+       long i7520;\n+       long i7521;\n+       long i7522;\n+       long i7523;\n+       long i7524;\n+       long i7525;\n+       long i7526;\n+       long i7527;\n+       long i7528;\n+       long i7529;\n+       long i7530;\n+       long i7531;\n+       long i7532;\n+       long i7533;\n+       long i7534;\n+       long i7535;\n+       long i7536;\n+       long i7537;\n+       long i7538;\n+       long i7539;\n+       long i7540;\n+       long i7541;\n+       long i7542;\n+       long i7543;\n+       long i7544;\n+       long i7545;\n+       long i7546;\n+       long i7547;\n+       long i7548;\n+       long i7549;\n+       long i7550;\n+       long i7551;\n+       long i7552;\n+       long i7553;\n+       long i7554;\n+       long i7555;\n+       long i7556;\n+       long i7557;\n+       long i7558;\n+       long i7559;\n+       long i7560;\n+       long i7561;\n+       long i7562;\n+       long i7563;\n+       long i7564;\n+       long i7565;\n+       long i7566;\n+       long i7567;\n+       long i7568;\n+       long i7569;\n+       long i7570;\n+       long i7571;\n+       long i7572;\n+       long i7573;\n+       long i7574;\n+       long i7575;\n+       long i7576;\n+       long i7577;\n+       long i7578;\n+       long i7579;\n+       long i7580;\n+       long i7581;\n+       long i7582;\n+       long i7583;\n+       long i7584;\n+       long i7585;\n+       long i7586;\n+       long i7587;\n+       long i7588;\n+       long i7589;\n+       long i7590;\n+       long i7591;\n+       long i7592;\n+       long i7593;\n+       long i7594;\n+       long i7595;\n+       long i7596;\n+       long i7597;\n+       long i7598;\n+       long i7599;\n+       long i7600;\n+       long i7601;\n+       long i7602;\n+       long i7603;\n+       long i7604;\n+       long i7605;\n+       long i7606;\n+       long i7607;\n+       long i7608;\n+       long i7609;\n+       long i7610;\n+       long i7611;\n+       long i7612;\n+       long i7613;\n+       long i7614;\n+       long i7615;\n+       long i7616;\n+       long i7617;\n+       long i7618;\n+       long i7619;\n+       long i7620;\n+       long i7621;\n+       long i7622;\n+       long i7623;\n+       long i7624;\n+       long i7625;\n+       long i7626;\n+       long i7627;\n+       long i7628;\n+       long i7629;\n+       long i7630;\n+       long i7631;\n+       long i7632;\n+       long i7633;\n+       long i7634;\n+       long i7635;\n+       long i7636;\n+       long i7637;\n+       long i7638;\n+       long i7639;\n+       long i7640;\n+       long i7641;\n+       long i7642;\n+       long i7643;\n+       long i7644;\n+       long i7645;\n+       long i7646;\n+       long i7647;\n+       long i7648;\n+       long i7649;\n+       long i7650;\n+       long i7651;\n+       long i7652;\n+       long i7653;\n+       long i7654;\n+       long i7655;\n+       long i7656;\n+       long i7657;\n+       long i7658;\n+       long i7659;\n+       long i7660;\n+       long i7661;\n+       long i7662;\n+       long i7663;\n+       long i7664;\n+       long i7665;\n+       long i7666;\n+       long i7667;\n+       long i7668;\n+       long i7669;\n+       long i7670;\n+       long i7671;\n+       long i7672;\n+       long i7673;\n+       long i7674;\n+       long i7675;\n+       long i7676;\n+       long i7677;\n+       long i7678;\n+       long i7679;\n+       long i7680;\n+       long i7681;\n+       long i7682;\n+       long i7683;\n+       long i7684;\n+       long i7685;\n+       long i7686;\n+       long i7687;\n+       long i7688;\n+       long i7689;\n+       long i7690;\n+       long i7691;\n+       long i7692;\n+       long i7693;\n+       long i7694;\n+       long i7695;\n+       long i7696;\n+       long i7697;\n+       long i7698;\n+       long i7699;\n+       long i7700;\n+       long i7701;\n+       long i7702;\n+       long i7703;\n+       long i7704;\n+       long i7705;\n+       long i7706;\n+       long i7707;\n+       long i7708;\n+       long i7709;\n+       long i7710;\n+       long i7711;\n+       long i7712;\n+       long i7713;\n+       long i7714;\n+       long i7715;\n+       long i7716;\n+       long i7717;\n+       long i7718;\n+       long i7719;\n+       long i7720;\n+       long i7721;\n+       long i7722;\n+       long i7723;\n+       long i7724;\n+       long i7725;\n+       long i7726;\n+       long i7727;\n+       long i7728;\n+       long i7729;\n+       long i7730;\n+       long i7731;\n+       long i7732;\n+       long i7733;\n+       long i7734;\n+       long i7735;\n+       long i7736;\n+       long i7737;\n+       long i7738;\n+       long i7739;\n+       long i7740;\n+       long i7741;\n+       long i7742;\n+       long i7743;\n+       long i7744;\n+       long i7745;\n+       long i7746;\n+       long i7747;\n+       long i7748;\n+       long i7749;\n+       long i7750;\n+       long i7751;\n+       long i7752;\n+       long i7753;\n+       long i7754;\n+       long i7755;\n+       long i7756;\n+       long i7757;\n+       long i7758;\n+       long i7759;\n+       long i7760;\n+       long i7761;\n+       long i7762;\n+       long i7763;\n+       long i7764;\n+       long i7765;\n+       long i7766;\n+       long i7767;\n+       long i7768;\n+       long i7769;\n+       long i7770;\n+       long i7771;\n+       long i7772;\n+       long i7773;\n+       long i7774;\n+       long i7775;\n+       long i7776;\n+       long i7777;\n+       long i7778;\n+       long i7779;\n+       long i7780;\n+       long i7781;\n+       long i7782;\n+       long i7783;\n+       long i7784;\n+       long i7785;\n+       long i7786;\n+       long i7787;\n+       long i7788;\n+       long i7789;\n+       long i7790;\n+       long i7791;\n+       long i7792;\n+       long i7793;\n+       long i7794;\n+       long i7795;\n+       long i7796;\n+       long i7797;\n+       long i7798;\n+       long i7799;\n+       long i7800;\n+       long i7801;\n+       long i7802;\n+       long i7803;\n+       long i7804;\n+       long i7805;\n+       long i7806;\n+       long i7807;\n+       long i7808;\n+       long i7809;\n+       long i7810;\n+       long i7811;\n+       long i7812;\n+       long i7813;\n+       long i7814;\n+       long i7815;\n+       long i7816;\n+       long i7817;\n+       long i7818;\n+       long i7819;\n+       long i7820;\n+       long i7821;\n+       long i7822;\n+       long i7823;\n+       long i7824;\n+       long i7825;\n+       long i7826;\n+       long i7827;\n+       long i7828;\n+       long i7829;\n+       long i7830;\n+       long i7831;\n+       long i7832;\n+       long i7833;\n+       long i7834;\n+       long i7835;\n+       long i7836;\n+       long i7837;\n+       long i7838;\n+       long i7839;\n+       long i7840;\n+       long i7841;\n+       long i7842;\n+       long i7843;\n+       long i7844;\n+       long i7845;\n+       long i7846;\n+       long i7847;\n+       long i7848;\n+       long i7849;\n+       long i7850;\n+       long i7851;\n+       long i7852;\n+       long i7853;\n+       long i7854;\n+       long i7855;\n+       long i7856;\n+       long i7857;\n+       long i7858;\n+       long i7859;\n+       long i7860;\n+       long i7861;\n+       long i7862;\n+       long i7863;\n+       long i7864;\n+       long i7865;\n+       long i7866;\n+       long i7867;\n+       long i7868;\n+       long i7869;\n+       long i7870;\n+       long i7871;\n+       long i7872;\n+       long i7873;\n+       long i7874;\n+       long i7875;\n+       long i7876;\n+       long i7877;\n+       long i7878;\n+       long i7879;\n+       long i7880;\n+       long i7881;\n+       long i7882;\n+       long i7883;\n+       long i7884;\n+       long i7885;\n+       long i7886;\n+       long i7887;\n+       long i7888;\n+       long i7889;\n+       long i7890;\n+       long i7891;\n+       long i7892;\n+       long i7893;\n+       long i7894;\n+       long i7895;\n+       long i7896;\n+       long i7897;\n+       long i7898;\n+       long i7899;\n+       long i7900;\n+       long i7901;\n+       long i7902;\n+       long i7903;\n+       long i7904;\n+       long i7905;\n+       long i7906;\n+       long i7907;\n+       long i7908;\n+       long i7909;\n+       long i7910;\n+       long i7911;\n+       long i7912;\n+       long i7913;\n+       long i7914;\n+       long i7915;\n+       long i7916;\n+       long i7917;\n+       long i7918;\n+       long i7919;\n+       long i7920;\n+       long i7921;\n+       long i7922;\n+       long i7923;\n+       long i7924;\n+       long i7925;\n+       long i7926;\n+       long i7927;\n+       long i7928;\n+       long i7929;\n+       long i7930;\n+       long i7931;\n+       long i7932;\n+       long i7933;\n+       long i7934;\n+       long i7935;\n+       long i7936;\n+       long i7937;\n+       long i7938;\n+       long i7939;\n+       long i7940;\n+       long i7941;\n+       long i7942;\n+       long i7943;\n+       long i7944;\n+       long i7945;\n+       long i7946;\n+       long i7947;\n+       long i7948;\n+       long i7949;\n+       long i7950;\n+       long i7951;\n+       long i7952;\n+       long i7953;\n+       long i7954;\n+       long i7955;\n+       long i7956;\n+       long i7957;\n+       long i7958;\n+       long i7959;\n+       long i7960;\n+       long i7961;\n+       long i7962;\n+       long i7963;\n+       long i7964;\n+       long i7965;\n+       long i7966;\n+       long i7967;\n+       long i7968;\n+       long i7969;\n+       long i7970;\n+       long i7971;\n+       long i7972;\n+       long i7973;\n+       long i7974;\n+       long i7975;\n+       long i7976;\n+       long i7977;\n+       long i7978;\n+       long i7979;\n+       long i7980;\n+       long i7981;\n+       long i7982;\n+       long i7983;\n+       long i7984;\n+       long i7985;\n+       long i7986;\n+       long i7987;\n+       long i7988;\n+       long i7989;\n+       long i7990;\n+       long i7991;\n+       long i7992;\n+       long i7993;\n+       long i7994;\n+       long i7995;\n+       long i7996;\n+       long i7997;\n+       long i7998;\n+       long i7999;\n+       long i8000;\n+       long i8001;\n+       long i8002;\n+       long i8003;\n+       long i8004;\n+       long i8005;\n+       long i8006;\n+       long i8007;\n+       long i8008;\n+       long i8009;\n+       long i8010;\n+       long i8011;\n+       long i8012;\n+       long i8013;\n+       long i8014;\n+       long i8015;\n+       long i8016;\n+       long i8017;\n+       long i8018;\n+       long i8019;\n+       long i8020;\n+       long i8021;\n+       long i8022;\n+       long i8023;\n+       long i8024;\n+       long i8025;\n+       long i8026;\n+       long i8027;\n+       long i8028;\n+       long i8029;\n+       long i8030;\n+       long i8031;\n+       long i8032;\n+       long i8033;\n+       long i8034;\n+       long i8035;\n+       long i8036;\n+       long i8037;\n+       long i8038;\n+       long i8039;\n+       long i8040;\n+       long i8041;\n+       long i8042;\n+       long i8043;\n+       long i8044;\n+       long i8045;\n+       long i8046;\n+       long i8047;\n+       long i8048;\n+       long i8049;\n+       long i8050;\n+       long i8051;\n+       long i8052;\n+       long i8053;\n+       long i8054;\n+       long i8055;\n+       long i8056;\n+       long i8057;\n+       long i8058;\n+       long i8059;\n+       long i8060;\n+       long i8061;\n+       long i8062;\n+       long i8063;\n+       long i8064;\n+       long i8065;\n+       long i8066;\n+       long i8067;\n+       long i8068;\n+       long i8069;\n+       long i8070;\n+       long i8071;\n+       long i8072;\n+       long i8073;\n+       long i8074;\n+       long i8075;\n+       long i8076;\n+       long i8077;\n+       long i8078;\n+       long i8079;\n+       long i8080;\n+       long i8081;\n+       long i8082;\n+       long i8083;\n+       long i8084;\n+       long i8085;\n+       long i8086;\n+       long i8087;\n+       long i8088;\n+       long i8089;\n+       long i8090;\n+       long i8091;\n+       long i8092;\n+       long i8093;\n+       long i8094;\n+       long i8095;\n+       long i8096;\n+       long i8097;\n+       long i8098;\n+       long i8099;\n+       long i8100;\n+       long i8101;\n+       long i8102;\n+       long i8103;\n+       long i8104;\n+       long i8105;\n+       long i8106;\n+       long i8107;\n+       long i8108;\n+       long i8109;\n+       long i8110;\n+       long i8111;\n+       long i8112;\n+       long i8113;\n+       long i8114;\n+       long i8115;\n+       long i8116;\n+       long i8117;\n+       long i8118;\n+       long i8119;\n+       long i8120;\n+       long i8121;\n+       long i8122;\n+       long i8123;\n+       long i8124;\n+       long i8125;\n+       long i8126;\n+       long i8127;\n+       long i8128;\n+       long i8129;\n+       long i8130;\n+       long i8131;\n+       long i8132;\n+       long i8133;\n+       long i8134;\n+       long i8135;\n+       long i8136;\n+       long i8137;\n+       long i8138;\n+       long i8139;\n+       long i8140;\n+       long i8141;\n+       long i8142;\n+       long i8143;\n+       long i8144;\n+       long i8145;\n+       long i8146;\n+       long i8147;\n+       long i8148;\n+       long i8149;\n+       long i8150;\n+       long i8151;\n+       long i8152;\n+       long i8153;\n+       long i8154;\n+       long i8155;\n+       long i8156;\n+       long i8157;\n+       long i8158;\n+       long i8159;\n+       long i8160;\n+       long i8161;\n+       long i8162;\n+       long i8163;\n+       long i8164;\n+       long i8165;\n+       long i8166;\n+       long i8167;\n+       long i8168;\n+       long i8169;\n+       long i8170;\n+       long i8171;\n+       long i8172;\n+       long i8173;\n+       long i8174;\n+       long i8175;\n+       long i8176;\n+       long i8177;\n+       long i8178;\n+       long i8179;\n+       long i8180;\n+       long i8181;\n+       long i8182;\n+       long i8183;\n+       long i8184;\n+       long i8185;\n+       long i8186;\n+       long i8187;\n+       long i8188;\n+       long i8189;\n+       long i8190;\n+       long i8191;\n+       long i8192;\n+       long i8193;\n+       long i8194;\n+       long i8195;\n+       long i8196;\n+       long i8197;\n+       long i8198;\n+       long i8199;\n+       long i8200;\n+       long i8201;\n+       long i8202;\n+       long i8203;\n+       long i8204;\n+       long i8205;\n+       long i8206;\n+       long i8207;\n+       long i8208;\n+       long i8209;\n+       long i8210;\n+       long i8211;\n+       long i8212;\n+       long i8213;\n+       long i8214;\n+       long i8215;\n+       long i8216;\n+       long i8217;\n+       long i8218;\n+       long i8219;\n+       long i8220;\n+       long i8221;\n+       long i8222;\n+       long i8223;\n+       long i8224;\n+       long i8225;\n+       long i8226;\n+       long i8227;\n+       long i8228;\n+       long i8229;\n+       long i8230;\n+       long i8231;\n+       long i8232;\n+       long i8233;\n+       long i8234;\n+       long i8235;\n+       long i8236;\n+       long i8237;\n+       long i8238;\n+       long i8239;\n+       long i8240;\n+       long i8241;\n+       long i8242;\n+       long i8243;\n+       long i8244;\n+       long i8245;\n+       long i8246;\n+       long i8247;\n+       long i8248;\n+       long i8249;\n+       long i8250;\n+       long i8251;\n+       long i8252;\n+       long i8253;\n+       long i8254;\n+       long i8255;\n+       long i8256;\n+       long i8257;\n+       long i8258;\n+       long i8259;\n+       long i8260;\n+       long i8261;\n+       long i8262;\n+       long i8263;\n+       long i8264;\n+       long i8265;\n+       long i8266;\n+       long i8267;\n+       long i8268;\n+       long i8269;\n+       long i8270;\n+       long i8271;\n+       long i8272;\n+       long i8273;\n+       long i8274;\n+       long i8275;\n+       long i8276;\n+       long i8277;\n+       long i8278;\n+       long i8279;\n+       long i8280;\n+       long i8281;\n+       long i8282;\n+       long i8283;\n+       long i8284;\n+       long i8285;\n+       long i8286;\n+       long i8287;\n+       long i8288;\n+       long i8289;\n+       long i8290;\n+       long i8291;\n+       long i8292;\n+       long i8293;\n+       long i8294;\n+       long i8295;\n+       long i8296;\n+       long i8297;\n+       long i8298;\n+       long i8299;\n+       long i8300;\n+       long i8301;\n+       long i8302;\n+       long i8303;\n+       long i8304;\n+       long i8305;\n+       long i8306;\n+       long i8307;\n+       long i8308;\n+       long i8309;\n+       long i8310;\n+       long i8311;\n+       long i8312;\n+       long i8313;\n+       long i8314;\n+       long i8315;\n+       long i8316;\n+       long i8317;\n+       long i8318;\n+       long i8319;\n+       long i8320;\n+       long i8321;\n+       long i8322;\n+       long i8323;\n+       long i8324;\n+       long i8325;\n+       long i8326;\n+       long i8327;\n+       long i8328;\n+       long i8329;\n+       long i8330;\n+       long i8331;\n+       long i8332;\n+       long i8333;\n+       long i8334;\n+       long i8335;\n+       long i8336;\n+       long i8337;\n+       long i8338;\n+       long i8339;\n+       long i8340;\n+       long i8341;\n+       long i8342;\n+       long i8343;\n+       long i8344;\n+       long i8345;\n+       long i8346;\n+       long i8347;\n+       long i8348;\n+       long i8349;\n+       long i8350;\n+       long i8351;\n+       long i8352;\n+       long i8353;\n+       long i8354;\n+       long i8355;\n+       long i8356;\n+       long i8357;\n+       long i8358;\n+       long i8359;\n+       long i8360;\n+       long i8361;\n+       long i8362;\n+       long i8363;\n+       long i8364;\n+       long i8365;\n+       long i8366;\n+       long i8367;\n+       long i8368;\n+       long i8369;\n+       long i8370;\n+       long i8371;\n+       long i8372;\n+       long i8373;\n+       long i8374;\n+       long i8375;\n+       long i8376;\n+       long i8377;\n+       long i8378;\n+       long i8379;\n+       long i8380;\n+       long i8381;\n+       long i8382;\n+       long i8383;\n+       long i8384;\n+       long i8385;\n+       long i8386;\n+       long i8387;\n+       long i8388;\n+       long i8389;\n+       long i8390;\n+       long i8391;\n+       long i8392;\n+       long i8393;\n+       long i8394;\n+       long i8395;\n+       long i8396;\n+       long i8397;\n+       long i8398;\n+       long i8399;\n+       long i8400;\n+       long i8401;\n+       long i8402;\n+       long i8403;\n+       long i8404;\n+       long i8405;\n+       long i8406;\n+       long i8407;\n+       long i8408;\n+       long i8409;\n+       long i8410;\n+       long i8411;\n+       long i8412;\n+       long i8413;\n+       long i8414;\n+       long i8415;\n+       long i8416;\n+       long i8417;\n+       long i8418;\n+       long i8419;\n+       long i8420;\n+       long i8421;\n+       long i8422;\n+       long i8423;\n+       long i8424;\n+       long i8425;\n+       long i8426;\n+       long i8427;\n+       long i8428;\n+       long i8429;\n+       long i8430;\n+       long i8431;\n+       long i8432;\n+       long i8433;\n+       long i8434;\n+       long i8435;\n+       long i8436;\n+       long i8437;\n+       long i8438;\n+       long i8439;\n+       long i8440;\n+       long i8441;\n+       long i8442;\n+       long i8443;\n+       long i8444;\n+       long i8445;\n+       long i8446;\n+       long i8447;\n+       long i8448;\n+       long i8449;\n+       long i8450;\n+       long i8451;\n+       long i8452;\n+       long i8453;\n+       long i8454;\n+       long i8455;\n+       long i8456;\n+       long i8457;\n+       long i8458;\n+       long i8459;\n+       long i8460;\n+       long i8461;\n+       long i8462;\n+       long i8463;\n+       long i8464;\n+       long i8465;\n+       long i8466;\n+       long i8467;\n+       long i8468;\n+       long i8469;\n+       long i8470;\n+       long i8471;\n+       long i8472;\n+       long i8473;\n+       long i8474;\n+       long i8475;\n+       long i8476;\n+       long i8477;\n+       long i8478;\n+       long i8479;\n+       long i8480;\n+       long i8481;\n+       long i8482;\n+       long i8483;\n+       long i8484;\n+       long i8485;\n+       long i8486;\n+       long i8487;\n+       long i8488;\n+       long i8489;\n+       long i8490;\n+       long i8491;\n+       long i8492;\n+       long i8493;\n+       long i8494;\n+       long i8495;\n+       long i8496;\n+       long i8497;\n+       long i8498;\n+       long i8499;\n+       long i8500;\n+       long i8501;\n+       long i8502;\n+       long i8503;\n+       long i8504;\n+       long i8505;\n+       long i8506;\n+       long i8507;\n+       long i8508;\n+       long i8509;\n+       long i8510;\n+       long i8511;\n+       long i8512;\n+       long i8513;\n+       long i8514;\n+       long i8515;\n+       long i8516;\n+       long i8517;\n+       long i8518;\n+       long i8519;\n+       long i8520;\n+       long i8521;\n+       long i8522;\n+       long i8523;\n+       long i8524;\n+       long i8525;\n+       long i8526;\n+       long i8527;\n+       long i8528;\n+       long i8529;\n+       long i8530;\n+       long i8531;\n+       long i8532;\n+       long i8533;\n+       long i8534;\n+       long i8535;\n+       long i8536;\n+       long i8537;\n+       long i8538;\n+       long i8539;\n+       long i8540;\n+       long i8541;\n+       long i8542;\n+       long i8543;\n+       long i8544;\n+       long i8545;\n+       long i8546;\n+       long i8547;\n+       long i8548;\n+       long i8549;\n+       long i8550;\n+       long i8551;\n+       long i8552;\n+       long i8553;\n+       long i8554;\n+       long i8555;\n+       long i8556;\n+       long i8557;\n+       long i8558;\n+       long i8559;\n+       long i8560;\n+       long i8561;\n+       long i8562;\n+       long i8563;\n+       long i8564;\n+       long i8565;\n+       long i8566;\n+       long i8567;\n+       long i8568;\n+       long i8569;\n+       long i8570;\n+       long i8571;\n+       long i8572;\n+       long i8573;\n+       long i8574;\n+       long i8575;\n+       long i8576;\n+       long i8577;\n+       long i8578;\n+       long i8579;\n+       long i8580;\n+       long i8581;\n+       long i8582;\n+       long i8583;\n+       long i8584;\n+       long i8585;\n+       long i8586;\n+       long i8587;\n+       long i8588;\n+       long i8589;\n+       long i8590;\n+       long i8591;\n+       long i8592;\n+       long i8593;\n+       long i8594;\n+       long i8595;\n+       long i8596;\n+       long i8597;\n+       long i8598;\n+       long i8599;\n+       long i8600;\n+       long i8601;\n+       long i8602;\n+       long i8603;\n+       long i8604;\n+       long i8605;\n+       long i8606;\n+       long i8607;\n+       long i8608;\n+       long i8609;\n+       long i8610;\n+       long i8611;\n+       long i8612;\n+       long i8613;\n+       long i8614;\n+       long i8615;\n+       long i8616;\n+       long i8617;\n+       long i8618;\n+       long i8619;\n+       long i8620;\n+       long i8621;\n+       long i8622;\n+       long i8623;\n+       long i8624;\n+       long i8625;\n+       long i8626;\n+       long i8627;\n+       long i8628;\n+       long i8629;\n+       long i8630;\n+       long i8631;\n+       long i8632;\n+       long i8633;\n+       long i8634;\n+       long i8635;\n+       long i8636;\n+       long i8637;\n+       long i8638;\n+       long i8639;\n+       long i8640;\n+       long i8641;\n+       long i8642;\n+       long i8643;\n+       long i8644;\n+       long i8645;\n+       long i8646;\n+       long i8647;\n+       long i8648;\n+       long i8649;\n+       long i8650;\n+       long i8651;\n+       long i8652;\n+       long i8653;\n+       long i8654;\n+       long i8655;\n+       long i8656;\n+       long i8657;\n+       long i8658;\n+       long i8659;\n+       long i8660;\n+       long i8661;\n+       long i8662;\n+       long i8663;\n+       long i8664;\n+       long i8665;\n+       long i8666;\n+       long i8667;\n+       long i8668;\n+       long i8669;\n+       long i8670;\n+       long i8671;\n+       long i8672;\n+       long i8673;\n+       long i8674;\n+       long i8675;\n+       long i8676;\n+       long i8677;\n+       long i8678;\n+       long i8679;\n+       long i8680;\n+       long i8681;\n+       long i8682;\n+       long i8683;\n+       long i8684;\n+       long i8685;\n+       long i8686;\n+       long i8687;\n+       long i8688;\n+       long i8689;\n+       long i8690;\n+       long i8691;\n+       long i8692;\n+       long i8693;\n+       long i8694;\n+       long i8695;\n+       long i8696;\n+       long i8697;\n+       long i8698;\n+       long i8699;\n+       long i8700;\n+       long i8701;\n+       long i8702;\n+       long i8703;\n+       long i8704;\n+       long i8705;\n+       long i8706;\n+       long i8707;\n+       long i8708;\n+       long i8709;\n+       long i8710;\n+       long i8711;\n+       long i8712;\n+       long i8713;\n+       long i8714;\n+       long i8715;\n+       long i8716;\n+       long i8717;\n+       long i8718;\n+       long i8719;\n+       long i8720;\n+       long i8721;\n+       long i8722;\n+       long i8723;\n+       long i8724;\n+       long i8725;\n+       long i8726;\n+       long i8727;\n+       long i8728;\n+       long i8729;\n+       long i8730;\n+       long i8731;\n+       long i8732;\n+       long i8733;\n+       long i8734;\n+       long i8735;\n+       long i8736;\n+       long i8737;\n+       long i8738;\n+       long i8739;\n+       long i8740;\n+       long i8741;\n+       long i8742;\n+       long i8743;\n+       long i8744;\n+       long i8745;\n+       long i8746;\n+       long i8747;\n+       long i8748;\n+       long i8749;\n+       long i8750;\n+       long i8751;\n+       long i8752;\n+       long i8753;\n+       long i8754;\n+       long i8755;\n+       long i8756;\n+       long i8757;\n+       long i8758;\n+       long i8759;\n+       long i8760;\n+       long i8761;\n+       long i8762;\n+       long i8763;\n+       long i8764;\n+       long i8765;\n+       long i8766;\n+       long i8767;\n+       long i8768;\n+       long i8769;\n+       long i8770;\n+       long i8771;\n+       long i8772;\n+       long i8773;\n+       long i8774;\n+       long i8775;\n+       long i8776;\n+       long i8777;\n+       long i8778;\n+       long i8779;\n+       long i8780;\n+       long i8781;\n+       long i8782;\n+       long i8783;\n+       long i8784;\n+       long i8785;\n+       long i8786;\n+       long i8787;\n+       long i8788;\n+       long i8789;\n+       long i8790;\n+       long i8791;\n+       long i8792;\n+       long i8793;\n+       long i8794;\n+       long i8795;\n+       long i8796;\n+       long i8797;\n+       long i8798;\n+       long i8799;\n+       long i8800;\n+       long i8801;\n+       long i8802;\n+       long i8803;\n+       long i8804;\n+       long i8805;\n+       long i8806;\n+       long i8807;\n+       long i8808;\n+       long i8809;\n+       long i8810;\n+       long i8811;\n+       long i8812;\n+       long i8813;\n+       long i8814;\n+       long i8815;\n+       long i8816;\n+       long i8817;\n+       long i8818;\n+       long i8819;\n+       long i8820;\n+       long i8821;\n+       long i8822;\n+       long i8823;\n+       long i8824;\n+       long i8825;\n+       long i8826;\n+       long i8827;\n+       long i8828;\n+       long i8829;\n+       long i8830;\n+       long i8831;\n+       long i8832;\n+       long i8833;\n+       long i8834;\n+       long i8835;\n+       long i8836;\n+       long i8837;\n+       long i8838;\n+       long i8839;\n+       long i8840;\n+       long i8841;\n+       long i8842;\n+       long i8843;\n+       long i8844;\n+       long i8845;\n+       long i8846;\n+       long i8847;\n+       long i8848;\n+       long i8849;\n+       long i8850;\n+       long i8851;\n+       long i8852;\n+       long i8853;\n+       long i8854;\n+       long i8855;\n+       long i8856;\n+       long i8857;\n+       long i8858;\n+       long i8859;\n+       long i8860;\n+       long i8861;\n+       long i8862;\n+       long i8863;\n+       long i8864;\n+       long i8865;\n+       long i8866;\n+       long i8867;\n+       long i8868;\n+       long i8869;\n+       long i8870;\n+       long i8871;\n+       long i8872;\n+       long i8873;\n+       long i8874;\n+       long i8875;\n+       long i8876;\n+       long i8877;\n+       long i8878;\n+       long i8879;\n+       long i8880;\n+       long i8881;\n+       long i8882;\n+       long i8883;\n+       long i8884;\n+       long i8885;\n+       long i8886;\n+       long i8887;\n+       long i8888;\n+       long i8889;\n+       long i8890;\n+       long i8891;\n+       long i8892;\n+       long i8893;\n+       long i8894;\n+       long i8895;\n+       long i8896;\n+       long i8897;\n+       long i8898;\n+       long i8899;\n+       long i8900;\n+       long i8901;\n+       long i8902;\n+       long i8903;\n+       long i8904;\n+       long i8905;\n+       long i8906;\n+       long i8907;\n+       long i8908;\n+       long i8909;\n+       long i8910;\n+       long i8911;\n+       long i8912;\n+       long i8913;\n+       long i8914;\n+       long i8915;\n+       long i8916;\n+       long i8917;\n+       long i8918;\n+       long i8919;\n+       long i8920;\n+       long i8921;\n+       long i8922;\n+       long i8923;\n+       long i8924;\n+       long i8925;\n+       long i8926;\n+       long i8927;\n+       long i8928;\n+       long i8929;\n+       long i8930;\n+       long i8931;\n+       long i8932;\n+       long i8933;\n+       long i8934;\n+       long i8935;\n+       long i8936;\n+       long i8937;\n+       long i8938;\n+       long i8939;\n+       long i8940;\n+       long i8941;\n+       long i8942;\n+       long i8943;\n+       long i8944;\n+       long i8945;\n+       long i8946;\n+       long i8947;\n+       long i8948;\n+       long i8949;\n+       long i8950;\n+       long i8951;\n+       long i8952;\n+       long i8953;\n+       long i8954;\n+       long i8955;\n+       long i8956;\n+       long i8957;\n+       long i8958;\n+       long i8959;\n+       long i8960;\n+       long i8961;\n+       long i8962;\n+       long i8963;\n+       long i8964;\n+       long i8965;\n+       long i8966;\n+       long i8967;\n+       long i8968;\n+       long i8969;\n+       long i8970;\n+       long i8971;\n+       long i8972;\n+       long i8973;\n+       long i8974;\n+       long i8975;\n+       long i8976;\n+       long i8977;\n+       long i8978;\n+       long i8979;\n+       long i8980;\n+       long i8981;\n+       long i8982;\n+       long i8983;\n+       long i8984;\n+       long i8985;\n+       long i8986;\n+       long i8987;\n+       long i8988;\n+       long i8989;\n+       long i8990;\n+       long i8991;\n+       long i8992;\n+       long i8993;\n+       long i8994;\n+       long i8995;\n+       long i8996;\n+       long i8997;\n+       long i8998;\n+       long i8999;\n+       long i9000;\n+       long i9001;\n+       long i9002;\n+       long i9003;\n+       long i9004;\n+       long i9005;\n+       long i9006;\n+       long i9007;\n+       long i9008;\n+       long i9009;\n+       long i9010;\n+       long i9011;\n+       long i9012;\n+       long i9013;\n+       long i9014;\n+       long i9015;\n+       long i9016;\n+       long i9017;\n+       long i9018;\n+       long i9019;\n+       long i9020;\n+       long i9021;\n+       long i9022;\n+       long i9023;\n+       long i9024;\n+       long i9025;\n+       long i9026;\n+       long i9027;\n+       long i9028;\n+       long i9029;\n+       long i9030;\n+       long i9031;\n+       long i9032;\n+       long i9033;\n+       long i9034;\n+       long i9035;\n+       long i9036;\n+       long i9037;\n+       long i9038;\n+       long i9039;\n+       long i9040;\n+       long i9041;\n+       long i9042;\n+       long i9043;\n+       long i9044;\n+       long i9045;\n+       long i9046;\n+       long i9047;\n+       long i9048;\n+       long i9049;\n+       long i9050;\n+       long i9051;\n+       long i9052;\n+       long i9053;\n+       long i9054;\n+       long i9055;\n+       long i9056;\n+       long i9057;\n+       long i9058;\n+       long i9059;\n+       long i9060;\n+       long i9061;\n+       long i9062;\n+       long i9063;\n+       long i9064;\n+       long i9065;\n+       long i9066;\n+       long i9067;\n+       long i9068;\n+       long i9069;\n+       long i9070;\n+       long i9071;\n+       long i9072;\n+       long i9073;\n+       long i9074;\n+       long i9075;\n+       long i9076;\n+       long i9077;\n+       long i9078;\n+       long i9079;\n+       long i9080;\n+       long i9081;\n+       long i9082;\n+       long i9083;\n+       long i9084;\n+       long i9085;\n+       long i9086;\n+       long i9087;\n+       long i9088;\n+       long i9089;\n+       long i9090;\n+       long i9091;\n+       long i9092;\n+       long i9093;\n+       long i9094;\n+       long i9095;\n+       long i9096;\n+       long i9097;\n+       long i9098;\n+       long i9099;\n+       long i9100;\n+       long i9101;\n+       long i9102;\n+       long i9103;\n+       long i9104;\n+       long i9105;\n+       long i9106;\n+       long i9107;\n+       long i9108;\n+       long i9109;\n+       long i9110;\n+       long i9111;\n+       long i9112;\n+       long i9113;\n+       long i9114;\n+       long i9115;\n+       long i9116;\n+       long i9117;\n+       long i9118;\n+       long i9119;\n+       long i9120;\n+       long i9121;\n+       long i9122;\n+       long i9123;\n+       long i9124;\n+       long i9125;\n+       long i9126;\n+       long i9127;\n+       long i9128;\n+       long i9129;\n+       long i9130;\n+       long i9131;\n+       long i9132;\n+       long i9133;\n+       long i9134;\n+       long i9135;\n+       long i9136;\n+       long i9137;\n+       long i9138;\n+       long i9139;\n+       long i9140;\n+       long i9141;\n+       long i9142;\n+       long i9143;\n+       long i9144;\n+       long i9145;\n+       long i9146;\n+       long i9147;\n+       long i9148;\n+       long i9149;\n+       long i9150;\n+       long i9151;\n+       long i9152;\n+       long i9153;\n+       long i9154;\n+       long i9155;\n+       long i9156;\n+       long i9157;\n+       long i9158;\n+       long i9159;\n+       long i9160;\n+       long i9161;\n+       long i9162;\n+       long i9163;\n+       long i9164;\n+       long i9165;\n+       long i9166;\n+       long i9167;\n+       long i9168;\n+       long i9169;\n+       long i9170;\n+       long i9171;\n+       long i9172;\n+       long i9173;\n+       long i9174;\n+       long i9175;\n+       long i9176;\n+       long i9177;\n+       long i9178;\n+       long i9179;\n+       long i9180;\n+       long i9181;\n+       long i9182;\n+       long i9183;\n+       long i9184;\n+       long i9185;\n+       long i9186;\n+       long i9187;\n+       long i9188;\n+       long i9189;\n+       long i9190;\n+       long i9191;\n+       long i9192;\n+       long i9193;\n+       long i9194;\n+       long i9195;\n+       long i9196;\n+       long i9197;\n+       long i9198;\n+       long i9199;\n+       long i9200;\n+       long i9201;\n+       long i9202;\n+       long i9203;\n+       long i9204;\n+       long i9205;\n+       long i9206;\n+       long i9207;\n+       long i9208;\n+       long i9209;\n+       long i9210;\n+       long i9211;\n+       long i9212;\n+       long i9213;\n+       long i9214;\n+       long i9215;\n+       long i9216;\n+       long i9217;\n+       long i9218;\n+       long i9219;\n+       long i9220;\n+       long i9221;\n+       long i9222;\n+       long i9223;\n+       long i9224;\n+       long i9225;\n+       long i9226;\n+       long i9227;\n+       long i9228;\n+       long i9229;\n+       long i9230;\n+       long i9231;\n+       long i9232;\n+       long i9233;\n+       long i9234;\n+       long i9235;\n+       long i9236;\n+       long i9237;\n+       long i9238;\n+       long i9239;\n+       long i9240;\n+       long i9241;\n+       long i9242;\n+       long i9243;\n+       long i9244;\n+       long i9245;\n+       long i9246;\n+       long i9247;\n+       long i9248;\n+       long i9249;\n+       long i9250;\n+       long i9251;\n+       long i9252;\n+       long i9253;\n+       long i9254;\n+       long i9255;\n+       long i9256;\n+       long i9257;\n+       long i9258;\n+       long i9259;\n+       long i9260;\n+       long i9261;\n+       long i9262;\n+       long i9263;\n+       long i9264;\n+       long i9265;\n+       long i9266;\n+       long i9267;\n+       long i9268;\n+       long i9269;\n+       long i9270;\n+       long i9271;\n+       long i9272;\n+       long i9273;\n+       long i9274;\n+       long i9275;\n+       long i9276;\n+       long i9277;\n+       long i9278;\n+       long i9279;\n+       long i9280;\n+       long i9281;\n+       long i9282;\n+       long i9283;\n+       long i9284;\n+       long i9285;\n+       long i9286;\n+       long i9287;\n+       long i9288;\n+       long i9289;\n+       long i9290;\n+       long i9291;\n+       long i9292;\n+       long i9293;\n+       long i9294;\n+       long i9295;\n+       long i9296;\n+       long i9297;\n+       long i9298;\n+       long i9299;\n+       long i9300;\n+       long i9301;\n+       long i9302;\n+       long i9303;\n+       long i9304;\n+       long i9305;\n+       long i9306;\n+       long i9307;\n+       long i9308;\n+       long i9309;\n+       long i9310;\n+       long i9311;\n+       long i9312;\n+       long i9313;\n+       long i9314;\n+       long i9315;\n+       long i9316;\n+       long i9317;\n+       long i9318;\n+       long i9319;\n+       long i9320;\n+       long i9321;\n+       long i9322;\n+       long i9323;\n+       long i9324;\n+       long i9325;\n+       long i9326;\n+       long i9327;\n+       long i9328;\n+       long i9329;\n+       long i9330;\n+       long i9331;\n+       long i9332;\n+       long i9333;\n+       long i9334;\n+       long i9335;\n+       long i9336;\n+       long i9337;\n+       long i9338;\n+       long i9339;\n+       long i9340;\n+       long i9341;\n+       long i9342;\n+       long i9343;\n+       long i9344;\n+       long i9345;\n+       long i9346;\n+       long i9347;\n+       long i9348;\n+       long i9349;\n+       long i9350;\n+       long i9351;\n+       long i9352;\n+       long i9353;\n+       long i9354;\n+       long i9355;\n+       long i9356;\n+       long i9357;\n+       long i9358;\n+       long i9359;\n+       long i9360;\n+       long i9361;\n+       long i9362;\n+       long i9363;\n+       long i9364;\n+       long i9365;\n+       long i9366;\n+       long i9367;\n+       long i9368;\n+       long i9369;\n+       long i9370;\n+       long i9371;\n+       long i9372;\n+       long i9373;\n+       long i9374;\n+       long i9375;\n+       long i9376;\n+       long i9377;\n+       long i9378;\n+       long i9379;\n+       long i9380;\n+       long i9381;\n+       long i9382;\n+       long i9383;\n+       long i9384;\n+       long i9385;\n+       long i9386;\n+       long i9387;\n+       long i9388;\n+       long i9389;\n+       long i9390;\n+       long i9391;\n+       long i9392;\n+       long i9393;\n+       long i9394;\n+       long i9395;\n+       long i9396;\n+       long i9397;\n+       long i9398;\n+       long i9399;\n+       long i9400;\n+       long i9401;\n+       long i9402;\n+       long i9403;\n+       long i9404;\n+       long i9405;\n+       long i9406;\n+       long i9407;\n+       long i9408;\n+       long i9409;\n+       long i9410;\n+       long i9411;\n+       long i9412;\n+       long i9413;\n+       long i9414;\n+       long i9415;\n+       long i9416;\n+       long i9417;\n+       long i9418;\n+       long i9419;\n+       long i9420;\n+       long i9421;\n+       long i9422;\n+       long i9423;\n+       long i9424;\n+       long i9425;\n+       long i9426;\n+       long i9427;\n+       long i9428;\n+       long i9429;\n+       long i9430;\n+       long i9431;\n+       long i9432;\n+       long i9433;\n+       long i9434;\n+       long i9435;\n+       long i9436;\n+       long i9437;\n+       long i9438;\n+       long i9439;\n+       long i9440;\n+       long i9441;\n+       long i9442;\n+       long i9443;\n+       long i9444;\n+       long i9445;\n+       long i9446;\n+       long i9447;\n+       long i9448;\n+       long i9449;\n+       long i9450;\n+       long i9451;\n+       long i9452;\n+       long i9453;\n+       long i9454;\n+       long i9455;\n+       long i9456;\n+       long i9457;\n+       long i9458;\n+       long i9459;\n+       long i9460;\n+       long i9461;\n+       long i9462;\n+       long i9463;\n+       long i9464;\n+       long i9465;\n+       long i9466;\n+       long i9467;\n+       long i9468;\n+       long i9469;\n+       long i9470;\n+       long i9471;\n+       long i9472;\n+       long i9473;\n+       long i9474;\n+       long i9475;\n+       long i9476;\n+       long i9477;\n+       long i9478;\n+       long i9479;\n+       long i9480;\n+       long i9481;\n+       long i9482;\n+       long i9483;\n+       long i9484;\n+       long i9485;\n+       long i9486;\n+       long i9487;\n+       long i9488;\n+       long i9489;\n+       long i9490;\n+       long i9491;\n+       long i9492;\n+       long i9493;\n+       long i9494;\n+       long i9495;\n+       long i9496;\n+       long i9497;\n+       long i9498;\n+       long i9499;\n+       long i9500;\n+       long i9501;\n+       long i9502;\n+       long i9503;\n+       long i9504;\n+       long i9505;\n+       long i9506;\n+       long i9507;\n+       long i9508;\n+       long i9509;\n+       long i9510;\n+       long i9511;\n+       long i9512;\n+       long i9513;\n+       long i9514;\n+       long i9515;\n+       long i9516;\n+       long i9517;\n+       long i9518;\n+       long i9519;\n+       long i9520;\n+       long i9521;\n+       long i9522;\n+       long i9523;\n+       long i9524;\n+       long i9525;\n+       long i9526;\n+       long i9527;\n+       long i9528;\n+       long i9529;\n+       long i9530;\n+       long i9531;\n+       long i9532;\n+       long i9533;\n+       long i9534;\n+       long i9535;\n+       long i9536;\n+       long i9537;\n+       long i9538;\n+       long i9539;\n+       long i9540;\n+       long i9541;\n+       long i9542;\n+       long i9543;\n+       long i9544;\n+       long i9545;\n+       long i9546;\n+       long i9547;\n+       long i9548;\n+       long i9549;\n+       long i9550;\n+       long i9551;\n+       long i9552;\n+       long i9553;\n+       long i9554;\n+       long i9555;\n+       long i9556;\n+       long i9557;\n+       long i9558;\n+       long i9559;\n+       long i9560;\n+       long i9561;\n+       long i9562;\n+       long i9563;\n+       long i9564;\n+       long i9565;\n+       long i9566;\n+       long i9567;\n+       long i9568;\n+       long i9569;\n+       long i9570;\n+       long i9571;\n+       long i9572;\n+       long i9573;\n+       long i9574;\n+       long i9575;\n+       long i9576;\n+       long i9577;\n+       long i9578;\n+       long i9579;\n+       long i9580;\n+       long i9581;\n+       long i9582;\n+       long i9583;\n+       long i9584;\n+       long i9585;\n+       long i9586;\n+       long i9587;\n+       long i9588;\n+       long i9589;\n+       long i9590;\n+       long i9591;\n+       long i9592;\n+       long i9593;\n+       long i9594;\n+       long i9595;\n+       long i9596;\n+       long i9597;\n+       long i9598;\n+       long i9599;\n+       long i9600;\n+       long i9601;\n+       long i9602;\n+       long i9603;\n+       long i9604;\n+       long i9605;\n+       long i9606;\n+       long i9607;\n+       long i9608;\n+       long i9609;\n+       long i9610;\n+       long i9611;\n+       long i9612;\n+       long i9613;\n+       long i9614;\n+       long i9615;\n+       long i9616;\n+       long i9617;\n+       long i9618;\n+       long i9619;\n+       long i9620;\n+       long i9621;\n+       long i9622;\n+       long i9623;\n+       long i9624;\n+       long i9625;\n+       long i9626;\n+       long i9627;\n+       long i9628;\n+       long i9629;\n+       long i9630;\n+       long i9631;\n+       long i9632;\n+       long i9633;\n+       long i9634;\n+       long i9635;\n+       long i9636;\n+       long i9637;\n+       long i9638;\n+       long i9639;\n+       long i9640;\n+       long i9641;\n+       long i9642;\n+       long i9643;\n+       long i9644;\n+       long i9645;\n+       long i9646;\n+       long i9647;\n+       long i9648;\n+       long i9649;\n+       long i9650;\n+       long i9651;\n+       long i9652;\n+       long i9653;\n+       long i9654;\n+       long i9655;\n+       long i9656;\n+       long i9657;\n+       long i9658;\n+       long i9659;\n+       long i9660;\n+       long i9661;\n+       long i9662;\n+       long i9663;\n+       long i9664;\n+       long i9665;\n+       long i9666;\n+       long i9667;\n+       long i9668;\n+       long i9669;\n+       long i9670;\n+       long i9671;\n+       long i9672;\n+       long i9673;\n+       long i9674;\n+       long i9675;\n+       long i9676;\n+       long i9677;\n+       long i9678;\n+       long i9679;\n+       long i9680;\n+       long i9681;\n+       long i9682;\n+       long i9683;\n+       long i9684;\n+       long i9685;\n+       long i9686;\n+       long i9687;\n+       long i9688;\n+       long i9689;\n+       long i9690;\n+       long i9691;\n+       long i9692;\n+       long i9693;\n+       long i9694;\n+       long i9695;\n+       long i9696;\n+       long i9697;\n+       long i9698;\n+       long i9699;\n+       long i9700;\n+       long i9701;\n+       long i9702;\n+       long i9703;\n+       long i9704;\n+       long i9705;\n+       long i9706;\n+       long i9707;\n+       long i9708;\n+       long i9709;\n+       long i9710;\n+       long i9711;\n+       long i9712;\n+       long i9713;\n+       long i9714;\n+       long i9715;\n+       long i9716;\n+       long i9717;\n+       long i9718;\n+       long i9719;\n+       long i9720;\n+       long i9721;\n+       long i9722;\n+       long i9723;\n+       long i9724;\n+       long i9725;\n+       long i9726;\n+       long i9727;\n+       long i9728;\n+       long i9729;\n+       long i9730;\n+       long i9731;\n+       long i9732;\n+       long i9733;\n+       long i9734;\n+       long i9735;\n+       long i9736;\n+       long i9737;\n+       long i9738;\n+       long i9739;\n+       long i9740;\n+       long i9741;\n+       long i9742;\n+       long i9743;\n+       long i9744;\n+       long i9745;\n+       long i9746;\n+       long i9747;\n+       long i9748;\n+       long i9749;\n+       long i9750;\n+       long i9751;\n+       long i9752;\n+       long i9753;\n+       long i9754;\n+       long i9755;\n+       long i9756;\n+       long i9757;\n+       long i9758;\n+       long i9759;\n+       long i9760;\n+       long i9761;\n+       long i9762;\n+       long i9763;\n+       long i9764;\n+       long i9765;\n+       long i9766;\n+       long i9767;\n+       long i9768;\n+       long i9769;\n+       long i9770;\n+       long i9771;\n+       long i9772;\n+       long i9773;\n+       long i9774;\n+       long i9775;\n+       long i9776;\n+       long i9777;\n+       long i9778;\n+       long i9779;\n+       long i9780;\n+       long i9781;\n+       long i9782;\n+       long i9783;\n+       long i9784;\n+       long i9785;\n+       long i9786;\n+       long i9787;\n+       long i9788;\n+       long i9789;\n+       long i9790;\n+       long i9791;\n+       long i9792;\n+       long i9793;\n+       long i9794;\n+       long i9795;\n+       long i9796;\n+       long i9797;\n+       long i9798;\n+       long i9799;\n+       long i9800;\n+       long i9801;\n+       long i9802;\n+       long i9803;\n+       long i9804;\n+       long i9805;\n+       long i9806;\n+       long i9807;\n+       long i9808;\n+       long i9809;\n+       long i9810;\n+       long i9811;\n+       long i9812;\n+       long i9813;\n+       long i9814;\n+       long i9815;\n+       long i9816;\n+       long i9817;\n+       long i9818;\n+       long i9819;\n+       long i9820;\n+       long i9821;\n+       long i9822;\n+       long i9823;\n+       long i9824;\n+       long i9825;\n+       long i9826;\n+       long i9827;\n+       long i9828;\n+       long i9829;\n+       long i9830;\n+       long i9831;\n+       long i9832;\n+       long i9833;\n+       long i9834;\n+       long i9835;\n+       long i9836;\n+       long i9837;\n+       long i9838;\n+       long i9839;\n+       long i9840;\n+       long i9841;\n+       long i9842;\n+       long i9843;\n+       long i9844;\n+       long i9845;\n+       long i9846;\n+       long i9847;\n+       long i9848;\n+       long i9849;\n+       long i9850;\n+       long i9851;\n+       long i9852;\n+       long i9853;\n+       long i9854;\n+       long i9855;\n+       long i9856;\n+       long i9857;\n+       long i9858;\n+       long i9859;\n+       long i9860;\n+       long i9861;\n+       long i9862;\n+       long i9863;\n+       long i9864;\n+       long i9865;\n+       long i9866;\n+       long i9867;\n+       long i9868;\n+       long i9869;\n+       long i9870;\n+       long i9871;\n+       long i9872;\n+       long i9873;\n+       long i9874;\n+       long i9875;\n+       long i9876;\n+       long i9877;\n+       long i9878;\n+       long i9879;\n+       long i9880;\n+       long i9881;\n+       long i9882;\n+       long i9883;\n+       long i9884;\n+       long i9885;\n+       long i9886;\n+       long i9887;\n+       long i9888;\n+       long i9889;\n+       long i9890;\n+       long i9891;\n+       long i9892;\n+       long i9893;\n+       long i9894;\n+       long i9895;\n+       long i9896;\n+       long i9897;\n+       long i9898;\n+       long i9899;\n+       long i9900;\n+       long i9901;\n+       long i9902;\n+       long i9903;\n+       long i9904;\n+       long i9905;\n+       long i9906;\n+       long i9907;\n+       long i9908;\n+       long i9909;\n+       long i9910;\n+       long i9911;\n+       long i9912;\n+       long i9913;\n+       long i9914;\n+       long i9915;\n+       long i9916;\n+       long i9917;\n+       long i9918;\n+       long i9919;\n+       long i9920;\n+       long i9921;\n+       long i9922;\n+       long i9923;\n+       long i9924;\n+       long i9925;\n+       long i9926;\n+       long i9927;\n+       long i9928;\n+       long i9929;\n+       long i9930;\n+       long i9931;\n+       long i9932;\n+       long i9933;\n+       long i9934;\n+       long i9935;\n+       long i9936;\n+       long i9937;\n+       long i9938;\n+       long i9939;\n+       long i9940;\n+       long i9941;\n+       long i9942;\n+       long i9943;\n+       long i9944;\n+       long i9945;\n+       long i9946;\n+       long i9947;\n+       long i9948;\n+       long i9949;\n+       long i9950;\n+       long i9951;\n+       long i9952;\n+       long i9953;\n+       long i9954;\n+       long i9955;\n+       long i9956;\n+       long i9957;\n+       long i9958;\n+       long i9959;\n+       long i9960;\n+       long i9961;\n+       long i9962;\n+       long i9963;\n+       long i9964;\n+       long i9965;\n+       long i9966;\n+       long i9967;\n+       long i9968;\n+       long i9969;\n+       long i9970;\n+       long i9971;\n+       long i9972;\n+       long i9973;\n+       long i9974;\n+       long i9975;\n+       long i9976;\n+       long i9977;\n+       long i9978;\n+       long i9979;\n+       long i9980;\n+       long i9981;\n+       long i9982;\n+       long i9983;\n+       long i9984;\n+       long i9985;\n+       long i9986;\n+       long i9987;\n+       long i9988;\n+       long i9989;\n+       long i9990;\n+       long i9991;\n+       long i9992;\n+       long i9993;\n+       long i9994;\n+       long i9995;\n+       long i9996;\n+       long i9997;\n+       long i9998;\n+       long i9999;\n+       long i10000;\n+       long i10001;\n+       long i10002;\n+       long i10003;\n+       long i10004;\n+       long i10005;\n+       long i10006;\n+       long i10007;\n+       long i10008;\n+       long i10009;\n+       long i10010;\n+       long i10011;\n+       long i10012;\n+       long i10013;\n+       long i10014;\n+       long i10015;\n+       long i10016;\n+       long i10017;\n+       long i10018;\n+       long i10019;\n+       long i10020;\n+       long i10021;\n+       long i10022;\n+       long i10023;\n+       long i10024;\n+       long i10025;\n+       long i10026;\n+       long i10027;\n+       long i10028;\n+       long i10029;\n+       long i10030;\n+       long i10031;\n+       long i10032;\n+       long i10033;\n+       long i10034;\n+       long i10035;\n+       long i10036;\n+       long i10037;\n+       long i10038;\n+       long i10039;\n+       long i10040;\n+       long i10041;\n+       long i10042;\n+       long i10043;\n+       long i10044;\n+       long i10045;\n+       long i10046;\n+       long i10047;\n+       long i10048;\n+       long i10049;\n+       long i10050;\n+       long i10051;\n+       long i10052;\n+       long i10053;\n+       long i10054;\n+       long i10055;\n+       long i10056;\n+       long i10057;\n+       long i10058;\n+       long i10059;\n+       long i10060;\n+       long i10061;\n+       long i10062;\n+       long i10063;\n+       long i10064;\n+       long i10065;\n+       long i10066;\n+       long i10067;\n+       long i10068;\n+       long i10069;\n+       long i10070;\n+       long i10071;\n+       long i10072;\n+       long i10073;\n+       long i10074;\n+       long i10075;\n+       long i10076;\n+       long i10077;\n+       long i10078;\n+       long i10079;\n+       long i10080;\n+       long i10081;\n+       long i10082;\n+       long i10083;\n+       long i10084;\n+       long i10085;\n+       long i10086;\n+       long i10087;\n+       long i10088;\n+       long i10089;\n+       long i10090;\n+       long i10091;\n+       long i10092;\n+       long i10093;\n+       long i10094;\n+       long i10095;\n+       long i10096;\n+       long i10097;\n+       long i10098;\n+       long i10099;\n+       long i10100;\n+       long i10101;\n+       long i10102;\n+       long i10103;\n+       long i10104;\n+       long i10105;\n+       long i10106;\n+       long i10107;\n+       long i10108;\n+       long i10109;\n+       long i10110;\n+       long i10111;\n+       long i10112;\n+       long i10113;\n+       long i10114;\n+       long i10115;\n+       long i10116;\n+       long i10117;\n+       long i10118;\n+       long i10119;\n+       long i10120;\n+       long i10121;\n+       long i10122;\n+       long i10123;\n+       long i10124;\n+       long i10125;\n+       long i10126;\n+       long i10127;\n+       long i10128;\n+       long i10129;\n+       long i10130;\n+       long i10131;\n+       long i10132;\n+       long i10133;\n+       long i10134;\n+       long i10135;\n+       long i10136;\n+       long i10137;\n+       long i10138;\n+       long i10139;\n+       long i10140;\n+       long i10141;\n+       long i10142;\n+       long i10143;\n+       long i10144;\n+       long i10145;\n+       long i10146;\n+       long i10147;\n+       long i10148;\n+       long i10149;\n+       long i10150;\n+       long i10151;\n+       long i10152;\n+       long i10153;\n+       long i10154;\n+       long i10155;\n+       long i10156;\n+       long i10157;\n+       long i10158;\n+       long i10159;\n+       long i10160;\n+       long i10161;\n+       long i10162;\n+       long i10163;\n+       long i10164;\n+       long i10165;\n+       long i10166;\n+       long i10167;\n+       long i10168;\n+       long i10169;\n+       long i10170;\n+       long i10171;\n+       long i10172;\n+       long i10173;\n+       long i10174;\n+       long i10175;\n+       long i10176;\n+       long i10177;\n+       long i10178;\n+       long i10179;\n+       long i10180;\n+       long i10181;\n+       long i10182;\n+       long i10183;\n+       long i10184;\n+       long i10185;\n+       long i10186;\n+       long i10187;\n+       long i10188;\n+       long i10189;\n+       long i10190;\n+       long i10191;\n+       long i10192;\n+       long i10193;\n+       long i10194;\n+       long i10195;\n+       long i10196;\n+       long i10197;\n+       long i10198;\n+       long i10199;\n+       long i10200;\n+       long i10201;\n+       long i10202;\n+       long i10203;\n+       long i10204;\n+       long i10205;\n+       long i10206;\n+       long i10207;\n+       long i10208;\n+       long i10209;\n+       long i10210;\n+       long i10211;\n+       long i10212;\n+       long i10213;\n+       long i10214;\n+       long i10215;\n+       long i10216;\n+       long i10217;\n+       long i10218;\n+       long i10219;\n+       long i10220;\n+       long i10221;\n+       long i10222;\n+       long i10223;\n+       long i10224;\n+       long i10225;\n+       long i10226;\n+       long i10227;\n+       long i10228;\n+       long i10229;\n+       long i10230;\n+       long i10231;\n+       long i10232;\n+       long i10233;\n+       long i10234;\n+       long i10235;\n+       long i10236;\n+       long i10237;\n+       long i10238;\n+       long i10239;\n+       long i10240;\n+       long i10241;\n+       long i10242;\n+       long i10243;\n+       long i10244;\n+       long i10245;\n+       long i10246;\n+       long i10247;\n+       long i10248;\n+       long i10249;\n+       long i10250;\n+       long i10251;\n+       long i10252;\n+       long i10253;\n+       long i10254;\n+       long i10255;\n+       long i10256;\n+       long i10257;\n+       long i10258;\n+       long i10259;\n+       long i10260;\n+       long i10261;\n+       long i10262;\n+       long i10263;\n+       long i10264;\n+       long i10265;\n+       long i10266;\n+       long i10267;\n+       long i10268;\n+       long i10269;\n+       long i10270;\n+       long i10271;\n+       long i10272;\n+       long i10273;\n+       long i10274;\n+       long i10275;\n+       long i10276;\n+       long i10277;\n+       long i10278;\n+       long i10279;\n+       long i10280;\n+       long i10281;\n+       long i10282;\n+       long i10283;\n+       long i10284;\n+       long i10285;\n+       long i10286;\n+       long i10287;\n+       long i10288;\n+       long i10289;\n+       long i10290;\n+       long i10291;\n+       long i10292;\n+       long i10293;\n+       long i10294;\n+       long i10295;\n+       long i10296;\n+       long i10297;\n+       long i10298;\n+       long i10299;\n+       long i10300;\n+       long i10301;\n+       long i10302;\n+       long i10303;\n+       long i10304;\n+       long i10305;\n+       long i10306;\n+       long i10307;\n+       long i10308;\n+       long i10309;\n+       long i10310;\n+       long i10311;\n+       long i10312;\n+       long i10313;\n+       long i10314;\n+       long i10315;\n+       long i10316;\n+       long i10317;\n+       long i10318;\n+       long i10319;\n+       long i10320;\n+       long i10321;\n+       long i10322;\n+       long i10323;\n+       long i10324;\n+       long i10325;\n+       long i10326;\n+       long i10327;\n+       long i10328;\n+       long i10329;\n+       long i10330;\n+       long i10331;\n+       long i10332;\n+       long i10333;\n+       long i10334;\n+       long i10335;\n+       long i10336;\n+       long i10337;\n+       long i10338;\n+       long i10339;\n+       long i10340;\n+       long i10341;\n+       long i10342;\n+       long i10343;\n+       long i10344;\n+       long i10345;\n+       long i10346;\n+       long i10347;\n+       long i10348;\n+       long i10349;\n+       long i10350;\n+       long i10351;\n+       long i10352;\n+       long i10353;\n+       long i10354;\n+       long i10355;\n+       long i10356;\n+       long i10357;\n+       long i10358;\n+       long i10359;\n+       long i10360;\n+       long i10361;\n+       long i10362;\n+       long i10363;\n+       long i10364;\n+       long i10365;\n+       long i10366;\n+       long i10367;\n+       long i10368;\n+       long i10369;\n+       long i10370;\n+       long i10371;\n+       long i10372;\n+       long i10373;\n+       long i10374;\n+       long i10375;\n+       long i10376;\n+       long i10377;\n+       long i10378;\n+       long i10379;\n+       long i10380;\n+       long i10381;\n+       long i10382;\n+       long i10383;\n+       long i10384;\n+       long i10385;\n+       long i10386;\n+       long i10387;\n+       long i10388;\n+       long i10389;\n+       long i10390;\n+       long i10391;\n+       long i10392;\n+       long i10393;\n+       long i10394;\n+       long i10395;\n+       long i10396;\n+       long i10397;\n+       long i10398;\n+       long i10399;\n+       long i10400;\n+       long i10401;\n+       long i10402;\n+       long i10403;\n+       long i10404;\n+       long i10405;\n+       long i10406;\n+       long i10407;\n+       long i10408;\n+       long i10409;\n+       long i10410;\n+       long i10411;\n+       long i10412;\n+       long i10413;\n+       long i10414;\n+       long i10415;\n+       long i10416;\n+       long i10417;\n+       long i10418;\n+       long i10419;\n+       long i10420;\n+       long i10421;\n+       long i10422;\n+       long i10423;\n+       long i10424;\n+       long i10425;\n+       long i10426;\n+       long i10427;\n+       long i10428;\n+       long i10429;\n+       long i10430;\n+       long i10431;\n+       long i10432;\n+       long i10433;\n+       long i10434;\n+       long i10435;\n+       long i10436;\n+       long i10437;\n+       long i10438;\n+       long i10439;\n+       long i10440;\n+       long i10441;\n+       long i10442;\n+       long i10443;\n+       long i10444;\n+       long i10445;\n+       long i10446;\n+       long i10447;\n+       long i10448;\n+       long i10449;\n+       long i10450;\n+       long i10451;\n+       long i10452;\n+       long i10453;\n+       long i10454;\n+       long i10455;\n+       long i10456;\n+       long i10457;\n+       long i10458;\n+       long i10459;\n+       long i10460;\n+       long i10461;\n+       long i10462;\n+       long i10463;\n+       long i10464;\n+       long i10465;\n+       long i10466;\n+       long i10467;\n+       long i10468;\n+       long i10469;\n+       long i10470;\n+       long i10471;\n+       long i10472;\n+       long i10473;\n+       long i10474;\n+       long i10475;\n+       long i10476;\n+       long i10477;\n+       long i10478;\n+       long i10479;\n+       long i10480;\n+       long i10481;\n+       long i10482;\n+       long i10483;\n+       long i10484;\n+       long i10485;\n+       long i10486;\n+       long i10487;\n+       long i10488;\n+       long i10489;\n+       long i10490;\n+       long i10491;\n+       long i10492;\n+       long i10493;\n+       long i10494;\n+       long i10495;\n+       long i10496;\n+       long i10497;\n+       long i10498;\n+       long i10499;\n+       long i10500;\n+       long i10501;\n+       long i10502;\n+       long i10503;\n+       long i10504;\n+       long i10505;\n+       long i10506;\n+       long i10507;\n+       long i10508;\n+       long i10509;\n+       long i10510;\n+       long i10511;\n+       long i10512;\n+       long i10513;\n+       long i10514;\n+       long i10515;\n+       long i10516;\n+       long i10517;\n+       long i10518;\n+       long i10519;\n+       long i10520;\n+       long i10521;\n+       long i10522;\n+       long i10523;\n+       long i10524;\n+       long i10525;\n+       long i10526;\n+       long i10527;\n+       long i10528;\n+       long i10529;\n+       long i10530;\n+       long i10531;\n+       long i10532;\n+       long i10533;\n+       long i10534;\n+       long i10535;\n+       long i10536;\n+       long i10537;\n+       long i10538;\n+       long i10539;\n+       long i10540;\n+       long i10541;\n+       long i10542;\n+       long i10543;\n+       long i10544;\n+       long i10545;\n+       long i10546;\n+       long i10547;\n+       long i10548;\n+       long i10549;\n+       long i10550;\n+       long i10551;\n+       long i10552;\n+       long i10553;\n+       long i10554;\n+       long i10555;\n+       long i10556;\n+       long i10557;\n+       long i10558;\n+       long i10559;\n+       long i10560;\n+       long i10561;\n+       long i10562;\n+       long i10563;\n+       long i10564;\n+       long i10565;\n+       long i10566;\n+       long i10567;\n+       long i10568;\n+       long i10569;\n+       long i10570;\n+       long i10571;\n+       long i10572;\n+       long i10573;\n+       long i10574;\n+       long i10575;\n+       long i10576;\n+       long i10577;\n+       long i10578;\n+       long i10579;\n+       long i10580;\n+       long i10581;\n+       long i10582;\n+       long i10583;\n+       long i10584;\n+       long i10585;\n+       long i10586;\n+       long i10587;\n+       long i10588;\n+       long i10589;\n+       long i10590;\n+       long i10591;\n+       long i10592;\n+       long i10593;\n+       long i10594;\n+       long i10595;\n+       long i10596;\n+       long i10597;\n+       long i10598;\n+       long i10599;\n+       long i10600;\n+       long i10601;\n+       long i10602;\n+       long i10603;\n+       long i10604;\n+       long i10605;\n+       long i10606;\n+       long i10607;\n+       long i10608;\n+       long i10609;\n+       long i10610;\n+       long i10611;\n+       long i10612;\n+       long i10613;\n+       long i10614;\n+       long i10615;\n+       long i10616;\n+       long i10617;\n+       long i10618;\n+       long i10619;\n+       long i10620;\n+       long i10621;\n+       long i10622;\n+       long i10623;\n+       long i10624;\n+       long i10625;\n+       long i10626;\n+       long i10627;\n+       long i10628;\n+       long i10629;\n+       long i10630;\n+       long i10631;\n+       long i10632;\n+       long i10633;\n+       long i10634;\n+       long i10635;\n+       long i10636;\n+       long i10637;\n+       long i10638;\n+       long i10639;\n+       long i10640;\n+       long i10641;\n+       long i10642;\n+       long i10643;\n+       long i10644;\n+       long i10645;\n+       long i10646;\n+       long i10647;\n+       long i10648;\n+       long i10649;\n+       long i10650;\n+       long i10651;\n+       long i10652;\n+       long i10653;\n+       long i10654;\n+       long i10655;\n+       long i10656;\n+       long i10657;\n+       long i10658;\n+       long i10659;\n+       long i10660;\n+       long i10661;\n+       long i10662;\n+       long i10663;\n+       long i10664;\n+       long i10665;\n+       long i10666;\n+       long i10667;\n+       long i10668;\n+       long i10669;\n+       long i10670;\n+       long i10671;\n+       long i10672;\n+       long i10673;\n+       long i10674;\n+       long i10675;\n+       long i10676;\n+       long i10677;\n+       long i10678;\n+       long i10679;\n+       long i10680;\n+       long i10681;\n+       long i10682;\n+       long i10683;\n+       long i10684;\n+       long i10685;\n+       long i10686;\n+       long i10687;\n+       long i10688;\n+       long i10689;\n+       long i10690;\n+       long i10691;\n+       long i10692;\n+       long i10693;\n+       long i10694;\n+       long i10695;\n+       long i10696;\n+       long i10697;\n+       long i10698;\n+       long i10699;\n+       long i10700;\n+       long i10701;\n+       long i10702;\n+       long i10703;\n+       long i10704;\n+       long i10705;\n+       long i10706;\n+       long i10707;\n+       long i10708;\n+       long i10709;\n+       long i10710;\n+       long i10711;\n+       long i10712;\n+       long i10713;\n+       long i10714;\n+       long i10715;\n+       long i10716;\n+       long i10717;\n+       long i10718;\n+       long i10719;\n+       long i10720;\n+       long i10721;\n+       long i10722;\n+       long i10723;\n+       long i10724;\n+       long i10725;\n+       long i10726;\n+       long i10727;\n+       long i10728;\n+       long i10729;\n+       long i10730;\n+       long i10731;\n+       long i10732;\n+       long i10733;\n+       long i10734;\n+       long i10735;\n+       long i10736;\n+       long i10737;\n+       long i10738;\n+       long i10739;\n+       long i10740;\n+       long i10741;\n+       long i10742;\n+       long i10743;\n+       long i10744;\n+       long i10745;\n+       long i10746;\n+       long i10747;\n+       long i10748;\n+       long i10749;\n+       long i10750;\n+       long i10751;\n+       long i10752;\n+       long i10753;\n+       long i10754;\n+       long i10755;\n+       long i10756;\n+       long i10757;\n+       long i10758;\n+       long i10759;\n+       long i10760;\n+       long i10761;\n+       long i10762;\n+       long i10763;\n+       long i10764;\n+       long i10765;\n+       long i10766;\n+       long i10767;\n+       long i10768;\n+       long i10769;\n+       long i10770;\n+       long i10771;\n+       long i10772;\n+       long i10773;\n+       long i10774;\n+       long i10775;\n+       long i10776;\n+       long i10777;\n+       long i10778;\n+       long i10779;\n+       long i10780;\n+       long i10781;\n+       long i10782;\n+       long i10783;\n+       long i10784;\n+       long i10785;\n+       long i10786;\n+       long i10787;\n+       long i10788;\n+       long i10789;\n+       long i10790;\n+       long i10791;\n+       long i10792;\n+       long i10793;\n+       long i10794;\n+       long i10795;\n+       long i10796;\n+       long i10797;\n+       long i10798;\n+       long i10799;\n+       long i10800;\n+       long i10801;\n+       long i10802;\n+       long i10803;\n+       long i10804;\n+       long i10805;\n+       long i10806;\n+       long i10807;\n+       long i10808;\n+       long i10809;\n+       long i10810;\n+       long i10811;\n+       long i10812;\n+       long i10813;\n+       long i10814;\n+       long i10815;\n+       long i10816;\n+       long i10817;\n+       long i10818;\n+       long i10819;\n+       long i10820;\n+       long i10821;\n+       long i10822;\n+       long i10823;\n+       long i10824;\n+       long i10825;\n+       long i10826;\n+       long i10827;\n+       long i10828;\n+       long i10829;\n+       long i10830;\n+       long i10831;\n+       long i10832;\n+       long i10833;\n+       long i10834;\n+       long i10835;\n+       long i10836;\n+       long i10837;\n+       long i10838;\n+       long i10839;\n+       long i10840;\n+       long i10841;\n+       long i10842;\n+       long i10843;\n+       long i10844;\n+       long i10845;\n+       long i10846;\n+       long i10847;\n+       long i10848;\n+       long i10849;\n+       long i10850;\n+       long i10851;\n+       long i10852;\n+       long i10853;\n+       long i10854;\n+       long i10855;\n+       long i10856;\n+       long i10857;\n+       long i10858;\n+       long i10859;\n+       long i10860;\n+       long i10861;\n+       long i10862;\n+       long i10863;\n+       long i10864;\n+       long i10865;\n+       long i10866;\n+       long i10867;\n+       long i10868;\n+       long i10869;\n+       long i10870;\n+       long i10871;\n+       long i10872;\n+       long i10873;\n+       long i10874;\n+       long i10875;\n+       long i10876;\n+       long i10877;\n+       long i10878;\n+       long i10879;\n+       long i10880;\n+       long i10881;\n+       long i10882;\n+       long i10883;\n+       long i10884;\n+       long i10885;\n+       long i10886;\n+       long i10887;\n+       long i10888;\n+       long i10889;\n+       long i10890;\n+       long i10891;\n+       long i10892;\n+       long i10893;\n+       long i10894;\n+       long i10895;\n+       long i10896;\n+       long i10897;\n+       long i10898;\n+       long i10899;\n+       long i10900;\n+       long i10901;\n+       long i10902;\n+       long i10903;\n+       long i10904;\n+       long i10905;\n+       long i10906;\n+       long i10907;\n+       long i10908;\n+       long i10909;\n+       long i10910;\n+       long i10911;\n+       long i10912;\n+       long i10913;\n+       long i10914;\n+       long i10915;\n+       long i10916;\n+       long i10917;\n+       long i10918;\n+       long i10919;\n+       long i10920;\n+       long i10921;\n+       long i10922;\n+       long i10923;\n+       long i10924;\n+       long i10925;\n+       long i10926;\n+       long i10927;\n+       long i10928;\n+       long i10929;\n+       long i10930;\n+       long i10931;\n+       long i10932;\n+       long i10933;\n+       long i10934;\n+       long i10935;\n+       long i10936;\n+       long i10937;\n+       long i10938;\n+       long i10939;\n+       long i10940;\n+       long i10941;\n+       long i10942;\n+       long i10943;\n+       long i10944;\n+       long i10945;\n+       long i10946;\n+       long i10947;\n+       long i10948;\n+       long i10949;\n+       long i10950;\n+       long i10951;\n+       long i10952;\n+       long i10953;\n+       long i10954;\n+       long i10955;\n+       long i10956;\n+       long i10957;\n+       long i10958;\n+       long i10959;\n+       long i10960;\n+       long i10961;\n+       long i10962;\n+       long i10963;\n+       long i10964;\n+       long i10965;\n+       long i10966;\n+       long i10967;\n+       long i10968;\n+       long i10969;\n+       long i10970;\n+       long i10971;\n+       long i10972;\n+       long i10973;\n+       long i10974;\n+       long i10975;\n+       long i10976;\n+       long i10977;\n+       long i10978;\n+       long i10979;\n+       long i10980;\n+       long i10981;\n+       long i10982;\n+       long i10983;\n+       long i10984;\n+       long i10985;\n+       long i10986;\n+       long i10987;\n+       long i10988;\n+       long i10989;\n+       long i10990;\n+       long i10991;\n+       long i10992;\n+       long i10993;\n+       long i10994;\n+       long i10995;\n+       long i10996;\n+       long i10997;\n+       long i10998;\n+       long i10999;\n+       long i11000;\n+       long i11001;\n+       long i11002;\n+       long i11003;\n+       long i11004;\n+       long i11005;\n+       long i11006;\n+       long i11007;\n+       long i11008;\n+       long i11009;\n+       long i11010;\n+       long i11011;\n+       long i11012;\n+       long i11013;\n+       long i11014;\n+       long i11015;\n+       long i11016;\n+       long i11017;\n+       long i11018;\n+       long i11019;\n+       long i11020;\n+       long i11021;\n+       long i11022;\n+       long i11023;\n+       long i11024;\n+       long i11025;\n+       long i11026;\n+       long i11027;\n+       long i11028;\n+       long i11029;\n+       long i11030;\n+       long i11031;\n+       long i11032;\n+       long i11033;\n+       long i11034;\n+       long i11035;\n+       long i11036;\n+       long i11037;\n+       long i11038;\n+       long i11039;\n+       long i11040;\n+       long i11041;\n+       long i11042;\n+       long i11043;\n+       long i11044;\n+       long i11045;\n+       long i11046;\n+       long i11047;\n+       long i11048;\n+       long i11049;\n+       long i11050;\n+       long i11051;\n+       long i11052;\n+       long i11053;\n+       long i11054;\n+       long i11055;\n+       long i11056;\n+       long i11057;\n+       long i11058;\n+       long i11059;\n+       long i11060;\n+       long i11061;\n+       long i11062;\n+       long i11063;\n+       long i11064;\n+       long i11065;\n+       long i11066;\n+       long i11067;\n+       long i11068;\n+       long i11069;\n+       long i11070;\n+       long i11071;\n+       long i11072;\n+       long i11073;\n+       long i11074;\n+       long i11075;\n+       long i11076;\n+       long i11077;\n+       long i11078;\n+       long i11079;\n+       long i11080;\n+       long i11081;\n+       long i11082;\n+       long i11083;\n+       long i11084;\n+       long i11085;\n+       long i11086;\n+       long i11087;\n+       long i11088;\n+       long i11089;\n+       long i11090;\n+       long i11091;\n+       long i11092;\n+       long i11093;\n+       long i11094;\n+       long i11095;\n+       long i11096;\n+       long i11097;\n+       long i11098;\n+       long i11099;\n+       long i11100;\n+       long i11101;\n+       long i11102;\n+       long i11103;\n+       long i11104;\n+       long i11105;\n+       long i11106;\n+       long i11107;\n+       long i11108;\n+       long i11109;\n+       long i11110;\n+       long i11111;\n+       long i11112;\n+       long i11113;\n+       long i11114;\n+       long i11115;\n+       long i11116;\n+       long i11117;\n+       long i11118;\n+       long i11119;\n+       long i11120;\n+       long i11121;\n+       long i11122;\n+       long i11123;\n+       long i11124;\n+       long i11125;\n+       long i11126;\n+       long i11127;\n+       long i11128;\n+       long i11129;\n+       long i11130;\n+       long i11131;\n+       long i11132;\n+       long i11133;\n+       long i11134;\n+       long i11135;\n+       long i11136;\n+       long i11137;\n+       long i11138;\n+       long i11139;\n+       long i11140;\n+       long i11141;\n+       long i11142;\n+       long i11143;\n+       long i11144;\n+       long i11145;\n+       long i11146;\n+       long i11147;\n+       long i11148;\n+       long i11149;\n+       long i11150;\n+       long i11151;\n+       long i11152;\n+       long i11153;\n+       long i11154;\n+       long i11155;\n+       long i11156;\n+       long i11157;\n+       long i11158;\n+       long i11159;\n+       long i11160;\n+       long i11161;\n+       long i11162;\n+       long i11163;\n+       long i11164;\n+       long i11165;\n+       long i11166;\n+       long i11167;\n+       long i11168;\n+       long i11169;\n+       long i11170;\n+       long i11171;\n+       long i11172;\n+       long i11173;\n+       long i11174;\n+       long i11175;\n+       long i11176;\n+       long i11177;\n+       long i11178;\n+       long i11179;\n+       long i11180;\n+       long i11181;\n+       long i11182;\n+       long i11183;\n+       long i11184;\n+       long i11185;\n+       long i11186;\n+       long i11187;\n+       long i11188;\n+       long i11189;\n+       long i11190;\n+       long i11191;\n+       long i11192;\n+       long i11193;\n+       long i11194;\n+       long i11195;\n+       long i11196;\n+       long i11197;\n+       long i11198;\n+       long i11199;\n+       long i11200;\n+       long i11201;\n+       long i11202;\n+       long i11203;\n+       long i11204;\n+       long i11205;\n+       long i11206;\n+       long i11207;\n+       long i11208;\n+       long i11209;\n+       long i11210;\n+       long i11211;\n+       long i11212;\n+       long i11213;\n+       long i11214;\n+       long i11215;\n+       long i11216;\n+       long i11217;\n+       long i11218;\n+       long i11219;\n+       long i11220;\n+       long i11221;\n+       long i11222;\n+       long i11223;\n+       long i11224;\n+       long i11225;\n+       long i11226;\n+       long i11227;\n+       long i11228;\n+       long i11229;\n+       long i11230;\n+       long i11231;\n+       long i11232;\n+       long i11233;\n+       long i11234;\n+       long i11235;\n+       long i11236;\n+       long i11237;\n+       long i11238;\n+       long i11239;\n+       long i11240;\n+       long i11241;\n+       long i11242;\n+       long i11243;\n+       long i11244;\n+       long i11245;\n+       long i11246;\n+       long i11247;\n+       long i11248;\n+       long i11249;\n+       long i11250;\n+       long i11251;\n+       long i11252;\n+       long i11253;\n+       long i11254;\n+       long i11255;\n+       long i11256;\n+       long i11257;\n+       long i11258;\n+       long i11259;\n+       long i11260;\n+       long i11261;\n+       long i11262;\n+       long i11263;\n+       long i11264;\n+       long i11265;\n+       long i11266;\n+       long i11267;\n+       long i11268;\n+       long i11269;\n+       long i11270;\n+       long i11271;\n+       long i11272;\n+       long i11273;\n+       long i11274;\n+       long i11275;\n+       long i11276;\n+       long i11277;\n+       long i11278;\n+       long i11279;\n+       long i11280;\n+       long i11281;\n+       long i11282;\n+       long i11283;\n+       long i11284;\n+       long i11285;\n+       long i11286;\n+       long i11287;\n+       long i11288;\n+       long i11289;\n+       long i11290;\n+       long i11291;\n+       long i11292;\n+       long i11293;\n+       long i11294;\n+       long i11295;\n+       long i11296;\n+       long i11297;\n+       long i11298;\n+       long i11299;\n+       long i11300;\n+       long i11301;\n+       long i11302;\n+       long i11303;\n+       long i11304;\n+       long i11305;\n+       long i11306;\n+       long i11307;\n+       long i11308;\n+       long i11309;\n+       long i11310;\n+       long i11311;\n+       long i11312;\n+       long i11313;\n+       long i11314;\n+       long i11315;\n+       long i11316;\n+       long i11317;\n+       long i11318;\n+       long i11319;\n+       long i11320;\n+       long i11321;\n+       long i11322;\n+       long i11323;\n+       long i11324;\n+       long i11325;\n+       long i11326;\n+       long i11327;\n+       long i11328;\n+       long i11329;\n+       long i11330;\n+       long i11331;\n+       long i11332;\n+       long i11333;\n+       long i11334;\n+       long i11335;\n+       long i11336;\n+       long i11337;\n+       long i11338;\n+       long i11339;\n+       long i11340;\n+       long i11341;\n+       long i11342;\n+       long i11343;\n+       long i11344;\n+       long i11345;\n+       long i11346;\n+       long i11347;\n+       long i11348;\n+       long i11349;\n+       long i11350;\n+       long i11351;\n+       long i11352;\n+       long i11353;\n+       long i11354;\n+       long i11355;\n+       long i11356;\n+       long i11357;\n+       long i11358;\n+       long i11359;\n+       long i11360;\n+       long i11361;\n+       long i11362;\n+       long i11363;\n+       long i11364;\n+       long i11365;\n+       long i11366;\n+       long i11367;\n+       long i11368;\n+       long i11369;\n+       long i11370;\n+       long i11371;\n+       long i11372;\n+       long i11373;\n+       long i11374;\n+       long i11375;\n+       long i11376;\n+       long i11377;\n+       long i11378;\n+       long i11379;\n+       long i11380;\n+       long i11381;\n+       long i11382;\n+       long i11383;\n+       long i11384;\n+       long i11385;\n+       long i11386;\n+       long i11387;\n+       long i11388;\n+       long i11389;\n+       long i11390;\n+       long i11391;\n+       long i11392;\n+       long i11393;\n+       long i11394;\n+       long i11395;\n+       long i11396;\n+       long i11397;\n+       long i11398;\n+       long i11399;\n+       long i11400;\n+       long i11401;\n+       long i11402;\n+       long i11403;\n+       long i11404;\n+       long i11405;\n+       long i11406;\n+       long i11407;\n+       long i11408;\n+       long i11409;\n+       long i11410;\n+       long i11411;\n+       long i11412;\n+       long i11413;\n+       long i11414;\n+       long i11415;\n+       long i11416;\n+       long i11417;\n+       long i11418;\n+       long i11419;\n+       long i11420;\n+       long i11421;\n+       long i11422;\n+       long i11423;\n+       long i11424;\n+       long i11425;\n+       long i11426;\n+       long i11427;\n+       long i11428;\n+       long i11429;\n+       long i11430;\n+       long i11431;\n+       long i11432;\n+       long i11433;\n+       long i11434;\n+       long i11435;\n+       long i11436;\n+       long i11437;\n+       long i11438;\n+       long i11439;\n+       long i11440;\n+       long i11441;\n+       long i11442;\n+       long i11443;\n+       long i11444;\n+       long i11445;\n+       long i11446;\n+       long i11447;\n+       long i11448;\n+       long i11449;\n+       long i11450;\n+       long i11451;\n+       long i11452;\n+       long i11453;\n+       long i11454;\n+       long i11455;\n+       long i11456;\n+       long i11457;\n+       long i11458;\n+       long i11459;\n+       long i11460;\n+       long i11461;\n+       long i11462;\n+       long i11463;\n+       long i11464;\n+       long i11465;\n+       long i11466;\n+       long i11467;\n+       long i11468;\n+       long i11469;\n+       long i11470;\n+       long i11471;\n+       long i11472;\n+       long i11473;\n+       long i11474;\n+       long i11475;\n+       long i11476;\n+       long i11477;\n+       long i11478;\n+       long i11479;\n+       long i11480;\n+       long i11481;\n+       long i11482;\n+       long i11483;\n+       long i11484;\n+       long i11485;\n+       long i11486;\n+       long i11487;\n+       long i11488;\n+       long i11489;\n+       long i11490;\n+       long i11491;\n+       long i11492;\n+       long i11493;\n+       long i11494;\n+       long i11495;\n+       long i11496;\n+       long i11497;\n+       long i11498;\n+       long i11499;\n+       long i11500;\n+       long i11501;\n+       long i11502;\n+       long i11503;\n+       long i11504;\n+       long i11505;\n+       long i11506;\n+       long i11507;\n+       long i11508;\n+       long i11509;\n+       long i11510;\n+       long i11511;\n+       long i11512;\n+       long i11513;\n+       long i11514;\n+       long i11515;\n+       long i11516;\n+       long i11517;\n+       long i11518;\n+       long i11519;\n+       long i11520;\n+       long i11521;\n+       long i11522;\n+       long i11523;\n+       long i11524;\n+       long i11525;\n+       long i11526;\n+       long i11527;\n+       long i11528;\n+       long i11529;\n+       long i11530;\n+       long i11531;\n+       long i11532;\n+       long i11533;\n+       long i11534;\n+       long i11535;\n+       long i11536;\n+       long i11537;\n+       long i11538;\n+       long i11539;\n+       long i11540;\n+       long i11541;\n+       long i11542;\n+       long i11543;\n+       long i11544;\n+       long i11545;\n+       long i11546;\n+       long i11547;\n+       long i11548;\n+       long i11549;\n+       long i11550;\n+       long i11551;\n+       long i11552;\n+       long i11553;\n+       long i11554;\n+       long i11555;\n+       long i11556;\n+       long i11557;\n+       long i11558;\n+       long i11559;\n+       long i11560;\n+       long i11561;\n+       long i11562;\n+       long i11563;\n+       long i11564;\n+       long i11565;\n+       long i11566;\n+       long i11567;\n+       long i11568;\n+       long i11569;\n+       long i11570;\n+       long i11571;\n+       long i11572;\n+       long i11573;\n+       long i11574;\n+       long i11575;\n+       long i11576;\n+       long i11577;\n+       long i11578;\n+       long i11579;\n+       long i11580;\n+       long i11581;\n+       long i11582;\n+       long i11583;\n+       long i11584;\n+       long i11585;\n+       long i11586;\n+       long i11587;\n+       long i11588;\n+       long i11589;\n+       long i11590;\n+       long i11591;\n+       long i11592;\n+       long i11593;\n+       long i11594;\n+       long i11595;\n+       long i11596;\n+       long i11597;\n+       long i11598;\n+       long i11599;\n+       long i11600;\n+       long i11601;\n+       long i11602;\n+       long i11603;\n+       long i11604;\n+       long i11605;\n+       long i11606;\n+       long i11607;\n+       long i11608;\n+       long i11609;\n+       long i11610;\n+       long i11611;\n+       long i11612;\n+       long i11613;\n+       long i11614;\n+       long i11615;\n+       long i11616;\n+       long i11617;\n+       long i11618;\n+       long i11619;\n+       long i11620;\n+       long i11621;\n+       long i11622;\n+       long i11623;\n+       long i11624;\n+       long i11625;\n+       long i11626;\n+       long i11627;\n+       long i11628;\n+       long i11629;\n+       long i11630;\n+       long i11631;\n+       long i11632;\n+       long i11633;\n+       long i11634;\n+       long i11635;\n+       long i11636;\n+       long i11637;\n+       long i11638;\n+       long i11639;\n+       long i11640;\n+       long i11641;\n+       long i11642;\n+       long i11643;\n+       long i11644;\n+       long i11645;\n+       long i11646;\n+       long i11647;\n+       long i11648;\n+       long i11649;\n+       long i11650;\n+       long i11651;\n+       long i11652;\n+       long i11653;\n+       long i11654;\n+       long i11655;\n+       long i11656;\n+       long i11657;\n+       long i11658;\n+       long i11659;\n+       long i11660;\n+       long i11661;\n+       long i11662;\n+       long i11663;\n+       long i11664;\n+       long i11665;\n+       long i11666;\n+       long i11667;\n+       long i11668;\n+       long i11669;\n+       long i11670;\n+       long i11671;\n+       long i11672;\n+       long i11673;\n+       long i11674;\n+       long i11675;\n+       long i11676;\n+       long i11677;\n+       long i11678;\n+       long i11679;\n+       long i11680;\n+       long i11681;\n+       long i11682;\n+       long i11683;\n+       long i11684;\n+       long i11685;\n+       long i11686;\n+       long i11687;\n+       long i11688;\n+       long i11689;\n+       long i11690;\n+       long i11691;\n+       long i11692;\n+       long i11693;\n+       long i11694;\n+       long i11695;\n+       long i11696;\n+       long i11697;\n+       long i11698;\n+       long i11699;\n+       long i11700;\n+       long i11701;\n+       long i11702;\n+       long i11703;\n+       long i11704;\n+       long i11705;\n+       long i11706;\n+       long i11707;\n+       long i11708;\n+       long i11709;\n+       long i11710;\n+       long i11711;\n+       long i11712;\n+       long i11713;\n+       long i11714;\n+       long i11715;\n+       long i11716;\n+       long i11717;\n+       long i11718;\n+       long i11719;\n+       long i11720;\n+       long i11721;\n+       long i11722;\n+       long i11723;\n+       long i11724;\n+       long i11725;\n+       long i11726;\n+       long i11727;\n+       long i11728;\n+       long i11729;\n+       long i11730;\n+       long i11731;\n+       long i11732;\n+       long i11733;\n+       long i11734;\n+       long i11735;\n+       long i11736;\n+       long i11737;\n+       long i11738;\n+       long i11739;\n+       long i11740;\n+       long i11741;\n+       long i11742;\n+       long i11743;\n+       long i11744;\n+       long i11745;\n+       long i11746;\n+       long i11747;\n+       long i11748;\n+       long i11749;\n+       long i11750;\n+       long i11751;\n+       long i11752;\n+       long i11753;\n+       long i11754;\n+       long i11755;\n+       long i11756;\n+       long i11757;\n+       long i11758;\n+       long i11759;\n+       long i11760;\n+       long i11761;\n+       long i11762;\n+       long i11763;\n+       long i11764;\n+       long i11765;\n+       long i11766;\n+       long i11767;\n+       long i11768;\n+       long i11769;\n+       long i11770;\n+       long i11771;\n+       long i11772;\n+       long i11773;\n+       long i11774;\n+       long i11775;\n+       long i11776;\n+       long i11777;\n+       long i11778;\n+       long i11779;\n+       long i11780;\n+       long i11781;\n+       long i11782;\n+       long i11783;\n+       long i11784;\n+       long i11785;\n+       long i11786;\n+       long i11787;\n+       long i11788;\n+       long i11789;\n+       long i11790;\n+       long i11791;\n+       long i11792;\n+       long i11793;\n+       long i11794;\n+       long i11795;\n+       long i11796;\n+       long i11797;\n+       long i11798;\n+       long i11799;\n+       long i11800;\n+       long i11801;\n+       long i11802;\n+       long i11803;\n+       long i11804;\n+       long i11805;\n+       long i11806;\n+       long i11807;\n+       long i11808;\n+       long i11809;\n+       long i11810;\n+       long i11811;\n+       long i11812;\n+       long i11813;\n+       long i11814;\n+       long i11815;\n+       long i11816;\n+       long i11817;\n+       long i11818;\n+       long i11819;\n+       long i11820;\n+       long i11821;\n+       long i11822;\n+       long i11823;\n+       long i11824;\n+       long i11825;\n+       long i11826;\n+       long i11827;\n+       long i11828;\n+       long i11829;\n+       long i11830;\n+       long i11831;\n+       long i11832;\n+       long i11833;\n+       long i11834;\n+       long i11835;\n+       long i11836;\n+       long i11837;\n+       long i11838;\n+       long i11839;\n+       long i11840;\n+       long i11841;\n+       long i11842;\n+       long i11843;\n+       long i11844;\n+       long i11845;\n+       long i11846;\n+       long i11847;\n+       long i11848;\n+       long i11849;\n+       long i11850;\n+       long i11851;\n+       long i11852;\n+       long i11853;\n+       long i11854;\n+       long i11855;\n+       long i11856;\n+       long i11857;\n+       long i11858;\n+       long i11859;\n+       long i11860;\n+       long i11861;\n+       long i11862;\n+       long i11863;\n+       long i11864;\n+       long i11865;\n+       long i11866;\n+       long i11867;\n+       long i11868;\n+       long i11869;\n+       long i11870;\n+       long i11871;\n+       long i11872;\n+       long i11873;\n+       long i11874;\n+       long i11875;\n+       long i11876;\n+       long i11877;\n+       long i11878;\n+       long i11879;\n+       long i11880;\n+       long i11881;\n+       long i11882;\n+       long i11883;\n+       long i11884;\n+       long i11885;\n+       long i11886;\n+       long i11887;\n+       long i11888;\n+       long i11889;\n+       long i11890;\n+       long i11891;\n+       long i11892;\n+       long i11893;\n+       long i11894;\n+       long i11895;\n+       long i11896;\n+       long i11897;\n+       long i11898;\n+       long i11899;\n+       long i11900;\n+       long i11901;\n+       long i11902;\n+       long i11903;\n+       long i11904;\n+       long i11905;\n+       long i11906;\n+       long i11907;\n+       long i11908;\n+       long i11909;\n+       long i11910;\n+       long i11911;\n+       long i11912;\n+       long i11913;\n+       long i11914;\n+       long i11915;\n+       long i11916;\n+       long i11917;\n+       long i11918;\n+       long i11919;\n+       long i11920;\n+       long i11921;\n+       long i11922;\n+       long i11923;\n+       long i11924;\n+       long i11925;\n+       long i11926;\n+       long i11927;\n+       long i11928;\n+       long i11929;\n+       long i11930;\n+       long i11931;\n+       long i11932;\n+       long i11933;\n+       long i11934;\n+       long i11935;\n+       long i11936;\n+       long i11937;\n+       long i11938;\n+       long i11939;\n+       long i11940;\n+       long i11941;\n+       long i11942;\n+       long i11943;\n+       long i11944;\n+       long i11945;\n+       long i11946;\n+       long i11947;\n+       long i11948;\n+       long i11949;\n+       long i11950;\n+       long i11951;\n+       long i11952;\n+       long i11953;\n+       long i11954;\n+       long i11955;\n+       long i11956;\n+       long i11957;\n+       long i11958;\n+       long i11959;\n+       long i11960;\n+       long i11961;\n+       long i11962;\n+       long i11963;\n+       long i11964;\n+       long i11965;\n+       long i11966;\n+       long i11967;\n+       long i11968;\n+       long i11969;\n+       long i11970;\n+       long i11971;\n+       long i11972;\n+       long i11973;\n+       long i11974;\n+       long i11975;\n+       long i11976;\n+       long i11977;\n+       long i11978;\n+       long i11979;\n+       long i11980;\n+       long i11981;\n+       long i11982;\n+       long i11983;\n+       long i11984;\n+       long i11985;\n+       long i11986;\n+       long i11987;\n+       long i11988;\n+       long i11989;\n+       long i11990;\n+       long i11991;\n+       long i11992;\n+       long i11993;\n+       long i11994;\n+       long i11995;\n+       long i11996;\n+       long i11997;\n+       long i11998;\n+       long i11999;\n+       long i12000;\n+       long i12001;\n+       long i12002;\n+       long i12003;\n+       long i12004;\n+       long i12005;\n+       long i12006;\n+       long i12007;\n+       long i12008;\n+       long i12009;\n+       long i12010;\n+       long i12011;\n+       long i12012;\n+       long i12013;\n+       long i12014;\n+       long i12015;\n+       long i12016;\n+       long i12017;\n+       long i12018;\n+       long i12019;\n+       long i12020;\n+       long i12021;\n+       long i12022;\n+       long i12023;\n+       long i12024;\n+       long i12025;\n+       long i12026;\n+       long i12027;\n+       long i12028;\n+       long i12029;\n+       long i12030;\n+       long i12031;\n+       long i12032;\n+       long i12033;\n+       long i12034;\n+       long i12035;\n+       long i12036;\n+       long i12037;\n+       long i12038;\n+       long i12039;\n+       long i12040;\n+       long i12041;\n+       long i12042;\n+       long i12043;\n+       long i12044;\n+       long i12045;\n+       long i12046;\n+       long i12047;\n+       long i12048;\n+       long i12049;\n+       long i12050;\n+       long i12051;\n+       long i12052;\n+       long i12053;\n+       long i12054;\n+       long i12055;\n+       long i12056;\n+       long i12057;\n+       long i12058;\n+       long i12059;\n+       long i12060;\n+       long i12061;\n+       long i12062;\n+       long i12063;\n+       long i12064;\n+       long i12065;\n+       long i12066;\n+       long i12067;\n+       long i12068;\n+       long i12069;\n+       long i12070;\n+       long i12071;\n+       long i12072;\n+       long i12073;\n+       long i12074;\n+       long i12075;\n+       long i12076;\n+       long i12077;\n+       long i12078;\n+       long i12079;\n+       long i12080;\n+       long i12081;\n+       long i12082;\n+       long i12083;\n+       long i12084;\n+       long i12085;\n+       long i12086;\n+       long i12087;\n+       long i12088;\n+       long i12089;\n+       long i12090;\n+       long i12091;\n+       long i12092;\n+       long i12093;\n+       long i12094;\n+       long i12095;\n+       long i12096;\n+       long i12097;\n+       long i12098;\n+       long i12099;\n+       long i12100;\n+       long i12101;\n+       long i12102;\n+       long i12103;\n+       long i12104;\n+       long i12105;\n+       long i12106;\n+       long i12107;\n+       long i12108;\n+       long i12109;\n+       long i12110;\n+       long i12111;\n+       long i12112;\n+       long i12113;\n+       long i12114;\n+       long i12115;\n+       long i12116;\n+       long i12117;\n+       long i12118;\n+       long i12119;\n+       long i12120;\n+       long i12121;\n+       long i12122;\n+       long i12123;\n+       long i12124;\n+       long i12125;\n+       long i12126;\n+       long i12127;\n+       long i12128;\n+       long i12129;\n+       long i12130;\n+       long i12131;\n+       long i12132;\n+       long i12133;\n+       long i12134;\n+       long i12135;\n+       long i12136;\n+       long i12137;\n+       long i12138;\n+       long i12139;\n+       long i12140;\n+       long i12141;\n+       long i12142;\n+       long i12143;\n+       long i12144;\n+       long i12145;\n+       long i12146;\n+       long i12147;\n+       long i12148;\n+       long i12149;\n+       long i12150;\n+       long i12151;\n+       long i12152;\n+       long i12153;\n+       long i12154;\n+       long i12155;\n+       long i12156;\n+       long i12157;\n+       long i12158;\n+       long i12159;\n+       long i12160;\n+       long i12161;\n+       long i12162;\n+       long i12163;\n+       long i12164;\n+       long i12165;\n+       long i12166;\n+       long i12167;\n+       long i12168;\n+       long i12169;\n+       long i12170;\n+       long i12171;\n+       long i12172;\n+       long i12173;\n+       long i12174;\n+       long i12175;\n+       long i12176;\n+       long i12177;\n+       long i12178;\n+       long i12179;\n+       long i12180;\n+       long i12181;\n+       long i12182;\n+       long i12183;\n+       long i12184;\n+       long i12185;\n+       long i12186;\n+       long i12187;\n+       long i12188;\n+       long i12189;\n+       long i12190;\n+       long i12191;\n+       long i12192;\n+       long i12193;\n+       long i12194;\n+       long i12195;\n+       long i12196;\n+       long i12197;\n+       long i12198;\n+       long i12199;\n+       long i12200;\n+       long i12201;\n+       long i12202;\n+       long i12203;\n+       long i12204;\n+       long i12205;\n+       long i12206;\n+       long i12207;\n+       long i12208;\n+       long i12209;\n+       long i12210;\n+       long i12211;\n+       long i12212;\n+       long i12213;\n+       long i12214;\n+       long i12215;\n+       long i12216;\n+       long i12217;\n+       long i12218;\n+       long i12219;\n+       long i12220;\n+       long i12221;\n+       long i12222;\n+       long i12223;\n+       long i12224;\n+       long i12225;\n+       long i12226;\n+       long i12227;\n+       long i12228;\n+       long i12229;\n+       long i12230;\n+       long i12231;\n+       long i12232;\n+       long i12233;\n+       long i12234;\n+       long i12235;\n+       long i12236;\n+       long i12237;\n+       long i12238;\n+       long i12239;\n+       long i12240;\n+       long i12241;\n+       long i12242;\n+       long i12243;\n+       long i12244;\n+       long i12245;\n+       long i12246;\n+       long i12247;\n+       long i12248;\n+       long i12249;\n+       long i12250;\n+       long i12251;\n+       long i12252;\n+       long i12253;\n+       long i12254;\n+       long i12255;\n+       long i12256;\n+       long i12257;\n+       long i12258;\n+       long i12259;\n+       long i12260;\n+       long i12261;\n+       long i12262;\n+       long i12263;\n+       long i12264;\n+       long i12265;\n+       long i12266;\n+       long i12267;\n+       long i12268;\n+       long i12269;\n+       long i12270;\n+       long i12271;\n+       long i12272;\n+       long i12273;\n+       long i12274;\n+       long i12275;\n+       long i12276;\n+       long i12277;\n+       long i12278;\n+       long i12279;\n+       long i12280;\n+       long i12281;\n+       long i12282;\n+       long i12283;\n+       long i12284;\n+       long i12285;\n+       long i12286;\n+       long i12287;\n+       long i12288;\n+       long i12289;\n+       long i12290;\n+       long i12291;\n+       long i12292;\n+       long i12293;\n+       long i12294;\n+       long i12295;\n+       long i12296;\n+       long i12297;\n+       long i12298;\n+       long i12299;\n+       long i12300;\n+       long i12301;\n+       long i12302;\n+       long i12303;\n+       long i12304;\n+       long i12305;\n+       long i12306;\n+       long i12307;\n+       long i12308;\n+       long i12309;\n+       long i12310;\n+       long i12311;\n+       long i12312;\n+       long i12313;\n+       long i12314;\n+       long i12315;\n+       long i12316;\n+       long i12317;\n+       long i12318;\n+       long i12319;\n+       long i12320;\n+       long i12321;\n+       long i12322;\n+       long i12323;\n+       long i12324;\n+       long i12325;\n+       long i12326;\n+       long i12327;\n+       long i12328;\n+       long i12329;\n+       long i12330;\n+       long i12331;\n+       long i12332;\n+       long i12333;\n+       long i12334;\n+       long i12335;\n+       long i12336;\n+       long i12337;\n+       long i12338;\n+       long i12339;\n+       long i12340;\n+       long i12341;\n+       long i12342;\n+       long i12343;\n+       long i12344;\n+       long i12345;\n+       long i12346;\n+       long i12347;\n+       long i12348;\n+       long i12349;\n+       long i12350;\n+       long i12351;\n+       long i12352;\n+       long i12353;\n+       long i12354;\n+       long i12355;\n+       long i12356;\n+       long i12357;\n+       long i12358;\n+       long i12359;\n+       long i12360;\n+       long i12361;\n+       long i12362;\n+       long i12363;\n+       long i12364;\n+       long i12365;\n+       long i12366;\n+       long i12367;\n+       long i12368;\n+       long i12369;\n+       long i12370;\n+       long i12371;\n+       long i12372;\n+       long i12373;\n+       long i12374;\n+       long i12375;\n+       long i12376;\n+       long i12377;\n+       long i12378;\n+       long i12379;\n+       long i12380;\n+       long i12381;\n+       long i12382;\n+       long i12383;\n+       long i12384;\n+       long i12385;\n+       long i12386;\n+       long i12387;\n+       long i12388;\n+       long i12389;\n+       long i12390;\n+       long i12391;\n+       long i12392;\n+       long i12393;\n+       long i12394;\n+       long i12395;\n+       long i12396;\n+       long i12397;\n+       long i12398;\n+       long i12399;\n+       long i12400;\n+       long i12401;\n+       long i12402;\n+       long i12403;\n+       long i12404;\n+       long i12405;\n+       long i12406;\n+       long i12407;\n+       long i12408;\n+       long i12409;\n+       long i12410;\n+       long i12411;\n+       long i12412;\n+       long i12413;\n+       long i12414;\n+       long i12415;\n+       long i12416;\n+       long i12417;\n+       long i12418;\n+       long i12419;\n+       long i12420;\n+       long i12421;\n+       long i12422;\n+       long i12423;\n+       long i12424;\n+       long i12425;\n+       long i12426;\n+       long i12427;\n+       long i12428;\n+       long i12429;\n+       long i12430;\n+       long i12431;\n+       long i12432;\n+       long i12433;\n+       long i12434;\n+       long i12435;\n+       long i12436;\n+       long i12437;\n+       long i12438;\n+       long i12439;\n+       long i12440;\n+       long i12441;\n+       long i12442;\n+       long i12443;\n+       long i12444;\n+       long i12445;\n+       long i12446;\n+       long i12447;\n+       long i12448;\n+       long i12449;\n+       long i12450;\n+       long i12451;\n+       long i12452;\n+       long i12453;\n+       long i12454;\n+       long i12455;\n+       long i12456;\n+       long i12457;\n+       long i12458;\n+       long i12459;\n+       long i12460;\n+       long i12461;\n+       long i12462;\n+       long i12463;\n+       long i12464;\n+       long i12465;\n+       long i12466;\n+       long i12467;\n+       long i12468;\n+       long i12469;\n+       long i12470;\n+       long i12471;\n+       long i12472;\n+       long i12473;\n+       long i12474;\n+       long i12475;\n+       long i12476;\n+       long i12477;\n+       long i12478;\n+       long i12479;\n+       long i12480;\n+       long i12481;\n+       long i12482;\n+       long i12483;\n+       long i12484;\n+       long i12485;\n+       long i12486;\n+       long i12487;\n+       long i12488;\n+       long i12489;\n+       long i12490;\n+       long i12491;\n+       long i12492;\n+       long i12493;\n+       long i12494;\n+       long i12495;\n+       long i12496;\n+       long i12497;\n+       long i12498;\n+       long i12499;\n+       long i12500;\n+       long i12501;\n+       long i12502;\n+       long i12503;\n+       long i12504;\n+       long i12505;\n+       long i12506;\n+       long i12507;\n+       long i12508;\n+       long i12509;\n+       long i12510;\n+       long i12511;\n+       long i12512;\n+       long i12513;\n+       long i12514;\n+       long i12515;\n+       long i12516;\n+       long i12517;\n+       long i12518;\n+       long i12519;\n+       long i12520;\n+       long i12521;\n+       long i12522;\n+       long i12523;\n+       long i12524;\n+       long i12525;\n+       long i12526;\n+       long i12527;\n+       long i12528;\n+       long i12529;\n+       long i12530;\n+       long i12531;\n+       long i12532;\n+       long i12533;\n+       long i12534;\n+       long i12535;\n+       long i12536;\n+       long i12537;\n+       long i12538;\n+       long i12539;\n+       long i12540;\n+       long i12541;\n+       long i12542;\n+       long i12543;\n+       long i12544;\n+       long i12545;\n+       long i12546;\n+       long i12547;\n+       long i12548;\n+       long i12549;\n+       long i12550;\n+       long i12551;\n+       long i12552;\n+       long i12553;\n+       long i12554;\n+       long i12555;\n+       long i12556;\n+       long i12557;\n+       long i12558;\n+       long i12559;\n+       long i12560;\n+       long i12561;\n+       long i12562;\n+       long i12563;\n+       long i12564;\n+       long i12565;\n+       long i12566;\n+       long i12567;\n+       long i12568;\n+       long i12569;\n+       long i12570;\n+       long i12571;\n+       long i12572;\n+       long i12573;\n+       long i12574;\n+       long i12575;\n+       long i12576;\n+       long i12577;\n+       long i12578;\n+       long i12579;\n+       long i12580;\n+       long i12581;\n+       long i12582;\n+       long i12583;\n+       long i12584;\n+       long i12585;\n+       long i12586;\n+       long i12587;\n+       long i12588;\n+       long i12589;\n+       long i12590;\n+       long i12591;\n+       long i12592;\n+       long i12593;\n+       long i12594;\n+       long i12595;\n+       long i12596;\n+       long i12597;\n+       long i12598;\n+       long i12599;\n+       long i12600;\n+       long i12601;\n+       long i12602;\n+       long i12603;\n+       long i12604;\n+       long i12605;\n+       long i12606;\n+       long i12607;\n+       long i12608;\n+       long i12609;\n+       long i12610;\n+       long i12611;\n+       long i12612;\n+       long i12613;\n+       long i12614;\n+       long i12615;\n+       long i12616;\n+       long i12617;\n+       long i12618;\n+       long i12619;\n+       long i12620;\n+       long i12621;\n+       long i12622;\n+       long i12623;\n+       long i12624;\n+       long i12625;\n+       long i12626;\n+       long i12627;\n+       long i12628;\n+       long i12629;\n+       long i12630;\n+       long i12631;\n+       long i12632;\n+       long i12633;\n+       long i12634;\n+       long i12635;\n+       long i12636;\n+       long i12637;\n+       long i12638;\n+       long i12639;\n+       long i12640;\n+       long i12641;\n+       long i12642;\n+       long i12643;\n+       long i12644;\n+       long i12645;\n+       long i12646;\n+       long i12647;\n+       long i12648;\n+       long i12649;\n+       long i12650;\n+       long i12651;\n+       long i12652;\n+       long i12653;\n+       long i12654;\n+       long i12655;\n+       long i12656;\n+       long i12657;\n+       long i12658;\n+       long i12659;\n+       long i12660;\n+       long i12661;\n+       long i12662;\n+       long i12663;\n+       long i12664;\n+       long i12665;\n+       long i12666;\n+       long i12667;\n+       long i12668;\n+       long i12669;\n+       long i12670;\n+       long i12671;\n+       long i12672;\n+       long i12673;\n+       long i12674;\n+       long i12675;\n+       long i12676;\n+       long i12677;\n+       long i12678;\n+       long i12679;\n+       long i12680;\n+       long i12681;\n+       long i12682;\n+       long i12683;\n+       long i12684;\n+       long i12685;\n+       long i12686;\n+       long i12687;\n+       long i12688;\n+       long i12689;\n+       long i12690;\n+       long i12691;\n+       long i12692;\n+       long i12693;\n+       long i12694;\n+       long i12695;\n+       long i12696;\n+       long i12697;\n+       long i12698;\n+       long i12699;\n+       long i12700;\n+       long i12701;\n+       long i12702;\n+       long i12703;\n+       long i12704;\n+       long i12705;\n+       long i12706;\n+       long i12707;\n+       long i12708;\n+       long i12709;\n+       long i12710;\n+       long i12711;\n+       long i12712;\n+       long i12713;\n+       long i12714;\n+       long i12715;\n+       long i12716;\n+       long i12717;\n+       long i12718;\n+       long i12719;\n+       long i12720;\n+       long i12721;\n+       long i12722;\n+       long i12723;\n+       long i12724;\n+       long i12725;\n+       long i12726;\n+       long i12727;\n+       long i12728;\n+       long i12729;\n+       long i12730;\n+       long i12731;\n+       long i12732;\n+       long i12733;\n+       long i12734;\n+       long i12735;\n+       long i12736;\n+       long i12737;\n+       long i12738;\n+       long i12739;\n+       long i12740;\n+       long i12741;\n+       long i12742;\n+       long i12743;\n+       long i12744;\n+       long i12745;\n+       long i12746;\n+       long i12747;\n+       long i12748;\n+       long i12749;\n+       long i12750;\n+       long i12751;\n+       long i12752;\n+       long i12753;\n+       long i12754;\n+       long i12755;\n+       long i12756;\n+       long i12757;\n+       long i12758;\n+       long i12759;\n+       long i12760;\n+       long i12761;\n+       long i12762;\n+       long i12763;\n+       long i12764;\n+       long i12765;\n+       long i12766;\n+       long i12767;\n+       long i12768;\n+       long i12769;\n+       long i12770;\n+       long i12771;\n+       long i12772;\n+       long i12773;\n+       long i12774;\n+       long i12775;\n+       long i12776;\n+       long i12777;\n+       long i12778;\n+       long i12779;\n+       long i12780;\n+       long i12781;\n+       long i12782;\n+       long i12783;\n+       long i12784;\n+       long i12785;\n+       long i12786;\n+       long i12787;\n+       long i12788;\n+       long i12789;\n+       long i12790;\n+       long i12791;\n+       long i12792;\n+       long i12793;\n+       long i12794;\n+       long i12795;\n+       long i12796;\n+       long i12797;\n+       long i12798;\n+       long i12799;\n+       long i12800;\n+       long i12801;\n+       long i12802;\n+       long i12803;\n+       long i12804;\n+       long i12805;\n+       long i12806;\n+       long i12807;\n+       long i12808;\n+       long i12809;\n+       long i12810;\n+       long i12811;\n+       long i12812;\n+       long i12813;\n+       long i12814;\n+       long i12815;\n+       long i12816;\n+       long i12817;\n+       long i12818;\n+       long i12819;\n+       long i12820;\n+       long i12821;\n+       long i12822;\n+       long i12823;\n+       long i12824;\n+       long i12825;\n+       long i12826;\n+       long i12827;\n+       long i12828;\n+       long i12829;\n+       long i12830;\n+       long i12831;\n+       long i12832;\n+       long i12833;\n+       long i12834;\n+       long i12835;\n+       long i12836;\n+       long i12837;\n+       long i12838;\n+       long i12839;\n+       long i12840;\n+       long i12841;\n+       long i12842;\n+       long i12843;\n+       long i12844;\n+       long i12845;\n+       long i12846;\n+       long i12847;\n+       long i12848;\n+       long i12849;\n+       long i12850;\n+       long i12851;\n+       long i12852;\n+       long i12853;\n+       long i12854;\n+       long i12855;\n+       long i12856;\n+       long i12857;\n+       long i12858;\n+       long i12859;\n+       long i12860;\n+       long i12861;\n+       long i12862;\n+       long i12863;\n+       long i12864;\n+       long i12865;\n+       long i12866;\n+       long i12867;\n+       long i12868;\n+       long i12869;\n+       long i12870;\n+       long i12871;\n+       long i12872;\n+       long i12873;\n+       long i12874;\n+       long i12875;\n+       long i12876;\n+       long i12877;\n+       long i12878;\n+       long i12879;\n+       long i12880;\n+       long i12881;\n+       long i12882;\n+       long i12883;\n+       long i12884;\n+       long i12885;\n+       long i12886;\n+       long i12887;\n+       long i12888;\n+       long i12889;\n+       long i12890;\n+       long i12891;\n+       long i12892;\n+       long i12893;\n+       long i12894;\n+       long i12895;\n+       long i12896;\n+       long i12897;\n+       long i12898;\n+       long i12899;\n+       long i12900;\n+       long i12901;\n+       long i12902;\n+       long i12903;\n+       long i12904;\n+       long i12905;\n+       long i12906;\n+       long i12907;\n+       long i12908;\n+       long i12909;\n+       long i12910;\n+       long i12911;\n+       long i12912;\n+       long i12913;\n+       long i12914;\n+       long i12915;\n+       long i12916;\n+       long i12917;\n+       long i12918;\n+       long i12919;\n+       long i12920;\n+       long i12921;\n+       long i12922;\n+       long i12923;\n+       long i12924;\n+       long i12925;\n+       long i12926;\n+       long i12927;\n+       long i12928;\n+       long i12929;\n+       long i12930;\n+       long i12931;\n+       long i12932;\n+       long i12933;\n+       long i12934;\n+       long i12935;\n+       long i12936;\n+       long i12937;\n+       long i12938;\n+       long i12939;\n+       long i12940;\n+       long i12941;\n+       long i12942;\n+       long i12943;\n+       long i12944;\n+       long i12945;\n+       long i12946;\n+       long i12947;\n+       long i12948;\n+       long i12949;\n+       long i12950;\n+       long i12951;\n+       long i12952;\n+       long i12953;\n+       long i12954;\n+       long i12955;\n+       long i12956;\n+       long i12957;\n+       long i12958;\n+       long i12959;\n+       long i12960;\n+       long i12961;\n+       long i12962;\n+       long i12963;\n+       long i12964;\n+       long i12965;\n+       long i12966;\n+       long i12967;\n+       long i12968;\n+       long i12969;\n+       long i12970;\n+       long i12971;\n+       long i12972;\n+       long i12973;\n+       long i12974;\n+       long i12975;\n+       long i12976;\n+       long i12977;\n+       long i12978;\n+       long i12979;\n+       long i12980;\n+       long i12981;\n+       long i12982;\n+       long i12983;\n+       long i12984;\n+       long i12985;\n+       long i12986;\n+       long i12987;\n+       long i12988;\n+       long i12989;\n+       long i12990;\n+       long i12991;\n+       long i12992;\n+       long i12993;\n+       long i12994;\n+       long i12995;\n+       long i12996;\n+       long i12997;\n+       long i12998;\n+       long i12999;\n+       long i13000;\n+       long i13001;\n+       long i13002;\n+       long i13003;\n+       long i13004;\n+       long i13005;\n+       long i13006;\n+       long i13007;\n+       long i13008;\n+       long i13009;\n+       long i13010;\n+       long i13011;\n+       long i13012;\n+       long i13013;\n+       long i13014;\n+       long i13015;\n+       long i13016;\n+       long i13017;\n+       long i13018;\n+       long i13019;\n+       long i13020;\n+       long i13021;\n+       long i13022;\n+       long i13023;\n+       long i13024;\n+       long i13025;\n+       long i13026;\n+       long i13027;\n+       long i13028;\n+       long i13029;\n+       long i13030;\n+       long i13031;\n+       long i13032;\n+       long i13033;\n+       long i13034;\n+       long i13035;\n+       long i13036;\n+       long i13037;\n+       long i13038;\n+       long i13039;\n+       long i13040;\n+       long i13041;\n+       long i13042;\n+       long i13043;\n+       long i13044;\n+       long i13045;\n+       long i13046;\n+       long i13047;\n+       long i13048;\n+       long i13049;\n+       long i13050;\n+       long i13051;\n+       long i13052;\n+       long i13053;\n+       long i13054;\n+       long i13055;\n+       long i13056;\n+       long i13057;\n+       long i13058;\n+       long i13059;\n+       long i13060;\n+       long i13061;\n+       long i13062;\n+       long i13063;\n+       long i13064;\n+       long i13065;\n+       long i13066;\n+       long i13067;\n+       long i13068;\n+       long i13069;\n+       long i13070;\n+       long i13071;\n+       long i13072;\n+       long i13073;\n+       long i13074;\n+       long i13075;\n+       long i13076;\n+       long i13077;\n+       long i13078;\n+       long i13079;\n+       long i13080;\n+       long i13081;\n+       long i13082;\n+       long i13083;\n+       long i13084;\n+       long i13085;\n+       long i13086;\n+       long i13087;\n+       long i13088;\n+       long i13089;\n+       long i13090;\n+       long i13091;\n+       long i13092;\n+       long i13093;\n+       long i13094;\n+       long i13095;\n+       long i13096;\n+       long i13097;\n+       long i13098;\n+       long i13099;\n+       long i13100;\n+       long i13101;\n+       long i13102;\n+       long i13103;\n+       long i13104;\n+       long i13105;\n+       long i13106;\n+       long i13107;\n+       long i13108;\n+       long i13109;\n+       long i13110;\n+       long i13111;\n+       long i13112;\n+       long i13113;\n+       long i13114;\n+       long i13115;\n+       long i13116;\n+       long i13117;\n+       long i13118;\n+       long i13119;\n+       long i13120;\n+       long i13121;\n+       long i13122;\n+       long i13123;\n+       long i13124;\n+       long i13125;\n+       long i13126;\n+       long i13127;\n+       long i13128;\n+       long i13129;\n+       long i13130;\n+       long i13131;\n+       long i13132;\n+       long i13133;\n+       long i13134;\n+       long i13135;\n+       long i13136;\n+       long i13137;\n+       long i13138;\n+       long i13139;\n+       long i13140;\n+       long i13141;\n+       long i13142;\n+       long i13143;\n+       long i13144;\n+       long i13145;\n+       long i13146;\n+       long i13147;\n+       long i13148;\n+       long i13149;\n+       long i13150;\n+       long i13151;\n+       long i13152;\n+       long i13153;\n+       long i13154;\n+       long i13155;\n+       long i13156;\n+       long i13157;\n+       long i13158;\n+       long i13159;\n+       long i13160;\n+       long i13161;\n+       long i13162;\n+       long i13163;\n+       long i13164;\n+       long i13165;\n+       long i13166;\n+       long i13167;\n+       long i13168;\n+       long i13169;\n+       long i13170;\n+       long i13171;\n+       long i13172;\n+       long i13173;\n+       long i13174;\n+       long i13175;\n+       long i13176;\n+       long i13177;\n+       long i13178;\n+       long i13179;\n+       long i13180;\n+       long i13181;\n+       long i13182;\n+       long i13183;\n+       long i13184;\n+       long i13185;\n+       long i13186;\n+       long i13187;\n+       long i13188;\n+       long i13189;\n+       long i13190;\n+       long i13191;\n+       long i13192;\n+       long i13193;\n+       long i13194;\n+       long i13195;\n+       long i13196;\n+       long i13197;\n+       long i13198;\n+       long i13199;\n+       long i13200;\n+       long i13201;\n+       long i13202;\n+       long i13203;\n+       long i13204;\n+       long i13205;\n+       long i13206;\n+       long i13207;\n+       long i13208;\n+       long i13209;\n+       long i13210;\n+       long i13211;\n+       long i13212;\n+       long i13213;\n+       long i13214;\n+       long i13215;\n+       long i13216;\n+       long i13217;\n+       long i13218;\n+       long i13219;\n+       long i13220;\n+       long i13221;\n+       long i13222;\n+       long i13223;\n+       long i13224;\n+       long i13225;\n+       long i13226;\n+       long i13227;\n+       long i13228;\n+       long i13229;\n+       long i13230;\n+       long i13231;\n+       long i13232;\n+       long i13233;\n+       long i13234;\n+       long i13235;\n+       long i13236;\n+       long i13237;\n+       long i13238;\n+       long i13239;\n+       long i13240;\n+       long i13241;\n+       long i13242;\n+       long i13243;\n+       long i13244;\n+       long i13245;\n+       long i13246;\n+       long i13247;\n+       long i13248;\n+       long i13249;\n+       long i13250;\n+       long i13251;\n+       long i13252;\n+       long i13253;\n+       long i13254;\n+       long i13255;\n+       long i13256;\n+       long i13257;\n+       long i13258;\n+       long i13259;\n+       long i13260;\n+       long i13261;\n+       long i13262;\n+       long i13263;\n+       long i13264;\n+       long i13265;\n+       long i13266;\n+       long i13267;\n+       long i13268;\n+       long i13269;\n+       long i13270;\n+       long i13271;\n+       long i13272;\n+       long i13273;\n+       long i13274;\n+       long i13275;\n+       long i13276;\n+       long i13277;\n+       long i13278;\n+       long i13279;\n+       long i13280;\n+       long i13281;\n+       long i13282;\n+       long i13283;\n+       long i13284;\n+       long i13285;\n+       long i13286;\n+       long i13287;\n+       long i13288;\n+       long i13289;\n+       long i13290;\n+       long i13291;\n+       long i13292;\n+       long i13293;\n+       long i13294;\n+       long i13295;\n+       long i13296;\n+       long i13297;\n+       long i13298;\n+       long i13299;\n+       long i13300;\n+       long i13301;\n+       long i13302;\n+       long i13303;\n+       long i13304;\n+       long i13305;\n+       long i13306;\n+       long i13307;\n+       long i13308;\n+       long i13309;\n+       long i13310;\n+       long i13311;\n+       long i13312;\n+       long i13313;\n+       long i13314;\n+       long i13315;\n+       long i13316;\n+       long i13317;\n+       long i13318;\n+       long i13319;\n+       long i13320;\n+       long i13321;\n+       long i13322;\n+       long i13323;\n+       long i13324;\n+       long i13325;\n+       long i13326;\n+       long i13327;\n+       long i13328;\n+       long i13329;\n+       long i13330;\n+       long i13331;\n+       long i13332;\n+       long i13333;\n+       long i13334;\n+       long i13335;\n+       long i13336;\n+       long i13337;\n+       long i13338;\n+       long i13339;\n+       long i13340;\n+       long i13341;\n+       long i13342;\n+       long i13343;\n+       long i13344;\n+       long i13345;\n+       long i13346;\n+       long i13347;\n+       long i13348;\n+       long i13349;\n+       long i13350;\n+       long i13351;\n+       long i13352;\n+       long i13353;\n+       long i13354;\n+       long i13355;\n+       long i13356;\n+       long i13357;\n+       long i13358;\n+       long i13359;\n+       long i13360;\n+       long i13361;\n+       long i13362;\n+       long i13363;\n+       long i13364;\n+       long i13365;\n+       long i13366;\n+       long i13367;\n+       long i13368;\n+       long i13369;\n+       long i13370;\n+       long i13371;\n+       long i13372;\n+       long i13373;\n+       long i13374;\n+       long i13375;\n+       long i13376;\n+       long i13377;\n+       long i13378;\n+       long i13379;\n+       long i13380;\n+       long i13381;\n+       long i13382;\n+       long i13383;\n+       long i13384;\n+       long i13385;\n+       long i13386;\n+       long i13387;\n+       long i13388;\n+       long i13389;\n+       long i13390;\n+       long i13391;\n+       long i13392;\n+       long i13393;\n+       long i13394;\n+       long i13395;\n+       long i13396;\n+       long i13397;\n+       long i13398;\n+       long i13399;\n+       long i13400;\n+       long i13401;\n+       long i13402;\n+       long i13403;\n+       long i13404;\n+       long i13405;\n+       long i13406;\n+       long i13407;\n+       long i13408;\n+       long i13409;\n+       long i13410;\n+       long i13411;\n+       long i13412;\n+       long i13413;\n+       long i13414;\n+       long i13415;\n+       long i13416;\n+       long i13417;\n+       long i13418;\n+       long i13419;\n+       long i13420;\n+       long i13421;\n+       long i13422;\n+       long i13423;\n+       long i13424;\n+       long i13425;\n+       long i13426;\n+       long i13427;\n+       long i13428;\n+       long i13429;\n+       long i13430;\n+       long i13431;\n+       long i13432;\n+       long i13433;\n+       long i13434;\n+       long i13435;\n+       long i13436;\n+       long i13437;\n+       long i13438;\n+       long i13439;\n+       long i13440;\n+       long i13441;\n+       long i13442;\n+       long i13443;\n+       long i13444;\n+       long i13445;\n+       long i13446;\n+       long i13447;\n+       long i13448;\n+       long i13449;\n+       long i13450;\n+       long i13451;\n+       long i13452;\n+       long i13453;\n+       long i13454;\n+       long i13455;\n+       long i13456;\n+       long i13457;\n+       long i13458;\n+       long i13459;\n+       long i13460;\n+       long i13461;\n+       long i13462;\n+       long i13463;\n+       long i13464;\n+       long i13465;\n+       long i13466;\n+       long i13467;\n+       long i13468;\n+       long i13469;\n+       long i13470;\n+       long i13471;\n+       long i13472;\n+       long i13473;\n+       long i13474;\n+       long i13475;\n+       long i13476;\n+       long i13477;\n+       long i13478;\n+       long i13479;\n+       long i13480;\n+       long i13481;\n+       long i13482;\n+       long i13483;\n+       long i13484;\n+       long i13485;\n+       long i13486;\n+       long i13487;\n+       long i13488;\n+       long i13489;\n+       long i13490;\n+       long i13491;\n+       long i13492;\n+       long i13493;\n+       long i13494;\n+       long i13495;\n+       long i13496;\n+       long i13497;\n+       long i13498;\n+       long i13499;\n+       long i13500;\n+       long i13501;\n+       long i13502;\n+       long i13503;\n+       long i13504;\n+       long i13505;\n+       long i13506;\n+       long i13507;\n+       long i13508;\n+       long i13509;\n+       long i13510;\n+       long i13511;\n+       long i13512;\n+       long i13513;\n+       long i13514;\n+       long i13515;\n+       long i13516;\n+       long i13517;\n+       long i13518;\n+       long i13519;\n+       long i13520;\n+       long i13521;\n+       long i13522;\n+       long i13523;\n+       long i13524;\n+       long i13525;\n+       long i13526;\n+       long i13527;\n+       long i13528;\n+       long i13529;\n+       long i13530;\n+       long i13531;\n+       long i13532;\n+       long i13533;\n+       long i13534;\n+       long i13535;\n+       long i13536;\n+       long i13537;\n+       long i13538;\n+       long i13539;\n+       long i13540;\n+       long i13541;\n+       long i13542;\n+       long i13543;\n+       long i13544;\n+       long i13545;\n+       long i13546;\n+       long i13547;\n+       long i13548;\n+       long i13549;\n+       long i13550;\n+       long i13551;\n+       long i13552;\n+       long i13553;\n+       long i13554;\n+       long i13555;\n+       long i13556;\n+       long i13557;\n+       long i13558;\n+       long i13559;\n+       long i13560;\n+       long i13561;\n+       long i13562;\n+       long i13563;\n+       long i13564;\n+       long i13565;\n+       long i13566;\n+       long i13567;\n+       long i13568;\n+       long i13569;\n+       long i13570;\n+       long i13571;\n+       long i13572;\n+       long i13573;\n+       long i13574;\n+       long i13575;\n+       long i13576;\n+       long i13577;\n+       long i13578;\n+       long i13579;\n+       long i13580;\n+       long i13581;\n+       long i13582;\n+       long i13583;\n+       long i13584;\n+       long i13585;\n+       long i13586;\n+       long i13587;\n+       long i13588;\n+       long i13589;\n+       long i13590;\n+       long i13591;\n+       long i13592;\n+       long i13593;\n+       long i13594;\n+       long i13595;\n+       long i13596;\n+       long i13597;\n+       long i13598;\n+       long i13599;\n+       long i13600;\n+       long i13601;\n+       long i13602;\n+       long i13603;\n+       long i13604;\n+       long i13605;\n+       long i13606;\n+       long i13607;\n+       long i13608;\n+       long i13609;\n+       long i13610;\n+       long i13611;\n+       long i13612;\n+       long i13613;\n+       long i13614;\n+       long i13615;\n+       long i13616;\n+       long i13617;\n+       long i13618;\n+       long i13619;\n+       long i13620;\n+       long i13621;\n+       long i13622;\n+       long i13623;\n+       long i13624;\n+       long i13625;\n+       long i13626;\n+       long i13627;\n+       long i13628;\n+       long i13629;\n+       long i13630;\n+       long i13631;\n+       long i13632;\n+       long i13633;\n+       long i13634;\n+       long i13635;\n+       long i13636;\n+       long i13637;\n+       long i13638;\n+       long i13639;\n+       long i13640;\n+       long i13641;\n+       long i13642;\n+       long i13643;\n+       long i13644;\n+       long i13645;\n+       long i13646;\n+       long i13647;\n+       long i13648;\n+       long i13649;\n+       long i13650;\n+       long i13651;\n+       long i13652;\n+       long i13653;\n+       long i13654;\n+       long i13655;\n+       long i13656;\n+       long i13657;\n+       long i13658;\n+       long i13659;\n+       long i13660;\n+       long i13661;\n+       long i13662;\n+       long i13663;\n+       long i13664;\n+       long i13665;\n+       long i13666;\n+       long i13667;\n+       long i13668;\n+       long i13669;\n+       long i13670;\n+       long i13671;\n+       long i13672;\n+       long i13673;\n+       long i13674;\n+       long i13675;\n+       long i13676;\n+       long i13677;\n+       long i13678;\n+       long i13679;\n+       long i13680;\n+       long i13681;\n+       long i13682;\n+       long i13683;\n+       long i13684;\n+       long i13685;\n+       long i13686;\n+       long i13687;\n+       long i13688;\n+       long i13689;\n+       long i13690;\n+       long i13691;\n+       long i13692;\n+       long i13693;\n+       long i13694;\n+       long i13695;\n+       long i13696;\n+       long i13697;\n+       long i13698;\n+       long i13699;\n+       long i13700;\n+       long i13701;\n+       long i13702;\n+       long i13703;\n+       long i13704;\n+       long i13705;\n+       long i13706;\n+       long i13707;\n+       long i13708;\n+       long i13709;\n+       long i13710;\n+       long i13711;\n+       long i13712;\n+       long i13713;\n+       long i13714;\n+       long i13715;\n+       long i13716;\n+       long i13717;\n+       long i13718;\n+       long i13719;\n+       long i13720;\n+       long i13721;\n+       long i13722;\n+       long i13723;\n+       long i13724;\n+       long i13725;\n+       long i13726;\n+       long i13727;\n+       long i13728;\n+       long i13729;\n+       long i13730;\n+       long i13731;\n+       long i13732;\n+       long i13733;\n+       long i13734;\n+       long i13735;\n+       long i13736;\n+       long i13737;\n+       long i13738;\n+       long i13739;\n+       long i13740;\n+       long i13741;\n+       long i13742;\n+       long i13743;\n+       long i13744;\n+       long i13745;\n+       long i13746;\n+       long i13747;\n+       long i13748;\n+       long i13749;\n+       long i13750;\n+       long i13751;\n+       long i13752;\n+       long i13753;\n+       long i13754;\n+       long i13755;\n+       long i13756;\n+       long i13757;\n+       long i13758;\n+       long i13759;\n+       long i13760;\n+       long i13761;\n+       long i13762;\n+       long i13763;\n+       long i13764;\n+       long i13765;\n+       long i13766;\n+       long i13767;\n+       long i13768;\n+       long i13769;\n+       long i13770;\n+       long i13771;\n+       long i13772;\n+       long i13773;\n+       long i13774;\n+       long i13775;\n+       long i13776;\n+       long i13777;\n+       long i13778;\n+       long i13779;\n+       long i13780;\n+       long i13781;\n+       long i13782;\n+       long i13783;\n+       long i13784;\n+       long i13785;\n+       long i13786;\n+       long i13787;\n+       long i13788;\n+       long i13789;\n+       long i13790;\n+       long i13791;\n+       long i13792;\n+       long i13793;\n+       long i13794;\n+       long i13795;\n+       long i13796;\n+       long i13797;\n+       long i13798;\n+       long i13799;\n+       long i13800;\n+       long i13801;\n+       long i13802;\n+       long i13803;\n+       long i13804;\n+       long i13805;\n+       long i13806;\n+       long i13807;\n+       long i13808;\n+       long i13809;\n+       long i13810;\n+       long i13811;\n+       long i13812;\n+       long i13813;\n+       long i13814;\n+       long i13815;\n+       long i13816;\n+       long i13817;\n+       long i13818;\n+       long i13819;\n+       long i13820;\n+       long i13821;\n+       long i13822;\n+       long i13823;\n+       long i13824;\n+       long i13825;\n+       long i13826;\n+       long i13827;\n+       long i13828;\n+       long i13829;\n+       long i13830;\n+       long i13831;\n+       long i13832;\n+       long i13833;\n+       long i13834;\n+       long i13835;\n+       long i13836;\n+       long i13837;\n+       long i13838;\n+       long i13839;\n+       long i13840;\n+       long i13841;\n+       long i13842;\n+       long i13843;\n+       long i13844;\n+       long i13845;\n+       long i13846;\n+       long i13847;\n+       long i13848;\n+       long i13849;\n+       long i13850;\n+       long i13851;\n+       long i13852;\n+       long i13853;\n+       long i13854;\n+       long i13855;\n+       long i13856;\n+       long i13857;\n+       long i13858;\n+       long i13859;\n+       long i13860;\n+       long i13861;\n+       long i13862;\n+       long i13863;\n+       long i13864;\n+       long i13865;\n+       long i13866;\n+       long i13867;\n+       long i13868;\n+       long i13869;\n+       long i13870;\n+       long i13871;\n+       long i13872;\n+       long i13873;\n+       long i13874;\n+       long i13875;\n+       long i13876;\n+       long i13877;\n+       long i13878;\n+       long i13879;\n+       long i13880;\n+       long i13881;\n+       long i13882;\n+       long i13883;\n+       long i13884;\n+       long i13885;\n+       long i13886;\n+       long i13887;\n+       long i13888;\n+       long i13889;\n+       long i13890;\n+       long i13891;\n+       long i13892;\n+       long i13893;\n+       long i13894;\n+       long i13895;\n+       long i13896;\n+       long i13897;\n+       long i13898;\n+       long i13899;\n+       long i13900;\n+       long i13901;\n+       long i13902;\n+       long i13903;\n+       long i13904;\n+       long i13905;\n+       long i13906;\n+       long i13907;\n+       long i13908;\n+       long i13909;\n+       long i13910;\n+       long i13911;\n+       long i13912;\n+       long i13913;\n+       long i13914;\n+       long i13915;\n+       long i13916;\n+       long i13917;\n+       long i13918;\n+       long i13919;\n+       long i13920;\n+       long i13921;\n+       long i13922;\n+       long i13923;\n+       long i13924;\n+       long i13925;\n+       long i13926;\n+       long i13927;\n+       long i13928;\n+       long i13929;\n+       long i13930;\n+       long i13931;\n+       long i13932;\n+       long i13933;\n+       long i13934;\n+       long i13935;\n+       long i13936;\n+       long i13937;\n+       long i13938;\n+       long i13939;\n+       long i13940;\n+       long i13941;\n+       long i13942;\n+       long i13943;\n+       long i13944;\n+       long i13945;\n+       long i13946;\n+       long i13947;\n+       long i13948;\n+       long i13949;\n+       long i13950;\n+       long i13951;\n+       long i13952;\n+       long i13953;\n+       long i13954;\n+       long i13955;\n+       long i13956;\n+       long i13957;\n+       long i13958;\n+       long i13959;\n+       long i13960;\n+       long i13961;\n+       long i13962;\n+       long i13963;\n+       long i13964;\n+       long i13965;\n+       long i13966;\n+       long i13967;\n+       long i13968;\n+       long i13969;\n+       long i13970;\n+       long i13971;\n+       long i13972;\n+       long i13973;\n+       long i13974;\n+       long i13975;\n+       long i13976;\n+       long i13977;\n+       long i13978;\n+       long i13979;\n+       long i13980;\n+       long i13981;\n+       long i13982;\n+       long i13983;\n+       long i13984;\n+       long i13985;\n+       long i13986;\n+       long i13987;\n+       long i13988;\n+       long i13989;\n+       long i13990;\n+       long i13991;\n+       long i13992;\n+       long i13993;\n+       long i13994;\n+       long i13995;\n+       long i13996;\n+       long i13997;\n+       long i13998;\n+       long i13999;\n+       long i14000;\n+       long i14001;\n+       long i14002;\n+       long i14003;\n+       long i14004;\n+       long i14005;\n+       long i14006;\n+       long i14007;\n+       long i14008;\n+       long i14009;\n+       long i14010;\n+       long i14011;\n+       long i14012;\n+       long i14013;\n+       long i14014;\n+       long i14015;\n+       long i14016;\n+       long i14017;\n+       long i14018;\n+       long i14019;\n+       long i14020;\n+       long i14021;\n+       long i14022;\n+       long i14023;\n+       long i14024;\n+       long i14025;\n+       long i14026;\n+       long i14027;\n+       long i14028;\n+       long i14029;\n+       long i14030;\n+       long i14031;\n+       long i14032;\n+       long i14033;\n+       long i14034;\n+       long i14035;\n+       long i14036;\n+       long i14037;\n+       long i14038;\n+       long i14039;\n+       long i14040;\n+       long i14041;\n+       long i14042;\n+       long i14043;\n+       long i14044;\n+       long i14045;\n+       long i14046;\n+       long i14047;\n+       long i14048;\n+       long i14049;\n+       long i14050;\n+       long i14051;\n+       long i14052;\n+       long i14053;\n+       long i14054;\n+       long i14055;\n+       long i14056;\n+       long i14057;\n+       long i14058;\n+       long i14059;\n+       long i14060;\n+       long i14061;\n+       long i14062;\n+       long i14063;\n+       long i14064;\n+       long i14065;\n+       long i14066;\n+       long i14067;\n+       long i14068;\n+       long i14069;\n+       long i14070;\n+       long i14071;\n+       long i14072;\n+       long i14073;\n+       long i14074;\n+       long i14075;\n+       long i14076;\n+       long i14077;\n+       long i14078;\n+       long i14079;\n+       long i14080;\n+       long i14081;\n+       long i14082;\n+       long i14083;\n+       long i14084;\n+       long i14085;\n+       long i14086;\n+       long i14087;\n+       long i14088;\n+       long i14089;\n+       long i14090;\n+       long i14091;\n+       long i14092;\n+       long i14093;\n+       long i14094;\n+       long i14095;\n+       long i14096;\n+       long i14097;\n+       long i14098;\n+       long i14099;\n+       long i14100;\n+       long i14101;\n+       long i14102;\n+       long i14103;\n+       long i14104;\n+       long i14105;\n+       long i14106;\n+       long i14107;\n+       long i14108;\n+       long i14109;\n+       long i14110;\n+       long i14111;\n+       long i14112;\n+       long i14113;\n+       long i14114;\n+       long i14115;\n+       long i14116;\n+       long i14117;\n+       long i14118;\n+       long i14119;\n+       long i14120;\n+       long i14121;\n+       long i14122;\n+       long i14123;\n+       long i14124;\n+       long i14125;\n+       long i14126;\n+       long i14127;\n+       long i14128;\n+       long i14129;\n+       long i14130;\n+       long i14131;\n+       long i14132;\n+       long i14133;\n+       long i14134;\n+       long i14135;\n+       long i14136;\n+       long i14137;\n+       long i14138;\n+       long i14139;\n+       long i14140;\n+       long i14141;\n+       long i14142;\n+       long i14143;\n+       long i14144;\n+       long i14145;\n+       long i14146;\n+       long i14147;\n+       long i14148;\n+       long i14149;\n+       long i14150;\n+       long i14151;\n+       long i14152;\n+       long i14153;\n+       long i14154;\n+       long i14155;\n+       long i14156;\n+       long i14157;\n+       long i14158;\n+       long i14159;\n+       long i14160;\n+       long i14161;\n+       long i14162;\n+       long i14163;\n+       long i14164;\n+       long i14165;\n+       long i14166;\n+       long i14167;\n+       long i14168;\n+       long i14169;\n+       long i14170;\n+       long i14171;\n+       long i14172;\n+       long i14173;\n+       long i14174;\n+       long i14175;\n+       long i14176;\n+       long i14177;\n+       long i14178;\n+       long i14179;\n+       long i14180;\n+       long i14181;\n+       long i14182;\n+       long i14183;\n+       long i14184;\n+       long i14185;\n+       long i14186;\n+       long i14187;\n+       long i14188;\n+       long i14189;\n+       long i14190;\n+       long i14191;\n+       long i14192;\n+       long i14193;\n+       long i14194;\n+       long i14195;\n+       long i14196;\n+       long i14197;\n+       long i14198;\n+       long i14199;\n+       long i14200;\n+       long i14201;\n+       long i14202;\n+       long i14203;\n+       long i14204;\n+       long i14205;\n+       long i14206;\n+       long i14207;\n+       long i14208;\n+       long i14209;\n+       long i14210;\n+       long i14211;\n+       long i14212;\n+       long i14213;\n+       long i14214;\n+       long i14215;\n+       long i14216;\n+       long i14217;\n+       long i14218;\n+       long i14219;\n+       long i14220;\n+       long i14221;\n+       long i14222;\n+       long i14223;\n+       long i14224;\n+       long i14225;\n+       long i14226;\n+       long i14227;\n+       long i14228;\n+       long i14229;\n+       long i14230;\n+       long i14231;\n+       long i14232;\n+       long i14233;\n+       long i14234;\n+       long i14235;\n+       long i14236;\n+       long i14237;\n+       long i14238;\n+       long i14239;\n+       long i14240;\n+       long i14241;\n+       long i14242;\n+       long i14243;\n+       long i14244;\n+       long i14245;\n+       long i14246;\n+       long i14247;\n+       long i14248;\n+       long i14249;\n+       long i14250;\n+       long i14251;\n+       long i14252;\n+       long i14253;\n+       long i14254;\n+       long i14255;\n+       long i14256;\n+       long i14257;\n+       long i14258;\n+       long i14259;\n+       long i14260;\n+       long i14261;\n+       long i14262;\n+       long i14263;\n+       long i14264;\n+       long i14265;\n+       long i14266;\n+       long i14267;\n+       long i14268;\n+       long i14269;\n+       long i14270;\n+       long i14271;\n+       long i14272;\n+       long i14273;\n+       long i14274;\n+       long i14275;\n+       long i14276;\n+       long i14277;\n+       long i14278;\n+       long i14279;\n+       long i14280;\n+       long i14281;\n+       long i14282;\n+       long i14283;\n+       long i14284;\n+       long i14285;\n+       long i14286;\n+       long i14287;\n+       long i14288;\n+       long i14289;\n+       long i14290;\n+       long i14291;\n+       long i14292;\n+       long i14293;\n+       long i14294;\n+       long i14295;\n+       long i14296;\n+       long i14297;\n+       long i14298;\n+       long i14299;\n+       long i14300;\n+       long i14301;\n+       long i14302;\n+       long i14303;\n+       long i14304;\n+       long i14305;\n+       long i14306;\n+       long i14307;\n+       long i14308;\n+       long i14309;\n+       long i14310;\n+       long i14311;\n+       long i14312;\n+       long i14313;\n+       long i14314;\n+       long i14315;\n+       long i14316;\n+       long i14317;\n+       long i14318;\n+       long i14319;\n+       long i14320;\n+       long i14321;\n+       long i14322;\n+       long i14323;\n+       long i14324;\n+       long i14325;\n+       long i14326;\n+       long i14327;\n+       long i14328;\n+       long i14329;\n+       long i14330;\n+       long i14331;\n+       long i14332;\n+       long i14333;\n+       long i14334;\n+       long i14335;\n+       long i14336;\n+       long i14337;\n+       long i14338;\n+       long i14339;\n+       long i14340;\n+       long i14341;\n+       long i14342;\n+       long i14343;\n+       long i14344;\n+       long i14345;\n+       long i14346;\n+       long i14347;\n+       long i14348;\n+       long i14349;\n+       long i14350;\n+       long i14351;\n+       long i14352;\n+       long i14353;\n+       long i14354;\n+       long i14355;\n+       long i14356;\n+       long i14357;\n+       long i14358;\n+       long i14359;\n+       long i14360;\n+       long i14361;\n+       long i14362;\n+       long i14363;\n+       long i14364;\n+       long i14365;\n+       long i14366;\n+       long i14367;\n+       long i14368;\n+       long i14369;\n+       long i14370;\n+       long i14371;\n+       long i14372;\n+       long i14373;\n+       long i14374;\n+       long i14375;\n+       long i14376;\n+       long i14377;\n+       long i14378;\n+       long i14379;\n+       long i14380;\n+       long i14381;\n+       long i14382;\n+       long i14383;\n+       long i14384;\n+       long i14385;\n+       long i14386;\n+       long i14387;\n+       long i14388;\n+       long i14389;\n+       long i14390;\n+       long i14391;\n+       long i14392;\n+       long i14393;\n+       long i14394;\n+       long i14395;\n+       long i14396;\n+       long i14397;\n+       long i14398;\n+       long i14399;\n+       long i14400;\n+       long i14401;\n+       long i14402;\n+       long i14403;\n+       long i14404;\n+       long i14405;\n+       long i14406;\n+       long i14407;\n+       long i14408;\n+       long i14409;\n+       long i14410;\n+       long i14411;\n+       long i14412;\n+       long i14413;\n+       long i14414;\n+       long i14415;\n+       long i14416;\n+       long i14417;\n+       long i14418;\n+       long i14419;\n+       long i14420;\n+       long i14421;\n+       long i14422;\n+       long i14423;\n+       long i14424;\n+       long i14425;\n+       long i14426;\n+       long i14427;\n+       long i14428;\n+       long i14429;\n+       long i14430;\n+       long i14431;\n+       long i14432;\n+       long i14433;\n+       long i14434;\n+       long i14435;\n+       long i14436;\n+       long i14437;\n+       long i14438;\n+       long i14439;\n+       long i14440;\n+       long i14441;\n+       long i14442;\n+       long i14443;\n+       long i14444;\n+       long i14445;\n+       long i14446;\n+       long i14447;\n+       long i14448;\n+       long i14449;\n+       long i14450;\n+       long i14451;\n+       long i14452;\n+       long i14453;\n+       long i14454;\n+       long i14455;\n+       long i14456;\n+       long i14457;\n+       long i14458;\n+       long i14459;\n+       long i14460;\n+       long i14461;\n+       long i14462;\n+       long i14463;\n+       long i14464;\n+       long i14465;\n+       long i14466;\n+       long i14467;\n+       long i14468;\n+       long i14469;\n+       long i14470;\n+       long i14471;\n+       long i14472;\n+       long i14473;\n+       long i14474;\n+       long i14475;\n+       long i14476;\n+       long i14477;\n+       long i14478;\n+       long i14479;\n+       long i14480;\n+       long i14481;\n+       long i14482;\n+       long i14483;\n+       long i14484;\n+       long i14485;\n+       long i14486;\n+       long i14487;\n+       long i14488;\n+       long i14489;\n+       long i14490;\n+       long i14491;\n+       long i14492;\n+       long i14493;\n+       long i14494;\n+       long i14495;\n+       long i14496;\n+       long i14497;\n+       long i14498;\n+       long i14499;\n+       long i14500;\n+       long i14501;\n+       long i14502;\n+       long i14503;\n+       long i14504;\n+       long i14505;\n+       long i14506;\n+       long i14507;\n+       long i14508;\n+       long i14509;\n+       long i14510;\n+       long i14511;\n+       long i14512;\n+       long i14513;\n+       long i14514;\n+       long i14515;\n+       long i14516;\n+       long i14517;\n+       long i14518;\n+       long i14519;\n+       long i14520;\n+       long i14521;\n+       long i14522;\n+       long i14523;\n+       long i14524;\n+       long i14525;\n+       long i14526;\n+       long i14527;\n+       long i14528;\n+       long i14529;\n+       long i14530;\n+       long i14531;\n+       long i14532;\n+       long i14533;\n+       long i14534;\n+       long i14535;\n+       long i14536;\n+       long i14537;\n+       long i14538;\n+       long i14539;\n+       long i14540;\n+       long i14541;\n+       long i14542;\n+       long i14543;\n+       long i14544;\n+       long i14545;\n+       long i14546;\n+       long i14547;\n+       long i14548;\n+       long i14549;\n+       long i14550;\n+       long i14551;\n+       long i14552;\n+       long i14553;\n+       long i14554;\n+       long i14555;\n+       long i14556;\n+       long i14557;\n+       long i14558;\n+       long i14559;\n+       long i14560;\n+       long i14561;\n+       long i14562;\n+       long i14563;\n+       long i14564;\n+       long i14565;\n+       long i14566;\n+       long i14567;\n+       long i14568;\n+       long i14569;\n+       long i14570;\n+       long i14571;\n+       long i14572;\n+       long i14573;\n+       long i14574;\n+       long i14575;\n+       long i14576;\n+       long i14577;\n+       long i14578;\n+       long i14579;\n+       long i14580;\n+       long i14581;\n+       long i14582;\n+       long i14583;\n+       long i14584;\n+       long i14585;\n+       long i14586;\n+       long i14587;\n+       long i14588;\n+       long i14589;\n+       long i14590;\n+       long i14591;\n+       long i14592;\n+       long i14593;\n+       long i14594;\n+       long i14595;\n+       long i14596;\n+       long i14597;\n+       long i14598;\n+       long i14599;\n+       long i14600;\n+       long i14601;\n+       long i14602;\n+       long i14603;\n+       long i14604;\n+       long i14605;\n+       long i14606;\n+       long i14607;\n+       long i14608;\n+       long i14609;\n+       long i14610;\n+       long i14611;\n+       long i14612;\n+       long i14613;\n+       long i14614;\n+       long i14615;\n+       long i14616;\n+       long i14617;\n+       long i14618;\n+       long i14619;\n+       long i14620;\n+       long i14621;\n+       long i14622;\n+       long i14623;\n+       long i14624;\n+       long i14625;\n+       long i14626;\n+       long i14627;\n+       long i14628;\n+       long i14629;\n+       long i14630;\n+       long i14631;\n+       long i14632;\n+       long i14633;\n+       long i14634;\n+       long i14635;\n+       long i14636;\n+       long i14637;\n+       long i14638;\n+       long i14639;\n+       long i14640;\n+       long i14641;\n+       long i14642;\n+       long i14643;\n+       long i14644;\n+       long i14645;\n+       long i14646;\n+       long i14647;\n+       long i14648;\n+       long i14649;\n+       long i14650;\n+       long i14651;\n+       long i14652;\n+       long i14653;\n+       long i14654;\n+       long i14655;\n+       long i14656;\n+       long i14657;\n+       long i14658;\n+       long i14659;\n+       long i14660;\n+       long i14661;\n+       long i14662;\n+       long i14663;\n+       long i14664;\n+       long i14665;\n+       long i14666;\n+       long i14667;\n+       long i14668;\n+       long i14669;\n+       long i14670;\n+       long i14671;\n+       long i14672;\n+       long i14673;\n+       long i14674;\n+       long i14675;\n+       long i14676;\n+       long i14677;\n+       long i14678;\n+       long i14679;\n+       long i14680;\n+       long i14681;\n+       long i14682;\n+       long i14683;\n+       long i14684;\n+       long i14685;\n+       long i14686;\n+       long i14687;\n+       long i14688;\n+       long i14689;\n+       long i14690;\n+       long i14691;\n+       long i14692;\n+       long i14693;\n+       long i14694;\n+       long i14695;\n+       long i14696;\n+       long i14697;\n+       long i14698;\n+       long i14699;\n+       long i14700;\n+       long i14701;\n+       long i14702;\n+       long i14703;\n+       long i14704;\n+       long i14705;\n+       long i14706;\n+       long i14707;\n+       long i14708;\n+       long i14709;\n+       long i14710;\n+       long i14711;\n+       long i14712;\n+       long i14713;\n+       long i14714;\n+       long i14715;\n+       long i14716;\n+       long i14717;\n+       long i14718;\n+       long i14719;\n+       long i14720;\n+       long i14721;\n+       long i14722;\n+       long i14723;\n+       long i14724;\n+       long i14725;\n+       long i14726;\n+       long i14727;\n+       long i14728;\n+       long i14729;\n+       long i14730;\n+       long i14731;\n+       long i14732;\n+       long i14733;\n+       long i14734;\n+       long i14735;\n+       long i14736;\n+       long i14737;\n+       long i14738;\n+       long i14739;\n+       long i14740;\n+       long i14741;\n+       long i14742;\n+       long i14743;\n+       long i14744;\n+       long i14745;\n+       long i14746;\n+       long i14747;\n+       long i14748;\n+       long i14749;\n+       long i14750;\n+       long i14751;\n+       long i14752;\n+       long i14753;\n+       long i14754;\n+       long i14755;\n+       long i14756;\n+       long i14757;\n+       long i14758;\n+       long i14759;\n+       long i14760;\n+       long i14761;\n+       long i14762;\n+       long i14763;\n+       long i14764;\n+       long i14765;\n+       long i14766;\n+       long i14767;\n+       long i14768;\n+       long i14769;\n+       long i14770;\n+       long i14771;\n+       long i14772;\n+       long i14773;\n+       long i14774;\n+       long i14775;\n+       long i14776;\n+       long i14777;\n+       long i14778;\n+       long i14779;\n+       long i14780;\n+       long i14781;\n+       long i14782;\n+       long i14783;\n+       long i14784;\n+       long i14785;\n+       long i14786;\n+       long i14787;\n+       long i14788;\n+       long i14789;\n+       long i14790;\n+       long i14791;\n+       long i14792;\n+       long i14793;\n+       long i14794;\n+       long i14795;\n+       long i14796;\n+       long i14797;\n+       long i14798;\n+       long i14799;\n+       long i14800;\n+       long i14801;\n+       long i14802;\n+       long i14803;\n+       long i14804;\n+       long i14805;\n+       long i14806;\n+       long i14807;\n+       long i14808;\n+       long i14809;\n+       long i14810;\n+       long i14811;\n+       long i14812;\n+       long i14813;\n+       long i14814;\n+       long i14815;\n+       long i14816;\n+       long i14817;\n+       long i14818;\n+       long i14819;\n+       long i14820;\n+       long i14821;\n+       long i14822;\n+       long i14823;\n+       long i14824;\n+       long i14825;\n+       long i14826;\n+       long i14827;\n+       long i14828;\n+       long i14829;\n+       long i14830;\n+       long i14831;\n+       long i14832;\n+       long i14833;\n+       long i14834;\n+       long i14835;\n+       long i14836;\n+       long i14837;\n+       long i14838;\n+       long i14839;\n+       long i14840;\n+       long i14841;\n+       long i14842;\n+       long i14843;\n+       long i14844;\n+       long i14845;\n+       long i14846;\n+       long i14847;\n+       long i14848;\n+       long i14849;\n+       long i14850;\n+       long i14851;\n+       long i14852;\n+       long i14853;\n+       long i14854;\n+       long i14855;\n+       long i14856;\n+       long i14857;\n+       long i14858;\n+       long i14859;\n+       long i14860;\n+       long i14861;\n+       long i14862;\n+       long i14863;\n+       long i14864;\n+       long i14865;\n+       long i14866;\n+       long i14867;\n+       long i14868;\n+       long i14869;\n+       long i14870;\n+       long i14871;\n+       long i14872;\n+       long i14873;\n+       long i14874;\n+       long i14875;\n+       long i14876;\n+       long i14877;\n+       long i14878;\n+       long i14879;\n+       long i14880;\n+       long i14881;\n+       long i14882;\n+       long i14883;\n+       long i14884;\n+       long i14885;\n+       long i14886;\n+       long i14887;\n+       long i14888;\n+       long i14889;\n+       long i14890;\n+       long i14891;\n+       long i14892;\n+       long i14893;\n+       long i14894;\n+       long i14895;\n+       long i14896;\n+       long i14897;\n+       long i14898;\n+       long i14899;\n+       long i14900;\n+       long i14901;\n+       long i14902;\n+       long i14903;\n+       long i14904;\n+       long i14905;\n+       long i14906;\n+       long i14907;\n+       long i14908;\n+       long i14909;\n+       long i14910;\n+       long i14911;\n+       long i14912;\n+       long i14913;\n+       long i14914;\n+       long i14915;\n+       long i14916;\n+       long i14917;\n+       long i14918;\n+       long i14919;\n+       long i14920;\n+       long i14921;\n+       long i14922;\n+       long i14923;\n+       long i14924;\n+       long i14925;\n+       long i14926;\n+       long i14927;\n+       long i14928;\n+       long i14929;\n+       long i14930;\n+       long i14931;\n+       long i14932;\n+       long i14933;\n+       long i14934;\n+       long i14935;\n+       long i14936;\n+       long i14937;\n+       long i14938;\n+       long i14939;\n+       long i14940;\n+       long i14941;\n+       long i14942;\n+       long i14943;\n+       long i14944;\n+       long i14945;\n+       long i14946;\n+       long i14947;\n+       long i14948;\n+       long i14949;\n+       long i14950;\n+       long i14951;\n+       long i14952;\n+       long i14953;\n+       long i14954;\n+       long i14955;\n+       long i14956;\n+       long i14957;\n+       long i14958;\n+       long i14959;\n+       long i14960;\n+       long i14961;\n+       long i14962;\n+       long i14963;\n+       long i14964;\n+       long i14965;\n+       long i14966;\n+       long i14967;\n+       long i14968;\n+       long i14969;\n+       long i14970;\n+       long i14971;\n+       long i14972;\n+       long i14973;\n+       long i14974;\n+       long i14975;\n+       long i14976;\n+       long i14977;\n+       long i14978;\n+       long i14979;\n+       long i14980;\n+       long i14981;\n+       long i14982;\n+       long i14983;\n+       long i14984;\n+       long i14985;\n+       long i14986;\n+       long i14987;\n+       long i14988;\n+       long i14989;\n+       long i14990;\n+       long i14991;\n+       long i14992;\n+       long i14993;\n+       long i14994;\n+       long i14995;\n+       long i14996;\n+       long i14997;\n+       long i14998;\n+       long i14999;\n+       long i15000;\n+       long i15001;\n+       long i15002;\n+       long i15003;\n+       long i15004;\n+       long i15005;\n+       long i15006;\n+       long i15007;\n+       long i15008;\n+       long i15009;\n+       long i15010;\n+       long i15011;\n+       long i15012;\n+       long i15013;\n+       long i15014;\n+       long i15015;\n+       long i15016;\n+       long i15017;\n+       long i15018;\n+       long i15019;\n+       long i15020;\n+       long i15021;\n+       long i15022;\n+       long i15023;\n+       long i15024;\n+       long i15025;\n+       long i15026;\n+       long i15027;\n+       long i15028;\n+       long i15029;\n+       long i15030;\n+       long i15031;\n+       long i15032;\n+       long i15033;\n+       long i15034;\n+       long i15035;\n+       long i15036;\n+       long i15037;\n+       long i15038;\n+       long i15039;\n+       long i15040;\n+       long i15041;\n+       long i15042;\n+       long i15043;\n+       long i15044;\n+       long i15045;\n+       long i15046;\n+       long i15047;\n+       long i15048;\n+       long i15049;\n+       long i15050;\n+       long i15051;\n+       long i15052;\n+       long i15053;\n+       long i15054;\n+       long i15055;\n+       long i15056;\n+       long i15057;\n+       long i15058;\n+       long i15059;\n+       long i15060;\n+       long i15061;\n+       long i15062;\n+       long i15063;\n+       long i15064;\n+       long i15065;\n+       long i15066;\n+       long i15067;\n+       long i15068;\n+       long i15069;\n+       long i15070;\n+       long i15071;\n+       long i15072;\n+       long i15073;\n+       long i15074;\n+       long i15075;\n+       long i15076;\n+       long i15077;\n+       long i15078;\n+       long i15079;\n+       long i15080;\n+       long i15081;\n+       long i15082;\n+       long i15083;\n+       long i15084;\n+       long i15085;\n+       long i15086;\n+       long i15087;\n+       long i15088;\n+       long i15089;\n+       long i15090;\n+       long i15091;\n+       long i15092;\n+       long i15093;\n+       long i15094;\n+       long i15095;\n+       long i15096;\n+       long i15097;\n+       long i15098;\n+       long i15099;\n+       long i15100;\n+       long i15101;\n+       long i15102;\n+       long i15103;\n+       long i15104;\n+       long i15105;\n+       long i15106;\n+       long i15107;\n+       long i15108;\n+       long i15109;\n+       long i15110;\n+       long i15111;\n+       long i15112;\n+       long i15113;\n+       long i15114;\n+       long i15115;\n+       long i15116;\n+       long i15117;\n+       long i15118;\n+       long i15119;\n+       long i15120;\n+       long i15121;\n+       long i15122;\n+       long i15123;\n+       long i15124;\n+       long i15125;\n+       long i15126;\n+       long i15127;\n+       long i15128;\n+       long i15129;\n+       long i15130;\n+       long i15131;\n+       long i15132;\n+       long i15133;\n+       long i15134;\n+       long i15135;\n+       long i15136;\n+       long i15137;\n+       long i15138;\n+       long i15139;\n+       long i15140;\n+       long i15141;\n+       long i15142;\n+       long i15143;\n+       long i15144;\n+       long i15145;\n+       long i15146;\n+       long i15147;\n+       long i15148;\n+       long i15149;\n+       long i15150;\n+       long i15151;\n+       long i15152;\n+       long i15153;\n+       long i15154;\n+       long i15155;\n+       long i15156;\n+       long i15157;\n+       long i15158;\n+       long i15159;\n+       long i15160;\n+       long i15161;\n+       long i15162;\n+       long i15163;\n+       long i15164;\n+       long i15165;\n+       long i15166;\n+       long i15167;\n+       long i15168;\n+       long i15169;\n+       long i15170;\n+       long i15171;\n+       long i15172;\n+       long i15173;\n+       long i15174;\n+       long i15175;\n+       long i15176;\n+       long i15177;\n+       long i15178;\n+       long i15179;\n+       long i15180;\n+       long i15181;\n+       long i15182;\n+       long i15183;\n+       long i15184;\n+       long i15185;\n+       long i15186;\n+       long i15187;\n+       long i15188;\n+       long i15189;\n+       long i15190;\n+       long i15191;\n+       long i15192;\n+       long i15193;\n+       long i15194;\n+       long i15195;\n+       long i15196;\n+       long i15197;\n+       long i15198;\n+       long i15199;\n+       long i15200;\n+       long i15201;\n+       long i15202;\n+       long i15203;\n+       long i15204;\n+       long i15205;\n+       long i15206;\n+       long i15207;\n+       long i15208;\n+       long i15209;\n+       long i15210;\n+       long i15211;\n+       long i15212;\n+       long i15213;\n+       long i15214;\n+       long i15215;\n+       long i15216;\n+       long i15217;\n+       long i15218;\n+       long i15219;\n+       long i15220;\n+       long i15221;\n+       long i15222;\n+       long i15223;\n+       long i15224;\n+       long i15225;\n+       long i15226;\n+       long i15227;\n+       long i15228;\n+       long i15229;\n+       long i15230;\n+       long i15231;\n+       long i15232;\n+       long i15233;\n+       long i15234;\n+       long i15235;\n+       long i15236;\n+       long i15237;\n+       long i15238;\n+       long i15239;\n+       long i15240;\n+       long i15241;\n+       long i15242;\n+       long i15243;\n+       long i15244;\n+       long i15245;\n+       long i15246;\n+       long i15247;\n+       long i15248;\n+       long i15249;\n+       long i15250;\n+       long i15251;\n+       long i15252;\n+       long i15253;\n+       long i15254;\n+       long i15255;\n+       long i15256;\n+       long i15257;\n+       long i15258;\n+       long i15259;\n+       long i15260;\n+       long i15261;\n+       long i15262;\n+       long i15263;\n+       long i15264;\n+       long i15265;\n+       long i15266;\n+       long i15267;\n+       long i15268;\n+       long i15269;\n+       long i15270;\n+       long i15271;\n+       long i15272;\n+       long i15273;\n+       long i15274;\n+       long i15275;\n+       long i15276;\n+       long i15277;\n+       long i15278;\n+       long i15279;\n+       long i15280;\n+       long i15281;\n+       long i15282;\n+       long i15283;\n+       long i15284;\n+       long i15285;\n+       long i15286;\n+       long i15287;\n+       long i15288;\n+       long i15289;\n+       long i15290;\n+       long i15291;\n+       long i15292;\n+       long i15293;\n+       long i15294;\n+       long i15295;\n+       long i15296;\n+       long i15297;\n+       long i15298;\n+       long i15299;\n+       long i15300;\n+       long i15301;\n+       long i15302;\n+       long i15303;\n+       long i15304;\n+       long i15305;\n+       long i15306;\n+       long i15307;\n+       long i15308;\n+       long i15309;\n+       long i15310;\n+       long i15311;\n+       long i15312;\n+       long i15313;\n+       long i15314;\n+       long i15315;\n+       long i15316;\n+       long i15317;\n+       long i15318;\n+       long i15319;\n+       long i15320;\n+       long i15321;\n+       long i15322;\n+       long i15323;\n+       long i15324;\n+       long i15325;\n+       long i15326;\n+       long i15327;\n+       long i15328;\n+       long i15329;\n+       long i15330;\n+       long i15331;\n+       long i15332;\n+       long i15333;\n+       long i15334;\n+       long i15335;\n+       long i15336;\n+       long i15337;\n+       long i15338;\n+       long i15339;\n+       long i15340;\n+       long i15341;\n+       long i15342;\n+       long i15343;\n+       long i15344;\n+       long i15345;\n+       long i15346;\n+       long i15347;\n+       long i15348;\n+       long i15349;\n+       long i15350;\n+       long i15351;\n+       long i15352;\n+       long i15353;\n+       long i15354;\n+       long i15355;\n+       long i15356;\n+       long i15357;\n+       long i15358;\n+       long i15359;\n+       long i15360;\n+       long i15361;\n+       long i15362;\n+       long i15363;\n+       long i15364;\n+       long i15365;\n+       long i15366;\n+       long i15367;\n+       long i15368;\n+       long i15369;\n+       long i15370;\n+       long i15371;\n+       long i15372;\n+       long i15373;\n+       long i15374;\n+       long i15375;\n+       long i15376;\n+       long i15377;\n+       long i15378;\n+       long i15379;\n+       long i15380;\n+       long i15381;\n+       long i15382;\n+       long i15383;\n+       long i15384;\n+       long i15385;\n+       long i15386;\n+       long i15387;\n+       long i15388;\n+       long i15389;\n+       long i15390;\n+       long i15391;\n+       long i15392;\n+       long i15393;\n+       long i15394;\n+       long i15395;\n+       long i15396;\n+       long i15397;\n+       long i15398;\n+       long i15399;\n+       long i15400;\n+       long i15401;\n+       long i15402;\n+       long i15403;\n+       long i15404;\n+       long i15405;\n+       long i15406;\n+       long i15407;\n+       long i15408;\n+       long i15409;\n+       long i15410;\n+       long i15411;\n+       long i15412;\n+       long i15413;\n+       long i15414;\n+       long i15415;\n+       long i15416;\n+       long i15417;\n+       long i15418;\n+       long i15419;\n+       long i15420;\n+       long i15421;\n+       long i15422;\n+       long i15423;\n+       long i15424;\n+       long i15425;\n+       long i15426;\n+       long i15427;\n+       long i15428;\n+       long i15429;\n+       long i15430;\n+       long i15431;\n+       long i15432;\n+       long i15433;\n+       long i15434;\n+       long i15435;\n+       long i15436;\n+       long i15437;\n+       long i15438;\n+       long i15439;\n+       long i15440;\n+       long i15441;\n+       long i15442;\n+       long i15443;\n+       long i15444;\n+       long i15445;\n+       long i15446;\n+       long i15447;\n+       long i15448;\n+       long i15449;\n+       long i15450;\n+       long i15451;\n+       long i15452;\n+       long i15453;\n+       long i15454;\n+       long i15455;\n+       long i15456;\n+       long i15457;\n+       long i15458;\n+       long i15459;\n+       long i15460;\n+       long i15461;\n+       long i15462;\n+       long i15463;\n+       long i15464;\n+       long i15465;\n+       long i15466;\n+       long i15467;\n+       long i15468;\n+       long i15469;\n+       long i15470;\n+       long i15471;\n+       long i15472;\n+       long i15473;\n+       long i15474;\n+       long i15475;\n+       long i15476;\n+       long i15477;\n+       long i15478;\n+       long i15479;\n+       long i15480;\n+       long i15481;\n+       long i15482;\n+       long i15483;\n+       long i15484;\n+       long i15485;\n+       long i15486;\n+       long i15487;\n+       long i15488;\n+       long i15489;\n+       long i15490;\n+       long i15491;\n+       long i15492;\n+       long i15493;\n+       long i15494;\n+       long i15495;\n+       long i15496;\n+       long i15497;\n+       long i15498;\n+       long i15499;\n+       long i15500;\n+       long i15501;\n+       long i15502;\n+       long i15503;\n+       long i15504;\n+       long i15505;\n+       long i15506;\n+       long i15507;\n+       long i15508;\n+       long i15509;\n+       long i15510;\n+       long i15511;\n+       long i15512;\n+       long i15513;\n+       long i15514;\n+       long i15515;\n+       long i15516;\n+       long i15517;\n+       long i15518;\n+       long i15519;\n+       long i15520;\n+       long i15521;\n+       long i15522;\n+       long i15523;\n+       long i15524;\n+       long i15525;\n+       long i15526;\n+       long i15527;\n+       long i15528;\n+       long i15529;\n+       long i15530;\n+       long i15531;\n+       long i15532;\n+       long i15533;\n+       long i15534;\n+       long i15535;\n+       long i15536;\n+       long i15537;\n+       long i15538;\n+       long i15539;\n+       long i15540;\n+       long i15541;\n+       long i15542;\n+       long i15543;\n+       long i15544;\n+       long i15545;\n+       long i15546;\n+       long i15547;\n+       long i15548;\n+       long i15549;\n+       long i15550;\n+       long i15551;\n+       long i15552;\n+       long i15553;\n+       long i15554;\n+       long i15555;\n+       long i15556;\n+       long i15557;\n+       long i15558;\n+       long i15559;\n+       long i15560;\n+       long i15561;\n+       long i15562;\n+       long i15563;\n+       long i15564;\n+       long i15565;\n+       long i15566;\n+       long i15567;\n+       long i15568;\n+       long i15569;\n+       long i15570;\n+       long i15571;\n+       long i15572;\n+       long i15573;\n+       long i15574;\n+       long i15575;\n+       long i15576;\n+       long i15577;\n+       long i15578;\n+       long i15579;\n+       long i15580;\n+       long i15581;\n+       long i15582;\n+       long i15583;\n+       long i15584;\n+       long i15585;\n+       long i15586;\n+       long i15587;\n+       long i15588;\n+       long i15589;\n+       long i15590;\n+       long i15591;\n+       long i15592;\n+       long i15593;\n+       long i15594;\n+       long i15595;\n+       long i15596;\n+       long i15597;\n+       long i15598;\n+       long i15599;\n+       long i15600;\n+       long i15601;\n+       long i15602;\n+       long i15603;\n+       long i15604;\n+       long i15605;\n+       long i15606;\n+       long i15607;\n+       long i15608;\n+       long i15609;\n+       long i15610;\n+       long i15611;\n+       long i15612;\n+       long i15613;\n+       long i15614;\n+       long i15615;\n+       long i15616;\n+       long i15617;\n+       long i15618;\n+       long i15619;\n+       long i15620;\n+       long i15621;\n+       long i15622;\n+       long i15623;\n+       long i15624;\n+       long i15625;\n+       long i15626;\n+       long i15627;\n+       long i15628;\n+       long i15629;\n+       long i15630;\n+       long i15631;\n+       long i15632;\n+       long i15633;\n+       long i15634;\n+       long i15635;\n+       long i15636;\n+       long i15637;\n+       long i15638;\n+       long i15639;\n+       long i15640;\n+       long i15641;\n+       long i15642;\n+       long i15643;\n+       long i15644;\n+       long i15645;\n+       long i15646;\n+       long i15647;\n+       long i15648;\n+       long i15649;\n+       long i15650;\n+       long i15651;\n+       long i15652;\n+       long i15653;\n+       long i15654;\n+       long i15655;\n+       long i15656;\n+       long i15657;\n+       long i15658;\n+       long i15659;\n+       long i15660;\n+       long i15661;\n+       long i15662;\n+       long i15663;\n+       long i15664;\n+       long i15665;\n+       long i15666;\n+       long i15667;\n+       long i15668;\n+       long i15669;\n+       long i15670;\n+       long i15671;\n+       long i15672;\n+       long i15673;\n+       long i15674;\n+       long i15675;\n+       long i15676;\n+       long i15677;\n+       long i15678;\n+       long i15679;\n+       long i15680;\n+       long i15681;\n+       long i15682;\n+       long i15683;\n+       long i15684;\n+       long i15685;\n+       long i15686;\n+       long i15687;\n+       long i15688;\n+       long i15689;\n+       long i15690;\n+       long i15691;\n+       long i15692;\n+       long i15693;\n+       long i15694;\n+       long i15695;\n+       long i15696;\n+       long i15697;\n+       long i15698;\n+       long i15699;\n+       long i15700;\n+       long i15701;\n+       long i15702;\n+       long i15703;\n+       long i15704;\n+       long i15705;\n+       long i15706;\n+       long i15707;\n+       long i15708;\n+       long i15709;\n+       long i15710;\n+       long i15711;\n+       long i15712;\n+       long i15713;\n+       long i15714;\n+       long i15715;\n+       long i15716;\n+       long i15717;\n+       long i15718;\n+       long i15719;\n+       long i15720;\n+       long i15721;\n+       long i15722;\n+       long i15723;\n+       long i15724;\n+       long i15725;\n+       long i15726;\n+       long i15727;\n+       long i15728;\n+       long i15729;\n+       long i15730;\n+       long i15731;\n+       long i15732;\n+       long i15733;\n+       long i15734;\n+       long i15735;\n+       long i15736;\n+       long i15737;\n+       long i15738;\n+       long i15739;\n+       long i15740;\n+       long i15741;\n+       long i15742;\n+       long i15743;\n+       long i15744;\n+       long i15745;\n+       long i15746;\n+       long i15747;\n+       long i15748;\n+       long i15749;\n+       long i15750;\n+       long i15751;\n+       long i15752;\n+       long i15753;\n+       long i15754;\n+       long i15755;\n+       long i15756;\n+       long i15757;\n+       long i15758;\n+       long i15759;\n+       long i15760;\n+       long i15761;\n+       long i15762;\n+       long i15763;\n+       long i15764;\n+       long i15765;\n+       long i15766;\n+       long i15767;\n+       long i15768;\n+       long i15769;\n+       long i15770;\n+       long i15771;\n+       long i15772;\n+       long i15773;\n+       long i15774;\n+       long i15775;\n+       long i15776;\n+       long i15777;\n+       long i15778;\n+       long i15779;\n+       long i15780;\n+       long i15781;\n+       long i15782;\n+       long i15783;\n+       long i15784;\n+       long i15785;\n+       long i15786;\n+       long i15787;\n+       long i15788;\n+       long i15789;\n+       long i15790;\n+       long i15791;\n+       long i15792;\n+       long i15793;\n+       long i15794;\n+       long i15795;\n+       long i15796;\n+       long i15797;\n+       long i15798;\n+       long i15799;\n+       long i15800;\n+       long i15801;\n+       long i15802;\n+       long i15803;\n+       long i15804;\n+       long i15805;\n+       long i15806;\n+       long i15807;\n+       long i15808;\n+       long i15809;\n+       long i15810;\n+       long i15811;\n+       long i15812;\n+       long i15813;\n+       long i15814;\n+       long i15815;\n+       long i15816;\n+       long i15817;\n+       long i15818;\n+       long i15819;\n+       long i15820;\n+       long i15821;\n+       long i15822;\n+       long i15823;\n+       long i15824;\n+       long i15825;\n+       long i15826;\n+       long i15827;\n+       long i15828;\n+       long i15829;\n+       long i15830;\n+       long i15831;\n+       long i15832;\n+       long i15833;\n+       long i15834;\n+       long i15835;\n+       long i15836;\n+       long i15837;\n+       long i15838;\n+       long i15839;\n+       long i15840;\n+       long i15841;\n+       long i15842;\n+       long i15843;\n+       long i15844;\n+       long i15845;\n+       long i15846;\n+       long i15847;\n+       long i15848;\n+       long i15849;\n+       long i15850;\n+       long i15851;\n+       long i15852;\n+       long i15853;\n+       long i15854;\n+       long i15855;\n+       long i15856;\n+       long i15857;\n+       long i15858;\n+       long i15859;\n+       long i15860;\n+       long i15861;\n+       long i15862;\n+       long i15863;\n+       long i15864;\n+       long i15865;\n+       long i15866;\n+       long i15867;\n+       long i15868;\n+       long i15869;\n+       long i15870;\n+       long i15871;\n+       long i15872;\n+       long i15873;\n+       long i15874;\n+       long i15875;\n+       long i15876;\n+       long i15877;\n+       long i15878;\n+       long i15879;\n+       long i15880;\n+       long i15881;\n+       long i15882;\n+       long i15883;\n+       long i15884;\n+       long i15885;\n+       long i15886;\n+       long i15887;\n+       long i15888;\n+       long i15889;\n+       long i15890;\n+       long i15891;\n+       long i15892;\n+       long i15893;\n+       long i15894;\n+       long i15895;\n+       long i15896;\n+       long i15897;\n+       long i15898;\n+       long i15899;\n+       long i15900;\n+       long i15901;\n+       long i15902;\n+       long i15903;\n+       long i15904;\n+       long i15905;\n+       long i15906;\n+       long i15907;\n+       long i15908;\n+       long i15909;\n+       long i15910;\n+       long i15911;\n+       long i15912;\n+       long i15913;\n+       long i15914;\n+       long i15915;\n+       long i15916;\n+       long i15917;\n+       long i15918;\n+       long i15919;\n+       long i15920;\n+       long i15921;\n+       long i15922;\n+       long i15923;\n+       long i15924;\n+       long i15925;\n+       long i15926;\n+       long i15927;\n+       long i15928;\n+       long i15929;\n+       long i15930;\n+       long i15931;\n+       long i15932;\n+       long i15933;\n+       long i15934;\n+       long i15935;\n+       long i15936;\n+       long i15937;\n+       long i15938;\n+       long i15939;\n+       long i15940;\n+       long i15941;\n+       long i15942;\n+       long i15943;\n+       long i15944;\n+       long i15945;\n+       long i15946;\n+       long i15947;\n+       long i15948;\n+       long i15949;\n+       long i15950;\n+       long i15951;\n+       long i15952;\n+       long i15953;\n+       long i15954;\n+       long i15955;\n+       long i15956;\n+       long i15957;\n+       long i15958;\n+       long i15959;\n+       long i15960;\n+       long i15961;\n+       long i15962;\n+       long i15963;\n+       long i15964;\n+       long i15965;\n+       long i15966;\n+       long i15967;\n+       long i15968;\n+       long i15969;\n+       long i15970;\n+       long i15971;\n+       long i15972;\n+       long i15973;\n+       long i15974;\n+       long i15975;\n+       long i15976;\n+       long i15977;\n+       long i15978;\n+       long i15979;\n+       long i15980;\n+       long i15981;\n+       long i15982;\n+       long i15983;\n+       long i15984;\n+       long i15985;\n+       long i15986;\n+       long i15987;\n+       long i15988;\n+       long i15989;\n+       long i15990;\n+       long i15991;\n+       long i15992;\n+       long i15993;\n+       long i15994;\n+       long i15995;\n+       long i15996;\n+       long i15997;\n+       long i15998;\n+       long i15999;\n+       long i16000;\n+       long i16001;\n+       long i16002;\n+       long i16003;\n+       long i16004;\n+       long i16005;\n+       long i16006;\n+       long i16007;\n+       long i16008;\n+       long i16009;\n+       long i16010;\n+       long i16011;\n+       long i16012;\n+       long i16013;\n+       long i16014;\n+       long i16015;\n+       long i16016;\n+       long i16017;\n+       long i16018;\n+       long i16019;\n+       long i16020;\n+       long i16021;\n+       long i16022;\n+       long i16023;\n+       long i16024;\n+       long i16025;\n+       long i16026;\n+       long i16027;\n+       long i16028;\n+       long i16029;\n+       long i16030;\n+       long i16031;\n+       long i16032;\n+       long i16033;\n+       long i16034;\n+       long i16035;\n+       long i16036;\n+       long i16037;\n+       long i16038;\n+       long i16039;\n+       long i16040;\n+       long i16041;\n+       long i16042;\n+       long i16043;\n+       long i16044;\n+       long i16045;\n+       long i16046;\n+       long i16047;\n+       long i16048;\n+       long i16049;\n+       long i16050;\n+       long i16051;\n+       long i16052;\n+       long i16053;\n+       long i16054;\n+       long i16055;\n+       long i16056;\n+       long i16057;\n+       long i16058;\n+       long i16059;\n+       long i16060;\n+       long i16061;\n+       long i16062;\n+       long i16063;\n+       long i16064;\n+       long i16065;\n+       long i16066;\n+       long i16067;\n+       long i16068;\n+       long i16069;\n+       long i16070;\n+       long i16071;\n+       long i16072;\n+       long i16073;\n+       long i16074;\n+       long i16075;\n+       long i16076;\n+       long i16077;\n+       long i16078;\n+       long i16079;\n+       long i16080;\n+       long i16081;\n+       long i16082;\n+       long i16083;\n+       long i16084;\n+       long i16085;\n+       long i16086;\n+       long i16087;\n+       long i16088;\n+       long i16089;\n+       long i16090;\n+       long i16091;\n+       long i16092;\n+       long i16093;\n+       long i16094;\n+       long i16095;\n+       long i16096;\n+       long i16097;\n+       long i16098;\n+       long i16099;\n+       long i16100;\n+       long i16101;\n+       long i16102;\n+       long i16103;\n+       long i16104;\n+       long i16105;\n+       long i16106;\n+       long i16107;\n+       long i16108;\n+       long i16109;\n+       long i16110;\n+       long i16111;\n+       long i16112;\n+       long i16113;\n+       long i16114;\n+       long i16115;\n+       long i16116;\n+       long i16117;\n+       long i16118;\n+       long i16119;\n+       long i16120;\n+       long i16121;\n+       long i16122;\n+       long i16123;\n+       long i16124;\n+       long i16125;\n+       long i16126;\n+       long i16127;\n+       long i16128;\n+       long i16129;\n+       long i16130;\n+       long i16131;\n+       long i16132;\n+       long i16133;\n+       long i16134;\n+       long i16135;\n+       long i16136;\n+       long i16137;\n+       long i16138;\n+       long i16139;\n+       long i16140;\n+       long i16141;\n+       long i16142;\n+       long i16143;\n+       long i16144;\n+       long i16145;\n+       long i16146;\n+       long i16147;\n+       long i16148;\n+       long i16149;\n+       long i16150;\n+       long i16151;\n+       long i16152;\n+       long i16153;\n+       long i16154;\n+       long i16155;\n+       long i16156;\n+       long i16157;\n+       long i16158;\n+       long i16159;\n+       long i16160;\n+       long i16161;\n+       long i16162;\n+       long i16163;\n+       long i16164;\n+       long i16165;\n+       long i16166;\n+       long i16167;\n+       long i16168;\n+       long i16169;\n+       long i16170;\n+       long i16171;\n+       long i16172;\n+       long i16173;\n+       long i16174;\n+       long i16175;\n+       long i16176;\n+       long i16177;\n+       long i16178;\n+       long i16179;\n+       long i16180;\n+       long i16181;\n+       long i16182;\n+       long i16183;\n+       long i16184;\n+       long i16185;\n+       long i16186;\n+       long i16187;\n+       long i16188;\n+       long i16189;\n+       long i16190;\n+       long i16191;\n+       long i16192;\n+       long i16193;\n+       long i16194;\n+       long i16195;\n+       long i16196;\n+       long i16197;\n+       long i16198;\n+       long i16199;\n+       long i16200;\n+       long i16201;\n+       long i16202;\n+       long i16203;\n+       long i16204;\n+       long i16205;\n+       long i16206;\n+       long i16207;\n+       long i16208;\n+       long i16209;\n+       long i16210;\n+       long i16211;\n+       long i16212;\n+       long i16213;\n+       long i16214;\n+       long i16215;\n+       long i16216;\n+       long i16217;\n+       long i16218;\n+       long i16219;\n+       long i16220;\n+       long i16221;\n+       long i16222;\n+       long i16223;\n+       long i16224;\n+       long i16225;\n+       long i16226;\n+       long i16227;\n+       long i16228;\n+       long i16229;\n+       long i16230;\n+       long i16231;\n+       long i16232;\n+       long i16233;\n+       long i16234;\n+       long i16235;\n+       long i16236;\n+       long i16237;\n+       long i16238;\n+       long i16239;\n+       long i16240;\n+       long i16241;\n+       long i16242;\n+       long i16243;\n+       long i16244;\n+       long i16245;\n+       long i16246;\n+       long i16247;\n+       long i16248;\n+       long i16249;\n+       long i16250;\n+       long i16251;\n+       long i16252;\n+       long i16253;\n+       long i16254;\n+       long i16255;\n+       long i16256;\n+       long i16257;\n+       long i16258;\n+       long i16259;\n+       long i16260;\n+       long i16261;\n+       long i16262;\n+       long i16263;\n+       long i16264;\n+       long i16265;\n+       long i16266;\n+       long i16267;\n+       long i16268;\n+       long i16269;\n+       long i16270;\n+       long i16271;\n+       long i16272;\n+       long i16273;\n+       long i16274;\n+       long i16275;\n+       long i16276;\n+       long i16277;\n+       long i16278;\n+       long i16279;\n+       long i16280;\n+       long i16281;\n+       long i16282;\n+       long i16283;\n+       long i16284;\n+       long i16285;\n+       long i16286;\n+       long i16287;\n+       long i16288;\n+       long i16289;\n+       long i16290;\n+       long i16291;\n+       long i16292;\n+       long i16293;\n+       long i16294;\n+       long i16295;\n+       long i16296;\n+       long i16297;\n+       long i16298;\n+       long i16299;\n+       long i16300;\n+       long i16301;\n+       long i16302;\n+       long i16303;\n+       long i16304;\n+       long i16305;\n+       long i16306;\n+       long i16307;\n+       long i16308;\n+       long i16309;\n+       long i16310;\n+       long i16311;\n+       long i16312;\n+       long i16313;\n+       long i16314;\n+       long i16315;\n+       long i16316;\n+       long i16317;\n+       long i16318;\n+       long i16319;\n+       long i16320;\n+       long i16321;\n+       long i16322;\n+       long i16323;\n+       long i16324;\n+       long i16325;\n+       long i16326;\n+       long i16327;\n+       long i16328;\n+       long i16329;\n+       long i16330;\n+       long i16331;\n+       long i16332;\n+       long i16333;\n+       long i16334;\n+       long i16335;\n+       long i16336;\n+       long i16337;\n+       long i16338;\n+       long i16339;\n+       long i16340;\n+       long i16341;\n+       long i16342;\n+       long i16343;\n+       long i16344;\n+       long i16345;\n+       long i16346;\n+       long i16347;\n+       long i16348;\n+       long i16349;\n+       long i16350;\n+       long i16351;\n+       long i16352;\n+       long i16353;\n+       long i16354;\n+       long i16355;\n+       long i16356;\n+       long i16357;\n+       long i16358;\n+       long i16359;\n+       long i16360;\n+       long i16361;\n+       long i16362;\n+       long i16363;\n+       long i16364;\n+       long i16365;\n+       long i16366;\n+       long i16367;\n+       long i16368;\n+       long i16369;\n+       long i16370;\n+       long i16371;\n+       long i16372;\n+       long i16373;\n+       long i16374;\n+       long i16375;\n+       long i16376;\n+       long i16377;\n+       long i16378;\n+       long i16379;\n+       long i16380;\n+       long i16381;\n+    }\n+\n+    static final BaseClass newInstance(int size) {\n+        switch (size) {\n+        case 32:\n+            return new Class32();\n+        case 64:\n+            return new Class64();\n+        case 256:\n+            return new Class256();\n+        case 1024:\n+            return new Class1024();\n+        case 2048:\n+            return new Class2048();\n+        case 4096:\n+            return new Class4096();\n+        case 8192:\n+            return new Class8192();\n+        case 16384:\n+            return new Class16384();\n+        case 65536:\n+            return new Class65536();\n+        case 131072:\n+            return new Class131072();\n+        default:\n+            throw new RuntimeException(\" Huh? \" + size);\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/RawAllocationRate.java","additions":28732,"deletions":0,"binary":false,"changes":28732,"status":"added"}]}