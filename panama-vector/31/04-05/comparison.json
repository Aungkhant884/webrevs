{"files":[{"patch":"@@ -2,2 +2,2 @@\n-\/\/ Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-\/\/ Copyright (c) 2020, Arm Limited. All rights reserved.\n+\/\/ Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2020, 2021, Arm Limited. All rights reserved.\n@@ -2532,1 +2532,1 @@\n-\t    n->bottom_type()->is_vect()->element_basic_type() == T_INT);\n+            n->bottom_type()->is_vect()->element_basic_type() == T_INT);\n@@ -2548,1 +2548,1 @@\n-\t    n->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n+            n->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n-\/\/ Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-\/\/ Copyright (c) 2020, Arm Limited. All rights reserved.\n+\/\/ Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2020, 2021, Arm Limited. All rights reserved.\n@@ -1460,1 +1460,1 @@\n-define(`VECTOR_CAST_I2I', `\n+define(`VECTOR_CAST_EXTEND1', `\n@@ -1474,3 +1474,3 @@\n-VECTOR_CAST_I2I(B, S, sunpklo, H)\n-VECTOR_CAST_I2I(S, I, sunpklo, S)\n-VECTOR_CAST_I2I(I, L, sunpklo, D)\n+VECTOR_CAST_EXTEND1(B, S, sunpklo, H)\n+VECTOR_CAST_EXTEND1(S, I, sunpklo, S)\n+VECTOR_CAST_EXTEND1(I, L, sunpklo, D)\n@@ -1479,1 +1479,1 @@\n-define(`VECTOR_CAST_B2I', `\n+define(`VECTOR_CAST_EXTEND2', `\n@@ -1483,1 +1483,1 @@\n-\t    n->bottom_type()->is_vect()->element_basic_type() == T_`'TYPE2DATATYPE($2));\n+            n->bottom_type()->is_vect()->element_basic_type() == T_`'TYPE2DATATYPE($2));\n@@ -1496,2 +1496,2 @@\n-VECTOR_CAST_B2I(B, I, sunpklo, H, S)\n-VECTOR_CAST_B2I(S, L, sunpklo, S, D)\n+VECTOR_CAST_EXTEND2(B, I, sunpklo, H, S)\n+VECTOR_CAST_EXTEND2(S, L, sunpklo, S, D)\n@@ -1500,1 +1500,1 @@\n-define(`VECTOR_CAST_B2L', `\n+define(`VECTOR_CAST_EXTEND3', `\n@@ -1519,1 +1519,1 @@\n-VECTOR_CAST_B2L(B, L, sunpklo, H, S, D)\n+VECTOR_CAST_EXTEND3(B, L, sunpklo, H, S, D)\n@@ -1522,1 +1522,1 @@\n-define(`VECTOR_CAST_S2B', `\n+define(`VECTOR_CAST_NARROW1', `\n@@ -1539,3 +1539,3 @@\n-VECTOR_CAST_S2B(S, B, dup, B, uzp1)\n-VECTOR_CAST_S2B(I, S, dup, H, uzp1)\n-VECTOR_CAST_S2B(L, I, dup, S, uzp1)\n+VECTOR_CAST_NARROW1(S, B, dup, B, uzp1)\n+VECTOR_CAST_NARROW1(I, S, dup, H, uzp1)\n+VECTOR_CAST_NARROW1(L, I, dup, S, uzp1)\n@@ -1544,1 +1544,1 @@\n-define(`VECTOR_CAST_I2B', `\n+define(`VECTOR_CAST_NARROW2', `\n@@ -1563,2 +1563,2 @@\n-VECTOR_CAST_I2B(I, B, dup, H, uzp1, B)\n-VECTOR_CAST_I2B(L, S, dup, S, uzp1, H)\n+VECTOR_CAST_NARROW2(I, B, dup, H, uzp1, B)\n+VECTOR_CAST_NARROW2(L, S, dup, S, uzp1, H)\n@@ -1567,1 +1567,1 @@\n-define(`VECTOR_CAST_L2B', `\n+define(`VECTOR_CAST_NARROW3', `\n@@ -1588,1 +1588,1 @@\n-VECTOR_CAST_L2B(L, B, dup, S, uzp1, H, B)\n+VECTOR_CAST_NARROW3(L, B, dup, S, uzp1, H, B)\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}