[{"commit":{"message":"Address review comment from Jatin."},"files":[{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"}],"sha":"27e3eebbbe7cd5d5b89b2250fb189867433f274f"},{"commit":{"message":"8265109: SVE predicate register allocation support for vectorIntrinsics\n\nThis is the SVE predicate register allocation part for Vector API\nmasking support. Since we don't have sufficent usages to test it in\njdk\/jdk, and based on Sandhya's proposal [1], we would like to put it to\nvectorIntrinsics first and get tested here with further predicate-based\nvector masking support, though so far no issue found with Xiaohong's\ninitial Vector API masking support.\n\n[1] https:\/\/mail.openjdk.java.net\/pipermail\/panama-dev\/2021-April\/012920.html"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vmreg_aarch64.hpp"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/opto\/chaitin.cpp"},{"filename":"src\/hotspot\/share\/opto\/chaitin.hpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.hpp"},{"filename":"src\/hotspot\/share\/opto\/postaloc.cpp"},{"filename":"src\/hotspot\/share\/opto\/regmask.cpp"},{"filename":"src\/hotspot\/share\/opto\/type.cpp"}],"sha":"41b9349a7b2b0544466921c1f79e99fb909201bb"}]