{"files":[{"patch":"@@ -8665,0 +8665,5 @@\n+\n+     int mask_len = Matcher::vector_length(this, $mask);\n+     if (mask_len < 64) {\n+       __ andq($dst$$Register, (((jlong)1 << mask_len) - 1));\n+     }\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.incubator.vector.IntVector;\n+import jdk.incubator.vector.VectorMask;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+\/*\n+ * @test\n+ * @bug 8274533\n+ * @summary Test intrinsic for VectorMask.toLong operation\n+ * @modules jdk.incubator.vector\n+ * @run main VectorMaskToLong -XX:CompileCommand=compileonly,VectorMaskToLong::maskFromToLongInt128VectorTest\n+ *\/\n+\n+public class VectorMaskToLong {\n+    static final VectorSpecies<Integer> SPECIES = IntVector.SPECIES_128;\n+    static long maskFromToLongInt128VectorTest(long inputLong) {\n+        var vmask = VectorMask.fromLong(SPECIES, inputLong);\n+        return vmask.toLong();\n+    }\n+\n+    static long expected(long inputLong) {\n+        return inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1);\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 100000; i++) {\n+            long res = maskFromToLongInt128VectorTest(-1);\n+            long exp = expected(-1);\n+            if (res != exp) {\n+                System.err.println(\"Failure: res = \" + res + \" exp = \" + exp);\n+                System.exit(-1);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMaskToLong.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}