{"files":[{"patch":"@@ -4111,2 +4111,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n@@ -4125,2 +4125,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n@@ -4138,32 +4138,0 @@\n-\/\/ ------------------------------ Vector Store Scatter -------------------------------\n-\n-instruct scatterI(indirect mem, vReg src, vReg idx) %{\n-  predicate(UseSVE > 0 &&\n-            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n-  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n-  ins_cost(SVE_COST);\n-  format %{ \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (I\/F)\" %}\n-  ins_encode %{\n-    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct scatterL(indirect mem, vReg src, vReg idx) %{\n-  predicate(UseSVE > 0 &&\n-            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n-  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n-  ins_cost(2 * SVE_COST);\n-  format %{ \"sve_uunpklo $idx, $idx\\n\\t\"\n-            \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (L\/D)\" %}\n-  ins_encode %{\n-    __ sve_uunpklo(as_FloatRegister($idx$$reg), __ D, as_FloatRegister($idx$$reg));\n-    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n@@ -4171,0 +4139,1 @@\n+\n@@ -4174,2 +4143,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n@@ -4193,2 +4162,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n@@ -4211,0 +4180,32 @@\n+\/\/ ------------------------------ Vector Store Scatter -------------------------------\n+\n+instruct scatterI(indirect mem, vReg src, vReg idx) %{\n+  predicate(UseSVE > 0 &&\n+            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n+  ins_cost(SVE_COST);\n+  format %{ \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (I\/F)\" %}\n+  ins_encode %{\n+    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct scatterL(indirect mem, vReg src, vReg idx) %{\n+  predicate(UseSVE > 0 &&\n+            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n+  ins_cost(2 * SVE_COST);\n+  format %{ \"sve_uunpklo $idx, $idx\\n\\t\"\n+            \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (L\/D)\" %}\n+  ins_encode %{\n+    __ sve_uunpklo(as_FloatRegister($idx$$reg), __ D, as_FloatRegister($idx$$reg));\n+    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -4216,2 +4217,2 @@\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n@@ -4235,2 +4236,2 @@\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":45,"deletions":44,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -2427,2 +2427,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n@@ -2441,2 +2441,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n@@ -2454,32 +2454,0 @@\n-\/\/ ------------------------------ Vector Store Scatter -------------------------------\n-\n-instruct scatterI(indirect mem, vReg src, vReg idx) %{\n-  predicate(UseSVE > 0 &&\n-            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n-  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n-  ins_cost(SVE_COST);\n-  format %{ \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (I\/F)\" %}\n-  ins_encode %{\n-    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct scatterL(indirect mem, vReg src, vReg idx) %{\n-  predicate(UseSVE > 0 &&\n-            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n-  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n-  ins_cost(2 * SVE_COST);\n-  format %{ \"sve_uunpklo $idx, $idx\\n\\t\"\n-            \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (L\/D)\" %}\n-  ins_encode %{\n-    __ sve_uunpklo(as_FloatRegister($idx$$reg), __ D, as_FloatRegister($idx$$reg));\n-    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n@@ -2487,0 +2455,1 @@\n+\n@@ -2490,2 +2459,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n@@ -2509,2 +2478,2 @@\n-           (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+            (n->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n@@ -2527,0 +2496,32 @@\n+\/\/ ------------------------------ Vector Store Scatter -------------------------------\n+\n+instruct scatterI(indirect mem, vReg src, vReg idx) %{\n+  predicate(UseSVE > 0 &&\n+            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n+  ins_cost(SVE_COST);\n+  format %{ \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (I\/F)\" %}\n+  ins_encode %{\n+    __ sve_st1w_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct scatterL(indirect mem, vReg src, vReg idx) %{\n+  predicate(UseSVE > 0 &&\n+            n->as_StoreVectorScatter()->memory_size() == MaxVectorSize &&\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+  match(Set mem (StoreVectorScatter mem (Binary src idx)));\n+  ins_cost(2 * SVE_COST);\n+  format %{ \"sve_uunpklo $idx, $idx\\n\\t\"\n+            \"store_vector_scatter $mem, $idx, $src\\t# vector store scatter (L\/D)\" %}\n+  ins_encode %{\n+    __ sve_uunpklo(as_FloatRegister($idx$$reg), __ D, as_FloatRegister($idx$$reg));\n+    __ sve_st1d_scatter(as_FloatRegister($src$$reg), ptrue, as_Register($mem$$base), as_FloatRegister($idx$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -2532,2 +2533,2 @@\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_INT ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT));\n@@ -2551,2 +2552,2 @@\n-           (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n-            n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n+            (n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_LONG ||\n+             n->in(3)->in(1)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":45,"deletions":44,"binary":false,"changes":89,"status":"modified"}]}