{"files":[{"patch":"@@ -8745,1 +8745,1 @@\n-instruct vcompress_expand_reg(vec dst, vec src, kReg mask) %{\n+instruct vcompress_expand_reg_evex(vec dst, vec src, kReg mask) %{\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1097,1 +1097,2 @@\n-                                      \"Ljava\/lang\/Class;Ljava\/lang\/Class;\"                                                                     \\\n+                                      \"Ljava\/lang\/Class;\"                                                                                      \\\n+                                      \"Ljava\/lang\/Class;\"                                                                                      \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2710,1 +2710,1 @@\n-      tty->print_cr(\"  ** missing constant: opr=%s vclass=%s mclass =%s etype=%s vlen=%s\",\n+      tty->print_cr(\"  ** missing constant: opr=%s vclass=%s mclass=%s etype=%s vlen=%s\",\n@@ -2753,1 +2753,1 @@\n-      tty->print_cr(\"  ** unbox failed v2=%s\",\n+      tty->print_cr(\"  ** unbox failed vector=%s\",\n@@ -2760,1 +2760,1 @@\n-  assert(is_vector_mask(mbox_klass), \"argument(7) should be a mask class\");\n+  assert(is_vector_mask(mbox_klass), \"argument(6) should be a mask class\");\n@@ -2767,1 +2767,1 @@\n-                    NodeClassNames[argument(7)->Opcode()]);\n+                    NodeClassNames[argument(6)->Opcode()]);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}