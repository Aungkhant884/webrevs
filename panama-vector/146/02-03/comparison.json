{"files":[{"patch":"@@ -7833,1 +7833,1 @@\n-void Assembler::evpexpandps(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evexpandps(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -7846,1 +7846,1 @@\n-void Assembler::evpexpandpd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evexpandpd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -7859,1 +7859,1 @@\n-void Assembler::evpexpandb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evexpandb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -7872,1 +7872,1 @@\n-void Assembler::evpexpandw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evexpandw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -7885,1 +7885,1 @@\n-void Assembler::evpexpandd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evexpandd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -7898,1 +7898,1 @@\n-void Assembler::evpexpandq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evexpandq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -11436,1 +11436,1 @@\n-void Assembler::evpcompressb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evcompressb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -11448,1 +11448,1 @@\n-void Assembler::evpcompressw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evcompressw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -11460,1 +11460,1 @@\n-void Assembler::evpcompressd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evcompressd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n@@ -11472,1 +11472,1 @@\n-void Assembler::evpcompressq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+void Assembler::evcompressq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2546,4 +2546,4 @@\n-  void evpcompressb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpcompressw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpcompressd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpcompressq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evcompressb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evcompressw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evcompressd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evcompressq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n@@ -2552,8 +2552,7 @@\n-  void vpcompresspd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-\n-  void evpexpandb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpexpandw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpexpandd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpexpandq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpexpandps(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evpexpandpd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+\n+  void evexpandb(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evexpandw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evexpandd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evexpandq(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evexpandps(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+  void evexpandpd(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -4114,1 +4114,1 @@\n-      evpcompressb(dst, mask, src, merge, vec_enc);\n+      evcompressb(dst, mask, src, merge, vec_enc);\n@@ -4118,1 +4118,1 @@\n-      evpcompressw(dst, mask, src, merge, vec_enc);\n+      evcompressw(dst, mask, src, merge, vec_enc);\n@@ -4121,1 +4121,1 @@\n-      evpcompressd(dst, mask, src, merge, vec_enc);\n+      evcompressd(dst, mask, src, merge, vec_enc);\n@@ -4127,1 +4127,1 @@\n-      evpcompressq(dst, mask, src, merge, vec_enc);\n+      evcompressq(dst, mask, src, merge, vec_enc);\n@@ -4140,1 +4140,1 @@\n-      evpexpandb(dst, mask, src, merge, vec_enc);\n+      evexpandb(dst, mask, src, merge, vec_enc);\n@@ -4144,1 +4144,1 @@\n-      evpexpandw(dst, mask, src, merge, vec_enc);\n+      evexpandw(dst, mask, src, merge, vec_enc);\n@@ -4147,1 +4147,1 @@\n-      evpexpandd(dst, mask, src, merge, vec_enc);\n+      evexpandd(dst, mask, src, merge, vec_enc);\n@@ -4150,1 +4150,1 @@\n-      evpexpandps(dst, mask, src, merge, vec_enc);\n+      evexpandps(dst, mask, src, merge, vec_enc);\n@@ -4153,1 +4153,1 @@\n-      evpexpandq(dst, mask, src, merge, vec_enc);\n+      evexpandq(dst, mask, src, merge, vec_enc);\n@@ -4156,1 +4156,1 @@\n-      evpexpandpd(dst, mask, src, merge, vec_enc);\n+      evexpandpd(dst, mask, src, merge, vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -8746,2 +8746,2 @@\n-  match(Set dst (CompressV (Binary dst src) mask));\n-  match(Set dst (ExpandV (Binary dst src) mask));\n+  match(Set dst (CompressV src mask));\n+  match(Set dst (ExpandV src mask));\n@@ -8753,1 +8753,1 @@\n-    __ compress_expand(opcode, $dst$$XMMRegister, $src$$XMMRegister, $mask$$KRegister, true, bt, vector_len);\n+    __ compress_expand(opcode, $dst$$XMMRegister, $src$$XMMRegister, $mask$$KRegister, false, bt, vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1100,1 +1100,0 @@\n-                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"                                                          \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2485,7 +2485,0 @@\n-      n->del_req(3);\n-      break;\n-    }\n-    case Op_CompressV:\n-    case Op_ExpandV: {\n-      n->set_req(1, new BinaryNode(n->in(1), n->in(2)));\n-      n->set_req(2, n->in(3));\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2697,1 +2697,1 @@\n-\/\/             int length, V v1, V v2, M m,\n+\/\/             int length, V v, M m,\n@@ -2759,9 +2759,0 @@\n-  Node* opd2 = unbox_vector(argument(6), vbox_type, elem_bt, num_elem);\n-  if (opd2 == NULL) {\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** unbox failed v1=%s\",\n-                     NodeClassNames[argument(6)->Opcode()]);\n-    }\n-    return false;\n-  }\n-\n@@ -2772,1 +2763,1 @@\n-  Node* mask = unbox_vector(argument(7), mbox_type, elem_bt, num_elem);\n+  Node* mask = unbox_vector(argument(6), mbox_type, elem_bt, num_elem);\n@@ -2782,1 +2773,1 @@\n-  Node* operation = gvn().transform(VectorNode::make(opc, opd1, opd2, mask, vt));\n+  Node* operation = gvn().transform(VectorNode::make(opc, opd1, mask, vt));\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -551,0 +551,3 @@\n+\n+  case Op_ExpandV: return new ExpandVNode(n1, n2, vt);\n+  case Op_CompressV: return new CompressVNode(n1, n2, vt);\n@@ -573,2 +576,0 @@\n-  case Op_ExpandV: return new ExpandVNode(n1, n2, n3, vt);\n-  case Op_CompressV: return new CompressVNode(n1, n2, n3, vt);\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -720,2 +720,2 @@\n-  CompressVNode(Node* vec1, Node* vec2, Node* mask, const TypeVect* vt) :\n-      VectorNode(vec1, vec2, mask, vt) {\n+  CompressVNode(Node* vec, Node* mask, const TypeVect* vt) :\n+      VectorNode(vec, mask, vt) {\n@@ -731,2 +731,2 @@\n-  ExpandVNode(Node* vec1, Node* vec2, Node* mask, const TypeVect* vt) :\n-      VectorNode(vec1, vec2, mask, vt) {\n+  ExpandVNode(Node* vec, Node* mask, const TypeVect* vt) :\n+      VectorNode(vec, mask, vt) {\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -630,1 +630,1 @@\n-        V apply(V v1, V v2, M m);\n+        V apply(V v, M m);\n@@ -640,1 +640,1 @@\n-              int length, V v1, V v2, M m,\n+              int length, V v, M m,\n@@ -643,1 +643,1 @@\n-        return defaultImpl.apply(v1, v2, m);\n+        return defaultImpl.apply(v, m);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static ByteVector expandHelper(Vector<Byte> v1, Vector<Byte> v2, VectorMask<Byte> m) {\n+    static ByteVector expandHelper(Vector<Byte> v, VectorMask<Byte> m) {\n@@ -356,2 +356,2 @@\n-        ByteVector r  = (ByteVector) v1;\n-        ByteVector vi = (ByteVector) v2;\n+        ByteVector r  = (ByteVector) vsp.zero();\n+        ByteVector vi = (ByteVector) v;\n@@ -366,1 +366,1 @@\n-    static ByteVector compressHelper(Vector<Byte> v1, Vector<Byte> v2, VectorMask<Byte> m) {\n+    static ByteVector compressHelper(Vector<Byte> v, VectorMask<Byte> m) {\n@@ -368,2 +368,2 @@\n-        ByteVector r  = (ByteVector) v1;\n-        ByteVector vi = (ByteVector) v2;\n+        ByteVector r  = (ByteVector) vsp.zero();\n+        ByteVector vi = (ByteVector) v;\n@@ -2399,2 +2399,2 @@\n-                                    byte.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    byte.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2417,2 +2417,2 @@\n-                                    byte.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    byte.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static DoubleVector expandHelper(Vector<Double> v1, Vector<Double> v2, VectorMask<Double> m) {\n+    static DoubleVector expandHelper(Vector<Double> v, VectorMask<Double> m) {\n@@ -356,2 +356,2 @@\n-        DoubleVector r  = (DoubleVector) v1;\n-        DoubleVector vi = (DoubleVector) v2;\n+        DoubleVector r  = (DoubleVector) vsp.zero();\n+        DoubleVector vi = (DoubleVector) v;\n@@ -366,1 +366,1 @@\n-    static DoubleVector compressHelper(Vector<Double> v1, Vector<Double> v2, VectorMask<Double> m) {\n+    static DoubleVector compressHelper(Vector<Double> v, VectorMask<Double> m) {\n@@ -368,2 +368,2 @@\n-        DoubleVector r  = (DoubleVector) v1;\n-        DoubleVector vi = (DoubleVector) v2;\n+        DoubleVector r  = (DoubleVector) vsp.zero();\n+        DoubleVector vi = (DoubleVector) v;\n@@ -2245,2 +2245,2 @@\n-                                    double.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    double.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2263,2 +2263,2 @@\n-                                    double.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    double.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static FloatVector expandHelper(Vector<Float> v1, Vector<Float> v2, VectorMask<Float> m) {\n+    static FloatVector expandHelper(Vector<Float> v, VectorMask<Float> m) {\n@@ -356,2 +356,2 @@\n-        FloatVector r  = (FloatVector) v1;\n-        FloatVector vi = (FloatVector) v2;\n+        FloatVector r  = (FloatVector) vsp.zero();\n+        FloatVector vi = (FloatVector) v;\n@@ -366,1 +366,1 @@\n-    static FloatVector compressHelper(Vector<Float> v1, Vector<Float> v2, VectorMask<Float> m) {\n+    static FloatVector compressHelper(Vector<Float> v, VectorMask<Float> m) {\n@@ -368,2 +368,2 @@\n-        FloatVector r  = (FloatVector) v1;\n-        FloatVector vi = (FloatVector) v2;\n+        FloatVector r  = (FloatVector) vsp.zero();\n+        FloatVector vi = (FloatVector) v;\n@@ -2257,2 +2257,2 @@\n-                                    float.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    float.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2275,2 +2275,2 @@\n-                                    float.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    float.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static IntVector expandHelper(Vector<Integer> v1, Vector<Integer> v2, VectorMask<Integer> m) {\n+    static IntVector expandHelper(Vector<Integer> v, VectorMask<Integer> m) {\n@@ -356,2 +356,2 @@\n-        IntVector r  = (IntVector) v1;\n-        IntVector vi = (IntVector) v2;\n+        IntVector r  = (IntVector) vsp.zero();\n+        IntVector vi = (IntVector) v;\n@@ -366,1 +366,1 @@\n-    static IntVector compressHelper(Vector<Integer> v1, Vector<Integer> v2, VectorMask<Integer> m) {\n+    static IntVector compressHelper(Vector<Integer> v, VectorMask<Integer> m) {\n@@ -368,2 +368,2 @@\n-        IntVector r  = (IntVector) v1;\n-        IntVector vi = (IntVector) v2;\n+        IntVector r  = (IntVector) vsp.zero();\n+        IntVector vi = (IntVector) v;\n@@ -2398,2 +2398,2 @@\n-                                    int.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    int.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2416,2 +2416,2 @@\n-                                    int.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    int.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static LongVector expandHelper(Vector<Long> v1, Vector<Long> v2, VectorMask<Long> m) {\n+    static LongVector expandHelper(Vector<Long> v, VectorMask<Long> m) {\n@@ -356,2 +356,2 @@\n-        LongVector r  = (LongVector) v1;\n-        LongVector vi = (LongVector) v2;\n+        LongVector r  = (LongVector) vsp.zero();\n+        LongVector vi = (LongVector) v;\n@@ -366,1 +366,1 @@\n-    static LongVector compressHelper(Vector<Long> v1, Vector<Long> v2, VectorMask<Long> m) {\n+    static LongVector compressHelper(Vector<Long> v, VectorMask<Long> m) {\n@@ -368,2 +368,2 @@\n-        LongVector r  = (LongVector) v1;\n-        LongVector vi = (LongVector) v2;\n+        LongVector r  = (LongVector) vsp.zero();\n+        LongVector vi = (LongVector) v;\n@@ -2264,2 +2264,2 @@\n-                                    long.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    long.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2282,2 +2282,2 @@\n-                                    long.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    long.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static ShortVector expandHelper(Vector<Short> v1, Vector<Short> v2, VectorMask<Short> m) {\n+    static ShortVector expandHelper(Vector<Short> v, VectorMask<Short> m) {\n@@ -356,2 +356,2 @@\n-        ShortVector r  = (ShortVector) v1;\n-        ShortVector vi = (ShortVector) v2;\n+        ShortVector r  = (ShortVector) vsp.zero();\n+        ShortVector vi = (ShortVector) v;\n@@ -366,1 +366,1 @@\n-    static ShortVector compressHelper(Vector<Short> v1, Vector<Short> v2, VectorMask<Short> m) {\n+    static ShortVector compressHelper(Vector<Short> v, VectorMask<Short> m) {\n@@ -368,2 +368,2 @@\n-        ShortVector r  = (ShortVector) v1;\n-        ShortVector vi = (ShortVector) v2;\n+        ShortVector r  = (ShortVector) vsp.zero();\n+        ShortVector vi = (ShortVector) v;\n@@ -2399,2 +2399,2 @@\n-                                    short.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    short.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2417,2 +2417,2 @@\n-                                    short.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    short.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -358,1 +358,1 @@\n-    static $abstractvectortype$ expandHelper(Vector<$Boxtype$> v1, Vector<$Boxtype$> v2, VectorMask<$Boxtype$> m) {\n+    static $abstractvectortype$ expandHelper(Vector<$Boxtype$> v, VectorMask<$Boxtype$> m) {\n@@ -360,2 +360,2 @@\n-        $abstractvectortype$ r  = ($abstractvectortype$) v1;\n-        $abstractvectortype$ vi = ($abstractvectortype$) v2;\n+        $abstractvectortype$ r  = ($abstractvectortype$) vsp.zero();\n+        $abstractvectortype$ vi = ($abstractvectortype$) v;\n@@ -370,1 +370,1 @@\n-    static $abstractvectortype$ compressHelper(Vector<$Boxtype$> v1, Vector<$Boxtype$> v2, VectorMask<$Boxtype$> m) {\n+    static $abstractvectortype$ compressHelper(Vector<$Boxtype$> v, VectorMask<$Boxtype$> m) {\n@@ -372,2 +372,2 @@\n-        $abstractvectortype$ r  = ($abstractvectortype$) v1;\n-        $abstractvectortype$ vi = ($abstractvectortype$) v2;\n+        $abstractvectortype$ r  = ($abstractvectortype$) vsp.zero();\n+        $abstractvectortype$ vi = ($abstractvectortype$) v;\n@@ -2696,2 +2696,2 @@\n-                                    $type$.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> compressHelper(v1, v2, m1));\n+                                    $type$.class, length(), this, m,\n+                                    (v1, m1) -> compressHelper(v1, m1));\n@@ -2714,2 +2714,2 @@\n-                                    $type$.class, length(), vspecies().zero(), this, m,\n-                                    (v1, v2, m1) -> expandHelper(v1, v2, m1));\n+                                    $type$.class, length(), this, m,\n+                                    (v1, m1) -> expandHelper(v1, m1));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}