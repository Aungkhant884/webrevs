{"files":[{"patch":"@@ -1427,1 +1427,0 @@\n-    assert(type2aelembytes(in_vt->element_basic_type()) == type2aelembytes(vt->element_basic_type()), \"element size must match\");\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-                Byte128Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -687,1 +687,1 @@\n-                Byte256Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -751,1 +751,1 @@\n-                Byte512Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -639,1 +639,1 @@\n-                Byte64Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-                ByteMaxMask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -616,1 +616,1 @@\n-                Double128Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -620,1 +620,1 @@\n-                Double256Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-                Double512Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-                Double64Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-                DoubleMaxMask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -620,1 +620,1 @@\n-                Float128Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-                Float256Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -644,1 +644,1 @@\n-                Float512Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -616,1 +616,1 @@\n-                Float64Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-                FloatMaxMask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -631,1 +631,1 @@\n-                Int128Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -639,1 +639,1 @@\n-                Int256Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-                Int512Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -627,1 +627,1 @@\n-                Int64Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-                IntMaxMask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -617,1 +617,1 @@\n-                Long128Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-                Long256Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-                Long512Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -615,1 +615,1 @@\n-                Long64Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -615,1 +615,1 @@\n-                LongMaxMask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -639,1 +639,1 @@\n-                Short128Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-                Short256Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -687,1 +687,1 @@\n-                Short512Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -631,1 +631,1 @@\n-                Short64Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-                ShortMaxMask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -898,1 +898,1 @@\n-                $Type$$bits$Mask::defaultMaskCast);\n+                (m, s) -> s.maskFactory(m.toArray()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskCastOperationsBenchmark.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}