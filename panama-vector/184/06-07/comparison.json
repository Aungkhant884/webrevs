{"files":[{"patch":"@@ -1916,1 +1916,1 @@\n-        return (int)(CompressExpandTest.compress(a,b));\n+        return (int)(CompressExpandTest.compress(a, b));\n@@ -1960,1 +1960,1 @@\n-        return (int)(CompressExpandTest.expand(a,b));\n+        return (int)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1916,1 +1916,1 @@\n-        return (int)(CompressExpandTest.compress(a,b));\n+        return (int)(CompressExpandTest.compress(a, b));\n@@ -1960,1 +1960,1 @@\n-        return (int)(CompressExpandTest.expand(a,b));\n+        return (int)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1916,1 +1916,1 @@\n-        return (int)(CompressExpandTest.compress(a,b));\n+        return (int)(CompressExpandTest.compress(a, b));\n@@ -1960,1 +1960,1 @@\n-        return (int)(CompressExpandTest.expand(a,b));\n+        return (int)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1916,1 +1916,1 @@\n-        return (int)(CompressExpandTest.compress(a,b));\n+        return (int)(CompressExpandTest.compress(a, b));\n@@ -1960,1 +1960,1 @@\n-        return (int)(CompressExpandTest.expand(a,b));\n+        return (int)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1921,1 +1921,1 @@\n-        return (int)(CompressExpandTest.compress(a,b));\n+        return (int)(CompressExpandTest.compress(a, b));\n@@ -1965,1 +1965,1 @@\n-        return (int)(CompressExpandTest.expand(a,b));\n+        return (int)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1938,1 +1938,1 @@\n-        return (long)(CompressExpandTest.compress(a,b));\n+        return (long)(CompressExpandTest.compress(a, b));\n@@ -1982,1 +1982,1 @@\n-        return (long)(CompressExpandTest.expand(a,b));\n+        return (long)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1938,1 +1938,1 @@\n-        return (long)(CompressExpandTest.compress(a,b));\n+        return (long)(CompressExpandTest.compress(a, b));\n@@ -1982,1 +1982,1 @@\n-        return (long)(CompressExpandTest.expand(a,b));\n+        return (long)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1938,1 +1938,1 @@\n-        return (long)(CompressExpandTest.compress(a,b));\n+        return (long)(CompressExpandTest.compress(a, b));\n@@ -1982,1 +1982,1 @@\n-        return (long)(CompressExpandTest.expand(a,b));\n+        return (long)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1938,1 +1938,1 @@\n-        return (long)(CompressExpandTest.compress(a,b));\n+        return (long)(CompressExpandTest.compress(a, b));\n@@ -1982,1 +1982,1 @@\n-        return (long)(CompressExpandTest.expand(a,b));\n+        return (long)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1943,1 +1943,1 @@\n-        return (long)(CompressExpandTest.compress(a,b));\n+        return (long)(CompressExpandTest.compress(a, b));\n@@ -1987,1 +1987,1 @@\n-        return (long)(CompressExpandTest.expand(a,b));\n+        return (long)(CompressExpandTest.expand(a, b));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -406,2 +406,2 @@\n-gen_binary_alu_op \"COMPRESS_BITS\" \"CompressExpandTest.compress(a,b)\" \"intOrLong\"\n-gen_binary_alu_op \"EXPAND_BITS\" \"CompressExpandTest.expand(a,b)\" \"intOrLong\"\n+gen_binary_alu_op \"COMPRESS_BITS\" \"CompressExpandTest.compress(a, b)\" \"intOrLong\"\n+gen_binary_alu_op \"EXPAND_BITS\" \"CompressExpandTest.expand(a, b)\" \"intOrLong\"\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -477,1 +477,1 @@\n-                rs[i] = (int)(CompressExpandTest.compress(a,b));\n+                rs[i] = (int)(CompressExpandTest.compress(a, b));\n@@ -498,1 +498,1 @@\n-                    rs[i] = (int)(CompressExpandTest.compress(a,b));\n+                    rs[i] = (int)(CompressExpandTest.compress(a, b));\n@@ -519,1 +519,1 @@\n-                rs[i] = (int)(CompressExpandTest.expand(a,b));\n+                rs[i] = (int)(CompressExpandTest.expand(a, b));\n@@ -540,1 +540,1 @@\n-                    rs[i] = (int)(CompressExpandTest.expand(a,b));\n+                    rs[i] = (int)(CompressExpandTest.expand(a, b));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntScalar.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -477,1 +477,1 @@\n-                rs[i] = (long)(CompressExpandTest.compress(a,b));\n+                rs[i] = (long)(CompressExpandTest.compress(a, b));\n@@ -498,1 +498,1 @@\n-                    rs[i] = (long)(CompressExpandTest.compress(a,b));\n+                    rs[i] = (long)(CompressExpandTest.compress(a, b));\n@@ -519,1 +519,1 @@\n-                rs[i] = (long)(CompressExpandTest.expand(a,b));\n+                rs[i] = (long)(CompressExpandTest.expand(a, b));\n@@ -540,1 +540,1 @@\n-                    rs[i] = (long)(CompressExpandTest.expand(a,b));\n+                    rs[i] = (long)(CompressExpandTest.expand(a, b));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongScalar.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}