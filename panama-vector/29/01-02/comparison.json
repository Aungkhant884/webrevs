{"files":[{"patch":"@@ -2501,8 +2501,1 @@\n-    \/\/ Limit the vector size to 8 bytes\n-    int size = 32 \/ type2aelembytes(bt);\n-    if (bt == T_BYTE) {\n-      \/\/ To support vector api shuffle\/rearrange.\n-      size = 8;\n-    }\n-    if (size < 4) size = 4;\n-    return MIN2(size,max_size);\n+    return max_size;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-\/\/ vector load\/store\/reinterpret\n+\/\/ vector load\/store\n@@ -342,0 +342,2 @@\n+\/\/ vector reinterpret\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-\/\/ vector load\/store\/reinterpret\n+\/\/ vector load\/store\n@@ -345,0 +345,2 @@\n+\n+\/\/ vector reinterpret\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1836,1 +1836,1 @@\n-      int num_elem_for_resize = MAX2(num_elem_to, Matcher::min_vector_size(elem_bt_to));\n+      int num_elem_for_resize = MAX2(num_elem_to, Matcher::min_vector_size(elem_bt_from));\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}