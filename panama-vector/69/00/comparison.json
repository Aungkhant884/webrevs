{"files":[{"patch":"@@ -621,0 +621,13 @@\n+static bool elem_consistent_with_arr(BasicType elem_bt, const TypeAryPtr* arr_type) {\n+  assert(arr_type != NULL, \"unexpected\");\n+  BasicType arr_elem_bt = arr_type->elem()->array_element_basic_type();\n+  if (elem_bt == arr_elem_bt) {\n+    return true;\n+  } else if (elem_bt == T_SHORT && arr_elem_bt == T_CHAR) {\n+    \/\/ Load\/store of short vector from\/to char[] is supported\n+    return true;\n+  } else {\n+    return false;\n+  }\n+}\n+\n@@ -699,1 +712,6 @@\n-  if (arr_type != NULL && !using_byte_array && elem_bt != arr_type->elem()->array_element_basic_type() && !is_mask) {\n+  if (arr_type != NULL && !using_byte_array && !is_mask && !elem_consistent_with_arr(elem_bt, arr_type)) {\n+    if (C->print_intrinsics()) {\n+      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s ismask=no\",\n+                    is_store, is_store ? \"store\" : \"load\",\n+                    num_elem, type2name(elem_bt), type2name(arr_type->elem()->array_element_basic_type()));\n+    }\n@@ -882,1 +900,6 @@\n-  if (arr_type == NULL || (arr_type != NULL && elem_bt != arr_type->elem()->array_element_basic_type())) {\n+  if (arr_type == NULL || (arr_type != NULL && !elem_consistent_with_arr(elem_bt, arr_type))) {\n+    if (C->print_intrinsics()) {\n+      tty->print_cr(\"  ** not supported: arity=%d op=%s vlen=%d etype=%s atype=%s ismask=no\",\n+                    is_scatter, is_scatter ? \"scatter\" : \"gather\",\n+                    num_elem, type2name(elem_bt), type2name(arr_type->elem()->array_element_basic_type()));\n+    }\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"}]}