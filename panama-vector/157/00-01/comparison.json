{"files":[{"patch":"@@ -693,10 +693,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Byte128Mask(res);\n-            }\n@@ -746,3 +736,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -756,3 +743,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -766,3 +750,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -788,3 +769,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -799,3 +777,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -725,10 +725,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Byte256Mask(res);\n-            }\n@@ -778,3 +768,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -788,3 +775,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -798,3 +782,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -820,3 +801,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -831,3 +809,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -789,10 +789,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Byte512Mask(res);\n-            }\n@@ -842,3 +832,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -852,3 +839,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -862,3 +846,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -884,3 +865,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -895,3 +873,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -677,10 +677,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Byte64Mask(res);\n-            }\n@@ -730,3 +720,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -740,3 +727,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -750,3 +734,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -772,3 +753,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -783,3 +761,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -663,10 +663,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new ByteMaxMask(res);\n-            }\n@@ -716,3 +706,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -726,3 +713,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -736,3 +720,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -758,3 +739,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -769,3 +747,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2404,12 +2404,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          byte[] arr = toArray();\n-          byte[] res = new byte[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2434,12 +2422,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          byte[] arr = toArray();\n-          byte[] res = new byte[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -654,10 +654,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Double128Mask(res);\n-            }\n@@ -707,3 +697,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -717,3 +704,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -727,3 +711,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -749,3 +730,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -760,3 +738,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -658,10 +658,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Double256Mask(res);\n-            }\n@@ -711,3 +701,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -721,3 +708,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -731,3 +715,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -753,3 +734,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -764,3 +742,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -666,10 +666,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Double512Mask(res);\n-            }\n@@ -719,3 +709,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -729,3 +716,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -739,3 +723,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -761,3 +742,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -772,3 +750,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -652,10 +652,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Double64Mask(res);\n-            }\n@@ -705,3 +695,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -715,3 +702,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -725,3 +709,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -747,3 +728,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -758,3 +736,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -651,10 +651,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new DoubleMaxMask(res);\n-            }\n@@ -704,3 +694,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -714,3 +701,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -724,3 +708,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -746,3 +727,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -757,3 +735,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2250,12 +2250,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          double[] arr = toArray();\n-          double[] res = new double[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2280,12 +2268,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          double[] arr = toArray();\n-          double[] res = new double[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -658,10 +658,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Float128Mask(res);\n-            }\n@@ -711,3 +701,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -721,3 +708,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -731,3 +715,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -753,3 +734,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -764,3 +742,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -666,10 +666,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Float256Mask(res);\n-            }\n@@ -719,3 +709,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -729,3 +716,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -739,3 +723,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -761,3 +742,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -772,3 +750,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -682,10 +682,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Float512Mask(res);\n-            }\n@@ -735,3 +725,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -745,3 +732,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -755,3 +739,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -777,3 +758,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -788,3 +766,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -654,10 +654,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Float64Mask(res);\n-            }\n@@ -707,3 +697,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -717,3 +704,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -727,3 +711,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -749,3 +730,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -760,3 +738,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -651,10 +651,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new FloatMaxMask(res);\n-            }\n@@ -704,3 +694,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -714,3 +701,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -724,3 +708,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -746,3 +727,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -757,3 +735,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2262,12 +2262,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          float[] arr = toArray();\n-          float[] res = new float[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2292,12 +2280,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          float[] arr = toArray();\n-          float[] res = new float[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -669,10 +669,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Int128Mask(res);\n-            }\n@@ -722,3 +712,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -732,3 +719,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -742,3 +726,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -764,3 +745,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -775,3 +753,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -677,10 +677,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Int256Mask(res);\n-            }\n@@ -730,3 +720,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -740,3 +727,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -750,3 +734,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -772,3 +753,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -783,3 +761,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -693,10 +693,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Int512Mask(res);\n-            }\n@@ -746,3 +736,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -756,3 +743,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -766,3 +750,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -788,3 +769,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -799,3 +777,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -665,10 +665,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Int64Mask(res);\n-            }\n@@ -718,3 +708,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -728,3 +715,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -738,3 +722,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -760,3 +741,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -771,3 +749,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -663,10 +663,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new IntMaxMask(res);\n-            }\n@@ -716,3 +706,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -726,3 +713,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -736,3 +720,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -758,3 +739,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -769,3 +747,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2403,12 +2403,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          int[] arr = toArray();\n-          int[] res = new int[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2433,12 +2421,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          int[] arr = toArray();\n-          int[] res = new int[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -655,10 +655,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Long128Mask(res);\n-            }\n@@ -708,3 +698,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -718,3 +705,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -728,3 +712,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -750,3 +731,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -761,3 +739,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -659,10 +659,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Long256Mask(res);\n-            }\n@@ -712,3 +702,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -722,3 +709,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -732,3 +716,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -754,3 +735,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -765,3 +743,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -667,10 +667,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Long512Mask(res);\n-            }\n@@ -720,3 +710,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -730,3 +717,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -740,3 +724,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -762,3 +743,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -773,3 +751,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -653,10 +653,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Long64Mask(res);\n-            }\n@@ -706,3 +696,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -716,3 +703,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -726,3 +710,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -748,3 +729,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -759,3 +737,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -653,10 +653,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new LongMaxMask(res);\n-            }\n@@ -706,3 +696,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -716,3 +703,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -726,3 +710,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -748,3 +729,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -759,3 +737,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2269,12 +2269,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          long[] arr = toArray();\n-          long[] res = new long[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2299,12 +2287,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          long[] arr = toArray();\n-          long[] res = new long[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -677,10 +677,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Short128Mask(res);\n-            }\n@@ -730,3 +720,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -740,3 +727,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -750,3 +734,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -772,3 +753,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -783,3 +761,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -693,10 +693,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Short256Mask(res);\n-            }\n@@ -746,3 +736,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -756,3 +743,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -766,3 +750,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -788,3 +769,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -799,3 +777,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -725,10 +725,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Short512Mask(res);\n-            }\n@@ -778,3 +768,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -788,3 +775,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -798,3 +782,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -820,3 +801,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -831,3 +809,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -669,10 +669,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new Short64Mask(res);\n-            }\n@@ -722,3 +712,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -732,3 +719,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -742,3 +726,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -764,3 +745,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -775,3 +753,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -663,10 +663,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new ShortMaxMask(res);\n-            }\n@@ -716,3 +706,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -726,3 +713,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -736,3 +720,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -758,3 +739,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -769,3 +747,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2404,12 +2404,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          short[] arr = toArray();\n-          short[] res = new short[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2434,12 +2422,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          short[] arr = toArray();\n-          short[] res = new short[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2701,12 +2701,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          $type$[] arr = toArray();\n-          $type$[] res = new $type$[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[j++] = arr[i];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n@@ -2731,12 +2719,0 @@\n-      int vlen = length();\n-      if (vlen < 4)  {\n-          $type$[] arr = toArray();\n-          $type$[] res = new $type$[vlen];\n-          boolean [] bits = m.getBits();\n-          for(int i = 0, j = 0; i < vlen; i++) {\n-              if(bits[i]) {\n-                  res[i] = arr[j++];\n-              }\n-          }\n-          return vectorFactory(res);\n-      }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -936,10 +936,0 @@\n-            if (VLENGTH < 4) {\n-                boolean[] bits = getBits();\n-                boolean[] res  = new boolean[VLENGTH];\n-                for (int i = 0, j = 0; i < VLENGTH; i++){\n-                    if (bits[i]) {\n-                        res[j++] = bits[i];\n-                    }\n-                }\n-                return new $masktype$(res);\n-            }\n@@ -989,3 +979,0 @@\n-            if (VLENGTH < 4) {\n-                return trueCountHelper(getBits());\n-            }\n@@ -999,3 +986,0 @@\n-            if (VLENGTH < 4) {\n-                return firstTrueHelper(getBits());\n-            }\n@@ -1009,3 +993,0 @@\n-            if (VLENGTH < 4) {\n-                return lastTrueHelper(getBits());\n-            }\n@@ -1031,3 +1012,0 @@\n-            if (VLENGTH < 4) {\n-                return anyTrueHelper(getBits());\n-            }\n@@ -1042,3 +1020,0 @@\n-            if (VLENGTH < 4) {\n-                return allTrueHelper(getBits());\n-            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"}]}