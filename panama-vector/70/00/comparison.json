{"files":[{"patch":"@@ -232,1 +232,0 @@\n-      case Op_VectorRearrange:\n@@ -3996,0 +3995,86 @@\n+\n+\/\/ ------------------------------ Vector rearrange -------------------------------\n+\n+instruct rearrangeB(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_BYTE);\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, B, $src, $shuffle\\t# vector rearrange (B)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ B,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct rearrangeS(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_SHORT);\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, H, $src, $shuffle\\t# vector rearrange (H)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ H,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct rearrangeI(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_INT);\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, S, $src, $shuffle\\t# vector rearrange (S)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ S,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct rearrangeF(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, S, $src, $shuffle\\t# vector rearrange (S)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ S,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct rearrangeL(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, D, $src, $shuffle\\t# vector rearrange (D)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ D,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct rearrangeD(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE);\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, D, $src, $shuffle\\t# vector rearrange (D)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ D,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":86,"deletions":1,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -227,1 +227,0 @@\n-      case Op_VectorRearrange:\n@@ -2339,0 +2338,24 @@\n+\n+\/\/ ------------------------------ Vector rearrange -------------------------------\n+dnl\n+define(`VECTOR_REARRANGE', `\n+instruct rearrange$1`'(vReg dst, vReg src, vReg shuffle)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_`'TYPE2DATATYPE($1));\n+  match(Set dst (VectorRearrange src shuffle));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_tbl $dst, $2, $src, $shuffle\\t# vector rearrange ($2)\" %}\n+  ins_encode %{\n+    __ sve_tbl(as_FloatRegister($dst$$reg), __ $2,\n+               as_FloatRegister($src$$reg), as_FloatRegister($shuffle$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}')dnl\n+dnl              $1 $2\n+VECTOR_REARRANGE(B, B)\n+VECTOR_REARRANGE(S, H)\n+VECTOR_REARRANGE(I, S)\n+VECTOR_REARRANGE(F, S)\n+VECTOR_REARRANGE(L, D)\n+VECTOR_REARRANGE(D, D)\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -3548,0 +3548,8 @@\n+\/\/ SVE programmable table lookup in single vector table\n+  void sve_tbl(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn, FloatRegister Zm) {\n+    starti;\n+    assert(T != Q, \"invalid size\");\n+    f(0b00000101, 31, 24), f(T, 23, 22), f(0b1, 21), rf(Zm, 16);\n+    f(0b001100, 15, 10), rf(Zn, 5), rf(Zd, 0);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1604,0 +1604,1 @@\n+                        [\"tbl\",     \"__ sve_tbl(z16, __ S, z17, z18);\",                   \"tbl\\tz16.s, {z17.s}, z18.s\"],\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -791,0 +791,1 @@\n+    __ sve_tbl(z16, __ S, z17, z18);                   \/\/       tbl     z16.s, {z17.s}, z18.s\n@@ -996,7 +997,7 @@\n-    0x14000000,     0x17ffffd7,     0x1400031b,     0x94000000,\n-    0x97ffffd4,     0x94000318,     0x3400000a,     0x34fffa2a,\n-    0x340062aa,     0x35000008,     0x35fff9c8,     0x35006248,\n-    0xb400000b,     0xb4fff96b,     0xb40061eb,     0xb500001d,\n-    0xb5fff91d,     0xb500619d,     0x10000013,     0x10fff8b3,\n-    0x10006133,     0x90000013,     0x36300016,     0x3637f836,\n-    0x363060b6,     0x3758000c,     0x375ff7cc,     0x3758604c,\n+    0x14000000,     0x17ffffd7,     0x1400031c,     0x94000000,\n+    0x97ffffd4,     0x94000319,     0x3400000a,     0x34fffa2a,\n+    0x340062ca,     0x35000008,     0x35fff9c8,     0x35006268,\n+    0xb400000b,     0xb4fff96b,     0xb400620b,     0xb500001d,\n+    0xb5fff91d,     0xb50061bd,     0x10000013,     0x10fff8b3,\n+    0x10006153,     0x90000013,     0x36300016,     0x3637f836,\n+    0x363060d6,     0x3758000c,     0x375ff7cc,     0x3758606c,\n@@ -1007,13 +1008,13 @@\n-    0x54005e20,     0x54000001,     0x54fff541,     0x54005dc1,\n-    0x54000002,     0x54fff4e2,     0x54005d62,     0x54000002,\n-    0x54fff482,     0x54005d02,     0x54000003,     0x54fff423,\n-    0x54005ca3,     0x54000003,     0x54fff3c3,     0x54005c43,\n-    0x54000004,     0x54fff364,     0x54005be4,     0x54000005,\n-    0x54fff305,     0x54005b85,     0x54000006,     0x54fff2a6,\n-    0x54005b26,     0x54000007,     0x54fff247,     0x54005ac7,\n-    0x54000008,     0x54fff1e8,     0x54005a68,     0x54000009,\n-    0x54fff189,     0x54005a09,     0x5400000a,     0x54fff12a,\n-    0x540059aa,     0x5400000b,     0x54fff0cb,     0x5400594b,\n-    0x5400000c,     0x54fff06c,     0x540058ec,     0x5400000d,\n-    0x54fff00d,     0x5400588d,     0x5400000e,     0x54ffefae,\n-    0x5400582e,     0x5400000f,     0x54ffef4f,     0x540057cf,\n+    0x54005e40,     0x54000001,     0x54fff541,     0x54005de1,\n+    0x54000002,     0x54fff4e2,     0x54005d82,     0x54000002,\n+    0x54fff482,     0x54005d22,     0x54000003,     0x54fff423,\n+    0x54005cc3,     0x54000003,     0x54fff3c3,     0x54005c63,\n+    0x54000004,     0x54fff364,     0x54005c04,     0x54000005,\n+    0x54fff305,     0x54005ba5,     0x54000006,     0x54fff2a6,\n+    0x54005b46,     0x54000007,     0x54fff247,     0x54005ae7,\n+    0x54000008,     0x54fff1e8,     0x54005a88,     0x54000009,\n+    0x54fff189,     0x54005a29,     0x5400000a,     0x54fff12a,\n+    0x540059ca,     0x5400000b,     0x54fff0cb,     0x5400596b,\n+    0x5400000c,     0x54fff06c,     0x5400590c,     0x5400000d,\n+    0x54fff00d,     0x540058ad,     0x5400000e,     0x54ffefae,\n+    0x5400584e,     0x5400000f,     0x54ffef4f,     0x540057ef,\n@@ -1051,1 +1052,1 @@\n-    0xbd1b1869,     0x5800481b,     0x1800000b,     0xf8945060,\n+    0xbd1b1869,     0x5800483b,     0x1800000b,     0xf8945060,\n@@ -1155,41 +1156,41 @@\n-    0x1e601000,     0x1e603000,     0x1e621000,     0x1e623000,\n-    0x1e641000,     0x1e643000,     0x1e661000,     0x1e663000,\n-    0x1e681000,     0x1e683000,     0x1e6a1000,     0x1e6a3000,\n-    0x1e6c1000,     0x1e6c3000,     0x1e6e1000,     0x1e6e3000,\n-    0x1e701000,     0x1e703000,     0x1e721000,     0x1e723000,\n-    0x1e741000,     0x1e743000,     0x1e761000,     0x1e763000,\n-    0x1e781000,     0x1e783000,     0x1e7a1000,     0x1e7a3000,\n-    0x1e7c1000,     0x1e7c3000,     0x1e7e1000,     0x1e7e3000,\n-    0xf8358303,     0xf8280299,     0xf8301051,     0xf8212300,\n-    0xf8243183,     0xf83f515c,     0xf83a4182,     0xf830703f,\n-    0xf82d601d,     0xf8b3822c,     0xf8b6038d,     0xf8be103f,\n-    0xf8ba209c,     0xf8be30c4,     0xf8be51fa,     0xf8a94188,\n-    0xf8a07034,     0xf8b86002,     0xf8e98358,     0xf8f0007e,\n-    0xf8ea1157,     0xf8e42050,     0xf8eb3148,     0xf8ef5051,\n-    0xf8ea418c,     0xf8ef704d,     0xf8e76354,     0xf8708044,\n-    0xf86401ec,     0xf87511f0,     0xf86b22f5,     0xf86c32fa,\n-    0xf87c516e,     0xf8784181,     0xf87f720a,     0xf8676062,\n-    0xb82d8233,     0xb8300023,     0xb82b10be,     0xb82823af,\n-    0xb83e3280,     0xb82752f4,     0xb83c4375,     0xb8397025,\n-    0xb83763f0,     0xb8a5812c,     0xb8bc03af,     0xb8b6127f,\n-    0xb8bf21c5,     0xb8b031ff,     0xb8bb5214,     0xb8ac412b,\n-    0xb8a6723e,     0xb8bb63dc,     0xb8e7828a,     0xb8ea0304,\n-    0xb8f112d1,     0xb8e321fd,     0xb8f63273,     0xb8f651e2,\n-    0xb8e6420c,     0xb8eb72ed,     0xb8e1627e,     0xb8658051,\n-    0xb87001b6,     0xb86a13b5,     0xb87b236c,     0xb86333e1,\n-    0xb8785233,     0xb869437c,     0xb86f72a7,     0xb877633f,\n-    0xce3a47c2,     0xce110aca,     0xce788c11,     0xce8296d9,\n-    0xce7b806c,     0xce70879d,     0xcec080da,     0xce718b89,\n-    0x04670087,     0x042806c9,     0x659e029b,     0x6590081a,\n-    0x65c80723,     0x04d6bb55,     0x04000096,     0x04508071,\n-    0x041aa8c1,     0x04939ce9,     0x045194b6,     0x041013c8,\n-    0x04d7a171,     0x049ea35c,     0x04c80dbc,     0x040a18b0,\n-    0x044109ed,     0x049cb57a,     0x65809096,     0x658d9233,\n-    0x65c68c4e,     0x658796e3,     0x65828626,     0x049db21b,\n-    0x6582bc62,     0x6580b266,     0x65c1b50c,     0x658db013,\n-    0x65c18677,     0x65a010cd,     0x65a8332e,     0x65bb56d6,\n-    0x65b46e23,     0x04405ce4,     0x048476d0,     0x042b32c9,\n-    0x04b033c5,     0x04613176,     0x05f06a88,     0x05a46c8f,\n-    0x041a27a8,     0x04d833bc,     0x04592c49,     0x040820fc,\n-    0x044a363a,     0x65c732a8,     0x65c636a5,     0x65d833b6,\n-    0x04812093,\n+    0x05b23230,     0x1e601000,     0x1e603000,     0x1e621000,\n+    0x1e623000,     0x1e641000,     0x1e643000,     0x1e661000,\n+    0x1e663000,     0x1e681000,     0x1e683000,     0x1e6a1000,\n+    0x1e6a3000,     0x1e6c1000,     0x1e6c3000,     0x1e6e1000,\n+    0x1e6e3000,     0x1e701000,     0x1e703000,     0x1e721000,\n+    0x1e723000,     0x1e741000,     0x1e743000,     0x1e761000,\n+    0x1e763000,     0x1e781000,     0x1e783000,     0x1e7a1000,\n+    0x1e7a3000,     0x1e7c1000,     0x1e7c3000,     0x1e7e1000,\n+    0x1e7e3000,     0xf8358303,     0xf8280299,     0xf8301051,\n+    0xf8212300,     0xf8243183,     0xf83f515c,     0xf83a4182,\n+    0xf830703f,     0xf82d601d,     0xf8b3822c,     0xf8b6038d,\n+    0xf8be103f,     0xf8ba209c,     0xf8be30c4,     0xf8be51fa,\n+    0xf8a94188,     0xf8a07034,     0xf8b86002,     0xf8e98358,\n+    0xf8f0007e,     0xf8ea1157,     0xf8e42050,     0xf8eb3148,\n+    0xf8ef5051,     0xf8ea418c,     0xf8ef704d,     0xf8e76354,\n+    0xf8708044,     0xf86401ec,     0xf87511f0,     0xf86b22f5,\n+    0xf86c32fa,     0xf87c516e,     0xf8784181,     0xf87f720a,\n+    0xf8676062,     0xb82d8233,     0xb8300023,     0xb82b10be,\n+    0xb82823af,     0xb83e3280,     0xb82752f4,     0xb83c4375,\n+    0xb8397025,     0xb83763f0,     0xb8a5812c,     0xb8bc03af,\n+    0xb8b6127f,     0xb8bf21c5,     0xb8b031ff,     0xb8bb5214,\n+    0xb8ac412b,     0xb8a6723e,     0xb8bb63dc,     0xb8e7828a,\n+    0xb8ea0304,     0xb8f112d1,     0xb8e321fd,     0xb8f63273,\n+    0xb8f651e2,     0xb8e6420c,     0xb8eb72ed,     0xb8e1627e,\n+    0xb8658051,     0xb87001b6,     0xb86a13b5,     0xb87b236c,\n+    0xb86333e1,     0xb8785233,     0xb869437c,     0xb86f72a7,\n+    0xb877633f,     0xce3a47c2,     0xce110aca,     0xce788c11,\n+    0xce8296d9,     0xce7b806c,     0xce70879d,     0xcec080da,\n+    0xce718b89,     0x04670087,     0x042806c9,     0x659e029b,\n+    0x6590081a,     0x65c80723,     0x04d6bb55,     0x04000096,\n+    0x04508071,     0x041aa8c1,     0x04939ce9,     0x045194b6,\n+    0x041013c8,     0x04d7a171,     0x049ea35c,     0x04c80dbc,\n+    0x040a18b0,     0x044109ed,     0x049cb57a,     0x65809096,\n+    0x658d9233,     0x65c68c4e,     0x658796e3,     0x65828626,\n+    0x049db21b,     0x6582bc62,     0x6580b266,     0x65c1b50c,\n+    0x658db013,     0x65c18677,     0x65a010cd,     0x65a8332e,\n+    0x65bb56d6,     0x65b46e23,     0x04405ce4,     0x048476d0,\n+    0x042b32c9,     0x04b033c5,     0x04613176,     0x05f06a88,\n+    0x05a46c8f,     0x041a27a8,     0x04d833bc,     0x04592c49,\n+    0x040820fc,     0x044a363a,     0x65c732a8,     0x65c636a5,\n+    0x65d833b6,     0x04812093,\n","filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h","additions":63,"deletions":62,"binary":false,"changes":125,"status":"modified"}]}