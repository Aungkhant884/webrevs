{"files":[{"patch":"@@ -700,0 +700,6 @@\n+  if (!elem_type->is_primitive_type()) {\n+    if (C->print_intrinsics()) {\n+      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n+    }\n+    return false; \/\/ should be primitive type\n+  }\n@@ -766,0 +772,6 @@\n+  if (!elem_type->is_primitive_type()) {\n+    if (C->print_intrinsics()) {\n+      tty->print_cr(\"  ** not a primitive bt=%d\", elem_type->basic_type());\n+    }\n+    return false; \/\/ should be primitive type\n+  }\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -648,1 +648,1 @@\n-        \/\/ FIXME: Let the assert condition true for Halffloat as laneType is short for Halffloat.\n+        \/\/ FIXME: Remove the additional check for Halffloat laneTypes from following assersion after proper fix. Currently the incoming laneType does not            comply with the laneType of Halffloat species.\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractSpecies.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -685,1 +685,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat128Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat128Mask.class, null, Halffloat.class, VLENGTH,\n@@ -695,1 +695,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat128Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat128Mask.class, null, Halffloat.class, VLENGTH,\n@@ -705,1 +705,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat128Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat128Mask.class, null, Halffloat.class, VLENGTH,\n@@ -715,1 +715,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat128Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat128Mask.class, Halffloat.class, VLENGTH, this,\n@@ -722,1 +722,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat128Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat128Mask.class, Halffloat.class, VLENGTH, this,\n@@ -729,1 +729,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat128Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat128Mask.class, Halffloat.class, VLENGTH, this,\n@@ -739,1 +739,1 @@\n-            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat128Mask.class, short.class, VLENGTH, this,\n+            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat128Mask.class, Halffloat.class, VLENGTH, this,\n@@ -748,1 +748,1 @@\n-            return VectorSupport.test(BT_ne, Halffloat128Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_ne, Halffloat128Mask.class, Halffloat.class, VLENGTH,\n@@ -756,1 +756,1 @@\n-            return VectorSupport.test(BT_overflow, Halffloat128Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_overflow, Halffloat128Mask.class, Halffloat.class, VLENGTH,\n@@ -764,1 +764,1 @@\n-            return VectorSupport.fromBitsCoerced(Halffloat128Mask.class, short.class, VLENGTH,\n+            return VectorSupport.fromBitsCoerced(Halffloat128Mask.class, Halffloat.class, VLENGTH,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat128Vector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -701,1 +701,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat256Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat256Mask.class, null, Halffloat.class, VLENGTH,\n@@ -711,1 +711,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat256Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat256Mask.class, null, Halffloat.class, VLENGTH,\n@@ -721,1 +721,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat256Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat256Mask.class, null, Halffloat.class, VLENGTH,\n@@ -731,1 +731,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat256Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat256Mask.class, Halffloat.class, VLENGTH, this,\n@@ -738,1 +738,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat256Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat256Mask.class, Halffloat.class, VLENGTH, this,\n@@ -745,1 +745,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat256Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat256Mask.class, Halffloat.class, VLENGTH, this,\n@@ -755,1 +755,1 @@\n-            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat256Mask.class, short.class, VLENGTH, this,\n+            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat256Mask.class, Halffloat.class, VLENGTH, this,\n@@ -764,1 +764,1 @@\n-            return VectorSupport.test(BT_ne, Halffloat256Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_ne, Halffloat256Mask.class, Halffloat.class, VLENGTH,\n@@ -772,1 +772,1 @@\n-            return VectorSupport.test(BT_overflow, Halffloat256Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_overflow, Halffloat256Mask.class, Halffloat.class, VLENGTH,\n@@ -780,1 +780,1 @@\n-            return VectorSupport.fromBitsCoerced(Halffloat256Mask.class, short.class, VLENGTH,\n+            return VectorSupport.fromBitsCoerced(Halffloat256Mask.class, Halffloat.class, VLENGTH,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat256Vector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -701,1 +701,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat512Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat512Mask.class, null, Halffloat.class, VLENGTH,\n@@ -711,1 +711,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat512Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat512Mask.class, null, Halffloat.class, VLENGTH,\n@@ -721,1 +721,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat512Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat512Mask.class, null, Halffloat.class, VLENGTH,\n@@ -731,1 +731,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat512Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat512Mask.class, Halffloat.class, VLENGTH, this,\n@@ -738,1 +738,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat512Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat512Mask.class, Halffloat.class, VLENGTH, this,\n@@ -745,1 +745,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat512Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat512Mask.class, Halffloat.class, VLENGTH, this,\n@@ -755,1 +755,1 @@\n-            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat512Mask.class, short.class, VLENGTH, this,\n+            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat512Mask.class, Halffloat.class, VLENGTH, this,\n@@ -764,1 +764,1 @@\n-            return VectorSupport.test(BT_ne, Halffloat512Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_ne, Halffloat512Mask.class, Halffloat.class, VLENGTH,\n@@ -772,1 +772,1 @@\n-            return VectorSupport.test(BT_overflow, Halffloat512Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_overflow, Halffloat512Mask.class, Halffloat.class, VLENGTH,\n@@ -780,1 +780,1 @@\n-            return VectorSupport.fromBitsCoerced(Halffloat512Mask.class, short.class, VLENGTH,\n+            return VectorSupport.fromBitsCoerced(Halffloat512Mask.class, Halffloat.class, VLENGTH,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat512Vector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -677,1 +677,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat64Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_AND, Halffloat64Mask.class, null, Halffloat.class, VLENGTH,\n@@ -687,1 +687,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat64Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_OR, Halffloat64Mask.class, null, Halffloat.class, VLENGTH,\n@@ -697,1 +697,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat64Mask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_XOR, Halffloat64Mask.class, null, Halffloat.class, VLENGTH,\n@@ -707,1 +707,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat64Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, Halffloat64Mask.class, Halffloat.class, VLENGTH, this,\n@@ -714,1 +714,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat64Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, Halffloat64Mask.class, Halffloat.class, VLENGTH, this,\n@@ -721,1 +721,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat64Mask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, Halffloat64Mask.class, Halffloat.class, VLENGTH, this,\n@@ -731,1 +731,1 @@\n-            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat64Mask.class, short.class, VLENGTH, this,\n+            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, Halffloat64Mask.class, Halffloat.class, VLENGTH, this,\n@@ -740,1 +740,1 @@\n-            return VectorSupport.test(BT_ne, Halffloat64Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_ne, Halffloat64Mask.class, Halffloat.class, VLENGTH,\n@@ -748,1 +748,1 @@\n-            return VectorSupport.test(BT_overflow, Halffloat64Mask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_overflow, Halffloat64Mask.class, Halffloat.class, VLENGTH,\n@@ -756,1 +756,1 @@\n-            return VectorSupport.fromBitsCoerced(Halffloat64Mask.class, short.class, VLENGTH,\n+            return VectorSupport.fromBitsCoerced(Halffloat64Mask.class, Halffloat.class, VLENGTH,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Halffloat64Vector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -670,1 +670,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_AND, HalffloatMaxMask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_AND, HalffloatMaxMask.class, null, Halffloat.class, VLENGTH,\n@@ -680,1 +680,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_OR, HalffloatMaxMask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_OR, HalffloatMaxMask.class, null, Halffloat.class, VLENGTH,\n@@ -690,1 +690,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_XOR, HalffloatMaxMask.class, null, short.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_XOR, HalffloatMaxMask.class, null, Halffloat.class, VLENGTH,\n@@ -700,1 +700,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, HalffloatMaxMask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, HalffloatMaxMask.class, Halffloat.class, VLENGTH, this,\n@@ -707,1 +707,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, HalffloatMaxMask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, HalffloatMaxMask.class, Halffloat.class, VLENGTH, this,\n@@ -714,1 +714,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, HalffloatMaxMask.class, short.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, HalffloatMaxMask.class, Halffloat.class, VLENGTH, this,\n@@ -724,1 +724,1 @@\n-            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, HalffloatMaxMask.class, short.class, VLENGTH, this,\n+            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, HalffloatMaxMask.class, Halffloat.class, VLENGTH, this,\n@@ -733,1 +733,1 @@\n-            return VectorSupport.test(BT_ne, HalffloatMaxMask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_ne, HalffloatMaxMask.class, Halffloat.class, VLENGTH,\n@@ -741,1 +741,1 @@\n-            return VectorSupport.test(BT_overflow, HalffloatMaxMask.class, short.class, VLENGTH,\n+            return VectorSupport.test(BT_overflow, HalffloatMaxMask.class, Halffloat.class, VLENGTH,\n@@ -749,1 +749,1 @@\n-            return VectorSupport.fromBitsCoerced(HalffloatMaxMask.class, short.class, VLENGTH,\n+            return VectorSupport.fromBitsCoerced(HalffloatMaxMask.class, Halffloat.class, VLENGTH,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/HalffloatMaxVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -955,1 +955,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_AND, $masktype$.class, null, $bitstype$.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_AND, $masktype$.class, null, $maskbitstype$.class, VLENGTH,\n@@ -965,1 +965,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_OR, $masktype$.class, null, $bitstype$.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_OR, $masktype$.class, null, $maskbitstype$.class, VLENGTH,\n@@ -975,1 +975,1 @@\n-            return VectorSupport.binaryOp(VECTOR_OP_XOR, $masktype$.class, null, $bitstype$.class, VLENGTH,\n+            return VectorSupport.binaryOp(VECTOR_OP_XOR, $masktype$.class, null, $maskbitstype$.class, VLENGTH,\n@@ -985,1 +985,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, $masktype$.class, $bitstype$.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TRUECOUNT, $masktype$.class, $maskbitstype$.class, VLENGTH, this,\n@@ -992,1 +992,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, $masktype$.class, $bitstype$.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_FIRSTTRUE, $masktype$.class, $maskbitstype$.class, VLENGTH, this,\n@@ -999,1 +999,1 @@\n-            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, $masktype$.class, $bitstype$.class, VLENGTH, this,\n+            return (int) VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_LASTTRUE, $masktype$.class, $maskbitstype$.class, VLENGTH, this,\n@@ -1009,1 +1009,1 @@\n-            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, $masktype$.class, $bitstype$.class, VLENGTH, this,\n+            return VectorSupport.maskReductionCoerced(VECTOR_OP_MASK_TOLONG, $masktype$.class, $maskbitstype$.class, VLENGTH, this,\n@@ -1018,1 +1018,1 @@\n-            return VectorSupport.test(BT_ne, $masktype$.class, $bitstype$.class, VLENGTH,\n+            return VectorSupport.test(BT_ne, $masktype$.class, $maskbitstype$.class, VLENGTH,\n@@ -1026,1 +1026,1 @@\n-            return VectorSupport.test(BT_overflow, $masktype$.class, $bitstype$.class, VLENGTH,\n+            return VectorSupport.test(BT_overflow, $masktype$.class, $maskbitstype$.class, VLENGTH,\n@@ -1034,1 +1034,1 @@\n-            return VectorSupport.fromBitsCoerced($masktype$.class, $bitstype$.class, VLENGTH,\n+            return VectorSupport.fromBitsCoerced($masktype$.class, $maskbitstype$.class, VLENGTH,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -78,0 +78,1 @@\n+  maskbitstype=$type\n@@ -121,0 +122,1 @@\n+      maskbitstype=int\n@@ -129,0 +131,1 @@\n+      maskbitstype=long\n@@ -137,0 +140,1 @@\n+      maskbitstype=Halffloat\n@@ -147,1 +151,1 @@\n-  args=\"$args -Dbitstype=$bitstype -DBitstype=$Bitstype -DBoxbitstype=$Boxbitstype\"\n+  args=\"$args -Dbitstype=$bitstype -Dmaskbitstype=$maskbitstype -DBitstype=$Bitstype -DBoxbitstype=$Boxbitstype\"\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/gen-src.sh","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}