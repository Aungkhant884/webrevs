[{"commit":{"message":"8283709: Review comments resolved."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp"}],"sha":"b4ea07937755731f7080c821e2a77b0db3906645"},{"commit":{"message":"8283709: Review comments resolved."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"}],"sha":"f2db1ee444d4c88c2c7554cb9462cdf15b87fde2"},{"commit":{"message":"Merge branch 'vectorIntrinsics' of http:\/\/github.com\/openjdk\/panama-vector into JDK-8283709"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.amd64\/src\/jdk\/vm\/ci\/amd64\/AMD64.java"}],"sha":"3fe11c66cb5a21cb013073dc2443d3cb64b9674e"},{"commit":{"message":"8283709: Integer.bitCount((int)(byte_val) & 0xFF) is folded as LoadUB, this is auto-vectorized as load from Boolean vector. Adding missing types in macroassembler to cover these cases."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"05772da1f8caea5c9a5f27d25de96e5bc6ede69d"},{"commit":{"message":"8283709: Removed redundant downcasting operation needed only for auto-vectorized generated IR."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"aab71a7a2bf0991c910d201706b5af414294f924"},{"commit":{"message":"8283709: Removing redundant flags operands."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"f1ddd3342c2defccbf18b3d93d2a9a235c087eb4"},{"commit":{"message":"8283709: Adding predicated vector popcount patterns for applicable targets."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"87495197423ae0af7b287f262997cf5d637d9dcd"},{"commit":{"message":"8283709: Adding new CPU feature AVX512_BITALG to JVMCI feature set."},"files":[{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.amd64\/src\/jdk\/vm\/ci\/amd64\/AMD64.java"}],"sha":"fce9fcbfde64c7fa109edeff9b9718516f7faaaf"},{"commit":{"message":"8283709: Adding type specific check in PopCountVI cost model."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp"}],"sha":"f2cd9cab8ed4005548a9013606c203a692e3bb11"},{"commit":{"message":"8283709: Updating PopCountVI instruction size cost model."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp"}],"sha":"de702d29763710689828ce9c6bd5ac99d5b61aeb"},{"commit":{"message":"8283709: Add x86 back-end implementation for bit BIT_COUNT operation"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"}],"sha":"5e2c21da92f6ad0407c3f5d54c6dbc294d32310e"}]