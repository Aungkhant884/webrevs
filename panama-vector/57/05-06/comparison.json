{"files":[{"patch":"@@ -130,0 +130,11 @@\n+    @ForceInline\n+    @SuppressWarnings(\"unchecked\")\n+    \/*package-private*\/ final\n+    <F> AbstractVector<F> check(VectorMask<F> mask) {\n+        VectorSpecies<F> maskSpecies = mask.vectorSpecies();\n+        if (maskSpecies != vspecies()) {\n+            throw AbstractSpecies.checkFailed(mask, this);\n+        }\n+        return (AbstractVector<F>) this;\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -646,5 +646,1 @@\n-        VectorSpecies<Byte> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<Byte>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -656,5 +656,1 @@\n-        VectorSpecies<Double> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<Double>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -656,5 +656,1 @@\n-        VectorSpecies<Float> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<Float>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -646,5 +646,1 @@\n-        VectorSpecies<Integer> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<Integer>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -604,5 +604,1 @@\n-        VectorSpecies<Long> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<Long>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -646,5 +646,1 @@\n-        VectorSpecies<Short> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<Short>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -704,5 +704,1 @@\n-        VectorSpecies<$Boxtype$> maskSpecies =\n-            ((jdk.incubator.vector.VectorMask<$Boxtype$>) m).vectorSpecies();\n-        if (maskSpecies != vspecies()) {\n-            throw AbstractSpecies.checkFailed(maskSpecies, vspecies());\n-        }\n+        check(m);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}